
/home/glinsi/git/NyuziProcessor/software/apps/hello_world/hello_world:	file format ELF32-nyuzi

Disassembly of section .text:
0000000000002000 main:
    2000:	de 03 ff 05 	add_i sp, sp, -64
    2004:	fe f3 00 88 	store_32 ra, 60(sp)
    2008:	00 00 00 4f 	movehi s0, 0
    200c:	00 20 0e 00 	or s0, s0, 904
    2010:	e3 00 00 f8 	call 908 <puts>
    2014:	00 00 00 0f 	move s0, 0
    2018:	fe f3 00 a8 	load_32 ra, 60(sp)
    201c:	de 03 01 05 	add_i sp, sp, 64
    2020:	1f 00 00 f0 	ret

0000000000002024 printf:
    2024:	de 03 ff 05 	add_i sp, sp, -64
    2028:	fe f3 00 88 	store_32 ra, 60(sp)
    202c:	05 00 00 4f 	movehi s0, 5
    2030:	3e 00 01 a8 	load_32 s1, 64(sp)
    2034:	5e 10 01 05 	add_i s2, sp, 68
    2038:	5e e0 00 88 	store_32 s2, 56(sp)
    203c:	00 00 40 00 	or s0, s0, 4096
    2040:	00 00 00 a8 	load_32 s0, (s0)
    2044:	c9 14 00 f8 	call 21284 <vfprintf>
    2048:	00 00 00 0f 	move s0, 0
    204c:	fe f3 00 a8 	load_32 ra, 60(sp)
    2050:	de 03 01 05 	add_i sp, sp, 64
    2054:	1f 00 00 f0 	ret

0000000000002058 sprintf:
    2058:	de 03 ff 05 	add_i sp, sp, -64
    205c:	1e f3 00 88 	store_32 s24, 60(sp)
    2060:	3e e3 00 88 	store_32 s25, 56(sp)
    2064:	5e d3 00 88 	store_32 s26, 52(sp)
    2068:	fe c3 00 88 	store_32 ra, 48(sp)
    206c:	1e 43 00 05 	add_i s24, sp, 16
    2070:	3e 10 01 a8 	load_32 s1, 68(sp)
    2074:	1e 00 01 a8 	load_32 s0, 64(sp)
    2078:	40 03 00 0f 	move s26, 0
    207c:	1e 40 00 88 	store_32 s0, 16(sp)
    2080:	1f fc 7f 4f 	movehi s0, 262143
    2084:	38 13 00 00 	or s25, s24, 4
    2088:	5e 20 01 05 	add_i s2, sp, 72
    208c:	00 fc 7f 00 	or s0, s0, 8191
    2090:	59 03 00 88 	store_32 s26, (s25)
    2094:	1e 60 00 88 	store_32 s0, 24(sp)
    2098:	5e 73 00 88 	store_32 s26, 28(sp)
    209c:	5e 90 00 88 	store_32 s2, 36(sp)
    20a0:	00 00 fc c0 	move s0, s24
    20a4:	b1 14 00 f8 	call 21188 <vfprintf>
    20a8:	05 00 00 4f 	movehi s0, 5
    20ac:	5e b3 00 88 	store_32 s26, 44(sp)
    20b0:	00 00 40 00 	or s0, s0, 4096
    20b4:	00 00 00 a8 	load_32 s0, (s0)
    20b8:	00 00 1c c1 	cmpne_i s0, s0, s24
    20bc:	40 00 00 f4 	bnz s0, 8 <sprintf+0x6c>
    20c0:	0c 00 00 f6 	b 48 <sprintf+0x98>
    20c4:	1e 40 00 a8 	load_32 s0, 16(sp)
    20c8:	e0 01 00 f2 	bz s0, 60 <sprintf+0xac>
    20cc:	39 00 00 a8 	load_32 s1, (s25)
    20d0:	5e 60 00 a8 	load_32 s2, 24(sp)
    20d4:	41 00 31 c1 	cmpge_i s2, s1, s2
    20d8:	e2 01 00 f4 	bnz s2, 60 <sprintf+0xbc>
    20dc:	00 80 50 c0 	add_i s0, s0, s1
    20e0:	21 04 00 05 	add_i s1, s1, 1
    20e4:	39 00 00 88 	store_32 s1, (s25)
    20e8:	40 03 00 82 	store_8 s26, (s0)
    20ec:	0a 00 00 f6 	b 40 <sprintf+0xbc>
    20f0:	1e ac 00 05 	add_i s0, sp, 43
    20f4:	5e af 00 82 	store_8 s26, 43(sp)
    20f8:	20 04 00 0f 	move s1, 1
    20fc:	ac 17 00 f8 	call 24240 <write_console>
    2100:	05 00 00 f6 	b 20 <sprintf+0xbc>
    2104:	1e 70 00 a8 	load_32 s0, 28(sp)
    2108:	3e b0 00 05 	add_i s1, sp, 44
    210c:	40 04 00 0f 	move s2, 1
    2110:	8f 19 00 f8 	call 26172 <write>
    2114:	19 00 00 a8 	load_32 s0, (s25)
    2118:	fe c3 00 a8 	load_32 ra, 48(sp)
    211c:	5e d3 00 a8 	load_32 s26, 52(sp)
    2120:	3e e3 00 a8 	load_32 s25, 56(sp)
    2124:	1e f3 00 a8 	load_32 s24, 60(sp)
    2128:	de 03 01 05 	add_i sp, sp, 64
    212c:	1f 00 00 f0 	ret

0000000000002130 fputc:
    2130:	de 03 ff 05 	add_i sp, sp, -64
    2134:	fe f3 00 88 	store_32 ra, 60(sp)
    2138:	45 00 00 4f 	movehi s2, 5
    213c:	1e e0 00 88 	store_32 s0, 56(sp)
    2140:	42 00 40 00 	or s2, s2, 4096
    2144:	42 00 00 a8 	load_32 s2, (s2)
    2148:	42 80 10 c1 	cmpne_i s2, s2, s1
    214c:	42 00 00 f4 	bnz s2, 8 <fputc+0x24>
    2150:	0f 00 00 f6 	b 60 <fputc+0x5c>
    2154:	41 00 00 a8 	load_32 s2, (s1)
    2158:	a2 02 00 f2 	bz s2, 84 <fputc+0x7c>
    215c:	61 10 00 a8 	load_32 s3, 4(s1)
    2160:	81 20 00 a8 	load_32 s4, 8(s1)
    2164:	83 00 32 c1 	cmpge_i s4, s3, s4
    2168:	a4 00 00 f4 	bnz s4, 20 <fputc+0x4c>
    216c:	42 80 51 c0 	add_i s2, s2, s3
    2170:	63 04 00 05 	add_i s3, s3, 1
    2174:	61 10 00 88 	store_32 s3, 4(s1)
    2178:	02 00 00 82 	store_8 s0, (s2)
    217c:	00 04 00 0f 	move s0, 1
    2180:	fe f3 00 a8 	load_32 ra, 60(sp)
    2184:	de 03 01 05 	add_i sp, sp, 64
    2188:	1f 00 00 f0 	ret
    218c:	1e dc 00 82 	store_8 s0, 55(sp)
    2190:	1e dc 00 05 	add_i s0, sp, 55
    2194:	20 04 00 0f 	move s1, 1
    2198:	85 17 00 f8 	call 24084 <write_console>
    219c:	00 04 00 0f 	move s0, 1
    21a0:	fe f3 00 a8 	load_32 ra, 60(sp)
    21a4:	de 03 01 05 	add_i sp, sp, 64
    21a8:	1f 00 00 f0 	ret
    21ac:	01 30 00 a8 	load_32 s0, 12(s1)
    21b0:	3e e0 00 05 	add_i s1, sp, 56
    21b4:	40 04 00 0f 	move s2, 1
    21b8:	65 19 00 f8 	call 26004 <write>
    21bc:	00 04 00 0f 	move s0, 1
    21c0:	fe f3 00 a8 	load_32 ra, 60(sp)
    21c4:	de 03 01 05 	add_i sp, sp, 64
    21c8:	1f 00 00 f0 	ret

00000000000021cc snprintf:
    21cc:	de 03 ff 05 	add_i sp, sp, -64
    21d0:	1e f3 00 88 	store_32 s24, 60(sp)
    21d4:	3e e3 00 88 	store_32 s25, 56(sp)
    21d8:	5e d3 00 88 	store_32 s26, 52(sp)
    21dc:	fe c3 00 88 	store_32 ra, 48(sp)
    21e0:	1e 43 00 05 	add_i s24, sp, 16
    21e4:	3e 20 01 a8 	load_32 s1, 72(sp)
    21e8:	1e 10 01 a8 	load_32 s0, 68(sp)
    21ec:	40 03 00 0f 	move s26, 0
    21f0:	5e 00 01 a8 	load_32 s2, 64(sp)
    21f4:	38 13 00 00 	or s25, s24, 4
    21f8:	5e 40 00 88 	store_32 s2, 16(sp)
    21fc:	5e 30 01 05 	add_i s2, sp, 76
    2200:	59 03 00 88 	store_32 s26, (s25)
    2204:	1e 60 00 88 	store_32 s0, 24(sp)
    2208:	5e 73 00 88 	store_32 s26, 28(sp)
    220c:	5e 90 00 88 	store_32 s2, 36(sp)
    2210:	00 00 fc c0 	move s0, s24
    2214:	55 14 00 f8 	call 20820 <vfprintf>
    2218:	05 00 00 4f 	movehi s0, 5
    221c:	5e b3 00 88 	store_32 s26, 44(sp)
    2220:	00 00 40 00 	or s0, s0, 4096
    2224:	00 00 00 a8 	load_32 s0, (s0)
    2228:	00 00 1c c1 	cmpne_i s0, s0, s24
    222c:	40 00 00 f4 	bnz s0, 8 <snprintf+0x68>
    2230:	0c 00 00 f6 	b 48 <snprintf+0x94>
    2234:	1e 40 00 a8 	load_32 s0, 16(sp)
    2238:	e0 01 00 f2 	bz s0, 60 <snprintf+0xa8>
    223c:	39 00 00 a8 	load_32 s1, (s25)
    2240:	5e 60 00 a8 	load_32 s2, 24(sp)
    2244:	41 00 31 c1 	cmpge_i s2, s1, s2
    2248:	e2 01 00 f4 	bnz s2, 60 <snprintf+0xb8>
    224c:	00 80 50 c0 	add_i s0, s0, s1
    2250:	21 04 00 05 	add_i s1, s1, 1
    2254:	39 00 00 88 	store_32 s1, (s25)
    2258:	40 03 00 82 	store_8 s26, (s0)
    225c:	0a 00 00 f6 	b 40 <snprintf+0xb8>
    2260:	1e ac 00 05 	add_i s0, sp, 43
    2264:	5e af 00 82 	store_8 s26, 43(sp)
    2268:	20 04 00 0f 	move s1, 1
    226c:	50 17 00 f8 	call 23872 <write_console>
    2270:	05 00 00 f6 	b 20 <snprintf+0xb8>
    2274:	1e 70 00 a8 	load_32 s0, 28(sp)
    2278:	3e b0 00 05 	add_i s1, sp, 44
    227c:	40 04 00 0f 	move s2, 1
    2280:	33 19 00 f8 	call 25804 <write>
    2284:	19 00 00 a8 	load_32 s0, (s25)
    2288:	fe c3 00 a8 	load_32 ra, 48(sp)
    228c:	5e d3 00 a8 	load_32 s26, 52(sp)
    2290:	3e e3 00 a8 	load_32 s25, 56(sp)
    2294:	1e f3 00 a8 	load_32 s24, 60(sp)
    2298:	de 03 01 05 	add_i sp, sp, 64
    229c:	1f 00 00 f0 	ret

00000000000022a0 vsnprintf:
    22a0:	de 03 ff 05 	add_i sp, sp, -64
    22a4:	1e f3 00 88 	store_32 s24, 60(sp)
    22a8:	3e e3 00 88 	store_32 s25, 56(sp)
    22ac:	5e d3 00 88 	store_32 s26, 52(sp)
    22b0:	fe c3 00 88 	store_32 ra, 48(sp)
    22b4:	1e 63 00 05 	add_i s24, sp, 24
    22b8:	1e 60 00 88 	store_32 s0, 24(sp)
    22bc:	40 03 00 0f 	move s26, 0
    22c0:	38 13 00 00 	or s25, s24, 4
    22c4:	59 03 00 88 	store_32 s26, (s25)
    22c8:	3e 80 00 88 	store_32 s1, 32(sp)
    22cc:	5e 93 00 88 	store_32 s26, 36(sp)
    22d0:	00 00 fc c0 	move s0, s24
    22d4:	20 00 f1 c0 	move s1, s2
    22d8:	40 80 f1 c0 	move s2, s3
    22dc:	23 14 00 f8 	call 20620 <vfprintf>
    22e0:	05 00 00 4f 	movehi s0, 5
    22e4:	5e b3 00 88 	store_32 s26, 44(sp)
    22e8:	00 00 40 00 	or s0, s0, 4096
    22ec:	00 00 00 a8 	load_32 s0, (s0)
    22f0:	00 00 1c c1 	cmpne_i s0, s0, s24
    22f4:	40 00 00 f4 	bnz s0, 8 <vsnprintf+0x5c>
    22f8:	0c 00 00 f6 	b 48 <vsnprintf+0x88>
    22fc:	1e 60 00 a8 	load_32 s0, 24(sp)
    2300:	e0 01 00 f2 	bz s0, 60 <vsnprintf+0x9c>
    2304:	39 00 00 a8 	load_32 s1, (s25)
    2308:	5e 80 00 a8 	load_32 s2, 32(sp)
    230c:	41 00 31 c1 	cmpge_i s2, s1, s2
    2310:	e2 01 00 f4 	bnz s2, 60 <vsnprintf+0xac>
    2314:	00 80 50 c0 	add_i s0, s0, s1
    2318:	21 04 00 05 	add_i s1, s1, 1
    231c:	39 00 00 88 	store_32 s1, (s25)
    2320:	40 03 00 82 	store_8 s26, (s0)
    2324:	0a 00 00 f6 	b 40 <vsnprintf+0xac>
    2328:	1e ac 00 05 	add_i s0, sp, 43
    232c:	5e af 00 82 	store_8 s26, 43(sp)
    2330:	20 04 00 0f 	move s1, 1
    2334:	1e 17 00 f8 	call 23672 <write_console>
    2338:	05 00 00 f6 	b 20 <vsnprintf+0xac>
    233c:	1e 90 00 a8 	load_32 s0, 36(sp)
    2340:	3e b0 00 05 	add_i s1, sp, 44
    2344:	40 04 00 0f 	move s2, 1
    2348:	01 19 00 f8 	call 25604 <write>
    234c:	19 00 00 a8 	load_32 s0, (s25)
    2350:	fe c3 00 a8 	load_32 ra, 48(sp)
    2354:	5e d3 00 a8 	load_32 s26, 52(sp)
    2358:	3e e3 00 a8 	load_32 s25, 56(sp)
    235c:	1e f3 00 a8 	load_32 s24, 60(sp)
    2360:	de 03 01 05 	add_i sp, sp, 64
    2364:	1f 00 00 f0 	ret

0000000000002368 putchar:
    2368:	de 03 ff 05 	add_i sp, sp, -64
    236c:	1e f3 00 88 	store_32 s24, 60(sp)
    2370:	fe e3 00 88 	store_32 ra, 56(sp)
    2374:	00 07 00 0f 	move s24, 1
    2378:	1e dc 00 82 	store_8 s0, 55(sp)
    237c:	1e dc 00 05 	add_i s0, sp, 55
    2380:	20 00 fc c0 	move s1, s24
    2384:	0a 17 00 f8 	call 23592 <write_console>
    2388:	00 00 fc c0 	move s0, s24
    238c:	fe e3 00 a8 	load_32 ra, 56(sp)
    2390:	1e f3 00 a8 	load_32 s24, 60(sp)
    2394:	de 03 01 05 	add_i sp, sp, 64
    2398:	1f 00 00 f0 	ret

000000000000239c puts:
    239c:	de 03 ff 05 	add_i sp, sp, -64
    23a0:	1e f3 00 88 	store_32 s24, 60(sp)
    23a4:	3e e3 00 88 	store_32 s25, 56(sp)
    23a8:	5e d3 00 88 	store_32 s26, 52(sp)
    23ac:	7e c3 00 88 	store_32 s27, 48(sp)
    23b0:	fe b3 00 88 	store_32 ra, 44(sp)
    23b4:	00 03 f0 c0 	move s24, s0
    23b8:	18 00 00 a0 	load_u8 s0, (s24)
    23bc:	1e 93 00 88 	store_32 s24, 36(sp)
    23c0:	80 01 00 f2 	bz s0, 48 <puts+0x54>
    23c4:	7e 93 00 a8 	load_32 s27, 36(sp)
    23c8:	3e ab 00 05 	add_i s25, sp, 42
    23cc:	40 07 00 0f 	move s26, 1
    23d0:	1e a8 00 82 	store_8 s0, 42(sp)
    23d4:	00 80 fc c0 	move s0, s25
    23d8:	20 00 fd c0 	move s1, s26
    23dc:	f4 16 00 f8 	call 23504 <write_console>
    23e0:	1b 07 00 05 	add_i s24, s27, 1
    23e4:	1b 04 00 a0 	load_u8 s0, 1(s27)
    23e8:	60 03 fc c0 	move s27, s24
    23ec:	20 ff ff f5 	bnz s0, -28 <puts+0x34>
    23f0:	20 07 00 0f 	move s25, 1
    23f4:	00 28 00 0f 	move s0, 10
    23f8:	1e ac 00 82 	store_8 s0, 43(sp)
    23fc:	1e ac 00 05 	add_i s0, sp, 43
    2400:	20 80 fc c0 	move s1, s25
    2404:	ea 16 00 f8 	call 23464 <write_console>
    2408:	1e 90 00 a8 	load_32 s0, 36(sp)
    240c:	fe b3 00 a8 	load_32 ra, 44(sp)
    2410:	7e c3 00 a8 	load_32 s27, 48(sp)
    2414:	5e d3 00 a8 	load_32 s26, 52(sp)
    2418:	19 00 60 c0 	sub_i s0, s25, s0
    241c:	3e e3 00 a8 	load_32 s25, 56(sp)
    2420:	00 00 5c c0 	add_i s0, s0, s24
    2424:	1e f3 00 a8 	load_32 s24, 60(sp)
    2428:	de 03 01 05 	add_i sp, sp, 64
    242c:	1f 00 00 f0 	ret

0000000000002430 fputs:
    2430:	de 03 ff 05 	add_i sp, sp, -64
    2434:	1e f3 00 88 	store_32 s24, 60(sp)
    2438:	3e e3 00 88 	store_32 s25, 56(sp)
    243c:	5e d3 00 88 	store_32 s26, 52(sp)
    2440:	7e c3 00 88 	store_32 s27, 48(sp)
    2444:	fe b3 00 88 	store_32 ra, 44(sp)
    2448:	80 00 00 a0 	load_u8 s4, (s0)
    244c:	20 83 f0 c0 	move s25, s1
    2450:	1e 60 00 88 	store_32 s0, 24(sp)
    2454:	20 00 f0 c0 	move s1, s0
    2458:	e4 05 00 f2 	bz s4, 188 <fputs+0xe4>
    245c:	25 00 00 4f 	movehi s1, 5
    2460:	1e 9c 00 05 	add_i s0, sp, 39
    2464:	1e 80 00 88 	store_32 s0, 32(sp)
    2468:	1e a0 00 05 	add_i s0, sp, 40
    246c:	1e 70 00 88 	store_32 s0, 28(sp)
    2470:	5e 63 00 a8 	load_32 s26, 24(sp)
    2474:	01 03 40 00 	or s24, s1, 4096
    2478:	60 07 00 0f 	move s27, 1
    247c:	20 00 d2 c1 	sext_8 s1, s4
    2480:	3e a0 00 88 	store_32 s1, 40(sp)
    2484:	38 00 00 a8 	load_32 s1, (s24)
    2488:	21 80 1c c1 	cmpne_i s1, s1, s25
    248c:	41 00 00 f4 	bnz s1, 8 <fputs+0x64>
    2490:	10 00 00 f6 	b 64 <fputs+0xa0>
    2494:	39 00 00 a8 	load_32 s1, (s25)
    2498:	e1 02 00 f2 	bz s1, 92 <fputs+0xc4>
    249c:	59 10 00 a8 	load_32 s2, 4(s25)
    24a0:	79 20 00 a8 	load_32 s3, 8(s25)
    24a4:	62 80 31 c1 	cmpge_i s3, s2, s3
    24a8:	a3 00 00 f4 	bnz s3, 20 <fputs+0x8c>
    24ac:	21 00 51 c0 	add_i s1, s1, s2
    24b0:	42 04 00 05 	add_i s2, s2, 1
    24b4:	59 10 00 88 	store_32 s2, 4(s25)
    24b8:	81 00 00 82 	store_8 s4, (s1)
    24bc:	3a 04 00 05 	add_i s1, s26, 1
    24c0:	9a 04 00 a0 	load_u8 s4, 1(s26)
    24c4:	40 83 f0 c0 	move s26, s1
    24c8:	a4 fd ff f5 	bnz s4, -76 <fputs+0x4c>
    24cc:	12 00 00 f6 	b 72 <fputs+0xe4>
    24d0:	9e 9c 00 82 	store_8 s4, 39(sp)
    24d4:	1e 80 00 a8 	load_32 s0, 32(sp)
    24d8:	20 80 fd c0 	move s1, s27
    24dc:	b4 16 00 f8 	call 23248 <write_console>
    24e0:	3a 04 00 05 	add_i s1, s26, 1
    24e4:	9a 04 00 a0 	load_u8 s4, 1(s26)
    24e8:	40 83 f0 c0 	move s26, s1
    24ec:	84 fc ff f5 	bnz s4, -112 <fputs+0x4c>
    24f0:	09 00 00 f6 	b 36 <fputs+0xe4>
    24f4:	19 30 00 a8 	load_32 s0, 12(s25)
    24f8:	3e 70 00 a8 	load_32 s1, 28(sp)
    24fc:	40 80 fd c0 	move s2, s27
    2500:	93 18 00 f8 	call 25164 <write>
    2504:	3a 04 00 05 	add_i s1, s26, 1
    2508:	9a 04 00 a0 	load_u8 s4, 1(s26)
    250c:	40 83 f0 c0 	move s26, s1
    2510:	64 fb ff f5 	bnz s4, -148 <fputs+0x4c>
    2514:	1e 60 00 a8 	load_32 s0, 24(sp)
    2518:	fe b3 00 a8 	load_32 ra, 44(sp)
    251c:	7e c3 00 a8 	load_32 s27, 48(sp)
    2520:	5e d3 00 a8 	load_32 s26, 52(sp)
    2524:	3e e3 00 a8 	load_32 s25, 56(sp)
    2528:	01 00 60 c0 	sub_i s0, s1, s0
    252c:	1e f3 00 a8 	load_32 s24, 60(sp)
    2530:	de 03 01 05 	add_i sp, sp, 64
    2534:	1f 00 00 f0 	ret

0000000000002538 fgetc:
    2538:	de 03 ff 05 	add_i sp, sp, -64
    253c:	fe f3 00 88 	store_32 ra, 60(sp)
    2540:	00 30 00 a8 	load_32 s0, 12(s0)
    2544:	3e ec 00 05 	add_i s1, sp, 59
    2548:	40 04 00 0f 	move s2, 1
    254c:	fe 17 00 f8 	call 24568 <read>
    2550:	20 00 00 14 	cmplt_i s1, s0, 0
    2554:	1e ec 00 a0 	load_u8 s0, 59(sp)
    2558:	41 00 00 f4 	bnz s1, 8 <fgetc+0x28>
    255c:	02 00 00 f6 	b 8 <fgetc+0x2c>
    2560:	00 fc ff 0f 	move s0, -1
    2564:	fe f3 00 a8 	load_32 ra, 60(sp)
    2568:	de 03 01 05 	add_i sp, sp, 64
    256c:	1f 00 00 f0 	ret

0000000000002570 fopen:
    2570:	de 03 ff 05 	add_i sp, sp, -64
    2574:	1e f3 00 88 	store_32 s24, 60(sp)
    2578:	3e e3 00 88 	store_32 s25, 56(sp)
    257c:	fe d3 00 88 	store_32 ra, 52(sp)
    2580:	00 03 00 0f 	move s24, 0
    2584:	20 00 fc c0 	move s1, s24
    2588:	b2 16 00 f8 	call 23240 <open>
    258c:	20 03 f0 c0 	move s25, s0
    2590:	19 00 00 14 	cmplt_i s0, s25, 0
    2594:	e0 00 00 f4 	bnz s0, 28 <fopen+0x40>
    2598:	00 40 00 0f 	move s0, 16
    259c:	98 00 00 f8 	call 608 <malloc>
    25a0:	00 03 f0 c0 	move s24, s0
    25a4:	00 00 00 0f 	move s0, 0
    25a8:	18 00 00 88 	store_32 s0, (s24)
    25ac:	38 33 00 88 	store_32 s25, 12(s24)
    25b0:	00 00 fc c0 	move s0, s24
    25b4:	fe d3 00 a8 	load_32 ra, 52(sp)
    25b8:	3e e3 00 a8 	load_32 s25, 56(sp)
    25bc:	1e f3 00 a8 	load_32 s24, 60(sp)
    25c0:	de 03 01 05 	add_i sp, sp, 64
    25c4:	1f 00 00 f0 	ret

00000000000025c8 fwrite:
    25c8:	de 03 ff 05 	add_i sp, sp, -64
    25cc:	1e f3 00 88 	store_32 s24, 60(sp)
    25d0:	3e e3 00 88 	store_32 s25, 56(sp)
    25d4:	5e d3 00 88 	store_32 s26, 52(sp)
    25d8:	7e c3 00 88 	store_32 s27, 48(sp)
    25dc:	fe b3 00 88 	store_32 ra, 44(sp)
    25e0:	5e 50 00 88 	store_32 s2, 20(sp)
    25e4:	20 83 f1 c0 	move s25, s3
    25e8:	62 83 70 c0 	mull_i s27, s2, s1
    25ec:	40 03 f0 c0 	move s26, s0
    25f0:	5b 05 00 f2 	bz s27, 168 <fwrite+0xd0>
    25f4:	05 00 00 4f 	movehi s0, 5
    25f8:	00 03 40 00 	or s24, s0, 4096
    25fc:	1e 9c 00 05 	add_i s0, sp, 39
    2600:	1e 70 00 88 	store_32 s0, 28(sp)
    2604:	00 04 00 0f 	move s0, 1
    2608:	1e 80 00 88 	store_32 s0, 32(sp)
    260c:	1e a0 00 05 	add_i s0, sp, 40
    2610:	1e 60 00 88 	store_32 s0, 24(sp)
    2614:	1a 00 00 a2 	load_s8 s0, (s26)
    2618:	7b ff ff 05 	add_i s27, s27, -1
    261c:	1e a0 00 88 	store_32 s0, 40(sp)
    2620:	38 00 00 a8 	load_32 s1, (s24)
    2624:	21 80 1c c1 	cmpne_i s1, s1, s25
    2628:	41 00 00 f4 	bnz s1, 8 <fwrite+0x68>
    262c:	0e 00 00 f6 	b 56 <fwrite+0x9c>
    2630:	39 00 00 a8 	load_32 s1, (s25)
    2634:	61 02 00 f2 	bz s1, 76 <fwrite+0xb8>
    2638:	59 10 00 a8 	load_32 s2, 4(s25)
    263c:	79 20 00 a8 	load_32 s3, 8(s25)
    2640:	62 80 31 c1 	cmpge_i s3, s2, s3
    2644:	a3 00 00 f4 	bnz s3, 20 <fwrite+0x90>
    2648:	21 00 51 c0 	add_i s1, s1, s2
    264c:	42 04 00 05 	add_i s2, s2, 1
    2650:	59 10 00 88 	store_32 s2, 4(s25)
    2654:	01 00 00 82 	store_8 s0, (s1)
    2658:	5a 07 00 05 	add_i s26, s26, 1
    265c:	db fd ff f5 	bnz s27, -72 <fwrite+0x4c>
    2660:	0e 00 00 f6 	b 56 <fwrite+0xd0>
    2664:	1e 9c 00 82 	store_8 s0, 39(sp)
    2668:	1e 70 00 a8 	load_32 s0, 28(sp)
    266c:	3e 80 00 a8 	load_32 s1, 32(sp)
    2670:	4f 16 00 f8 	call 22844 <write_console>
    2674:	5a 07 00 05 	add_i s26, s26, 1
    2678:	fb fc ff f5 	bnz s27, -100 <fwrite+0x4c>
    267c:	07 00 00 f6 	b 28 <fwrite+0xd0>
    2680:	19 30 00 a8 	load_32 s0, 12(s25)
    2684:	3e 60 00 a8 	load_32 s1, 24(sp)
    2688:	5e 80 00 a8 	load_32 s2, 32(sp)
    268c:	30 18 00 f8 	call 24768 <write>
    2690:	5a 07 00 05 	add_i s26, s26, 1
    2694:	1b fc ff f5 	bnz s27, -128 <fwrite+0x4c>
    2698:	1e 50 00 a8 	load_32 s0, 20(sp)
    269c:	fe b3 00 a8 	load_32 ra, 44(sp)
    26a0:	7e c3 00 a8 	load_32 s27, 48(sp)
    26a4:	5e d3 00 a8 	load_32 s26, 52(sp)
    26a8:	3e e3 00 a8 	load_32 s25, 56(sp)
    26ac:	1e f3 00 a8 	load_32 s24, 60(sp)
    26b0:	de 03 01 05 	add_i sp, sp, 64
    26b4:	1f 00 00 f0 	ret

00000000000026b8 fread:
    26b8:	de 03 ff 05 	add_i sp, sp, -64
    26bc:	1e f3 00 88 	store_32 s24, 60(sp)
    26c0:	fe e3 00 88 	store_32 ra, 56(sp)
    26c4:	00 83 f0 c0 	move s24, s1
    26c8:	20 00 f0 c0 	move s1, s0
    26cc:	03 30 00 a8 	load_32 s0, 12(s3)
    26d0:	42 00 7c c0 	mull_i s2, s2, s24
    26d4:	9c 17 00 f8 	call 24176 <read>
    26d8:	20 00 00 14 	cmplt_i s1, s0, 0
    26dc:	e1 00 00 f4 	bnz s1, 28 <fread+0x40>
    26e0:	20 00 fc c0 	move s1, s24
    26e4:	6d 1d 00 f8 	call 30132 <__udivsi3>
    26e8:	fe e3 00 a8 	load_32 ra, 56(sp)
    26ec:	1e f3 00 a8 	load_32 s24, 60(sp)
    26f0:	de 03 01 05 	add_i sp, sp, 64
    26f4:	1f 00 00 f0 	ret
    26f8:	00 00 00 0f 	move s0, 0
    26fc:	fe e3 00 a8 	load_32 ra, 56(sp)
    2700:	1e f3 00 a8 	load_32 s24, 60(sp)
    2704:	de 03 01 05 	add_i sp, sp, 64
    2708:	1f 00 00 f0 	ret

000000000000270c fclose:
    270c:	de 03 ff 05 	add_i sp, sp, -64
    2710:	1e f3 00 88 	store_32 s24, 60(sp)
    2714:	3e e3 00 88 	store_32 s25, 56(sp)
    2718:	fe d3 00 88 	store_32 ra, 52(sp)
    271c:	00 03 f0 c0 	move s24, s0
    2720:	18 30 00 a8 	load_32 s0, 12(s24)
    2724:	74 17 00 f8 	call 24016 <close>
    2728:	20 03 f0 c0 	move s25, s0
    272c:	00 00 fc c0 	move s0, s24
    2730:	bd 07 00 f8 	call 7924 <free>
    2734:	00 80 fc c0 	move s0, s25
    2738:	fe d3 00 a8 	load_32 ra, 52(sp)
    273c:	3e e3 00 a8 	load_32 s25, 56(sp)
    2740:	1e f3 00 a8 	load_32 s24, 60(sp)
    2744:	de 03 01 05 	add_i sp, sp, 64
    2748:	1f 00 00 f0 	ret

000000000000274c fseek:
    274c:	de 03 ff 05 	add_i sp, sp, -64
    2750:	fe f3 00 88 	store_32 ra, 60(sp)
    2754:	00 30 00 a8 	load_32 s0, 12(s0)
    2758:	07 18 00 f8 	call 24604 <lseek>
    275c:	fe f3 00 a8 	load_32 ra, 60(sp)
    2760:	de 03 01 05 	add_i sp, sp, 64
    2764:	1f 00 00 f0 	ret

0000000000002768 ftell:
    2768:	de 03 ff 05 	add_i sp, sp, -64
    276c:	fe f3 00 88 	store_32 ra, 60(sp)
    2770:	00 30 00 a8 	load_32 s0, 12(s0)
    2774:	20 00 00 0f 	move s1, 0
    2778:	40 04 00 0f 	move s2, 1
    277c:	fe 17 00 f8 	call 24568 <lseek>
    2780:	fe f3 00 a8 	load_32 ra, 60(sp)
    2784:	de 03 01 05 	add_i sp, sp, 64
    2788:	1f 00 00 f0 	ret

000000000000278c fprintf:
    278c:	de 03 ff 05 	add_i sp, sp, -64
    2790:	fe f3 00 88 	store_32 ra, 60(sp)
    2794:	1e 00 01 a8 	load_32 s0, 64(sp)
    2798:	5e 20 01 05 	add_i s2, sp, 72
    279c:	3e 10 01 a8 	load_32 s1, 68(sp)
    27a0:	5e e0 00 88 	store_32 s2, 56(sp)
    27a4:	f1 12 00 f8 	call 19396 <vfprintf>
    27a8:	00 00 00 0f 	move s0, 0
    27ac:	fe f3 00 a8 	load_32 ra, 60(sp)
    27b0:	de 03 01 05 	add_i sp, sp, 64
    27b4:	1f 00 00 f0 	ret

00000000000027b8 fflush:
    27b8:	00 00 00 0f 	move s0, 0
    27bc:	1f 00 00 f0 	ret

00000000000027c0 ferror:
    27c0:	00 00 00 0f 	move s0, 0
    27c4:	1f 00 00 f0 	ret

00000000000027c8 ungetc:
    27c8:	de 03 ff 05 	add_i sp, sp, -64
    27cc:	1e f3 00 88 	store_32 s24, 60(sp)
    27d0:	fe e3 00 88 	store_32 ra, 56(sp)
    27d4:	00 03 f0 c0 	move s24, s0
    27d8:	01 30 00 a8 	load_32 s0, 12(s1)
    27dc:	20 fc ff 0f 	move s1, -1
    27e0:	40 04 00 0f 	move s2, 1
    27e4:	e4 17 00 f8 	call 24464 <lseek>
    27e8:	00 00 fc c0 	move s0, s24
    27ec:	fe e3 00 a8 	load_32 ra, 56(sp)
    27f0:	1e f3 00 a8 	load_32 s24, 60(sp)
    27f4:	de 03 01 05 	add_i sp, sp, 64
    27f8:	1f 00 00 f0 	ret

00000000000027fc malloc:
    27fc:	de 03 ff 05 	add_i sp, sp, -64
    2800:	1e f3 00 88 	store_32 s24, 60(sp)
    2804:	3e e3 00 88 	store_32 s25, 56(sp)
    2808:	5e d3 00 88 	store_32 s26, 52(sp)
    280c:	7e c3 00 88 	store_32 s27, 48(sp)
    2810:	fe b3 00 88 	store_32 ra, 44(sp)
    2814:	25 00 00 4f 	movehi s1, 5
    2818:	21 d3 44 00 	or s25, s1, 4404
    281c:	39 00 00 a8 	load_32 s1, (s25)
    2820:	61 05 00 f4 	bnz s1, 172 <malloc+0xd0>
    2824:	25 00 00 4f 	movehi s1, 5
    2828:	40 04 00 0f 	move s2, 1
    282c:	21 a0 4c 00 	or s1, s1, 4904
    2830:	61 00 00 aa 	load_sync s3, (s1)
    2834:	80 00 f1 c0 	move s4, s2
    2838:	81 00 00 8a 	store_sync s4, (s1)  
    283c:	a4 ff ff f3 	bz s4, -12 <malloc+0x34>
    2840:	03 01 00 f2 	bz s3, 32 <malloc+0x64>
    2844:	61 00 00 a8 	load_32 s3, (s1)
    2848:	e3 ff ff f5 	bnz s3, -4 <malloc+0x48>
    284c:	61 00 00 aa 	load_sync s3, (s1)
    2850:	80 00 f1 c0 	move s4, s2
    2854:	81 00 00 8a 	store_sync s4, (s1)  
    2858:	a4 ff ff f3 	bz s4, -12 <malloc+0x50>
    285c:	43 ff ff f5 	bnz s3, -24 <malloc+0x48>
    2860:	59 00 00 a8 	load_32 s2, (s25)
    2864:	a2 02 00 f4 	bnz s2, 84 <malloc+0xbc>
    2868:	40 00 40 0f 	move s2, 4096
    286c:	59 20 00 88 	store_32 s2, 8(s25)
    2870:	59 10 00 88 	store_32 s2, 4(s25)
    2874:	40 fc ff 0f 	move s2, -1
    2878:	59 30 00 88 	store_32 s2, 12(s25)
    287c:	45 00 00 4f 	movehi s2, 5
    2880:	60 20 00 4f 	movehi s3, 256
    2884:	79 40 00 88 	store_32 s3, 16(s25)
    2888:	60 08 00 0f 	move s3, 2
    288c:	79 50 00 88 	store_32 s3, 20(s25)
    2890:	42 30 45 00 	or s2, s2, 4428
    2894:	aa 54 55 4f 	movehi s5, 174762
    2898:	80 00 00 0f 	move s4, 0
    289c:	62 f0 06 88 	store_32 s3, 444(s2)
    28a0:	7e 90 00 05 	add_i s3, sp, 36
    28a4:	82 00 07 88 	store_32 s4, 448(s2)
    28a8:	45 60 55 00 	or s2, s5, 5464
    28ac:	63 c0 ff 01 	and s3, s3, -16
    28b0:	43 00 31 c0 	xor s2, s3, s2
    28b4:	59 00 00 88 	store_32 s2, (s25)
    28b8:	40 00 00 0f 	move s2, 0
    28bc:	61 00 00 aa 	load_sync s3, (s1)
    28c0:	60 00 f1 c0 	move s3, s2
    28c4:	61 00 00 8a 	store_sync s3, (s1)  
    28c8:	a3 ff ff f3 	bz s3, -12 <malloc+0xc0>
    28cc:	25 00 00 4f 	movehi s1, 5
    28d0:	01 33 45 00 	or s24, s1, 4428
    28d4:	38 f0 06 a0 	load_u8 s1, 444(s24)
    28d8:	21 08 00 01 	and s1, s1, 2
    28dc:	e1 01 00 f2 	bz s1, 60 <malloc+0x11c>
    28e0:	38 00 07 05 	add_i s1, s24, 448
    28e4:	40 04 00 0f 	move s2, 1
    28e8:	61 00 00 aa 	load_sync s3, (s1)
    28ec:	80 00 f1 c0 	move s4, s2
    28f0:	81 00 00 8a 	store_sync s4, (s1)  
    28f4:	a4 ff ff f3 	bz s4, -12 <malloc+0xec>
    28f8:	03 01 00 f2 	bz s3, 32 <malloc+0x11c>
    28fc:	78 00 07 a8 	load_32 s3, 448(s24)
    2900:	e3 ff ff f5 	bnz s3, -4 <malloc+0x100>
    2904:	61 00 00 aa 	load_sync s3, (s1)
    2908:	80 00 f1 c0 	move s4, s2
    290c:	81 00 00 8a 	store_sync s4, (s1)  
    2910:	a4 ff ff f3 	bz s4, -12 <malloc+0x108>
    2914:	43 ff ff f5 	bnz s3, -24 <malloc+0x100>
    2918:	20 d0 03 16 	cmpgt_u s1, s0, 244
    291c:	c1 00 00 f4 	bnz s1, 24 <malloc+0x138>
    2920:	20 2c 00 18 	cmplt_u s1, s0, 11
    2924:	21 01 00 f4 	bnz s1, 36 <malloc+0x14c>
    2928:	00 2c 00 05 	add_i s0, s0, 11
    292c:	40 e3 ff 01 	and s26, s0, -8
    2930:	07 00 00 f6 	b 28 <malloc+0x150>
    2934:	20 fc fe 16 	cmpgt_u s1, s0, -65
    2938:	41 00 00 f4 	bnz s1, 8 <malloc+0x144>
    293c:	1d 00 00 f6 	b 116 <malloc+0x1b4>
    2940:	40 ff ff 0f 	move s26, -1
    2944:	6e 01 00 f6 	b 1464 <malloc+0x700>
    2948:	40 43 00 0f 	move s26, 16
    294c:	18 00 00 a8 	load_32 s0, (s24)
    2950:	5a 0c 00 0a 	shr s2, s26, 3
    2954:	60 00 a1 c0 	shr s3, s0, s2
    2958:	23 0c 00 01 	and s1, s3, 3
    295c:	81 04 00 f2 	bz s1, 144 <malloc+0x1f0>
    2960:	23 fc ff 03 	xor s1, s3, -1
    2964:	21 04 00 01 	and s1, s1, 1
    2968:	a1 00 51 c0 	add_i s5, s1, s2
    296c:	25 0c 00 0b 	shl s1, s5, 3
    2970:	98 80 50 c0 	add_i s4, s24, s1
    2974:	44 c0 00 a8 	load_32 s2, 48(s4)
    2978:	84 a0 00 05 	add_i s4, s4, 40
    297c:	62 20 00 a8 	load_32 s3, 8(s2)
    2980:	c3 00 12 c1 	cmpne_i s6, s3, s4
    2984:	46 00 00 f4 	bnz s6, 8 <malloc+0x190>
    2988:	4c 00 00 f6 	b 304 <malloc+0x2bc>
    298c:	18 40 00 a8 	load_32 s0, 16(s24)
    2990:	00 80 61 c1 	cmpgt_u s0, s0, s3
    2994:	60 e4 00 f4 	bnz s0, 7308 <malloc+0x1e24>
    2998:	03 30 00 a8 	load_32 s0, 12(s3)
    299c:	00 00 11 c1 	cmpne_i s0, s0, s2
    29a0:	00 e4 00 f4 	bnz s0, 7296 <malloc+0x1e24>
    29a4:	83 30 00 88 	store_32 s4, 12(s3)
    29a8:	64 20 00 88 	store_32 s3, 8(s4)
    29ac:	48 00 00 f6 	b 288 <malloc+0x2d0>
    29b0:	00 2c 00 05 	add_i s0, s0, 11
    29b4:	38 10 00 a8 	load_32 s1, 4(s24)
    29b8:	40 e3 ff 01 	and s26, s0, -8
    29bc:	01 2a 00 f2 	bz s1, 1344 <malloc+0x700>
    29c0:	60 00 00 0f 	move s3, 0
    29c4:	00 20 00 0a 	shr s0, s0, 8
    29c8:	a0 80 f1 c0 	move s5, s3
    29cc:	e0 0c 00 f2 	bz s0, 412 <malloc+0x36c>
    29d0:	5f fc 00 4f 	movehi s2, 2047
    29d4:	42 fc 7f 00 	or s2, s2, 8191
    29d8:	5a 00 61 c1 	cmpgt_u s2, s26, s2
    29dc:	42 00 00 f4 	bnz s2, 8 <malloc+0x1e8>
    29e0:	46 00 00 f6 	b 280 <malloc+0x2fc>
    29e4:	a0 7c 00 0f 	move s5, 31
    29e8:	60 00 00 f6 	b 384 <malloc+0x36c>
    29ec:	38 20 00 a8 	load_32 s1, 8(s24)
    29f0:	9a 80 90 c1 	cmple_u s4, s26, s1
    29f4:	44 28 00 f4 	bnz s4, 1288 <malloc+0x700>
    29f8:	03 17 00 f2 	bz s3, 736 <malloc+0x4dc>
    29fc:	80 08 00 0f 	move s4, 2
    2a00:	a0 00 00 0f 	move s5, 0
    2a04:	84 00 b1 c0 	shl s4, s4, s2
    2a08:	43 00 b1 c0 	shl s2, s3, s2
    2a0c:	65 00 62 c0 	sub_i s3, s5, s4
    2a10:	64 80 01 c0 	or s3, s4, s3
    2a14:	42 80 11 c0 	and s2, s2, s3
    2a18:	65 00 61 c0 	sub_i s3, s5, s2
    2a1c:	42 80 11 c0 	and s2, s2, s3
    2a20:	42 fc ff 05 	add_i s2, s2, -1
    2a24:	62 30 00 0a 	shr s3, s2, 12
    2a28:	63 40 00 01 	and s3, s3, 16
    2a2c:	42 80 a1 c0 	shr s2, s2, s3
    2a30:	82 14 00 0a 	shr s4, s2, 5
    2a34:	84 20 00 01 	and s4, s4, 8
    2a38:	42 00 a2 c0 	shr s2, s2, s4
    2a3c:	64 80 01 c0 	or s3, s4, s3
    2a40:	a2 08 00 0a 	shr s5, s2, 2
    2a44:	a5 10 00 01 	and s5, s5, 4
    2a48:	42 80 a2 c0 	shr s2, s2, s5
    2a4c:	63 80 02 c0 	or s3, s3, s5
    2a50:	c2 04 00 0a 	shr s6, s2, 1
    2a54:	86 08 00 01 	and s4, s6, 2
    2a58:	42 00 a2 c0 	shr s2, s2, s4
    2a5c:	63 00 02 c0 	or s3, s3, s4
    2a60:	a2 04 00 0a 	shr s5, s2, 1
    2a64:	85 04 00 01 	and s4, s5, 1
    2a68:	63 00 02 c0 	or s3, s3, s4
    2a6c:	42 00 a2 c0 	shr s2, s2, s4
    2a70:	c3 00 51 c0 	add_i s6, s3, s2
    2a74:	a6 0c 00 0b 	shl s5, s6, 3
    2a78:	98 80 52 c0 	add_i s4, s24, s5
    2a7c:	44 c0 00 a8 	load_32 s2, 48(s4)
    2a80:	84 a0 00 05 	add_i s4, s4, 40
    2a84:	62 20 00 a8 	load_32 s3, 8(s2)
    2a88:	e3 00 12 c1 	cmpne_i s7, s3, s4
    2a8c:	47 00 00 f4 	bnz s7, 8 <malloc+0x298>
    2a90:	a2 01 00 f6 	b 1672 <malloc+0x91c>
    2a94:	d8 40 00 a8 	load_32 s6, 16(s24)
    2a98:	c6 80 61 c1 	cmpgt_u s6, s6, s3
    2a9c:	26 dc 00 f4 	bnz s6, 7044 <malloc+0x1e24>
    2aa0:	c3 30 00 a8 	load_32 s6, 12(s3)
    2aa4:	c6 00 11 c1 	cmpne_i s6, s6, s2
    2aa8:	c6 db 00 f4 	bnz s6, 7032 <malloc+0x1e24>
    2aac:	83 30 00 88 	store_32 s4, 12(s3)
    2ab0:	64 20 00 88 	store_32 s3, 8(s4)
    2ab4:	9e 01 00 f6 	b 1656 <malloc+0x930>
    2ab8:	60 04 00 0f 	move s3, 1
    2abc:	63 80 b2 c0 	shl s3, s3, s5
    2ac0:	63 fc ff 03 	xor s3, s3, -1
    2ac4:	00 80 11 c0 	and s0, s0, s3
    2ac8:	18 00 00 88 	store_32 s0, (s24)
    2acc:	02 80 50 c0 	add_i s0, s2, s1
    2ad0:	21 0c 00 00 	or s1, s1, 3
    2ad4:	22 10 00 88 	store_32 s1, 4(s2)
    2ad8:	62 23 00 05 	add_i s27, s2, 8
    2adc:	20 10 00 a8 	load_32 s1, 4(s0)
    2ae0:	21 04 00 00 	or s1, s1, 1
    2ae4:	20 10 00 88 	store_32 s1, 4(s0)
    2ae8:	18 f0 06 a0 	load_u8 s0, 444(s24)
    2aec:	00 08 00 01 	and s0, s0, 2
    2af0:	e0 37 00 f2 	bz s0, 1788 <malloc+0x9f0>
    2af4:	b8 01 00 f6 	b 1760 <malloc+0x9d8>
    2af8:	5f 0c 00 4f 	movehi s2, 127
    2afc:	9f 04 00 4f 	movehi s4, 63
    2b00:	be 00 00 4f 	movehi s5, 30
    2b04:	42 00 7c 00 	or s2, s2, 7936
    2b08:	40 00 51 c0 	add_i s2, s0, s2
    2b0c:	84 00 40 00 	or s4, s4, 4096
    2b10:	42 40 00 0a 	shr s2, s2, 16
    2b14:	42 20 00 01 	and s2, s2, 8
    2b18:	00 00 b1 c0 	shl s0, s0, s2
    2b1c:	80 00 52 c0 	add_i s4, s0, s4
    2b20:	84 40 00 0a 	shr s4, s4, 16
    2b24:	84 10 00 01 	and s4, s4, 4
    2b28:	00 00 b2 c0 	shl s0, s0, s4
    2b2c:	44 00 01 c0 	or s2, s4, s2
    2b30:	a0 80 52 c0 	add_i s5, s0, s5
    2b34:	a5 40 00 0a 	shr s5, s5, 16
    2b38:	85 08 00 01 	and s4, s5, 2
    2b3c:	a0 38 00 0f 	move s5, 14
    2b40:	42 00 02 c0 	or s2, s2, s4
    2b44:	00 00 b2 c0 	shl s0, s0, s4
    2b48:	45 00 61 c0 	sub_i s2, s5, s2
    2b4c:	00 3c 00 0a 	shr s0, s0, 15
    2b50:	02 00 50 c0 	add_i s0, s2, s0
    2b54:	40 1c 00 05 	add_i s2, s0, 7
    2b58:	5a 00 a1 c0 	shr s2, s26, s2
    2b5c:	00 04 00 0b 	shl s0, s0, 1
    2b60:	42 04 00 01 	and s2, s2, 1
    2b64:	a2 00 00 c0 	or s5, s2, s0
    2b68:	05 08 00 0b 	shl s0, s5, 2
    2b6c:	18 00 50 c0 	add_i s0, s24, s0
    2b70:	43 00 6d c0 	sub_i s2, s3, s26
    2b74:	80 c0 04 a8 	load_32 s4, 304(s0)
    2b78:	24 0a 00 f2 	bz s4, 324 <malloc+0x4c0>
    2b7c:	c0 00 00 0f 	move s6, 0
    2b80:	65 7c 00 10 	cmpeq_i s3, s5, 31
    2b84:	00 00 f3 c0 	move s0, s6
    2b88:	83 00 00 f4 	bnz s3, 16 <malloc+0x39c>
    2b8c:	00 64 00 0f 	move s0, 25
    2b90:	65 04 00 0a 	shr s3, s5, 1
    2b94:	00 80 61 c0 	sub_i s0, s0, s3
    2b98:	fa 00 b0 c0 	shl s7, s26, s0
    2b9c:	60 00 f3 c0 	move s3, s6
    2ba0:	00 00 f3 c0 	move s0, s6
    2ba4:	04 11 00 a8 	load_32 s8, 4(s4)
    2ba8:	08 e1 ff 01 	and s8, s8, -8
    2bac:	08 01 6d c0 	sub_i s8, s8, s26
    2bb0:	28 01 71 c1 	cmpge_u s9, s8, s2
    2bb4:	89 00 00 f4 	bnz s9, 16 <malloc+0x3c8>
    2bb8:	40 00 f4 c0 	move s2, s8
    2bbc:	00 00 f2 c0 	move s0, s4
    2bc0:	88 12 00 f2 	bz s8, 592 <malloc+0x614>
    2bc4:	07 75 00 0a 	shr s8, s7, 29
    2bc8:	08 11 00 01 	and s8, s8, 4
    2bcc:	24 01 54 c0 	add_i s9, s4, s8
    2bd0:	04 51 00 a8 	load_32 s8, 20(s4)
    2bd4:	89 40 00 a8 	load_32 s4, 16(s9)
    2bd8:	20 81 f1 c0 	move s9, s3
    2bdc:	48 01 02 c1 	cmpeq_i s10, s8, s4
    2be0:	4a 01 00 f4 	bnz s10, 40 <malloc+0x40c>
    2be4:	20 01 f4 c0 	move s9, s8
    2be8:	08 01 00 10 	cmpeq_i s8, s8, 0
    2bec:	48 00 00 f4 	bnz s8, 8 <malloc+0x3f8>
    2bf0:	08 00 00 f6 	b 32 <malloc+0x414>
    2bf4:	04 01 00 11 	cmpne_i s8, s4, 0
    2bf8:	08 05 00 01 	and s8, s8, 1
    2bfc:	e7 00 b4 c0 	shl s7, s7, s8
    2c00:	24 fd ff f5 	bnz s4, -92 <malloc+0x3a8>
    2c04:	08 00 00 f6 	b 32 <malloc+0x428>
    2c08:	08 01 00 10 	cmpeq_i s8, s8, 0
    2c0c:	48 ff ff f5 	bnz s8, -24 <malloc+0x3f8>
    2c10:	60 80 f4 c0 	move s3, s9
    2c14:	04 01 00 11 	cmpne_i s8, s4, 0
    2c18:	08 05 00 01 	and s8, s8, 1
    2c1c:	e7 00 b4 c0 	shl s7, s7, s8
    2c20:	24 fc ff f5 	bnz s4, -124 <malloc+0x3a8>
    2c24:	83 00 00 c0 	or s4, s3, s0
    2c28:	24 05 00 f4 	bnz s4, 164 <malloc+0x4d0>
    2c2c:	80 08 00 0f 	move s4, 2
    2c30:	60 00 00 0f 	move s3, 0
    2c34:	84 80 b2 c0 	shl s4, s4, s5
    2c38:	a3 00 62 c0 	sub_i s5, s3, s4
    2c3c:	84 80 02 c0 	or s4, s4, s5
    2c40:	84 80 10 c0 	and s4, s4, s1
    2c44:	c4 15 00 f2 	bz s4, 696 <malloc+0x700>
    2c48:	63 00 62 c0 	sub_i s3, s3, s4
    2c4c:	64 80 11 c0 	and s3, s4, s3
    2c50:	63 fc ff 05 	add_i s3, s3, -1
    2c54:	83 30 00 0a 	shr s4, s3, 12
    2c58:	84 40 00 01 	and s4, s4, 16
    2c5c:	63 00 a2 c0 	shr s3, s3, s4
    2c60:	a3 14 00 0a 	shr s5, s3, 5
    2c64:	a5 20 00 01 	and s5, s5, 8
    2c68:	63 80 a2 c0 	shr s3, s3, s5
    2c6c:	85 00 02 c0 	or s4, s5, s4
    2c70:	c3 08 00 0a 	shr s6, s3, 2
    2c74:	c6 10 00 01 	and s6, s6, 4
    2c78:	63 00 a3 c0 	shr s3, s3, s6
    2c7c:	84 00 03 c0 	or s4, s4, s6
    2c80:	e3 04 00 0a 	shr s7, s3, 1
    2c84:	a7 08 00 01 	and s5, s7, 2
    2c88:	63 80 a2 c0 	shr s3, s3, s5
    2c8c:	84 80 02 c0 	or s4, s4, s5
    2c90:	c3 04 00 0a 	shr s6, s3, 1
    2c94:	a6 04 00 01 	and s5, s6, 1
    2c98:	84 80 02 c0 	or s4, s4, s5
    2c9c:	63 80 a2 c0 	shr s3, s3, s5
    2ca0:	64 80 51 c0 	add_i s3, s4, s3
    2ca4:	63 08 00 0b 	shl s3, s3, 2
    2ca8:	78 80 51 c0 	add_i s3, s24, s3
    2cac:	63 c0 04 a8 	load_32 s3, 304(s3)
    2cb0:	80 80 f1 c0 	move s4, s3
    2cb4:	c3 0e 00 f2 	bz s3, 472 <malloc+0x690>
    2cb8:	58 00 00 f6 	b 352 <malloc+0x61c>
    2cbc:	00 80 f1 c0 	move s0, s3
    2cc0:	83 00 00 c0 	or s4, s3, s0
    2cc4:	44 00 00 f4 	bnz s4, 8 <malloc+0x4d0>
    2cc8:	d9 ff ff f7 	b -156 <malloc+0x430>
    2ccc:	80 80 f1 c0 	move s4, s3
    2cd0:	e3 0d 00 f2 	bz s3, 444 <malloc+0x690>
    2cd4:	51 00 00 f6 	b 324 <malloc+0x61c>
    2cd8:	b8 10 00 a8 	load_32 s5, 4(s24)
    2cdc:	05 11 00 f2 	bz s5, 544 <malloc+0x700>
    2ce0:	c0 00 00 0f 	move s6, 0
    2ce4:	46 80 62 c0 	sub_i s2, s6, s5
    2ce8:	45 00 11 c0 	and s2, s5, s2
    2cec:	42 fc ff 05 	add_i s2, s2, -1
    2cf0:	62 30 00 0a 	shr s3, s2, 12
    2cf4:	63 40 00 01 	and s3, s3, 16
    2cf8:	42 80 a1 c0 	shr s2, s2, s3
    2cfc:	82 14 00 0a 	shr s4, s2, 5
    2d00:	84 20 00 01 	and s4, s4, 8
    2d04:	42 00 a2 c0 	shr s2, s2, s4
    2d08:	64 80 01 c0 	or s3, s4, s3
    2d0c:	e2 08 00 0a 	shr s7, s2, 2
    2d10:	e7 10 00 01 	and s7, s7, 4
    2d14:	42 80 a3 c0 	shr s2, s2, s7
    2d18:	63 80 03 c0 	or s3, s3, s7
    2d1c:	02 05 00 0a 	shr s8, s2, 1
    2d20:	88 08 00 01 	and s4, s8, 2
    2d24:	42 00 a2 c0 	shr s2, s2, s4
    2d28:	63 00 02 c0 	or s3, s3, s4
    2d2c:	e2 04 00 0a 	shr s7, s2, 1
    2d30:	87 04 00 01 	and s4, s7, 1
    2d34:	63 00 02 c0 	or s3, s3, s4
    2d38:	42 00 a2 c0 	shr s2, s2, s4
    2d3c:	43 00 51 c0 	add_i s2, s3, s2
    2d40:	42 08 00 0b 	shl s2, s2, 2
    2d44:	58 00 51 c0 	add_i s2, s24, s2
    2d48:	42 c0 04 a8 	load_32 s2, 304(s2)
    2d4c:	62 10 00 a8 	load_32 s3, 4(s2)
    2d50:	e0 00 f1 c0 	move s7, s2
    2d54:	63 e0 ff 01 	and s3, s3, -8
    2d58:	63 00 6d c0 	sub_i s3, s3, s26
    2d5c:	87 40 00 a8 	load_32 s4, 16(s7)
    2d60:	04 01 00 f4 	bnz s4, 32 <malloc+0x584>
    2d64:	11 00 00 f6 	b 68 <malloc+0x5ac>
    2d68:	60 80 f3 c0 	move s3, s7
    2d6c:	40 80 f4 c0 	move s2, s9
    2d70:	e0 00 f2 c0 	move s7, s4
    2d74:	87 40 00 a8 	load_32 s4, 16(s7)
    2d78:	44 00 00 f4 	bnz s4, 8 <malloc+0x584>
    2d7c:	0b 00 00 f6 	b 44 <malloc+0x5ac>
    2d80:	e4 10 00 a8 	load_32 s7, 4(s4)
    2d84:	e7 e0 ff 01 	and s7, s7, -8
    2d88:	e7 00 6d c0 	sub_i s7, s7, s26
    2d8c:	07 81 81 c1 	cmplt_u s8, s7, s3
    2d90:	48 00 00 f4 	bnz s8, 8 <malloc+0x59c>
    2d94:	e0 80 f1 c0 	move s7, s3
    2d98:	20 01 f2 c0 	move s9, s4
    2d9c:	68 fe ff f5 	bnz s8, -52 <malloc+0x56c>
    2da0:	20 01 f1 c0 	move s9, s2
    2da4:	f1 ff ff f7 	b -60 <malloc+0x56c>
    2da8:	87 50 00 a8 	load_32 s4, 20(s7)
    2dac:	44 00 00 f2 	bz s4, 8 <malloc+0x5b8>
    2db0:	f4 ff ff f7 	b -48 <malloc+0x584>
    2db4:	38 41 00 a8 	load_32 s9, 16(s24)
    2db8:	89 00 61 c1 	cmpgt_u s4, s9, s2
    2dbc:	24 c3 00 f4 	bnz s4, 6244 <malloc+0x1e24>
    2dc0:	82 00 5d c0 	add_i s4, s2, s26
    2dc4:	e4 00 91 c1 	cmple_u s7, s4, s2
    2dc8:	c7 c2 00 f4 	bnz s7, 6232 <malloc+0x1e24>
    2dcc:	e2 60 00 a8 	load_32 s7, 24(s2)
    2dd0:	02 31 00 a8 	load_32 s8, 12(s2)
    2dd4:	48 01 01 c1 	cmpeq_i s10, s8, s2
    2dd8:	aa 21 00 f4 	bnz s10, 1076 <malloc+0xa10>
    2ddc:	c2 20 00 a8 	load_32 s6, 8(s2)
    2de0:	29 01 63 c1 	cmpgt_u s9, s9, s6
    2de4:	e9 c1 00 f4 	bnz s9, 6204 <malloc+0x1e24>
    2de8:	26 31 00 a8 	load_32 s9, 12(s6)
    2dec:	29 01 11 c1 	cmpne_i s9, s9, s2
    2df0:	89 c1 00 f4 	bnz s9, 6192 <malloc+0x1e24>
    2df4:	28 21 00 a8 	load_32 s9, 8(s8)
    2df8:	29 01 11 c1 	cmpne_i s9, s9, s2
    2dfc:	29 c1 00 f4 	bnz s9, 6180 <malloc+0x1e24>
    2e00:	06 31 00 88 	store_32 s8, 12(s6)
    2e04:	c8 20 00 88 	store_32 s6, 8(s8)
    2e08:	47 56 00 f2 	bz s7, 2760 <malloc+0x10d4>
    2e0c:	69 02 00 f6 	b 2468 <malloc+0xfb4>
    2e10:	00 00 f2 c0 	move s0, s4
    2e14:	40 00 f3 c0 	move s2, s6
    2e18:	60 00 f0 c0 	move s3, s0
    2e1c:	a0 00 f1 c0 	move s5, s2
    2e20:	04 10 00 a8 	load_32 s0, 4(s4)
    2e24:	00 e0 ff 01 	and s0, s0, -8
    2e28:	40 00 6d c0 	sub_i s2, s0, s26
    2e2c:	c2 80 82 c1 	cmplt_u s6, s2, s5
    2e30:	a6 01 00 f4 	bnz s6, 52 <malloc+0x668>
    2e34:	40 80 f2 c0 	move s2, s5
    2e38:	00 00 f2 c0 	move s0, s4
    2e3c:	46 00 00 f4 	bnz s6, 8 <malloc+0x648>
    2e40:	0b 00 00 f6 	b 44 <malloc+0x670>
    2e44:	c4 40 00 a8 	load_32 s6, 16(s4)
    2e48:	46 00 00 f4 	bnz s6, 8 <malloc+0x654>
    2e4c:	0b 00 00 f6 	b 44 <malloc+0x67c>
    2e50:	60 00 f0 c0 	move s3, s0
    2e54:	a0 00 f1 c0 	move s5, s2
    2e58:	80 00 f3 c0 	move s4, s6
    2e5c:	26 fe ff f5 	bnz s6, -60 <malloc+0x624>
    2e60:	0b 00 00 f6 	b 44 <malloc+0x690>
    2e64:	00 00 f2 c0 	move s0, s4
    2e68:	e6 fe ff f5 	bnz s6, -36 <malloc+0x648>
    2e6c:	00 80 f1 c0 	move s0, s3
    2e70:	c4 40 00 a8 	load_32 s6, 16(s4)
    2e74:	e6 fe ff f5 	bnz s6, -36 <malloc+0x654>
    2e78:	c4 50 00 a8 	load_32 s6, 20(s4)
    2e7c:	60 00 f0 c0 	move s3, s0
    2e80:	a0 00 f1 c0 	move s5, s2
    2e84:	80 00 f3 c0 	move s4, s6
    2e88:	c6 fc ff f5 	bnz s6, -104 <malloc+0x624>
    2e8c:	80 03 00 f2 	bz s0, 112 <malloc+0x700>
    2e90:	78 20 00 a8 	load_32 s3, 8(s24)
    2e94:	63 00 6d c0 	sub_i s3, s3, s26
    2e98:	62 80 71 c1 	cmpge_u s3, s2, s3
    2e9c:	03 03 00 f4 	bnz s3, 96 <malloc+0x700>
    2ea0:	d8 40 00 a8 	load_32 s6, 16(s24)
    2ea4:	66 00 60 c1 	cmpgt_u s3, s6, s0
    2ea8:	c3 bb 00 f4 	bnz s3, 6008 <malloc+0x1e24>
    2eac:	60 00 5d c0 	add_i s3, s0, s26
    2eb0:	83 00 90 c1 	cmple_u s4, s3, s0
    2eb4:	64 bb 00 f4 	bnz s4, 5996 <malloc+0x1e24>
    2eb8:	80 60 00 a8 	load_32 s4, 24(s0)
    2ebc:	a0 30 00 a8 	load_32 s5, 12(s0)
    2ec0:	e5 00 00 c1 	cmpeq_i s7, s5, s0
    2ec4:	47 16 00 f4 	bnz s7, 712 <malloc+0x990>
    2ec8:	e0 20 00 a8 	load_32 s7, 8(s0)
    2ecc:	c6 80 63 c1 	cmpgt_u s6, s6, s7
    2ed0:	86 ba 00 f4 	bnz s6, 5968 <malloc+0x1e24>
    2ed4:	c7 30 00 a8 	load_32 s6, 12(s7)
    2ed8:	c6 00 10 c1 	cmpne_i s6, s6, s0
    2edc:	26 ba 00 f4 	bnz s6, 5956 <malloc+0x1e24>
    2ee0:	c5 20 00 a8 	load_32 s6, 8(s5)
    2ee4:	c6 00 10 c1 	cmpne_i s6, s6, s0
    2ee8:	c6 b9 00 f4 	bnz s6, 5944 <malloc+0x1e24>
    2eec:	a7 30 00 88 	store_32 s5, 12(s7)
    2ef0:	e5 20 00 88 	store_32 s7, 8(s5)
    2ef4:	e4 25 00 f2 	bz s4, 1212 <malloc+0xbb4>
    2ef8:	da 00 00 f6 	b 872 <malloc+0xa64>
    2efc:	38 20 00 a8 	load_32 s1, 8(s24)
    2f00:	01 00 8d c1 	cmplt_u s0, s1, s26
    2f04:	40 00 00 f4 	bnz s0, 8 <malloc+0x710>
    2f08:	12 00 00 f6 	b 72 <malloc+0x754>
    2f0c:	18 30 00 a8 	load_32 s0, 12(s24)
    2f10:	20 00 9d c1 	cmple_u s1, s0, s26
    2f14:	21 04 00 f4 	bnz s1, 132 <malloc+0x79c>
    2f18:	00 00 6d c0 	sub_i s0, s0, s26
    2f1c:	18 30 00 88 	store_32 s0, 12(s24)
    2f20:	38 60 00 a8 	load_32 s1, 24(s24)
    2f24:	00 04 00 00 	or s0, s0, 1
    2f28:	41 00 5d c0 	add_i s2, s1, s26
    2f2c:	58 60 00 88 	store_32 s2, 24(s24)
    2f30:	61 23 00 05 	add_i s27, s1, 8
    2f34:	02 10 00 88 	store_32 s0, 4(s2)
    2f38:	1a 0c 00 00 	or s0, s26, 3
    2f3c:	01 10 00 88 	store_32 s0, 4(s1)
    2f40:	18 f0 06 a0 	load_u8 s0, 444(s24)
    2f44:	00 08 00 01 	and s0, s0, 2
    2f48:	20 15 00 f2 	bz s0, 676 <malloc+0x9f0>
    2f4c:	a2 00 00 f6 	b 648 <malloc+0x9d8>
    2f50:	41 00 6d c0 	sub_i s2, s1, s26
    2f54:	18 50 00 a8 	load_32 s0, 20(s24)
    2f58:	62 40 00 18 	cmplt_u s3, s2, 16
    2f5c:	43 0b 00 f4 	bnz s3, 360 <malloc+0x8c8>
    2f60:	60 00 5d c0 	add_i s3, s0, s26
    2f64:	78 50 00 88 	store_32 s3, 20(s24)
    2f68:	20 80 50 c0 	add_i s1, s0, s1
    2f6c:	58 20 00 88 	store_32 s2, 8(s24)
    2f70:	82 04 00 00 	or s4, s2, 1
    2f74:	83 10 00 88 	store_32 s4, 4(s3)
    2f78:	60 23 00 05 	add_i s27, s0, 8
    2f7c:	41 00 00 88 	store_32 s2, (s1)
    2f80:	3a 0c 00 00 	or s1, s26, 3
    2f84:	20 10 00 88 	store_32 s1, 4(s0)
    2f88:	18 f0 06 a0 	load_u8 s0, 444(s24)
    2f8c:	00 08 00 01 	and s0, s0, 2
    2f90:	e0 12 00 f2 	bz s0, 604 <malloc+0x9f0>
    2f94:	90 00 00 f6 	b 576 <malloc+0x9d8>
    2f98:	19 00 00 a8 	load_32 s0, (s25)
    2f9c:	20 05 00 f4 	bnz s0, 164 <malloc+0x844>
    2fa0:	05 00 00 4f 	movehi s0, 5
    2fa4:	20 04 00 0f 	move s1, 1
    2fa8:	00 a0 4c 00 	or s0, s0, 4904
    2fac:	40 00 00 aa 	load_sync s2, (s0)
    2fb0:	60 80 f0 c0 	move s3, s1
    2fb4:	60 00 00 8a 	store_sync s3, (s0)  
    2fb8:	a3 ff ff f3 	bz s3, -12 <malloc+0x7b0>
    2fbc:	02 01 00 f2 	bz s2, 32 <malloc+0x7e0>
    2fc0:	40 00 00 a8 	load_32 s2, (s0)
    2fc4:	e2 ff ff f5 	bnz s2, -4 <malloc+0x7c4>
    2fc8:	40 00 00 aa 	load_sync s2, (s0)
    2fcc:	60 80 f0 c0 	move s3, s1
    2fd0:	60 00 00 8a 	store_sync s3, (s0)  
    2fd4:	a3 ff ff f3 	bz s3, -12 <malloc+0x7cc>
    2fd8:	42 ff ff f5 	bnz s2, -24 <malloc+0x7c4>
    2fdc:	39 00 00 a8 	load_32 s1, (s25)
    2fe0:	61 02 00 f4 	bnz s1, 76 <malloc+0x830>
    2fe4:	20 00 40 0f 	move s1, 4096
    2fe8:	39 20 00 88 	store_32 s1, 8(s25)
    2fec:	39 10 00 88 	store_32 s1, 4(s25)
    2ff0:	20 fc ff 0f 	move s1, -1
    2ff4:	39 30 00 88 	store_32 s1, 12(s25)
    2ff8:	20 20 00 4f 	movehi s1, 256
    2ffc:	39 40 00 88 	store_32 s1, 16(s25)
    3000:	20 08 00 0f 	move s1, 2
    3004:	39 50 00 88 	store_32 s1, 20(s25)
    3008:	6a 54 55 4f 	movehi s3, 174762
    300c:	38 f0 06 88 	store_32 s1, 444(s24)
    3010:	3e a0 00 05 	add_i s1, sp, 40
    3014:	40 00 00 0f 	move s2, 0
    3018:	58 00 07 88 	store_32 s2, 448(s24)
    301c:	43 60 55 00 	or s2, s3, 5464
    3020:	21 c0 ff 01 	and s1, s1, -16
    3024:	21 00 31 c0 	xor s1, s1, s2
    3028:	39 00 00 88 	store_32 s1, (s25)
    302c:	20 00 00 0f 	move s1, 0
    3030:	40 00 00 aa 	load_sync s2, (s0)
    3034:	40 80 f0 c0 	move s2, s1
    3038:	40 00 00 8a 	store_sync s2, (s0)  
    303c:	a2 ff ff f3 	bz s2, -12 <malloc+0x834>
    3040:	19 20 00 a8 	load_32 s0, 8(s25)
    3044:	ba bc 00 05 	add_i s5, s26, 47
    3048:	60 03 00 0f 	move s27, 0
    304c:	20 80 52 c0 	add_i s1, s0, s5
    3050:	1b 00 60 c0 	sub_i s0, s27, s0
    3054:	81 00 10 c0 	and s4, s1, s0
    3058:	04 00 9d c1 	cmple_u s0, s4, s26
    305c:	60 0b 00 f4 	bnz s0, 364 <malloc+0x9cc>
    3060:	18 e0 06 a8 	load_32 s0, 440(s24)
    3064:	e0 00 00 f2 	bz s0, 28 <malloc+0x884>
    3068:	58 c0 06 a8 	load_32 s2, 432(s24)
    306c:	22 00 52 c0 	add_i s1, s2, s4
    3070:	41 00 91 c1 	cmple_u s2, s1, s2
    3074:	a2 0a 00 f4 	bnz s2, 340 <malloc+0x9cc>
    3078:	01 00 60 c1 	cmpgt_u s0, s1, s0
    307c:	60 0a 00 f4 	bnz s0, 332 <malloc+0x9cc>
    3080:	18 f0 06 a0 	load_u8 s0, 444(s24)
    3084:	00 10 00 01 	and s0, s0, 4
    3088:	a0 03 00 f4 	bnz s0, 116 <malloc+0x900>
    308c:	18 60 00 a8 	load_32 s0, 24(s24)
    3090:	e0 00 00 0f 	move s7, 0
    3094:	80 19 00 f2 	bz s0, 816 <malloc+0xbc8>
    3098:	38 10 07 05 	add_i s1, s24, 452
    309c:	41 00 00 a8 	load_32 s2, (s1)
    30a0:	62 00 60 c1 	cmpgt_u s3, s2, s0
    30a4:	a3 00 00 f4 	bnz s3, 20 <malloc+0x8bc>
    30a8:	61 10 00 a8 	load_32 s3, 4(s1)
    30ac:	42 80 51 c0 	add_i s2, s2, s3
    30b0:	42 00 60 c1 	cmpgt_u s2, s2, s0
    30b4:	62 18 00 f4 	bnz s2, 780 <malloc+0xbc4>
    30b8:	21 20 00 a8 	load_32 s1, 8(s1)
    30bc:	01 ff ff f5 	bnz s1, -32 <malloc+0x8a0>
    30c0:	c1 00 00 f6 	b 772 <malloc+0xbc8>
    30c4:	40 00 00 0f 	move s2, 0
    30c8:	58 20 00 88 	store_32 s2, 8(s24)
    30cc:	58 50 00 88 	store_32 s2, 20(s24)
    30d0:	40 80 50 c0 	add_i s2, s0, s1
    30d4:	21 0c 00 00 	or s1, s1, 3
    30d8:	20 10 00 88 	store_32 s1, 4(s0)
    30dc:	60 23 00 05 	add_i s27, s0, 8
    30e0:	22 10 00 a8 	load_32 s1, 4(s2)
    30e4:	21 04 00 00 	or s1, s1, 1
    30e8:	22 10 00 88 	store_32 s1, 4(s2)
    30ec:	18 f0 06 a0 	load_u8 s0, 444(s24)
    30f0:	00 08 00 01 	and s0, s0, 2
    30f4:	c0 07 00 f2 	bz s0, 248 <malloc+0x9f0>
    30f8:	37 00 00 f6 	b 220 <malloc+0x9d8>
    30fc:	40 fd ff 0f 	move s10, -1
    3100:	20 01 00 0f 	move s9, 0
    3104:	1f fc 7f 4f 	movehi s0, 262143
    3108:	00 f8 7f 00 	or s0, s0, 8190
    310c:	04 00 60 c1 	cmpgt_u s0, s4, s0
    3110:	20 4b 00 f4 	bnz s0, 2404 <malloc+0x1278>
    3114:	2f 02 00 f6 	b 2236 <malloc+0x11d4>
    3118:	60 04 00 0f 	move s3, 1
    311c:	63 00 b3 c0 	shl s3, s3, s6
    3120:	63 fc ff 03 	xor s3, s3, -1
    3124:	00 80 11 c0 	and s0, s0, s3
    3128:	18 00 00 88 	store_32 s0, (s24)
    312c:	9a 0c 00 00 	or s4, s26, 3
    3130:	82 10 00 88 	store_32 s4, 4(s2)
    3134:	65 00 6d c0 	sub_i s3, s5, s26
    3138:	82 00 5d c0 	add_i s4, s2, s26
    313c:	a2 80 52 c0 	add_i s5, s2, s5
    3140:	c3 04 00 00 	or s6, s3, 1
    3144:	c4 10 00 88 	store_32 s6, 4(s4)
    3148:	65 00 00 88 	store_32 s3, (s5)
    314c:	81 03 00 f2 	bz s1, 112 <malloc+0x9c0>
    3150:	a1 0c 00 0a 	shr s5, s1, 3
    3154:	38 50 00 a8 	load_32 s1, 20(s24)
    3158:	c0 04 00 0f 	move s6, 1
    315c:	e5 0c 00 0b 	shl s7, s5, 3
    3160:	f8 80 53 c0 	add_i s7, s24, s7
    3164:	c6 80 b2 c0 	shl s6, s6, s5
    3168:	00 01 13 c0 	and s8, s0, s6
    316c:	a7 a0 00 05 	add_i s5, s7, 40
    3170:	48 00 00 f4 	bnz s8, 8 <malloc+0x97c>
    3174:	0b 00 00 f6 	b 44 <malloc+0x9a4>
    3178:	05 20 00 a8 	load_32 s0, 8(s5)
    317c:	d8 40 00 a8 	load_32 s6, 16(s24)
    3180:	c6 00 90 c1 	cmple_u s6, s6, s0
    3184:	46 01 00 f4 	bnz s6, 40 <malloc+0x9b0>
    3188:	26 05 00 f6 	b 5272 <malloc+0x1e24>
    318c:	e0 50 00 a8 	load_32 s7, 20(s0)
    3190:	47 00 00 f4 	bnz s7, 8 <malloc+0x99c>
    3194:	23 00 00 f6 	b 140 <malloc+0xa24>
    3198:	00 51 00 05 	add_i s8, s0, 20
    319c:	24 00 00 f6 	b 144 <malloc+0xa30>
    31a0:	00 00 03 c0 	or s0, s0, s6
    31a4:	18 00 00 88 	store_32 s0, (s24)
    31a8:	00 80 f2 c0 	move s0, s5
    31ac:	25 20 00 88 	store_32 s1, 8(s5)
    31b0:	20 30 00 88 	store_32 s1, 12(s0)
    31b4:	01 20 00 88 	store_32 s0, 8(s1)
    31b8:	a1 30 00 88 	store_32 s5, 12(s1)
    31bc:	78 20 00 88 	store_32 s3, 8(s24)
    31c0:	62 23 00 05 	add_i s27, s2, 8
    31c4:	98 50 00 88 	store_32 s4, 20(s24)
    31c8:	18 f0 06 a0 	load_u8 s0, 444(s24)
    31cc:	00 08 00 01 	and s0, s0, 2
    31d0:	e0 00 00 f2 	bz s0, 28 <malloc+0x9f0>
    31d4:	18 00 07 05 	add_i s0, s24, 448
    31d8:	20 00 00 0f 	move s1, 0
    31dc:	40 00 00 aa 	load_sync s2, (s0)
    31e0:	40 80 f0 c0 	move s2, s1
    31e4:	40 00 00 8a 	store_sync s2, (s0)  
    31e8:	a2 ff ff f3 	bz s2, -12 <malloc+0x9e0>
    31ec:	00 80 fd c0 	move s0, s27
    31f0:	fe b3 00 a8 	load_32 ra, 44(sp)
    31f4:	7e c3 00 a8 	load_32 s27, 48(sp)
    31f8:	5e d3 00 a8 	load_32 s26, 52(sp)
    31fc:	3e e3 00 a8 	load_32 s25, 56(sp)
    3200:	1e f3 00 a8 	load_32 s24, 60(sp)
    3204:	de 03 01 05 	add_i sp, sp, 64
    3208:	1f 00 00 f0 	ret
    320c:	42 51 00 a8 	load_32 s10, 20(s2)
    3210:	4a 00 00 f4 	bnz s10, 8 <malloc+0xa1c>
    3214:	58 01 00 f6 	b 1376 <malloc+0xf78>
    3218:	62 51 00 05 	add_i s11, s2, 20
    321c:	59 01 00 f6 	b 1380 <malloc+0xf84>
    3220:	e0 40 00 a8 	load_32 s7, 16(s0)
    3224:	47 39 00 f2 	bz s7, 1832 <malloc+0x1150>
    3228:	00 41 00 05 	add_i s8, s0, 16
    322c:	a0 80 f3 c0 	move s5, s7
    3230:	e5 50 00 a8 	load_32 s7, 20(s5)
    3234:	20 01 f4 c0 	move s9, s8
    3238:	05 51 00 05 	add_i s8, s5, 20
    323c:	87 ff ff f5 	bnz s7, -16 <malloc+0xa30>
    3240:	e5 40 00 a8 	load_32 s7, 16(s5)
    3244:	05 41 00 05 	add_i s8, s5, 16
    3248:	27 ff ff f5 	bnz s7, -28 <malloc+0xa30>
    324c:	c6 80 64 c1 	cmpgt_u s6, s6, s9
    3250:	86 9e 00 f4 	bnz s6, 5072 <malloc+0x1e24>
    3254:	c0 00 00 0f 	move s6, 0
    3258:	c9 00 00 88 	store_32 s6, (s9)
    325c:	a4 0a 00 f2 	bz s4, 340 <malloc+0xbb4>
    3260:	c0 70 00 a8 	load_32 s6, 28(s0)
    3264:	e6 08 00 0b 	shl s7, s6, 2
    3268:	f8 80 53 c0 	add_i s7, s24, s7
    326c:	07 c1 04 a8 	load_32 s8, 304(s7)
    3270:	00 01 14 c1 	cmpne_i s8, s0, s8
    3274:	48 00 00 f4 	bnz s8, 8 <malloc+0xa80>
    3278:	0c 00 00 f6 	b 48 <malloc+0xaac>
    327c:	d8 40 00 a8 	load_32 s6, 16(s24)
    3280:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    3284:	e6 9c 00 f4 	bnz s6, 5020 <malloc+0x1e24>
    3288:	c4 40 00 a8 	load_32 s6, 16(s4)
    328c:	c6 00 00 c1 	cmpeq_i s6, s6, s0
    3290:	66 06 00 f4 	bnz s6, 204 <malloc+0xb60>
    3294:	c0 50 00 0f 	move s6, 20
    3298:	c4 00 53 c0 	add_i s6, s4, s6
    329c:	a6 00 00 88 	store_32 s5, (s6)
    32a0:	85 08 00 f2 	bz s5, 272 <malloc+0xbb4>
    32a4:	32 00 00 f6 	b 200 <malloc+0xb70>
    32a8:	e7 c0 04 05 	add_i s7, s7, 304
    32ac:	a7 00 00 88 	store_32 s5, (s7)
    32b0:	e5 05 00 f4 	bnz s5, 188 <malloc+0xb70>
    32b4:	80 04 00 0f 	move s4, 1
    32b8:	84 00 b3 c0 	shl s4, s4, s6
    32bc:	84 fc ff 03 	xor s4, s4, -1
    32c0:	21 00 12 c0 	and s1, s1, s4
    32c4:	38 10 00 88 	store_32 s1, 4(s24)
    32c8:	82 3c 00 16 	cmpgt_u s4, s2, 15
    32cc:	44 00 00 f4 	bnz s4, 8 <malloc+0xad8>
    32d0:	3a 00 00 f6 	b 232 <malloc+0xbbc>
    32d4:	9a 0c 00 00 	or s4, s26, 3
    32d8:	80 10 00 88 	store_32 s4, 4(s0)
    32dc:	82 04 00 00 	or s4, s2, 1
    32e0:	83 10 00 88 	store_32 s4, 4(s3)
    32e4:	a3 00 51 c0 	add_i s5, s3, s2
    32e8:	82 fc 03 16 	cmpgt_u s4, s2, 255
    32ec:	45 00 00 88 	store_32 s2, (s5)
    32f0:	04 02 00 f4 	bnz s4, 64 <malloc+0xb34>
    32f4:	22 0c 00 0a 	shr s1, s2, 3
    32f8:	58 00 00 a8 	load_32 s2, (s24)
    32fc:	80 04 00 0f 	move s4, 1
    3300:	a1 0c 00 0b 	shl s5, s1, 3
    3304:	b8 80 52 c0 	add_i s5, s24, s5
    3308:	84 80 b0 c0 	shl s4, s4, s1
    330c:	c2 00 12 c0 	and s6, s2, s4
    3310:	25 a0 00 05 	add_i s1, s5, 40
    3314:	46 00 00 f4 	bnz s6, 8 <malloc+0xb20>
    3318:	aa 00 00 f6 	b 680 <malloc+0xdc4>
    331c:	41 20 00 a8 	load_32 s2, 8(s1)
    3320:	98 40 00 a8 	load_32 s4, 16(s24)
    3324:	84 00 91 c1 	cmple_u s4, s4, s2
    3328:	24 15 00 f4 	bnz s4, 676 <malloc+0xdd0>
    332c:	bd 04 00 f6 	b 4852 <malloc+0x1e24>
    3330:	80 00 00 0f 	move s4, 0
    3334:	c2 20 00 0a 	shr s6, s2, 8
    3338:	a0 00 f2 c0 	move s5, s4
    333c:	86 19 00 f2 	bz s6, 816 <malloc+0xe70>
    3340:	bf fc 00 4f 	movehi s5, 2047
    3344:	a5 fc 7f 00 	or s5, s5, 8191
    3348:	a2 80 62 c1 	cmpgt_u s5, s2, s5
    334c:	45 00 00 f4 	bnz s5, 8 <malloc+0xb58>
    3350:	ab 00 00 f6 	b 684 <malloc+0xe00>
    3354:	a0 7c 00 0f 	move s5, 31
    3358:	c5 00 00 f6 	b 788 <malloc+0xe70>
    335c:	c0 40 00 0f 	move s6, 16
    3360:	c4 00 53 c0 	add_i s6, s4, s6
    3364:	a6 00 00 88 	store_32 s5, (s6)
    3368:	45 02 00 f2 	bz s5, 72 <malloc+0xbb4>
    336c:	d8 40 00 a8 	load_32 s6, 16(s24)
    3370:	e6 80 62 c1 	cmpgt_u s7, s6, s5
    3374:	67 95 00 f4 	bnz s7, 4780 <malloc+0x1e24>
    3378:	85 60 00 88 	store_32 s4, 24(s5)
    337c:	80 40 00 a8 	load_32 s4, 16(s0)
    3380:	a4 00 00 f2 	bz s4, 20 <malloc+0xb98>
    3384:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    3388:	c6 94 00 f4 	bnz s6, 4760 <malloc+0x1e24>
    338c:	85 40 00 88 	store_32 s4, 16(s5)
    3390:	a4 60 00 88 	store_32 s5, 24(s4)
    3394:	80 50 00 a8 	load_32 s4, 20(s0)
    3398:	c4 00 00 f2 	bz s4, 24 <malloc+0xbb4>
    339c:	d8 40 00 a8 	load_32 s6, 16(s24)
    33a0:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    33a4:	e6 93 00 f4 	bnz s6, 4732 <malloc+0x1e24>
    33a8:	85 50 00 88 	store_32 s4, 20(s5)
    33ac:	a4 60 00 88 	store_32 s5, 24(s4)
    33b0:	82 3c 00 16 	cmpgt_u s4, s2, 15
    33b4:	04 f9 ff f5 	bnz s4, -224 <malloc+0xad8>
    33b8:	22 00 5d c0 	add_i s1, s2, s26
    33bc:	45 ff ff f7 	b -748 <malloc+0x8d4>
    33c0:	e0 80 f0 c0 	move s7, s1
    33c4:	05 00 00 4f 	movehi s0, 5
    33c8:	3a c0 00 05 	add_i s1, s26, 48
    33cc:	3e 80 00 88 	store_32 s1, 32(sp)
    33d0:	60 a3 4c 00 	or s27, s0, 4904
    33d4:	00 04 00 0f 	move s0, 1
    33d8:	3b 00 00 aa 	load_sync s1, (s27)
    33dc:	40 00 f0 c0 	move s2, s0
    33e0:	5b 00 00 8a 	store_sync s2, (s27)  
    33e4:	a2 ff ff f3 	bz s2, -12 <malloc+0xbdc>
    33e8:	01 01 00 f2 	bz s1, 32 <malloc+0xc0c>
    33ec:	3b 00 00 a8 	load_32 s1, (s27)
    33f0:	e1 ff ff f5 	bnz s1, -4 <malloc+0xbf0>
    33f4:	3b 00 00 aa 	load_sync s1, (s27)
    33f8:	40 00 f0 c0 	move s2, s0
    33fc:	5b 00 00 8a 	store_sync s2, (s27)  
    3400:	a2 ff ff f3 	bz s2, -12 <malloc+0xbf8>
    3404:	41 ff ff f5 	bnz s1, -24 <malloc+0xbf0>
    3408:	47 00 00 f4 	bnz s7, 8 <malloc+0xc14>
    340c:	1e 00 00 f6 	b 120 <malloc+0xc88>
    3410:	18 30 00 a8 	load_32 s0, 12(s24)
    3414:	c0 00 00 0f 	move s6, 0
    3418:	39 20 00 a8 	load_32 s1, 8(s25)
    341c:	5f fc 7f 4f 	movehi s2, 262143
    3420:	05 00 60 c0 	sub_i s0, s5, s0
    3424:	00 80 50 c0 	add_i s0, s0, s1
    3428:	26 80 60 c0 	sub_i s1, s6, s1
    342c:	00 80 10 c0 	and s0, s0, s1
    3430:	22 f8 7f 00 	or s1, s2, 8190
    3434:	20 80 60 c1 	cmpgt_u s1, s0, s1
    3438:	01 2b 00 f4 	bnz s1, 1376 <malloc+0x119c>
    343c:	be 30 00 88 	store_32 s5, 12(sp)
    3440:	9e 70 00 88 	store_32 s4, 28(sp)
    3444:	1e 50 00 88 	store_32 s0, 20(sp)
    3448:	fe 60 00 88 	store_32 s7, 24(sp)
    344c:	bb 12 00 f8 	call 19180 <sbrk>
    3450:	5e 60 00 a8 	load_32 s2, 24(sp)
    3454:	22 00 00 a8 	load_32 s1, (s2)
    3458:	42 10 00 a8 	load_32 s2, 4(s2)
    345c:	40 01 f0 c0 	move s10, s0
    3460:	01 00 51 c0 	add_i s0, s1, s2
    3464:	0a 00 10 c1 	cmpne_i s0, s10, s0
    3468:	40 06 00 f4 	bnz s0, 200 <malloc+0xd34>
    346c:	3e 51 00 a8 	load_32 s9, 20(sp)
    3470:	0a fc ff 10 	cmpeq_i s0, s10, -1
    3474:	c0 80 f4 c0 	move s6, s9
    3478:	9e 70 00 a8 	load_32 s4, 28(sp)
    347c:	e0 28 00 f4 	bnz s0, 1308 <malloc+0x119c>
    3480:	4b 01 00 f6 	b 1324 <malloc+0x11b0>
    3484:	00 00 00 0f 	move s0, 0
    3488:	be 30 00 88 	store_32 s5, 12(sp)
    348c:	9e 70 00 88 	store_32 s4, 28(sp)
    3490:	1e 40 00 88 	store_32 s0, 16(sp)
    3494:	a9 12 00 f8 	call 19108 <sbrk>
    3498:	a0 00 f0 c0 	move s5, s0
    349c:	05 fc ff 10 	cmpeq_i s0, s5, -1
    34a0:	80 0a 00 f4 	bnz s0, 336 <malloc+0xdf4>
    34a4:	99 10 00 a8 	load_32 s4, 4(s25)
    34a8:	7e 70 00 a8 	load_32 s3, 28(sp)
    34ac:	24 fc ff 05 	add_i s1, s4, -1
    34b0:	00 80 f1 c0 	move s0, s3
    34b4:	41 80 12 c0 	and s2, s1, s5
    34b8:	e2 00 00 f2 	bz s2, 28 <malloc+0xcd8>
    34bc:	40 00 00 0f 	move s2, 0
    34c0:	21 80 52 c0 	add_i s1, s1, s5
    34c4:	63 80 62 c0 	sub_i s3, s3, s5
    34c8:	02 00 62 c0 	sub_i s0, s2, s4
    34cc:	01 00 10 c0 	and s0, s1, s0
    34d0:	03 00 50 c0 	add_i s0, s3, s0
    34d4:	78 c0 06 a8 	load_32 s3, 432(s24)
    34d8:	20 00 9d c1 	cmple_u s1, s0, s26
    34dc:	de 40 00 a8 	load_32 s6, 16(sp)
    34e0:	a1 25 00 f4 	bnz s1, 1204 <malloc+0x1198>
    34e4:	3f fc 7f 4f 	movehi s1, 262143
    34e8:	9e 70 00 a8 	load_32 s4, 28(sp)
    34ec:	21 f8 7f 00 	or s1, s1, 8190
    34f0:	20 80 60 c1 	cmpgt_u s1, s0, s1
    34f4:	21 25 00 f4 	bnz s1, 1188 <malloc+0x119c>
    34f8:	38 e0 06 a8 	load_32 s1, 440(s24)
    34fc:	c1 00 00 f2 	bz s1, 24 <malloc+0xd18>
    3500:	43 00 50 c0 	add_i s2, s3, s0
    3504:	62 80 91 c1 	cmple_u s3, s2, s3
    3508:	83 24 00 f4 	bnz s3, 1168 <malloc+0x119c>
    350c:	22 80 60 c1 	cmpgt_u s1, s2, s1
    3510:	41 24 00 f4 	bnz s1, 1160 <malloc+0x119c>
    3514:	1e 50 00 88 	store_32 s0, 20(sp)
    3518:	be 60 00 88 	store_32 s5, 24(sp)
    351c:	87 12 00 f8 	call 18972 <sbrk>
    3520:	3e 60 00 a8 	load_32 s1, 24(sp)
    3524:	40 01 f0 c0 	move s10, s0
    3528:	0a 80 00 c1 	cmpeq_i s0, s10, s1
    352c:	00 22 00 f4 	bnz s0, 1088 <malloc+0x1170>
    3530:	9e 70 00 a8 	load_32 s4, 28(sp)
    3534:	c0 00 00 0f 	move s6, 0
    3538:	3e 51 00 a8 	load_32 s9, 20(sp)
    353c:	1e 80 00 a8 	load_32 s0, 32(sp)
    3540:	00 80 94 c1 	cmple_u s0, s0, s9
    3544:	20 1e 00 f4 	bnz s0, 964 <malloc+0x110c>
    3548:	1f fc 7f 4f 	movehi s0, 262143
    354c:	60 f8 7f 00 	or s3, s0, 8190
    3550:	29 80 61 c1 	cmpgt_u s1, s9, s3
    3554:	a1 1d 00 f4 	bnz s1, 948 <malloc+0x110c>
    3558:	2a fc ff 10 	cmpeq_i s1, s10, -1
    355c:	61 1d 00 f4 	bnz s1, 940 <malloc+0x110c>
    3560:	3e 63 00 88 	store_32 s25, 24(sp)
    3564:	39 20 00 a8 	load_32 s1, 8(s25)
    3568:	20 03 00 0f 	move s25, 0
    356c:	5e 30 00 a8 	load_32 s2, 12(sp)
    3570:	42 80 64 c0 	sub_i s2, s2, s9
    3574:	42 80 50 c0 	add_i s2, s2, s1
    3578:	39 80 60 c0 	sub_i s1, s25, s1
    357c:	02 80 10 c0 	and s0, s2, s1
    3580:	20 80 61 c1 	cmpgt_u s1, s0, s3
    3584:	a1 1e 00 f4 	bnz s1, 980 <malloc+0x115c>
    3588:	de 40 00 88 	store_32 s6, 16(sp)
    358c:	9e 70 00 88 	store_32 s4, 28(sp)
    3590:	5e 81 00 88 	store_32 s10, 32(sp)
    3594:	1e 30 00 88 	store_32 s0, 12(sp)
    3598:	68 12 00 f8 	call 18848 <sbrk>
    359c:	00 fc ff 10 	cmpeq_i s0, s0, -1
    35a0:	e0 1e 00 f4 	bnz s0, 988 <malloc+0x1180>
    35a4:	3e 51 00 a8 	load_32 s9, 20(sp)
    35a8:	1e 30 00 a8 	load_32 s0, 12(sp)
    35ac:	3e 63 00 a8 	load_32 s25, 24(sp)
    35b0:	5e 81 00 a8 	load_32 s10, 32(sp)
    35b4:	9e 70 00 a8 	load_32 s4, 28(sp)
    35b8:	20 81 54 c0 	add_i s9, s0, s9
    35bc:	fc 00 00 f6 	b 1008 <malloc+0x11b0>
    35c0:	42 00 02 c0 	or s2, s2, s4
    35c4:	58 00 00 88 	store_32 s2, (s24)
    35c8:	40 80 f0 c0 	move s2, s1
    35cc:	61 20 00 88 	store_32 s3, 8(s1)
    35d0:	60 23 00 05 	add_i s27, s0, 8
    35d4:	62 30 00 88 	store_32 s3, 12(s2)
    35d8:	43 20 00 88 	store_32 s2, 8(s3)
    35dc:	23 30 00 88 	store_32 s1, 12(s3)
    35e0:	18 f0 06 a0 	load_u8 s0, 444(s24)
    35e4:	00 08 00 01 	and s0, s0, 2
    35e8:	20 e0 ff f3 	bz s0, -1020 <malloc+0x9f0>
    35ec:	fa fe ff f7 	b -1048 <malloc+0x9d8>
    35f0:	9e 70 00 a8 	load_32 s4, 28(sp)
    35f4:	de 40 00 a8 	load_32 s6, 16(sp)
    35f8:	e8 00 00 f6 	b 928 <malloc+0x119c>
    35fc:	bf 0c 00 4f 	movehi s5, 127
    3600:	ff 04 00 4f 	movehi s7, 63
    3604:	1e 01 00 4f 	movehi s8, 30
    3608:	a5 00 7c 00 	or s5, s5, 7936
    360c:	a6 80 52 c0 	add_i s5, s6, s5
    3610:	e7 00 40 00 	or s7, s7, 4096
    3614:	a5 40 00 0a 	shr s5, s5, 16
    3618:	a5 20 00 01 	and s5, s5, 8
    361c:	c6 80 b2 c0 	shl s6, s6, s5
    3620:	e6 80 53 c0 	add_i s7, s6, s7
    3624:	e7 40 00 0a 	shr s7, s7, 16
    3628:	e7 10 00 01 	and s7, s7, 4
    362c:	c6 80 b3 c0 	shl s6, s6, s7
    3630:	a7 80 02 c0 	or s5, s7, s5
    3634:	06 01 54 c0 	add_i s8, s6, s8
    3638:	08 41 00 0a 	shr s8, s8, 16
    363c:	e8 08 00 01 	and s7, s8, 2
    3640:	00 39 00 0f 	move s8, 14
    3644:	a5 80 03 c0 	or s5, s5, s7
    3648:	c6 80 b3 c0 	shl s6, s6, s7
    364c:	a8 80 62 c0 	sub_i s5, s8, s5
    3650:	c6 3c 00 0a 	shr s6, s6, 15
    3654:	a5 00 53 c0 	add_i s5, s5, s6
    3658:	c5 1c 00 05 	add_i s6, s5, 7
    365c:	c2 00 a3 c0 	shr s6, s2, s6
    3660:	a5 04 00 0b 	shl s5, s5, 1
    3664:	c6 04 00 01 	and s6, s6, 1
    3668:	a6 80 02 c0 	or s5, s6, s5
    366c:	c5 08 00 0b 	shl s6, s5, 2
    3670:	a3 70 00 88 	store_32 s5, 28(s3)
    3674:	e0 04 00 0f 	move s7, 1
    3678:	83 50 00 88 	store_32 s4, 20(s3)
    367c:	d8 00 53 c0 	add_i s6, s24, s6
    3680:	83 40 00 88 	store_32 s4, 16(s3)
    3684:	e7 80 b2 c0 	shl s7, s7, s5
    3688:	c6 c0 04 05 	add_i s6, s6, 304
    368c:	01 81 13 c0 	and s8, s1, s7
    3690:	48 00 00 f4 	bnz s8, 8 <malloc+0xe9c>
    3694:	08 00 00 f6 	b 32 <malloc+0xeb8>
    3698:	86 00 00 a8 	load_32 s4, (s6)
    369c:	25 7c 00 10 	cmpeq_i s1, s5, 31
    36a0:	41 01 00 f4 	bnz s1, 40 <malloc+0xecc>
    36a4:	20 64 00 0f 	move s1, 25
    36a8:	a5 04 00 0a 	shr s5, s5, 1
    36ac:	21 80 62 c0 	sub_i s1, s1, s5
    36b0:	07 00 00 f6 	b 28 <malloc+0xed0>
    36b4:	21 80 03 c0 	or s1, s1, s7
    36b8:	38 10 00 88 	store_32 s1, 4(s24)
    36bc:	66 00 00 88 	store_32 s3, (s6)
    36c0:	c3 60 00 88 	store_32 s6, 24(s3)
    36c4:	14 00 00 f6 	b 80 <malloc+0xf18>
    36c8:	20 00 00 0f 	move s1, 0
    36cc:	a2 80 b0 c0 	shl s5, s2, s1
    36d0:	20 00 f2 c0 	move s1, s4
    36d4:	81 10 00 a8 	load_32 s4, 4(s1)
    36d8:	84 e0 ff 01 	and s4, s4, -8
    36dc:	84 00 01 c1 	cmpeq_i s4, s4, s2
    36e0:	84 02 00 f4 	bnz s4, 80 <malloc+0xf34>
    36e4:	85 74 00 0a 	shr s4, s5, 29
    36e8:	a5 04 00 0b 	shl s5, s5, 1
    36ec:	84 10 00 01 	and s4, s4, 4
    36f0:	c1 00 52 c0 	add_i s6, s1, s4
    36f4:	86 40 00 a8 	load_32 s4, 16(s6)
    36f8:	c4 fe ff f5 	bnz s4, -40 <malloc+0xed4>
    36fc:	98 40 00 a8 	load_32 s4, 16(s24)
    3700:	46 40 00 05 	add_i s2, s6, 16
    3704:	84 00 61 c1 	cmpgt_u s4, s4, s2
    3708:	c4 78 00 f4 	bnz s4, 3864 <malloc+0x1e24>
    370c:	62 00 00 88 	store_32 s3, (s2)
    3710:	23 60 00 88 	store_32 s1, 24(s3)
    3714:	63 30 00 88 	store_32 s3, 12(s3)
    3718:	60 23 00 05 	add_i s27, s0, 8
    371c:	63 20 00 88 	store_32 s3, 8(s3)
    3720:	18 f0 06 a0 	load_u8 s0, 444(s24)
    3724:	00 08 00 01 	and s0, s0, 2
    3728:	20 d6 ff f3 	bz s0, -1340 <malloc+0x9f0>
    372c:	aa fe ff f7 	b -1368 <malloc+0x9d8>
    3730:	41 20 00 a8 	load_32 s2, 8(s1)
    3734:	98 40 00 a8 	load_32 s4, 16(s24)
    3738:	a4 00 61 c1 	cmpgt_u s5, s4, s2
    373c:	25 77 00 f4 	bnz s5, 3812 <malloc+0x1e24>
    3740:	84 80 60 c1 	cmpgt_u s4, s4, s1
    3744:	e4 76 00 f4 	bnz s4, 3804 <malloc+0x1e24>
    3748:	62 30 00 88 	store_32 s3, 12(s2)
    374c:	60 23 00 05 	add_i s27, s0, 8
    3750:	61 20 00 88 	store_32 s3, 8(s1)
    3754:	43 20 00 88 	store_32 s2, 8(s3)
    3758:	23 30 00 88 	store_32 s1, 12(s3)
    375c:	20 00 00 0f 	move s1, 0
    3760:	23 60 00 88 	store_32 s1, 24(s3)
    3764:	18 f0 06 a0 	load_u8 s0, 444(s24)
    3768:	00 08 00 01 	and s0, s0, 2
    376c:	00 d4 ff f3 	bz s0, -1408 <malloc+0x9f0>
    3770:	99 fe ff f7 	b -1436 <malloc+0x9d8>
    3774:	42 41 00 a8 	load_32 s10, 16(s2)
    3778:	4a 0f 00 f2 	bz s10, 488 <malloc+0x1164>
    377c:	62 41 00 05 	add_i s11, s2, 16
    3780:	00 01 f5 c0 	move s8, s10
    3784:	48 51 00 a8 	load_32 s10, 20(s8)
    3788:	80 81 f5 c0 	move s12, s11
    378c:	68 51 00 05 	add_i s11, s8, 20
    3790:	8a ff ff f5 	bnz s10, -16 <malloc+0xf84>
    3794:	48 41 00 a8 	load_32 s10, 16(s8)
    3798:	68 41 00 05 	add_i s11, s8, 16
    379c:	2a ff ff f5 	bnz s10, -28 <malloc+0xf84>
    37a0:	29 01 66 c1 	cmpgt_u s9, s9, s12
    37a4:	e9 73 00 f4 	bnz s9, 3708 <malloc+0x1e24>
    37a8:	cc 00 00 88 	store_32 s6, (s12)
    37ac:	27 09 00 f2 	bz s7, 292 <malloc+0x10d4>
    37b0:	c2 70 00 a8 	load_32 s6, 28(s2)
    37b4:	26 09 00 0b 	shl s9, s6, 2
    37b8:	38 81 54 c0 	add_i s9, s24, s9
    37bc:	49 c1 04 a8 	load_32 s10, 304(s9)
    37c0:	42 01 15 c1 	cmpne_i s10, s2, s10
    37c4:	4a 00 00 f4 	bnz s10, 8 <malloc+0xfd0>
    37c8:	0c 00 00 f6 	b 48 <malloc+0xffc>
    37cc:	b8 40 00 a8 	load_32 s5, 16(s24)
    37d0:	a5 80 63 c1 	cmpgt_u s5, s5, s7
    37d4:	65 72 00 f4 	bnz s5, 3660 <malloc+0x1e24>
    37d8:	a7 40 00 a8 	load_32 s5, 16(s7)
    37dc:	a5 00 01 c1 	cmpeq_i s5, s5, s2
    37e0:	e5 04 00 f4 	bnz s5, 156 <malloc+0x1080>
    37e4:	a0 50 00 0f 	move s5, 20
    37e8:	a7 80 52 c0 	add_i s5, s7, s5
    37ec:	05 01 00 88 	store_32 s8, (s5)
    37f0:	08 07 00 f2 	bz s8, 224 <malloc+0x10d4>
    37f4:	26 00 00 f6 	b 152 <malloc+0x1090>
    37f8:	29 c1 04 05 	add_i s9, s9, 304
    37fc:	09 01 00 88 	store_32 s8, (s9)
    3800:	68 04 00 f4 	bnz s8, 140 <malloc+0x1090>
    3804:	e0 04 00 0f 	move s7, 1
    3808:	c7 00 b3 c0 	shl s6, s7, s6
    380c:	c6 fc ff 03 	xor s6, s6, -1
    3810:	a5 00 13 c0 	and s5, s5, s6
    3814:	b8 10 00 88 	store_32 s5, 4(s24)
    3818:	a3 3c 00 16 	cmpgt_u s5, s3, 15
    381c:	45 00 00 f4 	bnz s5, 8 <malloc+0x1028>
    3820:	2e 00 00 f6 	b 184 <malloc+0x10dc>
    3824:	ba 0c 00 00 	or s5, s26, 3
    3828:	a2 10 00 88 	store_32 s5, 4(s2)
    382c:	a4 80 51 c0 	add_i s5, s4, s3
    3830:	c3 04 00 00 	or s6, s3, 1
    3834:	c4 10 00 88 	store_32 s6, 4(s4)
    3838:	65 00 00 88 	store_32 s3, (s5)
    383c:	a1 07 00 f2 	bz s1, 244 <malloc+0x1134>
    3840:	21 0c 00 0a 	shr s1, s1, 3
    3844:	a0 04 00 0f 	move s5, 1
    3848:	e1 0c 00 0b 	shl s7, s1, 3
    384c:	c5 80 b0 c0 	shl s6, s5, s1
    3850:	38 50 00 a8 	load_32 s1, 20(s24)
    3854:	b8 80 53 c0 	add_i s5, s24, s7
    3858:	e6 00 10 c0 	and s7, s6, s0
    385c:	a5 a0 00 05 	add_i s5, s5, 40
    3860:	47 00 00 f4 	bnz s7, 8 <malloc+0x106c>
    3864:	2c 00 00 f6 	b 176 <malloc+0x1118>
    3868:	05 20 00 a8 	load_32 s0, 8(s5)
    386c:	d8 40 00 a8 	load_32 s6, 16(s24)
    3870:	c6 00 90 c1 	cmple_u s6, s6, s0
    3874:	66 05 00 f4 	bnz s6, 172 <malloc+0x1124>
    3878:	6a 03 00 f6 	b 3496 <malloc+0x1e24>
    387c:	a0 40 00 0f 	move s5, 16
    3880:	a7 80 52 c0 	add_i s5, s7, s5
    3884:	05 01 00 88 	store_32 s8, (s5)
    3888:	48 02 00 f2 	bz s8, 72 <malloc+0x10d4>
    388c:	b8 40 00 a8 	load_32 s5, 16(s24)
    3890:	c5 00 64 c1 	cmpgt_u s6, s5, s8
    3894:	66 6c 00 f4 	bnz s6, 3468 <malloc+0x1e24>
    3898:	e8 60 00 88 	store_32 s7, 24(s8)
    389c:	c2 40 00 a8 	load_32 s6, 16(s2)
    38a0:	a6 00 00 f2 	bz s6, 20 <malloc+0x10b8>
    38a4:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    38a8:	c5 6b 00 f4 	bnz s5, 3448 <malloc+0x1e24>
    38ac:	c8 40 00 88 	store_32 s6, 16(s8)
    38b0:	06 61 00 88 	store_32 s8, 24(s6)
    38b4:	a2 50 00 a8 	load_32 s5, 20(s2)
    38b8:	c5 00 00 f2 	bz s5, 24 <malloc+0x10d4>
    38bc:	d8 40 00 a8 	load_32 s6, 16(s24)
    38c0:	c6 80 62 c1 	cmpgt_u s6, s6, s5
    38c4:	e6 6a 00 f4 	bnz s6, 3420 <malloc+0x1e24>
    38c8:	a8 50 00 88 	store_32 s5, 20(s8)
    38cc:	05 61 00 88 	store_32 s8, 24(s5)
    38d0:	a3 3c 00 16 	cmpgt_u s5, s3, 15
    38d4:	85 fa ff f5 	bnz s5, -176 <malloc+0x1028>
    38d8:	03 00 5d c0 	add_i s0, s3, s26
    38dc:	22 00 50 c0 	add_i s1, s2, s0
    38e0:	62 23 00 05 	add_i s27, s2, 8
    38e4:	00 0c 00 00 	or s0, s0, 3
    38e8:	02 10 00 88 	store_32 s0, 4(s2)
    38ec:	01 10 00 a8 	load_32 s0, 4(s1)
    38f0:	00 04 00 00 	or s0, s0, 1
    38f4:	01 10 00 88 	store_32 s0, 4(s1)
    38f8:	18 f0 06 a0 	load_u8 s0, 444(s24)
    38fc:	00 08 00 01 	and s0, s0, 2
    3900:	60 c7 ff f3 	bz s0, -1812 <malloc+0x9f0>
    3904:	34 fe ff f7 	b -1840 <malloc+0x9d8>
    3908:	0a fc ff 11 	cmpne_i s0, s10, -1
    390c:	00 05 00 f4 	bnz s0, 160 <malloc+0x11b0>
    3910:	22 00 00 f6 	b 136 <malloc+0x119c>
    3914:	06 00 00 c0 	or s0, s6, s0
    3918:	18 00 00 88 	store_32 s0, (s24)
    391c:	00 80 f2 c0 	move s0, s5
    3920:	25 20 00 88 	store_32 s1, 8(s5)
    3924:	20 30 00 88 	store_32 s1, 12(s0)
    3928:	01 20 00 88 	store_32 s0, 8(s1)
    392c:	a1 30 00 88 	store_32 s5, 12(s1)
    3930:	78 20 00 88 	store_32 s3, 8(s24)
    3934:	62 23 00 05 	add_i s27, s2, 8
    3938:	98 50 00 88 	store_32 s4, 20(s24)
    393c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    3940:	00 08 00 01 	and s0, s0, 2
    3944:	40 c5 ff f3 	bz s0, -1880 <malloc+0x9f0>
    3948:	23 fe ff f7 	b -1908 <malloc+0x9d8>
    394c:	a0 00 00 0f 	move s5, 0
    3950:	04 d3 ff f3 	bz s4, -1440 <malloc+0xbb4>
    3954:	43 fe ff f7 	b -1780 <malloc+0xa64>
    3958:	3e 63 00 a8 	load_32 s25, 24(sp)
    395c:	14 00 00 f6 	b 80 <malloc+0x11b0>
    3960:	00 01 f3 c0 	move s8, s6
    3964:	67 fb ff f3 	bz s7, -148 <malloc+0x10d4>
    3968:	92 ff ff f7 	b -440 <malloc+0xfb4>
    396c:	40 81 f0 c0 	move s10, s1
    3970:	3e 51 00 a8 	load_32 s9, 20(sp)
    3974:	9e 70 00 a8 	load_32 s4, 28(sp)
    3978:	0d 00 00 f6 	b 52 <malloc+0x11b0>
    397c:	1e 50 00 a8 	load_32 s0, 20(sp)
    3980:	3e 40 00 a8 	load_32 s1, 16(sp)
    3984:	01 00 60 c0 	sub_i s0, s1, s0
    3988:	6c 11 00 f8 	call 17840 <sbrk>
    398c:	c0 80 fc c0 	move s6, s25
    3990:	3e 63 00 a8 	load_32 s25, 24(sp)
    3994:	9e 70 00 a8 	load_32 s4, 28(sp)
    3998:	18 f0 06 a8 	load_32 s0, 444(s24)
    399c:	40 fd ff 0f 	move s10, -1
    39a0:	00 10 00 00 	or s0, s0, 4
    39a4:	18 f0 06 88 	store_32 s0, 444(s24)
    39a8:	20 01 f3 c0 	move s9, s6
    39ac:	00 00 00 0f 	move s0, 0
    39b0:	3b 00 00 aa 	load_sync s1, (s27)
    39b4:	20 00 f0 c0 	move s1, s0
    39b8:	3b 00 00 8a 	store_sync s1, (s27)  
    39bc:	a1 ff ff f3 	bz s1, -12 <malloc+0x11b4>
    39c0:	1f fc 7f 4f 	movehi s0, 262143
    39c4:	00 f8 7f 00 	or s0, s0, 8190
    39c8:	04 00 60 c1 	cmpgt_u s0, s4, s0
    39cc:	40 05 00 f4 	bnz s0, 168 <malloc+0x1278>
    39d0:	0a fc ff 11 	cmpne_i s0, s10, -1
    39d4:	00 05 00 f4 	bnz s0, 160 <malloc+0x1278>
    39d8:	05 00 00 4f 	movehi s0, 5
    39dc:	3e 63 00 88 	store_32 s25, 24(sp)
    39e0:	20 a3 4c 00 	or s25, s0, 4904
    39e4:	00 04 00 0f 	move s0, 1
    39e8:	39 00 00 aa 	load_sync s1, (s25)
    39ec:	40 00 f0 c0 	move s2, s0
    39f0:	59 00 00 8a 	store_sync s2, (s25)  
    39f4:	a2 ff ff f3 	bz s2, -12 <malloc+0x11ec>
    39f8:	01 01 00 f2 	bz s1, 32 <malloc+0x121c>
    39fc:	39 00 00 a8 	load_32 s1, (s25)
    3a00:	e1 ff ff f5 	bnz s1, -4 <malloc+0x1200>
    3a04:	39 00 00 aa 	load_sync s1, (s25)
    3a08:	40 00 f0 c0 	move s2, s0
    3a0c:	59 00 00 8a 	store_sync s2, (s25)  
    3a10:	a2 ff ff f3 	bz s2, -12 <malloc+0x1208>
    3a14:	41 ff ff f5 	bnz s1, -24 <malloc+0x1200>
    3a18:	00 00 f2 c0 	move s0, s4
    3a1c:	47 11 00 f8 	call 17692 <sbrk>
    3a20:	60 03 00 0f 	move s27, 0
    3a24:	1e 80 00 88 	store_32 s0, 32(sp)
    3a28:	00 80 fd c0 	move s0, s27
    3a2c:	43 11 00 f8 	call 17676 <sbrk>
    3a30:	39 00 00 aa 	load_sync s1, (s25)
    3a34:	20 80 fd c0 	move s1, s27
    3a38:	39 00 00 8a 	store_sync s1, (s25)  
    3a3c:	a1 ff ff f3 	bz s1, -12 <malloc+0x1234>
    3a40:	5e 81 00 a8 	load_32 s10, 32(sp)
    3a44:	2a 00 70 c1 	cmpge_u s1, s10, s0
    3a48:	01 bc ff f5 	bnz s1, -2176 <malloc+0x9cc>
    3a4c:	2a fc ff 10 	cmpeq_i s1, s10, -1
    3a50:	c1 bb ff f5 	bnz s1, -2184 <malloc+0x9cc>
    3a54:	20 fc ff 10 	cmpeq_i s1, s0, -1
    3a58:	81 bb ff f5 	bnz s1, -2192 <malloc+0x9cc>
    3a5c:	20 01 65 c0 	sub_i s9, s0, s10
    3a60:	3e 63 00 a8 	load_32 s25, 24(sp)
    3a64:	1a a0 00 05 	add_i s0, s26, 40
    3a68:	09 00 60 c1 	cmpgt_u s0, s9, s0
    3a6c:	80 00 00 f4 	bnz s0, 16 <malloc+0x1280>
    3a70:	d6 fd ff f7 	b -2216 <malloc+0x9cc>
    3a74:	0a fc ff 10 	cmpeq_i s0, s10, -1
    3a78:	80 3b 00 f4 	bnz s0, 1904 <malloc+0x19ec>
    3a7c:	18 c0 06 a8 	load_32 s0, 432(s24)
    3a80:	00 80 54 c0 	add_i s0, s0, s9
    3a84:	18 c0 06 88 	store_32 s0, 432(s24)
    3a88:	38 d0 06 a8 	load_32 s1, 436(s24)
    3a8c:	20 80 90 c1 	cmple_u s1, s0, s1
    3a90:	41 00 00 f4 	bnz s1, 8 <malloc+0x129c>
    3a94:	18 d0 06 88 	store_32 s0, 436(s24)
    3a98:	58 60 00 a8 	load_32 s2, 24(s24)
    3a9c:	42 01 00 f2 	bz s2, 40 <malloc+0x12c8>
    3aa0:	18 10 07 05 	add_i s0, s24, 452
    3aa4:	60 00 00 a8 	load_32 s3, (s0)
    3aa8:	20 10 00 a8 	load_32 s1, 4(s0)
    3aac:	83 80 50 c0 	add_i s4, s3, s1
    3ab0:	8a 00 02 c1 	cmpeq_i s4, s10, s4
    3ab4:	04 11 00 f4 	bnz s4, 544 <malloc+0x14d8>
    3ab8:	00 20 00 a8 	load_32 s0, 8(s0)
    3abc:	20 13 00 f2 	bz s0, 612 <malloc+0x1524>
    3ac0:	f9 ff ff f7 	b -28 <malloc+0x12a8>
    3ac4:	18 40 00 a8 	load_32 s0, 16(s24)
    3ac8:	60 00 00 f2 	bz s0, 12 <malloc+0x12d8>
    3acc:	0a 00 70 c1 	cmpge_u s0, s10, s0
    3ad0:	40 00 00 f4 	bnz s0, 8 <malloc+0x12dc>
    3ad4:	58 41 00 88 	store_32 s10, 16(s24)
    3ad8:	58 11 07 88 	store_32 s10, 452(s24)
    3adc:	00 00 00 0f 	move s0, 0
    3ae0:	38 21 07 88 	store_32 s9, 456(s24)
    3ae4:	4a 20 00 05 	add_i s2, s10, 8
    3ae8:	18 40 07 88 	store_32 s0, 464(s24)
    3aec:	39 00 00 a8 	load_32 s1, (s25)
    3af0:	38 90 00 88 	store_32 s1, 36(s24)
    3af4:	20 fc ff 0f 	move s1, -1
    3af8:	38 80 00 88 	store_32 s1, 32(s24)
    3afc:	38 a0 00 05 	add_i s1, s24, 40
    3b00:	38 d0 00 88 	store_32 s1, 52(s24)
    3b04:	42 1c 00 01 	and s2, s2, 7
    3b08:	38 c0 00 88 	store_32 s1, 48(s24)
    3b0c:	38 c0 00 05 	add_i s1, s24, 48
    3b10:	38 f0 00 88 	store_32 s1, 60(s24)
    3b14:	38 e0 00 88 	store_32 s1, 56(s24)
    3b18:	38 e0 00 05 	add_i s1, s24, 56
    3b1c:	38 10 01 88 	store_32 s1, 68(s24)
    3b20:	42 00 00 10 	cmpeq_i s2, s2, 0
    3b24:	38 00 01 88 	store_32 s1, 64(s24)
    3b28:	38 00 01 05 	add_i s1, s24, 64
    3b2c:	38 30 01 88 	store_32 s1, 76(s24)
    3b30:	38 20 01 88 	store_32 s1, 72(s24)
    3b34:	38 20 01 05 	add_i s1, s24, 72
    3b38:	38 50 01 88 	store_32 s1, 84(s24)
    3b3c:	38 40 01 88 	store_32 s1, 80(s24)
    3b40:	38 40 01 05 	add_i s1, s24, 80
    3b44:	38 70 01 88 	store_32 s1, 92(s24)
    3b48:	38 60 01 88 	store_32 s1, 88(s24)
    3b4c:	38 60 01 05 	add_i s1, s24, 88
    3b50:	38 90 01 88 	store_32 s1, 100(s24)
    3b54:	38 80 01 88 	store_32 s1, 96(s24)
    3b58:	38 80 01 05 	add_i s1, s24, 96
    3b5c:	38 b0 01 88 	store_32 s1, 108(s24)
    3b60:	38 a0 01 88 	store_32 s1, 104(s24)
    3b64:	38 a0 01 05 	add_i s1, s24, 104
    3b68:	38 d0 01 88 	store_32 s1, 116(s24)
    3b6c:	38 c0 01 88 	store_32 s1, 112(s24)
    3b70:	38 c0 01 05 	add_i s1, s24, 112
    3b74:	38 f0 01 88 	store_32 s1, 124(s24)
    3b78:	38 e0 01 88 	store_32 s1, 120(s24)
    3b7c:	38 e0 01 05 	add_i s1, s24, 120
    3b80:	38 10 02 88 	store_32 s1, 132(s24)
    3b84:	38 00 02 88 	store_32 s1, 128(s24)
    3b88:	38 00 02 05 	add_i s1, s24, 128
    3b8c:	38 30 02 88 	store_32 s1, 140(s24)
    3b90:	38 20 02 88 	store_32 s1, 136(s24)
    3b94:	38 20 02 05 	add_i s1, s24, 136
    3b98:	38 50 02 88 	store_32 s1, 148(s24)
    3b9c:	38 40 02 88 	store_32 s1, 144(s24)
    3ba0:	38 40 02 05 	add_i s1, s24, 144
    3ba4:	38 70 02 88 	store_32 s1, 156(s24)
    3ba8:	38 60 02 88 	store_32 s1, 152(s24)
    3bac:	38 60 02 05 	add_i s1, s24, 152
    3bb0:	38 90 02 88 	store_32 s1, 164(s24)
    3bb4:	38 80 02 88 	store_32 s1, 160(s24)
    3bb8:	38 80 02 05 	add_i s1, s24, 160
    3bbc:	38 b0 02 88 	store_32 s1, 172(s24)
    3bc0:	38 a0 02 88 	store_32 s1, 168(s24)
    3bc4:	38 a0 02 05 	add_i s1, s24, 168
    3bc8:	38 d0 02 88 	store_32 s1, 180(s24)
    3bcc:	38 c0 02 88 	store_32 s1, 176(s24)
    3bd0:	38 c0 02 05 	add_i s1, s24, 176
    3bd4:	38 f0 02 88 	store_32 s1, 188(s24)
    3bd8:	38 e0 02 88 	store_32 s1, 184(s24)
    3bdc:	38 e0 02 05 	add_i s1, s24, 184
    3be0:	38 10 03 88 	store_32 s1, 196(s24)
    3be4:	38 00 03 88 	store_32 s1, 192(s24)
    3be8:	38 00 03 05 	add_i s1, s24, 192
    3bec:	38 30 03 88 	store_32 s1, 204(s24)
    3bf0:	38 20 03 88 	store_32 s1, 200(s24)
    3bf4:	38 20 03 05 	add_i s1, s24, 200
    3bf8:	38 50 03 88 	store_32 s1, 212(s24)
    3bfc:	38 40 03 88 	store_32 s1, 208(s24)
    3c00:	38 40 03 05 	add_i s1, s24, 208
    3c04:	38 70 03 88 	store_32 s1, 220(s24)
    3c08:	38 60 03 88 	store_32 s1, 216(s24)
    3c0c:	38 60 03 05 	add_i s1, s24, 216
    3c10:	38 90 03 88 	store_32 s1, 228(s24)
    3c14:	38 80 03 88 	store_32 s1, 224(s24)
    3c18:	38 80 03 05 	add_i s1, s24, 224
    3c1c:	38 b0 03 88 	store_32 s1, 236(s24)
    3c20:	38 a0 03 88 	store_32 s1, 232(s24)
    3c24:	38 a0 03 05 	add_i s1, s24, 232
    3c28:	38 d0 03 88 	store_32 s1, 244(s24)
    3c2c:	38 c0 03 88 	store_32 s1, 240(s24)
    3c30:	38 c0 03 05 	add_i s1, s24, 240
    3c34:	38 f0 03 88 	store_32 s1, 252(s24)
    3c38:	38 e0 03 88 	store_32 s1, 248(s24)
    3c3c:	38 e0 03 05 	add_i s1, s24, 248
    3c40:	38 10 04 88 	store_32 s1, 260(s24)
    3c44:	38 00 04 88 	store_32 s1, 256(s24)
    3c48:	38 00 04 05 	add_i s1, s24, 256
    3c4c:	38 30 04 88 	store_32 s1, 268(s24)
    3c50:	38 20 04 88 	store_32 s1, 264(s24)
    3c54:	38 20 04 05 	add_i s1, s24, 264
    3c58:	38 50 04 88 	store_32 s1, 276(s24)
    3c5c:	38 40 04 88 	store_32 s1, 272(s24)
    3c60:	38 40 04 05 	add_i s1, s24, 272
    3c64:	38 70 04 88 	store_32 s1, 284(s24)
    3c68:	38 60 04 88 	store_32 s1, 280(s24)
    3c6c:	38 60 04 05 	add_i s1, s24, 280
    3c70:	38 90 04 88 	store_32 s1, 292(s24)
    3c74:	38 80 04 88 	store_32 s1, 288(s24)
    3c78:	38 80 04 05 	add_i s1, s24, 288
    3c7c:	38 b0 04 88 	store_32 s1, 300(s24)
    3c80:	38 a0 04 88 	store_32 s1, 296(s24)
    3c84:	29 60 ff 05 	add_i s1, s9, -40
    3c88:	82 00 00 f4 	bnz s2, 16 <malloc+0x149c>
    3c8c:	00 e0 ff 0f 	move s0, -8
    3c90:	00 00 65 c0 	sub_i s0, s0, s10
    3c94:	00 1c 00 01 	and s0, s0, 7
    3c98:	4a 00 50 c0 	add_i s2, s10, s0
    3c9c:	58 60 00 88 	store_32 s2, 24(s24)
    3ca0:	01 00 60 c0 	sub_i s0, s1, s0
    3ca4:	18 30 00 88 	store_32 s0, 12(s24)
    3ca8:	2a 80 50 c0 	add_i s1, s10, s1
    3cac:	00 04 00 00 	or s0, s0, 1
    3cb0:	02 10 00 88 	store_32 s0, 4(s2)
    3cb4:	00 a0 00 0f 	move s0, 40
    3cb8:	01 10 00 88 	store_32 s0, 4(s1)
    3cbc:	19 40 00 a8 	load_32 s0, 16(s25)
    3cc0:	18 70 00 88 	store_32 s0, 28(s24)
    3cc4:	18 30 00 a8 	load_32 s0, 12(s24)
    3cc8:	20 00 9d c1 	cmple_u s1, s0, s26
    3ccc:	e1 28 00 f4 	bnz s1, 1308 <malloc+0x19ec>
    3cd0:	92 fc ff f7 	b -3512 <malloc+0x71c>
    3cd4:	80 30 00 a0 	load_u8 s4, 12(s0)
    3cd8:	84 20 00 01 	and s4, s4, 8
    3cdc:	24 02 00 f4 	bnz s4, 68 <malloc+0x1524>
    3ce0:	8a 00 91 c1 	cmple_u s4, s10, s2
    3ce4:	e4 01 00 f4 	bnz s4, 60 <malloc+0x1524>
    3ce8:	63 00 61 c1 	cmpgt_u s3, s3, s2
    3cec:	a3 01 00 f4 	bnz s3, 52 <malloc+0x1524>
    3cf0:	62 20 00 05 	add_i s3, s2, 8
    3cf4:	21 80 54 c0 	add_i s1, s1, s9
    3cf8:	20 10 00 88 	store_32 s1, 4(s0)
    3cfc:	18 30 00 a8 	load_32 s0, 12(s24)
    3d00:	23 1c 00 01 	and s1, s3, 7
    3d04:	21 00 00 10 	cmpeq_i s1, s1, 0
    3d08:	00 80 54 c0 	add_i s0, s0, s9
    3d0c:	81 27 00 f4 	bnz s1, 1264 <malloc+0x1a00>
    3d10:	20 e0 ff 0f 	move s1, -8
    3d14:	21 00 61 c0 	sub_i s1, s1, s2
    3d18:	21 1c 00 01 	and s1, s1, 7
    3d1c:	39 01 00 f6 	b 1252 <malloc+0x1a04>
    3d20:	b8 40 00 a8 	load_32 s5, 16(s24)
    3d24:	0a 80 72 c1 	cmpge_u s0, s10, s5
    3d28:	60 00 00 f4 	bnz s0, 12 <malloc+0x1538>
    3d2c:	58 41 00 88 	store_32 s10, 16(s24)
    3d30:	a0 00 f5 c0 	move s5, s10
    3d34:	2a 80 54 c0 	add_i s1, s10, s9
    3d38:	18 10 07 05 	add_i s0, s24, 452
    3d3c:	60 00 00 a8 	load_32 s3, (s0)
    3d40:	63 80 00 c1 	cmpeq_i s3, s3, s1
    3d44:	83 00 00 f4 	bnz s3, 16 <malloc+0x1558>
    3d48:	00 20 00 a8 	load_32 s0, 8(s0)
    3d4c:	e0 08 00 f2 	bz s0, 284 <malloc+0x166c>
    3d50:	fb ff ff f7 	b -20 <malloc+0x1540>
    3d54:	60 30 00 a0 	load_u8 s3, 12(s0)
    3d58:	63 20 00 01 	and s3, s3, 8
    3d5c:	43 00 00 f2 	bz s3, 8 <malloc+0x1568>
    3d60:	42 00 00 f6 	b 264 <malloc+0x166c>
    3d64:	40 01 00 88 	store_32 s10, (s0)
    3d68:	8a 20 00 05 	add_i s4, s10, 8
    3d6c:	60 10 00 a8 	load_32 s3, 4(s0)
    3d70:	84 1c 00 01 	and s4, s4, 7
    3d74:	63 80 54 c0 	add_i s3, s3, s9
    3d78:	60 10 00 88 	store_32 s3, 4(s0)
    3d7c:	60 00 00 0f 	move s3, 0
    3d80:	c4 00 00 10 	cmpeq_i s6, s4, 0
    3d84:	80 e0 ff 0f 	move s4, -8
    3d88:	00 80 f1 c0 	move s0, s3
    3d8c:	66 00 00 f4 	bnz s6, 12 <malloc+0x159c>
    3d90:	04 00 65 c0 	sub_i s0, s4, s10
    3d94:	00 1c 00 01 	and s0, s0, 7
    3d98:	c1 20 00 05 	add_i s6, s1, 8
    3d9c:	0a 00 50 c0 	add_i s0, s10, s0
    3da0:	c6 1c 00 01 	and s6, s6, 7
    3da4:	c6 00 00 10 	cmpeq_i s6, s6, 0
    3da8:	66 00 00 f4 	bnz s6, 12 <malloc+0x15b8>
    3dac:	64 80 60 c0 	sub_i s3, s4, s1
    3db0:	63 1c 00 01 	and s3, s3, 7
    3db4:	81 80 51 c0 	add_i s4, s1, s3
    3db8:	20 00 5d c0 	add_i s1, s0, s26
    3dbc:	42 00 12 c1 	cmpne_i s2, s2, s4
    3dc0:	64 00 60 c0 	sub_i s3, s4, s0
    3dc4:	da 0c 00 00 	or s6, s26, 3
    3dc8:	c0 10 00 88 	store_32 s6, 4(s0)
    3dcc:	63 00 6d c0 	sub_i s3, s3, s26
    3dd0:	42 00 00 f4 	bnz s2, 8 <malloc+0x15dc>
    3dd4:	93 00 00 f6 	b 588 <malloc+0x1824>
    3dd8:	58 50 00 a8 	load_32 s2, 20(s24)
    3ddc:	42 00 12 c1 	cmpne_i s2, s2, s4
    3de0:	42 00 00 f4 	bnz s2, 8 <malloc+0x15ec>
    3de4:	11 01 00 f6 	b 1092 <malloc+0x1a2c>
    3de8:	44 10 00 a8 	load_32 s2, 4(s4)
    3dec:	c2 0c 00 01 	and s6, s2, 3
    3df0:	c6 04 00 11 	cmpne_i s6, s6, 1
    3df4:	66 2f 00 f4 	bnz s6, 1516 <malloc+0x1be4>
    3df8:	c2 fc 03 16 	cmpgt_u s6, s2, 255
    3dfc:	06 23 00 f4 	bnz s6, 1120 <malloc+0x1a60>
    3e00:	02 0d 00 0a 	shr s8, s2, 3
    3e04:	c4 20 00 a8 	load_32 s6, 8(s4)
    3e08:	e8 0c 00 0b 	shl s7, s8, 3
    3e0c:	f8 80 53 c0 	add_i s7, s24, s7
    3e10:	27 a1 00 05 	add_i s9, s7, 40
    3e14:	e4 30 00 a8 	load_32 s7, 12(s4)
    3e18:	46 81 04 c1 	cmpeq_i s10, s6, s9
    3e1c:	ca 00 00 f4 	bnz s10, 24 <malloc+0x1638>
    3e20:	45 01 63 c1 	cmpgt_u s10, s5, s6
    3e24:	ea 3f 00 f4 	bnz s10, 2044 <malloc+0x1e24>
    3e28:	46 31 00 a8 	load_32 s10, 12(s6)
    3e2c:	4a 01 12 c1 	cmpne_i s10, s10, s4
    3e30:	8a 3f 00 f4 	bnz s10, 2032 <malloc+0x1e24>
    3e34:	47 01 13 c1 	cmpne_i s10, s7, s6
    3e38:	4a 00 00 f4 	bnz s10, 8 <malloc+0x1644>
    3e3c:	19 01 00 f6 	b 1124 <malloc+0x1aa4>
    3e40:	07 81 04 c1 	cmpeq_i s8, s7, s9
    3e44:	c8 00 00 f4 	bnz s8, 24 <malloc+0x1660>
    3e48:	a5 80 63 c1 	cmpgt_u s5, s5, s7
    3e4c:	a5 3e 00 f4 	bnz s5, 2004 <malloc+0x1e24>
    3e50:	a7 20 00 a8 	load_32 s5, 8(s7)
    3e54:	a5 00 12 c1 	cmpne_i s5, s5, s4
    3e58:	45 3e 00 f4 	bnz s5, 1992 <malloc+0x1e24>
    3e5c:	e6 30 00 88 	store_32 s7, 12(s6)
    3e60:	c7 20 00 88 	store_32 s6, 8(s7)
    3e64:	5c 01 00 f6 	b 1392 <malloc+0x1bd8>
    3e68:	38 10 07 05 	add_i s1, s24, 452
    3e6c:	01 00 00 a8 	load_32 s0, (s1)
    3e70:	60 00 61 c1 	cmpgt_u s3, s0, s2
    3e74:	43 00 00 f4 	bnz s3, 8 <malloc+0x1680>
    3e78:	05 00 00 f6 	b 20 <malloc+0x1690>
    3e7c:	21 20 00 a8 	load_32 s1, 8(s1)
    3e80:	01 00 00 a8 	load_32 s0, (s1)
    3e84:	60 00 61 c1 	cmpgt_u s3, s0, s2
    3e88:	a3 ff ff f5 	bnz s3, -12 <malloc+0x1680>
    3e8c:	61 10 00 a8 	load_32 s3, 4(s1)
    3e90:	00 80 51 c0 	add_i s0, s0, s3
    3e94:	60 00 61 c1 	cmpgt_u s3, s0, s2
    3e98:	43 00 00 f4 	bnz s3, 8 <malloc+0x16a4>
    3e9c:	f8 ff ff f7 	b -32 <malloc+0x1680>
    3ea0:	20 64 ff 05 	add_i s1, s0, -39
    3ea4:	60 00 00 0f 	move s3, 0
    3ea8:	21 1c 00 01 	and s1, s1, 7
    3eac:	81 00 00 10 	cmpeq_i s4, s1, 0
    3eb0:	20 80 f1 c0 	move s1, s3
    3eb4:	84 00 00 f4 	bnz s4, 16 <malloc+0x16c8>
    3eb8:	20 9c 00 0f 	move s1, 39
    3ebc:	21 00 60 c0 	sub_i s1, s1, s0
    3ec0:	21 1c 00 01 	and s1, s1, 7
    3ec4:	20 80 50 c0 	add_i s1, s0, s1
    3ec8:	81 44 ff 05 	add_i s4, s1, -47
    3ecc:	22 40 00 05 	add_i s1, s2, 16
    3ed0:	a4 80 80 c1 	cmplt_u s5, s4, s1
    3ed4:	20 00 f1 c0 	move s1, s2
    3ed8:	45 00 00 f4 	bnz s5, 8 <malloc+0x16e4>
    3edc:	20 00 f2 c0 	move s1, s4
    3ee0:	8a 20 00 05 	add_i s4, s10, 8
    3ee4:	a1 20 00 05 	add_i s5, s1, 8
    3ee8:	c9 60 ff 05 	add_i s6, s9, -40
    3eec:	84 1c 00 01 	and s4, s4, 7
    3ef0:	e0 80 f1 c0 	move s7, s3
    3ef4:	84 00 00 10 	cmpeq_i s4, s4, 0
    3ef8:	84 00 00 f4 	bnz s4, 16 <malloc+0x170c>
    3efc:	80 e0 ff 0f 	move s4, -8
    3f00:	84 00 65 c0 	sub_i s4, s4, s10
    3f04:	e4 1c 00 01 	and s7, s4, 7
    3f08:	0a 81 53 c0 	add_i s8, s10, s7
    3f0c:	18 61 00 88 	store_32 s8, 24(s24)
    3f10:	e6 80 63 c0 	sub_i s7, s6, s7
    3f14:	f8 30 00 88 	store_32 s7, 12(s24)
    3f18:	ca 00 53 c0 	add_i s6, s10, s6
    3f1c:	81 60 00 05 	add_i s4, s1, 24
    3f20:	e7 04 00 00 	or s7, s7, 1
    3f24:	e8 10 00 88 	store_32 s7, 4(s8)
    3f28:	e0 a0 00 0f 	move s7, 40
    3f2c:	e6 10 00 88 	store_32 s7, 4(s6)
    3f30:	d9 40 00 a8 	load_32 s6, 16(s25)
    3f34:	d8 70 00 88 	store_32 s6, 28(s24)
    3f38:	c0 6c 00 0f 	move s6, 27
    3f3c:	c1 10 00 88 	store_32 s6, 4(s1)
    3f40:	d8 40 07 a8 	load_32 s6, 464(s24)
    3f44:	c1 50 00 88 	store_32 s6, 20(s1)
    3f48:	d8 30 07 a8 	load_32 s6, 460(s24)
    3f4c:	c1 40 00 88 	store_32 s6, 16(s1)
    3f50:	d8 20 07 a8 	load_32 s6, 456(s24)
    3f54:	c1 30 00 88 	store_32 s6, 12(s1)
    3f58:	d8 10 07 a8 	load_32 s6, 452(s24)
    3f5c:	c1 20 00 88 	store_32 s6, 8(s1)
    3f60:	58 11 07 88 	store_32 s10, 452(s24)
    3f64:	38 21 07 88 	store_32 s9, 456(s24)
    3f68:	78 40 07 88 	store_32 s3, 464(s24)
    3f6c:	60 1c 00 0f 	move s3, 7
    3f70:	b8 30 07 88 	store_32 s5, 460(s24)
    3f74:	a4 20 00 05 	add_i s5, s4, 8
    3f78:	64 10 00 88 	store_32 s3, 4(s4)
    3f7c:	c4 10 00 05 	add_i s6, s4, 4
    3f80:	a5 00 80 c1 	cmplt_u s5, s5, s0
    3f84:	80 00 f3 c0 	move s4, s6
    3f88:	65 ff ff f5 	bnz s5, -20 <malloc+0x1778>
    3f8c:	01 00 01 c1 	cmpeq_i s0, s1, s2
    3f90:	40 12 00 f4 	bnz s0, 584 <malloc+0x19dc>
    3f94:	61 10 00 a8 	load_32 s3, 4(s1)
    3f98:	01 00 61 c0 	sub_i s0, s1, s2
    3f9c:	63 f8 ff 01 	and s3, s3, -2
    3fa0:	61 10 00 88 	store_32 s3, 4(s1)
    3fa4:	60 04 00 00 	or s3, s0, 1
    3fa8:	62 10 00 88 	store_32 s3, 4(s2)
    3fac:	60 fc 03 16 	cmpgt_u s3, s0, 255
    3fb0:	01 00 00 88 	store_32 s0, (s1)
    3fb4:	03 02 00 f4 	bnz s3, 64 <malloc+0x17f8>
    3fb8:	00 0c 00 0a 	shr s0, s0, 3
    3fbc:	38 00 00 a8 	load_32 s1, (s24)
    3fc0:	60 04 00 0f 	move s3, 1
    3fc4:	80 0c 00 0b 	shl s4, s0, 3
    3fc8:	98 00 52 c0 	add_i s4, s24, s4
    3fcc:	63 00 b0 c0 	shl s3, s3, s0
    3fd0:	a1 80 11 c0 	and s5, s1, s3
    3fd4:	04 a0 00 05 	add_i s0, s4, 40
    3fd8:	45 00 00 f4 	bnz s5, 8 <malloc+0x17e4>
    3fdc:	1c 00 00 f6 	b 112 <malloc+0x1850>
    3fe0:	20 20 00 a8 	load_32 s1, 8(s0)
    3fe4:	78 40 00 a8 	load_32 s3, 16(s24)
    3fe8:	63 80 90 c1 	cmple_u s3, s3, s1
    3fec:	63 03 00 f4 	bnz s3, 108 <malloc+0x185c>
    3ff0:	8c 01 00 f6 	b 1584 <malloc+0x1e24>
    3ff4:	20 00 00 0f 	move s1, 0
    3ff8:	80 20 00 0a 	shr s4, s0, 8
    3ffc:	60 80 f0 c0 	move s3, s1
    4000:	44 07 00 f2 	bz s4, 232 <malloc+0x18ec>
    4004:	7f fc 00 4f 	movehi s3, 2047
    4008:	63 fc 7f 00 	or s3, s3, 8191
    400c:	60 80 61 c1 	cmpgt_u s3, s0, s3
    4010:	43 00 00 f4 	bnz s3, 8 <malloc+0x181c>
    4014:	19 00 00 f6 	b 100 <malloc+0x187c>
    4018:	60 7c 00 0f 	move s3, 31
    401c:	33 00 00 f6 	b 204 <malloc+0x18ec>
    4020:	58 30 00 a8 	load_32 s2, 12(s24)
    4024:	60 23 00 05 	add_i s27, s0, 8
    4028:	42 80 51 c0 	add_i s2, s2, s3
    402c:	58 30 00 88 	store_32 s2, 12(s24)
    4030:	38 60 00 88 	store_32 s1, 24(s24)
    4034:	42 04 00 00 	or s2, s2, 1
    4038:	41 10 00 88 	store_32 s2, 4(s1)
    403c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4040:	00 08 00 01 	and s0, s0, 2
    4044:	40 8d ff f3 	bz s0, -3672 <malloc+0x9f0>
    4048:	63 fc ff f7 	b -3700 <malloc+0x9d8>
    404c:	21 80 01 c0 	or s1, s1, s3
    4050:	38 00 00 88 	store_32 s1, (s24)
    4054:	20 00 f0 c0 	move s1, s0
    4058:	40 20 00 88 	store_32 s2, 8(s0)
    405c:	41 30 00 88 	store_32 s2, 12(s1)
    4060:	22 20 00 88 	store_32 s1, 8(s2)
    4064:	02 30 00 88 	store_32 s0, 12(s2)
    4068:	18 30 00 a8 	load_32 s0, 12(s24)
    406c:	20 00 9d c1 	cmple_u s1, s0, s26
    4070:	c1 0b 00 f4 	bnz s1, 376 <malloc+0x19ec>
    4074:	a9 fb ff f7 	b -4444 <malloc+0x71c>
    4078:	7f 0c 00 4f 	movehi s3, 127
    407c:	bf 04 00 4f 	movehi s5, 63
    4080:	de 00 00 4f 	movehi s6, 30
    4084:	63 00 7c 00 	or s3, s3, 7936
    4088:	64 80 51 c0 	add_i s3, s4, s3
    408c:	a5 00 40 00 	or s5, s5, 4096
    4090:	63 40 00 0a 	shr s3, s3, 16
    4094:	63 20 00 01 	and s3, s3, 8
    4098:	84 80 b1 c0 	shl s4, s4, s3
    409c:	a4 80 52 c0 	add_i s5, s4, s5
    40a0:	a5 40 00 0a 	shr s5, s5, 16
    40a4:	a5 10 00 01 	and s5, s5, 4
    40a8:	84 80 b2 c0 	shl s4, s4, s5
    40ac:	65 80 01 c0 	or s3, s5, s3
    40b0:	c4 00 53 c0 	add_i s6, s4, s6
    40b4:	c6 40 00 0a 	shr s6, s6, 16
    40b8:	a6 08 00 01 	and s5, s6, 2
    40bc:	c0 38 00 0f 	move s6, 14
    40c0:	63 80 02 c0 	or s3, s3, s5
    40c4:	84 80 b2 c0 	shl s4, s4, s5
    40c8:	66 80 61 c0 	sub_i s3, s6, s3
    40cc:	84 3c 00 0a 	shr s4, s4, 15
    40d0:	63 00 52 c0 	add_i s3, s3, s4
    40d4:	83 1c 00 05 	add_i s4, s3, 7
    40d8:	80 00 a2 c0 	shr s4, s0, s4
    40dc:	63 04 00 0b 	shl s3, s3, 1
    40e0:	84 04 00 01 	and s4, s4, 1
    40e4:	64 80 01 c0 	or s3, s4, s3
    40e8:	62 70 00 88 	store_32 s3, 28(s2)
    40ec:	a3 08 00 0b 	shl s5, s3, 2
    40f0:	22 50 00 88 	store_32 s1, 20(s2)
    40f4:	d8 80 52 c0 	add_i s6, s24, s5
    40f8:	22 40 00 88 	store_32 s1, 16(s2)
    40fc:	20 04 00 0f 	move s1, 1
    4100:	98 10 00 a8 	load_32 s4, 4(s24)
    4104:	a1 80 b1 c0 	shl s5, s1, s3
    4108:	26 c0 04 05 	add_i s1, s6, 304
    410c:	e4 80 12 c0 	and s7, s4, s5
    4110:	47 00 00 f4 	bnz s7, 8 <malloc+0x191c>
    4114:	08 00 00 f6 	b 32 <malloc+0x1938>
    4118:	81 00 00 a8 	load_32 s4, (s1)
    411c:	a3 7c 00 10 	cmpeq_i s5, s3, 31
    4120:	25 01 00 f4 	bnz s5, 36 <malloc+0x1948>
    4124:	20 64 00 0f 	move s1, 25
    4128:	63 04 00 0a 	shr s3, s3, 1
    412c:	21 80 61 c0 	sub_i s1, s1, s3
    4130:	06 00 00 f6 	b 24 <malloc+0x194c>
    4134:	04 80 02 c0 	or s0, s4, s5
    4138:	18 10 00 88 	store_32 s0, 4(s24)
    413c:	41 00 00 88 	store_32 s2, (s1)
    4140:	13 00 00 f6 	b 76 <malloc+0x1990>
    4144:	20 00 00 0f 	move s1, 0
    4148:	60 80 b0 c0 	shl s3, s0, s1
    414c:	20 00 f2 c0 	move s1, s4
    4150:	81 10 00 a8 	load_32 s4, 4(s1)
    4154:	84 e0 ff 01 	and s4, s4, -8
    4158:	84 00 00 c1 	cmpeq_i s4, s4, s0
    415c:	64 02 00 f4 	bnz s4, 76 <malloc+0x19ac>
    4160:	83 74 00 0a 	shr s4, s3, 29
    4164:	63 04 00 0b 	shl s3, s3, 1
    4168:	84 10 00 01 	and s4, s4, 4
    416c:	a1 00 52 c0 	add_i s5, s1, s4
    4170:	85 40 00 a8 	load_32 s4, 16(s5)
    4174:	c4 fe ff f5 	bnz s4, -40 <malloc+0x1950>
    4178:	78 40 00 a8 	load_32 s3, 16(s24)
    417c:	05 40 00 05 	add_i s0, s5, 16
    4180:	63 00 60 c1 	cmpgt_u s3, s3, s0
    4184:	e3 24 00 f4 	bnz s3, 1180 <malloc+0x1e24>
    4188:	40 00 00 88 	store_32 s2, (s0)
    418c:	22 60 00 88 	store_32 s1, 24(s2)
    4190:	42 30 00 88 	store_32 s2, 12(s2)
    4194:	42 20 00 88 	store_32 s2, 8(s2)
    4198:	18 30 00 a8 	load_32 s0, 12(s24)
    419c:	20 00 9d c1 	cmple_u s1, s0, s26
    41a0:	41 02 00 f4 	bnz s1, 72 <malloc+0x19ec>
    41a4:	5d fb ff f7 	b -4748 <malloc+0x71c>
    41a8:	01 20 00 a8 	load_32 s0, 8(s1)
    41ac:	78 40 00 a8 	load_32 s3, 16(s24)
    41b0:	83 00 60 c1 	cmpgt_u s4, s3, s0
    41b4:	64 23 00 f4 	bnz s4, 1132 <malloc+0x1e24>
    41b8:	63 80 60 c1 	cmpgt_u s3, s3, s1
    41bc:	23 23 00 f4 	bnz s3, 1124 <malloc+0x1e24>
    41c0:	40 30 00 88 	store_32 s2, 12(s0)
    41c4:	41 20 00 88 	store_32 s2, 8(s1)
    41c8:	02 20 00 88 	store_32 s0, 8(s2)
    41cc:	00 00 00 0f 	move s0, 0
    41d0:	22 30 00 88 	store_32 s1, 12(s2)
    41d4:	02 60 00 88 	store_32 s0, 24(s2)
    41d8:	18 30 00 a8 	load_32 s0, 12(s24)
    41dc:	20 00 9d c1 	cmple_u s1, s0, s26
    41e0:	41 00 00 f4 	bnz s1, 8 <malloc+0x19ec>
    41e4:	4d fb ff f7 	b -4812 <malloc+0x71c>
    41e8:	60 03 00 0f 	move s27, 0
    41ec:	18 f0 06 a0 	load_u8 s0, 444(s24)
    41f0:	00 08 00 01 	and s0, s0, 2
    41f4:	c0 7f ff f3 	bz s0, -4104 <malloc+0x9f0>
    41f8:	f7 fb ff f7 	b -4132 <malloc+0x9d8>
    41fc:	20 00 00 0f 	move s1, 0
    4200:	62 80 50 c0 	add_i s3, s2, s1
    4204:	78 60 00 88 	store_32 s3, 24(s24)
    4208:	20 80 60 c0 	sub_i s1, s0, s1
    420c:	38 30 00 88 	store_32 s1, 12(s24)
    4210:	02 00 50 c0 	add_i s0, s2, s0
    4214:	21 04 00 00 	or s1, s1, 1
    4218:	23 10 00 88 	store_32 s1, 4(s3)
    421c:	20 a0 00 0f 	move s1, 40
    4220:	20 10 00 88 	store_32 s1, 4(s0)
    4224:	a6 fe ff f7 	b -1384 <malloc+0x14c0>
    4228:	58 20 00 a8 	load_32 s2, 8(s24)
    422c:	60 23 00 05 	add_i s27, s0, 8
    4230:	42 80 51 c0 	add_i s2, s2, s3
    4234:	58 20 00 88 	store_32 s2, 8(s24)
    4238:	61 00 51 c0 	add_i s3, s1, s2
    423c:	38 50 00 88 	store_32 s1, 20(s24)
    4240:	82 04 00 00 	or s4, s2, 1
    4244:	81 10 00 88 	store_32 s4, 4(s1)
    4248:	43 00 00 88 	store_32 s2, (s3)
    424c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4250:	00 08 00 01 	and s0, s0, 2
    4254:	c0 7c ff f3 	bz s0, -4200 <malloc+0x9f0>
    4258:	df fb ff f7 	b -4228 <malloc+0x9d8>
    425c:	c4 60 00 a8 	load_32 s6, 24(s4)
    4260:	e4 30 00 a8 	load_32 s7, 12(s4)
    4264:	07 01 02 c1 	cmpeq_i s8, s7, s4
    4268:	a8 02 00 f4 	bnz s8, 84 <malloc+0x1ac0>
    426c:	04 21 00 a8 	load_32 s8, 8(s4)
    4270:	a5 00 64 c1 	cmpgt_u s5, s5, s8
    4274:	65 1d 00 f4 	bnz s5, 940 <malloc+0x1e24>
    4278:	a8 30 00 a8 	load_32 s5, 12(s8)
    427c:	a5 00 12 c1 	cmpne_i s5, s5, s4
    4280:	05 1d 00 f4 	bnz s5, 928 <malloc+0x1e24>
    4284:	a7 20 00 a8 	load_32 s5, 8(s7)
    4288:	a5 00 12 c1 	cmpne_i s5, s5, s4
    428c:	a5 1c 00 f4 	bnz s5, 916 <malloc+0x1e24>
    4290:	e8 30 00 88 	store_32 s7, 12(s8)
    4294:	07 21 00 88 	store_32 s8, 8(s7)
    4298:	e6 09 00 f2 	bz s6, 316 <malloc+0x1bd8>
    429c:	1d 00 00 f6 	b 116 <malloc+0x1b14>
    42a0:	a0 04 00 0f 	move s5, 1
    42a4:	d8 00 00 a8 	load_32 s6, (s24)
    42a8:	a5 00 b4 c0 	shl s5, s5, s8
    42ac:	a5 fc ff 03 	xor s5, s5, -1
    42b0:	a6 80 12 c0 	and s5, s6, s5
    42b4:	b8 00 00 88 	store_32 s5, (s24)
    42b8:	47 00 00 f6 	b 284 <malloc+0x1bd8>
    42bc:	24 51 00 a8 	load_32 s9, 20(s4)
    42c0:	49 00 00 f4 	bnz s9, 8 <malloc+0x1acc>
    42c4:	03 00 00 f6 	b 12 <malloc+0x1ad4>
    42c8:	04 51 00 05 	add_i s8, s4, 20
    42cc:	04 00 00 f6 	b 16 <malloc+0x1ae0>
    42d0:	04 41 00 05 	add_i s8, s4, 16
    42d4:	28 01 00 a8 	load_32 s9, (s8)
    42d8:	e9 19 00 f2 	bz s9, 828 <malloc+0x1e18>
    42dc:	e0 80 f4 c0 	move s7, s9
    42e0:	27 51 00 a8 	load_32 s9, 20(s7)
    42e4:	40 01 f4 c0 	move s10, s8
    42e8:	07 51 00 05 	add_i s8, s7, 20
    42ec:	89 ff ff f5 	bnz s9, -16 <malloc+0x1ae0>
    42f0:	27 41 00 a8 	load_32 s9, 16(s7)
    42f4:	07 41 00 05 	add_i s8, s7, 16
    42f8:	29 ff ff f5 	bnz s9, -28 <malloc+0x1ae0>
    42fc:	a5 00 65 c1 	cmpgt_u s5, s5, s10
    4300:	05 19 00 f4 	bnz s5, 800 <malloc+0x1e24>
    4304:	a0 00 00 0f 	move s5, 0
    4308:	aa 00 00 88 	store_32 s5, (s10)
    430c:	46 06 00 f2 	bz s6, 200 <malloc+0x1bd8>
    4310:	a4 70 00 a8 	load_32 s5, 28(s4)
    4314:	05 09 00 0b 	shl s8, s5, 2
    4318:	18 01 54 c0 	add_i s8, s24, s8
    431c:	28 c1 04 a8 	load_32 s9, 304(s8)
    4320:	29 01 12 c1 	cmpne_i s9, s9, s4
    4324:	49 00 00 f4 	bnz s9, 8 <malloc+0x1b30>
    4328:	0c 00 00 f6 	b 48 <malloc+0x1b5c>
    432c:	b8 40 00 a8 	load_32 s5, 16(s24)
    4330:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    4334:	65 17 00 f4 	bnz s5, 748 <malloc+0x1e24>
    4338:	a6 40 00 a8 	load_32 s5, 16(s6)
    433c:	a5 00 02 c1 	cmpeq_i s5, s5, s4
    4340:	05 02 00 f4 	bnz s5, 64 <malloc+0x1b84>
    4344:	a0 50 00 0f 	move s5, 20
    4348:	a6 80 52 c0 	add_i s5, s6, s5
    434c:	e5 00 00 88 	store_32 s7, (s5)
    4350:	27 04 00 f2 	bz s7, 132 <malloc+0x1bd8>
    4354:	0f 00 00 f6 	b 60 <malloc+0x1b94>
    4358:	08 c1 04 05 	add_i s8, s8, 304
    435c:	e8 00 00 88 	store_32 s7, (s8)
    4360:	87 01 00 f4 	bnz s7, 48 <malloc+0x1b94>
    4364:	c0 04 00 0f 	move s6, 1
    4368:	a6 80 b2 c0 	shl s5, s6, s5
    436c:	d8 10 00 a8 	load_32 s6, 4(s24)
    4370:	a5 fc ff 03 	xor s5, s5, -1
    4374:	a6 80 12 c0 	and s5, s6, s5
    4378:	b8 10 00 88 	store_32 s5, 4(s24)
    437c:	16 00 00 f6 	b 88 <malloc+0x1bd8>
    4380:	a0 40 00 0f 	move s5, 16
    4384:	a6 80 52 c0 	add_i s5, s6, s5
    4388:	e5 00 00 88 	store_32 s7, (s5)
    438c:	47 02 00 f2 	bz s7, 72 <malloc+0x1bd8>
    4390:	b8 40 00 a8 	load_32 s5, 16(s24)
    4394:	05 81 63 c1 	cmpgt_u s8, s5, s7
    4398:	48 14 00 f4 	bnz s8, 648 <malloc+0x1e24>
    439c:	c7 60 00 88 	store_32 s6, 24(s7)
    43a0:	c4 40 00 a8 	load_32 s6, 16(s4)
    43a4:	a6 00 00 f2 	bz s6, 20 <malloc+0x1bbc>
    43a8:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    43ac:	a5 13 00 f4 	bnz s5, 628 <malloc+0x1e24>
    43b0:	c7 40 00 88 	store_32 s6, 16(s7)
    43b4:	e6 60 00 88 	store_32 s7, 24(s6)
    43b8:	a4 50 00 a8 	load_32 s5, 20(s4)
    43bc:	c5 00 00 f2 	bz s5, 24 <malloc+0x1bd8>
    43c0:	d8 40 00 a8 	load_32 s6, 16(s24)
    43c4:	c6 80 62 c1 	cmpgt_u s6, s6, s5
    43c8:	c6 12 00 f4 	bnz s6, 600 <malloc+0x1e24>
    43cc:	a7 50 00 88 	store_32 s5, 20(s7)
    43d0:	e5 60 00 88 	store_32 s7, 24(s5)
    43d4:	42 e0 ff 01 	and s2, s2, -8
    43d8:	84 00 51 c0 	add_i s4, s4, s2
    43dc:	62 80 51 c0 	add_i s3, s2, s3
    43e0:	44 10 00 a8 	load_32 s2, 4(s4)
    43e4:	42 f8 ff 01 	and s2, s2, -2
    43e8:	44 10 00 88 	store_32 s2, 4(s4)
    43ec:	43 04 00 00 	or s2, s3, 1
    43f0:	41 10 00 88 	store_32 s2, 4(s1)
    43f4:	81 80 51 c0 	add_i s4, s1, s3
    43f8:	43 fc 03 16 	cmpgt_u s2, s3, 255
    43fc:	64 00 00 88 	store_32 s3, (s4)
    4400:	02 02 00 f4 	bnz s2, 64 <malloc+0x1c44>
    4404:	43 0c 00 0a 	shr s2, s3, 3
    4408:	78 00 00 a8 	load_32 s3, (s24)
    440c:	80 04 00 0f 	move s4, 1
    4410:	a2 0c 00 0b 	shl s5, s2, 3
    4414:	b8 80 52 c0 	add_i s5, s24, s5
    4418:	84 00 b1 c0 	shl s4, s4, s2
    441c:	c3 00 12 c0 	and s6, s3, s4
    4420:	45 a0 00 05 	add_i s2, s5, 40
    4424:	46 00 00 f4 	bnz s6, 8 <malloc+0x1c30>
    4428:	11 00 00 f6 	b 68 <malloc+0x1c70>
    442c:	62 20 00 a8 	load_32 s3, 8(s2)
    4430:	98 40 00 a8 	load_32 s4, 16(s24)
    4434:	84 80 91 c1 	cmple_u s4, s4, s3
    4438:	04 02 00 f4 	bnz s4, 64 <malloc+0x1c7c>
    443c:	79 00 00 f6 	b 484 <malloc+0x1e24>
    4440:	40 00 00 0f 	move s2, 0
    4444:	a3 20 00 0a 	shr s5, s3, 8
    4448:	80 00 f1 c0 	move s4, s2
    444c:	05 06 00 f2 	bz s5, 192 <malloc+0x1d10>
    4450:	9f fc 00 4f 	movehi s4, 2047
    4454:	84 fc 7f 00 	or s4, s4, 8191
    4458:	83 00 62 c1 	cmpgt_u s4, s3, s4
    445c:	44 00 00 f4 	bnz s4, 8 <malloc+0x1c68>
    4460:	0f 00 00 f6 	b 60 <malloc+0x1ca0>
    4464:	80 7c 00 0f 	move s4, 31
    4468:	29 00 00 f6 	b 164 <malloc+0x1d10>
    446c:	63 00 02 c0 	or s3, s3, s4
    4470:	78 00 00 88 	store_32 s3, (s24)
    4474:	60 00 f1 c0 	move s3, s2
    4478:	22 20 00 88 	store_32 s1, 8(s2)
    447c:	60 23 00 05 	add_i s27, s0, 8
    4480:	23 30 00 88 	store_32 s1, 12(s3)
    4484:	61 20 00 88 	store_32 s3, 8(s1)
    4488:	41 30 00 88 	store_32 s2, 12(s1)
    448c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4490:	00 08 00 01 	and s0, s0, 2
    4494:	c0 6a ff f3 	bz s0, -4776 <malloc+0x9f0>
    4498:	4f fb ff f7 	b -4804 <malloc+0x9d8>
    449c:	9f 0c 00 4f 	movehi s4, 127
    44a0:	df 04 00 4f 	movehi s6, 63
    44a4:	fe 00 00 4f 	movehi s7, 30
    44a8:	84 00 7c 00 	or s4, s4, 7936
    44ac:	85 00 52 c0 	add_i s4, s5, s4
    44b0:	c6 00 40 00 	or s6, s6, 4096
    44b4:	84 40 00 0a 	shr s4, s4, 16
    44b8:	84 20 00 01 	and s4, s4, 8
    44bc:	a5 00 b2 c0 	shl s5, s5, s4
    44c0:	c5 00 53 c0 	add_i s6, s5, s6
    44c4:	c6 40 00 0a 	shr s6, s6, 16
    44c8:	c6 10 00 01 	and s6, s6, 4
    44cc:	a5 00 b3 c0 	shl s5, s5, s6
    44d0:	86 00 02 c0 	or s4, s6, s4
    44d4:	e5 80 53 c0 	add_i s7, s5, s7
    44d8:	e7 40 00 0a 	shr s7, s7, 16
    44dc:	c7 08 00 01 	and s6, s7, 2
    44e0:	e0 38 00 0f 	move s7, 14
    44e4:	84 00 03 c0 	or s4, s4, s6
    44e8:	a5 00 b3 c0 	shl s5, s5, s6
    44ec:	87 00 62 c0 	sub_i s4, s7, s4
    44f0:	a5 3c 00 0a 	shr s5, s5, 15
    44f4:	84 80 52 c0 	add_i s4, s4, s5
    44f8:	a4 1c 00 05 	add_i s5, s4, 7
    44fc:	a3 80 a2 c0 	shr s5, s3, s5
    4500:	84 04 00 0b 	shl s4, s4, 1
    4504:	a5 04 00 01 	and s5, s5, 1
    4508:	85 00 02 c0 	or s4, s5, s4
    450c:	81 70 00 88 	store_32 s4, 28(s1)
    4510:	c4 08 00 0b 	shl s6, s4, 2
    4514:	41 50 00 88 	store_32 s2, 20(s1)
    4518:	f8 00 53 c0 	add_i s7, s24, s6
    451c:	41 40 00 88 	store_32 s2, 16(s1)
    4520:	40 04 00 0f 	move s2, 1
    4524:	b8 10 00 a8 	load_32 s5, 4(s24)
    4528:	c2 00 b2 c0 	shl s6, s2, s4
    452c:	47 c0 04 05 	add_i s2, s7, 304
    4530:	05 01 13 c0 	and s8, s5, s6
    4534:	48 00 00 f4 	bnz s8, 8 <malloc+0x1d40>
    4538:	08 00 00 f6 	b 32 <malloc+0x1d5c>
    453c:	a2 00 00 a8 	load_32 s5, (s2)
    4540:	c4 7c 00 10 	cmpeq_i s6, s4, 31
    4544:	26 01 00 f4 	bnz s6, 36 <malloc+0x1d6c>
    4548:	40 64 00 0f 	move s2, 25
    454c:	84 04 00 0a 	shr s4, s4, 1
    4550:	42 00 62 c0 	sub_i s2, s2, s4
    4554:	06 00 00 f6 	b 24 <malloc+0x1d70>
    4558:	65 00 03 c0 	or s3, s5, s6
    455c:	78 10 00 88 	store_32 s3, 4(s24)
    4560:	22 00 00 88 	store_32 s1, (s2)
    4564:	13 00 00 f6 	b 76 <malloc+0x1db4>
    4568:	40 00 00 0f 	move s2, 0
    456c:	83 00 b1 c0 	shl s4, s3, s2
    4570:	40 80 f2 c0 	move s2, s5
    4574:	a2 10 00 a8 	load_32 s5, 4(s2)
    4578:	a5 e0 ff 01 	and s5, s5, -8
    457c:	a5 80 01 c1 	cmpeq_i s5, s5, s3
    4580:	85 02 00 f4 	bnz s5, 80 <malloc+0x1dd4>
    4584:	a4 74 00 0a 	shr s5, s4, 29
    4588:	84 04 00 0b 	shl s4, s4, 1
    458c:	a5 10 00 01 	and s5, s5, 4
    4590:	c2 80 52 c0 	add_i s6, s2, s5
    4594:	a6 40 00 a8 	load_32 s5, 16(s6)
    4598:	c5 fe ff f5 	bnz s5, -40 <malloc+0x1d74>
    459c:	98 40 00 a8 	load_32 s4, 16(s24)
    45a0:	66 40 00 05 	add_i s3, s6, 16
    45a4:	84 80 61 c1 	cmpgt_u s4, s4, s3
    45a8:	c4 03 00 f4 	bnz s4, 120 <malloc+0x1e24>
    45ac:	23 00 00 88 	store_32 s1, (s3)
    45b0:	41 60 00 88 	store_32 s2, 24(s1)
    45b4:	60 23 00 05 	add_i s27, s0, 8
    45b8:	21 30 00 88 	store_32 s1, 12(s1)
    45bc:	21 20 00 88 	store_32 s1, 8(s1)
    45c0:	18 f0 06 a0 	load_u8 s0, 444(s24)
    45c4:	00 08 00 01 	and s0, s0, 2
    45c8:	20 61 ff f3 	bz s0, -5084 <malloc+0x9f0>
    45cc:	02 fb ff f7 	b -5112 <malloc+0x9d8>
    45d0:	62 20 00 a8 	load_32 s3, 8(s2)
    45d4:	98 40 00 a8 	load_32 s4, 16(s24)
    45d8:	a4 80 61 c1 	cmpgt_u s5, s4, s3
    45dc:	25 02 00 f4 	bnz s5, 68 <malloc+0x1e24>
    45e0:	84 00 61 c1 	cmpgt_u s4, s4, s2
    45e4:	e4 01 00 f4 	bnz s4, 60 <malloc+0x1e24>
    45e8:	23 30 00 88 	store_32 s1, 12(s3)
    45ec:	60 23 00 05 	add_i s27, s0, 8
    45f0:	22 20 00 88 	store_32 s1, 8(s2)
    45f4:	61 20 00 88 	store_32 s3, 8(s1)
    45f8:	41 30 00 88 	store_32 s2, 12(s1)
    45fc:	40 00 00 0f 	move s2, 0
    4600:	41 60 00 88 	store_32 s2, 24(s1)
    4604:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4608:	00 08 00 01 	and s0, s0, 2
    460c:	00 5f ff f3 	bz s0, -5152 <malloc+0x9f0>
    4610:	f1 fa ff f7 	b -5180 <malloc+0x9d8>
    4614:	e0 00 00 0f 	move s7, 0
    4618:	e6 ed ff f3 	bz s6, -580 <malloc+0x1bd8>
    461c:	3d ff ff f7 	b -780 <malloc+0x1b14>
    4620:	90 0a 00 f8 	call 10816 <abort>

0000000000004624 free:
    4624:	de 03 ff 05 	add_i sp, sp, -64
    4628:	1e f3 00 88 	store_32 s24, 60(sp)
    462c:	fe e3 00 88 	store_32 ra, 56(sp)
    4630:	80 32 00 f2 	bz s0, 1616 <free+0x65c>
    4634:	25 00 00 4f 	movehi s1, 5
    4638:	01 33 45 00 	or s24, s1, 4428
    463c:	38 f0 06 a0 	load_u8 s1, 444(s24)
    4640:	41 08 00 01 	and s2, s1, 2
    4644:	20 e0 ff 05 	add_i s1, s0, -8
    4648:	e2 01 00 f2 	bz s2, 60 <free+0x60>
    464c:	58 00 07 05 	add_i s2, s24, 448
    4650:	60 04 00 0f 	move s3, 1
    4654:	82 00 00 aa 	load_sync s4, (s2)
    4658:	a0 80 f1 c0 	move s5, s3
    465c:	a2 00 00 8a 	store_sync s5, (s2)  
    4660:	a5 ff ff f3 	bz s5, -12 <free+0x30>
    4664:	04 01 00 f2 	bz s4, 32 <free+0x60>
    4668:	98 00 07 a8 	load_32 s4, 448(s24)
    466c:	e4 ff ff f5 	bnz s4, -4 <free+0x44>
    4670:	82 00 00 aa 	load_sync s4, (s2)
    4674:	a0 80 f1 c0 	move s5, s3
    4678:	a2 00 00 8a 	store_sync s5, (s2)  
    467c:	a5 ff ff f3 	bz s5, -12 <free+0x4c>
    4680:	44 ff ff f5 	bnz s4, -24 <free+0x44>
    4684:	b8 40 00 a8 	load_32 s5, 16(s24)
    4688:	41 80 82 c1 	cmplt_u s2, s1, s5
    468c:	a2 3f 00 f4 	bnz s2, 2036 <free+0x85c>
    4690:	40 f0 ff a9 	load_32 s2, -4(s0)
    4694:	82 0c 00 01 	and s4, s2, 3
    4698:	04 04 00 10 	cmpeq_i s0, s4, 1
    469c:	20 3f 00 f4 	bnz s0, 2020 <free+0x85c>
    46a0:	02 e0 ff 01 	and s0, s2, -8
    46a4:	62 04 00 01 	and s3, s2, 1
    46a8:	41 00 50 c0 	add_i s2, s1, s0
    46ac:	43 12 00 f4 	bnz s3, 584 <free+0x2d0>
    46b0:	61 00 00 a8 	load_32 s3, (s1)
    46b4:	44 2d 00 f2 	bz s4, 1448 <free+0x638>
    46b8:	21 80 61 c0 	sub_i s1, s1, s3
    46bc:	81 80 82 c1 	cmplt_u s4, s1, s5
    46c0:	04 3e 00 f4 	bnz s4, 1984 <free+0x85c>
    46c4:	98 50 00 a8 	load_32 s4, 20(s24)
    46c8:	03 00 50 c0 	add_i s0, s3, s0
    46cc:	84 80 00 c1 	cmpeq_i s4, s4, s1
    46d0:	e4 03 00 f4 	bnz s4, 124 <free+0x128>
    46d4:	83 fc 03 16 	cmpgt_u s4, s3, 255
    46d8:	a4 04 00 f4 	bnz s4, 148 <free+0x148>
    46dc:	c3 0c 00 0a 	shr s6, s3, 3
    46e0:	61 20 00 a8 	load_32 s3, 8(s1)
    46e4:	86 0c 00 0b 	shl s4, s6, 3
    46e8:	98 00 52 c0 	add_i s4, s24, s4
    46ec:	e4 a0 00 05 	add_i s7, s4, 40
    46f0:	81 30 00 a8 	load_32 s4, 12(s1)
    46f4:	03 81 03 c1 	cmpeq_i s8, s3, s7
    46f8:	c8 00 00 f4 	bnz s8, 24 <free+0xec>
    46fc:	05 81 61 c1 	cmpgt_u s8, s5, s3
    4700:	08 3c 00 f4 	bnz s8, 1920 <free+0x85c>
    4704:	03 31 00 a8 	load_32 s8, 12(s3)
    4708:	08 81 10 c1 	cmpne_i s8, s8, s1
    470c:	a8 3b 00 f4 	bnz s8, 1908 <free+0x85c>
    4710:	04 81 11 c1 	cmpne_i s8, s4, s3
    4714:	48 00 00 f4 	bnz s8, 8 <free+0xf8>
    4718:	26 00 00 f6 	b 152 <free+0x18c>
    471c:	c4 80 03 c1 	cmpeq_i s6, s4, s7
    4720:	c6 00 00 f4 	bnz s6, 24 <free+0x114>
    4724:	a5 00 62 c1 	cmpgt_u s5, s5, s4
    4728:	c5 3a 00 f4 	bnz s5, 1880 <free+0x85c>
    472c:	a4 20 00 a8 	load_32 s5, 8(s4)
    4730:	a5 80 10 c1 	cmpne_i s5, s5, s1
    4734:	65 3a 00 f4 	bnz s5, 1868 <free+0x85c>
    4738:	83 30 00 88 	store_32 s4, 12(s3)
    473c:	64 20 00 88 	store_32 s3, 8(s4)
    4740:	62 80 90 c1 	cmple_u s3, s2, s1
    4744:	e3 39 00 f4 	bnz s3, 1852 <free+0x85c>
    4748:	6d 00 00 f6 	b 436 <free+0x2d8>
    474c:	62 10 00 a8 	load_32 s3, 4(s2)
    4750:	83 0c 00 01 	and s4, s3, 3
    4754:	84 0c 00 11 	cmpne_i s4, s4, 3
    4758:	e4 0c 00 f4 	bnz s4, 412 <free+0x2d0>
    475c:	18 20 00 88 	store_32 s0, 8(s24)
    4760:	63 f8 ff 01 	and s3, s3, -2
    4764:	62 10 00 88 	store_32 s3, 4(s2)
    4768:	cb 00 00 f6 	b 812 <free+0x470>
    476c:	61 60 00 a8 	load_32 s3, 24(s1)
    4770:	81 30 00 a8 	load_32 s4, 12(s1)
    4774:	c4 80 00 c1 	cmpeq_i s6, s4, s1
    4778:	e6 02 00 f4 	bnz s6, 92 <free+0x1b0>
    477c:	c1 20 00 a8 	load_32 s6, 8(s1)
    4780:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    4784:	e5 37 00 f4 	bnz s5, 1788 <free+0x85c>
    4788:	a6 30 00 a8 	load_32 s5, 12(s6)
    478c:	a5 80 10 c1 	cmpne_i s5, s5, s1
    4790:	85 37 00 f4 	bnz s5, 1776 <free+0x85c>
    4794:	a4 20 00 a8 	load_32 s5, 8(s4)
    4798:	a5 80 10 c1 	cmpne_i s5, s5, s1
    479c:	25 37 00 f4 	bnz s5, 1764 <free+0x85c>
    47a0:	86 30 00 88 	store_32 s4, 12(s6)
    47a4:	c4 20 00 88 	store_32 s6, 8(s4)
    47a8:	63 0a 00 f2 	bz s3, 332 <free+0x2d0>
    47ac:	1f 00 00 f6 	b 124 <free+0x204>
    47b0:	60 04 00 0f 	move s3, 1
    47b4:	98 00 00 a8 	load_32 s4, (s24)
    47b8:	63 00 b3 c0 	shl s3, s3, s6
    47bc:	63 fc ff 03 	xor s3, s3, -1
    47c0:	64 80 11 c0 	and s3, s4, s3
    47c4:	78 00 00 88 	store_32 s3, (s24)
    47c8:	62 80 90 c1 	cmple_u s3, s2, s1
    47cc:	a3 35 00 f4 	bnz s3, 1716 <free+0x85c>
    47d0:	4b 00 00 f6 	b 300 <free+0x2d8>
    47d4:	e1 50 00 a8 	load_32 s7, 20(s1)
    47d8:	47 00 00 f4 	bnz s7, 8 <free+0x1bc>
    47dc:	03 00 00 f6 	b 12 <free+0x1c4>
    47e0:	c1 50 00 05 	add_i s6, s1, 20
    47e4:	04 00 00 f6 	b 16 <free+0x1d0>
    47e8:	c1 40 00 05 	add_i s6, s1, 16
    47ec:	e6 00 00 a8 	load_32 s7, (s6)
    47f0:	c7 33 00 f2 	bz s7, 1656 <free+0x844>
    47f4:	80 80 f3 c0 	move s4, s7
    47f8:	e4 50 00 a8 	load_32 s7, 20(s4)
    47fc:	00 01 f3 c0 	move s8, s6
    4800:	c4 50 00 05 	add_i s6, s4, 20
    4804:	87 ff ff f5 	bnz s7, -16 <free+0x1d0>
    4808:	e4 40 00 a8 	load_32 s7, 16(s4)
    480c:	c4 40 00 05 	add_i s6, s4, 16
    4810:	27 ff ff f5 	bnz s7, -28 <free+0x1d0>
    4814:	a5 00 64 c1 	cmpgt_u s5, s5, s8
    4818:	45 33 00 f4 	bnz s5, 1640 <free+0x85c>
    481c:	a0 00 00 0f 	move s5, 0
    4820:	a8 00 00 88 	store_32 s5, (s8)
    4824:	83 06 00 f2 	bz s3, 208 <free+0x2d0>
    4828:	a1 70 00 a8 	load_32 s5, 28(s1)
    482c:	c5 08 00 0b 	shl s6, s5, 2
    4830:	d8 00 53 c0 	add_i s6, s24, s6
    4834:	e6 c0 04 a8 	load_32 s7, 304(s6)
    4838:	e7 80 10 c1 	cmpne_i s7, s7, s1
    483c:	47 00 00 f4 	bnz s7, 8 <free+0x220>
    4840:	0c 00 00 f6 	b 48 <free+0x24c>
    4844:	b8 40 00 a8 	load_32 s5, 16(s24)
    4848:	a5 80 61 c1 	cmpgt_u s5, s5, s3
    484c:	a5 31 00 f4 	bnz s5, 1588 <free+0x85c>
    4850:	a3 40 00 a8 	load_32 s5, 16(s3)
    4854:	a5 80 00 c1 	cmpeq_i s5, s5, s1
    4858:	45 02 00 f4 	bnz s5, 72 <free+0x27c>
    485c:	a0 50 00 0f 	move s5, 20
    4860:	a3 80 52 c0 	add_i s5, s3, s5
    4864:	85 00 00 88 	store_32 s4, (s5)
    4868:	64 04 00 f2 	bz s4, 140 <free+0x2d0>
    486c:	11 00 00 f6 	b 68 <free+0x28c>
    4870:	c6 c0 04 05 	add_i s6, s6, 304
    4874:	86 00 00 88 	store_32 s4, (s6)
    4878:	c4 01 00 f4 	bnz s4, 56 <free+0x28c>
    487c:	60 04 00 0f 	move s3, 1
    4880:	98 10 00 a8 	load_32 s4, 4(s24)
    4884:	63 80 b2 c0 	shl s3, s3, s5
    4888:	63 fc ff 03 	xor s3, s3, -1
    488c:	64 80 11 c0 	and s3, s4, s3
    4890:	78 10 00 88 	store_32 s3, 4(s24)
    4894:	62 80 90 c1 	cmple_u s3, s2, s1
    4898:	43 2f 00 f4 	bnz s3, 1512 <free+0x85c>
    489c:	18 00 00 f6 	b 96 <free+0x2d8>
    48a0:	a0 40 00 0f 	move s5, 16
    48a4:	a3 80 52 c0 	add_i s5, s3, s5
    48a8:	85 00 00 88 	store_32 s4, (s5)
    48ac:	44 02 00 f2 	bz s4, 72 <free+0x2d0>
    48b0:	b8 40 00 a8 	load_32 s5, 16(s24)
    48b4:	c5 00 62 c1 	cmpgt_u s6, s5, s4
    48b8:	46 2e 00 f4 	bnz s6, 1480 <free+0x85c>
    48bc:	64 60 00 88 	store_32 s3, 24(s4)
    48c0:	61 40 00 a8 	load_32 s3, 16(s1)
    48c4:	a3 00 00 f2 	bz s3, 20 <free+0x2b4>
    48c8:	a5 80 61 c1 	cmpgt_u s5, s5, s3
    48cc:	a5 2d 00 f4 	bnz s5, 1460 <free+0x85c>
    48d0:	64 40 00 88 	store_32 s3, 16(s4)
    48d4:	83 60 00 88 	store_32 s4, 24(s3)
    48d8:	61 50 00 a8 	load_32 s3, 20(s1)
    48dc:	c3 00 00 f2 	bz s3, 24 <free+0x2d0>
    48e0:	b8 40 00 a8 	load_32 s5, 16(s24)
    48e4:	a5 80 61 c1 	cmpgt_u s5, s5, s3
    48e8:	c5 2c 00 f4 	bnz s5, 1432 <free+0x85c>
    48ec:	64 50 00 88 	store_32 s3, 20(s4)
    48f0:	83 60 00 88 	store_32 s4, 24(s3)
    48f4:	62 80 90 c1 	cmple_u s3, s2, s1
    48f8:	43 2c 00 f4 	bnz s3, 1416 <free+0x85c>
    48fc:	62 10 00 a8 	load_32 s3, 4(s2)
    4900:	83 04 00 01 	and s4, s3, 1
    4904:	e4 2b 00 f2 	bz s4, 1404 <free+0x85c>
    4908:	83 08 00 01 	and s4, s3, 2
    490c:	e4 04 00 f4 	bnz s4, 156 <free+0x384>
    4910:	98 60 00 a8 	load_32 s4, 24(s24)
    4914:	84 00 11 c1 	cmpne_i s4, s4, s2
    4918:	44 00 00 f4 	bnz s4, 8 <free+0x2fc>
    491c:	45 00 00 f6 	b 276 <free+0x40c>
    4920:	98 50 00 a8 	load_32 s4, 20(s24)
    4924:	84 00 11 c1 	cmpne_i s4, s4, s2
    4928:	44 00 00 f4 	bnz s4, 8 <free+0x30c>
    492c:	56 00 00 f6 	b 344 <free+0x460>
    4930:	83 fc 03 16 	cmpgt_u s4, s3, 255
    4934:	64 0d 00 f4 	bnz s4, 428 <free+0x4bc>
    4938:	c3 0c 00 0a 	shr s6, s3, 3
    493c:	82 20 00 a8 	load_32 s4, 8(s2)
    4940:	a6 0c 00 0b 	shl s5, s6, 3
    4944:	b8 80 52 c0 	add_i s5, s24, s5
    4948:	e5 a0 00 05 	add_i s7, s5, 40
    494c:	a2 30 00 a8 	load_32 s5, 12(s2)
    4950:	04 81 03 c1 	cmpeq_i s8, s4, s7
    4954:	e8 00 00 f4 	bnz s8, 28 <free+0x34c>
    4958:	18 41 00 a8 	load_32 s8, 16(s24)
    495c:	08 01 62 c1 	cmpgt_u s8, s8, s4
    4960:	08 29 00 f4 	bnz s8, 1312 <free+0x85c>
    4964:	04 31 00 a8 	load_32 s8, 12(s4)
    4968:	08 01 11 c1 	cmpne_i s8, s8, s2
    496c:	a8 28 00 f4 	bnz s8, 1300 <free+0x85c>
    4970:	05 01 12 c1 	cmpne_i s8, s5, s4
    4974:	48 00 00 f4 	bnz s8, 8 <free+0x358>
    4978:	e0 00 00 f6 	b 896 <free+0x6d4>
    497c:	c5 80 03 c1 	cmpeq_i s6, s5, s7
    4980:	e6 00 00 f4 	bnz s6, 28 <free+0x378>
    4984:	d8 40 00 a8 	load_32 s6, 16(s24)
    4988:	c6 80 62 c1 	cmpgt_u s6, s6, s5
    498c:	a6 27 00 f4 	bnz s6, 1268 <free+0x85c>
    4990:	c5 20 00 a8 	load_32 s6, 8(s5)
    4994:	46 00 11 c1 	cmpne_i s2, s6, s2
    4998:	42 27 00 f4 	bnz s2, 1256 <free+0x85c>
    499c:	a4 30 00 88 	store_32 s5, 12(s4)
    49a0:	85 20 00 88 	store_32 s4, 8(s5)
    49a4:	23 01 00 f6 	b 1164 <free+0x80c>
    49a8:	63 f8 ff 01 	and s3, s3, -2
    49ac:	62 10 00 88 	store_32 s3, 4(s2)
    49b0:	41 00 50 c0 	add_i s2, s1, s0
    49b4:	60 04 00 00 	or s3, s0, 1
    49b8:	61 10 00 88 	store_32 s3, 4(s1)
    49bc:	02 00 00 88 	store_32 s0, (s2)
    49c0:	40 fc 03 16 	cmpgt_u s2, s0, 255
    49c4:	02 02 00 f4 	bnz s2, 64 <free+0x3e0>
    49c8:	00 0c 00 0a 	shr s0, s0, 3
    49cc:	58 00 00 a8 	load_32 s2, (s24)
    49d0:	60 04 00 0f 	move s3, 1
    49d4:	80 0c 00 0b 	shl s4, s0, 3
    49d8:	98 00 52 c0 	add_i s4, s24, s4
    49dc:	63 00 b0 c0 	shl s3, s3, s0
    49e0:	a2 80 11 c0 	and s5, s2, s3
    49e4:	04 a0 00 05 	add_i s0, s4, 40
    49e8:	45 00 00 f4 	bnz s5, 8 <free+0x3cc>
    49ec:	32 00 00 f6 	b 200 <free+0x490>
    49f0:	40 20 00 a8 	load_32 s2, 8(s0)
    49f4:	78 40 00 a8 	load_32 s3, 16(s24)
    49f8:	63 00 91 c1 	cmple_u s3, s3, s2
    49fc:	23 06 00 f4 	bnz s3, 196 <free+0x49c>
    4a00:	20 01 00 f6 	b 1152 <free+0x85c>
    4a04:	40 00 00 0f 	move s2, 0
    4a08:	80 20 00 0a 	shr s4, s0, 8
    4a0c:	60 00 f1 c0 	move s3, s2
    4a10:	44 0c 00 f2 	bz s4, 392 <free+0x574>
    4a14:	7f fc 00 4f 	movehi s3, 2047
    4a18:	63 fc 7f 00 	or s3, s3, 8191
    4a1c:	60 80 61 c1 	cmpgt_u s3, s0, s3
    4a20:	43 00 00 f4 	bnz s3, 8 <free+0x404>
    4a24:	41 00 00 f6 	b 260 <free+0x504>
    4a28:	60 7c 00 0f 	move s3, 31
    4a2c:	5b 00 00 f6 	b 364 <free+0x574>
    4a30:	58 30 00 a8 	load_32 s2, 12(s24)
    4a34:	02 00 50 c0 	add_i s0, s2, s0
    4a38:	18 30 00 88 	store_32 s0, 12(s24)
    4a3c:	38 60 00 88 	store_32 s1, 24(s24)
    4a40:	40 04 00 00 	or s2, s0, 1
    4a44:	41 10 00 88 	store_32 s2, 4(s1)
    4a48:	58 50 00 a8 	load_32 s2, 20(s24)
    4a4c:	21 00 11 c1 	cmpne_i s1, s1, s2
    4a50:	81 00 00 f4 	bnz s1, 16 <free+0x43c>
    4a54:	20 00 00 0f 	move s1, 0
    4a58:	38 50 00 88 	store_32 s1, 20(s24)
    4a5c:	38 20 00 88 	store_32 s1, 8(s24)
    4a60:	38 70 00 a8 	load_32 s1, 28(s24)
    4a64:	00 80 90 c1 	cmple_u s0, s0, s1
    4a68:	a0 0f 00 f4 	bnz s0, 500 <free+0x638>
    4a6c:	00 00 00 0f 	move s0, 0
    4a70:	05 01 00 f8 	call 1044 <sys_trim>
    4a74:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4a78:	00 08 00 01 	and s0, s0, 2
    4a7c:	20 10 00 f2 	bz s0, 516 <free+0x65c>
    4a80:	7a 00 00 f6 	b 488 <free+0x644>
    4a84:	58 20 00 a8 	load_32 s2, 8(s24)
    4a88:	02 00 50 c0 	add_i s0, s2, s0
    4a8c:	18 20 00 88 	store_32 s0, 8(s24)
    4a90:	38 50 00 88 	store_32 s1, 20(s24)
    4a94:	41 00 50 c0 	add_i s2, s1, s0
    4a98:	60 04 00 00 	or s3, s0, 1
    4a9c:	61 10 00 88 	store_32 s3, 4(s1)
    4aa0:	02 00 00 88 	store_32 s0, (s2)
    4aa4:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4aa8:	00 08 00 01 	and s0, s0, 2
    4aac:	a0 0e 00 f2 	bz s0, 468 <free+0x65c>
    4ab0:	6e 00 00 f6 	b 440 <free+0x644>
    4ab4:	42 80 01 c0 	or s2, s2, s3
    4ab8:	58 00 00 88 	store_32 s2, (s24)
    4abc:	40 00 f0 c0 	move s2, s0
    4ac0:	20 20 00 88 	store_32 s1, 8(s0)
    4ac4:	22 30 00 88 	store_32 s1, 12(s2)
    4ac8:	41 20 00 88 	store_32 s2, 8(s1)
    4acc:	01 30 00 88 	store_32 s0, 12(s1)
    4ad0:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4ad4:	00 08 00 01 	and s0, s0, 2
    4ad8:	40 0d 00 f2 	bz s0, 424 <free+0x65c>
    4adc:	63 00 00 f6 	b 396 <free+0x644>
    4ae0:	82 60 00 a8 	load_32 s4, 24(s2)
    4ae4:	a2 30 00 a8 	load_32 s5, 12(s2)
    4ae8:	c5 00 01 c1 	cmpeq_i s6, s5, s2
    4aec:	46 11 00 f4 	bnz s6, 552 <free+0x6f0>
    4af0:	c2 20 00 a8 	load_32 s6, 8(s2)
    4af4:	f8 40 00 a8 	load_32 s7, 16(s24)
    4af8:	e7 00 63 c1 	cmpgt_u s7, s7, s6
    4afc:	27 1c 00 f4 	bnz s7, 900 <free+0x85c>
    4b00:	e6 30 00 a8 	load_32 s7, 12(s6)
    4b04:	e7 00 11 c1 	cmpne_i s7, s7, s2
    4b08:	c7 1b 00 f4 	bnz s7, 888 <free+0x85c>
    4b0c:	e5 20 00 a8 	load_32 s7, 8(s5)
    4b10:	e7 00 11 c1 	cmpne_i s7, s7, s2
    4b14:	67 1b 00 f4 	bnz s7, 876 <free+0x85c>
    4b18:	a6 30 00 88 	store_32 s5, 12(s6)
    4b1c:	c5 20 00 88 	store_32 s6, 8(s5)
    4b20:	84 18 00 f2 	bz s4, 784 <free+0x80c>
    4b24:	92 00 00 f6 	b 584 <free+0x748>
    4b28:	7f 0c 00 4f 	movehi s3, 127
    4b2c:	bf 04 00 4f 	movehi s5, 63
    4b30:	de 00 00 4f 	movehi s6, 30
    4b34:	63 00 7c 00 	or s3, s3, 7936
    4b38:	64 80 51 c0 	add_i s3, s4, s3
    4b3c:	a5 00 40 00 	or s5, s5, 4096
    4b40:	63 40 00 0a 	shr s3, s3, 16
    4b44:	63 20 00 01 	and s3, s3, 8
    4b48:	84 80 b1 c0 	shl s4, s4, s3
    4b4c:	a4 80 52 c0 	add_i s5, s4, s5
    4b50:	a5 40 00 0a 	shr s5, s5, 16
    4b54:	a5 10 00 01 	and s5, s5, 4
    4b58:	84 80 b2 c0 	shl s4, s4, s5
    4b5c:	65 80 01 c0 	or s3, s5, s3
    4b60:	c4 00 53 c0 	add_i s6, s4, s6
    4b64:	c6 40 00 0a 	shr s6, s6, 16
    4b68:	a6 08 00 01 	and s5, s6, 2
    4b6c:	c0 38 00 0f 	move s6, 14
    4b70:	63 80 02 c0 	or s3, s3, s5
    4b74:	84 80 b2 c0 	shl s4, s4, s5
    4b78:	66 80 61 c0 	sub_i s3, s6, s3
    4b7c:	84 3c 00 0a 	shr s4, s4, 15
    4b80:	63 00 52 c0 	add_i s3, s3, s4
    4b84:	83 1c 00 05 	add_i s4, s3, 7
    4b88:	80 00 a2 c0 	shr s4, s0, s4
    4b8c:	63 04 00 0b 	shl s3, s3, 1
    4b90:	84 04 00 01 	and s4, s4, 1
    4b94:	64 80 01 c0 	or s3, s4, s3
    4b98:	61 70 00 88 	store_32 s3, 28(s1)
    4b9c:	a3 08 00 0b 	shl s5, s3, 2
    4ba0:	41 50 00 88 	store_32 s2, 20(s1)
    4ba4:	d8 80 52 c0 	add_i s6, s24, s5
    4ba8:	41 40 00 88 	store_32 s2, 16(s1)
    4bac:	40 04 00 0f 	move s2, 1
    4bb0:	98 10 00 a8 	load_32 s4, 4(s24)
    4bb4:	a2 80 b1 c0 	shl s5, s2, s3
    4bb8:	46 c0 04 05 	add_i s2, s6, 304
    4bbc:	e4 80 12 c0 	and s7, s4, s5
    4bc0:	47 00 00 f4 	bnz s7, 8 <free+0x5a4>
    4bc4:	08 00 00 f6 	b 32 <free+0x5c0>
    4bc8:	82 00 00 a8 	load_32 s4, (s2)
    4bcc:	a3 7c 00 10 	cmpeq_i s5, s3, 31
    4bd0:	25 01 00 f4 	bnz s5, 36 <free+0x5d0>
    4bd4:	40 64 00 0f 	move s2, 25
    4bd8:	63 04 00 0a 	shr s3, s3, 1
    4bdc:	42 80 61 c0 	sub_i s2, s2, s3
    4be0:	06 00 00 f6 	b 24 <free+0x5d4>
    4be4:	04 80 02 c0 	or s0, s4, s5
    4be8:	18 10 00 88 	store_32 s0, 4(s24)
    4bec:	22 00 00 88 	store_32 s1, (s2)
    4bf0:	13 00 00 f6 	b 76 <free+0x618>
    4bf4:	40 00 00 0f 	move s2, 0
    4bf8:	60 00 b1 c0 	shl s3, s0, s2
    4bfc:	40 00 f2 c0 	move s2, s4
    4c00:	82 10 00 a8 	load_32 s4, 4(s2)
    4c04:	84 e0 ff 01 	and s4, s4, -8
    4c08:	84 00 00 c1 	cmpeq_i s4, s4, s0
    4c0c:	24 04 00 f4 	bnz s4, 132 <free+0x66c>
    4c10:	83 74 00 0a 	shr s4, s3, 29
    4c14:	63 04 00 0b 	shl s3, s3, 1
    4c18:	84 10 00 01 	and s4, s4, 4
    4c1c:	a2 00 52 c0 	add_i s5, s2, s4
    4c20:	85 40 00 a8 	load_32 s4, 16(s5)
    4c24:	c4 fe ff f5 	bnz s4, -40 <free+0x5d8>
    4c28:	78 40 00 a8 	load_32 s3, 16(s24)
    4c2c:	05 40 00 05 	add_i s0, s5, 16
    4c30:	63 00 60 c1 	cmpgt_u s3, s3, s0
    4c34:	63 12 00 f4 	bnz s3, 588 <free+0x85c>
    4c38:	20 00 00 88 	store_32 s1, (s0)
    4c3c:	41 60 00 88 	store_32 s2, 24(s1)
    4c40:	21 30 00 88 	store_32 s1, 12(s1)
    4c44:	21 20 00 88 	store_32 s1, 8(s1)
    4c48:	18 80 00 a8 	load_32 s0, 32(s24)
    4c4c:	00 fc ff 05 	add_i s0, s0, -1
    4c50:	18 80 00 88 	store_32 s0, 32(s24)
    4c54:	40 00 00 f4 	bnz s0, 8 <free+0x638>
    4c58:	1e 00 00 f6 	b 120 <free+0x6ac>
    4c5c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4c60:	00 08 00 01 	and s0, s0, 2
    4c64:	e0 00 00 f2 	bz s0, 28 <free+0x65c>
    4c68:	18 00 07 05 	add_i s0, s24, 448
    4c6c:	20 00 00 0f 	move s1, 0
    4c70:	40 00 00 aa 	load_sync s2, (s0)
    4c74:	40 80 f0 c0 	move s2, s1
    4c78:	40 00 00 8a 	store_sync s2, (s0)  
    4c7c:	a2 ff ff f3 	bz s2, -12 <free+0x64c>
    4c80:	fe e3 00 a8 	load_32 ra, 56(sp)
    4c84:	1e f3 00 a8 	load_32 s24, 60(sp)
    4c88:	de 03 01 05 	add_i sp, sp, 64
    4c8c:	1f 00 00 f0 	ret
    4c90:	02 20 00 a8 	load_32 s0, 8(s2)
    4c94:	78 40 00 a8 	load_32 s3, 16(s24)
    4c98:	83 00 60 c1 	cmpgt_u s4, s3, s0
    4c9c:	24 0f 00 f4 	bnz s4, 484 <free+0x85c>
    4ca0:	63 00 61 c1 	cmpgt_u s3, s3, s2
    4ca4:	e3 0e 00 f4 	bnz s3, 476 <free+0x85c>
    4ca8:	20 30 00 88 	store_32 s1, 12(s0)
    4cac:	22 20 00 88 	store_32 s1, 8(s2)
    4cb0:	01 20 00 88 	store_32 s0, 8(s1)
    4cb4:	00 00 00 0f 	move s0, 0
    4cb8:	41 30 00 88 	store_32 s2, 12(s1)
    4cbc:	01 60 00 88 	store_32 s0, 24(s1)
    4cc0:	18 80 00 a8 	load_32 s0, 32(s24)
    4cc4:	00 fc ff 05 	add_i s0, s0, -1
    4cc8:	18 80 00 88 	store_32 s0, 32(s24)
    4ccc:	80 fc ff f5 	bnz s0, -112 <free+0x638>
    4cd0:	18 30 07 05 	add_i s0, s24, 460
    4cd4:	20 00 00 a8 	load_32 s1, (s0)
    4cd8:	01 20 00 05 	add_i s0, s1, 8
    4cdc:	c1 ff ff f5 	bnz s1, -8 <free+0x6b0>
    4ce0:	00 fc ff 0f 	move s0, -1
    4ce4:	18 80 00 88 	store_32 s0, 32(s24)
    4ce8:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4cec:	00 08 00 01 	and s0, s0, 2
    4cf0:	80 fc ff f3 	bz s0, -112 <free+0x65c>
    4cf4:	dd ff ff f7 	b -140 <free+0x644>
    4cf8:	40 04 00 0f 	move s2, 1
    4cfc:	98 00 00 a8 	load_32 s4, (s24)
    4d00:	42 00 b3 c0 	shl s2, s2, s6
    4d04:	42 fc ff 03 	xor s2, s2, -1
    4d08:	44 00 11 c0 	and s2, s4, s2
    4d0c:	58 00 00 88 	store_32 s2, (s24)
    4d10:	48 00 00 f6 	b 288 <free+0x80c>
    4d14:	e2 50 00 a8 	load_32 s7, 20(s2)
    4d18:	47 00 00 f4 	bnz s7, 8 <free+0x6fc>
    4d1c:	03 00 00 f6 	b 12 <free+0x704>
    4d20:	c2 50 00 05 	add_i s6, s2, 20
    4d24:	04 00 00 f6 	b 16 <free+0x710>
    4d28:	c2 40 00 05 	add_i s6, s2, 16
    4d2c:	e6 00 00 a8 	load_32 s7, (s6)
    4d30:	27 0a 00 f2 	bz s7, 324 <free+0x850>
    4d34:	a0 80 f3 c0 	move s5, s7
    4d38:	e5 50 00 a8 	load_32 s7, 20(s5)
    4d3c:	00 01 f3 c0 	move s8, s6
    4d40:	c5 50 00 05 	add_i s6, s5, 20
    4d44:	87 ff ff f5 	bnz s7, -16 <free+0x710>
    4d48:	e5 40 00 a8 	load_32 s7, 16(s5)
    4d4c:	c5 40 00 05 	add_i s6, s5, 16
    4d50:	27 ff ff f5 	bnz s7, -28 <free+0x710>
    4d54:	d8 40 00 a8 	load_32 s6, 16(s24)
    4d58:	c6 00 64 c1 	cmpgt_u s6, s6, s8
    4d5c:	26 09 00 f4 	bnz s6, 292 <free+0x85c>
    4d60:	c0 00 00 0f 	move s6, 0
    4d64:	c8 00 00 88 	store_32 s6, (s8)
    4d68:	44 06 00 f2 	bz s4, 200 <free+0x80c>
    4d6c:	c2 70 00 a8 	load_32 s6, 28(s2)
    4d70:	e6 08 00 0b 	shl s7, s6, 2
    4d74:	f8 80 53 c0 	add_i s7, s24, s7
    4d78:	07 c1 04 a8 	load_32 s8, 304(s7)
    4d7c:	08 01 11 c1 	cmpne_i s8, s8, s2
    4d80:	48 00 00 f4 	bnz s8, 8 <free+0x764>
    4d84:	0c 00 00 f6 	b 48 <free+0x790>
    4d88:	d8 40 00 a8 	load_32 s6, 16(s24)
    4d8c:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    4d90:	86 07 00 f4 	bnz s6, 240 <free+0x85c>
    4d94:	c4 40 00 a8 	load_32 s6, 16(s4)
    4d98:	c6 00 01 c1 	cmpeq_i s6, s6, s2
    4d9c:	06 02 00 f4 	bnz s6, 64 <free+0x7b8>
    4da0:	c0 50 00 0f 	move s6, 20
    4da4:	c4 00 53 c0 	add_i s6, s4, s6
    4da8:	a6 00 00 88 	store_32 s5, (s6)
    4dac:	25 04 00 f2 	bz s5, 132 <free+0x80c>
    4db0:	0f 00 00 f6 	b 60 <free+0x7c8>
    4db4:	e7 c0 04 05 	add_i s7, s7, 304
    4db8:	a7 00 00 88 	store_32 s5, (s7)
    4dbc:	85 01 00 f4 	bnz s5, 48 <free+0x7c8>
    4dc0:	40 04 00 0f 	move s2, 1
    4dc4:	98 10 00 a8 	load_32 s4, 4(s24)
    4dc8:	42 00 b3 c0 	shl s2, s2, s6
    4dcc:	42 fc ff 03 	xor s2, s2, -1
    4dd0:	44 00 11 c0 	and s2, s4, s2
    4dd4:	58 10 00 88 	store_32 s2, 4(s24)
    4dd8:	16 00 00 f6 	b 88 <free+0x80c>
    4ddc:	c0 40 00 0f 	move s6, 16
    4de0:	c4 00 53 c0 	add_i s6, s4, s6
    4de4:	a6 00 00 88 	store_32 s5, (s6)
    4de8:	45 02 00 f2 	bz s5, 72 <free+0x80c>
    4dec:	d8 40 00 a8 	load_32 s6, 16(s24)
    4df0:	e6 80 62 c1 	cmpgt_u s7, s6, s5
    4df4:	67 04 00 f4 	bnz s7, 140 <free+0x85c>
    4df8:	85 60 00 88 	store_32 s4, 24(s5)
    4dfc:	82 40 00 a8 	load_32 s4, 16(s2)
    4e00:	a4 00 00 f2 	bz s4, 20 <free+0x7f0>
    4e04:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    4e08:	c6 03 00 f4 	bnz s6, 120 <free+0x85c>
    4e0c:	85 40 00 88 	store_32 s4, 16(s5)
    4e10:	a4 60 00 88 	store_32 s5, 24(s4)
    4e14:	42 50 00 a8 	load_32 s2, 20(s2)
    4e18:	c2 00 00 f2 	bz s2, 24 <free+0x80c>
    4e1c:	98 40 00 a8 	load_32 s4, 16(s24)
    4e20:	84 00 61 c1 	cmpgt_u s4, s4, s2
    4e24:	e4 02 00 f4 	bnz s4, 92 <free+0x85c>
    4e28:	45 50 00 88 	store_32 s2, 20(s5)
    4e2c:	a2 60 00 88 	store_32 s5, 24(s2)
    4e30:	43 e0 ff 01 	and s2, s3, -8
    4e34:	02 00 50 c0 	add_i s0, s2, s0
    4e38:	41 00 50 c0 	add_i s2, s1, s0
    4e3c:	60 04 00 00 	or s3, s0, 1
    4e40:	61 10 00 88 	store_32 s3, 4(s1)
    4e44:	02 00 00 88 	store_32 s0, (s2)
    4e48:	58 50 00 a8 	load_32 s2, 20(s24)
    4e4c:	41 00 11 c1 	cmpne_i s2, s1, s2
    4e50:	82 db ff f5 	bnz s2, -1168 <free+0x39c>
    4e54:	18 20 00 88 	store_32 s0, 8(s24)
    4e58:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4e5c:	00 08 00 01 	and s0, s0, 2
    4e60:	00 f1 ff f3 	bz s0, -480 <free+0x65c>
    4e64:	81 ff ff f7 	b -508 <free+0x644>
    4e68:	80 00 00 0f 	move s4, 0
    4e6c:	43 d4 ff f3 	bz s3, -1400 <free+0x2d0>
    4e70:	6e fe ff f7 	b -1608 <free+0x204>
    4e74:	a0 00 00 0f 	move s5, 0
    4e78:	c4 fd ff f3 	bz s4, -72 <free+0x80c>
    4e7c:	bc ff ff f7 	b -272 <free+0x748>
    4e80:	78 08 00 f8 	call 8672 <abort>

0000000000004e84 sys_trim:
    4e84:	de 03 ff 05 	add_i sp, sp, -64
    4e88:	1e f3 00 88 	store_32 s24, 60(sp)
    4e8c:	3e e3 00 88 	store_32 s25, 56(sp)
    4e90:	5e d3 00 88 	store_32 s26, 52(sp)
    4e94:	7e c3 00 88 	store_32 s27, 48(sp)
    4e98:	fe b3 00 88 	store_32 ra, 44(sp)
    4e9c:	25 00 00 4f 	movehi s1, 5
    4ea0:	61 d3 44 00 	or s27, s1, 4404
    4ea4:	3b 00 00 a8 	load_32 s1, (s27)
    4ea8:	61 05 00 f4 	bnz s1, 172 <sys_trim+0xd0>
    4eac:	25 00 00 4f 	movehi s1, 5
    4eb0:	40 04 00 0f 	move s2, 1
    4eb4:	21 a0 4c 00 	or s1, s1, 4904
    4eb8:	61 00 00 aa 	load_sync s3, (s1)
    4ebc:	80 00 f1 c0 	move s4, s2
    4ec0:	81 00 00 8a 	store_sync s4, (s1)  
    4ec4:	a4 ff ff f3 	bz s4, -12 <sys_trim+0x34>
    4ec8:	03 01 00 f2 	bz s3, 32 <sys_trim+0x64>
    4ecc:	61 00 00 a8 	load_32 s3, (s1)
    4ed0:	e3 ff ff f5 	bnz s3, -4 <sys_trim+0x48>
    4ed4:	61 00 00 aa 	load_sync s3, (s1)
    4ed8:	80 00 f1 c0 	move s4, s2
    4edc:	81 00 00 8a 	store_sync s4, (s1)  
    4ee0:	a4 ff ff f3 	bz s4, -12 <sys_trim+0x50>
    4ee4:	43 ff ff f5 	bnz s3, -24 <sys_trim+0x48>
    4ee8:	5b 00 00 a8 	load_32 s2, (s27)
    4eec:	a2 02 00 f4 	bnz s2, 84 <sys_trim+0xbc>
    4ef0:	40 00 40 0f 	move s2, 4096
    4ef4:	5b 20 00 88 	store_32 s2, 8(s27)
    4ef8:	5b 10 00 88 	store_32 s2, 4(s27)
    4efc:	40 fc ff 0f 	move s2, -1
    4f00:	5b 30 00 88 	store_32 s2, 12(s27)
    4f04:	45 00 00 4f 	movehi s2, 5
    4f08:	60 20 00 4f 	movehi s3, 256
    4f0c:	7b 40 00 88 	store_32 s3, 16(s27)
    4f10:	60 08 00 0f 	move s3, 2
    4f14:	7b 50 00 88 	store_32 s3, 20(s27)
    4f18:	42 30 45 00 	or s2, s2, 4428
    4f1c:	aa 54 55 4f 	movehi s5, 174762
    4f20:	80 00 00 0f 	move s4, 0
    4f24:	62 f0 06 88 	store_32 s3, 444(s2)
    4f28:	7e a0 00 05 	add_i s3, sp, 40
    4f2c:	82 00 07 88 	store_32 s4, 448(s2)
    4f30:	45 60 55 00 	or s2, s5, 5464
    4f34:	63 c0 ff 01 	and s3, s3, -16
    4f38:	43 00 31 c0 	xor s2, s3, s2
    4f3c:	5b 00 00 88 	store_32 s2, (s27)
    4f40:	40 00 00 0f 	move s2, 0
    4f44:	61 00 00 aa 	load_sync s3, (s1)
    4f48:	60 00 f1 c0 	move s3, s2
    4f4c:	61 00 00 8a 	store_sync s3, (s1)  
    4f50:	a3 ff ff f3 	bz s3, -12 <sys_trim+0xc0>
    4f54:	20 fc fe 16 	cmpgt_u s1, s0, -65
    4f58:	60 00 00 0f 	move s3, 0
    4f5c:	a1 0a 00 f4 	bnz s1, 340 <sys_trim+0x22c>
    4f60:	25 00 00 4f 	movehi s1, 5
    4f64:	81 30 45 00 	or s4, s1, 4428
    4f68:	44 63 00 a8 	load_32 s26, 24(s4)
    4f6c:	3a 0a 00 f2 	bz s26, 324 <sys_trim+0x22c>
    4f70:	24 30 00 a8 	load_32 s1, 12(s4)
    4f74:	40 a0 00 05 	add_i s2, s0, 40
    4f78:	41 00 91 c1 	cmple_u s2, s1, s2
    4f7c:	e2 08 00 f4 	bnz s2, 284 <sys_trim+0x214>
    4f80:	40 5c ff 0f 	move s2, -41
    4f84:	7e 80 00 88 	store_32 s3, 32(sp)
    4f88:	1b 23 00 a8 	load_32 s24, 8(s27)
    4f8c:	02 00 60 c0 	sub_i s0, s2, s0
    4f90:	00 80 50 c0 	add_i s0, s0, s1
    4f94:	20 00 fc c0 	move s1, s24
    4f98:	9e 90 00 88 	store_32 s4, 36(sp)
    4f9c:	00 00 5c c0 	add_i s0, s0, s24
    4fa0:	3e 13 00 f8 	call 19704 <__udivsi3>
    4fa4:	9e 90 00 a8 	load_32 s4, 36(sp)
    4fa8:	00 fc ff 05 	add_i s0, s0, -1
    4fac:	24 13 07 05 	add_i s25, s4, 452
    4fb0:	39 00 00 a8 	load_32 s1, (s25)
    4fb4:	41 00 6d c1 	cmpgt_u s2, s1, s26
    4fb8:	42 00 00 f4 	bnz s2, 8 <sys_trim+0x13c>
    4fbc:	05 00 00 f6 	b 20 <sys_trim+0x14c>
    4fc0:	39 23 00 a8 	load_32 s25, 8(s25)
    4fc4:	39 00 00 a8 	load_32 s1, (s25)
    4fc8:	41 00 6d c1 	cmpgt_u s2, s1, s26
    4fcc:	a2 ff ff f5 	bnz s2, -12 <sys_trim+0x13c>
    4fd0:	59 10 00 a8 	load_32 s2, 4(s25)
    4fd4:	21 00 51 c0 	add_i s1, s1, s2
    4fd8:	21 00 6d c1 	cmpgt_u s1, s1, s26
    4fdc:	41 00 00 f4 	bnz s1, 8 <sys_trim+0x160>
    4fe0:	f8 ff ff f7 	b -32 <sys_trim+0x13c>
    4fe4:	39 30 00 a0 	load_u8 s1, 12(s25)
    4fe8:	7e 80 00 a8 	load_32 s3, 32(sp)
    4fec:	21 20 00 01 	and s1, s1, 8
    4ff0:	41 05 00 f4 	bnz s1, 168 <sys_trim+0x214>
    4ff4:	3f fc 7f 4f 	movehi s1, 262143
    4ff8:	40 00 7c c0 	mull_i s2, s0, s24
    4ffc:	01 f8 7f 00 	or s0, s1, 8190
    5000:	02 00 60 c1 	cmpgt_u s0, s2, s0
    5004:	40 00 00 f4 	bnz s0, 8 <sys_trim+0x188>
    5008:	03 00 00 f6 	b 12 <sys_trim+0x190>
    500c:	00 00 80 4f 	movehi s0, 262144
    5010:	40 00 6c c0 	sub_i s2, s0, s24
    5014:	05 00 00 4f 	movehi s0, 5
    5018:	00 07 00 0f 	move s24, 1
    501c:	40 a3 4c 00 	or s26, s0, 4904
    5020:	1a 00 00 aa 	load_sync s0, (s26)
    5024:	20 00 fc c0 	move s1, s24
    5028:	3a 00 00 8a 	store_sync s1, (s26)  
    502c:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x19c>
    5030:	5e 60 00 88 	store_32 s2, 24(sp)
    5034:	00 01 00 f2 	bz s0, 32 <sys_trim+0x1d0>
    5038:	1a 00 00 a8 	load_32 s0, (s26)
    503c:	e0 ff ff f5 	bnz s0, -4 <sys_trim+0x1b4>
    5040:	1a 00 00 aa 	load_sync s0, (s26)
    5044:	20 00 fc c0 	move s1, s24
    5048:	3a 00 00 8a 	store_sync s1, (s26)  
    504c:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x1bc>
    5050:	40 ff ff f5 	bnz s0, -24 <sys_trim+0x1b4>
    5054:	00 00 00 0f 	move s0, 0
    5058:	1e 70 00 88 	store_32 s0, 28(sp)
    505c:	b7 0b 00 f8 	call 11996 <sbrk>
    5060:	39 00 00 a8 	load_32 s1, (s25)
    5064:	59 10 00 a8 	load_32 s2, 4(s25)
    5068:	60 00 f0 c0 	move s3, s0
    506c:	01 00 51 c0 	add_i s0, s1, s2
    5070:	03 00 10 c1 	cmpne_i s0, s3, s0
    5074:	40 00 00 f4 	bnz s0, 8 <sys_trim+0x1f8>
    5078:	17 00 00 f6 	b 92 <sys_trim+0x250>
    507c:	9e 90 00 a8 	load_32 s4, 36(sp)
    5080:	7e 80 00 a8 	load_32 s3, 32(sp)
    5084:	3e 70 00 a8 	load_32 s1, 28(sp)
    5088:	1a 00 00 aa 	load_sync s0, (s26)
    508c:	00 80 f0 c0 	move s0, s1
    5090:	1a 00 00 8a 	store_sync s0, (s26)  
    5094:	a0 ff ff f3 	bz s0, -12 <sys_trim+0x204>
    5098:	04 30 00 a8 	load_32 s0, 12(s4)
    509c:	24 70 00 a8 	load_32 s1, 28(s4)
    50a0:	00 80 90 c1 	cmple_u s0, s0, s1
    50a4:	60 00 00 f4 	bnz s0, 12 <sys_trim+0x22c>
    50a8:	00 fc ff 0f 	move s0, -1
    50ac:	04 70 00 88 	store_32 s0, 28(s4)
    50b0:	00 83 f1 c0 	move s24, s3
    50b4:	00 00 fc c0 	move s0, s24
    50b8:	fe b3 00 a8 	load_32 ra, 44(sp)
    50bc:	7e c3 00 a8 	load_32 s27, 48(sp)
    50c0:	5e d3 00 a8 	load_32 s26, 52(sp)
    50c4:	3e e3 00 a8 	load_32 s25, 56(sp)
    50c8:	1e f3 00 a8 	load_32 s24, 60(sp)
    50cc:	de 03 01 05 	add_i sp, sp, 64
    50d0:	1f 00 00 f0 	ret
    50d4:	1e 60 00 a8 	load_32 s0, 24(sp)
    50d8:	3e 70 00 a8 	load_32 s1, 28(sp)
    50dc:	7e 60 00 88 	store_32 s3, 24(sp)
    50e0:	01 00 60 c0 	sub_i s0, s1, s0
    50e4:	95 0b 00 f8 	call 11860 <sbrk>
    50e8:	1e 50 00 88 	store_32 s0, 20(sp)
    50ec:	1e 70 00 a8 	load_32 s0, 28(sp)
    50f0:	92 0b 00 f8 	call 11848 <sbrk>
    50f4:	5e 60 00 a8 	load_32 s2, 24(sp)
    50f8:	3e 50 00 a8 	load_32 s1, 20(sp)
    50fc:	21 fc ff 10 	cmpeq_i s1, s1, -1
    5100:	e1 fb ff f5 	bnz s1, -132 <sys_trim+0x1f8>
    5104:	20 00 81 c1 	cmplt_u s1, s0, s2
    5108:	41 00 00 f4 	bnz s1, 8 <sys_trim+0x28c>
    510c:	dc ff ff f7 	b -144 <sys_trim+0x1f8>
    5110:	be 70 00 a8 	load_32 s5, 28(sp)
    5114:	02 00 60 c0 	sub_i s0, s2, s0
    5118:	3a 00 00 aa 	load_sync s1, (s26)
    511c:	20 80 f2 c0 	move s1, s5
    5120:	3a 00 00 8a 	store_sync s1, (s26)  
    5124:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x294>
    5128:	9e 90 00 a8 	load_32 s4, 36(sp)
    512c:	7e 80 00 a8 	load_32 s3, 32(sp)
    5130:	40 fb ff f3 	bz s0, -152 <sys_trim+0x214>
    5134:	39 10 00 a8 	load_32 s1, 4(s25)
    5138:	21 00 60 c0 	sub_i s1, s1, s0
    513c:	39 10 00 88 	store_32 s1, 4(s25)
    5140:	24 c0 06 a8 	load_32 s1, 432(s4)
    5144:	21 00 60 c0 	sub_i s1, s1, s0
    5148:	24 c0 06 88 	store_32 s1, 432(s4)
    514c:	24 60 00 a8 	load_32 s1, 24(s4)
    5150:	64 30 00 a8 	load_32 s3, 12(s4)
    5154:	41 20 00 05 	add_i s2, s1, 8
    5158:	03 00 60 c0 	sub_i s0, s3, s0
    515c:	42 1c 00 01 	and s2, s2, 7
    5160:	42 00 00 10 	cmpeq_i s2, s2, 0
    5164:	82 00 00 f4 	bnz s2, 16 <sys_trim+0x2f0>
    5168:	40 e0 ff 0f 	move s2, -8
    516c:	42 80 60 c0 	sub_i s2, s2, s1
    5170:	a2 1c 00 01 	and s5, s2, 7
    5174:	41 80 52 c0 	add_i s2, s1, s5
    5178:	44 60 00 88 	store_32 s2, 24(s4)
    517c:	60 80 62 c0 	sub_i s3, s0, s5
    5180:	64 30 00 88 	store_32 s3, 12(s4)
    5184:	01 00 50 c0 	add_i s0, s1, s0
    5188:	20 a0 00 0f 	move s1, 40
    518c:	63 04 00 00 	or s3, s3, 1
    5190:	62 10 00 88 	store_32 s3, 4(s2)
    5194:	20 10 00 88 	store_32 s1, 4(s0)
    5198:	1b 40 00 a8 	load_32 s0, 16(s27)
    519c:	04 70 00 88 	store_32 s0, 28(s4)
    51a0:	c5 ff ff f7 	b -236 <sys_trim+0x230>

00000000000051a4 calloc:
    51a4:	de 03 ff 05 	add_i sp, sp, -64
    51a8:	1e f3 00 88 	store_32 s24, 60(sp)
    51ac:	3e e3 00 88 	store_32 s25, 56(sp)
    51b0:	fe d3 00 88 	store_32 ra, 52(sp)
    51b4:	20 83 f0 c0 	move s25, s1
    51b8:	20 00 f0 c0 	move s1, s0
    51bc:	81 01 00 f2 	bz s1, 48 <calloc+0x48>
    51c0:	19 80 00 c0 	or s0, s25, s1
    51c4:	48 00 00 4f 	movehi s2, 8
    51c8:	19 83 70 c0 	mull_i s24, s25, s1
    51cc:	00 00 81 c1 	cmplt_u s0, s0, s2
    51d0:	00 01 00 f4 	bnz s0, 32 <calloc+0x4c>
    51d4:	00 00 fc c0 	move s0, s24
    51d8:	b0 12 00 f8 	call 19136 <__udivsi3>
    51dc:	00 80 0c c1 	cmpeq_i s0, s0, s25
    51e0:	80 00 00 f4 	bnz s0, 16 <calloc+0x4c>
    51e4:	00 ff ff 0f 	move s24, -1
    51e8:	02 00 00 f6 	b 8 <calloc+0x4c>
    51ec:	00 03 00 0f 	move s24, 0
    51f0:	00 00 fc c0 	move s0, s24
    51f4:	82 f5 ff f9 	call -10744 <malloc>
    51f8:	fe d3 00 a8 	load_32 ra, 52(sp)
    51fc:	3e e3 00 a8 	load_32 s25, 56(sp)
    5200:	1e f3 00 a8 	load_32 s24, 60(sp)
    5204:	de 03 01 05 	add_i sp, sp, 64
    5208:	1f 00 00 f0 	ret

000000000000520c realloc:
    520c:	de 03 ff 05 	add_i sp, sp, -64
    5210:	1e f3 00 88 	store_32 s24, 60(sp)
    5214:	3e e3 00 88 	store_32 s25, 56(sp)
    5218:	5e d3 00 88 	store_32 s26, 52(sp)
    521c:	7e c3 00 88 	store_32 s27, 48(sp)
    5220:	fe b3 00 88 	store_32 ra, 44(sp)
    5224:	20 83 f0 c0 	move s25, s1
    5228:	00 03 f0 c0 	move s24, s0
    522c:	58 00 00 f4 	bnz s24, 8 <realloc+0x28>
    5230:	09 00 00 f6 	b 36 <realloc+0x48>
    5234:	19 fc fe 16 	cmpgt_u s0, s25, -65
    5238:	40 03 00 0f 	move s26, 0
    523c:	a0 08 00 f4 	bnz s0, 276 <realloc+0x144>
    5240:	19 2c 00 18 	cmplt_u s0, s25, 11
    5244:	00 01 00 f4 	bnz s0, 32 <realloc+0x58>
    5248:	19 2c 00 05 	add_i s0, s25, 11
    524c:	20 e0 ff 01 	and s1, s0, -8
    5250:	06 00 00 f6 	b 24 <realloc+0x5c>
    5254:	00 80 fc c0 	move s0, s25
    5258:	69 f5 ff f9 	call -10844 <malloc>
    525c:	40 03 f0 c0 	move s26, s0
    5260:	3c 00 00 f6 	b 240 <realloc+0x144>
    5264:	20 40 00 0f 	move s1, 16
    5268:	05 00 00 4f 	movehi s0, 5
    526c:	60 33 45 00 	or s27, s0, 4428
    5270:	1b f0 06 a0 	load_u8 s0, 444(s27)
    5274:	40 08 00 01 	and s2, s0, 2
    5278:	18 e0 ff 05 	add_i s0, s24, -8
    527c:	e2 01 00 f2 	bz s2, 60 <realloc+0xac>
    5280:	5b 00 07 05 	add_i s2, s27, 448
    5284:	60 04 00 0f 	move s3, 1
    5288:	82 00 00 aa 	load_sync s4, (s2)
    528c:	a0 80 f1 c0 	move s5, s3
    5290:	a2 00 00 8a 	store_sync s5, (s2)  
    5294:	a5 ff ff f3 	bz s5, -12 <realloc+0x7c>
    5298:	04 01 00 f2 	bz s4, 32 <realloc+0xac>
    529c:	9b 00 07 a8 	load_32 s4, 448(s27)
    52a0:	e4 ff ff f5 	bnz s4, -4 <realloc+0x90>
    52a4:	82 00 00 aa 	load_sync s4, (s2)
    52a8:	a0 80 f1 c0 	move s5, s3
    52ac:	a2 00 00 8a 	store_sync s5, (s2)  
    52b0:	a5 ff ff f3 	bz s5, -12 <realloc+0x98>
    52b4:	44 ff ff f5 	bnz s4, -24 <realloc+0x90>
    52b8:	2e 00 00 f8 	call 184 <try_realloc_chunk>
    52bc:	3b f0 06 a0 	load_u8 s1, 444(s27)
    52c0:	21 08 00 01 	and s1, s1, 2
    52c4:	e1 00 00 f2 	bz s1, 28 <realloc+0xd4>
    52c8:	3b 00 07 05 	add_i s1, s27, 448
    52cc:	40 00 00 0f 	move s2, 0
    52d0:	61 00 00 aa 	load_sync s3, (s1)
    52d4:	60 00 f1 c0 	move s3, s2
    52d8:	61 00 00 8a 	store_sync s3, (s1)  
    52dc:	a3 ff ff f3 	bz s3, -12 <realloc+0xc4>
    52e0:	60 00 00 f2 	bz s0, 12 <realloc+0xe0>
    52e4:	40 23 00 05 	add_i s26, s0, 8
    52e8:	1a 00 00 f6 	b 104 <realloc+0x144>
    52ec:	00 80 fc c0 	move s0, s25
    52f0:	43 f5 ff f9 	call -10996 <malloc>
    52f4:	60 03 f0 c0 	move s27, s0
    52f8:	db 02 00 f2 	bz s27, 88 <realloc+0x144>
    52fc:	18 f0 ff a9 	load_32 s0, -4(s24)
    5300:	20 0c 00 01 	and s1, s0, 3
    5304:	00 e0 ff 01 	and s0, s0, -8
    5308:	21 00 00 10 	cmpeq_i s1, s1, 0
    530c:	c1 00 00 f4 	bnz s1, 24 <realloc+0x118>
    5310:	20 10 00 0f 	move s1, 4
    5314:	40 80 60 c0 	sub_i s2, s0, s1
    5318:	02 80 8c c1 	cmplt_u s0, s2, s25
    531c:	e0 00 00 f4 	bnz s0, 28 <realloc+0x12c>
    5320:	05 00 00 f6 	b 20 <realloc+0x128>
    5324:	20 20 00 0f 	move s1, 8
    5328:	40 80 60 c0 	sub_i s2, s0, s1
    532c:	02 80 8c c1 	cmplt_u s0, s2, s25
    5330:	40 00 00 f4 	bnz s0, 8 <realloc+0x12c>
    5334:	40 80 fc c0 	move s2, s25
    5338:	00 80 fd c0 	move s0, s27
    533c:	20 00 fc c0 	move s1, s24
    5340:	a9 07 00 f8 	call 7844 <memcpy>
    5344:	00 00 fc c0 	move s0, s24
    5348:	b7 fc ff f9 	call -3364 <free>
    534c:	40 83 fd c0 	move s26, s27
    5350:	00 00 fd c0 	move s0, s26
    5354:	fe b3 00 a8 	load_32 ra, 44(sp)
    5358:	7e c3 00 a8 	load_32 s27, 48(sp)
    535c:	5e d3 00 a8 	load_32 s26, 52(sp)
    5360:	3e e3 00 a8 	load_32 s25, 56(sp)
    5364:	1e f3 00 a8 	load_32 s24, 60(sp)
    5368:	de 03 01 05 	add_i sp, sp, 64
    536c:	1f 00 00 f0 	ret

0000000000005370 try_realloc_chunk:
    5370:	de 03 ff 05 	add_i sp, sp, -64
    5374:	1e f3 00 88 	store_32 s24, 60(sp)
    5378:	fe e3 00 88 	store_32 ra, 56(sp)
    537c:	00 03 f0 c0 	move s24, s0
    5380:	45 00 00 4f 	movehi s2, 5
    5384:	78 10 00 a8 	load_32 s3, 4(s24)
    5388:	42 30 45 00 	or s2, s2, 4428
    538c:	03 0c 00 01 	and s0, s3, 3
    5390:	c2 40 00 a8 	load_32 s6, 16(s2)
    5394:	80 04 00 10 	cmpeq_i s4, s0, 1
    5398:	84 24 00 f4 	bnz s4, 1168 <try_realloc_chunk+0x4b8>
    539c:	86 00 6c c1 	cmpgt_u s4, s6, s24
    53a0:	44 24 00 f4 	bnz s4, 1160 <try_realloc_chunk+0x4b8>
    53a4:	83 e0 ff 01 	and s4, s3, -8
    53a8:	b8 00 52 c0 	add_i s5, s24, s4
    53ac:	e5 00 9c c1 	cmple_u s7, s5, s24
    53b0:	c7 23 00 f4 	bnz s7, 1144 <try_realloc_chunk+0x4b8>
    53b4:	e5 10 00 a8 	load_32 s7, 4(s5)
    53b8:	07 05 00 01 	and s8, s7, 1
    53bc:	68 23 00 f2 	bz s8, 1132 <try_realloc_chunk+0x4b8>
    53c0:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x58>
    53c4:	32 00 00 f6 	b 200 <try_realloc_chunk+0x11c>
    53c8:	04 80 80 c1 	cmplt_u s0, s4, s1
    53cc:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x64>
    53d0:	38 00 00 f6 	b 224 <try_realloc_chunk+0x140>
    53d4:	02 60 00 a8 	load_32 s0, 24(s2)
    53d8:	00 80 12 c1 	cmpne_i s0, s0, s5
    53dc:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x74>
    53e0:	54 00 00 f6 	b 336 <try_realloc_chunk+0x1c0>
    53e4:	02 50 00 a8 	load_32 s0, 20(s2)
    53e8:	00 80 12 c1 	cmpne_i s0, s0, s5
    53ec:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x84>
    53f0:	5f 00 00 f6 	b 380 <try_realloc_chunk+0x1fc>
    53f4:	07 09 00 01 	and s8, s7, 2
    53f8:	00 00 00 0f 	move s0, 0
    53fc:	28 09 00 f4 	bnz s8, 292 <try_realloc_chunk+0x1b0>
    5400:	07 e1 ff 01 	and s8, s7, -8
    5404:	88 00 52 c0 	add_i s4, s8, s4
    5408:	04 81 80 c1 	cmplt_u s8, s4, s1
    540c:	a8 08 00 f4 	bnz s8, 276 <try_realloc_chunk+0x1b0>
    5410:	07 fc 03 16 	cmpgt_u s0, s7, 255
    5414:	40 10 00 f4 	bnz s0, 520 <try_realloc_chunk+0x2ac>
    5418:	07 0d 00 0a 	shr s8, s7, 3
    541c:	05 20 00 a8 	load_32 s0, 8(s5)
    5420:	e8 0c 00 0b 	shl s7, s8, 3
    5424:	e2 80 53 c0 	add_i s7, s2, s7
    5428:	27 a1 00 05 	add_i s9, s7, 40
    542c:	e5 30 00 a8 	load_32 s7, 12(s5)
    5430:	40 81 04 c1 	cmpeq_i s10, s0, s9
    5434:	ca 00 00 f4 	bnz s10, 24 <try_realloc_chunk+0xdc>
    5438:	46 01 60 c1 	cmpgt_u s10, s6, s0
    543c:	6a 1f 00 f4 	bnz s10, 1004 <try_realloc_chunk+0x4b8>
    5440:	40 31 00 a8 	load_32 s10, 12(s0)
    5444:	4a 81 12 c1 	cmpne_i s10, s10, s5
    5448:	0a 1f 00 f4 	bnz s10, 992 <try_realloc_chunk+0x4b8>
    544c:	47 01 10 c1 	cmpne_i s10, s7, s0
    5450:	4a 00 00 f4 	bnz s10, 8 <try_realloc_chunk+0xe8>
    5454:	83 00 00 f6 	b 524 <try_realloc_chunk+0x2f0>
    5458:	47 80 04 c1 	cmpeq_i s2, s7, s9
    545c:	c2 00 00 f4 	bnz s2, 24 <try_realloc_chunk+0x104>
    5460:	46 80 63 c1 	cmpgt_u s2, s6, s7
    5464:	22 1e 00 f4 	bnz s2, 964 <try_realloc_chunk+0x4b8>
    5468:	47 20 00 a8 	load_32 s2, 8(s7)
    546c:	42 80 12 c1 	cmpne_i s2, s2, s5
    5470:	c2 1d 00 f4 	bnz s2, 952 <try_realloc_chunk+0x4b8>
    5474:	e0 30 00 88 	store_32 s7, 12(s0)
    5478:	07 20 00 88 	store_32 s0, 8(s7)
    547c:	44 80 60 c0 	sub_i s2, s4, s1
    5480:	02 3c 00 16 	cmpgt_u s0, s2, 15
    5484:	40 1b 00 f4 	bnz s0, 872 <try_realloc_chunk+0x47c>
    5488:	cc 00 00 f6 	b 816 <try_realloc_chunk+0x448>
    548c:	01 00 04 18 	cmplt_u s0, s1, 256
    5490:	40 00 00 0f 	move s2, 0
    5494:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x12c>
    5498:	16 00 00 f6 	b 88 <try_realloc_chunk+0x180>
    549c:	00 00 f1 c0 	move s0, s2
    54a0:	fe e3 00 a8 	load_32 ra, 56(sp)
    54a4:	1e f3 00 a8 	load_32 s24, 60(sp)
    54a8:	de 03 01 05 	add_i sp, sp, 64
    54ac:	1f 00 00 f0 	ret
    54b0:	44 80 60 c0 	sub_i s2, s4, s1
    54b4:	02 40 00 18 	cmplt_u s0, s2, 16
    54b8:	00 19 00 f4 	bnz s0, 800 <try_realloc_chunk+0x468>
    54bc:	03 04 00 01 	and s0, s3, 1
    54c0:	60 80 00 c0 	or s3, s0, s1
    54c4:	18 80 50 c0 	add_i s0, s24, s1
    54c8:	23 08 00 00 	or s1, s3, 2
    54cc:	38 10 00 88 	store_32 s1, 4(s24)
    54d0:	22 0c 00 00 	or s1, s2, 3
    54d4:	20 10 00 88 	store_32 s1, 4(s0)
    54d8:	25 10 00 a8 	load_32 s1, 4(s5)
    54dc:	21 04 00 00 	or s1, s1, 1
    54e0:	25 10 00 88 	store_32 s1, 4(s5)
    54e4:	20 00 f1 c0 	move s1, s2
    54e8:	07 05 00 f8 	call 5148 <dispose_chunk>
    54ec:	bb 00 00 f6 	b 748 <try_realloc_chunk+0x468>
    54f0:	01 10 00 05 	add_i s0, s1, 4
    54f4:	04 00 80 c1 	cmplt_u s0, s4, s0
    54f8:	20 01 00 f4 	bnz s0, 36 <try_realloc_chunk+0x1ac>
    54fc:	05 00 00 4f 	movehi s0, 5
    5500:	24 80 60 c0 	sub_i s1, s4, s1
    5504:	00 d0 44 00 	or s0, s0, 4404
    5508:	00 20 00 a8 	load_32 s0, 8(s0)
    550c:	00 04 00 0b 	shl s0, s0, 1
    5510:	21 00 90 c1 	cmple_u s1, s1, s0
    5514:	00 00 fc c0 	move s0, s24
    5518:	41 00 00 f4 	bnz s1, 8 <try_realloc_chunk+0x1b0>
    551c:	00 00 f1 c0 	move s0, s2
    5520:	fe e3 00 a8 	load_32 ra, 56(sp)
    5524:	1e f3 00 a8 	load_32 s24, 60(sp)
    5528:	de 03 01 05 	add_i sp, sp, 64
    552c:	1f 00 00 f0 	ret
    5530:	02 30 00 a8 	load_32 s0, 12(s2)
    5534:	00 00 52 c0 	add_i s0, s0, s4
    5538:	80 80 90 c1 	cmple_u s4, s0, s1
    553c:	c4 02 00 f4 	bnz s4, 88 <try_realloc_chunk+0x224>
    5540:	63 04 00 01 	and s3, s3, 1
    5544:	00 80 60 c0 	sub_i s0, s0, s1
    5548:	63 80 00 c0 	or s3, s3, s1
    554c:	38 80 50 c0 	add_i s1, s24, s1
    5550:	63 08 00 00 	or s3, s3, 2
    5554:	78 10 00 88 	store_32 s3, 4(s24)
    5558:	60 04 00 00 	or s3, s0, 1
    555c:	61 10 00 88 	store_32 s3, 4(s1)
    5560:	22 60 00 88 	store_32 s1, 24(s2)
    5564:	02 30 00 88 	store_32 s0, 12(s2)
    5568:	9c 00 00 f6 	b 624 <try_realloc_chunk+0x468>
    556c:	02 20 00 a8 	load_32 s0, 8(s2)
    5570:	80 00 52 c0 	add_i s4, s0, s4
    5574:	04 80 80 c1 	cmplt_u s0, s4, s1
    5578:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x210>
    557c:	0b 00 00 f6 	b 44 <try_realloc_chunk+0x238>
    5580:	00 00 00 0f 	move s0, 0
    5584:	fe e3 00 a8 	load_32 ra, 56(sp)
    5588:	1e f3 00 a8 	load_32 s24, 60(sp)
    558c:	de 03 01 05 	add_i sp, sp, 64
    5590:	1f 00 00 f0 	ret
    5594:	00 00 00 0f 	move s0, 0
    5598:	fe e3 00 a8 	load_32 ra, 56(sp)
    559c:	1e f3 00 a8 	load_32 s24, 60(sp)
    55a0:	de 03 01 05 	add_i sp, sp, 64
    55a4:	1f 00 00 f0 	ret
    55a8:	04 80 60 c0 	sub_i s0, s4, s1
    55ac:	a0 40 00 18 	cmplt_u s5, s0, 16
    55b0:	c5 01 00 f4 	bnz s5, 56 <try_realloc_chunk+0x278>
    55b4:	63 04 00 01 	and s3, s3, 1
    55b8:	98 00 52 c0 	add_i s4, s24, s4
    55bc:	63 80 00 c0 	or s3, s3, s1
    55c0:	38 80 50 c0 	add_i s1, s24, s1
    55c4:	63 08 00 00 	or s3, s3, 2
    55c8:	78 10 00 88 	store_32 s3, 4(s24)
    55cc:	60 04 00 00 	or s3, s0, 1
    55d0:	61 10 00 88 	store_32 s3, 4(s1)
    55d4:	04 00 00 88 	store_32 s0, (s4)
    55d8:	64 10 00 a8 	load_32 s3, 4(s4)
    55dc:	63 f8 ff 01 	and s3, s3, -2
    55e0:	64 10 00 88 	store_32 s3, 4(s4)
    55e4:	0b 00 00 f6 	b 44 <try_realloc_chunk+0x2a0>
    55e8:	03 04 00 01 	and s0, s3, 1
    55ec:	38 00 52 c0 	add_i s1, s24, s4
    55f0:	00 00 02 c0 	or s0, s0, s4
    55f4:	00 08 00 00 	or s0, s0, 2
    55f8:	18 10 00 88 	store_32 s0, 4(s24)
    55fc:	01 10 00 a8 	load_32 s0, 4(s1)
    5600:	60 04 00 00 	or s3, s0, 1
    5604:	61 10 00 88 	store_32 s3, 4(s1)
    5608:	00 00 00 0f 	move s0, 0
    560c:	20 00 f0 c0 	move s1, s0
    5610:	02 20 00 88 	store_32 s0, 8(s2)
    5614:	22 50 00 88 	store_32 s1, 20(s2)
    5618:	70 00 00 f6 	b 448 <try_realloc_chunk+0x468>
    561c:	05 60 00 a8 	load_32 s0, 24(s5)
    5620:	e5 30 00 a8 	load_32 s7, 12(s5)
    5624:	07 81 02 c1 	cmpeq_i s8, s7, s5
    5628:	08 03 00 f4 	bnz s8, 96 <try_realloc_chunk+0x318>
    562c:	05 21 00 a8 	load_32 s8, 8(s5)
    5630:	c6 00 64 c1 	cmpgt_u s6, s6, s8
    5634:	a6 0f 00 f4 	bnz s6, 500 <try_realloc_chunk+0x4b8>
    5638:	c8 30 00 a8 	load_32 s6, 12(s8)
    563c:	c6 80 12 c1 	cmpne_i s6, s6, s5
    5640:	46 0f 00 f4 	bnz s6, 488 <try_realloc_chunk+0x4b8>
    5644:	c7 20 00 a8 	load_32 s6, 8(s7)
    5648:	c6 80 12 c1 	cmpne_i s6, s6, s5
    564c:	e6 0e 00 f4 	bnz s6, 476 <try_realloc_chunk+0x4b8>
    5650:	e8 30 00 88 	store_32 s7, 12(s8)
    5654:	07 21 00 88 	store_32 s8, 8(s7)
    5658:	a0 0a 00 f2 	bz s0, 340 <try_realloc_chunk+0x43c>
    565c:	20 00 00 f6 	b 128 <try_realloc_chunk+0x36c>
    5660:	00 04 00 0f 	move s0, 1
    5664:	a2 00 00 a8 	load_32 s5, (s2)
    5668:	00 00 b4 c0 	shl s0, s0, s8
    566c:	00 fc ff 03 	xor s0, s0, -1
    5670:	05 00 10 c0 	and s0, s5, s0
    5674:	02 00 00 88 	store_32 s0, (s2)
    5678:	44 80 60 c0 	sub_i s2, s4, s1
    567c:	02 3c 00 16 	cmpgt_u s0, s2, 15
    5680:	60 0b 00 f4 	bnz s0, 364 <try_realloc_chunk+0x47c>
    5684:	4d 00 00 f6 	b 308 <try_realloc_chunk+0x448>
    5688:	25 51 00 a8 	load_32 s9, 20(s5)
    568c:	49 00 00 f4 	bnz s9, 8 <try_realloc_chunk+0x324>
    5690:	03 00 00 f6 	b 12 <try_realloc_chunk+0x32c>
    5694:	05 51 00 05 	add_i s8, s5, 20
    5698:	04 00 00 f6 	b 16 <try_realloc_chunk+0x338>
    569c:	05 41 00 05 	add_i s8, s5, 16
    56a0:	28 01 00 a8 	load_32 s9, (s8)
    56a4:	c9 0b 00 f2 	bz s9, 376 <try_realloc_chunk+0x4ac>
    56a8:	e0 80 f4 c0 	move s7, s9
    56ac:	27 51 00 a8 	load_32 s9, 20(s7)
    56b0:	40 01 f4 c0 	move s10, s8
    56b4:	07 51 00 05 	add_i s8, s7, 20
    56b8:	89 ff ff f5 	bnz s9, -16 <try_realloc_chunk+0x338>
    56bc:	27 41 00 a8 	load_32 s9, 16(s7)
    56c0:	07 41 00 05 	add_i s8, s7, 16
    56c4:	29 ff ff f5 	bnz s9, -28 <try_realloc_chunk+0x338>
    56c8:	c6 00 65 c1 	cmpgt_u s6, s6, s10
    56cc:	e6 0a 00 f4 	bnz s6, 348 <try_realloc_chunk+0x4b8>
    56d0:	c0 00 00 0f 	move s6, 0
    56d4:	ca 00 00 88 	store_32 s6, (s10)
    56d8:	a0 06 00 f2 	bz s0, 212 <try_realloc_chunk+0x43c>
    56dc:	c5 70 00 a8 	load_32 s6, 28(s5)
    56e0:	06 09 00 0b 	shl s8, s6, 2
    56e4:	02 01 54 c0 	add_i s8, s2, s8
    56e8:	28 c1 04 a8 	load_32 s9, 304(s8)
    56ec:	29 81 12 c1 	cmpne_i s9, s9, s5
    56f0:	49 00 00 f4 	bnz s9, 8 <try_realloc_chunk+0x388>
    56f4:	0c 00 00 f6 	b 48 <try_realloc_chunk+0x3b4>
    56f8:	c2 40 00 a8 	load_32 s6, 16(s2)
    56fc:	c6 00 60 c1 	cmpgt_u s6, s6, s0
    5700:	46 09 00 f4 	bnz s6, 296 <try_realloc_chunk+0x4b8>
    5704:	c0 40 00 a8 	load_32 s6, 16(s0)
    5708:	c6 80 02 c1 	cmpeq_i s6, s6, s5
    570c:	66 02 00 f4 	bnz s6, 76 <try_realloc_chunk+0x3e8>
    5710:	c0 50 00 0f 	move s6, 20
    5714:	c0 00 53 c0 	add_i s6, s0, s6
    5718:	e6 00 00 88 	store_32 s7, (s6)
    571c:	87 04 00 f2 	bz s7, 144 <try_realloc_chunk+0x43c>
    5720:	12 00 00 f6 	b 72 <try_realloc_chunk+0x3f8>
    5724:	08 c1 04 05 	add_i s8, s8, 304
    5728:	e8 00 00 88 	store_32 s7, (s8)
    572c:	e7 01 00 f4 	bnz s7, 60 <try_realloc_chunk+0x3f8>
    5730:	00 04 00 0f 	move s0, 1
    5734:	a2 10 00 a8 	load_32 s5, 4(s2)
    5738:	00 00 b3 c0 	shl s0, s0, s6
    573c:	00 fc ff 03 	xor s0, s0, -1
    5740:	05 00 10 c0 	and s0, s5, s0
    5744:	02 10 00 88 	store_32 s0, 4(s2)
    5748:	44 80 60 c0 	sub_i s2, s4, s1
    574c:	02 3c 00 16 	cmpgt_u s0, s2, 15
    5750:	e0 04 00 f4 	bnz s0, 156 <try_realloc_chunk+0x47c>
    5754:	19 00 00 f6 	b 100 <try_realloc_chunk+0x448>
    5758:	c0 40 00 0f 	move s6, 16
    575c:	c0 00 53 c0 	add_i s6, s0, s6
    5760:	e6 00 00 88 	store_32 s7, (s6)
    5764:	47 02 00 f2 	bz s7, 72 <try_realloc_chunk+0x43c>
    5768:	c2 40 00 a8 	load_32 s6, 16(s2)
    576c:	06 81 63 c1 	cmpgt_u s8, s6, s7
    5770:	c8 05 00 f4 	bnz s8, 184 <try_realloc_chunk+0x4b8>
    5774:	07 60 00 88 	store_32 s0, 24(s7)
    5778:	05 40 00 a8 	load_32 s0, 16(s5)
    577c:	a0 00 00 f2 	bz s0, 20 <try_realloc_chunk+0x420>
    5780:	c6 00 60 c1 	cmpgt_u s6, s6, s0
    5784:	26 05 00 f4 	bnz s6, 164 <try_realloc_chunk+0x4b8>
    5788:	07 40 00 88 	store_32 s0, 16(s7)
    578c:	e0 60 00 88 	store_32 s7, 24(s0)
    5790:	05 50 00 a8 	load_32 s0, 20(s5)
    5794:	c0 00 00 f2 	bz s0, 24 <try_realloc_chunk+0x43c>
    5798:	42 40 00 a8 	load_32 s2, 16(s2)
    579c:	42 00 60 c1 	cmpgt_u s2, s2, s0
    57a0:	42 04 00 f4 	bnz s2, 136 <try_realloc_chunk+0x4b8>
    57a4:	07 50 00 88 	store_32 s0, 20(s7)
    57a8:	e0 60 00 88 	store_32 s7, 24(s0)
    57ac:	44 80 60 c0 	sub_i s2, s4, s1
    57b0:	02 3c 00 16 	cmpgt_u s0, s2, 15
    57b4:	c0 01 00 f4 	bnz s0, 56 <try_realloc_chunk+0x47c>
    57b8:	03 04 00 01 	and s0, s3, 1
    57bc:	38 00 52 c0 	add_i s1, s24, s4
    57c0:	00 00 02 c0 	or s0, s0, s4
    57c4:	00 08 00 00 	or s0, s0, 2
    57c8:	18 10 00 88 	store_32 s0, 4(s24)
    57cc:	01 10 00 a8 	load_32 s0, 4(s1)
    57d0:	00 04 00 00 	or s0, s0, 1
    57d4:	01 10 00 88 	store_32 s0, 4(s1)
    57d8:	00 00 fc c0 	move s0, s24
    57dc:	fe e3 00 a8 	load_32 ra, 56(sp)
    57e0:	1e f3 00 a8 	load_32 s24, 60(sp)
    57e4:	de 03 01 05 	add_i sp, sp, 64
    57e8:	1f 00 00 f0 	ret
    57ec:	03 04 00 01 	and s0, s3, 1
    57f0:	60 80 00 c0 	or s3, s0, s1
    57f4:	18 80 50 c0 	add_i s0, s24, s1
    57f8:	23 08 00 00 	or s1, s3, 2
    57fc:	38 10 00 88 	store_32 s1, 4(s24)
    5800:	38 00 52 c0 	add_i s1, s24, s4
    5804:	62 0c 00 00 	or s3, s2, 3
    5808:	60 10 00 88 	store_32 s3, 4(s0)
    580c:	61 10 00 a8 	load_32 s3, 4(s1)
    5810:	63 04 00 00 	or s3, s3, 1
    5814:	61 10 00 88 	store_32 s3, 4(s1)
    5818:	33 ff ff f7 	b -820 <try_realloc_chunk+0x174>
    581c:	e0 00 00 0f 	move s7, 0
    5820:	60 fc ff f3 	bz s0, -116 <try_realloc_chunk+0x43c>
    5824:	ae ff ff f7 	b -328 <try_realloc_chunk+0x36c>
    5828:	0e 06 00 f8 	call 6200 <abort>

000000000000582c realloc_in_place:
    582c:	de 03 ff 05 	add_i sp, sp, -64
    5830:	1e f3 00 88 	store_32 s24, 60(sp)
    5834:	3e e3 00 88 	store_32 s25, 56(sp)
    5838:	5e d3 00 88 	store_32 s26, 52(sp)
    583c:	fe c3 00 88 	store_32 ra, 48(sp)
    5840:	00 03 f0 c0 	move s24, s0
    5844:	00 00 00 0f 	move s0, 0
    5848:	98 05 00 f2 	bz s24, 176 <realloc_in_place+0xcc>
    584c:	41 fc fe 16 	cmpgt_u s2, s1, -65
    5850:	42 05 00 f4 	bnz s2, 168 <realloc_in_place+0xcc>
    5854:	01 2c 00 18 	cmplt_u s0, s1, 11
    5858:	80 00 00 f4 	bnz s0, 16 <realloc_in_place+0x3c>
    585c:	01 2c 00 05 	add_i s0, s1, 11
    5860:	20 e0 ff 01 	and s1, s0, -8
    5864:	02 00 00 f6 	b 8 <realloc_in_place+0x40>
    5868:	20 40 00 0f 	move s1, 16
    586c:	05 00 00 4f 	movehi s0, 5
    5870:	38 e3 ff 05 	add_i s25, s24, -8
    5874:	40 33 45 00 	or s26, s0, 4428
    5878:	1a f0 06 a0 	load_u8 s0, 444(s26)
    587c:	00 08 00 01 	and s0, s0, 2
    5880:	e0 01 00 f2 	bz s0, 60 <realloc_in_place+0x90>
    5884:	1a 00 07 05 	add_i s0, s26, 448
    5888:	40 04 00 0f 	move s2, 1
    588c:	60 00 00 aa 	load_sync s3, (s0)
    5890:	80 00 f1 c0 	move s4, s2
    5894:	80 00 00 8a 	store_sync s4, (s0)  
    5898:	a4 ff ff f3 	bz s4, -12 <realloc_in_place+0x60>
    589c:	03 01 00 f2 	bz s3, 32 <realloc_in_place+0x90>
    58a0:	7a 00 07 a8 	load_32 s3, 448(s26)
    58a4:	e3 ff ff f5 	bnz s3, -4 <realloc_in_place+0x74>
    58a8:	60 00 00 aa 	load_sync s3, (s0)
    58ac:	80 00 f1 c0 	move s4, s2
    58b0:	80 00 00 8a 	store_sync s4, (s0)  
    58b4:	a4 ff ff f3 	bz s4, -12 <realloc_in_place+0x7c>
    58b8:	43 ff ff f5 	bnz s3, -24 <realloc_in_place+0x74>
    58bc:	00 80 fc c0 	move s0, s25
    58c0:	ac fe ff f9 	call -1360 <try_realloc_chunk>
    58c4:	3a f0 06 a0 	load_u8 s1, 444(s26)
    58c8:	21 08 00 01 	and s1, s1, 2
    58cc:	e1 00 00 f2 	bz s1, 28 <realloc_in_place+0xbc>
    58d0:	3a 00 07 05 	add_i s1, s26, 448
    58d4:	40 00 00 0f 	move s2, 0
    58d8:	61 00 00 aa 	load_sync s3, (s1)
    58dc:	60 00 f1 c0 	move s3, s2
    58e0:	61 00 00 8a 	store_sync s3, (s1)  
    58e4:	a3 ff ff f3 	bz s3, -12 <realloc_in_place+0xac>
    58e8:	00 80 0c c1 	cmpeq_i s0, s0, s25
    58ec:	40 00 00 f4 	bnz s0, 8 <realloc_in_place+0xc8>
    58f0:	00 03 00 0f 	move s24, 0
    58f4:	00 00 fc c0 	move s0, s24
    58f8:	fe c3 00 a8 	load_32 ra, 48(sp)
    58fc:	5e d3 00 a8 	load_32 s26, 52(sp)
    5900:	3e e3 00 a8 	load_32 s25, 56(sp)
    5904:	1e f3 00 a8 	load_32 s24, 60(sp)
    5908:	de 03 01 05 	add_i sp, sp, 64
    590c:	1f 00 00 f0 	ret

0000000000005910 memalign:
    5910:	de 03 ff 05 	add_i sp, sp, -64
    5914:	fe f3 00 88 	store_32 ra, 60(sp)
    5918:	40 20 00 16 	cmpgt_u s2, s0, 8
    591c:	c2 00 00 f4 	bnz s2, 24 <memalign+0x24>
    5920:	00 80 f0 c0 	move s0, s1
    5924:	b6 f3 ff f9 	call -12584 <malloc>
    5928:	fe f3 00 a8 	load_32 ra, 60(sp)
    592c:	de 03 01 05 	add_i sp, sp, 64
    5930:	1f 00 00 f0 	ret
    5934:	04 00 00 f8 	call 16 <internal_memalign>
    5938:	fe f3 00 a8 	load_32 ra, 60(sp)
    593c:	de 03 01 05 	add_i sp, sp, 64
    5940:	1f 00 00 f0 	ret

0000000000005944 internal_memalign:
    5944:	de 03 ff 05 	add_i sp, sp, -64
    5948:	1e f3 00 88 	store_32 s24, 60(sp)
    594c:	3e e3 00 88 	store_32 s25, 56(sp)
    5950:	5e d3 00 88 	store_32 s26, 52(sp)
    5954:	7e c3 00 88 	store_32 s27, 48(sp)
    5958:	fe b3 00 88 	store_32 ra, 44(sp)
    595c:	40 40 00 16 	cmpgt_u s2, s0, 16
    5960:	42 00 00 f4 	bnz s2, 8 <internal_memalign+0x24>
    5964:	00 40 00 0f 	move s0, 16
    5968:	40 fc ff 05 	add_i s2, s0, -1
    596c:	42 00 10 c0 	and s2, s2, s0
    5970:	e2 00 00 f2 	bz s2, 28 <internal_memalign+0x48>
    5974:	40 40 00 0f 	move s2, 16
    5978:	60 03 f1 c0 	move s27, s2
    597c:	7b 00 80 c1 	cmplt_u s3, s27, s0
    5980:	5b 04 00 0b 	shl s2, s27, 1
    5984:	a3 ff ff f5 	bnz s3, -12 <internal_memalign+0x34>
    5988:	02 00 00 f6 	b 8 <internal_memalign+0x4c>
    598c:	60 03 f0 c0 	move s27, s0
    5990:	00 00 ff 0f 	move s0, -64
    5994:	00 03 00 0f 	move s24, 0
    5998:	00 80 6d c0 	sub_i s0, s0, s27
    599c:	00 80 90 c1 	cmple_u s0, s0, s1
    59a0:	20 0e 00 f4 	bnz s0, 452 <internal_memalign+0x220>
    59a4:	01 2c 00 18 	cmplt_u s0, s1, 11
    59a8:	00 01 00 f4 	bnz s0, 32 <internal_memalign+0x84>
    59ac:	01 2c 00 05 	add_i s0, s1, 11
    59b0:	20 e3 ff 01 	and s25, s0, -8
    59b4:	19 80 5d c0 	add_i s0, s25, s27
    59b8:	00 30 00 05 	add_i s0, s0, 12
    59bc:	90 f3 ff f9 	call -12736 <malloc>
    59c0:	20 0d 00 f2 	bz s0, 420 <internal_memalign+0x220>
    59c4:	06 00 00 f6 	b 24 <internal_memalign+0x98>
    59c8:	20 43 00 0f 	move s25, 16
    59cc:	19 80 5d c0 	add_i s0, s25, s27
    59d0:	00 30 00 05 	add_i s0, s0, 12
    59d4:	8a f3 ff f9 	call -12760 <malloc>
    59d8:	60 0c 00 f2 	bz s0, 396 <internal_memalign+0x220>
    59dc:	25 00 00 4f 	movehi s1, 5
    59e0:	3e a3 00 88 	store_32 s25, 40(sp)
    59e4:	21 33 45 00 	or s25, s1, 4428
    59e8:	39 f0 06 a0 	load_u8 s1, 444(s25)
    59ec:	21 08 00 01 	and s1, s1, 2
    59f0:	e1 01 00 f2 	bz s1, 60 <internal_memalign+0xe8>
    59f4:	39 00 07 05 	add_i s1, s25, 448
    59f8:	40 04 00 0f 	move s2, 1
    59fc:	61 00 00 aa 	load_sync s3, (s1)
    5a00:	80 00 f1 c0 	move s4, s2
    5a04:	81 00 00 8a 	store_sync s4, (s1)  
    5a08:	a4 ff ff f3 	bz s4, -12 <internal_memalign+0xb8>
    5a0c:	03 01 00 f2 	bz s3, 32 <internal_memalign+0xe8>
    5a10:	79 00 07 a8 	load_32 s3, 448(s25)
    5a14:	e3 ff ff f5 	bnz s3, -4 <internal_memalign+0xcc>
    5a18:	61 00 00 aa 	load_sync s3, (s1)
    5a1c:	80 00 f1 c0 	move s4, s2
    5a20:	81 00 00 8a 	store_sync s4, (s1)  
    5a24:	a4 ff ff f3 	bz s4, -12 <internal_memalign+0xd4>
    5a28:	43 ff ff f5 	bnz s3, -24 <internal_memalign+0xcc>
    5a2c:	3b fc ff 05 	add_i s1, s27, -1
    5a30:	40 e3 ff 05 	add_i s26, s0, -8
    5a34:	21 00 10 c0 	and s1, s1, s0
    5a38:	61 05 00 f2 	bz s1, 172 <internal_memalign+0x1a0>
    5a3c:	20 80 5d c0 	add_i s1, s0, s27
    5a40:	40 00 00 0f 	move s2, 0
    5a44:	21 fc ff 05 	add_i s1, s1, -1
    5a48:	42 80 6d c0 	sub_i s2, s2, s27
    5a4c:	21 00 11 c0 	and s1, s1, s2
    5a50:	01 e3 ff 05 	add_i s24, s1, -8
    5a54:	38 00 6d c0 	sub_i s1, s24, s26
    5a58:	21 3c 00 16 	cmpgt_u s1, s1, 15
    5a5c:	41 00 00 f4 	bnz s1, 8 <internal_memalign+0x120>
    5a60:	18 83 5d c0 	add_i s24, s24, s27
    5a64:	40 f0 ff a9 	load_32 s2, -4(s0)
    5a68:	38 00 6d c0 	sub_i s1, s24, s26
    5a6c:	62 e0 ff 01 	and s3, s2, -8
    5a70:	82 0c 00 01 	and s4, s2, 3
    5a74:	43 80 60 c0 	sub_i s2, s3, s1
    5a78:	44 00 00 f4 	bnz s4, 8 <internal_memalign+0x13c>
    5a7c:	15 00 00 f6 	b 84 <internal_memalign+0x18c>
    5a80:	78 10 00 a8 	load_32 s3, 4(s24)
    5a84:	63 04 00 01 	and s3, s3, 1
    5a88:	62 80 01 c0 	or s3, s2, s3
    5a8c:	58 00 51 c0 	add_i s2, s24, s2
    5a90:	63 08 00 00 	or s3, s3, 2
    5a94:	78 10 00 88 	store_32 s3, 4(s24)
    5a98:	62 10 00 a8 	load_32 s3, 4(s2)
    5a9c:	63 04 00 00 	or s3, s3, 1
    5aa0:	62 10 00 88 	store_32 s3, 4(s2)
    5aa4:	40 f0 ff a9 	load_32 s2, -4(s0)
    5aa8:	42 04 00 01 	and s2, s2, 1
    5aac:	41 00 01 c0 	or s2, s1, s2
    5ab0:	42 08 00 00 	or s2, s2, 2
    5ab4:	40 f0 ff 89 	store_32 s2, -4(s0)
    5ab8:	18 10 00 a8 	load_32 s0, 4(s24)
    5abc:	00 04 00 00 	or s0, s0, 1
    5ac0:	18 10 00 88 	store_32 s0, 4(s24)
    5ac4:	00 00 fd c0 	move s0, s26
    5ac8:	8f 03 00 f8 	call 3644 <dispose_chunk>
    5acc:	05 00 00 f6 	b 20 <internal_memalign+0x19c>
    5ad0:	1a 00 00 a8 	load_32 s0, (s26)
    5ad4:	00 80 50 c0 	add_i s0, s0, s1
    5ad8:	18 00 00 88 	store_32 s0, (s24)
    5adc:	58 10 00 88 	store_32 s2, 4(s24)
    5ae0:	40 03 fc c0 	move s26, s24
    5ae4:	1a 10 00 a8 	load_32 s0, 4(s26)
    5ae8:	20 0c 00 01 	and s1, s0, 3
    5aec:	81 02 00 f2 	bz s1, 80 <internal_memalign+0x1f8>
    5af0:	3e a0 00 a8 	load_32 s1, 40(sp)
    5af4:	40 e0 ff 01 	and s2, s0, -8
    5af8:	21 40 00 05 	add_i s1, s1, 16
    5afc:	22 80 90 c1 	cmple_u s1, s2, s1
    5b00:	e1 01 00 f4 	bnz s1, 60 <internal_memalign+0x1f8>
    5b04:	9e a0 00 a8 	load_32 s4, 40(sp)
    5b08:	00 04 00 01 	and s0, s0, 1
    5b0c:	64 00 00 c0 	or s3, s4, s0
    5b10:	22 00 62 c0 	sub_i s1, s2, s4
    5b14:	1a 00 52 c0 	add_i s0, s26, s4
    5b18:	5a 00 51 c0 	add_i s2, s26, s2
    5b1c:	63 08 00 00 	or s3, s3, 2
    5b20:	7a 10 00 88 	store_32 s3, 4(s26)
    5b24:	61 0c 00 00 	or s3, s1, 3
    5b28:	60 10 00 88 	store_32 s3, 4(s0)
    5b2c:	62 10 00 a8 	load_32 s3, 4(s2)
    5b30:	63 04 00 00 	or s3, s3, 1
    5b34:	62 10 00 88 	store_32 s3, 4(s2)
    5b38:	73 03 00 f8 	call 3532 <dispose_chunk>
    5b3c:	19 f0 06 a0 	load_u8 s0, 444(s25)
    5b40:	1a 23 00 05 	add_i s24, s26, 8
    5b44:	00 08 00 01 	and s0, s0, 2
    5b48:	e0 00 00 f2 	bz s0, 28 <internal_memalign+0x220>
    5b4c:	19 00 07 05 	add_i s0, s25, 448
    5b50:	20 00 00 0f 	move s1, 0
    5b54:	40 00 00 aa 	load_sync s2, (s0)
    5b58:	40 80 f0 c0 	move s2, s1
    5b5c:	40 00 00 8a 	store_sync s2, (s0)  
    5b60:	a2 ff ff f3 	bz s2, -12 <internal_memalign+0x210>
    5b64:	00 00 fc c0 	move s0, s24
    5b68:	fe b3 00 a8 	load_32 ra, 44(sp)
    5b6c:	7e c3 00 a8 	load_32 s27, 48(sp)
    5b70:	5e d3 00 a8 	load_32 s26, 52(sp)
    5b74:	3e e3 00 a8 	load_32 s25, 56(sp)
    5b78:	1e f3 00 a8 	load_32 s24, 60(sp)
    5b7c:	de 03 01 05 	add_i sp, sp, 64
    5b80:	1f 00 00 f0 	ret

0000000000005b84 posix_memalign:
    5b84:	de 03 ff 05 	add_i sp, sp, -64
    5b88:	1e f3 00 88 	store_32 s24, 60(sp)
    5b8c:	fe e3 00 88 	store_32 ra, 56(sp)
    5b90:	61 20 00 11 	cmpne_i s3, s1, 8
    5b94:	00 03 f0 c0 	move s24, s0
    5b98:	43 01 00 f4 	bnz s3, 40 <posix_memalign+0x3c>
    5b9c:	00 00 f1 c0 	move s0, s2
    5ba0:	17 f3 ff f9 	call -13220 <malloc>
    5ba4:	c0 04 00 f2 	bz s0, 152 <posix_memalign+0xb8>
    5ba8:	18 00 00 88 	store_32 s0, (s24)
    5bac:	00 00 00 0f 	move s0, 0
    5bb0:	fe e3 00 a8 	load_32 ra, 56(sp)
    5bb4:	1e f3 00 a8 	load_32 s24, 60(sp)
    5bb8:	de 03 01 05 	add_i sp, sp, 64
    5bbc:	1f 00 00 f0 	ret
    5bc0:	61 0c 00 01 	and s3, s1, 3
    5bc4:	00 58 00 0f 	move s0, 22
    5bc8:	e3 00 00 f4 	bnz s3, 28 <posix_memalign+0x60>
    5bcc:	61 08 00 0a 	shr s3, s1, 2
    5bd0:	a3 00 00 f2 	bz s3, 20 <posix_memalign+0x60>
    5bd4:	83 fc ff 05 	add_i s4, s3, -1
    5bd8:	64 80 11 c0 	and s3, s4, s3
    5bdc:	43 00 00 f4 	bnz s3, 8 <posix_memalign+0x60>
    5be0:	05 00 00 f6 	b 20 <posix_memalign+0x70>
    5be4:	fe e3 00 a8 	load_32 ra, 56(sp)
    5be8:	1e f3 00 a8 	load_32 s24, 60(sp)
    5bec:	de 03 01 05 	add_i sp, sp, 64
    5bf0:	1f 00 00 f0 	ret
    5bf4:	00 00 ff 0f 	move s0, -64
    5bf8:	00 80 60 c0 	sub_i s0, s0, s1
    5bfc:	00 00 81 c1 	cmplt_u s0, s0, s2
    5c00:	40 00 00 f4 	bnz s0, 8 <posix_memalign+0x84>
    5c04:	06 00 00 f6 	b 24 <posix_memalign+0x98>
    5c08:	00 30 00 0f 	move s0, 12
    5c0c:	fe e3 00 a8 	load_32 ra, 56(sp)
    5c10:	1e f3 00 a8 	load_32 s24, 60(sp)
    5c14:	de 03 01 05 	add_i sp, sp, 64
    5c18:	1f 00 00 f0 	ret
    5c1c:	01 40 00 16 	cmpgt_u s0, s1, 16
    5c20:	40 00 00 f4 	bnz s0, 8 <posix_memalign+0xa4>
    5c24:	20 40 00 0f 	move s1, 16
    5c28:	00 80 f0 c0 	move s0, s1
    5c2c:	20 00 f1 c0 	move s1, s2
    5c30:	45 ff ff f9 	call -748 <internal_memalign>
    5c34:	40 00 00 f2 	bz s0, 8 <posix_memalign+0xb8>
    5c38:	dc ff ff f7 	b -144 <posix_memalign+0x24>
    5c3c:	00 30 00 0f 	move s0, 12
    5c40:	fe e3 00 a8 	load_32 ra, 56(sp)
    5c44:	1e f3 00 a8 	load_32 s24, 60(sp)
    5c48:	de 03 01 05 	add_i sp, sp, 64
    5c4c:	1f 00 00 f0 	ret

0000000000005c50 valloc:
    5c50:	de 03 ff 05 	add_i sp, sp, -64
    5c54:	fe f3 00 88 	store_32 ra, 60(sp)
    5c58:	25 00 00 4f 	movehi s1, 5
    5c5c:	41 d0 44 00 	or s2, s1, 4404
    5c60:	62 00 00 a8 	load_32 s3, (s2)
    5c64:	20 00 f0 c0 	move s1, s0
    5c68:	63 05 00 f4 	bnz s3, 172 <valloc+0xc4>
    5c6c:	05 00 00 4f 	movehi s0, 5
    5c70:	60 04 00 0f 	move s3, 1
    5c74:	00 a0 4c 00 	or s0, s0, 4904
    5c78:	80 00 00 aa 	load_sync s4, (s0)
    5c7c:	a0 80 f1 c0 	move s5, s3
    5c80:	a0 00 00 8a 	store_sync s5, (s0)  
    5c84:	a5 ff ff f3 	bz s5, -12 <valloc+0x28>
    5c88:	04 01 00 f2 	bz s4, 32 <valloc+0x58>
    5c8c:	80 00 00 a8 	load_32 s4, (s0)
    5c90:	e4 ff ff f5 	bnz s4, -4 <valloc+0x3c>
    5c94:	80 00 00 aa 	load_sync s4, (s0)
    5c98:	a0 80 f1 c0 	move s5, s3
    5c9c:	a0 00 00 8a 	store_sync s5, (s0)  
    5ca0:	a5 ff ff f3 	bz s5, -12 <valloc+0x44>
    5ca4:	44 ff ff f5 	bnz s4, -24 <valloc+0x3c>
    5ca8:	62 00 00 a8 	load_32 s3, (s2)
    5cac:	a3 02 00 f4 	bnz s3, 84 <valloc+0xb0>
    5cb0:	60 00 40 0f 	move s3, 4096
    5cb4:	62 20 00 88 	store_32 s3, 8(s2)
    5cb8:	62 10 00 88 	store_32 s3, 4(s2)
    5cbc:	60 fc ff 0f 	move s3, -1
    5cc0:	62 30 00 88 	store_32 s3, 12(s2)
    5cc4:	65 00 00 4f 	movehi s3, 5
    5cc8:	80 20 00 4f 	movehi s4, 256
    5ccc:	82 40 00 88 	store_32 s4, 16(s2)
    5cd0:	80 08 00 0f 	move s4, 2
    5cd4:	82 50 00 88 	store_32 s4, 20(s2)
    5cd8:	63 30 45 00 	or s3, s3, 4428
    5cdc:	ca 54 55 4f 	movehi s6, 174762
    5ce0:	a0 00 00 0f 	move s5, 0
    5ce4:	83 f0 06 88 	store_32 s4, 444(s3)
    5ce8:	9e e0 00 05 	add_i s4, sp, 56
    5cec:	a3 00 07 88 	store_32 s5, 448(s3)
    5cf0:	66 60 55 00 	or s3, s6, 5464
    5cf4:	84 c0 ff 01 	and s4, s4, -16
    5cf8:	64 80 31 c0 	xor s3, s4, s3
    5cfc:	62 00 00 88 	store_32 s3, (s2)
    5d00:	60 00 00 0f 	move s3, 0
    5d04:	80 00 00 aa 	load_sync s4, (s0)
    5d08:	80 80 f1 c0 	move s4, s3
    5d0c:	80 00 00 8a 	store_sync s4, (s0)  
    5d10:	a4 ff ff f3 	bz s4, -12 <valloc+0xb4>
    5d14:	02 10 00 a8 	load_32 s0, 4(s2)
    5d18:	40 20 00 16 	cmpgt_u s2, s0, 8
    5d1c:	c2 00 00 f4 	bnz s2, 24 <valloc+0xe4>
    5d20:	00 80 f0 c0 	move s0, s1
    5d24:	b6 f2 ff f9 	call -13608 <malloc>
    5d28:	fe f3 00 a8 	load_32 ra, 60(sp)
    5d2c:	de 03 01 05 	add_i sp, sp, 64
    5d30:	1f 00 00 f0 	ret
    5d34:	04 ff ff f9 	call -1008 <internal_memalign>
    5d38:	fe f3 00 a8 	load_32 ra, 60(sp)
    5d3c:	de 03 01 05 	add_i sp, sp, 64
    5d40:	1f 00 00 f0 	ret

0000000000005d44 pvalloc:
    5d44:	de 03 ff 05 	add_i sp, sp, -64
    5d48:	fe f3 00 88 	store_32 ra, 60(sp)
    5d4c:	25 00 00 4f 	movehi s1, 5
    5d50:	21 d0 44 00 	or s1, s1, 4404
    5d54:	41 00 00 a8 	load_32 s2, (s1)
    5d58:	62 05 00 f4 	bnz s2, 172 <pvalloc+0xc0>
    5d5c:	45 00 00 4f 	movehi s2, 5
    5d60:	60 04 00 0f 	move s3, 1
    5d64:	42 a0 4c 00 	or s2, s2, 4904
    5d68:	82 00 00 aa 	load_sync s4, (s2)
    5d6c:	a0 80 f1 c0 	move s5, s3
    5d70:	a2 00 00 8a 	store_sync s5, (s2)  
    5d74:	a5 ff ff f3 	bz s5, -12 <pvalloc+0x24>
    5d78:	04 01 00 f2 	bz s4, 32 <pvalloc+0x54>
    5d7c:	82 00 00 a8 	load_32 s4, (s2)
    5d80:	e4 ff ff f5 	bnz s4, -4 <pvalloc+0x38>
    5d84:	82 00 00 aa 	load_sync s4, (s2)
    5d88:	a0 80 f1 c0 	move s5, s3
    5d8c:	a2 00 00 8a 	store_sync s5, (s2)  
    5d90:	a5 ff ff f3 	bz s5, -12 <pvalloc+0x40>
    5d94:	44 ff ff f5 	bnz s4, -24 <pvalloc+0x38>
    5d98:	61 00 00 a8 	load_32 s3, (s1)
    5d9c:	a3 02 00 f4 	bnz s3, 84 <pvalloc+0xac>
    5da0:	60 00 40 0f 	move s3, 4096
    5da4:	61 20 00 88 	store_32 s3, 8(s1)
    5da8:	61 10 00 88 	store_32 s3, 4(s1)
    5dac:	60 fc ff 0f 	move s3, -1
    5db0:	61 30 00 88 	store_32 s3, 12(s1)
    5db4:	65 00 00 4f 	movehi s3, 5
    5db8:	80 20 00 4f 	movehi s4, 256
    5dbc:	81 40 00 88 	store_32 s4, 16(s1)
    5dc0:	80 08 00 0f 	move s4, 2
    5dc4:	81 50 00 88 	store_32 s4, 20(s1)
    5dc8:	63 30 45 00 	or s3, s3, 4428
    5dcc:	ca 54 55 4f 	movehi s6, 174762
    5dd0:	a0 00 00 0f 	move s5, 0
    5dd4:	83 f0 06 88 	store_32 s4, 444(s3)
    5dd8:	9e e0 00 05 	add_i s4, sp, 56
    5ddc:	a3 00 07 88 	store_32 s5, 448(s3)
    5de0:	66 60 55 00 	or s3, s6, 5464
    5de4:	84 c0 ff 01 	and s4, s4, -16
    5de8:	64 80 31 c0 	xor s3, s4, s3
    5dec:	61 00 00 88 	store_32 s3, (s1)
    5df0:	60 00 00 0f 	move s3, 0
    5df4:	82 00 00 aa 	load_sync s4, (s2)
    5df8:	80 80 f1 c0 	move s4, s3
    5dfc:	82 00 00 8a 	store_sync s4, (s2)  
    5e00:	a4 ff ff f3 	bz s4, -12 <pvalloc+0xb0>
    5e04:	21 10 00 a8 	load_32 s1, 4(s1)
    5e08:	40 00 00 0f 	move s2, 0
    5e0c:	00 80 50 c0 	add_i s0, s0, s1
    5e10:	42 80 60 c0 	sub_i s2, s2, s1
    5e14:	61 20 00 16 	cmpgt_u s3, s1, 8
    5e18:	00 fc ff 05 	add_i s0, s0, -1
    5e1c:	40 00 11 c0 	and s2, s0, s2
    5e20:	c3 00 00 f4 	bnz s3, 24 <pvalloc+0xf4>
    5e24:	00 00 f1 c0 	move s0, s2
    5e28:	75 f2 ff f9 	call -13868 <malloc>
    5e2c:	fe f3 00 a8 	load_32 ra, 60(sp)
    5e30:	de 03 01 05 	add_i sp, sp, 64
    5e34:	1f 00 00 f0 	ret
    5e38:	00 80 f0 c0 	move s0, s1
    5e3c:	20 00 f1 c0 	move s1, s2
    5e40:	c1 fe ff f9 	call -1276 <internal_memalign>
    5e44:	fe f3 00 a8 	load_32 ra, 60(sp)
    5e48:	de 03 01 05 	add_i sp, sp, 64
    5e4c:	1f 00 00 f0 	ret

0000000000005e50 independent_calloc:
    5e50:	de 03 ff 05 	add_i sp, sp, -64
    5e54:	fe f3 00 88 	store_32 ra, 60(sp)
    5e58:	60 00 f1 c0 	move s3, s2
    5e5c:	3e e0 00 88 	store_32 s1, 56(sp)
    5e60:	3e e0 00 05 	add_i s1, sp, 56
    5e64:	40 0c 00 0f 	move s2, 3
    5e68:	04 00 00 f8 	call 16 <ialloc>
    5e6c:	fe f3 00 a8 	load_32 ra, 60(sp)
    5e70:	de 03 01 05 	add_i sp, sp, 64
    5e74:	1f 00 00 f0 	ret

0000000000005e78 ialloc:
    5e78:	de 03 ff 05 	add_i sp, sp, -64
    5e7c:	1e f3 00 88 	store_32 s24, 60(sp)
    5e80:	3e e3 00 88 	store_32 s25, 56(sp)
    5e84:	5e d3 00 88 	store_32 s26, 52(sp)
    5e88:	7e c3 00 88 	store_32 s27, 48(sp)
    5e8c:	fe b3 00 88 	store_32 ra, 44(sp)
    5e90:	85 00 00 4f 	movehi s4, 5
    5e94:	84 d0 44 00 	or s4, s4, 4404
    5e98:	a4 00 00 a8 	load_32 s5, (s4)
    5e9c:	00 81 f1 c0 	move s8, s3
    5ea0:	00 03 f1 c0 	move s24, s2
    5ea4:	20 83 f0 c0 	move s25, s1
    5ea8:	40 03 f0 c0 	move s26, s0
    5eac:	65 05 00 f4 	bnz s5, 172 <ialloc+0xe0>
    5eb0:	05 00 00 4f 	movehi s0, 5
    5eb4:	20 04 00 0f 	move s1, 1
    5eb8:	00 a0 4c 00 	or s0, s0, 4904
    5ebc:	40 00 00 aa 	load_sync s2, (s0)
    5ec0:	60 80 f0 c0 	move s3, s1
    5ec4:	60 00 00 8a 	store_sync s3, (s0)  
    5ec8:	a3 ff ff f3 	bz s3, -12 <ialloc+0x44>
    5ecc:	02 01 00 f2 	bz s2, 32 <ialloc+0x74>
    5ed0:	40 00 00 a8 	load_32 s2, (s0)
    5ed4:	e2 ff ff f5 	bnz s2, -4 <ialloc+0x58>
    5ed8:	40 00 00 aa 	load_sync s2, (s0)
    5edc:	60 80 f0 c0 	move s3, s1
    5ee0:	60 00 00 8a 	store_sync s3, (s0)  
    5ee4:	a3 ff ff f3 	bz s3, -12 <ialloc+0x60>
    5ee8:	42 ff ff f5 	bnz s2, -24 <ialloc+0x58>
    5eec:	24 00 00 a8 	load_32 s1, (s4)
    5ef0:	a1 02 00 f4 	bnz s1, 84 <ialloc+0xcc>
    5ef4:	20 00 40 0f 	move s1, 4096
    5ef8:	24 20 00 88 	store_32 s1, 8(s4)
    5efc:	24 10 00 88 	store_32 s1, 4(s4)
    5f00:	20 fc ff 0f 	move s1, -1
    5f04:	24 30 00 88 	store_32 s1, 12(s4)
    5f08:	25 00 00 4f 	movehi s1, 5
    5f0c:	40 20 00 4f 	movehi s2, 256
    5f10:	44 40 00 88 	store_32 s2, 16(s4)
    5f14:	40 08 00 0f 	move s2, 2
    5f18:	44 50 00 88 	store_32 s2, 20(s4)
    5f1c:	21 30 45 00 	or s1, s1, 4428
    5f20:	aa 54 55 4f 	movehi s5, 174762
    5f24:	60 00 00 0f 	move s3, 0
    5f28:	41 f0 06 88 	store_32 s2, 444(s1)
    5f2c:	5e a0 00 05 	add_i s2, sp, 40
    5f30:	61 00 07 88 	store_32 s3, 448(s1)
    5f34:	25 60 55 00 	or s1, s5, 5464
    5f38:	42 c0 ff 01 	and s2, s2, -16
    5f3c:	22 80 30 c0 	xor s1, s2, s1
    5f40:	24 00 00 88 	store_32 s1, (s4)
    5f44:	20 00 00 0f 	move s1, 0
    5f48:	40 00 00 aa 	load_sync s2, (s0)
    5f4c:	40 80 f0 c0 	move s2, s1
    5f50:	40 00 00 8a 	store_sync s2, (s0)  
    5f54:	a2 ff ff f3 	bz s2, -12 <ialloc+0xd0>
    5f58:	08 03 00 f2 	bz s8, 96 <ialloc+0x140>
    5f5c:	9a 14 00 f2 	bz s26, 656 <ialloc+0x374>
    5f60:	c0 00 00 0f 	move s6, 0
    5f64:	18 04 00 01 	and s0, s24, 1
    5f68:	1e 91 00 88 	store_32 s8, 36(sp)
    5f6c:	c0 03 00 f4 	bnz s0, 120 <ialloc+0x16c>
    5f70:	a0 00 00 0f 	move s5, 0
    5f74:	00 40 00 0f 	move s0, 16
    5f78:	20 80 f2 c0 	move s1, s5
    5f7c:	60 83 f2 c0 	move s27, s5
    5f80:	41 08 00 0b 	shl s2, s1, 2
    5f84:	59 00 51 c0 	add_i s2, s25, s2
    5f88:	62 00 00 a8 	load_32 s3, (s2)
    5f8c:	40 00 f0 c0 	move s2, s0
    5f90:	83 2c 00 18 	cmplt_u s4, s3, 11
    5f94:	64 00 00 f4 	bnz s4, 12 <ialloc+0x128>
    5f98:	43 2c 00 05 	add_i s2, s3, 11
    5f9c:	42 e0 ff 01 	and s2, s2, -8
    5fa0:	21 04 00 05 	add_i s1, s1, 1
    5fa4:	62 83 5d c0 	add_i s27, s2, s27
    5fa8:	61 00 1d c1 	cmpne_i s3, s1, s26
    5fac:	a3 fe ff f5 	bnz s3, -44 <ialloc+0x108>
    5fb0:	be 80 00 88 	store_32 s5, 32(sp)
    5fb4:	15 00 00 f6 	b 84 <ialloc+0x190>
    5fb8:	5a 00 00 f4 	bnz s26, 8 <ialloc+0x148>
    5fbc:	59 00 00 f6 	b 356 <ialloc+0x2a8>
    5fc0:	1a 08 00 0b 	shl s0, s26, 2
    5fc4:	20 2c 00 18 	cmplt_u s1, s0, 11
    5fc8:	61 0c 00 f4 	bnz s1, 396 <ialloc+0x2dc>
    5fcc:	00 2c 00 05 	add_i s0, s0, 11
    5fd0:	c0 e0 ff 01 	and s6, s0, -8
    5fd4:	18 04 00 01 	and s0, s24, 1
    5fd8:	1e 91 00 88 	store_32 s8, 36(sp)
    5fdc:	40 00 00 f4 	bnz s0, 8 <ialloc+0x16c>
    5fe0:	e4 ff ff f7 	b -112 <ialloc+0xf8>
    5fe4:	19 00 00 a8 	load_32 s0, (s25)
    5fe8:	20 2c 00 18 	cmplt_u s1, s0, 11
    5fec:	81 00 00 f4 	bnz s1, 16 <ialloc+0x184>
    5ff0:	00 2c 00 05 	add_i s0, s0, 11
    5ff4:	00 e0 ff 01 	and s0, s0, -8
    5ff8:	02 00 00 f6 	b 8 <ialloc+0x188>
    5ffc:	00 40 00 0f 	move s0, 16
    6000:	60 03 7d c0 	mull_i s27, s0, s26
    6004:	1e 80 00 88 	store_32 s0, 32(sp)
    6008:	06 80 5d c0 	add_i s0, s6, s27
    600c:	de 70 00 88 	store_32 s6, 28(sp)
    6010:	00 f0 ff 05 	add_i s0, s0, -4
    6014:	fa f1 ff f9 	call -14360 <malloc>
    6018:	00 08 00 f2 	bz s0, 256 <ialloc+0x2a0>
    601c:	25 00 00 4f 	movehi s1, 5
    6020:	80 00 fc c0 	move s4, s24
    6024:	01 33 45 00 	or s24, s1, 4428
    6028:	38 f0 06 a0 	load_u8 s1, 444(s24)
    602c:	1e 91 00 a8 	load_32 s8, 36(sp)
    6030:	3e 81 00 a8 	load_32 s9, 32(sp)
    6034:	21 08 00 01 	and s1, s1, 2
    6038:	e1 01 00 f2 	bz s1, 60 <ialloc+0x1fc>
    603c:	b8 00 07 05 	add_i s5, s24, 448
    6040:	20 04 00 0f 	move s1, 1
    6044:	45 00 00 aa 	load_sync s2, (s5)
    6048:	60 80 f0 c0 	move s3, s1
    604c:	65 00 00 8a 	store_sync s3, (s5)  
    6050:	a3 ff ff f3 	bz s3, -12 <ialloc+0x1cc>
    6054:	02 01 00 f2 	bz s2, 32 <ialloc+0x1fc>
    6058:	58 00 07 a8 	load_32 s2, 448(s24)
    605c:	e2 ff ff f5 	bnz s2, -4 <ialloc+0x1e0>
    6060:	45 00 00 aa 	load_sync s2, (s5)
    6064:	60 80 f0 c0 	move s3, s1
    6068:	65 00 00 8a 	store_sync s3, (s5)  
    606c:	a3 ff ff f3 	bz s3, -12 <ialloc+0x1e8>
    6070:	42 ff ff f5 	bnz s2, -24 <ialloc+0x1e0>
    6074:	40 f0 ff a9 	load_32 s2, -4(s0)
    6078:	24 08 00 01 	and s1, s4, 2
    607c:	62 e0 ff 01 	and s3, s2, -8
    6080:	a1 01 00 f2 	bz s1, 52 <ialloc+0x23c>
    6084:	3e 70 00 a8 	load_32 s1, 28(sp)
    6088:	40 f0 ff 0f 	move s2, -4
    608c:	1e 70 00 88 	store_32 s0, 28(sp)
    6090:	7e 60 00 88 	store_32 s3, 24(sp)
    6094:	22 80 60 c0 	sub_i s1, s2, s1
    6098:	41 80 51 c0 	add_i s2, s1, s3
    609c:	20 00 00 0f 	move s1, 0
    60a0:	85 04 00 f8 	call 4628 <memset>
    60a4:	7e 60 00 a8 	load_32 s3, 24(sp)
    60a8:	1e 70 00 a8 	load_32 s0, 28(sp)
    60ac:	3e 81 00 a8 	load_32 s9, 32(sp)
    60b0:	1e 91 00 a8 	load_32 s8, 36(sp)
    60b4:	40 e1 ff 05 	add_i s10, s0, -8
    60b8:	48 00 00 f4 	bnz s8, 8 <ialloc+0x248>
    60bc:	1d 00 00 f6 	b 116 <ialloc+0x2b8>
    60c0:	60 83 f1 c0 	move s27, s3
    60c4:	3a fc ff 05 	add_i s1, s26, -1
    60c8:	08 00 00 88 	store_32 s0, (s8)
    60cc:	a1 07 00 f2 	bz s1, 244 <ialloc+0x348>
    60d0:	49 00 00 f4 	bnz s9, 8 <ialloc+0x260>
    60d4:	25 00 00 f6 	b 148 <ialloc+0x2f0>
    60d8:	40 04 00 0f 	move s2, 1
    60dc:	69 0c 00 00 	or s3, s9, 3
    60e0:	80 00 00 0f 	move s4, 0
    60e4:	42 00 6d c0 	sub_i s2, s2, s26
    60e8:	49 00 71 c0 	mull_i s2, s9, s2
    60ec:	84 04 00 05 	add_i s4, s4, 1
    60f0:	6a 10 00 88 	store_32 s3, 4(s10)
    60f4:	4a 81 54 c0 	add_i s10, s10, s9
    60f8:	a4 08 00 0b 	shl s5, s4, 2
    60fc:	e4 80 10 c1 	cmpne_i s7, s4, s1
    6100:	a8 80 52 c0 	add_i s5, s8, s5
    6104:	ca 20 00 05 	add_i s6, s10, 8
    6108:	c5 00 00 88 	store_32 s6, (s5)
    610c:	07 ff ff f5 	bnz s7, -32 <ialloc+0x274>
    6110:	7b 03 51 c0 	add_i s27, s27, s2
    6114:	2b 00 00 f6 	b 172 <ialloc+0x348>
    6118:	00 01 00 0f 	move s8, 0
    611c:	34 00 00 f6 	b 208 <ialloc+0x374>
    6120:	00 00 00 0f 	move s0, 0
    6124:	b6 f1 ff f9 	call -14632 <malloc>
    6128:	00 01 f0 c0 	move s8, s0
    612c:	30 00 00 f6 	b 192 <ialloc+0x374>
    6130:	2a 80 5d c0 	add_i s1, s10, s27
    6134:	43 80 6d c0 	sub_i s2, s3, s27
    6138:	01 21 00 05 	add_i s8, s1, 8
    613c:	42 0c 00 00 	or s2, s2, 3
    6140:	41 10 00 88 	store_32 s2, 4(s1)
    6144:	3a fc ff 05 	add_i s1, s26, -1
    6148:	08 00 00 88 	store_32 s0, (s8)
    614c:	a1 03 00 f2 	bz s1, 116 <ialloc+0x348>
    6150:	e0 ff ff f7 	b -128 <ialloc+0x258>
    6154:	c0 40 00 0f 	move s6, 16
    6158:	18 04 00 01 	and s0, s24, 1
    615c:	1e 91 00 88 	store_32 s8, 36(sp)
    6160:	20 f4 ff f5 	bnz s0, -380 <ialloc+0x16c>
    6164:	83 ff ff f7 	b -500 <ialloc+0xf8>
    6168:	40 00 00 0f 	move s2, 0
    616c:	60 40 00 0f 	move s3, 16
    6170:	82 08 00 0b 	shl s4, s2, 2
    6174:	99 00 52 c0 	add_i s4, s25, s4
    6178:	a4 00 00 a8 	load_32 s5, (s4)
    617c:	80 80 f1 c0 	move s4, s3
    6180:	c5 2c 00 18 	cmplt_u s6, s5, 11
    6184:	66 00 00 f4 	bnz s6, 12 <ialloc+0x318>
    6188:	85 2c 00 05 	add_i s4, s5, 11
    618c:	84 e0 ff 01 	and s4, s4, -8
    6190:	42 04 00 05 	add_i s2, s2, 1
    6194:	a4 0c 00 00 	or s5, s4, 3
    6198:	aa 10 00 88 	store_32 s5, 4(s10)
    619c:	4a 01 52 c0 	add_i s10, s10, s4
    61a0:	7b 03 62 c0 	sub_i s27, s27, s4
    61a4:	82 08 00 0b 	shl s4, s2, 2
    61a8:	c2 80 00 c1 	cmpeq_i s6, s2, s1
    61ac:	88 00 52 c0 	add_i s4, s8, s4
    61b0:	aa 20 00 05 	add_i s5, s10, 8
    61b4:	a4 00 00 88 	store_32 s5, (s4)
    61b8:	46 00 00 f4 	bnz s6, 8 <ialloc+0x348>
    61bc:	ed ff ff f7 	b -76 <ialloc+0x2f8>
    61c0:	3b 0c 00 00 	or s1, s27, 3
    61c4:	2a 10 00 88 	store_32 s1, 4(s10)
    61c8:	18 f0 06 a0 	load_u8 s0, 444(s24)
    61cc:	00 08 00 01 	and s0, s0, 2
    61d0:	e0 00 00 f2 	bz s0, 28 <ialloc+0x374>
    61d4:	18 00 07 05 	add_i s0, s24, 448
    61d8:	20 00 00 0f 	move s1, 0
    61dc:	40 00 00 aa 	load_sync s2, (s0)
    61e0:	40 80 f0 c0 	move s2, s1
    61e4:	40 00 00 8a 	store_sync s2, (s0)  
    61e8:	a2 ff ff f3 	bz s2, -12 <ialloc+0x364>
    61ec:	00 00 f4 c0 	move s0, s8
    61f0:	fe b3 00 a8 	load_32 ra, 44(sp)
    61f4:	7e c3 00 a8 	load_32 s27, 48(sp)
    61f8:	5e d3 00 a8 	load_32 s26, 52(sp)
    61fc:	3e e3 00 a8 	load_32 s25, 56(sp)
    6200:	1e f3 00 a8 	load_32 s24, 60(sp)
    6204:	de 03 01 05 	add_i sp, sp, 64
    6208:	1f 00 00 f0 	ret

000000000000620c independent_comalloc:
    620c:	de 03 ff 05 	add_i sp, sp, -64
    6210:	fe f3 00 88 	store_32 ra, 60(sp)
    6214:	60 00 f1 c0 	move s3, s2
    6218:	40 00 00 0f 	move s2, 0
    621c:	17 ff ff f9 	call -932 <ialloc>
    6220:	fe f3 00 a8 	load_32 ra, 60(sp)
    6224:	de 03 01 05 	add_i sp, sp, 64
    6228:	1f 00 00 f0 	ret

000000000000622c bulk_free:
    622c:	de 03 ff 05 	add_i sp, sp, -64
    6230:	1e f3 00 88 	store_32 s24, 60(sp)
    6234:	3e e3 00 88 	store_32 s25, 56(sp)
    6238:	5e d3 00 88 	store_32 s26, 52(sp)
    623c:	7e c3 00 88 	store_32 s27, 48(sp)
    6240:	fe b3 00 88 	store_32 ra, 44(sp)
    6244:	45 00 00 4f 	movehi s2, 5
    6248:	22 33 45 00 	or s25, s2, 4428
    624c:	59 f0 06 a0 	load_u8 s2, 444(s25)
    6250:	00 03 f0 c0 	move s24, s0
    6254:	42 08 00 01 	and s2, s2, 2
    6258:	e2 01 00 f2 	bz s2, 60 <bulk_free+0x68>
    625c:	19 00 07 05 	add_i s0, s25, 448
    6260:	40 04 00 0f 	move s2, 1
    6264:	60 00 00 aa 	load_sync s3, (s0)
    6268:	80 00 f1 c0 	move s4, s2
    626c:	80 00 00 8a 	store_sync s4, (s0)  
    6270:	a4 ff ff f3 	bz s4, -12 <bulk_free+0x38>
    6274:	03 01 00 f2 	bz s3, 32 <bulk_free+0x68>
    6278:	79 00 07 a8 	load_32 s3, 448(s25)
    627c:	e3 ff ff f5 	bnz s3, -4 <bulk_free+0x4c>
    6280:	60 00 00 aa 	load_sync s3, (s0)
    6284:	80 00 f1 c0 	move s4, s2
    6288:	80 00 00 8a 	store_sync s4, (s0)  
    628c:	a4 ff ff f3 	bz s4, -12 <bulk_free+0x54>
    6290:	43 ff ff f5 	bnz s3, -24 <bulk_free+0x4c>
    6294:	c1 05 00 f2 	bz s1, 184 <bulk_free+0x120>
    6298:	01 08 00 0b 	shl s0, s1, 2
    629c:	58 03 50 c0 	add_i s26, s24, s0
    62a0:	60 03 00 0f 	move s27, 0
    62a4:	58 00 00 a8 	load_32 s2, (s24)
    62a8:	a2 02 00 f2 	bz s2, 84 <bulk_free+0xd0>
    62ac:	62 f0 ff a9 	load_32 s3, -4(s2)
    62b0:	78 03 00 88 	store_32 s27, (s24)
    62b4:	39 40 00 a8 	load_32 s1, 16(s25)
    62b8:	03 0c 00 01 	and s0, s3, 3
    62bc:	00 04 00 10 	cmpeq_i s0, s0, 1
    62c0:	40 07 00 f4 	bnz s0, 232 <bulk_free+0x17c>
    62c4:	02 e0 ff 05 	add_i s0, s2, -8
    62c8:	20 80 80 c1 	cmplt_u s1, s0, s1
    62cc:	e1 06 00 f4 	bnz s1, 220 <bulk_free+0x17c>
    62d0:	98 10 00 05 	add_i s4, s24, 4
    62d4:	23 e0 ff 01 	and s1, s3, -8
    62d8:	a4 00 0d c1 	cmpeq_i s5, s4, s26
    62dc:	e5 00 00 f4 	bnz s5, 28 <bulk_free+0xcc>
    62e0:	a0 80 50 c0 	add_i s5, s0, s1
    62e4:	c4 00 00 a8 	load_32 s6, (s4)
    62e8:	e5 20 00 05 	add_i s7, s5, 8
    62ec:	c6 80 13 c1 	cmpne_i s6, s6, s7
    62f0:	46 00 00 f4 	bnz s6, 8 <bulk_free+0xcc>
    62f4:	06 00 00 f6 	b 24 <bulk_free+0xe0>
    62f8:	83 01 00 f8 	call 1548 <dispose_chunk>
    62fc:	18 13 00 05 	add_i s24, s24, 4
    6300:	18 00 1d c1 	cmpne_i s0, s24, s26
    6304:	00 fd ff f5 	bnz s0, -96 <bulk_free+0x78>
    6308:	11 00 00 f6 	b 68 <bulk_free+0x120>
    630c:	05 10 00 a8 	load_32 s0, 4(s5)
    6310:	63 04 00 01 	and s3, s3, 1
    6314:	a2 f0 ff 05 	add_i s5, s2, -4
    6318:	00 e0 ff 01 	and s0, s0, -8
    631c:	00 80 50 c0 	add_i s0, s0, s1
    6320:	23 00 00 c0 	or s1, s3, s0
    6324:	05 00 50 c0 	add_i s0, s5, s0
    6328:	21 08 00 00 	or s1, s1, 2
    632c:	22 f0 ff 89 	store_32 s1, -4(s2)
    6330:	20 00 00 a8 	load_32 s1, (s0)
    6334:	21 04 00 00 	or s1, s1, 1
    6338:	20 00 00 88 	store_32 s1, (s0)
    633c:	44 00 00 88 	store_32 s2, (s4)
    6340:	18 13 00 05 	add_i s24, s24, 4
    6344:	18 00 1d c1 	cmpne_i s0, s24, s26
    6348:	e0 fa ff f5 	bnz s0, -164 <bulk_free+0x78>
    634c:	19 30 00 a8 	load_32 s0, 12(s25)
    6350:	39 70 00 a8 	load_32 s1, 28(s25)
    6354:	00 80 90 c1 	cmple_u s0, s0, s1
    6358:	60 00 00 f4 	bnz s0, 12 <bulk_free+0x138>
    635c:	00 00 00 0f 	move s0, 0
    6360:	c9 fa ff f9 	call -5340 <sys_trim>
    6364:	19 f0 06 a0 	load_u8 s0, 444(s25)
    6368:	00 08 00 01 	and s0, s0, 2
    636c:	e0 00 00 f2 	bz s0, 28 <bulk_free+0x15c>
    6370:	19 00 07 05 	add_i s0, s25, 448
    6374:	20 00 00 0f 	move s1, 0
    6378:	40 00 00 aa 	load_sync s2, (s0)
    637c:	40 80 f0 c0 	move s2, s1
    6380:	40 00 00 8a 	store_sync s2, (s0)  
    6384:	a2 ff ff f3 	bz s2, -12 <bulk_free+0x14c>
    6388:	fe b3 00 a8 	load_32 ra, 44(sp)
    638c:	00 00 00 0f 	move s0, 0
    6390:	7e c3 00 a8 	load_32 s27, 48(sp)
    6394:	5e d3 00 a8 	load_32 s26, 52(sp)
    6398:	3e e3 00 a8 	load_32 s25, 56(sp)
    639c:	1e f3 00 a8 	load_32 s24, 60(sp)
    63a0:	de 03 01 05 	add_i sp, sp, 64
    63a4:	1f 00 00 f0 	ret
    63a8:	2e 03 00 f8 	call 3256 <abort>

00000000000063ac malloc_trim:
    63ac:	de 03 ff 05 	add_i sp, sp, -64
    63b0:	1e f3 00 88 	store_32 s24, 60(sp)
    63b4:	fe e3 00 88 	store_32 ra, 56(sp)
    63b8:	25 00 00 4f 	movehi s1, 5
    63bc:	41 d0 44 00 	or s2, s1, 4404
    63c0:	22 00 00 a8 	load_32 s1, (s2)
    63c4:	61 05 00 f4 	bnz s1, 172 <malloc_trim+0xc4>
    63c8:	25 00 00 4f 	movehi s1, 5
    63cc:	60 04 00 0f 	move s3, 1
    63d0:	21 a0 4c 00 	or s1, s1, 4904
    63d4:	81 00 00 aa 	load_sync s4, (s1)
    63d8:	a0 80 f1 c0 	move s5, s3
    63dc:	a1 00 00 8a 	store_sync s5, (s1)  
    63e0:	a5 ff ff f3 	bz s5, -12 <malloc_trim+0x28>
    63e4:	04 01 00 f2 	bz s4, 32 <malloc_trim+0x58>
    63e8:	81 00 00 a8 	load_32 s4, (s1)
    63ec:	e4 ff ff f5 	bnz s4, -4 <malloc_trim+0x3c>
    63f0:	81 00 00 aa 	load_sync s4, (s1)
    63f4:	a0 80 f1 c0 	move s5, s3
    63f8:	a1 00 00 8a 	store_sync s5, (s1)  
    63fc:	a5 ff ff f3 	bz s5, -12 <malloc_trim+0x44>
    6400:	44 ff ff f5 	bnz s4, -24 <malloc_trim+0x3c>
    6404:	62 00 00 a8 	load_32 s3, (s2)
    6408:	a3 02 00 f4 	bnz s3, 84 <malloc_trim+0xb0>
    640c:	60 00 40 0f 	move s3, 4096
    6410:	62 20 00 88 	store_32 s3, 8(s2)
    6414:	62 10 00 88 	store_32 s3, 4(s2)
    6418:	60 fc ff 0f 	move s3, -1
    641c:	62 30 00 88 	store_32 s3, 12(s2)
    6420:	65 00 00 4f 	movehi s3, 5
    6424:	80 20 00 4f 	movehi s4, 256
    6428:	82 40 00 88 	store_32 s4, 16(s2)
    642c:	80 08 00 0f 	move s4, 2
    6430:	82 50 00 88 	store_32 s4, 20(s2)
    6434:	63 30 45 00 	or s3, s3, 4428
    6438:	ca 54 55 4f 	movehi s6, 174762
    643c:	a0 00 00 0f 	move s5, 0
    6440:	83 f0 06 88 	store_32 s4, 444(s3)
    6444:	9e d0 00 05 	add_i s4, sp, 52
    6448:	a3 00 07 88 	store_32 s5, 448(s3)
    644c:	66 60 55 00 	or s3, s6, 5464
    6450:	84 c0 ff 01 	and s4, s4, -16
    6454:	64 80 31 c0 	xor s3, s4, s3
    6458:	62 00 00 88 	store_32 s3, (s2)
    645c:	40 00 00 0f 	move s2, 0
    6460:	61 00 00 aa 	load_sync s3, (s1)
    6464:	60 00 f1 c0 	move s3, s2
    6468:	61 00 00 8a 	store_sync s3, (s1)  
    646c:	a3 ff ff f3 	bz s3, -12 <malloc_trim+0xb4>
    6470:	25 00 00 4f 	movehi s1, 5
    6474:	01 33 45 00 	or s24, s1, 4428
    6478:	38 f0 06 a0 	load_u8 s1, 444(s24)
    647c:	21 08 00 01 	and s1, s1, 2
    6480:	e1 01 00 f2 	bz s1, 60 <malloc_trim+0x110>
    6484:	38 00 07 05 	add_i s1, s24, 448
    6488:	40 04 00 0f 	move s2, 1
    648c:	61 00 00 aa 	load_sync s3, (s1)
    6490:	80 00 f1 c0 	move s4, s2
    6494:	81 00 00 8a 	store_sync s4, (s1)  
    6498:	a4 ff ff f3 	bz s4, -12 <malloc_trim+0xe0>
    649c:	03 01 00 f2 	bz s3, 32 <malloc_trim+0x110>
    64a0:	78 00 07 a8 	load_32 s3, 448(s24)
    64a4:	e3 ff ff f5 	bnz s3, -4 <malloc_trim+0xf4>
    64a8:	61 00 00 aa 	load_sync s3, (s1)
    64ac:	80 00 f1 c0 	move s4, s2
    64b0:	81 00 00 8a 	store_sync s4, (s1)  
    64b4:	a4 ff ff f3 	bz s4, -12 <malloc_trim+0xfc>
    64b8:	43 ff ff f5 	bnz s3, -24 <malloc_trim+0xf4>
    64bc:	72 fa ff f9 	call -5688 <sys_trim>
    64c0:	38 f0 06 a0 	load_u8 s1, 444(s24)
    64c4:	21 08 00 01 	and s1, s1, 2
    64c8:	e1 00 00 f2 	bz s1, 28 <malloc_trim+0x138>
    64cc:	38 00 07 05 	add_i s1, s24, 448
    64d0:	40 00 00 0f 	move s2, 0
    64d4:	61 00 00 aa 	load_sync s3, (s1)
    64d8:	60 00 f1 c0 	move s3, s2
    64dc:	61 00 00 8a 	store_sync s3, (s1)  
    64e0:	a3 ff ff f3 	bz s3, -12 <malloc_trim+0x128>
    64e4:	fe e3 00 a8 	load_32 ra, 56(sp)
    64e8:	1e f3 00 a8 	load_32 s24, 60(sp)
    64ec:	de 03 01 05 	add_i sp, sp, 64
    64f0:	1f 00 00 f0 	ret

00000000000064f4 malloc_footprint:
    64f4:	05 00 00 4f 	movehi s0, 5
    64f8:	00 30 45 00 	or s0, s0, 4428
    64fc:	00 c0 06 a8 	load_32 s0, 432(s0)
    6500:	1f 00 00 f0 	ret

0000000000006504 malloc_max_footprint:
    6504:	05 00 00 4f 	movehi s0, 5
    6508:	00 30 45 00 	or s0, s0, 4428
    650c:	00 d0 06 a8 	load_32 s0, 436(s0)
    6510:	1f 00 00 f0 	ret

0000000000006514 malloc_footprint_limit:
    6514:	05 00 00 4f 	movehi s0, 5
    6518:	00 30 45 00 	or s0, s0, 4428
    651c:	00 e0 06 a8 	load_32 s0, 440(s0)
    6520:	20 00 00 10 	cmpeq_i s1, s0, 0
    6524:	41 00 00 f4 	bnz s1, 8 <malloc_footprint_limit+0x18>
    6528:	02 00 00 f6 	b 8 <malloc_footprint_limit+0x1c>
    652c:	00 fc ff 0f 	move s0, -1
    6530:	1f 00 00 f0 	ret

0000000000006534 malloc_set_footprint_limit:
    6534:	20 fc ff 10 	cmpeq_i s1, s0, -1
    6538:	a1 01 00 f4 	bnz s1, 52 <malloc_set_footprint_limit+0x38>
    653c:	25 00 00 4f 	movehi s1, 5
    6540:	40 00 00 0f 	move s2, 0
    6544:	21 d0 44 00 	or s1, s1, 4404
    6548:	21 20 00 a8 	load_32 s1, 8(s1)
    654c:	00 80 50 c0 	add_i s0, s0, s1
    6550:	22 80 60 c0 	sub_i s1, s2, s1
    6554:	00 fc ff 05 	add_i s0, s0, -1
    6558:	00 80 10 c0 	and s0, s0, s1
    655c:	25 00 00 4f 	movehi s1, 5
    6560:	21 30 45 00 	or s1, s1, 4428
    6564:	01 e0 06 88 	store_32 s0, 440(s1)
    6568:	1f 00 00 f0 	ret
    656c:	00 00 00 0f 	move s0, 0
    6570:	25 00 00 4f 	movehi s1, 5
    6574:	21 30 45 00 	or s1, s1, 4428
    6578:	01 e0 06 88 	store_32 s0, 440(s1)
    657c:	1f 00 00 f0 	ret

0000000000006580 mallinfo:
    6580:	de 03 ff 05 	add_i sp, sp, -64
    6584:	1e f3 00 88 	store_32 s24, 60(sp)
    6588:	3e e3 00 88 	store_32 s25, 56(sp)
    658c:	fe d3 00 88 	store_32 ra, 52(sp)
    6590:	20 03 00 0f 	move s25, 0
    6594:	00 03 f0 c0 	move s24, s0
    6598:	40 a0 00 0f 	move s2, 40
    659c:	20 80 fc c0 	move s1, s25
    65a0:	45 03 00 f8 	call 3348 <memset>
    65a4:	05 00 00 4f 	movehi s0, 5
    65a8:	20 d0 44 00 	or s1, s0, 4404
    65ac:	01 00 00 a8 	load_32 s0, (s1)
    65b0:	60 05 00 f4 	bnz s0, 172 <mallinfo+0xdc>
    65b4:	05 00 00 4f 	movehi s0, 5
    65b8:	40 04 00 0f 	move s2, 1
    65bc:	00 a0 4c 00 	or s0, s0, 4904
    65c0:	60 00 00 aa 	load_sync s3, (s0)
    65c4:	80 00 f1 c0 	move s4, s2
    65c8:	80 00 00 8a 	store_sync s4, (s0)  
    65cc:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x40>
    65d0:	03 01 00 f2 	bz s3, 32 <mallinfo+0x70>
    65d4:	60 00 00 a8 	load_32 s3, (s0)
    65d8:	e3 ff ff f5 	bnz s3, -4 <mallinfo+0x54>
    65dc:	60 00 00 aa 	load_sync s3, (s0)
    65e0:	80 00 f1 c0 	move s4, s2
    65e4:	80 00 00 8a 	store_sync s4, (s0)  
    65e8:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x5c>
    65ec:	43 ff ff f5 	bnz s3, -24 <mallinfo+0x54>
    65f0:	41 00 00 a8 	load_32 s2, (s1)
    65f4:	a2 02 00 f4 	bnz s2, 84 <mallinfo+0xc8>
    65f8:	40 00 40 0f 	move s2, 4096
    65fc:	41 20 00 88 	store_32 s2, 8(s1)
    6600:	41 10 00 88 	store_32 s2, 4(s1)
    6604:	40 fc ff 0f 	move s2, -1
    6608:	41 30 00 88 	store_32 s2, 12(s1)
    660c:	45 00 00 4f 	movehi s2, 5
    6610:	60 20 00 4f 	movehi s3, 256
    6614:	61 40 00 88 	store_32 s3, 16(s1)
    6618:	60 08 00 0f 	move s3, 2
    661c:	61 50 00 88 	store_32 s3, 20(s1)
    6620:	42 30 45 00 	or s2, s2, 4428
    6624:	aa 54 55 4f 	movehi s5, 174762
    6628:	80 00 00 0f 	move s4, 0
    662c:	62 f0 06 88 	store_32 s3, 444(s2)
    6630:	7e c0 00 05 	add_i s3, sp, 48
    6634:	82 00 07 88 	store_32 s4, 448(s2)
    6638:	45 60 55 00 	or s2, s5, 5464
    663c:	63 c0 ff 01 	and s3, s3, -16
    6640:	43 00 31 c0 	xor s2, s3, s2
    6644:	41 00 00 88 	store_32 s2, (s1)
    6648:	20 00 00 0f 	move s1, 0
    664c:	40 00 00 aa 	load_sync s2, (s0)
    6650:	40 80 f0 c0 	move s2, s1
    6654:	40 00 00 8a 	store_sync s2, (s0)  
    6658:	a2 ff ff f3 	bz s2, -12 <mallinfo+0xcc>
    665c:	05 00 00 4f 	movehi s0, 5
    6660:	00 30 45 00 	or s0, s0, 4428
    6664:	20 f0 06 a0 	load_u8 s1, 444(s0)
    6668:	21 08 00 01 	and s1, s1, 2
    666c:	e1 01 00 f2 	bz s1, 60 <mallinfo+0x128>
    6670:	20 00 07 05 	add_i s1, s0, 448
    6674:	40 04 00 0f 	move s2, 1
    6678:	61 00 00 aa 	load_sync s3, (s1)
    667c:	80 00 f1 c0 	move s4, s2
    6680:	81 00 00 8a 	store_sync s4, (s1)  
    6684:	a4 ff ff f3 	bz s4, -12 <mallinfo+0xf8>
    6688:	03 01 00 f2 	bz s3, 32 <mallinfo+0x128>
    668c:	60 00 07 a8 	load_32 s3, 448(s0)
    6690:	e3 ff ff f5 	bnz s3, -4 <mallinfo+0x10c>
    6694:	61 00 00 aa 	load_sync s3, (s1)
    6698:	80 00 f1 c0 	move s4, s2
    669c:	81 00 00 8a 	store_sync s4, (s1)  
    66a0:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x114>
    66a4:	43 ff ff f5 	bnz s3, -24 <mallinfo+0x10c>
    66a8:	40 60 00 a8 	load_32 s2, 24(s0)
    66ac:	62 06 00 f2 	bz s2, 204 <mallinfo+0x1f8>
    66b0:	20 30 00 a8 	load_32 s1, 12(s0)
    66b4:	c0 10 07 05 	add_i s6, s0, 452
    66b8:	a0 04 00 0f 	move s5, 1
    66bc:	e0 e0 ff 0f 	move s7, -8
    66c0:	61 a0 00 05 	add_i s3, s1, 40
    66c4:	80 80 f1 c0 	move s4, s3
    66c8:	06 01 00 a8 	load_32 s8, (s6)
    66cc:	28 21 00 05 	add_i s9, s8, 8
    66d0:	29 1d 00 01 	and s9, s9, 7
    66d4:	49 01 00 10 	cmpeq_i s10, s9, 0
    66d8:	20 81 fc c0 	move s9, s25
    66dc:	6a 00 00 f4 	bnz s10, 12 <mallinfo+0x168>
    66e0:	27 01 64 c0 	sub_i s9, s7, s8
    66e4:	29 1d 00 01 	and s9, s9, 7
    66e8:	46 11 00 a8 	load_32 s10, 4(s6)
    66ec:	28 81 54 c0 	add_i s9, s8, s9
    66f0:	48 01 55 c0 	add_i s10, s8, s10
    66f4:	69 01 75 c1 	cmpge_u s11, s9, s10
    66f8:	6b 02 00 f4 	bnz s11, 76 <mallinfo+0x1c4>
    66fc:	62 81 04 c1 	cmpeq_i s11, s2, s9
    6700:	2b 02 00 f4 	bnz s11, 68 <mallinfo+0x1c4>
    6704:	69 11 00 a8 	load_32 s11, 4(s9)
    6708:	8b 1d 00 10 	cmpeq_i s12, s11, 7
    670c:	cc 01 00 f4 	bnz s12, 56 <mallinfo+0x1c4>
    6710:	8b 0d 00 01 	and s12, s11, 3
    6714:	6b e1 ff 01 	and s11, s11, -8
    6718:	8c 05 00 10 	cmpeq_i s12, s12, 1
    671c:	a0 81 f5 c0 	move s13, s11
    6720:	4c 00 00 f4 	bnz s12, 8 <mallinfo+0x1a8>
    6724:	a0 81 fc c0 	move s13, s25
    6728:	29 81 55 c0 	add_i s9, s9, s11
    672c:	6b 80 51 c0 	add_i s3, s11, s3
    6730:	6c 05 00 01 	and s11, s12, 1
    6734:	8d 00 52 c0 	add_i s4, s13, s4
    6738:	89 01 74 c1 	cmpge_u s12, s9, s8
    673c:	a5 80 55 c0 	add_i s5, s5, s11
    6740:	ac fd ff f5 	bnz s12, -76 <mallinfo+0x174>
    6744:	c6 20 00 a8 	load_32 s6, 8(s6)
    6748:	06 fc ff f5 	bnz s6, -128 <mallinfo+0x148>
    674c:	78 00 00 88 	store_32 s3, (s24)
    6750:	b8 10 00 88 	store_32 s5, 4(s24)
    6754:	40 c0 06 a8 	load_32 s2, 432(s0)
    6758:	62 80 61 c0 	sub_i s3, s2, s3
    675c:	78 40 00 88 	store_32 s3, 16(s24)
    6760:	60 d0 06 a8 	load_32 s3, 436(s0)
    6764:	42 00 62 c0 	sub_i s2, s2, s4
    6768:	78 50 00 88 	store_32 s3, 20(s24)
    676c:	58 70 00 88 	store_32 s2, 28(s24)
    6770:	98 80 00 88 	store_32 s4, 32(s24)
    6774:	38 90 00 88 	store_32 s1, 36(s24)
    6778:	20 f0 06 a0 	load_u8 s1, 444(s0)
    677c:	21 08 00 01 	and s1, s1, 2
    6780:	e1 00 00 f2 	bz s1, 28 <mallinfo+0x21c>
    6784:	00 00 07 05 	add_i s0, s0, 448
    6788:	20 00 00 0f 	move s1, 0
    678c:	40 00 00 aa 	load_sync s2, (s0)
    6790:	40 80 f0 c0 	move s2, s1
    6794:	40 00 00 8a 	store_sync s2, (s0)  
    6798:	a2 ff ff f3 	bz s2, -12 <mallinfo+0x20c>
    679c:	00 00 fc c0 	move s0, s24
    67a0:	fe d3 00 a8 	load_32 ra, 52(sp)
    67a4:	3e e3 00 a8 	load_32 s25, 56(sp)
    67a8:	1e f3 00 a8 	load_32 s24, 60(sp)
    67ac:	de 03 01 05 	add_i sp, sp, 64
    67b0:	1f 00 00 f0 	ret

00000000000067b4 mallopt:
    67b4:	de 03 ff 05 	add_i sp, sp, -64
    67b8:	45 00 00 4f 	movehi s2, 5
    67bc:	62 d0 44 00 	or s3, s2, 4404
    67c0:	43 00 00 a8 	load_32 s2, (s3)
    67c4:	62 05 00 f4 	bnz s2, 172 <mallopt+0xbc>
    67c8:	45 00 00 4f 	movehi s2, 5
    67cc:	80 04 00 0f 	move s4, 1
    67d0:	42 a0 4c 00 	or s2, s2, 4904
    67d4:	a2 00 00 aa 	load_sync s5, (s2)
    67d8:	c0 00 f2 c0 	move s6, s4
    67dc:	c2 00 00 8a 	store_sync s6, (s2)  
    67e0:	a6 ff ff f3 	bz s6, -12 <mallopt+0x20>
    67e4:	05 01 00 f2 	bz s5, 32 <mallopt+0x50>
    67e8:	a2 00 00 a8 	load_32 s5, (s2)
    67ec:	e5 ff ff f5 	bnz s5, -4 <mallopt+0x34>
    67f0:	a2 00 00 aa 	load_sync s5, (s2)
    67f4:	c0 00 f2 c0 	move s6, s4
    67f8:	c2 00 00 8a 	store_sync s6, (s2)  
    67fc:	a6 ff ff f3 	bz s6, -12 <mallopt+0x3c>
    6800:	45 ff ff f5 	bnz s5, -24 <mallopt+0x34>
    6804:	83 00 00 a8 	load_32 s4, (s3)
    6808:	a4 02 00 f4 	bnz s4, 84 <mallopt+0xa8>
    680c:	80 00 40 0f 	move s4, 4096
    6810:	83 20 00 88 	store_32 s4, 8(s3)
    6814:	83 10 00 88 	store_32 s4, 4(s3)
    6818:	80 fc ff 0f 	move s4, -1
    681c:	83 30 00 88 	store_32 s4, 12(s3)
    6820:	85 00 00 4f 	movehi s4, 5
    6824:	a0 20 00 4f 	movehi s5, 256
    6828:	a3 40 00 88 	store_32 s5, 16(s3)
    682c:	a0 08 00 0f 	move s5, 2
    6830:	a3 50 00 88 	store_32 s5, 20(s3)
    6834:	84 30 45 00 	or s4, s4, 4428
    6838:	ea 54 55 4f 	movehi s7, 174762
    683c:	c0 00 00 0f 	move s6, 0
    6840:	a4 f0 06 88 	store_32 s5, 444(s4)
    6844:	be f0 00 05 	add_i s5, sp, 60
    6848:	c4 00 07 88 	store_32 s6, 448(s4)
    684c:	87 60 55 00 	or s4, s7, 5464
    6850:	a5 c0 ff 01 	and s5, s5, -16
    6854:	85 00 32 c0 	xor s4, s5, s4
    6858:	83 00 00 88 	store_32 s4, (s3)
    685c:	80 00 00 0f 	move s4, 0
    6860:	a2 00 00 aa 	load_sync s5, (s2)
    6864:	a0 00 f2 c0 	move s5, s4
    6868:	a2 00 00 8a 	store_sync s5, (s2)  
    686c:	a5 ff ff f3 	bz s5, -12 <mallopt+0xac>
    6870:	40 f4 ff 10 	cmpeq_i s2, s0, -3
    6874:	02 01 00 f4 	bnz s2, 32 <mallopt+0xe0>
    6878:	80 f8 ff 10 	cmpeq_i s4, s0, -2
    687c:	40 00 00 0f 	move s2, 0
    6880:	44 01 00 f4 	bnz s4, 40 <mallopt+0xf4>
    6884:	00 fc ff 11 	cmpne_i s0, s0, -1
    6888:	a0 00 00 f4 	bnz s0, 20 <mallopt+0xe8>
    688c:	23 40 00 88 	store_32 s1, 16(s3)
    6890:	02 00 00 f6 	b 8 <mallopt+0xe4>
    6894:	23 30 00 88 	store_32 s1, 12(s3)
    6898:	40 04 00 0f 	move s2, 1
    689c:	00 00 f1 c0 	move s0, s2
    68a0:	de 03 01 05 	add_i sp, sp, 64
    68a4:	1f 00 00 f0 	ret
    68a8:	03 10 00 a8 	load_32 s0, 4(s3)
    68ac:	00 80 60 c1 	cmpgt_u s0, s0, s1
    68b0:	60 ff ff f5 	bnz s0, -20 <mallopt+0xe8>
    68b4:	01 fc ff 05 	add_i s0, s1, -1
    68b8:	00 80 10 c0 	and s0, s0, s1
    68bc:	00 ff ff f5 	bnz s0, -32 <mallopt+0xe8>
    68c0:	23 20 00 88 	store_32 s1, 8(s3)
    68c4:	f5 ff ff f7 	b -44 <mallopt+0xe4>

00000000000068c8 malloc_usable_size:
    68c8:	20 00 f0 c0 	move s1, s0
    68cc:	00 00 00 0f 	move s0, 0
    68d0:	81 01 00 f2 	bz s1, 48 <malloc_usable_size+0x38>
    68d4:	21 f0 ff a9 	load_32 s1, -4(s1)
    68d8:	41 0c 00 01 	and s2, s1, 3
    68dc:	62 04 00 10 	cmpeq_i s3, s2, 1
    68e0:	03 01 00 f4 	bnz s3, 32 <malloc_usable_size+0x38>
    68e4:	42 00 00 10 	cmpeq_i s2, s2, 0
    68e8:	01 e0 ff 01 	and s0, s1, -8
    68ec:	62 00 00 f4 	bnz s2, 12 <malloc_usable_size+0x30>
    68f0:	20 10 00 0f 	move s1, 4
    68f4:	02 00 00 f6 	b 8 <malloc_usable_size+0x34>
    68f8:	20 20 00 0f 	move s1, 8
    68fc:	00 80 60 c0 	sub_i s0, s0, s1
    6900:	1f 00 00 f0 	ret

0000000000006904 dispose_chunk:
    6904:	de 03 ff 05 	add_i sp, sp, -64
    6908:	fe f3 00 88 	store_32 ra, 60(sp)
    690c:	60 10 00 a8 	load_32 s3, 4(s0)
    6910:	40 80 50 c0 	add_i s2, s0, s1
    6914:	83 04 00 01 	and s4, s3, 1
    6918:	04 12 00 f4 	bnz s4, 576 <dispose_chunk+0x254>
    691c:	80 00 00 a8 	load_32 s4, (s0)
    6920:	63 0c 00 01 	and s3, s3, 3
    6924:	a3 1c 00 f2 	bz s3, 916 <dispose_chunk+0x3b4>
    6928:	65 00 00 4f 	movehi s3, 5
    692c:	00 00 62 c0 	sub_i s0, s0, s4
    6930:	63 30 45 00 	or s3, s3, 4428
    6934:	c3 40 00 a8 	load_32 s6, 16(s3)
    6938:	a0 00 83 c1 	cmplt_u s5, s0, s6
    693c:	05 39 00 f4 	bnz s5, 1824 <dispose_chunk+0x758>
    6940:	a3 50 00 a8 	load_32 s5, 20(s3)
    6944:	24 80 50 c0 	add_i s1, s4, s1
    6948:	a5 00 00 c1 	cmpeq_i s5, s5, s0
    694c:	a5 03 00 f4 	bnz s5, 116 <dispose_chunk+0xbc>
    6950:	a4 fc 03 16 	cmpgt_u s5, s4, 255
    6954:	65 04 00 f4 	bnz s5, 140 <dispose_chunk+0xdc>
    6958:	e4 0c 00 0a 	shr s7, s4, 3
    695c:	80 20 00 a8 	load_32 s4, 8(s0)
    6960:	a7 0c 00 0b 	shl s5, s7, 3
    6964:	a3 80 52 c0 	add_i s5, s3, s5
    6968:	05 a1 00 05 	add_i s8, s5, 40
    696c:	a0 30 00 a8 	load_32 s5, 12(s0)
    6970:	24 01 04 c1 	cmpeq_i s9, s4, s8
    6974:	c9 00 00 f4 	bnz s9, 24 <dispose_chunk+0x88>
    6978:	26 01 62 c1 	cmpgt_u s9, s6, s4
    697c:	09 37 00 f4 	bnz s9, 1760 <dispose_chunk+0x758>
    6980:	24 31 00 a8 	load_32 s9, 12(s4)
    6984:	29 01 10 c1 	cmpne_i s9, s9, s0
    6988:	a9 36 00 f4 	bnz s9, 1748 <dispose_chunk+0x758>
    698c:	25 01 12 c1 	cmpne_i s9, s5, s4
    6990:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x94>
    6994:	29 00 00 f6 	b 164 <dispose_chunk+0x134>
    6998:	65 00 04 c1 	cmpeq_i s3, s5, s8
    699c:	c3 00 00 f4 	bnz s3, 24 <dispose_chunk+0xb0>
    69a0:	66 80 62 c1 	cmpgt_u s3, s6, s5
    69a4:	c3 35 00 f4 	bnz s3, 1720 <dispose_chunk+0x758>
    69a8:	65 20 00 a8 	load_32 s3, 8(s5)
    69ac:	63 00 10 c1 	cmpne_i s3, s3, s0
    69b0:	63 35 00 f4 	bnz s3, 1708 <dispose_chunk+0x758>
    69b4:	a4 30 00 88 	store_32 s5, 12(s4)
    69b8:	85 20 00 88 	store_32 s4, 8(s5)
    69bc:	67 00 00 f6 	b 412 <dispose_chunk+0x254>
    69c0:	82 10 00 a8 	load_32 s4, 4(s2)
    69c4:	a4 0c 00 01 	and s5, s4, 3
    69c8:	a5 0c 00 11 	cmpne_i s5, s5, 3
    69cc:	65 0c 00 f4 	bnz s5, 396 <dispose_chunk+0x254>
    69d0:	23 20 00 88 	store_32 s1, 8(s3)
    69d4:	64 f8 ff 01 	and s3, s4, -2
    69d8:	62 10 00 88 	store_32 s3, 4(s2)
    69dc:	bf 00 00 f6 	b 764 <dispose_chunk+0x3d4>
    69e0:	80 60 00 a8 	load_32 s4, 24(s0)
    69e4:	a0 30 00 a8 	load_32 s5, 12(s0)
    69e8:	e5 00 00 c1 	cmpeq_i s7, s5, s0
    69ec:	c7 01 00 f4 	bnz s7, 56 <dispose_chunk+0x120>
    69f0:	e0 20 00 a8 	load_32 s7, 8(s0)
    69f4:	c6 80 63 c1 	cmpgt_u s6, s6, s7
    69f8:	26 33 00 f4 	bnz s6, 1636 <dispose_chunk+0x758>
    69fc:	c7 30 00 a8 	load_32 s6, 12(s7)
    6a00:	c6 00 10 c1 	cmpne_i s6, s6, s0
    6a04:	c6 32 00 f4 	bnz s6, 1624 <dispose_chunk+0x758>
    6a08:	c5 20 00 a8 	load_32 s6, 8(s5)
    6a0c:	c6 00 10 c1 	cmpne_i s6, s6, s0
    6a10:	66 32 00 f4 	bnz s6, 1612 <dispose_chunk+0x758>
    6a14:	a7 30 00 88 	store_32 s5, 12(s7)
    6a18:	e5 20 00 88 	store_32 s7, 8(s5)
    6a1c:	e4 09 00 f2 	bz s4, 316 <dispose_chunk+0x254>
    6a20:	1d 00 00 f6 	b 116 <dispose_chunk+0x190>
    6a24:	00 51 00 a8 	load_32 s8, 20(s0)
    6a28:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x12c>
    6a2c:	0a 00 00 f6 	b 40 <dispose_chunk+0x150>
    6a30:	e0 50 00 05 	add_i s7, s0, 20
    6a34:	0b 00 00 f6 	b 44 <dispose_chunk+0x15c>
    6a38:	80 04 00 0f 	move s4, 1
    6a3c:	a3 00 00 a8 	load_32 s5, (s3)
    6a40:	84 80 b3 c0 	shl s4, s4, s7
    6a44:	84 fc ff 03 	xor s4, s4, -1
    6a48:	85 00 12 c0 	and s4, s5, s4
    6a4c:	83 00 00 88 	store_32 s4, (s3)
    6a50:	42 00 00 f6 	b 264 <dispose_chunk+0x254>
    6a54:	e0 40 00 05 	add_i s7, s0, 16
    6a58:	07 01 00 a8 	load_32 s8, (s7)
    6a5c:	48 2f 00 f2 	bz s8, 1512 <dispose_chunk+0x740>
    6a60:	a0 00 f4 c0 	move s5, s8
    6a64:	05 51 00 a8 	load_32 s8, 20(s5)
    6a68:	20 81 f3 c0 	move s9, s7
    6a6c:	e5 50 00 05 	add_i s7, s5, 20
    6a70:	88 ff ff f5 	bnz s8, -16 <dispose_chunk+0x15c>
    6a74:	05 41 00 a8 	load_32 s8, 16(s5)
    6a78:	e5 40 00 05 	add_i s7, s5, 16
    6a7c:	28 ff ff f5 	bnz s8, -28 <dispose_chunk+0x15c>
    6a80:	c6 80 64 c1 	cmpgt_u s6, s6, s9
    6a84:	c6 2e 00 f4 	bnz s6, 1496 <dispose_chunk+0x758>
    6a88:	c0 00 00 0f 	move s6, 0
    6a8c:	c9 00 00 88 	store_32 s6, (s9)
    6a90:	44 06 00 f2 	bz s4, 200 <dispose_chunk+0x254>
    6a94:	c0 70 00 a8 	load_32 s6, 28(s0)
    6a98:	e6 08 00 0b 	shl s7, s6, 2
    6a9c:	e3 80 53 c0 	add_i s7, s3, s7
    6aa0:	07 c1 04 a8 	load_32 s8, 304(s7)
    6aa4:	08 01 10 c1 	cmpne_i s8, s8, s0
    6aa8:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x1ac>
    6aac:	0c 00 00 f6 	b 48 <dispose_chunk+0x1d8>
    6ab0:	c3 40 00 a8 	load_32 s6, 16(s3)
    6ab4:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    6ab8:	26 2d 00 f4 	bnz s6, 1444 <dispose_chunk+0x758>
    6abc:	c4 40 00 a8 	load_32 s6, 16(s4)
    6ac0:	c6 00 00 c1 	cmpeq_i s6, s6, s0
    6ac4:	06 02 00 f4 	bnz s6, 64 <dispose_chunk+0x200>
    6ac8:	c0 50 00 0f 	move s6, 20
    6acc:	c4 00 53 c0 	add_i s6, s4, s6
    6ad0:	a6 00 00 88 	store_32 s5, (s6)
    6ad4:	25 04 00 f2 	bz s5, 132 <dispose_chunk+0x254>
    6ad8:	0f 00 00 f6 	b 60 <dispose_chunk+0x210>
    6adc:	e7 c0 04 05 	add_i s7, s7, 304
    6ae0:	a7 00 00 88 	store_32 s5, (s7)
    6ae4:	85 01 00 f4 	bnz s5, 48 <dispose_chunk+0x210>
    6ae8:	80 04 00 0f 	move s4, 1
    6aec:	a3 10 00 a8 	load_32 s5, 4(s3)
    6af0:	84 00 b3 c0 	shl s4, s4, s6
    6af4:	84 fc ff 03 	xor s4, s4, -1
    6af8:	85 00 12 c0 	and s4, s5, s4
    6afc:	83 10 00 88 	store_32 s4, 4(s3)
    6b00:	16 00 00 f6 	b 88 <dispose_chunk+0x254>
    6b04:	c0 40 00 0f 	move s6, 16
    6b08:	c4 00 53 c0 	add_i s6, s4, s6
    6b0c:	a6 00 00 88 	store_32 s5, (s6)
    6b10:	45 02 00 f2 	bz s5, 72 <dispose_chunk+0x254>
    6b14:	c3 40 00 a8 	load_32 s6, 16(s3)
    6b18:	e6 80 62 c1 	cmpgt_u s7, s6, s5
    6b1c:	07 2a 00 f4 	bnz s7, 1344 <dispose_chunk+0x758>
    6b20:	85 60 00 88 	store_32 s4, 24(s5)
    6b24:	80 40 00 a8 	load_32 s4, 16(s0)
    6b28:	a4 00 00 f2 	bz s4, 20 <dispose_chunk+0x238>
    6b2c:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    6b30:	66 29 00 f4 	bnz s6, 1324 <dispose_chunk+0x758>
    6b34:	85 40 00 88 	store_32 s4, 16(s5)
    6b38:	a4 60 00 88 	store_32 s5, 24(s4)
    6b3c:	80 50 00 a8 	load_32 s4, 20(s0)
    6b40:	c4 00 00 f2 	bz s4, 24 <dispose_chunk+0x254>
    6b44:	63 40 00 a8 	load_32 s3, 16(s3)
    6b48:	63 00 62 c1 	cmpgt_u s3, s3, s4
    6b4c:	83 28 00 f4 	bnz s3, 1296 <dispose_chunk+0x758>
    6b50:	85 50 00 88 	store_32 s4, 20(s5)
    6b54:	a4 60 00 88 	store_32 s5, 24(s4)
    6b58:	65 00 00 4f 	movehi s3, 5
    6b5c:	63 30 45 00 	or s3, s3, 4428
    6b60:	e3 40 00 a8 	load_32 s7, 16(s3)
    6b64:	82 80 83 c1 	cmplt_u s4, s2, s7
    6b68:	a4 27 00 f4 	bnz s4, 1268 <dispose_chunk+0x758>
    6b6c:	82 10 00 a8 	load_32 s4, 4(s2)
    6b70:	a4 08 00 01 	and s5, s4, 2
    6b74:	a5 04 00 f4 	bnz s5, 148 <dispose_chunk+0x304>
    6b78:	a3 60 00 a8 	load_32 s5, 24(s3)
    6b7c:	a5 00 11 c1 	cmpne_i s5, s5, s2
    6b80:	45 00 00 f4 	bnz s5, 8 <dispose_chunk+0x284>
    6b84:	43 00 00 f6 	b 268 <dispose_chunk+0x38c>
    6b88:	a3 50 00 a8 	load_32 s5, 20(s3)
    6b8c:	a5 00 11 c1 	cmpne_i s5, s5, s2
    6b90:	45 00 00 f4 	bnz s5, 8 <dispose_chunk+0x294>
    6b94:	4c 00 00 f6 	b 304 <dispose_chunk+0x3c0>
    6b98:	a4 fc 03 16 	cmpgt_u s5, s4, 255
    6b9c:	e5 0b 00 f4 	bnz s5, 380 <dispose_chunk+0x414>
    6ba0:	04 0d 00 0a 	shr s8, s4, 3
    6ba4:	a2 20 00 a8 	load_32 s5, 8(s2)
    6ba8:	c8 0c 00 0b 	shl s6, s8, 3
    6bac:	c3 00 53 c0 	add_i s6, s3, s6
    6bb0:	26 a1 00 05 	add_i s9, s6, 40
    6bb4:	c2 30 00 a8 	load_32 s6, 12(s2)
    6bb8:	45 81 04 c1 	cmpeq_i s10, s5, s9
    6bbc:	ca 00 00 f4 	bnz s10, 24 <dispose_chunk+0x2d0>
    6bc0:	47 81 62 c1 	cmpgt_u s10, s7, s5
    6bc4:	ca 24 00 f4 	bnz s10, 1176 <dispose_chunk+0x758>
    6bc8:	45 31 00 a8 	load_32 s10, 12(s5)
    6bcc:	4a 01 11 c1 	cmpne_i s10, s10, s2
    6bd0:	6a 24 00 f4 	bnz s10, 1164 <dispose_chunk+0x758>
    6bd4:	46 81 12 c1 	cmpne_i s10, s6, s5
    6bd8:	4a 00 00 f4 	bnz s10, 8 <dispose_chunk+0x2dc>
    6bdc:	c5 00 00 f6 	b 788 <dispose_chunk+0x5ec>
    6be0:	06 81 04 c1 	cmpeq_i s8, s6, s9
    6be4:	c8 00 00 f4 	bnz s8, 24 <dispose_chunk+0x2f8>
    6be8:	e7 00 63 c1 	cmpgt_u s7, s7, s6
    6bec:	87 23 00 f4 	bnz s7, 1136 <dispose_chunk+0x758>
    6bf0:	e6 20 00 a8 	load_32 s7, 8(s6)
    6bf4:	47 00 11 c1 	cmpne_i s2, s7, s2
    6bf8:	22 23 00 f4 	bnz s2, 1124 <dispose_chunk+0x758>
    6bfc:	c5 30 00 88 	store_32 s6, 12(s5)
    6c00:	a6 20 00 88 	store_32 s5, 8(s6)
    6c04:	03 01 00 f6 	b 1036 <dispose_chunk+0x70c>
    6c08:	84 f8 ff 01 	and s4, s4, -2
    6c0c:	82 10 00 88 	store_32 s4, 4(s2)
    6c10:	40 80 50 c0 	add_i s2, s0, s1
    6c14:	81 04 00 00 	or s4, s1, 1
    6c18:	80 10 00 88 	store_32 s4, 4(s0)
    6c1c:	22 00 00 88 	store_32 s1, (s2)
    6c20:	41 fc 03 16 	cmpgt_u s2, s1, 255
    6c24:	02 02 00 f4 	bnz s2, 64 <dispose_chunk+0x360>
    6c28:	21 0c 00 0a 	shr s1, s1, 3
    6c2c:	43 00 00 a8 	load_32 s2, (s3)
    6c30:	80 04 00 0f 	move s4, 1
    6c34:	a1 0c 00 0b 	shl s5, s1, 3
    6c38:	a3 80 52 c0 	add_i s5, s3, s5
    6c3c:	84 80 b0 c0 	shl s4, s4, s1
    6c40:	c2 00 12 c0 	and s6, s2, s4
    6c44:	25 a0 00 05 	add_i s1, s5, 40
    6c48:	46 00 00 f4 	bnz s6, 8 <dispose_chunk+0x34c>
    6c4c:	29 00 00 f6 	b 164 <dispose_chunk+0x3ec>
    6c50:	41 20 00 a8 	load_32 s2, 8(s1)
    6c54:	63 40 00 a8 	load_32 s3, 16(s3)
    6c58:	63 00 91 c1 	cmple_u s3, s3, s2
    6c5c:	03 05 00 f4 	bnz s3, 160 <dispose_chunk+0x3f8>
    6c60:	ff 00 00 f6 	b 1020 <dispose_chunk+0x758>
    6c64:	40 00 00 0f 	move s2, 0
    6c68:	a1 20 00 0a 	shr s5, s1, 8
    6c6c:	80 00 f1 c0 	move s4, s2
    6c70:	e5 0a 00 f2 	bz s5, 348 <dispose_chunk+0x4c8>
    6c74:	9f fc 00 4f 	movehi s4, 2047
    6c78:	84 fc 7f 00 	or s4, s4, 8191
    6c7c:	81 00 62 c1 	cmpgt_u s4, s1, s4
    6c80:	44 00 00 f4 	bnz s4, 8 <dispose_chunk+0x384>
    6c84:	36 00 00 f6 	b 216 <dispose_chunk+0x458>
    6c88:	80 7c 00 0f 	move s4, 31
    6c8c:	50 00 00 f6 	b 320 <dispose_chunk+0x4c8>
    6c90:	43 30 00 a8 	load_32 s2, 12(s3)
    6c94:	22 80 50 c0 	add_i s1, s2, s1
    6c98:	23 30 00 88 	store_32 s1, 12(s3)
    6c9c:	03 60 00 88 	store_32 s0, 24(s3)
    6ca0:	21 04 00 00 	or s1, s1, 1
    6ca4:	20 10 00 88 	store_32 s1, 4(s0)
    6ca8:	23 50 00 a8 	load_32 s1, 20(s3)
    6cac:	00 80 10 c1 	cmpne_i s0, s0, s1
    6cb0:	40 00 00 f4 	bnz s0, 8 <dispose_chunk+0x3b4>
    6cb4:	84 00 00 f6 	b 528 <dispose_chunk+0x5c0>
    6cb8:	fe f3 00 a8 	load_32 ra, 60(sp)
    6cbc:	de 03 01 05 	add_i sp, sp, 64
    6cc0:	1f 00 00 f0 	ret
    6cc4:	43 20 00 a8 	load_32 s2, 8(s3)
    6cc8:	22 80 50 c0 	add_i s1, s2, s1
    6ccc:	23 20 00 88 	store_32 s1, 8(s3)
    6cd0:	03 50 00 88 	store_32 s0, 20(s3)
    6cd4:	40 80 50 c0 	add_i s2, s0, s1
    6cd8:	61 04 00 00 	or s3, s1, 1
    6cdc:	60 10 00 88 	store_32 s3, 4(s0)
    6ce0:	22 00 00 88 	store_32 s1, (s2)
    6ce4:	fe f3 00 a8 	load_32 ra, 60(sp)
    6ce8:	de 03 01 05 	add_i sp, sp, 64
    6cec:	1f 00 00 f0 	ret
    6cf0:	42 00 02 c0 	or s2, s2, s4
    6cf4:	43 00 00 88 	store_32 s2, (s3)
    6cf8:	40 80 f0 c0 	move s2, s1
    6cfc:	01 20 00 88 	store_32 s0, 8(s1)
    6d00:	02 30 00 88 	store_32 s0, 12(s2)
    6d04:	40 20 00 88 	store_32 s2, 8(s0)
    6d08:	20 30 00 88 	store_32 s1, 12(s0)
    6d0c:	fe f3 00 a8 	load_32 ra, 60(sp)
    6d10:	de 03 01 05 	add_i sp, sp, 64
    6d14:	1f 00 00 f0 	ret
    6d18:	a2 60 00 a8 	load_32 s5, 24(s2)
    6d1c:	c2 30 00 a8 	load_32 s6, 12(s2)
    6d20:	06 01 01 c1 	cmpeq_i s8, s6, s2
    6d24:	c8 0d 00 f4 	bnz s8, 440 <dispose_chunk+0x5d8>
    6d28:	02 21 00 a8 	load_32 s8, 8(s2)
    6d2c:	e7 00 64 c1 	cmpgt_u s7, s7, s8
    6d30:	67 19 00 f4 	bnz s7, 812 <dispose_chunk+0x758>
    6d34:	e8 30 00 a8 	load_32 s7, 12(s8)
    6d38:	e7 00 11 c1 	cmpne_i s7, s7, s2
    6d3c:	07 19 00 f4 	bnz s7, 800 <dispose_chunk+0x758>
    6d40:	e6 20 00 a8 	load_32 s7, 8(s6)
    6d44:	e7 00 11 c1 	cmpne_i s7, s7, s2
    6d48:	a7 18 00 f4 	bnz s7, 788 <dispose_chunk+0x758>
    6d4c:	c8 30 00 88 	store_32 s6, 12(s8)
    6d50:	06 21 00 88 	store_32 s8, 8(s6)
    6d54:	e5 15 00 f2 	bz s5, 700 <dispose_chunk+0x70c>
    6d58:	7d 00 00 f6 	b 500 <dispose_chunk+0x648>
    6d5c:	9f 0c 00 4f 	movehi s4, 127
    6d60:	df 04 00 4f 	movehi s6, 63
    6d64:	fe 00 00 4f 	movehi s7, 30
    6d68:	84 00 7c 00 	or s4, s4, 7936
    6d6c:	85 00 52 c0 	add_i s4, s5, s4
    6d70:	c6 00 40 00 	or s6, s6, 4096
    6d74:	84 40 00 0a 	shr s4, s4, 16
    6d78:	84 20 00 01 	and s4, s4, 8
    6d7c:	a5 00 b2 c0 	shl s5, s5, s4
    6d80:	c5 00 53 c0 	add_i s6, s5, s6
    6d84:	c6 40 00 0a 	shr s6, s6, 16
    6d88:	c6 10 00 01 	and s6, s6, 4
    6d8c:	a5 00 b3 c0 	shl s5, s5, s6
    6d90:	86 00 02 c0 	or s4, s6, s4
    6d94:	e5 80 53 c0 	add_i s7, s5, s7
    6d98:	e7 40 00 0a 	shr s7, s7, 16
    6d9c:	c7 08 00 01 	and s6, s7, 2
    6da0:	e0 38 00 0f 	move s7, 14
    6da4:	84 00 03 c0 	or s4, s4, s6
    6da8:	a5 00 b3 c0 	shl s5, s5, s6
    6dac:	87 00 62 c0 	sub_i s4, s7, s4
    6db0:	a5 3c 00 0a 	shr s5, s5, 15
    6db4:	84 80 52 c0 	add_i s4, s4, s5
    6db8:	a4 1c 00 05 	add_i s5, s4, 7
    6dbc:	a1 80 a2 c0 	shr s5, s1, s5
    6dc0:	84 04 00 0b 	shl s4, s4, 1
    6dc4:	a5 04 00 01 	and s5, s5, 1
    6dc8:	85 00 02 c0 	or s4, s5, s4
    6dcc:	80 70 00 88 	store_32 s4, 28(s0)
    6dd0:	c4 08 00 0b 	shl s6, s4, 2
    6dd4:	40 50 00 88 	store_32 s2, 20(s0)
    6dd8:	e3 00 53 c0 	add_i s7, s3, s6
    6ddc:	40 40 00 88 	store_32 s2, 16(s0)
    6de0:	40 04 00 0f 	move s2, 1
    6de4:	a3 10 00 a8 	load_32 s5, 4(s3)
    6de8:	c2 00 b2 c0 	shl s6, s2, s4
    6dec:	47 c0 04 05 	add_i s2, s7, 304
    6df0:	05 01 13 c0 	and s8, s5, s6
    6df4:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x4f8>
    6df8:	08 00 00 f6 	b 32 <dispose_chunk+0x514>
    6dfc:	a2 00 00 a8 	load_32 s5, (s2)
    6e00:	c4 7c 00 10 	cmpeq_i s6, s4, 31
    6e04:	26 01 00 f4 	bnz s6, 36 <dispose_chunk+0x524>
    6e08:	40 64 00 0f 	move s2, 25
    6e0c:	84 04 00 0a 	shr s4, s4, 1
    6e10:	42 00 62 c0 	sub_i s2, s2, s4
    6e14:	06 00 00 f6 	b 24 <dispose_chunk+0x528>
    6e18:	25 00 03 c0 	or s1, s5, s6
    6e1c:	23 10 00 88 	store_32 s1, 4(s3)
    6e20:	02 00 00 88 	store_32 s0, (s2)
    6e24:	13 00 00 f6 	b 76 <dispose_chunk+0x56c>
    6e28:	40 00 00 0f 	move s2, 0
    6e2c:	81 00 b1 c0 	shl s4, s1, s2
    6e30:	40 80 f2 c0 	move s2, s5
    6e34:	a2 10 00 a8 	load_32 s5, 4(s2)
    6e38:	a5 e0 ff 01 	and s5, s5, -8
    6e3c:	a5 80 00 c1 	cmpeq_i s5, s5, s1
    6e40:	45 02 00 f4 	bnz s5, 72 <dispose_chunk+0x584>
    6e44:	a4 74 00 0a 	shr s5, s4, 29
    6e48:	84 04 00 0b 	shl s4, s4, 1
    6e4c:	a5 10 00 01 	and s5, s5, 4
    6e50:	c2 80 52 c0 	add_i s6, s2, s5
    6e54:	a6 40 00 a8 	load_32 s5, 16(s6)
    6e58:	c5 fe ff f5 	bnz s5, -40 <dispose_chunk+0x52c>
    6e5c:	63 40 00 a8 	load_32 s3, 16(s3)
    6e60:	26 40 00 05 	add_i s1, s6, 16
    6e64:	63 80 60 c1 	cmpgt_u s3, s3, s1
    6e68:	a3 0f 00 f4 	bnz s3, 500 <dispose_chunk+0x758>
    6e6c:	01 00 00 88 	store_32 s0, (s1)
    6e70:	40 60 00 88 	store_32 s2, 24(s0)
    6e74:	00 30 00 88 	store_32 s0, 12(s0)
    6e78:	00 20 00 88 	store_32 s0, 8(s0)
    6e7c:	fe f3 00 a8 	load_32 ra, 60(sp)
    6e80:	de 03 01 05 	add_i sp, sp, 64
    6e84:	1f 00 00 f0 	ret
    6e88:	22 20 00 a8 	load_32 s1, 8(s2)
    6e8c:	63 40 00 a8 	load_32 s3, 16(s3)
    6e90:	83 80 60 c1 	cmpgt_u s4, s3, s1
    6e94:	44 0e 00 f4 	bnz s4, 456 <dispose_chunk+0x758>
    6e98:	63 00 61 c1 	cmpgt_u s3, s3, s2
    6e9c:	03 0e 00 f4 	bnz s3, 448 <dispose_chunk+0x758>
    6ea0:	01 30 00 88 	store_32 s0, 12(s1)
    6ea4:	02 20 00 88 	store_32 s0, 8(s2)
    6ea8:	20 20 00 88 	store_32 s1, 8(s0)
    6eac:	20 00 00 0f 	move s1, 0
    6eb0:	40 30 00 88 	store_32 s2, 12(s0)
    6eb4:	20 60 00 88 	store_32 s1, 24(s0)
    6eb8:	fe f3 00 a8 	load_32 ra, 60(sp)
    6ebc:	de 03 01 05 	add_i sp, sp, 64
    6ec0:	1f 00 00 f0 	ret
    6ec4:	00 00 00 0f 	move s0, 0
    6ec8:	03 50 00 88 	store_32 s0, 20(s3)
    6ecc:	03 20 00 88 	store_32 s0, 8(s3)
    6ed0:	fe f3 00 a8 	load_32 ra, 60(sp)
    6ed4:	de 03 01 05 	add_i sp, sp, 64
    6ed8:	1f 00 00 f0 	ret
    6edc:	22 51 00 a8 	load_32 s9, 20(s2)
    6ee0:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x5e4>
    6ee4:	0a 00 00 f6 	b 40 <dispose_chunk+0x608>
    6ee8:	02 51 00 05 	add_i s8, s2, 20
    6eec:	0b 00 00 f6 	b 44 <dispose_chunk+0x614>
    6ef0:	40 04 00 0f 	move s2, 1
    6ef4:	a3 00 00 a8 	load_32 s5, (s3)
    6ef8:	42 00 b4 c0 	shl s2, s2, s8
    6efc:	42 fc ff 03 	xor s2, s2, -1
    6f00:	45 00 11 c0 	and s2, s5, s2
    6f04:	43 00 00 88 	store_32 s2, (s3)
    6f08:	42 00 00 f6 	b 264 <dispose_chunk+0x70c>
    6f0c:	02 41 00 05 	add_i s8, s2, 16
    6f10:	28 01 00 a8 	load_32 s9, (s8)
    6f14:	e9 09 00 f2 	bz s9, 316 <dispose_chunk+0x74c>
    6f18:	c0 80 f4 c0 	move s6, s9
    6f1c:	26 51 00 a8 	load_32 s9, 20(s6)
    6f20:	40 01 f4 c0 	move s10, s8
    6f24:	06 51 00 05 	add_i s8, s6, 20
    6f28:	89 ff ff f5 	bnz s9, -16 <dispose_chunk+0x614>
    6f2c:	26 41 00 a8 	load_32 s9, 16(s6)
    6f30:	06 41 00 05 	add_i s8, s6, 16
    6f34:	29 ff ff f5 	bnz s9, -28 <dispose_chunk+0x614>
    6f38:	e7 00 65 c1 	cmpgt_u s7, s7, s10
    6f3c:	07 09 00 f4 	bnz s7, 288 <dispose_chunk+0x758>
    6f40:	e0 00 00 0f 	move s7, 0
    6f44:	ea 00 00 88 	store_32 s7, (s10)
    6f48:	45 06 00 f2 	bz s5, 200 <dispose_chunk+0x70c>
    6f4c:	e2 70 00 a8 	load_32 s7, 28(s2)
    6f50:	07 09 00 0b 	shl s8, s7, 2
    6f54:	03 01 54 c0 	add_i s8, s3, s8
    6f58:	28 c1 04 a8 	load_32 s9, 304(s8)
    6f5c:	29 01 11 c1 	cmpne_i s9, s9, s2
    6f60:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x664>
    6f64:	0c 00 00 f6 	b 48 <dispose_chunk+0x690>
    6f68:	e3 40 00 a8 	load_32 s7, 16(s3)
    6f6c:	e7 80 62 c1 	cmpgt_u s7, s7, s5
    6f70:	67 07 00 f4 	bnz s7, 236 <dispose_chunk+0x758>
    6f74:	e5 40 00 a8 	load_32 s7, 16(s5)
    6f78:	e7 00 01 c1 	cmpeq_i s7, s7, s2
    6f7c:	07 02 00 f4 	bnz s7, 64 <dispose_chunk+0x6b8>
    6f80:	e0 50 00 0f 	move s7, 20
    6f84:	e5 80 53 c0 	add_i s7, s5, s7
    6f88:	c7 00 00 88 	store_32 s6, (s7)
    6f8c:	26 04 00 f2 	bz s6, 132 <dispose_chunk+0x70c>
    6f90:	0f 00 00 f6 	b 60 <dispose_chunk+0x6c8>
    6f94:	08 c1 04 05 	add_i s8, s8, 304
    6f98:	c8 00 00 88 	store_32 s6, (s8)
    6f9c:	86 01 00 f4 	bnz s6, 48 <dispose_chunk+0x6c8>
    6fa0:	40 04 00 0f 	move s2, 1
    6fa4:	a3 10 00 a8 	load_32 s5, 4(s3)
    6fa8:	42 80 b3 c0 	shl s2, s2, s7
    6fac:	42 fc ff 03 	xor s2, s2, -1
    6fb0:	45 00 11 c0 	and s2, s5, s2
    6fb4:	43 10 00 88 	store_32 s2, 4(s3)
    6fb8:	16 00 00 f6 	b 88 <dispose_chunk+0x70c>
    6fbc:	e0 40 00 0f 	move s7, 16
    6fc0:	e5 80 53 c0 	add_i s7, s5, s7
    6fc4:	c7 00 00 88 	store_32 s6, (s7)
    6fc8:	46 02 00 f2 	bz s6, 72 <dispose_chunk+0x70c>
    6fcc:	e3 40 00 a8 	load_32 s7, 16(s3)
    6fd0:	07 01 63 c1 	cmpgt_u s8, s7, s6
    6fd4:	48 04 00 f4 	bnz s8, 136 <dispose_chunk+0x758>
    6fd8:	a6 60 00 88 	store_32 s5, 24(s6)
    6fdc:	a2 40 00 a8 	load_32 s5, 16(s2)
    6fe0:	a5 00 00 f2 	bz s5, 20 <dispose_chunk+0x6f0>
    6fe4:	e7 80 62 c1 	cmpgt_u s7, s7, s5
    6fe8:	a7 03 00 f4 	bnz s7, 116 <dispose_chunk+0x758>
    6fec:	a6 40 00 88 	store_32 s5, 16(s6)
    6ff0:	c5 60 00 88 	store_32 s6, 24(s5)
    6ff4:	42 50 00 a8 	load_32 s2, 20(s2)
    6ff8:	c2 00 00 f2 	bz s2, 24 <dispose_chunk+0x70c>
    6ffc:	a3 40 00 a8 	load_32 s5, 16(s3)
    7000:	a5 00 61 c1 	cmpgt_u s5, s5, s2
    7004:	c5 02 00 f4 	bnz s5, 88 <dispose_chunk+0x758>
    7008:	46 50 00 88 	store_32 s2, 20(s6)
    700c:	c2 60 00 88 	store_32 s6, 24(s2)
    7010:	44 e0 ff 01 	and s2, s4, -8
    7014:	22 80 50 c0 	add_i s1, s2, s1
    7018:	40 80 50 c0 	add_i s2, s0, s1
    701c:	81 04 00 00 	or s4, s1, 1
    7020:	80 10 00 88 	store_32 s4, 4(s0)
    7024:	22 00 00 88 	store_32 s1, (s2)
    7028:	43 50 00 a8 	load_32 s2, 20(s3)
    702c:	40 00 11 c1 	cmpne_i s2, s0, s2
    7030:	82 df ff f5 	bnz s2, -1040 <dispose_chunk+0x31c>
    7034:	23 20 00 88 	store_32 s1, 8(s3)
    7038:	fe f3 00 a8 	load_32 ra, 60(sp)
    703c:	de 03 01 05 	add_i sp, sp, 64
    7040:	1f 00 00 f0 	ret
    7044:	a0 00 00 0f 	move s5, 0
    7048:	84 d8 ff f3 	bz s4, -1264 <dispose_chunk+0x254>
    704c:	92 fe ff f7 	b -1464 <dispose_chunk+0x190>
    7050:	c0 00 00 0f 	move s6, 0
    7054:	e5 fd ff f3 	bz s5, -68 <dispose_chunk+0x70c>
    7058:	bd ff ff f7 	b -268 <dispose_chunk+0x648>
    705c:	01 00 00 f8 	call 4 <abort>

0000000000007060 abort:
    7060:	de 03 ff 05 	add_i sp, sp, -64
    7064:	fe f3 00 88 	store_32 ra, 60(sp)
    7068:	00 00 00 4f 	movehi s0, 0
    706c:	00 60 0d 00 	or s0, s0, 856
    7070:	cb ec ff f9 	call -19668 <puts>
    7074:	00 00 e0 c3 	break

0000000000007078 abs:
    7078:	20 7c 00 09 	ashr s1, s0, 31
    707c:	00 80 50 c0 	add_i s0, s0, s1
    7080:	00 80 30 c0 	xor s0, s0, s1
    7084:	1f 00 00 f0 	ret

0000000000007088 atoi:
    7088:	20 00 f0 c0 	move s1, s0
    708c:	00 00 00 0f 	move s0, 0
    7090:	41 00 00 a2 	load_s8 s2, (s1)
    7094:	c2 01 00 f2 	bz s2, 56 <atoi+0x44>
    7098:	62 40 ff 05 	add_i s3, s2, -48
    709c:	63 24 00 16 	cmpgt_u s3, s3, 9
    70a0:	63 01 00 f4 	bnz s3, 44 <atoi+0x44>
    70a4:	00 00 00 0f 	move s0, 0
    70a8:	00 28 00 07 	mull_i s0, s0, 10
    70ac:	02 00 50 c0 	add_i s0, s2, s0
    70b0:	41 04 00 a2 	load_s8 s2, 1(s1)
    70b4:	00 40 ff 05 	add_i s0, s0, -48
    70b8:	a2 00 00 f2 	bz s2, 20 <atoi+0x44>
    70bc:	62 40 ff 05 	add_i s3, s2, -48
    70c0:	21 04 00 05 	add_i s1, s1, 1
    70c4:	63 28 00 18 	cmplt_u s3, s3, 10
    70c8:	03 ff ff f5 	bnz s3, -32 <atoi+0x20>
    70cc:	1f 00 00 f0 	ret

00000000000070d0 rand:
    70d0:	05 00 00 4f 	movehi s0, 5
    70d4:	52 c4 41 4f 	movehi s2, 134706
    70d8:	61 00 00 4f 	movehi s3, 1
    70dc:	20 30 40 00 	or s1, s0, 4108
    70e0:	42 b4 39 00 	or s2, s2, 3693
    70e4:	01 00 00 a8 	load_32 s0, (s1)
    70e8:	00 00 71 c0 	mull_i s0, s0, s2
    70ec:	43 e4 40 00 	or s2, s3, 4153
    70f0:	7f fc 7f 4f 	movehi s3, 262143
    70f4:	40 00 51 c0 	add_i s2, s0, s2
    70f8:	41 00 00 88 	store_32 s2, (s1)
    70fc:	03 fc 7f 00 	or s0, s3, 8191
    7100:	02 00 10 c0 	and s0, s2, s0
    7104:	1f 00 00 f0 	ret

0000000000007108 srand:
    7108:	25 00 00 4f 	movehi s1, 5
    710c:	21 30 40 00 	or s1, s1, 4108
    7110:	01 00 00 88 	store_32 s0, (s1)
    7114:	1f 00 00 f0 	ret

0000000000007118 bsearch:
    7118:	de 03 ff 05 	add_i sp, sp, -64
    711c:	1e f3 00 88 	store_32 s24, 60(sp)
    7120:	3e e3 00 88 	store_32 s25, 56(sp)
    7124:	5e d3 00 88 	store_32 s26, 52(sp)
    7128:	7e c3 00 88 	store_32 s27, 48(sp)
    712c:	fe b3 00 88 	store_32 ra, 44(sp)
    7130:	22 ff ff 05 	add_i s25, s2, -1
    7134:	9e a0 00 88 	store_32 s4, 40(sp)
    7138:	7e 90 00 88 	store_32 s3, 36(sp)
    713c:	3e 80 00 88 	store_32 s1, 32(sp)
    7140:	59 00 00 14 	cmplt_i s2, s25, 0
    7144:	1e 70 00 88 	store_32 s0, 28(sp)
    7148:	c2 03 00 f4 	bnz s2, 120 <bsearch+0xa8>
    714c:	40 03 00 0f 	move s26, 0
    7150:	5e 63 00 88 	store_32 s26, 24(sp)
    7154:	1a 80 5c c0 	add_i s0, s26, s25
    7158:	20 7c 00 0a 	shr s1, s0, 31
    715c:	00 80 50 c0 	add_i s0, s0, s1
    7160:	60 07 00 09 	ashr s27, s0, 1
    7164:	1e 90 00 a8 	load_32 s0, 36(sp)
    7168:	3e 80 00 a8 	load_32 s1, 32(sp)
    716c:	1b 00 70 c0 	mull_i s0, s27, s0
    7170:	01 03 50 c0 	add_i s24, s1, s0
    7174:	1e 70 00 a8 	load_32 s0, 28(sp)
    7178:	20 00 fc c0 	move s1, s24
    717c:	5e a0 00 a8 	load_32 s2, 40(sp)
    7180:	42 00 00 fc 	call s2
    7184:	00 02 00 f2 	bz s0, 64 <bsearch+0xac>
    7188:	00 00 00 14 	cmplt_i s0, s0, 0
    718c:	c0 00 00 f4 	bnz s0, 24 <bsearch+0x8c>
    7190:	40 00 00 f4 	bnz s0, 8 <bsearch+0x80>
    7194:	06 00 00 f6 	b 24 <bsearch+0x94>
    7198:	1a 80 5c c1 	cmple_i s0, s26, s25
    719c:	c0 fd ff f5 	bnz s0, -72 <bsearch+0x3c>
    71a0:	06 00 00 f6 	b 24 <bsearch+0xa0>
    71a4:	3b ff ff 05 	add_i s25, s27, -1
    71a8:	80 ff ff f5 	bnz s0, -16 <bsearch+0x80>
    71ac:	5b 07 00 05 	add_i s26, s27, 1
    71b0:	1a 80 5c c1 	cmple_i s0, s26, s25
    71b4:	00 fd ff f5 	bnz s0, -96 <bsearch+0x3c>
    71b8:	1e 63 00 a8 	load_32 s24, 24(sp)
    71bc:	02 00 00 f6 	b 8 <bsearch+0xac>
    71c0:	00 03 00 0f 	move s24, 0
    71c4:	00 00 fc c0 	move s0, s24
    71c8:	fe b3 00 a8 	load_32 ra, 44(sp)
    71cc:	7e c3 00 a8 	load_32 s27, 48(sp)
    71d0:	5e d3 00 a8 	load_32 s26, 52(sp)
    71d4:	3e e3 00 a8 	load_32 s25, 56(sp)
    71d8:	1e f3 00 a8 	load_32 s24, 60(sp)
    71dc:	de 03 01 05 	add_i sp, sp, 64
    71e0:	1f 00 00 f0 	ret

00000000000071e4 memcpy:
    71e4:	c0 00 f0 c0 	move s6, s0
    71e8:	60 fc 00 01 	and s3, s0, 63
    71ec:	81 fc 00 01 	and s4, s1, 63
    71f0:	a3 00 02 c1 	cmpeq_i s5, s3, s4
    71f4:	45 02 00 f2 	bz s5, 72 <copy_word_check>

00000000000071f8 copy_vector_lead_in:
    71f8:	80 fc 00 01 	and s4, s0, 63
    71fc:	04 01 00 f2 	bz s4, 32 <copy_vector>
    7200:	62 05 00 f2 	bz s2, 172 <copy_done>
    7204:	81 00 00 a0 	load_u8 s4, (s1)
    7208:	80 00 00 82 	store_8 s4, (s0)
    720c:	00 04 00 05 	add_i s0, s0, 1
    7210:	21 04 00 05 	add_i s1, s1, 1
    7214:	42 04 00 06 	sub_i s2, s2, 1
    7218:	f8 ff ff f7 	b -32 <copy_vector_lead_in>

000000000000721c copy_vector:
    721c:	82 00 01 18 	cmplt_u s4, s2, 64
    7220:	84 02 00 f4 	bnz s4, 80 <copy_words>
    7224:	01 00 00 ae 	load_v v0, (s1)
    7228:	00 00 00 8e 	store_v v0, (s0)
    722c:	00 00 01 05 	add_i s0, s0, 64
    7230:	21 00 01 05 	add_i s1, s1, 64
    7234:	42 00 01 06 	sub_i s2, s2, 64
    7238:	f9 ff ff f7 	b -28 <copy_vector>

000000000000723c copy_word_check:
    723c:	60 0c 00 01 	and s3, s0, 3
    7240:	81 0c 00 01 	and s4, s1, 3
    7244:	a3 00 02 c1 	cmpeq_i s5, s3, s4
    7248:	45 02 00 f2 	bz s5, 72 <copy_remain_bytes>

000000000000724c copy_word_lead_in:
    724c:	80 0c 00 01 	and s4, s0, 3
    7250:	04 01 00 f2 	bz s4, 32 <copy_words>
    7254:	c2 02 00 f2 	bz s2, 88 <copy_done>
    7258:	81 00 00 a0 	load_u8 s4, (s1)
    725c:	80 00 00 82 	store_8 s4, (s0)
    7260:	00 04 00 05 	add_i s0, s0, 1
    7264:	21 04 00 05 	add_i s1, s1, 1
    7268:	42 04 00 06 	sub_i s2, s2, 1
    726c:	f8 ff ff f7 	b -32 <copy_word_lead_in>

0000000000007270 copy_words:
    7270:	82 10 00 18 	cmplt_u s4, s2, 4
    7274:	e4 00 00 f4 	bnz s4, 28 <copy_remain_bytes>
    7278:	81 00 00 a8 	load_32 s4, (s1)
    727c:	80 00 00 88 	store_32 s4, (s0)
    7280:	00 10 00 05 	add_i s0, s0, 4
    7284:	21 10 00 05 	add_i s1, s1, 4
    7288:	42 10 00 06 	sub_i s2, s2, 4
    728c:	f9 ff ff f7 	b -28 <copy_words>

0000000000007290 copy_remain_bytes:
    7290:	e2 00 00 f2 	bz s2, 28 <copy_done>
    7294:	81 00 00 a0 	load_u8 s4, (s1)
    7298:	80 00 00 82 	store_8 s4, (s0)
    729c:	00 04 00 05 	add_i s0, s0, 1
    72a0:	21 04 00 05 	add_i s1, s1, 1
    72a4:	42 04 00 06 	sub_i s2, s2, 1
    72a8:	fa ff ff f7 	b -24 <copy_remain_bytes>

00000000000072ac copy_done:
    72ac:	00 00 f3 c0 	move s0, s6
    72b0:	1f 00 00 f0 	ret

00000000000072b4 memset:
    72b4:	60 fc 00 01 	and s3, s0, 63
    72b8:	81 fc 03 01 	and s4, s1, 255
    72bc:	03 04 00 f4 	bnz s3, 128 <memset+0x88>
    72c0:	62 04 01 18 	cmplt_u s3, s2, 65
    72c4:	c3 03 00 f4 	bnz s3, 120 <memset+0x88>
    72c8:	61 60 00 0b 	shl s3, s1, 24
    72cc:	a4 20 00 0b 	shl s5, s4, 8
    72d0:	63 00 02 c0 	or s3, s3, s4
    72d4:	63 80 02 c0 	or s3, s3, s5
    72d8:	a4 40 00 0b 	shl s5, s4, 16
    72dc:	63 80 02 c0 	or s3, s3, s5
    72e0:	00 80 f1 c4 	move v0, s3
    72e4:	60 00 f0 c0 	move s3, s0
    72e8:	42 00 ff 05 	add_i s2, s2, -64
    72ec:	03 00 00 8e 	store_v v0, (s3)
    72f0:	63 00 01 05 	add_i s3, s3, 64
    72f4:	a2 00 01 16 	cmpgt_u s5, s2, 64
    72f8:	85 ff ff f5 	bnz s5, -16 <memset+0x34>
    72fc:	a3 0c 00 01 	and s5, s3, 3
    7300:	65 02 00 f4 	bnz s5, 76 <memset+0x98>
    7304:	a2 14 00 18 	cmplt_u s5, s2, 5
    7308:	25 02 00 f4 	bnz s5, 68 <memset+0x98>
    730c:	a1 60 00 0b 	shl s5, s1, 24
    7310:	c4 20 00 0b 	shl s6, s4, 8
    7314:	a5 00 02 c0 	or s5, s5, s4
    7318:	84 40 00 0b 	shl s4, s4, 16
    731c:	a5 00 03 c0 	or s5, s5, s6
    7320:	85 00 02 c0 	or s4, s5, s4
    7324:	42 f0 ff 05 	add_i s2, s2, -4
    7328:	83 00 00 88 	store_32 s4, (s3)
    732c:	63 10 00 05 	add_i s3, s3, 4
    7330:	a2 10 00 16 	cmpgt_u s5, s2, 4
    7334:	85 ff ff f5 	bnz s5, -16 <memset+0x70>
    7338:	06 00 00 f6 	b 24 <memset+0x9c>
    733c:	60 00 f0 c0 	move s3, s0
    7340:	a3 0c 00 01 	and s5, s3, 3
    7344:	45 00 00 f4 	bnz s5, 8 <memset+0x98>
    7348:	ef ff ff f7 	b -68 <memset+0x50>
    734c:	c2 00 00 f2 	bz s2, 24 <memset+0xb0>
    7350:	83 04 00 05 	add_i s4, s3, 1
    7354:	23 00 00 82 	store_8 s1, (s3)
    7358:	42 fc ff 05 	add_i s2, s2, -1
    735c:	60 00 f2 c0 	move s3, s4
    7360:	82 ff ff f5 	bnz s2, -16 <memset+0x9c>
    7364:	1f 00 00 f0 	ret

0000000000007368 vfprintf:
    7368:	de 03 fd 05 	add_i sp, sp, -192
    736c:	1e f3 02 88 	store_32 s24, 188(sp)
    7370:	3e e3 02 88 	store_32 s25, 184(sp)
    7374:	5e d3 02 88 	store_32 s26, 180(sp)
    7378:	7e c3 02 88 	store_32 s27, 176(sp)
    737c:	fe b3 02 88 	store_32 ra, 172(sp)
    7380:	40 83 f0 c0 	move s26, s1
    7384:	5e a0 02 88 	store_32 s2, 168(sp)
    7388:	3a 00 00 a0 	load_u8 s1, (s26)
    738c:	60 03 f0 c0 	move s27, s0
    7390:	61 3f 00 f2 	bz s1, 2028 <vfprintf+0x814>
    7394:	00 00 00 4f 	movehi s0, 0
    7398:	40 04 00 0f 	move s2, 1
    739c:	5e c0 00 88 	store_32 s2, 48(sp)
    73a0:	40 94 00 0f 	move s2, 37
    73a4:	5e a0 00 88 	store_32 s2, 40(sp)
    73a8:	00 93 0f 00 	or s24, s0, 996
    73ac:	00 00 00 4f 	movehi s0, 0
    73b0:	80 00 00 0f 	move s4, 0
    73b4:	60 70 04 00 	or s3, s0, 284
    73b8:	00 14 00 0f 	move s0, 5
    73bc:	1e d0 00 88 	store_32 s0, 52(sp)
    73c0:	00 08 00 0f 	move s0, 2
    73c4:	1e b0 00 88 	store_32 s0, 44(sp)
    73c8:	00 10 00 0f 	move s0, 4
    73cc:	1e f0 00 88 	store_32 s0, 60(sp)
    73d0:	00 0c 00 0f 	move s0, 3
    73d4:	1e 90 00 88 	store_32 s0, 36(sp)
    73d8:	9e 10 01 88 	store_32 s4, 68(sp)
    73dc:	9e 20 01 88 	store_32 s4, 72(sp)
    73e0:	20 03 f2 c0 	move s25, s4
    73e4:	9e 30 01 88 	store_32 s4, 76(sp)
    73e8:	00 00 f2 c0 	move s0, s4
    73ec:	7e 63 01 88 	store_32 s27, 88(sp)
    73f0:	9e 40 01 88 	store_32 s4, 80(sp)
    73f4:	1e 03 01 88 	store_32 s24, 64(sp)
    73f8:	7e 50 01 88 	store_32 s3, 84(sp)
    73fc:	46 01 00 f6 	b 1304 <vfprintf+0x5ac>
    7400:	1e f0 00 a8 	load_32 s0, 60(sp)
    7404:	3a 00 00 a0 	load_u8 s1, (s26)
    7408:	61 28 00 f4 	bnz s1, 1292 <vfprintf+0x5ac>
    740c:	dc 01 00 f6 	b 1904 <vfprintf+0x814>
    7410:	1e d0 00 a8 	load_32 s0, 52(sp)
    7414:	1e 03 01 a8 	load_32 s24, 64(sp)
    7418:	7e 50 01 a8 	load_32 s3, 84(sp)
    741c:	3a 00 00 a0 	load_u8 s1, (s26)
    7420:	a1 27 00 f4 	bnz s1, 1268 <vfprintf+0x5ac>
    7424:	d6 01 00 f6 	b 1880 <vfprintf+0x814>
    7428:	1e b0 00 a8 	load_32 s0, 44(sp)
    742c:	60 80 fc c0 	move s3, s25
    7430:	3e 83 01 a8 	load_32 s25, 96(sp)
    7434:	3a 00 00 a0 	load_u8 s1, (s26)
    7438:	e1 26 00 f4 	bnz s1, 1244 <vfprintf+0x5ac>
    743c:	d0 01 00 f6 	b 1856 <vfprintf+0x814>
    7440:	3e 83 01 88 	store_32 s25, 96(sp)
    7444:	20 00 00 4f 	movehi s1, 0
    7448:	1e a0 02 a8 	load_32 s0, 168(sp)
    744c:	21 70 0f 00 	or s1, s1, 988
    7450:	00 0c 00 05 	add_i s0, s0, 3
    7454:	00 f0 ff 01 	and s0, s0, -4
    7458:	40 10 00 05 	add_i s2, s0, 4
    745c:	5e a0 02 88 	store_32 s2, 168(sp)
    7460:	40 00 00 a8 	load_32 s2, (s0)
    7464:	3e 90 01 88 	store_32 s1, 100(sp)
    7468:	01 00 00 a8 	load_32 s0, (s1)
    746c:	27 00 00 4f 	movehi s1, 7
    7470:	21 ff 7f 00 	or s25, s1, 8191
    7474:	02 00 e0 c2 	cmplt_f s0, s2, s0
    7478:	00 80 1c c1 	cmpne_i s0, s0, s25
    747c:	00 01 00 f4 	bnz s0, 32 <vfprintf+0x134>
    7480:	20 80 fd c0 	move s1, s27
    7484:	5e 70 01 88 	store_32 s2, 92(sp)
    7488:	00 b4 00 0f 	move s0, 45
    748c:	29 eb ff f9 	call -21340 <fputc>
    7490:	5e 70 01 a8 	load_32 s2, 92(sp)
    7494:	00 00 80 4f 	movehi s0, 262144
    7498:	42 00 30 c0 	xor s2, s2, s0
    749c:	20 00 b1 c1 	ftoi s1, s2
    74a0:	5e e3 00 88 	store_32 s26, 56(sp)
    74a4:	5e 70 01 88 	store_32 s2, 92(sp)
    74a8:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x148>
    74ac:	ec 00 00 f6 	b 944 <vfprintf+0x4f4>
    74b0:	3e 80 00 88 	store_32 s1, 32(sp)
    74b4:	01 04 00 14 	cmplt_i s0, s1, 1
    74b8:	00 83 fd c0 	move s24, s27
    74bc:	60 03 00 f4 	bnz s0, 108 <vfprintf+0x1c0>
    74c0:	3e 80 00 a8 	load_32 s1, 32(sp)
    74c4:	60 53 00 0f 	move s27, 20
    74c8:	46 cc cc 4f 	movehi s2, 419430
    74cc:	5e a3 01 05 	add_i s26, sp, 104
    74d0:	7b ff ff 05 	add_i s27, s27, -1
    74d4:	42 34 33 00 	or s2, s2, 3277
    74d8:	41 00 81 c0 	mulh_u s2, s1, s2
    74dc:	9a 80 5d c0 	add_i s4, s26, s27
    74e0:	a1 24 00 16 	cmpgt_u s5, s1, 9
    74e4:	42 0c 00 0a 	shr s2, s2, 3
    74e8:	62 28 00 07 	mull_i s3, s2, 10
    74ec:	61 80 61 c0 	sub_i s3, s1, s3
    74f0:	63 c0 00 00 	or s3, s3, 48
    74f4:	64 00 00 82 	store_8 s3, (s4)
    74f8:	20 00 f1 c0 	move s1, s2
    74fc:	65 fe ff f5 	bnz s5, -52 <vfprintf+0x160>
    7500:	1e 63 01 a8 	load_32 s24, 88(sp)
    7504:	3b 4c 00 16 	cmpgt_u s1, s27, 19
    7508:	01 01 00 f4 	bnz s1, 32 <vfprintf+0x1c0>
    750c:	3a 80 5d c0 	add_i s1, s26, s27
    7510:	7b 07 00 05 	add_i s27, s27, 1
    7514:	01 00 00 a2 	load_s8 s0, (s1)
    7518:	20 00 fc c0 	move s1, s24
    751c:	05 eb ff f9 	call -21484 <fputc>
    7520:	3b 50 00 18 	cmplt_u s1, s27, 20
    7524:	41 ff ff f5 	bnz s1, -24 <vfprintf+0x1a4>
    7528:	60 03 fc c0 	move s27, s24
    752c:	1e 03 01 a8 	load_32 s24, 64(sp)
    7530:	1e 80 00 a8 	load_32 s0, 32(sp)
    7534:	cf 00 00 f6 	b 828 <vfprintf+0x508>
    7538:	60 2b 00 0f 	move s27, 10
    753c:	3e 20 01 a8 	load_32 s1, 72(sp)
    7540:	3e 83 01 88 	store_32 s25, 96(sp)
    7544:	21 40 00 01 	and s1, s1, 16
    7548:	a1 2a 00 f2 	bz s1, 1364 <vfprintf+0x734>
    754c:	1e a0 02 a8 	load_32 s0, 168(sp)
    7550:	00 0c 00 05 	add_i s0, s0, 3
    7554:	00 f0 ff 01 	and s0, s0, -4
    7558:	20 10 00 05 	add_i s1, s0, 4
    755c:	3e a0 02 88 	store_32 s1, 168(sp)
    7560:	00 03 00 a8 	load_32 s24, (s0)
    7564:	20 20 00 05 	add_i s1, s0, 8
    7568:	3e a0 02 88 	store_32 s1, 168(sp)
    756c:	20 13 00 a8 	load_32 s25, 4(s0)
    7570:	1a 00 00 a0 	load_u8 s0, (s26)
    7574:	7e 90 01 88 	store_32 s3, 100(sp)
    7578:	20 a4 01 10 	cmpeq_i s1, s0, 105
    757c:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x21c>
    7580:	56 01 00 f6 	b 1368 <vfprintf+0x770>
    7584:	19 fc ff 12 	cmpgt_i s0, s25, -1
    7588:	a0 0a 00 f4 	bnz s0, 340 <vfprintf+0x374>
    758c:	38 00 00 11 	cmpne_i s1, s24, 0
    7590:	00 00 00 0f 	move s0, 0
    7594:	61 09 00 f4 	bnz s1, 300 <vfprintf+0x358>
    7598:	20 00 f0 c0 	move s1, s0
    759c:	4a 00 00 f6 	b 296 <vfprintf+0x35c>
    75a0:	1e a0 02 a8 	load_32 s0, 168(sp)
    75a4:	20 03 00 0f 	move s25, 0
    75a8:	00 0c 00 05 	add_i s0, s0, 3
    75ac:	00 f0 ff 01 	and s0, s0, -4
    75b0:	20 10 00 05 	add_i s1, s0, 4
    75b4:	3e a0 02 88 	store_32 s1, 168(sp)
    75b8:	00 03 00 a8 	load_32 s24, (s0)
    75bc:	1a 00 00 a0 	load_u8 s0, (s26)
    75c0:	7e 90 01 88 	store_32 s3, 100(sp)
    75c4:	20 a4 01 10 	cmpeq_i s1, s0, 105
    75c8:	e1 fd ff f5 	bnz s1, -68 <vfprintf+0x21c>
    75cc:	43 01 00 f6 	b 1292 <vfprintf+0x770>
    75d0:	20 23 00 0f 	move s25, 8
    75d4:	3e 13 01 88 	store_32 s25, 68(sp)
    75d8:	1f 01 00 f6 	b 1148 <vfprintf+0x6ec>
    75dc:	1e a0 02 a8 	load_32 s0, 168(sp)
    75e0:	00 0c 00 05 	add_i s0, s0, 3
    75e4:	00 f0 ff 01 	and s0, s0, -4
    75e8:	20 10 00 05 	add_i s1, s0, 4
    75ec:	3e a0 02 88 	store_32 s1, 168(sp)
    75f0:	00 00 00 a8 	load_32 s0, (s0)
    75f4:	20 80 fd c0 	move s1, s27
    75f8:	ce ea ff f9 	call -21704 <fputc>
    75fc:	7e 50 01 a8 	load_32 s3, 84(sp)
    7600:	5a 07 00 05 	add_i s26, s26, 1
    7604:	1e 40 01 a8 	load_32 s0, 80(sp)
    7608:	3a 00 00 a0 	load_u8 s1, (s26)
    760c:	41 18 00 f4 	bnz s1, 776 <vfprintf+0x5ac>
    7610:	5b 01 00 f6 	b 1388 <vfprintf+0x814>
    7614:	3e 83 01 88 	store_32 s25, 96(sp)
    7618:	60 03 fd c0 	move s27, s26
    761c:	1e a0 02 a8 	load_32 s0, 168(sp)
    7620:	00 0c 00 05 	add_i s0, s0, 3
    7624:	00 f0 ff 01 	and s0, s0, -4
    7628:	20 10 00 05 	add_i s1, s0, 4
    762c:	3e a0 02 88 	store_32 s1, 168(sp)
    7630:	3e 33 01 a8 	load_32 s25, 76(sp)
    7634:	40 03 00 a8 	load_32 s26, (s0)
    7638:	39 00 00 10 	cmpeq_i s1, s25, 0
    763c:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x2dc>
    7640:	03 00 00 f6 	b 12 <vfprintf+0x2e4>
    7644:	1f fc 7f 4f 	movehi s0, 262143
    7648:	20 ff 7f 00 	or s25, s0, 8191
    764c:	00 03 00 0f 	move s24, 0
    7650:	19 04 00 14 	cmplt_i s0, s25, 1
    7654:	40 01 00 f4 	bnz s0, 40 <vfprintf+0x314>
    7658:	1a 00 00 a2 	load_s8 s0, (s26)
    765c:	00 01 00 f2 	bz s0, 32 <vfprintf+0x314>
    7660:	3e 60 01 a8 	load_32 s1, 88(sp)
    7664:	5a 07 00 05 	add_i s26, s26, 1
    7668:	b2 ea ff f9 	call -21816 <fputc>
    766c:	18 07 00 05 	add_i s24, s24, 1
    7670:	7e 50 01 a8 	load_32 s3, 84(sp)
    7674:	18 80 4c c1 	cmplt_i s0, s24, s25
    7678:	00 ff ff f5 	bnz s0, -32 <vfprintf+0x2f0>
    767c:	5e 83 01 a8 	load_32 s26, 96(sp)
    7680:	1a 80 4c c1 	cmplt_i s0, s26, s25
    7684:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x324>
    7688:	40 83 fc c0 	move s26, s25
    768c:	18 00 3d c1 	cmpge_i s0, s24, s26
    7690:	a0 13 00 f4 	bnz s0, 628 <vfprintf+0x59c>
    7694:	3e 63 01 a8 	load_32 s25, 88(sp)
    7698:	00 80 00 0f 	move s0, 32
    769c:	20 80 fc c0 	move s1, s25
    76a0:	a4 ea ff f9 	call -21872 <fputc>
    76a4:	18 07 00 05 	add_i s24, s24, 1
    76a8:	18 00 4d c1 	cmplt_i s0, s24, s26
    76ac:	60 ff ff f5 	bnz s0, -20 <vfprintf+0x330>
    76b0:	40 83 fd c0 	move s26, s27
    76b4:	60 83 fc c0 	move s27, s25
    76b8:	1e 03 01 a8 	load_32 s24, 64(sp)
    76bc:	8b 00 00 f6 	b 556 <vfprintf+0x580>
    76c0:	20 04 00 0f 	move s1, 1
    76c4:	40 80 6c c0 	sub_i s2, s0, s25
    76c8:	00 03 6c c0 	sub_i s24, s0, s24
    76cc:	00 b4 00 0f 	move s0, 45
    76d0:	22 83 60 c0 	sub_i s25, s2, s1
    76d4:	3e 60 01 a8 	load_32 s1, 88(sp)
    76d8:	96 ea ff f9 	call -21928 <fputc>
    76dc:	00 00 fc c0 	move s0, s24
    76e0:	20 80 fc c0 	move s1, s25
    76e4:	40 80 fd c0 	move s2, s27
    76e8:	7e 90 01 a8 	load_32 s3, 100(sp)
    76ec:	2e 09 00 f8 	call 9400 <__umoddi3>
    76f0:	20 00 00 4f 	movehi s1, 0
    76f4:	5e 90 01 a8 	load_32 s2, 100(sp)
    76f8:	21 1c 0d 00 	or s1, s1, 839
    76fc:	3e 70 01 88 	store_32 s1, 92(sp)
    7700:	01 00 50 c0 	add_i s0, s1, s0
    7704:	22 80 0c c1 	cmpeq_i s1, s2, s25
    7708:	00 00 00 a0 	load_u8 s0, (s0)
    770c:	1e 9c 02 82 	store_8 s0, 167(sp)
    7710:	c1 00 00 f4 	bnz s1, 24 <vfprintf+0x3c0>
    7714:	02 80 6c c1 	cmpgt_u s0, s2, s25
    7718:	5e e3 00 88 	store_32 s26, 56(sp)
    771c:	40 ff 00 0f 	move s26, 63
    7720:	20 04 00 f4 	bnz s0, 132 <vfprintf+0x43c>
    7724:	05 00 00 f6 	b 20 <vfprintf+0x3d0>
    7728:	1b 00 6c c1 	cmpgt_u s0, s27, s24
    772c:	5e e3 00 88 	store_32 s26, 56(sp)
    7730:	40 ff 00 0f 	move s26, 63
    7734:	80 03 00 f4 	bnz s0, 112 <vfprintf+0x43c>
    7738:	00 00 fc c0 	move s0, s24
    773c:	20 80 fc c0 	move s1, s25
    7740:	40 80 fd c0 	move s2, s27
    7744:	7e 90 01 a8 	load_32 s3, 100(sp)
    7748:	65 06 00 f8 	call 6548 <__udivdi3>
    774c:	00 03 f0 c0 	move s24, s0
    7750:	20 83 f0 c0 	move s25, s1
    7754:	40 80 fd c0 	move s2, s27
    7758:	7e 90 01 a8 	load_32 s3, 100(sp)
    775c:	5a ff ff 05 	add_i s26, s26, -1
    7760:	11 09 00 f8 	call 9284 <__umoddi3>
    7764:	7e 90 01 a8 	load_32 s3, 100(sp)
    7768:	3e a0 01 05 	add_i s1, sp, 104
    776c:	5e 70 01 a8 	load_32 s2, 92(sp)
    7770:	21 00 5d c0 	add_i s1, s1, s26
    7774:	02 00 50 c0 	add_i s0, s2, s0
    7778:	43 80 0c c1 	cmpeq_i s2, s3, s25
    777c:	00 00 00 a0 	load_u8 s0, (s0)
    7780:	01 00 00 82 	store_8 s0, (s1)
    7784:	a2 00 00 f4 	bnz s2, 20 <vfprintf+0x430>
    7788:	03 80 6c c1 	cmpgt_u s0, s3, s25
    778c:	c0 00 00 f4 	bnz s0, 24 <vfprintf+0x43c>
    7790:	5a fd ff f5 	bnz s26, -88 <vfprintf+0x3d0>
    7794:	04 00 00 f6 	b 16 <vfprintf+0x43c>
    7798:	1b 00 6c c1 	cmpgt_u s0, s27, s24
    779c:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x43c>
    77a0:	fc ff ff f7 	b -16 <vfprintf+0x428>
    77a4:	1e 10 01 a8 	load_32 s0, 68(sp)
    77a8:	00 20 00 01 	and s0, s0, 8
    77ac:	00 00 00 10 	cmpeq_i s0, s0, 0
    77b0:	60 00 00 f4 	bnz s0, 12 <vfprintf+0x454>
    77b4:	00 c0 00 0f 	move s0, 48
    77b8:	02 00 00 f6 	b 8 <vfprintf+0x458>
    77bc:	00 80 00 0f 	move s0, 32
    77c0:	40 00 01 0f 	move s2, 64
    77c4:	7e 63 01 a8 	load_32 s27, 88(sp)
    77c8:	22 03 6d c0 	sub_i s25, s2, s26
    77cc:	5e 80 01 a8 	load_32 s2, 96(sp)
    77d0:	59 00 31 c1 	cmpge_i s2, s25, s2
    77d4:	82 01 00 f4 	bnz s2, 48 <vfprintf+0x49c>
    77d8:	00 83 fd c0 	move s24, s27
    77dc:	20 00 fc c0 	move s1, s24
    77e0:	60 03 f0 c0 	move s27, s0
    77e4:	53 ea ff f9 	call -22196 <fputc>
    77e8:	00 80 fd c0 	move s0, s27
    77ec:	60 03 fc c0 	move s27, s24
    77f0:	5e 80 01 a8 	load_32 s2, 96(sp)
    77f4:	39 07 00 05 	add_i s25, s25, 1
    77f8:	59 00 41 c1 	cmplt_i s2, s25, s2
    77fc:	e2 fe ff f5 	bnz s2, -36 <vfprintf+0x470>
    7800:	3e 83 01 a8 	load_32 s25, 96(sp)
    7804:	1e 33 01 a8 	load_32 s24, 76(sp)
    7808:	19 00 3c c1 	cmpge_i s0, s25, s24
    780c:	e0 00 00 f4 	bnz s0, 28 <vfprintf+0x4c0>
    7810:	00 c0 00 0f 	move s0, 48
    7814:	20 80 fd c0 	move s1, s27
    7818:	46 ea ff f9 	call -22248 <fputc>
    781c:	39 07 00 05 	add_i s25, s25, 1
    7820:	19 00 4c c1 	cmplt_i s0, s25, s24
    7824:	60 ff ff f5 	bnz s0, -20 <vfprintf+0x4a8>
    7828:	1e 03 01 a8 	load_32 s24, 64(sp)
    782c:	1a fc 00 12 	cmpgt_i s0, s26, 63
    7830:	20 01 00 f4 	bnz s0, 36 <vfprintf+0x4ec>
    7834:	1e a0 01 05 	add_i s0, sp, 104
    7838:	00 00 5d c0 	add_i s0, s0, s26
    783c:	5a 07 00 05 	add_i s26, s26, 1
    7840:	00 00 00 a2 	load_s8 s0, (s0)
    7844:	20 80 fd c0 	move s1, s27
    7848:	3a ea ff f9 	call -22296 <fputc>
    784c:	1a 00 01 18 	cmplt_u s0, s26, 64
    7850:	20 ff ff f5 	bnz s0, -28 <vfprintf+0x4cc>
    7854:	5e e3 00 a8 	load_32 s26, 56(sp)
    7858:	24 00 00 f6 	b 144 <vfprintf+0x580>
    785c:	40 83 f0 c0 	move s26, s1
    7860:	00 c0 00 0f 	move s0, 48
    7864:	20 80 fd c0 	move s1, s27
    7868:	32 ea ff f9 	call -22328 <fputc>
    786c:	00 00 fd c0 	move s0, s26
    7870:	40 03 a0 c2 	itof s26, s0
    7874:	00 b8 00 0f 	move s0, 46
    7878:	20 80 fd c0 	move s1, s27
    787c:	2d ea ff f9 	call -22348 <fputc>
    7880:	7e 33 01 a8 	load_32 s27, 76(sp)
    7884:	1b 00 00 12 	cmpgt_i s0, s27, 0
    7888:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x528>
    788c:	60 1f 00 0f 	move s27, 7
    7890:	1e 70 01 a8 	load_32 s0, 92(sp)
    7894:	40 03 1d c2 	sub_f s26, s0, s26
    7898:	00 00 00 4f 	movehi s0, 0
    789c:	00 80 0f 00 	or s0, s0, 992
    78a0:	00 00 00 a8 	load_32 s0, (s0)
    78a4:	1a 00 20 c2 	mul_f s0, s26, s0
    78a8:	20 00 b0 c1 	ftoi s1, s0
    78ac:	40 80 a0 c2 	itof s2, s1
    78b0:	40 03 11 c2 	sub_f s26, s0, s2
    78b4:	01 c0 00 05 	add_i s0, s1, 48
    78b8:	3e 60 01 a8 	load_32 s1, 88(sp)
    78bc:	1d ea ff f9 	call -22412 <fputc>
    78c0:	1e 90 01 a8 	load_32 s0, 100(sp)
    78c4:	00 00 00 a8 	load_32 s0, (s0)
    78c8:	1a 00 c0 c2 	cmpgt_f s0, s26, s0
    78cc:	00 80 1c c1 	cmpne_i s0, s0, s25
    78d0:	80 00 00 f4 	bnz s0, 16 <vfprintf+0x578>
    78d4:	1b 00 00 12 	cmpgt_i s0, s27, 0
    78d8:	7b ff ff 05 	add_i s27, s27, -1
    78dc:	e0 fd ff f5 	bnz s0, -68 <vfprintf+0x530>
    78e0:	5e e3 00 a8 	load_32 s26, 56(sp)
    78e4:	7e 63 01 a8 	load_32 s27, 88(sp)
    78e8:	7e 50 01 a8 	load_32 s3, 84(sp)
    78ec:	3e 83 01 a8 	load_32 s25, 96(sp)
    78f0:	5a 07 00 05 	add_i s26, s26, 1
    78f4:	1e 40 01 a8 	load_32 s0, 80(sp)
    78f8:	3a 00 00 a0 	load_u8 s1, (s26)
    78fc:	c1 00 00 f4 	bnz s1, 24 <vfprintf+0x5ac>
    7900:	9f 00 00 f6 	b 636 <vfprintf+0x814>
    7904:	40 83 fd c0 	move s26, s27
    7908:	7e 63 01 a8 	load_32 s27, 88(sp)
    790c:	1e 03 01 a8 	load_32 s24, 64(sp)
    7910:	f7 ff ff f7 	b -36 <vfprintf+0x584>
    7914:	40 14 00 16 	cmpgt_u s2, s0, 5
    7918:	e2 12 00 f4 	bnz s2, 604 <vfprintf+0x80c>
    791c:	00 08 00 0b 	shl s0, s0, 2
    7920:	00 00 5c c0 	add_i s0, s0, s24
    7924:	00 00 00 a8 	load_32 s0, (s0)
    7928:	00 00 00 f0 	b s0
    792c:	01 fc 03 01 	and s0, s1, 255
    7930:	5a 07 00 05 	add_i s26, s26, 1
    7934:	00 94 00 10 	cmpeq_i s0, s0, 37
    7938:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x5d8>
    793c:	6a 00 00 f6 	b 424 <vfprintf+0x77c>
    7940:	1e c0 00 a8 	load_32 s0, 48(sp)
    7944:	3e 40 01 a8 	load_32 s1, 80(sp)
    7948:	3e 30 01 88 	store_32 s1, 76(sp)
    794c:	20 83 f0 c0 	move s25, s1
    7950:	3e 20 01 88 	store_32 s1, 72(sp)
    7954:	3e 10 01 88 	store_32 s1, 68(sp)
    7958:	3a 00 00 a0 	load_u8 s1, (s26)
    795c:	c1 fd ff f5 	bnz s1, -72 <vfprintf+0x5ac>
    7960:	87 00 00 f6 	b 540 <vfprintf+0x814>
    7964:	01 fc 03 01 	and s0, s1, 255
    7968:	00 94 00 11 	cmpne_i s0, s0, 37
    796c:	c0 0c 00 f4 	bnz s0, 408 <vfprintf+0x79c>
    7970:	5a 07 00 05 	add_i s26, s26, 1
    7974:	1e a0 00 a8 	load_32 s0, 40(sp)
    7978:	5c 00 00 f6 	b 368 <vfprintf+0x780>
    797c:	00 80 d0 c1 	sext_8 s0, s1
    7980:	00 40 ff 05 	add_i s0, s0, -48
    7984:	40 24 00 16 	cmpgt_u s2, s0, 9
    7988:	62 0e 00 f4 	bnz s2, 460 <vfprintf+0x7ec>
    798c:	39 28 00 07 	mull_i s1, s25, 10
    7990:	20 83 50 c0 	add_i s25, s0, s1
    7994:	1e b0 00 a8 	load_32 s0, 44(sp)
    7998:	5a 07 00 05 	add_i s26, s26, 1
    799c:	3a 00 00 a0 	load_u8 s1, (s26)
    79a0:	a1 fb ff f5 	bnz s1, -140 <vfprintf+0x5ac>
    79a4:	76 00 00 f6 	b 472 <vfprintf+0x814>
    79a8:	00 80 d0 c1 	sext_8 s0, s1
    79ac:	00 40 ff 05 	add_i s0, s0, -48
    79b0:	20 24 00 16 	cmpgt_u s1, s0, 9
    79b4:	61 d2 ff f5 	bnz s1, -1460 <vfprintf+0x98>
    79b8:	3e 30 01 a8 	load_32 s1, 76(sp)
    79bc:	5a 07 00 05 	add_i s26, s26, 1
    79c0:	21 28 00 07 	mull_i s1, s1, 10
    79c4:	00 80 50 c0 	add_i s0, s0, s1
    79c8:	1e 30 01 88 	store_32 s0, 76(sp)
    79cc:	00 0c 00 0f 	move s0, 3
    79d0:	3a 00 00 a0 	load_u8 s1, (s26)
    79d4:	01 fa ff f5 	bnz s1, -192 <vfprintf+0x5ac>
    79d8:	69 00 00 f6 	b 420 <vfprintf+0x814>
    79dc:	00 00 00 4f 	movehi s0, 0
    79e0:	20 80 d0 c1 	sext_8 s1, s1
    79e4:	40 20 00 0f 	move s2, 8
    79e8:	00 53 04 00 	or s24, s0, 276
    79ec:	00 00 fc c0 	move s0, s24
    79f0:	26 01 00 f8 	call 1176 <memchr>
    79f4:	e0 d0 ff f3 	bz s0, -1508 <vfprintf+0xa8>
    79f8:	20 04 00 0f 	move s1, 1
    79fc:	00 00 6c c0 	sub_i s0, s0, s24
    7a00:	5a 07 00 05 	add_i s26, s26, 1
    7a04:	01 00 b0 c0 	shl s0, s1, s0
    7a08:	3e 20 01 a8 	load_32 s1, 72(sp)
    7a0c:	20 80 00 c0 	or s1, s0, s1
    7a10:	3e 20 01 88 	store_32 s1, 72(sp)
    7a14:	1e f0 00 a8 	load_32 s0, 60(sp)
    7a18:	1e 03 01 a8 	load_32 s24, 64(sp)
    7a1c:	7e 50 01 a8 	load_32 s3, 84(sp)
    7a20:	3a 00 00 a0 	load_u8 s1, (s26)
    7a24:	81 f7 ff f5 	bnz s1, -272 <vfprintf+0x5ac>
    7a28:	55 00 00 f6 	b 340 <vfprintf+0x814>
    7a2c:	00 80 d0 c1 	sext_8 s0, s1
    7a30:	00 a0 fe 05 	add_i s0, s0, -88
    7a34:	40 80 00 16 	cmpgt_u s2, s0, 32
    7a38:	c2 f5 ff f5 	bnz s2, -328 <vfprintf+0x588>
    7a3c:	40 00 00 4f 	movehi s2, 0
    7a40:	00 08 00 0b 	shl s0, s0, 2
    7a44:	42 f0 0f 00 	or s2, s2, 1020
    7a48:	00 00 51 c0 	add_i s0, s0, s2
    7a4c:	00 00 00 a8 	load_32 s0, (s0)
    7a50:	00 00 00 f0 	b s0
    7a54:	01 fc 03 01 	and s0, s1, 255
    7a58:	60 00 00 0f 	move s3, 0
    7a5c:	20 a0 fe 05 	add_i s1, s0, -88
    7a60:	41 80 00 16 	cmpgt_u s2, s1, 32
    7a64:	a2 d6 ff f5 	bnz s2, -1324 <vfprintf+0x1d0>
    7a68:	40 00 00 4f 	movehi s2, 0
    7a6c:	21 08 00 0b 	shl s1, s1, 2
    7a70:	60 23 00 0f 	move s27, 8
    7a74:	42 00 12 00 	or s2, s2, 1152
    7a78:	21 00 51 c0 	add_i s1, s1, s2
    7a7c:	21 00 00 a8 	load_32 s1, (s1)
    7a80:	01 00 00 f0 	b s1
    7a84:	60 43 00 0f 	move s27, 16
    7a88:	3e 20 01 a8 	load_32 s1, 72(sp)
    7a8c:	3e 83 01 88 	store_32 s25, 96(sp)
    7a90:	21 40 00 01 	and s1, s1, 16
    7a94:	41 00 00 f2 	bz s1, 8 <vfprintf+0x734>
    7a98:	ad fe ff f7 	b -1356 <vfprintf+0x1e4>
    7a9c:	20 a4 01 10 	cmpeq_i s1, s0, 105
    7aa0:	61 00 00 f4 	bnz s1, 12 <vfprintf+0x744>
    7aa4:	00 90 01 11 	cmpne_i s0, s0, 100
    7aa8:	c0 d7 ff f5 	bnz s0, -1288 <vfprintf+0x238>
    7aac:	1e a0 02 a8 	load_32 s0, 168(sp)
    7ab0:	00 0c 00 05 	add_i s0, s0, 3
    7ab4:	00 f0 ff 01 	and s0, s0, -4
    7ab8:	20 10 00 05 	add_i s1, s0, 4
    7abc:	3e a0 02 88 	store_32 s1, 168(sp)
    7ac0:	00 03 00 a8 	load_32 s24, (s0)
    7ac4:	38 7f 00 09 	ashr s25, s24, 31
    7ac8:	1a 00 00 a0 	load_u8 s0, (s26)
    7acc:	7e 90 01 88 	store_32 s3, 100(sp)
    7ad0:	20 a4 01 10 	cmpeq_i s1, s0, 105
    7ad4:	81 d5 ff f5 	bnz s1, -1360 <vfprintf+0x21c>
    7ad8:	00 90 01 11 	cmpne_i s0, s0, 100
    7adc:	00 e0 ff f5 	bnz s0, -1024 <vfprintf+0x374>
    7ae0:	a9 fe ff f7 	b -1372 <vfprintf+0x21c>
    7ae4:	00 80 d0 c1 	sext_8 s0, s1
    7ae8:	20 80 fd c0 	move s1, s27
    7aec:	91 e9 ff f9 	call -22972 <fputc>
    7af0:	7e 50 01 a8 	load_32 s3, 84(sp)
    7af4:	1e 40 01 a8 	load_32 s0, 80(sp)
    7af8:	3a 00 00 a0 	load_u8 s1, (s26)
    7afc:	c1 f0 ff f5 	bnz s1, -488 <vfprintf+0x5ac>
    7b00:	1f 00 00 f6 	b 124 <vfprintf+0x814>
    7b04:	3e 83 01 88 	store_32 s25, 96(sp)
    7b08:	00 80 f1 c0 	move s0, s3
    7b0c:	5e d0 00 a8 	load_32 s2, 52(sp)
    7b10:	20 80 d0 c1 	sext_8 s1, s1
    7b14:	20 83 f1 c0 	move s25, s3
    7b18:	dc 00 00 f8 	call 880 <memchr>
    7b1c:	60 c8 ff f3 	bz s0, -1780 <vfprintf+0xc0>
    7b20:	3e c0 00 a8 	load_32 s1, 48(sp)
    7b24:	00 80 6c c0 	sub_i s0, s0, s25
    7b28:	5e 10 01 a8 	load_32 s2, 68(sp)
    7b2c:	5a 07 00 05 	add_i s26, s26, 1
    7b30:	01 00 b0 c0 	shl s0, s1, s0
    7b34:	40 00 01 c0 	or s2, s0, s2
    7b38:	5e 10 01 88 	store_32 s2, 68(sp)
    7b3c:	00 80 f0 c0 	move s0, s1
    7b40:	60 80 fc c0 	move s3, s25
    7b44:	3e 83 01 a8 	load_32 s25, 96(sp)
    7b48:	3a 00 00 a0 	load_u8 s1, (s26)
    7b4c:	41 ee ff f5 	bnz s1, -568 <vfprintf+0x5ac>
    7b50:	0b 00 00 f6 	b 44 <vfprintf+0x814>
    7b54:	01 fc 03 01 	and s0, s1, 255
    7b58:	20 b8 00 10 	cmpeq_i s1, s0, 46
    7b5c:	1e 90 00 a8 	load_32 s0, 36(sp)
    7b60:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x800>
    7b64:	1e f0 00 a8 	load_32 s0, 60(sp)
    7b68:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x808>
    7b6c:	02 00 00 f6 	b 8 <vfprintf+0x80c>
    7b70:	5a 07 00 05 	add_i s26, s26, 1
    7b74:	3a 00 00 a0 	load_u8 s1, (s26)
    7b78:	e1 ec ff f5 	bnz s1, -612 <vfprintf+0x5ac>
    7b7c:	fe b3 02 a8 	load_32 ra, 172(sp)
    7b80:	00 00 00 0f 	move s0, 0
    7b84:	7e c3 02 a8 	load_32 s27, 176(sp)
    7b88:	5e d3 02 a8 	load_32 s26, 180(sp)
    7b8c:	3e e3 02 a8 	load_32 s25, 184(sp)
    7b90:	1e f3 02 a8 	load_32 s24, 188(sp)
    7b94:	de 03 03 05 	add_i sp, sp, 192
    7b98:	1f 00 00 f0 	ret

0000000000007b9c strcmp:
    7b9c:	60 00 00 a0 	load_u8 s3, (s0)
    7ba0:	40 00 00 0f 	move s2, 0
    7ba4:	23 01 00 f2 	bz s3, 36 <strcmp+0x2c>
    7ba8:	81 00 00 a0 	load_u8 s4, (s1)
    7bac:	a3 fc 03 01 	and s5, s3, 255
    7bb0:	85 00 12 c1 	cmpne_i s4, s5, s4
    7bb4:	24 01 00 f4 	bnz s4, 36 <strcmp+0x3c>
    7bb8:	60 04 00 a0 	load_u8 s3, 1(s0)
    7bbc:	00 04 00 05 	add_i s0, s0, 1
    7bc0:	21 04 00 05 	add_i s1, s1, 1
    7bc4:	23 ff ff f5 	bnz s3, -28 <strcmp+0xc>
    7bc8:	01 00 00 a2 	load_s8 s0, (s1)
    7bcc:	20 00 d1 c1 	sext_8 s1, s2
    7bd0:	01 00 60 c0 	sub_i s0, s1, s0
    7bd4:	1f 00 00 f0 	ret
    7bd8:	40 80 f1 c0 	move s2, s3
    7bdc:	01 00 00 a2 	load_s8 s0, (s1)
    7be0:	20 00 d1 c1 	sext_8 s1, s2
    7be4:	01 00 60 c0 	sub_i s0, s1, s0
    7be8:	1f 00 00 f0 	ret

0000000000007bec strncmp:
    7bec:	62 02 00 f2 	bz s2, 76 <strncmp+0x4c>
    7bf0:	60 00 00 a0 	load_u8 s3, (s0)
    7bf4:	a3 01 00 f2 	bz s3, 52 <strncmp+0x3c>
    7bf8:	42 fc ff 05 	add_i s2, s2, -1
    7bfc:	62 01 00 f2 	bz s2, 44 <strncmp+0x3c>
    7c00:	81 00 00 a0 	load_u8 s4, (s1)
    7c04:	a3 fc 03 01 	and s5, s3, 255
    7c08:	85 00 12 c1 	cmpne_i s4, s5, s4
    7c0c:	e4 00 00 f4 	bnz s4, 28 <strncmp+0x3c>
    7c10:	60 04 00 a0 	load_u8 s3, 1(s0)
    7c14:	21 04 00 05 	add_i s1, s1, 1
    7c18:	83 00 00 f2 	bz s3, 16 <strncmp+0x3c>
    7c1c:	42 fc ff 05 	add_i s2, s2, -1
    7c20:	00 04 00 05 	add_i s0, s0, 1
    7c24:	e2 fe ff f5 	bnz s2, -36 <strncmp+0x14>
    7c28:	01 00 00 a2 	load_s8 s0, (s1)
    7c2c:	20 80 d1 c1 	sext_8 s1, s3
    7c30:	01 00 60 c0 	sub_i s0, s1, s0
    7c34:	1f 00 00 f0 	ret
    7c38:	00 00 00 0f 	move s0, 0
    7c3c:	1f 00 00 f0 	ret

0000000000007c40 strcasecmp:
    7c40:	60 00 00 a0 	load_u8 s3, (s0)
    7c44:	40 00 00 0f 	move s2, 0
    7c48:	a3 02 00 f2 	bz s3, 84 <strcasecmp+0x5c>
    7c4c:	80 80 d1 c1 	sext_8 s4, s3
    7c50:	a4 7c fe 05 	add_i s5, s4, -97
    7c54:	a5 68 00 18 	cmplt_u s5, s5, 26
    7c58:	45 00 00 f4 	bnz s5, 8 <strcasecmp+0x20>
    7c5c:	02 00 00 f6 	b 8 <strcasecmp+0x24>
    7c60:	84 80 ff 05 	add_i s4, s4, -32
    7c64:	a1 00 00 a2 	load_s8 s5, (s1)
    7c68:	c5 7c fe 05 	add_i s6, s5, -97
    7c6c:	c6 68 00 18 	cmplt_u s6, s6, 26
    7c70:	46 00 00 f4 	bnz s6, 8 <strcasecmp+0x38>
    7c74:	02 00 00 f6 	b 8 <strcasecmp+0x3c>
    7c78:	a5 80 ff 05 	add_i s5, s5, -32
    7c7c:	84 80 12 c1 	cmpne_i s4, s4, s5
    7c80:	c4 00 00 f4 	bnz s4, 24 <strcasecmp+0x58>
    7c84:	60 04 00 a0 	load_u8 s3, 1(s0)
    7c88:	00 04 00 05 	add_i s0, s0, 1
    7c8c:	21 04 00 05 	add_i s1, s1, 1
    7c90:	e3 fd ff f5 	bnz s3, -68 <strcasecmp+0xc>
    7c94:	02 00 00 f6 	b 8 <strcasecmp+0x5c>
    7c98:	40 80 f1 c0 	move s2, s3
    7c9c:	00 00 d1 c1 	sext_8 s0, s2
    7ca0:	40 7c fe 05 	add_i s2, s0, -97
    7ca4:	42 68 00 18 	cmplt_u s2, s2, 26
    7ca8:	42 00 00 f4 	bnz s2, 8 <strcasecmp+0x70>
    7cac:	02 00 00 f6 	b 8 <strcasecmp+0x74>
    7cb0:	00 80 ff 05 	add_i s0, s0, -32
    7cb4:	21 00 00 a2 	load_s8 s1, (s1)
    7cb8:	41 7c fe 05 	add_i s2, s1, -97
    7cbc:	42 68 00 18 	cmplt_u s2, s2, 26
    7cc0:	42 00 00 f4 	bnz s2, 8 <strcasecmp+0x88>
    7cc4:	02 00 00 f6 	b 8 <strcasecmp+0x8c>
    7cc8:	21 80 ff 05 	add_i s1, s1, -32
    7ccc:	00 80 60 c0 	sub_i s0, s0, s1
    7cd0:	1f 00 00 f0 	ret

0000000000007cd4 toupper:
    7cd4:	20 7c fe 05 	add_i s1, s0, -97
    7cd8:	21 68 00 18 	cmplt_u s1, s1, 26
    7cdc:	41 00 00 f4 	bnz s1, 8 <toupper+0x10>
    7ce0:	02 00 00 f6 	b 8 <toupper+0x14>
    7ce4:	00 80 ff 05 	add_i s0, s0, -32
    7ce8:	1f 00 00 f0 	ret

0000000000007cec strncasecmp:
    7cec:	e2 04 00 f2 	bz s2, 156 <strncasecmp+0x9c>
    7cf0:	60 00 00 a0 	load_u8 s3, (s0)
    7cf4:	e3 02 00 f2 	bz s3, 92 <strncasecmp+0x64>
    7cf8:	42 fc ff 05 	add_i s2, s2, -1
    7cfc:	a2 02 00 f2 	bz s2, 84 <strncasecmp+0x64>
    7d00:	80 80 d1 c1 	sext_8 s4, s3
    7d04:	a4 7c fe 05 	add_i s5, s4, -97
    7d08:	a5 68 00 18 	cmplt_u s5, s5, 26
    7d0c:	45 00 00 f4 	bnz s5, 8 <strncasecmp+0x28>
    7d10:	02 00 00 f6 	b 8 <strncasecmp+0x2c>
    7d14:	84 80 ff 05 	add_i s4, s4, -32
    7d18:	a1 00 00 a2 	load_s8 s5, (s1)
    7d1c:	c5 7c fe 05 	add_i s6, s5, -97
    7d20:	c6 68 00 18 	cmplt_u s6, s6, 26
    7d24:	46 00 00 f4 	bnz s6, 8 <strncasecmp+0x40>
    7d28:	02 00 00 f6 	b 8 <strncasecmp+0x44>
    7d2c:	a5 80 ff 05 	add_i s5, s5, -32
    7d30:	84 80 12 c1 	cmpne_i s4, s4, s5
    7d34:	e4 00 00 f4 	bnz s4, 28 <strncasecmp+0x64>
    7d38:	60 04 00 a0 	load_u8 s3, 1(s0)
    7d3c:	21 04 00 05 	add_i s1, s1, 1
    7d40:	83 00 00 f2 	bz s3, 16 <strncasecmp+0x64>
    7d44:	42 fc ff 05 	add_i s2, s2, -1
    7d48:	00 04 00 05 	add_i s0, s0, 1
    7d4c:	a2 fd ff f5 	bnz s2, -76 <strncasecmp+0x14>
    7d50:	00 80 d1 c1 	sext_8 s0, s3
    7d54:	40 7c fe 05 	add_i s2, s0, -97
    7d58:	42 68 00 18 	cmplt_u s2, s2, 26
    7d5c:	42 00 00 f4 	bnz s2, 8 <strncasecmp+0x78>
    7d60:	02 00 00 f6 	b 8 <strncasecmp+0x7c>
    7d64:	00 80 ff 05 	add_i s0, s0, -32
    7d68:	21 00 00 a2 	load_s8 s1, (s1)
    7d6c:	41 7c fe 05 	add_i s2, s1, -97
    7d70:	42 68 00 18 	cmplt_u s2, s2, 26
    7d74:	42 00 00 f4 	bnz s2, 8 <strncasecmp+0x90>
    7d78:	02 00 00 f6 	b 8 <strncasecmp+0x94>
    7d7c:	21 80 ff 05 	add_i s1, s1, -32
    7d80:	00 80 60 c0 	sub_i s0, s0, s1
    7d84:	1f 00 00 f0 	ret
    7d88:	00 00 00 0f 	move s0, 0
    7d8c:	1f 00 00 f0 	ret

0000000000007d90 strlen:
    7d90:	20 00 f0 c0 	move s1, s0
    7d94:	01 00 00 a0 	load_u8 s0, (s1)
    7d98:	e0 00 00 f2 	bz s0, 28 <strlen+0x24>
    7d9c:	00 00 00 0f 	move s0, 0
    7da0:	41 04 00 a0 	load_u8 s2, 1(s1)
    7da4:	21 04 00 05 	add_i s1, s1, 1
    7da8:	00 04 00 05 	add_i s0, s0, 1
    7dac:	a2 ff ff f5 	bnz s2, -12 <strlen+0x10>
    7db0:	1f 00 00 f0 	ret
    7db4:	00 00 00 0f 	move s0, 0
    7db8:	1f 00 00 f0 	ret

0000000000007dbc strcpy:
    7dbc:	41 00 00 a0 	load_u8 s2, (s1)
    7dc0:	80 00 f0 c0 	move s4, s0
    7dc4:	02 01 00 f2 	bz s2, 32 <strcpy+0x28>
    7dc8:	60 00 f0 c0 	move s3, s0
    7dcc:	83 04 00 05 	add_i s4, s3, 1
    7dd0:	43 00 00 82 	store_8 s2, (s3)
    7dd4:	41 04 00 a0 	load_u8 s2, 1(s1)
    7dd8:	21 04 00 05 	add_i s1, s1, 1
    7ddc:	60 00 f2 c0 	move s3, s4
    7de0:	62 ff ff f5 	bnz s2, -20 <strcpy+0x10>
    7de4:	20 00 00 0f 	move s1, 0
    7de8:	24 00 00 82 	store_8 s1, (s4)
    7dec:	1f 00 00 f0 	ret

0000000000007df0 strncpy:
    7df0:	81 00 00 a0 	load_u8 s4, (s1)
    7df4:	a2 00 00 11 	cmpne_i s5, s2, 0
    7df8:	62 02 00 f2 	bz s2, 76 <strncpy+0x54>
    7dfc:	c4 fc 03 01 	and s6, s4, 255
    7e00:	60 00 f0 c0 	move s3, s0
    7e04:	66 01 00 f2 	bz s6, 44 <strncpy+0x40>
    7e08:	60 00 f0 c0 	move s3, s0
    7e0c:	42 fc ff 05 	add_i s2, s2, -1
    7e10:	83 00 00 82 	store_8 s4, (s3)
    7e14:	81 04 00 a0 	load_u8 s4, 1(s1)
    7e18:	63 04 00 05 	add_i s3, s3, 1
    7e1c:	a2 00 00 11 	cmpne_i s5, s2, 0
    7e20:	82 00 00 f2 	bz s2, 16 <strncpy+0x40>
    7e24:	c4 fc 03 01 	and s6, s4, 255
    7e28:	21 04 00 05 	add_i s1, s1, 1
    7e2c:	06 ff ff f5 	bnz s6, -32 <strncpy+0x1c>
    7e30:	25 04 00 01 	and s1, s5, 1
    7e34:	61 00 00 f2 	bz s1, 12 <strncpy+0x50>
    7e38:	20 00 00 0f 	move s1, 0
    7e3c:	23 00 00 82 	store_8 s1, (s3)
    7e40:	1f 00 00 f0 	ret
    7e44:	60 00 f0 c0 	move s3, s0
    7e48:	25 04 00 01 	and s1, s5, 1
    7e4c:	a1 ff ff f3 	bz s1, -12 <strncpy+0x50>
    7e50:	fa ff ff f7 	b -24 <strncpy+0x48>

0000000000007e54 strchr:
    7e54:	40 00 f0 c0 	move s2, s0
    7e58:	00 00 00 0f 	move s0, 0
    7e5c:	62 00 00 a0 	load_u8 s3, (s2)
    7e60:	e3 00 00 f2 	bz s3, 28 <strchr+0x28>
    7e64:	60 80 d1 c1 	sext_8 s3, s3
    7e68:	63 80 00 c1 	cmpeq_i s3, s3, s1
    7e6c:	a3 00 00 f4 	bnz s3, 20 <strchr+0x2c>
    7e70:	62 04 00 a0 	load_u8 s3, 1(s2)
    7e74:	42 04 00 05 	add_i s2, s2, 1
    7e78:	63 ff ff f5 	bnz s3, -20 <strchr+0x10>
    7e7c:	1f 00 00 f0 	ret
    7e80:	00 00 f1 c0 	move s0, s2
    7e84:	1f 00 00 f0 	ret

0000000000007e88 memchr:
    7e88:	e2 01 00 f2 	bz s2, 60 <memchr+0x3c>
    7e8c:	80 00 00 0f 	move s4, 0
    7e90:	a0 00 f2 c0 	move s5, s4
    7e94:	60 80 52 c0 	add_i s3, s0, s5
    7e98:	c3 00 00 a2 	load_s8 s6, (s3)
    7e9c:	c6 80 10 c1 	cmpne_i s6, s6, s1
    7ea0:	46 00 00 f4 	bnz s6, 8 <memchr+0x20>
    7ea4:	0b 00 00 f6 	b 44 <memchr+0x48>
    7ea8:	a5 04 00 05 	add_i s5, s5, 1
    7eac:	65 00 71 c1 	cmpge_u s3, s5, s2
    7eb0:	43 00 00 f4 	bnz s3, 8 <memchr+0x30>
    7eb4:	f8 ff ff f7 	b -32 <memchr+0xc>
    7eb8:	60 00 f2 c0 	move s3, s4
    7ebc:	00 80 f1 c0 	move s0, s3
    7ec0:	1f 00 00 f0 	ret
    7ec4:	60 00 00 0f 	move s3, 0
    7ec8:	00 80 f1 c0 	move s0, s3
    7ecc:	1f 00 00 f0 	ret
    7ed0:	00 80 f1 c0 	move s0, s3
    7ed4:	1f 00 00 f0 	ret

0000000000007ed8 strcat:
    7ed8:	60 00 f0 c0 	move s3, s0
    7edc:	40 80 f1 c0 	move s2, s3
    7ee0:	82 00 00 a0 	load_u8 s4, (s2)
    7ee4:	62 04 00 05 	add_i s3, s2, 1
    7ee8:	a4 ff ff f5 	bnz s4, -12 <strcat+0x4>
    7eec:	61 00 00 a0 	load_u8 s3, (s1)
    7ef0:	43 01 00 f2 	bz s3, 40 <strcat+0x40>
    7ef4:	82 04 00 05 	add_i s4, s2, 1
    7ef8:	62 00 00 82 	store_8 s3, (s2)
    7efc:	61 04 00 a0 	load_u8 s3, 1(s1)
    7f00:	21 04 00 05 	add_i s1, s1, 1
    7f04:	40 00 f2 c0 	move s2, s4
    7f08:	63 ff ff f5 	bnz s3, -20 <strcat+0x1c>
    7f0c:	20 00 00 0f 	move s1, 0
    7f10:	24 00 00 82 	store_8 s1, (s4)
    7f14:	1f 00 00 f0 	ret
    7f18:	80 00 f1 c0 	move s4, s2
    7f1c:	20 00 00 0f 	move s1, 0
    7f20:	24 00 00 82 	store_8 s1, (s4)
    7f24:	1f 00 00 f0 	ret

0000000000007f28 isdigit:
    7f28:	00 40 ff 05 	add_i s0, s0, -48
    7f2c:	00 28 00 18 	cmplt_u s0, s0, 10
    7f30:	00 04 00 01 	and s0, s0, 1
    7f34:	1f 00 00 f0 	ret

0000000000007f38 sbrk:
    7f38:	de 03 ff 05 	add_i sp, sp, -64
    7f3c:	1e f3 00 88 	store_32 s24, 60(sp)
    7f40:	fe e3 00 88 	store_32 ra, 56(sp)
    7f44:	25 00 00 4f 	movehi s1, 5
    7f48:	40 00 f0 c0 	move s2, s0
    7f4c:	01 40 40 00 	or s0, s1, 4112
    7f50:	20 00 00 aa 	load_sync s1, (s0)
    7f54:	61 00 51 c0 	add_i s3, s1, s2
    7f58:	00 83 f0 c0 	move s24, s1
    7f5c:	60 00 00 8a 	store_sync s3, (s0)  
    7f60:	83 ff ff f3 	bz s3, -16 <sbrk+0x18>
    7f64:	02 04 00 14 	cmplt_i s0, s2, 1
    7f68:	80 00 00 f4 	bnz s0, 16 <sbrk+0x40>
    7f6c:	20 00 00 0f 	move s1, 0
    7f70:	00 00 fc c0 	move s0, s24
    7f74:	d0 fc ff f9 	call -3264 <memset>
    7f78:	00 00 fc c0 	move s0, s24
    7f7c:	fe e3 00 a8 	load_32 ra, 56(sp)
    7f80:	1e f3 00 a8 	load_32 s24, 60(sp)
    7f84:	de 03 01 05 	add_i sp, sp, 64
    7f88:	1f 00 00 f0 	ret

0000000000007f8c _write_uart:
    7f8c:	38 fc ff 4f 	movehi s1, 524280
    7f90:	41 00 01 00 	or s2, s1, 64
    7f94:	62 00 00 a8 	load_32 s3, (s2)
    7f98:	63 04 00 01 	and s3, s3, 1
    7f9c:	c3 ff ff f3 	bz s3, -8 <_write_uart+0x8>
    7fa0:	21 20 01 00 	or s1, s1, 72
    7fa4:	01 00 00 88 	store_32 s0, (s1)
    7fa8:	1f 00 00 f0 	ret

0000000000007fac write_console:
    7fac:	41 04 00 14 	cmplt_i s2, s1, 1
    7fb0:	c2 01 00 f4 	bnz s2, 56 <write_console+0x3c>
    7fb4:	98 fc ff 4f 	movehi s4, 524280
    7fb8:	40 00 00 0f 	move s2, 0
    7fbc:	64 00 01 00 	or s3, s4, 64
    7fc0:	84 20 01 00 	or s4, s4, 72
    7fc4:	a0 00 51 c0 	add_i s5, s0, s2
    7fc8:	a5 00 00 a2 	load_s8 s5, (s5)
    7fcc:	c3 00 00 a8 	load_32 s6, (s3)
    7fd0:	c6 04 00 01 	and s6, s6, 1
    7fd4:	c6 ff ff f3 	bz s6, -8 <write_console+0x20>
    7fd8:	42 04 00 05 	add_i s2, s2, 1
    7fdc:	a4 00 00 88 	store_32 s5, (s4)
    7fe0:	c2 80 40 c1 	cmplt_i s6, s2, s1
    7fe4:	06 ff ff f5 	bnz s6, -32 <write_console+0x18>
    7fe8:	00 00 00 0f 	move s0, 0
    7fec:	1f 00 00 f0 	ret

0000000000007ff0 read_block:
    7ff0:	de 03 ff 05 	add_i sp, sp, -64
    7ff4:	1e f3 00 88 	store_32 s24, 60(sp)
    7ff8:	fe e3 00 88 	store_32 ra, 56(sp)
    7ffc:	45 00 00 4f 	movehi s2, 5
    8000:	42 b0 4c 00 	or s2, s2, 4908
    8004:	42 00 00 a0 	load_u8 s2, (s2)
    8008:	42 04 00 11 	cmpne_i s2, s2, 1
    800c:	42 01 00 f4 	bnz s2, 40 <read_block+0x44>
    8010:	00 24 00 0b 	shl s0, s0, 9
    8014:	40 00 04 4f 	movehi s2, 8192
    8018:	00 03 08 0f 	move s24, 512
    801c:	40 00 51 c0 	add_i s2, s0, s2
    8020:	00 80 f0 c0 	move s0, s1
    8024:	20 00 f1 c0 	move s1, s2
    8028:	40 00 fc c0 	move s2, s24
    802c:	6e fc ff f9 	call -3656 <memcpy>
    8030:	03 00 00 f6 	b 12 <read_block+0x4c>
    8034:	a8 03 00 f8 	call 3744 <read_sdmmc_device>
    8038:	00 03 f0 c0 	move s24, s0
    803c:	00 00 fc c0 	move s0, s24
    8040:	fe e3 00 a8 	load_32 ra, 56(sp)
    8044:	1e f3 00 a8 	load_32 s24, 60(sp)
    8048:	de 03 01 05 	add_i sp, sp, 64
    804c:	1f 00 00 f0 	ret

0000000000008050 open:
    8050:	de 03 f7 05 	add_i sp, sp, -576
    8054:	1e f3 08 88 	store_32 s24, 572(sp)
    8058:	3e e3 08 88 	store_32 s25, 568(sp)
    805c:	5e d3 08 88 	store_32 s26, 564(sp)
    8060:	7e c3 08 88 	store_32 s27, 560(sp)
    8064:	fe b3 08 88 	store_32 ra, 556(sp)
    8068:	25 00 00 4f 	movehi s1, 5
    806c:	41 c0 4c 00 	or s2, s1, 4912
    8070:	22 00 00 a0 	load_u8 s1, (s2)
    8074:	1e a0 00 88 	store_32 s0, 40(sp)
    8078:	a1 0c 00 f4 	bnz s1, 404 <open+0x1bc>
    807c:	5e 60 00 88 	store_32 s2, 24(sp)
    8080:	73 02 00 f8 	call 2508 <init_sdmmc_device>
    8084:	00 fc ff 12 	cmpgt_i s0, s0, -1
    8088:	40 00 00 f4 	bnz s0, 8 <open+0x40>
    808c:	0d 00 00 f6 	b 52 <open+0x70>
    8090:	05 00 00 4f 	movehi s0, 5
    8094:	00 b0 4c 00 	or s0, s0, 4908
    8098:	00 00 00 a0 	load_u8 s0, (s0)
    809c:	00 04 00 11 	cmpne_i s0, s0, 1
    80a0:	40 00 00 f4 	bnz s0, 8 <open+0x58>
    80a4:	0e 00 00 f6 	b 56 <open+0x8c>
    80a8:	00 00 00 0f 	move s0, 0
    80ac:	3e b0 00 05 	add_i s1, sp, 44
    80b0:	89 03 00 f8 	call 3620 <read_sdmmc_device>
    80b4:	00 04 00 14 	cmplt_i s0, s0, 1
    80b8:	c0 03 00 f4 	bnz s0, 120 <open+0xe0>
    80bc:	0c 00 00 f6 	b 48 <open+0x9c>
    80c0:	00 00 00 4f 	movehi s0, 0
    80c4:	00 30 06 00 	or s0, s0, 396
    80c8:	b5 e8 ff f9 	call -23852 <puts>
    80cc:	05 00 00 4f 	movehi s0, 5
    80d0:	20 04 00 0f 	move s1, 1
    80d4:	00 b0 4c 00 	or s0, s0, 4908
    80d8:	20 00 00 82 	store_8 s1, (s0)
    80dc:	1e b0 00 05 	add_i s0, sp, 44
    80e0:	20 00 04 4f 	movehi s1, 8192
    80e4:	40 00 08 0f 	move s2, 512
    80e8:	3f fc ff f9 	call -3844 <memcpy>
    80ec:	1e b4 00 a0 	load_u8 s0, 45(sp)
    80f0:	3e b0 00 a0 	load_u8 s1, 44(sp)
    80f4:	5e bc 00 a0 	load_u8 s2, 47(sp)
    80f8:	7e b8 00 a0 	load_u8 s3, 46(sp)
    80fc:	00 20 00 0b 	shl s0, s0, 8
    8100:	42 20 00 0b 	shl s2, s2, 8
    8104:	00 80 00 c0 	or s0, s0, s1
    8108:	33 64 73 4f 	movehi s1, 236339
    810c:	42 80 01 c0 	or s2, s2, s3
    8110:	21 cc 41 00 	or s1, s1, 4211
    8114:	42 40 00 0b 	shl s2, s2, 16
    8118:	02 00 00 c0 	or s0, s2, s0
    811c:	00 80 00 c1 	cmpeq_i s0, s0, s1
    8120:	e0 00 00 f4 	bnz s0, 28 <open+0xec>
    8124:	00 00 00 4f 	movehi s0, 0
    8128:	00 50 0e 00 	or s0, s0, 916
    812c:	9c e8 ff f9 	call -23952 <puts>
    8130:	2e 02 00 f8 	call 2232 <__errno_ptr>
    8134:	20 14 00 0f 	move s1, 5
    8138:	d9 00 00 f6 	b 868 <open+0x44c>
    813c:	1e c0 00 a8 	load_32 s0, 48(sp)
    8140:	00 a0 00 07 	mull_i s0, s0, 40
    8144:	00 1f 08 05 	add_i s24, s0, 519
    8148:	18 00 f8 01 	and s0, s24, -512
    814c:	ac e9 ff f9 	call -22864 <malloc>
    8150:	25 00 00 4f 	movehi s1, 5
    8154:	60 03 f0 c0 	move s27, s0
    8158:	40 00 08 0f 	move s2, 512
    815c:	21 d0 54 00 	or s1, s1, 5428
    8160:	3e 90 00 88 	store_32 s1, 36(sp)
    8164:	61 03 00 88 	store_32 s27, (s1)
    8168:	3e b0 00 05 	add_i s1, sp, 44
    816c:	1e fc ff f9 	call -3976 <memcpy>
    8170:	18 00 10 18 	cmplt_u s0, s24, 1024
    8174:	60 04 00 f4 	bnz s0, 140 <open+0x1b0>
    8178:	05 00 00 4f 	movehi s0, 5
    817c:	18 27 00 0a 	shr s24, s24, 9
    8180:	20 07 00 0f 	move s25, 1
    8184:	40 b3 4c 00 	or s26, s0, 4908
    8188:	00 00 04 4f 	movehi s0, 8192
    818c:	1e 80 00 88 	store_32 s0, 32(sp)
    8190:	00 00 08 0f 	move s0, 512
    8194:	1e 70 00 88 	store_32 s0, 28(sp)
    8198:	03 00 00 f6 	b 12 <open+0x154>
    819c:	1e 90 00 a8 	load_32 s0, 36(sp)
    81a0:	60 03 00 a8 	load_32 s27, (s0)
    81a4:	3a 00 00 a0 	load_u8 s1, (s26)
    81a8:	19 24 00 0b 	shl s0, s25, 9
    81ac:	5b 00 50 c0 	add_i s2, s27, s0
    81b0:	21 04 00 11 	cmpne_i s1, s1, 1
    81b4:	41 01 00 f4 	bnz s1, 40 <open+0x18c>
    81b8:	3e 80 00 a8 	load_32 s1, 32(sp)
    81bc:	20 80 50 c0 	add_i s1, s0, s1
    81c0:	00 00 f1 c0 	move s0, s2
    81c4:	5e 70 00 a8 	load_32 s2, 28(sp)
    81c8:	07 fc ff f9 	call -4068 <memcpy>
    81cc:	39 07 00 05 	add_i s25, s25, 1
    81d0:	19 00 7c c1 	cmpge_u s0, s25, s24
    81d4:	60 01 00 f4 	bnz s0, 44 <open+0x1b0>
    81d8:	f1 ff ff f7 	b -60 <open+0x14c>
    81dc:	00 80 fc c0 	move s0, s25
    81e0:	20 00 f1 c0 	move s1, s2
    81e4:	3c 03 00 f8 	call 3312 <read_sdmmc_device>
    81e8:	00 04 00 14 	cmplt_i s0, s0, 1
    81ec:	20 fa ff f5 	bnz s0, -188 <open+0xe0>
    81f0:	39 07 00 05 	add_i s25, s25, 1
    81f4:	19 00 7c c1 	cmpge_u s0, s25, s24
    81f8:	40 00 00 f4 	bnz s0, 8 <open+0x1b0>
    81fc:	e8 ff ff f7 	b -96 <open+0x14c>
    8200:	3e 60 00 a8 	load_32 s1, 24(sp)
    8204:	00 04 00 0f 	move s0, 1
    8208:	01 00 00 82 	store_8 s0, (s1)
    820c:	05 00 00 4f 	movehi s0, 5
    8210:	20 d0 4c 00 	or s1, s0, 4916
    8214:	01 00 00 a8 	load_32 s0, (s1)
    8218:	3e 90 00 88 	store_32 s1, 36(sp)
    821c:	a0 09 00 f2 	bz s0, 308 <open+0x300>
    8220:	01 40 00 a8 	load_32 s0, 16(s1)
    8224:	a0 09 00 f2 	bz s0, 308 <open+0x308>
    8228:	01 80 00 a8 	load_32 s0, 32(s1)
    822c:	a0 09 00 f2 	bz s0, 308 <open+0x310>
    8230:	01 c0 00 a8 	load_32 s0, 48(s1)
    8234:	a0 09 00 f2 	bz s0, 308 <open+0x318>
    8238:	01 00 01 a8 	load_32 s0, 64(s1)
    823c:	a0 09 00 f2 	bz s0, 308 <open+0x320>
    8240:	01 40 01 a8 	load_32 s0, 80(s1)
    8244:	a0 09 00 f2 	bz s0, 308 <open+0x328>
    8248:	01 80 01 a8 	load_32 s0, 96(s1)
    824c:	a0 09 00 f2 	bz s0, 308 <open+0x330>
    8250:	01 c0 01 a8 	load_32 s0, 112(s1)
    8254:	a0 09 00 f2 	bz s0, 308 <open+0x338>
    8258:	01 00 02 a8 	load_32 s0, 128(s1)
    825c:	a0 09 00 f2 	bz s0, 308 <open+0x340>
    8260:	01 40 02 a8 	load_32 s0, 144(s1)
    8264:	a0 09 00 f2 	bz s0, 308 <open+0x348>
    8268:	01 80 02 a8 	load_32 s0, 160(s1)
    826c:	a0 09 00 f2 	bz s0, 308 <open+0x350>
    8270:	01 c0 02 a8 	load_32 s0, 176(s1)
    8274:	a0 09 00 f2 	bz s0, 308 <open+0x358>
    8278:	01 00 03 a8 	load_32 s0, 192(s1)
    827c:	a0 09 00 f2 	bz s0, 308 <open+0x360>
    8280:	01 40 03 a8 	load_32 s0, 208(s1)
    8284:	a0 09 00 f2 	bz s0, 308 <open+0x368>
    8288:	01 80 03 a8 	load_32 s0, 224(s1)
    828c:	a0 09 00 f2 	bz s0, 308 <open+0x370>
    8290:	01 c0 03 a8 	load_32 s0, 240(s1)
    8294:	a0 09 00 f2 	bz s0, 308 <open+0x378>
    8298:	01 00 04 a8 	load_32 s0, 256(s1)
    829c:	a0 09 00 f2 	bz s0, 308 <open+0x380>
    82a0:	01 40 04 a8 	load_32 s0, 272(s1)
    82a4:	a0 09 00 f2 	bz s0, 308 <open+0x388>
    82a8:	01 80 04 a8 	load_32 s0, 288(s1)
    82ac:	a0 09 00 f2 	bz s0, 308 <open+0x390>
    82b0:	01 c0 04 a8 	load_32 s0, 304(s1)
    82b4:	a0 09 00 f2 	bz s0, 308 <open+0x398>
    82b8:	01 00 05 a8 	load_32 s0, 320(s1)
    82bc:	a0 09 00 f2 	bz s0, 308 <open+0x3a0>
    82c0:	1e 90 00 a8 	load_32 s0, 36(sp)
    82c4:	00 40 05 a8 	load_32 s0, 336(s0)
    82c8:	80 09 00 f2 	bz s0, 304 <open+0x3a8>
    82cc:	1e 90 00 a8 	load_32 s0, 36(sp)
    82d0:	00 80 05 a8 	load_32 s0, 352(s0)
    82d4:	60 09 00 f2 	bz s0, 300 <open+0x3b0>
    82d8:	1e 90 00 a8 	load_32 s0, 36(sp)
    82dc:	00 c0 05 a8 	load_32 s0, 368(s0)
    82e0:	40 09 00 f2 	bz s0, 296 <open+0x3b8>
    82e4:	1e 90 00 a8 	load_32 s0, 36(sp)
    82e8:	00 00 06 a8 	load_32 s0, 384(s0)
    82ec:	20 09 00 f2 	bz s0, 292 <open+0x3c0>
    82f0:	1e 90 00 a8 	load_32 s0, 36(sp)
    82f4:	00 40 06 a8 	load_32 s0, 400(s0)
    82f8:	00 09 00 f2 	bz s0, 288 <open+0x3c8>
    82fc:	1e 90 00 a8 	load_32 s0, 36(sp)
    8300:	00 80 06 a8 	load_32 s0, 416(s0)
    8304:	e0 08 00 f2 	bz s0, 284 <open+0x3d0>
    8308:	1e 90 00 a8 	load_32 s0, 36(sp)
    830c:	00 c0 06 a8 	load_32 s0, 432(s0)
    8310:	c0 08 00 f2 	bz s0, 280 <open+0x3d8>
    8314:	1e 90 00 a8 	load_32 s0, 36(sp)
    8318:	00 00 07 a8 	load_32 s0, 448(s0)
    831c:	a0 08 00 f2 	bz s0, 276 <open+0x3e0>
    8320:	1e 90 00 a8 	load_32 s0, 36(sp)
    8324:	00 40 07 a8 	load_32 s0, 464(s0)
    8328:	80 08 00 f2 	bz s0, 272 <open+0x3e8>
    832c:	1e 90 00 a8 	load_32 s0, 36(sp)
    8330:	00 80 07 a8 	load_32 s0, 480(s0)
    8334:	60 08 00 f2 	bz s0, 268 <open+0x3f0>
    8338:	1e 90 00 a8 	load_32 s0, 36(sp)
    833c:	00 c0 07 a8 	load_32 s0, 496(s0)
    8340:	40 08 00 f2 	bz s0, 264 <open+0x3f8>
    8344:	a9 01 00 f8 	call 1700 <__errno_ptr>
    8348:	20 60 00 0f 	move s1, 24
    834c:	54 00 00 f6 	b 336 <open+0x44c>
    8350:	00 00 00 0f 	move s0, 0
    8354:	3e 00 00 f6 	b 248 <open+0x3fc>
    8358:	00 04 00 0f 	move s0, 1
    835c:	3c 00 00 f6 	b 240 <open+0x3fc>
    8360:	00 08 00 0f 	move s0, 2
    8364:	3a 00 00 f6 	b 232 <open+0x3fc>
    8368:	00 0c 00 0f 	move s0, 3
    836c:	38 00 00 f6 	b 224 <open+0x3fc>
    8370:	00 10 00 0f 	move s0, 4
    8374:	36 00 00 f6 	b 216 <open+0x3fc>
    8378:	00 14 00 0f 	move s0, 5
    837c:	34 00 00 f6 	b 208 <open+0x3fc>
    8380:	00 18 00 0f 	move s0, 6
    8384:	32 00 00 f6 	b 200 <open+0x3fc>
    8388:	00 1c 00 0f 	move s0, 7
    838c:	30 00 00 f6 	b 192 <open+0x3fc>
    8390:	00 20 00 0f 	move s0, 8
    8394:	2e 00 00 f6 	b 184 <open+0x3fc>
    8398:	00 24 00 0f 	move s0, 9
    839c:	2c 00 00 f6 	b 176 <open+0x3fc>
    83a0:	00 28 00 0f 	move s0, 10
    83a4:	2a 00 00 f6 	b 168 <open+0x3fc>
    83a8:	00 2c 00 0f 	move s0, 11
    83ac:	28 00 00 f6 	b 160 <open+0x3fc>
    83b0:	00 30 00 0f 	move s0, 12
    83b4:	26 00 00 f6 	b 152 <open+0x3fc>
    83b8:	00 34 00 0f 	move s0, 13
    83bc:	24 00 00 f6 	b 144 <open+0x3fc>
    83c0:	00 38 00 0f 	move s0, 14
    83c4:	22 00 00 f6 	b 136 <open+0x3fc>
    83c8:	00 3c 00 0f 	move s0, 15
    83cc:	20 00 00 f6 	b 128 <open+0x3fc>
    83d0:	00 40 00 0f 	move s0, 16
    83d4:	1e 00 00 f6 	b 120 <open+0x3fc>
    83d8:	00 44 00 0f 	move s0, 17
    83dc:	1c 00 00 f6 	b 112 <open+0x3fc>
    83e0:	00 48 00 0f 	move s0, 18
    83e4:	1a 00 00 f6 	b 104 <open+0x3fc>
    83e8:	00 4c 00 0f 	move s0, 19
    83ec:	18 00 00 f6 	b 96 <open+0x3fc>
    83f0:	00 50 00 0f 	move s0, 20
    83f4:	16 00 00 f6 	b 88 <open+0x3fc>
    83f8:	00 54 00 0f 	move s0, 21
    83fc:	14 00 00 f6 	b 80 <open+0x3fc>
    8400:	00 58 00 0f 	move s0, 22
    8404:	12 00 00 f6 	b 72 <open+0x3fc>
    8408:	00 5c 00 0f 	move s0, 23
    840c:	10 00 00 f6 	b 64 <open+0x3fc>
    8410:	00 60 00 0f 	move s0, 24
    8414:	0e 00 00 f6 	b 56 <open+0x3fc>
    8418:	00 64 00 0f 	move s0, 25
    841c:	0c 00 00 f6 	b 48 <open+0x3fc>
    8420:	00 68 00 0f 	move s0, 26
    8424:	0a 00 00 f6 	b 40 <open+0x3fc>
    8428:	00 6c 00 0f 	move s0, 27
    842c:	08 00 00 f6 	b 32 <open+0x3fc>
    8430:	00 70 00 0f 	move s0, 28
    8434:	06 00 00 f6 	b 24 <open+0x3fc>
    8438:	00 74 00 0f 	move s0, 29
    843c:	04 00 00 f6 	b 16 <open+0x3fc>
    8440:	00 78 00 0f 	move s0, 30
    8444:	02 00 00 f6 	b 8 <open+0x3fc>
    8448:	00 7c 00 0f 	move s0, 31
    844c:	1e 80 00 88 	store_32 s0, 32(sp)
    8450:	05 00 00 4f 	movehi s0, 5
    8454:	00 d0 54 00 	or s0, s0, 5428
    8458:	00 03 00 a8 	load_32 s24, (s0)
    845c:	78 13 00 a8 	load_32 s27, 4(s24)
    8460:	bb 01 00 f2 	bz s27, 52 <open+0x444>
    8464:	40 03 00 0f 	move s26, 0
    8468:	1a a0 00 07 	mull_i s0, s26, 40
    846c:	3e a0 00 a8 	load_32 s1, 40(sp)
    8470:	38 03 50 c0 	add_i s25, s24, s0
    8474:	19 40 00 05 	add_i s0, s25, 16
    8478:	c9 fd ff f9 	call -2268 <strcmp>
    847c:	40 00 00 f4 	bnz s0, 8 <open+0x434>
    8480:	0a 00 00 f6 	b 40 <open+0x458>
    8484:	5a 07 00 05 	add_i s26, s26, 1
    8488:	1a 80 7d c1 	cmpge_u s0, s26, s27
    848c:	40 00 00 f4 	bnz s0, 8 <open+0x444>
    8490:	f6 ff ff f7 	b -40 <open+0x418>
    8494:	55 01 00 f8 	call 1364 <__errno_ptr>
    8498:	20 08 00 0f 	move s1, 2
    849c:	20 00 00 88 	store_32 s1, (s0)
    84a0:	00 fc ff 0f 	move s0, -1
    84a4:	0d 00 00 f6 	b 52 <open+0x488>
    84a8:	1e 80 00 a8 	load_32 s0, 32(sp)
    84ac:	3e 90 00 a8 	load_32 s1, 36(sp)
    84b0:	40 10 00 0b 	shl s2, s0, 4
    84b4:	41 00 51 c0 	add_i s2, s1, s2
    84b8:	20 04 00 0f 	move s1, 1
    84bc:	22 00 00 88 	store_32 s1, (s2)
    84c0:	39 30 00 a8 	load_32 s1, 12(s25)
    84c4:	22 10 00 88 	store_32 s1, 4(s2)
    84c8:	39 20 00 a8 	load_32 s1, 8(s25)
    84cc:	22 20 00 88 	store_32 s1, 8(s2)
    84d0:	20 00 00 0f 	move s1, 0
    84d4:	22 30 00 88 	store_32 s1, 12(s2)
    84d8:	fe b3 08 a8 	load_32 ra, 556(sp)
    84dc:	7e c3 08 a8 	load_32 s27, 560(sp)
    84e0:	5e d3 08 a8 	load_32 s26, 564(sp)
    84e4:	3e e3 08 a8 	load_32 s25, 568(sp)
    84e8:	1e f3 08 a8 	load_32 s24, 572(sp)
    84ec:	de 03 09 05 	add_i sp, sp, 576
    84f0:	1f 00 00 f0 	ret

00000000000084f4 close:
    84f4:	de 03 ff 05 	add_i sp, sp, -64
    84f8:	fe f3 00 88 	store_32 ra, 60(sp)
    84fc:	20 80 00 18 	cmplt_u s1, s0, 32
    8500:	01 01 00 f4 	bnz s1, 32 <close+0x2c>
    8504:	39 01 00 f8 	call 1252 <__errno_ptr>
    8508:	20 24 00 0f 	move s1, 9
    850c:	20 00 00 88 	store_32 s1, (s0)
    8510:	00 fc ff 0f 	move s0, -1
    8514:	fe f3 00 a8 	load_32 ra, 60(sp)
    8518:	de 03 01 05 	add_i sp, sp, 64
    851c:	1f 00 00 f0 	ret
    8520:	25 00 00 4f 	movehi s1, 5
    8524:	00 10 00 0b 	shl s0, s0, 4
    8528:	21 d0 4c 00 	or s1, s1, 4916
    852c:	21 00 50 c0 	add_i s1, s1, s0
    8530:	00 00 00 0f 	move s0, 0
    8534:	01 00 00 88 	store_32 s0, (s1)
    8538:	fe f3 00 a8 	load_32 ra, 60(sp)
    853c:	de 03 01 05 	add_i sp, sp, 64
    8540:	1f 00 00 f0 	ret

0000000000008544 read:
    8544:	de 03 f7 05 	add_i sp, sp, -576
    8548:	1e f3 08 88 	store_32 s24, 572(sp)
    854c:	3e e3 08 88 	store_32 s25, 568(sp)
    8550:	5e d3 08 88 	store_32 s26, 564(sp)
    8554:	7e c3 08 88 	store_32 s27, 560(sp)
    8558:	fe b3 08 88 	store_32 ra, 556(sp)
    855c:	60 80 00 18 	cmplt_u s3, s0, 32
    8560:	43 00 00 f4 	bnz s3, 8 <read+0x24>
    8564:	6a 00 00 f6 	b 424 <read+0x1c8>
    8568:	65 00 00 4f 	movehi s3, 5
    856c:	00 10 00 0b 	shl s0, s0, 4
    8570:	63 d0 4c 00 	or s3, s3, 4916
    8574:	a3 00 50 c0 	add_i s5, s3, s0
    8578:	05 00 00 a8 	load_32 s0, (s5)
    857c:	40 00 00 f4 	bnz s0, 8 <read+0x40>
    8580:	63 00 00 f6 	b 396 <read+0x1c8>
    8584:	65 10 00 a8 	load_32 s3, 4(s5)
    8588:	85 30 00 a8 	load_32 s4, 12(s5)
    858c:	03 00 62 c0 	sub_i s0, s3, s4
    8590:	60 04 00 14 	cmplt_i s3, s0, 1
    8594:	23 0d 00 f4 	bnz s3, 420 <read+0x1f4>
    8598:	60 00 81 c1 	cmplt_u s3, s0, s2
    859c:	43 00 00 f4 	bnz s3, 8 <read+0x60>
    85a0:	00 00 f1 c0 	move s0, s2
    85a4:	45 30 00 05 	add_i s2, s5, 12
    85a8:	c0 0a 00 f2 	bz s0, 344 <read+0x1bc>
    85ac:	5e 30 00 88 	store_32 s2, 12(sp)
    85b0:	04 ff 07 01 	and s24, s4, 511
    85b4:	3e 80 00 88 	store_32 s1, 32(sp)
    85b8:	20 03 00 0f 	move s25, 0
    85bc:	25 20 00 a8 	load_32 s1, 8(s5)
    85c0:	21 00 52 c0 	add_i s1, s1, s4
    85c4:	41 7c 00 09 	ashr s2, s1, 31
    85c8:	42 5c 00 0a 	shr s2, s2, 23
    85cc:	21 00 51 c0 	add_i s1, s1, s2
    85d0:	40 00 08 0f 	move s2, 512
    85d4:	41 27 00 09 	ashr s26, s1, 9
    85d8:	25 00 00 4f 	movehi s1, 5
    85dc:	21 b0 4c 00 	or s1, s1, 4908
    85e0:	3e 90 00 88 	store_32 s1, 36(sp)
    85e4:	20 00 04 4f 	movehi s1, 8192
    85e8:	3e 40 00 88 	store_32 s1, 16(sp)
    85ec:	3e b0 00 05 	add_i s1, sp, 44
    85f0:	3e 70 00 88 	store_32 s1, 28(sp)
    85f4:	3e 53 00 88 	store_32 s25, 20(sp)
    85f8:	1e 60 00 88 	store_32 s0, 24(sp)
    85fc:	5e a0 00 88 	store_32 s2, 40(sp)
    8600:	60 83 6c c0 	sub_i s27, s0, s25
    8604:	f8 01 00 f4 	bnz s24, 60 <read+0xfc>
    8608:	1b 00 08 18 	cmplt_u s0, s27, 512
    860c:	a0 01 00 f4 	bnz s0, 52 <read+0xfc>
    8610:	1e 90 00 a8 	load_32 s0, 36(sp)
    8614:	00 00 00 a0 	load_u8 s0, (s0)
    8618:	3e 80 00 a8 	load_32 s1, 32(sp)
    861c:	00 04 00 11 	cmpne_i s0, s0, 1
    8620:	61 80 5c c0 	add_i s3, s1, s25
    8624:	00 05 00 f4 	bnz s0, 160 <read+0x180>
    8628:	3e 40 00 a8 	load_32 s1, 16(sp)
    862c:	1a 24 00 0b 	shl s0, s26, 9
    8630:	20 80 50 c0 	add_i s1, s0, s1
    8634:	00 80 f1 c0 	move s0, s3
    8638:	eb fa ff f9 	call -5204 <memcpy>
    863c:	28 00 00 f6 	b 160 <read+0x198>
    8640:	1e 90 00 a8 	load_32 s0, 36(sp)
    8644:	00 00 00 a0 	load_u8 s0, (s0)
    8648:	00 04 00 11 	cmpne_i s0, s0, 1
    864c:	60 01 00 f4 	bnz s0, 44 <read+0x134>
    8650:	3e 40 00 a8 	load_32 s1, 16(sp)
    8654:	1a 24 00 0b 	shl s0, s26, 9
    8658:	20 80 50 c0 	add_i s1, s0, s1
    865c:	1e 70 00 a8 	load_32 s0, 28(sp)
    8660:	e1 fa ff f9 	call -5244 <memcpy>
    8664:	1e a0 00 a8 	load_32 s0, 40(sp)
    8668:	00 00 6c c0 	sub_i s0, s0, s24
    866c:	20 80 6d c1 	cmpgt_u s1, s0, s27
    8670:	a1 01 00 f4 	bnz s1, 52 <read+0x160>
    8674:	0b 00 00 f6 	b 44 <read+0x15c>
    8678:	00 00 fd c0 	move s0, s26
    867c:	3e 70 00 a8 	load_32 s1, 28(sp)
    8680:	15 02 00 f8 	call 2132 <read_sdmmc_device>
    8684:	00 00 00 12 	cmpgt_i s0, s0, 0
    8688:	40 00 00 f4 	bnz s0, 8 <read+0x14c>
    868c:	2d 00 00 f6 	b 180 <read+0x1fc>
    8690:	1e a0 00 a8 	load_32 s0, 40(sp)
    8694:	00 00 6c c0 	sub_i s0, s0, s24
    8698:	20 80 6d c1 	cmpgt_u s1, s0, s27
    869c:	41 00 00 f4 	bnz s1, 8 <read+0x160>
    86a0:	60 03 f0 c0 	move s27, s0
    86a4:	1e 80 00 a8 	load_32 s0, 32(sp)
    86a8:	3e 70 00 a8 	load_32 s1, 28(sp)
    86ac:	40 80 fd c0 	move s2, s27
    86b0:	00 80 5c c0 	add_i s0, s0, s25
    86b4:	21 00 5c c0 	add_i s1, s1, s24
    86b8:	cb fa ff f9 	call -5332 <memcpy>
    86bc:	3b 83 5c c0 	add_i s25, s27, s25
    86c0:	08 00 00 f6 	b 32 <read+0x19c>
    86c4:	00 00 fd c0 	move s0, s26
    86c8:	20 80 f1 c0 	move s1, s3
    86cc:	02 02 00 f8 	call 2056 <read_sdmmc_device>
    86d0:	00 00 00 12 	cmpgt_i s0, s0, 0
    86d4:	40 00 00 f4 	bnz s0, 8 <read+0x198>
    86d8:	1a 00 00 f6 	b 104 <read+0x1fc>
    86dc:	39 03 08 05 	add_i s25, s25, 512
    86e0:	1e 60 00 a8 	load_32 s0, 24(sp)
    86e4:	5a 07 00 05 	add_i s26, s26, 1
    86e8:	1e 53 00 a8 	load_32 s24, 20(sp)
    86ec:	5e a0 00 a8 	load_32 s2, 40(sp)
    86f0:	20 80 6c c1 	cmpgt_u s1, s0, s25
    86f4:	61 f8 ff f5 	bnz s1, -244 <read+0xbc>
    86f8:	5e 30 00 a8 	load_32 s2, 12(sp)
    86fc:	82 00 00 a8 	load_32 s4, (s2)
    8700:	24 00 50 c0 	add_i s1, s4, s0
    8704:	22 00 00 88 	store_32 s1, (s2)
    8708:	05 00 00 f6 	b 20 <read+0x1d8>
    870c:	b7 00 00 f8 	call 732 <__errno_ptr>
    8710:	20 24 00 0f 	move s1, 9
    8714:	20 00 00 88 	store_32 s1, (s0)
    8718:	00 fc ff 0f 	move s0, -1
    871c:	fe b3 08 a8 	load_32 ra, 556(sp)
    8720:	7e c3 08 a8 	load_32 s27, 560(sp)
    8724:	5e d3 08 a8 	load_32 s26, 564(sp)
    8728:	3e e3 08 a8 	load_32 s25, 568(sp)
    872c:	1e f3 08 a8 	load_32 s24, 572(sp)
    8730:	de 03 09 05 	add_i sp, sp, 576
    8734:	1f 00 00 f0 	ret
    8738:	00 00 00 0f 	move s0, 0
    873c:	f8 ff ff f7 	b -32 <read+0x1d8>
    8740:	aa 00 00 f8 	call 680 <__errno_ptr>
    8744:	20 14 00 0f 	move s1, 5
    8748:	f3 ff ff f7 	b -52 <read+0x1d0>

000000000000874c write:
    874c:	de 03 ff 05 	add_i sp, sp, -64
    8750:	fe f3 00 88 	store_32 ra, 60(sp)
    8754:	a5 00 00 f8 	call 660 <__errno_ptr>
    8758:	20 fc ff 0f 	move s1, -1
    875c:	40 04 00 0f 	move s2, 1
    8760:	40 00 00 88 	store_32 s2, (s0)
    8764:	00 80 f0 c0 	move s0, s1
    8768:	fe f3 00 a8 	load_32 ra, 60(sp)
    876c:	de 03 01 05 	add_i sp, sp, 64
    8770:	1f 00 00 f0 	ret

0000000000008774 lseek:
    8774:	de 03 ff 05 	add_i sp, sp, -64
    8778:	fe f3 00 88 	store_32 ra, 60(sp)
    877c:	60 00 f0 c0 	move s3, s0
    8780:	00 80 f0 c0 	move s0, s1
    8784:	83 80 00 18 	cmplt_u s4, s3, 32
    8788:	44 00 00 f4 	bnz s4, 8 <lseek+0x1c>
    878c:	11 00 00 f6 	b 68 <lseek+0x5c>
    8790:	25 00 00 4f 	movehi s1, 5
    8794:	63 10 00 0b 	shl s3, s3, 4
    8798:	21 d0 4c 00 	or s1, s1, 4916
    879c:	21 80 51 c0 	add_i s1, s1, s3
    87a0:	61 00 00 a8 	load_32 s3, (s1)
    87a4:	43 00 00 f4 	bnz s3, 8 <lseek+0x38>
    87a8:	0a 00 00 f6 	b 40 <lseek+0x5c>
    87ac:	62 08 00 10 	cmpeq_i s3, s2, 2
    87b0:	e3 01 00 f4 	bnz s3, 60 <lseek+0x78>
    87b4:	62 04 00 10 	cmpeq_i s3, s2, 1
    87b8:	63 02 00 f4 	bnz s3, 76 <lseek+0x90>
    87bc:	42 00 00 f4 	bnz s2, 8 <lseek+0x50>
    87c0:	0d 00 00 f6 	b 52 <lseek+0x80>
    87c4:	89 00 00 f8 	call 548 <__errno_ptr>
    87c8:	20 58 00 0f 	move s1, 22
    87cc:	03 00 00 f6 	b 12 <lseek+0x64>
    87d0:	86 00 00 f8 	call 536 <__errno_ptr>
    87d4:	20 24 00 0f 	move s1, 9
    87d8:	20 00 00 88 	store_32 s1, (s0)
    87dc:	00 fc ff 0f 	move s0, -1
    87e0:	fe f3 00 a8 	load_32 ra, 60(sp)
    87e4:	de 03 01 05 	add_i sp, sp, 64
    87e8:	1f 00 00 f0 	ret
    87ec:	41 10 00 a8 	load_32 s2, 4(s1)
    87f0:	02 00 60 c0 	sub_i s0, s2, s0
    87f4:	40 fc ff 12 	cmpgt_i s2, s0, -1
    87f8:	01 30 00 88 	store_32 s0, 12(s1)
    87fc:	22 ff ff f5 	bnz s2, -28 <lseek+0x6c>
    8800:	06 00 00 f6 	b 24 <lseek+0xa4>
    8804:	41 30 00 a8 	load_32 s2, 12(s1)
    8808:	02 00 50 c0 	add_i s0, s2, s0
    880c:	40 fc ff 12 	cmpgt_i s2, s0, -1
    8810:	01 30 00 88 	store_32 s0, 12(s1)
    8814:	62 fe ff f5 	bnz s2, -52 <lseek+0x6c>
    8818:	00 00 00 0f 	move s0, 0
    881c:	01 30 00 88 	store_32 s0, 12(s1)
    8820:	fe f3 00 a8 	load_32 ra, 60(sp)
    8824:	de 03 01 05 	add_i sp, sp, 64
    8828:	1f 00 00 f0 	ret

000000000000882c stat:
    882c:	de 03 ff 05 	add_i sp, sp, -64
    8830:	1e f3 00 88 	store_32 s24, 60(sp)
    8834:	3e e3 00 88 	store_32 s25, 56(sp)
    8838:	5e d3 00 88 	store_32 s26, 52(sp)
    883c:	7e c3 00 88 	store_32 s27, 48(sp)
    8840:	fe b3 00 88 	store_32 ra, 44(sp)
    8844:	45 00 00 4f 	movehi s2, 5
    8848:	42 d0 54 00 	or s2, s2, 5428
    884c:	42 03 00 a8 	load_32 s26, (s2)
    8850:	7a 13 00 a8 	load_32 s27, 4(s26)
    8854:	3e 90 00 88 	store_32 s1, 36(sp)
    8858:	1e a0 00 88 	store_32 s0, 40(sp)
    885c:	9b 01 00 f2 	bz s27, 48 <stat+0x60>
    8860:	00 03 00 0f 	move s24, 0
    8864:	18 a0 00 07 	mull_i s0, s24, 40
    8868:	3e a0 00 a8 	load_32 s1, 40(sp)
    886c:	3a 03 50 c0 	add_i s25, s26, s0
    8870:	19 40 00 05 	add_i s0, s25, 16
    8874:	ca fc ff f9 	call -3288 <strcmp>
    8878:	40 01 00 f2 	bz s0, 40 <stat+0x74>
    887c:	18 07 00 05 	add_i s24, s24, 1
    8880:	18 80 7d c1 	cmpge_u s0, s24, s27
    8884:	40 00 00 f4 	bnz s0, 8 <stat+0x60>
    8888:	f7 ff ff f7 	b -36 <stat+0x38>
    888c:	57 00 00 f8 	call 348 <__errno_ptr>
    8890:	20 08 00 0f 	move s1, 2
    8894:	20 00 00 88 	store_32 s1, (s0)
    8898:	00 fc ff 0f 	move s0, -1
    889c:	05 00 00 f6 	b 20 <stat+0x84>
    88a0:	19 30 00 a8 	load_32 s0, 12(s25)
    88a4:	3e 90 00 a8 	load_32 s1, 36(sp)
    88a8:	01 00 00 88 	store_32 s0, (s1)
    88ac:	00 00 00 0f 	move s0, 0
    88b0:	fe b3 00 a8 	load_32 ra, 44(sp)
    88b4:	7e c3 00 a8 	load_32 s27, 48(sp)
    88b8:	5e d3 00 a8 	load_32 s26, 52(sp)
    88bc:	3e e3 00 a8 	load_32 s25, 56(sp)
    88c0:	1e f3 00 a8 	load_32 s24, 60(sp)
    88c4:	de 03 01 05 	add_i sp, sp, 64
    88c8:	1f 00 00 f0 	ret

00000000000088cc fstat:
    88cc:	de 03 ff 05 	add_i sp, sp, -64
    88d0:	fe f3 00 88 	store_32 ra, 60(sp)
    88d4:	40 80 00 18 	cmplt_u s2, s0, 32
    88d8:	42 00 00 f4 	bnz s2, 8 <fstat+0x14>
    88dc:	0e 00 00 f6 	b 56 <fstat+0x48>
    88e0:	45 00 00 4f 	movehi s2, 5
    88e4:	00 10 00 0b 	shl s0, s0, 4
    88e8:	42 d0 4c 00 	or s2, s2, 4916
    88ec:	02 00 50 c0 	add_i s0, s2, s0
    88f0:	40 00 00 a8 	load_32 s2, (s0)
    88f4:	42 00 00 f4 	bnz s2, 8 <fstat+0x30>
    88f8:	07 00 00 f6 	b 28 <fstat+0x48>
    88fc:	00 10 00 a8 	load_32 s0, 4(s0)
    8900:	01 00 00 88 	store_32 s0, (s1)
    8904:	00 00 00 0f 	move s0, 0
    8908:	fe f3 00 a8 	load_32 ra, 60(sp)
    890c:	de 03 01 05 	add_i sp, sp, 64
    8910:	1f 00 00 f0 	ret
    8914:	35 00 00 f8 	call 212 <__errno_ptr>
    8918:	20 24 00 0f 	move s1, 9
    891c:	20 00 00 88 	store_32 s1, (s0)
    8920:	00 fc ff 0f 	move s0, -1
    8924:	fe f3 00 a8 	load_32 ra, 60(sp)
    8928:	de 03 01 05 	add_i sp, sp, 64
    892c:	1f 00 00 f0 	ret

0000000000008930 access:
    8930:	de 03 ff 05 	add_i sp, sp, -64
    8934:	1e f3 00 88 	store_32 s24, 60(sp)
    8938:	3e e3 00 88 	store_32 s25, 56(sp)
    893c:	5e d3 00 88 	store_32 s26, 52(sp)
    8940:	7e c3 00 88 	store_32 s27, 48(sp)
    8944:	fe b3 00 88 	store_32 ra, 44(sp)
    8948:	45 00 00 4f 	movehi s2, 5
    894c:	40 0b 00 0f 	move s26, 2
    8950:	42 d0 54 00 	or s2, s2, 5428
    8954:	62 03 00 a8 	load_32 s27, (s2)
    8958:	1b 13 00 a8 	load_32 s24, 4(s27)
    895c:	20 03 f0 c0 	move s25, s0
    8960:	18 03 00 f2 	bz s24, 96 <access+0x90>
    8964:	3e 90 00 88 	store_32 s1, 36(sp)
    8968:	5e a3 00 88 	store_32 s26, 40(sp)
    896c:	40 03 00 0f 	move s26, 0
    8970:	1a a0 00 07 	mull_i s0, s26, 40
    8974:	1b 00 50 c0 	add_i s0, s27, s0
    8978:	20 80 fc c0 	move s1, s25
    897c:	00 40 00 05 	add_i s0, s0, 16
    8980:	87 fc ff f9 	call -3556 <strcmp>
    8984:	40 00 00 f4 	bnz s0, 8 <access+0x5c>
    8988:	07 00 00 f6 	b 28 <access+0x74>
    898c:	5a 07 00 05 	add_i s26, s26, 1
    8990:	1a 00 7c c1 	cmpge_u s0, s26, s24
    8994:	40 00 00 f4 	bnz s0, 8 <access+0x6c>
    8998:	f6 ff ff f7 	b -40 <access+0x40>
    899c:	5e a3 00 a8 	load_32 s26, 40(sp)
    89a0:	08 00 00 f6 	b 32 <access+0x90>
    89a4:	1e 90 00 a8 	load_32 s0, 36(sp)
    89a8:	00 08 00 01 	and s0, s0, 2
    89ac:	40 00 00 f2 	bz s0, 8 <access+0x84>
    89b0:	03 00 00 f6 	b 12 <access+0x8c>
    89b4:	00 00 00 0f 	move s0, 0
    89b8:	05 00 00 f6 	b 20 <access+0x9c>
    89bc:	40 07 00 0f 	move s26, 1
    89c0:	0a 00 00 f8 	call 40 <__errno_ptr>
    89c4:	40 03 00 88 	store_32 s26, (s0)
    89c8:	00 fc ff 0f 	move s0, -1
    89cc:	fe b3 00 a8 	load_32 ra, 44(sp)
    89d0:	7e c3 00 a8 	load_32 s27, 48(sp)
    89d4:	5e d3 00 a8 	load_32 s26, 52(sp)
    89d8:	3e e3 00 a8 	load_32 s25, 56(sp)
    89dc:	1e f3 00 a8 	load_32 s24, 60(sp)
    89e0:	de 03 01 05 	add_i sp, sp, 64
    89e4:	1f 00 00 f0 	ret

00000000000089e8 __errno_ptr:
    89e8:	de 03 ff 05 	add_i sp, sp, -64
    89ec:	fe f3 00 88 	store_32 ra, 60(sp)
    89f0:	13 00 00 f8 	call 76 <get_current_thread_id>
    89f4:	25 00 00 4f 	movehi s1, 5
    89f8:	fe f3 00 a8 	load_32 ra, 60(sp)
    89fc:	00 08 00 0b 	shl s0, s0, 2
    8a00:	21 50 40 00 	or s1, s1, 4116
    8a04:	01 00 50 c0 	add_i s0, s1, s0
    8a08:	de 03 01 05 	add_i sp, sp, 64
    8a0c:	1f 00 00 f0 	ret

0000000000008a10 usleep:
    8a10:	26 00 00 ac 	getcr s1, 6
    8a14:	00 c8 00 07 	mull_i s0, s0, 50
    8a18:	01 00 50 c0 	add_i s0, s1, s0
    8a1c:	26 00 00 ac 	getcr s1, 6
    8a20:	21 00 40 c1 	cmplt_i s1, s1, s0
    8a24:	c1 ff ff f5 	bnz s1, -8 <usleep+0xc>
    8a28:	00 00 00 0f 	move s0, 0
    8a2c:	1f 00 00 f0 	ret

0000000000008a30 exit:
    8a30:	00 fc ff 0f 	move s0, -1
    8a34:	14 00 00 8c 	setcr s0, 20
    8a38:	00 00 00 f6 	b 0 <exit+0x8>

0000000000008a3c get_current_thread_id:
    8a3c:	00 00 00 ac 	getcr s0, 0
    8a40:	1f 00 00 f0 	ret

0000000000008a44 get_cycle_count:
    8a44:	06 00 00 ac 	getcr s0, 6
    8a48:	1f 00 00 f0 	ret

0000000000008a4c init_sdmmc_device:
    8a4c:	de 03 fe 05 	add_i sp, sp, -128
    8a50:	1e f3 01 88 	store_32 s24, 124(sp)
    8a54:	3e e3 01 88 	store_32 s25, 120(sp)
    8a58:	5e d3 01 88 	store_32 s26, 116(sp)
    8a5c:	7e c3 01 88 	store_32 s27, 112(sp)
    8a60:	fe b3 01 88 	store_32 ra, 108(sp)
    8a64:	18 fc ff 4f 	movehi s0, 524280
    8a68:	20 f0 01 0f 	move s1, 124
    8a6c:	40 ff 03 0f 	move s26, 255
    8a70:	40 40 03 00 	or s2, s0, 208
    8a74:	5e a0 01 88 	store_32 s2, 104(sp)
    8a78:	20 03 03 00 	or s25, s0, 192
    8a7c:	00 23 03 00 	or s24, s0, 200
    8a80:	22 00 00 88 	store_32 s1, (s2)
    8a84:	20 30 03 00 	or s1, s0, 204
    8a88:	40 04 00 0f 	move s2, 1
    8a8c:	41 00 00 88 	store_32 s2, (s1)
    8a90:	59 03 00 88 	store_32 s26, (s25)
    8a94:	58 00 00 a8 	load_32 s2, (s24)
    8a98:	42 04 00 01 	and s2, s2, 1
    8a9c:	c2 ff ff f3 	bz s2, -8 <init_sdmmc_device+0x48>
    8aa0:	60 13 03 00 	or s27, s0, 196
    8aa4:	1b 00 00 a8 	load_32 s0, (s27)
    8aa8:	59 03 00 88 	store_32 s26, (s25)
    8aac:	18 00 00 a8 	load_32 s0, (s24)
    8ab0:	00 04 00 01 	and s0, s0, 1
    8ab4:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x60>
    8ab8:	1b 00 00 a8 	load_32 s0, (s27)
    8abc:	59 03 00 88 	store_32 s26, (s25)
    8ac0:	18 00 00 a8 	load_32 s0, (s24)
    8ac4:	00 04 00 01 	and s0, s0, 1
    8ac8:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x74>
    8acc:	1b 00 00 a8 	load_32 s0, (s27)
    8ad0:	59 03 00 88 	store_32 s26, (s25)
    8ad4:	18 00 00 a8 	load_32 s0, (s24)
    8ad8:	00 04 00 01 	and s0, s0, 1
    8adc:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x88>
    8ae0:	1b 00 00 a8 	load_32 s0, (s27)
    8ae4:	59 03 00 88 	store_32 s26, (s25)
    8ae8:	18 00 00 a8 	load_32 s0, (s24)
    8aec:	00 04 00 01 	and s0, s0, 1
    8af0:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x9c>
    8af4:	1b 00 00 a8 	load_32 s0, (s27)
    8af8:	59 03 00 88 	store_32 s26, (s25)
    8afc:	18 00 00 a8 	load_32 s0, (s24)
    8b00:	00 04 00 01 	and s0, s0, 1
    8b04:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xb0>
    8b08:	1b 00 00 a8 	load_32 s0, (s27)
    8b0c:	59 03 00 88 	store_32 s26, (s25)
    8b10:	18 00 00 a8 	load_32 s0, (s24)
    8b14:	00 04 00 01 	and s0, s0, 1
    8b18:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xc4>
    8b1c:	1b 00 00 a8 	load_32 s0, (s27)
    8b20:	59 03 00 88 	store_32 s26, (s25)
    8b24:	18 00 00 a8 	load_32 s0, (s24)
    8b28:	00 04 00 01 	and s0, s0, 1
    8b2c:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xd8>
    8b30:	1b 00 00 a8 	load_32 s0, (s27)
    8b34:	59 03 00 88 	store_32 s26, (s25)
    8b38:	18 00 00 a8 	load_32 s0, (s24)
    8b3c:	00 04 00 01 	and s0, s0, 1
    8b40:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xec>
    8b44:	1b 00 00 a8 	load_32 s0, (s27)
    8b48:	59 03 00 88 	store_32 s26, (s25)
    8b4c:	18 00 00 a8 	load_32 s0, (s24)
    8b50:	00 04 00 01 	and s0, s0, 1
    8b54:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x100>
    8b58:	1b 00 00 a8 	load_32 s0, (s27)
    8b5c:	00 00 00 0f 	move s0, 0
    8b60:	01 00 00 88 	store_32 s0, (s1)
    8b64:	20 00 f0 c0 	move s1, s0
    8b68:	8d 00 00 f8 	call 564 <send_sd_command>
    8b6c:	20 04 00 10 	cmpeq_i s1, s0, 1
    8b70:	01 01 00 f4 	bnz s1, 32 <init_sdmmc_device+0x144>
    8b74:	20 fc 03 10 	cmpeq_i s1, s0, 255
    8b78:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x134>
    8b7c:	62 00 00 f6 	b 392 <init_sdmmc_device+0x2b8>
    8b80:	00 00 00 4f 	movehi s0, 0
    8b84:	00 78 0d 00 	or s0, s0, 862
    8b88:	05 e6 ff f9 	call -26604 <puts>
    8b8c:	6b 00 00 f6 	b 428 <init_sdmmc_device+0x2ec>
    8b90:	00 20 00 0f 	move s0, 8
    8b94:	20 68 05 0f 	move s1, 346
    8b98:	81 00 00 f8 	call 516 <send_sd_command>
    8b9c:	20 04 00 10 	cmpeq_i s1, s0, 1
    8ba0:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x15c>
    8ba4:	5c 00 00 f6 	b 368 <init_sdmmc_device+0x2c8>
    8ba8:	59 03 00 88 	store_32 s26, (s25)
    8bac:	18 00 00 a8 	load_32 s0, (s24)
    8bb0:	00 04 00 01 	and s0, s0, 1
    8bb4:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x160>
    8bb8:	1b 00 00 a8 	load_32 s0, (s27)
    8bbc:	59 03 00 88 	store_32 s26, (s25)
    8bc0:	18 00 00 a8 	load_32 s0, (s24)
    8bc4:	00 04 00 01 	and s0, s0, 1
    8bc8:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x174>
    8bcc:	1b 00 00 a8 	load_32 s0, (s27)
    8bd0:	59 03 00 88 	store_32 s26, (s25)
    8bd4:	18 00 00 a8 	load_32 s0, (s24)
    8bd8:	00 04 00 01 	and s0, s0, 1
    8bdc:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x188>
    8be0:	1b 00 00 a8 	load_32 s0, (s27)
    8be4:	20 3c 00 01 	and s1, s0, 15
    8be8:	21 04 00 10 	cmpeq_i s1, s1, 1
    8bec:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x1a8>
    8bf0:	4d 00 00 f6 	b 308 <init_sdmmc_device+0x2d8>
    8bf4:	59 03 00 88 	store_32 s26, (s25)
    8bf8:	18 00 00 a8 	load_32 s0, (s24)
    8bfc:	00 04 00 01 	and s0, s0, 1
    8c00:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x1ac>
    8c04:	1b 00 00 a8 	load_32 s0, (s27)
    8c08:	00 68 01 11 	cmpne_i s0, s0, 90
    8c0c:	60 0a 00 f4 	bnz s0, 332 <init_sdmmc_device+0x30c>
    8c10:	20 00 00 0f 	move s1, 0
    8c14:	3e 80 01 88 	store_32 s1, 96(sp)
    8c18:	00 dc 00 0f 	move s0, 55
    8c1c:	60 00 00 f8 	call 384 <send_sd_command>
    8c20:	20 04 00 11 	cmpne_i s1, s0, 1
    8c24:	81 06 00 f4 	bnz s1, 208 <init_sdmmc_device+0x2a8>
    8c28:	00 a4 00 0f 	move s0, 41
    8c2c:	1e 70 01 88 	store_32 s0, 92(sp)
    8c30:	00 fc 40 4f 	movehi s0, 133088
    8c34:	1e 60 01 88 	store_32 s0, 88(sp)
    8c38:	00 dc 00 0f 	move s0, 55
    8c3c:	1e 50 01 88 	store_32 s0, 84(sp)
    8c40:	1e 80 01 a8 	load_32 s0, 96(sp)
    8c44:	1e 90 01 88 	store_32 s0, 100(sp)
    8c48:	1e 70 01 a8 	load_32 s0, 92(sp)
    8c4c:	3e 60 01 a8 	load_32 s1, 88(sp)
    8c50:	53 00 00 f8 	call 332 <send_sd_command>
    8c54:	59 03 00 88 	store_32 s26, (s25)
    8c58:	38 00 00 a8 	load_32 s1, (s24)
    8c5c:	21 04 00 01 	and s1, s1, 1
    8c60:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x20c>
    8c64:	3b 00 00 a8 	load_32 s1, (s27)
    8c68:	59 03 00 88 	store_32 s26, (s25)
    8c6c:	7e 80 01 a8 	load_32 s3, 96(sp)
    8c70:	38 00 00 a8 	load_32 s1, (s24)
    8c74:	21 04 00 01 	and s1, s1, 1
    8c78:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x224>
    8c7c:	3b 00 00 a8 	load_32 s1, (s27)
    8c80:	59 03 00 88 	store_32 s26, (s25)
    8c84:	38 00 00 a8 	load_32 s1, (s24)
    8c88:	21 04 00 01 	and s1, s1, 1
    8c8c:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x238>
    8c90:	3b 00 00 a8 	load_32 s1, (s27)
    8c94:	59 03 00 88 	store_32 s26, (s25)
    8c98:	38 00 00 a8 	load_32 s1, (s24)
    8c9c:	21 04 00 01 	and s1, s1, 1
    8ca0:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x24c>
    8ca4:	3b 00 00 a8 	load_32 s1, (s27)
    8ca8:	59 03 00 88 	store_32 s26, (s25)
    8cac:	38 00 00 a8 	load_32 s1, (s24)
    8cb0:	21 04 00 01 	and s1, s1, 1
    8cb4:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x260>
    8cb8:	20 04 00 10 	cmpeq_i s1, s0, 1
    8cbc:	5b 00 00 a8 	load_32 s2, (s27)
    8cc0:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x27c>
    8cc4:	28 00 00 f6 	b 160 <init_sdmmc_device+0x318>
    8cc8:	3e 90 01 a8 	load_32 s1, 100(sp)
    8ccc:	01 90 01 11 	cmpne_i s0, s1, 100
    8cd0:	40 00 00 f4 	bnz s0, 8 <init_sdmmc_device+0x28c>
    8cd4:	2b 00 00 f6 	b 172 <init_sdmmc_device+0x334>
    8cd8:	21 04 00 05 	add_i s1, s1, 1
    8cdc:	3e 90 01 88 	store_32 s1, 100(sp)
    8ce0:	1e 50 01 a8 	load_32 s0, 84(sp)
    8ce4:	20 80 f1 c0 	move s1, s3
    8ce8:	2d 00 00 f8 	call 180 <send_sd_command>
    8cec:	20 04 00 10 	cmpeq_i s1, s0, 1
    8cf0:	c1 fa ff f5 	bnz s1, -168 <init_sdmmc_device+0x1fc>
    8cf4:	20 00 00 4f 	movehi s1, 0
    8cf8:	1e 10 00 88 	store_32 s0, 4(sp)
    8cfc:	01 e0 0e 00 	or s0, s1, 952
    8d00:	0c 00 00 f6 	b 48 <init_sdmmc_device+0x2e4>
    8d04:	20 00 00 4f 	movehi s1, 0
    8d08:	1e 10 00 88 	store_32 s0, 4(sp)
    8d0c:	01 e4 08 00 	or s0, s1, 569
    8d10:	08 00 00 f6 	b 32 <init_sdmmc_device+0x2e4>
    8d14:	20 00 00 4f 	movehi s1, 0
    8d18:	1e 10 00 88 	store_32 s0, 4(sp)
    8d1c:	01 bc 07 00 	or s0, s1, 495
    8d20:	04 00 00 f6 	b 16 <init_sdmmc_device+0x2e4>
    8d24:	20 00 00 4f 	movehi s1, 0
    8d28:	1e 10 00 88 	store_32 s0, 4(sp)
    8d2c:	01 b4 06 00 	or s0, s1, 429
    8d30:	1e 00 00 88 	store_32 s0, (sp)
    8d34:	bc e4 ff f9 	call -27920 <printf>
    8d38:	00 fc ff 0f 	move s0, -1
    8d3c:	fe b3 01 a8 	load_32 ra, 108(sp)
    8d40:	7e c3 01 a8 	load_32 s27, 112(sp)
    8d44:	5e d3 01 a8 	load_32 s26, 116(sp)
    8d48:	3e e3 01 a8 	load_32 s25, 120(sp)
    8d4c:	1e f3 01 a8 	load_32 s24, 124(sp)
    8d50:	de 03 02 05 	add_i sp, sp, 128
    8d54:	1f 00 00 f0 	ret
    8d58:	00 00 00 4f 	movehi s0, 0
    8d5c:	00 60 08 00 	or s0, s0, 536
    8d60:	8a ff ff f7 	b -472 <init_sdmmc_device+0x13c>
    8d64:	40 00 00 f2 	bz s0, 8 <init_sdmmc_device+0x320>
    8d68:	09 00 00 f6 	b 36 <init_sdmmc_device+0x340>
    8d6c:	3e a0 01 a8 	load_32 s1, 104(sp)
    8d70:	00 10 00 0f 	move s0, 4
    8d74:	01 00 00 88 	store_32 s0, (s1)
    8d78:	00 00 00 0f 	move s0, 0
    8d7c:	f0 ff ff f7 	b -64 <init_sdmmc_device+0x2f0>
    8d80:	00 00 00 4f 	movehi s0, 0
    8d84:	00 50 07 00 	or s0, s0, 468
    8d88:	80 ff ff f7 	b -512 <init_sdmmc_device+0x13c>
    8d8c:	20 00 00 4f 	movehi s1, 0
    8d90:	1e 10 00 88 	store_32 s0, 4(sp)
    8d94:	01 90 05 00 	or s0, s1, 356
    8d98:	e6 ff ff f7 	b -104 <init_sdmmc_device+0x2e4>

0000000000008d9c send_sd_command:
    8d9c:	40 00 00 4f 	movehi s2, 0
    8da0:	00 00 01 00 	or s0, s0, 64
    8da4:	e1 60 00 0a 	shr s7, s1, 24
    8da8:	42 10 14 00 	or s2, s2, 1284
    8dac:	00 fd 03 01 	and s8, s0, 255
    8db0:	61 40 00 0a 	shr s3, s1, 16
    8db4:	02 00 54 c0 	add_i s0, s2, s8
    8db8:	81 fc 03 01 	and s4, s1, 255
    8dbc:	c3 fc 03 01 	and s6, s3, 255
    8dc0:	00 00 00 a0 	load_u8 s0, (s0)
    8dc4:	61 20 00 0a 	shr s3, s1, 8
    8dc8:	a3 fc 03 01 	and s5, s3, 255
    8dcc:	00 04 00 0b 	shl s0, s0, 1
    8dd0:	78 fc ff 4f 	movehi s3, 524280
    8dd4:	00 80 33 c0 	xor s0, s0, s7
    8dd8:	02 00 50 c0 	add_i s0, s2, s0
    8ddc:	23 00 03 00 	or s1, s3, 192
    8de0:	00 00 00 a0 	load_u8 s0, (s0)
    8de4:	00 04 00 0b 	shl s0, s0, 1
    8de8:	00 00 33 c0 	xor s0, s0, s6
    8dec:	02 00 50 c0 	add_i s0, s2, s0
    8df0:	00 00 00 a0 	load_u8 s0, (s0)
    8df4:	00 04 00 0b 	shl s0, s0, 1
    8df8:	00 80 32 c0 	xor s0, s0, s5
    8dfc:	02 00 50 c0 	add_i s0, s2, s0
    8e00:	00 00 00 a0 	load_u8 s0, (s0)
    8e04:	00 04 00 0b 	shl s0, s0, 1
    8e08:	00 00 32 c0 	xor s0, s0, s4
    8e0c:	02 00 50 c0 	add_i s0, s2, s0
    8e10:	43 20 03 00 	or s2, s3, 200
    8e14:	00 00 00 a0 	load_u8 s0, (s0)
    8e18:	01 01 00 88 	store_32 s8, (s1)
    8e1c:	00 04 00 0b 	shl s0, s0, 1
    8e20:	02 01 00 a8 	load_32 s8, (s2)
    8e24:	08 05 00 01 	and s8, s8, 1
    8e28:	c8 ff ff f3 	bz s8, -8 <send_sd_command+0x84>
    8e2c:	63 10 03 00 	or s3, s3, 196
    8e30:	03 01 00 a8 	load_32 s8, (s3)
    8e34:	e1 00 00 88 	store_32 s7, (s1)
    8e38:	e2 00 00 a8 	load_32 s7, (s2)
    8e3c:	e7 04 00 01 	and s7, s7, 1
    8e40:	c7 ff ff f3 	bz s7, -8 <send_sd_command+0x9c>
    8e44:	e3 00 00 a8 	load_32 s7, (s3)
    8e48:	c1 00 00 88 	store_32 s6, (s1)
    8e4c:	c2 00 00 a8 	load_32 s6, (s2)
    8e50:	c6 04 00 01 	and s6, s6, 1
    8e54:	c6 ff ff f3 	bz s6, -8 <send_sd_command+0xb0>
    8e58:	c3 00 00 a8 	load_32 s6, (s3)
    8e5c:	a1 00 00 88 	store_32 s5, (s1)
    8e60:	a2 00 00 a8 	load_32 s5, (s2)
    8e64:	a5 04 00 01 	and s5, s5, 1
    8e68:	c5 ff ff f3 	bz s5, -8 <send_sd_command+0xc4>
    8e6c:	a3 00 00 a8 	load_32 s5, (s3)
    8e70:	81 00 00 88 	store_32 s4, (s1)
    8e74:	82 00 00 a8 	load_32 s4, (s2)
    8e78:	84 04 00 01 	and s4, s4, 1
    8e7c:	c4 ff ff f3 	bz s4, -8 <send_sd_command+0xd8>
    8e80:	00 f8 03 01 	and s0, s0, 254
    8e84:	83 00 00 a8 	load_32 s4, (s3)
    8e88:	00 04 00 00 	or s0, s0, 1
    8e8c:	01 00 00 88 	store_32 s0, (s1)
    8e90:	02 00 00 a8 	load_32 s0, (s2)
    8e94:	00 04 00 01 	and s0, s0, 1
    8e98:	c0 ff ff f3 	bz s0, -8 <send_sd_command+0xf4>
    8e9c:	80 00 00 0f 	move s4, 0
    8ea0:	03 00 00 a8 	load_32 s0, (s3)
    8ea4:	a0 fc 03 0f 	move s5, 255
    8ea8:	a1 00 00 88 	store_32 s5, (s1)
    8eac:	02 00 00 a8 	load_32 s0, (s2)
    8eb0:	00 04 00 01 	and s0, s0, 1
    8eb4:	c0 ff ff f3 	bz s0, -8 <send_sd_command+0x110>
    8eb8:	03 00 00 a8 	load_32 s0, (s3)
    8ebc:	c0 fc 03 11 	cmpne_i s6, s0, 255
    8ec0:	86 00 00 f4 	bnz s6, 16 <send_sd_command+0x134>
    8ec4:	c4 90 01 18 	cmplt_u s6, s4, 100
    8ec8:	84 04 00 05 	add_i s4, s4, 1
    8ecc:	e6 fe ff f5 	bnz s6, -36 <send_sd_command+0x10c>
    8ed0:	1f 00 00 f0 	ret

0000000000008ed4 read_sdmmc_device:
    8ed4:	de 03 fe 05 	add_i sp, sp, -128
    8ed8:	1e f3 01 88 	store_32 s24, 124(sp)
    8edc:	fe e3 01 88 	store_32 ra, 120(sp)
    8ee0:	00 83 f0 c0 	move s24, s1
    8ee4:	20 00 f0 c0 	move s1, s0
    8ee8:	00 44 00 0f 	move s0, 17
    8eec:	ac ff ff f9 	call -336 <send_sd_command>
    8ef0:	40 00 00 f4 	bnz s0, 8 <read_sdmmc_device+0x24>
    8ef4:	07 00 00 f6 	b 28 <read_sdmmc_device+0x3c>
    8ef8:	20 00 00 4f 	movehi s1, 0
    8efc:	1e 10 00 88 	store_32 s0, 4(sp)
    8f00:	01 84 04 00 	or s0, s1, 289
    8f04:	1e 00 00 88 	store_32 s0, (sp)
    8f08:	47 e4 ff f9 	call -28388 <printf>
    8f0c:	15 00 00 f6 	b 84 <read_sdmmc_device+0x8c>
    8f10:	b8 fc ff 4f 	movehi s5, 524280
    8f14:	01 00 00 4f 	movehi s0, 1
    8f18:	60 fc 03 0f 	move s3, 255
    8f1c:	45 00 03 00 	or s2, s5, 192
    8f20:	80 40 1c 00 	or s4, s0, 1808
    8f24:	25 20 03 00 	or s1, s5, 200
    8f28:	05 10 03 00 	or s0, s5, 196
    8f2c:	62 00 00 88 	store_32 s3, (s2)
    8f30:	a1 00 00 a8 	load_32 s5, (s1)
    8f34:	a5 04 00 01 	and s5, s5, 1
    8f38:	c5 ff ff f3 	bz s5, -8 <read_sdmmc_device+0x5c>
    8f3c:	a0 00 00 a8 	load_32 s5, (s0)
    8f40:	a5 f8 03 11 	cmpne_i s5, s5, 254
    8f44:	45 00 00 f4 	bnz s5, 8 <read_sdmmc_device+0x78>
    8f48:	0b 00 00 f6 	b 44 <read_sdmmc_device+0xa0>
    8f4c:	84 fc ff 05 	add_i s4, s4, -1
    8f50:	e4 fe ff f5 	bnz s4, -36 <read_sdmmc_device+0x58>
    8f54:	00 00 00 4f 	movehi s0, 0
    8f58:	00 1c 0b 00 	or s0, s0, 711
    8f5c:	10 e5 ff f9 	call -27584 <puts>
    8f60:	00 fc ff 0f 	move s0, -1
    8f64:	fe e3 01 a8 	load_32 ra, 120(sp)
    8f68:	1e f3 01 a8 	load_32 s24, 124(sp)
    8f6c:	de 03 02 05 	add_i sp, sp, 128
    8f70:	1f 00 00 f0 	ret
    8f74:	80 00 00 0f 	move s4, 0
    8f78:	04 00 00 f6 	b 16 <read_sdmmc_device+0xb4>
    8f7c:	d8 00 52 c0 	add_i s6, s24, s4
    8f80:	84 04 00 05 	add_i s4, s4, 1
    8f84:	a6 00 00 82 	store_8 s5, (s6)
    8f88:	62 00 00 88 	store_32 s3, (s2)
    8f8c:	a1 00 00 a8 	load_32 s5, (s1)
    8f90:	a5 04 00 01 	and s5, s5, 1
    8f94:	c5 ff ff f3 	bz s5, -8 <read_sdmmc_device+0xb8>
    8f98:	a0 00 00 a8 	load_32 s5, (s0)
    8f9c:	c4 00 08 18 	cmplt_u s6, s4, 512
    8fa0:	e6 fe ff f5 	bnz s6, -36 <read_sdmmc_device+0xa8>
    8fa4:	62 00 00 88 	store_32 s3, (s2)
    8fa8:	41 00 00 a8 	load_32 s2, (s1)
    8fac:	42 04 00 01 	and s2, s2, 1
    8fb0:	c2 ff ff f3 	bz s2, -8 <read_sdmmc_device+0xd4>
    8fb4:	00 00 00 a8 	load_32 s0, (s0)
    8fb8:	00 00 08 0f 	move s0, 512
    8fbc:	fe e3 01 a8 	load_32 ra, 120(sp)
    8fc0:	1e f3 01 a8 	load_32 s24, 124(sp)
    8fc4:	de 03 02 05 	add_i sp, sp, 128
    8fc8:	1f 00 00 f0 	ret

0000000000008fcc write_sdmmc_device:
    8fcc:	de 03 fe 05 	add_i sp, sp, -128
    8fd0:	1e f3 01 88 	store_32 s24, 124(sp)
    8fd4:	fe e3 01 88 	store_32 ra, 120(sp)
    8fd8:	00 83 f0 c0 	move s24, s1
    8fdc:	20 00 f0 c0 	move s1, s0
    8fe0:	00 60 00 0f 	move s0, 24
    8fe4:	6e ff ff f9 	call -584 <send_sd_command>
    8fe8:	a0 00 00 f2 	bz s0, 20 <write_sdmmc_device+0x30>
    8fec:	20 00 00 4f 	movehi s1, 0
    8ff0:	1e 10 00 88 	store_32 s0, 4(sp)
    8ff4:	01 f4 09 00 	or s0, s1, 637
    8ff8:	32 00 00 f6 	b 200 <write_sdmmc_device+0xf4>
    8ffc:	58 fc ff 4f 	movehi s2, 524280
    9000:	00 f8 03 0f 	move s0, 254
    9004:	22 00 03 00 	or s1, s2, 192
    9008:	01 00 00 88 	store_32 s0, (s1)
    900c:	02 20 03 00 	or s0, s2, 200
    9010:	60 00 00 a8 	load_32 s3, (s0)
    9014:	63 04 00 01 	and s3, s3, 1
    9018:	c3 ff ff f3 	bz s3, -8 <write_sdmmc_device+0x44>
    901c:	42 10 03 00 	or s2, s2, 196
    9020:	62 00 00 a8 	load_32 s3, (s2)
    9024:	60 00 00 0f 	move s3, 0
    9028:	98 80 51 c0 	add_i s4, s24, s3
    902c:	84 00 00 a0 	load_u8 s4, (s4)
    9030:	81 00 00 88 	store_32 s4, (s1)
    9034:	80 00 00 a8 	load_32 s4, (s0)
    9038:	84 04 00 01 	and s4, s4, 1
    903c:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0x68>
    9040:	63 04 00 05 	add_i s3, s3, 1
    9044:	a2 00 00 a8 	load_32 s5, (s2)
    9048:	83 00 08 18 	cmplt_u s4, s3, 512
    904c:	e4 fe ff f5 	bnz s4, -36 <write_sdmmc_device+0x5c>
    9050:	60 fc 03 0f 	move s3, 255
    9054:	61 00 00 88 	store_32 s3, (s1)
    9058:	80 00 00 a8 	load_32 s4, (s0)
    905c:	84 04 00 01 	and s4, s4, 1
    9060:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0x8c>
    9064:	82 00 00 a8 	load_32 s4, (s2)
    9068:	61 00 00 88 	store_32 s3, (s1)
    906c:	80 00 00 a8 	load_32 s4, (s0)
    9070:	84 04 00 01 	and s4, s4, 1
    9074:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0xa0>
    9078:	82 00 00 a8 	load_32 s4, (s2)
    907c:	61 00 00 88 	store_32 s3, (s1)
    9080:	20 00 00 a8 	load_32 s1, (s0)
    9084:	21 04 00 01 	and s1, s1, 1
    9088:	c1 ff ff f3 	bz s1, -8 <write_sdmmc_device+0xb4>
    908c:	02 00 00 a8 	load_32 s0, (s2)
    9090:	20 7c 00 01 	and s1, s0, 31
    9094:	21 14 00 10 	cmpeq_i s1, s1, 5
    9098:	41 00 00 f4 	bnz s1, 8 <write_sdmmc_device+0xd4>
    909c:	06 00 00 f6 	b 24 <write_sdmmc_device+0xe8>
    90a0:	00 00 08 0f 	move s0, 512
    90a4:	fe e3 01 a8 	load_32 ra, 120(sp)
    90a8:	1e f3 01 a8 	load_32 s24, 124(sp)
    90ac:	de 03 02 05 	add_i sp, sp, 128
    90b0:	1f 00 00 f0 	ret
    90b4:	20 00 00 4f 	movehi s1, 0
    90b8:	1e 10 00 88 	store_32 s0, 4(sp)
    90bc:	01 58 0c 00 	or s0, s1, 790
    90c0:	1e 00 00 88 	store_32 s0, (sp)
    90c4:	d8 e3 ff f9 	call -28832 <printf>
    90c8:	00 fc ff 0f 	move s0, -1
    90cc:	fe e3 01 a8 	load_32 ra, 120(sp)
    90d0:	1e f3 01 a8 	load_32 s24, 124(sp)
    90d4:	de 03 02 05 	add_i sp, sp, 128
    90d8:	1f 00 00 f0 	ret

00000000000090dc __udivdi3:
; {
    90dc:	de 03 ff 05 	add_i sp, sp, -64
    90e0:	fe f3 00 88 	store_32 ra, 60(sp)
    90e4:	80 80 f1 c0 	move s4, s3
    90e8:	a0 00 f1 c0 	move s5, s2
    90ec:	c0 80 f0 c0 	move s6, s1
    90f0:	e0 00 f0 c0 	move s7, s0
    90f4:	1e c1 00 05 	add_i s8, sp, 48
    90f8:	08 11 00 00 	or s8, s8, 4
    90fc:	28 00 00 88 	store_32 s1, (s8)
    9100:	1e c0 00 88 	store_32 s0, 48(sp)
    9104:	1e a0 00 05 	add_i s0, sp, 40
    9108:	00 10 00 00 	or s0, s0, 4
    910c:	60 00 00 88 	store_32 s3, (s0)
    9110:	5e a0 00 88 	store_32 s2, 40(sp)
; return __udivmoddi4(a, b, 0);
    9114:	28 00 00 a8 	load_32 s1, (s8)
    9118:	5e c0 00 a8 	load_32 s2, 48(sp)
    911c:	60 00 00 a8 	load_32 s3, (s0)
    9120:	1e a0 00 a8 	load_32 s0, 40(sp)
    9124:	1c 01 00 a8 	load_32 s8, (gp)
    9128:	20 01 00 0f 	move s9, 0
    912c:	1e 90 00 88 	store_32 s0, 36(sp)
    9130:	00 00 f1 c0 	move s0, s2
    9134:	5e 90 00 a8 	load_32 s2, 36(sp)
    9138:	9e 80 00 88 	store_32 s4, 32(sp)
    913c:	80 80 f4 c0 	move s4, s9
    9140:	be 70 00 88 	store_32 s5, 28(sp)
    9144:	de 60 00 88 	store_32 s6, 24(sp)
    9148:	fe 50 00 88 	store_32 s7, 20(sp)
    914c:	08 01 00 fc 	call s8
    9150:	fe f3 00 a8 	load_32 ra, 60(sp)
    9154:	de 03 01 05 	add_i sp, sp, 64
    9158:	1f 00 00 f0 	ret

000000000000915c __udivmoddi4:
; {
    915c:	de 03 fd 05 	add_i sp, sp, -192
    9160:	fe f3 02 88 	store_32 ra, 188(sp)
    9164:	a0 80 f1 c0 	move s5, s3
    9168:	c0 00 f1 c0 	move s6, s2
    916c:	e0 80 f0 c0 	move s7, s1
    9170:	00 01 f0 c0 	move s8, s0
    9174:	20 01 f2 c0 	move s9, s4
    9178:	5e a1 02 05 	add_i s10, sp, 168
    917c:	4a 11 00 00 	or s10, s10, 4
    9180:	2a 00 00 88 	store_32 s1, (s10)
    9184:	1e a0 02 88 	store_32 s0, 168(sp)
    9188:	1e 80 02 05 	add_i s0, sp, 160
    918c:	00 10 00 00 	or s0, s0, 4
    9190:	60 00 00 88 	store_32 s3, (s0)
    9194:	5e 80 02 88 	store_32 s2, 160(sp)
    9198:	9e 70 02 88 	store_32 s4, 156(sp)
    919c:	20 80 00 0f 	move s1, 32
; const unsigned n_uword_bits = sizeof(su_int) * CHAR_BIT;
    91a0:	3e 60 02 88 	store_32 s1, 152(sp)
    91a4:	20 00 01 0f 	move s1, 64
; const unsigned n_udword_bits = sizeof(du_int) * CHAR_BIT;
    91a8:	3e 50 02 88 	store_32 s1, 148(sp)
; n.all = a;
    91ac:	2a 00 00 a8 	load_32 s1, (s10)
    91b0:	5e a0 02 a8 	load_32 s2, 168(sp)
    91b4:	7e 20 02 05 	add_i s3, sp, 136
    91b8:	63 10 00 00 	or s3, s3, 4
    91bc:	23 00 00 88 	store_32 s1, (s3)
    91c0:	5e 20 02 88 	store_32 s2, 136(sp)
; d.all = b;
    91c4:	00 00 00 a8 	load_32 s0, (s0)
    91c8:	3e 80 02 a8 	load_32 s1, 160(sp)
    91cc:	5e 00 02 05 	add_i s2, sp, 128
    91d0:	42 10 00 00 	or s2, s2, 4
    91d4:	02 00 00 88 	store_32 s0, (s2)
    91d8:	3e 00 02 88 	store_32 s1, 128(sp)
; if (n.s.high == 0)
    91dc:	03 00 00 a8 	load_32 s0, (s3)
    91e0:	be 70 01 88 	store_32 s5, 92(sp)
    91e4:	de 60 01 88 	store_32 s6, 88(sp)
    91e8:	fe 50 01 88 	store_32 s7, 84(sp)
    91ec:	1e 41 01 88 	store_32 s8, 80(sp)
    91f0:	3e 31 01 88 	store_32 s9, 76(sp)
    91f4:	80 05 00 f4 	bnz s0, 176 <__udivmoddi4+0x148>
    91f8:	01 00 00 f6 	b 4 <__udivmoddi4+0xa0>
    91fc:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
    9200:	00 10 00 00 	or s0, s0, 4
    9204:	00 00 00 a8 	load_32 s0, (s0)
    9208:	00 03 00 f4 	bnz s0, 96 <__udivmoddi4+0x10c>
    920c:	01 00 00 f6 	b 4 <__udivmoddi4+0xb4>
; if (rem)
    9210:	1e 70 02 a8 	load_32 s0, 156(sp)
    9214:	60 01 00 f2 	bz s0, 44 <__udivmoddi4+0xe4>
    9218:	01 00 00 f6 	b 4 <__udivmoddi4+0xc0>
; *rem = n.s.low % d.s.low;
    921c:	1e 20 02 a8 	load_32 s0, 136(sp)
    9220:	3e 00 02 a8 	load_32 s1, 128(sp)
    9224:	5c 10 00 a8 	load_32 s2, 4(gp)
    9228:	42 00 00 fc 	call s2
    922c:	3e 70 02 a8 	load_32 s1, 156(sp)
    9230:	40 00 00 0f 	move s2, 0
    9234:	41 10 00 88 	store_32 s2, 4(s1)
    9238:	01 00 00 88 	store_32 s0, (s1)
    923c:	01 00 00 f6 	b 4 <__udivmoddi4+0xe4>
; return n.s.low / d.s.low;
    9240:	1e 20 02 a8 	load_32 s0, 136(sp)
    9244:	3e 00 02 a8 	load_32 s1, 128(sp)
    9248:	5c 20 00 a8 	load_32 s2, 8(gp)
    924c:	42 00 00 fc 	call s2
    9250:	3e c0 02 05 	add_i s1, sp, 176
    9254:	21 10 00 00 	or s1, s1, 4
    9258:	40 00 00 0f 	move s2, 0
    925c:	41 00 00 88 	store_32 s2, (s1)
    9260:	1e c0 02 88 	store_32 s0, 176(sp)
    9264:	49 02 00 f6 	b 2340 <__udivmoddi4+0xa2c>
; if (rem)
    9268:	1e 70 02 a8 	load_32 s0, 156(sp)
    926c:	00 01 00 f2 	bz s0, 32 <__udivmoddi4+0x130>
    9270:	01 00 00 f6 	b 4 <__udivmoddi4+0x118>
; *rem = n.s.low;
    9274:	1e 20 02 a8 	load_32 s0, 136(sp)
    9278:	3e 70 02 a8 	load_32 s1, 156(sp)
    927c:	40 00 00 0f 	move s2, 0
    9280:	41 10 00 88 	store_32 s2, 4(s1)
    9284:	01 00 00 88 	store_32 s0, (s1)
    9288:	01 00 00 f6 	b 4 <__udivmoddi4+0x130>
    928c:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
    9290:	00 10 00 00 	or s0, s0, 4
    9294:	20 00 00 0f 	move s1, 0
    9298:	20 00 00 88 	store_32 s1, (s0)
    929c:	3e c0 02 88 	store_32 s1, 176(sp)
    92a0:	3a 02 00 f6 	b 2280 <__udivmoddi4+0xa2c>
; if (d.s.low == 0)
    92a4:	1e 00 02 a8 	load_32 s0, 128(sp)
    92a8:	00 16 00 f4 	bnz s0, 704 <__udivmoddi4+0x40c>
    92ac:	01 00 00 f6 	b 4 <__udivmoddi4+0x154>
    92b0:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
    92b4:	00 10 00 00 	or s0, s0, 4
    92b8:	00 00 00 a8 	load_32 s0, (s0)
    92bc:	80 03 00 f4 	bnz s0, 112 <__udivmoddi4+0x1d0>
    92c0:	01 00 00 f6 	b 4 <__udivmoddi4+0x168>
; if (rem)
    92c4:	1e 70 02 a8 	load_32 s0, 156(sp)
    92c8:	a0 01 00 f2 	bz s0, 52 <__udivmoddi4+0x1a0>
    92cc:	01 00 00 f6 	b 4 <__udivmoddi4+0x174>
    92d0:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.s.high % d.s.low;
    92d4:	00 10 00 00 	or s0, s0, 4
    92d8:	00 00 00 a8 	load_32 s0, (s0)
    92dc:	3e 00 02 a8 	load_32 s1, 128(sp)
    92e0:	5c 10 00 a8 	load_32 s2, 4(gp)
    92e4:	42 00 00 fc 	call s2
    92e8:	3e 70 02 a8 	load_32 s1, 156(sp)
    92ec:	40 00 00 0f 	move s2, 0
    92f0:	41 10 00 88 	store_32 s2, 4(s1)
    92f4:	01 00 00 88 	store_32 s0, (s1)
    92f8:	01 00 00 f6 	b 4 <__udivmoddi4+0x1a0>
    92fc:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high / d.s.low;
    9300:	00 10 00 00 	or s0, s0, 4
    9304:	00 00 00 a8 	load_32 s0, (s0)
    9308:	3e 00 02 a8 	load_32 s1, 128(sp)
    930c:	5c 20 00 a8 	load_32 s2, 8(gp)
    9310:	42 00 00 fc 	call s2
    9314:	3e c0 02 05 	add_i s1, sp, 176
    9318:	21 10 00 00 	or s1, s1, 4
    931c:	40 00 00 0f 	move s2, 0
    9320:	41 00 00 88 	store_32 s2, (s1)
    9324:	1e c0 02 88 	store_32 s0, 176(sp)
    9328:	18 02 00 f6 	b 2144 <__udivmoddi4+0xa2c>
; if (n.s.low == 0)
    932c:	1e 20 02 a8 	load_32 s0, 136(sp)
    9330:	c0 04 00 f4 	bnz s0, 152 <__udivmoddi4+0x26c>
    9334:	01 00 00 f6 	b 4 <__udivmoddi4+0x1dc>
; if (rem)
    9338:	1e 70 02 a8 	load_32 s0, 156(sp)
    933c:	a0 02 00 f2 	bz s0, 84 <__udivmoddi4+0x234>
    9340:	01 00 00 f6 	b 4 <__udivmoddi4+0x1e8>
    9344:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high % d.s.high;
    9348:	00 10 00 00 	or s0, s0, 4
    934c:	00 00 00 a8 	load_32 s0, (s0)
    9350:	3e 00 02 05 	add_i s1, sp, 128
    9354:	21 10 00 00 	or s1, s1, 4
    9358:	21 00 00 a8 	load_32 s1, (s1)
    935c:	5c 10 00 a8 	load_32 s2, 4(gp)
    9360:	42 00 00 fc 	call s2
    9364:	3e c0 01 05 	add_i s1, sp, 112
    9368:	21 10 00 00 	or s1, s1, 4
    936c:	01 00 00 88 	store_32 s0, (s1)
    9370:	00 00 00 0f 	move s0, 0
; r.s.low = 0;
    9374:	1e c0 01 88 	store_32 s0, 112(sp)
; *rem = r.all;
    9378:	01 00 00 a8 	load_32 s0, (s1)
    937c:	3e c0 01 a8 	load_32 s1, 112(sp)
    9380:	5e 70 02 a8 	load_32 s2, 156(sp)
    9384:	02 10 00 88 	store_32 s0, 4(s2)
    9388:	22 00 00 88 	store_32 s1, (s2)
; }
    938c:	01 00 00 f6 	b 4 <__udivmoddi4+0x234>
    9390:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high / d.s.high;
    9394:	00 10 00 00 	or s0, s0, 4
    9398:	00 00 00 a8 	load_32 s0, (s0)
    939c:	3e 00 02 05 	add_i s1, sp, 128
    93a0:	21 10 00 00 	or s1, s1, 4
    93a4:	21 00 00 a8 	load_32 s1, (s1)
    93a8:	5c 20 00 a8 	load_32 s2, 8(gp)
    93ac:	42 00 00 fc 	call s2
    93b0:	3e c0 02 05 	add_i s1, sp, 176
    93b4:	21 10 00 00 	or s1, s1, 4
    93b8:	40 00 00 0f 	move s2, 0
    93bc:	41 00 00 88 	store_32 s2, (s1)
    93c0:	1e c0 02 88 	store_32 s0, 176(sp)
    93c4:	f1 01 00 f6 	b 1988 <__udivmoddi4+0xa2c>
    93c8:	1e 00 02 05 	add_i s0, sp, 128
; if ((d.s.high & (d.s.high - 1)) == 0)     /* if d is a power of 2 */
    93cc:	00 10 00 00 	or s0, s0, 4
    93d0:	00 00 00 a8 	load_32 s0, (s0)
    93d4:	20 fc ff 05 	add_i s1, s0, -1
    93d8:	00 80 10 c0 	and s0, s0, s1
    93dc:	c0 04 00 f4 	bnz s0, 152 <__udivmoddi4+0x318>
    93e0:	01 00 00 f6 	b 4 <__udivmoddi4+0x288>
; if (rem)
    93e4:	1e 70 02 a8 	load_32 s0, 156(sp)
    93e8:	a0 02 00 f2 	bz s0, 84 <__udivmoddi4+0x2e0>
    93ec:	01 00 00 f6 	b 4 <__udivmoddi4+0x294>
; r.s.low = n.s.low;
    93f0:	1e 20 02 a8 	load_32 s0, 136(sp)
    93f4:	1e c0 01 88 	store_32 s0, 112(sp)
    93f8:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high & (d.s.high - 1);
    93fc:	00 10 00 00 	or s0, s0, 4
    9400:	00 00 00 a8 	load_32 s0, (s0)
    9404:	3e 00 02 05 	add_i s1, sp, 128
    9408:	21 10 00 00 	or s1, s1, 4
    940c:	21 00 00 a8 	load_32 s1, (s1)
    9410:	21 fc ff 05 	add_i s1, s1, -1
    9414:	00 80 10 c0 	and s0, s0, s1
    9418:	3e c0 01 05 	add_i s1, sp, 112
    941c:	21 10 00 00 	or s1, s1, 4
    9420:	01 00 00 88 	store_32 s0, (s1)
; *rem = r.all;
    9424:	01 00 00 a8 	load_32 s0, (s1)
    9428:	3e c0 01 a8 	load_32 s1, 112(sp)
    942c:	5e 70 02 a8 	load_32 s2, 156(sp)
    9430:	02 10 00 88 	store_32 s0, 4(s2)
    9434:	22 00 00 88 	store_32 s1, (s2)
; }
    9438:	01 00 00 f6 	b 4 <__udivmoddi4+0x2e0>
    943c:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high >> __builtin_ctz(d.s.high);
    9440:	00 10 00 00 	or s0, s0, 4
    9444:	00 00 00 a8 	load_32 s0, (s0)
    9448:	3e 00 02 05 	add_i s1, sp, 128
    944c:	21 10 00 00 	or s1, s1, 4
    9450:	21 00 00 a8 	load_32 s1, (s1)
    9454:	20 80 e0 c0 	ctz s1, s1
    9458:	00 80 a0 c0 	shr s0, s0, s1
    945c:	3e c0 02 05 	add_i s1, sp, 176
    9460:	21 10 00 00 	or s1, s1, 4
    9464:	40 00 00 0f 	move s2, 0
    9468:	41 00 00 88 	store_32 s2, (s1)
    946c:	1e c0 02 88 	store_32 s0, 176(sp)
    9470:	c6 01 00 f6 	b 1816 <__udivmoddi4+0xa2c>
    9474:	1e 00 02 05 	add_i s0, sp, 128
; sr = __builtin_clz(d.s.high) - __builtin_clz(n.s.high);
    9478:	00 10 00 00 	or s0, s0, 4
    947c:	00 00 00 a8 	load_32 s0, (s0)
    9480:	00 00 c0 c0 	clz s0, s0
    9484:	3e 20 02 05 	add_i s1, sp, 136
    9488:	21 10 00 00 	or s1, s1, 4
    948c:	21 00 00 a8 	load_32 s1, (s1)
    9490:	20 80 c0 c0 	clz s1, s1
    9494:	00 80 60 c0 	sub_i s0, s0, s1
    9498:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr > n_uword_bits - 2)
    949c:	1e b0 01 a8 	load_32 s0, 108(sp)
    94a0:	00 7c 00 18 	cmplt_u s0, s0, 31
    94a4:	60 02 00 f4 	bnz s0, 76 <__udivmoddi4+0x394>
    94a8:	01 00 00 f6 	b 4 <__udivmoddi4+0x350>
; if (rem)
    94ac:	1e 70 02 a8 	load_32 s0, 156(sp)
    94b0:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0x37c>
    94b4:	01 00 00 f6 	b 4 <__udivmoddi4+0x35c>
    94b8:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.all;
    94bc:	00 10 00 00 	or s0, s0, 4
    94c0:	00 00 00 a8 	load_32 s0, (s0)
    94c4:	3e 20 02 a8 	load_32 s1, 136(sp)
    94c8:	5e 70 02 a8 	load_32 s2, 156(sp)
    94cc:	02 10 00 88 	store_32 s0, 4(s2)
    94d0:	22 00 00 88 	store_32 s1, (s2)
    94d4:	01 00 00 f6 	b 4 <__udivmoddi4+0x37c>
    94d8:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
    94dc:	00 10 00 00 	or s0, s0, 4
    94e0:	20 00 00 0f 	move s1, 0
    94e4:	20 00 00 88 	store_32 s1, (s0)
    94e8:	3e c0 02 88 	store_32 s1, 176(sp)
    94ec:	a7 01 00 f6 	b 1692 <__udivmoddi4+0xa2c>
; ++sr;
    94f0:	1e b0 01 a8 	load_32 s0, 108(sp)
    94f4:	00 04 00 05 	add_i s0, s0, 1
    94f8:	1e b0 01 88 	store_32 s0, 108(sp)
    94fc:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
    9500:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low << (n_uword_bits - sr);
    9504:	1e 20 02 a8 	load_32 s0, 136(sp)
    9508:	3e b0 01 a8 	load_32 s1, 108(sp)
    950c:	40 80 00 0f 	move s2, 32
    9510:	22 80 60 c0 	sub_i s1, s2, s1
    9514:	00 80 b0 c0 	shl s0, s0, s1
    9518:	3e e0 01 05 	add_i s1, sp, 120
    951c:	21 10 00 00 	or s1, s1, 4
    9520:	01 00 00 88 	store_32 s0, (s1)
    9524:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
    9528:	00 10 00 00 	or s0, s0, 4
    952c:	20 00 00 a8 	load_32 s1, (s0)
    9530:	7e b0 01 a8 	load_32 s3, 108(sp)
    9534:	21 80 a1 c0 	shr s1, s1, s3
    9538:	7e c0 01 05 	add_i s3, sp, 112
    953c:	63 10 00 00 	or s3, s3, 4
    9540:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
    9544:	00 00 00 a8 	load_32 s0, (s0)
    9548:	3e b0 01 a8 	load_32 s1, 108(sp)
    954c:	42 80 60 c0 	sub_i s2, s2, s1
    9550:	00 00 b1 c0 	shl s0, s0, s2
    9554:	5e 20 02 a8 	load_32 s2, 136(sp)
    9558:	22 80 a0 c0 	shr s1, s2, s1
    955c:	00 80 00 c0 	or s0, s0, s1
    9560:	1e c0 01 88 	store_32 s0, 112(sp)
; }
    9564:	e8 00 00 f6 	b 928 <__udivmoddi4+0x7a8>
    9568:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
    956c:	00 10 00 00 	or s0, s0, 4
    9570:	00 00 00 a8 	load_32 s0, (s0)
    9574:	80 12 00 f4 	bnz s0, 592 <__udivmoddi4+0x668>
    9578:	01 00 00 f6 	b 4 <__udivmoddi4+0x420>
; if ((d.s.low & (d.s.low - 1)) == 0)     /* if d is a power of 2 */
    957c:	1e 00 02 a8 	load_32 s0, 128(sp)
    9580:	20 fc ff 05 	add_i s1, s0, -1
    9584:	00 80 10 c0 	and s0, s0, s1
    9588:	c0 06 00 f4 	bnz s0, 216 <__udivmoddi4+0x504>
    958c:	01 00 00 f6 	b 4 <__udivmoddi4+0x434>
; if (rem)
    9590:	1e 70 02 a8 	load_32 s0, 156(sp)
    9594:	60 01 00 f2 	bz s0, 44 <__udivmoddi4+0x464>
    9598:	01 00 00 f6 	b 4 <__udivmoddi4+0x440>
; *rem = n.s.low & (d.s.low - 1);
    959c:	1e 20 02 a8 	load_32 s0, 136(sp)
    95a0:	3e 00 02 a8 	load_32 s1, 128(sp)
    95a4:	21 fc ff 05 	add_i s1, s1, -1
    95a8:	00 80 10 c0 	and s0, s0, s1
    95ac:	3e 70 02 a8 	load_32 s1, 156(sp)
    95b0:	40 00 00 0f 	move s2, 0
    95b4:	41 10 00 88 	store_32 s2, 4(s1)
    95b8:	01 00 00 88 	store_32 s0, (s1)
    95bc:	01 00 00 f6 	b 4 <__udivmoddi4+0x464>
; if (d.s.low == 1)
    95c0:	1e 00 02 a8 	load_32 s0, 128(sp)
    95c4:	00 04 00 11 	cmpne_i s0, s0, 1
    95c8:	60 01 00 f4 	bnz s0, 44 <__udivmoddi4+0x498>
    95cc:	01 00 00 f6 	b 4 <__udivmoddi4+0x474>
    95d0:	1e 20 02 05 	add_i s0, sp, 136
; return n.all;
    95d4:	00 10 00 00 	or s0, s0, 4
    95d8:	00 00 00 a8 	load_32 s0, (s0)
    95dc:	3e 20 02 a8 	load_32 s1, 136(sp)
    95e0:	5e c0 02 05 	add_i s2, sp, 176
    95e4:	42 10 00 00 	or s2, s2, 4
    95e8:	02 00 00 88 	store_32 s0, (s2)
    95ec:	3e c0 02 88 	store_32 s1, 176(sp)
    95f0:	66 01 00 f6 	b 1432 <__udivmoddi4+0xa2c>
; sr = __builtin_ctz(d.s.low);
    95f4:	1e 00 02 a8 	load_32 s0, 128(sp)
    95f8:	00 00 e0 c0 	ctz s0, s0
    95fc:	1e b0 01 88 	store_32 s0, 108(sp)
    9600:	1e 20 02 05 	add_i s0, sp, 136
; q.s.high = n.s.high >> sr;
    9604:	00 10 00 00 	or s0, s0, 4
    9608:	20 00 00 a8 	load_32 s1, (s0)
    960c:	5e b0 01 a8 	load_32 s2, 108(sp)
    9610:	21 00 a1 c0 	shr s1, s1, s2
    9614:	5e e0 01 05 	add_i s2, sp, 120
    9618:	42 10 00 00 	or s2, s2, 4
    961c:	22 00 00 88 	store_32 s1, (s2)
; q.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
    9620:	00 00 00 a8 	load_32 s0, (s0)
    9624:	3e b0 01 a8 	load_32 s1, 108(sp)
    9628:	60 80 00 0f 	move s3, 32
    962c:	63 80 60 c0 	sub_i s3, s3, s1
    9630:	00 80 b1 c0 	shl s0, s0, s3
    9634:	7e 20 02 a8 	load_32 s3, 136(sp)
    9638:	23 80 a0 c0 	shr s1, s3, s1
    963c:	00 80 00 c0 	or s0, s0, s1
    9640:	1e e0 01 88 	store_32 s0, 120(sp)
; return q.all;
    9644:	02 00 00 a8 	load_32 s0, (s2)
    9648:	3e e0 01 a8 	load_32 s1, 120(sp)
    964c:	5e c0 02 05 	add_i s2, sp, 176
    9650:	42 10 00 00 	or s2, s2, 4
    9654:	02 00 00 88 	store_32 s0, (s2)
    9658:	3e c0 02 88 	store_32 s1, 176(sp)
    965c:	4b 01 00 f6 	b 1324 <__udivmoddi4+0xa2c>
; sr = 1 + n_uword_bits + __builtin_clz(d.s.low) - __builtin_clz(n.s.high);
    9660:	1e 00 02 a8 	load_32 s0, 128(sp)
    9664:	00 00 c0 c0 	clz s0, s0
    9668:	00 84 00 05 	add_i s0, s0, 33
    966c:	3e 20 02 05 	add_i s1, sp, 136
    9670:	21 10 00 00 	or s1, s1, 4
    9674:	21 00 00 a8 	load_32 s1, (s1)
    9678:	20 80 c0 c0 	clz s1, s1
    967c:	00 80 60 c0 	sub_i s0, s0, s1
    9680:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr == n_uword_bits)
    9684:	1e b0 01 a8 	load_32 s0, 108(sp)
    9688:	00 80 00 11 	cmpne_i s0, s0, 32
    968c:	00 02 00 f4 	bnz s0, 64 <__udivmoddi4+0x570>
    9690:	01 00 00 f6 	b 4 <__udivmoddi4+0x538>
    9694:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
    9698:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low;
    969c:	3e 20 02 a8 	load_32 s1, 136(sp)
    96a0:	5e e0 01 05 	add_i s2, sp, 120
    96a4:	42 10 00 00 	or s2, s2, 4
    96a8:	22 00 00 88 	store_32 s1, (s2)
    96ac:	3e c0 01 05 	add_i s1, sp, 112
; r.s.high = 0;
    96b0:	21 10 00 00 	or s1, s1, 4
    96b4:	01 00 00 88 	store_32 s0, (s1)
    96b8:	1e 20 02 05 	add_i s0, sp, 136
; r.s.low = n.s.high;
    96bc:	00 10 00 00 	or s0, s0, 4
    96c0:	00 00 00 a8 	load_32 s0, (s0)
    96c4:	1e c0 01 88 	store_32 s0, 112(sp)
; }
    96c8:	3e 00 00 f6 	b 248 <__udivmoddi4+0x664>
; else if (sr < n_uword_bits)  // 2 <= sr <= n_uword_bits - 1
    96cc:	1e b0 01 a8 	load_32 s0, 108(sp)
    96d0:	00 7c 00 16 	cmpgt_u s0, s0, 31
    96d4:	a0 03 00 f4 	bnz s0, 116 <__udivmoddi4+0x5ec>
    96d8:	01 00 00 f6 	b 4 <__udivmoddi4+0x580>
    96dc:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
    96e0:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low << (n_uword_bits - sr);
    96e4:	1e 20 02 a8 	load_32 s0, 136(sp)
    96e8:	3e b0 01 a8 	load_32 s1, 108(sp)
    96ec:	40 80 00 0f 	move s2, 32
    96f0:	22 80 60 c0 	sub_i s1, s2, s1
    96f4:	00 80 b0 c0 	shl s0, s0, s1
    96f8:	3e e0 01 05 	add_i s1, sp, 120
    96fc:	21 10 00 00 	or s1, s1, 4
    9700:	01 00 00 88 	store_32 s0, (s1)
    9704:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
    9708:	00 10 00 00 	or s0, s0, 4
    970c:	20 00 00 a8 	load_32 s1, (s0)
    9710:	7e b0 01 a8 	load_32 s3, 108(sp)
    9714:	21 80 a1 c0 	shr s1, s1, s3
    9718:	7e c0 01 05 	add_i s3, sp, 112
    971c:	63 10 00 00 	or s3, s3, 4
    9720:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
    9724:	00 00 00 a8 	load_32 s0, (s0)
    9728:	3e b0 01 a8 	load_32 s1, 108(sp)
    972c:	42 80 60 c0 	sub_i s2, s2, s1
    9730:	00 00 b1 c0 	shl s0, s0, s2
    9734:	5e 20 02 a8 	load_32 s2, 136(sp)
    9738:	22 80 a0 c0 	shr s1, s2, s1
    973c:	00 80 00 c0 	or s0, s0, s1
    9740:	1e c0 01 88 	store_32 s0, 112(sp)
; }
    9744:	1e 00 00 f6 	b 120 <__udivmoddi4+0x660>
; q.s.low = n.s.low << (n_udword_bits - sr);
    9748:	1e 20 02 a8 	load_32 s0, 136(sp)
    974c:	3e b0 01 a8 	load_32 s1, 108(sp)
    9750:	40 00 01 0f 	move s2, 64
    9754:	22 80 60 c0 	sub_i s1, s2, s1
    9758:	00 80 b0 c0 	shl s0, s0, s1
    975c:	1e e0 01 88 	store_32 s0, 120(sp)
    9760:	1e 20 02 05 	add_i s0, sp, 136
; q.s.high = (n.s.high << (n_udword_bits - sr)) |
    9764:	00 10 00 00 	or s0, s0, 4
    9768:	20 00 00 a8 	load_32 s1, (s0)
    976c:	7e b0 01 a8 	load_32 s3, 108(sp)
    9770:	42 80 61 c0 	sub_i s2, s2, s3
    9774:	21 00 b1 c0 	shl s1, s1, s2
; (n.s.low >> (sr - n_uword_bits));
    9778:	5e 20 02 a8 	load_32 s2, 136(sp)
    977c:	63 80 ff 05 	add_i s3, s3, -32
    9780:	42 80 a1 c0 	shr s2, s2, s3
; q.s.high = (n.s.high << (n_udword_bits - sr)) |
    9784:	21 00 01 c0 	or s1, s1, s2
    9788:	5e e0 01 05 	add_i s2, sp, 120
    978c:	42 10 00 00 	or s2, s2, 4
    9790:	22 00 00 88 	store_32 s1, (s2)
    9794:	3e c0 01 05 	add_i s1, sp, 112
; r.s.high = 0;
    9798:	21 10 00 00 	or s1, s1, 4
    979c:	40 00 00 0f 	move s2, 0
    97a0:	41 00 00 88 	store_32 s2, (s1)
; r.s.low = n.s.high >> (sr - n_uword_bits);
    97a4:	00 00 00 a8 	load_32 s0, (s0)
    97a8:	3e b0 01 a8 	load_32 s1, 108(sp)
    97ac:	21 80 ff 05 	add_i s1, s1, -32
    97b0:	00 80 a0 c0 	shr s0, s0, s1
    97b4:	1e c0 01 88 	store_32 s0, 112(sp)
    97b8:	01 00 00 f6 	b 4 <__udivmoddi4+0x660>
    97bc:	01 00 00 f6 	b 4 <__udivmoddi4+0x664>
; }
    97c0:	50 00 00 f6 	b 320 <__udivmoddi4+0x7a4>
    97c4:	1e 00 02 05 	add_i s0, sp, 128
; sr = __builtin_clz(d.s.high) - __builtin_clz(n.s.high);
    97c8:	00 10 00 00 	or s0, s0, 4
    97cc:	00 00 00 a8 	load_32 s0, (s0)
    97d0:	00 00 c0 c0 	clz s0, s0
    97d4:	3e 20 02 05 	add_i s1, sp, 136
    97d8:	21 10 00 00 	or s1, s1, 4
    97dc:	21 00 00 a8 	load_32 s1, (s1)
    97e0:	20 80 c0 c0 	clz s1, s1
    97e4:	00 80 60 c0 	sub_i s0, s0, s1
    97e8:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr > n_uword_bits - 1)
    97ec:	1e b0 01 a8 	load_32 s0, 108(sp)
    97f0:	00 80 00 18 	cmplt_u s0, s0, 32
    97f4:	60 02 00 f4 	bnz s0, 76 <__udivmoddi4+0x6e4>
    97f8:	01 00 00 f6 	b 4 <__udivmoddi4+0x6a0>
; if (rem)
    97fc:	1e 70 02 a8 	load_32 s0, 156(sp)
    9800:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0x6cc>
    9804:	01 00 00 f6 	b 4 <__udivmoddi4+0x6ac>
    9808:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.all;
    980c:	00 10 00 00 	or s0, s0, 4
    9810:	00 00 00 a8 	load_32 s0, (s0)
    9814:	3e 20 02 a8 	load_32 s1, 136(sp)
    9818:	5e 70 02 a8 	load_32 s2, 156(sp)
    981c:	02 10 00 88 	store_32 s0, 4(s2)
    9820:	22 00 00 88 	store_32 s1, (s2)
    9824:	01 00 00 f6 	b 4 <__udivmoddi4+0x6cc>
    9828:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
    982c:	00 10 00 00 	or s0, s0, 4
    9830:	20 00 00 0f 	move s1, 0
    9834:	20 00 00 88 	store_32 s1, (s0)
    9838:	3e c0 02 88 	store_32 s1, 176(sp)
    983c:	d3 00 00 f6 	b 844 <__udivmoddi4+0xa2c>
; ++sr;
    9840:	1e b0 01 a8 	load_32 s0, 108(sp)
    9844:	00 04 00 05 	add_i s0, s0, 1
    9848:	1e b0 01 88 	store_32 s0, 108(sp)
    984c:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
    9850:	1e e0 01 88 	store_32 s0, 120(sp)
; if (sr == n_uword_bits)
    9854:	1e b0 01 a8 	load_32 s0, 108(sp)
    9858:	00 80 00 11 	cmpne_i s0, s0, 32
    985c:	e0 01 00 f4 	bnz s0, 60 <__udivmoddi4+0x73c>
    9860:	01 00 00 f6 	b 4 <__udivmoddi4+0x708>
; q.s.high = n.s.low;
    9864:	1e 20 02 a8 	load_32 s0, 136(sp)
    9868:	3e e0 01 05 	add_i s1, sp, 120
    986c:	21 10 00 00 	or s1, s1, 4
    9870:	01 00 00 88 	store_32 s0, (s1)
    9874:	1e c0 01 05 	add_i s0, sp, 112
; r.s.high = 0;
    9878:	00 10 00 00 	or s0, s0, 4
    987c:	20 00 00 0f 	move s1, 0
    9880:	20 00 00 88 	store_32 s1, (s0)
    9884:	1e 20 02 05 	add_i s0, sp, 136
; r.s.low = n.s.high;
    9888:	00 10 00 00 	or s0, s0, 4
    988c:	00 00 00 a8 	load_32 s0, (s0)
    9890:	1e c0 01 88 	store_32 s0, 112(sp)
; }
    9894:	1a 00 00 f6 	b 104 <__udivmoddi4+0x7a0>
; q.s.high = n.s.low << (n_uword_bits - sr);
    9898:	1e 20 02 a8 	load_32 s0, 136(sp)
    989c:	3e b0 01 a8 	load_32 s1, 108(sp)
    98a0:	40 80 00 0f 	move s2, 32
    98a4:	22 80 60 c0 	sub_i s1, s2, s1
    98a8:	00 80 b0 c0 	shl s0, s0, s1
    98ac:	3e e0 01 05 	add_i s1, sp, 120
    98b0:	21 10 00 00 	or s1, s1, 4
    98b4:	01 00 00 88 	store_32 s0, (s1)
    98b8:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
    98bc:	00 10 00 00 	or s0, s0, 4
    98c0:	20 00 00 a8 	load_32 s1, (s0)
    98c4:	7e b0 01 a8 	load_32 s3, 108(sp)
    98c8:	21 80 a1 c0 	shr s1, s1, s3
    98cc:	7e c0 01 05 	add_i s3, sp, 112
    98d0:	63 10 00 00 	or s3, s3, 4
    98d4:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
    98d8:	00 00 00 a8 	load_32 s0, (s0)
    98dc:	3e b0 01 a8 	load_32 s1, 108(sp)
    98e0:	42 80 60 c0 	sub_i s2, s2, s1
    98e4:	00 00 b1 c0 	shl s0, s0, s2
    98e8:	5e 20 02 a8 	load_32 s2, 136(sp)
    98ec:	22 80 a0 c0 	shr s1, s2, s1
    98f0:	00 80 00 c0 	or s0, s0, s1
    98f4:	1e c0 01 88 	store_32 s0, 112(sp)
    98f8:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a0>
    98fc:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a4>
    9900:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a8>
    9904:	00 00 00 0f 	move s0, 0
; su_int carry = 0;
    9908:	1e a0 01 88 	store_32 s0, 104(sp)
; for (; sr > 0; --sr)
    990c:	01 00 00 f6 	b 4 <__udivmoddi4+0x7b4>
    9910:	1e b0 01 a8 	load_32 s0, 108(sp)
    9914:	a0 0f 00 f2 	bz s0, 500 <__udivmoddi4+0x9ac>
    9918:	01 00 00 f6 	b 4 <__udivmoddi4+0x7c0>
    991c:	1e c0 01 05 	add_i s0, sp, 112
; r.s.high = (r.s.high << 1) | (r.s.low  >> (n_uword_bits - 1));
    9920:	00 10 00 00 	or s0, s0, 4
    9924:	20 00 00 a8 	load_32 s1, (s0)
    9928:	21 04 00 0b 	shl s1, s1, 1
    992c:	5e c0 01 a8 	load_32 s2, 112(sp)
    9930:	42 7c 00 0a 	shr s2, s2, 31
    9934:	21 00 01 c0 	or s1, s1, s2
    9938:	20 00 00 88 	store_32 s1, (s0)
; r.s.low  = (r.s.low  << 1) | (q.s.high >> (n_uword_bits - 1));
    993c:	3e c0 01 a8 	load_32 s1, 112(sp)
    9940:	21 04 00 0b 	shl s1, s1, 1
    9944:	5e e0 01 05 	add_i s2, sp, 120
    9948:	42 10 00 00 	or s2, s2, 4
    994c:	62 00 00 a8 	load_32 s3, (s2)
    9950:	63 7c 00 0a 	shr s3, s3, 31
    9954:	21 80 01 c0 	or s1, s1, s3
    9958:	3e c0 01 88 	store_32 s1, 112(sp)
; q.s.high = (q.s.high << 1) | (q.s.low  >> (n_uword_bits - 1));
    995c:	22 00 00 a8 	load_32 s1, (s2)
    9960:	21 04 00 0b 	shl s1, s1, 1
    9964:	7e e0 01 a8 	load_32 s3, 120(sp)
    9968:	63 7c 00 0a 	shr s3, s3, 31
    996c:	21 80 01 c0 	or s1, s1, s3
    9970:	22 00 00 88 	store_32 s1, (s2)
; q.s.low  = (q.s.low  << 1) | carry;
    9974:	3e e0 01 a8 	load_32 s1, 120(sp)
    9978:	21 04 00 0b 	shl s1, s1, 1
    997c:	5e a0 01 a8 	load_32 s2, 104(sp)
    9980:	21 00 01 c0 	or s1, s1, s2
    9984:	3e e0 01 88 	store_32 s1, 120(sp)
    9988:	3e 00 02 05 	add_i s1, sp, 128
; const di_int s = (di_int)(d.all - r.all - 1) >> (n_udword_bits - 1);
    998c:	21 10 00 00 	or s1, s1, 4
    9990:	41 00 00 a8 	load_32 s2, (s1)
    9994:	7e 00 02 a8 	load_32 s3, 128(sp)
    9998:	80 00 00 a8 	load_32 s4, (s0)
    999c:	be c0 01 a8 	load_32 s5, 112(sp)
    99a0:	c3 80 82 c1 	cmplt_u s6, s3, s5
    99a4:	e0 00 00 0f 	move s7, 0
    99a8:	00 05 00 0f 	move s8, 1
    99ac:	20 01 f4 c0 	move s9, s8
    99b0:	1e 20 01 88 	store_32 s0, 72(sp)
    99b4:	3e 10 01 88 	store_32 s1, 68(sp)
    99b8:	5e 00 01 88 	store_32 s2, 64(sp)
    99bc:	7e f0 00 88 	store_32 s3, 60(sp)
    99c0:	9e e0 00 88 	store_32 s4, 56(sp)
    99c4:	be d0 00 88 	store_32 s5, 52(sp)
    99c8:	fe c0 00 88 	store_32 s7, 48(sp)
    99cc:	1e b1 00 88 	store_32 s8, 44(sp)
    99d0:	3e a1 00 88 	store_32 s9, 40(sp)
    99d4:	66 00 00 f4 	bnz s6, 12 <__udivmoddi4+0x884>
    99d8:	1e c0 00 a8 	load_32 s0, 48(sp)
    99dc:	1e a0 00 88 	store_32 s0, 40(sp)
    99e0:	1e a0 00 a8 	load_32 s0, 40(sp)
    99e4:	3e 00 01 a8 	load_32 s1, 64(sp)
    99e8:	5e e0 00 a8 	load_32 s2, 56(sp)
    99ec:	21 00 61 c0 	sub_i s1, s1, s2
    99f0:	01 00 60 c0 	sub_i s0, s1, s0
    99f4:	3e f0 00 a8 	load_32 s1, 60(sp)
    99f8:	5e d0 00 a8 	load_32 s2, 52(sp)
    99fc:	61 00 61 c0 	sub_i s3, s1, s2
    9a00:	83 fc ff 05 	add_i s4, s3, -1
    9a04:	64 80 81 c1 	cmplt_u s3, s4, s3
    9a08:	be b0 00 a8 	load_32 s5, 44(sp)
    9a0c:	1e 90 00 88 	store_32 s0, 36(sp)
    9a10:	9e 80 00 88 	store_32 s4, 32(sp)
    9a14:	be 70 00 88 	store_32 s5, 28(sp)
    9a18:	63 00 00 f4 	bnz s3, 12 <__udivmoddi4+0x8c8>
    9a1c:	1e c0 00 a8 	load_32 s0, 48(sp)
    9a20:	1e 70 00 88 	store_32 s0, 28(sp)
    9a24:	1e 70 00 a8 	load_32 s0, 28(sp)
    9a28:	3e 80 00 a8 	load_32 s1, 32(sp)
    9a2c:	41 fc ff 11 	cmpne_i s2, s1, -1
    9a30:	7e b0 00 a8 	load_32 s3, 44(sp)
    9a34:	1e 60 00 88 	store_32 s0, 24(sp)
    9a38:	7e 50 00 88 	store_32 s3, 20(sp)
    9a3c:	62 00 00 f4 	bnz s2, 12 <__udivmoddi4+0x8ec>
    9a40:	1e 60 00 a8 	load_32 s0, 24(sp)
    9a44:	1e 50 00 88 	store_32 s0, 20(sp)
    9a48:	1e 50 00 a8 	load_32 s0, 20(sp)
    9a4c:	3e 90 00 a8 	load_32 s1, 36(sp)
    9a50:	01 00 50 c0 	add_i s0, s1, s0
    9a54:	00 fc ff 05 	add_i s0, s0, -1
    9a58:	00 7c 00 09 	ashr s0, s0, 31
    9a5c:	3e 80 01 05 	add_i s1, sp, 96
    9a60:	21 10 00 00 	or s1, s1, 4
    9a64:	01 00 00 88 	store_32 s0, (s1)
    9a68:	1e 80 01 88 	store_32 s0, 96(sp)
; carry = s & 1;
    9a6c:	1e 80 01 a8 	load_32 s0, 96(sp)
    9a70:	00 04 00 01 	and s0, s0, 1
    9a74:	1e a0 01 88 	store_32 s0, 104(sp)
; r.all -= d.all & s;
    9a78:	1e 10 01 a8 	load_32 s0, 68(sp)
    9a7c:	40 00 00 a8 	load_32 s2, (s0)
    9a80:	7e 00 02 a8 	load_32 s3, 128(sp)
    9a84:	21 00 00 a8 	load_32 s1, (s1)
    9a88:	9e 80 01 a8 	load_32 s4, 96(sp)
    9a8c:	22 80 10 c0 	and s1, s2, s1
    9a90:	43 00 12 c0 	and s2, s3, s4
    9a94:	7e 20 01 a8 	load_32 s3, 72(sp)
    9a98:	83 00 00 a8 	load_32 s4, (s3)
    9a9c:	be c0 01 a8 	load_32 s5, 112(sp)
    9aa0:	c5 00 81 c1 	cmplt_u s6, s5, s2
    9aa4:	fe b0 00 a8 	load_32 s7, 44(sp)
    9aa8:	3e 40 00 88 	store_32 s1, 16(sp)
    9aac:	5e 30 00 88 	store_32 s2, 12(sp)
    9ab0:	9e 20 00 88 	store_32 s4, 8(sp)
    9ab4:	be 10 00 88 	store_32 s5, 4(sp)
    9ab8:	fe 00 00 88 	store_32 s7, (sp)
    9abc:	66 00 00 f4 	bnz s6, 12 <__udivmoddi4+0x96c>
    9ac0:	1e c0 00 a8 	load_32 s0, 48(sp)
    9ac4:	1e 00 00 88 	store_32 s0, (sp)
    9ac8:	1e 00 00 a8 	load_32 s0, (sp)
    9acc:	3e 20 00 a8 	load_32 s1, 8(sp)
    9ad0:	5e 40 00 a8 	load_32 s2, 16(sp)
    9ad4:	21 00 61 c0 	sub_i s1, s1, s2
    9ad8:	01 00 60 c0 	sub_i s0, s1, s0
    9adc:	3e 10 00 a8 	load_32 s1, 4(sp)
    9ae0:	5e 30 00 a8 	load_32 s2, 12(sp)
    9ae4:	61 00 61 c0 	sub_i s3, s1, s2
    9ae8:	9e 20 01 a8 	load_32 s4, 72(sp)
    9aec:	04 00 00 88 	store_32 s0, (s4)
    9af0:	7e c0 01 88 	store_32 s3, 112(sp)
; }
    9af4:	01 00 00 f6 	b 4 <__udivmoddi4+0x99c>
; for (; sr > 0; --sr)
    9af8:	1e b0 01 a8 	load_32 s0, 108(sp)
    9afc:	00 fc ff 05 	add_i s0, s0, -1
    9b00:	1e b0 01 88 	store_32 s0, 108(sp)
    9b04:	83 ff ff f7 	b -500 <__udivmoddi4+0x7b4>
    9b08:	1e e0 01 05 	add_i s0, sp, 120
; q.all = (q.all << 1) | carry;
    9b0c:	00 10 00 00 	or s0, s0, 4
    9b10:	20 00 00 a8 	load_32 s1, (s0)
    9b14:	5e e0 01 a8 	load_32 s2, 120(sp)
    9b18:	62 7c 00 0a 	shr s3, s2, 31
    9b1c:	21 04 00 0b 	shl s1, s1, 1
    9b20:	21 80 01 c0 	or s1, s1, s3
    9b24:	42 04 00 0b 	shl s2, s2, 1
    9b28:	7e a0 01 a8 	load_32 s3, 104(sp)
    9b2c:	42 80 01 c0 	or s2, s2, s3
    9b30:	20 00 00 88 	store_32 s1, (s0)
    9b34:	5e e0 01 88 	store_32 s2, 120(sp)
; if (rem)
    9b38:	1e 70 02 a8 	load_32 s0, 156(sp)
    9b3c:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0xa08>
    9b40:	01 00 00 f6 	b 4 <__udivmoddi4+0x9e8>
    9b44:	1e c0 01 05 	add_i s0, sp, 112
; *rem = r.all;
    9b48:	00 10 00 00 	or s0, s0, 4
    9b4c:	00 00 00 a8 	load_32 s0, (s0)
    9b50:	3e c0 01 a8 	load_32 s1, 112(sp)
    9b54:	5e 70 02 a8 	load_32 s2, 156(sp)
    9b58:	02 10 00 88 	store_32 s0, 4(s2)
    9b5c:	22 00 00 88 	store_32 s1, (s2)
    9b60:	01 00 00 f6 	b 4 <__udivmoddi4+0xa08>
    9b64:	1e e0 01 05 	add_i s0, sp, 120
; return q.all;
    9b68:	00 10 00 00 	or s0, s0, 4
    9b6c:	00 00 00 a8 	load_32 s0, (s0)
    9b70:	3e e0 01 a8 	load_32 s1, 120(sp)
    9b74:	5e c0 02 05 	add_i s2, sp, 176
    9b78:	42 10 00 00 	or s2, s2, 4
    9b7c:	02 00 00 88 	store_32 s0, (s2)
    9b80:	3e c0 02 88 	store_32 s1, 176(sp)
    9b84:	01 00 00 f6 	b 4 <__udivmoddi4+0xa2c>
    9b88:	1e c0 02 05 	add_i s0, sp, 176
; }
    9b8c:	00 10 00 00 	or s0, s0, 4
    9b90:	20 00 00 a8 	load_32 s1, (s0)
    9b94:	1e c0 02 a8 	load_32 s0, 176(sp)
    9b98:	fe f3 02 a8 	load_32 ra, 188(sp)
    9b9c:	de 03 03 05 	add_i sp, sp, 192
    9ba0:	1f 00 00 f0 	ret

0000000000009ba4 __umoddi3:
; {
    9ba4:	de 03 ff 05 	add_i sp, sp, -64
    9ba8:	fe f3 00 88 	store_32 ra, 60(sp)
    9bac:	80 80 f1 c0 	move s4, s3
    9bb0:	a0 00 f1 c0 	move s5, s2
    9bb4:	c0 80 f0 c0 	move s6, s1
    9bb8:	e0 00 f0 c0 	move s7, s0
    9bbc:	1e c1 00 05 	add_i s8, sp, 48
    9bc0:	08 11 00 00 	or s8, s8, 4
    9bc4:	28 00 00 88 	store_32 s1, (s8)
    9bc8:	1e c0 00 88 	store_32 s0, 48(sp)
    9bcc:	1e a0 00 05 	add_i s0, sp, 40
    9bd0:	00 10 00 00 	or s0, s0, 4
    9bd4:	60 00 00 88 	store_32 s3, (s0)
    9bd8:	5e a0 00 88 	store_32 s2, 40(sp)
; __udivmoddi4(a, b, &r);
    9bdc:	28 00 00 a8 	load_32 s1, (s8)
    9be0:	5e c0 00 a8 	load_32 s2, 48(sp)
    9be4:	60 00 00 a8 	load_32 s3, (s0)
    9be8:	1e a0 00 a8 	load_32 s0, 40(sp)
    9bec:	1c 01 00 a8 	load_32 s8, (gp)
    9bf0:	3e 81 00 05 	add_i s9, sp, 32
    9bf4:	1e 70 00 88 	store_32 s0, 28(sp)
    9bf8:	00 00 f1 c0 	move s0, s2
    9bfc:	5e 70 00 a8 	load_32 s2, 28(sp)
    9c00:	9e 60 00 88 	store_32 s4, 24(sp)
    9c04:	80 80 f4 c0 	move s4, s9
    9c08:	be 50 00 88 	store_32 s5, 20(sp)
    9c0c:	de 40 00 88 	store_32 s6, 16(sp)
    9c10:	fe 30 00 88 	store_32 s7, 12(sp)
    9c14:	3e 21 00 88 	store_32 s9, 8(sp)
    9c18:	08 01 00 fc 	call s8
; return r;
    9c1c:	5e 20 00 a8 	load_32 s2, 8(sp)
    9c20:	62 10 00 00 	or s3, s2, 4
    9c24:	63 00 00 a8 	load_32 s3, (s3)
    9c28:	9e 80 00 a8 	load_32 s4, 32(sp)
    9c2c:	1e 10 00 88 	store_32 s0, 4(sp)
    9c30:	00 00 f2 c0 	move s0, s4
    9c34:	3e 00 00 88 	store_32 s1, (sp)
    9c38:	20 80 f1 c0 	move s1, s3
    9c3c:	fe f3 00 a8 	load_32 ra, 60(sp)
    9c40:	de 03 01 05 	add_i sp, sp, 64
    9c44:	1f 00 00 f0 	ret

0000000000009c48 __umodsi3:
; {
    9c48:	de 03 ff 05 	add_i sp, sp, -64
    9c4c:	fe f3 00 88 	store_32 ra, 60(sp)
    9c50:	40 80 f0 c0 	move s2, s1
    9c54:	60 00 f0 c0 	move s3, s0
    9c58:	1e e0 00 88 	store_32 s0, 56(sp)
    9c5c:	3e d0 00 88 	store_32 s1, 52(sp)
; return a - __udivsi3(a, b) * b;
    9c60:	1e e0 00 a8 	load_32 s0, 56(sp)
    9c64:	3e d0 00 a8 	load_32 s1, 52(sp)
    9c68:	9c 20 00 a8 	load_32 s4, 8(gp)
    9c6c:	1e c0 00 88 	store_32 s0, 48(sp)
    9c70:	5e b0 00 88 	store_32 s2, 44(sp)
    9c74:	7e a0 00 88 	store_32 s3, 40(sp)
    9c78:	84 00 00 fc 	call s4
    9c7c:	3e d0 00 a8 	load_32 s1, 52(sp)
    9c80:	00 80 70 c0 	mull_i s0, s0, s1
    9c84:	3e c0 00 a8 	load_32 s1, 48(sp)
    9c88:	01 00 60 c0 	sub_i s0, s1, s0
    9c8c:	fe f3 00 a8 	load_32 ra, 60(sp)
    9c90:	de 03 01 05 	add_i sp, sp, 64
    9c94:	1f 00 00 f0 	ret

0000000000009c98 __udivsi3:
; __udivsi3:          move s4, 0              # Quotient
    9c98:	80 00 00 0f 	move s4, 0
; cmplt_u s2, s0, s1      # dividend < divisor
    9c9c:	40 80 80 c1 	cmplt_u s2, s0, s1
; bnz s2, done            # If yes, result is zero, bail
    9ca0:	22 02 00 f4 	bnz s2, 68 <done>
; clz s2, s0              # Get dividend leading bits
    9ca4:	40 00 c0 c0 	clz s2, s0
; clz s3, s1              # Get divisor leading bits
    9ca8:	60 80 c0 c0 	clz s3, s1
; sub_i s5, s3, s2        # Number of quotient bits
    9cac:	a3 00 61 c0 	sub_i s5, s3, s2
; shl s1, s1, s5          # Shift divisor
    9cb0:	21 80 b2 c0 	shl s1, s1, s5

0000000000009cb4 divide_loop:
; divide_loop:        cmpge_u s2, s0, s1      # Is current dividend > divisor
    9cb4:	40 80 70 c1 	cmpge_u s2, s0, s1
; and s2, s2, 1           # Set only lowest bit
    9cb8:	42 04 00 01 	and s2, s2, 1
; or s4, s4, s2           # if true, quotient |= 1
    9cbc:	84 00 01 c0 	or s4, s4, s2
; shl s2, s2, 31          # Turn into 32-bit mask
    9cc0:	42 7c 00 0b 	shl s2, s2, 31
; ashr s2, s2, 31
    9cc4:	42 7c 00 09 	ashr s2, s2, 31
; and s3, s1, s2          # If the value is true, subtract amt = divisor
    9cc8:	61 00 11 c0 	and s3, s1, s2
; sub_i s0, s0, s3        # dividend -= divisor
    9ccc:	00 80 61 c0 	sub_i s0, s0, s3
; bz s5, done             # If no more quotient bits, bail
    9cd0:	a5 00 00 f2 	bz s5, 20 <done>
; sub_i s5, s5, 1         # Subtract 1 from quotient bits
    9cd4:	a5 04 00 06 	sub_i s5, s5, 1
; shr s1, s1, 1           # Shift divisor right
    9cd8:	21 04 00 0a 	shr s1, s1, 1
; shl s4, s4, 1           # Shift quotient left
    9cdc:	84 04 00 0b 	shl s4, s4, 1
; b divide_loop
    9ce0:	f5 ff ff f7 	b -44 <divide_loop>

0000000000009ce4 done:
; done:               move s0, s4             # Move quotient to return value
    9ce4:	00 00 f2 c0 	move s0, s4
; re
    9ce8:	1f 00 00 f0 	ret

0000000000009cec _start:
    9cec:	00 00 00 ac 	getcr s0, 0
    9cf0:	00 38 00 0b 	shl s0, s0, 14
    9cf4:	c0 23 00 4f 	movehi sp, 256
    9cf8:	de 03 60 c0 	sub_i sp, sp, s0
    9cfc:	85 03 00 4f 	movehi gp, 5
    9d00:	9c 13 00 00 	or gp, gp, 4
    9d04:	60 01 00 f4 	bnz s0, 44 <do_main>
    9d08:	05 03 00 4f 	movehi s24, 5
    9d0c:	18 03 00 00 	or s24, s24, 0
    9d10:	25 03 00 4f 	movehi s25, 5
    9d14:	39 13 00 00 	or s25, s25, 4

0000000000009d18 init_loop:
    9d18:	18 80 0c c1 	cmpeq_i s0, s24, s25
    9d1c:	a0 00 00 f4 	bnz s0, 20 <do_main>
    9d20:	18 00 00 a8 	load_32 s0, (s24)
    9d24:	18 13 00 05 	add_i s24, s24, 4
    9d28:	00 00 00 fc 	call s0
    9d2c:	fb ff ff f7 	b -20 <init_loop>

0000000000009d30 do_main:
    9d30:	00 00 00 0f 	move s0, 0
    9d34:	b3 e0 ff f9 	call -32052 <main>
    9d38:	04 00 00 4f 	movehi s0, 4
    9d3c:	00 b0 75 00 	or s0, s0, 7532
    9d40:	20 00 00 aa 	load_sync s1, (s0)
    9d44:	e1 ff ff f5 	bnz s1, -4 <do_main+0x10>
    9d48:	20 04 00 0f 	move s1, 1
    9d4c:	20 00 00 8a 	store_sync s1, (s0)  
    9d50:	81 ff ff f3 	bz s1, -16 <do_main+0x10>
    9d54:	33 00 00 f8 	call 204 <call_atexit_functions>
    9d58:	00 10 00 0f 	move s0, 4
    9d5c:	8c f8 ff f9 	call -7632 <_write_uart>
    9d60:	00 fc ff 0f 	move s0, -1
    9d64:	14 00 00 8c 	setcr s0, 20
    9d68:	00 00 00 f6 	b 0 <do_main+0x38>

0000000000009d6c exit_flag:
    9d6c:	00 00 00 00 	nop

0000000000009d70 _Znwj:
    9d70:	de 03 ff 05 	add_i sp, sp, -64
    9d74:	fe f3 00 88 	store_32 ra, 60(sp)
    9d78:	a1 e2 ff f9 	call -30076 <malloc>
    9d7c:	fe f3 00 a8 	load_32 ra, 60(sp)
    9d80:	de 03 01 05 	add_i sp, sp, 64
    9d84:	1f 00 00 f0 	ret

0000000000009d88 _ZdlPv:
    9d88:	de 03 ff 05 	add_i sp, sp, -64
    9d8c:	fe f3 00 88 	store_32 ra, 60(sp)
    9d90:	25 ea ff f9 	call -22380 <free>
    9d94:	fe f3 00 a8 	load_32 ra, 60(sp)
    9d98:	de 03 01 05 	add_i sp, sp, 64
    9d9c:	1f 00 00 f0 	ret

0000000000009da0 _Znaj:
    9da0:	de 03 ff 05 	add_i sp, sp, -64
    9da4:	fe f3 00 88 	store_32 ra, 60(sp)
    9da8:	95 e2 ff f9 	call -30124 <malloc>
    9dac:	fe f3 00 a8 	load_32 ra, 60(sp)
    9db0:	de 03 01 05 	add_i sp, sp, 64
    9db4:	1f 00 00 f0 	ret

0000000000009db8 _ZdaPv:
    9db8:	de 03 ff 05 	add_i sp, sp, -64
    9dbc:	fe f3 00 88 	store_32 ra, 60(sp)
    9dc0:	19 ea ff f9 	call -22428 <free>
    9dc4:	fe f3 00 a8 	load_32 ra, 60(sp)
    9dc8:	de 03 01 05 	add_i sp, sp, 64
    9dcc:	1f 00 00 f0 	ret

0000000000009dd0 __cxa_atexit:
    9dd0:	de 03 ff 05 	add_i sp, sp, -64
    9dd4:	1e f3 00 88 	store_32 s24, 60(sp)
    9dd8:	3e e3 00 88 	store_32 s25, 56(sp)
    9ddc:	fe d3 00 88 	store_32 ra, 52(sp)
    9de0:	00 83 f0 c0 	move s24, s1
    9de4:	20 03 f0 c0 	move s25, s0
    9de8:	00 30 00 0f 	move s0, 12
    9dec:	84 e2 ff f9 	call -30192 <malloc>
    9df0:	25 00 00 4f 	movehi s1, 5
    9df4:	21 10 55 00 	or s1, s1, 5444
    9df8:	41 00 00 a8 	load_32 s2, (s1)
    9dfc:	40 00 00 88 	store_32 s2, (s0)
    9e00:	01 00 00 88 	store_32 s0, (s1)
    9e04:	20 13 00 88 	store_32 s25, 4(s0)
    9e08:	00 23 00 88 	store_32 s24, 8(s0)
    9e0c:	fe d3 00 a8 	load_32 ra, 52(sp)
    9e10:	3e e3 00 a8 	load_32 s25, 56(sp)
    9e14:	1e f3 00 a8 	load_32 s24, 60(sp)
    9e18:	de 03 01 05 	add_i sp, sp, 64
    9e1c:	1f 00 00 f0 	ret

0000000000009e20 call_atexit_functions:
    9e20:	de 03 ff 05 	add_i sp, sp, -64
    9e24:	1e f3 00 88 	store_32 s24, 60(sp)
    9e28:	fe e3 00 88 	store_32 ra, 56(sp)
    9e2c:	05 00 00 4f 	movehi s0, 5
    9e30:	00 10 55 00 	or s0, s0, 5444
    9e34:	00 03 00 a8 	load_32 s24, (s0)
    9e38:	f8 00 00 f2 	bz s24, 28 <call_atexit_functions+0x34>
    9e3c:	38 10 00 a8 	load_32 s1, 4(s24)
    9e40:	18 20 00 a8 	load_32 s0, 8(s24)
    9e44:	21 00 00 fc 	call s1
    9e48:	18 03 00 a8 	load_32 s24, (s24)
    9e4c:	58 00 00 f2 	bz s24, 8 <call_atexit_functions+0x34>
    9e50:	fb ff ff f7 	b -20 <call_atexit_functions+0x1c>
    9e54:	fe e3 00 a8 	load_32 ra, 56(sp)
    9e58:	1e f3 00 a8 	load_32 s24, 60(sp)
    9e5c:	de 03 01 05 	add_i sp, sp, 64
    9e60:	1f 00 00 f0 	ret

0000000000009e64 __cxa_pure_virtual:
    9e64:	de 03 ff 05 	add_i sp, sp, -64
    9e68:	fe f3 00 88 	store_32 ra, 60(sp)
    9e6c:	00 00 00 4f 	movehi s0, 0
    9e70:	00 ec 0b 00 	or s0, s0, 763
    9e74:	4a e1 ff f9 	call -31448 <puts>
    9e78:	00 00 e0 c3 	break

0000000000009e7c _GLOBAL__sub_I_cxx_runtime.cpp:
    9e7c:	de 03 ff 05 	add_i sp, sp, -64
    9e80:	1e f3 00 88 	store_32 s24, 60(sp)
    9e84:	3e e3 00 88 	store_32 s25, 56(sp)
    9e88:	5e d3 00 88 	store_32 s26, 52(sp)
    9e8c:	7e c3 00 88 	store_32 s27, 48(sp)
    9e90:	fe b3 00 88 	store_32 ra, 44(sp)
    9e94:	00 00 00 4f 	movehi s0, 0
    9e98:	25 00 00 4f 	movehi s1, 5
    9e9c:	00 33 00 0f 	move s24, 12
    9ea0:	00 10 18 00 	or s0, s0, 1540
    9ea4:	41 e3 54 00 	or s26, s1, 5432
    9ea8:	00 20 00 05 	add_i s0, s0, 8
    9eac:	1a 00 00 88 	store_32 s0, (s26)
    9eb0:	00 00 fc c0 	move s0, s24
    9eb4:	52 e2 ff f9 	call -30392 <malloc>
    9eb8:	25 00 00 4f 	movehi s1, 5
    9ebc:	45 00 00 4f 	movehi s2, 5
    9ec0:	21 10 55 00 	or s1, s1, 5444
    9ec4:	3e a0 00 88 	store_32 s1, 40(sp)
    9ec8:	20 03 f0 c0 	move s25, s0
    9ecc:	04 00 00 4f 	movehi s0, 4
    9ed0:	21 00 00 a8 	load_32 s1, (s1)
    9ed4:	62 f3 54 00 	or s27, s2, 5436
    9ed8:	39 00 00 88 	store_32 s1, (s25)
    9edc:	20 00 00 4f 	movehi s1, 0
    9ee0:	00 e0 7c 00 	or s0, s0, 7992
    9ee4:	19 10 00 88 	store_32 s0, 4(s25)
    9ee8:	59 23 00 88 	store_32 s26, 8(s25)
    9eec:	01 00 19 00 	or s0, s1, 1600
    9ef0:	00 20 00 05 	add_i s0, s0, 8
    9ef4:	1b 00 00 88 	store_32 s0, (s27)
    9ef8:	00 00 fc c0 	move s0, s24
    9efc:	40 e2 ff f9 	call -30464 <malloc>
    9f00:	20 03 00 88 	store_32 s25, (s0)
    9f04:	24 00 00 4f 	movehi s1, 4
    9f08:	5e a0 00 a8 	load_32 s2, 40(sp)
    9f0c:	21 f0 7c 00 	or s1, s1, 7996
    9f10:	02 00 00 88 	store_32 s0, (s2)
    9f14:	20 10 00 88 	store_32 s1, 4(s0)
    9f18:	60 23 00 88 	store_32 s27, 8(s0)
    9f1c:	fe b3 00 a8 	load_32 ra, 44(sp)
    9f20:	7e c3 00 a8 	load_32 s27, 48(sp)
    9f24:	5e d3 00 a8 	load_32 s26, 52(sp)
    9f28:	3e e3 00 a8 	load_32 s25, 56(sp)
    9f2c:	1e f3 00 a8 	load_32 s24, 60(sp)
    9f30:	de 03 01 05 	add_i sp, sp, 64
    9f34:	1f 00 00 f0 	ret

0000000000009f38 _ZN10__cxxabiv117__class_type_infoD2Ev:
    9f38:	1f 00 00 f0 	ret

0000000000009f3c _ZN10__cxxabiv120__si_class_type_infoD2Ev:
    9f3c:	1f 00 00 f0 	ret

0000000000009f40 _ZN10__cxxabiv117__class_type_infoD0Ev:
    9f40:	de 03 ff 05 	add_i sp, sp, -64
    9f44:	fe f3 00 88 	store_32 ra, 60(sp)
    9f48:	b7 e9 ff f9 	call -22820 <free>
    9f4c:	fe f3 00 a8 	load_32 ra, 60(sp)
    9f50:	de 03 01 05 	add_i sp, sp, 64
    9f54:	1f 00 00 f0 	ret

0000000000009f58 _ZN10__cxxabiv120__si_class_type_infoD0Ev:
    9f58:	de 03 ff 05 	add_i sp, sp, -64
    9f5c:	fe f3 00 88 	store_32 ra, 60(sp)
    9f60:	b1 e9 ff f9 	call -22844 <free>
    9f64:	fe f3 00 a8 	load_32 ra, 60(sp)
    9f68:	de 03 01 05 	add_i sp, sp, 64
    9f6c:	1f 00 00 f0 	ret
