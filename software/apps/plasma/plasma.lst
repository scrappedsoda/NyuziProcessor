
/home/glinsi/git/NyuziProcessor/software/apps/plasma/plasma:	file format ELF32-nyuzi

Disassembly of section .text:
0000000000002000 _Z5fmodvDv16_fS_:
    2000:	00 00 00 4f 	movehi s0, 0
    2004:	40 80 c0 d1 	reciprocal v2, v1
    2008:	00 00 06 00 	or s0, s0, 384
    200c:	00 00 00 a8 	load_32 s0, (s0)
    2010:	82 80 20 d2 	mul_f v4, v2, v1
    2014:	60 00 f0 c4 	move v3, s0
    2018:	83 00 12 d2 	sub_f v4, v3, v4
    201c:	42 00 22 d2 	mul_f v2, v2, v4
    2020:	82 80 20 d2 	mul_f v4, v2, v1
    2024:	63 00 12 d2 	sub_f v3, v3, v4
    2028:	42 80 21 d2 	mul_f v2, v2, v3
    202c:	40 00 21 d2 	mul_f v2, v0, v2
    2030:	40 00 b1 d1 	ftoi v2, v2
    2034:	40 00 a1 d2 	itof v2, v2
    2038:	22 80 20 d2 	mul_f v1, v2, v1
    203c:	00 80 10 d2 	sub_f v0, v0, v1
    2040:	1f 00 00 f0 	ret

0000000000002044 _Z10slow_sinfvDv16_f:
    2044:	de 03 fe 05 	add_i sp, sp, -128
    2048:	00 00 00 4f 	movehi s0, 0
    204c:	20 00 00 4f 	movehi s1, 0
    2050:	40 00 00 4f 	movehi s2, 0
    2054:	00 b0 06 00 	or s0, s0, 428
    2058:	21 00 06 00 	or s1, s1, 384
    205c:	7f fc 7f 4f 	movehi s3, 262143
    2060:	00 00 00 a8 	load_32 s0, (s0)
    2064:	42 c0 06 00 	or s2, s2, 432
    2068:	21 00 00 a8 	load_32 s1, (s1)
    206c:	c0 00 00 4f 	movehi s6, 0
    2070:	63 fc 7f 00 	or s3, s3, 8191
    2074:	e0 00 00 4f 	movehi s7, 0
    2078:	20 00 c0 c5 	reciprocal v1, s0
    207c:	40 80 f0 c4 	move v2, s1
    2080:	20 00 00 4f 	movehi s1, 0
    2084:	21 70 05 00 	or s1, s1, 348
    2088:	61 00 20 c6 	mul_f v3, v1, s0
    208c:	62 80 11 d2 	sub_f v3, v2, v3
    2090:	21 00 00 a8 	load_32 s1, (s1)
    2094:	21 80 21 d2 	mul_f v1, v1, v3
    2098:	42 00 00 a8 	load_32 s2, (s2)
    209c:	61 00 20 c6 	mul_f v3, v1, s0
    20a0:	42 80 11 d2 	sub_f v2, v2, v3
    20a4:	21 00 21 d2 	mul_f v1, v1, v2
    20a8:	40 00 f0 c4 	move v2, s0
    20ac:	20 80 20 d2 	mul_f v1, v0, v1
    20b0:	20 80 b0 d1 	ftoi v1, v1
    20b4:	20 80 a0 d2 	itof v1, v1
    20b8:	21 00 20 c6 	mul_f v1, v1, s0
    20bc:	00 80 10 d2 	sub_f v0, v0, v1
    20c0:	20 80 11 c4 	and v1, v0, s3
    20c4:	00 80 e0 c6 	cmplt_f s0, v0, s1
    20c8:	60 00 00 4f 	movehi s3, 0
    20cc:	41 00 c1 c6 	cmpgt_f s2, v1, s2
    20d0:	63 10 06 00 	or s3, s3, 388
    20d4:	5e c0 01 86 	store_16 s2, 112(sp)
    20d8:	3e c0 01 a6 	load_s16 s1, 112(sp)
    20dc:	22 88 10 d6 	sub_f_mask v1, s2, v2, v1
    20e0:	02 00 30 c0 	xor s0, s2, s0
    20e4:	1e 80 01 86 	store_16 s0, 96(sp)
    20e8:	1e 80 01 a6 	load_s16 s0, 96(sp)
    20ec:	63 00 00 a8 	load_32 s3, (s3)
    20f0:	21 fc ff 03 	xor s1, s1, -1
    20f4:	00 80 f1 c4 	move v0, s3
    20f8:	81 80 c1 c6 	cmpgt_f s4, v1, s3
    20fc:	60 00 00 4f 	movehi s3, 0
    2100:	9e 40 01 86 	store_16 s4, 80(sp)
    2104:	be 40 01 a6 	load_s16 s5, 80(sp)
    2108:	44 00 01 c0 	or s2, s4, s2
    210c:	25 80 10 c0 	and s1, s5, s1
    2110:	3e 00 01 86 	store_16 s1, 64(sp)
    2114:	a6 a0 05 00 	or s5, s6, 360
    2118:	de 00 01 a4 	load_u16 s6, 64(sp)
    211c:	01 00 30 c0 	xor s0, s1, s0
    2120:	a5 00 00 a8 	load_32 s5, (s5)
    2124:	20 00 80 4f 	movehi s1, 262144
    2128:	21 98 02 ca 	add_f_mask v1, s6, v1, s5
    212c:	a7 40 06 00 	or s5, s7, 400
    2130:	a5 00 00 a8 	load_32 s5, (s5)
    2134:	a1 80 c2 c6 	cmpgt_f s5, v1, s5
    2138:	be 40 00 86 	store_16 s5, 16(sp)
    213c:	be 40 00 a6 	load_s16 s5, 16(sp)
    2140:	5e 80 00 86 	store_16 s2, 32(sp)
    2144:	5e 80 00 a6 	load_s16 s2, 32(sp)
    2148:	42 fc ff 03 	xor s2, s2, -1
    214c:	45 00 11 c0 	and s2, s5, s2
    2150:	5e 00 00 86 	store_16 s2, (sp)
    2154:	5e 00 00 a4 	load_u16 s2, (sp)
    2158:	20 88 10 d6 	sub_f_mask v1, s2, v0, v1
    215c:	40 00 00 4f 	movehi s2, 0
    2160:	42 d0 06 00 	or s2, s2, 436
    2164:	42 00 00 a8 	load_32 s2, (s2)
    2168:	01 80 20 d2 	mul_f v0, v1, v1
    216c:	40 80 20 d2 	mul_f v2, v0, v1
    2170:	62 00 21 c6 	mul_f v3, v2, s2
    2174:	43 80 05 00 	or s2, s3, 352
    2178:	40 00 21 d2 	mul_f v2, v0, v2
    217c:	60 00 00 4f 	movehi s3, 0
    2180:	21 80 01 d2 	add_f v1, v1, v3
    2184:	42 00 00 a8 	load_32 s2, (s2)
    2188:	60 00 21 d2 	mul_f v3, v0, v2
    218c:	63 40 05 00 	or s3, s3, 336
    2190:	42 00 21 c6 	mul_f v2, v2, s2
    2194:	43 00 00 a8 	load_32 s2, (s3)
    2198:	60 00 00 4f 	movehi s3, 0
    219c:	21 00 01 d2 	add_f v1, v1, v2
    21a0:	43 00 21 c6 	mul_f v2, v3, s2
    21a4:	43 90 06 00 	or s2, s3, 420
    21a8:	60 80 21 d2 	mul_f v3, v0, v3
    21ac:	60 00 00 4f 	movehi s3, 0
    21b0:	42 00 00 a8 	load_32 s2, (s2)
    21b4:	21 00 01 d2 	add_f v1, v1, v2
    21b8:	63 00 07 00 	or s3, s3, 448
    21bc:	40 80 21 d2 	mul_f v2, v0, v3
    21c0:	00 00 21 d2 	mul_f v0, v0, v2
    21c4:	63 00 21 c6 	mul_f v3, v3, s2
    21c8:	43 00 00 a8 	load_32 s2, (s3)
    21cc:	60 00 00 4f 	movehi s3, 0
    21d0:	21 80 01 d2 	add_f v1, v1, v3
    21d4:	62 00 21 c6 	mul_f v3, v2, s2
    21d8:	43 20 06 00 	or s2, s3, 392
    21dc:	42 00 00 a8 	load_32 s2, (s2)
    21e0:	1e c0 00 86 	store_16 s0, 48(sp)
    21e4:	1e c0 00 a4 	load_u16 s0, 48(sp)
    21e8:	21 80 01 d2 	add_f v1, v1, v3
    21ec:	00 00 21 c6 	mul_f v0, v0, s2
    21f0:	01 00 00 d2 	add_f v0, v1, v0
    21f4:	20 80 30 c4 	xor v1, v0, s1
    21f8:	00 80 f0 d4 	move_mask v0, s0, v1
    21fc:	de 03 02 05 	add_i sp, sp, 128
    2200:	1f 00 00 f0 	ret

0000000000002204 _Z10fast_sinfvDv16_f:
    2204:	00 00 00 4f 	movehi s0, 0
    2208:	20 00 00 4f 	movehi s1, 0
    220c:	40 00 00 4f 	movehi s2, 0
    2210:	00 10 06 00 	or s0, s0, 388
    2214:	21 00 06 00 	or s1, s1, 384
    2218:	00 00 00 a8 	load_32 s0, (s0)
    221c:	21 00 00 a8 	load_32 s1, (s1)
    2220:	20 00 c0 c5 	reciprocal v1, s0
    2224:	40 80 f0 c4 	move v2, s1
    2228:	20 00 00 4f 	movehi s1, 0
    222c:	61 00 20 c6 	mul_f v3, v1, s0
    2230:	62 80 11 d2 	sub_f v3, v2, v3
    2234:	21 80 21 d2 	mul_f v1, v1, v3
    2238:	61 00 20 c6 	mul_f v3, v1, s0
    223c:	42 80 11 d2 	sub_f v2, v2, v3
    2240:	21 00 21 d2 	mul_f v1, v1, v2
    2244:	20 80 20 d2 	mul_f v1, v0, v1
    2248:	20 80 b0 d1 	ftoi v1, v1
    224c:	40 80 a0 d2 	itof v2, v1
    2250:	21 04 00 21 	and v1, v1, 1
    2254:	42 00 20 c6 	mul_f v2, v2, s0
    2258:	01 50 05 00 	or s0, s1, 340
    225c:	00 00 11 d2 	sub_f v0, v0, v2
    2260:	3f fc 7f 4f 	movehi s1, 262143
    2264:	00 00 00 a8 	load_32 s0, (s0)
    2268:	21 fc 7f 00 	or s1, s1, 8191
    226c:	40 80 10 c4 	and v2, v0, s1
    2270:	40 00 21 d2 	mul_f v2, v0, v2
    2274:	22 b0 05 00 	or s1, s2, 364
    2278:	00 00 20 c6 	mul_f v0, v0, s0
    227c:	01 00 00 a8 	load_32 s0, (s1)
    2280:	20 00 80 4f 	movehi s1, 262144
    2284:	42 00 20 c6 	mul_f v2, v2, s0
    2288:	01 04 00 30 	cmpeq_i s0, v1, 1
    228c:	00 00 01 d2 	add_f v0, v0, v2
    2290:	20 80 30 c4 	xor v1, v0, s1
    2294:	00 80 f0 d4 	move_mask v0, s0, v1
    2298:	1f 00 00 f0 	ret

000000000000229c _Z11slow_sqrtfvDv16_f:
    229c:	00 00 00 4f 	movehi s0, 0
    22a0:	20 00 c0 d1 	reciprocal v1, v0
    22a4:	00 00 06 00 	or s0, s0, 384
    22a8:	00 00 00 a8 	load_32 s0, (s0)
    22ac:	61 00 20 d2 	mul_f v3, v1, v0
    22b0:	40 00 f0 c4 	move v2, s0
    22b4:	00 00 00 4f 	movehi s0, 0
    22b8:	62 80 11 d2 	sub_f v3, v2, v3
    22bc:	21 80 21 d2 	mul_f v1, v1, v3
    22c0:	00 d0 05 00 	or s0, s0, 372
    22c4:	00 00 00 a8 	load_32 s0, (s0)
    22c8:	61 00 20 d2 	mul_f v3, v1, v0
    22cc:	62 80 11 d2 	sub_f v3, v2, v3
    22d0:	21 80 21 d2 	mul_f v1, v1, v3
    22d4:	20 80 20 d2 	mul_f v1, v0, v1
    22d8:	21 00 00 d2 	add_f v1, v1, v0
    22dc:	21 00 20 c6 	mul_f v1, v1, s0
    22e0:	60 80 c0 d1 	reciprocal v3, v1
    22e4:	83 80 20 d2 	mul_f v4, v3, v1
    22e8:	82 00 12 d2 	sub_f v4, v2, v4
    22ec:	63 00 22 d2 	mul_f v3, v3, v4
    22f0:	83 80 20 d2 	mul_f v4, v3, v1
    22f4:	82 00 12 d2 	sub_f v4, v2, v4
    22f8:	63 00 22 d2 	mul_f v3, v3, v4
    22fc:	60 80 21 d2 	mul_f v3, v0, v3
    2300:	21 80 01 d2 	add_f v1, v1, v3
    2304:	21 00 20 c6 	mul_f v1, v1, s0
    2308:	60 80 c0 d1 	reciprocal v3, v1
    230c:	83 80 20 d2 	mul_f v4, v3, v1
    2310:	82 00 12 d2 	sub_f v4, v2, v4
    2314:	63 00 22 d2 	mul_f v3, v3, v4
    2318:	83 80 20 d2 	mul_f v4, v3, v1
    231c:	82 00 12 d2 	sub_f v4, v2, v4
    2320:	63 00 22 d2 	mul_f v3, v3, v4
    2324:	60 80 21 d2 	mul_f v3, v0, v3
    2328:	21 80 01 d2 	add_f v1, v1, v3
    232c:	21 00 20 c6 	mul_f v1, v1, s0
    2330:	60 80 c0 d1 	reciprocal v3, v1
    2334:	83 80 20 d2 	mul_f v4, v3, v1
    2338:	82 00 12 d2 	sub_f v4, v2, v4
    233c:	63 00 22 d2 	mul_f v3, v3, v4
    2340:	83 80 20 d2 	mul_f v4, v3, v1
    2344:	82 00 12 d2 	sub_f v4, v2, v4
    2348:	63 00 22 d2 	mul_f v3, v3, v4
    234c:	60 80 21 d2 	mul_f v3, v0, v3
    2350:	21 80 01 d2 	add_f v1, v1, v3
    2354:	21 00 20 c6 	mul_f v1, v1, s0
    2358:	60 80 c0 d1 	reciprocal v3, v1
    235c:	83 80 20 d2 	mul_f v4, v3, v1
    2360:	82 00 12 d2 	sub_f v4, v2, v4
    2364:	63 00 22 d2 	mul_f v3, v3, v4
    2368:	83 80 20 d2 	mul_f v4, v3, v1
    236c:	82 00 12 d2 	sub_f v4, v2, v4
    2370:	63 00 22 d2 	mul_f v3, v3, v4
    2374:	60 80 21 d2 	mul_f v3, v0, v3
    2378:	21 80 01 d2 	add_f v1, v1, v3
    237c:	21 00 20 c6 	mul_f v1, v1, s0
    2380:	60 80 c0 d1 	reciprocal v3, v1
    2384:	83 80 20 d2 	mul_f v4, v3, v1
    2388:	82 00 12 d2 	sub_f v4, v2, v4
    238c:	63 00 22 d2 	mul_f v3, v3, v4
    2390:	83 80 20 d2 	mul_f v4, v3, v1
    2394:	42 00 12 d2 	sub_f v2, v2, v4
    2398:	43 00 21 d2 	mul_f v2, v3, v2
    239c:	00 00 21 d2 	mul_f v0, v0, v2
    23a0:	01 00 00 d2 	add_f v0, v1, v0
    23a4:	00 00 20 c6 	mul_f v0, v0, s0
    23a8:	1f 00 00 f0 	ret

00000000000023ac main:
    23ac:	de 03 fb 05 	add_i sp, sp, -320
    23b0:	1e f3 04 88 	store_32 s24, 316(sp)
    23b4:	3e e3 04 88 	store_32 s25, 312(sp)
    23b8:	5e d3 04 88 	store_32 s26, 308(sp)
    23bc:	7e c3 04 88 	store_32 s27, 304(sp)
    23c0:	fe b3 04 88 	store_32 ra, 300(sp)
    23c4:	5e 03 03 8e 	store_v v26, 192(sp)
    23c8:	06 00 00 4f 	movehi s0, 6
    23cc:	00 80 64 00 	or s0, s0, 6432
    23d0:	20 00 00 aa 	load_sync s1, (s0)
    23d4:	41 04 00 05 	add_i s2, s1, 1
    23d8:	c0 81 f0 c0 	move s14, s1
    23dc:	40 00 00 8a 	store_sync s2, (s0)  
    23e0:	82 ff ff f3 	bz s2, -16 <main+0x24>
    23e4:	de 21 02 88 	store_32 s14, 136(sp)
    23e8:	2e 0d 00 f4 	bnz s14, 420 <main+0x1e0>
    23ec:	00 03 00 0f 	move s24, 0
    23f0:	00 00 fc c0 	move s0, s24
    23f4:	01 21 00 f8 	call 33796 <init_vga>
    23f8:	26 00 00 4f 	movehi s1, 6
    23fc:	40 00 00 4f 	movehi s2, 0
    2400:	60 00 00 4f 	movehi s3, 0
    2404:	21 50 44 00 	or s1, s1, 4372
    2408:	01 00 00 88 	store_32 s0, (s1)
    240c:	02 10 06 00 	or s0, s2, 388
    2410:	1e c0 02 88 	store_32 s0, 176(sp)
    2414:	03 20 05 00 	or s0, s3, 328
    2418:	1e b0 02 88 	store_32 s0, 172(sp)
    241c:	00 00 00 4f 	movehi s0, 0
    2420:	20 00 00 4f 	movehi s1, 0
    2424:	40 00 00 4f 	movehi s2, 0
    2428:	00 30 06 00 	or s0, s0, 396
    242c:	1e a0 02 88 	store_32 s0, 168(sp)
    2430:	01 f0 05 00 	or s0, s1, 380
    2434:	1e 90 02 88 	store_32 s0, 164(sp)
    2438:	02 70 06 00 	or s0, s2, 412
    243c:	1e 80 02 88 	store_32 s0, 160(sp)
    2440:	00 00 80 4f 	movehi s0, 262144
    2444:	1e d0 02 88 	store_32 s0, 180(sp)
    2448:	00 00 00 4f 	movehi s0, 0
    244c:	20 00 00 4f 	movehi s1, 0
    2450:	46 00 00 4f 	movehi s2, 6
    2454:	00 00 05 00 	or s0, s0, 320
    2458:	1e 70 02 88 	store_32 s0, 156(sp)
    245c:	01 50 06 00 	or s0, s1, 404
    2460:	1e 60 02 88 	store_32 s0, 152(sp)
    2464:	02 80 44 00 	or s0, s2, 4384
    2468:	1e 50 02 88 	store_32 s0, 148(sp)
    246c:	3e c0 02 a8 	load_32 s1, 176(sp)
    2470:	00 00 ac c2 	itof s0, s24
    2474:	21 00 00 a8 	load_32 s1, (s1)
    2478:	20 80 20 c2 	mul_f s1, s0, s1
    247c:	1e b0 02 a8 	load_32 s0, 172(sp)
    2480:	00 00 00 a8 	load_32 s0, (s0)
    2484:	3e f0 02 88 	store_32 s1, 188(sp)
    2488:	01 00 20 c2 	mul_f s0, s1, s0
    248c:	bc 01 00 f8 	call 1776 <sin>
    2490:	3e a0 02 a8 	load_32 s1, 168(sp)
    2494:	61 03 00 a8 	load_32 s27, (s1)
    2498:	3e 90 02 a8 	load_32 s1, 164(sp)
    249c:	00 80 2d c2 	mul_f s0, s0, s27
    24a0:	41 03 00 a8 	load_32 s26, (s1)
    24a4:	3e 80 02 a8 	load_32 s1, 160(sp)
    24a8:	21 03 00 a8 	load_32 s25, (s1)
    24ac:	00 00 0d c2 	add_f s0, s0, s26
    24b0:	20 80 ec c2 	cmplt_f s1, s0, s25
    24b4:	c1 00 00 f4 	bnz s1, 24 <main+0x120>
    24b8:	00 80 1c c2 	sub_f s0, s0, s25
    24bc:	3e d0 02 a8 	load_32 s1, 180(sp)
    24c0:	00 00 b0 c1 	ftoi s0, s0
    24c4:	00 80 30 c0 	xor s0, s0, s1
    24c8:	02 00 00 f6 	b 8 <main+0x124>
    24cc:	00 00 b0 c1 	ftoi s0, s0
    24d0:	3e 70 02 a8 	load_32 s1, 156(sp)
    24d4:	00 40 00 0b 	shl s0, s0, 16
    24d8:	21 00 00 a8 	load_32 s1, (s1)
    24dc:	1e e0 02 88 	store_32 s0, 184(sp)
    24e0:	1e f0 02 a8 	load_32 s0, 188(sp)
    24e4:	00 80 20 c2 	mul_f s0, s0, s1
    24e8:	a5 01 00 f8 	call 1684 <sin>
    24ec:	00 80 2d c2 	mul_f s0, s0, s27
    24f0:	00 00 0d c2 	add_f s0, s0, s26
    24f4:	20 80 ec c2 	cmplt_f s1, s0, s25
    24f8:	c1 00 00 f4 	bnz s1, 24 <main+0x164>
    24fc:	00 80 1c c2 	sub_f s0, s0, s25
    2500:	3e d0 02 a8 	load_32 s1, 180(sp)
    2504:	00 00 b0 c1 	ftoi s0, s0
    2508:	00 80 30 c0 	xor s0, s0, s1
    250c:	02 00 00 f6 	b 8 <main+0x168>
    2510:	00 00 b0 c1 	ftoi s0, s0
    2514:	5e e0 02 a8 	load_32 s2, 184(sp)
    2518:	00 20 00 0b 	shl s0, s0, 8
    251c:	3e 60 02 a8 	load_32 s1, 152(sp)
    2520:	00 00 01 c0 	or s0, s0, s2
    2524:	21 00 00 a8 	load_32 s1, (s1)
    2528:	1e e0 02 88 	store_32 s0, 184(sp)
    252c:	1e f0 02 a8 	load_32 s0, 188(sp)
    2530:	00 80 20 c2 	mul_f s0, s0, s1
    2534:	92 01 00 f8 	call 1608 <sin>
    2538:	00 80 2d c2 	mul_f s0, s0, s27
    253c:	00 00 0d c2 	add_f s0, s0, s26
    2540:	20 80 ec c2 	cmplt_f s1, s0, s25
    2544:	c1 00 00 f4 	bnz s1, 24 <main+0x1b0>
    2548:	00 80 1c c2 	sub_f s0, s0, s25
    254c:	3e d0 02 a8 	load_32 s1, 180(sp)
    2550:	00 00 b0 c1 	ftoi s0, s0
    2554:	00 80 30 c0 	xor s0, s0, s1
    2558:	02 00 00 f6 	b 8 <main+0x1b4>
    255c:	00 00 b0 c1 	ftoi s0, s0
    2560:	7e e0 02 a8 	load_32 s3, 184(sp)
    2564:	38 08 00 0b 	shl s1, s24, 2
    2568:	5e 50 02 a8 	load_32 s2, 148(sp)
    256c:	18 07 00 05 	add_i s24, s24, 1
    2570:	03 00 00 c0 	or s0, s3, s0
    2574:	22 80 50 c0 	add_i s1, s2, s1
    2578:	58 00 08 18 	cmplt_u s2, s24, 512
    257c:	01 00 00 88 	store_32 s0, (s1)
    2580:	62 f7 ff f5 	bnz s2, -276 <main+0xc0>
    2584:	46 1c 00 f8 	call 28952 <start_all_threads>
    2588:	de 21 02 a8 	load_32 s14, 136(sp)
    258c:	06 00 00 4f 	movehi s0, 6
    2590:	20 00 00 4f 	movehi s1, 0
    2594:	40 00 00 4f 	movehi s2, 0
    2598:	20 52 44 00 	or s17, s0, 4372
    259c:	41 e2 05 00 	or s18, s1, 376
    25a0:	00 00 00 4f 	movehi s0, 0
    25a4:	20 00 00 4f 	movehi s1, 0
    25a8:	62 02 06 00 	or s19, s2, 384
    25ac:	40 00 00 4f 	movehi s2, 0
    25b0:	80 12 07 00 	or s20, s0, 452
    25b4:	a1 02 08 00 	or s21, s1, 512
    25b8:	06 00 00 4f 	movehi s0, 6
    25bc:	20 00 00 4f 	movehi s1, 0
    25c0:	c2 62 05 00 	or s22, s2, 344
    25c4:	40 00 00 4f 	movehi s2, 0
    25c8:	e0 62 44 00 	or s23, s0, 4376
    25cc:	01 c0 05 00 	or s0, s1, 368
    25d0:	1e a0 02 88 	store_32 s0, 168(sp)
    25d4:	02 11 06 00 	or s8, s2, 388
    25d8:	00 00 00 4f 	movehi s0, 0
    25dc:	40 00 00 4f 	movehi s2, 0
    25e0:	3f fc 7f 4f 	movehi s1, 262143
    25e4:	20 51 05 00 	or s9, s0, 340
    25e8:	42 b1 05 00 	or s10, s2, 364
    25ec:	00 00 00 4f 	movehi s0, 0
    25f0:	5a 34 5f 4f 	movehi s2, 195002
    25f4:	61 ff 7f 00 	or s27, s1, 8191
    25f8:	20 00 00 4f 	movehi s1, 0
    25fc:	60 71 05 00 	or s11, s0, 348
    2600:	02 7c 67 00 	or s0, s2, 6623
    2604:	81 d1 05 00 	or s12, s1, 372
    2608:	20 00 00 4f 	movehi s1, 0
    260c:	40 00 00 4f 	movehi s2, 0
    2610:	40 03 f0 c4 	move v26, s0
    2614:	00 00 00 4f 	movehi s0, 0
    2618:	a1 91 05 00 	or s13, s1, 356
    261c:	20 00 00 4f 	movehi s1, 0
    2620:	42 a3 06 00 	or s26, s2, 424
    2624:	46 00 00 4f 	movehi s2, 6
    2628:	00 80 06 00 	or s0, s0, 416
    262c:	1e 90 02 88 	store_32 s0, 164(sp)
    2630:	01 10 05 00 	or s0, s1, 324
    2634:	1e 80 02 88 	store_32 s0, 160(sp)
    2638:	02 80 44 00 	or s0, s2, 4384
    263c:	1e 70 02 88 	store_32 s0, 156(sp)
    2640:	00 00 00 4f 	movehi s0, 0
    2644:	20 00 00 4f 	movehi s1, 0
    2648:	e0 01 00 0f 	move s15, 0
    264c:	00 00 09 00 	or s0, s0, 576
    2650:	40 10 00 0f 	move s2, 4
    2654:	5e a0 01 88 	store_32 s2, 104(sp)
    2658:	1e 90 01 88 	store_32 s0, 100(sp)
    265c:	01 e0 06 00 	or s0, s1, 440
    2660:	1e 80 01 88 	store_32 s0, 96(sp)
    2664:	00 80 f7 c0 	move s0, s15
    2668:	1e f1 02 88 	store_32 s8, 188(sp)
    266c:	0e 7e 07 12 	cmpgt_i s16, s14, 479
    2670:	3e e1 02 88 	store_32 s9, 184(sp)
    2674:	20 03 80 4f 	movehi s25, 262144
    2678:	5e d1 02 88 	store_32 s10, 180(sp)
    267c:	7e c1 02 88 	store_32 s11, 176(sp)
    2680:	9e b1 02 88 	store_32 s12, 172(sp)
    2684:	00 83 f6 c0 	move s24, s13
    2688:	fe 41 02 88 	store_32 s15, 144(sp)
    268c:	1e 12 02 88 	store_32 s16, 132(sp)
    2690:	3e 02 02 88 	store_32 s17, 128(sp)
    2694:	5e f2 01 88 	store_32 s18, 124(sp)
    2698:	7e 52 02 88 	store_32 s19, 148(sp)
    269c:	9e e2 01 88 	store_32 s20, 120(sp)
    26a0:	be d2 01 88 	store_32 s21, 116(sp)
    26a4:	de c2 01 88 	store_32 s22, 112(sp)
    26a8:	fe b2 01 88 	store_32 s23, 108(sp)
    26ac:	03 00 00 f6 	b 12 <main+0x30c>
    26b0:	20 00 00 0f 	move s1, 0
    26b4:	23 00 00 88 	store_32 s1, (s3)
    26b8:	1e 60 02 88 	store_32 s0, 152(sp)
    26bc:	00 00 f7 c0 	move s0, s14
    26c0:	d0 15 00 f4 	bnz s16, 696 <main+0x5cc>
    26c4:	31 00 00 a8 	load_32 s1, (s17)
    26c8:	52 00 00 a8 	load_32 s2, (s18)
    26cc:	93 00 00 a8 	load_32 s4, (s19)
    26d0:	60 00 c1 c1 	reciprocal s3, s2
    26d4:	a3 00 21 c2 	mul_f s5, s3, s2
    26d8:	a4 80 12 c2 	sub_f s5, s4, s5
    26dc:	63 80 22 c2 	mul_f s3, s3, s5
    26e0:	a0 00 a0 c2 	itof s5, s0
    26e4:	43 00 21 c2 	mul_f s2, s3, s2
    26e8:	44 00 11 c2 	sub_f s2, s4, s2
    26ec:	43 00 21 c2 	mul_f s2, s3, s2
    26f0:	60 00 28 07 	mull_i s3, s0, 2560
    26f4:	45 00 21 c2 	mul_f s2, s5, s2
    26f8:	21 80 51 c0 	add_i s1, s1, s3
    26fc:	00 00 f1 c4 	move v0, s2
    2700:	20 00 21 c6 	mul_f v1, v0, s2
    2704:	54 00 00 a8 	load_32 s2, (s20)
    2708:	81 00 00 3a 	getlane s4, v1, 0
    270c:	20 00 21 c6 	mul_f v1, v0, s2
    2710:	40 80 f7 c0 	move s2, s15
    2714:	40 00 f2 c4 	move v2, s4
    2718:	95 00 00 ae 	load_v v4, (s21)
    271c:	80 00 a1 c2 	itof s4, s2
    2720:	42 40 00 05 	add_i s2, s2, 16
    2724:	76 00 00 a8 	load_32 s3, (s22)
    2728:	b3 00 00 a8 	load_32 s5, (s19)
    272c:	d7 00 00 a8 	load_32 s6, (s23)
    2730:	84 00 02 c6 	add_f v4, v4, s4
    2734:	a0 80 c1 c5 	reciprocal v5, s3
    2738:	60 80 f2 c4 	move v3, s5
    273c:	c0 00 a3 c2 	itof s6, s6
    2740:	c5 80 21 c6 	mul_f v6, v5, s3
    2744:	c3 00 13 d2 	sub_f v6, v3, v6
    2748:	a5 00 23 d2 	mul_f v5, v5, v6
    274c:	c5 80 21 c6 	mul_f v6, v5, s3
    2750:	7e a0 02 a8 	load_32 s3, 168(sp)
    2754:	c3 00 13 d2 	sub_f v6, v3, v6
    2758:	a5 00 23 d2 	mul_f v5, v5, v6
    275c:	84 80 22 d2 	mul_f v4, v4, v5
    2760:	e3 00 00 a8 	load_32 s7, (s3)
    2764:	68 00 00 a8 	load_32 s3, (s8)
    2768:	89 00 00 a8 	load_32 s4, (s9)
    276c:	0a 01 00 a8 	load_32 s8, (s10)
    2770:	2b 01 00 a8 	load_32 s9, (s11)
    2774:	60 81 c3 c1 	reciprocal s11, s7
    2778:	4c 01 00 a8 	load_32 s10, (s12)
    277c:	00 81 c1 c5 	reciprocal v8, s3
    2780:	a4 00 22 d2 	mul_f v5, v4, v4
    2784:	8d 01 00 a8 	load_32 s12, (s13)
    2788:	a2 80 02 d2 	add_f v5, v2, v5
    278c:	e0 00 f6 c4 	move v7, s12
    2790:	ab 81 23 c2 	mul_f s13, s11, s7
    2794:	a5 81 16 c2 	sub_f s13, s5, s13
    2798:	6b 81 26 c2 	mul_f s11, s11, s13
    279c:	a0 01 fc c0 	move s13, s24
    27a0:	9e b1 02 a8 	load_32 s12, 172(sp)
    27a4:	c5 00 25 c6 	mul_f v6, v5, s10
    27a8:	a5 04 00 29 	ashr v5, v5, 1
    27ac:	ba 80 62 d0 	sub_i v5, v26, v5
    27b0:	eb 80 23 c2 	mul_f s7, s11, s7
    27b4:	c6 80 22 d2 	mul_f v6, v6, v5
    27b8:	a5 80 13 c2 	sub_f s5, s5, s7
    27bc:	e0 00 fd c0 	move s7, s26
    27c0:	ab 80 22 c2 	mul_f s5, s11, s5
    27c4:	7e c1 02 a8 	load_32 s11, 176(sp)
    27c8:	a6 80 22 c2 	mul_f s5, s6, s5
    27cc:	40 81 12 c6 	sub_f v10, v0, s5
    27d0:	c7 00 00 a8 	load_32 s6, (s7)
    27d4:	c6 80 22 d2 	mul_f v6, v6, v5
    27d8:	c7 00 13 d2 	sub_f v6, v7, v6
    27dc:	e8 80 21 c6 	mul_f v7, v8, s3
    27e0:	4a 01 25 c6 	mul_f v10, v10, s10
    27e4:	a6 80 22 d2 	mul_f v5, v6, v5
    27e8:	c3 80 13 d2 	sub_f v6, v3, v7
    27ec:	c8 00 23 d2 	mul_f v6, v8, v6
    27f0:	e4 80 02 c6 	add_f v7, v4, s5
    27f4:	81 00 02 d2 	add_f v4, v1, v4
    27f8:	00 81 c2 d1 	reciprocal v8, v5
    27fc:	26 81 21 c6 	mul_f v9, v6, s3
    2800:	23 81 14 d2 	sub_f v9, v3, v9
    2804:	c6 80 24 d2 	mul_f v6, v6, v9
    2808:	27 01 23 d2 	mul_f v9, v7, v6
    280c:	84 80 02 c6 	add_f v4, v4, s5
    2810:	68 81 22 d2 	mul_f v11, v8, v5
    2814:	63 81 15 d2 	sub_f v11, v3, v11
    2818:	08 81 25 d2 	mul_f v8, v8, v11
    281c:	20 81 b4 d1 	ftoi v9, v9
    2820:	84 00 25 c6 	mul_f v4, v4, s10
    2824:	5e d1 02 a8 	load_32 s10, 180(sp)
    2828:	a8 80 22 d2 	mul_f v5, v8, v5
    282c:	63 80 12 d2 	sub_f v3, v3, v5
    2830:	68 80 21 d2 	mul_f v3, v8, v3
    2834:	a0 80 a4 d2 	itof v5, v9
    2838:	29 05 00 21 	and v9, v9, 1
    283c:	0a 01 23 d2 	mul_f v8, v10, v6
    2840:	63 00 23 c6 	mul_f v3, v3, s6
    2844:	a5 80 21 c6 	mul_f v5, v5, s3
    2848:	00 01 b4 d1 	ftoi v8, v8
    284c:	a7 80 12 d2 	sub_f v5, v7, v5
    2850:	e4 00 23 d2 	mul_f v7, v4, v6
    2854:	63 80 02 c6 	add_f v3, v3, s5
    2858:	a9 04 00 30 	cmpeq_i s5, v9, 1
    285c:	60 01 a4 d2 	itof v11, v8
    2860:	08 05 00 21 	and v8, v8, 1
    2864:	85 81 1d c4 	and v12, v5, s27
    2868:	85 01 26 d2 	mul_f v12, v5, v12
    286c:	e0 80 b3 d1 	ftoi v7, v7
    2870:	a5 00 22 c6 	mul_f v5, v5, s4
    2874:	c3 00 23 d2 	mul_f v6, v3, v6
    2878:	6b 81 21 c6 	mul_f v11, v11, s3
    287c:	4a 81 15 d2 	sub_f v10, v10, v11
    2880:	6c 01 24 c6 	mul_f v11, v12, s8
    2884:	80 81 a3 d2 	itof v12, v7
    2888:	e7 04 00 21 	and v7, v7, 1
    288c:	a5 80 05 d2 	add_f v5, v5, v11
    2890:	c0 00 b3 d1 	ftoi v6, v6
    2894:	2a 81 1d c4 	and v9, v10, s27
    2898:	2a 81 24 d2 	mul_f v9, v10, v9
    289c:	8c 81 21 c6 	mul_f v12, v12, s3
    28a0:	84 00 16 d2 	sub_f v4, v4, v12
    28a4:	85 81 3c c4 	xor v12, v5, s25
    28a8:	60 01 a3 d2 	itof v11, v6
    28ac:	a0 14 f6 d4 	move_mask v5, s5, v12
    28b0:	4a 01 22 c6 	mul_f v10, v10, s4
    28b4:	c6 04 00 21 	and v6, v6, 1
    28b8:	a5 80 04 c6 	add_f v5, v5, s9
    28bc:	3e e1 02 a8 	load_32 s9, 184(sp)
    28c0:	29 01 24 c6 	mul_f v9, v9, s8
    28c4:	6b 81 21 c6 	mul_f v11, v11, s3
    28c8:	68 04 00 30 	cmpeq_i s3, v8, 1
    28cc:	63 80 15 d2 	sub_f v3, v3, v11
    28d0:	2a 81 04 d2 	add_f v9, v10, v9
    28d4:	44 81 1d c4 	and v10, v4, s27
    28d8:	44 01 25 d2 	mul_f v10, v4, v10
    28dc:	84 00 22 c6 	mul_f v4, v4, s4
    28e0:	03 81 1d c4 	and v8, v3, s27
    28e4:	03 01 24 d2 	mul_f v8, v3, v8
    28e8:	63 00 22 c6 	mul_f v3, v3, s4
    28ec:	86 04 00 30 	cmpeq_i s4, v6, 1
    28f0:	4a 01 24 c6 	mul_f v10, v10, s8
    28f4:	84 00 05 d2 	add_f v4, v4, v10
    28f8:	49 81 3c c4 	xor v10, v9, s25
    28fc:	20 0d f5 d4 	move_mask v9, s3, v10
    2900:	67 04 00 30 	cmpeq_i s3, v7, 1
    2904:	a5 80 04 d2 	add_f v5, v5, v9
    2908:	08 01 24 c6 	mul_f v8, v8, s8
    290c:	1e f1 02 a8 	load_32 s8, 188(sp)
    2910:	63 00 04 d2 	add_f v3, v3, v8
    2914:	e4 80 3c c4 	xor v7, v4, s25
    2918:	80 8c f3 d4 	move_mask v4, s3, v7
    291c:	7e 90 02 a8 	load_32 s3, 164(sp)
    2920:	84 80 02 d2 	add_f v4, v4, v5
    2924:	c3 80 3c c4 	xor v6, v3, s25
    2928:	63 00 00 a8 	load_32 s3, (s3)
    292c:	60 10 f3 d4 	move_mask v3, s4, v6
    2930:	63 00 02 d2 	add_f v3, v3, v4
    2934:	63 80 21 c6 	mul_f v3, v3, s3
    2938:	7e 80 02 a8 	load_32 s3, 160(sp)
    293c:	63 00 00 a8 	load_32 s3, (s3)
    2940:	63 80 01 c6 	add_f v3, v3, s3
    2944:	7e 70 02 a8 	load_32 s3, 156(sp)
    2948:	60 80 b1 d1 	ftoi v3, v3
    294c:	63 08 00 2b 	shl v3, v3, 2
    2950:	63 80 51 c4 	add_i v3, v3, s3
    2954:	62 00 0a 18 	cmplt_u s3, s2, 640
    2958:	63 00 00 ba 	load_gath v3, (v3)
    295c:	61 00 00 8e 	store_v v3, (s1)
    2960:	01 00 00 e4 	dflush s1
    2964:	21 00 01 05 	add_i s1, s1, 64
    2968:	83 ed ff f5 	bnz s3, -592 <main+0x36c>
    296c:	00 10 00 05 	add_i s0, s0, 4
    2970:	20 80 07 14 	cmplt_i s1, s0, 480
    2974:	81 ea ff f5 	bnz s1, -688 <main+0x318>
    2978:	4e 00 00 f2 	bz s14, 8 <main+0x5d4>
    297c:	07 00 00 f6 	b 28 <main+0x5ec>
    2980:	17 00 00 a8 	load_32 s0, (s23)
    2984:	20 04 00 05 	add_i s1, s0, 1
    2988:	37 00 00 88 	store_32 s1, (s23)
    298c:	00 3c 00 01 	and s0, s0, 15
    2990:	40 00 00 f4 	bnz s0, 8 <main+0x5ec>
    2994:	0e 00 00 f6 	b 56 <main+0x620>
    2998:	1e 60 02 a8 	load_32 s0, 152(sp)
    299c:	26 00 00 4f 	movehi s1, 6
    29a0:	61 70 44 00 	or s3, s1, 4380
    29a4:	23 00 00 aa 	load_sync s1, (s3)
    29a8:	41 04 00 05 	add_i s2, s1, 1
    29ac:	20 80 f0 c0 	move s1, s1
    29b0:	43 00 00 8a 	store_sync s2, (s3)  
    29b4:	82 ff ff f3 	bz s2, -16 <main+0x5f8>
    29b8:	21 0c 00 10 	cmpeq_i s1, s1, 3
    29bc:	a1 e7 ff f5 	bnz s1, -780 <main+0x304>
    29c0:	23 00 00 a8 	load_32 s1, (s3)
    29c4:	a1 e7 ff f3 	bz s1, -780 <main+0x30c>
    29c8:	fe ff ff f7 	b -8 <main+0x614>
    29cc:	52 00 00 f8 	call 328 <clock>
    29d0:	3e 60 02 a8 	load_32 s1, 152(sp)
    29d4:	41 07 00 f2 	bz s1, 232 <main+0x710>
    29d8:	1e 30 02 88 	store_32 s0, 140(sp)
    29dc:	00 80 60 c0 	sub_i s0, s0, s1
    29e0:	3e a0 01 a8 	load_32 s1, 104(sp)
    29e4:	9e 50 02 a8 	load_32 s4, 148(sp)
    29e8:	40 00 00 14 	cmplt_i s2, s0, 0
    29ec:	00 00 a0 c2 	itof s0, s0
    29f0:	42 00 00 f4 	bnz s2, 8 <main+0x64c>
    29f4:	3e 40 02 a8 	load_32 s1, 144(sp)
    29f8:	5e 90 01 a8 	load_32 s2, 100(sp)
    29fc:	22 80 50 c0 	add_i s1, s2, s1
    2a00:	21 00 00 a8 	load_32 s1, (s1)
    2a04:	5e 80 01 a8 	load_32 s2, 96(sp)
    2a08:	00 80 00 c2 	add_f s0, s0, s1
    2a0c:	42 00 00 a8 	load_32 s2, (s2)
    2a10:	84 00 00 a8 	load_32 s4, (s4)
    2a14:	60 00 c1 c1 	reciprocal s3, s2
    2a18:	a3 00 21 c2 	mul_f s5, s3, s2
    2a1c:	a4 80 12 c2 	sub_f s5, s4, s5
    2a20:	63 80 22 c2 	mul_f s3, s3, s5
    2a24:	23 00 21 c2 	mul_f s1, s3, s2
    2a28:	24 80 10 c2 	sub_f s1, s4, s1
    2a2c:	23 80 20 c2 	mul_f s1, s3, s1
    2a30:	00 80 20 c2 	mul_f s0, s0, s1
    2a34:	20 00 c0 c1 	reciprocal s1, s0
    2a38:	41 00 20 c2 	mul_f s2, s1, s0
    2a3c:	44 00 11 c2 	sub_f s2, s4, s2
    2a40:	21 00 21 c2 	mul_f s1, s1, s2
    2a44:	40 00 00 4f 	movehi s2, 0
    2a48:	01 00 20 c2 	mul_f s0, s1, s0
    2a4c:	04 00 10 c2 	sub_f s0, s4, s0
    2a50:	01 00 20 c2 	mul_f s0, s1, s0
    2a54:	22 f0 06 00 	or s1, s2, 444
    2a58:	21 00 00 a8 	load_32 s1, (s1)
    2a5c:	00 80 20 c2 	mul_f s0, s0, s1
    2a60:	20 00 00 4f 	movehi s1, 0
    2a64:	21 48 12 00 	or s1, s1, 1170
    2a68:	3e 00 00 88 	store_32 s1, (sp)
    2a6c:	1e 10 00 88 	store_32 s0, 4(sp)
    2a70:	c8 02 00 f8 	call 2848 <printf>
    2a74:	7e 52 02 a8 	load_32 s19, 148(sp)
    2a78:	de 21 02 a8 	load_32 s14, 136(sp)
    2a7c:	fe 41 02 a8 	load_32 s15, 144(sp)
    2a80:	1e 12 02 a8 	load_32 s16, 132(sp)
    2a84:	3e 02 02 a8 	load_32 s17, 128(sp)
    2a88:	5e f2 01 a8 	load_32 s18, 124(sp)
    2a8c:	9e e2 01 a8 	load_32 s20, 120(sp)
    2a90:	be d2 01 a8 	load_32 s21, 116(sp)
    2a94:	de c2 01 a8 	load_32 s22, 112(sp)
    2a98:	fe b2 01 a8 	load_32 s23, 108(sp)
    2a9c:	1e f1 02 a8 	load_32 s8, 188(sp)
    2aa0:	3e e1 02 a8 	load_32 s9, 184(sp)
    2aa4:	5e d1 02 a8 	load_32 s10, 180(sp)
    2aa8:	7e c1 02 a8 	load_32 s11, 176(sp)
    2aac:	9e b1 02 a8 	load_32 s12, 172(sp)
    2ab0:	a0 01 fc c0 	move s13, s24
    2ab4:	1e 30 02 a8 	load_32 s0, 140(sp)
    2ab8:	b9 ff ff f7 	b -284 <main+0x5f0>
    2abc:	de 21 02 a8 	load_32 s14, 136(sp)
    2ac0:	fe 41 02 a8 	load_32 s15, 144(sp)
    2ac4:	1e 12 02 a8 	load_32 s16, 132(sp)
    2ac8:	3e 02 02 a8 	load_32 s17, 128(sp)
    2acc:	5e f2 01 a8 	load_32 s18, 124(sp)
    2ad0:	7e 52 02 a8 	load_32 s19, 148(sp)
    2ad4:	9e e2 01 a8 	load_32 s20, 120(sp)
    2ad8:	be d2 01 a8 	load_32 s21, 116(sp)
    2adc:	de c2 01 a8 	load_32 s22, 112(sp)
    2ae0:	fe b2 01 a8 	load_32 s23, 108(sp)
    2ae4:	1e f1 02 a8 	load_32 s8, 188(sp)
    2ae8:	3e e1 02 a8 	load_32 s9, 184(sp)
    2aec:	5e d1 02 a8 	load_32 s10, 180(sp)
    2af0:	7e c1 02 a8 	load_32 s11, 176(sp)
    2af4:	9e b1 02 a8 	load_32 s12, 172(sp)
    2af8:	a0 01 fc c0 	move s13, s24
    2afc:	a8 ff ff f7 	b -352 <main+0x5f0>

0000000000002b00 _GLOBAL__sub_I_plasma.cpp:
    2b00:	06 00 00 4f 	movehi s0, 6
    2b04:	20 00 00 0f 	move s1, 0
    2b08:	00 70 44 00 	or s0, s0, 4380
    2b0c:	20 00 00 88 	store_32 s1, (s0)
    2b10:	1f 00 00 f0 	ret

0000000000002b14 clock:
    2b14:	de 03 ff 05 	add_i sp, sp, -64
    2b18:	fe f3 00 88 	store_32 ra, 60(sp)
    2b1c:	91 1d 00 f8 	call 30276 <get_cycle_count>
    2b20:	3c e8 51 4f 	movehi s1, 167772
    2b24:	fe f3 00 a8 	load_32 ra, 60(sp)
    2b28:	21 7c 14 00 	or s1, s1, 1311
    2b2c:	00 80 80 c0 	mulh_u s0, s0, s1
    2b30:	00 10 00 0a 	shr s0, s0, 4
    2b34:	de 03 01 05 	add_i sp, sp, 64
    2b38:	1f 00 00 f0 	ret

0000000000002b3c fmod:
    2b3c:	40 00 00 4f 	movehi s2, 0
    2b40:	60 80 c0 c1 	reciprocal s3, s1
    2b44:	42 00 06 00 	or s2, s2, 384
    2b48:	42 00 00 a8 	load_32 s2, (s2)
    2b4c:	83 80 20 c2 	mul_f s4, s3, s1
    2b50:	82 00 12 c2 	sub_f s4, s2, s4
    2b54:	63 00 22 c2 	mul_f s3, s3, s4
    2b58:	83 80 20 c2 	mul_f s4, s3, s1
    2b5c:	42 00 12 c2 	sub_f s2, s2, s4
    2b60:	43 00 21 c2 	mul_f s2, s3, s2
    2b64:	40 00 21 c2 	mul_f s2, s0, s2
    2b68:	40 00 b1 c1 	ftoi s2, s2
    2b6c:	40 00 a1 c2 	itof s2, s2
    2b70:	22 80 20 c2 	mul_f s1, s2, s1
    2b74:	00 80 10 c2 	sub_f s0, s0, s1
    2b78:	1f 00 00 f0 	ret

0000000000002b7c sin:
    2b7c:	20 00 00 4f 	movehi s1, 0
    2b80:	60 00 00 4f 	movehi s3, 0
    2b84:	41 b0 06 00 	or s2, s1, 428
    2b88:	63 00 06 00 	or s3, s3, 384
    2b8c:	22 00 00 a8 	load_32 s1, (s2)
    2b90:	63 00 00 a8 	load_32 s3, (s3)
    2b94:	80 80 c0 c1 	reciprocal s4, s1
    2b98:	a4 80 20 c2 	mul_f s5, s4, s1
    2b9c:	a3 80 12 c2 	sub_f s5, s3, s5
    2ba0:	84 80 22 c2 	mul_f s4, s4, s5
    2ba4:	a4 80 20 c2 	mul_f s5, s4, s1
    2ba8:	63 80 12 c2 	sub_f s3, s3, s5
    2bac:	64 80 21 c2 	mul_f s3, s4, s3
    2bb0:	80 00 00 4f 	movehi s4, 0
    2bb4:	60 80 21 c2 	mul_f s3, s0, s3
    2bb8:	60 80 b1 c1 	ftoi s3, s3
    2bbc:	60 80 a1 c2 	itof s3, s3
    2bc0:	23 80 20 c2 	mul_f s1, s3, s1
    2bc4:	20 80 10 c2 	sub_f s1, s0, s1
    2bc8:	04 70 05 00 	or s0, s4, 348
    2bcc:	00 00 00 a8 	load_32 s0, (s0)
    2bd0:	01 00 e0 c2 	cmplt_f s0, s1, s0
    2bd4:	60 00 00 f4 	bnz s0, 12 <sin+0x64>
    2bd8:	00 04 00 0f 	move s0, 1
    2bdc:	02 00 00 f6 	b 8 <sin+0x68>
    2be0:	00 fc ff 0f 	move s0, -1
    2be4:	60 00 00 4f 	movehi s3, 0
    2be8:	9f fc 7f 4f 	movehi s4, 262143
    2bec:	63 c0 06 00 	or s3, s3, 432
    2bf0:	84 fc 7f 00 	or s4, s4, 8191
    2bf4:	21 00 12 c0 	and s1, s1, s4
    2bf8:	63 00 00 a8 	load_32 s3, (s3)
    2bfc:	81 80 c1 c2 	cmpgt_f s4, s1, s3
    2c00:	67 00 00 4f 	movehi s3, 7
    2c04:	63 fc 7f 00 	or s3, s3, 8191
    2c08:	84 80 11 c1 	cmpne_i s4, s4, s3
    2c0c:	a4 00 00 f4 	bnz s4, 20 <sin+0xa4>
    2c10:	42 00 00 a8 	load_32 s2, (s2)
    2c14:	60 00 00 0f 	move s3, 0
    2c18:	03 00 60 c0 	sub_i s0, s3, s0
    2c1c:	15 00 00 f6 	b 84 <sin+0xf4>
    2c20:	40 00 00 4f 	movehi s2, 0
    2c24:	42 10 06 00 	or s2, s2, 388
    2c28:	82 00 00 a8 	load_32 s4, (s2)
    2c2c:	81 00 c2 c2 	cmpgt_f s4, s1, s4
    2c30:	84 80 11 c1 	cmpne_i s4, s4, s3
    2c34:	04 01 00 f4 	bnz s4, 32 <sin+0xd8>
    2c38:	40 00 00 4f 	movehi s2, 0
    2c3c:	60 00 00 0f 	move s3, 0
    2c40:	42 a0 05 00 	or s2, s2, 360
    2c44:	03 00 60 c0 	sub_i s0, s3, s0
    2c48:	42 00 00 a8 	load_32 s2, (s2)
    2c4c:	21 00 01 c2 	add_f s1, s1, s2
    2c50:	09 00 00 f6 	b 36 <sin+0xf8>
    2c54:	80 00 00 4f 	movehi s4, 0
    2c58:	84 40 06 00 	or s4, s4, 400
    2c5c:	84 00 00 a8 	load_32 s4, (s4)
    2c60:	81 00 c2 c2 	cmpgt_f s4, s1, s4
    2c64:	64 80 11 c1 	cmpne_i s3, s4, s3
    2c68:	63 00 00 f4 	bnz s3, 12 <sin+0xf8>
    2c6c:	42 00 00 a8 	load_32 s2, (s2)
    2c70:	22 80 10 c2 	sub_f s1, s2, s1
    2c74:	41 80 20 c2 	mul_f s2, s1, s1
    2c78:	60 00 00 4f 	movehi s3, 0
    2c7c:	a0 00 00 4f 	movehi s5, 0
    2c80:	00 00 a0 c2 	itof s0, s0
    2c84:	63 d0 06 00 	or s3, s3, 436
    2c88:	a5 80 05 00 	or s5, s5, 352
    2c8c:	63 00 00 a8 	load_32 s3, (s3)
    2c90:	82 80 20 c2 	mul_f s4, s2, s1
    2c94:	64 80 21 c2 	mul_f s3, s4, s3
    2c98:	82 00 22 c2 	mul_f s4, s2, s4
    2c9c:	21 80 01 c2 	add_f s1, s1, s3
    2ca0:	65 00 00 a8 	load_32 s3, (s5)
    2ca4:	a0 00 00 4f 	movehi s5, 0
    2ca8:	c2 00 22 c2 	mul_f s6, s2, s4
    2cac:	a5 40 05 00 	or s5, s5, 336
    2cb0:	64 80 21 c2 	mul_f s3, s4, s3
    2cb4:	80 00 00 4f 	movehi s4, 0
    2cb8:	21 80 01 c2 	add_f s1, s1, s3
    2cbc:	65 00 00 a8 	load_32 s3, (s5)
    2cc0:	a2 00 23 c2 	mul_f s5, s2, s6
    2cc4:	84 90 06 00 	or s4, s4, 420
    2cc8:	66 80 21 c2 	mul_f s3, s6, s3
    2ccc:	c2 80 22 c2 	mul_f s6, s2, s5
    2cd0:	42 00 23 c2 	mul_f s2, s2, s6
    2cd4:	21 80 01 c2 	add_f s1, s1, s3
    2cd8:	64 00 00 a8 	load_32 s3, (s4)
    2cdc:	80 00 00 4f 	movehi s4, 0
    2ce0:	84 00 07 00 	or s4, s4, 448
    2ce4:	65 80 21 c2 	mul_f s3, s5, s3
    2ce8:	21 80 01 c2 	add_f s1, s1, s3
    2cec:	64 00 00 a8 	load_32 s3, (s4)
    2cf0:	80 00 00 4f 	movehi s4, 0
    2cf4:	84 20 06 00 	or s4, s4, 392
    2cf8:	66 80 21 c2 	mul_f s3, s6, s3
    2cfc:	21 80 01 c2 	add_f s1, s1, s3
    2d00:	64 00 00 a8 	load_32 s3, (s4)
    2d04:	42 80 21 c2 	mul_f s2, s2, s3
    2d08:	21 00 01 c2 	add_f s1, s1, s2
    2d0c:	01 00 20 c2 	mul_f s0, s1, s0
    2d10:	1f 00 00 f0 	ret

0000000000002d14 cos:
    2d14:	60 00 00 4f 	movehi s3, 0
    2d18:	20 00 00 4f 	movehi s1, 0
    2d1c:	a0 00 00 4f 	movehi s5, 0
    2d20:	63 b0 06 00 	or s3, s3, 428
    2d24:	41 40 06 00 	or s2, s1, 400
    2d28:	a5 00 06 00 	or s5, s5, 384
    2d2c:	22 00 00 a8 	load_32 s1, (s2)
    2d30:	83 00 00 a8 	load_32 s4, (s3)
    2d34:	a5 00 00 a8 	load_32 s5, (s5)
    2d38:	00 80 00 c2 	add_f s0, s0, s1
    2d3c:	c0 00 c2 c1 	reciprocal s6, s4
    2d40:	e6 00 22 c2 	mul_f s7, s6, s4
    2d44:	e5 80 13 c2 	sub_f s7, s5, s7
    2d48:	c6 80 23 c2 	mul_f s6, s6, s7
    2d4c:	26 00 22 c2 	mul_f s1, s6, s4
    2d50:	25 80 10 c2 	sub_f s1, s5, s1
    2d54:	a0 00 00 4f 	movehi s5, 0
    2d58:	26 80 20 c2 	mul_f s1, s6, s1
    2d5c:	20 80 20 c2 	mul_f s1, s0, s1
    2d60:	20 80 b0 c1 	ftoi s1, s1
    2d64:	20 80 a0 c2 	itof s1, s1
    2d68:	21 00 22 c2 	mul_f s1, s1, s4
    2d6c:	20 80 10 c2 	sub_f s1, s0, s1
    2d70:	05 70 05 00 	or s0, s5, 348
    2d74:	00 00 00 a8 	load_32 s0, (s0)
    2d78:	01 00 e0 c2 	cmplt_f s0, s1, s0
    2d7c:	60 00 00 f4 	bnz s0, 12 <cos+0x74>
    2d80:	00 04 00 0f 	move s0, 1
    2d84:	02 00 00 f6 	b 8 <cos+0x78>
    2d88:	00 fc ff 0f 	move s0, -1
    2d8c:	80 00 00 4f 	movehi s4, 0
    2d90:	bf fc 7f 4f 	movehi s5, 262143
    2d94:	84 c0 06 00 	or s4, s4, 432
    2d98:	a5 fc 7f 00 	or s5, s5, 8191
    2d9c:	21 80 12 c0 	and s1, s1, s5
    2da0:	84 00 00 a8 	load_32 s4, (s4)
    2da4:	a1 00 c2 c2 	cmpgt_f s5, s1, s4
    2da8:	87 00 00 4f 	movehi s4, 7
    2dac:	84 fc 7f 00 	or s4, s4, 8191
    2db0:	a5 00 12 c1 	cmpne_i s5, s5, s4
    2db4:	a5 00 00 f4 	bnz s5, 20 <cos+0xb4>
    2db8:	43 00 00 a8 	load_32 s2, (s3)
    2dbc:	60 00 00 0f 	move s3, 0
    2dc0:	03 00 60 c0 	sub_i s0, s3, s0
    2dc4:	13 00 00 f6 	b 76 <cos+0xfc>
    2dc8:	60 00 00 4f 	movehi s3, 0
    2dcc:	63 10 06 00 	or s3, s3, 388
    2dd0:	a3 00 00 a8 	load_32 s5, (s3)
    2dd4:	a1 80 c2 c2 	cmpgt_f s5, s1, s5
    2dd8:	a5 00 12 c1 	cmpne_i s5, s5, s4
    2ddc:	05 01 00 f4 	bnz s5, 32 <cos+0xe8>
    2de0:	40 00 00 4f 	movehi s2, 0
    2de4:	60 00 00 0f 	move s3, 0
    2de8:	42 a0 05 00 	or s2, s2, 360
    2dec:	03 00 60 c0 	sub_i s0, s3, s0
    2df0:	42 00 00 a8 	load_32 s2, (s2)
    2df4:	21 00 01 c2 	add_f s1, s1, s2
    2df8:	07 00 00 f6 	b 28 <cos+0x100>
    2dfc:	42 00 00 a8 	load_32 s2, (s2)
    2e00:	41 00 c1 c2 	cmpgt_f s2, s1, s2
    2e04:	42 00 12 c1 	cmpne_i s2, s2, s4
    2e08:	62 00 00 f4 	bnz s2, 12 <cos+0x100>
    2e0c:	43 00 00 a8 	load_32 s2, (s3)
    2e10:	22 80 10 c2 	sub_f s1, s2, s1
    2e14:	40 00 00 4f 	movehi s2, 0
    2e18:	61 80 20 c2 	mul_f s3, s1, s1
    2e1c:	81 80 21 c2 	mul_f s4, s1, s3
    2e20:	a0 00 00 4f 	movehi s5, 0
    2e24:	00 00 a0 c2 	itof s0, s0
    2e28:	42 d0 06 00 	or s2, s2, 436
    2e2c:	a5 80 05 00 	or s5, s5, 352
    2e30:	42 00 00 a8 	load_32 s2, (s2)
    2e34:	44 00 21 c2 	mul_f s2, s4, s2
    2e38:	83 00 22 c2 	mul_f s4, s3, s4
    2e3c:	21 00 01 c2 	add_f s1, s1, s2
    2e40:	45 00 00 a8 	load_32 s2, (s5)
    2e44:	a0 00 00 4f 	movehi s5, 0
    2e48:	c3 00 22 c2 	mul_f s6, s3, s4
    2e4c:	a5 40 05 00 	or s5, s5, 336
    2e50:	44 00 21 c2 	mul_f s2, s4, s2
    2e54:	80 00 00 4f 	movehi s4, 0
    2e58:	21 00 01 c2 	add_f s1, s1, s2
    2e5c:	45 00 00 a8 	load_32 s2, (s5)
    2e60:	a3 00 23 c2 	mul_f s5, s3, s6
    2e64:	84 90 06 00 	or s4, s4, 420
    2e68:	46 00 21 c2 	mul_f s2, s6, s2
    2e6c:	c3 80 22 c2 	mul_f s6, s3, s5
    2e70:	63 00 23 c2 	mul_f s3, s3, s6
    2e74:	21 00 01 c2 	add_f s1, s1, s2
    2e78:	44 00 00 a8 	load_32 s2, (s4)
    2e7c:	80 00 00 4f 	movehi s4, 0
    2e80:	84 00 07 00 	or s4, s4, 448
    2e84:	45 00 21 c2 	mul_f s2, s5, s2
    2e88:	21 00 01 c2 	add_f s1, s1, s2
    2e8c:	44 00 00 a8 	load_32 s2, (s4)
    2e90:	80 00 00 4f 	movehi s4, 0
    2e94:	84 20 06 00 	or s4, s4, 392
    2e98:	46 00 21 c2 	mul_f s2, s6, s2
    2e9c:	21 00 01 c2 	add_f s1, s1, s2
    2ea0:	44 00 00 a8 	load_32 s2, (s4)
    2ea4:	43 00 21 c2 	mul_f s2, s3, s2
    2ea8:	21 00 01 c2 	add_f s1, s1, s2
    2eac:	01 00 20 c2 	mul_f s0, s1, s0
    2eb0:	1f 00 00 f0 	ret

0000000000002eb4 sinf:
    2eb4:	20 00 00 4f 	movehi s1, 0
    2eb8:	60 00 00 4f 	movehi s3, 0
    2ebc:	41 b0 06 00 	or s2, s1, 428
    2ec0:	63 00 06 00 	or s3, s3, 384
    2ec4:	22 00 00 a8 	load_32 s1, (s2)
    2ec8:	63 00 00 a8 	load_32 s3, (s3)
    2ecc:	80 80 c0 c1 	reciprocal s4, s1
    2ed0:	a4 80 20 c2 	mul_f s5, s4, s1
    2ed4:	a3 80 12 c2 	sub_f s5, s3, s5
    2ed8:	84 80 22 c2 	mul_f s4, s4, s5
    2edc:	a4 80 20 c2 	mul_f s5, s4, s1
    2ee0:	63 80 12 c2 	sub_f s3, s3, s5
    2ee4:	64 80 21 c2 	mul_f s3, s4, s3
    2ee8:	80 00 00 4f 	movehi s4, 0
    2eec:	60 80 21 c2 	mul_f s3, s0, s3
    2ef0:	60 80 b1 c1 	ftoi s3, s3
    2ef4:	60 80 a1 c2 	itof s3, s3
    2ef8:	23 80 20 c2 	mul_f s1, s3, s1
    2efc:	20 80 10 c2 	sub_f s1, s0, s1
    2f00:	04 70 05 00 	or s0, s4, 348
    2f04:	00 00 00 a8 	load_32 s0, (s0)
    2f08:	01 00 e0 c2 	cmplt_f s0, s1, s0
    2f0c:	60 00 00 f4 	bnz s0, 12 <sinf+0x64>
    2f10:	00 04 00 0f 	move s0, 1
    2f14:	02 00 00 f6 	b 8 <sinf+0x68>
    2f18:	00 fc ff 0f 	move s0, -1
    2f1c:	60 00 00 4f 	movehi s3, 0
    2f20:	9f fc 7f 4f 	movehi s4, 262143
    2f24:	63 c0 06 00 	or s3, s3, 432
    2f28:	84 fc 7f 00 	or s4, s4, 8191
    2f2c:	21 00 12 c0 	and s1, s1, s4
    2f30:	63 00 00 a8 	load_32 s3, (s3)
    2f34:	81 80 c1 c2 	cmpgt_f s4, s1, s3
    2f38:	67 00 00 4f 	movehi s3, 7
    2f3c:	63 fc 7f 00 	or s3, s3, 8191
    2f40:	84 80 11 c1 	cmpne_i s4, s4, s3
    2f44:	a4 00 00 f4 	bnz s4, 20 <sinf+0xa4>
    2f48:	42 00 00 a8 	load_32 s2, (s2)
    2f4c:	60 00 00 0f 	move s3, 0
    2f50:	03 00 60 c0 	sub_i s0, s3, s0
    2f54:	15 00 00 f6 	b 84 <sinf+0xf4>
    2f58:	40 00 00 4f 	movehi s2, 0
    2f5c:	42 10 06 00 	or s2, s2, 388
    2f60:	82 00 00 a8 	load_32 s4, (s2)
    2f64:	81 00 c2 c2 	cmpgt_f s4, s1, s4
    2f68:	84 80 11 c1 	cmpne_i s4, s4, s3
    2f6c:	04 01 00 f4 	bnz s4, 32 <sinf+0xd8>
    2f70:	40 00 00 4f 	movehi s2, 0
    2f74:	60 00 00 0f 	move s3, 0
    2f78:	42 a0 05 00 	or s2, s2, 360
    2f7c:	03 00 60 c0 	sub_i s0, s3, s0
    2f80:	42 00 00 a8 	load_32 s2, (s2)
    2f84:	21 00 01 c2 	add_f s1, s1, s2
    2f88:	09 00 00 f6 	b 36 <sinf+0xf8>
    2f8c:	80 00 00 4f 	movehi s4, 0
    2f90:	84 40 06 00 	or s4, s4, 400
    2f94:	84 00 00 a8 	load_32 s4, (s4)
    2f98:	81 00 c2 c2 	cmpgt_f s4, s1, s4
    2f9c:	64 80 11 c1 	cmpne_i s3, s4, s3
    2fa0:	63 00 00 f4 	bnz s3, 12 <sinf+0xf8>
    2fa4:	42 00 00 a8 	load_32 s2, (s2)
    2fa8:	22 80 10 c2 	sub_f s1, s2, s1
    2fac:	40 00 00 4f 	movehi s2, 0
    2fb0:	61 80 20 c2 	mul_f s3, s1, s1
    2fb4:	81 80 21 c2 	mul_f s4, s1, s3
    2fb8:	a0 00 00 4f 	movehi s5, 0
    2fbc:	00 00 a0 c2 	itof s0, s0
    2fc0:	42 d0 06 00 	or s2, s2, 436
    2fc4:	a5 80 05 00 	or s5, s5, 352
    2fc8:	42 00 00 a8 	load_32 s2, (s2)
    2fcc:	44 00 21 c2 	mul_f s2, s4, s2
    2fd0:	83 00 22 c2 	mul_f s4, s3, s4
    2fd4:	21 00 01 c2 	add_f s1, s1, s2
    2fd8:	45 00 00 a8 	load_32 s2, (s5)
    2fdc:	a0 00 00 4f 	movehi s5, 0
    2fe0:	c3 00 22 c2 	mul_f s6, s3, s4
    2fe4:	a5 40 05 00 	or s5, s5, 336
    2fe8:	44 00 21 c2 	mul_f s2, s4, s2
    2fec:	80 00 00 4f 	movehi s4, 0
    2ff0:	21 00 01 c2 	add_f s1, s1, s2
    2ff4:	45 00 00 a8 	load_32 s2, (s5)
    2ff8:	a3 00 23 c2 	mul_f s5, s3, s6
    2ffc:	84 90 06 00 	or s4, s4, 420
    3000:	46 00 21 c2 	mul_f s2, s6, s2
    3004:	c3 80 22 c2 	mul_f s6, s3, s5
    3008:	63 00 23 c2 	mul_f s3, s3, s6
    300c:	21 00 01 c2 	add_f s1, s1, s2
    3010:	44 00 00 a8 	load_32 s2, (s4)
    3014:	80 00 00 4f 	movehi s4, 0
    3018:	84 00 07 00 	or s4, s4, 448
    301c:	45 00 21 c2 	mul_f s2, s5, s2
    3020:	21 00 01 c2 	add_f s1, s1, s2
    3024:	44 00 00 a8 	load_32 s2, (s4)
    3028:	80 00 00 4f 	movehi s4, 0
    302c:	84 20 06 00 	or s4, s4, 392
    3030:	46 00 21 c2 	mul_f s2, s6, s2
    3034:	21 00 01 c2 	add_f s1, s1, s2
    3038:	44 00 00 a8 	load_32 s2, (s4)
    303c:	43 00 21 c2 	mul_f s2, s3, s2
    3040:	21 00 01 c2 	add_f s1, s1, s2
    3044:	01 00 20 c2 	mul_f s0, s1, s0
    3048:	1f 00 00 f0 	ret

000000000000304c cosf:
    304c:	60 00 00 4f 	movehi s3, 0
    3050:	20 00 00 4f 	movehi s1, 0
    3054:	a0 00 00 4f 	movehi s5, 0
    3058:	63 b0 06 00 	or s3, s3, 428
    305c:	41 40 06 00 	or s2, s1, 400
    3060:	a5 00 06 00 	or s5, s5, 384
    3064:	22 00 00 a8 	load_32 s1, (s2)
    3068:	83 00 00 a8 	load_32 s4, (s3)
    306c:	a5 00 00 a8 	load_32 s5, (s5)
    3070:	00 80 00 c2 	add_f s0, s0, s1
    3074:	c0 00 c2 c1 	reciprocal s6, s4
    3078:	e6 00 22 c2 	mul_f s7, s6, s4
    307c:	e5 80 13 c2 	sub_f s7, s5, s7
    3080:	c6 80 23 c2 	mul_f s6, s6, s7
    3084:	26 00 22 c2 	mul_f s1, s6, s4
    3088:	25 80 10 c2 	sub_f s1, s5, s1
    308c:	a0 00 00 4f 	movehi s5, 0
    3090:	26 80 20 c2 	mul_f s1, s6, s1
    3094:	20 80 20 c2 	mul_f s1, s0, s1
    3098:	20 80 b0 c1 	ftoi s1, s1
    309c:	20 80 a0 c2 	itof s1, s1
    30a0:	21 00 22 c2 	mul_f s1, s1, s4
    30a4:	20 80 10 c2 	sub_f s1, s0, s1
    30a8:	05 70 05 00 	or s0, s5, 348
    30ac:	00 00 00 a8 	load_32 s0, (s0)
    30b0:	01 00 e0 c2 	cmplt_f s0, s1, s0
    30b4:	60 00 00 f4 	bnz s0, 12 <cosf+0x74>
    30b8:	00 04 00 0f 	move s0, 1
    30bc:	02 00 00 f6 	b 8 <cosf+0x78>
    30c0:	00 fc ff 0f 	move s0, -1
    30c4:	80 00 00 4f 	movehi s4, 0
    30c8:	bf fc 7f 4f 	movehi s5, 262143
    30cc:	84 c0 06 00 	or s4, s4, 432
    30d0:	a5 fc 7f 00 	or s5, s5, 8191
    30d4:	21 80 12 c0 	and s1, s1, s5
    30d8:	84 00 00 a8 	load_32 s4, (s4)
    30dc:	a1 00 c2 c2 	cmpgt_f s5, s1, s4
    30e0:	87 00 00 4f 	movehi s4, 7
    30e4:	84 fc 7f 00 	or s4, s4, 8191
    30e8:	a5 00 12 c1 	cmpne_i s5, s5, s4
    30ec:	a5 00 00 f4 	bnz s5, 20 <cosf+0xb4>
    30f0:	43 00 00 a8 	load_32 s2, (s3)
    30f4:	60 00 00 0f 	move s3, 0
    30f8:	03 00 60 c0 	sub_i s0, s3, s0
    30fc:	13 00 00 f6 	b 76 <cosf+0xfc>
    3100:	60 00 00 4f 	movehi s3, 0
    3104:	63 10 06 00 	or s3, s3, 388
    3108:	a3 00 00 a8 	load_32 s5, (s3)
    310c:	a1 80 c2 c2 	cmpgt_f s5, s1, s5
    3110:	a5 00 12 c1 	cmpne_i s5, s5, s4
    3114:	05 01 00 f4 	bnz s5, 32 <cosf+0xe8>
    3118:	40 00 00 4f 	movehi s2, 0
    311c:	60 00 00 0f 	move s3, 0
    3120:	42 a0 05 00 	or s2, s2, 360
    3124:	03 00 60 c0 	sub_i s0, s3, s0
    3128:	42 00 00 a8 	load_32 s2, (s2)
    312c:	21 00 01 c2 	add_f s1, s1, s2
    3130:	07 00 00 f6 	b 28 <cosf+0x100>
    3134:	42 00 00 a8 	load_32 s2, (s2)
    3138:	41 00 c1 c2 	cmpgt_f s2, s1, s2
    313c:	42 00 12 c1 	cmpne_i s2, s2, s4
    3140:	62 00 00 f4 	bnz s2, 12 <cosf+0x100>
    3144:	43 00 00 a8 	load_32 s2, (s3)
    3148:	22 80 10 c2 	sub_f s1, s2, s1
    314c:	40 00 00 4f 	movehi s2, 0
    3150:	61 80 20 c2 	mul_f s3, s1, s1
    3154:	81 80 21 c2 	mul_f s4, s1, s3
    3158:	a0 00 00 4f 	movehi s5, 0
    315c:	00 00 a0 c2 	itof s0, s0
    3160:	42 d0 06 00 	or s2, s2, 436
    3164:	a5 80 05 00 	or s5, s5, 352
    3168:	42 00 00 a8 	load_32 s2, (s2)
    316c:	44 00 21 c2 	mul_f s2, s4, s2
    3170:	83 00 22 c2 	mul_f s4, s3, s4
    3174:	21 00 01 c2 	add_f s1, s1, s2
    3178:	45 00 00 a8 	load_32 s2, (s5)
    317c:	a0 00 00 4f 	movehi s5, 0
    3180:	c3 00 22 c2 	mul_f s6, s3, s4
    3184:	a5 40 05 00 	or s5, s5, 336
    3188:	44 00 21 c2 	mul_f s2, s4, s2
    318c:	80 00 00 4f 	movehi s4, 0
    3190:	21 00 01 c2 	add_f s1, s1, s2
    3194:	45 00 00 a8 	load_32 s2, (s5)
    3198:	a3 00 23 c2 	mul_f s5, s3, s6
    319c:	84 90 06 00 	or s4, s4, 420
    31a0:	46 00 21 c2 	mul_f s2, s6, s2
    31a4:	c3 80 22 c2 	mul_f s6, s3, s5
    31a8:	63 00 23 c2 	mul_f s3, s3, s6
    31ac:	21 00 01 c2 	add_f s1, s1, s2
    31b0:	44 00 00 a8 	load_32 s2, (s4)
    31b4:	80 00 00 4f 	movehi s4, 0
    31b8:	84 00 07 00 	or s4, s4, 448
    31bc:	45 00 21 c2 	mul_f s2, s5, s2
    31c0:	21 00 01 c2 	add_f s1, s1, s2
    31c4:	44 00 00 a8 	load_32 s2, (s4)
    31c8:	80 00 00 4f 	movehi s4, 0
    31cc:	84 20 06 00 	or s4, s4, 392
    31d0:	46 00 21 c2 	mul_f s2, s6, s2
    31d4:	21 00 01 c2 	add_f s1, s1, s2
    31d8:	44 00 00 a8 	load_32 s2, (s4)
    31dc:	43 00 21 c2 	mul_f s2, s3, s2
    31e0:	21 00 01 c2 	add_f s1, s1, s2
    31e4:	01 00 20 c2 	mul_f s0, s1, s0
    31e8:	1f 00 00 f0 	ret

00000000000031ec sqrt:
    31ec:	20 00 00 4f 	movehi s1, 0
    31f0:	40 00 c0 c1 	reciprocal s2, s0
    31f4:	21 00 06 00 	or s1, s1, 384
    31f8:	21 00 00 a8 	load_32 s1, (s1)
    31fc:	62 00 20 c2 	mul_f s3, s2, s0
    3200:	61 80 11 c2 	sub_f s3, s1, s3
    3204:	42 80 21 c2 	mul_f s2, s2, s3
    3208:	62 00 20 c2 	mul_f s3, s2, s0
    320c:	61 80 11 c2 	sub_f s3, s1, s3
    3210:	42 80 21 c2 	mul_f s2, s2, s3
    3214:	60 00 00 4f 	movehi s3, 0
    3218:	40 00 21 c2 	mul_f s2, s0, s2
    321c:	82 00 00 c2 	add_f s4, s2, s0
    3220:	43 d0 05 00 	or s2, s3, 372
    3224:	42 00 00 a8 	load_32 s2, (s2)
    3228:	64 00 21 c2 	mul_f s3, s4, s2
    322c:	80 80 c1 c1 	reciprocal s4, s3
    3230:	a4 80 21 c2 	mul_f s5, s4, s3
    3234:	a1 80 12 c2 	sub_f s5, s1, s5
    3238:	84 80 22 c2 	mul_f s4, s4, s5
    323c:	a4 80 21 c2 	mul_f s5, s4, s3
    3240:	a1 80 12 c2 	sub_f s5, s1, s5
    3244:	84 80 22 c2 	mul_f s4, s4, s5
    3248:	80 00 22 c2 	mul_f s4, s0, s4
    324c:	63 00 02 c2 	add_f s3, s3, s4
    3250:	63 00 21 c2 	mul_f s3, s3, s2
    3254:	80 80 c1 c1 	reciprocal s4, s3
    3258:	a4 80 21 c2 	mul_f s5, s4, s3
    325c:	a1 80 12 c2 	sub_f s5, s1, s5
    3260:	84 80 22 c2 	mul_f s4, s4, s5
    3264:	a4 80 21 c2 	mul_f s5, s4, s3
    3268:	a1 80 12 c2 	sub_f s5, s1, s5
    326c:	84 80 22 c2 	mul_f s4, s4, s5
    3270:	80 00 22 c2 	mul_f s4, s0, s4
    3274:	63 00 02 c2 	add_f s3, s3, s4
    3278:	63 00 21 c2 	mul_f s3, s3, s2
    327c:	80 80 c1 c1 	reciprocal s4, s3
    3280:	a4 80 21 c2 	mul_f s5, s4, s3
    3284:	a1 80 12 c2 	sub_f s5, s1, s5
    3288:	84 80 22 c2 	mul_f s4, s4, s5
    328c:	a4 80 21 c2 	mul_f s5, s4, s3
    3290:	a1 80 12 c2 	sub_f s5, s1, s5
    3294:	84 80 22 c2 	mul_f s4, s4, s5
    3298:	80 00 22 c2 	mul_f s4, s0, s4
    329c:	63 00 02 c2 	add_f s3, s3, s4
    32a0:	63 00 21 c2 	mul_f s3, s3, s2
    32a4:	80 80 c1 c1 	reciprocal s4, s3
    32a8:	a4 80 21 c2 	mul_f s5, s4, s3
    32ac:	a1 80 12 c2 	sub_f s5, s1, s5
    32b0:	84 80 22 c2 	mul_f s4, s4, s5
    32b4:	a4 80 21 c2 	mul_f s5, s4, s3
    32b8:	a1 80 12 c2 	sub_f s5, s1, s5
    32bc:	84 80 22 c2 	mul_f s4, s4, s5
    32c0:	80 00 22 c2 	mul_f s4, s0, s4
    32c4:	63 00 02 c2 	add_f s3, s3, s4
    32c8:	63 00 21 c2 	mul_f s3, s3, s2
    32cc:	80 80 c1 c1 	reciprocal s4, s3
    32d0:	a4 80 21 c2 	mul_f s5, s4, s3
    32d4:	a1 80 12 c2 	sub_f s5, s1, s5
    32d8:	84 80 22 c2 	mul_f s4, s4, s5
    32dc:	a4 80 21 c2 	mul_f s5, s4, s3
    32e0:	a1 80 12 c2 	sub_f s5, s1, s5
    32e4:	84 80 22 c2 	mul_f s4, s4, s5
    32e8:	80 00 22 c2 	mul_f s4, s0, s4
    32ec:	63 00 02 c2 	add_f s3, s3, s4
    32f0:	63 00 21 c2 	mul_f s3, s3, s2
    32f4:	80 80 c1 c1 	reciprocal s4, s3
    32f8:	a4 80 21 c2 	mul_f s5, s4, s3
    32fc:	a1 80 12 c2 	sub_f s5, s1, s5
    3300:	84 80 22 c2 	mul_f s4, s4, s5
    3304:	a4 80 21 c2 	mul_f s5, s4, s3
    3308:	a1 80 12 c2 	sub_f s5, s1, s5
    330c:	84 80 22 c2 	mul_f s4, s4, s5
    3310:	80 00 22 c2 	mul_f s4, s0, s4
    3314:	63 00 02 c2 	add_f s3, s3, s4
    3318:	63 00 21 c2 	mul_f s3, s3, s2
    331c:	80 80 c1 c1 	reciprocal s4, s3
    3320:	a4 80 21 c2 	mul_f s5, s4, s3
    3324:	a1 80 12 c2 	sub_f s5, s1, s5
    3328:	84 80 22 c2 	mul_f s4, s4, s5
    332c:	a4 80 21 c2 	mul_f s5, s4, s3
    3330:	a1 80 12 c2 	sub_f s5, s1, s5
    3334:	84 80 22 c2 	mul_f s4, s4, s5
    3338:	80 00 22 c2 	mul_f s4, s0, s4
    333c:	63 00 02 c2 	add_f s3, s3, s4
    3340:	63 00 21 c2 	mul_f s3, s3, s2
    3344:	80 80 c1 c1 	reciprocal s4, s3
    3348:	a4 80 21 c2 	mul_f s5, s4, s3
    334c:	a1 80 12 c2 	sub_f s5, s1, s5
    3350:	84 80 22 c2 	mul_f s4, s4, s5
    3354:	a4 80 21 c2 	mul_f s5, s4, s3
    3358:	a1 80 12 c2 	sub_f s5, s1, s5
    335c:	84 80 22 c2 	mul_f s4, s4, s5
    3360:	80 00 22 c2 	mul_f s4, s0, s4
    3364:	63 00 02 c2 	add_f s3, s3, s4
    3368:	63 00 21 c2 	mul_f s3, s3, s2
    336c:	80 80 c1 c1 	reciprocal s4, s3
    3370:	a4 80 21 c2 	mul_f s5, s4, s3
    3374:	a1 80 12 c2 	sub_f s5, s1, s5
    3378:	84 80 22 c2 	mul_f s4, s4, s5
    337c:	a4 80 21 c2 	mul_f s5, s4, s3
    3380:	21 80 12 c2 	sub_f s1, s1, s5
    3384:	24 80 20 c2 	mul_f s1, s4, s1
    3388:	00 80 20 c2 	mul_f s0, s0, s1
    338c:	03 00 00 c2 	add_f s0, s3, s0
    3390:	00 00 21 c2 	mul_f s0, s0, s2
    3394:	1f 00 00 f0 	ret

0000000000003398 sqrtf:
    3398:	20 00 00 4f 	movehi s1, 0
    339c:	40 00 c0 c1 	reciprocal s2, s0
    33a0:	21 00 06 00 	or s1, s1, 384
    33a4:	21 00 00 a8 	load_32 s1, (s1)
    33a8:	62 00 20 c2 	mul_f s3, s2, s0
    33ac:	61 80 11 c2 	sub_f s3, s1, s3
    33b0:	42 80 21 c2 	mul_f s2, s2, s3
    33b4:	62 00 20 c2 	mul_f s3, s2, s0
    33b8:	61 80 11 c2 	sub_f s3, s1, s3
    33bc:	42 80 21 c2 	mul_f s2, s2, s3
    33c0:	60 00 00 4f 	movehi s3, 0
    33c4:	40 00 21 c2 	mul_f s2, s0, s2
    33c8:	82 00 00 c2 	add_f s4, s2, s0
    33cc:	43 d0 05 00 	or s2, s3, 372
    33d0:	42 00 00 a8 	load_32 s2, (s2)
    33d4:	64 00 21 c2 	mul_f s3, s4, s2
    33d8:	80 80 c1 c1 	reciprocal s4, s3
    33dc:	a4 80 21 c2 	mul_f s5, s4, s3
    33e0:	a1 80 12 c2 	sub_f s5, s1, s5
    33e4:	84 80 22 c2 	mul_f s4, s4, s5
    33e8:	a4 80 21 c2 	mul_f s5, s4, s3
    33ec:	a1 80 12 c2 	sub_f s5, s1, s5
    33f0:	84 80 22 c2 	mul_f s4, s4, s5
    33f4:	80 00 22 c2 	mul_f s4, s0, s4
    33f8:	63 00 02 c2 	add_f s3, s3, s4
    33fc:	63 00 21 c2 	mul_f s3, s3, s2
    3400:	80 80 c1 c1 	reciprocal s4, s3
    3404:	a4 80 21 c2 	mul_f s5, s4, s3
    3408:	a1 80 12 c2 	sub_f s5, s1, s5
    340c:	84 80 22 c2 	mul_f s4, s4, s5
    3410:	a4 80 21 c2 	mul_f s5, s4, s3
    3414:	a1 80 12 c2 	sub_f s5, s1, s5
    3418:	84 80 22 c2 	mul_f s4, s4, s5
    341c:	80 00 22 c2 	mul_f s4, s0, s4
    3420:	63 00 02 c2 	add_f s3, s3, s4
    3424:	63 00 21 c2 	mul_f s3, s3, s2
    3428:	80 80 c1 c1 	reciprocal s4, s3
    342c:	a4 80 21 c2 	mul_f s5, s4, s3
    3430:	a1 80 12 c2 	sub_f s5, s1, s5
    3434:	84 80 22 c2 	mul_f s4, s4, s5
    3438:	a4 80 21 c2 	mul_f s5, s4, s3
    343c:	a1 80 12 c2 	sub_f s5, s1, s5
    3440:	84 80 22 c2 	mul_f s4, s4, s5
    3444:	80 00 22 c2 	mul_f s4, s0, s4
    3448:	63 00 02 c2 	add_f s3, s3, s4
    344c:	63 00 21 c2 	mul_f s3, s3, s2
    3450:	80 80 c1 c1 	reciprocal s4, s3
    3454:	a4 80 21 c2 	mul_f s5, s4, s3
    3458:	a1 80 12 c2 	sub_f s5, s1, s5
    345c:	84 80 22 c2 	mul_f s4, s4, s5
    3460:	a4 80 21 c2 	mul_f s5, s4, s3
    3464:	a1 80 12 c2 	sub_f s5, s1, s5
    3468:	84 80 22 c2 	mul_f s4, s4, s5
    346c:	80 00 22 c2 	mul_f s4, s0, s4
    3470:	63 00 02 c2 	add_f s3, s3, s4
    3474:	63 00 21 c2 	mul_f s3, s3, s2
    3478:	80 80 c1 c1 	reciprocal s4, s3
    347c:	a4 80 21 c2 	mul_f s5, s4, s3
    3480:	a1 80 12 c2 	sub_f s5, s1, s5
    3484:	84 80 22 c2 	mul_f s4, s4, s5
    3488:	a4 80 21 c2 	mul_f s5, s4, s3
    348c:	a1 80 12 c2 	sub_f s5, s1, s5
    3490:	84 80 22 c2 	mul_f s4, s4, s5
    3494:	80 00 22 c2 	mul_f s4, s0, s4
    3498:	63 00 02 c2 	add_f s3, s3, s4
    349c:	63 00 21 c2 	mul_f s3, s3, s2
    34a0:	80 80 c1 c1 	reciprocal s4, s3
    34a4:	a4 80 21 c2 	mul_f s5, s4, s3
    34a8:	a1 80 12 c2 	sub_f s5, s1, s5
    34ac:	84 80 22 c2 	mul_f s4, s4, s5
    34b0:	a4 80 21 c2 	mul_f s5, s4, s3
    34b4:	a1 80 12 c2 	sub_f s5, s1, s5
    34b8:	84 80 22 c2 	mul_f s4, s4, s5
    34bc:	80 00 22 c2 	mul_f s4, s0, s4
    34c0:	63 00 02 c2 	add_f s3, s3, s4
    34c4:	63 00 21 c2 	mul_f s3, s3, s2
    34c8:	80 80 c1 c1 	reciprocal s4, s3
    34cc:	a4 80 21 c2 	mul_f s5, s4, s3
    34d0:	a1 80 12 c2 	sub_f s5, s1, s5
    34d4:	84 80 22 c2 	mul_f s4, s4, s5
    34d8:	a4 80 21 c2 	mul_f s5, s4, s3
    34dc:	a1 80 12 c2 	sub_f s5, s1, s5
    34e0:	84 80 22 c2 	mul_f s4, s4, s5
    34e4:	80 00 22 c2 	mul_f s4, s0, s4
    34e8:	63 00 02 c2 	add_f s3, s3, s4
    34ec:	63 00 21 c2 	mul_f s3, s3, s2
    34f0:	80 80 c1 c1 	reciprocal s4, s3
    34f4:	a4 80 21 c2 	mul_f s5, s4, s3
    34f8:	a1 80 12 c2 	sub_f s5, s1, s5
    34fc:	84 80 22 c2 	mul_f s4, s4, s5
    3500:	a4 80 21 c2 	mul_f s5, s4, s3
    3504:	a1 80 12 c2 	sub_f s5, s1, s5
    3508:	84 80 22 c2 	mul_f s4, s4, s5
    350c:	80 00 22 c2 	mul_f s4, s0, s4
    3510:	63 00 02 c2 	add_f s3, s3, s4
    3514:	63 00 21 c2 	mul_f s3, s3, s2
    3518:	80 80 c1 c1 	reciprocal s4, s3
    351c:	a4 80 21 c2 	mul_f s5, s4, s3
    3520:	a1 80 12 c2 	sub_f s5, s1, s5
    3524:	84 80 22 c2 	mul_f s4, s4, s5
    3528:	a4 80 21 c2 	mul_f s5, s4, s3
    352c:	21 80 12 c2 	sub_f s1, s1, s5
    3530:	24 80 20 c2 	mul_f s1, s4, s1
    3534:	00 80 20 c2 	mul_f s0, s0, s1
    3538:	03 00 00 c2 	add_f s0, s3, s0
    353c:	00 00 21 c2 	mul_f s0, s0, s2
    3540:	1f 00 00 f0 	ret

0000000000003544 floorf:
    3544:	00 00 b0 c1 	ftoi s0, s0
    3548:	00 00 a0 c2 	itof s0, s0
    354c:	1f 00 00 f0 	ret

0000000000003550 ceilf:
    3550:	de 03 ff 05 	add_i sp, sp, -64
    3554:	1e f3 00 88 	store_32 s24, 60(sp)
    3558:	fe e3 00 88 	store_32 ra, 56(sp)
    355c:	00 03 f0 c0 	move s24, s0
    3560:	f9 ff ff f9 	call -28 <floorf>
    3564:	20 00 00 4f 	movehi s1, 0
    3568:	40 00 ec c2 	cmplt_f s2, s0, s24
    356c:	21 30 05 00 	or s1, s1, 332
    3570:	21 00 00 a8 	load_32 s1, (s1)
    3574:	42 00 00 f4 	bnz s2, 8 <ceilf+0x2c>
    3578:	02 00 00 f6 	b 8 <ceilf+0x30>
    357c:	00 80 00 c2 	add_f s0, s0, s1
    3580:	fe e3 00 a8 	load_32 ra, 56(sp)
    3584:	1e f3 00 a8 	load_32 s24, 60(sp)
    3588:	de 03 01 05 	add_i sp, sp, 64
    358c:	1f 00 00 f0 	ret

0000000000003590 printf:
    3590:	de 03 ff 05 	add_i sp, sp, -64
    3594:	fe f3 00 88 	store_32 ra, 60(sp)
    3598:	06 00 00 4f 	movehi s0, 6
    359c:	3e 00 01 a8 	load_32 s1, 64(sp)
    35a0:	5e 10 01 05 	add_i s2, sp, 68
    35a4:	5e e0 00 88 	store_32 s2, 56(sp)
    35a8:	00 00 40 00 	or s0, s0, 4096
    35ac:	00 00 00 a8 	load_32 s0, (s0)
    35b0:	c9 14 00 f8 	call 21284 <vfprintf>
    35b4:	00 00 00 0f 	move s0, 0
    35b8:	fe f3 00 a8 	load_32 ra, 60(sp)
    35bc:	de 03 01 05 	add_i sp, sp, 64
    35c0:	1f 00 00 f0 	ret

00000000000035c4 sprintf:
    35c4:	de 03 ff 05 	add_i sp, sp, -64
    35c8:	1e f3 00 88 	store_32 s24, 60(sp)
    35cc:	3e e3 00 88 	store_32 s25, 56(sp)
    35d0:	5e d3 00 88 	store_32 s26, 52(sp)
    35d4:	fe c3 00 88 	store_32 ra, 48(sp)
    35d8:	1e 43 00 05 	add_i s24, sp, 16
    35dc:	3e 10 01 a8 	load_32 s1, 68(sp)
    35e0:	1e 00 01 a8 	load_32 s0, 64(sp)
    35e4:	40 03 00 0f 	move s26, 0
    35e8:	1e 40 00 88 	store_32 s0, 16(sp)
    35ec:	1f fc 7f 4f 	movehi s0, 262143
    35f0:	38 13 00 00 	or s25, s24, 4
    35f4:	5e 20 01 05 	add_i s2, sp, 72
    35f8:	00 fc 7f 00 	or s0, s0, 8191
    35fc:	59 03 00 88 	store_32 s26, (s25)
    3600:	1e 60 00 88 	store_32 s0, 24(sp)
    3604:	5e 73 00 88 	store_32 s26, 28(sp)
    3608:	5e 90 00 88 	store_32 s2, 36(sp)
    360c:	00 00 fc c0 	move s0, s24
    3610:	b1 14 00 f8 	call 21188 <vfprintf>
    3614:	06 00 00 4f 	movehi s0, 6
    3618:	5e b3 00 88 	store_32 s26, 44(sp)
    361c:	00 00 40 00 	or s0, s0, 4096
    3620:	00 00 00 a8 	load_32 s0, (s0)
    3624:	00 00 1c c1 	cmpne_i s0, s0, s24
    3628:	40 00 00 f4 	bnz s0, 8 <sprintf+0x6c>
    362c:	0c 00 00 f6 	b 48 <sprintf+0x98>
    3630:	1e 40 00 a8 	load_32 s0, 16(sp)
    3634:	e0 01 00 f2 	bz s0, 60 <sprintf+0xac>
    3638:	39 00 00 a8 	load_32 s1, (s25)
    363c:	5e 60 00 a8 	load_32 s2, 24(sp)
    3640:	41 00 31 c1 	cmpge_i s2, s1, s2
    3644:	e2 01 00 f4 	bnz s2, 60 <sprintf+0xbc>
    3648:	00 80 50 c0 	add_i s0, s0, s1
    364c:	21 04 00 05 	add_i s1, s1, 1
    3650:	39 00 00 88 	store_32 s1, (s25)
    3654:	40 03 00 82 	store_8 s26, (s0)
    3658:	0a 00 00 f6 	b 40 <sprintf+0xbc>
    365c:	1e ac 00 05 	add_i s0, sp, 43
    3660:	5e af 00 82 	store_8 s26, 43(sp)
    3664:	20 04 00 0f 	move s1, 1
    3668:	18 18 00 f8 	call 24672 <write_console>
    366c:	05 00 00 f6 	b 20 <sprintf+0xbc>
    3670:	1e 70 00 a8 	load_32 s0, 28(sp)
    3674:	3e b0 00 05 	add_i s1, sp, 44
    3678:	40 04 00 0f 	move s2, 1
    367c:	fb 19 00 f8 	call 26604 <write>
    3680:	19 00 00 a8 	load_32 s0, (s25)
    3684:	fe c3 00 a8 	load_32 ra, 48(sp)
    3688:	5e d3 00 a8 	load_32 s26, 52(sp)
    368c:	3e e3 00 a8 	load_32 s25, 56(sp)
    3690:	1e f3 00 a8 	load_32 s24, 60(sp)
    3694:	de 03 01 05 	add_i sp, sp, 64
    3698:	1f 00 00 f0 	ret

000000000000369c fputc:
    369c:	de 03 ff 05 	add_i sp, sp, -64
    36a0:	fe f3 00 88 	store_32 ra, 60(sp)
    36a4:	46 00 00 4f 	movehi s2, 6
    36a8:	1e e0 00 88 	store_32 s0, 56(sp)
    36ac:	42 00 40 00 	or s2, s2, 4096
    36b0:	42 00 00 a8 	load_32 s2, (s2)
    36b4:	42 80 10 c1 	cmpne_i s2, s2, s1
    36b8:	42 00 00 f4 	bnz s2, 8 <fputc+0x24>
    36bc:	0f 00 00 f6 	b 60 <fputc+0x5c>
    36c0:	41 00 00 a8 	load_32 s2, (s1)
    36c4:	a2 02 00 f2 	bz s2, 84 <fputc+0x7c>
    36c8:	61 10 00 a8 	load_32 s3, 4(s1)
    36cc:	81 20 00 a8 	load_32 s4, 8(s1)
    36d0:	83 00 32 c1 	cmpge_i s4, s3, s4
    36d4:	a4 00 00 f4 	bnz s4, 20 <fputc+0x4c>
    36d8:	42 80 51 c0 	add_i s2, s2, s3
    36dc:	63 04 00 05 	add_i s3, s3, 1
    36e0:	61 10 00 88 	store_32 s3, 4(s1)
    36e4:	02 00 00 82 	store_8 s0, (s2)
    36e8:	00 04 00 0f 	move s0, 1
    36ec:	fe f3 00 a8 	load_32 ra, 60(sp)
    36f0:	de 03 01 05 	add_i sp, sp, 64
    36f4:	1f 00 00 f0 	ret
    36f8:	1e dc 00 82 	store_8 s0, 55(sp)
    36fc:	1e dc 00 05 	add_i s0, sp, 55
    3700:	20 04 00 0f 	move s1, 1
    3704:	f1 17 00 f8 	call 24516 <write_console>
    3708:	00 04 00 0f 	move s0, 1
    370c:	fe f3 00 a8 	load_32 ra, 60(sp)
    3710:	de 03 01 05 	add_i sp, sp, 64
    3714:	1f 00 00 f0 	ret
    3718:	01 30 00 a8 	load_32 s0, 12(s1)
    371c:	3e e0 00 05 	add_i s1, sp, 56
    3720:	40 04 00 0f 	move s2, 1
    3724:	d1 19 00 f8 	call 26436 <write>
    3728:	00 04 00 0f 	move s0, 1
    372c:	fe f3 00 a8 	load_32 ra, 60(sp)
    3730:	de 03 01 05 	add_i sp, sp, 64
    3734:	1f 00 00 f0 	ret

0000000000003738 snprintf:
    3738:	de 03 ff 05 	add_i sp, sp, -64
    373c:	1e f3 00 88 	store_32 s24, 60(sp)
    3740:	3e e3 00 88 	store_32 s25, 56(sp)
    3744:	5e d3 00 88 	store_32 s26, 52(sp)
    3748:	fe c3 00 88 	store_32 ra, 48(sp)
    374c:	1e 43 00 05 	add_i s24, sp, 16
    3750:	3e 20 01 a8 	load_32 s1, 72(sp)
    3754:	1e 10 01 a8 	load_32 s0, 68(sp)
    3758:	40 03 00 0f 	move s26, 0
    375c:	5e 00 01 a8 	load_32 s2, 64(sp)
    3760:	38 13 00 00 	or s25, s24, 4
    3764:	5e 40 00 88 	store_32 s2, 16(sp)
    3768:	5e 30 01 05 	add_i s2, sp, 76
    376c:	59 03 00 88 	store_32 s26, (s25)
    3770:	1e 60 00 88 	store_32 s0, 24(sp)
    3774:	5e 73 00 88 	store_32 s26, 28(sp)
    3778:	5e 90 00 88 	store_32 s2, 36(sp)
    377c:	00 00 fc c0 	move s0, s24
    3780:	55 14 00 f8 	call 20820 <vfprintf>
    3784:	06 00 00 4f 	movehi s0, 6
    3788:	5e b3 00 88 	store_32 s26, 44(sp)
    378c:	00 00 40 00 	or s0, s0, 4096
    3790:	00 00 00 a8 	load_32 s0, (s0)
    3794:	00 00 1c c1 	cmpne_i s0, s0, s24
    3798:	40 00 00 f4 	bnz s0, 8 <snprintf+0x68>
    379c:	0c 00 00 f6 	b 48 <snprintf+0x94>
    37a0:	1e 40 00 a8 	load_32 s0, 16(sp)
    37a4:	e0 01 00 f2 	bz s0, 60 <snprintf+0xa8>
    37a8:	39 00 00 a8 	load_32 s1, (s25)
    37ac:	5e 60 00 a8 	load_32 s2, 24(sp)
    37b0:	41 00 31 c1 	cmpge_i s2, s1, s2
    37b4:	e2 01 00 f4 	bnz s2, 60 <snprintf+0xb8>
    37b8:	00 80 50 c0 	add_i s0, s0, s1
    37bc:	21 04 00 05 	add_i s1, s1, 1
    37c0:	39 00 00 88 	store_32 s1, (s25)
    37c4:	40 03 00 82 	store_8 s26, (s0)
    37c8:	0a 00 00 f6 	b 40 <snprintf+0xb8>
    37cc:	1e ac 00 05 	add_i s0, sp, 43
    37d0:	5e af 00 82 	store_8 s26, 43(sp)
    37d4:	20 04 00 0f 	move s1, 1
    37d8:	bc 17 00 f8 	call 24304 <write_console>
    37dc:	05 00 00 f6 	b 20 <snprintf+0xb8>
    37e0:	1e 70 00 a8 	load_32 s0, 28(sp)
    37e4:	3e b0 00 05 	add_i s1, sp, 44
    37e8:	40 04 00 0f 	move s2, 1
    37ec:	9f 19 00 f8 	call 26236 <write>
    37f0:	19 00 00 a8 	load_32 s0, (s25)
    37f4:	fe c3 00 a8 	load_32 ra, 48(sp)
    37f8:	5e d3 00 a8 	load_32 s26, 52(sp)
    37fc:	3e e3 00 a8 	load_32 s25, 56(sp)
    3800:	1e f3 00 a8 	load_32 s24, 60(sp)
    3804:	de 03 01 05 	add_i sp, sp, 64
    3808:	1f 00 00 f0 	ret

000000000000380c vsnprintf:
    380c:	de 03 ff 05 	add_i sp, sp, -64
    3810:	1e f3 00 88 	store_32 s24, 60(sp)
    3814:	3e e3 00 88 	store_32 s25, 56(sp)
    3818:	5e d3 00 88 	store_32 s26, 52(sp)
    381c:	fe c3 00 88 	store_32 ra, 48(sp)
    3820:	1e 63 00 05 	add_i s24, sp, 24
    3824:	1e 60 00 88 	store_32 s0, 24(sp)
    3828:	40 03 00 0f 	move s26, 0
    382c:	38 13 00 00 	or s25, s24, 4
    3830:	59 03 00 88 	store_32 s26, (s25)
    3834:	3e 80 00 88 	store_32 s1, 32(sp)
    3838:	5e 93 00 88 	store_32 s26, 36(sp)
    383c:	00 00 fc c0 	move s0, s24
    3840:	20 00 f1 c0 	move s1, s2
    3844:	40 80 f1 c0 	move s2, s3
    3848:	23 14 00 f8 	call 20620 <vfprintf>
    384c:	06 00 00 4f 	movehi s0, 6
    3850:	5e b3 00 88 	store_32 s26, 44(sp)
    3854:	00 00 40 00 	or s0, s0, 4096
    3858:	00 00 00 a8 	load_32 s0, (s0)
    385c:	00 00 1c c1 	cmpne_i s0, s0, s24
    3860:	40 00 00 f4 	bnz s0, 8 <vsnprintf+0x5c>
    3864:	0c 00 00 f6 	b 48 <vsnprintf+0x88>
    3868:	1e 60 00 a8 	load_32 s0, 24(sp)
    386c:	e0 01 00 f2 	bz s0, 60 <vsnprintf+0x9c>
    3870:	39 00 00 a8 	load_32 s1, (s25)
    3874:	5e 80 00 a8 	load_32 s2, 32(sp)
    3878:	41 00 31 c1 	cmpge_i s2, s1, s2
    387c:	e2 01 00 f4 	bnz s2, 60 <vsnprintf+0xac>
    3880:	00 80 50 c0 	add_i s0, s0, s1
    3884:	21 04 00 05 	add_i s1, s1, 1
    3888:	39 00 00 88 	store_32 s1, (s25)
    388c:	40 03 00 82 	store_8 s26, (s0)
    3890:	0a 00 00 f6 	b 40 <vsnprintf+0xac>
    3894:	1e ac 00 05 	add_i s0, sp, 43
    3898:	5e af 00 82 	store_8 s26, 43(sp)
    389c:	20 04 00 0f 	move s1, 1
    38a0:	8a 17 00 f8 	call 24104 <write_console>
    38a4:	05 00 00 f6 	b 20 <vsnprintf+0xac>
    38a8:	1e 90 00 a8 	load_32 s0, 36(sp)
    38ac:	3e b0 00 05 	add_i s1, sp, 44
    38b0:	40 04 00 0f 	move s2, 1
    38b4:	6d 19 00 f8 	call 26036 <write>
    38b8:	19 00 00 a8 	load_32 s0, (s25)
    38bc:	fe c3 00 a8 	load_32 ra, 48(sp)
    38c0:	5e d3 00 a8 	load_32 s26, 52(sp)
    38c4:	3e e3 00 a8 	load_32 s25, 56(sp)
    38c8:	1e f3 00 a8 	load_32 s24, 60(sp)
    38cc:	de 03 01 05 	add_i sp, sp, 64
    38d0:	1f 00 00 f0 	ret

00000000000038d4 putchar:
    38d4:	de 03 ff 05 	add_i sp, sp, -64
    38d8:	1e f3 00 88 	store_32 s24, 60(sp)
    38dc:	fe e3 00 88 	store_32 ra, 56(sp)
    38e0:	00 07 00 0f 	move s24, 1
    38e4:	1e dc 00 82 	store_8 s0, 55(sp)
    38e8:	1e dc 00 05 	add_i s0, sp, 55
    38ec:	20 00 fc c0 	move s1, s24
    38f0:	76 17 00 f8 	call 24024 <write_console>
    38f4:	00 00 fc c0 	move s0, s24
    38f8:	fe e3 00 a8 	load_32 ra, 56(sp)
    38fc:	1e f3 00 a8 	load_32 s24, 60(sp)
    3900:	de 03 01 05 	add_i sp, sp, 64
    3904:	1f 00 00 f0 	ret

0000000000003908 puts:
    3908:	de 03 ff 05 	add_i sp, sp, -64
    390c:	1e f3 00 88 	store_32 s24, 60(sp)
    3910:	3e e3 00 88 	store_32 s25, 56(sp)
    3914:	5e d3 00 88 	store_32 s26, 52(sp)
    3918:	7e c3 00 88 	store_32 s27, 48(sp)
    391c:	fe b3 00 88 	store_32 ra, 44(sp)
    3920:	00 03 f0 c0 	move s24, s0
    3924:	18 00 00 a0 	load_u8 s0, (s24)
    3928:	1e 93 00 88 	store_32 s24, 36(sp)
    392c:	80 01 00 f2 	bz s0, 48 <puts+0x54>
    3930:	7e 93 00 a8 	load_32 s27, 36(sp)
    3934:	3e ab 00 05 	add_i s25, sp, 42
    3938:	40 07 00 0f 	move s26, 1
    393c:	1e a8 00 82 	store_8 s0, 42(sp)
    3940:	00 80 fc c0 	move s0, s25
    3944:	20 00 fd c0 	move s1, s26
    3948:	60 17 00 f8 	call 23936 <write_console>
    394c:	1b 07 00 05 	add_i s24, s27, 1
    3950:	1b 04 00 a0 	load_u8 s0, 1(s27)
    3954:	60 03 fc c0 	move s27, s24
    3958:	20 ff ff f5 	bnz s0, -28 <puts+0x34>
    395c:	20 07 00 0f 	move s25, 1
    3960:	00 28 00 0f 	move s0, 10
    3964:	1e ac 00 82 	store_8 s0, 43(sp)
    3968:	1e ac 00 05 	add_i s0, sp, 43
    396c:	20 80 fc c0 	move s1, s25
    3970:	56 17 00 f8 	call 23896 <write_console>
    3974:	1e 90 00 a8 	load_32 s0, 36(sp)
    3978:	fe b3 00 a8 	load_32 ra, 44(sp)
    397c:	7e c3 00 a8 	load_32 s27, 48(sp)
    3980:	5e d3 00 a8 	load_32 s26, 52(sp)
    3984:	19 00 60 c0 	sub_i s0, s25, s0
    3988:	3e e3 00 a8 	load_32 s25, 56(sp)
    398c:	00 00 5c c0 	add_i s0, s0, s24
    3990:	1e f3 00 a8 	load_32 s24, 60(sp)
    3994:	de 03 01 05 	add_i sp, sp, 64
    3998:	1f 00 00 f0 	ret

000000000000399c fputs:
    399c:	de 03 ff 05 	add_i sp, sp, -64
    39a0:	1e f3 00 88 	store_32 s24, 60(sp)
    39a4:	3e e3 00 88 	store_32 s25, 56(sp)
    39a8:	5e d3 00 88 	store_32 s26, 52(sp)
    39ac:	7e c3 00 88 	store_32 s27, 48(sp)
    39b0:	fe b3 00 88 	store_32 ra, 44(sp)
    39b4:	80 00 00 a0 	load_u8 s4, (s0)
    39b8:	20 83 f0 c0 	move s25, s1
    39bc:	1e 60 00 88 	store_32 s0, 24(sp)
    39c0:	20 00 f0 c0 	move s1, s0
    39c4:	e4 05 00 f2 	bz s4, 188 <fputs+0xe4>
    39c8:	26 00 00 4f 	movehi s1, 6
    39cc:	1e 9c 00 05 	add_i s0, sp, 39
    39d0:	1e 80 00 88 	store_32 s0, 32(sp)
    39d4:	1e a0 00 05 	add_i s0, sp, 40
    39d8:	1e 70 00 88 	store_32 s0, 28(sp)
    39dc:	5e 63 00 a8 	load_32 s26, 24(sp)
    39e0:	01 03 40 00 	or s24, s1, 4096
    39e4:	60 07 00 0f 	move s27, 1
    39e8:	20 00 d2 c1 	sext_8 s1, s4
    39ec:	3e a0 00 88 	store_32 s1, 40(sp)
    39f0:	38 00 00 a8 	load_32 s1, (s24)
    39f4:	21 80 1c c1 	cmpne_i s1, s1, s25
    39f8:	41 00 00 f4 	bnz s1, 8 <fputs+0x64>
    39fc:	10 00 00 f6 	b 64 <fputs+0xa0>
    3a00:	39 00 00 a8 	load_32 s1, (s25)
    3a04:	e1 02 00 f2 	bz s1, 92 <fputs+0xc4>
    3a08:	59 10 00 a8 	load_32 s2, 4(s25)
    3a0c:	79 20 00 a8 	load_32 s3, 8(s25)
    3a10:	62 80 31 c1 	cmpge_i s3, s2, s3
    3a14:	a3 00 00 f4 	bnz s3, 20 <fputs+0x8c>
    3a18:	21 00 51 c0 	add_i s1, s1, s2
    3a1c:	42 04 00 05 	add_i s2, s2, 1
    3a20:	59 10 00 88 	store_32 s2, 4(s25)
    3a24:	81 00 00 82 	store_8 s4, (s1)
    3a28:	3a 04 00 05 	add_i s1, s26, 1
    3a2c:	9a 04 00 a0 	load_u8 s4, 1(s26)
    3a30:	40 83 f0 c0 	move s26, s1
    3a34:	a4 fd ff f5 	bnz s4, -76 <fputs+0x4c>
    3a38:	12 00 00 f6 	b 72 <fputs+0xe4>
    3a3c:	9e 9c 00 82 	store_8 s4, 39(sp)
    3a40:	1e 80 00 a8 	load_32 s0, 32(sp)
    3a44:	20 80 fd c0 	move s1, s27
    3a48:	20 17 00 f8 	call 23680 <write_console>
    3a4c:	3a 04 00 05 	add_i s1, s26, 1
    3a50:	9a 04 00 a0 	load_u8 s4, 1(s26)
    3a54:	40 83 f0 c0 	move s26, s1
    3a58:	84 fc ff f5 	bnz s4, -112 <fputs+0x4c>
    3a5c:	09 00 00 f6 	b 36 <fputs+0xe4>
    3a60:	19 30 00 a8 	load_32 s0, 12(s25)
    3a64:	3e 70 00 a8 	load_32 s1, 28(sp)
    3a68:	40 80 fd c0 	move s2, s27
    3a6c:	ff 18 00 f8 	call 25596 <write>
    3a70:	3a 04 00 05 	add_i s1, s26, 1
    3a74:	9a 04 00 a0 	load_u8 s4, 1(s26)
    3a78:	40 83 f0 c0 	move s26, s1
    3a7c:	64 fb ff f5 	bnz s4, -148 <fputs+0x4c>
    3a80:	1e 60 00 a8 	load_32 s0, 24(sp)
    3a84:	fe b3 00 a8 	load_32 ra, 44(sp)
    3a88:	7e c3 00 a8 	load_32 s27, 48(sp)
    3a8c:	5e d3 00 a8 	load_32 s26, 52(sp)
    3a90:	3e e3 00 a8 	load_32 s25, 56(sp)
    3a94:	01 00 60 c0 	sub_i s0, s1, s0
    3a98:	1e f3 00 a8 	load_32 s24, 60(sp)
    3a9c:	de 03 01 05 	add_i sp, sp, 64
    3aa0:	1f 00 00 f0 	ret

0000000000003aa4 fgetc:
    3aa4:	de 03 ff 05 	add_i sp, sp, -64
    3aa8:	fe f3 00 88 	store_32 ra, 60(sp)
    3aac:	00 30 00 a8 	load_32 s0, 12(s0)
    3ab0:	3e ec 00 05 	add_i s1, sp, 59
    3ab4:	40 04 00 0f 	move s2, 1
    3ab8:	6a 18 00 f8 	call 25000 <read>
    3abc:	20 00 00 14 	cmplt_i s1, s0, 0
    3ac0:	1e ec 00 a0 	load_u8 s0, 59(sp)
    3ac4:	41 00 00 f4 	bnz s1, 8 <fgetc+0x28>
    3ac8:	02 00 00 f6 	b 8 <fgetc+0x2c>
    3acc:	00 fc ff 0f 	move s0, -1
    3ad0:	fe f3 00 a8 	load_32 ra, 60(sp)
    3ad4:	de 03 01 05 	add_i sp, sp, 64
    3ad8:	1f 00 00 f0 	ret

0000000000003adc fopen:
    3adc:	de 03 ff 05 	add_i sp, sp, -64
    3ae0:	1e f3 00 88 	store_32 s24, 60(sp)
    3ae4:	3e e3 00 88 	store_32 s25, 56(sp)
    3ae8:	fe d3 00 88 	store_32 ra, 52(sp)
    3aec:	00 03 00 0f 	move s24, 0
    3af0:	20 00 fc c0 	move s1, s24
    3af4:	1e 17 00 f8 	call 23672 <open>
    3af8:	20 03 f0 c0 	move s25, s0
    3afc:	19 00 00 14 	cmplt_i s0, s25, 0
    3b00:	e0 00 00 f4 	bnz s0, 28 <fopen+0x40>
    3b04:	00 40 00 0f 	move s0, 16
    3b08:	98 00 00 f8 	call 608 <malloc>
    3b0c:	00 03 f0 c0 	move s24, s0
    3b10:	00 00 00 0f 	move s0, 0
    3b14:	18 00 00 88 	store_32 s0, (s24)
    3b18:	38 33 00 88 	store_32 s25, 12(s24)
    3b1c:	00 00 fc c0 	move s0, s24
    3b20:	fe d3 00 a8 	load_32 ra, 52(sp)
    3b24:	3e e3 00 a8 	load_32 s25, 56(sp)
    3b28:	1e f3 00 a8 	load_32 s24, 60(sp)
    3b2c:	de 03 01 05 	add_i sp, sp, 64
    3b30:	1f 00 00 f0 	ret

0000000000003b34 fwrite:
    3b34:	de 03 ff 05 	add_i sp, sp, -64
    3b38:	1e f3 00 88 	store_32 s24, 60(sp)
    3b3c:	3e e3 00 88 	store_32 s25, 56(sp)
    3b40:	5e d3 00 88 	store_32 s26, 52(sp)
    3b44:	7e c3 00 88 	store_32 s27, 48(sp)
    3b48:	fe b3 00 88 	store_32 ra, 44(sp)
    3b4c:	5e 50 00 88 	store_32 s2, 20(sp)
    3b50:	20 83 f1 c0 	move s25, s3
    3b54:	62 83 70 c0 	mull_i s27, s2, s1
    3b58:	40 03 f0 c0 	move s26, s0
    3b5c:	5b 05 00 f2 	bz s27, 168 <fwrite+0xd0>
    3b60:	06 00 00 4f 	movehi s0, 6
    3b64:	00 03 40 00 	or s24, s0, 4096
    3b68:	1e 9c 00 05 	add_i s0, sp, 39
    3b6c:	1e 70 00 88 	store_32 s0, 28(sp)
    3b70:	00 04 00 0f 	move s0, 1
    3b74:	1e 80 00 88 	store_32 s0, 32(sp)
    3b78:	1e a0 00 05 	add_i s0, sp, 40
    3b7c:	1e 60 00 88 	store_32 s0, 24(sp)
    3b80:	1a 00 00 a2 	load_s8 s0, (s26)
    3b84:	7b ff ff 05 	add_i s27, s27, -1
    3b88:	1e a0 00 88 	store_32 s0, 40(sp)
    3b8c:	38 00 00 a8 	load_32 s1, (s24)
    3b90:	21 80 1c c1 	cmpne_i s1, s1, s25
    3b94:	41 00 00 f4 	bnz s1, 8 <fwrite+0x68>
    3b98:	0e 00 00 f6 	b 56 <fwrite+0x9c>
    3b9c:	39 00 00 a8 	load_32 s1, (s25)
    3ba0:	61 02 00 f2 	bz s1, 76 <fwrite+0xb8>
    3ba4:	59 10 00 a8 	load_32 s2, 4(s25)
    3ba8:	79 20 00 a8 	load_32 s3, 8(s25)
    3bac:	62 80 31 c1 	cmpge_i s3, s2, s3
    3bb0:	a3 00 00 f4 	bnz s3, 20 <fwrite+0x90>
    3bb4:	21 00 51 c0 	add_i s1, s1, s2
    3bb8:	42 04 00 05 	add_i s2, s2, 1
    3bbc:	59 10 00 88 	store_32 s2, 4(s25)
    3bc0:	01 00 00 82 	store_8 s0, (s1)
    3bc4:	5a 07 00 05 	add_i s26, s26, 1
    3bc8:	db fd ff f5 	bnz s27, -72 <fwrite+0x4c>
    3bcc:	0e 00 00 f6 	b 56 <fwrite+0xd0>
    3bd0:	1e 9c 00 82 	store_8 s0, 39(sp)
    3bd4:	1e 70 00 a8 	load_32 s0, 28(sp)
    3bd8:	3e 80 00 a8 	load_32 s1, 32(sp)
    3bdc:	bb 16 00 f8 	call 23276 <write_console>
    3be0:	5a 07 00 05 	add_i s26, s26, 1
    3be4:	fb fc ff f5 	bnz s27, -100 <fwrite+0x4c>
    3be8:	07 00 00 f6 	b 28 <fwrite+0xd0>
    3bec:	19 30 00 a8 	load_32 s0, 12(s25)
    3bf0:	3e 60 00 a8 	load_32 s1, 24(sp)
    3bf4:	5e 80 00 a8 	load_32 s2, 32(sp)
    3bf8:	9c 18 00 f8 	call 25200 <write>
    3bfc:	5a 07 00 05 	add_i s26, s26, 1
    3c00:	1b fc ff f5 	bnz s27, -128 <fwrite+0x4c>
    3c04:	1e 50 00 a8 	load_32 s0, 20(sp)
    3c08:	fe b3 00 a8 	load_32 ra, 44(sp)
    3c0c:	7e c3 00 a8 	load_32 s27, 48(sp)
    3c10:	5e d3 00 a8 	load_32 s26, 52(sp)
    3c14:	3e e3 00 a8 	load_32 s25, 56(sp)
    3c18:	1e f3 00 a8 	load_32 s24, 60(sp)
    3c1c:	de 03 01 05 	add_i sp, sp, 64
    3c20:	1f 00 00 f0 	ret

0000000000003c24 fread:
    3c24:	de 03 ff 05 	add_i sp, sp, -64
    3c28:	1e f3 00 88 	store_32 s24, 60(sp)
    3c2c:	fe e3 00 88 	store_32 ra, 56(sp)
    3c30:	00 83 f0 c0 	move s24, s1
    3c34:	20 00 f0 c0 	move s1, s0
    3c38:	03 30 00 a8 	load_32 s0, 12(s3)
    3c3c:	42 00 7c c0 	mull_i s2, s2, s24
    3c40:	08 18 00 f8 	call 24608 <read>
    3c44:	20 00 00 14 	cmplt_i s1, s0, 0
    3c48:	e1 00 00 f4 	bnz s1, 28 <fread+0x40>
    3c4c:	20 00 fc c0 	move s1, s24
    3c50:	48 1f 00 f8 	call 32032 <__udivsi3>
    3c54:	fe e3 00 a8 	load_32 ra, 56(sp)
    3c58:	1e f3 00 a8 	load_32 s24, 60(sp)
    3c5c:	de 03 01 05 	add_i sp, sp, 64
    3c60:	1f 00 00 f0 	ret
    3c64:	00 00 00 0f 	move s0, 0
    3c68:	fe e3 00 a8 	load_32 ra, 56(sp)
    3c6c:	1e f3 00 a8 	load_32 s24, 60(sp)
    3c70:	de 03 01 05 	add_i sp, sp, 64
    3c74:	1f 00 00 f0 	ret

0000000000003c78 fclose:
    3c78:	de 03 ff 05 	add_i sp, sp, -64
    3c7c:	1e f3 00 88 	store_32 s24, 60(sp)
    3c80:	3e e3 00 88 	store_32 s25, 56(sp)
    3c84:	fe d3 00 88 	store_32 ra, 52(sp)
    3c88:	00 03 f0 c0 	move s24, s0
    3c8c:	18 30 00 a8 	load_32 s0, 12(s24)
    3c90:	e0 17 00 f8 	call 24448 <close>
    3c94:	20 03 f0 c0 	move s25, s0
    3c98:	00 00 fc c0 	move s0, s24
    3c9c:	bd 07 00 f8 	call 7924 <free>
    3ca0:	00 80 fc c0 	move s0, s25
    3ca4:	fe d3 00 a8 	load_32 ra, 52(sp)
    3ca8:	3e e3 00 a8 	load_32 s25, 56(sp)
    3cac:	1e f3 00 a8 	load_32 s24, 60(sp)
    3cb0:	de 03 01 05 	add_i sp, sp, 64
    3cb4:	1f 00 00 f0 	ret

0000000000003cb8 fseek:
    3cb8:	de 03 ff 05 	add_i sp, sp, -64
    3cbc:	fe f3 00 88 	store_32 ra, 60(sp)
    3cc0:	00 30 00 a8 	load_32 s0, 12(s0)
    3cc4:	73 18 00 f8 	call 25036 <lseek>
    3cc8:	fe f3 00 a8 	load_32 ra, 60(sp)
    3ccc:	de 03 01 05 	add_i sp, sp, 64
    3cd0:	1f 00 00 f0 	ret

0000000000003cd4 ftell:
    3cd4:	de 03 ff 05 	add_i sp, sp, -64
    3cd8:	fe f3 00 88 	store_32 ra, 60(sp)
    3cdc:	00 30 00 a8 	load_32 s0, 12(s0)
    3ce0:	20 00 00 0f 	move s1, 0
    3ce4:	40 04 00 0f 	move s2, 1
    3ce8:	6a 18 00 f8 	call 25000 <lseek>
    3cec:	fe f3 00 a8 	load_32 ra, 60(sp)
    3cf0:	de 03 01 05 	add_i sp, sp, 64
    3cf4:	1f 00 00 f0 	ret

0000000000003cf8 fprintf:
    3cf8:	de 03 ff 05 	add_i sp, sp, -64
    3cfc:	fe f3 00 88 	store_32 ra, 60(sp)
    3d00:	1e 00 01 a8 	load_32 s0, 64(sp)
    3d04:	5e 20 01 05 	add_i s2, sp, 72
    3d08:	3e 10 01 a8 	load_32 s1, 68(sp)
    3d0c:	5e e0 00 88 	store_32 s2, 56(sp)
    3d10:	f1 12 00 f8 	call 19396 <vfprintf>
    3d14:	00 00 00 0f 	move s0, 0
    3d18:	fe f3 00 a8 	load_32 ra, 60(sp)
    3d1c:	de 03 01 05 	add_i sp, sp, 64
    3d20:	1f 00 00 f0 	ret

0000000000003d24 fflush:
    3d24:	00 00 00 0f 	move s0, 0
    3d28:	1f 00 00 f0 	ret

0000000000003d2c ferror:
    3d2c:	00 00 00 0f 	move s0, 0
    3d30:	1f 00 00 f0 	ret

0000000000003d34 ungetc:
    3d34:	de 03 ff 05 	add_i sp, sp, -64
    3d38:	1e f3 00 88 	store_32 s24, 60(sp)
    3d3c:	fe e3 00 88 	store_32 ra, 56(sp)
    3d40:	00 03 f0 c0 	move s24, s0
    3d44:	01 30 00 a8 	load_32 s0, 12(s1)
    3d48:	20 fc ff 0f 	move s1, -1
    3d4c:	40 04 00 0f 	move s2, 1
    3d50:	50 18 00 f8 	call 24896 <lseek>
    3d54:	00 00 fc c0 	move s0, s24
    3d58:	fe e3 00 a8 	load_32 ra, 56(sp)
    3d5c:	1e f3 00 a8 	load_32 s24, 60(sp)
    3d60:	de 03 01 05 	add_i sp, sp, 64
    3d64:	1f 00 00 f0 	ret

0000000000003d68 malloc:
    3d68:	de 03 ff 05 	add_i sp, sp, -64
    3d6c:	1e f3 00 88 	store_32 s24, 60(sp)
    3d70:	3e e3 00 88 	store_32 s25, 56(sp)
    3d74:	5e d3 00 88 	store_32 s26, 52(sp)
    3d78:	7e c3 00 88 	store_32 s27, 48(sp)
    3d7c:	fe b3 00 88 	store_32 ra, 44(sp)
    3d80:	26 00 00 4f 	movehi s1, 6
    3d84:	21 13 65 00 	or s25, s1, 6468
    3d88:	39 00 00 a8 	load_32 s1, (s25)
    3d8c:	61 05 00 f4 	bnz s1, 172 <malloc+0xd0>
    3d90:	26 00 00 4f 	movehi s1, 6
    3d94:	40 04 00 0f 	move s2, 1
    3d98:	21 e0 6c 00 	or s1, s1, 6968
    3d9c:	61 00 00 aa 	load_sync s3, (s1)
    3da0:	80 00 f1 c0 	move s4, s2
    3da4:	81 00 00 8a 	store_sync s4, (s1)  
    3da8:	a4 ff ff f3 	bz s4, -12 <malloc+0x34>
    3dac:	03 01 00 f2 	bz s3, 32 <malloc+0x64>
    3db0:	61 00 00 a8 	load_32 s3, (s1)
    3db4:	e3 ff ff f5 	bnz s3, -4 <malloc+0x48>
    3db8:	61 00 00 aa 	load_sync s3, (s1)
    3dbc:	80 00 f1 c0 	move s4, s2
    3dc0:	81 00 00 8a 	store_sync s4, (s1)  
    3dc4:	a4 ff ff f3 	bz s4, -12 <malloc+0x50>
    3dc8:	43 ff ff f5 	bnz s3, -24 <malloc+0x48>
    3dcc:	59 00 00 a8 	load_32 s2, (s25)
    3dd0:	a2 02 00 f4 	bnz s2, 84 <malloc+0xbc>
    3dd4:	40 00 40 0f 	move s2, 4096
    3dd8:	59 20 00 88 	store_32 s2, 8(s25)
    3ddc:	59 10 00 88 	store_32 s2, 4(s25)
    3de0:	40 fc ff 0f 	move s2, -1
    3de4:	59 30 00 88 	store_32 s2, 12(s25)
    3de8:	46 00 00 4f 	movehi s2, 6
    3dec:	60 20 00 4f 	movehi s3, 256
    3df0:	79 40 00 88 	store_32 s3, 16(s25)
    3df4:	60 08 00 0f 	move s3, 2
    3df8:	79 50 00 88 	store_32 s3, 20(s25)
    3dfc:	42 70 65 00 	or s2, s2, 6492
    3e00:	aa 54 55 4f 	movehi s5, 174762
    3e04:	80 00 00 0f 	move s4, 0
    3e08:	62 f0 06 88 	store_32 s3, 444(s2)
    3e0c:	7e 90 00 05 	add_i s3, sp, 36
    3e10:	82 00 07 88 	store_32 s4, 448(s2)
    3e14:	45 60 55 00 	or s2, s5, 5464
    3e18:	63 c0 ff 01 	and s3, s3, -16
    3e1c:	43 00 31 c0 	xor s2, s3, s2
    3e20:	59 00 00 88 	store_32 s2, (s25)
    3e24:	40 00 00 0f 	move s2, 0
    3e28:	61 00 00 aa 	load_sync s3, (s1)
    3e2c:	60 00 f1 c0 	move s3, s2
    3e30:	61 00 00 8a 	store_sync s3, (s1)  
    3e34:	a3 ff ff f3 	bz s3, -12 <malloc+0xc0>
    3e38:	26 00 00 4f 	movehi s1, 6
    3e3c:	01 73 65 00 	or s24, s1, 6492
    3e40:	38 f0 06 a0 	load_u8 s1, 444(s24)
    3e44:	21 08 00 01 	and s1, s1, 2
    3e48:	e1 01 00 f2 	bz s1, 60 <malloc+0x11c>
    3e4c:	38 00 07 05 	add_i s1, s24, 448
    3e50:	40 04 00 0f 	move s2, 1
    3e54:	61 00 00 aa 	load_sync s3, (s1)
    3e58:	80 00 f1 c0 	move s4, s2
    3e5c:	81 00 00 8a 	store_sync s4, (s1)  
    3e60:	a4 ff ff f3 	bz s4, -12 <malloc+0xec>
    3e64:	03 01 00 f2 	bz s3, 32 <malloc+0x11c>
    3e68:	78 00 07 a8 	load_32 s3, 448(s24)
    3e6c:	e3 ff ff f5 	bnz s3, -4 <malloc+0x100>
    3e70:	61 00 00 aa 	load_sync s3, (s1)
    3e74:	80 00 f1 c0 	move s4, s2
    3e78:	81 00 00 8a 	store_sync s4, (s1)  
    3e7c:	a4 ff ff f3 	bz s4, -12 <malloc+0x108>
    3e80:	43 ff ff f5 	bnz s3, -24 <malloc+0x100>
    3e84:	20 d0 03 16 	cmpgt_u s1, s0, 244
    3e88:	c1 00 00 f4 	bnz s1, 24 <malloc+0x138>
    3e8c:	20 2c 00 18 	cmplt_u s1, s0, 11
    3e90:	21 01 00 f4 	bnz s1, 36 <malloc+0x14c>
    3e94:	00 2c 00 05 	add_i s0, s0, 11
    3e98:	40 e3 ff 01 	and s26, s0, -8
    3e9c:	07 00 00 f6 	b 28 <malloc+0x150>
    3ea0:	20 fc fe 16 	cmpgt_u s1, s0, -65
    3ea4:	41 00 00 f4 	bnz s1, 8 <malloc+0x144>
    3ea8:	1d 00 00 f6 	b 116 <malloc+0x1b4>
    3eac:	40 ff ff 0f 	move s26, -1
    3eb0:	6e 01 00 f6 	b 1464 <malloc+0x700>
    3eb4:	40 43 00 0f 	move s26, 16
    3eb8:	18 00 00 a8 	load_32 s0, (s24)
    3ebc:	5a 0c 00 0a 	shr s2, s26, 3
    3ec0:	60 00 a1 c0 	shr s3, s0, s2
    3ec4:	23 0c 00 01 	and s1, s3, 3
    3ec8:	81 04 00 f2 	bz s1, 144 <malloc+0x1f0>
    3ecc:	23 fc ff 03 	xor s1, s3, -1
    3ed0:	21 04 00 01 	and s1, s1, 1
    3ed4:	a1 00 51 c0 	add_i s5, s1, s2
    3ed8:	25 0c 00 0b 	shl s1, s5, 3
    3edc:	98 80 50 c0 	add_i s4, s24, s1
    3ee0:	44 c0 00 a8 	load_32 s2, 48(s4)
    3ee4:	84 a0 00 05 	add_i s4, s4, 40
    3ee8:	62 20 00 a8 	load_32 s3, 8(s2)
    3eec:	c3 00 12 c1 	cmpne_i s6, s3, s4
    3ef0:	46 00 00 f4 	bnz s6, 8 <malloc+0x190>
    3ef4:	4c 00 00 f6 	b 304 <malloc+0x2bc>
    3ef8:	18 40 00 a8 	load_32 s0, 16(s24)
    3efc:	00 80 61 c1 	cmpgt_u s0, s0, s3
    3f00:	60 e4 00 f4 	bnz s0, 7308 <malloc+0x1e24>
    3f04:	03 30 00 a8 	load_32 s0, 12(s3)
    3f08:	00 00 11 c1 	cmpne_i s0, s0, s2
    3f0c:	00 e4 00 f4 	bnz s0, 7296 <malloc+0x1e24>
    3f10:	83 30 00 88 	store_32 s4, 12(s3)
    3f14:	64 20 00 88 	store_32 s3, 8(s4)
    3f18:	48 00 00 f6 	b 288 <malloc+0x2d0>
    3f1c:	00 2c 00 05 	add_i s0, s0, 11
    3f20:	38 10 00 a8 	load_32 s1, 4(s24)
    3f24:	40 e3 ff 01 	and s26, s0, -8
    3f28:	01 2a 00 f2 	bz s1, 1344 <malloc+0x700>
    3f2c:	60 00 00 0f 	move s3, 0
    3f30:	00 20 00 0a 	shr s0, s0, 8
    3f34:	a0 80 f1 c0 	move s5, s3
    3f38:	e0 0c 00 f2 	bz s0, 412 <malloc+0x36c>
    3f3c:	5f fc 00 4f 	movehi s2, 2047
    3f40:	42 fc 7f 00 	or s2, s2, 8191
    3f44:	5a 00 61 c1 	cmpgt_u s2, s26, s2
    3f48:	42 00 00 f4 	bnz s2, 8 <malloc+0x1e8>
    3f4c:	46 00 00 f6 	b 280 <malloc+0x2fc>
    3f50:	a0 7c 00 0f 	move s5, 31
    3f54:	60 00 00 f6 	b 384 <malloc+0x36c>
    3f58:	38 20 00 a8 	load_32 s1, 8(s24)
    3f5c:	9a 80 90 c1 	cmple_u s4, s26, s1
    3f60:	44 28 00 f4 	bnz s4, 1288 <malloc+0x700>
    3f64:	03 17 00 f2 	bz s3, 736 <malloc+0x4dc>
    3f68:	80 08 00 0f 	move s4, 2
    3f6c:	a0 00 00 0f 	move s5, 0
    3f70:	84 00 b1 c0 	shl s4, s4, s2
    3f74:	43 00 b1 c0 	shl s2, s3, s2
    3f78:	65 00 62 c0 	sub_i s3, s5, s4
    3f7c:	64 80 01 c0 	or s3, s4, s3
    3f80:	42 80 11 c0 	and s2, s2, s3
    3f84:	65 00 61 c0 	sub_i s3, s5, s2
    3f88:	42 80 11 c0 	and s2, s2, s3
    3f8c:	42 fc ff 05 	add_i s2, s2, -1
    3f90:	62 30 00 0a 	shr s3, s2, 12
    3f94:	63 40 00 01 	and s3, s3, 16
    3f98:	42 80 a1 c0 	shr s2, s2, s3
    3f9c:	82 14 00 0a 	shr s4, s2, 5
    3fa0:	84 20 00 01 	and s4, s4, 8
    3fa4:	42 00 a2 c0 	shr s2, s2, s4
    3fa8:	64 80 01 c0 	or s3, s4, s3
    3fac:	a2 08 00 0a 	shr s5, s2, 2
    3fb0:	a5 10 00 01 	and s5, s5, 4
    3fb4:	42 80 a2 c0 	shr s2, s2, s5
    3fb8:	63 80 02 c0 	or s3, s3, s5
    3fbc:	c2 04 00 0a 	shr s6, s2, 1
    3fc0:	86 08 00 01 	and s4, s6, 2
    3fc4:	42 00 a2 c0 	shr s2, s2, s4
    3fc8:	63 00 02 c0 	or s3, s3, s4
    3fcc:	a2 04 00 0a 	shr s5, s2, 1
    3fd0:	85 04 00 01 	and s4, s5, 1
    3fd4:	63 00 02 c0 	or s3, s3, s4
    3fd8:	42 00 a2 c0 	shr s2, s2, s4
    3fdc:	c3 00 51 c0 	add_i s6, s3, s2
    3fe0:	a6 0c 00 0b 	shl s5, s6, 3
    3fe4:	98 80 52 c0 	add_i s4, s24, s5
    3fe8:	44 c0 00 a8 	load_32 s2, 48(s4)
    3fec:	84 a0 00 05 	add_i s4, s4, 40
    3ff0:	62 20 00 a8 	load_32 s3, 8(s2)
    3ff4:	e3 00 12 c1 	cmpne_i s7, s3, s4
    3ff8:	47 00 00 f4 	bnz s7, 8 <malloc+0x298>
    3ffc:	a2 01 00 f6 	b 1672 <malloc+0x91c>
    4000:	d8 40 00 a8 	load_32 s6, 16(s24)
    4004:	c6 80 61 c1 	cmpgt_u s6, s6, s3
    4008:	26 dc 00 f4 	bnz s6, 7044 <malloc+0x1e24>
    400c:	c3 30 00 a8 	load_32 s6, 12(s3)
    4010:	c6 00 11 c1 	cmpne_i s6, s6, s2
    4014:	c6 db 00 f4 	bnz s6, 7032 <malloc+0x1e24>
    4018:	83 30 00 88 	store_32 s4, 12(s3)
    401c:	64 20 00 88 	store_32 s3, 8(s4)
    4020:	9e 01 00 f6 	b 1656 <malloc+0x930>
    4024:	60 04 00 0f 	move s3, 1
    4028:	63 80 b2 c0 	shl s3, s3, s5
    402c:	63 fc ff 03 	xor s3, s3, -1
    4030:	00 80 11 c0 	and s0, s0, s3
    4034:	18 00 00 88 	store_32 s0, (s24)
    4038:	02 80 50 c0 	add_i s0, s2, s1
    403c:	21 0c 00 00 	or s1, s1, 3
    4040:	22 10 00 88 	store_32 s1, 4(s2)
    4044:	62 23 00 05 	add_i s27, s2, 8
    4048:	20 10 00 a8 	load_32 s1, 4(s0)
    404c:	21 04 00 00 	or s1, s1, 1
    4050:	20 10 00 88 	store_32 s1, 4(s0)
    4054:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4058:	00 08 00 01 	and s0, s0, 2
    405c:	e0 37 00 f2 	bz s0, 1788 <malloc+0x9f0>
    4060:	b8 01 00 f6 	b 1760 <malloc+0x9d8>
    4064:	5f 0c 00 4f 	movehi s2, 127
    4068:	9f 04 00 4f 	movehi s4, 63
    406c:	be 00 00 4f 	movehi s5, 30
    4070:	42 00 7c 00 	or s2, s2, 7936
    4074:	40 00 51 c0 	add_i s2, s0, s2
    4078:	84 00 40 00 	or s4, s4, 4096
    407c:	42 40 00 0a 	shr s2, s2, 16
    4080:	42 20 00 01 	and s2, s2, 8
    4084:	00 00 b1 c0 	shl s0, s0, s2
    4088:	80 00 52 c0 	add_i s4, s0, s4
    408c:	84 40 00 0a 	shr s4, s4, 16
    4090:	84 10 00 01 	and s4, s4, 4
    4094:	00 00 b2 c0 	shl s0, s0, s4
    4098:	44 00 01 c0 	or s2, s4, s2
    409c:	a0 80 52 c0 	add_i s5, s0, s5
    40a0:	a5 40 00 0a 	shr s5, s5, 16
    40a4:	85 08 00 01 	and s4, s5, 2
    40a8:	a0 38 00 0f 	move s5, 14
    40ac:	42 00 02 c0 	or s2, s2, s4
    40b0:	00 00 b2 c0 	shl s0, s0, s4
    40b4:	45 00 61 c0 	sub_i s2, s5, s2
    40b8:	00 3c 00 0a 	shr s0, s0, 15
    40bc:	02 00 50 c0 	add_i s0, s2, s0
    40c0:	40 1c 00 05 	add_i s2, s0, 7
    40c4:	5a 00 a1 c0 	shr s2, s26, s2
    40c8:	00 04 00 0b 	shl s0, s0, 1
    40cc:	42 04 00 01 	and s2, s2, 1
    40d0:	a2 00 00 c0 	or s5, s2, s0
    40d4:	05 08 00 0b 	shl s0, s5, 2
    40d8:	18 00 50 c0 	add_i s0, s24, s0
    40dc:	43 00 6d c0 	sub_i s2, s3, s26
    40e0:	80 c0 04 a8 	load_32 s4, 304(s0)
    40e4:	24 0a 00 f2 	bz s4, 324 <malloc+0x4c0>
    40e8:	c0 00 00 0f 	move s6, 0
    40ec:	65 7c 00 10 	cmpeq_i s3, s5, 31
    40f0:	00 00 f3 c0 	move s0, s6
    40f4:	83 00 00 f4 	bnz s3, 16 <malloc+0x39c>
    40f8:	00 64 00 0f 	move s0, 25
    40fc:	65 04 00 0a 	shr s3, s5, 1
    4100:	00 80 61 c0 	sub_i s0, s0, s3
    4104:	fa 00 b0 c0 	shl s7, s26, s0
    4108:	60 00 f3 c0 	move s3, s6
    410c:	00 00 f3 c0 	move s0, s6
    4110:	04 11 00 a8 	load_32 s8, 4(s4)
    4114:	08 e1 ff 01 	and s8, s8, -8
    4118:	08 01 6d c0 	sub_i s8, s8, s26
    411c:	28 01 71 c1 	cmpge_u s9, s8, s2
    4120:	89 00 00 f4 	bnz s9, 16 <malloc+0x3c8>
    4124:	40 00 f4 c0 	move s2, s8
    4128:	00 00 f2 c0 	move s0, s4
    412c:	88 12 00 f2 	bz s8, 592 <malloc+0x614>
    4130:	07 75 00 0a 	shr s8, s7, 29
    4134:	08 11 00 01 	and s8, s8, 4
    4138:	24 01 54 c0 	add_i s9, s4, s8
    413c:	04 51 00 a8 	load_32 s8, 20(s4)
    4140:	89 40 00 a8 	load_32 s4, 16(s9)
    4144:	20 81 f1 c0 	move s9, s3
    4148:	48 01 02 c1 	cmpeq_i s10, s8, s4
    414c:	4a 01 00 f4 	bnz s10, 40 <malloc+0x40c>
    4150:	20 01 f4 c0 	move s9, s8
    4154:	08 01 00 10 	cmpeq_i s8, s8, 0
    4158:	48 00 00 f4 	bnz s8, 8 <malloc+0x3f8>
    415c:	08 00 00 f6 	b 32 <malloc+0x414>
    4160:	04 01 00 11 	cmpne_i s8, s4, 0
    4164:	08 05 00 01 	and s8, s8, 1
    4168:	e7 00 b4 c0 	shl s7, s7, s8
    416c:	24 fd ff f5 	bnz s4, -92 <malloc+0x3a8>
    4170:	08 00 00 f6 	b 32 <malloc+0x428>
    4174:	08 01 00 10 	cmpeq_i s8, s8, 0
    4178:	48 ff ff f5 	bnz s8, -24 <malloc+0x3f8>
    417c:	60 80 f4 c0 	move s3, s9
    4180:	04 01 00 11 	cmpne_i s8, s4, 0
    4184:	08 05 00 01 	and s8, s8, 1
    4188:	e7 00 b4 c0 	shl s7, s7, s8
    418c:	24 fc ff f5 	bnz s4, -124 <malloc+0x3a8>
    4190:	83 00 00 c0 	or s4, s3, s0
    4194:	24 05 00 f4 	bnz s4, 164 <malloc+0x4d0>
    4198:	80 08 00 0f 	move s4, 2
    419c:	60 00 00 0f 	move s3, 0
    41a0:	84 80 b2 c0 	shl s4, s4, s5
    41a4:	a3 00 62 c0 	sub_i s5, s3, s4
    41a8:	84 80 02 c0 	or s4, s4, s5
    41ac:	84 80 10 c0 	and s4, s4, s1
    41b0:	c4 15 00 f2 	bz s4, 696 <malloc+0x700>
    41b4:	63 00 62 c0 	sub_i s3, s3, s4
    41b8:	64 80 11 c0 	and s3, s4, s3
    41bc:	63 fc ff 05 	add_i s3, s3, -1
    41c0:	83 30 00 0a 	shr s4, s3, 12
    41c4:	84 40 00 01 	and s4, s4, 16
    41c8:	63 00 a2 c0 	shr s3, s3, s4
    41cc:	a3 14 00 0a 	shr s5, s3, 5
    41d0:	a5 20 00 01 	and s5, s5, 8
    41d4:	63 80 a2 c0 	shr s3, s3, s5
    41d8:	85 00 02 c0 	or s4, s5, s4
    41dc:	c3 08 00 0a 	shr s6, s3, 2
    41e0:	c6 10 00 01 	and s6, s6, 4
    41e4:	63 00 a3 c0 	shr s3, s3, s6
    41e8:	84 00 03 c0 	or s4, s4, s6
    41ec:	e3 04 00 0a 	shr s7, s3, 1
    41f0:	a7 08 00 01 	and s5, s7, 2
    41f4:	63 80 a2 c0 	shr s3, s3, s5
    41f8:	84 80 02 c0 	or s4, s4, s5
    41fc:	c3 04 00 0a 	shr s6, s3, 1
    4200:	a6 04 00 01 	and s5, s6, 1
    4204:	84 80 02 c0 	or s4, s4, s5
    4208:	63 80 a2 c0 	shr s3, s3, s5
    420c:	64 80 51 c0 	add_i s3, s4, s3
    4210:	63 08 00 0b 	shl s3, s3, 2
    4214:	78 80 51 c0 	add_i s3, s24, s3
    4218:	63 c0 04 a8 	load_32 s3, 304(s3)
    421c:	80 80 f1 c0 	move s4, s3
    4220:	c3 0e 00 f2 	bz s3, 472 <malloc+0x690>
    4224:	58 00 00 f6 	b 352 <malloc+0x61c>
    4228:	00 80 f1 c0 	move s0, s3
    422c:	83 00 00 c0 	or s4, s3, s0
    4230:	44 00 00 f4 	bnz s4, 8 <malloc+0x4d0>
    4234:	d9 ff ff f7 	b -156 <malloc+0x430>
    4238:	80 80 f1 c0 	move s4, s3
    423c:	e3 0d 00 f2 	bz s3, 444 <malloc+0x690>
    4240:	51 00 00 f6 	b 324 <malloc+0x61c>
    4244:	b8 10 00 a8 	load_32 s5, 4(s24)
    4248:	05 11 00 f2 	bz s5, 544 <malloc+0x700>
    424c:	c0 00 00 0f 	move s6, 0
    4250:	46 80 62 c0 	sub_i s2, s6, s5
    4254:	45 00 11 c0 	and s2, s5, s2
    4258:	42 fc ff 05 	add_i s2, s2, -1
    425c:	62 30 00 0a 	shr s3, s2, 12
    4260:	63 40 00 01 	and s3, s3, 16
    4264:	42 80 a1 c0 	shr s2, s2, s3
    4268:	82 14 00 0a 	shr s4, s2, 5
    426c:	84 20 00 01 	and s4, s4, 8
    4270:	42 00 a2 c0 	shr s2, s2, s4
    4274:	64 80 01 c0 	or s3, s4, s3
    4278:	e2 08 00 0a 	shr s7, s2, 2
    427c:	e7 10 00 01 	and s7, s7, 4
    4280:	42 80 a3 c0 	shr s2, s2, s7
    4284:	63 80 03 c0 	or s3, s3, s7
    4288:	02 05 00 0a 	shr s8, s2, 1
    428c:	88 08 00 01 	and s4, s8, 2
    4290:	42 00 a2 c0 	shr s2, s2, s4
    4294:	63 00 02 c0 	or s3, s3, s4
    4298:	e2 04 00 0a 	shr s7, s2, 1
    429c:	87 04 00 01 	and s4, s7, 1
    42a0:	63 00 02 c0 	or s3, s3, s4
    42a4:	42 00 a2 c0 	shr s2, s2, s4
    42a8:	43 00 51 c0 	add_i s2, s3, s2
    42ac:	42 08 00 0b 	shl s2, s2, 2
    42b0:	58 00 51 c0 	add_i s2, s24, s2
    42b4:	42 c0 04 a8 	load_32 s2, 304(s2)
    42b8:	62 10 00 a8 	load_32 s3, 4(s2)
    42bc:	e0 00 f1 c0 	move s7, s2
    42c0:	63 e0 ff 01 	and s3, s3, -8
    42c4:	63 00 6d c0 	sub_i s3, s3, s26
    42c8:	87 40 00 a8 	load_32 s4, 16(s7)
    42cc:	04 01 00 f4 	bnz s4, 32 <malloc+0x584>
    42d0:	11 00 00 f6 	b 68 <malloc+0x5ac>
    42d4:	60 80 f3 c0 	move s3, s7
    42d8:	40 80 f4 c0 	move s2, s9
    42dc:	e0 00 f2 c0 	move s7, s4
    42e0:	87 40 00 a8 	load_32 s4, 16(s7)
    42e4:	44 00 00 f4 	bnz s4, 8 <malloc+0x584>
    42e8:	0b 00 00 f6 	b 44 <malloc+0x5ac>
    42ec:	e4 10 00 a8 	load_32 s7, 4(s4)
    42f0:	e7 e0 ff 01 	and s7, s7, -8
    42f4:	e7 00 6d c0 	sub_i s7, s7, s26
    42f8:	07 81 81 c1 	cmplt_u s8, s7, s3
    42fc:	48 00 00 f4 	bnz s8, 8 <malloc+0x59c>
    4300:	e0 80 f1 c0 	move s7, s3
    4304:	20 01 f2 c0 	move s9, s4
    4308:	68 fe ff f5 	bnz s8, -52 <malloc+0x56c>
    430c:	20 01 f1 c0 	move s9, s2
    4310:	f1 ff ff f7 	b -60 <malloc+0x56c>
    4314:	87 50 00 a8 	load_32 s4, 20(s7)
    4318:	44 00 00 f2 	bz s4, 8 <malloc+0x5b8>
    431c:	f4 ff ff f7 	b -48 <malloc+0x584>
    4320:	38 41 00 a8 	load_32 s9, 16(s24)
    4324:	89 00 61 c1 	cmpgt_u s4, s9, s2
    4328:	24 c3 00 f4 	bnz s4, 6244 <malloc+0x1e24>
    432c:	82 00 5d c0 	add_i s4, s2, s26
    4330:	e4 00 91 c1 	cmple_u s7, s4, s2
    4334:	c7 c2 00 f4 	bnz s7, 6232 <malloc+0x1e24>
    4338:	e2 60 00 a8 	load_32 s7, 24(s2)
    433c:	02 31 00 a8 	load_32 s8, 12(s2)
    4340:	48 01 01 c1 	cmpeq_i s10, s8, s2
    4344:	aa 21 00 f4 	bnz s10, 1076 <malloc+0xa10>
    4348:	c2 20 00 a8 	load_32 s6, 8(s2)
    434c:	29 01 63 c1 	cmpgt_u s9, s9, s6
    4350:	e9 c1 00 f4 	bnz s9, 6204 <malloc+0x1e24>
    4354:	26 31 00 a8 	load_32 s9, 12(s6)
    4358:	29 01 11 c1 	cmpne_i s9, s9, s2
    435c:	89 c1 00 f4 	bnz s9, 6192 <malloc+0x1e24>
    4360:	28 21 00 a8 	load_32 s9, 8(s8)
    4364:	29 01 11 c1 	cmpne_i s9, s9, s2
    4368:	29 c1 00 f4 	bnz s9, 6180 <malloc+0x1e24>
    436c:	06 31 00 88 	store_32 s8, 12(s6)
    4370:	c8 20 00 88 	store_32 s6, 8(s8)
    4374:	47 56 00 f2 	bz s7, 2760 <malloc+0x10d4>
    4378:	69 02 00 f6 	b 2468 <malloc+0xfb4>
    437c:	00 00 f2 c0 	move s0, s4
    4380:	40 00 f3 c0 	move s2, s6
    4384:	60 00 f0 c0 	move s3, s0
    4388:	a0 00 f1 c0 	move s5, s2
    438c:	04 10 00 a8 	load_32 s0, 4(s4)
    4390:	00 e0 ff 01 	and s0, s0, -8
    4394:	40 00 6d c0 	sub_i s2, s0, s26
    4398:	c2 80 82 c1 	cmplt_u s6, s2, s5
    439c:	a6 01 00 f4 	bnz s6, 52 <malloc+0x668>
    43a0:	40 80 f2 c0 	move s2, s5
    43a4:	00 00 f2 c0 	move s0, s4
    43a8:	46 00 00 f4 	bnz s6, 8 <malloc+0x648>
    43ac:	0b 00 00 f6 	b 44 <malloc+0x670>
    43b0:	c4 40 00 a8 	load_32 s6, 16(s4)
    43b4:	46 00 00 f4 	bnz s6, 8 <malloc+0x654>
    43b8:	0b 00 00 f6 	b 44 <malloc+0x67c>
    43bc:	60 00 f0 c0 	move s3, s0
    43c0:	a0 00 f1 c0 	move s5, s2
    43c4:	80 00 f3 c0 	move s4, s6
    43c8:	26 fe ff f5 	bnz s6, -60 <malloc+0x624>
    43cc:	0b 00 00 f6 	b 44 <malloc+0x690>
    43d0:	00 00 f2 c0 	move s0, s4
    43d4:	e6 fe ff f5 	bnz s6, -36 <malloc+0x648>
    43d8:	00 80 f1 c0 	move s0, s3
    43dc:	c4 40 00 a8 	load_32 s6, 16(s4)
    43e0:	e6 fe ff f5 	bnz s6, -36 <malloc+0x654>
    43e4:	c4 50 00 a8 	load_32 s6, 20(s4)
    43e8:	60 00 f0 c0 	move s3, s0
    43ec:	a0 00 f1 c0 	move s5, s2
    43f0:	80 00 f3 c0 	move s4, s6
    43f4:	c6 fc ff f5 	bnz s6, -104 <malloc+0x624>
    43f8:	80 03 00 f2 	bz s0, 112 <malloc+0x700>
    43fc:	78 20 00 a8 	load_32 s3, 8(s24)
    4400:	63 00 6d c0 	sub_i s3, s3, s26
    4404:	62 80 71 c1 	cmpge_u s3, s2, s3
    4408:	03 03 00 f4 	bnz s3, 96 <malloc+0x700>
    440c:	d8 40 00 a8 	load_32 s6, 16(s24)
    4410:	66 00 60 c1 	cmpgt_u s3, s6, s0
    4414:	c3 bb 00 f4 	bnz s3, 6008 <malloc+0x1e24>
    4418:	60 00 5d c0 	add_i s3, s0, s26
    441c:	83 00 90 c1 	cmple_u s4, s3, s0
    4420:	64 bb 00 f4 	bnz s4, 5996 <malloc+0x1e24>
    4424:	80 60 00 a8 	load_32 s4, 24(s0)
    4428:	a0 30 00 a8 	load_32 s5, 12(s0)
    442c:	e5 00 00 c1 	cmpeq_i s7, s5, s0
    4430:	47 16 00 f4 	bnz s7, 712 <malloc+0x990>
    4434:	e0 20 00 a8 	load_32 s7, 8(s0)
    4438:	c6 80 63 c1 	cmpgt_u s6, s6, s7
    443c:	86 ba 00 f4 	bnz s6, 5968 <malloc+0x1e24>
    4440:	c7 30 00 a8 	load_32 s6, 12(s7)
    4444:	c6 00 10 c1 	cmpne_i s6, s6, s0
    4448:	26 ba 00 f4 	bnz s6, 5956 <malloc+0x1e24>
    444c:	c5 20 00 a8 	load_32 s6, 8(s5)
    4450:	c6 00 10 c1 	cmpne_i s6, s6, s0
    4454:	c6 b9 00 f4 	bnz s6, 5944 <malloc+0x1e24>
    4458:	a7 30 00 88 	store_32 s5, 12(s7)
    445c:	e5 20 00 88 	store_32 s7, 8(s5)
    4460:	e4 25 00 f2 	bz s4, 1212 <malloc+0xbb4>
    4464:	da 00 00 f6 	b 872 <malloc+0xa64>
    4468:	38 20 00 a8 	load_32 s1, 8(s24)
    446c:	01 00 8d c1 	cmplt_u s0, s1, s26
    4470:	40 00 00 f4 	bnz s0, 8 <malloc+0x710>
    4474:	12 00 00 f6 	b 72 <malloc+0x754>
    4478:	18 30 00 a8 	load_32 s0, 12(s24)
    447c:	20 00 9d c1 	cmple_u s1, s0, s26
    4480:	21 04 00 f4 	bnz s1, 132 <malloc+0x79c>
    4484:	00 00 6d c0 	sub_i s0, s0, s26
    4488:	18 30 00 88 	store_32 s0, 12(s24)
    448c:	38 60 00 a8 	load_32 s1, 24(s24)
    4490:	00 04 00 00 	or s0, s0, 1
    4494:	41 00 5d c0 	add_i s2, s1, s26
    4498:	58 60 00 88 	store_32 s2, 24(s24)
    449c:	61 23 00 05 	add_i s27, s1, 8
    44a0:	02 10 00 88 	store_32 s0, 4(s2)
    44a4:	1a 0c 00 00 	or s0, s26, 3
    44a8:	01 10 00 88 	store_32 s0, 4(s1)
    44ac:	18 f0 06 a0 	load_u8 s0, 444(s24)
    44b0:	00 08 00 01 	and s0, s0, 2
    44b4:	20 15 00 f2 	bz s0, 676 <malloc+0x9f0>
    44b8:	a2 00 00 f6 	b 648 <malloc+0x9d8>
    44bc:	41 00 6d c0 	sub_i s2, s1, s26
    44c0:	18 50 00 a8 	load_32 s0, 20(s24)
    44c4:	62 40 00 18 	cmplt_u s3, s2, 16
    44c8:	43 0b 00 f4 	bnz s3, 360 <malloc+0x8c8>
    44cc:	60 00 5d c0 	add_i s3, s0, s26
    44d0:	78 50 00 88 	store_32 s3, 20(s24)
    44d4:	20 80 50 c0 	add_i s1, s0, s1
    44d8:	58 20 00 88 	store_32 s2, 8(s24)
    44dc:	82 04 00 00 	or s4, s2, 1
    44e0:	83 10 00 88 	store_32 s4, 4(s3)
    44e4:	60 23 00 05 	add_i s27, s0, 8
    44e8:	41 00 00 88 	store_32 s2, (s1)
    44ec:	3a 0c 00 00 	or s1, s26, 3
    44f0:	20 10 00 88 	store_32 s1, 4(s0)
    44f4:	18 f0 06 a0 	load_u8 s0, 444(s24)
    44f8:	00 08 00 01 	and s0, s0, 2
    44fc:	e0 12 00 f2 	bz s0, 604 <malloc+0x9f0>
    4500:	90 00 00 f6 	b 576 <malloc+0x9d8>
    4504:	19 00 00 a8 	load_32 s0, (s25)
    4508:	20 05 00 f4 	bnz s0, 164 <malloc+0x844>
    450c:	06 00 00 4f 	movehi s0, 6
    4510:	20 04 00 0f 	move s1, 1
    4514:	00 e0 6c 00 	or s0, s0, 6968
    4518:	40 00 00 aa 	load_sync s2, (s0)
    451c:	60 80 f0 c0 	move s3, s1
    4520:	60 00 00 8a 	store_sync s3, (s0)  
    4524:	a3 ff ff f3 	bz s3, -12 <malloc+0x7b0>
    4528:	02 01 00 f2 	bz s2, 32 <malloc+0x7e0>
    452c:	40 00 00 a8 	load_32 s2, (s0)
    4530:	e2 ff ff f5 	bnz s2, -4 <malloc+0x7c4>
    4534:	40 00 00 aa 	load_sync s2, (s0)
    4538:	60 80 f0 c0 	move s3, s1
    453c:	60 00 00 8a 	store_sync s3, (s0)  
    4540:	a3 ff ff f3 	bz s3, -12 <malloc+0x7cc>
    4544:	42 ff ff f5 	bnz s2, -24 <malloc+0x7c4>
    4548:	39 00 00 a8 	load_32 s1, (s25)
    454c:	61 02 00 f4 	bnz s1, 76 <malloc+0x830>
    4550:	20 00 40 0f 	move s1, 4096
    4554:	39 20 00 88 	store_32 s1, 8(s25)
    4558:	39 10 00 88 	store_32 s1, 4(s25)
    455c:	20 fc ff 0f 	move s1, -1
    4560:	39 30 00 88 	store_32 s1, 12(s25)
    4564:	20 20 00 4f 	movehi s1, 256
    4568:	39 40 00 88 	store_32 s1, 16(s25)
    456c:	20 08 00 0f 	move s1, 2
    4570:	39 50 00 88 	store_32 s1, 20(s25)
    4574:	6a 54 55 4f 	movehi s3, 174762
    4578:	38 f0 06 88 	store_32 s1, 444(s24)
    457c:	3e a0 00 05 	add_i s1, sp, 40
    4580:	40 00 00 0f 	move s2, 0
    4584:	58 00 07 88 	store_32 s2, 448(s24)
    4588:	43 60 55 00 	or s2, s3, 5464
    458c:	21 c0 ff 01 	and s1, s1, -16
    4590:	21 00 31 c0 	xor s1, s1, s2
    4594:	39 00 00 88 	store_32 s1, (s25)
    4598:	20 00 00 0f 	move s1, 0
    459c:	40 00 00 aa 	load_sync s2, (s0)
    45a0:	40 80 f0 c0 	move s2, s1
    45a4:	40 00 00 8a 	store_sync s2, (s0)  
    45a8:	a2 ff ff f3 	bz s2, -12 <malloc+0x834>
    45ac:	19 20 00 a8 	load_32 s0, 8(s25)
    45b0:	ba bc 00 05 	add_i s5, s26, 47
    45b4:	60 03 00 0f 	move s27, 0
    45b8:	20 80 52 c0 	add_i s1, s0, s5
    45bc:	1b 00 60 c0 	sub_i s0, s27, s0
    45c0:	81 00 10 c0 	and s4, s1, s0
    45c4:	04 00 9d c1 	cmple_u s0, s4, s26
    45c8:	60 0b 00 f4 	bnz s0, 364 <malloc+0x9cc>
    45cc:	18 e0 06 a8 	load_32 s0, 440(s24)
    45d0:	e0 00 00 f2 	bz s0, 28 <malloc+0x884>
    45d4:	58 c0 06 a8 	load_32 s2, 432(s24)
    45d8:	22 00 52 c0 	add_i s1, s2, s4
    45dc:	41 00 91 c1 	cmple_u s2, s1, s2
    45e0:	a2 0a 00 f4 	bnz s2, 340 <malloc+0x9cc>
    45e4:	01 00 60 c1 	cmpgt_u s0, s1, s0
    45e8:	60 0a 00 f4 	bnz s0, 332 <malloc+0x9cc>
    45ec:	18 f0 06 a0 	load_u8 s0, 444(s24)
    45f0:	00 10 00 01 	and s0, s0, 4
    45f4:	a0 03 00 f4 	bnz s0, 116 <malloc+0x900>
    45f8:	18 60 00 a8 	load_32 s0, 24(s24)
    45fc:	e0 00 00 0f 	move s7, 0
    4600:	80 19 00 f2 	bz s0, 816 <malloc+0xbc8>
    4604:	38 10 07 05 	add_i s1, s24, 452
    4608:	41 00 00 a8 	load_32 s2, (s1)
    460c:	62 00 60 c1 	cmpgt_u s3, s2, s0
    4610:	a3 00 00 f4 	bnz s3, 20 <malloc+0x8bc>
    4614:	61 10 00 a8 	load_32 s3, 4(s1)
    4618:	42 80 51 c0 	add_i s2, s2, s3
    461c:	42 00 60 c1 	cmpgt_u s2, s2, s0
    4620:	62 18 00 f4 	bnz s2, 780 <malloc+0xbc4>
    4624:	21 20 00 a8 	load_32 s1, 8(s1)
    4628:	01 ff ff f5 	bnz s1, -32 <malloc+0x8a0>
    462c:	c1 00 00 f6 	b 772 <malloc+0xbc8>
    4630:	40 00 00 0f 	move s2, 0
    4634:	58 20 00 88 	store_32 s2, 8(s24)
    4638:	58 50 00 88 	store_32 s2, 20(s24)
    463c:	40 80 50 c0 	add_i s2, s0, s1
    4640:	21 0c 00 00 	or s1, s1, 3
    4644:	20 10 00 88 	store_32 s1, 4(s0)
    4648:	60 23 00 05 	add_i s27, s0, 8
    464c:	22 10 00 a8 	load_32 s1, 4(s2)
    4650:	21 04 00 00 	or s1, s1, 1
    4654:	22 10 00 88 	store_32 s1, 4(s2)
    4658:	18 f0 06 a0 	load_u8 s0, 444(s24)
    465c:	00 08 00 01 	and s0, s0, 2
    4660:	c0 07 00 f2 	bz s0, 248 <malloc+0x9f0>
    4664:	37 00 00 f6 	b 220 <malloc+0x9d8>
    4668:	40 fd ff 0f 	move s10, -1
    466c:	20 01 00 0f 	move s9, 0
    4670:	1f fc 7f 4f 	movehi s0, 262143
    4674:	00 f8 7f 00 	or s0, s0, 8190
    4678:	04 00 60 c1 	cmpgt_u s0, s4, s0
    467c:	20 4b 00 f4 	bnz s0, 2404 <malloc+0x1278>
    4680:	2f 02 00 f6 	b 2236 <malloc+0x11d4>
    4684:	60 04 00 0f 	move s3, 1
    4688:	63 00 b3 c0 	shl s3, s3, s6
    468c:	63 fc ff 03 	xor s3, s3, -1
    4690:	00 80 11 c0 	and s0, s0, s3
    4694:	18 00 00 88 	store_32 s0, (s24)
    4698:	9a 0c 00 00 	or s4, s26, 3
    469c:	82 10 00 88 	store_32 s4, 4(s2)
    46a0:	65 00 6d c0 	sub_i s3, s5, s26
    46a4:	82 00 5d c0 	add_i s4, s2, s26
    46a8:	a2 80 52 c0 	add_i s5, s2, s5
    46ac:	c3 04 00 00 	or s6, s3, 1
    46b0:	c4 10 00 88 	store_32 s6, 4(s4)
    46b4:	65 00 00 88 	store_32 s3, (s5)
    46b8:	81 03 00 f2 	bz s1, 112 <malloc+0x9c0>
    46bc:	a1 0c 00 0a 	shr s5, s1, 3
    46c0:	38 50 00 a8 	load_32 s1, 20(s24)
    46c4:	c0 04 00 0f 	move s6, 1
    46c8:	e5 0c 00 0b 	shl s7, s5, 3
    46cc:	f8 80 53 c0 	add_i s7, s24, s7
    46d0:	c6 80 b2 c0 	shl s6, s6, s5
    46d4:	00 01 13 c0 	and s8, s0, s6
    46d8:	a7 a0 00 05 	add_i s5, s7, 40
    46dc:	48 00 00 f4 	bnz s8, 8 <malloc+0x97c>
    46e0:	0b 00 00 f6 	b 44 <malloc+0x9a4>
    46e4:	05 20 00 a8 	load_32 s0, 8(s5)
    46e8:	d8 40 00 a8 	load_32 s6, 16(s24)
    46ec:	c6 00 90 c1 	cmple_u s6, s6, s0
    46f0:	46 01 00 f4 	bnz s6, 40 <malloc+0x9b0>
    46f4:	26 05 00 f6 	b 5272 <malloc+0x1e24>
    46f8:	e0 50 00 a8 	load_32 s7, 20(s0)
    46fc:	47 00 00 f4 	bnz s7, 8 <malloc+0x99c>
    4700:	23 00 00 f6 	b 140 <malloc+0xa24>
    4704:	00 51 00 05 	add_i s8, s0, 20
    4708:	24 00 00 f6 	b 144 <malloc+0xa30>
    470c:	00 00 03 c0 	or s0, s0, s6
    4710:	18 00 00 88 	store_32 s0, (s24)
    4714:	00 80 f2 c0 	move s0, s5
    4718:	25 20 00 88 	store_32 s1, 8(s5)
    471c:	20 30 00 88 	store_32 s1, 12(s0)
    4720:	01 20 00 88 	store_32 s0, 8(s1)
    4724:	a1 30 00 88 	store_32 s5, 12(s1)
    4728:	78 20 00 88 	store_32 s3, 8(s24)
    472c:	62 23 00 05 	add_i s27, s2, 8
    4730:	98 50 00 88 	store_32 s4, 20(s24)
    4734:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4738:	00 08 00 01 	and s0, s0, 2
    473c:	e0 00 00 f2 	bz s0, 28 <malloc+0x9f0>
    4740:	18 00 07 05 	add_i s0, s24, 448
    4744:	20 00 00 0f 	move s1, 0
    4748:	40 00 00 aa 	load_sync s2, (s0)
    474c:	40 80 f0 c0 	move s2, s1
    4750:	40 00 00 8a 	store_sync s2, (s0)  
    4754:	a2 ff ff f3 	bz s2, -12 <malloc+0x9e0>
    4758:	00 80 fd c0 	move s0, s27
    475c:	fe b3 00 a8 	load_32 ra, 44(sp)
    4760:	7e c3 00 a8 	load_32 s27, 48(sp)
    4764:	5e d3 00 a8 	load_32 s26, 52(sp)
    4768:	3e e3 00 a8 	load_32 s25, 56(sp)
    476c:	1e f3 00 a8 	load_32 s24, 60(sp)
    4770:	de 03 01 05 	add_i sp, sp, 64
    4774:	1f 00 00 f0 	ret
    4778:	42 51 00 a8 	load_32 s10, 20(s2)
    477c:	4a 00 00 f4 	bnz s10, 8 <malloc+0xa1c>
    4780:	58 01 00 f6 	b 1376 <malloc+0xf78>
    4784:	62 51 00 05 	add_i s11, s2, 20
    4788:	59 01 00 f6 	b 1380 <malloc+0xf84>
    478c:	e0 40 00 a8 	load_32 s7, 16(s0)
    4790:	47 39 00 f2 	bz s7, 1832 <malloc+0x1150>
    4794:	00 41 00 05 	add_i s8, s0, 16
    4798:	a0 80 f3 c0 	move s5, s7
    479c:	e5 50 00 a8 	load_32 s7, 20(s5)
    47a0:	20 01 f4 c0 	move s9, s8
    47a4:	05 51 00 05 	add_i s8, s5, 20
    47a8:	87 ff ff f5 	bnz s7, -16 <malloc+0xa30>
    47ac:	e5 40 00 a8 	load_32 s7, 16(s5)
    47b0:	05 41 00 05 	add_i s8, s5, 16
    47b4:	27 ff ff f5 	bnz s7, -28 <malloc+0xa30>
    47b8:	c6 80 64 c1 	cmpgt_u s6, s6, s9
    47bc:	86 9e 00 f4 	bnz s6, 5072 <malloc+0x1e24>
    47c0:	c0 00 00 0f 	move s6, 0
    47c4:	c9 00 00 88 	store_32 s6, (s9)
    47c8:	a4 0a 00 f2 	bz s4, 340 <malloc+0xbb4>
    47cc:	c0 70 00 a8 	load_32 s6, 28(s0)
    47d0:	e6 08 00 0b 	shl s7, s6, 2
    47d4:	f8 80 53 c0 	add_i s7, s24, s7
    47d8:	07 c1 04 a8 	load_32 s8, 304(s7)
    47dc:	00 01 14 c1 	cmpne_i s8, s0, s8
    47e0:	48 00 00 f4 	bnz s8, 8 <malloc+0xa80>
    47e4:	0c 00 00 f6 	b 48 <malloc+0xaac>
    47e8:	d8 40 00 a8 	load_32 s6, 16(s24)
    47ec:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    47f0:	e6 9c 00 f4 	bnz s6, 5020 <malloc+0x1e24>
    47f4:	c4 40 00 a8 	load_32 s6, 16(s4)
    47f8:	c6 00 00 c1 	cmpeq_i s6, s6, s0
    47fc:	66 06 00 f4 	bnz s6, 204 <malloc+0xb60>
    4800:	c0 50 00 0f 	move s6, 20
    4804:	c4 00 53 c0 	add_i s6, s4, s6
    4808:	a6 00 00 88 	store_32 s5, (s6)
    480c:	85 08 00 f2 	bz s5, 272 <malloc+0xbb4>
    4810:	32 00 00 f6 	b 200 <malloc+0xb70>
    4814:	e7 c0 04 05 	add_i s7, s7, 304
    4818:	a7 00 00 88 	store_32 s5, (s7)
    481c:	e5 05 00 f4 	bnz s5, 188 <malloc+0xb70>
    4820:	80 04 00 0f 	move s4, 1
    4824:	84 00 b3 c0 	shl s4, s4, s6
    4828:	84 fc ff 03 	xor s4, s4, -1
    482c:	21 00 12 c0 	and s1, s1, s4
    4830:	38 10 00 88 	store_32 s1, 4(s24)
    4834:	82 3c 00 16 	cmpgt_u s4, s2, 15
    4838:	44 00 00 f4 	bnz s4, 8 <malloc+0xad8>
    483c:	3a 00 00 f6 	b 232 <malloc+0xbbc>
    4840:	9a 0c 00 00 	or s4, s26, 3
    4844:	80 10 00 88 	store_32 s4, 4(s0)
    4848:	82 04 00 00 	or s4, s2, 1
    484c:	83 10 00 88 	store_32 s4, 4(s3)
    4850:	a3 00 51 c0 	add_i s5, s3, s2
    4854:	82 fc 03 16 	cmpgt_u s4, s2, 255
    4858:	45 00 00 88 	store_32 s2, (s5)
    485c:	04 02 00 f4 	bnz s4, 64 <malloc+0xb34>
    4860:	22 0c 00 0a 	shr s1, s2, 3
    4864:	58 00 00 a8 	load_32 s2, (s24)
    4868:	80 04 00 0f 	move s4, 1
    486c:	a1 0c 00 0b 	shl s5, s1, 3
    4870:	b8 80 52 c0 	add_i s5, s24, s5
    4874:	84 80 b0 c0 	shl s4, s4, s1
    4878:	c2 00 12 c0 	and s6, s2, s4
    487c:	25 a0 00 05 	add_i s1, s5, 40
    4880:	46 00 00 f4 	bnz s6, 8 <malloc+0xb20>
    4884:	aa 00 00 f6 	b 680 <malloc+0xdc4>
    4888:	41 20 00 a8 	load_32 s2, 8(s1)
    488c:	98 40 00 a8 	load_32 s4, 16(s24)
    4890:	84 00 91 c1 	cmple_u s4, s4, s2
    4894:	24 15 00 f4 	bnz s4, 676 <malloc+0xdd0>
    4898:	bd 04 00 f6 	b 4852 <malloc+0x1e24>
    489c:	80 00 00 0f 	move s4, 0
    48a0:	c2 20 00 0a 	shr s6, s2, 8
    48a4:	a0 00 f2 c0 	move s5, s4
    48a8:	86 19 00 f2 	bz s6, 816 <malloc+0xe70>
    48ac:	bf fc 00 4f 	movehi s5, 2047
    48b0:	a5 fc 7f 00 	or s5, s5, 8191
    48b4:	a2 80 62 c1 	cmpgt_u s5, s2, s5
    48b8:	45 00 00 f4 	bnz s5, 8 <malloc+0xb58>
    48bc:	ab 00 00 f6 	b 684 <malloc+0xe00>
    48c0:	a0 7c 00 0f 	move s5, 31
    48c4:	c5 00 00 f6 	b 788 <malloc+0xe70>
    48c8:	c0 40 00 0f 	move s6, 16
    48cc:	c4 00 53 c0 	add_i s6, s4, s6
    48d0:	a6 00 00 88 	store_32 s5, (s6)
    48d4:	45 02 00 f2 	bz s5, 72 <malloc+0xbb4>
    48d8:	d8 40 00 a8 	load_32 s6, 16(s24)
    48dc:	e6 80 62 c1 	cmpgt_u s7, s6, s5
    48e0:	67 95 00 f4 	bnz s7, 4780 <malloc+0x1e24>
    48e4:	85 60 00 88 	store_32 s4, 24(s5)
    48e8:	80 40 00 a8 	load_32 s4, 16(s0)
    48ec:	a4 00 00 f2 	bz s4, 20 <malloc+0xb98>
    48f0:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    48f4:	c6 94 00 f4 	bnz s6, 4760 <malloc+0x1e24>
    48f8:	85 40 00 88 	store_32 s4, 16(s5)
    48fc:	a4 60 00 88 	store_32 s5, 24(s4)
    4900:	80 50 00 a8 	load_32 s4, 20(s0)
    4904:	c4 00 00 f2 	bz s4, 24 <malloc+0xbb4>
    4908:	d8 40 00 a8 	load_32 s6, 16(s24)
    490c:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    4910:	e6 93 00 f4 	bnz s6, 4732 <malloc+0x1e24>
    4914:	85 50 00 88 	store_32 s4, 20(s5)
    4918:	a4 60 00 88 	store_32 s5, 24(s4)
    491c:	82 3c 00 16 	cmpgt_u s4, s2, 15
    4920:	04 f9 ff f5 	bnz s4, -224 <malloc+0xad8>
    4924:	22 00 5d c0 	add_i s1, s2, s26
    4928:	45 ff ff f7 	b -748 <malloc+0x8d4>
    492c:	e0 80 f0 c0 	move s7, s1
    4930:	06 00 00 4f 	movehi s0, 6
    4934:	3a c0 00 05 	add_i s1, s26, 48
    4938:	3e 80 00 88 	store_32 s1, 32(sp)
    493c:	60 e3 6c 00 	or s27, s0, 6968
    4940:	00 04 00 0f 	move s0, 1
    4944:	3b 00 00 aa 	load_sync s1, (s27)
    4948:	40 00 f0 c0 	move s2, s0
    494c:	5b 00 00 8a 	store_sync s2, (s27)  
    4950:	a2 ff ff f3 	bz s2, -12 <malloc+0xbdc>
    4954:	01 01 00 f2 	bz s1, 32 <malloc+0xc0c>
    4958:	3b 00 00 a8 	load_32 s1, (s27)
    495c:	e1 ff ff f5 	bnz s1, -4 <malloc+0xbf0>
    4960:	3b 00 00 aa 	load_sync s1, (s27)
    4964:	40 00 f0 c0 	move s2, s0
    4968:	5b 00 00 8a 	store_sync s2, (s27)  
    496c:	a2 ff ff f3 	bz s2, -12 <malloc+0xbf8>
    4970:	41 ff ff f5 	bnz s1, -24 <malloc+0xbf0>
    4974:	47 00 00 f4 	bnz s7, 8 <malloc+0xc14>
    4978:	1e 00 00 f6 	b 120 <malloc+0xc88>
    497c:	18 30 00 a8 	load_32 s0, 12(s24)
    4980:	c0 00 00 0f 	move s6, 0
    4984:	39 20 00 a8 	load_32 s1, 8(s25)
    4988:	5f fc 7f 4f 	movehi s2, 262143
    498c:	05 00 60 c0 	sub_i s0, s5, s0
    4990:	00 80 50 c0 	add_i s0, s0, s1
    4994:	26 80 60 c0 	sub_i s1, s6, s1
    4998:	00 80 10 c0 	and s0, s0, s1
    499c:	22 f8 7f 00 	or s1, s2, 8190
    49a0:	20 80 60 c1 	cmpgt_u s1, s0, s1
    49a4:	01 2b 00 f4 	bnz s1, 1376 <malloc+0x119c>
    49a8:	be 30 00 88 	store_32 s5, 12(sp)
    49ac:	9e 70 00 88 	store_32 s4, 28(sp)
    49b0:	1e 50 00 88 	store_32 s0, 20(sp)
    49b4:	fe 60 00 88 	store_32 s7, 24(sp)
    49b8:	bb 12 00 f8 	call 19180 <sbrk>
    49bc:	5e 60 00 a8 	load_32 s2, 24(sp)
    49c0:	22 00 00 a8 	load_32 s1, (s2)
    49c4:	42 10 00 a8 	load_32 s2, 4(s2)
    49c8:	40 01 f0 c0 	move s10, s0
    49cc:	01 00 51 c0 	add_i s0, s1, s2
    49d0:	0a 00 10 c1 	cmpne_i s0, s10, s0
    49d4:	40 06 00 f4 	bnz s0, 200 <malloc+0xd34>
    49d8:	3e 51 00 a8 	load_32 s9, 20(sp)
    49dc:	0a fc ff 10 	cmpeq_i s0, s10, -1
    49e0:	c0 80 f4 c0 	move s6, s9
    49e4:	9e 70 00 a8 	load_32 s4, 28(sp)
    49e8:	e0 28 00 f4 	bnz s0, 1308 <malloc+0x119c>
    49ec:	4b 01 00 f6 	b 1324 <malloc+0x11b0>
    49f0:	00 00 00 0f 	move s0, 0
    49f4:	be 30 00 88 	store_32 s5, 12(sp)
    49f8:	9e 70 00 88 	store_32 s4, 28(sp)
    49fc:	1e 40 00 88 	store_32 s0, 16(sp)
    4a00:	a9 12 00 f8 	call 19108 <sbrk>
    4a04:	a0 00 f0 c0 	move s5, s0
    4a08:	05 fc ff 10 	cmpeq_i s0, s5, -1
    4a0c:	80 0a 00 f4 	bnz s0, 336 <malloc+0xdf4>
    4a10:	99 10 00 a8 	load_32 s4, 4(s25)
    4a14:	7e 70 00 a8 	load_32 s3, 28(sp)
    4a18:	24 fc ff 05 	add_i s1, s4, -1
    4a1c:	00 80 f1 c0 	move s0, s3
    4a20:	41 80 12 c0 	and s2, s1, s5
    4a24:	e2 00 00 f2 	bz s2, 28 <malloc+0xcd8>
    4a28:	40 00 00 0f 	move s2, 0
    4a2c:	21 80 52 c0 	add_i s1, s1, s5
    4a30:	63 80 62 c0 	sub_i s3, s3, s5
    4a34:	02 00 62 c0 	sub_i s0, s2, s4
    4a38:	01 00 10 c0 	and s0, s1, s0
    4a3c:	03 00 50 c0 	add_i s0, s3, s0
    4a40:	78 c0 06 a8 	load_32 s3, 432(s24)
    4a44:	20 00 9d c1 	cmple_u s1, s0, s26
    4a48:	de 40 00 a8 	load_32 s6, 16(sp)
    4a4c:	a1 25 00 f4 	bnz s1, 1204 <malloc+0x1198>
    4a50:	3f fc 7f 4f 	movehi s1, 262143
    4a54:	9e 70 00 a8 	load_32 s4, 28(sp)
    4a58:	21 f8 7f 00 	or s1, s1, 8190
    4a5c:	20 80 60 c1 	cmpgt_u s1, s0, s1
    4a60:	21 25 00 f4 	bnz s1, 1188 <malloc+0x119c>
    4a64:	38 e0 06 a8 	load_32 s1, 440(s24)
    4a68:	c1 00 00 f2 	bz s1, 24 <malloc+0xd18>
    4a6c:	43 00 50 c0 	add_i s2, s3, s0
    4a70:	62 80 91 c1 	cmple_u s3, s2, s3
    4a74:	83 24 00 f4 	bnz s3, 1168 <malloc+0x119c>
    4a78:	22 80 60 c1 	cmpgt_u s1, s2, s1
    4a7c:	41 24 00 f4 	bnz s1, 1160 <malloc+0x119c>
    4a80:	1e 50 00 88 	store_32 s0, 20(sp)
    4a84:	be 60 00 88 	store_32 s5, 24(sp)
    4a88:	87 12 00 f8 	call 18972 <sbrk>
    4a8c:	3e 60 00 a8 	load_32 s1, 24(sp)
    4a90:	40 01 f0 c0 	move s10, s0
    4a94:	0a 80 00 c1 	cmpeq_i s0, s10, s1
    4a98:	00 22 00 f4 	bnz s0, 1088 <malloc+0x1170>
    4a9c:	9e 70 00 a8 	load_32 s4, 28(sp)
    4aa0:	c0 00 00 0f 	move s6, 0
    4aa4:	3e 51 00 a8 	load_32 s9, 20(sp)
    4aa8:	1e 80 00 a8 	load_32 s0, 32(sp)
    4aac:	00 80 94 c1 	cmple_u s0, s0, s9
    4ab0:	20 1e 00 f4 	bnz s0, 964 <malloc+0x110c>
    4ab4:	1f fc 7f 4f 	movehi s0, 262143
    4ab8:	60 f8 7f 00 	or s3, s0, 8190
    4abc:	29 80 61 c1 	cmpgt_u s1, s9, s3
    4ac0:	a1 1d 00 f4 	bnz s1, 948 <malloc+0x110c>
    4ac4:	2a fc ff 10 	cmpeq_i s1, s10, -1
    4ac8:	61 1d 00 f4 	bnz s1, 940 <malloc+0x110c>
    4acc:	3e 63 00 88 	store_32 s25, 24(sp)
    4ad0:	39 20 00 a8 	load_32 s1, 8(s25)
    4ad4:	20 03 00 0f 	move s25, 0
    4ad8:	5e 30 00 a8 	load_32 s2, 12(sp)
    4adc:	42 80 64 c0 	sub_i s2, s2, s9
    4ae0:	42 80 50 c0 	add_i s2, s2, s1
    4ae4:	39 80 60 c0 	sub_i s1, s25, s1
    4ae8:	02 80 10 c0 	and s0, s2, s1
    4aec:	20 80 61 c1 	cmpgt_u s1, s0, s3
    4af0:	a1 1e 00 f4 	bnz s1, 980 <malloc+0x115c>
    4af4:	de 40 00 88 	store_32 s6, 16(sp)
    4af8:	9e 70 00 88 	store_32 s4, 28(sp)
    4afc:	5e 81 00 88 	store_32 s10, 32(sp)
    4b00:	1e 30 00 88 	store_32 s0, 12(sp)
    4b04:	68 12 00 f8 	call 18848 <sbrk>
    4b08:	00 fc ff 10 	cmpeq_i s0, s0, -1
    4b0c:	e0 1e 00 f4 	bnz s0, 988 <malloc+0x1180>
    4b10:	3e 51 00 a8 	load_32 s9, 20(sp)
    4b14:	1e 30 00 a8 	load_32 s0, 12(sp)
    4b18:	3e 63 00 a8 	load_32 s25, 24(sp)
    4b1c:	5e 81 00 a8 	load_32 s10, 32(sp)
    4b20:	9e 70 00 a8 	load_32 s4, 28(sp)
    4b24:	20 81 54 c0 	add_i s9, s0, s9
    4b28:	fc 00 00 f6 	b 1008 <malloc+0x11b0>
    4b2c:	42 00 02 c0 	or s2, s2, s4
    4b30:	58 00 00 88 	store_32 s2, (s24)
    4b34:	40 80 f0 c0 	move s2, s1
    4b38:	61 20 00 88 	store_32 s3, 8(s1)
    4b3c:	60 23 00 05 	add_i s27, s0, 8
    4b40:	62 30 00 88 	store_32 s3, 12(s2)
    4b44:	43 20 00 88 	store_32 s2, 8(s3)
    4b48:	23 30 00 88 	store_32 s1, 12(s3)
    4b4c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4b50:	00 08 00 01 	and s0, s0, 2
    4b54:	20 e0 ff f3 	bz s0, -1020 <malloc+0x9f0>
    4b58:	fa fe ff f7 	b -1048 <malloc+0x9d8>
    4b5c:	9e 70 00 a8 	load_32 s4, 28(sp)
    4b60:	de 40 00 a8 	load_32 s6, 16(sp)
    4b64:	e8 00 00 f6 	b 928 <malloc+0x119c>
    4b68:	bf 0c 00 4f 	movehi s5, 127
    4b6c:	ff 04 00 4f 	movehi s7, 63
    4b70:	1e 01 00 4f 	movehi s8, 30
    4b74:	a5 00 7c 00 	or s5, s5, 7936
    4b78:	a6 80 52 c0 	add_i s5, s6, s5
    4b7c:	e7 00 40 00 	or s7, s7, 4096
    4b80:	a5 40 00 0a 	shr s5, s5, 16
    4b84:	a5 20 00 01 	and s5, s5, 8
    4b88:	c6 80 b2 c0 	shl s6, s6, s5
    4b8c:	e6 80 53 c0 	add_i s7, s6, s7
    4b90:	e7 40 00 0a 	shr s7, s7, 16
    4b94:	e7 10 00 01 	and s7, s7, 4
    4b98:	c6 80 b3 c0 	shl s6, s6, s7
    4b9c:	a7 80 02 c0 	or s5, s7, s5
    4ba0:	06 01 54 c0 	add_i s8, s6, s8
    4ba4:	08 41 00 0a 	shr s8, s8, 16
    4ba8:	e8 08 00 01 	and s7, s8, 2
    4bac:	00 39 00 0f 	move s8, 14
    4bb0:	a5 80 03 c0 	or s5, s5, s7
    4bb4:	c6 80 b3 c0 	shl s6, s6, s7
    4bb8:	a8 80 62 c0 	sub_i s5, s8, s5
    4bbc:	c6 3c 00 0a 	shr s6, s6, 15
    4bc0:	a5 00 53 c0 	add_i s5, s5, s6
    4bc4:	c5 1c 00 05 	add_i s6, s5, 7
    4bc8:	c2 00 a3 c0 	shr s6, s2, s6
    4bcc:	a5 04 00 0b 	shl s5, s5, 1
    4bd0:	c6 04 00 01 	and s6, s6, 1
    4bd4:	a6 80 02 c0 	or s5, s6, s5
    4bd8:	c5 08 00 0b 	shl s6, s5, 2
    4bdc:	a3 70 00 88 	store_32 s5, 28(s3)
    4be0:	e0 04 00 0f 	move s7, 1
    4be4:	83 50 00 88 	store_32 s4, 20(s3)
    4be8:	d8 00 53 c0 	add_i s6, s24, s6
    4bec:	83 40 00 88 	store_32 s4, 16(s3)
    4bf0:	e7 80 b2 c0 	shl s7, s7, s5
    4bf4:	c6 c0 04 05 	add_i s6, s6, 304
    4bf8:	01 81 13 c0 	and s8, s1, s7
    4bfc:	48 00 00 f4 	bnz s8, 8 <malloc+0xe9c>
    4c00:	08 00 00 f6 	b 32 <malloc+0xeb8>
    4c04:	86 00 00 a8 	load_32 s4, (s6)
    4c08:	25 7c 00 10 	cmpeq_i s1, s5, 31
    4c0c:	41 01 00 f4 	bnz s1, 40 <malloc+0xecc>
    4c10:	20 64 00 0f 	move s1, 25
    4c14:	a5 04 00 0a 	shr s5, s5, 1
    4c18:	21 80 62 c0 	sub_i s1, s1, s5
    4c1c:	07 00 00 f6 	b 28 <malloc+0xed0>
    4c20:	21 80 03 c0 	or s1, s1, s7
    4c24:	38 10 00 88 	store_32 s1, 4(s24)
    4c28:	66 00 00 88 	store_32 s3, (s6)
    4c2c:	c3 60 00 88 	store_32 s6, 24(s3)
    4c30:	14 00 00 f6 	b 80 <malloc+0xf18>
    4c34:	20 00 00 0f 	move s1, 0
    4c38:	a2 80 b0 c0 	shl s5, s2, s1
    4c3c:	20 00 f2 c0 	move s1, s4
    4c40:	81 10 00 a8 	load_32 s4, 4(s1)
    4c44:	84 e0 ff 01 	and s4, s4, -8
    4c48:	84 00 01 c1 	cmpeq_i s4, s4, s2
    4c4c:	84 02 00 f4 	bnz s4, 80 <malloc+0xf34>
    4c50:	85 74 00 0a 	shr s4, s5, 29
    4c54:	a5 04 00 0b 	shl s5, s5, 1
    4c58:	84 10 00 01 	and s4, s4, 4
    4c5c:	c1 00 52 c0 	add_i s6, s1, s4
    4c60:	86 40 00 a8 	load_32 s4, 16(s6)
    4c64:	c4 fe ff f5 	bnz s4, -40 <malloc+0xed4>
    4c68:	98 40 00 a8 	load_32 s4, 16(s24)
    4c6c:	46 40 00 05 	add_i s2, s6, 16
    4c70:	84 00 61 c1 	cmpgt_u s4, s4, s2
    4c74:	c4 78 00 f4 	bnz s4, 3864 <malloc+0x1e24>
    4c78:	62 00 00 88 	store_32 s3, (s2)
    4c7c:	23 60 00 88 	store_32 s1, 24(s3)
    4c80:	63 30 00 88 	store_32 s3, 12(s3)
    4c84:	60 23 00 05 	add_i s27, s0, 8
    4c88:	63 20 00 88 	store_32 s3, 8(s3)
    4c8c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4c90:	00 08 00 01 	and s0, s0, 2
    4c94:	20 d6 ff f3 	bz s0, -1340 <malloc+0x9f0>
    4c98:	aa fe ff f7 	b -1368 <malloc+0x9d8>
    4c9c:	41 20 00 a8 	load_32 s2, 8(s1)
    4ca0:	98 40 00 a8 	load_32 s4, 16(s24)
    4ca4:	a4 00 61 c1 	cmpgt_u s5, s4, s2
    4ca8:	25 77 00 f4 	bnz s5, 3812 <malloc+0x1e24>
    4cac:	84 80 60 c1 	cmpgt_u s4, s4, s1
    4cb0:	e4 76 00 f4 	bnz s4, 3804 <malloc+0x1e24>
    4cb4:	62 30 00 88 	store_32 s3, 12(s2)
    4cb8:	60 23 00 05 	add_i s27, s0, 8
    4cbc:	61 20 00 88 	store_32 s3, 8(s1)
    4cc0:	43 20 00 88 	store_32 s2, 8(s3)
    4cc4:	23 30 00 88 	store_32 s1, 12(s3)
    4cc8:	20 00 00 0f 	move s1, 0
    4ccc:	23 60 00 88 	store_32 s1, 24(s3)
    4cd0:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4cd4:	00 08 00 01 	and s0, s0, 2
    4cd8:	00 d4 ff f3 	bz s0, -1408 <malloc+0x9f0>
    4cdc:	99 fe ff f7 	b -1436 <malloc+0x9d8>
    4ce0:	42 41 00 a8 	load_32 s10, 16(s2)
    4ce4:	4a 0f 00 f2 	bz s10, 488 <malloc+0x1164>
    4ce8:	62 41 00 05 	add_i s11, s2, 16
    4cec:	00 01 f5 c0 	move s8, s10
    4cf0:	48 51 00 a8 	load_32 s10, 20(s8)
    4cf4:	80 81 f5 c0 	move s12, s11
    4cf8:	68 51 00 05 	add_i s11, s8, 20
    4cfc:	8a ff ff f5 	bnz s10, -16 <malloc+0xf84>
    4d00:	48 41 00 a8 	load_32 s10, 16(s8)
    4d04:	68 41 00 05 	add_i s11, s8, 16
    4d08:	2a ff ff f5 	bnz s10, -28 <malloc+0xf84>
    4d0c:	29 01 66 c1 	cmpgt_u s9, s9, s12
    4d10:	e9 73 00 f4 	bnz s9, 3708 <malloc+0x1e24>
    4d14:	cc 00 00 88 	store_32 s6, (s12)
    4d18:	27 09 00 f2 	bz s7, 292 <malloc+0x10d4>
    4d1c:	c2 70 00 a8 	load_32 s6, 28(s2)
    4d20:	26 09 00 0b 	shl s9, s6, 2
    4d24:	38 81 54 c0 	add_i s9, s24, s9
    4d28:	49 c1 04 a8 	load_32 s10, 304(s9)
    4d2c:	42 01 15 c1 	cmpne_i s10, s2, s10
    4d30:	4a 00 00 f4 	bnz s10, 8 <malloc+0xfd0>
    4d34:	0c 00 00 f6 	b 48 <malloc+0xffc>
    4d38:	b8 40 00 a8 	load_32 s5, 16(s24)
    4d3c:	a5 80 63 c1 	cmpgt_u s5, s5, s7
    4d40:	65 72 00 f4 	bnz s5, 3660 <malloc+0x1e24>
    4d44:	a7 40 00 a8 	load_32 s5, 16(s7)
    4d48:	a5 00 01 c1 	cmpeq_i s5, s5, s2
    4d4c:	e5 04 00 f4 	bnz s5, 156 <malloc+0x1080>
    4d50:	a0 50 00 0f 	move s5, 20
    4d54:	a7 80 52 c0 	add_i s5, s7, s5
    4d58:	05 01 00 88 	store_32 s8, (s5)
    4d5c:	08 07 00 f2 	bz s8, 224 <malloc+0x10d4>
    4d60:	26 00 00 f6 	b 152 <malloc+0x1090>
    4d64:	29 c1 04 05 	add_i s9, s9, 304
    4d68:	09 01 00 88 	store_32 s8, (s9)
    4d6c:	68 04 00 f4 	bnz s8, 140 <malloc+0x1090>
    4d70:	e0 04 00 0f 	move s7, 1
    4d74:	c7 00 b3 c0 	shl s6, s7, s6
    4d78:	c6 fc ff 03 	xor s6, s6, -1
    4d7c:	a5 00 13 c0 	and s5, s5, s6
    4d80:	b8 10 00 88 	store_32 s5, 4(s24)
    4d84:	a3 3c 00 16 	cmpgt_u s5, s3, 15
    4d88:	45 00 00 f4 	bnz s5, 8 <malloc+0x1028>
    4d8c:	2e 00 00 f6 	b 184 <malloc+0x10dc>
    4d90:	ba 0c 00 00 	or s5, s26, 3
    4d94:	a2 10 00 88 	store_32 s5, 4(s2)
    4d98:	a4 80 51 c0 	add_i s5, s4, s3
    4d9c:	c3 04 00 00 	or s6, s3, 1
    4da0:	c4 10 00 88 	store_32 s6, 4(s4)
    4da4:	65 00 00 88 	store_32 s3, (s5)
    4da8:	a1 07 00 f2 	bz s1, 244 <malloc+0x1134>
    4dac:	21 0c 00 0a 	shr s1, s1, 3
    4db0:	a0 04 00 0f 	move s5, 1
    4db4:	e1 0c 00 0b 	shl s7, s1, 3
    4db8:	c5 80 b0 c0 	shl s6, s5, s1
    4dbc:	38 50 00 a8 	load_32 s1, 20(s24)
    4dc0:	b8 80 53 c0 	add_i s5, s24, s7
    4dc4:	e6 00 10 c0 	and s7, s6, s0
    4dc8:	a5 a0 00 05 	add_i s5, s5, 40
    4dcc:	47 00 00 f4 	bnz s7, 8 <malloc+0x106c>
    4dd0:	2c 00 00 f6 	b 176 <malloc+0x1118>
    4dd4:	05 20 00 a8 	load_32 s0, 8(s5)
    4dd8:	d8 40 00 a8 	load_32 s6, 16(s24)
    4ddc:	c6 00 90 c1 	cmple_u s6, s6, s0
    4de0:	66 05 00 f4 	bnz s6, 172 <malloc+0x1124>
    4de4:	6a 03 00 f6 	b 3496 <malloc+0x1e24>
    4de8:	a0 40 00 0f 	move s5, 16
    4dec:	a7 80 52 c0 	add_i s5, s7, s5
    4df0:	05 01 00 88 	store_32 s8, (s5)
    4df4:	48 02 00 f2 	bz s8, 72 <malloc+0x10d4>
    4df8:	b8 40 00 a8 	load_32 s5, 16(s24)
    4dfc:	c5 00 64 c1 	cmpgt_u s6, s5, s8
    4e00:	66 6c 00 f4 	bnz s6, 3468 <malloc+0x1e24>
    4e04:	e8 60 00 88 	store_32 s7, 24(s8)
    4e08:	c2 40 00 a8 	load_32 s6, 16(s2)
    4e0c:	a6 00 00 f2 	bz s6, 20 <malloc+0x10b8>
    4e10:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    4e14:	c5 6b 00 f4 	bnz s5, 3448 <malloc+0x1e24>
    4e18:	c8 40 00 88 	store_32 s6, 16(s8)
    4e1c:	06 61 00 88 	store_32 s8, 24(s6)
    4e20:	a2 50 00 a8 	load_32 s5, 20(s2)
    4e24:	c5 00 00 f2 	bz s5, 24 <malloc+0x10d4>
    4e28:	d8 40 00 a8 	load_32 s6, 16(s24)
    4e2c:	c6 80 62 c1 	cmpgt_u s6, s6, s5
    4e30:	e6 6a 00 f4 	bnz s6, 3420 <malloc+0x1e24>
    4e34:	a8 50 00 88 	store_32 s5, 20(s8)
    4e38:	05 61 00 88 	store_32 s8, 24(s5)
    4e3c:	a3 3c 00 16 	cmpgt_u s5, s3, 15
    4e40:	85 fa ff f5 	bnz s5, -176 <malloc+0x1028>
    4e44:	03 00 5d c0 	add_i s0, s3, s26
    4e48:	22 00 50 c0 	add_i s1, s2, s0
    4e4c:	62 23 00 05 	add_i s27, s2, 8
    4e50:	00 0c 00 00 	or s0, s0, 3
    4e54:	02 10 00 88 	store_32 s0, 4(s2)
    4e58:	01 10 00 a8 	load_32 s0, 4(s1)
    4e5c:	00 04 00 00 	or s0, s0, 1
    4e60:	01 10 00 88 	store_32 s0, 4(s1)
    4e64:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4e68:	00 08 00 01 	and s0, s0, 2
    4e6c:	60 c7 ff f3 	bz s0, -1812 <malloc+0x9f0>
    4e70:	34 fe ff f7 	b -1840 <malloc+0x9d8>
    4e74:	0a fc ff 11 	cmpne_i s0, s10, -1
    4e78:	00 05 00 f4 	bnz s0, 160 <malloc+0x11b0>
    4e7c:	22 00 00 f6 	b 136 <malloc+0x119c>
    4e80:	06 00 00 c0 	or s0, s6, s0
    4e84:	18 00 00 88 	store_32 s0, (s24)
    4e88:	00 80 f2 c0 	move s0, s5
    4e8c:	25 20 00 88 	store_32 s1, 8(s5)
    4e90:	20 30 00 88 	store_32 s1, 12(s0)
    4e94:	01 20 00 88 	store_32 s0, 8(s1)
    4e98:	a1 30 00 88 	store_32 s5, 12(s1)
    4e9c:	78 20 00 88 	store_32 s3, 8(s24)
    4ea0:	62 23 00 05 	add_i s27, s2, 8
    4ea4:	98 50 00 88 	store_32 s4, 20(s24)
    4ea8:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4eac:	00 08 00 01 	and s0, s0, 2
    4eb0:	40 c5 ff f3 	bz s0, -1880 <malloc+0x9f0>
    4eb4:	23 fe ff f7 	b -1908 <malloc+0x9d8>
    4eb8:	a0 00 00 0f 	move s5, 0
    4ebc:	04 d3 ff f3 	bz s4, -1440 <malloc+0xbb4>
    4ec0:	43 fe ff f7 	b -1780 <malloc+0xa64>
    4ec4:	3e 63 00 a8 	load_32 s25, 24(sp)
    4ec8:	14 00 00 f6 	b 80 <malloc+0x11b0>
    4ecc:	00 01 f3 c0 	move s8, s6
    4ed0:	67 fb ff f3 	bz s7, -148 <malloc+0x10d4>
    4ed4:	92 ff ff f7 	b -440 <malloc+0xfb4>
    4ed8:	40 81 f0 c0 	move s10, s1
    4edc:	3e 51 00 a8 	load_32 s9, 20(sp)
    4ee0:	9e 70 00 a8 	load_32 s4, 28(sp)
    4ee4:	0d 00 00 f6 	b 52 <malloc+0x11b0>
    4ee8:	1e 50 00 a8 	load_32 s0, 20(sp)
    4eec:	3e 40 00 a8 	load_32 s1, 16(sp)
    4ef0:	01 00 60 c0 	sub_i s0, s1, s0
    4ef4:	6c 11 00 f8 	call 17840 <sbrk>
    4ef8:	c0 80 fc c0 	move s6, s25
    4efc:	3e 63 00 a8 	load_32 s25, 24(sp)
    4f00:	9e 70 00 a8 	load_32 s4, 28(sp)
    4f04:	18 f0 06 a8 	load_32 s0, 444(s24)
    4f08:	40 fd ff 0f 	move s10, -1
    4f0c:	00 10 00 00 	or s0, s0, 4
    4f10:	18 f0 06 88 	store_32 s0, 444(s24)
    4f14:	20 01 f3 c0 	move s9, s6
    4f18:	00 00 00 0f 	move s0, 0
    4f1c:	3b 00 00 aa 	load_sync s1, (s27)
    4f20:	20 00 f0 c0 	move s1, s0
    4f24:	3b 00 00 8a 	store_sync s1, (s27)  
    4f28:	a1 ff ff f3 	bz s1, -12 <malloc+0x11b4>
    4f2c:	1f fc 7f 4f 	movehi s0, 262143
    4f30:	00 f8 7f 00 	or s0, s0, 8190
    4f34:	04 00 60 c1 	cmpgt_u s0, s4, s0
    4f38:	40 05 00 f4 	bnz s0, 168 <malloc+0x1278>
    4f3c:	0a fc ff 11 	cmpne_i s0, s10, -1
    4f40:	00 05 00 f4 	bnz s0, 160 <malloc+0x1278>
    4f44:	06 00 00 4f 	movehi s0, 6
    4f48:	3e 63 00 88 	store_32 s25, 24(sp)
    4f4c:	20 e3 6c 00 	or s25, s0, 6968
    4f50:	00 04 00 0f 	move s0, 1
    4f54:	39 00 00 aa 	load_sync s1, (s25)
    4f58:	40 00 f0 c0 	move s2, s0
    4f5c:	59 00 00 8a 	store_sync s2, (s25)  
    4f60:	a2 ff ff f3 	bz s2, -12 <malloc+0x11ec>
    4f64:	01 01 00 f2 	bz s1, 32 <malloc+0x121c>
    4f68:	39 00 00 a8 	load_32 s1, (s25)
    4f6c:	e1 ff ff f5 	bnz s1, -4 <malloc+0x1200>
    4f70:	39 00 00 aa 	load_sync s1, (s25)
    4f74:	40 00 f0 c0 	move s2, s0
    4f78:	59 00 00 8a 	store_sync s2, (s25)  
    4f7c:	a2 ff ff f3 	bz s2, -12 <malloc+0x1208>
    4f80:	41 ff ff f5 	bnz s1, -24 <malloc+0x1200>
    4f84:	00 00 f2 c0 	move s0, s4
    4f88:	47 11 00 f8 	call 17692 <sbrk>
    4f8c:	60 03 00 0f 	move s27, 0
    4f90:	1e 80 00 88 	store_32 s0, 32(sp)
    4f94:	00 80 fd c0 	move s0, s27
    4f98:	43 11 00 f8 	call 17676 <sbrk>
    4f9c:	39 00 00 aa 	load_sync s1, (s25)
    4fa0:	20 80 fd c0 	move s1, s27
    4fa4:	39 00 00 8a 	store_sync s1, (s25)  
    4fa8:	a1 ff ff f3 	bz s1, -12 <malloc+0x1234>
    4fac:	5e 81 00 a8 	load_32 s10, 32(sp)
    4fb0:	2a 00 70 c1 	cmpge_u s1, s10, s0
    4fb4:	01 bc ff f5 	bnz s1, -2176 <malloc+0x9cc>
    4fb8:	2a fc ff 10 	cmpeq_i s1, s10, -1
    4fbc:	c1 bb ff f5 	bnz s1, -2184 <malloc+0x9cc>
    4fc0:	20 fc ff 10 	cmpeq_i s1, s0, -1
    4fc4:	81 bb ff f5 	bnz s1, -2192 <malloc+0x9cc>
    4fc8:	20 01 65 c0 	sub_i s9, s0, s10
    4fcc:	3e 63 00 a8 	load_32 s25, 24(sp)
    4fd0:	1a a0 00 05 	add_i s0, s26, 40
    4fd4:	09 00 60 c1 	cmpgt_u s0, s9, s0
    4fd8:	80 00 00 f4 	bnz s0, 16 <malloc+0x1280>
    4fdc:	d6 fd ff f7 	b -2216 <malloc+0x9cc>
    4fe0:	0a fc ff 10 	cmpeq_i s0, s10, -1
    4fe4:	80 3b 00 f4 	bnz s0, 1904 <malloc+0x19ec>
    4fe8:	18 c0 06 a8 	load_32 s0, 432(s24)
    4fec:	00 80 54 c0 	add_i s0, s0, s9
    4ff0:	18 c0 06 88 	store_32 s0, 432(s24)
    4ff4:	38 d0 06 a8 	load_32 s1, 436(s24)
    4ff8:	20 80 90 c1 	cmple_u s1, s0, s1
    4ffc:	41 00 00 f4 	bnz s1, 8 <malloc+0x129c>
    5000:	18 d0 06 88 	store_32 s0, 436(s24)
    5004:	58 60 00 a8 	load_32 s2, 24(s24)
    5008:	42 01 00 f2 	bz s2, 40 <malloc+0x12c8>
    500c:	18 10 07 05 	add_i s0, s24, 452
    5010:	60 00 00 a8 	load_32 s3, (s0)
    5014:	20 10 00 a8 	load_32 s1, 4(s0)
    5018:	83 80 50 c0 	add_i s4, s3, s1
    501c:	8a 00 02 c1 	cmpeq_i s4, s10, s4
    5020:	04 11 00 f4 	bnz s4, 544 <malloc+0x14d8>
    5024:	00 20 00 a8 	load_32 s0, 8(s0)
    5028:	20 13 00 f2 	bz s0, 612 <malloc+0x1524>
    502c:	f9 ff ff f7 	b -28 <malloc+0x12a8>
    5030:	18 40 00 a8 	load_32 s0, 16(s24)
    5034:	60 00 00 f2 	bz s0, 12 <malloc+0x12d8>
    5038:	0a 00 70 c1 	cmpge_u s0, s10, s0
    503c:	40 00 00 f4 	bnz s0, 8 <malloc+0x12dc>
    5040:	58 41 00 88 	store_32 s10, 16(s24)
    5044:	58 11 07 88 	store_32 s10, 452(s24)
    5048:	00 00 00 0f 	move s0, 0
    504c:	38 21 07 88 	store_32 s9, 456(s24)
    5050:	4a 20 00 05 	add_i s2, s10, 8
    5054:	18 40 07 88 	store_32 s0, 464(s24)
    5058:	39 00 00 a8 	load_32 s1, (s25)
    505c:	38 90 00 88 	store_32 s1, 36(s24)
    5060:	20 fc ff 0f 	move s1, -1
    5064:	38 80 00 88 	store_32 s1, 32(s24)
    5068:	38 a0 00 05 	add_i s1, s24, 40
    506c:	38 d0 00 88 	store_32 s1, 52(s24)
    5070:	42 1c 00 01 	and s2, s2, 7
    5074:	38 c0 00 88 	store_32 s1, 48(s24)
    5078:	38 c0 00 05 	add_i s1, s24, 48
    507c:	38 f0 00 88 	store_32 s1, 60(s24)
    5080:	38 e0 00 88 	store_32 s1, 56(s24)
    5084:	38 e0 00 05 	add_i s1, s24, 56
    5088:	38 10 01 88 	store_32 s1, 68(s24)
    508c:	42 00 00 10 	cmpeq_i s2, s2, 0
    5090:	38 00 01 88 	store_32 s1, 64(s24)
    5094:	38 00 01 05 	add_i s1, s24, 64
    5098:	38 30 01 88 	store_32 s1, 76(s24)
    509c:	38 20 01 88 	store_32 s1, 72(s24)
    50a0:	38 20 01 05 	add_i s1, s24, 72
    50a4:	38 50 01 88 	store_32 s1, 84(s24)
    50a8:	38 40 01 88 	store_32 s1, 80(s24)
    50ac:	38 40 01 05 	add_i s1, s24, 80
    50b0:	38 70 01 88 	store_32 s1, 92(s24)
    50b4:	38 60 01 88 	store_32 s1, 88(s24)
    50b8:	38 60 01 05 	add_i s1, s24, 88
    50bc:	38 90 01 88 	store_32 s1, 100(s24)
    50c0:	38 80 01 88 	store_32 s1, 96(s24)
    50c4:	38 80 01 05 	add_i s1, s24, 96
    50c8:	38 b0 01 88 	store_32 s1, 108(s24)
    50cc:	38 a0 01 88 	store_32 s1, 104(s24)
    50d0:	38 a0 01 05 	add_i s1, s24, 104
    50d4:	38 d0 01 88 	store_32 s1, 116(s24)
    50d8:	38 c0 01 88 	store_32 s1, 112(s24)
    50dc:	38 c0 01 05 	add_i s1, s24, 112
    50e0:	38 f0 01 88 	store_32 s1, 124(s24)
    50e4:	38 e0 01 88 	store_32 s1, 120(s24)
    50e8:	38 e0 01 05 	add_i s1, s24, 120
    50ec:	38 10 02 88 	store_32 s1, 132(s24)
    50f0:	38 00 02 88 	store_32 s1, 128(s24)
    50f4:	38 00 02 05 	add_i s1, s24, 128
    50f8:	38 30 02 88 	store_32 s1, 140(s24)
    50fc:	38 20 02 88 	store_32 s1, 136(s24)
    5100:	38 20 02 05 	add_i s1, s24, 136
    5104:	38 50 02 88 	store_32 s1, 148(s24)
    5108:	38 40 02 88 	store_32 s1, 144(s24)
    510c:	38 40 02 05 	add_i s1, s24, 144
    5110:	38 70 02 88 	store_32 s1, 156(s24)
    5114:	38 60 02 88 	store_32 s1, 152(s24)
    5118:	38 60 02 05 	add_i s1, s24, 152
    511c:	38 90 02 88 	store_32 s1, 164(s24)
    5120:	38 80 02 88 	store_32 s1, 160(s24)
    5124:	38 80 02 05 	add_i s1, s24, 160
    5128:	38 b0 02 88 	store_32 s1, 172(s24)
    512c:	38 a0 02 88 	store_32 s1, 168(s24)
    5130:	38 a0 02 05 	add_i s1, s24, 168
    5134:	38 d0 02 88 	store_32 s1, 180(s24)
    5138:	38 c0 02 88 	store_32 s1, 176(s24)
    513c:	38 c0 02 05 	add_i s1, s24, 176
    5140:	38 f0 02 88 	store_32 s1, 188(s24)
    5144:	38 e0 02 88 	store_32 s1, 184(s24)
    5148:	38 e0 02 05 	add_i s1, s24, 184
    514c:	38 10 03 88 	store_32 s1, 196(s24)
    5150:	38 00 03 88 	store_32 s1, 192(s24)
    5154:	38 00 03 05 	add_i s1, s24, 192
    5158:	38 30 03 88 	store_32 s1, 204(s24)
    515c:	38 20 03 88 	store_32 s1, 200(s24)
    5160:	38 20 03 05 	add_i s1, s24, 200
    5164:	38 50 03 88 	store_32 s1, 212(s24)
    5168:	38 40 03 88 	store_32 s1, 208(s24)
    516c:	38 40 03 05 	add_i s1, s24, 208
    5170:	38 70 03 88 	store_32 s1, 220(s24)
    5174:	38 60 03 88 	store_32 s1, 216(s24)
    5178:	38 60 03 05 	add_i s1, s24, 216
    517c:	38 90 03 88 	store_32 s1, 228(s24)
    5180:	38 80 03 88 	store_32 s1, 224(s24)
    5184:	38 80 03 05 	add_i s1, s24, 224
    5188:	38 b0 03 88 	store_32 s1, 236(s24)
    518c:	38 a0 03 88 	store_32 s1, 232(s24)
    5190:	38 a0 03 05 	add_i s1, s24, 232
    5194:	38 d0 03 88 	store_32 s1, 244(s24)
    5198:	38 c0 03 88 	store_32 s1, 240(s24)
    519c:	38 c0 03 05 	add_i s1, s24, 240
    51a0:	38 f0 03 88 	store_32 s1, 252(s24)
    51a4:	38 e0 03 88 	store_32 s1, 248(s24)
    51a8:	38 e0 03 05 	add_i s1, s24, 248
    51ac:	38 10 04 88 	store_32 s1, 260(s24)
    51b0:	38 00 04 88 	store_32 s1, 256(s24)
    51b4:	38 00 04 05 	add_i s1, s24, 256
    51b8:	38 30 04 88 	store_32 s1, 268(s24)
    51bc:	38 20 04 88 	store_32 s1, 264(s24)
    51c0:	38 20 04 05 	add_i s1, s24, 264
    51c4:	38 50 04 88 	store_32 s1, 276(s24)
    51c8:	38 40 04 88 	store_32 s1, 272(s24)
    51cc:	38 40 04 05 	add_i s1, s24, 272
    51d0:	38 70 04 88 	store_32 s1, 284(s24)
    51d4:	38 60 04 88 	store_32 s1, 280(s24)
    51d8:	38 60 04 05 	add_i s1, s24, 280
    51dc:	38 90 04 88 	store_32 s1, 292(s24)
    51e0:	38 80 04 88 	store_32 s1, 288(s24)
    51e4:	38 80 04 05 	add_i s1, s24, 288
    51e8:	38 b0 04 88 	store_32 s1, 300(s24)
    51ec:	38 a0 04 88 	store_32 s1, 296(s24)
    51f0:	29 60 ff 05 	add_i s1, s9, -40
    51f4:	82 00 00 f4 	bnz s2, 16 <malloc+0x149c>
    51f8:	00 e0 ff 0f 	move s0, -8
    51fc:	00 00 65 c0 	sub_i s0, s0, s10
    5200:	00 1c 00 01 	and s0, s0, 7
    5204:	4a 00 50 c0 	add_i s2, s10, s0
    5208:	58 60 00 88 	store_32 s2, 24(s24)
    520c:	01 00 60 c0 	sub_i s0, s1, s0
    5210:	18 30 00 88 	store_32 s0, 12(s24)
    5214:	2a 80 50 c0 	add_i s1, s10, s1
    5218:	00 04 00 00 	or s0, s0, 1
    521c:	02 10 00 88 	store_32 s0, 4(s2)
    5220:	00 a0 00 0f 	move s0, 40
    5224:	01 10 00 88 	store_32 s0, 4(s1)
    5228:	19 40 00 a8 	load_32 s0, 16(s25)
    522c:	18 70 00 88 	store_32 s0, 28(s24)
    5230:	18 30 00 a8 	load_32 s0, 12(s24)
    5234:	20 00 9d c1 	cmple_u s1, s0, s26
    5238:	e1 28 00 f4 	bnz s1, 1308 <malloc+0x19ec>
    523c:	92 fc ff f7 	b -3512 <malloc+0x71c>
    5240:	80 30 00 a0 	load_u8 s4, 12(s0)
    5244:	84 20 00 01 	and s4, s4, 8
    5248:	24 02 00 f4 	bnz s4, 68 <malloc+0x1524>
    524c:	8a 00 91 c1 	cmple_u s4, s10, s2
    5250:	e4 01 00 f4 	bnz s4, 60 <malloc+0x1524>
    5254:	63 00 61 c1 	cmpgt_u s3, s3, s2
    5258:	a3 01 00 f4 	bnz s3, 52 <malloc+0x1524>
    525c:	62 20 00 05 	add_i s3, s2, 8
    5260:	21 80 54 c0 	add_i s1, s1, s9
    5264:	20 10 00 88 	store_32 s1, 4(s0)
    5268:	18 30 00 a8 	load_32 s0, 12(s24)
    526c:	23 1c 00 01 	and s1, s3, 7
    5270:	21 00 00 10 	cmpeq_i s1, s1, 0
    5274:	00 80 54 c0 	add_i s0, s0, s9
    5278:	81 27 00 f4 	bnz s1, 1264 <malloc+0x1a00>
    527c:	20 e0 ff 0f 	move s1, -8
    5280:	21 00 61 c0 	sub_i s1, s1, s2
    5284:	21 1c 00 01 	and s1, s1, 7
    5288:	39 01 00 f6 	b 1252 <malloc+0x1a04>
    528c:	b8 40 00 a8 	load_32 s5, 16(s24)
    5290:	0a 80 72 c1 	cmpge_u s0, s10, s5
    5294:	60 00 00 f4 	bnz s0, 12 <malloc+0x1538>
    5298:	58 41 00 88 	store_32 s10, 16(s24)
    529c:	a0 00 f5 c0 	move s5, s10
    52a0:	2a 80 54 c0 	add_i s1, s10, s9
    52a4:	18 10 07 05 	add_i s0, s24, 452
    52a8:	60 00 00 a8 	load_32 s3, (s0)
    52ac:	63 80 00 c1 	cmpeq_i s3, s3, s1
    52b0:	83 00 00 f4 	bnz s3, 16 <malloc+0x1558>
    52b4:	00 20 00 a8 	load_32 s0, 8(s0)
    52b8:	e0 08 00 f2 	bz s0, 284 <malloc+0x166c>
    52bc:	fb ff ff f7 	b -20 <malloc+0x1540>
    52c0:	60 30 00 a0 	load_u8 s3, 12(s0)
    52c4:	63 20 00 01 	and s3, s3, 8
    52c8:	43 00 00 f2 	bz s3, 8 <malloc+0x1568>
    52cc:	42 00 00 f6 	b 264 <malloc+0x166c>
    52d0:	40 01 00 88 	store_32 s10, (s0)
    52d4:	8a 20 00 05 	add_i s4, s10, 8
    52d8:	60 10 00 a8 	load_32 s3, 4(s0)
    52dc:	84 1c 00 01 	and s4, s4, 7
    52e0:	63 80 54 c0 	add_i s3, s3, s9
    52e4:	60 10 00 88 	store_32 s3, 4(s0)
    52e8:	60 00 00 0f 	move s3, 0
    52ec:	c4 00 00 10 	cmpeq_i s6, s4, 0
    52f0:	80 e0 ff 0f 	move s4, -8
    52f4:	00 80 f1 c0 	move s0, s3
    52f8:	66 00 00 f4 	bnz s6, 12 <malloc+0x159c>
    52fc:	04 00 65 c0 	sub_i s0, s4, s10
    5300:	00 1c 00 01 	and s0, s0, 7
    5304:	c1 20 00 05 	add_i s6, s1, 8
    5308:	0a 00 50 c0 	add_i s0, s10, s0
    530c:	c6 1c 00 01 	and s6, s6, 7
    5310:	c6 00 00 10 	cmpeq_i s6, s6, 0
    5314:	66 00 00 f4 	bnz s6, 12 <malloc+0x15b8>
    5318:	64 80 60 c0 	sub_i s3, s4, s1
    531c:	63 1c 00 01 	and s3, s3, 7
    5320:	81 80 51 c0 	add_i s4, s1, s3
    5324:	20 00 5d c0 	add_i s1, s0, s26
    5328:	42 00 12 c1 	cmpne_i s2, s2, s4
    532c:	64 00 60 c0 	sub_i s3, s4, s0
    5330:	da 0c 00 00 	or s6, s26, 3
    5334:	c0 10 00 88 	store_32 s6, 4(s0)
    5338:	63 00 6d c0 	sub_i s3, s3, s26
    533c:	42 00 00 f4 	bnz s2, 8 <malloc+0x15dc>
    5340:	93 00 00 f6 	b 588 <malloc+0x1824>
    5344:	58 50 00 a8 	load_32 s2, 20(s24)
    5348:	42 00 12 c1 	cmpne_i s2, s2, s4
    534c:	42 00 00 f4 	bnz s2, 8 <malloc+0x15ec>
    5350:	11 01 00 f6 	b 1092 <malloc+0x1a2c>
    5354:	44 10 00 a8 	load_32 s2, 4(s4)
    5358:	c2 0c 00 01 	and s6, s2, 3
    535c:	c6 04 00 11 	cmpne_i s6, s6, 1
    5360:	66 2f 00 f4 	bnz s6, 1516 <malloc+0x1be4>
    5364:	c2 fc 03 16 	cmpgt_u s6, s2, 255
    5368:	06 23 00 f4 	bnz s6, 1120 <malloc+0x1a60>
    536c:	02 0d 00 0a 	shr s8, s2, 3
    5370:	c4 20 00 a8 	load_32 s6, 8(s4)
    5374:	e8 0c 00 0b 	shl s7, s8, 3
    5378:	f8 80 53 c0 	add_i s7, s24, s7
    537c:	27 a1 00 05 	add_i s9, s7, 40
    5380:	e4 30 00 a8 	load_32 s7, 12(s4)
    5384:	46 81 04 c1 	cmpeq_i s10, s6, s9
    5388:	ca 00 00 f4 	bnz s10, 24 <malloc+0x1638>
    538c:	45 01 63 c1 	cmpgt_u s10, s5, s6
    5390:	ea 3f 00 f4 	bnz s10, 2044 <malloc+0x1e24>
    5394:	46 31 00 a8 	load_32 s10, 12(s6)
    5398:	4a 01 12 c1 	cmpne_i s10, s10, s4
    539c:	8a 3f 00 f4 	bnz s10, 2032 <malloc+0x1e24>
    53a0:	47 01 13 c1 	cmpne_i s10, s7, s6
    53a4:	4a 00 00 f4 	bnz s10, 8 <malloc+0x1644>
    53a8:	19 01 00 f6 	b 1124 <malloc+0x1aa4>
    53ac:	07 81 04 c1 	cmpeq_i s8, s7, s9
    53b0:	c8 00 00 f4 	bnz s8, 24 <malloc+0x1660>
    53b4:	a5 80 63 c1 	cmpgt_u s5, s5, s7
    53b8:	a5 3e 00 f4 	bnz s5, 2004 <malloc+0x1e24>
    53bc:	a7 20 00 a8 	load_32 s5, 8(s7)
    53c0:	a5 00 12 c1 	cmpne_i s5, s5, s4
    53c4:	45 3e 00 f4 	bnz s5, 1992 <malloc+0x1e24>
    53c8:	e6 30 00 88 	store_32 s7, 12(s6)
    53cc:	c7 20 00 88 	store_32 s6, 8(s7)
    53d0:	5c 01 00 f6 	b 1392 <malloc+0x1bd8>
    53d4:	38 10 07 05 	add_i s1, s24, 452
    53d8:	01 00 00 a8 	load_32 s0, (s1)
    53dc:	60 00 61 c1 	cmpgt_u s3, s0, s2
    53e0:	43 00 00 f4 	bnz s3, 8 <malloc+0x1680>
    53e4:	05 00 00 f6 	b 20 <malloc+0x1690>
    53e8:	21 20 00 a8 	load_32 s1, 8(s1)
    53ec:	01 00 00 a8 	load_32 s0, (s1)
    53f0:	60 00 61 c1 	cmpgt_u s3, s0, s2
    53f4:	a3 ff ff f5 	bnz s3, -12 <malloc+0x1680>
    53f8:	61 10 00 a8 	load_32 s3, 4(s1)
    53fc:	00 80 51 c0 	add_i s0, s0, s3
    5400:	60 00 61 c1 	cmpgt_u s3, s0, s2
    5404:	43 00 00 f4 	bnz s3, 8 <malloc+0x16a4>
    5408:	f8 ff ff f7 	b -32 <malloc+0x1680>
    540c:	20 64 ff 05 	add_i s1, s0, -39
    5410:	60 00 00 0f 	move s3, 0
    5414:	21 1c 00 01 	and s1, s1, 7
    5418:	81 00 00 10 	cmpeq_i s4, s1, 0
    541c:	20 80 f1 c0 	move s1, s3
    5420:	84 00 00 f4 	bnz s4, 16 <malloc+0x16c8>
    5424:	20 9c 00 0f 	move s1, 39
    5428:	21 00 60 c0 	sub_i s1, s1, s0
    542c:	21 1c 00 01 	and s1, s1, 7
    5430:	20 80 50 c0 	add_i s1, s0, s1
    5434:	81 44 ff 05 	add_i s4, s1, -47
    5438:	22 40 00 05 	add_i s1, s2, 16
    543c:	a4 80 80 c1 	cmplt_u s5, s4, s1
    5440:	20 00 f1 c0 	move s1, s2
    5444:	45 00 00 f4 	bnz s5, 8 <malloc+0x16e4>
    5448:	20 00 f2 c0 	move s1, s4
    544c:	8a 20 00 05 	add_i s4, s10, 8
    5450:	a1 20 00 05 	add_i s5, s1, 8
    5454:	c9 60 ff 05 	add_i s6, s9, -40
    5458:	84 1c 00 01 	and s4, s4, 7
    545c:	e0 80 f1 c0 	move s7, s3
    5460:	84 00 00 10 	cmpeq_i s4, s4, 0
    5464:	84 00 00 f4 	bnz s4, 16 <malloc+0x170c>
    5468:	80 e0 ff 0f 	move s4, -8
    546c:	84 00 65 c0 	sub_i s4, s4, s10
    5470:	e4 1c 00 01 	and s7, s4, 7
    5474:	0a 81 53 c0 	add_i s8, s10, s7
    5478:	18 61 00 88 	store_32 s8, 24(s24)
    547c:	e6 80 63 c0 	sub_i s7, s6, s7
    5480:	f8 30 00 88 	store_32 s7, 12(s24)
    5484:	ca 00 53 c0 	add_i s6, s10, s6
    5488:	81 60 00 05 	add_i s4, s1, 24
    548c:	e7 04 00 00 	or s7, s7, 1
    5490:	e8 10 00 88 	store_32 s7, 4(s8)
    5494:	e0 a0 00 0f 	move s7, 40
    5498:	e6 10 00 88 	store_32 s7, 4(s6)
    549c:	d9 40 00 a8 	load_32 s6, 16(s25)
    54a0:	d8 70 00 88 	store_32 s6, 28(s24)
    54a4:	c0 6c 00 0f 	move s6, 27
    54a8:	c1 10 00 88 	store_32 s6, 4(s1)
    54ac:	d8 40 07 a8 	load_32 s6, 464(s24)
    54b0:	c1 50 00 88 	store_32 s6, 20(s1)
    54b4:	d8 30 07 a8 	load_32 s6, 460(s24)
    54b8:	c1 40 00 88 	store_32 s6, 16(s1)
    54bc:	d8 20 07 a8 	load_32 s6, 456(s24)
    54c0:	c1 30 00 88 	store_32 s6, 12(s1)
    54c4:	d8 10 07 a8 	load_32 s6, 452(s24)
    54c8:	c1 20 00 88 	store_32 s6, 8(s1)
    54cc:	58 11 07 88 	store_32 s10, 452(s24)
    54d0:	38 21 07 88 	store_32 s9, 456(s24)
    54d4:	78 40 07 88 	store_32 s3, 464(s24)
    54d8:	60 1c 00 0f 	move s3, 7
    54dc:	b8 30 07 88 	store_32 s5, 460(s24)
    54e0:	a4 20 00 05 	add_i s5, s4, 8
    54e4:	64 10 00 88 	store_32 s3, 4(s4)
    54e8:	c4 10 00 05 	add_i s6, s4, 4
    54ec:	a5 00 80 c1 	cmplt_u s5, s5, s0
    54f0:	80 00 f3 c0 	move s4, s6
    54f4:	65 ff ff f5 	bnz s5, -20 <malloc+0x1778>
    54f8:	01 00 01 c1 	cmpeq_i s0, s1, s2
    54fc:	40 12 00 f4 	bnz s0, 584 <malloc+0x19dc>
    5500:	61 10 00 a8 	load_32 s3, 4(s1)
    5504:	01 00 61 c0 	sub_i s0, s1, s2
    5508:	63 f8 ff 01 	and s3, s3, -2
    550c:	61 10 00 88 	store_32 s3, 4(s1)
    5510:	60 04 00 00 	or s3, s0, 1
    5514:	62 10 00 88 	store_32 s3, 4(s2)
    5518:	60 fc 03 16 	cmpgt_u s3, s0, 255
    551c:	01 00 00 88 	store_32 s0, (s1)
    5520:	03 02 00 f4 	bnz s3, 64 <malloc+0x17f8>
    5524:	00 0c 00 0a 	shr s0, s0, 3
    5528:	38 00 00 a8 	load_32 s1, (s24)
    552c:	60 04 00 0f 	move s3, 1
    5530:	80 0c 00 0b 	shl s4, s0, 3
    5534:	98 00 52 c0 	add_i s4, s24, s4
    5538:	63 00 b0 c0 	shl s3, s3, s0
    553c:	a1 80 11 c0 	and s5, s1, s3
    5540:	04 a0 00 05 	add_i s0, s4, 40
    5544:	45 00 00 f4 	bnz s5, 8 <malloc+0x17e4>
    5548:	1c 00 00 f6 	b 112 <malloc+0x1850>
    554c:	20 20 00 a8 	load_32 s1, 8(s0)
    5550:	78 40 00 a8 	load_32 s3, 16(s24)
    5554:	63 80 90 c1 	cmple_u s3, s3, s1
    5558:	63 03 00 f4 	bnz s3, 108 <malloc+0x185c>
    555c:	8c 01 00 f6 	b 1584 <malloc+0x1e24>
    5560:	20 00 00 0f 	move s1, 0
    5564:	80 20 00 0a 	shr s4, s0, 8
    5568:	60 80 f0 c0 	move s3, s1
    556c:	44 07 00 f2 	bz s4, 232 <malloc+0x18ec>
    5570:	7f fc 00 4f 	movehi s3, 2047
    5574:	63 fc 7f 00 	or s3, s3, 8191
    5578:	60 80 61 c1 	cmpgt_u s3, s0, s3
    557c:	43 00 00 f4 	bnz s3, 8 <malloc+0x181c>
    5580:	19 00 00 f6 	b 100 <malloc+0x187c>
    5584:	60 7c 00 0f 	move s3, 31
    5588:	33 00 00 f6 	b 204 <malloc+0x18ec>
    558c:	58 30 00 a8 	load_32 s2, 12(s24)
    5590:	60 23 00 05 	add_i s27, s0, 8
    5594:	42 80 51 c0 	add_i s2, s2, s3
    5598:	58 30 00 88 	store_32 s2, 12(s24)
    559c:	38 60 00 88 	store_32 s1, 24(s24)
    55a0:	42 04 00 00 	or s2, s2, 1
    55a4:	41 10 00 88 	store_32 s2, 4(s1)
    55a8:	18 f0 06 a0 	load_u8 s0, 444(s24)
    55ac:	00 08 00 01 	and s0, s0, 2
    55b0:	40 8d ff f3 	bz s0, -3672 <malloc+0x9f0>
    55b4:	63 fc ff f7 	b -3700 <malloc+0x9d8>
    55b8:	21 80 01 c0 	or s1, s1, s3
    55bc:	38 00 00 88 	store_32 s1, (s24)
    55c0:	20 00 f0 c0 	move s1, s0
    55c4:	40 20 00 88 	store_32 s2, 8(s0)
    55c8:	41 30 00 88 	store_32 s2, 12(s1)
    55cc:	22 20 00 88 	store_32 s1, 8(s2)
    55d0:	02 30 00 88 	store_32 s0, 12(s2)
    55d4:	18 30 00 a8 	load_32 s0, 12(s24)
    55d8:	20 00 9d c1 	cmple_u s1, s0, s26
    55dc:	c1 0b 00 f4 	bnz s1, 376 <malloc+0x19ec>
    55e0:	a9 fb ff f7 	b -4444 <malloc+0x71c>
    55e4:	7f 0c 00 4f 	movehi s3, 127
    55e8:	bf 04 00 4f 	movehi s5, 63
    55ec:	de 00 00 4f 	movehi s6, 30
    55f0:	63 00 7c 00 	or s3, s3, 7936
    55f4:	64 80 51 c0 	add_i s3, s4, s3
    55f8:	a5 00 40 00 	or s5, s5, 4096
    55fc:	63 40 00 0a 	shr s3, s3, 16
    5600:	63 20 00 01 	and s3, s3, 8
    5604:	84 80 b1 c0 	shl s4, s4, s3
    5608:	a4 80 52 c0 	add_i s5, s4, s5
    560c:	a5 40 00 0a 	shr s5, s5, 16
    5610:	a5 10 00 01 	and s5, s5, 4
    5614:	84 80 b2 c0 	shl s4, s4, s5
    5618:	65 80 01 c0 	or s3, s5, s3
    561c:	c4 00 53 c0 	add_i s6, s4, s6
    5620:	c6 40 00 0a 	shr s6, s6, 16
    5624:	a6 08 00 01 	and s5, s6, 2
    5628:	c0 38 00 0f 	move s6, 14
    562c:	63 80 02 c0 	or s3, s3, s5
    5630:	84 80 b2 c0 	shl s4, s4, s5
    5634:	66 80 61 c0 	sub_i s3, s6, s3
    5638:	84 3c 00 0a 	shr s4, s4, 15
    563c:	63 00 52 c0 	add_i s3, s3, s4
    5640:	83 1c 00 05 	add_i s4, s3, 7
    5644:	80 00 a2 c0 	shr s4, s0, s4
    5648:	63 04 00 0b 	shl s3, s3, 1
    564c:	84 04 00 01 	and s4, s4, 1
    5650:	64 80 01 c0 	or s3, s4, s3
    5654:	62 70 00 88 	store_32 s3, 28(s2)
    5658:	a3 08 00 0b 	shl s5, s3, 2
    565c:	22 50 00 88 	store_32 s1, 20(s2)
    5660:	d8 80 52 c0 	add_i s6, s24, s5
    5664:	22 40 00 88 	store_32 s1, 16(s2)
    5668:	20 04 00 0f 	move s1, 1
    566c:	98 10 00 a8 	load_32 s4, 4(s24)
    5670:	a1 80 b1 c0 	shl s5, s1, s3
    5674:	26 c0 04 05 	add_i s1, s6, 304
    5678:	e4 80 12 c0 	and s7, s4, s5
    567c:	47 00 00 f4 	bnz s7, 8 <malloc+0x191c>
    5680:	08 00 00 f6 	b 32 <malloc+0x1938>
    5684:	81 00 00 a8 	load_32 s4, (s1)
    5688:	a3 7c 00 10 	cmpeq_i s5, s3, 31
    568c:	25 01 00 f4 	bnz s5, 36 <malloc+0x1948>
    5690:	20 64 00 0f 	move s1, 25
    5694:	63 04 00 0a 	shr s3, s3, 1
    5698:	21 80 61 c0 	sub_i s1, s1, s3
    569c:	06 00 00 f6 	b 24 <malloc+0x194c>
    56a0:	04 80 02 c0 	or s0, s4, s5
    56a4:	18 10 00 88 	store_32 s0, 4(s24)
    56a8:	41 00 00 88 	store_32 s2, (s1)
    56ac:	13 00 00 f6 	b 76 <malloc+0x1990>
    56b0:	20 00 00 0f 	move s1, 0
    56b4:	60 80 b0 c0 	shl s3, s0, s1
    56b8:	20 00 f2 c0 	move s1, s4
    56bc:	81 10 00 a8 	load_32 s4, 4(s1)
    56c0:	84 e0 ff 01 	and s4, s4, -8
    56c4:	84 00 00 c1 	cmpeq_i s4, s4, s0
    56c8:	64 02 00 f4 	bnz s4, 76 <malloc+0x19ac>
    56cc:	83 74 00 0a 	shr s4, s3, 29
    56d0:	63 04 00 0b 	shl s3, s3, 1
    56d4:	84 10 00 01 	and s4, s4, 4
    56d8:	a1 00 52 c0 	add_i s5, s1, s4
    56dc:	85 40 00 a8 	load_32 s4, 16(s5)
    56e0:	c4 fe ff f5 	bnz s4, -40 <malloc+0x1950>
    56e4:	78 40 00 a8 	load_32 s3, 16(s24)
    56e8:	05 40 00 05 	add_i s0, s5, 16
    56ec:	63 00 60 c1 	cmpgt_u s3, s3, s0
    56f0:	e3 24 00 f4 	bnz s3, 1180 <malloc+0x1e24>
    56f4:	40 00 00 88 	store_32 s2, (s0)
    56f8:	22 60 00 88 	store_32 s1, 24(s2)
    56fc:	42 30 00 88 	store_32 s2, 12(s2)
    5700:	42 20 00 88 	store_32 s2, 8(s2)
    5704:	18 30 00 a8 	load_32 s0, 12(s24)
    5708:	20 00 9d c1 	cmple_u s1, s0, s26
    570c:	41 02 00 f4 	bnz s1, 72 <malloc+0x19ec>
    5710:	5d fb ff f7 	b -4748 <malloc+0x71c>
    5714:	01 20 00 a8 	load_32 s0, 8(s1)
    5718:	78 40 00 a8 	load_32 s3, 16(s24)
    571c:	83 00 60 c1 	cmpgt_u s4, s3, s0
    5720:	64 23 00 f4 	bnz s4, 1132 <malloc+0x1e24>
    5724:	63 80 60 c1 	cmpgt_u s3, s3, s1
    5728:	23 23 00 f4 	bnz s3, 1124 <malloc+0x1e24>
    572c:	40 30 00 88 	store_32 s2, 12(s0)
    5730:	41 20 00 88 	store_32 s2, 8(s1)
    5734:	02 20 00 88 	store_32 s0, 8(s2)
    5738:	00 00 00 0f 	move s0, 0
    573c:	22 30 00 88 	store_32 s1, 12(s2)
    5740:	02 60 00 88 	store_32 s0, 24(s2)
    5744:	18 30 00 a8 	load_32 s0, 12(s24)
    5748:	20 00 9d c1 	cmple_u s1, s0, s26
    574c:	41 00 00 f4 	bnz s1, 8 <malloc+0x19ec>
    5750:	4d fb ff f7 	b -4812 <malloc+0x71c>
    5754:	60 03 00 0f 	move s27, 0
    5758:	18 f0 06 a0 	load_u8 s0, 444(s24)
    575c:	00 08 00 01 	and s0, s0, 2
    5760:	c0 7f ff f3 	bz s0, -4104 <malloc+0x9f0>
    5764:	f7 fb ff f7 	b -4132 <malloc+0x9d8>
    5768:	20 00 00 0f 	move s1, 0
    576c:	62 80 50 c0 	add_i s3, s2, s1
    5770:	78 60 00 88 	store_32 s3, 24(s24)
    5774:	20 80 60 c0 	sub_i s1, s0, s1
    5778:	38 30 00 88 	store_32 s1, 12(s24)
    577c:	02 00 50 c0 	add_i s0, s2, s0
    5780:	21 04 00 00 	or s1, s1, 1
    5784:	23 10 00 88 	store_32 s1, 4(s3)
    5788:	20 a0 00 0f 	move s1, 40
    578c:	20 10 00 88 	store_32 s1, 4(s0)
    5790:	a6 fe ff f7 	b -1384 <malloc+0x14c0>
    5794:	58 20 00 a8 	load_32 s2, 8(s24)
    5798:	60 23 00 05 	add_i s27, s0, 8
    579c:	42 80 51 c0 	add_i s2, s2, s3
    57a0:	58 20 00 88 	store_32 s2, 8(s24)
    57a4:	61 00 51 c0 	add_i s3, s1, s2
    57a8:	38 50 00 88 	store_32 s1, 20(s24)
    57ac:	82 04 00 00 	or s4, s2, 1
    57b0:	81 10 00 88 	store_32 s4, 4(s1)
    57b4:	43 00 00 88 	store_32 s2, (s3)
    57b8:	18 f0 06 a0 	load_u8 s0, 444(s24)
    57bc:	00 08 00 01 	and s0, s0, 2
    57c0:	c0 7c ff f3 	bz s0, -4200 <malloc+0x9f0>
    57c4:	df fb ff f7 	b -4228 <malloc+0x9d8>
    57c8:	c4 60 00 a8 	load_32 s6, 24(s4)
    57cc:	e4 30 00 a8 	load_32 s7, 12(s4)
    57d0:	07 01 02 c1 	cmpeq_i s8, s7, s4
    57d4:	a8 02 00 f4 	bnz s8, 84 <malloc+0x1ac0>
    57d8:	04 21 00 a8 	load_32 s8, 8(s4)
    57dc:	a5 00 64 c1 	cmpgt_u s5, s5, s8
    57e0:	65 1d 00 f4 	bnz s5, 940 <malloc+0x1e24>
    57e4:	a8 30 00 a8 	load_32 s5, 12(s8)
    57e8:	a5 00 12 c1 	cmpne_i s5, s5, s4
    57ec:	05 1d 00 f4 	bnz s5, 928 <malloc+0x1e24>
    57f0:	a7 20 00 a8 	load_32 s5, 8(s7)
    57f4:	a5 00 12 c1 	cmpne_i s5, s5, s4
    57f8:	a5 1c 00 f4 	bnz s5, 916 <malloc+0x1e24>
    57fc:	e8 30 00 88 	store_32 s7, 12(s8)
    5800:	07 21 00 88 	store_32 s8, 8(s7)
    5804:	e6 09 00 f2 	bz s6, 316 <malloc+0x1bd8>
    5808:	1d 00 00 f6 	b 116 <malloc+0x1b14>
    580c:	a0 04 00 0f 	move s5, 1
    5810:	d8 00 00 a8 	load_32 s6, (s24)
    5814:	a5 00 b4 c0 	shl s5, s5, s8
    5818:	a5 fc ff 03 	xor s5, s5, -1
    581c:	a6 80 12 c0 	and s5, s6, s5
    5820:	b8 00 00 88 	store_32 s5, (s24)
    5824:	47 00 00 f6 	b 284 <malloc+0x1bd8>
    5828:	24 51 00 a8 	load_32 s9, 20(s4)
    582c:	49 00 00 f4 	bnz s9, 8 <malloc+0x1acc>
    5830:	03 00 00 f6 	b 12 <malloc+0x1ad4>
    5834:	04 51 00 05 	add_i s8, s4, 20
    5838:	04 00 00 f6 	b 16 <malloc+0x1ae0>
    583c:	04 41 00 05 	add_i s8, s4, 16
    5840:	28 01 00 a8 	load_32 s9, (s8)
    5844:	e9 19 00 f2 	bz s9, 828 <malloc+0x1e18>
    5848:	e0 80 f4 c0 	move s7, s9
    584c:	27 51 00 a8 	load_32 s9, 20(s7)
    5850:	40 01 f4 c0 	move s10, s8
    5854:	07 51 00 05 	add_i s8, s7, 20
    5858:	89 ff ff f5 	bnz s9, -16 <malloc+0x1ae0>
    585c:	27 41 00 a8 	load_32 s9, 16(s7)
    5860:	07 41 00 05 	add_i s8, s7, 16
    5864:	29 ff ff f5 	bnz s9, -28 <malloc+0x1ae0>
    5868:	a5 00 65 c1 	cmpgt_u s5, s5, s10
    586c:	05 19 00 f4 	bnz s5, 800 <malloc+0x1e24>
    5870:	a0 00 00 0f 	move s5, 0
    5874:	aa 00 00 88 	store_32 s5, (s10)
    5878:	46 06 00 f2 	bz s6, 200 <malloc+0x1bd8>
    587c:	a4 70 00 a8 	load_32 s5, 28(s4)
    5880:	05 09 00 0b 	shl s8, s5, 2
    5884:	18 01 54 c0 	add_i s8, s24, s8
    5888:	28 c1 04 a8 	load_32 s9, 304(s8)
    588c:	29 01 12 c1 	cmpne_i s9, s9, s4
    5890:	49 00 00 f4 	bnz s9, 8 <malloc+0x1b30>
    5894:	0c 00 00 f6 	b 48 <malloc+0x1b5c>
    5898:	b8 40 00 a8 	load_32 s5, 16(s24)
    589c:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    58a0:	65 17 00 f4 	bnz s5, 748 <malloc+0x1e24>
    58a4:	a6 40 00 a8 	load_32 s5, 16(s6)
    58a8:	a5 00 02 c1 	cmpeq_i s5, s5, s4
    58ac:	05 02 00 f4 	bnz s5, 64 <malloc+0x1b84>
    58b0:	a0 50 00 0f 	move s5, 20
    58b4:	a6 80 52 c0 	add_i s5, s6, s5
    58b8:	e5 00 00 88 	store_32 s7, (s5)
    58bc:	27 04 00 f2 	bz s7, 132 <malloc+0x1bd8>
    58c0:	0f 00 00 f6 	b 60 <malloc+0x1b94>
    58c4:	08 c1 04 05 	add_i s8, s8, 304
    58c8:	e8 00 00 88 	store_32 s7, (s8)
    58cc:	87 01 00 f4 	bnz s7, 48 <malloc+0x1b94>
    58d0:	c0 04 00 0f 	move s6, 1
    58d4:	a6 80 b2 c0 	shl s5, s6, s5
    58d8:	d8 10 00 a8 	load_32 s6, 4(s24)
    58dc:	a5 fc ff 03 	xor s5, s5, -1
    58e0:	a6 80 12 c0 	and s5, s6, s5
    58e4:	b8 10 00 88 	store_32 s5, 4(s24)
    58e8:	16 00 00 f6 	b 88 <malloc+0x1bd8>
    58ec:	a0 40 00 0f 	move s5, 16
    58f0:	a6 80 52 c0 	add_i s5, s6, s5
    58f4:	e5 00 00 88 	store_32 s7, (s5)
    58f8:	47 02 00 f2 	bz s7, 72 <malloc+0x1bd8>
    58fc:	b8 40 00 a8 	load_32 s5, 16(s24)
    5900:	05 81 63 c1 	cmpgt_u s8, s5, s7
    5904:	48 14 00 f4 	bnz s8, 648 <malloc+0x1e24>
    5908:	c7 60 00 88 	store_32 s6, 24(s7)
    590c:	c4 40 00 a8 	load_32 s6, 16(s4)
    5910:	a6 00 00 f2 	bz s6, 20 <malloc+0x1bbc>
    5914:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    5918:	a5 13 00 f4 	bnz s5, 628 <malloc+0x1e24>
    591c:	c7 40 00 88 	store_32 s6, 16(s7)
    5920:	e6 60 00 88 	store_32 s7, 24(s6)
    5924:	a4 50 00 a8 	load_32 s5, 20(s4)
    5928:	c5 00 00 f2 	bz s5, 24 <malloc+0x1bd8>
    592c:	d8 40 00 a8 	load_32 s6, 16(s24)
    5930:	c6 80 62 c1 	cmpgt_u s6, s6, s5
    5934:	c6 12 00 f4 	bnz s6, 600 <malloc+0x1e24>
    5938:	a7 50 00 88 	store_32 s5, 20(s7)
    593c:	e5 60 00 88 	store_32 s7, 24(s5)
    5940:	42 e0 ff 01 	and s2, s2, -8
    5944:	84 00 51 c0 	add_i s4, s4, s2
    5948:	62 80 51 c0 	add_i s3, s2, s3
    594c:	44 10 00 a8 	load_32 s2, 4(s4)
    5950:	42 f8 ff 01 	and s2, s2, -2
    5954:	44 10 00 88 	store_32 s2, 4(s4)
    5958:	43 04 00 00 	or s2, s3, 1
    595c:	41 10 00 88 	store_32 s2, 4(s1)
    5960:	81 80 51 c0 	add_i s4, s1, s3
    5964:	43 fc 03 16 	cmpgt_u s2, s3, 255
    5968:	64 00 00 88 	store_32 s3, (s4)
    596c:	02 02 00 f4 	bnz s2, 64 <malloc+0x1c44>
    5970:	43 0c 00 0a 	shr s2, s3, 3
    5974:	78 00 00 a8 	load_32 s3, (s24)
    5978:	80 04 00 0f 	move s4, 1
    597c:	a2 0c 00 0b 	shl s5, s2, 3
    5980:	b8 80 52 c0 	add_i s5, s24, s5
    5984:	84 00 b1 c0 	shl s4, s4, s2
    5988:	c3 00 12 c0 	and s6, s3, s4
    598c:	45 a0 00 05 	add_i s2, s5, 40
    5990:	46 00 00 f4 	bnz s6, 8 <malloc+0x1c30>
    5994:	11 00 00 f6 	b 68 <malloc+0x1c70>
    5998:	62 20 00 a8 	load_32 s3, 8(s2)
    599c:	98 40 00 a8 	load_32 s4, 16(s24)
    59a0:	84 80 91 c1 	cmple_u s4, s4, s3
    59a4:	04 02 00 f4 	bnz s4, 64 <malloc+0x1c7c>
    59a8:	79 00 00 f6 	b 484 <malloc+0x1e24>
    59ac:	40 00 00 0f 	move s2, 0
    59b0:	a3 20 00 0a 	shr s5, s3, 8
    59b4:	80 00 f1 c0 	move s4, s2
    59b8:	05 06 00 f2 	bz s5, 192 <malloc+0x1d10>
    59bc:	9f fc 00 4f 	movehi s4, 2047
    59c0:	84 fc 7f 00 	or s4, s4, 8191
    59c4:	83 00 62 c1 	cmpgt_u s4, s3, s4
    59c8:	44 00 00 f4 	bnz s4, 8 <malloc+0x1c68>
    59cc:	0f 00 00 f6 	b 60 <malloc+0x1ca0>
    59d0:	80 7c 00 0f 	move s4, 31
    59d4:	29 00 00 f6 	b 164 <malloc+0x1d10>
    59d8:	63 00 02 c0 	or s3, s3, s4
    59dc:	78 00 00 88 	store_32 s3, (s24)
    59e0:	60 00 f1 c0 	move s3, s2
    59e4:	22 20 00 88 	store_32 s1, 8(s2)
    59e8:	60 23 00 05 	add_i s27, s0, 8
    59ec:	23 30 00 88 	store_32 s1, 12(s3)
    59f0:	61 20 00 88 	store_32 s3, 8(s1)
    59f4:	41 30 00 88 	store_32 s2, 12(s1)
    59f8:	18 f0 06 a0 	load_u8 s0, 444(s24)
    59fc:	00 08 00 01 	and s0, s0, 2
    5a00:	c0 6a ff f3 	bz s0, -4776 <malloc+0x9f0>
    5a04:	4f fb ff f7 	b -4804 <malloc+0x9d8>
    5a08:	9f 0c 00 4f 	movehi s4, 127
    5a0c:	df 04 00 4f 	movehi s6, 63
    5a10:	fe 00 00 4f 	movehi s7, 30
    5a14:	84 00 7c 00 	or s4, s4, 7936
    5a18:	85 00 52 c0 	add_i s4, s5, s4
    5a1c:	c6 00 40 00 	or s6, s6, 4096
    5a20:	84 40 00 0a 	shr s4, s4, 16
    5a24:	84 20 00 01 	and s4, s4, 8
    5a28:	a5 00 b2 c0 	shl s5, s5, s4
    5a2c:	c5 00 53 c0 	add_i s6, s5, s6
    5a30:	c6 40 00 0a 	shr s6, s6, 16
    5a34:	c6 10 00 01 	and s6, s6, 4
    5a38:	a5 00 b3 c0 	shl s5, s5, s6
    5a3c:	86 00 02 c0 	or s4, s6, s4
    5a40:	e5 80 53 c0 	add_i s7, s5, s7
    5a44:	e7 40 00 0a 	shr s7, s7, 16
    5a48:	c7 08 00 01 	and s6, s7, 2
    5a4c:	e0 38 00 0f 	move s7, 14
    5a50:	84 00 03 c0 	or s4, s4, s6
    5a54:	a5 00 b3 c0 	shl s5, s5, s6
    5a58:	87 00 62 c0 	sub_i s4, s7, s4
    5a5c:	a5 3c 00 0a 	shr s5, s5, 15
    5a60:	84 80 52 c0 	add_i s4, s4, s5
    5a64:	a4 1c 00 05 	add_i s5, s4, 7
    5a68:	a3 80 a2 c0 	shr s5, s3, s5
    5a6c:	84 04 00 0b 	shl s4, s4, 1
    5a70:	a5 04 00 01 	and s5, s5, 1
    5a74:	85 00 02 c0 	or s4, s5, s4
    5a78:	81 70 00 88 	store_32 s4, 28(s1)
    5a7c:	c4 08 00 0b 	shl s6, s4, 2
    5a80:	41 50 00 88 	store_32 s2, 20(s1)
    5a84:	f8 00 53 c0 	add_i s7, s24, s6
    5a88:	41 40 00 88 	store_32 s2, 16(s1)
    5a8c:	40 04 00 0f 	move s2, 1
    5a90:	b8 10 00 a8 	load_32 s5, 4(s24)
    5a94:	c2 00 b2 c0 	shl s6, s2, s4
    5a98:	47 c0 04 05 	add_i s2, s7, 304
    5a9c:	05 01 13 c0 	and s8, s5, s6
    5aa0:	48 00 00 f4 	bnz s8, 8 <malloc+0x1d40>
    5aa4:	08 00 00 f6 	b 32 <malloc+0x1d5c>
    5aa8:	a2 00 00 a8 	load_32 s5, (s2)
    5aac:	c4 7c 00 10 	cmpeq_i s6, s4, 31
    5ab0:	26 01 00 f4 	bnz s6, 36 <malloc+0x1d6c>
    5ab4:	40 64 00 0f 	move s2, 25
    5ab8:	84 04 00 0a 	shr s4, s4, 1
    5abc:	42 00 62 c0 	sub_i s2, s2, s4
    5ac0:	06 00 00 f6 	b 24 <malloc+0x1d70>
    5ac4:	65 00 03 c0 	or s3, s5, s6
    5ac8:	78 10 00 88 	store_32 s3, 4(s24)
    5acc:	22 00 00 88 	store_32 s1, (s2)
    5ad0:	13 00 00 f6 	b 76 <malloc+0x1db4>
    5ad4:	40 00 00 0f 	move s2, 0
    5ad8:	83 00 b1 c0 	shl s4, s3, s2
    5adc:	40 80 f2 c0 	move s2, s5
    5ae0:	a2 10 00 a8 	load_32 s5, 4(s2)
    5ae4:	a5 e0 ff 01 	and s5, s5, -8
    5ae8:	a5 80 01 c1 	cmpeq_i s5, s5, s3
    5aec:	85 02 00 f4 	bnz s5, 80 <malloc+0x1dd4>
    5af0:	a4 74 00 0a 	shr s5, s4, 29
    5af4:	84 04 00 0b 	shl s4, s4, 1
    5af8:	a5 10 00 01 	and s5, s5, 4
    5afc:	c2 80 52 c0 	add_i s6, s2, s5
    5b00:	a6 40 00 a8 	load_32 s5, 16(s6)
    5b04:	c5 fe ff f5 	bnz s5, -40 <malloc+0x1d74>
    5b08:	98 40 00 a8 	load_32 s4, 16(s24)
    5b0c:	66 40 00 05 	add_i s3, s6, 16
    5b10:	84 80 61 c1 	cmpgt_u s4, s4, s3
    5b14:	c4 03 00 f4 	bnz s4, 120 <malloc+0x1e24>
    5b18:	23 00 00 88 	store_32 s1, (s3)
    5b1c:	41 60 00 88 	store_32 s2, 24(s1)
    5b20:	60 23 00 05 	add_i s27, s0, 8
    5b24:	21 30 00 88 	store_32 s1, 12(s1)
    5b28:	21 20 00 88 	store_32 s1, 8(s1)
    5b2c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    5b30:	00 08 00 01 	and s0, s0, 2
    5b34:	20 61 ff f3 	bz s0, -5084 <malloc+0x9f0>
    5b38:	02 fb ff f7 	b -5112 <malloc+0x9d8>
    5b3c:	62 20 00 a8 	load_32 s3, 8(s2)
    5b40:	98 40 00 a8 	load_32 s4, 16(s24)
    5b44:	a4 80 61 c1 	cmpgt_u s5, s4, s3
    5b48:	25 02 00 f4 	bnz s5, 68 <malloc+0x1e24>
    5b4c:	84 00 61 c1 	cmpgt_u s4, s4, s2
    5b50:	e4 01 00 f4 	bnz s4, 60 <malloc+0x1e24>
    5b54:	23 30 00 88 	store_32 s1, 12(s3)
    5b58:	60 23 00 05 	add_i s27, s0, 8
    5b5c:	22 20 00 88 	store_32 s1, 8(s2)
    5b60:	61 20 00 88 	store_32 s3, 8(s1)
    5b64:	41 30 00 88 	store_32 s2, 12(s1)
    5b68:	40 00 00 0f 	move s2, 0
    5b6c:	41 60 00 88 	store_32 s2, 24(s1)
    5b70:	18 f0 06 a0 	load_u8 s0, 444(s24)
    5b74:	00 08 00 01 	and s0, s0, 2
    5b78:	00 5f ff f3 	bz s0, -5152 <malloc+0x9f0>
    5b7c:	f1 fa ff f7 	b -5180 <malloc+0x9d8>
    5b80:	e0 00 00 0f 	move s7, 0
    5b84:	e6 ed ff f3 	bz s6, -580 <malloc+0x1bd8>
    5b88:	3d ff ff f7 	b -780 <malloc+0x1b14>
    5b8c:	90 0a 00 f8 	call 10816 <abort>

0000000000005b90 free:
    5b90:	de 03 ff 05 	add_i sp, sp, -64
    5b94:	1e f3 00 88 	store_32 s24, 60(sp)
    5b98:	fe e3 00 88 	store_32 ra, 56(sp)
    5b9c:	80 32 00 f2 	bz s0, 1616 <free+0x65c>
    5ba0:	26 00 00 4f 	movehi s1, 6
    5ba4:	01 73 65 00 	or s24, s1, 6492
    5ba8:	38 f0 06 a0 	load_u8 s1, 444(s24)
    5bac:	41 08 00 01 	and s2, s1, 2
    5bb0:	20 e0 ff 05 	add_i s1, s0, -8
    5bb4:	e2 01 00 f2 	bz s2, 60 <free+0x60>
    5bb8:	58 00 07 05 	add_i s2, s24, 448
    5bbc:	60 04 00 0f 	move s3, 1
    5bc0:	82 00 00 aa 	load_sync s4, (s2)
    5bc4:	a0 80 f1 c0 	move s5, s3
    5bc8:	a2 00 00 8a 	store_sync s5, (s2)  
    5bcc:	a5 ff ff f3 	bz s5, -12 <free+0x30>
    5bd0:	04 01 00 f2 	bz s4, 32 <free+0x60>
    5bd4:	98 00 07 a8 	load_32 s4, 448(s24)
    5bd8:	e4 ff ff f5 	bnz s4, -4 <free+0x44>
    5bdc:	82 00 00 aa 	load_sync s4, (s2)
    5be0:	a0 80 f1 c0 	move s5, s3
    5be4:	a2 00 00 8a 	store_sync s5, (s2)  
    5be8:	a5 ff ff f3 	bz s5, -12 <free+0x4c>
    5bec:	44 ff ff f5 	bnz s4, -24 <free+0x44>
    5bf0:	b8 40 00 a8 	load_32 s5, 16(s24)
    5bf4:	41 80 82 c1 	cmplt_u s2, s1, s5
    5bf8:	a2 3f 00 f4 	bnz s2, 2036 <free+0x85c>
    5bfc:	40 f0 ff a9 	load_32 s2, -4(s0)
    5c00:	82 0c 00 01 	and s4, s2, 3
    5c04:	04 04 00 10 	cmpeq_i s0, s4, 1
    5c08:	20 3f 00 f4 	bnz s0, 2020 <free+0x85c>
    5c0c:	02 e0 ff 01 	and s0, s2, -8
    5c10:	62 04 00 01 	and s3, s2, 1
    5c14:	41 00 50 c0 	add_i s2, s1, s0
    5c18:	43 12 00 f4 	bnz s3, 584 <free+0x2d0>
    5c1c:	61 00 00 a8 	load_32 s3, (s1)
    5c20:	44 2d 00 f2 	bz s4, 1448 <free+0x638>
    5c24:	21 80 61 c0 	sub_i s1, s1, s3
    5c28:	81 80 82 c1 	cmplt_u s4, s1, s5
    5c2c:	04 3e 00 f4 	bnz s4, 1984 <free+0x85c>
    5c30:	98 50 00 a8 	load_32 s4, 20(s24)
    5c34:	03 00 50 c0 	add_i s0, s3, s0
    5c38:	84 80 00 c1 	cmpeq_i s4, s4, s1
    5c3c:	e4 03 00 f4 	bnz s4, 124 <free+0x128>
    5c40:	83 fc 03 16 	cmpgt_u s4, s3, 255
    5c44:	a4 04 00 f4 	bnz s4, 148 <free+0x148>
    5c48:	c3 0c 00 0a 	shr s6, s3, 3
    5c4c:	61 20 00 a8 	load_32 s3, 8(s1)
    5c50:	86 0c 00 0b 	shl s4, s6, 3
    5c54:	98 00 52 c0 	add_i s4, s24, s4
    5c58:	e4 a0 00 05 	add_i s7, s4, 40
    5c5c:	81 30 00 a8 	load_32 s4, 12(s1)
    5c60:	03 81 03 c1 	cmpeq_i s8, s3, s7
    5c64:	c8 00 00 f4 	bnz s8, 24 <free+0xec>
    5c68:	05 81 61 c1 	cmpgt_u s8, s5, s3
    5c6c:	08 3c 00 f4 	bnz s8, 1920 <free+0x85c>
    5c70:	03 31 00 a8 	load_32 s8, 12(s3)
    5c74:	08 81 10 c1 	cmpne_i s8, s8, s1
    5c78:	a8 3b 00 f4 	bnz s8, 1908 <free+0x85c>
    5c7c:	04 81 11 c1 	cmpne_i s8, s4, s3
    5c80:	48 00 00 f4 	bnz s8, 8 <free+0xf8>
    5c84:	26 00 00 f6 	b 152 <free+0x18c>
    5c88:	c4 80 03 c1 	cmpeq_i s6, s4, s7
    5c8c:	c6 00 00 f4 	bnz s6, 24 <free+0x114>
    5c90:	a5 00 62 c1 	cmpgt_u s5, s5, s4
    5c94:	c5 3a 00 f4 	bnz s5, 1880 <free+0x85c>
    5c98:	a4 20 00 a8 	load_32 s5, 8(s4)
    5c9c:	a5 80 10 c1 	cmpne_i s5, s5, s1
    5ca0:	65 3a 00 f4 	bnz s5, 1868 <free+0x85c>
    5ca4:	83 30 00 88 	store_32 s4, 12(s3)
    5ca8:	64 20 00 88 	store_32 s3, 8(s4)
    5cac:	62 80 90 c1 	cmple_u s3, s2, s1
    5cb0:	e3 39 00 f4 	bnz s3, 1852 <free+0x85c>
    5cb4:	6d 00 00 f6 	b 436 <free+0x2d8>
    5cb8:	62 10 00 a8 	load_32 s3, 4(s2)
    5cbc:	83 0c 00 01 	and s4, s3, 3
    5cc0:	84 0c 00 11 	cmpne_i s4, s4, 3
    5cc4:	e4 0c 00 f4 	bnz s4, 412 <free+0x2d0>
    5cc8:	18 20 00 88 	store_32 s0, 8(s24)
    5ccc:	63 f8 ff 01 	and s3, s3, -2
    5cd0:	62 10 00 88 	store_32 s3, 4(s2)
    5cd4:	cb 00 00 f6 	b 812 <free+0x470>
    5cd8:	61 60 00 a8 	load_32 s3, 24(s1)
    5cdc:	81 30 00 a8 	load_32 s4, 12(s1)
    5ce0:	c4 80 00 c1 	cmpeq_i s6, s4, s1
    5ce4:	e6 02 00 f4 	bnz s6, 92 <free+0x1b0>
    5ce8:	c1 20 00 a8 	load_32 s6, 8(s1)
    5cec:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    5cf0:	e5 37 00 f4 	bnz s5, 1788 <free+0x85c>
    5cf4:	a6 30 00 a8 	load_32 s5, 12(s6)
    5cf8:	a5 80 10 c1 	cmpne_i s5, s5, s1
    5cfc:	85 37 00 f4 	bnz s5, 1776 <free+0x85c>
    5d00:	a4 20 00 a8 	load_32 s5, 8(s4)
    5d04:	a5 80 10 c1 	cmpne_i s5, s5, s1
    5d08:	25 37 00 f4 	bnz s5, 1764 <free+0x85c>
    5d0c:	86 30 00 88 	store_32 s4, 12(s6)
    5d10:	c4 20 00 88 	store_32 s6, 8(s4)
    5d14:	63 0a 00 f2 	bz s3, 332 <free+0x2d0>
    5d18:	1f 00 00 f6 	b 124 <free+0x204>
    5d1c:	60 04 00 0f 	move s3, 1
    5d20:	98 00 00 a8 	load_32 s4, (s24)
    5d24:	63 00 b3 c0 	shl s3, s3, s6
    5d28:	63 fc ff 03 	xor s3, s3, -1
    5d2c:	64 80 11 c0 	and s3, s4, s3
    5d30:	78 00 00 88 	store_32 s3, (s24)
    5d34:	62 80 90 c1 	cmple_u s3, s2, s1
    5d38:	a3 35 00 f4 	bnz s3, 1716 <free+0x85c>
    5d3c:	4b 00 00 f6 	b 300 <free+0x2d8>
    5d40:	e1 50 00 a8 	load_32 s7, 20(s1)
    5d44:	47 00 00 f4 	bnz s7, 8 <free+0x1bc>
    5d48:	03 00 00 f6 	b 12 <free+0x1c4>
    5d4c:	c1 50 00 05 	add_i s6, s1, 20
    5d50:	04 00 00 f6 	b 16 <free+0x1d0>
    5d54:	c1 40 00 05 	add_i s6, s1, 16
    5d58:	e6 00 00 a8 	load_32 s7, (s6)
    5d5c:	c7 33 00 f2 	bz s7, 1656 <free+0x844>
    5d60:	80 80 f3 c0 	move s4, s7
    5d64:	e4 50 00 a8 	load_32 s7, 20(s4)
    5d68:	00 01 f3 c0 	move s8, s6
    5d6c:	c4 50 00 05 	add_i s6, s4, 20
    5d70:	87 ff ff f5 	bnz s7, -16 <free+0x1d0>
    5d74:	e4 40 00 a8 	load_32 s7, 16(s4)
    5d78:	c4 40 00 05 	add_i s6, s4, 16
    5d7c:	27 ff ff f5 	bnz s7, -28 <free+0x1d0>
    5d80:	a5 00 64 c1 	cmpgt_u s5, s5, s8
    5d84:	45 33 00 f4 	bnz s5, 1640 <free+0x85c>
    5d88:	a0 00 00 0f 	move s5, 0
    5d8c:	a8 00 00 88 	store_32 s5, (s8)
    5d90:	83 06 00 f2 	bz s3, 208 <free+0x2d0>
    5d94:	a1 70 00 a8 	load_32 s5, 28(s1)
    5d98:	c5 08 00 0b 	shl s6, s5, 2
    5d9c:	d8 00 53 c0 	add_i s6, s24, s6
    5da0:	e6 c0 04 a8 	load_32 s7, 304(s6)
    5da4:	e7 80 10 c1 	cmpne_i s7, s7, s1
    5da8:	47 00 00 f4 	bnz s7, 8 <free+0x220>
    5dac:	0c 00 00 f6 	b 48 <free+0x24c>
    5db0:	b8 40 00 a8 	load_32 s5, 16(s24)
    5db4:	a5 80 61 c1 	cmpgt_u s5, s5, s3
    5db8:	a5 31 00 f4 	bnz s5, 1588 <free+0x85c>
    5dbc:	a3 40 00 a8 	load_32 s5, 16(s3)
    5dc0:	a5 80 00 c1 	cmpeq_i s5, s5, s1
    5dc4:	45 02 00 f4 	bnz s5, 72 <free+0x27c>
    5dc8:	a0 50 00 0f 	move s5, 20
    5dcc:	a3 80 52 c0 	add_i s5, s3, s5
    5dd0:	85 00 00 88 	store_32 s4, (s5)
    5dd4:	64 04 00 f2 	bz s4, 140 <free+0x2d0>
    5dd8:	11 00 00 f6 	b 68 <free+0x28c>
    5ddc:	c6 c0 04 05 	add_i s6, s6, 304
    5de0:	86 00 00 88 	store_32 s4, (s6)
    5de4:	c4 01 00 f4 	bnz s4, 56 <free+0x28c>
    5de8:	60 04 00 0f 	move s3, 1
    5dec:	98 10 00 a8 	load_32 s4, 4(s24)
    5df0:	63 80 b2 c0 	shl s3, s3, s5
    5df4:	63 fc ff 03 	xor s3, s3, -1
    5df8:	64 80 11 c0 	and s3, s4, s3
    5dfc:	78 10 00 88 	store_32 s3, 4(s24)
    5e00:	62 80 90 c1 	cmple_u s3, s2, s1
    5e04:	43 2f 00 f4 	bnz s3, 1512 <free+0x85c>
    5e08:	18 00 00 f6 	b 96 <free+0x2d8>
    5e0c:	a0 40 00 0f 	move s5, 16
    5e10:	a3 80 52 c0 	add_i s5, s3, s5
    5e14:	85 00 00 88 	store_32 s4, (s5)
    5e18:	44 02 00 f2 	bz s4, 72 <free+0x2d0>
    5e1c:	b8 40 00 a8 	load_32 s5, 16(s24)
    5e20:	c5 00 62 c1 	cmpgt_u s6, s5, s4
    5e24:	46 2e 00 f4 	bnz s6, 1480 <free+0x85c>
    5e28:	64 60 00 88 	store_32 s3, 24(s4)
    5e2c:	61 40 00 a8 	load_32 s3, 16(s1)
    5e30:	a3 00 00 f2 	bz s3, 20 <free+0x2b4>
    5e34:	a5 80 61 c1 	cmpgt_u s5, s5, s3
    5e38:	a5 2d 00 f4 	bnz s5, 1460 <free+0x85c>
    5e3c:	64 40 00 88 	store_32 s3, 16(s4)
    5e40:	83 60 00 88 	store_32 s4, 24(s3)
    5e44:	61 50 00 a8 	load_32 s3, 20(s1)
    5e48:	c3 00 00 f2 	bz s3, 24 <free+0x2d0>
    5e4c:	b8 40 00 a8 	load_32 s5, 16(s24)
    5e50:	a5 80 61 c1 	cmpgt_u s5, s5, s3
    5e54:	c5 2c 00 f4 	bnz s5, 1432 <free+0x85c>
    5e58:	64 50 00 88 	store_32 s3, 20(s4)
    5e5c:	83 60 00 88 	store_32 s4, 24(s3)
    5e60:	62 80 90 c1 	cmple_u s3, s2, s1
    5e64:	43 2c 00 f4 	bnz s3, 1416 <free+0x85c>
    5e68:	62 10 00 a8 	load_32 s3, 4(s2)
    5e6c:	83 04 00 01 	and s4, s3, 1
    5e70:	e4 2b 00 f2 	bz s4, 1404 <free+0x85c>
    5e74:	83 08 00 01 	and s4, s3, 2
    5e78:	e4 04 00 f4 	bnz s4, 156 <free+0x384>
    5e7c:	98 60 00 a8 	load_32 s4, 24(s24)
    5e80:	84 00 11 c1 	cmpne_i s4, s4, s2
    5e84:	44 00 00 f4 	bnz s4, 8 <free+0x2fc>
    5e88:	45 00 00 f6 	b 276 <free+0x40c>
    5e8c:	98 50 00 a8 	load_32 s4, 20(s24)
    5e90:	84 00 11 c1 	cmpne_i s4, s4, s2
    5e94:	44 00 00 f4 	bnz s4, 8 <free+0x30c>
    5e98:	56 00 00 f6 	b 344 <free+0x460>
    5e9c:	83 fc 03 16 	cmpgt_u s4, s3, 255
    5ea0:	64 0d 00 f4 	bnz s4, 428 <free+0x4bc>
    5ea4:	c3 0c 00 0a 	shr s6, s3, 3
    5ea8:	82 20 00 a8 	load_32 s4, 8(s2)
    5eac:	a6 0c 00 0b 	shl s5, s6, 3
    5eb0:	b8 80 52 c0 	add_i s5, s24, s5
    5eb4:	e5 a0 00 05 	add_i s7, s5, 40
    5eb8:	a2 30 00 a8 	load_32 s5, 12(s2)
    5ebc:	04 81 03 c1 	cmpeq_i s8, s4, s7
    5ec0:	e8 00 00 f4 	bnz s8, 28 <free+0x34c>
    5ec4:	18 41 00 a8 	load_32 s8, 16(s24)
    5ec8:	08 01 62 c1 	cmpgt_u s8, s8, s4
    5ecc:	08 29 00 f4 	bnz s8, 1312 <free+0x85c>
    5ed0:	04 31 00 a8 	load_32 s8, 12(s4)
    5ed4:	08 01 11 c1 	cmpne_i s8, s8, s2
    5ed8:	a8 28 00 f4 	bnz s8, 1300 <free+0x85c>
    5edc:	05 01 12 c1 	cmpne_i s8, s5, s4
    5ee0:	48 00 00 f4 	bnz s8, 8 <free+0x358>
    5ee4:	e0 00 00 f6 	b 896 <free+0x6d4>
    5ee8:	c5 80 03 c1 	cmpeq_i s6, s5, s7
    5eec:	e6 00 00 f4 	bnz s6, 28 <free+0x378>
    5ef0:	d8 40 00 a8 	load_32 s6, 16(s24)
    5ef4:	c6 80 62 c1 	cmpgt_u s6, s6, s5
    5ef8:	a6 27 00 f4 	bnz s6, 1268 <free+0x85c>
    5efc:	c5 20 00 a8 	load_32 s6, 8(s5)
    5f00:	46 00 11 c1 	cmpne_i s2, s6, s2
    5f04:	42 27 00 f4 	bnz s2, 1256 <free+0x85c>
    5f08:	a4 30 00 88 	store_32 s5, 12(s4)
    5f0c:	85 20 00 88 	store_32 s4, 8(s5)
    5f10:	23 01 00 f6 	b 1164 <free+0x80c>
    5f14:	63 f8 ff 01 	and s3, s3, -2
    5f18:	62 10 00 88 	store_32 s3, 4(s2)
    5f1c:	41 00 50 c0 	add_i s2, s1, s0
    5f20:	60 04 00 00 	or s3, s0, 1
    5f24:	61 10 00 88 	store_32 s3, 4(s1)
    5f28:	02 00 00 88 	store_32 s0, (s2)
    5f2c:	40 fc 03 16 	cmpgt_u s2, s0, 255
    5f30:	02 02 00 f4 	bnz s2, 64 <free+0x3e0>
    5f34:	00 0c 00 0a 	shr s0, s0, 3
    5f38:	58 00 00 a8 	load_32 s2, (s24)
    5f3c:	60 04 00 0f 	move s3, 1
    5f40:	80 0c 00 0b 	shl s4, s0, 3
    5f44:	98 00 52 c0 	add_i s4, s24, s4
    5f48:	63 00 b0 c0 	shl s3, s3, s0
    5f4c:	a2 80 11 c0 	and s5, s2, s3
    5f50:	04 a0 00 05 	add_i s0, s4, 40
    5f54:	45 00 00 f4 	bnz s5, 8 <free+0x3cc>
    5f58:	32 00 00 f6 	b 200 <free+0x490>
    5f5c:	40 20 00 a8 	load_32 s2, 8(s0)
    5f60:	78 40 00 a8 	load_32 s3, 16(s24)
    5f64:	63 00 91 c1 	cmple_u s3, s3, s2
    5f68:	23 06 00 f4 	bnz s3, 196 <free+0x49c>
    5f6c:	20 01 00 f6 	b 1152 <free+0x85c>
    5f70:	40 00 00 0f 	move s2, 0
    5f74:	80 20 00 0a 	shr s4, s0, 8
    5f78:	60 00 f1 c0 	move s3, s2
    5f7c:	44 0c 00 f2 	bz s4, 392 <free+0x574>
    5f80:	7f fc 00 4f 	movehi s3, 2047
    5f84:	63 fc 7f 00 	or s3, s3, 8191
    5f88:	60 80 61 c1 	cmpgt_u s3, s0, s3
    5f8c:	43 00 00 f4 	bnz s3, 8 <free+0x404>
    5f90:	41 00 00 f6 	b 260 <free+0x504>
    5f94:	60 7c 00 0f 	move s3, 31
    5f98:	5b 00 00 f6 	b 364 <free+0x574>
    5f9c:	58 30 00 a8 	load_32 s2, 12(s24)
    5fa0:	02 00 50 c0 	add_i s0, s2, s0
    5fa4:	18 30 00 88 	store_32 s0, 12(s24)
    5fa8:	38 60 00 88 	store_32 s1, 24(s24)
    5fac:	40 04 00 00 	or s2, s0, 1
    5fb0:	41 10 00 88 	store_32 s2, 4(s1)
    5fb4:	58 50 00 a8 	load_32 s2, 20(s24)
    5fb8:	21 00 11 c1 	cmpne_i s1, s1, s2
    5fbc:	81 00 00 f4 	bnz s1, 16 <free+0x43c>
    5fc0:	20 00 00 0f 	move s1, 0
    5fc4:	38 50 00 88 	store_32 s1, 20(s24)
    5fc8:	38 20 00 88 	store_32 s1, 8(s24)
    5fcc:	38 70 00 a8 	load_32 s1, 28(s24)
    5fd0:	00 80 90 c1 	cmple_u s0, s0, s1
    5fd4:	a0 0f 00 f4 	bnz s0, 500 <free+0x638>
    5fd8:	00 00 00 0f 	move s0, 0
    5fdc:	05 01 00 f8 	call 1044 <sys_trim>
    5fe0:	18 f0 06 a0 	load_u8 s0, 444(s24)
    5fe4:	00 08 00 01 	and s0, s0, 2
    5fe8:	20 10 00 f2 	bz s0, 516 <free+0x65c>
    5fec:	7a 00 00 f6 	b 488 <free+0x644>
    5ff0:	58 20 00 a8 	load_32 s2, 8(s24)
    5ff4:	02 00 50 c0 	add_i s0, s2, s0
    5ff8:	18 20 00 88 	store_32 s0, 8(s24)
    5ffc:	38 50 00 88 	store_32 s1, 20(s24)
    6000:	41 00 50 c0 	add_i s2, s1, s0
    6004:	60 04 00 00 	or s3, s0, 1
    6008:	61 10 00 88 	store_32 s3, 4(s1)
    600c:	02 00 00 88 	store_32 s0, (s2)
    6010:	18 f0 06 a0 	load_u8 s0, 444(s24)
    6014:	00 08 00 01 	and s0, s0, 2
    6018:	a0 0e 00 f2 	bz s0, 468 <free+0x65c>
    601c:	6e 00 00 f6 	b 440 <free+0x644>
    6020:	42 80 01 c0 	or s2, s2, s3
    6024:	58 00 00 88 	store_32 s2, (s24)
    6028:	40 00 f0 c0 	move s2, s0
    602c:	20 20 00 88 	store_32 s1, 8(s0)
    6030:	22 30 00 88 	store_32 s1, 12(s2)
    6034:	41 20 00 88 	store_32 s2, 8(s1)
    6038:	01 30 00 88 	store_32 s0, 12(s1)
    603c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    6040:	00 08 00 01 	and s0, s0, 2
    6044:	40 0d 00 f2 	bz s0, 424 <free+0x65c>
    6048:	63 00 00 f6 	b 396 <free+0x644>
    604c:	82 60 00 a8 	load_32 s4, 24(s2)
    6050:	a2 30 00 a8 	load_32 s5, 12(s2)
    6054:	c5 00 01 c1 	cmpeq_i s6, s5, s2
    6058:	46 11 00 f4 	bnz s6, 552 <free+0x6f0>
    605c:	c2 20 00 a8 	load_32 s6, 8(s2)
    6060:	f8 40 00 a8 	load_32 s7, 16(s24)
    6064:	e7 00 63 c1 	cmpgt_u s7, s7, s6
    6068:	27 1c 00 f4 	bnz s7, 900 <free+0x85c>
    606c:	e6 30 00 a8 	load_32 s7, 12(s6)
    6070:	e7 00 11 c1 	cmpne_i s7, s7, s2
    6074:	c7 1b 00 f4 	bnz s7, 888 <free+0x85c>
    6078:	e5 20 00 a8 	load_32 s7, 8(s5)
    607c:	e7 00 11 c1 	cmpne_i s7, s7, s2
    6080:	67 1b 00 f4 	bnz s7, 876 <free+0x85c>
    6084:	a6 30 00 88 	store_32 s5, 12(s6)
    6088:	c5 20 00 88 	store_32 s6, 8(s5)
    608c:	84 18 00 f2 	bz s4, 784 <free+0x80c>
    6090:	92 00 00 f6 	b 584 <free+0x748>
    6094:	7f 0c 00 4f 	movehi s3, 127
    6098:	bf 04 00 4f 	movehi s5, 63
    609c:	de 00 00 4f 	movehi s6, 30
    60a0:	63 00 7c 00 	or s3, s3, 7936
    60a4:	64 80 51 c0 	add_i s3, s4, s3
    60a8:	a5 00 40 00 	or s5, s5, 4096
    60ac:	63 40 00 0a 	shr s3, s3, 16
    60b0:	63 20 00 01 	and s3, s3, 8
    60b4:	84 80 b1 c0 	shl s4, s4, s3
    60b8:	a4 80 52 c0 	add_i s5, s4, s5
    60bc:	a5 40 00 0a 	shr s5, s5, 16
    60c0:	a5 10 00 01 	and s5, s5, 4
    60c4:	84 80 b2 c0 	shl s4, s4, s5
    60c8:	65 80 01 c0 	or s3, s5, s3
    60cc:	c4 00 53 c0 	add_i s6, s4, s6
    60d0:	c6 40 00 0a 	shr s6, s6, 16
    60d4:	a6 08 00 01 	and s5, s6, 2
    60d8:	c0 38 00 0f 	move s6, 14
    60dc:	63 80 02 c0 	or s3, s3, s5
    60e0:	84 80 b2 c0 	shl s4, s4, s5
    60e4:	66 80 61 c0 	sub_i s3, s6, s3
    60e8:	84 3c 00 0a 	shr s4, s4, 15
    60ec:	63 00 52 c0 	add_i s3, s3, s4
    60f0:	83 1c 00 05 	add_i s4, s3, 7
    60f4:	80 00 a2 c0 	shr s4, s0, s4
    60f8:	63 04 00 0b 	shl s3, s3, 1
    60fc:	84 04 00 01 	and s4, s4, 1
    6100:	64 80 01 c0 	or s3, s4, s3
    6104:	61 70 00 88 	store_32 s3, 28(s1)
    6108:	a3 08 00 0b 	shl s5, s3, 2
    610c:	41 50 00 88 	store_32 s2, 20(s1)
    6110:	d8 80 52 c0 	add_i s6, s24, s5
    6114:	41 40 00 88 	store_32 s2, 16(s1)
    6118:	40 04 00 0f 	move s2, 1
    611c:	98 10 00 a8 	load_32 s4, 4(s24)
    6120:	a2 80 b1 c0 	shl s5, s2, s3
    6124:	46 c0 04 05 	add_i s2, s6, 304
    6128:	e4 80 12 c0 	and s7, s4, s5
    612c:	47 00 00 f4 	bnz s7, 8 <free+0x5a4>
    6130:	08 00 00 f6 	b 32 <free+0x5c0>
    6134:	82 00 00 a8 	load_32 s4, (s2)
    6138:	a3 7c 00 10 	cmpeq_i s5, s3, 31
    613c:	25 01 00 f4 	bnz s5, 36 <free+0x5d0>
    6140:	40 64 00 0f 	move s2, 25
    6144:	63 04 00 0a 	shr s3, s3, 1
    6148:	42 80 61 c0 	sub_i s2, s2, s3
    614c:	06 00 00 f6 	b 24 <free+0x5d4>
    6150:	04 80 02 c0 	or s0, s4, s5
    6154:	18 10 00 88 	store_32 s0, 4(s24)
    6158:	22 00 00 88 	store_32 s1, (s2)
    615c:	13 00 00 f6 	b 76 <free+0x618>
    6160:	40 00 00 0f 	move s2, 0
    6164:	60 00 b1 c0 	shl s3, s0, s2
    6168:	40 00 f2 c0 	move s2, s4
    616c:	82 10 00 a8 	load_32 s4, 4(s2)
    6170:	84 e0 ff 01 	and s4, s4, -8
    6174:	84 00 00 c1 	cmpeq_i s4, s4, s0
    6178:	24 04 00 f4 	bnz s4, 132 <free+0x66c>
    617c:	83 74 00 0a 	shr s4, s3, 29
    6180:	63 04 00 0b 	shl s3, s3, 1
    6184:	84 10 00 01 	and s4, s4, 4
    6188:	a2 00 52 c0 	add_i s5, s2, s4
    618c:	85 40 00 a8 	load_32 s4, 16(s5)
    6190:	c4 fe ff f5 	bnz s4, -40 <free+0x5d8>
    6194:	78 40 00 a8 	load_32 s3, 16(s24)
    6198:	05 40 00 05 	add_i s0, s5, 16
    619c:	63 00 60 c1 	cmpgt_u s3, s3, s0
    61a0:	63 12 00 f4 	bnz s3, 588 <free+0x85c>
    61a4:	20 00 00 88 	store_32 s1, (s0)
    61a8:	41 60 00 88 	store_32 s2, 24(s1)
    61ac:	21 30 00 88 	store_32 s1, 12(s1)
    61b0:	21 20 00 88 	store_32 s1, 8(s1)
    61b4:	18 80 00 a8 	load_32 s0, 32(s24)
    61b8:	00 fc ff 05 	add_i s0, s0, -1
    61bc:	18 80 00 88 	store_32 s0, 32(s24)
    61c0:	40 00 00 f4 	bnz s0, 8 <free+0x638>
    61c4:	1e 00 00 f6 	b 120 <free+0x6ac>
    61c8:	18 f0 06 a0 	load_u8 s0, 444(s24)
    61cc:	00 08 00 01 	and s0, s0, 2
    61d0:	e0 00 00 f2 	bz s0, 28 <free+0x65c>
    61d4:	18 00 07 05 	add_i s0, s24, 448
    61d8:	20 00 00 0f 	move s1, 0
    61dc:	40 00 00 aa 	load_sync s2, (s0)
    61e0:	40 80 f0 c0 	move s2, s1
    61e4:	40 00 00 8a 	store_sync s2, (s0)  
    61e8:	a2 ff ff f3 	bz s2, -12 <free+0x64c>
    61ec:	fe e3 00 a8 	load_32 ra, 56(sp)
    61f0:	1e f3 00 a8 	load_32 s24, 60(sp)
    61f4:	de 03 01 05 	add_i sp, sp, 64
    61f8:	1f 00 00 f0 	ret
    61fc:	02 20 00 a8 	load_32 s0, 8(s2)
    6200:	78 40 00 a8 	load_32 s3, 16(s24)
    6204:	83 00 60 c1 	cmpgt_u s4, s3, s0
    6208:	24 0f 00 f4 	bnz s4, 484 <free+0x85c>
    620c:	63 00 61 c1 	cmpgt_u s3, s3, s2
    6210:	e3 0e 00 f4 	bnz s3, 476 <free+0x85c>
    6214:	20 30 00 88 	store_32 s1, 12(s0)
    6218:	22 20 00 88 	store_32 s1, 8(s2)
    621c:	01 20 00 88 	store_32 s0, 8(s1)
    6220:	00 00 00 0f 	move s0, 0
    6224:	41 30 00 88 	store_32 s2, 12(s1)
    6228:	01 60 00 88 	store_32 s0, 24(s1)
    622c:	18 80 00 a8 	load_32 s0, 32(s24)
    6230:	00 fc ff 05 	add_i s0, s0, -1
    6234:	18 80 00 88 	store_32 s0, 32(s24)
    6238:	80 fc ff f5 	bnz s0, -112 <free+0x638>
    623c:	18 30 07 05 	add_i s0, s24, 460
    6240:	20 00 00 a8 	load_32 s1, (s0)
    6244:	01 20 00 05 	add_i s0, s1, 8
    6248:	c1 ff ff f5 	bnz s1, -8 <free+0x6b0>
    624c:	00 fc ff 0f 	move s0, -1
    6250:	18 80 00 88 	store_32 s0, 32(s24)
    6254:	18 f0 06 a0 	load_u8 s0, 444(s24)
    6258:	00 08 00 01 	and s0, s0, 2
    625c:	80 fc ff f3 	bz s0, -112 <free+0x65c>
    6260:	dd ff ff f7 	b -140 <free+0x644>
    6264:	40 04 00 0f 	move s2, 1
    6268:	98 00 00 a8 	load_32 s4, (s24)
    626c:	42 00 b3 c0 	shl s2, s2, s6
    6270:	42 fc ff 03 	xor s2, s2, -1
    6274:	44 00 11 c0 	and s2, s4, s2
    6278:	58 00 00 88 	store_32 s2, (s24)
    627c:	48 00 00 f6 	b 288 <free+0x80c>
    6280:	e2 50 00 a8 	load_32 s7, 20(s2)
    6284:	47 00 00 f4 	bnz s7, 8 <free+0x6fc>
    6288:	03 00 00 f6 	b 12 <free+0x704>
    628c:	c2 50 00 05 	add_i s6, s2, 20
    6290:	04 00 00 f6 	b 16 <free+0x710>
    6294:	c2 40 00 05 	add_i s6, s2, 16
    6298:	e6 00 00 a8 	load_32 s7, (s6)
    629c:	27 0a 00 f2 	bz s7, 324 <free+0x850>
    62a0:	a0 80 f3 c0 	move s5, s7
    62a4:	e5 50 00 a8 	load_32 s7, 20(s5)
    62a8:	00 01 f3 c0 	move s8, s6
    62ac:	c5 50 00 05 	add_i s6, s5, 20
    62b0:	87 ff ff f5 	bnz s7, -16 <free+0x710>
    62b4:	e5 40 00 a8 	load_32 s7, 16(s5)
    62b8:	c5 40 00 05 	add_i s6, s5, 16
    62bc:	27 ff ff f5 	bnz s7, -28 <free+0x710>
    62c0:	d8 40 00 a8 	load_32 s6, 16(s24)
    62c4:	c6 00 64 c1 	cmpgt_u s6, s6, s8
    62c8:	26 09 00 f4 	bnz s6, 292 <free+0x85c>
    62cc:	c0 00 00 0f 	move s6, 0
    62d0:	c8 00 00 88 	store_32 s6, (s8)
    62d4:	44 06 00 f2 	bz s4, 200 <free+0x80c>
    62d8:	c2 70 00 a8 	load_32 s6, 28(s2)
    62dc:	e6 08 00 0b 	shl s7, s6, 2
    62e0:	f8 80 53 c0 	add_i s7, s24, s7
    62e4:	07 c1 04 a8 	load_32 s8, 304(s7)
    62e8:	08 01 11 c1 	cmpne_i s8, s8, s2
    62ec:	48 00 00 f4 	bnz s8, 8 <free+0x764>
    62f0:	0c 00 00 f6 	b 48 <free+0x790>
    62f4:	d8 40 00 a8 	load_32 s6, 16(s24)
    62f8:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    62fc:	86 07 00 f4 	bnz s6, 240 <free+0x85c>
    6300:	c4 40 00 a8 	load_32 s6, 16(s4)
    6304:	c6 00 01 c1 	cmpeq_i s6, s6, s2
    6308:	06 02 00 f4 	bnz s6, 64 <free+0x7b8>
    630c:	c0 50 00 0f 	move s6, 20
    6310:	c4 00 53 c0 	add_i s6, s4, s6
    6314:	a6 00 00 88 	store_32 s5, (s6)
    6318:	25 04 00 f2 	bz s5, 132 <free+0x80c>
    631c:	0f 00 00 f6 	b 60 <free+0x7c8>
    6320:	e7 c0 04 05 	add_i s7, s7, 304
    6324:	a7 00 00 88 	store_32 s5, (s7)
    6328:	85 01 00 f4 	bnz s5, 48 <free+0x7c8>
    632c:	40 04 00 0f 	move s2, 1
    6330:	98 10 00 a8 	load_32 s4, 4(s24)
    6334:	42 00 b3 c0 	shl s2, s2, s6
    6338:	42 fc ff 03 	xor s2, s2, -1
    633c:	44 00 11 c0 	and s2, s4, s2
    6340:	58 10 00 88 	store_32 s2, 4(s24)
    6344:	16 00 00 f6 	b 88 <free+0x80c>
    6348:	c0 40 00 0f 	move s6, 16
    634c:	c4 00 53 c0 	add_i s6, s4, s6
    6350:	a6 00 00 88 	store_32 s5, (s6)
    6354:	45 02 00 f2 	bz s5, 72 <free+0x80c>
    6358:	d8 40 00 a8 	load_32 s6, 16(s24)
    635c:	e6 80 62 c1 	cmpgt_u s7, s6, s5
    6360:	67 04 00 f4 	bnz s7, 140 <free+0x85c>
    6364:	85 60 00 88 	store_32 s4, 24(s5)
    6368:	82 40 00 a8 	load_32 s4, 16(s2)
    636c:	a4 00 00 f2 	bz s4, 20 <free+0x7f0>
    6370:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    6374:	c6 03 00 f4 	bnz s6, 120 <free+0x85c>
    6378:	85 40 00 88 	store_32 s4, 16(s5)
    637c:	a4 60 00 88 	store_32 s5, 24(s4)
    6380:	42 50 00 a8 	load_32 s2, 20(s2)
    6384:	c2 00 00 f2 	bz s2, 24 <free+0x80c>
    6388:	98 40 00 a8 	load_32 s4, 16(s24)
    638c:	84 00 61 c1 	cmpgt_u s4, s4, s2
    6390:	e4 02 00 f4 	bnz s4, 92 <free+0x85c>
    6394:	45 50 00 88 	store_32 s2, 20(s5)
    6398:	a2 60 00 88 	store_32 s5, 24(s2)
    639c:	43 e0 ff 01 	and s2, s3, -8
    63a0:	02 00 50 c0 	add_i s0, s2, s0
    63a4:	41 00 50 c0 	add_i s2, s1, s0
    63a8:	60 04 00 00 	or s3, s0, 1
    63ac:	61 10 00 88 	store_32 s3, 4(s1)
    63b0:	02 00 00 88 	store_32 s0, (s2)
    63b4:	58 50 00 a8 	load_32 s2, 20(s24)
    63b8:	41 00 11 c1 	cmpne_i s2, s1, s2
    63bc:	82 db ff f5 	bnz s2, -1168 <free+0x39c>
    63c0:	18 20 00 88 	store_32 s0, 8(s24)
    63c4:	18 f0 06 a0 	load_u8 s0, 444(s24)
    63c8:	00 08 00 01 	and s0, s0, 2
    63cc:	00 f1 ff f3 	bz s0, -480 <free+0x65c>
    63d0:	81 ff ff f7 	b -508 <free+0x644>
    63d4:	80 00 00 0f 	move s4, 0
    63d8:	43 d4 ff f3 	bz s3, -1400 <free+0x2d0>
    63dc:	6e fe ff f7 	b -1608 <free+0x204>
    63e0:	a0 00 00 0f 	move s5, 0
    63e4:	c4 fd ff f3 	bz s4, -72 <free+0x80c>
    63e8:	bc ff ff f7 	b -272 <free+0x748>
    63ec:	78 08 00 f8 	call 8672 <abort>

00000000000063f0 sys_trim:
    63f0:	de 03 ff 05 	add_i sp, sp, -64
    63f4:	1e f3 00 88 	store_32 s24, 60(sp)
    63f8:	3e e3 00 88 	store_32 s25, 56(sp)
    63fc:	5e d3 00 88 	store_32 s26, 52(sp)
    6400:	7e c3 00 88 	store_32 s27, 48(sp)
    6404:	fe b3 00 88 	store_32 ra, 44(sp)
    6408:	26 00 00 4f 	movehi s1, 6
    640c:	61 13 65 00 	or s27, s1, 6468
    6410:	3b 00 00 a8 	load_32 s1, (s27)
    6414:	61 05 00 f4 	bnz s1, 172 <sys_trim+0xd0>
    6418:	26 00 00 4f 	movehi s1, 6
    641c:	40 04 00 0f 	move s2, 1
    6420:	21 e0 6c 00 	or s1, s1, 6968
    6424:	61 00 00 aa 	load_sync s3, (s1)
    6428:	80 00 f1 c0 	move s4, s2
    642c:	81 00 00 8a 	store_sync s4, (s1)  
    6430:	a4 ff ff f3 	bz s4, -12 <sys_trim+0x34>
    6434:	03 01 00 f2 	bz s3, 32 <sys_trim+0x64>
    6438:	61 00 00 a8 	load_32 s3, (s1)
    643c:	e3 ff ff f5 	bnz s3, -4 <sys_trim+0x48>
    6440:	61 00 00 aa 	load_sync s3, (s1)
    6444:	80 00 f1 c0 	move s4, s2
    6448:	81 00 00 8a 	store_sync s4, (s1)  
    644c:	a4 ff ff f3 	bz s4, -12 <sys_trim+0x50>
    6450:	43 ff ff f5 	bnz s3, -24 <sys_trim+0x48>
    6454:	5b 00 00 a8 	load_32 s2, (s27)
    6458:	a2 02 00 f4 	bnz s2, 84 <sys_trim+0xbc>
    645c:	40 00 40 0f 	move s2, 4096
    6460:	5b 20 00 88 	store_32 s2, 8(s27)
    6464:	5b 10 00 88 	store_32 s2, 4(s27)
    6468:	40 fc ff 0f 	move s2, -1
    646c:	5b 30 00 88 	store_32 s2, 12(s27)
    6470:	46 00 00 4f 	movehi s2, 6
    6474:	60 20 00 4f 	movehi s3, 256
    6478:	7b 40 00 88 	store_32 s3, 16(s27)
    647c:	60 08 00 0f 	move s3, 2
    6480:	7b 50 00 88 	store_32 s3, 20(s27)
    6484:	42 70 65 00 	or s2, s2, 6492
    6488:	aa 54 55 4f 	movehi s5, 174762
    648c:	80 00 00 0f 	move s4, 0
    6490:	62 f0 06 88 	store_32 s3, 444(s2)
    6494:	7e a0 00 05 	add_i s3, sp, 40
    6498:	82 00 07 88 	store_32 s4, 448(s2)
    649c:	45 60 55 00 	or s2, s5, 5464
    64a0:	63 c0 ff 01 	and s3, s3, -16
    64a4:	43 00 31 c0 	xor s2, s3, s2
    64a8:	5b 00 00 88 	store_32 s2, (s27)
    64ac:	40 00 00 0f 	move s2, 0
    64b0:	61 00 00 aa 	load_sync s3, (s1)
    64b4:	60 00 f1 c0 	move s3, s2
    64b8:	61 00 00 8a 	store_sync s3, (s1)  
    64bc:	a3 ff ff f3 	bz s3, -12 <sys_trim+0xc0>
    64c0:	20 fc fe 16 	cmpgt_u s1, s0, -65
    64c4:	60 00 00 0f 	move s3, 0
    64c8:	a1 0a 00 f4 	bnz s1, 340 <sys_trim+0x22c>
    64cc:	26 00 00 4f 	movehi s1, 6
    64d0:	81 70 65 00 	or s4, s1, 6492
    64d4:	44 63 00 a8 	load_32 s26, 24(s4)
    64d8:	3a 0a 00 f2 	bz s26, 324 <sys_trim+0x22c>
    64dc:	24 30 00 a8 	load_32 s1, 12(s4)
    64e0:	40 a0 00 05 	add_i s2, s0, 40
    64e4:	41 00 91 c1 	cmple_u s2, s1, s2
    64e8:	e2 08 00 f4 	bnz s2, 284 <sys_trim+0x214>
    64ec:	40 5c ff 0f 	move s2, -41
    64f0:	7e 80 00 88 	store_32 s3, 32(sp)
    64f4:	1b 23 00 a8 	load_32 s24, 8(s27)
    64f8:	02 00 60 c0 	sub_i s0, s2, s0
    64fc:	00 80 50 c0 	add_i s0, s0, s1
    6500:	20 00 fc c0 	move s1, s24
    6504:	9e 90 00 88 	store_32 s4, 36(sp)
    6508:	00 00 5c c0 	add_i s0, s0, s24
    650c:	19 15 00 f8 	call 21604 <__udivsi3>
    6510:	9e 90 00 a8 	load_32 s4, 36(sp)
    6514:	00 fc ff 05 	add_i s0, s0, -1
    6518:	24 13 07 05 	add_i s25, s4, 452
    651c:	39 00 00 a8 	load_32 s1, (s25)
    6520:	41 00 6d c1 	cmpgt_u s2, s1, s26
    6524:	42 00 00 f4 	bnz s2, 8 <sys_trim+0x13c>
    6528:	05 00 00 f6 	b 20 <sys_trim+0x14c>
    652c:	39 23 00 a8 	load_32 s25, 8(s25)
    6530:	39 00 00 a8 	load_32 s1, (s25)
    6534:	41 00 6d c1 	cmpgt_u s2, s1, s26
    6538:	a2 ff ff f5 	bnz s2, -12 <sys_trim+0x13c>
    653c:	59 10 00 a8 	load_32 s2, 4(s25)
    6540:	21 00 51 c0 	add_i s1, s1, s2
    6544:	21 00 6d c1 	cmpgt_u s1, s1, s26
    6548:	41 00 00 f4 	bnz s1, 8 <sys_trim+0x160>
    654c:	f8 ff ff f7 	b -32 <sys_trim+0x13c>
    6550:	39 30 00 a0 	load_u8 s1, 12(s25)
    6554:	7e 80 00 a8 	load_32 s3, 32(sp)
    6558:	21 20 00 01 	and s1, s1, 8
    655c:	41 05 00 f4 	bnz s1, 168 <sys_trim+0x214>
    6560:	3f fc 7f 4f 	movehi s1, 262143
    6564:	40 00 7c c0 	mull_i s2, s0, s24
    6568:	01 f8 7f 00 	or s0, s1, 8190
    656c:	02 00 60 c1 	cmpgt_u s0, s2, s0
    6570:	40 00 00 f4 	bnz s0, 8 <sys_trim+0x188>
    6574:	03 00 00 f6 	b 12 <sys_trim+0x190>
    6578:	00 00 80 4f 	movehi s0, 262144
    657c:	40 00 6c c0 	sub_i s2, s0, s24
    6580:	06 00 00 4f 	movehi s0, 6
    6584:	00 07 00 0f 	move s24, 1
    6588:	40 e3 6c 00 	or s26, s0, 6968
    658c:	1a 00 00 aa 	load_sync s0, (s26)
    6590:	20 00 fc c0 	move s1, s24
    6594:	3a 00 00 8a 	store_sync s1, (s26)  
    6598:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x19c>
    659c:	5e 60 00 88 	store_32 s2, 24(sp)
    65a0:	00 01 00 f2 	bz s0, 32 <sys_trim+0x1d0>
    65a4:	1a 00 00 a8 	load_32 s0, (s26)
    65a8:	e0 ff ff f5 	bnz s0, -4 <sys_trim+0x1b4>
    65ac:	1a 00 00 aa 	load_sync s0, (s26)
    65b0:	20 00 fc c0 	move s1, s24
    65b4:	3a 00 00 8a 	store_sync s1, (s26)  
    65b8:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x1bc>
    65bc:	40 ff ff f5 	bnz s0, -24 <sys_trim+0x1b4>
    65c0:	00 00 00 0f 	move s0, 0
    65c4:	1e 70 00 88 	store_32 s0, 28(sp)
    65c8:	b7 0b 00 f8 	call 11996 <sbrk>
    65cc:	39 00 00 a8 	load_32 s1, (s25)
    65d0:	59 10 00 a8 	load_32 s2, 4(s25)
    65d4:	60 00 f0 c0 	move s3, s0
    65d8:	01 00 51 c0 	add_i s0, s1, s2
    65dc:	03 00 10 c1 	cmpne_i s0, s3, s0
    65e0:	40 00 00 f4 	bnz s0, 8 <sys_trim+0x1f8>
    65e4:	17 00 00 f6 	b 92 <sys_trim+0x250>
    65e8:	9e 90 00 a8 	load_32 s4, 36(sp)
    65ec:	7e 80 00 a8 	load_32 s3, 32(sp)
    65f0:	3e 70 00 a8 	load_32 s1, 28(sp)
    65f4:	1a 00 00 aa 	load_sync s0, (s26)
    65f8:	00 80 f0 c0 	move s0, s1
    65fc:	1a 00 00 8a 	store_sync s0, (s26)  
    6600:	a0 ff ff f3 	bz s0, -12 <sys_trim+0x204>
    6604:	04 30 00 a8 	load_32 s0, 12(s4)
    6608:	24 70 00 a8 	load_32 s1, 28(s4)
    660c:	00 80 90 c1 	cmple_u s0, s0, s1
    6610:	60 00 00 f4 	bnz s0, 12 <sys_trim+0x22c>
    6614:	00 fc ff 0f 	move s0, -1
    6618:	04 70 00 88 	store_32 s0, 28(s4)
    661c:	00 83 f1 c0 	move s24, s3
    6620:	00 00 fc c0 	move s0, s24
    6624:	fe b3 00 a8 	load_32 ra, 44(sp)
    6628:	7e c3 00 a8 	load_32 s27, 48(sp)
    662c:	5e d3 00 a8 	load_32 s26, 52(sp)
    6630:	3e e3 00 a8 	load_32 s25, 56(sp)
    6634:	1e f3 00 a8 	load_32 s24, 60(sp)
    6638:	de 03 01 05 	add_i sp, sp, 64
    663c:	1f 00 00 f0 	ret
    6640:	1e 60 00 a8 	load_32 s0, 24(sp)
    6644:	3e 70 00 a8 	load_32 s1, 28(sp)
    6648:	7e 60 00 88 	store_32 s3, 24(sp)
    664c:	01 00 60 c0 	sub_i s0, s1, s0
    6650:	95 0b 00 f8 	call 11860 <sbrk>
    6654:	1e 50 00 88 	store_32 s0, 20(sp)
    6658:	1e 70 00 a8 	load_32 s0, 28(sp)
    665c:	92 0b 00 f8 	call 11848 <sbrk>
    6660:	5e 60 00 a8 	load_32 s2, 24(sp)
    6664:	3e 50 00 a8 	load_32 s1, 20(sp)
    6668:	21 fc ff 10 	cmpeq_i s1, s1, -1
    666c:	e1 fb ff f5 	bnz s1, -132 <sys_trim+0x1f8>
    6670:	20 00 81 c1 	cmplt_u s1, s0, s2
    6674:	41 00 00 f4 	bnz s1, 8 <sys_trim+0x28c>
    6678:	dc ff ff f7 	b -144 <sys_trim+0x1f8>
    667c:	be 70 00 a8 	load_32 s5, 28(sp)
    6680:	02 00 60 c0 	sub_i s0, s2, s0
    6684:	3a 00 00 aa 	load_sync s1, (s26)
    6688:	20 80 f2 c0 	move s1, s5
    668c:	3a 00 00 8a 	store_sync s1, (s26)  
    6690:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x294>
    6694:	9e 90 00 a8 	load_32 s4, 36(sp)
    6698:	7e 80 00 a8 	load_32 s3, 32(sp)
    669c:	40 fb ff f3 	bz s0, -152 <sys_trim+0x214>
    66a0:	39 10 00 a8 	load_32 s1, 4(s25)
    66a4:	21 00 60 c0 	sub_i s1, s1, s0
    66a8:	39 10 00 88 	store_32 s1, 4(s25)
    66ac:	24 c0 06 a8 	load_32 s1, 432(s4)
    66b0:	21 00 60 c0 	sub_i s1, s1, s0
    66b4:	24 c0 06 88 	store_32 s1, 432(s4)
    66b8:	24 60 00 a8 	load_32 s1, 24(s4)
    66bc:	64 30 00 a8 	load_32 s3, 12(s4)
    66c0:	41 20 00 05 	add_i s2, s1, 8
    66c4:	03 00 60 c0 	sub_i s0, s3, s0
    66c8:	42 1c 00 01 	and s2, s2, 7
    66cc:	42 00 00 10 	cmpeq_i s2, s2, 0
    66d0:	82 00 00 f4 	bnz s2, 16 <sys_trim+0x2f0>
    66d4:	40 e0 ff 0f 	move s2, -8
    66d8:	42 80 60 c0 	sub_i s2, s2, s1
    66dc:	a2 1c 00 01 	and s5, s2, 7
    66e0:	41 80 52 c0 	add_i s2, s1, s5
    66e4:	44 60 00 88 	store_32 s2, 24(s4)
    66e8:	60 80 62 c0 	sub_i s3, s0, s5
    66ec:	64 30 00 88 	store_32 s3, 12(s4)
    66f0:	01 00 50 c0 	add_i s0, s1, s0
    66f4:	20 a0 00 0f 	move s1, 40
    66f8:	63 04 00 00 	or s3, s3, 1
    66fc:	62 10 00 88 	store_32 s3, 4(s2)
    6700:	20 10 00 88 	store_32 s1, 4(s0)
    6704:	1b 40 00 a8 	load_32 s0, 16(s27)
    6708:	04 70 00 88 	store_32 s0, 28(s4)
    670c:	c5 ff ff f7 	b -236 <sys_trim+0x230>

0000000000006710 calloc:
    6710:	de 03 ff 05 	add_i sp, sp, -64
    6714:	1e f3 00 88 	store_32 s24, 60(sp)
    6718:	3e e3 00 88 	store_32 s25, 56(sp)
    671c:	fe d3 00 88 	store_32 ra, 52(sp)
    6720:	20 83 f0 c0 	move s25, s1
    6724:	20 00 f0 c0 	move s1, s0
    6728:	81 01 00 f2 	bz s1, 48 <calloc+0x48>
    672c:	19 80 00 c0 	or s0, s25, s1
    6730:	48 00 00 4f 	movehi s2, 8
    6734:	19 83 70 c0 	mull_i s24, s25, s1
    6738:	00 00 81 c1 	cmplt_u s0, s0, s2
    673c:	00 01 00 f4 	bnz s0, 32 <calloc+0x4c>
    6740:	00 00 fc c0 	move s0, s24
    6744:	8b 14 00 f8 	call 21036 <__udivsi3>
    6748:	00 80 0c c1 	cmpeq_i s0, s0, s25
    674c:	80 00 00 f4 	bnz s0, 16 <calloc+0x4c>
    6750:	00 ff ff 0f 	move s24, -1
    6754:	02 00 00 f6 	b 8 <calloc+0x4c>
    6758:	00 03 00 0f 	move s24, 0
    675c:	00 00 fc c0 	move s0, s24
    6760:	82 f5 ff f9 	call -10744 <malloc>
    6764:	fe d3 00 a8 	load_32 ra, 52(sp)
    6768:	3e e3 00 a8 	load_32 s25, 56(sp)
    676c:	1e f3 00 a8 	load_32 s24, 60(sp)
    6770:	de 03 01 05 	add_i sp, sp, 64
    6774:	1f 00 00 f0 	ret

0000000000006778 realloc:
    6778:	de 03 ff 05 	add_i sp, sp, -64
    677c:	1e f3 00 88 	store_32 s24, 60(sp)
    6780:	3e e3 00 88 	store_32 s25, 56(sp)
    6784:	5e d3 00 88 	store_32 s26, 52(sp)
    6788:	7e c3 00 88 	store_32 s27, 48(sp)
    678c:	fe b3 00 88 	store_32 ra, 44(sp)
    6790:	20 83 f0 c0 	move s25, s1
    6794:	00 03 f0 c0 	move s24, s0
    6798:	58 00 00 f4 	bnz s24, 8 <realloc+0x28>
    679c:	09 00 00 f6 	b 36 <realloc+0x48>
    67a0:	19 fc fe 16 	cmpgt_u s0, s25, -65
    67a4:	40 03 00 0f 	move s26, 0
    67a8:	a0 08 00 f4 	bnz s0, 276 <realloc+0x144>
    67ac:	19 2c 00 18 	cmplt_u s0, s25, 11
    67b0:	00 01 00 f4 	bnz s0, 32 <realloc+0x58>
    67b4:	19 2c 00 05 	add_i s0, s25, 11
    67b8:	20 e0 ff 01 	and s1, s0, -8
    67bc:	06 00 00 f6 	b 24 <realloc+0x5c>
    67c0:	00 80 fc c0 	move s0, s25
    67c4:	69 f5 ff f9 	call -10844 <malloc>
    67c8:	40 03 f0 c0 	move s26, s0
    67cc:	3c 00 00 f6 	b 240 <realloc+0x144>
    67d0:	20 40 00 0f 	move s1, 16
    67d4:	06 00 00 4f 	movehi s0, 6
    67d8:	60 73 65 00 	or s27, s0, 6492
    67dc:	1b f0 06 a0 	load_u8 s0, 444(s27)
    67e0:	40 08 00 01 	and s2, s0, 2
    67e4:	18 e0 ff 05 	add_i s0, s24, -8
    67e8:	e2 01 00 f2 	bz s2, 60 <realloc+0xac>
    67ec:	5b 00 07 05 	add_i s2, s27, 448
    67f0:	60 04 00 0f 	move s3, 1
    67f4:	82 00 00 aa 	load_sync s4, (s2)
    67f8:	a0 80 f1 c0 	move s5, s3
    67fc:	a2 00 00 8a 	store_sync s5, (s2)  
    6800:	a5 ff ff f3 	bz s5, -12 <realloc+0x7c>
    6804:	04 01 00 f2 	bz s4, 32 <realloc+0xac>
    6808:	9b 00 07 a8 	load_32 s4, 448(s27)
    680c:	e4 ff ff f5 	bnz s4, -4 <realloc+0x90>
    6810:	82 00 00 aa 	load_sync s4, (s2)
    6814:	a0 80 f1 c0 	move s5, s3
    6818:	a2 00 00 8a 	store_sync s5, (s2)  
    681c:	a5 ff ff f3 	bz s5, -12 <realloc+0x98>
    6820:	44 ff ff f5 	bnz s4, -24 <realloc+0x90>
    6824:	2e 00 00 f8 	call 184 <try_realloc_chunk>
    6828:	3b f0 06 a0 	load_u8 s1, 444(s27)
    682c:	21 08 00 01 	and s1, s1, 2
    6830:	e1 00 00 f2 	bz s1, 28 <realloc+0xd4>
    6834:	3b 00 07 05 	add_i s1, s27, 448
    6838:	40 00 00 0f 	move s2, 0
    683c:	61 00 00 aa 	load_sync s3, (s1)
    6840:	60 00 f1 c0 	move s3, s2
    6844:	61 00 00 8a 	store_sync s3, (s1)  
    6848:	a3 ff ff f3 	bz s3, -12 <realloc+0xc4>
    684c:	60 00 00 f2 	bz s0, 12 <realloc+0xe0>
    6850:	40 23 00 05 	add_i s26, s0, 8
    6854:	1a 00 00 f6 	b 104 <realloc+0x144>
    6858:	00 80 fc c0 	move s0, s25
    685c:	43 f5 ff f9 	call -10996 <malloc>
    6860:	60 03 f0 c0 	move s27, s0
    6864:	db 02 00 f2 	bz s27, 88 <realloc+0x144>
    6868:	18 f0 ff a9 	load_32 s0, -4(s24)
    686c:	20 0c 00 01 	and s1, s0, 3
    6870:	00 e0 ff 01 	and s0, s0, -8
    6874:	21 00 00 10 	cmpeq_i s1, s1, 0
    6878:	c1 00 00 f4 	bnz s1, 24 <realloc+0x118>
    687c:	20 10 00 0f 	move s1, 4
    6880:	40 80 60 c0 	sub_i s2, s0, s1
    6884:	02 80 8c c1 	cmplt_u s0, s2, s25
    6888:	e0 00 00 f4 	bnz s0, 28 <realloc+0x12c>
    688c:	05 00 00 f6 	b 20 <realloc+0x128>
    6890:	20 20 00 0f 	move s1, 8
    6894:	40 80 60 c0 	sub_i s2, s0, s1
    6898:	02 80 8c c1 	cmplt_u s0, s2, s25
    689c:	40 00 00 f4 	bnz s0, 8 <realloc+0x12c>
    68a0:	40 80 fc c0 	move s2, s25
    68a4:	00 80 fd c0 	move s0, s27
    68a8:	20 00 fc c0 	move s1, s24
    68ac:	a9 07 00 f8 	call 7844 <memcpy>
    68b0:	00 00 fc c0 	move s0, s24
    68b4:	b7 fc ff f9 	call -3364 <free>
    68b8:	40 83 fd c0 	move s26, s27
    68bc:	00 00 fd c0 	move s0, s26
    68c0:	fe b3 00 a8 	load_32 ra, 44(sp)
    68c4:	7e c3 00 a8 	load_32 s27, 48(sp)
    68c8:	5e d3 00 a8 	load_32 s26, 52(sp)
    68cc:	3e e3 00 a8 	load_32 s25, 56(sp)
    68d0:	1e f3 00 a8 	load_32 s24, 60(sp)
    68d4:	de 03 01 05 	add_i sp, sp, 64
    68d8:	1f 00 00 f0 	ret

00000000000068dc try_realloc_chunk:
    68dc:	de 03 ff 05 	add_i sp, sp, -64
    68e0:	1e f3 00 88 	store_32 s24, 60(sp)
    68e4:	fe e3 00 88 	store_32 ra, 56(sp)
    68e8:	00 03 f0 c0 	move s24, s0
    68ec:	46 00 00 4f 	movehi s2, 6
    68f0:	78 10 00 a8 	load_32 s3, 4(s24)
    68f4:	42 70 65 00 	or s2, s2, 6492
    68f8:	03 0c 00 01 	and s0, s3, 3
    68fc:	c2 40 00 a8 	load_32 s6, 16(s2)
    6900:	80 04 00 10 	cmpeq_i s4, s0, 1
    6904:	84 24 00 f4 	bnz s4, 1168 <try_realloc_chunk+0x4b8>
    6908:	86 00 6c c1 	cmpgt_u s4, s6, s24
    690c:	44 24 00 f4 	bnz s4, 1160 <try_realloc_chunk+0x4b8>
    6910:	83 e0 ff 01 	and s4, s3, -8
    6914:	b8 00 52 c0 	add_i s5, s24, s4
    6918:	e5 00 9c c1 	cmple_u s7, s5, s24
    691c:	c7 23 00 f4 	bnz s7, 1144 <try_realloc_chunk+0x4b8>
    6920:	e5 10 00 a8 	load_32 s7, 4(s5)
    6924:	07 05 00 01 	and s8, s7, 1
    6928:	68 23 00 f2 	bz s8, 1132 <try_realloc_chunk+0x4b8>
    692c:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x58>
    6930:	32 00 00 f6 	b 200 <try_realloc_chunk+0x11c>
    6934:	04 80 80 c1 	cmplt_u s0, s4, s1
    6938:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x64>
    693c:	38 00 00 f6 	b 224 <try_realloc_chunk+0x140>
    6940:	02 60 00 a8 	load_32 s0, 24(s2)
    6944:	00 80 12 c1 	cmpne_i s0, s0, s5
    6948:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x74>
    694c:	54 00 00 f6 	b 336 <try_realloc_chunk+0x1c0>
    6950:	02 50 00 a8 	load_32 s0, 20(s2)
    6954:	00 80 12 c1 	cmpne_i s0, s0, s5
    6958:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x84>
    695c:	5f 00 00 f6 	b 380 <try_realloc_chunk+0x1fc>
    6960:	07 09 00 01 	and s8, s7, 2
    6964:	00 00 00 0f 	move s0, 0
    6968:	28 09 00 f4 	bnz s8, 292 <try_realloc_chunk+0x1b0>
    696c:	07 e1 ff 01 	and s8, s7, -8
    6970:	88 00 52 c0 	add_i s4, s8, s4
    6974:	04 81 80 c1 	cmplt_u s8, s4, s1
    6978:	a8 08 00 f4 	bnz s8, 276 <try_realloc_chunk+0x1b0>
    697c:	07 fc 03 16 	cmpgt_u s0, s7, 255
    6980:	40 10 00 f4 	bnz s0, 520 <try_realloc_chunk+0x2ac>
    6984:	07 0d 00 0a 	shr s8, s7, 3
    6988:	05 20 00 a8 	load_32 s0, 8(s5)
    698c:	e8 0c 00 0b 	shl s7, s8, 3
    6990:	e2 80 53 c0 	add_i s7, s2, s7
    6994:	27 a1 00 05 	add_i s9, s7, 40
    6998:	e5 30 00 a8 	load_32 s7, 12(s5)
    699c:	40 81 04 c1 	cmpeq_i s10, s0, s9
    69a0:	ca 00 00 f4 	bnz s10, 24 <try_realloc_chunk+0xdc>
    69a4:	46 01 60 c1 	cmpgt_u s10, s6, s0
    69a8:	6a 1f 00 f4 	bnz s10, 1004 <try_realloc_chunk+0x4b8>
    69ac:	40 31 00 a8 	load_32 s10, 12(s0)
    69b0:	4a 81 12 c1 	cmpne_i s10, s10, s5
    69b4:	0a 1f 00 f4 	bnz s10, 992 <try_realloc_chunk+0x4b8>
    69b8:	47 01 10 c1 	cmpne_i s10, s7, s0
    69bc:	4a 00 00 f4 	bnz s10, 8 <try_realloc_chunk+0xe8>
    69c0:	83 00 00 f6 	b 524 <try_realloc_chunk+0x2f0>
    69c4:	47 80 04 c1 	cmpeq_i s2, s7, s9
    69c8:	c2 00 00 f4 	bnz s2, 24 <try_realloc_chunk+0x104>
    69cc:	46 80 63 c1 	cmpgt_u s2, s6, s7
    69d0:	22 1e 00 f4 	bnz s2, 964 <try_realloc_chunk+0x4b8>
    69d4:	47 20 00 a8 	load_32 s2, 8(s7)
    69d8:	42 80 12 c1 	cmpne_i s2, s2, s5
    69dc:	c2 1d 00 f4 	bnz s2, 952 <try_realloc_chunk+0x4b8>
    69e0:	e0 30 00 88 	store_32 s7, 12(s0)
    69e4:	07 20 00 88 	store_32 s0, 8(s7)
    69e8:	44 80 60 c0 	sub_i s2, s4, s1
    69ec:	02 3c 00 16 	cmpgt_u s0, s2, 15
    69f0:	40 1b 00 f4 	bnz s0, 872 <try_realloc_chunk+0x47c>
    69f4:	cc 00 00 f6 	b 816 <try_realloc_chunk+0x448>
    69f8:	01 00 04 18 	cmplt_u s0, s1, 256
    69fc:	40 00 00 0f 	move s2, 0
    6a00:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x12c>
    6a04:	16 00 00 f6 	b 88 <try_realloc_chunk+0x180>
    6a08:	00 00 f1 c0 	move s0, s2
    6a0c:	fe e3 00 a8 	load_32 ra, 56(sp)
    6a10:	1e f3 00 a8 	load_32 s24, 60(sp)
    6a14:	de 03 01 05 	add_i sp, sp, 64
    6a18:	1f 00 00 f0 	ret
    6a1c:	44 80 60 c0 	sub_i s2, s4, s1
    6a20:	02 40 00 18 	cmplt_u s0, s2, 16
    6a24:	00 19 00 f4 	bnz s0, 800 <try_realloc_chunk+0x468>
    6a28:	03 04 00 01 	and s0, s3, 1
    6a2c:	60 80 00 c0 	or s3, s0, s1
    6a30:	18 80 50 c0 	add_i s0, s24, s1
    6a34:	23 08 00 00 	or s1, s3, 2
    6a38:	38 10 00 88 	store_32 s1, 4(s24)
    6a3c:	22 0c 00 00 	or s1, s2, 3
    6a40:	20 10 00 88 	store_32 s1, 4(s0)
    6a44:	25 10 00 a8 	load_32 s1, 4(s5)
    6a48:	21 04 00 00 	or s1, s1, 1
    6a4c:	25 10 00 88 	store_32 s1, 4(s5)
    6a50:	20 00 f1 c0 	move s1, s2
    6a54:	07 05 00 f8 	call 5148 <dispose_chunk>
    6a58:	bb 00 00 f6 	b 748 <try_realloc_chunk+0x468>
    6a5c:	01 10 00 05 	add_i s0, s1, 4
    6a60:	04 00 80 c1 	cmplt_u s0, s4, s0
    6a64:	20 01 00 f4 	bnz s0, 36 <try_realloc_chunk+0x1ac>
    6a68:	06 00 00 4f 	movehi s0, 6
    6a6c:	24 80 60 c0 	sub_i s1, s4, s1
    6a70:	00 10 65 00 	or s0, s0, 6468
    6a74:	00 20 00 a8 	load_32 s0, 8(s0)
    6a78:	00 04 00 0b 	shl s0, s0, 1
    6a7c:	21 00 90 c1 	cmple_u s1, s1, s0
    6a80:	00 00 fc c0 	move s0, s24
    6a84:	41 00 00 f4 	bnz s1, 8 <try_realloc_chunk+0x1b0>
    6a88:	00 00 f1 c0 	move s0, s2
    6a8c:	fe e3 00 a8 	load_32 ra, 56(sp)
    6a90:	1e f3 00 a8 	load_32 s24, 60(sp)
    6a94:	de 03 01 05 	add_i sp, sp, 64
    6a98:	1f 00 00 f0 	ret
    6a9c:	02 30 00 a8 	load_32 s0, 12(s2)
    6aa0:	00 00 52 c0 	add_i s0, s0, s4
    6aa4:	80 80 90 c1 	cmple_u s4, s0, s1
    6aa8:	c4 02 00 f4 	bnz s4, 88 <try_realloc_chunk+0x224>
    6aac:	63 04 00 01 	and s3, s3, 1
    6ab0:	00 80 60 c0 	sub_i s0, s0, s1
    6ab4:	63 80 00 c0 	or s3, s3, s1
    6ab8:	38 80 50 c0 	add_i s1, s24, s1
    6abc:	63 08 00 00 	or s3, s3, 2
    6ac0:	78 10 00 88 	store_32 s3, 4(s24)
    6ac4:	60 04 00 00 	or s3, s0, 1
    6ac8:	61 10 00 88 	store_32 s3, 4(s1)
    6acc:	22 60 00 88 	store_32 s1, 24(s2)
    6ad0:	02 30 00 88 	store_32 s0, 12(s2)
    6ad4:	9c 00 00 f6 	b 624 <try_realloc_chunk+0x468>
    6ad8:	02 20 00 a8 	load_32 s0, 8(s2)
    6adc:	80 00 52 c0 	add_i s4, s0, s4
    6ae0:	04 80 80 c1 	cmplt_u s0, s4, s1
    6ae4:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x210>
    6ae8:	0b 00 00 f6 	b 44 <try_realloc_chunk+0x238>
    6aec:	00 00 00 0f 	move s0, 0
    6af0:	fe e3 00 a8 	load_32 ra, 56(sp)
    6af4:	1e f3 00 a8 	load_32 s24, 60(sp)
    6af8:	de 03 01 05 	add_i sp, sp, 64
    6afc:	1f 00 00 f0 	ret
    6b00:	00 00 00 0f 	move s0, 0
    6b04:	fe e3 00 a8 	load_32 ra, 56(sp)
    6b08:	1e f3 00 a8 	load_32 s24, 60(sp)
    6b0c:	de 03 01 05 	add_i sp, sp, 64
    6b10:	1f 00 00 f0 	ret
    6b14:	04 80 60 c0 	sub_i s0, s4, s1
    6b18:	a0 40 00 18 	cmplt_u s5, s0, 16
    6b1c:	c5 01 00 f4 	bnz s5, 56 <try_realloc_chunk+0x278>
    6b20:	63 04 00 01 	and s3, s3, 1
    6b24:	98 00 52 c0 	add_i s4, s24, s4
    6b28:	63 80 00 c0 	or s3, s3, s1
    6b2c:	38 80 50 c0 	add_i s1, s24, s1
    6b30:	63 08 00 00 	or s3, s3, 2
    6b34:	78 10 00 88 	store_32 s3, 4(s24)
    6b38:	60 04 00 00 	or s3, s0, 1
    6b3c:	61 10 00 88 	store_32 s3, 4(s1)
    6b40:	04 00 00 88 	store_32 s0, (s4)
    6b44:	64 10 00 a8 	load_32 s3, 4(s4)
    6b48:	63 f8 ff 01 	and s3, s3, -2
    6b4c:	64 10 00 88 	store_32 s3, 4(s4)
    6b50:	0b 00 00 f6 	b 44 <try_realloc_chunk+0x2a0>
    6b54:	03 04 00 01 	and s0, s3, 1
    6b58:	38 00 52 c0 	add_i s1, s24, s4
    6b5c:	00 00 02 c0 	or s0, s0, s4
    6b60:	00 08 00 00 	or s0, s0, 2
    6b64:	18 10 00 88 	store_32 s0, 4(s24)
    6b68:	01 10 00 a8 	load_32 s0, 4(s1)
    6b6c:	60 04 00 00 	or s3, s0, 1
    6b70:	61 10 00 88 	store_32 s3, 4(s1)
    6b74:	00 00 00 0f 	move s0, 0
    6b78:	20 00 f0 c0 	move s1, s0
    6b7c:	02 20 00 88 	store_32 s0, 8(s2)
    6b80:	22 50 00 88 	store_32 s1, 20(s2)
    6b84:	70 00 00 f6 	b 448 <try_realloc_chunk+0x468>
    6b88:	05 60 00 a8 	load_32 s0, 24(s5)
    6b8c:	e5 30 00 a8 	load_32 s7, 12(s5)
    6b90:	07 81 02 c1 	cmpeq_i s8, s7, s5
    6b94:	08 03 00 f4 	bnz s8, 96 <try_realloc_chunk+0x318>
    6b98:	05 21 00 a8 	load_32 s8, 8(s5)
    6b9c:	c6 00 64 c1 	cmpgt_u s6, s6, s8
    6ba0:	a6 0f 00 f4 	bnz s6, 500 <try_realloc_chunk+0x4b8>
    6ba4:	c8 30 00 a8 	load_32 s6, 12(s8)
    6ba8:	c6 80 12 c1 	cmpne_i s6, s6, s5
    6bac:	46 0f 00 f4 	bnz s6, 488 <try_realloc_chunk+0x4b8>
    6bb0:	c7 20 00 a8 	load_32 s6, 8(s7)
    6bb4:	c6 80 12 c1 	cmpne_i s6, s6, s5
    6bb8:	e6 0e 00 f4 	bnz s6, 476 <try_realloc_chunk+0x4b8>
    6bbc:	e8 30 00 88 	store_32 s7, 12(s8)
    6bc0:	07 21 00 88 	store_32 s8, 8(s7)
    6bc4:	a0 0a 00 f2 	bz s0, 340 <try_realloc_chunk+0x43c>
    6bc8:	20 00 00 f6 	b 128 <try_realloc_chunk+0x36c>
    6bcc:	00 04 00 0f 	move s0, 1
    6bd0:	a2 00 00 a8 	load_32 s5, (s2)
    6bd4:	00 00 b4 c0 	shl s0, s0, s8
    6bd8:	00 fc ff 03 	xor s0, s0, -1
    6bdc:	05 00 10 c0 	and s0, s5, s0
    6be0:	02 00 00 88 	store_32 s0, (s2)
    6be4:	44 80 60 c0 	sub_i s2, s4, s1
    6be8:	02 3c 00 16 	cmpgt_u s0, s2, 15
    6bec:	60 0b 00 f4 	bnz s0, 364 <try_realloc_chunk+0x47c>
    6bf0:	4d 00 00 f6 	b 308 <try_realloc_chunk+0x448>
    6bf4:	25 51 00 a8 	load_32 s9, 20(s5)
    6bf8:	49 00 00 f4 	bnz s9, 8 <try_realloc_chunk+0x324>
    6bfc:	03 00 00 f6 	b 12 <try_realloc_chunk+0x32c>
    6c00:	05 51 00 05 	add_i s8, s5, 20
    6c04:	04 00 00 f6 	b 16 <try_realloc_chunk+0x338>
    6c08:	05 41 00 05 	add_i s8, s5, 16
    6c0c:	28 01 00 a8 	load_32 s9, (s8)
    6c10:	c9 0b 00 f2 	bz s9, 376 <try_realloc_chunk+0x4ac>
    6c14:	e0 80 f4 c0 	move s7, s9
    6c18:	27 51 00 a8 	load_32 s9, 20(s7)
    6c1c:	40 01 f4 c0 	move s10, s8
    6c20:	07 51 00 05 	add_i s8, s7, 20
    6c24:	89 ff ff f5 	bnz s9, -16 <try_realloc_chunk+0x338>
    6c28:	27 41 00 a8 	load_32 s9, 16(s7)
    6c2c:	07 41 00 05 	add_i s8, s7, 16
    6c30:	29 ff ff f5 	bnz s9, -28 <try_realloc_chunk+0x338>
    6c34:	c6 00 65 c1 	cmpgt_u s6, s6, s10
    6c38:	e6 0a 00 f4 	bnz s6, 348 <try_realloc_chunk+0x4b8>
    6c3c:	c0 00 00 0f 	move s6, 0
    6c40:	ca 00 00 88 	store_32 s6, (s10)
    6c44:	a0 06 00 f2 	bz s0, 212 <try_realloc_chunk+0x43c>
    6c48:	c5 70 00 a8 	load_32 s6, 28(s5)
    6c4c:	06 09 00 0b 	shl s8, s6, 2
    6c50:	02 01 54 c0 	add_i s8, s2, s8
    6c54:	28 c1 04 a8 	load_32 s9, 304(s8)
    6c58:	29 81 12 c1 	cmpne_i s9, s9, s5
    6c5c:	49 00 00 f4 	bnz s9, 8 <try_realloc_chunk+0x388>
    6c60:	0c 00 00 f6 	b 48 <try_realloc_chunk+0x3b4>
    6c64:	c2 40 00 a8 	load_32 s6, 16(s2)
    6c68:	c6 00 60 c1 	cmpgt_u s6, s6, s0
    6c6c:	46 09 00 f4 	bnz s6, 296 <try_realloc_chunk+0x4b8>
    6c70:	c0 40 00 a8 	load_32 s6, 16(s0)
    6c74:	c6 80 02 c1 	cmpeq_i s6, s6, s5
    6c78:	66 02 00 f4 	bnz s6, 76 <try_realloc_chunk+0x3e8>
    6c7c:	c0 50 00 0f 	move s6, 20
    6c80:	c0 00 53 c0 	add_i s6, s0, s6
    6c84:	e6 00 00 88 	store_32 s7, (s6)
    6c88:	87 04 00 f2 	bz s7, 144 <try_realloc_chunk+0x43c>
    6c8c:	12 00 00 f6 	b 72 <try_realloc_chunk+0x3f8>
    6c90:	08 c1 04 05 	add_i s8, s8, 304
    6c94:	e8 00 00 88 	store_32 s7, (s8)
    6c98:	e7 01 00 f4 	bnz s7, 60 <try_realloc_chunk+0x3f8>
    6c9c:	00 04 00 0f 	move s0, 1
    6ca0:	a2 10 00 a8 	load_32 s5, 4(s2)
    6ca4:	00 00 b3 c0 	shl s0, s0, s6
    6ca8:	00 fc ff 03 	xor s0, s0, -1
    6cac:	05 00 10 c0 	and s0, s5, s0
    6cb0:	02 10 00 88 	store_32 s0, 4(s2)
    6cb4:	44 80 60 c0 	sub_i s2, s4, s1
    6cb8:	02 3c 00 16 	cmpgt_u s0, s2, 15
    6cbc:	e0 04 00 f4 	bnz s0, 156 <try_realloc_chunk+0x47c>
    6cc0:	19 00 00 f6 	b 100 <try_realloc_chunk+0x448>
    6cc4:	c0 40 00 0f 	move s6, 16
    6cc8:	c0 00 53 c0 	add_i s6, s0, s6
    6ccc:	e6 00 00 88 	store_32 s7, (s6)
    6cd0:	47 02 00 f2 	bz s7, 72 <try_realloc_chunk+0x43c>
    6cd4:	c2 40 00 a8 	load_32 s6, 16(s2)
    6cd8:	06 81 63 c1 	cmpgt_u s8, s6, s7
    6cdc:	c8 05 00 f4 	bnz s8, 184 <try_realloc_chunk+0x4b8>
    6ce0:	07 60 00 88 	store_32 s0, 24(s7)
    6ce4:	05 40 00 a8 	load_32 s0, 16(s5)
    6ce8:	a0 00 00 f2 	bz s0, 20 <try_realloc_chunk+0x420>
    6cec:	c6 00 60 c1 	cmpgt_u s6, s6, s0
    6cf0:	26 05 00 f4 	bnz s6, 164 <try_realloc_chunk+0x4b8>
    6cf4:	07 40 00 88 	store_32 s0, 16(s7)
    6cf8:	e0 60 00 88 	store_32 s7, 24(s0)
    6cfc:	05 50 00 a8 	load_32 s0, 20(s5)
    6d00:	c0 00 00 f2 	bz s0, 24 <try_realloc_chunk+0x43c>
    6d04:	42 40 00 a8 	load_32 s2, 16(s2)
    6d08:	42 00 60 c1 	cmpgt_u s2, s2, s0
    6d0c:	42 04 00 f4 	bnz s2, 136 <try_realloc_chunk+0x4b8>
    6d10:	07 50 00 88 	store_32 s0, 20(s7)
    6d14:	e0 60 00 88 	store_32 s7, 24(s0)
    6d18:	44 80 60 c0 	sub_i s2, s4, s1
    6d1c:	02 3c 00 16 	cmpgt_u s0, s2, 15
    6d20:	c0 01 00 f4 	bnz s0, 56 <try_realloc_chunk+0x47c>
    6d24:	03 04 00 01 	and s0, s3, 1
    6d28:	38 00 52 c0 	add_i s1, s24, s4
    6d2c:	00 00 02 c0 	or s0, s0, s4
    6d30:	00 08 00 00 	or s0, s0, 2
    6d34:	18 10 00 88 	store_32 s0, 4(s24)
    6d38:	01 10 00 a8 	load_32 s0, 4(s1)
    6d3c:	00 04 00 00 	or s0, s0, 1
    6d40:	01 10 00 88 	store_32 s0, 4(s1)
    6d44:	00 00 fc c0 	move s0, s24
    6d48:	fe e3 00 a8 	load_32 ra, 56(sp)
    6d4c:	1e f3 00 a8 	load_32 s24, 60(sp)
    6d50:	de 03 01 05 	add_i sp, sp, 64
    6d54:	1f 00 00 f0 	ret
    6d58:	03 04 00 01 	and s0, s3, 1
    6d5c:	60 80 00 c0 	or s3, s0, s1
    6d60:	18 80 50 c0 	add_i s0, s24, s1
    6d64:	23 08 00 00 	or s1, s3, 2
    6d68:	38 10 00 88 	store_32 s1, 4(s24)
    6d6c:	38 00 52 c0 	add_i s1, s24, s4
    6d70:	62 0c 00 00 	or s3, s2, 3
    6d74:	60 10 00 88 	store_32 s3, 4(s0)
    6d78:	61 10 00 a8 	load_32 s3, 4(s1)
    6d7c:	63 04 00 00 	or s3, s3, 1
    6d80:	61 10 00 88 	store_32 s3, 4(s1)
    6d84:	33 ff ff f7 	b -820 <try_realloc_chunk+0x174>
    6d88:	e0 00 00 0f 	move s7, 0
    6d8c:	60 fc ff f3 	bz s0, -116 <try_realloc_chunk+0x43c>
    6d90:	ae ff ff f7 	b -328 <try_realloc_chunk+0x36c>
    6d94:	0e 06 00 f8 	call 6200 <abort>

0000000000006d98 realloc_in_place:
    6d98:	de 03 ff 05 	add_i sp, sp, -64
    6d9c:	1e f3 00 88 	store_32 s24, 60(sp)
    6da0:	3e e3 00 88 	store_32 s25, 56(sp)
    6da4:	5e d3 00 88 	store_32 s26, 52(sp)
    6da8:	fe c3 00 88 	store_32 ra, 48(sp)
    6dac:	00 03 f0 c0 	move s24, s0
    6db0:	00 00 00 0f 	move s0, 0
    6db4:	98 05 00 f2 	bz s24, 176 <realloc_in_place+0xcc>
    6db8:	41 fc fe 16 	cmpgt_u s2, s1, -65
    6dbc:	42 05 00 f4 	bnz s2, 168 <realloc_in_place+0xcc>
    6dc0:	01 2c 00 18 	cmplt_u s0, s1, 11
    6dc4:	80 00 00 f4 	bnz s0, 16 <realloc_in_place+0x3c>
    6dc8:	01 2c 00 05 	add_i s0, s1, 11
    6dcc:	20 e0 ff 01 	and s1, s0, -8
    6dd0:	02 00 00 f6 	b 8 <realloc_in_place+0x40>
    6dd4:	20 40 00 0f 	move s1, 16
    6dd8:	06 00 00 4f 	movehi s0, 6
    6ddc:	38 e3 ff 05 	add_i s25, s24, -8
    6de0:	40 73 65 00 	or s26, s0, 6492
    6de4:	1a f0 06 a0 	load_u8 s0, 444(s26)
    6de8:	00 08 00 01 	and s0, s0, 2
    6dec:	e0 01 00 f2 	bz s0, 60 <realloc_in_place+0x90>
    6df0:	1a 00 07 05 	add_i s0, s26, 448
    6df4:	40 04 00 0f 	move s2, 1
    6df8:	60 00 00 aa 	load_sync s3, (s0)
    6dfc:	80 00 f1 c0 	move s4, s2
    6e00:	80 00 00 8a 	store_sync s4, (s0)  
    6e04:	a4 ff ff f3 	bz s4, -12 <realloc_in_place+0x60>
    6e08:	03 01 00 f2 	bz s3, 32 <realloc_in_place+0x90>
    6e0c:	7a 00 07 a8 	load_32 s3, 448(s26)
    6e10:	e3 ff ff f5 	bnz s3, -4 <realloc_in_place+0x74>
    6e14:	60 00 00 aa 	load_sync s3, (s0)
    6e18:	80 00 f1 c0 	move s4, s2
    6e1c:	80 00 00 8a 	store_sync s4, (s0)  
    6e20:	a4 ff ff f3 	bz s4, -12 <realloc_in_place+0x7c>
    6e24:	43 ff ff f5 	bnz s3, -24 <realloc_in_place+0x74>
    6e28:	00 80 fc c0 	move s0, s25
    6e2c:	ac fe ff f9 	call -1360 <try_realloc_chunk>
    6e30:	3a f0 06 a0 	load_u8 s1, 444(s26)
    6e34:	21 08 00 01 	and s1, s1, 2
    6e38:	e1 00 00 f2 	bz s1, 28 <realloc_in_place+0xbc>
    6e3c:	3a 00 07 05 	add_i s1, s26, 448
    6e40:	40 00 00 0f 	move s2, 0
    6e44:	61 00 00 aa 	load_sync s3, (s1)
    6e48:	60 00 f1 c0 	move s3, s2
    6e4c:	61 00 00 8a 	store_sync s3, (s1)  
    6e50:	a3 ff ff f3 	bz s3, -12 <realloc_in_place+0xac>
    6e54:	00 80 0c c1 	cmpeq_i s0, s0, s25
    6e58:	40 00 00 f4 	bnz s0, 8 <realloc_in_place+0xc8>
    6e5c:	00 03 00 0f 	move s24, 0
    6e60:	00 00 fc c0 	move s0, s24
    6e64:	fe c3 00 a8 	load_32 ra, 48(sp)
    6e68:	5e d3 00 a8 	load_32 s26, 52(sp)
    6e6c:	3e e3 00 a8 	load_32 s25, 56(sp)
    6e70:	1e f3 00 a8 	load_32 s24, 60(sp)
    6e74:	de 03 01 05 	add_i sp, sp, 64
    6e78:	1f 00 00 f0 	ret

0000000000006e7c memalign:
    6e7c:	de 03 ff 05 	add_i sp, sp, -64
    6e80:	fe f3 00 88 	store_32 ra, 60(sp)
    6e84:	40 20 00 16 	cmpgt_u s2, s0, 8
    6e88:	c2 00 00 f4 	bnz s2, 24 <memalign+0x24>
    6e8c:	00 80 f0 c0 	move s0, s1
    6e90:	b6 f3 ff f9 	call -12584 <malloc>
    6e94:	fe f3 00 a8 	load_32 ra, 60(sp)
    6e98:	de 03 01 05 	add_i sp, sp, 64
    6e9c:	1f 00 00 f0 	ret
    6ea0:	04 00 00 f8 	call 16 <internal_memalign>
    6ea4:	fe f3 00 a8 	load_32 ra, 60(sp)
    6ea8:	de 03 01 05 	add_i sp, sp, 64
    6eac:	1f 00 00 f0 	ret

0000000000006eb0 internal_memalign:
    6eb0:	de 03 ff 05 	add_i sp, sp, -64
    6eb4:	1e f3 00 88 	store_32 s24, 60(sp)
    6eb8:	3e e3 00 88 	store_32 s25, 56(sp)
    6ebc:	5e d3 00 88 	store_32 s26, 52(sp)
    6ec0:	7e c3 00 88 	store_32 s27, 48(sp)
    6ec4:	fe b3 00 88 	store_32 ra, 44(sp)
    6ec8:	40 40 00 16 	cmpgt_u s2, s0, 16
    6ecc:	42 00 00 f4 	bnz s2, 8 <internal_memalign+0x24>
    6ed0:	00 40 00 0f 	move s0, 16
    6ed4:	40 fc ff 05 	add_i s2, s0, -1
    6ed8:	42 00 10 c0 	and s2, s2, s0
    6edc:	e2 00 00 f2 	bz s2, 28 <internal_memalign+0x48>
    6ee0:	40 40 00 0f 	move s2, 16
    6ee4:	60 03 f1 c0 	move s27, s2
    6ee8:	7b 00 80 c1 	cmplt_u s3, s27, s0
    6eec:	5b 04 00 0b 	shl s2, s27, 1
    6ef0:	a3 ff ff f5 	bnz s3, -12 <internal_memalign+0x34>
    6ef4:	02 00 00 f6 	b 8 <internal_memalign+0x4c>
    6ef8:	60 03 f0 c0 	move s27, s0
    6efc:	00 00 ff 0f 	move s0, -64
    6f00:	00 03 00 0f 	move s24, 0
    6f04:	00 80 6d c0 	sub_i s0, s0, s27
    6f08:	00 80 90 c1 	cmple_u s0, s0, s1
    6f0c:	20 0e 00 f4 	bnz s0, 452 <internal_memalign+0x220>
    6f10:	01 2c 00 18 	cmplt_u s0, s1, 11
    6f14:	00 01 00 f4 	bnz s0, 32 <internal_memalign+0x84>
    6f18:	01 2c 00 05 	add_i s0, s1, 11
    6f1c:	20 e3 ff 01 	and s25, s0, -8
    6f20:	19 80 5d c0 	add_i s0, s25, s27
    6f24:	00 30 00 05 	add_i s0, s0, 12
    6f28:	90 f3 ff f9 	call -12736 <malloc>
    6f2c:	20 0d 00 f2 	bz s0, 420 <internal_memalign+0x220>
    6f30:	06 00 00 f6 	b 24 <internal_memalign+0x98>
    6f34:	20 43 00 0f 	move s25, 16
    6f38:	19 80 5d c0 	add_i s0, s25, s27
    6f3c:	00 30 00 05 	add_i s0, s0, 12
    6f40:	8a f3 ff f9 	call -12760 <malloc>
    6f44:	60 0c 00 f2 	bz s0, 396 <internal_memalign+0x220>
    6f48:	26 00 00 4f 	movehi s1, 6
    6f4c:	3e a3 00 88 	store_32 s25, 40(sp)
    6f50:	21 73 65 00 	or s25, s1, 6492
    6f54:	39 f0 06 a0 	load_u8 s1, 444(s25)
    6f58:	21 08 00 01 	and s1, s1, 2
    6f5c:	e1 01 00 f2 	bz s1, 60 <internal_memalign+0xe8>
    6f60:	39 00 07 05 	add_i s1, s25, 448
    6f64:	40 04 00 0f 	move s2, 1
    6f68:	61 00 00 aa 	load_sync s3, (s1)
    6f6c:	80 00 f1 c0 	move s4, s2
    6f70:	81 00 00 8a 	store_sync s4, (s1)  
    6f74:	a4 ff ff f3 	bz s4, -12 <internal_memalign+0xb8>
    6f78:	03 01 00 f2 	bz s3, 32 <internal_memalign+0xe8>
    6f7c:	79 00 07 a8 	load_32 s3, 448(s25)
    6f80:	e3 ff ff f5 	bnz s3, -4 <internal_memalign+0xcc>
    6f84:	61 00 00 aa 	load_sync s3, (s1)
    6f88:	80 00 f1 c0 	move s4, s2
    6f8c:	81 00 00 8a 	store_sync s4, (s1)  
    6f90:	a4 ff ff f3 	bz s4, -12 <internal_memalign+0xd4>
    6f94:	43 ff ff f5 	bnz s3, -24 <internal_memalign+0xcc>
    6f98:	3b fc ff 05 	add_i s1, s27, -1
    6f9c:	40 e3 ff 05 	add_i s26, s0, -8
    6fa0:	21 00 10 c0 	and s1, s1, s0
    6fa4:	61 05 00 f2 	bz s1, 172 <internal_memalign+0x1a0>
    6fa8:	20 80 5d c0 	add_i s1, s0, s27
    6fac:	40 00 00 0f 	move s2, 0
    6fb0:	21 fc ff 05 	add_i s1, s1, -1
    6fb4:	42 80 6d c0 	sub_i s2, s2, s27
    6fb8:	21 00 11 c0 	and s1, s1, s2
    6fbc:	01 e3 ff 05 	add_i s24, s1, -8
    6fc0:	38 00 6d c0 	sub_i s1, s24, s26
    6fc4:	21 3c 00 16 	cmpgt_u s1, s1, 15
    6fc8:	41 00 00 f4 	bnz s1, 8 <internal_memalign+0x120>
    6fcc:	18 83 5d c0 	add_i s24, s24, s27
    6fd0:	40 f0 ff a9 	load_32 s2, -4(s0)
    6fd4:	38 00 6d c0 	sub_i s1, s24, s26
    6fd8:	62 e0 ff 01 	and s3, s2, -8
    6fdc:	82 0c 00 01 	and s4, s2, 3
    6fe0:	43 80 60 c0 	sub_i s2, s3, s1
    6fe4:	44 00 00 f4 	bnz s4, 8 <internal_memalign+0x13c>
    6fe8:	15 00 00 f6 	b 84 <internal_memalign+0x18c>
    6fec:	78 10 00 a8 	load_32 s3, 4(s24)
    6ff0:	63 04 00 01 	and s3, s3, 1
    6ff4:	62 80 01 c0 	or s3, s2, s3
    6ff8:	58 00 51 c0 	add_i s2, s24, s2
    6ffc:	63 08 00 00 	or s3, s3, 2
    7000:	78 10 00 88 	store_32 s3, 4(s24)
    7004:	62 10 00 a8 	load_32 s3, 4(s2)
    7008:	63 04 00 00 	or s3, s3, 1
    700c:	62 10 00 88 	store_32 s3, 4(s2)
    7010:	40 f0 ff a9 	load_32 s2, -4(s0)
    7014:	42 04 00 01 	and s2, s2, 1
    7018:	41 00 01 c0 	or s2, s1, s2
    701c:	42 08 00 00 	or s2, s2, 2
    7020:	40 f0 ff 89 	store_32 s2, -4(s0)
    7024:	18 10 00 a8 	load_32 s0, 4(s24)
    7028:	00 04 00 00 	or s0, s0, 1
    702c:	18 10 00 88 	store_32 s0, 4(s24)
    7030:	00 00 fd c0 	move s0, s26
    7034:	8f 03 00 f8 	call 3644 <dispose_chunk>
    7038:	05 00 00 f6 	b 20 <internal_memalign+0x19c>
    703c:	1a 00 00 a8 	load_32 s0, (s26)
    7040:	00 80 50 c0 	add_i s0, s0, s1
    7044:	18 00 00 88 	store_32 s0, (s24)
    7048:	58 10 00 88 	store_32 s2, 4(s24)
    704c:	40 03 fc c0 	move s26, s24
    7050:	1a 10 00 a8 	load_32 s0, 4(s26)
    7054:	20 0c 00 01 	and s1, s0, 3
    7058:	81 02 00 f2 	bz s1, 80 <internal_memalign+0x1f8>
    705c:	3e a0 00 a8 	load_32 s1, 40(sp)
    7060:	40 e0 ff 01 	and s2, s0, -8
    7064:	21 40 00 05 	add_i s1, s1, 16
    7068:	22 80 90 c1 	cmple_u s1, s2, s1
    706c:	e1 01 00 f4 	bnz s1, 60 <internal_memalign+0x1f8>
    7070:	9e a0 00 a8 	load_32 s4, 40(sp)
    7074:	00 04 00 01 	and s0, s0, 1
    7078:	64 00 00 c0 	or s3, s4, s0
    707c:	22 00 62 c0 	sub_i s1, s2, s4
    7080:	1a 00 52 c0 	add_i s0, s26, s4
    7084:	5a 00 51 c0 	add_i s2, s26, s2
    7088:	63 08 00 00 	or s3, s3, 2
    708c:	7a 10 00 88 	store_32 s3, 4(s26)
    7090:	61 0c 00 00 	or s3, s1, 3
    7094:	60 10 00 88 	store_32 s3, 4(s0)
    7098:	62 10 00 a8 	load_32 s3, 4(s2)
    709c:	63 04 00 00 	or s3, s3, 1
    70a0:	62 10 00 88 	store_32 s3, 4(s2)
    70a4:	73 03 00 f8 	call 3532 <dispose_chunk>
    70a8:	19 f0 06 a0 	load_u8 s0, 444(s25)
    70ac:	1a 23 00 05 	add_i s24, s26, 8
    70b0:	00 08 00 01 	and s0, s0, 2
    70b4:	e0 00 00 f2 	bz s0, 28 <internal_memalign+0x220>
    70b8:	19 00 07 05 	add_i s0, s25, 448
    70bc:	20 00 00 0f 	move s1, 0
    70c0:	40 00 00 aa 	load_sync s2, (s0)
    70c4:	40 80 f0 c0 	move s2, s1
    70c8:	40 00 00 8a 	store_sync s2, (s0)  
    70cc:	a2 ff ff f3 	bz s2, -12 <internal_memalign+0x210>
    70d0:	00 00 fc c0 	move s0, s24
    70d4:	fe b3 00 a8 	load_32 ra, 44(sp)
    70d8:	7e c3 00 a8 	load_32 s27, 48(sp)
    70dc:	5e d3 00 a8 	load_32 s26, 52(sp)
    70e0:	3e e3 00 a8 	load_32 s25, 56(sp)
    70e4:	1e f3 00 a8 	load_32 s24, 60(sp)
    70e8:	de 03 01 05 	add_i sp, sp, 64
    70ec:	1f 00 00 f0 	ret

00000000000070f0 posix_memalign:
    70f0:	de 03 ff 05 	add_i sp, sp, -64
    70f4:	1e f3 00 88 	store_32 s24, 60(sp)
    70f8:	fe e3 00 88 	store_32 ra, 56(sp)
    70fc:	61 20 00 11 	cmpne_i s3, s1, 8
    7100:	00 03 f0 c0 	move s24, s0
    7104:	43 01 00 f4 	bnz s3, 40 <posix_memalign+0x3c>
    7108:	00 00 f1 c0 	move s0, s2
    710c:	17 f3 ff f9 	call -13220 <malloc>
    7110:	c0 04 00 f2 	bz s0, 152 <posix_memalign+0xb8>
    7114:	18 00 00 88 	store_32 s0, (s24)
    7118:	00 00 00 0f 	move s0, 0
    711c:	fe e3 00 a8 	load_32 ra, 56(sp)
    7120:	1e f3 00 a8 	load_32 s24, 60(sp)
    7124:	de 03 01 05 	add_i sp, sp, 64
    7128:	1f 00 00 f0 	ret
    712c:	61 0c 00 01 	and s3, s1, 3
    7130:	00 58 00 0f 	move s0, 22
    7134:	e3 00 00 f4 	bnz s3, 28 <posix_memalign+0x60>
    7138:	61 08 00 0a 	shr s3, s1, 2
    713c:	a3 00 00 f2 	bz s3, 20 <posix_memalign+0x60>
    7140:	83 fc ff 05 	add_i s4, s3, -1
    7144:	64 80 11 c0 	and s3, s4, s3
    7148:	43 00 00 f4 	bnz s3, 8 <posix_memalign+0x60>
    714c:	05 00 00 f6 	b 20 <posix_memalign+0x70>
    7150:	fe e3 00 a8 	load_32 ra, 56(sp)
    7154:	1e f3 00 a8 	load_32 s24, 60(sp)
    7158:	de 03 01 05 	add_i sp, sp, 64
    715c:	1f 00 00 f0 	ret
    7160:	00 00 ff 0f 	move s0, -64
    7164:	00 80 60 c0 	sub_i s0, s0, s1
    7168:	00 00 81 c1 	cmplt_u s0, s0, s2
    716c:	40 00 00 f4 	bnz s0, 8 <posix_memalign+0x84>
    7170:	06 00 00 f6 	b 24 <posix_memalign+0x98>
    7174:	00 30 00 0f 	move s0, 12
    7178:	fe e3 00 a8 	load_32 ra, 56(sp)
    717c:	1e f3 00 a8 	load_32 s24, 60(sp)
    7180:	de 03 01 05 	add_i sp, sp, 64
    7184:	1f 00 00 f0 	ret
    7188:	01 40 00 16 	cmpgt_u s0, s1, 16
    718c:	40 00 00 f4 	bnz s0, 8 <posix_memalign+0xa4>
    7190:	20 40 00 0f 	move s1, 16
    7194:	00 80 f0 c0 	move s0, s1
    7198:	20 00 f1 c0 	move s1, s2
    719c:	45 ff ff f9 	call -748 <internal_memalign>
    71a0:	40 00 00 f2 	bz s0, 8 <posix_memalign+0xb8>
    71a4:	dc ff ff f7 	b -144 <posix_memalign+0x24>
    71a8:	00 30 00 0f 	move s0, 12
    71ac:	fe e3 00 a8 	load_32 ra, 56(sp)
    71b0:	1e f3 00 a8 	load_32 s24, 60(sp)
    71b4:	de 03 01 05 	add_i sp, sp, 64
    71b8:	1f 00 00 f0 	ret

00000000000071bc valloc:
    71bc:	de 03 ff 05 	add_i sp, sp, -64
    71c0:	fe f3 00 88 	store_32 ra, 60(sp)
    71c4:	26 00 00 4f 	movehi s1, 6
    71c8:	41 10 65 00 	or s2, s1, 6468
    71cc:	62 00 00 a8 	load_32 s3, (s2)
    71d0:	20 00 f0 c0 	move s1, s0
    71d4:	63 05 00 f4 	bnz s3, 172 <valloc+0xc4>
    71d8:	06 00 00 4f 	movehi s0, 6
    71dc:	60 04 00 0f 	move s3, 1
    71e0:	00 e0 6c 00 	or s0, s0, 6968
    71e4:	80 00 00 aa 	load_sync s4, (s0)
    71e8:	a0 80 f1 c0 	move s5, s3
    71ec:	a0 00 00 8a 	store_sync s5, (s0)  
    71f0:	a5 ff ff f3 	bz s5, -12 <valloc+0x28>
    71f4:	04 01 00 f2 	bz s4, 32 <valloc+0x58>
    71f8:	80 00 00 a8 	load_32 s4, (s0)
    71fc:	e4 ff ff f5 	bnz s4, -4 <valloc+0x3c>
    7200:	80 00 00 aa 	load_sync s4, (s0)
    7204:	a0 80 f1 c0 	move s5, s3
    7208:	a0 00 00 8a 	store_sync s5, (s0)  
    720c:	a5 ff ff f3 	bz s5, -12 <valloc+0x44>
    7210:	44 ff ff f5 	bnz s4, -24 <valloc+0x3c>
    7214:	62 00 00 a8 	load_32 s3, (s2)
    7218:	a3 02 00 f4 	bnz s3, 84 <valloc+0xb0>
    721c:	60 00 40 0f 	move s3, 4096
    7220:	62 20 00 88 	store_32 s3, 8(s2)
    7224:	62 10 00 88 	store_32 s3, 4(s2)
    7228:	60 fc ff 0f 	move s3, -1
    722c:	62 30 00 88 	store_32 s3, 12(s2)
    7230:	66 00 00 4f 	movehi s3, 6
    7234:	80 20 00 4f 	movehi s4, 256
    7238:	82 40 00 88 	store_32 s4, 16(s2)
    723c:	80 08 00 0f 	move s4, 2
    7240:	82 50 00 88 	store_32 s4, 20(s2)
    7244:	63 70 65 00 	or s3, s3, 6492
    7248:	ca 54 55 4f 	movehi s6, 174762
    724c:	a0 00 00 0f 	move s5, 0
    7250:	83 f0 06 88 	store_32 s4, 444(s3)
    7254:	9e e0 00 05 	add_i s4, sp, 56
    7258:	a3 00 07 88 	store_32 s5, 448(s3)
    725c:	66 60 55 00 	or s3, s6, 5464
    7260:	84 c0 ff 01 	and s4, s4, -16
    7264:	64 80 31 c0 	xor s3, s4, s3
    7268:	62 00 00 88 	store_32 s3, (s2)
    726c:	60 00 00 0f 	move s3, 0
    7270:	80 00 00 aa 	load_sync s4, (s0)
    7274:	80 80 f1 c0 	move s4, s3
    7278:	80 00 00 8a 	store_sync s4, (s0)  
    727c:	a4 ff ff f3 	bz s4, -12 <valloc+0xb4>
    7280:	02 10 00 a8 	load_32 s0, 4(s2)
    7284:	40 20 00 16 	cmpgt_u s2, s0, 8
    7288:	c2 00 00 f4 	bnz s2, 24 <valloc+0xe4>
    728c:	00 80 f0 c0 	move s0, s1
    7290:	b6 f2 ff f9 	call -13608 <malloc>
    7294:	fe f3 00 a8 	load_32 ra, 60(sp)
    7298:	de 03 01 05 	add_i sp, sp, 64
    729c:	1f 00 00 f0 	ret
    72a0:	04 ff ff f9 	call -1008 <internal_memalign>
    72a4:	fe f3 00 a8 	load_32 ra, 60(sp)
    72a8:	de 03 01 05 	add_i sp, sp, 64
    72ac:	1f 00 00 f0 	ret

00000000000072b0 pvalloc:
    72b0:	de 03 ff 05 	add_i sp, sp, -64
    72b4:	fe f3 00 88 	store_32 ra, 60(sp)
    72b8:	26 00 00 4f 	movehi s1, 6
    72bc:	21 10 65 00 	or s1, s1, 6468
    72c0:	41 00 00 a8 	load_32 s2, (s1)
    72c4:	62 05 00 f4 	bnz s2, 172 <pvalloc+0xc0>
    72c8:	46 00 00 4f 	movehi s2, 6
    72cc:	60 04 00 0f 	move s3, 1
    72d0:	42 e0 6c 00 	or s2, s2, 6968
    72d4:	82 00 00 aa 	load_sync s4, (s2)
    72d8:	a0 80 f1 c0 	move s5, s3
    72dc:	a2 00 00 8a 	store_sync s5, (s2)  
    72e0:	a5 ff ff f3 	bz s5, -12 <pvalloc+0x24>
    72e4:	04 01 00 f2 	bz s4, 32 <pvalloc+0x54>
    72e8:	82 00 00 a8 	load_32 s4, (s2)
    72ec:	e4 ff ff f5 	bnz s4, -4 <pvalloc+0x38>
    72f0:	82 00 00 aa 	load_sync s4, (s2)
    72f4:	a0 80 f1 c0 	move s5, s3
    72f8:	a2 00 00 8a 	store_sync s5, (s2)  
    72fc:	a5 ff ff f3 	bz s5, -12 <pvalloc+0x40>
    7300:	44 ff ff f5 	bnz s4, -24 <pvalloc+0x38>
    7304:	61 00 00 a8 	load_32 s3, (s1)
    7308:	a3 02 00 f4 	bnz s3, 84 <pvalloc+0xac>
    730c:	60 00 40 0f 	move s3, 4096
    7310:	61 20 00 88 	store_32 s3, 8(s1)
    7314:	61 10 00 88 	store_32 s3, 4(s1)
    7318:	60 fc ff 0f 	move s3, -1
    731c:	61 30 00 88 	store_32 s3, 12(s1)
    7320:	66 00 00 4f 	movehi s3, 6
    7324:	80 20 00 4f 	movehi s4, 256
    7328:	81 40 00 88 	store_32 s4, 16(s1)
    732c:	80 08 00 0f 	move s4, 2
    7330:	81 50 00 88 	store_32 s4, 20(s1)
    7334:	63 70 65 00 	or s3, s3, 6492
    7338:	ca 54 55 4f 	movehi s6, 174762
    733c:	a0 00 00 0f 	move s5, 0
    7340:	83 f0 06 88 	store_32 s4, 444(s3)
    7344:	9e e0 00 05 	add_i s4, sp, 56
    7348:	a3 00 07 88 	store_32 s5, 448(s3)
    734c:	66 60 55 00 	or s3, s6, 5464
    7350:	84 c0 ff 01 	and s4, s4, -16
    7354:	64 80 31 c0 	xor s3, s4, s3
    7358:	61 00 00 88 	store_32 s3, (s1)
    735c:	60 00 00 0f 	move s3, 0
    7360:	82 00 00 aa 	load_sync s4, (s2)
    7364:	80 80 f1 c0 	move s4, s3
    7368:	82 00 00 8a 	store_sync s4, (s2)  
    736c:	a4 ff ff f3 	bz s4, -12 <pvalloc+0xb0>
    7370:	21 10 00 a8 	load_32 s1, 4(s1)
    7374:	40 00 00 0f 	move s2, 0
    7378:	00 80 50 c0 	add_i s0, s0, s1
    737c:	42 80 60 c0 	sub_i s2, s2, s1
    7380:	61 20 00 16 	cmpgt_u s3, s1, 8
    7384:	00 fc ff 05 	add_i s0, s0, -1
    7388:	40 00 11 c0 	and s2, s0, s2
    738c:	c3 00 00 f4 	bnz s3, 24 <pvalloc+0xf4>
    7390:	00 00 f1 c0 	move s0, s2
    7394:	75 f2 ff f9 	call -13868 <malloc>
    7398:	fe f3 00 a8 	load_32 ra, 60(sp)
    739c:	de 03 01 05 	add_i sp, sp, 64
    73a0:	1f 00 00 f0 	ret
    73a4:	00 80 f0 c0 	move s0, s1
    73a8:	20 00 f1 c0 	move s1, s2
    73ac:	c1 fe ff f9 	call -1276 <internal_memalign>
    73b0:	fe f3 00 a8 	load_32 ra, 60(sp)
    73b4:	de 03 01 05 	add_i sp, sp, 64
    73b8:	1f 00 00 f0 	ret

00000000000073bc independent_calloc:
    73bc:	de 03 ff 05 	add_i sp, sp, -64
    73c0:	fe f3 00 88 	store_32 ra, 60(sp)
    73c4:	60 00 f1 c0 	move s3, s2
    73c8:	3e e0 00 88 	store_32 s1, 56(sp)
    73cc:	3e e0 00 05 	add_i s1, sp, 56
    73d0:	40 0c 00 0f 	move s2, 3
    73d4:	04 00 00 f8 	call 16 <ialloc>
    73d8:	fe f3 00 a8 	load_32 ra, 60(sp)
    73dc:	de 03 01 05 	add_i sp, sp, 64
    73e0:	1f 00 00 f0 	ret

00000000000073e4 ialloc:
    73e4:	de 03 ff 05 	add_i sp, sp, -64
    73e8:	1e f3 00 88 	store_32 s24, 60(sp)
    73ec:	3e e3 00 88 	store_32 s25, 56(sp)
    73f0:	5e d3 00 88 	store_32 s26, 52(sp)
    73f4:	7e c3 00 88 	store_32 s27, 48(sp)
    73f8:	fe b3 00 88 	store_32 ra, 44(sp)
    73fc:	86 00 00 4f 	movehi s4, 6
    7400:	84 10 65 00 	or s4, s4, 6468
    7404:	a4 00 00 a8 	load_32 s5, (s4)
    7408:	00 81 f1 c0 	move s8, s3
    740c:	00 03 f1 c0 	move s24, s2
    7410:	20 83 f0 c0 	move s25, s1
    7414:	40 03 f0 c0 	move s26, s0
    7418:	65 05 00 f4 	bnz s5, 172 <ialloc+0xe0>
    741c:	06 00 00 4f 	movehi s0, 6
    7420:	20 04 00 0f 	move s1, 1
    7424:	00 e0 6c 00 	or s0, s0, 6968
    7428:	40 00 00 aa 	load_sync s2, (s0)
    742c:	60 80 f0 c0 	move s3, s1
    7430:	60 00 00 8a 	store_sync s3, (s0)  
    7434:	a3 ff ff f3 	bz s3, -12 <ialloc+0x44>
    7438:	02 01 00 f2 	bz s2, 32 <ialloc+0x74>
    743c:	40 00 00 a8 	load_32 s2, (s0)
    7440:	e2 ff ff f5 	bnz s2, -4 <ialloc+0x58>
    7444:	40 00 00 aa 	load_sync s2, (s0)
    7448:	60 80 f0 c0 	move s3, s1
    744c:	60 00 00 8a 	store_sync s3, (s0)  
    7450:	a3 ff ff f3 	bz s3, -12 <ialloc+0x60>
    7454:	42 ff ff f5 	bnz s2, -24 <ialloc+0x58>
    7458:	24 00 00 a8 	load_32 s1, (s4)
    745c:	a1 02 00 f4 	bnz s1, 84 <ialloc+0xcc>
    7460:	20 00 40 0f 	move s1, 4096
    7464:	24 20 00 88 	store_32 s1, 8(s4)
    7468:	24 10 00 88 	store_32 s1, 4(s4)
    746c:	20 fc ff 0f 	move s1, -1
    7470:	24 30 00 88 	store_32 s1, 12(s4)
    7474:	26 00 00 4f 	movehi s1, 6
    7478:	40 20 00 4f 	movehi s2, 256
    747c:	44 40 00 88 	store_32 s2, 16(s4)
    7480:	40 08 00 0f 	move s2, 2
    7484:	44 50 00 88 	store_32 s2, 20(s4)
    7488:	21 70 65 00 	or s1, s1, 6492
    748c:	aa 54 55 4f 	movehi s5, 174762
    7490:	60 00 00 0f 	move s3, 0
    7494:	41 f0 06 88 	store_32 s2, 444(s1)
    7498:	5e a0 00 05 	add_i s2, sp, 40
    749c:	61 00 07 88 	store_32 s3, 448(s1)
    74a0:	25 60 55 00 	or s1, s5, 5464
    74a4:	42 c0 ff 01 	and s2, s2, -16
    74a8:	22 80 30 c0 	xor s1, s2, s1
    74ac:	24 00 00 88 	store_32 s1, (s4)
    74b0:	20 00 00 0f 	move s1, 0
    74b4:	40 00 00 aa 	load_sync s2, (s0)
    74b8:	40 80 f0 c0 	move s2, s1
    74bc:	40 00 00 8a 	store_sync s2, (s0)  
    74c0:	a2 ff ff f3 	bz s2, -12 <ialloc+0xd0>
    74c4:	08 03 00 f2 	bz s8, 96 <ialloc+0x140>
    74c8:	9a 14 00 f2 	bz s26, 656 <ialloc+0x374>
    74cc:	c0 00 00 0f 	move s6, 0
    74d0:	18 04 00 01 	and s0, s24, 1
    74d4:	1e 91 00 88 	store_32 s8, 36(sp)
    74d8:	c0 03 00 f4 	bnz s0, 120 <ialloc+0x16c>
    74dc:	a0 00 00 0f 	move s5, 0
    74e0:	00 40 00 0f 	move s0, 16
    74e4:	20 80 f2 c0 	move s1, s5
    74e8:	60 83 f2 c0 	move s27, s5
    74ec:	41 08 00 0b 	shl s2, s1, 2
    74f0:	59 00 51 c0 	add_i s2, s25, s2
    74f4:	62 00 00 a8 	load_32 s3, (s2)
    74f8:	40 00 f0 c0 	move s2, s0
    74fc:	83 2c 00 18 	cmplt_u s4, s3, 11
    7500:	64 00 00 f4 	bnz s4, 12 <ialloc+0x128>
    7504:	43 2c 00 05 	add_i s2, s3, 11
    7508:	42 e0 ff 01 	and s2, s2, -8
    750c:	21 04 00 05 	add_i s1, s1, 1
    7510:	62 83 5d c0 	add_i s27, s2, s27
    7514:	61 00 1d c1 	cmpne_i s3, s1, s26
    7518:	a3 fe ff f5 	bnz s3, -44 <ialloc+0x108>
    751c:	be 80 00 88 	store_32 s5, 32(sp)
    7520:	15 00 00 f6 	b 84 <ialloc+0x190>
    7524:	5a 00 00 f4 	bnz s26, 8 <ialloc+0x148>
    7528:	59 00 00 f6 	b 356 <ialloc+0x2a8>
    752c:	1a 08 00 0b 	shl s0, s26, 2
    7530:	20 2c 00 18 	cmplt_u s1, s0, 11
    7534:	61 0c 00 f4 	bnz s1, 396 <ialloc+0x2dc>
    7538:	00 2c 00 05 	add_i s0, s0, 11
    753c:	c0 e0 ff 01 	and s6, s0, -8
    7540:	18 04 00 01 	and s0, s24, 1
    7544:	1e 91 00 88 	store_32 s8, 36(sp)
    7548:	40 00 00 f4 	bnz s0, 8 <ialloc+0x16c>
    754c:	e4 ff ff f7 	b -112 <ialloc+0xf8>
    7550:	19 00 00 a8 	load_32 s0, (s25)
    7554:	20 2c 00 18 	cmplt_u s1, s0, 11
    7558:	81 00 00 f4 	bnz s1, 16 <ialloc+0x184>
    755c:	00 2c 00 05 	add_i s0, s0, 11
    7560:	00 e0 ff 01 	and s0, s0, -8
    7564:	02 00 00 f6 	b 8 <ialloc+0x188>
    7568:	00 40 00 0f 	move s0, 16
    756c:	60 03 7d c0 	mull_i s27, s0, s26
    7570:	1e 80 00 88 	store_32 s0, 32(sp)
    7574:	06 80 5d c0 	add_i s0, s6, s27
    7578:	de 70 00 88 	store_32 s6, 28(sp)
    757c:	00 f0 ff 05 	add_i s0, s0, -4
    7580:	fa f1 ff f9 	call -14360 <malloc>
    7584:	00 08 00 f2 	bz s0, 256 <ialloc+0x2a0>
    7588:	26 00 00 4f 	movehi s1, 6
    758c:	80 00 fc c0 	move s4, s24
    7590:	01 73 65 00 	or s24, s1, 6492
    7594:	38 f0 06 a0 	load_u8 s1, 444(s24)
    7598:	1e 91 00 a8 	load_32 s8, 36(sp)
    759c:	3e 81 00 a8 	load_32 s9, 32(sp)
    75a0:	21 08 00 01 	and s1, s1, 2
    75a4:	e1 01 00 f2 	bz s1, 60 <ialloc+0x1fc>
    75a8:	b8 00 07 05 	add_i s5, s24, 448
    75ac:	20 04 00 0f 	move s1, 1
    75b0:	45 00 00 aa 	load_sync s2, (s5)
    75b4:	60 80 f0 c0 	move s3, s1
    75b8:	65 00 00 8a 	store_sync s3, (s5)  
    75bc:	a3 ff ff f3 	bz s3, -12 <ialloc+0x1cc>
    75c0:	02 01 00 f2 	bz s2, 32 <ialloc+0x1fc>
    75c4:	58 00 07 a8 	load_32 s2, 448(s24)
    75c8:	e2 ff ff f5 	bnz s2, -4 <ialloc+0x1e0>
    75cc:	45 00 00 aa 	load_sync s2, (s5)
    75d0:	60 80 f0 c0 	move s3, s1
    75d4:	65 00 00 8a 	store_sync s3, (s5)  
    75d8:	a3 ff ff f3 	bz s3, -12 <ialloc+0x1e8>
    75dc:	42 ff ff f5 	bnz s2, -24 <ialloc+0x1e0>
    75e0:	40 f0 ff a9 	load_32 s2, -4(s0)
    75e4:	24 08 00 01 	and s1, s4, 2
    75e8:	62 e0 ff 01 	and s3, s2, -8
    75ec:	a1 01 00 f2 	bz s1, 52 <ialloc+0x23c>
    75f0:	3e 70 00 a8 	load_32 s1, 28(sp)
    75f4:	40 f0 ff 0f 	move s2, -4
    75f8:	1e 70 00 88 	store_32 s0, 28(sp)
    75fc:	7e 60 00 88 	store_32 s3, 24(sp)
    7600:	22 80 60 c0 	sub_i s1, s2, s1
    7604:	41 80 51 c0 	add_i s2, s1, s3
    7608:	20 00 00 0f 	move s1, 0
    760c:	85 04 00 f8 	call 4628 <memset>
    7610:	7e 60 00 a8 	load_32 s3, 24(sp)
    7614:	1e 70 00 a8 	load_32 s0, 28(sp)
    7618:	3e 81 00 a8 	load_32 s9, 32(sp)
    761c:	1e 91 00 a8 	load_32 s8, 36(sp)
    7620:	40 e1 ff 05 	add_i s10, s0, -8
    7624:	48 00 00 f4 	bnz s8, 8 <ialloc+0x248>
    7628:	1d 00 00 f6 	b 116 <ialloc+0x2b8>
    762c:	60 83 f1 c0 	move s27, s3
    7630:	3a fc ff 05 	add_i s1, s26, -1
    7634:	08 00 00 88 	store_32 s0, (s8)
    7638:	a1 07 00 f2 	bz s1, 244 <ialloc+0x348>
    763c:	49 00 00 f4 	bnz s9, 8 <ialloc+0x260>
    7640:	25 00 00 f6 	b 148 <ialloc+0x2f0>
    7644:	40 04 00 0f 	move s2, 1
    7648:	69 0c 00 00 	or s3, s9, 3
    764c:	80 00 00 0f 	move s4, 0
    7650:	42 00 6d c0 	sub_i s2, s2, s26
    7654:	49 00 71 c0 	mull_i s2, s9, s2
    7658:	84 04 00 05 	add_i s4, s4, 1
    765c:	6a 10 00 88 	store_32 s3, 4(s10)
    7660:	4a 81 54 c0 	add_i s10, s10, s9
    7664:	a4 08 00 0b 	shl s5, s4, 2
    7668:	e4 80 10 c1 	cmpne_i s7, s4, s1
    766c:	a8 80 52 c0 	add_i s5, s8, s5
    7670:	ca 20 00 05 	add_i s6, s10, 8
    7674:	c5 00 00 88 	store_32 s6, (s5)
    7678:	07 ff ff f5 	bnz s7, -32 <ialloc+0x274>
    767c:	7b 03 51 c0 	add_i s27, s27, s2
    7680:	2b 00 00 f6 	b 172 <ialloc+0x348>
    7684:	00 01 00 0f 	move s8, 0
    7688:	34 00 00 f6 	b 208 <ialloc+0x374>
    768c:	00 00 00 0f 	move s0, 0
    7690:	b6 f1 ff f9 	call -14632 <malloc>
    7694:	00 01 f0 c0 	move s8, s0
    7698:	30 00 00 f6 	b 192 <ialloc+0x374>
    769c:	2a 80 5d c0 	add_i s1, s10, s27
    76a0:	43 80 6d c0 	sub_i s2, s3, s27
    76a4:	01 21 00 05 	add_i s8, s1, 8
    76a8:	42 0c 00 00 	or s2, s2, 3
    76ac:	41 10 00 88 	store_32 s2, 4(s1)
    76b0:	3a fc ff 05 	add_i s1, s26, -1
    76b4:	08 00 00 88 	store_32 s0, (s8)
    76b8:	a1 03 00 f2 	bz s1, 116 <ialloc+0x348>
    76bc:	e0 ff ff f7 	b -128 <ialloc+0x258>
    76c0:	c0 40 00 0f 	move s6, 16
    76c4:	18 04 00 01 	and s0, s24, 1
    76c8:	1e 91 00 88 	store_32 s8, 36(sp)
    76cc:	20 f4 ff f5 	bnz s0, -380 <ialloc+0x16c>
    76d0:	83 ff ff f7 	b -500 <ialloc+0xf8>
    76d4:	40 00 00 0f 	move s2, 0
    76d8:	60 40 00 0f 	move s3, 16
    76dc:	82 08 00 0b 	shl s4, s2, 2
    76e0:	99 00 52 c0 	add_i s4, s25, s4
    76e4:	a4 00 00 a8 	load_32 s5, (s4)
    76e8:	80 80 f1 c0 	move s4, s3
    76ec:	c5 2c 00 18 	cmplt_u s6, s5, 11
    76f0:	66 00 00 f4 	bnz s6, 12 <ialloc+0x318>
    76f4:	85 2c 00 05 	add_i s4, s5, 11
    76f8:	84 e0 ff 01 	and s4, s4, -8
    76fc:	42 04 00 05 	add_i s2, s2, 1
    7700:	a4 0c 00 00 	or s5, s4, 3
    7704:	aa 10 00 88 	store_32 s5, 4(s10)
    7708:	4a 01 52 c0 	add_i s10, s10, s4
    770c:	7b 03 62 c0 	sub_i s27, s27, s4
    7710:	82 08 00 0b 	shl s4, s2, 2
    7714:	c2 80 00 c1 	cmpeq_i s6, s2, s1
    7718:	88 00 52 c0 	add_i s4, s8, s4
    771c:	aa 20 00 05 	add_i s5, s10, 8
    7720:	a4 00 00 88 	store_32 s5, (s4)
    7724:	46 00 00 f4 	bnz s6, 8 <ialloc+0x348>
    7728:	ed ff ff f7 	b -76 <ialloc+0x2f8>
    772c:	3b 0c 00 00 	or s1, s27, 3
    7730:	2a 10 00 88 	store_32 s1, 4(s10)
    7734:	18 f0 06 a0 	load_u8 s0, 444(s24)
    7738:	00 08 00 01 	and s0, s0, 2
    773c:	e0 00 00 f2 	bz s0, 28 <ialloc+0x374>
    7740:	18 00 07 05 	add_i s0, s24, 448
    7744:	20 00 00 0f 	move s1, 0
    7748:	40 00 00 aa 	load_sync s2, (s0)
    774c:	40 80 f0 c0 	move s2, s1
    7750:	40 00 00 8a 	store_sync s2, (s0)  
    7754:	a2 ff ff f3 	bz s2, -12 <ialloc+0x364>
    7758:	00 00 f4 c0 	move s0, s8
    775c:	fe b3 00 a8 	load_32 ra, 44(sp)
    7760:	7e c3 00 a8 	load_32 s27, 48(sp)
    7764:	5e d3 00 a8 	load_32 s26, 52(sp)
    7768:	3e e3 00 a8 	load_32 s25, 56(sp)
    776c:	1e f3 00 a8 	load_32 s24, 60(sp)
    7770:	de 03 01 05 	add_i sp, sp, 64
    7774:	1f 00 00 f0 	ret

0000000000007778 independent_comalloc:
    7778:	de 03 ff 05 	add_i sp, sp, -64
    777c:	fe f3 00 88 	store_32 ra, 60(sp)
    7780:	60 00 f1 c0 	move s3, s2
    7784:	40 00 00 0f 	move s2, 0
    7788:	17 ff ff f9 	call -932 <ialloc>
    778c:	fe f3 00 a8 	load_32 ra, 60(sp)
    7790:	de 03 01 05 	add_i sp, sp, 64
    7794:	1f 00 00 f0 	ret

0000000000007798 bulk_free:
    7798:	de 03 ff 05 	add_i sp, sp, -64
    779c:	1e f3 00 88 	store_32 s24, 60(sp)
    77a0:	3e e3 00 88 	store_32 s25, 56(sp)
    77a4:	5e d3 00 88 	store_32 s26, 52(sp)
    77a8:	7e c3 00 88 	store_32 s27, 48(sp)
    77ac:	fe b3 00 88 	store_32 ra, 44(sp)
    77b0:	46 00 00 4f 	movehi s2, 6
    77b4:	22 73 65 00 	or s25, s2, 6492
    77b8:	59 f0 06 a0 	load_u8 s2, 444(s25)
    77bc:	00 03 f0 c0 	move s24, s0
    77c0:	42 08 00 01 	and s2, s2, 2
    77c4:	e2 01 00 f2 	bz s2, 60 <bulk_free+0x68>
    77c8:	19 00 07 05 	add_i s0, s25, 448
    77cc:	40 04 00 0f 	move s2, 1
    77d0:	60 00 00 aa 	load_sync s3, (s0)
    77d4:	80 00 f1 c0 	move s4, s2
    77d8:	80 00 00 8a 	store_sync s4, (s0)  
    77dc:	a4 ff ff f3 	bz s4, -12 <bulk_free+0x38>
    77e0:	03 01 00 f2 	bz s3, 32 <bulk_free+0x68>
    77e4:	79 00 07 a8 	load_32 s3, 448(s25)
    77e8:	e3 ff ff f5 	bnz s3, -4 <bulk_free+0x4c>
    77ec:	60 00 00 aa 	load_sync s3, (s0)
    77f0:	80 00 f1 c0 	move s4, s2
    77f4:	80 00 00 8a 	store_sync s4, (s0)  
    77f8:	a4 ff ff f3 	bz s4, -12 <bulk_free+0x54>
    77fc:	43 ff ff f5 	bnz s3, -24 <bulk_free+0x4c>
    7800:	c1 05 00 f2 	bz s1, 184 <bulk_free+0x120>
    7804:	01 08 00 0b 	shl s0, s1, 2
    7808:	58 03 50 c0 	add_i s26, s24, s0
    780c:	60 03 00 0f 	move s27, 0
    7810:	58 00 00 a8 	load_32 s2, (s24)
    7814:	a2 02 00 f2 	bz s2, 84 <bulk_free+0xd0>
    7818:	62 f0 ff a9 	load_32 s3, -4(s2)
    781c:	78 03 00 88 	store_32 s27, (s24)
    7820:	39 40 00 a8 	load_32 s1, 16(s25)
    7824:	03 0c 00 01 	and s0, s3, 3
    7828:	00 04 00 10 	cmpeq_i s0, s0, 1
    782c:	40 07 00 f4 	bnz s0, 232 <bulk_free+0x17c>
    7830:	02 e0 ff 05 	add_i s0, s2, -8
    7834:	20 80 80 c1 	cmplt_u s1, s0, s1
    7838:	e1 06 00 f4 	bnz s1, 220 <bulk_free+0x17c>
    783c:	98 10 00 05 	add_i s4, s24, 4
    7840:	23 e0 ff 01 	and s1, s3, -8
    7844:	a4 00 0d c1 	cmpeq_i s5, s4, s26
    7848:	e5 00 00 f4 	bnz s5, 28 <bulk_free+0xcc>
    784c:	a0 80 50 c0 	add_i s5, s0, s1
    7850:	c4 00 00 a8 	load_32 s6, (s4)
    7854:	e5 20 00 05 	add_i s7, s5, 8
    7858:	c6 80 13 c1 	cmpne_i s6, s6, s7
    785c:	46 00 00 f4 	bnz s6, 8 <bulk_free+0xcc>
    7860:	06 00 00 f6 	b 24 <bulk_free+0xe0>
    7864:	83 01 00 f8 	call 1548 <dispose_chunk>
    7868:	18 13 00 05 	add_i s24, s24, 4
    786c:	18 00 1d c1 	cmpne_i s0, s24, s26
    7870:	00 fd ff f5 	bnz s0, -96 <bulk_free+0x78>
    7874:	11 00 00 f6 	b 68 <bulk_free+0x120>
    7878:	05 10 00 a8 	load_32 s0, 4(s5)
    787c:	63 04 00 01 	and s3, s3, 1
    7880:	a2 f0 ff 05 	add_i s5, s2, -4
    7884:	00 e0 ff 01 	and s0, s0, -8
    7888:	00 80 50 c0 	add_i s0, s0, s1
    788c:	23 00 00 c0 	or s1, s3, s0
    7890:	05 00 50 c0 	add_i s0, s5, s0
    7894:	21 08 00 00 	or s1, s1, 2
    7898:	22 f0 ff 89 	store_32 s1, -4(s2)
    789c:	20 00 00 a8 	load_32 s1, (s0)
    78a0:	21 04 00 00 	or s1, s1, 1
    78a4:	20 00 00 88 	store_32 s1, (s0)
    78a8:	44 00 00 88 	store_32 s2, (s4)
    78ac:	18 13 00 05 	add_i s24, s24, 4
    78b0:	18 00 1d c1 	cmpne_i s0, s24, s26
    78b4:	e0 fa ff f5 	bnz s0, -164 <bulk_free+0x78>
    78b8:	19 30 00 a8 	load_32 s0, 12(s25)
    78bc:	39 70 00 a8 	load_32 s1, 28(s25)
    78c0:	00 80 90 c1 	cmple_u s0, s0, s1
    78c4:	60 00 00 f4 	bnz s0, 12 <bulk_free+0x138>
    78c8:	00 00 00 0f 	move s0, 0
    78cc:	c9 fa ff f9 	call -5340 <sys_trim>
    78d0:	19 f0 06 a0 	load_u8 s0, 444(s25)
    78d4:	00 08 00 01 	and s0, s0, 2
    78d8:	e0 00 00 f2 	bz s0, 28 <bulk_free+0x15c>
    78dc:	19 00 07 05 	add_i s0, s25, 448
    78e0:	20 00 00 0f 	move s1, 0
    78e4:	40 00 00 aa 	load_sync s2, (s0)
    78e8:	40 80 f0 c0 	move s2, s1
    78ec:	40 00 00 8a 	store_sync s2, (s0)  
    78f0:	a2 ff ff f3 	bz s2, -12 <bulk_free+0x14c>
    78f4:	fe b3 00 a8 	load_32 ra, 44(sp)
    78f8:	00 00 00 0f 	move s0, 0
    78fc:	7e c3 00 a8 	load_32 s27, 48(sp)
    7900:	5e d3 00 a8 	load_32 s26, 52(sp)
    7904:	3e e3 00 a8 	load_32 s25, 56(sp)
    7908:	1e f3 00 a8 	load_32 s24, 60(sp)
    790c:	de 03 01 05 	add_i sp, sp, 64
    7910:	1f 00 00 f0 	ret
    7914:	2e 03 00 f8 	call 3256 <abort>

0000000000007918 malloc_trim:
    7918:	de 03 ff 05 	add_i sp, sp, -64
    791c:	1e f3 00 88 	store_32 s24, 60(sp)
    7920:	fe e3 00 88 	store_32 ra, 56(sp)
    7924:	26 00 00 4f 	movehi s1, 6
    7928:	41 10 65 00 	or s2, s1, 6468
    792c:	22 00 00 a8 	load_32 s1, (s2)
    7930:	61 05 00 f4 	bnz s1, 172 <malloc_trim+0xc4>
    7934:	26 00 00 4f 	movehi s1, 6
    7938:	60 04 00 0f 	move s3, 1
    793c:	21 e0 6c 00 	or s1, s1, 6968
    7940:	81 00 00 aa 	load_sync s4, (s1)
    7944:	a0 80 f1 c0 	move s5, s3
    7948:	a1 00 00 8a 	store_sync s5, (s1)  
    794c:	a5 ff ff f3 	bz s5, -12 <malloc_trim+0x28>
    7950:	04 01 00 f2 	bz s4, 32 <malloc_trim+0x58>
    7954:	81 00 00 a8 	load_32 s4, (s1)
    7958:	e4 ff ff f5 	bnz s4, -4 <malloc_trim+0x3c>
    795c:	81 00 00 aa 	load_sync s4, (s1)
    7960:	a0 80 f1 c0 	move s5, s3
    7964:	a1 00 00 8a 	store_sync s5, (s1)  
    7968:	a5 ff ff f3 	bz s5, -12 <malloc_trim+0x44>
    796c:	44 ff ff f5 	bnz s4, -24 <malloc_trim+0x3c>
    7970:	62 00 00 a8 	load_32 s3, (s2)
    7974:	a3 02 00 f4 	bnz s3, 84 <malloc_trim+0xb0>
    7978:	60 00 40 0f 	move s3, 4096
    797c:	62 20 00 88 	store_32 s3, 8(s2)
    7980:	62 10 00 88 	store_32 s3, 4(s2)
    7984:	60 fc ff 0f 	move s3, -1
    7988:	62 30 00 88 	store_32 s3, 12(s2)
    798c:	66 00 00 4f 	movehi s3, 6
    7990:	80 20 00 4f 	movehi s4, 256
    7994:	82 40 00 88 	store_32 s4, 16(s2)
    7998:	80 08 00 0f 	move s4, 2
    799c:	82 50 00 88 	store_32 s4, 20(s2)
    79a0:	63 70 65 00 	or s3, s3, 6492
    79a4:	ca 54 55 4f 	movehi s6, 174762
    79a8:	a0 00 00 0f 	move s5, 0
    79ac:	83 f0 06 88 	store_32 s4, 444(s3)
    79b0:	9e d0 00 05 	add_i s4, sp, 52
    79b4:	a3 00 07 88 	store_32 s5, 448(s3)
    79b8:	66 60 55 00 	or s3, s6, 5464
    79bc:	84 c0 ff 01 	and s4, s4, -16
    79c0:	64 80 31 c0 	xor s3, s4, s3
    79c4:	62 00 00 88 	store_32 s3, (s2)
    79c8:	40 00 00 0f 	move s2, 0
    79cc:	61 00 00 aa 	load_sync s3, (s1)
    79d0:	60 00 f1 c0 	move s3, s2
    79d4:	61 00 00 8a 	store_sync s3, (s1)  
    79d8:	a3 ff ff f3 	bz s3, -12 <malloc_trim+0xb4>
    79dc:	26 00 00 4f 	movehi s1, 6
    79e0:	01 73 65 00 	or s24, s1, 6492
    79e4:	38 f0 06 a0 	load_u8 s1, 444(s24)
    79e8:	21 08 00 01 	and s1, s1, 2
    79ec:	e1 01 00 f2 	bz s1, 60 <malloc_trim+0x110>
    79f0:	38 00 07 05 	add_i s1, s24, 448
    79f4:	40 04 00 0f 	move s2, 1
    79f8:	61 00 00 aa 	load_sync s3, (s1)
    79fc:	80 00 f1 c0 	move s4, s2
    7a00:	81 00 00 8a 	store_sync s4, (s1)  
    7a04:	a4 ff ff f3 	bz s4, -12 <malloc_trim+0xe0>
    7a08:	03 01 00 f2 	bz s3, 32 <malloc_trim+0x110>
    7a0c:	78 00 07 a8 	load_32 s3, 448(s24)
    7a10:	e3 ff ff f5 	bnz s3, -4 <malloc_trim+0xf4>
    7a14:	61 00 00 aa 	load_sync s3, (s1)
    7a18:	80 00 f1 c0 	move s4, s2
    7a1c:	81 00 00 8a 	store_sync s4, (s1)  
    7a20:	a4 ff ff f3 	bz s4, -12 <malloc_trim+0xfc>
    7a24:	43 ff ff f5 	bnz s3, -24 <malloc_trim+0xf4>
    7a28:	72 fa ff f9 	call -5688 <sys_trim>
    7a2c:	38 f0 06 a0 	load_u8 s1, 444(s24)
    7a30:	21 08 00 01 	and s1, s1, 2
    7a34:	e1 00 00 f2 	bz s1, 28 <malloc_trim+0x138>
    7a38:	38 00 07 05 	add_i s1, s24, 448
    7a3c:	40 00 00 0f 	move s2, 0
    7a40:	61 00 00 aa 	load_sync s3, (s1)
    7a44:	60 00 f1 c0 	move s3, s2
    7a48:	61 00 00 8a 	store_sync s3, (s1)  
    7a4c:	a3 ff ff f3 	bz s3, -12 <malloc_trim+0x128>
    7a50:	fe e3 00 a8 	load_32 ra, 56(sp)
    7a54:	1e f3 00 a8 	load_32 s24, 60(sp)
    7a58:	de 03 01 05 	add_i sp, sp, 64
    7a5c:	1f 00 00 f0 	ret

0000000000007a60 malloc_footprint:
    7a60:	06 00 00 4f 	movehi s0, 6
    7a64:	00 70 65 00 	or s0, s0, 6492
    7a68:	00 c0 06 a8 	load_32 s0, 432(s0)
    7a6c:	1f 00 00 f0 	ret

0000000000007a70 malloc_max_footprint:
    7a70:	06 00 00 4f 	movehi s0, 6
    7a74:	00 70 65 00 	or s0, s0, 6492
    7a78:	00 d0 06 a8 	load_32 s0, 436(s0)
    7a7c:	1f 00 00 f0 	ret

0000000000007a80 malloc_footprint_limit:
    7a80:	06 00 00 4f 	movehi s0, 6
    7a84:	00 70 65 00 	or s0, s0, 6492
    7a88:	00 e0 06 a8 	load_32 s0, 440(s0)
    7a8c:	20 00 00 10 	cmpeq_i s1, s0, 0
    7a90:	41 00 00 f4 	bnz s1, 8 <malloc_footprint_limit+0x18>
    7a94:	02 00 00 f6 	b 8 <malloc_footprint_limit+0x1c>
    7a98:	00 fc ff 0f 	move s0, -1
    7a9c:	1f 00 00 f0 	ret

0000000000007aa0 malloc_set_footprint_limit:
    7aa0:	20 fc ff 10 	cmpeq_i s1, s0, -1
    7aa4:	a1 01 00 f4 	bnz s1, 52 <malloc_set_footprint_limit+0x38>
    7aa8:	26 00 00 4f 	movehi s1, 6
    7aac:	40 00 00 0f 	move s2, 0
    7ab0:	21 10 65 00 	or s1, s1, 6468
    7ab4:	21 20 00 a8 	load_32 s1, 8(s1)
    7ab8:	00 80 50 c0 	add_i s0, s0, s1
    7abc:	22 80 60 c0 	sub_i s1, s2, s1
    7ac0:	00 fc ff 05 	add_i s0, s0, -1
    7ac4:	00 80 10 c0 	and s0, s0, s1
    7ac8:	26 00 00 4f 	movehi s1, 6
    7acc:	21 70 65 00 	or s1, s1, 6492
    7ad0:	01 e0 06 88 	store_32 s0, 440(s1)
    7ad4:	1f 00 00 f0 	ret
    7ad8:	00 00 00 0f 	move s0, 0
    7adc:	26 00 00 4f 	movehi s1, 6
    7ae0:	21 70 65 00 	or s1, s1, 6492
    7ae4:	01 e0 06 88 	store_32 s0, 440(s1)
    7ae8:	1f 00 00 f0 	ret

0000000000007aec mallinfo:
    7aec:	de 03 ff 05 	add_i sp, sp, -64
    7af0:	1e f3 00 88 	store_32 s24, 60(sp)
    7af4:	3e e3 00 88 	store_32 s25, 56(sp)
    7af8:	fe d3 00 88 	store_32 ra, 52(sp)
    7afc:	20 03 00 0f 	move s25, 0
    7b00:	00 03 f0 c0 	move s24, s0
    7b04:	40 a0 00 0f 	move s2, 40
    7b08:	20 80 fc c0 	move s1, s25
    7b0c:	45 03 00 f8 	call 3348 <memset>
    7b10:	06 00 00 4f 	movehi s0, 6
    7b14:	20 10 65 00 	or s1, s0, 6468
    7b18:	01 00 00 a8 	load_32 s0, (s1)
    7b1c:	60 05 00 f4 	bnz s0, 172 <mallinfo+0xdc>
    7b20:	06 00 00 4f 	movehi s0, 6
    7b24:	40 04 00 0f 	move s2, 1
    7b28:	00 e0 6c 00 	or s0, s0, 6968
    7b2c:	60 00 00 aa 	load_sync s3, (s0)
    7b30:	80 00 f1 c0 	move s4, s2
    7b34:	80 00 00 8a 	store_sync s4, (s0)  
    7b38:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x40>
    7b3c:	03 01 00 f2 	bz s3, 32 <mallinfo+0x70>
    7b40:	60 00 00 a8 	load_32 s3, (s0)
    7b44:	e3 ff ff f5 	bnz s3, -4 <mallinfo+0x54>
    7b48:	60 00 00 aa 	load_sync s3, (s0)
    7b4c:	80 00 f1 c0 	move s4, s2
    7b50:	80 00 00 8a 	store_sync s4, (s0)  
    7b54:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x5c>
    7b58:	43 ff ff f5 	bnz s3, -24 <mallinfo+0x54>
    7b5c:	41 00 00 a8 	load_32 s2, (s1)
    7b60:	a2 02 00 f4 	bnz s2, 84 <mallinfo+0xc8>
    7b64:	40 00 40 0f 	move s2, 4096
    7b68:	41 20 00 88 	store_32 s2, 8(s1)
    7b6c:	41 10 00 88 	store_32 s2, 4(s1)
    7b70:	40 fc ff 0f 	move s2, -1
    7b74:	41 30 00 88 	store_32 s2, 12(s1)
    7b78:	46 00 00 4f 	movehi s2, 6
    7b7c:	60 20 00 4f 	movehi s3, 256
    7b80:	61 40 00 88 	store_32 s3, 16(s1)
    7b84:	60 08 00 0f 	move s3, 2
    7b88:	61 50 00 88 	store_32 s3, 20(s1)
    7b8c:	42 70 65 00 	or s2, s2, 6492
    7b90:	aa 54 55 4f 	movehi s5, 174762
    7b94:	80 00 00 0f 	move s4, 0
    7b98:	62 f0 06 88 	store_32 s3, 444(s2)
    7b9c:	7e c0 00 05 	add_i s3, sp, 48
    7ba0:	82 00 07 88 	store_32 s4, 448(s2)
    7ba4:	45 60 55 00 	or s2, s5, 5464
    7ba8:	63 c0 ff 01 	and s3, s3, -16
    7bac:	43 00 31 c0 	xor s2, s3, s2
    7bb0:	41 00 00 88 	store_32 s2, (s1)
    7bb4:	20 00 00 0f 	move s1, 0
    7bb8:	40 00 00 aa 	load_sync s2, (s0)
    7bbc:	40 80 f0 c0 	move s2, s1
    7bc0:	40 00 00 8a 	store_sync s2, (s0)  
    7bc4:	a2 ff ff f3 	bz s2, -12 <mallinfo+0xcc>
    7bc8:	06 00 00 4f 	movehi s0, 6
    7bcc:	00 70 65 00 	or s0, s0, 6492
    7bd0:	20 f0 06 a0 	load_u8 s1, 444(s0)
    7bd4:	21 08 00 01 	and s1, s1, 2
    7bd8:	e1 01 00 f2 	bz s1, 60 <mallinfo+0x128>
    7bdc:	20 00 07 05 	add_i s1, s0, 448
    7be0:	40 04 00 0f 	move s2, 1
    7be4:	61 00 00 aa 	load_sync s3, (s1)
    7be8:	80 00 f1 c0 	move s4, s2
    7bec:	81 00 00 8a 	store_sync s4, (s1)  
    7bf0:	a4 ff ff f3 	bz s4, -12 <mallinfo+0xf8>
    7bf4:	03 01 00 f2 	bz s3, 32 <mallinfo+0x128>
    7bf8:	60 00 07 a8 	load_32 s3, 448(s0)
    7bfc:	e3 ff ff f5 	bnz s3, -4 <mallinfo+0x10c>
    7c00:	61 00 00 aa 	load_sync s3, (s1)
    7c04:	80 00 f1 c0 	move s4, s2
    7c08:	81 00 00 8a 	store_sync s4, (s1)  
    7c0c:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x114>
    7c10:	43 ff ff f5 	bnz s3, -24 <mallinfo+0x10c>
    7c14:	40 60 00 a8 	load_32 s2, 24(s0)
    7c18:	62 06 00 f2 	bz s2, 204 <mallinfo+0x1f8>
    7c1c:	20 30 00 a8 	load_32 s1, 12(s0)
    7c20:	c0 10 07 05 	add_i s6, s0, 452
    7c24:	a0 04 00 0f 	move s5, 1
    7c28:	e0 e0 ff 0f 	move s7, -8
    7c2c:	61 a0 00 05 	add_i s3, s1, 40
    7c30:	80 80 f1 c0 	move s4, s3
    7c34:	06 01 00 a8 	load_32 s8, (s6)
    7c38:	28 21 00 05 	add_i s9, s8, 8
    7c3c:	29 1d 00 01 	and s9, s9, 7
    7c40:	49 01 00 10 	cmpeq_i s10, s9, 0
    7c44:	20 81 fc c0 	move s9, s25
    7c48:	6a 00 00 f4 	bnz s10, 12 <mallinfo+0x168>
    7c4c:	27 01 64 c0 	sub_i s9, s7, s8
    7c50:	29 1d 00 01 	and s9, s9, 7
    7c54:	46 11 00 a8 	load_32 s10, 4(s6)
    7c58:	28 81 54 c0 	add_i s9, s8, s9
    7c5c:	48 01 55 c0 	add_i s10, s8, s10
    7c60:	69 01 75 c1 	cmpge_u s11, s9, s10
    7c64:	6b 02 00 f4 	bnz s11, 76 <mallinfo+0x1c4>
    7c68:	62 81 04 c1 	cmpeq_i s11, s2, s9
    7c6c:	2b 02 00 f4 	bnz s11, 68 <mallinfo+0x1c4>
    7c70:	69 11 00 a8 	load_32 s11, 4(s9)
    7c74:	8b 1d 00 10 	cmpeq_i s12, s11, 7
    7c78:	cc 01 00 f4 	bnz s12, 56 <mallinfo+0x1c4>
    7c7c:	8b 0d 00 01 	and s12, s11, 3
    7c80:	6b e1 ff 01 	and s11, s11, -8
    7c84:	8c 05 00 10 	cmpeq_i s12, s12, 1
    7c88:	a0 81 f5 c0 	move s13, s11
    7c8c:	4c 00 00 f4 	bnz s12, 8 <mallinfo+0x1a8>
    7c90:	a0 81 fc c0 	move s13, s25
    7c94:	29 81 55 c0 	add_i s9, s9, s11
    7c98:	6b 80 51 c0 	add_i s3, s11, s3
    7c9c:	6c 05 00 01 	and s11, s12, 1
    7ca0:	8d 00 52 c0 	add_i s4, s13, s4
    7ca4:	89 01 74 c1 	cmpge_u s12, s9, s8
    7ca8:	a5 80 55 c0 	add_i s5, s5, s11
    7cac:	ac fd ff f5 	bnz s12, -76 <mallinfo+0x174>
    7cb0:	c6 20 00 a8 	load_32 s6, 8(s6)
    7cb4:	06 fc ff f5 	bnz s6, -128 <mallinfo+0x148>
    7cb8:	78 00 00 88 	store_32 s3, (s24)
    7cbc:	b8 10 00 88 	store_32 s5, 4(s24)
    7cc0:	40 c0 06 a8 	load_32 s2, 432(s0)
    7cc4:	62 80 61 c0 	sub_i s3, s2, s3
    7cc8:	78 40 00 88 	store_32 s3, 16(s24)
    7ccc:	60 d0 06 a8 	load_32 s3, 436(s0)
    7cd0:	42 00 62 c0 	sub_i s2, s2, s4
    7cd4:	78 50 00 88 	store_32 s3, 20(s24)
    7cd8:	58 70 00 88 	store_32 s2, 28(s24)
    7cdc:	98 80 00 88 	store_32 s4, 32(s24)
    7ce0:	38 90 00 88 	store_32 s1, 36(s24)
    7ce4:	20 f0 06 a0 	load_u8 s1, 444(s0)
    7ce8:	21 08 00 01 	and s1, s1, 2
    7cec:	e1 00 00 f2 	bz s1, 28 <mallinfo+0x21c>
    7cf0:	00 00 07 05 	add_i s0, s0, 448
    7cf4:	20 00 00 0f 	move s1, 0
    7cf8:	40 00 00 aa 	load_sync s2, (s0)
    7cfc:	40 80 f0 c0 	move s2, s1
    7d00:	40 00 00 8a 	store_sync s2, (s0)  
    7d04:	a2 ff ff f3 	bz s2, -12 <mallinfo+0x20c>
    7d08:	00 00 fc c0 	move s0, s24
    7d0c:	fe d3 00 a8 	load_32 ra, 52(sp)
    7d10:	3e e3 00 a8 	load_32 s25, 56(sp)
    7d14:	1e f3 00 a8 	load_32 s24, 60(sp)
    7d18:	de 03 01 05 	add_i sp, sp, 64
    7d1c:	1f 00 00 f0 	ret

0000000000007d20 mallopt:
    7d20:	de 03 ff 05 	add_i sp, sp, -64
    7d24:	46 00 00 4f 	movehi s2, 6
    7d28:	62 10 65 00 	or s3, s2, 6468
    7d2c:	43 00 00 a8 	load_32 s2, (s3)
    7d30:	62 05 00 f4 	bnz s2, 172 <mallopt+0xbc>
    7d34:	46 00 00 4f 	movehi s2, 6
    7d38:	80 04 00 0f 	move s4, 1
    7d3c:	42 e0 6c 00 	or s2, s2, 6968
    7d40:	a2 00 00 aa 	load_sync s5, (s2)
    7d44:	c0 00 f2 c0 	move s6, s4
    7d48:	c2 00 00 8a 	store_sync s6, (s2)  
    7d4c:	a6 ff ff f3 	bz s6, -12 <mallopt+0x20>
    7d50:	05 01 00 f2 	bz s5, 32 <mallopt+0x50>
    7d54:	a2 00 00 a8 	load_32 s5, (s2)
    7d58:	e5 ff ff f5 	bnz s5, -4 <mallopt+0x34>
    7d5c:	a2 00 00 aa 	load_sync s5, (s2)
    7d60:	c0 00 f2 c0 	move s6, s4
    7d64:	c2 00 00 8a 	store_sync s6, (s2)  
    7d68:	a6 ff ff f3 	bz s6, -12 <mallopt+0x3c>
    7d6c:	45 ff ff f5 	bnz s5, -24 <mallopt+0x34>
    7d70:	83 00 00 a8 	load_32 s4, (s3)
    7d74:	a4 02 00 f4 	bnz s4, 84 <mallopt+0xa8>
    7d78:	80 00 40 0f 	move s4, 4096
    7d7c:	83 20 00 88 	store_32 s4, 8(s3)
    7d80:	83 10 00 88 	store_32 s4, 4(s3)
    7d84:	80 fc ff 0f 	move s4, -1
    7d88:	83 30 00 88 	store_32 s4, 12(s3)
    7d8c:	86 00 00 4f 	movehi s4, 6
    7d90:	a0 20 00 4f 	movehi s5, 256
    7d94:	a3 40 00 88 	store_32 s5, 16(s3)
    7d98:	a0 08 00 0f 	move s5, 2
    7d9c:	a3 50 00 88 	store_32 s5, 20(s3)
    7da0:	84 70 65 00 	or s4, s4, 6492
    7da4:	ea 54 55 4f 	movehi s7, 174762
    7da8:	c0 00 00 0f 	move s6, 0
    7dac:	a4 f0 06 88 	store_32 s5, 444(s4)
    7db0:	be f0 00 05 	add_i s5, sp, 60
    7db4:	c4 00 07 88 	store_32 s6, 448(s4)
    7db8:	87 60 55 00 	or s4, s7, 5464
    7dbc:	a5 c0 ff 01 	and s5, s5, -16
    7dc0:	85 00 32 c0 	xor s4, s5, s4
    7dc4:	83 00 00 88 	store_32 s4, (s3)
    7dc8:	80 00 00 0f 	move s4, 0
    7dcc:	a2 00 00 aa 	load_sync s5, (s2)
    7dd0:	a0 00 f2 c0 	move s5, s4
    7dd4:	a2 00 00 8a 	store_sync s5, (s2)  
    7dd8:	a5 ff ff f3 	bz s5, -12 <mallopt+0xac>
    7ddc:	40 f4 ff 10 	cmpeq_i s2, s0, -3
    7de0:	02 01 00 f4 	bnz s2, 32 <mallopt+0xe0>
    7de4:	80 f8 ff 10 	cmpeq_i s4, s0, -2
    7de8:	40 00 00 0f 	move s2, 0
    7dec:	44 01 00 f4 	bnz s4, 40 <mallopt+0xf4>
    7df0:	00 fc ff 11 	cmpne_i s0, s0, -1
    7df4:	a0 00 00 f4 	bnz s0, 20 <mallopt+0xe8>
    7df8:	23 40 00 88 	store_32 s1, 16(s3)
    7dfc:	02 00 00 f6 	b 8 <mallopt+0xe4>
    7e00:	23 30 00 88 	store_32 s1, 12(s3)
    7e04:	40 04 00 0f 	move s2, 1
    7e08:	00 00 f1 c0 	move s0, s2
    7e0c:	de 03 01 05 	add_i sp, sp, 64
    7e10:	1f 00 00 f0 	ret
    7e14:	03 10 00 a8 	load_32 s0, 4(s3)
    7e18:	00 80 60 c1 	cmpgt_u s0, s0, s1
    7e1c:	60 ff ff f5 	bnz s0, -20 <mallopt+0xe8>
    7e20:	01 fc ff 05 	add_i s0, s1, -1
    7e24:	00 80 10 c0 	and s0, s0, s1
    7e28:	00 ff ff f5 	bnz s0, -32 <mallopt+0xe8>
    7e2c:	23 20 00 88 	store_32 s1, 8(s3)
    7e30:	f5 ff ff f7 	b -44 <mallopt+0xe4>

0000000000007e34 malloc_usable_size:
    7e34:	20 00 f0 c0 	move s1, s0
    7e38:	00 00 00 0f 	move s0, 0
    7e3c:	81 01 00 f2 	bz s1, 48 <malloc_usable_size+0x38>
    7e40:	21 f0 ff a9 	load_32 s1, -4(s1)
    7e44:	41 0c 00 01 	and s2, s1, 3
    7e48:	62 04 00 10 	cmpeq_i s3, s2, 1
    7e4c:	03 01 00 f4 	bnz s3, 32 <malloc_usable_size+0x38>
    7e50:	42 00 00 10 	cmpeq_i s2, s2, 0
    7e54:	01 e0 ff 01 	and s0, s1, -8
    7e58:	62 00 00 f4 	bnz s2, 12 <malloc_usable_size+0x30>
    7e5c:	20 10 00 0f 	move s1, 4
    7e60:	02 00 00 f6 	b 8 <malloc_usable_size+0x34>
    7e64:	20 20 00 0f 	move s1, 8
    7e68:	00 80 60 c0 	sub_i s0, s0, s1
    7e6c:	1f 00 00 f0 	ret

0000000000007e70 dispose_chunk:
    7e70:	de 03 ff 05 	add_i sp, sp, -64
    7e74:	fe f3 00 88 	store_32 ra, 60(sp)
    7e78:	60 10 00 a8 	load_32 s3, 4(s0)
    7e7c:	40 80 50 c0 	add_i s2, s0, s1
    7e80:	83 04 00 01 	and s4, s3, 1
    7e84:	04 12 00 f4 	bnz s4, 576 <dispose_chunk+0x254>
    7e88:	80 00 00 a8 	load_32 s4, (s0)
    7e8c:	63 0c 00 01 	and s3, s3, 3
    7e90:	a3 1c 00 f2 	bz s3, 916 <dispose_chunk+0x3b4>
    7e94:	66 00 00 4f 	movehi s3, 6
    7e98:	00 00 62 c0 	sub_i s0, s0, s4
    7e9c:	63 70 65 00 	or s3, s3, 6492
    7ea0:	c3 40 00 a8 	load_32 s6, 16(s3)
    7ea4:	a0 00 83 c1 	cmplt_u s5, s0, s6
    7ea8:	05 39 00 f4 	bnz s5, 1824 <dispose_chunk+0x758>
    7eac:	a3 50 00 a8 	load_32 s5, 20(s3)
    7eb0:	24 80 50 c0 	add_i s1, s4, s1
    7eb4:	a5 00 00 c1 	cmpeq_i s5, s5, s0
    7eb8:	a5 03 00 f4 	bnz s5, 116 <dispose_chunk+0xbc>
    7ebc:	a4 fc 03 16 	cmpgt_u s5, s4, 255
    7ec0:	65 04 00 f4 	bnz s5, 140 <dispose_chunk+0xdc>
    7ec4:	e4 0c 00 0a 	shr s7, s4, 3
    7ec8:	80 20 00 a8 	load_32 s4, 8(s0)
    7ecc:	a7 0c 00 0b 	shl s5, s7, 3
    7ed0:	a3 80 52 c0 	add_i s5, s3, s5
    7ed4:	05 a1 00 05 	add_i s8, s5, 40
    7ed8:	a0 30 00 a8 	load_32 s5, 12(s0)
    7edc:	24 01 04 c1 	cmpeq_i s9, s4, s8
    7ee0:	c9 00 00 f4 	bnz s9, 24 <dispose_chunk+0x88>
    7ee4:	26 01 62 c1 	cmpgt_u s9, s6, s4
    7ee8:	09 37 00 f4 	bnz s9, 1760 <dispose_chunk+0x758>
    7eec:	24 31 00 a8 	load_32 s9, 12(s4)
    7ef0:	29 01 10 c1 	cmpne_i s9, s9, s0
    7ef4:	a9 36 00 f4 	bnz s9, 1748 <dispose_chunk+0x758>
    7ef8:	25 01 12 c1 	cmpne_i s9, s5, s4
    7efc:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x94>
    7f00:	29 00 00 f6 	b 164 <dispose_chunk+0x134>
    7f04:	65 00 04 c1 	cmpeq_i s3, s5, s8
    7f08:	c3 00 00 f4 	bnz s3, 24 <dispose_chunk+0xb0>
    7f0c:	66 80 62 c1 	cmpgt_u s3, s6, s5
    7f10:	c3 35 00 f4 	bnz s3, 1720 <dispose_chunk+0x758>
    7f14:	65 20 00 a8 	load_32 s3, 8(s5)
    7f18:	63 00 10 c1 	cmpne_i s3, s3, s0
    7f1c:	63 35 00 f4 	bnz s3, 1708 <dispose_chunk+0x758>
    7f20:	a4 30 00 88 	store_32 s5, 12(s4)
    7f24:	85 20 00 88 	store_32 s4, 8(s5)
    7f28:	67 00 00 f6 	b 412 <dispose_chunk+0x254>
    7f2c:	82 10 00 a8 	load_32 s4, 4(s2)
    7f30:	a4 0c 00 01 	and s5, s4, 3
    7f34:	a5 0c 00 11 	cmpne_i s5, s5, 3
    7f38:	65 0c 00 f4 	bnz s5, 396 <dispose_chunk+0x254>
    7f3c:	23 20 00 88 	store_32 s1, 8(s3)
    7f40:	64 f8 ff 01 	and s3, s4, -2
    7f44:	62 10 00 88 	store_32 s3, 4(s2)
    7f48:	bf 00 00 f6 	b 764 <dispose_chunk+0x3d4>
    7f4c:	80 60 00 a8 	load_32 s4, 24(s0)
    7f50:	a0 30 00 a8 	load_32 s5, 12(s0)
    7f54:	e5 00 00 c1 	cmpeq_i s7, s5, s0
    7f58:	c7 01 00 f4 	bnz s7, 56 <dispose_chunk+0x120>
    7f5c:	e0 20 00 a8 	load_32 s7, 8(s0)
    7f60:	c6 80 63 c1 	cmpgt_u s6, s6, s7
    7f64:	26 33 00 f4 	bnz s6, 1636 <dispose_chunk+0x758>
    7f68:	c7 30 00 a8 	load_32 s6, 12(s7)
    7f6c:	c6 00 10 c1 	cmpne_i s6, s6, s0
    7f70:	c6 32 00 f4 	bnz s6, 1624 <dispose_chunk+0x758>
    7f74:	c5 20 00 a8 	load_32 s6, 8(s5)
    7f78:	c6 00 10 c1 	cmpne_i s6, s6, s0
    7f7c:	66 32 00 f4 	bnz s6, 1612 <dispose_chunk+0x758>
    7f80:	a7 30 00 88 	store_32 s5, 12(s7)
    7f84:	e5 20 00 88 	store_32 s7, 8(s5)
    7f88:	e4 09 00 f2 	bz s4, 316 <dispose_chunk+0x254>
    7f8c:	1d 00 00 f6 	b 116 <dispose_chunk+0x190>
    7f90:	00 51 00 a8 	load_32 s8, 20(s0)
    7f94:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x12c>
    7f98:	0a 00 00 f6 	b 40 <dispose_chunk+0x150>
    7f9c:	e0 50 00 05 	add_i s7, s0, 20
    7fa0:	0b 00 00 f6 	b 44 <dispose_chunk+0x15c>
    7fa4:	80 04 00 0f 	move s4, 1
    7fa8:	a3 00 00 a8 	load_32 s5, (s3)
    7fac:	84 80 b3 c0 	shl s4, s4, s7
    7fb0:	84 fc ff 03 	xor s4, s4, -1
    7fb4:	85 00 12 c0 	and s4, s5, s4
    7fb8:	83 00 00 88 	store_32 s4, (s3)
    7fbc:	42 00 00 f6 	b 264 <dispose_chunk+0x254>
    7fc0:	e0 40 00 05 	add_i s7, s0, 16
    7fc4:	07 01 00 a8 	load_32 s8, (s7)
    7fc8:	48 2f 00 f2 	bz s8, 1512 <dispose_chunk+0x740>
    7fcc:	a0 00 f4 c0 	move s5, s8
    7fd0:	05 51 00 a8 	load_32 s8, 20(s5)
    7fd4:	20 81 f3 c0 	move s9, s7
    7fd8:	e5 50 00 05 	add_i s7, s5, 20
    7fdc:	88 ff ff f5 	bnz s8, -16 <dispose_chunk+0x15c>
    7fe0:	05 41 00 a8 	load_32 s8, 16(s5)
    7fe4:	e5 40 00 05 	add_i s7, s5, 16
    7fe8:	28 ff ff f5 	bnz s8, -28 <dispose_chunk+0x15c>
    7fec:	c6 80 64 c1 	cmpgt_u s6, s6, s9
    7ff0:	c6 2e 00 f4 	bnz s6, 1496 <dispose_chunk+0x758>
    7ff4:	c0 00 00 0f 	move s6, 0
    7ff8:	c9 00 00 88 	store_32 s6, (s9)
    7ffc:	44 06 00 f2 	bz s4, 200 <dispose_chunk+0x254>
    8000:	c0 70 00 a8 	load_32 s6, 28(s0)
    8004:	e6 08 00 0b 	shl s7, s6, 2
    8008:	e3 80 53 c0 	add_i s7, s3, s7
    800c:	07 c1 04 a8 	load_32 s8, 304(s7)
    8010:	08 01 10 c1 	cmpne_i s8, s8, s0
    8014:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x1ac>
    8018:	0c 00 00 f6 	b 48 <dispose_chunk+0x1d8>
    801c:	c3 40 00 a8 	load_32 s6, 16(s3)
    8020:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    8024:	26 2d 00 f4 	bnz s6, 1444 <dispose_chunk+0x758>
    8028:	c4 40 00 a8 	load_32 s6, 16(s4)
    802c:	c6 00 00 c1 	cmpeq_i s6, s6, s0
    8030:	06 02 00 f4 	bnz s6, 64 <dispose_chunk+0x200>
    8034:	c0 50 00 0f 	move s6, 20
    8038:	c4 00 53 c0 	add_i s6, s4, s6
    803c:	a6 00 00 88 	store_32 s5, (s6)
    8040:	25 04 00 f2 	bz s5, 132 <dispose_chunk+0x254>
    8044:	0f 00 00 f6 	b 60 <dispose_chunk+0x210>
    8048:	e7 c0 04 05 	add_i s7, s7, 304
    804c:	a7 00 00 88 	store_32 s5, (s7)
    8050:	85 01 00 f4 	bnz s5, 48 <dispose_chunk+0x210>
    8054:	80 04 00 0f 	move s4, 1
    8058:	a3 10 00 a8 	load_32 s5, 4(s3)
    805c:	84 00 b3 c0 	shl s4, s4, s6
    8060:	84 fc ff 03 	xor s4, s4, -1
    8064:	85 00 12 c0 	and s4, s5, s4
    8068:	83 10 00 88 	store_32 s4, 4(s3)
    806c:	16 00 00 f6 	b 88 <dispose_chunk+0x254>
    8070:	c0 40 00 0f 	move s6, 16
    8074:	c4 00 53 c0 	add_i s6, s4, s6
    8078:	a6 00 00 88 	store_32 s5, (s6)
    807c:	45 02 00 f2 	bz s5, 72 <dispose_chunk+0x254>
    8080:	c3 40 00 a8 	load_32 s6, 16(s3)
    8084:	e6 80 62 c1 	cmpgt_u s7, s6, s5
    8088:	07 2a 00 f4 	bnz s7, 1344 <dispose_chunk+0x758>
    808c:	85 60 00 88 	store_32 s4, 24(s5)
    8090:	80 40 00 a8 	load_32 s4, 16(s0)
    8094:	a4 00 00 f2 	bz s4, 20 <dispose_chunk+0x238>
    8098:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    809c:	66 29 00 f4 	bnz s6, 1324 <dispose_chunk+0x758>
    80a0:	85 40 00 88 	store_32 s4, 16(s5)
    80a4:	a4 60 00 88 	store_32 s5, 24(s4)
    80a8:	80 50 00 a8 	load_32 s4, 20(s0)
    80ac:	c4 00 00 f2 	bz s4, 24 <dispose_chunk+0x254>
    80b0:	63 40 00 a8 	load_32 s3, 16(s3)
    80b4:	63 00 62 c1 	cmpgt_u s3, s3, s4
    80b8:	83 28 00 f4 	bnz s3, 1296 <dispose_chunk+0x758>
    80bc:	85 50 00 88 	store_32 s4, 20(s5)
    80c0:	a4 60 00 88 	store_32 s5, 24(s4)
    80c4:	66 00 00 4f 	movehi s3, 6
    80c8:	63 70 65 00 	or s3, s3, 6492
    80cc:	e3 40 00 a8 	load_32 s7, 16(s3)
    80d0:	82 80 83 c1 	cmplt_u s4, s2, s7
    80d4:	a4 27 00 f4 	bnz s4, 1268 <dispose_chunk+0x758>
    80d8:	82 10 00 a8 	load_32 s4, 4(s2)
    80dc:	a4 08 00 01 	and s5, s4, 2
    80e0:	a5 04 00 f4 	bnz s5, 148 <dispose_chunk+0x304>
    80e4:	a3 60 00 a8 	load_32 s5, 24(s3)
    80e8:	a5 00 11 c1 	cmpne_i s5, s5, s2
    80ec:	45 00 00 f4 	bnz s5, 8 <dispose_chunk+0x284>
    80f0:	43 00 00 f6 	b 268 <dispose_chunk+0x38c>
    80f4:	a3 50 00 a8 	load_32 s5, 20(s3)
    80f8:	a5 00 11 c1 	cmpne_i s5, s5, s2
    80fc:	45 00 00 f4 	bnz s5, 8 <dispose_chunk+0x294>
    8100:	4c 00 00 f6 	b 304 <dispose_chunk+0x3c0>
    8104:	a4 fc 03 16 	cmpgt_u s5, s4, 255
    8108:	e5 0b 00 f4 	bnz s5, 380 <dispose_chunk+0x414>
    810c:	04 0d 00 0a 	shr s8, s4, 3
    8110:	a2 20 00 a8 	load_32 s5, 8(s2)
    8114:	c8 0c 00 0b 	shl s6, s8, 3
    8118:	c3 00 53 c0 	add_i s6, s3, s6
    811c:	26 a1 00 05 	add_i s9, s6, 40
    8120:	c2 30 00 a8 	load_32 s6, 12(s2)
    8124:	45 81 04 c1 	cmpeq_i s10, s5, s9
    8128:	ca 00 00 f4 	bnz s10, 24 <dispose_chunk+0x2d0>
    812c:	47 81 62 c1 	cmpgt_u s10, s7, s5
    8130:	ca 24 00 f4 	bnz s10, 1176 <dispose_chunk+0x758>
    8134:	45 31 00 a8 	load_32 s10, 12(s5)
    8138:	4a 01 11 c1 	cmpne_i s10, s10, s2
    813c:	6a 24 00 f4 	bnz s10, 1164 <dispose_chunk+0x758>
    8140:	46 81 12 c1 	cmpne_i s10, s6, s5
    8144:	4a 00 00 f4 	bnz s10, 8 <dispose_chunk+0x2dc>
    8148:	c5 00 00 f6 	b 788 <dispose_chunk+0x5ec>
    814c:	06 81 04 c1 	cmpeq_i s8, s6, s9
    8150:	c8 00 00 f4 	bnz s8, 24 <dispose_chunk+0x2f8>
    8154:	e7 00 63 c1 	cmpgt_u s7, s7, s6
    8158:	87 23 00 f4 	bnz s7, 1136 <dispose_chunk+0x758>
    815c:	e6 20 00 a8 	load_32 s7, 8(s6)
    8160:	47 00 11 c1 	cmpne_i s2, s7, s2
    8164:	22 23 00 f4 	bnz s2, 1124 <dispose_chunk+0x758>
    8168:	c5 30 00 88 	store_32 s6, 12(s5)
    816c:	a6 20 00 88 	store_32 s5, 8(s6)
    8170:	03 01 00 f6 	b 1036 <dispose_chunk+0x70c>
    8174:	84 f8 ff 01 	and s4, s4, -2
    8178:	82 10 00 88 	store_32 s4, 4(s2)
    817c:	40 80 50 c0 	add_i s2, s0, s1
    8180:	81 04 00 00 	or s4, s1, 1
    8184:	80 10 00 88 	store_32 s4, 4(s0)
    8188:	22 00 00 88 	store_32 s1, (s2)
    818c:	41 fc 03 16 	cmpgt_u s2, s1, 255
    8190:	02 02 00 f4 	bnz s2, 64 <dispose_chunk+0x360>
    8194:	21 0c 00 0a 	shr s1, s1, 3
    8198:	43 00 00 a8 	load_32 s2, (s3)
    819c:	80 04 00 0f 	move s4, 1
    81a0:	a1 0c 00 0b 	shl s5, s1, 3
    81a4:	a3 80 52 c0 	add_i s5, s3, s5
    81a8:	84 80 b0 c0 	shl s4, s4, s1
    81ac:	c2 00 12 c0 	and s6, s2, s4
    81b0:	25 a0 00 05 	add_i s1, s5, 40
    81b4:	46 00 00 f4 	bnz s6, 8 <dispose_chunk+0x34c>
    81b8:	29 00 00 f6 	b 164 <dispose_chunk+0x3ec>
    81bc:	41 20 00 a8 	load_32 s2, 8(s1)
    81c0:	63 40 00 a8 	load_32 s3, 16(s3)
    81c4:	63 00 91 c1 	cmple_u s3, s3, s2
    81c8:	03 05 00 f4 	bnz s3, 160 <dispose_chunk+0x3f8>
    81cc:	ff 00 00 f6 	b 1020 <dispose_chunk+0x758>
    81d0:	40 00 00 0f 	move s2, 0
    81d4:	a1 20 00 0a 	shr s5, s1, 8
    81d8:	80 00 f1 c0 	move s4, s2
    81dc:	e5 0a 00 f2 	bz s5, 348 <dispose_chunk+0x4c8>
    81e0:	9f fc 00 4f 	movehi s4, 2047
    81e4:	84 fc 7f 00 	or s4, s4, 8191
    81e8:	81 00 62 c1 	cmpgt_u s4, s1, s4
    81ec:	44 00 00 f4 	bnz s4, 8 <dispose_chunk+0x384>
    81f0:	36 00 00 f6 	b 216 <dispose_chunk+0x458>
    81f4:	80 7c 00 0f 	move s4, 31
    81f8:	50 00 00 f6 	b 320 <dispose_chunk+0x4c8>
    81fc:	43 30 00 a8 	load_32 s2, 12(s3)
    8200:	22 80 50 c0 	add_i s1, s2, s1
    8204:	23 30 00 88 	store_32 s1, 12(s3)
    8208:	03 60 00 88 	store_32 s0, 24(s3)
    820c:	21 04 00 00 	or s1, s1, 1
    8210:	20 10 00 88 	store_32 s1, 4(s0)
    8214:	23 50 00 a8 	load_32 s1, 20(s3)
    8218:	00 80 10 c1 	cmpne_i s0, s0, s1
    821c:	40 00 00 f4 	bnz s0, 8 <dispose_chunk+0x3b4>
    8220:	84 00 00 f6 	b 528 <dispose_chunk+0x5c0>
    8224:	fe f3 00 a8 	load_32 ra, 60(sp)
    8228:	de 03 01 05 	add_i sp, sp, 64
    822c:	1f 00 00 f0 	ret
    8230:	43 20 00 a8 	load_32 s2, 8(s3)
    8234:	22 80 50 c0 	add_i s1, s2, s1
    8238:	23 20 00 88 	store_32 s1, 8(s3)
    823c:	03 50 00 88 	store_32 s0, 20(s3)
    8240:	40 80 50 c0 	add_i s2, s0, s1
    8244:	61 04 00 00 	or s3, s1, 1
    8248:	60 10 00 88 	store_32 s3, 4(s0)
    824c:	22 00 00 88 	store_32 s1, (s2)
    8250:	fe f3 00 a8 	load_32 ra, 60(sp)
    8254:	de 03 01 05 	add_i sp, sp, 64
    8258:	1f 00 00 f0 	ret
    825c:	42 00 02 c0 	or s2, s2, s4
    8260:	43 00 00 88 	store_32 s2, (s3)
    8264:	40 80 f0 c0 	move s2, s1
    8268:	01 20 00 88 	store_32 s0, 8(s1)
    826c:	02 30 00 88 	store_32 s0, 12(s2)
    8270:	40 20 00 88 	store_32 s2, 8(s0)
    8274:	20 30 00 88 	store_32 s1, 12(s0)
    8278:	fe f3 00 a8 	load_32 ra, 60(sp)
    827c:	de 03 01 05 	add_i sp, sp, 64
    8280:	1f 00 00 f0 	ret
    8284:	a2 60 00 a8 	load_32 s5, 24(s2)
    8288:	c2 30 00 a8 	load_32 s6, 12(s2)
    828c:	06 01 01 c1 	cmpeq_i s8, s6, s2
    8290:	c8 0d 00 f4 	bnz s8, 440 <dispose_chunk+0x5d8>
    8294:	02 21 00 a8 	load_32 s8, 8(s2)
    8298:	e7 00 64 c1 	cmpgt_u s7, s7, s8
    829c:	67 19 00 f4 	bnz s7, 812 <dispose_chunk+0x758>
    82a0:	e8 30 00 a8 	load_32 s7, 12(s8)
    82a4:	e7 00 11 c1 	cmpne_i s7, s7, s2
    82a8:	07 19 00 f4 	bnz s7, 800 <dispose_chunk+0x758>
    82ac:	e6 20 00 a8 	load_32 s7, 8(s6)
    82b0:	e7 00 11 c1 	cmpne_i s7, s7, s2
    82b4:	a7 18 00 f4 	bnz s7, 788 <dispose_chunk+0x758>
    82b8:	c8 30 00 88 	store_32 s6, 12(s8)
    82bc:	06 21 00 88 	store_32 s8, 8(s6)
    82c0:	e5 15 00 f2 	bz s5, 700 <dispose_chunk+0x70c>
    82c4:	7d 00 00 f6 	b 500 <dispose_chunk+0x648>
    82c8:	9f 0c 00 4f 	movehi s4, 127
    82cc:	df 04 00 4f 	movehi s6, 63
    82d0:	fe 00 00 4f 	movehi s7, 30
    82d4:	84 00 7c 00 	or s4, s4, 7936
    82d8:	85 00 52 c0 	add_i s4, s5, s4
    82dc:	c6 00 40 00 	or s6, s6, 4096
    82e0:	84 40 00 0a 	shr s4, s4, 16
    82e4:	84 20 00 01 	and s4, s4, 8
    82e8:	a5 00 b2 c0 	shl s5, s5, s4
    82ec:	c5 00 53 c0 	add_i s6, s5, s6
    82f0:	c6 40 00 0a 	shr s6, s6, 16
    82f4:	c6 10 00 01 	and s6, s6, 4
    82f8:	a5 00 b3 c0 	shl s5, s5, s6
    82fc:	86 00 02 c0 	or s4, s6, s4
    8300:	e5 80 53 c0 	add_i s7, s5, s7
    8304:	e7 40 00 0a 	shr s7, s7, 16
    8308:	c7 08 00 01 	and s6, s7, 2
    830c:	e0 38 00 0f 	move s7, 14
    8310:	84 00 03 c0 	or s4, s4, s6
    8314:	a5 00 b3 c0 	shl s5, s5, s6
    8318:	87 00 62 c0 	sub_i s4, s7, s4
    831c:	a5 3c 00 0a 	shr s5, s5, 15
    8320:	84 80 52 c0 	add_i s4, s4, s5
    8324:	a4 1c 00 05 	add_i s5, s4, 7
    8328:	a1 80 a2 c0 	shr s5, s1, s5
    832c:	84 04 00 0b 	shl s4, s4, 1
    8330:	a5 04 00 01 	and s5, s5, 1
    8334:	85 00 02 c0 	or s4, s5, s4
    8338:	80 70 00 88 	store_32 s4, 28(s0)
    833c:	c4 08 00 0b 	shl s6, s4, 2
    8340:	40 50 00 88 	store_32 s2, 20(s0)
    8344:	e3 00 53 c0 	add_i s7, s3, s6
    8348:	40 40 00 88 	store_32 s2, 16(s0)
    834c:	40 04 00 0f 	move s2, 1
    8350:	a3 10 00 a8 	load_32 s5, 4(s3)
    8354:	c2 00 b2 c0 	shl s6, s2, s4
    8358:	47 c0 04 05 	add_i s2, s7, 304
    835c:	05 01 13 c0 	and s8, s5, s6
    8360:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x4f8>
    8364:	08 00 00 f6 	b 32 <dispose_chunk+0x514>
    8368:	a2 00 00 a8 	load_32 s5, (s2)
    836c:	c4 7c 00 10 	cmpeq_i s6, s4, 31
    8370:	26 01 00 f4 	bnz s6, 36 <dispose_chunk+0x524>
    8374:	40 64 00 0f 	move s2, 25
    8378:	84 04 00 0a 	shr s4, s4, 1
    837c:	42 00 62 c0 	sub_i s2, s2, s4
    8380:	06 00 00 f6 	b 24 <dispose_chunk+0x528>
    8384:	25 00 03 c0 	or s1, s5, s6
    8388:	23 10 00 88 	store_32 s1, 4(s3)
    838c:	02 00 00 88 	store_32 s0, (s2)
    8390:	13 00 00 f6 	b 76 <dispose_chunk+0x56c>
    8394:	40 00 00 0f 	move s2, 0
    8398:	81 00 b1 c0 	shl s4, s1, s2
    839c:	40 80 f2 c0 	move s2, s5
    83a0:	a2 10 00 a8 	load_32 s5, 4(s2)
    83a4:	a5 e0 ff 01 	and s5, s5, -8
    83a8:	a5 80 00 c1 	cmpeq_i s5, s5, s1
    83ac:	45 02 00 f4 	bnz s5, 72 <dispose_chunk+0x584>
    83b0:	a4 74 00 0a 	shr s5, s4, 29
    83b4:	84 04 00 0b 	shl s4, s4, 1
    83b8:	a5 10 00 01 	and s5, s5, 4
    83bc:	c2 80 52 c0 	add_i s6, s2, s5
    83c0:	a6 40 00 a8 	load_32 s5, 16(s6)
    83c4:	c5 fe ff f5 	bnz s5, -40 <dispose_chunk+0x52c>
    83c8:	63 40 00 a8 	load_32 s3, 16(s3)
    83cc:	26 40 00 05 	add_i s1, s6, 16
    83d0:	63 80 60 c1 	cmpgt_u s3, s3, s1
    83d4:	a3 0f 00 f4 	bnz s3, 500 <dispose_chunk+0x758>
    83d8:	01 00 00 88 	store_32 s0, (s1)
    83dc:	40 60 00 88 	store_32 s2, 24(s0)
    83e0:	00 30 00 88 	store_32 s0, 12(s0)
    83e4:	00 20 00 88 	store_32 s0, 8(s0)
    83e8:	fe f3 00 a8 	load_32 ra, 60(sp)
    83ec:	de 03 01 05 	add_i sp, sp, 64
    83f0:	1f 00 00 f0 	ret
    83f4:	22 20 00 a8 	load_32 s1, 8(s2)
    83f8:	63 40 00 a8 	load_32 s3, 16(s3)
    83fc:	83 80 60 c1 	cmpgt_u s4, s3, s1
    8400:	44 0e 00 f4 	bnz s4, 456 <dispose_chunk+0x758>
    8404:	63 00 61 c1 	cmpgt_u s3, s3, s2
    8408:	03 0e 00 f4 	bnz s3, 448 <dispose_chunk+0x758>
    840c:	01 30 00 88 	store_32 s0, 12(s1)
    8410:	02 20 00 88 	store_32 s0, 8(s2)
    8414:	20 20 00 88 	store_32 s1, 8(s0)
    8418:	20 00 00 0f 	move s1, 0
    841c:	40 30 00 88 	store_32 s2, 12(s0)
    8420:	20 60 00 88 	store_32 s1, 24(s0)
    8424:	fe f3 00 a8 	load_32 ra, 60(sp)
    8428:	de 03 01 05 	add_i sp, sp, 64
    842c:	1f 00 00 f0 	ret
    8430:	00 00 00 0f 	move s0, 0
    8434:	03 50 00 88 	store_32 s0, 20(s3)
    8438:	03 20 00 88 	store_32 s0, 8(s3)
    843c:	fe f3 00 a8 	load_32 ra, 60(sp)
    8440:	de 03 01 05 	add_i sp, sp, 64
    8444:	1f 00 00 f0 	ret
    8448:	22 51 00 a8 	load_32 s9, 20(s2)
    844c:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x5e4>
    8450:	0a 00 00 f6 	b 40 <dispose_chunk+0x608>
    8454:	02 51 00 05 	add_i s8, s2, 20
    8458:	0b 00 00 f6 	b 44 <dispose_chunk+0x614>
    845c:	40 04 00 0f 	move s2, 1
    8460:	a3 00 00 a8 	load_32 s5, (s3)
    8464:	42 00 b4 c0 	shl s2, s2, s8
    8468:	42 fc ff 03 	xor s2, s2, -1
    846c:	45 00 11 c0 	and s2, s5, s2
    8470:	43 00 00 88 	store_32 s2, (s3)
    8474:	42 00 00 f6 	b 264 <dispose_chunk+0x70c>
    8478:	02 41 00 05 	add_i s8, s2, 16
    847c:	28 01 00 a8 	load_32 s9, (s8)
    8480:	e9 09 00 f2 	bz s9, 316 <dispose_chunk+0x74c>
    8484:	c0 80 f4 c0 	move s6, s9
    8488:	26 51 00 a8 	load_32 s9, 20(s6)
    848c:	40 01 f4 c0 	move s10, s8
    8490:	06 51 00 05 	add_i s8, s6, 20
    8494:	89 ff ff f5 	bnz s9, -16 <dispose_chunk+0x614>
    8498:	26 41 00 a8 	load_32 s9, 16(s6)
    849c:	06 41 00 05 	add_i s8, s6, 16
    84a0:	29 ff ff f5 	bnz s9, -28 <dispose_chunk+0x614>
    84a4:	e7 00 65 c1 	cmpgt_u s7, s7, s10
    84a8:	07 09 00 f4 	bnz s7, 288 <dispose_chunk+0x758>
    84ac:	e0 00 00 0f 	move s7, 0
    84b0:	ea 00 00 88 	store_32 s7, (s10)
    84b4:	45 06 00 f2 	bz s5, 200 <dispose_chunk+0x70c>
    84b8:	e2 70 00 a8 	load_32 s7, 28(s2)
    84bc:	07 09 00 0b 	shl s8, s7, 2
    84c0:	03 01 54 c0 	add_i s8, s3, s8
    84c4:	28 c1 04 a8 	load_32 s9, 304(s8)
    84c8:	29 01 11 c1 	cmpne_i s9, s9, s2
    84cc:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x664>
    84d0:	0c 00 00 f6 	b 48 <dispose_chunk+0x690>
    84d4:	e3 40 00 a8 	load_32 s7, 16(s3)
    84d8:	e7 80 62 c1 	cmpgt_u s7, s7, s5
    84dc:	67 07 00 f4 	bnz s7, 236 <dispose_chunk+0x758>
    84e0:	e5 40 00 a8 	load_32 s7, 16(s5)
    84e4:	e7 00 01 c1 	cmpeq_i s7, s7, s2
    84e8:	07 02 00 f4 	bnz s7, 64 <dispose_chunk+0x6b8>
    84ec:	e0 50 00 0f 	move s7, 20
    84f0:	e5 80 53 c0 	add_i s7, s5, s7
    84f4:	c7 00 00 88 	store_32 s6, (s7)
    84f8:	26 04 00 f2 	bz s6, 132 <dispose_chunk+0x70c>
    84fc:	0f 00 00 f6 	b 60 <dispose_chunk+0x6c8>
    8500:	08 c1 04 05 	add_i s8, s8, 304
    8504:	c8 00 00 88 	store_32 s6, (s8)
    8508:	86 01 00 f4 	bnz s6, 48 <dispose_chunk+0x6c8>
    850c:	40 04 00 0f 	move s2, 1
    8510:	a3 10 00 a8 	load_32 s5, 4(s3)
    8514:	42 80 b3 c0 	shl s2, s2, s7
    8518:	42 fc ff 03 	xor s2, s2, -1
    851c:	45 00 11 c0 	and s2, s5, s2
    8520:	43 10 00 88 	store_32 s2, 4(s3)
    8524:	16 00 00 f6 	b 88 <dispose_chunk+0x70c>
    8528:	e0 40 00 0f 	move s7, 16
    852c:	e5 80 53 c0 	add_i s7, s5, s7
    8530:	c7 00 00 88 	store_32 s6, (s7)
    8534:	46 02 00 f2 	bz s6, 72 <dispose_chunk+0x70c>
    8538:	e3 40 00 a8 	load_32 s7, 16(s3)
    853c:	07 01 63 c1 	cmpgt_u s8, s7, s6
    8540:	48 04 00 f4 	bnz s8, 136 <dispose_chunk+0x758>
    8544:	a6 60 00 88 	store_32 s5, 24(s6)
    8548:	a2 40 00 a8 	load_32 s5, 16(s2)
    854c:	a5 00 00 f2 	bz s5, 20 <dispose_chunk+0x6f0>
    8550:	e7 80 62 c1 	cmpgt_u s7, s7, s5
    8554:	a7 03 00 f4 	bnz s7, 116 <dispose_chunk+0x758>
    8558:	a6 40 00 88 	store_32 s5, 16(s6)
    855c:	c5 60 00 88 	store_32 s6, 24(s5)
    8560:	42 50 00 a8 	load_32 s2, 20(s2)
    8564:	c2 00 00 f2 	bz s2, 24 <dispose_chunk+0x70c>
    8568:	a3 40 00 a8 	load_32 s5, 16(s3)
    856c:	a5 00 61 c1 	cmpgt_u s5, s5, s2
    8570:	c5 02 00 f4 	bnz s5, 88 <dispose_chunk+0x758>
    8574:	46 50 00 88 	store_32 s2, 20(s6)
    8578:	c2 60 00 88 	store_32 s6, 24(s2)
    857c:	44 e0 ff 01 	and s2, s4, -8
    8580:	22 80 50 c0 	add_i s1, s2, s1
    8584:	40 80 50 c0 	add_i s2, s0, s1
    8588:	81 04 00 00 	or s4, s1, 1
    858c:	80 10 00 88 	store_32 s4, 4(s0)
    8590:	22 00 00 88 	store_32 s1, (s2)
    8594:	43 50 00 a8 	load_32 s2, 20(s3)
    8598:	40 00 11 c1 	cmpne_i s2, s0, s2
    859c:	82 df ff f5 	bnz s2, -1040 <dispose_chunk+0x31c>
    85a0:	23 20 00 88 	store_32 s1, 8(s3)
    85a4:	fe f3 00 a8 	load_32 ra, 60(sp)
    85a8:	de 03 01 05 	add_i sp, sp, 64
    85ac:	1f 00 00 f0 	ret
    85b0:	a0 00 00 0f 	move s5, 0
    85b4:	84 d8 ff f3 	bz s4, -1264 <dispose_chunk+0x254>
    85b8:	92 fe ff f7 	b -1464 <dispose_chunk+0x190>
    85bc:	c0 00 00 0f 	move s6, 0
    85c0:	e5 fd ff f3 	bz s5, -68 <dispose_chunk+0x70c>
    85c4:	bd ff ff f7 	b -268 <dispose_chunk+0x648>
    85c8:	01 00 00 f8 	call 4 <abort>

00000000000085cc abort:
    85cc:	de 03 ff 05 	add_i sp, sp, -64
    85d0:	fe f3 00 88 	store_32 ra, 60(sp)
    85d4:	00 00 00 4f 	movehi s0, 0
    85d8:	00 30 12 00 	or s0, s0, 1164
    85dc:	cb ec ff f9 	call -19668 <puts>
    85e0:	00 00 e0 c3 	break

00000000000085e4 abs:
    85e4:	20 7c 00 09 	ashr s1, s0, 31
    85e8:	00 80 50 c0 	add_i s0, s0, s1
    85ec:	00 80 30 c0 	xor s0, s0, s1
    85f0:	1f 00 00 f0 	ret

00000000000085f4 atoi:
    85f4:	20 00 f0 c0 	move s1, s0
    85f8:	00 00 00 0f 	move s0, 0
    85fc:	41 00 00 a2 	load_s8 s2, (s1)
    8600:	c2 01 00 f2 	bz s2, 56 <atoi+0x44>
    8604:	62 40 ff 05 	add_i s3, s2, -48
    8608:	63 24 00 16 	cmpgt_u s3, s3, 9
    860c:	63 01 00 f4 	bnz s3, 44 <atoi+0x44>
    8610:	00 00 00 0f 	move s0, 0
    8614:	00 28 00 07 	mull_i s0, s0, 10
    8618:	02 00 50 c0 	add_i s0, s2, s0
    861c:	41 04 00 a2 	load_s8 s2, 1(s1)
    8620:	00 40 ff 05 	add_i s0, s0, -48
    8624:	a2 00 00 f2 	bz s2, 20 <atoi+0x44>
    8628:	62 40 ff 05 	add_i s3, s2, -48
    862c:	21 04 00 05 	add_i s1, s1, 1
    8630:	63 28 00 18 	cmplt_u s3, s3, 10
    8634:	03 ff ff f5 	bnz s3, -32 <atoi+0x20>
    8638:	1f 00 00 f0 	ret

000000000000863c rand:
    863c:	06 00 00 4f 	movehi s0, 6
    8640:	52 c4 41 4f 	movehi s2, 134706
    8644:	61 00 00 4f 	movehi s3, 1
    8648:	20 30 40 00 	or s1, s0, 4108
    864c:	42 b4 39 00 	or s2, s2, 3693
    8650:	01 00 00 a8 	load_32 s0, (s1)
    8654:	00 00 71 c0 	mull_i s0, s0, s2
    8658:	43 e4 40 00 	or s2, s3, 4153
    865c:	7f fc 7f 4f 	movehi s3, 262143
    8660:	40 00 51 c0 	add_i s2, s0, s2
    8664:	41 00 00 88 	store_32 s2, (s1)
    8668:	03 fc 7f 00 	or s0, s3, 8191
    866c:	02 00 10 c0 	and s0, s2, s0
    8670:	1f 00 00 f0 	ret

0000000000008674 srand:
    8674:	26 00 00 4f 	movehi s1, 6
    8678:	21 30 40 00 	or s1, s1, 4108
    867c:	01 00 00 88 	store_32 s0, (s1)
    8680:	1f 00 00 f0 	ret

0000000000008684 bsearch:
    8684:	de 03 ff 05 	add_i sp, sp, -64
    8688:	1e f3 00 88 	store_32 s24, 60(sp)
    868c:	3e e3 00 88 	store_32 s25, 56(sp)
    8690:	5e d3 00 88 	store_32 s26, 52(sp)
    8694:	7e c3 00 88 	store_32 s27, 48(sp)
    8698:	fe b3 00 88 	store_32 ra, 44(sp)
    869c:	22 ff ff 05 	add_i s25, s2, -1
    86a0:	9e a0 00 88 	store_32 s4, 40(sp)
    86a4:	7e 90 00 88 	store_32 s3, 36(sp)
    86a8:	3e 80 00 88 	store_32 s1, 32(sp)
    86ac:	59 00 00 14 	cmplt_i s2, s25, 0
    86b0:	1e 70 00 88 	store_32 s0, 28(sp)
    86b4:	c2 03 00 f4 	bnz s2, 120 <bsearch+0xa8>
    86b8:	40 03 00 0f 	move s26, 0
    86bc:	5e 63 00 88 	store_32 s26, 24(sp)
    86c0:	1a 80 5c c0 	add_i s0, s26, s25
    86c4:	20 7c 00 0a 	shr s1, s0, 31
    86c8:	00 80 50 c0 	add_i s0, s0, s1
    86cc:	60 07 00 09 	ashr s27, s0, 1
    86d0:	1e 90 00 a8 	load_32 s0, 36(sp)
    86d4:	3e 80 00 a8 	load_32 s1, 32(sp)
    86d8:	1b 00 70 c0 	mull_i s0, s27, s0
    86dc:	01 03 50 c0 	add_i s24, s1, s0
    86e0:	1e 70 00 a8 	load_32 s0, 28(sp)
    86e4:	20 00 fc c0 	move s1, s24
    86e8:	5e a0 00 a8 	load_32 s2, 40(sp)
    86ec:	42 00 00 fc 	call s2
    86f0:	00 02 00 f2 	bz s0, 64 <bsearch+0xac>
    86f4:	00 00 00 14 	cmplt_i s0, s0, 0
    86f8:	c0 00 00 f4 	bnz s0, 24 <bsearch+0x8c>
    86fc:	40 00 00 f4 	bnz s0, 8 <bsearch+0x80>
    8700:	06 00 00 f6 	b 24 <bsearch+0x94>
    8704:	1a 80 5c c1 	cmple_i s0, s26, s25
    8708:	c0 fd ff f5 	bnz s0, -72 <bsearch+0x3c>
    870c:	06 00 00 f6 	b 24 <bsearch+0xa0>
    8710:	3b ff ff 05 	add_i s25, s27, -1
    8714:	80 ff ff f5 	bnz s0, -16 <bsearch+0x80>
    8718:	5b 07 00 05 	add_i s26, s27, 1
    871c:	1a 80 5c c1 	cmple_i s0, s26, s25
    8720:	00 fd ff f5 	bnz s0, -96 <bsearch+0x3c>
    8724:	1e 63 00 a8 	load_32 s24, 24(sp)
    8728:	02 00 00 f6 	b 8 <bsearch+0xac>
    872c:	00 03 00 0f 	move s24, 0
    8730:	00 00 fc c0 	move s0, s24
    8734:	fe b3 00 a8 	load_32 ra, 44(sp)
    8738:	7e c3 00 a8 	load_32 s27, 48(sp)
    873c:	5e d3 00 a8 	load_32 s26, 52(sp)
    8740:	3e e3 00 a8 	load_32 s25, 56(sp)
    8744:	1e f3 00 a8 	load_32 s24, 60(sp)
    8748:	de 03 01 05 	add_i sp, sp, 64
    874c:	1f 00 00 f0 	ret

0000000000008750 memcpy:
    8750:	c0 00 f0 c0 	move s6, s0
    8754:	60 fc 00 01 	and s3, s0, 63
    8758:	81 fc 00 01 	and s4, s1, 63
    875c:	a3 00 02 c1 	cmpeq_i s5, s3, s4
    8760:	45 02 00 f2 	bz s5, 72 <copy_word_check>

0000000000008764 copy_vector_lead_in:
    8764:	80 fc 00 01 	and s4, s0, 63
    8768:	04 01 00 f2 	bz s4, 32 <copy_vector>
    876c:	62 05 00 f2 	bz s2, 172 <copy_done>
    8770:	81 00 00 a0 	load_u8 s4, (s1)
    8774:	80 00 00 82 	store_8 s4, (s0)
    8778:	00 04 00 05 	add_i s0, s0, 1
    877c:	21 04 00 05 	add_i s1, s1, 1
    8780:	42 04 00 06 	sub_i s2, s2, 1
    8784:	f8 ff ff f7 	b -32 <copy_vector_lead_in>

0000000000008788 copy_vector:
    8788:	82 00 01 18 	cmplt_u s4, s2, 64
    878c:	84 02 00 f4 	bnz s4, 80 <copy_words>
    8790:	01 00 00 ae 	load_v v0, (s1)
    8794:	00 00 00 8e 	store_v v0, (s0)
    8798:	00 00 01 05 	add_i s0, s0, 64
    879c:	21 00 01 05 	add_i s1, s1, 64
    87a0:	42 00 01 06 	sub_i s2, s2, 64
    87a4:	f9 ff ff f7 	b -28 <copy_vector>

00000000000087a8 copy_word_check:
    87a8:	60 0c 00 01 	and s3, s0, 3
    87ac:	81 0c 00 01 	and s4, s1, 3
    87b0:	a3 00 02 c1 	cmpeq_i s5, s3, s4
    87b4:	45 02 00 f2 	bz s5, 72 <copy_remain_bytes>

00000000000087b8 copy_word_lead_in:
    87b8:	80 0c 00 01 	and s4, s0, 3
    87bc:	04 01 00 f2 	bz s4, 32 <copy_words>
    87c0:	c2 02 00 f2 	bz s2, 88 <copy_done>
    87c4:	81 00 00 a0 	load_u8 s4, (s1)
    87c8:	80 00 00 82 	store_8 s4, (s0)
    87cc:	00 04 00 05 	add_i s0, s0, 1
    87d0:	21 04 00 05 	add_i s1, s1, 1
    87d4:	42 04 00 06 	sub_i s2, s2, 1
    87d8:	f8 ff ff f7 	b -32 <copy_word_lead_in>

00000000000087dc copy_words:
    87dc:	82 10 00 18 	cmplt_u s4, s2, 4
    87e0:	e4 00 00 f4 	bnz s4, 28 <copy_remain_bytes>
    87e4:	81 00 00 a8 	load_32 s4, (s1)
    87e8:	80 00 00 88 	store_32 s4, (s0)
    87ec:	00 10 00 05 	add_i s0, s0, 4
    87f0:	21 10 00 05 	add_i s1, s1, 4
    87f4:	42 10 00 06 	sub_i s2, s2, 4
    87f8:	f9 ff ff f7 	b -28 <copy_words>

00000000000087fc copy_remain_bytes:
    87fc:	e2 00 00 f2 	bz s2, 28 <copy_done>
    8800:	81 00 00 a0 	load_u8 s4, (s1)
    8804:	80 00 00 82 	store_8 s4, (s0)
    8808:	00 04 00 05 	add_i s0, s0, 1
    880c:	21 04 00 05 	add_i s1, s1, 1
    8810:	42 04 00 06 	sub_i s2, s2, 1
    8814:	fa ff ff f7 	b -24 <copy_remain_bytes>

0000000000008818 copy_done:
    8818:	00 00 f3 c0 	move s0, s6
    881c:	1f 00 00 f0 	ret

0000000000008820 memset:
    8820:	60 fc 00 01 	and s3, s0, 63
    8824:	81 fc 03 01 	and s4, s1, 255
    8828:	03 04 00 f4 	bnz s3, 128 <memset+0x88>
    882c:	62 04 01 18 	cmplt_u s3, s2, 65
    8830:	c3 03 00 f4 	bnz s3, 120 <memset+0x88>
    8834:	61 60 00 0b 	shl s3, s1, 24
    8838:	a4 20 00 0b 	shl s5, s4, 8
    883c:	63 00 02 c0 	or s3, s3, s4
    8840:	63 80 02 c0 	or s3, s3, s5
    8844:	a4 40 00 0b 	shl s5, s4, 16
    8848:	63 80 02 c0 	or s3, s3, s5
    884c:	00 80 f1 c4 	move v0, s3
    8850:	60 00 f0 c0 	move s3, s0
    8854:	42 00 ff 05 	add_i s2, s2, -64
    8858:	03 00 00 8e 	store_v v0, (s3)
    885c:	63 00 01 05 	add_i s3, s3, 64
    8860:	a2 00 01 16 	cmpgt_u s5, s2, 64
    8864:	85 ff ff f5 	bnz s5, -16 <memset+0x34>
    8868:	a3 0c 00 01 	and s5, s3, 3
    886c:	65 02 00 f4 	bnz s5, 76 <memset+0x98>
    8870:	a2 14 00 18 	cmplt_u s5, s2, 5
    8874:	25 02 00 f4 	bnz s5, 68 <memset+0x98>
    8878:	a1 60 00 0b 	shl s5, s1, 24
    887c:	c4 20 00 0b 	shl s6, s4, 8
    8880:	a5 00 02 c0 	or s5, s5, s4
    8884:	84 40 00 0b 	shl s4, s4, 16
    8888:	a5 00 03 c0 	or s5, s5, s6
    888c:	85 00 02 c0 	or s4, s5, s4
    8890:	42 f0 ff 05 	add_i s2, s2, -4
    8894:	83 00 00 88 	store_32 s4, (s3)
    8898:	63 10 00 05 	add_i s3, s3, 4
    889c:	a2 10 00 16 	cmpgt_u s5, s2, 4
    88a0:	85 ff ff f5 	bnz s5, -16 <memset+0x70>
    88a4:	06 00 00 f6 	b 24 <memset+0x9c>
    88a8:	60 00 f0 c0 	move s3, s0
    88ac:	a3 0c 00 01 	and s5, s3, 3
    88b0:	45 00 00 f4 	bnz s5, 8 <memset+0x98>
    88b4:	ef ff ff f7 	b -68 <memset+0x50>
    88b8:	c2 00 00 f2 	bz s2, 24 <memset+0xb0>
    88bc:	83 04 00 05 	add_i s4, s3, 1
    88c0:	23 00 00 82 	store_8 s1, (s3)
    88c4:	42 fc ff 05 	add_i s2, s2, -1
    88c8:	60 00 f2 c0 	move s3, s4
    88cc:	82 ff ff f5 	bnz s2, -16 <memset+0x9c>
    88d0:	1f 00 00 f0 	ret

00000000000088d4 vfprintf:
    88d4:	de 03 fd 05 	add_i sp, sp, -192
    88d8:	1e f3 02 88 	store_32 s24, 188(sp)
    88dc:	3e e3 02 88 	store_32 s25, 184(sp)
    88e0:	5e d3 02 88 	store_32 s26, 180(sp)
    88e4:	7e c3 02 88 	store_32 s27, 176(sp)
    88e8:	fe b3 02 88 	store_32 ra, 172(sp)
    88ec:	40 83 f0 c0 	move s26, s1
    88f0:	5e a0 02 88 	store_32 s2, 168(sp)
    88f4:	3a 00 00 a0 	load_u8 s1, (s26)
    88f8:	60 03 f0 c0 	move s27, s0
    88fc:	61 3f 00 f2 	bz s1, 2028 <vfprintf+0x814>
    8900:	00 00 00 4f 	movehi s0, 0
    8904:	40 04 00 0f 	move s2, 1
    8908:	5e c0 00 88 	store_32 s2, 48(sp)
    890c:	40 94 00 0f 	move s2, 37
    8910:	5e a0 00 88 	store_32 s2, 40(sp)
    8914:	00 33 14 00 	or s24, s0, 1292
    8918:	00 00 00 4f 	movehi s0, 0
    891c:	80 00 00 0f 	move s4, 0
    8920:	60 40 09 00 	or s3, s0, 592
    8924:	00 14 00 0f 	move s0, 5
    8928:	1e d0 00 88 	store_32 s0, 52(sp)
    892c:	00 08 00 0f 	move s0, 2
    8930:	1e b0 00 88 	store_32 s0, 44(sp)
    8934:	00 10 00 0f 	move s0, 4
    8938:	1e f0 00 88 	store_32 s0, 60(sp)
    893c:	00 0c 00 0f 	move s0, 3
    8940:	1e 90 00 88 	store_32 s0, 36(sp)
    8944:	9e 10 01 88 	store_32 s4, 68(sp)
    8948:	9e 20 01 88 	store_32 s4, 72(sp)
    894c:	20 03 f2 c0 	move s25, s4
    8950:	9e 30 01 88 	store_32 s4, 76(sp)
    8954:	00 00 f2 c0 	move s0, s4
    8958:	7e 63 01 88 	store_32 s27, 88(sp)
    895c:	9e 40 01 88 	store_32 s4, 80(sp)
    8960:	1e 03 01 88 	store_32 s24, 64(sp)
    8964:	7e 50 01 88 	store_32 s3, 84(sp)
    8968:	46 01 00 f6 	b 1304 <vfprintf+0x5ac>
    896c:	1e f0 00 a8 	load_32 s0, 60(sp)
    8970:	3a 00 00 a0 	load_u8 s1, (s26)
    8974:	61 28 00 f4 	bnz s1, 1292 <vfprintf+0x5ac>
    8978:	dc 01 00 f6 	b 1904 <vfprintf+0x814>
    897c:	1e d0 00 a8 	load_32 s0, 52(sp)
    8980:	1e 03 01 a8 	load_32 s24, 64(sp)
    8984:	7e 50 01 a8 	load_32 s3, 84(sp)
    8988:	3a 00 00 a0 	load_u8 s1, (s26)
    898c:	a1 27 00 f4 	bnz s1, 1268 <vfprintf+0x5ac>
    8990:	d6 01 00 f6 	b 1880 <vfprintf+0x814>
    8994:	1e b0 00 a8 	load_32 s0, 44(sp)
    8998:	60 80 fc c0 	move s3, s25
    899c:	3e 83 01 a8 	load_32 s25, 96(sp)
    89a0:	3a 00 00 a0 	load_u8 s1, (s26)
    89a4:	e1 26 00 f4 	bnz s1, 1244 <vfprintf+0x5ac>
    89a8:	d0 01 00 f6 	b 1856 <vfprintf+0x814>
    89ac:	3e 83 01 88 	store_32 s25, 96(sp)
    89b0:	20 00 00 4f 	movehi s1, 0
    89b4:	1e a0 02 a8 	load_32 s0, 168(sp)
    89b8:	21 70 05 00 	or s1, s1, 348
    89bc:	00 0c 00 05 	add_i s0, s0, 3
    89c0:	00 f0 ff 01 	and s0, s0, -4
    89c4:	40 10 00 05 	add_i s2, s0, 4
    89c8:	5e a0 02 88 	store_32 s2, 168(sp)
    89cc:	40 00 00 a8 	load_32 s2, (s0)
    89d0:	3e 90 01 88 	store_32 s1, 100(sp)
    89d4:	01 00 00 a8 	load_32 s0, (s1)
    89d8:	27 00 00 4f 	movehi s1, 7
    89dc:	21 ff 7f 00 	or s25, s1, 8191
    89e0:	02 00 e0 c2 	cmplt_f s0, s2, s0
    89e4:	00 80 1c c1 	cmpne_i s0, s0, s25
    89e8:	00 01 00 f4 	bnz s0, 32 <vfprintf+0x134>
    89ec:	20 80 fd c0 	move s1, s27
    89f0:	5e 70 01 88 	store_32 s2, 92(sp)
    89f4:	00 b4 00 0f 	move s0, 45
    89f8:	29 eb ff f9 	call -21340 <fputc>
    89fc:	5e 70 01 a8 	load_32 s2, 92(sp)
    8a00:	00 00 80 4f 	movehi s0, 262144
    8a04:	42 00 30 c0 	xor s2, s2, s0
    8a08:	20 00 b1 c1 	ftoi s1, s2
    8a0c:	5e e3 00 88 	store_32 s26, 56(sp)
    8a10:	5e 70 01 88 	store_32 s2, 92(sp)
    8a14:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x148>
    8a18:	ec 00 00 f6 	b 944 <vfprintf+0x4f4>
    8a1c:	3e 80 00 88 	store_32 s1, 32(sp)
    8a20:	01 04 00 14 	cmplt_i s0, s1, 1
    8a24:	00 83 fd c0 	move s24, s27
    8a28:	60 03 00 f4 	bnz s0, 108 <vfprintf+0x1c0>
    8a2c:	3e 80 00 a8 	load_32 s1, 32(sp)
    8a30:	60 53 00 0f 	move s27, 20
    8a34:	46 cc cc 4f 	movehi s2, 419430
    8a38:	5e a3 01 05 	add_i s26, sp, 104
    8a3c:	7b ff ff 05 	add_i s27, s27, -1
    8a40:	42 34 33 00 	or s2, s2, 3277
    8a44:	41 00 81 c0 	mulh_u s2, s1, s2
    8a48:	9a 80 5d c0 	add_i s4, s26, s27
    8a4c:	a1 24 00 16 	cmpgt_u s5, s1, 9
    8a50:	42 0c 00 0a 	shr s2, s2, 3
    8a54:	62 28 00 07 	mull_i s3, s2, 10
    8a58:	61 80 61 c0 	sub_i s3, s1, s3
    8a5c:	63 c0 00 00 	or s3, s3, 48
    8a60:	64 00 00 82 	store_8 s3, (s4)
    8a64:	20 00 f1 c0 	move s1, s2
    8a68:	65 fe ff f5 	bnz s5, -52 <vfprintf+0x160>
    8a6c:	1e 63 01 a8 	load_32 s24, 88(sp)
    8a70:	3b 4c 00 16 	cmpgt_u s1, s27, 19
    8a74:	01 01 00 f4 	bnz s1, 32 <vfprintf+0x1c0>
    8a78:	3a 80 5d c0 	add_i s1, s26, s27
    8a7c:	7b 07 00 05 	add_i s27, s27, 1
    8a80:	01 00 00 a2 	load_s8 s0, (s1)
    8a84:	20 00 fc c0 	move s1, s24
    8a88:	05 eb ff f9 	call -21484 <fputc>
    8a8c:	3b 50 00 18 	cmplt_u s1, s27, 20
    8a90:	41 ff ff f5 	bnz s1, -24 <vfprintf+0x1a4>
    8a94:	60 03 fc c0 	move s27, s24
    8a98:	1e 03 01 a8 	load_32 s24, 64(sp)
    8a9c:	1e 80 00 a8 	load_32 s0, 32(sp)
    8aa0:	cf 00 00 f6 	b 828 <vfprintf+0x508>
    8aa4:	60 2b 00 0f 	move s27, 10
    8aa8:	3e 20 01 a8 	load_32 s1, 72(sp)
    8aac:	3e 83 01 88 	store_32 s25, 96(sp)
    8ab0:	21 40 00 01 	and s1, s1, 16
    8ab4:	a1 2a 00 f2 	bz s1, 1364 <vfprintf+0x734>
    8ab8:	1e a0 02 a8 	load_32 s0, 168(sp)
    8abc:	00 0c 00 05 	add_i s0, s0, 3
    8ac0:	00 f0 ff 01 	and s0, s0, -4
    8ac4:	20 10 00 05 	add_i s1, s0, 4
    8ac8:	3e a0 02 88 	store_32 s1, 168(sp)
    8acc:	00 03 00 a8 	load_32 s24, (s0)
    8ad0:	20 20 00 05 	add_i s1, s0, 8
    8ad4:	3e a0 02 88 	store_32 s1, 168(sp)
    8ad8:	20 13 00 a8 	load_32 s25, 4(s0)
    8adc:	1a 00 00 a0 	load_u8 s0, (s26)
    8ae0:	7e 90 01 88 	store_32 s3, 100(sp)
    8ae4:	20 a4 01 10 	cmpeq_i s1, s0, 105
    8ae8:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x21c>
    8aec:	56 01 00 f6 	b 1368 <vfprintf+0x770>
    8af0:	19 fc ff 12 	cmpgt_i s0, s25, -1
    8af4:	a0 0a 00 f4 	bnz s0, 340 <vfprintf+0x374>
    8af8:	38 00 00 11 	cmpne_i s1, s24, 0
    8afc:	00 00 00 0f 	move s0, 0
    8b00:	61 09 00 f4 	bnz s1, 300 <vfprintf+0x358>
    8b04:	20 00 f0 c0 	move s1, s0
    8b08:	4a 00 00 f6 	b 296 <vfprintf+0x35c>
    8b0c:	1e a0 02 a8 	load_32 s0, 168(sp)
    8b10:	20 03 00 0f 	move s25, 0
    8b14:	00 0c 00 05 	add_i s0, s0, 3
    8b18:	00 f0 ff 01 	and s0, s0, -4
    8b1c:	20 10 00 05 	add_i s1, s0, 4
    8b20:	3e a0 02 88 	store_32 s1, 168(sp)
    8b24:	00 03 00 a8 	load_32 s24, (s0)
    8b28:	1a 00 00 a0 	load_u8 s0, (s26)
    8b2c:	7e 90 01 88 	store_32 s3, 100(sp)
    8b30:	20 a4 01 10 	cmpeq_i s1, s0, 105
    8b34:	e1 fd ff f5 	bnz s1, -68 <vfprintf+0x21c>
    8b38:	43 01 00 f6 	b 1292 <vfprintf+0x770>
    8b3c:	20 23 00 0f 	move s25, 8
    8b40:	3e 13 01 88 	store_32 s25, 68(sp)
    8b44:	1f 01 00 f6 	b 1148 <vfprintf+0x6ec>
    8b48:	1e a0 02 a8 	load_32 s0, 168(sp)
    8b4c:	00 0c 00 05 	add_i s0, s0, 3
    8b50:	00 f0 ff 01 	and s0, s0, -4
    8b54:	20 10 00 05 	add_i s1, s0, 4
    8b58:	3e a0 02 88 	store_32 s1, 168(sp)
    8b5c:	00 00 00 a8 	load_32 s0, (s0)
    8b60:	20 80 fd c0 	move s1, s27
    8b64:	ce ea ff f9 	call -21704 <fputc>
    8b68:	7e 50 01 a8 	load_32 s3, 84(sp)
    8b6c:	5a 07 00 05 	add_i s26, s26, 1
    8b70:	1e 40 01 a8 	load_32 s0, 80(sp)
    8b74:	3a 00 00 a0 	load_u8 s1, (s26)
    8b78:	41 18 00 f4 	bnz s1, 776 <vfprintf+0x5ac>
    8b7c:	5b 01 00 f6 	b 1388 <vfprintf+0x814>
    8b80:	3e 83 01 88 	store_32 s25, 96(sp)
    8b84:	60 03 fd c0 	move s27, s26
    8b88:	1e a0 02 a8 	load_32 s0, 168(sp)
    8b8c:	00 0c 00 05 	add_i s0, s0, 3
    8b90:	00 f0 ff 01 	and s0, s0, -4
    8b94:	20 10 00 05 	add_i s1, s0, 4
    8b98:	3e a0 02 88 	store_32 s1, 168(sp)
    8b9c:	3e 33 01 a8 	load_32 s25, 76(sp)
    8ba0:	40 03 00 a8 	load_32 s26, (s0)
    8ba4:	39 00 00 10 	cmpeq_i s1, s25, 0
    8ba8:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x2dc>
    8bac:	03 00 00 f6 	b 12 <vfprintf+0x2e4>
    8bb0:	1f fc 7f 4f 	movehi s0, 262143
    8bb4:	20 ff 7f 00 	or s25, s0, 8191
    8bb8:	00 03 00 0f 	move s24, 0
    8bbc:	19 04 00 14 	cmplt_i s0, s25, 1
    8bc0:	40 01 00 f4 	bnz s0, 40 <vfprintf+0x314>
    8bc4:	1a 00 00 a2 	load_s8 s0, (s26)
    8bc8:	00 01 00 f2 	bz s0, 32 <vfprintf+0x314>
    8bcc:	3e 60 01 a8 	load_32 s1, 88(sp)
    8bd0:	5a 07 00 05 	add_i s26, s26, 1
    8bd4:	b2 ea ff f9 	call -21816 <fputc>
    8bd8:	18 07 00 05 	add_i s24, s24, 1
    8bdc:	7e 50 01 a8 	load_32 s3, 84(sp)
    8be0:	18 80 4c c1 	cmplt_i s0, s24, s25
    8be4:	00 ff ff f5 	bnz s0, -32 <vfprintf+0x2f0>
    8be8:	5e 83 01 a8 	load_32 s26, 96(sp)
    8bec:	1a 80 4c c1 	cmplt_i s0, s26, s25
    8bf0:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x324>
    8bf4:	40 83 fc c0 	move s26, s25
    8bf8:	18 00 3d c1 	cmpge_i s0, s24, s26
    8bfc:	a0 13 00 f4 	bnz s0, 628 <vfprintf+0x59c>
    8c00:	3e 63 01 a8 	load_32 s25, 88(sp)
    8c04:	00 80 00 0f 	move s0, 32
    8c08:	20 80 fc c0 	move s1, s25
    8c0c:	a4 ea ff f9 	call -21872 <fputc>
    8c10:	18 07 00 05 	add_i s24, s24, 1
    8c14:	18 00 4d c1 	cmplt_i s0, s24, s26
    8c18:	60 ff ff f5 	bnz s0, -20 <vfprintf+0x330>
    8c1c:	40 83 fd c0 	move s26, s27
    8c20:	60 83 fc c0 	move s27, s25
    8c24:	1e 03 01 a8 	load_32 s24, 64(sp)
    8c28:	8b 00 00 f6 	b 556 <vfprintf+0x580>
    8c2c:	20 04 00 0f 	move s1, 1
    8c30:	40 80 6c c0 	sub_i s2, s0, s25
    8c34:	00 03 6c c0 	sub_i s24, s0, s24
    8c38:	00 b4 00 0f 	move s0, 45
    8c3c:	22 83 60 c0 	sub_i s25, s2, s1
    8c40:	3e 60 01 a8 	load_32 s1, 88(sp)
    8c44:	96 ea ff f9 	call -21928 <fputc>
    8c48:	00 00 fc c0 	move s0, s24
    8c4c:	20 80 fc c0 	move s1, s25
    8c50:	40 80 fd c0 	move s2, s27
    8c54:	7e 90 01 a8 	load_32 s3, 100(sp)
    8c58:	09 0b 00 f8 	call 11300 <__umoddi3>
    8c5c:	20 00 00 4f 	movehi s1, 0
    8c60:	5e 90 01 a8 	load_32 s2, 100(sp)
    8c64:	21 ec 11 00 	or s1, s1, 1147
    8c68:	3e 70 01 88 	store_32 s1, 92(sp)
    8c6c:	01 00 50 c0 	add_i s0, s1, s0
    8c70:	22 80 0c c1 	cmpeq_i s1, s2, s25
    8c74:	00 00 00 a0 	load_u8 s0, (s0)
    8c78:	1e 9c 02 82 	store_8 s0, 167(sp)
    8c7c:	c1 00 00 f4 	bnz s1, 24 <vfprintf+0x3c0>
    8c80:	02 80 6c c1 	cmpgt_u s0, s2, s25
    8c84:	5e e3 00 88 	store_32 s26, 56(sp)
    8c88:	40 ff 00 0f 	move s26, 63
    8c8c:	20 04 00 f4 	bnz s0, 132 <vfprintf+0x43c>
    8c90:	05 00 00 f6 	b 20 <vfprintf+0x3d0>
    8c94:	1b 00 6c c1 	cmpgt_u s0, s27, s24
    8c98:	5e e3 00 88 	store_32 s26, 56(sp)
    8c9c:	40 ff 00 0f 	move s26, 63
    8ca0:	80 03 00 f4 	bnz s0, 112 <vfprintf+0x43c>
    8ca4:	00 00 fc c0 	move s0, s24
    8ca8:	20 80 fc c0 	move s1, s25
    8cac:	40 80 fd c0 	move s2, s27
    8cb0:	7e 90 01 a8 	load_32 s3, 100(sp)
    8cb4:	40 08 00 f8 	call 8448 <__udivdi3>
    8cb8:	00 03 f0 c0 	move s24, s0
    8cbc:	20 83 f0 c0 	move s25, s1
    8cc0:	40 80 fd c0 	move s2, s27
    8cc4:	7e 90 01 a8 	load_32 s3, 100(sp)
    8cc8:	5a ff ff 05 	add_i s26, s26, -1
    8ccc:	ec 0a 00 f8 	call 11184 <__umoddi3>
    8cd0:	7e 90 01 a8 	load_32 s3, 100(sp)
    8cd4:	3e a0 01 05 	add_i s1, sp, 104
    8cd8:	5e 70 01 a8 	load_32 s2, 92(sp)
    8cdc:	21 00 5d c0 	add_i s1, s1, s26
    8ce0:	02 00 50 c0 	add_i s0, s2, s0
    8ce4:	43 80 0c c1 	cmpeq_i s2, s3, s25
    8ce8:	00 00 00 a0 	load_u8 s0, (s0)
    8cec:	01 00 00 82 	store_8 s0, (s1)
    8cf0:	a2 00 00 f4 	bnz s2, 20 <vfprintf+0x430>
    8cf4:	03 80 6c c1 	cmpgt_u s0, s3, s25
    8cf8:	c0 00 00 f4 	bnz s0, 24 <vfprintf+0x43c>
    8cfc:	5a fd ff f5 	bnz s26, -88 <vfprintf+0x3d0>
    8d00:	04 00 00 f6 	b 16 <vfprintf+0x43c>
    8d04:	1b 00 6c c1 	cmpgt_u s0, s27, s24
    8d08:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x43c>
    8d0c:	fc ff ff f7 	b -16 <vfprintf+0x428>
    8d10:	1e 10 01 a8 	load_32 s0, 68(sp)
    8d14:	00 20 00 01 	and s0, s0, 8
    8d18:	00 00 00 10 	cmpeq_i s0, s0, 0
    8d1c:	60 00 00 f4 	bnz s0, 12 <vfprintf+0x454>
    8d20:	00 c0 00 0f 	move s0, 48
    8d24:	02 00 00 f6 	b 8 <vfprintf+0x458>
    8d28:	00 80 00 0f 	move s0, 32
    8d2c:	40 00 01 0f 	move s2, 64
    8d30:	7e 63 01 a8 	load_32 s27, 88(sp)
    8d34:	22 03 6d c0 	sub_i s25, s2, s26
    8d38:	5e 80 01 a8 	load_32 s2, 96(sp)
    8d3c:	59 00 31 c1 	cmpge_i s2, s25, s2
    8d40:	82 01 00 f4 	bnz s2, 48 <vfprintf+0x49c>
    8d44:	00 83 fd c0 	move s24, s27
    8d48:	20 00 fc c0 	move s1, s24
    8d4c:	60 03 f0 c0 	move s27, s0
    8d50:	53 ea ff f9 	call -22196 <fputc>
    8d54:	00 80 fd c0 	move s0, s27
    8d58:	60 03 fc c0 	move s27, s24
    8d5c:	5e 80 01 a8 	load_32 s2, 96(sp)
    8d60:	39 07 00 05 	add_i s25, s25, 1
    8d64:	59 00 41 c1 	cmplt_i s2, s25, s2
    8d68:	e2 fe ff f5 	bnz s2, -36 <vfprintf+0x470>
    8d6c:	3e 83 01 a8 	load_32 s25, 96(sp)
    8d70:	1e 33 01 a8 	load_32 s24, 76(sp)
    8d74:	19 00 3c c1 	cmpge_i s0, s25, s24
    8d78:	e0 00 00 f4 	bnz s0, 28 <vfprintf+0x4c0>
    8d7c:	00 c0 00 0f 	move s0, 48
    8d80:	20 80 fd c0 	move s1, s27
    8d84:	46 ea ff f9 	call -22248 <fputc>
    8d88:	39 07 00 05 	add_i s25, s25, 1
    8d8c:	19 00 4c c1 	cmplt_i s0, s25, s24
    8d90:	60 ff ff f5 	bnz s0, -20 <vfprintf+0x4a8>
    8d94:	1e 03 01 a8 	load_32 s24, 64(sp)
    8d98:	1a fc 00 12 	cmpgt_i s0, s26, 63
    8d9c:	20 01 00 f4 	bnz s0, 36 <vfprintf+0x4ec>
    8da0:	1e a0 01 05 	add_i s0, sp, 104
    8da4:	00 00 5d c0 	add_i s0, s0, s26
    8da8:	5a 07 00 05 	add_i s26, s26, 1
    8dac:	00 00 00 a2 	load_s8 s0, (s0)
    8db0:	20 80 fd c0 	move s1, s27
    8db4:	3a ea ff f9 	call -22296 <fputc>
    8db8:	1a 00 01 18 	cmplt_u s0, s26, 64
    8dbc:	20 ff ff f5 	bnz s0, -28 <vfprintf+0x4cc>
    8dc0:	5e e3 00 a8 	load_32 s26, 56(sp)
    8dc4:	24 00 00 f6 	b 144 <vfprintf+0x580>
    8dc8:	40 83 f0 c0 	move s26, s1
    8dcc:	00 c0 00 0f 	move s0, 48
    8dd0:	20 80 fd c0 	move s1, s27
    8dd4:	32 ea ff f9 	call -22328 <fputc>
    8dd8:	00 00 fd c0 	move s0, s26
    8ddc:	40 03 a0 c2 	itof s26, s0
    8de0:	00 b8 00 0f 	move s0, 46
    8de4:	20 80 fd c0 	move s1, s27
    8de8:	2d ea ff f9 	call -22348 <fputc>
    8dec:	7e 33 01 a8 	load_32 s27, 76(sp)
    8df0:	1b 00 00 12 	cmpgt_i s0, s27, 0
    8df4:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x528>
    8df8:	60 1f 00 0f 	move s27, 7
    8dfc:	1e 70 01 a8 	load_32 s0, 92(sp)
    8e00:	40 03 1d c2 	sub_f s26, s0, s26
    8e04:	00 00 00 4f 	movehi s0, 0
    8e08:	00 60 06 00 	or s0, s0, 408
    8e0c:	00 00 00 a8 	load_32 s0, (s0)
    8e10:	1a 00 20 c2 	mul_f s0, s26, s0
    8e14:	20 00 b0 c1 	ftoi s1, s0
    8e18:	40 80 a0 c2 	itof s2, s1
    8e1c:	40 03 11 c2 	sub_f s26, s0, s2
    8e20:	01 c0 00 05 	add_i s0, s1, 48
    8e24:	3e 60 01 a8 	load_32 s1, 88(sp)
    8e28:	1d ea ff f9 	call -22412 <fputc>
    8e2c:	1e 90 01 a8 	load_32 s0, 100(sp)
    8e30:	00 00 00 a8 	load_32 s0, (s0)
    8e34:	1a 00 c0 c2 	cmpgt_f s0, s26, s0
    8e38:	00 80 1c c1 	cmpne_i s0, s0, s25
    8e3c:	80 00 00 f4 	bnz s0, 16 <vfprintf+0x578>
    8e40:	1b 00 00 12 	cmpgt_i s0, s27, 0
    8e44:	7b ff ff 05 	add_i s27, s27, -1
    8e48:	e0 fd ff f5 	bnz s0, -68 <vfprintf+0x530>
    8e4c:	5e e3 00 a8 	load_32 s26, 56(sp)
    8e50:	7e 63 01 a8 	load_32 s27, 88(sp)
    8e54:	7e 50 01 a8 	load_32 s3, 84(sp)
    8e58:	3e 83 01 a8 	load_32 s25, 96(sp)
    8e5c:	5a 07 00 05 	add_i s26, s26, 1
    8e60:	1e 40 01 a8 	load_32 s0, 80(sp)
    8e64:	3a 00 00 a0 	load_u8 s1, (s26)
    8e68:	c1 00 00 f4 	bnz s1, 24 <vfprintf+0x5ac>
    8e6c:	9f 00 00 f6 	b 636 <vfprintf+0x814>
    8e70:	40 83 fd c0 	move s26, s27
    8e74:	7e 63 01 a8 	load_32 s27, 88(sp)
    8e78:	1e 03 01 a8 	load_32 s24, 64(sp)
    8e7c:	f7 ff ff f7 	b -36 <vfprintf+0x584>
    8e80:	40 14 00 16 	cmpgt_u s2, s0, 5
    8e84:	e2 12 00 f4 	bnz s2, 604 <vfprintf+0x80c>
    8e88:	00 08 00 0b 	shl s0, s0, 2
    8e8c:	00 00 5c c0 	add_i s0, s0, s24
    8e90:	00 00 00 a8 	load_32 s0, (s0)
    8e94:	00 00 00 f0 	b s0
    8e98:	01 fc 03 01 	and s0, s1, 255
    8e9c:	5a 07 00 05 	add_i s26, s26, 1
    8ea0:	00 94 00 10 	cmpeq_i s0, s0, 37
    8ea4:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x5d8>
    8ea8:	6a 00 00 f6 	b 424 <vfprintf+0x77c>
    8eac:	1e c0 00 a8 	load_32 s0, 48(sp)
    8eb0:	3e 40 01 a8 	load_32 s1, 80(sp)
    8eb4:	3e 30 01 88 	store_32 s1, 76(sp)
    8eb8:	20 83 f0 c0 	move s25, s1
    8ebc:	3e 20 01 88 	store_32 s1, 72(sp)
    8ec0:	3e 10 01 88 	store_32 s1, 68(sp)
    8ec4:	3a 00 00 a0 	load_u8 s1, (s26)
    8ec8:	c1 fd ff f5 	bnz s1, -72 <vfprintf+0x5ac>
    8ecc:	87 00 00 f6 	b 540 <vfprintf+0x814>
    8ed0:	01 fc 03 01 	and s0, s1, 255
    8ed4:	00 94 00 11 	cmpne_i s0, s0, 37
    8ed8:	c0 0c 00 f4 	bnz s0, 408 <vfprintf+0x79c>
    8edc:	5a 07 00 05 	add_i s26, s26, 1
    8ee0:	1e a0 00 a8 	load_32 s0, 40(sp)
    8ee4:	5c 00 00 f6 	b 368 <vfprintf+0x780>
    8ee8:	00 80 d0 c1 	sext_8 s0, s1
    8eec:	00 40 ff 05 	add_i s0, s0, -48
    8ef0:	40 24 00 16 	cmpgt_u s2, s0, 9
    8ef4:	62 0e 00 f4 	bnz s2, 460 <vfprintf+0x7ec>
    8ef8:	39 28 00 07 	mull_i s1, s25, 10
    8efc:	20 83 50 c0 	add_i s25, s0, s1
    8f00:	1e b0 00 a8 	load_32 s0, 44(sp)
    8f04:	5a 07 00 05 	add_i s26, s26, 1
    8f08:	3a 00 00 a0 	load_u8 s1, (s26)
    8f0c:	a1 fb ff f5 	bnz s1, -140 <vfprintf+0x5ac>
    8f10:	76 00 00 f6 	b 472 <vfprintf+0x814>
    8f14:	00 80 d0 c1 	sext_8 s0, s1
    8f18:	00 40 ff 05 	add_i s0, s0, -48
    8f1c:	20 24 00 16 	cmpgt_u s1, s0, 9
    8f20:	61 d2 ff f5 	bnz s1, -1460 <vfprintf+0x98>
    8f24:	3e 30 01 a8 	load_32 s1, 76(sp)
    8f28:	5a 07 00 05 	add_i s26, s26, 1
    8f2c:	21 28 00 07 	mull_i s1, s1, 10
    8f30:	00 80 50 c0 	add_i s0, s0, s1
    8f34:	1e 30 01 88 	store_32 s0, 76(sp)
    8f38:	00 0c 00 0f 	move s0, 3
    8f3c:	3a 00 00 a0 	load_u8 s1, (s26)
    8f40:	01 fa ff f5 	bnz s1, -192 <vfprintf+0x5ac>
    8f44:	69 00 00 f6 	b 420 <vfprintf+0x814>
    8f48:	00 00 00 4f 	movehi s0, 0
    8f4c:	20 80 d0 c1 	sext_8 s1, s1
    8f50:	40 20 00 0f 	move s2, 8
    8f54:	00 23 09 00 	or s24, s0, 584
    8f58:	00 00 fc c0 	move s0, s24
    8f5c:	26 01 00 f8 	call 1176 <memchr>
    8f60:	e0 d0 ff f3 	bz s0, -1508 <vfprintf+0xa8>
    8f64:	20 04 00 0f 	move s1, 1
    8f68:	00 00 6c c0 	sub_i s0, s0, s24
    8f6c:	5a 07 00 05 	add_i s26, s26, 1
    8f70:	01 00 b0 c0 	shl s0, s1, s0
    8f74:	3e 20 01 a8 	load_32 s1, 72(sp)
    8f78:	20 80 00 c0 	or s1, s0, s1
    8f7c:	3e 20 01 88 	store_32 s1, 72(sp)
    8f80:	1e f0 00 a8 	load_32 s0, 60(sp)
    8f84:	1e 03 01 a8 	load_32 s24, 64(sp)
    8f88:	7e 50 01 a8 	load_32 s3, 84(sp)
    8f8c:	3a 00 00 a0 	load_u8 s1, (s26)
    8f90:	81 f7 ff f5 	bnz s1, -272 <vfprintf+0x5ac>
    8f94:	55 00 00 f6 	b 340 <vfprintf+0x814>
    8f98:	00 80 d0 c1 	sext_8 s0, s1
    8f9c:	00 a0 fe 05 	add_i s0, s0, -88
    8fa0:	40 80 00 16 	cmpgt_u s2, s0, 32
    8fa4:	c2 f5 ff f5 	bnz s2, -328 <vfprintf+0x588>
    8fa8:	40 00 00 4f 	movehi s2, 0
    8fac:	00 08 00 0b 	shl s0, s0, 2
    8fb0:	42 90 14 00 	or s2, s2, 1316
    8fb4:	00 00 51 c0 	add_i s0, s0, s2
    8fb8:	00 00 00 a8 	load_32 s0, (s0)
    8fbc:	00 00 00 f0 	b s0
    8fc0:	01 fc 03 01 	and s0, s1, 255
    8fc4:	60 00 00 0f 	move s3, 0
    8fc8:	20 a0 fe 05 	add_i s1, s0, -88
    8fcc:	41 80 00 16 	cmpgt_u s2, s1, 32
    8fd0:	a2 d6 ff f5 	bnz s2, -1324 <vfprintf+0x1d0>
    8fd4:	40 00 00 4f 	movehi s2, 0
    8fd8:	21 08 00 0b 	shl s1, s1, 2
    8fdc:	60 23 00 0f 	move s27, 8
    8fe0:	42 a0 16 00 	or s2, s2, 1448
    8fe4:	21 00 51 c0 	add_i s1, s1, s2
    8fe8:	21 00 00 a8 	load_32 s1, (s1)
    8fec:	01 00 00 f0 	b s1
    8ff0:	60 43 00 0f 	move s27, 16
    8ff4:	3e 20 01 a8 	load_32 s1, 72(sp)
    8ff8:	3e 83 01 88 	store_32 s25, 96(sp)
    8ffc:	21 40 00 01 	and s1, s1, 16
    9000:	41 00 00 f2 	bz s1, 8 <vfprintf+0x734>
    9004:	ad fe ff f7 	b -1356 <vfprintf+0x1e4>
    9008:	20 a4 01 10 	cmpeq_i s1, s0, 105
    900c:	61 00 00 f4 	bnz s1, 12 <vfprintf+0x744>
    9010:	00 90 01 11 	cmpne_i s0, s0, 100
    9014:	c0 d7 ff f5 	bnz s0, -1288 <vfprintf+0x238>
    9018:	1e a0 02 a8 	load_32 s0, 168(sp)
    901c:	00 0c 00 05 	add_i s0, s0, 3
    9020:	00 f0 ff 01 	and s0, s0, -4
    9024:	20 10 00 05 	add_i s1, s0, 4
    9028:	3e a0 02 88 	store_32 s1, 168(sp)
    902c:	00 03 00 a8 	load_32 s24, (s0)
    9030:	38 7f 00 09 	ashr s25, s24, 31
    9034:	1a 00 00 a0 	load_u8 s0, (s26)
    9038:	7e 90 01 88 	store_32 s3, 100(sp)
    903c:	20 a4 01 10 	cmpeq_i s1, s0, 105
    9040:	81 d5 ff f5 	bnz s1, -1360 <vfprintf+0x21c>
    9044:	00 90 01 11 	cmpne_i s0, s0, 100
    9048:	00 e0 ff f5 	bnz s0, -1024 <vfprintf+0x374>
    904c:	a9 fe ff f7 	b -1372 <vfprintf+0x21c>
    9050:	00 80 d0 c1 	sext_8 s0, s1
    9054:	20 80 fd c0 	move s1, s27
    9058:	91 e9 ff f9 	call -22972 <fputc>
    905c:	7e 50 01 a8 	load_32 s3, 84(sp)
    9060:	1e 40 01 a8 	load_32 s0, 80(sp)
    9064:	3a 00 00 a0 	load_u8 s1, (s26)
    9068:	c1 f0 ff f5 	bnz s1, -488 <vfprintf+0x5ac>
    906c:	1f 00 00 f6 	b 124 <vfprintf+0x814>
    9070:	3e 83 01 88 	store_32 s25, 96(sp)
    9074:	00 80 f1 c0 	move s0, s3
    9078:	5e d0 00 a8 	load_32 s2, 52(sp)
    907c:	20 80 d0 c1 	sext_8 s1, s1
    9080:	20 83 f1 c0 	move s25, s3
    9084:	dc 00 00 f8 	call 880 <memchr>
    9088:	60 c8 ff f3 	bz s0, -1780 <vfprintf+0xc0>
    908c:	3e c0 00 a8 	load_32 s1, 48(sp)
    9090:	00 80 6c c0 	sub_i s0, s0, s25
    9094:	5e 10 01 a8 	load_32 s2, 68(sp)
    9098:	5a 07 00 05 	add_i s26, s26, 1
    909c:	01 00 b0 c0 	shl s0, s1, s0
    90a0:	40 00 01 c0 	or s2, s0, s2
    90a4:	5e 10 01 88 	store_32 s2, 68(sp)
    90a8:	00 80 f0 c0 	move s0, s1
    90ac:	60 80 fc c0 	move s3, s25
    90b0:	3e 83 01 a8 	load_32 s25, 96(sp)
    90b4:	3a 00 00 a0 	load_u8 s1, (s26)
    90b8:	41 ee ff f5 	bnz s1, -568 <vfprintf+0x5ac>
    90bc:	0b 00 00 f6 	b 44 <vfprintf+0x814>
    90c0:	01 fc 03 01 	and s0, s1, 255
    90c4:	20 b8 00 10 	cmpeq_i s1, s0, 46
    90c8:	1e 90 00 a8 	load_32 s0, 36(sp)
    90cc:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x800>
    90d0:	1e f0 00 a8 	load_32 s0, 60(sp)
    90d4:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x808>
    90d8:	02 00 00 f6 	b 8 <vfprintf+0x80c>
    90dc:	5a 07 00 05 	add_i s26, s26, 1
    90e0:	3a 00 00 a0 	load_u8 s1, (s26)
    90e4:	e1 ec ff f5 	bnz s1, -612 <vfprintf+0x5ac>
    90e8:	fe b3 02 a8 	load_32 ra, 172(sp)
    90ec:	00 00 00 0f 	move s0, 0
    90f0:	7e c3 02 a8 	load_32 s27, 176(sp)
    90f4:	5e d3 02 a8 	load_32 s26, 180(sp)
    90f8:	3e e3 02 a8 	load_32 s25, 184(sp)
    90fc:	1e f3 02 a8 	load_32 s24, 188(sp)
    9100:	de 03 03 05 	add_i sp, sp, 192
    9104:	1f 00 00 f0 	ret

0000000000009108 strcmp:
    9108:	60 00 00 a0 	load_u8 s3, (s0)
    910c:	40 00 00 0f 	move s2, 0
    9110:	23 01 00 f2 	bz s3, 36 <strcmp+0x2c>
    9114:	81 00 00 a0 	load_u8 s4, (s1)
    9118:	a3 fc 03 01 	and s5, s3, 255
    911c:	85 00 12 c1 	cmpne_i s4, s5, s4
    9120:	24 01 00 f4 	bnz s4, 36 <strcmp+0x3c>
    9124:	60 04 00 a0 	load_u8 s3, 1(s0)
    9128:	00 04 00 05 	add_i s0, s0, 1
    912c:	21 04 00 05 	add_i s1, s1, 1
    9130:	23 ff ff f5 	bnz s3, -28 <strcmp+0xc>
    9134:	01 00 00 a2 	load_s8 s0, (s1)
    9138:	20 00 d1 c1 	sext_8 s1, s2
    913c:	01 00 60 c0 	sub_i s0, s1, s0
    9140:	1f 00 00 f0 	ret
    9144:	40 80 f1 c0 	move s2, s3
    9148:	01 00 00 a2 	load_s8 s0, (s1)
    914c:	20 00 d1 c1 	sext_8 s1, s2
    9150:	01 00 60 c0 	sub_i s0, s1, s0
    9154:	1f 00 00 f0 	ret

0000000000009158 strncmp:
    9158:	62 02 00 f2 	bz s2, 76 <strncmp+0x4c>
    915c:	60 00 00 a0 	load_u8 s3, (s0)
    9160:	a3 01 00 f2 	bz s3, 52 <strncmp+0x3c>
    9164:	42 fc ff 05 	add_i s2, s2, -1
    9168:	62 01 00 f2 	bz s2, 44 <strncmp+0x3c>
    916c:	81 00 00 a0 	load_u8 s4, (s1)
    9170:	a3 fc 03 01 	and s5, s3, 255
    9174:	85 00 12 c1 	cmpne_i s4, s5, s4
    9178:	e4 00 00 f4 	bnz s4, 28 <strncmp+0x3c>
    917c:	60 04 00 a0 	load_u8 s3, 1(s0)
    9180:	21 04 00 05 	add_i s1, s1, 1
    9184:	83 00 00 f2 	bz s3, 16 <strncmp+0x3c>
    9188:	42 fc ff 05 	add_i s2, s2, -1
    918c:	00 04 00 05 	add_i s0, s0, 1
    9190:	e2 fe ff f5 	bnz s2, -36 <strncmp+0x14>
    9194:	01 00 00 a2 	load_s8 s0, (s1)
    9198:	20 80 d1 c1 	sext_8 s1, s3
    919c:	01 00 60 c0 	sub_i s0, s1, s0
    91a0:	1f 00 00 f0 	ret
    91a4:	00 00 00 0f 	move s0, 0
    91a8:	1f 00 00 f0 	ret

00000000000091ac strcasecmp:
    91ac:	60 00 00 a0 	load_u8 s3, (s0)
    91b0:	40 00 00 0f 	move s2, 0
    91b4:	a3 02 00 f2 	bz s3, 84 <strcasecmp+0x5c>
    91b8:	80 80 d1 c1 	sext_8 s4, s3
    91bc:	a4 7c fe 05 	add_i s5, s4, -97
    91c0:	a5 68 00 18 	cmplt_u s5, s5, 26
    91c4:	45 00 00 f4 	bnz s5, 8 <strcasecmp+0x20>
    91c8:	02 00 00 f6 	b 8 <strcasecmp+0x24>
    91cc:	84 80 ff 05 	add_i s4, s4, -32
    91d0:	a1 00 00 a2 	load_s8 s5, (s1)
    91d4:	c5 7c fe 05 	add_i s6, s5, -97
    91d8:	c6 68 00 18 	cmplt_u s6, s6, 26
    91dc:	46 00 00 f4 	bnz s6, 8 <strcasecmp+0x38>
    91e0:	02 00 00 f6 	b 8 <strcasecmp+0x3c>
    91e4:	a5 80 ff 05 	add_i s5, s5, -32
    91e8:	84 80 12 c1 	cmpne_i s4, s4, s5
    91ec:	c4 00 00 f4 	bnz s4, 24 <strcasecmp+0x58>
    91f0:	60 04 00 a0 	load_u8 s3, 1(s0)
    91f4:	00 04 00 05 	add_i s0, s0, 1
    91f8:	21 04 00 05 	add_i s1, s1, 1
    91fc:	e3 fd ff f5 	bnz s3, -68 <strcasecmp+0xc>
    9200:	02 00 00 f6 	b 8 <strcasecmp+0x5c>
    9204:	40 80 f1 c0 	move s2, s3
    9208:	00 00 d1 c1 	sext_8 s0, s2
    920c:	40 7c fe 05 	add_i s2, s0, -97
    9210:	42 68 00 18 	cmplt_u s2, s2, 26
    9214:	42 00 00 f4 	bnz s2, 8 <strcasecmp+0x70>
    9218:	02 00 00 f6 	b 8 <strcasecmp+0x74>
    921c:	00 80 ff 05 	add_i s0, s0, -32
    9220:	21 00 00 a2 	load_s8 s1, (s1)
    9224:	41 7c fe 05 	add_i s2, s1, -97
    9228:	42 68 00 18 	cmplt_u s2, s2, 26
    922c:	42 00 00 f4 	bnz s2, 8 <strcasecmp+0x88>
    9230:	02 00 00 f6 	b 8 <strcasecmp+0x8c>
    9234:	21 80 ff 05 	add_i s1, s1, -32
    9238:	00 80 60 c0 	sub_i s0, s0, s1
    923c:	1f 00 00 f0 	ret

0000000000009240 toupper:
    9240:	20 7c fe 05 	add_i s1, s0, -97
    9244:	21 68 00 18 	cmplt_u s1, s1, 26
    9248:	41 00 00 f4 	bnz s1, 8 <toupper+0x10>
    924c:	02 00 00 f6 	b 8 <toupper+0x14>
    9250:	00 80 ff 05 	add_i s0, s0, -32
    9254:	1f 00 00 f0 	ret

0000000000009258 strncasecmp:
    9258:	e2 04 00 f2 	bz s2, 156 <strncasecmp+0x9c>
    925c:	60 00 00 a0 	load_u8 s3, (s0)
    9260:	e3 02 00 f2 	bz s3, 92 <strncasecmp+0x64>
    9264:	42 fc ff 05 	add_i s2, s2, -1
    9268:	a2 02 00 f2 	bz s2, 84 <strncasecmp+0x64>
    926c:	80 80 d1 c1 	sext_8 s4, s3
    9270:	a4 7c fe 05 	add_i s5, s4, -97
    9274:	a5 68 00 18 	cmplt_u s5, s5, 26
    9278:	45 00 00 f4 	bnz s5, 8 <strncasecmp+0x28>
    927c:	02 00 00 f6 	b 8 <strncasecmp+0x2c>
    9280:	84 80 ff 05 	add_i s4, s4, -32
    9284:	a1 00 00 a2 	load_s8 s5, (s1)
    9288:	c5 7c fe 05 	add_i s6, s5, -97
    928c:	c6 68 00 18 	cmplt_u s6, s6, 26
    9290:	46 00 00 f4 	bnz s6, 8 <strncasecmp+0x40>
    9294:	02 00 00 f6 	b 8 <strncasecmp+0x44>
    9298:	a5 80 ff 05 	add_i s5, s5, -32
    929c:	84 80 12 c1 	cmpne_i s4, s4, s5
    92a0:	e4 00 00 f4 	bnz s4, 28 <strncasecmp+0x64>
    92a4:	60 04 00 a0 	load_u8 s3, 1(s0)
    92a8:	21 04 00 05 	add_i s1, s1, 1
    92ac:	83 00 00 f2 	bz s3, 16 <strncasecmp+0x64>
    92b0:	42 fc ff 05 	add_i s2, s2, -1
    92b4:	00 04 00 05 	add_i s0, s0, 1
    92b8:	a2 fd ff f5 	bnz s2, -76 <strncasecmp+0x14>
    92bc:	00 80 d1 c1 	sext_8 s0, s3
    92c0:	40 7c fe 05 	add_i s2, s0, -97
    92c4:	42 68 00 18 	cmplt_u s2, s2, 26
    92c8:	42 00 00 f4 	bnz s2, 8 <strncasecmp+0x78>
    92cc:	02 00 00 f6 	b 8 <strncasecmp+0x7c>
    92d0:	00 80 ff 05 	add_i s0, s0, -32
    92d4:	21 00 00 a2 	load_s8 s1, (s1)
    92d8:	41 7c fe 05 	add_i s2, s1, -97
    92dc:	42 68 00 18 	cmplt_u s2, s2, 26
    92e0:	42 00 00 f4 	bnz s2, 8 <strncasecmp+0x90>
    92e4:	02 00 00 f6 	b 8 <strncasecmp+0x94>
    92e8:	21 80 ff 05 	add_i s1, s1, -32
    92ec:	00 80 60 c0 	sub_i s0, s0, s1
    92f0:	1f 00 00 f0 	ret
    92f4:	00 00 00 0f 	move s0, 0
    92f8:	1f 00 00 f0 	ret

00000000000092fc strlen:
    92fc:	20 00 f0 c0 	move s1, s0
    9300:	01 00 00 a0 	load_u8 s0, (s1)
    9304:	e0 00 00 f2 	bz s0, 28 <strlen+0x24>
    9308:	00 00 00 0f 	move s0, 0
    930c:	41 04 00 a0 	load_u8 s2, 1(s1)
    9310:	21 04 00 05 	add_i s1, s1, 1
    9314:	00 04 00 05 	add_i s0, s0, 1
    9318:	a2 ff ff f5 	bnz s2, -12 <strlen+0x10>
    931c:	1f 00 00 f0 	ret
    9320:	00 00 00 0f 	move s0, 0
    9324:	1f 00 00 f0 	ret

0000000000009328 strcpy:
    9328:	41 00 00 a0 	load_u8 s2, (s1)
    932c:	80 00 f0 c0 	move s4, s0
    9330:	02 01 00 f2 	bz s2, 32 <strcpy+0x28>
    9334:	60 00 f0 c0 	move s3, s0
    9338:	83 04 00 05 	add_i s4, s3, 1
    933c:	43 00 00 82 	store_8 s2, (s3)
    9340:	41 04 00 a0 	load_u8 s2, 1(s1)
    9344:	21 04 00 05 	add_i s1, s1, 1
    9348:	60 00 f2 c0 	move s3, s4
    934c:	62 ff ff f5 	bnz s2, -20 <strcpy+0x10>
    9350:	20 00 00 0f 	move s1, 0
    9354:	24 00 00 82 	store_8 s1, (s4)
    9358:	1f 00 00 f0 	ret

000000000000935c strncpy:
    935c:	81 00 00 a0 	load_u8 s4, (s1)
    9360:	a2 00 00 11 	cmpne_i s5, s2, 0
    9364:	62 02 00 f2 	bz s2, 76 <strncpy+0x54>
    9368:	c4 fc 03 01 	and s6, s4, 255
    936c:	60 00 f0 c0 	move s3, s0
    9370:	66 01 00 f2 	bz s6, 44 <strncpy+0x40>
    9374:	60 00 f0 c0 	move s3, s0
    9378:	42 fc ff 05 	add_i s2, s2, -1
    937c:	83 00 00 82 	store_8 s4, (s3)
    9380:	81 04 00 a0 	load_u8 s4, 1(s1)
    9384:	63 04 00 05 	add_i s3, s3, 1
    9388:	a2 00 00 11 	cmpne_i s5, s2, 0
    938c:	82 00 00 f2 	bz s2, 16 <strncpy+0x40>
    9390:	c4 fc 03 01 	and s6, s4, 255
    9394:	21 04 00 05 	add_i s1, s1, 1
    9398:	06 ff ff f5 	bnz s6, -32 <strncpy+0x1c>
    939c:	25 04 00 01 	and s1, s5, 1
    93a0:	61 00 00 f2 	bz s1, 12 <strncpy+0x50>
    93a4:	20 00 00 0f 	move s1, 0
    93a8:	23 00 00 82 	store_8 s1, (s3)
    93ac:	1f 00 00 f0 	ret
    93b0:	60 00 f0 c0 	move s3, s0
    93b4:	25 04 00 01 	and s1, s5, 1
    93b8:	a1 ff ff f3 	bz s1, -12 <strncpy+0x50>
    93bc:	fa ff ff f7 	b -24 <strncpy+0x48>

00000000000093c0 strchr:
    93c0:	40 00 f0 c0 	move s2, s0
    93c4:	00 00 00 0f 	move s0, 0
    93c8:	62 00 00 a0 	load_u8 s3, (s2)
    93cc:	e3 00 00 f2 	bz s3, 28 <strchr+0x28>
    93d0:	60 80 d1 c1 	sext_8 s3, s3
    93d4:	63 80 00 c1 	cmpeq_i s3, s3, s1
    93d8:	a3 00 00 f4 	bnz s3, 20 <strchr+0x2c>
    93dc:	62 04 00 a0 	load_u8 s3, 1(s2)
    93e0:	42 04 00 05 	add_i s2, s2, 1
    93e4:	63 ff ff f5 	bnz s3, -20 <strchr+0x10>
    93e8:	1f 00 00 f0 	ret
    93ec:	00 00 f1 c0 	move s0, s2
    93f0:	1f 00 00 f0 	ret

00000000000093f4 memchr:
    93f4:	e2 01 00 f2 	bz s2, 60 <memchr+0x3c>
    93f8:	80 00 00 0f 	move s4, 0
    93fc:	a0 00 f2 c0 	move s5, s4
    9400:	60 80 52 c0 	add_i s3, s0, s5
    9404:	c3 00 00 a2 	load_s8 s6, (s3)
    9408:	c6 80 10 c1 	cmpne_i s6, s6, s1
    940c:	46 00 00 f4 	bnz s6, 8 <memchr+0x20>
    9410:	0b 00 00 f6 	b 44 <memchr+0x48>
    9414:	a5 04 00 05 	add_i s5, s5, 1
    9418:	65 00 71 c1 	cmpge_u s3, s5, s2
    941c:	43 00 00 f4 	bnz s3, 8 <memchr+0x30>
    9420:	f8 ff ff f7 	b -32 <memchr+0xc>
    9424:	60 00 f2 c0 	move s3, s4
    9428:	00 80 f1 c0 	move s0, s3
    942c:	1f 00 00 f0 	ret
    9430:	60 00 00 0f 	move s3, 0
    9434:	00 80 f1 c0 	move s0, s3
    9438:	1f 00 00 f0 	ret
    943c:	00 80 f1 c0 	move s0, s3
    9440:	1f 00 00 f0 	ret

0000000000009444 strcat:
    9444:	60 00 f0 c0 	move s3, s0
    9448:	40 80 f1 c0 	move s2, s3
    944c:	82 00 00 a0 	load_u8 s4, (s2)
    9450:	62 04 00 05 	add_i s3, s2, 1
    9454:	a4 ff ff f5 	bnz s4, -12 <strcat+0x4>
    9458:	61 00 00 a0 	load_u8 s3, (s1)
    945c:	43 01 00 f2 	bz s3, 40 <strcat+0x40>
    9460:	82 04 00 05 	add_i s4, s2, 1
    9464:	62 00 00 82 	store_8 s3, (s2)
    9468:	61 04 00 a0 	load_u8 s3, 1(s1)
    946c:	21 04 00 05 	add_i s1, s1, 1
    9470:	40 00 f2 c0 	move s2, s4
    9474:	63 ff ff f5 	bnz s3, -20 <strcat+0x1c>
    9478:	20 00 00 0f 	move s1, 0
    947c:	24 00 00 82 	store_8 s1, (s4)
    9480:	1f 00 00 f0 	ret
    9484:	80 00 f1 c0 	move s4, s2
    9488:	20 00 00 0f 	move s1, 0
    948c:	24 00 00 82 	store_8 s1, (s4)
    9490:	1f 00 00 f0 	ret

0000000000009494 isdigit:
    9494:	00 40 ff 05 	add_i s0, s0, -48
    9498:	00 28 00 18 	cmplt_u s0, s0, 10
    949c:	00 04 00 01 	and s0, s0, 1
    94a0:	1f 00 00 f0 	ret

00000000000094a4 sbrk:
    94a4:	de 03 ff 05 	add_i sp, sp, -64
    94a8:	1e f3 00 88 	store_32 s24, 60(sp)
    94ac:	fe e3 00 88 	store_32 ra, 56(sp)
    94b0:	26 00 00 4f 	movehi s1, 6
    94b4:	40 00 f0 c0 	move s2, s0
    94b8:	01 40 40 00 	or s0, s1, 4112
    94bc:	20 00 00 aa 	load_sync s1, (s0)
    94c0:	61 00 51 c0 	add_i s3, s1, s2
    94c4:	00 83 f0 c0 	move s24, s1
    94c8:	60 00 00 8a 	store_sync s3, (s0)  
    94cc:	83 ff ff f3 	bz s3, -16 <sbrk+0x18>
    94d0:	02 04 00 14 	cmplt_i s0, s2, 1
    94d4:	80 00 00 f4 	bnz s0, 16 <sbrk+0x40>
    94d8:	20 00 00 0f 	move s1, 0
    94dc:	00 00 fc c0 	move s0, s24
    94e0:	d0 fc ff f9 	call -3264 <memset>
    94e4:	00 00 fc c0 	move s0, s24
    94e8:	fe e3 00 a8 	load_32 ra, 56(sp)
    94ec:	1e f3 00 a8 	load_32 s24, 60(sp)
    94f0:	de 03 01 05 	add_i sp, sp, 64
    94f4:	1f 00 00 f0 	ret

00000000000094f8 parallel_execute:
    94f8:	de 03 ff 05 	add_i sp, sp, -64
    94fc:	1e f3 00 88 	store_32 s24, 60(sp)
    9500:	3e e3 00 88 	store_32 s25, 56(sp)
    9504:	5e d3 00 88 	store_32 s26, 52(sp)
    9508:	7e c3 00 88 	store_32 s27, 48(sp)
    950c:	fe b3 00 88 	store_32 ra, 44(sp)
    9510:	66 00 00 4f 	movehi s3, 6
    9514:	03 f3 6c 00 	or s24, s3, 6972
    9518:	66 00 00 4f 	movehi s3, 6
    951c:	18 00 00 88 	store_32 s0, (s24)
    9520:	06 00 00 4f 	movehi s0, 6
    9524:	23 03 6d 00 	or s25, s3, 6976
    9528:	66 00 00 4f 	movehi s3, 6
    952c:	40 13 6d 00 	or s26, s0, 6980
    9530:	39 00 00 88 	store_32 s1, (s25)
    9534:	00 00 00 0f 	move s0, 0
    9538:	63 23 6d 00 	or s27, s3, 6984
    953c:	1a 00 00 88 	store_32 s0, (s26)
    9540:	5b 00 00 88 	store_32 s2, (s27)
    9544:	1a 00 00 a8 	load_32 s0, (s26)
    9548:	3b 00 00 a8 	load_32 s1, (s27)
    954c:	00 80 00 c1 	cmpeq_i s0, s0, s1
    9550:	c0 02 00 f4 	bnz s0, 88 <parallel_execute+0xb0>
    9554:	3a 00 00 a8 	load_32 s1, (s26)
    9558:	1b 00 00 a8 	load_32 s0, (s27)
    955c:	01 00 00 c1 	cmpeq_i s0, s1, s0
    9560:	c0 01 00 f4 	bnz s0, 56 <parallel_execute+0xa0>
    9564:	01 04 00 05 	add_i s0, s1, 1
    9568:	5a 00 00 aa 	load_sync s2, (s26)
    956c:	62 80 10 c1 	cmpne_i s3, s2, s1
    9570:	83 00 00 f4 	bnz s3, 16 <parallel_execute+0x88>
    9574:	60 00 f0 c0 	move s3, s0
    9578:	7a 00 00 8a 	store_sync s3, (s26)  
    957c:	63 ff ff f3 	bz s3, -20 <parallel_execute+0x70>
    9580:	02 80 00 c1 	cmpeq_i s0, s2, s1
    9584:	00 04 00 01 	and s0, s0, 1
    9588:	60 fe ff f3 	bz s0, -52 <parallel_execute+0x5c>
    958c:	58 00 00 a8 	load_32 s2, (s24)
    9590:	19 00 00 a8 	load_32 s0, (s25)
    9594:	42 00 00 fc 	call s2
    9598:	1a 00 00 a8 	load_32 s0, (s26)
    959c:	3b 00 00 a8 	load_32 s1, (s27)
    95a0:	00 80 10 c1 	cmpne_i s0, s0, s1
    95a4:	80 fd ff f5 	bnz s0, -80 <parallel_execute+0x5c>
    95a8:	06 00 00 4f 	movehi s0, 6
    95ac:	00 30 6d 00 	or s0, s0, 6988
    95b0:	20 00 00 a8 	load_32 s1, (s0)
    95b4:	e1 ff ff f5 	bnz s1, -4 <parallel_execute+0xb8>
    95b8:	fe b3 00 a8 	load_32 ra, 44(sp)
    95bc:	7e c3 00 a8 	load_32 s27, 48(sp)
    95c0:	5e d3 00 a8 	load_32 s26, 52(sp)
    95c4:	3e e3 00 a8 	load_32 s25, 56(sp)
    95c8:	1e f3 00 a8 	load_32 s24, 60(sp)
    95cc:	de 03 01 05 	add_i sp, sp, 64
    95d0:	1f 00 00 f0 	ret

00000000000095d4 worker_thread:
    95d4:	de 03 ff 05 	add_i sp, sp, -64
    95d8:	1e f3 00 88 	store_32 s24, 60(sp)
    95dc:	3e e3 00 88 	store_32 s25, 56(sp)
    95e0:	5e d3 00 88 	store_32 s26, 52(sp)
    95e4:	7e c3 00 88 	store_32 s27, 48(sp)
    95e8:	fe b3 00 88 	store_32 ra, 44(sp)
    95ec:	06 00 00 4f 	movehi s0, 6
    95f0:	26 00 00 4f 	movehi s1, 6
    95f4:	46 00 00 4f 	movehi s2, 6
    95f8:	00 13 6d 00 	or s24, s0, 6980
    95fc:	06 00 00 4f 	movehi s0, 6
    9600:	21 23 6d 00 	or s25, s1, 6984
    9604:	26 00 00 4f 	movehi s1, 6
    9608:	40 33 6d 00 	or s26, s0, 6988
    960c:	62 03 6d 00 	or s27, s2, 6976
    9610:	01 f0 6c 00 	or s0, s1, 6972
    9614:	1e a0 00 88 	store_32 s0, 40(sp)
    9618:	18 00 00 a8 	load_32 s0, (s24)
    961c:	39 00 00 a8 	load_32 s1, (s25)
    9620:	00 80 00 c1 	cmpeq_i s0, s0, s1
    9624:	a0 ff ff f5 	bnz s0, -12 <worker_thread+0x44>
    9628:	1a 00 00 aa 	load_sync s0, (s26)
    962c:	20 04 00 05 	add_i s1, s0, 1
    9630:	00 00 f0 c0 	move s0, s0
    9634:	3a 00 00 8a 	store_sync s1, (s26)  
    9638:	81 ff ff f3 	bz s1, -16 <worker_thread+0x54>
    963c:	38 00 00 a8 	load_32 s1, (s24)
    9640:	19 00 00 a8 	load_32 s0, (s25)
    9644:	01 00 00 c1 	cmpeq_i s0, s1, s0
    9648:	e0 01 00 f4 	bnz s0, 60 <worker_thread+0xb0>
    964c:	01 04 00 05 	add_i s0, s1, 1
    9650:	58 00 00 aa 	load_sync s2, (s24)
    9654:	62 80 10 c1 	cmpne_i s3, s2, s1
    9658:	83 00 00 f4 	bnz s3, 16 <worker_thread+0x94>
    965c:	60 00 f0 c0 	move s3, s0
    9660:	78 00 00 8a 	store_sync s3, (s24)  
    9664:	63 ff ff f3 	bz s3, -20 <worker_thread+0x7c>
    9668:	02 80 00 c1 	cmpeq_i s0, s2, s1
    966c:	00 04 00 01 	and s0, s0, 1
    9670:	60 fe ff f3 	bz s0, -52 <worker_thread+0x68>
    9674:	1e a0 00 a8 	load_32 s0, 40(sp)
    9678:	40 00 00 a8 	load_32 s2, (s0)
    967c:	1b 00 00 a8 	load_32 s0, (s27)
    9680:	42 00 00 fc 	call s2
    9684:	1a 00 00 aa 	load_sync s0, (s26)
    9688:	20 fc ff 05 	add_i s1, s0, -1
    968c:	00 00 f0 c0 	move s0, s0
    9690:	3a 00 00 8a 	store_sync s1, (s26)  
    9694:	81 ff ff f3 	bz s1, -16 <worker_thread+0xb0>
    9698:	e0 ff ff f7 	b -128 <worker_thread+0x44>

000000000000969c start_all_threads:
    969c:	00 fc ff 0f 	move s0, -1
    96a0:	15 00 00 8c 	setcr s0, 21
    96a4:	1f 00 00 f0 	ret

00000000000096a8 _write_uart:
    96a8:	38 fc ff 4f 	movehi s1, 524280
    96ac:	41 00 01 00 	or s2, s1, 64
    96b0:	62 00 00 a8 	load_32 s3, (s2)
    96b4:	63 04 00 01 	and s3, s3, 1
    96b8:	c3 ff ff f3 	bz s3, -8 <_write_uart+0x8>
    96bc:	21 20 01 00 	or s1, s1, 72
    96c0:	01 00 00 88 	store_32 s0, (s1)
    96c4:	1f 00 00 f0 	ret

00000000000096c8 write_console:
    96c8:	41 04 00 14 	cmplt_i s2, s1, 1
    96cc:	c2 01 00 f4 	bnz s2, 56 <write_console+0x3c>
    96d0:	98 fc ff 4f 	movehi s4, 524280
    96d4:	40 00 00 0f 	move s2, 0
    96d8:	64 00 01 00 	or s3, s4, 64
    96dc:	84 20 01 00 	or s4, s4, 72
    96e0:	a0 00 51 c0 	add_i s5, s0, s2
    96e4:	a5 00 00 a2 	load_s8 s5, (s5)
    96e8:	c3 00 00 a8 	load_32 s6, (s3)
    96ec:	c6 04 00 01 	and s6, s6, 1
    96f0:	c6 ff ff f3 	bz s6, -8 <write_console+0x20>
    96f4:	42 04 00 05 	add_i s2, s2, 1
    96f8:	a4 00 00 88 	store_32 s5, (s4)
    96fc:	c2 80 40 c1 	cmplt_i s6, s2, s1
    9700:	06 ff ff f5 	bnz s6, -32 <write_console+0x18>
    9704:	00 00 00 0f 	move s0, 0
    9708:	1f 00 00 f0 	ret

000000000000970c read_block:
    970c:	de 03 ff 05 	add_i sp, sp, -64
    9710:	1e f3 00 88 	store_32 s24, 60(sp)
    9714:	fe e3 00 88 	store_32 ra, 56(sp)
    9718:	46 00 00 4f 	movehi s2, 6
    971c:	42 40 6d 00 	or s2, s2, 6992
    9720:	42 00 00 a0 	load_u8 s2, (s2)
    9724:	42 04 00 11 	cmpne_i s2, s2, 1
    9728:	42 01 00 f4 	bnz s2, 40 <read_block+0x44>
    972c:	00 24 00 0b 	shl s0, s0, 9
    9730:	40 00 04 4f 	movehi s2, 8192
    9734:	00 03 08 0f 	move s24, 512
    9738:	40 00 51 c0 	add_i s2, s0, s2
    973c:	00 80 f0 c0 	move s0, s1
    9740:	20 00 f1 c0 	move s1, s2
    9744:	40 00 fc c0 	move s2, s24
    9748:	02 fc ff f9 	call -4088 <memcpy>
    974c:	03 00 00 f6 	b 12 <read_block+0x4c>
    9750:	a8 03 00 f8 	call 3744 <read_sdmmc_device>
    9754:	00 03 f0 c0 	move s24, s0
    9758:	00 00 fc c0 	move s0, s24
    975c:	fe e3 00 a8 	load_32 ra, 56(sp)
    9760:	1e f3 00 a8 	load_32 s24, 60(sp)
    9764:	de 03 01 05 	add_i sp, sp, 64
    9768:	1f 00 00 f0 	ret

000000000000976c open:
    976c:	de 03 f7 05 	add_i sp, sp, -576
    9770:	1e f3 08 88 	store_32 s24, 572(sp)
    9774:	3e e3 08 88 	store_32 s25, 568(sp)
    9778:	5e d3 08 88 	store_32 s26, 564(sp)
    977c:	7e c3 08 88 	store_32 s27, 560(sp)
    9780:	fe b3 08 88 	store_32 ra, 556(sp)
    9784:	26 00 00 4f 	movehi s1, 6
    9788:	41 50 6d 00 	or s2, s1, 6996
    978c:	22 00 00 a0 	load_u8 s1, (s2)
    9790:	1e a0 00 88 	store_32 s0, 40(sp)
    9794:	a1 0c 00 f4 	bnz s1, 404 <open+0x1bc>
    9798:	5e 60 00 88 	store_32 s2, 24(sp)
    979c:	73 02 00 f8 	call 2508 <init_sdmmc_device>
    97a0:	00 fc ff 12 	cmpgt_i s0, s0, -1
    97a4:	40 00 00 f4 	bnz s0, 8 <open+0x40>
    97a8:	0d 00 00 f6 	b 52 <open+0x70>
    97ac:	06 00 00 4f 	movehi s0, 6
    97b0:	00 40 6d 00 	or s0, s0, 6992
    97b4:	00 00 00 a0 	load_u8 s0, (s0)
    97b8:	00 04 00 11 	cmpne_i s0, s0, 1
    97bc:	40 00 00 f4 	bnz s0, 8 <open+0x58>
    97c0:	0e 00 00 f6 	b 56 <open+0x8c>
    97c4:	00 00 00 0f 	move s0, 0
    97c8:	3e b0 00 05 	add_i s1, sp, 44
    97cc:	89 03 00 f8 	call 3620 <read_sdmmc_device>
    97d0:	00 04 00 14 	cmplt_i s0, s0, 1
    97d4:	c0 03 00 f4 	bnz s0, 120 <open+0xe0>
    97d8:	0c 00 00 f6 	b 48 <open+0x9c>
    97dc:	00 00 00 4f 	movehi s0, 0
    97e0:	00 00 0b 00 	or s0, s0, 704
    97e4:	49 e8 ff f9 	call -24284 <puts>
    97e8:	06 00 00 4f 	movehi s0, 6
    97ec:	20 04 00 0f 	move s1, 1
    97f0:	00 40 6d 00 	or s0, s0, 6992
    97f4:	20 00 00 82 	store_8 s1, (s0)
    97f8:	1e b0 00 05 	add_i s0, sp, 44
    97fc:	20 00 04 4f 	movehi s1, 8192
    9800:	40 00 08 0f 	move s2, 512
    9804:	d3 fb ff f9 	call -4276 <memcpy>
    9808:	1e b4 00 a0 	load_u8 s0, 45(sp)
    980c:	3e b0 00 a0 	load_u8 s1, 44(sp)
    9810:	5e bc 00 a0 	load_u8 s2, 47(sp)
    9814:	7e b8 00 a0 	load_u8 s3, 46(sp)
    9818:	00 20 00 0b 	shl s0, s0, 8
    981c:	42 20 00 0b 	shl s2, s2, 8
    9820:	00 80 00 c0 	or s0, s0, s1
    9824:	33 64 73 4f 	movehi s1, 236339
    9828:	42 80 01 c0 	or s2, s2, s3
    982c:	21 cc 41 00 	or s1, s1, 4211
    9830:	42 40 00 0b 	shl s2, s2, 16
    9834:	02 00 00 c0 	or s0, s2, s0
    9838:	00 80 00 c1 	cmpeq_i s0, s0, s1
    983c:	e0 00 00 f4 	bnz s0, 28 <open+0xec>
    9840:	00 00 00 4f 	movehi s0, 0
    9844:	00 10 13 00 	or s0, s0, 1220
    9848:	30 e8 ff f9 	call -24384 <puts>
    984c:	2e 02 00 f8 	call 2232 <__errno_ptr>
    9850:	20 14 00 0f 	move s1, 5
    9854:	d9 00 00 f6 	b 868 <open+0x44c>
    9858:	1e c0 00 a8 	load_32 s0, 48(sp)
    985c:	00 a0 00 07 	mull_i s0, s0, 40
    9860:	00 1f 08 05 	add_i s24, s0, 519
    9864:	18 00 f8 01 	and s0, s24, -512
    9868:	40 e9 ff f9 	call -23296 <malloc>
    986c:	26 00 00 4f 	movehi s1, 6
    9870:	60 03 f0 c0 	move s27, s0
    9874:	40 00 08 0f 	move s2, 512
    9878:	21 60 75 00 	or s1, s1, 7512
    987c:	3e 90 00 88 	store_32 s1, 36(sp)
    9880:	61 03 00 88 	store_32 s27, (s1)
    9884:	3e b0 00 05 	add_i s1, sp, 44
    9888:	b2 fb ff f9 	call -4408 <memcpy>
    988c:	18 00 10 18 	cmplt_u s0, s24, 1024
    9890:	60 04 00 f4 	bnz s0, 140 <open+0x1b0>
    9894:	06 00 00 4f 	movehi s0, 6
    9898:	18 27 00 0a 	shr s24, s24, 9
    989c:	20 07 00 0f 	move s25, 1
    98a0:	40 43 6d 00 	or s26, s0, 6992
    98a4:	00 00 04 4f 	movehi s0, 8192
    98a8:	1e 80 00 88 	store_32 s0, 32(sp)
    98ac:	00 00 08 0f 	move s0, 512
    98b0:	1e 70 00 88 	store_32 s0, 28(sp)
    98b4:	03 00 00 f6 	b 12 <open+0x154>
    98b8:	1e 90 00 a8 	load_32 s0, 36(sp)
    98bc:	60 03 00 a8 	load_32 s27, (s0)
    98c0:	3a 00 00 a0 	load_u8 s1, (s26)
    98c4:	19 24 00 0b 	shl s0, s25, 9
    98c8:	5b 00 50 c0 	add_i s2, s27, s0
    98cc:	21 04 00 11 	cmpne_i s1, s1, 1
    98d0:	41 01 00 f4 	bnz s1, 40 <open+0x18c>
    98d4:	3e 80 00 a8 	load_32 s1, 32(sp)
    98d8:	20 80 50 c0 	add_i s1, s0, s1
    98dc:	00 00 f1 c0 	move s0, s2
    98e0:	5e 70 00 a8 	load_32 s2, 28(sp)
    98e4:	9b fb ff f9 	call -4500 <memcpy>
    98e8:	39 07 00 05 	add_i s25, s25, 1
    98ec:	19 00 7c c1 	cmpge_u s0, s25, s24
    98f0:	60 01 00 f4 	bnz s0, 44 <open+0x1b0>
    98f4:	f1 ff ff f7 	b -60 <open+0x14c>
    98f8:	00 80 fc c0 	move s0, s25
    98fc:	20 00 f1 c0 	move s1, s2
    9900:	3c 03 00 f8 	call 3312 <read_sdmmc_device>
    9904:	00 04 00 14 	cmplt_i s0, s0, 1
    9908:	20 fa ff f5 	bnz s0, -188 <open+0xe0>
    990c:	39 07 00 05 	add_i s25, s25, 1
    9910:	19 00 7c c1 	cmpge_u s0, s25, s24
    9914:	40 00 00 f4 	bnz s0, 8 <open+0x1b0>
    9918:	e8 ff ff f7 	b -96 <open+0x14c>
    991c:	3e 60 00 a8 	load_32 s1, 24(sp)
    9920:	00 04 00 0f 	move s0, 1
    9924:	01 00 00 82 	store_8 s0, (s1)
    9928:	06 00 00 4f 	movehi s0, 6
    992c:	20 60 6d 00 	or s1, s0, 7000
    9930:	01 00 00 a8 	load_32 s0, (s1)
    9934:	3e 90 00 88 	store_32 s1, 36(sp)
    9938:	a0 09 00 f2 	bz s0, 308 <open+0x300>
    993c:	01 40 00 a8 	load_32 s0, 16(s1)
    9940:	a0 09 00 f2 	bz s0, 308 <open+0x308>
    9944:	01 80 00 a8 	load_32 s0, 32(s1)
    9948:	a0 09 00 f2 	bz s0, 308 <open+0x310>
    994c:	01 c0 00 a8 	load_32 s0, 48(s1)
    9950:	a0 09 00 f2 	bz s0, 308 <open+0x318>
    9954:	01 00 01 a8 	load_32 s0, 64(s1)
    9958:	a0 09 00 f2 	bz s0, 308 <open+0x320>
    995c:	01 40 01 a8 	load_32 s0, 80(s1)
    9960:	a0 09 00 f2 	bz s0, 308 <open+0x328>
    9964:	01 80 01 a8 	load_32 s0, 96(s1)
    9968:	a0 09 00 f2 	bz s0, 308 <open+0x330>
    996c:	01 c0 01 a8 	load_32 s0, 112(s1)
    9970:	a0 09 00 f2 	bz s0, 308 <open+0x338>
    9974:	01 00 02 a8 	load_32 s0, 128(s1)
    9978:	a0 09 00 f2 	bz s0, 308 <open+0x340>
    997c:	01 40 02 a8 	load_32 s0, 144(s1)
    9980:	a0 09 00 f2 	bz s0, 308 <open+0x348>
    9984:	01 80 02 a8 	load_32 s0, 160(s1)
    9988:	a0 09 00 f2 	bz s0, 308 <open+0x350>
    998c:	01 c0 02 a8 	load_32 s0, 176(s1)
    9990:	a0 09 00 f2 	bz s0, 308 <open+0x358>
    9994:	01 00 03 a8 	load_32 s0, 192(s1)
    9998:	a0 09 00 f2 	bz s0, 308 <open+0x360>
    999c:	01 40 03 a8 	load_32 s0, 208(s1)
    99a0:	a0 09 00 f2 	bz s0, 308 <open+0x368>
    99a4:	01 80 03 a8 	load_32 s0, 224(s1)
    99a8:	a0 09 00 f2 	bz s0, 308 <open+0x370>
    99ac:	01 c0 03 a8 	load_32 s0, 240(s1)
    99b0:	a0 09 00 f2 	bz s0, 308 <open+0x378>
    99b4:	01 00 04 a8 	load_32 s0, 256(s1)
    99b8:	a0 09 00 f2 	bz s0, 308 <open+0x380>
    99bc:	01 40 04 a8 	load_32 s0, 272(s1)
    99c0:	a0 09 00 f2 	bz s0, 308 <open+0x388>
    99c4:	01 80 04 a8 	load_32 s0, 288(s1)
    99c8:	a0 09 00 f2 	bz s0, 308 <open+0x390>
    99cc:	01 c0 04 a8 	load_32 s0, 304(s1)
    99d0:	a0 09 00 f2 	bz s0, 308 <open+0x398>
    99d4:	01 00 05 a8 	load_32 s0, 320(s1)
    99d8:	a0 09 00 f2 	bz s0, 308 <open+0x3a0>
    99dc:	1e 90 00 a8 	load_32 s0, 36(sp)
    99e0:	00 40 05 a8 	load_32 s0, 336(s0)
    99e4:	80 09 00 f2 	bz s0, 304 <open+0x3a8>
    99e8:	1e 90 00 a8 	load_32 s0, 36(sp)
    99ec:	00 80 05 a8 	load_32 s0, 352(s0)
    99f0:	60 09 00 f2 	bz s0, 300 <open+0x3b0>
    99f4:	1e 90 00 a8 	load_32 s0, 36(sp)
    99f8:	00 c0 05 a8 	load_32 s0, 368(s0)
    99fc:	40 09 00 f2 	bz s0, 296 <open+0x3b8>
    9a00:	1e 90 00 a8 	load_32 s0, 36(sp)
    9a04:	00 00 06 a8 	load_32 s0, 384(s0)
    9a08:	20 09 00 f2 	bz s0, 292 <open+0x3c0>
    9a0c:	1e 90 00 a8 	load_32 s0, 36(sp)
    9a10:	00 40 06 a8 	load_32 s0, 400(s0)
    9a14:	00 09 00 f2 	bz s0, 288 <open+0x3c8>
    9a18:	1e 90 00 a8 	load_32 s0, 36(sp)
    9a1c:	00 80 06 a8 	load_32 s0, 416(s0)
    9a20:	e0 08 00 f2 	bz s0, 284 <open+0x3d0>
    9a24:	1e 90 00 a8 	load_32 s0, 36(sp)
    9a28:	00 c0 06 a8 	load_32 s0, 432(s0)
    9a2c:	c0 08 00 f2 	bz s0, 280 <open+0x3d8>
    9a30:	1e 90 00 a8 	load_32 s0, 36(sp)
    9a34:	00 00 07 a8 	load_32 s0, 448(s0)
    9a38:	a0 08 00 f2 	bz s0, 276 <open+0x3e0>
    9a3c:	1e 90 00 a8 	load_32 s0, 36(sp)
    9a40:	00 40 07 a8 	load_32 s0, 464(s0)
    9a44:	80 08 00 f2 	bz s0, 272 <open+0x3e8>
    9a48:	1e 90 00 a8 	load_32 s0, 36(sp)
    9a4c:	00 80 07 a8 	load_32 s0, 480(s0)
    9a50:	60 08 00 f2 	bz s0, 268 <open+0x3f0>
    9a54:	1e 90 00 a8 	load_32 s0, 36(sp)
    9a58:	00 c0 07 a8 	load_32 s0, 496(s0)
    9a5c:	40 08 00 f2 	bz s0, 264 <open+0x3f8>
    9a60:	a9 01 00 f8 	call 1700 <__errno_ptr>
    9a64:	20 60 00 0f 	move s1, 24
    9a68:	54 00 00 f6 	b 336 <open+0x44c>
    9a6c:	00 00 00 0f 	move s0, 0
    9a70:	3e 00 00 f6 	b 248 <open+0x3fc>
    9a74:	00 04 00 0f 	move s0, 1
    9a78:	3c 00 00 f6 	b 240 <open+0x3fc>
    9a7c:	00 08 00 0f 	move s0, 2
    9a80:	3a 00 00 f6 	b 232 <open+0x3fc>
    9a84:	00 0c 00 0f 	move s0, 3
    9a88:	38 00 00 f6 	b 224 <open+0x3fc>
    9a8c:	00 10 00 0f 	move s0, 4
    9a90:	36 00 00 f6 	b 216 <open+0x3fc>
    9a94:	00 14 00 0f 	move s0, 5
    9a98:	34 00 00 f6 	b 208 <open+0x3fc>
    9a9c:	00 18 00 0f 	move s0, 6
    9aa0:	32 00 00 f6 	b 200 <open+0x3fc>
    9aa4:	00 1c 00 0f 	move s0, 7
    9aa8:	30 00 00 f6 	b 192 <open+0x3fc>
    9aac:	00 20 00 0f 	move s0, 8
    9ab0:	2e 00 00 f6 	b 184 <open+0x3fc>
    9ab4:	00 24 00 0f 	move s0, 9
    9ab8:	2c 00 00 f6 	b 176 <open+0x3fc>
    9abc:	00 28 00 0f 	move s0, 10
    9ac0:	2a 00 00 f6 	b 168 <open+0x3fc>
    9ac4:	00 2c 00 0f 	move s0, 11
    9ac8:	28 00 00 f6 	b 160 <open+0x3fc>
    9acc:	00 30 00 0f 	move s0, 12
    9ad0:	26 00 00 f6 	b 152 <open+0x3fc>
    9ad4:	00 34 00 0f 	move s0, 13
    9ad8:	24 00 00 f6 	b 144 <open+0x3fc>
    9adc:	00 38 00 0f 	move s0, 14
    9ae0:	22 00 00 f6 	b 136 <open+0x3fc>
    9ae4:	00 3c 00 0f 	move s0, 15
    9ae8:	20 00 00 f6 	b 128 <open+0x3fc>
    9aec:	00 40 00 0f 	move s0, 16
    9af0:	1e 00 00 f6 	b 120 <open+0x3fc>
    9af4:	00 44 00 0f 	move s0, 17
    9af8:	1c 00 00 f6 	b 112 <open+0x3fc>
    9afc:	00 48 00 0f 	move s0, 18
    9b00:	1a 00 00 f6 	b 104 <open+0x3fc>
    9b04:	00 4c 00 0f 	move s0, 19
    9b08:	18 00 00 f6 	b 96 <open+0x3fc>
    9b0c:	00 50 00 0f 	move s0, 20
    9b10:	16 00 00 f6 	b 88 <open+0x3fc>
    9b14:	00 54 00 0f 	move s0, 21
    9b18:	14 00 00 f6 	b 80 <open+0x3fc>
    9b1c:	00 58 00 0f 	move s0, 22
    9b20:	12 00 00 f6 	b 72 <open+0x3fc>
    9b24:	00 5c 00 0f 	move s0, 23
    9b28:	10 00 00 f6 	b 64 <open+0x3fc>
    9b2c:	00 60 00 0f 	move s0, 24
    9b30:	0e 00 00 f6 	b 56 <open+0x3fc>
    9b34:	00 64 00 0f 	move s0, 25
    9b38:	0c 00 00 f6 	b 48 <open+0x3fc>
    9b3c:	00 68 00 0f 	move s0, 26
    9b40:	0a 00 00 f6 	b 40 <open+0x3fc>
    9b44:	00 6c 00 0f 	move s0, 27
    9b48:	08 00 00 f6 	b 32 <open+0x3fc>
    9b4c:	00 70 00 0f 	move s0, 28
    9b50:	06 00 00 f6 	b 24 <open+0x3fc>
    9b54:	00 74 00 0f 	move s0, 29
    9b58:	04 00 00 f6 	b 16 <open+0x3fc>
    9b5c:	00 78 00 0f 	move s0, 30
    9b60:	02 00 00 f6 	b 8 <open+0x3fc>
    9b64:	00 7c 00 0f 	move s0, 31
    9b68:	1e 80 00 88 	store_32 s0, 32(sp)
    9b6c:	06 00 00 4f 	movehi s0, 6
    9b70:	00 60 75 00 	or s0, s0, 7512
    9b74:	00 03 00 a8 	load_32 s24, (s0)
    9b78:	78 13 00 a8 	load_32 s27, 4(s24)
    9b7c:	bb 01 00 f2 	bz s27, 52 <open+0x444>
    9b80:	40 03 00 0f 	move s26, 0
    9b84:	1a a0 00 07 	mull_i s0, s26, 40
    9b88:	3e a0 00 a8 	load_32 s1, 40(sp)
    9b8c:	38 03 50 c0 	add_i s25, s24, s0
    9b90:	19 40 00 05 	add_i s0, s25, 16
    9b94:	5d fd ff f9 	call -2700 <strcmp>
    9b98:	40 00 00 f4 	bnz s0, 8 <open+0x434>
    9b9c:	0a 00 00 f6 	b 40 <open+0x458>
    9ba0:	5a 07 00 05 	add_i s26, s26, 1
    9ba4:	1a 80 7d c1 	cmpge_u s0, s26, s27
    9ba8:	40 00 00 f4 	bnz s0, 8 <open+0x444>
    9bac:	f6 ff ff f7 	b -40 <open+0x418>
    9bb0:	55 01 00 f8 	call 1364 <__errno_ptr>
    9bb4:	20 08 00 0f 	move s1, 2
    9bb8:	20 00 00 88 	store_32 s1, (s0)
    9bbc:	00 fc ff 0f 	move s0, -1
    9bc0:	0d 00 00 f6 	b 52 <open+0x488>
    9bc4:	1e 80 00 a8 	load_32 s0, 32(sp)
    9bc8:	3e 90 00 a8 	load_32 s1, 36(sp)
    9bcc:	40 10 00 0b 	shl s2, s0, 4
    9bd0:	41 00 51 c0 	add_i s2, s1, s2
    9bd4:	20 04 00 0f 	move s1, 1
    9bd8:	22 00 00 88 	store_32 s1, (s2)
    9bdc:	39 30 00 a8 	load_32 s1, 12(s25)
    9be0:	22 10 00 88 	store_32 s1, 4(s2)
    9be4:	39 20 00 a8 	load_32 s1, 8(s25)
    9be8:	22 20 00 88 	store_32 s1, 8(s2)
    9bec:	20 00 00 0f 	move s1, 0
    9bf0:	22 30 00 88 	store_32 s1, 12(s2)
    9bf4:	fe b3 08 a8 	load_32 ra, 556(sp)
    9bf8:	7e c3 08 a8 	load_32 s27, 560(sp)
    9bfc:	5e d3 08 a8 	load_32 s26, 564(sp)
    9c00:	3e e3 08 a8 	load_32 s25, 568(sp)
    9c04:	1e f3 08 a8 	load_32 s24, 572(sp)
    9c08:	de 03 09 05 	add_i sp, sp, 576
    9c0c:	1f 00 00 f0 	ret

0000000000009c10 close:
    9c10:	de 03 ff 05 	add_i sp, sp, -64
    9c14:	fe f3 00 88 	store_32 ra, 60(sp)
    9c18:	20 80 00 18 	cmplt_u s1, s0, 32
    9c1c:	01 01 00 f4 	bnz s1, 32 <close+0x2c>
    9c20:	39 01 00 f8 	call 1252 <__errno_ptr>
    9c24:	20 24 00 0f 	move s1, 9
    9c28:	20 00 00 88 	store_32 s1, (s0)
    9c2c:	00 fc ff 0f 	move s0, -1
    9c30:	fe f3 00 a8 	load_32 ra, 60(sp)
    9c34:	de 03 01 05 	add_i sp, sp, 64
    9c38:	1f 00 00 f0 	ret
    9c3c:	26 00 00 4f 	movehi s1, 6
    9c40:	00 10 00 0b 	shl s0, s0, 4
    9c44:	21 60 6d 00 	or s1, s1, 7000
    9c48:	21 00 50 c0 	add_i s1, s1, s0
    9c4c:	00 00 00 0f 	move s0, 0
    9c50:	01 00 00 88 	store_32 s0, (s1)
    9c54:	fe f3 00 a8 	load_32 ra, 60(sp)
    9c58:	de 03 01 05 	add_i sp, sp, 64
    9c5c:	1f 00 00 f0 	ret

0000000000009c60 read:
    9c60:	de 03 f7 05 	add_i sp, sp, -576
    9c64:	1e f3 08 88 	store_32 s24, 572(sp)
    9c68:	3e e3 08 88 	store_32 s25, 568(sp)
    9c6c:	5e d3 08 88 	store_32 s26, 564(sp)
    9c70:	7e c3 08 88 	store_32 s27, 560(sp)
    9c74:	fe b3 08 88 	store_32 ra, 556(sp)
    9c78:	60 80 00 18 	cmplt_u s3, s0, 32
    9c7c:	43 00 00 f4 	bnz s3, 8 <read+0x24>
    9c80:	6a 00 00 f6 	b 424 <read+0x1c8>
    9c84:	66 00 00 4f 	movehi s3, 6
    9c88:	00 10 00 0b 	shl s0, s0, 4
    9c8c:	63 60 6d 00 	or s3, s3, 7000
    9c90:	a3 00 50 c0 	add_i s5, s3, s0
    9c94:	05 00 00 a8 	load_32 s0, (s5)
    9c98:	40 00 00 f4 	bnz s0, 8 <read+0x40>
    9c9c:	63 00 00 f6 	b 396 <read+0x1c8>
    9ca0:	65 10 00 a8 	load_32 s3, 4(s5)
    9ca4:	85 30 00 a8 	load_32 s4, 12(s5)
    9ca8:	03 00 62 c0 	sub_i s0, s3, s4
    9cac:	60 04 00 14 	cmplt_i s3, s0, 1
    9cb0:	23 0d 00 f4 	bnz s3, 420 <read+0x1f4>
    9cb4:	60 00 81 c1 	cmplt_u s3, s0, s2
    9cb8:	43 00 00 f4 	bnz s3, 8 <read+0x60>
    9cbc:	00 00 f1 c0 	move s0, s2
    9cc0:	45 30 00 05 	add_i s2, s5, 12
    9cc4:	c0 0a 00 f2 	bz s0, 344 <read+0x1bc>
    9cc8:	5e 30 00 88 	store_32 s2, 12(sp)
    9ccc:	04 ff 07 01 	and s24, s4, 511
    9cd0:	3e 80 00 88 	store_32 s1, 32(sp)
    9cd4:	20 03 00 0f 	move s25, 0
    9cd8:	25 20 00 a8 	load_32 s1, 8(s5)
    9cdc:	21 00 52 c0 	add_i s1, s1, s4
    9ce0:	41 7c 00 09 	ashr s2, s1, 31
    9ce4:	42 5c 00 0a 	shr s2, s2, 23
    9ce8:	21 00 51 c0 	add_i s1, s1, s2
    9cec:	40 00 08 0f 	move s2, 512
    9cf0:	41 27 00 09 	ashr s26, s1, 9
    9cf4:	26 00 00 4f 	movehi s1, 6
    9cf8:	21 40 6d 00 	or s1, s1, 6992
    9cfc:	3e 90 00 88 	store_32 s1, 36(sp)
    9d00:	20 00 04 4f 	movehi s1, 8192
    9d04:	3e 40 00 88 	store_32 s1, 16(sp)
    9d08:	3e b0 00 05 	add_i s1, sp, 44
    9d0c:	3e 70 00 88 	store_32 s1, 28(sp)
    9d10:	3e 53 00 88 	store_32 s25, 20(sp)
    9d14:	1e 60 00 88 	store_32 s0, 24(sp)
    9d18:	5e a0 00 88 	store_32 s2, 40(sp)
    9d1c:	60 83 6c c0 	sub_i s27, s0, s25
    9d20:	f8 01 00 f4 	bnz s24, 60 <read+0xfc>
    9d24:	1b 00 08 18 	cmplt_u s0, s27, 512
    9d28:	a0 01 00 f4 	bnz s0, 52 <read+0xfc>
    9d2c:	1e 90 00 a8 	load_32 s0, 36(sp)
    9d30:	00 00 00 a0 	load_u8 s0, (s0)
    9d34:	3e 80 00 a8 	load_32 s1, 32(sp)
    9d38:	00 04 00 11 	cmpne_i s0, s0, 1
    9d3c:	61 80 5c c0 	add_i s3, s1, s25
    9d40:	00 05 00 f4 	bnz s0, 160 <read+0x180>
    9d44:	3e 40 00 a8 	load_32 s1, 16(sp)
    9d48:	1a 24 00 0b 	shl s0, s26, 9
    9d4c:	20 80 50 c0 	add_i s1, s0, s1
    9d50:	00 80 f1 c0 	move s0, s3
    9d54:	7f fa ff f9 	call -5636 <memcpy>
    9d58:	28 00 00 f6 	b 160 <read+0x198>
    9d5c:	1e 90 00 a8 	load_32 s0, 36(sp)
    9d60:	00 00 00 a0 	load_u8 s0, (s0)
    9d64:	00 04 00 11 	cmpne_i s0, s0, 1
    9d68:	60 01 00 f4 	bnz s0, 44 <read+0x134>
    9d6c:	3e 40 00 a8 	load_32 s1, 16(sp)
    9d70:	1a 24 00 0b 	shl s0, s26, 9
    9d74:	20 80 50 c0 	add_i s1, s0, s1
    9d78:	1e 70 00 a8 	load_32 s0, 28(sp)
    9d7c:	75 fa ff f9 	call -5676 <memcpy>
    9d80:	1e a0 00 a8 	load_32 s0, 40(sp)
    9d84:	00 00 6c c0 	sub_i s0, s0, s24
    9d88:	20 80 6d c1 	cmpgt_u s1, s0, s27
    9d8c:	a1 01 00 f4 	bnz s1, 52 <read+0x160>
    9d90:	0b 00 00 f6 	b 44 <read+0x15c>
    9d94:	00 00 fd c0 	move s0, s26
    9d98:	3e 70 00 a8 	load_32 s1, 28(sp)
    9d9c:	15 02 00 f8 	call 2132 <read_sdmmc_device>
    9da0:	00 00 00 12 	cmpgt_i s0, s0, 0
    9da4:	40 00 00 f4 	bnz s0, 8 <read+0x14c>
    9da8:	2d 00 00 f6 	b 180 <read+0x1fc>
    9dac:	1e a0 00 a8 	load_32 s0, 40(sp)
    9db0:	00 00 6c c0 	sub_i s0, s0, s24
    9db4:	20 80 6d c1 	cmpgt_u s1, s0, s27
    9db8:	41 00 00 f4 	bnz s1, 8 <read+0x160>
    9dbc:	60 03 f0 c0 	move s27, s0
    9dc0:	1e 80 00 a8 	load_32 s0, 32(sp)
    9dc4:	3e 70 00 a8 	load_32 s1, 28(sp)
    9dc8:	40 80 fd c0 	move s2, s27
    9dcc:	00 80 5c c0 	add_i s0, s0, s25
    9dd0:	21 00 5c c0 	add_i s1, s1, s24
    9dd4:	5f fa ff f9 	call -5764 <memcpy>
    9dd8:	3b 83 5c c0 	add_i s25, s27, s25
    9ddc:	08 00 00 f6 	b 32 <read+0x19c>
    9de0:	00 00 fd c0 	move s0, s26
    9de4:	20 80 f1 c0 	move s1, s3
    9de8:	02 02 00 f8 	call 2056 <read_sdmmc_device>
    9dec:	00 00 00 12 	cmpgt_i s0, s0, 0
    9df0:	40 00 00 f4 	bnz s0, 8 <read+0x198>
    9df4:	1a 00 00 f6 	b 104 <read+0x1fc>
    9df8:	39 03 08 05 	add_i s25, s25, 512
    9dfc:	1e 60 00 a8 	load_32 s0, 24(sp)
    9e00:	5a 07 00 05 	add_i s26, s26, 1
    9e04:	1e 53 00 a8 	load_32 s24, 20(sp)
    9e08:	5e a0 00 a8 	load_32 s2, 40(sp)
    9e0c:	20 80 6c c1 	cmpgt_u s1, s0, s25
    9e10:	61 f8 ff f5 	bnz s1, -244 <read+0xbc>
    9e14:	5e 30 00 a8 	load_32 s2, 12(sp)
    9e18:	82 00 00 a8 	load_32 s4, (s2)
    9e1c:	24 00 50 c0 	add_i s1, s4, s0
    9e20:	22 00 00 88 	store_32 s1, (s2)
    9e24:	05 00 00 f6 	b 20 <read+0x1d8>
    9e28:	b7 00 00 f8 	call 732 <__errno_ptr>
    9e2c:	20 24 00 0f 	move s1, 9
    9e30:	20 00 00 88 	store_32 s1, (s0)
    9e34:	00 fc ff 0f 	move s0, -1
    9e38:	fe b3 08 a8 	load_32 ra, 556(sp)
    9e3c:	7e c3 08 a8 	load_32 s27, 560(sp)
    9e40:	5e d3 08 a8 	load_32 s26, 564(sp)
    9e44:	3e e3 08 a8 	load_32 s25, 568(sp)
    9e48:	1e f3 08 a8 	load_32 s24, 572(sp)
    9e4c:	de 03 09 05 	add_i sp, sp, 576
    9e50:	1f 00 00 f0 	ret
    9e54:	00 00 00 0f 	move s0, 0
    9e58:	f8 ff ff f7 	b -32 <read+0x1d8>
    9e5c:	aa 00 00 f8 	call 680 <__errno_ptr>
    9e60:	20 14 00 0f 	move s1, 5
    9e64:	f3 ff ff f7 	b -52 <read+0x1d0>

0000000000009e68 write:
    9e68:	de 03 ff 05 	add_i sp, sp, -64
    9e6c:	fe f3 00 88 	store_32 ra, 60(sp)
    9e70:	a5 00 00 f8 	call 660 <__errno_ptr>
    9e74:	20 fc ff 0f 	move s1, -1
    9e78:	40 04 00 0f 	move s2, 1
    9e7c:	40 00 00 88 	store_32 s2, (s0)
    9e80:	00 80 f0 c0 	move s0, s1
    9e84:	fe f3 00 a8 	load_32 ra, 60(sp)
    9e88:	de 03 01 05 	add_i sp, sp, 64
    9e8c:	1f 00 00 f0 	ret

0000000000009e90 lseek:
    9e90:	de 03 ff 05 	add_i sp, sp, -64
    9e94:	fe f3 00 88 	store_32 ra, 60(sp)
    9e98:	60 00 f0 c0 	move s3, s0
    9e9c:	00 80 f0 c0 	move s0, s1
    9ea0:	83 80 00 18 	cmplt_u s4, s3, 32
    9ea4:	44 00 00 f4 	bnz s4, 8 <lseek+0x1c>
    9ea8:	11 00 00 f6 	b 68 <lseek+0x5c>
    9eac:	26 00 00 4f 	movehi s1, 6
    9eb0:	63 10 00 0b 	shl s3, s3, 4
    9eb4:	21 60 6d 00 	or s1, s1, 7000
    9eb8:	21 80 51 c0 	add_i s1, s1, s3
    9ebc:	61 00 00 a8 	load_32 s3, (s1)
    9ec0:	43 00 00 f4 	bnz s3, 8 <lseek+0x38>
    9ec4:	0a 00 00 f6 	b 40 <lseek+0x5c>
    9ec8:	62 08 00 10 	cmpeq_i s3, s2, 2
    9ecc:	e3 01 00 f4 	bnz s3, 60 <lseek+0x78>
    9ed0:	62 04 00 10 	cmpeq_i s3, s2, 1
    9ed4:	63 02 00 f4 	bnz s3, 76 <lseek+0x90>
    9ed8:	42 00 00 f4 	bnz s2, 8 <lseek+0x50>
    9edc:	0d 00 00 f6 	b 52 <lseek+0x80>
    9ee0:	89 00 00 f8 	call 548 <__errno_ptr>
    9ee4:	20 58 00 0f 	move s1, 22
    9ee8:	03 00 00 f6 	b 12 <lseek+0x64>
    9eec:	86 00 00 f8 	call 536 <__errno_ptr>
    9ef0:	20 24 00 0f 	move s1, 9
    9ef4:	20 00 00 88 	store_32 s1, (s0)
    9ef8:	00 fc ff 0f 	move s0, -1
    9efc:	fe f3 00 a8 	load_32 ra, 60(sp)
    9f00:	de 03 01 05 	add_i sp, sp, 64
    9f04:	1f 00 00 f0 	ret
    9f08:	41 10 00 a8 	load_32 s2, 4(s1)
    9f0c:	02 00 60 c0 	sub_i s0, s2, s0
    9f10:	40 fc ff 12 	cmpgt_i s2, s0, -1
    9f14:	01 30 00 88 	store_32 s0, 12(s1)
    9f18:	22 ff ff f5 	bnz s2, -28 <lseek+0x6c>
    9f1c:	06 00 00 f6 	b 24 <lseek+0xa4>
    9f20:	41 30 00 a8 	load_32 s2, 12(s1)
    9f24:	02 00 50 c0 	add_i s0, s2, s0
    9f28:	40 fc ff 12 	cmpgt_i s2, s0, -1
    9f2c:	01 30 00 88 	store_32 s0, 12(s1)
    9f30:	62 fe ff f5 	bnz s2, -52 <lseek+0x6c>
    9f34:	00 00 00 0f 	move s0, 0
    9f38:	01 30 00 88 	store_32 s0, 12(s1)
    9f3c:	fe f3 00 a8 	load_32 ra, 60(sp)
    9f40:	de 03 01 05 	add_i sp, sp, 64
    9f44:	1f 00 00 f0 	ret

0000000000009f48 stat:
    9f48:	de 03 ff 05 	add_i sp, sp, -64
    9f4c:	1e f3 00 88 	store_32 s24, 60(sp)
    9f50:	3e e3 00 88 	store_32 s25, 56(sp)
    9f54:	5e d3 00 88 	store_32 s26, 52(sp)
    9f58:	7e c3 00 88 	store_32 s27, 48(sp)
    9f5c:	fe b3 00 88 	store_32 ra, 44(sp)
    9f60:	46 00 00 4f 	movehi s2, 6
    9f64:	42 60 75 00 	or s2, s2, 7512
    9f68:	42 03 00 a8 	load_32 s26, (s2)
    9f6c:	7a 13 00 a8 	load_32 s27, 4(s26)
    9f70:	3e 90 00 88 	store_32 s1, 36(sp)
    9f74:	1e a0 00 88 	store_32 s0, 40(sp)
    9f78:	9b 01 00 f2 	bz s27, 48 <stat+0x60>
    9f7c:	00 03 00 0f 	move s24, 0
    9f80:	18 a0 00 07 	mull_i s0, s24, 40
    9f84:	3e a0 00 a8 	load_32 s1, 40(sp)
    9f88:	3a 03 50 c0 	add_i s25, s26, s0
    9f8c:	19 40 00 05 	add_i s0, s25, 16
    9f90:	5e fc ff f9 	call -3720 <strcmp>
    9f94:	40 01 00 f2 	bz s0, 40 <stat+0x74>
    9f98:	18 07 00 05 	add_i s24, s24, 1
    9f9c:	18 80 7d c1 	cmpge_u s0, s24, s27
    9fa0:	40 00 00 f4 	bnz s0, 8 <stat+0x60>
    9fa4:	f7 ff ff f7 	b -36 <stat+0x38>
    9fa8:	57 00 00 f8 	call 348 <__errno_ptr>
    9fac:	20 08 00 0f 	move s1, 2
    9fb0:	20 00 00 88 	store_32 s1, (s0)
    9fb4:	00 fc ff 0f 	move s0, -1
    9fb8:	05 00 00 f6 	b 20 <stat+0x84>
    9fbc:	19 30 00 a8 	load_32 s0, 12(s25)
    9fc0:	3e 90 00 a8 	load_32 s1, 36(sp)
    9fc4:	01 00 00 88 	store_32 s0, (s1)
    9fc8:	00 00 00 0f 	move s0, 0
    9fcc:	fe b3 00 a8 	load_32 ra, 44(sp)
    9fd0:	7e c3 00 a8 	load_32 s27, 48(sp)
    9fd4:	5e d3 00 a8 	load_32 s26, 52(sp)
    9fd8:	3e e3 00 a8 	load_32 s25, 56(sp)
    9fdc:	1e f3 00 a8 	load_32 s24, 60(sp)
    9fe0:	de 03 01 05 	add_i sp, sp, 64
    9fe4:	1f 00 00 f0 	ret

0000000000009fe8 fstat:
    9fe8:	de 03 ff 05 	add_i sp, sp, -64
    9fec:	fe f3 00 88 	store_32 ra, 60(sp)
    9ff0:	40 80 00 18 	cmplt_u s2, s0, 32
    9ff4:	42 00 00 f4 	bnz s2, 8 <fstat+0x14>
    9ff8:	0e 00 00 f6 	b 56 <fstat+0x48>
    9ffc:	46 00 00 4f 	movehi s2, 6
    a000:	00 10 00 0b 	shl s0, s0, 4
    a004:	42 60 6d 00 	or s2, s2, 7000
    a008:	02 00 50 c0 	add_i s0, s2, s0
    a00c:	40 00 00 a8 	load_32 s2, (s0)
    a010:	42 00 00 f4 	bnz s2, 8 <fstat+0x30>
    a014:	07 00 00 f6 	b 28 <fstat+0x48>
    a018:	00 10 00 a8 	load_32 s0, 4(s0)
    a01c:	01 00 00 88 	store_32 s0, (s1)
    a020:	00 00 00 0f 	move s0, 0
    a024:	fe f3 00 a8 	load_32 ra, 60(sp)
    a028:	de 03 01 05 	add_i sp, sp, 64
    a02c:	1f 00 00 f0 	ret
    a030:	35 00 00 f8 	call 212 <__errno_ptr>
    a034:	20 24 00 0f 	move s1, 9
    a038:	20 00 00 88 	store_32 s1, (s0)
    a03c:	00 fc ff 0f 	move s0, -1
    a040:	fe f3 00 a8 	load_32 ra, 60(sp)
    a044:	de 03 01 05 	add_i sp, sp, 64
    a048:	1f 00 00 f0 	ret

000000000000a04c access:
    a04c:	de 03 ff 05 	add_i sp, sp, -64
    a050:	1e f3 00 88 	store_32 s24, 60(sp)
    a054:	3e e3 00 88 	store_32 s25, 56(sp)
    a058:	5e d3 00 88 	store_32 s26, 52(sp)
    a05c:	7e c3 00 88 	store_32 s27, 48(sp)
    a060:	fe b3 00 88 	store_32 ra, 44(sp)
    a064:	46 00 00 4f 	movehi s2, 6
    a068:	40 0b 00 0f 	move s26, 2
    a06c:	42 60 75 00 	or s2, s2, 7512
    a070:	62 03 00 a8 	load_32 s27, (s2)
    a074:	1b 13 00 a8 	load_32 s24, 4(s27)
    a078:	20 03 f0 c0 	move s25, s0
    a07c:	18 03 00 f2 	bz s24, 96 <access+0x90>
    a080:	3e 90 00 88 	store_32 s1, 36(sp)
    a084:	5e a3 00 88 	store_32 s26, 40(sp)
    a088:	40 03 00 0f 	move s26, 0
    a08c:	1a a0 00 07 	mull_i s0, s26, 40
    a090:	1b 00 50 c0 	add_i s0, s27, s0
    a094:	20 80 fc c0 	move s1, s25
    a098:	00 40 00 05 	add_i s0, s0, 16
    a09c:	1b fc ff f9 	call -3988 <strcmp>
    a0a0:	40 00 00 f4 	bnz s0, 8 <access+0x5c>
    a0a4:	07 00 00 f6 	b 28 <access+0x74>
    a0a8:	5a 07 00 05 	add_i s26, s26, 1
    a0ac:	1a 00 7c c1 	cmpge_u s0, s26, s24
    a0b0:	40 00 00 f4 	bnz s0, 8 <access+0x6c>
    a0b4:	f6 ff ff f7 	b -40 <access+0x40>
    a0b8:	5e a3 00 a8 	load_32 s26, 40(sp)
    a0bc:	08 00 00 f6 	b 32 <access+0x90>
    a0c0:	1e 90 00 a8 	load_32 s0, 36(sp)
    a0c4:	00 08 00 01 	and s0, s0, 2
    a0c8:	40 00 00 f2 	bz s0, 8 <access+0x84>
    a0cc:	03 00 00 f6 	b 12 <access+0x8c>
    a0d0:	00 00 00 0f 	move s0, 0
    a0d4:	05 00 00 f6 	b 20 <access+0x9c>
    a0d8:	40 07 00 0f 	move s26, 1
    a0dc:	0a 00 00 f8 	call 40 <__errno_ptr>
    a0e0:	40 03 00 88 	store_32 s26, (s0)
    a0e4:	00 fc ff 0f 	move s0, -1
    a0e8:	fe b3 00 a8 	load_32 ra, 44(sp)
    a0ec:	7e c3 00 a8 	load_32 s27, 48(sp)
    a0f0:	5e d3 00 a8 	load_32 s26, 52(sp)
    a0f4:	3e e3 00 a8 	load_32 s25, 56(sp)
    a0f8:	1e f3 00 a8 	load_32 s24, 60(sp)
    a0fc:	de 03 01 05 	add_i sp, sp, 64
    a100:	1f 00 00 f0 	ret

000000000000a104 __errno_ptr:
    a104:	de 03 ff 05 	add_i sp, sp, -64
    a108:	fe f3 00 88 	store_32 ra, 60(sp)
    a10c:	13 00 00 f8 	call 76 <get_current_thread_id>
    a110:	26 00 00 4f 	movehi s1, 6
    a114:	fe f3 00 a8 	load_32 ra, 60(sp)
    a118:	00 08 00 0b 	shl s0, s0, 2
    a11c:	21 50 40 00 	or s1, s1, 4116
    a120:	01 00 50 c0 	add_i s0, s1, s0
    a124:	de 03 01 05 	add_i sp, sp, 64
    a128:	1f 00 00 f0 	ret

000000000000a12c usleep:
    a12c:	26 00 00 ac 	getcr s1, 6
    a130:	00 c8 00 07 	mull_i s0, s0, 50
    a134:	01 00 50 c0 	add_i s0, s1, s0
    a138:	26 00 00 ac 	getcr s1, 6
    a13c:	21 00 40 c1 	cmplt_i s1, s1, s0
    a140:	c1 ff ff f5 	bnz s1, -8 <usleep+0xc>
    a144:	00 00 00 0f 	move s0, 0
    a148:	1f 00 00 f0 	ret

000000000000a14c exit:
    a14c:	00 fc ff 0f 	move s0, -1
    a150:	14 00 00 8c 	setcr s0, 20
    a154:	00 00 00 f6 	b 0 <exit+0x8>

000000000000a158 get_current_thread_id:
    a158:	00 00 00 ac 	getcr s0, 0
    a15c:	1f 00 00 f0 	ret

000000000000a160 get_cycle_count:
    a160:	06 00 00 ac 	getcr s0, 6
    a164:	1f 00 00 f0 	ret

000000000000a168 init_sdmmc_device:
    a168:	de 03 fe 05 	add_i sp, sp, -128
    a16c:	1e f3 01 88 	store_32 s24, 124(sp)
    a170:	3e e3 01 88 	store_32 s25, 120(sp)
    a174:	5e d3 01 88 	store_32 s26, 116(sp)
    a178:	7e c3 01 88 	store_32 s27, 112(sp)
    a17c:	fe b3 01 88 	store_32 ra, 108(sp)
    a180:	18 fc ff 4f 	movehi s0, 524280
    a184:	20 f0 01 0f 	move s1, 124
    a188:	40 ff 03 0f 	move s26, 255
    a18c:	40 40 03 00 	or s2, s0, 208
    a190:	5e a0 01 88 	store_32 s2, 104(sp)
    a194:	20 03 03 00 	or s25, s0, 192
    a198:	00 23 03 00 	or s24, s0, 200
    a19c:	22 00 00 88 	store_32 s1, (s2)
    a1a0:	20 30 03 00 	or s1, s0, 204
    a1a4:	40 04 00 0f 	move s2, 1
    a1a8:	41 00 00 88 	store_32 s2, (s1)
    a1ac:	59 03 00 88 	store_32 s26, (s25)
    a1b0:	58 00 00 a8 	load_32 s2, (s24)
    a1b4:	42 04 00 01 	and s2, s2, 1
    a1b8:	c2 ff ff f3 	bz s2, -8 <init_sdmmc_device+0x48>
    a1bc:	60 13 03 00 	or s27, s0, 196
    a1c0:	1b 00 00 a8 	load_32 s0, (s27)
    a1c4:	59 03 00 88 	store_32 s26, (s25)
    a1c8:	18 00 00 a8 	load_32 s0, (s24)
    a1cc:	00 04 00 01 	and s0, s0, 1
    a1d0:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x60>
    a1d4:	1b 00 00 a8 	load_32 s0, (s27)
    a1d8:	59 03 00 88 	store_32 s26, (s25)
    a1dc:	18 00 00 a8 	load_32 s0, (s24)
    a1e0:	00 04 00 01 	and s0, s0, 1
    a1e4:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x74>
    a1e8:	1b 00 00 a8 	load_32 s0, (s27)
    a1ec:	59 03 00 88 	store_32 s26, (s25)
    a1f0:	18 00 00 a8 	load_32 s0, (s24)
    a1f4:	00 04 00 01 	and s0, s0, 1
    a1f8:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x88>
    a1fc:	1b 00 00 a8 	load_32 s0, (s27)
    a200:	59 03 00 88 	store_32 s26, (s25)
    a204:	18 00 00 a8 	load_32 s0, (s24)
    a208:	00 04 00 01 	and s0, s0, 1
    a20c:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x9c>
    a210:	1b 00 00 a8 	load_32 s0, (s27)
    a214:	59 03 00 88 	store_32 s26, (s25)
    a218:	18 00 00 a8 	load_32 s0, (s24)
    a21c:	00 04 00 01 	and s0, s0, 1
    a220:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xb0>
    a224:	1b 00 00 a8 	load_32 s0, (s27)
    a228:	59 03 00 88 	store_32 s26, (s25)
    a22c:	18 00 00 a8 	load_32 s0, (s24)
    a230:	00 04 00 01 	and s0, s0, 1
    a234:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xc4>
    a238:	1b 00 00 a8 	load_32 s0, (s27)
    a23c:	59 03 00 88 	store_32 s26, (s25)
    a240:	18 00 00 a8 	load_32 s0, (s24)
    a244:	00 04 00 01 	and s0, s0, 1
    a248:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xd8>
    a24c:	1b 00 00 a8 	load_32 s0, (s27)
    a250:	59 03 00 88 	store_32 s26, (s25)
    a254:	18 00 00 a8 	load_32 s0, (s24)
    a258:	00 04 00 01 	and s0, s0, 1
    a25c:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xec>
    a260:	1b 00 00 a8 	load_32 s0, (s27)
    a264:	59 03 00 88 	store_32 s26, (s25)
    a268:	18 00 00 a8 	load_32 s0, (s24)
    a26c:	00 04 00 01 	and s0, s0, 1
    a270:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x100>
    a274:	1b 00 00 a8 	load_32 s0, (s27)
    a278:	00 00 00 0f 	move s0, 0
    a27c:	01 00 00 88 	store_32 s0, (s1)
    a280:	20 00 f0 c0 	move s1, s0
    a284:	8d 00 00 f8 	call 564 <send_sd_command>
    a288:	20 04 00 10 	cmpeq_i s1, s0, 1
    a28c:	01 01 00 f4 	bnz s1, 32 <init_sdmmc_device+0x144>
    a290:	20 fc 03 10 	cmpeq_i s1, s0, 255
    a294:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x134>
    a298:	62 00 00 f6 	b 392 <init_sdmmc_device+0x2b8>
    a29c:	00 00 00 4f 	movehi s0, 0
    a2a0:	00 68 12 00 	or s0, s0, 1178
    a2a4:	99 e5 ff f9 	call -27036 <puts>
    a2a8:	6b 00 00 f6 	b 428 <init_sdmmc_device+0x2ec>
    a2ac:	00 20 00 0f 	move s0, 8
    a2b0:	20 68 05 0f 	move s1, 346
    a2b4:	81 00 00 f8 	call 516 <send_sd_command>
    a2b8:	20 04 00 10 	cmpeq_i s1, s0, 1
    a2bc:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x15c>
    a2c0:	5c 00 00 f6 	b 368 <init_sdmmc_device+0x2c8>
    a2c4:	59 03 00 88 	store_32 s26, (s25)
    a2c8:	18 00 00 a8 	load_32 s0, (s24)
    a2cc:	00 04 00 01 	and s0, s0, 1
    a2d0:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x160>
    a2d4:	1b 00 00 a8 	load_32 s0, (s27)
    a2d8:	59 03 00 88 	store_32 s26, (s25)
    a2dc:	18 00 00 a8 	load_32 s0, (s24)
    a2e0:	00 04 00 01 	and s0, s0, 1
    a2e4:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x174>
    a2e8:	1b 00 00 a8 	load_32 s0, (s27)
    a2ec:	59 03 00 88 	store_32 s26, (s25)
    a2f0:	18 00 00 a8 	load_32 s0, (s24)
    a2f4:	00 04 00 01 	and s0, s0, 1
    a2f8:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x188>
    a2fc:	1b 00 00 a8 	load_32 s0, (s27)
    a300:	20 3c 00 01 	and s1, s0, 15
    a304:	21 04 00 10 	cmpeq_i s1, s1, 1
    a308:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x1a8>
    a30c:	4d 00 00 f6 	b 308 <init_sdmmc_device+0x2d8>
    a310:	59 03 00 88 	store_32 s26, (s25)
    a314:	18 00 00 a8 	load_32 s0, (s24)
    a318:	00 04 00 01 	and s0, s0, 1
    a31c:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x1ac>
    a320:	1b 00 00 a8 	load_32 s0, (s27)
    a324:	00 68 01 11 	cmpne_i s0, s0, 90
    a328:	60 0a 00 f4 	bnz s0, 332 <init_sdmmc_device+0x30c>
    a32c:	20 00 00 0f 	move s1, 0
    a330:	3e 80 01 88 	store_32 s1, 96(sp)
    a334:	00 dc 00 0f 	move s0, 55
    a338:	60 00 00 f8 	call 384 <send_sd_command>
    a33c:	20 04 00 11 	cmpne_i s1, s0, 1
    a340:	81 06 00 f4 	bnz s1, 208 <init_sdmmc_device+0x2a8>
    a344:	00 a4 00 0f 	move s0, 41
    a348:	1e 70 01 88 	store_32 s0, 92(sp)
    a34c:	00 fc 40 4f 	movehi s0, 133088
    a350:	1e 60 01 88 	store_32 s0, 88(sp)
    a354:	00 dc 00 0f 	move s0, 55
    a358:	1e 50 01 88 	store_32 s0, 84(sp)
    a35c:	1e 80 01 a8 	load_32 s0, 96(sp)
    a360:	1e 90 01 88 	store_32 s0, 100(sp)
    a364:	1e 70 01 a8 	load_32 s0, 92(sp)
    a368:	3e 60 01 a8 	load_32 s1, 88(sp)
    a36c:	53 00 00 f8 	call 332 <send_sd_command>
    a370:	59 03 00 88 	store_32 s26, (s25)
    a374:	38 00 00 a8 	load_32 s1, (s24)
    a378:	21 04 00 01 	and s1, s1, 1
    a37c:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x20c>
    a380:	3b 00 00 a8 	load_32 s1, (s27)
    a384:	59 03 00 88 	store_32 s26, (s25)
    a388:	7e 80 01 a8 	load_32 s3, 96(sp)
    a38c:	38 00 00 a8 	load_32 s1, (s24)
    a390:	21 04 00 01 	and s1, s1, 1
    a394:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x224>
    a398:	3b 00 00 a8 	load_32 s1, (s27)
    a39c:	59 03 00 88 	store_32 s26, (s25)
    a3a0:	38 00 00 a8 	load_32 s1, (s24)
    a3a4:	21 04 00 01 	and s1, s1, 1
    a3a8:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x238>
    a3ac:	3b 00 00 a8 	load_32 s1, (s27)
    a3b0:	59 03 00 88 	store_32 s26, (s25)
    a3b4:	38 00 00 a8 	load_32 s1, (s24)
    a3b8:	21 04 00 01 	and s1, s1, 1
    a3bc:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x24c>
    a3c0:	3b 00 00 a8 	load_32 s1, (s27)
    a3c4:	59 03 00 88 	store_32 s26, (s25)
    a3c8:	38 00 00 a8 	load_32 s1, (s24)
    a3cc:	21 04 00 01 	and s1, s1, 1
    a3d0:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x260>
    a3d4:	20 04 00 10 	cmpeq_i s1, s0, 1
    a3d8:	5b 00 00 a8 	load_32 s2, (s27)
    a3dc:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x27c>
    a3e0:	28 00 00 f6 	b 160 <init_sdmmc_device+0x318>
    a3e4:	3e 90 01 a8 	load_32 s1, 100(sp)
    a3e8:	01 90 01 11 	cmpne_i s0, s1, 100
    a3ec:	40 00 00 f4 	bnz s0, 8 <init_sdmmc_device+0x28c>
    a3f0:	2b 00 00 f6 	b 172 <init_sdmmc_device+0x334>
    a3f4:	21 04 00 05 	add_i s1, s1, 1
    a3f8:	3e 90 01 88 	store_32 s1, 100(sp)
    a3fc:	1e 50 01 a8 	load_32 s0, 84(sp)
    a400:	20 80 f1 c0 	move s1, s3
    a404:	2d 00 00 f8 	call 180 <send_sd_command>
    a408:	20 04 00 10 	cmpeq_i s1, s0, 1
    a40c:	c1 fa ff f5 	bnz s1, -168 <init_sdmmc_device+0x1fc>
    a410:	20 00 00 4f 	movehi s1, 0
    a414:	1e 10 00 88 	store_32 s0, 4(sp)
    a418:	01 a0 13 00 	or s0, s1, 1256
    a41c:	0c 00 00 f6 	b 48 <init_sdmmc_device+0x2e4>
    a420:	20 00 00 4f 	movehi s1, 0
    a424:	1e 10 00 88 	store_32 s0, 4(sp)
    a428:	01 b4 0d 00 	or s0, s1, 877
    a42c:	08 00 00 f6 	b 32 <init_sdmmc_device+0x2e4>
    a430:	20 00 00 4f 	movehi s1, 0
    a434:	1e 10 00 88 	store_32 s0, 4(sp)
    a438:	01 8c 0c 00 	or s0, s1, 803
    a43c:	04 00 00 f6 	b 16 <init_sdmmc_device+0x2e4>
    a440:	20 00 00 4f 	movehi s1, 0
    a444:	1e 10 00 88 	store_32 s0, 4(sp)
    a448:	01 84 0b 00 	or s0, s1, 737
    a44c:	1e 00 00 88 	store_32 s0, (sp)
    a450:	50 e4 ff f9 	call -28352 <printf>
    a454:	00 fc ff 0f 	move s0, -1
    a458:	fe b3 01 a8 	load_32 ra, 108(sp)
    a45c:	7e c3 01 a8 	load_32 s27, 112(sp)
    a460:	5e d3 01 a8 	load_32 s26, 116(sp)
    a464:	3e e3 01 a8 	load_32 s25, 120(sp)
    a468:	1e f3 01 a8 	load_32 s24, 124(sp)
    a46c:	de 03 02 05 	add_i sp, sp, 128
    a470:	1f 00 00 f0 	ret
    a474:	00 00 00 4f 	movehi s0, 0
    a478:	00 30 0d 00 	or s0, s0, 844
    a47c:	8a ff ff f7 	b -472 <init_sdmmc_device+0x13c>
    a480:	40 00 00 f2 	bz s0, 8 <init_sdmmc_device+0x320>
    a484:	09 00 00 f6 	b 36 <init_sdmmc_device+0x340>
    a488:	3e a0 01 a8 	load_32 s1, 104(sp)
    a48c:	00 10 00 0f 	move s0, 4
    a490:	01 00 00 88 	store_32 s0, (s1)
    a494:	00 00 00 0f 	move s0, 0
    a498:	f0 ff ff f7 	b -64 <init_sdmmc_device+0x2f0>
    a49c:	00 00 00 4f 	movehi s0, 0
    a4a0:	00 20 0c 00 	or s0, s0, 776
    a4a4:	80 ff ff f7 	b -512 <init_sdmmc_device+0x13c>
    a4a8:	20 00 00 4f 	movehi s1, 0
    a4ac:	1e 10 00 88 	store_32 s0, 4(sp)
    a4b0:	01 60 0a 00 	or s0, s1, 664
    a4b4:	e6 ff ff f7 	b -104 <init_sdmmc_device+0x2e4>

000000000000a4b8 send_sd_command:
    a4b8:	40 00 00 4f 	movehi s2, 0
    a4bc:	00 00 01 00 	or s0, s0, 64
    a4c0:	e1 60 00 0a 	shr s7, s1, 24
    a4c4:	42 b0 18 00 	or s2, s2, 1580
    a4c8:	00 fd 03 01 	and s8, s0, 255
    a4cc:	61 40 00 0a 	shr s3, s1, 16
    a4d0:	02 00 54 c0 	add_i s0, s2, s8
    a4d4:	81 fc 03 01 	and s4, s1, 255
    a4d8:	c3 fc 03 01 	and s6, s3, 255
    a4dc:	00 00 00 a0 	load_u8 s0, (s0)
    a4e0:	61 20 00 0a 	shr s3, s1, 8
    a4e4:	a3 fc 03 01 	and s5, s3, 255
    a4e8:	00 04 00 0b 	shl s0, s0, 1
    a4ec:	78 fc ff 4f 	movehi s3, 524280
    a4f0:	00 80 33 c0 	xor s0, s0, s7
    a4f4:	02 00 50 c0 	add_i s0, s2, s0
    a4f8:	23 00 03 00 	or s1, s3, 192
    a4fc:	00 00 00 a0 	load_u8 s0, (s0)
    a500:	00 04 00 0b 	shl s0, s0, 1
    a504:	00 00 33 c0 	xor s0, s0, s6
    a508:	02 00 50 c0 	add_i s0, s2, s0
    a50c:	00 00 00 a0 	load_u8 s0, (s0)
    a510:	00 04 00 0b 	shl s0, s0, 1
    a514:	00 80 32 c0 	xor s0, s0, s5
    a518:	02 00 50 c0 	add_i s0, s2, s0
    a51c:	00 00 00 a0 	load_u8 s0, (s0)
    a520:	00 04 00 0b 	shl s0, s0, 1
    a524:	00 00 32 c0 	xor s0, s0, s4
    a528:	02 00 50 c0 	add_i s0, s2, s0
    a52c:	43 20 03 00 	or s2, s3, 200
    a530:	00 00 00 a0 	load_u8 s0, (s0)
    a534:	01 01 00 88 	store_32 s8, (s1)
    a538:	00 04 00 0b 	shl s0, s0, 1
    a53c:	02 01 00 a8 	load_32 s8, (s2)
    a540:	08 05 00 01 	and s8, s8, 1
    a544:	c8 ff ff f3 	bz s8, -8 <send_sd_command+0x84>
    a548:	63 10 03 00 	or s3, s3, 196
    a54c:	03 01 00 a8 	load_32 s8, (s3)
    a550:	e1 00 00 88 	store_32 s7, (s1)
    a554:	e2 00 00 a8 	load_32 s7, (s2)
    a558:	e7 04 00 01 	and s7, s7, 1
    a55c:	c7 ff ff f3 	bz s7, -8 <send_sd_command+0x9c>
    a560:	e3 00 00 a8 	load_32 s7, (s3)
    a564:	c1 00 00 88 	store_32 s6, (s1)
    a568:	c2 00 00 a8 	load_32 s6, (s2)
    a56c:	c6 04 00 01 	and s6, s6, 1
    a570:	c6 ff ff f3 	bz s6, -8 <send_sd_command+0xb0>
    a574:	c3 00 00 a8 	load_32 s6, (s3)
    a578:	a1 00 00 88 	store_32 s5, (s1)
    a57c:	a2 00 00 a8 	load_32 s5, (s2)
    a580:	a5 04 00 01 	and s5, s5, 1
    a584:	c5 ff ff f3 	bz s5, -8 <send_sd_command+0xc4>
    a588:	a3 00 00 a8 	load_32 s5, (s3)
    a58c:	81 00 00 88 	store_32 s4, (s1)
    a590:	82 00 00 a8 	load_32 s4, (s2)
    a594:	84 04 00 01 	and s4, s4, 1
    a598:	c4 ff ff f3 	bz s4, -8 <send_sd_command+0xd8>
    a59c:	00 f8 03 01 	and s0, s0, 254
    a5a0:	83 00 00 a8 	load_32 s4, (s3)
    a5a4:	00 04 00 00 	or s0, s0, 1
    a5a8:	01 00 00 88 	store_32 s0, (s1)
    a5ac:	02 00 00 a8 	load_32 s0, (s2)
    a5b0:	00 04 00 01 	and s0, s0, 1
    a5b4:	c0 ff ff f3 	bz s0, -8 <send_sd_command+0xf4>
    a5b8:	80 00 00 0f 	move s4, 0
    a5bc:	03 00 00 a8 	load_32 s0, (s3)
    a5c0:	a0 fc 03 0f 	move s5, 255
    a5c4:	a1 00 00 88 	store_32 s5, (s1)
    a5c8:	02 00 00 a8 	load_32 s0, (s2)
    a5cc:	00 04 00 01 	and s0, s0, 1
    a5d0:	c0 ff ff f3 	bz s0, -8 <send_sd_command+0x110>
    a5d4:	03 00 00 a8 	load_32 s0, (s3)
    a5d8:	c0 fc 03 11 	cmpne_i s6, s0, 255
    a5dc:	86 00 00 f4 	bnz s6, 16 <send_sd_command+0x134>
    a5e0:	c4 90 01 18 	cmplt_u s6, s4, 100
    a5e4:	84 04 00 05 	add_i s4, s4, 1
    a5e8:	e6 fe ff f5 	bnz s6, -36 <send_sd_command+0x10c>
    a5ec:	1f 00 00 f0 	ret

000000000000a5f0 read_sdmmc_device:
    a5f0:	de 03 fe 05 	add_i sp, sp, -128
    a5f4:	1e f3 01 88 	store_32 s24, 124(sp)
    a5f8:	fe e3 01 88 	store_32 ra, 120(sp)
    a5fc:	00 83 f0 c0 	move s24, s1
    a600:	20 00 f0 c0 	move s1, s0
    a604:	00 44 00 0f 	move s0, 17
    a608:	ac ff ff f9 	call -336 <send_sd_command>
    a60c:	40 00 00 f4 	bnz s0, 8 <read_sdmmc_device+0x24>
    a610:	07 00 00 f6 	b 28 <read_sdmmc_device+0x3c>
    a614:	20 00 00 4f 	movehi s1, 0
    a618:	1e 10 00 88 	store_32 s0, 4(sp)
    a61c:	01 54 09 00 	or s0, s1, 597
    a620:	1e 00 00 88 	store_32 s0, (sp)
    a624:	db e3 ff f9 	call -28820 <printf>
    a628:	15 00 00 f6 	b 84 <read_sdmmc_device+0x8c>
    a62c:	b8 fc ff 4f 	movehi s5, 524280
    a630:	01 00 00 4f 	movehi s0, 1
    a634:	60 fc 03 0f 	move s3, 255
    a638:	45 00 03 00 	or s2, s5, 192
    a63c:	80 40 1c 00 	or s4, s0, 1808
    a640:	25 20 03 00 	or s1, s5, 200
    a644:	05 10 03 00 	or s0, s5, 196
    a648:	62 00 00 88 	store_32 s3, (s2)
    a64c:	a1 00 00 a8 	load_32 s5, (s1)
    a650:	a5 04 00 01 	and s5, s5, 1
    a654:	c5 ff ff f3 	bz s5, -8 <read_sdmmc_device+0x5c>
    a658:	a0 00 00 a8 	load_32 s5, (s0)
    a65c:	a5 f8 03 11 	cmpne_i s5, s5, 254
    a660:	45 00 00 f4 	bnz s5, 8 <read_sdmmc_device+0x78>
    a664:	0b 00 00 f6 	b 44 <read_sdmmc_device+0xa0>
    a668:	84 fc ff 05 	add_i s4, s4, -1
    a66c:	e4 fe ff f5 	bnz s4, -36 <read_sdmmc_device+0x58>
    a670:	00 00 00 4f 	movehi s0, 0
    a674:	00 ec 0f 00 	or s0, s0, 1019
    a678:	a4 e4 ff f9 	call -28016 <puts>
    a67c:	00 fc ff 0f 	move s0, -1
    a680:	fe e3 01 a8 	load_32 ra, 120(sp)
    a684:	1e f3 01 a8 	load_32 s24, 124(sp)
    a688:	de 03 02 05 	add_i sp, sp, 128
    a68c:	1f 00 00 f0 	ret
    a690:	80 00 00 0f 	move s4, 0
    a694:	04 00 00 f6 	b 16 <read_sdmmc_device+0xb4>
    a698:	d8 00 52 c0 	add_i s6, s24, s4
    a69c:	84 04 00 05 	add_i s4, s4, 1
    a6a0:	a6 00 00 82 	store_8 s5, (s6)
    a6a4:	62 00 00 88 	store_32 s3, (s2)
    a6a8:	a1 00 00 a8 	load_32 s5, (s1)
    a6ac:	a5 04 00 01 	and s5, s5, 1
    a6b0:	c5 ff ff f3 	bz s5, -8 <read_sdmmc_device+0xb8>
    a6b4:	a0 00 00 a8 	load_32 s5, (s0)
    a6b8:	c4 00 08 18 	cmplt_u s6, s4, 512
    a6bc:	e6 fe ff f5 	bnz s6, -36 <read_sdmmc_device+0xa8>
    a6c0:	62 00 00 88 	store_32 s3, (s2)
    a6c4:	41 00 00 a8 	load_32 s2, (s1)
    a6c8:	42 04 00 01 	and s2, s2, 1
    a6cc:	c2 ff ff f3 	bz s2, -8 <read_sdmmc_device+0xd4>
    a6d0:	00 00 00 a8 	load_32 s0, (s0)
    a6d4:	00 00 08 0f 	move s0, 512
    a6d8:	fe e3 01 a8 	load_32 ra, 120(sp)
    a6dc:	1e f3 01 a8 	load_32 s24, 124(sp)
    a6e0:	de 03 02 05 	add_i sp, sp, 128
    a6e4:	1f 00 00 f0 	ret

000000000000a6e8 write_sdmmc_device:
    a6e8:	de 03 fe 05 	add_i sp, sp, -128
    a6ec:	1e f3 01 88 	store_32 s24, 124(sp)
    a6f0:	fe e3 01 88 	store_32 ra, 120(sp)
    a6f4:	00 83 f0 c0 	move s24, s1
    a6f8:	20 00 f0 c0 	move s1, s0
    a6fc:	00 60 00 0f 	move s0, 24
    a700:	6e ff ff f9 	call -584 <send_sd_command>
    a704:	a0 00 00 f2 	bz s0, 20 <write_sdmmc_device+0x30>
    a708:	20 00 00 4f 	movehi s1, 0
    a70c:	1e 10 00 88 	store_32 s0, 4(sp)
    a710:	01 c4 0e 00 	or s0, s1, 945
    a714:	32 00 00 f6 	b 200 <write_sdmmc_device+0xf4>
    a718:	58 fc ff 4f 	movehi s2, 524280
    a71c:	00 f8 03 0f 	move s0, 254
    a720:	22 00 03 00 	or s1, s2, 192
    a724:	01 00 00 88 	store_32 s0, (s1)
    a728:	02 20 03 00 	or s0, s2, 200
    a72c:	60 00 00 a8 	load_32 s3, (s0)
    a730:	63 04 00 01 	and s3, s3, 1
    a734:	c3 ff ff f3 	bz s3, -8 <write_sdmmc_device+0x44>
    a738:	42 10 03 00 	or s2, s2, 196
    a73c:	62 00 00 a8 	load_32 s3, (s2)
    a740:	60 00 00 0f 	move s3, 0
    a744:	98 80 51 c0 	add_i s4, s24, s3
    a748:	84 00 00 a0 	load_u8 s4, (s4)
    a74c:	81 00 00 88 	store_32 s4, (s1)
    a750:	80 00 00 a8 	load_32 s4, (s0)
    a754:	84 04 00 01 	and s4, s4, 1
    a758:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0x68>
    a75c:	63 04 00 05 	add_i s3, s3, 1
    a760:	a2 00 00 a8 	load_32 s5, (s2)
    a764:	83 00 08 18 	cmplt_u s4, s3, 512
    a768:	e4 fe ff f5 	bnz s4, -36 <write_sdmmc_device+0x5c>
    a76c:	60 fc 03 0f 	move s3, 255
    a770:	61 00 00 88 	store_32 s3, (s1)
    a774:	80 00 00 a8 	load_32 s4, (s0)
    a778:	84 04 00 01 	and s4, s4, 1
    a77c:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0x8c>
    a780:	82 00 00 a8 	load_32 s4, (s2)
    a784:	61 00 00 88 	store_32 s3, (s1)
    a788:	80 00 00 a8 	load_32 s4, (s0)
    a78c:	84 04 00 01 	and s4, s4, 1
    a790:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0xa0>
    a794:	82 00 00 a8 	load_32 s4, (s2)
    a798:	61 00 00 88 	store_32 s3, (s1)
    a79c:	20 00 00 a8 	load_32 s1, (s0)
    a7a0:	21 04 00 01 	and s1, s1, 1
    a7a4:	c1 ff ff f3 	bz s1, -8 <write_sdmmc_device+0xb4>
    a7a8:	02 00 00 a8 	load_32 s0, (s2)
    a7ac:	20 7c 00 01 	and s1, s0, 31
    a7b0:	21 14 00 10 	cmpeq_i s1, s1, 5
    a7b4:	41 00 00 f4 	bnz s1, 8 <write_sdmmc_device+0xd4>
    a7b8:	06 00 00 f6 	b 24 <write_sdmmc_device+0xe8>
    a7bc:	00 00 08 0f 	move s0, 512
    a7c0:	fe e3 01 a8 	load_32 ra, 120(sp)
    a7c4:	1e f3 01 a8 	load_32 s24, 124(sp)
    a7c8:	de 03 02 05 	add_i sp, sp, 128
    a7cc:	1f 00 00 f0 	ret
    a7d0:	20 00 00 4f 	movehi s1, 0
    a7d4:	1e 10 00 88 	store_32 s0, 4(sp)
    a7d8:	01 28 11 00 	or s0, s1, 1098
    a7dc:	1e 00 00 88 	store_32 s0, (sp)
    a7e0:	6c e3 ff f9 	call -29264 <printf>
    a7e4:	00 fc ff 0f 	move s0, -1
    a7e8:	fe e3 01 a8 	load_32 ra, 120(sp)
    a7ec:	1e f3 01 a8 	load_32 s24, 124(sp)
    a7f0:	de 03 02 05 	add_i sp, sp, 128
    a7f4:	1f 00 00 f0 	ret

000000000000a7f8 init_vga:
    a7f8:	de 03 ff 05 	add_i sp, sp, -64
    a7fc:	fe f3 00 88 	store_32 ra, 60(sp)
    a800:	20 04 00 10 	cmpeq_i s1, s0, 1
    a804:	e1 00 00 f4 	bnz s1, 28 <init_vga+0x28>
    a808:	e0 01 00 f4 	bnz s0, 60 <init_vga+0x4c>
    a80c:	00 28 00 0f 	move s0, 10
    a810:	20 84 00 0f 	move s1, 33
    a814:	40 00 00 0f 	move s2, 0
    a818:	60 80 07 0f 	move s3, 480
    a81c:	05 00 00 f6 	b 20 <init_vga+0x38>
    a820:	00 30 00 0f 	move s0, 12
    a824:	20 8c 00 0f 	move s1, 35
    a828:	40 04 00 0f 	move s2, 1
    a82c:	60 40 06 0f 	move s3, 400
    a830:	09 00 00 f8 	call 36 <compile_microcode>
    a834:	00 20 00 4f 	movehi s0, 256
    a838:	fe f3 00 a8 	load_32 ra, 60(sp)
    a83c:	de 03 01 05 	add_i sp, sp, 64
    a840:	1f 00 00 f0 	ret
    a844:	00 00 00 0f 	move s0, 0
    a848:	fe f3 00 a8 	load_32 ra, 60(sp)
    a84c:	de 03 01 05 	add_i sp, sp, 64
    a850:	1f 00 00 f0 	ret

000000000000a854 compile_microcode:
    a854:	42 00 00 10 	cmpeq_i s2, s2, 0
    a858:	62 00 00 f4 	bnz s2, 12 <compile_microcode+0x10>
    a85c:	40 10 00 0f 	move s2, 4
    a860:	02 00 00 f6 	b 8 <compile_microcode+0x14>
    a864:	40 30 00 0f 	move s2, 12
    a868:	86 00 00 4f 	movehi s4, 6
    a86c:	c6 00 00 4f 	movehi s6, 6
    a870:	e0 00 00 0f 	move s7, 0
    a874:	a4 70 75 00 	or s5, s4, 7516
    a878:	98 fc ff 4f 	movehi s4, 524280
    a87c:	c6 80 75 00 	or s6, s6, 7520
    a880:	45 00 00 88 	store_32 s2, (s5)
    a884:	00 10 00 0b 	shl s0, s0, 4
    a888:	44 00 06 00 	or s2, s4, 384
    a88c:	e6 00 00 88 	store_32 s7, (s6)
    a890:	50 01 00 4f 	movehi s10, 16
    a894:	21 10 00 0b 	shl s1, s1, 4
    a898:	e2 00 00 88 	store_32 s7, (s2)
    a89c:	e5 00 00 a8 	load_32 s7, (s5)
    a8a0:	e0 80 03 c0 	or s7, s0, s7
    a8a4:	04 10 06 00 	or s0, s4, 388
    a8a8:	e7 00 05 c0 	or s7, s7, s10
    a8ac:	e0 00 00 88 	store_32 s7, (s0)
    a8b0:	e6 00 00 a8 	load_32 s7, (s6)
    a8b4:	07 05 00 05 	add_i s8, s7, 1
    a8b8:	06 01 00 88 	store_32 s8, (s6)
    a8bc:	e5 00 00 a8 	load_32 s7, (s5)
    a8c0:	08 11 00 0b 	shl s8, s8, 4
    a8c4:	e7 c0 03 00 	or s7, s7, 240
    a8c8:	e0 00 00 88 	store_32 s7, (s0)
    a8cc:	e6 00 00 a8 	load_32 s7, (s6)
    a8d0:	e7 04 00 05 	add_i s7, s7, 1
    a8d4:	e6 00 00 88 	store_32 s7, (s6)
    a8d8:	25 01 00 a8 	load_32 s9, (s5)
    a8dc:	e7 10 00 0b 	shl s7, s7, 4
    a8e0:	27 81 04 c0 	or s9, s7, s9
    a8e4:	e0 04 00 4f 	movehi s7, 32
    a8e8:	29 81 03 c0 	or s9, s9, s7
    a8ec:	20 01 00 88 	store_32 s9, (s0)
    a8f0:	26 01 00 a8 	load_32 s9, (s6)
    a8f4:	29 05 00 05 	add_i s9, s9, 1
    a8f8:	26 01 00 88 	store_32 s9, (s6)
    a8fc:	25 01 00 a8 	load_32 s9, (s5)
    a900:	29 11 00 03 	xor s9, s9, 4
    a904:	25 01 00 88 	store_32 s9, (s5)
    a908:	29 c1 17 00 	or s9, s9, 1520
    a90c:	20 01 00 88 	store_32 s9, (s0)
    a910:	26 01 00 a8 	load_32 s9, (s6)
    a914:	29 05 00 05 	add_i s9, s9, 1
    a918:	26 01 00 88 	store_32 s9, (s6)
    a91c:	65 01 00 a8 	load_32 s11, (s5)
    a920:	29 11 00 0b 	shl s9, s9, 4
    a924:	29 81 05 c0 	or s9, s9, s11
    a928:	29 81 03 c0 	or s9, s9, s7
    a92c:	20 01 00 88 	store_32 s9, (s0)
    a930:	26 01 00 a8 	load_32 s9, (s6)
    a934:	29 05 00 05 	add_i s9, s9, 1
    a938:	26 01 00 88 	store_32 s9, (s6)
    a93c:	25 01 00 a8 	load_32 s9, (s5)
    a940:	29 11 00 03 	xor s9, s9, 4
    a944:	25 01 00 88 	store_32 s9, (s5)
    a948:	29 c1 0b 00 	or s9, s9, 752
    a94c:	20 01 00 88 	store_32 s9, (s0)
    a950:	26 01 00 a8 	load_32 s9, (s6)
    a954:	29 05 00 05 	add_i s9, s9, 1
    a958:	26 01 00 88 	store_32 s9, (s6)
    a95c:	65 01 00 a8 	load_32 s11, (s5)
    a960:	29 11 00 0b 	shl s9, s9, 4
    a964:	29 81 05 c0 	or s9, s9, s11
    a968:	29 81 03 c0 	or s9, s9, s7
    a96c:	20 01 00 88 	store_32 s9, (s0)
    a970:	26 01 00 a8 	load_32 s9, (s6)
    a974:	29 05 00 05 	add_i s9, s9, 1
    a978:	26 01 00 88 	store_32 s9, (s6)
    a97c:	21 01 00 4f 	movehi s9, 1
    a980:	65 01 00 a8 	load_32 s11, (s5)
    a984:	29 c1 1f 00 	or s9, s9, 2032
    a988:	6b 81 04 c0 	or s11, s11, s9
    a98c:	60 01 00 88 	store_32 s11, (s0)
    a990:	66 01 00 a8 	load_32 s11, (s6)
    a994:	6b 05 00 05 	add_i s11, s11, 1
    a998:	66 01 00 88 	store_32 s11, (s6)
    a99c:	85 01 00 a8 	load_32 s12, (s5)
    a9a0:	6b 11 00 0b 	shl s11, s11, 4
    a9a4:	6b 01 06 c0 	or s11, s11, s12
    a9a8:	8a 81 00 00 	or s12, s10, 32
    a9ac:	6b 81 03 c0 	or s11, s11, s7
    a9b0:	60 01 00 88 	store_32 s11, (s0)
    a9b4:	66 01 00 a8 	load_32 s11, (s6)
    a9b8:	6b 05 00 05 	add_i s11, s11, 1
    a9bc:	66 01 00 88 	store_32 s11, (s6)
    a9c0:	65 01 00 a8 	load_32 s11, (s5)
    a9c4:	68 81 05 c0 	or s11, s8, s11
    a9c8:	10 05 00 4f 	movehi s8, 48
    a9cc:	6b 01 04 c0 	or s11, s11, s8
    a9d0:	60 01 00 88 	store_32 s11, (s0)
    a9d4:	66 01 00 a8 	load_32 s11, (s6)
    a9d8:	6b 05 00 05 	add_i s11, s11, 1
    a9dc:	66 01 00 88 	store_32 s11, (s6)
    a9e0:	65 01 00 a8 	load_32 s11, (s5)
    a9e4:	6b 21 00 03 	xor s11, s11, 8
    a9e8:	65 01 00 88 	store_32 s11, (s5)
    a9ec:	6b 01 06 c0 	or s11, s11, s12
    a9f0:	60 01 00 88 	store_32 s11, (s0)
    a9f4:	66 01 00 a8 	load_32 s11, (s6)
    a9f8:	6b 05 00 05 	add_i s11, s11, 1
    a9fc:	66 01 00 88 	store_32 s11, (s6)
    aa00:	85 01 00 a8 	load_32 s12, (s5)
    aa04:	6b 11 00 0b 	shl s11, s11, 4
    aa08:	8c c1 03 00 	or s12, s12, 240
    aa0c:	80 01 00 88 	store_32 s12, (s0)
    aa10:	86 01 00 a8 	load_32 s12, (s6)
    aa14:	8c 05 00 05 	add_i s12, s12, 1
    aa18:	86 01 00 88 	store_32 s12, (s6)
    aa1c:	a5 01 00 a8 	load_32 s13, (s5)
    aa20:	8c 11 00 0b 	shl s12, s12, 4
    aa24:	8c 81 06 c0 	or s12, s12, s13
    aa28:	8c 81 03 c0 	or s12, s12, s7
    aa2c:	80 01 00 88 	store_32 s12, (s0)
    aa30:	86 01 00 a8 	load_32 s12, (s6)
    aa34:	8c 05 00 05 	add_i s12, s12, 1
    aa38:	86 01 00 88 	store_32 s12, (s6)
    aa3c:	85 01 00 a8 	load_32 s12, (s5)
    aa40:	8c 11 00 03 	xor s12, s12, 4
    aa44:	85 01 00 88 	store_32 s12, (s5)
    aa48:	8c c1 17 00 	or s12, s12, 1520
    aa4c:	80 01 00 88 	store_32 s12, (s0)
    aa50:	86 01 00 a8 	load_32 s12, (s6)
    aa54:	8c 05 00 05 	add_i s12, s12, 1
    aa58:	86 01 00 88 	store_32 s12, (s6)
    aa5c:	a5 01 00 a8 	load_32 s13, (s5)
    aa60:	8c 11 00 0b 	shl s12, s12, 4
    aa64:	8c 81 06 c0 	or s12, s12, s13
    aa68:	8c 81 03 c0 	or s12, s12, s7
    aa6c:	80 01 00 88 	store_32 s12, (s0)
    aa70:	86 01 00 a8 	load_32 s12, (s6)
    aa74:	8c 05 00 05 	add_i s12, s12, 1
    aa78:	86 01 00 88 	store_32 s12, (s6)
    aa7c:	85 01 00 a8 	load_32 s12, (s5)
    aa80:	8c 11 00 03 	xor s12, s12, 4
    aa84:	85 01 00 88 	store_32 s12, (s5)
    aa88:	8c c1 0b 00 	or s12, s12, 752
    aa8c:	80 01 00 88 	store_32 s12, (s0)
    aa90:	86 01 00 a8 	load_32 s12, (s6)
    aa94:	8c 05 00 05 	add_i s12, s12, 1
    aa98:	86 01 00 88 	store_32 s12, (s6)
    aa9c:	a5 01 00 a8 	load_32 s13, (s5)
    aaa0:	8c 11 00 0b 	shl s12, s12, 4
    aaa4:	8c 81 06 c0 	or s12, s12, s13
    aaa8:	8c 81 03 c0 	or s12, s12, s7
    aaac:	80 01 00 88 	store_32 s12, (s0)
    aab0:	86 01 00 a8 	load_32 s12, (s6)
    aab4:	8c 05 00 05 	add_i s12, s12, 1
    aab8:	86 01 00 88 	store_32 s12, (s6)
    aabc:	85 01 00 a8 	load_32 s12, (s5)
    aac0:	8c 81 04 c0 	or s12, s12, s9
    aac4:	80 01 00 88 	store_32 s12, (s0)
    aac8:	86 01 00 a8 	load_32 s12, (s6)
    aacc:	8c 05 00 05 	add_i s12, s12, 1
    aad0:	86 01 00 88 	store_32 s12, (s6)
    aad4:	a5 01 00 a8 	load_32 s13, (s5)
    aad8:	8c 11 00 0b 	shl s12, s12, 4
    aadc:	8c 81 06 c0 	or s12, s12, s13
    aae0:	8c 81 03 c0 	or s12, s12, s7
    aae4:	80 01 00 88 	store_32 s12, (s0)
    aae8:	86 01 00 a8 	load_32 s12, (s6)
    aaec:	8c 05 00 05 	add_i s12, s12, 1
    aaf0:	86 01 00 88 	store_32 s12, (s6)
    aaf4:	85 01 00 a8 	load_32 s12, (s5)
    aaf8:	6b 01 06 c0 	or s11, s11, s12
    aafc:	6b 01 04 c0 	or s11, s11, s8
    ab00:	60 01 00 88 	store_32 s11, (s0)
    ab04:	66 01 00 a8 	load_32 s11, (s6)
    ab08:	6b 05 00 05 	add_i s11, s11, 1
    ab0c:	66 01 00 88 	store_32 s11, (s6)
    ab10:	65 01 00 a8 	load_32 s11, (s5)
    ab14:	6b 21 00 03 	xor s11, s11, 8
    ab18:	65 01 00 88 	store_32 s11, (s5)
    ab1c:	21 80 05 c0 	or s1, s1, s11
    ab20:	21 00 05 c0 	or s1, s1, s10
    ab24:	20 00 00 88 	store_32 s1, (s0)
    ab28:	26 00 00 a8 	load_32 s1, (s6)
    ab2c:	21 04 00 05 	add_i s1, s1, 1
    ab30:	26 00 00 88 	store_32 s1, (s6)
    ab34:	65 01 00 a8 	load_32 s11, (s5)
    ab38:	21 10 00 0b 	shl s1, s1, 4
    ab3c:	6b c1 03 00 	or s11, s11, 240
    ab40:	60 01 00 88 	store_32 s11, (s0)
    ab44:	66 01 00 a8 	load_32 s11, (s6)
    ab48:	6b 05 00 05 	add_i s11, s11, 1
    ab4c:	66 01 00 88 	store_32 s11, (s6)
    ab50:	85 01 00 a8 	load_32 s12, (s5)
    ab54:	6b 11 00 0b 	shl s11, s11, 4
    ab58:	6b 01 06 c0 	or s11, s11, s12
    ab5c:	6b 81 03 c0 	or s11, s11, s7
    ab60:	60 01 00 88 	store_32 s11, (s0)
    ab64:	66 01 00 a8 	load_32 s11, (s6)
    ab68:	6b 05 00 05 	add_i s11, s11, 1
    ab6c:	66 01 00 88 	store_32 s11, (s6)
    ab70:	65 01 00 a8 	load_32 s11, (s5)
    ab74:	6b 11 00 03 	xor s11, s11, 4
    ab78:	65 01 00 88 	store_32 s11, (s5)
    ab7c:	6b c1 17 00 	or s11, s11, 1520
    ab80:	60 01 00 88 	store_32 s11, (s0)
    ab84:	66 01 00 a8 	load_32 s11, (s6)
    ab88:	6b 05 00 05 	add_i s11, s11, 1
    ab8c:	66 01 00 88 	store_32 s11, (s6)
    ab90:	85 01 00 a8 	load_32 s12, (s5)
    ab94:	6b 11 00 0b 	shl s11, s11, 4
    ab98:	6b 01 06 c0 	or s11, s11, s12
    ab9c:	6b 81 03 c0 	or s11, s11, s7
    aba0:	60 01 00 88 	store_32 s11, (s0)
    aba4:	66 01 00 a8 	load_32 s11, (s6)
    aba8:	6b 05 00 05 	add_i s11, s11, 1
    abac:	66 01 00 88 	store_32 s11, (s6)
    abb0:	65 01 00 a8 	load_32 s11, (s5)
    abb4:	6b 11 00 03 	xor s11, s11, 4
    abb8:	65 01 00 88 	store_32 s11, (s5)
    abbc:	6b c1 0b 00 	or s11, s11, 752
    abc0:	60 01 00 88 	store_32 s11, (s0)
    abc4:	66 01 00 a8 	load_32 s11, (s6)
    abc8:	6b 05 00 05 	add_i s11, s11, 1
    abcc:	66 01 00 88 	store_32 s11, (s6)
    abd0:	85 01 00 a8 	load_32 s12, (s5)
    abd4:	6b 11 00 0b 	shl s11, s11, 4
    abd8:	6b 01 06 c0 	or s11, s11, s12
    abdc:	6b 81 03 c0 	or s11, s11, s7
    abe0:	60 01 00 88 	store_32 s11, (s0)
    abe4:	66 01 00 a8 	load_32 s11, (s6)
    abe8:	6b 05 00 05 	add_i s11, s11, 1
    abec:	66 01 00 88 	store_32 s11, (s6)
    abf0:	65 01 00 a8 	load_32 s11, (s5)
    abf4:	6b 81 04 c0 	or s11, s11, s9
    abf8:	60 01 00 88 	store_32 s11, (s0)
    abfc:	66 01 00 a8 	load_32 s11, (s6)
    ac00:	6b 05 00 05 	add_i s11, s11, 1
    ac04:	66 01 00 88 	store_32 s11, (s6)
    ac08:	85 01 00 a8 	load_32 s12, (s5)
    ac0c:	6b 11 00 0b 	shl s11, s11, 4
    ac10:	6b 01 06 c0 	or s11, s11, s12
    ac14:	6b 81 03 c0 	or s11, s11, s7
    ac18:	60 01 00 88 	store_32 s11, (s0)
    ac1c:	66 01 00 a8 	load_32 s11, (s6)
    ac20:	6b 05 00 05 	add_i s11, s11, 1
    ac24:	66 01 00 88 	store_32 s11, (s6)
    ac28:	65 01 00 a8 	load_32 s11, (s5)
    ac2c:	21 80 05 c0 	or s1, s1, s11
    ac30:	63 11 00 0b 	shl s11, s3, 4
    ac34:	21 00 04 c0 	or s1, s1, s8
    ac38:	20 00 00 88 	store_32 s1, (s0)
    ac3c:	26 00 00 a8 	load_32 s1, (s6)
    ac40:	21 04 00 05 	add_i s1, s1, 1
    ac44:	26 00 00 88 	store_32 s1, (s6)
    ac48:	25 00 00 a8 	load_32 s1, (s5)
    ac4c:	2b 80 00 c0 	or s1, s11, s1
    ac50:	21 00 05 c0 	or s1, s1, s10
    ac54:	20 00 00 88 	store_32 s1, (s0)
    ac58:	26 00 00 a8 	load_32 s1, (s6)
    ac5c:	21 04 00 05 	add_i s1, s1, 1
    ac60:	26 00 00 88 	store_32 s1, (s6)
    ac64:	45 01 00 a8 	load_32 s10, (s5)
    ac68:	21 10 00 0b 	shl s1, s1, 4
    ac6c:	4a c1 03 00 	or s10, s10, 240
    ac70:	40 01 00 88 	store_32 s10, (s0)
    ac74:	46 01 00 a8 	load_32 s10, (s6)
    ac78:	4a 05 00 05 	add_i s10, s10, 1
    ac7c:	46 01 00 88 	store_32 s10, (s6)
    ac80:	65 01 00 a8 	load_32 s11, (s5)
    ac84:	4a 11 00 0b 	shl s10, s10, 4
    ac88:	4a 81 05 c0 	or s10, s10, s11
    ac8c:	4a 81 03 c0 	or s10, s10, s7
    ac90:	40 01 00 88 	store_32 s10, (s0)
    ac94:	46 01 00 a8 	load_32 s10, (s6)
    ac98:	4a 05 00 05 	add_i s10, s10, 1
    ac9c:	46 01 00 88 	store_32 s10, (s6)
    aca0:	45 01 00 a8 	load_32 s10, (s5)
    aca4:	4a 11 00 03 	xor s10, s10, 4
    aca8:	45 01 00 88 	store_32 s10, (s5)
    acac:	4a c1 17 00 	or s10, s10, 1520
    acb0:	40 01 00 88 	store_32 s10, (s0)
    acb4:	46 01 00 a8 	load_32 s10, (s6)
    acb8:	4a 05 00 05 	add_i s10, s10, 1
    acbc:	46 01 00 88 	store_32 s10, (s6)
    acc0:	65 01 00 a8 	load_32 s11, (s5)
    acc4:	4a 11 00 0b 	shl s10, s10, 4
    acc8:	4a 81 05 c0 	or s10, s10, s11
    accc:	4a 81 03 c0 	or s10, s10, s7
    acd0:	40 01 00 88 	store_32 s10, (s0)
    acd4:	46 01 00 a8 	load_32 s10, (s6)
    acd8:	4a 05 00 05 	add_i s10, s10, 1
    acdc:	46 01 00 88 	store_32 s10, (s6)
    ace0:	45 01 00 a8 	load_32 s10, (s5)
    ace4:	4a 11 00 03 	xor s10, s10, 4
    ace8:	45 01 00 88 	store_32 s10, (s5)
    acec:	4a c1 0b 00 	or s10, s10, 752
    acf0:	40 01 00 88 	store_32 s10, (s0)
    acf4:	46 01 00 a8 	load_32 s10, (s6)
    acf8:	4a 05 00 05 	add_i s10, s10, 1
    acfc:	46 01 00 88 	store_32 s10, (s6)
    ad00:	65 01 00 a8 	load_32 s11, (s5)
    ad04:	4a 11 00 0b 	shl s10, s10, 4
    ad08:	4a 81 05 c0 	or s10, s10, s11
    ad0c:	4a 81 03 c0 	or s10, s10, s7
    ad10:	40 01 00 88 	store_32 s10, (s0)
    ad14:	46 01 00 a8 	load_32 s10, (s6)
    ad18:	4a 05 00 05 	add_i s10, s10, 1
    ad1c:	46 01 00 88 	store_32 s10, (s6)
    ad20:	45 01 00 a8 	load_32 s10, (s5)
    ad24:	4a 05 00 03 	xor s10, s10, 1
    ad28:	45 01 00 88 	store_32 s10, (s5)
    ad2c:	2a 81 04 c0 	or s9, s10, s9
    ad30:	20 01 00 88 	store_32 s9, (s0)
    ad34:	26 01 00 a8 	load_32 s9, (s6)
    ad38:	29 05 00 05 	add_i s9, s9, 1
    ad3c:	26 01 00 88 	store_32 s9, (s6)
    ad40:	45 01 00 a8 	load_32 s10, (s5)
    ad44:	29 11 00 0b 	shl s9, s9, 4
    ad48:	29 01 05 c0 	or s9, s9, s10
    ad4c:	e9 80 03 c0 	or s7, s9, s7
    ad50:	e0 00 00 88 	store_32 s7, (s0)
    ad54:	e6 00 00 a8 	load_32 s7, (s6)
    ad58:	e7 04 00 05 	add_i s7, s7, 1
    ad5c:	e6 00 00 88 	store_32 s7, (s6)
    ad60:	e5 00 00 a8 	load_32 s7, (s5)
    ad64:	e7 04 00 03 	xor s7, s7, 1
    ad68:	e5 00 00 88 	store_32 s7, (s5)
    ad6c:	21 80 03 c0 	or s1, s1, s7
    ad70:	21 00 04 c0 	or s1, s1, s8
    ad74:	20 00 00 88 	store_32 s1, (s0)
    ad78:	26 00 00 a8 	load_32 s1, (s6)
    ad7c:	21 04 00 05 	add_i s1, s1, 1
    ad80:	26 00 00 88 	store_32 s1, (s6)
    ad84:	25 00 00 a8 	load_32 s1, (s5)
    ad88:	21 08 00 00 	or s1, s1, 2
    ad8c:	20 00 00 88 	store_32 s1, (s0)
    ad90:	04 20 06 00 	or s0, s4, 392
    ad94:	84 30 06 00 	or s4, s4, 396
    ad98:	20 20 00 4f 	movehi s1, 256
    ad9c:	20 00 00 88 	store_32 s1, (s0)
    ada0:	03 00 0a 07 	mull_i s0, s3, 640
    ada4:	04 00 00 88 	store_32 s0, (s4)
    ada8:	00 04 00 0f 	move s0, 1
    adac:	02 00 00 88 	store_32 s0, (s2)
    adb0:	1f 00 00 f0 	ret

000000000000adb4 __udivdi3:
; {
    adb4:	de 03 ff 05 	add_i sp, sp, -64
    adb8:	fe f3 00 88 	store_32 ra, 60(sp)
    adbc:	80 80 f1 c0 	move s4, s3
    adc0:	a0 00 f1 c0 	move s5, s2
    adc4:	c0 80 f0 c0 	move s6, s1
    adc8:	e0 00 f0 c0 	move s7, s0
    adcc:	1e c1 00 05 	add_i s8, sp, 48
    add0:	08 11 00 00 	or s8, s8, 4
    add4:	28 00 00 88 	store_32 s1, (s8)
    add8:	1e c0 00 88 	store_32 s0, 48(sp)
    addc:	1e a0 00 05 	add_i s0, sp, 40
    ade0:	00 10 00 00 	or s0, s0, 4
    ade4:	60 00 00 88 	store_32 s3, (s0)
    ade8:	5e a0 00 88 	store_32 s2, 40(sp)
; return __udivmoddi4(a, b, 0);
    adec:	28 00 00 a8 	load_32 s1, (s8)
    adf0:	5e c0 00 a8 	load_32 s2, 48(sp)
    adf4:	60 00 00 a8 	load_32 s3, (s0)
    adf8:	1e a0 00 a8 	load_32 s0, 40(sp)
    adfc:	1c 01 00 a8 	load_32 s8, (gp)
    ae00:	20 01 00 0f 	move s9, 0
    ae04:	1e 90 00 88 	store_32 s0, 36(sp)
    ae08:	00 00 f1 c0 	move s0, s2
    ae0c:	5e 90 00 a8 	load_32 s2, 36(sp)
    ae10:	9e 80 00 88 	store_32 s4, 32(sp)
    ae14:	80 80 f4 c0 	move s4, s9
    ae18:	be 70 00 88 	store_32 s5, 28(sp)
    ae1c:	de 60 00 88 	store_32 s6, 24(sp)
    ae20:	fe 50 00 88 	store_32 s7, 20(sp)
    ae24:	08 01 00 fc 	call s8
    ae28:	fe f3 00 a8 	load_32 ra, 60(sp)
    ae2c:	de 03 01 05 	add_i sp, sp, 64
    ae30:	1f 00 00 f0 	ret

000000000000ae34 __udivmoddi4:
; {
    ae34:	de 03 fd 05 	add_i sp, sp, -192
    ae38:	fe f3 02 88 	store_32 ra, 188(sp)
    ae3c:	a0 80 f1 c0 	move s5, s3
    ae40:	c0 00 f1 c0 	move s6, s2
    ae44:	e0 80 f0 c0 	move s7, s1
    ae48:	00 01 f0 c0 	move s8, s0
    ae4c:	20 01 f2 c0 	move s9, s4
    ae50:	5e a1 02 05 	add_i s10, sp, 168
    ae54:	4a 11 00 00 	or s10, s10, 4
    ae58:	2a 00 00 88 	store_32 s1, (s10)
    ae5c:	1e a0 02 88 	store_32 s0, 168(sp)
    ae60:	1e 80 02 05 	add_i s0, sp, 160
    ae64:	00 10 00 00 	or s0, s0, 4
    ae68:	60 00 00 88 	store_32 s3, (s0)
    ae6c:	5e 80 02 88 	store_32 s2, 160(sp)
    ae70:	9e 70 02 88 	store_32 s4, 156(sp)
    ae74:	20 80 00 0f 	move s1, 32
; const unsigned n_uword_bits = sizeof(su_int) * CHAR_BIT;
    ae78:	3e 60 02 88 	store_32 s1, 152(sp)
    ae7c:	20 00 01 0f 	move s1, 64
; const unsigned n_udword_bits = sizeof(du_int) * CHAR_BIT;
    ae80:	3e 50 02 88 	store_32 s1, 148(sp)
; n.all = a;
    ae84:	2a 00 00 a8 	load_32 s1, (s10)
    ae88:	5e a0 02 a8 	load_32 s2, 168(sp)
    ae8c:	7e 20 02 05 	add_i s3, sp, 136
    ae90:	63 10 00 00 	or s3, s3, 4
    ae94:	23 00 00 88 	store_32 s1, (s3)
    ae98:	5e 20 02 88 	store_32 s2, 136(sp)
; d.all = b;
    ae9c:	00 00 00 a8 	load_32 s0, (s0)
    aea0:	3e 80 02 a8 	load_32 s1, 160(sp)
    aea4:	5e 00 02 05 	add_i s2, sp, 128
    aea8:	42 10 00 00 	or s2, s2, 4
    aeac:	02 00 00 88 	store_32 s0, (s2)
    aeb0:	3e 00 02 88 	store_32 s1, 128(sp)
; if (n.s.high == 0)
    aeb4:	03 00 00 a8 	load_32 s0, (s3)
    aeb8:	be 70 01 88 	store_32 s5, 92(sp)
    aebc:	de 60 01 88 	store_32 s6, 88(sp)
    aec0:	fe 50 01 88 	store_32 s7, 84(sp)
    aec4:	1e 41 01 88 	store_32 s8, 80(sp)
    aec8:	3e 31 01 88 	store_32 s9, 76(sp)
    aecc:	80 05 00 f4 	bnz s0, 176 <__udivmoddi4+0x148>
    aed0:	01 00 00 f6 	b 4 <__udivmoddi4+0xa0>
    aed4:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
    aed8:	00 10 00 00 	or s0, s0, 4
    aedc:	00 00 00 a8 	load_32 s0, (s0)
    aee0:	00 03 00 f4 	bnz s0, 96 <__udivmoddi4+0x10c>
    aee4:	01 00 00 f6 	b 4 <__udivmoddi4+0xb4>
; if (rem)
    aee8:	1e 70 02 a8 	load_32 s0, 156(sp)
    aeec:	60 01 00 f2 	bz s0, 44 <__udivmoddi4+0xe4>
    aef0:	01 00 00 f6 	b 4 <__udivmoddi4+0xc0>
; *rem = n.s.low % d.s.low;
    aef4:	1e 20 02 a8 	load_32 s0, 136(sp)
    aef8:	3e 00 02 a8 	load_32 s1, 128(sp)
    aefc:	5c 10 00 a8 	load_32 s2, 4(gp)
    af00:	42 00 00 fc 	call s2
    af04:	3e 70 02 a8 	load_32 s1, 156(sp)
    af08:	40 00 00 0f 	move s2, 0
    af0c:	41 10 00 88 	store_32 s2, 4(s1)
    af10:	01 00 00 88 	store_32 s0, (s1)
    af14:	01 00 00 f6 	b 4 <__udivmoddi4+0xe4>
; return n.s.low / d.s.low;
    af18:	1e 20 02 a8 	load_32 s0, 136(sp)
    af1c:	3e 00 02 a8 	load_32 s1, 128(sp)
    af20:	5c 20 00 a8 	load_32 s2, 8(gp)
    af24:	42 00 00 fc 	call s2
    af28:	3e c0 02 05 	add_i s1, sp, 176
    af2c:	21 10 00 00 	or s1, s1, 4
    af30:	40 00 00 0f 	move s2, 0
    af34:	41 00 00 88 	store_32 s2, (s1)
    af38:	1e c0 02 88 	store_32 s0, 176(sp)
    af3c:	49 02 00 f6 	b 2340 <__udivmoddi4+0xa2c>
; if (rem)
    af40:	1e 70 02 a8 	load_32 s0, 156(sp)
    af44:	00 01 00 f2 	bz s0, 32 <__udivmoddi4+0x130>
    af48:	01 00 00 f6 	b 4 <__udivmoddi4+0x118>
; *rem = n.s.low;
    af4c:	1e 20 02 a8 	load_32 s0, 136(sp)
    af50:	3e 70 02 a8 	load_32 s1, 156(sp)
    af54:	40 00 00 0f 	move s2, 0
    af58:	41 10 00 88 	store_32 s2, 4(s1)
    af5c:	01 00 00 88 	store_32 s0, (s1)
    af60:	01 00 00 f6 	b 4 <__udivmoddi4+0x130>
    af64:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
    af68:	00 10 00 00 	or s0, s0, 4
    af6c:	20 00 00 0f 	move s1, 0
    af70:	20 00 00 88 	store_32 s1, (s0)
    af74:	3e c0 02 88 	store_32 s1, 176(sp)
    af78:	3a 02 00 f6 	b 2280 <__udivmoddi4+0xa2c>
; if (d.s.low == 0)
    af7c:	1e 00 02 a8 	load_32 s0, 128(sp)
    af80:	00 16 00 f4 	bnz s0, 704 <__udivmoddi4+0x40c>
    af84:	01 00 00 f6 	b 4 <__udivmoddi4+0x154>
    af88:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
    af8c:	00 10 00 00 	or s0, s0, 4
    af90:	00 00 00 a8 	load_32 s0, (s0)
    af94:	80 03 00 f4 	bnz s0, 112 <__udivmoddi4+0x1d0>
    af98:	01 00 00 f6 	b 4 <__udivmoddi4+0x168>
; if (rem)
    af9c:	1e 70 02 a8 	load_32 s0, 156(sp)
    afa0:	a0 01 00 f2 	bz s0, 52 <__udivmoddi4+0x1a0>
    afa4:	01 00 00 f6 	b 4 <__udivmoddi4+0x174>
    afa8:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.s.high % d.s.low;
    afac:	00 10 00 00 	or s0, s0, 4
    afb0:	00 00 00 a8 	load_32 s0, (s0)
    afb4:	3e 00 02 a8 	load_32 s1, 128(sp)
    afb8:	5c 10 00 a8 	load_32 s2, 4(gp)
    afbc:	42 00 00 fc 	call s2
    afc0:	3e 70 02 a8 	load_32 s1, 156(sp)
    afc4:	40 00 00 0f 	move s2, 0
    afc8:	41 10 00 88 	store_32 s2, 4(s1)
    afcc:	01 00 00 88 	store_32 s0, (s1)
    afd0:	01 00 00 f6 	b 4 <__udivmoddi4+0x1a0>
    afd4:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high / d.s.low;
    afd8:	00 10 00 00 	or s0, s0, 4
    afdc:	00 00 00 a8 	load_32 s0, (s0)
    afe0:	3e 00 02 a8 	load_32 s1, 128(sp)
    afe4:	5c 20 00 a8 	load_32 s2, 8(gp)
    afe8:	42 00 00 fc 	call s2
    afec:	3e c0 02 05 	add_i s1, sp, 176
    aff0:	21 10 00 00 	or s1, s1, 4
    aff4:	40 00 00 0f 	move s2, 0
    aff8:	41 00 00 88 	store_32 s2, (s1)
    affc:	1e c0 02 88 	store_32 s0, 176(sp)
    b000:	18 02 00 f6 	b 2144 <__udivmoddi4+0xa2c>
; if (n.s.low == 0)
    b004:	1e 20 02 a8 	load_32 s0, 136(sp)
    b008:	c0 04 00 f4 	bnz s0, 152 <__udivmoddi4+0x26c>
    b00c:	01 00 00 f6 	b 4 <__udivmoddi4+0x1dc>
; if (rem)
    b010:	1e 70 02 a8 	load_32 s0, 156(sp)
    b014:	a0 02 00 f2 	bz s0, 84 <__udivmoddi4+0x234>
    b018:	01 00 00 f6 	b 4 <__udivmoddi4+0x1e8>
    b01c:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high % d.s.high;
    b020:	00 10 00 00 	or s0, s0, 4
    b024:	00 00 00 a8 	load_32 s0, (s0)
    b028:	3e 00 02 05 	add_i s1, sp, 128
    b02c:	21 10 00 00 	or s1, s1, 4
    b030:	21 00 00 a8 	load_32 s1, (s1)
    b034:	5c 10 00 a8 	load_32 s2, 4(gp)
    b038:	42 00 00 fc 	call s2
    b03c:	3e c0 01 05 	add_i s1, sp, 112
    b040:	21 10 00 00 	or s1, s1, 4
    b044:	01 00 00 88 	store_32 s0, (s1)
    b048:	00 00 00 0f 	move s0, 0
; r.s.low = 0;
    b04c:	1e c0 01 88 	store_32 s0, 112(sp)
; *rem = r.all;
    b050:	01 00 00 a8 	load_32 s0, (s1)
    b054:	3e c0 01 a8 	load_32 s1, 112(sp)
    b058:	5e 70 02 a8 	load_32 s2, 156(sp)
    b05c:	02 10 00 88 	store_32 s0, 4(s2)
    b060:	22 00 00 88 	store_32 s1, (s2)
; }
    b064:	01 00 00 f6 	b 4 <__udivmoddi4+0x234>
    b068:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high / d.s.high;
    b06c:	00 10 00 00 	or s0, s0, 4
    b070:	00 00 00 a8 	load_32 s0, (s0)
    b074:	3e 00 02 05 	add_i s1, sp, 128
    b078:	21 10 00 00 	or s1, s1, 4
    b07c:	21 00 00 a8 	load_32 s1, (s1)
    b080:	5c 20 00 a8 	load_32 s2, 8(gp)
    b084:	42 00 00 fc 	call s2
    b088:	3e c0 02 05 	add_i s1, sp, 176
    b08c:	21 10 00 00 	or s1, s1, 4
    b090:	40 00 00 0f 	move s2, 0
    b094:	41 00 00 88 	store_32 s2, (s1)
    b098:	1e c0 02 88 	store_32 s0, 176(sp)
    b09c:	f1 01 00 f6 	b 1988 <__udivmoddi4+0xa2c>
    b0a0:	1e 00 02 05 	add_i s0, sp, 128
; if ((d.s.high & (d.s.high - 1)) == 0)     /* if d is a power of 2 */
    b0a4:	00 10 00 00 	or s0, s0, 4
    b0a8:	00 00 00 a8 	load_32 s0, (s0)
    b0ac:	20 fc ff 05 	add_i s1, s0, -1
    b0b0:	00 80 10 c0 	and s0, s0, s1
    b0b4:	c0 04 00 f4 	bnz s0, 152 <__udivmoddi4+0x318>
    b0b8:	01 00 00 f6 	b 4 <__udivmoddi4+0x288>
; if (rem)
    b0bc:	1e 70 02 a8 	load_32 s0, 156(sp)
    b0c0:	a0 02 00 f2 	bz s0, 84 <__udivmoddi4+0x2e0>
    b0c4:	01 00 00 f6 	b 4 <__udivmoddi4+0x294>
; r.s.low = n.s.low;
    b0c8:	1e 20 02 a8 	load_32 s0, 136(sp)
    b0cc:	1e c0 01 88 	store_32 s0, 112(sp)
    b0d0:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high & (d.s.high - 1);
    b0d4:	00 10 00 00 	or s0, s0, 4
    b0d8:	00 00 00 a8 	load_32 s0, (s0)
    b0dc:	3e 00 02 05 	add_i s1, sp, 128
    b0e0:	21 10 00 00 	or s1, s1, 4
    b0e4:	21 00 00 a8 	load_32 s1, (s1)
    b0e8:	21 fc ff 05 	add_i s1, s1, -1
    b0ec:	00 80 10 c0 	and s0, s0, s1
    b0f0:	3e c0 01 05 	add_i s1, sp, 112
    b0f4:	21 10 00 00 	or s1, s1, 4
    b0f8:	01 00 00 88 	store_32 s0, (s1)
; *rem = r.all;
    b0fc:	01 00 00 a8 	load_32 s0, (s1)
    b100:	3e c0 01 a8 	load_32 s1, 112(sp)
    b104:	5e 70 02 a8 	load_32 s2, 156(sp)
    b108:	02 10 00 88 	store_32 s0, 4(s2)
    b10c:	22 00 00 88 	store_32 s1, (s2)
; }
    b110:	01 00 00 f6 	b 4 <__udivmoddi4+0x2e0>
    b114:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high >> __builtin_ctz(d.s.high);
    b118:	00 10 00 00 	or s0, s0, 4
    b11c:	00 00 00 a8 	load_32 s0, (s0)
    b120:	3e 00 02 05 	add_i s1, sp, 128
    b124:	21 10 00 00 	or s1, s1, 4
    b128:	21 00 00 a8 	load_32 s1, (s1)
    b12c:	20 80 e0 c0 	ctz s1, s1
    b130:	00 80 a0 c0 	shr s0, s0, s1
    b134:	3e c0 02 05 	add_i s1, sp, 176
    b138:	21 10 00 00 	or s1, s1, 4
    b13c:	40 00 00 0f 	move s2, 0
    b140:	41 00 00 88 	store_32 s2, (s1)
    b144:	1e c0 02 88 	store_32 s0, 176(sp)
    b148:	c6 01 00 f6 	b 1816 <__udivmoddi4+0xa2c>
    b14c:	1e 00 02 05 	add_i s0, sp, 128
; sr = __builtin_clz(d.s.high) - __builtin_clz(n.s.high);
    b150:	00 10 00 00 	or s0, s0, 4
    b154:	00 00 00 a8 	load_32 s0, (s0)
    b158:	00 00 c0 c0 	clz s0, s0
    b15c:	3e 20 02 05 	add_i s1, sp, 136
    b160:	21 10 00 00 	or s1, s1, 4
    b164:	21 00 00 a8 	load_32 s1, (s1)
    b168:	20 80 c0 c0 	clz s1, s1
    b16c:	00 80 60 c0 	sub_i s0, s0, s1
    b170:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr > n_uword_bits - 2)
    b174:	1e b0 01 a8 	load_32 s0, 108(sp)
    b178:	00 7c 00 18 	cmplt_u s0, s0, 31
    b17c:	60 02 00 f4 	bnz s0, 76 <__udivmoddi4+0x394>
    b180:	01 00 00 f6 	b 4 <__udivmoddi4+0x350>
; if (rem)
    b184:	1e 70 02 a8 	load_32 s0, 156(sp)
    b188:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0x37c>
    b18c:	01 00 00 f6 	b 4 <__udivmoddi4+0x35c>
    b190:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.all;
    b194:	00 10 00 00 	or s0, s0, 4
    b198:	00 00 00 a8 	load_32 s0, (s0)
    b19c:	3e 20 02 a8 	load_32 s1, 136(sp)
    b1a0:	5e 70 02 a8 	load_32 s2, 156(sp)
    b1a4:	02 10 00 88 	store_32 s0, 4(s2)
    b1a8:	22 00 00 88 	store_32 s1, (s2)
    b1ac:	01 00 00 f6 	b 4 <__udivmoddi4+0x37c>
    b1b0:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
    b1b4:	00 10 00 00 	or s0, s0, 4
    b1b8:	20 00 00 0f 	move s1, 0
    b1bc:	20 00 00 88 	store_32 s1, (s0)
    b1c0:	3e c0 02 88 	store_32 s1, 176(sp)
    b1c4:	a7 01 00 f6 	b 1692 <__udivmoddi4+0xa2c>
; ++sr;
    b1c8:	1e b0 01 a8 	load_32 s0, 108(sp)
    b1cc:	00 04 00 05 	add_i s0, s0, 1
    b1d0:	1e b0 01 88 	store_32 s0, 108(sp)
    b1d4:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
    b1d8:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low << (n_uword_bits - sr);
    b1dc:	1e 20 02 a8 	load_32 s0, 136(sp)
    b1e0:	3e b0 01 a8 	load_32 s1, 108(sp)
    b1e4:	40 80 00 0f 	move s2, 32
    b1e8:	22 80 60 c0 	sub_i s1, s2, s1
    b1ec:	00 80 b0 c0 	shl s0, s0, s1
    b1f0:	3e e0 01 05 	add_i s1, sp, 120
    b1f4:	21 10 00 00 	or s1, s1, 4
    b1f8:	01 00 00 88 	store_32 s0, (s1)
    b1fc:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
    b200:	00 10 00 00 	or s0, s0, 4
    b204:	20 00 00 a8 	load_32 s1, (s0)
    b208:	7e b0 01 a8 	load_32 s3, 108(sp)
    b20c:	21 80 a1 c0 	shr s1, s1, s3
    b210:	7e c0 01 05 	add_i s3, sp, 112
    b214:	63 10 00 00 	or s3, s3, 4
    b218:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
    b21c:	00 00 00 a8 	load_32 s0, (s0)
    b220:	3e b0 01 a8 	load_32 s1, 108(sp)
    b224:	42 80 60 c0 	sub_i s2, s2, s1
    b228:	00 00 b1 c0 	shl s0, s0, s2
    b22c:	5e 20 02 a8 	load_32 s2, 136(sp)
    b230:	22 80 a0 c0 	shr s1, s2, s1
    b234:	00 80 00 c0 	or s0, s0, s1
    b238:	1e c0 01 88 	store_32 s0, 112(sp)
; }
    b23c:	e8 00 00 f6 	b 928 <__udivmoddi4+0x7a8>
    b240:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
    b244:	00 10 00 00 	or s0, s0, 4
    b248:	00 00 00 a8 	load_32 s0, (s0)
    b24c:	80 12 00 f4 	bnz s0, 592 <__udivmoddi4+0x668>
    b250:	01 00 00 f6 	b 4 <__udivmoddi4+0x420>
; if ((d.s.low & (d.s.low - 1)) == 0)     /* if d is a power of 2 */
    b254:	1e 00 02 a8 	load_32 s0, 128(sp)
    b258:	20 fc ff 05 	add_i s1, s0, -1
    b25c:	00 80 10 c0 	and s0, s0, s1
    b260:	c0 06 00 f4 	bnz s0, 216 <__udivmoddi4+0x504>
    b264:	01 00 00 f6 	b 4 <__udivmoddi4+0x434>
; if (rem)
    b268:	1e 70 02 a8 	load_32 s0, 156(sp)
    b26c:	60 01 00 f2 	bz s0, 44 <__udivmoddi4+0x464>
    b270:	01 00 00 f6 	b 4 <__udivmoddi4+0x440>
; *rem = n.s.low & (d.s.low - 1);
    b274:	1e 20 02 a8 	load_32 s0, 136(sp)
    b278:	3e 00 02 a8 	load_32 s1, 128(sp)
    b27c:	21 fc ff 05 	add_i s1, s1, -1
    b280:	00 80 10 c0 	and s0, s0, s1
    b284:	3e 70 02 a8 	load_32 s1, 156(sp)
    b288:	40 00 00 0f 	move s2, 0
    b28c:	41 10 00 88 	store_32 s2, 4(s1)
    b290:	01 00 00 88 	store_32 s0, (s1)
    b294:	01 00 00 f6 	b 4 <__udivmoddi4+0x464>
; if (d.s.low == 1)
    b298:	1e 00 02 a8 	load_32 s0, 128(sp)
    b29c:	00 04 00 11 	cmpne_i s0, s0, 1
    b2a0:	60 01 00 f4 	bnz s0, 44 <__udivmoddi4+0x498>
    b2a4:	01 00 00 f6 	b 4 <__udivmoddi4+0x474>
    b2a8:	1e 20 02 05 	add_i s0, sp, 136
; return n.all;
    b2ac:	00 10 00 00 	or s0, s0, 4
    b2b0:	00 00 00 a8 	load_32 s0, (s0)
    b2b4:	3e 20 02 a8 	load_32 s1, 136(sp)
    b2b8:	5e c0 02 05 	add_i s2, sp, 176
    b2bc:	42 10 00 00 	or s2, s2, 4
    b2c0:	02 00 00 88 	store_32 s0, (s2)
    b2c4:	3e c0 02 88 	store_32 s1, 176(sp)
    b2c8:	66 01 00 f6 	b 1432 <__udivmoddi4+0xa2c>
; sr = __builtin_ctz(d.s.low);
    b2cc:	1e 00 02 a8 	load_32 s0, 128(sp)
    b2d0:	00 00 e0 c0 	ctz s0, s0
    b2d4:	1e b0 01 88 	store_32 s0, 108(sp)
    b2d8:	1e 20 02 05 	add_i s0, sp, 136
; q.s.high = n.s.high >> sr;
    b2dc:	00 10 00 00 	or s0, s0, 4
    b2e0:	20 00 00 a8 	load_32 s1, (s0)
    b2e4:	5e b0 01 a8 	load_32 s2, 108(sp)
    b2e8:	21 00 a1 c0 	shr s1, s1, s2
    b2ec:	5e e0 01 05 	add_i s2, sp, 120
    b2f0:	42 10 00 00 	or s2, s2, 4
    b2f4:	22 00 00 88 	store_32 s1, (s2)
; q.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
    b2f8:	00 00 00 a8 	load_32 s0, (s0)
    b2fc:	3e b0 01 a8 	load_32 s1, 108(sp)
    b300:	60 80 00 0f 	move s3, 32
    b304:	63 80 60 c0 	sub_i s3, s3, s1
    b308:	00 80 b1 c0 	shl s0, s0, s3
    b30c:	7e 20 02 a8 	load_32 s3, 136(sp)
    b310:	23 80 a0 c0 	shr s1, s3, s1
    b314:	00 80 00 c0 	or s0, s0, s1
    b318:	1e e0 01 88 	store_32 s0, 120(sp)
; return q.all;
    b31c:	02 00 00 a8 	load_32 s0, (s2)
    b320:	3e e0 01 a8 	load_32 s1, 120(sp)
    b324:	5e c0 02 05 	add_i s2, sp, 176
    b328:	42 10 00 00 	or s2, s2, 4
    b32c:	02 00 00 88 	store_32 s0, (s2)
    b330:	3e c0 02 88 	store_32 s1, 176(sp)
    b334:	4b 01 00 f6 	b 1324 <__udivmoddi4+0xa2c>
; sr = 1 + n_uword_bits + __builtin_clz(d.s.low) - __builtin_clz(n.s.high);
    b338:	1e 00 02 a8 	load_32 s0, 128(sp)
    b33c:	00 00 c0 c0 	clz s0, s0
    b340:	00 84 00 05 	add_i s0, s0, 33
    b344:	3e 20 02 05 	add_i s1, sp, 136
    b348:	21 10 00 00 	or s1, s1, 4
    b34c:	21 00 00 a8 	load_32 s1, (s1)
    b350:	20 80 c0 c0 	clz s1, s1
    b354:	00 80 60 c0 	sub_i s0, s0, s1
    b358:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr == n_uword_bits)
    b35c:	1e b0 01 a8 	load_32 s0, 108(sp)
    b360:	00 80 00 11 	cmpne_i s0, s0, 32
    b364:	00 02 00 f4 	bnz s0, 64 <__udivmoddi4+0x570>
    b368:	01 00 00 f6 	b 4 <__udivmoddi4+0x538>
    b36c:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
    b370:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low;
    b374:	3e 20 02 a8 	load_32 s1, 136(sp)
    b378:	5e e0 01 05 	add_i s2, sp, 120
    b37c:	42 10 00 00 	or s2, s2, 4
    b380:	22 00 00 88 	store_32 s1, (s2)
    b384:	3e c0 01 05 	add_i s1, sp, 112
; r.s.high = 0;
    b388:	21 10 00 00 	or s1, s1, 4
    b38c:	01 00 00 88 	store_32 s0, (s1)
    b390:	1e 20 02 05 	add_i s0, sp, 136
; r.s.low = n.s.high;
    b394:	00 10 00 00 	or s0, s0, 4
    b398:	00 00 00 a8 	load_32 s0, (s0)
    b39c:	1e c0 01 88 	store_32 s0, 112(sp)
; }
    b3a0:	3e 00 00 f6 	b 248 <__udivmoddi4+0x664>
; else if (sr < n_uword_bits)  // 2 <= sr <= n_uword_bits - 1
    b3a4:	1e b0 01 a8 	load_32 s0, 108(sp)
    b3a8:	00 7c 00 16 	cmpgt_u s0, s0, 31
    b3ac:	a0 03 00 f4 	bnz s0, 116 <__udivmoddi4+0x5ec>
    b3b0:	01 00 00 f6 	b 4 <__udivmoddi4+0x580>
    b3b4:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
    b3b8:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low << (n_uword_bits - sr);
    b3bc:	1e 20 02 a8 	load_32 s0, 136(sp)
    b3c0:	3e b0 01 a8 	load_32 s1, 108(sp)
    b3c4:	40 80 00 0f 	move s2, 32
    b3c8:	22 80 60 c0 	sub_i s1, s2, s1
    b3cc:	00 80 b0 c0 	shl s0, s0, s1
    b3d0:	3e e0 01 05 	add_i s1, sp, 120
    b3d4:	21 10 00 00 	or s1, s1, 4
    b3d8:	01 00 00 88 	store_32 s0, (s1)
    b3dc:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
    b3e0:	00 10 00 00 	or s0, s0, 4
    b3e4:	20 00 00 a8 	load_32 s1, (s0)
    b3e8:	7e b0 01 a8 	load_32 s3, 108(sp)
    b3ec:	21 80 a1 c0 	shr s1, s1, s3
    b3f0:	7e c0 01 05 	add_i s3, sp, 112
    b3f4:	63 10 00 00 	or s3, s3, 4
    b3f8:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
    b3fc:	00 00 00 a8 	load_32 s0, (s0)
    b400:	3e b0 01 a8 	load_32 s1, 108(sp)
    b404:	42 80 60 c0 	sub_i s2, s2, s1
    b408:	00 00 b1 c0 	shl s0, s0, s2
    b40c:	5e 20 02 a8 	load_32 s2, 136(sp)
    b410:	22 80 a0 c0 	shr s1, s2, s1
    b414:	00 80 00 c0 	or s0, s0, s1
    b418:	1e c0 01 88 	store_32 s0, 112(sp)
; }
    b41c:	1e 00 00 f6 	b 120 <__udivmoddi4+0x660>
; q.s.low = n.s.low << (n_udword_bits - sr);
    b420:	1e 20 02 a8 	load_32 s0, 136(sp)
    b424:	3e b0 01 a8 	load_32 s1, 108(sp)
    b428:	40 00 01 0f 	move s2, 64
    b42c:	22 80 60 c0 	sub_i s1, s2, s1
    b430:	00 80 b0 c0 	shl s0, s0, s1
    b434:	1e e0 01 88 	store_32 s0, 120(sp)
    b438:	1e 20 02 05 	add_i s0, sp, 136
; q.s.high = (n.s.high << (n_udword_bits - sr)) |
    b43c:	00 10 00 00 	or s0, s0, 4
    b440:	20 00 00 a8 	load_32 s1, (s0)
    b444:	7e b0 01 a8 	load_32 s3, 108(sp)
    b448:	42 80 61 c0 	sub_i s2, s2, s3
    b44c:	21 00 b1 c0 	shl s1, s1, s2
; (n.s.low >> (sr - n_uword_bits));
    b450:	5e 20 02 a8 	load_32 s2, 136(sp)
    b454:	63 80 ff 05 	add_i s3, s3, -32
    b458:	42 80 a1 c0 	shr s2, s2, s3
; q.s.high = (n.s.high << (n_udword_bits - sr)) |
    b45c:	21 00 01 c0 	or s1, s1, s2
    b460:	5e e0 01 05 	add_i s2, sp, 120
    b464:	42 10 00 00 	or s2, s2, 4
    b468:	22 00 00 88 	store_32 s1, (s2)
    b46c:	3e c0 01 05 	add_i s1, sp, 112
; r.s.high = 0;
    b470:	21 10 00 00 	or s1, s1, 4
    b474:	40 00 00 0f 	move s2, 0
    b478:	41 00 00 88 	store_32 s2, (s1)
; r.s.low = n.s.high >> (sr - n_uword_bits);
    b47c:	00 00 00 a8 	load_32 s0, (s0)
    b480:	3e b0 01 a8 	load_32 s1, 108(sp)
    b484:	21 80 ff 05 	add_i s1, s1, -32
    b488:	00 80 a0 c0 	shr s0, s0, s1
    b48c:	1e c0 01 88 	store_32 s0, 112(sp)
    b490:	01 00 00 f6 	b 4 <__udivmoddi4+0x660>
    b494:	01 00 00 f6 	b 4 <__udivmoddi4+0x664>
; }
    b498:	50 00 00 f6 	b 320 <__udivmoddi4+0x7a4>
    b49c:	1e 00 02 05 	add_i s0, sp, 128
; sr = __builtin_clz(d.s.high) - __builtin_clz(n.s.high);
    b4a0:	00 10 00 00 	or s0, s0, 4
    b4a4:	00 00 00 a8 	load_32 s0, (s0)
    b4a8:	00 00 c0 c0 	clz s0, s0
    b4ac:	3e 20 02 05 	add_i s1, sp, 136
    b4b0:	21 10 00 00 	or s1, s1, 4
    b4b4:	21 00 00 a8 	load_32 s1, (s1)
    b4b8:	20 80 c0 c0 	clz s1, s1
    b4bc:	00 80 60 c0 	sub_i s0, s0, s1
    b4c0:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr > n_uword_bits - 1)
    b4c4:	1e b0 01 a8 	load_32 s0, 108(sp)
    b4c8:	00 80 00 18 	cmplt_u s0, s0, 32
    b4cc:	60 02 00 f4 	bnz s0, 76 <__udivmoddi4+0x6e4>
    b4d0:	01 00 00 f6 	b 4 <__udivmoddi4+0x6a0>
; if (rem)
    b4d4:	1e 70 02 a8 	load_32 s0, 156(sp)
    b4d8:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0x6cc>
    b4dc:	01 00 00 f6 	b 4 <__udivmoddi4+0x6ac>
    b4e0:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.all;
    b4e4:	00 10 00 00 	or s0, s0, 4
    b4e8:	00 00 00 a8 	load_32 s0, (s0)
    b4ec:	3e 20 02 a8 	load_32 s1, 136(sp)
    b4f0:	5e 70 02 a8 	load_32 s2, 156(sp)
    b4f4:	02 10 00 88 	store_32 s0, 4(s2)
    b4f8:	22 00 00 88 	store_32 s1, (s2)
    b4fc:	01 00 00 f6 	b 4 <__udivmoddi4+0x6cc>
    b500:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
    b504:	00 10 00 00 	or s0, s0, 4
    b508:	20 00 00 0f 	move s1, 0
    b50c:	20 00 00 88 	store_32 s1, (s0)
    b510:	3e c0 02 88 	store_32 s1, 176(sp)
    b514:	d3 00 00 f6 	b 844 <__udivmoddi4+0xa2c>
; ++sr;
    b518:	1e b0 01 a8 	load_32 s0, 108(sp)
    b51c:	00 04 00 05 	add_i s0, s0, 1
    b520:	1e b0 01 88 	store_32 s0, 108(sp)
    b524:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
    b528:	1e e0 01 88 	store_32 s0, 120(sp)
; if (sr == n_uword_bits)
    b52c:	1e b0 01 a8 	load_32 s0, 108(sp)
    b530:	00 80 00 11 	cmpne_i s0, s0, 32
    b534:	e0 01 00 f4 	bnz s0, 60 <__udivmoddi4+0x73c>
    b538:	01 00 00 f6 	b 4 <__udivmoddi4+0x708>
; q.s.high = n.s.low;
    b53c:	1e 20 02 a8 	load_32 s0, 136(sp)
    b540:	3e e0 01 05 	add_i s1, sp, 120
    b544:	21 10 00 00 	or s1, s1, 4
    b548:	01 00 00 88 	store_32 s0, (s1)
    b54c:	1e c0 01 05 	add_i s0, sp, 112
; r.s.high = 0;
    b550:	00 10 00 00 	or s0, s0, 4
    b554:	20 00 00 0f 	move s1, 0
    b558:	20 00 00 88 	store_32 s1, (s0)
    b55c:	1e 20 02 05 	add_i s0, sp, 136
; r.s.low = n.s.high;
    b560:	00 10 00 00 	or s0, s0, 4
    b564:	00 00 00 a8 	load_32 s0, (s0)
    b568:	1e c0 01 88 	store_32 s0, 112(sp)
; }
    b56c:	1a 00 00 f6 	b 104 <__udivmoddi4+0x7a0>
; q.s.high = n.s.low << (n_uword_bits - sr);
    b570:	1e 20 02 a8 	load_32 s0, 136(sp)
    b574:	3e b0 01 a8 	load_32 s1, 108(sp)
    b578:	40 80 00 0f 	move s2, 32
    b57c:	22 80 60 c0 	sub_i s1, s2, s1
    b580:	00 80 b0 c0 	shl s0, s0, s1
    b584:	3e e0 01 05 	add_i s1, sp, 120
    b588:	21 10 00 00 	or s1, s1, 4
    b58c:	01 00 00 88 	store_32 s0, (s1)
    b590:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
    b594:	00 10 00 00 	or s0, s0, 4
    b598:	20 00 00 a8 	load_32 s1, (s0)
    b59c:	7e b0 01 a8 	load_32 s3, 108(sp)
    b5a0:	21 80 a1 c0 	shr s1, s1, s3
    b5a4:	7e c0 01 05 	add_i s3, sp, 112
    b5a8:	63 10 00 00 	or s3, s3, 4
    b5ac:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
    b5b0:	00 00 00 a8 	load_32 s0, (s0)
    b5b4:	3e b0 01 a8 	load_32 s1, 108(sp)
    b5b8:	42 80 60 c0 	sub_i s2, s2, s1
    b5bc:	00 00 b1 c0 	shl s0, s0, s2
    b5c0:	5e 20 02 a8 	load_32 s2, 136(sp)
    b5c4:	22 80 a0 c0 	shr s1, s2, s1
    b5c8:	00 80 00 c0 	or s0, s0, s1
    b5cc:	1e c0 01 88 	store_32 s0, 112(sp)
    b5d0:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a0>
    b5d4:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a4>
    b5d8:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a8>
    b5dc:	00 00 00 0f 	move s0, 0
; su_int carry = 0;
    b5e0:	1e a0 01 88 	store_32 s0, 104(sp)
; for (; sr > 0; --sr)
    b5e4:	01 00 00 f6 	b 4 <__udivmoddi4+0x7b4>
    b5e8:	1e b0 01 a8 	load_32 s0, 108(sp)
    b5ec:	a0 0f 00 f2 	bz s0, 500 <__udivmoddi4+0x9ac>
    b5f0:	01 00 00 f6 	b 4 <__udivmoddi4+0x7c0>
    b5f4:	1e c0 01 05 	add_i s0, sp, 112
; r.s.high = (r.s.high << 1) | (r.s.low  >> (n_uword_bits - 1));
    b5f8:	00 10 00 00 	or s0, s0, 4
    b5fc:	20 00 00 a8 	load_32 s1, (s0)
    b600:	21 04 00 0b 	shl s1, s1, 1
    b604:	5e c0 01 a8 	load_32 s2, 112(sp)
    b608:	42 7c 00 0a 	shr s2, s2, 31
    b60c:	21 00 01 c0 	or s1, s1, s2
    b610:	20 00 00 88 	store_32 s1, (s0)
; r.s.low  = (r.s.low  << 1) | (q.s.high >> (n_uword_bits - 1));
    b614:	3e c0 01 a8 	load_32 s1, 112(sp)
    b618:	21 04 00 0b 	shl s1, s1, 1
    b61c:	5e e0 01 05 	add_i s2, sp, 120
    b620:	42 10 00 00 	or s2, s2, 4
    b624:	62 00 00 a8 	load_32 s3, (s2)
    b628:	63 7c 00 0a 	shr s3, s3, 31
    b62c:	21 80 01 c0 	or s1, s1, s3
    b630:	3e c0 01 88 	store_32 s1, 112(sp)
; q.s.high = (q.s.high << 1) | (q.s.low  >> (n_uword_bits - 1));
    b634:	22 00 00 a8 	load_32 s1, (s2)
    b638:	21 04 00 0b 	shl s1, s1, 1
    b63c:	7e e0 01 a8 	load_32 s3, 120(sp)
    b640:	63 7c 00 0a 	shr s3, s3, 31
    b644:	21 80 01 c0 	or s1, s1, s3
    b648:	22 00 00 88 	store_32 s1, (s2)
; q.s.low  = (q.s.low  << 1) | carry;
    b64c:	3e e0 01 a8 	load_32 s1, 120(sp)
    b650:	21 04 00 0b 	shl s1, s1, 1
    b654:	5e a0 01 a8 	load_32 s2, 104(sp)
    b658:	21 00 01 c0 	or s1, s1, s2
    b65c:	3e e0 01 88 	store_32 s1, 120(sp)
    b660:	3e 00 02 05 	add_i s1, sp, 128
; const di_int s = (di_int)(d.all - r.all - 1) >> (n_udword_bits - 1);
    b664:	21 10 00 00 	or s1, s1, 4
    b668:	41 00 00 a8 	load_32 s2, (s1)
    b66c:	7e 00 02 a8 	load_32 s3, 128(sp)
    b670:	80 00 00 a8 	load_32 s4, (s0)
    b674:	be c0 01 a8 	load_32 s5, 112(sp)
    b678:	c3 80 82 c1 	cmplt_u s6, s3, s5
    b67c:	e0 00 00 0f 	move s7, 0
    b680:	00 05 00 0f 	move s8, 1
    b684:	20 01 f4 c0 	move s9, s8
    b688:	1e 20 01 88 	store_32 s0, 72(sp)
    b68c:	3e 10 01 88 	store_32 s1, 68(sp)
    b690:	5e 00 01 88 	store_32 s2, 64(sp)
    b694:	7e f0 00 88 	store_32 s3, 60(sp)
    b698:	9e e0 00 88 	store_32 s4, 56(sp)
    b69c:	be d0 00 88 	store_32 s5, 52(sp)
    b6a0:	fe c0 00 88 	store_32 s7, 48(sp)
    b6a4:	1e b1 00 88 	store_32 s8, 44(sp)
    b6a8:	3e a1 00 88 	store_32 s9, 40(sp)
    b6ac:	66 00 00 f4 	bnz s6, 12 <__udivmoddi4+0x884>
    b6b0:	1e c0 00 a8 	load_32 s0, 48(sp)
    b6b4:	1e a0 00 88 	store_32 s0, 40(sp)
    b6b8:	1e a0 00 a8 	load_32 s0, 40(sp)
    b6bc:	3e 00 01 a8 	load_32 s1, 64(sp)
    b6c0:	5e e0 00 a8 	load_32 s2, 56(sp)
    b6c4:	21 00 61 c0 	sub_i s1, s1, s2
    b6c8:	01 00 60 c0 	sub_i s0, s1, s0
    b6cc:	3e f0 00 a8 	load_32 s1, 60(sp)
    b6d0:	5e d0 00 a8 	load_32 s2, 52(sp)
    b6d4:	61 00 61 c0 	sub_i s3, s1, s2
    b6d8:	83 fc ff 05 	add_i s4, s3, -1
    b6dc:	64 80 81 c1 	cmplt_u s3, s4, s3
    b6e0:	be b0 00 a8 	load_32 s5, 44(sp)
    b6e4:	1e 90 00 88 	store_32 s0, 36(sp)
    b6e8:	9e 80 00 88 	store_32 s4, 32(sp)
    b6ec:	be 70 00 88 	store_32 s5, 28(sp)
    b6f0:	63 00 00 f4 	bnz s3, 12 <__udivmoddi4+0x8c8>
    b6f4:	1e c0 00 a8 	load_32 s0, 48(sp)
    b6f8:	1e 70 00 88 	store_32 s0, 28(sp)
    b6fc:	1e 70 00 a8 	load_32 s0, 28(sp)
    b700:	3e 80 00 a8 	load_32 s1, 32(sp)
    b704:	41 fc ff 11 	cmpne_i s2, s1, -1
    b708:	7e b0 00 a8 	load_32 s3, 44(sp)
    b70c:	1e 60 00 88 	store_32 s0, 24(sp)
    b710:	7e 50 00 88 	store_32 s3, 20(sp)
    b714:	62 00 00 f4 	bnz s2, 12 <__udivmoddi4+0x8ec>
    b718:	1e 60 00 a8 	load_32 s0, 24(sp)
    b71c:	1e 50 00 88 	store_32 s0, 20(sp)
    b720:	1e 50 00 a8 	load_32 s0, 20(sp)
    b724:	3e 90 00 a8 	load_32 s1, 36(sp)
    b728:	01 00 50 c0 	add_i s0, s1, s0
    b72c:	00 fc ff 05 	add_i s0, s0, -1
    b730:	00 7c 00 09 	ashr s0, s0, 31
    b734:	3e 80 01 05 	add_i s1, sp, 96
    b738:	21 10 00 00 	or s1, s1, 4
    b73c:	01 00 00 88 	store_32 s0, (s1)
    b740:	1e 80 01 88 	store_32 s0, 96(sp)
; carry = s & 1;
    b744:	1e 80 01 a8 	load_32 s0, 96(sp)
    b748:	00 04 00 01 	and s0, s0, 1
    b74c:	1e a0 01 88 	store_32 s0, 104(sp)
; r.all -= d.all & s;
    b750:	1e 10 01 a8 	load_32 s0, 68(sp)
    b754:	40 00 00 a8 	load_32 s2, (s0)
    b758:	7e 00 02 a8 	load_32 s3, 128(sp)
    b75c:	21 00 00 a8 	load_32 s1, (s1)
    b760:	9e 80 01 a8 	load_32 s4, 96(sp)
    b764:	22 80 10 c0 	and s1, s2, s1
    b768:	43 00 12 c0 	and s2, s3, s4
    b76c:	7e 20 01 a8 	load_32 s3, 72(sp)
    b770:	83 00 00 a8 	load_32 s4, (s3)
    b774:	be c0 01 a8 	load_32 s5, 112(sp)
    b778:	c5 00 81 c1 	cmplt_u s6, s5, s2
    b77c:	fe b0 00 a8 	load_32 s7, 44(sp)
    b780:	3e 40 00 88 	store_32 s1, 16(sp)
    b784:	5e 30 00 88 	store_32 s2, 12(sp)
    b788:	9e 20 00 88 	store_32 s4, 8(sp)
    b78c:	be 10 00 88 	store_32 s5, 4(sp)
    b790:	fe 00 00 88 	store_32 s7, (sp)
    b794:	66 00 00 f4 	bnz s6, 12 <__udivmoddi4+0x96c>
    b798:	1e c0 00 a8 	load_32 s0, 48(sp)
    b79c:	1e 00 00 88 	store_32 s0, (sp)
    b7a0:	1e 00 00 a8 	load_32 s0, (sp)
    b7a4:	3e 20 00 a8 	load_32 s1, 8(sp)
    b7a8:	5e 40 00 a8 	load_32 s2, 16(sp)
    b7ac:	21 00 61 c0 	sub_i s1, s1, s2
    b7b0:	01 00 60 c0 	sub_i s0, s1, s0
    b7b4:	3e 10 00 a8 	load_32 s1, 4(sp)
    b7b8:	5e 30 00 a8 	load_32 s2, 12(sp)
    b7bc:	61 00 61 c0 	sub_i s3, s1, s2
    b7c0:	9e 20 01 a8 	load_32 s4, 72(sp)
    b7c4:	04 00 00 88 	store_32 s0, (s4)
    b7c8:	7e c0 01 88 	store_32 s3, 112(sp)
; }
    b7cc:	01 00 00 f6 	b 4 <__udivmoddi4+0x99c>
; for (; sr > 0; --sr)
    b7d0:	1e b0 01 a8 	load_32 s0, 108(sp)
    b7d4:	00 fc ff 05 	add_i s0, s0, -1
    b7d8:	1e b0 01 88 	store_32 s0, 108(sp)
    b7dc:	83 ff ff f7 	b -500 <__udivmoddi4+0x7b4>
    b7e0:	1e e0 01 05 	add_i s0, sp, 120
; q.all = (q.all << 1) | carry;
    b7e4:	00 10 00 00 	or s0, s0, 4
    b7e8:	20 00 00 a8 	load_32 s1, (s0)
    b7ec:	5e e0 01 a8 	load_32 s2, 120(sp)
    b7f0:	62 7c 00 0a 	shr s3, s2, 31
    b7f4:	21 04 00 0b 	shl s1, s1, 1
    b7f8:	21 80 01 c0 	or s1, s1, s3
    b7fc:	42 04 00 0b 	shl s2, s2, 1
    b800:	7e a0 01 a8 	load_32 s3, 104(sp)
    b804:	42 80 01 c0 	or s2, s2, s3
    b808:	20 00 00 88 	store_32 s1, (s0)
    b80c:	5e e0 01 88 	store_32 s2, 120(sp)
; if (rem)
    b810:	1e 70 02 a8 	load_32 s0, 156(sp)
    b814:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0xa08>
    b818:	01 00 00 f6 	b 4 <__udivmoddi4+0x9e8>
    b81c:	1e c0 01 05 	add_i s0, sp, 112
; *rem = r.all;
    b820:	00 10 00 00 	or s0, s0, 4
    b824:	00 00 00 a8 	load_32 s0, (s0)
    b828:	3e c0 01 a8 	load_32 s1, 112(sp)
    b82c:	5e 70 02 a8 	load_32 s2, 156(sp)
    b830:	02 10 00 88 	store_32 s0, 4(s2)
    b834:	22 00 00 88 	store_32 s1, (s2)
    b838:	01 00 00 f6 	b 4 <__udivmoddi4+0xa08>
    b83c:	1e e0 01 05 	add_i s0, sp, 120
; return q.all;
    b840:	00 10 00 00 	or s0, s0, 4
    b844:	00 00 00 a8 	load_32 s0, (s0)
    b848:	3e e0 01 a8 	load_32 s1, 120(sp)
    b84c:	5e c0 02 05 	add_i s2, sp, 176
    b850:	42 10 00 00 	or s2, s2, 4
    b854:	02 00 00 88 	store_32 s0, (s2)
    b858:	3e c0 02 88 	store_32 s1, 176(sp)
    b85c:	01 00 00 f6 	b 4 <__udivmoddi4+0xa2c>
    b860:	1e c0 02 05 	add_i s0, sp, 176
; }
    b864:	00 10 00 00 	or s0, s0, 4
    b868:	20 00 00 a8 	load_32 s1, (s0)
    b86c:	1e c0 02 a8 	load_32 s0, 176(sp)
    b870:	fe f3 02 a8 	load_32 ra, 188(sp)
    b874:	de 03 03 05 	add_i sp, sp, 192
    b878:	1f 00 00 f0 	ret

000000000000b87c __umoddi3:
; {
    b87c:	de 03 ff 05 	add_i sp, sp, -64
    b880:	fe f3 00 88 	store_32 ra, 60(sp)
    b884:	80 80 f1 c0 	move s4, s3
    b888:	a0 00 f1 c0 	move s5, s2
    b88c:	c0 80 f0 c0 	move s6, s1
    b890:	e0 00 f0 c0 	move s7, s0
    b894:	1e c1 00 05 	add_i s8, sp, 48
    b898:	08 11 00 00 	or s8, s8, 4
    b89c:	28 00 00 88 	store_32 s1, (s8)
    b8a0:	1e c0 00 88 	store_32 s0, 48(sp)
    b8a4:	1e a0 00 05 	add_i s0, sp, 40
    b8a8:	00 10 00 00 	or s0, s0, 4
    b8ac:	60 00 00 88 	store_32 s3, (s0)
    b8b0:	5e a0 00 88 	store_32 s2, 40(sp)
; __udivmoddi4(a, b, &r);
    b8b4:	28 00 00 a8 	load_32 s1, (s8)
    b8b8:	5e c0 00 a8 	load_32 s2, 48(sp)
    b8bc:	60 00 00 a8 	load_32 s3, (s0)
    b8c0:	1e a0 00 a8 	load_32 s0, 40(sp)
    b8c4:	1c 01 00 a8 	load_32 s8, (gp)
    b8c8:	3e 81 00 05 	add_i s9, sp, 32
    b8cc:	1e 70 00 88 	store_32 s0, 28(sp)
    b8d0:	00 00 f1 c0 	move s0, s2
    b8d4:	5e 70 00 a8 	load_32 s2, 28(sp)
    b8d8:	9e 60 00 88 	store_32 s4, 24(sp)
    b8dc:	80 80 f4 c0 	move s4, s9
    b8e0:	be 50 00 88 	store_32 s5, 20(sp)
    b8e4:	de 40 00 88 	store_32 s6, 16(sp)
    b8e8:	fe 30 00 88 	store_32 s7, 12(sp)
    b8ec:	3e 21 00 88 	store_32 s9, 8(sp)
    b8f0:	08 01 00 fc 	call s8
; return r;
    b8f4:	5e 20 00 a8 	load_32 s2, 8(sp)
    b8f8:	62 10 00 00 	or s3, s2, 4
    b8fc:	63 00 00 a8 	load_32 s3, (s3)
    b900:	9e 80 00 a8 	load_32 s4, 32(sp)
    b904:	1e 10 00 88 	store_32 s0, 4(sp)
    b908:	00 00 f2 c0 	move s0, s4
    b90c:	3e 00 00 88 	store_32 s1, (sp)
    b910:	20 80 f1 c0 	move s1, s3
    b914:	fe f3 00 a8 	load_32 ra, 60(sp)
    b918:	de 03 01 05 	add_i sp, sp, 64
    b91c:	1f 00 00 f0 	ret

000000000000b920 __umodsi3:
; {
    b920:	de 03 ff 05 	add_i sp, sp, -64
    b924:	fe f3 00 88 	store_32 ra, 60(sp)
    b928:	40 80 f0 c0 	move s2, s1
    b92c:	60 00 f0 c0 	move s3, s0
    b930:	1e e0 00 88 	store_32 s0, 56(sp)
    b934:	3e d0 00 88 	store_32 s1, 52(sp)
; return a - __udivsi3(a, b) * b;
    b938:	1e e0 00 a8 	load_32 s0, 56(sp)
    b93c:	3e d0 00 a8 	load_32 s1, 52(sp)
    b940:	9c 20 00 a8 	load_32 s4, 8(gp)
    b944:	1e c0 00 88 	store_32 s0, 48(sp)
    b948:	5e b0 00 88 	store_32 s2, 44(sp)
    b94c:	7e a0 00 88 	store_32 s3, 40(sp)
    b950:	84 00 00 fc 	call s4
    b954:	3e d0 00 a8 	load_32 s1, 52(sp)
    b958:	00 80 70 c0 	mull_i s0, s0, s1
    b95c:	3e c0 00 a8 	load_32 s1, 48(sp)
    b960:	01 00 60 c0 	sub_i s0, s1, s0
    b964:	fe f3 00 a8 	load_32 ra, 60(sp)
    b968:	de 03 01 05 	add_i sp, sp, 64
    b96c:	1f 00 00 f0 	ret

000000000000b970 __udivsi3:
; __udivsi3:          move s4, 0              # Quotient
    b970:	80 00 00 0f 	move s4, 0
; cmplt_u s2, s0, s1      # dividend < divisor
    b974:	40 80 80 c1 	cmplt_u s2, s0, s1
; bnz s2, done            # If yes, result is zero, bail
    b978:	22 02 00 f4 	bnz s2, 68 <done>
; clz s2, s0              # Get dividend leading bits
    b97c:	40 00 c0 c0 	clz s2, s0
; clz s3, s1              # Get divisor leading bits
    b980:	60 80 c0 c0 	clz s3, s1
; sub_i s5, s3, s2        # Number of quotient bits
    b984:	a3 00 61 c0 	sub_i s5, s3, s2
; shl s1, s1, s5          # Shift divisor
    b988:	21 80 b2 c0 	shl s1, s1, s5

000000000000b98c divide_loop:
; divide_loop:        cmpge_u s2, s0, s1      # Is current dividend > divisor
    b98c:	40 80 70 c1 	cmpge_u s2, s0, s1
; and s2, s2, 1           # Set only lowest bit
    b990:	42 04 00 01 	and s2, s2, 1
; or s4, s4, s2           # if true, quotient |= 1
    b994:	84 00 01 c0 	or s4, s4, s2
; shl s2, s2, 31          # Turn into 32-bit mask
    b998:	42 7c 00 0b 	shl s2, s2, 31
; ashr s2, s2, 31
    b99c:	42 7c 00 09 	ashr s2, s2, 31
; and s3, s1, s2          # If the value is true, subtract amt = divisor
    b9a0:	61 00 11 c0 	and s3, s1, s2
; sub_i s0, s0, s3        # dividend -= divisor
    b9a4:	00 80 61 c0 	sub_i s0, s0, s3
; bz s5, done             # If no more quotient bits, bail
    b9a8:	a5 00 00 f2 	bz s5, 20 <done>
; sub_i s5, s5, 1         # Subtract 1 from quotient bits
    b9ac:	a5 04 00 06 	sub_i s5, s5, 1
; shr s1, s1, 1           # Shift divisor right
    b9b0:	21 04 00 0a 	shr s1, s1, 1
; shl s4, s4, 1           # Shift quotient left
    b9b4:	84 04 00 0b 	shl s4, s4, 1
; b divide_loop
    b9b8:	f5 ff ff f7 	b -44 <divide_loop>

000000000000b9bc done:
; done:               move s0, s4             # Move quotient to return value
    b9bc:	00 00 f2 c0 	move s0, s4
; re
    b9c0:	1f 00 00 f0 	ret

000000000000b9c4 _start:
    b9c4:	00 00 00 ac 	getcr s0, 0
    b9c8:	00 38 00 0b 	shl s0, s0, 14
    b9cc:	c0 23 00 4f 	movehi sp, 256
    b9d0:	de 03 60 c0 	sub_i sp, sp, s0
    b9d4:	86 03 00 4f 	movehi gp, 6
    b9d8:	9c 23 00 00 	or gp, gp, 8
    b9dc:	60 01 00 f4 	bnz s0, 44 <do_main>
    b9e0:	06 03 00 4f 	movehi s24, 6
    b9e4:	18 03 00 00 	or s24, s24, 0
    b9e8:	26 03 00 4f 	movehi s25, 6
    b9ec:	39 23 00 00 	or s25, s25, 8

000000000000b9f0 init_loop:
    b9f0:	18 80 0c c1 	cmpeq_i s0, s24, s25
    b9f4:	a0 00 00 f4 	bnz s0, 20 <do_main>
    b9f8:	18 00 00 a8 	load_32 s0, (s24)
    b9fc:	18 13 00 05 	add_i s24, s24, 4
    ba00:	00 00 00 fc 	call s0
    ba04:	fb ff ff f7 	b -20 <init_loop>

000000000000ba08 do_main:
    ba08:	00 00 00 0f 	move s0, 0
    ba0c:	68 da ff f9 	call -38496 <main>
    ba10:	05 00 00 4f 	movehi s0, 5
    ba14:	00 10 69 00 	or s0, s0, 6724
    ba18:	20 00 00 aa 	load_sync s1, (s0)
    ba1c:	e1 ff ff f5 	bnz s1, -4 <do_main+0x10>
    ba20:	20 04 00 0f 	move s1, 1
    ba24:	20 00 00 8a 	store_sync s1, (s0)  
    ba28:	81 ff ff f3 	bz s1, -16 <do_main+0x10>
    ba2c:	33 00 00 f8 	call 204 <call_atexit_functions>
    ba30:	00 10 00 0f 	move s0, 4
    ba34:	1d f7 ff f9 	call -9100 <_write_uart>
    ba38:	00 fc ff 0f 	move s0, -1
    ba3c:	14 00 00 8c 	setcr s0, 20
    ba40:	00 00 00 f6 	b 0 <do_main+0x38>

000000000000ba44 exit_flag:
    ba44:	00 00 00 00 	nop

000000000000ba48 _Znwj:
    ba48:	de 03 ff 05 	add_i sp, sp, -64
    ba4c:	fe f3 00 88 	store_32 ra, 60(sp)
    ba50:	c6 e0 ff f9 	call -31976 <malloc>
    ba54:	fe f3 00 a8 	load_32 ra, 60(sp)
    ba58:	de 03 01 05 	add_i sp, sp, 64
    ba5c:	1f 00 00 f0 	ret

000000000000ba60 _ZdlPv:
    ba60:	de 03 ff 05 	add_i sp, sp, -64
    ba64:	fe f3 00 88 	store_32 ra, 60(sp)
    ba68:	4a e8 ff f9 	call -24280 <free>
    ba6c:	fe f3 00 a8 	load_32 ra, 60(sp)
    ba70:	de 03 01 05 	add_i sp, sp, 64
    ba74:	1f 00 00 f0 	ret

000000000000ba78 _Znaj:
    ba78:	de 03 ff 05 	add_i sp, sp, -64
    ba7c:	fe f3 00 88 	store_32 ra, 60(sp)
    ba80:	ba e0 ff f9 	call -32024 <malloc>
    ba84:	fe f3 00 a8 	load_32 ra, 60(sp)
    ba88:	de 03 01 05 	add_i sp, sp, 64
    ba8c:	1f 00 00 f0 	ret

000000000000ba90 _ZdaPv:
    ba90:	de 03 ff 05 	add_i sp, sp, -64
    ba94:	fe f3 00 88 	store_32 ra, 60(sp)
    ba98:	3e e8 ff f9 	call -24328 <free>
    ba9c:	fe f3 00 a8 	load_32 ra, 60(sp)
    baa0:	de 03 01 05 	add_i sp, sp, 64
    baa4:	1f 00 00 f0 	ret

000000000000baa8 __cxa_atexit:
    baa8:	de 03 ff 05 	add_i sp, sp, -64
    baac:	1e f3 00 88 	store_32 s24, 60(sp)
    bab0:	3e e3 00 88 	store_32 s25, 56(sp)
    bab4:	fe d3 00 88 	store_32 ra, 52(sp)
    bab8:	00 83 f0 c0 	move s24, s1
    babc:	20 03 f0 c0 	move s25, s0
    bac0:	00 30 00 0f 	move s0, 12
    bac4:	a9 e0 ff f9 	call -32092 <malloc>
    bac8:	26 00 00 4f 	movehi s1, 6
    bacc:	21 c0 75 00 	or s1, s1, 7536
    bad0:	41 00 00 a8 	load_32 s2, (s1)
    bad4:	40 00 00 88 	store_32 s2, (s0)
    bad8:	01 00 00 88 	store_32 s0, (s1)
    badc:	20 13 00 88 	store_32 s25, 4(s0)
    bae0:	00 23 00 88 	store_32 s24, 8(s0)
    bae4:	fe d3 00 a8 	load_32 ra, 52(sp)
    bae8:	3e e3 00 a8 	load_32 s25, 56(sp)
    baec:	1e f3 00 a8 	load_32 s24, 60(sp)
    baf0:	de 03 01 05 	add_i sp, sp, 64
    baf4:	1f 00 00 f0 	ret

000000000000baf8 call_atexit_functions:
    baf8:	de 03 ff 05 	add_i sp, sp, -64
    bafc:	1e f3 00 88 	store_32 s24, 60(sp)
    bb00:	fe e3 00 88 	store_32 ra, 56(sp)
    bb04:	06 00 00 4f 	movehi s0, 6
    bb08:	00 c0 75 00 	or s0, s0, 7536
    bb0c:	00 03 00 a8 	load_32 s24, (s0)
    bb10:	f8 00 00 f2 	bz s24, 28 <call_atexit_functions+0x34>
    bb14:	38 10 00 a8 	load_32 s1, 4(s24)
    bb18:	18 20 00 a8 	load_32 s0, 8(s24)
    bb1c:	21 00 00 fc 	call s1
    bb20:	18 03 00 a8 	load_32 s24, (s24)
    bb24:	58 00 00 f2 	bz s24, 8 <call_atexit_functions+0x34>
    bb28:	fb ff ff f7 	b -20 <call_atexit_functions+0x1c>
    bb2c:	fe e3 00 a8 	load_32 ra, 56(sp)
    bb30:	1e f3 00 a8 	load_32 s24, 60(sp)
    bb34:	de 03 01 05 	add_i sp, sp, 64
    bb38:	1f 00 00 f0 	ret

000000000000bb3c __cxa_pure_virtual:
    bb3c:	de 03 ff 05 	add_i sp, sp, -64
    bb40:	fe f3 00 88 	store_32 ra, 60(sp)
    bb44:	00 00 00 4f 	movehi s0, 0
    bb48:	00 bc 10 00 	or s0, s0, 1071
    bb4c:	6f df ff f9 	call -33348 <puts>
    bb50:	00 00 e0 c3 	break

000000000000bb54 _GLOBAL__sub_I_cxx_runtime.cpp:
    bb54:	de 03 ff 05 	add_i sp, sp, -64
    bb58:	1e f3 00 88 	store_32 s24, 60(sp)
    bb5c:	3e e3 00 88 	store_32 s25, 56(sp)
    bb60:	5e d3 00 88 	store_32 s26, 52(sp)
    bb64:	7e c3 00 88 	store_32 s27, 48(sp)
    bb68:	fe b3 00 88 	store_32 ra, 44(sp)
    bb6c:	00 00 00 4f 	movehi s0, 0
    bb70:	26 00 00 4f 	movehi s1, 6
    bb74:	00 33 00 0f 	move s24, 12
    bb78:	00 b0 1c 00 	or s0, s0, 1836
    bb7c:	41 93 75 00 	or s26, s1, 7524
    bb80:	00 20 00 05 	add_i s0, s0, 8
    bb84:	1a 00 00 88 	store_32 s0, (s26)
    bb88:	00 00 fc c0 	move s0, s24
    bb8c:	77 e0 ff f9 	call -32292 <malloc>
    bb90:	26 00 00 4f 	movehi s1, 6
    bb94:	46 00 00 4f 	movehi s2, 6
    bb98:	21 c0 75 00 	or s1, s1, 7536
    bb9c:	3e a0 00 88 	store_32 s1, 40(sp)
    bba0:	20 03 f0 c0 	move s25, s0
    bba4:	05 00 00 4f 	movehi s0, 5
    bba8:	21 00 00 a8 	load_32 s1, (s1)
    bbac:	62 a3 75 00 	or s27, s2, 7528
    bbb0:	39 00 00 88 	store_32 s1, (s25)
    bbb4:	20 00 00 4f 	movehi s1, 0
    bbb8:	00 40 70 00 	or s0, s0, 7184
    bbbc:	19 10 00 88 	store_32 s0, 4(s25)
    bbc0:	59 23 00 88 	store_32 s26, 8(s25)
    bbc4:	01 a0 1d 00 	or s0, s1, 1896
    bbc8:	00 20 00 05 	add_i s0, s0, 8
    bbcc:	1b 00 00 88 	store_32 s0, (s27)
    bbd0:	00 00 fc c0 	move s0, s24
    bbd4:	65 e0 ff f9 	call -32364 <malloc>
    bbd8:	20 03 00 88 	store_32 s25, (s0)
    bbdc:	25 00 00 4f 	movehi s1, 5
    bbe0:	5e a0 00 a8 	load_32 s2, 40(sp)
    bbe4:	21 50 70 00 	or s1, s1, 7188
    bbe8:	02 00 00 88 	store_32 s0, (s2)
    bbec:	20 10 00 88 	store_32 s1, 4(s0)
    bbf0:	60 23 00 88 	store_32 s27, 8(s0)
    bbf4:	fe b3 00 a8 	load_32 ra, 44(sp)
    bbf8:	7e c3 00 a8 	load_32 s27, 48(sp)
    bbfc:	5e d3 00 a8 	load_32 s26, 52(sp)
    bc00:	3e e3 00 a8 	load_32 s25, 56(sp)
    bc04:	1e f3 00 a8 	load_32 s24, 60(sp)
    bc08:	de 03 01 05 	add_i sp, sp, 64
    bc0c:	1f 00 00 f0 	ret

000000000000bc10 _ZN10__cxxabiv117__class_type_infoD2Ev:
    bc10:	1f 00 00 f0 	ret

000000000000bc14 _ZN10__cxxabiv120__si_class_type_infoD2Ev:
    bc14:	1f 00 00 f0 	ret

000000000000bc18 _ZN10__cxxabiv117__class_type_infoD0Ev:
    bc18:	de 03 ff 05 	add_i sp, sp, -64
    bc1c:	fe f3 00 88 	store_32 ra, 60(sp)
    bc20:	dc e7 ff f9 	call -24720 <free>
    bc24:	fe f3 00 a8 	load_32 ra, 60(sp)
    bc28:	de 03 01 05 	add_i sp, sp, 64
    bc2c:	1f 00 00 f0 	ret

000000000000bc30 _ZN10__cxxabiv120__si_class_type_infoD0Ev:
    bc30:	de 03 ff 05 	add_i sp, sp, -64
    bc34:	fe f3 00 88 	store_32 ra, 60(sp)
    bc38:	d6 e7 ff f9 	call -24744 <free>
    bc3c:	fe f3 00 a8 	load_32 ra, 60(sp)
    bc40:	de 03 01 05 	add_i sp, sp, 64
    bc44:	1f 00 00 f0 	ret
