
/home/glinsi/git/NyuziProcessor/software/apps/shadow_map/shadow_map:	file format ELF32-nyuzi

Disassembly of section .text:
0000000000006000 main:
    6000:	de 03 e9 05 	add_i sp, sp, -1472
    6004:	1e f3 16 88 	store_32 s24, 1468(sp)
    6008:	3e e3 16 88 	store_32 s25, 1464(sp)
    600c:	5e d3 16 88 	store_32 s26, 1460(sp)
    6010:	7e c3 16 88 	store_32 s27, 1456(sp)
    6014:	fe b3 16 88 	store_32 ra, 1452(sp)
    6018:	14 3b 00 f8 	call 60496 <get_current_thread_id>
    601c:	40 00 00 f2 	bz s0, 8 <main+0x24>
    6020:	d4 07 00 f6 	b 8016 <main+0x1f70>
    6024:	00 03 00 0f 	move s24, 0
    6028:	00 00 fc c0 	move s0, s24
    602c:	b7 3c 00 f8 	call 62172 <init_vga>
    6030:	1e c0 04 88 	store_32 s0, 304(sp)
    6034:	5e 38 00 f8 	call 57720 <start_all_threads>
    6038:	00 00 02 0f 	move s0, 128
    603c:	5e 37 00 f8 	call 56696 <_Znwj>
    6040:	20 40 00 4f 	movehi s1, 512
    6044:	1e 70 04 88 	store_32 s0, 284(sp)
    6048:	37 0b 00 f8 	call 11484 <_ZN9librender13RenderContextC2Ej>
    604c:	40 03 01 0f 	move s26, 64
    6050:	60 03 04 0f 	move s27, 256
    6054:	00 00 fd c0 	move s0, s26
    6058:	5e d3 04 88 	store_32 s26, 308(sp)
    605c:	20 80 fd c0 	move s1, s27
    6060:	40 29 00 f8 	call 42240 <memalign>
    6064:	20 07 00 0f 	move s25, 1
    6068:	1e f0 04 88 	store_32 s0, 316(sp)
    606c:	20 80 fd c0 	move s1, s27
    6070:	40 80 fd c0 	move s2, s27
    6074:	60 80 fc c0 	move s3, s25
    6078:	3e 33 04 88 	store_32 s25, 268(sp)
    607c:	80 00 fc c0 	move s4, s24
    6080:	1c 0a 00 f8 	call 10352 <_ZN9librender7SurfaceC2EiiNS0_10ColorSpaceEPv>
    6084:	00 00 fd c0 	move s0, s26
    6088:	20 80 fd c0 	move s1, s27
    608c:	35 29 00 f8 	call 42196 <memalign>
    6090:	40 03 f0 c0 	move s26, s0
    6094:	20 80 fd c0 	move s1, s27
    6098:	40 80 fd c0 	move s2, s27
    609c:	60 80 fc c0 	move s3, s25
    60a0:	80 00 fc c0 	move s4, s24
    60a4:	13 0a 00 f8 	call 10316 <_ZN9librender7SurfaceC2EiiNS0_10ColorSpaceEPv>
    60a8:	20 23 00 0f 	move s25, 8
    60ac:	00 80 fc c0 	move s0, s25
    60b0:	41 37 00 f8 	call 56580 <_Znwj>
    60b4:	3e f0 04 a8 	load_32 s1, 316(sp)
    60b8:	20 00 00 88 	store_32 s1, (s0)
    60bc:	1e 20 03 88 	store_32 s0, 200(sp)
    60c0:	40 13 00 88 	store_32 s26, 4(s0)
    60c4:	00 30 00 0f 	move s0, 12
    60c8:	1e e0 04 88 	store_32 s0, 312(sp)
    60cc:	3a 37 00 f8 	call 56552 <_Znwj>
    60d0:	21 00 00 4f 	movehi s1, 1
    60d4:	40 14 00 0f 	move s2, 5
    60d8:	40 10 00 88 	store_32 s2, 4(s0)
    60dc:	20 23 00 88 	store_32 s25, 8(s0)
    60e0:	21 b0 77 00 	or s1, s1, 7660
    60e4:	1e 10 03 88 	store_32 s0, 196(sp)
    60e8:	21 20 00 05 	add_i s1, s1, 8
    60ec:	20 00 00 88 	store_32 s1, (s0)
    60f0:	00 b0 00 0f 	move s0, 44
    60f4:	30 37 00 f8 	call 56512 <_Znwj>
    60f8:	40 03 f0 c0 	move s26, s0
    60fc:	eb 19 00 f8 	call 26540 <_ZN9librender7TextureC2Ev>
    6100:	1e 30 04 a8 	load_32 s0, 268(sp)
    6104:	1a 80 00 82 	store_8 s0, 32(s26)
    6108:	5e 03 03 88 	store_32 s26, 192(sp)
    610c:	00 00 fd c0 	move s0, s26
    6110:	20 00 fc c0 	move s1, s24
    6114:	5e f0 04 a8 	load_32 s2, 316(sp)
    6118:	ee 19 00 f8 	call 26552 <_ZN9librender7Texture13setMipSurfaceEiPKNS_7SurfaceE>
    611c:	00 80 fc c0 	move s0, s25
    6120:	25 37 00 f8 	call 56468 <_Znwj>
    6124:	1e 30 03 88 	store_32 s0, 204(sp)
    6128:	3e d3 04 a8 	load_32 s25, 308(sp)
    612c:	00 80 fc c0 	move s0, s25
    6130:	20 80 fd c0 	move s1, s27
    6134:	0b 29 00 f8 	call 42028 <memalign>
    6138:	40 03 0a 0f 	move s26, 640
    613c:	1e f0 04 88 	store_32 s0, 316(sp)
    6140:	40 80 07 0f 	move s2, 480
    6144:	5e a0 04 88 	store_32 s2, 296(sp)
    6148:	20 00 fd c0 	move s1, s26
    614c:	60 00 fc c0 	move s3, s24
    6150:	9e c0 04 a8 	load_32 s4, 304(sp)
    6154:	e7 09 00 f8 	call 10140 <_ZN9librender7SurfaceC2EiiNS0_10ColorSpaceEPv>
    6158:	00 80 fc c0 	move s0, s25
    615c:	20 80 fd c0 	move s1, s27
    6160:	00 29 00 f8 	call 41984 <memalign>
    6164:	60 03 f0 c0 	move s27, s0
    6168:	20 00 fd c0 	move s1, s26
    616c:	5e a0 04 a8 	load_32 s2, 296(sp)
    6170:	7e 30 04 a8 	load_32 s3, 268(sp)
    6174:	80 00 fc c0 	move s4, s24
    6178:	de 09 00 f8 	call 10104 <_ZN9librender7SurfaceC2EiiNS0_10ColorSpaceEPv>
    617c:	1e 30 03 a8 	load_32 s0, 204(sp)
    6180:	3e f0 04 a8 	load_32 s1, 316(sp)
    6184:	20 00 00 88 	store_32 s1, (s0)
    6188:	60 13 00 88 	store_32 s27, 4(s0)
    618c:	3e e3 04 a8 	load_32 s25, 312(sp)
    6190:	00 80 fc c0 	move s0, s25
    6194:	08 37 00 f8 	call 56352 <_Znwj>
    6198:	21 00 00 4f 	movehi s1, 1
    619c:	20 13 00 88 	store_32 s25, 4(s0)
    61a0:	60 e3 00 0f 	move s27, 56
    61a4:	60 18 00 0f 	move s3, 6
    61a8:	7e a0 04 88 	store_32 s3, 296(sp)
    61ac:	41 10 78 00 	or s2, s1, 7684
    61b0:	60 20 00 88 	store_32 s3, 8(s0)
    61b4:	3e a0 14 05 	add_i s1, sp, 1320
    61b8:	1e f0 02 88 	store_32 s0, 188(sp)
    61bc:	42 20 00 05 	add_i s2, s2, 8
    61c0:	40 00 00 88 	store_32 s2, (s0)
    61c4:	01 10 00 00 	or s0, s1, 4
    61c8:	20 00 fc c0 	move s1, s24
    61cc:	40 80 fd c0 	move s2, s27
    61d0:	b8 2e 00 f8 	call 47840 <memset>
    61d4:	5e 43 11 05 	add_i s26, sp, 1104
    61d8:	20 83 3f 4f 	movehi s25, 130048
    61dc:	3e a3 14 88 	store_32 s25, 1320(sp)
    61e0:	3e f3 14 88 	store_32 s25, 1340(sp)
    61e4:	3e 43 15 88 	store_32 s25, 1360(sp)
    61e8:	1a 10 00 00 	or s0, s26, 4
    61ec:	3e 93 15 88 	store_32 s25, 1380(sp)
    61f0:	20 00 fc c0 	move s1, s24
    61f4:	40 80 fd c0 	move s2, s27
    61f8:	ae 2e 00 f8 	call 47800 <memset>
    61fc:	1a 00 01 05 	add_i s0, s26, 64
    6200:	3e 43 11 88 	store_32 s25, 1104(sp)
    6204:	3e 93 11 88 	store_32 s25, 1124(sp)
    6208:	3e e3 11 88 	store_32 s25, 1144(sp)
    620c:	3e 33 12 88 	store_32 s25, 1164(sp)
    6210:	1e 10 04 88 	store_32 s0, 260(sp)
    6214:	20 00 fc c0 	move s1, s24
    6218:	40 80 fd c0 	move s2, s27
    621c:	7e c3 04 88 	store_32 s27, 304(sp)
    6220:	1a 10 01 05 	add_i s0, s26, 68
    6224:	a3 2e 00 f8 	call 47756 <memset>
    6228:	1a 40 01 05 	add_i s0, s26, 80
    622c:	3e 43 12 88 	store_32 s25, 1168(sp)
    6230:	1e 00 04 88 	store_32 s0, 256(sp)
    6234:	1a 80 01 05 	add_i s0, s26, 96
    6238:	3e 93 12 88 	store_32 s25, 1188(sp)
    623c:	1e f0 03 88 	store_32 s0, 252(sp)
    6240:	1a 50 02 05 	add_i s0, s26, 148
    6244:	3e e3 12 88 	store_32 s25, 1208(sp)
    6248:	3e 33 13 88 	store_32 s25, 1228(sp)
    624c:	1e 43 13 88 	store_32 s24, 1232(sp)
    6250:	1e 53 13 88 	store_32 s24, 1236(sp)
    6254:	1e 63 13 88 	store_32 s24, 1240(sp)
    6258:	1e e0 03 88 	store_32 s0, 248(sp)
    625c:	20 00 fc c0 	move s1, s24
    6260:	1a 60 02 05 	add_i s0, s26, 152
    6264:	40 80 fd c0 	move s2, s27
    6268:	92 2e 00 f8 	call 47688 <memset>
    626c:	3e 93 13 88 	store_32 s25, 1252(sp)
    6270:	40 13 00 0f 	move s26, 4
    6274:	3e e3 13 88 	store_32 s25, 1272(sp)
    6278:	3e 33 14 88 	store_32 s25, 1292(sp)
    627c:	3e 83 14 88 	store_32 s25, 1312(sp)
    6280:	5e e3 10 88 	store_32 s26, 1080(sp)
    6284:	7e d3 04 a8 	load_32 s27, 308(sp)
    6288:	00 80 fd c0 	move s0, s27
    628c:	20 80 fd c0 	move s1, s27
    6290:	b4 28 00 f8 	call 41680 <memalign>
    6294:	3e e0 10 05 	add_i s1, sp, 1080
    6298:	1e 20 11 88 	store_32 s0, 1096(sp)
    629c:	40 00 00 4f 	movehi s2, 0
    62a0:	7e 00 05 05 	add_i s3, sp, 320
    62a4:	21 10 00 00 	or s1, s1, 4
    62a8:	42 90 06 00 	or s2, s2, 420
    62ac:	83 f0 00 00 	or s4, s3, 60
    62b0:	41 00 00 88 	store_32 s2, (s1)
    62b4:	20 00 05 0f 	move s1, 320
    62b8:	3e 00 11 88 	store_32 s1, 1088(sp)
    62bc:	20 60 00 0f 	move s1, 24
    62c0:	3e 10 11 88 	store_32 s1, 1092(sp)
    62c4:	22 a0 05 05 	add_i s1, s2, 360
    62c8:	24 00 00 88 	store_32 s1, (s4)
    62cc:	23 e0 00 00 	or s1, s3, 56
    62d0:	a3 d0 00 00 	or s5, s3, 52
    62d4:	82 40 05 05 	add_i s4, s2, 336
    62d8:	81 00 00 88 	store_32 s4, (s1)
    62dc:	22 e0 04 05 	add_i s1, s2, 312
    62e0:	25 00 00 88 	store_32 s1, (s5)
    62e4:	23 c0 00 00 	or s1, s3, 48
    62e8:	a3 b0 00 00 	or s5, s3, 44
    62ec:	82 80 04 05 	add_i s4, s2, 288
    62f0:	81 00 00 88 	store_32 s4, (s1)
    62f4:	22 20 04 05 	add_i s1, s2, 264
    62f8:	25 00 00 88 	store_32 s1, (s5)
    62fc:	23 a0 00 00 	or s1, s3, 40
    6300:	a3 90 00 00 	or s5, s3, 36
    6304:	82 c0 03 05 	add_i s4, s2, 240
    6308:	81 00 00 88 	store_32 s4, (s1)
    630c:	22 60 03 05 	add_i s1, s2, 216
    6310:	25 00 00 88 	store_32 s1, (s5)
    6314:	23 80 00 00 	or s1, s3, 32
    6318:	a3 70 00 00 	or s5, s3, 28
    631c:	82 00 03 05 	add_i s4, s2, 192
    6320:	81 00 00 88 	store_32 s4, (s1)
    6324:	22 a0 02 05 	add_i s1, s2, 168
    6328:	25 00 00 88 	store_32 s1, (s5)
    632c:	23 60 00 00 	or s1, s3, 24
    6330:	a3 50 00 00 	or s5, s3, 20
    6334:	82 40 02 05 	add_i s4, s2, 144
    6338:	81 00 00 88 	store_32 s4, (s1)
    633c:	22 e0 01 05 	add_i s1, s2, 120
    6340:	25 00 00 88 	store_32 s1, (s5)
    6344:	23 40 00 00 	or s1, s3, 16
    6348:	a3 30 00 00 	or s5, s3, 12
    634c:	82 80 01 05 	add_i s4, s2, 96
    6350:	81 00 00 88 	store_32 s4, (s1)
    6354:	22 20 01 05 	add_i s1, s2, 72
    6358:	25 00 00 88 	store_32 s1, (s5)
    635c:	23 20 00 00 	or s1, s3, 8
    6360:	63 10 00 00 	or s3, s3, 4
    6364:	82 c0 00 05 	add_i s4, s2, 48
    6368:	81 00 00 88 	store_32 s4, (s1)
    636c:	22 60 00 05 	add_i s1, s2, 24
    6370:	23 00 00 88 	store_32 s1, (s3)
    6374:	5e 00 05 88 	store_32 s2, 320(sp)
    6378:	1e 00 05 ae 	load_v v0, 320(sp)
    637c:	00 00 00 8e 	store_v v0, (s0)
    6380:	5e 83 10 88 	store_32 s26, 1056(sp)
    6384:	00 80 fd c0 	move s0, s27
    6388:	20 80 fd c0 	move s1, s27
    638c:	75 28 00 f8 	call 41428 <memalign>
    6390:	3e 80 10 05 	add_i s1, sp, 1056
    6394:	1e c0 10 88 	store_32 s0, 1072(sp)
    6398:	40 00 00 4f 	movehi s2, 0
    639c:	60 00 1e 0f 	move s3, 1920
    63a0:	21 10 00 00 	or s1, s1, 4
    63a4:	42 90 7e 00 	or s2, s2, 8100
    63a8:	41 00 00 88 	store_32 s2, (s1)
    63ac:	3e 00 06 05 	add_i s1, sp, 384
    63b0:	7e a0 10 88 	store_32 s3, 1064(sp)
    63b4:	82 f0 00 05 	add_i s4, s2, 60
    63b8:	5e b3 10 88 	store_32 s26, 1068(sp)
    63bc:	61 f0 00 00 	or s3, s1, 60
    63c0:	a1 d0 00 00 	or s5, s1, 52
    63c4:	83 00 00 88 	store_32 s4, (s3)
    63c8:	61 e0 00 00 	or s3, s1, 56
    63cc:	82 e0 00 05 	add_i s4, s2, 56
    63d0:	83 00 00 88 	store_32 s4, (s3)
    63d4:	62 d0 00 05 	add_i s3, s2, 52
    63d8:	65 00 00 88 	store_32 s3, (s5)
    63dc:	61 c0 00 00 	or s3, s1, 48
    63e0:	a1 b0 00 00 	or s5, s1, 44
    63e4:	82 c0 00 05 	add_i s4, s2, 48
    63e8:	83 00 00 88 	store_32 s4, (s3)
    63ec:	62 b0 00 05 	add_i s3, s2, 44
    63f0:	65 00 00 88 	store_32 s3, (s5)
    63f4:	61 a0 00 00 	or s3, s1, 40
    63f8:	a1 90 00 00 	or s5, s1, 36
    63fc:	82 a0 00 05 	add_i s4, s2, 40
    6400:	83 00 00 88 	store_32 s4, (s3)
    6404:	62 90 00 05 	add_i s3, s2, 36
    6408:	65 00 00 88 	store_32 s3, (s5)
    640c:	61 80 00 00 	or s3, s1, 32
    6410:	a1 70 00 00 	or s5, s1, 28
    6414:	82 80 00 05 	add_i s4, s2, 32
    6418:	83 00 00 88 	store_32 s4, (s3)
    641c:	62 70 00 05 	add_i s3, s2, 28
    6420:	65 00 00 88 	store_32 s3, (s5)
    6424:	61 60 00 00 	or s3, s1, 24
    6428:	a1 50 00 00 	or s5, s1, 20
    642c:	82 60 00 05 	add_i s4, s2, 24
    6430:	83 00 00 88 	store_32 s4, (s3)
    6434:	62 50 00 05 	add_i s3, s2, 20
    6438:	65 00 00 88 	store_32 s3, (s5)
    643c:	61 40 00 00 	or s3, s1, 16
    6440:	a1 30 00 00 	or s5, s1, 12
    6444:	82 40 00 05 	add_i s4, s2, 16
    6448:	83 00 00 88 	store_32 s4, (s3)
    644c:	62 30 00 05 	add_i s3, s2, 12
    6450:	65 00 00 88 	store_32 s3, (s5)
    6454:	61 20 00 00 	or s3, s1, 8
    6458:	21 10 00 00 	or s1, s1, 4
    645c:	82 20 00 05 	add_i s4, s2, 8
    6460:	83 00 00 88 	store_32 s4, (s3)
    6464:	62 10 00 05 	add_i s3, s2, 4
    6468:	61 00 00 88 	store_32 s3, (s1)
    646c:	5e 00 06 88 	store_32 s2, 384(sp)
    6470:	1e 00 06 ae 	load_v v0, 384(sp)
    6474:	00 00 00 8e 	store_v v0, (s0)
    6478:	5e 23 10 88 	store_32 s26, 1032(sp)
    647c:	00 80 fd c0 	move s0, s27
    6480:	20 80 fd c0 	move s1, s27
    6484:	37 28 00 f8 	call 41180 <memalign>
    6488:	3e 20 10 05 	add_i s1, sp, 1032
    648c:	1e 60 10 88 	store_32 s0, 1048(sp)
    6490:	41 00 00 4f 	movehi s2, 1
    6494:	7e 00 07 05 	add_i s3, sp, 448
    6498:	21 10 00 00 	or s1, s1, 4
    649c:	42 90 76 00 	or s2, s2, 7588
    64a0:	a3 d0 00 00 	or s5, s3, 52
    64a4:	41 00 00 88 	store_32 s2, (s1)
    64a8:	23 f0 00 00 	or s1, s3, 60
    64ac:	5e 43 10 88 	store_32 s26, 1040(sp)
    64b0:	9e e0 04 a8 	load_32 s4, 312(sp)
    64b4:	9e 50 10 88 	store_32 s4, 1044(sp)
    64b8:	82 d0 02 05 	add_i s4, s2, 180
    64bc:	81 00 00 88 	store_32 s4, (s1)
    64c0:	23 e0 00 00 	or s1, s3, 56
    64c4:	82 a0 02 05 	add_i s4, s2, 168
    64c8:	81 00 00 88 	store_32 s4, (s1)
    64cc:	22 70 02 05 	add_i s1, s2, 156
    64d0:	25 00 00 88 	store_32 s1, (s5)
    64d4:	23 c0 00 00 	or s1, s3, 48
    64d8:	a3 b0 00 00 	or s5, s3, 44
    64dc:	82 40 02 05 	add_i s4, s2, 144
    64e0:	81 00 00 88 	store_32 s4, (s1)
    64e4:	22 10 02 05 	add_i s1, s2, 132
    64e8:	25 00 00 88 	store_32 s1, (s5)
    64ec:	23 a0 00 00 	or s1, s3, 40
    64f0:	a3 90 00 00 	or s5, s3, 36
    64f4:	82 e0 01 05 	add_i s4, s2, 120
    64f8:	81 00 00 88 	store_32 s4, (s1)
    64fc:	22 b0 01 05 	add_i s1, s2, 108
    6500:	25 00 00 88 	store_32 s1, (s5)
    6504:	23 80 00 00 	or s1, s3, 32
    6508:	a3 70 00 00 	or s5, s3, 28
    650c:	82 80 01 05 	add_i s4, s2, 96
    6510:	81 00 00 88 	store_32 s4, (s1)
    6514:	22 50 01 05 	add_i s1, s2, 84
    6518:	25 00 00 88 	store_32 s1, (s5)
    651c:	23 60 00 00 	or s1, s3, 24
    6520:	a3 50 00 00 	or s5, s3, 20
    6524:	82 20 01 05 	add_i s4, s2, 72
    6528:	81 00 00 88 	store_32 s4, (s1)
    652c:	22 f0 00 05 	add_i s1, s2, 60
    6530:	25 00 00 88 	store_32 s1, (s5)
    6534:	23 40 00 00 	or s1, s3, 16
    6538:	a3 30 00 00 	or s5, s3, 12
    653c:	82 c0 00 05 	add_i s4, s2, 48
    6540:	81 00 00 88 	store_32 s4, (s1)
    6544:	22 90 00 05 	add_i s1, s2, 36
    6548:	25 00 00 88 	store_32 s1, (s5)
    654c:	23 20 00 00 	or s1, s3, 8
    6550:	63 10 00 00 	or s3, s3, 4
    6554:	82 60 00 05 	add_i s4, s2, 24
    6558:	81 00 00 88 	store_32 s4, (s1)
    655c:	22 30 00 05 	add_i s1, s2, 12
    6560:	23 00 00 88 	store_32 s1, (s3)
    6564:	5e 00 07 88 	store_32 s2, 448(sp)
    6568:	1e 00 07 ae 	load_v v0, 448(sp)
    656c:	00 00 00 8e 	store_v v0, (s0)
    6570:	5e c3 0f 88 	store_32 s26, 1008(sp)
    6574:	00 80 fd c0 	move s0, s27
    6578:	20 80 fd c0 	move s1, s27
    657c:	f9 27 00 f8 	call 40932 <memalign>
    6580:	3e c0 0f 05 	add_i s1, sp, 1008
    6584:	1e 00 10 88 	store_32 s0, 1024(sp)
    6588:	41 00 00 4f 	movehi s2, 1
    658c:	7e 00 08 05 	add_i s3, sp, 512
    6590:	21 10 00 00 	or s1, s1, 4
    6594:	42 50 77 00 	or s2, s2, 7636
    6598:	a3 d0 00 00 	or s5, s3, 52
    659c:	41 00 00 88 	store_32 s2, (s1)
    65a0:	3e a0 04 a8 	load_32 s1, 296(sp)
    65a4:	82 f0 00 05 	add_i s4, s2, 60
    65a8:	3e e0 0f 88 	store_32 s1, 1016(sp)
    65ac:	23 f0 00 00 	or s1, s3, 60
    65b0:	5e f3 0f 88 	store_32 s26, 1020(sp)
    65b4:	81 00 00 88 	store_32 s4, (s1)
    65b8:	23 e0 00 00 	or s1, s3, 56
    65bc:	82 e0 00 05 	add_i s4, s2, 56
    65c0:	81 00 00 88 	store_32 s4, (s1)
    65c4:	22 d0 00 05 	add_i s1, s2, 52
    65c8:	25 00 00 88 	store_32 s1, (s5)
    65cc:	23 c0 00 00 	or s1, s3, 48
    65d0:	a3 b0 00 00 	or s5, s3, 44
    65d4:	82 c0 00 05 	add_i s4, s2, 48
    65d8:	81 00 00 88 	store_32 s4, (s1)
    65dc:	22 b0 00 05 	add_i s1, s2, 44
    65e0:	25 00 00 88 	store_32 s1, (s5)
    65e4:	23 a0 00 00 	or s1, s3, 40
    65e8:	a3 90 00 00 	or s5, s3, 36
    65ec:	82 a0 00 05 	add_i s4, s2, 40
    65f0:	81 00 00 88 	store_32 s4, (s1)
    65f4:	22 90 00 05 	add_i s1, s2, 36
    65f8:	25 00 00 88 	store_32 s1, (s5)
    65fc:	23 80 00 00 	or s1, s3, 32
    6600:	a3 70 00 00 	or s5, s3, 28
    6604:	82 80 00 05 	add_i s4, s2, 32
    6608:	81 00 00 88 	store_32 s4, (s1)
    660c:	22 70 00 05 	add_i s1, s2, 28
    6610:	25 00 00 88 	store_32 s1, (s5)
    6614:	23 60 00 00 	or s1, s3, 24
    6618:	a3 50 00 00 	or s5, s3, 20
    661c:	82 60 00 05 	add_i s4, s2, 24
    6620:	81 00 00 88 	store_32 s4, (s1)
    6624:	22 50 00 05 	add_i s1, s2, 20
    6628:	25 00 00 88 	store_32 s1, (s5)
    662c:	23 40 00 00 	or s1, s3, 16
    6630:	a3 30 00 00 	or s5, s3, 12
    6634:	82 40 00 05 	add_i s4, s2, 16
    6638:	81 00 00 88 	store_32 s4, (s1)
    663c:	22 30 00 05 	add_i s1, s2, 12
    6640:	25 00 00 88 	store_32 s1, (s5)
    6644:	23 20 00 00 	or s1, s3, 8
    6648:	63 10 00 00 	or s3, s3, 4
    664c:	82 20 00 05 	add_i s4, s2, 8
    6650:	81 00 00 88 	store_32 s4, (s1)
    6654:	22 10 00 05 	add_i s1, s2, 4
    6658:	23 00 00 88 	store_32 s1, (s3)
    665c:	3e c0 0e 05 	add_i s1, sp, 944
    6660:	5e 00 08 88 	store_32 s2, 512(sp)
    6664:	1e 00 08 ae 	load_v v0, 512(sp)
    6668:	00 00 00 8e 	store_v v0, (s0)
    666c:	01 10 00 00 	or s0, s1, 4
    6670:	3e e0 02 88 	store_32 s1, 184(sp)
    6674:	1e 60 04 88 	store_32 s0, 280(sp)
    6678:	20 00 fc c0 	move s1, s24
    667c:	5e c0 04 a8 	load_32 s2, 304(sp)
    6680:	8c 2d 00 f8 	call 46640 <memset>
    6684:	0c 98 bf 4f 	movehi s0, 392396
    6688:	3e c3 0e 88 	store_32 s25, 944(sp)
    668c:	5e a0 15 05 	add_i s2, sp, 1384
    6690:	3e 13 0f 88 	store_32 s25, 964(sp)
    6694:	79 b0 3f 4f 	movehi s3, 130457
    6698:	3e 63 0f 88 	store_32 s25, 984(sp)
    669c:	00 68 66 00 	or s0, s0, 6554
    66a0:	3e b3 0f 88 	store_32 s25, 1004(sp)
    66a4:	1e a0 15 88 	store_32 s0, 1384(sp)
    66a8:	82 10 00 00 	or s4, s2, 4
    66ac:	03 cc 4c 00 	or s0, s3, 4915
    66b0:	9e c0 04 88 	store_32 s4, 304(sp)
    66b4:	66 cc 3d 4f 	movehi s3, 126566
    66b8:	20 00 f1 c0 	move s1, s2
    66bc:	3e d0 04 88 	store_32 s1, 308(sp)
    66c0:	04 00 00 88 	store_32 s0, (s4)
    66c4:	5e c0 0c 05 	add_i s2, sp, 816
    66c8:	03 34 33 00 	or s0, s3, 3277
    66cc:	1e c0 15 88 	store_32 s0, 1392(sp)
    66d0:	7e c0 0b 05 	add_i s3, sp, 752
    66d4:	1e c3 0c 88 	store_32 s24, 816(sp)
    66d8:	42 13 00 00 	or s26, s2, 4
    66dc:	1e c0 0d 05 	add_i s0, sp, 880
    66e0:	63 13 00 00 	or s27, s3, 4
    66e4:	1a 03 00 88 	store_32 s24, (s26)
    66e8:	5e e3 04 88 	store_32 s26, 312(sp)
    66ec:	1e e3 0c 88 	store_32 s24, 824(sp)
    66f0:	1e c3 0b 88 	store_32 s24, 752(sp)
    66f4:	1b 03 00 88 	store_32 s24, (s27)
    66f8:	3e e3 0b 88 	store_32 s25, 760(sp)
    66fc:	1e 20 04 88 	store_32 s0, 264(sp)
    6700:	1d 06 00 f8 	call 6260 <_ZN9librender6Matrix6lookAtERKNS_4Vec3ES3_S3_>
    6704:	26 4c 3e 4f 	movehi s1, 127590
    6708:	0c 18 3f 4f 	movehi s0, 129228
    670c:	7e 80 0a 05 	add_i s3, sp, 672
    6710:	21 34 33 00 	or s1, s1, 3277
    6714:	00 68 66 00 	or s0, s0, 6554
    6718:	1e 80 13 88 	store_32 s0, 1248(sp)
    671c:	3e 70 13 88 	store_32 s1, 1244(sp)
    6720:	3e 44 3e 4f 	movehi s1, 127550
    6724:	18 78 3f 4f 	movehi s0, 130008
    6728:	21 14 11 00 	or s1, s1, 1093
    672c:	00 44 53 00 	or s0, s0, 5329
    6730:	1e c0 0c 88 	store_32 s0, 816(sp)
    6734:	1a 03 00 88 	store_32 s24, (s26)
    6738:	5e 83 09 05 	add_i s26, sp, 608
    673c:	3e e0 0c 88 	store_32 s1, 824(sp)
    6740:	3e 44 be 4f 	movehi s1, 389694
    6744:	1e f3 0c 88 	store_32 s24, 828(sp)
    6748:	1e 03 0d 88 	store_32 s24, 832(sp)
    674c:	21 14 11 00 	or s1, s1, 1093
    6750:	3e 13 0d 88 	store_32 s25, 836(sp)
    6754:	1e 23 0d 88 	store_32 s24, 840(sp)
    6758:	1e 33 0d 88 	store_32 s24, 844(sp)
    675c:	3e 40 0d 88 	store_32 s1, 848(sp)
    6760:	21 20 be 4f 	movehi s1, 389377
    6764:	1e 53 0d 88 	store_32 s24, 852(sp)
    6768:	1e 60 0d 88 	store_32 s0, 856(sp)
    676c:	06 7c 3f 4f 	movehi s0, 130022
    6770:	21 a0 3c 00 	or s1, s1, 3880
    6774:	1e a3 0d 88 	store_32 s24, 872(sp)
    6778:	1e 93 0d 88 	store_32 s24, 868(sp)
    677c:	1e 83 0d 88 	store_32 s24, 864(sp)
    6780:	00 c4 64 00 	or s0, s0, 6449
    6784:	1e 73 0d 88 	store_32 s24, 860(sp)
    6788:	3e b3 0d 88 	store_32 s25, 876(sp)
    678c:	1e c0 0b 88 	store_32 s0, 752(sp)
    6790:	3b 00 00 88 	store_32 s1, (s27)
    6794:	21 20 3e 4f 	movehi s1, 127233
    6798:	1e e3 0b 88 	store_32 s24, 760(sp)
    679c:	1e f3 0b 88 	store_32 s24, 764(sp)
    67a0:	21 a0 3c 00 	or s1, s1, 3880
    67a4:	3e 00 0c 88 	store_32 s1, 768(sp)
    67a8:	1e 10 0c 88 	store_32 s0, 772(sp)
    67ac:	1e 23 0c 88 	store_32 s24, 776(sp)
    67b0:	1e 33 0c 88 	store_32 s24, 780(sp)
    67b4:	1e 43 0c 88 	store_32 s24, 784(sp)
    67b8:	1e 53 0c 88 	store_32 s24, 788(sp)
    67bc:	3e 63 0c 88 	store_32 s25, 792(sp)
    67c0:	1e 73 0c 88 	store_32 s24, 796(sp)
    67c4:	1e 83 0c 88 	store_32 s24, 800(sp)
    67c8:	1e 93 0c 88 	store_32 s24, 804(sp)
    67cc:	1e a3 0c 88 	store_32 s24, 808(sp)
    67d0:	3e b3 0c 88 	store_32 s25, 812(sp)
    67d4:	1e a3 15 88 	store_32 s24, 1384(sp)
    67d8:	1e c0 04 a8 	load_32 s0, 304(sp)
    67dc:	00 03 00 88 	store_32 s24, (s0)
    67e0:	00 00 40 4f 	movehi s0, 131072
    67e4:	1e c0 15 88 	store_32 s0, 1392(sp)
    67e8:	1a 10 00 00 	or s0, s26, 4
    67ec:	1e 83 09 88 	store_32 s24, 608(sp)
    67f0:	1e 50 04 88 	store_32 s0, 276(sp)
    67f4:	00 03 00 88 	store_32 s24, (s0)
    67f8:	03 10 00 00 	or s0, s3, 4
    67fc:	1e a3 09 88 	store_32 s24, 616(sp)
    6800:	1e 83 0a 88 	store_32 s24, 672(sp)
    6804:	3e f3 04 88 	store_32 s25, 316(sp)
    6808:	20 03 00 88 	store_32 s25, (s0)
    680c:	1e b3 04 88 	store_32 s24, 300(sp)
    6810:	1e a3 0a 88 	store_32 s24, 680(sp)
    6814:	1e c3 0a 05 	add_i s24, sp, 688
    6818:	00 00 fc c0 	move s0, s24
    681c:	3e d3 04 a8 	load_32 s25, 308(sp)
    6820:	20 80 fc c0 	move s1, s25
    6824:	40 00 fd c0 	move s2, s26
    6828:	d3 05 00 f8 	call 5964 <_ZN9librender6Matrix6lookAtERKNS_4Vec3ES3_S3_>
    682c:	a0 00 00 4f 	movehi s5, 0
    6830:	1e d3 03 88 	store_32 s24, 244(sp)
    6834:	38 10 00 00 	or s1, s24, 4
    6838:	1e c0 0a a8 	load_32 s0, 688(sp)
    683c:	3e c0 03 88 	store_32 s1, 240(sp)
    6840:	25 61 05 00 	or s9, s5, 344
    6844:	21 00 00 a8 	load_32 s1, (s1)
    6848:	5e e0 0a a8 	load_32 s2, 696(sp)
    684c:	7e 00 0b a8 	load_32 s3, 704(sp)
    6850:	9e 10 0b a8 	load_32 s4, 708(sp)
    6854:	de 20 0b a8 	load_32 s6, 712(sp)
    6858:	fe 40 0b a8 	load_32 s7, 720(sp)
    685c:	be 50 0b a8 	load_32 s5, 724(sp)
    6860:	1e 61 0b a8 	load_32 s8, 728(sp)
    6864:	3e d1 02 88 	store_32 s9, 180(sp)
    6868:	29 01 00 a8 	load_32 s9, (s9)
    686c:	00 80 24 c2 	mul_f s0, s0, s9
    6870:	63 80 24 c2 	mul_f s3, s3, s9
    6874:	e7 80 24 c2 	mul_f s7, s7, s9
    6878:	21 80 24 c2 	mul_f s1, s1, s9
    687c:	00 80 04 c2 	add_f s0, s0, s9
    6880:	63 80 04 c2 	add_f s3, s3, s9
    6884:	e7 80 04 c2 	add_f s7, s7, s9
    6888:	00 80 00 c2 	add_f s0, s0, s1
    688c:	24 80 24 c2 	mul_f s1, s4, s9
    6890:	23 80 00 c2 	add_f s1, s3, s1
    6894:	65 80 24 c2 	mul_f s3, s5, s9
    6898:	67 80 01 c2 	add_f s3, s7, s3
    689c:	00 00 11 c2 	sub_f s0, s0, s2
    68a0:	21 00 13 c2 	sub_f s1, s1, s6
    68a4:	43 00 14 c2 	sub_f s2, s3, s8
    68a8:	00 80 04 c2 	add_f s0, s0, s9
    68ac:	21 80 04 c2 	add_f s1, s1, s9
    68b0:	42 80 04 c2 	add_f s2, s2, s9
    68b4:	1e 40 13 88 	store_32 s0, 1232(sp)
    68b8:	3e 50 13 88 	store_32 s1, 1236(sp)
    68bc:	5e 60 13 88 	store_32 s2, 1240(sp)
    68c0:	1e 70 04 a8 	load_32 s0, 284(sp)
    68c4:	3e 30 04 a8 	load_32 s1, 268(sp)
    68c8:	20 a0 00 82 	store_8 s1, 40(s0)
    68cc:	3e 20 04 a8 	load_32 s1, 264(sp)
    68d0:	01 40 00 05 	add_i s0, s1, 16
    68d4:	1e c0 02 88 	store_32 s0, 176(sp)
    68d8:	01 80 00 05 	add_i s0, s1, 32
    68dc:	1e b0 02 88 	store_32 s0, 172(sp)
    68e0:	1a 40 00 05 	add_i s0, s26, 16
    68e4:	1e a0 02 88 	store_32 s0, 168(sp)
    68e8:	1a 80 00 05 	add_i s0, s26, 32
    68ec:	1e 90 02 88 	store_32 s0, 164(sp)
    68f0:	1a 20 00 05 	add_i s0, s26, 8
    68f4:	1e 80 02 88 	store_32 s0, 160(sp)
    68f8:	1e c0 0c a8 	load_32 s0, 816(sp)
    68fc:	1e 70 02 88 	store_32 s0, 156(sp)
    6900:	1e 00 0d a8 	load_32 s0, 832(sp)
    6904:	1e 60 02 88 	store_32 s0, 152(sp)
    6908:	1e 40 0d a8 	load_32 s0, 848(sp)
    690c:	1e 50 02 88 	store_32 s0, 148(sp)
    6910:	1e 80 0d a8 	load_32 s0, 864(sp)
    6914:	1e 40 02 88 	store_32 s0, 144(sp)
    6918:	1e e0 04 a8 	load_32 s0, 312(sp)
    691c:	00 00 00 a8 	load_32 s0, (s0)
    6920:	1e 30 02 88 	store_32 s0, 140(sp)
    6924:	1e 10 0d a8 	load_32 s0, 836(sp)
    6928:	1e 20 02 88 	store_32 s0, 136(sp)
    692c:	1e 50 0d a8 	load_32 s0, 852(sp)
    6930:	1e 10 02 88 	store_32 s0, 132(sp)
    6934:	1e 90 0d a8 	load_32 s0, 868(sp)
    6938:	1e 00 02 88 	store_32 s0, 128(sp)
    693c:	1e e0 0c a8 	load_32 s0, 824(sp)
    6940:	1e f0 01 88 	store_32 s0, 124(sp)
    6944:	1e 20 0d a8 	load_32 s0, 840(sp)
    6948:	1e e0 01 88 	store_32 s0, 120(sp)
    694c:	1e 60 0d a8 	load_32 s0, 856(sp)
    6950:	1e d0 01 88 	store_32 s0, 116(sp)
    6954:	1e a0 0d a8 	load_32 s0, 872(sp)
    6958:	1e c0 01 88 	store_32 s0, 112(sp)
    695c:	1e f0 0c a8 	load_32 s0, 828(sp)
    6960:	1e b0 01 88 	store_32 s0, 108(sp)
    6964:	1e 30 0d a8 	load_32 s0, 844(sp)
    6968:	1e a0 01 88 	store_32 s0, 104(sp)
    696c:	1e 70 0d a8 	load_32 s0, 860(sp)
    6970:	1e 90 01 88 	store_32 s0, 100(sp)
    6974:	1e b0 0d a8 	load_32 s0, 876(sp)
    6978:	1e 80 01 88 	store_32 s0, 96(sp)
    697c:	1e c0 0b a8 	load_32 s0, 752(sp)
    6980:	1e 70 01 88 	store_32 s0, 92(sp)
    6984:	1e 00 0c a8 	load_32 s0, 768(sp)
    6988:	1e 60 01 88 	store_32 s0, 88(sp)
    698c:	1e 40 0c a8 	load_32 s0, 784(sp)
    6990:	1e 50 01 88 	store_32 s0, 84(sp)
    6994:	1e 80 0c a8 	load_32 s0, 800(sp)
    6998:	1e 40 01 88 	store_32 s0, 80(sp)
    699c:	1b 00 00 a8 	load_32 s0, (s27)
    69a0:	1e 30 01 88 	store_32 s0, 76(sp)
    69a4:	19 30 00 05 	add_i s0, s25, 12
    69a8:	1e a0 04 88 	store_32 s0, 296(sp)
    69ac:	19 20 00 05 	add_i s0, s25, 8
    69b0:	1e 90 04 88 	store_32 s0, 292(sp)
    69b4:	1e 10 0c a8 	load_32 s0, 772(sp)
    69b8:	1e 20 01 88 	store_32 s0, 72(sp)
    69bc:	1e 50 0c a8 	load_32 s0, 788(sp)
    69c0:	1e 10 01 88 	store_32 s0, 68(sp)
    69c4:	1e 90 0c a8 	load_32 s0, 804(sp)
    69c8:	1e 00 01 88 	store_32 s0, 64(sp)
    69cc:	1e e0 0b a8 	load_32 s0, 760(sp)
    69d0:	1e f0 00 88 	store_32 s0, 60(sp)
    69d4:	1e 20 0c a8 	load_32 s0, 776(sp)
    69d8:	1e e0 00 88 	store_32 s0, 56(sp)
    69dc:	1e 60 0c a8 	load_32 s0, 792(sp)
    69e0:	1e d0 00 88 	store_32 s0, 52(sp)
    69e4:	1e a0 0c a8 	load_32 s0, 808(sp)
    69e8:	1e c0 00 88 	store_32 s0, 48(sp)
    69ec:	1e f0 0b a8 	load_32 s0, 764(sp)
    69f0:	1e b0 00 88 	store_32 s0, 44(sp)
    69f4:	1e 30 0c a8 	load_32 s0, 780(sp)
    69f8:	1e a0 00 88 	store_32 s0, 40(sp)
    69fc:	1e 70 0c a8 	load_32 s0, 796(sp)
    6a00:	1e 90 00 88 	store_32 s0, 36(sp)
    6a04:	1e b0 0c a8 	load_32 s0, 812(sp)
    6a08:	1e 80 00 88 	store_32 s0, 32(sp)
    6a0c:	3e 73 04 a8 	load_32 s25, 284(sp)
    6a10:	00 80 fc c0 	move s0, s25
    6a14:	3e 20 03 a8 	load_32 s1, 200(sp)
    6a18:	74 09 00 f8 	call 9680 <_ZN9librender13RenderContext10bindTargetEPNS_12RenderTargetE>
    6a1c:	00 80 fc c0 	move s0, s25
    6a20:	3e 10 03 a8 	load_32 s1, 196(sp)
    6a24:	84 09 00 f8 	call 9744 <_ZN9librender13RenderContext10bindShaderEPNS_6ShaderE>
    6a28:	5e a3 14 05 	add_i s26, sp, 1320
    6a2c:	1e 30 04 a8 	load_32 s0, 268(sp)
    6a30:	00 03 01 0f 	move s24, 64
    6a34:	19 00 00 82 	store_8 s0, (s25)
    6a38:	00 00 fd c0 	move s0, s26
    6a3c:	3e d0 03 a8 	load_32 s1, 244(sp)
    6a40:	40 00 fc c0 	move s2, s24
    6a44:	be 2f 00 f8 	call 48888 <memcpy>
    6a48:	00 80 fc c0 	move s0, s25
    6a4c:	20 00 fd c0 	move s1, s26
    6a50:	40 00 fc c0 	move s2, s24
    6a54:	37 09 00 f8 	call 9436 <_ZN9librender13RenderContext12bindUniformsEPKvj>
    6a58:	3e 20 10 05 	add_i s1, sp, 1032
    6a5c:	3e 50 03 88 	store_32 s1, 212(sp)
    6a60:	00 80 fc c0 	move s0, s25
    6a64:	31 09 00 f8 	call 9412 <_ZN9librender13RenderContext15bindVertexAttrsEPKNS_12RenderBufferE>
    6a68:	3e c0 0f 05 	add_i s1, sp, 1008
    6a6c:	3e 40 03 88 	store_32 s1, 208(sp)
    6a70:	00 80 fc c0 	move s0, s25
    6a74:	74 09 00 f8 	call 9680 <_ZN9librender13RenderContext12drawElementsEPKNS_12RenderBufferE>
    6a78:	40 d0 00 0f 	move s2, 52
    6a7c:	5e 80 04 88 	store_32 s2, 288(sp)
    6a80:	1e 90 04 a8 	load_32 s0, 292(sp)
    6a84:	3e b0 04 a8 	load_32 s1, 300(sp)
    6a88:	8a 2c 00 f8 	call 45608 <memset>
    6a8c:	1e f0 04 a8 	load_32 s0, 316(sp)
    6a90:	1e 40 16 88 	store_32 s0, 1424(sp)
    6a94:	1e 90 16 88 	store_32 s0, 1444(sp)
    6a98:	1e c0 03 a8 	load_32 s0, 240(sp)
    6a9c:	c0 01 00 a8 	load_32 s14, (s0)
    6aa0:	9e e0 0a a8 	load_32 s4, 696(sp)
    6aa4:	1e f0 0a a8 	load_32 s0, 700(sp)
    6aa8:	be 01 0b a8 	load_32 s13, 704(sp)
    6aac:	be 10 0b a8 	load_32 s5, 708(sp)
    6ab0:	5e 20 0b a8 	load_32 s2, 712(sp)
    6ab4:	3e 30 0b a8 	load_32 s1, 716(sp)
    6ab8:	9e 41 0b a8 	load_32 s12, 720(sp)
    6abc:	1e 51 0b a8 	load_32 s8, 724(sp)
    6ac0:	de 60 0b a8 	load_32 s6, 728(sp)
    6ac4:	7e 70 0b a8 	load_32 s3, 732(sp)
    6ac8:	7e 81 0b a8 	load_32 s11, 736(sp)
    6acc:	5e 91 0b a8 	load_32 s10, 740(sp)
    6ad0:	3e a1 0b a8 	load_32 s9, 744(sp)
    6ad4:	fe b0 0b a8 	load_32 s7, 748(sp)
    6ad8:	fe c1 0a a8 	load_32 s15, 688(sp)
    6adc:	1e c2 0e a8 	load_32 s16, 944(sp)
    6ae0:	5e d2 02 a8 	load_32 s18, 180(sp)
    6ae4:	2f 02 28 c2 	mul_f s17, s15, s16
    6ae8:	72 03 00 a8 	load_32 s27, (s18)
    6aec:	6d 02 28 c2 	mul_f s19, s13, s16
    6af0:	8c 02 28 c2 	mul_f s20, s12, s16
    6af4:	5e 02 0f a8 	load_32 s18, 960(sp)
    6af8:	0b 02 28 c2 	mul_f s16, s11, s16
    6afc:	ae 02 29 c2 	mul_f s21, s14, s18
    6b00:	31 82 0d c2 	add_f s17, s17, s27
    6b04:	73 82 0d c2 	add_f s19, s19, s27
    6b08:	94 82 0d c2 	add_f s20, s20, s27
    6b0c:	10 82 0d c2 	add_f s16, s16, s27
    6b10:	31 82 0a c2 	add_f s17, s17, s21
    6b14:	be 42 0f a8 	load_32 s21, 976(sp)
    6b18:	c4 82 2a c2 	mul_f s22, s4, s21
    6b1c:	31 02 0b c2 	add_f s17, s17, s22
    6b20:	c5 02 29 c2 	mul_f s22, s5, s18
    6b24:	73 02 0b c2 	add_f s19, s19, s22
    6b28:	c8 02 29 c2 	mul_f s22, s8, s18
    6b2c:	94 02 0b c2 	add_f s20, s20, s22
    6b30:	de 82 0f a8 	load_32 s22, 992(sp)
    6b34:	4a 02 29 c2 	mul_f s18, s10, s18
    6b38:	10 02 09 c2 	add_f s16, s16, s18
    6b3c:	42 82 2a c2 	mul_f s18, s2, s21
    6b40:	53 02 09 c2 	add_f s18, s19, s18
    6b44:	66 82 2a c2 	mul_f s19, s6, s21
    6b48:	74 82 09 c2 	add_f s19, s20, s19
    6b4c:	a9 82 2a c2 	mul_f s21, s9, s21
    6b50:	10 82 0a c2 	add_f s16, s16, s21
    6b54:	80 02 2b c2 	mul_f s20, s0, s22
    6b58:	31 02 0a c2 	add_f s17, s17, s20
    6b5c:	81 02 2b c2 	mul_f s20, s1, s22
    6b60:	52 02 0a c2 	add_f s18, s18, s20
    6b64:	83 02 2b c2 	mul_f s20, s3, s22
    6b68:	73 02 0a c2 	add_f s19, s19, s20
    6b6c:	3e a2 15 88 	store_32 s17, 1384(sp)
    6b70:	87 02 2b c2 	mul_f s20, s7, s22
    6b74:	10 02 0a c2 	add_f s16, s16, s20
    6b78:	5e e2 15 88 	store_32 s18, 1400(sp)
    6b7c:	7e 22 16 88 	store_32 s19, 1416(sp)
    6b80:	1e 62 16 88 	store_32 s16, 1432(sp)
    6b84:	1e 62 04 a8 	load_32 s16, 280(sp)
    6b88:	10 02 00 a8 	load_32 s16, (s16)
    6b8c:	5e 12 0f a8 	load_32 s18, 964(sp)
    6b90:	2f 02 28 c2 	mul_f s17, s15, s16
    6b94:	6d 02 28 c2 	mul_f s19, s13, s16
    6b98:	8c 02 28 c2 	mul_f s20, s12, s16
    6b9c:	0b 02 28 c2 	mul_f s16, s11, s16
    6ba0:	ae 02 29 c2 	mul_f s21, s14, s18
    6ba4:	31 82 0d c2 	add_f s17, s17, s27
    6ba8:	73 82 0d c2 	add_f s19, s19, s27
    6bac:	94 82 0d c2 	add_f s20, s20, s27
    6bb0:	10 82 0d c2 	add_f s16, s16, s27
    6bb4:	31 82 0a c2 	add_f s17, s17, s21
    6bb8:	be 52 0f a8 	load_32 s21, 980(sp)
    6bbc:	c4 82 2a c2 	mul_f s22, s4, s21
    6bc0:	31 02 0b c2 	add_f s17, s17, s22
    6bc4:	c5 02 29 c2 	mul_f s22, s5, s18
    6bc8:	73 02 0b c2 	add_f s19, s19, s22
    6bcc:	c8 02 29 c2 	mul_f s22, s8, s18
    6bd0:	94 02 0b c2 	add_f s20, s20, s22
    6bd4:	de 92 0f a8 	load_32 s22, 996(sp)
    6bd8:	4a 02 29 c2 	mul_f s18, s10, s18
    6bdc:	10 02 09 c2 	add_f s16, s16, s18
    6be0:	42 82 2a c2 	mul_f s18, s2, s21
    6be4:	53 02 09 c2 	add_f s18, s19, s18
    6be8:	66 82 2a c2 	mul_f s19, s6, s21
    6bec:	74 82 09 c2 	add_f s19, s20, s19
    6bf0:	a9 82 2a c2 	mul_f s21, s9, s21
    6bf4:	10 82 0a c2 	add_f s16, s16, s21
    6bf8:	80 02 2b c2 	mul_f s20, s0, s22
    6bfc:	31 02 0a c2 	add_f s17, s17, s20
    6c00:	81 02 2b c2 	mul_f s20, s1, s22
    6c04:	52 02 0a c2 	add_f s18, s18, s20
    6c08:	83 02 2b c2 	mul_f s20, s3, s22
    6c0c:	73 02 0a c2 	add_f s19, s19, s20
    6c10:	87 02 2b c2 	mul_f s20, s7, s22
    6c14:	10 02 0a c2 	add_f s16, s16, s20
    6c18:	9e c2 04 a8 	load_32 s20, 304(sp)
    6c1c:	34 02 00 88 	store_32 s17, (s20)
    6c20:	5e f2 15 88 	store_32 s18, 1404(sp)
    6c24:	7e 32 16 88 	store_32 s19, 1420(sp)
    6c28:	1e 72 16 88 	store_32 s16, 1436(sp)
    6c2c:	1e e2 0e a8 	load_32 s16, 952(sp)
    6c30:	5e 22 0f a8 	load_32 s18, 968(sp)
    6c34:	2f 02 28 c2 	mul_f s17, s15, s16
    6c38:	6d 02 28 c2 	mul_f s19, s13, s16
    6c3c:	8c 02 28 c2 	mul_f s20, s12, s16
    6c40:	0b 02 28 c2 	mul_f s16, s11, s16
    6c44:	ae 02 29 c2 	mul_f s21, s14, s18
    6c48:	31 82 0d c2 	add_f s17, s17, s27
    6c4c:	73 82 0d c2 	add_f s19, s19, s27
    6c50:	94 82 0d c2 	add_f s20, s20, s27
    6c54:	10 82 0d c2 	add_f s16, s16, s27
    6c58:	31 82 0a c2 	add_f s17, s17, s21
    6c5c:	be 62 0f a8 	load_32 s21, 984(sp)
    6c60:	c4 82 2a c2 	mul_f s22, s4, s21
    6c64:	31 02 0b c2 	add_f s17, s17, s22
    6c68:	c5 02 29 c2 	mul_f s22, s5, s18
    6c6c:	73 02 0b c2 	add_f s19, s19, s22
    6c70:	c8 02 29 c2 	mul_f s22, s8, s18
    6c74:	4a 02 29 c2 	mul_f s18, s10, s18
    6c78:	94 02 0b c2 	add_f s20, s20, s22
    6c7c:	10 02 09 c2 	add_f s16, s16, s18
    6c80:	5e a2 0f a8 	load_32 s18, 1000(sp)
    6c84:	c2 82 2a c2 	mul_f s22, s2, s21
    6c88:	73 02 0b c2 	add_f s19, s19, s22
    6c8c:	c6 82 2a c2 	mul_f s22, s6, s21
    6c90:	a9 82 2a c2 	mul_f s21, s9, s21
    6c94:	94 02 0b c2 	add_f s20, s20, s22
    6c98:	10 82 0a c2 	add_f s16, s16, s21
    6c9c:	a0 02 29 c2 	mul_f s21, s0, s18
    6ca0:	31 82 0a c2 	add_f s17, s17, s21
    6ca4:	a1 02 29 c2 	mul_f s21, s1, s18
    6ca8:	73 82 0a c2 	add_f s19, s19, s21
    6cac:	a3 02 29 c2 	mul_f s21, s3, s18
    6cb0:	47 02 29 c2 	mul_f s18, s7, s18
    6cb4:	3e c2 15 88 	store_32 s17, 1392(sp)
    6cb8:	94 82 0a c2 	add_f s20, s20, s21
    6cbc:	10 02 09 c2 	add_f s16, s16, s18
    6cc0:	7e 02 16 88 	store_32 s19, 1408(sp)
    6cc4:	9e 42 16 88 	store_32 s20, 1424(sp)
    6cc8:	1e 82 16 88 	store_32 s16, 1440(sp)
    6ccc:	1e f2 0e a8 	load_32 s16, 956(sp)
    6cd0:	3e 32 0f a8 	load_32 s17, 972(sp)
    6cd4:	ad 01 28 c2 	mul_f s13, s13, s16
    6cd8:	ef 01 28 c2 	mul_f s15, s15, s16
    6cdc:	8c 01 28 c2 	mul_f s12, s12, s16
    6ce0:	6b 01 28 c2 	mul_f s11, s11, s16
    6ce4:	a5 80 28 c2 	mul_f s5, s5, s17
    6ce8:	ce 81 28 c2 	mul_f s14, s14, s17
    6cec:	08 81 28 c2 	mul_f s8, s8, s17
    6cf0:	ad 81 0d c2 	add_f s13, s13, s27
    6cf4:	ef 81 0d c2 	add_f s15, s15, s27
    6cf8:	8c 81 0d c2 	add_f s12, s12, s27
    6cfc:	6b 81 0d c2 	add_f s11, s11, s27
    6d00:	4a 81 28 c2 	mul_f s10, s10, s17
    6d04:	ad 80 02 c2 	add_f s5, s13, s5
    6d08:	cf 01 07 c2 	add_f s14, s15, s14
    6d0c:	fe 71 0f a8 	load_32 s15, 988(sp)
    6d10:	0c 01 04 c2 	add_f s8, s12, s8
    6d14:	4b 01 05 c2 	add_f s10, s11, s10
    6d18:	42 80 27 c2 	mul_f s2, s2, s15
    6d1c:	84 80 27 c2 	mul_f s4, s4, s15
    6d20:	45 00 01 c2 	add_f s2, s5, s2
    6d24:	a6 80 27 c2 	mul_f s5, s6, s15
    6d28:	c9 80 27 c2 	mul_f s6, s9, s15
    6d2c:	8e 00 02 c2 	add_f s4, s14, s4
    6d30:	de b1 0f a8 	load_32 s14, 1004(sp)
    6d34:	a8 80 02 c2 	add_f s5, s8, s5
    6d38:	ca 00 03 c2 	add_f s6, s10, s6
    6d3c:	21 00 27 c2 	mul_f s1, s1, s14
    6d40:	00 00 27 c2 	mul_f s0, s0, s14
    6d44:	22 80 00 c2 	add_f s1, s2, s1
    6d48:	43 00 27 c2 	mul_f s2, s3, s14
    6d4c:	67 00 27 c2 	mul_f s3, s7, s14
    6d50:	04 00 00 c2 	add_f s0, s4, s0
    6d54:	45 00 01 c2 	add_f s2, s5, s2
    6d58:	66 80 01 c2 	add_f s3, s6, s3
    6d5c:	1e d0 15 88 	store_32 s0, 1396(sp)
    6d60:	3e 10 16 88 	store_32 s1, 1412(sp)
    6d64:	5e 50 16 88 	store_32 s2, 1428(sp)
    6d68:	7e 90 16 88 	store_32 s3, 1444(sp)
    6d6c:	00 00 fd c0 	move s0, s26
    6d70:	3e d0 04 a8 	load_32 s1, 308(sp)
    6d74:	40 00 fc c0 	move s2, s24
    6d78:	f1 2e 00 f8 	call 48068 <memcpy>
    6d7c:	00 80 fc c0 	move s0, s25
    6d80:	20 00 fd c0 	move s1, s26
    6d84:	40 00 fc c0 	move s2, s24
    6d88:	1e e3 04 88 	store_32 s24, 312(sp)
    6d8c:	69 08 00 f8 	call 8612 <_ZN9librender13RenderContext12bindUniformsEPKvj>
    6d90:	3e e0 10 05 	add_i s1, sp, 1080
    6d94:	3e b0 03 88 	store_32 s1, 236(sp)
    6d98:	00 80 fc c0 	move s0, s25
    6d9c:	63 08 00 f8 	call 8588 <_ZN9librender13RenderContext15bindVertexAttrsEPKNS_12RenderBufferE>
    6da0:	3e 80 10 05 	add_i s1, sp, 1056
    6da4:	3e a0 03 88 	store_32 s1, 232(sp)
    6da8:	00 80 fc c0 	move s0, s25
    6dac:	a6 08 00 f8 	call 8856 <_ZN9librender13RenderContext12drawElementsEPKNS_12RenderBufferE>
    6db0:	00 80 fc c0 	move s0, s25
    6db4:	67 0c 00 f8 	call 12700 <_ZN9librender13RenderContext6finishEv>
    6db8:	1e 00 03 a8 	load_32 s0, 192(sp)
    6dbc:	19 10 01 88 	store_32 s0, 68(s25)
    6dc0:	00 80 fc c0 	move s0, s25
    6dc4:	3e 30 03 a8 	load_32 s1, 204(sp)
    6dc8:	88 08 00 f8 	call 8736 <_ZN9librender13RenderContext10bindTargetEPNS_12RenderTargetE>
    6dcc:	00 80 fc c0 	move s0, s25
    6dd0:	3e f0 02 a8 	load_32 s1, 188(sp)
    6dd4:	98 08 00 f8 	call 8800 <_ZN9librender13RenderContext10bindShaderEPNS_6ShaderE>
    6dd8:	1e 30 04 a8 	load_32 s0, 268(sp)
    6ddc:	19 00 00 82 	store_8 s0, (s25)
    6de0:	1e e0 03 a8 	load_32 s0, 248(sp)
    6de4:	3e d0 03 a8 	load_32 s1, 244(sp)
    6de8:	40 00 fc c0 	move s2, s24
    6dec:	d4 2e 00 f8 	call 47952 <memcpy>
    6df0:	40 90 00 0f 	move s2, 36
    6df4:	5e 90 03 88 	store_32 s2, 228(sp)
    6df8:	1e a0 04 a8 	load_32 s0, 296(sp)
    6dfc:	3e b0 04 a8 	load_32 s1, 300(sp)
    6e00:	ac 2b 00 f8 	call 44720 <memset>
    6e04:	00 00 00 4f 	movehi s0, 0
    6e08:	3e f0 04 a8 	load_32 s1, 316(sp)
    6e0c:	3e 90 16 88 	store_32 s1, 1444(sp)
    6e10:	5e 43 11 05 	add_i s26, sp, 1104
    6e14:	3e c0 0d a8 	load_32 s1, 880(sp)
    6e18:	00 70 06 00 	or s0, s0, 412
    6e1c:	40 00 00 a8 	load_32 s2, (s0)
    6e20:	01 00 21 c2 	mul_f s0, s1, s2
    6e24:	c0 00 f1 c0 	move s6, s2
    6e28:	5e 00 0e a8 	load_32 s2, 896(sp)
    6e2c:	21 80 2d c2 	mul_f s1, s1, s27
    6e30:	9e 40 0e a8 	load_32 s4, 912(sp)
    6e34:	62 80 2d c2 	mul_f s3, s2, s27
    6e38:	a4 80 2d c2 	mul_f s5, s4, s27
    6e3c:	00 80 0d c2 	add_f s0, s0, s27
    6e40:	21 80 0d c2 	add_f s1, s1, s27
    6e44:	42 80 00 c2 	add_f s2, s2, s1
    6e48:	00 80 01 c2 	add_f s0, s0, s3
    6e4c:	21 80 01 c2 	add_f s1, s1, s3
    6e50:	7e 80 0e a8 	load_32 s3, 928(sp)
    6e54:	42 80 02 c2 	add_f s2, s2, s5
    6e58:	63 80 2d c2 	mul_f s3, s3, s27
    6e5c:	00 80 02 c2 	add_f s0, s0, s5
    6e60:	a4 80 00 c2 	add_f s5, s4, s1
    6e64:	21 00 12 c2 	sub_f s1, s1, s4
    6e68:	42 80 01 c2 	add_f s2, s2, s3
    6e6c:	00 80 01 c2 	add_f s0, s0, s3
    6e70:	21 80 01 c2 	add_f s1, s1, s3
    6e74:	1e a0 15 88 	store_32 s0, 1384(sp)
    6e78:	05 80 01 c2 	add_f s0, s5, s3
    6e7c:	5e e0 15 88 	store_32 s2, 1400(sp)
    6e80:	5e 20 04 a8 	load_32 s2, 264(sp)
    6e84:	1e 20 16 88 	store_32 s0, 1416(sp)
    6e88:	3e 60 16 88 	store_32 s1, 1432(sp)
    6e8c:	42 10 00 00 	or s2, s2, 4
    6e90:	02 00 00 a8 	load_32 s0, (s2)
    6e94:	20 03 f1 c0 	move s25, s2
    6e98:	3e 43 04 88 	store_32 s25, 272(sp)
    6e9c:	5e 10 0e a8 	load_32 s2, 900(sp)
    6ea0:	9e 50 0e a8 	load_32 s4, 916(sp)
    6ea4:	20 00 23 c2 	mul_f s1, s0, s6
    6ea8:	be 90 0e a8 	load_32 s5, 932(sp)
    6eac:	00 80 2d c2 	mul_f s0, s0, s27
    6eb0:	62 80 2d c2 	mul_f s3, s2, s27
    6eb4:	21 80 0d c2 	add_f s1, s1, s27
    6eb8:	00 80 0d c2 	add_f s0, s0, s27
    6ebc:	42 00 00 c2 	add_f s2, s2, s0
    6ec0:	21 80 01 c2 	add_f s1, s1, s3
    6ec4:	00 80 01 c2 	add_f s0, s0, s3
    6ec8:	64 80 2d c2 	mul_f s3, s4, s27
    6ecc:	42 80 01 c2 	add_f s2, s2, s3
    6ed0:	21 80 01 c2 	add_f s1, s1, s3
    6ed4:	64 00 00 c2 	add_f s3, s4, s0
    6ed8:	00 00 12 c2 	sub_f s0, s0, s4
    6edc:	85 80 2d c2 	mul_f s4, s5, s27
    6ee0:	42 00 02 c2 	add_f s2, s2, s4
    6ee4:	21 00 02 c2 	add_f s1, s1, s4
    6ee8:	63 00 02 c2 	add_f s3, s3, s4
    6eec:	00 00 02 c2 	add_f s0, s0, s4
    6ef0:	9e c0 04 a8 	load_32 s4, 304(sp)
    6ef4:	24 00 00 88 	store_32 s1, (s4)
    6ef8:	5e f0 15 88 	store_32 s2, 1404(sp)
    6efc:	7e 30 16 88 	store_32 s3, 1420(sp)
    6f00:	1e 70 16 88 	store_32 s0, 1436(sp)
    6f04:	1e e0 0d a8 	load_32 s0, 888(sp)
    6f08:	de 60 03 88 	store_32 s6, 216(sp)
    6f0c:	5e 20 0e a8 	load_32 s2, 904(sp)
    6f10:	9e 60 0e a8 	load_32 s4, 920(sp)
    6f14:	20 00 23 c2 	mul_f s1, s0, s6
    6f18:	be a0 0e a8 	load_32 s5, 936(sp)
    6f1c:	00 80 2d c2 	mul_f s0, s0, s27
    6f20:	62 80 2d c2 	mul_f s3, s2, s27
    6f24:	21 80 0d c2 	add_f s1, s1, s27
    6f28:	00 80 0d c2 	add_f s0, s0, s27
    6f2c:	42 00 00 c2 	add_f s2, s2, s0
    6f30:	21 80 01 c2 	add_f s1, s1, s3
    6f34:	00 80 01 c2 	add_f s0, s0, s3
    6f38:	64 80 2d c2 	mul_f s3, s4, s27
    6f3c:	42 80 01 c2 	add_f s2, s2, s3
    6f40:	21 80 01 c2 	add_f s1, s1, s3
    6f44:	64 00 00 c2 	add_f s3, s4, s0
    6f48:	00 00 12 c2 	sub_f s0, s0, s4
    6f4c:	85 80 2d c2 	mul_f s4, s5, s27
    6f50:	42 00 02 c2 	add_f s2, s2, s4
    6f54:	21 00 02 c2 	add_f s1, s1, s4
    6f58:	63 00 02 c2 	add_f s3, s3, s4
    6f5c:	00 00 02 c2 	add_f s0, s0, s4
    6f60:	3e c0 15 88 	store_32 s1, 1392(sp)
    6f64:	5e 00 16 88 	store_32 s2, 1408(sp)
    6f68:	7e 40 16 88 	store_32 s3, 1424(sp)
    6f6c:	1e 80 16 88 	store_32 s0, 1440(sp)
    6f70:	1e f0 0d a8 	load_32 s0, 892(sp)
    6f74:	5e 30 0e a8 	load_32 s2, 908(sp)
    6f78:	9e 70 0e a8 	load_32 s4, 924(sp)
    6f7c:	1e b3 0e a8 	load_32 s24, 940(sp)
    6f80:	20 00 23 c2 	mul_f s1, s0, s6
    6f84:	00 80 2d c2 	mul_f s0, s0, s27
    6f88:	62 80 2d c2 	mul_f s3, s2, s27
    6f8c:	21 80 0d c2 	add_f s1, s1, s27
    6f90:	00 80 0d c2 	add_f s0, s0, s27
    6f94:	42 00 00 c2 	add_f s2, s2, s0
    6f98:	21 80 01 c2 	add_f s1, s1, s3
    6f9c:	00 80 01 c2 	add_f s0, s0, s3
    6fa0:	64 80 2d c2 	mul_f s3, s4, s27
    6fa4:	42 80 01 c2 	add_f s2, s2, s3
    6fa8:	21 80 01 c2 	add_f s1, s1, s3
    6fac:	64 00 00 c2 	add_f s3, s4, s0
    6fb0:	00 00 12 c2 	sub_f s0, s0, s4
    6fb4:	98 80 2d c2 	mul_f s4, s24, s27
    6fb8:	42 00 02 c2 	add_f s2, s2, s4
    6fbc:	21 00 02 c2 	add_f s1, s1, s4
    6fc0:	63 00 02 c2 	add_f s3, s3, s4
    6fc4:	00 00 02 c2 	add_f s0, s0, s4
    6fc8:	3e d0 15 88 	store_32 s1, 1396(sp)
    6fcc:	5e 10 16 88 	store_32 s2, 1412(sp)
    6fd0:	7e 50 16 88 	store_32 s3, 1428(sp)
    6fd4:	1e 90 16 88 	store_32 s0, 1444(sp)
    6fd8:	00 00 fd c0 	move s0, s26
    6fdc:	5e 73 03 88 	store_32 s26, 220(sp)
    6fe0:	3e d0 04 a8 	load_32 s1, 308(sp)
    6fe4:	5e e0 04 a8 	load_32 s2, 312(sp)
    6fe8:	55 2e 00 f8 	call 47444 <memcpy>
    6fec:	3e b0 02 a8 	load_32 s1, 172(sp)
    6ff0:	01 00 00 a8 	load_32 s0, (s1)
    6ff4:	1e a0 15 88 	store_32 s0, 1384(sp)
    6ff8:	01 10 00 a8 	load_32 s0, 4(s1)
    6ffc:	1e b0 15 88 	store_32 s0, 1388(sp)
    7000:	01 20 00 a8 	load_32 s0, 8(s1)
    7004:	1e c0 15 88 	store_32 s0, 1392(sp)
    7008:	1e b0 04 a8 	load_32 s0, 300(sp)
    700c:	3e a0 04 a8 	load_32 s1, 296(sp)
    7010:	01 30 00 88 	store_32 s0, 12(s1)
    7014:	01 20 00 88 	store_32 s0, 8(s1)
    7018:	01 10 00 88 	store_32 s0, 4(s1)
    701c:	01 00 00 88 	store_32 s0, (s1)
    7020:	60 00 f0 c0 	move s3, s0
    7024:	1e e0 0d a8 	load_32 s0, 888(sp)
    7028:	3e 10 04 a8 	load_32 s1, 260(sp)
    702c:	01 20 00 88 	store_32 s0, 8(s1)
    7030:	19 00 00 a8 	load_32 s0, (s25)
    7034:	01 10 00 88 	store_32 s0, 4(s1)
    7038:	1e c0 0d a8 	load_32 s0, 880(sp)
    703c:	01 00 00 88 	store_32 s0, (s1)
    7040:	7e 70 12 88 	store_32 s3, 1180(sp)
    7044:	3e c0 02 a8 	load_32 s1, 176(sp)
    7048:	01 20 00 a8 	load_32 s0, 8(s1)
    704c:	5e 00 04 a8 	load_32 s2, 256(sp)
    7050:	02 20 00 88 	store_32 s0, 8(s2)
    7054:	01 10 00 a8 	load_32 s0, 4(s1)
    7058:	02 10 00 88 	store_32 s0, 4(s2)
    705c:	01 00 00 a8 	load_32 s0, (s1)
    7060:	02 00 00 88 	store_32 s0, (s2)
    7064:	40 50 03 0f 	move s2, 212
    7068:	7e b0 12 88 	store_32 s3, 1196(sp)
    706c:	20 83 f1 c0 	move s25, s3
    7070:	1e 00 16 a8 	load_32 s0, 1408(sp)
    7074:	3e f0 03 a8 	load_32 s1, 252(sp)
    7078:	01 60 00 88 	store_32 s0, 24(s1)
    707c:	1e f0 15 a8 	load_32 s0, 1404(sp)
    7080:	01 50 00 88 	store_32 s0, 20(s1)
    7084:	1e e0 15 a8 	load_32 s0, 1400(sp)
    7088:	01 40 00 88 	store_32 s0, 16(s1)
    708c:	1e d0 15 a8 	load_32 s0, 1396(sp)
    7090:	01 30 00 88 	store_32 s0, 12(s1)
    7094:	1e c0 15 a8 	load_32 s0, 1392(sp)
    7098:	01 20 00 88 	store_32 s0, 8(s1)
    709c:	1e b0 15 a8 	load_32 s0, 1388(sp)
    70a0:	01 10 00 88 	store_32 s0, 4(s1)
    70a4:	1e a0 15 a8 	load_32 s0, 1384(sp)
    70a8:	01 00 00 88 	store_32 s0, (s1)
    70ac:	1e 33 13 88 	store_32 s24, 1228(sp)
    70b0:	5e 80 03 88 	store_32 s2, 224(sp)
    70b4:	1e 73 04 a8 	load_32 s24, 284(sp)
    70b8:	00 00 fc c0 	move s0, s24
    70bc:	20 00 fd c0 	move s1, s26
    70c0:	9c 07 00 f8 	call 7792 <_ZN9librender13RenderContext12bindUniformsEPKvj>
    70c4:	00 00 fc c0 	move s0, s24
    70c8:	3e 50 03 a8 	load_32 s1, 212(sp)
    70cc:	97 07 00 f8 	call 7772 <_ZN9librender13RenderContext15bindVertexAttrsEPKNS_12RenderBufferE>
    70d0:	00 00 fc c0 	move s0, s24
    70d4:	3e 40 03 a8 	load_32 s1, 208(sp)
    70d8:	db 07 00 f8 	call 8044 <_ZN9librender13RenderContext12drawElementsEPKNS_12RenderBufferE>
    70dc:	1e 80 02 a8 	load_32 s0, 160(sp)
    70e0:	20 80 fc c0 	move s1, s25
    70e4:	40 83 fc c0 	move s26, s25
    70e8:	1e 83 04 a8 	load_32 s24, 288(sp)
    70ec:	40 00 fc c0 	move s2, s24
    70f0:	f0 2a 00 f8 	call 43968 <memset>
    70f4:	1e f0 04 a8 	load_32 s0, 316(sp)
    70f8:	1e 20 0a 88 	store_32 s0, 648(sp)
    70fc:	1e 70 0a 88 	store_32 s0, 668(sp)
    7100:	1e 40 04 a8 	load_32 s0, 272(sp)
    7104:	c0 01 00 a8 	load_32 s14, (s0)
    7108:	9e e0 0d a8 	load_32 s4, 888(sp)
    710c:	1e f0 0d a8 	load_32 s0, 892(sp)
    7110:	be 01 0e a8 	load_32 s13, 896(sp)
    7114:	be 10 0e a8 	load_32 s5, 900(sp)
    7118:	5e 20 0e a8 	load_32 s2, 904(sp)
    711c:	3e 30 0e a8 	load_32 s1, 908(sp)
    7120:	9e 41 0e a8 	load_32 s12, 912(sp)
    7124:	1e 51 0e a8 	load_32 s8, 916(sp)
    7128:	de 60 0e a8 	load_32 s6, 920(sp)
    712c:	7e 70 0e a8 	load_32 s3, 924(sp)
    7130:	7e 81 0e a8 	load_32 s11, 928(sp)
    7134:	5e 91 0e a8 	load_32 s10, 932(sp)
    7138:	3e a1 0e a8 	load_32 s9, 936(sp)
    713c:	fe b0 0e a8 	load_32 s7, 940(sp)
    7140:	fe c1 0d a8 	load_32 s15, 880(sp)
    7144:	1e c2 0e a8 	load_32 s16, 944(sp)
    7148:	5e 02 0f a8 	load_32 s18, 960(sp)
    714c:	2f 02 28 c2 	mul_f s17, s15, s16
    7150:	6d 02 28 c2 	mul_f s19, s13, s16
    7154:	8c 02 28 c2 	mul_f s20, s12, s16
    7158:	0b 02 28 c2 	mul_f s16, s11, s16
    715c:	ae 02 29 c2 	mul_f s21, s14, s18
    7160:	31 82 0d c2 	add_f s17, s17, s27
    7164:	73 82 0d c2 	add_f s19, s19, s27
    7168:	94 82 0d c2 	add_f s20, s20, s27
    716c:	10 82 0d c2 	add_f s16, s16, s27
    7170:	31 82 0a c2 	add_f s17, s17, s21
    7174:	be 42 0f a8 	load_32 s21, 976(sp)
    7178:	c4 82 2a c2 	mul_f s22, s4, s21
    717c:	31 02 0b c2 	add_f s17, s17, s22
    7180:	c5 02 29 c2 	mul_f s22, s5, s18
    7184:	73 02 0b c2 	add_f s19, s19, s22
    7188:	c8 02 29 c2 	mul_f s22, s8, s18
    718c:	94 02 0b c2 	add_f s20, s20, s22
    7190:	de 82 0f a8 	load_32 s22, 992(sp)
    7194:	4a 02 29 c2 	mul_f s18, s10, s18
    7198:	10 02 09 c2 	add_f s16, s16, s18
    719c:	42 82 2a c2 	mul_f s18, s2, s21
    71a0:	53 02 09 c2 	add_f s18, s19, s18
    71a4:	66 82 2a c2 	mul_f s19, s6, s21
    71a8:	74 82 09 c2 	add_f s19, s20, s19
    71ac:	a9 82 2a c2 	mul_f s21, s9, s21
    71b0:	10 82 0a c2 	add_f s16, s16, s21
    71b4:	80 02 2b c2 	mul_f s20, s0, s22
    71b8:	31 02 0a c2 	add_f s17, s17, s20
    71bc:	81 02 2b c2 	mul_f s20, s1, s22
    71c0:	52 02 0a c2 	add_f s18, s18, s20
    71c4:	83 02 2b c2 	mul_f s20, s3, s22
    71c8:	73 02 0a c2 	add_f s19, s19, s20
    71cc:	3e 82 09 88 	store_32 s17, 608(sp)
    71d0:	87 02 2b c2 	mul_f s20, s7, s22
    71d4:	10 02 0a c2 	add_f s16, s16, s20
    71d8:	5e c2 09 88 	store_32 s18, 624(sp)
    71dc:	7e 02 0a 88 	store_32 s19, 640(sp)
    71e0:	1e 42 0a 88 	store_32 s16, 656(sp)
    71e4:	3e 63 04 a8 	load_32 s25, 280(sp)
    71e8:	19 02 00 a8 	load_32 s16, (s25)
    71ec:	5e 12 0f a8 	load_32 s18, 964(sp)
    71f0:	2f 02 28 c2 	mul_f s17, s15, s16
    71f4:	6d 02 28 c2 	mul_f s19, s13, s16
    71f8:	8c 02 28 c2 	mul_f s20, s12, s16
    71fc:	0b 02 28 c2 	mul_f s16, s11, s16
    7200:	ae 02 29 c2 	mul_f s21, s14, s18
    7204:	31 82 0d c2 	add_f s17, s17, s27
    7208:	73 82 0d c2 	add_f s19, s19, s27
    720c:	94 82 0d c2 	add_f s20, s20, s27
    7210:	10 82 0d c2 	add_f s16, s16, s27
    7214:	31 82 0a c2 	add_f s17, s17, s21
    7218:	be 52 0f a8 	load_32 s21, 980(sp)
    721c:	c4 82 2a c2 	mul_f s22, s4, s21
    7220:	31 02 0b c2 	add_f s17, s17, s22
    7224:	c5 02 29 c2 	mul_f s22, s5, s18
    7228:	73 02 0b c2 	add_f s19, s19, s22
    722c:	c8 02 29 c2 	mul_f s22, s8, s18
    7230:	94 02 0b c2 	add_f s20, s20, s22
    7234:	de 92 0f a8 	load_32 s22, 996(sp)
    7238:	4a 02 29 c2 	mul_f s18, s10, s18
    723c:	10 02 09 c2 	add_f s16, s16, s18
    7240:	42 82 2a c2 	mul_f s18, s2, s21
    7244:	53 02 09 c2 	add_f s18, s19, s18
    7248:	66 82 2a c2 	mul_f s19, s6, s21
    724c:	74 82 09 c2 	add_f s19, s20, s19
    7250:	a9 82 2a c2 	mul_f s21, s9, s21
    7254:	10 82 0a c2 	add_f s16, s16, s21
    7258:	80 02 2b c2 	mul_f s20, s0, s22
    725c:	31 02 0a c2 	add_f s17, s17, s20
    7260:	81 02 2b c2 	mul_f s20, s1, s22
    7264:	52 02 0a c2 	add_f s18, s18, s20
    7268:	83 02 2b c2 	mul_f s20, s3, s22
    726c:	73 02 0a c2 	add_f s19, s19, s20
    7270:	87 02 2b c2 	mul_f s20, s7, s22
    7274:	10 02 0a c2 	add_f s16, s16, s20
    7278:	9e 52 04 a8 	load_32 s20, 276(sp)
    727c:	34 02 00 88 	store_32 s17, (s20)
    7280:	5e d2 09 88 	store_32 s18, 628(sp)
    7284:	7e 12 0a 88 	store_32 s19, 644(sp)
    7288:	1e 52 0a 88 	store_32 s16, 660(sp)
    728c:	1e e2 0e a8 	load_32 s16, 952(sp)
    7290:	5e 22 0f a8 	load_32 s18, 968(sp)
    7294:	2f 02 28 c2 	mul_f s17, s15, s16
    7298:	6d 02 28 c2 	mul_f s19, s13, s16
    729c:	8c 02 28 c2 	mul_f s20, s12, s16
    72a0:	0b 02 28 c2 	mul_f s16, s11, s16
    72a4:	ae 02 29 c2 	mul_f s21, s14, s18
    72a8:	31 82 0d c2 	add_f s17, s17, s27
    72ac:	73 82 0d c2 	add_f s19, s19, s27
    72b0:	94 82 0d c2 	add_f s20, s20, s27
    72b4:	10 82 0d c2 	add_f s16, s16, s27
    72b8:	31 82 0a c2 	add_f s17, s17, s21
    72bc:	be 62 0f a8 	load_32 s21, 984(sp)
    72c0:	c4 82 2a c2 	mul_f s22, s4, s21
    72c4:	31 02 0b c2 	add_f s17, s17, s22
    72c8:	c5 02 29 c2 	mul_f s22, s5, s18
    72cc:	73 02 0b c2 	add_f s19, s19, s22
    72d0:	c8 02 29 c2 	mul_f s22, s8, s18
    72d4:	4a 02 29 c2 	mul_f s18, s10, s18
    72d8:	94 02 0b c2 	add_f s20, s20, s22
    72dc:	10 02 09 c2 	add_f s16, s16, s18
    72e0:	5e a2 0f a8 	load_32 s18, 1000(sp)
    72e4:	c2 82 2a c2 	mul_f s22, s2, s21
    72e8:	73 02 0b c2 	add_f s19, s19, s22
    72ec:	c6 82 2a c2 	mul_f s22, s6, s21
    72f0:	a9 82 2a c2 	mul_f s21, s9, s21
    72f4:	94 02 0b c2 	add_f s20, s20, s22
    72f8:	10 82 0a c2 	add_f s16, s16, s21
    72fc:	a0 02 29 c2 	mul_f s21, s0, s18
    7300:	31 82 0a c2 	add_f s17, s17, s21
    7304:	a1 02 29 c2 	mul_f s21, s1, s18
    7308:	73 82 0a c2 	add_f s19, s19, s21
    730c:	a3 02 29 c2 	mul_f s21, s3, s18
    7310:	47 02 29 c2 	mul_f s18, s7, s18
    7314:	3e a2 09 88 	store_32 s17, 616(sp)
    7318:	94 82 0a c2 	add_f s20, s20, s21
    731c:	10 02 09 c2 	add_f s16, s16, s18
    7320:	7e e2 09 88 	store_32 s19, 632(sp)
    7324:	9e 22 0a 88 	store_32 s20, 648(sp)
    7328:	1e 62 0a 88 	store_32 s16, 664(sp)
    732c:	1e f2 0e a8 	load_32 s16, 956(sp)
    7330:	3e 32 0f a8 	load_32 s17, 972(sp)
    7334:	ad 01 28 c2 	mul_f s13, s13, s16
    7338:	ef 01 28 c2 	mul_f s15, s15, s16
    733c:	8c 01 28 c2 	mul_f s12, s12, s16
    7340:	6b 01 28 c2 	mul_f s11, s11, s16
    7344:	a5 80 28 c2 	mul_f s5, s5, s17
    7348:	ce 81 28 c2 	mul_f s14, s14, s17
    734c:	08 81 28 c2 	mul_f s8, s8, s17
    7350:	ad 81 0d c2 	add_f s13, s13, s27
    7354:	ef 81 0d c2 	add_f s15, s15, s27
    7358:	8c 81 0d c2 	add_f s12, s12, s27
    735c:	6b 81 0d c2 	add_f s11, s11, s27
    7360:	4a 81 28 c2 	mul_f s10, s10, s17
    7364:	ad 80 02 c2 	add_f s5, s13, s5
    7368:	cf 01 07 c2 	add_f s14, s15, s14
    736c:	fe 71 0f a8 	load_32 s15, 988(sp)
    7370:	0c 01 04 c2 	add_f s8, s12, s8
    7374:	4b 01 05 c2 	add_f s10, s11, s10
    7378:	42 80 27 c2 	mul_f s2, s2, s15
    737c:	84 80 27 c2 	mul_f s4, s4, s15
    7380:	45 00 01 c2 	add_f s2, s5, s2
    7384:	a6 80 27 c2 	mul_f s5, s6, s15
    7388:	c9 80 27 c2 	mul_f s6, s9, s15
    738c:	8e 00 02 c2 	add_f s4, s14, s4
    7390:	de b1 0f a8 	load_32 s14, 1004(sp)
    7394:	a8 80 02 c2 	add_f s5, s8, s5
    7398:	ca 00 03 c2 	add_f s6, s10, s6
    739c:	21 00 27 c2 	mul_f s1, s1, s14
    73a0:	00 00 27 c2 	mul_f s0, s0, s14
    73a4:	22 80 00 c2 	add_f s1, s2, s1
    73a8:	43 00 27 c2 	mul_f s2, s3, s14
    73ac:	67 00 27 c2 	mul_f s3, s7, s14
    73b0:	04 00 00 c2 	add_f s0, s4, s0
    73b4:	45 00 01 c2 	add_f s2, s5, s2
    73b8:	66 80 01 c2 	add_f s3, s6, s3
    73bc:	1e b0 09 88 	store_32 s0, 620(sp)
    73c0:	3e f0 09 88 	store_32 s1, 636(sp)
    73c4:	5e 30 0a 88 	store_32 s2, 652(sp)
    73c8:	7e 70 0a 88 	store_32 s3, 668(sp)
    73cc:	1e 90 04 a8 	load_32 s0, 292(sp)
    73d0:	20 00 fd c0 	move s1, s26
    73d4:	40 00 fc c0 	move s2, s24
    73d8:	36 2a 00 f8 	call 43224 <memset>
    73dc:	1e f0 04 a8 	load_32 s0, 316(sp)
    73e0:	1e 40 16 88 	store_32 s0, 1424(sp)
    73e4:	1e 90 16 88 	store_32 s0, 1444(sp)
    73e8:	1e c0 03 a8 	load_32 s0, 240(sp)
    73ec:	c0 01 00 a8 	load_32 s14, (s0)
    73f0:	de e0 0a a8 	load_32 s6, 696(sp)
    73f4:	3e f0 0a a8 	load_32 s1, 700(sp)
    73f8:	be 01 0b a8 	load_32 s13, 704(sp)
    73fc:	9e 10 0b a8 	load_32 s4, 708(sp)
    7400:	5e 20 0b a8 	load_32 s2, 712(sp)
    7404:	1e 30 0b a8 	load_32 s0, 716(sp)
    7408:	9e 41 0b a8 	load_32 s12, 720(sp)
    740c:	1e 51 0b a8 	load_32 s8, 724(sp)
    7410:	be 60 0b a8 	load_32 s5, 728(sp)
    7414:	7e 70 0b a8 	load_32 s3, 732(sp)
    7418:	7e 81 0b a8 	load_32 s11, 736(sp)
    741c:	5e 91 0b a8 	load_32 s10, 740(sp)
    7420:	3e a1 0b a8 	load_32 s9, 744(sp)
    7424:	fe b0 0b a8 	load_32 s7, 748(sp)
    7428:	fe c1 0a a8 	load_32 s15, 688(sp)
    742c:	1e c2 0e a8 	load_32 s16, 944(sp)
    7430:	5e 02 0f a8 	load_32 s18, 960(sp)
    7434:	2f 02 28 c2 	mul_f s17, s15, s16
    7438:	6d 02 28 c2 	mul_f s19, s13, s16
    743c:	8c 02 28 c2 	mul_f s20, s12, s16
    7440:	0b 02 28 c2 	mul_f s16, s11, s16
    7444:	ae 02 29 c2 	mul_f s21, s14, s18
    7448:	31 82 0d c2 	add_f s17, s17, s27
    744c:	73 82 0d c2 	add_f s19, s19, s27
    7450:	94 82 0d c2 	add_f s20, s20, s27
    7454:	10 82 0d c2 	add_f s16, s16, s27
    7458:	31 82 0a c2 	add_f s17, s17, s21
    745c:	be 42 0f a8 	load_32 s21, 976(sp)
    7460:	c6 82 2a c2 	mul_f s22, s6, s21
    7464:	31 02 0b c2 	add_f s17, s17, s22
    7468:	c4 02 29 c2 	mul_f s22, s4, s18
    746c:	73 02 0b c2 	add_f s19, s19, s22
    7470:	c8 02 29 c2 	mul_f s22, s8, s18
    7474:	94 02 0b c2 	add_f s20, s20, s22
    7478:	de 82 0f a8 	load_32 s22, 992(sp)
    747c:	4a 02 29 c2 	mul_f s18, s10, s18
    7480:	10 02 09 c2 	add_f s16, s16, s18
    7484:	42 82 2a c2 	mul_f s18, s2, s21
    7488:	53 02 09 c2 	add_f s18, s19, s18
    748c:	65 82 2a c2 	mul_f s19, s5, s21
    7490:	74 82 09 c2 	add_f s19, s20, s19
    7494:	a9 82 2a c2 	mul_f s21, s9, s21
    7498:	10 82 0a c2 	add_f s16, s16, s21
    749c:	81 02 2b c2 	mul_f s20, s1, s22
    74a0:	31 02 0a c2 	add_f s17, s17, s20
    74a4:	80 02 2b c2 	mul_f s20, s0, s22
    74a8:	52 02 0a c2 	add_f s18, s18, s20
    74ac:	83 02 2b c2 	mul_f s20, s3, s22
    74b0:	73 02 0a c2 	add_f s19, s19, s20
    74b4:	3e a2 15 88 	store_32 s17, 1384(sp)
    74b8:	87 02 2b c2 	mul_f s20, s7, s22
    74bc:	10 02 0a c2 	add_f s16, s16, s20
    74c0:	5e e2 15 88 	store_32 s18, 1400(sp)
    74c4:	7e 22 16 88 	store_32 s19, 1416(sp)
    74c8:	1e 62 16 88 	store_32 s16, 1432(sp)
    74cc:	19 02 00 a8 	load_32 s16, (s25)
    74d0:	5e 12 0f a8 	load_32 s18, 964(sp)
    74d4:	2f 02 28 c2 	mul_f s17, s15, s16
    74d8:	6d 02 28 c2 	mul_f s19, s13, s16
    74dc:	8c 02 28 c2 	mul_f s20, s12, s16
    74e0:	0b 02 28 c2 	mul_f s16, s11, s16
    74e4:	ae 02 29 c2 	mul_f s21, s14, s18
    74e8:	31 82 0d c2 	add_f s17, s17, s27
    74ec:	73 82 0d c2 	add_f s19, s19, s27
    74f0:	94 82 0d c2 	add_f s20, s20, s27
    74f4:	10 82 0d c2 	add_f s16, s16, s27
    74f8:	31 82 0a c2 	add_f s17, s17, s21
    74fc:	be 52 0f a8 	load_32 s21, 980(sp)
    7500:	c6 82 2a c2 	mul_f s22, s6, s21
    7504:	31 02 0b c2 	add_f s17, s17, s22
    7508:	c4 02 29 c2 	mul_f s22, s4, s18
    750c:	73 02 0b c2 	add_f s19, s19, s22
    7510:	c8 02 29 c2 	mul_f s22, s8, s18
    7514:	94 02 0b c2 	add_f s20, s20, s22
    7518:	de 92 0f a8 	load_32 s22, 996(sp)
    751c:	4a 02 29 c2 	mul_f s18, s10, s18
    7520:	1e c3 04 a8 	load_32 s24, 304(sp)
    7524:	10 02 09 c2 	add_f s16, s16, s18
    7528:	42 82 2a c2 	mul_f s18, s2, s21
    752c:	53 02 09 c2 	add_f s18, s19, s18
    7530:	65 82 2a c2 	mul_f s19, s5, s21
    7534:	74 82 09 c2 	add_f s19, s20, s19
    7538:	a9 82 2a c2 	mul_f s21, s9, s21
    753c:	10 82 0a c2 	add_f s16, s16, s21
    7540:	81 02 2b c2 	mul_f s20, s1, s22
    7544:	31 02 0a c2 	add_f s17, s17, s20
    7548:	80 02 2b c2 	mul_f s20, s0, s22
    754c:	52 02 0a c2 	add_f s18, s18, s20
    7550:	83 02 2b c2 	mul_f s20, s3, s22
    7554:	73 02 0a c2 	add_f s19, s19, s20
    7558:	38 02 00 88 	store_32 s17, (s24)
    755c:	87 02 2b c2 	mul_f s20, s7, s22
    7560:	10 02 0a c2 	add_f s16, s16, s20
    7564:	5e f2 15 88 	store_32 s18, 1404(sp)
    7568:	7e 32 16 88 	store_32 s19, 1420(sp)
    756c:	1e 72 16 88 	store_32 s16, 1436(sp)
    7570:	1e e2 0e a8 	load_32 s16, 952(sp)
    7574:	5e 22 0f a8 	load_32 s18, 968(sp)
    7578:	2f 02 28 c2 	mul_f s17, s15, s16
    757c:	6d 02 28 c2 	mul_f s19, s13, s16
    7580:	8c 02 28 c2 	mul_f s20, s12, s16
    7584:	0b 02 28 c2 	mul_f s16, s11, s16
    7588:	ae 02 29 c2 	mul_f s21, s14, s18
    758c:	31 82 0d c2 	add_f s17, s17, s27
    7590:	73 82 0d c2 	add_f s19, s19, s27
    7594:	94 82 0d c2 	add_f s20, s20, s27
    7598:	10 82 0d c2 	add_f s16, s16, s27
    759c:	31 82 0a c2 	add_f s17, s17, s21
    75a0:	be 62 0f a8 	load_32 s21, 984(sp)
    75a4:	c6 82 2a c2 	mul_f s22, s6, s21
    75a8:	31 02 0b c2 	add_f s17, s17, s22
    75ac:	c4 02 29 c2 	mul_f s22, s4, s18
    75b0:	73 02 0b c2 	add_f s19, s19, s22
    75b4:	c8 02 29 c2 	mul_f s22, s8, s18
    75b8:	4a 02 29 c2 	mul_f s18, s10, s18
    75bc:	94 02 0b c2 	add_f s20, s20, s22
    75c0:	10 02 09 c2 	add_f s16, s16, s18
    75c4:	5e a2 0f a8 	load_32 s18, 1000(sp)
    75c8:	c2 82 2a c2 	mul_f s22, s2, s21
    75cc:	73 02 0b c2 	add_f s19, s19, s22
    75d0:	c5 82 2a c2 	mul_f s22, s5, s21
    75d4:	a9 82 2a c2 	mul_f s21, s9, s21
    75d8:	94 02 0b c2 	add_f s20, s20, s22
    75dc:	10 82 0a c2 	add_f s16, s16, s21
    75e0:	a1 02 29 c2 	mul_f s21, s1, s18
    75e4:	31 82 0a c2 	add_f s17, s17, s21
    75e8:	a0 02 29 c2 	mul_f s21, s0, s18
    75ec:	73 82 0a c2 	add_f s19, s19, s21
    75f0:	a3 02 29 c2 	mul_f s21, s3, s18
    75f4:	47 02 29 c2 	mul_f s18, s7, s18
    75f8:	3e c2 15 88 	store_32 s17, 1392(sp)
    75fc:	94 82 0a c2 	add_f s20, s20, s21
    7600:	10 02 09 c2 	add_f s16, s16, s18
    7604:	7e 02 16 88 	store_32 s19, 1408(sp)
    7608:	9e 42 16 88 	store_32 s20, 1424(sp)
    760c:	1e 82 16 88 	store_32 s16, 1440(sp)
    7610:	1e f2 0e a8 	load_32 s16, 956(sp)
    7614:	3e 32 0f a8 	load_32 s17, 972(sp)
    7618:	ad 01 28 c2 	mul_f s13, s13, s16
    761c:	ef 01 28 c2 	mul_f s15, s15, s16
    7620:	8c 01 28 c2 	mul_f s12, s12, s16
    7624:	6b 01 28 c2 	mul_f s11, s11, s16
    7628:	84 80 28 c2 	mul_f s4, s4, s17
    762c:	ce 81 28 c2 	mul_f s14, s14, s17
    7630:	08 81 28 c2 	mul_f s8, s8, s17
    7634:	ad 81 0d c2 	add_f s13, s13, s27
    7638:	ef 81 0d c2 	add_f s15, s15, s27
    763c:	8c 81 0d c2 	add_f s12, s12, s27
    7640:	6b 81 0d c2 	add_f s11, s11, s27
    7644:	4a 81 28 c2 	mul_f s10, s10, s17
    7648:	8d 00 02 c2 	add_f s4, s13, s4
    764c:	cf 01 07 c2 	add_f s14, s15, s14
    7650:	fe 71 0f a8 	load_32 s15, 988(sp)
    7654:	0c 01 04 c2 	add_f s8, s12, s8
    7658:	4b 01 05 c2 	add_f s10, s11, s10
    765c:	42 80 27 c2 	mul_f s2, s2, s15
    7660:	c6 80 27 c2 	mul_f s6, s6, s15
    7664:	44 00 01 c2 	add_f s2, s4, s2
    7668:	85 80 27 c2 	mul_f s4, s5, s15
    766c:	a9 80 27 c2 	mul_f s5, s9, s15
    7670:	ce 00 03 c2 	add_f s6, s14, s6
    7674:	de b1 0f a8 	load_32 s14, 1004(sp)
    7678:	88 00 02 c2 	add_f s4, s8, s4
    767c:	aa 80 02 c2 	add_f s5, s10, s5
    7680:	00 00 27 c2 	mul_f s0, s0, s14
    7684:	21 00 27 c2 	mul_f s1, s1, s14
    7688:	02 00 00 c2 	add_f s0, s2, s0
    768c:	43 00 27 c2 	mul_f s2, s3, s14
    7690:	67 00 27 c2 	mul_f s3, s7, s14
    7694:	26 80 00 c2 	add_f s1, s6, s1
    7698:	44 00 01 c2 	add_f s2, s4, s2
    769c:	65 80 01 c2 	add_f s3, s5, s3
    76a0:	3e d0 15 88 	store_32 s1, 1396(sp)
    76a4:	1e 10 16 88 	store_32 s0, 1412(sp)
    76a8:	5e 50 16 88 	store_32 s2, 1428(sp)
    76ac:	7e 90 16 88 	store_32 s3, 1444(sp)
    76b0:	1e e0 03 a8 	load_32 s0, 248(sp)
    76b4:	3e d3 04 a8 	load_32 s25, 308(sp)
    76b8:	20 80 fc c0 	move s1, s25
    76bc:	5e e0 04 a8 	load_32 s2, 312(sp)
    76c0:	9f 2c 00 f8 	call 45692 <memcpy>
    76c4:	1e a0 04 a8 	load_32 s0, 296(sp)
    76c8:	20 00 fd c0 	move s1, s26
    76cc:	5e 90 03 a8 	load_32 s2, 228(sp)
    76d0:	78 29 00 f8 	call 42464 <memset>
    76d4:	1e f0 04 a8 	load_32 s0, 316(sp)
    76d8:	1e 90 16 88 	store_32 s0, 1444(sp)
    76dc:	1e 80 09 a8 	load_32 s0, 608(sp)
    76e0:	de 60 03 a8 	load_32 s6, 216(sp)
    76e4:	5e c0 09 a8 	load_32 s2, 624(sp)
    76e8:	9e 00 0a a8 	load_32 s4, 640(sp)
    76ec:	be 40 0a a8 	load_32 s5, 656(sp)
    76f0:	20 00 23 c2 	mul_f s1, s0, s6
    76f4:	00 80 2d c2 	mul_f s0, s0, s27
    76f8:	62 80 2d c2 	mul_f s3, s2, s27
    76fc:	21 80 0d c2 	add_f s1, s1, s27
    7700:	00 80 0d c2 	add_f s0, s0, s27
    7704:	42 00 00 c2 	add_f s2, s2, s0
    7708:	21 80 01 c2 	add_f s1, s1, s3
    770c:	00 80 01 c2 	add_f s0, s0, s3
    7710:	64 80 2d c2 	mul_f s3, s4, s27
    7714:	42 80 01 c2 	add_f s2, s2, s3
    7718:	21 80 01 c2 	add_f s1, s1, s3
    771c:	64 00 00 c2 	add_f s3, s4, s0
    7720:	00 00 12 c2 	sub_f s0, s0, s4
    7724:	85 80 2d c2 	mul_f s4, s5, s27
    7728:	42 00 02 c2 	add_f s2, s2, s4
    772c:	21 00 02 c2 	add_f s1, s1, s4
    7730:	63 00 02 c2 	add_f s3, s3, s4
    7734:	00 00 02 c2 	add_f s0, s0, s4
    7738:	3e a0 15 88 	store_32 s1, 1384(sp)
    773c:	5e e0 15 88 	store_32 s2, 1400(sp)
    7740:	7e 20 16 88 	store_32 s3, 1416(sp)
    7744:	1e 60 16 88 	store_32 s0, 1432(sp)
    7748:	1e 50 04 a8 	load_32 s0, 276(sp)
    774c:	00 00 00 a8 	load_32 s0, (s0)
    7750:	5e d0 09 a8 	load_32 s2, 628(sp)
    7754:	9e 10 0a a8 	load_32 s4, 644(sp)
    7758:	be 50 0a a8 	load_32 s5, 660(sp)
    775c:	20 00 23 c2 	mul_f s1, s0, s6
    7760:	00 80 2d c2 	mul_f s0, s0, s27
    7764:	62 80 2d c2 	mul_f s3, s2, s27
    7768:	21 80 0d c2 	add_f s1, s1, s27
    776c:	00 80 0d c2 	add_f s0, s0, s27
    7770:	42 00 00 c2 	add_f s2, s2, s0
    7774:	21 80 01 c2 	add_f s1, s1, s3
    7778:	00 80 01 c2 	add_f s0, s0, s3
    777c:	64 80 2d c2 	mul_f s3, s4, s27
    7780:	42 80 01 c2 	add_f s2, s2, s3
    7784:	21 80 01 c2 	add_f s1, s1, s3
    7788:	64 00 00 c2 	add_f s3, s4, s0
    778c:	00 00 12 c2 	sub_f s0, s0, s4
    7790:	85 80 2d c2 	mul_f s4, s5, s27
    7794:	42 00 02 c2 	add_f s2, s2, s4
    7798:	21 00 02 c2 	add_f s1, s1, s4
    779c:	63 00 02 c2 	add_f s3, s3, s4
    77a0:	00 00 02 c2 	add_f s0, s0, s4
    77a4:	38 00 00 88 	store_32 s1, (s24)
    77a8:	5e f0 15 88 	store_32 s2, 1404(sp)
    77ac:	7e 30 16 88 	store_32 s3, 1420(sp)
    77b0:	1e 70 16 88 	store_32 s0, 1436(sp)
    77b4:	1e a0 09 a8 	load_32 s0, 616(sp)
    77b8:	5e e0 09 a8 	load_32 s2, 632(sp)
    77bc:	9e 20 0a a8 	load_32 s4, 648(sp)
    77c0:	be 60 0a a8 	load_32 s5, 664(sp)
    77c4:	20 00 23 c2 	mul_f s1, s0, s6
    77c8:	00 80 2d c2 	mul_f s0, s0, s27
    77cc:	62 80 2d c2 	mul_f s3, s2, s27
    77d0:	21 80 0d c2 	add_f s1, s1, s27
    77d4:	00 80 0d c2 	add_f s0, s0, s27
    77d8:	42 00 00 c2 	add_f s2, s2, s0
    77dc:	21 80 01 c2 	add_f s1, s1, s3
    77e0:	00 80 01 c2 	add_f s0, s0, s3
    77e4:	64 80 2d c2 	mul_f s3, s4, s27
    77e8:	42 80 01 c2 	add_f s2, s2, s3
    77ec:	21 80 01 c2 	add_f s1, s1, s3
    77f0:	64 00 00 c2 	add_f s3, s4, s0
    77f4:	00 00 12 c2 	sub_f s0, s0, s4
    77f8:	85 80 2d c2 	mul_f s4, s5, s27
    77fc:	42 00 02 c2 	add_f s2, s2, s4
    7800:	21 00 02 c2 	add_f s1, s1, s4
    7804:	63 00 02 c2 	add_f s3, s3, s4
    7808:	00 00 02 c2 	add_f s0, s0, s4
    780c:	3e c0 15 88 	store_32 s1, 1392(sp)
    7810:	5e 00 16 88 	store_32 s2, 1408(sp)
    7814:	7e 40 16 88 	store_32 s3, 1424(sp)
    7818:	1e 80 16 88 	store_32 s0, 1440(sp)
    781c:	1e b0 09 a8 	load_32 s0, 620(sp)
    7820:	5e f0 09 a8 	load_32 s2, 636(sp)
    7824:	9e 30 0a a8 	load_32 s4, 652(sp)
    7828:	1e 73 0a a8 	load_32 s24, 668(sp)
    782c:	20 00 23 c2 	mul_f s1, s0, s6
    7830:	00 80 2d c2 	mul_f s0, s0, s27
    7834:	62 80 2d c2 	mul_f s3, s2, s27
    7838:	21 80 0d c2 	add_f s1, s1, s27
    783c:	00 80 0d c2 	add_f s0, s0, s27
    7840:	42 00 00 c2 	add_f s2, s2, s0
    7844:	21 80 01 c2 	add_f s1, s1, s3
    7848:	00 80 01 c2 	add_f s0, s0, s3
    784c:	64 80 2d c2 	mul_f s3, s4, s27
    7850:	42 80 01 c2 	add_f s2, s2, s3
    7854:	21 80 01 c2 	add_f s1, s1, s3
    7858:	64 00 00 c2 	add_f s3, s4, s0
    785c:	00 00 12 c2 	sub_f s0, s0, s4
    7860:	98 80 2d c2 	mul_f s4, s24, s27
    7864:	42 00 02 c2 	add_f s2, s2, s4
    7868:	21 00 02 c2 	add_f s1, s1, s4
    786c:	63 00 02 c2 	add_f s3, s3, s4
    7870:	00 00 02 c2 	add_f s0, s0, s4
    7874:	3e d0 15 88 	store_32 s1, 1396(sp)
    7878:	5e 10 16 88 	store_32 s2, 1412(sp)
    787c:	7e 50 16 88 	store_32 s3, 1428(sp)
    7880:	1e 90 16 88 	store_32 s0, 1444(sp)
    7884:	5e 73 03 a8 	load_32 s26, 220(sp)
    7888:	00 00 fd c0 	move s0, s26
    788c:	20 80 fc c0 	move s1, s25
    7890:	5e e0 04 a8 	load_32 s2, 312(sp)
    7894:	2a 2c 00 f8 	call 45224 <memcpy>
    7898:	3e 90 02 a8 	load_32 s1, 164(sp)
    789c:	01 00 00 a8 	load_32 s0, (s1)
    78a0:	1e a0 15 88 	store_32 s0, 1384(sp)
    78a4:	01 10 00 a8 	load_32 s0, 4(s1)
    78a8:	1e b0 15 88 	store_32 s0, 1388(sp)
    78ac:	01 20 00 a8 	load_32 s0, 8(s1)
    78b0:	1e c0 15 88 	store_32 s0, 1392(sp)
    78b4:	3e b3 04 a8 	load_32 s25, 300(sp)
    78b8:	3e a0 04 a8 	load_32 s1, 296(sp)
    78bc:	21 33 00 88 	store_32 s25, 12(s1)
    78c0:	21 23 00 88 	store_32 s25, 8(s1)
    78c4:	21 13 00 88 	store_32 s25, 4(s1)
    78c8:	21 03 00 88 	store_32 s25, (s1)
    78cc:	1e a0 09 a8 	load_32 s0, 616(sp)
    78d0:	3e 10 04 a8 	load_32 s1, 260(sp)
    78d4:	01 20 00 88 	store_32 s0, 8(s1)
    78d8:	1e 50 04 a8 	load_32 s0, 276(sp)
    78dc:	00 00 00 a8 	load_32 s0, (s0)
    78e0:	01 10 00 88 	store_32 s0, 4(s1)
    78e4:	1e 80 09 a8 	load_32 s0, 608(sp)
    78e8:	01 00 00 88 	store_32 s0, (s1)
    78ec:	3e 73 12 88 	store_32 s25, 1180(sp)
    78f0:	3e a0 02 a8 	load_32 s1, 168(sp)
    78f4:	01 20 00 a8 	load_32 s0, 8(s1)
    78f8:	5e 00 04 a8 	load_32 s2, 256(sp)
    78fc:	02 20 00 88 	store_32 s0, 8(s2)
    7900:	01 10 00 a8 	load_32 s0, 4(s1)
    7904:	02 10 00 88 	store_32 s0, 4(s2)
    7908:	01 00 00 a8 	load_32 s0, (s1)
    790c:	02 00 00 88 	store_32 s0, (s2)
    7910:	3e b3 12 88 	store_32 s25, 1196(sp)
    7914:	1e 00 16 a8 	load_32 s0, 1408(sp)
    7918:	3e f0 03 a8 	load_32 s1, 252(sp)
    791c:	01 60 00 88 	store_32 s0, 24(s1)
    7920:	1e f0 15 a8 	load_32 s0, 1404(sp)
    7924:	01 50 00 88 	store_32 s0, 20(s1)
    7928:	1e e0 15 a8 	load_32 s0, 1400(sp)
    792c:	01 40 00 88 	store_32 s0, 16(s1)
    7930:	1e d0 15 a8 	load_32 s0, 1396(sp)
    7934:	01 30 00 88 	store_32 s0, 12(s1)
    7938:	1e c0 15 a8 	load_32 s0, 1392(sp)
    793c:	01 20 00 88 	store_32 s0, 8(s1)
    7940:	1e b0 15 a8 	load_32 s0, 1388(sp)
    7944:	01 10 00 88 	store_32 s0, 4(s1)
    7948:	1e a0 15 a8 	load_32 s0, 1384(sp)
    794c:	01 00 00 88 	store_32 s0, (s1)
    7950:	1e 33 13 88 	store_32 s24, 1228(sp)
    7954:	1e 73 04 a8 	load_32 s24, 284(sp)
    7958:	00 00 fc c0 	move s0, s24
    795c:	20 00 fd c0 	move s1, s26
    7960:	5e 80 03 a8 	load_32 s2, 224(sp)
    7964:	73 05 00 f8 	call 5580 <_ZN9librender13RenderContext12bindUniformsEPKvj>
    7968:	00 00 fc c0 	move s0, s24
    796c:	3e b0 03 a8 	load_32 s1, 236(sp)
    7970:	6e 05 00 f8 	call 5560 <_ZN9librender13RenderContext15bindVertexAttrsEPKNS_12RenderBufferE>
    7974:	00 00 fc c0 	move s0, s24
    7978:	3e a0 03 a8 	load_32 s1, 232(sp)
    797c:	b2 05 00 f8 	call 5832 <_ZN9librender13RenderContext12drawElementsEPKNS_12RenderBufferE>
    7980:	00 00 fc c0 	move s0, s24
    7984:	73 09 00 f8 	call 9676 <_ZN9librender13RenderContext6finishEv>
    7988:	1e 90 04 a8 	load_32 s0, 292(sp)
    798c:	20 80 fc c0 	move s1, s25
    7990:	5e 80 04 a8 	load_32 s2, 288(sp)
    7994:	c7 28 00 f8 	call 41756 <memset>
    7998:	5e f3 04 a8 	load_32 s26, 316(sp)
    799c:	5e 43 16 88 	store_32 s26, 1424(sp)
    79a0:	5e 93 16 88 	store_32 s26, 1444(sp)
    79a4:	1e 60 04 a8 	load_32 s0, 280(sp)
    79a8:	a0 00 00 a8 	load_32 s5, (s0)
    79ac:	3e e0 0e a8 	load_32 s1, 952(sp)
    79b0:	1e f0 0e a8 	load_32 s0, 956(sp)
    79b4:	de 01 0f a8 	load_32 s14, 960(sp)
    79b8:	de 10 0f a8 	load_32 s6, 964(sp)
    79bc:	7e 20 0f a8 	load_32 s3, 968(sp)
    79c0:	5e 30 0f a8 	load_32 s2, 972(sp)
    79c4:	be 41 0f a8 	load_32 s13, 976(sp)
    79c8:	3e 51 0f a8 	load_32 s9, 980(sp)
    79cc:	fe 60 0f a8 	load_32 s7, 984(sp)
    79d0:	9e 70 0f a8 	load_32 s4, 988(sp)
    79d4:	9e 81 0f a8 	load_32 s12, 992(sp)
    79d8:	7e 91 0f a8 	load_32 s11, 996(sp)
    79dc:	5e a1 0f a8 	load_32 s10, 1000(sp)
    79e0:	1e b1 0f a8 	load_32 s8, 1004(sp)
    79e4:	fe c1 0e a8 	load_32 s15, 944(sp)
    79e8:	9e 72 02 a8 	load_32 s20, 156(sp)
    79ec:	de 62 02 a8 	load_32 s22, 152(sp)
    79f0:	fe 52 02 a8 	load_32 s23, 148(sp)
    79f4:	1e 43 02 a8 	load_32 s24, 144(sp)
    79f8:	0f 02 2a c2 	mul_f s16, s15, s20
    79fc:	2e 02 2a c2 	mul_f s17, s14, s20
    7a00:	6d 02 2a c2 	mul_f s19, s13, s20
    7a04:	45 02 2b c2 	mul_f s18, s5, s22
    7a08:	a9 02 2b c2 	mul_f s21, s9, s22
    7a0c:	10 82 0d c2 	add_f s16, s16, s27
    7a10:	31 82 0d c2 	add_f s17, s17, s27
    7a14:	73 82 0d c2 	add_f s19, s19, s27
    7a18:	10 02 09 c2 	add_f s16, s16, s18
    7a1c:	41 82 2b c2 	mul_f s18, s1, s23
    7a20:	73 82 0a c2 	add_f s19, s19, s21
    7a24:	10 02 09 c2 	add_f s16, s16, s18
    7a28:	4c 02 2a c2 	mul_f s18, s12, s20
    7a2c:	86 02 2b c2 	mul_f s20, s6, s22
    7a30:	31 02 0a c2 	add_f s17, s17, s20
    7a34:	80 02 2c c2 	mul_f s20, s0, s24
    7a38:	10 02 0a c2 	add_f s16, s16, s20
    7a3c:	52 82 0d c2 	add_f s18, s18, s27
    7a40:	83 82 2b c2 	mul_f s20, s3, s23
    7a44:	31 02 0a c2 	add_f s17, s17, s20
    7a48:	1e a2 15 88 	store_32 s16, 1384(sp)
    7a4c:	07 82 2b c2 	mul_f s16, s7, s23
    7a50:	13 02 08 c2 	add_f s16, s19, s16
    7a54:	be 32 02 a8 	load_32 s21, 140(sp)
    7a58:	6b 02 2b c2 	mul_f s19, s11, s22
    7a5c:	84 02 2c c2 	mul_f s20, s4, s24
    7a60:	52 82 09 c2 	add_f s18, s18, s19
    7a64:	62 02 2c c2 	mul_f s19, s2, s24
    7a68:	31 82 09 c2 	add_f s17, s17, s19
    7a6c:	6f 82 2a c2 	mul_f s19, s15, s21
    7a70:	10 02 0a c2 	add_f s16, s16, s20
    7a74:	8a 82 2b c2 	mul_f s20, s10, s23
    7a78:	3e e2 15 88 	store_32 s17, 1400(sp)
    7a7c:	2e 82 2a c2 	mul_f s17, s14, s21
    7a80:	52 02 0a c2 	add_f s18, s18, s20
    7a84:	1e 22 16 88 	store_32 s16, 1416(sp)
    7a88:	0d 82 2a c2 	mul_f s16, s13, s21
    7a8c:	de 22 02 a8 	load_32 s22, 136(sp)
    7a90:	88 02 2c c2 	mul_f s20, s8, s24
    7a94:	73 82 0d c2 	add_f s19, s19, s27
    7a98:	ac 82 2a c2 	mul_f s21, s12, s21
    7a9c:	31 82 0d c2 	add_f s17, s17, s27
    7aa0:	52 02 0a c2 	add_f s18, s18, s20
    7aa4:	85 02 2b c2 	mul_f s20, s5, s22
    7aa8:	10 82 0d c2 	add_f s16, s16, s27
    7aac:	73 02 0a c2 	add_f s19, s19, s20
    7ab0:	5e 62 16 88 	store_32 s18, 1432(sp)
    7ab4:	86 02 2b c2 	mul_f s20, s6, s22
    7ab8:	fe 12 02 a8 	load_32 s23, 132(sp)
    7abc:	b5 82 0d c2 	add_f s21, s21, s27
    7ac0:	31 02 0a c2 	add_f s17, s17, s20
    7ac4:	1e 03 02 a8 	load_32 s24, 128(sp)
    7ac8:	3e f3 01 a8 	load_32 s25, 124(sp)
    7acc:	41 82 2b c2 	mul_f s18, s1, s23
    7ad0:	53 02 09 c2 	add_f s18, s19, s18
    7ad4:	69 02 2b c2 	mul_f s19, s9, s22
    7ad8:	10 82 09 c2 	add_f s16, s16, s19
    7adc:	60 02 2c c2 	mul_f s19, s0, s24
    7ae0:	83 82 2b c2 	mul_f s20, s3, s23
    7ae4:	31 02 0a c2 	add_f s17, s17, s20
    7ae8:	8b 02 2b c2 	mul_f s20, s11, s22
    7aec:	52 82 09 c2 	add_f s18, s18, s19
    7af0:	67 82 2b c2 	mul_f s19, s7, s23
    7af4:	10 82 09 c2 	add_f s16, s16, s19
    7af8:	95 02 0a c2 	add_f s20, s21, s20
    7afc:	62 02 2c c2 	mul_f s19, s2, s24
    7b00:	af 82 2c c2 	mul_f s21, s15, s25
    7b04:	31 82 09 c2 	add_f s17, s17, s19
    7b08:	64 02 2c c2 	mul_f s19, s4, s24
    7b0c:	ce 82 2c c2 	mul_f s22, s14, s25
    7b10:	10 82 09 c2 	add_f s16, s16, s19
    7b14:	6a 82 2b c2 	mul_f s19, s10, s23
    7b18:	74 82 09 c2 	add_f s19, s20, s19
    7b1c:	9e c2 04 a8 	load_32 s20, 304(sp)
    7b20:	54 02 00 88 	store_32 s18, (s20)
    7b24:	56 82 0d c2 	add_f s18, s22, s27
    7b28:	3e f2 15 88 	store_32 s17, 1404(sp)
    7b2c:	35 82 0d c2 	add_f s17, s21, s27
    7b30:	1e 32 16 88 	store_32 s16, 1420(sp)
    7b34:	08 02 2c c2 	mul_f s16, s8, s24
    7b38:	de e2 01 a8 	load_32 s22, 120(sp)
    7b3c:	13 02 08 c2 	add_f s16, s19, s16
    7b40:	6d 82 2c c2 	mul_f s19, s13, s25
    7b44:	ac 82 2c c2 	mul_f s21, s12, s25
    7b48:	85 02 2b c2 	mul_f s20, s5, s22
    7b4c:	1e 72 16 88 	store_32 s16, 1436(sp)
    7b50:	31 02 0a c2 	add_f s17, s17, s20
    7b54:	fe d2 01 a8 	load_32 s23, 116(sp)
    7b58:	86 02 2b c2 	mul_f s20, s6, s22
    7b5c:	52 02 0a c2 	add_f s18, s18, s20
    7b60:	13 82 0d c2 	add_f s16, s19, s27
    7b64:	61 82 2b c2 	mul_f s19, s1, s23
    7b68:	95 82 0d c2 	add_f s20, s21, s27
    7b6c:	be c2 01 a8 	load_32 s21, 112(sp)
    7b70:	31 82 09 c2 	add_f s17, s17, s19
    7b74:	63 82 2b c2 	mul_f s19, s3, s23
    7b78:	52 82 09 c2 	add_f s18, s18, s19
    7b7c:	69 02 2b c2 	mul_f s19, s9, s22
    7b80:	10 82 09 c2 	add_f s16, s16, s19
    7b84:	60 82 2a c2 	mul_f s19, s0, s21
    7b88:	31 82 09 c2 	add_f s17, s17, s19
    7b8c:	6b 02 2b c2 	mul_f s19, s11, s22
    7b90:	74 82 09 c2 	add_f s19, s20, s19
    7b94:	82 82 2a c2 	mul_f s20, s2, s21
    7b98:	52 02 0a c2 	add_f s18, s18, s20
    7b9c:	3e c2 15 88 	store_32 s17, 1392(sp)
    7ba0:	2a 82 2b c2 	mul_f s17, s10, s23
    7ba4:	87 82 2b c2 	mul_f s20, s7, s23
    7ba8:	10 02 0a c2 	add_f s16, s16, s20
    7bac:	5e 02 16 88 	store_32 s18, 1408(sp)
    7bb0:	44 82 2a c2 	mul_f s18, s4, s21
    7bb4:	33 82 08 c2 	add_f s17, s19, s17
    7bb8:	7e b2 01 a8 	load_32 s19, 108(sp)
    7bbc:	ef 81 29 c2 	mul_f s15, s15, s19
    7bc0:	ce 81 29 c2 	mul_f s14, s14, s19
    7bc4:	ad 81 29 c2 	mul_f s13, s13, s19
    7bc8:	8c 81 29 c2 	mul_f s12, s12, s19
    7bcc:	10 02 09 c2 	add_f s16, s16, s18
    7bd0:	48 82 2a c2 	mul_f s18, s8, s21
    7bd4:	31 02 09 c2 	add_f s17, s17, s18
    7bd8:	ef 81 0d c2 	add_f s15, s15, s27
    7bdc:	1e 42 16 88 	store_32 s16, 1424(sp)
    7be0:	ce 81 0d c2 	add_f s14, s14, s27
    7be4:	ad 81 0d c2 	add_f s13, s13, s27
    7be8:	3e 82 16 88 	store_32 s17, 1440(sp)
    7bec:	8c 81 0d c2 	add_f s12, s12, s27
    7bf0:	1e a2 01 a8 	load_32 s16, 104(sp)
    7bf4:	a5 00 28 c2 	mul_f s5, s5, s16
    7bf8:	c6 00 28 c2 	mul_f s6, s6, s16
    7bfc:	af 80 02 c2 	add_f s5, s15, s5
    7c00:	29 01 28 c2 	mul_f s9, s9, s16
    7c04:	6b 01 28 c2 	mul_f s11, s11, s16
    7c08:	ce 00 03 c2 	add_f s6, s14, s6
    7c0c:	6c 81 05 c2 	add_f s11, s12, s11
    7c10:	9e 91 01 a8 	load_32 s12, 100(sp)
    7c14:	2d 81 04 c2 	add_f s9, s13, s9
    7c18:	21 00 26 c2 	mul_f s1, s1, s12
    7c1c:	63 00 26 c2 	mul_f s3, s3, s12
    7c20:	25 80 00 c2 	add_f s1, s5, s1
    7c24:	a7 00 26 c2 	mul_f s5, s7, s12
    7c28:	fe 80 01 a8 	load_32 s7, 96(sp)
    7c2c:	66 80 01 c2 	add_f s3, s6, s3
    7c30:	ca 00 26 c2 	mul_f s6, s10, s12
    7c34:	a9 80 02 c2 	add_f s5, s9, s5
    7c38:	cb 00 03 c2 	add_f s6, s11, s6
    7c3c:	00 80 23 c2 	mul_f s0, s0, s7
    7c40:	01 00 00 c2 	add_f s0, s1, s0
    7c44:	22 80 23 c2 	mul_f s1, s2, s7
    7c48:	44 80 23 c2 	mul_f s2, s4, s7
    7c4c:	23 80 00 c2 	add_f s1, s3, s1
    7c50:	68 80 23 c2 	mul_f s3, s8, s7
    7c54:	1e d0 15 88 	store_32 s0, 1396(sp)
    7c58:	45 00 01 c2 	add_f s2, s5, s2
    7c5c:	66 80 01 c2 	add_f s3, s6, s3
    7c60:	3e 10 16 88 	store_32 s1, 1412(sp)
    7c64:	5e 50 16 88 	store_32 s2, 1428(sp)
    7c68:	7e 90 16 88 	store_32 s3, 1444(sp)
    7c6c:	1e e0 02 a8 	load_32 s0, 184(sp)
    7c70:	3e d0 04 a8 	load_32 s1, 308(sp)
    7c74:	5e e0 04 a8 	load_32 s2, 312(sp)
    7c78:	31 2b 00 f8 	call 44228 <memcpy>
    7c7c:	1e 90 04 a8 	load_32 s0, 292(sp)
    7c80:	3e b0 04 a8 	load_32 s1, 300(sp)
    7c84:	5e 80 04 a8 	load_32 s2, 288(sp)
    7c88:	0a 28 00 f8 	call 41000 <memset>
    7c8c:	5e 43 16 88 	store_32 s26, 1424(sp)
    7c90:	5e 93 16 88 	store_32 s26, 1444(sp)
    7c94:	1e 40 04 a8 	load_32 s0, 272(sp)
    7c98:	a0 00 00 a8 	load_32 s5, (s0)
    7c9c:	5e e0 0d a8 	load_32 s2, 888(sp)
    7ca0:	1e f0 0d a8 	load_32 s0, 892(sp)
    7ca4:	de 01 0e a8 	load_32 s14, 896(sp)
    7ca8:	de 10 0e a8 	load_32 s6, 900(sp)
    7cac:	7e 20 0e a8 	load_32 s3, 904(sp)
    7cb0:	3e 30 0e a8 	load_32 s1, 908(sp)
    7cb4:	be 41 0e a8 	load_32 s13, 912(sp)
    7cb8:	3e 51 0e a8 	load_32 s9, 916(sp)
    7cbc:	fe 60 0e a8 	load_32 s7, 920(sp)
    7cc0:	9e 70 0e a8 	load_32 s4, 924(sp)
    7cc4:	9e 81 0e a8 	load_32 s12, 928(sp)
    7cc8:	7e 91 0e a8 	load_32 s11, 932(sp)
    7ccc:	5e a1 0e a8 	load_32 s10, 936(sp)
    7cd0:	1e b1 0e a8 	load_32 s8, 940(sp)
    7cd4:	fe c1 0d a8 	load_32 s15, 880(sp)
    7cd8:	9e 72 01 a8 	load_32 s20, 92(sp)
    7cdc:	de 62 01 a8 	load_32 s22, 88(sp)
    7ce0:	fe 52 01 a8 	load_32 s23, 84(sp)
    7ce4:	1e 43 01 a8 	load_32 s24, 80(sp)
    7ce8:	0f 02 2a c2 	mul_f s16, s15, s20
    7cec:	2e 02 2a c2 	mul_f s17, s14, s20
    7cf0:	6d 02 2a c2 	mul_f s19, s13, s20
    7cf4:	45 02 2b c2 	mul_f s18, s5, s22
    7cf8:	a9 02 2b c2 	mul_f s21, s9, s22
    7cfc:	10 82 0d c2 	add_f s16, s16, s27
    7d00:	31 82 0d c2 	add_f s17, s17, s27
    7d04:	73 82 0d c2 	add_f s19, s19, s27
    7d08:	10 02 09 c2 	add_f s16, s16, s18
    7d0c:	42 82 2b c2 	mul_f s18, s2, s23
    7d10:	73 82 0a c2 	add_f s19, s19, s21
    7d14:	10 02 09 c2 	add_f s16, s16, s18
    7d18:	4c 02 2a c2 	mul_f s18, s12, s20
    7d1c:	86 02 2b c2 	mul_f s20, s6, s22
    7d20:	31 02 0a c2 	add_f s17, s17, s20
    7d24:	80 02 2c c2 	mul_f s20, s0, s24
    7d28:	10 02 0a c2 	add_f s16, s16, s20
    7d2c:	52 82 0d c2 	add_f s18, s18, s27
    7d30:	83 82 2b c2 	mul_f s20, s3, s23
    7d34:	31 02 0a c2 	add_f s17, s17, s20
    7d38:	1e a2 15 88 	store_32 s16, 1384(sp)
    7d3c:	07 82 2b c2 	mul_f s16, s7, s23
    7d40:	13 02 08 c2 	add_f s16, s19, s16
    7d44:	be 32 01 a8 	load_32 s21, 76(sp)
    7d48:	6b 02 2b c2 	mul_f s19, s11, s22
    7d4c:	84 02 2c c2 	mul_f s20, s4, s24
    7d50:	52 82 09 c2 	add_f s18, s18, s19
    7d54:	61 02 2c c2 	mul_f s19, s1, s24
    7d58:	31 82 09 c2 	add_f s17, s17, s19
    7d5c:	6f 82 2a c2 	mul_f s19, s15, s21
    7d60:	10 02 0a c2 	add_f s16, s16, s20
    7d64:	8a 82 2b c2 	mul_f s20, s10, s23
    7d68:	3e e2 15 88 	store_32 s17, 1400(sp)
    7d6c:	2e 82 2a c2 	mul_f s17, s14, s21
    7d70:	52 02 0a c2 	add_f s18, s18, s20
    7d74:	1e 22 16 88 	store_32 s16, 1416(sp)
    7d78:	0d 82 2a c2 	mul_f s16, s13, s21
    7d7c:	de 22 01 a8 	load_32 s22, 72(sp)
    7d80:	88 02 2c c2 	mul_f s20, s8, s24
    7d84:	73 82 0d c2 	add_f s19, s19, s27
    7d88:	ac 82 2a c2 	mul_f s21, s12, s21
    7d8c:	31 82 0d c2 	add_f s17, s17, s27
    7d90:	52 02 0a c2 	add_f s18, s18, s20
    7d94:	85 02 2b c2 	mul_f s20, s5, s22
    7d98:	10 82 0d c2 	add_f s16, s16, s27
    7d9c:	73 02 0a c2 	add_f s19, s19, s20
    7da0:	5e 62 16 88 	store_32 s18, 1432(sp)
    7da4:	86 02 2b c2 	mul_f s20, s6, s22
    7da8:	fe 12 01 a8 	load_32 s23, 68(sp)
    7dac:	b5 82 0d c2 	add_f s21, s21, s27
    7db0:	31 02 0a c2 	add_f s17, s17, s20
    7db4:	1e 03 01 a8 	load_32 s24, 64(sp)
    7db8:	3e f3 00 a8 	load_32 s25, 60(sp)
    7dbc:	42 82 2b c2 	mul_f s18, s2, s23
    7dc0:	53 02 09 c2 	add_f s18, s19, s18
    7dc4:	69 02 2b c2 	mul_f s19, s9, s22
    7dc8:	10 82 09 c2 	add_f s16, s16, s19
    7dcc:	60 02 2c c2 	mul_f s19, s0, s24
    7dd0:	83 82 2b c2 	mul_f s20, s3, s23
    7dd4:	31 02 0a c2 	add_f s17, s17, s20
    7dd8:	8b 02 2b c2 	mul_f s20, s11, s22
    7ddc:	52 82 09 c2 	add_f s18, s18, s19
    7de0:	67 82 2b c2 	mul_f s19, s7, s23
    7de4:	10 82 09 c2 	add_f s16, s16, s19
    7de8:	95 02 0a c2 	add_f s20, s21, s20
    7dec:	61 02 2c c2 	mul_f s19, s1, s24
    7df0:	af 82 2c c2 	mul_f s21, s15, s25
    7df4:	31 82 09 c2 	add_f s17, s17, s19
    7df8:	64 02 2c c2 	mul_f s19, s4, s24
    7dfc:	ce 82 2c c2 	mul_f s22, s14, s25
    7e00:	10 82 09 c2 	add_f s16, s16, s19
    7e04:	6a 82 2b c2 	mul_f s19, s10, s23
    7e08:	74 82 09 c2 	add_f s19, s20, s19
    7e0c:	9e c2 04 a8 	load_32 s20, 304(sp)
    7e10:	54 02 00 88 	store_32 s18, (s20)
    7e14:	56 82 0d c2 	add_f s18, s22, s27
    7e18:	3e f2 15 88 	store_32 s17, 1404(sp)
    7e1c:	35 82 0d c2 	add_f s17, s21, s27
    7e20:	1e 32 16 88 	store_32 s16, 1420(sp)
    7e24:	08 02 2c c2 	mul_f s16, s8, s24
    7e28:	de e2 00 a8 	load_32 s22, 56(sp)
    7e2c:	13 02 08 c2 	add_f s16, s19, s16
    7e30:	6d 82 2c c2 	mul_f s19, s13, s25
    7e34:	ac 82 2c c2 	mul_f s21, s12, s25
    7e38:	85 02 2b c2 	mul_f s20, s5, s22
    7e3c:	1e 72 16 88 	store_32 s16, 1436(sp)
    7e40:	31 02 0a c2 	add_f s17, s17, s20
    7e44:	fe d2 00 a8 	load_32 s23, 52(sp)
    7e48:	86 02 2b c2 	mul_f s20, s6, s22
    7e4c:	52 02 0a c2 	add_f s18, s18, s20
    7e50:	13 82 0d c2 	add_f s16, s19, s27
    7e54:	62 82 2b c2 	mul_f s19, s2, s23
    7e58:	95 82 0d c2 	add_f s20, s21, s27
    7e5c:	be c2 00 a8 	load_32 s21, 48(sp)
    7e60:	31 82 09 c2 	add_f s17, s17, s19
    7e64:	63 82 2b c2 	mul_f s19, s3, s23
    7e68:	52 82 09 c2 	add_f s18, s18, s19
    7e6c:	69 02 2b c2 	mul_f s19, s9, s22
    7e70:	10 82 09 c2 	add_f s16, s16, s19
    7e74:	60 82 2a c2 	mul_f s19, s0, s21
    7e78:	31 82 09 c2 	add_f s17, s17, s19
    7e7c:	6b 02 2b c2 	mul_f s19, s11, s22
    7e80:	74 82 09 c2 	add_f s19, s20, s19
    7e84:	81 82 2a c2 	mul_f s20, s1, s21
    7e88:	52 02 0a c2 	add_f s18, s18, s20
    7e8c:	3e c2 15 88 	store_32 s17, 1392(sp)
    7e90:	2a 82 2b c2 	mul_f s17, s10, s23
    7e94:	87 82 2b c2 	mul_f s20, s7, s23
    7e98:	10 02 0a c2 	add_f s16, s16, s20
    7e9c:	5e 02 16 88 	store_32 s18, 1408(sp)
    7ea0:	44 82 2a c2 	mul_f s18, s4, s21
    7ea4:	33 82 08 c2 	add_f s17, s19, s17
    7ea8:	7e b2 00 a8 	load_32 s19, 44(sp)
    7eac:	ef 81 29 c2 	mul_f s15, s15, s19
    7eb0:	ce 81 29 c2 	mul_f s14, s14, s19
    7eb4:	ad 81 29 c2 	mul_f s13, s13, s19
    7eb8:	8c 81 29 c2 	mul_f s12, s12, s19
    7ebc:	10 02 09 c2 	add_f s16, s16, s18
    7ec0:	48 82 2a c2 	mul_f s18, s8, s21
    7ec4:	31 02 09 c2 	add_f s17, s17, s18
    7ec8:	ef 81 0d c2 	add_f s15, s15, s27
    7ecc:	ce 81 0d c2 	add_f s14, s14, s27
    7ed0:	1e 42 16 88 	store_32 s16, 1424(sp)
    7ed4:	ad 81 0d c2 	add_f s13, s13, s27
    7ed8:	3e 82 16 88 	store_32 s17, 1440(sp)
    7edc:	8c 81 0d c2 	add_f s12, s12, s27
    7ee0:	1e a2 00 a8 	load_32 s16, 40(sp)
    7ee4:	a5 00 28 c2 	mul_f s5, s5, s16
    7ee8:	c6 00 28 c2 	mul_f s6, s6, s16
    7eec:	29 01 28 c2 	mul_f s9, s9, s16
    7ef0:	6b 01 28 c2 	mul_f s11, s11, s16
    7ef4:	af 80 02 c2 	add_f s5, s15, s5
    7ef8:	ce 00 03 c2 	add_f s6, s14, s6
    7efc:	6c 81 05 c2 	add_f s11, s12, s11
    7f00:	9e 91 00 a8 	load_32 s12, 36(sp)
    7f04:	2d 81 04 c2 	add_f s9, s13, s9
    7f08:	42 00 26 c2 	mul_f s2, s2, s12
    7f0c:	63 00 26 c2 	mul_f s3, s3, s12
    7f10:	45 00 01 c2 	add_f s2, s5, s2
    7f14:	a7 00 26 c2 	mul_f s5, s7, s12
    7f18:	fe 80 00 a8 	load_32 s7, 32(sp)
    7f1c:	66 80 01 c2 	add_f s3, s6, s3
    7f20:	ca 00 26 c2 	mul_f s6, s10, s12
    7f24:	a9 80 02 c2 	add_f s5, s9, s5
    7f28:	cb 00 03 c2 	add_f s6, s11, s6
    7f2c:	00 80 23 c2 	mul_f s0, s0, s7
    7f30:	21 80 23 c2 	mul_f s1, s1, s7
    7f34:	02 00 00 c2 	add_f s0, s2, s0
    7f38:	44 80 23 c2 	mul_f s2, s4, s7
    7f3c:	23 80 00 c2 	add_f s1, s3, s1
    7f40:	68 80 23 c2 	mul_f s3, s8, s7
    7f44:	45 00 01 c2 	add_f s2, s5, s2
    7f48:	1e d0 15 88 	store_32 s0, 1396(sp)
    7f4c:	66 80 01 c2 	add_f s3, s6, s3
    7f50:	3e 10 16 88 	store_32 s1, 1412(sp)
    7f54:	5e 50 16 88 	store_32 s2, 1428(sp)
    7f58:	7e 90 16 88 	store_32 s3, 1444(sp)
    7f5c:	1e 20 04 a8 	load_32 s0, 264(sp)
    7f60:	3e d0 04 a8 	load_32 s1, 308(sp)
    7f64:	5e e0 04 a8 	load_32 s2, 312(sp)
    7f68:	75 2a 00 f8 	call 43476 <memcpy>
    7f6c:	a8 fa ff f7 	b -5472 <main+0xa0c>
    7f70:	5d 30 00 f8 	call 49524 <worker_thread>

0000000000007f74 _ZN9librender6Matrix6lookAtERKNS_4Vec3ES3_S3_:
    7f74:	de 03 ff 05 	add_i sp, sp, -64
    7f78:	1e f3 00 88 	store_32 s24, 60(sp)
    7f7c:	3e e3 00 88 	store_32 s25, 56(sp)
    7f80:	5e d3 00 88 	store_32 s26, 52(sp)
    7f84:	7e c3 00 88 	store_32 s27, 48(sp)
    7f88:	fe b3 00 88 	store_32 ra, 44(sp)
    7f8c:	3e 60 00 88 	store_32 s1, 24(sp)
    7f90:	a2 00 00 a8 	load_32 s5, (s2)
    7f94:	81 00 00 a8 	load_32 s4, (s1)
    7f98:	c5 00 12 c2 	sub_f s6, s5, s4
    7f9c:	80 00 00 4f 	movehi s4, 0
    7fa0:	84 60 05 00 	or s4, s4, 344
    7fa4:	de 80 00 88 	store_32 s6, 32(sp)
    7fa8:	02 11 00 a8 	load_32 s8, 4(s2)
    7fac:	a1 10 00 a8 	load_32 s5, 4(s1)
    7fb0:	c6 00 23 c2 	mul_f s6, s6, s6
    7fb4:	42 20 00 a8 	load_32 s2, 8(s2)
    7fb8:	e1 20 00 a8 	load_32 s7, 8(s1)
    7fbc:	64 03 00 a8 	load_32 s27, (s4)
    7fc0:	88 80 12 c2 	sub_f s4, s8, s5
    7fc4:	a2 80 13 c2 	sub_f s5, s2, s7
    7fc8:	26 80 0d c2 	add_f s1, s6, s27
    7fcc:	9e a0 00 88 	store_32 s4, 40(sp)
    7fd0:	be 70 00 88 	store_32 s5, 28(sp)
    7fd4:	40 83 f1 c0 	move s26, s3
    7fd8:	44 00 22 c2 	mul_f s2, s4, s4
    7fdc:	00 03 f0 c0 	move s24, s0
    7fe0:	05 80 22 c2 	mul_f s0, s5, s5
    7fe4:	21 00 01 c2 	add_f s1, s1, s2
    7fe8:	01 00 00 c2 	add_f s0, s1, s0
    7fec:	6b 29 00 f8 	call 42412 <sqrt>
    7ff0:	20 00 00 4f 	movehi s1, 0
    7ff4:	40 00 c0 c1 	reciprocal s2, s0
    7ff8:	21 c0 05 00 	or s1, s1, 368
    7ffc:	21 03 00 a8 	load_32 s25, (s1)
    8000:	22 00 20 c2 	mul_f s1, s2, s0
    8004:	39 80 10 c2 	sub_f s1, s25, s1
    8008:	22 80 20 c2 	mul_f s1, s2, s1
    800c:	5a 20 00 a8 	load_32 s2, 8(s26)
    8010:	01 00 20 c2 	mul_f s0, s1, s0
    8014:	19 00 10 c2 	sub_f s0, s25, s0
    8018:	01 00 20 c2 	mul_f s0, s1, s0
    801c:	3e a0 00 a8 	load_32 s1, 40(sp)
    8020:	81 00 20 c2 	mul_f s4, s1, s0
    8024:	9e 90 00 88 	store_32 s4, 36(sp)
    8028:	3e 70 00 a8 	load_32 s1, 28(sp)
    802c:	e1 00 20 c2 	mul_f s7, s1, s0
    8030:	22 00 22 c2 	mul_f s1, s2, s4
    8034:	fe a0 00 88 	store_32 s7, 40(sp)
    8038:	7a 10 00 a8 	load_32 s3, 4(s26)
    803c:	be 80 00 a8 	load_32 s5, 32(sp)
    8040:	c5 00 20 c2 	mul_f s6, s5, s0
    8044:	07 80 21 c2 	mul_f s0, s7, s3
    8048:	a1 00 10 c2 	sub_f s5, s1, s0
    804c:	23 00 23 c2 	mul_f s1, s3, s6
    8050:	de 70 00 88 	store_32 s6, 28(sp)
    8054:	be 80 00 88 	store_32 s5, 32(sp)
    8058:	1a 00 00 a8 	load_32 s0, (s26)
    805c:	67 00 20 c2 	mul_f s3, s7, s0
    8060:	04 00 20 c2 	mul_f s0, s4, s0
    8064:	85 80 22 c2 	mul_f s4, s5, s5
    8068:	21 00 10 c2 	sub_f s1, s1, s0
    806c:	02 00 23 c2 	mul_f s0, s2, s6
    8070:	43 03 10 c2 	sub_f s26, s3, s0
    8074:	3e 50 00 88 	store_32 s1, 20(sp)
    8078:	04 80 0d c2 	add_f s0, s4, s27
    807c:	21 80 20 c2 	mul_f s1, s1, s1
    8080:	5a 00 2d c2 	mul_f s2, s26, s26
    8084:	00 00 01 c2 	add_f s0, s0, s2
    8088:	01 00 00 c2 	add_f s0, s1, s0
    808c:	43 29 00 f8 	call 42252 <sqrt>
    8090:	20 00 c0 c1 	reciprocal s1, s0
    8094:	9e a0 00 a8 	load_32 s4, 40(sp)
    8098:	41 00 20 c2 	mul_f s2, s1, s0
    809c:	59 00 11 c2 	sub_f s2, s25, s2
    80a0:	21 00 21 c2 	mul_f s1, s1, s2
    80a4:	01 00 20 c2 	mul_f s0, s1, s0
    80a8:	19 00 10 c2 	sub_f s0, s25, s0
    80ac:	01 00 20 c2 	mul_f s0, s1, s0
    80b0:	40 00 2d c2 	mul_f s2, s0, s26
    80b4:	24 00 21 c2 	mul_f s1, s4, s2
    80b8:	e0 00 f1 c0 	move s7, s2
    80bc:	fe 40 00 88 	store_32 s7, 16(sp)
    80c0:	5e 50 00 a8 	load_32 s2, 20(sp)
    80c4:	a0 00 21 c2 	mul_f s5, s0, s2
    80c8:	be 50 00 88 	store_32 s5, 20(sp)
    80cc:	de 70 00 a8 	load_32 s6, 28(sp)
    80d0:	7e 80 00 a8 	load_32 s3, 32(sp)
    80d4:	46 80 22 c2 	mul_f s2, s6, s5
    80d8:	03 01 20 c2 	mul_f s8, s3, s0
    80dc:	1e 81 00 88 	store_32 s8, 32(sp)
    80e0:	7e 90 00 a8 	load_32 s3, 36(sp)
    80e4:	03 00 24 c2 	mul_f s0, s3, s8
    80e8:	63 80 22 c2 	mul_f s3, s3, s5
    80ec:	41 83 11 c2 	sub_f s26, s1, s3
    80f0:	24 00 24 c2 	mul_f s1, s4, s8
    80f4:	42 80 10 c2 	sub_f s2, s2, s1
    80f8:	26 80 23 c2 	mul_f s1, s6, s7
    80fc:	60 80 10 c2 	sub_f s3, s0, s1
    8100:	5e 20 00 88 	store_32 s2, 8(sp)
    8104:	1a 00 2d c2 	mul_f s0, s26, s26
    8108:	22 00 21 c2 	mul_f s1, s2, s2
    810c:	7e 30 00 88 	store_32 s3, 12(sp)
    8110:	43 80 21 c2 	mul_f s2, s3, s3
    8114:	00 80 0d c2 	add_f s0, s0, s27
    8118:	01 00 00 c2 	add_f s0, s1, s0
    811c:	02 00 00 c2 	add_f s0, s2, s0
    8120:	1e 29 00 f8 	call 42104 <sqrt>
    8124:	20 00 c0 c1 	reciprocal s1, s0
    8128:	41 00 20 c2 	mul_f s2, s1, s0
    812c:	59 00 11 c2 	sub_f s2, s25, s2
    8130:	21 00 21 c2 	mul_f s1, s1, s2
    8134:	01 00 20 c2 	mul_f s0, s1, s0
    8138:	19 00 10 c2 	sub_f s0, s25, s0
    813c:	01 00 20 c2 	mul_f s0, s1, s0
    8140:	3e 20 00 a8 	load_32 s1, 8(sp)
    8144:	9e 81 00 a8 	load_32 s12, 32(sp)
    8148:	cc 80 0d c2 	add_f s6, s12, s27
    814c:	8c 81 2d c2 	mul_f s12, s12, s27
    8150:	40 80 20 c2 	mul_f s2, s0, s1
    8154:	3e 30 00 a8 	load_32 s1, 12(sp)
    8158:	a0 00 2d c2 	mul_f s5, s0, s26
    815c:	80 80 20 c2 	mul_f s4, s0, s1
    8160:	1e 60 00 a8 	load_32 s0, 24(sp)
    8164:	8c 81 0d c2 	add_f s12, s12, s27
    8168:	22 81 2d c2 	mul_f s9, s2, s27
    816c:	60 00 00 a8 	load_32 s3, (s0)
    8170:	e5 80 0d c2 	add_f s7, s5, s27
    8174:	20 10 00 a8 	load_32 s1, 4(s0)
    8178:	a5 81 2d c2 	mul_f s13, s5, s27
    817c:	00 20 00 a8 	load_32 s0, 8(s0)
    8180:	5e 43 00 a8 	load_32 s26, 16(sp)
    8184:	c4 81 2d c2 	mul_f s14, s4, s27
    8188:	be 52 00 a8 	load_32 s21, 20(sp)
    818c:	a5 80 21 c2 	mul_f s5, s5, s3
    8190:	3e 73 00 a8 	load_32 s25, 28(sp)
    8194:	bb 80 12 c2 	sub_f s5, s27, s5
    8198:	de 92 00 a8 	load_32 s22, 36(sp)
    819c:	1a 81 2d c2 	mul_f s8, s26, s27
    81a0:	fe a2 00 a8 	load_32 s23, 40(sp)
    81a4:	c6 00 04 c2 	add_f s6, s6, s8
    81a8:	7b 81 1c c2 	sub_f s11, s27, s25
    81ac:	55 81 2d c2 	mul_f s10, s21, s27
    81b0:	e7 80 04 c2 	add_f s7, s7, s9
    81b4:	19 82 2d c2 	mul_f s16, s25, s27
    81b8:	f6 81 2d c2 	mul_f s15, s22, s27
    81bc:	ad 81 0d c2 	add_f s13, s13, s27
    81c0:	c6 00 05 c2 	add_f s6, s6, s10
    81c4:	1b 02 18 c2 	sub_f s16, s27, s16
    81c8:	6b 81 17 c2 	sub_f s11, s11, s15
    81cc:	e7 00 07 c2 	add_f s7, s7, s14
    81d0:	37 82 2d c2 	mul_f s17, s23, s27
    81d4:	4c 02 0d c2 	add_f s18, s12, s26
    81d8:	6d 02 01 c2 	add_f s19, s13, s2
    81dc:	c6 80 0d c2 	add_f s6, s6, s27
    81e0:	90 02 1b c2 	sub_f s20, s16, s22
    81e4:	6b 81 18 c2 	sub_f s11, s11, s17
    81e8:	e7 80 0d c2 	add_f s7, s7, s27
    81ec:	d8 00 00 88 	store_32 s6, (s24)
    81f0:	cc 00 04 c2 	add_f s6, s12, s8
    81f4:	12 01 05 c2 	add_f s8, s18, s10
    81f8:	53 01 07 c2 	add_f s10, s19, s14
    81fc:	f8 40 00 88 	store_32 s7, 16(s24)
    8200:	2d 81 04 c2 	add_f s9, s13, s9
    8204:	42 80 20 c2 	mul_f s2, s2, s1
    8208:	eb 80 0d c2 	add_f s7, s11, s27
    820c:	74 81 18 c2 	sub_f s11, s20, s17
    8210:	c6 80 0a c2 	add_f s6, s6, s21
    8214:	08 81 0d c2 	add_f s8, s8, s27
    8218:	4a 81 0d c2 	add_f s10, s10, s27
    821c:	f8 80 00 88 	store_32 s7, 32(s24)
    8220:	e0 00 00 0f 	move s7, 0
    8224:	f8 c0 00 88 	store_32 s7, 48(s24)
    8228:	45 00 11 c2 	sub_f s2, s5, s2
    822c:	b6 80 20 c2 	mul_f s5, s22, s1
    8230:	18 11 00 88 	store_32 s8, 4(s24)
    8234:	19 81 21 c2 	mul_f s8, s25, s3
    8238:	6b 81 0d c2 	add_f s11, s11, s27
    823c:	58 51 00 88 	store_32 s10, 20(s24)
    8240:	c6 80 0d c2 	add_f s6, s6, s27
    8244:	78 91 00 88 	store_32 s11, 36(s24)
    8248:	7a 81 20 c2 	mul_f s11, s26, s1
    824c:	f8 d0 00 88 	store_32 s7, 52(s24)
    8250:	d8 20 00 88 	store_32 s6, 8(s24)
    8254:	c9 00 02 c2 	add_f s6, s9, s4
    8258:	5e 81 00 a8 	load_32 s10, 32(sp)
    825c:	30 81 17 c2 	sub_f s9, s16, s15
    8260:	80 81 fb c0 	move s12, s23
    8264:	08 81 0d c2 	add_f s8, s8, s27
    8268:	84 00 20 c2 	mul_f s4, s4, s0
    826c:	42 00 12 c2 	sub_f s2, s2, s4
    8270:	4a 81 21 c2 	mul_f s10, s10, s3
    8274:	5b 01 15 c2 	sub_f s10, s27, s10
    8278:	8c 00 20 c2 	mul_f s4, s12, s0
    827c:	29 01 16 c2 	sub_f s9, s9, s12
    8280:	a8 80 02 c2 	add_f s5, s8, s5
    8284:	c6 80 0d c2 	add_f s6, s6, s27
    8288:	42 80 0d c2 	add_f s2, s2, s27
    828c:	4a 81 15 c2 	sub_f s10, s10, s11
    8290:	d8 60 00 88 	store_32 s6, 24(s24)
    8294:	c0 00 00 4f 	movehi s6, 0
    8298:	09 81 0d c2 	add_f s8, s9, s27
    829c:	35 01 20 c2 	mul_f s9, s21, s0
    82a0:	85 00 02 c2 	add_f s4, s5, s4
    82a4:	18 a1 00 88 	store_32 s8, 40(s24)
    82a8:	2a 81 14 c2 	sub_f s9, s10, s9
    82ac:	f8 e0 00 88 	store_32 s7, 56(s24)
    82b0:	84 80 0d c2 	add_f s4, s4, s27
    82b4:	a9 80 0d c2 	add_f s5, s9, s27
    82b8:	b8 30 00 88 	store_32 s5, 12(s24)
    82bc:	a6 20 05 00 	or s5, s6, 328
    82c0:	58 70 00 88 	store_32 s2, 28(s24)
    82c4:	98 b0 00 88 	store_32 s4, 44(s24)
    82c8:	45 00 00 a8 	load_32 s2, (s5)
    82cc:	63 00 21 c2 	mul_f s3, s3, s2
    82d0:	21 00 21 c2 	mul_f s1, s1, s2
    82d4:	00 00 21 c2 	mul_f s0, s0, s2
    82d8:	63 80 0d c2 	add_f s3, s3, s27
    82dc:	23 80 00 c2 	add_f s1, s3, s1
    82e0:	60 00 00 4f 	movehi s3, 0
    82e4:	01 00 00 c2 	add_f s0, s1, s0
    82e8:	23 10 05 00 	or s1, s3, 324
    82ec:	21 00 00 a8 	load_32 s1, (s1)
    82f0:	00 80 00 c2 	add_f s0, s0, s1
    82f4:	18 f0 00 88 	store_32 s0, 60(s24)
    82f8:	00 00 fc c0 	move s0, s24
    82fc:	fe b3 00 a8 	load_32 ra, 44(sp)
    8300:	7e c3 00 a8 	load_32 s27, 48(sp)
    8304:	5e d3 00 a8 	load_32 s26, 52(sp)
    8308:	3e e3 00 a8 	load_32 s25, 56(sp)
    830c:	1e f3 00 a8 	load_32 s24, 60(sp)
    8310:	de 03 01 05 	add_i sp, sp, 64
    8314:	1f 00 00 f0 	ret

0000000000008318 _ZN9librender6ShaderD2Ev:
    8318:	1f 00 00 f0 	ret

000000000000831c _ZN15ShadowMapShaderD0Ev:
    831c:	de 03 ff 05 	add_i sp, sp, -64
    8320:	fe f3 00 88 	store_32 ra, 60(sp)
    8324:	aa 2e 00 f8 	call 47784 <_ZdlPv>
    8328:	fe f3 00 a8 	load_32 ra, 60(sp)
    832c:	de 03 01 05 	add_i sp, sp, 64
    8330:	1f 00 00 f0 	ret

0000000000008334 _ZNK15ShadowMapShader13shadeVerticesEPDv16_fPKS0_PKvt:
    8334:	de 03 fb 05 	add_i sp, sp, -320
    8338:	1e f3 04 88 	store_32 s24, 316(sp)
    833c:	3e e3 04 88 	store_32 s25, 312(sp)
    8340:	fe d3 04 88 	store_32 ra, 308(sp)
    8344:	20 83 f1 c0 	move s25, s3
    8348:	60 00 f1 c0 	move s3, s2
    834c:	00 83 f0 c0 	move s24, s1
    8350:	1e 00 00 05 	add_i s0, sp, 0
    8354:	40 00 03 0f 	move s2, 192
    8358:	20 80 f1 c0 	move s1, s3
    835c:	78 29 00 f8 	call 42464 <memcpy>
    8360:	00 00 00 4f 	movehi s0, 0
    8364:	20 00 00 4f 	movehi s1, 0
    8368:	00 10 05 00 	or s0, s0, 324
    836c:	00 00 00 a8 	load_32 s0, (s0)
    8370:	00 00 f0 c4 	move v0, s0
    8374:	1e 00 03 8e 	store_v v0, 192(sp)
    8378:	19 00 00 a8 	load_32 s0, (s25)
    837c:	1e 00 00 ae 	load_v v0, (sp)
    8380:	20 00 20 c6 	mul_f v1, v0, s0
    8384:	01 60 05 00 	or s0, s1, 344
    8388:	00 00 00 a8 	load_32 s0, (s0)
    838c:	39 10 00 a8 	load_32 s1, 4(s25)
    8390:	5e 00 01 ae 	load_v v2, 64(sp)
    8394:	21 00 00 c6 	add_f v1, v1, s0
    8398:	62 80 20 c6 	mul_f v3, v2, s1
    839c:	39 20 00 a8 	load_32 s1, 8(s25)
    83a0:	21 80 01 d2 	add_f v1, v1, v3
    83a4:	7e 00 02 ae 	load_v v3, 128(sp)
    83a8:	83 80 20 c6 	mul_f v4, v3, s1
    83ac:	39 30 00 a8 	load_32 s1, 12(s25)
    83b0:	21 00 02 d2 	add_f v1, v1, v4
    83b4:	21 80 00 c6 	add_f v1, v1, s1
    83b8:	38 00 00 8e 	store_v v1, (s24)
    83bc:	39 40 00 a8 	load_32 s1, 16(s25)
    83c0:	20 80 20 c6 	mul_f v1, v0, s1
    83c4:	39 50 00 a8 	load_32 s1, 20(s25)
    83c8:	82 80 20 c6 	mul_f v4, v2, s1
    83cc:	39 60 00 a8 	load_32 s1, 24(s25)
    83d0:	21 00 00 c6 	add_f v1, v1, s0
    83d4:	21 00 02 d2 	add_f v1, v1, v4
    83d8:	83 80 20 c6 	mul_f v4, v3, s1
    83dc:	39 70 00 a8 	load_32 s1, 28(s25)
    83e0:	21 00 02 d2 	add_f v1, v1, v4
    83e4:	21 80 00 c6 	add_f v1, v1, s1
    83e8:	38 00 01 8e 	store_v v1, 64(s24)
    83ec:	39 80 00 a8 	load_32 s1, 32(s25)
    83f0:	20 80 20 c6 	mul_f v1, v0, s1
    83f4:	39 90 00 a8 	load_32 s1, 36(s25)
    83f8:	82 80 20 c6 	mul_f v4, v2, s1
    83fc:	39 a0 00 a8 	load_32 s1, 40(s25)
    8400:	21 00 00 c6 	add_f v1, v1, s0
    8404:	21 00 02 d2 	add_f v1, v1, v4
    8408:	83 80 20 c6 	mul_f v4, v3, s1
    840c:	39 b0 00 a8 	load_32 s1, 44(s25)
    8410:	21 00 02 d2 	add_f v1, v1, v4
    8414:	21 80 00 c6 	add_f v1, v1, s1
    8418:	38 00 02 8e 	store_v v1, 128(s24)
    841c:	39 c0 00 a8 	load_32 s1, 48(s25)
    8420:	00 80 20 c6 	mul_f v0, v0, s1
    8424:	00 00 00 c6 	add_f v0, v0, s0
    8428:	19 d0 00 a8 	load_32 s0, 52(s25)
    842c:	42 00 20 c6 	mul_f v2, v2, s0
    8430:	19 e0 00 a8 	load_32 s0, 56(s25)
    8434:	00 00 01 d2 	add_f v0, v0, v2
    8438:	43 00 20 c6 	mul_f v2, v3, s0
    843c:	19 f0 00 a8 	load_32 s0, 60(s25)
    8440:	00 00 01 d2 	add_f v0, v0, v2
    8444:	00 00 00 c6 	add_f v0, v0, s0
    8448:	18 00 03 8e 	store_v v0, 192(s24)
    844c:	38 00 04 8e 	store_v v1, 256(s24)
    8450:	fe d3 04 a8 	load_32 ra, 308(sp)
    8454:	3e e3 04 a8 	load_32 s25, 312(sp)
    8458:	1e f3 04 a8 	load_32 s24, 316(sp)
    845c:	de 03 05 05 	add_i sp, sp, 320
    8460:	1f 00 00 f0 	ret

0000000000008464 _ZNK15ShadowMapShader11shadePixelsEPDv16_fPKS0_PKvPKPKN9librender7TextureEt:
    8464:	02 00 00 ae 	load_v v0, (s2)
    8468:	01 00 00 8e 	store_v v0, (s1)
    846c:	1f 00 00 f0 	ret

0000000000008470 _ZN12OutputShaderD0Ev:
    8470:	de 03 ff 05 	add_i sp, sp, -64
    8474:	fe f3 00 88 	store_32 ra, 60(sp)
    8478:	55 2e 00 f8 	call 47444 <_ZdlPv>
    847c:	fe f3 00 a8 	load_32 ra, 60(sp)
    8480:	de 03 01 05 	add_i sp, sp, 64
    8484:	1f 00 00 f0 	ret

0000000000008488 _ZNK12OutputShader13shadeVerticesEPDv16_fPKS0_PKvt:
    8488:	de 03 f9 05 	add_i sp, sp, -448
    848c:	1e f3 06 88 	store_32 s24, 444(sp)
    8490:	3e e3 06 88 	store_32 s25, 440(sp)
    8494:	5e d3 06 88 	store_32 s26, 436(sp)
    8498:	7e c3 06 88 	store_32 s27, 432(sp)
    849c:	fe b3 06 88 	store_32 ra, 428(sp)
    84a0:	5e 03 05 8e 	store_v v26, 320(sp)
    84a4:	20 83 f1 c0 	move s25, s3
    84a8:	60 00 f1 c0 	move s3, s2
    84ac:	7e e0 00 88 	store_32 s3, 56(sp)
    84b0:	5e 03 01 05 	add_i s26, sp, 64
    84b4:	00 83 f0 c0 	move s24, s1
    84b8:	40 00 03 0f 	move s2, 192
    84bc:	5e f0 00 88 	store_32 s2, 60(sp)
    84c0:	00 00 fd c0 	move s0, s26
    84c4:	20 80 f1 c0 	move s1, s3
    84c8:	1d 29 00 f8 	call 42100 <memcpy>
    84cc:	00 00 00 4f 	movehi s0, 0
    84d0:	20 00 00 4f 	movehi s1, 0
    84d4:	00 10 05 00 	or s0, s0, 324
    84d8:	00 00 00 a8 	load_32 s0, (s0)
    84dc:	40 03 f0 c4 	move v26, s0
    84e0:	5e 03 04 8e 	store_v v26, 256(sp)
    84e4:	19 00 00 a8 	load_32 s0, (s25)
    84e8:	1e 00 01 ae 	load_v v0, 64(sp)
    84ec:	20 00 20 c6 	mul_f v1, v0, s0
    84f0:	01 60 05 00 	or s0, s1, 344
    84f4:	60 03 00 a8 	load_32 s27, (s0)
    84f8:	19 10 00 a8 	load_32 s0, 4(s25)
    84fc:	41 80 0d c6 	add_f v2, v1, s27
    8500:	3e 00 02 ae 	load_v v1, 128(sp)
    8504:	61 00 20 c6 	mul_f v3, v1, s0
    8508:	19 20 00 a8 	load_32 s0, 8(s25)
    850c:	62 80 01 d2 	add_f v3, v2, v3
    8510:	5e 00 03 ae 	load_v v2, 192(sp)
    8514:	82 00 20 c6 	mul_f v4, v2, s0
    8518:	19 30 00 a8 	load_32 s0, 12(s25)
    851c:	63 00 02 d2 	add_f v3, v3, v4
    8520:	63 00 00 c6 	add_f v3, v3, s0
    8524:	78 00 00 8e 	store_v v3, (s24)
    8528:	19 40 00 a8 	load_32 s0, 16(s25)
    852c:	60 00 20 c6 	mul_f v3, v0, s0
    8530:	19 50 00 a8 	load_32 s0, 20(s25)
    8534:	81 00 20 c6 	mul_f v4, v1, s0
    8538:	19 60 00 a8 	load_32 s0, 24(s25)
    853c:	63 80 0d c6 	add_f v3, v3, s27
    8540:	63 00 02 d2 	add_f v3, v3, v4
    8544:	82 00 20 c6 	mul_f v4, v2, s0
    8548:	19 70 00 a8 	load_32 s0, 28(s25)
    854c:	63 00 02 d2 	add_f v3, v3, v4
    8550:	63 00 00 c6 	add_f v3, v3, s0
    8554:	78 00 01 8e 	store_v v3, 64(s24)
    8558:	19 80 00 a8 	load_32 s0, 32(s25)
    855c:	60 00 20 c6 	mul_f v3, v0, s0
    8560:	19 90 00 a8 	load_32 s0, 36(s25)
    8564:	81 00 20 c6 	mul_f v4, v1, s0
    8568:	19 a0 00 a8 	load_32 s0, 40(s25)
    856c:	63 80 0d c6 	add_f v3, v3, s27
    8570:	63 00 02 d2 	add_f v3, v3, v4
    8574:	82 00 20 c6 	mul_f v4, v2, s0
    8578:	19 b0 00 a8 	load_32 s0, 44(s25)
    857c:	63 00 02 d2 	add_f v3, v3, v4
    8580:	63 00 00 c6 	add_f v3, v3, s0
    8584:	78 00 02 8e 	store_v v3, 128(s24)
    8588:	19 c0 00 a8 	load_32 s0, 48(s25)
    858c:	60 00 20 c6 	mul_f v3, v0, s0
    8590:	19 d0 00 a8 	load_32 s0, 52(s25)
    8594:	81 00 20 c6 	mul_f v4, v1, s0
    8598:	19 e0 00 a8 	load_32 s0, 56(s25)
    859c:	63 80 0d c6 	add_f v3, v3, s27
    85a0:	63 00 02 d2 	add_f v3, v3, v4
    85a4:	82 00 20 c6 	mul_f v4, v2, s0
    85a8:	19 f0 00 a8 	load_32 s0, 60(s25)
    85ac:	63 00 02 d2 	add_f v3, v3, v4
    85b0:	63 00 00 c6 	add_f v3, v3, s0
    85b4:	78 00 03 8e 	store_v v3, 192(s24)
    85b8:	19 50 02 a8 	load_32 s0, 148(s25)
    85bc:	60 00 20 c6 	mul_f v3, v0, s0
    85c0:	19 60 02 a8 	load_32 s0, 152(s25)
    85c4:	81 00 20 c6 	mul_f v4, v1, s0
    85c8:	19 70 02 a8 	load_32 s0, 156(s25)
    85cc:	63 80 0d c6 	add_f v3, v3, s27
    85d0:	63 00 02 d2 	add_f v3, v3, v4
    85d4:	82 00 20 c6 	mul_f v4, v2, s0
    85d8:	19 80 02 a8 	load_32 s0, 160(s25)
    85dc:	63 00 02 d2 	add_f v3, v3, v4
    85e0:	63 00 00 c6 	add_f v3, v3, s0
    85e4:	78 00 08 8e 	store_v v3, 512(s24)
    85e8:	19 90 02 a8 	load_32 s0, 164(s25)
    85ec:	60 00 20 c6 	mul_f v3, v0, s0
    85f0:	19 a0 02 a8 	load_32 s0, 168(s25)
    85f4:	81 00 20 c6 	mul_f v4, v1, s0
    85f8:	19 b0 02 a8 	load_32 s0, 172(s25)
    85fc:	63 80 0d c6 	add_f v3, v3, s27
    8600:	63 00 02 d2 	add_f v3, v3, v4
    8604:	82 00 20 c6 	mul_f v4, v2, s0
    8608:	19 c0 02 a8 	load_32 s0, 176(s25)
    860c:	63 00 02 d2 	add_f v3, v3, v4
    8610:	63 00 00 c6 	add_f v3, v3, s0
    8614:	78 00 09 8e 	store_v v3, 576(s24)
    8618:	19 d0 02 a8 	load_32 s0, 180(s25)
    861c:	60 00 20 c6 	mul_f v3, v0, s0
    8620:	19 e0 02 a8 	load_32 s0, 184(s25)
    8624:	81 00 20 c6 	mul_f v4, v1, s0
    8628:	19 f0 02 a8 	load_32 s0, 188(s25)
    862c:	63 80 0d c6 	add_f v3, v3, s27
    8630:	63 00 02 d2 	add_f v3, v3, v4
    8634:	82 00 20 c6 	mul_f v4, v2, s0
    8638:	19 00 03 a8 	load_32 s0, 192(s25)
    863c:	63 00 02 d2 	add_f v3, v3, v4
    8640:	63 00 00 c6 	add_f v3, v3, s0
    8644:	78 00 0a 8e 	store_v v3, 640(s24)
    8648:	19 10 03 a8 	load_32 s0, 196(s25)
    864c:	00 00 20 c6 	mul_f v0, v0, s0
    8650:	19 20 03 a8 	load_32 s0, 200(s25)
    8654:	21 00 20 c6 	mul_f v1, v1, s0
    8658:	19 30 03 a8 	load_32 s0, 204(s25)
    865c:	00 80 0d c6 	add_f v0, v0, s27
    8660:	00 80 00 d2 	add_f v0, v0, v1
    8664:	22 00 20 c6 	mul_f v1, v2, s0
    8668:	19 40 03 a8 	load_32 s0, 208(s25)
    866c:	00 80 00 d2 	add_f v0, v0, v1
    8670:	00 00 00 c6 	add_f v0, v0, s0
    8674:	18 00 0b 8e 	store_v v0, 704(s24)
    8678:	1e e0 00 a8 	load_32 s0, 56(sp)
    867c:	20 00 03 05 	add_i s1, s0, 192
    8680:	00 00 fd c0 	move s0, s26
    8684:	5e f0 00 a8 	load_32 s2, 60(sp)
    8688:	ad 28 00 f8 	call 41652 <memcpy>
    868c:	5e 03 04 8e 	store_v v26, 256(sp)
    8690:	19 00 01 a8 	load_32 s0, 64(s25)
    8694:	1e 00 01 ae 	load_v v0, 64(sp)
    8698:	20 00 20 c6 	mul_f v1, v0, s0
    869c:	19 10 01 a8 	load_32 s0, 68(s25)
    86a0:	5e 00 02 ae 	load_v v2, 128(sp)
    86a4:	62 00 20 c6 	mul_f v3, v2, s0
    86a8:	19 20 01 a8 	load_32 s0, 72(s25)
    86ac:	21 80 0d c6 	add_f v1, v1, s27
    86b0:	21 80 01 d2 	add_f v1, v1, v3
    86b4:	7e 00 03 ae 	load_v v3, 192(sp)
    86b8:	83 00 20 c6 	mul_f v4, v3, s0
    86bc:	19 30 01 a8 	load_32 s0, 76(s25)
    86c0:	21 00 02 d2 	add_f v1, v1, v4
    86c4:	21 00 00 c6 	add_f v1, v1, s0
    86c8:	38 00 04 8e 	store_v v1, 256(s24)
    86cc:	19 40 01 a8 	load_32 s0, 80(s25)
    86d0:	20 00 20 c6 	mul_f v1, v0, s0
    86d4:	19 50 01 a8 	load_32 s0, 84(s25)
    86d8:	82 00 20 c6 	mul_f v4, v2, s0
    86dc:	19 60 01 a8 	load_32 s0, 88(s25)
    86e0:	21 80 0d c6 	add_f v1, v1, s27
    86e4:	21 00 02 d2 	add_f v1, v1, v4
    86e8:	83 00 20 c6 	mul_f v4, v3, s0
    86ec:	19 70 01 a8 	load_32 s0, 92(s25)
    86f0:	21 00 02 d2 	add_f v1, v1, v4
    86f4:	21 00 00 c6 	add_f v1, v1, s0
    86f8:	38 00 05 8e 	store_v v1, 320(s24)
    86fc:	19 80 01 a8 	load_32 s0, 96(s25)
    8700:	20 00 20 c6 	mul_f v1, v0, s0
    8704:	19 90 01 a8 	load_32 s0, 100(s25)
    8708:	82 00 20 c6 	mul_f v4, v2, s0
    870c:	19 a0 01 a8 	load_32 s0, 104(s25)
    8710:	21 80 0d c6 	add_f v1, v1, s27
    8714:	21 00 02 d2 	add_f v1, v1, v4
    8718:	83 00 20 c6 	mul_f v4, v3, s0
    871c:	19 b0 01 a8 	load_32 s0, 108(s25)
    8720:	21 00 02 d2 	add_f v1, v1, v4
    8724:	21 00 00 c6 	add_f v1, v1, s0
    8728:	38 00 06 8e 	store_v v1, 384(s24)
    872c:	19 c0 01 a8 	load_32 s0, 112(s25)
    8730:	00 00 20 c6 	mul_f v0, v0, s0
    8734:	19 d0 01 a8 	load_32 s0, 116(s25)
    8738:	22 00 20 c6 	mul_f v1, v2, s0
    873c:	19 e0 01 a8 	load_32 s0, 120(s25)
    8740:	00 80 0d c6 	add_f v0, v0, s27
    8744:	00 80 00 d2 	add_f v0, v0, v1
    8748:	23 00 20 c6 	mul_f v1, v3, s0
    874c:	19 f0 01 a8 	load_32 s0, 124(s25)
    8750:	00 80 00 d2 	add_f v0, v0, v1
    8754:	00 00 00 c6 	add_f v0, v0, s0
    8758:	18 00 07 8e 	store_v v0, 448(s24)
    875c:	5e 03 05 ae 	load_v v26, 320(sp)
    8760:	fe b3 06 a8 	load_32 ra, 428(sp)
    8764:	7e c3 06 a8 	load_32 s27, 432(sp)
    8768:	5e d3 06 a8 	load_32 s26, 436(sp)
    876c:	3e e3 06 a8 	load_32 s25, 440(sp)
    8770:	1e f3 06 a8 	load_32 s24, 444(sp)
    8774:	de 03 07 05 	add_i sp, sp, 448
    8778:	1f 00 00 f0 	ret

000000000000877c _ZNK12OutputShader11shadePixelsEPDv16_fPKS0_PKvPKPKN9librender7TextureEt:
    877c:	de 03 f9 05 	add_i sp, sp, -448
    8780:	1e f3 06 88 	store_32 s24, 444(sp)
    8784:	3e e3 06 88 	store_32 s25, 440(sp)
    8788:	fe d3 06 88 	store_32 ra, 436(sp)
    878c:	5e 03 05 8e 	store_v v26, 320(sp)
    8790:	7e 03 04 8e 	store_v v27, 256(sp)
    8794:	00 03 f1 c0 	move s24, s2
    8798:	00 00 00 4f 	movehi s0, 0
    879c:	c0 00 00 4f 	movehi s6, 0
    87a0:	18 00 00 ae 	load_v v0, (s24)
    87a4:	e0 00 00 4f 	movehi s7, 0
    87a8:	58 00 01 ae 	load_v v2, 64(s24)
    87ac:	00 b0 05 00 	or s0, s0, 364
    87b0:	e7 60 05 00 	or s7, s7, 344
    87b4:	20 00 20 d2 	mul_f v1, v0, v0
    87b8:	62 00 21 d2 	mul_f v3, v2, v2
    87bc:	21 80 01 d2 	add_f v1, v1, v3
    87c0:	78 00 02 ae 	load_v v3, 128(s24)
    87c4:	40 00 00 a8 	load_32 s2, (s0)
    87c8:	1a 34 5f 4f 	movehi s0, 195002
    87cc:	83 80 21 d2 	mul_f v4, v3, v3
    87d0:	00 7c 67 00 	or s0, s0, 6623
    87d4:	21 00 02 d2 	add_f v1, v1, v4
    87d8:	a0 00 f0 c4 	move v5, s0
    87dc:	06 70 05 00 	or s0, s6, 348
    87e0:	00 00 00 a8 	load_32 s0, (s0)
    87e4:	81 00 21 c6 	mul_f v4, v1, s2
    87e8:	21 04 00 29 	ashr v1, v1, 1
    87ec:	25 80 60 d0 	sub_i v1, v5, v1
    87f0:	a0 00 f0 c4 	move v5, s0
    87f4:	03 00 02 a8 	load_32 s0, 128(s3)
    87f8:	c3 10 02 a8 	load_32 s6, 132(s3)
    87fc:	84 80 20 d2 	mul_f v4, v4, v1
    8800:	84 80 20 d2 	mul_f v4, v4, v1
    8804:	85 00 12 d2 	sub_f v4, v5, v4
    8808:	24 80 20 d2 	mul_f v1, v4, v1
    880c:	42 80 20 d2 	mul_f v2, v2, v1
    8810:	00 80 20 d2 	mul_f v0, v0, v1
    8814:	23 80 20 d2 	mul_f v1, v3, v1
    8818:	42 00 23 c6 	mul_f v2, v2, s6
    881c:	c0 00 80 4f 	movehi s6, 262144
    8820:	00 00 20 c6 	mul_f v0, v0, s0
    8824:	03 20 02 a8 	load_32 s0, 136(s3)
    8828:	21 00 20 c6 	mul_f v1, v1, s0
    882c:	03 40 02 a8 	load_32 s0, 144(s3)
    8830:	42 00 33 c4 	xor v2, v2, s6
    8834:	c0 00 00 4f 	movehi s6, 0
    8838:	02 00 10 d2 	sub_f v0, v2, v0
    883c:	00 80 10 d2 	sub_f v0, v0, v1
    8840:	00 00 20 c6 	mul_f v0, v0, s0
    8844:	06 10 05 00 	or s0, s6, 324
    8848:	c0 00 00 a8 	load_32 s6, (s0)
    884c:	e7 00 00 a8 	load_32 s7, (s7)
    8850:	63 30 02 a8 	load_32 s3, 140(s3)
    8854:	00 00 c3 c6 	cmpgt_f s0, v0, s6
    8858:	40 03 f3 c4 	move v26, s6
    885c:	00 00 f3 c8 	move_mask v0, s0, s6
    8860:	04 00 00 a8 	load_32 s0, (s4)
    8864:	38 00 04 ae 	load_v v1, 256(s24)
    8868:	58 00 05 ae 	load_v v2, 320(s24)
    886c:	20 83 f0 c0 	move s25, s1
    8870:	00 81 e3 c6 	cmplt_f s8, v0, s7
    8874:	20 80 f2 c0 	move s1, s5
    8878:	21 00 21 c6 	mul_f v1, v1, s2
    887c:	42 00 21 c6 	mul_f v2, v2, s2
    8880:	00 a0 f3 c8 	move_mask v0, s8, s7
    8884:	60 83 01 c6 	add_f v27, v0, s3
    8888:	01 00 01 c6 	add_f v0, v1, s2
    888c:	22 00 01 c6 	add_f v1, v2, s2
    8890:	5e 00 00 05 	add_i s2, sp, 0
    8894:	4d 10 00 f8 	call 16692 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_>
    8898:	1e 00 00 ae 	load_v v0, (sp)
    889c:	00 00 00 4f 	movehi s0, 0
    88a0:	38 00 06 ae 	load_v v1, 384(s24)
    88a4:	20 00 00 4f 	movehi s1, 0
    88a8:	00 20 06 00 	or s0, s0, 392
    88ac:	21 50 05 00 	or s1, s1, 340
    88b0:	00 80 10 d2 	sub_f v0, v0, v1
    88b4:	00 00 00 a8 	load_32 s0, (s0)
    88b8:	21 00 00 a8 	load_32 s1, (s1)
    88bc:	00 00 c0 c6 	cmpgt_f s0, v0, s0
    88c0:	7b 83 20 ca 	mul_f_mask v27, s0, v27, s1
    88c4:	79 03 00 8e 	store_v v27, (s25)
    88c8:	79 03 01 8e 	store_v v27, 64(s25)
    88cc:	79 03 02 8e 	store_v v27, 128(s25)
    88d0:	59 03 03 8e 	store_v v26, 192(s25)
    88d4:	7e 03 04 ae 	load_v v27, 256(sp)
    88d8:	5e 03 05 ae 	load_v v26, 320(sp)
    88dc:	fe d3 06 a8 	load_32 ra, 436(sp)
    88e0:	3e e3 06 a8 	load_32 s25, 440(sp)
    88e4:	1e f3 06 a8 	load_32 s24, 444(sp)
    88e8:	de 03 07 05 	add_i sp, sp, 448
    88ec:	1f 00 00 f0 	ret

00000000000088f0 _ZN9librender7SurfaceC2EiiNS0_10ColorSpaceEPv:
    88f0:	de 03 fe 05 	add_i sp, sp, -128
    88f4:	1e f3 01 88 	store_32 s24, 124(sp)
    88f8:	fe e3 01 88 	store_32 ra, 120(sp)
    88fc:	00 03 f0 c0 	move s24, s0
    8900:	03 0c 00 18 	cmplt_u s0, s3, 3
    8904:	38 00 03 88 	store_32 s1, 192(s24)
    8908:	58 10 03 88 	store_32 s2, 196(s24)
    890c:	78 50 03 88 	store_32 s3, 212(s24)
    8910:	40 00 00 f4 	bnz s0, 8 <_ZN9librender7SurfaceC2EiiNS0_10ColorSpaceEPv+0x28>
    8914:	43 00 00 f6 	b 268 <_ZN9librender7SurfaceC2EiiNS0_10ColorSpaceEPv+0x130>
    8918:	02 00 00 4f 	movehi s0, 2
    891c:	63 08 00 0b 	shl s3, s3, 2
    8920:	00 00 01 00 	or s0, s0, 64
    8924:	00 80 51 c0 	add_i s0, s0, s3
    8928:	00 00 00 a8 	load_32 s0, (s0)
    892c:	18 60 03 88 	store_32 s0, 216(s24)
    8930:	00 80 70 c0 	mull_i s0, s0, s1
    8934:	18 20 03 88 	store_32 s0, 200(s24)
    8938:	44 00 00 f4 	bnz s4, 8 <_ZN9librender7SurfaceC2EiiNS0_10ColorSpaceEPv+0x50>
    893c:	03 00 00 f6 	b 12 <_ZN9librender7SurfaceC2EiiNS0_10ColorSpaceEPv+0x58>
    8940:	00 00 00 0f 	move s0, 0
    8944:	08 00 00 f6 	b 32 <_ZN9librender7SurfaceC2EiiNS0_10ColorSpaceEPv+0x74>
    8948:	20 00 71 c0 	mull_i s1, s0, s2
    894c:	00 00 01 0f 	move s0, 64
    8950:	04 1f 00 f8 	call 31760 <memalign>
    8954:	80 00 f0 c0 	move s4, s0
    8958:	38 00 03 a8 	load_32 s1, 192(s24)
    895c:	58 10 03 a8 	load_32 s2, 196(s24)
    8960:	00 04 00 0f 	move s0, 1
    8964:	60 80 a0 c2 	itof s3, s1
    8968:	a0 00 00 4f 	movehi s5, 0
    896c:	98 30 03 88 	store_32 s4, 204(s24)
    8970:	18 40 03 82 	store_8 s0, 208(s24)
    8974:	40 00 a1 c2 	itof s2, s2
    8978:	a5 c0 05 00 	or s5, s5, 368
    897c:	05 00 00 a8 	load_32 s0, (s5)
    8980:	c0 80 c1 c1 	reciprocal s6, s3
    8984:	a6 80 21 c2 	mul_f s5, s6, s3
    8988:	a0 80 12 c2 	sub_f s5, s0, s5
    898c:	a6 80 22 c2 	mul_f s5, s6, s5
    8990:	c0 00 c1 c1 	reciprocal s6, s2
    8994:	65 80 21 c2 	mul_f s3, s5, s3
    8998:	60 80 11 c2 	sub_f s3, s0, s3
    899c:	65 80 21 c2 	mul_f s3, s5, s3
    89a0:	a6 00 21 c2 	mul_f s5, s6, s2
    89a4:	a0 80 12 c2 	sub_f s5, s0, s5
    89a8:	a6 80 22 c2 	mul_f s5, s6, s5
    89ac:	c1 00 00 4f 	movehi s6, 1
    89b0:	c6 00 79 00 	or s6, s6, 7744
    89b4:	63 00 20 c2 	mul_f s3, s3, s0
    89b8:	06 00 00 ae 	load_v v0, (s6)
    89bc:	45 00 21 c2 	mul_f s2, s5, s2
    89c0:	40 00 11 c2 	sub_f s2, s0, s2
    89c4:	45 00 21 c2 	mul_f s2, s5, s2
    89c8:	a1 00 00 4f 	movehi s5, 1
    89cc:	00 80 21 c6 	mul_f v0, v0, s3
    89d0:	65 00 7a 00 	or s3, s5, 7808
    89d4:	18 00 01 8e 	store_v v0, 64(s24)
    89d8:	03 00 00 ae 	load_v v0, (s3)
    89dc:	02 00 20 c2 	mul_f s0, s2, s0
    89e0:	41 00 00 4f 	movehi s2, 1
    89e4:	00 00 20 c6 	mul_f v0, v0, s0
    89e8:	02 00 7b 00 	or s0, s2, 7872
    89ec:	18 00 02 8e 	store_v v0, 128(s24)
    89f0:	00 00 00 ae 	load_v v0, (s0)
    89f4:	01 00 00 4f 	movehi s0, 1
    89f8:	00 00 7c 00 	or s0, s0, 7936
    89fc:	00 80 70 c4 	mull_i v0, v0, s1
    8a00:	20 00 00 ae 	load_v v1, (s0)
    8a04:	00 00 52 c4 	add_i v0, v0, s4
    8a08:	00 80 50 d0 	add_i v0, v0, v1
    8a0c:	18 00 00 8e 	store_v v0, (s24)
    8a10:	fe e3 01 a8 	load_32 ra, 120(sp)
    8a14:	1e f3 01 a8 	load_32 s24, 124(sp)
    8a18:	de 03 02 05 	add_i sp, sp, 128
    8a1c:	1f 00 00 f0 	ret
    8a20:	02 00 00 4f 	movehi s0, 2
    8a24:	20 a8 00 0f 	move s1, 42
    8a28:	3e 20 00 88 	store_32 s1, 8(sp)
    8a2c:	22 00 00 4f 	movehi s1, 2
    8a30:	00 30 0a 00 	or s0, s0, 652
    8a34:	1e 30 00 88 	store_32 s0, 12(sp)
    8a38:	02 00 00 4f 	movehi s0, 2
    8a3c:	21 88 0b 00 	or s1, s1, 738
    8a40:	3e 10 00 88 	store_32 s1, 4(sp)
    8a44:	00 b8 0d 00 	or s0, s0, 878
    8a48:	1e 00 00 88 	store_32 s0, (sp)
    8a4c:	f0 27 00 f8 	call 40896 <printf>
    8a50:	00 00 e0 c3 	break

0000000000008a54 _ZN9librender7Surface23initializeOffsetVectorsEv:
    8a54:	20 00 03 a8 	load_32 s1, 192(s0)
    8a58:	60 00 00 4f 	movehi s3, 0
    8a5c:	63 c0 05 00 	or s3, s3, 368
    8a60:	40 80 a0 c2 	itof s2, s1
    8a64:	63 00 00 a8 	load_32 s3, (s3)
    8a68:	a0 10 03 a8 	load_32 s5, 196(s0)
    8a6c:	80 00 c1 c1 	reciprocal s4, s2
    8a70:	a0 80 a2 c2 	itof s5, s5
    8a74:	c4 00 21 c2 	mul_f s6, s4, s2
    8a78:	c3 00 13 c2 	sub_f s6, s3, s6
    8a7c:	84 00 23 c2 	mul_f s4, s4, s6
    8a80:	c0 80 c2 c1 	reciprocal s6, s5
    8a84:	44 00 21 c2 	mul_f s2, s4, s2
    8a88:	43 00 11 c2 	sub_f s2, s3, s2
    8a8c:	44 00 21 c2 	mul_f s2, s4, s2
    8a90:	86 80 22 c2 	mul_f s4, s6, s5
    8a94:	83 00 12 c2 	sub_f s4, s3, s4
    8a98:	86 00 22 c2 	mul_f s4, s6, s4
    8a9c:	c1 00 00 4f 	movehi s6, 1
    8aa0:	c6 00 7d 00 	or s6, s6, 8000
    8aa4:	42 80 21 c2 	mul_f s2, s2, s3
    8aa8:	06 00 00 ae 	load_v v0, (s6)
    8aac:	a4 80 22 c2 	mul_f s5, s4, s5
    8ab0:	a3 80 12 c2 	sub_f s5, s3, s5
    8ab4:	84 80 22 c2 	mul_f s4, s4, s5
    8ab8:	a1 00 00 4f 	movehi s5, 1
    8abc:	00 00 21 c6 	mul_f v0, v0, s2
    8ac0:	45 00 7e 00 	or s2, s5, 8064
    8ac4:	00 00 01 8e 	store_v v0, 64(s0)
    8ac8:	02 00 00 ae 	load_v v0, (s2)
    8acc:	44 80 21 c2 	mul_f s2, s4, s3
    8ad0:	61 00 00 4f 	movehi s3, 1
    8ad4:	00 00 21 c6 	mul_f v0, v0, s2
    8ad8:	43 00 7f 00 	or s2, s3, 8128
    8adc:	00 00 02 8e 	store_v v0, 128(s0)
    8ae0:	02 00 00 ae 	load_v v0, (s2)
    8ae4:	42 00 00 4f 	movehi s2, 2
    8ae8:	60 30 03 a8 	load_32 s3, 204(s0)
    8aec:	42 00 00 00 	or s2, s2, 0
    8af0:	00 80 70 c4 	mull_i v0, v0, s1
    8af4:	22 00 00 ae 	load_v v1, (s2)
    8af8:	00 80 51 c4 	add_i v0, v0, s3
    8afc:	00 80 50 d0 	add_i v0, v0, v1
    8b00:	00 00 00 8e 	store_v v0, (s0)
    8b04:	1f 00 00 f0 	ret

0000000000008b08 _ZN9librender7SurfaceD2Ev:
    8b08:	de 03 ff 05 	add_i sp, sp, -64
    8b0c:	fe f3 00 88 	store_32 ra, 60(sp)
    8b10:	20 40 03 a0 	load_u8 s1, 208(s0)
    8b14:	61 00 00 f2 	bz s1, 12 <_ZN9librender7SurfaceD2Ev+0x18>
    8b18:	00 30 03 a8 	load_32 s0, 204(s0)
    8b1c:	d6 19 00 f8 	call 26456 <free>
    8b20:	fe f3 00 a8 	load_32 ra, 60(sp)
    8b24:	de 03 01 05 	add_i sp, sp, 64
    8b28:	1f 00 00 f0 	ret

0000000000008b2c _ZN9librender7Surface13slowClearTileEiij:
    8b2c:	de 03 ff 05 	add_i sp, sp, -64
    8b30:	1e f3 00 88 	store_32 s24, 60(sp)
    8b34:	3e e3 00 88 	store_32 s25, 56(sp)
    8b38:	5e d3 00 88 	store_32 s26, 52(sp)
    8b3c:	7e c3 00 88 	store_32 s27, 48(sp)
    8b40:	fe b3 00 88 	store_32 ra, 44(sp)
    8b44:	00 01 03 a8 	load_32 s8, 192(s0)
    8b48:	00 83 f1 c0 	move s24, s3
    8b4c:	a0 00 01 0f 	move s5, 64
    8b50:	88 80 60 c0 	sub_i s4, s8, s1
    8b54:	64 00 01 14 	cmplt_i s3, s4, 64
    8b58:	20 03 f2 c0 	move s25, s4
    8b5c:	43 00 00 f4 	bnz s3, 8 <_ZN9librender7Surface13slowClearTileEiij+0x38>
    8b60:	20 83 f2 c0 	move s25, s5
    8b64:	60 10 03 a8 	load_32 s3, 196(s0)
    8b68:	63 00 61 c0 	sub_i s3, s3, s2
    8b6c:	c3 00 01 14 	cmplt_i s6, s3, 64
    8b70:	e0 80 f1 c0 	move s7, s3
    8b74:	46 00 00 f4 	bnz s6, 8 <_ZN9librender7Surface13slowClearTileEiij+0x50>
    8b78:	e0 80 f2 c0 	move s7, s5
    8b7c:	a0 50 03 a8 	load_32 s5, 212(s0)
    8b80:	c5 08 00 18 	cmplt_u s6, s5, 2
    8b84:	46 00 00 f4 	bnz s6, 8 <_ZN9librender7Surface13slowClearTileEiij+0x60>
    8b88:	20 00 00 f6 	b 128 <_ZN9librender7Surface13slowClearTileEiij+0xdc>
    8b8c:	00 21 03 a8 	load_32 s8, 200(s0)
    8b90:	a3 04 00 14 	cmplt_i s5, s3, 1
    8b94:	60 60 03 a8 	load_32 s3, 216(s0)
    8b98:	c5 06 00 f4 	bnz s5, 216 <_ZN9librender7Surface13slowClearTileEiij+0x144>
    8b9c:	84 04 00 14 	cmplt_i s4, s4, 1
    8ba0:	84 06 00 f4 	bnz s4, 208 <_ZN9librender7Surface13slowClearTileEiij+0x144>
    8ba4:	83 80 7c c0 	mull_i s4, s3, s25
    8ba8:	c0 30 03 a8 	load_32 s6, 204(s0)
    8bac:	88 00 62 c0 	sub_i s4, s8, s4
    8bb0:	08 00 71 c0 	mull_i s0, s8, s2
    8bb4:	23 80 70 c0 	mull_i s1, s3, s1
    8bb8:	a4 7c 00 09 	ashr s5, s4, 31
    8bbc:	06 00 50 c0 	add_i s0, s6, s0
    8bc0:	a5 78 00 0a 	shr s5, s5, 30
    8bc4:	84 80 52 c0 	add_i s4, s4, s5
    8bc8:	20 80 50 c0 	add_i s1, s0, s1
    8bcc:	00 00 00 0f 	move s0, 0
    8bd0:	44 08 00 09 	ashr s2, s4, 2
    8bd4:	60 00 f0 c0 	move s3, s0
    8bd8:	42 08 00 0b 	shl s2, s2, 2
    8bdc:	80 00 f0 c0 	move s4, s0
    8be0:	84 04 00 05 	add_i s4, s4, 1
    8be4:	01 03 00 88 	store_32 s24, (s1)
    8be8:	21 10 00 05 	add_i s1, s1, 4
    8bec:	a4 80 4c c1 	cmplt_i s5, s4, s25
    8bf0:	85 ff ff f5 	bnz s5, -16 <_ZN9librender7Surface13slowClearTileEiij+0xb4>
    8bf4:	63 04 00 05 	add_i s3, s3, 1
    8bf8:	21 00 51 c0 	add_i s1, s1, s2
    8bfc:	83 80 43 c1 	cmplt_i s4, s3, s7
    8c00:	e4 fe ff f5 	bnz s4, -36 <_ZN9librender7Surface13slowClearTileEiij+0xb0>
    8c04:	1b 00 00 f6 	b 108 <_ZN9librender7Surface13slowClearTileEiij+0x144>
    8c08:	85 08 00 10 	cmpeq_i s4, s5, 2
    8c0c:	44 00 00 f4 	bnz s4, 8 <_ZN9librender7Surface13slowClearTileEiij+0xe8>
    8c10:	18 00 00 f6 	b 96 <_ZN9librender7Surface13slowClearTileEiij+0x144>
    8c14:	63 04 00 14 	cmplt_i s3, s3, 1
    8c18:	c3 02 00 f4 	bnz s3, 88 <_ZN9librender7Surface13slowClearTileEiij+0x144>
    8c1c:	68 00 71 c0 	mull_i s3, s8, s2
    8c20:	40 60 03 a8 	load_32 s2, 216(s0)
    8c24:	40 03 00 0f 	move s26, 0
    8c28:	63 80 50 c0 	add_i s3, s3, s1
    8c2c:	20 30 03 a8 	load_32 s1, 204(s0)
    8c30:	42 80 71 c0 	mull_i s2, s2, s3
    8c34:	fe a0 00 88 	store_32 s7, 40(sp)
    8c38:	1e 90 00 88 	store_32 s0, 36(sp)
    8c3c:	62 83 50 c0 	add_i s27, s2, s1
    8c40:	00 80 fd c0 	move s0, s27
    8c44:	20 00 fc c0 	move s1, s24
    8c48:	40 80 fc c0 	move s2, s25
    8c4c:	19 24 00 f8 	call 36964 <memset>
    8c50:	1e 90 00 a8 	load_32 s0, 36(sp)
    8c54:	5a 07 00 05 	add_i s26, s26, 1
    8c58:	fe a0 00 a8 	load_32 s7, 40(sp)
    8c5c:	20 20 03 a8 	load_32 s1, 200(s0)
    8c60:	41 08 00 0b 	shl s2, s1, 2
    8c64:	3a 80 43 c1 	cmplt_i s1, s26, s7
    8c68:	7b 03 51 c0 	add_i s27, s27, s2
    8c6c:	a1 fe ff f5 	bnz s1, -44 <_ZN9librender7Surface13slowClearTileEiij+0x114>
    8c70:	fe b3 00 a8 	load_32 ra, 44(sp)
    8c74:	7e c3 00 a8 	load_32 s27, 48(sp)
    8c78:	5e d3 00 a8 	load_32 s26, 52(sp)
    8c7c:	3e e3 00 a8 	load_32 s25, 56(sp)
    8c80:	1e f3 00 a8 	load_32 s24, 60(sp)
    8c84:	de 03 01 05 	add_i sp, sp, 64
    8c88:	1f 00 00 f0 	ret

0000000000008c8c _ZN9librender7Surface9flushTileEii:
    8c8c:	a0 00 03 a8 	load_32 s5, 192(s0)
    8c90:	00 01 01 0f 	move s8, 64
    8c94:	c0 60 03 a8 	load_32 s6, 216(s0)
    8c98:	e5 80 60 c0 	sub_i s7, s5, s1
    8c9c:	87 00 01 14 	cmplt_i s4, s7, 64
    8ca0:	60 80 f3 c0 	move s3, s7
    8ca4:	44 00 00 f4 	bnz s4, 8 <_ZN9librender7Surface9flushTileEii+0x20>
    8ca8:	60 00 f4 c0 	move s3, s8
    8cac:	80 10 03 a8 	load_32 s4, 196(s0)
    8cb0:	24 01 61 c0 	sub_i s9, s4, s2
    8cb4:	49 01 01 14 	cmplt_i s10, s9, 64
    8cb8:	80 80 f4 c0 	move s4, s9
    8cbc:	4a 00 00 f4 	bnz s10, 8 <_ZN9librender7Surface9flushTileEii+0x38>
    8cc0:	80 00 f4 c0 	move s4, s8
    8cc4:	09 05 00 14 	cmplt_i s8, s9, 1
    8cc8:	c8 02 00 f4 	bnz s8, 88 <_ZN9librender7Surface9flushTileEii+0x94>
    8ccc:	e7 04 00 14 	cmplt_i s7, s7, 1
    8cd0:	87 02 00 f4 	bnz s7, 80 <_ZN9librender7Surface9flushTileEii+0x94>
    8cd4:	45 00 71 c0 	mull_i s2, s5, s2
    8cd8:	22 80 50 c0 	add_i s1, s2, s1
    8cdc:	45 80 61 c0 	sub_i s2, s5, s3
    8ce0:	a0 30 03 a8 	load_32 s5, 204(s0)
    8ce4:	e1 00 73 c0 	mull_i s7, s1, s6
    8ce8:	20 00 00 0f 	move s1, 0
    8cec:	02 00 73 c0 	mull_i s0, s2, s6
    8cf0:	47 80 52 c0 	add_i s2, s7, s5
    8cf4:	a0 80 f0 c0 	move s5, s1
    8cf8:	c0 80 f0 c0 	move s6, s1
    8cfc:	c6 40 00 05 	add_i s6, s6, 16
    8d00:	02 00 00 e4 	dflush s2
    8d04:	42 00 01 05 	add_i s2, s2, 64
    8d08:	e6 80 41 c1 	cmplt_i s7, s6, s3
    8d0c:	87 ff ff f5 	bnz s7, -16 <_ZN9librender7Surface9flushTileEii+0x70>
    8d10:	a5 04 00 05 	add_i s5, s5, 1
    8d14:	42 00 50 c0 	add_i s2, s2, s0
    8d18:	c5 00 42 c1 	cmplt_i s6, s5, s4
    8d1c:	e6 fe ff f5 	bnz s6, -36 <_ZN9librender7Surface9flushTileEii+0x6c>
    8d20:	1f 00 00 f0 	ret

0000000000008d24 _ZN9librender13RenderContextC2Ej:
    8d24:	de 03 ff 05 	add_i sp, sp, -64
    8d28:	1e f3 00 88 	store_32 s24, 60(sp)
    8d2c:	3e e3 00 88 	store_32 s25, 56(sp)
    8d30:	5e d3 00 88 	store_32 s26, 52(sp)
    8d34:	7e c3 00 88 	store_32 s27, 48(sp)
    8d38:	fe b3 00 88 	store_32 ra, 44(sp)
    8d3c:	00 83 f0 c0 	move s24, s1
    8d40:	20 03 f0 c0 	move s25, s0
    8d44:	40 03 00 0f 	move s26, 0
    8d48:	59 03 00 82 	store_8 s26, (s25)
    8d4c:	79 73 00 05 	add_i s27, s25, 28
    8d50:	59 13 00 88 	store_32 s26, 4(s25)
    8d54:	59 23 00 88 	store_32 s26, 8(s25)
    8d58:	59 33 00 88 	store_32 s26, 12(s25)
    8d5c:	59 43 00 88 	store_32 s26, 16(s25)
    8d60:	59 53 00 88 	store_32 s26, 20(s25)
    8d64:	59 63 00 88 	store_32 s26, 24(s25)
    8d68:	00 00 fc c0 	move s0, s24
    8d6c:	1e 2c 00 f8 	call 45176 <_Znaj>
    8d70:	19 70 00 88 	store_32 s0, 28(s25)
    8d74:	19 83 00 88 	store_32 s24, 32(s25)
    8d78:	19 90 00 88 	store_32 s0, 36(s25)
    8d7c:	59 a3 00 86 	store_16 s26, 40(s25)
    8d80:	59 53 01 88 	store_32 s26, 84(s25)
    8d84:	59 b3 00 88 	store_32 s26, 44(s25)
    8d88:	59 c3 00 88 	store_32 s26, 48(s25)
    8d8c:	59 d3 00 88 	store_32 s26, 52(s25)
    8d90:	59 e3 00 88 	store_32 s26, 56(s25)
    8d94:	59 f3 00 88 	store_32 s26, 60(s25)
    8d98:	59 03 01 88 	store_32 s26, 64(s25)
    8d9c:	59 63 01 88 	store_32 s26, 88(s25)
    8da0:	59 73 01 88 	store_32 s26, 92(s25)
    8da4:	59 83 01 88 	store_32 s26, 96(s25)
    8da8:	59 a3 01 88 	store_32 s26, 104(s25)
    8dac:	19 70 01 a8 	load_32 s0, 92(s25)
    8db0:	39 80 01 a8 	load_32 s1, 96(s25)
    8db4:	19 b0 01 88 	store_32 s0, 108(s25)
    8db8:	00 00 ff 4f 	movehi s0, 522240
    8dbc:	39 c0 01 88 	store_32 s1, 112(s25)
    8dc0:	59 d3 01 88 	store_32 s26, 116(s25)
    8dc4:	19 e0 01 88 	store_32 s0, 120(s25)
    8dc8:	59 f3 01 82 	store_8 s26, 124(s25)
    8dcc:	79 93 01 88 	store_32 s27, 100(s25)
    8dd0:	fe b3 00 a8 	load_32 ra, 44(sp)
    8dd4:	7e c3 00 a8 	load_32 s27, 48(sp)
    8dd8:	5e d3 00 a8 	load_32 s26, 52(sp)
    8ddc:	3e e3 00 a8 	load_32 s25, 56(sp)
    8de0:	1e f3 00 a8 	load_32 s24, 60(sp)
    8de4:	de 03 01 05 	add_i sp, sp, 64
    8de8:	1f 00 00 f0 	ret

0000000000008dec _ZN9librender13RenderContext13setClearColorEfff:
    8dec:	80 00 00 4f 	movehi s4, 0
    8df0:	84 10 05 00 	or s4, s4, 324
    8df4:	84 00 00 a8 	load_32 s4, (s4)
    8df8:	a1 00 e2 c2 	cmplt_f s5, s1, s4
    8dfc:	45 00 00 f4 	bnz s5, 8 <_ZN9librender13RenderContext13setClearColorEfff+0x18>
    8e00:	20 00 f2 c0 	move s1, s4
    8e04:	a0 00 00 4f 	movehi s5, 0
    8e08:	a5 60 05 00 	or s5, s5, 344
    8e0c:	a5 00 00 a8 	load_32 s5, (s5)
    8e10:	c1 80 c2 c2 	cmpgt_f s6, s1, s5
    8e14:	46 00 00 f4 	bnz s6, 8 <_ZN9librender13RenderContext13setClearColorEfff+0x30>
    8e18:	20 00 00 f6 	b 128 <_ZN9librender13RenderContext13setClearColorEfff+0xac>
    8e1c:	c2 00 e2 c2 	cmplt_f s6, s2, s4
    8e20:	46 00 00 f4 	bnz s6, 8 <_ZN9librender13RenderContext13setClearColorEfff+0x3c>
    8e24:	20 00 00 f6 	b 128 <_ZN9librender13RenderContext13setClearColorEfff+0xb8>
    8e28:	c2 80 c2 c2 	cmpgt_f s6, s2, s5
    8e2c:	46 00 00 f4 	bnz s6, 8 <_ZN9librender13RenderContext13setClearColorEfff+0x48>
    8e30:	20 00 00 f6 	b 128 <_ZN9librender13RenderContext13setClearColorEfff+0xc4>
    8e34:	c3 00 e2 c2 	cmplt_f s6, s3, s4
    8e38:	46 00 00 f4 	bnz s6, 8 <_ZN9librender13RenderContext13setClearColorEfff+0x54>
    8e3c:	20 00 00 f6 	b 128 <_ZN9librender13RenderContext13setClearColorEfff+0xd0>
    8e40:	83 80 c2 c2 	cmpgt_f s4, s3, s5
    8e44:	44 00 00 f4 	bnz s4, 8 <_ZN9librender13RenderContext13setClearColorEfff+0x60>
    8e48:	60 80 f2 c0 	move s3, s5
    8e4c:	80 00 00 4f 	movehi s4, 0
    8e50:	84 a0 05 00 	or s4, s4, 360
    8e54:	a4 00 00 a8 	load_32 s5, (s4)
    8e58:	80 00 00 4f 	movehi s4, 0
    8e5c:	c3 80 22 c2 	mul_f s6, s3, s5
    8e60:	64 10 06 00 	or s3, s4, 388
    8e64:	80 00 80 4f 	movehi s4, 262144
    8e68:	63 00 00 a8 	load_32 s3, (s3)
    8e6c:	e6 80 e1 c2 	cmplt_f s7, s6, s3
    8e70:	e7 02 00 f4 	bnz s7, 92 <_ZN9librender13RenderContext13setClearColorEfff+0xe0>
    8e74:	c6 80 11 c2 	sub_f s6, s6, s3
    8e78:	c0 00 b3 c1 	ftoi s6, s6
    8e7c:	c6 00 32 c0 	xor s6, s6, s4
    8e80:	42 80 22 c2 	mul_f s2, s2, s5
    8e84:	e2 80 e1 c2 	cmplt_f s7, s2, s3
    8e88:	47 00 00 f4 	bnz s7, 8 <_ZN9librender13RenderContext13setClearColorEfff+0xa4>
    8e8c:	14 00 00 f6 	b 80 <_ZN9librender13RenderContext13setClearColorEfff+0xf0>
    8e90:	40 00 b1 c1 	ftoi s2, s2
    8e94:	15 00 00 f6 	b 84 <_ZN9librender13RenderContext13setClearColorEfff+0xfc>
    8e98:	20 80 f2 c0 	move s1, s5
    8e9c:	c2 00 e2 c2 	cmplt_f s6, s2, s4
    8ea0:	46 fc ff f5 	bnz s6, -120 <_ZN9librender13RenderContext13setClearColorEfff+0x3c>
    8ea4:	40 00 f2 c0 	move s2, s4
    8ea8:	c2 80 c2 c2 	cmpgt_f s6, s2, s5
    8eac:	46 fc ff f5 	bnz s6, -120 <_ZN9librender13RenderContext13setClearColorEfff+0x48>
    8eb0:	40 80 f2 c0 	move s2, s5
    8eb4:	c3 00 e2 c2 	cmplt_f s6, s3, s4
    8eb8:	46 fc ff f5 	bnz s6, -120 <_ZN9librender13RenderContext13setClearColorEfff+0x54>
    8ebc:	60 00 f2 c0 	move s3, s4
    8ec0:	83 80 c2 c2 	cmpgt_f s4, s3, s5
    8ec4:	44 fc ff f5 	bnz s4, -120 <_ZN9librender13RenderContext13setClearColorEfff+0x60>
    8ec8:	e0 ff ff f7 	b -128 <_ZN9librender13RenderContext13setClearColorEfff+0x5c>
    8ecc:	c0 00 b3 c1 	ftoi s6, s6
    8ed0:	42 80 22 c2 	mul_f s2, s2, s5
    8ed4:	e2 80 e1 c2 	cmplt_f s7, s2, s3
    8ed8:	c7 fd ff f5 	bnz s7, -72 <_ZN9librender13RenderContext13setClearColorEfff+0xa4>
    8edc:	42 80 11 c2 	sub_f s2, s2, s3
    8ee0:	40 00 b1 c1 	ftoi s2, s2
    8ee4:	42 00 32 c0 	xor s2, s2, s4
    8ee8:	a1 80 22 c2 	mul_f s5, s1, s5
    8eec:	26 40 00 0b 	shl s1, s6, 16
    8ef0:	42 20 00 0b 	shl s2, s2, 8
    8ef4:	e5 80 e1 c2 	cmplt_f s7, s5, s3
    8ef8:	a7 00 00 f4 	bnz s7, 20 <_ZN9librender13RenderContext13setClearColorEfff+0x120>
    8efc:	65 80 11 c2 	sub_f s3, s5, s3
    8f00:	60 80 b1 c1 	ftoi s3, s3
    8f04:	63 00 32 c0 	xor s3, s3, s4
    8f08:	02 00 00 f6 	b 8 <_ZN9librender13RenderContext13setClearColorEfff+0x124>
    8f0c:	60 80 b2 c1 	ftoi s3, s5
    8f10:	42 80 01 c0 	or s2, s2, s3
    8f14:	22 80 00 c0 	or s1, s2, s1
    8f18:	40 00 ff 4f 	movehi s2, 522240
    8f1c:	21 00 01 c0 	or s1, s1, s2
    8f20:	20 e0 01 88 	store_32 s1, 120(s0)
    8f24:	1f 00 00 f0 	ret

0000000000008f28 _ZN9librender13RenderContext15bindVertexAttrsEPKNS_12RenderBufferE:
    8f28:	20 b0 00 88 	store_32 s1, 44(s0)
    8f2c:	1f 00 00 f0 	ret

0000000000008f30 _ZN9librender13RenderContext12bindUniformsEPKvj:
    8f30:	de 03 fe 05 	add_i sp, sp, -128
    8f34:	1e f3 01 88 	store_32 s24, 124(sp)
    8f38:	3e e3 01 88 	store_32 s25, 120(sp)
    8f3c:	fe d3 01 88 	store_32 ra, 116(sp)
    8f40:	00 03 f0 c0 	move s24, s0
    8f44:	18 90 00 05 	add_i s0, s24, 36
    8f48:	78 90 00 a8 	load_32 s3, 36(s24)
    8f4c:	b8 70 00 a8 	load_32 s5, 28(s24)
    8f50:	d8 80 00 a8 	load_32 s6, 32(s24)
    8f54:	83 0c 00 05 	add_i s4, s3, 3
    8f58:	a5 00 53 c0 	add_i s5, s5, s6
    8f5c:	24 f3 ff 01 	and s25, s4, -4
    8f60:	99 00 51 c0 	add_i s4, s25, s2
    8f64:	a4 80 82 c1 	cmplt_u s5, s4, s5
    8f68:	45 00 00 f4 	bnz s5, 8 <_ZN9librender13RenderContext12bindUniformsEPKvj+0x40>
    8f6c:	12 00 00 f6 	b 72 <_ZN9librender13RenderContext12bindUniformsEPKvj+0x84>
    8f70:	a0 00 00 aa 	load_sync s5, (s0)
    8f74:	c5 80 11 c1 	cmpne_i s6, s5, s3
    8f78:	86 00 00 f4 	bnz s6, 16 <_ZN9librender13RenderContext12bindUniformsEPKvj+0x58>
    8f7c:	c0 00 f2 c0 	move s6, s4
    8f80:	c0 00 00 8a 	store_sync s6, (s0)  
    8f84:	66 ff ff f3 	bz s6, -20 <_ZN9librender13RenderContext12bindUniformsEPKvj+0x40>
    8f88:	65 80 01 c1 	cmpeq_i s3, s5, s3
    8f8c:	63 04 00 01 	and s3, s3, 1
    8f90:	c3 fd ff f3 	bz s3, -72 <_ZN9librender13RenderContext12bindUniformsEPKvj+0x18>
    8f94:	00 80 fc c0 	move s0, s25
    8f98:	69 26 00 f8 	call 39332 <memcpy>
    8f9c:	38 d3 00 88 	store_32 s25, 52(s24)
    8fa0:	fe d3 01 a8 	load_32 ra, 116(sp)
    8fa4:	3e e3 01 a8 	load_32 s25, 120(sp)
    8fa8:	1e f3 01 a8 	load_32 s24, 124(sp)
    8fac:	de 03 02 05 	add_i sp, sp, 128
    8fb0:	1f 00 00 f0 	ret
    8fb4:	02 00 00 4f 	movehi s0, 2
    8fb8:	20 00 01 0f 	move s1, 64
    8fbc:	3e 20 00 88 	store_32 s1, 8(sp)
    8fc0:	22 00 00 4f 	movehi s1, 2
    8fc4:	00 54 07 00 	or s0, s0, 469
    8fc8:	1e 30 00 88 	store_32 s0, 12(sp)
    8fcc:	02 00 00 4f 	movehi s0, 2
    8fd0:	21 20 0e 00 	or s1, s1, 904
    8fd4:	3e 10 00 88 	store_32 s1, 4(sp)
    8fd8:	00 b8 0d 00 	or s0, s0, 878
    8fdc:	1e 00 00 88 	store_32 s0, (sp)
    8fe0:	8b 26 00 f8 	call 39468 <printf>
    8fe4:	00 00 e0 c3 	break

0000000000008fe8 _ZN9librender13RenderContext10bindTargetEPNS_12RenderTargetE:
    8fe8:	20 10 00 88 	store_32 s1, 4(s0)
    8fec:	21 00 00 a8 	load_32 s1, (s1)
    8ff0:	41 00 03 a8 	load_32 s2, 192(s1)
    8ff4:	40 30 00 88 	store_32 s2, 12(s0)
    8ff8:	21 10 03 a8 	load_32 s1, 196(s1)
    8ffc:	20 40 00 88 	store_32 s1, 16(s0)
    9000:	42 fc 00 05 	add_i s2, s2, 63
    9004:	61 fc 00 05 	add_i s3, s1, 63
    9008:	82 7c 00 09 	ashr s4, s2, 31
    900c:	23 7c 00 09 	ashr s1, s3, 31
    9010:	84 68 00 0a 	shr s4, s4, 26
    9014:	42 00 52 c0 	add_i s2, s2, s4
    9018:	21 68 00 0a 	shr s1, s1, 26
    901c:	23 80 50 c0 	add_i s1, s3, s1
    9020:	42 18 00 09 	ashr s2, s2, 6
    9024:	40 50 00 88 	store_32 s2, 20(s0)
    9028:	21 18 00 09 	ashr s1, s1, 6
    902c:	20 60 00 88 	store_32 s1, 24(s0)
    9030:	1f 00 00 f0 	ret

0000000000009034 _ZN9librender13RenderContext10bindShaderEPNS_6ShaderE:
    9034:	20 00 01 88 	store_32 s1, 64(s0)
    9038:	21 10 00 a8 	load_32 s1, 4(s1)
    903c:	20 e0 00 88 	store_32 s1, 56(s0)
    9040:	1f 00 00 f0 	ret

0000000000009044 _ZN9librender13RenderContext12drawElementsEPKNS_12RenderBufferE:
    9044:	de 03 ff 05 	add_i sp, sp, -64
    9048:	1e f3 00 88 	store_32 s24, 60(sp)
    904c:	3e e3 00 88 	store_32 s25, 56(sp)
    9050:	5e d3 00 88 	store_32 s26, 52(sp)
    9054:	fe c3 00 88 	store_32 ra, 48(sp)
    9058:	00 03 f0 c0 	move s24, s0
    905c:	38 63 01 05 	add_i s25, s24, 88
    9060:	38 c0 00 88 	store_32 s1, 48(s24)
    9064:	58 83 01 05 	add_i s26, s24, 96
    9068:	03 00 00 f6 	b 12 <_ZN9librender13RenderContext12drawElementsEPKNS_12RenderBufferE+0x30>
    906c:	00 80 fc c0 	move s0, s25
    9070:	7f 07 00 f8 	call 7676 <_ZN9librender12CommandQueueINS_11RenderStateELi32EE14allocateBucketEv>
    9074:	18 80 01 a8 	load_32 s0, 96(s24)
    9078:	38 70 01 a8 	load_32 s1, 92(s24)
    907c:	40 80 00 10 	cmpeq_i s2, s0, 32
    9080:	62 ff ff f5 	bnz s2, -20 <_ZN9librender13RenderContext12drawElementsEPKNS_12RenderBufferE+0x28>
    9084:	41 00 00 f4 	bnz s1, 8 <_ZN9librender13RenderContext12drawElementsEPKNS_12RenderBufferE+0x48>
    9088:	f9 ff ff f7 	b -28 <_ZN9librender13RenderContext12drawElementsEPKNS_12RenderBufferE+0x28>
    908c:	40 04 00 05 	add_i s2, s0, 1
    9090:	7a 00 00 aa 	load_sync s3, (s26)
    9094:	83 00 10 c1 	cmpne_i s4, s3, s0
    9098:	84 00 00 f4 	bnz s4, 16 <_ZN9librender13RenderContext12drawElementsEPKNS_12RenderBufferE+0x64>
    909c:	80 00 f1 c0 	move s4, s2
    90a0:	9a 00 00 8a 	store_sync s4, (s26)  
    90a4:	64 ff ff f3 	bz s4, -20 <_ZN9librender13RenderContext12drawElementsEPKNS_12RenderBufferE+0x4c>
    90a8:	43 00 00 c1 	cmpeq_i s2, s3, s0
    90ac:	42 04 00 01 	and s2, s2, 1
    90b0:	22 fe ff f3 	bz s2, -60 <_ZN9librender13RenderContext12drawElementsEPKNS_12RenderBufferE+0x30>
    90b4:	00 c0 00 07 	mull_i s0, s0, 48
    90b8:	01 00 50 c0 	add_i s0, s1, s0
    90bc:	38 a0 00 05 	add_i s1, s24, 40
    90c0:	40 c0 00 0f 	move s2, 48
    90c4:	00 20 00 05 	add_i s0, s0, 8
    90c8:	1d 26 00 f8 	call 39028 <memcpy>
    90cc:	fe c3 00 a8 	load_32 ra, 48(sp)
    90d0:	5e d3 00 a8 	load_32 s26, 52(sp)
    90d4:	3e e3 00 a8 	load_32 s25, 56(sp)
    90d8:	1e f3 00 a8 	load_32 s24, 60(sp)
    90dc:	de 03 01 05 	add_i sp, sp, 64
    90e0:	1f 00 00 f0 	ret

00000000000090e4 _ZN9librender13RenderContext14_shadeVerticesEPvi:
    90e4:	de 03 ff 05 	add_i sp, sp, -64
    90e8:	fe f3 00 88 	store_32 ra, 60(sp)
    90ec:	04 00 00 f8 	call 16 <_ZN9librender13RenderContext13shadeVerticesEi>
    90f0:	fe f3 00 a8 	load_32 ra, 60(sp)
    90f4:	de 03 01 05 	add_i sp, sp, 64
    90f8:	1f 00 00 f0 	ret

00000000000090fc _ZN9librender13RenderContext13shadeVerticesEi:
    90fc:	de 03 ff 05 	add_i sp, sp, -64
    9100:	1e f3 00 88 	store_32 s24, 60(sp)
    9104:	3e e3 00 88 	store_32 s25, 56(sp)
    9108:	5e d3 00 88 	store_32 s26, 52(sp)
    910c:	7e c3 00 88 	store_32 s27, 48(sp)
    9110:	be b3 00 88 	store_32 fp, 44(sp)
    9114:	fe a3 00 88 	store_32 ra, 40(sp)
    9118:	a0 03 ff c0 	move fp, sp
    911c:	40 b0 01 a8 	load_32 s2, 108(s0)
    9120:	41 13 00 0b 	shl s26, s1, 4
    9124:	00 c0 01 a8 	load_32 s0, 112(s0)
    9128:	27 00 00 4f 	movehi s1, 7
    912c:	00 c0 00 07 	mull_i s0, s0, 48
    9130:	22 03 50 c0 	add_i s25, s2, s0
    9134:	79 30 00 a8 	load_32 s3, 12(s25)
    9138:	03 20 00 a8 	load_32 s0, 8(s3)
    913c:	00 00 6d c0 	sub_i s0, s0, s26
    9140:	40 3c 00 12 	cmpgt_i s2, s0, 15
    9144:	a2 00 00 f4 	bnz s2, 20 <_ZN9librender13RenderContext13shadeVerticesEi+0x5c>
    9148:	40 fc ff 0f 	move s2, -1
    914c:	02 00 b0 c0 	shl s0, s2, s0
    9150:	20 fd ff 03 	xor s9, s0, -1
    9154:	02 00 00 f6 	b 8 <_ZN9librender13RenderContext13shadeVerticesEi+0x60>
    9158:	21 fd 7f 00 	or s9, s1, 8191
    915c:	19 80 00 a8 	load_32 s0, 32(s25)
    9160:	80 20 00 a8 	load_32 s4, 8(s0)
    9164:	44 18 00 0b 	shl s2, s4, 6
    9168:	5e 00 61 c0 	sub_i s2, sp, s2
    916c:	c0 03 f1 c0 	move sp, s2
    9170:	a4 04 00 14 	cmplt_i s5, s4, 1
    9174:	25 03 00 f4 	bnz s5, 100 <_ZN9librender13RenderContext13shadeVerticesEi+0xdc>
    9178:	3d 81 00 86 	store_16 s9, 32(fp)
    917c:	b9 30 00 05 	add_i s5, s25, 12
    9180:	fd 80 00 a4 	load_u16 s7, 32(fp)
    9184:	19 80 00 05 	add_i s0, s25, 32
    9188:	c0 00 00 0f 	move s6, 0
    918c:	02 00 00 f6 	b 8 <_ZN9librender13RenderContext13shadeVerticesEi+0x98>
    9190:	65 00 00 a8 	load_32 s3, (s5)
    9194:	03 41 00 a8 	load_32 s8, 16(s3)
    9198:	08 00 00 ae 	load_v v0, (s8)
    919c:	03 31 00 a8 	load_32 s8, 12(s3)
    91a0:	63 00 00 a8 	load_32 s3, (s3)
    91a4:	08 01 7d c0 	mull_i s8, s8, s26
    91a8:	00 00 54 c4 	add_i v0, v0, s8
    91ac:	63 00 73 c0 	mull_i s3, s3, s6
    91b0:	00 80 51 c4 	add_i v0, v0, s3
    91b4:	66 18 00 0b 	shl s3, s6, 6
    91b8:	c6 04 00 05 	add_i s6, s6, 1
    91bc:	62 80 51 c0 	add_i s3, s2, s3
    91c0:	00 1c 00 bc 	load_gath_mask v0, s7, (v0)
    91c4:	06 01 32 c1 	cmpge_i s8, s6, s4
    91c8:	03 00 00 8e 	store_v v0, (s3)
    91cc:	48 00 00 f4 	bnz s8, 8 <_ZN9librender13RenderContext13shadeVerticesEi+0xd8>
    91d0:	f0 ff ff f7 	b -64 <_ZN9librender13RenderContext13shadeVerticesEi+0x94>
    91d4:	00 00 00 a8 	load_32 s0, (s0)
    91d8:	60 13 00 a8 	load_32 s27, 4(s0)
    91dc:	7b 18 00 0b 	shl s3, s27, 6
    91e0:	1e 83 61 c0 	sub_i s24, sp, s3
    91e4:	c0 03 fc c0 	move sp, s24
    91e8:	79 50 00 a8 	load_32 s3, 20(s25)
    91ec:	21 fc 7f 00 	or s1, s1, 8191
    91f0:	80 00 00 a8 	load_32 s4, (s0)
    91f4:	a4 20 00 a8 	load_32 s5, 8(s4)
    91f8:	89 80 10 c0 	and s4, s9, s1
    91fc:	20 00 fc c0 	move s1, s24
    9200:	3d 31 00 88 	store_32 s9, 12(fp)
    9204:	a5 00 00 fc 	call s5
    9208:	1b 04 00 14 	cmplt_i s0, s27, 1
    920c:	c0 02 00 f4 	bnz s0, 88 <_ZN9librender13RenderContext13shadeVerticesEi+0x168>
    9210:	02 00 00 4f 	movehi s0, 2
    9214:	39 70 00 a8 	load_32 s1, 28(s25)
    9218:	00 00 14 00 	or s0, s0, 1280
    921c:	00 00 00 ae 	load_v v0, (s0)
    9220:	1a 80 7d c0 	mull_i s0, s26, s27
    9224:	00 08 00 0b 	shl s0, s0, 2
    9228:	00 80 7d c4 	mull_i v0, v0, s27
    922c:	01 00 50 c0 	add_i s0, s1, s0
    9230:	00 00 50 c4 	add_i v0, v0, s0
    9234:	1d 30 00 a8 	load_32 s0, 12(fp)
    9238:	1d 40 00 86 	store_16 s0, 16(fp)
    923c:	00 00 00 0f 	move s0, 0
    9240:	3d 40 00 a4 	load_u16 s1, 16(fp)
    9244:	40 18 00 0b 	shl s2, s0, 6
    9248:	58 00 51 c0 	add_i s2, s24, s2
    924c:	00 04 00 05 	add_i s0, s0, 1
    9250:	22 00 00 ae 	load_v v1, (s2)
    9254:	20 04 00 9c 	store_scat_mask v1, s1, (v0)
    9258:	40 80 4d c1 	cmplt_i s2, s0, s27
    925c:	00 10 00 25 	add_i v0, v0, 4
    9260:	22 ff ff f5 	bnz s2, -28 <_ZN9librender13RenderContext13shadeVerticesEi+0x148>
    9264:	c0 83 fe c0 	move sp, fp
    9268:	fe a3 00 a8 	load_32 ra, 40(sp)
    926c:	be b3 00 a8 	load_32 fp, 44(sp)
    9270:	7e c3 00 a8 	load_32 s27, 48(sp)
    9274:	5e d3 00 a8 	load_32 s26, 52(sp)
    9278:	3e e3 00 a8 	load_32 s25, 56(sp)
    927c:	1e f3 00 a8 	load_32 s24, 60(sp)
    9280:	de 03 01 05 	add_i sp, sp, 64
    9284:	1f 00 00 f0 	ret

0000000000009288 _ZN9librender13RenderContext14_setUpTriangleEPvi:
    9288:	de 03 ff 05 	add_i sp, sp, -64
    928c:	fe f3 00 88 	store_32 ra, 60(sp)
    9290:	04 00 00 f8 	call 16 <_ZN9librender13RenderContext13setUpTriangleEi>
    9294:	fe f3 00 a8 	load_32 ra, 60(sp)
    9298:	de 03 01 05 	add_i sp, sp, 64
    929c:	1f 00 00 f0 	ret

00000000000092a0 _ZN9librender13RenderContext13setUpTriangleEi:
    92a0:	de 03 fd 05 	add_i sp, sp, -192
    92a4:	fe f3 02 88 	store_32 ra, 188(sp)
    92a8:	40 b0 01 a8 	load_32 s2, 108(s0)
    92ac:	81 30 00 07 	mull_i s4, s1, 12
    92b0:	60 c0 01 a8 	load_32 s3, 112(s0)
    92b4:	63 c0 00 07 	mull_i s3, s3, 48
    92b8:	42 80 51 c0 	add_i s2, s2, s3
    92bc:	62 40 00 a8 	load_32 s3, 16(s2)
    92c0:	63 10 00 a8 	load_32 s3, 4(s3)
    92c4:	83 00 52 c0 	add_i s4, s3, s4
    92c8:	a4 00 00 a8 	load_32 s5, (s4)
    92cc:	62 60 00 a8 	load_32 s3, 24(s2)
    92d0:	c4 10 00 a8 	load_32 s6, 4(s4)
    92d4:	44 21 00 a8 	load_32 s10, 8(s4)
    92d8:	62 71 00 a8 	load_32 s11, 28(s2)
    92dc:	a3 80 72 c0 	mull_i s5, s3, s5
    92e0:	86 80 71 c0 	mull_i s4, s6, s3
    92e4:	c0 00 00 4f 	movehi s6, 0
    92e8:	a5 08 00 0b 	shl s5, s5, 2
    92ec:	eb 80 52 c0 	add_i s7, s11, s5
    92f0:	a4 08 00 0b 	shl s5, s4, 2
    92f4:	86 10 05 00 	or s4, s6, 324
    92f8:	cb 80 52 c0 	add_i s6, s11, s5
    92fc:	07 31 00 a8 	load_32 s8, 12(s7)
    9300:	aa 80 71 c0 	mull_i s5, s10, s3
    9304:	84 01 00 a8 	load_32 s12, (s4)
    9308:	26 31 00 a8 	load_32 s9, 12(s6)
    930c:	a5 08 00 0b 	shl s5, s5, 2
    9310:	ab 80 52 c0 	add_i s5, s11, s5
    9314:	a8 01 e6 c2 	cmplt_f s13, s8, s12
    9318:	60 01 00 0f 	move s11, 0
    931c:	49 01 e6 c2 	cmplt_f s10, s9, s12
    9320:	ad 05 00 01 	and s13, s13, 1
    9324:	6a 00 00 f4 	bnz s10, 12 <_ZN9librender13RenderContext13setUpTriangleEi+0x90>
    9328:	c0 81 f5 c0 	move s14, s11
    932c:	02 00 00 f6 	b 8 <_ZN9librender13RenderContext13setUpTriangleEi+0x94>
    9330:	c0 09 00 0f 	move s14, 2
    9334:	45 31 00 a8 	load_32 s10, 12(s5)
    9338:	ea 01 e6 c2 	cmplt_f s15, s10, s12
    933c:	8e 81 06 c0 	or s12, s14, s13
    9340:	4f 00 00 f4 	bnz s15, 8 <_ZN9librender13RenderContext13setUpTriangleEi+0xa8>
    9344:	02 00 00 f6 	b 8 <_ZN9librender13RenderContext13setUpTriangleEi+0xac>
    9348:	60 11 00 0f 	move s11, 4
    934c:	6c 81 05 c0 	or s11, s12, s11
    9350:	8b 1d 00 10 	cmpeq_i s12, s11, 7
    9354:	ac 02 00 f4 	bnz s12, 84 <_ZN9librender13RenderContext13setUpTriangleEi+0x108>
    9358:	82 01 00 4f 	movehi s12, 2
    935c:	6b 09 00 0b 	shl s11, s11, 2
    9360:	42 20 00 05 	add_i s2, s2, 8
    9364:	8c 01 15 00 	or s12, s12, 1344
    9368:	6b 01 56 c0 	add_i s11, s11, s12
    936c:	6b 01 00 a8 	load_32 s11, (s11)
    9370:	0b 00 00 f0 	b s11
    9374:	60 d0 01 a8 	load_32 s3, 116(s0)
    9378:	23 80 50 c0 	add_i s1, s3, s1
    937c:	60 80 f3 c0 	move s3, s7
    9380:	80 00 f3 c0 	move s4, s6
    9384:	1b 04 00 f8 	call 4204 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_>
    9388:	fe f3 02 a8 	load_32 ra, 188(sp)
    938c:	de 03 03 05 	add_i sp, sp, 192
    9390:	1f 00 00 f0 	ret
    9394:	60 d0 01 a8 	load_32 s3, 116(s0)
    9398:	23 80 50 c0 	add_i s1, s3, s1
    939c:	60 80 f3 c0 	move s3, s7
    93a0:	80 00 f3 c0 	move s4, s6
    93a4:	ad 03 00 f8 	call 3764 <_ZN9librender13RenderContext7clipOneEiRKNS_11RenderStateEPKfS5_S5_>
    93a8:	fe f3 02 a8 	load_32 ra, 188(sp)
    93ac:	de 03 03 05 	add_i sp, sp, 192
    93b0:	1f 00 00 f0 	ret
    93b4:	60 d0 01 a8 	load_32 s3, 116(s0)
    93b8:	23 80 50 c0 	add_i s1, s3, s1
    93bc:	60 00 f3 c0 	move s3, s6
    93c0:	80 80 f2 c0 	move s4, s5
    93c4:	a0 80 f3 c0 	move s5, s7
    93c8:	a4 03 00 f8 	call 3728 <_ZN9librender13RenderContext7clipOneEiRKNS_11RenderStateEPKfS5_S5_>
    93cc:	fe f3 02 a8 	load_32 ra, 188(sp)
    93d0:	de 03 03 05 	add_i sp, sp, 192
    93d4:	1f 00 00 f0 	ret
    93d8:	60 d1 01 a8 	load_32 s11, 116(s0)
    93dc:	80 01 00 4f 	movehi s12, 0
    93e0:	a0 01 00 4f 	movehi s13, 0
    93e4:	c3 05 00 14 	cmplt_i s14, s3, 1
    93e8:	8c 41 05 00 	or s12, s12, 336
    93ec:	2b 80 50 c0 	add_i s1, s11, s1
    93f0:	6d c1 05 00 	or s11, s13, 368
    93f4:	ac 01 00 a8 	load_32 s13, (s12)
    93f8:	8b 01 00 a8 	load_32 s12, (s11)
    93fc:	ee 06 00 f4 	bnz s14, 220 <_ZN9librender13RenderContext13setUpTriangleEi+0x238>
    9400:	ca 81 14 c2 	sub_f s14, s10, s9
    9404:	20 01 c7 c1 	reciprocal s9, s14
    9408:	e9 01 27 c2 	mul_f s15, s9, s14
    940c:	ec 81 17 c2 	sub_f s15, s12, s15
    9410:	e9 81 27 c2 	mul_f s15, s9, s15
    9414:	2a 81 06 c2 	add_f s9, s10, s13
    9418:	af 01 27 c2 	mul_f s13, s15, s14
    941c:	c4 01 00 a8 	load_32 s14, (s4)
    9420:	8c 81 16 c2 	sub_f s12, s12, s13
    9424:	8f 01 26 c2 	mul_f s12, s15, s12
    9428:	fe f1 01 05 	add_i s15, sp, 124
    942c:	89 01 26 c2 	mul_f s12, s9, s12
    9430:	ae 01 16 c2 	sub_f s13, s14, s12
    9434:	c0 01 00 0f 	move s14, 0
    9438:	0e 0a 00 0b 	shl s16, s14, 2
    943c:	25 02 58 c0 	add_i s17, s5, s16
    9440:	46 02 58 c0 	add_i s18, s6, s16
    9444:	ce 05 00 05 	add_i s14, s14, 1
    9448:	31 02 00 a8 	load_32 s17, (s17)
    944c:	0f 02 58 c0 	add_i s16, s15, s16
    9450:	52 02 00 a8 	load_32 s18, (s18)
    9454:	31 82 26 c2 	mul_f s17, s17, s13
    9458:	52 02 26 c2 	mul_f s18, s18, s12
    945c:	32 82 08 c2 	add_f s17, s18, s17
    9460:	4e 82 41 c1 	cmplt_i s18, s14, s3
    9464:	30 02 00 88 	store_32 s17, (s16)
    9468:	92 fe ff f5 	bnz s18, -48 <_ZN9librender13RenderContext13setUpTriangleEi+0x198>
    946c:	ca 00 14 c2 	sub_f s6, s10, s8
    9470:	4b 01 00 a8 	load_32 s10, (s11)
    9474:	00 01 c3 c1 	reciprocal s8, s6
    9478:	68 01 23 c2 	mul_f s11, s8, s6
    947c:	6a 81 15 c2 	sub_f s11, s10, s11
    9480:	08 81 25 c2 	mul_f s8, s8, s11
    9484:	64 01 00 a8 	load_32 s11, (s4)
    9488:	c8 00 23 c2 	mul_f s6, s8, s6
    948c:	8a 00 13 c2 	sub_f s4, s10, s6
    9490:	88 00 22 c2 	mul_f s4, s8, s4
    9494:	00 01 00 0f 	move s8, 0
    9498:	89 00 22 c2 	mul_f s4, s9, s4
    949c:	3e f1 00 05 	add_i s9, sp, 60
    94a0:	cb 00 12 c2 	sub_f s6, s11, s4
    94a4:	48 09 00 0b 	shl s10, s8, 2
    94a8:	65 01 55 c0 	add_i s11, s5, s10
    94ac:	87 01 55 c0 	add_i s12, s7, s10
    94b0:	08 05 00 05 	add_i s8, s8, 1
    94b4:	6b 01 00 a8 	load_32 s11, (s11)
    94b8:	49 01 55 c0 	add_i s10, s9, s10
    94bc:	8c 01 00 a8 	load_32 s12, (s12)
    94c0:	6b 01 23 c2 	mul_f s11, s11, s6
    94c4:	8c 01 22 c2 	mul_f s12, s12, s4
    94c8:	6c 81 05 c2 	add_f s11, s12, s11
    94cc:	88 81 41 c1 	cmplt_i s12, s8, s3
    94d0:	6a 01 00 88 	store_32 s11, (s10)
    94d4:	8c fe ff f5 	bnz s12, -48 <_ZN9librender13RenderContext13setUpTriangleEi+0x204>
    94d8:	7e f0 00 05 	add_i s3, sp, 60
    94dc:	9e f0 01 05 	add_i s4, sp, 124
    94e0:	c4 03 00 f8 	call 3856 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_>
    94e4:	fe f3 02 a8 	load_32 ra, 188(sp)
    94e8:	de 03 03 05 	add_i sp, sp, 192
    94ec:	1f 00 00 f0 	ret
    94f0:	60 d0 01 a8 	load_32 s3, 116(s0)
    94f4:	23 80 50 c0 	add_i s1, s3, s1
    94f8:	60 80 f2 c0 	move s3, s5
    94fc:	80 80 f3 c0 	move s4, s7
    9500:	a0 00 f3 c0 	move s5, s6
    9504:	55 03 00 f8 	call 3412 <_ZN9librender13RenderContext7clipOneEiRKNS_11RenderStateEPKfS5_S5_>
    9508:	fe f3 02 a8 	load_32 ra, 188(sp)
    950c:	de 03 03 05 	add_i sp, sp, 192
    9510:	1f 00 00 f0 	ret
    9514:	60 d1 01 a8 	load_32 s11, 116(s0)
    9518:	80 01 00 4f 	movehi s12, 0
    951c:	a0 01 00 4f 	movehi s13, 0
    9520:	c3 05 00 14 	cmplt_i s14, s3, 1
    9524:	8c 41 05 00 	or s12, s12, 336
    9528:	2b 80 50 c0 	add_i s1, s11, s1
    952c:	6d c1 05 00 	or s11, s13, 368
    9530:	ac 01 00 a8 	load_32 s13, (s12)
    9534:	8b 01 00 a8 	load_32 s12, (s11)
    9538:	ee 06 00 f4 	bnz s14, 220 <_ZN9librender13RenderContext13setUpTriangleEi+0x374>
    953c:	c9 01 14 c2 	sub_f s14, s9, s8
    9540:	00 01 c7 c1 	reciprocal s8, s14
    9544:	e8 01 27 c2 	mul_f s15, s8, s14
    9548:	ec 81 17 c2 	sub_f s15, s12, s15
    954c:	e8 81 27 c2 	mul_f s15, s8, s15
    9550:	09 81 06 c2 	add_f s8, s9, s13
    9554:	af 01 27 c2 	mul_f s13, s15, s14
    9558:	c4 01 00 a8 	load_32 s14, (s4)
    955c:	8c 81 16 c2 	sub_f s12, s12, s13
    9560:	8f 01 26 c2 	mul_f s12, s15, s12
    9564:	fe f1 01 05 	add_i s15, sp, 124
    9568:	88 01 26 c2 	mul_f s12, s8, s12
    956c:	ae 01 16 c2 	sub_f s13, s14, s12
    9570:	c0 01 00 0f 	move s14, 0
    9574:	0e 0a 00 0b 	shl s16, s14, 2
    9578:	26 02 58 c0 	add_i s17, s6, s16
    957c:	47 02 58 c0 	add_i s18, s7, s16
    9580:	ce 05 00 05 	add_i s14, s14, 1
    9584:	31 02 00 a8 	load_32 s17, (s17)
    9588:	0f 02 58 c0 	add_i s16, s15, s16
    958c:	52 02 00 a8 	load_32 s18, (s18)
    9590:	31 82 26 c2 	mul_f s17, s17, s13
    9594:	52 02 26 c2 	mul_f s18, s18, s12
    9598:	32 82 08 c2 	add_f s17, s18, s17
    959c:	4e 82 41 c1 	cmplt_i s18, s14, s3
    95a0:	30 02 00 88 	store_32 s17, (s16)
    95a4:	92 fe ff f5 	bnz s18, -48 <_ZN9librender13RenderContext13setUpTriangleEi+0x2d4>
    95a8:	e9 00 15 c2 	sub_f s7, s9, s10
    95ac:	4b 01 00 a8 	load_32 s10, (s11)
    95b0:	20 81 c3 c1 	reciprocal s9, s7
    95b4:	69 81 23 c2 	mul_f s11, s9, s7
    95b8:	6a 81 15 c2 	sub_f s11, s10, s11
    95bc:	29 81 25 c2 	mul_f s9, s9, s11
    95c0:	64 01 00 a8 	load_32 s11, (s4)
    95c4:	e9 80 23 c2 	mul_f s7, s9, s7
    95c8:	8a 80 13 c2 	sub_f s4, s10, s7
    95cc:	89 00 22 c2 	mul_f s4, s9, s4
    95d0:	3e f1 00 05 	add_i s9, sp, 60
    95d4:	88 00 22 c2 	mul_f s4, s8, s4
    95d8:	00 01 00 0f 	move s8, 0
    95dc:	eb 00 12 c2 	sub_f s7, s11, s4
    95e0:	48 09 00 0b 	shl s10, s8, 2
    95e4:	66 01 55 c0 	add_i s11, s6, s10
    95e8:	85 01 55 c0 	add_i s12, s5, s10
    95ec:	08 05 00 05 	add_i s8, s8, 1
    95f0:	6b 01 00 a8 	load_32 s11, (s11)
    95f4:	49 01 55 c0 	add_i s10, s9, s10
    95f8:	8c 01 00 a8 	load_32 s12, (s12)
    95fc:	6b 81 23 c2 	mul_f s11, s11, s7
    9600:	8c 01 22 c2 	mul_f s12, s12, s4
    9604:	6c 81 05 c2 	add_f s11, s12, s11
    9608:	88 81 41 c1 	cmplt_i s12, s8, s3
    960c:	6a 01 00 88 	store_32 s11, (s10)
    9610:	8c fe ff f5 	bnz s12, -48 <_ZN9librender13RenderContext13setUpTriangleEi+0x340>
    9614:	7e f0 00 05 	add_i s3, sp, 60
    9618:	9e f0 01 05 	add_i s4, sp, 124
    961c:	a0 00 f3 c0 	move s5, s6
    9620:	74 03 00 f8 	call 3536 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_>
    9624:	fe f3 02 a8 	load_32 ra, 188(sp)
    9628:	de 03 03 05 	add_i sp, sp, 192
    962c:	1f 00 00 f0 	ret
    9630:	60 d1 01 a8 	load_32 s11, 116(s0)
    9634:	80 01 00 4f 	movehi s12, 0
    9638:	a0 01 00 4f 	movehi s13, 0
    963c:	c3 05 00 14 	cmplt_i s14, s3, 1
    9640:	8c 41 05 00 	or s12, s12, 336
    9644:	2b 80 50 c0 	add_i s1, s11, s1
    9648:	6d c1 05 00 	or s11, s13, 368
    964c:	ac 01 00 a8 	load_32 s13, (s12)
    9650:	8b 01 00 a8 	load_32 s12, (s11)
    9654:	ee 06 00 f4 	bnz s14, 220 <_ZN9librender13RenderContext13setUpTriangleEi+0x490>
    9658:	c8 01 15 c2 	sub_f s14, s8, s10
    965c:	40 01 c7 c1 	reciprocal s10, s14
    9660:	ea 01 27 c2 	mul_f s15, s10, s14
    9664:	ec 81 17 c2 	sub_f s15, s12, s15
    9668:	ea 81 27 c2 	mul_f s15, s10, s15
    966c:	48 81 06 c2 	add_f s10, s8, s13
    9670:	af 01 27 c2 	mul_f s13, s15, s14
    9674:	c4 01 00 a8 	load_32 s14, (s4)
    9678:	8c 81 16 c2 	sub_f s12, s12, s13
    967c:	8f 01 26 c2 	mul_f s12, s15, s12
    9680:	fe f1 01 05 	add_i s15, sp, 124
    9684:	8a 01 26 c2 	mul_f s12, s10, s12
    9688:	ae 01 16 c2 	sub_f s13, s14, s12
    968c:	c0 01 00 0f 	move s14, 0
    9690:	0e 0a 00 0b 	shl s16, s14, 2
    9694:	27 02 58 c0 	add_i s17, s7, s16
    9698:	45 02 58 c0 	add_i s18, s5, s16
    969c:	ce 05 00 05 	add_i s14, s14, 1
    96a0:	31 02 00 a8 	load_32 s17, (s17)
    96a4:	0f 02 58 c0 	add_i s16, s15, s16
    96a8:	52 02 00 a8 	load_32 s18, (s18)
    96ac:	31 82 26 c2 	mul_f s17, s17, s13
    96b0:	52 02 26 c2 	mul_f s18, s18, s12
    96b4:	32 82 08 c2 	add_f s17, s18, s17
    96b8:	4e 82 41 c1 	cmplt_i s18, s14, s3
    96bc:	30 02 00 88 	store_32 s17, (s16)
    96c0:	92 fe ff f5 	bnz s18, -48 <_ZN9librender13RenderContext13setUpTriangleEi+0x3f0>
    96c4:	a8 80 14 c2 	sub_f s5, s8, s9
    96c8:	2b 01 00 a8 	load_32 s9, (s11)
    96cc:	00 81 c2 c1 	reciprocal s8, s5
    96d0:	68 81 22 c2 	mul_f s11, s8, s5
    96d4:	69 81 15 c2 	sub_f s11, s9, s11
    96d8:	08 81 25 c2 	mul_f s8, s8, s11
    96dc:	64 01 00 a8 	load_32 s11, (s4)
    96e0:	a8 80 22 c2 	mul_f s5, s8, s5
    96e4:	89 80 12 c2 	sub_f s4, s9, s5
    96e8:	3e f1 00 05 	add_i s9, sp, 60
    96ec:	88 00 22 c2 	mul_f s4, s8, s4
    96f0:	00 01 00 0f 	move s8, 0
    96f4:	8a 00 22 c2 	mul_f s4, s10, s4
    96f8:	ab 00 12 c2 	sub_f s5, s11, s4
    96fc:	48 09 00 0b 	shl s10, s8, 2
    9700:	67 01 55 c0 	add_i s11, s7, s10
    9704:	86 01 55 c0 	add_i s12, s6, s10
    9708:	08 05 00 05 	add_i s8, s8, 1
    970c:	6b 01 00 a8 	load_32 s11, (s11)
    9710:	49 01 55 c0 	add_i s10, s9, s10
    9714:	8c 01 00 a8 	load_32 s12, (s12)
    9718:	6b 81 22 c2 	mul_f s11, s11, s5
    971c:	8c 01 22 c2 	mul_f s12, s12, s4
    9720:	6c 81 05 c2 	add_f s11, s12, s11
    9724:	88 81 41 c1 	cmplt_i s12, s8, s3
    9728:	6a 01 00 88 	store_32 s11, (s10)
    972c:	8c fe ff f5 	bnz s12, -48 <_ZN9librender13RenderContext13setUpTriangleEi+0x45c>
    9730:	7e f0 00 05 	add_i s3, sp, 60
    9734:	9e f0 01 05 	add_i s4, sp, 124
    9738:	a0 80 f3 c0 	move s5, s7
    973c:	2d 03 00 f8 	call 3252 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_>
    9740:	fe f3 02 a8 	load_32 ra, 188(sp)
    9744:	de 03 03 05 	add_i sp, sp, 192
    9748:	1f 00 00 f0 	ret

000000000000974c _ZN9librender13RenderContext9_fillTileEPvi:
    974c:	de 03 ff 05 	add_i sp, sp, -64
    9750:	fe f3 00 88 	store_32 ra, 60(sp)
    9754:	04 00 00 f8 	call 16 <_ZN9librender13RenderContext8fillTileEi>
    9758:	fe f3 00 a8 	load_32 ra, 60(sp)
    975c:	de 03 01 05 	add_i sp, sp, 64
    9760:	1f 00 00 f0 	ret

0000000000009764 _ZN9librender13RenderContext8fillTileEi:
    9764:	de 03 f7 05 	add_i sp, sp, -576
    9768:	1e f3 08 88 	store_32 s24, 572(sp)
    976c:	3e e3 08 88 	store_32 s25, 568(sp)
    9770:	5e d3 08 88 	store_32 s26, 564(sp)
    9774:	7e c3 08 88 	store_32 s27, 560(sp)
    9778:	fe b3 08 88 	store_32 ra, 556(sp)
    977c:	00 83 f0 c0 	move s24, s1
    9780:	40 03 f0 c0 	move s26, s0
    9784:	3a 53 00 a8 	load_32 s25, 20(s26)
    9788:	00 00 fc c0 	move s0, s24
    978c:	20 80 fc c0 	move s1, s25
    9790:	4d 30 00 f8 	call 49460 <__divsi3>
    9794:	20 80 7c c0 	mull_i s1, s0, s25
    9798:	3a 23 00 a8 	load_32 s25, 8(s26)
    979c:	38 80 60 c0 	sub_i s1, s24, s1
    97a0:	5a 10 00 a8 	load_32 s2, 4(s26)
    97a4:	18 53 00 07 	mull_i s24, s24, 20
    97a8:	00 18 00 0b 	shl s0, s0, 6
    97ac:	21 18 00 0b 	shl s1, s1, 6
    97b0:	3e 40 02 88 	store_32 s1, 144(sp)
    97b4:	22 00 00 a8 	load_32 s1, (s2)
    97b8:	3e d0 01 88 	store_32 s1, 116(sp)
    97bc:	3a 00 00 a0 	load_u8 s1, (s26)
    97c0:	1e 60 02 88 	store_32 s0, 152(sp)
    97c4:	a1 05 00 f2 	bz s1, 180 <_ZN9librender13RenderContext8fillTileEi+0x114>
    97c8:	7a e0 01 a8 	load_32 s3, 120(s26)
    97cc:	1e d0 01 a8 	load_32 s0, 116(sp)
    97d0:	c0 00 03 a8 	load_32 s6, 192(s0)
    97d4:	3e 40 02 a8 	load_32 s1, 144(sp)
    97d8:	26 80 60 c0 	sub_i s1, s6, s1
    97dc:	21 00 01 14 	cmplt_i s1, s1, 64
    97e0:	61 04 00 f4 	bnz s1, 140 <_ZN9librender13RenderContext8fillTileEi+0x108>
    97e4:	20 10 03 a8 	load_32 s1, 196(s0)
    97e8:	5e 60 02 a8 	load_32 s2, 152(sp)
    97ec:	1e d0 01 a8 	load_32 s0, 116(sp)
    97f0:	21 00 61 c0 	sub_i s1, s1, s2
    97f4:	21 00 01 14 	cmplt_i s1, s1, 64
    97f8:	a1 03 00 f4 	bnz s1, 116 <_ZN9librender13RenderContext8fillTileEi+0x108>
    97fc:	20 50 03 a8 	load_32 s1, 212(s0)
    9800:	21 04 00 16 	cmpgt_u s1, s1, 1
    9804:	41 03 00 f4 	bnz s1, 104 <_ZN9librender13RenderContext8fillTileEi+0x108>
    9808:	20 30 03 a8 	load_32 s1, 204(s0)
    980c:	00 80 f1 c4 	move v0, s3
    9810:	40 60 03 a8 	load_32 s2, 216(s0)
    9814:	80 20 03 a8 	load_32 s4, 200(s0)
    9818:	be 60 02 a8 	load_32 s5, 152(sp)
    981c:	06 80 72 c0 	mull_i s0, s6, s5
    9820:	de 40 02 a8 	load_32 s6, 144(sp)
    9824:	a4 7c 00 09 	ashr s5, s4, 31
    9828:	a5 68 00 0a 	shr s5, s5, 26
    982c:	84 80 52 c0 	add_i s4, s4, s5
    9830:	00 00 53 c0 	add_i s0, s0, s6
    9834:	02 00 70 c0 	mull_i s0, s2, s0
    9838:	44 18 00 09 	ashr s2, s4, 6
    983c:	00 80 50 c0 	add_i s0, s0, s1
    9840:	20 00 00 0f 	move s1, 0
    9844:	42 18 00 0b 	shl s2, s2, 6
    9848:	21 04 00 05 	add_i s1, s1, 1
    984c:	00 00 00 8e 	store_v v0, (s0)
    9850:	00 00 01 8e 	store_v v0, 64(s0)
    9854:	00 00 02 8e 	store_v v0, 128(s0)
    9858:	00 00 03 8e 	store_v v0, 192(s0)
    985c:	61 00 01 18 	cmplt_u s3, s1, 64
    9860:	00 00 51 c0 	add_i s0, s0, s2
    9864:	23 ff ff f5 	bnz s3, -28 <_ZN9librender13RenderContext8fillTileEi+0xe4>
    9868:	04 00 00 f6 	b 16 <_ZN9librender13RenderContext8fillTileEi+0x114>
    986c:	3e 40 02 a8 	load_32 s1, 144(sp)
    9870:	5e 60 02 a8 	load_32 s2, 152(sp)
    9874:	ae fc ff f9 	call -3400 <_ZN9librender7Surface13slowClearTileEiij>
    9878:	1a 10 00 a8 	load_32 s0, 4(s26)
    987c:	19 03 5c c0 	add_i s24, s25, s24
    9880:	00 10 00 a8 	load_32 s0, 4(s0)
    9884:	3e 43 02 a8 	load_32 s25, 144(sp)
    9888:	40 05 00 f2 	bz s0, 168 <_ZN9librender13RenderContext8fillTileEi+0x1cc>
    988c:	20 00 03 a8 	load_32 s1, 192(s0)
    9890:	41 80 6c c0 	sub_i s2, s1, s25
    9894:	42 00 01 14 	cmplt_i s2, s2, 64
    9898:	42 04 00 f4 	bnz s2, 136 <_ZN9librender13RenderContext8fillTileEi+0x1bc>
    989c:	40 10 03 a8 	load_32 s2, 196(s0)
    98a0:	7e 60 02 a8 	load_32 s3, 152(sp)
    98a4:	42 80 61 c0 	sub_i s2, s2, s3
    98a8:	42 00 01 14 	cmplt_i s2, s2, 64
    98ac:	a2 03 00 f4 	bnz s2, 116 <_ZN9librender13RenderContext8fillTileEi+0x1bc>
    98b0:	40 50 03 a8 	load_32 s2, 212(s0)
    98b4:	42 04 00 16 	cmpgt_u s2, s2, 1
    98b8:	42 03 00 f4 	bnz s2, 104 <_ZN9librender13RenderContext8fillTileEi+0x1bc>
    98bc:	40 30 03 a8 	load_32 s2, 204(s0)
    98c0:	60 60 03 a8 	load_32 s3, 216(s0)
    98c4:	00 20 03 a8 	load_32 s0, 200(s0)
    98c8:	9e 60 02 a8 	load_32 s4, 152(sp)
    98cc:	21 00 72 c0 	mull_i s1, s1, s4
    98d0:	80 7c 00 09 	ashr s4, s0, 31
    98d4:	21 80 5c c0 	add_i s1, s1, s25
    98d8:	23 80 70 c0 	mull_i s1, s3, s1
    98dc:	64 68 00 0a 	shr s3, s4, 26
    98e0:	60 80 51 c0 	add_i s3, s0, s3
    98e4:	01 00 51 c0 	add_i s0, s1, s2
    98e8:	40 80 ff 4f 	movehi s2, 523264
    98ec:	63 18 00 09 	ashr s3, s3, 6
    98f0:	20 00 00 0f 	move s1, 0
    98f4:	00 00 f1 c4 	move v0, s2
    98f8:	43 18 00 0b 	shl s2, s3, 6
    98fc:	21 04 00 05 	add_i s1, s1, 1
    9900:	00 00 00 8e 	store_v v0, (s0)
    9904:	00 00 01 8e 	store_v v0, 64(s0)
    9908:	00 00 02 8e 	store_v v0, 128(s0)
    990c:	00 00 03 8e 	store_v v0, 192(s0)
    9910:	61 00 01 18 	cmplt_u s3, s1, 64
    9914:	00 00 51 c0 	add_i s0, s0, s2
    9918:	23 ff ff f5 	bnz s3, -28 <_ZN9librender13RenderContext8fillTileEi+0x198>
    991c:	05 00 00 f6 	b 20 <_ZN9librender13RenderContext8fillTileEi+0x1cc>
    9920:	20 80 fc c0 	move s1, s25
    9924:	5e 60 02 a8 	load_32 s2, 152(sp)
    9928:	60 80 ff 4f 	movehi s3, 523264
    992c:	80 fc ff f9 	call -3584 <_ZN9librender7Surface13slowClearTileEiij>
    9930:	00 00 fc c0 	move s0, s24
    9934:	bb 04 00 f8 	call 4844 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv>
    9938:	5e e3 01 88 	store_32 s26, 120(sp)
    993c:	1e 80 02 05 	add_i s0, sp, 160
    9940:	3a 10 00 a8 	load_32 s1, 4(s26)
    9944:	87 09 00 f8 	call 9756 <_ZN9librender14TriangleFillerC2EPNS_12RenderTargetE>
    9948:	58 01 00 a8 	load_32 s10, (s24)
    994c:	38 11 00 a8 	load_32 s9, 4(s24)
    9950:	78 21 00 a8 	load_32 s11, 8(s24)
    9954:	1e 63 02 a8 	load_32 s24, 152(sp)
    9958:	0a 80 14 c1 	cmpne_i s0, s10, s9
    995c:	40 00 00 f4 	bnz s0, 8 <_ZN9librender13RenderContext8fillTileEi+0x200>
    9960:	ab 16 00 f2 	bz s11, 724 <_ZN9librender13RenderContext8fillTileEi+0x4d0>
    9964:	40 03 00 0f 	move s26, 0
    9968:	5e 53 02 88 	store_32 s26, 148(sp)
    996c:	99 01 01 05 	add_i s12, s25, 64
    9970:	3e c1 01 88 	store_32 s9, 112(sp)
    9974:	b8 01 01 05 	add_i s13, s24, 64
    9978:	7e b1 01 88 	store_32 s11, 108(sp)
    997c:	c0 01 01 0f 	move s14, 64
    9980:	9e a1 01 88 	store_32 s12, 104(sp)
    9984:	fe 81 02 05 	add_i s15, sp, 160
    9988:	be 91 01 88 	store_32 s13, 100(sp)
    998c:	de 81 01 88 	store_32 s14, 96(sp)
    9990:	fe 71 02 88 	store_32 s15, 156(sp)
    9994:	1a 30 01 07 	mull_i s0, s26, 76
    9998:	6a 03 50 c0 	add_i s27, s10, s0
    999c:	3b 30 00 a8 	load_32 s1, 12(s27)
    99a0:	5b 40 01 a0 	load_u8 s2, 80(s27)
    99a4:	1b d2 00 a8 	load_32 s16, 52(s27)
    99a8:	1b e0 00 a8 	load_32 s0, 56(s27)
    99ac:	82 0e 00 f2 	bz s2, 464 <_ZN9librender13RenderContext8fillTileEi+0x418>
    99b0:	9b f0 00 a8 	load_32 s4, 60(s27)
    99b4:	bb 00 01 a8 	load_32 s5, 64(s27)
    99b8:	5b 10 01 a8 	load_32 s2, 68(s27)
    99bc:	7b 20 01 a8 	load_32 s3, 72(s27)
    99c0:	e5 00 20 c1 	cmpgt_i s7, s5, s0
    99c4:	c0 00 f6 c0 	move s6, s12
    99c8:	47 00 00 f4 	bnz s7, 8 <_ZN9librender13RenderContext8fillTileEi+0x26c>
    99cc:	c0 80 fc c0 	move s6, s25
    99d0:	04 01 28 c1 	cmpgt_i s8, s4, s16
    99d4:	e0 00 fc c0 	move s7, s24
    99d8:	48 00 00 f4 	bnz s8, 8 <_ZN9librender13RenderContext8fillTileEi+0x27c>
    99dc:	e0 80 f6 c0 	move s7, s13
    99e0:	e7 00 60 c0 	sub_i s7, s7, s0
    99e4:	04 01 68 c0 	sub_i s8, s4, s16
    99e8:	c6 00 68 c0 	sub_i s6, s6, s16
    99ec:	e7 00 74 c0 	mull_i s7, s7, s8
    99f0:	05 01 60 c0 	sub_i s8, s5, s0
    99f4:	c6 00 74 c0 	mull_i s6, s6, s8
    99f8:	c7 00 23 c1 	cmpgt_i s6, s7, s6
    99fc:	06 10 00 f4 	bnz s6, 512 <_ZN9librender13RenderContext8fillTileEi+0x498>
    9a00:	e3 80 22 c1 	cmpgt_i s7, s3, s5
    9a04:	c0 00 f6 c0 	move s6, s12
    9a08:	47 00 00 f4 	bnz s7, 8 <_ZN9librender13RenderContext8fillTileEi+0x2ac>
    9a0c:	c0 80 fc c0 	move s6, s25
    9a10:	02 01 22 c1 	cmpgt_i s8, s2, s4
    9a14:	e0 00 fc c0 	move s7, s24
    9a18:	48 00 00 f4 	bnz s8, 8 <_ZN9librender13RenderContext8fillTileEi+0x2bc>
    9a1c:	e0 80 f6 c0 	move s7, s13
    9a20:	e7 80 62 c0 	sub_i s7, s7, s5
    9a24:	02 01 62 c0 	sub_i s8, s2, s4
    9a28:	86 00 62 c0 	sub_i s4, s6, s4
    9a2c:	c7 00 74 c0 	mull_i s6, s7, s8
    9a30:	a3 80 62 c0 	sub_i s5, s3, s5
    9a34:	84 80 72 c0 	mull_i s4, s4, s5
    9a38:	86 00 22 c1 	cmpgt_i s4, s6, s4
    9a3c:	04 0e 00 f4 	bnz s4, 448 <_ZN9librender13RenderContext8fillTileEi+0x498>
    9a40:	a0 80 21 c1 	cmpgt_i s5, s0, s3
    9a44:	80 00 f6 c0 	move s4, s12
    9a48:	45 00 00 f4 	bnz s5, 8 <_ZN9librender13RenderContext8fillTileEi+0x2ec>
    9a4c:	80 80 fc c0 	move s4, s25
    9a50:	d0 00 21 c1 	cmpgt_i s6, s16, s2
    9a54:	a0 00 fc c0 	move s5, s24
    9a58:	46 00 00 f4 	bnz s6, 8 <_ZN9librender13RenderContext8fillTileEi+0x2fc>
    9a5c:	a0 80 f6 c0 	move s5, s13
    9a60:	a5 80 61 c0 	sub_i s5, s5, s3
    9a64:	d0 00 61 c0 	sub_i s6, s16, s2
    9a68:	44 00 61 c0 	sub_i s2, s4, s2
    9a6c:	85 00 73 c0 	mull_i s4, s5, s6
    9a70:	00 80 61 c0 	sub_i s0, s0, s3
    9a74:	02 00 70 c0 	mull_i s0, s2, s0
    9a78:	04 00 20 c1 	cmpgt_i s0, s4, s0
    9a7c:	00 0c 00 f4 	bnz s0, 384 <_ZN9librender13RenderContext8fillTileEi+0x498>
    9a80:	1b 40 01 05 	add_i s0, s27, 80
    9a84:	5e 23 02 88 	store_32 s26, 136(sp)
    9a88:	5e 31 02 88 	store_32 s10, 140(sp)
    9a8c:	1e 10 02 88 	store_32 s0, 132(sp)
    9a90:	1b d0 00 05 	add_i s0, s27, 52
    9a94:	1e 00 02 88 	store_32 s0, 128(sp)
    9a98:	1b e0 00 05 	add_i s0, s27, 56
    9a9c:	1e f0 01 88 	store_32 s0, 124(sp)
    9aa0:	5b 40 00 a8 	load_32 s2, 16(s27)
    9aa4:	7b 50 00 a8 	load_32 s3, 20(s27)
    9aa8:	9b 60 00 a8 	load_32 s4, 24(s27)
    9aac:	bb 70 00 a8 	load_32 s5, 28(s27)
    9ab0:	db 80 00 a8 	load_32 s6, 32(s27)
    9ab4:	fb 90 00 a8 	load_32 s7, 36(s27)
    9ab8:	1b a0 00 a8 	load_32 s0, 40(s27)
    9abc:	3b b1 00 a8 	load_32 s9, 44(s27)
    9ac0:	1b c1 00 a8 	load_32 s8, 48(s27)
    9ac4:	1e 21 00 88 	store_32 s8, 8(sp)
    9ac8:	3e 11 00 88 	store_32 s9, 4(sp)
    9acc:	1e 00 00 88 	store_32 s0, (sp)
    9ad0:	00 80 f7 c0 	move s0, s15
    9ad4:	40 83 f0 c0 	move s26, s1
    9ad8:	94 09 00 f8 	call 9808 <_ZN9librender14TriangleFiller13setUpTriangleEPKNS_11RenderStateEfffffffff>
    9adc:	00 00 fd c0 	move s0, s26
    9ae0:	00 40 00 a8 	load_32 s0, 16(s0)
    9ae4:	20 04 00 14 	cmplt_i s1, s0, 1
    9ae8:	01 03 00 f4 	bnz s1, 96 <_ZN9librender13RenderContext8fillTileEi+0x3e4>
    9aec:	1e 53 02 a8 	load_32 s24, 148(sp)
    9af0:	3b 33 01 05 	add_i s25, s27, 76
    9af4:	00 f0 ff 05 	add_i s0, s0, -4
    9af8:	39 00 00 a8 	load_32 s1, (s25)
    9afc:	58 08 00 0b 	shl s2, s24, 2
    9b00:	60 04 00 0b 	shl s3, s0, 1
    9b04:	00 00 5c c0 	add_i s0, s0, s24
    9b08:	41 00 51 c0 	add_i s2, s1, s2
    9b0c:	63 00 5c c0 	add_i s3, s3, s24
    9b10:	00 08 00 0b 	shl s0, s0, 2
    9b14:	01 00 50 c0 	add_i s0, s1, s0
    9b18:	63 08 00 0b 	shl s3, s3, 2
    9b1c:	61 80 51 c0 	add_i s3, s1, s3
    9b20:	22 00 00 a8 	load_32 s1, (s2)
    9b24:	40 00 00 a8 	load_32 s2, (s0)
    9b28:	63 00 00 a8 	load_32 s3, (s3)
    9b2c:	1e 70 02 a8 	load_32 s0, 156(sp)
    9b30:	ec 09 00 f8 	call 10160 <_ZN9librender14TriangleFiller10setUpParamEfff>
    9b34:	00 00 fd c0 	move s0, s26
    9b38:	18 07 00 05 	add_i s24, s24, 1
    9b3c:	00 40 00 a8 	load_32 s0, 16(s0)
    9b40:	38 00 40 c1 	cmplt_i s1, s24, s0
    9b44:	81 fd ff f5 	bnz s1, -80 <_ZN9librender13RenderContext8fillTileEi+0x390>
    9b48:	5e 73 02 a8 	load_32 s26, 156(sp)
    9b4c:	1e 10 02 a8 	load_32 s0, 132(sp)
    9b50:	00 00 00 a0 	load_u8 s0, (s0)
    9b54:	3e 00 02 a8 	load_32 s1, 128(sp)
    9b58:	61 00 00 a8 	load_32 s3, (s1)
    9b5c:	3e f0 01 a8 	load_32 s1, 124(sp)
    9b60:	81 00 00 a8 	load_32 s4, (s1)
    9b64:	c0 01 00 f2 	bz s0, 56 <_ZN9librender13RenderContext8fillTileEi+0x438>
    9b68:	bb f0 00 a8 	load_32 s5, 60(s27)
    9b6c:	db 00 01 a8 	load_32 s6, 64(s27)
    9b70:	fb 10 01 a8 	load_32 s7, 68(s27)
    9b74:	3b 20 01 a8 	load_32 s1, 72(s27)
    9b78:	0d 00 00 f6 	b 52 <_ZN9librender13RenderContext8fillTileEi+0x448>
    9b7c:	9b 10 01 a8 	load_32 s4, 68(s27)
    9b80:	bb 20 01 a8 	load_32 s5, 72(s27)
    9b84:	5b f0 00 a8 	load_32 s2, 60(s27)
    9b88:	7b 00 01 a8 	load_32 s3, 64(s27)
    9b8c:	e5 00 20 c1 	cmpgt_i s7, s5, s0
    9b90:	c0 00 f6 c0 	move s6, s12
    9b94:	e7 f1 ff f5 	bnz s7, -452 <_ZN9librender13RenderContext8fillTileEi+0x26c>
    9b98:	8d ff ff f7 	b -460 <_ZN9librender13RenderContext8fillTileEi+0x268>
    9b9c:	bb 10 01 a8 	load_32 s5, 68(s27)
    9ba0:	db 20 01 a8 	load_32 s6, 72(s27)
    9ba4:	fb f0 00 a8 	load_32 s7, 60(s27)
    9ba8:	3b 00 01 a8 	load_32 s1, 64(s27)
    9bac:	5e e0 01 a8 	load_32 s2, 120(sp)
    9bb0:	02 30 00 a8 	load_32 s0, 12(s2)
    9bb4:	42 40 00 a8 	load_32 s2, 16(s2)
    9bb8:	5e 20 00 88 	store_32 s2, 8(sp)
    9bbc:	1e 10 00 88 	store_32 s0, 4(sp)
    9bc0:	1e 80 02 05 	add_i s0, sp, 160
    9bc4:	3e 00 00 88 	store_32 s1, (sp)
    9bc8:	3e 43 02 a8 	load_32 s25, 144(sp)
    9bcc:	20 80 fc c0 	move s1, s25
    9bd0:	1e 63 02 a8 	load_32 s24, 152(sp)
    9bd4:	40 00 fc c0 	move s2, s24
    9bd8:	fa 05 00 f8 	call 6120 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii>
    9bdc:	3e c1 01 a8 	load_32 s9, 112(sp)
    9be0:	5e 31 02 a8 	load_32 s10, 140(sp)
    9be4:	7e b1 01 a8 	load_32 s11, 108(sp)
    9be8:	9e a1 01 a8 	load_32 s12, 104(sp)
    9bec:	be 91 01 a8 	load_32 s13, 100(sp)
    9bf0:	de 81 01 a8 	load_32 s14, 96(sp)
    9bf4:	e0 01 fd c0 	move s15, s26
    9bf8:	5e 23 02 a8 	load_32 s26, 136(sp)
    9bfc:	5a 07 00 05 	add_i s26, s26, 1
    9c00:	1a 00 01 11 	cmpne_i s0, s26, 64
    9c04:	00 01 00 f4 	bnz s0, 32 <_ZN9librender13RenderContext8fillTileEi+0x4c0>
    9c08:	2a 00 00 a8 	load_32 s1, (s10)
    9c0c:	01 00 00 10 	cmpeq_i s0, s1, 0
    9c10:	40 00 00 f4 	bnz s0, 8 <_ZN9librender13RenderContext8fillTileEi+0x4b4>
    9c14:	40 81 f0 c0 	move s10, s1
    9c18:	40 03 f7 c0 	move s26, s14
    9c1c:	40 00 00 f4 	bnz s0, 8 <_ZN9librender13RenderContext8fillTileEi+0x4c0>
    9c20:	5e 53 02 a8 	load_32 s26, 148(sp)
    9c24:	0a 80 14 c1 	cmpne_i s0, s10, s9
    9c28:	60 eb ff f5 	bnz s0, -660 <_ZN9librender13RenderContext8fillTileEi+0x230>
    9c2c:	1a 80 15 c1 	cmpne_i s0, s26, s11
    9c30:	20 eb ff f5 	bnz s0, -668 <_ZN9librender13RenderContext8fillTileEi+0x230>
    9c34:	1e d0 01 a8 	load_32 s0, 116(sp)
    9c38:	20 80 fc c0 	move s1, s25
    9c3c:	40 00 fc c0 	move s2, s24
    9c40:	13 fc ff f9 	call -4020 <_ZN9librender7Surface9flushTileEii>
    9c44:	fe b3 08 a8 	load_32 ra, 556(sp)
    9c48:	7e c3 08 a8 	load_32 s27, 560(sp)
    9c4c:	5e d3 08 a8 	load_32 s26, 564(sp)
    9c50:	3e e3 08 a8 	load_32 s25, 568(sp)
    9c54:	1e f3 08 a8 	load_32 s24, 572(sp)
    9c58:	de 03 09 05 	add_i sp, sp, 576
    9c5c:	1f 00 00 f0 	ret

0000000000009c60 _ZN9librender13RenderContext14_wireframeTileEPvi:
    9c60:	de 03 ff 05 	add_i sp, sp, -64
    9c64:	fe f3 00 88 	store_32 ra, 60(sp)
    9c68:	04 00 00 f8 	call 16 <_ZN9librender13RenderContext13wireframeTileEi>
    9c6c:	fe f3 00 a8 	load_32 ra, 60(sp)
    9c70:	de 03 01 05 	add_i sp, sp, 64
    9c74:	1f 00 00 f0 	ret

0000000000009c78 _ZN9librender13RenderContext13wireframeTileEi:
    9c78:	de 03 fd 05 	add_i sp, sp, -192
    9c7c:	1e f3 02 88 	store_32 s24, 188(sp)
    9c80:	3e e3 02 88 	store_32 s25, 184(sp)
    9c84:	5e d3 02 88 	store_32 s26, 180(sp)
    9c88:	7e c3 02 88 	store_32 s27, 176(sp)
    9c8c:	fe b3 02 88 	store_32 ra, 172(sp)
    9c90:	60 83 f0 c0 	move s27, s1
    9c94:	20 03 f0 c0 	move s25, s0
    9c98:	59 53 00 a8 	load_32 s26, 20(s25)
    9c9c:	00 80 fd c0 	move s0, s27
    9ca0:	20 00 fd c0 	move s1, s26
    9ca4:	08 2f 00 f8 	call 48160 <__divsi3>
    9ca8:	19 23 00 a8 	load_32 s24, 8(s25)
    9cac:	39 10 00 a8 	load_32 s1, 4(s25)
    9cb0:	41 00 00 a8 	load_32 s2, (s1)
    9cb4:	20 00 7d c0 	mull_i s1, s0, s26
    9cb8:	40 03 f1 c0 	move s26, s2
    9cbc:	79 e0 01 a8 	load_32 s3, 120(s25)
    9cc0:	5b 80 60 c0 	sub_i s2, s27, s1
    9cc4:	3a 00 03 a8 	load_32 s1, 192(s26)
    9cc8:	42 18 00 0b 	shl s2, s2, 6
    9ccc:	5e 80 02 88 	store_32 s2, 160(sp)
    9cd0:	41 00 61 c0 	sub_i s2, s1, s2
    9cd4:	82 00 01 14 	cmplt_i s4, s2, 64
    9cd8:	40 18 00 0b 	shl s2, s0, 6
    9cdc:	5e a0 02 88 	store_32 s2, 168(sp)
    9ce0:	04 04 00 f4 	bnz s4, 128 <_ZN9librender13RenderContext13wireframeTileEi+0xe8>
    9ce4:	1a 10 03 a8 	load_32 s0, 196(s26)
    9ce8:	00 00 61 c0 	sub_i s0, s0, s2
    9cec:	00 00 01 14 	cmplt_i s0, s0, 64
    9cf0:	80 03 00 f4 	bnz s0, 112 <_ZN9librender13RenderContext13wireframeTileEi+0xe8>
    9cf4:	1a 50 03 a8 	load_32 s0, 212(s26)
    9cf8:	00 04 00 16 	cmpgt_u s0, s0, 1
    9cfc:	20 03 00 f4 	bnz s0, 100 <_ZN9librender13RenderContext13wireframeTileEi+0xe8>
    9d00:	1a 30 03 a8 	load_32 s0, 204(s26)
    9d04:	21 00 71 c0 	mull_i s1, s1, s2
    9d08:	fa 60 03 a8 	load_32 s7, 216(s26)
    9d0c:	00 80 f1 c4 	move v0, s3
    9d10:	9a 20 03 a8 	load_32 s4, 200(s26)
    9d14:	de 80 02 a8 	load_32 s6, 160(sp)
    9d18:	a4 7c 00 09 	ashr s5, s4, 31
    9d1c:	21 00 53 c0 	add_i s1, s1, s6
    9d20:	27 80 70 c0 	mull_i s1, s7, s1
    9d24:	a5 68 00 0a 	shr s5, s5, 26
    9d28:	84 80 52 c0 	add_i s4, s4, s5
    9d2c:	01 00 50 c0 	add_i s0, s1, s0
    9d30:	20 00 00 0f 	move s1, 0
    9d34:	44 18 00 09 	ashr s2, s4, 6
    9d38:	42 18 00 0b 	shl s2, s2, 6
    9d3c:	21 04 00 05 	add_i s1, s1, 1
    9d40:	00 00 00 8e 	store_v v0, (s0)
    9d44:	00 00 01 8e 	store_v v0, 64(s0)
    9d48:	00 00 02 8e 	store_v v0, 128(s0)
    9d4c:	00 00 03 8e 	store_v v0, 192(s0)
    9d50:	61 00 01 18 	cmplt_u s3, s1, 64
    9d54:	00 00 51 c0 	add_i s0, s0, s2
    9d58:	23 ff ff f5 	bnz s3, -28 <_ZN9librender13RenderContext13wireframeTileEi+0xc4>
    9d5c:	04 00 00 f6 	b 16 <_ZN9librender13RenderContext13wireframeTileEi+0xf4>
    9d60:	00 00 fd c0 	move s0, s26
    9d64:	3e 80 02 a8 	load_32 s1, 160(sp)
    9d68:	71 fb ff f9 	call -4668 <_ZN9librender7Surface13slowClearTileEiij>
    9d6c:	1a 10 03 a8 	load_32 s0, 196(s26)
    9d70:	3e a0 02 a8 	load_32 s1, 168(sp)
    9d74:	21 fc 00 00 	or s1, s1, 63
    9d78:	3e 90 02 88 	store_32 s1, 164(sp)
    9d7c:	5e 80 02 a8 	load_32 s2, 160(sp)
    9d80:	21 00 40 c1 	cmplt_i s1, s1, s0
    9d84:	42 fc 00 00 	or s2, s2, 63
    9d88:	61 00 00 f4 	bnz s1, 12 <_ZN9librender13RenderContext13wireframeTileEi+0x11c>
    9d8c:	00 fc ff 05 	add_i s0, s0, -1
    9d90:	1e 90 02 88 	store_32 s0, 164(sp)
    9d94:	5e 73 02 88 	store_32 s26, 156(sp)
    9d98:	1a 00 03 a8 	load_32 s0, 192(s26)
    9d9c:	22 00 40 c1 	cmplt_i s1, s2, s0
    9da0:	41 00 00 f4 	bnz s1, 8 <_ZN9librender13RenderContext13wireframeTileEi+0x130>
    9da4:	40 fc ff 05 	add_i s2, s0, -1
    9da8:	1b 50 00 07 	mull_i s0, s27, 20
    9dac:	5e 30 02 88 	store_32 s2, 140(sp)
    9db0:	18 00 50 c0 	add_i s0, s24, s0
    9db4:	40 00 00 a8 	load_32 s2, (s0)
    9db8:	20 10 00 a8 	load_32 s1, 4(s0)
    9dbc:	3e 20 02 88 	store_32 s1, 136(sp)
    9dc0:	00 20 00 a8 	load_32 s0, 8(s0)
    9dc4:	1e 10 02 88 	store_32 s0, 132(sp)
    9dc8:	22 80 10 c1 	cmpne_i s1, s2, s1
    9dcc:	61 00 00 f4 	bnz s1, 12 <_ZN9librender13RenderContext13wireframeTileEi+0x160>
    9dd0:	1e 10 02 a8 	load_32 s0, 132(sp)
    9dd4:	80 0a 00 f2 	bz s0, 336 <_ZN9librender13RenderContext13wireframeTileEi+0x2ac>
    9dd8:	00 00 00 0f 	move s0, 0
    9ddc:	20 fc ff 0f 	move s1, -1
    9de0:	3e 60 02 88 	store_32 s1, 152(sp)
    9de4:	20 00 01 0f 	move s1, 64
    9de8:	3e 00 02 88 	store_32 s1, 128(sp)
    9dec:	1e f0 01 88 	store_32 s0, 124(sp)
    9df0:	20 00 f0 c0 	move s1, s0
    9df4:	5e 33 02 a8 	load_32 s26, 140(sp)
    9df8:	0e 00 00 f6 	b 56 <_ZN9librender13RenderContext13wireframeTileEi+0x1b8>
    9dfc:	5e 40 02 a8 	load_32 s2, 144(sp)
    9e00:	1e 20 02 a8 	load_32 s0, 136(sp)
    9e04:	02 00 10 c1 	cmpne_i s0, s2, s0
    9e08:	40 01 00 f4 	bnz s0, 40 <_ZN9librender13RenderContext13wireframeTileEi+0x1b8>
    9e0c:	43 00 00 f6 	b 268 <_ZN9librender13RenderContext13wireframeTileEi+0x2a0>
    9e10:	40 80 f0 c0 	move s2, s1
    9e14:	3e 00 02 a8 	load_32 s1, 128(sp)
    9e18:	a0 07 00 f4 	bnz s0, 244 <_ZN9librender13RenderContext13wireframeTileEi+0x294>
    9e1c:	3e f0 01 a8 	load_32 s1, 124(sp)
    9e20:	1e 20 02 a8 	load_32 s0, 136(sp)
    9e24:	02 00 10 c1 	cmpne_i s0, s2, s0
    9e28:	40 00 00 f4 	bnz s0, 8 <_ZN9librender13RenderContext13wireframeTileEi+0x1b8>
    9e2c:	3b 00 00 f6 	b 236 <_ZN9librender13RenderContext13wireframeTileEi+0x2a0>
    9e30:	01 30 01 07 	mull_i s0, s1, 76
    9e34:	5e 40 02 88 	store_32 s2, 144(sp)
    9e38:	22 03 50 c0 	add_i s25, s2, s0
    9e3c:	3e 50 02 88 	store_32 s1, 148(sp)
    9e40:	39 d0 00 a8 	load_32 s1, 52(s25)
    9e44:	59 e0 00 a8 	load_32 s2, 56(s25)
    9e48:	79 f0 00 a8 	load_32 s3, 60(s25)
    9e4c:	99 00 01 a8 	load_32 s4, 64(s25)
    9e50:	1e 93 02 a8 	load_32 s24, 164(sp)
    9e54:	1e 13 00 88 	store_32 s24, 4(sp)
    9e58:	1e 93 02 88 	store_32 s24, 164(sp)
    9e5c:	5e 03 00 88 	store_32 s26, (sp)
    9e60:	7e 73 02 a8 	load_32 s27, 156(sp)
    9e64:	00 80 fd c0 	move s0, s27
    9e68:	be 60 02 a8 	load_32 s5, 152(sp)
    9e6c:	de 80 02 a8 	load_32 s6, 160(sp)
    9e70:	fe a0 02 a8 	load_32 s7, 168(sp)
    9e74:	29 0c 00 f8 	call 12452 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii>
    9e78:	39 f0 00 a8 	load_32 s1, 60(s25)
    9e7c:	59 00 01 a8 	load_32 s2, 64(s25)
    9e80:	79 10 01 a8 	load_32 s3, 68(s25)
    9e84:	99 20 01 a8 	load_32 s4, 72(s25)
    9e88:	1e 13 00 88 	store_32 s24, 4(sp)
    9e8c:	5e 03 00 88 	store_32 s26, (sp)
    9e90:	00 80 fd c0 	move s0, s27
    9e94:	7e 63 02 a8 	load_32 s27, 152(sp)
    9e98:	a0 80 fd c0 	move s5, s27
    9e9c:	1e 83 02 a8 	load_32 s24, 160(sp)
    9ea0:	c0 00 fc c0 	move s6, s24
    9ea4:	fe a0 02 a8 	load_32 s7, 168(sp)
    9ea8:	1c 0c 00 f8 	call 12400 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii>
    9eac:	39 10 01 a8 	load_32 s1, 68(s25)
    9eb0:	59 20 01 a8 	load_32 s2, 72(s25)
    9eb4:	79 d0 00 a8 	load_32 s3, 52(s25)
    9eb8:	99 e0 00 a8 	load_32 s4, 56(s25)
    9ebc:	1e 90 02 a8 	load_32 s0, 164(sp)
    9ec0:	1e 10 00 88 	store_32 s0, 4(sp)
    9ec4:	5e 03 00 88 	store_32 s26, (sp)
    9ec8:	1e 70 02 a8 	load_32 s0, 156(sp)
    9ecc:	a0 80 fd c0 	move s5, s27
    9ed0:	c0 00 fc c0 	move s6, s24
    9ed4:	fe a0 02 a8 	load_32 s7, 168(sp)
    9ed8:	10 0c 00 f8 	call 12352 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii>
    9edc:	3e 50 02 a8 	load_32 s1, 148(sp)
    9ee0:	21 04 00 05 	add_i s1, s1, 1
    9ee4:	01 00 01 11 	cmpne_i s0, s1, 64
    9ee8:	a0 f8 ff f5 	bnz s0, -236 <_ZN9librender13RenderContext13wireframeTileEi+0x184>
    9eec:	5e 40 02 a8 	load_32 s2, 144(sp)
    9ef0:	22 00 00 a8 	load_32 s1, (s2)
    9ef4:	01 00 00 10 	cmpeq_i s0, s1, 0
    9ef8:	40 00 00 f4 	bnz s0, 8 <_ZN9librender13RenderContext13wireframeTileEi+0x288>
    9efc:	c5 ff ff f7 	b -236 <_ZN9librender13RenderContext13wireframeTileEi+0x198>
    9f00:	3e 00 02 a8 	load_32 s1, 128(sp)
    9f04:	40 00 00 f4 	bnz s0, 8 <_ZN9librender13RenderContext13wireframeTileEi+0x294>
    9f08:	c5 ff ff f7 	b -236 <_ZN9librender13RenderContext13wireframeTileEi+0x1a4>
    9f0c:	1e 20 02 a8 	load_32 s0, 136(sp)
    9f10:	02 00 10 c1 	cmpne_i s0, s2, s0
    9f14:	e0 f8 ff f5 	bnz s0, -228 <_ZN9librender13RenderContext13wireframeTileEi+0x1b8>
    9f18:	1e 10 02 a8 	load_32 s0, 132(sp)
    9f1c:	01 00 10 c1 	cmpne_i s0, s1, s0
    9f20:	80 f8 ff f5 	bnz s0, -240 <_ZN9librender13RenderContext13wireframeTileEi+0x1b8>
    9f24:	1e 70 02 a8 	load_32 s0, 156(sp)
    9f28:	3e 80 02 a8 	load_32 s1, 160(sp)
    9f2c:	5e a0 02 a8 	load_32 s2, 168(sp)
    9f30:	57 fb ff f9 	call -4772 <_ZN9librender7Surface9flushTileEii>
    9f34:	fe b3 02 a8 	load_32 ra, 172(sp)
    9f38:	7e c3 02 a8 	load_32 s27, 176(sp)
    9f3c:	5e d3 02 a8 	load_32 s26, 180(sp)
    9f40:	3e e3 02 a8 	load_32 s25, 184(sp)
    9f44:	1e f3 02 a8 	load_32 s24, 188(sp)
    9f48:	de 03 03 05 	add_i sp, sp, 192
    9f4c:	1f 00 00 f0 	ret

0000000000009f50 _ZN9librender13RenderContext6finishEv:
    9f50:	de 03 fe 05 	add_i sp, sp, -128
    9f54:	1e f3 01 88 	store_32 s24, 124(sp)
    9f58:	3e e3 01 88 	store_32 s25, 120(sp)
    9f5c:	5e d3 01 88 	store_32 s26, 116(sp)
    9f60:	7e c3 01 88 	store_32 s27, 112(sp)
    9f64:	fe b3 01 88 	store_32 ra, 108(sp)
    9f68:	00 03 f0 c0 	move s24, s0
    9f6c:	18 50 00 a8 	load_32 s0, 20(s24)
    9f70:	38 60 00 a8 	load_32 s1, 24(s24)
    9f74:	01 00 70 c0 	mull_i s0, s1, s0
    9f78:	20 50 00 08 	mulh_u s1, s0, 20
    9f7c:	21 00 00 11 	cmpne_i s1, s1, 0
    9f80:	61 00 00 f4 	bnz s1, 12 <_ZN9librender13RenderContext6finishEv+0x3c>
    9f84:	60 50 00 07 	mull_i s3, s0, 20
    9f88:	02 00 00 f6 	b 8 <_ZN9librender13RenderContext6finishEv+0x40>
    9f8c:	60 fc ff 0f 	move s3, -1
    9f90:	38 70 00 05 	add_i s1, s24, 28
    9f94:	38 93 00 05 	add_i s25, s24, 36
    9f98:	98 90 00 a8 	load_32 s4, 36(s24)
    9f9c:	d8 70 00 a8 	load_32 s6, 28(s24)
    9fa0:	f8 80 00 a8 	load_32 s7, 32(s24)
    9fa4:	44 0c 00 05 	add_i s2, s4, 3
    9fa8:	c6 80 53 c0 	add_i s6, s6, s7
    9fac:	42 f0 ff 01 	and s2, s2, -4
    9fb0:	a2 80 51 c0 	add_i s5, s2, s3
    9fb4:	c5 00 83 c1 	cmplt_u s6, s5, s6
    9fb8:	46 00 00 f4 	bnz s6, 8 <_ZN9librender13RenderContext6finishEv+0x70>
    9fbc:	9a 00 00 f6 	b 616 <_ZN9librender13RenderContext6finishEv+0x2d4>
    9fc0:	d9 00 00 aa 	load_sync s6, (s25)
    9fc4:	e6 00 12 c1 	cmpne_i s7, s6, s4
    9fc8:	87 00 00 f4 	bnz s7, 16 <_ZN9librender13RenderContext6finishEv+0x88>
    9fcc:	e0 80 f2 c0 	move s7, s5
    9fd0:	f9 00 00 8a 	store_sync s7, (s25)  
    9fd4:	67 ff ff f3 	bz s7, -20 <_ZN9librender13RenderContext6finishEv+0x70>
    9fd8:	86 00 02 c1 	cmpeq_i s4, s6, s4
    9fdc:	84 04 00 01 	and s4, s4, 1
    9fe0:	c4 fd ff f3 	bz s4, -72 <_ZN9librender13RenderContext6finishEv+0x48>
    9fe4:	40 00 00 f4 	bnz s0, 8 <_ZN9librender13RenderContext6finishEv+0x9c>
    9fe8:	16 00 00 f6 	b 88 <_ZN9librender13RenderContext6finishEv+0xf0>
    9fec:	60 50 00 07 	mull_i s3, s0, 20
    9ff0:	82 80 51 c0 	add_i s4, s2, s3
    9ff4:	60 00 00 0f 	move s3, 0
    9ff8:	a0 00 f1 c0 	move s5, s2
    9ffc:	65 00 00 88 	store_32 s3, (s5)
    a000:	65 10 00 88 	store_32 s3, 4(s5)
    a004:	65 20 00 88 	store_32 s3, 8(s5)
    a008:	65 30 00 88 	store_32 s3, 12(s5)
    a00c:	65 40 00 88 	store_32 s3, 16(s5)
    a010:	a5 50 00 05 	add_i s5, s5, 20
    a014:	c5 00 12 c1 	cmpne_i s6, s5, s4
    a018:	26 ff ff f5 	bnz s6, -28 <_ZN9librender13RenderContext6finishEv+0xac>
    a01c:	58 20 00 88 	store_32 s2, 8(s24)
    a020:	20 01 00 f2 	bz s0, 36 <_ZN9librender13RenderContext6finishEv+0xf4>
    a024:	83 50 00 07 	mull_i s4, s3, 20
    a028:	63 04 00 05 	add_i s3, s3, 1
    a02c:	82 00 52 c0 	add_i s4, s2, s4
    a030:	a3 00 80 c1 	cmplt_u s5, s3, s0
    a034:	24 30 00 88 	store_32 s1, 12(s4)
    a038:	65 ff ff f5 	bnz s5, -20 <_ZN9librender13RenderContext6finishEv+0xd4>
    a03c:	02 00 00 f6 	b 8 <_ZN9librender13RenderContext6finishEv+0xf4>
    a040:	58 20 00 88 	store_32 s2, 8(s24)
    a044:	20 00 00 0f 	move s1, 0
    a048:	38 d0 01 88 	store_32 s1, 116(s24)
    a04c:	18 60 01 a8 	load_32 s0, 88(s24)
    a050:	18 b0 01 88 	store_32 s0, 108(s24)
    a054:	3e 70 01 88 	store_32 s1, 92(sp)
    a058:	38 c0 01 88 	store_32 s1, 112(s24)
    a05c:	38 70 01 a8 	load_32 s1, 92(s24)
    a060:	41 00 10 c1 	cmpne_i s2, s1, s0
    a064:	38 80 01 a8 	load_32 s1, 96(s24)
    a068:	42 00 00 f4 	bnz s2, 8 <_ZN9librender13RenderContext6finishEv+0x120>
    a06c:	01 0a 00 f2 	bz s1, 320 <_ZN9librender13RenderContext6finishEv+0x25c>
    a070:	2a 54 55 4f 	movehi s1, 174762
    a074:	44 00 00 4f 	movehi s2, 4
    a078:	64 00 00 4f 	movehi s3, 4
    a07c:	21 58 55 00 	or s1, s1, 5462
    a080:	3e a0 01 88 	store_32 s1, 104(sp)
    a084:	22 90 43 00 	or s1, s2, 4324
    a088:	3e 90 01 88 	store_32 s1, 100(sp)
    a08c:	20 80 00 0f 	move s1, 32
    a090:	3e 80 01 88 	store_32 s1, 96(sp)
    a094:	3e 70 01 a8 	load_32 s1, 92(sp)
    a098:	43 23 4a 00 	or s26, s3, 4744
    a09c:	21 c0 00 07 	mull_i s1, s1, 48
    a0a0:	00 80 50 c0 	add_i s0, s0, s1
    a0a4:	20 30 00 a8 	load_32 s1, 12(s0)
    a0a8:	21 20 00 a8 	load_32 s1, 8(s1)
    a0ac:	40 40 00 a8 	load_32 s2, 16(s0)
    a0b0:	42 20 00 a8 	load_32 s2, 8(s2)
    a0b4:	60 80 00 a8 	load_32 s3, 32(s0)
    a0b8:	63 10 00 a8 	load_32 s3, 4(s3)
    a0bc:	9e a0 01 a8 	load_32 s4, 104(sp)
    a0c0:	61 80 71 c0 	mull_i s3, s1, s3
    a0c4:	42 00 f2 c1 	mulh_i s2, s2, s4
    a0c8:	63 08 00 0b 	shl s3, s3, 2
    a0cc:	82 7c 00 0a 	shr s4, s2, 31
    a0d0:	62 03 52 c0 	add_i s27, s2, s4
    a0d4:	98 90 00 a8 	load_32 s4, 36(s24)
    a0d8:	d8 70 00 a8 	load_32 s6, 28(s24)
    a0dc:	f8 80 00 a8 	load_32 s7, 32(s24)
    a0e0:	44 0c 00 05 	add_i s2, s4, 3
    a0e4:	c6 80 53 c0 	add_i s6, s6, s7
    a0e8:	42 f0 ff 01 	and s2, s2, -4
    a0ec:	a2 80 51 c0 	add_i s5, s2, s3
    a0f0:	c5 00 83 c1 	cmplt_u s6, s5, s6
    a0f4:	46 00 00 f4 	bnz s6, 8 <_ZN9librender13RenderContext6finishEv+0x1ac>
    a0f8:	4b 00 00 f6 	b 300 <_ZN9librender13RenderContext6finishEv+0x2d4>
    a0fc:	d9 00 00 aa 	load_sync s6, (s25)
    a100:	e6 00 12 c1 	cmpne_i s7, s6, s4
    a104:	87 00 00 f4 	bnz s7, 16 <_ZN9librender13RenderContext6finishEv+0x1c4>
    a108:	e0 80 f2 c0 	move s7, s5
    a10c:	f9 00 00 8a 	store_sync s7, (s25)  
    a110:	67 ff ff f3 	bz s7, -20 <_ZN9librender13RenderContext6finishEv+0x1ac>
    a114:	86 00 02 c1 	cmpeq_i s4, s6, s4
    a118:	84 04 00 01 	and s4, s4, 1
    a11c:	c4 fd ff f3 	bz s4, -72 <_ZN9librender13RenderContext6finishEv+0x184>
    a120:	21 3c 00 05 	add_i s1, s1, 15
    a124:	40 70 00 88 	store_32 s2, 28(s0)
    a128:	1e 90 01 a8 	load_32 s0, 100(sp)
    a12c:	61 7c 00 09 	ashr s3, s1, 31
    a130:	63 70 00 0a 	shr s3, s3, 28
    a134:	21 80 51 c0 	add_i s1, s1, s3
    a138:	41 10 00 09 	ashr s2, s1, 4
    a13c:	20 00 fc c0 	move s1, s24
    a140:	b2 27 00 f8 	call 40648 <parallel_execute>
    a144:	00 00 fd c0 	move s0, s26
    a148:	20 00 fc c0 	move s1, s24
    a14c:	40 80 fd c0 	move s2, s27
    a150:	ae 27 00 f8 	call 40632 <parallel_execute>
    a154:	18 d0 01 a8 	load_32 s0, 116(s24)
    a158:	00 80 5d c0 	add_i s0, s0, s27
    a15c:	18 d0 01 88 	store_32 s0, 116(s24)
    a160:	18 c0 01 a8 	load_32 s0, 112(s24)
    a164:	20 04 00 05 	add_i s1, s0, 1
    a168:	38 c0 01 88 	store_32 s1, 112(s24)
    a16c:	18 b0 01 a8 	load_32 s0, 108(s24)
    a170:	41 80 00 11 	cmpne_i s2, s1, 32
    a174:	02 01 00 f4 	bnz s2, 32 <_ZN9librender13RenderContext6finishEv+0x244>
    a178:	40 00 00 a8 	load_32 s2, (s0)
    a17c:	3e 80 01 a8 	load_32 s1, 96(sp)
    a180:	a2 00 00 f2 	bz s2, 20 <_ZN9librender13RenderContext6finishEv+0x244>
    a184:	58 b0 01 88 	store_32 s2, 108(s24)
    a188:	3e 70 01 a8 	load_32 s1, 92(sp)
    a18c:	38 c0 01 88 	store_32 s1, 112(s24)
    a190:	00 00 f1 c0 	move s0, s2
    a194:	58 70 01 a8 	load_32 s2, 92(s24)
    a198:	60 00 11 c1 	cmpne_i s3, s0, s2
    a19c:	58 80 01 a8 	load_32 s2, 96(s24)
    a1a0:	e3 f7 ff f5 	bnz s3, -260 <_ZN9librender13RenderContext6finishEv+0x14c>
    a1a4:	41 00 11 c1 	cmpne_i s2, s1, s2
    a1a8:	a2 f7 ff f5 	bnz s2, -268 <_ZN9librender13RenderContext6finishEv+0x14c>
    a1ac:	18 f0 01 a0 	load_u8 s0, 124(s24)
    a1b0:	38 63 01 05 	add_i s25, s24, 88
    a1b4:	38 50 00 a8 	load_32 s1, 20(s24)
    a1b8:	58 60 00 a8 	load_32 s2, 24(s24)
    a1bc:	42 80 70 c0 	mull_i s2, s2, s1
    a1c0:	80 00 00 f2 	bz s0, 16 <_ZN9librender13RenderContext6finishEv+0x280>
    a1c4:	04 00 00 4f 	movehi s0, 4
    a1c8:	00 80 71 00 	or s0, s0, 7264
    a1cc:	03 00 00 f6 	b 12 <_ZN9librender13RenderContext6finishEv+0x288>
    a1d0:	04 00 00 4f 	movehi s0, 4
    a1d4:	00 30 5d 00 	or s0, s0, 5964
    a1d8:	20 00 fc c0 	move s1, s24
    a1dc:	8b 27 00 f8 	call 40492 <parallel_execute>
    a1e0:	39 03 00 a8 	load_32 s25, (s25)
    a1e4:	f9 ff ff f5 	bnz s25, -4 <_ZN9librender13RenderContext6finishEv+0x290>
    a1e8:	00 00 00 0f 	move s0, 0
    a1ec:	18 60 01 88 	store_32 s0, 88(s24)
    a1f0:	18 70 01 88 	store_32 s0, 92(s24)
    a1f4:	18 80 01 88 	store_32 s0, 96(s24)
    a1f8:	38 70 00 a8 	load_32 s1, 28(s24)
    a1fc:	38 90 00 88 	store_32 s1, 36(s24)
    a200:	18 d0 00 88 	store_32 s0, 52(s24)
    a204:	18 00 00 82 	store_8 s0, (s24)
    a208:	fe b3 01 a8 	load_32 ra, 108(sp)
    a20c:	7e c3 01 a8 	load_32 s27, 112(sp)
    a210:	5e d3 01 a8 	load_32 s26, 116(sp)
    a214:	3e e3 01 a8 	load_32 s25, 120(sp)
    a218:	1e f3 01 a8 	load_32 s24, 124(sp)
    a21c:	de 03 02 05 	add_i sp, sp, 128
    a220:	1f 00 00 f0 	ret
    a224:	02 00 00 4f 	movehi s0, 2
    a228:	20 00 01 0f 	move s1, 64
    a22c:	3e 20 00 88 	store_32 s1, 8(sp)
    a230:	22 00 00 4f 	movehi s1, 2
    a234:	00 54 07 00 	or s0, s0, 469
    a238:	1e 30 00 88 	store_32 s0, 12(sp)
    a23c:	02 00 00 4f 	movehi s0, 2
    a240:	21 20 0e 00 	or s1, s1, 904
    a244:	3e 10 00 88 	store_32 s1, 4(sp)
    a248:	00 b8 0d 00 	or s0, s0, 878
    a24c:	1e 00 00 88 	store_32 s0, (sp)
    a250:	ef 21 00 f8 	call 34748 <printf>
    a254:	00 00 e0 c3 	break

000000000000a258 _ZN9librender13RenderContext7clipOneEiRKNS_11RenderStateEPKfS5_S5_:
    a258:	de 03 fd 05 	add_i sp, sp, -192
    a25c:	1e f3 02 88 	store_32 s24, 188(sp)
    a260:	3e e3 02 88 	store_32 s25, 184(sp)
    a264:	5e d3 02 88 	store_32 s26, 180(sp)
    a268:	7e c3 02 88 	store_32 s27, 176(sp)
    a26c:	fe b3 02 88 	store_32 ra, 172(sp)
    a270:	c0 00 00 4f 	movehi s6, 0
    a274:	00 83 f2 c0 	move s24, s5
    a278:	20 03 f2 c0 	move s25, s4
    a27c:	e2 41 00 a8 	load_32 s15, 16(s2)
    a280:	80 00 00 4f 	movehi s4, 0
    a284:	a6 41 05 00 	or s13, s6, 336
    a288:	b9 30 00 a8 	load_32 s5, 12(s25)
    a28c:	c4 c1 05 00 	or s14, s4, 368
    a290:	cd 00 00 a8 	load_32 s6, (s13)
    a294:	0f 01 00 12 	cmpgt_i s8, s15, 0
    a298:	83 30 00 a8 	load_32 s4, 12(s3)
    a29c:	ee 00 00 a8 	load_32 s7, (s14)
    a2a0:	48 00 00 f4 	bnz s8, 8 <_ZN9librender13RenderContext7clipOneEiRKNS_11RenderStateEPKfS5_S5_+0x50>
    a2a4:	3d 00 00 f6 	b 244 <_ZN9librender13RenderContext7clipOneEiRKNS_11RenderStateEPKfS5_S5_+0x140>
    a2a8:	05 01 12 c2 	sub_f s8, s5, s4
    a2ac:	c5 00 03 c2 	add_f s6, s5, s6
    a2b0:	20 01 c4 c1 	reciprocal s9, s8
    a2b4:	49 01 24 c2 	mul_f s10, s9, s8
    a2b8:	47 01 15 c2 	sub_f s10, s7, s10
    a2bc:	29 01 25 c2 	mul_f s9, s9, s10
    a2c0:	40 01 00 4f 	movehi s10, 0
    a2c4:	aa 10 05 00 	or s5, s10, 324
    a2c8:	45 01 00 a8 	load_32 s10, (s5)
    a2cc:	09 01 24 c2 	mul_f s8, s9, s8
    a2d0:	e7 00 14 c2 	sub_f s7, s7, s8
    a2d4:	00 01 00 0f 	move s8, 0
    a2d8:	e9 80 23 c2 	mul_f s7, s9, s7
    a2dc:	3e b1 01 05 	add_i s9, sp, 108
    a2e0:	c6 80 23 c2 	mul_f s6, s6, s7
    a2e4:	ea 00 13 c2 	sub_f s7, s10, s6
    a2e8:	48 09 00 0b 	shl s10, s8, 2
    a2ec:	79 01 55 c0 	add_i s11, s25, s10
    a2f0:	83 01 55 c0 	add_i s12, s3, s10
    a2f4:	08 05 00 05 	add_i s8, s8, 1
    a2f8:	6b 01 00 a8 	load_32 s11, (s11)
    a2fc:	49 01 55 c0 	add_i s10, s9, s10
    a300:	8c 01 00 a8 	load_32 s12, (s12)
    a304:	6b 81 23 c2 	mul_f s11, s11, s7
    a308:	8c 01 23 c2 	mul_f s12, s12, s6
    a30c:	6c 81 05 c2 	add_f s11, s12, s11
    a310:	88 81 47 c1 	cmplt_i s12, s8, s15
    a314:	6a 01 00 88 	store_32 s11, (s10)
    a318:	8c fe ff f5 	bnz s12, -48 <_ZN9librender13RenderContext7clipOneEiRKNS_11RenderStateEPKfS5_S5_+0x90>
    a31c:	d8 30 00 a8 	load_32 s6, 12(s24)
    a320:	7e b3 00 05 	add_i s27, sp, 44
    a324:	2d 01 00 a8 	load_32 s9, (s13)
    a328:	4e 01 00 a8 	load_32 s10, (s14)
    a32c:	a5 00 00 a8 	load_32 s5, (s5)
    a330:	86 00 12 c2 	sub_f s4, s6, s4
    a334:	c6 80 04 c2 	add_f s6, s6, s9
    a338:	e0 00 c2 c1 	reciprocal s7, s4
    a33c:	07 01 22 c2 	mul_f s8, s7, s4
    a340:	0a 01 14 c2 	sub_f s8, s10, s8
    a344:	e7 00 24 c2 	mul_f s7, s7, s8
    a348:	87 00 22 c2 	mul_f s4, s7, s4
    a34c:	8a 00 12 c2 	sub_f s4, s10, s4
    a350:	87 00 22 c2 	mul_f s4, s7, s4
    a354:	06 01 22 c2 	mul_f s8, s6, s4
    a358:	80 00 00 0f 	move s4, 0
    a35c:	25 01 14 c2 	sub_f s9, s5, s8
    a360:	a4 08 00 0b 	shl s5, s4, 2
    a364:	d8 80 52 c0 	add_i s6, s24, s5
    a368:	e3 80 52 c0 	add_i s7, s3, s5
    a36c:	84 04 00 05 	add_i s4, s4, 1
    a370:	c6 00 00 a8 	load_32 s6, (s6)
    a374:	bb 80 52 c0 	add_i s5, s27, s5
    a378:	e7 00 00 a8 	load_32 s7, (s7)
    a37c:	c6 80 24 c2 	mul_f s6, s6, s9
    a380:	e7 00 24 c2 	mul_f s7, s7, s8
    a384:	c7 00 03 c2 	add_f s6, s7, s6
    a388:	e4 80 47 c1 	cmplt_i s7, s4, s15
    a38c:	c5 00 00 88 	store_32 s6, (s5)
    a390:	87 fe ff f5 	bnz s7, -48 <_ZN9librender13RenderContext7clipOneEiRKNS_11RenderStateEPKfS5_S5_+0x108>
    a394:	02 00 00 f6 	b 8 <_ZN9librender13RenderContext7clipOneEiRKNS_11RenderStateEPKfS5_S5_+0x144>
    a398:	7e b3 00 05 	add_i s27, sp, 44
    a39c:	80 80 fc c0 	move s4, s25
    a3a0:	a0 80 fd c0 	move s5, s27
    a3a4:	3e 90 00 88 	store_32 s1, 36(sp)
    a3a8:	7e b0 01 05 	add_i s3, sp, 108
    a3ac:	5e a0 00 88 	store_32 s2, 40(sp)
    a3b0:	40 03 f0 c0 	move s26, s0
    a3b4:	0f 00 00 f8 	call 60 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_>
    a3b8:	00 00 fd c0 	move s0, s26
    a3bc:	3e 90 00 a8 	load_32 s1, 36(sp)
    a3c0:	5e a0 00 a8 	load_32 s2, 40(sp)
    a3c4:	60 80 fd c0 	move s3, s27
    a3c8:	80 80 fc c0 	move s4, s25
    a3cc:	a0 00 fc c0 	move s5, s24
    a3d0:	08 00 00 f8 	call 32 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_>
    a3d4:	fe b3 02 a8 	load_32 ra, 172(sp)
    a3d8:	7e c3 02 a8 	load_32 s27, 176(sp)
    a3dc:	5e d3 02 a8 	load_32 s26, 180(sp)
    a3e0:	3e e3 02 a8 	load_32 s25, 184(sp)
    a3e4:	1e f3 02 a8 	load_32 s24, 188(sp)
    a3e8:	de 03 03 05 	add_i sp, sp, 192
    a3ec:	1f 00 00 f0 	ret

000000000000a3f0 _ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_:
    a3f0:	de 03 fd 05 	add_i sp, sp, -192
    a3f4:	1e f3 02 88 	store_32 s24, 188(sp)
    a3f8:	3e e3 02 88 	store_32 s25, 184(sp)
    a3fc:	5e d3 02 88 	store_32 s26, 180(sp)
    a400:	7e c3 02 88 	store_32 s27, 176(sp)
    a404:	fe b3 02 88 	store_32 ra, 172(sp)
    a408:	c0 00 00 4f 	movehi s6, 0
    a40c:	e3 30 00 a8 	load_32 s7, 12(s3)
    a410:	c6 c0 05 00 	or s6, s6, 368
    a414:	00 81 c3 c1 	reciprocal s8, s7
    a418:	66 01 00 a8 	load_32 s11, (s6)
    a41c:	c4 30 00 a8 	load_32 s6, 12(s4)
    a420:	80 82 f2 c0 	move s20, s5
    a424:	b4 30 00 a8 	load_32 s5, 12(s20)
    a428:	00 03 f0 c0 	move s24, s0
    a42c:	20 01 c3 c1 	reciprocal s9, s6
    a430:	a3 01 00 a8 	load_32 s13, (s3)
    a434:	48 81 23 c2 	mul_f s10, s8, s7
    a438:	4b 01 15 c2 	sub_f s10, s11, s10
    a43c:	00 80 c2 c1 	reciprocal s0, s5
    a440:	08 01 25 c2 	mul_f s8, s8, s10
    a444:	49 01 23 c2 	mul_f s10, s9, s6
    a448:	4b 01 15 c2 	sub_f s10, s11, s10
    a44c:	29 01 25 c2 	mul_f s9, s9, s10
    a450:	40 81 22 c2 	mul_f s10, s0, s5
    a454:	4b 01 15 c2 	sub_f s10, s11, s10
    a458:	00 00 25 c2 	mul_f s0, s0, s10
    a45c:	e8 80 23 c2 	mul_f s7, s8, s7
    a460:	eb 80 13 c2 	sub_f s7, s11, s7
    a464:	e8 80 23 c2 	mul_f s7, s8, s7
    a468:	03 11 00 a8 	load_32 s8, 4(s3)
    a46c:	c9 00 23 c2 	mul_f s6, s9, s6
    a470:	c3 21 00 a8 	load_32 s14, 8(s3)
    a474:	cb 00 13 c2 	sub_f s6, s11, s6
    a478:	c9 00 23 c2 	mul_f s6, s9, s6
    a47c:	24 01 00 a8 	load_32 s9, (s4)
    a480:	a0 80 22 c2 	mul_f s5, s0, s5
    a484:	44 11 00 a8 	load_32 s10, 4(s4)
    a488:	ab 80 12 c2 	sub_f s5, s11, s5
    a48c:	e4 21 00 a8 	load_32 s15, 8(s4)
    a490:	74 01 00 a8 	load_32 s11, (s20)
    a494:	a0 80 22 c2 	mul_f s5, s0, s5
    a498:	94 11 00 a8 	load_32 s12, 4(s20)
    a49c:	2d 82 23 c2 	mul_f s17, s13, s7
    a4a0:	14 22 00 a8 	load_32 s16, 8(s20)
    a4a4:	49 02 23 c2 	mul_f s18, s9, s6
    a4a8:	18 30 00 a8 	load_32 s0, 12(s24)
    a4ac:	b8 42 00 a8 	load_32 s21, 16(s24)
    a4b0:	6b 82 22 c2 	mul_f s19, s11, s5
    a4b4:	8c 81 22 c2 	mul_f s12, s12, s5
    a4b8:	5e 32 02 88 	store_32 s18, 140(sp)
    a4bc:	20 7d 00 0a 	shr s9, s0, 31
    a4c0:	3e 42 02 88 	store_32 s17, 144(sp)
    a4c4:	b5 7d 00 0a 	shr s13, s21, 31
    a4c8:	7e 22 02 88 	store_32 s19, 136(sp)
    a4cc:	b5 81 56 c0 	add_i s13, s21, s13
    a4d0:	9e 11 02 88 	store_32 s12, 132(sp)
    a4d4:	20 81 54 c0 	add_i s9, s0, s9
    a4d8:	6d 05 00 09 	ashr s11, s13, 1
    a4dc:	29 05 00 09 	ashr s9, s9, 1
    a4e0:	a0 80 a5 c2 	itof s5, s11
    a4e4:	6a 01 23 c2 	mul_f s11, s10, s6
    a4e8:	20 81 a4 c2 	itof s9, s9
    a4ec:	b2 81 24 c2 	mul_f s13, s18, s9
    a4f0:	48 82 23 c2 	mul_f s18, s8, s7
    a4f4:	f3 80 24 c2 	mul_f s7, s19, s9
    a4f8:	7e 01 02 88 	store_32 s11, 128(sp)
    a4fc:	d1 80 24 c2 	mul_f s6, s17, s9
    a500:	4c 81 22 c2 	mul_f s10, s12, s5
    a504:	45 01 15 c2 	sub_f s10, s5, s10
    a508:	5e f2 01 88 	store_32 s18, 124(sp)
    a50c:	6b 81 22 c2 	mul_f s11, s11, s5
    a510:	0d 81 04 c2 	add_f s8, s13, s9
    a514:	65 81 15 c2 	sub_f s11, s5, s11
    a518:	e7 80 04 c2 	add_f s7, s7, s9
    a51c:	c6 80 04 c2 	add_f s6, s6, s9
    a520:	32 81 22 c2 	mul_f s9, s18, s5
    a524:	a5 80 14 c2 	sub_f s5, s5, s9
    a528:	20 01 b5 c1 	ftoi s9, s10
    a52c:	00 01 b4 c1 	ftoi s8, s8
    a530:	40 81 b5 c1 	ftoi s10, s11
    a534:	60 81 b3 c1 	ftoi s11, s7
    a538:	40 03 b3 c1 	ftoi s26, s6
    a53c:	3e 61 02 88 	store_32 s9, 152(sp)
    a540:	1e 81 02 88 	store_32 s8, 160(sp)
    a544:	20 83 b2 c1 	ftoi s25, s5
    a548:	5e 71 02 88 	store_32 s10, 156(sp)
    a54c:	a9 80 6c c0 	sub_i s5, s9, s25
    a550:	7e 51 02 88 	store_32 s11, 148(sp)
    a554:	c8 00 6d c0 	sub_i s6, s8, s26
    a558:	5e 90 02 88 	store_32 s2, 164(sp)
    a55c:	ea 80 6c c0 	sub_i s7, s10, s25
    a560:	3e e0 01 88 	store_32 s1, 120(sp)
    a564:	a5 00 73 c0 	mull_i s5, s5, s6
    a568:	cb 00 6d c0 	sub_i s6, s11, s26
    a56c:	c7 00 73 c0 	mull_i s6, s7, s6
    a570:	a5 00 63 c0 	sub_i s5, s5, s6
    a574:	05 29 00 f2 	bz s5, 1312 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x6a4>
    a578:	3e 90 02 a8 	load_32 s1, 164(sp)
    a57c:	45 00 00 14 	cmplt_i s2, s5, 0
    a580:	21 b0 00 a8 	load_32 s1, 44(s1)
    a584:	42 00 00 f4 	bnz s2, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x19c>
    a588:	61 28 00 f2 	bz s1, 1292 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x6a4>
    a58c:	45 7c 00 0a 	shr s2, s5, 31
    a590:	5e d0 01 88 	store_32 s2, 116(sp)
    a594:	62 00 00 f2 	bz s2, 12 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x1b0>
    a598:	21 04 00 10 	cmpeq_i s1, s1, 1
    a59c:	c1 27 00 f4 	bnz s1, 1272 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x6a4>
    a5a0:	3e 80 02 a8 	load_32 s1, 160(sp)
    a5a4:	41 00 2d c1 	cmpgt_i s2, s1, s26
    a5a8:	20 00 fd c0 	move s1, s26
    a5ac:	42 00 00 f4 	bnz s2, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x1c4>
    a5b0:	12 01 00 f6 	b 1096 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x608>
    a5b4:	be 50 02 a8 	load_32 s5, 148(sp)
    a5b8:	41 80 22 c1 	cmpgt_i s2, s1, s5
    a5bc:	c0 80 f2 c0 	move s6, s5
    a5c0:	42 00 00 f4 	bnz s2, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x1d8>
    a5c4:	12 01 00 f6 	b 1096 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x61c>
    a5c8:	3e 70 02 a8 	load_32 s1, 156(sp)
    a5cc:	41 80 2c c1 	cmpgt_i s2, s1, s25
    a5d0:	20 80 fc c0 	move s1, s25
    a5d4:	42 00 00 f4 	bnz s2, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x1ec>
    a5d8:	12 01 00 f6 	b 1096 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x630>
    a5dc:	be 60 02 a8 	load_32 s5, 152(sp)
    a5e0:	41 80 22 c1 	cmpgt_i s2, s1, s5
    a5e4:	e0 80 f2 c0 	move s7, s5
    a5e8:	42 00 00 f4 	bnz s2, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x200>
    a5ec:	12 01 00 f6 	b 1096 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x644>
    a5f0:	3e 80 02 a8 	load_32 s1, 160(sp)
    a5f4:	41 00 4d c1 	cmplt_i s2, s1, s26
    a5f8:	20 00 fd c0 	move s1, s26
    a5fc:	42 00 00 f4 	bnz s2, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x214>
    a600:	12 01 00 f6 	b 1096 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x658>
    a604:	be 50 02 a8 	load_32 s5, 148(sp)
    a608:	41 80 42 c1 	cmplt_i s2, s1, s5
    a60c:	20 81 f2 c0 	move s9, s5
    a610:	42 00 00 f4 	bnz s2, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x228>
    a614:	12 01 00 f6 	b 1096 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x66c>
    a618:	3e 70 02 a8 	load_32 s1, 156(sp)
    a61c:	41 80 4c c1 	cmplt_i s2, s1, s25
    a620:	20 80 fc c0 	move s1, s25
    a624:	42 00 00 f4 	bnz s2, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x23c>
    a628:	12 01 00 f6 	b 1096 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x680>
    a62c:	be 60 02 a8 	load_32 s5, 152(sp)
    a630:	41 80 42 c1 	cmplt_i s2, s1, s5
    a634:	00 81 f2 c0 	move s8, s5
    a638:	42 00 00 f4 	bnz s2, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x250>
    a63c:	12 01 00 f6 	b 1096 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x694>
    a640:	29 00 00 14 	cmplt_i s1, s9, 0
    a644:	81 22 00 f4 	bnz s1, 1104 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x6a4>
    a648:	27 80 3a c1 	cmpge_i s1, s7, s21
    a64c:	41 22 00 f4 	bnz s1, 1096 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x6a4>
    a650:	06 00 30 c1 	cmpge_i s0, s6, s0
    a654:	00 22 00 f4 	bnz s0, 1088 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x6a4>
    a658:	08 00 00 14 	cmplt_i s0, s8, 0
    a65c:	c0 21 00 f4 	bnz s0, 1080 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x6a4>
    a660:	3e 31 01 88 	store_32 s9, 76(sp)
    a664:	38 90 00 05 	add_i s1, s24, 36
    a668:	de 50 01 88 	store_32 s6, 84(sp)
    a66c:	9e 70 01 88 	store_32 s4, 92(sp)
    a670:	9e 82 01 88 	store_32 s20, 96(sp)
    a674:	1e 90 02 a8 	load_32 s0, 164(sp)
    a678:	00 40 00 a8 	load_32 s0, 16(s0)
    a67c:	00 08 00 0b 	shl s0, s0, 2
    a680:	40 c0 ff 05 	add_i s2, s0, -16
    a684:	02 0c 00 07 	mull_i s0, s2, 3
    a688:	38 91 00 a8 	load_32 s9, 36(s24)
    a68c:	b8 70 00 a8 	load_32 s5, 28(s24)
    a690:	d8 80 00 a8 	load_32 s6, 32(s24)
    a694:	89 0c 00 05 	add_i s4, s9, 3
    a698:	a5 00 53 c0 	add_i s5, s5, s6
    a69c:	64 f3 ff 01 	and s27, s4, -4
    a6a0:	9b 00 50 c0 	add_i s4, s27, s0
    a6a4:	a4 80 82 c1 	cmplt_u s5, s4, s5
    a6a8:	45 00 00 f4 	bnz s5, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x2c0>
    a6ac:	01 01 00 f6 	b 1028 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x6c0>
    a6b0:	a1 00 00 aa 	load_sync s5, (s1)
    a6b4:	c5 80 14 c1 	cmpne_i s6, s5, s9
    a6b8:	86 00 00 f4 	bnz s6, 16 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x2d8>
    a6bc:	c0 00 f2 c0 	move s6, s4
    a6c0:	c1 00 00 8a 	store_sync s6, (s1)  
    a6c4:	66 ff ff f3 	bz s6, -20 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x2c0>
    a6c8:	85 80 04 c1 	cmpeq_i s4, s5, s9
    a6cc:	84 04 00 01 	and s4, s4, 1
    a6d0:	c4 fd ff f3 	bz s4, -72 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x298>
    a6d4:	1e 41 01 88 	store_32 s8, 80(sp)
    a6d8:	23 40 00 05 	add_i s1, s3, 16
    a6dc:	fe 60 01 88 	store_32 s7, 88(sp)
    a6e0:	1e 92 01 88 	store_32 s16, 100(sp)
    a6e4:	fe a1 01 88 	store_32 s15, 104(sp)
    a6e8:	de b1 01 88 	store_32 s14, 108(sp)
    a6ec:	00 80 fd c0 	move s0, s27
    a6f0:	5e c0 01 88 	store_32 s2, 112(sp)
    a6f4:	92 20 00 f8 	call 33352 <memcpy>
    a6f8:	1e 90 02 a8 	load_32 s0, 164(sp)
    a6fc:	00 40 00 a8 	load_32 s0, 16(s0)
    a700:	3e 70 01 a8 	load_32 s1, 92(sp)
    a704:	5e c0 01 a8 	load_32 s2, 112(sp)
    a708:	00 08 00 0b 	shl s0, s0, 2
    a70c:	1b 00 50 c0 	add_i s0, s27, s0
    a710:	21 40 00 05 	add_i s1, s1, 16
    a714:	00 c0 ff 05 	add_i s0, s0, -16
    a718:	89 20 00 f8 	call 33316 <memcpy>
    a71c:	1e 90 02 a8 	load_32 s0, 164(sp)
    a720:	00 40 00 a8 	load_32 s0, 16(s0)
    a724:	3e 80 01 a8 	load_32 s1, 96(sp)
    a728:	5e c0 01 a8 	load_32 s2, 112(sp)
    a72c:	00 0c 00 0b 	shl s0, s0, 3
    a730:	1b 00 50 c0 	add_i s0, s27, s0
    a734:	21 40 00 05 	add_i s1, s1, 16
    a738:	00 80 ff 05 	add_i s0, s0, -32
    a73c:	80 20 00 f8 	call 33280 <memcpy>
    a740:	3e 50 01 a8 	load_32 s1, 84(sp)
    a744:	60 00 00 0f 	move s3, 0
    a748:	01 7c 00 09 	ashr s0, s1, 31
    a74c:	00 68 00 0a 	shr s0, s0, 26
    a750:	01 00 50 c0 	add_i s0, s1, s0
    a754:	00 18 00 09 	ashr s0, s0, 6
    a758:	20 00 00 12 	cmpgt_i s1, s0, 0
    a75c:	41 00 00 f4 	bnz s1, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x374>
    a760:	00 80 f1 c0 	move s0, s3
    a764:	5e 30 01 a8 	load_32 s2, 76(sp)
    a768:	22 7c 00 09 	ashr s1, s2, 31
    a76c:	21 68 00 0a 	shr s1, s1, 26
    a770:	22 80 50 c0 	add_i s1, s2, s1
    a774:	58 50 00 a8 	load_32 s2, 20(s24)
    a778:	be 60 01 a8 	load_32 s5, 88(sp)
    a77c:	de 40 01 a8 	load_32 s6, 80(sp)
    a780:	21 18 00 09 	ashr s1, s1, 6
    a784:	42 fc ff 05 	add_i s2, s2, -1
    a788:	81 00 41 c1 	cmplt_i s4, s1, s2
    a78c:	44 00 00 f4 	bnz s4, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x3a4>
    a790:	20 00 f1 c0 	move s1, s2
    a794:	45 7c 00 09 	ashr s2, s5, 31
    a798:	be b2 01 a8 	load_32 s21, 108(sp)
    a79c:	de a2 01 a8 	load_32 s22, 104(sp)
    a7a0:	fe 92 01 a8 	load_32 s23, 100(sp)
    a7a4:	42 68 00 0a 	shr s2, s2, 26
    a7a8:	45 00 51 c0 	add_i s2, s5, s2
    a7ac:	42 18 00 09 	ashr s2, s2, 6
    a7b0:	82 00 00 12 	cmpgt_i s4, s2, 0
    a7b4:	44 00 00 f4 	bnz s4, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x3cc>
    a7b8:	40 80 f1 c0 	move s2, s3
    a7bc:	66 7c 00 09 	ashr s3, s6, 31
    a7c0:	98 60 00 a8 	load_32 s4, 24(s24)
    a7c4:	63 68 00 0a 	shr s3, s3, 26
    a7c8:	66 80 51 c0 	add_i s3, s6, s3
    a7cc:	84 fc ff 05 	add_i s4, s4, -1
    a7d0:	63 18 00 09 	ashr s3, s3, 6
    a7d4:	a3 00 42 c1 	cmplt_i s5, s3, s4
    a7d8:	45 00 00 f4 	bnz s5, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x3f0>
    a7dc:	60 00 f2 c0 	move s3, s4
    a7e0:	82 80 21 c1 	cmpgt_i s4, s2, s3
    a7e4:	84 15 00 f4 	bnz s4, 688 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x6a4>
    a7e8:	80 80 20 c1 	cmpgt_i s4, s0, s1
    a7ec:	a0 04 00 0f 	move s5, 1
    a7f0:	c0 00 00 0f 	move s6, 0
    a7f4:	e0 00 f0 c0 	move s7, s0
    a7f8:	84 0f 00 f4 	bnz s4, 496 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x5f8>
    a7fc:	18 21 00 a8 	load_32 s8, 8(s24)
    a800:	38 51 00 a8 	load_32 s9, 20(s24)
    a804:	29 01 71 c0 	mull_i s9, s9, s2
    a808:	29 81 53 c0 	add_i s9, s9, s7
    a80c:	29 51 00 07 	mull_i s9, s9, 20
    a810:	08 81 54 c0 	add_i s8, s8, s9
    a814:	28 21 00 05 	add_i s9, s8, 8
    a818:	48 11 00 05 	add_i s10, s8, 4
    a81c:	68 41 00 05 	add_i s11, s8, 16
    a820:	88 31 00 05 	add_i s12, s8, 12
    a824:	03 00 00 f6 	b 12 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x440>
    a828:	cb 00 00 88 	store_32 s6, (s11)
    a82c:	00 00 00 e8 	membar
    a830:	a9 01 00 a8 	load_32 s13, (s9)
    a834:	ca 01 00 a8 	load_32 s14, (s10)
    a838:	ed 01 01 10 	cmpeq_i s15, s13, 64
    a83c:	cf 01 00 f4 	bnz s15, 56 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x484>
    a840:	4e 00 00 f4 	bnz s14, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x458>
    a844:	0c 00 00 f6 	b 48 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x484>
    a848:	ed 05 00 05 	add_i s15, s13, 1
    a84c:	09 02 00 aa 	load_sync s16, (s9)
    a850:	30 82 16 c1 	cmpne_i s17, s16, s13
    a854:	91 00 00 f4 	bnz s17, 16 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x474>
    a858:	20 82 f7 c0 	move s17, s15
    a85c:	29 02 00 8a 	store_sync s17, (s9)  
    a860:	71 ff ff f3 	bz s17, -20 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x45c>
    a864:	f0 81 06 c1 	cmpeq_i s15, s16, s13
    a868:	ef 05 00 01 	and s15, s15, 1
    a86c:	2f fe ff f3 	bz s15, -60 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x440>
    a870:	33 00 00 f6 	b 204 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x54c>
    a874:	ab 01 00 a8 	load_32 s13, (s11)
    a878:	ed ff ff f5 	bnz s13, -4 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x484>
    a87c:	ab 01 00 aa 	load_sync s13, (s11)
    a880:	cd 01 13 c1 	cmpne_i s14, s13, s6
    a884:	8e 00 00 f4 	bnz s14, 16 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x4a4>
    a888:	c0 81 f2 c0 	move s14, s5
    a88c:	cb 01 00 8a 	store_sync s14, (s11)  
    a890:	6e ff ff f3 	bz s14, -20 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x48c>
    a894:	ad 01 00 10 	cmpeq_i s13, s13, 0
    a898:	ad 05 00 01 	and s13, s13, 1
    a89c:	cd fe ff f3 	bz s13, -40 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x484>
    a8a0:	a9 01 00 a8 	load_32 s13, (s9)
    a8a4:	ad 01 01 10 	cmpeq_i s13, s13, 64
    a8a8:	6d 00 00 f4 	bnz s13, 12 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x4c4>
    a8ac:	aa 01 00 a8 	load_32 s13, (s10)
    a8b0:	cd fb ff f5 	bnz s13, -136 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x438>
    a8b4:	ca 01 00 a8 	load_32 s14, (s10)
    a8b8:	ec 01 00 a8 	load_32 s15, (s12)
    a8bc:	0f 22 00 a8 	load_32 s16, 8(s15)
    a8c0:	4f 02 00 a8 	load_32 s18, (s15)
    a8c4:	6f 12 00 a8 	load_32 s19, 4(s15)
    a8c8:	b0 0d 00 05 	add_i s13, s16, 3
    a8cc:	52 82 59 c0 	add_i s18, s18, s19
    a8d0:	ad f1 ff 01 	and s13, s13, -4
    a8d4:	2d 22 4c 05 	add_i s17, s13, 4872
    a8d8:	51 02 89 c1 	cmplt_u s18, s17, s18
    a8dc:	52 00 00 f4 	bnz s18, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x4f4>
    a8e0:	74 00 00 f6 	b 464 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x6c0>
    a8e4:	4f 22 00 05 	add_i s18, s15, 8
    a8e8:	72 02 00 aa 	load_sync s19, (s18)
    a8ec:	93 02 18 c1 	cmpne_i s20, s19, s16
    a8f0:	94 00 00 f4 	bnz s20, 16 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x510>
    a8f4:	80 82 f8 c0 	move s20, s17
    a8f8:	92 02 00 8a 	store_sync s20, (s18)  
    a8fc:	74 ff ff f3 	bz s20, -20 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x4f8>
    a900:	13 02 08 c1 	cmpeq_i s16, s19, s16
    a904:	10 06 00 01 	and s16, s16, 1
    a908:	b0 fd ff f3 	bz s16, -76 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x4cc>
    a90c:	cd 00 00 88 	store_32 s6, (s13)
    a910:	cd 10 00 88 	store_32 s6, 4(s13)
    a914:	ae 00 00 f2 	bz s14, 20 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x538>
    a918:	ca 01 00 a8 	load_32 s14, (s10)
    a91c:	cd 11 00 88 	store_32 s14, 4(s13)
    a920:	ca 01 00 a8 	load_32 s14, (s10)
    a924:	02 00 00 f6 	b 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x53c>
    a928:	c0 01 f4 c0 	move s14, s8
    a92c:	ae 01 00 88 	store_32 s13, (s14)
    a930:	aa 01 00 88 	store_32 s13, (s10)
    a934:	c9 00 00 88 	store_32 s6, (s9)
    a938:	bc ff ff f7 	b -272 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x438>
    a93c:	0d 31 01 07 	mull_i s8, s13, 76
    a940:	3e e1 01 a8 	load_32 s9, 120(sp)
    a944:	0e 01 54 c0 	add_i s8, s14, s8
    a948:	47 81 40 c1 	cmplt_i s10, s7, s1
    a94c:	e7 04 00 05 	add_i s7, s7, 1
    a950:	28 21 00 88 	store_32 s9, 8(s8)
    a954:	3e 91 02 a8 	load_32 s9, 164(sp)
    a958:	28 31 00 88 	store_32 s9, 12(s8)
    a95c:	3e 41 02 a8 	load_32 s9, 144(sp)
    a960:	28 41 00 88 	store_32 s9, 16(s8)
    a964:	3e f1 01 a8 	load_32 s9, 124(sp)
    a968:	28 51 00 88 	store_32 s9, 20(s8)
    a96c:	a8 62 00 88 	store_32 s21, 24(s8)
    a970:	3e 31 02 a8 	load_32 s9, 140(sp)
    a974:	28 71 00 88 	store_32 s9, 28(s8)
    a978:	3e 01 02 a8 	load_32 s9, 128(sp)
    a97c:	28 81 00 88 	store_32 s9, 32(s8)
    a980:	c8 92 00 88 	store_32 s22, 36(s8)
    a984:	3e 21 02 a8 	load_32 s9, 136(sp)
    a988:	28 a1 00 88 	store_32 s9, 40(s8)
    a98c:	3e 11 02 a8 	load_32 s9, 132(sp)
    a990:	28 b1 00 88 	store_32 s9, 44(s8)
    a994:	e8 c2 00 88 	store_32 s23, 48(s8)
    a998:	48 d3 00 88 	store_32 s26, 52(s8)
    a99c:	28 e3 00 88 	store_32 s25, 56(s8)
    a9a0:	3e 81 02 a8 	load_32 s9, 160(sp)
    a9a4:	28 f1 00 88 	store_32 s9, 60(s8)
    a9a8:	3e 71 02 a8 	load_32 s9, 156(sp)
    a9ac:	28 01 01 88 	store_32 s9, 64(s8)
    a9b0:	3e 51 02 a8 	load_32 s9, 148(sp)
    a9b4:	28 11 01 88 	store_32 s9, 68(s8)
    a9b8:	3e 61 02 a8 	load_32 s9, 152(sp)
    a9bc:	28 21 01 88 	store_32 s9, 72(s8)
    a9c0:	68 33 01 88 	store_32 s27, 76(s8)
    a9c4:	3e d1 01 a8 	load_32 s9, 116(sp)
    a9c8:	28 41 01 82 	store_8 s9, 80(s8)
    a9cc:	3e ad 02 a0 	load_u8 s9, 171(sp)
    a9d0:	28 4d 01 82 	store_8 s9, 83(s8)
    a9d4:	3e a9 02 a0 	load_u8 s9, 170(sp)
    a9d8:	28 49 01 82 	store_8 s9, 82(s8)
    a9dc:	3e a5 02 a0 	load_u8 s9, 169(sp)
    a9e0:	28 45 01 82 	store_8 s9, 81(s8)
    a9e4:	ca f0 ff f5 	bnz s10, -488 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x40c>
    a9e8:	e2 80 41 c1 	cmplt_i s7, s2, s3
    a9ec:	42 04 00 05 	add_i s2, s2, 1
    a9f0:	27 f0 ff f5 	bnz s7, -508 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x404>
    a9f4:	28 00 00 f6 	b 160 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x6a4>
    a9f8:	3e 80 02 a8 	load_32 s1, 160(sp)
    a9fc:	be 50 02 a8 	load_32 s5, 148(sp)
    aa00:	41 80 22 c1 	cmpgt_i s2, s1, s5
    aa04:	c0 80 f2 c0 	move s6, s5
    aa08:	02 de ff f5 	bnz s2, -1088 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x1d8>
    aa0c:	c0 80 f0 c0 	move s6, s1
    aa10:	3e 70 02 a8 	load_32 s1, 156(sp)
    aa14:	41 80 2c c1 	cmpgt_i s2, s1, s25
    aa18:	20 80 fc c0 	move s1, s25
    aa1c:	02 de ff f5 	bnz s2, -1088 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x1ec>
    aa20:	3e 70 02 a8 	load_32 s1, 156(sp)
    aa24:	be 60 02 a8 	load_32 s5, 152(sp)
    aa28:	41 80 22 c1 	cmpgt_i s2, s1, s5
    aa2c:	e0 80 f2 c0 	move s7, s5
    aa30:	02 de ff f5 	bnz s2, -1088 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x200>
    aa34:	e0 80 f0 c0 	move s7, s1
    aa38:	3e 80 02 a8 	load_32 s1, 160(sp)
    aa3c:	41 00 4d c1 	cmplt_i s2, s1, s26
    aa40:	20 00 fd c0 	move s1, s26
    aa44:	02 de ff f5 	bnz s2, -1088 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x214>
    aa48:	3e 80 02 a8 	load_32 s1, 160(sp)
    aa4c:	be 50 02 a8 	load_32 s5, 148(sp)
    aa50:	41 80 42 c1 	cmplt_i s2, s1, s5
    aa54:	20 81 f2 c0 	move s9, s5
    aa58:	02 de ff f5 	bnz s2, -1088 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x228>
    aa5c:	20 81 f0 c0 	move s9, s1
    aa60:	3e 70 02 a8 	load_32 s1, 156(sp)
    aa64:	41 80 4c c1 	cmplt_i s2, s1, s25
    aa68:	20 80 fc c0 	move s1, s25
    aa6c:	02 de ff f5 	bnz s2, -1088 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x23c>
    aa70:	3e 70 02 a8 	load_32 s1, 156(sp)
    aa74:	be 60 02 a8 	load_32 s5, 152(sp)
    aa78:	41 80 42 c1 	cmplt_i s2, s1, s5
    aa7c:	00 81 f2 c0 	move s8, s5
    aa80:	02 de ff f5 	bnz s2, -1088 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x250>
    aa84:	00 81 f0 c0 	move s8, s1
    aa88:	29 00 00 14 	cmplt_i s1, s9, 0
    aa8c:	41 00 00 f4 	bnz s1, 8 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x6a4>
    aa90:	ee fe ff f7 	b -1096 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_+0x258>
    aa94:	fe b3 02 a8 	load_32 ra, 172(sp)
    aa98:	7e c3 02 a8 	load_32 s27, 176(sp)
    aa9c:	5e d3 02 a8 	load_32 s26, 180(sp)
    aaa0:	3e e3 02 a8 	load_32 s25, 184(sp)
    aaa4:	1e f3 02 a8 	load_32 s24, 188(sp)
    aaa8:	de 03 03 05 	add_i sp, sp, 192
    aaac:	1f 00 00 f0 	ret
    aab0:	02 00 00 4f 	movehi s0, 2
    aab4:	20 00 01 0f 	move s1, 64
    aab8:	3e 20 00 88 	store_32 s1, 8(sp)
    aabc:	22 00 00 4f 	movehi s1, 2
    aac0:	00 54 07 00 	or s0, s0, 469
    aac4:	1e 30 00 88 	store_32 s0, 12(sp)
    aac8:	02 00 00 4f 	movehi s0, 2
    aacc:	21 20 0e 00 	or s1, s1, 904
    aad0:	3e 10 00 88 	store_32 s1, 4(sp)
    aad4:	00 b8 0d 00 	or s0, s0, 878
    aad8:	1e 00 00 88 	store_32 s0, (sp)
    aadc:	cc 1f 00 f8 	call 32560 <printf>
    aae0:	00 00 e0 c3 	break

000000000000aae4 _ZN9librender13RenderContext7clipTwoEiRKNS_11RenderStateEPKfS5_S5_:
    aae4:	de 03 fd 05 	add_i sp, sp, -192
    aae8:	fe f3 02 88 	store_32 ra, 188(sp)
    aaec:	c0 00 00 4f 	movehi s6, 0
    aaf0:	e2 40 00 a8 	load_32 s7, 16(s2)
    aaf4:	40 01 00 4f 	movehi s10, 0
    aaf8:	05 31 00 a8 	load_32 s8, 12(s5)
    aafc:	c6 40 05 00 	or s6, s6, 336
    ab00:	87 01 00 12 	cmpgt_i s12, s7, 0
    ab04:	26 01 00 a8 	load_32 s9, (s6)
    ab08:	ca c0 05 00 	or s6, s10, 368
    ab0c:	44 31 00 a8 	load_32 s10, 12(s4)
    ab10:	66 01 00 a8 	load_32 s11, (s6)
    ab14:	4c 00 00 f4 	bnz s12, 8 <_ZN9librender13RenderContext7clipTwoEiRKNS_11RenderStateEPKfS5_S5_+0x38>
    ab18:	3b 00 00 f6 	b 236 <_ZN9librender13RenderContext7clipTwoEiRKNS_11RenderStateEPKfS5_S5_+0x120>
    ab1c:	88 01 15 c2 	sub_f s12, s8, s10
    ab20:	28 81 04 c2 	add_f s9, s8, s9
    ab24:	40 01 c6 c1 	reciprocal s10, s12
    ab28:	aa 01 26 c2 	mul_f s13, s10, s12
    ab2c:	ab 81 16 c2 	sub_f s13, s11, s13
    ab30:	aa 81 26 c2 	mul_f s13, s10, s13
    ab34:	40 01 00 4f 	movehi s10, 0
    ab38:	4a 11 05 00 	or s10, s10, 324
    ab3c:	ca 01 00 a8 	load_32 s14, (s10)
    ab40:	8d 01 26 c2 	mul_f s12, s13, s12
    ab44:	6b 01 16 c2 	sub_f s11, s11, s12
    ab48:	6d 81 25 c2 	mul_f s11, s13, s11
    ab4c:	a0 01 00 0f 	move s13, 0
    ab50:	69 81 25 c2 	mul_f s11, s9, s11
    ab54:	8e 81 15 c2 	sub_f s12, s14, s11
    ab58:	de f1 01 05 	add_i s14, sp, 124
    ab5c:	ed 09 00 0b 	shl s15, s13, 2
    ab60:	05 82 57 c0 	add_i s16, s5, s15
    ab64:	24 82 57 c0 	add_i s17, s4, s15
    ab68:	ad 05 00 05 	add_i s13, s13, 1
    ab6c:	10 02 00 a8 	load_32 s16, (s16)
    ab70:	ee 81 57 c0 	add_i s15, s14, s15
    ab74:	31 02 00 a8 	load_32 s17, (s17)
    ab78:	10 02 26 c2 	mul_f s16, s16, s12
    ab7c:	31 82 25 c2 	mul_f s17, s17, s11
    ab80:	11 02 08 c2 	add_f s16, s17, s16
    ab84:	2d 82 43 c1 	cmplt_i s17, s13, s7
    ab88:	0f 02 00 88 	store_32 s16, (s15)
    ab8c:	91 fe ff f5 	bnz s17, -48 <_ZN9librender13RenderContext7clipTwoEiRKNS_11RenderStateEPKfS5_S5_+0x78>
    ab90:	83 30 00 a8 	load_32 s4, 12(s3)
    ab94:	c6 00 00 a8 	load_32 s6, (s6)
    ab98:	4a 01 00 a8 	load_32 s10, (s10)
    ab9c:	88 00 12 c2 	sub_f s4, s8, s4
    aba0:	00 01 c2 c1 	reciprocal s8, s4
    aba4:	68 01 22 c2 	mul_f s11, s8, s4
    aba8:	66 81 15 c2 	sub_f s11, s6, s11
    abac:	08 81 25 c2 	mul_f s8, s8, s11
    abb0:	88 00 22 c2 	mul_f s4, s8, s4
    abb4:	86 00 12 c2 	sub_f s4, s6, s4
    abb8:	de f0 00 05 	add_i s6, sp, 60
    abbc:	88 00 22 c2 	mul_f s4, s8, s4
    abc0:	89 00 22 c2 	mul_f s4, s9, s4
    abc4:	20 01 00 0f 	move s9, 0
    abc8:	0a 01 12 c2 	sub_f s8, s10, s4
    abcc:	49 09 00 0b 	shl s10, s9, 2
    abd0:	65 01 55 c0 	add_i s11, s5, s10
    abd4:	83 01 55 c0 	add_i s12, s3, s10
    abd8:	29 05 00 05 	add_i s9, s9, 1
    abdc:	6b 01 00 a8 	load_32 s11, (s11)
    abe0:	46 01 55 c0 	add_i s10, s6, s10
    abe4:	8c 01 00 a8 	load_32 s12, (s12)
    abe8:	6b 01 24 c2 	mul_f s11, s11, s8
    abec:	8c 01 22 c2 	mul_f s12, s12, s4
    abf0:	6c 81 05 c2 	add_f s11, s12, s11
    abf4:	89 81 43 c1 	cmplt_i s12, s9, s7
    abf8:	6a 01 00 88 	store_32 s11, (s10)
    abfc:	8c fe ff f5 	bnz s12, -48 <_ZN9librender13RenderContext7clipTwoEiRKNS_11RenderStateEPKfS5_S5_+0xe8>
    ac00:	02 00 00 f6 	b 8 <_ZN9librender13RenderContext7clipTwoEiRKNS_11RenderStateEPKfS5_S5_+0x124>
    ac04:	de f0 00 05 	add_i s6, sp, 60
    ac08:	9e f0 01 05 	add_i s4, sp, 124
    ac0c:	60 00 f3 c0 	move s3, s6
    ac10:	f8 fd ff f9 	call -2080 <_ZN9librender13RenderContext15enqueueTriangleEiRKNS_11RenderStateEPKfS5_S5_>
    ac14:	fe f3 02 a8 	load_32 ra, 188(sp)
    ac18:	de 03 03 05 	add_i sp, sp, 192
    ac1c:	1f 00 00 f0 	ret

000000000000ac20 _ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv:
    ac20:	de 03 fd 05 	add_i sp, sp, -192
    ac24:	1e f3 02 88 	store_32 s24, 188(sp)
    ac28:	3e e3 02 88 	store_32 s25, 184(sp)
    ac2c:	5e d3 02 88 	store_32 s26, 180(sp)
    ac30:	7e c3 02 88 	store_32 s27, 176(sp)
    ac34:	fe b3 02 88 	store_32 ra, 172(sp)
    ac38:	1e 60 01 88 	store_32 s0, 88(sp)
    ac3c:	00 00 00 a8 	load_32 s0, (s0)
    ac40:	80 10 00 f2 	bz s0, 528 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x230>
    ac44:	5e 60 01 a8 	load_32 s2, 88(sp)
    ac48:	62 10 00 a8 	load_32 s3, 4(s2)
    ac4c:	42 20 00 a8 	load_32 s2, 8(s2)
    ac50:	5e 10 01 88 	store_32 s2, 68(sp)
    ac54:	23 00 10 c1 	cmpne_i s1, s3, s0
    ac58:	81 00 00 f4 	bnz s1, 16 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x48>
    ac5c:	3e 10 01 a8 	load_32 s1, 68(sp)
    ac60:	21 04 00 10 	cmpeq_i s1, s1, 1
    ac64:	61 0f 00 f4 	bnz s1, 492 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x230>
    ac68:	20 04 00 0f 	move s1, 1
    ac6c:	80 00 00 0f 	move s4, 0
    ac70:	40 fc 00 0f 	move s2, 63
    ac74:	5e 40 01 88 	store_32 s2, 80(sp)
    ac78:	9e d0 00 88 	store_32 s4, 52(sp)
    ac7c:	80 00 01 0f 	move s4, 64
    ac80:	9e e0 00 88 	store_32 s4, 56(sp)
    ac84:	c0 00 f0 c0 	move s6, s0
    ac88:	3e 00 01 88 	store_32 s1, 64(sp)
    ac8c:	80 80 f0 c0 	move s4, s1
    ac90:	be 80 01 05 	add_i s5, sp, 96
    ac94:	7e f0 00 88 	store_32 s3, 60(sp)
    ac98:	20 33 01 0f 	move s25, 76
    ac9c:	be 50 01 88 	store_32 s5, 84(sp)
    aca0:	0d 00 00 f6 	b 52 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0xb4>
    aca4:	7e f0 00 a8 	load_32 s3, 60(sp)
    aca8:	de 30 01 a8 	load_32 s6, 76(sp)
    acac:	23 00 13 c1 	cmpne_i s1, s3, s6
    acb0:	21 01 00 f4 	bnz s1, 36 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0xb4>
    acb4:	64 00 00 f6 	b 400 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x224>
    acb8:	c0 00 f2 c0 	move s6, s4
    acbc:	9e e0 00 a8 	load_32 s4, 56(sp)
    acc0:	e1 0b 00 f4 	bnz s1, 380 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x21c>
    acc4:	9e d0 00 a8 	load_32 s4, 52(sp)
    acc8:	23 00 13 c1 	cmpne_i s1, s3, s6
    accc:	41 00 00 f4 	bnz s1, 8 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0xb4>
    acd0:	5d 00 00 f6 	b 372 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x224>
    acd4:	04 01 00 f4 	bnz s4, 32 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0xd4>
    acd8:	20 00 03 c1 	cmpeq_i s1, s0, s6
    acdc:	41 00 00 f4 	bnz s1, 8 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0xc4>
    ace0:	05 00 00 f6 	b 20 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0xd4>
    ace4:	9e 00 01 a8 	load_32 s4, 64(sp)
    ace8:	23 00 13 c1 	cmpne_i s1, s3, s6
    acec:	41 ff ff f5 	bnz s1, -24 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0xb4>
    acf0:	55 00 00 f6 	b 340 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x224>
    acf4:	de 30 01 88 	store_32 s6, 76(sp)
    acf8:	00 03 f3 c0 	move s24, s6
    acfc:	9e 20 01 88 	store_32 s4, 72(sp)
    ad00:	20 00 f2 c0 	move s1, s4
    ad04:	14 00 00 f6 	b 80 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x134>
    ad08:	00 03 fd c0 	move s24, s26
    ad0c:	18 10 00 a8 	load_32 s0, 4(s24)
    ad10:	20 f0 4a 05 	add_i s1, s0, 4796
    ad14:	00 80 fd c0 	move s0, s27
    ad18:	40 80 fc c0 	move s2, s25
    ad1c:	08 1f 00 f8 	call 31776 <memcpy>
    ad20:	18 10 00 a8 	load_32 s0, 4(s24)
    ad24:	5e 53 01 a8 	load_32 s26, 84(sp)
    ad28:	00 f0 4a 05 	add_i s0, s0, 4796
    ad2c:	20 00 fd c0 	move s1, s26
    ad30:	40 80 fc c0 	move s2, s25
    ad34:	02 1f 00 f8 	call 31752 <memcpy>
    ad38:	18 13 00 a8 	load_32 s24, 4(s24)
    ad3c:	3e 40 01 a8 	load_32 s1, 80(sp)
    ad40:	a0 00 fd c0 	move s5, s26
    ad44:	1e 60 01 a8 	load_32 s0, 88(sp)
    ad48:	00 00 00 a8 	load_32 s0, (s0)
    ad4c:	41 00 00 f4 	bnz s1, 8 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x134>
    ad50:	2c 00 00 f6 	b 176 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x1e0>
    ad54:	e1 fc ff 05 	add_i s7, s1, -1
    ad58:	81 00 00 12 	cmpgt_i s4, s1, 0
    ad5c:	60 80 f3 c0 	move s3, s7
    ad60:	c0 00 fc c0 	move s6, s24
    ad64:	64 00 00 f4 	bnz s4, 12 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x150>
    ad68:	d8 10 00 a8 	load_32 s6, 4(s24)
    ad6c:	7e 40 01 a8 	load_32 s3, 80(sp)
    ad70:	63 30 01 07 	mull_i s3, s3, 76
    ad74:	81 30 01 07 	mull_i s4, s1, 76
    ad78:	66 80 51 c0 	add_i s3, s6, s3
    ad7c:	d8 00 52 c0 	add_i s6, s24, s4
    ad80:	63 20 00 a8 	load_32 s3, 8(s3)
    ad84:	86 20 00 a8 	load_32 s4, 8(s6)
    ad88:	63 00 52 c1 	cmple_i s3, s3, s4
    ad8c:	e3 03 00 f4 	bnz s3, 124 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x1e8>
    ad90:	66 23 00 05 	add_i s27, s6, 8
    ad94:	fe 70 01 88 	store_32 s7, 92(sp)
    ad98:	40 03 fc c0 	move s26, s24
    ad9c:	01 07 00 14 	cmplt_i s24, s1, 1
    ada0:	00 80 f2 c0 	move s0, s5
    ada4:	20 80 fd c0 	move s1, s27
    ada8:	40 80 fc c0 	move s2, s25
    adac:	e4 1e 00 f8 	call 31632 <memcpy>
    adb0:	d8 fa ff f5 	bnz s24, -168 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0xe8>
    adb4:	1e 70 01 a8 	load_32 s0, 92(sp)
    adb8:	00 30 01 07 	mull_i s0, s0, 76
    adbc:	1a 00 50 c0 	add_i s0, s26, s0
    adc0:	00 23 00 05 	add_i s24, s0, 8
    adc4:	00 80 fd c0 	move s0, s27
    adc8:	20 00 fc c0 	move s1, s24
    adcc:	40 80 fc c0 	move s2, s25
    add0:	db 1e 00 f8 	call 31596 <memcpy>
    add4:	00 00 fc c0 	move s0, s24
    add8:	00 03 fd c0 	move s24, s26
    addc:	5e 53 01 a8 	load_32 s26, 84(sp)
    ade0:	20 00 fd c0 	move s1, s26
    ade4:	40 80 fc c0 	move s2, s25
    ade8:	d5 1e 00 f8 	call 31572 <memcpy>
    adec:	3e 70 01 a8 	load_32 s1, 92(sp)
    adf0:	a0 00 fd c0 	move s5, s26
    adf4:	1e 60 01 a8 	load_32 s0, 88(sp)
    adf8:	00 00 00 a8 	load_32 s0, (s0)
    adfc:	c1 fa ff f5 	bnz s1, -168 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x134>
    ae00:	60 00 1c c1 	cmpne_i s3, s0, s24
    ae04:	83 fa ff f5 	bnz s3, -176 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x134>
    ae08:	9e 20 01 a8 	load_32 s4, 72(sp)
    ae0c:	84 04 00 05 	add_i s4, s4, 1
    ae10:	24 00 01 11 	cmpne_i s1, s4, 64
    ae14:	81 f4 ff f5 	bnz s1, -368 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x84>
    ae18:	de 30 01 a8 	load_32 s6, 76(sp)
    ae1c:	86 00 00 a8 	load_32 s4, (s6)
    ae20:	7e f0 00 a8 	load_32 s3, 60(sp)
    ae24:	24 00 00 10 	cmpeq_i s1, s4, 0
    ae28:	41 00 00 f4 	bnz s1, 8 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x210>
    ae2c:	a3 ff ff f7 	b -372 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x98>
    ae30:	9e e0 00 a8 	load_32 s4, 56(sp)
    ae34:	41 00 00 f4 	bnz s1, 8 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0x21c>
    ae38:	a3 ff ff f7 	b -372 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0xa4>
    ae3c:	23 00 13 c1 	cmpne_i s1, s3, s6
    ae40:	a1 f4 ff f5 	bnz s1, -364 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0xb4>
    ae44:	3e 10 01 a8 	load_32 s1, 68(sp)
    ae48:	24 80 10 c1 	cmpne_i s1, s4, s1
    ae4c:	41 f4 ff f5 	bnz s1, -376 <_ZN9librender12CommandQueueINS_13RenderContext8TriangleELi64EE4sortEv+0xb4>
    ae50:	fe b3 02 a8 	load_32 ra, 172(sp)
    ae54:	7e c3 02 a8 	load_32 s27, 176(sp)
    ae58:	5e d3 02 a8 	load_32 s26, 180(sp)
    ae5c:	3e e3 02 a8 	load_32 s25, 184(sp)
    ae60:	1e f3 02 a8 	load_32 s24, 188(sp)
    ae64:	de 03 03 05 	add_i sp, sp, 192
    ae68:	1f 00 00 f0 	ret

000000000000ae6c _ZN9librender12CommandQueueINS_11RenderStateELi32EE14allocateBucketEv:
    ae6c:	de 03 fe 05 	add_i sp, sp, -128
    ae70:	1e f3 01 88 	store_32 s24, 124(sp)
    ae74:	3e e3 01 88 	store_32 s25, 120(sp)
    ae78:	5e d3 01 88 	store_32 s26, 116(sp)
    ae7c:	7e c3 01 88 	store_32 s27, 112(sp)
    ae80:	fe b3 01 88 	store_32 ra, 108(sp)
    ae84:	00 03 f0 c0 	move s24, s0
    ae88:	20 04 00 0f 	move s1, 1
    ae8c:	40 03 00 0f 	move s26, 0
    ae90:	18 40 00 05 	add_i s0, s24, 16
    ae94:	58 40 00 a8 	load_32 s2, 16(s24)
    ae98:	e2 ff ff f5 	bnz s2, -4 <_ZN9librender12CommandQueueINS_11RenderStateELi32EE14allocateBucketEv+0x28>
    ae9c:	40 00 00 aa 	load_sync s2, (s0)
    aea0:	62 00 1d c1 	cmpne_i s3, s2, s26
    aea4:	83 00 00 f4 	bnz s3, 16 <_ZN9librender12CommandQueueINS_11RenderStateELi32EE14allocateBucketEv+0x48>
    aea8:	60 80 f0 c0 	move s3, s1
    aeac:	60 00 00 8a 	store_sync s3, (s0)  
    aeb0:	63 ff ff f3 	bz s3, -20 <_ZN9librender12CommandQueueINS_11RenderStateELi32EE14allocateBucketEv+0x30>
    aeb4:	42 00 00 10 	cmpeq_i s2, s2, 0
    aeb8:	42 04 00 01 	and s2, s2, 1
    aebc:	c2 fe ff f3 	bz s2, -40 <_ZN9librender12CommandQueueINS_11RenderStateELi32EE14allocateBucketEv+0x28>
    aec0:	18 20 00 a8 	load_32 s0, 8(s24)
    aec4:	00 80 00 10 	cmpeq_i s0, s0, 32
    aec8:	60 00 00 f4 	bnz s0, 12 <_ZN9librender12CommandQueueINS_11RenderStateELi32EE14allocateBucketEv+0x68>
    aecc:	18 10 00 a8 	load_32 s0, 4(s24)
    aed0:	40 04 00 f4 	bnz s0, 136 <_ZN9librender12CommandQueueINS_11RenderStateELi32EE14allocateBucketEv+0xec>
    aed4:	78 13 00 a8 	load_32 s27, 4(s24)
    aed8:	18 30 00 a8 	load_32 s0, 12(s24)
    aedc:	20 20 00 05 	add_i s1, s0, 8
    aee0:	40 20 00 a8 	load_32 s2, 8(s0)
    aee4:	80 00 00 a8 	load_32 s4, (s0)
    aee8:	a0 10 00 a8 	load_32 s5, 4(s0)
    aeec:	62 0c 00 05 	add_i s3, s2, 3
    aef0:	84 80 52 c0 	add_i s4, s4, s5
    aef4:	23 f3 ff 01 	and s25, s3, -4
    aef8:	79 20 18 05 	add_i s3, s25, 1544
    aefc:	83 00 82 c1 	cmplt_u s4, s3, s4
    af00:	44 00 00 f4 	bnz s4, 8 <_ZN9librender12CommandQueueINS_11RenderStateELi32EE14allocateBucketEv+0x9c>
    af04:	1e 00 00 f6 	b 120 <_ZN9librender12CommandQueueINS_11RenderStateELi32EE14allocateBucketEv+0x110>
    af08:	81 00 00 aa 	load_sync s4, (s1)
    af0c:	a4 00 11 c1 	cmpne_i s5, s4, s2
    af10:	85 00 00 f4 	bnz s5, 16 <_ZN9librender12CommandQueueINS_11RenderStateELi32EE14allocateBucketEv+0xb4>
    af14:	a0 80 f1 c0 	move s5, s3
    af18:	a1 00 00 8a 	store_sync s5, (s1)  
    af1c:	65 ff ff f3 	bz s5, -20 <_ZN9librender12CommandQueueINS_11RenderStateELi32EE14allocateBucketEv+0x9c>
    af20:	44 00 01 c1 	cmpeq_i s2, s4, s2
    af24:	42 04 00 01 	and s2, s2, 1
    af28:	c2 fd ff f3 	bz s2, -72 <_ZN9librender12CommandQueueINS_11RenderStateELi32EE14allocateBucketEv+0x74>
    af2c:	00 80 fc c0 	move s0, s25
    af30:	20 00 00 f8 	call 128 <_ZN9librender12CommandQueueINS_11RenderStateELi32EE6BucketC2Ev>
    af34:	bb 00 00 f2 	bz s27, 20 <_ZN9librender12CommandQueueINS_11RenderStateELi32EE14allocateBucketEv+0xdc>
    af38:	18 10 00 a8 	load_32 s0, 4(s24)
    af3c:	19 10 00 88 	store_32 s0, 4(s25)
    af40:	18 10 00 a8 	load_32 s0, 4(s24)
    af44:	02 00 00 f6 	b 8 <_ZN9librender12CommandQueueINS_11RenderStateELi32EE14allocateBucketEv+0xe0>
    af48:	00 00 fc c0 	move s0, s24
    af4c:	20 03 00 88 	store_32 s25, (s0)
    af50:	38 13 00 88 	store_32 s25, 4(s24)
    af54:	58 23 00 88 	store_32 s26, 8(s24)
    af58:	58 43 00 88 	store_32 s26, 16(s24)
    af5c:	00 00 00 e8 	membar
    af60:	fe b3 01 a8 	load_32 ra, 108(sp)
    af64:	7e c3 01 a8 	load_32 s27, 112(sp)
    af68:	5e d3 01 a8 	load_32 s26, 116(sp)
    af6c:	3e e3 01 a8 	load_32 s25, 120(sp)
    af70:	1e f3 01 a8 	load_32 s24, 124(sp)
    af74:	de 03 02 05 	add_i sp, sp, 128
    af78:	1f 00 00 f0 	ret
    af7c:	02 00 00 4f 	movehi s0, 2
    af80:	20 00 01 0f 	move s1, 64
    af84:	3e 20 00 88 	store_32 s1, 8(sp)
    af88:	22 00 00 4f 	movehi s1, 2
    af8c:	00 54 07 00 	or s0, s0, 469
    af90:	1e 30 00 88 	store_32 s0, 12(sp)
    af94:	02 00 00 4f 	movehi s0, 2
    af98:	21 20 0e 00 	or s1, s1, 904
    af9c:	3e 10 00 88 	store_32 s1, 4(sp)
    afa0:	00 b8 0d 00 	or s0, s0, 878
    afa4:	1e 00 00 88 	store_32 s0, (sp)
    afa8:	99 1e 00 f8 	call 31332 <printf>
    afac:	00 00 e0 c3 	break

000000000000afb0 _ZN9librender12CommandQueueINS_11RenderStateELi32EE6BucketC2Ev:
    afb0:	20 00 00 0f 	move s1, 0
    afb4:	20 00 00 88 	store_32 s1, (s0)
    afb8:	20 10 00 88 	store_32 s1, 4(s0)
    afbc:	20 20 00 86 	store_16 s1, 8(s0)
    afc0:	20 d0 00 88 	store_32 s1, 52(s0)
    afc4:	20 30 00 88 	store_32 s1, 12(s0)
    afc8:	20 40 00 88 	store_32 s1, 16(s0)
    afcc:	20 50 00 88 	store_32 s1, 20(s0)
    afd0:	20 60 00 88 	store_32 s1, 24(s0)
    afd4:	20 70 00 88 	store_32 s1, 28(s0)
    afd8:	20 80 00 88 	store_32 s1, 32(s0)
    afdc:	20 e0 00 86 	store_16 s1, 56(s0)
    afe0:	20 90 01 88 	store_32 s1, 100(s0)
    afe4:	20 f0 00 88 	store_32 s1, 60(s0)
    afe8:	20 00 01 88 	store_32 s1, 64(s0)
    afec:	20 10 01 88 	store_32 s1, 68(s0)
    aff0:	20 20 01 88 	store_32 s1, 72(s0)
    aff4:	20 30 01 88 	store_32 s1, 76(s0)
    aff8:	20 40 01 88 	store_32 s1, 80(s0)
    affc:	20 a0 01 86 	store_16 s1, 104(s0)
    b000:	20 50 02 88 	store_32 s1, 148(s0)
    b004:	20 00 02 88 	store_32 s1, 128(s0)
    b008:	20 f0 01 88 	store_32 s1, 124(s0)
    b00c:	20 e0 01 88 	store_32 s1, 120(s0)
    b010:	20 d0 01 88 	store_32 s1, 116(s0)
    b014:	20 c0 01 88 	store_32 s1, 112(s0)
    b018:	20 b0 01 88 	store_32 s1, 108(s0)
    b01c:	20 60 02 86 	store_16 s1, 152(s0)
    b020:	20 10 03 88 	store_32 s1, 196(s0)
    b024:	20 c0 02 88 	store_32 s1, 176(s0)
    b028:	20 b0 02 88 	store_32 s1, 172(s0)
    b02c:	20 a0 02 88 	store_32 s1, 168(s0)
    b030:	20 90 02 88 	store_32 s1, 164(s0)
    b034:	20 80 02 88 	store_32 s1, 160(s0)
    b038:	20 70 02 88 	store_32 s1, 156(s0)
    b03c:	20 20 03 86 	store_16 s1, 200(s0)
    b040:	20 d0 03 88 	store_32 s1, 244(s0)
    b044:	20 80 03 88 	store_32 s1, 224(s0)
    b048:	20 70 03 88 	store_32 s1, 220(s0)
    b04c:	20 60 03 88 	store_32 s1, 216(s0)
    b050:	20 50 03 88 	store_32 s1, 212(s0)
    b054:	20 40 03 88 	store_32 s1, 208(s0)
    b058:	20 30 03 88 	store_32 s1, 204(s0)
    b05c:	20 e0 03 86 	store_16 s1, 248(s0)
    b060:	20 90 04 88 	store_32 s1, 292(s0)
    b064:	20 40 04 88 	store_32 s1, 272(s0)
    b068:	20 30 04 88 	store_32 s1, 268(s0)
    b06c:	20 20 04 88 	store_32 s1, 264(s0)
    b070:	20 10 04 88 	store_32 s1, 260(s0)
    b074:	20 00 04 88 	store_32 s1, 256(s0)
    b078:	20 f0 03 88 	store_32 s1, 252(s0)
    b07c:	20 a0 04 86 	store_16 s1, 296(s0)
    b080:	20 50 05 88 	store_32 s1, 340(s0)
    b084:	20 00 05 88 	store_32 s1, 320(s0)
    b088:	20 f0 04 88 	store_32 s1, 316(s0)
    b08c:	20 e0 04 88 	store_32 s1, 312(s0)
    b090:	20 d0 04 88 	store_32 s1, 308(s0)
    b094:	20 c0 04 88 	store_32 s1, 304(s0)
    b098:	20 b0 04 88 	store_32 s1, 300(s0)
    b09c:	20 60 05 86 	store_16 s1, 344(s0)
    b0a0:	20 10 06 88 	store_32 s1, 388(s0)
    b0a4:	20 c0 05 88 	store_32 s1, 368(s0)
    b0a8:	20 b0 05 88 	store_32 s1, 364(s0)
    b0ac:	20 a0 05 88 	store_32 s1, 360(s0)
    b0b0:	20 90 05 88 	store_32 s1, 356(s0)
    b0b4:	20 80 05 88 	store_32 s1, 352(s0)
    b0b8:	20 70 05 88 	store_32 s1, 348(s0)
    b0bc:	20 20 06 86 	store_16 s1, 392(s0)
    b0c0:	20 d0 06 88 	store_32 s1, 436(s0)
    b0c4:	20 80 06 88 	store_32 s1, 416(s0)
    b0c8:	20 70 06 88 	store_32 s1, 412(s0)
    b0cc:	20 60 06 88 	store_32 s1, 408(s0)
    b0d0:	20 50 06 88 	store_32 s1, 404(s0)
    b0d4:	20 40 06 88 	store_32 s1, 400(s0)
    b0d8:	20 30 06 88 	store_32 s1, 396(s0)
    b0dc:	20 e0 06 86 	store_16 s1, 440(s0)
    b0e0:	20 90 07 88 	store_32 s1, 484(s0)
    b0e4:	20 40 07 88 	store_32 s1, 464(s0)
    b0e8:	20 30 07 88 	store_32 s1, 460(s0)
    b0ec:	20 20 07 88 	store_32 s1, 456(s0)
    b0f0:	20 10 07 88 	store_32 s1, 452(s0)
    b0f4:	20 00 07 88 	store_32 s1, 448(s0)
    b0f8:	20 f0 06 88 	store_32 s1, 444(s0)
    b0fc:	20 a0 07 86 	store_16 s1, 488(s0)
    b100:	20 50 08 88 	store_32 s1, 532(s0)
    b104:	20 00 08 88 	store_32 s1, 512(s0)
    b108:	20 f0 07 88 	store_32 s1, 508(s0)
    b10c:	20 e0 07 88 	store_32 s1, 504(s0)
    b110:	20 d0 07 88 	store_32 s1, 500(s0)
    b114:	20 c0 07 88 	store_32 s1, 496(s0)
    b118:	20 b0 07 88 	store_32 s1, 492(s0)
    b11c:	20 60 08 86 	store_16 s1, 536(s0)
    b120:	20 10 09 88 	store_32 s1, 580(s0)
    b124:	20 c0 08 88 	store_32 s1, 560(s0)
    b128:	20 b0 08 88 	store_32 s1, 556(s0)
    b12c:	20 a0 08 88 	store_32 s1, 552(s0)
    b130:	20 90 08 88 	store_32 s1, 548(s0)
    b134:	20 80 08 88 	store_32 s1, 544(s0)
    b138:	20 70 08 88 	store_32 s1, 540(s0)
    b13c:	20 20 09 86 	store_16 s1, 584(s0)
    b140:	20 d0 09 88 	store_32 s1, 628(s0)
    b144:	20 80 09 88 	store_32 s1, 608(s0)
    b148:	20 70 09 88 	store_32 s1, 604(s0)
    b14c:	20 60 09 88 	store_32 s1, 600(s0)
    b150:	20 50 09 88 	store_32 s1, 596(s0)
    b154:	20 40 09 88 	store_32 s1, 592(s0)
    b158:	20 30 09 88 	store_32 s1, 588(s0)
    b15c:	20 e0 09 86 	store_16 s1, 632(s0)
    b160:	20 90 0a 88 	store_32 s1, 676(s0)
    b164:	20 40 0a 88 	store_32 s1, 656(s0)
    b168:	20 30 0a 88 	store_32 s1, 652(s0)
    b16c:	20 20 0a 88 	store_32 s1, 648(s0)
    b170:	20 10 0a 88 	store_32 s1, 644(s0)
    b174:	20 00 0a 88 	store_32 s1, 640(s0)
    b178:	20 f0 09 88 	store_32 s1, 636(s0)
    b17c:	20 a0 0a 86 	store_16 s1, 680(s0)
    b180:	20 50 0b 88 	store_32 s1, 724(s0)
    b184:	20 00 0b 88 	store_32 s1, 704(s0)
    b188:	20 f0 0a 88 	store_32 s1, 700(s0)
    b18c:	20 e0 0a 88 	store_32 s1, 696(s0)
    b190:	20 d0 0a 88 	store_32 s1, 692(s0)
    b194:	20 c0 0a 88 	store_32 s1, 688(s0)
    b198:	20 b0 0a 88 	store_32 s1, 684(s0)
    b19c:	20 60 0b 86 	store_16 s1, 728(s0)
    b1a0:	20 10 0c 88 	store_32 s1, 772(s0)
    b1a4:	20 c0 0b 88 	store_32 s1, 752(s0)
    b1a8:	20 b0 0b 88 	store_32 s1, 748(s0)
    b1ac:	20 a0 0b 88 	store_32 s1, 744(s0)
    b1b0:	20 90 0b 88 	store_32 s1, 740(s0)
    b1b4:	20 80 0b 88 	store_32 s1, 736(s0)
    b1b8:	20 70 0b 88 	store_32 s1, 732(s0)
    b1bc:	20 20 0c 86 	store_16 s1, 776(s0)
    b1c0:	20 d0 0c 88 	store_32 s1, 820(s0)
    b1c4:	20 80 0c 88 	store_32 s1, 800(s0)
    b1c8:	20 70 0c 88 	store_32 s1, 796(s0)
    b1cc:	20 60 0c 88 	store_32 s1, 792(s0)
    b1d0:	20 50 0c 88 	store_32 s1, 788(s0)
    b1d4:	20 40 0c 88 	store_32 s1, 784(s0)
    b1d8:	20 30 0c 88 	store_32 s1, 780(s0)
    b1dc:	20 e0 0c 86 	store_16 s1, 824(s0)
    b1e0:	20 90 0d 88 	store_32 s1, 868(s0)
    b1e4:	20 40 0d 88 	store_32 s1, 848(s0)
    b1e8:	20 30 0d 88 	store_32 s1, 844(s0)
    b1ec:	20 20 0d 88 	store_32 s1, 840(s0)
    b1f0:	20 10 0d 88 	store_32 s1, 836(s0)
    b1f4:	20 00 0d 88 	store_32 s1, 832(s0)
    b1f8:	20 f0 0c 88 	store_32 s1, 828(s0)
    b1fc:	20 a0 0d 86 	store_16 s1, 872(s0)
    b200:	20 50 0e 88 	store_32 s1, 916(s0)
    b204:	20 00 0e 88 	store_32 s1, 896(s0)
    b208:	20 f0 0d 88 	store_32 s1, 892(s0)
    b20c:	20 e0 0d 88 	store_32 s1, 888(s0)
    b210:	20 d0 0d 88 	store_32 s1, 884(s0)
    b214:	20 c0 0d 88 	store_32 s1, 880(s0)
    b218:	20 b0 0d 88 	store_32 s1, 876(s0)
    b21c:	20 60 0e 86 	store_16 s1, 920(s0)
    b220:	20 10 0f 88 	store_32 s1, 964(s0)
    b224:	20 c0 0e 88 	store_32 s1, 944(s0)
    b228:	20 b0 0e 88 	store_32 s1, 940(s0)
    b22c:	20 a0 0e 88 	store_32 s1, 936(s0)
    b230:	20 90 0e 88 	store_32 s1, 932(s0)
    b234:	20 80 0e 88 	store_32 s1, 928(s0)
    b238:	20 70 0e 88 	store_32 s1, 924(s0)
    b23c:	20 20 0f 86 	store_16 s1, 968(s0)
    b240:	20 d0 0f 88 	store_32 s1, 1012(s0)
    b244:	20 80 0f 88 	store_32 s1, 992(s0)
    b248:	20 70 0f 88 	store_32 s1, 988(s0)
    b24c:	20 60 0f 88 	store_32 s1, 984(s0)
    b250:	20 50 0f 88 	store_32 s1, 980(s0)
    b254:	20 40 0f 88 	store_32 s1, 976(s0)
    b258:	20 30 0f 88 	store_32 s1, 972(s0)
    b25c:	20 e0 0f 86 	store_16 s1, 1016(s0)
    b260:	20 90 10 88 	store_32 s1, 1060(s0)
    b264:	20 40 10 88 	store_32 s1, 1040(s0)
    b268:	20 30 10 88 	store_32 s1, 1036(s0)
    b26c:	20 20 10 88 	store_32 s1, 1032(s0)
    b270:	20 10 10 88 	store_32 s1, 1028(s0)
    b274:	20 00 10 88 	store_32 s1, 1024(s0)
    b278:	20 f0 0f 88 	store_32 s1, 1020(s0)
    b27c:	20 a0 10 86 	store_16 s1, 1064(s0)
    b280:	20 50 11 88 	store_32 s1, 1108(s0)
    b284:	20 00 11 88 	store_32 s1, 1088(s0)
    b288:	20 f0 10 88 	store_32 s1, 1084(s0)
    b28c:	20 e0 10 88 	store_32 s1, 1080(s0)
    b290:	20 d0 10 88 	store_32 s1, 1076(s0)
    b294:	20 c0 10 88 	store_32 s1, 1072(s0)
    b298:	20 b0 10 88 	store_32 s1, 1068(s0)
    b29c:	20 60 11 86 	store_16 s1, 1112(s0)
    b2a0:	20 10 12 88 	store_32 s1, 1156(s0)
    b2a4:	20 c0 11 88 	store_32 s1, 1136(s0)
    b2a8:	20 b0 11 88 	store_32 s1, 1132(s0)
    b2ac:	20 a0 11 88 	store_32 s1, 1128(s0)
    b2b0:	20 90 11 88 	store_32 s1, 1124(s0)
    b2b4:	20 80 11 88 	store_32 s1, 1120(s0)
    b2b8:	20 70 11 88 	store_32 s1, 1116(s0)
    b2bc:	20 20 12 86 	store_16 s1, 1160(s0)
    b2c0:	20 d0 12 88 	store_32 s1, 1204(s0)
    b2c4:	20 80 12 88 	store_32 s1, 1184(s0)
    b2c8:	20 70 12 88 	store_32 s1, 1180(s0)
    b2cc:	20 60 12 88 	store_32 s1, 1176(s0)
    b2d0:	20 50 12 88 	store_32 s1, 1172(s0)
    b2d4:	20 40 12 88 	store_32 s1, 1168(s0)
    b2d8:	20 30 12 88 	store_32 s1, 1164(s0)
    b2dc:	20 e0 12 86 	store_16 s1, 1208(s0)
    b2e0:	20 90 13 88 	store_32 s1, 1252(s0)
    b2e4:	20 40 13 88 	store_32 s1, 1232(s0)
    b2e8:	20 30 13 88 	store_32 s1, 1228(s0)
    b2ec:	20 20 13 88 	store_32 s1, 1224(s0)
    b2f0:	20 10 13 88 	store_32 s1, 1220(s0)
    b2f4:	20 00 13 88 	store_32 s1, 1216(s0)
    b2f8:	20 f0 12 88 	store_32 s1, 1212(s0)
    b2fc:	20 a0 13 86 	store_16 s1, 1256(s0)
    b300:	20 50 14 88 	store_32 s1, 1300(s0)
    b304:	20 00 14 88 	store_32 s1, 1280(s0)
    b308:	20 f0 13 88 	store_32 s1, 1276(s0)
    b30c:	20 e0 13 88 	store_32 s1, 1272(s0)
    b310:	20 d0 13 88 	store_32 s1, 1268(s0)
    b314:	20 c0 13 88 	store_32 s1, 1264(s0)
    b318:	20 b0 13 88 	store_32 s1, 1260(s0)
    b31c:	20 60 14 86 	store_16 s1, 1304(s0)
    b320:	20 10 15 88 	store_32 s1, 1348(s0)
    b324:	20 c0 14 88 	store_32 s1, 1328(s0)
    b328:	20 b0 14 88 	store_32 s1, 1324(s0)
    b32c:	20 a0 14 88 	store_32 s1, 1320(s0)
    b330:	20 90 14 88 	store_32 s1, 1316(s0)
    b334:	20 80 14 88 	store_32 s1, 1312(s0)
    b338:	20 70 14 88 	store_32 s1, 1308(s0)
    b33c:	20 20 15 86 	store_16 s1, 1352(s0)
    b340:	20 d0 15 88 	store_32 s1, 1396(s0)
    b344:	20 80 15 88 	store_32 s1, 1376(s0)
    b348:	20 70 15 88 	store_32 s1, 1372(s0)
    b34c:	20 60 15 88 	store_32 s1, 1368(s0)
    b350:	20 50 15 88 	store_32 s1, 1364(s0)
    b354:	20 40 15 88 	store_32 s1, 1360(s0)
    b358:	20 30 15 88 	store_32 s1, 1356(s0)
    b35c:	20 e0 15 86 	store_16 s1, 1400(s0)
    b360:	20 90 16 88 	store_32 s1, 1444(s0)
    b364:	20 40 16 88 	store_32 s1, 1424(s0)
    b368:	20 30 16 88 	store_32 s1, 1420(s0)
    b36c:	20 20 16 88 	store_32 s1, 1416(s0)
    b370:	20 10 16 88 	store_32 s1, 1412(s0)
    b374:	20 00 16 88 	store_32 s1, 1408(s0)
    b378:	20 f0 15 88 	store_32 s1, 1404(s0)
    b37c:	20 a0 16 86 	store_16 s1, 1448(s0)
    b380:	20 50 17 88 	store_32 s1, 1492(s0)
    b384:	20 00 17 88 	store_32 s1, 1472(s0)
    b388:	20 f0 16 88 	store_32 s1, 1468(s0)
    b38c:	20 e0 16 88 	store_32 s1, 1464(s0)
    b390:	20 d0 16 88 	store_32 s1, 1460(s0)
    b394:	20 c0 16 88 	store_32 s1, 1456(s0)
    b398:	20 b0 16 88 	store_32 s1, 1452(s0)
    b39c:	20 60 17 86 	store_16 s1, 1496(s0)
    b3a0:	20 10 18 88 	store_32 s1, 1540(s0)
    b3a4:	20 c0 17 88 	store_32 s1, 1520(s0)
    b3a8:	20 b0 17 88 	store_32 s1, 1516(s0)
    b3ac:	20 a0 17 88 	store_32 s1, 1512(s0)
    b3b0:	20 90 17 88 	store_32 s1, 1508(s0)
    b3b4:	20 80 17 88 	store_32 s1, 1504(s0)
    b3b8:	20 70 17 88 	store_32 s1, 1500(s0)
    b3bc:	1f 00 00 f0 	ret

000000000000b3c0 _ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii:
    b3c0:	de 03 f3 05 	add_i sp, sp, -832
    b3c4:	1e f3 0c 88 	store_32 s24, 828(sp)
    b3c8:	3e e3 0c 88 	store_32 s25, 824(sp)
    b3cc:	5e d3 0c 88 	store_32 s26, 820(sp)
    b3d0:	7e c3 0c 88 	store_32 s27, 816(sp)
    b3d4:	fe b3 0c 88 	store_32 ra, 812(sp)
    b3d8:	5e 03 0b 8e 	store_v v26, 704(sp)
    b3dc:	7e 03 0a 8e 	store_v v27, 640(sp)
    b3e0:	9e 03 09 8e 	store_v v28, 576(sp)
    b3e4:	be 03 08 8e 	store_v v29, 512(sp)
    b3e8:	de 03 07 8e 	store_v v30, 448(sp)
    b3ec:	fe 03 06 8e 	store_v v31, 384(sp)
    b3f0:	1e a0 05 88 	store_32 s0, 360(sp)
    b3f4:	23 81 42 c1 	cmplt_i s9, s3, s5
    b3f8:	de 21 0d a8 	load_32 s14, 840(sp)
    b3fc:	1e 10 0d a8 	load_32 s0, 836(sp)
    b400:	9e 01 0d a8 	load_32 s12, 832(sp)
    b404:	00 81 f1 c0 	move s8, s3
    b408:	49 00 00 f4 	bnz s9, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x50>
    b40c:	c8 00 00 f6 	b 800 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x36c>
    b410:	68 81 23 c1 	cmpgt_i s11, s8, s7
    b414:	40 81 f3 c0 	move s10, s7
    b418:	4b 00 00 f4 	bnz s11, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x60>
    b41c:	c8 00 00 f6 	b 800 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x37c>
    b420:	2a f3 ff 01 	and s25, s10, -4
    b424:	19 81 20 c1 	cmpgt_i s8, s25, s1
    b428:	48 00 00 f4 	bnz s8, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x70>
    b42c:	c8 00 00 f6 	b 800 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x38c>
    b430:	e4 01 43 c1 	cmplt_i s15, s4, s6
    b434:	00 01 f2 c0 	move s8, s4
    b438:	4f 00 00 f4 	bnz s15, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x80>
    b43c:	c8 00 00 f6 	b 800 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x39c>
    b440:	68 01 26 c1 	cmpgt_i s11, s8, s12
    b444:	40 01 f6 c0 	move s10, s12
    b448:	4b 00 00 f4 	bnz s11, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x90>
    b44c:	c8 00 00 f6 	b 800 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x3ac>
    b450:	0a f1 ff 01 	and s8, s10, -4
    b454:	1e b1 05 88 	store_32 s8, 364(sp)
    b458:	08 01 21 c1 	cmpgt_i s8, s8, s2
    b45c:	48 00 00 f4 	bnz s8, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0xa4>
    b460:	c8 00 00 f6 	b 800 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x3c0>
    b464:	a3 81 22 c1 	cmpgt_i s13, s3, s5
    b468:	00 81 f1 c0 	move s8, s3
    b46c:	4d 00 00 f4 	bnz s13, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0xb4>
    b470:	c8 00 00 f6 	b 800 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x3d0>
    b474:	68 81 43 c1 	cmplt_i s11, s8, s7
    b478:	40 81 f3 c0 	move s10, s7
    b47c:	4b 00 00 f4 	bnz s11, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0xc4>
    b480:	40 01 f4 c0 	move s10, s8
    b484:	0a 0d 00 05 	add_i s8, s10, 3
    b488:	48 f1 ff 01 	and s10, s8, -4
    b48c:	01 01 01 05 	add_i s8, s1, 64
    b490:	6a 01 40 c1 	cmplt_i s11, s10, s0
    b494:	4b 00 00 f4 	bnz s11, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0xdc>
    b498:	c3 00 00 f6 	b 780 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x3e4>
    b49c:	6a 01 24 c1 	cmpgt_i s11, s10, s8
    b4a0:	4b 00 00 f4 	bnz s11, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0xe8>
    b4a4:	c3 00 00 f6 	b 780 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x3f0>
    b4a8:	04 02 23 c1 	cmpgt_i s16, s4, s6
    b4ac:	40 01 f2 c0 	move s10, s4
    b4b0:	50 00 00 f4 	bnz s16, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0xf8>
    b4b4:	c3 00 00 f6 	b 780 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x400>
    b4b8:	2a 02 46 c1 	cmplt_i s17, s10, s12
    b4bc:	60 01 f6 c0 	move s11, s12
    b4c0:	51 00 00 f4 	bnz s17, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x108>
    b4c4:	60 01 f5 c0 	move s11, s10
    b4c8:	4b 0d 00 05 	add_i s10, s11, 3
    b4cc:	22 02 01 05 	add_i s17, s2, 64
    b4d0:	3e 62 05 88 	store_32 s17, 344(sp)
    b4d4:	4a f1 ff 01 	and s10, s10, -4
    b4d8:	6a 01 47 c1 	cmplt_i s11, s10, s14
    b4dc:	4b 00 00 f4 	bnz s11, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x124>
    b4e0:	bd 00 00 f6 	b 756 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x414>
    b4e4:	7e 61 05 a8 	load_32 s11, 344(sp)
    b4e8:	6a 81 25 c1 	cmpgt_i s11, s10, s11
    b4ec:	4b 00 00 f4 	bnz s11, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x134>
    b4f0:	bd 00 00 f6 	b 756 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x424>
    b4f4:	48 81 3c c1 	cmpge_i s10, s8, s25
    b4f8:	ea 17 00 f4 	bnz s10, 764 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x434>
    b4fc:	5e b1 05 a8 	load_32 s10, 364(sp)
    b500:	7e 61 05 a8 	load_32 s11, 344(sp)
    b504:	4b 01 35 c1 	cmpge_i s10, s11, s10
    b508:	6a 17 00 f4 	bnz s10, 748 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x434>
    b50c:	02 00 00 4f 	movehi s0, 2
    b510:	22 00 00 4f 	movehi s1, 2
    b514:	60 00 00 2f 	move v3, 0
    b518:	00 00 1a 00 	or s0, s0, 1664
    b51c:	20 fc ff 2f 	move v1, -1
    b520:	a3 80 62 c4 	sub_i v5, v3, s5
    b524:	00 00 00 ae 	load_v v0, (s0)
    b528:	01 00 1b 00 	or s0, s1, 1728
    b52c:	26 00 02 c1 	cmpeq_i s1, s6, s4
    b530:	40 00 00 ae 	load_v v2, (s0)
    b534:	80 80 f0 d0 	move v4, v1
    b538:	41 00 00 f4 	bnz s1, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x180>
    b53c:	80 80 f1 d0 	move v4, v3
    b540:	25 00 00 3a 	getlane s1, v5, 0
    b544:	45 80 61 c0 	sub_i s2, s5, s3
    b548:	00 80 5c c4 	add_i v0, v0, s25
    b54c:	a3 00 63 c4 	sub_i v5, v3, s6
    b550:	49 00 00 f4 	bnz s9, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x198>
    b554:	80 80 f1 d0 	move v4, v3
    b558:	1e b0 05 a8 	load_32 s0, 364(sp)
    b55c:	25 01 00 3a 	getlane s9, v5, 0
    b560:	a3 00 61 c4 	sub_i v5, v3, s2
    b564:	c0 80 50 c4 	add_i v6, v0, s1
    b568:	42 00 50 c4 	add_i v2, v2, s0
    b56c:	06 00 62 c0 	sub_i s0, s6, s4
    b570:	50 00 00 f4 	bnz s16, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x1b8>
    b574:	20 00 f2 d0 	move v1, v4
    b578:	82 80 54 c4 	add_i v4, v2, s9
    b57c:	25 01 00 3a 	getlane s9, v5, 0
    b580:	a6 00 70 c4 	mull_i v5, v6, s0
    b584:	c3 80 63 c4 	sub_i v6, v3, s7
    b588:	63 00 66 c4 	sub_i v3, v3, s12
    b58c:	2c 00 63 c0 	sub_i s1, s12, s6
    b590:	46 01 00 3a 	getlane s10, v6, 0
    b594:	c0 00 55 c4 	add_i v6, v0, s10
    b598:	43 01 00 3a 	getlane s10, v3, 0
    b59c:	62 00 55 c4 	add_i v3, v2, s10
    b5a0:	c6 80 70 c4 	mull_i v6, v6, s1
    b5a4:	47 81 62 c0 	sub_i s10, s7, s5
    b5a8:	63 00 75 c4 	mull_i v3, v3, s10
    b5ac:	6c 01 43 c1 	cmplt_i s11, s12, s6
    b5b0:	46 83 61 d0 	sub_i v26, v6, v3
    b5b4:	ab 00 00 f4 	bnz s11, 20 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x208>
    b5b8:	a7 80 52 c1 	cmple_i s5, s7, s5
    b5bc:	85 00 00 f4 	bnz s5, 16 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x20c>
    b5c0:	ac 00 13 c1 	cmpne_i s5, s12, s6
    b5c4:	45 00 00 f4 	bnz s5, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x20c>
    b5c8:	5a ff ff 25 	add_i v26, v26, -1
    b5cc:	64 80 74 c4 	mull_i v3, v4, s9
    b5d0:	80 00 00 2f 	move v4, 0
    b5d4:	25 80 50 d0 	add_i v1, v5, v1
    b5d8:	c4 00 66 c0 	sub_i s6, s4, s12
    b5dc:	a4 80 61 c4 	sub_i v5, v4, s3
    b5e0:	84 00 62 c4 	sub_i v4, v4, s4
    b5e4:	a2 08 00 0b 	shl s5, s2, 2
    b5e8:	25 01 00 3a 	getlane s9, v5, 0
    b5ec:	00 80 54 c4 	add_i v0, v0, s9
    b5f0:	24 01 00 3a 	getlane s9, v4, 0
    b5f4:	42 80 54 c4 	add_i v2, v2, s9
    b5f8:	00 00 73 c4 	mull_i v0, v0, s6
    b5fc:	23 81 63 c0 	sub_i s9, s3, s7
    b600:	42 80 74 c4 	mull_i v2, v2, s9
    b604:	4a 08 00 0b 	shl s2, s10, 2
    b608:	44 01 46 c1 	cmplt_i s10, s4, s12
    b60c:	60 03 61 d0 	sub_i v27, v0, v2
    b610:	aa 00 00 f4 	bnz s10, 20 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x264>
    b614:	63 80 53 c1 	cmple_i s3, s3, s7
    b618:	83 00 00 f4 	bnz s3, 16 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x268>
    b61c:	64 00 16 c1 	cmpne_i s3, s4, s12
    b620:	43 00 00 f4 	bnz s3, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x268>
    b624:	7b ff ff 25 	add_i v27, v27, -1
    b628:	68 80 6c c0 	sub_i s3, s8, s25
    b62c:	e0 08 00 0b 	shl s7, s0, 2
    b630:	01 09 00 0b 	shl s8, s1, 2
    b634:	83 7c 00 09 	ashr s4, s3, 31
    b638:	81 83 51 d0 	add_i v28, v1, v3
    b63c:	29 08 00 0b 	shl s1, s9, 2
    b640:	04 78 00 0a 	shr s0, s4, 30
    b644:	03 00 50 c0 	add_i s0, s3, s0
    b648:	66 08 00 0b 	shl s3, s6, 2
    b64c:	60 13 00 0f 	move s27, 4
    b650:	00 0b 00 09 	ashr s24, s0, 2
    b654:	40 03 00 0f 	move s26, 0
    b658:	00 80 f2 c4 	move v0, s5
    b65c:	1e 00 04 8e 	store_v v0, 256(sp)
    b660:	00 00 f1 c4 	move v0, s2
    b664:	1e 00 03 8e 	store_v v0, 192(sp)
    b668:	00 80 f0 c4 	move v0, s1
    b66c:	1e 00 02 8e 	store_v v0, 128(sp)
    b670:	5e f3 01 88 	store_32 s26, 124(sp)
    b674:	a0 83 f3 c4 	move v29, s7
    b678:	fe 90 05 88 	store_32 s7, 356(sp)
    b67c:	c0 03 f4 c4 	move v30, s8
    b680:	1e 81 05 88 	store_32 s8, 352(sp)
    b684:	e0 83 f1 c4 	move v31, s3
    b688:	7e 70 05 88 	store_32 s3, 348(sp)
    b68c:	06 00 00 f6 	b 24 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x2e4>
    b690:	9c 83 5e d0 	add_i v28, v28, v29
    b694:	5a 03 5f d0 	add_i v26, v26, v30
    b698:	7b 83 5f d0 	add_i v27, v27, v31
    b69c:	39 83 5d c0 	add_i s25, s25, s27
    b6a0:	5a 07 00 05 	add_i s26, s26, 1
    b6a4:	1a 00 0e d0 	or v0, v26, v28
    b6a8:	00 80 0d d0 	or v0, v0, v27
    b6ac:	00 fc ff 32 	cmpgt_i s0, v0, -1
    b6b0:	1e c0 05 86 	store_16 s0, 368(sp)
    b6b4:	7e c0 05 a4 	load_u16 s3, 368(sp)
    b6b8:	a3 00 00 f2 	bz s3, 20 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x30c>
    b6bc:	1e a0 05 a8 	load_32 s0, 360(sp)
    b6c0:	20 80 fc c0 	move s1, s25
    b6c4:	5e b0 05 a8 	load_32 s2, 364(sp)
    b6c8:	69 03 00 f8 	call 3492 <_ZN9librender14TriangleFiller10fillMaskedEiit>
    b6cc:	1a 00 0c c1 	cmpeq_i s0, s26, s24
    b6d0:	40 00 00 f4 	bnz s0, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x318>
    b6d4:	ef ff ff f7 	b -68 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x2d0>
    b6d8:	fe 90 05 a8 	load_32 s7, 356(sp)
    b6dc:	5e f3 01 a8 	load_32 s26, 124(sp)
    b6e0:	1e 81 05 a8 	load_32 s8, 352(sp)
    b6e4:	7e 70 05 a8 	load_32 s3, 348(sp)
    b6e8:	1e b0 05 a8 	load_32 s0, 364(sp)
    b6ec:	1e 00 04 ae 	load_v v0, 256(sp)
    b6f0:	fa 80 63 c0 	sub_i s7, s26, s7
    b6f4:	1a 01 64 c0 	sub_i s8, s26, s8
    b6f8:	7a 80 61 c0 	sub_i s3, s26, s3
    b6fc:	00 10 00 05 	add_i s0, s0, 4
    b700:	9c 03 60 d0 	sub_i v28, v28, v0
    b704:	1e 00 03 ae 	load_v v0, 192(sp)
    b708:	1e b0 05 88 	store_32 s0, 364(sp)
    b70c:	7a 83 6d c0 	sub_i s27, s26, s27
    b710:	3e 60 05 a8 	load_32 s1, 344(sp)
    b714:	5a 03 60 d0 	sub_i v26, v26, v0
    b718:	1e 00 02 ae 	load_v v0, 128(sp)
    b71c:	00 80 40 c1 	cmplt_i s0, s0, s1
    b720:	7b 03 60 d0 	sub_i v27, v27, v0
    b724:	80 fa ff f5 	bnz s0, -176 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x2b4>
    b728:	ea 00 00 f6 	b 936 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x710>
    b72c:	00 81 f2 c0 	move s8, s5
    b730:	68 81 23 c1 	cmpgt_i s11, s8, s7
    b734:	40 81 f3 c0 	move s10, s7
    b738:	4b e7 ff f5 	bnz s11, -792 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x60>
    b73c:	40 01 f4 c0 	move s10, s8
    b740:	2a f3 ff 01 	and s25, s10, -4
    b744:	19 81 20 c1 	cmpgt_i s8, s25, s1
    b748:	48 e7 ff f5 	bnz s8, -792 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x70>
    b74c:	20 83 f0 c0 	move s25, s1
    b750:	e4 01 43 c1 	cmplt_i s15, s4, s6
    b754:	00 01 f2 c0 	move s8, s4
    b758:	4f e7 ff f5 	bnz s15, -792 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x80>
    b75c:	00 01 f3 c0 	move s8, s6
    b760:	68 01 26 c1 	cmpgt_i s11, s8, s12
    b764:	40 01 f6 c0 	move s10, s12
    b768:	4b e7 ff f5 	bnz s11, -792 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x90>
    b76c:	40 01 f4 c0 	move s10, s8
    b770:	0a f1 ff 01 	and s8, s10, -4
    b774:	1e b1 05 88 	store_32 s8, 364(sp)
    b778:	08 01 21 c1 	cmpgt_i s8, s8, s2
    b77c:	48 e7 ff f5 	bnz s8, -792 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0xa4>
    b780:	5e b0 05 88 	store_32 s2, 364(sp)
    b784:	a3 81 22 c1 	cmpgt_i s13, s3, s5
    b788:	00 81 f1 c0 	move s8, s3
    b78c:	4d e7 ff f5 	bnz s13, -792 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0xb4>
    b790:	00 81 f2 c0 	move s8, s5
    b794:	68 81 43 c1 	cmplt_i s11, s8, s7
    b798:	40 81 f3 c0 	move s10, s7
    b79c:	4b e7 ff f5 	bnz s11, -792 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0xc4>
    b7a0:	38 ff ff f7 	b -800 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0xc0>
    b7a4:	40 01 f0 c0 	move s10, s0
    b7a8:	6a 01 24 c1 	cmpgt_i s11, s10, s8
    b7ac:	eb e7 ff f5 	bnz s11, -772 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0xe8>
    b7b0:	00 01 f5 c0 	move s8, s10
    b7b4:	04 02 23 c1 	cmpgt_i s16, s4, s6
    b7b8:	40 01 f2 c0 	move s10, s4
    b7bc:	f0 e7 ff f5 	bnz s16, -772 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0xf8>
    b7c0:	40 01 f3 c0 	move s10, s6
    b7c4:	2a 02 46 c1 	cmplt_i s17, s10, s12
    b7c8:	60 01 f6 c0 	move s11, s12
    b7cc:	f1 e7 ff f5 	bnz s17, -772 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x108>
    b7d0:	3d ff ff f7 	b -780 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x104>
    b7d4:	40 01 f7 c0 	move s10, s14
    b7d8:	7e 61 05 a8 	load_32 s11, 344(sp)
    b7dc:	6a 81 25 c1 	cmpgt_i s11, s10, s11
    b7e0:	ab e8 ff f5 	bnz s11, -748 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x134>
    b7e4:	5e 61 05 88 	store_32 s10, 344(sp)
    b7e8:	48 81 3c c1 	cmpge_i s10, s8, s25
    b7ec:	4a 00 00 f4 	bnz s10, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x434>
    b7f0:	43 ff ff f7 	b -756 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x13c>
    b7f4:	41 fe 00 05 	add_i s18, s1, 63
    b7f8:	4c 01 22 c1 	cmpgt_i s10, s12, s4
    b7fc:	00 01 f9 c0 	move s8, s18
    b800:	4a 00 00 f4 	bnz s10, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x448>
    b804:	00 81 f0 c0 	move s8, s1
    b808:	20 81 f0 c0 	move s9, s1
    b80c:	4a 00 00 f4 	bnz s10, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x454>
    b810:	20 01 f9 c0 	move s9, s18
    b814:	62 01 00 4f 	movehi s11, 2
    b818:	22 02 00 4f 	movehi s17, 2
    b81c:	8b 02 16 00 	or s20, s11, 1408
    b820:	71 02 17 00 	or s19, s17, 1472
    b824:	14 00 00 ae 	load_v v0, (s20)
    b828:	53 00 00 ae 	load_v v2, (s19)
    b82c:	20 00 f1 d0 	move v1, v2
    b830:	4a 00 00 f4 	bnz s10, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x478>
    b834:	20 00 f0 d0 	move v1, v0
    b838:	4a 00 00 f4 	bnz s10, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x480>
    b83c:	00 00 f1 d0 	move v0, v2
    b840:	42 01 00 4f 	movehi s10, 2
    b844:	62 01 00 4f 	movehi s11, 2
    b848:	ca 02 18 00 	or s22, s10, 1536
    b84c:	ab 02 19 00 	or s21, s11, 1600
    b850:	67 81 21 c1 	cmpgt_i s11, s7, s3
    b854:	56 00 00 ae 	load_v v2, (s22)
    b858:	95 00 00 ae 	load_v v4, (s21)
    b85c:	60 00 f2 d0 	move v3, v4
    b860:	4b 00 00 f4 	bnz s11, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x4a8>
    b864:	a8 00 00 f6 	b 672 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x744>
    b868:	22 fe 00 05 	add_i s17, s2, 63
    b86c:	40 01 f1 c0 	move s10, s2
    b870:	4b 00 00 f4 	bnz s11, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x4b8>
    b874:	a8 00 00 f6 	b 672 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x754>
    b878:	00 83 f8 c0 	move s24, s17
    b87c:	4b 00 00 f4 	bnz s11, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x4c4>
    b880:	a8 00 00 f6 	b 672 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x760>
    b884:	4b 00 00 f4 	bnz s11, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x4cc>
    b888:	40 00 f2 d0 	move v2, v4
    b88c:	08 81 61 c0 	sub_i s8, s8, s3
    b890:	29 81 61 c0 	sub_i s9, s9, s3
    b894:	ec 02 62 c0 	sub_i s23, s12, s4
    b898:	4a 01 62 c0 	sub_i s10, s10, s4
    b89c:	08 81 7b c0 	mull_i s8, s8, s23
    b8a0:	78 01 62 c0 	sub_i s11, s24, s4
    b8a4:	27 83 61 c0 	sub_i s25, s7, s3
    b8a8:	29 81 7b c0 	mull_i s9, s9, s23
    b8ac:	4a 81 7c c0 	mull_i s10, s10, s25
    b8b0:	08 01 65 c0 	sub_i s8, s8, s10
    b8b4:	4b 81 7c c0 	mull_i s10, s11, s25
    b8b8:	6c 01 42 c1 	cmplt_i s11, s12, s4
    b8bc:	29 01 65 c0 	sub_i s9, s9, s10
    b8c0:	ab 00 00 f4 	bnz s11, 20 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x514>
    b8c4:	4c 01 12 c1 	cmpne_i s10, s12, s4
    b8c8:	aa 00 00 f4 	bnz s10, 20 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x51c>
    b8cc:	47 81 51 c1 	cmple_i s10, s7, s3
    b8d0:	6a 00 00 f4 	bnz s10, 12 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x51c>
    b8d4:	08 05 00 05 	add_i s8, s8, 1
    b8d8:	29 05 00 05 	add_i s9, s9, 1
    b8dc:	06 03 26 c1 	cmpgt_i s24, s6, s12
    b8e0:	40 01 f9 c0 	move s10, s18
    b8e4:	58 00 00 f4 	bnz s24, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x52c>
    b8e8:	91 00 00 f6 	b 580 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x76c>
    b8ec:	60 81 f0 c0 	move s11, s1
    b8f0:	58 00 00 f4 	bnz s24, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x538>
    b8f4:	91 00 00 f6 	b 580 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x778>
    b8f8:	94 00 00 ae 	load_v v4, (s20)
    b8fc:	d3 00 00 ae 	load_v v6, (s19)
    b900:	a0 00 f3 d0 	move v5, v6
    b904:	58 00 00 f4 	bnz s24, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x54c>
    b908:	91 00 00 f6 	b 580 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x78c>
    b90c:	58 00 00 f4 	bnz s24, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x554>
    b910:	80 00 f3 d0 	move v4, v6
    b914:	d6 00 00 ae 	load_v v6, (s22)
    b918:	05 83 23 c1 	cmpgt_i s24, s5, s7
    b91c:	15 01 00 ae 	load_v v8, (s21)
    b920:	e0 00 f4 d0 	move v7, v8
    b924:	58 00 00 f4 	bnz s24, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x56c>
    b928:	8c 00 00 f6 	b 560 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x798>
    b92c:	40 03 f1 c0 	move s26, s2
    b930:	58 00 00 f4 	bnz s24, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x578>
    b934:	8c 00 00 f6 	b 560 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x7a4>
    b938:	1e b1 05 88 	store_32 s8, 364(sp)
    b93c:	60 83 f8 c0 	move s27, s17
    b940:	58 00 00 f4 	bnz s24, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x588>
    b944:	8c 00 00 f6 	b 560 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x7b4>
    b948:	00 81 f7 c0 	move s8, s15
    b94c:	58 00 00 f4 	bnz s24, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x594>
    b950:	c0 00 f4 d0 	move v6, v8
    b954:	4a 81 63 c0 	sub_i s10, s10, s7
    b958:	6b 81 63 c0 	sub_i s11, s11, s7
    b95c:	06 03 66 c0 	sub_i s24, s6, s12
    b960:	fa 01 66 c0 	sub_i s15, s26, s12
    b964:	4a 01 7c c0 	mull_i s10, s10, s24
    b968:	7b 03 66 c0 	sub_i s27, s27, s12
    b96c:	45 83 63 c0 	sub_i s26, s5, s7
    b970:	6b 01 7c c0 	mull_i s11, s11, s24
    b974:	ef 01 7d c0 	mull_i s15, s15, s26
    b978:	4a 81 67 c0 	sub_i s10, s10, s15
    b97c:	fb 01 7d c0 	mull_i s15, s27, s26
    b980:	66 03 46 c1 	cmplt_i s27, s6, s12
    b984:	6b 81 67 c0 	sub_i s11, s11, s15
    b988:	bb 00 00 f4 	bnz s27, 20 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x5dc>
    b98c:	86 01 16 c1 	cmpne_i s12, s6, s12
    b990:	ac 00 00 f4 	bnz s12, 20 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x5e4>
    b994:	e5 80 53 c1 	cmple_i s7, s5, s7
    b998:	67 00 00 f4 	bnz s7, 12 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x5e4>
    b99c:	4a 05 00 05 	add_i s10, s10, 1
    b9a0:	6b 05 00 05 	add_i s11, s11, 1
    b9a4:	e0 00 f9 c0 	move s7, s18
    b9a8:	50 00 00 f4 	bnz s16, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x5f0>
    b9ac:	76 00 00 f6 	b 472 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x7c4>
    b9b0:	80 81 f0 c0 	move s12, s1
    b9b4:	50 00 00 f4 	bnz s16, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x5fc>
    b9b8:	76 00 00 f6 	b 472 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x7d0>
    b9bc:	14 01 00 ae 	load_v v8, (s20)
    b9c0:	53 01 00 ae 	load_v v10, (s19)
    b9c4:	20 01 f5 d0 	move v9, v10
    b9c8:	50 00 00 f4 	bnz s16, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x610>
    b9cc:	76 00 00 f6 	b 472 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x7e4>
    b9d0:	50 00 00 f4 	bnz s16, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x618>
    b9d4:	76 00 00 f6 	b 472 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x7ec>
    b9d8:	56 01 00 ae 	load_v v10, (s22)
    b9dc:	95 01 00 ae 	load_v v12, (s21)
    b9e0:	60 01 f6 d0 	move v11, v12
    b9e4:	4d 00 00 f4 	bnz s13, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x62c>
    b9e8:	76 00 00 f6 	b 472 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x800>
    b9ec:	40 02 f1 c0 	move s18, s2
    b9f0:	4d 00 00 f4 	bnz s13, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x638>
    b9f4:	76 00 00 f6 	b 472 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x80c>
    b9f8:	4d 00 00 f4 	bnz s13, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x640>
    b9fc:	20 02 f1 c0 	move s17, s2
    ba00:	00 80 7b c4 	mull_i v0, v0, s23
    ba04:	21 80 7b c4 	mull_i v1, v1, s23
    ba08:	42 80 7c c4 	mull_i v2, v2, s25
    ba0c:	63 80 7c c4 	mull_i v3, v3, s25
    ba10:	84 00 7c c4 	mull_i v4, v4, s24
    ba14:	a5 00 7c c4 	mull_i v5, v5, s24
    ba18:	c6 00 7d c4 	mull_i v6, v6, s26
    ba1c:	e7 00 7d c4 	mull_i v7, v7, s26
    ba20:	4d 00 00 f4 	bnz s13, 8 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x668>
    ba24:	40 01 f6 d0 	move v10, v12
    ba28:	a7 81 62 c0 	sub_i s13, s7, s5
    ba2c:	8c 81 62 c0 	sub_i s12, s12, s5
    ba30:	04 02 63 c0 	sub_i s16, s4, s6
    ba34:	f2 01 63 c0 	sub_i s15, s18, s6
    ba38:	ad 01 78 c0 	mull_i s13, s13, s16
    ba3c:	31 02 63 c0 	sub_i s17, s17, s6
    ba40:	e3 80 62 c0 	sub_i s7, s3, s5
    ba44:	4c 02 78 c0 	mull_i s18, s12, s16
    ba48:	ef 81 73 c0 	mull_i s15, s15, s7
    ba4c:	8d 81 67 c0 	sub_i s12, s13, s15
    ba50:	b1 81 73 c0 	mull_i s13, s17, s7
    ba54:	61 80 61 d0 	sub_i v3, v1, v3
    ba58:	24 00 63 d0 	sub_i v1, v4, v6
    ba5c:	00 00 61 d0 	sub_i v0, v0, v2
    ba60:	85 80 63 d0 	sub_i v4, v5, v7
    ba64:	b2 81 66 c0 	sub_i s13, s18, s13
    ba68:	a8 00 00 f4 	bnz s8, 20 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x6bc>
    ba6c:	84 00 13 c1 	cmpne_i s4, s4, s6
    ba70:	a4 00 00 f4 	bnz s4, 20 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x6c4>
    ba74:	63 80 52 c1 	cmple_i s3, s3, s5
    ba78:	63 00 00 f4 	bnz s3, 12 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x6c4>
    ba7c:	8c 05 00 05 	add_i s12, s12, 1
    ba80:	ad 05 00 05 	add_i s13, s13, 1
    ba84:	48 00 78 c4 	mull_i v2, v8, s16
    ba88:	de 31 00 88 	store_32 s14, 12(sp)
    ba8c:	a9 00 78 c4 	mull_i v5, v9, s16
    ba90:	1e 20 00 88 	store_32 s0, 8(sp)
    ba94:	5e 10 00 88 	store_32 s2, 4(sp)
    ba98:	ca 80 73 c4 	mull_i v6, v10, s7
    ba9c:	3e 00 00 88 	store_32 s1, (sp)
    baa0:	eb 80 73 c4 	mull_i v7, v11, s7
    baa4:	1e a0 05 a8 	load_32 s0, 360(sp)
    baa8:	42 00 63 d0 	sub_i v2, v2, v6
    baac:	3e b0 05 a8 	load_32 s1, 364(sp)
    bab0:	40 00 f5 c0 	move s2, s10
    bab4:	60 00 f6 c0 	move s3, s12
    bab8:	80 80 f4 c0 	move s4, s9
    babc:	a0 80 f5 c0 	move s5, s11
    bac0:	a5 80 63 d0 	sub_i v5, v5, v7
    bac4:	e0 18 00 0f 	move s7, 6
    bac8:	c0 80 f6 c0 	move s6, s13
    bacc:	43 00 00 f8 	call 268 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii>
    bad0:	fe 03 06 ae 	load_v v31, 384(sp)
    bad4:	de 03 07 ae 	load_v v30, 448(sp)
    bad8:	be 03 08 ae 	load_v v29, 512(sp)
    badc:	9e 03 09 ae 	load_v v28, 576(sp)
    bae0:	7e 03 0a ae 	load_v v27, 640(sp)
    bae4:	5e 03 0b ae 	load_v v26, 704(sp)
    bae8:	fe b3 0c a8 	load_32 ra, 812(sp)
    baec:	7e c3 0c a8 	load_32 s27, 816(sp)
    baf0:	5e d3 0c a8 	load_32 s26, 820(sp)
    baf4:	3e e3 0c a8 	load_32 s25, 824(sp)
    baf8:	1e f3 0c a8 	load_32 s24, 828(sp)
    bafc:	de 03 0d 05 	add_i sp, sp, 832
    bb00:	1f 00 00 f0 	ret
    bb04:	60 00 f1 d0 	move v3, v2
    bb08:	22 fe 00 05 	add_i s17, s2, 63
    bb0c:	40 01 f1 c0 	move s10, s2
    bb10:	4b eb ff f5 	bnz s11, -664 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x4b8>
    bb14:	40 81 f8 c0 	move s10, s17
    bb18:	00 83 f8 c0 	move s24, s17
    bb1c:	4b eb ff f5 	bnz s11, -664 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x4c4>
    bb20:	00 03 f1 c0 	move s24, s2
    bb24:	4b eb ff f5 	bnz s11, -664 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x4cc>
    bb28:	58 ff ff f7 	b -672 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x4c8>
    bb2c:	40 81 f0 c0 	move s10, s1
    bb30:	60 81 f0 c0 	move s11, s1
    bb34:	38 ee ff f5 	bnz s24, -572 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x538>
    bb38:	60 01 f9 c0 	move s11, s18
    bb3c:	94 00 00 ae 	load_v v4, (s20)
    bb40:	d3 00 00 ae 	load_v v6, (s19)
    bb44:	a0 00 f3 d0 	move v5, v6
    bb48:	38 ee ff f5 	bnz s24, -572 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x54c>
    bb4c:	a0 00 f2 d0 	move v5, v4
    bb50:	38 ee ff f5 	bnz s24, -572 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x554>
    bb54:	6f ff ff f7 	b -580 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x550>
    bb58:	e0 00 f3 d0 	move v7, v6
    bb5c:	40 03 f1 c0 	move s26, s2
    bb60:	d8 ee ff f5 	bnz s24, -552 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x578>
    bb64:	40 83 f8 c0 	move s26, s17
    bb68:	1e b1 05 88 	store_32 s8, 364(sp)
    bb6c:	60 83 f8 c0 	move s27, s17
    bb70:	d8 ee ff f5 	bnz s24, -552 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x588>
    bb74:	60 03 f1 c0 	move s27, s2
    bb78:	00 81 f7 c0 	move s8, s15
    bb7c:	d8 ee ff f5 	bnz s24, -552 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x594>
    bb80:	74 ff ff f7 	b -560 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x590>
    bb84:	e0 80 f0 c0 	move s7, s1
    bb88:	80 81 f0 c0 	move s12, s1
    bb8c:	90 f1 ff f5 	bnz s16, -464 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x5fc>
    bb90:	80 01 f9 c0 	move s12, s18
    bb94:	14 01 00 ae 	load_v v8, (s20)
    bb98:	53 01 00 ae 	load_v v10, (s19)
    bb9c:	20 01 f5 d0 	move v9, v10
    bba0:	90 f1 ff f5 	bnz s16, -464 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x610>
    bba4:	20 01 f4 d0 	move v9, v8
    bba8:	90 f1 ff f5 	bnz s16, -464 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x618>
    bbac:	00 01 f5 d0 	move v8, v10
    bbb0:	56 01 00 ae 	load_v v10, (s22)
    bbb4:	95 01 00 ae 	load_v v12, (s21)
    bbb8:	60 01 f6 d0 	move v11, v12
    bbbc:	8d f1 ff f5 	bnz s13, -464 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x62c>
    bbc0:	60 01 f5 d0 	move v11, v10
    bbc4:	40 02 f1 c0 	move s18, s2
    bbc8:	8d f1 ff f5 	bnz s13, -464 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x638>
    bbcc:	40 82 f8 c0 	move s18, s17
    bbd0:	8d f1 ff f5 	bnz s13, -464 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x640>
    bbd4:	8a ff ff f7 	b -472 <_ZN9librender12fillTriangleERNS_14TriangleFillerEiiiiiiiiii+0x63c>

000000000000bbd8 _ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii:
    bbd8:	de 03 ec 05 	add_i sp, sp, -1280
    bbdc:	1e f3 13 88 	store_32 s24, 1276(sp)
    bbe0:	3e e3 13 88 	store_32 s25, 1272(sp)
    bbe4:	5e d3 13 88 	store_32 s26, 1268(sp)
    bbe8:	7e c3 13 88 	store_32 s27, 1264(sp)
    bbec:	fe b3 13 88 	store_32 ra, 1260(sp)
    bbf0:	5e 03 12 8e 	store_v v26, 1152(sp)
    bbf4:	7e 03 11 8e 	store_v v27, 1088(sp)
    bbf8:	9e 03 10 8e 	store_v v28, 1024(sp)
    bbfc:	be 03 0f 8e 	store_v v29, 960(sp)
    bc00:	de 03 0e 8e 	store_v v30, 896(sp)
    bc04:	fe 03 0d 8e 	store_v v31, 832(sp)
    bc08:	80 83 f1 d0 	move v28, v3
    bc0c:	a0 03 f1 d0 	move v29, v2
    bc10:	c0 83 f0 d0 	move v30, v1
    bc14:	40 03 f0 d0 	move v26, v0
    bc18:	7e 33 14 a8 	load_32 s27, 1292(sp)
    bc1c:	3e 21 14 a8 	load_32 s9, 1288(sp)
    bc20:	3d 80 51 c4 	add_i v1, v29, s3
    bc24:	7e 03 51 c4 	add_i v27, v30, s2
    bc28:	5e 10 14 a8 	load_32 s2, 1284(sp)
    bc2c:	1a 80 50 c4 	add_i v0, v26, s1
    bc30:	5e d0 05 88 	store_32 s2, 372(sp)
    bc34:	5b 04 00 34 	cmplt_i s2, v27, 1
    bc38:	20 04 00 34 	cmplt_i s1, v0, 1
    bc3c:	42 80 10 c0 	and s2, s2, s1
    bc40:	3e 00 14 a8 	load_32 s1, 1280(sp)
    bc44:	3e f0 05 88 	store_32 s1, 380(sp)
    bc48:	21 04 00 34 	cmplt_i s1, v1, 1
    bc4c:	62 80 10 c0 	and s3, s2, s1
    bc50:	7e c0 0c 86 	store_16 s3, 816(sp)
    bc54:	5e c0 0c a6 	load_s16 s2, 816(sp)
    bc58:	27 08 00 11 	cmpne_i s1, s7, 2
    bc5c:	21 01 00 f4 	bnz s1, 36 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0xa8>
    bc60:	27 00 00 4f 	movehi s1, 7
    bc64:	21 fc 7f 00 	or s1, s1, 8191
    bc68:	62 80 10 c0 	and s3, s2, s1
    bc6c:	03 16 00 f2 	bz s3, 704 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x354>
    bc70:	3e f0 05 a8 	load_32 s1, 380(sp)
    bc74:	5e d0 05 a8 	load_32 s2, 372(sp)
    bc78:	fd 01 00 f8 	call 2036 <_ZN9librender14TriangleFiller10fillMaskedEiit>
    bc7c:	ac 00 00 f6 	b 688 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x354>
    bc80:	27 00 00 4f 	movehi s1, 7
    bc84:	7e c0 01 88 	store_32 s3, 112(sp)
    bc88:	9e d0 01 88 	store_32 s4, 116(sp)
    bc8c:	e7 f8 ff 05 	add_i s7, s7, -2
    bc90:	be e0 01 88 	store_32 s5, 120(sp)
    bc94:	a1 fc 7f 00 	or s5, s1, 8191
    bc98:	de f0 01 88 	store_32 s6, 124(sp)
    bc9c:	9e 00 02 8e 	store_v v4, 128(sp)
    bca0:	c2 80 12 c0 	and s6, s2, s5
    bca4:	be 00 03 8e 	store_v v5, 192(sp)
    bca8:	3e 00 04 8e 	store_v v1, 256(sp)
    bcac:	1e f0 0a 88 	store_32 s0, 700(sp)
    bcb0:	3e c1 05 88 	store_32 s9, 368(sp)
    bcb4:	e0 03 f0 d0 	move v31, v0
    bcb8:	fe b0 05 88 	store_32 s7, 364(sp)
    bcbc:	06 0a 00 f2 	bz s6, 320 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x224>
    bcc0:	00 04 00 0f 	move s0, 1
    bcc4:	1e 90 05 88 	store_32 s0, 356(sp)
    bcc8:	00 81 b3 c0 	shl s8, s0, s7
    bccc:	00 00 00 0f 	move s0, 0
    bcd0:	1e 00 08 88 	store_32 s0, 512(sp)
    bcd4:	7e a3 05 88 	store_32 s27, 360(sp)
    bcd8:	1e 81 05 88 	store_32 s8, 352(sp)
    bcdc:	0c 00 00 f6 	b 48 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x134>
    bce0:	e0 80 f0 c0 	move s7, s1
    bce4:	3b 00 62 c0 	sub_i s1, s27, s4
    bce8:	48 80 40 c1 	cmplt_i s2, s8, s1
    bcec:	00 fc ff 03 	xor s0, s0, -1
    bcf0:	82 03 00 f4 	bnz s2, 112 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x188>
    bcf4:	00 81 f0 c0 	move s8, s1
    bcf8:	28 04 00 14 	cmplt_i s1, s8, 1
    bcfc:	c6 00 10 c0 	and s6, s6, s0
    bd00:	de e0 05 88 	store_32 s6, 376(sp)
    bd04:	c1 06 00 f4 	bnz s1, 216 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x204>
    bd08:	1a 00 00 f6 	b 104 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x198>
    bd0c:	00 00 e3 c0 	ctz s0, s6
    bd10:	7e 90 05 a8 	load_32 s3, 356(sp)
    bd14:	20 0c 00 01 	and s1, s0, 3
    bd18:	40 08 00 0a 	shr s2, s0, 2
    bd1c:	03 00 b0 c0 	shl s0, s3, s0
    bd20:	7e f0 05 a8 	load_32 s3, 380(sp)
    bd24:	21 80 b3 c0 	shl s1, s1, s7
    bd28:	9e d0 05 a8 	load_32 s4, 372(sp)
    bd2c:	42 80 b3 c0 	shl s2, s2, s7
    bd30:	e0 00 f4 c0 	move s7, s8
    bd34:	41 83 51 c0 	add_i s26, s1, s3
    bd38:	29 00 6d c0 	sub_i s1, s9, s26
    bd3c:	68 80 40 c1 	cmplt_i s3, s8, s1
    bd40:	82 00 52 c0 	add_i s4, s2, s4
    bd44:	43 00 00 f4 	bnz s3, 8 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x174>
    bd48:	e6 ff ff f7 	b -104 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x108>
    bd4c:	3b 00 62 c0 	sub_i s1, s27, s4
    bd50:	48 80 40 c1 	cmplt_i s2, s8, s1
    bd54:	00 fc ff 03 	xor s0, s0, -1
    bd58:	42 00 00 f4 	bnz s2, 8 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x188>
    bd5c:	e6 ff ff f7 	b -104 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x11c>
    bd60:	28 04 00 14 	cmplt_i s1, s8, 1
    bd64:	c6 00 10 c0 	and s6, s6, s0
    bd68:	de e0 05 88 	store_32 s6, 376(sp)
    bd6c:	81 03 00 f4 	bnz s1, 112 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x204>
    bd70:	07 04 00 14 	cmplt_i s0, s7, 1
    bd74:	40 03 00 f4 	bnz s0, 104 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x204>
    bd78:	3e 00 08 a8 	load_32 s1, 512(sp)
    bd7c:	9e 00 07 88 	store_32 s4, 448(sp)
    bd80:	1e 01 06 88 	store_32 s8, 384(sp)
    bd84:	3e 00 09 88 	store_32 s1, 576(sp)
    bd88:	01 00 52 c0 	add_i s0, s1, s4
    bd8c:	1e 00 0b 88 	store_32 s0, 704(sp)
    bd90:	3e 03 08 a8 	load_32 s25, 512(sp)
    bd94:	1e f0 0a a8 	load_32 s0, 700(sp)
    bd98:	39 00 5d c0 	add_i s1, s25, s26
    bd9c:	5e 00 0b a8 	load_32 s2, 704(sp)
    bda0:	60 80 f2 c0 	move s3, s5
    bda4:	00 83 f2 c0 	move s24, s5
    bda8:	60 83 f3 c0 	move s27, s7
    bdac:	b0 01 00 f8 	call 1728 <_ZN9librender14TriangleFiller10fillMaskedEiit>
    bdb0:	39 13 00 05 	add_i s25, s25, 4
    bdb4:	e0 80 fd c0 	move s7, s27
    bdb8:	a0 00 fc c0 	move s5, s24
    bdbc:	19 80 43 c1 	cmplt_i s0, s25, s7
    bdc0:	a0 fe ff f5 	bnz s0, -44 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x1bc>
    bdc4:	3e 00 09 a8 	load_32 s1, 576(sp)
    bdc8:	1e 01 06 a8 	load_32 s8, 384(sp)
    bdcc:	9e 00 07 a8 	load_32 s4, 448(sp)
    bdd0:	21 10 00 05 	add_i s1, s1, 4
    bdd4:	01 00 44 c1 	cmplt_i s0, s1, s8
    bdd8:	60 fd ff f5 	bnz s0, -84 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x1ac>
    bddc:	7e a3 05 a8 	load_32 s27, 360(sp)
    bde0:	3e c1 05 a8 	load_32 s9, 368(sp)
    bde4:	00 80 ff d0 	move v0, v31
    bde8:	fe b0 05 a8 	load_32 s7, 364(sp)
    bdec:	de e0 05 a8 	load_32 s6, 376(sp)
    bdf0:	1e 81 05 a8 	load_32 s8, 352(sp)
    bdf4:	46 00 00 f2 	bz s6, 8 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x224>
    bdf8:	c5 ff ff f7 	b -236 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x134>
    bdfc:	7e 03 0b 8e 	store_v v27, 704(sp)
    be00:	1e d0 01 a8 	load_32 s0, 116(sp)
    be04:	5e 00 02 ae 	load_v v2, 128(sp)
    be08:	3c 00 50 c4 	add_i v1, v28, s0
    be0c:	1e e0 01 a8 	load_32 s0, 120(sp)
    be10:	3e 00 09 8e 	store_v v1, 576(sp)
    be14:	3e c0 01 a8 	load_32 s1, 112(sp)
    be18:	62 00 50 c4 	add_i v3, v2, s0
    be1c:	01 00 00 32 	cmpgt_i s0, v1, 0
    be20:	3e 00 03 ae 	load_v v1, 192(sp)
    be24:	01 00 00 c0 	or s0, s1, s0
    be28:	3e f0 01 a8 	load_32 s1, 124(sp)
    be2c:	7e 00 08 8e 	store_v v3, 512(sp)
    be30:	81 80 50 c4 	add_i v4, v1, s1
    be34:	9e 00 07 8e 	store_v v4, 448(sp)
    be38:	23 00 00 32 	cmpgt_i s1, v3, 0
    be3c:	00 80 00 c0 	or s0, s0, s1
    be40:	24 00 00 32 	cmpgt_i s1, v4, 0
    be44:	00 80 00 c0 	or s0, s0, s1
    be48:	1e 80 0c 86 	store_16 s0, 800(sp)
    be4c:	1e 80 0c a4 	load_u16 s0, 800(sp)
    be50:	1e f3 0a a8 	load_32 s24, 700(sp)
    be54:	20 80 02 c1 	cmpeq_i s1, s0, s5
    be58:	a1 06 00 f4 	bnz s1, 212 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x354>
    be5c:	7a 08 00 29 	ashr v3, v26, 2
    be60:	7e 00 06 8e 	store_v v3, 384(sp)
    be64:	de 0b 00 29 	ashr v30, v30, 2
    be68:	bd 0b 00 29 	ashr v29, v29, 2
    be6c:	9c 0b 00 29 	ashr v28, v28, 2
    be70:	62 0b 00 29 	ashr v27, v2, 2
    be74:	41 0b 00 29 	ashr v26, v1, 2
    be78:	20 83 32 c0 	xor s25, s0, s5
    be7c:	40 07 00 0f 	move s26, 1
    be80:	00 80 ec c0 	ctz s0, s25
    be84:	7e f0 05 a8 	load_32 s3, 380(sp)
    be88:	5a 00 b0 c0 	shl s2, s26, s0
    be8c:	20 0c 00 01 	and s1, s0, 3
    be90:	21 80 b3 c0 	shl s1, s1, s7
    be94:	41 81 51 c0 	add_i s10, s1, s3
    be98:	22 fc ff 03 	xor s1, s2, -1
    be9c:	39 83 10 c0 	and s25, s25, s1
    bea0:	4a 80 34 c1 	cmpge_i s2, s10, s9
    bea4:	22 04 00 f4 	bnz s2, 132 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x350>
    bea8:	20 08 00 0a 	shr s1, s0, 2
    beac:	5e d0 05 a8 	load_32 s2, 372(sp)
    beb0:	21 80 b3 c0 	shl s1, s1, s7
    beb4:	01 01 51 c0 	add_i s8, s1, s2
    beb8:	28 80 3d c1 	cmpge_i s1, s8, s27
    bebc:	61 03 00 f4 	bnz s1, 108 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x350>
    bec0:	20 00 a0 c5 	getlane s1, v0, s0
    bec4:	1e 00 0b ae 	load_v v0, 704(sp)
    bec8:	40 00 a0 c5 	getlane s2, v0, s0
    becc:	1e 00 04 ae 	load_v v0, 256(sp)
    bed0:	60 00 a0 c5 	getlane s3, v0, s0
    bed4:	1e 00 09 ae 	load_v v0, 576(sp)
    bed8:	80 00 a0 c5 	getlane s4, v0, s0
    bedc:	1e 00 08 ae 	load_v v0, 512(sp)
    bee0:	a0 00 a0 c5 	getlane s5, v0, s0
    bee4:	1e 00 07 ae 	load_v v0, 448(sp)
    bee8:	7e 33 00 88 	store_32 s27, 12(sp)
    beec:	3e 21 00 88 	store_32 s9, 8(sp)
    bef0:	1e 11 00 88 	store_32 s8, 4(sp)
    bef4:	c0 00 a0 c5 	getlane s6, v0, s0
    bef8:	5e 01 00 88 	store_32 s10, (sp)
    befc:	00 00 fc c0 	move s0, s24
    bf00:	1e 00 06 ae 	load_v v0, 384(sp)
    bf04:	20 00 ff d0 	move v1, v30
    bf08:	40 80 fe d0 	move v2, v29
    bf0c:	60 00 fe d0 	move v3, v28
    bf10:	80 80 fd d0 	move v4, v27
    bf14:	a0 00 fd d0 	move v5, v26
    bf18:	30 ff ff f9 	call -832 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii>
    bf1c:	fe b0 05 a8 	load_32 s7, 364(sp)
    bf20:	00 80 ff d0 	move v0, v31
    bf24:	3e c1 05 a8 	load_32 s9, 368(sp)
    bf28:	d9 fa ff f5 	bnz s25, -168 <_ZN9librender12_GLOBAL__N_113subdivideTileERNS_14TriangleFillerEiiiiiiDv16_iS3_S3_S3_S3_S3_iiiii+0x2a8>
    bf2c:	fe 03 0d ae 	load_v v31, 832(sp)
    bf30:	de 03 0e ae 	load_v v30, 896(sp)
    bf34:	be 03 0f ae 	load_v v29, 960(sp)
    bf38:	9e 03 10 ae 	load_v v28, 1024(sp)
    bf3c:	7e 03 11 ae 	load_v v27, 1088(sp)
    bf40:	5e 03 12 ae 	load_v v26, 1152(sp)
    bf44:	fe b3 13 a8 	load_32 ra, 1260(sp)
    bf48:	7e c3 13 a8 	load_32 s27, 1264(sp)
    bf4c:	5e d3 13 a8 	load_32 s26, 1268(sp)
    bf50:	3e e3 13 a8 	load_32 s25, 1272(sp)
    bf54:	1e f3 13 a8 	load_32 s24, 1276(sp)
    bf58:	de 03 14 05 	add_i sp, sp, 1280
    bf5c:	1f 00 00 f0 	ret

000000000000bf60 _ZN9librender14TriangleFillerC2EPNS_12RenderTargetE:
    bf60:	40 00 00 0f 	move s2, 0
    bf64:	40 00 00 88 	store_32 s2, (s0)
    bf68:	20 10 00 88 	store_32 s1, 4(s0)
    bf6c:	80 00 00 4f 	movehi s4, 0
    bf70:	21 00 00 a8 	load_32 s1, (s1)
    bf74:	84 c0 05 00 	or s4, s4, 368
    bf78:	61 00 03 a8 	load_32 s3, 192(s1)
    bf7c:	84 00 00 a8 	load_32 s4, (s4)
    bf80:	60 80 a1 c2 	itof s3, s3
    bf84:	a0 80 c1 c1 	reciprocal s5, s3
    bf88:	c5 80 21 c2 	mul_f s6, s5, s3
    bf8c:	c4 00 13 c2 	sub_f s6, s4, s6
    bf90:	a5 00 23 c2 	mul_f s5, s5, s6
    bf94:	65 80 21 c2 	mul_f s3, s5, s3
    bf98:	64 80 11 c2 	sub_f s3, s4, s3
    bf9c:	65 80 21 c2 	mul_f s3, s5, s3
    bfa0:	63 00 22 c2 	mul_f s3, s3, s4
    bfa4:	60 20 00 88 	store_32 s3, 8(s0)
    bfa8:	21 10 03 a8 	load_32 s1, 196(s1)
    bfac:	20 80 a0 c2 	itof s1, s1
    bfb0:	60 80 c0 c1 	reciprocal s3, s1
    bfb4:	a3 80 20 c2 	mul_f s5, s3, s1
    bfb8:	a4 80 12 c2 	sub_f s5, s4, s5
    bfbc:	63 80 22 c2 	mul_f s3, s3, s5
    bfc0:	23 80 20 c2 	mul_f s1, s3, s1
    bfc4:	24 80 10 c2 	sub_f s1, s4, s1
    bfc8:	23 80 20 c2 	mul_f s1, s3, s1
    bfcc:	21 00 22 c2 	mul_f s1, s1, s4
    bfd0:	20 30 00 88 	store_32 s1, 12(s0)
    bfd4:	40 40 00 88 	store_32 s2, 16(s0)
    bfd8:	40 50 00 88 	store_32 s2, 20(s0)
    bfdc:	40 60 00 88 	store_32 s2, 24(s0)
    bfe0:	40 70 00 82 	store_8 s2, 28(s0)
    bfe4:	40 80 00 88 	store_32 s2, 32(s0)
    bfe8:	40 90 00 88 	store_32 s2, 36(s0)
    bfec:	40 a0 00 88 	store_32 s2, 40(s0)
    bff0:	40 b0 00 88 	store_32 s2, 44(s0)
    bff4:	40 c0 00 82 	store_8 s2, 48(s0)
    bff8:	40 d0 00 88 	store_32 s2, 52(s0)
    bffc:	40 e0 00 88 	store_32 s2, 56(s0)
    c000:	40 f0 00 88 	store_32 s2, 60(s0)
    c004:	40 00 01 88 	store_32 s2, 64(s0)
    c008:	40 10 01 82 	store_8 s2, 68(s0)
    c00c:	40 20 01 88 	store_32 s2, 72(s0)
    c010:	40 30 01 88 	store_32 s2, 76(s0)
    c014:	40 40 01 88 	store_32 s2, 80(s0)
    c018:	40 50 01 88 	store_32 s2, 84(s0)
    c01c:	40 60 01 82 	store_8 s2, 88(s0)
    c020:	40 b0 01 82 	store_8 s2, 108(s0)
    c024:	40 a0 01 88 	store_32 s2, 104(s0)
    c028:	40 90 01 88 	store_32 s2, 100(s0)
    c02c:	40 80 01 88 	store_32 s2, 96(s0)
    c030:	40 70 01 88 	store_32 s2, 92(s0)
    c034:	40 c0 01 88 	store_32 s2, 112(s0)
    c038:	40 d0 01 88 	store_32 s2, 116(s0)
    c03c:	40 e0 01 88 	store_32 s2, 120(s0)
    c040:	40 f0 01 88 	store_32 s2, 124(s0)
    c044:	40 00 02 82 	store_8 s2, 128(s0)
    c048:	40 10 02 88 	store_32 s2, 132(s0)
    c04c:	40 20 02 88 	store_32 s2, 136(s0)
    c050:	40 30 02 88 	store_32 s2, 140(s0)
    c054:	40 40 02 88 	store_32 s2, 144(s0)
    c058:	40 50 02 82 	store_8 s2, 148(s0)
    c05c:	40 60 02 88 	store_32 s2, 152(s0)
    c060:	40 70 02 88 	store_32 s2, 156(s0)
    c064:	40 80 02 88 	store_32 s2, 160(s0)
    c068:	40 90 02 88 	store_32 s2, 164(s0)
    c06c:	40 a0 02 82 	store_8 s2, 168(s0)
    c070:	40 f0 02 82 	store_8 s2, 188(s0)
    c074:	40 e0 02 88 	store_32 s2, 184(s0)
    c078:	40 d0 02 88 	store_32 s2, 180(s0)
    c07c:	40 c0 02 88 	store_32 s2, 176(s0)
    c080:	40 b0 02 88 	store_32 s2, 172(s0)
    c084:	40 40 03 82 	store_8 s2, 208(s0)
    c088:	40 30 03 88 	store_32 s2, 204(s0)
    c08c:	40 20 03 88 	store_32 s2, 200(s0)
    c090:	40 10 03 88 	store_32 s2, 196(s0)
    c094:	40 00 03 88 	store_32 s2, 192(s0)
    c098:	40 90 03 82 	store_8 s2, 228(s0)
    c09c:	40 80 03 88 	store_32 s2, 224(s0)
    c0a0:	40 70 03 88 	store_32 s2, 220(s0)
    c0a4:	40 60 03 88 	store_32 s2, 216(s0)
    c0a8:	40 50 03 88 	store_32 s2, 212(s0)
    c0ac:	40 e0 03 82 	store_8 s2, 248(s0)
    c0b0:	40 d0 03 88 	store_32 s2, 244(s0)
    c0b4:	40 c0 03 88 	store_32 s2, 240(s0)
    c0b8:	40 b0 03 88 	store_32 s2, 236(s0)
    c0bc:	40 a0 03 88 	store_32 s2, 232(s0)
    c0c0:	40 30 04 82 	store_8 s2, 268(s0)
    c0c4:	40 20 04 88 	store_32 s2, 264(s0)
    c0c8:	40 10 04 88 	store_32 s2, 260(s0)
    c0cc:	40 00 04 88 	store_32 s2, 256(s0)
    c0d0:	40 f0 03 88 	store_32 s2, 252(s0)
    c0d4:	40 80 04 82 	store_8 s2, 288(s0)
    c0d8:	40 70 04 88 	store_32 s2, 284(s0)
    c0dc:	40 60 04 88 	store_32 s2, 280(s0)
    c0e0:	40 50 04 88 	store_32 s2, 276(s0)
    c0e4:	40 40 04 88 	store_32 s2, 272(s0)
    c0e8:	40 d0 04 82 	store_8 s2, 308(s0)
    c0ec:	40 c0 04 88 	store_32 s2, 304(s0)
    c0f0:	40 b0 04 88 	store_32 s2, 300(s0)
    c0f4:	40 a0 04 88 	store_32 s2, 296(s0)
    c0f8:	40 90 04 88 	store_32 s2, 292(s0)
    c0fc:	40 20 05 82 	store_8 s2, 328(s0)
    c100:	40 10 05 88 	store_32 s2, 324(s0)
    c104:	40 00 05 88 	store_32 s2, 320(s0)
    c108:	40 f0 04 88 	store_32 s2, 316(s0)
    c10c:	40 e0 04 88 	store_32 s2, 312(s0)
    c110:	40 60 05 88 	store_32 s2, 344(s0)
    c114:	40 50 05 88 	store_32 s2, 340(s0)
    c118:	40 40 05 88 	store_32 s2, 336(s0)
    c11c:	40 30 05 88 	store_32 s2, 332(s0)
    c120:	40 70 05 88 	store_32 s2, 348(s0)
    c124:	1f 00 00 f0 	ret

000000000000c128 _ZN9librender14TriangleFiller13setUpTriangleEPKNS_11RenderStateEfffffffff:
    c128:	1e 21 00 a8 	load_32 s8, 8(sp)
    c12c:	65 01 11 c2 	sub_f s11, s5, s2
    c130:	3e 11 00 a8 	load_32 s9, 4(sp)
    c134:	86 81 11 c2 	sub_f s12, s6, s3
    c138:	5e 01 00 a8 	load_32 s10, (sp)
    c13c:	20 00 00 88 	store_32 s1, (s0)
    c140:	20 00 00 4f 	movehi s1, 0
    c144:	40 b0 05 88 	store_32 s2, 364(s0)
    c148:	29 81 11 c2 	sub_f s9, s9, s3
    c14c:	60 c0 05 88 	store_32 s3, 368(s0)
    c150:	aa 00 11 c2 	sub_f s5, s10, s2
    c154:	80 80 05 88 	store_32 s4, 352(s0)
    c158:	e0 90 05 88 	store_32 s7, 356(s0)
    c15c:	00 a1 05 88 	store_32 s8, 360(s0)
    c160:	49 81 25 c2 	mul_f s10, s9, s11
    c164:	c5 00 26 c2 	mul_f s6, s5, s12
    c168:	4a 01 13 c2 	sub_f s10, s10, s6
    c16c:	c1 c0 05 00 	or s6, s1, 368
    c170:	26 00 00 a8 	load_32 s1, (s6)
    c174:	a0 01 c5 c1 	reciprocal s13, s10
    c178:	cd 01 25 c2 	mul_f s14, s13, s10
    c17c:	c1 01 17 c2 	sub_f s14, s1, s14
    c180:	ad 01 27 c2 	mul_f s13, s13, s14
    c184:	c4 81 13 c3 	cmpne_f s14, s4, s7
    c188:	4d 01 25 c2 	mul_f s10, s13, s10
    c18c:	21 00 15 c2 	sub_f s1, s1, s10
    c190:	4d 81 20 c2 	mul_f s10, s13, s1
    c194:	a0 01 80 4f 	movehi s13, 262144
    c198:	a5 00 25 c2 	mul_f s5, s5, s10
    c19c:	8c 01 25 c2 	mul_f s12, s12, s10
    c1a0:	2a 80 24 c2 	mul_f s1, s10, s9
    c1a4:	2a 81 25 c2 	mul_f s9, s10, s11
    c1a8:	a5 80 36 c0 	xor s5, s5, s13
    c1ac:	4c 81 36 c0 	xor s10, s12, s13
    c1b0:	20 e0 05 88 	store_32 s1, 376(s0)
    c1b4:	a0 00 06 88 	store_32 s5, 384(s0)
    c1b8:	40 f1 05 88 	store_32 s10, 380(s0)
    c1bc:	20 11 06 88 	store_32 s9, 388(s0)
    c1c0:	0e 01 00 f4 	bnz s14, 32 <_ZN9librender14TriangleFiller13setUpTriangleEPKNS_11RenderStateEfffffffff+0xb8>
    c1c4:	64 01 14 c3 	cmpne_f s11, s4, s8
    c1c8:	cb 00 00 f4 	bnz s11, 24 <_ZN9librender14TriangleFiller13setUpTriangleEPKNS_11RenderStateEfffffffff+0xb8>
    c1cc:	20 00 00 0f 	move s1, 0
    c1d0:	20 d0 05 82 	store_8 s1, 372(s0)
    c1d4:	20 00 00 0f 	move s1, 0
    c1d8:	20 70 05 88 	store_32 s1, 348(s0)
    c1dc:	1f 00 00 f0 	ret
    c1e0:	60 01 c4 c1 	reciprocal s11, s8
    c1e4:	80 05 00 0f 	move s12, 1
    c1e8:	80 d1 05 82 	store_8 s12, 372(s0)
    c1ec:	80 81 c3 c1 	reciprocal s12, s7
    c1f0:	c6 00 00 a8 	load_32 s6, (s6)
    c1f4:	a0 01 c2 c1 	reciprocal s13, s4
    c1f8:	cb 01 24 c2 	mul_f s14, s11, s8
    c1fc:	c6 01 17 c2 	sub_f s14, s6, s14
    c200:	6b 01 27 c2 	mul_f s11, s11, s14
    c204:	cc 81 23 c2 	mul_f s14, s12, s7
    c208:	c6 01 17 c2 	sub_f s14, s6, s14
    c20c:	8c 01 27 c2 	mul_f s12, s12, s14
    c210:	cd 01 22 c2 	mul_f s14, s13, s4
    c214:	c6 01 17 c2 	sub_f s14, s6, s14
    c218:	ad 01 27 c2 	mul_f s13, s13, s14
    c21c:	0b 01 24 c2 	mul_f s8, s11, s8
    c220:	06 01 14 c2 	sub_f s8, s6, s8
    c224:	0b 01 24 c2 	mul_f s8, s11, s8
    c228:	ec 80 23 c2 	mul_f s7, s12, s7
    c22c:	e6 80 13 c2 	sub_f s7, s6, s7
    c230:	ec 80 23 c2 	mul_f s7, s12, s7
    c234:	8d 00 22 c2 	mul_f s4, s13, s4
    c238:	86 00 12 c2 	sub_f s4, s6, s4
    c23c:	8d 00 22 c2 	mul_f s4, s13, s4
    c240:	c8 00 12 c2 	sub_f s6, s8, s4
    c244:	09 01 23 c2 	mul_f s8, s9, s6
    c248:	e7 00 12 c2 	sub_f s7, s7, s4
    c24c:	21 80 23 c2 	mul_f s1, s1, s7
    c250:	c6 00 25 c2 	mul_f s6, s6, s10
    c254:	a7 80 22 c2 	mul_f s5, s7, s5
    c258:	a8 80 02 c2 	add_f s5, s8, s5
    c25c:	26 80 00 c2 	add_f s1, s6, s1
    c260:	65 80 21 c2 	mul_f s3, s5, s3
    c264:	20 40 00 88 	store_32 s1, 16(s0)
    c268:	a0 50 00 88 	store_32 s5, 20(s0)
    c26c:	41 00 21 c2 	mul_f s2, s1, s2
    c270:	43 00 01 c2 	add_f s2, s3, s2
    c274:	44 00 11 c2 	sub_f s2, s4, s2
    c278:	40 60 00 88 	store_32 s2, 24(s0)
    c27c:	20 00 00 0f 	move s1, 0
    c280:	20 70 05 88 	store_32 s1, 348(s0)
    c284:	1f 00 00 f0 	ret

000000000000c288 _ZN9librender14TriangleFiller17setUpInterpolatorERNS_18LinearInterpolatorEfff:
    c288:	a0 e0 05 a8 	load_32 s5, 376(s0)
    c28c:	84 00 11 c2 	sub_f s4, s4, s2
    c290:	c0 f0 05 a8 	load_32 s6, 380(s0)
    c294:	63 00 11 c2 	sub_f s3, s3, s2
    c298:	e0 00 06 a8 	load_32 s7, 384(s0)
    c29c:	00 11 06 a8 	load_32 s8, 388(s0)
    c2a0:	e7 80 21 c2 	mul_f s7, s7, s3
    c2a4:	08 01 22 c2 	mul_f s8, s8, s4
    c2a8:	86 00 22 c2 	mul_f s4, s6, s4
    c2ac:	c0 b0 05 a8 	load_32 s6, 364(s0)
    c2b0:	00 c0 05 a8 	load_32 s0, 368(s0)
    c2b4:	65 80 21 c2 	mul_f s3, s5, s3
    c2b8:	e8 80 03 c2 	add_f s7, s8, s7
    c2bc:	00 80 23 c2 	mul_f s0, s0, s7
    c2c0:	64 80 01 c2 	add_f s3, s4, s3
    c2c4:	86 80 21 c2 	mul_f s4, s6, s3
    c2c8:	61 00 00 88 	store_32 s3, (s1)
    c2cc:	e1 10 00 88 	store_32 s7, 4(s1)
    c2d0:	00 00 02 c2 	add_f s0, s0, s4
    c2d4:	02 00 10 c2 	sub_f s0, s2, s0
    c2d8:	01 20 00 88 	store_32 s0, 8(s1)
    c2dc:	1f 00 00 f0 	ret

000000000000c2e0 _ZN9librender14TriangleFiller10setUpParamEfff:
    c2e0:	81 00 11 c3 	cmpne_f s4, s1, s2
    c2e4:	84 01 00 f4 	bnz s4, 48 <_ZN9librender14TriangleFiller10setUpParamEfff+0x34>
    c2e8:	81 80 11 c3 	cmpne_f s4, s1, s3
    c2ec:	44 01 00 f4 	bnz s4, 40 <_ZN9librender14TriangleFiller10setUpParamEfff+0x34>
    c2f0:	80 70 05 a8 	load_32 s4, 348(s0)
    c2f4:	60 04 00 0f 	move s3, 1
    c2f8:	44 50 00 07 	mull_i s2, s4, 20
    c2fc:	40 00 51 c0 	add_i s2, s0, s2
    c300:	62 70 00 82 	store_8 s3, 28(s2)
    c304:	22 80 00 88 	store_32 s1, 32(s2)
    c308:	24 04 00 05 	add_i s1, s4, 1
    c30c:	20 70 05 88 	store_32 s1, 348(s0)
    c310:	1f 00 00 f0 	ret
    c314:	e0 d0 05 a0 	load_u8 s7, 372(s0)
    c318:	c0 00 00 0f 	move s6, 0
    c31c:	80 70 05 a8 	load_32 s4, 348(s0)
    c320:	a4 50 00 07 	mull_i s5, s4, 20
    c324:	a0 80 52 c0 	add_i s5, s0, s5
    c328:	c5 70 00 82 	store_8 s6, 28(s5)
    c32c:	c5 90 00 05 	add_i s6, s5, 36
    c330:	e7 06 00 f2 	bz s7, 220 <_ZN9librender14TriangleFiller10setUpParamEfff+0x12c>
    c334:	e0 00 00 4f 	movehi s7, 0
    c338:	00 81 05 a8 	load_32 s8, 352(s0)
    c33c:	e7 c0 05 00 	or s7, s7, 368
    c340:	40 01 c4 c1 	reciprocal s10, s8
    c344:	e7 00 00 a8 	load_32 s7, (s7)
    c348:	20 91 05 a8 	load_32 s9, 356(s0)
    c34c:	60 a1 05 a8 	load_32 s11, 360(s0)
    c350:	80 81 c4 c1 	reciprocal s12, s9
    c354:	a0 81 c5 c1 	reciprocal s13, s11
    c358:	ca 01 24 c2 	mul_f s14, s10, s8
    c35c:	c7 01 17 c2 	sub_f s14, s7, s14
    c360:	4a 01 27 c2 	mul_f s10, s10, s14
    c364:	cc 81 24 c2 	mul_f s14, s12, s9
    c368:	c7 01 17 c2 	sub_f s14, s7, s14
    c36c:	8c 01 27 c2 	mul_f s12, s12, s14
    c370:	cd 81 25 c2 	mul_f s14, s13, s11
    c374:	c7 01 17 c2 	sub_f s14, s7, s14
    c378:	ad 01 27 c2 	mul_f s13, s13, s14
    c37c:	0a 01 24 c2 	mul_f s8, s10, s8
    c380:	07 01 14 c2 	sub_f s8, s7, s8
    c384:	0a 01 24 c2 	mul_f s8, s10, s8
    c388:	21 00 24 c2 	mul_f s1, s1, s8
    c38c:	0c 81 24 c2 	mul_f s8, s12, s9
    c390:	07 01 14 c2 	sub_f s8, s7, s8
    c394:	2d 81 25 c2 	mul_f s9, s13, s11
    c398:	e7 80 14 c2 	sub_f s7, s7, s9
    c39c:	ed 80 23 c2 	mul_f s7, s13, s7
    c3a0:	63 80 23 c2 	mul_f s3, s3, s7
    c3a4:	e0 e0 05 a8 	load_32 s7, 376(s0)
    c3a8:	20 f1 05 a8 	load_32 s9, 380(s0)
    c3ac:	0c 01 24 c2 	mul_f s8, s12, s8
    c3b0:	40 01 06 a8 	load_32 s10, 384(s0)
    c3b4:	42 00 24 c2 	mul_f s2, s2, s8
    c3b8:	60 11 06 a8 	load_32 s11, 388(s0)
    c3bc:	63 80 10 c2 	sub_f s3, s3, s1
    c3c0:	0b 81 21 c2 	mul_f s8, s11, s3
    c3c4:	69 80 21 c2 	mul_f s3, s9, s3
    c3c8:	20 b1 05 a8 	load_32 s9, 364(s0)
    c3cc:	60 c1 05 a8 	load_32 s11, 368(s0)
    c3d0:	42 80 10 c2 	sub_f s2, s2, s1
    c3d4:	4a 01 21 c2 	mul_f s10, s10, s2
    c3d8:	47 00 21 c2 	mul_f s2, s7, s2
    c3dc:	08 01 05 c2 	add_f s8, s8, s10
    c3e0:	4b 01 24 c2 	mul_f s10, s11, s8
    c3e4:	43 00 01 c2 	add_f s2, s3, s2
    c3e8:	69 00 21 c2 	mul_f s3, s9, s2
    c3ec:	46 00 00 88 	store_32 s2, (s6)
    c3f0:	05 a1 00 88 	store_32 s8, 40(s5)
    c3f4:	6a 80 01 c2 	add_f s3, s10, s3
    c3f8:	21 80 11 c2 	sub_f s1, s1, s3
    c3fc:	25 b0 00 88 	store_32 s1, 44(s5)
    c400:	24 04 00 05 	add_i s1, s4, 1
    c404:	20 70 05 88 	store_32 s1, 348(s0)
    c408:	1f 00 00 f0 	ret
    c40c:	e0 e0 05 a8 	load_32 s7, 376(s0)
    c410:	63 80 10 c2 	sub_f s3, s3, s1
    c414:	00 f1 05 a8 	load_32 s8, 380(s0)
    c418:	42 80 10 c2 	sub_f s2, s2, s1
    c41c:	20 01 06 a8 	load_32 s9, 384(s0)
    c420:	40 11 06 a8 	load_32 s10, 388(s0)
    c424:	29 01 21 c2 	mul_f s9, s9, s2
    c428:	4a 81 21 c2 	mul_f s10, s10, s3
    c42c:	68 80 21 c2 	mul_f s3, s8, s3
    c430:	00 b1 05 a8 	load_32 s8, 364(s0)
    c434:	60 c1 05 a8 	load_32 s11, 368(s0)
    c438:	47 00 21 c2 	mul_f s2, s7, s2
    c43c:	2a 81 04 c2 	add_f s9, s10, s9
    c440:	4b 81 24 c2 	mul_f s10, s11, s9
    c444:	43 00 01 c2 	add_f s2, s3, s2
    c448:	68 00 21 c2 	mul_f s3, s8, s2
    c44c:	46 00 00 88 	store_32 s2, (s6)
    c450:	25 a1 00 88 	store_32 s9, 40(s5)
    c454:	6a 80 01 c2 	add_f s3, s10, s3
    c458:	21 80 11 c2 	sub_f s1, s1, s3
    c45c:	25 b0 00 88 	store_32 s1, 44(s5)
    c460:	24 04 00 05 	add_i s1, s4, 1
    c464:	20 70 05 88 	store_32 s1, 348(s0)
    c468:	1f 00 00 f0 	ret

000000000000c46c _ZN9librender14TriangleFiller10fillMaskedEiit:
    c46c:	de 03 e8 05 	add_i sp, sp, -1536
    c470:	1e f3 17 88 	store_32 s24, 1532(sp)
    c474:	3e e3 17 88 	store_32 s25, 1528(sp)
    c478:	5e d3 17 88 	store_32 s26, 1524(sp)
    c47c:	7e c3 17 88 	store_32 s27, 1520(sp)
    c480:	fe b3 17 88 	store_32 ra, 1516(sp)
    c484:	60 03 f0 c0 	move s27, s0
    c488:	a0 00 00 4f 	movehi s5, 0
    c48c:	1b 10 00 a8 	load_32 s0, 4(s27)
    c490:	05 13 05 00 	or s24, s5, 324
    c494:	80 00 00 a8 	load_32 s4, (s0)
    c498:	20 83 f0 c0 	move s25, s1
    c49c:	20 00 00 4f 	movehi s1, 0
    c4a0:	00 81 ac c2 	itof s8, s25
    c4a4:	21 40 05 00 	or s1, s1, 336
    c4a8:	04 00 01 ae 	load_v v0, 64(s4)
    c4ac:	db 20 00 a8 	load_32 s6, 8(s27)
    c4b0:	21 00 00 a8 	load_32 s1, (s1)
    c4b4:	bb 30 00 a8 	load_32 s5, 12(s27)
    c4b8:	f8 00 00 a8 	load_32 s7, (s24)
    c4bc:	06 01 24 c2 	mul_f s8, s6, s8
    c4c0:	40 83 f1 c0 	move s26, s3
    c4c4:	c0 00 a1 c2 	itof s6, s2
    c4c8:	24 00 02 ae 	load_v v1, 128(s4)
    c4cc:	7b d0 05 a0 	load_u8 s3, 372(s27)
    c4d0:	a5 00 23 c2 	mul_f s5, s5, s6
    c4d4:	a7 80 12 c2 	sub_f s5, s7, s5
    c4d8:	28 80 00 c2 	add_f s1, s8, s1
    c4dc:	00 80 00 c6 	add_f v0, v0, s1
    c4e0:	40 80 f2 c4 	move v2, s5
    c4e4:	22 80 10 d2 	sub_f v1, v2, v1
    c4e8:	e3 02 00 f2 	bz s3, 92 <_ZN9librender14TriangleFiller10fillMaskedEiit+0xd8>
    c4ec:	3b 40 00 a8 	load_32 s1, 16(s27)
    c4f0:	7b 50 00 a8 	load_32 s3, 20(s27)
    c4f4:	60 80 20 c6 	mul_f v3, v0, s1
    c4f8:	3b 60 00 a8 	load_32 s1, 24(s27)
    c4fc:	41 80 21 c6 	mul_f v2, v1, s3
    c500:	42 80 01 d2 	add_f v2, v2, v3
    c504:	42 80 00 c6 	add_f v2, v2, s1
    c508:	20 00 00 4f 	movehi s1, 0
    c50c:	21 c0 05 00 	or s1, s1, 368
    c510:	21 00 00 a8 	load_32 s1, (s1)
    c514:	60 00 c1 d1 	reciprocal v3, v2
    c518:	80 80 f0 c4 	move v4, s1
    c51c:	a3 00 21 d2 	mul_f v5, v3, v2
    c520:	a4 80 12 d2 	sub_f v5, v4, v5
    c524:	63 80 22 d2 	mul_f v3, v3, v5
    c528:	43 00 21 d2 	mul_f v2, v3, v2
    c52c:	44 00 11 d2 	sub_f v2, v4, v2
    c530:	43 00 21 d2 	mul_f v2, v3, v2
    c534:	3b 00 00 a8 	load_32 s1, (s27)
    c538:	21 00 00 a0 	load_u8 s1, (s1)
    c53c:	e1 02 00 f2 	bz s1, 92 <_ZN9librender14TriangleFiller10fillMaskedEiit+0x12c>
    c540:	06 00 00 f6 	b 24 <_ZN9librender14TriangleFiller10fillMaskedEiit+0xec>
    c544:	3b 80 05 a8 	load_32 s1, 352(s27)
    c548:	40 80 f0 c4 	move v2, s1
    c54c:	3b 00 00 a8 	load_32 s1, (s27)
    c550:	21 00 00 a0 	load_u8 s1, (s1)
    c554:	21 02 00 f2 	bz s1, 68 <_ZN9librender14TriangleFiller10fillMaskedEiit+0x12c>
    c558:	00 10 00 a8 	load_32 s0, 4(s0)
    c55c:	39 08 00 0b 	shl s1, s25, 2
    c560:	60 00 00 ae 	load_v v3, (s0)
    c564:	00 20 03 a8 	load_32 s0, 200(s0)
    c568:	63 80 50 c4 	add_i v3, v3, s1
    c56c:	00 00 71 c0 	mull_i s0, s0, s2
    c570:	63 00 50 c4 	add_i v3, v3, s0
    c574:	83 00 00 ba 	load_gath v4, (v3)
    c578:	02 00 c2 d2 	cmpgt_f s0, v2, v4
    c57c:	1e c0 02 86 	store_16 s0, 176(sp)
    c580:	1e c0 02 a4 	load_u16 s0, 176(sp)
    c584:	40 03 1d c0 	and s26, s0, s26
    c588:	9a 16 00 f2 	bz s26, 720 <_ZN9librender14TriangleFiller10fillMaskedEiit+0x3ec>
    c58c:	5e 83 02 86 	store_16 s26, 160(sp)
    c590:	1e 80 02 a4 	load_u16 s0, 160(sp)
    c594:	43 00 00 9c 	store_scat_mask v2, s0, (v3)
    c598:	1b 70 05 a8 	load_32 s0, 348(s27)
    c59c:	20 04 00 14 	cmplt_i s1, s0, 1
    c5a0:	61 03 00 f4 	bnz s1, 108 <_ZN9librender14TriangleFiller10fillMaskedEiit+0x1a0>
    c5a4:	20 00 00 0f 	move s1, 0
    c5a8:	fe 00 07 05 	add_i s7, sp, 448
    c5ac:	61 50 00 07 	mull_i s3, s1, 20
    c5b0:	7b 80 51 c0 	add_i s3, s27, s3
    c5b4:	83 70 00 a0 	load_u8 s4, 28(s3)
    c5b8:	84 00 00 f2 	bz s4, 16 <_ZN9librender14TriangleFiller10fillMaskedEiit+0x15c>
    c5bc:	63 80 00 a8 	load_32 s3, 32(s3)
    c5c0:	60 80 f1 c4 	move v3, s3
    c5c4:	0c 00 00 f6 	b 48 <_ZN9librender14TriangleFiller10fillMaskedEiit+0x188>
    c5c8:	9b d0 05 a0 	load_u8 s4, 372(s27)
    c5cc:	a3 90 00 a8 	load_32 s5, 36(s3)
    c5d0:	c3 a0 00 a8 	load_32 s6, 40(s3)
    c5d4:	63 b0 00 a8 	load_32 s3, 44(s3)
    c5d8:	84 00 00 10 	cmpeq_i s4, s4, 0
    c5dc:	80 80 22 c6 	mul_f v4, v0, s5
    c5e0:	61 00 23 c6 	mul_f v3, v1, s6
    c5e4:	63 00 02 d2 	add_f v3, v3, v4
    c5e8:	63 80 01 c6 	add_f v3, v3, s3
    c5ec:	44 00 00 f4 	bnz s4, 8 <_ZN9librender14TriangleFiller10fillMaskedEiit+0x188>
    c5f0:	63 00 21 d2 	mul_f v3, v3, v2
    c5f4:	61 18 00 0b 	shl s3, s1, 6
    c5f8:	21 04 00 05 	add_i s1, s1, 1
    c5fc:	67 80 51 c0 	add_i s3, s7, s3
    c600:	81 00 40 c1 	cmplt_i s4, s1, s0
    c604:	63 00 00 8e 	store_v v3, (s3)
    c608:	24 fd ff f5 	bnz s4, -92 <_ZN9librender14TriangleFiller10fillMaskedEiit+0x140>
    c60c:	5e f0 01 88 	store_32 s2, 124(sp)
    c610:	3b 00 00 a8 	load_32 s1, (s27)
    c614:	01 60 00 a8 	load_32 s0, 24(s1)
    c618:	81 70 00 05 	add_i s4, s1, 28
    c61c:	61 30 00 a8 	load_32 s3, 12(s1)
    c620:	3e 00 03 05 	add_i s1, sp, 192
    c624:	40 00 00 a8 	load_32 s2, (s0)
    c628:	c2 30 00 a8 	load_32 s6, 12(s2)
    c62c:	5e 00 07 05 	add_i s2, sp, 448
    c630:	a0 00 fd c0 	move s5, s26
    c634:	c6 00 00 fc 	call s6
    c638:	1b 10 00 a8 	load_32 s0, 4(s27)
    c63c:	00 00 00 a8 	load_32 s0, (s0)
    c640:	20 50 03 a8 	load_32 s1, 212(s0)
    c644:	c1 00 00 f2 	bz s1, 24 <_ZN9librender14TriangleFiller10fillMaskedEiit+0x1f0>
    c648:	21 04 00 10 	cmpeq_i s1, s1, 1
    c64c:	41 00 00 f4 	bnz s1, 8 <_ZN9librender14TriangleFiller10fillMaskedEiit+0x1e8>
    c650:	89 00 00 f6 	b 548 <_ZN9librender14TriangleFiller10fillMaskedEiit+0x408>
    c654:	1e 00 03 ae 	load_v v0, 192(sp)
    c658:	76 00 00 f6 	b 472 <_ZN9librender14TriangleFiller10fillMaskedEiit+0x3c4>
    c65c:	1e 00 03 ae 	load_v v0, 192(sp)
    c660:	40 00 00 4f 	movehi s2, 0
    c664:	98 00 00 a8 	load_32 s4, (s24)
    c668:	20 00 00 4f 	movehi s1, 0
    c66c:	a0 00 00 4f 	movehi s5, 0
    c670:	42 a0 05 00 	or s2, s2, 360
    c674:	61 60 05 00 	or s3, s1, 344
    c678:	00 01 c2 c6 	cmpgt_f s8, v0, s4
    c67c:	25 10 06 00 	or s1, s5, 388
    c680:	a3 00 00 a8 	load_32 s5, (s3)
    c684:	c2 00 00 a8 	load_32 s6, (s2)
    c688:	e1 00 00 a8 	load_32 s7, (s1)
    c68c:	3e 00 04 ae 	load_v v1, 256(sp)
    c690:	5e 00 05 ae 	load_v v2, 320(sp)
    c694:	00 20 f2 c8 	move_mask v0, s8, s4
    c698:	21 01 c2 c6 	cmpgt_f s9, v1, s4
    c69c:	02 01 c2 c6 	cmpgt_f s8, v2, s4
    c6a0:	40 81 e2 c6 	cmplt_f s10, v0, s5
    c6a4:	20 24 f2 c8 	move_mask v1, s9, s4
    c6a8:	40 20 f2 c8 	move_mask v2, s8, s4
    c6ac:	1b 01 00 a8 	load_32 s8, (s27)
    c6b0:	00 a8 f2 c8 	move_mask v0, s10, s5
    c6b4:	21 81 e2 c6 	cmplt_f s9, v1, s5
    c6b8:	82 80 e2 c6 	cmplt_f s4, v2, s5
    c6bc:	00 00 23 c6 	mul_f v0, v0, s6
    c6c0:	20 a4 f2 c8 	move_mask v1, s9, s5
    c6c4:	40 90 f2 c8 	move_mask v2, s4, s5
    c6c8:	a0 80 e3 c6 	cmplt_f s5, v0, s7
    c6cc:	80 00 80 4f 	movehi s4, 262144
    c6d0:	61 00 23 c6 	mul_f v3, v1, s6
    c6d4:	82 00 23 c6 	mul_f v4, v2, s6
    c6d8:	20 80 13 c6 	sub_f v1, v0, s7
    c6dc:	43 80 13 c6 	sub_f v2, v3, s7
    c6e0:	a4 80 13 c6 	sub_f v5, v4, s7
    c6e4:	20 80 b0 d1 	ftoi v1, v1
    c6e8:	c3 80 e3 c6 	cmplt_f s6, v3, s7
    c6ec:	e4 80 e3 c6 	cmplt_f s7, v4, s7
    c6f0:	c0 00 b1 d1 	ftoi v6, v2
    c6f4:	a0 80 b2 d1 	ftoi v5, v5
    c6f8:	41 00 32 c4 	xor v2, v1, s4
    c6fc:	40 14 b0 d5 	ftoi_mask v2, s5, v0
    c700:	a8 04 00 a0 	load_u8 s5, 1(s8)
    c704:	26 00 32 c4 	xor v1, v6, s4
    c708:	05 00 32 c4 	xor v0, v5, s4
    c70c:	20 98 b1 d5 	ftoi_mask v1, s6, v3
    c710:	00 1c b2 d5 	ftoi_mask v0, s7, v4
    c714:	25 08 00 f2 	bz s5, 260 <_ZN9librender14TriangleFiller10fillMaskedEiit+0x3ac>
    c718:	7e 00 06 ae 	load_v v3, 384(sp)
    c71c:	b8 00 00 a8 	load_32 s5, (s24)
    c720:	a3 80 e2 c6 	cmplt_f s5, v3, s5
    c724:	be 40 02 86 	store_16 s5, 144(sp)
    c728:	be 40 02 a4 	load_u16 s5, 144(sp)
    c72c:	ba 80 12 c0 	and s5, s26, s5
    c730:	45 07 00 f2 	bz s5, 232 <_ZN9librender14TriangleFiller10fillMaskedEiit+0x3ac>
    c734:	b8 00 00 a8 	load_32 s5, (s24)
    c738:	21 20 00 2b 	shl v1, v1, 8
    c73c:	63 00 00 a8 	load_32 s3, (s3)
    c740:	42 20 00 2b 	shl v2, v2, 8
    c744:	42 00 00 a8 	load_32 s2, (s2)
    c748:	00 20 00 2b 	shl v0, v0, 8
    c74c:	21 00 00 a8 	load_32 s1, (s1)
    c750:	c3 80 c2 c6 	cmpgt_f s6, v3, s5
    c754:	a0 00 00 ae 	load_v v5, (s0)
    c758:	60 98 f2 c8 	move_mask v3, s6, s5
    c75c:	a3 80 e1 c6 	cmplt_f s5, v3, s3
    c760:	60 94 f1 c8 	move_mask v3, s5, s3
    c764:	63 00 21 c6 	mul_f v3, v3, s2
    c768:	59 08 00 0b 	shl s2, s25, 2
    c76c:	83 80 10 c6 	sub_f v4, v3, s1
    c770:	23 80 e0 c6 	cmplt_f s1, v3, s1
    c774:	80 00 b2 d1 	ftoi v4, v4
    c778:	84 00 32 c4 	xor v4, v4, s4
    c77c:	80 84 b1 d5 	ftoi_mask v4, s1, v3
    c780:	20 20 03 a8 	load_32 s1, 200(s0)
    c784:	65 00 51 c4 	add_i v3, v5, s2
    c788:	9e f0 01 a8 	load_32 s4, 124(sp)
    c78c:	a0 fc 03 2f 	move v5, 255
    c790:	21 00 72 c0 	mull_i s1, s1, s4
    c794:	63 80 50 c4 	add_i v3, v3, s1
    c798:	84 fc ff 23 	xor v4, v4, -1
    c79c:	63 00 00 ba 	load_gath v3, (v3)
    c7a0:	84 fc 03 21 	and v4, v4, 255
    c7a4:	c3 20 00 2a 	shr v6, v3, 8
    c7a8:	e3 fc 03 21 	and v7, v3, 255
    c7ac:	63 40 00 2a 	shr v3, v3, 16
    c7b0:	c6 fc 03 21 	and v6, v6, 255
    c7b4:	e7 00 72 d0 	mull_i v7, v7, v4
    c7b8:	63 fc 03 21 	and v3, v3, 255
    c7bc:	c6 00 72 d0 	mull_i v6, v6, v4
    c7c0:	47 00 51 d0 	add_i v2, v7, v2
    c7c4:	63 00 72 d0 	mull_i v3, v3, v4
    c7c8:	26 80 50 d0 	add_i v1, v6, v1
    c7cc:	82 20 00 2a 	shr v4, v2, 8
    c7d0:	03 00 50 d0 	add_i v0, v3, v0
    c7d4:	61 20 00 2a 	shr v3, v1, 8
    c7d8:	44 fc 03 38 	cmplt_u s2, v4, 255
    c7dc:	c0 20 00 2a 	shr v6, v0, 8
    c7e0:	23 fc 03 38 	cmplt_u s1, v3, 255
    c7e4:	60 80 f2 d0 	move v3, v5
    c7e8:	80 80 f2 d0 	move v4, v5
    c7ec:	66 fc 03 38 	cmplt_u s3, v6, 255
    c7f0:	81 04 04 6a 	shr_mask v4, s1, v1, 8
    c7f4:	62 08 04 6a 	shr_mask v3, s2, v2, 8
    c7f8:	a0 0c 04 6a 	shr_mask v5, s3, v0, 8
    c7fc:	04 20 00 2b 	shl v0, v4, 8
    c800:	03 00 00 d0 	or v0, v3, v0
    c804:	25 40 00 2b 	shl v1, v5, 16
    c808:	20 00 ff 4f 	movehi s1, 522240
    c80c:	00 80 00 d0 	or v0, v0, v1
    c810:	00 80 00 c4 	or v0, v0, s1
    c814:	08 00 00 f6 	b 32 <_ZN9librender14TriangleFiller10fillMaskedEiit+0x3c8>
    c818:	21 20 00 2b 	shl v1, v1, 8
    c81c:	22 80 00 d0 	or v1, v2, v1
    c820:	00 40 00 2b 	shl v0, v0, 16
    c824:	20 00 ff 4f 	movehi s1, 522240
    c828:	01 00 00 d0 	or v0, v1, v0
    c82c:	00 80 00 c4 	or v0, v0, s1
    c830:	9e f0 01 a8 	load_32 s4, 124(sp)
    c834:	20 00 00 ae 	load_v v1, (s0)
    c838:	39 08 00 0b 	shl s1, s25, 2
    c83c:	00 20 03 a8 	load_32 s0, 200(s0)
    c840:	5e 03 02 86 	store_16 s26, 128(sp)
    c844:	21 80 50 c4 	add_i v1, v1, s1
    c848:	3e 00 02 a4 	load_u16 s1, 128(sp)
    c84c:	00 00 72 c0 	mull_i s0, s0, s4
    c850:	21 00 50 c4 	add_i v1, v1, s0
    c854:	01 04 00 9c 	store_scat_mask v0, s1, (v1)
    c858:	fe b3 17 a8 	load_32 ra, 1516(sp)
    c85c:	7e c3 17 a8 	load_32 s27, 1520(sp)
    c860:	5e d3 17 a8 	load_32 s26, 1524(sp)
    c864:	3e e3 17 a8 	load_32 s25, 1528(sp)
    c868:	1e f3 17 a8 	load_32 s24, 1532(sp)
    c86c:	de 03 18 05 	add_i sp, sp, 1536
    c870:	1f 00 00 f0 	ret
    c874:	02 00 00 4f 	movehi s0, 2
    c878:	20 94 03 0f 	move s1, 229
    c87c:	3e 20 00 88 	store_32 s1, 8(sp)
    c880:	22 00 00 4f 	movehi s1, 2
    c884:	00 30 0a 00 	or s0, s0, 652
    c888:	1e 30 00 88 	store_32 s0, 12(sp)
    c88c:	02 00 00 4f 	movehi s0, 2
    c890:	21 64 01 00 	or s1, s1, 89
    c894:	3e 10 00 88 	store_32 s1, 4(sp)
    c898:	00 b8 0d 00 	or s0, s0, 878
    c89c:	1e 00 00 88 	store_32 s0, (sp)
    c8a0:	5b 18 00 f8 	call 24940 <printf>
    c8a4:	00 00 e0 c3 	break

000000000000c8a8 _ZN9librender7TextureC2Ev:
    c8a8:	de 03 ff 05 	add_i sp, sp, -64
    c8ac:	fe f3 00 88 	store_32 ra, 60(sp)
    c8b0:	20 00 00 0f 	move s1, 0
    c8b4:	20 90 00 88 	store_32 s1, 36(s0)
    c8b8:	40 84 00 0f 	move s2, 33
    c8bc:	20 a0 00 88 	store_32 s1, 40(s0)
    c8c0:	fc 14 00 f8 	call 21488 <memset>
    c8c4:	fe f3 00 a8 	load_32 ra, 60(sp)
    c8c8:	de 03 01 05 	add_i sp, sp, 64
    c8cc:	1f 00 00 f0 	ret

000000000000c8d0 _ZN9librender7Texture13setMipSurfaceEiPKNS_7SurfaceE:
    c8d0:	de 03 fe 05 	add_i sp, sp, -128
    c8d4:	1e f3 01 88 	store_32 s24, 124(sp)
    c8d8:	fe e3 01 88 	store_32 ra, 120(sp)
    c8dc:	61 20 00 14 	cmplt_i s3, s1, 8
    c8e0:	00 03 f0 c0 	move s24, s0
    c8e4:	43 00 00 f4 	bnz s3, 8 <_ZN9librender7Texture13setMipSurfaceEiPKNS_7SurfaceE+0x1c>
    c8e8:	26 00 00 f6 	b 152 <_ZN9librender7Texture13setMipSurfaceEiPKNS_7SurfaceE+0xb0>
    c8ec:	01 08 00 0b 	shl s0, s1, 2
    c8f0:	18 00 50 c0 	add_i s0, s24, s0
    c8f4:	40 00 00 88 	store_32 s2, (s0)
    c8f8:	18 a0 00 a8 	load_32 s0, 40(s24)
    c8fc:	60 80 30 c1 	cmpge_i s3, s0, s1
    c900:	63 00 00 f4 	bnz s3, 12 <_ZN9librender7Texture13setMipSurfaceEiPKNS_7SurfaceE+0x3c>
    c904:	38 a0 00 88 	store_32 s1, 40(s24)
    c908:	00 80 f0 c0 	move s0, s1
    c90c:	42 00 03 a8 	load_32 s2, 192(s2)
    c910:	41 00 00 f4 	bnz s1, 8 <_ZN9librender7Texture13setMipSurfaceEiPKNS_7SurfaceE+0x48>
    c914:	0b 00 00 f6 	b 44 <_ZN9librender7Texture13setMipSurfaceEiPKNS_7SurfaceE+0x70>
    c918:	18 00 00 a8 	load_32 s0, (s24)
    c91c:	00 00 03 a8 	load_32 s0, 192(s0)
    c920:	00 80 90 c0 	ashr s0, s0, s1
    c924:	02 00 00 c1 	cmpeq_i s0, s2, s0
    c928:	40 00 00 f4 	bnz s0, 8 <_ZN9librender7Texture13setMipSurfaceEiPKNS_7SurfaceE+0x60>
    c92c:	1a 00 00 f6 	b 104 <_ZN9librender7Texture13setMipSurfaceEiPKNS_7SurfaceE+0xc4>
    c930:	fe e3 01 a8 	load_32 ra, 120(sp)
    c934:	1e f3 01 a8 	load_32 s24, 124(sp)
    c938:	de 03 02 05 	add_i sp, sp, 128
    c93c:	1f 00 00 f0 	ret
    c940:	20 00 c1 c0 	clz s1, s2
    c944:	40 08 00 14 	cmplt_i s2, s0, 2
    c948:	21 04 00 05 	add_i s1, s1, 1
    c94c:	38 90 00 88 	store_32 s1, 36(s24)
    c950:	c2 00 00 f4 	bnz s2, 24 <_ZN9librender7Texture13setMipSurfaceEiPKNS_7SurfaceE+0x98>
    c954:	20 08 00 0b 	shl s1, s0, 2
    c958:	18 10 00 05 	add_i s0, s24, 4
    c95c:	41 f0 ff 05 	add_i s2, s1, -4
    c960:	20 00 00 0f 	move s1, 0
    c964:	d3 14 00 f8 	call 21324 <memset>
    c968:	00 00 00 0f 	move s0, 0
    c96c:	18 a0 00 88 	store_32 s0, 40(s24)
    c970:	fe e3 01 a8 	load_32 ra, 120(sp)
    c974:	1e f3 01 a8 	load_32 s24, 124(sp)
    c978:	de 03 02 05 	add_i sp, sp, 128
    c97c:	1f 00 00 f0 	ret
    c980:	02 00 00 4f 	movehi s0, 2
    c984:	20 e0 00 0f 	move s1, 56
    c988:	3e 20 00 88 	store_32 s1, 8(sp)
    c98c:	00 c0 04 00 	or s0, s0, 304
    c990:	05 00 00 f6 	b 20 <_ZN9librender7Texture13setMipSurfaceEiPKNS_7SurfaceE+0xd4>
    c994:	02 00 00 4f 	movehi s0, 2
    c998:	20 28 01 0f 	move s1, 74
    c99c:	3e 20 00 88 	store_32 s1, 8(sp)
    c9a0:	00 48 0f 00 	or s0, s0, 978
    c9a4:	22 00 00 4f 	movehi s1, 2
    c9a8:	1e 30 00 88 	store_32 s0, 12(sp)
    c9ac:	02 00 00 4f 	movehi s0, 2
    c9b0:	21 7c 11 00 	or s1, s1, 1119
    c9b4:	3e 10 00 88 	store_32 s1, 4(sp)
    c9b8:	00 b8 0d 00 	or s0, s0, 878
    c9bc:	1e 00 00 88 	store_32 s0, (sp)
    c9c0:	13 18 00 f8 	call 24652 <printf>
    c9c4:	00 00 e0 c3 	break

000000000000c9c8 _ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_:
    c9c8:	de 03 fd 05 	add_i sp, sp, -192
    c9cc:	5e 03 02 8e 	store_v v26, 128(sp)
    c9d0:	7e 03 01 8e 	store_v v27, 64(sp)
    c9d4:	60 04 00 3a 	getlane s3, v0, 1
    c9d8:	80 00 00 3a 	getlane s4, v0, 0
    c9dc:	63 00 12 c2 	sub_f s3, s3, s4
    c9e0:	9f fc 7f 4f 	movehi s4, 262143
    c9e4:	84 fc 7f 00 	or s4, s4, 8191
    c9e8:	63 00 12 c0 	and s3, s3, s4
    c9ec:	80 00 00 4f 	movehi s4, 0
    c9f0:	a0 80 c1 c1 	reciprocal s5, s3
    c9f4:	84 c0 05 00 	or s4, s4, 368
    c9f8:	84 00 00 a8 	load_32 s4, (s4)
    c9fc:	c5 80 21 c2 	mul_f s6, s5, s3
    ca00:	c4 00 13 c2 	sub_f s6, s4, s6
    ca04:	a5 00 23 c2 	mul_f s5, s5, s6
    ca08:	c0 00 00 4f 	movehi s6, 0
    ca0c:	65 80 21 c2 	mul_f s3, s5, s3
    ca10:	64 80 11 c2 	sub_f s3, s4, s3
    ca14:	86 10 06 00 	or s4, s6, 388
    ca18:	65 80 21 c2 	mul_f s3, s5, s3
    ca1c:	84 00 00 a8 	load_32 s4, (s4)
    ca20:	a3 00 e2 c2 	cmplt_f s5, s3, s4
    ca24:	c5 00 00 f4 	bnz s5, 24 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_+0x74>
    ca28:	63 00 12 c2 	sub_f s3, s3, s4
    ca2c:	80 00 80 4f 	movehi s4, 262144
    ca30:	60 80 b1 c1 	ftoi s3, s3
    ca34:	63 00 32 c0 	xor s3, s3, s4
    ca38:	02 00 00 f6 	b 8 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_+0x78>
    ca3c:	60 80 b1 c1 	ftoi s3, s3
    ca40:	80 90 00 a8 	load_32 s4, 36(s0)
    ca44:	60 80 c1 c0 	clz s3, s3
    ca48:	83 00 62 c0 	sub_i s4, s3, s4
    ca4c:	60 a0 00 a8 	load_32 s3, 40(s0)
    ca50:	c4 00 00 12 	cmpgt_i s6, s4, 0
    ca54:	a0 00 f2 c0 	move s5, s4
    ca58:	46 00 00 f4 	bnz s6, 8 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_+0x98>
    ca5c:	a0 00 00 0f 	move s5, 0
    ca60:	84 80 21 c1 	cmpgt_i s4, s4, s3
    ca64:	44 00 00 f4 	bnz s4, 8 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_+0xa4>
    ca68:	60 80 f2 c0 	move s3, s5
    ca6c:	40 00 b0 d1 	ftoi v2, v0
    ca70:	63 08 00 0b 	shl s3, s3, 2
    ca74:	60 80 b0 d1 	ftoi v3, v1
    ca78:	60 80 51 c0 	add_i s3, s0, s3
    ca7c:	83 00 00 a8 	load_32 s4, (s3)
    ca80:	60 00 00 4f 	movehi s3, 0
    ca84:	40 00 a1 d2 	itof v2, v2
    ca88:	63 60 05 00 	or s3, s3, 344
    ca8c:	00 00 11 d2 	sub_f v0, v0, v2
    ca90:	c4 00 03 a8 	load_32 s6, 192(s4)
    ca94:	40 80 a1 d2 	itof v2, v3
    ca98:	a4 10 03 a8 	load_32 s5, 196(s4)
    ca9c:	21 00 11 d2 	sub_f v1, v1, v2
    caa0:	e3 00 00 a8 	load_32 s7, (s3)
    caa4:	60 00 00 4f 	movehi s3, 0
    caa8:	63 10 05 00 	or s3, s3, 324
    caac:	00 81 e3 c6 	cmplt_f s8, v0, s7
    cab0:	23 01 00 a8 	load_32 s9, (s3)
    cab4:	e1 80 e3 c6 	cmplt_f s7, v1, s7
    cab8:	00 80 00 a0 	load_u8 s0, 32(s0)
    cabc:	40 80 f4 c4 	move v2, s9
    cac0:	00 a0 04 ca 	add_f_mask v0, s8, v0, s9
    cac4:	05 fd ff 05 	add_i s8, s5, -1
    cac8:	21 9c 04 ca 	add_f_mask v1, s7, v1, s9
    cacc:	e6 fc ff 05 	add_i s7, s6, -1
    cad0:	22 80 10 d2 	sub_f v1, v2, v1
    cad4:	e0 80 a3 c2 	itof s7, s7
    cad8:	00 80 23 c6 	mul_f v0, v0, s7
    cadc:	e0 00 a4 c2 	itof s7, s8
    cae0:	41 80 23 c6 	mul_f v2, v1, s7
    cae4:	20 00 b0 d1 	ftoi v1, v0
    cae8:	60 00 b1 d1 	ftoi v3, v2
    caec:	00 0d 00 f2 	bz s0, 416 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_+0x2c4>
    caf0:	a0 00 f3 c4 	move v5, s6
    caf4:	c4 20 03 a8 	load_32 s6, 200(s4)
    caf8:	e4 60 03 a8 	load_32 s7, 216(s4)
    cafc:	81 04 00 25 	add_i v4, v1, 1
    cb00:	24 31 03 a8 	load_32 s9, 204(s4)
    cb04:	c0 80 f2 c4 	move v6, s5
    cb08:	3e c0 00 86 	store_16 s1, 48(sp)
    cb0c:	40 03 00 2f 	move v26, 0
    cb10:	04 81 e2 d2 	cmplt_f s8, v4, v5
    cb14:	43 02 73 c4 	mull_i v18, v3, s6
    cb18:	1e c0 00 a4 	load_u16 s0, 48(sp)
    cb1c:	81 80 73 c4 	mull_i v4, v1, s7
    cb20:	a3 04 00 25 	add_i v5, v3, 1
    cb24:	60 02 fd d0 	move v19, v26
    cb28:	24 83 54 c4 	add_i v25, v4, s9
    cb2c:	a5 00 e3 d2 	cmplt_f s5, v5, v6
    cb30:	60 03 f3 c4 	move v27, s6
    cb34:	80 82 f3 c4 	move v20, s7
    cb38:	99 00 59 d0 	add_i v4, v25, v18
    cb3c:	61 a2 00 65 	add_i_mask v19, s8, v1, 1
    cb40:	80 81 f4 c4 	move v12, s9
    cb44:	a4 f0 ff 21 	and v5, v4, -4
    cb48:	43 97 00 65 	add_i_mask v26, s5, v3, 1
    cb4c:	c5 02 00 bc 	load_gath_mask v22, s0, (v5)
    cb50:	24 50 03 a8 	load_32 s1, 212(s4)
    cb54:	81 08 00 10 	cmpeq_i s4, s1, 2
    cb58:	84 0e 00 f4 	bnz s4, 464 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_+0x360>
    cb5c:	81 04 00 10 	cmpeq_i s4, s1, 1
    cb60:	64 13 00 f4 	bnz s4, 620 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_+0x404>
    cb64:	01 15 00 f4 	bnz s1, 672 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_+0x43c>
    cb68:	3b 01 7d d0 	mull_i v9, v27, v26
    cb6c:	20 00 00 4f 	movehi s1, 0
    cb70:	d9 80 54 d0 	add_i v6, v25, v9
    cb74:	4c 01 59 d0 	add_i v10, v12, v18
    cb78:	21 00 05 00 	or s1, s1, 320
    cb7c:	c6 f0 ff 21 	and v6, v6, -4
    cb80:	f4 81 79 d0 	mull_i v15, v20, v19
    cb84:	b6 fc 03 21 	and v5, v22, 255
    cb88:	21 00 00 a8 	load_32 s1, (s1)
    cb8c:	c6 00 00 bc 	load_gath_mask v6, s0, (v6)
    cb90:	4a 81 57 d0 	add_i v10, v10, v15
    cb94:	8c 81 57 d0 	add_i v12, v12, v15
    cb98:	a0 80 a2 d2 	itof v5, v5
    cb9c:	f6 40 00 2a 	shr v7, v22, 16
    cba0:	4a f1 ff 21 	and v10, v10, -4
    cba4:	a6 21 00 2a 	shr v13, v6, 8
    cba8:	96 20 00 2a 	shr v4, v22, 8
    cbac:	4a 01 00 bc 	load_gath_mask v10, s0, (v10)
    cbb0:	2c 81 54 d0 	add_i v9, v12, v9
    cbb4:	ad fd 03 21 	and v13, v13, 255
    cbb8:	06 fd 03 21 	and v8, v6, 255
    cbbc:	c6 41 00 2a 	shr v14, v6, 16
    cbc0:	65 81 20 c6 	mul_f v11, v5, s1
    cbc4:	a7 fc 03 21 	and v5, v7, 255
    cbc8:	00 82 a6 d2 	itof v16, v13
    cbcc:	c6 60 00 2a 	shr v6, v6, 24
    cbd0:	00 01 a4 d2 	itof v8, v8
    cbd4:	aa fd 03 21 	and v13, v10, 255
    cbd8:	84 fc 03 21 	and v4, v4, 255
    cbdc:	a0 80 a2 d2 	itof v5, v5
    cbe0:	29 f1 ff 21 	and v9, v9, -4
    cbe4:	40 02 a3 d2 	itof v18, v6
    cbe8:	60 82 a6 d2 	itof v19, v13
    cbec:	ce fd 03 21 	and v14, v14, 255
    cbf0:	80 00 a2 d2 	itof v4, v4
    cbf4:	8a 41 00 2a 	shr v12, v10, 16
    cbf8:	29 01 00 bc 	load_gath_mask v9, s0, (v9)
    cbfc:	20 02 a7 d2 	itof v17, v14
    cc00:	d0 81 20 c6 	mul_f v14, v16, s1
    cc04:	0a 22 00 2a 	shr v16, v10, 8
    cc08:	c5 80 20 c6 	mul_f v6, v5, s1
    cc0c:	8c fd 03 21 	and v12, v12, 255
    cc10:	b2 80 20 c6 	mul_f v5, v18, s1
    cc14:	49 22 00 2a 	shr v18, v9, 8
    cc18:	f3 81 20 c6 	mul_f v15, v19, s1
    cc1c:	69 42 00 2a 	shr v19, v9, 16
    cc20:	10 fe 03 21 	and v16, v16, 255
    cc24:	e4 80 20 c6 	mul_f v7, v4, s1
    cc28:	96 60 00 2a 	shr v4, v22, 24
    cc2c:	a8 81 20 c6 	mul_f v13, v8, s1
    cc30:	4a 61 00 2a 	shr v10, v10, 24
    cc34:	11 81 20 c6 	mul_f v8, v17, s1
    cc38:	29 fe 03 21 	and v17, v9, 255
    cc3c:	00 02 a8 d2 	itof v16, v16
    cc40:	52 fe 03 21 	and v18, v18, 255
    cc44:	80 00 a2 d2 	itof v4, v4
    cc48:	73 fe 03 21 	and v19, v19, 255
    cc4c:	80 01 a6 d2 	itof v12, v12
    cc50:	29 61 00 2a 	shr v9, v9, 24
    cc54:	20 82 a8 d2 	itof v17, v17
    cc58:	40 02 a9 d2 	itof v18, v18
    cc5c:	40 01 a5 d2 	itof v10, v10
    cc60:	80 82 a4 d2 	itof v20, v9
    cc64:	60 82 a9 d2 	itof v19, v19
    cc68:	f0 82 20 c6 	mul_f v23, v16, s1
    cc6c:	84 80 20 c6 	mul_f v4, v4, s1
    cc70:	b1 82 20 c6 	mul_f v21, v17, s1
    cc74:	0c 82 20 c6 	mul_f v16, v12, s1
    cc78:	2a 81 20 c6 	mul_f v9, v10, s1
    cc7c:	12 83 20 c6 	mul_f v24, v18, s1
    cc80:	33 82 20 c6 	mul_f v17, v19, s1
    cc84:	54 81 20 c6 	mul_f v10, v20, s1
    cc88:	5f 00 00 f6 	b 380 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_+0x43c>
    cc8c:	04 20 03 a8 	load_32 s0, 200(s4)
    cc90:	64 60 03 a8 	load_32 s3, 216(s4)
    cc94:	01 80 71 c4 	mull_i v0, v1, s3
    cc98:	23 00 70 c4 	mull_i v1, v3, s0
    cc9c:	04 30 03 a8 	load_32 s0, 204(s4)
    cca0:	3e 80 00 86 	store_16 s1, 32(sp)
    cca4:	00 80 50 d0 	add_i v0, v0, v1
    cca8:	20 00 50 c4 	add_i v1, v0, s0
    ccac:	1e 80 00 a4 	load_u16 s0, 32(sp)
    ccb0:	01 f0 ff 21 	and v0, v1, -4
    ccb4:	00 00 00 bc 	load_gath_mask v0, s0, (v0)
    ccb8:	04 50 03 a8 	load_32 s0, 212(s4)
    ccbc:	20 08 00 10 	cmpeq_i s1, s0, 2
    ccc0:	41 10 00 f4 	bnz s1, 520 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_+0x500>
    ccc4:	20 04 00 10 	cmpeq_i s1, s0, 1
    ccc8:	21 11 00 f4 	bnz s1, 548 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_+0x524>
    cccc:	e0 11 00 f4 	bnz s0, 572 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_+0x540>
    ccd0:	40 20 00 2a 	shr v2, v0, 8
    ccd4:	60 40 00 2a 	shr v3, v0, 16
    ccd8:	20 fc 03 21 	and v1, v0, 255
    ccdc:	00 00 00 4f 	movehi s0, 0
    cce0:	42 fc 03 21 	and v2, v2, 255
    cce4:	63 fc 03 21 	and v3, v3, 255
    cce8:	20 80 a0 d2 	itof v1, v1
    ccec:	00 00 05 00 	or s0, s0, 320
    ccf0:	40 00 a1 d2 	itof v2, v2
    ccf4:	00 60 00 2a 	shr v0, v0, 24
    ccf8:	60 80 a1 d2 	itof v3, v3
    ccfc:	00 00 00 a8 	load_32 s0, (s0)
    cd00:	00 00 a0 d2 	itof v0, v0
    cd04:	21 00 20 c6 	mul_f v1, v1, s0
    cd08:	42 00 20 c6 	mul_f v2, v2, s0
    cd0c:	63 00 20 c6 	mul_f v3, v3, s0
    cd10:	22 00 00 8e 	store_v v1, (s2)
    cd14:	00 00 20 c6 	mul_f v0, v0, s0
    cd18:	00 0c 00 0f 	move s0, 3
    cd1c:	42 00 01 8e 	store_v v2, 64(s2)
    cd20:	62 00 02 8e 	store_v v3, 128(s2)
    cd24:	76 00 00 f6 	b 472 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_+0x534>
    cd28:	bb 00 7d d0 	mull_i v5, v27, v26
    cd2c:	20 00 00 4f 	movehi s1, 0
    cd30:	d9 80 52 d0 	add_i v6, v25, v5
    cd34:	34 81 79 d0 	mull_i v9, v20, v19
    cd38:	21 00 05 00 	or s1, s1, 320
    cd3c:	e6 f0 ff 21 	and v7, v6, -4
    cd40:	0c 01 59 d0 	add_i v8, v12, v18
    cd44:	4c 81 54 d0 	add_i v10, v12, v9
    cd48:	21 00 00 a8 	load_32 s1, (s1)
    cd4c:	c6 0c 00 2b 	shl v6, v6, 3
    cd50:	e7 00 00 bc 	load_gath_mask v7, s0, (v7)
    cd54:	08 81 54 d0 	add_i v8, v8, v9
    cd58:	aa 80 52 d0 	add_i v5, v10, v5
    cd5c:	c6 60 00 21 	and v6, v6, 24
    cd60:	28 f1 ff 21 	and v9, v8, -4
    cd64:	c7 00 93 d0 	ashr v6, v7, v6
    cd68:	e5 f0 ff 21 	and v7, v5, -4
    cd6c:	84 0c 00 2b 	shl v4, v4, 3
    cd70:	29 01 00 bc 	load_gath_mask v9, s0, (v9)
    cd74:	08 0d 00 2b 	shl v8, v8, 3
    cd78:	a5 0c 00 2b 	shl v5, v5, 3
    cd7c:	e7 00 00 bc 	load_gath_mask v7, s0, (v7)
    cd80:	84 60 00 21 	and v4, v4, 24
    cd84:	08 61 00 21 	and v8, v8, 24
    cd88:	a5 60 00 21 	and v5, v5, 24
    cd8c:	96 00 92 d0 	ashr v4, v22, v4
    cd90:	a7 80 92 d0 	ashr v5, v7, v5
    cd94:	09 01 94 d0 	ashr v8, v9, v8
    cd98:	84 fc 03 21 	and v4, v4, 255
    cd9c:	c6 fc 03 21 	and v6, v6, 255
    cda0:	e8 fc 03 21 	and v7, v8, 255
    cda4:	a5 fc 03 21 	and v5, v5, 255
    cda8:	80 00 a2 d2 	itof v4, v4
    cdac:	c0 00 a3 d2 	itof v6, v6
    cdb0:	e0 80 a3 d2 	itof v7, v7
    cdb4:	a0 80 a2 d2 	itof v5, v5
    cdb8:	64 81 20 c6 	mul_f v11, v4, s1
    cdbc:	a6 81 20 c6 	mul_f v13, v6, s1
    cdc0:	e7 81 20 c6 	mul_f v15, v7, s1
    cdc4:	a5 82 20 c6 	mul_f v21, v5, s1
    cdc8:	0f 00 00 f6 	b 60 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_+0x43c>
    cdcc:	b4 80 79 d0 	mull_i v5, v20, v19
    cdd0:	cc 00 59 d0 	add_i v6, v12, v18
    cdd4:	ec 80 52 d0 	add_i v7, v12, v5
    cdd8:	9b 00 7d d0 	mull_i v4, v27, v26
    cddc:	a6 80 52 d0 	add_i v5, v6, v5
    cde0:	19 01 52 d0 	add_i v8, v25, v4
    cde4:	87 00 52 d0 	add_i v4, v7, v4
    cde8:	a5 f0 ff 21 	and v5, v5, -4
    cdec:	c8 f0 ff 21 	and v6, v8, -4
    cdf0:	84 f0 ff 21 	and v4, v4, -4
    cdf4:	a6 01 00 bc 	load_gath_mask v13, s0, (v6)
    cdf8:	e5 01 00 bc 	load_gath_mask v15, s0, (v5)
    cdfc:	a4 02 00 bc 	load_gath_mask v21, s0, (v4)
    ce00:	60 01 fb d0 	move v11, v22
    ce04:	03 00 00 a8 	load_32 s0, (s3)
    ce08:	60 80 a1 d2 	itof v3, v3
    ce0c:	42 80 11 d2 	sub_f v2, v2, v3
    ce10:	75 00 21 d2 	mul_f v3, v21, v2
    ce14:	ad 01 21 d2 	mul_f v13, v13, v2
    ce18:	80 01 f0 c4 	move v12, s0
    ce1c:	20 80 a0 d2 	itof v1, v1
    ce20:	00 80 10 d2 	sub_f v0, v0, v1
    ce24:	00 0c 00 0f 	move s0, 3
    ce28:	4a 01 21 d2 	mul_f v10, v10, v2
    ce2c:	4c 02 11 d2 	sub_f v18, v12, v2
    ce30:	ef 01 29 d2 	mul_f v15, v15, v18
    ce34:	63 80 07 d2 	add_f v3, v3, v15
    ce38:	2b 00 29 d2 	mul_f v1, v11, v18
    ce3c:	2d 80 00 d2 	add_f v1, v13, v1
    ce40:	8c 01 10 d2 	sub_f v12, v12, v0
    ce44:	78 01 21 d2 	mul_f v11, v24, v2
    ce48:	b7 01 29 d2 	mul_f v13, v23, v18
    ce4c:	08 01 21 d2 	mul_f v8, v8, v2
    ce50:	63 00 20 d2 	mul_f v3, v3, v0
    ce54:	c6 00 29 d2 	mul_f v6, v6, v18
    ce58:	21 00 26 d2 	mul_f v1, v1, v12
    ce5c:	e7 00 29 d2 	mul_f v7, v7, v18
    ce60:	6b 81 06 d2 	add_f v11, v11, v13
    ce64:	ae 01 21 d2 	mul_f v13, v14, v2
    ce68:	d0 01 29 d2 	mul_f v14, v16, v18
    ce6c:	23 80 00 d2 	add_f v1, v3, v1
    ce70:	71 00 21 d2 	mul_f v3, v17, v2
    ce74:	45 00 21 d2 	mul_f v2, v5, v2
    ce78:	a9 00 29 d2 	mul_f v5, v9, v18
    ce7c:	aa 80 02 d2 	add_f v5, v10, v5
    ce80:	22 00 00 8e 	store_v v1, (s2)
    ce84:	ed 80 03 d2 	add_f v7, v13, v7
    ce88:	c8 00 03 d2 	add_f v6, v8, v6
    ce8c:	6b 01 20 d2 	mul_f v11, v11, v0
    ce90:	63 00 07 d2 	add_f v3, v3, v14
    ce94:	84 00 29 d2 	mul_f v4, v4, v18
    ce98:	42 00 02 d2 	add_f v2, v2, v4
    ce9c:	e7 00 26 d2 	mul_f v7, v7, v12
    cea0:	c6 00 26 d2 	mul_f v6, v6, v12
    cea4:	eb 80 03 d2 	add_f v7, v11, v7
    cea8:	63 00 20 d2 	mul_f v3, v3, v0
    ceac:	05 00 20 d2 	mul_f v0, v5, v0
    ceb0:	22 00 26 d2 	mul_f v1, v2, v12
    ceb4:	e2 00 01 8e 	store_v v7, 64(s2)
    ceb8:	63 00 03 d2 	add_f v3, v3, v6
    cebc:	00 80 00 d2 	add_f v0, v0, v1
    cec0:	62 00 02 8e 	store_v v3, 128(s2)
    cec4:	0e 00 00 f6 	b 56 <_ZNK9librender7Texture10readPixelsEDv16_fS1_tPS1_+0x534>
    cec8:	21 0c 00 2b 	shl v1, v1, 3
    cecc:	00 00 00 4f 	movehi s0, 0
    ced0:	21 60 00 21 	and v1, v1, 24
    ced4:	00 80 90 d0 	ashr v0, v0, v1
    ced8:	00 00 05 00 	or s0, s0, 320
    cedc:	00 fc 03 21 	and v0, v0, 255
    cee0:	00 00 00 a8 	load_32 s0, (s0)
    cee4:	00 00 a0 d2 	itof v0, v0
    cee8:	00 00 20 c6 	mul_f v0, v0, s0
    ceec:	02 00 00 8e 	store_v v0, (s2)
    cef0:	00 04 00 0f 	move s0, 1
    cef4:	02 00 03 ae 	load_v v0, 192(s2)
    cef8:	02 00 02 8e 	store_v v0, 128(s2)
    cefc:	00 18 00 0b 	shl s0, s0, 6
    cf00:	02 00 50 c0 	add_i s0, s2, s0
    cf04:	00 00 00 8e 	store_v v0, (s0)
    cf08:	7e 03 01 ae 	load_v v27, 64(sp)
    cf0c:	5e 03 02 ae 	load_v v26, 128(sp)
    cf10:	de 03 03 05 	add_i sp, sp, 192
    cf14:	1f 00 00 f0 	ret

000000000000cf18 _ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii:
    cf18:	de 03 fe 05 	add_i sp, sp, -128
    cf1c:	1e f3 01 88 	store_32 s24, 124(sp)
    cf20:	3e e3 01 88 	store_32 s25, 120(sp)
    cf24:	5e d3 01 88 	store_32 s26, 116(sp)
    cf28:	7e c3 01 88 	store_32 s27, 112(sp)
    cf2c:	fe b3 01 88 	store_32 ra, 108(sp)
    cf30:	1e 11 02 a8 	load_32 s8, 132(sp)
    cf34:	1e 51 01 88 	store_32 s8, 84(sp)
    cf38:	1e 01 02 a8 	load_32 s8, 128(sp)
    cf3c:	fe 70 01 88 	store_32 s7, 92(sp)
    cf40:	20 01 f3 c0 	move s9, s6
    cf44:	be 00 01 88 	store_32 s5, 64(sp)
    cf48:	9e 90 01 88 	store_32 s4, 100(sp)
    cf4c:	00 03 f1 c0 	move s24, s2
    cf50:	60 83 f0 c0 	move s27, s1
    cf54:	1e f0 00 88 	store_32 s0, 60(sp)
    cf58:	20 20 00 0f 	move s1, 8
    cf5c:	1e 61 01 88 	store_32 s8, 88(sp)
    cf60:	80 00 00 0f 	move s4, 0
    cf64:	1b 00 24 c1 	cmpgt_i s0, s27, s8
    cf68:	40 80 f0 c0 	move s2, s1
    cf6c:	40 00 00 f4 	bnz s0, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x5c>
    cf70:	40 00 f2 c0 	move s2, s4
    cf74:	00 10 00 0f 	move s0, 4
    cf78:	bb 80 44 c1 	cmplt_i s5, s27, s9
    cf7c:	e0 00 f0 c0 	move s7, s0
    cf80:	45 00 00 f4 	bnz s5, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x70>
    cf84:	e0 00 f1 c0 	move s7, s2
    cf88:	5e 70 01 a8 	load_32 s2, 92(sp)
    cf8c:	d8 00 41 c1 	cmplt_i s6, s24, s2
    cf90:	40 08 00 0f 	move s2, 2
    cf94:	a0 00 f1 c0 	move s5, s2
    cf98:	46 00 00 f4 	bnz s6, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x88>
    cf9c:	a7 00 00 f6 	b 668 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x320>
    cfa0:	de 60 01 a8 	load_32 s6, 88(sp)
    cfa4:	c3 00 23 c1 	cmpgt_i s6, s3, s6
    cfa8:	46 00 00 f4 	bnz s6, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x98>
    cfac:	a9 00 00 f6 	b 676 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x338>
    cfb0:	83 80 44 c1 	cmplt_i s4, s3, s9
    cfb4:	44 00 00 f4 	bnz s4, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0xa4>
    cfb8:	00 80 f0 c0 	move s0, s1
    cfbc:	3e 90 01 a8 	load_32 s1, 100(sp)
    cfc0:	9e 70 01 a8 	load_32 s4, 92(sp)
    cfc4:	21 00 42 c1 	cmplt_i s1, s1, s4
    cfc8:	85 80 03 c0 	or s4, s5, s7
    cfcc:	a1 00 00 f4 	bnz s1, 20 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0xc8>
    cfd0:	3e 90 01 a8 	load_32 s1, 100(sp)
    cfd4:	5e 50 01 a8 	load_32 s2, 84(sp)
    cfd8:	21 00 21 c1 	cmpgt_i s1, s1, s2
    cfdc:	41 04 00 01 	and s2, s1, 1
    cfe0:	e2 00 00 c0 	or s7, s2, s0
    cfe4:	07 00 02 c0 	or s0, s7, s4
    cfe8:	c0 13 00 f2 	bz s0, 632 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x348>
    cfec:	00 00 00 0f 	move s0, 0
    cff0:	1e 20 01 88 	store_32 s0, 72(sp)
    cff4:	00 20 00 0f 	move s0, 8
    cff8:	1e 40 01 88 	store_32 s0, 80(sp)
    cffc:	00 10 00 0f 	move s0, 4
    d000:	1e 30 01 88 	store_32 s0, 76(sp)
    d004:	3e 11 01 88 	store_32 s9, 68(sp)
    d008:	20 00 00 f6 	b 128 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x170>
    d00c:	60 00 f0 c0 	move s3, s0
    d010:	b9 0f 00 f4 	bnz s25, 500 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x2ec>
    d014:	de 90 01 88 	store_32 s6, 100(sp)
    d018:	80 80 f0 c0 	move s4, s1
    d01c:	b9 0f 00 f4 	bnz s25, 500 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x2f8>
    d020:	9e 20 01 a8 	load_32 s4, 72(sp)
    d024:	b9 0f 00 f4 	bnz s25, 500 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x300>
    d028:	e0 80 f0 c0 	move s7, s1
    d02c:	20 00 f0 c0 	move s1, s0
    d030:	b9 0f 00 f4 	bnz s25, 500 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x30c>
    d034:	20 80 fd c0 	move s1, s27
    d038:	60 83 f0 c0 	move s27, s1
    d03c:	a7 00 02 c0 	or s5, s7, s4
    d040:	00 03 f1 c0 	move s24, s2
    d044:	25 02 00 f4 	bnz s5, 68 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x170>
    d048:	88 00 00 f6 	b 544 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x350>
    d04c:	5e 63 01 a8 	load_32 s26, 88(sp)
    d050:	3e 90 01 a8 	load_32 s1, 100(sp)
    d054:	1a 80 6d c0 	sub_i s0, s26, s27
    d058:	21 00 6c c0 	sub_i s1, s1, s24
    d05c:	00 80 70 c0 	mull_i s0, s0, s1
    d060:	23 80 6d c0 	sub_i s1, s3, s27
    d064:	18 22 00 f8 	call 34912 <__divsi3>
    d068:	3e 11 01 a8 	load_32 s9, 68(sp)
    d06c:	c0 00 5c c0 	add_i s6, s0, s24
    d070:	00 00 fd c0 	move s0, s26
    d074:	3e 60 01 a8 	load_32 s1, 88(sp)
    d078:	5e 40 01 a8 	load_32 s2, 80(sp)
    d07c:	20 80 20 c1 	cmpgt_i s1, s0, s1
    d080:	61 06 00 f4 	bnz s1, 204 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x234>
    d084:	31 00 00 f6 	b 196 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x230>
    d088:	27 00 12 c0 	and s1, s7, s4
    d08c:	61 0f 00 f4 	bnz s1, 492 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x360>
    d090:	24 03 00 11 	cmpne_i s25, s4, 0
    d094:	59 00 00 f4 	bnz s25, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x184>
    d098:	80 80 f3 c0 	move s4, s7
    d09c:	24 04 00 01 	and s1, s4, 1
    d0a0:	fe a0 01 88 	store_32 s7, 104(sp)
    d0a4:	41 00 00 f2 	bz s1, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x194>
    d0a8:	19 00 00 f6 	b 100 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x1f4>
    d0ac:	24 08 00 01 	and s1, s4, 2
    d0b0:	41 00 00 f2 	bz s1, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x1a0>
    d0b4:	33 00 00 f6 	b 204 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x268>
    d0b8:	24 20 00 01 	and s1, s4, 8
    d0bc:	7e 80 01 88 	store_32 s3, 96(sp)
    d0c0:	41 00 00 f2 	bz s1, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x1b0>
    d0c4:	e2 ff ff f7 	b -120 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x134>
    d0c8:	24 10 00 01 	and s1, s4, 4
    d0cc:	61 03 00 f2 	bz s1, 108 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x220>
    d0d0:	3e 90 01 a8 	load_32 s1, 100(sp)
    d0d4:	09 80 6d c0 	sub_i s0, s9, s27
    d0d8:	21 00 6c c0 	sub_i s1, s1, s24
    d0dc:	00 80 70 c0 	mull_i s0, s0, s1
    d0e0:	3e 80 01 a8 	load_32 s1, 96(sp)
    d0e4:	21 80 6d c0 	sub_i s1, s1, s27
    d0e8:	f7 21 00 f8 	call 34780 <__divsi3>
    d0ec:	3e 11 01 a8 	load_32 s9, 68(sp)
    d0f0:	c0 00 5c c0 	add_i s6, s0, s24
    d0f4:	00 80 f4 c0 	move s0, s9
    d0f8:	3e 60 01 a8 	load_32 s1, 88(sp)
    d0fc:	5e 40 01 a8 	load_32 s2, 80(sp)
    d100:	20 80 20 c1 	cmpgt_i s1, s0, s1
    d104:	41 02 00 f4 	bnz s1, 72 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x234>
    d108:	10 00 00 f6 	b 64 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x230>
    d10c:	7e 80 01 88 	store_32 s3, 96(sp)
    d110:	03 80 6d c0 	sub_i s0, s3, s27
    d114:	5e 53 01 a8 	load_32 s26, 84(sp)
    d118:	3a 00 6c c0 	sub_i s1, s26, s24
    d11c:	00 80 70 c0 	mull_i s0, s0, s1
    d120:	3e 90 01 a8 	load_32 s1, 100(sp)
    d124:	21 00 6c c0 	sub_i s1, s1, s24
    d128:	e7 21 00 f8 	call 34716 <__divsi3>
    d12c:	3e 11 01 a8 	load_32 s9, 68(sp)
    d130:	00 80 5d c0 	add_i s0, s0, s27
    d134:	c0 00 fd c0 	move s6, s26
    d138:	3e 60 01 a8 	load_32 s1, 88(sp)
    d13c:	5e 40 01 a8 	load_32 s2, 80(sp)
    d140:	20 80 20 c1 	cmpgt_i s1, s0, s1
    d144:	41 00 00 f4 	bnz s1, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x234>
    d148:	5e 20 01 a8 	load_32 s2, 72(sp)
    d14c:	3e 30 01 a8 	load_32 s1, 76(sp)
    d150:	80 80 44 c1 	cmplt_i s4, s0, s9
    d154:	7e 80 01 a8 	load_32 s3, 96(sp)
    d158:	fe a0 01 a8 	load_32 s7, 104(sp)
    d15c:	44 00 00 f4 	bnz s4, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x24c>
    d160:	20 00 f1 c0 	move s1, s2
    d164:	5e 70 01 a8 	load_32 s2, 92(sp)
    d168:	46 00 31 c1 	cmpge_i s2, s6, s2
    d16c:	62 03 00 f4 	bnz s2, 108 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x2c0>
    d170:	21 08 00 00 	or s1, s1, 2
    d174:	40 00 f3 c0 	move s2, s6
    d178:	f9 03 00 f4 	bnz s25, 124 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x2dc>
    d17c:	1d 00 00 f6 	b 116 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x2d8>
    d180:	40 83 f1 c0 	move s26, s3
    d184:	3e 70 01 a8 	load_32 s1, 92(sp)
    d188:	03 80 6d c0 	sub_i s0, s3, s27
    d18c:	21 00 6c c0 	sub_i s1, s1, s24
    d190:	00 80 70 c0 	mull_i s0, s0, s1
    d194:	3e 90 01 a8 	load_32 s1, 100(sp)
    d198:	21 00 6c c0 	sub_i s1, s1, s24
    d19c:	ca 21 00 f8 	call 34600 <__divsi3>
    d1a0:	3e 60 01 a8 	load_32 s1, 88(sp)
    d1a4:	00 80 5d c0 	add_i s0, s0, s27
    d1a8:	5e 40 01 a8 	load_32 s2, 80(sp)
    d1ac:	20 80 20 c1 	cmpgt_i s1, s0, s1
    d1b0:	41 00 00 f4 	bnz s1, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x2a0>
    d1b4:	5e 20 01 a8 	load_32 s2, 72(sp)
    d1b8:	3e 11 01 a8 	load_32 s9, 68(sp)
    d1bc:	3e 30 01 a8 	load_32 s1, 76(sp)
    d1c0:	60 80 44 c1 	cmplt_i s3, s0, s9
    d1c4:	43 00 00 f4 	bnz s3, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x2b4>
    d1c8:	20 00 f1 c0 	move s1, s2
    d1cc:	de 70 01 a8 	load_32 s6, 92(sp)
    d1d0:	60 00 fd c0 	move s3, s26
    d1d4:	fe a0 01 a8 	load_32 s7, 104(sp)
    d1d8:	5e 50 01 a8 	load_32 s2, 84(sp)
    d1dc:	46 00 21 c1 	cmpgt_i s2, s6, s2
    d1e0:	42 04 00 01 	and s2, s2, 1
    d1e4:	21 00 01 c0 	or s1, s1, s2
    d1e8:	40 00 f3 c0 	move s2, s6
    d1ec:	59 00 00 f4 	bnz s25, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x2dc>
    d1f0:	40 00 fc c0 	move s2, s24
    d1f4:	59 00 00 f4 	bnz s25, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x2e4>
    d1f8:	85 ff ff f7 	b -492 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0xf4>
    d1fc:	59 00 00 f4 	bnz s25, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x2ec>
    d200:	85 ff ff f7 	b -492 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0xfc>
    d204:	80 80 f0 c0 	move s4, s1
    d208:	59 00 00 f4 	bnz s25, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x2f8>
    d20c:	85 ff ff f7 	b -492 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x108>
    d210:	59 00 00 f4 	bnz s25, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x300>
    d214:	85 ff ff f7 	b -492 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x110>
    d218:	20 00 f0 c0 	move s1, s0
    d21c:	59 00 00 f4 	bnz s25, 8 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x30c>
    d220:	85 ff ff f7 	b -492 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x11c>
    d224:	60 83 f0 c0 	move s27, s1
    d228:	a7 00 02 c0 	or s5, s7, s4
    d22c:	00 03 f1 c0 	move s24, s2
    d230:	c5 f2 ff f5 	bnz s5, -424 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x170>
    d234:	0d 00 00 f6 	b 52 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x350>
    d238:	be 50 01 a8 	load_32 s5, 84(sp)
    d23c:	b8 80 22 c1 	cmpgt_i s5, s24, s5
    d240:	a5 04 00 01 	and s5, s5, 1
    d244:	de 60 01 a8 	load_32 s6, 88(sp)
    d248:	c3 00 23 c1 	cmpgt_i s6, s3, s6
    d24c:	26 eb ff f5 	bnz s6, -668 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0x98>
    d250:	20 00 f2 c0 	move s1, s4
    d254:	83 80 44 c1 	cmplt_i s4, s3, s9
    d258:	24 eb ff f5 	bnz s4, -668 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0xa4>
    d25c:	57 ff ff f7 	b -676 <_ZN9librender15drawLineClippedEPNS_7SurfaceEiiiijiiii+0xa0>
    d260:	40 00 fc c0 	move s2, s24
    d264:	20 80 fd c0 	move s1, s27
    d268:	1e f0 00 a8 	load_32 s0, 60(sp)
    d26c:	9e 90 01 a8 	load_32 s4, 100(sp)
    d270:	be 00 01 a8 	load_32 s5, 64(sp)
    d274:	08 00 00 f8 	call 32 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij>
    d278:	fe b3 01 a8 	load_32 ra, 108(sp)
    d27c:	7e c3 01 a8 	load_32 s27, 112(sp)
    d280:	5e d3 01 a8 	load_32 s26, 116(sp)
    d284:	3e e3 01 a8 	load_32 s25, 120(sp)
    d288:	1e f3 01 a8 	load_32 s24, 124(sp)
    d28c:	de 03 02 05 	add_i sp, sp, 128
    d290:	1f 00 00 f0 	ret

000000000000d294 _ZN9librender8drawLineEPNS_7SurfaceEiiiij:
    d294:	02 01 22 c1 	cmpgt_i s8, s2, s4
    d298:	e0 00 f1 c0 	move s7, s2
    d29c:	48 00 00 f4 	bnz s8, 8 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x10>
    d2a0:	0c 00 00 f6 	b 48 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x3c>
    d2a4:	c0 80 f0 c0 	move s6, s1
    d2a8:	48 00 00 f4 	bnz s8, 8 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x1c>
    d2ac:	0c 00 00 f6 	b 48 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x48>
    d2b0:	48 00 00 f4 	bnz s8, 8 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x24>
    d2b4:	0c 00 00 f6 	b 48 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x50>
    d2b8:	48 00 00 f4 	bnz s8, 8 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x2c>
    d2bc:	0c 00 00 f6 	b 48 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x58>
    d2c0:	46 80 21 c1 	cmpgt_i s2, s6, s3
    d2c4:	c2 01 00 f4 	bnz s2, 56 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x68>
    d2c8:	23 01 63 c0 	sub_i s9, s3, s6
    d2cc:	0d 00 00 f6 	b 52 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x6c>
    d2d0:	e0 00 f2 c0 	move s7, s4
    d2d4:	c0 80 f0 c0 	move s6, s1
    d2d8:	c8 fe ff f5 	bnz s8, -40 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x1c>
    d2dc:	c0 80 f1 c0 	move s6, s3
    d2e0:	c8 fe ff f5 	bnz s8, -40 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x24>
    d2e4:	80 00 f1 c0 	move s4, s2
    d2e8:	c8 fe ff f5 	bnz s8, -40 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x2c>
    d2ec:	60 80 f0 c0 	move s3, s1
    d2f0:	46 80 21 c1 	cmpgt_i s2, s6, s3
    d2f4:	42 00 00 f4 	bnz s2, 8 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x68>
    d2f8:	f4 ff ff f7 	b -48 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x34>
    d2fc:	26 81 61 c0 	sub_i s9, s6, s3
    d300:	29 04 00 05 	add_i s1, s9, 1
    d304:	67 01 62 c0 	sub_i s11, s7, s4
    d308:	01 81 84 c1 	cmplt_u s8, s1, s9
    d30c:	88 05 00 01 	and s12, s8, 1
    d310:	62 00 00 f4 	bnz s2, 12 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x88>
    d314:	00 fd ff 0f 	move s8, -1
    d318:	02 00 00 f6 	b 8 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x8c>
    d31c:	00 05 00 0f 	move s8, 1
    d320:	40 30 03 a8 	load_32 s2, 204(s0)
    d324:	40 01 03 a8 	load_32 s10, 192(s0)
    d328:	03 08 00 0b 	shl s0, s3, 2
    d32c:	02 00 50 c0 	add_i s0, s2, s0
    d330:	aa 01 72 c0 	mull_i s13, s10, s4
    d334:	4b 04 00 05 	add_i s2, s11, 1
    d338:	ad 09 00 0b 	shl s13, s13, 2
    d33c:	00 80 56 c0 	add_i s0, s0, s13
    d340:	4c 01 00 f2 	bz s12, 40 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0xd4>
    d344:	2b 00 00 14 	cmplt_i s1, s11, 0
    d348:	01 08 00 f4 	bnz s1, 256 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x1b4>
    d34c:	2a 08 00 0b 	shl s1, s10, 2
    d350:	42 fc ff 05 	add_i s2, s2, -1
    d354:	a0 00 00 88 	store_32 s5, (s0)
    d358:	00 80 50 c0 	add_i s0, s0, s1
    d35c:	62 00 00 12 	cmpgt_i s3, s2, 0
    d360:	83 ff ff f5 	bnz s3, -16 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0xbc>
    d364:	39 00 00 f6 	b 228 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x1b4>
    d368:	42 00 00 f4 	bnz s2, 8 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0xdc>
    d36c:	1c 00 00 f6 	b 112 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x148>
    d370:	29 81 25 c1 	cmpgt_i s9, s9, s11
    d374:	49 00 00 f4 	bnz s9, 8 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0xe8>
    d378:	22 00 00 f6 	b 136 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x16c>
    d37c:	83 00 03 c1 	cmpeq_i s4, s3, s6
    d380:	a0 00 00 88 	store_32 s5, (s0)
    d384:	24 06 00 f4 	bnz s4, 196 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x1b4>
    d388:	80 00 00 0f 	move s4, 0
    d38c:	ea 08 00 0b 	shl s7, s10, 2
    d390:	28 09 00 0b 	shl s9, s8, 2
    d394:	60 01 f2 c0 	move s11, s4
    d398:	40 01 f1 c0 	move s10, s2
    d39c:	6b 01 00 11 	cmpne_i s11, s11, 0
    d3a0:	4b 00 00 f4 	bnz s11, 8 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x114>
    d3a4:	02 00 00 f6 	b 8 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x118>
    d3a8:	00 80 53 c0 	add_i s0, s0, s7
    d3ac:	80 81 f0 c0 	move s12, s1
    d3b0:	4b 00 00 f4 	bnz s11, 8 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x124>
    d3b4:	80 01 f2 c0 	move s12, s4
    d3b8:	4a 01 66 c0 	sub_i s10, s10, s12
    d3bc:	63 00 54 c0 	add_i s3, s3, s8
    d3c0:	00 80 54 c0 	add_i s0, s0, s9
    d3c4:	4a 01 51 c0 	add_i s10, s10, s2
    d3c8:	83 01 03 c1 	cmpeq_i s12, s3, s6
    d3cc:	a0 00 00 88 	store_32 s5, (s0)
    d3d0:	6a 81 20 c1 	cmpgt_i s11, s10, s1
    d3d4:	ac 03 00 f4 	bnz s12, 116 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x1b4>
    d3d8:	f1 ff ff f7 	b -60 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x108>
    d3dc:	49 00 00 14 	cmplt_i s2, s9, 0
    d3e0:	42 03 00 f4 	bnz s2, 104 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x1b4>
    d3e4:	48 08 00 0b 	shl s2, s8, 2
    d3e8:	21 fc ff 05 	add_i s1, s1, -1
    d3ec:	a0 00 00 88 	store_32 s5, (s0)
    d3f0:	00 00 51 c0 	add_i s0, s0, s2
    d3f4:	61 00 00 12 	cmpgt_i s3, s1, 0
    d3f8:	83 ff ff f5 	bnz s3, -16 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x154>
    d3fc:	13 00 00 f6 	b 76 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x1b4>
    d400:	60 00 00 0f 	move s3, 0
    d404:	c8 08 00 0b 	shl s6, s8, 2
    d408:	0a 09 00 0b 	shl s8, s10, 2
    d40c:	20 81 f1 c0 	move s9, s3
    d410:	29 81 50 c0 	add_i s9, s9, s1
    d414:	a0 00 00 88 	store_32 s5, (s0)
    d418:	40 01 f1 c0 	move s10, s2
    d41c:	69 01 21 c1 	cmpgt_i s11, s9, s2
    d420:	4b 00 00 f4 	bnz s11, 8 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x194>
    d424:	40 81 f1 c0 	move s10, s3
    d428:	4b 00 00 f4 	bnz s11, 8 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x19c>
    d42c:	02 00 00 f6 	b 8 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x1a0>
    d430:	00 00 53 c0 	add_i s0, s0, s6
    d434:	29 01 65 c0 	sub_i s9, s9, s10
    d438:	44 81 43 c1 	cmplt_i s10, s4, s7
    d43c:	84 04 00 05 	add_i s4, s4, 1
    d440:	00 00 54 c0 	add_i s0, s0, s8
    d444:	6a fe ff f5 	bnz s10, -52 <_ZN9librender8drawLineEPNS_7SurfaceEiiiij+0x17c>
    d448:	1f 00 00 f0 	ret

000000000000d44c malloc:
    d44c:	de 03 ff 05 	add_i sp, sp, -64
    d450:	1e f3 00 88 	store_32 s24, 60(sp)
    d454:	3e e3 00 88 	store_32 s25, 56(sp)
    d458:	5e d3 00 88 	store_32 s26, 52(sp)
    d45c:	7e c3 00 88 	store_32 s27, 48(sp)
    d460:	fe b3 00 88 	store_32 ra, 44(sp)
    d464:	2c 00 00 4f 	movehi s1, 12
    d468:	21 53 04 00 	or s25, s1, 276
    d46c:	39 00 00 a8 	load_32 s1, (s25)
    d470:	61 05 00 f4 	bnz s1, 172 <malloc+0xd0>
    d474:	2c 00 00 4f 	movehi s1, 12
    d478:	40 04 00 0f 	move s2, 1
    d47c:	21 20 0c 00 	or s1, s1, 776
    d480:	61 00 00 aa 	load_sync s3, (s1)
    d484:	80 00 f1 c0 	move s4, s2
    d488:	81 00 00 8a 	store_sync s4, (s1)  
    d48c:	a4 ff ff f3 	bz s4, -12 <malloc+0x34>
    d490:	03 01 00 f2 	bz s3, 32 <malloc+0x64>
    d494:	61 00 00 a8 	load_32 s3, (s1)
    d498:	e3 ff ff f5 	bnz s3, -4 <malloc+0x48>
    d49c:	61 00 00 aa 	load_sync s3, (s1)
    d4a0:	80 00 f1 c0 	move s4, s2
    d4a4:	81 00 00 8a 	store_sync s4, (s1)  
    d4a8:	a4 ff ff f3 	bz s4, -12 <malloc+0x50>
    d4ac:	43 ff ff f5 	bnz s3, -24 <malloc+0x48>
    d4b0:	59 00 00 a8 	load_32 s2, (s25)
    d4b4:	a2 02 00 f4 	bnz s2, 84 <malloc+0xbc>
    d4b8:	40 00 40 0f 	move s2, 4096
    d4bc:	59 20 00 88 	store_32 s2, 8(s25)
    d4c0:	59 10 00 88 	store_32 s2, 4(s25)
    d4c4:	40 fc ff 0f 	move s2, -1
    d4c8:	59 30 00 88 	store_32 s2, 12(s25)
    d4cc:	4c 00 00 4f 	movehi s2, 12
    d4d0:	60 20 00 4f 	movehi s3, 256
    d4d4:	79 40 00 88 	store_32 s3, 16(s25)
    d4d8:	60 08 00 0f 	move s3, 2
    d4dc:	79 50 00 88 	store_32 s3, 20(s25)
    d4e0:	42 b0 04 00 	or s2, s2, 300
    d4e4:	aa 54 55 4f 	movehi s5, 174762
    d4e8:	80 00 00 0f 	move s4, 0
    d4ec:	62 f0 06 88 	store_32 s3, 444(s2)
    d4f0:	7e 90 00 05 	add_i s3, sp, 36
    d4f4:	82 00 07 88 	store_32 s4, 448(s2)
    d4f8:	45 60 55 00 	or s2, s5, 5464
    d4fc:	63 c0 ff 01 	and s3, s3, -16
    d500:	43 00 31 c0 	xor s2, s3, s2
    d504:	59 00 00 88 	store_32 s2, (s25)
    d508:	40 00 00 0f 	move s2, 0
    d50c:	61 00 00 aa 	load_sync s3, (s1)
    d510:	60 00 f1 c0 	move s3, s2
    d514:	61 00 00 8a 	store_sync s3, (s1)  
    d518:	a3 ff ff f3 	bz s3, -12 <malloc+0xc0>
    d51c:	2c 00 00 4f 	movehi s1, 12
    d520:	01 b3 04 00 	or s24, s1, 300
    d524:	38 f0 06 a0 	load_u8 s1, 444(s24)
    d528:	21 08 00 01 	and s1, s1, 2
    d52c:	e1 01 00 f2 	bz s1, 60 <malloc+0x11c>
    d530:	38 00 07 05 	add_i s1, s24, 448
    d534:	40 04 00 0f 	move s2, 1
    d538:	61 00 00 aa 	load_sync s3, (s1)
    d53c:	80 00 f1 c0 	move s4, s2
    d540:	81 00 00 8a 	store_sync s4, (s1)  
    d544:	a4 ff ff f3 	bz s4, -12 <malloc+0xec>
    d548:	03 01 00 f2 	bz s3, 32 <malloc+0x11c>
    d54c:	78 00 07 a8 	load_32 s3, 448(s24)
    d550:	e3 ff ff f5 	bnz s3, -4 <malloc+0x100>
    d554:	61 00 00 aa 	load_sync s3, (s1)
    d558:	80 00 f1 c0 	move s4, s2
    d55c:	81 00 00 8a 	store_sync s4, (s1)  
    d560:	a4 ff ff f3 	bz s4, -12 <malloc+0x108>
    d564:	43 ff ff f5 	bnz s3, -24 <malloc+0x100>
    d568:	20 d0 03 16 	cmpgt_u s1, s0, 244
    d56c:	c1 00 00 f4 	bnz s1, 24 <malloc+0x138>
    d570:	20 2c 00 18 	cmplt_u s1, s0, 11
    d574:	21 01 00 f4 	bnz s1, 36 <malloc+0x14c>
    d578:	00 2c 00 05 	add_i s0, s0, 11
    d57c:	40 e3 ff 01 	and s26, s0, -8
    d580:	07 00 00 f6 	b 28 <malloc+0x150>
    d584:	20 fc fe 16 	cmpgt_u s1, s0, -65
    d588:	41 00 00 f4 	bnz s1, 8 <malloc+0x144>
    d58c:	1d 00 00 f6 	b 116 <malloc+0x1b4>
    d590:	40 ff ff 0f 	move s26, -1
    d594:	6e 01 00 f6 	b 1464 <malloc+0x700>
    d598:	40 43 00 0f 	move s26, 16
    d59c:	18 00 00 a8 	load_32 s0, (s24)
    d5a0:	5a 0c 00 0a 	shr s2, s26, 3
    d5a4:	60 00 a1 c0 	shr s3, s0, s2
    d5a8:	23 0c 00 01 	and s1, s3, 3
    d5ac:	81 04 00 f2 	bz s1, 144 <malloc+0x1f0>
    d5b0:	23 fc ff 03 	xor s1, s3, -1
    d5b4:	21 04 00 01 	and s1, s1, 1
    d5b8:	a1 00 51 c0 	add_i s5, s1, s2
    d5bc:	25 0c 00 0b 	shl s1, s5, 3
    d5c0:	98 80 50 c0 	add_i s4, s24, s1
    d5c4:	44 c0 00 a8 	load_32 s2, 48(s4)
    d5c8:	84 a0 00 05 	add_i s4, s4, 40
    d5cc:	62 20 00 a8 	load_32 s3, 8(s2)
    d5d0:	c3 00 12 c1 	cmpne_i s6, s3, s4
    d5d4:	46 00 00 f4 	bnz s6, 8 <malloc+0x190>
    d5d8:	4c 00 00 f6 	b 304 <malloc+0x2bc>
    d5dc:	18 40 00 a8 	load_32 s0, 16(s24)
    d5e0:	00 80 61 c1 	cmpgt_u s0, s0, s3
    d5e4:	60 e4 00 f4 	bnz s0, 7308 <malloc+0x1e24>
    d5e8:	03 30 00 a8 	load_32 s0, 12(s3)
    d5ec:	00 00 11 c1 	cmpne_i s0, s0, s2
    d5f0:	00 e4 00 f4 	bnz s0, 7296 <malloc+0x1e24>
    d5f4:	83 30 00 88 	store_32 s4, 12(s3)
    d5f8:	64 20 00 88 	store_32 s3, 8(s4)
    d5fc:	48 00 00 f6 	b 288 <malloc+0x2d0>
    d600:	00 2c 00 05 	add_i s0, s0, 11
    d604:	38 10 00 a8 	load_32 s1, 4(s24)
    d608:	40 e3 ff 01 	and s26, s0, -8
    d60c:	01 2a 00 f2 	bz s1, 1344 <malloc+0x700>
    d610:	60 00 00 0f 	move s3, 0
    d614:	00 20 00 0a 	shr s0, s0, 8
    d618:	a0 80 f1 c0 	move s5, s3
    d61c:	e0 0c 00 f2 	bz s0, 412 <malloc+0x36c>
    d620:	5f fc 00 4f 	movehi s2, 2047
    d624:	42 fc 7f 00 	or s2, s2, 8191
    d628:	5a 00 61 c1 	cmpgt_u s2, s26, s2
    d62c:	42 00 00 f4 	bnz s2, 8 <malloc+0x1e8>
    d630:	46 00 00 f6 	b 280 <malloc+0x2fc>
    d634:	a0 7c 00 0f 	move s5, 31
    d638:	60 00 00 f6 	b 384 <malloc+0x36c>
    d63c:	38 20 00 a8 	load_32 s1, 8(s24)
    d640:	9a 80 90 c1 	cmple_u s4, s26, s1
    d644:	44 28 00 f4 	bnz s4, 1288 <malloc+0x700>
    d648:	03 17 00 f2 	bz s3, 736 <malloc+0x4dc>
    d64c:	80 08 00 0f 	move s4, 2
    d650:	a0 00 00 0f 	move s5, 0
    d654:	84 00 b1 c0 	shl s4, s4, s2
    d658:	43 00 b1 c0 	shl s2, s3, s2
    d65c:	65 00 62 c0 	sub_i s3, s5, s4
    d660:	64 80 01 c0 	or s3, s4, s3
    d664:	42 80 11 c0 	and s2, s2, s3
    d668:	65 00 61 c0 	sub_i s3, s5, s2
    d66c:	42 80 11 c0 	and s2, s2, s3
    d670:	42 fc ff 05 	add_i s2, s2, -1
    d674:	62 30 00 0a 	shr s3, s2, 12
    d678:	63 40 00 01 	and s3, s3, 16
    d67c:	42 80 a1 c0 	shr s2, s2, s3
    d680:	82 14 00 0a 	shr s4, s2, 5
    d684:	84 20 00 01 	and s4, s4, 8
    d688:	42 00 a2 c0 	shr s2, s2, s4
    d68c:	64 80 01 c0 	or s3, s4, s3
    d690:	a2 08 00 0a 	shr s5, s2, 2
    d694:	a5 10 00 01 	and s5, s5, 4
    d698:	42 80 a2 c0 	shr s2, s2, s5
    d69c:	63 80 02 c0 	or s3, s3, s5
    d6a0:	c2 04 00 0a 	shr s6, s2, 1
    d6a4:	86 08 00 01 	and s4, s6, 2
    d6a8:	42 00 a2 c0 	shr s2, s2, s4
    d6ac:	63 00 02 c0 	or s3, s3, s4
    d6b0:	a2 04 00 0a 	shr s5, s2, 1
    d6b4:	85 04 00 01 	and s4, s5, 1
    d6b8:	63 00 02 c0 	or s3, s3, s4
    d6bc:	42 00 a2 c0 	shr s2, s2, s4
    d6c0:	c3 00 51 c0 	add_i s6, s3, s2
    d6c4:	a6 0c 00 0b 	shl s5, s6, 3
    d6c8:	98 80 52 c0 	add_i s4, s24, s5
    d6cc:	44 c0 00 a8 	load_32 s2, 48(s4)
    d6d0:	84 a0 00 05 	add_i s4, s4, 40
    d6d4:	62 20 00 a8 	load_32 s3, 8(s2)
    d6d8:	e3 00 12 c1 	cmpne_i s7, s3, s4
    d6dc:	47 00 00 f4 	bnz s7, 8 <malloc+0x298>
    d6e0:	a2 01 00 f6 	b 1672 <malloc+0x91c>
    d6e4:	d8 40 00 a8 	load_32 s6, 16(s24)
    d6e8:	c6 80 61 c1 	cmpgt_u s6, s6, s3
    d6ec:	26 dc 00 f4 	bnz s6, 7044 <malloc+0x1e24>
    d6f0:	c3 30 00 a8 	load_32 s6, 12(s3)
    d6f4:	c6 00 11 c1 	cmpne_i s6, s6, s2
    d6f8:	c6 db 00 f4 	bnz s6, 7032 <malloc+0x1e24>
    d6fc:	83 30 00 88 	store_32 s4, 12(s3)
    d700:	64 20 00 88 	store_32 s3, 8(s4)
    d704:	9e 01 00 f6 	b 1656 <malloc+0x930>
    d708:	60 04 00 0f 	move s3, 1
    d70c:	63 80 b2 c0 	shl s3, s3, s5
    d710:	63 fc ff 03 	xor s3, s3, -1
    d714:	00 80 11 c0 	and s0, s0, s3
    d718:	18 00 00 88 	store_32 s0, (s24)
    d71c:	02 80 50 c0 	add_i s0, s2, s1
    d720:	21 0c 00 00 	or s1, s1, 3
    d724:	22 10 00 88 	store_32 s1, 4(s2)
    d728:	62 23 00 05 	add_i s27, s2, 8
    d72c:	20 10 00 a8 	load_32 s1, 4(s0)
    d730:	21 04 00 00 	or s1, s1, 1
    d734:	20 10 00 88 	store_32 s1, 4(s0)
    d738:	18 f0 06 a0 	load_u8 s0, 444(s24)
    d73c:	00 08 00 01 	and s0, s0, 2
    d740:	e0 37 00 f2 	bz s0, 1788 <malloc+0x9f0>
    d744:	b8 01 00 f6 	b 1760 <malloc+0x9d8>
    d748:	5f 0c 00 4f 	movehi s2, 127
    d74c:	9f 04 00 4f 	movehi s4, 63
    d750:	be 00 00 4f 	movehi s5, 30
    d754:	42 00 7c 00 	or s2, s2, 7936
    d758:	40 00 51 c0 	add_i s2, s0, s2
    d75c:	84 00 40 00 	or s4, s4, 4096
    d760:	42 40 00 0a 	shr s2, s2, 16
    d764:	42 20 00 01 	and s2, s2, 8
    d768:	00 00 b1 c0 	shl s0, s0, s2
    d76c:	80 00 52 c0 	add_i s4, s0, s4
    d770:	84 40 00 0a 	shr s4, s4, 16
    d774:	84 10 00 01 	and s4, s4, 4
    d778:	00 00 b2 c0 	shl s0, s0, s4
    d77c:	44 00 01 c0 	or s2, s4, s2
    d780:	a0 80 52 c0 	add_i s5, s0, s5
    d784:	a5 40 00 0a 	shr s5, s5, 16
    d788:	85 08 00 01 	and s4, s5, 2
    d78c:	a0 38 00 0f 	move s5, 14
    d790:	42 00 02 c0 	or s2, s2, s4
    d794:	00 00 b2 c0 	shl s0, s0, s4
    d798:	45 00 61 c0 	sub_i s2, s5, s2
    d79c:	00 3c 00 0a 	shr s0, s0, 15
    d7a0:	02 00 50 c0 	add_i s0, s2, s0
    d7a4:	40 1c 00 05 	add_i s2, s0, 7
    d7a8:	5a 00 a1 c0 	shr s2, s26, s2
    d7ac:	00 04 00 0b 	shl s0, s0, 1
    d7b0:	42 04 00 01 	and s2, s2, 1
    d7b4:	a2 00 00 c0 	or s5, s2, s0
    d7b8:	05 08 00 0b 	shl s0, s5, 2
    d7bc:	18 00 50 c0 	add_i s0, s24, s0
    d7c0:	43 00 6d c0 	sub_i s2, s3, s26
    d7c4:	80 c0 04 a8 	load_32 s4, 304(s0)
    d7c8:	24 0a 00 f2 	bz s4, 324 <malloc+0x4c0>
    d7cc:	c0 00 00 0f 	move s6, 0
    d7d0:	65 7c 00 10 	cmpeq_i s3, s5, 31
    d7d4:	00 00 f3 c0 	move s0, s6
    d7d8:	83 00 00 f4 	bnz s3, 16 <malloc+0x39c>
    d7dc:	00 64 00 0f 	move s0, 25
    d7e0:	65 04 00 0a 	shr s3, s5, 1
    d7e4:	00 80 61 c0 	sub_i s0, s0, s3
    d7e8:	fa 00 b0 c0 	shl s7, s26, s0
    d7ec:	60 00 f3 c0 	move s3, s6
    d7f0:	00 00 f3 c0 	move s0, s6
    d7f4:	04 11 00 a8 	load_32 s8, 4(s4)
    d7f8:	08 e1 ff 01 	and s8, s8, -8
    d7fc:	08 01 6d c0 	sub_i s8, s8, s26
    d800:	28 01 71 c1 	cmpge_u s9, s8, s2
    d804:	89 00 00 f4 	bnz s9, 16 <malloc+0x3c8>
    d808:	40 00 f4 c0 	move s2, s8
    d80c:	00 00 f2 c0 	move s0, s4
    d810:	88 12 00 f2 	bz s8, 592 <malloc+0x614>
    d814:	07 75 00 0a 	shr s8, s7, 29
    d818:	08 11 00 01 	and s8, s8, 4
    d81c:	24 01 54 c0 	add_i s9, s4, s8
    d820:	04 51 00 a8 	load_32 s8, 20(s4)
    d824:	89 40 00 a8 	load_32 s4, 16(s9)
    d828:	20 81 f1 c0 	move s9, s3
    d82c:	48 01 02 c1 	cmpeq_i s10, s8, s4
    d830:	4a 01 00 f4 	bnz s10, 40 <malloc+0x40c>
    d834:	20 01 f4 c0 	move s9, s8
    d838:	08 01 00 10 	cmpeq_i s8, s8, 0
    d83c:	48 00 00 f4 	bnz s8, 8 <malloc+0x3f8>
    d840:	08 00 00 f6 	b 32 <malloc+0x414>
    d844:	04 01 00 11 	cmpne_i s8, s4, 0
    d848:	08 05 00 01 	and s8, s8, 1
    d84c:	e7 00 b4 c0 	shl s7, s7, s8
    d850:	24 fd ff f5 	bnz s4, -92 <malloc+0x3a8>
    d854:	08 00 00 f6 	b 32 <malloc+0x428>
    d858:	08 01 00 10 	cmpeq_i s8, s8, 0
    d85c:	48 ff ff f5 	bnz s8, -24 <malloc+0x3f8>
    d860:	60 80 f4 c0 	move s3, s9
    d864:	04 01 00 11 	cmpne_i s8, s4, 0
    d868:	08 05 00 01 	and s8, s8, 1
    d86c:	e7 00 b4 c0 	shl s7, s7, s8
    d870:	24 fc ff f5 	bnz s4, -124 <malloc+0x3a8>
    d874:	83 00 00 c0 	or s4, s3, s0
    d878:	24 05 00 f4 	bnz s4, 164 <malloc+0x4d0>
    d87c:	80 08 00 0f 	move s4, 2
    d880:	60 00 00 0f 	move s3, 0
    d884:	84 80 b2 c0 	shl s4, s4, s5
    d888:	a3 00 62 c0 	sub_i s5, s3, s4
    d88c:	84 80 02 c0 	or s4, s4, s5
    d890:	84 80 10 c0 	and s4, s4, s1
    d894:	c4 15 00 f2 	bz s4, 696 <malloc+0x700>
    d898:	63 00 62 c0 	sub_i s3, s3, s4
    d89c:	64 80 11 c0 	and s3, s4, s3
    d8a0:	63 fc ff 05 	add_i s3, s3, -1
    d8a4:	83 30 00 0a 	shr s4, s3, 12
    d8a8:	84 40 00 01 	and s4, s4, 16
    d8ac:	63 00 a2 c0 	shr s3, s3, s4
    d8b0:	a3 14 00 0a 	shr s5, s3, 5
    d8b4:	a5 20 00 01 	and s5, s5, 8
    d8b8:	63 80 a2 c0 	shr s3, s3, s5
    d8bc:	85 00 02 c0 	or s4, s5, s4
    d8c0:	c3 08 00 0a 	shr s6, s3, 2
    d8c4:	c6 10 00 01 	and s6, s6, 4
    d8c8:	63 00 a3 c0 	shr s3, s3, s6
    d8cc:	84 00 03 c0 	or s4, s4, s6
    d8d0:	e3 04 00 0a 	shr s7, s3, 1
    d8d4:	a7 08 00 01 	and s5, s7, 2
    d8d8:	63 80 a2 c0 	shr s3, s3, s5
    d8dc:	84 80 02 c0 	or s4, s4, s5
    d8e0:	c3 04 00 0a 	shr s6, s3, 1
    d8e4:	a6 04 00 01 	and s5, s6, 1
    d8e8:	84 80 02 c0 	or s4, s4, s5
    d8ec:	63 80 a2 c0 	shr s3, s3, s5
    d8f0:	64 80 51 c0 	add_i s3, s4, s3
    d8f4:	63 08 00 0b 	shl s3, s3, 2
    d8f8:	78 80 51 c0 	add_i s3, s24, s3
    d8fc:	63 c0 04 a8 	load_32 s3, 304(s3)
    d900:	80 80 f1 c0 	move s4, s3
    d904:	c3 0e 00 f2 	bz s3, 472 <malloc+0x690>
    d908:	58 00 00 f6 	b 352 <malloc+0x61c>
    d90c:	00 80 f1 c0 	move s0, s3
    d910:	83 00 00 c0 	or s4, s3, s0
    d914:	44 00 00 f4 	bnz s4, 8 <malloc+0x4d0>
    d918:	d9 ff ff f7 	b -156 <malloc+0x430>
    d91c:	80 80 f1 c0 	move s4, s3
    d920:	e3 0d 00 f2 	bz s3, 444 <malloc+0x690>
    d924:	51 00 00 f6 	b 324 <malloc+0x61c>
    d928:	b8 10 00 a8 	load_32 s5, 4(s24)
    d92c:	05 11 00 f2 	bz s5, 544 <malloc+0x700>
    d930:	c0 00 00 0f 	move s6, 0
    d934:	46 80 62 c0 	sub_i s2, s6, s5
    d938:	45 00 11 c0 	and s2, s5, s2
    d93c:	42 fc ff 05 	add_i s2, s2, -1
    d940:	62 30 00 0a 	shr s3, s2, 12
    d944:	63 40 00 01 	and s3, s3, 16
    d948:	42 80 a1 c0 	shr s2, s2, s3
    d94c:	82 14 00 0a 	shr s4, s2, 5
    d950:	84 20 00 01 	and s4, s4, 8
    d954:	42 00 a2 c0 	shr s2, s2, s4
    d958:	64 80 01 c0 	or s3, s4, s3
    d95c:	e2 08 00 0a 	shr s7, s2, 2
    d960:	e7 10 00 01 	and s7, s7, 4
    d964:	42 80 a3 c0 	shr s2, s2, s7
    d968:	63 80 03 c0 	or s3, s3, s7
    d96c:	02 05 00 0a 	shr s8, s2, 1
    d970:	88 08 00 01 	and s4, s8, 2
    d974:	42 00 a2 c0 	shr s2, s2, s4
    d978:	63 00 02 c0 	or s3, s3, s4
    d97c:	e2 04 00 0a 	shr s7, s2, 1
    d980:	87 04 00 01 	and s4, s7, 1
    d984:	63 00 02 c0 	or s3, s3, s4
    d988:	42 00 a2 c0 	shr s2, s2, s4
    d98c:	43 00 51 c0 	add_i s2, s3, s2
    d990:	42 08 00 0b 	shl s2, s2, 2
    d994:	58 00 51 c0 	add_i s2, s24, s2
    d998:	42 c0 04 a8 	load_32 s2, 304(s2)
    d99c:	62 10 00 a8 	load_32 s3, 4(s2)
    d9a0:	e0 00 f1 c0 	move s7, s2
    d9a4:	63 e0 ff 01 	and s3, s3, -8
    d9a8:	63 00 6d c0 	sub_i s3, s3, s26
    d9ac:	87 40 00 a8 	load_32 s4, 16(s7)
    d9b0:	04 01 00 f4 	bnz s4, 32 <malloc+0x584>
    d9b4:	11 00 00 f6 	b 68 <malloc+0x5ac>
    d9b8:	60 80 f3 c0 	move s3, s7
    d9bc:	40 80 f4 c0 	move s2, s9
    d9c0:	e0 00 f2 c0 	move s7, s4
    d9c4:	87 40 00 a8 	load_32 s4, 16(s7)
    d9c8:	44 00 00 f4 	bnz s4, 8 <malloc+0x584>
    d9cc:	0b 00 00 f6 	b 44 <malloc+0x5ac>
    d9d0:	e4 10 00 a8 	load_32 s7, 4(s4)
    d9d4:	e7 e0 ff 01 	and s7, s7, -8
    d9d8:	e7 00 6d c0 	sub_i s7, s7, s26
    d9dc:	07 81 81 c1 	cmplt_u s8, s7, s3
    d9e0:	48 00 00 f4 	bnz s8, 8 <malloc+0x59c>
    d9e4:	e0 80 f1 c0 	move s7, s3
    d9e8:	20 01 f2 c0 	move s9, s4
    d9ec:	68 fe ff f5 	bnz s8, -52 <malloc+0x56c>
    d9f0:	20 01 f1 c0 	move s9, s2
    d9f4:	f1 ff ff f7 	b -60 <malloc+0x56c>
    d9f8:	87 50 00 a8 	load_32 s4, 20(s7)
    d9fc:	44 00 00 f2 	bz s4, 8 <malloc+0x5b8>
    da00:	f4 ff ff f7 	b -48 <malloc+0x584>
    da04:	38 41 00 a8 	load_32 s9, 16(s24)
    da08:	89 00 61 c1 	cmpgt_u s4, s9, s2
    da0c:	24 c3 00 f4 	bnz s4, 6244 <malloc+0x1e24>
    da10:	82 00 5d c0 	add_i s4, s2, s26
    da14:	e4 00 91 c1 	cmple_u s7, s4, s2
    da18:	c7 c2 00 f4 	bnz s7, 6232 <malloc+0x1e24>
    da1c:	e2 60 00 a8 	load_32 s7, 24(s2)
    da20:	02 31 00 a8 	load_32 s8, 12(s2)
    da24:	48 01 01 c1 	cmpeq_i s10, s8, s2
    da28:	aa 21 00 f4 	bnz s10, 1076 <malloc+0xa10>
    da2c:	c2 20 00 a8 	load_32 s6, 8(s2)
    da30:	29 01 63 c1 	cmpgt_u s9, s9, s6
    da34:	e9 c1 00 f4 	bnz s9, 6204 <malloc+0x1e24>
    da38:	26 31 00 a8 	load_32 s9, 12(s6)
    da3c:	29 01 11 c1 	cmpne_i s9, s9, s2
    da40:	89 c1 00 f4 	bnz s9, 6192 <malloc+0x1e24>
    da44:	28 21 00 a8 	load_32 s9, 8(s8)
    da48:	29 01 11 c1 	cmpne_i s9, s9, s2
    da4c:	29 c1 00 f4 	bnz s9, 6180 <malloc+0x1e24>
    da50:	06 31 00 88 	store_32 s8, 12(s6)
    da54:	c8 20 00 88 	store_32 s6, 8(s8)
    da58:	47 56 00 f2 	bz s7, 2760 <malloc+0x10d4>
    da5c:	69 02 00 f6 	b 2468 <malloc+0xfb4>
    da60:	00 00 f2 c0 	move s0, s4
    da64:	40 00 f3 c0 	move s2, s6
    da68:	60 00 f0 c0 	move s3, s0
    da6c:	a0 00 f1 c0 	move s5, s2
    da70:	04 10 00 a8 	load_32 s0, 4(s4)
    da74:	00 e0 ff 01 	and s0, s0, -8
    da78:	40 00 6d c0 	sub_i s2, s0, s26
    da7c:	c2 80 82 c1 	cmplt_u s6, s2, s5
    da80:	a6 01 00 f4 	bnz s6, 52 <malloc+0x668>
    da84:	40 80 f2 c0 	move s2, s5
    da88:	00 00 f2 c0 	move s0, s4
    da8c:	46 00 00 f4 	bnz s6, 8 <malloc+0x648>
    da90:	0b 00 00 f6 	b 44 <malloc+0x670>
    da94:	c4 40 00 a8 	load_32 s6, 16(s4)
    da98:	46 00 00 f4 	bnz s6, 8 <malloc+0x654>
    da9c:	0b 00 00 f6 	b 44 <malloc+0x67c>
    daa0:	60 00 f0 c0 	move s3, s0
    daa4:	a0 00 f1 c0 	move s5, s2
    daa8:	80 00 f3 c0 	move s4, s6
    daac:	26 fe ff f5 	bnz s6, -60 <malloc+0x624>
    dab0:	0b 00 00 f6 	b 44 <malloc+0x690>
    dab4:	00 00 f2 c0 	move s0, s4
    dab8:	e6 fe ff f5 	bnz s6, -36 <malloc+0x648>
    dabc:	00 80 f1 c0 	move s0, s3
    dac0:	c4 40 00 a8 	load_32 s6, 16(s4)
    dac4:	e6 fe ff f5 	bnz s6, -36 <malloc+0x654>
    dac8:	c4 50 00 a8 	load_32 s6, 20(s4)
    dacc:	60 00 f0 c0 	move s3, s0
    dad0:	a0 00 f1 c0 	move s5, s2
    dad4:	80 00 f3 c0 	move s4, s6
    dad8:	c6 fc ff f5 	bnz s6, -104 <malloc+0x624>
    dadc:	80 03 00 f2 	bz s0, 112 <malloc+0x700>
    dae0:	78 20 00 a8 	load_32 s3, 8(s24)
    dae4:	63 00 6d c0 	sub_i s3, s3, s26
    dae8:	62 80 71 c1 	cmpge_u s3, s2, s3
    daec:	03 03 00 f4 	bnz s3, 96 <malloc+0x700>
    daf0:	d8 40 00 a8 	load_32 s6, 16(s24)
    daf4:	66 00 60 c1 	cmpgt_u s3, s6, s0
    daf8:	c3 bb 00 f4 	bnz s3, 6008 <malloc+0x1e24>
    dafc:	60 00 5d c0 	add_i s3, s0, s26
    db00:	83 00 90 c1 	cmple_u s4, s3, s0
    db04:	64 bb 00 f4 	bnz s4, 5996 <malloc+0x1e24>
    db08:	80 60 00 a8 	load_32 s4, 24(s0)
    db0c:	a0 30 00 a8 	load_32 s5, 12(s0)
    db10:	e5 00 00 c1 	cmpeq_i s7, s5, s0
    db14:	47 16 00 f4 	bnz s7, 712 <malloc+0x990>
    db18:	e0 20 00 a8 	load_32 s7, 8(s0)
    db1c:	c6 80 63 c1 	cmpgt_u s6, s6, s7
    db20:	86 ba 00 f4 	bnz s6, 5968 <malloc+0x1e24>
    db24:	c7 30 00 a8 	load_32 s6, 12(s7)
    db28:	c6 00 10 c1 	cmpne_i s6, s6, s0
    db2c:	26 ba 00 f4 	bnz s6, 5956 <malloc+0x1e24>
    db30:	c5 20 00 a8 	load_32 s6, 8(s5)
    db34:	c6 00 10 c1 	cmpne_i s6, s6, s0
    db38:	c6 b9 00 f4 	bnz s6, 5944 <malloc+0x1e24>
    db3c:	a7 30 00 88 	store_32 s5, 12(s7)
    db40:	e5 20 00 88 	store_32 s7, 8(s5)
    db44:	e4 25 00 f2 	bz s4, 1212 <malloc+0xbb4>
    db48:	da 00 00 f6 	b 872 <malloc+0xa64>
    db4c:	38 20 00 a8 	load_32 s1, 8(s24)
    db50:	01 00 8d c1 	cmplt_u s0, s1, s26
    db54:	40 00 00 f4 	bnz s0, 8 <malloc+0x710>
    db58:	12 00 00 f6 	b 72 <malloc+0x754>
    db5c:	18 30 00 a8 	load_32 s0, 12(s24)
    db60:	20 00 9d c1 	cmple_u s1, s0, s26
    db64:	21 04 00 f4 	bnz s1, 132 <malloc+0x79c>
    db68:	00 00 6d c0 	sub_i s0, s0, s26
    db6c:	18 30 00 88 	store_32 s0, 12(s24)
    db70:	38 60 00 a8 	load_32 s1, 24(s24)
    db74:	00 04 00 00 	or s0, s0, 1
    db78:	41 00 5d c0 	add_i s2, s1, s26
    db7c:	58 60 00 88 	store_32 s2, 24(s24)
    db80:	61 23 00 05 	add_i s27, s1, 8
    db84:	02 10 00 88 	store_32 s0, 4(s2)
    db88:	1a 0c 00 00 	or s0, s26, 3
    db8c:	01 10 00 88 	store_32 s0, 4(s1)
    db90:	18 f0 06 a0 	load_u8 s0, 444(s24)
    db94:	00 08 00 01 	and s0, s0, 2
    db98:	20 15 00 f2 	bz s0, 676 <malloc+0x9f0>
    db9c:	a2 00 00 f6 	b 648 <malloc+0x9d8>
    dba0:	41 00 6d c0 	sub_i s2, s1, s26
    dba4:	18 50 00 a8 	load_32 s0, 20(s24)
    dba8:	62 40 00 18 	cmplt_u s3, s2, 16
    dbac:	43 0b 00 f4 	bnz s3, 360 <malloc+0x8c8>
    dbb0:	60 00 5d c0 	add_i s3, s0, s26
    dbb4:	78 50 00 88 	store_32 s3, 20(s24)
    dbb8:	20 80 50 c0 	add_i s1, s0, s1
    dbbc:	58 20 00 88 	store_32 s2, 8(s24)
    dbc0:	82 04 00 00 	or s4, s2, 1
    dbc4:	83 10 00 88 	store_32 s4, 4(s3)
    dbc8:	60 23 00 05 	add_i s27, s0, 8
    dbcc:	41 00 00 88 	store_32 s2, (s1)
    dbd0:	3a 0c 00 00 	or s1, s26, 3
    dbd4:	20 10 00 88 	store_32 s1, 4(s0)
    dbd8:	18 f0 06 a0 	load_u8 s0, 444(s24)
    dbdc:	00 08 00 01 	and s0, s0, 2
    dbe0:	e0 12 00 f2 	bz s0, 604 <malloc+0x9f0>
    dbe4:	90 00 00 f6 	b 576 <malloc+0x9d8>
    dbe8:	19 00 00 a8 	load_32 s0, (s25)
    dbec:	20 05 00 f4 	bnz s0, 164 <malloc+0x844>
    dbf0:	0c 00 00 4f 	movehi s0, 12
    dbf4:	20 04 00 0f 	move s1, 1
    dbf8:	00 20 0c 00 	or s0, s0, 776
    dbfc:	40 00 00 aa 	load_sync s2, (s0)
    dc00:	60 80 f0 c0 	move s3, s1
    dc04:	60 00 00 8a 	store_sync s3, (s0)  
    dc08:	a3 ff ff f3 	bz s3, -12 <malloc+0x7b0>
    dc0c:	02 01 00 f2 	bz s2, 32 <malloc+0x7e0>
    dc10:	40 00 00 a8 	load_32 s2, (s0)
    dc14:	e2 ff ff f5 	bnz s2, -4 <malloc+0x7c4>
    dc18:	40 00 00 aa 	load_sync s2, (s0)
    dc1c:	60 80 f0 c0 	move s3, s1
    dc20:	60 00 00 8a 	store_sync s3, (s0)  
    dc24:	a3 ff ff f3 	bz s3, -12 <malloc+0x7cc>
    dc28:	42 ff ff f5 	bnz s2, -24 <malloc+0x7c4>
    dc2c:	39 00 00 a8 	load_32 s1, (s25)
    dc30:	61 02 00 f4 	bnz s1, 76 <malloc+0x830>
    dc34:	20 00 40 0f 	move s1, 4096
    dc38:	39 20 00 88 	store_32 s1, 8(s25)
    dc3c:	39 10 00 88 	store_32 s1, 4(s25)
    dc40:	20 fc ff 0f 	move s1, -1
    dc44:	39 30 00 88 	store_32 s1, 12(s25)
    dc48:	20 20 00 4f 	movehi s1, 256
    dc4c:	39 40 00 88 	store_32 s1, 16(s25)
    dc50:	20 08 00 0f 	move s1, 2
    dc54:	39 50 00 88 	store_32 s1, 20(s25)
    dc58:	6a 54 55 4f 	movehi s3, 174762
    dc5c:	38 f0 06 88 	store_32 s1, 444(s24)
    dc60:	3e a0 00 05 	add_i s1, sp, 40
    dc64:	40 00 00 0f 	move s2, 0
    dc68:	58 00 07 88 	store_32 s2, 448(s24)
    dc6c:	43 60 55 00 	or s2, s3, 5464
    dc70:	21 c0 ff 01 	and s1, s1, -16
    dc74:	21 00 31 c0 	xor s1, s1, s2
    dc78:	39 00 00 88 	store_32 s1, (s25)
    dc7c:	20 00 00 0f 	move s1, 0
    dc80:	40 00 00 aa 	load_sync s2, (s0)
    dc84:	40 80 f0 c0 	move s2, s1
    dc88:	40 00 00 8a 	store_sync s2, (s0)  
    dc8c:	a2 ff ff f3 	bz s2, -12 <malloc+0x834>
    dc90:	19 20 00 a8 	load_32 s0, 8(s25)
    dc94:	ba bc 00 05 	add_i s5, s26, 47
    dc98:	60 03 00 0f 	move s27, 0
    dc9c:	20 80 52 c0 	add_i s1, s0, s5
    dca0:	1b 00 60 c0 	sub_i s0, s27, s0
    dca4:	81 00 10 c0 	and s4, s1, s0
    dca8:	04 00 9d c1 	cmple_u s0, s4, s26
    dcac:	60 0b 00 f4 	bnz s0, 364 <malloc+0x9cc>
    dcb0:	18 e0 06 a8 	load_32 s0, 440(s24)
    dcb4:	e0 00 00 f2 	bz s0, 28 <malloc+0x884>
    dcb8:	58 c0 06 a8 	load_32 s2, 432(s24)
    dcbc:	22 00 52 c0 	add_i s1, s2, s4
    dcc0:	41 00 91 c1 	cmple_u s2, s1, s2
    dcc4:	a2 0a 00 f4 	bnz s2, 340 <malloc+0x9cc>
    dcc8:	01 00 60 c1 	cmpgt_u s0, s1, s0
    dccc:	60 0a 00 f4 	bnz s0, 332 <malloc+0x9cc>
    dcd0:	18 f0 06 a0 	load_u8 s0, 444(s24)
    dcd4:	00 10 00 01 	and s0, s0, 4
    dcd8:	a0 03 00 f4 	bnz s0, 116 <malloc+0x900>
    dcdc:	18 60 00 a8 	load_32 s0, 24(s24)
    dce0:	e0 00 00 0f 	move s7, 0
    dce4:	80 19 00 f2 	bz s0, 816 <malloc+0xbc8>
    dce8:	38 10 07 05 	add_i s1, s24, 452
    dcec:	41 00 00 a8 	load_32 s2, (s1)
    dcf0:	62 00 60 c1 	cmpgt_u s3, s2, s0
    dcf4:	a3 00 00 f4 	bnz s3, 20 <malloc+0x8bc>
    dcf8:	61 10 00 a8 	load_32 s3, 4(s1)
    dcfc:	42 80 51 c0 	add_i s2, s2, s3
    dd00:	42 00 60 c1 	cmpgt_u s2, s2, s0
    dd04:	62 18 00 f4 	bnz s2, 780 <malloc+0xbc4>
    dd08:	21 20 00 a8 	load_32 s1, 8(s1)
    dd0c:	01 ff ff f5 	bnz s1, -32 <malloc+0x8a0>
    dd10:	c1 00 00 f6 	b 772 <malloc+0xbc8>
    dd14:	40 00 00 0f 	move s2, 0
    dd18:	58 20 00 88 	store_32 s2, 8(s24)
    dd1c:	58 50 00 88 	store_32 s2, 20(s24)
    dd20:	40 80 50 c0 	add_i s2, s0, s1
    dd24:	21 0c 00 00 	or s1, s1, 3
    dd28:	20 10 00 88 	store_32 s1, 4(s0)
    dd2c:	60 23 00 05 	add_i s27, s0, 8
    dd30:	22 10 00 a8 	load_32 s1, 4(s2)
    dd34:	21 04 00 00 	or s1, s1, 1
    dd38:	22 10 00 88 	store_32 s1, 4(s2)
    dd3c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    dd40:	00 08 00 01 	and s0, s0, 2
    dd44:	c0 07 00 f2 	bz s0, 248 <malloc+0x9f0>
    dd48:	37 00 00 f6 	b 220 <malloc+0x9d8>
    dd4c:	40 fd ff 0f 	move s10, -1
    dd50:	20 01 00 0f 	move s9, 0
    dd54:	1f fc 7f 4f 	movehi s0, 262143
    dd58:	00 f8 7f 00 	or s0, s0, 8190
    dd5c:	04 00 60 c1 	cmpgt_u s0, s4, s0
    dd60:	20 4b 00 f4 	bnz s0, 2404 <malloc+0x1278>
    dd64:	2f 02 00 f6 	b 2236 <malloc+0x11d4>
    dd68:	60 04 00 0f 	move s3, 1
    dd6c:	63 00 b3 c0 	shl s3, s3, s6
    dd70:	63 fc ff 03 	xor s3, s3, -1
    dd74:	00 80 11 c0 	and s0, s0, s3
    dd78:	18 00 00 88 	store_32 s0, (s24)
    dd7c:	9a 0c 00 00 	or s4, s26, 3
    dd80:	82 10 00 88 	store_32 s4, 4(s2)
    dd84:	65 00 6d c0 	sub_i s3, s5, s26
    dd88:	82 00 5d c0 	add_i s4, s2, s26
    dd8c:	a2 80 52 c0 	add_i s5, s2, s5
    dd90:	c3 04 00 00 	or s6, s3, 1
    dd94:	c4 10 00 88 	store_32 s6, 4(s4)
    dd98:	65 00 00 88 	store_32 s3, (s5)
    dd9c:	81 03 00 f2 	bz s1, 112 <malloc+0x9c0>
    dda0:	a1 0c 00 0a 	shr s5, s1, 3
    dda4:	38 50 00 a8 	load_32 s1, 20(s24)
    dda8:	c0 04 00 0f 	move s6, 1
    ddac:	e5 0c 00 0b 	shl s7, s5, 3
    ddb0:	f8 80 53 c0 	add_i s7, s24, s7
    ddb4:	c6 80 b2 c0 	shl s6, s6, s5
    ddb8:	00 01 13 c0 	and s8, s0, s6
    ddbc:	a7 a0 00 05 	add_i s5, s7, 40
    ddc0:	48 00 00 f4 	bnz s8, 8 <malloc+0x97c>
    ddc4:	0b 00 00 f6 	b 44 <malloc+0x9a4>
    ddc8:	05 20 00 a8 	load_32 s0, 8(s5)
    ddcc:	d8 40 00 a8 	load_32 s6, 16(s24)
    ddd0:	c6 00 90 c1 	cmple_u s6, s6, s0
    ddd4:	46 01 00 f4 	bnz s6, 40 <malloc+0x9b0>
    ddd8:	26 05 00 f6 	b 5272 <malloc+0x1e24>
    dddc:	e0 50 00 a8 	load_32 s7, 20(s0)
    dde0:	47 00 00 f4 	bnz s7, 8 <malloc+0x99c>
    dde4:	23 00 00 f6 	b 140 <malloc+0xa24>
    dde8:	00 51 00 05 	add_i s8, s0, 20
    ddec:	24 00 00 f6 	b 144 <malloc+0xa30>
    ddf0:	00 00 03 c0 	or s0, s0, s6
    ddf4:	18 00 00 88 	store_32 s0, (s24)
    ddf8:	00 80 f2 c0 	move s0, s5
    ddfc:	25 20 00 88 	store_32 s1, 8(s5)
    de00:	20 30 00 88 	store_32 s1, 12(s0)
    de04:	01 20 00 88 	store_32 s0, 8(s1)
    de08:	a1 30 00 88 	store_32 s5, 12(s1)
    de0c:	78 20 00 88 	store_32 s3, 8(s24)
    de10:	62 23 00 05 	add_i s27, s2, 8
    de14:	98 50 00 88 	store_32 s4, 20(s24)
    de18:	18 f0 06 a0 	load_u8 s0, 444(s24)
    de1c:	00 08 00 01 	and s0, s0, 2
    de20:	e0 00 00 f2 	bz s0, 28 <malloc+0x9f0>
    de24:	18 00 07 05 	add_i s0, s24, 448
    de28:	20 00 00 0f 	move s1, 0
    de2c:	40 00 00 aa 	load_sync s2, (s0)
    de30:	40 80 f0 c0 	move s2, s1
    de34:	40 00 00 8a 	store_sync s2, (s0)  
    de38:	a2 ff ff f3 	bz s2, -12 <malloc+0x9e0>
    de3c:	00 80 fd c0 	move s0, s27
    de40:	fe b3 00 a8 	load_32 ra, 44(sp)
    de44:	7e c3 00 a8 	load_32 s27, 48(sp)
    de48:	5e d3 00 a8 	load_32 s26, 52(sp)
    de4c:	3e e3 00 a8 	load_32 s25, 56(sp)
    de50:	1e f3 00 a8 	load_32 s24, 60(sp)
    de54:	de 03 01 05 	add_i sp, sp, 64
    de58:	1f 00 00 f0 	ret
    de5c:	42 51 00 a8 	load_32 s10, 20(s2)
    de60:	4a 00 00 f4 	bnz s10, 8 <malloc+0xa1c>
    de64:	58 01 00 f6 	b 1376 <malloc+0xf78>
    de68:	62 51 00 05 	add_i s11, s2, 20
    de6c:	59 01 00 f6 	b 1380 <malloc+0xf84>
    de70:	e0 40 00 a8 	load_32 s7, 16(s0)
    de74:	47 39 00 f2 	bz s7, 1832 <malloc+0x1150>
    de78:	00 41 00 05 	add_i s8, s0, 16
    de7c:	a0 80 f3 c0 	move s5, s7
    de80:	e5 50 00 a8 	load_32 s7, 20(s5)
    de84:	20 01 f4 c0 	move s9, s8
    de88:	05 51 00 05 	add_i s8, s5, 20
    de8c:	87 ff ff f5 	bnz s7, -16 <malloc+0xa30>
    de90:	e5 40 00 a8 	load_32 s7, 16(s5)
    de94:	05 41 00 05 	add_i s8, s5, 16
    de98:	27 ff ff f5 	bnz s7, -28 <malloc+0xa30>
    de9c:	c6 80 64 c1 	cmpgt_u s6, s6, s9
    dea0:	86 9e 00 f4 	bnz s6, 5072 <malloc+0x1e24>
    dea4:	c0 00 00 0f 	move s6, 0
    dea8:	c9 00 00 88 	store_32 s6, (s9)
    deac:	a4 0a 00 f2 	bz s4, 340 <malloc+0xbb4>
    deb0:	c0 70 00 a8 	load_32 s6, 28(s0)
    deb4:	e6 08 00 0b 	shl s7, s6, 2
    deb8:	f8 80 53 c0 	add_i s7, s24, s7
    debc:	07 c1 04 a8 	load_32 s8, 304(s7)
    dec0:	00 01 14 c1 	cmpne_i s8, s0, s8
    dec4:	48 00 00 f4 	bnz s8, 8 <malloc+0xa80>
    dec8:	0c 00 00 f6 	b 48 <malloc+0xaac>
    decc:	d8 40 00 a8 	load_32 s6, 16(s24)
    ded0:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    ded4:	e6 9c 00 f4 	bnz s6, 5020 <malloc+0x1e24>
    ded8:	c4 40 00 a8 	load_32 s6, 16(s4)
    dedc:	c6 00 00 c1 	cmpeq_i s6, s6, s0
    dee0:	66 06 00 f4 	bnz s6, 204 <malloc+0xb60>
    dee4:	c0 50 00 0f 	move s6, 20
    dee8:	c4 00 53 c0 	add_i s6, s4, s6
    deec:	a6 00 00 88 	store_32 s5, (s6)
    def0:	85 08 00 f2 	bz s5, 272 <malloc+0xbb4>
    def4:	32 00 00 f6 	b 200 <malloc+0xb70>
    def8:	e7 c0 04 05 	add_i s7, s7, 304
    defc:	a7 00 00 88 	store_32 s5, (s7)
    df00:	e5 05 00 f4 	bnz s5, 188 <malloc+0xb70>
    df04:	80 04 00 0f 	move s4, 1
    df08:	84 00 b3 c0 	shl s4, s4, s6
    df0c:	84 fc ff 03 	xor s4, s4, -1
    df10:	21 00 12 c0 	and s1, s1, s4
    df14:	38 10 00 88 	store_32 s1, 4(s24)
    df18:	82 3c 00 16 	cmpgt_u s4, s2, 15
    df1c:	44 00 00 f4 	bnz s4, 8 <malloc+0xad8>
    df20:	3a 00 00 f6 	b 232 <malloc+0xbbc>
    df24:	9a 0c 00 00 	or s4, s26, 3
    df28:	80 10 00 88 	store_32 s4, 4(s0)
    df2c:	82 04 00 00 	or s4, s2, 1
    df30:	83 10 00 88 	store_32 s4, 4(s3)
    df34:	a3 00 51 c0 	add_i s5, s3, s2
    df38:	82 fc 03 16 	cmpgt_u s4, s2, 255
    df3c:	45 00 00 88 	store_32 s2, (s5)
    df40:	04 02 00 f4 	bnz s4, 64 <malloc+0xb34>
    df44:	22 0c 00 0a 	shr s1, s2, 3
    df48:	58 00 00 a8 	load_32 s2, (s24)
    df4c:	80 04 00 0f 	move s4, 1
    df50:	a1 0c 00 0b 	shl s5, s1, 3
    df54:	b8 80 52 c0 	add_i s5, s24, s5
    df58:	84 80 b0 c0 	shl s4, s4, s1
    df5c:	c2 00 12 c0 	and s6, s2, s4
    df60:	25 a0 00 05 	add_i s1, s5, 40
    df64:	46 00 00 f4 	bnz s6, 8 <malloc+0xb20>
    df68:	aa 00 00 f6 	b 680 <malloc+0xdc4>
    df6c:	41 20 00 a8 	load_32 s2, 8(s1)
    df70:	98 40 00 a8 	load_32 s4, 16(s24)
    df74:	84 00 91 c1 	cmple_u s4, s4, s2
    df78:	24 15 00 f4 	bnz s4, 676 <malloc+0xdd0>
    df7c:	bd 04 00 f6 	b 4852 <malloc+0x1e24>
    df80:	80 00 00 0f 	move s4, 0
    df84:	c2 20 00 0a 	shr s6, s2, 8
    df88:	a0 00 f2 c0 	move s5, s4
    df8c:	86 19 00 f2 	bz s6, 816 <malloc+0xe70>
    df90:	bf fc 00 4f 	movehi s5, 2047
    df94:	a5 fc 7f 00 	or s5, s5, 8191
    df98:	a2 80 62 c1 	cmpgt_u s5, s2, s5
    df9c:	45 00 00 f4 	bnz s5, 8 <malloc+0xb58>
    dfa0:	ab 00 00 f6 	b 684 <malloc+0xe00>
    dfa4:	a0 7c 00 0f 	move s5, 31
    dfa8:	c5 00 00 f6 	b 788 <malloc+0xe70>
    dfac:	c0 40 00 0f 	move s6, 16
    dfb0:	c4 00 53 c0 	add_i s6, s4, s6
    dfb4:	a6 00 00 88 	store_32 s5, (s6)
    dfb8:	45 02 00 f2 	bz s5, 72 <malloc+0xbb4>
    dfbc:	d8 40 00 a8 	load_32 s6, 16(s24)
    dfc0:	e6 80 62 c1 	cmpgt_u s7, s6, s5
    dfc4:	67 95 00 f4 	bnz s7, 4780 <malloc+0x1e24>
    dfc8:	85 60 00 88 	store_32 s4, 24(s5)
    dfcc:	80 40 00 a8 	load_32 s4, 16(s0)
    dfd0:	a4 00 00 f2 	bz s4, 20 <malloc+0xb98>
    dfd4:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    dfd8:	c6 94 00 f4 	bnz s6, 4760 <malloc+0x1e24>
    dfdc:	85 40 00 88 	store_32 s4, 16(s5)
    dfe0:	a4 60 00 88 	store_32 s5, 24(s4)
    dfe4:	80 50 00 a8 	load_32 s4, 20(s0)
    dfe8:	c4 00 00 f2 	bz s4, 24 <malloc+0xbb4>
    dfec:	d8 40 00 a8 	load_32 s6, 16(s24)
    dff0:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    dff4:	e6 93 00 f4 	bnz s6, 4732 <malloc+0x1e24>
    dff8:	85 50 00 88 	store_32 s4, 20(s5)
    dffc:	a4 60 00 88 	store_32 s5, 24(s4)
    e000:	82 3c 00 16 	cmpgt_u s4, s2, 15
    e004:	04 f9 ff f5 	bnz s4, -224 <malloc+0xad8>
    e008:	22 00 5d c0 	add_i s1, s2, s26
    e00c:	45 ff ff f7 	b -748 <malloc+0x8d4>
    e010:	e0 80 f0 c0 	move s7, s1
    e014:	0c 00 00 4f 	movehi s0, 12
    e018:	3a c0 00 05 	add_i s1, s26, 48
    e01c:	3e 80 00 88 	store_32 s1, 32(sp)
    e020:	60 23 0c 00 	or s27, s0, 776
    e024:	00 04 00 0f 	move s0, 1
    e028:	3b 00 00 aa 	load_sync s1, (s27)
    e02c:	40 00 f0 c0 	move s2, s0
    e030:	5b 00 00 8a 	store_sync s2, (s27)  
    e034:	a2 ff ff f3 	bz s2, -12 <malloc+0xbdc>
    e038:	01 01 00 f2 	bz s1, 32 <malloc+0xc0c>
    e03c:	3b 00 00 a8 	load_32 s1, (s27)
    e040:	e1 ff ff f5 	bnz s1, -4 <malloc+0xbf0>
    e044:	3b 00 00 aa 	load_sync s1, (s27)
    e048:	40 00 f0 c0 	move s2, s0
    e04c:	5b 00 00 8a 	store_sync s2, (s27)  
    e050:	a2 ff ff f3 	bz s2, -12 <malloc+0xbf8>
    e054:	41 ff ff f5 	bnz s1, -24 <malloc+0xbf0>
    e058:	47 00 00 f4 	bnz s7, 8 <malloc+0xc14>
    e05c:	1e 00 00 f6 	b 120 <malloc+0xc88>
    e060:	18 30 00 a8 	load_32 s0, 12(s24)
    e064:	c0 00 00 0f 	move s6, 0
    e068:	39 20 00 a8 	load_32 s1, 8(s25)
    e06c:	5f fc 7f 4f 	movehi s2, 262143
    e070:	05 00 60 c0 	sub_i s0, s5, s0
    e074:	00 80 50 c0 	add_i s0, s0, s1
    e078:	26 80 60 c0 	sub_i s1, s6, s1
    e07c:	00 80 10 c0 	and s0, s0, s1
    e080:	22 f8 7f 00 	or s1, s2, 8190
    e084:	20 80 60 c1 	cmpgt_u s1, s0, s1
    e088:	01 2b 00 f4 	bnz s1, 1376 <malloc+0x119c>
    e08c:	be 30 00 88 	store_32 s5, 12(sp)
    e090:	9e 70 00 88 	store_32 s4, 28(sp)
    e094:	1e 50 00 88 	store_32 s0, 20(sp)
    e098:	fe 60 00 88 	store_32 s7, 24(sp)
    e09c:	c6 17 00 f8 	call 24344 <sbrk>
    e0a0:	5e 60 00 a8 	load_32 s2, 24(sp)
    e0a4:	22 00 00 a8 	load_32 s1, (s2)
    e0a8:	42 10 00 a8 	load_32 s2, 4(s2)
    e0ac:	40 01 f0 c0 	move s10, s0
    e0b0:	01 00 51 c0 	add_i s0, s1, s2
    e0b4:	0a 00 10 c1 	cmpne_i s0, s10, s0
    e0b8:	40 06 00 f4 	bnz s0, 200 <malloc+0xd34>
    e0bc:	3e 51 00 a8 	load_32 s9, 20(sp)
    e0c0:	0a fc ff 10 	cmpeq_i s0, s10, -1
    e0c4:	c0 80 f4 c0 	move s6, s9
    e0c8:	9e 70 00 a8 	load_32 s4, 28(sp)
    e0cc:	e0 28 00 f4 	bnz s0, 1308 <malloc+0x119c>
    e0d0:	4b 01 00 f6 	b 1324 <malloc+0x11b0>
    e0d4:	00 00 00 0f 	move s0, 0
    e0d8:	be 30 00 88 	store_32 s5, 12(sp)
    e0dc:	9e 70 00 88 	store_32 s4, 28(sp)
    e0e0:	1e 40 00 88 	store_32 s0, 16(sp)
    e0e4:	b4 17 00 f8 	call 24272 <sbrk>
    e0e8:	a0 00 f0 c0 	move s5, s0
    e0ec:	05 fc ff 10 	cmpeq_i s0, s5, -1
    e0f0:	80 0a 00 f4 	bnz s0, 336 <malloc+0xdf4>
    e0f4:	99 10 00 a8 	load_32 s4, 4(s25)
    e0f8:	7e 70 00 a8 	load_32 s3, 28(sp)
    e0fc:	24 fc ff 05 	add_i s1, s4, -1
    e100:	00 80 f1 c0 	move s0, s3
    e104:	41 80 12 c0 	and s2, s1, s5
    e108:	e2 00 00 f2 	bz s2, 28 <malloc+0xcd8>
    e10c:	40 00 00 0f 	move s2, 0
    e110:	21 80 52 c0 	add_i s1, s1, s5
    e114:	63 80 62 c0 	sub_i s3, s3, s5
    e118:	02 00 62 c0 	sub_i s0, s2, s4
    e11c:	01 00 10 c0 	and s0, s1, s0
    e120:	03 00 50 c0 	add_i s0, s3, s0
    e124:	78 c0 06 a8 	load_32 s3, 432(s24)
    e128:	20 00 9d c1 	cmple_u s1, s0, s26
    e12c:	de 40 00 a8 	load_32 s6, 16(sp)
    e130:	a1 25 00 f4 	bnz s1, 1204 <malloc+0x1198>
    e134:	3f fc 7f 4f 	movehi s1, 262143
    e138:	9e 70 00 a8 	load_32 s4, 28(sp)
    e13c:	21 f8 7f 00 	or s1, s1, 8190
    e140:	20 80 60 c1 	cmpgt_u s1, s0, s1
    e144:	21 25 00 f4 	bnz s1, 1188 <malloc+0x119c>
    e148:	38 e0 06 a8 	load_32 s1, 440(s24)
    e14c:	c1 00 00 f2 	bz s1, 24 <malloc+0xd18>
    e150:	43 00 50 c0 	add_i s2, s3, s0
    e154:	62 80 91 c1 	cmple_u s3, s2, s3
    e158:	83 24 00 f4 	bnz s3, 1168 <malloc+0x119c>
    e15c:	22 80 60 c1 	cmpgt_u s1, s2, s1
    e160:	41 24 00 f4 	bnz s1, 1160 <malloc+0x119c>
    e164:	1e 50 00 88 	store_32 s0, 20(sp)
    e168:	be 60 00 88 	store_32 s5, 24(sp)
    e16c:	92 17 00 f8 	call 24136 <sbrk>
    e170:	3e 60 00 a8 	load_32 s1, 24(sp)
    e174:	40 01 f0 c0 	move s10, s0
    e178:	0a 80 00 c1 	cmpeq_i s0, s10, s1
    e17c:	00 22 00 f4 	bnz s0, 1088 <malloc+0x1170>
    e180:	9e 70 00 a8 	load_32 s4, 28(sp)
    e184:	c0 00 00 0f 	move s6, 0
    e188:	3e 51 00 a8 	load_32 s9, 20(sp)
    e18c:	1e 80 00 a8 	load_32 s0, 32(sp)
    e190:	00 80 94 c1 	cmple_u s0, s0, s9
    e194:	20 1e 00 f4 	bnz s0, 964 <malloc+0x110c>
    e198:	1f fc 7f 4f 	movehi s0, 262143
    e19c:	60 f8 7f 00 	or s3, s0, 8190
    e1a0:	29 80 61 c1 	cmpgt_u s1, s9, s3
    e1a4:	a1 1d 00 f4 	bnz s1, 948 <malloc+0x110c>
    e1a8:	2a fc ff 10 	cmpeq_i s1, s10, -1
    e1ac:	61 1d 00 f4 	bnz s1, 940 <malloc+0x110c>
    e1b0:	3e 63 00 88 	store_32 s25, 24(sp)
    e1b4:	39 20 00 a8 	load_32 s1, 8(s25)
    e1b8:	20 03 00 0f 	move s25, 0
    e1bc:	5e 30 00 a8 	load_32 s2, 12(sp)
    e1c0:	42 80 64 c0 	sub_i s2, s2, s9
    e1c4:	42 80 50 c0 	add_i s2, s2, s1
    e1c8:	39 80 60 c0 	sub_i s1, s25, s1
    e1cc:	02 80 10 c0 	and s0, s2, s1
    e1d0:	20 80 61 c1 	cmpgt_u s1, s0, s3
    e1d4:	a1 1e 00 f4 	bnz s1, 980 <malloc+0x115c>
    e1d8:	de 40 00 88 	store_32 s6, 16(sp)
    e1dc:	9e 70 00 88 	store_32 s4, 28(sp)
    e1e0:	5e 81 00 88 	store_32 s10, 32(sp)
    e1e4:	1e 30 00 88 	store_32 s0, 12(sp)
    e1e8:	73 17 00 f8 	call 24012 <sbrk>
    e1ec:	00 fc ff 10 	cmpeq_i s0, s0, -1
    e1f0:	e0 1e 00 f4 	bnz s0, 988 <malloc+0x1180>
    e1f4:	3e 51 00 a8 	load_32 s9, 20(sp)
    e1f8:	1e 30 00 a8 	load_32 s0, 12(sp)
    e1fc:	3e 63 00 a8 	load_32 s25, 24(sp)
    e200:	5e 81 00 a8 	load_32 s10, 32(sp)
    e204:	9e 70 00 a8 	load_32 s4, 28(sp)
    e208:	20 81 54 c0 	add_i s9, s0, s9
    e20c:	fc 00 00 f6 	b 1008 <malloc+0x11b0>
    e210:	42 00 02 c0 	or s2, s2, s4
    e214:	58 00 00 88 	store_32 s2, (s24)
    e218:	40 80 f0 c0 	move s2, s1
    e21c:	61 20 00 88 	store_32 s3, 8(s1)
    e220:	60 23 00 05 	add_i s27, s0, 8
    e224:	62 30 00 88 	store_32 s3, 12(s2)
    e228:	43 20 00 88 	store_32 s2, 8(s3)
    e22c:	23 30 00 88 	store_32 s1, 12(s3)
    e230:	18 f0 06 a0 	load_u8 s0, 444(s24)
    e234:	00 08 00 01 	and s0, s0, 2
    e238:	20 e0 ff f3 	bz s0, -1020 <malloc+0x9f0>
    e23c:	fa fe ff f7 	b -1048 <malloc+0x9d8>
    e240:	9e 70 00 a8 	load_32 s4, 28(sp)
    e244:	de 40 00 a8 	load_32 s6, 16(sp)
    e248:	e8 00 00 f6 	b 928 <malloc+0x119c>
    e24c:	bf 0c 00 4f 	movehi s5, 127
    e250:	ff 04 00 4f 	movehi s7, 63
    e254:	1e 01 00 4f 	movehi s8, 30
    e258:	a5 00 7c 00 	or s5, s5, 7936
    e25c:	a6 80 52 c0 	add_i s5, s6, s5
    e260:	e7 00 40 00 	or s7, s7, 4096
    e264:	a5 40 00 0a 	shr s5, s5, 16
    e268:	a5 20 00 01 	and s5, s5, 8
    e26c:	c6 80 b2 c0 	shl s6, s6, s5
    e270:	e6 80 53 c0 	add_i s7, s6, s7
    e274:	e7 40 00 0a 	shr s7, s7, 16
    e278:	e7 10 00 01 	and s7, s7, 4
    e27c:	c6 80 b3 c0 	shl s6, s6, s7
    e280:	a7 80 02 c0 	or s5, s7, s5
    e284:	06 01 54 c0 	add_i s8, s6, s8
    e288:	08 41 00 0a 	shr s8, s8, 16
    e28c:	e8 08 00 01 	and s7, s8, 2
    e290:	00 39 00 0f 	move s8, 14
    e294:	a5 80 03 c0 	or s5, s5, s7
    e298:	c6 80 b3 c0 	shl s6, s6, s7
    e29c:	a8 80 62 c0 	sub_i s5, s8, s5
    e2a0:	c6 3c 00 0a 	shr s6, s6, 15
    e2a4:	a5 00 53 c0 	add_i s5, s5, s6
    e2a8:	c5 1c 00 05 	add_i s6, s5, 7
    e2ac:	c2 00 a3 c0 	shr s6, s2, s6
    e2b0:	a5 04 00 0b 	shl s5, s5, 1
    e2b4:	c6 04 00 01 	and s6, s6, 1
    e2b8:	a6 80 02 c0 	or s5, s6, s5
    e2bc:	c5 08 00 0b 	shl s6, s5, 2
    e2c0:	a3 70 00 88 	store_32 s5, 28(s3)
    e2c4:	e0 04 00 0f 	move s7, 1
    e2c8:	83 50 00 88 	store_32 s4, 20(s3)
    e2cc:	d8 00 53 c0 	add_i s6, s24, s6
    e2d0:	83 40 00 88 	store_32 s4, 16(s3)
    e2d4:	e7 80 b2 c0 	shl s7, s7, s5
    e2d8:	c6 c0 04 05 	add_i s6, s6, 304
    e2dc:	01 81 13 c0 	and s8, s1, s7
    e2e0:	48 00 00 f4 	bnz s8, 8 <malloc+0xe9c>
    e2e4:	08 00 00 f6 	b 32 <malloc+0xeb8>
    e2e8:	86 00 00 a8 	load_32 s4, (s6)
    e2ec:	25 7c 00 10 	cmpeq_i s1, s5, 31
    e2f0:	41 01 00 f4 	bnz s1, 40 <malloc+0xecc>
    e2f4:	20 64 00 0f 	move s1, 25
    e2f8:	a5 04 00 0a 	shr s5, s5, 1
    e2fc:	21 80 62 c0 	sub_i s1, s1, s5
    e300:	07 00 00 f6 	b 28 <malloc+0xed0>
    e304:	21 80 03 c0 	or s1, s1, s7
    e308:	38 10 00 88 	store_32 s1, 4(s24)
    e30c:	66 00 00 88 	store_32 s3, (s6)
    e310:	c3 60 00 88 	store_32 s6, 24(s3)
    e314:	14 00 00 f6 	b 80 <malloc+0xf18>
    e318:	20 00 00 0f 	move s1, 0
    e31c:	a2 80 b0 c0 	shl s5, s2, s1
    e320:	20 00 f2 c0 	move s1, s4
    e324:	81 10 00 a8 	load_32 s4, 4(s1)
    e328:	84 e0 ff 01 	and s4, s4, -8
    e32c:	84 00 01 c1 	cmpeq_i s4, s4, s2
    e330:	84 02 00 f4 	bnz s4, 80 <malloc+0xf34>
    e334:	85 74 00 0a 	shr s4, s5, 29
    e338:	a5 04 00 0b 	shl s5, s5, 1
    e33c:	84 10 00 01 	and s4, s4, 4
    e340:	c1 00 52 c0 	add_i s6, s1, s4
    e344:	86 40 00 a8 	load_32 s4, 16(s6)
    e348:	c4 fe ff f5 	bnz s4, -40 <malloc+0xed4>
    e34c:	98 40 00 a8 	load_32 s4, 16(s24)
    e350:	46 40 00 05 	add_i s2, s6, 16
    e354:	84 00 61 c1 	cmpgt_u s4, s4, s2
    e358:	c4 78 00 f4 	bnz s4, 3864 <malloc+0x1e24>
    e35c:	62 00 00 88 	store_32 s3, (s2)
    e360:	23 60 00 88 	store_32 s1, 24(s3)
    e364:	63 30 00 88 	store_32 s3, 12(s3)
    e368:	60 23 00 05 	add_i s27, s0, 8
    e36c:	63 20 00 88 	store_32 s3, 8(s3)
    e370:	18 f0 06 a0 	load_u8 s0, 444(s24)
    e374:	00 08 00 01 	and s0, s0, 2
    e378:	20 d6 ff f3 	bz s0, -1340 <malloc+0x9f0>
    e37c:	aa fe ff f7 	b -1368 <malloc+0x9d8>
    e380:	41 20 00 a8 	load_32 s2, 8(s1)
    e384:	98 40 00 a8 	load_32 s4, 16(s24)
    e388:	a4 00 61 c1 	cmpgt_u s5, s4, s2
    e38c:	25 77 00 f4 	bnz s5, 3812 <malloc+0x1e24>
    e390:	84 80 60 c1 	cmpgt_u s4, s4, s1
    e394:	e4 76 00 f4 	bnz s4, 3804 <malloc+0x1e24>
    e398:	62 30 00 88 	store_32 s3, 12(s2)
    e39c:	60 23 00 05 	add_i s27, s0, 8
    e3a0:	61 20 00 88 	store_32 s3, 8(s1)
    e3a4:	43 20 00 88 	store_32 s2, 8(s3)
    e3a8:	23 30 00 88 	store_32 s1, 12(s3)
    e3ac:	20 00 00 0f 	move s1, 0
    e3b0:	23 60 00 88 	store_32 s1, 24(s3)
    e3b4:	18 f0 06 a0 	load_u8 s0, 444(s24)
    e3b8:	00 08 00 01 	and s0, s0, 2
    e3bc:	00 d4 ff f3 	bz s0, -1408 <malloc+0x9f0>
    e3c0:	99 fe ff f7 	b -1436 <malloc+0x9d8>
    e3c4:	42 41 00 a8 	load_32 s10, 16(s2)
    e3c8:	4a 0f 00 f2 	bz s10, 488 <malloc+0x1164>
    e3cc:	62 41 00 05 	add_i s11, s2, 16
    e3d0:	00 01 f5 c0 	move s8, s10
    e3d4:	48 51 00 a8 	load_32 s10, 20(s8)
    e3d8:	80 81 f5 c0 	move s12, s11
    e3dc:	68 51 00 05 	add_i s11, s8, 20
    e3e0:	8a ff ff f5 	bnz s10, -16 <malloc+0xf84>
    e3e4:	48 41 00 a8 	load_32 s10, 16(s8)
    e3e8:	68 41 00 05 	add_i s11, s8, 16
    e3ec:	2a ff ff f5 	bnz s10, -28 <malloc+0xf84>
    e3f0:	29 01 66 c1 	cmpgt_u s9, s9, s12
    e3f4:	e9 73 00 f4 	bnz s9, 3708 <malloc+0x1e24>
    e3f8:	cc 00 00 88 	store_32 s6, (s12)
    e3fc:	27 09 00 f2 	bz s7, 292 <malloc+0x10d4>
    e400:	c2 70 00 a8 	load_32 s6, 28(s2)
    e404:	26 09 00 0b 	shl s9, s6, 2
    e408:	38 81 54 c0 	add_i s9, s24, s9
    e40c:	49 c1 04 a8 	load_32 s10, 304(s9)
    e410:	42 01 15 c1 	cmpne_i s10, s2, s10
    e414:	4a 00 00 f4 	bnz s10, 8 <malloc+0xfd0>
    e418:	0c 00 00 f6 	b 48 <malloc+0xffc>
    e41c:	b8 40 00 a8 	load_32 s5, 16(s24)
    e420:	a5 80 63 c1 	cmpgt_u s5, s5, s7
    e424:	65 72 00 f4 	bnz s5, 3660 <malloc+0x1e24>
    e428:	a7 40 00 a8 	load_32 s5, 16(s7)
    e42c:	a5 00 01 c1 	cmpeq_i s5, s5, s2
    e430:	e5 04 00 f4 	bnz s5, 156 <malloc+0x1080>
    e434:	a0 50 00 0f 	move s5, 20
    e438:	a7 80 52 c0 	add_i s5, s7, s5
    e43c:	05 01 00 88 	store_32 s8, (s5)
    e440:	08 07 00 f2 	bz s8, 224 <malloc+0x10d4>
    e444:	26 00 00 f6 	b 152 <malloc+0x1090>
    e448:	29 c1 04 05 	add_i s9, s9, 304
    e44c:	09 01 00 88 	store_32 s8, (s9)
    e450:	68 04 00 f4 	bnz s8, 140 <malloc+0x1090>
    e454:	e0 04 00 0f 	move s7, 1
    e458:	c7 00 b3 c0 	shl s6, s7, s6
    e45c:	c6 fc ff 03 	xor s6, s6, -1
    e460:	a5 00 13 c0 	and s5, s5, s6
    e464:	b8 10 00 88 	store_32 s5, 4(s24)
    e468:	a3 3c 00 16 	cmpgt_u s5, s3, 15
    e46c:	45 00 00 f4 	bnz s5, 8 <malloc+0x1028>
    e470:	2e 00 00 f6 	b 184 <malloc+0x10dc>
    e474:	ba 0c 00 00 	or s5, s26, 3
    e478:	a2 10 00 88 	store_32 s5, 4(s2)
    e47c:	a4 80 51 c0 	add_i s5, s4, s3
    e480:	c3 04 00 00 	or s6, s3, 1
    e484:	c4 10 00 88 	store_32 s6, 4(s4)
    e488:	65 00 00 88 	store_32 s3, (s5)
    e48c:	a1 07 00 f2 	bz s1, 244 <malloc+0x1134>
    e490:	21 0c 00 0a 	shr s1, s1, 3
    e494:	a0 04 00 0f 	move s5, 1
    e498:	e1 0c 00 0b 	shl s7, s1, 3
    e49c:	c5 80 b0 c0 	shl s6, s5, s1
    e4a0:	38 50 00 a8 	load_32 s1, 20(s24)
    e4a4:	b8 80 53 c0 	add_i s5, s24, s7
    e4a8:	e6 00 10 c0 	and s7, s6, s0
    e4ac:	a5 a0 00 05 	add_i s5, s5, 40
    e4b0:	47 00 00 f4 	bnz s7, 8 <malloc+0x106c>
    e4b4:	2c 00 00 f6 	b 176 <malloc+0x1118>
    e4b8:	05 20 00 a8 	load_32 s0, 8(s5)
    e4bc:	d8 40 00 a8 	load_32 s6, 16(s24)
    e4c0:	c6 00 90 c1 	cmple_u s6, s6, s0
    e4c4:	66 05 00 f4 	bnz s6, 172 <malloc+0x1124>
    e4c8:	6a 03 00 f6 	b 3496 <malloc+0x1e24>
    e4cc:	a0 40 00 0f 	move s5, 16
    e4d0:	a7 80 52 c0 	add_i s5, s7, s5
    e4d4:	05 01 00 88 	store_32 s8, (s5)
    e4d8:	48 02 00 f2 	bz s8, 72 <malloc+0x10d4>
    e4dc:	b8 40 00 a8 	load_32 s5, 16(s24)
    e4e0:	c5 00 64 c1 	cmpgt_u s6, s5, s8
    e4e4:	66 6c 00 f4 	bnz s6, 3468 <malloc+0x1e24>
    e4e8:	e8 60 00 88 	store_32 s7, 24(s8)
    e4ec:	c2 40 00 a8 	load_32 s6, 16(s2)
    e4f0:	a6 00 00 f2 	bz s6, 20 <malloc+0x10b8>
    e4f4:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    e4f8:	c5 6b 00 f4 	bnz s5, 3448 <malloc+0x1e24>
    e4fc:	c8 40 00 88 	store_32 s6, 16(s8)
    e500:	06 61 00 88 	store_32 s8, 24(s6)
    e504:	a2 50 00 a8 	load_32 s5, 20(s2)
    e508:	c5 00 00 f2 	bz s5, 24 <malloc+0x10d4>
    e50c:	d8 40 00 a8 	load_32 s6, 16(s24)
    e510:	c6 80 62 c1 	cmpgt_u s6, s6, s5
    e514:	e6 6a 00 f4 	bnz s6, 3420 <malloc+0x1e24>
    e518:	a8 50 00 88 	store_32 s5, 20(s8)
    e51c:	05 61 00 88 	store_32 s8, 24(s5)
    e520:	a3 3c 00 16 	cmpgt_u s5, s3, 15
    e524:	85 fa ff f5 	bnz s5, -176 <malloc+0x1028>
    e528:	03 00 5d c0 	add_i s0, s3, s26
    e52c:	22 00 50 c0 	add_i s1, s2, s0
    e530:	62 23 00 05 	add_i s27, s2, 8
    e534:	00 0c 00 00 	or s0, s0, 3
    e538:	02 10 00 88 	store_32 s0, 4(s2)
    e53c:	01 10 00 a8 	load_32 s0, 4(s1)
    e540:	00 04 00 00 	or s0, s0, 1
    e544:	01 10 00 88 	store_32 s0, 4(s1)
    e548:	18 f0 06 a0 	load_u8 s0, 444(s24)
    e54c:	00 08 00 01 	and s0, s0, 2
    e550:	60 c7 ff f3 	bz s0, -1812 <malloc+0x9f0>
    e554:	34 fe ff f7 	b -1840 <malloc+0x9d8>
    e558:	0a fc ff 11 	cmpne_i s0, s10, -1
    e55c:	00 05 00 f4 	bnz s0, 160 <malloc+0x11b0>
    e560:	22 00 00 f6 	b 136 <malloc+0x119c>
    e564:	06 00 00 c0 	or s0, s6, s0
    e568:	18 00 00 88 	store_32 s0, (s24)
    e56c:	00 80 f2 c0 	move s0, s5
    e570:	25 20 00 88 	store_32 s1, 8(s5)
    e574:	20 30 00 88 	store_32 s1, 12(s0)
    e578:	01 20 00 88 	store_32 s0, 8(s1)
    e57c:	a1 30 00 88 	store_32 s5, 12(s1)
    e580:	78 20 00 88 	store_32 s3, 8(s24)
    e584:	62 23 00 05 	add_i s27, s2, 8
    e588:	98 50 00 88 	store_32 s4, 20(s24)
    e58c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    e590:	00 08 00 01 	and s0, s0, 2
    e594:	40 c5 ff f3 	bz s0, -1880 <malloc+0x9f0>
    e598:	23 fe ff f7 	b -1908 <malloc+0x9d8>
    e59c:	a0 00 00 0f 	move s5, 0
    e5a0:	04 d3 ff f3 	bz s4, -1440 <malloc+0xbb4>
    e5a4:	43 fe ff f7 	b -1780 <malloc+0xa64>
    e5a8:	3e 63 00 a8 	load_32 s25, 24(sp)
    e5ac:	14 00 00 f6 	b 80 <malloc+0x11b0>
    e5b0:	00 01 f3 c0 	move s8, s6
    e5b4:	67 fb ff f3 	bz s7, -148 <malloc+0x10d4>
    e5b8:	92 ff ff f7 	b -440 <malloc+0xfb4>
    e5bc:	40 81 f0 c0 	move s10, s1
    e5c0:	3e 51 00 a8 	load_32 s9, 20(sp)
    e5c4:	9e 70 00 a8 	load_32 s4, 28(sp)
    e5c8:	0d 00 00 f6 	b 52 <malloc+0x11b0>
    e5cc:	1e 50 00 a8 	load_32 s0, 20(sp)
    e5d0:	3e 40 00 a8 	load_32 s1, 16(sp)
    e5d4:	01 00 60 c0 	sub_i s0, s1, s0
    e5d8:	77 16 00 f8 	call 23004 <sbrk>
    e5dc:	c0 80 fc c0 	move s6, s25
    e5e0:	3e 63 00 a8 	load_32 s25, 24(sp)
    e5e4:	9e 70 00 a8 	load_32 s4, 28(sp)
    e5e8:	18 f0 06 a8 	load_32 s0, 444(s24)
    e5ec:	40 fd ff 0f 	move s10, -1
    e5f0:	00 10 00 00 	or s0, s0, 4
    e5f4:	18 f0 06 88 	store_32 s0, 444(s24)
    e5f8:	20 01 f3 c0 	move s9, s6
    e5fc:	00 00 00 0f 	move s0, 0
    e600:	3b 00 00 aa 	load_sync s1, (s27)
    e604:	20 00 f0 c0 	move s1, s0
    e608:	3b 00 00 8a 	store_sync s1, (s27)  
    e60c:	a1 ff ff f3 	bz s1, -12 <malloc+0x11b4>
    e610:	1f fc 7f 4f 	movehi s0, 262143
    e614:	00 f8 7f 00 	or s0, s0, 8190
    e618:	04 00 60 c1 	cmpgt_u s0, s4, s0
    e61c:	40 05 00 f4 	bnz s0, 168 <malloc+0x1278>
    e620:	0a fc ff 11 	cmpne_i s0, s10, -1
    e624:	00 05 00 f4 	bnz s0, 160 <malloc+0x1278>
    e628:	0c 00 00 4f 	movehi s0, 12
    e62c:	3e 63 00 88 	store_32 s25, 24(sp)
    e630:	20 23 0c 00 	or s25, s0, 776
    e634:	00 04 00 0f 	move s0, 1
    e638:	39 00 00 aa 	load_sync s1, (s25)
    e63c:	40 00 f0 c0 	move s2, s0
    e640:	59 00 00 8a 	store_sync s2, (s25)  
    e644:	a2 ff ff f3 	bz s2, -12 <malloc+0x11ec>
    e648:	01 01 00 f2 	bz s1, 32 <malloc+0x121c>
    e64c:	39 00 00 a8 	load_32 s1, (s25)
    e650:	e1 ff ff f5 	bnz s1, -4 <malloc+0x1200>
    e654:	39 00 00 aa 	load_sync s1, (s25)
    e658:	40 00 f0 c0 	move s2, s0
    e65c:	59 00 00 8a 	store_sync s2, (s25)  
    e660:	a2 ff ff f3 	bz s2, -12 <malloc+0x1208>
    e664:	41 ff ff f5 	bnz s1, -24 <malloc+0x1200>
    e668:	00 00 f2 c0 	move s0, s4
    e66c:	52 16 00 f8 	call 22856 <sbrk>
    e670:	60 03 00 0f 	move s27, 0
    e674:	1e 80 00 88 	store_32 s0, 32(sp)
    e678:	00 80 fd c0 	move s0, s27
    e67c:	4e 16 00 f8 	call 22840 <sbrk>
    e680:	39 00 00 aa 	load_sync s1, (s25)
    e684:	20 80 fd c0 	move s1, s27
    e688:	39 00 00 8a 	store_sync s1, (s25)  
    e68c:	a1 ff ff f3 	bz s1, -12 <malloc+0x1234>
    e690:	5e 81 00 a8 	load_32 s10, 32(sp)
    e694:	2a 00 70 c1 	cmpge_u s1, s10, s0
    e698:	01 bc ff f5 	bnz s1, -2176 <malloc+0x9cc>
    e69c:	2a fc ff 10 	cmpeq_i s1, s10, -1
    e6a0:	c1 bb ff f5 	bnz s1, -2184 <malloc+0x9cc>
    e6a4:	20 fc ff 10 	cmpeq_i s1, s0, -1
    e6a8:	81 bb ff f5 	bnz s1, -2192 <malloc+0x9cc>
    e6ac:	20 01 65 c0 	sub_i s9, s0, s10
    e6b0:	3e 63 00 a8 	load_32 s25, 24(sp)
    e6b4:	1a a0 00 05 	add_i s0, s26, 40
    e6b8:	09 00 60 c1 	cmpgt_u s0, s9, s0
    e6bc:	80 00 00 f4 	bnz s0, 16 <malloc+0x1280>
    e6c0:	d6 fd ff f7 	b -2216 <malloc+0x9cc>
    e6c4:	0a fc ff 10 	cmpeq_i s0, s10, -1
    e6c8:	80 3b 00 f4 	bnz s0, 1904 <malloc+0x19ec>
    e6cc:	18 c0 06 a8 	load_32 s0, 432(s24)
    e6d0:	00 80 54 c0 	add_i s0, s0, s9
    e6d4:	18 c0 06 88 	store_32 s0, 432(s24)
    e6d8:	38 d0 06 a8 	load_32 s1, 436(s24)
    e6dc:	20 80 90 c1 	cmple_u s1, s0, s1
    e6e0:	41 00 00 f4 	bnz s1, 8 <malloc+0x129c>
    e6e4:	18 d0 06 88 	store_32 s0, 436(s24)
    e6e8:	58 60 00 a8 	load_32 s2, 24(s24)
    e6ec:	42 01 00 f2 	bz s2, 40 <malloc+0x12c8>
    e6f0:	18 10 07 05 	add_i s0, s24, 452
    e6f4:	60 00 00 a8 	load_32 s3, (s0)
    e6f8:	20 10 00 a8 	load_32 s1, 4(s0)
    e6fc:	83 80 50 c0 	add_i s4, s3, s1
    e700:	8a 00 02 c1 	cmpeq_i s4, s10, s4
    e704:	04 11 00 f4 	bnz s4, 544 <malloc+0x14d8>
    e708:	00 20 00 a8 	load_32 s0, 8(s0)
    e70c:	20 13 00 f2 	bz s0, 612 <malloc+0x1524>
    e710:	f9 ff ff f7 	b -28 <malloc+0x12a8>
    e714:	18 40 00 a8 	load_32 s0, 16(s24)
    e718:	60 00 00 f2 	bz s0, 12 <malloc+0x12d8>
    e71c:	0a 00 70 c1 	cmpge_u s0, s10, s0
    e720:	40 00 00 f4 	bnz s0, 8 <malloc+0x12dc>
    e724:	58 41 00 88 	store_32 s10, 16(s24)
    e728:	58 11 07 88 	store_32 s10, 452(s24)
    e72c:	00 00 00 0f 	move s0, 0
    e730:	38 21 07 88 	store_32 s9, 456(s24)
    e734:	4a 20 00 05 	add_i s2, s10, 8
    e738:	18 40 07 88 	store_32 s0, 464(s24)
    e73c:	39 00 00 a8 	load_32 s1, (s25)
    e740:	38 90 00 88 	store_32 s1, 36(s24)
    e744:	20 fc ff 0f 	move s1, -1
    e748:	38 80 00 88 	store_32 s1, 32(s24)
    e74c:	38 a0 00 05 	add_i s1, s24, 40
    e750:	38 d0 00 88 	store_32 s1, 52(s24)
    e754:	42 1c 00 01 	and s2, s2, 7
    e758:	38 c0 00 88 	store_32 s1, 48(s24)
    e75c:	38 c0 00 05 	add_i s1, s24, 48
    e760:	38 f0 00 88 	store_32 s1, 60(s24)
    e764:	38 e0 00 88 	store_32 s1, 56(s24)
    e768:	38 e0 00 05 	add_i s1, s24, 56
    e76c:	38 10 01 88 	store_32 s1, 68(s24)
    e770:	42 00 00 10 	cmpeq_i s2, s2, 0
    e774:	38 00 01 88 	store_32 s1, 64(s24)
    e778:	38 00 01 05 	add_i s1, s24, 64
    e77c:	38 30 01 88 	store_32 s1, 76(s24)
    e780:	38 20 01 88 	store_32 s1, 72(s24)
    e784:	38 20 01 05 	add_i s1, s24, 72
    e788:	38 50 01 88 	store_32 s1, 84(s24)
    e78c:	38 40 01 88 	store_32 s1, 80(s24)
    e790:	38 40 01 05 	add_i s1, s24, 80
    e794:	38 70 01 88 	store_32 s1, 92(s24)
    e798:	38 60 01 88 	store_32 s1, 88(s24)
    e79c:	38 60 01 05 	add_i s1, s24, 88
    e7a0:	38 90 01 88 	store_32 s1, 100(s24)
    e7a4:	38 80 01 88 	store_32 s1, 96(s24)
    e7a8:	38 80 01 05 	add_i s1, s24, 96
    e7ac:	38 b0 01 88 	store_32 s1, 108(s24)
    e7b0:	38 a0 01 88 	store_32 s1, 104(s24)
    e7b4:	38 a0 01 05 	add_i s1, s24, 104
    e7b8:	38 d0 01 88 	store_32 s1, 116(s24)
    e7bc:	38 c0 01 88 	store_32 s1, 112(s24)
    e7c0:	38 c0 01 05 	add_i s1, s24, 112
    e7c4:	38 f0 01 88 	store_32 s1, 124(s24)
    e7c8:	38 e0 01 88 	store_32 s1, 120(s24)
    e7cc:	38 e0 01 05 	add_i s1, s24, 120
    e7d0:	38 10 02 88 	store_32 s1, 132(s24)
    e7d4:	38 00 02 88 	store_32 s1, 128(s24)
    e7d8:	38 00 02 05 	add_i s1, s24, 128
    e7dc:	38 30 02 88 	store_32 s1, 140(s24)
    e7e0:	38 20 02 88 	store_32 s1, 136(s24)
    e7e4:	38 20 02 05 	add_i s1, s24, 136
    e7e8:	38 50 02 88 	store_32 s1, 148(s24)
    e7ec:	38 40 02 88 	store_32 s1, 144(s24)
    e7f0:	38 40 02 05 	add_i s1, s24, 144
    e7f4:	38 70 02 88 	store_32 s1, 156(s24)
    e7f8:	38 60 02 88 	store_32 s1, 152(s24)
    e7fc:	38 60 02 05 	add_i s1, s24, 152
    e800:	38 90 02 88 	store_32 s1, 164(s24)
    e804:	38 80 02 88 	store_32 s1, 160(s24)
    e808:	38 80 02 05 	add_i s1, s24, 160
    e80c:	38 b0 02 88 	store_32 s1, 172(s24)
    e810:	38 a0 02 88 	store_32 s1, 168(s24)
    e814:	38 a0 02 05 	add_i s1, s24, 168
    e818:	38 d0 02 88 	store_32 s1, 180(s24)
    e81c:	38 c0 02 88 	store_32 s1, 176(s24)
    e820:	38 c0 02 05 	add_i s1, s24, 176
    e824:	38 f0 02 88 	store_32 s1, 188(s24)
    e828:	38 e0 02 88 	store_32 s1, 184(s24)
    e82c:	38 e0 02 05 	add_i s1, s24, 184
    e830:	38 10 03 88 	store_32 s1, 196(s24)
    e834:	38 00 03 88 	store_32 s1, 192(s24)
    e838:	38 00 03 05 	add_i s1, s24, 192
    e83c:	38 30 03 88 	store_32 s1, 204(s24)
    e840:	38 20 03 88 	store_32 s1, 200(s24)
    e844:	38 20 03 05 	add_i s1, s24, 200
    e848:	38 50 03 88 	store_32 s1, 212(s24)
    e84c:	38 40 03 88 	store_32 s1, 208(s24)
    e850:	38 40 03 05 	add_i s1, s24, 208
    e854:	38 70 03 88 	store_32 s1, 220(s24)
    e858:	38 60 03 88 	store_32 s1, 216(s24)
    e85c:	38 60 03 05 	add_i s1, s24, 216
    e860:	38 90 03 88 	store_32 s1, 228(s24)
    e864:	38 80 03 88 	store_32 s1, 224(s24)
    e868:	38 80 03 05 	add_i s1, s24, 224
    e86c:	38 b0 03 88 	store_32 s1, 236(s24)
    e870:	38 a0 03 88 	store_32 s1, 232(s24)
    e874:	38 a0 03 05 	add_i s1, s24, 232
    e878:	38 d0 03 88 	store_32 s1, 244(s24)
    e87c:	38 c0 03 88 	store_32 s1, 240(s24)
    e880:	38 c0 03 05 	add_i s1, s24, 240
    e884:	38 f0 03 88 	store_32 s1, 252(s24)
    e888:	38 e0 03 88 	store_32 s1, 248(s24)
    e88c:	38 e0 03 05 	add_i s1, s24, 248
    e890:	38 10 04 88 	store_32 s1, 260(s24)
    e894:	38 00 04 88 	store_32 s1, 256(s24)
    e898:	38 00 04 05 	add_i s1, s24, 256
    e89c:	38 30 04 88 	store_32 s1, 268(s24)
    e8a0:	38 20 04 88 	store_32 s1, 264(s24)
    e8a4:	38 20 04 05 	add_i s1, s24, 264
    e8a8:	38 50 04 88 	store_32 s1, 276(s24)
    e8ac:	38 40 04 88 	store_32 s1, 272(s24)
    e8b0:	38 40 04 05 	add_i s1, s24, 272
    e8b4:	38 70 04 88 	store_32 s1, 284(s24)
    e8b8:	38 60 04 88 	store_32 s1, 280(s24)
    e8bc:	38 60 04 05 	add_i s1, s24, 280
    e8c0:	38 90 04 88 	store_32 s1, 292(s24)
    e8c4:	38 80 04 88 	store_32 s1, 288(s24)
    e8c8:	38 80 04 05 	add_i s1, s24, 288
    e8cc:	38 b0 04 88 	store_32 s1, 300(s24)
    e8d0:	38 a0 04 88 	store_32 s1, 296(s24)
    e8d4:	29 60 ff 05 	add_i s1, s9, -40
    e8d8:	82 00 00 f4 	bnz s2, 16 <malloc+0x149c>
    e8dc:	00 e0 ff 0f 	move s0, -8
    e8e0:	00 00 65 c0 	sub_i s0, s0, s10
    e8e4:	00 1c 00 01 	and s0, s0, 7
    e8e8:	4a 00 50 c0 	add_i s2, s10, s0
    e8ec:	58 60 00 88 	store_32 s2, 24(s24)
    e8f0:	01 00 60 c0 	sub_i s0, s1, s0
    e8f4:	18 30 00 88 	store_32 s0, 12(s24)
    e8f8:	2a 80 50 c0 	add_i s1, s10, s1
    e8fc:	00 04 00 00 	or s0, s0, 1
    e900:	02 10 00 88 	store_32 s0, 4(s2)
    e904:	00 a0 00 0f 	move s0, 40
    e908:	01 10 00 88 	store_32 s0, 4(s1)
    e90c:	19 40 00 a8 	load_32 s0, 16(s25)
    e910:	18 70 00 88 	store_32 s0, 28(s24)
    e914:	18 30 00 a8 	load_32 s0, 12(s24)
    e918:	20 00 9d c1 	cmple_u s1, s0, s26
    e91c:	e1 28 00 f4 	bnz s1, 1308 <malloc+0x19ec>
    e920:	92 fc ff f7 	b -3512 <malloc+0x71c>
    e924:	80 30 00 a0 	load_u8 s4, 12(s0)
    e928:	84 20 00 01 	and s4, s4, 8
    e92c:	24 02 00 f4 	bnz s4, 68 <malloc+0x1524>
    e930:	8a 00 91 c1 	cmple_u s4, s10, s2
    e934:	e4 01 00 f4 	bnz s4, 60 <malloc+0x1524>
    e938:	63 00 61 c1 	cmpgt_u s3, s3, s2
    e93c:	a3 01 00 f4 	bnz s3, 52 <malloc+0x1524>
    e940:	62 20 00 05 	add_i s3, s2, 8
    e944:	21 80 54 c0 	add_i s1, s1, s9
    e948:	20 10 00 88 	store_32 s1, 4(s0)
    e94c:	18 30 00 a8 	load_32 s0, 12(s24)
    e950:	23 1c 00 01 	and s1, s3, 7
    e954:	21 00 00 10 	cmpeq_i s1, s1, 0
    e958:	00 80 54 c0 	add_i s0, s0, s9
    e95c:	81 27 00 f4 	bnz s1, 1264 <malloc+0x1a00>
    e960:	20 e0 ff 0f 	move s1, -8
    e964:	21 00 61 c0 	sub_i s1, s1, s2
    e968:	21 1c 00 01 	and s1, s1, 7
    e96c:	39 01 00 f6 	b 1252 <malloc+0x1a04>
    e970:	b8 40 00 a8 	load_32 s5, 16(s24)
    e974:	0a 80 72 c1 	cmpge_u s0, s10, s5
    e978:	60 00 00 f4 	bnz s0, 12 <malloc+0x1538>
    e97c:	58 41 00 88 	store_32 s10, 16(s24)
    e980:	a0 00 f5 c0 	move s5, s10
    e984:	2a 80 54 c0 	add_i s1, s10, s9
    e988:	18 10 07 05 	add_i s0, s24, 452
    e98c:	60 00 00 a8 	load_32 s3, (s0)
    e990:	63 80 00 c1 	cmpeq_i s3, s3, s1
    e994:	83 00 00 f4 	bnz s3, 16 <malloc+0x1558>
    e998:	00 20 00 a8 	load_32 s0, 8(s0)
    e99c:	e0 08 00 f2 	bz s0, 284 <malloc+0x166c>
    e9a0:	fb ff ff f7 	b -20 <malloc+0x1540>
    e9a4:	60 30 00 a0 	load_u8 s3, 12(s0)
    e9a8:	63 20 00 01 	and s3, s3, 8
    e9ac:	43 00 00 f2 	bz s3, 8 <malloc+0x1568>
    e9b0:	42 00 00 f6 	b 264 <malloc+0x166c>
    e9b4:	40 01 00 88 	store_32 s10, (s0)
    e9b8:	8a 20 00 05 	add_i s4, s10, 8
    e9bc:	60 10 00 a8 	load_32 s3, 4(s0)
    e9c0:	84 1c 00 01 	and s4, s4, 7
    e9c4:	63 80 54 c0 	add_i s3, s3, s9
    e9c8:	60 10 00 88 	store_32 s3, 4(s0)
    e9cc:	60 00 00 0f 	move s3, 0
    e9d0:	c4 00 00 10 	cmpeq_i s6, s4, 0
    e9d4:	80 e0 ff 0f 	move s4, -8
    e9d8:	00 80 f1 c0 	move s0, s3
    e9dc:	66 00 00 f4 	bnz s6, 12 <malloc+0x159c>
    e9e0:	04 00 65 c0 	sub_i s0, s4, s10
    e9e4:	00 1c 00 01 	and s0, s0, 7
    e9e8:	c1 20 00 05 	add_i s6, s1, 8
    e9ec:	0a 00 50 c0 	add_i s0, s10, s0
    e9f0:	c6 1c 00 01 	and s6, s6, 7
    e9f4:	c6 00 00 10 	cmpeq_i s6, s6, 0
    e9f8:	66 00 00 f4 	bnz s6, 12 <malloc+0x15b8>
    e9fc:	64 80 60 c0 	sub_i s3, s4, s1
    ea00:	63 1c 00 01 	and s3, s3, 7
    ea04:	81 80 51 c0 	add_i s4, s1, s3
    ea08:	20 00 5d c0 	add_i s1, s0, s26
    ea0c:	42 00 12 c1 	cmpne_i s2, s2, s4
    ea10:	64 00 60 c0 	sub_i s3, s4, s0
    ea14:	da 0c 00 00 	or s6, s26, 3
    ea18:	c0 10 00 88 	store_32 s6, 4(s0)
    ea1c:	63 00 6d c0 	sub_i s3, s3, s26
    ea20:	42 00 00 f4 	bnz s2, 8 <malloc+0x15dc>
    ea24:	93 00 00 f6 	b 588 <malloc+0x1824>
    ea28:	58 50 00 a8 	load_32 s2, 20(s24)
    ea2c:	42 00 12 c1 	cmpne_i s2, s2, s4
    ea30:	42 00 00 f4 	bnz s2, 8 <malloc+0x15ec>
    ea34:	11 01 00 f6 	b 1092 <malloc+0x1a2c>
    ea38:	44 10 00 a8 	load_32 s2, 4(s4)
    ea3c:	c2 0c 00 01 	and s6, s2, 3
    ea40:	c6 04 00 11 	cmpne_i s6, s6, 1
    ea44:	66 2f 00 f4 	bnz s6, 1516 <malloc+0x1be4>
    ea48:	c2 fc 03 16 	cmpgt_u s6, s2, 255
    ea4c:	06 23 00 f4 	bnz s6, 1120 <malloc+0x1a60>
    ea50:	02 0d 00 0a 	shr s8, s2, 3
    ea54:	c4 20 00 a8 	load_32 s6, 8(s4)
    ea58:	e8 0c 00 0b 	shl s7, s8, 3
    ea5c:	f8 80 53 c0 	add_i s7, s24, s7
    ea60:	27 a1 00 05 	add_i s9, s7, 40
    ea64:	e4 30 00 a8 	load_32 s7, 12(s4)
    ea68:	46 81 04 c1 	cmpeq_i s10, s6, s9
    ea6c:	ca 00 00 f4 	bnz s10, 24 <malloc+0x1638>
    ea70:	45 01 63 c1 	cmpgt_u s10, s5, s6
    ea74:	ea 3f 00 f4 	bnz s10, 2044 <malloc+0x1e24>
    ea78:	46 31 00 a8 	load_32 s10, 12(s6)
    ea7c:	4a 01 12 c1 	cmpne_i s10, s10, s4
    ea80:	8a 3f 00 f4 	bnz s10, 2032 <malloc+0x1e24>
    ea84:	47 01 13 c1 	cmpne_i s10, s7, s6
    ea88:	4a 00 00 f4 	bnz s10, 8 <malloc+0x1644>
    ea8c:	19 01 00 f6 	b 1124 <malloc+0x1aa4>
    ea90:	07 81 04 c1 	cmpeq_i s8, s7, s9
    ea94:	c8 00 00 f4 	bnz s8, 24 <malloc+0x1660>
    ea98:	a5 80 63 c1 	cmpgt_u s5, s5, s7
    ea9c:	a5 3e 00 f4 	bnz s5, 2004 <malloc+0x1e24>
    eaa0:	a7 20 00 a8 	load_32 s5, 8(s7)
    eaa4:	a5 00 12 c1 	cmpne_i s5, s5, s4
    eaa8:	45 3e 00 f4 	bnz s5, 1992 <malloc+0x1e24>
    eaac:	e6 30 00 88 	store_32 s7, 12(s6)
    eab0:	c7 20 00 88 	store_32 s6, 8(s7)
    eab4:	5c 01 00 f6 	b 1392 <malloc+0x1bd8>
    eab8:	38 10 07 05 	add_i s1, s24, 452
    eabc:	01 00 00 a8 	load_32 s0, (s1)
    eac0:	60 00 61 c1 	cmpgt_u s3, s0, s2
    eac4:	43 00 00 f4 	bnz s3, 8 <malloc+0x1680>
    eac8:	05 00 00 f6 	b 20 <malloc+0x1690>
    eacc:	21 20 00 a8 	load_32 s1, 8(s1)
    ead0:	01 00 00 a8 	load_32 s0, (s1)
    ead4:	60 00 61 c1 	cmpgt_u s3, s0, s2
    ead8:	a3 ff ff f5 	bnz s3, -12 <malloc+0x1680>
    eadc:	61 10 00 a8 	load_32 s3, 4(s1)
    eae0:	00 80 51 c0 	add_i s0, s0, s3
    eae4:	60 00 61 c1 	cmpgt_u s3, s0, s2
    eae8:	43 00 00 f4 	bnz s3, 8 <malloc+0x16a4>
    eaec:	f8 ff ff f7 	b -32 <malloc+0x1680>
    eaf0:	20 64 ff 05 	add_i s1, s0, -39
    eaf4:	60 00 00 0f 	move s3, 0
    eaf8:	21 1c 00 01 	and s1, s1, 7
    eafc:	81 00 00 10 	cmpeq_i s4, s1, 0
    eb00:	20 80 f1 c0 	move s1, s3
    eb04:	84 00 00 f4 	bnz s4, 16 <malloc+0x16c8>
    eb08:	20 9c 00 0f 	move s1, 39
    eb0c:	21 00 60 c0 	sub_i s1, s1, s0
    eb10:	21 1c 00 01 	and s1, s1, 7
    eb14:	20 80 50 c0 	add_i s1, s0, s1
    eb18:	81 44 ff 05 	add_i s4, s1, -47
    eb1c:	22 40 00 05 	add_i s1, s2, 16
    eb20:	a4 80 80 c1 	cmplt_u s5, s4, s1
    eb24:	20 00 f1 c0 	move s1, s2
    eb28:	45 00 00 f4 	bnz s5, 8 <malloc+0x16e4>
    eb2c:	20 00 f2 c0 	move s1, s4
    eb30:	8a 20 00 05 	add_i s4, s10, 8
    eb34:	a1 20 00 05 	add_i s5, s1, 8
    eb38:	c9 60 ff 05 	add_i s6, s9, -40
    eb3c:	84 1c 00 01 	and s4, s4, 7
    eb40:	e0 80 f1 c0 	move s7, s3
    eb44:	84 00 00 10 	cmpeq_i s4, s4, 0
    eb48:	84 00 00 f4 	bnz s4, 16 <malloc+0x170c>
    eb4c:	80 e0 ff 0f 	move s4, -8
    eb50:	84 00 65 c0 	sub_i s4, s4, s10
    eb54:	e4 1c 00 01 	and s7, s4, 7
    eb58:	0a 81 53 c0 	add_i s8, s10, s7
    eb5c:	18 61 00 88 	store_32 s8, 24(s24)
    eb60:	e6 80 63 c0 	sub_i s7, s6, s7
    eb64:	f8 30 00 88 	store_32 s7, 12(s24)
    eb68:	ca 00 53 c0 	add_i s6, s10, s6
    eb6c:	81 60 00 05 	add_i s4, s1, 24
    eb70:	e7 04 00 00 	or s7, s7, 1
    eb74:	e8 10 00 88 	store_32 s7, 4(s8)
    eb78:	e0 a0 00 0f 	move s7, 40
    eb7c:	e6 10 00 88 	store_32 s7, 4(s6)
    eb80:	d9 40 00 a8 	load_32 s6, 16(s25)
    eb84:	d8 70 00 88 	store_32 s6, 28(s24)
    eb88:	c0 6c 00 0f 	move s6, 27
    eb8c:	c1 10 00 88 	store_32 s6, 4(s1)
    eb90:	d8 40 07 a8 	load_32 s6, 464(s24)
    eb94:	c1 50 00 88 	store_32 s6, 20(s1)
    eb98:	d8 30 07 a8 	load_32 s6, 460(s24)
    eb9c:	c1 40 00 88 	store_32 s6, 16(s1)
    eba0:	d8 20 07 a8 	load_32 s6, 456(s24)
    eba4:	c1 30 00 88 	store_32 s6, 12(s1)
    eba8:	d8 10 07 a8 	load_32 s6, 452(s24)
    ebac:	c1 20 00 88 	store_32 s6, 8(s1)
    ebb0:	58 11 07 88 	store_32 s10, 452(s24)
    ebb4:	38 21 07 88 	store_32 s9, 456(s24)
    ebb8:	78 40 07 88 	store_32 s3, 464(s24)
    ebbc:	60 1c 00 0f 	move s3, 7
    ebc0:	b8 30 07 88 	store_32 s5, 460(s24)
    ebc4:	a4 20 00 05 	add_i s5, s4, 8
    ebc8:	64 10 00 88 	store_32 s3, 4(s4)
    ebcc:	c4 10 00 05 	add_i s6, s4, 4
    ebd0:	a5 00 80 c1 	cmplt_u s5, s5, s0
    ebd4:	80 00 f3 c0 	move s4, s6
    ebd8:	65 ff ff f5 	bnz s5, -20 <malloc+0x1778>
    ebdc:	01 00 01 c1 	cmpeq_i s0, s1, s2
    ebe0:	40 12 00 f4 	bnz s0, 584 <malloc+0x19dc>
    ebe4:	61 10 00 a8 	load_32 s3, 4(s1)
    ebe8:	01 00 61 c0 	sub_i s0, s1, s2
    ebec:	63 f8 ff 01 	and s3, s3, -2
    ebf0:	61 10 00 88 	store_32 s3, 4(s1)
    ebf4:	60 04 00 00 	or s3, s0, 1
    ebf8:	62 10 00 88 	store_32 s3, 4(s2)
    ebfc:	60 fc 03 16 	cmpgt_u s3, s0, 255
    ec00:	01 00 00 88 	store_32 s0, (s1)
    ec04:	03 02 00 f4 	bnz s3, 64 <malloc+0x17f8>
    ec08:	00 0c 00 0a 	shr s0, s0, 3
    ec0c:	38 00 00 a8 	load_32 s1, (s24)
    ec10:	60 04 00 0f 	move s3, 1
    ec14:	80 0c 00 0b 	shl s4, s0, 3
    ec18:	98 00 52 c0 	add_i s4, s24, s4
    ec1c:	63 00 b0 c0 	shl s3, s3, s0
    ec20:	a1 80 11 c0 	and s5, s1, s3
    ec24:	04 a0 00 05 	add_i s0, s4, 40
    ec28:	45 00 00 f4 	bnz s5, 8 <malloc+0x17e4>
    ec2c:	1c 00 00 f6 	b 112 <malloc+0x1850>
    ec30:	20 20 00 a8 	load_32 s1, 8(s0)
    ec34:	78 40 00 a8 	load_32 s3, 16(s24)
    ec38:	63 80 90 c1 	cmple_u s3, s3, s1
    ec3c:	63 03 00 f4 	bnz s3, 108 <malloc+0x185c>
    ec40:	8c 01 00 f6 	b 1584 <malloc+0x1e24>
    ec44:	20 00 00 0f 	move s1, 0
    ec48:	80 20 00 0a 	shr s4, s0, 8
    ec4c:	60 80 f0 c0 	move s3, s1
    ec50:	44 07 00 f2 	bz s4, 232 <malloc+0x18ec>
    ec54:	7f fc 00 4f 	movehi s3, 2047
    ec58:	63 fc 7f 00 	or s3, s3, 8191
    ec5c:	60 80 61 c1 	cmpgt_u s3, s0, s3
    ec60:	43 00 00 f4 	bnz s3, 8 <malloc+0x181c>
    ec64:	19 00 00 f6 	b 100 <malloc+0x187c>
    ec68:	60 7c 00 0f 	move s3, 31
    ec6c:	33 00 00 f6 	b 204 <malloc+0x18ec>
    ec70:	58 30 00 a8 	load_32 s2, 12(s24)
    ec74:	60 23 00 05 	add_i s27, s0, 8
    ec78:	42 80 51 c0 	add_i s2, s2, s3
    ec7c:	58 30 00 88 	store_32 s2, 12(s24)
    ec80:	38 60 00 88 	store_32 s1, 24(s24)
    ec84:	42 04 00 00 	or s2, s2, 1
    ec88:	41 10 00 88 	store_32 s2, 4(s1)
    ec8c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    ec90:	00 08 00 01 	and s0, s0, 2
    ec94:	40 8d ff f3 	bz s0, -3672 <malloc+0x9f0>
    ec98:	63 fc ff f7 	b -3700 <malloc+0x9d8>
    ec9c:	21 80 01 c0 	or s1, s1, s3
    eca0:	38 00 00 88 	store_32 s1, (s24)
    eca4:	20 00 f0 c0 	move s1, s0
    eca8:	40 20 00 88 	store_32 s2, 8(s0)
    ecac:	41 30 00 88 	store_32 s2, 12(s1)
    ecb0:	22 20 00 88 	store_32 s1, 8(s2)
    ecb4:	02 30 00 88 	store_32 s0, 12(s2)
    ecb8:	18 30 00 a8 	load_32 s0, 12(s24)
    ecbc:	20 00 9d c1 	cmple_u s1, s0, s26
    ecc0:	c1 0b 00 f4 	bnz s1, 376 <malloc+0x19ec>
    ecc4:	a9 fb ff f7 	b -4444 <malloc+0x71c>
    ecc8:	7f 0c 00 4f 	movehi s3, 127
    eccc:	bf 04 00 4f 	movehi s5, 63
    ecd0:	de 00 00 4f 	movehi s6, 30
    ecd4:	63 00 7c 00 	or s3, s3, 7936
    ecd8:	64 80 51 c0 	add_i s3, s4, s3
    ecdc:	a5 00 40 00 	or s5, s5, 4096
    ece0:	63 40 00 0a 	shr s3, s3, 16
    ece4:	63 20 00 01 	and s3, s3, 8
    ece8:	84 80 b1 c0 	shl s4, s4, s3
    ecec:	a4 80 52 c0 	add_i s5, s4, s5
    ecf0:	a5 40 00 0a 	shr s5, s5, 16
    ecf4:	a5 10 00 01 	and s5, s5, 4
    ecf8:	84 80 b2 c0 	shl s4, s4, s5
    ecfc:	65 80 01 c0 	or s3, s5, s3
    ed00:	c4 00 53 c0 	add_i s6, s4, s6
    ed04:	c6 40 00 0a 	shr s6, s6, 16
    ed08:	a6 08 00 01 	and s5, s6, 2
    ed0c:	c0 38 00 0f 	move s6, 14
    ed10:	63 80 02 c0 	or s3, s3, s5
    ed14:	84 80 b2 c0 	shl s4, s4, s5
    ed18:	66 80 61 c0 	sub_i s3, s6, s3
    ed1c:	84 3c 00 0a 	shr s4, s4, 15
    ed20:	63 00 52 c0 	add_i s3, s3, s4
    ed24:	83 1c 00 05 	add_i s4, s3, 7
    ed28:	80 00 a2 c0 	shr s4, s0, s4
    ed2c:	63 04 00 0b 	shl s3, s3, 1
    ed30:	84 04 00 01 	and s4, s4, 1
    ed34:	64 80 01 c0 	or s3, s4, s3
    ed38:	62 70 00 88 	store_32 s3, 28(s2)
    ed3c:	a3 08 00 0b 	shl s5, s3, 2
    ed40:	22 50 00 88 	store_32 s1, 20(s2)
    ed44:	d8 80 52 c0 	add_i s6, s24, s5
    ed48:	22 40 00 88 	store_32 s1, 16(s2)
    ed4c:	20 04 00 0f 	move s1, 1
    ed50:	98 10 00 a8 	load_32 s4, 4(s24)
    ed54:	a1 80 b1 c0 	shl s5, s1, s3
    ed58:	26 c0 04 05 	add_i s1, s6, 304
    ed5c:	e4 80 12 c0 	and s7, s4, s5
    ed60:	47 00 00 f4 	bnz s7, 8 <malloc+0x191c>
    ed64:	08 00 00 f6 	b 32 <malloc+0x1938>
    ed68:	81 00 00 a8 	load_32 s4, (s1)
    ed6c:	a3 7c 00 10 	cmpeq_i s5, s3, 31
    ed70:	25 01 00 f4 	bnz s5, 36 <malloc+0x1948>
    ed74:	20 64 00 0f 	move s1, 25
    ed78:	63 04 00 0a 	shr s3, s3, 1
    ed7c:	21 80 61 c0 	sub_i s1, s1, s3
    ed80:	06 00 00 f6 	b 24 <malloc+0x194c>
    ed84:	04 80 02 c0 	or s0, s4, s5
    ed88:	18 10 00 88 	store_32 s0, 4(s24)
    ed8c:	41 00 00 88 	store_32 s2, (s1)
    ed90:	13 00 00 f6 	b 76 <malloc+0x1990>
    ed94:	20 00 00 0f 	move s1, 0
    ed98:	60 80 b0 c0 	shl s3, s0, s1
    ed9c:	20 00 f2 c0 	move s1, s4
    eda0:	81 10 00 a8 	load_32 s4, 4(s1)
    eda4:	84 e0 ff 01 	and s4, s4, -8
    eda8:	84 00 00 c1 	cmpeq_i s4, s4, s0
    edac:	64 02 00 f4 	bnz s4, 76 <malloc+0x19ac>
    edb0:	83 74 00 0a 	shr s4, s3, 29
    edb4:	63 04 00 0b 	shl s3, s3, 1
    edb8:	84 10 00 01 	and s4, s4, 4
    edbc:	a1 00 52 c0 	add_i s5, s1, s4
    edc0:	85 40 00 a8 	load_32 s4, 16(s5)
    edc4:	c4 fe ff f5 	bnz s4, -40 <malloc+0x1950>
    edc8:	78 40 00 a8 	load_32 s3, 16(s24)
    edcc:	05 40 00 05 	add_i s0, s5, 16
    edd0:	63 00 60 c1 	cmpgt_u s3, s3, s0
    edd4:	e3 24 00 f4 	bnz s3, 1180 <malloc+0x1e24>
    edd8:	40 00 00 88 	store_32 s2, (s0)
    eddc:	22 60 00 88 	store_32 s1, 24(s2)
    ede0:	42 30 00 88 	store_32 s2, 12(s2)
    ede4:	42 20 00 88 	store_32 s2, 8(s2)
    ede8:	18 30 00 a8 	load_32 s0, 12(s24)
    edec:	20 00 9d c1 	cmple_u s1, s0, s26
    edf0:	41 02 00 f4 	bnz s1, 72 <malloc+0x19ec>
    edf4:	5d fb ff f7 	b -4748 <malloc+0x71c>
    edf8:	01 20 00 a8 	load_32 s0, 8(s1)
    edfc:	78 40 00 a8 	load_32 s3, 16(s24)
    ee00:	83 00 60 c1 	cmpgt_u s4, s3, s0
    ee04:	64 23 00 f4 	bnz s4, 1132 <malloc+0x1e24>
    ee08:	63 80 60 c1 	cmpgt_u s3, s3, s1
    ee0c:	23 23 00 f4 	bnz s3, 1124 <malloc+0x1e24>
    ee10:	40 30 00 88 	store_32 s2, 12(s0)
    ee14:	41 20 00 88 	store_32 s2, 8(s1)
    ee18:	02 20 00 88 	store_32 s0, 8(s2)
    ee1c:	00 00 00 0f 	move s0, 0
    ee20:	22 30 00 88 	store_32 s1, 12(s2)
    ee24:	02 60 00 88 	store_32 s0, 24(s2)
    ee28:	18 30 00 a8 	load_32 s0, 12(s24)
    ee2c:	20 00 9d c1 	cmple_u s1, s0, s26
    ee30:	41 00 00 f4 	bnz s1, 8 <malloc+0x19ec>
    ee34:	4d fb ff f7 	b -4812 <malloc+0x71c>
    ee38:	60 03 00 0f 	move s27, 0
    ee3c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    ee40:	00 08 00 01 	and s0, s0, 2
    ee44:	c0 7f ff f3 	bz s0, -4104 <malloc+0x9f0>
    ee48:	f7 fb ff f7 	b -4132 <malloc+0x9d8>
    ee4c:	20 00 00 0f 	move s1, 0
    ee50:	62 80 50 c0 	add_i s3, s2, s1
    ee54:	78 60 00 88 	store_32 s3, 24(s24)
    ee58:	20 80 60 c0 	sub_i s1, s0, s1
    ee5c:	38 30 00 88 	store_32 s1, 12(s24)
    ee60:	02 00 50 c0 	add_i s0, s2, s0
    ee64:	21 04 00 00 	or s1, s1, 1
    ee68:	23 10 00 88 	store_32 s1, 4(s3)
    ee6c:	20 a0 00 0f 	move s1, 40
    ee70:	20 10 00 88 	store_32 s1, 4(s0)
    ee74:	a6 fe ff f7 	b -1384 <malloc+0x14c0>
    ee78:	58 20 00 a8 	load_32 s2, 8(s24)
    ee7c:	60 23 00 05 	add_i s27, s0, 8
    ee80:	42 80 51 c0 	add_i s2, s2, s3
    ee84:	58 20 00 88 	store_32 s2, 8(s24)
    ee88:	61 00 51 c0 	add_i s3, s1, s2
    ee8c:	38 50 00 88 	store_32 s1, 20(s24)
    ee90:	82 04 00 00 	or s4, s2, 1
    ee94:	81 10 00 88 	store_32 s4, 4(s1)
    ee98:	43 00 00 88 	store_32 s2, (s3)
    ee9c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    eea0:	00 08 00 01 	and s0, s0, 2
    eea4:	c0 7c ff f3 	bz s0, -4200 <malloc+0x9f0>
    eea8:	df fb ff f7 	b -4228 <malloc+0x9d8>
    eeac:	c4 60 00 a8 	load_32 s6, 24(s4)
    eeb0:	e4 30 00 a8 	load_32 s7, 12(s4)
    eeb4:	07 01 02 c1 	cmpeq_i s8, s7, s4
    eeb8:	a8 02 00 f4 	bnz s8, 84 <malloc+0x1ac0>
    eebc:	04 21 00 a8 	load_32 s8, 8(s4)
    eec0:	a5 00 64 c1 	cmpgt_u s5, s5, s8
    eec4:	65 1d 00 f4 	bnz s5, 940 <malloc+0x1e24>
    eec8:	a8 30 00 a8 	load_32 s5, 12(s8)
    eecc:	a5 00 12 c1 	cmpne_i s5, s5, s4
    eed0:	05 1d 00 f4 	bnz s5, 928 <malloc+0x1e24>
    eed4:	a7 20 00 a8 	load_32 s5, 8(s7)
    eed8:	a5 00 12 c1 	cmpne_i s5, s5, s4
    eedc:	a5 1c 00 f4 	bnz s5, 916 <malloc+0x1e24>
    eee0:	e8 30 00 88 	store_32 s7, 12(s8)
    eee4:	07 21 00 88 	store_32 s8, 8(s7)
    eee8:	e6 09 00 f2 	bz s6, 316 <malloc+0x1bd8>
    eeec:	1d 00 00 f6 	b 116 <malloc+0x1b14>
    eef0:	a0 04 00 0f 	move s5, 1
    eef4:	d8 00 00 a8 	load_32 s6, (s24)
    eef8:	a5 00 b4 c0 	shl s5, s5, s8
    eefc:	a5 fc ff 03 	xor s5, s5, -1
    ef00:	a6 80 12 c0 	and s5, s6, s5
    ef04:	b8 00 00 88 	store_32 s5, (s24)
    ef08:	47 00 00 f6 	b 284 <malloc+0x1bd8>
    ef0c:	24 51 00 a8 	load_32 s9, 20(s4)
    ef10:	49 00 00 f4 	bnz s9, 8 <malloc+0x1acc>
    ef14:	03 00 00 f6 	b 12 <malloc+0x1ad4>
    ef18:	04 51 00 05 	add_i s8, s4, 20
    ef1c:	04 00 00 f6 	b 16 <malloc+0x1ae0>
    ef20:	04 41 00 05 	add_i s8, s4, 16
    ef24:	28 01 00 a8 	load_32 s9, (s8)
    ef28:	e9 19 00 f2 	bz s9, 828 <malloc+0x1e18>
    ef2c:	e0 80 f4 c0 	move s7, s9
    ef30:	27 51 00 a8 	load_32 s9, 20(s7)
    ef34:	40 01 f4 c0 	move s10, s8
    ef38:	07 51 00 05 	add_i s8, s7, 20
    ef3c:	89 ff ff f5 	bnz s9, -16 <malloc+0x1ae0>
    ef40:	27 41 00 a8 	load_32 s9, 16(s7)
    ef44:	07 41 00 05 	add_i s8, s7, 16
    ef48:	29 ff ff f5 	bnz s9, -28 <malloc+0x1ae0>
    ef4c:	a5 00 65 c1 	cmpgt_u s5, s5, s10
    ef50:	05 19 00 f4 	bnz s5, 800 <malloc+0x1e24>
    ef54:	a0 00 00 0f 	move s5, 0
    ef58:	aa 00 00 88 	store_32 s5, (s10)
    ef5c:	46 06 00 f2 	bz s6, 200 <malloc+0x1bd8>
    ef60:	a4 70 00 a8 	load_32 s5, 28(s4)
    ef64:	05 09 00 0b 	shl s8, s5, 2
    ef68:	18 01 54 c0 	add_i s8, s24, s8
    ef6c:	28 c1 04 a8 	load_32 s9, 304(s8)
    ef70:	29 01 12 c1 	cmpne_i s9, s9, s4
    ef74:	49 00 00 f4 	bnz s9, 8 <malloc+0x1b30>
    ef78:	0c 00 00 f6 	b 48 <malloc+0x1b5c>
    ef7c:	b8 40 00 a8 	load_32 s5, 16(s24)
    ef80:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    ef84:	65 17 00 f4 	bnz s5, 748 <malloc+0x1e24>
    ef88:	a6 40 00 a8 	load_32 s5, 16(s6)
    ef8c:	a5 00 02 c1 	cmpeq_i s5, s5, s4
    ef90:	05 02 00 f4 	bnz s5, 64 <malloc+0x1b84>
    ef94:	a0 50 00 0f 	move s5, 20
    ef98:	a6 80 52 c0 	add_i s5, s6, s5
    ef9c:	e5 00 00 88 	store_32 s7, (s5)
    efa0:	27 04 00 f2 	bz s7, 132 <malloc+0x1bd8>
    efa4:	0f 00 00 f6 	b 60 <malloc+0x1b94>
    efa8:	08 c1 04 05 	add_i s8, s8, 304
    efac:	e8 00 00 88 	store_32 s7, (s8)
    efb0:	87 01 00 f4 	bnz s7, 48 <malloc+0x1b94>
    efb4:	c0 04 00 0f 	move s6, 1
    efb8:	a6 80 b2 c0 	shl s5, s6, s5
    efbc:	d8 10 00 a8 	load_32 s6, 4(s24)
    efc0:	a5 fc ff 03 	xor s5, s5, -1
    efc4:	a6 80 12 c0 	and s5, s6, s5
    efc8:	b8 10 00 88 	store_32 s5, 4(s24)
    efcc:	16 00 00 f6 	b 88 <malloc+0x1bd8>
    efd0:	a0 40 00 0f 	move s5, 16
    efd4:	a6 80 52 c0 	add_i s5, s6, s5
    efd8:	e5 00 00 88 	store_32 s7, (s5)
    efdc:	47 02 00 f2 	bz s7, 72 <malloc+0x1bd8>
    efe0:	b8 40 00 a8 	load_32 s5, 16(s24)
    efe4:	05 81 63 c1 	cmpgt_u s8, s5, s7
    efe8:	48 14 00 f4 	bnz s8, 648 <malloc+0x1e24>
    efec:	c7 60 00 88 	store_32 s6, 24(s7)
    eff0:	c4 40 00 a8 	load_32 s6, 16(s4)
    eff4:	a6 00 00 f2 	bz s6, 20 <malloc+0x1bbc>
    eff8:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    effc:	a5 13 00 f4 	bnz s5, 628 <malloc+0x1e24>
    f000:	c7 40 00 88 	store_32 s6, 16(s7)
    f004:	e6 60 00 88 	store_32 s7, 24(s6)
    f008:	a4 50 00 a8 	load_32 s5, 20(s4)
    f00c:	c5 00 00 f2 	bz s5, 24 <malloc+0x1bd8>
    f010:	d8 40 00 a8 	load_32 s6, 16(s24)
    f014:	c6 80 62 c1 	cmpgt_u s6, s6, s5
    f018:	c6 12 00 f4 	bnz s6, 600 <malloc+0x1e24>
    f01c:	a7 50 00 88 	store_32 s5, 20(s7)
    f020:	e5 60 00 88 	store_32 s7, 24(s5)
    f024:	42 e0 ff 01 	and s2, s2, -8
    f028:	84 00 51 c0 	add_i s4, s4, s2
    f02c:	62 80 51 c0 	add_i s3, s2, s3
    f030:	44 10 00 a8 	load_32 s2, 4(s4)
    f034:	42 f8 ff 01 	and s2, s2, -2
    f038:	44 10 00 88 	store_32 s2, 4(s4)
    f03c:	43 04 00 00 	or s2, s3, 1
    f040:	41 10 00 88 	store_32 s2, 4(s1)
    f044:	81 80 51 c0 	add_i s4, s1, s3
    f048:	43 fc 03 16 	cmpgt_u s2, s3, 255
    f04c:	64 00 00 88 	store_32 s3, (s4)
    f050:	02 02 00 f4 	bnz s2, 64 <malloc+0x1c44>
    f054:	43 0c 00 0a 	shr s2, s3, 3
    f058:	78 00 00 a8 	load_32 s3, (s24)
    f05c:	80 04 00 0f 	move s4, 1
    f060:	a2 0c 00 0b 	shl s5, s2, 3
    f064:	b8 80 52 c0 	add_i s5, s24, s5
    f068:	84 00 b1 c0 	shl s4, s4, s2
    f06c:	c3 00 12 c0 	and s6, s3, s4
    f070:	45 a0 00 05 	add_i s2, s5, 40
    f074:	46 00 00 f4 	bnz s6, 8 <malloc+0x1c30>
    f078:	11 00 00 f6 	b 68 <malloc+0x1c70>
    f07c:	62 20 00 a8 	load_32 s3, 8(s2)
    f080:	98 40 00 a8 	load_32 s4, 16(s24)
    f084:	84 80 91 c1 	cmple_u s4, s4, s3
    f088:	04 02 00 f4 	bnz s4, 64 <malloc+0x1c7c>
    f08c:	79 00 00 f6 	b 484 <malloc+0x1e24>
    f090:	40 00 00 0f 	move s2, 0
    f094:	a3 20 00 0a 	shr s5, s3, 8
    f098:	80 00 f1 c0 	move s4, s2
    f09c:	05 06 00 f2 	bz s5, 192 <malloc+0x1d10>
    f0a0:	9f fc 00 4f 	movehi s4, 2047
    f0a4:	84 fc 7f 00 	or s4, s4, 8191
    f0a8:	83 00 62 c1 	cmpgt_u s4, s3, s4
    f0ac:	44 00 00 f4 	bnz s4, 8 <malloc+0x1c68>
    f0b0:	0f 00 00 f6 	b 60 <malloc+0x1ca0>
    f0b4:	80 7c 00 0f 	move s4, 31
    f0b8:	29 00 00 f6 	b 164 <malloc+0x1d10>
    f0bc:	63 00 02 c0 	or s3, s3, s4
    f0c0:	78 00 00 88 	store_32 s3, (s24)
    f0c4:	60 00 f1 c0 	move s3, s2
    f0c8:	22 20 00 88 	store_32 s1, 8(s2)
    f0cc:	60 23 00 05 	add_i s27, s0, 8
    f0d0:	23 30 00 88 	store_32 s1, 12(s3)
    f0d4:	61 20 00 88 	store_32 s3, 8(s1)
    f0d8:	41 30 00 88 	store_32 s2, 12(s1)
    f0dc:	18 f0 06 a0 	load_u8 s0, 444(s24)
    f0e0:	00 08 00 01 	and s0, s0, 2
    f0e4:	c0 6a ff f3 	bz s0, -4776 <malloc+0x9f0>
    f0e8:	4f fb ff f7 	b -4804 <malloc+0x9d8>
    f0ec:	9f 0c 00 4f 	movehi s4, 127
    f0f0:	df 04 00 4f 	movehi s6, 63
    f0f4:	fe 00 00 4f 	movehi s7, 30
    f0f8:	84 00 7c 00 	or s4, s4, 7936
    f0fc:	85 00 52 c0 	add_i s4, s5, s4
    f100:	c6 00 40 00 	or s6, s6, 4096
    f104:	84 40 00 0a 	shr s4, s4, 16
    f108:	84 20 00 01 	and s4, s4, 8
    f10c:	a5 00 b2 c0 	shl s5, s5, s4
    f110:	c5 00 53 c0 	add_i s6, s5, s6
    f114:	c6 40 00 0a 	shr s6, s6, 16
    f118:	c6 10 00 01 	and s6, s6, 4
    f11c:	a5 00 b3 c0 	shl s5, s5, s6
    f120:	86 00 02 c0 	or s4, s6, s4
    f124:	e5 80 53 c0 	add_i s7, s5, s7
    f128:	e7 40 00 0a 	shr s7, s7, 16
    f12c:	c7 08 00 01 	and s6, s7, 2
    f130:	e0 38 00 0f 	move s7, 14
    f134:	84 00 03 c0 	or s4, s4, s6
    f138:	a5 00 b3 c0 	shl s5, s5, s6
    f13c:	87 00 62 c0 	sub_i s4, s7, s4
    f140:	a5 3c 00 0a 	shr s5, s5, 15
    f144:	84 80 52 c0 	add_i s4, s4, s5
    f148:	a4 1c 00 05 	add_i s5, s4, 7
    f14c:	a3 80 a2 c0 	shr s5, s3, s5
    f150:	84 04 00 0b 	shl s4, s4, 1
    f154:	a5 04 00 01 	and s5, s5, 1
    f158:	85 00 02 c0 	or s4, s5, s4
    f15c:	81 70 00 88 	store_32 s4, 28(s1)
    f160:	c4 08 00 0b 	shl s6, s4, 2
    f164:	41 50 00 88 	store_32 s2, 20(s1)
    f168:	f8 00 53 c0 	add_i s7, s24, s6
    f16c:	41 40 00 88 	store_32 s2, 16(s1)
    f170:	40 04 00 0f 	move s2, 1
    f174:	b8 10 00 a8 	load_32 s5, 4(s24)
    f178:	c2 00 b2 c0 	shl s6, s2, s4
    f17c:	47 c0 04 05 	add_i s2, s7, 304
    f180:	05 01 13 c0 	and s8, s5, s6
    f184:	48 00 00 f4 	bnz s8, 8 <malloc+0x1d40>
    f188:	08 00 00 f6 	b 32 <malloc+0x1d5c>
    f18c:	a2 00 00 a8 	load_32 s5, (s2)
    f190:	c4 7c 00 10 	cmpeq_i s6, s4, 31
    f194:	26 01 00 f4 	bnz s6, 36 <malloc+0x1d6c>
    f198:	40 64 00 0f 	move s2, 25
    f19c:	84 04 00 0a 	shr s4, s4, 1
    f1a0:	42 00 62 c0 	sub_i s2, s2, s4
    f1a4:	06 00 00 f6 	b 24 <malloc+0x1d70>
    f1a8:	65 00 03 c0 	or s3, s5, s6
    f1ac:	78 10 00 88 	store_32 s3, 4(s24)
    f1b0:	22 00 00 88 	store_32 s1, (s2)
    f1b4:	13 00 00 f6 	b 76 <malloc+0x1db4>
    f1b8:	40 00 00 0f 	move s2, 0
    f1bc:	83 00 b1 c0 	shl s4, s3, s2
    f1c0:	40 80 f2 c0 	move s2, s5
    f1c4:	a2 10 00 a8 	load_32 s5, 4(s2)
    f1c8:	a5 e0 ff 01 	and s5, s5, -8
    f1cc:	a5 80 01 c1 	cmpeq_i s5, s5, s3
    f1d0:	85 02 00 f4 	bnz s5, 80 <malloc+0x1dd4>
    f1d4:	a4 74 00 0a 	shr s5, s4, 29
    f1d8:	84 04 00 0b 	shl s4, s4, 1
    f1dc:	a5 10 00 01 	and s5, s5, 4
    f1e0:	c2 80 52 c0 	add_i s6, s2, s5
    f1e4:	a6 40 00 a8 	load_32 s5, 16(s6)
    f1e8:	c5 fe ff f5 	bnz s5, -40 <malloc+0x1d74>
    f1ec:	98 40 00 a8 	load_32 s4, 16(s24)
    f1f0:	66 40 00 05 	add_i s3, s6, 16
    f1f4:	84 80 61 c1 	cmpgt_u s4, s4, s3
    f1f8:	c4 03 00 f4 	bnz s4, 120 <malloc+0x1e24>
    f1fc:	23 00 00 88 	store_32 s1, (s3)
    f200:	41 60 00 88 	store_32 s2, 24(s1)
    f204:	60 23 00 05 	add_i s27, s0, 8
    f208:	21 30 00 88 	store_32 s1, 12(s1)
    f20c:	21 20 00 88 	store_32 s1, 8(s1)
    f210:	18 f0 06 a0 	load_u8 s0, 444(s24)
    f214:	00 08 00 01 	and s0, s0, 2
    f218:	20 61 ff f3 	bz s0, -5084 <malloc+0x9f0>
    f21c:	02 fb ff f7 	b -5112 <malloc+0x9d8>
    f220:	62 20 00 a8 	load_32 s3, 8(s2)
    f224:	98 40 00 a8 	load_32 s4, 16(s24)
    f228:	a4 80 61 c1 	cmpgt_u s5, s4, s3
    f22c:	25 02 00 f4 	bnz s5, 68 <malloc+0x1e24>
    f230:	84 00 61 c1 	cmpgt_u s4, s4, s2
    f234:	e4 01 00 f4 	bnz s4, 60 <malloc+0x1e24>
    f238:	23 30 00 88 	store_32 s1, 12(s3)
    f23c:	60 23 00 05 	add_i s27, s0, 8
    f240:	22 20 00 88 	store_32 s1, 8(s2)
    f244:	61 20 00 88 	store_32 s3, 8(s1)
    f248:	41 30 00 88 	store_32 s2, 12(s1)
    f24c:	40 00 00 0f 	move s2, 0
    f250:	41 60 00 88 	store_32 s2, 24(s1)
    f254:	18 f0 06 a0 	load_u8 s0, 444(s24)
    f258:	00 08 00 01 	and s0, s0, 2
    f25c:	00 5f ff f3 	bz s0, -5152 <malloc+0x9f0>
    f260:	f1 fa ff f7 	b -5180 <malloc+0x9d8>
    f264:	e0 00 00 0f 	move s7, 0
    f268:	e6 ed ff f3 	bz s6, -580 <malloc+0x1bd8>
    f26c:	3d ff ff f7 	b -780 <malloc+0x1b14>
    f270:	bd 0a 00 f8 	call 10996 <abort>

000000000000f274 free:
    f274:	de 03 ff 05 	add_i sp, sp, -64
    f278:	1e f3 00 88 	store_32 s24, 60(sp)
    f27c:	fe e3 00 88 	store_32 ra, 56(sp)
    f280:	80 32 00 f2 	bz s0, 1616 <free+0x65c>
    f284:	2c 00 00 4f 	movehi s1, 12
    f288:	01 b3 04 00 	or s24, s1, 300
    f28c:	38 f0 06 a0 	load_u8 s1, 444(s24)
    f290:	41 08 00 01 	and s2, s1, 2
    f294:	20 e0 ff 05 	add_i s1, s0, -8
    f298:	e2 01 00 f2 	bz s2, 60 <free+0x60>
    f29c:	58 00 07 05 	add_i s2, s24, 448
    f2a0:	60 04 00 0f 	move s3, 1
    f2a4:	82 00 00 aa 	load_sync s4, (s2)
    f2a8:	a0 80 f1 c0 	move s5, s3
    f2ac:	a2 00 00 8a 	store_sync s5, (s2)  
    f2b0:	a5 ff ff f3 	bz s5, -12 <free+0x30>
    f2b4:	04 01 00 f2 	bz s4, 32 <free+0x60>
    f2b8:	98 00 07 a8 	load_32 s4, 448(s24)
    f2bc:	e4 ff ff f5 	bnz s4, -4 <free+0x44>
    f2c0:	82 00 00 aa 	load_sync s4, (s2)
    f2c4:	a0 80 f1 c0 	move s5, s3
    f2c8:	a2 00 00 8a 	store_sync s5, (s2)  
    f2cc:	a5 ff ff f3 	bz s5, -12 <free+0x4c>
    f2d0:	44 ff ff f5 	bnz s4, -24 <free+0x44>
    f2d4:	b8 40 00 a8 	load_32 s5, 16(s24)
    f2d8:	41 80 82 c1 	cmplt_u s2, s1, s5
    f2dc:	a2 3f 00 f4 	bnz s2, 2036 <free+0x85c>
    f2e0:	40 f0 ff a9 	load_32 s2, -4(s0)
    f2e4:	82 0c 00 01 	and s4, s2, 3
    f2e8:	04 04 00 10 	cmpeq_i s0, s4, 1
    f2ec:	20 3f 00 f4 	bnz s0, 2020 <free+0x85c>
    f2f0:	02 e0 ff 01 	and s0, s2, -8
    f2f4:	62 04 00 01 	and s3, s2, 1
    f2f8:	41 00 50 c0 	add_i s2, s1, s0
    f2fc:	43 12 00 f4 	bnz s3, 584 <free+0x2d0>
    f300:	61 00 00 a8 	load_32 s3, (s1)
    f304:	44 2d 00 f2 	bz s4, 1448 <free+0x638>
    f308:	21 80 61 c0 	sub_i s1, s1, s3
    f30c:	81 80 82 c1 	cmplt_u s4, s1, s5
    f310:	04 3e 00 f4 	bnz s4, 1984 <free+0x85c>
    f314:	98 50 00 a8 	load_32 s4, 20(s24)
    f318:	03 00 50 c0 	add_i s0, s3, s0
    f31c:	84 80 00 c1 	cmpeq_i s4, s4, s1
    f320:	e4 03 00 f4 	bnz s4, 124 <free+0x128>
    f324:	83 fc 03 16 	cmpgt_u s4, s3, 255
    f328:	a4 04 00 f4 	bnz s4, 148 <free+0x148>
    f32c:	c3 0c 00 0a 	shr s6, s3, 3
    f330:	61 20 00 a8 	load_32 s3, 8(s1)
    f334:	86 0c 00 0b 	shl s4, s6, 3
    f338:	98 00 52 c0 	add_i s4, s24, s4
    f33c:	e4 a0 00 05 	add_i s7, s4, 40
    f340:	81 30 00 a8 	load_32 s4, 12(s1)
    f344:	03 81 03 c1 	cmpeq_i s8, s3, s7
    f348:	c8 00 00 f4 	bnz s8, 24 <free+0xec>
    f34c:	05 81 61 c1 	cmpgt_u s8, s5, s3
    f350:	08 3c 00 f4 	bnz s8, 1920 <free+0x85c>
    f354:	03 31 00 a8 	load_32 s8, 12(s3)
    f358:	08 81 10 c1 	cmpne_i s8, s8, s1
    f35c:	a8 3b 00 f4 	bnz s8, 1908 <free+0x85c>
    f360:	04 81 11 c1 	cmpne_i s8, s4, s3
    f364:	48 00 00 f4 	bnz s8, 8 <free+0xf8>
    f368:	26 00 00 f6 	b 152 <free+0x18c>
    f36c:	c4 80 03 c1 	cmpeq_i s6, s4, s7
    f370:	c6 00 00 f4 	bnz s6, 24 <free+0x114>
    f374:	a5 00 62 c1 	cmpgt_u s5, s5, s4
    f378:	c5 3a 00 f4 	bnz s5, 1880 <free+0x85c>
    f37c:	a4 20 00 a8 	load_32 s5, 8(s4)
    f380:	a5 80 10 c1 	cmpne_i s5, s5, s1
    f384:	65 3a 00 f4 	bnz s5, 1868 <free+0x85c>
    f388:	83 30 00 88 	store_32 s4, 12(s3)
    f38c:	64 20 00 88 	store_32 s3, 8(s4)
    f390:	62 80 90 c1 	cmple_u s3, s2, s1
    f394:	e3 39 00 f4 	bnz s3, 1852 <free+0x85c>
    f398:	6d 00 00 f6 	b 436 <free+0x2d8>
    f39c:	62 10 00 a8 	load_32 s3, 4(s2)
    f3a0:	83 0c 00 01 	and s4, s3, 3
    f3a4:	84 0c 00 11 	cmpne_i s4, s4, 3
    f3a8:	e4 0c 00 f4 	bnz s4, 412 <free+0x2d0>
    f3ac:	18 20 00 88 	store_32 s0, 8(s24)
    f3b0:	63 f8 ff 01 	and s3, s3, -2
    f3b4:	62 10 00 88 	store_32 s3, 4(s2)
    f3b8:	cb 00 00 f6 	b 812 <free+0x470>
    f3bc:	61 60 00 a8 	load_32 s3, 24(s1)
    f3c0:	81 30 00 a8 	load_32 s4, 12(s1)
    f3c4:	c4 80 00 c1 	cmpeq_i s6, s4, s1
    f3c8:	e6 02 00 f4 	bnz s6, 92 <free+0x1b0>
    f3cc:	c1 20 00 a8 	load_32 s6, 8(s1)
    f3d0:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    f3d4:	e5 37 00 f4 	bnz s5, 1788 <free+0x85c>
    f3d8:	a6 30 00 a8 	load_32 s5, 12(s6)
    f3dc:	a5 80 10 c1 	cmpne_i s5, s5, s1
    f3e0:	85 37 00 f4 	bnz s5, 1776 <free+0x85c>
    f3e4:	a4 20 00 a8 	load_32 s5, 8(s4)
    f3e8:	a5 80 10 c1 	cmpne_i s5, s5, s1
    f3ec:	25 37 00 f4 	bnz s5, 1764 <free+0x85c>
    f3f0:	86 30 00 88 	store_32 s4, 12(s6)
    f3f4:	c4 20 00 88 	store_32 s6, 8(s4)
    f3f8:	63 0a 00 f2 	bz s3, 332 <free+0x2d0>
    f3fc:	1f 00 00 f6 	b 124 <free+0x204>
    f400:	60 04 00 0f 	move s3, 1
    f404:	98 00 00 a8 	load_32 s4, (s24)
    f408:	63 00 b3 c0 	shl s3, s3, s6
    f40c:	63 fc ff 03 	xor s3, s3, -1
    f410:	64 80 11 c0 	and s3, s4, s3
    f414:	78 00 00 88 	store_32 s3, (s24)
    f418:	62 80 90 c1 	cmple_u s3, s2, s1
    f41c:	a3 35 00 f4 	bnz s3, 1716 <free+0x85c>
    f420:	4b 00 00 f6 	b 300 <free+0x2d8>
    f424:	e1 50 00 a8 	load_32 s7, 20(s1)
    f428:	47 00 00 f4 	bnz s7, 8 <free+0x1bc>
    f42c:	03 00 00 f6 	b 12 <free+0x1c4>
    f430:	c1 50 00 05 	add_i s6, s1, 20
    f434:	04 00 00 f6 	b 16 <free+0x1d0>
    f438:	c1 40 00 05 	add_i s6, s1, 16
    f43c:	e6 00 00 a8 	load_32 s7, (s6)
    f440:	c7 33 00 f2 	bz s7, 1656 <free+0x844>
    f444:	80 80 f3 c0 	move s4, s7
    f448:	e4 50 00 a8 	load_32 s7, 20(s4)
    f44c:	00 01 f3 c0 	move s8, s6
    f450:	c4 50 00 05 	add_i s6, s4, 20
    f454:	87 ff ff f5 	bnz s7, -16 <free+0x1d0>
    f458:	e4 40 00 a8 	load_32 s7, 16(s4)
    f45c:	c4 40 00 05 	add_i s6, s4, 16
    f460:	27 ff ff f5 	bnz s7, -28 <free+0x1d0>
    f464:	a5 00 64 c1 	cmpgt_u s5, s5, s8
    f468:	45 33 00 f4 	bnz s5, 1640 <free+0x85c>
    f46c:	a0 00 00 0f 	move s5, 0
    f470:	a8 00 00 88 	store_32 s5, (s8)
    f474:	83 06 00 f2 	bz s3, 208 <free+0x2d0>
    f478:	a1 70 00 a8 	load_32 s5, 28(s1)
    f47c:	c5 08 00 0b 	shl s6, s5, 2
    f480:	d8 00 53 c0 	add_i s6, s24, s6
    f484:	e6 c0 04 a8 	load_32 s7, 304(s6)
    f488:	e7 80 10 c1 	cmpne_i s7, s7, s1
    f48c:	47 00 00 f4 	bnz s7, 8 <free+0x220>
    f490:	0c 00 00 f6 	b 48 <free+0x24c>
    f494:	b8 40 00 a8 	load_32 s5, 16(s24)
    f498:	a5 80 61 c1 	cmpgt_u s5, s5, s3
    f49c:	a5 31 00 f4 	bnz s5, 1588 <free+0x85c>
    f4a0:	a3 40 00 a8 	load_32 s5, 16(s3)
    f4a4:	a5 80 00 c1 	cmpeq_i s5, s5, s1
    f4a8:	45 02 00 f4 	bnz s5, 72 <free+0x27c>
    f4ac:	a0 50 00 0f 	move s5, 20
    f4b0:	a3 80 52 c0 	add_i s5, s3, s5
    f4b4:	85 00 00 88 	store_32 s4, (s5)
    f4b8:	64 04 00 f2 	bz s4, 140 <free+0x2d0>
    f4bc:	11 00 00 f6 	b 68 <free+0x28c>
    f4c0:	c6 c0 04 05 	add_i s6, s6, 304
    f4c4:	86 00 00 88 	store_32 s4, (s6)
    f4c8:	c4 01 00 f4 	bnz s4, 56 <free+0x28c>
    f4cc:	60 04 00 0f 	move s3, 1
    f4d0:	98 10 00 a8 	load_32 s4, 4(s24)
    f4d4:	63 80 b2 c0 	shl s3, s3, s5
    f4d8:	63 fc ff 03 	xor s3, s3, -1
    f4dc:	64 80 11 c0 	and s3, s4, s3
    f4e0:	78 10 00 88 	store_32 s3, 4(s24)
    f4e4:	62 80 90 c1 	cmple_u s3, s2, s1
    f4e8:	43 2f 00 f4 	bnz s3, 1512 <free+0x85c>
    f4ec:	18 00 00 f6 	b 96 <free+0x2d8>
    f4f0:	a0 40 00 0f 	move s5, 16
    f4f4:	a3 80 52 c0 	add_i s5, s3, s5
    f4f8:	85 00 00 88 	store_32 s4, (s5)
    f4fc:	44 02 00 f2 	bz s4, 72 <free+0x2d0>
    f500:	b8 40 00 a8 	load_32 s5, 16(s24)
    f504:	c5 00 62 c1 	cmpgt_u s6, s5, s4
    f508:	46 2e 00 f4 	bnz s6, 1480 <free+0x85c>
    f50c:	64 60 00 88 	store_32 s3, 24(s4)
    f510:	61 40 00 a8 	load_32 s3, 16(s1)
    f514:	a3 00 00 f2 	bz s3, 20 <free+0x2b4>
    f518:	a5 80 61 c1 	cmpgt_u s5, s5, s3
    f51c:	a5 2d 00 f4 	bnz s5, 1460 <free+0x85c>
    f520:	64 40 00 88 	store_32 s3, 16(s4)
    f524:	83 60 00 88 	store_32 s4, 24(s3)
    f528:	61 50 00 a8 	load_32 s3, 20(s1)
    f52c:	c3 00 00 f2 	bz s3, 24 <free+0x2d0>
    f530:	b8 40 00 a8 	load_32 s5, 16(s24)
    f534:	a5 80 61 c1 	cmpgt_u s5, s5, s3
    f538:	c5 2c 00 f4 	bnz s5, 1432 <free+0x85c>
    f53c:	64 50 00 88 	store_32 s3, 20(s4)
    f540:	83 60 00 88 	store_32 s4, 24(s3)
    f544:	62 80 90 c1 	cmple_u s3, s2, s1
    f548:	43 2c 00 f4 	bnz s3, 1416 <free+0x85c>
    f54c:	62 10 00 a8 	load_32 s3, 4(s2)
    f550:	83 04 00 01 	and s4, s3, 1
    f554:	e4 2b 00 f2 	bz s4, 1404 <free+0x85c>
    f558:	83 08 00 01 	and s4, s3, 2
    f55c:	e4 04 00 f4 	bnz s4, 156 <free+0x384>
    f560:	98 60 00 a8 	load_32 s4, 24(s24)
    f564:	84 00 11 c1 	cmpne_i s4, s4, s2
    f568:	44 00 00 f4 	bnz s4, 8 <free+0x2fc>
    f56c:	45 00 00 f6 	b 276 <free+0x40c>
    f570:	98 50 00 a8 	load_32 s4, 20(s24)
    f574:	84 00 11 c1 	cmpne_i s4, s4, s2
    f578:	44 00 00 f4 	bnz s4, 8 <free+0x30c>
    f57c:	56 00 00 f6 	b 344 <free+0x460>
    f580:	83 fc 03 16 	cmpgt_u s4, s3, 255
    f584:	64 0d 00 f4 	bnz s4, 428 <free+0x4bc>
    f588:	c3 0c 00 0a 	shr s6, s3, 3
    f58c:	82 20 00 a8 	load_32 s4, 8(s2)
    f590:	a6 0c 00 0b 	shl s5, s6, 3
    f594:	b8 80 52 c0 	add_i s5, s24, s5
    f598:	e5 a0 00 05 	add_i s7, s5, 40
    f59c:	a2 30 00 a8 	load_32 s5, 12(s2)
    f5a0:	04 81 03 c1 	cmpeq_i s8, s4, s7
    f5a4:	e8 00 00 f4 	bnz s8, 28 <free+0x34c>
    f5a8:	18 41 00 a8 	load_32 s8, 16(s24)
    f5ac:	08 01 62 c1 	cmpgt_u s8, s8, s4
    f5b0:	08 29 00 f4 	bnz s8, 1312 <free+0x85c>
    f5b4:	04 31 00 a8 	load_32 s8, 12(s4)
    f5b8:	08 01 11 c1 	cmpne_i s8, s8, s2
    f5bc:	a8 28 00 f4 	bnz s8, 1300 <free+0x85c>
    f5c0:	05 01 12 c1 	cmpne_i s8, s5, s4
    f5c4:	48 00 00 f4 	bnz s8, 8 <free+0x358>
    f5c8:	e0 00 00 f6 	b 896 <free+0x6d4>
    f5cc:	c5 80 03 c1 	cmpeq_i s6, s5, s7
    f5d0:	e6 00 00 f4 	bnz s6, 28 <free+0x378>
    f5d4:	d8 40 00 a8 	load_32 s6, 16(s24)
    f5d8:	c6 80 62 c1 	cmpgt_u s6, s6, s5
    f5dc:	a6 27 00 f4 	bnz s6, 1268 <free+0x85c>
    f5e0:	c5 20 00 a8 	load_32 s6, 8(s5)
    f5e4:	46 00 11 c1 	cmpne_i s2, s6, s2
    f5e8:	42 27 00 f4 	bnz s2, 1256 <free+0x85c>
    f5ec:	a4 30 00 88 	store_32 s5, 12(s4)
    f5f0:	85 20 00 88 	store_32 s4, 8(s5)
    f5f4:	23 01 00 f6 	b 1164 <free+0x80c>
    f5f8:	63 f8 ff 01 	and s3, s3, -2
    f5fc:	62 10 00 88 	store_32 s3, 4(s2)
    f600:	41 00 50 c0 	add_i s2, s1, s0
    f604:	60 04 00 00 	or s3, s0, 1
    f608:	61 10 00 88 	store_32 s3, 4(s1)
    f60c:	02 00 00 88 	store_32 s0, (s2)
    f610:	40 fc 03 16 	cmpgt_u s2, s0, 255
    f614:	02 02 00 f4 	bnz s2, 64 <free+0x3e0>
    f618:	00 0c 00 0a 	shr s0, s0, 3
    f61c:	58 00 00 a8 	load_32 s2, (s24)
    f620:	60 04 00 0f 	move s3, 1
    f624:	80 0c 00 0b 	shl s4, s0, 3
    f628:	98 00 52 c0 	add_i s4, s24, s4
    f62c:	63 00 b0 c0 	shl s3, s3, s0
    f630:	a2 80 11 c0 	and s5, s2, s3
    f634:	04 a0 00 05 	add_i s0, s4, 40
    f638:	45 00 00 f4 	bnz s5, 8 <free+0x3cc>
    f63c:	32 00 00 f6 	b 200 <free+0x490>
    f640:	40 20 00 a8 	load_32 s2, 8(s0)
    f644:	78 40 00 a8 	load_32 s3, 16(s24)
    f648:	63 00 91 c1 	cmple_u s3, s3, s2
    f64c:	23 06 00 f4 	bnz s3, 196 <free+0x49c>
    f650:	20 01 00 f6 	b 1152 <free+0x85c>
    f654:	40 00 00 0f 	move s2, 0
    f658:	80 20 00 0a 	shr s4, s0, 8
    f65c:	60 00 f1 c0 	move s3, s2
    f660:	44 0c 00 f2 	bz s4, 392 <free+0x574>
    f664:	7f fc 00 4f 	movehi s3, 2047
    f668:	63 fc 7f 00 	or s3, s3, 8191
    f66c:	60 80 61 c1 	cmpgt_u s3, s0, s3
    f670:	43 00 00 f4 	bnz s3, 8 <free+0x404>
    f674:	41 00 00 f6 	b 260 <free+0x504>
    f678:	60 7c 00 0f 	move s3, 31
    f67c:	5b 00 00 f6 	b 364 <free+0x574>
    f680:	58 30 00 a8 	load_32 s2, 12(s24)
    f684:	02 00 50 c0 	add_i s0, s2, s0
    f688:	18 30 00 88 	store_32 s0, 12(s24)
    f68c:	38 60 00 88 	store_32 s1, 24(s24)
    f690:	40 04 00 00 	or s2, s0, 1
    f694:	41 10 00 88 	store_32 s2, 4(s1)
    f698:	58 50 00 a8 	load_32 s2, 20(s24)
    f69c:	21 00 11 c1 	cmpne_i s1, s1, s2
    f6a0:	81 00 00 f4 	bnz s1, 16 <free+0x43c>
    f6a4:	20 00 00 0f 	move s1, 0
    f6a8:	38 50 00 88 	store_32 s1, 20(s24)
    f6ac:	38 20 00 88 	store_32 s1, 8(s24)
    f6b0:	38 70 00 a8 	load_32 s1, 28(s24)
    f6b4:	00 80 90 c1 	cmple_u s0, s0, s1
    f6b8:	a0 0f 00 f4 	bnz s0, 500 <free+0x638>
    f6bc:	00 00 00 0f 	move s0, 0
    f6c0:	05 01 00 f8 	call 1044 <sys_trim>
    f6c4:	18 f0 06 a0 	load_u8 s0, 444(s24)
    f6c8:	00 08 00 01 	and s0, s0, 2
    f6cc:	20 10 00 f2 	bz s0, 516 <free+0x65c>
    f6d0:	7a 00 00 f6 	b 488 <free+0x644>
    f6d4:	58 20 00 a8 	load_32 s2, 8(s24)
    f6d8:	02 00 50 c0 	add_i s0, s2, s0
    f6dc:	18 20 00 88 	store_32 s0, 8(s24)
    f6e0:	38 50 00 88 	store_32 s1, 20(s24)
    f6e4:	41 00 50 c0 	add_i s2, s1, s0
    f6e8:	60 04 00 00 	or s3, s0, 1
    f6ec:	61 10 00 88 	store_32 s3, 4(s1)
    f6f0:	02 00 00 88 	store_32 s0, (s2)
    f6f4:	18 f0 06 a0 	load_u8 s0, 444(s24)
    f6f8:	00 08 00 01 	and s0, s0, 2
    f6fc:	a0 0e 00 f2 	bz s0, 468 <free+0x65c>
    f700:	6e 00 00 f6 	b 440 <free+0x644>
    f704:	42 80 01 c0 	or s2, s2, s3
    f708:	58 00 00 88 	store_32 s2, (s24)
    f70c:	40 00 f0 c0 	move s2, s0
    f710:	20 20 00 88 	store_32 s1, 8(s0)
    f714:	22 30 00 88 	store_32 s1, 12(s2)
    f718:	41 20 00 88 	store_32 s2, 8(s1)
    f71c:	01 30 00 88 	store_32 s0, 12(s1)
    f720:	18 f0 06 a0 	load_u8 s0, 444(s24)
    f724:	00 08 00 01 	and s0, s0, 2
    f728:	40 0d 00 f2 	bz s0, 424 <free+0x65c>
    f72c:	63 00 00 f6 	b 396 <free+0x644>
    f730:	82 60 00 a8 	load_32 s4, 24(s2)
    f734:	a2 30 00 a8 	load_32 s5, 12(s2)
    f738:	c5 00 01 c1 	cmpeq_i s6, s5, s2
    f73c:	46 11 00 f4 	bnz s6, 552 <free+0x6f0>
    f740:	c2 20 00 a8 	load_32 s6, 8(s2)
    f744:	f8 40 00 a8 	load_32 s7, 16(s24)
    f748:	e7 00 63 c1 	cmpgt_u s7, s7, s6
    f74c:	27 1c 00 f4 	bnz s7, 900 <free+0x85c>
    f750:	e6 30 00 a8 	load_32 s7, 12(s6)
    f754:	e7 00 11 c1 	cmpne_i s7, s7, s2
    f758:	c7 1b 00 f4 	bnz s7, 888 <free+0x85c>
    f75c:	e5 20 00 a8 	load_32 s7, 8(s5)
    f760:	e7 00 11 c1 	cmpne_i s7, s7, s2
    f764:	67 1b 00 f4 	bnz s7, 876 <free+0x85c>
    f768:	a6 30 00 88 	store_32 s5, 12(s6)
    f76c:	c5 20 00 88 	store_32 s6, 8(s5)
    f770:	84 18 00 f2 	bz s4, 784 <free+0x80c>
    f774:	92 00 00 f6 	b 584 <free+0x748>
    f778:	7f 0c 00 4f 	movehi s3, 127
    f77c:	bf 04 00 4f 	movehi s5, 63
    f780:	de 00 00 4f 	movehi s6, 30
    f784:	63 00 7c 00 	or s3, s3, 7936
    f788:	64 80 51 c0 	add_i s3, s4, s3
    f78c:	a5 00 40 00 	or s5, s5, 4096
    f790:	63 40 00 0a 	shr s3, s3, 16
    f794:	63 20 00 01 	and s3, s3, 8
    f798:	84 80 b1 c0 	shl s4, s4, s3
    f79c:	a4 80 52 c0 	add_i s5, s4, s5
    f7a0:	a5 40 00 0a 	shr s5, s5, 16
    f7a4:	a5 10 00 01 	and s5, s5, 4
    f7a8:	84 80 b2 c0 	shl s4, s4, s5
    f7ac:	65 80 01 c0 	or s3, s5, s3
    f7b0:	c4 00 53 c0 	add_i s6, s4, s6
    f7b4:	c6 40 00 0a 	shr s6, s6, 16
    f7b8:	a6 08 00 01 	and s5, s6, 2
    f7bc:	c0 38 00 0f 	move s6, 14
    f7c0:	63 80 02 c0 	or s3, s3, s5
    f7c4:	84 80 b2 c0 	shl s4, s4, s5
    f7c8:	66 80 61 c0 	sub_i s3, s6, s3
    f7cc:	84 3c 00 0a 	shr s4, s4, 15
    f7d0:	63 00 52 c0 	add_i s3, s3, s4
    f7d4:	83 1c 00 05 	add_i s4, s3, 7
    f7d8:	80 00 a2 c0 	shr s4, s0, s4
    f7dc:	63 04 00 0b 	shl s3, s3, 1
    f7e0:	84 04 00 01 	and s4, s4, 1
    f7e4:	64 80 01 c0 	or s3, s4, s3
    f7e8:	61 70 00 88 	store_32 s3, 28(s1)
    f7ec:	a3 08 00 0b 	shl s5, s3, 2
    f7f0:	41 50 00 88 	store_32 s2, 20(s1)
    f7f4:	d8 80 52 c0 	add_i s6, s24, s5
    f7f8:	41 40 00 88 	store_32 s2, 16(s1)
    f7fc:	40 04 00 0f 	move s2, 1
    f800:	98 10 00 a8 	load_32 s4, 4(s24)
    f804:	a2 80 b1 c0 	shl s5, s2, s3
    f808:	46 c0 04 05 	add_i s2, s6, 304
    f80c:	e4 80 12 c0 	and s7, s4, s5
    f810:	47 00 00 f4 	bnz s7, 8 <free+0x5a4>
    f814:	08 00 00 f6 	b 32 <free+0x5c0>
    f818:	82 00 00 a8 	load_32 s4, (s2)
    f81c:	a3 7c 00 10 	cmpeq_i s5, s3, 31
    f820:	25 01 00 f4 	bnz s5, 36 <free+0x5d0>
    f824:	40 64 00 0f 	move s2, 25
    f828:	63 04 00 0a 	shr s3, s3, 1
    f82c:	42 80 61 c0 	sub_i s2, s2, s3
    f830:	06 00 00 f6 	b 24 <free+0x5d4>
    f834:	04 80 02 c0 	or s0, s4, s5
    f838:	18 10 00 88 	store_32 s0, 4(s24)
    f83c:	22 00 00 88 	store_32 s1, (s2)
    f840:	13 00 00 f6 	b 76 <free+0x618>
    f844:	40 00 00 0f 	move s2, 0
    f848:	60 00 b1 c0 	shl s3, s0, s2
    f84c:	40 00 f2 c0 	move s2, s4
    f850:	82 10 00 a8 	load_32 s4, 4(s2)
    f854:	84 e0 ff 01 	and s4, s4, -8
    f858:	84 00 00 c1 	cmpeq_i s4, s4, s0
    f85c:	24 04 00 f4 	bnz s4, 132 <free+0x66c>
    f860:	83 74 00 0a 	shr s4, s3, 29
    f864:	63 04 00 0b 	shl s3, s3, 1
    f868:	84 10 00 01 	and s4, s4, 4
    f86c:	a2 00 52 c0 	add_i s5, s2, s4
    f870:	85 40 00 a8 	load_32 s4, 16(s5)
    f874:	c4 fe ff f5 	bnz s4, -40 <free+0x5d8>
    f878:	78 40 00 a8 	load_32 s3, 16(s24)
    f87c:	05 40 00 05 	add_i s0, s5, 16
    f880:	63 00 60 c1 	cmpgt_u s3, s3, s0
    f884:	63 12 00 f4 	bnz s3, 588 <free+0x85c>
    f888:	20 00 00 88 	store_32 s1, (s0)
    f88c:	41 60 00 88 	store_32 s2, 24(s1)
    f890:	21 30 00 88 	store_32 s1, 12(s1)
    f894:	21 20 00 88 	store_32 s1, 8(s1)
    f898:	18 80 00 a8 	load_32 s0, 32(s24)
    f89c:	00 fc ff 05 	add_i s0, s0, -1
    f8a0:	18 80 00 88 	store_32 s0, 32(s24)
    f8a4:	40 00 00 f4 	bnz s0, 8 <free+0x638>
    f8a8:	1e 00 00 f6 	b 120 <free+0x6ac>
    f8ac:	18 f0 06 a0 	load_u8 s0, 444(s24)
    f8b0:	00 08 00 01 	and s0, s0, 2
    f8b4:	e0 00 00 f2 	bz s0, 28 <free+0x65c>
    f8b8:	18 00 07 05 	add_i s0, s24, 448
    f8bc:	20 00 00 0f 	move s1, 0
    f8c0:	40 00 00 aa 	load_sync s2, (s0)
    f8c4:	40 80 f0 c0 	move s2, s1
    f8c8:	40 00 00 8a 	store_sync s2, (s0)  
    f8cc:	a2 ff ff f3 	bz s2, -12 <free+0x64c>
    f8d0:	fe e3 00 a8 	load_32 ra, 56(sp)
    f8d4:	1e f3 00 a8 	load_32 s24, 60(sp)
    f8d8:	de 03 01 05 	add_i sp, sp, 64
    f8dc:	1f 00 00 f0 	ret
    f8e0:	02 20 00 a8 	load_32 s0, 8(s2)
    f8e4:	78 40 00 a8 	load_32 s3, 16(s24)
    f8e8:	83 00 60 c1 	cmpgt_u s4, s3, s0
    f8ec:	24 0f 00 f4 	bnz s4, 484 <free+0x85c>
    f8f0:	63 00 61 c1 	cmpgt_u s3, s3, s2
    f8f4:	e3 0e 00 f4 	bnz s3, 476 <free+0x85c>
    f8f8:	20 30 00 88 	store_32 s1, 12(s0)
    f8fc:	22 20 00 88 	store_32 s1, 8(s2)
    f900:	01 20 00 88 	store_32 s0, 8(s1)
    f904:	00 00 00 0f 	move s0, 0
    f908:	41 30 00 88 	store_32 s2, 12(s1)
    f90c:	01 60 00 88 	store_32 s0, 24(s1)
    f910:	18 80 00 a8 	load_32 s0, 32(s24)
    f914:	00 fc ff 05 	add_i s0, s0, -1
    f918:	18 80 00 88 	store_32 s0, 32(s24)
    f91c:	80 fc ff f5 	bnz s0, -112 <free+0x638>
    f920:	18 30 07 05 	add_i s0, s24, 460
    f924:	20 00 00 a8 	load_32 s1, (s0)
    f928:	01 20 00 05 	add_i s0, s1, 8
    f92c:	c1 ff ff f5 	bnz s1, -8 <free+0x6b0>
    f930:	00 fc ff 0f 	move s0, -1
    f934:	18 80 00 88 	store_32 s0, 32(s24)
    f938:	18 f0 06 a0 	load_u8 s0, 444(s24)
    f93c:	00 08 00 01 	and s0, s0, 2
    f940:	80 fc ff f3 	bz s0, -112 <free+0x65c>
    f944:	dd ff ff f7 	b -140 <free+0x644>
    f948:	40 04 00 0f 	move s2, 1
    f94c:	98 00 00 a8 	load_32 s4, (s24)
    f950:	42 00 b3 c0 	shl s2, s2, s6
    f954:	42 fc ff 03 	xor s2, s2, -1
    f958:	44 00 11 c0 	and s2, s4, s2
    f95c:	58 00 00 88 	store_32 s2, (s24)
    f960:	48 00 00 f6 	b 288 <free+0x80c>
    f964:	e2 50 00 a8 	load_32 s7, 20(s2)
    f968:	47 00 00 f4 	bnz s7, 8 <free+0x6fc>
    f96c:	03 00 00 f6 	b 12 <free+0x704>
    f970:	c2 50 00 05 	add_i s6, s2, 20
    f974:	04 00 00 f6 	b 16 <free+0x710>
    f978:	c2 40 00 05 	add_i s6, s2, 16
    f97c:	e6 00 00 a8 	load_32 s7, (s6)
    f980:	27 0a 00 f2 	bz s7, 324 <free+0x850>
    f984:	a0 80 f3 c0 	move s5, s7
    f988:	e5 50 00 a8 	load_32 s7, 20(s5)
    f98c:	00 01 f3 c0 	move s8, s6
    f990:	c5 50 00 05 	add_i s6, s5, 20
    f994:	87 ff ff f5 	bnz s7, -16 <free+0x710>
    f998:	e5 40 00 a8 	load_32 s7, 16(s5)
    f99c:	c5 40 00 05 	add_i s6, s5, 16
    f9a0:	27 ff ff f5 	bnz s7, -28 <free+0x710>
    f9a4:	d8 40 00 a8 	load_32 s6, 16(s24)
    f9a8:	c6 00 64 c1 	cmpgt_u s6, s6, s8
    f9ac:	26 09 00 f4 	bnz s6, 292 <free+0x85c>
    f9b0:	c0 00 00 0f 	move s6, 0
    f9b4:	c8 00 00 88 	store_32 s6, (s8)
    f9b8:	44 06 00 f2 	bz s4, 200 <free+0x80c>
    f9bc:	c2 70 00 a8 	load_32 s6, 28(s2)
    f9c0:	e6 08 00 0b 	shl s7, s6, 2
    f9c4:	f8 80 53 c0 	add_i s7, s24, s7
    f9c8:	07 c1 04 a8 	load_32 s8, 304(s7)
    f9cc:	08 01 11 c1 	cmpne_i s8, s8, s2
    f9d0:	48 00 00 f4 	bnz s8, 8 <free+0x764>
    f9d4:	0c 00 00 f6 	b 48 <free+0x790>
    f9d8:	d8 40 00 a8 	load_32 s6, 16(s24)
    f9dc:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    f9e0:	86 07 00 f4 	bnz s6, 240 <free+0x85c>
    f9e4:	c4 40 00 a8 	load_32 s6, 16(s4)
    f9e8:	c6 00 01 c1 	cmpeq_i s6, s6, s2
    f9ec:	06 02 00 f4 	bnz s6, 64 <free+0x7b8>
    f9f0:	c0 50 00 0f 	move s6, 20
    f9f4:	c4 00 53 c0 	add_i s6, s4, s6
    f9f8:	a6 00 00 88 	store_32 s5, (s6)
    f9fc:	25 04 00 f2 	bz s5, 132 <free+0x80c>
    fa00:	0f 00 00 f6 	b 60 <free+0x7c8>
    fa04:	e7 c0 04 05 	add_i s7, s7, 304
    fa08:	a7 00 00 88 	store_32 s5, (s7)
    fa0c:	85 01 00 f4 	bnz s5, 48 <free+0x7c8>
    fa10:	40 04 00 0f 	move s2, 1
    fa14:	98 10 00 a8 	load_32 s4, 4(s24)
    fa18:	42 00 b3 c0 	shl s2, s2, s6
    fa1c:	42 fc ff 03 	xor s2, s2, -1
    fa20:	44 00 11 c0 	and s2, s4, s2
    fa24:	58 10 00 88 	store_32 s2, 4(s24)
    fa28:	16 00 00 f6 	b 88 <free+0x80c>
    fa2c:	c0 40 00 0f 	move s6, 16
    fa30:	c4 00 53 c0 	add_i s6, s4, s6
    fa34:	a6 00 00 88 	store_32 s5, (s6)
    fa38:	45 02 00 f2 	bz s5, 72 <free+0x80c>
    fa3c:	d8 40 00 a8 	load_32 s6, 16(s24)
    fa40:	e6 80 62 c1 	cmpgt_u s7, s6, s5
    fa44:	67 04 00 f4 	bnz s7, 140 <free+0x85c>
    fa48:	85 60 00 88 	store_32 s4, 24(s5)
    fa4c:	82 40 00 a8 	load_32 s4, 16(s2)
    fa50:	a4 00 00 f2 	bz s4, 20 <free+0x7f0>
    fa54:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    fa58:	c6 03 00 f4 	bnz s6, 120 <free+0x85c>
    fa5c:	85 40 00 88 	store_32 s4, 16(s5)
    fa60:	a4 60 00 88 	store_32 s5, 24(s4)
    fa64:	42 50 00 a8 	load_32 s2, 20(s2)
    fa68:	c2 00 00 f2 	bz s2, 24 <free+0x80c>
    fa6c:	98 40 00 a8 	load_32 s4, 16(s24)
    fa70:	84 00 61 c1 	cmpgt_u s4, s4, s2
    fa74:	e4 02 00 f4 	bnz s4, 92 <free+0x85c>
    fa78:	45 50 00 88 	store_32 s2, 20(s5)
    fa7c:	a2 60 00 88 	store_32 s5, 24(s2)
    fa80:	43 e0 ff 01 	and s2, s3, -8
    fa84:	02 00 50 c0 	add_i s0, s2, s0
    fa88:	41 00 50 c0 	add_i s2, s1, s0
    fa8c:	60 04 00 00 	or s3, s0, 1
    fa90:	61 10 00 88 	store_32 s3, 4(s1)
    fa94:	02 00 00 88 	store_32 s0, (s2)
    fa98:	58 50 00 a8 	load_32 s2, 20(s24)
    fa9c:	41 00 11 c1 	cmpne_i s2, s1, s2
    faa0:	82 db ff f5 	bnz s2, -1168 <free+0x39c>
    faa4:	18 20 00 88 	store_32 s0, 8(s24)
    faa8:	18 f0 06 a0 	load_u8 s0, 444(s24)
    faac:	00 08 00 01 	and s0, s0, 2
    fab0:	00 f1 ff f3 	bz s0, -480 <free+0x65c>
    fab4:	81 ff ff f7 	b -508 <free+0x644>
    fab8:	80 00 00 0f 	move s4, 0
    fabc:	43 d4 ff f3 	bz s3, -1400 <free+0x2d0>
    fac0:	6e fe ff f7 	b -1608 <free+0x204>
    fac4:	a0 00 00 0f 	move s5, 0
    fac8:	c4 fd ff f3 	bz s4, -72 <free+0x80c>
    facc:	bc ff ff f7 	b -272 <free+0x748>
    fad0:	a5 08 00 f8 	call 8852 <abort>

000000000000fad4 sys_trim:
    fad4:	de 03 ff 05 	add_i sp, sp, -64
    fad8:	1e f3 00 88 	store_32 s24, 60(sp)
    fadc:	3e e3 00 88 	store_32 s25, 56(sp)
    fae0:	5e d3 00 88 	store_32 s26, 52(sp)
    fae4:	7e c3 00 88 	store_32 s27, 48(sp)
    fae8:	fe b3 00 88 	store_32 ra, 44(sp)
    faec:	2c 00 00 4f 	movehi s1, 12
    faf0:	61 53 04 00 	or s27, s1, 276
    faf4:	3b 00 00 a8 	load_32 s1, (s27)
    faf8:	61 05 00 f4 	bnz s1, 172 <sys_trim+0xd0>
    fafc:	2c 00 00 4f 	movehi s1, 12
    fb00:	40 04 00 0f 	move s2, 1
    fb04:	21 20 0c 00 	or s1, s1, 776
    fb08:	61 00 00 aa 	load_sync s3, (s1)
    fb0c:	80 00 f1 c0 	move s4, s2
    fb10:	81 00 00 8a 	store_sync s4, (s1)  
    fb14:	a4 ff ff f3 	bz s4, -12 <sys_trim+0x34>
    fb18:	03 01 00 f2 	bz s3, 32 <sys_trim+0x64>
    fb1c:	61 00 00 a8 	load_32 s3, (s1)
    fb20:	e3 ff ff f5 	bnz s3, -4 <sys_trim+0x48>
    fb24:	61 00 00 aa 	load_sync s3, (s1)
    fb28:	80 00 f1 c0 	move s4, s2
    fb2c:	81 00 00 8a 	store_sync s4, (s1)  
    fb30:	a4 ff ff f3 	bz s4, -12 <sys_trim+0x50>
    fb34:	43 ff ff f5 	bnz s3, -24 <sys_trim+0x48>
    fb38:	5b 00 00 a8 	load_32 s2, (s27)
    fb3c:	a2 02 00 f4 	bnz s2, 84 <sys_trim+0xbc>
    fb40:	40 00 40 0f 	move s2, 4096
    fb44:	5b 20 00 88 	store_32 s2, 8(s27)
    fb48:	5b 10 00 88 	store_32 s2, 4(s27)
    fb4c:	40 fc ff 0f 	move s2, -1
    fb50:	5b 30 00 88 	store_32 s2, 12(s27)
    fb54:	4c 00 00 4f 	movehi s2, 12
    fb58:	60 20 00 4f 	movehi s3, 256
    fb5c:	7b 40 00 88 	store_32 s3, 16(s27)
    fb60:	60 08 00 0f 	move s3, 2
    fb64:	7b 50 00 88 	store_32 s3, 20(s27)
    fb68:	42 b0 04 00 	or s2, s2, 300
    fb6c:	aa 54 55 4f 	movehi s5, 174762
    fb70:	80 00 00 0f 	move s4, 0
    fb74:	62 f0 06 88 	store_32 s3, 444(s2)
    fb78:	7e a0 00 05 	add_i s3, sp, 40
    fb7c:	82 00 07 88 	store_32 s4, 448(s2)
    fb80:	45 60 55 00 	or s2, s5, 5464
    fb84:	63 c0 ff 01 	and s3, s3, -16
    fb88:	43 00 31 c0 	xor s2, s3, s2
    fb8c:	5b 00 00 88 	store_32 s2, (s27)
    fb90:	40 00 00 0f 	move s2, 0
    fb94:	61 00 00 aa 	load_sync s3, (s1)
    fb98:	60 00 f1 c0 	move s3, s2
    fb9c:	61 00 00 8a 	store_sync s3, (s1)  
    fba0:	a3 ff ff f3 	bz s3, -12 <sys_trim+0xc0>
    fba4:	20 fc fe 16 	cmpgt_u s1, s0, -65
    fba8:	60 00 00 0f 	move s3, 0
    fbac:	a1 0a 00 f4 	bnz s1, 340 <sys_trim+0x22c>
    fbb0:	2c 00 00 4f 	movehi s1, 12
    fbb4:	81 b0 04 00 	or s4, s1, 300
    fbb8:	44 63 00 a8 	load_32 s26, 24(s4)
    fbbc:	3a 0a 00 f2 	bz s26, 324 <sys_trim+0x22c>
    fbc0:	24 30 00 a8 	load_32 s1, 12(s4)
    fbc4:	40 a0 00 05 	add_i s2, s0, 40
    fbc8:	41 00 91 c1 	cmple_u s2, s1, s2
    fbcc:	e2 08 00 f4 	bnz s2, 284 <sys_trim+0x214>
    fbd0:	40 5c ff 0f 	move s2, -41
    fbd4:	7e 80 00 88 	store_32 s3, 32(sp)
    fbd8:	1b 23 00 a8 	load_32 s24, 8(s27)
    fbdc:	02 00 60 c0 	sub_i s0, s2, s0
    fbe0:	00 80 50 c0 	add_i s0, s0, s1
    fbe4:	20 00 fc c0 	move s1, s24
    fbe8:	9e 90 00 88 	store_32 s4, 36(sp)
    fbec:	00 00 5c c0 	add_i s0, s0, s24
    fbf0:	4c 1a 00 f8 	call 26928 <__udivsi3>
    fbf4:	9e 90 00 a8 	load_32 s4, 36(sp)
    fbf8:	00 fc ff 05 	add_i s0, s0, -1
    fbfc:	24 13 07 05 	add_i s25, s4, 452
    fc00:	39 00 00 a8 	load_32 s1, (s25)
    fc04:	41 00 6d c1 	cmpgt_u s2, s1, s26
    fc08:	42 00 00 f4 	bnz s2, 8 <sys_trim+0x13c>
    fc0c:	05 00 00 f6 	b 20 <sys_trim+0x14c>
    fc10:	39 23 00 a8 	load_32 s25, 8(s25)
    fc14:	39 00 00 a8 	load_32 s1, (s25)
    fc18:	41 00 6d c1 	cmpgt_u s2, s1, s26
    fc1c:	a2 ff ff f5 	bnz s2, -12 <sys_trim+0x13c>
    fc20:	59 10 00 a8 	load_32 s2, 4(s25)
    fc24:	21 00 51 c0 	add_i s1, s1, s2
    fc28:	21 00 6d c1 	cmpgt_u s1, s1, s26
    fc2c:	41 00 00 f4 	bnz s1, 8 <sys_trim+0x160>
    fc30:	f8 ff ff f7 	b -32 <sys_trim+0x13c>
    fc34:	39 30 00 a0 	load_u8 s1, 12(s25)
    fc38:	7e 80 00 a8 	load_32 s3, 32(sp)
    fc3c:	21 20 00 01 	and s1, s1, 8
    fc40:	41 05 00 f4 	bnz s1, 168 <sys_trim+0x214>
    fc44:	3f fc 7f 4f 	movehi s1, 262143
    fc48:	40 00 7c c0 	mull_i s2, s0, s24
    fc4c:	01 f8 7f 00 	or s0, s1, 8190
    fc50:	02 00 60 c1 	cmpgt_u s0, s2, s0
    fc54:	40 00 00 f4 	bnz s0, 8 <sys_trim+0x188>
    fc58:	03 00 00 f6 	b 12 <sys_trim+0x190>
    fc5c:	00 00 80 4f 	movehi s0, 262144
    fc60:	40 00 6c c0 	sub_i s2, s0, s24
    fc64:	0c 00 00 4f 	movehi s0, 12
    fc68:	00 07 00 0f 	move s24, 1
    fc6c:	40 23 0c 00 	or s26, s0, 776
    fc70:	1a 00 00 aa 	load_sync s0, (s26)
    fc74:	20 00 fc c0 	move s1, s24
    fc78:	3a 00 00 8a 	store_sync s1, (s26)  
    fc7c:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x19c>
    fc80:	5e 60 00 88 	store_32 s2, 24(sp)
    fc84:	00 01 00 f2 	bz s0, 32 <sys_trim+0x1d0>
    fc88:	1a 00 00 a8 	load_32 s0, (s26)
    fc8c:	e0 ff ff f5 	bnz s0, -4 <sys_trim+0x1b4>
    fc90:	1a 00 00 aa 	load_sync s0, (s26)
    fc94:	20 00 fc c0 	move s1, s24
    fc98:	3a 00 00 8a 	store_sync s1, (s26)  
    fc9c:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x1bc>
    fca0:	40 ff ff f5 	bnz s0, -24 <sys_trim+0x1b4>
    fca4:	00 00 00 0f 	move s0, 0
    fca8:	1e 70 00 88 	store_32 s0, 28(sp)
    fcac:	c2 10 00 f8 	call 17160 <sbrk>
    fcb0:	39 00 00 a8 	load_32 s1, (s25)
    fcb4:	59 10 00 a8 	load_32 s2, 4(s25)
    fcb8:	60 00 f0 c0 	move s3, s0
    fcbc:	01 00 51 c0 	add_i s0, s1, s2
    fcc0:	03 00 10 c1 	cmpne_i s0, s3, s0
    fcc4:	40 00 00 f4 	bnz s0, 8 <sys_trim+0x1f8>
    fcc8:	17 00 00 f6 	b 92 <sys_trim+0x250>
    fccc:	9e 90 00 a8 	load_32 s4, 36(sp)
    fcd0:	7e 80 00 a8 	load_32 s3, 32(sp)
    fcd4:	3e 70 00 a8 	load_32 s1, 28(sp)
    fcd8:	1a 00 00 aa 	load_sync s0, (s26)
    fcdc:	00 80 f0 c0 	move s0, s1
    fce0:	1a 00 00 8a 	store_sync s0, (s26)  
    fce4:	a0 ff ff f3 	bz s0, -12 <sys_trim+0x204>
    fce8:	04 30 00 a8 	load_32 s0, 12(s4)
    fcec:	24 70 00 a8 	load_32 s1, 28(s4)
    fcf0:	00 80 90 c1 	cmple_u s0, s0, s1
    fcf4:	60 00 00 f4 	bnz s0, 12 <sys_trim+0x22c>
    fcf8:	00 fc ff 0f 	move s0, -1
    fcfc:	04 70 00 88 	store_32 s0, 28(s4)
    fd00:	00 83 f1 c0 	move s24, s3
    fd04:	00 00 fc c0 	move s0, s24
    fd08:	fe b3 00 a8 	load_32 ra, 44(sp)
    fd0c:	7e c3 00 a8 	load_32 s27, 48(sp)
    fd10:	5e d3 00 a8 	load_32 s26, 52(sp)
    fd14:	3e e3 00 a8 	load_32 s25, 56(sp)
    fd18:	1e f3 00 a8 	load_32 s24, 60(sp)
    fd1c:	de 03 01 05 	add_i sp, sp, 64
    fd20:	1f 00 00 f0 	ret
    fd24:	1e 60 00 a8 	load_32 s0, 24(sp)
    fd28:	3e 70 00 a8 	load_32 s1, 28(sp)
    fd2c:	7e 60 00 88 	store_32 s3, 24(sp)
    fd30:	01 00 60 c0 	sub_i s0, s1, s0
    fd34:	a0 10 00 f8 	call 17024 <sbrk>
    fd38:	1e 50 00 88 	store_32 s0, 20(sp)
    fd3c:	1e 70 00 a8 	load_32 s0, 28(sp)
    fd40:	9d 10 00 f8 	call 17012 <sbrk>
    fd44:	5e 60 00 a8 	load_32 s2, 24(sp)
    fd48:	3e 50 00 a8 	load_32 s1, 20(sp)
    fd4c:	21 fc ff 10 	cmpeq_i s1, s1, -1
    fd50:	e1 fb ff f5 	bnz s1, -132 <sys_trim+0x1f8>
    fd54:	20 00 81 c1 	cmplt_u s1, s0, s2
    fd58:	41 00 00 f4 	bnz s1, 8 <sys_trim+0x28c>
    fd5c:	dc ff ff f7 	b -144 <sys_trim+0x1f8>
    fd60:	be 70 00 a8 	load_32 s5, 28(sp)
    fd64:	02 00 60 c0 	sub_i s0, s2, s0
    fd68:	3a 00 00 aa 	load_sync s1, (s26)
    fd6c:	20 80 f2 c0 	move s1, s5
    fd70:	3a 00 00 8a 	store_sync s1, (s26)  
    fd74:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x294>
    fd78:	9e 90 00 a8 	load_32 s4, 36(sp)
    fd7c:	7e 80 00 a8 	load_32 s3, 32(sp)
    fd80:	40 fb ff f3 	bz s0, -152 <sys_trim+0x214>
    fd84:	39 10 00 a8 	load_32 s1, 4(s25)
    fd88:	21 00 60 c0 	sub_i s1, s1, s0
    fd8c:	39 10 00 88 	store_32 s1, 4(s25)
    fd90:	24 c0 06 a8 	load_32 s1, 432(s4)
    fd94:	21 00 60 c0 	sub_i s1, s1, s0
    fd98:	24 c0 06 88 	store_32 s1, 432(s4)
    fd9c:	24 60 00 a8 	load_32 s1, 24(s4)
    fda0:	64 30 00 a8 	load_32 s3, 12(s4)
    fda4:	41 20 00 05 	add_i s2, s1, 8
    fda8:	03 00 60 c0 	sub_i s0, s3, s0
    fdac:	42 1c 00 01 	and s2, s2, 7
    fdb0:	42 00 00 10 	cmpeq_i s2, s2, 0
    fdb4:	82 00 00 f4 	bnz s2, 16 <sys_trim+0x2f0>
    fdb8:	40 e0 ff 0f 	move s2, -8
    fdbc:	42 80 60 c0 	sub_i s2, s2, s1
    fdc0:	a2 1c 00 01 	and s5, s2, 7
    fdc4:	41 80 52 c0 	add_i s2, s1, s5
    fdc8:	44 60 00 88 	store_32 s2, 24(s4)
    fdcc:	60 80 62 c0 	sub_i s3, s0, s5
    fdd0:	64 30 00 88 	store_32 s3, 12(s4)
    fdd4:	01 00 50 c0 	add_i s0, s1, s0
    fdd8:	20 a0 00 0f 	move s1, 40
    fddc:	63 04 00 00 	or s3, s3, 1
    fde0:	62 10 00 88 	store_32 s3, 4(s2)
    fde4:	20 10 00 88 	store_32 s1, 4(s0)
    fde8:	1b 40 00 a8 	load_32 s0, 16(s27)
    fdec:	04 70 00 88 	store_32 s0, 28(s4)
    fdf0:	c5 ff ff f7 	b -236 <sys_trim+0x230>

000000000000fdf4 calloc:
    fdf4:	de 03 ff 05 	add_i sp, sp, -64
    fdf8:	1e f3 00 88 	store_32 s24, 60(sp)
    fdfc:	3e e3 00 88 	store_32 s25, 56(sp)
    fe00:	fe d3 00 88 	store_32 ra, 52(sp)
    fe04:	20 83 f0 c0 	move s25, s1
    fe08:	20 00 f0 c0 	move s1, s0
    fe0c:	81 01 00 f2 	bz s1, 48 <calloc+0x48>
    fe10:	19 80 00 c0 	or s0, s25, s1
    fe14:	48 00 00 4f 	movehi s2, 8
    fe18:	19 83 70 c0 	mull_i s24, s25, s1
    fe1c:	00 00 81 c1 	cmplt_u s0, s0, s2
    fe20:	00 01 00 f4 	bnz s0, 32 <calloc+0x4c>
    fe24:	00 00 fc c0 	move s0, s24
    fe28:	be 19 00 f8 	call 26360 <__udivsi3>
    fe2c:	00 80 0c c1 	cmpeq_i s0, s0, s25
    fe30:	80 00 00 f4 	bnz s0, 16 <calloc+0x4c>
    fe34:	00 ff ff 0f 	move s24, -1
    fe38:	02 00 00 f6 	b 8 <calloc+0x4c>
    fe3c:	00 03 00 0f 	move s24, 0
    fe40:	00 00 fc c0 	move s0, s24
    fe44:	82 f5 ff f9 	call -10744 <malloc>
    fe48:	fe d3 00 a8 	load_32 ra, 52(sp)
    fe4c:	3e e3 00 a8 	load_32 s25, 56(sp)
    fe50:	1e f3 00 a8 	load_32 s24, 60(sp)
    fe54:	de 03 01 05 	add_i sp, sp, 64
    fe58:	1f 00 00 f0 	ret

000000000000fe5c realloc:
    fe5c:	de 03 ff 05 	add_i sp, sp, -64
    fe60:	1e f3 00 88 	store_32 s24, 60(sp)
    fe64:	3e e3 00 88 	store_32 s25, 56(sp)
    fe68:	5e d3 00 88 	store_32 s26, 52(sp)
    fe6c:	7e c3 00 88 	store_32 s27, 48(sp)
    fe70:	fe b3 00 88 	store_32 ra, 44(sp)
    fe74:	20 83 f0 c0 	move s25, s1
    fe78:	00 03 f0 c0 	move s24, s0
    fe7c:	58 00 00 f4 	bnz s24, 8 <realloc+0x28>
    fe80:	09 00 00 f6 	b 36 <realloc+0x48>
    fe84:	19 fc fe 16 	cmpgt_u s0, s25, -65
    fe88:	40 03 00 0f 	move s26, 0
    fe8c:	a0 08 00 f4 	bnz s0, 276 <realloc+0x144>
    fe90:	19 2c 00 18 	cmplt_u s0, s25, 11
    fe94:	00 01 00 f4 	bnz s0, 32 <realloc+0x58>
    fe98:	19 2c 00 05 	add_i s0, s25, 11
    fe9c:	20 e0 ff 01 	and s1, s0, -8
    fea0:	06 00 00 f6 	b 24 <realloc+0x5c>
    fea4:	00 80 fc c0 	move s0, s25
    fea8:	69 f5 ff f9 	call -10844 <malloc>
    feac:	40 03 f0 c0 	move s26, s0
    feb0:	3c 00 00 f6 	b 240 <realloc+0x144>
    feb4:	20 40 00 0f 	move s1, 16
    feb8:	0c 00 00 4f 	movehi s0, 12
    febc:	60 b3 04 00 	or s27, s0, 300
    fec0:	1b f0 06 a0 	load_u8 s0, 444(s27)
    fec4:	40 08 00 01 	and s2, s0, 2
    fec8:	18 e0 ff 05 	add_i s0, s24, -8
    fecc:	e2 01 00 f2 	bz s2, 60 <realloc+0xac>
    fed0:	5b 00 07 05 	add_i s2, s27, 448
    fed4:	60 04 00 0f 	move s3, 1
    fed8:	82 00 00 aa 	load_sync s4, (s2)
    fedc:	a0 80 f1 c0 	move s5, s3
    fee0:	a2 00 00 8a 	store_sync s5, (s2)  
    fee4:	a5 ff ff f3 	bz s5, -12 <realloc+0x7c>
    fee8:	04 01 00 f2 	bz s4, 32 <realloc+0xac>
    feec:	9b 00 07 a8 	load_32 s4, 448(s27)
    fef0:	e4 ff ff f5 	bnz s4, -4 <realloc+0x90>
    fef4:	82 00 00 aa 	load_sync s4, (s2)
    fef8:	a0 80 f1 c0 	move s5, s3
    fefc:	a2 00 00 8a 	store_sync s5, (s2)  
    ff00:	a5 ff ff f3 	bz s5, -12 <realloc+0x98>
    ff04:	44 ff ff f5 	bnz s4, -24 <realloc+0x90>
    ff08:	2e 00 00 f8 	call 184 <try_realloc_chunk>
    ff0c:	3b f0 06 a0 	load_u8 s1, 444(s27)
    ff10:	21 08 00 01 	and s1, s1, 2
    ff14:	e1 00 00 f2 	bz s1, 28 <realloc+0xd4>
    ff18:	3b 00 07 05 	add_i s1, s27, 448
    ff1c:	40 00 00 0f 	move s2, 0
    ff20:	61 00 00 aa 	load_sync s3, (s1)
    ff24:	60 00 f1 c0 	move s3, s2
    ff28:	61 00 00 8a 	store_sync s3, (s1)  
    ff2c:	a3 ff ff f3 	bz s3, -12 <realloc+0xc4>
    ff30:	60 00 00 f2 	bz s0, 12 <realloc+0xe0>
    ff34:	40 23 00 05 	add_i s26, s0, 8
    ff38:	1a 00 00 f6 	b 104 <realloc+0x144>
    ff3c:	00 80 fc c0 	move s0, s25
    ff40:	43 f5 ff f9 	call -10996 <malloc>
    ff44:	60 03 f0 c0 	move s27, s0
    ff48:	db 02 00 f2 	bz s27, 88 <realloc+0x144>
    ff4c:	18 f0 ff a9 	load_32 s0, -4(s24)
    ff50:	20 0c 00 01 	and s1, s0, 3
    ff54:	00 e0 ff 01 	and s0, s0, -8
    ff58:	21 00 00 10 	cmpeq_i s1, s1, 0
    ff5c:	c1 00 00 f4 	bnz s1, 24 <realloc+0x118>
    ff60:	20 10 00 0f 	move s1, 4
    ff64:	40 80 60 c0 	sub_i s2, s0, s1
    ff68:	02 80 8c c1 	cmplt_u s0, s2, s25
    ff6c:	e0 00 00 f4 	bnz s0, 28 <realloc+0x12c>
    ff70:	05 00 00 f6 	b 20 <realloc+0x128>
    ff74:	20 20 00 0f 	move s1, 8
    ff78:	40 80 60 c0 	sub_i s2, s0, s1
    ff7c:	02 80 8c c1 	cmplt_u s0, s2, s25
    ff80:	40 00 00 f4 	bnz s0, 8 <realloc+0x12c>
    ff84:	40 80 fc c0 	move s2, s25
    ff88:	00 80 fd c0 	move s0, s27
    ff8c:	20 00 fc c0 	move s1, s24
    ff90:	6b 0a 00 f8 	call 10668 <memcpy>
    ff94:	00 00 fc c0 	move s0, s24
    ff98:	b7 fc ff f9 	call -3364 <free>
    ff9c:	40 83 fd c0 	move s26, s27
    ffa0:	00 00 fd c0 	move s0, s26
    ffa4:	fe b3 00 a8 	load_32 ra, 44(sp)
    ffa8:	7e c3 00 a8 	load_32 s27, 48(sp)
    ffac:	5e d3 00 a8 	load_32 s26, 52(sp)
    ffb0:	3e e3 00 a8 	load_32 s25, 56(sp)
    ffb4:	1e f3 00 a8 	load_32 s24, 60(sp)
    ffb8:	de 03 01 05 	add_i sp, sp, 64
    ffbc:	1f 00 00 f0 	ret

000000000000ffc0 try_realloc_chunk:
    ffc0:	de 03 ff 05 	add_i sp, sp, -64
    ffc4:	1e f3 00 88 	store_32 s24, 60(sp)
    ffc8:	fe e3 00 88 	store_32 ra, 56(sp)
    ffcc:	00 03 f0 c0 	move s24, s0
    ffd0:	4c 00 00 4f 	movehi s2, 12
    ffd4:	78 10 00 a8 	load_32 s3, 4(s24)
    ffd8:	42 b0 04 00 	or s2, s2, 300
    ffdc:	03 0c 00 01 	and s0, s3, 3
    ffe0:	c2 40 00 a8 	load_32 s6, 16(s2)
    ffe4:	80 04 00 10 	cmpeq_i s4, s0, 1
    ffe8:	84 24 00 f4 	bnz s4, 1168 <try_realloc_chunk+0x4b8>
    ffec:	86 00 6c c1 	cmpgt_u s4, s6, s24
    fff0:	44 24 00 f4 	bnz s4, 1160 <try_realloc_chunk+0x4b8>
    fff4:	83 e0 ff 01 	and s4, s3, -8
    fff8:	b8 00 52 c0 	add_i s5, s24, s4
    fffc:	e5 00 9c c1 	cmple_u s7, s5, s24
   10000:	c7 23 00 f4 	bnz s7, 1144 <try_realloc_chunk+0x4b8>
   10004:	e5 10 00 a8 	load_32 s7, 4(s5)
   10008:	07 05 00 01 	and s8, s7, 1
   1000c:	68 23 00 f2 	bz s8, 1132 <try_realloc_chunk+0x4b8>
   10010:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x58>
   10014:	32 00 00 f6 	b 200 <try_realloc_chunk+0x11c>
   10018:	04 80 80 c1 	cmplt_u s0, s4, s1
   1001c:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x64>
   10020:	38 00 00 f6 	b 224 <try_realloc_chunk+0x140>
   10024:	02 60 00 a8 	load_32 s0, 24(s2)
   10028:	00 80 12 c1 	cmpne_i s0, s0, s5
   1002c:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x74>
   10030:	54 00 00 f6 	b 336 <try_realloc_chunk+0x1c0>
   10034:	02 50 00 a8 	load_32 s0, 20(s2)
   10038:	00 80 12 c1 	cmpne_i s0, s0, s5
   1003c:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x84>
   10040:	5f 00 00 f6 	b 380 <try_realloc_chunk+0x1fc>
   10044:	07 09 00 01 	and s8, s7, 2
   10048:	00 00 00 0f 	move s0, 0
   1004c:	28 09 00 f4 	bnz s8, 292 <try_realloc_chunk+0x1b0>
   10050:	07 e1 ff 01 	and s8, s7, -8
   10054:	88 00 52 c0 	add_i s4, s8, s4
   10058:	04 81 80 c1 	cmplt_u s8, s4, s1
   1005c:	a8 08 00 f4 	bnz s8, 276 <try_realloc_chunk+0x1b0>
   10060:	07 fc 03 16 	cmpgt_u s0, s7, 255
   10064:	40 10 00 f4 	bnz s0, 520 <try_realloc_chunk+0x2ac>
   10068:	07 0d 00 0a 	shr s8, s7, 3
   1006c:	05 20 00 a8 	load_32 s0, 8(s5)
   10070:	e8 0c 00 0b 	shl s7, s8, 3
   10074:	e2 80 53 c0 	add_i s7, s2, s7
   10078:	27 a1 00 05 	add_i s9, s7, 40
   1007c:	e5 30 00 a8 	load_32 s7, 12(s5)
   10080:	40 81 04 c1 	cmpeq_i s10, s0, s9
   10084:	ca 00 00 f4 	bnz s10, 24 <try_realloc_chunk+0xdc>
   10088:	46 01 60 c1 	cmpgt_u s10, s6, s0
   1008c:	6a 1f 00 f4 	bnz s10, 1004 <try_realloc_chunk+0x4b8>
   10090:	40 31 00 a8 	load_32 s10, 12(s0)
   10094:	4a 81 12 c1 	cmpne_i s10, s10, s5
   10098:	0a 1f 00 f4 	bnz s10, 992 <try_realloc_chunk+0x4b8>
   1009c:	47 01 10 c1 	cmpne_i s10, s7, s0
   100a0:	4a 00 00 f4 	bnz s10, 8 <try_realloc_chunk+0xe8>
   100a4:	83 00 00 f6 	b 524 <try_realloc_chunk+0x2f0>
   100a8:	47 80 04 c1 	cmpeq_i s2, s7, s9
   100ac:	c2 00 00 f4 	bnz s2, 24 <try_realloc_chunk+0x104>
   100b0:	46 80 63 c1 	cmpgt_u s2, s6, s7
   100b4:	22 1e 00 f4 	bnz s2, 964 <try_realloc_chunk+0x4b8>
   100b8:	47 20 00 a8 	load_32 s2, 8(s7)
   100bc:	42 80 12 c1 	cmpne_i s2, s2, s5
   100c0:	c2 1d 00 f4 	bnz s2, 952 <try_realloc_chunk+0x4b8>
   100c4:	e0 30 00 88 	store_32 s7, 12(s0)
   100c8:	07 20 00 88 	store_32 s0, 8(s7)
   100cc:	44 80 60 c0 	sub_i s2, s4, s1
   100d0:	02 3c 00 16 	cmpgt_u s0, s2, 15
   100d4:	40 1b 00 f4 	bnz s0, 872 <try_realloc_chunk+0x47c>
   100d8:	cc 00 00 f6 	b 816 <try_realloc_chunk+0x448>
   100dc:	01 00 04 18 	cmplt_u s0, s1, 256
   100e0:	40 00 00 0f 	move s2, 0
   100e4:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x12c>
   100e8:	16 00 00 f6 	b 88 <try_realloc_chunk+0x180>
   100ec:	00 00 f1 c0 	move s0, s2
   100f0:	fe e3 00 a8 	load_32 ra, 56(sp)
   100f4:	1e f3 00 a8 	load_32 s24, 60(sp)
   100f8:	de 03 01 05 	add_i sp, sp, 64
   100fc:	1f 00 00 f0 	ret
   10100:	44 80 60 c0 	sub_i s2, s4, s1
   10104:	02 40 00 18 	cmplt_u s0, s2, 16
   10108:	00 19 00 f4 	bnz s0, 800 <try_realloc_chunk+0x468>
   1010c:	03 04 00 01 	and s0, s3, 1
   10110:	60 80 00 c0 	or s3, s0, s1
   10114:	18 80 50 c0 	add_i s0, s24, s1
   10118:	23 08 00 00 	or s1, s3, 2
   1011c:	38 10 00 88 	store_32 s1, 4(s24)
   10120:	22 0c 00 00 	or s1, s2, 3
   10124:	20 10 00 88 	store_32 s1, 4(s0)
   10128:	25 10 00 a8 	load_32 s1, 4(s5)
   1012c:	21 04 00 00 	or s1, s1, 1
   10130:	25 10 00 88 	store_32 s1, 4(s5)
   10134:	20 00 f1 c0 	move s1, s2
   10138:	07 05 00 f8 	call 5148 <dispose_chunk>
   1013c:	bb 00 00 f6 	b 748 <try_realloc_chunk+0x468>
   10140:	01 10 00 05 	add_i s0, s1, 4
   10144:	04 00 80 c1 	cmplt_u s0, s4, s0
   10148:	20 01 00 f4 	bnz s0, 36 <try_realloc_chunk+0x1ac>
   1014c:	0c 00 00 4f 	movehi s0, 12
   10150:	24 80 60 c0 	sub_i s1, s4, s1
   10154:	00 50 04 00 	or s0, s0, 276
   10158:	00 20 00 a8 	load_32 s0, 8(s0)
   1015c:	00 04 00 0b 	shl s0, s0, 1
   10160:	21 00 90 c1 	cmple_u s1, s1, s0
   10164:	00 00 fc c0 	move s0, s24
   10168:	41 00 00 f4 	bnz s1, 8 <try_realloc_chunk+0x1b0>
   1016c:	00 00 f1 c0 	move s0, s2
   10170:	fe e3 00 a8 	load_32 ra, 56(sp)
   10174:	1e f3 00 a8 	load_32 s24, 60(sp)
   10178:	de 03 01 05 	add_i sp, sp, 64
   1017c:	1f 00 00 f0 	ret
   10180:	02 30 00 a8 	load_32 s0, 12(s2)
   10184:	00 00 52 c0 	add_i s0, s0, s4
   10188:	80 80 90 c1 	cmple_u s4, s0, s1
   1018c:	c4 02 00 f4 	bnz s4, 88 <try_realloc_chunk+0x224>
   10190:	63 04 00 01 	and s3, s3, 1
   10194:	00 80 60 c0 	sub_i s0, s0, s1
   10198:	63 80 00 c0 	or s3, s3, s1
   1019c:	38 80 50 c0 	add_i s1, s24, s1
   101a0:	63 08 00 00 	or s3, s3, 2
   101a4:	78 10 00 88 	store_32 s3, 4(s24)
   101a8:	60 04 00 00 	or s3, s0, 1
   101ac:	61 10 00 88 	store_32 s3, 4(s1)
   101b0:	22 60 00 88 	store_32 s1, 24(s2)
   101b4:	02 30 00 88 	store_32 s0, 12(s2)
   101b8:	9c 00 00 f6 	b 624 <try_realloc_chunk+0x468>
   101bc:	02 20 00 a8 	load_32 s0, 8(s2)
   101c0:	80 00 52 c0 	add_i s4, s0, s4
   101c4:	04 80 80 c1 	cmplt_u s0, s4, s1
   101c8:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x210>
   101cc:	0b 00 00 f6 	b 44 <try_realloc_chunk+0x238>
   101d0:	00 00 00 0f 	move s0, 0
   101d4:	fe e3 00 a8 	load_32 ra, 56(sp)
   101d8:	1e f3 00 a8 	load_32 s24, 60(sp)
   101dc:	de 03 01 05 	add_i sp, sp, 64
   101e0:	1f 00 00 f0 	ret
   101e4:	00 00 00 0f 	move s0, 0
   101e8:	fe e3 00 a8 	load_32 ra, 56(sp)
   101ec:	1e f3 00 a8 	load_32 s24, 60(sp)
   101f0:	de 03 01 05 	add_i sp, sp, 64
   101f4:	1f 00 00 f0 	ret
   101f8:	04 80 60 c0 	sub_i s0, s4, s1
   101fc:	a0 40 00 18 	cmplt_u s5, s0, 16
   10200:	c5 01 00 f4 	bnz s5, 56 <try_realloc_chunk+0x278>
   10204:	63 04 00 01 	and s3, s3, 1
   10208:	98 00 52 c0 	add_i s4, s24, s4
   1020c:	63 80 00 c0 	or s3, s3, s1
   10210:	38 80 50 c0 	add_i s1, s24, s1
   10214:	63 08 00 00 	or s3, s3, 2
   10218:	78 10 00 88 	store_32 s3, 4(s24)
   1021c:	60 04 00 00 	or s3, s0, 1
   10220:	61 10 00 88 	store_32 s3, 4(s1)
   10224:	04 00 00 88 	store_32 s0, (s4)
   10228:	64 10 00 a8 	load_32 s3, 4(s4)
   1022c:	63 f8 ff 01 	and s3, s3, -2
   10230:	64 10 00 88 	store_32 s3, 4(s4)
   10234:	0b 00 00 f6 	b 44 <try_realloc_chunk+0x2a0>
   10238:	03 04 00 01 	and s0, s3, 1
   1023c:	38 00 52 c0 	add_i s1, s24, s4
   10240:	00 00 02 c0 	or s0, s0, s4
   10244:	00 08 00 00 	or s0, s0, 2
   10248:	18 10 00 88 	store_32 s0, 4(s24)
   1024c:	01 10 00 a8 	load_32 s0, 4(s1)
   10250:	60 04 00 00 	or s3, s0, 1
   10254:	61 10 00 88 	store_32 s3, 4(s1)
   10258:	00 00 00 0f 	move s0, 0
   1025c:	20 00 f0 c0 	move s1, s0
   10260:	02 20 00 88 	store_32 s0, 8(s2)
   10264:	22 50 00 88 	store_32 s1, 20(s2)
   10268:	70 00 00 f6 	b 448 <try_realloc_chunk+0x468>
   1026c:	05 60 00 a8 	load_32 s0, 24(s5)
   10270:	e5 30 00 a8 	load_32 s7, 12(s5)
   10274:	07 81 02 c1 	cmpeq_i s8, s7, s5
   10278:	08 03 00 f4 	bnz s8, 96 <try_realloc_chunk+0x318>
   1027c:	05 21 00 a8 	load_32 s8, 8(s5)
   10280:	c6 00 64 c1 	cmpgt_u s6, s6, s8
   10284:	a6 0f 00 f4 	bnz s6, 500 <try_realloc_chunk+0x4b8>
   10288:	c8 30 00 a8 	load_32 s6, 12(s8)
   1028c:	c6 80 12 c1 	cmpne_i s6, s6, s5
   10290:	46 0f 00 f4 	bnz s6, 488 <try_realloc_chunk+0x4b8>
   10294:	c7 20 00 a8 	load_32 s6, 8(s7)
   10298:	c6 80 12 c1 	cmpne_i s6, s6, s5
   1029c:	e6 0e 00 f4 	bnz s6, 476 <try_realloc_chunk+0x4b8>
   102a0:	e8 30 00 88 	store_32 s7, 12(s8)
   102a4:	07 21 00 88 	store_32 s8, 8(s7)
   102a8:	a0 0a 00 f2 	bz s0, 340 <try_realloc_chunk+0x43c>
   102ac:	20 00 00 f6 	b 128 <try_realloc_chunk+0x36c>
   102b0:	00 04 00 0f 	move s0, 1
   102b4:	a2 00 00 a8 	load_32 s5, (s2)
   102b8:	00 00 b4 c0 	shl s0, s0, s8
   102bc:	00 fc ff 03 	xor s0, s0, -1
   102c0:	05 00 10 c0 	and s0, s5, s0
   102c4:	02 00 00 88 	store_32 s0, (s2)
   102c8:	44 80 60 c0 	sub_i s2, s4, s1
   102cc:	02 3c 00 16 	cmpgt_u s0, s2, 15
   102d0:	60 0b 00 f4 	bnz s0, 364 <try_realloc_chunk+0x47c>
   102d4:	4d 00 00 f6 	b 308 <try_realloc_chunk+0x448>
   102d8:	25 51 00 a8 	load_32 s9, 20(s5)
   102dc:	49 00 00 f4 	bnz s9, 8 <try_realloc_chunk+0x324>
   102e0:	03 00 00 f6 	b 12 <try_realloc_chunk+0x32c>
   102e4:	05 51 00 05 	add_i s8, s5, 20
   102e8:	04 00 00 f6 	b 16 <try_realloc_chunk+0x338>
   102ec:	05 41 00 05 	add_i s8, s5, 16
   102f0:	28 01 00 a8 	load_32 s9, (s8)
   102f4:	c9 0b 00 f2 	bz s9, 376 <try_realloc_chunk+0x4ac>
   102f8:	e0 80 f4 c0 	move s7, s9
   102fc:	27 51 00 a8 	load_32 s9, 20(s7)
   10300:	40 01 f4 c0 	move s10, s8
   10304:	07 51 00 05 	add_i s8, s7, 20
   10308:	89 ff ff f5 	bnz s9, -16 <try_realloc_chunk+0x338>
   1030c:	27 41 00 a8 	load_32 s9, 16(s7)
   10310:	07 41 00 05 	add_i s8, s7, 16
   10314:	29 ff ff f5 	bnz s9, -28 <try_realloc_chunk+0x338>
   10318:	c6 00 65 c1 	cmpgt_u s6, s6, s10
   1031c:	e6 0a 00 f4 	bnz s6, 348 <try_realloc_chunk+0x4b8>
   10320:	c0 00 00 0f 	move s6, 0
   10324:	ca 00 00 88 	store_32 s6, (s10)
   10328:	a0 06 00 f2 	bz s0, 212 <try_realloc_chunk+0x43c>
   1032c:	c5 70 00 a8 	load_32 s6, 28(s5)
   10330:	06 09 00 0b 	shl s8, s6, 2
   10334:	02 01 54 c0 	add_i s8, s2, s8
   10338:	28 c1 04 a8 	load_32 s9, 304(s8)
   1033c:	29 81 12 c1 	cmpne_i s9, s9, s5
   10340:	49 00 00 f4 	bnz s9, 8 <try_realloc_chunk+0x388>
   10344:	0c 00 00 f6 	b 48 <try_realloc_chunk+0x3b4>
   10348:	c2 40 00 a8 	load_32 s6, 16(s2)
   1034c:	c6 00 60 c1 	cmpgt_u s6, s6, s0
   10350:	46 09 00 f4 	bnz s6, 296 <try_realloc_chunk+0x4b8>
   10354:	c0 40 00 a8 	load_32 s6, 16(s0)
   10358:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   1035c:	66 02 00 f4 	bnz s6, 76 <try_realloc_chunk+0x3e8>
   10360:	c0 50 00 0f 	move s6, 20
   10364:	c0 00 53 c0 	add_i s6, s0, s6
   10368:	e6 00 00 88 	store_32 s7, (s6)
   1036c:	87 04 00 f2 	bz s7, 144 <try_realloc_chunk+0x43c>
   10370:	12 00 00 f6 	b 72 <try_realloc_chunk+0x3f8>
   10374:	08 c1 04 05 	add_i s8, s8, 304
   10378:	e8 00 00 88 	store_32 s7, (s8)
   1037c:	e7 01 00 f4 	bnz s7, 60 <try_realloc_chunk+0x3f8>
   10380:	00 04 00 0f 	move s0, 1
   10384:	a2 10 00 a8 	load_32 s5, 4(s2)
   10388:	00 00 b3 c0 	shl s0, s0, s6
   1038c:	00 fc ff 03 	xor s0, s0, -1
   10390:	05 00 10 c0 	and s0, s5, s0
   10394:	02 10 00 88 	store_32 s0, 4(s2)
   10398:	44 80 60 c0 	sub_i s2, s4, s1
   1039c:	02 3c 00 16 	cmpgt_u s0, s2, 15
   103a0:	e0 04 00 f4 	bnz s0, 156 <try_realloc_chunk+0x47c>
   103a4:	19 00 00 f6 	b 100 <try_realloc_chunk+0x448>
   103a8:	c0 40 00 0f 	move s6, 16
   103ac:	c0 00 53 c0 	add_i s6, s0, s6
   103b0:	e6 00 00 88 	store_32 s7, (s6)
   103b4:	47 02 00 f2 	bz s7, 72 <try_realloc_chunk+0x43c>
   103b8:	c2 40 00 a8 	load_32 s6, 16(s2)
   103bc:	06 81 63 c1 	cmpgt_u s8, s6, s7
   103c0:	c8 05 00 f4 	bnz s8, 184 <try_realloc_chunk+0x4b8>
   103c4:	07 60 00 88 	store_32 s0, 24(s7)
   103c8:	05 40 00 a8 	load_32 s0, 16(s5)
   103cc:	a0 00 00 f2 	bz s0, 20 <try_realloc_chunk+0x420>
   103d0:	c6 00 60 c1 	cmpgt_u s6, s6, s0
   103d4:	26 05 00 f4 	bnz s6, 164 <try_realloc_chunk+0x4b8>
   103d8:	07 40 00 88 	store_32 s0, 16(s7)
   103dc:	e0 60 00 88 	store_32 s7, 24(s0)
   103e0:	05 50 00 a8 	load_32 s0, 20(s5)
   103e4:	c0 00 00 f2 	bz s0, 24 <try_realloc_chunk+0x43c>
   103e8:	42 40 00 a8 	load_32 s2, 16(s2)
   103ec:	42 00 60 c1 	cmpgt_u s2, s2, s0
   103f0:	42 04 00 f4 	bnz s2, 136 <try_realloc_chunk+0x4b8>
   103f4:	07 50 00 88 	store_32 s0, 20(s7)
   103f8:	e0 60 00 88 	store_32 s7, 24(s0)
   103fc:	44 80 60 c0 	sub_i s2, s4, s1
   10400:	02 3c 00 16 	cmpgt_u s0, s2, 15
   10404:	c0 01 00 f4 	bnz s0, 56 <try_realloc_chunk+0x47c>
   10408:	03 04 00 01 	and s0, s3, 1
   1040c:	38 00 52 c0 	add_i s1, s24, s4
   10410:	00 00 02 c0 	or s0, s0, s4
   10414:	00 08 00 00 	or s0, s0, 2
   10418:	18 10 00 88 	store_32 s0, 4(s24)
   1041c:	01 10 00 a8 	load_32 s0, 4(s1)
   10420:	00 04 00 00 	or s0, s0, 1
   10424:	01 10 00 88 	store_32 s0, 4(s1)
   10428:	00 00 fc c0 	move s0, s24
   1042c:	fe e3 00 a8 	load_32 ra, 56(sp)
   10430:	1e f3 00 a8 	load_32 s24, 60(sp)
   10434:	de 03 01 05 	add_i sp, sp, 64
   10438:	1f 00 00 f0 	ret
   1043c:	03 04 00 01 	and s0, s3, 1
   10440:	60 80 00 c0 	or s3, s0, s1
   10444:	18 80 50 c0 	add_i s0, s24, s1
   10448:	23 08 00 00 	or s1, s3, 2
   1044c:	38 10 00 88 	store_32 s1, 4(s24)
   10450:	38 00 52 c0 	add_i s1, s24, s4
   10454:	62 0c 00 00 	or s3, s2, 3
   10458:	60 10 00 88 	store_32 s3, 4(s0)
   1045c:	61 10 00 a8 	load_32 s3, 4(s1)
   10460:	63 04 00 00 	or s3, s3, 1
   10464:	61 10 00 88 	store_32 s3, 4(s1)
   10468:	33 ff ff f7 	b -820 <try_realloc_chunk+0x174>
   1046c:	e0 00 00 0f 	move s7, 0
   10470:	60 fc ff f3 	bz s0, -116 <try_realloc_chunk+0x43c>
   10474:	ae ff ff f7 	b -328 <try_realloc_chunk+0x36c>
   10478:	3b 06 00 f8 	call 6380 <abort>

000000000001047c realloc_in_place:
   1047c:	de 03 ff 05 	add_i sp, sp, -64
   10480:	1e f3 00 88 	store_32 s24, 60(sp)
   10484:	3e e3 00 88 	store_32 s25, 56(sp)
   10488:	5e d3 00 88 	store_32 s26, 52(sp)
   1048c:	fe c3 00 88 	store_32 ra, 48(sp)
   10490:	00 03 f0 c0 	move s24, s0
   10494:	00 00 00 0f 	move s0, 0
   10498:	98 05 00 f2 	bz s24, 176 <realloc_in_place+0xcc>
   1049c:	41 fc fe 16 	cmpgt_u s2, s1, -65
   104a0:	42 05 00 f4 	bnz s2, 168 <realloc_in_place+0xcc>
   104a4:	01 2c 00 18 	cmplt_u s0, s1, 11
   104a8:	80 00 00 f4 	bnz s0, 16 <realloc_in_place+0x3c>
   104ac:	01 2c 00 05 	add_i s0, s1, 11
   104b0:	20 e0 ff 01 	and s1, s0, -8
   104b4:	02 00 00 f6 	b 8 <realloc_in_place+0x40>
   104b8:	20 40 00 0f 	move s1, 16
   104bc:	0c 00 00 4f 	movehi s0, 12
   104c0:	38 e3 ff 05 	add_i s25, s24, -8
   104c4:	40 b3 04 00 	or s26, s0, 300
   104c8:	1a f0 06 a0 	load_u8 s0, 444(s26)
   104cc:	00 08 00 01 	and s0, s0, 2
   104d0:	e0 01 00 f2 	bz s0, 60 <realloc_in_place+0x90>
   104d4:	1a 00 07 05 	add_i s0, s26, 448
   104d8:	40 04 00 0f 	move s2, 1
   104dc:	60 00 00 aa 	load_sync s3, (s0)
   104e0:	80 00 f1 c0 	move s4, s2
   104e4:	80 00 00 8a 	store_sync s4, (s0)  
   104e8:	a4 ff ff f3 	bz s4, -12 <realloc_in_place+0x60>
   104ec:	03 01 00 f2 	bz s3, 32 <realloc_in_place+0x90>
   104f0:	7a 00 07 a8 	load_32 s3, 448(s26)
   104f4:	e3 ff ff f5 	bnz s3, -4 <realloc_in_place+0x74>
   104f8:	60 00 00 aa 	load_sync s3, (s0)
   104fc:	80 00 f1 c0 	move s4, s2
   10500:	80 00 00 8a 	store_sync s4, (s0)  
   10504:	a4 ff ff f3 	bz s4, -12 <realloc_in_place+0x7c>
   10508:	43 ff ff f5 	bnz s3, -24 <realloc_in_place+0x74>
   1050c:	00 80 fc c0 	move s0, s25
   10510:	ac fe ff f9 	call -1360 <try_realloc_chunk>
   10514:	3a f0 06 a0 	load_u8 s1, 444(s26)
   10518:	21 08 00 01 	and s1, s1, 2
   1051c:	e1 00 00 f2 	bz s1, 28 <realloc_in_place+0xbc>
   10520:	3a 00 07 05 	add_i s1, s26, 448
   10524:	40 00 00 0f 	move s2, 0
   10528:	61 00 00 aa 	load_sync s3, (s1)
   1052c:	60 00 f1 c0 	move s3, s2
   10530:	61 00 00 8a 	store_sync s3, (s1)  
   10534:	a3 ff ff f3 	bz s3, -12 <realloc_in_place+0xac>
   10538:	00 80 0c c1 	cmpeq_i s0, s0, s25
   1053c:	40 00 00 f4 	bnz s0, 8 <realloc_in_place+0xc8>
   10540:	00 03 00 0f 	move s24, 0
   10544:	00 00 fc c0 	move s0, s24
   10548:	fe c3 00 a8 	load_32 ra, 48(sp)
   1054c:	5e d3 00 a8 	load_32 s26, 52(sp)
   10550:	3e e3 00 a8 	load_32 s25, 56(sp)
   10554:	1e f3 00 a8 	load_32 s24, 60(sp)
   10558:	de 03 01 05 	add_i sp, sp, 64
   1055c:	1f 00 00 f0 	ret

0000000000010560 memalign:
   10560:	de 03 ff 05 	add_i sp, sp, -64
   10564:	fe f3 00 88 	store_32 ra, 60(sp)
   10568:	40 20 00 16 	cmpgt_u s2, s0, 8
   1056c:	c2 00 00 f4 	bnz s2, 24 <memalign+0x24>
   10570:	00 80 f0 c0 	move s0, s1
   10574:	b6 f3 ff f9 	call -12584 <malloc>
   10578:	fe f3 00 a8 	load_32 ra, 60(sp)
   1057c:	de 03 01 05 	add_i sp, sp, 64
   10580:	1f 00 00 f0 	ret
   10584:	04 00 00 f8 	call 16 <internal_memalign>
   10588:	fe f3 00 a8 	load_32 ra, 60(sp)
   1058c:	de 03 01 05 	add_i sp, sp, 64
   10590:	1f 00 00 f0 	ret

0000000000010594 internal_memalign:
   10594:	de 03 ff 05 	add_i sp, sp, -64
   10598:	1e f3 00 88 	store_32 s24, 60(sp)
   1059c:	3e e3 00 88 	store_32 s25, 56(sp)
   105a0:	5e d3 00 88 	store_32 s26, 52(sp)
   105a4:	7e c3 00 88 	store_32 s27, 48(sp)
   105a8:	fe b3 00 88 	store_32 ra, 44(sp)
   105ac:	40 40 00 16 	cmpgt_u s2, s0, 16
   105b0:	42 00 00 f4 	bnz s2, 8 <internal_memalign+0x24>
   105b4:	00 40 00 0f 	move s0, 16
   105b8:	40 fc ff 05 	add_i s2, s0, -1
   105bc:	42 00 10 c0 	and s2, s2, s0
   105c0:	e2 00 00 f2 	bz s2, 28 <internal_memalign+0x48>
   105c4:	40 40 00 0f 	move s2, 16
   105c8:	60 03 f1 c0 	move s27, s2
   105cc:	7b 00 80 c1 	cmplt_u s3, s27, s0
   105d0:	5b 04 00 0b 	shl s2, s27, 1
   105d4:	a3 ff ff f5 	bnz s3, -12 <internal_memalign+0x34>
   105d8:	02 00 00 f6 	b 8 <internal_memalign+0x4c>
   105dc:	60 03 f0 c0 	move s27, s0
   105e0:	00 00 ff 0f 	move s0, -64
   105e4:	00 03 00 0f 	move s24, 0
   105e8:	00 80 6d c0 	sub_i s0, s0, s27
   105ec:	00 80 90 c1 	cmple_u s0, s0, s1
   105f0:	20 0e 00 f4 	bnz s0, 452 <internal_memalign+0x220>
   105f4:	01 2c 00 18 	cmplt_u s0, s1, 11
   105f8:	00 01 00 f4 	bnz s0, 32 <internal_memalign+0x84>
   105fc:	01 2c 00 05 	add_i s0, s1, 11
   10600:	20 e3 ff 01 	and s25, s0, -8
   10604:	19 80 5d c0 	add_i s0, s25, s27
   10608:	00 30 00 05 	add_i s0, s0, 12
   1060c:	90 f3 ff f9 	call -12736 <malloc>
   10610:	20 0d 00 f2 	bz s0, 420 <internal_memalign+0x220>
   10614:	06 00 00 f6 	b 24 <internal_memalign+0x98>
   10618:	20 43 00 0f 	move s25, 16
   1061c:	19 80 5d c0 	add_i s0, s25, s27
   10620:	00 30 00 05 	add_i s0, s0, 12
   10624:	8a f3 ff f9 	call -12760 <malloc>
   10628:	60 0c 00 f2 	bz s0, 396 <internal_memalign+0x220>
   1062c:	2c 00 00 4f 	movehi s1, 12
   10630:	3e a3 00 88 	store_32 s25, 40(sp)
   10634:	21 b3 04 00 	or s25, s1, 300
   10638:	39 f0 06 a0 	load_u8 s1, 444(s25)
   1063c:	21 08 00 01 	and s1, s1, 2
   10640:	e1 01 00 f2 	bz s1, 60 <internal_memalign+0xe8>
   10644:	39 00 07 05 	add_i s1, s25, 448
   10648:	40 04 00 0f 	move s2, 1
   1064c:	61 00 00 aa 	load_sync s3, (s1)
   10650:	80 00 f1 c0 	move s4, s2
   10654:	81 00 00 8a 	store_sync s4, (s1)  
   10658:	a4 ff ff f3 	bz s4, -12 <internal_memalign+0xb8>
   1065c:	03 01 00 f2 	bz s3, 32 <internal_memalign+0xe8>
   10660:	79 00 07 a8 	load_32 s3, 448(s25)
   10664:	e3 ff ff f5 	bnz s3, -4 <internal_memalign+0xcc>
   10668:	61 00 00 aa 	load_sync s3, (s1)
   1066c:	80 00 f1 c0 	move s4, s2
   10670:	81 00 00 8a 	store_sync s4, (s1)  
   10674:	a4 ff ff f3 	bz s4, -12 <internal_memalign+0xd4>
   10678:	43 ff ff f5 	bnz s3, -24 <internal_memalign+0xcc>
   1067c:	3b fc ff 05 	add_i s1, s27, -1
   10680:	40 e3 ff 05 	add_i s26, s0, -8
   10684:	21 00 10 c0 	and s1, s1, s0
   10688:	61 05 00 f2 	bz s1, 172 <internal_memalign+0x1a0>
   1068c:	20 80 5d c0 	add_i s1, s0, s27
   10690:	40 00 00 0f 	move s2, 0
   10694:	21 fc ff 05 	add_i s1, s1, -1
   10698:	42 80 6d c0 	sub_i s2, s2, s27
   1069c:	21 00 11 c0 	and s1, s1, s2
   106a0:	01 e3 ff 05 	add_i s24, s1, -8
   106a4:	38 00 6d c0 	sub_i s1, s24, s26
   106a8:	21 3c 00 16 	cmpgt_u s1, s1, 15
   106ac:	41 00 00 f4 	bnz s1, 8 <internal_memalign+0x120>
   106b0:	18 83 5d c0 	add_i s24, s24, s27
   106b4:	40 f0 ff a9 	load_32 s2, -4(s0)
   106b8:	38 00 6d c0 	sub_i s1, s24, s26
   106bc:	62 e0 ff 01 	and s3, s2, -8
   106c0:	82 0c 00 01 	and s4, s2, 3
   106c4:	43 80 60 c0 	sub_i s2, s3, s1
   106c8:	44 00 00 f4 	bnz s4, 8 <internal_memalign+0x13c>
   106cc:	15 00 00 f6 	b 84 <internal_memalign+0x18c>
   106d0:	78 10 00 a8 	load_32 s3, 4(s24)
   106d4:	63 04 00 01 	and s3, s3, 1
   106d8:	62 80 01 c0 	or s3, s2, s3
   106dc:	58 00 51 c0 	add_i s2, s24, s2
   106e0:	63 08 00 00 	or s3, s3, 2
   106e4:	78 10 00 88 	store_32 s3, 4(s24)
   106e8:	62 10 00 a8 	load_32 s3, 4(s2)
   106ec:	63 04 00 00 	or s3, s3, 1
   106f0:	62 10 00 88 	store_32 s3, 4(s2)
   106f4:	40 f0 ff a9 	load_32 s2, -4(s0)
   106f8:	42 04 00 01 	and s2, s2, 1
   106fc:	41 00 01 c0 	or s2, s1, s2
   10700:	42 08 00 00 	or s2, s2, 2
   10704:	40 f0 ff 89 	store_32 s2, -4(s0)
   10708:	18 10 00 a8 	load_32 s0, 4(s24)
   1070c:	00 04 00 00 	or s0, s0, 1
   10710:	18 10 00 88 	store_32 s0, 4(s24)
   10714:	00 00 fd c0 	move s0, s26
   10718:	8f 03 00 f8 	call 3644 <dispose_chunk>
   1071c:	05 00 00 f6 	b 20 <internal_memalign+0x19c>
   10720:	1a 00 00 a8 	load_32 s0, (s26)
   10724:	00 80 50 c0 	add_i s0, s0, s1
   10728:	18 00 00 88 	store_32 s0, (s24)
   1072c:	58 10 00 88 	store_32 s2, 4(s24)
   10730:	40 03 fc c0 	move s26, s24
   10734:	1a 10 00 a8 	load_32 s0, 4(s26)
   10738:	20 0c 00 01 	and s1, s0, 3
   1073c:	81 02 00 f2 	bz s1, 80 <internal_memalign+0x1f8>
   10740:	3e a0 00 a8 	load_32 s1, 40(sp)
   10744:	40 e0 ff 01 	and s2, s0, -8
   10748:	21 40 00 05 	add_i s1, s1, 16
   1074c:	22 80 90 c1 	cmple_u s1, s2, s1
   10750:	e1 01 00 f4 	bnz s1, 60 <internal_memalign+0x1f8>
   10754:	9e a0 00 a8 	load_32 s4, 40(sp)
   10758:	00 04 00 01 	and s0, s0, 1
   1075c:	64 00 00 c0 	or s3, s4, s0
   10760:	22 00 62 c0 	sub_i s1, s2, s4
   10764:	1a 00 52 c0 	add_i s0, s26, s4
   10768:	5a 00 51 c0 	add_i s2, s26, s2
   1076c:	63 08 00 00 	or s3, s3, 2
   10770:	7a 10 00 88 	store_32 s3, 4(s26)
   10774:	61 0c 00 00 	or s3, s1, 3
   10778:	60 10 00 88 	store_32 s3, 4(s0)
   1077c:	62 10 00 a8 	load_32 s3, 4(s2)
   10780:	63 04 00 00 	or s3, s3, 1
   10784:	62 10 00 88 	store_32 s3, 4(s2)
   10788:	73 03 00 f8 	call 3532 <dispose_chunk>
   1078c:	19 f0 06 a0 	load_u8 s0, 444(s25)
   10790:	1a 23 00 05 	add_i s24, s26, 8
   10794:	00 08 00 01 	and s0, s0, 2
   10798:	e0 00 00 f2 	bz s0, 28 <internal_memalign+0x220>
   1079c:	19 00 07 05 	add_i s0, s25, 448
   107a0:	20 00 00 0f 	move s1, 0
   107a4:	40 00 00 aa 	load_sync s2, (s0)
   107a8:	40 80 f0 c0 	move s2, s1
   107ac:	40 00 00 8a 	store_sync s2, (s0)  
   107b0:	a2 ff ff f3 	bz s2, -12 <internal_memalign+0x210>
   107b4:	00 00 fc c0 	move s0, s24
   107b8:	fe b3 00 a8 	load_32 ra, 44(sp)
   107bc:	7e c3 00 a8 	load_32 s27, 48(sp)
   107c0:	5e d3 00 a8 	load_32 s26, 52(sp)
   107c4:	3e e3 00 a8 	load_32 s25, 56(sp)
   107c8:	1e f3 00 a8 	load_32 s24, 60(sp)
   107cc:	de 03 01 05 	add_i sp, sp, 64
   107d0:	1f 00 00 f0 	ret

00000000000107d4 posix_memalign:
   107d4:	de 03 ff 05 	add_i sp, sp, -64
   107d8:	1e f3 00 88 	store_32 s24, 60(sp)
   107dc:	fe e3 00 88 	store_32 ra, 56(sp)
   107e0:	61 20 00 11 	cmpne_i s3, s1, 8
   107e4:	00 03 f0 c0 	move s24, s0
   107e8:	43 01 00 f4 	bnz s3, 40 <posix_memalign+0x3c>
   107ec:	00 00 f1 c0 	move s0, s2
   107f0:	17 f3 ff f9 	call -13220 <malloc>
   107f4:	c0 04 00 f2 	bz s0, 152 <posix_memalign+0xb8>
   107f8:	18 00 00 88 	store_32 s0, (s24)
   107fc:	00 00 00 0f 	move s0, 0
   10800:	fe e3 00 a8 	load_32 ra, 56(sp)
   10804:	1e f3 00 a8 	load_32 s24, 60(sp)
   10808:	de 03 01 05 	add_i sp, sp, 64
   1080c:	1f 00 00 f0 	ret
   10810:	61 0c 00 01 	and s3, s1, 3
   10814:	00 58 00 0f 	move s0, 22
   10818:	e3 00 00 f4 	bnz s3, 28 <posix_memalign+0x60>
   1081c:	61 08 00 0a 	shr s3, s1, 2
   10820:	a3 00 00 f2 	bz s3, 20 <posix_memalign+0x60>
   10824:	83 fc ff 05 	add_i s4, s3, -1
   10828:	64 80 11 c0 	and s3, s4, s3
   1082c:	43 00 00 f4 	bnz s3, 8 <posix_memalign+0x60>
   10830:	05 00 00 f6 	b 20 <posix_memalign+0x70>
   10834:	fe e3 00 a8 	load_32 ra, 56(sp)
   10838:	1e f3 00 a8 	load_32 s24, 60(sp)
   1083c:	de 03 01 05 	add_i sp, sp, 64
   10840:	1f 00 00 f0 	ret
   10844:	00 00 ff 0f 	move s0, -64
   10848:	00 80 60 c0 	sub_i s0, s0, s1
   1084c:	00 00 81 c1 	cmplt_u s0, s0, s2
   10850:	40 00 00 f4 	bnz s0, 8 <posix_memalign+0x84>
   10854:	06 00 00 f6 	b 24 <posix_memalign+0x98>
   10858:	00 30 00 0f 	move s0, 12
   1085c:	fe e3 00 a8 	load_32 ra, 56(sp)
   10860:	1e f3 00 a8 	load_32 s24, 60(sp)
   10864:	de 03 01 05 	add_i sp, sp, 64
   10868:	1f 00 00 f0 	ret
   1086c:	01 40 00 16 	cmpgt_u s0, s1, 16
   10870:	40 00 00 f4 	bnz s0, 8 <posix_memalign+0xa4>
   10874:	20 40 00 0f 	move s1, 16
   10878:	00 80 f0 c0 	move s0, s1
   1087c:	20 00 f1 c0 	move s1, s2
   10880:	45 ff ff f9 	call -748 <internal_memalign>
   10884:	40 00 00 f2 	bz s0, 8 <posix_memalign+0xb8>
   10888:	dc ff ff f7 	b -144 <posix_memalign+0x24>
   1088c:	00 30 00 0f 	move s0, 12
   10890:	fe e3 00 a8 	load_32 ra, 56(sp)
   10894:	1e f3 00 a8 	load_32 s24, 60(sp)
   10898:	de 03 01 05 	add_i sp, sp, 64
   1089c:	1f 00 00 f0 	ret

00000000000108a0 valloc:
   108a0:	de 03 ff 05 	add_i sp, sp, -64
   108a4:	fe f3 00 88 	store_32 ra, 60(sp)
   108a8:	2c 00 00 4f 	movehi s1, 12
   108ac:	41 50 04 00 	or s2, s1, 276
   108b0:	62 00 00 a8 	load_32 s3, (s2)
   108b4:	20 00 f0 c0 	move s1, s0
   108b8:	63 05 00 f4 	bnz s3, 172 <valloc+0xc4>
   108bc:	0c 00 00 4f 	movehi s0, 12
   108c0:	60 04 00 0f 	move s3, 1
   108c4:	00 20 0c 00 	or s0, s0, 776
   108c8:	80 00 00 aa 	load_sync s4, (s0)
   108cc:	a0 80 f1 c0 	move s5, s3
   108d0:	a0 00 00 8a 	store_sync s5, (s0)  
   108d4:	a5 ff ff f3 	bz s5, -12 <valloc+0x28>
   108d8:	04 01 00 f2 	bz s4, 32 <valloc+0x58>
   108dc:	80 00 00 a8 	load_32 s4, (s0)
   108e0:	e4 ff ff f5 	bnz s4, -4 <valloc+0x3c>
   108e4:	80 00 00 aa 	load_sync s4, (s0)
   108e8:	a0 80 f1 c0 	move s5, s3
   108ec:	a0 00 00 8a 	store_sync s5, (s0)  
   108f0:	a5 ff ff f3 	bz s5, -12 <valloc+0x44>
   108f4:	44 ff ff f5 	bnz s4, -24 <valloc+0x3c>
   108f8:	62 00 00 a8 	load_32 s3, (s2)
   108fc:	a3 02 00 f4 	bnz s3, 84 <valloc+0xb0>
   10900:	60 00 40 0f 	move s3, 4096
   10904:	62 20 00 88 	store_32 s3, 8(s2)
   10908:	62 10 00 88 	store_32 s3, 4(s2)
   1090c:	60 fc ff 0f 	move s3, -1
   10910:	62 30 00 88 	store_32 s3, 12(s2)
   10914:	6c 00 00 4f 	movehi s3, 12
   10918:	80 20 00 4f 	movehi s4, 256
   1091c:	82 40 00 88 	store_32 s4, 16(s2)
   10920:	80 08 00 0f 	move s4, 2
   10924:	82 50 00 88 	store_32 s4, 20(s2)
   10928:	63 b0 04 00 	or s3, s3, 300
   1092c:	ca 54 55 4f 	movehi s6, 174762
   10930:	a0 00 00 0f 	move s5, 0
   10934:	83 f0 06 88 	store_32 s4, 444(s3)
   10938:	9e e0 00 05 	add_i s4, sp, 56
   1093c:	a3 00 07 88 	store_32 s5, 448(s3)
   10940:	66 60 55 00 	or s3, s6, 5464
   10944:	84 c0 ff 01 	and s4, s4, -16
   10948:	64 80 31 c0 	xor s3, s4, s3
   1094c:	62 00 00 88 	store_32 s3, (s2)
   10950:	60 00 00 0f 	move s3, 0
   10954:	80 00 00 aa 	load_sync s4, (s0)
   10958:	80 80 f1 c0 	move s4, s3
   1095c:	80 00 00 8a 	store_sync s4, (s0)  
   10960:	a4 ff ff f3 	bz s4, -12 <valloc+0xb4>
   10964:	02 10 00 a8 	load_32 s0, 4(s2)
   10968:	40 20 00 16 	cmpgt_u s2, s0, 8
   1096c:	c2 00 00 f4 	bnz s2, 24 <valloc+0xe4>
   10970:	00 80 f0 c0 	move s0, s1
   10974:	b6 f2 ff f9 	call -13608 <malloc>
   10978:	fe f3 00 a8 	load_32 ra, 60(sp)
   1097c:	de 03 01 05 	add_i sp, sp, 64
   10980:	1f 00 00 f0 	ret
   10984:	04 ff ff f9 	call -1008 <internal_memalign>
   10988:	fe f3 00 a8 	load_32 ra, 60(sp)
   1098c:	de 03 01 05 	add_i sp, sp, 64
   10990:	1f 00 00 f0 	ret

0000000000010994 pvalloc:
   10994:	de 03 ff 05 	add_i sp, sp, -64
   10998:	fe f3 00 88 	store_32 ra, 60(sp)
   1099c:	2c 00 00 4f 	movehi s1, 12
   109a0:	21 50 04 00 	or s1, s1, 276
   109a4:	41 00 00 a8 	load_32 s2, (s1)
   109a8:	62 05 00 f4 	bnz s2, 172 <pvalloc+0xc0>
   109ac:	4c 00 00 4f 	movehi s2, 12
   109b0:	60 04 00 0f 	move s3, 1
   109b4:	42 20 0c 00 	or s2, s2, 776
   109b8:	82 00 00 aa 	load_sync s4, (s2)
   109bc:	a0 80 f1 c0 	move s5, s3
   109c0:	a2 00 00 8a 	store_sync s5, (s2)  
   109c4:	a5 ff ff f3 	bz s5, -12 <pvalloc+0x24>
   109c8:	04 01 00 f2 	bz s4, 32 <pvalloc+0x54>
   109cc:	82 00 00 a8 	load_32 s4, (s2)
   109d0:	e4 ff ff f5 	bnz s4, -4 <pvalloc+0x38>
   109d4:	82 00 00 aa 	load_sync s4, (s2)
   109d8:	a0 80 f1 c0 	move s5, s3
   109dc:	a2 00 00 8a 	store_sync s5, (s2)  
   109e0:	a5 ff ff f3 	bz s5, -12 <pvalloc+0x40>
   109e4:	44 ff ff f5 	bnz s4, -24 <pvalloc+0x38>
   109e8:	61 00 00 a8 	load_32 s3, (s1)
   109ec:	a3 02 00 f4 	bnz s3, 84 <pvalloc+0xac>
   109f0:	60 00 40 0f 	move s3, 4096
   109f4:	61 20 00 88 	store_32 s3, 8(s1)
   109f8:	61 10 00 88 	store_32 s3, 4(s1)
   109fc:	60 fc ff 0f 	move s3, -1
   10a00:	61 30 00 88 	store_32 s3, 12(s1)
   10a04:	6c 00 00 4f 	movehi s3, 12
   10a08:	80 20 00 4f 	movehi s4, 256
   10a0c:	81 40 00 88 	store_32 s4, 16(s1)
   10a10:	80 08 00 0f 	move s4, 2
   10a14:	81 50 00 88 	store_32 s4, 20(s1)
   10a18:	63 b0 04 00 	or s3, s3, 300
   10a1c:	ca 54 55 4f 	movehi s6, 174762
   10a20:	a0 00 00 0f 	move s5, 0
   10a24:	83 f0 06 88 	store_32 s4, 444(s3)
   10a28:	9e e0 00 05 	add_i s4, sp, 56
   10a2c:	a3 00 07 88 	store_32 s5, 448(s3)
   10a30:	66 60 55 00 	or s3, s6, 5464
   10a34:	84 c0 ff 01 	and s4, s4, -16
   10a38:	64 80 31 c0 	xor s3, s4, s3
   10a3c:	61 00 00 88 	store_32 s3, (s1)
   10a40:	60 00 00 0f 	move s3, 0
   10a44:	82 00 00 aa 	load_sync s4, (s2)
   10a48:	80 80 f1 c0 	move s4, s3
   10a4c:	82 00 00 8a 	store_sync s4, (s2)  
   10a50:	a4 ff ff f3 	bz s4, -12 <pvalloc+0xb0>
   10a54:	21 10 00 a8 	load_32 s1, 4(s1)
   10a58:	40 00 00 0f 	move s2, 0
   10a5c:	00 80 50 c0 	add_i s0, s0, s1
   10a60:	42 80 60 c0 	sub_i s2, s2, s1
   10a64:	61 20 00 16 	cmpgt_u s3, s1, 8
   10a68:	00 fc ff 05 	add_i s0, s0, -1
   10a6c:	40 00 11 c0 	and s2, s0, s2
   10a70:	c3 00 00 f4 	bnz s3, 24 <pvalloc+0xf4>
   10a74:	00 00 f1 c0 	move s0, s2
   10a78:	75 f2 ff f9 	call -13868 <malloc>
   10a7c:	fe f3 00 a8 	load_32 ra, 60(sp)
   10a80:	de 03 01 05 	add_i sp, sp, 64
   10a84:	1f 00 00 f0 	ret
   10a88:	00 80 f0 c0 	move s0, s1
   10a8c:	20 00 f1 c0 	move s1, s2
   10a90:	c1 fe ff f9 	call -1276 <internal_memalign>
   10a94:	fe f3 00 a8 	load_32 ra, 60(sp)
   10a98:	de 03 01 05 	add_i sp, sp, 64
   10a9c:	1f 00 00 f0 	ret

0000000000010aa0 independent_calloc:
   10aa0:	de 03 ff 05 	add_i sp, sp, -64
   10aa4:	fe f3 00 88 	store_32 ra, 60(sp)
   10aa8:	60 00 f1 c0 	move s3, s2
   10aac:	3e e0 00 88 	store_32 s1, 56(sp)
   10ab0:	3e e0 00 05 	add_i s1, sp, 56
   10ab4:	40 0c 00 0f 	move s2, 3
   10ab8:	04 00 00 f8 	call 16 <ialloc>
   10abc:	fe f3 00 a8 	load_32 ra, 60(sp)
   10ac0:	de 03 01 05 	add_i sp, sp, 64
   10ac4:	1f 00 00 f0 	ret

0000000000010ac8 ialloc:
   10ac8:	de 03 ff 05 	add_i sp, sp, -64
   10acc:	1e f3 00 88 	store_32 s24, 60(sp)
   10ad0:	3e e3 00 88 	store_32 s25, 56(sp)
   10ad4:	5e d3 00 88 	store_32 s26, 52(sp)
   10ad8:	7e c3 00 88 	store_32 s27, 48(sp)
   10adc:	fe b3 00 88 	store_32 ra, 44(sp)
   10ae0:	8c 00 00 4f 	movehi s4, 12
   10ae4:	84 50 04 00 	or s4, s4, 276
   10ae8:	a4 00 00 a8 	load_32 s5, (s4)
   10aec:	00 81 f1 c0 	move s8, s3
   10af0:	00 03 f1 c0 	move s24, s2
   10af4:	20 83 f0 c0 	move s25, s1
   10af8:	40 03 f0 c0 	move s26, s0
   10afc:	65 05 00 f4 	bnz s5, 172 <ialloc+0xe0>
   10b00:	0c 00 00 4f 	movehi s0, 12
   10b04:	20 04 00 0f 	move s1, 1
   10b08:	00 20 0c 00 	or s0, s0, 776
   10b0c:	40 00 00 aa 	load_sync s2, (s0)
   10b10:	60 80 f0 c0 	move s3, s1
   10b14:	60 00 00 8a 	store_sync s3, (s0)  
   10b18:	a3 ff ff f3 	bz s3, -12 <ialloc+0x44>
   10b1c:	02 01 00 f2 	bz s2, 32 <ialloc+0x74>
   10b20:	40 00 00 a8 	load_32 s2, (s0)
   10b24:	e2 ff ff f5 	bnz s2, -4 <ialloc+0x58>
   10b28:	40 00 00 aa 	load_sync s2, (s0)
   10b2c:	60 80 f0 c0 	move s3, s1
   10b30:	60 00 00 8a 	store_sync s3, (s0)  
   10b34:	a3 ff ff f3 	bz s3, -12 <ialloc+0x60>
   10b38:	42 ff ff f5 	bnz s2, -24 <ialloc+0x58>
   10b3c:	24 00 00 a8 	load_32 s1, (s4)
   10b40:	a1 02 00 f4 	bnz s1, 84 <ialloc+0xcc>
   10b44:	20 00 40 0f 	move s1, 4096
   10b48:	24 20 00 88 	store_32 s1, 8(s4)
   10b4c:	24 10 00 88 	store_32 s1, 4(s4)
   10b50:	20 fc ff 0f 	move s1, -1
   10b54:	24 30 00 88 	store_32 s1, 12(s4)
   10b58:	2c 00 00 4f 	movehi s1, 12
   10b5c:	40 20 00 4f 	movehi s2, 256
   10b60:	44 40 00 88 	store_32 s2, 16(s4)
   10b64:	40 08 00 0f 	move s2, 2
   10b68:	44 50 00 88 	store_32 s2, 20(s4)
   10b6c:	21 b0 04 00 	or s1, s1, 300
   10b70:	aa 54 55 4f 	movehi s5, 174762
   10b74:	60 00 00 0f 	move s3, 0
   10b78:	41 f0 06 88 	store_32 s2, 444(s1)
   10b7c:	5e a0 00 05 	add_i s2, sp, 40
   10b80:	61 00 07 88 	store_32 s3, 448(s1)
   10b84:	25 60 55 00 	or s1, s5, 5464
   10b88:	42 c0 ff 01 	and s2, s2, -16
   10b8c:	22 80 30 c0 	xor s1, s2, s1
   10b90:	24 00 00 88 	store_32 s1, (s4)
   10b94:	20 00 00 0f 	move s1, 0
   10b98:	40 00 00 aa 	load_sync s2, (s0)
   10b9c:	40 80 f0 c0 	move s2, s1
   10ba0:	40 00 00 8a 	store_sync s2, (s0)  
   10ba4:	a2 ff ff f3 	bz s2, -12 <ialloc+0xd0>
   10ba8:	08 03 00 f2 	bz s8, 96 <ialloc+0x140>
   10bac:	9a 14 00 f2 	bz s26, 656 <ialloc+0x374>
   10bb0:	c0 00 00 0f 	move s6, 0
   10bb4:	18 04 00 01 	and s0, s24, 1
   10bb8:	1e 91 00 88 	store_32 s8, 36(sp)
   10bbc:	c0 03 00 f4 	bnz s0, 120 <ialloc+0x16c>
   10bc0:	a0 00 00 0f 	move s5, 0
   10bc4:	00 40 00 0f 	move s0, 16
   10bc8:	20 80 f2 c0 	move s1, s5
   10bcc:	60 83 f2 c0 	move s27, s5
   10bd0:	41 08 00 0b 	shl s2, s1, 2
   10bd4:	59 00 51 c0 	add_i s2, s25, s2
   10bd8:	62 00 00 a8 	load_32 s3, (s2)
   10bdc:	40 00 f0 c0 	move s2, s0
   10be0:	83 2c 00 18 	cmplt_u s4, s3, 11
   10be4:	64 00 00 f4 	bnz s4, 12 <ialloc+0x128>
   10be8:	43 2c 00 05 	add_i s2, s3, 11
   10bec:	42 e0 ff 01 	and s2, s2, -8
   10bf0:	21 04 00 05 	add_i s1, s1, 1
   10bf4:	62 83 5d c0 	add_i s27, s2, s27
   10bf8:	61 00 1d c1 	cmpne_i s3, s1, s26
   10bfc:	a3 fe ff f5 	bnz s3, -44 <ialloc+0x108>
   10c00:	be 80 00 88 	store_32 s5, 32(sp)
   10c04:	15 00 00 f6 	b 84 <ialloc+0x190>
   10c08:	5a 00 00 f4 	bnz s26, 8 <ialloc+0x148>
   10c0c:	59 00 00 f6 	b 356 <ialloc+0x2a8>
   10c10:	1a 08 00 0b 	shl s0, s26, 2
   10c14:	20 2c 00 18 	cmplt_u s1, s0, 11
   10c18:	61 0c 00 f4 	bnz s1, 396 <ialloc+0x2dc>
   10c1c:	00 2c 00 05 	add_i s0, s0, 11
   10c20:	c0 e0 ff 01 	and s6, s0, -8
   10c24:	18 04 00 01 	and s0, s24, 1
   10c28:	1e 91 00 88 	store_32 s8, 36(sp)
   10c2c:	40 00 00 f4 	bnz s0, 8 <ialloc+0x16c>
   10c30:	e4 ff ff f7 	b -112 <ialloc+0xf8>
   10c34:	19 00 00 a8 	load_32 s0, (s25)
   10c38:	20 2c 00 18 	cmplt_u s1, s0, 11
   10c3c:	81 00 00 f4 	bnz s1, 16 <ialloc+0x184>
   10c40:	00 2c 00 05 	add_i s0, s0, 11
   10c44:	00 e0 ff 01 	and s0, s0, -8
   10c48:	02 00 00 f6 	b 8 <ialloc+0x188>
   10c4c:	00 40 00 0f 	move s0, 16
   10c50:	60 03 7d c0 	mull_i s27, s0, s26
   10c54:	1e 80 00 88 	store_32 s0, 32(sp)
   10c58:	06 80 5d c0 	add_i s0, s6, s27
   10c5c:	de 70 00 88 	store_32 s6, 28(sp)
   10c60:	00 f0 ff 05 	add_i s0, s0, -4
   10c64:	fa f1 ff f9 	call -14360 <malloc>
   10c68:	00 08 00 f2 	bz s0, 256 <ialloc+0x2a0>
   10c6c:	2c 00 00 4f 	movehi s1, 12
   10c70:	80 00 fc c0 	move s4, s24
   10c74:	01 b3 04 00 	or s24, s1, 300
   10c78:	38 f0 06 a0 	load_u8 s1, 444(s24)
   10c7c:	1e 91 00 a8 	load_32 s8, 36(sp)
   10c80:	3e 81 00 a8 	load_32 s9, 32(sp)
   10c84:	21 08 00 01 	and s1, s1, 2
   10c88:	e1 01 00 f2 	bz s1, 60 <ialloc+0x1fc>
   10c8c:	b8 00 07 05 	add_i s5, s24, 448
   10c90:	20 04 00 0f 	move s1, 1
   10c94:	45 00 00 aa 	load_sync s2, (s5)
   10c98:	60 80 f0 c0 	move s3, s1
   10c9c:	65 00 00 8a 	store_sync s3, (s5)  
   10ca0:	a3 ff ff f3 	bz s3, -12 <ialloc+0x1cc>
   10ca4:	02 01 00 f2 	bz s2, 32 <ialloc+0x1fc>
   10ca8:	58 00 07 a8 	load_32 s2, 448(s24)
   10cac:	e2 ff ff f5 	bnz s2, -4 <ialloc+0x1e0>
   10cb0:	45 00 00 aa 	load_sync s2, (s5)
   10cb4:	60 80 f0 c0 	move s3, s1
   10cb8:	65 00 00 8a 	store_sync s3, (s5)  
   10cbc:	a3 ff ff f3 	bz s3, -12 <ialloc+0x1e8>
   10cc0:	42 ff ff f5 	bnz s2, -24 <ialloc+0x1e0>
   10cc4:	40 f0 ff a9 	load_32 s2, -4(s0)
   10cc8:	24 08 00 01 	and s1, s4, 2
   10ccc:	62 e0 ff 01 	and s3, s2, -8
   10cd0:	a1 01 00 f2 	bz s1, 52 <ialloc+0x23c>
   10cd4:	3e 70 00 a8 	load_32 s1, 28(sp)
   10cd8:	40 f0 ff 0f 	move s2, -4
   10cdc:	1e 70 00 88 	store_32 s0, 28(sp)
   10ce0:	7e 60 00 88 	store_32 s3, 24(sp)
   10ce4:	22 80 60 c0 	sub_i s1, s2, s1
   10ce8:	41 80 51 c0 	add_i s2, s1, s3
   10cec:	20 00 00 0f 	move s1, 0
   10cf0:	f0 03 00 f8 	call 4032 <memset>
   10cf4:	7e 60 00 a8 	load_32 s3, 24(sp)
   10cf8:	1e 70 00 a8 	load_32 s0, 28(sp)
   10cfc:	3e 81 00 a8 	load_32 s9, 32(sp)
   10d00:	1e 91 00 a8 	load_32 s8, 36(sp)
   10d04:	40 e1 ff 05 	add_i s10, s0, -8
   10d08:	48 00 00 f4 	bnz s8, 8 <ialloc+0x248>
   10d0c:	1d 00 00 f6 	b 116 <ialloc+0x2b8>
   10d10:	60 83 f1 c0 	move s27, s3
   10d14:	3a fc ff 05 	add_i s1, s26, -1
   10d18:	08 00 00 88 	store_32 s0, (s8)
   10d1c:	a1 07 00 f2 	bz s1, 244 <ialloc+0x348>
   10d20:	49 00 00 f4 	bnz s9, 8 <ialloc+0x260>
   10d24:	25 00 00 f6 	b 148 <ialloc+0x2f0>
   10d28:	40 04 00 0f 	move s2, 1
   10d2c:	69 0c 00 00 	or s3, s9, 3
   10d30:	80 00 00 0f 	move s4, 0
   10d34:	42 00 6d c0 	sub_i s2, s2, s26
   10d38:	49 00 71 c0 	mull_i s2, s9, s2
   10d3c:	84 04 00 05 	add_i s4, s4, 1
   10d40:	6a 10 00 88 	store_32 s3, 4(s10)
   10d44:	4a 81 54 c0 	add_i s10, s10, s9
   10d48:	a4 08 00 0b 	shl s5, s4, 2
   10d4c:	e4 80 10 c1 	cmpne_i s7, s4, s1
   10d50:	a8 80 52 c0 	add_i s5, s8, s5
   10d54:	ca 20 00 05 	add_i s6, s10, 8
   10d58:	c5 00 00 88 	store_32 s6, (s5)
   10d5c:	07 ff ff f5 	bnz s7, -32 <ialloc+0x274>
   10d60:	7b 03 51 c0 	add_i s27, s27, s2
   10d64:	2b 00 00 f6 	b 172 <ialloc+0x348>
   10d68:	00 01 00 0f 	move s8, 0
   10d6c:	34 00 00 f6 	b 208 <ialloc+0x374>
   10d70:	00 00 00 0f 	move s0, 0
   10d74:	b6 f1 ff f9 	call -14632 <malloc>
   10d78:	00 01 f0 c0 	move s8, s0
   10d7c:	30 00 00 f6 	b 192 <ialloc+0x374>
   10d80:	2a 80 5d c0 	add_i s1, s10, s27
   10d84:	43 80 6d c0 	sub_i s2, s3, s27
   10d88:	01 21 00 05 	add_i s8, s1, 8
   10d8c:	42 0c 00 00 	or s2, s2, 3
   10d90:	41 10 00 88 	store_32 s2, 4(s1)
   10d94:	3a fc ff 05 	add_i s1, s26, -1
   10d98:	08 00 00 88 	store_32 s0, (s8)
   10d9c:	a1 03 00 f2 	bz s1, 116 <ialloc+0x348>
   10da0:	e0 ff ff f7 	b -128 <ialloc+0x258>
   10da4:	c0 40 00 0f 	move s6, 16
   10da8:	18 04 00 01 	and s0, s24, 1
   10dac:	1e 91 00 88 	store_32 s8, 36(sp)
   10db0:	20 f4 ff f5 	bnz s0, -380 <ialloc+0x16c>
   10db4:	83 ff ff f7 	b -500 <ialloc+0xf8>
   10db8:	40 00 00 0f 	move s2, 0
   10dbc:	60 40 00 0f 	move s3, 16
   10dc0:	82 08 00 0b 	shl s4, s2, 2
   10dc4:	99 00 52 c0 	add_i s4, s25, s4
   10dc8:	a4 00 00 a8 	load_32 s5, (s4)
   10dcc:	80 80 f1 c0 	move s4, s3
   10dd0:	c5 2c 00 18 	cmplt_u s6, s5, 11
   10dd4:	66 00 00 f4 	bnz s6, 12 <ialloc+0x318>
   10dd8:	85 2c 00 05 	add_i s4, s5, 11
   10ddc:	84 e0 ff 01 	and s4, s4, -8
   10de0:	42 04 00 05 	add_i s2, s2, 1
   10de4:	a4 0c 00 00 	or s5, s4, 3
   10de8:	aa 10 00 88 	store_32 s5, 4(s10)
   10dec:	4a 01 52 c0 	add_i s10, s10, s4
   10df0:	7b 03 62 c0 	sub_i s27, s27, s4
   10df4:	82 08 00 0b 	shl s4, s2, 2
   10df8:	c2 80 00 c1 	cmpeq_i s6, s2, s1
   10dfc:	88 00 52 c0 	add_i s4, s8, s4
   10e00:	aa 20 00 05 	add_i s5, s10, 8
   10e04:	a4 00 00 88 	store_32 s5, (s4)
   10e08:	46 00 00 f4 	bnz s6, 8 <ialloc+0x348>
   10e0c:	ed ff ff f7 	b -76 <ialloc+0x2f8>
   10e10:	3b 0c 00 00 	or s1, s27, 3
   10e14:	2a 10 00 88 	store_32 s1, 4(s10)
   10e18:	18 f0 06 a0 	load_u8 s0, 444(s24)
   10e1c:	00 08 00 01 	and s0, s0, 2
   10e20:	e0 00 00 f2 	bz s0, 28 <ialloc+0x374>
   10e24:	18 00 07 05 	add_i s0, s24, 448
   10e28:	20 00 00 0f 	move s1, 0
   10e2c:	40 00 00 aa 	load_sync s2, (s0)
   10e30:	40 80 f0 c0 	move s2, s1
   10e34:	40 00 00 8a 	store_sync s2, (s0)  
   10e38:	a2 ff ff f3 	bz s2, -12 <ialloc+0x364>
   10e3c:	00 00 f4 c0 	move s0, s8
   10e40:	fe b3 00 a8 	load_32 ra, 44(sp)
   10e44:	7e c3 00 a8 	load_32 s27, 48(sp)
   10e48:	5e d3 00 a8 	load_32 s26, 52(sp)
   10e4c:	3e e3 00 a8 	load_32 s25, 56(sp)
   10e50:	1e f3 00 a8 	load_32 s24, 60(sp)
   10e54:	de 03 01 05 	add_i sp, sp, 64
   10e58:	1f 00 00 f0 	ret

0000000000010e5c independent_comalloc:
   10e5c:	de 03 ff 05 	add_i sp, sp, -64
   10e60:	fe f3 00 88 	store_32 ra, 60(sp)
   10e64:	60 00 f1 c0 	move s3, s2
   10e68:	40 00 00 0f 	move s2, 0
   10e6c:	17 ff ff f9 	call -932 <ialloc>
   10e70:	fe f3 00 a8 	load_32 ra, 60(sp)
   10e74:	de 03 01 05 	add_i sp, sp, 64
   10e78:	1f 00 00 f0 	ret

0000000000010e7c bulk_free:
   10e7c:	de 03 ff 05 	add_i sp, sp, -64
   10e80:	1e f3 00 88 	store_32 s24, 60(sp)
   10e84:	3e e3 00 88 	store_32 s25, 56(sp)
   10e88:	5e d3 00 88 	store_32 s26, 52(sp)
   10e8c:	7e c3 00 88 	store_32 s27, 48(sp)
   10e90:	fe b3 00 88 	store_32 ra, 44(sp)
   10e94:	4c 00 00 4f 	movehi s2, 12
   10e98:	22 b3 04 00 	or s25, s2, 300
   10e9c:	59 f0 06 a0 	load_u8 s2, 444(s25)
   10ea0:	00 03 f0 c0 	move s24, s0
   10ea4:	42 08 00 01 	and s2, s2, 2
   10ea8:	e2 01 00 f2 	bz s2, 60 <bulk_free+0x68>
   10eac:	19 00 07 05 	add_i s0, s25, 448
   10eb0:	40 04 00 0f 	move s2, 1
   10eb4:	60 00 00 aa 	load_sync s3, (s0)
   10eb8:	80 00 f1 c0 	move s4, s2
   10ebc:	80 00 00 8a 	store_sync s4, (s0)  
   10ec0:	a4 ff ff f3 	bz s4, -12 <bulk_free+0x38>
   10ec4:	03 01 00 f2 	bz s3, 32 <bulk_free+0x68>
   10ec8:	79 00 07 a8 	load_32 s3, 448(s25)
   10ecc:	e3 ff ff f5 	bnz s3, -4 <bulk_free+0x4c>
   10ed0:	60 00 00 aa 	load_sync s3, (s0)
   10ed4:	80 00 f1 c0 	move s4, s2
   10ed8:	80 00 00 8a 	store_sync s4, (s0)  
   10edc:	a4 ff ff f3 	bz s4, -12 <bulk_free+0x54>
   10ee0:	43 ff ff f5 	bnz s3, -24 <bulk_free+0x4c>
   10ee4:	c1 05 00 f2 	bz s1, 184 <bulk_free+0x120>
   10ee8:	01 08 00 0b 	shl s0, s1, 2
   10eec:	58 03 50 c0 	add_i s26, s24, s0
   10ef0:	60 03 00 0f 	move s27, 0
   10ef4:	58 00 00 a8 	load_32 s2, (s24)
   10ef8:	a2 02 00 f2 	bz s2, 84 <bulk_free+0xd0>
   10efc:	62 f0 ff a9 	load_32 s3, -4(s2)
   10f00:	78 03 00 88 	store_32 s27, (s24)
   10f04:	39 40 00 a8 	load_32 s1, 16(s25)
   10f08:	03 0c 00 01 	and s0, s3, 3
   10f0c:	00 04 00 10 	cmpeq_i s0, s0, 1
   10f10:	40 07 00 f4 	bnz s0, 232 <bulk_free+0x17c>
   10f14:	02 e0 ff 05 	add_i s0, s2, -8
   10f18:	20 80 80 c1 	cmplt_u s1, s0, s1
   10f1c:	e1 06 00 f4 	bnz s1, 220 <bulk_free+0x17c>
   10f20:	98 10 00 05 	add_i s4, s24, 4
   10f24:	23 e0 ff 01 	and s1, s3, -8
   10f28:	a4 00 0d c1 	cmpeq_i s5, s4, s26
   10f2c:	e5 00 00 f4 	bnz s5, 28 <bulk_free+0xcc>
   10f30:	a0 80 50 c0 	add_i s5, s0, s1
   10f34:	c4 00 00 a8 	load_32 s6, (s4)
   10f38:	e5 20 00 05 	add_i s7, s5, 8
   10f3c:	c6 80 13 c1 	cmpne_i s6, s6, s7
   10f40:	46 00 00 f4 	bnz s6, 8 <bulk_free+0xcc>
   10f44:	06 00 00 f6 	b 24 <bulk_free+0xe0>
   10f48:	83 01 00 f8 	call 1548 <dispose_chunk>
   10f4c:	18 13 00 05 	add_i s24, s24, 4
   10f50:	18 00 1d c1 	cmpne_i s0, s24, s26
   10f54:	00 fd ff f5 	bnz s0, -96 <bulk_free+0x78>
   10f58:	11 00 00 f6 	b 68 <bulk_free+0x120>
   10f5c:	05 10 00 a8 	load_32 s0, 4(s5)
   10f60:	63 04 00 01 	and s3, s3, 1
   10f64:	a2 f0 ff 05 	add_i s5, s2, -4
   10f68:	00 e0 ff 01 	and s0, s0, -8
   10f6c:	00 80 50 c0 	add_i s0, s0, s1
   10f70:	23 00 00 c0 	or s1, s3, s0
   10f74:	05 00 50 c0 	add_i s0, s5, s0
   10f78:	21 08 00 00 	or s1, s1, 2
   10f7c:	22 f0 ff 89 	store_32 s1, -4(s2)
   10f80:	20 00 00 a8 	load_32 s1, (s0)
   10f84:	21 04 00 00 	or s1, s1, 1
   10f88:	20 00 00 88 	store_32 s1, (s0)
   10f8c:	44 00 00 88 	store_32 s2, (s4)
   10f90:	18 13 00 05 	add_i s24, s24, 4
   10f94:	18 00 1d c1 	cmpne_i s0, s24, s26
   10f98:	e0 fa ff f5 	bnz s0, -164 <bulk_free+0x78>
   10f9c:	19 30 00 a8 	load_32 s0, 12(s25)
   10fa0:	39 70 00 a8 	load_32 s1, 28(s25)
   10fa4:	00 80 90 c1 	cmple_u s0, s0, s1
   10fa8:	60 00 00 f4 	bnz s0, 12 <bulk_free+0x138>
   10fac:	00 00 00 0f 	move s0, 0
   10fb0:	c9 fa ff f9 	call -5340 <sys_trim>
   10fb4:	19 f0 06 a0 	load_u8 s0, 444(s25)
   10fb8:	00 08 00 01 	and s0, s0, 2
   10fbc:	e0 00 00 f2 	bz s0, 28 <bulk_free+0x15c>
   10fc0:	19 00 07 05 	add_i s0, s25, 448
   10fc4:	20 00 00 0f 	move s1, 0
   10fc8:	40 00 00 aa 	load_sync s2, (s0)
   10fcc:	40 80 f0 c0 	move s2, s1
   10fd0:	40 00 00 8a 	store_sync s2, (s0)  
   10fd4:	a2 ff ff f3 	bz s2, -12 <bulk_free+0x14c>
   10fd8:	fe b3 00 a8 	load_32 ra, 44(sp)
   10fdc:	00 00 00 0f 	move s0, 0
   10fe0:	7e c3 00 a8 	load_32 s27, 48(sp)
   10fe4:	5e d3 00 a8 	load_32 s26, 52(sp)
   10fe8:	3e e3 00 a8 	load_32 s25, 56(sp)
   10fec:	1e f3 00 a8 	load_32 s24, 60(sp)
   10ff0:	de 03 01 05 	add_i sp, sp, 64
   10ff4:	1f 00 00 f0 	ret
   10ff8:	5b 03 00 f8 	call 3436 <abort>

0000000000010ffc malloc_trim:
   10ffc:	de 03 ff 05 	add_i sp, sp, -64
   11000:	1e f3 00 88 	store_32 s24, 60(sp)
   11004:	fe e3 00 88 	store_32 ra, 56(sp)
   11008:	2c 00 00 4f 	movehi s1, 12
   1100c:	41 50 04 00 	or s2, s1, 276
   11010:	22 00 00 a8 	load_32 s1, (s2)
   11014:	61 05 00 f4 	bnz s1, 172 <malloc_trim+0xc4>
   11018:	2c 00 00 4f 	movehi s1, 12
   1101c:	60 04 00 0f 	move s3, 1
   11020:	21 20 0c 00 	or s1, s1, 776
   11024:	81 00 00 aa 	load_sync s4, (s1)
   11028:	a0 80 f1 c0 	move s5, s3
   1102c:	a1 00 00 8a 	store_sync s5, (s1)  
   11030:	a5 ff ff f3 	bz s5, -12 <malloc_trim+0x28>
   11034:	04 01 00 f2 	bz s4, 32 <malloc_trim+0x58>
   11038:	81 00 00 a8 	load_32 s4, (s1)
   1103c:	e4 ff ff f5 	bnz s4, -4 <malloc_trim+0x3c>
   11040:	81 00 00 aa 	load_sync s4, (s1)
   11044:	a0 80 f1 c0 	move s5, s3
   11048:	a1 00 00 8a 	store_sync s5, (s1)  
   1104c:	a5 ff ff f3 	bz s5, -12 <malloc_trim+0x44>
   11050:	44 ff ff f5 	bnz s4, -24 <malloc_trim+0x3c>
   11054:	62 00 00 a8 	load_32 s3, (s2)
   11058:	a3 02 00 f4 	bnz s3, 84 <malloc_trim+0xb0>
   1105c:	60 00 40 0f 	move s3, 4096
   11060:	62 20 00 88 	store_32 s3, 8(s2)
   11064:	62 10 00 88 	store_32 s3, 4(s2)
   11068:	60 fc ff 0f 	move s3, -1
   1106c:	62 30 00 88 	store_32 s3, 12(s2)
   11070:	6c 00 00 4f 	movehi s3, 12
   11074:	80 20 00 4f 	movehi s4, 256
   11078:	82 40 00 88 	store_32 s4, 16(s2)
   1107c:	80 08 00 0f 	move s4, 2
   11080:	82 50 00 88 	store_32 s4, 20(s2)
   11084:	63 b0 04 00 	or s3, s3, 300
   11088:	ca 54 55 4f 	movehi s6, 174762
   1108c:	a0 00 00 0f 	move s5, 0
   11090:	83 f0 06 88 	store_32 s4, 444(s3)
   11094:	9e d0 00 05 	add_i s4, sp, 52
   11098:	a3 00 07 88 	store_32 s5, 448(s3)
   1109c:	66 60 55 00 	or s3, s6, 5464
   110a0:	84 c0 ff 01 	and s4, s4, -16
   110a4:	64 80 31 c0 	xor s3, s4, s3
   110a8:	62 00 00 88 	store_32 s3, (s2)
   110ac:	40 00 00 0f 	move s2, 0
   110b0:	61 00 00 aa 	load_sync s3, (s1)
   110b4:	60 00 f1 c0 	move s3, s2
   110b8:	61 00 00 8a 	store_sync s3, (s1)  
   110bc:	a3 ff ff f3 	bz s3, -12 <malloc_trim+0xb4>
   110c0:	2c 00 00 4f 	movehi s1, 12
   110c4:	01 b3 04 00 	or s24, s1, 300
   110c8:	38 f0 06 a0 	load_u8 s1, 444(s24)
   110cc:	21 08 00 01 	and s1, s1, 2
   110d0:	e1 01 00 f2 	bz s1, 60 <malloc_trim+0x110>
   110d4:	38 00 07 05 	add_i s1, s24, 448
   110d8:	40 04 00 0f 	move s2, 1
   110dc:	61 00 00 aa 	load_sync s3, (s1)
   110e0:	80 00 f1 c0 	move s4, s2
   110e4:	81 00 00 8a 	store_sync s4, (s1)  
   110e8:	a4 ff ff f3 	bz s4, -12 <malloc_trim+0xe0>
   110ec:	03 01 00 f2 	bz s3, 32 <malloc_trim+0x110>
   110f0:	78 00 07 a8 	load_32 s3, 448(s24)
   110f4:	e3 ff ff f5 	bnz s3, -4 <malloc_trim+0xf4>
   110f8:	61 00 00 aa 	load_sync s3, (s1)
   110fc:	80 00 f1 c0 	move s4, s2
   11100:	81 00 00 8a 	store_sync s4, (s1)  
   11104:	a4 ff ff f3 	bz s4, -12 <malloc_trim+0xfc>
   11108:	43 ff ff f5 	bnz s3, -24 <malloc_trim+0xf4>
   1110c:	72 fa ff f9 	call -5688 <sys_trim>
   11110:	38 f0 06 a0 	load_u8 s1, 444(s24)
   11114:	21 08 00 01 	and s1, s1, 2
   11118:	e1 00 00 f2 	bz s1, 28 <malloc_trim+0x138>
   1111c:	38 00 07 05 	add_i s1, s24, 448
   11120:	40 00 00 0f 	move s2, 0
   11124:	61 00 00 aa 	load_sync s3, (s1)
   11128:	60 00 f1 c0 	move s3, s2
   1112c:	61 00 00 8a 	store_sync s3, (s1)  
   11130:	a3 ff ff f3 	bz s3, -12 <malloc_trim+0x128>
   11134:	fe e3 00 a8 	load_32 ra, 56(sp)
   11138:	1e f3 00 a8 	load_32 s24, 60(sp)
   1113c:	de 03 01 05 	add_i sp, sp, 64
   11140:	1f 00 00 f0 	ret

0000000000011144 malloc_footprint:
   11144:	0c 00 00 4f 	movehi s0, 12
   11148:	00 b0 04 00 	or s0, s0, 300
   1114c:	00 c0 06 a8 	load_32 s0, 432(s0)
   11150:	1f 00 00 f0 	ret

0000000000011154 malloc_max_footprint:
   11154:	0c 00 00 4f 	movehi s0, 12
   11158:	00 b0 04 00 	or s0, s0, 300
   1115c:	00 d0 06 a8 	load_32 s0, 436(s0)
   11160:	1f 00 00 f0 	ret

0000000000011164 malloc_footprint_limit:
   11164:	0c 00 00 4f 	movehi s0, 12
   11168:	00 b0 04 00 	or s0, s0, 300
   1116c:	00 e0 06 a8 	load_32 s0, 440(s0)
   11170:	20 00 00 10 	cmpeq_i s1, s0, 0
   11174:	41 00 00 f4 	bnz s1, 8 <malloc_footprint_limit+0x18>
   11178:	02 00 00 f6 	b 8 <malloc_footprint_limit+0x1c>
   1117c:	00 fc ff 0f 	move s0, -1
   11180:	1f 00 00 f0 	ret

0000000000011184 malloc_set_footprint_limit:
   11184:	20 fc ff 10 	cmpeq_i s1, s0, -1
   11188:	a1 01 00 f4 	bnz s1, 52 <malloc_set_footprint_limit+0x38>
   1118c:	2c 00 00 4f 	movehi s1, 12
   11190:	40 00 00 0f 	move s2, 0
   11194:	21 50 04 00 	or s1, s1, 276
   11198:	21 20 00 a8 	load_32 s1, 8(s1)
   1119c:	00 80 50 c0 	add_i s0, s0, s1
   111a0:	22 80 60 c0 	sub_i s1, s2, s1
   111a4:	00 fc ff 05 	add_i s0, s0, -1
   111a8:	00 80 10 c0 	and s0, s0, s1
   111ac:	2c 00 00 4f 	movehi s1, 12
   111b0:	21 b0 04 00 	or s1, s1, 300
   111b4:	01 e0 06 88 	store_32 s0, 440(s1)
   111b8:	1f 00 00 f0 	ret
   111bc:	00 00 00 0f 	move s0, 0
   111c0:	2c 00 00 4f 	movehi s1, 12
   111c4:	21 b0 04 00 	or s1, s1, 300
   111c8:	01 e0 06 88 	store_32 s0, 440(s1)
   111cc:	1f 00 00 f0 	ret

00000000000111d0 mallinfo:
   111d0:	de 03 ff 05 	add_i sp, sp, -64
   111d4:	1e f3 00 88 	store_32 s24, 60(sp)
   111d8:	3e e3 00 88 	store_32 s25, 56(sp)
   111dc:	fe d3 00 88 	store_32 ra, 52(sp)
   111e0:	20 03 00 0f 	move s25, 0
   111e4:	00 03 f0 c0 	move s24, s0
   111e8:	40 a0 00 0f 	move s2, 40
   111ec:	20 80 fc c0 	move s1, s25
   111f0:	b0 02 00 f8 	call 2752 <memset>
   111f4:	0c 00 00 4f 	movehi s0, 12
   111f8:	20 50 04 00 	or s1, s0, 276
   111fc:	01 00 00 a8 	load_32 s0, (s1)
   11200:	60 05 00 f4 	bnz s0, 172 <mallinfo+0xdc>
   11204:	0c 00 00 4f 	movehi s0, 12
   11208:	40 04 00 0f 	move s2, 1
   1120c:	00 20 0c 00 	or s0, s0, 776
   11210:	60 00 00 aa 	load_sync s3, (s0)
   11214:	80 00 f1 c0 	move s4, s2
   11218:	80 00 00 8a 	store_sync s4, (s0)  
   1121c:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x40>
   11220:	03 01 00 f2 	bz s3, 32 <mallinfo+0x70>
   11224:	60 00 00 a8 	load_32 s3, (s0)
   11228:	e3 ff ff f5 	bnz s3, -4 <mallinfo+0x54>
   1122c:	60 00 00 aa 	load_sync s3, (s0)
   11230:	80 00 f1 c0 	move s4, s2
   11234:	80 00 00 8a 	store_sync s4, (s0)  
   11238:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x5c>
   1123c:	43 ff ff f5 	bnz s3, -24 <mallinfo+0x54>
   11240:	41 00 00 a8 	load_32 s2, (s1)
   11244:	a2 02 00 f4 	bnz s2, 84 <mallinfo+0xc8>
   11248:	40 00 40 0f 	move s2, 4096
   1124c:	41 20 00 88 	store_32 s2, 8(s1)
   11250:	41 10 00 88 	store_32 s2, 4(s1)
   11254:	40 fc ff 0f 	move s2, -1
   11258:	41 30 00 88 	store_32 s2, 12(s1)
   1125c:	4c 00 00 4f 	movehi s2, 12
   11260:	60 20 00 4f 	movehi s3, 256
   11264:	61 40 00 88 	store_32 s3, 16(s1)
   11268:	60 08 00 0f 	move s3, 2
   1126c:	61 50 00 88 	store_32 s3, 20(s1)
   11270:	42 b0 04 00 	or s2, s2, 300
   11274:	aa 54 55 4f 	movehi s5, 174762
   11278:	80 00 00 0f 	move s4, 0
   1127c:	62 f0 06 88 	store_32 s3, 444(s2)
   11280:	7e c0 00 05 	add_i s3, sp, 48
   11284:	82 00 07 88 	store_32 s4, 448(s2)
   11288:	45 60 55 00 	or s2, s5, 5464
   1128c:	63 c0 ff 01 	and s3, s3, -16
   11290:	43 00 31 c0 	xor s2, s3, s2
   11294:	41 00 00 88 	store_32 s2, (s1)
   11298:	20 00 00 0f 	move s1, 0
   1129c:	40 00 00 aa 	load_sync s2, (s0)
   112a0:	40 80 f0 c0 	move s2, s1
   112a4:	40 00 00 8a 	store_sync s2, (s0)  
   112a8:	a2 ff ff f3 	bz s2, -12 <mallinfo+0xcc>
   112ac:	0c 00 00 4f 	movehi s0, 12
   112b0:	00 b0 04 00 	or s0, s0, 300
   112b4:	20 f0 06 a0 	load_u8 s1, 444(s0)
   112b8:	21 08 00 01 	and s1, s1, 2
   112bc:	e1 01 00 f2 	bz s1, 60 <mallinfo+0x128>
   112c0:	20 00 07 05 	add_i s1, s0, 448
   112c4:	40 04 00 0f 	move s2, 1
   112c8:	61 00 00 aa 	load_sync s3, (s1)
   112cc:	80 00 f1 c0 	move s4, s2
   112d0:	81 00 00 8a 	store_sync s4, (s1)  
   112d4:	a4 ff ff f3 	bz s4, -12 <mallinfo+0xf8>
   112d8:	03 01 00 f2 	bz s3, 32 <mallinfo+0x128>
   112dc:	60 00 07 a8 	load_32 s3, 448(s0)
   112e0:	e3 ff ff f5 	bnz s3, -4 <mallinfo+0x10c>
   112e4:	61 00 00 aa 	load_sync s3, (s1)
   112e8:	80 00 f1 c0 	move s4, s2
   112ec:	81 00 00 8a 	store_sync s4, (s1)  
   112f0:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x114>
   112f4:	43 ff ff f5 	bnz s3, -24 <mallinfo+0x10c>
   112f8:	40 60 00 a8 	load_32 s2, 24(s0)
   112fc:	62 06 00 f2 	bz s2, 204 <mallinfo+0x1f8>
   11300:	20 30 00 a8 	load_32 s1, 12(s0)
   11304:	c0 10 07 05 	add_i s6, s0, 452
   11308:	a0 04 00 0f 	move s5, 1
   1130c:	e0 e0 ff 0f 	move s7, -8
   11310:	61 a0 00 05 	add_i s3, s1, 40
   11314:	80 80 f1 c0 	move s4, s3
   11318:	06 01 00 a8 	load_32 s8, (s6)
   1131c:	28 21 00 05 	add_i s9, s8, 8
   11320:	29 1d 00 01 	and s9, s9, 7
   11324:	49 01 00 10 	cmpeq_i s10, s9, 0
   11328:	20 81 fc c0 	move s9, s25
   1132c:	6a 00 00 f4 	bnz s10, 12 <mallinfo+0x168>
   11330:	27 01 64 c0 	sub_i s9, s7, s8
   11334:	29 1d 00 01 	and s9, s9, 7
   11338:	46 11 00 a8 	load_32 s10, 4(s6)
   1133c:	28 81 54 c0 	add_i s9, s8, s9
   11340:	48 01 55 c0 	add_i s10, s8, s10
   11344:	69 01 75 c1 	cmpge_u s11, s9, s10
   11348:	6b 02 00 f4 	bnz s11, 76 <mallinfo+0x1c4>
   1134c:	62 81 04 c1 	cmpeq_i s11, s2, s9
   11350:	2b 02 00 f4 	bnz s11, 68 <mallinfo+0x1c4>
   11354:	69 11 00 a8 	load_32 s11, 4(s9)
   11358:	8b 1d 00 10 	cmpeq_i s12, s11, 7
   1135c:	cc 01 00 f4 	bnz s12, 56 <mallinfo+0x1c4>
   11360:	8b 0d 00 01 	and s12, s11, 3
   11364:	6b e1 ff 01 	and s11, s11, -8
   11368:	8c 05 00 10 	cmpeq_i s12, s12, 1
   1136c:	a0 81 f5 c0 	move s13, s11
   11370:	4c 00 00 f4 	bnz s12, 8 <mallinfo+0x1a8>
   11374:	a0 81 fc c0 	move s13, s25
   11378:	29 81 55 c0 	add_i s9, s9, s11
   1137c:	6b 80 51 c0 	add_i s3, s11, s3
   11380:	6c 05 00 01 	and s11, s12, 1
   11384:	8d 00 52 c0 	add_i s4, s13, s4
   11388:	89 01 74 c1 	cmpge_u s12, s9, s8
   1138c:	a5 80 55 c0 	add_i s5, s5, s11
   11390:	ac fd ff f5 	bnz s12, -76 <mallinfo+0x174>
   11394:	c6 20 00 a8 	load_32 s6, 8(s6)
   11398:	06 fc ff f5 	bnz s6, -128 <mallinfo+0x148>
   1139c:	78 00 00 88 	store_32 s3, (s24)
   113a0:	b8 10 00 88 	store_32 s5, 4(s24)
   113a4:	40 c0 06 a8 	load_32 s2, 432(s0)
   113a8:	62 80 61 c0 	sub_i s3, s2, s3
   113ac:	78 40 00 88 	store_32 s3, 16(s24)
   113b0:	60 d0 06 a8 	load_32 s3, 436(s0)
   113b4:	42 00 62 c0 	sub_i s2, s2, s4
   113b8:	78 50 00 88 	store_32 s3, 20(s24)
   113bc:	58 70 00 88 	store_32 s2, 28(s24)
   113c0:	98 80 00 88 	store_32 s4, 32(s24)
   113c4:	38 90 00 88 	store_32 s1, 36(s24)
   113c8:	20 f0 06 a0 	load_u8 s1, 444(s0)
   113cc:	21 08 00 01 	and s1, s1, 2
   113d0:	e1 00 00 f2 	bz s1, 28 <mallinfo+0x21c>
   113d4:	00 00 07 05 	add_i s0, s0, 448
   113d8:	20 00 00 0f 	move s1, 0
   113dc:	40 00 00 aa 	load_sync s2, (s0)
   113e0:	40 80 f0 c0 	move s2, s1
   113e4:	40 00 00 8a 	store_sync s2, (s0)  
   113e8:	a2 ff ff f3 	bz s2, -12 <mallinfo+0x20c>
   113ec:	00 00 fc c0 	move s0, s24
   113f0:	fe d3 00 a8 	load_32 ra, 52(sp)
   113f4:	3e e3 00 a8 	load_32 s25, 56(sp)
   113f8:	1e f3 00 a8 	load_32 s24, 60(sp)
   113fc:	de 03 01 05 	add_i sp, sp, 64
   11400:	1f 00 00 f0 	ret

0000000000011404 mallopt:
   11404:	de 03 ff 05 	add_i sp, sp, -64
   11408:	4c 00 00 4f 	movehi s2, 12
   1140c:	62 50 04 00 	or s3, s2, 276
   11410:	43 00 00 a8 	load_32 s2, (s3)
   11414:	62 05 00 f4 	bnz s2, 172 <mallopt+0xbc>
   11418:	4c 00 00 4f 	movehi s2, 12
   1141c:	80 04 00 0f 	move s4, 1
   11420:	42 20 0c 00 	or s2, s2, 776
   11424:	a2 00 00 aa 	load_sync s5, (s2)
   11428:	c0 00 f2 c0 	move s6, s4
   1142c:	c2 00 00 8a 	store_sync s6, (s2)  
   11430:	a6 ff ff f3 	bz s6, -12 <mallopt+0x20>
   11434:	05 01 00 f2 	bz s5, 32 <mallopt+0x50>
   11438:	a2 00 00 a8 	load_32 s5, (s2)
   1143c:	e5 ff ff f5 	bnz s5, -4 <mallopt+0x34>
   11440:	a2 00 00 aa 	load_sync s5, (s2)
   11444:	c0 00 f2 c0 	move s6, s4
   11448:	c2 00 00 8a 	store_sync s6, (s2)  
   1144c:	a6 ff ff f3 	bz s6, -12 <mallopt+0x3c>
   11450:	45 ff ff f5 	bnz s5, -24 <mallopt+0x34>
   11454:	83 00 00 a8 	load_32 s4, (s3)
   11458:	a4 02 00 f4 	bnz s4, 84 <mallopt+0xa8>
   1145c:	80 00 40 0f 	move s4, 4096
   11460:	83 20 00 88 	store_32 s4, 8(s3)
   11464:	83 10 00 88 	store_32 s4, 4(s3)
   11468:	80 fc ff 0f 	move s4, -1
   1146c:	83 30 00 88 	store_32 s4, 12(s3)
   11470:	8c 00 00 4f 	movehi s4, 12
   11474:	a0 20 00 4f 	movehi s5, 256
   11478:	a3 40 00 88 	store_32 s5, 16(s3)
   1147c:	a0 08 00 0f 	move s5, 2
   11480:	a3 50 00 88 	store_32 s5, 20(s3)
   11484:	84 b0 04 00 	or s4, s4, 300
   11488:	ea 54 55 4f 	movehi s7, 174762
   1148c:	c0 00 00 0f 	move s6, 0
   11490:	a4 f0 06 88 	store_32 s5, 444(s4)
   11494:	be f0 00 05 	add_i s5, sp, 60
   11498:	c4 00 07 88 	store_32 s6, 448(s4)
   1149c:	87 60 55 00 	or s4, s7, 5464
   114a0:	a5 c0 ff 01 	and s5, s5, -16
   114a4:	85 00 32 c0 	xor s4, s5, s4
   114a8:	83 00 00 88 	store_32 s4, (s3)
   114ac:	80 00 00 0f 	move s4, 0
   114b0:	a2 00 00 aa 	load_sync s5, (s2)
   114b4:	a0 00 f2 c0 	move s5, s4
   114b8:	a2 00 00 8a 	store_sync s5, (s2)  
   114bc:	a5 ff ff f3 	bz s5, -12 <mallopt+0xac>
   114c0:	40 f4 ff 10 	cmpeq_i s2, s0, -3
   114c4:	02 01 00 f4 	bnz s2, 32 <mallopt+0xe0>
   114c8:	80 f8 ff 10 	cmpeq_i s4, s0, -2
   114cc:	40 00 00 0f 	move s2, 0
   114d0:	44 01 00 f4 	bnz s4, 40 <mallopt+0xf4>
   114d4:	00 fc ff 11 	cmpne_i s0, s0, -1
   114d8:	a0 00 00 f4 	bnz s0, 20 <mallopt+0xe8>
   114dc:	23 40 00 88 	store_32 s1, 16(s3)
   114e0:	02 00 00 f6 	b 8 <mallopt+0xe4>
   114e4:	23 30 00 88 	store_32 s1, 12(s3)
   114e8:	40 04 00 0f 	move s2, 1
   114ec:	00 00 f1 c0 	move s0, s2
   114f0:	de 03 01 05 	add_i sp, sp, 64
   114f4:	1f 00 00 f0 	ret
   114f8:	03 10 00 a8 	load_32 s0, 4(s3)
   114fc:	00 80 60 c1 	cmpgt_u s0, s0, s1
   11500:	60 ff ff f5 	bnz s0, -20 <mallopt+0xe8>
   11504:	01 fc ff 05 	add_i s0, s1, -1
   11508:	00 80 10 c0 	and s0, s0, s1
   1150c:	00 ff ff f5 	bnz s0, -32 <mallopt+0xe8>
   11510:	23 20 00 88 	store_32 s1, 8(s3)
   11514:	f5 ff ff f7 	b -44 <mallopt+0xe4>

0000000000011518 malloc_usable_size:
   11518:	20 00 f0 c0 	move s1, s0
   1151c:	00 00 00 0f 	move s0, 0
   11520:	81 01 00 f2 	bz s1, 48 <malloc_usable_size+0x38>
   11524:	21 f0 ff a9 	load_32 s1, -4(s1)
   11528:	41 0c 00 01 	and s2, s1, 3
   1152c:	62 04 00 10 	cmpeq_i s3, s2, 1
   11530:	03 01 00 f4 	bnz s3, 32 <malloc_usable_size+0x38>
   11534:	42 00 00 10 	cmpeq_i s2, s2, 0
   11538:	01 e0 ff 01 	and s0, s1, -8
   1153c:	62 00 00 f4 	bnz s2, 12 <malloc_usable_size+0x30>
   11540:	20 10 00 0f 	move s1, 4
   11544:	02 00 00 f6 	b 8 <malloc_usable_size+0x34>
   11548:	20 20 00 0f 	move s1, 8
   1154c:	00 80 60 c0 	sub_i s0, s0, s1
   11550:	1f 00 00 f0 	ret

0000000000011554 dispose_chunk:
   11554:	de 03 ff 05 	add_i sp, sp, -64
   11558:	fe f3 00 88 	store_32 ra, 60(sp)
   1155c:	60 10 00 a8 	load_32 s3, 4(s0)
   11560:	40 80 50 c0 	add_i s2, s0, s1
   11564:	83 04 00 01 	and s4, s3, 1
   11568:	04 12 00 f4 	bnz s4, 576 <dispose_chunk+0x254>
   1156c:	80 00 00 a8 	load_32 s4, (s0)
   11570:	63 0c 00 01 	and s3, s3, 3
   11574:	a3 1c 00 f2 	bz s3, 916 <dispose_chunk+0x3b4>
   11578:	6c 00 00 4f 	movehi s3, 12
   1157c:	00 00 62 c0 	sub_i s0, s0, s4
   11580:	63 b0 04 00 	or s3, s3, 300
   11584:	c3 40 00 a8 	load_32 s6, 16(s3)
   11588:	a0 00 83 c1 	cmplt_u s5, s0, s6
   1158c:	05 39 00 f4 	bnz s5, 1824 <dispose_chunk+0x758>
   11590:	a3 50 00 a8 	load_32 s5, 20(s3)
   11594:	24 80 50 c0 	add_i s1, s4, s1
   11598:	a5 00 00 c1 	cmpeq_i s5, s5, s0
   1159c:	a5 03 00 f4 	bnz s5, 116 <dispose_chunk+0xbc>
   115a0:	a4 fc 03 16 	cmpgt_u s5, s4, 255
   115a4:	65 04 00 f4 	bnz s5, 140 <dispose_chunk+0xdc>
   115a8:	e4 0c 00 0a 	shr s7, s4, 3
   115ac:	80 20 00 a8 	load_32 s4, 8(s0)
   115b0:	a7 0c 00 0b 	shl s5, s7, 3
   115b4:	a3 80 52 c0 	add_i s5, s3, s5
   115b8:	05 a1 00 05 	add_i s8, s5, 40
   115bc:	a0 30 00 a8 	load_32 s5, 12(s0)
   115c0:	24 01 04 c1 	cmpeq_i s9, s4, s8
   115c4:	c9 00 00 f4 	bnz s9, 24 <dispose_chunk+0x88>
   115c8:	26 01 62 c1 	cmpgt_u s9, s6, s4
   115cc:	09 37 00 f4 	bnz s9, 1760 <dispose_chunk+0x758>
   115d0:	24 31 00 a8 	load_32 s9, 12(s4)
   115d4:	29 01 10 c1 	cmpne_i s9, s9, s0
   115d8:	a9 36 00 f4 	bnz s9, 1748 <dispose_chunk+0x758>
   115dc:	25 01 12 c1 	cmpne_i s9, s5, s4
   115e0:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x94>
   115e4:	29 00 00 f6 	b 164 <dispose_chunk+0x134>
   115e8:	65 00 04 c1 	cmpeq_i s3, s5, s8
   115ec:	c3 00 00 f4 	bnz s3, 24 <dispose_chunk+0xb0>
   115f0:	66 80 62 c1 	cmpgt_u s3, s6, s5
   115f4:	c3 35 00 f4 	bnz s3, 1720 <dispose_chunk+0x758>
   115f8:	65 20 00 a8 	load_32 s3, 8(s5)
   115fc:	63 00 10 c1 	cmpne_i s3, s3, s0
   11600:	63 35 00 f4 	bnz s3, 1708 <dispose_chunk+0x758>
   11604:	a4 30 00 88 	store_32 s5, 12(s4)
   11608:	85 20 00 88 	store_32 s4, 8(s5)
   1160c:	67 00 00 f6 	b 412 <dispose_chunk+0x254>
   11610:	82 10 00 a8 	load_32 s4, 4(s2)
   11614:	a4 0c 00 01 	and s5, s4, 3
   11618:	a5 0c 00 11 	cmpne_i s5, s5, 3
   1161c:	65 0c 00 f4 	bnz s5, 396 <dispose_chunk+0x254>
   11620:	23 20 00 88 	store_32 s1, 8(s3)
   11624:	64 f8 ff 01 	and s3, s4, -2
   11628:	62 10 00 88 	store_32 s3, 4(s2)
   1162c:	bf 00 00 f6 	b 764 <dispose_chunk+0x3d4>
   11630:	80 60 00 a8 	load_32 s4, 24(s0)
   11634:	a0 30 00 a8 	load_32 s5, 12(s0)
   11638:	e5 00 00 c1 	cmpeq_i s7, s5, s0
   1163c:	c7 01 00 f4 	bnz s7, 56 <dispose_chunk+0x120>
   11640:	e0 20 00 a8 	load_32 s7, 8(s0)
   11644:	c6 80 63 c1 	cmpgt_u s6, s6, s7
   11648:	26 33 00 f4 	bnz s6, 1636 <dispose_chunk+0x758>
   1164c:	c7 30 00 a8 	load_32 s6, 12(s7)
   11650:	c6 00 10 c1 	cmpne_i s6, s6, s0
   11654:	c6 32 00 f4 	bnz s6, 1624 <dispose_chunk+0x758>
   11658:	c5 20 00 a8 	load_32 s6, 8(s5)
   1165c:	c6 00 10 c1 	cmpne_i s6, s6, s0
   11660:	66 32 00 f4 	bnz s6, 1612 <dispose_chunk+0x758>
   11664:	a7 30 00 88 	store_32 s5, 12(s7)
   11668:	e5 20 00 88 	store_32 s7, 8(s5)
   1166c:	e4 09 00 f2 	bz s4, 316 <dispose_chunk+0x254>
   11670:	1d 00 00 f6 	b 116 <dispose_chunk+0x190>
   11674:	00 51 00 a8 	load_32 s8, 20(s0)
   11678:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x12c>
   1167c:	0a 00 00 f6 	b 40 <dispose_chunk+0x150>
   11680:	e0 50 00 05 	add_i s7, s0, 20
   11684:	0b 00 00 f6 	b 44 <dispose_chunk+0x15c>
   11688:	80 04 00 0f 	move s4, 1
   1168c:	a3 00 00 a8 	load_32 s5, (s3)
   11690:	84 80 b3 c0 	shl s4, s4, s7
   11694:	84 fc ff 03 	xor s4, s4, -1
   11698:	85 00 12 c0 	and s4, s5, s4
   1169c:	83 00 00 88 	store_32 s4, (s3)
   116a0:	42 00 00 f6 	b 264 <dispose_chunk+0x254>
   116a4:	e0 40 00 05 	add_i s7, s0, 16
   116a8:	07 01 00 a8 	load_32 s8, (s7)
   116ac:	48 2f 00 f2 	bz s8, 1512 <dispose_chunk+0x740>
   116b0:	a0 00 f4 c0 	move s5, s8
   116b4:	05 51 00 a8 	load_32 s8, 20(s5)
   116b8:	20 81 f3 c0 	move s9, s7
   116bc:	e5 50 00 05 	add_i s7, s5, 20
   116c0:	88 ff ff f5 	bnz s8, -16 <dispose_chunk+0x15c>
   116c4:	05 41 00 a8 	load_32 s8, 16(s5)
   116c8:	e5 40 00 05 	add_i s7, s5, 16
   116cc:	28 ff ff f5 	bnz s8, -28 <dispose_chunk+0x15c>
   116d0:	c6 80 64 c1 	cmpgt_u s6, s6, s9
   116d4:	c6 2e 00 f4 	bnz s6, 1496 <dispose_chunk+0x758>
   116d8:	c0 00 00 0f 	move s6, 0
   116dc:	c9 00 00 88 	store_32 s6, (s9)
   116e0:	44 06 00 f2 	bz s4, 200 <dispose_chunk+0x254>
   116e4:	c0 70 00 a8 	load_32 s6, 28(s0)
   116e8:	e6 08 00 0b 	shl s7, s6, 2
   116ec:	e3 80 53 c0 	add_i s7, s3, s7
   116f0:	07 c1 04 a8 	load_32 s8, 304(s7)
   116f4:	08 01 10 c1 	cmpne_i s8, s8, s0
   116f8:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x1ac>
   116fc:	0c 00 00 f6 	b 48 <dispose_chunk+0x1d8>
   11700:	c3 40 00 a8 	load_32 s6, 16(s3)
   11704:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   11708:	26 2d 00 f4 	bnz s6, 1444 <dispose_chunk+0x758>
   1170c:	c4 40 00 a8 	load_32 s6, 16(s4)
   11710:	c6 00 00 c1 	cmpeq_i s6, s6, s0
   11714:	06 02 00 f4 	bnz s6, 64 <dispose_chunk+0x200>
   11718:	c0 50 00 0f 	move s6, 20
   1171c:	c4 00 53 c0 	add_i s6, s4, s6
   11720:	a6 00 00 88 	store_32 s5, (s6)
   11724:	25 04 00 f2 	bz s5, 132 <dispose_chunk+0x254>
   11728:	0f 00 00 f6 	b 60 <dispose_chunk+0x210>
   1172c:	e7 c0 04 05 	add_i s7, s7, 304
   11730:	a7 00 00 88 	store_32 s5, (s7)
   11734:	85 01 00 f4 	bnz s5, 48 <dispose_chunk+0x210>
   11738:	80 04 00 0f 	move s4, 1
   1173c:	a3 10 00 a8 	load_32 s5, 4(s3)
   11740:	84 00 b3 c0 	shl s4, s4, s6
   11744:	84 fc ff 03 	xor s4, s4, -1
   11748:	85 00 12 c0 	and s4, s5, s4
   1174c:	83 10 00 88 	store_32 s4, 4(s3)
   11750:	16 00 00 f6 	b 88 <dispose_chunk+0x254>
   11754:	c0 40 00 0f 	move s6, 16
   11758:	c4 00 53 c0 	add_i s6, s4, s6
   1175c:	a6 00 00 88 	store_32 s5, (s6)
   11760:	45 02 00 f2 	bz s5, 72 <dispose_chunk+0x254>
   11764:	c3 40 00 a8 	load_32 s6, 16(s3)
   11768:	e6 80 62 c1 	cmpgt_u s7, s6, s5
   1176c:	07 2a 00 f4 	bnz s7, 1344 <dispose_chunk+0x758>
   11770:	85 60 00 88 	store_32 s4, 24(s5)
   11774:	80 40 00 a8 	load_32 s4, 16(s0)
   11778:	a4 00 00 f2 	bz s4, 20 <dispose_chunk+0x238>
   1177c:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   11780:	66 29 00 f4 	bnz s6, 1324 <dispose_chunk+0x758>
   11784:	85 40 00 88 	store_32 s4, 16(s5)
   11788:	a4 60 00 88 	store_32 s5, 24(s4)
   1178c:	80 50 00 a8 	load_32 s4, 20(s0)
   11790:	c4 00 00 f2 	bz s4, 24 <dispose_chunk+0x254>
   11794:	63 40 00 a8 	load_32 s3, 16(s3)
   11798:	63 00 62 c1 	cmpgt_u s3, s3, s4
   1179c:	83 28 00 f4 	bnz s3, 1296 <dispose_chunk+0x758>
   117a0:	85 50 00 88 	store_32 s4, 20(s5)
   117a4:	a4 60 00 88 	store_32 s5, 24(s4)
   117a8:	6c 00 00 4f 	movehi s3, 12
   117ac:	63 b0 04 00 	or s3, s3, 300
   117b0:	e3 40 00 a8 	load_32 s7, 16(s3)
   117b4:	82 80 83 c1 	cmplt_u s4, s2, s7
   117b8:	a4 27 00 f4 	bnz s4, 1268 <dispose_chunk+0x758>
   117bc:	82 10 00 a8 	load_32 s4, 4(s2)
   117c0:	a4 08 00 01 	and s5, s4, 2
   117c4:	a5 04 00 f4 	bnz s5, 148 <dispose_chunk+0x304>
   117c8:	a3 60 00 a8 	load_32 s5, 24(s3)
   117cc:	a5 00 11 c1 	cmpne_i s5, s5, s2
   117d0:	45 00 00 f4 	bnz s5, 8 <dispose_chunk+0x284>
   117d4:	43 00 00 f6 	b 268 <dispose_chunk+0x38c>
   117d8:	a3 50 00 a8 	load_32 s5, 20(s3)
   117dc:	a5 00 11 c1 	cmpne_i s5, s5, s2
   117e0:	45 00 00 f4 	bnz s5, 8 <dispose_chunk+0x294>
   117e4:	4c 00 00 f6 	b 304 <dispose_chunk+0x3c0>
   117e8:	a4 fc 03 16 	cmpgt_u s5, s4, 255
   117ec:	e5 0b 00 f4 	bnz s5, 380 <dispose_chunk+0x414>
   117f0:	04 0d 00 0a 	shr s8, s4, 3
   117f4:	a2 20 00 a8 	load_32 s5, 8(s2)
   117f8:	c8 0c 00 0b 	shl s6, s8, 3
   117fc:	c3 00 53 c0 	add_i s6, s3, s6
   11800:	26 a1 00 05 	add_i s9, s6, 40
   11804:	c2 30 00 a8 	load_32 s6, 12(s2)
   11808:	45 81 04 c1 	cmpeq_i s10, s5, s9
   1180c:	ca 00 00 f4 	bnz s10, 24 <dispose_chunk+0x2d0>
   11810:	47 81 62 c1 	cmpgt_u s10, s7, s5
   11814:	ca 24 00 f4 	bnz s10, 1176 <dispose_chunk+0x758>
   11818:	45 31 00 a8 	load_32 s10, 12(s5)
   1181c:	4a 01 11 c1 	cmpne_i s10, s10, s2
   11820:	6a 24 00 f4 	bnz s10, 1164 <dispose_chunk+0x758>
   11824:	46 81 12 c1 	cmpne_i s10, s6, s5
   11828:	4a 00 00 f4 	bnz s10, 8 <dispose_chunk+0x2dc>
   1182c:	c5 00 00 f6 	b 788 <dispose_chunk+0x5ec>
   11830:	06 81 04 c1 	cmpeq_i s8, s6, s9
   11834:	c8 00 00 f4 	bnz s8, 24 <dispose_chunk+0x2f8>
   11838:	e7 00 63 c1 	cmpgt_u s7, s7, s6
   1183c:	87 23 00 f4 	bnz s7, 1136 <dispose_chunk+0x758>
   11840:	e6 20 00 a8 	load_32 s7, 8(s6)
   11844:	47 00 11 c1 	cmpne_i s2, s7, s2
   11848:	22 23 00 f4 	bnz s2, 1124 <dispose_chunk+0x758>
   1184c:	c5 30 00 88 	store_32 s6, 12(s5)
   11850:	a6 20 00 88 	store_32 s5, 8(s6)
   11854:	03 01 00 f6 	b 1036 <dispose_chunk+0x70c>
   11858:	84 f8 ff 01 	and s4, s4, -2
   1185c:	82 10 00 88 	store_32 s4, 4(s2)
   11860:	40 80 50 c0 	add_i s2, s0, s1
   11864:	81 04 00 00 	or s4, s1, 1
   11868:	80 10 00 88 	store_32 s4, 4(s0)
   1186c:	22 00 00 88 	store_32 s1, (s2)
   11870:	41 fc 03 16 	cmpgt_u s2, s1, 255
   11874:	02 02 00 f4 	bnz s2, 64 <dispose_chunk+0x360>
   11878:	21 0c 00 0a 	shr s1, s1, 3
   1187c:	43 00 00 a8 	load_32 s2, (s3)
   11880:	80 04 00 0f 	move s4, 1
   11884:	a1 0c 00 0b 	shl s5, s1, 3
   11888:	a3 80 52 c0 	add_i s5, s3, s5
   1188c:	84 80 b0 c0 	shl s4, s4, s1
   11890:	c2 00 12 c0 	and s6, s2, s4
   11894:	25 a0 00 05 	add_i s1, s5, 40
   11898:	46 00 00 f4 	bnz s6, 8 <dispose_chunk+0x34c>
   1189c:	29 00 00 f6 	b 164 <dispose_chunk+0x3ec>
   118a0:	41 20 00 a8 	load_32 s2, 8(s1)
   118a4:	63 40 00 a8 	load_32 s3, 16(s3)
   118a8:	63 00 91 c1 	cmple_u s3, s3, s2
   118ac:	03 05 00 f4 	bnz s3, 160 <dispose_chunk+0x3f8>
   118b0:	ff 00 00 f6 	b 1020 <dispose_chunk+0x758>
   118b4:	40 00 00 0f 	move s2, 0
   118b8:	a1 20 00 0a 	shr s5, s1, 8
   118bc:	80 00 f1 c0 	move s4, s2
   118c0:	e5 0a 00 f2 	bz s5, 348 <dispose_chunk+0x4c8>
   118c4:	9f fc 00 4f 	movehi s4, 2047
   118c8:	84 fc 7f 00 	or s4, s4, 8191
   118cc:	81 00 62 c1 	cmpgt_u s4, s1, s4
   118d0:	44 00 00 f4 	bnz s4, 8 <dispose_chunk+0x384>
   118d4:	36 00 00 f6 	b 216 <dispose_chunk+0x458>
   118d8:	80 7c 00 0f 	move s4, 31
   118dc:	50 00 00 f6 	b 320 <dispose_chunk+0x4c8>
   118e0:	43 30 00 a8 	load_32 s2, 12(s3)
   118e4:	22 80 50 c0 	add_i s1, s2, s1
   118e8:	23 30 00 88 	store_32 s1, 12(s3)
   118ec:	03 60 00 88 	store_32 s0, 24(s3)
   118f0:	21 04 00 00 	or s1, s1, 1
   118f4:	20 10 00 88 	store_32 s1, 4(s0)
   118f8:	23 50 00 a8 	load_32 s1, 20(s3)
   118fc:	00 80 10 c1 	cmpne_i s0, s0, s1
   11900:	40 00 00 f4 	bnz s0, 8 <dispose_chunk+0x3b4>
   11904:	84 00 00 f6 	b 528 <dispose_chunk+0x5c0>
   11908:	fe f3 00 a8 	load_32 ra, 60(sp)
   1190c:	de 03 01 05 	add_i sp, sp, 64
   11910:	1f 00 00 f0 	ret
   11914:	43 20 00 a8 	load_32 s2, 8(s3)
   11918:	22 80 50 c0 	add_i s1, s2, s1
   1191c:	23 20 00 88 	store_32 s1, 8(s3)
   11920:	03 50 00 88 	store_32 s0, 20(s3)
   11924:	40 80 50 c0 	add_i s2, s0, s1
   11928:	61 04 00 00 	or s3, s1, 1
   1192c:	60 10 00 88 	store_32 s3, 4(s0)
   11930:	22 00 00 88 	store_32 s1, (s2)
   11934:	fe f3 00 a8 	load_32 ra, 60(sp)
   11938:	de 03 01 05 	add_i sp, sp, 64
   1193c:	1f 00 00 f0 	ret
   11940:	42 00 02 c0 	or s2, s2, s4
   11944:	43 00 00 88 	store_32 s2, (s3)
   11948:	40 80 f0 c0 	move s2, s1
   1194c:	01 20 00 88 	store_32 s0, 8(s1)
   11950:	02 30 00 88 	store_32 s0, 12(s2)
   11954:	40 20 00 88 	store_32 s2, 8(s0)
   11958:	20 30 00 88 	store_32 s1, 12(s0)
   1195c:	fe f3 00 a8 	load_32 ra, 60(sp)
   11960:	de 03 01 05 	add_i sp, sp, 64
   11964:	1f 00 00 f0 	ret
   11968:	a2 60 00 a8 	load_32 s5, 24(s2)
   1196c:	c2 30 00 a8 	load_32 s6, 12(s2)
   11970:	06 01 01 c1 	cmpeq_i s8, s6, s2
   11974:	c8 0d 00 f4 	bnz s8, 440 <dispose_chunk+0x5d8>
   11978:	02 21 00 a8 	load_32 s8, 8(s2)
   1197c:	e7 00 64 c1 	cmpgt_u s7, s7, s8
   11980:	67 19 00 f4 	bnz s7, 812 <dispose_chunk+0x758>
   11984:	e8 30 00 a8 	load_32 s7, 12(s8)
   11988:	e7 00 11 c1 	cmpne_i s7, s7, s2
   1198c:	07 19 00 f4 	bnz s7, 800 <dispose_chunk+0x758>
   11990:	e6 20 00 a8 	load_32 s7, 8(s6)
   11994:	e7 00 11 c1 	cmpne_i s7, s7, s2
   11998:	a7 18 00 f4 	bnz s7, 788 <dispose_chunk+0x758>
   1199c:	c8 30 00 88 	store_32 s6, 12(s8)
   119a0:	06 21 00 88 	store_32 s8, 8(s6)
   119a4:	e5 15 00 f2 	bz s5, 700 <dispose_chunk+0x70c>
   119a8:	7d 00 00 f6 	b 500 <dispose_chunk+0x648>
   119ac:	9f 0c 00 4f 	movehi s4, 127
   119b0:	df 04 00 4f 	movehi s6, 63
   119b4:	fe 00 00 4f 	movehi s7, 30
   119b8:	84 00 7c 00 	or s4, s4, 7936
   119bc:	85 00 52 c0 	add_i s4, s5, s4
   119c0:	c6 00 40 00 	or s6, s6, 4096
   119c4:	84 40 00 0a 	shr s4, s4, 16
   119c8:	84 20 00 01 	and s4, s4, 8
   119cc:	a5 00 b2 c0 	shl s5, s5, s4
   119d0:	c5 00 53 c0 	add_i s6, s5, s6
   119d4:	c6 40 00 0a 	shr s6, s6, 16
   119d8:	c6 10 00 01 	and s6, s6, 4
   119dc:	a5 00 b3 c0 	shl s5, s5, s6
   119e0:	86 00 02 c0 	or s4, s6, s4
   119e4:	e5 80 53 c0 	add_i s7, s5, s7
   119e8:	e7 40 00 0a 	shr s7, s7, 16
   119ec:	c7 08 00 01 	and s6, s7, 2
   119f0:	e0 38 00 0f 	move s7, 14
   119f4:	84 00 03 c0 	or s4, s4, s6
   119f8:	a5 00 b3 c0 	shl s5, s5, s6
   119fc:	87 00 62 c0 	sub_i s4, s7, s4
   11a00:	a5 3c 00 0a 	shr s5, s5, 15
   11a04:	84 80 52 c0 	add_i s4, s4, s5
   11a08:	a4 1c 00 05 	add_i s5, s4, 7
   11a0c:	a1 80 a2 c0 	shr s5, s1, s5
   11a10:	84 04 00 0b 	shl s4, s4, 1
   11a14:	a5 04 00 01 	and s5, s5, 1
   11a18:	85 00 02 c0 	or s4, s5, s4
   11a1c:	80 70 00 88 	store_32 s4, 28(s0)
   11a20:	c4 08 00 0b 	shl s6, s4, 2
   11a24:	40 50 00 88 	store_32 s2, 20(s0)
   11a28:	e3 00 53 c0 	add_i s7, s3, s6
   11a2c:	40 40 00 88 	store_32 s2, 16(s0)
   11a30:	40 04 00 0f 	move s2, 1
   11a34:	a3 10 00 a8 	load_32 s5, 4(s3)
   11a38:	c2 00 b2 c0 	shl s6, s2, s4
   11a3c:	47 c0 04 05 	add_i s2, s7, 304
   11a40:	05 01 13 c0 	and s8, s5, s6
   11a44:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x4f8>
   11a48:	08 00 00 f6 	b 32 <dispose_chunk+0x514>
   11a4c:	a2 00 00 a8 	load_32 s5, (s2)
   11a50:	c4 7c 00 10 	cmpeq_i s6, s4, 31
   11a54:	26 01 00 f4 	bnz s6, 36 <dispose_chunk+0x524>
   11a58:	40 64 00 0f 	move s2, 25
   11a5c:	84 04 00 0a 	shr s4, s4, 1
   11a60:	42 00 62 c0 	sub_i s2, s2, s4
   11a64:	06 00 00 f6 	b 24 <dispose_chunk+0x528>
   11a68:	25 00 03 c0 	or s1, s5, s6
   11a6c:	23 10 00 88 	store_32 s1, 4(s3)
   11a70:	02 00 00 88 	store_32 s0, (s2)
   11a74:	13 00 00 f6 	b 76 <dispose_chunk+0x56c>
   11a78:	40 00 00 0f 	move s2, 0
   11a7c:	81 00 b1 c0 	shl s4, s1, s2
   11a80:	40 80 f2 c0 	move s2, s5
   11a84:	a2 10 00 a8 	load_32 s5, 4(s2)
   11a88:	a5 e0 ff 01 	and s5, s5, -8
   11a8c:	a5 80 00 c1 	cmpeq_i s5, s5, s1
   11a90:	45 02 00 f4 	bnz s5, 72 <dispose_chunk+0x584>
   11a94:	a4 74 00 0a 	shr s5, s4, 29
   11a98:	84 04 00 0b 	shl s4, s4, 1
   11a9c:	a5 10 00 01 	and s5, s5, 4
   11aa0:	c2 80 52 c0 	add_i s6, s2, s5
   11aa4:	a6 40 00 a8 	load_32 s5, 16(s6)
   11aa8:	c5 fe ff f5 	bnz s5, -40 <dispose_chunk+0x52c>
   11aac:	63 40 00 a8 	load_32 s3, 16(s3)
   11ab0:	26 40 00 05 	add_i s1, s6, 16
   11ab4:	63 80 60 c1 	cmpgt_u s3, s3, s1
   11ab8:	a3 0f 00 f4 	bnz s3, 500 <dispose_chunk+0x758>
   11abc:	01 00 00 88 	store_32 s0, (s1)
   11ac0:	40 60 00 88 	store_32 s2, 24(s0)
   11ac4:	00 30 00 88 	store_32 s0, 12(s0)
   11ac8:	00 20 00 88 	store_32 s0, 8(s0)
   11acc:	fe f3 00 a8 	load_32 ra, 60(sp)
   11ad0:	de 03 01 05 	add_i sp, sp, 64
   11ad4:	1f 00 00 f0 	ret
   11ad8:	22 20 00 a8 	load_32 s1, 8(s2)
   11adc:	63 40 00 a8 	load_32 s3, 16(s3)
   11ae0:	83 80 60 c1 	cmpgt_u s4, s3, s1
   11ae4:	44 0e 00 f4 	bnz s4, 456 <dispose_chunk+0x758>
   11ae8:	63 00 61 c1 	cmpgt_u s3, s3, s2
   11aec:	03 0e 00 f4 	bnz s3, 448 <dispose_chunk+0x758>
   11af0:	01 30 00 88 	store_32 s0, 12(s1)
   11af4:	02 20 00 88 	store_32 s0, 8(s2)
   11af8:	20 20 00 88 	store_32 s1, 8(s0)
   11afc:	20 00 00 0f 	move s1, 0
   11b00:	40 30 00 88 	store_32 s2, 12(s0)
   11b04:	20 60 00 88 	store_32 s1, 24(s0)
   11b08:	fe f3 00 a8 	load_32 ra, 60(sp)
   11b0c:	de 03 01 05 	add_i sp, sp, 64
   11b10:	1f 00 00 f0 	ret
   11b14:	00 00 00 0f 	move s0, 0
   11b18:	03 50 00 88 	store_32 s0, 20(s3)
   11b1c:	03 20 00 88 	store_32 s0, 8(s3)
   11b20:	fe f3 00 a8 	load_32 ra, 60(sp)
   11b24:	de 03 01 05 	add_i sp, sp, 64
   11b28:	1f 00 00 f0 	ret
   11b2c:	22 51 00 a8 	load_32 s9, 20(s2)
   11b30:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x5e4>
   11b34:	0a 00 00 f6 	b 40 <dispose_chunk+0x608>
   11b38:	02 51 00 05 	add_i s8, s2, 20
   11b3c:	0b 00 00 f6 	b 44 <dispose_chunk+0x614>
   11b40:	40 04 00 0f 	move s2, 1
   11b44:	a3 00 00 a8 	load_32 s5, (s3)
   11b48:	42 00 b4 c0 	shl s2, s2, s8
   11b4c:	42 fc ff 03 	xor s2, s2, -1
   11b50:	45 00 11 c0 	and s2, s5, s2
   11b54:	43 00 00 88 	store_32 s2, (s3)
   11b58:	42 00 00 f6 	b 264 <dispose_chunk+0x70c>
   11b5c:	02 41 00 05 	add_i s8, s2, 16
   11b60:	28 01 00 a8 	load_32 s9, (s8)
   11b64:	e9 09 00 f2 	bz s9, 316 <dispose_chunk+0x74c>
   11b68:	c0 80 f4 c0 	move s6, s9
   11b6c:	26 51 00 a8 	load_32 s9, 20(s6)
   11b70:	40 01 f4 c0 	move s10, s8
   11b74:	06 51 00 05 	add_i s8, s6, 20
   11b78:	89 ff ff f5 	bnz s9, -16 <dispose_chunk+0x614>
   11b7c:	26 41 00 a8 	load_32 s9, 16(s6)
   11b80:	06 41 00 05 	add_i s8, s6, 16
   11b84:	29 ff ff f5 	bnz s9, -28 <dispose_chunk+0x614>
   11b88:	e7 00 65 c1 	cmpgt_u s7, s7, s10
   11b8c:	07 09 00 f4 	bnz s7, 288 <dispose_chunk+0x758>
   11b90:	e0 00 00 0f 	move s7, 0
   11b94:	ea 00 00 88 	store_32 s7, (s10)
   11b98:	45 06 00 f2 	bz s5, 200 <dispose_chunk+0x70c>
   11b9c:	e2 70 00 a8 	load_32 s7, 28(s2)
   11ba0:	07 09 00 0b 	shl s8, s7, 2
   11ba4:	03 01 54 c0 	add_i s8, s3, s8
   11ba8:	28 c1 04 a8 	load_32 s9, 304(s8)
   11bac:	29 01 11 c1 	cmpne_i s9, s9, s2
   11bb0:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x664>
   11bb4:	0c 00 00 f6 	b 48 <dispose_chunk+0x690>
   11bb8:	e3 40 00 a8 	load_32 s7, 16(s3)
   11bbc:	e7 80 62 c1 	cmpgt_u s7, s7, s5
   11bc0:	67 07 00 f4 	bnz s7, 236 <dispose_chunk+0x758>
   11bc4:	e5 40 00 a8 	load_32 s7, 16(s5)
   11bc8:	e7 00 01 c1 	cmpeq_i s7, s7, s2
   11bcc:	07 02 00 f4 	bnz s7, 64 <dispose_chunk+0x6b8>
   11bd0:	e0 50 00 0f 	move s7, 20
   11bd4:	e5 80 53 c0 	add_i s7, s5, s7
   11bd8:	c7 00 00 88 	store_32 s6, (s7)
   11bdc:	26 04 00 f2 	bz s6, 132 <dispose_chunk+0x70c>
   11be0:	0f 00 00 f6 	b 60 <dispose_chunk+0x6c8>
   11be4:	08 c1 04 05 	add_i s8, s8, 304
   11be8:	c8 00 00 88 	store_32 s6, (s8)
   11bec:	86 01 00 f4 	bnz s6, 48 <dispose_chunk+0x6c8>
   11bf0:	40 04 00 0f 	move s2, 1
   11bf4:	a3 10 00 a8 	load_32 s5, 4(s3)
   11bf8:	42 80 b3 c0 	shl s2, s2, s7
   11bfc:	42 fc ff 03 	xor s2, s2, -1
   11c00:	45 00 11 c0 	and s2, s5, s2
   11c04:	43 10 00 88 	store_32 s2, 4(s3)
   11c08:	16 00 00 f6 	b 88 <dispose_chunk+0x70c>
   11c0c:	e0 40 00 0f 	move s7, 16
   11c10:	e5 80 53 c0 	add_i s7, s5, s7
   11c14:	c7 00 00 88 	store_32 s6, (s7)
   11c18:	46 02 00 f2 	bz s6, 72 <dispose_chunk+0x70c>
   11c1c:	e3 40 00 a8 	load_32 s7, 16(s3)
   11c20:	07 01 63 c1 	cmpgt_u s8, s7, s6
   11c24:	48 04 00 f4 	bnz s8, 136 <dispose_chunk+0x758>
   11c28:	a6 60 00 88 	store_32 s5, 24(s6)
   11c2c:	a2 40 00 a8 	load_32 s5, 16(s2)
   11c30:	a5 00 00 f2 	bz s5, 20 <dispose_chunk+0x6f0>
   11c34:	e7 80 62 c1 	cmpgt_u s7, s7, s5
   11c38:	a7 03 00 f4 	bnz s7, 116 <dispose_chunk+0x758>
   11c3c:	a6 40 00 88 	store_32 s5, 16(s6)
   11c40:	c5 60 00 88 	store_32 s6, 24(s5)
   11c44:	42 50 00 a8 	load_32 s2, 20(s2)
   11c48:	c2 00 00 f2 	bz s2, 24 <dispose_chunk+0x70c>
   11c4c:	a3 40 00 a8 	load_32 s5, 16(s3)
   11c50:	a5 00 61 c1 	cmpgt_u s5, s5, s2
   11c54:	c5 02 00 f4 	bnz s5, 88 <dispose_chunk+0x758>
   11c58:	46 50 00 88 	store_32 s2, 20(s6)
   11c5c:	c2 60 00 88 	store_32 s6, 24(s2)
   11c60:	44 e0 ff 01 	and s2, s4, -8
   11c64:	22 80 50 c0 	add_i s1, s2, s1
   11c68:	40 80 50 c0 	add_i s2, s0, s1
   11c6c:	81 04 00 00 	or s4, s1, 1
   11c70:	80 10 00 88 	store_32 s4, 4(s0)
   11c74:	22 00 00 88 	store_32 s1, (s2)
   11c78:	43 50 00 a8 	load_32 s2, 20(s3)
   11c7c:	40 00 11 c1 	cmpne_i s2, s0, s2
   11c80:	82 df ff f5 	bnz s2, -1040 <dispose_chunk+0x31c>
   11c84:	23 20 00 88 	store_32 s1, 8(s3)
   11c88:	fe f3 00 a8 	load_32 ra, 60(sp)
   11c8c:	de 03 01 05 	add_i sp, sp, 64
   11c90:	1f 00 00 f0 	ret
   11c94:	a0 00 00 0f 	move s5, 0
   11c98:	84 d8 ff f3 	bz s4, -1264 <dispose_chunk+0x254>
   11c9c:	92 fe ff f7 	b -1464 <dispose_chunk+0x190>
   11ca0:	c0 00 00 0f 	move s6, 0
   11ca4:	e5 fd ff f3 	bz s5, -68 <dispose_chunk+0x70c>
   11ca8:	bd ff ff f7 	b -268 <dispose_chunk+0x648>
   11cac:	2e 00 00 f8 	call 184 <abort>

0000000000011cb0 memset:
   11cb0:	60 fc 00 01 	and s3, s0, 63
   11cb4:	81 fc 03 01 	and s4, s1, 255
   11cb8:	03 04 00 f4 	bnz s3, 128 <memset+0x88>
   11cbc:	62 04 01 18 	cmplt_u s3, s2, 65
   11cc0:	c3 03 00 f4 	bnz s3, 120 <memset+0x88>
   11cc4:	61 60 00 0b 	shl s3, s1, 24
   11cc8:	a4 20 00 0b 	shl s5, s4, 8
   11ccc:	63 00 02 c0 	or s3, s3, s4
   11cd0:	63 80 02 c0 	or s3, s3, s5
   11cd4:	a4 40 00 0b 	shl s5, s4, 16
   11cd8:	63 80 02 c0 	or s3, s3, s5
   11cdc:	00 80 f1 c4 	move v0, s3
   11ce0:	60 00 f0 c0 	move s3, s0
   11ce4:	42 00 ff 05 	add_i s2, s2, -64
   11ce8:	03 00 00 8e 	store_v v0, (s3)
   11cec:	63 00 01 05 	add_i s3, s3, 64
   11cf0:	a2 00 01 16 	cmpgt_u s5, s2, 64
   11cf4:	85 ff ff f5 	bnz s5, -16 <memset+0x34>
   11cf8:	a3 0c 00 01 	and s5, s3, 3
   11cfc:	65 02 00 f4 	bnz s5, 76 <memset+0x98>
   11d00:	a2 14 00 18 	cmplt_u s5, s2, 5
   11d04:	25 02 00 f4 	bnz s5, 68 <memset+0x98>
   11d08:	a1 60 00 0b 	shl s5, s1, 24
   11d0c:	c4 20 00 0b 	shl s6, s4, 8
   11d10:	a5 00 02 c0 	or s5, s5, s4
   11d14:	84 40 00 0b 	shl s4, s4, 16
   11d18:	a5 00 03 c0 	or s5, s5, s6
   11d1c:	85 00 02 c0 	or s4, s5, s4
   11d20:	42 f0 ff 05 	add_i s2, s2, -4
   11d24:	83 00 00 88 	store_32 s4, (s3)
   11d28:	63 10 00 05 	add_i s3, s3, 4
   11d2c:	a2 10 00 16 	cmpgt_u s5, s2, 4
   11d30:	85 ff ff f5 	bnz s5, -16 <memset+0x70>
   11d34:	06 00 00 f6 	b 24 <memset+0x9c>
   11d38:	60 00 f0 c0 	move s3, s0
   11d3c:	a3 0c 00 01 	and s5, s3, 3
   11d40:	45 00 00 f4 	bnz s5, 8 <memset+0x98>
   11d44:	ef ff ff f7 	b -68 <memset+0x50>
   11d48:	c2 00 00 f2 	bz s2, 24 <memset+0xb0>
   11d4c:	83 04 00 05 	add_i s4, s3, 1
   11d50:	23 00 00 82 	store_8 s1, (s3)
   11d54:	42 fc ff 05 	add_i s2, s2, -1
   11d58:	60 00 f2 c0 	move s3, s4
   11d5c:	82 ff ff f5 	bnz s2, -16 <memset+0x9c>
   11d60:	1f 00 00 f0 	ret

0000000000011d64 abort:
   11d64:	de 03 ff 05 	add_i sp, sp, -64
   11d68:	fe f3 00 88 	store_32 ra, 60(sp)
   11d6c:	02 00 00 4f 	movehi s0, 2
   11d70:	00 a0 0d 00 	or s0, s0, 872
   11d74:	04 04 00 f8 	call 4112 <puts>
   11d78:	00 00 e0 c3 	break

0000000000011d7c abs:
   11d7c:	20 7c 00 09 	ashr s1, s0, 31
   11d80:	00 80 50 c0 	add_i s0, s0, s1
   11d84:	00 80 30 c0 	xor s0, s0, s1
   11d88:	1f 00 00 f0 	ret

0000000000011d8c atoi:
   11d8c:	20 00 f0 c0 	move s1, s0
   11d90:	00 00 00 0f 	move s0, 0
   11d94:	41 00 00 a2 	load_s8 s2, (s1)
   11d98:	c2 01 00 f2 	bz s2, 56 <atoi+0x44>
   11d9c:	62 40 ff 05 	add_i s3, s2, -48
   11da0:	63 24 00 16 	cmpgt_u s3, s3, 9
   11da4:	63 01 00 f4 	bnz s3, 44 <atoi+0x44>
   11da8:	00 00 00 0f 	move s0, 0
   11dac:	00 28 00 07 	mull_i s0, s0, 10
   11db0:	02 00 50 c0 	add_i s0, s2, s0
   11db4:	41 04 00 a2 	load_s8 s2, 1(s1)
   11db8:	00 40 ff 05 	add_i s0, s0, -48
   11dbc:	a2 00 00 f2 	bz s2, 20 <atoi+0x44>
   11dc0:	62 40 ff 05 	add_i s3, s2, -48
   11dc4:	21 04 00 05 	add_i s1, s1, 1
   11dc8:	63 28 00 18 	cmplt_u s3, s3, 10
   11dcc:	03 ff ff f5 	bnz s3, -32 <atoi+0x20>
   11dd0:	1f 00 00 f0 	ret

0000000000011dd4 rand:
   11dd4:	0c 00 00 4f 	movehi s0, 12
   11dd8:	52 c4 41 4f 	movehi s2, 134706
   11ddc:	61 00 00 4f 	movehi s3, 1
   11de0:	20 00 00 00 	or s1, s0, 0
   11de4:	42 b4 39 00 	or s2, s2, 3693
   11de8:	01 00 00 a8 	load_32 s0, (s1)
   11dec:	00 00 71 c0 	mull_i s0, s0, s2
   11df0:	43 e4 40 00 	or s2, s3, 4153
   11df4:	7f fc 7f 4f 	movehi s3, 262143
   11df8:	40 00 51 c0 	add_i s2, s0, s2
   11dfc:	41 00 00 88 	store_32 s2, (s1)
   11e00:	03 fc 7f 00 	or s0, s3, 8191
   11e04:	02 00 10 c0 	and s0, s2, s0
   11e08:	1f 00 00 f0 	ret

0000000000011e0c srand:
   11e0c:	2c 00 00 4f 	movehi s1, 12
   11e10:	21 00 00 00 	or s1, s1, 0
   11e14:	01 00 00 88 	store_32 s0, (s1)
   11e18:	1f 00 00 f0 	ret

0000000000011e1c bsearch:
   11e1c:	de 03 ff 05 	add_i sp, sp, -64
   11e20:	1e f3 00 88 	store_32 s24, 60(sp)
   11e24:	3e e3 00 88 	store_32 s25, 56(sp)
   11e28:	5e d3 00 88 	store_32 s26, 52(sp)
   11e2c:	7e c3 00 88 	store_32 s27, 48(sp)
   11e30:	fe b3 00 88 	store_32 ra, 44(sp)
   11e34:	22 ff ff 05 	add_i s25, s2, -1
   11e38:	9e a0 00 88 	store_32 s4, 40(sp)
   11e3c:	7e 90 00 88 	store_32 s3, 36(sp)
   11e40:	3e 80 00 88 	store_32 s1, 32(sp)
   11e44:	59 00 00 14 	cmplt_i s2, s25, 0
   11e48:	1e 70 00 88 	store_32 s0, 28(sp)
   11e4c:	c2 03 00 f4 	bnz s2, 120 <bsearch+0xa8>
   11e50:	40 03 00 0f 	move s26, 0
   11e54:	5e 63 00 88 	store_32 s26, 24(sp)
   11e58:	1a 80 5c c0 	add_i s0, s26, s25
   11e5c:	20 7c 00 0a 	shr s1, s0, 31
   11e60:	00 80 50 c0 	add_i s0, s0, s1
   11e64:	60 07 00 09 	ashr s27, s0, 1
   11e68:	1e 90 00 a8 	load_32 s0, 36(sp)
   11e6c:	3e 80 00 a8 	load_32 s1, 32(sp)
   11e70:	1b 00 70 c0 	mull_i s0, s27, s0
   11e74:	01 03 50 c0 	add_i s24, s1, s0
   11e78:	1e 70 00 a8 	load_32 s0, 28(sp)
   11e7c:	20 00 fc c0 	move s1, s24
   11e80:	5e a0 00 a8 	load_32 s2, 40(sp)
   11e84:	42 00 00 fc 	call s2
   11e88:	00 02 00 f2 	bz s0, 64 <bsearch+0xac>
   11e8c:	00 00 00 14 	cmplt_i s0, s0, 0
   11e90:	c0 00 00 f4 	bnz s0, 24 <bsearch+0x8c>
   11e94:	40 00 00 f4 	bnz s0, 8 <bsearch+0x80>
   11e98:	06 00 00 f6 	b 24 <bsearch+0x94>
   11e9c:	1a 80 5c c1 	cmple_i s0, s26, s25
   11ea0:	c0 fd ff f5 	bnz s0, -72 <bsearch+0x3c>
   11ea4:	06 00 00 f6 	b 24 <bsearch+0xa0>
   11ea8:	3b ff ff 05 	add_i s25, s27, -1
   11eac:	80 ff ff f5 	bnz s0, -16 <bsearch+0x80>
   11eb0:	5b 07 00 05 	add_i s26, s27, 1
   11eb4:	1a 80 5c c1 	cmple_i s0, s26, s25
   11eb8:	00 fd ff f5 	bnz s0, -96 <bsearch+0x3c>
   11ebc:	1e 63 00 a8 	load_32 s24, 24(sp)
   11ec0:	02 00 00 f6 	b 8 <bsearch+0xac>
   11ec4:	00 03 00 0f 	move s24, 0
   11ec8:	00 00 fc c0 	move s0, s24
   11ecc:	fe b3 00 a8 	load_32 ra, 44(sp)
   11ed0:	7e c3 00 a8 	load_32 s27, 48(sp)
   11ed4:	5e d3 00 a8 	load_32 s26, 52(sp)
   11ed8:	3e e3 00 a8 	load_32 s25, 56(sp)
   11edc:	1e f3 00 a8 	load_32 s24, 60(sp)
   11ee0:	de 03 01 05 	add_i sp, sp, 64
   11ee4:	1f 00 00 f0 	ret

0000000000011ee8 fmod:
   11ee8:	40 00 00 4f 	movehi s2, 0
   11eec:	60 80 c0 c1 	reciprocal s3, s1
   11ef0:	42 c0 05 00 	or s2, s2, 368
   11ef4:	42 00 00 a8 	load_32 s2, (s2)
   11ef8:	83 80 20 c2 	mul_f s4, s3, s1
   11efc:	82 00 12 c2 	sub_f s4, s2, s4
   11f00:	63 00 22 c2 	mul_f s3, s3, s4
   11f04:	83 80 20 c2 	mul_f s4, s3, s1
   11f08:	42 00 12 c2 	sub_f s2, s2, s4
   11f0c:	43 00 21 c2 	mul_f s2, s3, s2
   11f10:	40 00 21 c2 	mul_f s2, s0, s2
   11f14:	40 00 b1 c1 	ftoi s2, s2
   11f18:	40 00 a1 c2 	itof s2, s2
   11f1c:	22 80 20 c2 	mul_f s1, s2, s1
   11f20:	00 80 10 c2 	sub_f s0, s0, s1
   11f24:	1f 00 00 f0 	ret

0000000000011f28 sin:
   11f28:	20 00 00 4f 	movehi s1, 0
   11f2c:	60 00 00 4f 	movehi s3, 0
   11f30:	41 40 06 00 	or s2, s1, 400
   11f34:	63 c0 05 00 	or s3, s3, 368
   11f38:	22 00 00 a8 	load_32 s1, (s2)
   11f3c:	63 00 00 a8 	load_32 s3, (s3)
   11f40:	80 80 c0 c1 	reciprocal s4, s1
   11f44:	a4 80 20 c2 	mul_f s5, s4, s1
   11f48:	a3 80 12 c2 	sub_f s5, s3, s5
   11f4c:	84 80 22 c2 	mul_f s4, s4, s5
   11f50:	a4 80 20 c2 	mul_f s5, s4, s1
   11f54:	63 80 12 c2 	sub_f s3, s3, s5
   11f58:	64 80 21 c2 	mul_f s3, s4, s3
   11f5c:	80 00 00 4f 	movehi s4, 0
   11f60:	60 80 21 c2 	mul_f s3, s0, s3
   11f64:	60 80 b1 c1 	ftoi s3, s3
   11f68:	60 80 a1 c2 	itof s3, s3
   11f6c:	23 80 20 c2 	mul_f s1, s3, s1
   11f70:	20 80 10 c2 	sub_f s1, s0, s1
   11f74:	04 60 05 00 	or s0, s4, 344
   11f78:	00 00 00 a8 	load_32 s0, (s0)
   11f7c:	01 00 e0 c2 	cmplt_f s0, s1, s0
   11f80:	60 00 00 f4 	bnz s0, 12 <sin+0x64>
   11f84:	00 04 00 0f 	move s0, 1
   11f88:	02 00 00 f6 	b 8 <sin+0x68>
   11f8c:	00 fc ff 0f 	move s0, -1
   11f90:	60 00 00 4f 	movehi s3, 0
   11f94:	9f fc 7f 4f 	movehi s4, 262143
   11f98:	63 50 06 00 	or s3, s3, 404
   11f9c:	84 fc 7f 00 	or s4, s4, 8191
   11fa0:	21 00 12 c0 	and s1, s1, s4
   11fa4:	63 00 00 a8 	load_32 s3, (s3)
   11fa8:	81 80 c1 c2 	cmpgt_f s4, s1, s3
   11fac:	67 00 00 4f 	movehi s3, 7
   11fb0:	63 fc 7f 00 	or s3, s3, 8191
   11fb4:	84 80 11 c1 	cmpne_i s4, s4, s3
   11fb8:	a4 00 00 f4 	bnz s4, 20 <sin+0xa4>
   11fbc:	42 00 00 a8 	load_32 s2, (s2)
   11fc0:	60 00 00 0f 	move s3, 0
   11fc4:	03 00 60 c0 	sub_i s0, s3, s0
   11fc8:	15 00 00 f6 	b 84 <sin+0xf4>
   11fcc:	40 00 00 4f 	movehi s2, 0
   11fd0:	42 d0 05 00 	or s2, s2, 372
   11fd4:	82 00 00 a8 	load_32 s4, (s2)
   11fd8:	81 00 c2 c2 	cmpgt_f s4, s1, s4
   11fdc:	84 80 11 c1 	cmpne_i s4, s4, s3
   11fe0:	04 01 00 f4 	bnz s4, 32 <sin+0xd8>
   11fe4:	40 00 00 4f 	movehi s2, 0
   11fe8:	60 00 00 0f 	move s3, 0
   11fec:	42 90 05 00 	or s2, s2, 356
   11ff0:	03 00 60 c0 	sub_i s0, s3, s0
   11ff4:	42 00 00 a8 	load_32 s2, (s2)
   11ff8:	21 00 01 c2 	add_f s1, s1, s2
   11ffc:	09 00 00 f6 	b 36 <sin+0xf8>
   12000:	80 00 00 4f 	movehi s4, 0
   12004:	84 f0 05 00 	or s4, s4, 380
   12008:	84 00 00 a8 	load_32 s4, (s4)
   1200c:	81 00 c2 c2 	cmpgt_f s4, s1, s4
   12010:	64 80 11 c1 	cmpne_i s3, s4, s3
   12014:	63 00 00 f4 	bnz s3, 12 <sin+0xf8>
   12018:	42 00 00 a8 	load_32 s2, (s2)
   1201c:	22 80 10 c2 	sub_f s1, s2, s1
   12020:	41 80 20 c2 	mul_f s2, s1, s1
   12024:	60 00 00 4f 	movehi s3, 0
   12028:	a0 00 00 4f 	movehi s5, 0
   1202c:	00 00 a0 c2 	itof s0, s0
   12030:	63 60 06 00 	or s3, s3, 408
   12034:	a5 80 05 00 	or s5, s5, 352
   12038:	63 00 00 a8 	load_32 s3, (s3)
   1203c:	82 80 20 c2 	mul_f s4, s2, s1
   12040:	64 80 21 c2 	mul_f s3, s4, s3
   12044:	82 00 22 c2 	mul_f s4, s2, s4
   12048:	21 80 01 c2 	add_f s1, s1, s3
   1204c:	65 00 00 a8 	load_32 s3, (s5)
   12050:	a0 00 00 4f 	movehi s5, 0
   12054:	c2 00 22 c2 	mul_f s6, s2, s4
   12058:	a5 30 05 00 	or s5, s5, 332
   1205c:	64 80 21 c2 	mul_f s3, s4, s3
   12060:	80 00 00 4f 	movehi s4, 0
   12064:	21 80 01 c2 	add_f s1, s1, s3
   12068:	65 00 00 a8 	load_32 s3, (s5)
   1206c:	a2 00 23 c2 	mul_f s5, s2, s6
   12070:	84 30 06 00 	or s4, s4, 396
   12074:	66 80 21 c2 	mul_f s3, s6, s3
   12078:	c2 80 22 c2 	mul_f s6, s2, s5
   1207c:	42 00 23 c2 	mul_f s2, s2, s6
   12080:	21 80 01 c2 	add_f s1, s1, s3
   12084:	64 00 00 a8 	load_32 s3, (s4)
   12088:	80 00 00 4f 	movehi s4, 0
   1208c:	84 80 06 00 	or s4, s4, 416
   12090:	65 80 21 c2 	mul_f s3, s5, s3
   12094:	21 80 01 c2 	add_f s1, s1, s3
   12098:	64 00 00 a8 	load_32 s3, (s4)
   1209c:	80 00 00 4f 	movehi s4, 0
   120a0:	84 e0 05 00 	or s4, s4, 376
   120a4:	66 80 21 c2 	mul_f s3, s6, s3
   120a8:	21 80 01 c2 	add_f s1, s1, s3
   120ac:	64 00 00 a8 	load_32 s3, (s4)
   120b0:	42 80 21 c2 	mul_f s2, s2, s3
   120b4:	21 00 01 c2 	add_f s1, s1, s2
   120b8:	01 00 20 c2 	mul_f s0, s1, s0
   120bc:	1f 00 00 f0 	ret

00000000000120c0 cos:
   120c0:	60 00 00 4f 	movehi s3, 0
   120c4:	20 00 00 4f 	movehi s1, 0
   120c8:	a0 00 00 4f 	movehi s5, 0
   120cc:	63 40 06 00 	or s3, s3, 400
   120d0:	41 f0 05 00 	or s2, s1, 380
   120d4:	a5 c0 05 00 	or s5, s5, 368
   120d8:	22 00 00 a8 	load_32 s1, (s2)
   120dc:	83 00 00 a8 	load_32 s4, (s3)
   120e0:	a5 00 00 a8 	load_32 s5, (s5)
   120e4:	00 80 00 c2 	add_f s0, s0, s1
   120e8:	c0 00 c2 c1 	reciprocal s6, s4
   120ec:	e6 00 22 c2 	mul_f s7, s6, s4
   120f0:	e5 80 13 c2 	sub_f s7, s5, s7
   120f4:	c6 80 23 c2 	mul_f s6, s6, s7
   120f8:	26 00 22 c2 	mul_f s1, s6, s4
   120fc:	25 80 10 c2 	sub_f s1, s5, s1
   12100:	a0 00 00 4f 	movehi s5, 0
   12104:	26 80 20 c2 	mul_f s1, s6, s1
   12108:	20 80 20 c2 	mul_f s1, s0, s1
   1210c:	20 80 b0 c1 	ftoi s1, s1
   12110:	20 80 a0 c2 	itof s1, s1
   12114:	21 00 22 c2 	mul_f s1, s1, s4
   12118:	20 80 10 c2 	sub_f s1, s0, s1
   1211c:	05 60 05 00 	or s0, s5, 344
   12120:	00 00 00 a8 	load_32 s0, (s0)
   12124:	01 00 e0 c2 	cmplt_f s0, s1, s0
   12128:	60 00 00 f4 	bnz s0, 12 <cos+0x74>
   1212c:	00 04 00 0f 	move s0, 1
   12130:	02 00 00 f6 	b 8 <cos+0x78>
   12134:	00 fc ff 0f 	move s0, -1
   12138:	80 00 00 4f 	movehi s4, 0
   1213c:	bf fc 7f 4f 	movehi s5, 262143
   12140:	84 50 06 00 	or s4, s4, 404
   12144:	a5 fc 7f 00 	or s5, s5, 8191
   12148:	21 80 12 c0 	and s1, s1, s5
   1214c:	84 00 00 a8 	load_32 s4, (s4)
   12150:	a1 00 c2 c2 	cmpgt_f s5, s1, s4
   12154:	87 00 00 4f 	movehi s4, 7
   12158:	84 fc 7f 00 	or s4, s4, 8191
   1215c:	a5 00 12 c1 	cmpne_i s5, s5, s4
   12160:	a5 00 00 f4 	bnz s5, 20 <cos+0xb4>
   12164:	43 00 00 a8 	load_32 s2, (s3)
   12168:	60 00 00 0f 	move s3, 0
   1216c:	03 00 60 c0 	sub_i s0, s3, s0
   12170:	13 00 00 f6 	b 76 <cos+0xfc>
   12174:	60 00 00 4f 	movehi s3, 0
   12178:	63 d0 05 00 	or s3, s3, 372
   1217c:	a3 00 00 a8 	load_32 s5, (s3)
   12180:	a1 80 c2 c2 	cmpgt_f s5, s1, s5
   12184:	a5 00 12 c1 	cmpne_i s5, s5, s4
   12188:	05 01 00 f4 	bnz s5, 32 <cos+0xe8>
   1218c:	40 00 00 4f 	movehi s2, 0
   12190:	60 00 00 0f 	move s3, 0
   12194:	42 90 05 00 	or s2, s2, 356
   12198:	03 00 60 c0 	sub_i s0, s3, s0
   1219c:	42 00 00 a8 	load_32 s2, (s2)
   121a0:	21 00 01 c2 	add_f s1, s1, s2
   121a4:	07 00 00 f6 	b 28 <cos+0x100>
   121a8:	42 00 00 a8 	load_32 s2, (s2)
   121ac:	41 00 c1 c2 	cmpgt_f s2, s1, s2
   121b0:	42 00 12 c1 	cmpne_i s2, s2, s4
   121b4:	62 00 00 f4 	bnz s2, 12 <cos+0x100>
   121b8:	43 00 00 a8 	load_32 s2, (s3)
   121bc:	22 80 10 c2 	sub_f s1, s2, s1
   121c0:	40 00 00 4f 	movehi s2, 0
   121c4:	61 80 20 c2 	mul_f s3, s1, s1
   121c8:	81 80 21 c2 	mul_f s4, s1, s3
   121cc:	a0 00 00 4f 	movehi s5, 0
   121d0:	00 00 a0 c2 	itof s0, s0
   121d4:	42 60 06 00 	or s2, s2, 408
   121d8:	a5 80 05 00 	or s5, s5, 352
   121dc:	42 00 00 a8 	load_32 s2, (s2)
   121e0:	44 00 21 c2 	mul_f s2, s4, s2
   121e4:	83 00 22 c2 	mul_f s4, s3, s4
   121e8:	21 00 01 c2 	add_f s1, s1, s2
   121ec:	45 00 00 a8 	load_32 s2, (s5)
   121f0:	a0 00 00 4f 	movehi s5, 0
   121f4:	c3 00 22 c2 	mul_f s6, s3, s4
   121f8:	a5 30 05 00 	or s5, s5, 332
   121fc:	44 00 21 c2 	mul_f s2, s4, s2
   12200:	80 00 00 4f 	movehi s4, 0
   12204:	21 00 01 c2 	add_f s1, s1, s2
   12208:	45 00 00 a8 	load_32 s2, (s5)
   1220c:	a3 00 23 c2 	mul_f s5, s3, s6
   12210:	84 30 06 00 	or s4, s4, 396
   12214:	46 00 21 c2 	mul_f s2, s6, s2
   12218:	c3 80 22 c2 	mul_f s6, s3, s5
   1221c:	63 00 23 c2 	mul_f s3, s3, s6
   12220:	21 00 01 c2 	add_f s1, s1, s2
   12224:	44 00 00 a8 	load_32 s2, (s4)
   12228:	80 00 00 4f 	movehi s4, 0
   1222c:	84 80 06 00 	or s4, s4, 416
   12230:	45 00 21 c2 	mul_f s2, s5, s2
   12234:	21 00 01 c2 	add_f s1, s1, s2
   12238:	44 00 00 a8 	load_32 s2, (s4)
   1223c:	80 00 00 4f 	movehi s4, 0
   12240:	84 e0 05 00 	or s4, s4, 376
   12244:	46 00 21 c2 	mul_f s2, s6, s2
   12248:	21 00 01 c2 	add_f s1, s1, s2
   1224c:	44 00 00 a8 	load_32 s2, (s4)
   12250:	43 00 21 c2 	mul_f s2, s3, s2
   12254:	21 00 01 c2 	add_f s1, s1, s2
   12258:	01 00 20 c2 	mul_f s0, s1, s0
   1225c:	1f 00 00 f0 	ret

0000000000012260 sinf:
   12260:	20 00 00 4f 	movehi s1, 0
   12264:	60 00 00 4f 	movehi s3, 0
   12268:	41 40 06 00 	or s2, s1, 400
   1226c:	63 c0 05 00 	or s3, s3, 368
   12270:	22 00 00 a8 	load_32 s1, (s2)
   12274:	63 00 00 a8 	load_32 s3, (s3)
   12278:	80 80 c0 c1 	reciprocal s4, s1
   1227c:	a4 80 20 c2 	mul_f s5, s4, s1
   12280:	a3 80 12 c2 	sub_f s5, s3, s5
   12284:	84 80 22 c2 	mul_f s4, s4, s5
   12288:	a4 80 20 c2 	mul_f s5, s4, s1
   1228c:	63 80 12 c2 	sub_f s3, s3, s5
   12290:	64 80 21 c2 	mul_f s3, s4, s3
   12294:	80 00 00 4f 	movehi s4, 0
   12298:	60 80 21 c2 	mul_f s3, s0, s3
   1229c:	60 80 b1 c1 	ftoi s3, s3
   122a0:	60 80 a1 c2 	itof s3, s3
   122a4:	23 80 20 c2 	mul_f s1, s3, s1
   122a8:	20 80 10 c2 	sub_f s1, s0, s1
   122ac:	04 60 05 00 	or s0, s4, 344
   122b0:	00 00 00 a8 	load_32 s0, (s0)
   122b4:	01 00 e0 c2 	cmplt_f s0, s1, s0
   122b8:	60 00 00 f4 	bnz s0, 12 <sinf+0x64>
   122bc:	00 04 00 0f 	move s0, 1
   122c0:	02 00 00 f6 	b 8 <sinf+0x68>
   122c4:	00 fc ff 0f 	move s0, -1
   122c8:	60 00 00 4f 	movehi s3, 0
   122cc:	9f fc 7f 4f 	movehi s4, 262143
   122d0:	63 50 06 00 	or s3, s3, 404
   122d4:	84 fc 7f 00 	or s4, s4, 8191
   122d8:	21 00 12 c0 	and s1, s1, s4
   122dc:	63 00 00 a8 	load_32 s3, (s3)
   122e0:	81 80 c1 c2 	cmpgt_f s4, s1, s3
   122e4:	67 00 00 4f 	movehi s3, 7
   122e8:	63 fc 7f 00 	or s3, s3, 8191
   122ec:	84 80 11 c1 	cmpne_i s4, s4, s3
   122f0:	a4 00 00 f4 	bnz s4, 20 <sinf+0xa4>
   122f4:	42 00 00 a8 	load_32 s2, (s2)
   122f8:	60 00 00 0f 	move s3, 0
   122fc:	03 00 60 c0 	sub_i s0, s3, s0
   12300:	15 00 00 f6 	b 84 <sinf+0xf4>
   12304:	40 00 00 4f 	movehi s2, 0
   12308:	42 d0 05 00 	or s2, s2, 372
   1230c:	82 00 00 a8 	load_32 s4, (s2)
   12310:	81 00 c2 c2 	cmpgt_f s4, s1, s4
   12314:	84 80 11 c1 	cmpne_i s4, s4, s3
   12318:	04 01 00 f4 	bnz s4, 32 <sinf+0xd8>
   1231c:	40 00 00 4f 	movehi s2, 0
   12320:	60 00 00 0f 	move s3, 0
   12324:	42 90 05 00 	or s2, s2, 356
   12328:	03 00 60 c0 	sub_i s0, s3, s0
   1232c:	42 00 00 a8 	load_32 s2, (s2)
   12330:	21 00 01 c2 	add_f s1, s1, s2
   12334:	09 00 00 f6 	b 36 <sinf+0xf8>
   12338:	80 00 00 4f 	movehi s4, 0
   1233c:	84 f0 05 00 	or s4, s4, 380
   12340:	84 00 00 a8 	load_32 s4, (s4)
   12344:	81 00 c2 c2 	cmpgt_f s4, s1, s4
   12348:	64 80 11 c1 	cmpne_i s3, s4, s3
   1234c:	63 00 00 f4 	bnz s3, 12 <sinf+0xf8>
   12350:	42 00 00 a8 	load_32 s2, (s2)
   12354:	22 80 10 c2 	sub_f s1, s2, s1
   12358:	40 00 00 4f 	movehi s2, 0
   1235c:	61 80 20 c2 	mul_f s3, s1, s1
   12360:	81 80 21 c2 	mul_f s4, s1, s3
   12364:	a0 00 00 4f 	movehi s5, 0
   12368:	00 00 a0 c2 	itof s0, s0
   1236c:	42 60 06 00 	or s2, s2, 408
   12370:	a5 80 05 00 	or s5, s5, 352
   12374:	42 00 00 a8 	load_32 s2, (s2)
   12378:	44 00 21 c2 	mul_f s2, s4, s2
   1237c:	83 00 22 c2 	mul_f s4, s3, s4
   12380:	21 00 01 c2 	add_f s1, s1, s2
   12384:	45 00 00 a8 	load_32 s2, (s5)
   12388:	a0 00 00 4f 	movehi s5, 0
   1238c:	c3 00 22 c2 	mul_f s6, s3, s4
   12390:	a5 30 05 00 	or s5, s5, 332
   12394:	44 00 21 c2 	mul_f s2, s4, s2
   12398:	80 00 00 4f 	movehi s4, 0
   1239c:	21 00 01 c2 	add_f s1, s1, s2
   123a0:	45 00 00 a8 	load_32 s2, (s5)
   123a4:	a3 00 23 c2 	mul_f s5, s3, s6
   123a8:	84 30 06 00 	or s4, s4, 396
   123ac:	46 00 21 c2 	mul_f s2, s6, s2
   123b0:	c3 80 22 c2 	mul_f s6, s3, s5
   123b4:	63 00 23 c2 	mul_f s3, s3, s6
   123b8:	21 00 01 c2 	add_f s1, s1, s2
   123bc:	44 00 00 a8 	load_32 s2, (s4)
   123c0:	80 00 00 4f 	movehi s4, 0
   123c4:	84 80 06 00 	or s4, s4, 416
   123c8:	45 00 21 c2 	mul_f s2, s5, s2
   123cc:	21 00 01 c2 	add_f s1, s1, s2
   123d0:	44 00 00 a8 	load_32 s2, (s4)
   123d4:	80 00 00 4f 	movehi s4, 0
   123d8:	84 e0 05 00 	or s4, s4, 376
   123dc:	46 00 21 c2 	mul_f s2, s6, s2
   123e0:	21 00 01 c2 	add_f s1, s1, s2
   123e4:	44 00 00 a8 	load_32 s2, (s4)
   123e8:	43 00 21 c2 	mul_f s2, s3, s2
   123ec:	21 00 01 c2 	add_f s1, s1, s2
   123f0:	01 00 20 c2 	mul_f s0, s1, s0
   123f4:	1f 00 00 f0 	ret

00000000000123f8 cosf:
   123f8:	60 00 00 4f 	movehi s3, 0
   123fc:	20 00 00 4f 	movehi s1, 0
   12400:	a0 00 00 4f 	movehi s5, 0
   12404:	63 40 06 00 	or s3, s3, 400
   12408:	41 f0 05 00 	or s2, s1, 380
   1240c:	a5 c0 05 00 	or s5, s5, 368
   12410:	22 00 00 a8 	load_32 s1, (s2)
   12414:	83 00 00 a8 	load_32 s4, (s3)
   12418:	a5 00 00 a8 	load_32 s5, (s5)
   1241c:	00 80 00 c2 	add_f s0, s0, s1
   12420:	c0 00 c2 c1 	reciprocal s6, s4
   12424:	e6 00 22 c2 	mul_f s7, s6, s4
   12428:	e5 80 13 c2 	sub_f s7, s5, s7
   1242c:	c6 80 23 c2 	mul_f s6, s6, s7
   12430:	26 00 22 c2 	mul_f s1, s6, s4
   12434:	25 80 10 c2 	sub_f s1, s5, s1
   12438:	a0 00 00 4f 	movehi s5, 0
   1243c:	26 80 20 c2 	mul_f s1, s6, s1
   12440:	20 80 20 c2 	mul_f s1, s0, s1
   12444:	20 80 b0 c1 	ftoi s1, s1
   12448:	20 80 a0 c2 	itof s1, s1
   1244c:	21 00 22 c2 	mul_f s1, s1, s4
   12450:	20 80 10 c2 	sub_f s1, s0, s1
   12454:	05 60 05 00 	or s0, s5, 344
   12458:	00 00 00 a8 	load_32 s0, (s0)
   1245c:	01 00 e0 c2 	cmplt_f s0, s1, s0
   12460:	60 00 00 f4 	bnz s0, 12 <cosf+0x74>
   12464:	00 04 00 0f 	move s0, 1
   12468:	02 00 00 f6 	b 8 <cosf+0x78>
   1246c:	00 fc ff 0f 	move s0, -1
   12470:	80 00 00 4f 	movehi s4, 0
   12474:	bf fc 7f 4f 	movehi s5, 262143
   12478:	84 50 06 00 	or s4, s4, 404
   1247c:	a5 fc 7f 00 	or s5, s5, 8191
   12480:	21 80 12 c0 	and s1, s1, s5
   12484:	84 00 00 a8 	load_32 s4, (s4)
   12488:	a1 00 c2 c2 	cmpgt_f s5, s1, s4
   1248c:	87 00 00 4f 	movehi s4, 7
   12490:	84 fc 7f 00 	or s4, s4, 8191
   12494:	a5 00 12 c1 	cmpne_i s5, s5, s4
   12498:	a5 00 00 f4 	bnz s5, 20 <cosf+0xb4>
   1249c:	43 00 00 a8 	load_32 s2, (s3)
   124a0:	60 00 00 0f 	move s3, 0
   124a4:	03 00 60 c0 	sub_i s0, s3, s0
   124a8:	13 00 00 f6 	b 76 <cosf+0xfc>
   124ac:	60 00 00 4f 	movehi s3, 0
   124b0:	63 d0 05 00 	or s3, s3, 372
   124b4:	a3 00 00 a8 	load_32 s5, (s3)
   124b8:	a1 80 c2 c2 	cmpgt_f s5, s1, s5
   124bc:	a5 00 12 c1 	cmpne_i s5, s5, s4
   124c0:	05 01 00 f4 	bnz s5, 32 <cosf+0xe8>
   124c4:	40 00 00 4f 	movehi s2, 0
   124c8:	60 00 00 0f 	move s3, 0
   124cc:	42 90 05 00 	or s2, s2, 356
   124d0:	03 00 60 c0 	sub_i s0, s3, s0
   124d4:	42 00 00 a8 	load_32 s2, (s2)
   124d8:	21 00 01 c2 	add_f s1, s1, s2
   124dc:	07 00 00 f6 	b 28 <cosf+0x100>
   124e0:	42 00 00 a8 	load_32 s2, (s2)
   124e4:	41 00 c1 c2 	cmpgt_f s2, s1, s2
   124e8:	42 00 12 c1 	cmpne_i s2, s2, s4
   124ec:	62 00 00 f4 	bnz s2, 12 <cosf+0x100>
   124f0:	43 00 00 a8 	load_32 s2, (s3)
   124f4:	22 80 10 c2 	sub_f s1, s2, s1
   124f8:	40 00 00 4f 	movehi s2, 0
   124fc:	61 80 20 c2 	mul_f s3, s1, s1
   12500:	81 80 21 c2 	mul_f s4, s1, s3
   12504:	a0 00 00 4f 	movehi s5, 0
   12508:	00 00 a0 c2 	itof s0, s0
   1250c:	42 60 06 00 	or s2, s2, 408
   12510:	a5 80 05 00 	or s5, s5, 352
   12514:	42 00 00 a8 	load_32 s2, (s2)
   12518:	44 00 21 c2 	mul_f s2, s4, s2
   1251c:	83 00 22 c2 	mul_f s4, s3, s4
   12520:	21 00 01 c2 	add_f s1, s1, s2
   12524:	45 00 00 a8 	load_32 s2, (s5)
   12528:	a0 00 00 4f 	movehi s5, 0
   1252c:	c3 00 22 c2 	mul_f s6, s3, s4
   12530:	a5 30 05 00 	or s5, s5, 332
   12534:	44 00 21 c2 	mul_f s2, s4, s2
   12538:	80 00 00 4f 	movehi s4, 0
   1253c:	21 00 01 c2 	add_f s1, s1, s2
   12540:	45 00 00 a8 	load_32 s2, (s5)
   12544:	a3 00 23 c2 	mul_f s5, s3, s6
   12548:	84 30 06 00 	or s4, s4, 396
   1254c:	46 00 21 c2 	mul_f s2, s6, s2
   12550:	c3 80 22 c2 	mul_f s6, s3, s5
   12554:	63 00 23 c2 	mul_f s3, s3, s6
   12558:	21 00 01 c2 	add_f s1, s1, s2
   1255c:	44 00 00 a8 	load_32 s2, (s4)
   12560:	80 00 00 4f 	movehi s4, 0
   12564:	84 80 06 00 	or s4, s4, 416
   12568:	45 00 21 c2 	mul_f s2, s5, s2
   1256c:	21 00 01 c2 	add_f s1, s1, s2
   12570:	44 00 00 a8 	load_32 s2, (s4)
   12574:	80 00 00 4f 	movehi s4, 0
   12578:	84 e0 05 00 	or s4, s4, 376
   1257c:	46 00 21 c2 	mul_f s2, s6, s2
   12580:	21 00 01 c2 	add_f s1, s1, s2
   12584:	44 00 00 a8 	load_32 s2, (s4)
   12588:	43 00 21 c2 	mul_f s2, s3, s2
   1258c:	21 00 01 c2 	add_f s1, s1, s2
   12590:	01 00 20 c2 	mul_f s0, s1, s0
   12594:	1f 00 00 f0 	ret

0000000000012598 sqrt:
   12598:	20 00 00 4f 	movehi s1, 0
   1259c:	40 00 c0 c1 	reciprocal s2, s0
   125a0:	21 c0 05 00 	or s1, s1, 368
   125a4:	21 00 00 a8 	load_32 s1, (s1)
   125a8:	62 00 20 c2 	mul_f s3, s2, s0
   125ac:	61 80 11 c2 	sub_f s3, s1, s3
   125b0:	42 80 21 c2 	mul_f s2, s2, s3
   125b4:	62 00 20 c2 	mul_f s3, s2, s0
   125b8:	61 80 11 c2 	sub_f s3, s1, s3
   125bc:	42 80 21 c2 	mul_f s2, s2, s3
   125c0:	60 00 00 4f 	movehi s3, 0
   125c4:	40 00 21 c2 	mul_f s2, s0, s2
   125c8:	82 00 00 c2 	add_f s4, s2, s0
   125cc:	43 b0 05 00 	or s2, s3, 364
   125d0:	42 00 00 a8 	load_32 s2, (s2)
   125d4:	64 00 21 c2 	mul_f s3, s4, s2
   125d8:	80 80 c1 c1 	reciprocal s4, s3
   125dc:	a4 80 21 c2 	mul_f s5, s4, s3
   125e0:	a1 80 12 c2 	sub_f s5, s1, s5
   125e4:	84 80 22 c2 	mul_f s4, s4, s5
   125e8:	a4 80 21 c2 	mul_f s5, s4, s3
   125ec:	a1 80 12 c2 	sub_f s5, s1, s5
   125f0:	84 80 22 c2 	mul_f s4, s4, s5
   125f4:	80 00 22 c2 	mul_f s4, s0, s4
   125f8:	63 00 02 c2 	add_f s3, s3, s4
   125fc:	63 00 21 c2 	mul_f s3, s3, s2
   12600:	80 80 c1 c1 	reciprocal s4, s3
   12604:	a4 80 21 c2 	mul_f s5, s4, s3
   12608:	a1 80 12 c2 	sub_f s5, s1, s5
   1260c:	84 80 22 c2 	mul_f s4, s4, s5
   12610:	a4 80 21 c2 	mul_f s5, s4, s3
   12614:	a1 80 12 c2 	sub_f s5, s1, s5
   12618:	84 80 22 c2 	mul_f s4, s4, s5
   1261c:	80 00 22 c2 	mul_f s4, s0, s4
   12620:	63 00 02 c2 	add_f s3, s3, s4
   12624:	63 00 21 c2 	mul_f s3, s3, s2
   12628:	80 80 c1 c1 	reciprocal s4, s3
   1262c:	a4 80 21 c2 	mul_f s5, s4, s3
   12630:	a1 80 12 c2 	sub_f s5, s1, s5
   12634:	84 80 22 c2 	mul_f s4, s4, s5
   12638:	a4 80 21 c2 	mul_f s5, s4, s3
   1263c:	a1 80 12 c2 	sub_f s5, s1, s5
   12640:	84 80 22 c2 	mul_f s4, s4, s5
   12644:	80 00 22 c2 	mul_f s4, s0, s4
   12648:	63 00 02 c2 	add_f s3, s3, s4
   1264c:	63 00 21 c2 	mul_f s3, s3, s2
   12650:	80 80 c1 c1 	reciprocal s4, s3
   12654:	a4 80 21 c2 	mul_f s5, s4, s3
   12658:	a1 80 12 c2 	sub_f s5, s1, s5
   1265c:	84 80 22 c2 	mul_f s4, s4, s5
   12660:	a4 80 21 c2 	mul_f s5, s4, s3
   12664:	a1 80 12 c2 	sub_f s5, s1, s5
   12668:	84 80 22 c2 	mul_f s4, s4, s5
   1266c:	80 00 22 c2 	mul_f s4, s0, s4
   12670:	63 00 02 c2 	add_f s3, s3, s4
   12674:	63 00 21 c2 	mul_f s3, s3, s2
   12678:	80 80 c1 c1 	reciprocal s4, s3
   1267c:	a4 80 21 c2 	mul_f s5, s4, s3
   12680:	a1 80 12 c2 	sub_f s5, s1, s5
   12684:	84 80 22 c2 	mul_f s4, s4, s5
   12688:	a4 80 21 c2 	mul_f s5, s4, s3
   1268c:	a1 80 12 c2 	sub_f s5, s1, s5
   12690:	84 80 22 c2 	mul_f s4, s4, s5
   12694:	80 00 22 c2 	mul_f s4, s0, s4
   12698:	63 00 02 c2 	add_f s3, s3, s4
   1269c:	63 00 21 c2 	mul_f s3, s3, s2
   126a0:	80 80 c1 c1 	reciprocal s4, s3
   126a4:	a4 80 21 c2 	mul_f s5, s4, s3
   126a8:	a1 80 12 c2 	sub_f s5, s1, s5
   126ac:	84 80 22 c2 	mul_f s4, s4, s5
   126b0:	a4 80 21 c2 	mul_f s5, s4, s3
   126b4:	a1 80 12 c2 	sub_f s5, s1, s5
   126b8:	84 80 22 c2 	mul_f s4, s4, s5
   126bc:	80 00 22 c2 	mul_f s4, s0, s4
   126c0:	63 00 02 c2 	add_f s3, s3, s4
   126c4:	63 00 21 c2 	mul_f s3, s3, s2
   126c8:	80 80 c1 c1 	reciprocal s4, s3
   126cc:	a4 80 21 c2 	mul_f s5, s4, s3
   126d0:	a1 80 12 c2 	sub_f s5, s1, s5
   126d4:	84 80 22 c2 	mul_f s4, s4, s5
   126d8:	a4 80 21 c2 	mul_f s5, s4, s3
   126dc:	a1 80 12 c2 	sub_f s5, s1, s5
   126e0:	84 80 22 c2 	mul_f s4, s4, s5
   126e4:	80 00 22 c2 	mul_f s4, s0, s4
   126e8:	63 00 02 c2 	add_f s3, s3, s4
   126ec:	63 00 21 c2 	mul_f s3, s3, s2
   126f0:	80 80 c1 c1 	reciprocal s4, s3
   126f4:	a4 80 21 c2 	mul_f s5, s4, s3
   126f8:	a1 80 12 c2 	sub_f s5, s1, s5
   126fc:	84 80 22 c2 	mul_f s4, s4, s5
   12700:	a4 80 21 c2 	mul_f s5, s4, s3
   12704:	a1 80 12 c2 	sub_f s5, s1, s5
   12708:	84 80 22 c2 	mul_f s4, s4, s5
   1270c:	80 00 22 c2 	mul_f s4, s0, s4
   12710:	63 00 02 c2 	add_f s3, s3, s4
   12714:	63 00 21 c2 	mul_f s3, s3, s2
   12718:	80 80 c1 c1 	reciprocal s4, s3
   1271c:	a4 80 21 c2 	mul_f s5, s4, s3
   12720:	a1 80 12 c2 	sub_f s5, s1, s5
   12724:	84 80 22 c2 	mul_f s4, s4, s5
   12728:	a4 80 21 c2 	mul_f s5, s4, s3
   1272c:	21 80 12 c2 	sub_f s1, s1, s5
   12730:	24 80 20 c2 	mul_f s1, s4, s1
   12734:	00 80 20 c2 	mul_f s0, s0, s1
   12738:	03 00 00 c2 	add_f s0, s3, s0
   1273c:	00 00 21 c2 	mul_f s0, s0, s2
   12740:	1f 00 00 f0 	ret

0000000000012744 sqrtf:
   12744:	20 00 00 4f 	movehi s1, 0
   12748:	40 00 c0 c1 	reciprocal s2, s0
   1274c:	21 c0 05 00 	or s1, s1, 368
   12750:	21 00 00 a8 	load_32 s1, (s1)
   12754:	62 00 20 c2 	mul_f s3, s2, s0
   12758:	61 80 11 c2 	sub_f s3, s1, s3
   1275c:	42 80 21 c2 	mul_f s2, s2, s3
   12760:	62 00 20 c2 	mul_f s3, s2, s0
   12764:	61 80 11 c2 	sub_f s3, s1, s3
   12768:	42 80 21 c2 	mul_f s2, s2, s3
   1276c:	60 00 00 4f 	movehi s3, 0
   12770:	40 00 21 c2 	mul_f s2, s0, s2
   12774:	82 00 00 c2 	add_f s4, s2, s0
   12778:	43 b0 05 00 	or s2, s3, 364
   1277c:	42 00 00 a8 	load_32 s2, (s2)
   12780:	64 00 21 c2 	mul_f s3, s4, s2
   12784:	80 80 c1 c1 	reciprocal s4, s3
   12788:	a4 80 21 c2 	mul_f s5, s4, s3
   1278c:	a1 80 12 c2 	sub_f s5, s1, s5
   12790:	84 80 22 c2 	mul_f s4, s4, s5
   12794:	a4 80 21 c2 	mul_f s5, s4, s3
   12798:	a1 80 12 c2 	sub_f s5, s1, s5
   1279c:	84 80 22 c2 	mul_f s4, s4, s5
   127a0:	80 00 22 c2 	mul_f s4, s0, s4
   127a4:	63 00 02 c2 	add_f s3, s3, s4
   127a8:	63 00 21 c2 	mul_f s3, s3, s2
   127ac:	80 80 c1 c1 	reciprocal s4, s3
   127b0:	a4 80 21 c2 	mul_f s5, s4, s3
   127b4:	a1 80 12 c2 	sub_f s5, s1, s5
   127b8:	84 80 22 c2 	mul_f s4, s4, s5
   127bc:	a4 80 21 c2 	mul_f s5, s4, s3
   127c0:	a1 80 12 c2 	sub_f s5, s1, s5
   127c4:	84 80 22 c2 	mul_f s4, s4, s5
   127c8:	80 00 22 c2 	mul_f s4, s0, s4
   127cc:	63 00 02 c2 	add_f s3, s3, s4
   127d0:	63 00 21 c2 	mul_f s3, s3, s2
   127d4:	80 80 c1 c1 	reciprocal s4, s3
   127d8:	a4 80 21 c2 	mul_f s5, s4, s3
   127dc:	a1 80 12 c2 	sub_f s5, s1, s5
   127e0:	84 80 22 c2 	mul_f s4, s4, s5
   127e4:	a4 80 21 c2 	mul_f s5, s4, s3
   127e8:	a1 80 12 c2 	sub_f s5, s1, s5
   127ec:	84 80 22 c2 	mul_f s4, s4, s5
   127f0:	80 00 22 c2 	mul_f s4, s0, s4
   127f4:	63 00 02 c2 	add_f s3, s3, s4
   127f8:	63 00 21 c2 	mul_f s3, s3, s2
   127fc:	80 80 c1 c1 	reciprocal s4, s3
   12800:	a4 80 21 c2 	mul_f s5, s4, s3
   12804:	a1 80 12 c2 	sub_f s5, s1, s5
   12808:	84 80 22 c2 	mul_f s4, s4, s5
   1280c:	a4 80 21 c2 	mul_f s5, s4, s3
   12810:	a1 80 12 c2 	sub_f s5, s1, s5
   12814:	84 80 22 c2 	mul_f s4, s4, s5
   12818:	80 00 22 c2 	mul_f s4, s0, s4
   1281c:	63 00 02 c2 	add_f s3, s3, s4
   12820:	63 00 21 c2 	mul_f s3, s3, s2
   12824:	80 80 c1 c1 	reciprocal s4, s3
   12828:	a4 80 21 c2 	mul_f s5, s4, s3
   1282c:	a1 80 12 c2 	sub_f s5, s1, s5
   12830:	84 80 22 c2 	mul_f s4, s4, s5
   12834:	a4 80 21 c2 	mul_f s5, s4, s3
   12838:	a1 80 12 c2 	sub_f s5, s1, s5
   1283c:	84 80 22 c2 	mul_f s4, s4, s5
   12840:	80 00 22 c2 	mul_f s4, s0, s4
   12844:	63 00 02 c2 	add_f s3, s3, s4
   12848:	63 00 21 c2 	mul_f s3, s3, s2
   1284c:	80 80 c1 c1 	reciprocal s4, s3
   12850:	a4 80 21 c2 	mul_f s5, s4, s3
   12854:	a1 80 12 c2 	sub_f s5, s1, s5
   12858:	84 80 22 c2 	mul_f s4, s4, s5
   1285c:	a4 80 21 c2 	mul_f s5, s4, s3
   12860:	a1 80 12 c2 	sub_f s5, s1, s5
   12864:	84 80 22 c2 	mul_f s4, s4, s5
   12868:	80 00 22 c2 	mul_f s4, s0, s4
   1286c:	63 00 02 c2 	add_f s3, s3, s4
   12870:	63 00 21 c2 	mul_f s3, s3, s2
   12874:	80 80 c1 c1 	reciprocal s4, s3
   12878:	a4 80 21 c2 	mul_f s5, s4, s3
   1287c:	a1 80 12 c2 	sub_f s5, s1, s5
   12880:	84 80 22 c2 	mul_f s4, s4, s5
   12884:	a4 80 21 c2 	mul_f s5, s4, s3
   12888:	a1 80 12 c2 	sub_f s5, s1, s5
   1288c:	84 80 22 c2 	mul_f s4, s4, s5
   12890:	80 00 22 c2 	mul_f s4, s0, s4
   12894:	63 00 02 c2 	add_f s3, s3, s4
   12898:	63 00 21 c2 	mul_f s3, s3, s2
   1289c:	80 80 c1 c1 	reciprocal s4, s3
   128a0:	a4 80 21 c2 	mul_f s5, s4, s3
   128a4:	a1 80 12 c2 	sub_f s5, s1, s5
   128a8:	84 80 22 c2 	mul_f s4, s4, s5
   128ac:	a4 80 21 c2 	mul_f s5, s4, s3
   128b0:	a1 80 12 c2 	sub_f s5, s1, s5
   128b4:	84 80 22 c2 	mul_f s4, s4, s5
   128b8:	80 00 22 c2 	mul_f s4, s0, s4
   128bc:	63 00 02 c2 	add_f s3, s3, s4
   128c0:	63 00 21 c2 	mul_f s3, s3, s2
   128c4:	80 80 c1 c1 	reciprocal s4, s3
   128c8:	a4 80 21 c2 	mul_f s5, s4, s3
   128cc:	a1 80 12 c2 	sub_f s5, s1, s5
   128d0:	84 80 22 c2 	mul_f s4, s4, s5
   128d4:	a4 80 21 c2 	mul_f s5, s4, s3
   128d8:	21 80 12 c2 	sub_f s1, s1, s5
   128dc:	24 80 20 c2 	mul_f s1, s4, s1
   128e0:	00 80 20 c2 	mul_f s0, s0, s1
   128e4:	03 00 00 c2 	add_f s0, s3, s0
   128e8:	00 00 21 c2 	mul_f s0, s0, s2
   128ec:	1f 00 00 f0 	ret

00000000000128f0 floorf:
   128f0:	00 00 b0 c1 	ftoi s0, s0
   128f4:	00 00 a0 c2 	itof s0, s0
   128f8:	1f 00 00 f0 	ret

00000000000128fc ceilf:
   128fc:	de 03 ff 05 	add_i sp, sp, -64
   12900:	1e f3 00 88 	store_32 s24, 60(sp)
   12904:	fe e3 00 88 	store_32 ra, 56(sp)
   12908:	00 03 f0 c0 	move s24, s0
   1290c:	f9 ff ff f9 	call -28 <floorf>
   12910:	20 00 00 4f 	movehi s1, 0
   12914:	40 00 ec c2 	cmplt_f s2, s0, s24
   12918:	21 10 05 00 	or s1, s1, 324
   1291c:	21 00 00 a8 	load_32 s1, (s1)
   12920:	42 00 00 f4 	bnz s2, 8 <ceilf+0x2c>
   12924:	02 00 00 f6 	b 8 <ceilf+0x30>
   12928:	00 80 00 c2 	add_f s0, s0, s1
   1292c:	fe e3 00 a8 	load_32 ra, 56(sp)
   12930:	1e f3 00 a8 	load_32 s24, 60(sp)
   12934:	de 03 01 05 	add_i sp, sp, 64
   12938:	1f 00 00 f0 	ret

000000000001293c memcpy:
   1293c:	c0 00 f0 c0 	move s6, s0
   12940:	60 fc 00 01 	and s3, s0, 63
   12944:	81 fc 00 01 	and s4, s1, 63
   12948:	a3 00 02 c1 	cmpeq_i s5, s3, s4
   1294c:	45 02 00 f2 	bz s5, 72 <copy_word_check>

0000000000012950 copy_vector_lead_in:
   12950:	80 fc 00 01 	and s4, s0, 63
   12954:	04 01 00 f2 	bz s4, 32 <copy_vector>
   12958:	62 05 00 f2 	bz s2, 172 <copy_done>
   1295c:	81 00 00 a0 	load_u8 s4, (s1)
   12960:	80 00 00 82 	store_8 s4, (s0)
   12964:	00 04 00 05 	add_i s0, s0, 1
   12968:	21 04 00 05 	add_i s1, s1, 1
   1296c:	42 04 00 06 	sub_i s2, s2, 1
   12970:	f8 ff ff f7 	b -32 <copy_vector_lead_in>

0000000000012974 copy_vector:
   12974:	82 00 01 18 	cmplt_u s4, s2, 64
   12978:	84 02 00 f4 	bnz s4, 80 <copy_words>
   1297c:	01 00 00 ae 	load_v v0, (s1)
   12980:	00 00 00 8e 	store_v v0, (s0)
   12984:	00 00 01 05 	add_i s0, s0, 64
   12988:	21 00 01 05 	add_i s1, s1, 64
   1298c:	42 00 01 06 	sub_i s2, s2, 64
   12990:	f9 ff ff f7 	b -28 <copy_vector>

0000000000012994 copy_word_check:
   12994:	60 0c 00 01 	and s3, s0, 3
   12998:	81 0c 00 01 	and s4, s1, 3
   1299c:	a3 00 02 c1 	cmpeq_i s5, s3, s4
   129a0:	45 02 00 f2 	bz s5, 72 <copy_remain_bytes>

00000000000129a4 copy_word_lead_in:
   129a4:	80 0c 00 01 	and s4, s0, 3
   129a8:	04 01 00 f2 	bz s4, 32 <copy_words>
   129ac:	c2 02 00 f2 	bz s2, 88 <copy_done>
   129b0:	81 00 00 a0 	load_u8 s4, (s1)
   129b4:	80 00 00 82 	store_8 s4, (s0)
   129b8:	00 04 00 05 	add_i s0, s0, 1
   129bc:	21 04 00 05 	add_i s1, s1, 1
   129c0:	42 04 00 06 	sub_i s2, s2, 1
   129c4:	f8 ff ff f7 	b -32 <copy_word_lead_in>

00000000000129c8 copy_words:
   129c8:	82 10 00 18 	cmplt_u s4, s2, 4
   129cc:	e4 00 00 f4 	bnz s4, 28 <copy_remain_bytes>
   129d0:	81 00 00 a8 	load_32 s4, (s1)
   129d4:	80 00 00 88 	store_32 s4, (s0)
   129d8:	00 10 00 05 	add_i s0, s0, 4
   129dc:	21 10 00 05 	add_i s1, s1, 4
   129e0:	42 10 00 06 	sub_i s2, s2, 4
   129e4:	f9 ff ff f7 	b -28 <copy_words>

00000000000129e8 copy_remain_bytes:
   129e8:	e2 00 00 f2 	bz s2, 28 <copy_done>
   129ec:	81 00 00 a0 	load_u8 s4, (s1)
   129f0:	80 00 00 82 	store_8 s4, (s0)
   129f4:	00 04 00 05 	add_i s0, s0, 1
   129f8:	21 04 00 05 	add_i s1, s1, 1
   129fc:	42 04 00 06 	sub_i s2, s2, 1
   12a00:	fa ff ff f7 	b -24 <copy_remain_bytes>

0000000000012a04 copy_done:
   12a04:	00 00 f3 c0 	move s0, s6
   12a08:	1f 00 00 f0 	ret

0000000000012a0c printf:
   12a0c:	de 03 ff 05 	add_i sp, sp, -64
   12a10:	fe f3 00 88 	store_32 ra, 60(sp)
   12a14:	0c 00 00 4f 	movehi s0, 12
   12a18:	3e 00 01 a8 	load_32 s1, 64(sp)
   12a1c:	5e 10 01 05 	add_i s2, sp, 68
   12a20:	5e e0 00 88 	store_32 s2, 56(sp)
   12a24:	00 10 00 00 	or s0, s0, 4
   12a28:	00 00 00 a8 	load_32 s0, (s0)
   12a2c:	ee 01 00 f8 	call 1976 <vfprintf>
   12a30:	00 00 00 0f 	move s0, 0
   12a34:	fe f3 00 a8 	load_32 ra, 60(sp)
   12a38:	de 03 01 05 	add_i sp, sp, 64
   12a3c:	1f 00 00 f0 	ret

0000000000012a40 sprintf:
   12a40:	de 03 ff 05 	add_i sp, sp, -64
   12a44:	1e f3 00 88 	store_32 s24, 60(sp)
   12a48:	3e e3 00 88 	store_32 s25, 56(sp)
   12a4c:	5e d3 00 88 	store_32 s26, 52(sp)
   12a50:	fe c3 00 88 	store_32 ra, 48(sp)
   12a54:	1e 43 00 05 	add_i s24, sp, 16
   12a58:	3e 10 01 a8 	load_32 s1, 68(sp)
   12a5c:	1e 00 01 a8 	load_32 s0, 64(sp)
   12a60:	40 03 00 0f 	move s26, 0
   12a64:	1e 40 00 88 	store_32 s0, 16(sp)
   12a68:	1f fc 7f 4f 	movehi s0, 262143
   12a6c:	38 13 00 00 	or s25, s24, 4
   12a70:	5e 20 01 05 	add_i s2, sp, 72
   12a74:	00 fc 7f 00 	or s0, s0, 8191
   12a78:	59 03 00 88 	store_32 s26, (s25)
   12a7c:	1e 60 00 88 	store_32 s0, 24(sp)
   12a80:	5e 73 00 88 	store_32 s26, 28(sp)
   12a84:	5e 90 00 88 	store_32 s2, 36(sp)
   12a88:	00 00 fc c0 	move s0, s24
   12a8c:	d6 01 00 f8 	call 1880 <vfprintf>
   12a90:	0c 00 00 4f 	movehi s0, 12
   12a94:	5e b3 00 88 	store_32 s26, 44(sp)
   12a98:	00 10 00 00 	or s0, s0, 4
   12a9c:	00 00 00 a8 	load_32 s0, (s0)
   12aa0:	00 00 1c c1 	cmpne_i s0, s0, s24
   12aa4:	40 00 00 f4 	bnz s0, 8 <sprintf+0x6c>
   12aa8:	0c 00 00 f6 	b 48 <sprintf+0x98>
   12aac:	1e 40 00 a8 	load_32 s0, 16(sp)
   12ab0:	e0 01 00 f2 	bz s0, 60 <sprintf+0xac>
   12ab4:	39 00 00 a8 	load_32 s1, (s25)
   12ab8:	5e 60 00 a8 	load_32 s2, 24(sp)
   12abc:	41 00 31 c1 	cmpge_i s2, s1, s2
   12ac0:	e2 01 00 f4 	bnz s2, 60 <sprintf+0xbc>
   12ac4:	00 80 50 c0 	add_i s0, s0, s1
   12ac8:	21 04 00 05 	add_i s1, s1, 1
   12acc:	39 00 00 88 	store_32 s1, (s25)
   12ad0:	40 03 00 82 	store_8 s26, (s0)
   12ad4:	0a 00 00 f6 	b 40 <sprintf+0xbc>
   12ad8:	1e ac 00 05 	add_i s0, sp, 43
   12adc:	5e af 00 82 	store_8 s26, 43(sp)
   12ae0:	20 04 00 0f 	move s1, 1
   12ae4:	bd 05 00 f8 	call 5876 <write_console>
   12ae8:	05 00 00 f6 	b 20 <sprintf+0xbc>
   12aec:	1e 70 00 a8 	load_32 s0, 28(sp)
   12af0:	3e b0 00 05 	add_i s1, sp, 44
   12af4:	40 04 00 0f 	move s2, 1
   12af8:	a0 07 00 f8 	call 7808 <write>
   12afc:	19 00 00 a8 	load_32 s0, (s25)
   12b00:	fe c3 00 a8 	load_32 ra, 48(sp)
   12b04:	5e d3 00 a8 	load_32 s26, 52(sp)
   12b08:	3e e3 00 a8 	load_32 s25, 56(sp)
   12b0c:	1e f3 00 a8 	load_32 s24, 60(sp)
   12b10:	de 03 01 05 	add_i sp, sp, 64
   12b14:	1f 00 00 f0 	ret

0000000000012b18 fputc:
   12b18:	de 03 ff 05 	add_i sp, sp, -64
   12b1c:	fe f3 00 88 	store_32 ra, 60(sp)
   12b20:	4c 00 00 4f 	movehi s2, 12
   12b24:	1e e0 00 88 	store_32 s0, 56(sp)
   12b28:	42 10 00 00 	or s2, s2, 4
   12b2c:	42 00 00 a8 	load_32 s2, (s2)
   12b30:	42 80 10 c1 	cmpne_i s2, s2, s1
   12b34:	42 00 00 f4 	bnz s2, 8 <fputc+0x24>
   12b38:	0f 00 00 f6 	b 60 <fputc+0x5c>
   12b3c:	41 00 00 a8 	load_32 s2, (s1)
   12b40:	a2 02 00 f2 	bz s2, 84 <fputc+0x7c>
   12b44:	61 10 00 a8 	load_32 s3, 4(s1)
   12b48:	81 20 00 a8 	load_32 s4, 8(s1)
   12b4c:	83 00 32 c1 	cmpge_i s4, s3, s4
   12b50:	a4 00 00 f4 	bnz s4, 20 <fputc+0x4c>
   12b54:	42 80 51 c0 	add_i s2, s2, s3
   12b58:	63 04 00 05 	add_i s3, s3, 1
   12b5c:	61 10 00 88 	store_32 s3, 4(s1)
   12b60:	02 00 00 82 	store_8 s0, (s2)
   12b64:	00 04 00 0f 	move s0, 1
   12b68:	fe f3 00 a8 	load_32 ra, 60(sp)
   12b6c:	de 03 01 05 	add_i sp, sp, 64
   12b70:	1f 00 00 f0 	ret
   12b74:	1e dc 00 82 	store_8 s0, 55(sp)
   12b78:	1e dc 00 05 	add_i s0, sp, 55
   12b7c:	20 04 00 0f 	move s1, 1
   12b80:	96 05 00 f8 	call 5720 <write_console>
   12b84:	00 04 00 0f 	move s0, 1
   12b88:	fe f3 00 a8 	load_32 ra, 60(sp)
   12b8c:	de 03 01 05 	add_i sp, sp, 64
   12b90:	1f 00 00 f0 	ret
   12b94:	01 30 00 a8 	load_32 s0, 12(s1)
   12b98:	3e e0 00 05 	add_i s1, sp, 56
   12b9c:	40 04 00 0f 	move s2, 1
   12ba0:	76 07 00 f8 	call 7640 <write>
   12ba4:	00 04 00 0f 	move s0, 1
   12ba8:	fe f3 00 a8 	load_32 ra, 60(sp)
   12bac:	de 03 01 05 	add_i sp, sp, 64
   12bb0:	1f 00 00 f0 	ret

0000000000012bb4 snprintf:
   12bb4:	de 03 ff 05 	add_i sp, sp, -64
   12bb8:	1e f3 00 88 	store_32 s24, 60(sp)
   12bbc:	3e e3 00 88 	store_32 s25, 56(sp)
   12bc0:	5e d3 00 88 	store_32 s26, 52(sp)
   12bc4:	fe c3 00 88 	store_32 ra, 48(sp)
   12bc8:	1e 43 00 05 	add_i s24, sp, 16
   12bcc:	3e 20 01 a8 	load_32 s1, 72(sp)
   12bd0:	1e 10 01 a8 	load_32 s0, 68(sp)
   12bd4:	40 03 00 0f 	move s26, 0
   12bd8:	5e 00 01 a8 	load_32 s2, 64(sp)
   12bdc:	38 13 00 00 	or s25, s24, 4
   12be0:	5e 40 00 88 	store_32 s2, 16(sp)
   12be4:	5e 30 01 05 	add_i s2, sp, 76
   12be8:	59 03 00 88 	store_32 s26, (s25)
   12bec:	1e 60 00 88 	store_32 s0, 24(sp)
   12bf0:	5e 73 00 88 	store_32 s26, 28(sp)
   12bf4:	5e 90 00 88 	store_32 s2, 36(sp)
   12bf8:	00 00 fc c0 	move s0, s24
   12bfc:	7a 01 00 f8 	call 1512 <vfprintf>
   12c00:	0c 00 00 4f 	movehi s0, 12
   12c04:	5e b3 00 88 	store_32 s26, 44(sp)
   12c08:	00 10 00 00 	or s0, s0, 4
   12c0c:	00 00 00 a8 	load_32 s0, (s0)
   12c10:	00 00 1c c1 	cmpne_i s0, s0, s24
   12c14:	40 00 00 f4 	bnz s0, 8 <snprintf+0x68>
   12c18:	0c 00 00 f6 	b 48 <snprintf+0x94>
   12c1c:	1e 40 00 a8 	load_32 s0, 16(sp)
   12c20:	e0 01 00 f2 	bz s0, 60 <snprintf+0xa8>
   12c24:	39 00 00 a8 	load_32 s1, (s25)
   12c28:	5e 60 00 a8 	load_32 s2, 24(sp)
   12c2c:	41 00 31 c1 	cmpge_i s2, s1, s2
   12c30:	e2 01 00 f4 	bnz s2, 60 <snprintf+0xb8>
   12c34:	00 80 50 c0 	add_i s0, s0, s1
   12c38:	21 04 00 05 	add_i s1, s1, 1
   12c3c:	39 00 00 88 	store_32 s1, (s25)
   12c40:	40 03 00 82 	store_8 s26, (s0)
   12c44:	0a 00 00 f6 	b 40 <snprintf+0xb8>
   12c48:	1e ac 00 05 	add_i s0, sp, 43
   12c4c:	5e af 00 82 	store_8 s26, 43(sp)
   12c50:	20 04 00 0f 	move s1, 1
   12c54:	61 05 00 f8 	call 5508 <write_console>
   12c58:	05 00 00 f6 	b 20 <snprintf+0xb8>
   12c5c:	1e 70 00 a8 	load_32 s0, 28(sp)
   12c60:	3e b0 00 05 	add_i s1, sp, 44
   12c64:	40 04 00 0f 	move s2, 1
   12c68:	44 07 00 f8 	call 7440 <write>
   12c6c:	19 00 00 a8 	load_32 s0, (s25)
   12c70:	fe c3 00 a8 	load_32 ra, 48(sp)
   12c74:	5e d3 00 a8 	load_32 s26, 52(sp)
   12c78:	3e e3 00 a8 	load_32 s25, 56(sp)
   12c7c:	1e f3 00 a8 	load_32 s24, 60(sp)
   12c80:	de 03 01 05 	add_i sp, sp, 64
   12c84:	1f 00 00 f0 	ret

0000000000012c88 vsnprintf:
   12c88:	de 03 ff 05 	add_i sp, sp, -64
   12c8c:	1e f3 00 88 	store_32 s24, 60(sp)
   12c90:	3e e3 00 88 	store_32 s25, 56(sp)
   12c94:	5e d3 00 88 	store_32 s26, 52(sp)
   12c98:	fe c3 00 88 	store_32 ra, 48(sp)
   12c9c:	1e 63 00 05 	add_i s24, sp, 24
   12ca0:	1e 60 00 88 	store_32 s0, 24(sp)
   12ca4:	40 03 00 0f 	move s26, 0
   12ca8:	38 13 00 00 	or s25, s24, 4
   12cac:	59 03 00 88 	store_32 s26, (s25)
   12cb0:	3e 80 00 88 	store_32 s1, 32(sp)
   12cb4:	5e 93 00 88 	store_32 s26, 36(sp)
   12cb8:	00 00 fc c0 	move s0, s24
   12cbc:	20 00 f1 c0 	move s1, s2
   12cc0:	40 80 f1 c0 	move s2, s3
   12cc4:	48 01 00 f8 	call 1312 <vfprintf>
   12cc8:	0c 00 00 4f 	movehi s0, 12
   12ccc:	5e b3 00 88 	store_32 s26, 44(sp)
   12cd0:	00 10 00 00 	or s0, s0, 4
   12cd4:	00 00 00 a8 	load_32 s0, (s0)
   12cd8:	00 00 1c c1 	cmpne_i s0, s0, s24
   12cdc:	40 00 00 f4 	bnz s0, 8 <vsnprintf+0x5c>
   12ce0:	0c 00 00 f6 	b 48 <vsnprintf+0x88>
   12ce4:	1e 60 00 a8 	load_32 s0, 24(sp)
   12ce8:	e0 01 00 f2 	bz s0, 60 <vsnprintf+0x9c>
   12cec:	39 00 00 a8 	load_32 s1, (s25)
   12cf0:	5e 80 00 a8 	load_32 s2, 32(sp)
   12cf4:	41 00 31 c1 	cmpge_i s2, s1, s2
   12cf8:	e2 01 00 f4 	bnz s2, 60 <vsnprintf+0xac>
   12cfc:	00 80 50 c0 	add_i s0, s0, s1
   12d00:	21 04 00 05 	add_i s1, s1, 1
   12d04:	39 00 00 88 	store_32 s1, (s25)
   12d08:	40 03 00 82 	store_8 s26, (s0)
   12d0c:	0a 00 00 f6 	b 40 <vsnprintf+0xac>
   12d10:	1e ac 00 05 	add_i s0, sp, 43
   12d14:	5e af 00 82 	store_8 s26, 43(sp)
   12d18:	20 04 00 0f 	move s1, 1
   12d1c:	2f 05 00 f8 	call 5308 <write_console>
   12d20:	05 00 00 f6 	b 20 <vsnprintf+0xac>
   12d24:	1e 90 00 a8 	load_32 s0, 36(sp)
   12d28:	3e b0 00 05 	add_i s1, sp, 44
   12d2c:	40 04 00 0f 	move s2, 1
   12d30:	12 07 00 f8 	call 7240 <write>
   12d34:	19 00 00 a8 	load_32 s0, (s25)
   12d38:	fe c3 00 a8 	load_32 ra, 48(sp)
   12d3c:	5e d3 00 a8 	load_32 s26, 52(sp)
   12d40:	3e e3 00 a8 	load_32 s25, 56(sp)
   12d44:	1e f3 00 a8 	load_32 s24, 60(sp)
   12d48:	de 03 01 05 	add_i sp, sp, 64
   12d4c:	1f 00 00 f0 	ret

0000000000012d50 putchar:
   12d50:	de 03 ff 05 	add_i sp, sp, -64
   12d54:	1e f3 00 88 	store_32 s24, 60(sp)
   12d58:	fe e3 00 88 	store_32 ra, 56(sp)
   12d5c:	00 07 00 0f 	move s24, 1
   12d60:	1e dc 00 82 	store_8 s0, 55(sp)
   12d64:	1e dc 00 05 	add_i s0, sp, 55
   12d68:	20 00 fc c0 	move s1, s24
   12d6c:	1b 05 00 f8 	call 5228 <write_console>
   12d70:	00 00 fc c0 	move s0, s24
   12d74:	fe e3 00 a8 	load_32 ra, 56(sp)
   12d78:	1e f3 00 a8 	load_32 s24, 60(sp)
   12d7c:	de 03 01 05 	add_i sp, sp, 64
   12d80:	1f 00 00 f0 	ret

0000000000012d84 puts:
   12d84:	de 03 ff 05 	add_i sp, sp, -64
   12d88:	1e f3 00 88 	store_32 s24, 60(sp)
   12d8c:	3e e3 00 88 	store_32 s25, 56(sp)
   12d90:	5e d3 00 88 	store_32 s26, 52(sp)
   12d94:	7e c3 00 88 	store_32 s27, 48(sp)
   12d98:	fe b3 00 88 	store_32 ra, 44(sp)
   12d9c:	00 03 f0 c0 	move s24, s0
   12da0:	18 00 00 a0 	load_u8 s0, (s24)
   12da4:	1e 93 00 88 	store_32 s24, 36(sp)
   12da8:	80 01 00 f2 	bz s0, 48 <puts+0x54>
   12dac:	7e 93 00 a8 	load_32 s27, 36(sp)
   12db0:	3e ab 00 05 	add_i s25, sp, 42
   12db4:	40 07 00 0f 	move s26, 1
   12db8:	1e a8 00 82 	store_8 s0, 42(sp)
   12dbc:	00 80 fc c0 	move s0, s25
   12dc0:	20 00 fd c0 	move s1, s26
   12dc4:	05 05 00 f8 	call 5140 <write_console>
   12dc8:	1b 07 00 05 	add_i s24, s27, 1
   12dcc:	1b 04 00 a0 	load_u8 s0, 1(s27)
   12dd0:	60 03 fc c0 	move s27, s24
   12dd4:	20 ff ff f5 	bnz s0, -28 <puts+0x34>
   12dd8:	20 07 00 0f 	move s25, 1
   12ddc:	00 28 00 0f 	move s0, 10
   12de0:	1e ac 00 82 	store_8 s0, 43(sp)
   12de4:	1e ac 00 05 	add_i s0, sp, 43
   12de8:	20 80 fc c0 	move s1, s25
   12dec:	fb 04 00 f8 	call 5100 <write_console>
   12df0:	1e 90 00 a8 	load_32 s0, 36(sp)
   12df4:	fe b3 00 a8 	load_32 ra, 44(sp)
   12df8:	7e c3 00 a8 	load_32 s27, 48(sp)
   12dfc:	5e d3 00 a8 	load_32 s26, 52(sp)
   12e00:	19 00 60 c0 	sub_i s0, s25, s0
   12e04:	3e e3 00 a8 	load_32 s25, 56(sp)
   12e08:	00 00 5c c0 	add_i s0, s0, s24
   12e0c:	1e f3 00 a8 	load_32 s24, 60(sp)
   12e10:	de 03 01 05 	add_i sp, sp, 64
   12e14:	1f 00 00 f0 	ret

0000000000012e18 fputs:
   12e18:	de 03 ff 05 	add_i sp, sp, -64
   12e1c:	1e f3 00 88 	store_32 s24, 60(sp)
   12e20:	3e e3 00 88 	store_32 s25, 56(sp)
   12e24:	5e d3 00 88 	store_32 s26, 52(sp)
   12e28:	7e c3 00 88 	store_32 s27, 48(sp)
   12e2c:	fe b3 00 88 	store_32 ra, 44(sp)
   12e30:	80 00 00 a0 	load_u8 s4, (s0)
   12e34:	20 83 f0 c0 	move s25, s1
   12e38:	1e 60 00 88 	store_32 s0, 24(sp)
   12e3c:	20 00 f0 c0 	move s1, s0
   12e40:	e4 05 00 f2 	bz s4, 188 <fputs+0xe4>
   12e44:	2c 00 00 4f 	movehi s1, 12
   12e48:	1e 9c 00 05 	add_i s0, sp, 39
   12e4c:	1e 80 00 88 	store_32 s0, 32(sp)
   12e50:	1e a0 00 05 	add_i s0, sp, 40
   12e54:	1e 70 00 88 	store_32 s0, 28(sp)
   12e58:	5e 63 00 a8 	load_32 s26, 24(sp)
   12e5c:	01 13 00 00 	or s24, s1, 4
   12e60:	60 07 00 0f 	move s27, 1
   12e64:	20 00 d2 c1 	sext_8 s1, s4
   12e68:	3e a0 00 88 	store_32 s1, 40(sp)
   12e6c:	38 00 00 a8 	load_32 s1, (s24)
   12e70:	21 80 1c c1 	cmpne_i s1, s1, s25
   12e74:	41 00 00 f4 	bnz s1, 8 <fputs+0x64>
   12e78:	10 00 00 f6 	b 64 <fputs+0xa0>
   12e7c:	39 00 00 a8 	load_32 s1, (s25)
   12e80:	e1 02 00 f2 	bz s1, 92 <fputs+0xc4>
   12e84:	59 10 00 a8 	load_32 s2, 4(s25)
   12e88:	79 20 00 a8 	load_32 s3, 8(s25)
   12e8c:	62 80 31 c1 	cmpge_i s3, s2, s3
   12e90:	a3 00 00 f4 	bnz s3, 20 <fputs+0x8c>
   12e94:	21 00 51 c0 	add_i s1, s1, s2
   12e98:	42 04 00 05 	add_i s2, s2, 1
   12e9c:	59 10 00 88 	store_32 s2, 4(s25)
   12ea0:	81 00 00 82 	store_8 s4, (s1)
   12ea4:	3a 04 00 05 	add_i s1, s26, 1
   12ea8:	9a 04 00 a0 	load_u8 s4, 1(s26)
   12eac:	40 83 f0 c0 	move s26, s1
   12eb0:	a4 fd ff f5 	bnz s4, -76 <fputs+0x4c>
   12eb4:	12 00 00 f6 	b 72 <fputs+0xe4>
   12eb8:	9e 9c 00 82 	store_8 s4, 39(sp)
   12ebc:	1e 80 00 a8 	load_32 s0, 32(sp)
   12ec0:	20 80 fd c0 	move s1, s27
   12ec4:	c5 04 00 f8 	call 4884 <write_console>
   12ec8:	3a 04 00 05 	add_i s1, s26, 1
   12ecc:	9a 04 00 a0 	load_u8 s4, 1(s26)
   12ed0:	40 83 f0 c0 	move s26, s1
   12ed4:	84 fc ff f5 	bnz s4, -112 <fputs+0x4c>
   12ed8:	09 00 00 f6 	b 36 <fputs+0xe4>
   12edc:	19 30 00 a8 	load_32 s0, 12(s25)
   12ee0:	3e 70 00 a8 	load_32 s1, 28(sp)
   12ee4:	40 80 fd c0 	move s2, s27
   12ee8:	a4 06 00 f8 	call 6800 <write>
   12eec:	3a 04 00 05 	add_i s1, s26, 1
   12ef0:	9a 04 00 a0 	load_u8 s4, 1(s26)
   12ef4:	40 83 f0 c0 	move s26, s1
   12ef8:	64 fb ff f5 	bnz s4, -148 <fputs+0x4c>
   12efc:	1e 60 00 a8 	load_32 s0, 24(sp)
   12f00:	fe b3 00 a8 	load_32 ra, 44(sp)
   12f04:	7e c3 00 a8 	load_32 s27, 48(sp)
   12f08:	5e d3 00 a8 	load_32 s26, 52(sp)
   12f0c:	3e e3 00 a8 	load_32 s25, 56(sp)
   12f10:	01 00 60 c0 	sub_i s0, s1, s0
   12f14:	1e f3 00 a8 	load_32 s24, 60(sp)
   12f18:	de 03 01 05 	add_i sp, sp, 64
   12f1c:	1f 00 00 f0 	ret

0000000000012f20 fgetc:
   12f20:	de 03 ff 05 	add_i sp, sp, -64
   12f24:	fe f3 00 88 	store_32 ra, 60(sp)
   12f28:	00 30 00 a8 	load_32 s0, 12(s0)
   12f2c:	3e ec 00 05 	add_i s1, sp, 59
   12f30:	40 04 00 0f 	move s2, 1
   12f34:	0f 06 00 f8 	call 6204 <read>
   12f38:	20 00 00 14 	cmplt_i s1, s0, 0
   12f3c:	1e ec 00 a0 	load_u8 s0, 59(sp)
   12f40:	41 00 00 f4 	bnz s1, 8 <fgetc+0x28>
   12f44:	02 00 00 f6 	b 8 <fgetc+0x2c>
   12f48:	00 fc ff 0f 	move s0, -1
   12f4c:	fe f3 00 a8 	load_32 ra, 60(sp)
   12f50:	de 03 01 05 	add_i sp, sp, 64
   12f54:	1f 00 00 f0 	ret

0000000000012f58 fopen:
   12f58:	de 03 ff 05 	add_i sp, sp, -64
   12f5c:	1e f3 00 88 	store_32 s24, 60(sp)
   12f60:	3e e3 00 88 	store_32 s25, 56(sp)
   12f64:	fe d3 00 88 	store_32 ra, 52(sp)
   12f68:	00 03 00 0f 	move s24, 0
   12f6c:	20 00 fc c0 	move s1, s24
   12f70:	c3 04 00 f8 	call 4876 <open>
   12f74:	20 03 f0 c0 	move s25, s0
   12f78:	19 00 00 14 	cmplt_i s0, s25, 0
   12f7c:	e0 00 00 f4 	bnz s0, 28 <fopen+0x40>
   12f80:	00 40 00 0f 	move s0, 16
   12f84:	32 e9 ff f9 	call -23352 <malloc>
   12f88:	00 03 f0 c0 	move s24, s0
   12f8c:	00 00 00 0f 	move s0, 0
   12f90:	18 00 00 88 	store_32 s0, (s24)
   12f94:	38 33 00 88 	store_32 s25, 12(s24)
   12f98:	00 00 fc c0 	move s0, s24
   12f9c:	fe d3 00 a8 	load_32 ra, 52(sp)
   12fa0:	3e e3 00 a8 	load_32 s25, 56(sp)
   12fa4:	1e f3 00 a8 	load_32 s24, 60(sp)
   12fa8:	de 03 01 05 	add_i sp, sp, 64
   12fac:	1f 00 00 f0 	ret

0000000000012fb0 fwrite:
   12fb0:	de 03 ff 05 	add_i sp, sp, -64
   12fb4:	1e f3 00 88 	store_32 s24, 60(sp)
   12fb8:	3e e3 00 88 	store_32 s25, 56(sp)
   12fbc:	5e d3 00 88 	store_32 s26, 52(sp)
   12fc0:	7e c3 00 88 	store_32 s27, 48(sp)
   12fc4:	fe b3 00 88 	store_32 ra, 44(sp)
   12fc8:	5e 50 00 88 	store_32 s2, 20(sp)
   12fcc:	20 83 f1 c0 	move s25, s3
   12fd0:	62 83 70 c0 	mull_i s27, s2, s1
   12fd4:	40 03 f0 c0 	move s26, s0
   12fd8:	5b 05 00 f2 	bz s27, 168 <fwrite+0xd0>
   12fdc:	0c 00 00 4f 	movehi s0, 12
   12fe0:	00 13 00 00 	or s24, s0, 4
   12fe4:	1e 9c 00 05 	add_i s0, sp, 39
   12fe8:	1e 70 00 88 	store_32 s0, 28(sp)
   12fec:	00 04 00 0f 	move s0, 1
   12ff0:	1e 80 00 88 	store_32 s0, 32(sp)
   12ff4:	1e a0 00 05 	add_i s0, sp, 40
   12ff8:	1e 60 00 88 	store_32 s0, 24(sp)
   12ffc:	1a 00 00 a2 	load_s8 s0, (s26)
   13000:	7b ff ff 05 	add_i s27, s27, -1
   13004:	1e a0 00 88 	store_32 s0, 40(sp)
   13008:	38 00 00 a8 	load_32 s1, (s24)
   1300c:	21 80 1c c1 	cmpne_i s1, s1, s25
   13010:	41 00 00 f4 	bnz s1, 8 <fwrite+0x68>
   13014:	0e 00 00 f6 	b 56 <fwrite+0x9c>
   13018:	39 00 00 a8 	load_32 s1, (s25)
   1301c:	61 02 00 f2 	bz s1, 76 <fwrite+0xb8>
   13020:	59 10 00 a8 	load_32 s2, 4(s25)
   13024:	79 20 00 a8 	load_32 s3, 8(s25)
   13028:	62 80 31 c1 	cmpge_i s3, s2, s3
   1302c:	a3 00 00 f4 	bnz s3, 20 <fwrite+0x90>
   13030:	21 00 51 c0 	add_i s1, s1, s2
   13034:	42 04 00 05 	add_i s2, s2, 1
   13038:	59 10 00 88 	store_32 s2, 4(s25)
   1303c:	01 00 00 82 	store_8 s0, (s1)
   13040:	5a 07 00 05 	add_i s26, s26, 1
   13044:	db fd ff f5 	bnz s27, -72 <fwrite+0x4c>
   13048:	0e 00 00 f6 	b 56 <fwrite+0xd0>
   1304c:	1e 9c 00 82 	store_8 s0, 39(sp)
   13050:	1e 70 00 a8 	load_32 s0, 28(sp)
   13054:	3e 80 00 a8 	load_32 s1, 32(sp)
   13058:	60 04 00 f8 	call 4480 <write_console>
   1305c:	5a 07 00 05 	add_i s26, s26, 1
   13060:	fb fc ff f5 	bnz s27, -100 <fwrite+0x4c>
   13064:	07 00 00 f6 	b 28 <fwrite+0xd0>
   13068:	19 30 00 a8 	load_32 s0, 12(s25)
   1306c:	3e 60 00 a8 	load_32 s1, 24(sp)
   13070:	5e 80 00 a8 	load_32 s2, 32(sp)
   13074:	41 06 00 f8 	call 6404 <write>
   13078:	5a 07 00 05 	add_i s26, s26, 1
   1307c:	1b fc ff f5 	bnz s27, -128 <fwrite+0x4c>
   13080:	1e 50 00 a8 	load_32 s0, 20(sp)
   13084:	fe b3 00 a8 	load_32 ra, 44(sp)
   13088:	7e c3 00 a8 	load_32 s27, 48(sp)
   1308c:	5e d3 00 a8 	load_32 s26, 52(sp)
   13090:	3e e3 00 a8 	load_32 s25, 56(sp)
   13094:	1e f3 00 a8 	load_32 s24, 60(sp)
   13098:	de 03 01 05 	add_i sp, sp, 64
   1309c:	1f 00 00 f0 	ret

00000000000130a0 fread:
   130a0:	de 03 ff 05 	add_i sp, sp, -64
   130a4:	1e f3 00 88 	store_32 s24, 60(sp)
   130a8:	fe e3 00 88 	store_32 ra, 56(sp)
   130ac:	00 83 f0 c0 	move s24, s1
   130b0:	20 00 f0 c0 	move s1, s0
   130b4:	03 30 00 a8 	load_32 s0, 12(s3)
   130b8:	42 00 7c c0 	mull_i s2, s2, s24
   130bc:	ad 05 00 f8 	call 5812 <read>
   130c0:	20 00 00 14 	cmplt_i s1, s0, 0
   130c4:	e1 00 00 f4 	bnz s1, 28 <fread+0x40>
   130c8:	20 00 fc c0 	move s1, s24
   130cc:	15 0d 00 f8 	call 13396 <__udivsi3>
   130d0:	fe e3 00 a8 	load_32 ra, 56(sp)
   130d4:	1e f3 00 a8 	load_32 s24, 60(sp)
   130d8:	de 03 01 05 	add_i sp, sp, 64
   130dc:	1f 00 00 f0 	ret
   130e0:	00 00 00 0f 	move s0, 0
   130e4:	fe e3 00 a8 	load_32 ra, 56(sp)
   130e8:	1e f3 00 a8 	load_32 s24, 60(sp)
   130ec:	de 03 01 05 	add_i sp, sp, 64
   130f0:	1f 00 00 f0 	ret

00000000000130f4 fclose:
   130f4:	de 03 ff 05 	add_i sp, sp, -64
   130f8:	1e f3 00 88 	store_32 s24, 60(sp)
   130fc:	3e e3 00 88 	store_32 s25, 56(sp)
   13100:	fe d3 00 88 	store_32 ra, 52(sp)
   13104:	00 03 f0 c0 	move s24, s0
   13108:	18 30 00 a8 	load_32 s0, 12(s24)
   1310c:	85 05 00 f8 	call 5652 <close>
   13110:	20 03 f0 c0 	move s25, s0
   13114:	00 00 fc c0 	move s0, s24
   13118:	57 f0 ff f9 	call -16036 <free>
   1311c:	00 80 fc c0 	move s0, s25
   13120:	fe d3 00 a8 	load_32 ra, 52(sp)
   13124:	3e e3 00 a8 	load_32 s25, 56(sp)
   13128:	1e f3 00 a8 	load_32 s24, 60(sp)
   1312c:	de 03 01 05 	add_i sp, sp, 64
   13130:	1f 00 00 f0 	ret

0000000000013134 fseek:
   13134:	de 03 ff 05 	add_i sp, sp, -64
   13138:	fe f3 00 88 	store_32 ra, 60(sp)
   1313c:	00 30 00 a8 	load_32 s0, 12(s0)
   13140:	18 06 00 f8 	call 6240 <lseek>
   13144:	fe f3 00 a8 	load_32 ra, 60(sp)
   13148:	de 03 01 05 	add_i sp, sp, 64
   1314c:	1f 00 00 f0 	ret

0000000000013150 ftell:
   13150:	de 03 ff 05 	add_i sp, sp, -64
   13154:	fe f3 00 88 	store_32 ra, 60(sp)
   13158:	00 30 00 a8 	load_32 s0, 12(s0)
   1315c:	20 00 00 0f 	move s1, 0
   13160:	40 04 00 0f 	move s2, 1
   13164:	0f 06 00 f8 	call 6204 <lseek>
   13168:	fe f3 00 a8 	load_32 ra, 60(sp)
   1316c:	de 03 01 05 	add_i sp, sp, 64
   13170:	1f 00 00 f0 	ret

0000000000013174 fprintf:
   13174:	de 03 ff 05 	add_i sp, sp, -64
   13178:	fe f3 00 88 	store_32 ra, 60(sp)
   1317c:	1e 00 01 a8 	load_32 s0, 64(sp)
   13180:	5e 20 01 05 	add_i s2, sp, 72
   13184:	3e 10 01 a8 	load_32 s1, 68(sp)
   13188:	5e e0 00 88 	store_32 s2, 56(sp)
   1318c:	16 00 00 f8 	call 88 <vfprintf>
   13190:	00 00 00 0f 	move s0, 0
   13194:	fe f3 00 a8 	load_32 ra, 60(sp)
   13198:	de 03 01 05 	add_i sp, sp, 64
   1319c:	1f 00 00 f0 	ret

00000000000131a0 fflush:
   131a0:	00 00 00 0f 	move s0, 0
   131a4:	1f 00 00 f0 	ret

00000000000131a8 ferror:
   131a8:	00 00 00 0f 	move s0, 0
   131ac:	1f 00 00 f0 	ret

00000000000131b0 ungetc:
   131b0:	de 03 ff 05 	add_i sp, sp, -64
   131b4:	1e f3 00 88 	store_32 s24, 60(sp)
   131b8:	fe e3 00 88 	store_32 ra, 56(sp)
   131bc:	00 03 f0 c0 	move s24, s0
   131c0:	01 30 00 a8 	load_32 s0, 12(s1)
   131c4:	20 fc ff 0f 	move s1, -1
   131c8:	40 04 00 0f 	move s2, 1
   131cc:	f5 05 00 f8 	call 6100 <lseek>
   131d0:	00 00 fc c0 	move s0, s24
   131d4:	fe e3 00 a8 	load_32 ra, 56(sp)
   131d8:	1e f3 00 a8 	load_32 s24, 60(sp)
   131dc:	de 03 01 05 	add_i sp, sp, 64
   131e0:	1f 00 00 f0 	ret

00000000000131e4 vfprintf:
   131e4:	de 03 fd 05 	add_i sp, sp, -192
   131e8:	1e f3 02 88 	store_32 s24, 188(sp)
   131ec:	3e e3 02 88 	store_32 s25, 184(sp)
   131f0:	5e d3 02 88 	store_32 s26, 180(sp)
   131f4:	7e c3 02 88 	store_32 s27, 176(sp)
   131f8:	fe b3 02 88 	store_32 ra, 172(sp)
   131fc:	40 83 f0 c0 	move s26, s1
   13200:	5e a0 02 88 	store_32 s2, 168(sp)
   13204:	3a 00 00 a0 	load_u8 s1, (s26)
   13208:	60 03 f0 c0 	move s27, s0
   1320c:	61 3f 00 f2 	bz s1, 2028 <vfprintf+0x814>
   13210:	02 00 00 4f 	movehi s0, 2
   13214:	40 04 00 0f 	move s2, 1
   13218:	5e c0 00 88 	store_32 s2, 48(sp)
   1321c:	40 94 00 0f 	move s2, 37
   13220:	5e a0 00 88 	store_32 s2, 40(sp)
   13224:	00 03 1c 00 	or s24, s0, 1792
   13228:	02 00 00 4f 	movehi s0, 2
   1322c:	80 00 00 0f 	move s4, 0
   13230:	60 50 01 00 	or s3, s0, 84
   13234:	00 14 00 0f 	move s0, 5
   13238:	1e d0 00 88 	store_32 s0, 52(sp)
   1323c:	00 08 00 0f 	move s0, 2
   13240:	1e b0 00 88 	store_32 s0, 44(sp)
   13244:	00 10 00 0f 	move s0, 4
   13248:	1e f0 00 88 	store_32 s0, 60(sp)
   1324c:	00 0c 00 0f 	move s0, 3
   13250:	1e 90 00 88 	store_32 s0, 36(sp)
   13254:	9e 10 01 88 	store_32 s4, 68(sp)
   13258:	9e 20 01 88 	store_32 s4, 72(sp)
   1325c:	20 03 f2 c0 	move s25, s4
   13260:	9e 30 01 88 	store_32 s4, 76(sp)
   13264:	00 00 f2 c0 	move s0, s4
   13268:	7e 63 01 88 	store_32 s27, 88(sp)
   1326c:	9e 40 01 88 	store_32 s4, 80(sp)
   13270:	1e 03 01 88 	store_32 s24, 64(sp)
   13274:	7e 50 01 88 	store_32 s3, 84(sp)
   13278:	46 01 00 f6 	b 1304 <vfprintf+0x5ac>
   1327c:	1e f0 00 a8 	load_32 s0, 60(sp)
   13280:	3a 00 00 a0 	load_u8 s1, (s26)
   13284:	61 28 00 f4 	bnz s1, 1292 <vfprintf+0x5ac>
   13288:	dc 01 00 f6 	b 1904 <vfprintf+0x814>
   1328c:	1e d0 00 a8 	load_32 s0, 52(sp)
   13290:	1e 03 01 a8 	load_32 s24, 64(sp)
   13294:	7e 50 01 a8 	load_32 s3, 84(sp)
   13298:	3a 00 00 a0 	load_u8 s1, (s26)
   1329c:	a1 27 00 f4 	bnz s1, 1268 <vfprintf+0x5ac>
   132a0:	d6 01 00 f6 	b 1880 <vfprintf+0x814>
   132a4:	1e b0 00 a8 	load_32 s0, 44(sp)
   132a8:	60 80 fc c0 	move s3, s25
   132ac:	3e 83 01 a8 	load_32 s25, 96(sp)
   132b0:	3a 00 00 a0 	load_u8 s1, (s26)
   132b4:	e1 26 00 f4 	bnz s1, 1244 <vfprintf+0x5ac>
   132b8:	d0 01 00 f6 	b 1856 <vfprintf+0x814>
   132bc:	3e 83 01 88 	store_32 s25, 96(sp)
   132c0:	20 00 00 4f 	movehi s1, 0
   132c4:	1e a0 02 a8 	load_32 s0, 168(sp)
   132c8:	21 60 05 00 	or s1, s1, 344
   132cc:	00 0c 00 05 	add_i s0, s0, 3
   132d0:	00 f0 ff 01 	and s0, s0, -4
   132d4:	40 10 00 05 	add_i s2, s0, 4
   132d8:	5e a0 02 88 	store_32 s2, 168(sp)
   132dc:	40 00 00 a8 	load_32 s2, (s0)
   132e0:	3e 90 01 88 	store_32 s1, 100(sp)
   132e4:	01 00 00 a8 	load_32 s0, (s1)
   132e8:	27 00 00 4f 	movehi s1, 7
   132ec:	21 ff 7f 00 	or s25, s1, 8191
   132f0:	02 00 e0 c2 	cmplt_f s0, s2, s0
   132f4:	00 80 1c c1 	cmpne_i s0, s0, s25
   132f8:	00 01 00 f4 	bnz s0, 32 <vfprintf+0x134>
   132fc:	20 80 fd c0 	move s1, s27
   13300:	5e 70 01 88 	store_32 s2, 92(sp)
   13304:	00 b4 00 0f 	move s0, 45
   13308:	04 fe ff f9 	call -2032 <fputc>
   1330c:	5e 70 01 a8 	load_32 s2, 92(sp)
   13310:	00 00 80 4f 	movehi s0, 262144
   13314:	42 00 30 c0 	xor s2, s2, s0
   13318:	20 00 b1 c1 	ftoi s1, s2
   1331c:	5e e3 00 88 	store_32 s26, 56(sp)
   13320:	5e 70 01 88 	store_32 s2, 92(sp)
   13324:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x148>
   13328:	ec 00 00 f6 	b 944 <vfprintf+0x4f4>
   1332c:	3e 80 00 88 	store_32 s1, 32(sp)
   13330:	01 04 00 14 	cmplt_i s0, s1, 1
   13334:	00 83 fd c0 	move s24, s27
   13338:	60 03 00 f4 	bnz s0, 108 <vfprintf+0x1c0>
   1333c:	3e 80 00 a8 	load_32 s1, 32(sp)
   13340:	60 53 00 0f 	move s27, 20
   13344:	46 cc cc 4f 	movehi s2, 419430
   13348:	5e a3 01 05 	add_i s26, sp, 104
   1334c:	7b ff ff 05 	add_i s27, s27, -1
   13350:	42 34 33 00 	or s2, s2, 3277
   13354:	41 00 81 c0 	mulh_u s2, s1, s2
   13358:	9a 80 5d c0 	add_i s4, s26, s27
   1335c:	a1 24 00 16 	cmpgt_u s5, s1, 9
   13360:	42 0c 00 0a 	shr s2, s2, 3
   13364:	62 28 00 07 	mull_i s3, s2, 10
   13368:	61 80 61 c0 	sub_i s3, s1, s3
   1336c:	63 c0 00 00 	or s3, s3, 48
   13370:	64 00 00 82 	store_8 s3, (s4)
   13374:	20 00 f1 c0 	move s1, s2
   13378:	65 fe ff f5 	bnz s5, -52 <vfprintf+0x160>
   1337c:	1e 63 01 a8 	load_32 s24, 88(sp)
   13380:	3b 4c 00 16 	cmpgt_u s1, s27, 19
   13384:	01 01 00 f4 	bnz s1, 32 <vfprintf+0x1c0>
   13388:	3a 80 5d c0 	add_i s1, s26, s27
   1338c:	7b 07 00 05 	add_i s27, s27, 1
   13390:	01 00 00 a2 	load_s8 s0, (s1)
   13394:	20 00 fc c0 	move s1, s24
   13398:	e0 fd ff f9 	call -2176 <fputc>
   1339c:	3b 50 00 18 	cmplt_u s1, s27, 20
   133a0:	41 ff ff f5 	bnz s1, -24 <vfprintf+0x1a4>
   133a4:	60 03 fc c0 	move s27, s24
   133a8:	1e 03 01 a8 	load_32 s24, 64(sp)
   133ac:	1e 80 00 a8 	load_32 s0, 32(sp)
   133b0:	cf 00 00 f6 	b 828 <vfprintf+0x508>
   133b4:	60 2b 00 0f 	move s27, 10
   133b8:	3e 20 01 a8 	load_32 s1, 72(sp)
   133bc:	3e 83 01 88 	store_32 s25, 96(sp)
   133c0:	21 40 00 01 	and s1, s1, 16
   133c4:	a1 2a 00 f2 	bz s1, 1364 <vfprintf+0x734>
   133c8:	1e a0 02 a8 	load_32 s0, 168(sp)
   133cc:	00 0c 00 05 	add_i s0, s0, 3
   133d0:	00 f0 ff 01 	and s0, s0, -4
   133d4:	20 10 00 05 	add_i s1, s0, 4
   133d8:	3e a0 02 88 	store_32 s1, 168(sp)
   133dc:	00 03 00 a8 	load_32 s24, (s0)
   133e0:	20 20 00 05 	add_i s1, s0, 8
   133e4:	3e a0 02 88 	store_32 s1, 168(sp)
   133e8:	20 13 00 a8 	load_32 s25, 4(s0)
   133ec:	1a 00 00 a0 	load_u8 s0, (s26)
   133f0:	7e 90 01 88 	store_32 s3, 100(sp)
   133f4:	20 a4 01 10 	cmpeq_i s1, s0, 105
   133f8:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x21c>
   133fc:	56 01 00 f6 	b 1368 <vfprintf+0x770>
   13400:	19 fc ff 12 	cmpgt_i s0, s25, -1
   13404:	a0 0a 00 f4 	bnz s0, 340 <vfprintf+0x374>
   13408:	38 00 00 11 	cmpne_i s1, s24, 0
   1340c:	00 00 00 0f 	move s0, 0
   13410:	61 09 00 f4 	bnz s1, 300 <vfprintf+0x358>
   13414:	20 00 f0 c0 	move s1, s0
   13418:	4a 00 00 f6 	b 296 <vfprintf+0x35c>
   1341c:	1e a0 02 a8 	load_32 s0, 168(sp)
   13420:	20 03 00 0f 	move s25, 0
   13424:	00 0c 00 05 	add_i s0, s0, 3
   13428:	00 f0 ff 01 	and s0, s0, -4
   1342c:	20 10 00 05 	add_i s1, s0, 4
   13430:	3e a0 02 88 	store_32 s1, 168(sp)
   13434:	00 03 00 a8 	load_32 s24, (s0)
   13438:	1a 00 00 a0 	load_u8 s0, (s26)
   1343c:	7e 90 01 88 	store_32 s3, 100(sp)
   13440:	20 a4 01 10 	cmpeq_i s1, s0, 105
   13444:	e1 fd ff f5 	bnz s1, -68 <vfprintf+0x21c>
   13448:	43 01 00 f6 	b 1292 <vfprintf+0x770>
   1344c:	20 23 00 0f 	move s25, 8
   13450:	3e 13 01 88 	store_32 s25, 68(sp)
   13454:	1f 01 00 f6 	b 1148 <vfprintf+0x6ec>
   13458:	1e a0 02 a8 	load_32 s0, 168(sp)
   1345c:	00 0c 00 05 	add_i s0, s0, 3
   13460:	00 f0 ff 01 	and s0, s0, -4
   13464:	20 10 00 05 	add_i s1, s0, 4
   13468:	3e a0 02 88 	store_32 s1, 168(sp)
   1346c:	00 00 00 a8 	load_32 s0, (s0)
   13470:	20 80 fd c0 	move s1, s27
   13474:	a9 fd ff f9 	call -2396 <fputc>
   13478:	7e 50 01 a8 	load_32 s3, 84(sp)
   1347c:	5a 07 00 05 	add_i s26, s26, 1
   13480:	1e 40 01 a8 	load_32 s0, 80(sp)
   13484:	3a 00 00 a0 	load_u8 s1, (s26)
   13488:	41 18 00 f4 	bnz s1, 776 <vfprintf+0x5ac>
   1348c:	5b 01 00 f6 	b 1388 <vfprintf+0x814>
   13490:	3e 83 01 88 	store_32 s25, 96(sp)
   13494:	60 03 fd c0 	move s27, s26
   13498:	1e a0 02 a8 	load_32 s0, 168(sp)
   1349c:	00 0c 00 05 	add_i s0, s0, 3
   134a0:	00 f0 ff 01 	and s0, s0, -4
   134a4:	20 10 00 05 	add_i s1, s0, 4
   134a8:	3e a0 02 88 	store_32 s1, 168(sp)
   134ac:	3e 33 01 a8 	load_32 s25, 76(sp)
   134b0:	40 03 00 a8 	load_32 s26, (s0)
   134b4:	39 00 00 10 	cmpeq_i s1, s25, 0
   134b8:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x2dc>
   134bc:	03 00 00 f6 	b 12 <vfprintf+0x2e4>
   134c0:	1f fc 7f 4f 	movehi s0, 262143
   134c4:	20 ff 7f 00 	or s25, s0, 8191
   134c8:	00 03 00 0f 	move s24, 0
   134cc:	19 04 00 14 	cmplt_i s0, s25, 1
   134d0:	40 01 00 f4 	bnz s0, 40 <vfprintf+0x314>
   134d4:	1a 00 00 a2 	load_s8 s0, (s26)
   134d8:	00 01 00 f2 	bz s0, 32 <vfprintf+0x314>
   134dc:	3e 60 01 a8 	load_32 s1, 88(sp)
   134e0:	5a 07 00 05 	add_i s26, s26, 1
   134e4:	8d fd ff f9 	call -2508 <fputc>
   134e8:	18 07 00 05 	add_i s24, s24, 1
   134ec:	7e 50 01 a8 	load_32 s3, 84(sp)
   134f0:	18 80 4c c1 	cmplt_i s0, s24, s25
   134f4:	00 ff ff f5 	bnz s0, -32 <vfprintf+0x2f0>
   134f8:	5e 83 01 a8 	load_32 s26, 96(sp)
   134fc:	1a 80 4c c1 	cmplt_i s0, s26, s25
   13500:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x324>
   13504:	40 83 fc c0 	move s26, s25
   13508:	18 00 3d c1 	cmpge_i s0, s24, s26
   1350c:	a0 13 00 f4 	bnz s0, 628 <vfprintf+0x59c>
   13510:	3e 63 01 a8 	load_32 s25, 88(sp)
   13514:	00 80 00 0f 	move s0, 32
   13518:	20 80 fc c0 	move s1, s25
   1351c:	7f fd ff f9 	call -2564 <fputc>
   13520:	18 07 00 05 	add_i s24, s24, 1
   13524:	18 00 4d c1 	cmplt_i s0, s24, s26
   13528:	60 ff ff f5 	bnz s0, -20 <vfprintf+0x330>
   1352c:	40 83 fd c0 	move s26, s27
   13530:	60 83 fc c0 	move s27, s25
   13534:	1e 03 01 a8 	load_32 s24, 64(sp)
   13538:	8b 00 00 f6 	b 556 <vfprintf+0x580>
   1353c:	20 04 00 0f 	move s1, 1
   13540:	40 80 6c c0 	sub_i s2, s0, s25
   13544:	00 03 6c c0 	sub_i s24, s0, s24
   13548:	00 b4 00 0f 	move s0, 45
   1354c:	22 83 60 c0 	sub_i s25, s2, s1
   13550:	3e 60 01 a8 	load_32 s1, 88(sp)
   13554:	71 fd ff f9 	call -2620 <fputc>
   13558:	00 00 fc c0 	move s0, s24
   1355c:	20 80 fc c0 	move s1, s25
   13560:	40 80 fd c0 	move s2, s27
   13564:	7e 90 01 a8 	load_32 s3, 100(sp)
   13568:	b1 0b 00 f8 	call 11972 <__umoddi3>
   1356c:	22 00 00 4f 	movehi s1, 2
   13570:	5e 90 01 a8 	load_32 s2, 100(sp)
   13574:	21 5c 0d 00 	or s1, s1, 855
   13578:	3e 70 01 88 	store_32 s1, 92(sp)
   1357c:	01 00 50 c0 	add_i s0, s1, s0
   13580:	22 80 0c c1 	cmpeq_i s1, s2, s25
   13584:	00 00 00 a0 	load_u8 s0, (s0)
   13588:	1e 9c 02 82 	store_8 s0, 167(sp)
   1358c:	c1 00 00 f4 	bnz s1, 24 <vfprintf+0x3c0>
   13590:	02 80 6c c1 	cmpgt_u s0, s2, s25
   13594:	5e e3 00 88 	store_32 s26, 56(sp)
   13598:	40 ff 00 0f 	move s26, 63
   1359c:	20 04 00 f4 	bnz s0, 132 <vfprintf+0x43c>
   135a0:	05 00 00 f6 	b 20 <vfprintf+0x3d0>
   135a4:	1b 00 6c c1 	cmpgt_u s0, s27, s24
   135a8:	5e e3 00 88 	store_32 s26, 56(sp)
   135ac:	40 ff 00 0f 	move s26, 63
   135b0:	80 03 00 f4 	bnz s0, 112 <vfprintf+0x43c>
   135b4:	00 00 fc c0 	move s0, s24
   135b8:	20 80 fc c0 	move s1, s25
   135bc:	40 80 fd c0 	move s2, s27
   135c0:	7e 90 01 a8 	load_32 s3, 100(sp)
   135c4:	e8 08 00 f8 	call 9120 <__udivdi3>
   135c8:	00 03 f0 c0 	move s24, s0
   135cc:	20 83 f0 c0 	move s25, s1
   135d0:	40 80 fd c0 	move s2, s27
   135d4:	7e 90 01 a8 	load_32 s3, 100(sp)
   135d8:	5a ff ff 05 	add_i s26, s26, -1
   135dc:	94 0b 00 f8 	call 11856 <__umoddi3>
   135e0:	7e 90 01 a8 	load_32 s3, 100(sp)
   135e4:	3e a0 01 05 	add_i s1, sp, 104
   135e8:	5e 70 01 a8 	load_32 s2, 92(sp)
   135ec:	21 00 5d c0 	add_i s1, s1, s26
   135f0:	02 00 50 c0 	add_i s0, s2, s0
   135f4:	43 80 0c c1 	cmpeq_i s2, s3, s25
   135f8:	00 00 00 a0 	load_u8 s0, (s0)
   135fc:	01 00 00 82 	store_8 s0, (s1)
   13600:	a2 00 00 f4 	bnz s2, 20 <vfprintf+0x430>
   13604:	03 80 6c c1 	cmpgt_u s0, s3, s25
   13608:	c0 00 00 f4 	bnz s0, 24 <vfprintf+0x43c>
   1360c:	5a fd ff f5 	bnz s26, -88 <vfprintf+0x3d0>
   13610:	04 00 00 f6 	b 16 <vfprintf+0x43c>
   13614:	1b 00 6c c1 	cmpgt_u s0, s27, s24
   13618:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x43c>
   1361c:	fc ff ff f7 	b -16 <vfprintf+0x428>
   13620:	1e 10 01 a8 	load_32 s0, 68(sp)
   13624:	00 20 00 01 	and s0, s0, 8
   13628:	00 00 00 10 	cmpeq_i s0, s0, 0
   1362c:	60 00 00 f4 	bnz s0, 12 <vfprintf+0x454>
   13630:	00 c0 00 0f 	move s0, 48
   13634:	02 00 00 f6 	b 8 <vfprintf+0x458>
   13638:	00 80 00 0f 	move s0, 32
   1363c:	40 00 01 0f 	move s2, 64
   13640:	7e 63 01 a8 	load_32 s27, 88(sp)
   13644:	22 03 6d c0 	sub_i s25, s2, s26
   13648:	5e 80 01 a8 	load_32 s2, 96(sp)
   1364c:	59 00 31 c1 	cmpge_i s2, s25, s2
   13650:	82 01 00 f4 	bnz s2, 48 <vfprintf+0x49c>
   13654:	00 83 fd c0 	move s24, s27
   13658:	20 00 fc c0 	move s1, s24
   1365c:	60 03 f0 c0 	move s27, s0
   13660:	2e fd ff f9 	call -2888 <fputc>
   13664:	00 80 fd c0 	move s0, s27
   13668:	60 03 fc c0 	move s27, s24
   1366c:	5e 80 01 a8 	load_32 s2, 96(sp)
   13670:	39 07 00 05 	add_i s25, s25, 1
   13674:	59 00 41 c1 	cmplt_i s2, s25, s2
   13678:	e2 fe ff f5 	bnz s2, -36 <vfprintf+0x470>
   1367c:	3e 83 01 a8 	load_32 s25, 96(sp)
   13680:	1e 33 01 a8 	load_32 s24, 76(sp)
   13684:	19 00 3c c1 	cmpge_i s0, s25, s24
   13688:	e0 00 00 f4 	bnz s0, 28 <vfprintf+0x4c0>
   1368c:	00 c0 00 0f 	move s0, 48
   13690:	20 80 fd c0 	move s1, s27
   13694:	21 fd ff f9 	call -2940 <fputc>
   13698:	39 07 00 05 	add_i s25, s25, 1
   1369c:	19 00 4c c1 	cmplt_i s0, s25, s24
   136a0:	60 ff ff f5 	bnz s0, -20 <vfprintf+0x4a8>
   136a4:	1e 03 01 a8 	load_32 s24, 64(sp)
   136a8:	1a fc 00 12 	cmpgt_i s0, s26, 63
   136ac:	20 01 00 f4 	bnz s0, 36 <vfprintf+0x4ec>
   136b0:	1e a0 01 05 	add_i s0, sp, 104
   136b4:	00 00 5d c0 	add_i s0, s0, s26
   136b8:	5a 07 00 05 	add_i s26, s26, 1
   136bc:	00 00 00 a2 	load_s8 s0, (s0)
   136c0:	20 80 fd c0 	move s1, s27
   136c4:	15 fd ff f9 	call -2988 <fputc>
   136c8:	1a 00 01 18 	cmplt_u s0, s26, 64
   136cc:	20 ff ff f5 	bnz s0, -28 <vfprintf+0x4cc>
   136d0:	5e e3 00 a8 	load_32 s26, 56(sp)
   136d4:	24 00 00 f6 	b 144 <vfprintf+0x580>
   136d8:	40 83 f0 c0 	move s26, s1
   136dc:	00 c0 00 0f 	move s0, 48
   136e0:	20 80 fd c0 	move s1, s27
   136e4:	0d fd ff f9 	call -3020 <fputc>
   136e8:	00 00 fd c0 	move s0, s26
   136ec:	40 03 a0 c2 	itof s26, s0
   136f0:	00 b8 00 0f 	move s0, 46
   136f4:	20 80 fd c0 	move s1, s27
   136f8:	08 fd ff f9 	call -3040 <fputc>
   136fc:	7e 33 01 a8 	load_32 s27, 76(sp)
   13700:	1b 00 00 12 	cmpgt_i s0, s27, 0
   13704:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x528>
   13708:	60 1f 00 0f 	move s27, 7
   1370c:	1e 70 01 a8 	load_32 s0, 92(sp)
   13710:	40 03 1d c2 	sub_f s26, s0, s26
   13714:	00 00 00 4f 	movehi s0, 0
   13718:	00 00 06 00 	or s0, s0, 384
   1371c:	00 00 00 a8 	load_32 s0, (s0)
   13720:	1a 00 20 c2 	mul_f s0, s26, s0
   13724:	20 00 b0 c1 	ftoi s1, s0
   13728:	40 80 a0 c2 	itof s2, s1
   1372c:	40 03 11 c2 	sub_f s26, s0, s2
   13730:	01 c0 00 05 	add_i s0, s1, 48
   13734:	3e 60 01 a8 	load_32 s1, 88(sp)
   13738:	f8 fc ff f9 	call -3104 <fputc>
   1373c:	1e 90 01 a8 	load_32 s0, 100(sp)
   13740:	00 00 00 a8 	load_32 s0, (s0)
   13744:	1a 00 c0 c2 	cmpgt_f s0, s26, s0
   13748:	00 80 1c c1 	cmpne_i s0, s0, s25
   1374c:	80 00 00 f4 	bnz s0, 16 <vfprintf+0x578>
   13750:	1b 00 00 12 	cmpgt_i s0, s27, 0
   13754:	7b ff ff 05 	add_i s27, s27, -1
   13758:	e0 fd ff f5 	bnz s0, -68 <vfprintf+0x530>
   1375c:	5e e3 00 a8 	load_32 s26, 56(sp)
   13760:	7e 63 01 a8 	load_32 s27, 88(sp)
   13764:	7e 50 01 a8 	load_32 s3, 84(sp)
   13768:	3e 83 01 a8 	load_32 s25, 96(sp)
   1376c:	5a 07 00 05 	add_i s26, s26, 1
   13770:	1e 40 01 a8 	load_32 s0, 80(sp)
   13774:	3a 00 00 a0 	load_u8 s1, (s26)
   13778:	c1 00 00 f4 	bnz s1, 24 <vfprintf+0x5ac>
   1377c:	9f 00 00 f6 	b 636 <vfprintf+0x814>
   13780:	40 83 fd c0 	move s26, s27
   13784:	7e 63 01 a8 	load_32 s27, 88(sp)
   13788:	1e 03 01 a8 	load_32 s24, 64(sp)
   1378c:	f7 ff ff f7 	b -36 <vfprintf+0x584>
   13790:	40 14 00 16 	cmpgt_u s2, s0, 5
   13794:	e2 12 00 f4 	bnz s2, 604 <vfprintf+0x80c>
   13798:	00 08 00 0b 	shl s0, s0, 2
   1379c:	00 00 5c c0 	add_i s0, s0, s24
   137a0:	00 00 00 a8 	load_32 s0, (s0)
   137a4:	00 00 00 f0 	b s0
   137a8:	01 fc 03 01 	and s0, s1, 255
   137ac:	5a 07 00 05 	add_i s26, s26, 1
   137b0:	00 94 00 10 	cmpeq_i s0, s0, 37
   137b4:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x5d8>
   137b8:	6a 00 00 f6 	b 424 <vfprintf+0x77c>
   137bc:	1e c0 00 a8 	load_32 s0, 48(sp)
   137c0:	3e 40 01 a8 	load_32 s1, 80(sp)
   137c4:	3e 30 01 88 	store_32 s1, 76(sp)
   137c8:	20 83 f0 c0 	move s25, s1
   137cc:	3e 20 01 88 	store_32 s1, 72(sp)
   137d0:	3e 10 01 88 	store_32 s1, 68(sp)
   137d4:	3a 00 00 a0 	load_u8 s1, (s26)
   137d8:	c1 fd ff f5 	bnz s1, -72 <vfprintf+0x5ac>
   137dc:	87 00 00 f6 	b 540 <vfprintf+0x814>
   137e0:	01 fc 03 01 	and s0, s1, 255
   137e4:	00 94 00 11 	cmpne_i s0, s0, 37
   137e8:	c0 0c 00 f4 	bnz s0, 408 <vfprintf+0x79c>
   137ec:	5a 07 00 05 	add_i s26, s26, 1
   137f0:	1e a0 00 a8 	load_32 s0, 40(sp)
   137f4:	5c 00 00 f6 	b 368 <vfprintf+0x780>
   137f8:	00 80 d0 c1 	sext_8 s0, s1
   137fc:	00 40 ff 05 	add_i s0, s0, -48
   13800:	40 24 00 16 	cmpgt_u s2, s0, 9
   13804:	62 0e 00 f4 	bnz s2, 460 <vfprintf+0x7ec>
   13808:	39 28 00 07 	mull_i s1, s25, 10
   1380c:	20 83 50 c0 	add_i s25, s0, s1
   13810:	1e b0 00 a8 	load_32 s0, 44(sp)
   13814:	5a 07 00 05 	add_i s26, s26, 1
   13818:	3a 00 00 a0 	load_u8 s1, (s26)
   1381c:	a1 fb ff f5 	bnz s1, -140 <vfprintf+0x5ac>
   13820:	76 00 00 f6 	b 472 <vfprintf+0x814>
   13824:	00 80 d0 c1 	sext_8 s0, s1
   13828:	00 40 ff 05 	add_i s0, s0, -48
   1382c:	20 24 00 16 	cmpgt_u s1, s0, 9
   13830:	61 d2 ff f5 	bnz s1, -1460 <vfprintf+0x98>
   13834:	3e 30 01 a8 	load_32 s1, 76(sp)
   13838:	5a 07 00 05 	add_i s26, s26, 1
   1383c:	21 28 00 07 	mull_i s1, s1, 10
   13840:	00 80 50 c0 	add_i s0, s0, s1
   13844:	1e 30 01 88 	store_32 s0, 76(sp)
   13848:	00 0c 00 0f 	move s0, 3
   1384c:	3a 00 00 a0 	load_u8 s1, (s26)
   13850:	01 fa ff f5 	bnz s1, -192 <vfprintf+0x5ac>
   13854:	69 00 00 f6 	b 420 <vfprintf+0x814>
   13858:	02 00 00 4f 	movehi s0, 2
   1385c:	20 80 d0 c1 	sext_8 s1, s1
   13860:	40 20 00 0f 	move s2, 8
   13864:	00 33 01 00 	or s24, s0, 76
   13868:	00 00 fc c0 	move s0, s24
   1386c:	26 01 00 f8 	call 1176 <memchr>
   13870:	e0 d0 ff f3 	bz s0, -1508 <vfprintf+0xa8>
   13874:	20 04 00 0f 	move s1, 1
   13878:	00 00 6c c0 	sub_i s0, s0, s24
   1387c:	5a 07 00 05 	add_i s26, s26, 1
   13880:	01 00 b0 c0 	shl s0, s1, s0
   13884:	3e 20 01 a8 	load_32 s1, 72(sp)
   13888:	20 80 00 c0 	or s1, s0, s1
   1388c:	3e 20 01 88 	store_32 s1, 72(sp)
   13890:	1e f0 00 a8 	load_32 s0, 60(sp)
   13894:	1e 03 01 a8 	load_32 s24, 64(sp)
   13898:	7e 50 01 a8 	load_32 s3, 84(sp)
   1389c:	3a 00 00 a0 	load_u8 s1, (s26)
   138a0:	81 f7 ff f5 	bnz s1, -272 <vfprintf+0x5ac>
   138a4:	55 00 00 f6 	b 340 <vfprintf+0x814>
   138a8:	00 80 d0 c1 	sext_8 s0, s1
   138ac:	00 a0 fe 05 	add_i s0, s0, -88
   138b0:	40 80 00 16 	cmpgt_u s2, s0, 32
   138b4:	c2 f5 ff f5 	bnz s2, -328 <vfprintf+0x588>
   138b8:	42 00 00 4f 	movehi s2, 2
   138bc:	00 08 00 0b 	shl s0, s0, 2
   138c0:	42 60 1c 00 	or s2, s2, 1816
   138c4:	00 00 51 c0 	add_i s0, s0, s2
   138c8:	00 00 00 a8 	load_32 s0, (s0)
   138cc:	00 00 00 f0 	b s0
   138d0:	01 fc 03 01 	and s0, s1, 255
   138d4:	60 00 00 0f 	move s3, 0
   138d8:	20 a0 fe 05 	add_i s1, s0, -88
   138dc:	41 80 00 16 	cmpgt_u s2, s1, 32
   138e0:	a2 d6 ff f5 	bnz s2, -1324 <vfprintf+0x1d0>
   138e4:	42 00 00 4f 	movehi s2, 2
   138e8:	21 08 00 0b 	shl s1, s1, 2
   138ec:	60 23 00 0f 	move s27, 8
   138f0:	42 70 1e 00 	or s2, s2, 1948
   138f4:	21 00 51 c0 	add_i s1, s1, s2
   138f8:	21 00 00 a8 	load_32 s1, (s1)
   138fc:	01 00 00 f0 	b s1
   13900:	60 43 00 0f 	move s27, 16
   13904:	3e 20 01 a8 	load_32 s1, 72(sp)
   13908:	3e 83 01 88 	store_32 s25, 96(sp)
   1390c:	21 40 00 01 	and s1, s1, 16
   13910:	41 00 00 f2 	bz s1, 8 <vfprintf+0x734>
   13914:	ad fe ff f7 	b -1356 <vfprintf+0x1e4>
   13918:	20 a4 01 10 	cmpeq_i s1, s0, 105
   1391c:	61 00 00 f4 	bnz s1, 12 <vfprintf+0x744>
   13920:	00 90 01 11 	cmpne_i s0, s0, 100
   13924:	c0 d7 ff f5 	bnz s0, -1288 <vfprintf+0x238>
   13928:	1e a0 02 a8 	load_32 s0, 168(sp)
   1392c:	00 0c 00 05 	add_i s0, s0, 3
   13930:	00 f0 ff 01 	and s0, s0, -4
   13934:	20 10 00 05 	add_i s1, s0, 4
   13938:	3e a0 02 88 	store_32 s1, 168(sp)
   1393c:	00 03 00 a8 	load_32 s24, (s0)
   13940:	38 7f 00 09 	ashr s25, s24, 31
   13944:	1a 00 00 a0 	load_u8 s0, (s26)
   13948:	7e 90 01 88 	store_32 s3, 100(sp)
   1394c:	20 a4 01 10 	cmpeq_i s1, s0, 105
   13950:	81 d5 ff f5 	bnz s1, -1360 <vfprintf+0x21c>
   13954:	00 90 01 11 	cmpne_i s0, s0, 100
   13958:	00 e0 ff f5 	bnz s0, -1024 <vfprintf+0x374>
   1395c:	a9 fe ff f7 	b -1372 <vfprintf+0x21c>
   13960:	00 80 d0 c1 	sext_8 s0, s1
   13964:	20 80 fd c0 	move s1, s27
   13968:	6c fc ff f9 	call -3664 <fputc>
   1396c:	7e 50 01 a8 	load_32 s3, 84(sp)
   13970:	1e 40 01 a8 	load_32 s0, 80(sp)
   13974:	3a 00 00 a0 	load_u8 s1, (s26)
   13978:	c1 f0 ff f5 	bnz s1, -488 <vfprintf+0x5ac>
   1397c:	1f 00 00 f6 	b 124 <vfprintf+0x814>
   13980:	3e 83 01 88 	store_32 s25, 96(sp)
   13984:	00 80 f1 c0 	move s0, s3
   13988:	5e d0 00 a8 	load_32 s2, 52(sp)
   1398c:	20 80 d0 c1 	sext_8 s1, s1
   13990:	20 83 f1 c0 	move s25, s3
   13994:	dc 00 00 f8 	call 880 <memchr>
   13998:	60 c8 ff f3 	bz s0, -1780 <vfprintf+0xc0>
   1399c:	3e c0 00 a8 	load_32 s1, 48(sp)
   139a0:	00 80 6c c0 	sub_i s0, s0, s25
   139a4:	5e 10 01 a8 	load_32 s2, 68(sp)
   139a8:	5a 07 00 05 	add_i s26, s26, 1
   139ac:	01 00 b0 c0 	shl s0, s1, s0
   139b0:	40 00 01 c0 	or s2, s0, s2
   139b4:	5e 10 01 88 	store_32 s2, 68(sp)
   139b8:	00 80 f0 c0 	move s0, s1
   139bc:	60 80 fc c0 	move s3, s25
   139c0:	3e 83 01 a8 	load_32 s25, 96(sp)
   139c4:	3a 00 00 a0 	load_u8 s1, (s26)
   139c8:	41 ee ff f5 	bnz s1, -568 <vfprintf+0x5ac>
   139cc:	0b 00 00 f6 	b 44 <vfprintf+0x814>
   139d0:	01 fc 03 01 	and s0, s1, 255
   139d4:	20 b8 00 10 	cmpeq_i s1, s0, 46
   139d8:	1e 90 00 a8 	load_32 s0, 36(sp)
   139dc:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x800>
   139e0:	1e f0 00 a8 	load_32 s0, 60(sp)
   139e4:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x808>
   139e8:	02 00 00 f6 	b 8 <vfprintf+0x80c>
   139ec:	5a 07 00 05 	add_i s26, s26, 1
   139f0:	3a 00 00 a0 	load_u8 s1, (s26)
   139f4:	e1 ec ff f5 	bnz s1, -612 <vfprintf+0x5ac>
   139f8:	fe b3 02 a8 	load_32 ra, 172(sp)
   139fc:	00 00 00 0f 	move s0, 0
   13a00:	7e c3 02 a8 	load_32 s27, 176(sp)
   13a04:	5e d3 02 a8 	load_32 s26, 180(sp)
   13a08:	3e e3 02 a8 	load_32 s25, 184(sp)
   13a0c:	1e f3 02 a8 	load_32 s24, 188(sp)
   13a10:	de 03 03 05 	add_i sp, sp, 192
   13a14:	1f 00 00 f0 	ret

0000000000013a18 strcmp:
   13a18:	60 00 00 a0 	load_u8 s3, (s0)
   13a1c:	40 00 00 0f 	move s2, 0
   13a20:	23 01 00 f2 	bz s3, 36 <strcmp+0x2c>
   13a24:	81 00 00 a0 	load_u8 s4, (s1)
   13a28:	a3 fc 03 01 	and s5, s3, 255
   13a2c:	85 00 12 c1 	cmpne_i s4, s5, s4
   13a30:	24 01 00 f4 	bnz s4, 36 <strcmp+0x3c>
   13a34:	60 04 00 a0 	load_u8 s3, 1(s0)
   13a38:	00 04 00 05 	add_i s0, s0, 1
   13a3c:	21 04 00 05 	add_i s1, s1, 1
   13a40:	23 ff ff f5 	bnz s3, -28 <strcmp+0xc>
   13a44:	01 00 00 a2 	load_s8 s0, (s1)
   13a48:	20 00 d1 c1 	sext_8 s1, s2
   13a4c:	01 00 60 c0 	sub_i s0, s1, s0
   13a50:	1f 00 00 f0 	ret
   13a54:	40 80 f1 c0 	move s2, s3
   13a58:	01 00 00 a2 	load_s8 s0, (s1)
   13a5c:	20 00 d1 c1 	sext_8 s1, s2
   13a60:	01 00 60 c0 	sub_i s0, s1, s0
   13a64:	1f 00 00 f0 	ret

0000000000013a68 strncmp:
   13a68:	62 02 00 f2 	bz s2, 76 <strncmp+0x4c>
   13a6c:	60 00 00 a0 	load_u8 s3, (s0)
   13a70:	a3 01 00 f2 	bz s3, 52 <strncmp+0x3c>
   13a74:	42 fc ff 05 	add_i s2, s2, -1
   13a78:	62 01 00 f2 	bz s2, 44 <strncmp+0x3c>
   13a7c:	81 00 00 a0 	load_u8 s4, (s1)
   13a80:	a3 fc 03 01 	and s5, s3, 255
   13a84:	85 00 12 c1 	cmpne_i s4, s5, s4
   13a88:	e4 00 00 f4 	bnz s4, 28 <strncmp+0x3c>
   13a8c:	60 04 00 a0 	load_u8 s3, 1(s0)
   13a90:	21 04 00 05 	add_i s1, s1, 1
   13a94:	83 00 00 f2 	bz s3, 16 <strncmp+0x3c>
   13a98:	42 fc ff 05 	add_i s2, s2, -1
   13a9c:	00 04 00 05 	add_i s0, s0, 1
   13aa0:	e2 fe ff f5 	bnz s2, -36 <strncmp+0x14>
   13aa4:	01 00 00 a2 	load_s8 s0, (s1)
   13aa8:	20 80 d1 c1 	sext_8 s1, s3
   13aac:	01 00 60 c0 	sub_i s0, s1, s0
   13ab0:	1f 00 00 f0 	ret
   13ab4:	00 00 00 0f 	move s0, 0
   13ab8:	1f 00 00 f0 	ret

0000000000013abc strcasecmp:
   13abc:	60 00 00 a0 	load_u8 s3, (s0)
   13ac0:	40 00 00 0f 	move s2, 0
   13ac4:	a3 02 00 f2 	bz s3, 84 <strcasecmp+0x5c>
   13ac8:	80 80 d1 c1 	sext_8 s4, s3
   13acc:	a4 7c fe 05 	add_i s5, s4, -97
   13ad0:	a5 68 00 18 	cmplt_u s5, s5, 26
   13ad4:	45 00 00 f4 	bnz s5, 8 <strcasecmp+0x20>
   13ad8:	02 00 00 f6 	b 8 <strcasecmp+0x24>
   13adc:	84 80 ff 05 	add_i s4, s4, -32
   13ae0:	a1 00 00 a2 	load_s8 s5, (s1)
   13ae4:	c5 7c fe 05 	add_i s6, s5, -97
   13ae8:	c6 68 00 18 	cmplt_u s6, s6, 26
   13aec:	46 00 00 f4 	bnz s6, 8 <strcasecmp+0x38>
   13af0:	02 00 00 f6 	b 8 <strcasecmp+0x3c>
   13af4:	a5 80 ff 05 	add_i s5, s5, -32
   13af8:	84 80 12 c1 	cmpne_i s4, s4, s5
   13afc:	c4 00 00 f4 	bnz s4, 24 <strcasecmp+0x58>
   13b00:	60 04 00 a0 	load_u8 s3, 1(s0)
   13b04:	00 04 00 05 	add_i s0, s0, 1
   13b08:	21 04 00 05 	add_i s1, s1, 1
   13b0c:	e3 fd ff f5 	bnz s3, -68 <strcasecmp+0xc>
   13b10:	02 00 00 f6 	b 8 <strcasecmp+0x5c>
   13b14:	40 80 f1 c0 	move s2, s3
   13b18:	00 00 d1 c1 	sext_8 s0, s2
   13b1c:	40 7c fe 05 	add_i s2, s0, -97
   13b20:	42 68 00 18 	cmplt_u s2, s2, 26
   13b24:	42 00 00 f4 	bnz s2, 8 <strcasecmp+0x70>
   13b28:	02 00 00 f6 	b 8 <strcasecmp+0x74>
   13b2c:	00 80 ff 05 	add_i s0, s0, -32
   13b30:	21 00 00 a2 	load_s8 s1, (s1)
   13b34:	41 7c fe 05 	add_i s2, s1, -97
   13b38:	42 68 00 18 	cmplt_u s2, s2, 26
   13b3c:	42 00 00 f4 	bnz s2, 8 <strcasecmp+0x88>
   13b40:	02 00 00 f6 	b 8 <strcasecmp+0x8c>
   13b44:	21 80 ff 05 	add_i s1, s1, -32
   13b48:	00 80 60 c0 	sub_i s0, s0, s1
   13b4c:	1f 00 00 f0 	ret

0000000000013b50 toupper:
   13b50:	20 7c fe 05 	add_i s1, s0, -97
   13b54:	21 68 00 18 	cmplt_u s1, s1, 26
   13b58:	41 00 00 f4 	bnz s1, 8 <toupper+0x10>
   13b5c:	02 00 00 f6 	b 8 <toupper+0x14>
   13b60:	00 80 ff 05 	add_i s0, s0, -32
   13b64:	1f 00 00 f0 	ret

0000000000013b68 strncasecmp:
   13b68:	e2 04 00 f2 	bz s2, 156 <strncasecmp+0x9c>
   13b6c:	60 00 00 a0 	load_u8 s3, (s0)
   13b70:	e3 02 00 f2 	bz s3, 92 <strncasecmp+0x64>
   13b74:	42 fc ff 05 	add_i s2, s2, -1
   13b78:	a2 02 00 f2 	bz s2, 84 <strncasecmp+0x64>
   13b7c:	80 80 d1 c1 	sext_8 s4, s3
   13b80:	a4 7c fe 05 	add_i s5, s4, -97
   13b84:	a5 68 00 18 	cmplt_u s5, s5, 26
   13b88:	45 00 00 f4 	bnz s5, 8 <strncasecmp+0x28>
   13b8c:	02 00 00 f6 	b 8 <strncasecmp+0x2c>
   13b90:	84 80 ff 05 	add_i s4, s4, -32
   13b94:	a1 00 00 a2 	load_s8 s5, (s1)
   13b98:	c5 7c fe 05 	add_i s6, s5, -97
   13b9c:	c6 68 00 18 	cmplt_u s6, s6, 26
   13ba0:	46 00 00 f4 	bnz s6, 8 <strncasecmp+0x40>
   13ba4:	02 00 00 f6 	b 8 <strncasecmp+0x44>
   13ba8:	a5 80 ff 05 	add_i s5, s5, -32
   13bac:	84 80 12 c1 	cmpne_i s4, s4, s5
   13bb0:	e4 00 00 f4 	bnz s4, 28 <strncasecmp+0x64>
   13bb4:	60 04 00 a0 	load_u8 s3, 1(s0)
   13bb8:	21 04 00 05 	add_i s1, s1, 1
   13bbc:	83 00 00 f2 	bz s3, 16 <strncasecmp+0x64>
   13bc0:	42 fc ff 05 	add_i s2, s2, -1
   13bc4:	00 04 00 05 	add_i s0, s0, 1
   13bc8:	a2 fd ff f5 	bnz s2, -76 <strncasecmp+0x14>
   13bcc:	00 80 d1 c1 	sext_8 s0, s3
   13bd0:	40 7c fe 05 	add_i s2, s0, -97
   13bd4:	42 68 00 18 	cmplt_u s2, s2, 26
   13bd8:	42 00 00 f4 	bnz s2, 8 <strncasecmp+0x78>
   13bdc:	02 00 00 f6 	b 8 <strncasecmp+0x7c>
   13be0:	00 80 ff 05 	add_i s0, s0, -32
   13be4:	21 00 00 a2 	load_s8 s1, (s1)
   13be8:	41 7c fe 05 	add_i s2, s1, -97
   13bec:	42 68 00 18 	cmplt_u s2, s2, 26
   13bf0:	42 00 00 f4 	bnz s2, 8 <strncasecmp+0x90>
   13bf4:	02 00 00 f6 	b 8 <strncasecmp+0x94>
   13bf8:	21 80 ff 05 	add_i s1, s1, -32
   13bfc:	00 80 60 c0 	sub_i s0, s0, s1
   13c00:	1f 00 00 f0 	ret
   13c04:	00 00 00 0f 	move s0, 0
   13c08:	1f 00 00 f0 	ret

0000000000013c0c strlen:
   13c0c:	20 00 f0 c0 	move s1, s0
   13c10:	01 00 00 a0 	load_u8 s0, (s1)
   13c14:	e0 00 00 f2 	bz s0, 28 <strlen+0x24>
   13c18:	00 00 00 0f 	move s0, 0
   13c1c:	41 04 00 a0 	load_u8 s2, 1(s1)
   13c20:	21 04 00 05 	add_i s1, s1, 1
   13c24:	00 04 00 05 	add_i s0, s0, 1
   13c28:	a2 ff ff f5 	bnz s2, -12 <strlen+0x10>
   13c2c:	1f 00 00 f0 	ret
   13c30:	00 00 00 0f 	move s0, 0
   13c34:	1f 00 00 f0 	ret

0000000000013c38 strcpy:
   13c38:	41 00 00 a0 	load_u8 s2, (s1)
   13c3c:	80 00 f0 c0 	move s4, s0
   13c40:	02 01 00 f2 	bz s2, 32 <strcpy+0x28>
   13c44:	60 00 f0 c0 	move s3, s0
   13c48:	83 04 00 05 	add_i s4, s3, 1
   13c4c:	43 00 00 82 	store_8 s2, (s3)
   13c50:	41 04 00 a0 	load_u8 s2, 1(s1)
   13c54:	21 04 00 05 	add_i s1, s1, 1
   13c58:	60 00 f2 c0 	move s3, s4
   13c5c:	62 ff ff f5 	bnz s2, -20 <strcpy+0x10>
   13c60:	20 00 00 0f 	move s1, 0
   13c64:	24 00 00 82 	store_8 s1, (s4)
   13c68:	1f 00 00 f0 	ret

0000000000013c6c strncpy:
   13c6c:	81 00 00 a0 	load_u8 s4, (s1)
   13c70:	a2 00 00 11 	cmpne_i s5, s2, 0
   13c74:	62 02 00 f2 	bz s2, 76 <strncpy+0x54>
   13c78:	c4 fc 03 01 	and s6, s4, 255
   13c7c:	60 00 f0 c0 	move s3, s0
   13c80:	66 01 00 f2 	bz s6, 44 <strncpy+0x40>
   13c84:	60 00 f0 c0 	move s3, s0
   13c88:	42 fc ff 05 	add_i s2, s2, -1
   13c8c:	83 00 00 82 	store_8 s4, (s3)
   13c90:	81 04 00 a0 	load_u8 s4, 1(s1)
   13c94:	63 04 00 05 	add_i s3, s3, 1
   13c98:	a2 00 00 11 	cmpne_i s5, s2, 0
   13c9c:	82 00 00 f2 	bz s2, 16 <strncpy+0x40>
   13ca0:	c4 fc 03 01 	and s6, s4, 255
   13ca4:	21 04 00 05 	add_i s1, s1, 1
   13ca8:	06 ff ff f5 	bnz s6, -32 <strncpy+0x1c>
   13cac:	25 04 00 01 	and s1, s5, 1
   13cb0:	61 00 00 f2 	bz s1, 12 <strncpy+0x50>
   13cb4:	20 00 00 0f 	move s1, 0
   13cb8:	23 00 00 82 	store_8 s1, (s3)
   13cbc:	1f 00 00 f0 	ret
   13cc0:	60 00 f0 c0 	move s3, s0
   13cc4:	25 04 00 01 	and s1, s5, 1
   13cc8:	a1 ff ff f3 	bz s1, -12 <strncpy+0x50>
   13ccc:	fa ff ff f7 	b -24 <strncpy+0x48>

0000000000013cd0 strchr:
   13cd0:	40 00 f0 c0 	move s2, s0
   13cd4:	00 00 00 0f 	move s0, 0
   13cd8:	62 00 00 a0 	load_u8 s3, (s2)
   13cdc:	e3 00 00 f2 	bz s3, 28 <strchr+0x28>
   13ce0:	60 80 d1 c1 	sext_8 s3, s3
   13ce4:	63 80 00 c1 	cmpeq_i s3, s3, s1
   13ce8:	a3 00 00 f4 	bnz s3, 20 <strchr+0x2c>
   13cec:	62 04 00 a0 	load_u8 s3, 1(s2)
   13cf0:	42 04 00 05 	add_i s2, s2, 1
   13cf4:	63 ff ff f5 	bnz s3, -20 <strchr+0x10>
   13cf8:	1f 00 00 f0 	ret
   13cfc:	00 00 f1 c0 	move s0, s2
   13d00:	1f 00 00 f0 	ret

0000000000013d04 memchr:
   13d04:	e2 01 00 f2 	bz s2, 60 <memchr+0x3c>
   13d08:	80 00 00 0f 	move s4, 0
   13d0c:	a0 00 f2 c0 	move s5, s4
   13d10:	60 80 52 c0 	add_i s3, s0, s5
   13d14:	c3 00 00 a2 	load_s8 s6, (s3)
   13d18:	c6 80 10 c1 	cmpne_i s6, s6, s1
   13d1c:	46 00 00 f4 	bnz s6, 8 <memchr+0x20>
   13d20:	0b 00 00 f6 	b 44 <memchr+0x48>
   13d24:	a5 04 00 05 	add_i s5, s5, 1
   13d28:	65 00 71 c1 	cmpge_u s3, s5, s2
   13d2c:	43 00 00 f4 	bnz s3, 8 <memchr+0x30>
   13d30:	f8 ff ff f7 	b -32 <memchr+0xc>
   13d34:	60 00 f2 c0 	move s3, s4
   13d38:	00 80 f1 c0 	move s0, s3
   13d3c:	1f 00 00 f0 	ret
   13d40:	60 00 00 0f 	move s3, 0
   13d44:	00 80 f1 c0 	move s0, s3
   13d48:	1f 00 00 f0 	ret
   13d4c:	00 80 f1 c0 	move s0, s3
   13d50:	1f 00 00 f0 	ret

0000000000013d54 strcat:
   13d54:	60 00 f0 c0 	move s3, s0
   13d58:	40 80 f1 c0 	move s2, s3
   13d5c:	82 00 00 a0 	load_u8 s4, (s2)
   13d60:	62 04 00 05 	add_i s3, s2, 1
   13d64:	a4 ff ff f5 	bnz s4, -12 <strcat+0x4>
   13d68:	61 00 00 a0 	load_u8 s3, (s1)
   13d6c:	43 01 00 f2 	bz s3, 40 <strcat+0x40>
   13d70:	82 04 00 05 	add_i s4, s2, 1
   13d74:	62 00 00 82 	store_8 s3, (s2)
   13d78:	61 04 00 a0 	load_u8 s3, 1(s1)
   13d7c:	21 04 00 05 	add_i s1, s1, 1
   13d80:	40 00 f2 c0 	move s2, s4
   13d84:	63 ff ff f5 	bnz s3, -20 <strcat+0x1c>
   13d88:	20 00 00 0f 	move s1, 0
   13d8c:	24 00 00 82 	store_8 s1, (s4)
   13d90:	1f 00 00 f0 	ret
   13d94:	80 00 f1 c0 	move s4, s2
   13d98:	20 00 00 0f 	move s1, 0
   13d9c:	24 00 00 82 	store_8 s1, (s4)
   13da0:	1f 00 00 f0 	ret

0000000000013da4 isdigit:
   13da4:	00 40 ff 05 	add_i s0, s0, -48
   13da8:	00 28 00 18 	cmplt_u s0, s0, 10
   13dac:	00 04 00 01 	and s0, s0, 1
   13db0:	1f 00 00 f0 	ret

0000000000013db4 _Znwj:
   13db4:	de 03 ff 05 	add_i sp, sp, -64
   13db8:	fe f3 00 88 	store_32 ra, 60(sp)
   13dbc:	a4 e5 ff f9 	call -26992 <malloc>
   13dc0:	fe f3 00 a8 	load_32 ra, 60(sp)
   13dc4:	de 03 01 05 	add_i sp, sp, 64
   13dc8:	1f 00 00 f0 	ret

0000000000013dcc _ZdlPv:
   13dcc:	de 03 ff 05 	add_i sp, sp, -64
   13dd0:	fe f3 00 88 	store_32 ra, 60(sp)
   13dd4:	28 ed ff f9 	call -19296 <free>
   13dd8:	fe f3 00 a8 	load_32 ra, 60(sp)
   13ddc:	de 03 01 05 	add_i sp, sp, 64
   13de0:	1f 00 00 f0 	ret

0000000000013de4 _Znaj:
   13de4:	de 03 ff 05 	add_i sp, sp, -64
   13de8:	fe f3 00 88 	store_32 ra, 60(sp)
   13dec:	98 e5 ff f9 	call -27040 <malloc>
   13df0:	fe f3 00 a8 	load_32 ra, 60(sp)
   13df4:	de 03 01 05 	add_i sp, sp, 64
   13df8:	1f 00 00 f0 	ret

0000000000013dfc _ZdaPv:
   13dfc:	de 03 ff 05 	add_i sp, sp, -64
   13e00:	fe f3 00 88 	store_32 ra, 60(sp)
   13e04:	1c ed ff f9 	call -19344 <free>
   13e08:	fe f3 00 a8 	load_32 ra, 60(sp)
   13e0c:	de 03 01 05 	add_i sp, sp, 64
   13e10:	1f 00 00 f0 	ret

0000000000013e14 __cxa_atexit:
   13e14:	de 03 ff 05 	add_i sp, sp, -64
   13e18:	1e f3 00 88 	store_32 s24, 60(sp)
   13e1c:	3e e3 00 88 	store_32 s25, 56(sp)
   13e20:	fe d3 00 88 	store_32 ra, 52(sp)
   13e24:	00 83 f0 c0 	move s24, s1
   13e28:	20 03 f0 c0 	move s25, s0
   13e2c:	00 30 00 0f 	move s0, 12
   13e30:	87 e5 ff f9 	call -27108 <malloc>
   13e34:	2c 00 00 4f 	movehi s1, 12
   13e38:	21 e0 0c 00 	or s1, s1, 824
   13e3c:	41 00 00 a8 	load_32 s2, (s1)
   13e40:	40 00 00 88 	store_32 s2, (s0)
   13e44:	01 00 00 88 	store_32 s0, (s1)
   13e48:	20 13 00 88 	store_32 s25, 4(s0)
   13e4c:	00 23 00 88 	store_32 s24, 8(s0)
   13e50:	fe d3 00 a8 	load_32 ra, 52(sp)
   13e54:	3e e3 00 a8 	load_32 s25, 56(sp)
   13e58:	1e f3 00 a8 	load_32 s24, 60(sp)
   13e5c:	de 03 01 05 	add_i sp, sp, 64
   13e60:	1f 00 00 f0 	ret

0000000000013e64 call_atexit_functions:
   13e64:	de 03 ff 05 	add_i sp, sp, -64
   13e68:	1e f3 00 88 	store_32 s24, 60(sp)
   13e6c:	fe e3 00 88 	store_32 ra, 56(sp)
   13e70:	0c 00 00 4f 	movehi s0, 12
   13e74:	00 e0 0c 00 	or s0, s0, 824
   13e78:	00 03 00 a8 	load_32 s24, (s0)
   13e7c:	f8 00 00 f2 	bz s24, 28 <call_atexit_functions+0x34>
   13e80:	38 10 00 a8 	load_32 s1, 4(s24)
   13e84:	18 20 00 a8 	load_32 s0, 8(s24)
   13e88:	21 00 00 fc 	call s1
   13e8c:	18 03 00 a8 	load_32 s24, (s24)
   13e90:	58 00 00 f2 	bz s24, 8 <call_atexit_functions+0x34>
   13e94:	fb ff ff f7 	b -20 <call_atexit_functions+0x1c>
   13e98:	fe e3 00 a8 	load_32 ra, 56(sp)
   13e9c:	1e f3 00 a8 	load_32 s24, 60(sp)
   13ea0:	de 03 01 05 	add_i sp, sp, 64
   13ea4:	1f 00 00 f0 	ret

0000000000013ea8 __cxa_pure_virtual:
   13ea8:	de 03 ff 05 	add_i sp, sp, -64
   13eac:	fe f3 00 88 	store_32 ra, 60(sp)
   13eb0:	02 00 00 4f 	movehi s0, 2
   13eb4:	00 38 0a 00 	or s0, s0, 654
   13eb8:	b3 fb ff f9 	call -4404 <puts>
   13ebc:	00 00 e0 c3 	break

0000000000013ec0 _GLOBAL__sub_I_cxx_runtime.cpp:
   13ec0:	de 03 ff 05 	add_i sp, sp, -64
   13ec4:	1e f3 00 88 	store_32 s24, 60(sp)
   13ec8:	3e e3 00 88 	store_32 s25, 56(sp)
   13ecc:	5e d3 00 88 	store_32 s26, 52(sp)
   13ed0:	7e c3 00 88 	store_32 s27, 48(sp)
   13ed4:	fe b3 00 88 	store_32 ra, 44(sp)
   13ed8:	02 00 00 4f 	movehi s0, 2
   13edc:	2c 00 00 4f 	movehi s1, 12
   13ee0:	00 33 00 0f 	move s24, 12
   13ee4:	00 80 20 00 	or s0, s0, 2080
   13ee8:	41 b3 0c 00 	or s26, s1, 812
   13eec:	00 20 00 05 	add_i s0, s0, 8
   13ef0:	1a 00 00 88 	store_32 s0, (s26)
   13ef4:	00 00 fc c0 	move s0, s24
   13ef8:	55 e5 ff f9 	call -27308 <malloc>
   13efc:	2c 00 00 4f 	movehi s1, 12
   13f00:	4c 00 00 4f 	movehi s2, 12
   13f04:	21 e0 0c 00 	or s1, s1, 824
   13f08:	3e a0 00 88 	store_32 s1, 40(sp)
   13f0c:	20 03 f0 c0 	move s25, s0
   13f10:	09 00 00 4f 	movehi s0, 9
   13f14:	21 00 00 a8 	load_32 s1, (s1)
   13f18:	62 c3 0c 00 	or s27, s2, 816
   13f1c:	39 00 00 88 	store_32 s1, (s25)
   13f20:	22 00 00 4f 	movehi s1, 2
   13f24:	00 f0 7d 00 	or s0, s0, 8060
   13f28:	19 10 00 88 	store_32 s0, 4(s25)
   13f2c:	59 23 00 88 	store_32 s26, 8(s25)
   13f30:	01 70 21 00 	or s0, s1, 2140
   13f34:	00 20 00 05 	add_i s0, s0, 8
   13f38:	1b 00 00 88 	store_32 s0, (s27)
   13f3c:	00 00 fc c0 	move s0, s24
   13f40:	43 e5 ff f9 	call -27380 <malloc>
   13f44:	20 03 00 88 	store_32 s25, (s0)
   13f48:	29 00 00 4f 	movehi s1, 9
   13f4c:	5e a0 00 a8 	load_32 s2, 40(sp)
   13f50:	21 00 7e 00 	or s1, s1, 8064
   13f54:	02 00 00 88 	store_32 s0, (s2)
   13f58:	20 10 00 88 	store_32 s1, 4(s0)
   13f5c:	60 23 00 88 	store_32 s27, 8(s0)
   13f60:	fe b3 00 a8 	load_32 ra, 44(sp)
   13f64:	7e c3 00 a8 	load_32 s27, 48(sp)
   13f68:	5e d3 00 a8 	load_32 s26, 52(sp)
   13f6c:	3e e3 00 a8 	load_32 s25, 56(sp)
   13f70:	1e f3 00 a8 	load_32 s24, 60(sp)
   13f74:	de 03 01 05 	add_i sp, sp, 64
   13f78:	1f 00 00 f0 	ret

0000000000013f7c _ZN10__cxxabiv117__class_type_infoD2Ev:
   13f7c:	1f 00 00 f0 	ret

0000000000013f80 _ZN10__cxxabiv120__si_class_type_infoD2Ev:
   13f80:	1f 00 00 f0 	ret

0000000000013f84 _ZN10__cxxabiv117__class_type_infoD0Ev:
   13f84:	de 03 ff 05 	add_i sp, sp, -64
   13f88:	fe f3 00 88 	store_32 ra, 60(sp)
   13f8c:	ba ec ff f9 	call -19736 <free>
   13f90:	fe f3 00 a8 	load_32 ra, 60(sp)
   13f94:	de 03 01 05 	add_i sp, sp, 64
   13f98:	1f 00 00 f0 	ret

0000000000013f9c _ZN10__cxxabiv120__si_class_type_infoD0Ev:
   13f9c:	de 03 ff 05 	add_i sp, sp, -64
   13fa0:	fe f3 00 88 	store_32 ra, 60(sp)
   13fa4:	b4 ec ff f9 	call -19760 <free>
   13fa8:	fe f3 00 a8 	load_32 ra, 60(sp)
   13fac:	de 03 01 05 	add_i sp, sp, 64
   13fb0:	1f 00 00 f0 	ret

0000000000013fb4 sbrk:
   13fb4:	de 03 ff 05 	add_i sp, sp, -64
   13fb8:	1e f3 00 88 	store_32 s24, 60(sp)
   13fbc:	fe e3 00 88 	store_32 ra, 56(sp)
   13fc0:	2c 00 00 4f 	movehi s1, 12
   13fc4:	40 00 f0 c0 	move s2, s0
   13fc8:	01 40 00 00 	or s0, s1, 16
   13fcc:	20 00 00 aa 	load_sync s1, (s0)
   13fd0:	61 00 51 c0 	add_i s3, s1, s2
   13fd4:	00 83 f0 c0 	move s24, s1
   13fd8:	60 00 00 8a 	store_sync s3, (s0)  
   13fdc:	83 ff ff f3 	bz s3, -16 <sbrk+0x18>
   13fe0:	02 04 00 14 	cmplt_i s0, s2, 1
   13fe4:	80 00 00 f4 	bnz s0, 16 <sbrk+0x40>
   13fe8:	20 00 00 0f 	move s1, 0
   13fec:	00 00 fc c0 	move s0, s24
   13ff0:	30 f7 ff f9 	call -9024 <memset>
   13ff4:	00 00 fc c0 	move s0, s24
   13ff8:	fe e3 00 a8 	load_32 ra, 56(sp)
   13ffc:	1e f3 00 a8 	load_32 s24, 60(sp)
   14000:	de 03 01 05 	add_i sp, sp, 64
   14004:	1f 00 00 f0 	ret

0000000000014008 parallel_execute:
   14008:	de 03 ff 05 	add_i sp, sp, -64
   1400c:	1e f3 00 88 	store_32 s24, 60(sp)
   14010:	3e e3 00 88 	store_32 s25, 56(sp)
   14014:	5e d3 00 88 	store_32 s26, 52(sp)
   14018:	7e c3 00 88 	store_32 s27, 48(sp)
   1401c:	fe b3 00 88 	store_32 ra, 44(sp)
   14020:	6c 00 00 4f 	movehi s3, 12
   14024:	03 f3 0c 00 	or s24, s3, 828
   14028:	6c 00 00 4f 	movehi s3, 12
   1402c:	18 00 00 88 	store_32 s0, (s24)
   14030:	0c 00 00 4f 	movehi s0, 12
   14034:	23 03 0d 00 	or s25, s3, 832
   14038:	6c 00 00 4f 	movehi s3, 12
   1403c:	40 13 0d 00 	or s26, s0, 836
   14040:	39 00 00 88 	store_32 s1, (s25)
   14044:	00 00 00 0f 	move s0, 0
   14048:	63 23 0d 00 	or s27, s3, 840
   1404c:	1a 00 00 88 	store_32 s0, (s26)
   14050:	5b 00 00 88 	store_32 s2, (s27)
   14054:	1a 00 00 a8 	load_32 s0, (s26)
   14058:	3b 00 00 a8 	load_32 s1, (s27)
   1405c:	00 80 00 c1 	cmpeq_i s0, s0, s1
   14060:	c0 02 00 f4 	bnz s0, 88 <parallel_execute+0xb0>
   14064:	3a 00 00 a8 	load_32 s1, (s26)
   14068:	1b 00 00 a8 	load_32 s0, (s27)
   1406c:	01 00 00 c1 	cmpeq_i s0, s1, s0
   14070:	c0 01 00 f4 	bnz s0, 56 <parallel_execute+0xa0>
   14074:	01 04 00 05 	add_i s0, s1, 1
   14078:	5a 00 00 aa 	load_sync s2, (s26)
   1407c:	62 80 10 c1 	cmpne_i s3, s2, s1
   14080:	83 00 00 f4 	bnz s3, 16 <parallel_execute+0x88>
   14084:	60 00 f0 c0 	move s3, s0
   14088:	7a 00 00 8a 	store_sync s3, (s26)  
   1408c:	63 ff ff f3 	bz s3, -20 <parallel_execute+0x70>
   14090:	02 80 00 c1 	cmpeq_i s0, s2, s1
   14094:	00 04 00 01 	and s0, s0, 1
   14098:	60 fe ff f3 	bz s0, -52 <parallel_execute+0x5c>
   1409c:	58 00 00 a8 	load_32 s2, (s24)
   140a0:	19 00 00 a8 	load_32 s0, (s25)
   140a4:	42 00 00 fc 	call s2
   140a8:	1a 00 00 a8 	load_32 s0, (s26)
   140ac:	3b 00 00 a8 	load_32 s1, (s27)
   140b0:	00 80 10 c1 	cmpne_i s0, s0, s1
   140b4:	80 fd ff f5 	bnz s0, -80 <parallel_execute+0x5c>
   140b8:	0c 00 00 4f 	movehi s0, 12
   140bc:	00 30 0d 00 	or s0, s0, 844
   140c0:	20 00 00 a8 	load_32 s1, (s0)
   140c4:	e1 ff ff f5 	bnz s1, -4 <parallel_execute+0xb8>
   140c8:	fe b3 00 a8 	load_32 ra, 44(sp)
   140cc:	7e c3 00 a8 	load_32 s27, 48(sp)
   140d0:	5e d3 00 a8 	load_32 s26, 52(sp)
   140d4:	3e e3 00 a8 	load_32 s25, 56(sp)
   140d8:	1e f3 00 a8 	load_32 s24, 60(sp)
   140dc:	de 03 01 05 	add_i sp, sp, 64
   140e0:	1f 00 00 f0 	ret

00000000000140e4 worker_thread:
   140e4:	de 03 ff 05 	add_i sp, sp, -64
   140e8:	1e f3 00 88 	store_32 s24, 60(sp)
   140ec:	3e e3 00 88 	store_32 s25, 56(sp)
   140f0:	5e d3 00 88 	store_32 s26, 52(sp)
   140f4:	7e c3 00 88 	store_32 s27, 48(sp)
   140f8:	fe b3 00 88 	store_32 ra, 44(sp)
   140fc:	0c 00 00 4f 	movehi s0, 12
   14100:	2c 00 00 4f 	movehi s1, 12
   14104:	4c 00 00 4f 	movehi s2, 12
   14108:	00 13 0d 00 	or s24, s0, 836
   1410c:	0c 00 00 4f 	movehi s0, 12
   14110:	21 23 0d 00 	or s25, s1, 840
   14114:	2c 00 00 4f 	movehi s1, 12
   14118:	40 33 0d 00 	or s26, s0, 844
   1411c:	62 03 0d 00 	or s27, s2, 832
   14120:	01 f0 0c 00 	or s0, s1, 828
   14124:	1e a0 00 88 	store_32 s0, 40(sp)
   14128:	18 00 00 a8 	load_32 s0, (s24)
   1412c:	39 00 00 a8 	load_32 s1, (s25)
   14130:	00 80 00 c1 	cmpeq_i s0, s0, s1
   14134:	a0 ff ff f5 	bnz s0, -12 <worker_thread+0x44>
   14138:	1a 00 00 aa 	load_sync s0, (s26)
   1413c:	20 04 00 05 	add_i s1, s0, 1
   14140:	00 00 f0 c0 	move s0, s0
   14144:	3a 00 00 8a 	store_sync s1, (s26)  
   14148:	81 ff ff f3 	bz s1, -16 <worker_thread+0x54>
   1414c:	38 00 00 a8 	load_32 s1, (s24)
   14150:	19 00 00 a8 	load_32 s0, (s25)
   14154:	01 00 00 c1 	cmpeq_i s0, s1, s0
   14158:	e0 01 00 f4 	bnz s0, 60 <worker_thread+0xb0>
   1415c:	01 04 00 05 	add_i s0, s1, 1
   14160:	58 00 00 aa 	load_sync s2, (s24)
   14164:	62 80 10 c1 	cmpne_i s3, s2, s1
   14168:	83 00 00 f4 	bnz s3, 16 <worker_thread+0x94>
   1416c:	60 00 f0 c0 	move s3, s0
   14170:	78 00 00 8a 	store_sync s3, (s24)  
   14174:	63 ff ff f3 	bz s3, -20 <worker_thread+0x7c>
   14178:	02 80 00 c1 	cmpeq_i s0, s2, s1
   1417c:	00 04 00 01 	and s0, s0, 1
   14180:	60 fe ff f3 	bz s0, -52 <worker_thread+0x68>
   14184:	1e a0 00 a8 	load_32 s0, 40(sp)
   14188:	40 00 00 a8 	load_32 s2, (s0)
   1418c:	1b 00 00 a8 	load_32 s0, (s27)
   14190:	42 00 00 fc 	call s2
   14194:	1a 00 00 aa 	load_sync s0, (s26)
   14198:	20 fc ff 05 	add_i s1, s0, -1
   1419c:	00 00 f0 c0 	move s0, s0
   141a0:	3a 00 00 8a 	store_sync s1, (s26)  
   141a4:	81 ff ff f3 	bz s1, -16 <worker_thread+0xb0>
   141a8:	e0 ff ff f7 	b -128 <worker_thread+0x44>

00000000000141ac start_all_threads:
   141ac:	00 fc ff 0f 	move s0, -1
   141b0:	15 00 00 8c 	setcr s0, 21
   141b4:	1f 00 00 f0 	ret

00000000000141b8 _write_uart:
   141b8:	38 fc ff 4f 	movehi s1, 524280
   141bc:	41 00 01 00 	or s2, s1, 64
   141c0:	62 00 00 a8 	load_32 s3, (s2)
   141c4:	63 04 00 01 	and s3, s3, 1
   141c8:	c3 ff ff f3 	bz s3, -8 <_write_uart+0x8>
   141cc:	21 20 01 00 	or s1, s1, 72
   141d0:	01 00 00 88 	store_32 s0, (s1)
   141d4:	1f 00 00 f0 	ret

00000000000141d8 write_console:
   141d8:	41 04 00 14 	cmplt_i s2, s1, 1
   141dc:	c2 01 00 f4 	bnz s2, 56 <write_console+0x3c>
   141e0:	98 fc ff 4f 	movehi s4, 524280
   141e4:	40 00 00 0f 	move s2, 0
   141e8:	64 00 01 00 	or s3, s4, 64
   141ec:	84 20 01 00 	or s4, s4, 72
   141f0:	a0 00 51 c0 	add_i s5, s0, s2
   141f4:	a5 00 00 a2 	load_s8 s5, (s5)
   141f8:	c3 00 00 a8 	load_32 s6, (s3)
   141fc:	c6 04 00 01 	and s6, s6, 1
   14200:	c6 ff ff f3 	bz s6, -8 <write_console+0x20>
   14204:	42 04 00 05 	add_i s2, s2, 1
   14208:	a4 00 00 88 	store_32 s5, (s4)
   1420c:	c2 80 40 c1 	cmplt_i s6, s2, s1
   14210:	06 ff ff f5 	bnz s6, -32 <write_console+0x18>
   14214:	00 00 00 0f 	move s0, 0
   14218:	1f 00 00 f0 	ret

000000000001421c read_block:
   1421c:	de 03 ff 05 	add_i sp, sp, -64
   14220:	1e f3 00 88 	store_32 s24, 60(sp)
   14224:	fe e3 00 88 	store_32 ra, 56(sp)
   14228:	4c 00 00 4f 	movehi s2, 12
   1422c:	42 40 0d 00 	or s2, s2, 848
   14230:	42 00 00 a0 	load_u8 s2, (s2)
   14234:	42 04 00 11 	cmpne_i s2, s2, 1
   14238:	42 01 00 f4 	bnz s2, 40 <read_block+0x44>
   1423c:	00 24 00 0b 	shl s0, s0, 9
   14240:	40 00 04 4f 	movehi s2, 8192
   14244:	00 03 08 0f 	move s24, 512
   14248:	40 00 51 c0 	add_i s2, s0, s2
   1424c:	00 80 f0 c0 	move s0, s1
   14250:	20 00 f1 c0 	move s1, s2
   14254:	40 00 fc c0 	move s2, s24
   14258:	b9 f9 ff f9 	call -6428 <memcpy>
   1425c:	03 00 00 f6 	b 12 <read_block+0x4c>
   14260:	a8 03 00 f8 	call 3744 <read_sdmmc_device>
   14264:	00 03 f0 c0 	move s24, s0
   14268:	00 00 fc c0 	move s0, s24
   1426c:	fe e3 00 a8 	load_32 ra, 56(sp)
   14270:	1e f3 00 a8 	load_32 s24, 60(sp)
   14274:	de 03 01 05 	add_i sp, sp, 64
   14278:	1f 00 00 f0 	ret

000000000001427c open:
   1427c:	de 03 f7 05 	add_i sp, sp, -576
   14280:	1e f3 08 88 	store_32 s24, 572(sp)
   14284:	3e e3 08 88 	store_32 s25, 568(sp)
   14288:	5e d3 08 88 	store_32 s26, 564(sp)
   1428c:	7e c3 08 88 	store_32 s27, 560(sp)
   14290:	fe b3 08 88 	store_32 ra, 556(sp)
   14294:	2c 00 00 4f 	movehi s1, 12
   14298:	41 50 0d 00 	or s2, s1, 852
   1429c:	22 00 00 a0 	load_u8 s1, (s2)
   142a0:	1e a0 00 88 	store_32 s0, 40(sp)
   142a4:	a1 0c 00 f4 	bnz s1, 404 <open+0x1bc>
   142a8:	5e 60 00 88 	store_32 s2, 24(sp)
   142ac:	73 02 00 f8 	call 2508 <init_sdmmc_device>
   142b0:	00 fc ff 12 	cmpgt_i s0, s0, -1
   142b4:	40 00 00 f4 	bnz s0, 8 <open+0x40>
   142b8:	0d 00 00 f6 	b 52 <open+0x70>
   142bc:	0c 00 00 4f 	movehi s0, 12
   142c0:	00 40 0d 00 	or s0, s0, 848
   142c4:	00 00 00 a0 	load_u8 s0, (s0)
   142c8:	00 04 00 11 	cmpne_i s0, s0, 1
   142cc:	40 00 00 f4 	bnz s0, 8 <open+0x58>
   142d0:	0e 00 00 f6 	b 56 <open+0x8c>
   142d4:	00 00 00 0f 	move s0, 0
   142d8:	3e b0 00 05 	add_i s1, sp, 44
   142dc:	89 03 00 f8 	call 3620 <read_sdmmc_device>
   142e0:	00 04 00 14 	cmplt_i s0, s0, 1
   142e4:	c0 03 00 f4 	bnz s0, 120 <open+0xe0>
   142e8:	0c 00 00 f6 	b 48 <open+0x9c>
   142ec:	02 00 00 4f 	movehi s0, 2
   142f0:	00 3c 04 00 	or s0, s0, 271
   142f4:	a4 fa ff f9 	call -5488 <puts>
   142f8:	0c 00 00 4f 	movehi s0, 12
   142fc:	20 04 00 0f 	move s1, 1
   14300:	00 40 0d 00 	or s0, s0, 848
   14304:	20 00 00 82 	store_8 s1, (s0)
   14308:	1e b0 00 05 	add_i s0, sp, 44
   1430c:	20 00 04 4f 	movehi s1, 8192
   14310:	40 00 08 0f 	move s2, 512
   14314:	8a f9 ff f9 	call -6616 <memcpy>
   14318:	1e b4 00 a0 	load_u8 s0, 45(sp)
   1431c:	3e b0 00 a0 	load_u8 s1, 44(sp)
   14320:	5e bc 00 a0 	load_u8 s2, 47(sp)
   14324:	7e b8 00 a0 	load_u8 s3, 46(sp)
   14328:	00 20 00 0b 	shl s0, s0, 8
   1432c:	42 20 00 0b 	shl s2, s2, 8
   14330:	00 80 00 c0 	or s0, s0, s1
   14334:	33 64 73 4f 	movehi s1, 236339
   14338:	42 80 01 c0 	or s2, s2, s3
   1433c:	21 cc 41 00 	or s1, s1, 4211
   14340:	42 40 00 0b 	shl s2, s2, 16
   14344:	02 00 00 c0 	or s0, s2, s0
   14348:	00 80 00 c1 	cmpeq_i s0, s0, s1
   1434c:	e0 00 00 f4 	bnz s0, 28 <open+0xec>
   14350:	02 00 00 4f 	movehi s0, 2
   14354:	00 ec 10 00 	or s0, s0, 1083
   14358:	8b fa ff f9 	call -5588 <puts>
   1435c:	2e 02 00 f8 	call 2232 <__errno_ptr>
   14360:	20 14 00 0f 	move s1, 5
   14364:	d9 00 00 f6 	b 868 <open+0x44c>
   14368:	1e c0 00 a8 	load_32 s0, 48(sp)
   1436c:	00 a0 00 07 	mull_i s0, s0, 40
   14370:	00 1f 08 05 	add_i s24, s0, 519
   14374:	18 00 f8 01 	and s0, s24, -512
   14378:	35 e4 ff f9 	call -28460 <malloc>
   1437c:	2c 00 00 4f 	movehi s1, 12
   14380:	60 03 f0 c0 	move s27, s0
   14384:	40 00 08 0f 	move s2, 512
   14388:	21 60 15 00 	or s1, s1, 1368
   1438c:	3e 90 00 88 	store_32 s1, 36(sp)
   14390:	61 03 00 88 	store_32 s27, (s1)
   14394:	3e b0 00 05 	add_i s1, sp, 44
   14398:	69 f9 ff f9 	call -6748 <memcpy>
   1439c:	18 00 10 18 	cmplt_u s0, s24, 1024
   143a0:	60 04 00 f4 	bnz s0, 140 <open+0x1b0>
   143a4:	0c 00 00 4f 	movehi s0, 12
   143a8:	18 27 00 0a 	shr s24, s24, 9
   143ac:	20 07 00 0f 	move s25, 1
   143b0:	40 43 0d 00 	or s26, s0, 848
   143b4:	00 00 04 4f 	movehi s0, 8192
   143b8:	1e 80 00 88 	store_32 s0, 32(sp)
   143bc:	00 00 08 0f 	move s0, 512
   143c0:	1e 70 00 88 	store_32 s0, 28(sp)
   143c4:	03 00 00 f6 	b 12 <open+0x154>
   143c8:	1e 90 00 a8 	load_32 s0, 36(sp)
   143cc:	60 03 00 a8 	load_32 s27, (s0)
   143d0:	3a 00 00 a0 	load_u8 s1, (s26)
   143d4:	19 24 00 0b 	shl s0, s25, 9
   143d8:	5b 00 50 c0 	add_i s2, s27, s0
   143dc:	21 04 00 11 	cmpne_i s1, s1, 1
   143e0:	41 01 00 f4 	bnz s1, 40 <open+0x18c>
   143e4:	3e 80 00 a8 	load_32 s1, 32(sp)
   143e8:	20 80 50 c0 	add_i s1, s0, s1
   143ec:	00 00 f1 c0 	move s0, s2
   143f0:	5e 70 00 a8 	load_32 s2, 28(sp)
   143f4:	52 f9 ff f9 	call -6840 <memcpy>
   143f8:	39 07 00 05 	add_i s25, s25, 1
   143fc:	19 00 7c c1 	cmpge_u s0, s25, s24
   14400:	60 01 00 f4 	bnz s0, 44 <open+0x1b0>
   14404:	f1 ff ff f7 	b -60 <open+0x14c>
   14408:	00 80 fc c0 	move s0, s25
   1440c:	20 00 f1 c0 	move s1, s2
   14410:	3c 03 00 f8 	call 3312 <read_sdmmc_device>
   14414:	00 04 00 14 	cmplt_i s0, s0, 1
   14418:	20 fa ff f5 	bnz s0, -188 <open+0xe0>
   1441c:	39 07 00 05 	add_i s25, s25, 1
   14420:	19 00 7c c1 	cmpge_u s0, s25, s24
   14424:	40 00 00 f4 	bnz s0, 8 <open+0x1b0>
   14428:	e8 ff ff f7 	b -96 <open+0x14c>
   1442c:	3e 60 00 a8 	load_32 s1, 24(sp)
   14430:	00 04 00 0f 	move s0, 1
   14434:	01 00 00 82 	store_8 s0, (s1)
   14438:	0c 00 00 4f 	movehi s0, 12
   1443c:	20 60 0d 00 	or s1, s0, 856
   14440:	01 00 00 a8 	load_32 s0, (s1)
   14444:	3e 90 00 88 	store_32 s1, 36(sp)
   14448:	a0 09 00 f2 	bz s0, 308 <open+0x300>
   1444c:	01 40 00 a8 	load_32 s0, 16(s1)
   14450:	a0 09 00 f2 	bz s0, 308 <open+0x308>
   14454:	01 80 00 a8 	load_32 s0, 32(s1)
   14458:	a0 09 00 f2 	bz s0, 308 <open+0x310>
   1445c:	01 c0 00 a8 	load_32 s0, 48(s1)
   14460:	a0 09 00 f2 	bz s0, 308 <open+0x318>
   14464:	01 00 01 a8 	load_32 s0, 64(s1)
   14468:	a0 09 00 f2 	bz s0, 308 <open+0x320>
   1446c:	01 40 01 a8 	load_32 s0, 80(s1)
   14470:	a0 09 00 f2 	bz s0, 308 <open+0x328>
   14474:	01 80 01 a8 	load_32 s0, 96(s1)
   14478:	a0 09 00 f2 	bz s0, 308 <open+0x330>
   1447c:	01 c0 01 a8 	load_32 s0, 112(s1)
   14480:	a0 09 00 f2 	bz s0, 308 <open+0x338>
   14484:	01 00 02 a8 	load_32 s0, 128(s1)
   14488:	a0 09 00 f2 	bz s0, 308 <open+0x340>
   1448c:	01 40 02 a8 	load_32 s0, 144(s1)
   14490:	a0 09 00 f2 	bz s0, 308 <open+0x348>
   14494:	01 80 02 a8 	load_32 s0, 160(s1)
   14498:	a0 09 00 f2 	bz s0, 308 <open+0x350>
   1449c:	01 c0 02 a8 	load_32 s0, 176(s1)
   144a0:	a0 09 00 f2 	bz s0, 308 <open+0x358>
   144a4:	01 00 03 a8 	load_32 s0, 192(s1)
   144a8:	a0 09 00 f2 	bz s0, 308 <open+0x360>
   144ac:	01 40 03 a8 	load_32 s0, 208(s1)
   144b0:	a0 09 00 f2 	bz s0, 308 <open+0x368>
   144b4:	01 80 03 a8 	load_32 s0, 224(s1)
   144b8:	a0 09 00 f2 	bz s0, 308 <open+0x370>
   144bc:	01 c0 03 a8 	load_32 s0, 240(s1)
   144c0:	a0 09 00 f2 	bz s0, 308 <open+0x378>
   144c4:	01 00 04 a8 	load_32 s0, 256(s1)
   144c8:	a0 09 00 f2 	bz s0, 308 <open+0x380>
   144cc:	01 40 04 a8 	load_32 s0, 272(s1)
   144d0:	a0 09 00 f2 	bz s0, 308 <open+0x388>
   144d4:	01 80 04 a8 	load_32 s0, 288(s1)
   144d8:	a0 09 00 f2 	bz s0, 308 <open+0x390>
   144dc:	01 c0 04 a8 	load_32 s0, 304(s1)
   144e0:	a0 09 00 f2 	bz s0, 308 <open+0x398>
   144e4:	01 00 05 a8 	load_32 s0, 320(s1)
   144e8:	a0 09 00 f2 	bz s0, 308 <open+0x3a0>
   144ec:	1e 90 00 a8 	load_32 s0, 36(sp)
   144f0:	00 40 05 a8 	load_32 s0, 336(s0)
   144f4:	80 09 00 f2 	bz s0, 304 <open+0x3a8>
   144f8:	1e 90 00 a8 	load_32 s0, 36(sp)
   144fc:	00 80 05 a8 	load_32 s0, 352(s0)
   14500:	60 09 00 f2 	bz s0, 300 <open+0x3b0>
   14504:	1e 90 00 a8 	load_32 s0, 36(sp)
   14508:	00 c0 05 a8 	load_32 s0, 368(s0)
   1450c:	40 09 00 f2 	bz s0, 296 <open+0x3b8>
   14510:	1e 90 00 a8 	load_32 s0, 36(sp)
   14514:	00 00 06 a8 	load_32 s0, 384(s0)
   14518:	20 09 00 f2 	bz s0, 292 <open+0x3c0>
   1451c:	1e 90 00 a8 	load_32 s0, 36(sp)
   14520:	00 40 06 a8 	load_32 s0, 400(s0)
   14524:	00 09 00 f2 	bz s0, 288 <open+0x3c8>
   14528:	1e 90 00 a8 	load_32 s0, 36(sp)
   1452c:	00 80 06 a8 	load_32 s0, 416(s0)
   14530:	e0 08 00 f2 	bz s0, 284 <open+0x3d0>
   14534:	1e 90 00 a8 	load_32 s0, 36(sp)
   14538:	00 c0 06 a8 	load_32 s0, 432(s0)
   1453c:	c0 08 00 f2 	bz s0, 280 <open+0x3d8>
   14540:	1e 90 00 a8 	load_32 s0, 36(sp)
   14544:	00 00 07 a8 	load_32 s0, 448(s0)
   14548:	a0 08 00 f2 	bz s0, 276 <open+0x3e0>
   1454c:	1e 90 00 a8 	load_32 s0, 36(sp)
   14550:	00 40 07 a8 	load_32 s0, 464(s0)
   14554:	80 08 00 f2 	bz s0, 272 <open+0x3e8>
   14558:	1e 90 00 a8 	load_32 s0, 36(sp)
   1455c:	00 80 07 a8 	load_32 s0, 480(s0)
   14560:	60 08 00 f2 	bz s0, 268 <open+0x3f0>
   14564:	1e 90 00 a8 	load_32 s0, 36(sp)
   14568:	00 c0 07 a8 	load_32 s0, 496(s0)
   1456c:	40 08 00 f2 	bz s0, 264 <open+0x3f8>
   14570:	a9 01 00 f8 	call 1700 <__errno_ptr>
   14574:	20 60 00 0f 	move s1, 24
   14578:	54 00 00 f6 	b 336 <open+0x44c>
   1457c:	00 00 00 0f 	move s0, 0
   14580:	3e 00 00 f6 	b 248 <open+0x3fc>
   14584:	00 04 00 0f 	move s0, 1
   14588:	3c 00 00 f6 	b 240 <open+0x3fc>
   1458c:	00 08 00 0f 	move s0, 2
   14590:	3a 00 00 f6 	b 232 <open+0x3fc>
   14594:	00 0c 00 0f 	move s0, 3
   14598:	38 00 00 f6 	b 224 <open+0x3fc>
   1459c:	00 10 00 0f 	move s0, 4
   145a0:	36 00 00 f6 	b 216 <open+0x3fc>
   145a4:	00 14 00 0f 	move s0, 5
   145a8:	34 00 00 f6 	b 208 <open+0x3fc>
   145ac:	00 18 00 0f 	move s0, 6
   145b0:	32 00 00 f6 	b 200 <open+0x3fc>
   145b4:	00 1c 00 0f 	move s0, 7
   145b8:	30 00 00 f6 	b 192 <open+0x3fc>
   145bc:	00 20 00 0f 	move s0, 8
   145c0:	2e 00 00 f6 	b 184 <open+0x3fc>
   145c4:	00 24 00 0f 	move s0, 9
   145c8:	2c 00 00 f6 	b 176 <open+0x3fc>
   145cc:	00 28 00 0f 	move s0, 10
   145d0:	2a 00 00 f6 	b 168 <open+0x3fc>
   145d4:	00 2c 00 0f 	move s0, 11
   145d8:	28 00 00 f6 	b 160 <open+0x3fc>
   145dc:	00 30 00 0f 	move s0, 12
   145e0:	26 00 00 f6 	b 152 <open+0x3fc>
   145e4:	00 34 00 0f 	move s0, 13
   145e8:	24 00 00 f6 	b 144 <open+0x3fc>
   145ec:	00 38 00 0f 	move s0, 14
   145f0:	22 00 00 f6 	b 136 <open+0x3fc>
   145f4:	00 3c 00 0f 	move s0, 15
   145f8:	20 00 00 f6 	b 128 <open+0x3fc>
   145fc:	00 40 00 0f 	move s0, 16
   14600:	1e 00 00 f6 	b 120 <open+0x3fc>
   14604:	00 44 00 0f 	move s0, 17
   14608:	1c 00 00 f6 	b 112 <open+0x3fc>
   1460c:	00 48 00 0f 	move s0, 18
   14610:	1a 00 00 f6 	b 104 <open+0x3fc>
   14614:	00 4c 00 0f 	move s0, 19
   14618:	18 00 00 f6 	b 96 <open+0x3fc>
   1461c:	00 50 00 0f 	move s0, 20
   14620:	16 00 00 f6 	b 88 <open+0x3fc>
   14624:	00 54 00 0f 	move s0, 21
   14628:	14 00 00 f6 	b 80 <open+0x3fc>
   1462c:	00 58 00 0f 	move s0, 22
   14630:	12 00 00 f6 	b 72 <open+0x3fc>
   14634:	00 5c 00 0f 	move s0, 23
   14638:	10 00 00 f6 	b 64 <open+0x3fc>
   1463c:	00 60 00 0f 	move s0, 24
   14640:	0e 00 00 f6 	b 56 <open+0x3fc>
   14644:	00 64 00 0f 	move s0, 25
   14648:	0c 00 00 f6 	b 48 <open+0x3fc>
   1464c:	00 68 00 0f 	move s0, 26
   14650:	0a 00 00 f6 	b 40 <open+0x3fc>
   14654:	00 6c 00 0f 	move s0, 27
   14658:	08 00 00 f6 	b 32 <open+0x3fc>
   1465c:	00 70 00 0f 	move s0, 28
   14660:	06 00 00 f6 	b 24 <open+0x3fc>
   14664:	00 74 00 0f 	move s0, 29
   14668:	04 00 00 f6 	b 16 <open+0x3fc>
   1466c:	00 78 00 0f 	move s0, 30
   14670:	02 00 00 f6 	b 8 <open+0x3fc>
   14674:	00 7c 00 0f 	move s0, 31
   14678:	1e 80 00 88 	store_32 s0, 32(sp)
   1467c:	0c 00 00 4f 	movehi s0, 12
   14680:	00 60 15 00 	or s0, s0, 1368
   14684:	00 03 00 a8 	load_32 s24, (s0)
   14688:	78 13 00 a8 	load_32 s27, 4(s24)
   1468c:	bb 01 00 f2 	bz s27, 52 <open+0x444>
   14690:	40 03 00 0f 	move s26, 0
   14694:	1a a0 00 07 	mull_i s0, s26, 40
   14698:	3e a0 00 a8 	load_32 s1, 40(sp)
   1469c:	38 03 50 c0 	add_i s25, s24, s0
   146a0:	19 40 00 05 	add_i s0, s25, 16
   146a4:	dd fc ff f9 	call -3212 <strcmp>
   146a8:	40 00 00 f4 	bnz s0, 8 <open+0x434>
   146ac:	0a 00 00 f6 	b 40 <open+0x458>
   146b0:	5a 07 00 05 	add_i s26, s26, 1
   146b4:	1a 80 7d c1 	cmpge_u s0, s26, s27
   146b8:	40 00 00 f4 	bnz s0, 8 <open+0x444>
   146bc:	f6 ff ff f7 	b -40 <open+0x418>
   146c0:	55 01 00 f8 	call 1364 <__errno_ptr>
   146c4:	20 08 00 0f 	move s1, 2
   146c8:	20 00 00 88 	store_32 s1, (s0)
   146cc:	00 fc ff 0f 	move s0, -1
   146d0:	0d 00 00 f6 	b 52 <open+0x488>
   146d4:	1e 80 00 a8 	load_32 s0, 32(sp)
   146d8:	3e 90 00 a8 	load_32 s1, 36(sp)
   146dc:	40 10 00 0b 	shl s2, s0, 4
   146e0:	41 00 51 c0 	add_i s2, s1, s2
   146e4:	20 04 00 0f 	move s1, 1
   146e8:	22 00 00 88 	store_32 s1, (s2)
   146ec:	39 30 00 a8 	load_32 s1, 12(s25)
   146f0:	22 10 00 88 	store_32 s1, 4(s2)
   146f4:	39 20 00 a8 	load_32 s1, 8(s25)
   146f8:	22 20 00 88 	store_32 s1, 8(s2)
   146fc:	20 00 00 0f 	move s1, 0
   14700:	22 30 00 88 	store_32 s1, 12(s2)
   14704:	fe b3 08 a8 	load_32 ra, 556(sp)
   14708:	7e c3 08 a8 	load_32 s27, 560(sp)
   1470c:	5e d3 08 a8 	load_32 s26, 564(sp)
   14710:	3e e3 08 a8 	load_32 s25, 568(sp)
   14714:	1e f3 08 a8 	load_32 s24, 572(sp)
   14718:	de 03 09 05 	add_i sp, sp, 576
   1471c:	1f 00 00 f0 	ret

0000000000014720 close:
   14720:	de 03 ff 05 	add_i sp, sp, -64
   14724:	fe f3 00 88 	store_32 ra, 60(sp)
   14728:	20 80 00 18 	cmplt_u s1, s0, 32
   1472c:	01 01 00 f4 	bnz s1, 32 <close+0x2c>
   14730:	39 01 00 f8 	call 1252 <__errno_ptr>
   14734:	20 24 00 0f 	move s1, 9
   14738:	20 00 00 88 	store_32 s1, (s0)
   1473c:	00 fc ff 0f 	move s0, -1
   14740:	fe f3 00 a8 	load_32 ra, 60(sp)
   14744:	de 03 01 05 	add_i sp, sp, 64
   14748:	1f 00 00 f0 	ret
   1474c:	2c 00 00 4f 	movehi s1, 12
   14750:	00 10 00 0b 	shl s0, s0, 4
   14754:	21 60 0d 00 	or s1, s1, 856
   14758:	21 00 50 c0 	add_i s1, s1, s0
   1475c:	00 00 00 0f 	move s0, 0
   14760:	01 00 00 88 	store_32 s0, (s1)
   14764:	fe f3 00 a8 	load_32 ra, 60(sp)
   14768:	de 03 01 05 	add_i sp, sp, 64
   1476c:	1f 00 00 f0 	ret

0000000000014770 read:
   14770:	de 03 f7 05 	add_i sp, sp, -576
   14774:	1e f3 08 88 	store_32 s24, 572(sp)
   14778:	3e e3 08 88 	store_32 s25, 568(sp)
   1477c:	5e d3 08 88 	store_32 s26, 564(sp)
   14780:	7e c3 08 88 	store_32 s27, 560(sp)
   14784:	fe b3 08 88 	store_32 ra, 556(sp)
   14788:	60 80 00 18 	cmplt_u s3, s0, 32
   1478c:	43 00 00 f4 	bnz s3, 8 <read+0x24>
   14790:	6a 00 00 f6 	b 424 <read+0x1c8>
   14794:	6c 00 00 4f 	movehi s3, 12
   14798:	00 10 00 0b 	shl s0, s0, 4
   1479c:	63 60 0d 00 	or s3, s3, 856
   147a0:	a3 00 50 c0 	add_i s5, s3, s0
   147a4:	05 00 00 a8 	load_32 s0, (s5)
   147a8:	40 00 00 f4 	bnz s0, 8 <read+0x40>
   147ac:	63 00 00 f6 	b 396 <read+0x1c8>
   147b0:	65 10 00 a8 	load_32 s3, 4(s5)
   147b4:	85 30 00 a8 	load_32 s4, 12(s5)
   147b8:	03 00 62 c0 	sub_i s0, s3, s4
   147bc:	60 04 00 14 	cmplt_i s3, s0, 1
   147c0:	23 0d 00 f4 	bnz s3, 420 <read+0x1f4>
   147c4:	60 00 81 c1 	cmplt_u s3, s0, s2
   147c8:	43 00 00 f4 	bnz s3, 8 <read+0x60>
   147cc:	00 00 f1 c0 	move s0, s2
   147d0:	45 30 00 05 	add_i s2, s5, 12
   147d4:	c0 0a 00 f2 	bz s0, 344 <read+0x1bc>
   147d8:	5e 30 00 88 	store_32 s2, 12(sp)
   147dc:	04 ff 07 01 	and s24, s4, 511
   147e0:	3e 80 00 88 	store_32 s1, 32(sp)
   147e4:	20 03 00 0f 	move s25, 0
   147e8:	25 20 00 a8 	load_32 s1, 8(s5)
   147ec:	21 00 52 c0 	add_i s1, s1, s4
   147f0:	41 7c 00 09 	ashr s2, s1, 31
   147f4:	42 5c 00 0a 	shr s2, s2, 23
   147f8:	21 00 51 c0 	add_i s1, s1, s2
   147fc:	40 00 08 0f 	move s2, 512
   14800:	41 27 00 09 	ashr s26, s1, 9
   14804:	2c 00 00 4f 	movehi s1, 12
   14808:	21 40 0d 00 	or s1, s1, 848
   1480c:	3e 90 00 88 	store_32 s1, 36(sp)
   14810:	20 00 04 4f 	movehi s1, 8192
   14814:	3e 40 00 88 	store_32 s1, 16(sp)
   14818:	3e b0 00 05 	add_i s1, sp, 44
   1481c:	3e 70 00 88 	store_32 s1, 28(sp)
   14820:	3e 53 00 88 	store_32 s25, 20(sp)
   14824:	1e 60 00 88 	store_32 s0, 24(sp)
   14828:	5e a0 00 88 	store_32 s2, 40(sp)
   1482c:	60 83 6c c0 	sub_i s27, s0, s25
   14830:	f8 01 00 f4 	bnz s24, 60 <read+0xfc>
   14834:	1b 00 08 18 	cmplt_u s0, s27, 512
   14838:	a0 01 00 f4 	bnz s0, 52 <read+0xfc>
   1483c:	1e 90 00 a8 	load_32 s0, 36(sp)
   14840:	00 00 00 a0 	load_u8 s0, (s0)
   14844:	3e 80 00 a8 	load_32 s1, 32(sp)
   14848:	00 04 00 11 	cmpne_i s0, s0, 1
   1484c:	61 80 5c c0 	add_i s3, s1, s25
   14850:	00 05 00 f4 	bnz s0, 160 <read+0x180>
   14854:	3e 40 00 a8 	load_32 s1, 16(sp)
   14858:	1a 24 00 0b 	shl s0, s26, 9
   1485c:	20 80 50 c0 	add_i s1, s0, s1
   14860:	00 80 f1 c0 	move s0, s3
   14864:	36 f8 ff f9 	call -7976 <memcpy>
   14868:	28 00 00 f6 	b 160 <read+0x198>
   1486c:	1e 90 00 a8 	load_32 s0, 36(sp)
   14870:	00 00 00 a0 	load_u8 s0, (s0)
   14874:	00 04 00 11 	cmpne_i s0, s0, 1
   14878:	60 01 00 f4 	bnz s0, 44 <read+0x134>
   1487c:	3e 40 00 a8 	load_32 s1, 16(sp)
   14880:	1a 24 00 0b 	shl s0, s26, 9
   14884:	20 80 50 c0 	add_i s1, s0, s1
   14888:	1e 70 00 a8 	load_32 s0, 28(sp)
   1488c:	2c f8 ff f9 	call -8016 <memcpy>
   14890:	1e a0 00 a8 	load_32 s0, 40(sp)
   14894:	00 00 6c c0 	sub_i s0, s0, s24
   14898:	20 80 6d c1 	cmpgt_u s1, s0, s27
   1489c:	a1 01 00 f4 	bnz s1, 52 <read+0x160>
   148a0:	0b 00 00 f6 	b 44 <read+0x15c>
   148a4:	00 00 fd c0 	move s0, s26
   148a8:	3e 70 00 a8 	load_32 s1, 28(sp)
   148ac:	15 02 00 f8 	call 2132 <read_sdmmc_device>
   148b0:	00 00 00 12 	cmpgt_i s0, s0, 0
   148b4:	40 00 00 f4 	bnz s0, 8 <read+0x14c>
   148b8:	2d 00 00 f6 	b 180 <read+0x1fc>
   148bc:	1e a0 00 a8 	load_32 s0, 40(sp)
   148c0:	00 00 6c c0 	sub_i s0, s0, s24
   148c4:	20 80 6d c1 	cmpgt_u s1, s0, s27
   148c8:	41 00 00 f4 	bnz s1, 8 <read+0x160>
   148cc:	60 03 f0 c0 	move s27, s0
   148d0:	1e 80 00 a8 	load_32 s0, 32(sp)
   148d4:	3e 70 00 a8 	load_32 s1, 28(sp)
   148d8:	40 80 fd c0 	move s2, s27
   148dc:	00 80 5c c0 	add_i s0, s0, s25
   148e0:	21 00 5c c0 	add_i s1, s1, s24
   148e4:	16 f8 ff f9 	call -8104 <memcpy>
   148e8:	3b 83 5c c0 	add_i s25, s27, s25
   148ec:	08 00 00 f6 	b 32 <read+0x19c>
   148f0:	00 00 fd c0 	move s0, s26
   148f4:	20 80 f1 c0 	move s1, s3
   148f8:	02 02 00 f8 	call 2056 <read_sdmmc_device>
   148fc:	00 00 00 12 	cmpgt_i s0, s0, 0
   14900:	40 00 00 f4 	bnz s0, 8 <read+0x198>
   14904:	1a 00 00 f6 	b 104 <read+0x1fc>
   14908:	39 03 08 05 	add_i s25, s25, 512
   1490c:	1e 60 00 a8 	load_32 s0, 24(sp)
   14910:	5a 07 00 05 	add_i s26, s26, 1
   14914:	1e 53 00 a8 	load_32 s24, 20(sp)
   14918:	5e a0 00 a8 	load_32 s2, 40(sp)
   1491c:	20 80 6c c1 	cmpgt_u s1, s0, s25
   14920:	61 f8 ff f5 	bnz s1, -244 <read+0xbc>
   14924:	5e 30 00 a8 	load_32 s2, 12(sp)
   14928:	82 00 00 a8 	load_32 s4, (s2)
   1492c:	24 00 50 c0 	add_i s1, s4, s0
   14930:	22 00 00 88 	store_32 s1, (s2)
   14934:	05 00 00 f6 	b 20 <read+0x1d8>
   14938:	b7 00 00 f8 	call 732 <__errno_ptr>
   1493c:	20 24 00 0f 	move s1, 9
   14940:	20 00 00 88 	store_32 s1, (s0)
   14944:	00 fc ff 0f 	move s0, -1
   14948:	fe b3 08 a8 	load_32 ra, 556(sp)
   1494c:	7e c3 08 a8 	load_32 s27, 560(sp)
   14950:	5e d3 08 a8 	load_32 s26, 564(sp)
   14954:	3e e3 08 a8 	load_32 s25, 568(sp)
   14958:	1e f3 08 a8 	load_32 s24, 572(sp)
   1495c:	de 03 09 05 	add_i sp, sp, 576
   14960:	1f 00 00 f0 	ret
   14964:	00 00 00 0f 	move s0, 0
   14968:	f8 ff ff f7 	b -32 <read+0x1d8>
   1496c:	aa 00 00 f8 	call 680 <__errno_ptr>
   14970:	20 14 00 0f 	move s1, 5
   14974:	f3 ff ff f7 	b -52 <read+0x1d0>

0000000000014978 write:
   14978:	de 03 ff 05 	add_i sp, sp, -64
   1497c:	fe f3 00 88 	store_32 ra, 60(sp)
   14980:	a5 00 00 f8 	call 660 <__errno_ptr>
   14984:	20 fc ff 0f 	move s1, -1
   14988:	40 04 00 0f 	move s2, 1
   1498c:	40 00 00 88 	store_32 s2, (s0)
   14990:	00 80 f0 c0 	move s0, s1
   14994:	fe f3 00 a8 	load_32 ra, 60(sp)
   14998:	de 03 01 05 	add_i sp, sp, 64
   1499c:	1f 00 00 f0 	ret

00000000000149a0 lseek:
   149a0:	de 03 ff 05 	add_i sp, sp, -64
   149a4:	fe f3 00 88 	store_32 ra, 60(sp)
   149a8:	60 00 f0 c0 	move s3, s0
   149ac:	00 80 f0 c0 	move s0, s1
   149b0:	83 80 00 18 	cmplt_u s4, s3, 32
   149b4:	44 00 00 f4 	bnz s4, 8 <lseek+0x1c>
   149b8:	11 00 00 f6 	b 68 <lseek+0x5c>
   149bc:	2c 00 00 4f 	movehi s1, 12
   149c0:	63 10 00 0b 	shl s3, s3, 4
   149c4:	21 60 0d 00 	or s1, s1, 856
   149c8:	21 80 51 c0 	add_i s1, s1, s3
   149cc:	61 00 00 a8 	load_32 s3, (s1)
   149d0:	43 00 00 f4 	bnz s3, 8 <lseek+0x38>
   149d4:	0a 00 00 f6 	b 40 <lseek+0x5c>
   149d8:	62 08 00 10 	cmpeq_i s3, s2, 2
   149dc:	e3 01 00 f4 	bnz s3, 60 <lseek+0x78>
   149e0:	62 04 00 10 	cmpeq_i s3, s2, 1
   149e4:	63 02 00 f4 	bnz s3, 76 <lseek+0x90>
   149e8:	42 00 00 f4 	bnz s2, 8 <lseek+0x50>
   149ec:	0d 00 00 f6 	b 52 <lseek+0x80>
   149f0:	89 00 00 f8 	call 548 <__errno_ptr>
   149f4:	20 58 00 0f 	move s1, 22
   149f8:	03 00 00 f6 	b 12 <lseek+0x64>
   149fc:	86 00 00 f8 	call 536 <__errno_ptr>
   14a00:	20 24 00 0f 	move s1, 9
   14a04:	20 00 00 88 	store_32 s1, (s0)
   14a08:	00 fc ff 0f 	move s0, -1
   14a0c:	fe f3 00 a8 	load_32 ra, 60(sp)
   14a10:	de 03 01 05 	add_i sp, sp, 64
   14a14:	1f 00 00 f0 	ret
   14a18:	41 10 00 a8 	load_32 s2, 4(s1)
   14a1c:	02 00 60 c0 	sub_i s0, s2, s0
   14a20:	40 fc ff 12 	cmpgt_i s2, s0, -1
   14a24:	01 30 00 88 	store_32 s0, 12(s1)
   14a28:	22 ff ff f5 	bnz s2, -28 <lseek+0x6c>
   14a2c:	06 00 00 f6 	b 24 <lseek+0xa4>
   14a30:	41 30 00 a8 	load_32 s2, 12(s1)
   14a34:	02 00 50 c0 	add_i s0, s2, s0
   14a38:	40 fc ff 12 	cmpgt_i s2, s0, -1
   14a3c:	01 30 00 88 	store_32 s0, 12(s1)
   14a40:	62 fe ff f5 	bnz s2, -52 <lseek+0x6c>
   14a44:	00 00 00 0f 	move s0, 0
   14a48:	01 30 00 88 	store_32 s0, 12(s1)
   14a4c:	fe f3 00 a8 	load_32 ra, 60(sp)
   14a50:	de 03 01 05 	add_i sp, sp, 64
   14a54:	1f 00 00 f0 	ret

0000000000014a58 stat:
   14a58:	de 03 ff 05 	add_i sp, sp, -64
   14a5c:	1e f3 00 88 	store_32 s24, 60(sp)
   14a60:	3e e3 00 88 	store_32 s25, 56(sp)
   14a64:	5e d3 00 88 	store_32 s26, 52(sp)
   14a68:	7e c3 00 88 	store_32 s27, 48(sp)
   14a6c:	fe b3 00 88 	store_32 ra, 44(sp)
   14a70:	4c 00 00 4f 	movehi s2, 12
   14a74:	42 60 15 00 	or s2, s2, 1368
   14a78:	42 03 00 a8 	load_32 s26, (s2)
   14a7c:	7a 13 00 a8 	load_32 s27, 4(s26)
   14a80:	3e 90 00 88 	store_32 s1, 36(sp)
   14a84:	1e a0 00 88 	store_32 s0, 40(sp)
   14a88:	9b 01 00 f2 	bz s27, 48 <stat+0x60>
   14a8c:	00 03 00 0f 	move s24, 0
   14a90:	18 a0 00 07 	mull_i s0, s24, 40
   14a94:	3e a0 00 a8 	load_32 s1, 40(sp)
   14a98:	3a 03 50 c0 	add_i s25, s26, s0
   14a9c:	19 40 00 05 	add_i s0, s25, 16
   14aa0:	de fb ff f9 	call -4232 <strcmp>
   14aa4:	40 01 00 f2 	bz s0, 40 <stat+0x74>
   14aa8:	18 07 00 05 	add_i s24, s24, 1
   14aac:	18 80 7d c1 	cmpge_u s0, s24, s27
   14ab0:	40 00 00 f4 	bnz s0, 8 <stat+0x60>
   14ab4:	f7 ff ff f7 	b -36 <stat+0x38>
   14ab8:	57 00 00 f8 	call 348 <__errno_ptr>
   14abc:	20 08 00 0f 	move s1, 2
   14ac0:	20 00 00 88 	store_32 s1, (s0)
   14ac4:	00 fc ff 0f 	move s0, -1
   14ac8:	05 00 00 f6 	b 20 <stat+0x84>
   14acc:	19 30 00 a8 	load_32 s0, 12(s25)
   14ad0:	3e 90 00 a8 	load_32 s1, 36(sp)
   14ad4:	01 00 00 88 	store_32 s0, (s1)
   14ad8:	00 00 00 0f 	move s0, 0
   14adc:	fe b3 00 a8 	load_32 ra, 44(sp)
   14ae0:	7e c3 00 a8 	load_32 s27, 48(sp)
   14ae4:	5e d3 00 a8 	load_32 s26, 52(sp)
   14ae8:	3e e3 00 a8 	load_32 s25, 56(sp)
   14aec:	1e f3 00 a8 	load_32 s24, 60(sp)
   14af0:	de 03 01 05 	add_i sp, sp, 64
   14af4:	1f 00 00 f0 	ret

0000000000014af8 fstat:
   14af8:	de 03 ff 05 	add_i sp, sp, -64
   14afc:	fe f3 00 88 	store_32 ra, 60(sp)
   14b00:	40 80 00 18 	cmplt_u s2, s0, 32
   14b04:	42 00 00 f4 	bnz s2, 8 <fstat+0x14>
   14b08:	0e 00 00 f6 	b 56 <fstat+0x48>
   14b0c:	4c 00 00 4f 	movehi s2, 12
   14b10:	00 10 00 0b 	shl s0, s0, 4
   14b14:	42 60 0d 00 	or s2, s2, 856
   14b18:	02 00 50 c0 	add_i s0, s2, s0
   14b1c:	40 00 00 a8 	load_32 s2, (s0)
   14b20:	42 00 00 f4 	bnz s2, 8 <fstat+0x30>
   14b24:	07 00 00 f6 	b 28 <fstat+0x48>
   14b28:	00 10 00 a8 	load_32 s0, 4(s0)
   14b2c:	01 00 00 88 	store_32 s0, (s1)
   14b30:	00 00 00 0f 	move s0, 0
   14b34:	fe f3 00 a8 	load_32 ra, 60(sp)
   14b38:	de 03 01 05 	add_i sp, sp, 64
   14b3c:	1f 00 00 f0 	ret
   14b40:	35 00 00 f8 	call 212 <__errno_ptr>
   14b44:	20 24 00 0f 	move s1, 9
   14b48:	20 00 00 88 	store_32 s1, (s0)
   14b4c:	00 fc ff 0f 	move s0, -1
   14b50:	fe f3 00 a8 	load_32 ra, 60(sp)
   14b54:	de 03 01 05 	add_i sp, sp, 64
   14b58:	1f 00 00 f0 	ret

0000000000014b5c access:
   14b5c:	de 03 ff 05 	add_i sp, sp, -64
   14b60:	1e f3 00 88 	store_32 s24, 60(sp)
   14b64:	3e e3 00 88 	store_32 s25, 56(sp)
   14b68:	5e d3 00 88 	store_32 s26, 52(sp)
   14b6c:	7e c3 00 88 	store_32 s27, 48(sp)
   14b70:	fe b3 00 88 	store_32 ra, 44(sp)
   14b74:	4c 00 00 4f 	movehi s2, 12
   14b78:	40 0b 00 0f 	move s26, 2
   14b7c:	42 60 15 00 	or s2, s2, 1368
   14b80:	62 03 00 a8 	load_32 s27, (s2)
   14b84:	1b 13 00 a8 	load_32 s24, 4(s27)
   14b88:	20 03 f0 c0 	move s25, s0
   14b8c:	18 03 00 f2 	bz s24, 96 <access+0x90>
   14b90:	3e 90 00 88 	store_32 s1, 36(sp)
   14b94:	5e a3 00 88 	store_32 s26, 40(sp)
   14b98:	40 03 00 0f 	move s26, 0
   14b9c:	1a a0 00 07 	mull_i s0, s26, 40
   14ba0:	1b 00 50 c0 	add_i s0, s27, s0
   14ba4:	20 80 fc c0 	move s1, s25
   14ba8:	00 40 00 05 	add_i s0, s0, 16
   14bac:	9b fb ff f9 	call -4500 <strcmp>
   14bb0:	40 00 00 f4 	bnz s0, 8 <access+0x5c>
   14bb4:	07 00 00 f6 	b 28 <access+0x74>
   14bb8:	5a 07 00 05 	add_i s26, s26, 1
   14bbc:	1a 00 7c c1 	cmpge_u s0, s26, s24
   14bc0:	40 00 00 f4 	bnz s0, 8 <access+0x6c>
   14bc4:	f6 ff ff f7 	b -40 <access+0x40>
   14bc8:	5e a3 00 a8 	load_32 s26, 40(sp)
   14bcc:	08 00 00 f6 	b 32 <access+0x90>
   14bd0:	1e 90 00 a8 	load_32 s0, 36(sp)
   14bd4:	00 08 00 01 	and s0, s0, 2
   14bd8:	40 00 00 f2 	bz s0, 8 <access+0x84>
   14bdc:	03 00 00 f6 	b 12 <access+0x8c>
   14be0:	00 00 00 0f 	move s0, 0
   14be4:	05 00 00 f6 	b 20 <access+0x9c>
   14be8:	40 07 00 0f 	move s26, 1
   14bec:	0a 00 00 f8 	call 40 <__errno_ptr>
   14bf0:	40 03 00 88 	store_32 s26, (s0)
   14bf4:	00 fc ff 0f 	move s0, -1
   14bf8:	fe b3 00 a8 	load_32 ra, 44(sp)
   14bfc:	7e c3 00 a8 	load_32 s27, 48(sp)
   14c00:	5e d3 00 a8 	load_32 s26, 52(sp)
   14c04:	3e e3 00 a8 	load_32 s25, 56(sp)
   14c08:	1e f3 00 a8 	load_32 s24, 60(sp)
   14c0c:	de 03 01 05 	add_i sp, sp, 64
   14c10:	1f 00 00 f0 	ret

0000000000014c14 __errno_ptr:
   14c14:	de 03 ff 05 	add_i sp, sp, -64
   14c18:	fe f3 00 88 	store_32 ra, 60(sp)
   14c1c:	13 00 00 f8 	call 76 <get_current_thread_id>
   14c20:	2c 00 00 4f 	movehi s1, 12
   14c24:	fe f3 00 a8 	load_32 ra, 60(sp)
   14c28:	00 08 00 0b 	shl s0, s0, 2
   14c2c:	21 50 00 00 	or s1, s1, 20
   14c30:	01 00 50 c0 	add_i s0, s1, s0
   14c34:	de 03 01 05 	add_i sp, sp, 64
   14c38:	1f 00 00 f0 	ret

0000000000014c3c usleep:
   14c3c:	26 00 00 ac 	getcr s1, 6
   14c40:	00 c8 00 07 	mull_i s0, s0, 50
   14c44:	01 00 50 c0 	add_i s0, s1, s0
   14c48:	26 00 00 ac 	getcr s1, 6
   14c4c:	21 00 40 c1 	cmplt_i s1, s1, s0
   14c50:	c1 ff ff f5 	bnz s1, -8 <usleep+0xc>
   14c54:	00 00 00 0f 	move s0, 0
   14c58:	1f 00 00 f0 	ret

0000000000014c5c exit:
   14c5c:	00 fc ff 0f 	move s0, -1
   14c60:	14 00 00 8c 	setcr s0, 20
   14c64:	00 00 00 f6 	b 0 <exit+0x8>

0000000000014c68 get_current_thread_id:
   14c68:	00 00 00 ac 	getcr s0, 0
   14c6c:	1f 00 00 f0 	ret

0000000000014c70 get_cycle_count:
   14c70:	06 00 00 ac 	getcr s0, 6
   14c74:	1f 00 00 f0 	ret

0000000000014c78 init_sdmmc_device:
   14c78:	de 03 fe 05 	add_i sp, sp, -128
   14c7c:	1e f3 01 88 	store_32 s24, 124(sp)
   14c80:	3e e3 01 88 	store_32 s25, 120(sp)
   14c84:	5e d3 01 88 	store_32 s26, 116(sp)
   14c88:	7e c3 01 88 	store_32 s27, 112(sp)
   14c8c:	fe b3 01 88 	store_32 ra, 108(sp)
   14c90:	18 fc ff 4f 	movehi s0, 524280
   14c94:	20 f0 01 0f 	move s1, 124
   14c98:	40 ff 03 0f 	move s26, 255
   14c9c:	40 40 03 00 	or s2, s0, 208
   14ca0:	5e a0 01 88 	store_32 s2, 104(sp)
   14ca4:	20 03 03 00 	or s25, s0, 192
   14ca8:	00 23 03 00 	or s24, s0, 200
   14cac:	22 00 00 88 	store_32 s1, (s2)
   14cb0:	20 30 03 00 	or s1, s0, 204
   14cb4:	40 04 00 0f 	move s2, 1
   14cb8:	41 00 00 88 	store_32 s2, (s1)
   14cbc:	59 03 00 88 	store_32 s26, (s25)
   14cc0:	58 00 00 a8 	load_32 s2, (s24)
   14cc4:	42 04 00 01 	and s2, s2, 1
   14cc8:	c2 ff ff f3 	bz s2, -8 <init_sdmmc_device+0x48>
   14ccc:	60 13 03 00 	or s27, s0, 196
   14cd0:	1b 00 00 a8 	load_32 s0, (s27)
   14cd4:	59 03 00 88 	store_32 s26, (s25)
   14cd8:	18 00 00 a8 	load_32 s0, (s24)
   14cdc:	00 04 00 01 	and s0, s0, 1
   14ce0:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x60>
   14ce4:	1b 00 00 a8 	load_32 s0, (s27)
   14ce8:	59 03 00 88 	store_32 s26, (s25)
   14cec:	18 00 00 a8 	load_32 s0, (s24)
   14cf0:	00 04 00 01 	and s0, s0, 1
   14cf4:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x74>
   14cf8:	1b 00 00 a8 	load_32 s0, (s27)
   14cfc:	59 03 00 88 	store_32 s26, (s25)
   14d00:	18 00 00 a8 	load_32 s0, (s24)
   14d04:	00 04 00 01 	and s0, s0, 1
   14d08:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x88>
   14d0c:	1b 00 00 a8 	load_32 s0, (s27)
   14d10:	59 03 00 88 	store_32 s26, (s25)
   14d14:	18 00 00 a8 	load_32 s0, (s24)
   14d18:	00 04 00 01 	and s0, s0, 1
   14d1c:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x9c>
   14d20:	1b 00 00 a8 	load_32 s0, (s27)
   14d24:	59 03 00 88 	store_32 s26, (s25)
   14d28:	18 00 00 a8 	load_32 s0, (s24)
   14d2c:	00 04 00 01 	and s0, s0, 1
   14d30:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xb0>
   14d34:	1b 00 00 a8 	load_32 s0, (s27)
   14d38:	59 03 00 88 	store_32 s26, (s25)
   14d3c:	18 00 00 a8 	load_32 s0, (s24)
   14d40:	00 04 00 01 	and s0, s0, 1
   14d44:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xc4>
   14d48:	1b 00 00 a8 	load_32 s0, (s27)
   14d4c:	59 03 00 88 	store_32 s26, (s25)
   14d50:	18 00 00 a8 	load_32 s0, (s24)
   14d54:	00 04 00 01 	and s0, s0, 1
   14d58:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xd8>
   14d5c:	1b 00 00 a8 	load_32 s0, (s27)
   14d60:	59 03 00 88 	store_32 s26, (s25)
   14d64:	18 00 00 a8 	load_32 s0, (s24)
   14d68:	00 04 00 01 	and s0, s0, 1
   14d6c:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xec>
   14d70:	1b 00 00 a8 	load_32 s0, (s27)
   14d74:	59 03 00 88 	store_32 s26, (s25)
   14d78:	18 00 00 a8 	load_32 s0, (s24)
   14d7c:	00 04 00 01 	and s0, s0, 1
   14d80:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x100>
   14d84:	1b 00 00 a8 	load_32 s0, (s27)
   14d88:	00 00 00 0f 	move s0, 0
   14d8c:	01 00 00 88 	store_32 s0, (s1)
   14d90:	20 00 f0 c0 	move s1, s0
   14d94:	8d 00 00 f8 	call 564 <send_sd_command>
   14d98:	20 04 00 10 	cmpeq_i s1, s0, 1
   14d9c:	01 01 00 f4 	bnz s1, 32 <init_sdmmc_device+0x144>
   14da0:	20 fc 03 10 	cmpeq_i s1, s0, 255
   14da4:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x134>
   14da8:	62 00 00 f6 	b 392 <init_sdmmc_device+0x2b8>
   14dac:	02 00 00 4f 	movehi s0, 2
   14db0:	00 44 10 00 	or s0, s0, 1041
   14db4:	f4 f7 ff f9 	call -8240 <puts>
   14db8:	6b 00 00 f6 	b 428 <init_sdmmc_device+0x2ec>
   14dbc:	00 20 00 0f 	move s0, 8
   14dc0:	20 68 05 0f 	move s1, 346
   14dc4:	81 00 00 f8 	call 516 <send_sd_command>
   14dc8:	20 04 00 10 	cmpeq_i s1, s0, 1
   14dcc:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x15c>
   14dd0:	5c 00 00 f6 	b 368 <init_sdmmc_device+0x2c8>
   14dd4:	59 03 00 88 	store_32 s26, (s25)
   14dd8:	18 00 00 a8 	load_32 s0, (s24)
   14ddc:	00 04 00 01 	and s0, s0, 1
   14de0:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x160>
   14de4:	1b 00 00 a8 	load_32 s0, (s27)
   14de8:	59 03 00 88 	store_32 s26, (s25)
   14dec:	18 00 00 a8 	load_32 s0, (s24)
   14df0:	00 04 00 01 	and s0, s0, 1
   14df4:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x174>
   14df8:	1b 00 00 a8 	load_32 s0, (s27)
   14dfc:	59 03 00 88 	store_32 s26, (s25)
   14e00:	18 00 00 a8 	load_32 s0, (s24)
   14e04:	00 04 00 01 	and s0, s0, 1
   14e08:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x188>
   14e0c:	1b 00 00 a8 	load_32 s0, (s27)
   14e10:	20 3c 00 01 	and s1, s0, 15
   14e14:	21 04 00 10 	cmpeq_i s1, s1, 1
   14e18:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x1a8>
   14e1c:	4d 00 00 f6 	b 308 <init_sdmmc_device+0x2d8>
   14e20:	59 03 00 88 	store_32 s26, (s25)
   14e24:	18 00 00 a8 	load_32 s0, (s24)
   14e28:	00 04 00 01 	and s0, s0, 1
   14e2c:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x1ac>
   14e30:	1b 00 00 a8 	load_32 s0, (s27)
   14e34:	00 68 01 11 	cmpne_i s0, s0, 90
   14e38:	60 0a 00 f4 	bnz s0, 332 <init_sdmmc_device+0x30c>
   14e3c:	20 00 00 0f 	move s1, 0
   14e40:	3e 80 01 88 	store_32 s1, 96(sp)
   14e44:	00 dc 00 0f 	move s0, 55
   14e48:	60 00 00 f8 	call 384 <send_sd_command>
   14e4c:	20 04 00 11 	cmpne_i s1, s0, 1
   14e50:	81 06 00 f4 	bnz s1, 208 <init_sdmmc_device+0x2a8>
   14e54:	00 a4 00 0f 	move s0, 41
   14e58:	1e 70 01 88 	store_32 s0, 92(sp)
   14e5c:	00 fc 40 4f 	movehi s0, 133088
   14e60:	1e 60 01 88 	store_32 s0, 88(sp)
   14e64:	00 dc 00 0f 	move s0, 55
   14e68:	1e 50 01 88 	store_32 s0, 84(sp)
   14e6c:	1e 80 01 a8 	load_32 s0, 96(sp)
   14e70:	1e 90 01 88 	store_32 s0, 100(sp)
   14e74:	1e 70 01 a8 	load_32 s0, 92(sp)
   14e78:	3e 60 01 a8 	load_32 s1, 88(sp)
   14e7c:	53 00 00 f8 	call 332 <send_sd_command>
   14e80:	59 03 00 88 	store_32 s26, (s25)
   14e84:	38 00 00 a8 	load_32 s1, (s24)
   14e88:	21 04 00 01 	and s1, s1, 1
   14e8c:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x20c>
   14e90:	3b 00 00 a8 	load_32 s1, (s27)
   14e94:	59 03 00 88 	store_32 s26, (s25)
   14e98:	7e 80 01 a8 	load_32 s3, 96(sp)
   14e9c:	38 00 00 a8 	load_32 s1, (s24)
   14ea0:	21 04 00 01 	and s1, s1, 1
   14ea4:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x224>
   14ea8:	3b 00 00 a8 	load_32 s1, (s27)
   14eac:	59 03 00 88 	store_32 s26, (s25)
   14eb0:	38 00 00 a8 	load_32 s1, (s24)
   14eb4:	21 04 00 01 	and s1, s1, 1
   14eb8:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x238>
   14ebc:	3b 00 00 a8 	load_32 s1, (s27)
   14ec0:	59 03 00 88 	store_32 s26, (s25)
   14ec4:	38 00 00 a8 	load_32 s1, (s24)
   14ec8:	21 04 00 01 	and s1, s1, 1
   14ecc:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x24c>
   14ed0:	3b 00 00 a8 	load_32 s1, (s27)
   14ed4:	59 03 00 88 	store_32 s26, (s25)
   14ed8:	38 00 00 a8 	load_32 s1, (s24)
   14edc:	21 04 00 01 	and s1, s1, 1
   14ee0:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x260>
   14ee4:	20 04 00 10 	cmpeq_i s1, s0, 1
   14ee8:	5b 00 00 a8 	load_32 s2, (s27)
   14eec:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x27c>
   14ef0:	28 00 00 f6 	b 160 <init_sdmmc_device+0x318>
   14ef4:	3e 90 01 a8 	load_32 s1, 100(sp)
   14ef8:	01 90 01 11 	cmpne_i s0, s1, 100
   14efc:	40 00 00 f4 	bnz s0, 8 <init_sdmmc_device+0x28c>
   14f00:	2b 00 00 f6 	b 172 <init_sdmmc_device+0x334>
   14f04:	21 04 00 05 	add_i s1, s1, 1
   14f08:	3e 90 01 88 	store_32 s1, 100(sp)
   14f0c:	1e 50 01 a8 	load_32 s0, 84(sp)
   14f10:	20 80 f1 c0 	move s1, s3
   14f14:	2d 00 00 f8 	call 180 <send_sd_command>
   14f18:	20 04 00 10 	cmpeq_i s1, s0, 1
   14f1c:	c1 fa ff f5 	bnz s1, -168 <init_sdmmc_device+0x1fc>
   14f20:	22 00 00 4f 	movehi s1, 2
   14f24:	1e 10 00 88 	store_32 s0, 4(sp)
   14f28:	01 8c 12 00 	or s0, s1, 1187
   14f2c:	0c 00 00 f6 	b 48 <init_sdmmc_device+0x2e4>
   14f30:	22 00 00 4f 	movehi s1, 2
   14f34:	1e 10 00 88 	store_32 s0, 4(sp)
   14f38:	01 0c 08 00 	or s0, s1, 515
   14f3c:	08 00 00 f6 	b 32 <init_sdmmc_device+0x2e4>
   14f40:	22 00 00 4f 	movehi s1, 2
   14f44:	1e 10 00 88 	store_32 s0, 4(sp)
   14f48:	01 2c 06 00 	or s0, s1, 395
   14f4c:	04 00 00 f6 	b 16 <init_sdmmc_device+0x2e4>
   14f50:	22 00 00 4f 	movehi s1, 2
   14f54:	1e 10 00 88 	store_32 s0, 4(sp)
   14f58:	01 24 05 00 	or s0, s1, 329
   14f5c:	1e 00 00 88 	store_32 s0, (sp)
   14f60:	ab f6 ff f9 	call -9556 <printf>
   14f64:	00 fc ff 0f 	move s0, -1
   14f68:	fe b3 01 a8 	load_32 ra, 108(sp)
   14f6c:	7e c3 01 a8 	load_32 s27, 112(sp)
   14f70:	5e d3 01 a8 	load_32 s26, 116(sp)
   14f74:	3e e3 01 a8 	load_32 s25, 120(sp)
   14f78:	1e f3 01 a8 	load_32 s24, 124(sp)
   14f7c:	de 03 02 05 	add_i sp, sp, 128
   14f80:	1f 00 00 f0 	ret
   14f84:	02 00 00 4f 	movehi s0, 2
   14f88:	00 d0 06 00 	or s0, s0, 436
   14f8c:	8a ff ff f7 	b -472 <init_sdmmc_device+0x13c>
   14f90:	40 00 00 f2 	bz s0, 8 <init_sdmmc_device+0x320>
   14f94:	09 00 00 f6 	b 36 <init_sdmmc_device+0x340>
   14f98:	3e a0 01 a8 	load_32 s1, 104(sp)
   14f9c:	00 10 00 0f 	move s0, 4
   14fa0:	01 00 00 88 	store_32 s0, (s1)
   14fa4:	00 00 00 0f 	move s0, 0
   14fa8:	f0 ff ff f7 	b -64 <init_sdmmc_device+0x2f0>
   14fac:	02 00 00 4f 	movehi s0, 2
   14fb0:	00 c0 05 00 	or s0, s0, 368
   14fb4:	80 ff ff f7 	b -512 <init_sdmmc_device+0x13c>
   14fb8:	22 00 00 4f 	movehi s1, 2
   14fbc:	1e 10 00 88 	store_32 s0, 4(sp)
   14fc0:	01 9c 03 00 	or s0, s1, 231
   14fc4:	e6 ff ff f7 	b -104 <init_sdmmc_device+0x2e4>

0000000000014fc8 send_sd_command:
   14fc8:	42 00 00 4f 	movehi s2, 2
   14fcc:	00 00 01 00 	or s0, s0, 64
   14fd0:	e1 60 00 0a 	shr s7, s1, 24
   14fd4:	42 70 22 00 	or s2, s2, 2204
   14fd8:	00 fd 03 01 	and s8, s0, 255
   14fdc:	61 40 00 0a 	shr s3, s1, 16
   14fe0:	02 00 54 c0 	add_i s0, s2, s8
   14fe4:	81 fc 03 01 	and s4, s1, 255
   14fe8:	c3 fc 03 01 	and s6, s3, 255
   14fec:	00 00 00 a0 	load_u8 s0, (s0)
   14ff0:	61 20 00 0a 	shr s3, s1, 8
   14ff4:	a3 fc 03 01 	and s5, s3, 255
   14ff8:	00 04 00 0b 	shl s0, s0, 1
   14ffc:	78 fc ff 4f 	movehi s3, 524280
   15000:	00 80 33 c0 	xor s0, s0, s7
   15004:	02 00 50 c0 	add_i s0, s2, s0
   15008:	23 00 03 00 	or s1, s3, 192
   1500c:	00 00 00 a0 	load_u8 s0, (s0)
   15010:	00 04 00 0b 	shl s0, s0, 1
   15014:	00 00 33 c0 	xor s0, s0, s6
   15018:	02 00 50 c0 	add_i s0, s2, s0
   1501c:	00 00 00 a0 	load_u8 s0, (s0)
   15020:	00 04 00 0b 	shl s0, s0, 1
   15024:	00 80 32 c0 	xor s0, s0, s5
   15028:	02 00 50 c0 	add_i s0, s2, s0
   1502c:	00 00 00 a0 	load_u8 s0, (s0)
   15030:	00 04 00 0b 	shl s0, s0, 1
   15034:	00 00 32 c0 	xor s0, s0, s4
   15038:	02 00 50 c0 	add_i s0, s2, s0
   1503c:	43 20 03 00 	or s2, s3, 200
   15040:	00 00 00 a0 	load_u8 s0, (s0)
   15044:	01 01 00 88 	store_32 s8, (s1)
   15048:	00 04 00 0b 	shl s0, s0, 1
   1504c:	02 01 00 a8 	load_32 s8, (s2)
   15050:	08 05 00 01 	and s8, s8, 1
   15054:	c8 ff ff f3 	bz s8, -8 <send_sd_command+0x84>
   15058:	63 10 03 00 	or s3, s3, 196
   1505c:	03 01 00 a8 	load_32 s8, (s3)
   15060:	e1 00 00 88 	store_32 s7, (s1)
   15064:	e2 00 00 a8 	load_32 s7, (s2)
   15068:	e7 04 00 01 	and s7, s7, 1
   1506c:	c7 ff ff f3 	bz s7, -8 <send_sd_command+0x9c>
   15070:	e3 00 00 a8 	load_32 s7, (s3)
   15074:	c1 00 00 88 	store_32 s6, (s1)
   15078:	c2 00 00 a8 	load_32 s6, (s2)
   1507c:	c6 04 00 01 	and s6, s6, 1
   15080:	c6 ff ff f3 	bz s6, -8 <send_sd_command+0xb0>
   15084:	c3 00 00 a8 	load_32 s6, (s3)
   15088:	a1 00 00 88 	store_32 s5, (s1)
   1508c:	a2 00 00 a8 	load_32 s5, (s2)
   15090:	a5 04 00 01 	and s5, s5, 1
   15094:	c5 ff ff f3 	bz s5, -8 <send_sd_command+0xc4>
   15098:	a3 00 00 a8 	load_32 s5, (s3)
   1509c:	81 00 00 88 	store_32 s4, (s1)
   150a0:	82 00 00 a8 	load_32 s4, (s2)
   150a4:	84 04 00 01 	and s4, s4, 1
   150a8:	c4 ff ff f3 	bz s4, -8 <send_sd_command+0xd8>
   150ac:	00 f8 03 01 	and s0, s0, 254
   150b0:	83 00 00 a8 	load_32 s4, (s3)
   150b4:	00 04 00 00 	or s0, s0, 1
   150b8:	01 00 00 88 	store_32 s0, (s1)
   150bc:	02 00 00 a8 	load_32 s0, (s2)
   150c0:	00 04 00 01 	and s0, s0, 1
   150c4:	c0 ff ff f3 	bz s0, -8 <send_sd_command+0xf4>
   150c8:	80 00 00 0f 	move s4, 0
   150cc:	03 00 00 a8 	load_32 s0, (s3)
   150d0:	a0 fc 03 0f 	move s5, 255
   150d4:	a1 00 00 88 	store_32 s5, (s1)
   150d8:	02 00 00 a8 	load_32 s0, (s2)
   150dc:	00 04 00 01 	and s0, s0, 1
   150e0:	c0 ff ff f3 	bz s0, -8 <send_sd_command+0x110>
   150e4:	03 00 00 a8 	load_32 s0, (s3)
   150e8:	c0 fc 03 11 	cmpne_i s6, s0, 255
   150ec:	86 00 00 f4 	bnz s6, 16 <send_sd_command+0x134>
   150f0:	c4 90 01 18 	cmplt_u s6, s4, 100
   150f4:	84 04 00 05 	add_i s4, s4, 1
   150f8:	e6 fe ff f5 	bnz s6, -36 <send_sd_command+0x10c>
   150fc:	1f 00 00 f0 	ret

0000000000015100 read_sdmmc_device:
   15100:	de 03 fe 05 	add_i sp, sp, -128
   15104:	1e f3 01 88 	store_32 s24, 124(sp)
   15108:	fe e3 01 88 	store_32 ra, 120(sp)
   1510c:	00 83 f0 c0 	move s24, s1
   15110:	20 00 f0 c0 	move s1, s0
   15114:	00 44 00 0f 	move s0, 17
   15118:	ac ff ff f9 	call -336 <send_sd_command>
   1511c:	40 00 00 f4 	bnz s0, 8 <read_sdmmc_device+0x24>
   15120:	07 00 00 f6 	b 28 <read_sdmmc_device+0x3c>
   15124:	22 00 00 4f 	movehi s1, 2
   15128:	1e 10 00 88 	store_32 s0, 4(sp)
   1512c:	01 90 02 00 	or s0, s1, 164
   15130:	1e 00 00 88 	store_32 s0, (sp)
   15134:	36 f6 ff f9 	call -10024 <printf>
   15138:	15 00 00 f6 	b 84 <read_sdmmc_device+0x8c>
   1513c:	b8 fc ff 4f 	movehi s5, 524280
   15140:	01 00 00 4f 	movehi s0, 1
   15144:	60 fc 03 0f 	move s3, 255
   15148:	45 00 03 00 	or s2, s5, 192
   1514c:	80 40 1c 00 	or s4, s0, 1808
   15150:	25 20 03 00 	or s1, s5, 200
   15154:	05 10 03 00 	or s0, s5, 196
   15158:	62 00 00 88 	store_32 s3, (s2)
   1515c:	a1 00 00 a8 	load_32 s5, (s1)
   15160:	a5 04 00 01 	and s5, s5, 1
   15164:	c5 ff ff f3 	bz s5, -8 <read_sdmmc_device+0x5c>
   15168:	a0 00 00 a8 	load_32 s5, (s0)
   1516c:	a5 f8 03 11 	cmpne_i s5, s5, 254
   15170:	45 00 00 f4 	bnz s5, 8 <read_sdmmc_device+0x78>
   15174:	0b 00 00 f6 	b 44 <read_sdmmc_device+0xa0>
   15178:	84 fc ff 05 	add_i s4, s4, -1
   1517c:	e4 fe ff f5 	bnz s4, -36 <read_sdmmc_device+0x58>
   15180:	02 00 00 4f 	movehi s0, 2
   15184:	00 b8 0a 00 	or s0, s0, 686
   15188:	ff f6 ff f9 	call -9220 <puts>
   1518c:	00 fc ff 0f 	move s0, -1
   15190:	fe e3 01 a8 	load_32 ra, 120(sp)
   15194:	1e f3 01 a8 	load_32 s24, 124(sp)
   15198:	de 03 02 05 	add_i sp, sp, 128
   1519c:	1f 00 00 f0 	ret
   151a0:	80 00 00 0f 	move s4, 0
   151a4:	04 00 00 f6 	b 16 <read_sdmmc_device+0xb4>
   151a8:	d8 00 52 c0 	add_i s6, s24, s4
   151ac:	84 04 00 05 	add_i s4, s4, 1
   151b0:	a6 00 00 82 	store_8 s5, (s6)
   151b4:	62 00 00 88 	store_32 s3, (s2)
   151b8:	a1 00 00 a8 	load_32 s5, (s1)
   151bc:	a5 04 00 01 	and s5, s5, 1
   151c0:	c5 ff ff f3 	bz s5, -8 <read_sdmmc_device+0xb8>
   151c4:	a0 00 00 a8 	load_32 s5, (s0)
   151c8:	c4 00 08 18 	cmplt_u s6, s4, 512
   151cc:	e6 fe ff f5 	bnz s6, -36 <read_sdmmc_device+0xa8>
   151d0:	62 00 00 88 	store_32 s3, (s2)
   151d4:	41 00 00 a8 	load_32 s2, (s1)
   151d8:	42 04 00 01 	and s2, s2, 1
   151dc:	c2 ff ff f3 	bz s2, -8 <read_sdmmc_device+0xd4>
   151e0:	00 00 00 a8 	load_32 s0, (s0)
   151e4:	00 00 08 0f 	move s0, 512
   151e8:	fe e3 01 a8 	load_32 ra, 120(sp)
   151ec:	1e f3 01 a8 	load_32 s24, 124(sp)
   151f0:	de 03 02 05 	add_i sp, sp, 128
   151f4:	1f 00 00 f0 	ret

00000000000151f8 write_sdmmc_device:
   151f8:	de 03 fe 05 	add_i sp, sp, -128
   151fc:	1e f3 01 88 	store_32 s24, 124(sp)
   15200:	fe e3 01 88 	store_32 ra, 120(sp)
   15204:	00 83 f0 c0 	move s24, s1
   15208:	20 00 f0 c0 	move s1, s0
   1520c:	00 60 00 0f 	move s0, 24
   15210:	6e ff ff f9 	call -584 <send_sd_command>
   15214:	a0 00 00 f2 	bz s0, 20 <write_sdmmc_device+0x30>
   15218:	22 00 00 4f 	movehi s1, 2
   1521c:	1e 10 00 88 	store_32 s0, 4(sp)
   15220:	01 1c 09 00 	or s0, s1, 583
   15224:	32 00 00 f6 	b 200 <write_sdmmc_device+0xf4>
   15228:	58 fc ff 4f 	movehi s2, 524280
   1522c:	00 f8 03 0f 	move s0, 254
   15230:	22 00 03 00 	or s1, s2, 192
   15234:	01 00 00 88 	store_32 s0, (s1)
   15238:	02 20 03 00 	or s0, s2, 200
   1523c:	60 00 00 a8 	load_32 s3, (s0)
   15240:	63 04 00 01 	and s3, s3, 1
   15244:	c3 ff ff f3 	bz s3, -8 <write_sdmmc_device+0x44>
   15248:	42 10 03 00 	or s2, s2, 196
   1524c:	62 00 00 a8 	load_32 s3, (s2)
   15250:	60 00 00 0f 	move s3, 0
   15254:	98 80 51 c0 	add_i s4, s24, s3
   15258:	84 00 00 a0 	load_u8 s4, (s4)
   1525c:	81 00 00 88 	store_32 s4, (s1)
   15260:	80 00 00 a8 	load_32 s4, (s0)
   15264:	84 04 00 01 	and s4, s4, 1
   15268:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0x68>
   1526c:	63 04 00 05 	add_i s3, s3, 1
   15270:	a2 00 00 a8 	load_32 s5, (s2)
   15274:	83 00 08 18 	cmplt_u s4, s3, 512
   15278:	e4 fe ff f5 	bnz s4, -36 <write_sdmmc_device+0x5c>
   1527c:	60 fc 03 0f 	move s3, 255
   15280:	61 00 00 88 	store_32 s3, (s1)
   15284:	80 00 00 a8 	load_32 s4, (s0)
   15288:	84 04 00 01 	and s4, s4, 1
   1528c:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0x8c>
   15290:	82 00 00 a8 	load_32 s4, (s2)
   15294:	61 00 00 88 	store_32 s3, (s1)
   15298:	80 00 00 a8 	load_32 s4, (s0)
   1529c:	84 04 00 01 	and s4, s4, 1
   152a0:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0xa0>
   152a4:	82 00 00 a8 	load_32 s4, (s2)
   152a8:	61 00 00 88 	store_32 s3, (s1)
   152ac:	20 00 00 a8 	load_32 s1, (s0)
   152b0:	21 04 00 01 	and s1, s1, 1
   152b4:	c1 ff ff f3 	bz s1, -8 <write_sdmmc_device+0xb4>
   152b8:	02 00 00 a8 	load_32 s0, (s2)
   152bc:	20 7c 00 01 	and s1, s0, 31
   152c0:	21 14 00 10 	cmpeq_i s1, s1, 5
   152c4:	41 00 00 f4 	bnz s1, 8 <write_sdmmc_device+0xd4>
   152c8:	06 00 00 f6 	b 24 <write_sdmmc_device+0xe8>
   152cc:	00 00 08 0f 	move s0, 512
   152d0:	fe e3 01 a8 	load_32 ra, 120(sp)
   152d4:	1e f3 01 a8 	load_32 s24, 124(sp)
   152d8:	de 03 02 05 	add_i sp, sp, 128
   152dc:	1f 00 00 f0 	ret
   152e0:	22 00 00 4f 	movehi s1, 2
   152e4:	1e 10 00 88 	store_32 s0, 4(sp)
   152e8:	01 98 0c 00 	or s0, s1, 806
   152ec:	1e 00 00 88 	store_32 s0, (sp)
   152f0:	c7 f5 ff f9 	call -10468 <printf>
   152f4:	00 fc ff 0f 	move s0, -1
   152f8:	fe e3 01 a8 	load_32 ra, 120(sp)
   152fc:	1e f3 01 a8 	load_32 s24, 124(sp)
   15300:	de 03 02 05 	add_i sp, sp, 128
   15304:	1f 00 00 f0 	ret

0000000000015308 init_vga:
   15308:	de 03 ff 05 	add_i sp, sp, -64
   1530c:	fe f3 00 88 	store_32 ra, 60(sp)
   15310:	20 04 00 10 	cmpeq_i s1, s0, 1
   15314:	e1 00 00 f4 	bnz s1, 28 <init_vga+0x28>
   15318:	e0 01 00 f4 	bnz s0, 60 <init_vga+0x4c>
   1531c:	00 28 00 0f 	move s0, 10
   15320:	20 84 00 0f 	move s1, 33
   15324:	40 00 00 0f 	move s2, 0
   15328:	60 80 07 0f 	move s3, 480
   1532c:	05 00 00 f6 	b 20 <init_vga+0x38>
   15330:	00 30 00 0f 	move s0, 12
   15334:	20 8c 00 0f 	move s1, 35
   15338:	40 04 00 0f 	move s2, 1
   1533c:	60 40 06 0f 	move s3, 400
   15340:	09 00 00 f8 	call 36 <compile_microcode>
   15344:	00 20 00 4f 	movehi s0, 256
   15348:	fe f3 00 a8 	load_32 ra, 60(sp)
   1534c:	de 03 01 05 	add_i sp, sp, 64
   15350:	1f 00 00 f0 	ret
   15354:	00 00 00 0f 	move s0, 0
   15358:	fe f3 00 a8 	load_32 ra, 60(sp)
   1535c:	de 03 01 05 	add_i sp, sp, 64
   15360:	1f 00 00 f0 	ret

0000000000015364 compile_microcode:
   15364:	42 00 00 10 	cmpeq_i s2, s2, 0
   15368:	62 00 00 f4 	bnz s2, 12 <compile_microcode+0x10>
   1536c:	40 10 00 0f 	move s2, 4
   15370:	02 00 00 f6 	b 8 <compile_microcode+0x14>
   15374:	40 30 00 0f 	move s2, 12
   15378:	8c 00 00 4f 	movehi s4, 12
   1537c:	cc 00 00 4f 	movehi s6, 12
   15380:	e0 00 00 0f 	move s7, 0
   15384:	a4 70 15 00 	or s5, s4, 1372
   15388:	98 fc ff 4f 	movehi s4, 524280
   1538c:	c6 80 15 00 	or s6, s6, 1376
   15390:	45 00 00 88 	store_32 s2, (s5)
   15394:	00 10 00 0b 	shl s0, s0, 4
   15398:	44 00 06 00 	or s2, s4, 384
   1539c:	e6 00 00 88 	store_32 s7, (s6)
   153a0:	50 01 00 4f 	movehi s10, 16
   153a4:	21 10 00 0b 	shl s1, s1, 4
   153a8:	e2 00 00 88 	store_32 s7, (s2)
   153ac:	e5 00 00 a8 	load_32 s7, (s5)
   153b0:	e0 80 03 c0 	or s7, s0, s7
   153b4:	04 10 06 00 	or s0, s4, 388
   153b8:	e7 00 05 c0 	or s7, s7, s10
   153bc:	e0 00 00 88 	store_32 s7, (s0)
   153c0:	e6 00 00 a8 	load_32 s7, (s6)
   153c4:	07 05 00 05 	add_i s8, s7, 1
   153c8:	06 01 00 88 	store_32 s8, (s6)
   153cc:	e5 00 00 a8 	load_32 s7, (s5)
   153d0:	08 11 00 0b 	shl s8, s8, 4
   153d4:	e7 c0 03 00 	or s7, s7, 240
   153d8:	e0 00 00 88 	store_32 s7, (s0)
   153dc:	e6 00 00 a8 	load_32 s7, (s6)
   153e0:	e7 04 00 05 	add_i s7, s7, 1
   153e4:	e6 00 00 88 	store_32 s7, (s6)
   153e8:	25 01 00 a8 	load_32 s9, (s5)
   153ec:	e7 10 00 0b 	shl s7, s7, 4
   153f0:	27 81 04 c0 	or s9, s7, s9
   153f4:	e0 04 00 4f 	movehi s7, 32
   153f8:	29 81 03 c0 	or s9, s9, s7
   153fc:	20 01 00 88 	store_32 s9, (s0)
   15400:	26 01 00 a8 	load_32 s9, (s6)
   15404:	29 05 00 05 	add_i s9, s9, 1
   15408:	26 01 00 88 	store_32 s9, (s6)
   1540c:	25 01 00 a8 	load_32 s9, (s5)
   15410:	29 11 00 03 	xor s9, s9, 4
   15414:	25 01 00 88 	store_32 s9, (s5)
   15418:	29 c1 17 00 	or s9, s9, 1520
   1541c:	20 01 00 88 	store_32 s9, (s0)
   15420:	26 01 00 a8 	load_32 s9, (s6)
   15424:	29 05 00 05 	add_i s9, s9, 1
   15428:	26 01 00 88 	store_32 s9, (s6)
   1542c:	65 01 00 a8 	load_32 s11, (s5)
   15430:	29 11 00 0b 	shl s9, s9, 4
   15434:	29 81 05 c0 	or s9, s9, s11
   15438:	29 81 03 c0 	or s9, s9, s7
   1543c:	20 01 00 88 	store_32 s9, (s0)
   15440:	26 01 00 a8 	load_32 s9, (s6)
   15444:	29 05 00 05 	add_i s9, s9, 1
   15448:	26 01 00 88 	store_32 s9, (s6)
   1544c:	25 01 00 a8 	load_32 s9, (s5)
   15450:	29 11 00 03 	xor s9, s9, 4
   15454:	25 01 00 88 	store_32 s9, (s5)
   15458:	29 c1 0b 00 	or s9, s9, 752
   1545c:	20 01 00 88 	store_32 s9, (s0)
   15460:	26 01 00 a8 	load_32 s9, (s6)
   15464:	29 05 00 05 	add_i s9, s9, 1
   15468:	26 01 00 88 	store_32 s9, (s6)
   1546c:	65 01 00 a8 	load_32 s11, (s5)
   15470:	29 11 00 0b 	shl s9, s9, 4
   15474:	29 81 05 c0 	or s9, s9, s11
   15478:	29 81 03 c0 	or s9, s9, s7
   1547c:	20 01 00 88 	store_32 s9, (s0)
   15480:	26 01 00 a8 	load_32 s9, (s6)
   15484:	29 05 00 05 	add_i s9, s9, 1
   15488:	26 01 00 88 	store_32 s9, (s6)
   1548c:	21 01 00 4f 	movehi s9, 1
   15490:	65 01 00 a8 	load_32 s11, (s5)
   15494:	29 c1 1f 00 	or s9, s9, 2032
   15498:	6b 81 04 c0 	or s11, s11, s9
   1549c:	60 01 00 88 	store_32 s11, (s0)
   154a0:	66 01 00 a8 	load_32 s11, (s6)
   154a4:	6b 05 00 05 	add_i s11, s11, 1
   154a8:	66 01 00 88 	store_32 s11, (s6)
   154ac:	85 01 00 a8 	load_32 s12, (s5)
   154b0:	6b 11 00 0b 	shl s11, s11, 4
   154b4:	6b 01 06 c0 	or s11, s11, s12
   154b8:	8a 81 00 00 	or s12, s10, 32
   154bc:	6b 81 03 c0 	or s11, s11, s7
   154c0:	60 01 00 88 	store_32 s11, (s0)
   154c4:	66 01 00 a8 	load_32 s11, (s6)
   154c8:	6b 05 00 05 	add_i s11, s11, 1
   154cc:	66 01 00 88 	store_32 s11, (s6)
   154d0:	65 01 00 a8 	load_32 s11, (s5)
   154d4:	68 81 05 c0 	or s11, s8, s11
   154d8:	10 05 00 4f 	movehi s8, 48
   154dc:	6b 01 04 c0 	or s11, s11, s8
   154e0:	60 01 00 88 	store_32 s11, (s0)
   154e4:	66 01 00 a8 	load_32 s11, (s6)
   154e8:	6b 05 00 05 	add_i s11, s11, 1
   154ec:	66 01 00 88 	store_32 s11, (s6)
   154f0:	65 01 00 a8 	load_32 s11, (s5)
   154f4:	6b 21 00 03 	xor s11, s11, 8
   154f8:	65 01 00 88 	store_32 s11, (s5)
   154fc:	6b 01 06 c0 	or s11, s11, s12
   15500:	60 01 00 88 	store_32 s11, (s0)
   15504:	66 01 00 a8 	load_32 s11, (s6)
   15508:	6b 05 00 05 	add_i s11, s11, 1
   1550c:	66 01 00 88 	store_32 s11, (s6)
   15510:	85 01 00 a8 	load_32 s12, (s5)
   15514:	6b 11 00 0b 	shl s11, s11, 4
   15518:	8c c1 03 00 	or s12, s12, 240
   1551c:	80 01 00 88 	store_32 s12, (s0)
   15520:	86 01 00 a8 	load_32 s12, (s6)
   15524:	8c 05 00 05 	add_i s12, s12, 1
   15528:	86 01 00 88 	store_32 s12, (s6)
   1552c:	a5 01 00 a8 	load_32 s13, (s5)
   15530:	8c 11 00 0b 	shl s12, s12, 4
   15534:	8c 81 06 c0 	or s12, s12, s13
   15538:	8c 81 03 c0 	or s12, s12, s7
   1553c:	80 01 00 88 	store_32 s12, (s0)
   15540:	86 01 00 a8 	load_32 s12, (s6)
   15544:	8c 05 00 05 	add_i s12, s12, 1
   15548:	86 01 00 88 	store_32 s12, (s6)
   1554c:	85 01 00 a8 	load_32 s12, (s5)
   15550:	8c 11 00 03 	xor s12, s12, 4
   15554:	85 01 00 88 	store_32 s12, (s5)
   15558:	8c c1 17 00 	or s12, s12, 1520
   1555c:	80 01 00 88 	store_32 s12, (s0)
   15560:	86 01 00 a8 	load_32 s12, (s6)
   15564:	8c 05 00 05 	add_i s12, s12, 1
   15568:	86 01 00 88 	store_32 s12, (s6)
   1556c:	a5 01 00 a8 	load_32 s13, (s5)
   15570:	8c 11 00 0b 	shl s12, s12, 4
   15574:	8c 81 06 c0 	or s12, s12, s13
   15578:	8c 81 03 c0 	or s12, s12, s7
   1557c:	80 01 00 88 	store_32 s12, (s0)
   15580:	86 01 00 a8 	load_32 s12, (s6)
   15584:	8c 05 00 05 	add_i s12, s12, 1
   15588:	86 01 00 88 	store_32 s12, (s6)
   1558c:	85 01 00 a8 	load_32 s12, (s5)
   15590:	8c 11 00 03 	xor s12, s12, 4
   15594:	85 01 00 88 	store_32 s12, (s5)
   15598:	8c c1 0b 00 	or s12, s12, 752
   1559c:	80 01 00 88 	store_32 s12, (s0)
   155a0:	86 01 00 a8 	load_32 s12, (s6)
   155a4:	8c 05 00 05 	add_i s12, s12, 1
   155a8:	86 01 00 88 	store_32 s12, (s6)
   155ac:	a5 01 00 a8 	load_32 s13, (s5)
   155b0:	8c 11 00 0b 	shl s12, s12, 4
   155b4:	8c 81 06 c0 	or s12, s12, s13
   155b8:	8c 81 03 c0 	or s12, s12, s7
   155bc:	80 01 00 88 	store_32 s12, (s0)
   155c0:	86 01 00 a8 	load_32 s12, (s6)
   155c4:	8c 05 00 05 	add_i s12, s12, 1
   155c8:	86 01 00 88 	store_32 s12, (s6)
   155cc:	85 01 00 a8 	load_32 s12, (s5)
   155d0:	8c 81 04 c0 	or s12, s12, s9
   155d4:	80 01 00 88 	store_32 s12, (s0)
   155d8:	86 01 00 a8 	load_32 s12, (s6)
   155dc:	8c 05 00 05 	add_i s12, s12, 1
   155e0:	86 01 00 88 	store_32 s12, (s6)
   155e4:	a5 01 00 a8 	load_32 s13, (s5)
   155e8:	8c 11 00 0b 	shl s12, s12, 4
   155ec:	8c 81 06 c0 	or s12, s12, s13
   155f0:	8c 81 03 c0 	or s12, s12, s7
   155f4:	80 01 00 88 	store_32 s12, (s0)
   155f8:	86 01 00 a8 	load_32 s12, (s6)
   155fc:	8c 05 00 05 	add_i s12, s12, 1
   15600:	86 01 00 88 	store_32 s12, (s6)
   15604:	85 01 00 a8 	load_32 s12, (s5)
   15608:	6b 01 06 c0 	or s11, s11, s12
   1560c:	6b 01 04 c0 	or s11, s11, s8
   15610:	60 01 00 88 	store_32 s11, (s0)
   15614:	66 01 00 a8 	load_32 s11, (s6)
   15618:	6b 05 00 05 	add_i s11, s11, 1
   1561c:	66 01 00 88 	store_32 s11, (s6)
   15620:	65 01 00 a8 	load_32 s11, (s5)
   15624:	6b 21 00 03 	xor s11, s11, 8
   15628:	65 01 00 88 	store_32 s11, (s5)
   1562c:	21 80 05 c0 	or s1, s1, s11
   15630:	21 00 05 c0 	or s1, s1, s10
   15634:	20 00 00 88 	store_32 s1, (s0)
   15638:	26 00 00 a8 	load_32 s1, (s6)
   1563c:	21 04 00 05 	add_i s1, s1, 1
   15640:	26 00 00 88 	store_32 s1, (s6)
   15644:	65 01 00 a8 	load_32 s11, (s5)
   15648:	21 10 00 0b 	shl s1, s1, 4
   1564c:	6b c1 03 00 	or s11, s11, 240
   15650:	60 01 00 88 	store_32 s11, (s0)
   15654:	66 01 00 a8 	load_32 s11, (s6)
   15658:	6b 05 00 05 	add_i s11, s11, 1
   1565c:	66 01 00 88 	store_32 s11, (s6)
   15660:	85 01 00 a8 	load_32 s12, (s5)
   15664:	6b 11 00 0b 	shl s11, s11, 4
   15668:	6b 01 06 c0 	or s11, s11, s12
   1566c:	6b 81 03 c0 	or s11, s11, s7
   15670:	60 01 00 88 	store_32 s11, (s0)
   15674:	66 01 00 a8 	load_32 s11, (s6)
   15678:	6b 05 00 05 	add_i s11, s11, 1
   1567c:	66 01 00 88 	store_32 s11, (s6)
   15680:	65 01 00 a8 	load_32 s11, (s5)
   15684:	6b 11 00 03 	xor s11, s11, 4
   15688:	65 01 00 88 	store_32 s11, (s5)
   1568c:	6b c1 17 00 	or s11, s11, 1520
   15690:	60 01 00 88 	store_32 s11, (s0)
   15694:	66 01 00 a8 	load_32 s11, (s6)
   15698:	6b 05 00 05 	add_i s11, s11, 1
   1569c:	66 01 00 88 	store_32 s11, (s6)
   156a0:	85 01 00 a8 	load_32 s12, (s5)
   156a4:	6b 11 00 0b 	shl s11, s11, 4
   156a8:	6b 01 06 c0 	or s11, s11, s12
   156ac:	6b 81 03 c0 	or s11, s11, s7
   156b0:	60 01 00 88 	store_32 s11, (s0)
   156b4:	66 01 00 a8 	load_32 s11, (s6)
   156b8:	6b 05 00 05 	add_i s11, s11, 1
   156bc:	66 01 00 88 	store_32 s11, (s6)
   156c0:	65 01 00 a8 	load_32 s11, (s5)
   156c4:	6b 11 00 03 	xor s11, s11, 4
   156c8:	65 01 00 88 	store_32 s11, (s5)
   156cc:	6b c1 0b 00 	or s11, s11, 752
   156d0:	60 01 00 88 	store_32 s11, (s0)
   156d4:	66 01 00 a8 	load_32 s11, (s6)
   156d8:	6b 05 00 05 	add_i s11, s11, 1
   156dc:	66 01 00 88 	store_32 s11, (s6)
   156e0:	85 01 00 a8 	load_32 s12, (s5)
   156e4:	6b 11 00 0b 	shl s11, s11, 4
   156e8:	6b 01 06 c0 	or s11, s11, s12
   156ec:	6b 81 03 c0 	or s11, s11, s7
   156f0:	60 01 00 88 	store_32 s11, (s0)
   156f4:	66 01 00 a8 	load_32 s11, (s6)
   156f8:	6b 05 00 05 	add_i s11, s11, 1
   156fc:	66 01 00 88 	store_32 s11, (s6)
   15700:	65 01 00 a8 	load_32 s11, (s5)
   15704:	6b 81 04 c0 	or s11, s11, s9
   15708:	60 01 00 88 	store_32 s11, (s0)
   1570c:	66 01 00 a8 	load_32 s11, (s6)
   15710:	6b 05 00 05 	add_i s11, s11, 1
   15714:	66 01 00 88 	store_32 s11, (s6)
   15718:	85 01 00 a8 	load_32 s12, (s5)
   1571c:	6b 11 00 0b 	shl s11, s11, 4
   15720:	6b 01 06 c0 	or s11, s11, s12
   15724:	6b 81 03 c0 	or s11, s11, s7
   15728:	60 01 00 88 	store_32 s11, (s0)
   1572c:	66 01 00 a8 	load_32 s11, (s6)
   15730:	6b 05 00 05 	add_i s11, s11, 1
   15734:	66 01 00 88 	store_32 s11, (s6)
   15738:	65 01 00 a8 	load_32 s11, (s5)
   1573c:	21 80 05 c0 	or s1, s1, s11
   15740:	63 11 00 0b 	shl s11, s3, 4
   15744:	21 00 04 c0 	or s1, s1, s8
   15748:	20 00 00 88 	store_32 s1, (s0)
   1574c:	26 00 00 a8 	load_32 s1, (s6)
   15750:	21 04 00 05 	add_i s1, s1, 1
   15754:	26 00 00 88 	store_32 s1, (s6)
   15758:	25 00 00 a8 	load_32 s1, (s5)
   1575c:	2b 80 00 c0 	or s1, s11, s1
   15760:	21 00 05 c0 	or s1, s1, s10
   15764:	20 00 00 88 	store_32 s1, (s0)
   15768:	26 00 00 a8 	load_32 s1, (s6)
   1576c:	21 04 00 05 	add_i s1, s1, 1
   15770:	26 00 00 88 	store_32 s1, (s6)
   15774:	45 01 00 a8 	load_32 s10, (s5)
   15778:	21 10 00 0b 	shl s1, s1, 4
   1577c:	4a c1 03 00 	or s10, s10, 240
   15780:	40 01 00 88 	store_32 s10, (s0)
   15784:	46 01 00 a8 	load_32 s10, (s6)
   15788:	4a 05 00 05 	add_i s10, s10, 1
   1578c:	46 01 00 88 	store_32 s10, (s6)
   15790:	65 01 00 a8 	load_32 s11, (s5)
   15794:	4a 11 00 0b 	shl s10, s10, 4
   15798:	4a 81 05 c0 	or s10, s10, s11
   1579c:	4a 81 03 c0 	or s10, s10, s7
   157a0:	40 01 00 88 	store_32 s10, (s0)
   157a4:	46 01 00 a8 	load_32 s10, (s6)
   157a8:	4a 05 00 05 	add_i s10, s10, 1
   157ac:	46 01 00 88 	store_32 s10, (s6)
   157b0:	45 01 00 a8 	load_32 s10, (s5)
   157b4:	4a 11 00 03 	xor s10, s10, 4
   157b8:	45 01 00 88 	store_32 s10, (s5)
   157bc:	4a c1 17 00 	or s10, s10, 1520
   157c0:	40 01 00 88 	store_32 s10, (s0)
   157c4:	46 01 00 a8 	load_32 s10, (s6)
   157c8:	4a 05 00 05 	add_i s10, s10, 1
   157cc:	46 01 00 88 	store_32 s10, (s6)
   157d0:	65 01 00 a8 	load_32 s11, (s5)
   157d4:	4a 11 00 0b 	shl s10, s10, 4
   157d8:	4a 81 05 c0 	or s10, s10, s11
   157dc:	4a 81 03 c0 	or s10, s10, s7
   157e0:	40 01 00 88 	store_32 s10, (s0)
   157e4:	46 01 00 a8 	load_32 s10, (s6)
   157e8:	4a 05 00 05 	add_i s10, s10, 1
   157ec:	46 01 00 88 	store_32 s10, (s6)
   157f0:	45 01 00 a8 	load_32 s10, (s5)
   157f4:	4a 11 00 03 	xor s10, s10, 4
   157f8:	45 01 00 88 	store_32 s10, (s5)
   157fc:	4a c1 0b 00 	or s10, s10, 752
   15800:	40 01 00 88 	store_32 s10, (s0)
   15804:	46 01 00 a8 	load_32 s10, (s6)
   15808:	4a 05 00 05 	add_i s10, s10, 1
   1580c:	46 01 00 88 	store_32 s10, (s6)
   15810:	65 01 00 a8 	load_32 s11, (s5)
   15814:	4a 11 00 0b 	shl s10, s10, 4
   15818:	4a 81 05 c0 	or s10, s10, s11
   1581c:	4a 81 03 c0 	or s10, s10, s7
   15820:	40 01 00 88 	store_32 s10, (s0)
   15824:	46 01 00 a8 	load_32 s10, (s6)
   15828:	4a 05 00 05 	add_i s10, s10, 1
   1582c:	46 01 00 88 	store_32 s10, (s6)
   15830:	45 01 00 a8 	load_32 s10, (s5)
   15834:	4a 05 00 03 	xor s10, s10, 1
   15838:	45 01 00 88 	store_32 s10, (s5)
   1583c:	2a 81 04 c0 	or s9, s10, s9
   15840:	20 01 00 88 	store_32 s9, (s0)
   15844:	26 01 00 a8 	load_32 s9, (s6)
   15848:	29 05 00 05 	add_i s9, s9, 1
   1584c:	26 01 00 88 	store_32 s9, (s6)
   15850:	45 01 00 a8 	load_32 s10, (s5)
   15854:	29 11 00 0b 	shl s9, s9, 4
   15858:	29 01 05 c0 	or s9, s9, s10
   1585c:	e9 80 03 c0 	or s7, s9, s7
   15860:	e0 00 00 88 	store_32 s7, (s0)
   15864:	e6 00 00 a8 	load_32 s7, (s6)
   15868:	e7 04 00 05 	add_i s7, s7, 1
   1586c:	e6 00 00 88 	store_32 s7, (s6)
   15870:	e5 00 00 a8 	load_32 s7, (s5)
   15874:	e7 04 00 03 	xor s7, s7, 1
   15878:	e5 00 00 88 	store_32 s7, (s5)
   1587c:	21 80 03 c0 	or s1, s1, s7
   15880:	21 00 04 c0 	or s1, s1, s8
   15884:	20 00 00 88 	store_32 s1, (s0)
   15888:	26 00 00 a8 	load_32 s1, (s6)
   1588c:	21 04 00 05 	add_i s1, s1, 1
   15890:	26 00 00 88 	store_32 s1, (s6)
   15894:	25 00 00 a8 	load_32 s1, (s5)
   15898:	21 08 00 00 	or s1, s1, 2
   1589c:	20 00 00 88 	store_32 s1, (s0)
   158a0:	04 20 06 00 	or s0, s4, 392
   158a4:	84 30 06 00 	or s4, s4, 396
   158a8:	20 20 00 4f 	movehi s1, 256
   158ac:	20 00 00 88 	store_32 s1, (s0)
   158b0:	03 00 0a 07 	mull_i s0, s3, 640
   158b4:	04 00 00 88 	store_32 s0, (s4)
   158b8:	00 04 00 0f 	move s0, 1
   158bc:	02 00 00 88 	store_32 s0, (s2)
   158c0:	1f 00 00 f0 	ret

00000000000158c4 __divsi3:
; {
   158c4:	de 03 ff 05 	add_i sp, sp, -64
   158c8:	fe f3 00 88 	store_32 ra, 60(sp)
   158cc:	40 80 f0 c0 	move s2, s1
   158d0:	60 00 f0 c0 	move s3, s0
   158d4:	1e e0 00 88 	store_32 s0, 56(sp)
   158d8:	3e d0 00 88 	store_32 s1, 52(sp)
   158dc:	00 7c 00 0f 	move s0, 31
; const int bits_in_word_m1 = (int)(sizeof(si_int) * CHAR_BIT) - 1;
   158e0:	1e c0 00 88 	store_32 s0, 48(sp)
; si_int s_a = a >> bits_in_word_m1;           /* s_a = a < 0 ? -1 : 0 */
   158e4:	1e e0 00 a8 	load_32 s0, 56(sp)
   158e8:	00 7c 00 09 	ashr s0, s0, 31
   158ec:	1e b0 00 88 	store_32 s0, 44(sp)
; si_int s_b = b >> bits_in_word_m1;           /* s_b = b < 0 ? -1 : 0 */
   158f0:	1e d0 00 a8 	load_32 s0, 52(sp)
   158f4:	00 7c 00 09 	ashr s0, s0, 31
   158f8:	1e a0 00 88 	store_32 s0, 40(sp)
; a = (a ^ s_a) - s_a;                         /* negate if s_a == -1 */
   158fc:	1e e0 00 a8 	load_32 s0, 56(sp)
   15900:	3e b0 00 a8 	load_32 s1, 44(sp)
   15904:	00 80 30 c0 	xor s0, s0, s1
   15908:	00 80 60 c0 	sub_i s0, s0, s1
   1590c:	1e e0 00 88 	store_32 s0, 56(sp)
; b = (b ^ s_b) - s_b;                         /* negate if s_b == -1 */
   15910:	1e d0 00 a8 	load_32 s0, 52(sp)
   15914:	3e a0 00 a8 	load_32 s1, 40(sp)
   15918:	00 80 30 c0 	xor s0, s0, s1
   1591c:	00 80 60 c0 	sub_i s0, s0, s1
   15920:	1e d0 00 88 	store_32 s0, 52(sp)
; s_a ^= s_b;                                  /* sign of quotient */
   15924:	1e a0 00 a8 	load_32 s0, 40(sp)
   15928:	3e b0 00 a8 	load_32 s1, 44(sp)
   1592c:	01 00 30 c0 	xor s0, s1, s0
   15930:	1e b0 00 88 	store_32 s0, 44(sp)
; return ((su_int)a/(su_int)b ^ s_a) - s_a;    /* negate if s_a == -1 */
   15934:	1e e0 00 a8 	load_32 s0, 56(sp)
   15938:	3e d0 00 a8 	load_32 s1, 52(sp)
   1593c:	9c 00 00 a8 	load_32 s4, (gp)
   15940:	5e 90 00 88 	store_32 s2, 36(sp)
   15944:	7e 80 00 88 	store_32 s3, 32(sp)
   15948:	84 00 00 fc 	call s4
   1594c:	3e b0 00 a8 	load_32 s1, 44(sp)
   15950:	00 80 30 c0 	xor s0, s0, s1
   15954:	00 80 60 c0 	sub_i s0, s0, s1
   15958:	fe f3 00 a8 	load_32 ra, 60(sp)
   1595c:	de 03 01 05 	add_i sp, sp, 64
   15960:	1f 00 00 f0 	ret

0000000000015964 __udivdi3:
; {
   15964:	de 03 ff 05 	add_i sp, sp, -64
   15968:	fe f3 00 88 	store_32 ra, 60(sp)
   1596c:	80 80 f1 c0 	move s4, s3
   15970:	a0 00 f1 c0 	move s5, s2
   15974:	c0 80 f0 c0 	move s6, s1
   15978:	e0 00 f0 c0 	move s7, s0
   1597c:	1e c1 00 05 	add_i s8, sp, 48
   15980:	08 11 00 00 	or s8, s8, 4
   15984:	28 00 00 88 	store_32 s1, (s8)
   15988:	1e c0 00 88 	store_32 s0, 48(sp)
   1598c:	1e a0 00 05 	add_i s0, sp, 40
   15990:	00 10 00 00 	or s0, s0, 4
   15994:	60 00 00 88 	store_32 s3, (s0)
   15998:	5e a0 00 88 	store_32 s2, 40(sp)
; return __udivmoddi4(a, b, 0);
   1599c:	28 00 00 a8 	load_32 s1, (s8)
   159a0:	5e c0 00 a8 	load_32 s2, 48(sp)
   159a4:	60 00 00 a8 	load_32 s3, (s0)
   159a8:	1e a0 00 a8 	load_32 s0, 40(sp)
   159ac:	1c 11 00 a8 	load_32 s8, 4(gp)
   159b0:	20 01 00 0f 	move s9, 0
   159b4:	1e 90 00 88 	store_32 s0, 36(sp)
   159b8:	00 00 f1 c0 	move s0, s2
   159bc:	5e 90 00 a8 	load_32 s2, 36(sp)
   159c0:	9e 80 00 88 	store_32 s4, 32(sp)
   159c4:	80 80 f4 c0 	move s4, s9
   159c8:	be 70 00 88 	store_32 s5, 28(sp)
   159cc:	de 60 00 88 	store_32 s6, 24(sp)
   159d0:	fe 50 00 88 	store_32 s7, 20(sp)
   159d4:	08 01 00 fc 	call s8
   159d8:	fe f3 00 a8 	load_32 ra, 60(sp)
   159dc:	de 03 01 05 	add_i sp, sp, 64
   159e0:	1f 00 00 f0 	ret

00000000000159e4 __udivmoddi4:
; {
   159e4:	de 03 fd 05 	add_i sp, sp, -192
   159e8:	fe f3 02 88 	store_32 ra, 188(sp)
   159ec:	a0 80 f1 c0 	move s5, s3
   159f0:	c0 00 f1 c0 	move s6, s2
   159f4:	e0 80 f0 c0 	move s7, s1
   159f8:	00 01 f0 c0 	move s8, s0
   159fc:	20 01 f2 c0 	move s9, s4
   15a00:	5e a1 02 05 	add_i s10, sp, 168
   15a04:	4a 11 00 00 	or s10, s10, 4
   15a08:	2a 00 00 88 	store_32 s1, (s10)
   15a0c:	1e a0 02 88 	store_32 s0, 168(sp)
   15a10:	1e 80 02 05 	add_i s0, sp, 160
   15a14:	00 10 00 00 	or s0, s0, 4
   15a18:	60 00 00 88 	store_32 s3, (s0)
   15a1c:	5e 80 02 88 	store_32 s2, 160(sp)
   15a20:	9e 70 02 88 	store_32 s4, 156(sp)
   15a24:	20 80 00 0f 	move s1, 32
; const unsigned n_uword_bits = sizeof(su_int) * CHAR_BIT;
   15a28:	3e 60 02 88 	store_32 s1, 152(sp)
   15a2c:	20 00 01 0f 	move s1, 64
; const unsigned n_udword_bits = sizeof(du_int) * CHAR_BIT;
   15a30:	3e 50 02 88 	store_32 s1, 148(sp)
; n.all = a;
   15a34:	2a 00 00 a8 	load_32 s1, (s10)
   15a38:	5e a0 02 a8 	load_32 s2, 168(sp)
   15a3c:	7e 20 02 05 	add_i s3, sp, 136
   15a40:	63 10 00 00 	or s3, s3, 4
   15a44:	23 00 00 88 	store_32 s1, (s3)
   15a48:	5e 20 02 88 	store_32 s2, 136(sp)
; d.all = b;
   15a4c:	00 00 00 a8 	load_32 s0, (s0)
   15a50:	3e 80 02 a8 	load_32 s1, 160(sp)
   15a54:	5e 00 02 05 	add_i s2, sp, 128
   15a58:	42 10 00 00 	or s2, s2, 4
   15a5c:	02 00 00 88 	store_32 s0, (s2)
   15a60:	3e 00 02 88 	store_32 s1, 128(sp)
; if (n.s.high == 0)
   15a64:	03 00 00 a8 	load_32 s0, (s3)
   15a68:	be 70 01 88 	store_32 s5, 92(sp)
   15a6c:	de 60 01 88 	store_32 s6, 88(sp)
   15a70:	fe 50 01 88 	store_32 s7, 84(sp)
   15a74:	1e 41 01 88 	store_32 s8, 80(sp)
   15a78:	3e 31 01 88 	store_32 s9, 76(sp)
   15a7c:	80 05 00 f4 	bnz s0, 176 <__udivmoddi4+0x148>
   15a80:	01 00 00 f6 	b 4 <__udivmoddi4+0xa0>
   15a84:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
   15a88:	00 10 00 00 	or s0, s0, 4
   15a8c:	00 00 00 a8 	load_32 s0, (s0)
   15a90:	00 03 00 f4 	bnz s0, 96 <__udivmoddi4+0x10c>
   15a94:	01 00 00 f6 	b 4 <__udivmoddi4+0xb4>
; if (rem)
   15a98:	1e 70 02 a8 	load_32 s0, 156(sp)
   15a9c:	60 01 00 f2 	bz s0, 44 <__udivmoddi4+0xe4>
   15aa0:	01 00 00 f6 	b 4 <__udivmoddi4+0xc0>
; *rem = n.s.low % d.s.low;
   15aa4:	1e 20 02 a8 	load_32 s0, 136(sp)
   15aa8:	3e 00 02 a8 	load_32 s1, 128(sp)
   15aac:	5c 20 00 a8 	load_32 s2, 8(gp)
   15ab0:	42 00 00 fc 	call s2
   15ab4:	3e 70 02 a8 	load_32 s1, 156(sp)
   15ab8:	40 00 00 0f 	move s2, 0
   15abc:	41 10 00 88 	store_32 s2, 4(s1)
   15ac0:	01 00 00 88 	store_32 s0, (s1)
   15ac4:	01 00 00 f6 	b 4 <__udivmoddi4+0xe4>
; return n.s.low / d.s.low;
   15ac8:	1e 20 02 a8 	load_32 s0, 136(sp)
   15acc:	3e 00 02 a8 	load_32 s1, 128(sp)
   15ad0:	5c 00 00 a8 	load_32 s2, (gp)
   15ad4:	42 00 00 fc 	call s2
   15ad8:	3e c0 02 05 	add_i s1, sp, 176
   15adc:	21 10 00 00 	or s1, s1, 4
   15ae0:	40 00 00 0f 	move s2, 0
   15ae4:	41 00 00 88 	store_32 s2, (s1)
   15ae8:	1e c0 02 88 	store_32 s0, 176(sp)
   15aec:	49 02 00 f6 	b 2340 <__udivmoddi4+0xa2c>
; if (rem)
   15af0:	1e 70 02 a8 	load_32 s0, 156(sp)
   15af4:	00 01 00 f2 	bz s0, 32 <__udivmoddi4+0x130>
   15af8:	01 00 00 f6 	b 4 <__udivmoddi4+0x118>
; *rem = n.s.low;
   15afc:	1e 20 02 a8 	load_32 s0, 136(sp)
   15b00:	3e 70 02 a8 	load_32 s1, 156(sp)
   15b04:	40 00 00 0f 	move s2, 0
   15b08:	41 10 00 88 	store_32 s2, 4(s1)
   15b0c:	01 00 00 88 	store_32 s0, (s1)
   15b10:	01 00 00 f6 	b 4 <__udivmoddi4+0x130>
   15b14:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
   15b18:	00 10 00 00 	or s0, s0, 4
   15b1c:	20 00 00 0f 	move s1, 0
   15b20:	20 00 00 88 	store_32 s1, (s0)
   15b24:	3e c0 02 88 	store_32 s1, 176(sp)
   15b28:	3a 02 00 f6 	b 2280 <__udivmoddi4+0xa2c>
; if (d.s.low == 0)
   15b2c:	1e 00 02 a8 	load_32 s0, 128(sp)
   15b30:	00 16 00 f4 	bnz s0, 704 <__udivmoddi4+0x40c>
   15b34:	01 00 00 f6 	b 4 <__udivmoddi4+0x154>
   15b38:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
   15b3c:	00 10 00 00 	or s0, s0, 4
   15b40:	00 00 00 a8 	load_32 s0, (s0)
   15b44:	80 03 00 f4 	bnz s0, 112 <__udivmoddi4+0x1d0>
   15b48:	01 00 00 f6 	b 4 <__udivmoddi4+0x168>
; if (rem)
   15b4c:	1e 70 02 a8 	load_32 s0, 156(sp)
   15b50:	a0 01 00 f2 	bz s0, 52 <__udivmoddi4+0x1a0>
   15b54:	01 00 00 f6 	b 4 <__udivmoddi4+0x174>
   15b58:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.s.high % d.s.low;
   15b5c:	00 10 00 00 	or s0, s0, 4
   15b60:	00 00 00 a8 	load_32 s0, (s0)
   15b64:	3e 00 02 a8 	load_32 s1, 128(sp)
   15b68:	5c 20 00 a8 	load_32 s2, 8(gp)
   15b6c:	42 00 00 fc 	call s2
   15b70:	3e 70 02 a8 	load_32 s1, 156(sp)
   15b74:	40 00 00 0f 	move s2, 0
   15b78:	41 10 00 88 	store_32 s2, 4(s1)
   15b7c:	01 00 00 88 	store_32 s0, (s1)
   15b80:	01 00 00 f6 	b 4 <__udivmoddi4+0x1a0>
   15b84:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high / d.s.low;
   15b88:	00 10 00 00 	or s0, s0, 4
   15b8c:	00 00 00 a8 	load_32 s0, (s0)
   15b90:	3e 00 02 a8 	load_32 s1, 128(sp)
   15b94:	5c 00 00 a8 	load_32 s2, (gp)
   15b98:	42 00 00 fc 	call s2
   15b9c:	3e c0 02 05 	add_i s1, sp, 176
   15ba0:	21 10 00 00 	or s1, s1, 4
   15ba4:	40 00 00 0f 	move s2, 0
   15ba8:	41 00 00 88 	store_32 s2, (s1)
   15bac:	1e c0 02 88 	store_32 s0, 176(sp)
   15bb0:	18 02 00 f6 	b 2144 <__udivmoddi4+0xa2c>
; if (n.s.low == 0)
   15bb4:	1e 20 02 a8 	load_32 s0, 136(sp)
   15bb8:	c0 04 00 f4 	bnz s0, 152 <__udivmoddi4+0x26c>
   15bbc:	01 00 00 f6 	b 4 <__udivmoddi4+0x1dc>
; if (rem)
   15bc0:	1e 70 02 a8 	load_32 s0, 156(sp)
   15bc4:	a0 02 00 f2 	bz s0, 84 <__udivmoddi4+0x234>
   15bc8:	01 00 00 f6 	b 4 <__udivmoddi4+0x1e8>
   15bcc:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high % d.s.high;
   15bd0:	00 10 00 00 	or s0, s0, 4
   15bd4:	00 00 00 a8 	load_32 s0, (s0)
   15bd8:	3e 00 02 05 	add_i s1, sp, 128
   15bdc:	21 10 00 00 	or s1, s1, 4
   15be0:	21 00 00 a8 	load_32 s1, (s1)
   15be4:	5c 20 00 a8 	load_32 s2, 8(gp)
   15be8:	42 00 00 fc 	call s2
   15bec:	3e c0 01 05 	add_i s1, sp, 112
   15bf0:	21 10 00 00 	or s1, s1, 4
   15bf4:	01 00 00 88 	store_32 s0, (s1)
   15bf8:	00 00 00 0f 	move s0, 0
; r.s.low = 0;
   15bfc:	1e c0 01 88 	store_32 s0, 112(sp)
; *rem = r.all;
   15c00:	01 00 00 a8 	load_32 s0, (s1)
   15c04:	3e c0 01 a8 	load_32 s1, 112(sp)
   15c08:	5e 70 02 a8 	load_32 s2, 156(sp)
   15c0c:	02 10 00 88 	store_32 s0, 4(s2)
   15c10:	22 00 00 88 	store_32 s1, (s2)
; }
   15c14:	01 00 00 f6 	b 4 <__udivmoddi4+0x234>
   15c18:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high / d.s.high;
   15c1c:	00 10 00 00 	or s0, s0, 4
   15c20:	00 00 00 a8 	load_32 s0, (s0)
   15c24:	3e 00 02 05 	add_i s1, sp, 128
   15c28:	21 10 00 00 	or s1, s1, 4
   15c2c:	21 00 00 a8 	load_32 s1, (s1)
   15c30:	5c 00 00 a8 	load_32 s2, (gp)
   15c34:	42 00 00 fc 	call s2
   15c38:	3e c0 02 05 	add_i s1, sp, 176
   15c3c:	21 10 00 00 	or s1, s1, 4
   15c40:	40 00 00 0f 	move s2, 0
   15c44:	41 00 00 88 	store_32 s2, (s1)
   15c48:	1e c0 02 88 	store_32 s0, 176(sp)
   15c4c:	f1 01 00 f6 	b 1988 <__udivmoddi4+0xa2c>
   15c50:	1e 00 02 05 	add_i s0, sp, 128
; if ((d.s.high & (d.s.high - 1)) == 0)     /* if d is a power of 2 */
   15c54:	00 10 00 00 	or s0, s0, 4
   15c58:	00 00 00 a8 	load_32 s0, (s0)
   15c5c:	20 fc ff 05 	add_i s1, s0, -1
   15c60:	00 80 10 c0 	and s0, s0, s1
   15c64:	c0 04 00 f4 	bnz s0, 152 <__udivmoddi4+0x318>
   15c68:	01 00 00 f6 	b 4 <__udivmoddi4+0x288>
; if (rem)
   15c6c:	1e 70 02 a8 	load_32 s0, 156(sp)
   15c70:	a0 02 00 f2 	bz s0, 84 <__udivmoddi4+0x2e0>
   15c74:	01 00 00 f6 	b 4 <__udivmoddi4+0x294>
; r.s.low = n.s.low;
   15c78:	1e 20 02 a8 	load_32 s0, 136(sp)
   15c7c:	1e c0 01 88 	store_32 s0, 112(sp)
   15c80:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high & (d.s.high - 1);
   15c84:	00 10 00 00 	or s0, s0, 4
   15c88:	00 00 00 a8 	load_32 s0, (s0)
   15c8c:	3e 00 02 05 	add_i s1, sp, 128
   15c90:	21 10 00 00 	or s1, s1, 4
   15c94:	21 00 00 a8 	load_32 s1, (s1)
   15c98:	21 fc ff 05 	add_i s1, s1, -1
   15c9c:	00 80 10 c0 	and s0, s0, s1
   15ca0:	3e c0 01 05 	add_i s1, sp, 112
   15ca4:	21 10 00 00 	or s1, s1, 4
   15ca8:	01 00 00 88 	store_32 s0, (s1)
; *rem = r.all;
   15cac:	01 00 00 a8 	load_32 s0, (s1)
   15cb0:	3e c0 01 a8 	load_32 s1, 112(sp)
   15cb4:	5e 70 02 a8 	load_32 s2, 156(sp)
   15cb8:	02 10 00 88 	store_32 s0, 4(s2)
   15cbc:	22 00 00 88 	store_32 s1, (s2)
; }
   15cc0:	01 00 00 f6 	b 4 <__udivmoddi4+0x2e0>
   15cc4:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high >> __builtin_ctz(d.s.high);
   15cc8:	00 10 00 00 	or s0, s0, 4
   15ccc:	00 00 00 a8 	load_32 s0, (s0)
   15cd0:	3e 00 02 05 	add_i s1, sp, 128
   15cd4:	21 10 00 00 	or s1, s1, 4
   15cd8:	21 00 00 a8 	load_32 s1, (s1)
   15cdc:	20 80 e0 c0 	ctz s1, s1
   15ce0:	00 80 a0 c0 	shr s0, s0, s1
   15ce4:	3e c0 02 05 	add_i s1, sp, 176
   15ce8:	21 10 00 00 	or s1, s1, 4
   15cec:	40 00 00 0f 	move s2, 0
   15cf0:	41 00 00 88 	store_32 s2, (s1)
   15cf4:	1e c0 02 88 	store_32 s0, 176(sp)
   15cf8:	c6 01 00 f6 	b 1816 <__udivmoddi4+0xa2c>
   15cfc:	1e 00 02 05 	add_i s0, sp, 128
; sr = __builtin_clz(d.s.high) - __builtin_clz(n.s.high);
   15d00:	00 10 00 00 	or s0, s0, 4
   15d04:	00 00 00 a8 	load_32 s0, (s0)
   15d08:	00 00 c0 c0 	clz s0, s0
   15d0c:	3e 20 02 05 	add_i s1, sp, 136
   15d10:	21 10 00 00 	or s1, s1, 4
   15d14:	21 00 00 a8 	load_32 s1, (s1)
   15d18:	20 80 c0 c0 	clz s1, s1
   15d1c:	00 80 60 c0 	sub_i s0, s0, s1
   15d20:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr > n_uword_bits - 2)
   15d24:	1e b0 01 a8 	load_32 s0, 108(sp)
   15d28:	00 7c 00 18 	cmplt_u s0, s0, 31
   15d2c:	60 02 00 f4 	bnz s0, 76 <__udivmoddi4+0x394>
   15d30:	01 00 00 f6 	b 4 <__udivmoddi4+0x350>
; if (rem)
   15d34:	1e 70 02 a8 	load_32 s0, 156(sp)
   15d38:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0x37c>
   15d3c:	01 00 00 f6 	b 4 <__udivmoddi4+0x35c>
   15d40:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.all;
   15d44:	00 10 00 00 	or s0, s0, 4
   15d48:	00 00 00 a8 	load_32 s0, (s0)
   15d4c:	3e 20 02 a8 	load_32 s1, 136(sp)
   15d50:	5e 70 02 a8 	load_32 s2, 156(sp)
   15d54:	02 10 00 88 	store_32 s0, 4(s2)
   15d58:	22 00 00 88 	store_32 s1, (s2)
   15d5c:	01 00 00 f6 	b 4 <__udivmoddi4+0x37c>
   15d60:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
   15d64:	00 10 00 00 	or s0, s0, 4
   15d68:	20 00 00 0f 	move s1, 0
   15d6c:	20 00 00 88 	store_32 s1, (s0)
   15d70:	3e c0 02 88 	store_32 s1, 176(sp)
   15d74:	a7 01 00 f6 	b 1692 <__udivmoddi4+0xa2c>
; ++sr;
   15d78:	1e b0 01 a8 	load_32 s0, 108(sp)
   15d7c:	00 04 00 05 	add_i s0, s0, 1
   15d80:	1e b0 01 88 	store_32 s0, 108(sp)
   15d84:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
   15d88:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low << (n_uword_bits - sr);
   15d8c:	1e 20 02 a8 	load_32 s0, 136(sp)
   15d90:	3e b0 01 a8 	load_32 s1, 108(sp)
   15d94:	40 80 00 0f 	move s2, 32
   15d98:	22 80 60 c0 	sub_i s1, s2, s1
   15d9c:	00 80 b0 c0 	shl s0, s0, s1
   15da0:	3e e0 01 05 	add_i s1, sp, 120
   15da4:	21 10 00 00 	or s1, s1, 4
   15da8:	01 00 00 88 	store_32 s0, (s1)
   15dac:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
   15db0:	00 10 00 00 	or s0, s0, 4
   15db4:	20 00 00 a8 	load_32 s1, (s0)
   15db8:	7e b0 01 a8 	load_32 s3, 108(sp)
   15dbc:	21 80 a1 c0 	shr s1, s1, s3
   15dc0:	7e c0 01 05 	add_i s3, sp, 112
   15dc4:	63 10 00 00 	or s3, s3, 4
   15dc8:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
   15dcc:	00 00 00 a8 	load_32 s0, (s0)
   15dd0:	3e b0 01 a8 	load_32 s1, 108(sp)
   15dd4:	42 80 60 c0 	sub_i s2, s2, s1
   15dd8:	00 00 b1 c0 	shl s0, s0, s2
   15ddc:	5e 20 02 a8 	load_32 s2, 136(sp)
   15de0:	22 80 a0 c0 	shr s1, s2, s1
   15de4:	00 80 00 c0 	or s0, s0, s1
   15de8:	1e c0 01 88 	store_32 s0, 112(sp)
; }
   15dec:	e8 00 00 f6 	b 928 <__udivmoddi4+0x7a8>
   15df0:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
   15df4:	00 10 00 00 	or s0, s0, 4
   15df8:	00 00 00 a8 	load_32 s0, (s0)
   15dfc:	80 12 00 f4 	bnz s0, 592 <__udivmoddi4+0x668>
   15e00:	01 00 00 f6 	b 4 <__udivmoddi4+0x420>
; if ((d.s.low & (d.s.low - 1)) == 0)     /* if d is a power of 2 */
   15e04:	1e 00 02 a8 	load_32 s0, 128(sp)
   15e08:	20 fc ff 05 	add_i s1, s0, -1
   15e0c:	00 80 10 c0 	and s0, s0, s1
   15e10:	c0 06 00 f4 	bnz s0, 216 <__udivmoddi4+0x504>
   15e14:	01 00 00 f6 	b 4 <__udivmoddi4+0x434>
; if (rem)
   15e18:	1e 70 02 a8 	load_32 s0, 156(sp)
   15e1c:	60 01 00 f2 	bz s0, 44 <__udivmoddi4+0x464>
   15e20:	01 00 00 f6 	b 4 <__udivmoddi4+0x440>
; *rem = n.s.low & (d.s.low - 1);
   15e24:	1e 20 02 a8 	load_32 s0, 136(sp)
   15e28:	3e 00 02 a8 	load_32 s1, 128(sp)
   15e2c:	21 fc ff 05 	add_i s1, s1, -1
   15e30:	00 80 10 c0 	and s0, s0, s1
   15e34:	3e 70 02 a8 	load_32 s1, 156(sp)
   15e38:	40 00 00 0f 	move s2, 0
   15e3c:	41 10 00 88 	store_32 s2, 4(s1)
   15e40:	01 00 00 88 	store_32 s0, (s1)
   15e44:	01 00 00 f6 	b 4 <__udivmoddi4+0x464>
; if (d.s.low == 1)
   15e48:	1e 00 02 a8 	load_32 s0, 128(sp)
   15e4c:	00 04 00 11 	cmpne_i s0, s0, 1
   15e50:	60 01 00 f4 	bnz s0, 44 <__udivmoddi4+0x498>
   15e54:	01 00 00 f6 	b 4 <__udivmoddi4+0x474>
   15e58:	1e 20 02 05 	add_i s0, sp, 136
; return n.all;
   15e5c:	00 10 00 00 	or s0, s0, 4
   15e60:	00 00 00 a8 	load_32 s0, (s0)
   15e64:	3e 20 02 a8 	load_32 s1, 136(sp)
   15e68:	5e c0 02 05 	add_i s2, sp, 176
   15e6c:	42 10 00 00 	or s2, s2, 4
   15e70:	02 00 00 88 	store_32 s0, (s2)
   15e74:	3e c0 02 88 	store_32 s1, 176(sp)
   15e78:	66 01 00 f6 	b 1432 <__udivmoddi4+0xa2c>
; sr = __builtin_ctz(d.s.low);
   15e7c:	1e 00 02 a8 	load_32 s0, 128(sp)
   15e80:	00 00 e0 c0 	ctz s0, s0
   15e84:	1e b0 01 88 	store_32 s0, 108(sp)
   15e88:	1e 20 02 05 	add_i s0, sp, 136
; q.s.high = n.s.high >> sr;
   15e8c:	00 10 00 00 	or s0, s0, 4
   15e90:	20 00 00 a8 	load_32 s1, (s0)
   15e94:	5e b0 01 a8 	load_32 s2, 108(sp)
   15e98:	21 00 a1 c0 	shr s1, s1, s2
   15e9c:	5e e0 01 05 	add_i s2, sp, 120
   15ea0:	42 10 00 00 	or s2, s2, 4
   15ea4:	22 00 00 88 	store_32 s1, (s2)
; q.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
   15ea8:	00 00 00 a8 	load_32 s0, (s0)
   15eac:	3e b0 01 a8 	load_32 s1, 108(sp)
   15eb0:	60 80 00 0f 	move s3, 32
   15eb4:	63 80 60 c0 	sub_i s3, s3, s1
   15eb8:	00 80 b1 c0 	shl s0, s0, s3
   15ebc:	7e 20 02 a8 	load_32 s3, 136(sp)
   15ec0:	23 80 a0 c0 	shr s1, s3, s1
   15ec4:	00 80 00 c0 	or s0, s0, s1
   15ec8:	1e e0 01 88 	store_32 s0, 120(sp)
; return q.all;
   15ecc:	02 00 00 a8 	load_32 s0, (s2)
   15ed0:	3e e0 01 a8 	load_32 s1, 120(sp)
   15ed4:	5e c0 02 05 	add_i s2, sp, 176
   15ed8:	42 10 00 00 	or s2, s2, 4
   15edc:	02 00 00 88 	store_32 s0, (s2)
   15ee0:	3e c0 02 88 	store_32 s1, 176(sp)
   15ee4:	4b 01 00 f6 	b 1324 <__udivmoddi4+0xa2c>
; sr = 1 + n_uword_bits + __builtin_clz(d.s.low) - __builtin_clz(n.s.high);
   15ee8:	1e 00 02 a8 	load_32 s0, 128(sp)
   15eec:	00 00 c0 c0 	clz s0, s0
   15ef0:	00 84 00 05 	add_i s0, s0, 33
   15ef4:	3e 20 02 05 	add_i s1, sp, 136
   15ef8:	21 10 00 00 	or s1, s1, 4
   15efc:	21 00 00 a8 	load_32 s1, (s1)
   15f00:	20 80 c0 c0 	clz s1, s1
   15f04:	00 80 60 c0 	sub_i s0, s0, s1
   15f08:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr == n_uword_bits)
   15f0c:	1e b0 01 a8 	load_32 s0, 108(sp)
   15f10:	00 80 00 11 	cmpne_i s0, s0, 32
   15f14:	00 02 00 f4 	bnz s0, 64 <__udivmoddi4+0x570>
   15f18:	01 00 00 f6 	b 4 <__udivmoddi4+0x538>
   15f1c:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
   15f20:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low;
   15f24:	3e 20 02 a8 	load_32 s1, 136(sp)
   15f28:	5e e0 01 05 	add_i s2, sp, 120
   15f2c:	42 10 00 00 	or s2, s2, 4
   15f30:	22 00 00 88 	store_32 s1, (s2)
   15f34:	3e c0 01 05 	add_i s1, sp, 112
; r.s.high = 0;
   15f38:	21 10 00 00 	or s1, s1, 4
   15f3c:	01 00 00 88 	store_32 s0, (s1)
   15f40:	1e 20 02 05 	add_i s0, sp, 136
; r.s.low = n.s.high;
   15f44:	00 10 00 00 	or s0, s0, 4
   15f48:	00 00 00 a8 	load_32 s0, (s0)
   15f4c:	1e c0 01 88 	store_32 s0, 112(sp)
; }
   15f50:	3e 00 00 f6 	b 248 <__udivmoddi4+0x664>
; else if (sr < n_uword_bits)  // 2 <= sr <= n_uword_bits - 1
   15f54:	1e b0 01 a8 	load_32 s0, 108(sp)
   15f58:	00 7c 00 16 	cmpgt_u s0, s0, 31
   15f5c:	a0 03 00 f4 	bnz s0, 116 <__udivmoddi4+0x5ec>
   15f60:	01 00 00 f6 	b 4 <__udivmoddi4+0x580>
   15f64:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
   15f68:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low << (n_uword_bits - sr);
   15f6c:	1e 20 02 a8 	load_32 s0, 136(sp)
   15f70:	3e b0 01 a8 	load_32 s1, 108(sp)
   15f74:	40 80 00 0f 	move s2, 32
   15f78:	22 80 60 c0 	sub_i s1, s2, s1
   15f7c:	00 80 b0 c0 	shl s0, s0, s1
   15f80:	3e e0 01 05 	add_i s1, sp, 120
   15f84:	21 10 00 00 	or s1, s1, 4
   15f88:	01 00 00 88 	store_32 s0, (s1)
   15f8c:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
   15f90:	00 10 00 00 	or s0, s0, 4
   15f94:	20 00 00 a8 	load_32 s1, (s0)
   15f98:	7e b0 01 a8 	load_32 s3, 108(sp)
   15f9c:	21 80 a1 c0 	shr s1, s1, s3
   15fa0:	7e c0 01 05 	add_i s3, sp, 112
   15fa4:	63 10 00 00 	or s3, s3, 4
   15fa8:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
   15fac:	00 00 00 a8 	load_32 s0, (s0)
   15fb0:	3e b0 01 a8 	load_32 s1, 108(sp)
   15fb4:	42 80 60 c0 	sub_i s2, s2, s1
   15fb8:	00 00 b1 c0 	shl s0, s0, s2
   15fbc:	5e 20 02 a8 	load_32 s2, 136(sp)
   15fc0:	22 80 a0 c0 	shr s1, s2, s1
   15fc4:	00 80 00 c0 	or s0, s0, s1
   15fc8:	1e c0 01 88 	store_32 s0, 112(sp)
; }
   15fcc:	1e 00 00 f6 	b 120 <__udivmoddi4+0x660>
; q.s.low = n.s.low << (n_udword_bits - sr);
   15fd0:	1e 20 02 a8 	load_32 s0, 136(sp)
   15fd4:	3e b0 01 a8 	load_32 s1, 108(sp)
   15fd8:	40 00 01 0f 	move s2, 64
   15fdc:	22 80 60 c0 	sub_i s1, s2, s1
   15fe0:	00 80 b0 c0 	shl s0, s0, s1
   15fe4:	1e e0 01 88 	store_32 s0, 120(sp)
   15fe8:	1e 20 02 05 	add_i s0, sp, 136
; q.s.high = (n.s.high << (n_udword_bits - sr)) |
   15fec:	00 10 00 00 	or s0, s0, 4
   15ff0:	20 00 00 a8 	load_32 s1, (s0)
   15ff4:	7e b0 01 a8 	load_32 s3, 108(sp)
   15ff8:	42 80 61 c0 	sub_i s2, s2, s3
   15ffc:	21 00 b1 c0 	shl s1, s1, s2
; (n.s.low >> (sr - n_uword_bits));
   16000:	5e 20 02 a8 	load_32 s2, 136(sp)
   16004:	63 80 ff 05 	add_i s3, s3, -32
   16008:	42 80 a1 c0 	shr s2, s2, s3
; q.s.high = (n.s.high << (n_udword_bits - sr)) |
   1600c:	21 00 01 c0 	or s1, s1, s2
   16010:	5e e0 01 05 	add_i s2, sp, 120
   16014:	42 10 00 00 	or s2, s2, 4
   16018:	22 00 00 88 	store_32 s1, (s2)
   1601c:	3e c0 01 05 	add_i s1, sp, 112
; r.s.high = 0;
   16020:	21 10 00 00 	or s1, s1, 4
   16024:	40 00 00 0f 	move s2, 0
   16028:	41 00 00 88 	store_32 s2, (s1)
; r.s.low = n.s.high >> (sr - n_uword_bits);
   1602c:	00 00 00 a8 	load_32 s0, (s0)
   16030:	3e b0 01 a8 	load_32 s1, 108(sp)
   16034:	21 80 ff 05 	add_i s1, s1, -32
   16038:	00 80 a0 c0 	shr s0, s0, s1
   1603c:	1e c0 01 88 	store_32 s0, 112(sp)
   16040:	01 00 00 f6 	b 4 <__udivmoddi4+0x660>
   16044:	01 00 00 f6 	b 4 <__udivmoddi4+0x664>
; }
   16048:	50 00 00 f6 	b 320 <__udivmoddi4+0x7a4>
   1604c:	1e 00 02 05 	add_i s0, sp, 128
; sr = __builtin_clz(d.s.high) - __builtin_clz(n.s.high);
   16050:	00 10 00 00 	or s0, s0, 4
   16054:	00 00 00 a8 	load_32 s0, (s0)
   16058:	00 00 c0 c0 	clz s0, s0
   1605c:	3e 20 02 05 	add_i s1, sp, 136
   16060:	21 10 00 00 	or s1, s1, 4
   16064:	21 00 00 a8 	load_32 s1, (s1)
   16068:	20 80 c0 c0 	clz s1, s1
   1606c:	00 80 60 c0 	sub_i s0, s0, s1
   16070:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr > n_uword_bits - 1)
   16074:	1e b0 01 a8 	load_32 s0, 108(sp)
   16078:	00 80 00 18 	cmplt_u s0, s0, 32
   1607c:	60 02 00 f4 	bnz s0, 76 <__udivmoddi4+0x6e4>
   16080:	01 00 00 f6 	b 4 <__udivmoddi4+0x6a0>
; if (rem)
   16084:	1e 70 02 a8 	load_32 s0, 156(sp)
   16088:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0x6cc>
   1608c:	01 00 00 f6 	b 4 <__udivmoddi4+0x6ac>
   16090:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.all;
   16094:	00 10 00 00 	or s0, s0, 4
   16098:	00 00 00 a8 	load_32 s0, (s0)
   1609c:	3e 20 02 a8 	load_32 s1, 136(sp)
   160a0:	5e 70 02 a8 	load_32 s2, 156(sp)
   160a4:	02 10 00 88 	store_32 s0, 4(s2)
   160a8:	22 00 00 88 	store_32 s1, (s2)
   160ac:	01 00 00 f6 	b 4 <__udivmoddi4+0x6cc>
   160b0:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
   160b4:	00 10 00 00 	or s0, s0, 4
   160b8:	20 00 00 0f 	move s1, 0
   160bc:	20 00 00 88 	store_32 s1, (s0)
   160c0:	3e c0 02 88 	store_32 s1, 176(sp)
   160c4:	d3 00 00 f6 	b 844 <__udivmoddi4+0xa2c>
; ++sr;
   160c8:	1e b0 01 a8 	load_32 s0, 108(sp)
   160cc:	00 04 00 05 	add_i s0, s0, 1
   160d0:	1e b0 01 88 	store_32 s0, 108(sp)
   160d4:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
   160d8:	1e e0 01 88 	store_32 s0, 120(sp)
; if (sr == n_uword_bits)
   160dc:	1e b0 01 a8 	load_32 s0, 108(sp)
   160e0:	00 80 00 11 	cmpne_i s0, s0, 32
   160e4:	e0 01 00 f4 	bnz s0, 60 <__udivmoddi4+0x73c>
   160e8:	01 00 00 f6 	b 4 <__udivmoddi4+0x708>
; q.s.high = n.s.low;
   160ec:	1e 20 02 a8 	load_32 s0, 136(sp)
   160f0:	3e e0 01 05 	add_i s1, sp, 120
   160f4:	21 10 00 00 	or s1, s1, 4
   160f8:	01 00 00 88 	store_32 s0, (s1)
   160fc:	1e c0 01 05 	add_i s0, sp, 112
; r.s.high = 0;
   16100:	00 10 00 00 	or s0, s0, 4
   16104:	20 00 00 0f 	move s1, 0
   16108:	20 00 00 88 	store_32 s1, (s0)
   1610c:	1e 20 02 05 	add_i s0, sp, 136
; r.s.low = n.s.high;
   16110:	00 10 00 00 	or s0, s0, 4
   16114:	00 00 00 a8 	load_32 s0, (s0)
   16118:	1e c0 01 88 	store_32 s0, 112(sp)
; }
   1611c:	1a 00 00 f6 	b 104 <__udivmoddi4+0x7a0>
; q.s.high = n.s.low << (n_uword_bits - sr);
   16120:	1e 20 02 a8 	load_32 s0, 136(sp)
   16124:	3e b0 01 a8 	load_32 s1, 108(sp)
   16128:	40 80 00 0f 	move s2, 32
   1612c:	22 80 60 c0 	sub_i s1, s2, s1
   16130:	00 80 b0 c0 	shl s0, s0, s1
   16134:	3e e0 01 05 	add_i s1, sp, 120
   16138:	21 10 00 00 	or s1, s1, 4
   1613c:	01 00 00 88 	store_32 s0, (s1)
   16140:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
   16144:	00 10 00 00 	or s0, s0, 4
   16148:	20 00 00 a8 	load_32 s1, (s0)
   1614c:	7e b0 01 a8 	load_32 s3, 108(sp)
   16150:	21 80 a1 c0 	shr s1, s1, s3
   16154:	7e c0 01 05 	add_i s3, sp, 112
   16158:	63 10 00 00 	or s3, s3, 4
   1615c:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
   16160:	00 00 00 a8 	load_32 s0, (s0)
   16164:	3e b0 01 a8 	load_32 s1, 108(sp)
   16168:	42 80 60 c0 	sub_i s2, s2, s1
   1616c:	00 00 b1 c0 	shl s0, s0, s2
   16170:	5e 20 02 a8 	load_32 s2, 136(sp)
   16174:	22 80 a0 c0 	shr s1, s2, s1
   16178:	00 80 00 c0 	or s0, s0, s1
   1617c:	1e c0 01 88 	store_32 s0, 112(sp)
   16180:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a0>
   16184:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a4>
   16188:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a8>
   1618c:	00 00 00 0f 	move s0, 0
; su_int carry = 0;
   16190:	1e a0 01 88 	store_32 s0, 104(sp)
; for (; sr > 0; --sr)
   16194:	01 00 00 f6 	b 4 <__udivmoddi4+0x7b4>
   16198:	1e b0 01 a8 	load_32 s0, 108(sp)
   1619c:	a0 0f 00 f2 	bz s0, 500 <__udivmoddi4+0x9ac>
   161a0:	01 00 00 f6 	b 4 <__udivmoddi4+0x7c0>
   161a4:	1e c0 01 05 	add_i s0, sp, 112
; r.s.high = (r.s.high << 1) | (r.s.low  >> (n_uword_bits - 1));
   161a8:	00 10 00 00 	or s0, s0, 4
   161ac:	20 00 00 a8 	load_32 s1, (s0)
   161b0:	21 04 00 0b 	shl s1, s1, 1
   161b4:	5e c0 01 a8 	load_32 s2, 112(sp)
   161b8:	42 7c 00 0a 	shr s2, s2, 31
   161bc:	21 00 01 c0 	or s1, s1, s2
   161c0:	20 00 00 88 	store_32 s1, (s0)
; r.s.low  = (r.s.low  << 1) | (q.s.high >> (n_uword_bits - 1));
   161c4:	3e c0 01 a8 	load_32 s1, 112(sp)
   161c8:	21 04 00 0b 	shl s1, s1, 1
   161cc:	5e e0 01 05 	add_i s2, sp, 120
   161d0:	42 10 00 00 	or s2, s2, 4
   161d4:	62 00 00 a8 	load_32 s3, (s2)
   161d8:	63 7c 00 0a 	shr s3, s3, 31
   161dc:	21 80 01 c0 	or s1, s1, s3
   161e0:	3e c0 01 88 	store_32 s1, 112(sp)
; q.s.high = (q.s.high << 1) | (q.s.low  >> (n_uword_bits - 1));
   161e4:	22 00 00 a8 	load_32 s1, (s2)
   161e8:	21 04 00 0b 	shl s1, s1, 1
   161ec:	7e e0 01 a8 	load_32 s3, 120(sp)
   161f0:	63 7c 00 0a 	shr s3, s3, 31
   161f4:	21 80 01 c0 	or s1, s1, s3
   161f8:	22 00 00 88 	store_32 s1, (s2)
; q.s.low  = (q.s.low  << 1) | carry;
   161fc:	3e e0 01 a8 	load_32 s1, 120(sp)
   16200:	21 04 00 0b 	shl s1, s1, 1
   16204:	5e a0 01 a8 	load_32 s2, 104(sp)
   16208:	21 00 01 c0 	or s1, s1, s2
   1620c:	3e e0 01 88 	store_32 s1, 120(sp)
   16210:	3e 00 02 05 	add_i s1, sp, 128
; const di_int s = (di_int)(d.all - r.all - 1) >> (n_udword_bits - 1);
   16214:	21 10 00 00 	or s1, s1, 4
   16218:	41 00 00 a8 	load_32 s2, (s1)
   1621c:	7e 00 02 a8 	load_32 s3, 128(sp)
   16220:	80 00 00 a8 	load_32 s4, (s0)
   16224:	be c0 01 a8 	load_32 s5, 112(sp)
   16228:	c3 80 82 c1 	cmplt_u s6, s3, s5
   1622c:	e0 00 00 0f 	move s7, 0
   16230:	00 05 00 0f 	move s8, 1
   16234:	20 01 f4 c0 	move s9, s8
   16238:	1e 20 01 88 	store_32 s0, 72(sp)
   1623c:	3e 10 01 88 	store_32 s1, 68(sp)
   16240:	5e 00 01 88 	store_32 s2, 64(sp)
   16244:	7e f0 00 88 	store_32 s3, 60(sp)
   16248:	9e e0 00 88 	store_32 s4, 56(sp)
   1624c:	be d0 00 88 	store_32 s5, 52(sp)
   16250:	fe c0 00 88 	store_32 s7, 48(sp)
   16254:	1e b1 00 88 	store_32 s8, 44(sp)
   16258:	3e a1 00 88 	store_32 s9, 40(sp)
   1625c:	66 00 00 f4 	bnz s6, 12 <__udivmoddi4+0x884>
   16260:	1e c0 00 a8 	load_32 s0, 48(sp)
   16264:	1e a0 00 88 	store_32 s0, 40(sp)
   16268:	1e a0 00 a8 	load_32 s0, 40(sp)
   1626c:	3e 00 01 a8 	load_32 s1, 64(sp)
   16270:	5e e0 00 a8 	load_32 s2, 56(sp)
   16274:	21 00 61 c0 	sub_i s1, s1, s2
   16278:	01 00 60 c0 	sub_i s0, s1, s0
   1627c:	3e f0 00 a8 	load_32 s1, 60(sp)
   16280:	5e d0 00 a8 	load_32 s2, 52(sp)
   16284:	61 00 61 c0 	sub_i s3, s1, s2
   16288:	83 fc ff 05 	add_i s4, s3, -1
   1628c:	64 80 81 c1 	cmplt_u s3, s4, s3
   16290:	be b0 00 a8 	load_32 s5, 44(sp)
   16294:	1e 90 00 88 	store_32 s0, 36(sp)
   16298:	9e 80 00 88 	store_32 s4, 32(sp)
   1629c:	be 70 00 88 	store_32 s5, 28(sp)
   162a0:	63 00 00 f4 	bnz s3, 12 <__udivmoddi4+0x8c8>
   162a4:	1e c0 00 a8 	load_32 s0, 48(sp)
   162a8:	1e 70 00 88 	store_32 s0, 28(sp)
   162ac:	1e 70 00 a8 	load_32 s0, 28(sp)
   162b0:	3e 80 00 a8 	load_32 s1, 32(sp)
   162b4:	41 fc ff 11 	cmpne_i s2, s1, -1
   162b8:	7e b0 00 a8 	load_32 s3, 44(sp)
   162bc:	1e 60 00 88 	store_32 s0, 24(sp)
   162c0:	7e 50 00 88 	store_32 s3, 20(sp)
   162c4:	62 00 00 f4 	bnz s2, 12 <__udivmoddi4+0x8ec>
   162c8:	1e 60 00 a8 	load_32 s0, 24(sp)
   162cc:	1e 50 00 88 	store_32 s0, 20(sp)
   162d0:	1e 50 00 a8 	load_32 s0, 20(sp)
   162d4:	3e 90 00 a8 	load_32 s1, 36(sp)
   162d8:	01 00 50 c0 	add_i s0, s1, s0
   162dc:	00 fc ff 05 	add_i s0, s0, -1
   162e0:	00 7c 00 09 	ashr s0, s0, 31
   162e4:	3e 80 01 05 	add_i s1, sp, 96
   162e8:	21 10 00 00 	or s1, s1, 4
   162ec:	01 00 00 88 	store_32 s0, (s1)
   162f0:	1e 80 01 88 	store_32 s0, 96(sp)
; carry = s & 1;
   162f4:	1e 80 01 a8 	load_32 s0, 96(sp)
   162f8:	00 04 00 01 	and s0, s0, 1
   162fc:	1e a0 01 88 	store_32 s0, 104(sp)
; r.all -= d.all & s;
   16300:	1e 10 01 a8 	load_32 s0, 68(sp)
   16304:	40 00 00 a8 	load_32 s2, (s0)
   16308:	7e 00 02 a8 	load_32 s3, 128(sp)
   1630c:	21 00 00 a8 	load_32 s1, (s1)
   16310:	9e 80 01 a8 	load_32 s4, 96(sp)
   16314:	22 80 10 c0 	and s1, s2, s1
   16318:	43 00 12 c0 	and s2, s3, s4
   1631c:	7e 20 01 a8 	load_32 s3, 72(sp)
   16320:	83 00 00 a8 	load_32 s4, (s3)
   16324:	be c0 01 a8 	load_32 s5, 112(sp)
   16328:	c5 00 81 c1 	cmplt_u s6, s5, s2
   1632c:	fe b0 00 a8 	load_32 s7, 44(sp)
   16330:	3e 40 00 88 	store_32 s1, 16(sp)
   16334:	5e 30 00 88 	store_32 s2, 12(sp)
   16338:	9e 20 00 88 	store_32 s4, 8(sp)
   1633c:	be 10 00 88 	store_32 s5, 4(sp)
   16340:	fe 00 00 88 	store_32 s7, (sp)
   16344:	66 00 00 f4 	bnz s6, 12 <__udivmoddi4+0x96c>
   16348:	1e c0 00 a8 	load_32 s0, 48(sp)
   1634c:	1e 00 00 88 	store_32 s0, (sp)
   16350:	1e 00 00 a8 	load_32 s0, (sp)
   16354:	3e 20 00 a8 	load_32 s1, 8(sp)
   16358:	5e 40 00 a8 	load_32 s2, 16(sp)
   1635c:	21 00 61 c0 	sub_i s1, s1, s2
   16360:	01 00 60 c0 	sub_i s0, s1, s0
   16364:	3e 10 00 a8 	load_32 s1, 4(sp)
   16368:	5e 30 00 a8 	load_32 s2, 12(sp)
   1636c:	61 00 61 c0 	sub_i s3, s1, s2
   16370:	9e 20 01 a8 	load_32 s4, 72(sp)
   16374:	04 00 00 88 	store_32 s0, (s4)
   16378:	7e c0 01 88 	store_32 s3, 112(sp)
; }
   1637c:	01 00 00 f6 	b 4 <__udivmoddi4+0x99c>
; for (; sr > 0; --sr)
   16380:	1e b0 01 a8 	load_32 s0, 108(sp)
   16384:	00 fc ff 05 	add_i s0, s0, -1
   16388:	1e b0 01 88 	store_32 s0, 108(sp)
   1638c:	83 ff ff f7 	b -500 <__udivmoddi4+0x7b4>
   16390:	1e e0 01 05 	add_i s0, sp, 120
; q.all = (q.all << 1) | carry;
   16394:	00 10 00 00 	or s0, s0, 4
   16398:	20 00 00 a8 	load_32 s1, (s0)
   1639c:	5e e0 01 a8 	load_32 s2, 120(sp)
   163a0:	62 7c 00 0a 	shr s3, s2, 31
   163a4:	21 04 00 0b 	shl s1, s1, 1
   163a8:	21 80 01 c0 	or s1, s1, s3
   163ac:	42 04 00 0b 	shl s2, s2, 1
   163b0:	7e a0 01 a8 	load_32 s3, 104(sp)
   163b4:	42 80 01 c0 	or s2, s2, s3
   163b8:	20 00 00 88 	store_32 s1, (s0)
   163bc:	5e e0 01 88 	store_32 s2, 120(sp)
; if (rem)
   163c0:	1e 70 02 a8 	load_32 s0, 156(sp)
   163c4:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0xa08>
   163c8:	01 00 00 f6 	b 4 <__udivmoddi4+0x9e8>
   163cc:	1e c0 01 05 	add_i s0, sp, 112
; *rem = r.all;
   163d0:	00 10 00 00 	or s0, s0, 4
   163d4:	00 00 00 a8 	load_32 s0, (s0)
   163d8:	3e c0 01 a8 	load_32 s1, 112(sp)
   163dc:	5e 70 02 a8 	load_32 s2, 156(sp)
   163e0:	02 10 00 88 	store_32 s0, 4(s2)
   163e4:	22 00 00 88 	store_32 s1, (s2)
   163e8:	01 00 00 f6 	b 4 <__udivmoddi4+0xa08>
   163ec:	1e e0 01 05 	add_i s0, sp, 120
; return q.all;
   163f0:	00 10 00 00 	or s0, s0, 4
   163f4:	00 00 00 a8 	load_32 s0, (s0)
   163f8:	3e e0 01 a8 	load_32 s1, 120(sp)
   163fc:	5e c0 02 05 	add_i s2, sp, 176
   16400:	42 10 00 00 	or s2, s2, 4
   16404:	02 00 00 88 	store_32 s0, (s2)
   16408:	3e c0 02 88 	store_32 s1, 176(sp)
   1640c:	01 00 00 f6 	b 4 <__udivmoddi4+0xa2c>
   16410:	1e c0 02 05 	add_i s0, sp, 176
; }
   16414:	00 10 00 00 	or s0, s0, 4
   16418:	20 00 00 a8 	load_32 s1, (s0)
   1641c:	1e c0 02 a8 	load_32 s0, 176(sp)
   16420:	fe f3 02 a8 	load_32 ra, 188(sp)
   16424:	de 03 03 05 	add_i sp, sp, 192
   16428:	1f 00 00 f0 	ret

000000000001642c __umoddi3:
; {
   1642c:	de 03 ff 05 	add_i sp, sp, -64
   16430:	fe f3 00 88 	store_32 ra, 60(sp)
   16434:	80 80 f1 c0 	move s4, s3
   16438:	a0 00 f1 c0 	move s5, s2
   1643c:	c0 80 f0 c0 	move s6, s1
   16440:	e0 00 f0 c0 	move s7, s0
   16444:	1e c1 00 05 	add_i s8, sp, 48
   16448:	08 11 00 00 	or s8, s8, 4
   1644c:	28 00 00 88 	store_32 s1, (s8)
   16450:	1e c0 00 88 	store_32 s0, 48(sp)
   16454:	1e a0 00 05 	add_i s0, sp, 40
   16458:	00 10 00 00 	or s0, s0, 4
   1645c:	60 00 00 88 	store_32 s3, (s0)
   16460:	5e a0 00 88 	store_32 s2, 40(sp)
; __udivmoddi4(a, b, &r);
   16464:	28 00 00 a8 	load_32 s1, (s8)
   16468:	5e c0 00 a8 	load_32 s2, 48(sp)
   1646c:	60 00 00 a8 	load_32 s3, (s0)
   16470:	1e a0 00 a8 	load_32 s0, 40(sp)
   16474:	1c 11 00 a8 	load_32 s8, 4(gp)
   16478:	3e 81 00 05 	add_i s9, sp, 32
   1647c:	1e 70 00 88 	store_32 s0, 28(sp)
   16480:	00 00 f1 c0 	move s0, s2
   16484:	5e 70 00 a8 	load_32 s2, 28(sp)
   16488:	9e 60 00 88 	store_32 s4, 24(sp)
   1648c:	80 80 f4 c0 	move s4, s9
   16490:	be 50 00 88 	store_32 s5, 20(sp)
   16494:	de 40 00 88 	store_32 s6, 16(sp)
   16498:	fe 30 00 88 	store_32 s7, 12(sp)
   1649c:	3e 21 00 88 	store_32 s9, 8(sp)
   164a0:	08 01 00 fc 	call s8
; return r;
   164a4:	5e 20 00 a8 	load_32 s2, 8(sp)
   164a8:	62 10 00 00 	or s3, s2, 4
   164ac:	63 00 00 a8 	load_32 s3, (s3)
   164b0:	9e 80 00 a8 	load_32 s4, 32(sp)
   164b4:	1e 10 00 88 	store_32 s0, 4(sp)
   164b8:	00 00 f2 c0 	move s0, s4
   164bc:	3e 00 00 88 	store_32 s1, (sp)
   164c0:	20 80 f1 c0 	move s1, s3
   164c4:	fe f3 00 a8 	load_32 ra, 60(sp)
   164c8:	de 03 01 05 	add_i sp, sp, 64
   164cc:	1f 00 00 f0 	ret

00000000000164d0 __umodsi3:
; {
   164d0:	de 03 ff 05 	add_i sp, sp, -64
   164d4:	fe f3 00 88 	store_32 ra, 60(sp)
   164d8:	40 80 f0 c0 	move s2, s1
   164dc:	60 00 f0 c0 	move s3, s0
   164e0:	1e e0 00 88 	store_32 s0, 56(sp)
   164e4:	3e d0 00 88 	store_32 s1, 52(sp)
; return a - __udivsi3(a, b) * b;
   164e8:	1e e0 00 a8 	load_32 s0, 56(sp)
   164ec:	3e d0 00 a8 	load_32 s1, 52(sp)
   164f0:	9c 00 00 a8 	load_32 s4, (gp)
   164f4:	1e c0 00 88 	store_32 s0, 48(sp)
   164f8:	5e b0 00 88 	store_32 s2, 44(sp)
   164fc:	7e a0 00 88 	store_32 s3, 40(sp)
   16500:	84 00 00 fc 	call s4
   16504:	3e d0 00 a8 	load_32 s1, 52(sp)
   16508:	00 80 70 c0 	mull_i s0, s0, s1
   1650c:	3e c0 00 a8 	load_32 s1, 48(sp)
   16510:	01 00 60 c0 	sub_i s0, s1, s0
   16514:	fe f3 00 a8 	load_32 ra, 60(sp)
   16518:	de 03 01 05 	add_i sp, sp, 64
   1651c:	1f 00 00 f0 	ret

0000000000016520 __udivsi3:
; __udivsi3:          move s4, 0              # Quotient
   16520:	80 00 00 0f 	move s4, 0
; cmplt_u s2, s0, s1      # dividend < divisor
   16524:	40 80 80 c1 	cmplt_u s2, s0, s1
; bnz s2, done            # If yes, result is zero, bail
   16528:	22 02 00 f4 	bnz s2, 68 <done>
; clz s2, s0              # Get dividend leading bits
   1652c:	40 00 c0 c0 	clz s2, s0
; clz s3, s1              # Get divisor leading bits
   16530:	60 80 c0 c0 	clz s3, s1
; sub_i s5, s3, s2        # Number of quotient bits
   16534:	a3 00 61 c0 	sub_i s5, s3, s2
; shl s1, s1, s5          # Shift divisor
   16538:	21 80 b2 c0 	shl s1, s1, s5

000000000001653c divide_loop:
; divide_loop:        cmpge_u s2, s0, s1      # Is current dividend > divisor
   1653c:	40 80 70 c1 	cmpge_u s2, s0, s1
; and s2, s2, 1           # Set only lowest bit
   16540:	42 04 00 01 	and s2, s2, 1
; or s4, s4, s2           # if true, quotient |= 1
   16544:	84 00 01 c0 	or s4, s4, s2
; shl s2, s2, 31          # Turn into 32-bit mask
   16548:	42 7c 00 0b 	shl s2, s2, 31
; ashr s2, s2, 31
   1654c:	42 7c 00 09 	ashr s2, s2, 31
; and s3, s1, s2          # If the value is true, subtract amt = divisor
   16550:	61 00 11 c0 	and s3, s1, s2
; sub_i s0, s0, s3        # dividend -= divisor
   16554:	00 80 61 c0 	sub_i s0, s0, s3
; bz s5, done             # If no more quotient bits, bail
   16558:	a5 00 00 f2 	bz s5, 20 <done>
; sub_i s5, s5, 1         # Subtract 1 from quotient bits
   1655c:	a5 04 00 06 	sub_i s5, s5, 1
; shr s1, s1, 1           # Shift divisor right
   16560:	21 04 00 0a 	shr s1, s1, 1
; shl s4, s4, 1           # Shift quotient left
   16564:	84 04 00 0b 	shl s4, s4, 1
; b divide_loop
   16568:	f5 ff ff f7 	b -44 <divide_loop>

000000000001656c done:
; done:               move s0, s4             # Move quotient to return value
   1656c:	00 00 f2 c0 	move s0, s4
; re
   16570:	1f 00 00 f0 	ret

0000000000016574 _start:
   16574:	00 00 00 ac 	getcr s0, 0
   16578:	00 38 00 0b 	shl s0, s0, 14
   1657c:	c0 23 00 4f 	movehi sp, 256
   16580:	de 03 60 c0 	sub_i sp, sp, s0
   16584:	8b 03 00 4f 	movehi gp, 11
   16588:	9c 13 40 00 	or gp, gp, 4100
   1658c:	60 01 00 f4 	bnz s0, 44 <do_main>
   16590:	0b 03 00 4f 	movehi s24, 11
   16594:	18 03 40 00 	or s24, s24, 4096
   16598:	2b 03 00 4f 	movehi s25, 11
   1659c:	39 13 40 00 	or s25, s25, 4100

00000000000165a0 init_loop:
   165a0:	18 80 0c c1 	cmpeq_i s0, s24, s25
   165a4:	a0 00 00 f4 	bnz s0, 20 <do_main>
   165a8:	18 00 00 a8 	load_32 s0, (s24)
   165ac:	18 13 00 05 	add_i s24, s24, 4
   165b0:	00 00 00 fc 	call s0
   165b4:	fb ff ff f7 	b -20 <init_loop>

00000000000165b8 do_main:
   165b8:	00 00 00 0f 	move s0, 0
   165bc:	91 be ff f9 	call -67004 <main>
   165c0:	0b 00 00 4f 	movehi s0, 11
   165c4:	00 d0 17 00 	or s0, s0, 1524
   165c8:	20 00 00 aa 	load_sync s1, (s0)
   165cc:	e1 ff ff f5 	bnz s1, -4 <do_main+0x10>
   165d0:	20 04 00 0f 	move s1, 1
   165d4:	20 00 00 8a 	store_sync s1, (s0)  
   165d8:	81 ff ff f3 	bz s1, -16 <do_main+0x10>
   165dc:	22 f6 ff f9 	call -10104 <call_atexit_functions>
   165e0:	00 10 00 0f 	move s0, 4
   165e4:	f5 f6 ff f9 	call -9260 <_write_uart>
   165e8:	00 fc ff 0f 	move s0, -1
   165ec:	14 00 00 8c 	setcr s0, 20
   165f0:	00 00 00 f6 	b 0 <do_main+0x38>

00000000000165f4 exit_flag:
   165f4:	00 00 00 00 	nop
