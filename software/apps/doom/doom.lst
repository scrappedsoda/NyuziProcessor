
/home/glinsi/git/NyuziProcessor/software/apps/doom/doom:	file format ELF32-nyuzi

Disassembly of section .text:
000000000000e000 I_Tactile:
    e000:	1f 00 00 f0 	ret

000000000000e004 I_BaseTiccmd:
    e004:	1a 04 00 4f 	movehi s0, 58
    e008:	00 d0 16 00 	or s0, s0, 1460
    e00c:	1f 00 00 f0 	ret

000000000000e010 I_GetHeapSize:
    e010:	0b 04 00 4f 	movehi s0, 43
    e014:	00 80 41 00 	or s0, s0, 4192
    e018:	00 00 00 a8 	load_32 s0, (s0)
    e01c:	00 50 00 0b 	shl s0, s0, 20
    e020:	1f 00 00 f0 	ret

000000000000e024 I_ZoneBase:
    e024:	de 03 ff 05 	add_i sp, sp, -64
    e028:	fe f3 00 88 	store_32 ra, 60(sp)
    e02c:	2b 04 00 4f 	movehi s1, 43
    e030:	21 80 41 00 	or s1, s1, 4192
    e034:	21 00 00 a8 	load_32 s1, (s1)
    e038:	21 50 00 0b 	shl s1, s1, 20
    e03c:	20 00 00 88 	store_32 s1, (s0)
    e040:	00 80 f0 c0 	move s0, s1
    e044:	7f fc 00 f8 	call 258556 <malloc>
    e048:	fe f3 00 a8 	load_32 ra, 60(sp)
    e04c:	de 03 01 05 	add_i sp, sp, 64
    e050:	1f 00 00 f0 	ret

000000000000e054 I_GetTime:
    e054:	de 03 ff 05 	add_i sp, sp, -64
    e058:	fe f3 00 88 	store_32 ra, 60(sp)
    e05c:	20 0f 01 f8 	call 277632 <clock>
    e060:	3b 64 49 4f 	movehi s1, 150331
    e064:	fe f3 00 a8 	load_32 ra, 60(sp)
    e068:	21 9c 2f 00 	or s1, s1, 3047
    e06c:	00 80 80 c0 	mulh_u s0, s0, s1
    e070:	00 30 00 0a 	shr s0, s0, 12
    e074:	de 03 01 05 	add_i sp, sp, 64
    e078:	1f 00 00 f0 	ret

000000000000e07c I_Init:
    e07c:	de 03 ff 05 	add_i sp, sp, -64
    e080:	fe f3 00 88 	store_32 ra, 60(sp)
    e084:	4d 00 00 f8 	call 308 <I_InitSound>
    e088:	fe f3 00 a8 	load_32 ra, 60(sp)
    e08c:	de 03 01 05 	add_i sp, sp, 64
    e090:	1f 00 00 f0 	ret

000000000000e094 I_Quit:
    e094:	de 03 ff 05 	add_i sp, sp, -64
    e098:	fe f3 00 88 	store_32 ra, 60(sp)
    e09c:	77 16 00 f8 	call 23004 <D_QuitNetGame>
    e0a0:	45 00 00 f8 	call 276 <I_ShutdownSound>
    e0a4:	47 00 00 f8 	call 284 <I_ShutdownMusic>
    e0a8:	6f 37 00 f8 	call 56764 <M_SaveDefaults>
    e0ac:	53 00 00 f8 	call 332 <I_ShutdownGraphics>
    e0b0:	00 00 00 0f 	move s0, 0
    e0b4:	b8 14 01 f8 	call 283360 <exit>

000000000000e0b8 I_WaitVBL:
    e0b8:	1f 00 00 f0 	ret

000000000000e0bc I_BeginRead:
    e0bc:	1f 00 00 f0 	ret

000000000000e0c0 I_EndRead:
    e0c0:	1f 00 00 f0 	ret

000000000000e0c4 I_AllocLow:
    e0c4:	de 03 ff 05 	add_i sp, sp, -64
    e0c8:	1e f3 00 88 	store_32 s24, 60(sp)
    e0cc:	3e e3 00 88 	store_32 s25, 56(sp)
    e0d0:	fe d3 00 88 	store_32 ra, 52(sp)
    e0d4:	00 03 f0 c0 	move s24, s0
    e0d8:	5a fc 00 f8 	call 258408 <malloc>
    e0dc:	20 03 f0 c0 	move s25, s0
    e0e0:	20 00 00 0f 	move s1, 0
    e0e4:	40 00 fc c0 	move s2, s24
    e0e8:	6f 0e 01 f8 	call 276924 <memset>
    e0ec:	00 80 fc c0 	move s0, s25
    e0f0:	fe d3 00 a8 	load_32 ra, 52(sp)
    e0f4:	3e e3 00 a8 	load_32 s25, 56(sp)
    e0f8:	1e f3 00 a8 	load_32 s24, 60(sp)
    e0fc:	de 03 01 05 	add_i sp, sp, 64
    e100:	1f 00 00 f0 	ret

000000000000e104 I_Error:
    e104:	de 03 ff 05 	add_i sp, sp, -64
    e108:	1e f3 00 88 	store_32 s24, 60(sp)
    e10c:	3e e3 00 88 	store_32 s25, 56(sp)
    e110:	fe d3 00 88 	store_32 ra, 52(sp)
    e114:	1a 04 00 4f 	movehi s0, 58
    e118:	1e 03 01 a8 	load_32 s24, 64(sp)
    e11c:	20 1c 00 0f 	move s1, 7
    e120:	40 04 00 0f 	move s2, 1
    e124:	20 93 16 00 	or s25, s0, 1444
    e128:	1e 10 01 05 	add_i s0, sp, 68
    e12c:	1e c0 00 88 	store_32 s0, 48(sp)
    e130:	01 00 00 4f 	movehi s0, 1
    e134:	79 00 00 a8 	load_32 s3, (s25)
    e138:	00 78 33 00 	or s0, s0, 3294
    e13c:	8f 10 01 f8 	call 279100 <fwrite>
    e140:	19 00 00 a8 	load_32 s0, (s25)
    e144:	5e c0 00 a8 	load_32 s2, 48(sp)
    e148:	20 00 fc c0 	move s1, s24
    e14c:	ff 11 01 f8 	call 280572 <vfprintf>
    e150:	39 00 00 a8 	load_32 s1, (s25)
    e154:	00 28 00 0f 	move s0, 10
    e158:	62 0f 01 f8 	call 277896 <fputc>
    e15c:	1a 04 00 4f 	movehi s0, 58
    e160:	00 40 6f 00 	or s0, s0, 7120
    e164:	00 00 00 a8 	load_32 s0, (s0)
    e168:	40 00 00 f2 	bz s0, 8 <I_Error+0x6c>
    e16c:	7e 25 00 f8 	call 38392 <G_CheckDemoStatus>
    e170:	42 16 00 f8 	call 22792 <D_QuitNetGame>
    e174:	21 00 00 f8 	call 132 <I_ShutdownGraphics>
    e178:	00 fc ff 0f 	move s0, -1
    e17c:	86 14 01 f8 	call 283160 <exit>

000000000000e180 I_SetChannels:
    e180:	1f 00 00 f0 	ret

000000000000e184 I_SetSfxVolume:
    e184:	1f 00 00 f0 	ret

000000000000e188 I_SetMusicVolume:
    e188:	1f 00 00 f0 	ret

000000000000e18c I_GetSfxLumpNum:
    e18c:	00 00 00 0f 	move s0, 0
    e190:	1f 00 00 f0 	ret

000000000000e194 I_StartSound:
    e194:	00 00 00 0f 	move s0, 0
    e198:	1f 00 00 f0 	ret

000000000000e19c I_StopSound:
    e19c:	1f 00 00 f0 	ret

000000000000e1a0 I_SoundIsPlaying:
    e1a0:	00 00 00 0f 	move s0, 0
    e1a4:	1f 00 00 f0 	ret

000000000000e1a8 I_UpdateSound:
    e1a8:	1f 00 00 f0 	ret

000000000000e1ac I_SubmitSound:
    e1ac:	1f 00 00 f0 	ret

000000000000e1b0 I_UpdateSoundParams:
    e1b0:	1f 00 00 f0 	ret

000000000000e1b4 I_ShutdownSound:
    e1b4:	1f 00 00 f0 	ret

000000000000e1b8 I_InitSound:
    e1b8:	1f 00 00 f0 	ret

000000000000e1bc I_InitMusic:
    e1bc:	1f 00 00 f0 	ret

000000000000e1c0 I_ShutdownMusic:
    e1c0:	1f 00 00 f0 	ret

000000000000e1c4 I_PlaySong:
    e1c4:	1f 00 00 f0 	ret

000000000000e1c8 I_PauseSong:
    e1c8:	1f 00 00 f0 	ret

000000000000e1cc I_ResumeSong:
    e1cc:	1f 00 00 f0 	ret

000000000000e1d0 I_StopSong:
    e1d0:	1f 00 00 f0 	ret

000000000000e1d4 I_UnRegisterSong:
    e1d4:	1f 00 00 f0 	ret

000000000000e1d8 I_RegisterSong:
    e1d8:	00 00 00 0f 	move s0, 0
    e1dc:	1f 00 00 f0 	ret

000000000000e1e0 I_QrySongPlaying:
    e1e0:	00 04 00 0f 	move s0, 1
    e1e4:	1f 00 00 f0 	ret

000000000000e1e8 I_HandleSoundTimer:
    e1e8:	1f 00 00 f0 	ret

000000000000e1ec I_SoundSetTimer:
    e1ec:	00 00 00 0f 	move s0, 0
    e1f0:	1f 00 00 f0 	ret

000000000000e1f4 I_SoundDelTimer:
    e1f4:	1f 00 00 f0 	ret

000000000000e1f8 I_ShutdownGraphics:
    e1f8:	1f 00 00 f0 	ret

000000000000e1fc I_StartFrame:
    e1fc:	1f 00 00 f0 	ret

000000000000e200 I_GetEvent:
    e200:	1f 00 00 f0 	ret

000000000000e204 I_StartTic:
    e204:	de 03 ff 05 	add_i sp, sp, -64
    e208:	fe f3 00 88 	store_32 ra, 60(sp)
    e20c:	dc 13 01 f8 	call 282480 <poll_keyboard>
    e210:	20 fc ff 10 	cmpeq_i s1, s0, -1
    e214:	81 07 00 f4 	bnz s1, 240 <I_StartTic+0x100>
    e218:	27 00 00 4f 	movehi s1, 7
    e21c:	21 fc 7f 00 	or s1, s1, 8191
    e220:	20 80 10 c0 	and s1, s0, s1
    e224:	21 e0 ff 05 	add_i s1, s1, -8
    e228:	41 2c 02 16 	cmpgt_u s2, s1, 139
    e22c:	42 02 00 f4 	bnz s2, 72 <I_StartTic+0x70>
    e230:	43 00 00 4f 	movehi s2, 3
    e234:	21 08 00 0b 	shl s1, s1, 2
    e238:	42 00 12 00 	or s2, s2, 1152
    e23c:	21 00 51 c0 	add_i s1, s1, s2
    e240:	40 ec 02 0f 	move s2, 187
    e244:	21 00 00 a8 	load_32 s1, (s1)
    e248:	01 00 00 f0 	b s1
    e24c:	40 d8 02 0f 	move s2, 182
    e250:	24 00 00 f6 	b 144 <I_StartTic+0xdc>
    e254:	40 e0 02 0f 	move s2, 184
    e258:	22 00 00 f6 	b 136 <I_StartTic+0xdc>
    e25c:	40 fc 01 0f 	move s2, 127
    e260:	20 00 00 f6 	b 128 <I_StartTic+0xdc>
    e264:	40 24 00 0f 	move s2, 9
    e268:	1e 00 00 f6 	b 120 <I_StartTic+0xdc>
    e26c:	40 34 00 0f 	move s2, 13
    e270:	1c 00 00 f6 	b 112 <I_StartTic+0xdc>
    e274:	40 fc 03 01 	and s2, s0, 255
    e278:	1a 00 00 f6 	b 104 <I_StartTic+0xdc>
    e27c:	40 6c 00 0f 	move s2, 27
    e280:	18 00 00 f6 	b 96 <I_StartTic+0xdc>
    e284:	40 f0 02 0f 	move s2, 188
    e288:	16 00 00 f6 	b 88 <I_StartTic+0xdc>
    e28c:	40 f4 02 0f 	move s2, 189
    e290:	14 00 00 f6 	b 80 <I_StartTic+0xdc>
    e294:	40 f8 02 0f 	move s2, 190
    e298:	12 00 00 f6 	b 72 <I_StartTic+0xdc>
    e29c:	40 fc 02 0f 	move s2, 191
    e2a0:	10 00 00 f6 	b 64 <I_StartTic+0xdc>
    e2a4:	40 00 03 0f 	move s2, 192
    e2a8:	0e 00 00 f6 	b 56 <I_StartTic+0xdc>
    e2ac:	40 04 03 0f 	move s2, 193
    e2b0:	0c 00 00 f6 	b 48 <I_StartTic+0xdc>
    e2b4:	40 08 03 0f 	move s2, 194
    e2b8:	0a 00 00 f6 	b 40 <I_StartTic+0xdc>
    e2bc:	40 0c 03 0f 	move s2, 195
    e2c0:	08 00 00 f6 	b 32 <I_StartTic+0xdc>
    e2c4:	40 b8 02 0f 	move s2, 174
    e2c8:	06 00 00 f6 	b 24 <I_StartTic+0xdc>
    e2cc:	40 b0 02 0f 	move s2, 172
    e2d0:	04 00 00 f6 	b 16 <I_StartTic+0xdc>
    e2d4:	40 b4 02 0f 	move s2, 173
    e2d8:	02 00 00 f6 	b 8 <I_StartTic+0xdc>
    e2dc:	40 bc 02 0f 	move s2, 175
    e2e0:	00 4c 00 0a 	shr s0, s0, 19
    e2e4:	3e a0 00 05 	add_i s1, sp, 40
    e2e8:	00 fc ff 03 	xor s0, s0, -1
    e2ec:	61 10 00 00 	or s3, s1, 4
    e2f0:	00 04 00 01 	and s0, s0, 1
    e2f4:	43 00 00 88 	store_32 s2, (s3)
    e2f8:	1e a0 00 88 	store_32 s0, 40(sp)
    e2fc:	00 80 f0 c0 	move s0, s1
    e300:	38 08 00 f8 	call 8416 <D_PostEvent>
    e304:	fe f3 00 a8 	load_32 ra, 60(sp)
    e308:	de 03 01 05 	add_i sp, sp, 64
    e30c:	1f 00 00 f0 	ret

000000000000e310 I_UpdateNoBlit:
    e310:	1f 00 00 f0 	ret

000000000000e314 I_FinishUpdate:
    e314:	de 03 fe 05 	add_i sp, sp, -128
    e318:	1e f3 01 88 	store_32 s24, 124(sp)
    e31c:	3e e3 01 88 	store_32 s25, 120(sp)
    e320:	5e d3 01 88 	store_32 s26, 116(sp)
    e324:	7e c3 01 88 	store_32 s27, 112(sp)
    e328:	fe b3 01 88 	store_32 ra, 108(sp)
    e32c:	00 0c 00 4f 	movehi s0, 96
    e330:	20 0c 00 4f 	movehi s1, 96
    e334:	40 0c 00 4f 	movehi s2, 96
    e338:	00 00 0b 00 	or s0, s0, 704
    e33c:	21 20 02 00 	or s1, s1, 136
    e340:	63 00 00 4f 	movehi s3, 3
    e344:	20 01 00 a8 	load_32 s9, (s0)
    e348:	a3 00 00 4f 	movehi s5, 3
    e34c:	e3 00 00 4f 	movehi s7, 3
    e350:	01 00 00 a8 	load_32 s0, (s1)
    e354:	43 01 00 4f 	movehi s10, 3
    e358:	83 01 00 4f 	movehi s12, 3
    e35c:	c3 01 00 4f 	movehi s14, 3
    e360:	01 02 00 4f 	movehi s16, 1
    e364:	20 00 00 0f 	move s1, 0
    e368:	42 10 0b 00 	or s2, s2, 708
    e36c:	63 00 1b 00 	or s3, s3, 1728
    e370:	80 30 00 0f 	move s4, 12
    e374:	a5 00 1c 00 	or s5, s5, 1792
    e378:	c0 3c 00 0f 	move s6, 15
    e37c:	e7 00 1d 00 	or s7, s7, 1856
    e380:	00 fd 00 0f 	move s8, 63
    e384:	4a 01 1e 00 	or s10, s10, 1920
    e388:	60 fd 03 0f 	move s11, 255
    e38c:	8c 01 1f 00 	or s12, s12, 1984
    e390:	a0 fd 0f 0f 	move s13, 1023
    e394:	ce 01 20 00 	or s14, s14, 2048
    e398:	e0 fd 3f 0f 	move s15, 4095
    e39c:	10 fe 7f 00 	or s16, s16, 8191
    e3a0:	20 82 f0 c0 	move s17, s1
    e3a4:	40 82 f0 c0 	move s18, s1
    e3a8:	60 02 00 a0 	load_u8 s19, (s0)
    e3ac:	52 22 00 05 	add_i s18, s18, 8
    e3b0:	73 0a 00 0b 	shl s19, s19, 2
    e3b4:	62 82 59 c0 	add_i s19, s2, s19
    e3b8:	73 02 00 a8 	load_32 s19, (s19)
    e3bc:	80 06 00 a0 	load_u8 s20, 1(s0)
    e3c0:	60 80 f9 c4 	move v3, s19
    e3c4:	94 0a 00 0b 	shl s20, s20, 2
    e3c8:	82 02 5a c0 	add_i s20, s2, s20
    e3cc:	94 02 00 a8 	load_32 s20, (s20)
    e3d0:	03 00 00 ae 	load_v v0, (s3)
    e3d4:	a0 0a 00 a0 	load_u8 s21, 2(s0)
    e3d8:	a0 00 fa c4 	move v5, s20
    e3dc:	63 00 d0 d0 	shuffle v3, v3, v0
    e3e0:	b5 0a 00 0b 	shl s21, s21, 2
    e3e4:	a2 82 5a c0 	add_i s21, s2, s21
    e3e8:	65 10 d0 d4 	shuffle_mask v3, s4, v5, v0
    e3ec:	b5 02 00 a8 	load_32 s21, (s21)
    e3f0:	25 00 00 ae 	load_v v1, (s5)
    e3f4:	c0 0e 00 a0 	load_u8 s22, 3(s0)
    e3f8:	c0 80 fa c4 	move v6, s21
    e3fc:	d6 0a 00 0b 	shl s22, s22, 2
    e400:	c2 02 5b c0 	add_i s22, s2, s22
    e404:	06 80 d0 d0 	shuffle v0, v6, v1
    e408:	03 98 d0 d4 	shuffle_mask v0, s6, v3, v1
    e40c:	d6 02 00 a8 	load_32 s22, (s22)
    e410:	47 00 00 ae 	load_v v2, (s7)
    e414:	e0 12 00 a0 	load_u8 s23, 4(s0)
    e418:	e0 00 fb c4 	move v7, s22
    e41c:	f7 0a 00 0b 	shl s23, s23, 2
    e420:	e2 82 5b c0 	add_i s23, s2, s23
    e424:	27 00 d1 d0 	shuffle v1, v7, v2
    e428:	20 20 d1 d4 	shuffle_mask v1, s8, v0, v2
    e42c:	77 02 00 a8 	load_32 s19, (s23)
    e430:	8a 00 00 ae 	load_v v4, (s10)
    e434:	e0 16 00 a0 	load_u8 s23, 5(s0)
    e438:	00 81 f9 c4 	move v8, s19
    e43c:	97 0a 00 0b 	shl s20, s23, 2
    e440:	82 02 5a c0 	add_i s20, s2, s20
    e444:	08 00 d2 d0 	shuffle v0, v8, v4
    e448:	01 2c d2 d4 	shuffle_mask v0, s11, v1, v4
    e44c:	74 02 00 a8 	load_32 s19, (s20)
    e450:	2c 01 00 ae 	load_v v9, (s12)
    e454:	80 1a 00 a0 	load_u8 s20, 6(s0)
    e458:	60 80 f9 c4 	move v3, s19
    e45c:	94 0a 00 0b 	shl s20, s20, 2
    e460:	82 02 5a c0 	add_i s20, s2, s20
    e464:	23 80 d4 d0 	shuffle v1, v3, v9
    e468:	20 b4 d4 d4 	shuffle_mask v1, s13, v0, v9
    e46c:	74 02 00 a8 	load_32 s19, (s20)
    e470:	ae 00 00 ae 	load_v v5, (s14)
    e474:	80 1e 00 a0 	load_u8 s20, 7(s0)
    e478:	00 20 00 05 	add_i s0, s0, 8
    e47c:	40 80 f9 c4 	move v2, s19
    e480:	94 0a 00 0b 	shl s20, s20, 2
    e484:	82 02 5a c0 	add_i s20, s2, s20
    e488:	02 80 d2 d0 	shuffle v0, v2, v5
    e48c:	01 bc d2 d4 	shuffle_mask v0, s15, v1, v5
    e490:	94 02 00 a8 	load_32 s20, (s20)
    e494:	60 82 f4 c0 	move s19, s9
    e498:	33 01 28 05 	add_i s9, s19, 2560
    e49c:	20 00 fa c4 	move v1, s20
    e4a0:	20 40 f0 d4 	move_mask v1, s16, v0
    e4a4:	33 00 00 8e 	store_v v1, (s19)
    e4a8:	33 00 28 8e 	store_v v1, 2560(s19)
    e4ac:	13 00 00 e4 	dflush s19
    e4b0:	09 00 00 e4 	dflush s9
    e4b4:	92 02 05 18 	cmplt_u s20, s18, 320
    e4b8:	33 01 01 05 	add_i s9, s19, 64
    e4bc:	74 f7 ff f5 	bnz s20, -276 <I_FinishUpdate+0x94>
    e4c0:	31 06 00 05 	add_i s17, s17, 1
    e4c4:	33 01 29 05 	add_i s9, s19, 2624
    e4c8:	51 22 03 18 	cmplt_u s18, s17, 200
    e4cc:	d2 f6 ff f5 	bnz s18, -296 <I_FinishUpdate+0x90>
    e4d0:	00 0c 00 4f 	movehi s0, 96
    e4d4:	20 13 1b 00 	or s25, s0, 1732
    e4d8:	19 00 00 a8 	load_32 s0, (s25)
    e4dc:	00 04 00 05 	add_i s0, s0, 1
    e4e0:	19 00 00 88 	store_32 s0, (s25)
    e4e4:	20 50 00 11 	cmpne_i s1, s0, 20
    e4e8:	41 06 00 f4 	bnz s1, 200 <I_FinishUpdate+0x29c>
    e4ec:	fc 0d 01 f8 	call 276464 <clock>
    e4f0:	20 0c 00 4f 	movehi s1, 96
    e4f4:	60 03 00 0f 	move s27, 0
    e4f8:	41 23 1b 00 	or s26, s1, 1736
    e4fc:	3a 00 00 a8 	load_32 s1, (s26)
    e500:	00 03 f0 c0 	move s24, s0
    e504:	38 80 60 c0 	sub_i s1, s24, s1
    e508:	00 80 a0 c2 	itof s0, s1
    e50c:	21 00 00 14 	cmplt_i s1, s1, 0
    e510:	61 00 00 f4 	bnz s1, 12 <I_FinishUpdate+0x208>
    e514:	20 80 fd c0 	move s1, s27
    e518:	02 00 00 f6 	b 8 <I_FinishUpdate+0x20c>
    e51c:	20 10 00 0f 	move s1, 4
    e520:	43 00 00 4f 	movehi s2, 3
    e524:	63 00 00 4f 	movehi s3, 3
    e528:	42 00 21 00 	or s2, s2, 2112
    e52c:	22 80 50 c0 	add_i s1, s2, s1
    e530:	43 80 21 00 	or s2, s3, 2144
    e534:	63 00 00 4f 	movehi s3, 3
    e538:	21 00 00 a8 	load_32 s1, (s1)
    e53c:	42 00 00 a8 	load_32 s2, (s2)
    e540:	63 50 21 00 	or s3, s3, 2132
    e544:	00 80 00 c2 	add_f s0, s0, s1
    e548:	80 00 c1 c1 	reciprocal s4, s2
    e54c:	63 00 00 a8 	load_32 s3, (s3)
    e550:	a4 00 21 c2 	mul_f s5, s4, s2
    e554:	a3 80 12 c2 	sub_f s5, s3, s5
    e558:	84 80 22 c2 	mul_f s4, s4, s5
    e55c:	24 00 21 c2 	mul_f s1, s4, s2
    e560:	59 00 00 a8 	load_32 s2, (s25)
    e564:	23 80 10 c2 	sub_f s1, s3, s1
    e568:	24 80 20 c2 	mul_f s1, s4, s1
    e56c:	00 80 20 c2 	mul_f s0, s0, s1
    e570:	40 00 a1 c2 	itof s2, s2
    e574:	20 00 c0 c1 	reciprocal s1, s0
    e578:	81 00 20 c2 	mul_f s4, s1, s0
    e57c:	83 00 12 c2 	sub_f s4, s3, s4
    e580:	21 00 22 c2 	mul_f s1, s1, s4
    e584:	01 00 20 c2 	mul_f s0, s1, s0
    e588:	03 00 10 c2 	sub_f s0, s3, s0
    e58c:	01 00 20 c2 	mul_f s0, s1, s0
    e590:	22 00 00 4f 	movehi s1, 2
    e594:	02 00 20 c2 	mul_f s0, s2, s0
    e598:	21 e4 19 00 	or s1, s1, 1657
    e59c:	3e 00 00 88 	store_32 s1, (sp)
    e5a0:	1e 10 00 88 	store_32 s0, 4(sp)
    e5a4:	0c 0e 01 f8 	call 276528 <printf>
    e5a8:	79 03 00 88 	store_32 s27, (s25)
    e5ac:	1a 03 00 88 	store_32 s24, (s26)
    e5b0:	fe b3 01 a8 	load_32 ra, 108(sp)
    e5b4:	7e c3 01 a8 	load_32 s27, 112(sp)
    e5b8:	5e d3 01 a8 	load_32 s26, 116(sp)
    e5bc:	3e e3 01 a8 	load_32 s25, 120(sp)
    e5c0:	1e f3 01 a8 	load_32 s24, 124(sp)
    e5c4:	de 03 02 05 	add_i sp, sp, 128
    e5c8:	1f 00 00 f0 	ret

000000000000e5cc I_ReadScreen:
    e5cc:	de 03 ff 05 	add_i sp, sp, -64
    e5d0:	fe f3 00 88 	store_32 ra, 60(sp)
    e5d4:	20 0c 00 4f 	movehi s1, 96
    e5d8:	47 00 00 4f 	movehi s2, 7
    e5dc:	21 20 02 00 	or s1, s1, 136
    e5e0:	42 00 68 00 	or s2, s2, 6656
    e5e4:	21 00 00 a8 	load_32 s1, (s1)
    e5e8:	c7 0d 01 f8 	call 276252 <memcpy>
    e5ec:	fe f3 00 a8 	load_32 ra, 60(sp)
    e5f0:	de 03 01 05 	add_i sp, sp, 64
    e5f4:	1f 00 00 f0 	ret

000000000000e5f8 I_SetPalette:
    e5f8:	20 0c 00 4f 	movehi s1, 96
    e5fc:	74 04 00 4f 	movehi s3, 52
    e600:	80 0c 00 4f 	movehi s4, 96
    e604:	21 70 02 00 	or s1, s1, 156
    e608:	63 30 2f 00 	or s3, s3, 3020
    e60c:	84 10 0b 00 	or s4, s4, 708
    e610:	41 00 00 a8 	load_32 s2, (s1)
    e614:	20 00 00 0f 	move s1, 0
    e618:	42 20 00 0b 	shl s2, s2, 8
    e61c:	43 00 51 c0 	add_i s2, s3, s2
    e620:	60 00 ff 4f 	movehi s3, 522240
    e624:	a0 00 00 a0 	load_u8 s5, (s0)
    e628:	a2 80 52 c0 	add_i s5, s2, s5
    e62c:	a5 00 00 a0 	load_u8 s5, (s5)
    e630:	c0 04 00 a0 	load_u8 s6, 1(s0)
    e634:	c2 00 53 c0 	add_i s6, s2, s6
    e638:	c6 00 00 a0 	load_u8 s6, (s6)
    e63c:	e0 08 00 a0 	load_u8 s7, 2(s0)
    e640:	00 0c 00 05 	add_i s0, s0, 3
    e644:	c6 20 00 0b 	shl s6, s6, 8
    e648:	e2 80 53 c0 	add_i s7, s2, s7
    e64c:	a6 80 02 c0 	or s5, s6, s5
    e650:	e7 00 00 a0 	load_u8 s7, (s7)
    e654:	c7 40 00 0b 	shl s6, s7, 16
    e658:	a5 00 03 c0 	or s5, s5, s6
    e65c:	c1 08 00 0b 	shl s6, s1, 2
    e660:	21 04 00 05 	add_i s1, s1, 1
    e664:	c4 00 53 c0 	add_i s6, s4, s6
    e668:	a5 80 01 c0 	or s5, s5, s3
    e66c:	e1 00 04 18 	cmplt_u s7, s1, 256
    e670:	a6 00 00 88 	store_32 s5, (s6)
    e674:	87 fd ff f5 	bnz s7, -80 <I_SetPalette+0x2c>
    e678:	1f 00 00 f0 	ret

000000000000e67c I_InitGraphics:
    e67c:	de 03 ff 05 	add_i sp, sp, -64
    e680:	fe f3 00 88 	store_32 ra, 60(sp)
    e684:	00 04 00 0f 	move s0, 1
    e688:	85 17 01 f8 	call 286228 <init_vga>
    e68c:	20 0c 00 4f 	movehi s1, 96
    e690:	21 00 0b 00 	or s1, s1, 704
    e694:	01 00 00 88 	store_32 s0, (s1)
    e698:	fe f3 00 a8 	load_32 ra, 60(sp)
    e69c:	de 03 01 05 	add_i sp, sp, 64
    e6a0:	1f 00 00 f0 	ret

000000000000e6a4 I_InitNetwork:
    e6a4:	de 03 ff 05 	add_i sp, sp, -64
    e6a8:	1e f3 00 88 	store_32 s24, 60(sp)
    e6ac:	3e e3 00 88 	store_32 s25, 56(sp)
    e6b0:	fe d3 00 88 	store_32 ra, 52(sp)
    e6b4:	00 30 02 0f 	move s0, 140
    e6b8:	e2 fa 00 f8 	call 256904 <malloc>
    e6bc:	3a 04 00 4f 	movehi s1, 58
    e6c0:	00 03 f0 c0 	move s24, s0
    e6c4:	20 03 00 0f 	move s25, 0
    e6c8:	21 e0 5b 00 	or s1, s1, 5880
    e6cc:	18 10 00 05 	add_i s0, s24, 4
    e6d0:	40 20 02 0f 	move s2, 136
    e6d4:	01 03 00 88 	store_32 s24, (s1)
    e6d8:	20 80 fc c0 	move s1, s25
    e6dc:	f2 0c 01 f8 	call 275400 <memset>
    e6e0:	1b 04 00 4f 	movehi s0, 59
    e6e4:	22 34 12 4f 	movehi s1, 37282
    e6e8:	00 c0 01 00 	or s0, s0, 112
    e6ec:	20 03 00 88 	store_32 s25, (s0)
    e6f0:	01 e0 59 00 	or s0, s1, 5752
    e6f4:	18 00 00 88 	store_32 s0, (s24)
    e6f8:	00 04 00 0f 	move s0, 1
    e6fc:	18 30 00 86 	store_16 s0, 12(s24)
    e700:	08 00 00 4f 	movehi s0, 8
    e704:	38 4b 00 86 	store_16 s25, 18(s24)
    e708:	18 70 00 88 	store_32 s0, 28(s24)
    e70c:	fe d3 00 a8 	load_32 ra, 52(sp)
    e710:	3e e3 00 a8 	load_32 s25, 56(sp)
    e714:	1e f3 00 a8 	load_32 s24, 60(sp)
    e718:	de 03 01 05 	add_i sp, sp, 64
    e71c:	1f 00 00 f0 	ret

000000000000e720 I_NetCmd:
    e720:	1f 00 00 f0 	ret

000000000000e724 SlopeDiv:
    e724:	de 03 ff 05 	add_i sp, sp, -64
    e728:	fe f3 00 88 	store_32 ra, 60(sp)
    e72c:	41 00 08 18 	cmplt_u s2, s1, 512
    e730:	c2 00 00 f4 	bnz s2, 24 <SlopeDiv+0x24>
    e734:	00 0c 00 0b 	shl s0, s0, 3
    e738:	21 20 00 0a 	shr s1, s1, 8
    e73c:	f2 1b 01 f8 	call 290760 <__udivsi3>
    e740:	20 00 20 18 	cmplt_u s1, s0, 2048
    e744:	41 00 00 f4 	bnz s1, 8 <SlopeDiv+0x28>
    e748:	00 00 20 0f 	move s0, 2048
    e74c:	fe f3 00 a8 	load_32 ra, 60(sp)
    e750:	de 03 01 05 	add_i sp, sp, 64
    e754:	1f 00 00 f0 	ret

000000000000e758 F_StartFinale:
    e758:	de 03 ff 05 	add_i sp, sp, -64
    e75c:	1e f3 00 88 	store_32 s24, 60(sp)
    e760:	fe e3 00 88 	store_32 ra, 56(sp)
    e764:	1a 04 00 4f 	movehi s0, 58
    e768:	3a 04 00 4f 	movehi s1, 58
    e76c:	00 03 00 0f 	move s24, 0
    e770:	00 60 6f 00 	or s0, s0, 7128
    e774:	21 a0 7f 00 	or s1, s1, 8168
    e778:	4b 04 00 4f 	movehi s2, 43
    e77c:	00 03 00 88 	store_32 s24, (s0)
    e780:	00 08 00 0f 	move s0, 2
    e784:	01 00 00 88 	store_32 s0, (s1)
    e788:	1b 04 00 4f 	movehi s0, 59
    e78c:	20 0c 00 4f 	movehi s1, 96
    e790:	42 00 40 00 	or s2, s2, 4096
    e794:	00 30 19 00 	or s0, s0, 1612
    e798:	21 d0 21 00 	or s1, s1, 2164
    e79c:	00 03 00 88 	store_32 s24, (s0)
    e7a0:	01 03 00 88 	store_32 s24, (s1)
    e7a4:	02 00 00 a8 	load_32 s0, (s2)
    e7a8:	20 08 00 18 	cmplt_u s1, s0, 2
    e7ac:	a1 00 00 f4 	bnz s1, 20 <F_StartFinale+0x68>
    e7b0:	20 08 00 10 	cmpeq_i s1, s0, 2
    e7b4:	41 03 00 f4 	bnz s1, 104 <F_StartFinale+0xc4>
    e7b8:	00 0c 00 11 	cmpne_i s0, s0, 3
    e7bc:	c0 05 00 f4 	bnz s0, 184 <F_StartFinale+0x11c>
    e7c0:	00 7c 00 0f 	move s0, 31
    e7c4:	20 04 00 0f 	move s1, 1
    e7c8:	f8 f4 00 f8 	call 250848 <S_ChangeMusic>
    e7cc:	1a 04 00 4f 	movehi s0, 58
    e7d0:	00 70 6f 00 	or s0, s0, 7132
    e7d4:	00 00 00 a8 	load_32 s0, (s0)
    e7d8:	00 fc ff 05 	add_i s0, s0, -1
    e7dc:	20 0c 00 16 	cmpgt_u s1, s0, 3
    e7e0:	61 0e 00 f4 	bnz s1, 460 <F_StartFinale+0x254>
    e7e4:	23 00 00 4f 	movehi s1, 3
    e7e8:	00 08 00 0b 	shl s0, s0, 2
    e7ec:	21 30 23 00 	or s1, s1, 2252
    e7f0:	00 80 50 c0 	add_i s0, s0, s1
    e7f4:	00 00 00 a8 	load_32 s0, (s0)
    e7f8:	00 00 00 f0 	b s0
    e7fc:	1a 04 00 4f 	movehi s0, 58
    e800:	21 00 00 4f 	movehi s1, 1
    e804:	53 04 00 4f 	movehi s2, 51
    e808:	00 70 17 00 	or s0, s0, 1500
    e80c:	7a 04 00 4f 	movehi s3, 58
    e810:	21 c0 1f 00 	or s1, s1, 2032
    e814:	42 a0 41 00 	or s2, s2, 4200
    e818:	61 00 00 f6 	b 388 <F_StartFinale+0x244>
    e81c:	00 04 01 0f 	move s0, 65
    e820:	20 04 00 0f 	move s1, 1
    e824:	e1 f4 00 f8 	call 250756 <S_ChangeMusic>
    e828:	1a 04 00 4f 	movehi s0, 58
    e82c:	00 80 7f 00 	or s0, s0, 8160
    e830:	00 00 00 a8 	load_32 s0, (s0)
    e834:	00 e8 ff 05 	add_i s0, s0, -6
    e838:	20 64 00 16 	cmpgt_u s1, s0, 25
    e83c:	81 0b 00 f4 	bnz s1, 368 <F_StartFinale+0x254>
    e840:	23 00 00 4f 	movehi s1, 3
    e844:	00 08 00 0b 	shl s0, s0, 2
    e848:	21 90 21 00 	or s1, s1, 2148
    e84c:	00 80 50 c0 	add_i s0, s0, s1
    e850:	00 00 00 a8 	load_32 s0, (s0)
    e854:	00 00 00 f0 	b s0
    e858:	1a 04 00 4f 	movehi s0, 58
    e85c:	21 00 00 4f 	movehi s1, 1
    e860:	53 04 00 4f 	movehi s2, 51
    e864:	00 70 17 00 	or s0, s0, 1500
    e868:	7a 04 00 4f 	movehi s3, 58
    e86c:	21 5c 61 00 	or s1, s1, 6231
    e870:	0a 00 00 f6 	b 40 <F_StartFinale+0x140>
    e874:	00 04 01 0f 	move s0, 65
    e878:	20 04 00 0f 	move s1, 1
    e87c:	cb f4 00 f8 	call 250668 <S_ChangeMusic>
    e880:	1a 04 00 4f 	movehi s0, 58
    e884:	21 00 00 4f 	movehi s1, 1
    e888:	53 04 00 4f 	movehi s2, 51
    e88c:	00 70 17 00 	or s0, s0, 1500
    e890:	7a 04 00 4f 	movehi s3, 58
    e894:	21 98 33 00 	or s1, s1, 3302
    e898:	42 e0 41 00 	or s2, s2, 4216
    e89c:	40 00 00 f6 	b 256 <F_StartFinale+0x244>
    e8a0:	1a 04 00 4f 	movehi s0, 58
    e8a4:	22 00 00 4f 	movehi s1, 2
    e8a8:	53 04 00 4f 	movehi s2, 51
    e8ac:	00 70 17 00 	or s0, s0, 1500
    e8b0:	7a 04 00 4f 	movehi s3, 58
    e8b4:	21 f0 5d 00 	or s1, s1, 6012
    e8b8:	42 b0 41 00 	or s2, s2, 4204
    e8bc:	38 00 00 f6 	b 224 <F_StartFinale+0x244>
    e8c0:	1a 04 00 4f 	movehi s0, 58
    e8c4:	20 00 00 4f 	movehi s1, 0
    e8c8:	53 04 00 4f 	movehi s2, 51
    e8cc:	00 70 17 00 	or s0, s0, 1500
    e8d0:	7a 04 00 4f 	movehi s3, 58
    e8d4:	21 d4 62 00 	or s1, s1, 6325
    e8d8:	42 c0 41 00 	or s2, s2, 4208
    e8dc:	30 00 00 f6 	b 192 <F_StartFinale+0x244>
    e8e0:	1a 04 00 4f 	movehi s0, 58
    e8e4:	21 00 00 4f 	movehi s1, 1
    e8e8:	53 04 00 4f 	movehi s2, 51
    e8ec:	00 70 17 00 	or s0, s0, 1500
    e8f0:	7a 04 00 4f 	movehi s3, 58
    e8f4:	21 2c 2c 00 	or s1, s1, 2827
    e8f8:	42 d0 41 00 	or s2, s2, 4212
    e8fc:	28 00 00 f6 	b 160 <F_StartFinale+0x244>
    e900:	1a 04 00 4f 	movehi s0, 58
    e904:	21 00 00 4f 	movehi s1, 1
    e908:	53 04 00 4f 	movehi s2, 51
    e90c:	00 70 17 00 	or s0, s0, 1500
    e910:	7a 04 00 4f 	movehi s3, 58
    e914:	21 f8 0b 00 	or s1, s1, 766
    e918:	42 f0 41 00 	or s2, s2, 4220
    e91c:	20 00 00 f6 	b 128 <F_StartFinale+0x244>
    e920:	1a 04 00 4f 	movehi s0, 58
    e924:	22 00 00 4f 	movehi s1, 2
    e928:	53 04 00 4f 	movehi s2, 51
    e92c:	00 70 17 00 	or s0, s0, 1500
    e930:	7a 04 00 4f 	movehi s3, 58
    e934:	21 ac 10 00 	or s1, s1, 1067
    e938:	42 20 42 00 	or s2, s2, 4232
    e93c:	18 00 00 f6 	b 96 <F_StartFinale+0x244>
    e940:	1a 04 00 4f 	movehi s0, 58
    e944:	20 00 00 4f 	movehi s1, 0
    e948:	53 04 00 4f 	movehi s2, 51
    e94c:	00 70 17 00 	or s0, s0, 1500
    e950:	7a 04 00 4f 	movehi s3, 58
    e954:	21 a8 32 00 	or s1, s1, 3242
    e958:	42 00 42 00 	or s2, s2, 4224
    e95c:	10 00 00 f6 	b 64 <F_StartFinale+0x244>
    e960:	1a 04 00 4f 	movehi s0, 58
    e964:	22 00 00 4f 	movehi s1, 2
    e968:	53 04 00 4f 	movehi s2, 51
    e96c:	00 70 17 00 	or s0, s0, 1500
    e970:	7a 04 00 4f 	movehi s3, 58
    e974:	21 c8 3f 00 	or s1, s1, 4082
    e978:	42 10 42 00 	or s2, s2, 4228
    e97c:	08 00 00 f6 	b 32 <F_StartFinale+0x244>
    e980:	1a 04 00 4f 	movehi s0, 58
    e984:	22 00 00 4f 	movehi s1, 2
    e988:	53 04 00 4f 	movehi s2, 51
    e98c:	00 70 17 00 	or s0, s0, 1500
    e990:	7a 04 00 4f 	movehi s3, 58
    e994:	21 8c 03 00 	or s1, s1, 227
    e998:	42 30 42 00 	or s2, s2, 4236
    e99c:	63 90 17 00 	or s3, s3, 1508
    e9a0:	20 00 00 88 	store_32 s1, (s0)
    e9a4:	02 00 00 a8 	load_32 s0, (s2)
    e9a8:	03 00 00 88 	store_32 s0, (s3)
    e9ac:	1a 04 00 4f 	movehi s0, 58
    e9b0:	3a 04 00 4f 	movehi s1, 58
    e9b4:	00 80 17 00 	or s0, s0, 1504
    e9b8:	21 60 17 00 	or s1, s1, 1496
    e9bc:	00 03 00 88 	store_32 s24, (s0)
    e9c0:	01 03 00 88 	store_32 s24, (s1)
    e9c4:	fe e3 00 a8 	load_32 ra, 56(sp)
    e9c8:	1e f3 00 a8 	load_32 s24, 60(sp)
    e9cc:	de 03 01 05 	add_i sp, sp, 64
    e9d0:	1f 00 00 f0 	ret

000000000000e9d4 F_Responder:
    e9d4:	de 03 ff 05 	add_i sp, sp, -64
    e9d8:	1e f3 00 88 	store_32 s24, 60(sp)
    e9dc:	fe e3 00 88 	store_32 ra, 56(sp)
    e9e0:	3a 04 00 4f 	movehi s1, 58
    e9e4:	00 03 00 0f 	move s24, 0
    e9e8:	21 80 17 00 	or s1, s1, 1504
    e9ec:	21 00 00 a8 	load_32 s1, (s1)
    e9f0:	21 08 00 11 	cmpne_i s1, s1, 2
    e9f4:	e1 05 00 f4 	bnz s1, 188 <F_Responder+0xdc>
    e9f8:	00 00 00 a8 	load_32 s0, (s0)
    e9fc:	a0 05 00 f4 	bnz s0, 180 <F_Responder+0xdc>
    ea00:	1a 04 00 4f 	movehi s0, 58
    ea04:	00 00 17 00 	or s0, s0, 1472
    ea08:	20 00 00 a8 	load_32 s1, (s0)
    ea0c:	41 00 00 f4 	bnz s1, 8 <F_Responder+0x40>
    ea10:	03 00 00 f6 	b 12 <F_Responder+0x48>
    ea14:	00 07 00 0f 	move s24, 1
    ea18:	26 00 00 f6 	b 152 <F_Responder+0xdc>
    ea1c:	3a 04 00 4f 	movehi s1, 58
    ea20:	00 07 00 0f 	move s24, 1
    ea24:	00 03 00 88 	store_32 s24, (s0)
    ea28:	13 04 00 4f 	movehi s0, 51
    ea2c:	21 20 17 00 	or s1, s1, 1480
    ea30:	54 04 00 4f 	movehi s2, 52
    ea34:	00 00 43 00 	or s0, s0, 4288
    ea38:	21 00 00 a8 	load_32 s1, (s1)
    ea3c:	7a 04 00 4f 	movehi s3, 58
    ea40:	42 20 5c 00 	or s2, s2, 5896
    ea44:	9a 04 00 4f 	movehi s4, 58
    ea48:	63 40 17 00 	or s3, s3, 1488
    ea4c:	21 0c 00 0b 	shl s1, s1, 3
    ea50:	00 80 50 c0 	add_i s0, s0, s1
    ea54:	38 04 00 4f 	movehi s1, 56
    ea58:	00 10 00 a8 	load_32 s0, 4(s0)
    ea5c:	21 30 03 00 	or s1, s1, 204
    ea60:	00 70 01 07 	mull_i s0, s0, 92
    ea64:	01 00 50 c0 	add_i s0, s1, s0
    ea68:	20 c0 00 a8 	load_32 s1, 48(s0)
    ea6c:	21 70 00 07 	mull_i s1, s1, 28
    ea70:	22 80 50 c0 	add_i s1, s2, s1
    ea74:	23 00 00 88 	store_32 s1, (s3)
    ea78:	5a 04 00 4f 	movehi s2, 58
    ea7c:	7a 04 00 4f 	movehi s3, 58
    ea80:	21 20 00 a8 	load_32 s1, 8(s1)
    ea84:	42 50 17 00 	or s2, s2, 1492
    ea88:	22 00 00 88 	store_32 s1, (s2)
    ea8c:	23 10 17 00 	or s1, s3, 1476
    ea90:	44 f0 16 00 	or s2, s4, 1468
    ea94:	60 00 00 0f 	move s3, 0
    ea98:	61 00 00 88 	store_32 s3, (s1)
    ea9c:	62 00 00 88 	store_32 s3, (s2)
    eaa0:	20 e0 00 a8 	load_32 s1, 56(s0)
    eaa4:	61 00 00 f2 	bz s1, 12 <F_Responder+0xdc>
    eaa8:	00 00 00 0f 	move s0, 0
    eaac:	4e f6 00 f8 	call 252216 <S_StartSound>
    eab0:	00 00 fc c0 	move s0, s24
    eab4:	fe e3 00 a8 	load_32 ra, 56(sp)
    eab8:	1e f3 00 a8 	load_32 s24, 60(sp)
    eabc:	de 03 01 05 	add_i sp, sp, 64
    eac0:	1f 00 00 f0 	ret

000000000000eac4 F_CastResponder:
    eac4:	de 03 ff 05 	add_i sp, sp, -64
    eac8:	1e f3 00 88 	store_32 s24, 60(sp)
    eacc:	fe e3 00 88 	store_32 ra, 56(sp)
    ead0:	00 00 00 a8 	load_32 s0, (s0)
    ead4:	40 00 00 f4 	bnz s0, 8 <F_CastResponder+0x18>
    ead8:	03 00 00 f6 	b 12 <F_CastResponder+0x20>
    eadc:	00 03 00 0f 	move s24, 0
    eae0:	2d 00 00 f6 	b 180 <F_CastResponder+0xd0>
    eae4:	1a 04 00 4f 	movehi s0, 58
    eae8:	00 00 17 00 	or s0, s0, 1472
    eaec:	20 00 00 a8 	load_32 s1, (s0)
    eaf0:	41 00 00 f4 	bnz s1, 8 <F_CastResponder+0x34>
    eaf4:	03 00 00 f6 	b 12 <F_CastResponder+0x3c>
    eaf8:	00 07 00 0f 	move s24, 1
    eafc:	26 00 00 f6 	b 152 <F_CastResponder+0xd0>
    eb00:	3a 04 00 4f 	movehi s1, 58
    eb04:	00 07 00 0f 	move s24, 1
    eb08:	00 03 00 88 	store_32 s24, (s0)
    eb0c:	13 04 00 4f 	movehi s0, 51
    eb10:	21 20 17 00 	or s1, s1, 1480
    eb14:	54 04 00 4f 	movehi s2, 52
    eb18:	00 00 43 00 	or s0, s0, 4288
    eb1c:	21 00 00 a8 	load_32 s1, (s1)
    eb20:	7a 04 00 4f 	movehi s3, 58
    eb24:	42 20 5c 00 	or s2, s2, 5896
    eb28:	9a 04 00 4f 	movehi s4, 58
    eb2c:	63 40 17 00 	or s3, s3, 1488
    eb30:	21 0c 00 0b 	shl s1, s1, 3
    eb34:	00 80 50 c0 	add_i s0, s0, s1
    eb38:	38 04 00 4f 	movehi s1, 56
    eb3c:	00 10 00 a8 	load_32 s0, 4(s0)
    eb40:	21 30 03 00 	or s1, s1, 204
    eb44:	00 70 01 07 	mull_i s0, s0, 92
    eb48:	01 00 50 c0 	add_i s0, s1, s0
    eb4c:	20 c0 00 a8 	load_32 s1, 48(s0)
    eb50:	21 70 00 07 	mull_i s1, s1, 28
    eb54:	22 80 50 c0 	add_i s1, s2, s1
    eb58:	23 00 00 88 	store_32 s1, (s3)
    eb5c:	5a 04 00 4f 	movehi s2, 58
    eb60:	7a 04 00 4f 	movehi s3, 58
    eb64:	21 20 00 a8 	load_32 s1, 8(s1)
    eb68:	42 50 17 00 	or s2, s2, 1492
    eb6c:	22 00 00 88 	store_32 s1, (s2)
    eb70:	23 10 17 00 	or s1, s3, 1476
    eb74:	44 f0 16 00 	or s2, s4, 1468
    eb78:	60 00 00 0f 	move s3, 0
    eb7c:	61 00 00 88 	store_32 s3, (s1)
    eb80:	62 00 00 88 	store_32 s3, (s2)
    eb84:	20 e0 00 a8 	load_32 s1, 56(s0)
    eb88:	61 00 00 f2 	bz s1, 12 <F_CastResponder+0xd0>
    eb8c:	00 00 00 0f 	move s0, 0
    eb90:	15 f6 00 f8 	call 251988 <S_StartSound>
    eb94:	00 00 fc c0 	move s0, s24
    eb98:	fe e3 00 a8 	load_32 ra, 56(sp)
    eb9c:	1e f3 00 a8 	load_32 s24, 60(sp)
    eba0:	de 03 01 05 	add_i sp, sp, 64
    eba4:	1f 00 00 f0 	ret

000000000000eba8 F_Ticker:
    eba8:	de 03 ff 05 	add_i sp, sp, -64
    ebac:	1e f3 00 88 	store_32 s24, 60(sp)
    ebb0:	3e e3 00 88 	store_32 s25, 56(sp)
    ebb4:	5e d3 00 88 	store_32 s26, 52(sp)
    ebb8:	7e c3 00 88 	store_32 s27, 48(sp)
    ebbc:	fe b3 00 88 	store_32 ra, 44(sp)
    ebc0:	0b 04 00 4f 	movehi s0, 43
    ebc4:	20 03 40 00 	or s25, s0, 4096
    ebc8:	1a 04 00 4f 	movehi s0, 58
    ebcc:	39 00 00 a8 	load_32 s1, (s25)
    ebd0:	00 63 17 00 	or s24, s0, 1496
    ebd4:	18 00 00 a8 	load_32 s0, (s24)
    ebd8:	21 08 00 11 	cmpne_i s1, s1, 2
    ebdc:	c1 08 00 f4 	bnz s1, 280 <F_Ticker+0x14c>
    ebe0:	20 cc 00 14 	cmplt_i s1, s0, 51
    ebe4:	81 08 00 f4 	bnz s1, 272 <F_Ticker+0x14c>
    ebe8:	3b 04 00 4f 	movehi s1, 59
    ebec:	21 40 02 00 	or s1, s1, 144
    ebf0:	41 3c 00 a0 	load_u8 s2, 15(s1)
    ebf4:	61 9c 04 a0 	load_u8 s3, 295(s1)
    ebf8:	81 fc 08 a0 	load_u8 s4, 575(s1)
    ebfc:	21 5c 0d a0 	load_u8 s1, 855(s1)
    ec00:	42 80 01 c0 	or s2, s2, s3
    ec04:	42 00 02 c0 	or s2, s2, s4
    ec08:	22 80 00 c0 	or s1, s2, s1
    ec0c:	41 07 00 f2 	bz s1, 232 <F_Ticker+0x14c>
    ec10:	3a 04 00 4f 	movehi s1, 58
    ec14:	21 80 7f 00 	or s1, s1, 8160
    ec18:	21 00 00 a8 	load_32 s1, (s1)
    ec1c:	21 78 00 11 	cmpne_i s1, s1, 30
    ec20:	21 06 00 f4 	bnz s1, 196 <F_Ticker+0x13c>
    ec24:	13 04 00 4f 	movehi s0, 51
    ec28:	5a 04 00 4f 	movehi s2, 58
    ec2c:	20 fc ff 0f 	move s1, -1
    ec30:	00 50 45 00 	or s0, s0, 4436
    ec34:	7a 04 00 4f 	movehi s3, 58
    ec38:	9a 04 00 4f 	movehi s4, 58
    ec3c:	20 00 00 88 	store_32 s1, (s0)
    ec40:	13 04 00 4f 	movehi s0, 51
    ec44:	22 20 17 00 	or s1, s2, 1480
    ec48:	40 00 00 0f 	move s2, 0
    ec4c:	00 00 43 00 	or s0, s0, 4288
    ec50:	41 00 00 88 	store_32 s2, (s1)
    ec54:	38 04 00 4f 	movehi s1, 56
    ec58:	63 40 17 00 	or s3, s3, 1488
    ec5c:	00 10 00 a8 	load_32 s0, 4(s0)
    ec60:	21 30 03 00 	or s1, s1, 204
    ec64:	00 70 01 07 	mull_i s0, s0, 92
    ec68:	01 00 50 c0 	add_i s0, s1, s0
    ec6c:	34 04 00 4f 	movehi s1, 52
    ec70:	00 30 00 a8 	load_32 s0, 12(s0)
    ec74:	21 20 5c 00 	or s1, s1, 5896
    ec78:	00 70 00 07 	mull_i s0, s0, 28
    ec7c:	01 00 50 c0 	add_i s0, s1, s0
    ec80:	03 00 00 88 	store_32 s0, (s3)
    ec84:	3a 04 00 4f 	movehi s1, 58
    ec88:	7a 04 00 4f 	movehi s3, 58
    ec8c:	00 20 00 a8 	load_32 s0, 8(s0)
    ec90:	21 50 17 00 	or s1, s1, 1492
    ec94:	63 00 17 00 	or s3, s3, 1472
    ec98:	01 00 00 88 	store_32 s0, (s1)
    ec9c:	04 80 17 00 	or s0, s4, 1504
    eca0:	20 08 00 0f 	move s1, 2
    eca4:	43 00 00 88 	store_32 s2, (s3)
    eca8:	7a 04 00 4f 	movehi s3, 58
    ecac:	20 00 00 88 	store_32 s1, (s0)
    ecb0:	1a 04 00 4f 	movehi s0, 58
    ecb4:	3a 04 00 4f 	movehi s1, 58
    ecb8:	63 f0 16 00 	or s3, s3, 1468
    ecbc:	00 10 17 00 	or s0, s0, 1476
    ecc0:	21 30 17 00 	or s1, s1, 1484
    ecc4:	40 00 00 88 	store_32 s2, (s0)
    ecc8:	00 fc 00 0f 	move s0, 63
    eccc:	41 00 00 88 	store_32 s2, (s1)
    ecd0:	20 04 00 0f 	move s1, 1
    ecd4:	43 00 00 88 	store_32 s2, (s3)
    ecd8:	b4 f3 00 f8 	call 249552 <S_ChangeMusic>
    ecdc:	18 00 00 a8 	load_32 s0, (s24)
    ece0:	05 00 00 f6 	b 20 <F_Ticker+0x14c>
    ece4:	3a 04 00 4f 	movehi s1, 58
    ece8:	40 20 00 0f 	move s2, 8
    ecec:	21 60 6f 00 	or s1, s1, 7128
    ecf0:	41 00 00 88 	store_32 s2, (s1)
    ecf4:	3a 04 00 4f 	movehi s1, 58
    ecf8:	60 07 00 05 	add_i s27, s0, 1
    ecfc:	78 03 00 88 	store_32 s27, (s24)
    ed00:	41 83 17 00 	or s26, s1, 1504
    ed04:	1a 00 00 a8 	load_32 s0, (s26)
    ed08:	20 08 00 11 	cmpne_i s1, s0, 2
    ed0c:	61 00 00 f4 	bnz s1, 12 <F_Ticker+0x170>
    ed10:	57 00 00 f8 	call 348 <F_CastTicker>
    ed14:	1c 00 00 f6 	b 112 <F_Ticker+0x1dc>
    ed18:	39 00 00 a8 	load_32 s1, (s25)
    ed1c:	40 03 00 f4 	bnz s0, 104 <F_Ticker+0x1dc>
    ed20:	01 08 00 10 	cmpeq_i s0, s1, 2
    ed24:	00 03 00 f4 	bnz s0, 96 <F_Ticker+0x1dc>
    ed28:	1a 04 00 4f 	movehi s0, 58
    ed2c:	00 90 17 00 	or s0, s0, 1508
    ed30:	00 00 00 a8 	load_32 s0, (s0)
    ed34:	9b 0e 01 f8 	call 277100 <strlen>
    ed38:	00 0c 00 07 	mull_i s0, s0, 3
    ed3c:	00 e8 03 05 	add_i s0, s0, 250
    ed40:	1b 00 90 c1 	cmple_u s0, s27, s0
    ed44:	00 02 00 f4 	bnz s0, 64 <F_Ticker+0x1dc>
    ed48:	33 04 00 4f 	movehi s1, 51
    ed4c:	00 00 00 0f 	move s0, 0
    ed50:	18 00 00 88 	store_32 s0, (s24)
    ed54:	5a 04 00 4f 	movehi s2, 58
    ed58:	00 04 00 0f 	move s0, 1
    ed5c:	1a 00 00 88 	store_32 s0, (s26)
    ed60:	01 50 45 00 	or s0, s1, 4436
    ed64:	22 70 6f 00 	or s1, s2, 7132
    ed68:	40 fc ff 0f 	move s2, -1
    ed6c:	40 00 00 88 	store_32 s2, (s0)
    ed70:	01 00 00 a8 	load_32 s0, (s1)
    ed74:	00 0c 00 11 	cmpne_i s0, s0, 3
    ed78:	60 00 00 f4 	bnz s0, 12 <F_Ticker+0x1dc>
    ed7c:	00 78 00 0f 	move s0, 30
    ed80:	2f f6 00 f8 	call 252092 <S_StartMusic>
    ed84:	fe b3 00 a8 	load_32 ra, 44(sp)
    ed88:	7e c3 00 a8 	load_32 s27, 48(sp)
    ed8c:	5e d3 00 a8 	load_32 s26, 52(sp)
    ed90:	3e e3 00 a8 	load_32 s25, 56(sp)
    ed94:	1e f3 00 a8 	load_32 s24, 60(sp)
    ed98:	de 03 01 05 	add_i sp, sp, 64
    ed9c:	1f 00 00 f0 	ret

000000000000eda0 F_StartCast:
    eda0:	de 03 ff 05 	add_i sp, sp, -64
    eda4:	fe f3 00 88 	store_32 ra, 60(sp)
    eda8:	13 04 00 4f 	movehi s0, 51
    edac:	5a 04 00 4f 	movehi s2, 58
    edb0:	20 fc ff 0f 	move s1, -1
    edb4:	00 50 45 00 	or s0, s0, 4436
    edb8:	7a 04 00 4f 	movehi s3, 58
    edbc:	9a 04 00 4f 	movehi s4, 58
    edc0:	20 00 00 88 	store_32 s1, (s0)
    edc4:	13 04 00 4f 	movehi s0, 51
    edc8:	22 20 17 00 	or s1, s2, 1480
    edcc:	40 00 00 0f 	move s2, 0
    edd0:	00 00 43 00 	or s0, s0, 4288
    edd4:	41 00 00 88 	store_32 s2, (s1)
    edd8:	38 04 00 4f 	movehi s1, 56
    eddc:	63 40 17 00 	or s3, s3, 1488
    ede0:	00 10 00 a8 	load_32 s0, 4(s0)
    ede4:	21 30 03 00 	or s1, s1, 204
    ede8:	00 70 01 07 	mull_i s0, s0, 92
    edec:	01 00 50 c0 	add_i s0, s1, s0
    edf0:	34 04 00 4f 	movehi s1, 52
    edf4:	00 30 00 a8 	load_32 s0, 12(s0)
    edf8:	21 20 5c 00 	or s1, s1, 5896
    edfc:	00 70 00 07 	mull_i s0, s0, 28
    ee00:	01 00 50 c0 	add_i s0, s1, s0
    ee04:	03 00 00 88 	store_32 s0, (s3)
    ee08:	3a 04 00 4f 	movehi s1, 58
    ee0c:	7a 04 00 4f 	movehi s3, 58
    ee10:	00 20 00 a8 	load_32 s0, 8(s0)
    ee14:	21 50 17 00 	or s1, s1, 1492
    ee18:	63 00 17 00 	or s3, s3, 1472
    ee1c:	01 00 00 88 	store_32 s0, (s1)
    ee20:	04 80 17 00 	or s0, s4, 1504
    ee24:	20 08 00 0f 	move s1, 2
    ee28:	43 00 00 88 	store_32 s2, (s3)
    ee2c:	7a 04 00 4f 	movehi s3, 58
    ee30:	20 00 00 88 	store_32 s1, (s0)
    ee34:	1a 04 00 4f 	movehi s0, 58
    ee38:	3a 04 00 4f 	movehi s1, 58
    ee3c:	63 f0 16 00 	or s3, s3, 1468
    ee40:	00 10 17 00 	or s0, s0, 1476
    ee44:	21 30 17 00 	or s1, s1, 1484
    ee48:	40 00 00 88 	store_32 s2, (s0)
    ee4c:	00 fc 00 0f 	move s0, 63
    ee50:	41 00 00 88 	store_32 s2, (s1)
    ee54:	20 04 00 0f 	move s1, 1
    ee58:	43 00 00 88 	store_32 s2, (s3)
    ee5c:	53 f3 00 f8 	call 249164 <S_ChangeMusic>
    ee60:	fe f3 00 a8 	load_32 ra, 60(sp)
    ee64:	de 03 01 05 	add_i sp, sp, 64
    ee68:	1f 00 00 f0 	ret

000000000000ee6c F_CastTicker:
    ee6c:	de 03 ff 05 	add_i sp, sp, -64
    ee70:	1e f3 00 88 	store_32 s24, 60(sp)
    ee74:	3e e3 00 88 	store_32 s25, 56(sp)
    ee78:	5e d3 00 88 	store_32 s26, 52(sp)
    ee7c:	7e c3 00 88 	store_32 s27, 48(sp)
    ee80:	fe b3 00 88 	store_32 ra, 44(sp)
    ee84:	1a 04 00 4f 	movehi s0, 58
    ee88:	00 53 17 00 	or s24, s0, 1492
    ee8c:	18 00 00 a8 	load_32 s0, (s24)
    ee90:	00 fc ff 05 	add_i s0, s0, -1
    ee94:	18 00 00 88 	store_32 s0, (s24)
    ee98:	20 00 00 12 	cmpgt_i s1, s0, 0
    ee9c:	61 12 00 f4 	bnz s1, 588 <F_CastTicker+0x27c>
    eea0:	1a 04 00 4f 	movehi s0, 58
    eea4:	c0 40 17 00 	or s6, s0, 1488
    eea8:	26 00 00 a8 	load_32 s1, (s6)
    eeac:	01 20 00 a8 	load_32 s0, 8(s1)
    eeb0:	00 fc ff 10 	cmpeq_i s0, s0, -1
    eeb4:	40 04 00 f4 	bnz s0, 136 <F_CastTicker+0xd0>
    eeb8:	01 40 00 a8 	load_32 s0, 16(s1)
    eebc:	40 00 00 f4 	bnz s0, 8 <F_CastTicker+0x58>
    eec0:	1f 00 00 f6 	b 124 <F_CastTicker+0xd0>
    eec4:	54 04 00 4f 	movehi s2, 52
    eec8:	62 23 5c 00 	or s27, s2, 5896
    eecc:	5b 60 43 05 	add_i s2, s27, 4312
    eed0:	21 00 01 c1 	cmpeq_i s1, s1, s2
    eed4:	c1 0c 00 f4 	bnz s1, 408 <F_CastTicker+0x200>
    eed8:	3a 04 00 4f 	movehi s1, 58
    eedc:	40 70 00 07 	mull_i s2, s0, 28
    eee0:	41 13 17 00 	or s26, s1, 1476
    eee4:	3b 00 51 c0 	add_i s1, s27, s2
    eee8:	26 00 00 88 	store_32 s1, (s6)
    eeec:	3a 00 00 a8 	load_32 s1, (s26)
    eef0:	a1 04 00 05 	add_i s5, s1, 1
    eef4:	ba 00 00 88 	store_32 s5, (s26)
    eef8:	20 14 07 12 	cmpgt_i s1, s0, 453
    eefc:	41 10 00 f4 	bnz s1, 520 <F_CastTicker+0x298>
    ef00:	20 fc 03 12 	cmpgt_i s1, s0, 255
    ef04:	41 00 00 f4 	bnz s1, 8 <F_CastTicker+0xa0>
    ef08:	97 00 00 f6 	b 604 <F_CastTicker+0x2f8>
    ef0c:	20 c0 fa 05 	add_i s1, s0, -336
    ef10:	41 4c 01 16 	cmpgt_u s2, s1, 83
    ef14:	22 1e 00 f4 	bnz s2, 964 <F_CastTicker+0x46c>
    ef18:	03 00 00 4f 	movehi s0, 3
    ef1c:	21 08 00 0b 	shl s1, s1, 2
    ef20:	00 70 23 00 	or s0, s0, 2268
    ef24:	01 00 50 c0 	add_i s0, s1, s0
    ef28:	00 00 00 a8 	load_32 s0, (s0)
    ef2c:	00 00 00 f0 	b s0
    ef30:	20 03 f3 c0 	move s25, s6
    ef34:	20 e0 00 0f 	move s1, 56
    ef38:	a5 00 00 f6 	b 660 <F_CastTicker+0x360>
    ef3c:	1a 04 00 4f 	movehi s0, 58
    ef40:	33 04 00 4f 	movehi s1, 51
    ef44:	5a 04 00 4f 	movehi s2, 58
    ef48:	40 23 17 00 	or s26, s0, 1480
    ef4c:	21 03 43 00 	or s25, s1, 4288
    ef50:	22 00 17 00 	or s1, s2, 1472
    ef54:	1a 00 00 a8 	load_32 s0, (s26)
    ef58:	a0 00 00 0f 	move s5, 0
    ef5c:	00 04 00 05 	add_i s0, s0, 1
    ef60:	1a 00 00 88 	store_32 s0, (s26)
    ef64:	a1 00 00 88 	store_32 s5, (s1)
    ef68:	40 0c 00 0b 	shl s2, s0, 3
    ef6c:	59 00 51 c0 	add_i s2, s25, s2
    ef70:	22 00 00 a8 	load_32 s1, (s2)
    ef74:	61 00 00 f4 	bnz s1, 12 <F_CastTicker+0x114>
    ef78:	00 00 00 0f 	move s0, 0
    ef7c:	1a 00 00 88 	store_32 s0, (s26)
    ef80:	00 0c 00 0b 	shl s0, s0, 3
    ef84:	19 00 50 c0 	add_i s0, s25, s0
    ef88:	38 04 00 4f 	movehi s1, 56
    ef8c:	00 10 00 a8 	load_32 s0, 4(s0)
    ef90:	61 33 03 00 	or s27, s1, 204
    ef94:	20 70 01 07 	mull_i s1, s0, 92
    ef98:	3b 80 50 c0 	add_i s1, s27, s1
    ef9c:	21 40 00 a8 	load_32 s1, 16(s1)
    efa0:	a1 01 00 f2 	bz s1, 52 <F_CastTicker+0x168>
    efa4:	00 00 00 0f 	move s0, 0
    efa8:	1e a3 00 88 	store_32 s24, 40(sp)
    efac:	de 90 00 88 	store_32 s6, 36(sp)
    efb0:	00 83 f2 c0 	move s24, s5
    efb4:	0c f5 00 f8 	call 250928 <S_StartSound>
    efb8:	a0 00 fc c0 	move s5, s24
    efbc:	de 90 00 a8 	load_32 s6, 36(sp)
    efc0:	1e a3 00 a8 	load_32 s24, 40(sp)
    efc4:	1a 00 00 a8 	load_32 s0, (s26)
    efc8:	00 0c 00 0b 	shl s0, s0, 3
    efcc:	19 00 50 c0 	add_i s0, s25, s0
    efd0:	00 10 00 a8 	load_32 s0, 4(s0)
    efd4:	00 70 01 07 	mull_i s0, s0, 92
    efd8:	1b 00 50 c0 	add_i s0, s27, s0
    efdc:	34 04 00 4f 	movehi s1, 52
    efe0:	5a 04 00 4f 	movehi s2, 58
    efe4:	00 30 00 a8 	load_32 s0, 12(s0)
    efe8:	21 20 5c 00 	or s1, s1, 5896
    efec:	42 10 17 00 	or s2, s2, 1476
    eff0:	00 70 00 07 	mull_i s0, s0, 28
    eff4:	01 00 50 c0 	add_i s0, s1, s0
    eff8:	06 00 00 88 	store_32 s0, (s6)
    effc:	a2 00 00 88 	store_32 s5, (s2)
    f000:	1a 04 00 4f 	movehi s0, 58
    f004:	00 f0 16 00 	or s0, s0, 1468
    f008:	00 00 00 a8 	load_32 s0, (s0)
    f00c:	40 00 00 f4 	bnz s0, 8 <F_CastTicker+0x1a8>
    f010:	a1 00 00 f6 	b 644 <F_CastTicker+0x428>
    f014:	05 60 00 10 	cmpeq_i s0, s5, 24
    f018:	a0 02 00 f4 	bnz s0, 84 <F_CastTicker+0x200>
    f01c:	1a 04 00 4f 	movehi s0, 58
    f020:	53 04 00 4f 	movehi s2, 51
    f024:	20 20 17 00 	or s1, s0, 1480
    f028:	06 00 00 a8 	load_32 s0, (s6)
    f02c:	42 00 43 00 	or s2, s2, 4288
    f030:	21 00 00 a8 	load_32 s1, (s1)
    f034:	21 0c 00 0b 	shl s1, s1, 3
    f038:	22 80 50 c0 	add_i s1, s2, s1
    f03c:	58 04 00 4f 	movehi s2, 56
    f040:	21 10 00 a8 	load_32 s1, 4(s1)
    f044:	42 30 03 00 	or s2, s2, 204
    f048:	21 70 01 07 	mull_i s1, s1, 92
    f04c:	22 80 50 c0 	add_i s1, s2, s1
    f050:	54 04 00 4f 	movehi s2, 52
    f054:	21 30 00 a8 	load_32 s1, 12(s1)
    f058:	42 20 5c 00 	or s2, s2, 5896
    f05c:	21 70 00 07 	mull_i s1, s1, 28
    f060:	22 80 50 c0 	add_i s1, s2, s1
    f064:	20 80 10 c1 	cmpne_i s1, s0, s1
    f068:	41 03 00 f4 	bnz s1, 104 <F_CastTicker+0x264>
    f06c:	1a 04 00 4f 	movehi s0, 58
    f070:	3a 04 00 4f 	movehi s1, 58
    f074:	7a 04 00 4f 	movehi s3, 58
    f078:	00 f0 16 00 	or s0, s0, 1468
    f07c:	21 10 17 00 	or s1, s1, 1476
    f080:	40 00 00 0f 	move s2, 0
    f084:	40 00 00 88 	store_32 s2, (s0)
    f088:	03 20 17 00 	or s0, s3, 1480
    f08c:	41 00 00 88 	store_32 s2, (s1)
    f090:	33 04 00 4f 	movehi s1, 51
    f094:	00 00 00 a8 	load_32 s0, (s0)
    f098:	21 00 43 00 	or s1, s1, 4288
    f09c:	00 0c 00 0b 	shl s0, s0, 3
    f0a0:	01 00 50 c0 	add_i s0, s1, s0
    f0a4:	38 04 00 4f 	movehi s1, 56
    f0a8:	00 10 00 a8 	load_32 s0, 4(s0)
    f0ac:	21 30 03 00 	or s1, s1, 204
    f0b0:	00 70 01 07 	mull_i s0, s0, 92
    f0b4:	01 00 50 c0 	add_i s0, s1, s0
    f0b8:	34 04 00 4f 	movehi s1, 52
    f0bc:	00 30 00 a8 	load_32 s0, 12(s0)
    f0c0:	21 20 5c 00 	or s1, s1, 5896
    f0c4:	00 70 00 07 	mull_i s0, s0, 28
    f0c8:	01 00 50 c0 	add_i s0, s1, s0
    f0cc:	06 00 00 88 	store_32 s0, (s6)
    f0d0:	00 20 00 a8 	load_32 s0, 8(s0)
    f0d4:	20 fc ff 10 	cmpeq_i s1, s0, -1
    f0d8:	41 00 00 f4 	bnz s1, 8 <F_CastTicker+0x274>
    f0dc:	02 00 00 f6 	b 8 <F_CastTicker+0x278>
    f0e0:	00 3c 00 0f 	move s0, 15
    f0e4:	18 00 00 88 	store_32 s0, (s24)
    f0e8:	fe b3 00 a8 	load_32 ra, 44(sp)
    f0ec:	7e c3 00 a8 	load_32 s27, 48(sp)
    f0f0:	5e d3 00 a8 	load_32 s26, 52(sp)
    f0f4:	3e e3 00 a8 	load_32 s25, 56(sp)
    f0f8:	1e f3 00 a8 	load_32 s24, 60(sp)
    f0fc:	de 03 01 05 	add_i sp, sp, 64
    f100:	1f 00 00 f0 	ret
    f104:	20 9c 09 12 	cmpgt_i s1, s0, 615
    f108:	41 00 00 f4 	bnz s1, 8 <F_CastTicker+0x2a4>
    f10c:	0d 00 00 f6 	b 52 <F_CastTicker+0x2d4>
    f110:	20 4c f5 05 	add_i s1, s0, -685
    f114:	41 64 00 16 	cmpgt_u s2, s1, 25
    f118:	42 03 00 f4 	bnz s2, 104 <F_CastTicker+0x314>
    f11c:	03 00 00 4f 	movehi s0, 3
    f120:	21 08 00 0b 	shl s1, s1, 2
    f124:	00 b0 28 00 	or s0, s0, 2604
    f128:	01 00 50 c0 	add_i s0, s1, s0
    f12c:	00 00 00 a8 	load_32 s0, (s0)
    f130:	00 00 00 f0 	b s0
    f134:	20 03 f3 c0 	move s25, s6
    f138:	20 38 00 0f 	move s1, 14
    f13c:	24 00 00 f6 	b 144 <F_CastTicker+0x360>
    f140:	20 64 08 12 	cmpgt_i s1, s0, 537
    f144:	c1 02 00 f4 	bnz s1, 88 <F_CastTicker+0x330>
    f148:	20 18 07 10 	cmpeq_i s1, s0, 454
    f14c:	21 0d 00 f4 	bnz s1, 420 <F_CastTicker+0x484>
    f150:	20 98 07 10 	cmpeq_i s1, s0, 486
    f154:	41 0d 00 f4 	bnz s1, 424 <F_CastTicker+0x490>
    f158:	00 e4 07 10 	cmpeq_i s0, s0, 505
    f15c:	40 03 00 f4 	bnz s0, 104 <F_CastTicker+0x358>
    f160:	1f 00 00 f6 	b 124 <F_CastTicker+0x370>
    f164:	20 68 02 10 	cmpeq_i s1, s0, 154
    f168:	01 0a 00 f4 	bnz s1, 320 <F_CastTicker+0x43c>
    f16c:	20 e4 02 10 	cmpeq_i s1, s0, 185
    f170:	21 0a 00 f4 	bnz s1, 324 <F_CastTicker+0x448>
    f174:	00 68 03 10 	cmpeq_i s0, s0, 218
    f178:	c0 00 00 f4 	bnz s0, 24 <F_CastTicker+0x324>
    f17c:	18 00 00 f6 	b 96 <F_CastTicker+0x370>
    f180:	20 60 f6 05 	add_i s1, s0, -616
    f184:	21 08 00 18 	cmplt_u s1, s1, 2
    f188:	41 00 00 f4 	bnz s1, 8 <F_CastTicker+0x324>
    f18c:	4d 00 00 f6 	b 308 <F_CastTicker+0x454>
    f190:	20 03 f3 c0 	move s25, s6
    f194:	20 08 00 0f 	move s1, 2
    f198:	0d 00 00 f6 	b 52 <F_CastTicker+0x360>
    f19c:	20 68 08 10 	cmpeq_i s1, s0, 538
    f1a0:	21 01 00 f4 	bnz s1, 36 <F_CastTicker+0x358>
    f1a4:	20 dc 08 10 	cmpeq_i s1, s0, 567
    f1a8:	e1 00 00 f4 	bnz s1, 28 <F_CastTicker+0x358>
    f1ac:	00 38 09 10 	cmpeq_i s0, s0, 590
    f1b0:	40 00 00 f4 	bnz s0, 8 <F_CastTicker+0x34c>
    f1b4:	0a 00 00 f6 	b 40 <F_CastTicker+0x370>
    f1b8:	20 03 f3 c0 	move s25, s6
    f1bc:	20 cc 00 0f 	move s1, 51
    f1c0:	03 00 00 f6 	b 12 <F_CastTicker+0x360>
    f1c4:	20 03 f3 c0 	move s25, s6
    f1c8:	20 40 00 0f 	move s1, 16
    f1cc:	00 00 00 0f 	move s0, 0
    f1d0:	85 f4 00 f8 	call 250388 <S_StartSound>
    f1d4:	ba 00 00 a8 	load_32 s5, (s26)
    f1d8:	c0 80 fc c0 	move s6, s25
    f1dc:	05 30 00 11 	cmpne_i s0, s5, 12
    f1e0:	00 f1 ff f5 	bnz s0, -480 <F_CastTicker+0x194>
    f1e4:	1a 04 00 4f 	movehi s0, 58
    f1e8:	7a 04 00 4f 	movehi s3, 58
    f1ec:	40 04 00 0f 	move s2, 1
    f1f0:	20 f0 16 00 	or s1, s0, 1468
    f1f4:	1a 04 00 4f 	movehi s0, 58
    f1f8:	41 00 00 88 	store_32 s2, (s1)
    f1fc:	43 20 17 00 	or s2, s3, 1480
    f200:	00 30 17 00 	or s0, s0, 1484
    f204:	73 04 00 4f 	movehi s3, 51
    f208:	20 00 00 a8 	load_32 s1, (s0)
    f20c:	42 00 00 a8 	load_32 s2, (s2)
    f210:	63 00 43 00 	or s3, s3, 4288
    f214:	a1 00 00 10 	cmpeq_i s5, s1, 0
    f218:	42 0c 00 0b 	shl s2, s2, 3
    f21c:	43 00 51 c0 	add_i s2, s3, s2
    f220:	78 04 00 4f 	movehi s3, 56
    f224:	42 10 00 a8 	load_32 s2, 4(s2)
    f228:	63 30 03 00 	or s3, s3, 204
    f22c:	42 70 01 07 	mull_i s2, s2, 92
    f230:	63 00 51 c0 	add_i s3, s3, s2
    f234:	43 b0 00 05 	add_i s2, s3, 44
    f238:	63 a0 00 05 	add_i s3, s3, 40
    f23c:	80 00 f1 c0 	move s4, s2
    f240:	45 00 00 f4 	bnz s5, 8 <F_CastTicker+0x3dc>
    f244:	80 80 f1 c0 	move s4, s3
    f248:	84 00 00 a8 	load_32 s4, (s4)
    f24c:	21 04 00 03 	xor s1, s1, 1
    f250:	a4 70 00 07 	mull_i s5, s4, 28
    f254:	bb 80 52 c0 	add_i s5, s27, s5
    f258:	a6 00 00 88 	store_32 s5, (s6)
    f25c:	a0 30 00 0f 	move s5, 12
    f260:	20 00 00 88 	store_32 s1, (s0)
    f264:	e4 ec ff f5 	bnz s4, -612 <F_CastTicker+0x194>
    f268:	61 00 00 f2 	bz s1, 12 <F_CastTicker+0x408>
    f26c:	03 00 00 a8 	load_32 s0, (s3)
    f270:	02 00 00 f6 	b 8 <F_CastTicker+0x40c>
    f274:	02 00 00 a8 	load_32 s0, (s2)
    f278:	00 70 00 07 	mull_i s0, s0, 28
    f27c:	1b 00 50 c0 	add_i s0, s27, s0
    f280:	06 00 00 88 	store_32 s0, (s6)
    f284:	1a 04 00 4f 	movehi s0, 58
    f288:	00 f0 16 00 	or s0, s0, 1468
    f28c:	00 00 00 a8 	load_32 s0, (s0)
    f290:	20 ec ff f5 	bnz s0, -636 <F_CastTicker+0x1a8>
    f294:	06 00 00 a8 	load_32 s0, (s6)
    f298:	00 20 00 a8 	load_32 s0, 8(s0)
    f29c:	20 fc ff 10 	cmpeq_i s1, s0, -1
    f2a0:	01 f2 ff f5 	bnz s1, -448 <F_CastTicker+0x274>
    f2a4:	90 ff ff f7 	b -448 <F_CastTicker+0x278>
    f2a8:	20 03 f3 c0 	move s25, s6
    f2ac:	20 10 00 0f 	move s1, 4
    f2b0:	c7 ff ff f7 	b -228 <F_CastTicker+0x360>
    f2b4:	20 03 f3 c0 	move s25, s6
    f2b8:	20 04 00 0f 	move s1, 1
    f2bc:	c4 ff ff f7 	b -240 <F_CastTicker+0x360>
    f2c0:	00 20 0a 10 	cmpeq_i s0, s0, 648
    f2c4:	40 00 00 f4 	bnz s0, 8 <F_CastTicker+0x460>
    f2c8:	c5 ff ff f7 	b -236 <F_CastTicker+0x370>
    f2cc:	20 03 f3 c0 	move s25, s6
    f2d0:	20 20 00 0f 	move s1, 8
    f2d4:	be ff ff f7 	b -264 <F_CastTicker+0x360>
    f2d8:	00 00 04 10 	cmpeq_i s0, s0, 256
    f2dc:	40 00 00 f4 	bnz s0, 8 <F_CastTicker+0x478>
    f2e0:	bf ff ff f7 	b -260 <F_CastTicker+0x370>
    f2e4:	20 03 f3 c0 	move s25, s6
    f2e8:	20 d8 00 0f 	move s1, 54
    f2ec:	b8 ff ff f7 	b -288 <F_CastTicker+0x360>
    f2f0:	20 03 f3 c0 	move s25, s6
    f2f4:	20 dc 00 0f 	move s1, 55
    f2f8:	b5 ff ff f7 	b -300 <F_CastTicker+0x360>
    f2fc:	20 03 f3 c0 	move s25, s6
    f300:	20 d0 00 0f 	move s1, 52
    f304:	b2 ff ff f7 	b -312 <F_CastTicker+0x360>
    f308:	20 03 f3 c0 	move s25, s6
    f30c:	20 d4 00 0f 	move s1, 53
    f310:	af ff ff f7 	b -324 <F_CastTicker+0x360>
    f314:	20 03 f3 c0 	move s25, s6
    f318:	20 ac 01 0f 	move s1, 107
    f31c:	ac ff ff f7 	b -336 <F_CastTicker+0x360>

000000000000f320 F_TextWrite:
    f320:	de 03 ff 05 	add_i sp, sp, -64
    f324:	1e f3 00 88 	store_32 s24, 60(sp)
    f328:	3e e3 00 88 	store_32 s25, 56(sp)
    f32c:	5e d3 00 88 	store_32 s26, 52(sp)
    f330:	7e c3 00 88 	store_32 s27, 48(sp)
    f334:	fe b3 00 88 	store_32 ra, 44(sp)
    f338:	1a 04 00 4f 	movehi s0, 58
    f33c:	20 94 01 0f 	move s1, 101
    f340:	00 70 17 00 	or s0, s0, 1500
    f344:	00 00 00 a8 	load_32 s0, (s0)
    f348:	00 bf 00 f8 	call 195584 <W_CacheLumpName>
    f34c:	20 0c 00 4f 	movehi s1, 96
    f350:	1e a0 00 88 	store_32 s0, 40(sp)
    f354:	00 03 00 0f 	move s24, 0
    f358:	40 03 01 0f 	move s26, 64
    f35c:	21 20 02 00 	or s1, s1, 136
    f360:	21 03 00 a8 	load_32 s25, (s1)
    f364:	18 18 00 0b 	shl s0, s24, 6
    f368:	3e a0 00 a8 	load_32 s1, 40(sp)
    f36c:	00 00 3f 01 	and s0, s0, 4032
    f370:	61 03 50 c0 	add_i s27, s1, s0
    f374:	00 80 fc c0 	move s0, s25
    f378:	20 80 fd c0 	move s1, s27
    f37c:	40 00 fd c0 	move s2, s26
    f380:	61 0a 01 f8 	call 272772 <memcpy>
    f384:	20 80 fd c0 	move s1, s27
    f388:	19 00 01 05 	add_i s0, s25, 64
    f38c:	40 00 fd c0 	move s2, s26
    f390:	5d 0a 01 f8 	call 272756 <memcpy>
    f394:	20 80 fd c0 	move s1, s27
    f398:	19 00 02 05 	add_i s0, s25, 128
    f39c:	40 00 fd c0 	move s2, s26
    f3a0:	59 0a 01 f8 	call 272740 <memcpy>
    f3a4:	20 80 fd c0 	move s1, s27
    f3a8:	19 00 03 05 	add_i s0, s25, 192
    f3ac:	40 00 fd c0 	move s2, s26
    f3b0:	55 0a 01 f8 	call 272724 <memcpy>
    f3b4:	20 80 fd c0 	move s1, s27
    f3b8:	19 00 04 05 	add_i s0, s25, 256
    f3bc:	40 00 fd c0 	move s2, s26
    f3c0:	51 0a 01 f8 	call 272708 <memcpy>
    f3c4:	18 07 00 05 	add_i s24, s24, 1
    f3c8:	39 03 05 05 	add_i s25, s25, 320
    f3cc:	18 20 03 18 	cmplt_u s0, s24, 200
    f3d0:	a0 fc ff f5 	bnz s0, -108 <F_TextWrite+0x44>
    f3d4:	00 03 00 0f 	move s24, 0
    f3d8:	40 00 05 0f 	move s2, 320
    f3dc:	60 20 03 0f 	move s3, 200
    f3e0:	00 00 fc c0 	move s0, s24
    f3e4:	20 00 fc c0 	move s1, s24
    f3e8:	b2 da 00 f8 	call 223944 <V_MarkRect>
    f3ec:	1a 04 00 4f 	movehi s0, 58
    f3f0:	00 60 17 00 	or s0, s0, 1496
    f3f4:	00 00 00 a8 	load_32 s0, (s0)
    f3f8:	00 d8 ff 05 	add_i s0, s0, -10
    f3fc:	20 0c 00 14 	cmplt_i s1, s0, 3
    f400:	81 07 00 f4 	bnz s1, 240 <F_TextWrite+0x1d0>
    f404:	2a 54 55 4f 	movehi s1, 174762
    f408:	21 58 55 00 	or s1, s1, 5462
    f40c:	00 80 f0 c1 	mulh_i s0, s0, s1
    f410:	20 7c 00 0a 	shr s1, s0, 31
    f414:	60 83 50 c0 	add_i s27, s0, s1
    f418:	1b 00 00 12 	cmpgt_i s0, s27, 0
    f41c:	40 00 00 f4 	bnz s0, 8 <F_TextWrite+0x104>
    f420:	60 03 fc c0 	move s27, s24
    f424:	1a 04 00 4f 	movehi s0, 58
    f428:	20 0c 00 4f 	movehi s1, 96
    f42c:	40 2b 00 0f 	move s26, 10
    f430:	00 90 17 00 	or s0, s0, 1508
    f434:	00 03 00 a8 	load_32 s24, (s0)
    f438:	01 b0 02 00 	or s0, s1, 172
    f43c:	1e 80 00 88 	store_32 s0, 32(sp)
    f440:	00 00 00 0f 	move s0, 0
    f444:	1e 70 00 88 	store_32 s0, 28(sp)
    f448:	5e a3 00 88 	store_32 s26, 40(sp)
    f44c:	5e 93 00 88 	store_32 s26, 36(sp)
    f450:	18 00 00 a0 	load_u8 s0, (s24)
    f454:	20 28 00 10 	cmpeq_i s1, s0, 10
    f458:	a1 01 00 f4 	bnz s1, 52 <F_TextWrite+0x16c>
    f45c:	a0 04 00 f2 	bz s0, 148 <F_TextWrite+0x1d0>
    f460:	00 00 d0 c1 	sext_8 s0, s0
    f464:	a0 0c 01 f8 	call 275072 <toupper>
    f468:	00 7c ff 05 	add_i s0, s0, -33
    f46c:	20 00 01 18 	cmplt_u s1, s0, 64
    f470:	01 02 00 f4 	bnz s1, 64 <F_TextWrite+0x190>
    f474:	3a 13 00 05 	add_i s25, s26, 4
    f478:	7b ff ff 05 	add_i s27, s27, -1
    f47c:	18 07 00 05 	add_i s24, s24, 1
    f480:	40 83 fc c0 	move s26, s25
    f484:	7b fe ff f5 	bnz s27, -52 <F_TextWrite+0x130>
    f488:	1a 00 00 f6 	b 104 <F_TextWrite+0x1d0>
    f48c:	1e a0 00 a8 	load_32 s0, 40(sp)
    f490:	00 2c 00 05 	add_i s0, s0, 11
    f494:	1e a0 00 88 	store_32 s0, 40(sp)
    f498:	3e 93 00 a8 	load_32 s25, 36(sp)
    f49c:	7b ff ff 05 	add_i s27, s27, -1
    f4a0:	18 07 00 05 	add_i s24, s24, 1
    f4a4:	40 83 fc c0 	move s26, s25
    f4a8:	5b fd ff f5 	bnz s27, -88 <F_TextWrite+0x130>
    f4ac:	11 00 00 f6 	b 68 <F_TextWrite+0x1d0>
    f4b0:	3e 80 00 a8 	load_32 s1, 32(sp)
    f4b4:	00 08 00 0b 	shl s0, s0, 2
    f4b8:	01 00 50 c0 	add_i s0, s1, s0
    f4bc:	60 00 00 a8 	load_32 s3, (s0)
    f4c0:	03 00 00 a6 	load_s16 s0, (s3)
    f4c4:	3a 03 50 c0 	add_i s25, s26, s0
    f4c8:	19 00 05 12 	cmpgt_i s0, s25, 320
    f4cc:	20 01 00 f4 	bnz s0, 36 <F_TextWrite+0x1d0>
    f4d0:	00 00 fd c0 	move s0, s26
    f4d4:	3e a0 00 a8 	load_32 s1, 40(sp)
    f4d8:	5e 70 00 a8 	load_32 s2, 28(sp)
    f4dc:	fb da 00 f8 	call 224236 <V_DrawPatch>
    f4e0:	7b ff ff 05 	add_i s27, s27, -1
    f4e4:	18 07 00 05 	add_i s24, s24, 1
    f4e8:	40 83 fc c0 	move s26, s25
    f4ec:	3b fb ff f5 	bnz s27, -156 <F_TextWrite+0x130>
    f4f0:	fe b3 00 a8 	load_32 ra, 44(sp)
    f4f4:	7e c3 00 a8 	load_32 s27, 48(sp)
    f4f8:	5e d3 00 a8 	load_32 s26, 52(sp)
    f4fc:	3e e3 00 a8 	load_32 s25, 56(sp)
    f500:	1e f3 00 a8 	load_32 s24, 60(sp)
    f504:	de 03 01 05 	add_i sp, sp, 64
    f508:	1f 00 00 f0 	ret

000000000000f50c F_CastPrint:
    f50c:	de 03 ff 05 	add_i sp, sp, -64
    f510:	1e f3 00 88 	store_32 s24, 60(sp)
    f514:	3e e3 00 88 	store_32 s25, 56(sp)
    f518:	5e d3 00 88 	store_32 s26, 52(sp)
    f51c:	7e c3 00 88 	store_32 s27, 48(sp)
    f520:	fe b3 00 88 	store_32 ra, 44(sp)
    f524:	60 03 f0 c0 	move s27, s0
    f528:	5b 08 00 f2 	bz s27, 264 <F_CastPrint+0x124>
    f52c:	1b 00 00 a0 	load_u8 s0, (s27)
    f530:	a0 07 00 f2 	bz s0, 244 <F_CastPrint+0x118>
    f534:	20 0c 00 4f 	movehi s1, 96
    f538:	20 03 00 0f 	move s25, 0
    f53c:	40 13 00 0f 	move s26, 4
    f540:	21 b0 02 00 	or s1, s1, 172
    f544:	3e a0 00 88 	store_32 s1, 40(sp)
    f548:	00 83 fd c0 	move s24, s27
    f54c:	00 00 d0 c1 	sext_8 s0, s0
    f550:	18 07 00 05 	add_i s24, s24, 1
    f554:	64 0c 01 f8 	call 274832 <toupper>
    f558:	00 7c ff 05 	add_i s0, s0, -33
    f55c:	20 00 fd c0 	move s1, s26
    f560:	40 00 01 18 	cmplt_u s2, s0, 64
    f564:	42 00 00 f4 	bnz s2, 8 <F_CastPrint+0x60>
    f568:	06 00 00 f6 	b 24 <F_CastPrint+0x74>
    f56c:	3e a0 00 a8 	load_32 s1, 40(sp)
    f570:	00 08 00 0b 	shl s0, s0, 2
    f574:	01 00 50 c0 	add_i s0, s1, s0
    f578:	00 00 00 a8 	load_32 s0, (s0)
    f57c:	20 00 00 a6 	load_s16 s1, (s0)
    f580:	18 00 00 a0 	load_u8 s0, (s24)
    f584:	39 83 50 c0 	add_i s25, s25, s1
    f588:	40 00 00 f2 	bz s0, 8 <F_CastPrint+0x84>
    f58c:	f0 ff ff f7 	b -64 <F_CastPrint+0x40>
    f590:	19 7c 00 0a 	shr s0, s25, 31
    f594:	19 00 50 c0 	add_i s0, s25, s0
    f598:	20 80 02 0f 	move s1, 160
    f59c:	00 04 00 09 	ashr s0, s0, 1
    f5a0:	21 03 60 c0 	sub_i s25, s1, s0
    f5a4:	7b 04 00 f2 	bz s27, 140 <F_CastPrint+0x124>
    f5a8:	1b 00 00 a0 	load_u8 s0, (s27)
    f5ac:	20 04 00 f2 	bz s0, 132 <F_CastPrint+0x124>
    f5b0:	20 0c 00 4f 	movehi s1, 96
    f5b4:	00 13 00 0f 	move s24, 4
    f5b8:	21 b0 02 00 	or s1, s1, 172
    f5bc:	3e a0 00 88 	store_32 s1, 40(sp)
    f5c0:	20 d0 02 0f 	move s1, 180
    f5c4:	3e 90 00 88 	store_32 s1, 36(sp)
    f5c8:	20 00 00 0f 	move s1, 0
    f5cc:	3e 80 00 88 	store_32 s1, 32(sp)
    f5d0:	00 00 d0 c1 	sext_8 s0, s0
    f5d4:	7b 07 00 05 	add_i s27, s27, 1
    f5d8:	43 0c 01 f8 	call 274700 <toupper>
    f5dc:	00 7c ff 05 	add_i s0, s0, -33
    f5e0:	40 03 fc c0 	move s26, s24
    f5e4:	20 00 01 18 	cmplt_u s1, s0, 64
    f5e8:	41 00 00 f4 	bnz s1, 8 <F_CastPrint+0xe4>
    f5ec:	0a 00 00 f6 	b 40 <F_CastPrint+0x108>
    f5f0:	3e a0 00 a8 	load_32 s1, 40(sp)
    f5f4:	00 08 00 0b 	shl s0, s0, 2
    f5f8:	01 00 50 c0 	add_i s0, s1, s0
    f5fc:	60 00 00 a8 	load_32 s3, (s0)
    f600:	43 03 00 a6 	load_s16 s26, (s3)
    f604:	00 80 fc c0 	move s0, s25
    f608:	3e 90 00 a8 	load_32 s1, 36(sp)
    f60c:	5e 80 00 a8 	load_32 s2, 32(sp)
    f610:	ae da 00 f8 	call 223928 <V_DrawPatch>
    f614:	1b 00 00 a0 	load_u8 s0, (s27)
    f618:	39 03 5d c0 	add_i s25, s25, s26
    f61c:	a0 00 00 f2 	bz s0, 20 <F_CastPrint+0x124>
    f620:	ec ff ff f7 	b -80 <F_CastPrint+0xc4>
    f624:	20 83 02 0f 	move s25, 160
    f628:	5b 00 00 f2 	bz s27, 8 <F_CastPrint+0x124>
    f62c:	df ff ff f7 	b -132 <F_CastPrint+0x9c>
    f630:	fe b3 00 a8 	load_32 ra, 44(sp)
    f634:	7e c3 00 a8 	load_32 s27, 48(sp)
    f638:	5e d3 00 a8 	load_32 s26, 52(sp)
    f63c:	3e e3 00 a8 	load_32 s25, 56(sp)
    f640:	1e f3 00 a8 	load_32 s24, 60(sp)
    f644:	de 03 01 05 	add_i sp, sp, 64
    f648:	1f 00 00 f0 	ret

000000000000f64c F_CastDrawer:
    f64c:	de 03 ff 05 	add_i sp, sp, -64
    f650:	1e f3 00 88 	store_32 s24, 60(sp)
    f654:	3e e3 00 88 	store_32 s25, 56(sp)
    f658:	5e d3 00 88 	store_32 s26, 52(sp)
    f65c:	7e c3 00 88 	store_32 s27, 48(sp)
    f660:	fe b3 00 88 	store_32 ra, 44(sp)
    f664:	00 00 00 4f 	movehi s0, 0
    f668:	20 94 01 0f 	move s1, 101
    f66c:	00 58 47 00 	or s0, s0, 4566
    f670:	36 be 00 f8 	call 194776 <W_CacheLumpName>
    f674:	00 03 00 0f 	move s24, 0
    f678:	60 00 f0 c0 	move s3, s0
    f67c:	00 00 fc c0 	move s0, s24
    f680:	20 00 fc c0 	move s1, s24
    f684:	40 00 fc c0 	move s2, s24
    f688:	90 da 00 f8 	call 223808 <V_DrawPatch>
    f68c:	1a 04 00 4f 	movehi s0, 58
    f690:	33 04 00 4f 	movehi s1, 51
    f694:	00 20 17 00 	or s0, s0, 1480
    f698:	21 00 43 00 	or s1, s1, 4288
    f69c:	00 00 00 a8 	load_32 s0, (s0)
    f6a0:	00 0c 00 0b 	shl s0, s0, 3
    f6a4:	01 00 50 c0 	add_i s0, s1, s0
    f6a8:	20 03 00 a8 	load_32 s25, (s0)
    f6ac:	99 07 00 f2 	bz s25, 240 <F_CastDrawer+0x150>
    f6b0:	59 03 00 a0 	load_u8 s26, (s25)
    f6b4:	5a 07 00 f2 	bz s26, 232 <F_CastDrawer+0x150>
    f6b8:	00 0c 00 4f 	movehi s0, 96
    f6bc:	20 10 00 0f 	move s1, 4
    f6c0:	3e a0 00 88 	store_32 s1, 40(sp)
    f6c4:	00 b0 02 00 	or s0, s0, 172
    f6c8:	1e 90 00 88 	store_32 s0, 36(sp)
    f6cc:	00 00 fd c0 	move s0, s26
    f6d0:	60 83 fc c0 	move s27, s25
    f6d4:	00 00 d0 c1 	sext_8 s0, s0
    f6d8:	7b 07 00 05 	add_i s27, s27, 1
    f6dc:	02 0c 01 f8 	call 274440 <toupper>
    f6e0:	00 7c ff 05 	add_i s0, s0, -33
    f6e4:	3e a0 00 a8 	load_32 s1, 40(sp)
    f6e8:	40 00 01 18 	cmplt_u s2, s0, 64
    f6ec:	42 00 00 f4 	bnz s2, 8 <F_CastDrawer+0xa8>
    f6f0:	06 00 00 f6 	b 24 <F_CastDrawer+0xbc>
    f6f4:	3e 90 00 a8 	load_32 s1, 36(sp)
    f6f8:	00 08 00 0b 	shl s0, s0, 2
    f6fc:	01 00 50 c0 	add_i s0, s1, s0
    f700:	00 00 00 a8 	load_32 s0, (s0)
    f704:	20 00 00 a6 	load_s16 s1, (s0)
    f708:	1b 00 00 a0 	load_u8 s0, (s27)
    f70c:	18 83 50 c0 	add_i s24, s24, s1
    f710:	40 00 00 f2 	bz s0, 8 <F_CastDrawer+0xcc>
    f714:	f0 ff ff f7 	b -64 <F_CastDrawer+0x88>
    f718:	3a 04 00 f2 	bz s26, 132 <F_CastDrawer+0x150>
    f71c:	18 7c 00 0a 	shr s0, s24, 31
    f720:	18 00 50 c0 	add_i s0, s24, s0
    f724:	20 80 02 0f 	move s1, 160
    f728:	00 04 00 09 	ashr s0, s0, 1
    f72c:	01 03 60 c0 	sub_i s24, s1, s0
    f730:	00 10 00 0f 	move s0, 4
    f734:	1e a0 00 88 	store_32 s0, 40(sp)
    f738:	00 d0 02 0f 	move s0, 180
    f73c:	1e 80 00 88 	store_32 s0, 32(sp)
    f740:	00 00 00 0f 	move s0, 0
    f744:	1e 70 00 88 	store_32 s0, 28(sp)
    f748:	00 00 dd c1 	sext_8 s0, s26
    f74c:	39 07 00 05 	add_i s25, s25, 1
    f750:	e5 0b 01 f8 	call 274324 <toupper>
    f754:	00 7c ff 05 	add_i s0, s0, -33
    f758:	7e a3 00 a8 	load_32 s27, 40(sp)
    f75c:	20 00 01 18 	cmplt_u s1, s0, 64
    f760:	41 00 00 f4 	bnz s1, 8 <F_CastDrawer+0x11c>
    f764:	0a 00 00 f6 	b 40 <F_CastDrawer+0x140>
    f768:	3e 90 00 a8 	load_32 s1, 36(sp)
    f76c:	00 08 00 0b 	shl s0, s0, 2
    f770:	01 00 50 c0 	add_i s0, s1, s0
    f774:	60 00 00 a8 	load_32 s3, (s0)
    f778:	63 03 00 a6 	load_s16 s27, (s3)
    f77c:	00 00 fc c0 	move s0, s24
    f780:	3e 80 00 a8 	load_32 s1, 32(sp)
    f784:	5e 70 00 a8 	load_32 s2, 28(sp)
    f788:	50 da 00 f8 	call 223552 <V_DrawPatch>
    f78c:	59 03 00 a0 	load_u8 s26, (s25)
    f790:	18 83 5d c0 	add_i s24, s24, s27
    f794:	5a 00 00 f2 	bz s26, 8 <F_CastDrawer+0x150>
    f798:	ec ff ff f7 	b -80 <F_CastDrawer+0xfc>
    f79c:	12 08 00 4f 	movehi s0, 82
    f7a0:	3a 04 00 4f 	movehi s1, 58
    f7a4:	00 20 61 00 	or s0, s0, 6216
    f7a8:	21 40 17 00 	or s1, s1, 1488
    f7ac:	00 00 00 a8 	load_32 s0, (s0)
    f7b0:	21 00 00 a8 	load_32 s1, (s1)
    f7b4:	41 00 00 a8 	load_32 s2, (s1)
    f7b8:	42 0c 00 0b 	shl s2, s2, 3
    f7bc:	00 00 51 c0 	add_i s0, s0, s2
    f7c0:	43 00 00 4f 	movehi s2, 3
    f7c4:	00 10 00 a8 	load_32 s0, 4(s0)
    f7c8:	21 10 00 a8 	load_32 s1, 4(s1)
    f7cc:	42 fc 7f 00 	or s2, s2, 8191
    f7d0:	21 00 11 c0 	and s1, s1, s2
    f7d4:	5d 04 00 4f 	movehi s2, 61
    f7d8:	21 70 00 07 	mull_i s1, s1, 28
    f7dc:	00 80 50 c0 	add_i s0, s0, s1
    f7e0:	22 50 47 00 	or s1, s2, 4564
    f7e4:	40 10 00 a6 	load_s16 s2, 4(s0)
    f7e8:	00 53 00 a0 	load_u8 s24, 20(s0)
    f7ec:	01 00 00 a8 	load_32 s0, (s1)
    f7f0:	20 94 01 0f 	move s1, 101
    f7f4:	00 00 51 c0 	add_i s0, s0, s2
    f7f8:	88 bd 00 f8 	call 194080 <W_CacheLumpNum>
    f7fc:	60 00 f0 c0 	move s3, s0
    f800:	00 80 02 0f 	move s0, 160
    f804:	20 a8 02 0f 	move s1, 170
    f808:	40 00 00 0f 	move s2, 0
    f80c:	78 00 00 f2 	bz s24, 12 <F_CastDrawer+0x1cc>
    f810:	a0 da 00 f8 	call 223872 <V_DrawPatchFlipped>
    f814:	02 00 00 f6 	b 8 <F_CastDrawer+0x1d0>
    f818:	2c da 00 f8 	call 223408 <V_DrawPatch>
    f81c:	fe b3 00 a8 	load_32 ra, 44(sp)
    f820:	7e c3 00 a8 	load_32 s27, 48(sp)
    f824:	5e d3 00 a8 	load_32 s26, 52(sp)
    f828:	3e e3 00 a8 	load_32 s25, 56(sp)
    f82c:	1e f3 00 a8 	load_32 s24, 60(sp)
    f830:	de 03 01 05 	add_i sp, sp, 64
    f834:	1f 00 00 f0 	ret

000000000000f838 F_DrawPatchCol:
    f838:	42 08 00 0b 	shl s2, s2, 2
    f83c:	41 00 51 c0 	add_i s2, s1, s2
    f840:	60 0c 00 4f 	movehi s3, 96
    f844:	42 20 00 a8 	load_32 s2, 8(s2)
    f848:	63 20 02 00 	or s3, s3, 136
    f84c:	21 00 51 c0 	add_i s1, s1, s2
    f850:	43 00 00 a8 	load_32 s2, (s3)
    f854:	81 00 00 a0 	load_u8 s4, (s1)
    f858:	64 fc 03 10 	cmpeq_i s3, s4, 255
    f85c:	e3 02 00 f4 	bnz s3, 92 <F_DrawPatchCol+0x80>
    f860:	02 00 50 c0 	add_i s0, s2, s0
    f864:	40 00 00 0f 	move s2, 0
    f868:	61 04 00 a0 	load_u8 s3, 1(s1)
    f86c:	a0 00 f1 c0 	move s5, s2
    f870:	83 01 00 f2 	bz s3, 48 <F_DrawPatchCol+0x68>
    f874:	84 fc 03 01 	and s4, s4, 255
    f878:	a1 0c 00 05 	add_i s5, s1, 3
    f87c:	84 00 05 07 	mull_i s4, s4, 320
    f880:	80 00 52 c0 	add_i s4, s0, s4
    f884:	c5 00 00 a0 	load_u8 s6, (s5)
    f888:	63 fc ff 05 	add_i s3, s3, -1
    f88c:	c4 00 00 82 	store_8 s6, (s4)
    f890:	a5 04 00 05 	add_i s5, s5, 1
    f894:	84 00 05 05 	add_i s4, s4, 320
    f898:	63 ff ff f5 	bnz s3, -20 <F_DrawPatchCol+0x4c>
    f89c:	a1 04 00 a0 	load_u8 s5, 1(s1)
    f8a0:	65 fc 03 01 	and s3, s5, 255
    f8a4:	21 80 51 c0 	add_i s1, s1, s3
    f8a8:	81 10 00 a0 	load_u8 s4, 4(s1)
    f8ac:	21 10 00 05 	add_i s1, s1, 4
    f8b0:	64 fc 03 11 	cmpne_i s3, s4, 255
    f8b4:	a3 fd ff f5 	bnz s3, -76 <F_DrawPatchCol+0x30>
    f8b8:	1f 00 00 f0 	ret

000000000000f8bc F_BunnyScroll:
    f8bc:	de 03 fe 05 	add_i sp, sp, -128
    f8c0:	1e f3 01 88 	store_32 s24, 124(sp)
    f8c4:	3e e3 01 88 	store_32 s25, 120(sp)
    f8c8:	5e d3 01 88 	store_32 s26, 116(sp)
    f8cc:	7e c3 01 88 	store_32 s27, 112(sp)
    f8d0:	fe b3 01 88 	store_32 ra, 108(sp)
    f8d4:	02 00 00 4f 	movehi s0, 2
    f8d8:	20 cb 00 0f 	move s25, 50
    f8dc:	00 10 5e 00 	or s0, s0, 6020
    f8e0:	20 80 fc c0 	move s1, s25
    f8e4:	99 bd 00 f8 	call 194148 <W_CacheLumpName>
    f8e8:	00 03 f0 c0 	move s24, s0
    f8ec:	00 00 00 4f 	movehi s0, 0
    f8f0:	20 80 fc c0 	move s1, s25
    f8f4:	00 f4 62 00 	or s0, s0, 6333
    f8f8:	94 bd 00 f8 	call 194128 <W_CacheLumpName>
    f8fc:	40 03 00 0f 	move s26, 0
    f900:	60 03 05 0f 	move s27, 320
    f904:	20 03 f0 c0 	move s25, s0
    f908:	00 00 fd c0 	move s0, s26
    f90c:	20 00 fd c0 	move s1, s26
    f910:	60 20 03 0f 	move s3, 200
    f914:	40 80 fd c0 	move s2, s27
    f918:	66 d9 00 f8 	call 222616 <V_MarkRect>
    f91c:	1a 04 00 4f 	movehi s0, 58
    f920:	00 60 17 00 	or s0, s0, 1496
    f924:	20 00 00 a8 	load_32 s1, (s0)
    f928:	21 68 fc 05 	add_i s1, s1, -230
    f92c:	41 7c 00 0a 	shr s2, s1, 31
    f930:	21 00 51 c0 	add_i s1, s1, s2
    f934:	21 04 00 09 	ashr s1, s1, 1
    f938:	3b 80 60 c0 	sub_i s1, s27, s1
    f93c:	41 00 05 14 	cmplt_i s2, s1, 320
    f940:	42 00 00 f4 	bnz s2, 8 <F_BunnyScroll+0x8c>
    f944:	20 80 fd c0 	move s1, s27
    f948:	41 00 00 12 	cmpgt_i s2, s1, 0
    f94c:	42 00 00 f4 	bnz s2, 8 <F_BunnyScroll+0x98>
    f950:	20 00 fd c0 	move s1, s26
    f954:	40 0c 00 4f 	movehi s2, 96
    f958:	60 00 fd c0 	move s3, s26
    f95c:	42 20 02 00 	or s2, s2, 136
    f960:	83 80 50 c0 	add_i s4, s3, s1
    f964:	a4 fc 04 16 	cmpgt_u s5, s4, 319
    f968:	e5 03 00 f4 	bnz s5, 124 <F_BunnyScroll+0x128>
    f96c:	84 08 00 0b 	shl s4, s4, 2
    f970:	98 00 52 c0 	add_i s4, s24, s4
    f974:	84 20 00 a8 	load_32 s4, 8(s4)
    f978:	a2 00 00 a8 	load_32 s5, (s2)
    f97c:	98 00 52 c0 	add_i s4, s24, s4
    f980:	e4 00 00 a0 	load_u8 s7, (s4)
    f984:	c7 fc 03 10 	cmpeq_i s6, s7, 255
    f988:	86 06 00 f4 	bnz s6, 208 <F_BunnyScroll+0x19c>
    f98c:	a5 80 51 c0 	add_i s5, s5, s3
    f990:	c4 04 00 a0 	load_u8 s6, 1(s4)
    f994:	00 01 fd c0 	move s8, s26
    f998:	86 01 00 f2 	bz s6, 48 <F_BunnyScroll+0x10c>
    f99c:	e7 fc 03 01 	and s7, s7, 255
    f9a0:	04 0d 00 05 	add_i s8, s4, 3
    f9a4:	e7 00 05 07 	mull_i s7, s7, 320
    f9a8:	e5 80 53 c0 	add_i s7, s5, s7
    f9ac:	28 01 00 a0 	load_u8 s9, (s8)
    f9b0:	c6 fc ff 05 	add_i s6, s6, -1
    f9b4:	27 01 00 82 	store_8 s9, (s7)
    f9b8:	08 05 00 05 	add_i s8, s8, 1
    f9bc:	e7 00 05 05 	add_i s7, s7, 320
    f9c0:	66 ff ff f5 	bnz s6, -20 <F_BunnyScroll+0xf0>
    f9c4:	04 05 00 a0 	load_u8 s8, 1(s4)
    f9c8:	c8 fc 03 01 	and s6, s8, 255
    f9cc:	84 00 53 c0 	add_i s4, s4, s6
    f9d0:	e4 10 00 a0 	load_u8 s7, 4(s4)
    f9d4:	84 10 00 05 	add_i s4, s4, 4
    f9d8:	c7 fc 03 10 	cmpeq_i s6, s7, 255
    f9dc:	e6 03 00 f4 	bnz s6, 124 <F_BunnyScroll+0x19c>
    f9e0:	ec ff ff f7 	b -80 <F_BunnyScroll+0xd4>
    f9e4:	84 08 00 0b 	shl s4, s4, 2
    f9e8:	99 00 52 c0 	add_i s4, s25, s4
    f9ec:	84 20 ec a9 	load_32 s4, -1272(s4)
    f9f0:	a2 00 00 a8 	load_32 s5, (s2)
    f9f4:	99 00 52 c0 	add_i s4, s25, s4
    f9f8:	e4 00 00 a0 	load_u8 s7, (s4)
    f9fc:	c7 fc 03 10 	cmpeq_i s6, s7, 255
    fa00:	c6 02 00 f4 	bnz s6, 88 <F_BunnyScroll+0x19c>
    fa04:	a5 80 51 c0 	add_i s5, s5, s3
    fa08:	c4 04 00 a0 	load_u8 s6, 1(s4)
    fa0c:	00 01 fd c0 	move s8, s26
    fa10:	86 01 00 f2 	bz s6, 48 <F_BunnyScroll+0x184>
    fa14:	e7 fc 03 01 	and s7, s7, 255
    fa18:	04 0d 00 05 	add_i s8, s4, 3
    fa1c:	e7 00 05 07 	mull_i s7, s7, 320
    fa20:	e5 80 53 c0 	add_i s7, s5, s7
    fa24:	28 01 00 a0 	load_u8 s9, (s8)
    fa28:	c6 fc ff 05 	add_i s6, s6, -1
    fa2c:	27 01 00 82 	store_8 s9, (s7)
    fa30:	08 05 00 05 	add_i s8, s8, 1
    fa34:	e7 00 05 05 	add_i s7, s7, 320
    fa38:	66 ff ff f5 	bnz s6, -20 <F_BunnyScroll+0x168>
    fa3c:	04 05 00 a0 	load_u8 s8, 1(s4)
    fa40:	c8 fc 03 01 	and s6, s8, 255
    fa44:	84 00 53 c0 	add_i s4, s4, s6
    fa48:	e4 10 00 a0 	load_u8 s7, 4(s4)
    fa4c:	84 10 00 05 	add_i s4, s4, 4
    fa50:	c7 fc 03 11 	cmpne_i s6, s7, 255
    fa54:	a6 fd ff f5 	bnz s6, -76 <F_BunnyScroll+0x14c>
    fa58:	63 04 00 05 	add_i s3, s3, 1
    fa5c:	83 00 05 18 	cmplt_u s4, s3, 320
    fa60:	04 f8 ff f5 	bnz s4, -256 <F_BunnyScroll+0xa4>
    fa64:	00 00 00 a8 	load_32 s0, (s0)
    fa68:	20 a8 11 14 	cmplt_i s1, s0, 1130
    fa6c:	61 06 00 f4 	bnz s1, 204 <F_BunnyScroll+0x27c>
    fa70:	20 6c 12 12 	cmpgt_i s1, s0, 1179
    fa74:	e1 01 00 f4 	bnz s1, 60 <F_BunnyScroll+0x1f4>
    fa78:	00 00 00 4f 	movehi s0, 0
    fa7c:	20 94 01 0f 	move s1, 101
    fa80:	00 0c 63 00 	or s0, s0, 6339
    fa84:	31 bd 00 f8 	call 193732 <W_CacheLumpName>
    fa88:	00 03 00 0f 	move s24, 0
    fa8c:	60 00 f0 c0 	move s3, s0
    fa90:	00 b0 01 0f 	move s0, 108
    fa94:	20 10 01 0f 	move s1, 68
    fa98:	40 00 fc c0 	move s2, s24
    fa9c:	8b d9 00 f8 	call 222764 <V_DrawPatch>
    faa0:	00 0c 00 4f 	movehi s0, 96
    faa4:	00 30 1b 00 	or s0, s0, 1740
    faa8:	00 03 00 88 	store_32 s24, (s0)
    faac:	23 00 00 f6 	b 140 <F_BunnyScroll+0x27c>
    fab0:	33 64 66 4f 	movehi s1, 209715
    fab4:	00 90 ed 05 	add_i s0, s0, -1180
    fab8:	21 9c 19 00 	or s1, s1, 1639
    fabc:	00 80 f0 c1 	mulh_i s0, s0, s1
    fac0:	20 04 00 09 	ashr s1, s0, 1
    fac4:	00 7c 00 0a 	shr s0, s0, 31
    fac8:	01 03 50 c0 	add_i s24, s1, s0
    facc:	18 18 00 14 	cmplt_i s0, s24, 6
    fad0:	40 00 00 f4 	bnz s0, 8 <F_BunnyScroll+0x21c>
    fad4:	00 1b 00 0f 	move s24, 6
    fad8:	00 0c 00 4f 	movehi s0, 96
    fadc:	20 33 1b 00 	or s25, s0, 1740
    fae0:	19 00 00 a8 	load_32 s0, (s25)
    fae4:	18 00 50 c1 	cmple_i s0, s24, s0
    fae8:	a0 00 00 f4 	bnz s0, 20 <F_BunnyScroll+0x240>
    faec:	00 00 00 0f 	move s0, 0
    faf0:	20 04 00 0f 	move s1, 1
    faf4:	3c f2 00 f8 	call 248048 <S_StartSound>
    faf8:	19 03 00 88 	store_32 s24, (s25)
    fafc:	00 00 00 4f 	movehi s0, 0
    fb00:	1e 23 00 88 	store_32 s24, 8(sp)
    fb04:	1e 8b 01 05 	add_i s24, sp, 98
    fb08:	1e 03 00 88 	store_32 s24, (sp)
    fb0c:	00 08 2c 00 	or s0, s0, 2818
    fb10:	1e 10 00 88 	store_32 s0, 4(sp)
    fb14:	bd 08 01 f8 	call 271092 <sprintf>
    fb18:	20 94 01 0f 	move s1, 101
    fb1c:	00 00 fc c0 	move s0, s24
    fb20:	0a bd 00 f8 	call 193576 <W_CacheLumpName>
    fb24:	60 00 f0 c0 	move s3, s0
    fb28:	00 b0 01 0f 	move s0, 108
    fb2c:	20 10 01 0f 	move s1, 68
    fb30:	40 00 00 0f 	move s2, 0
    fb34:	65 d9 00 f8 	call 222612 <V_DrawPatch>
    fb38:	fe b3 01 a8 	load_32 ra, 108(sp)
    fb3c:	7e c3 01 a8 	load_32 s27, 112(sp)
    fb40:	5e d3 01 a8 	load_32 s26, 116(sp)
    fb44:	3e e3 01 a8 	load_32 s25, 120(sp)
    fb48:	1e f3 01 a8 	load_32 s24, 124(sp)
    fb4c:	de 03 02 05 	add_i sp, sp, 128
    fb50:	1f 00 00 f0 	ret

000000000000fb54 F_Drawer:
    fb54:	de 03 ff 05 	add_i sp, sp, -64
    fb58:	fe f3 00 88 	store_32 ra, 60(sp)
    fb5c:	1a 04 00 4f 	movehi s0, 58
    fb60:	00 80 17 00 	or s0, s0, 1504
    fb64:	00 00 00 a8 	load_32 s0, (s0)
    fb68:	e0 00 00 f2 	bz s0, 28 <F_Drawer+0x30>
    fb6c:	00 08 00 11 	cmpne_i s0, s0, 2
    fb70:	20 01 00 f4 	bnz s0, 36 <F_Drawer+0x40>
    fb74:	b6 fe ff f9 	call -1320 <F_CastDrawer>
    fb78:	fe f3 00 a8 	load_32 ra, 60(sp)
    fb7c:	de 03 01 05 	add_i sp, sp, 64
    fb80:	1f 00 00 f0 	ret
    fb84:	e7 fd ff f9 	call -2148 <F_TextWrite>
    fb88:	fe f3 00 a8 	load_32 ra, 60(sp)
    fb8c:	de 03 01 05 	add_i sp, sp, 64
    fb90:	1f 00 00 f0 	ret
    fb94:	1a 04 00 4f 	movehi s0, 58
    fb98:	00 70 6f 00 	or s0, s0, 7132
    fb9c:	00 00 00 a8 	load_32 s0, (s0)
    fba0:	00 fc ff 05 	add_i s0, s0, -1
    fba4:	20 0c 00 16 	cmpgt_u s1, s0, 3
    fba8:	01 02 00 f4 	bnz s1, 64 <F_Drawer+0x94>
    fbac:	23 00 00 4f 	movehi s1, 3
    fbb0:	00 08 00 0b 	shl s0, s0, 2
    fbb4:	21 50 2a 00 	or s1, s1, 2708
    fbb8:	00 80 50 c0 	add_i s0, s0, s1
    fbbc:	00 00 00 a8 	load_32 s0, (s0)
    fbc0:	00 00 00 f0 	b s0
    fbc4:	0b 04 00 4f 	movehi s0, 43
    fbc8:	00 00 40 00 	or s0, s0, 4096
    fbcc:	00 00 00 a8 	load_32 s0, (s0)
    fbd0:	00 0c 00 11 	cmpne_i s0, s0, 3
    fbd4:	c0 01 00 f4 	bnz s0, 56 <F_Drawer+0xb8>
    fbd8:	00 00 00 4f 	movehi s0, 0
    fbdc:	00 04 3f 00 	or s0, s0, 4033
    fbe0:	0d 00 00 f6 	b 52 <F_Drawer+0xc0>
    fbe4:	36 ff ff f9 	call -808 <F_BunnyScroll>
    fbe8:	fe f3 00 a8 	load_32 ra, 60(sp)
    fbec:	de 03 01 05 	add_i sp, sp, 64
    fbf0:	1f 00 00 f0 	ret
    fbf4:	01 00 00 4f 	movehi s0, 1
    fbf8:	00 ec 73 00 	or s0, s0, 7419
    fbfc:	06 00 00 f6 	b 24 <F_Drawer+0xc0>
    fc00:	02 00 00 4f 	movehi s0, 2
    fc04:	00 e8 3f 00 	or s0, s0, 4090
    fc08:	03 00 00 f6 	b 12 <F_Drawer+0xc0>
    fc0c:	01 00 00 4f 	movehi s0, 1
    fc10:	00 a8 41 00 	or s0, s0, 4202
    fc14:	20 94 01 0f 	move s1, 101
    fc18:	cc bc 00 f8 	call 193328 <W_CacheLumpName>
    fc1c:	60 00 f0 c0 	move s3, s0
    fc20:	00 00 00 0f 	move s0, 0
    fc24:	20 00 f0 c0 	move s1, s0
    fc28:	40 00 f0 c0 	move s2, s0
    fc2c:	27 d9 00 f8 	call 222364 <V_DrawPatch>
    fc30:	fe f3 00 a8 	load_32 ra, 60(sp)
    fc34:	de 03 01 05 	add_i sp, sp, 64
    fc38:	1f 00 00 f0 	ret

000000000000fc3c wipe_shittyColMajorXform:
    fc3c:	de 03 ff 05 	add_i sp, sp, -64
    fc40:	1e f3 00 88 	store_32 s24, 60(sp)
    fc44:	3e e3 00 88 	store_32 s25, 56(sp)
    fc48:	5e d3 00 88 	store_32 s26, 52(sp)
    fc4c:	7e c3 00 88 	store_32 s27, 48(sp)
    fc50:	fe b3 00 88 	store_32 ra, 44(sp)
    fc54:	20 03 f1 c0 	move s25, s2
    fc58:	40 83 f0 c0 	move s26, s1
    fc5c:	00 03 00 0f 	move s24, 0
    fc60:	60 03 f0 c0 	move s27, s0
    fc64:	3a 80 7c c0 	mull_i s1, s26, s25
    fc68:	01 04 00 0b 	shl s0, s1, 1
    fc6c:	1e a0 00 88 	store_32 s0, 40(sp)
    fc70:	20 04 00 0f 	move s1, 1
    fc74:	40 00 fc c0 	move s2, s24
    fc78:	18 f3 00 f8 	call 248928 <Z_Malloc>
    fc7c:	c0 00 fc c0 	move s6, s24
    fc80:	39 04 00 14 	cmplt_i s1, s25, 1
    fc84:	00 03 f0 c0 	move s24, s0
    fc88:	a1 02 00 f4 	bnz s1, 84 <wipe_shittyColMajorXform+0xa0>
    fc8c:	1a 04 00 14 	cmplt_i s0, s26, 1
    fc90:	60 02 00 f4 	bnz s0, 76 <wipe_shittyColMajorXform+0xa0>
    fc94:	00 00 f3 c0 	move s0, s6
    fc98:	20 00 7d c0 	mull_i s1, s0, s26
    fc9c:	40 00 f3 c0 	move s2, s6
    fca0:	62 80 7c c0 	mull_i s3, s2, s25
    fca4:	82 80 50 c0 	add_i s4, s2, s1
    fca8:	42 04 00 05 	add_i s2, s2, 1
    fcac:	63 00 50 c0 	add_i s3, s3, s0
    fcb0:	84 04 00 0b 	shl s4, s4, 1
    fcb4:	9b 00 52 c0 	add_i s4, s27, s4
    fcb8:	63 04 00 0b 	shl s3, s3, 1
    fcbc:	a2 00 4d c1 	cmplt_i s5, s2, s26
    fcc0:	78 80 51 c0 	add_i s3, s24, s3
    fcc4:	84 00 00 a6 	load_s16 s4, (s4)
    fcc8:	83 00 00 86 	store_16 s4, (s3)
    fccc:	a5 fe ff f5 	bnz s5, -44 <wipe_shittyColMajorXform+0x64>
    fcd0:	00 04 00 05 	add_i s0, s0, 1
    fcd4:	20 80 4c c1 	cmplt_i s1, s0, s25
    fcd8:	01 fe ff f5 	bnz s1, -64 <wipe_shittyColMajorXform+0x5c>
    fcdc:	00 80 fd c0 	move s0, s27
    fce0:	20 00 fc c0 	move s1, s24
    fce4:	5e a0 00 a8 	load_32 s2, 40(sp)
    fce8:	07 08 01 f8 	call 270364 <memcpy>
    fcec:	00 00 fc c0 	move s0, s24
    fcf0:	b1 f2 00 f8 	call 248516 <Z_Free>
    fcf4:	fe b3 00 a8 	load_32 ra, 44(sp)
    fcf8:	7e c3 00 a8 	load_32 s27, 48(sp)
    fcfc:	5e d3 00 a8 	load_32 s26, 52(sp)
    fd00:	3e e3 00 a8 	load_32 s25, 56(sp)
    fd04:	1e f3 00 a8 	load_32 s24, 60(sp)
    fd08:	de 03 01 05 	add_i sp, sp, 64
    fd0c:	1f 00 00 f0 	ret

000000000000fd10 wipe_initColorXForm:
    fd10:	de 03 ff 05 	add_i sp, sp, -64
    fd14:	fe f3 00 88 	store_32 ra, 60(sp)
    fd18:	40 0c 00 4f 	movehi s2, 96
    fd1c:	60 0c 00 4f 	movehi s3, 96
    fd20:	42 40 1b 00 	or s2, s2, 1744
    fd24:	63 50 1b 00 	or s3, s3, 1748
    fd28:	82 00 00 a8 	load_32 s4, (s2)
    fd2c:	41 00 70 c0 	mull_i s2, s1, s0
    fd30:	63 00 00 a8 	load_32 s3, (s3)
    fd34:	00 00 f2 c0 	move s0, s4
    fd38:	20 80 f1 c0 	move s1, s3
    fd3c:	f2 07 01 f8 	call 270280 <memcpy>
    fd40:	00 00 00 0f 	move s0, 0
    fd44:	fe f3 00 a8 	load_32 ra, 60(sp)
    fd48:	de 03 01 05 	add_i sp, sp, 64
    fd4c:	1f 00 00 f0 	ret

000000000000fd50 wipe_doColorXForm:
    fd50:	60 0c 00 4f 	movehi s3, 96
    fd54:	21 00 70 c0 	mull_i s1, s1, s0
    fd58:	63 40 1b 00 	or s3, s3, 1744
    fd5c:	03 00 00 a8 	load_32 s0, (s3)
    fd60:	21 04 00 f2 	bz s1, 132 <wipe_doColorXForm+0x94>
    fd64:	60 0c 00 4f 	movehi s3, 96
    fd68:	20 80 50 c0 	add_i s1, s0, s1
    fd6c:	a0 00 00 0f 	move s5, 0
    fd70:	63 60 1b 00 	or s3, s3, 1752
    fd74:	80 04 00 0f 	move s4, 1
    fd78:	63 00 00 a8 	load_32 s3, (s3)
    fd7c:	e0 00 00 a0 	load_u8 s7, (s0)
    fd80:	c3 00 00 a0 	load_u8 s6, (s3)
    fd84:	07 01 03 c1 	cmpeq_i s8, s7, s6
    fd88:	08 02 00 f4 	bnz s8, 64 <wipe_doColorXForm+0x78>
    fd8c:	07 01 93 c1 	cmple_u s8, s7, s6
    fd90:	08 01 00 f4 	bnz s8, 32 <wipe_doColorXForm+0x60>
    fd94:	a7 00 61 c0 	sub_i s5, s7, s2
    fd98:	e5 00 43 c1 	cmplt_i s7, s5, s6
    fd9c:	47 00 00 f4 	bnz s7, 8 <wipe_doColorXForm+0x54>
    fda0:	c0 80 f2 c0 	move s6, s5
    fda4:	c0 00 00 82 	store_8 s6, (s0)
    fda8:	a0 00 f2 c0 	move s5, s4
    fdac:	07 00 00 f6 	b 28 <wipe_doColorXForm+0x78>
    fdb0:	07 01 73 c1 	cmpge_u s8, s7, s6
    fdb4:	a8 00 00 f4 	bnz s8, 20 <wipe_doColorXForm+0x78>
    fdb8:	a7 00 51 c0 	add_i s5, s7, s2
    fdbc:	e5 00 23 c1 	cmpgt_i s7, s5, s6
    fdc0:	27 ff ff f5 	bnz s7, -28 <wipe_doColorXForm+0x54>
    fdc4:	f7 ff ff f7 	b -36 <wipe_doColorXForm+0x50>
    fdc8:	00 04 00 05 	add_i s0, s0, 1
    fdcc:	63 04 00 05 	add_i s3, s3, 1
    fdd0:	c0 80 10 c1 	cmpne_i s6, s0, s1
    fdd4:	46 fd ff f5 	bnz s6, -88 <wipe_doColorXForm+0x2c>
    fdd8:	05 00 00 10 	cmpeq_i s0, s5, 0
    fddc:	00 04 00 01 	and s0, s0, 1
    fde0:	1f 00 00 f0 	ret
    fde4:	a0 00 00 0f 	move s5, 0
    fde8:	05 00 00 10 	cmpeq_i s0, s5, 0
    fdec:	00 04 00 01 	and s0, s0, 1
    fdf0:	1f 00 00 f0 	ret

000000000000fdf4 wipe_exitColorXForm:
    fdf4:	00 00 00 0f 	move s0, 0
    fdf8:	1f 00 00 f0 	ret

000000000000fdfc wipe_initMelt:
    fdfc:	de 03 ff 05 	add_i sp, sp, -64
    fe00:	1e f3 00 88 	store_32 s24, 60(sp)
    fe04:	3e e3 00 88 	store_32 s25, 56(sp)
    fe08:	5e d3 00 88 	store_32 s26, 52(sp)
    fe0c:	7e c3 00 88 	store_32 s27, 48(sp)
    fe10:	fe b3 00 88 	store_32 ra, 44(sp)
    fe14:	40 0c 00 4f 	movehi s2, 96
    fe18:	60 0c 00 4f 	movehi s3, 96
    fe1c:	20 83 f0 c0 	move s25, s1
    fe20:	42 40 1b 00 	or s2, s2, 1744
    fe24:	63 50 1b 00 	or s3, s3, 1748
    fe28:	00 03 f0 c0 	move s24, s0
    fe2c:	02 00 00 a8 	load_32 s0, (s2)
    fe30:	59 00 7c c0 	mull_i s2, s25, s24
    fe34:	43 03 00 a8 	load_32 s26, (s3)
    fe38:	20 00 fd c0 	move s1, s26
    fe3c:	b2 07 01 f8 	call 270024 <memcpy>
    fe40:	18 7c 00 0a 	shr s0, s24, 31
    fe44:	18 00 50 c0 	add_i s0, s24, s0
    fe48:	40 00 00 0f 	move s2, 0
    fe4c:	5e 70 00 88 	store_32 s2, 28(sp)
    fe50:	20 04 00 0f 	move s1, 1
    fe54:	60 07 00 09 	ashr s27, s0, 1
    fe58:	1b 80 7c c0 	mull_i s0, s27, s25
    fe5c:	00 04 00 0b 	shl s0, s0, 1
    fe60:	1e 90 00 88 	store_32 s0, 36(sp)
    fe64:	9d f2 00 f8 	call 248436 <Z_Malloc>
    fe68:	38 04 00 12 	cmpgt_i s1, s24, 1
    fe6c:	de 70 00 a8 	load_32 s6, 28(sp)
    fe70:	59 00 00 12 	cmpgt_i s2, s25, 0
    fe74:	1e a3 00 88 	store_32 s24, 40(sp)
    fe78:	00 03 f0 c0 	move s24, s0
    fe7c:	21 00 11 c0 	and s1, s1, s2
    fe80:	21 04 00 01 	and s1, s1, 1
    fe84:	3e 80 00 88 	store_32 s1, 32(sp)
    fe88:	61 02 00 f2 	bz s1, 76 <wipe_initMelt+0xd8>
    fe8c:	00 00 f3 c0 	move s0, s6
    fe90:	20 80 7d c0 	mull_i s1, s0, s27
    fe94:	40 00 f3 c0 	move s2, s6
    fe98:	62 80 7c c0 	mull_i s3, s2, s25
    fe9c:	82 80 50 c0 	add_i s4, s2, s1
    fea0:	42 04 00 05 	add_i s2, s2, 1
    fea4:	63 00 50 c0 	add_i s3, s3, s0
    fea8:	84 04 00 0b 	shl s4, s4, 1
    feac:	9a 00 52 c0 	add_i s4, s26, s4
    feb0:	63 04 00 0b 	shl s3, s3, 1
    feb4:	a2 80 4d c1 	cmplt_i s5, s2, s27
    feb8:	78 80 51 c0 	add_i s3, s24, s3
    febc:	84 00 00 a6 	load_s16 s4, (s4)
    fec0:	83 00 00 86 	store_16 s4, (s3)
    fec4:	a5 fe ff f5 	bnz s5, -44 <wipe_initMelt+0x9c>
    fec8:	00 04 00 05 	add_i s0, s0, 1
    fecc:	20 80 4c c1 	cmplt_i s1, s0, s25
    fed0:	01 fe ff f5 	bnz s1, -64 <wipe_initMelt+0x94>
    fed4:	00 00 fd c0 	move s0, s26
    fed8:	20 00 fc c0 	move s1, s24
    fedc:	5e 90 00 a8 	load_32 s2, 36(sp)
    fee0:	89 07 01 f8 	call 269860 <memcpy>
    fee4:	00 00 fc c0 	move s0, s24
    fee8:	33 f2 00 f8 	call 248012 <Z_Free>
    feec:	00 0c 00 4f 	movehi s0, 96
    fef0:	40 03 00 0f 	move s26, 0
    fef4:	20 04 00 0f 	move s1, 1
    fef8:	00 60 1b 00 	or s0, s0, 1752
    fefc:	00 03 00 a8 	load_32 s24, (s0)
    ff00:	1e 90 00 a8 	load_32 s0, 36(sp)
    ff04:	40 00 fd c0 	move s2, s26
    ff08:	74 f2 00 f8 	call 248272 <Z_Malloc>
    ff0c:	c0 00 fd c0 	move s6, s26
    ff10:	40 03 f0 c0 	move s26, s0
    ff14:	1e 80 00 a8 	load_32 s0, 32(sp)
    ff18:	60 02 00 f2 	bz s0, 76 <wipe_initMelt+0x168>
    ff1c:	00 00 f3 c0 	move s0, s6
    ff20:	20 80 7d c0 	mull_i s1, s0, s27
    ff24:	40 00 f3 c0 	move s2, s6
    ff28:	62 80 7c c0 	mull_i s3, s2, s25
    ff2c:	82 80 50 c0 	add_i s4, s2, s1
    ff30:	42 04 00 05 	add_i s2, s2, 1
    ff34:	63 00 50 c0 	add_i s3, s3, s0
    ff38:	84 04 00 0b 	shl s4, s4, 1
    ff3c:	98 00 52 c0 	add_i s4, s24, s4
    ff40:	63 04 00 0b 	shl s3, s3, 1
    ff44:	a2 80 4d c1 	cmplt_i s5, s2, s27
    ff48:	7a 80 51 c0 	add_i s3, s26, s3
    ff4c:	84 00 00 a6 	load_s16 s4, (s4)
    ff50:	83 00 00 86 	store_16 s4, (s3)
    ff54:	a5 fe ff f5 	bnz s5, -44 <wipe_initMelt+0x12c>
    ff58:	00 04 00 05 	add_i s0, s0, 1
    ff5c:	20 80 4c c1 	cmplt_i s1, s0, s25
    ff60:	01 fe ff f5 	bnz s1, -64 <wipe_initMelt+0x124>
    ff64:	3e a3 00 a8 	load_32 s25, 40(sp)
    ff68:	00 00 fc c0 	move s0, s24
    ff6c:	20 00 fd c0 	move s1, s26
    ff70:	5e 90 00 a8 	load_32 s2, 36(sp)
    ff74:	79 0b 00 14 	cmplt_i s27, s25, 2
    ff78:	63 07 01 f8 	call 269708 <memcpy>
    ff7c:	00 00 fd c0 	move s0, s26
    ff80:	0d f2 00 f8 	call 247860 <Z_Free>
    ff84:	19 08 00 0b 	shl s0, s25, 2
    ff88:	20 07 00 0f 	move s25, 1
    ff8c:	40 03 00 0f 	move s26, 0
    ff90:	20 80 fc c0 	move s1, s25
    ff94:	40 00 fd c0 	move s2, s26
    ff98:	50 f2 00 f8 	call 248128 <Z_Malloc>
    ff9c:	20 0c 00 4f 	movehi s1, 96
    ffa0:	01 73 1b 00 	or s24, s1, 1756
    ffa4:	18 00 00 88 	store_32 s0, (s24)
    ffa8:	de 30 00 f8 	call 50040 <M_Random>
    ffac:	20 7c 00 09 	ashr s1, s0, 31
    ffb0:	58 00 00 a8 	load_32 s2, (s24)
    ffb4:	21 70 00 0a 	shr s1, s1, 28
    ffb8:	20 80 50 c0 	add_i s1, s0, s1
    ffbc:	21 c0 ff 01 	and s1, s1, -16
    ffc0:	01 00 60 c0 	sub_i s0, s1, s0
    ffc4:	02 00 00 88 	store_32 s0, (s2)
    ffc8:	bb 03 00 f4 	bnz s27, 116 <wipe_initMelt+0x240>
    ffcc:	0a 54 55 4f 	movehi s0, 174762
    ffd0:	60 5b 55 00 	or s27, s0, 5462
    ffd4:	00 c4 ff 0f 	move s0, -15
    ffd8:	1e 90 00 88 	store_32 s0, 36(sp)
    ffdc:	d1 30 00 f8 	call 49988 <M_Random>
    ffe0:	20 80 fd c1 	mulh_i s1, s0, s27
    ffe4:	58 00 00 a8 	load_32 s2, (s24)
    ffe8:	61 7c 00 0a 	shr s3, s1, 31
    ffec:	61 80 51 c0 	add_i s3, s1, s3
    fff0:	39 08 00 0b 	shl s1, s25, 2
    fff4:	22 80 50 c0 	add_i s1, s2, s1
    fff8:	43 0c 00 07 	mull_i s2, s3, 3
    fffc:	00 00 61 c0 	sub_i s0, s0, s2
   10000:	61 f0 ff a9 	load_32 s3, -4(s1)
   10004:	00 80 51 c0 	add_i s0, s0, s3
   10008:	40 fc ff 05 	add_i s2, s0, -1
   1000c:	41 00 00 88 	store_32 s2, (s1)
   10010:	00 00 fd c0 	move s0, s26
   10014:	62 00 00 12 	cmpgt_i s3, s2, 0
   10018:	83 00 00 f4 	bnz s3, 16 <wipe_initMelt+0x22c>
   1001c:	1e 90 00 a8 	load_32 s0, 36(sp)
   10020:	42 c0 ff 11 	cmpne_i s2, s2, -16
   10024:	42 00 00 f4 	bnz s2, 8 <wipe_initMelt+0x230>
   10028:	01 00 00 88 	store_32 s0, (s1)
   1002c:	1e a0 00 a8 	load_32 s0, 40(sp)
   10030:	39 07 00 05 	add_i s25, s25, 1
   10034:	19 00 40 c1 	cmplt_i s0, s25, s0
   10038:	20 fd ff f5 	bnz s0, -92 <wipe_initMelt+0x1e0>
   1003c:	fe b3 00 a8 	load_32 ra, 44(sp)
   10040:	00 00 00 0f 	move s0, 0
   10044:	7e c3 00 a8 	load_32 s27, 48(sp)
   10048:	5e d3 00 a8 	load_32 s26, 52(sp)
   1004c:	3e e3 00 a8 	load_32 s25, 56(sp)
   10050:	1e f3 00 a8 	load_32 s24, 60(sp)
   10054:	de 03 01 05 	add_i sp, sp, 64
   10058:	1f 00 00 f0 	ret

000000000001005c wipe_doMelt:
   1005c:	60 00 f0 c0 	move s3, s0
   10060:	00 04 00 0f 	move s0, 1
   10064:	42 0b 00 f2 	bz s2, 360 <wipe_doMelt+0x170>
   10068:	80 0c 00 4f 	movehi s4, 96
   1006c:	a0 0c 00 4f 	movehi s5, 96
   10070:	c0 0c 00 4f 	movehi s6, 96
   10074:	e0 0c 00 4f 	movehi s7, 96
   10078:	84 70 1b 00 	or s4, s4, 1756
   1007c:	a5 60 1b 00 	or s5, s5, 1752
   10080:	c6 40 1b 00 	or s6, s6, 1744
   10084:	e7 50 1b 00 	or s7, s7, 1748
   10088:	84 00 00 a8 	load_32 s4, (s4)
   1008c:	a5 00 00 a8 	load_32 s5, (s5)
   10090:	03 09 00 14 	cmplt_i s8, s3, 2
   10094:	c6 00 00 a8 	load_32 s6, (s6)
   10098:	e7 00 00 a8 	load_32 s7, (s7)
   1009c:	88 09 00 f4 	bnz s8, 304 <wipe_doMelt+0x170>
   100a0:	03 7c 00 0a 	shr s0, s3, 31
   100a4:	03 00 50 c0 	add_i s0, s3, s0
   100a8:	00 01 00 0f 	move s8, 0
   100ac:	20 21 00 0f 	move s9, 8
   100b0:	60 04 00 09 	ashr s3, s0, 1
   100b4:	00 04 00 0f 	move s0, 1
   100b8:	42 fc ff 05 	add_i s2, s2, -1
   100bc:	40 01 f4 c0 	move s10, s8
   100c0:	6a 09 00 0b 	shl s11, s10, 2
   100c4:	64 81 55 c0 	add_i s11, s4, s11
   100c8:	8b 01 00 a8 	load_32 s12, (s11)
   100cc:	ac 01 00 14 	cmplt_i s13, s12, 0
   100d0:	4d 01 00 f4 	bnz s13, 40 <wipe_doMelt+0x9c>
   100d4:	ac 81 30 c1 	cmpge_i s13, s12, s1
   100d8:	2d 07 00 f4 	bnz s13, 228 <wipe_doMelt+0x160>
   100dc:	0c 40 00 14 	cmplt_i s0, s12, 16
   100e0:	20 01 00 f4 	bnz s0, 36 <wipe_doMelt+0xa8>
   100e4:	00 80 f4 c0 	move s0, s9
   100e8:	a0 01 56 c0 	add_i s13, s0, s12
   100ec:	ad 81 40 c1 	cmplt_i s13, s13, s1
   100f0:	4d 01 00 f4 	bnz s13, 40 <wipe_doMelt+0xbc>
   100f4:	08 00 00 f6 	b 32 <wipe_doMelt+0xb8>
   100f8:	0c 04 00 05 	add_i s0, s12, 1
   100fc:	0b 00 00 88 	store_32 s0, (s11)
   10100:	2e 00 00 f6 	b 184 <wipe_doMelt+0x15c>
   10104:	0c 04 00 05 	add_i s0, s12, 1
   10108:	a0 01 56 c0 	add_i s13, s0, s12
   1010c:	ad 81 40 c1 	cmplt_i s13, s13, s1
   10110:	4d 00 00 f4 	bnz s13, 8 <wipe_doMelt+0xbc>
   10114:	01 00 66 c0 	sub_i s0, s1, s12
   10118:	aa 81 70 c0 	mull_i s13, s10, s1
   1011c:	40 02 00 f2 	bz s0, 72 <wipe_doMelt+0x108>
   10120:	cc 81 71 c0 	mull_i s14, s12, s3
   10124:	ec 81 56 c0 	add_i s15, s12, s13
   10128:	ce 01 55 c0 	add_i s14, s14, s10
   1012c:	ef 05 00 0b 	shl s15, s15, 1
   10130:	25 82 57 c0 	add_i s17, s5, s15
   10134:	ce 05 00 0b 	shl s14, s14, 1
   10138:	e0 01 f4 c0 	move s15, s8
   1013c:	c6 01 57 c0 	add_i s14, s6, s14
   10140:	00 02 f0 c0 	move s16, s0
   10144:	4f 06 00 0b 	shl s18, s15, 1
   10148:	71 02 00 a6 	load_s16 s19, (s17)
   1014c:	4e 02 59 c0 	add_i s18, s14, s18
   10150:	31 0a 00 05 	add_i s17, s17, 2
   10154:	10 fe ff 05 	add_i s16, s16, -1
   10158:	ef 81 51 c0 	add_i s15, s15, s3
   1015c:	72 02 00 86 	store_16 s19, (s18)
   10160:	30 ff ff f5 	bnz s16, -28 <wipe_doMelt+0xe8>
   10164:	c0 01 56 c0 	add_i s14, s0, s12
   10168:	cb 01 00 88 	store_32 s14, (s11)
   1016c:	81 01 67 c0 	sub_i s12, s1, s14
   10170:	00 00 f4 c0 	move s0, s8
   10174:	4c 02 00 f2 	bz s12, 72 <wipe_doMelt+0x160>
   10178:	0e 80 71 c0 	mull_i s0, s14, s3
   1017c:	6d 05 00 0b 	shl s11, s13, 1
   10180:	a7 81 55 c0 	add_i s13, s7, s11
   10184:	00 00 55 c0 	add_i s0, s0, s10
   10188:	60 01 f4 c0 	move s11, s8
   1018c:	00 04 00 0b 	shl s0, s0, 1
   10190:	06 00 50 c0 	add_i s0, s6, s0
   10194:	cb 05 00 0b 	shl s14, s11, 1
   10198:	ed 01 00 a6 	load_s16 s15, (s13)
   1019c:	c0 01 57 c0 	add_i s14, s0, s14
   101a0:	ad 09 00 05 	add_i s13, s13, 2
   101a4:	8c fd ff 05 	add_i s12, s12, -1
   101a8:	6b 81 51 c0 	add_i s11, s11, s3
   101ac:	ee 01 00 86 	store_16 s15, (s14)
   101b0:	4c 00 00 f2 	bz s12, 8 <wipe_doMelt+0x15c>
   101b4:	f8 ff ff f7 	b -32 <wipe_doMelt+0x138>
   101b8:	00 00 f4 c0 	move s0, s8
   101bc:	4a 05 00 05 	add_i s10, s10, 1
   101c0:	6a 81 41 c1 	cmplt_i s11, s10, s3
   101c4:	eb f7 ff f5 	bnz s11, -260 <wipe_doMelt+0x64>
   101c8:	82 f7 ff f5 	bnz s2, -272 <wipe_doMelt+0x5c>
   101cc:	1f 00 00 f0 	ret

00000000000101d0 wipe_exitMelt:
   101d0:	de 03 ff 05 	add_i sp, sp, -64
   101d4:	fe f3 00 88 	store_32 ra, 60(sp)
   101d8:	00 0c 00 4f 	movehi s0, 96
   101dc:	00 70 1b 00 	or s0, s0, 1756
   101e0:	00 00 00 a8 	load_32 s0, (s0)
   101e4:	74 f1 00 f8 	call 247248 <Z_Free>
   101e8:	00 00 00 0f 	move s0, 0
   101ec:	fe f3 00 a8 	load_32 ra, 60(sp)
   101f0:	de 03 01 05 	add_i sp, sp, 64
   101f4:	1f 00 00 f0 	ret

00000000000101f8 wipe_StartScreen:
   101f8:	de 03 ff 05 	add_i sp, sp, -64
   101fc:	fe f3 00 88 	store_32 ra, 60(sp)
   10200:	00 0c 00 4f 	movehi s0, 96
   10204:	20 0c 00 4f 	movehi s1, 96
   10208:	00 20 02 00 	or s0, s0, 136
   1020c:	21 50 1b 00 	or s1, s1, 1748
   10210:	00 20 00 a8 	load_32 s0, 8(s0)
   10214:	01 00 00 88 	store_32 s0, (s1)
   10218:	ed f8 ff f9 	call -7244 <I_ReadScreen>
   1021c:	00 00 00 0f 	move s0, 0
   10220:	fe f3 00 a8 	load_32 ra, 60(sp)
   10224:	de 03 01 05 	add_i sp, sp, 64
   10228:	1f 00 00 f0 	ret

000000000001022c wipe_EndScreen:
   1022c:	de 03 ff 05 	add_i sp, sp, -64
   10230:	1e f3 00 88 	store_32 s24, 60(sp)
   10234:	3e e3 00 88 	store_32 s25, 56(sp)
   10238:	5e d3 00 88 	store_32 s26, 52(sp)
   1023c:	7e c3 00 88 	store_32 s27, 48(sp)
   10240:	fe b3 00 88 	store_32 ra, 44(sp)
   10244:	80 0c 00 4f 	movehi s4, 96
   10248:	7e a0 00 88 	store_32 s3, 40(sp)
   1024c:	a0 0c 00 4f 	movehi s5, 96
   10250:	20 03 f1 c0 	move s25, s2
   10254:	84 20 02 00 	or s4, s4, 136
   10258:	40 83 f0 c0 	move s26, s1
   1025c:	60 03 f0 c0 	move s27, s0
   10260:	04 30 00 a8 	load_32 s0, 12(s4)
   10264:	a5 60 1b 00 	or s5, s5, 1752
   10268:	05 00 00 88 	store_32 s0, (s5)
   1026c:	d8 f8 ff f9 	call -7328 <I_ReadScreen>
   10270:	00 0c 00 4f 	movehi s0, 96
   10274:	00 03 00 0f 	move s24, 0
   10278:	00 50 1b 00 	or s0, s0, 1748
   1027c:	a0 00 00 a8 	load_32 s5, (s0)
   10280:	00 80 fd c0 	move s0, s27
   10284:	20 00 fd c0 	move s1, s26
   10288:	40 00 fc c0 	move s2, s24
   1028c:	60 80 fc c0 	move s3, s25
   10290:	9e a0 00 a8 	load_32 s4, 40(sp)
   10294:	7c d8 00 f8 	call 221680 <V_DrawBlock>
   10298:	00 00 fc c0 	move s0, s24
   1029c:	fe b3 00 a8 	load_32 ra, 44(sp)
   102a0:	7e c3 00 a8 	load_32 s27, 48(sp)
   102a4:	5e d3 00 a8 	load_32 s26, 52(sp)
   102a8:	3e e3 00 a8 	load_32 s25, 56(sp)
   102ac:	1e f3 00 a8 	load_32 s24, 60(sp)
   102b0:	de 03 01 05 	add_i sp, sp, 64
   102b4:	1f 00 00 f0 	ret

00000000000102b8 wipe_ScreenWipe:
   102b8:	de 03 ff 05 	add_i sp, sp, -64
   102bc:	1e f3 00 88 	store_32 s24, 60(sp)
   102c0:	3e e3 00 88 	store_32 s25, 56(sp)
   102c4:	5e d3 00 88 	store_32 s26, 52(sp)
   102c8:	7e c3 00 88 	store_32 s27, 48(sp)
   102cc:	fe b3 00 88 	store_32 ra, 44(sp)
   102d0:	20 0c 00 4f 	movehi s1, 96
   102d4:	c1 80 1b 00 	or s6, s1, 1760
   102d8:	26 00 00 a0 	load_u8 s1, (s6)
   102dc:	40 83 f2 c0 	move s26, s5
   102e0:	20 03 f2 c0 	move s25, s4
   102e4:	a0 80 f1 c0 	move s5, s3
   102e8:	de a0 00 88 	store_32 s6, 40(sp)
   102ec:	5e 93 00 88 	store_32 s26, 36(sp)
   102f0:	21 04 00 11 	cmpne_i s1, s1, 1
   102f4:	61 00 00 f4 	bnz s1, 12 <wipe_ScreenWipe+0x48>
   102f8:	00 0f 00 07 	mull_i s24, s0, 3
   102fc:	15 00 00 f6 	b 84 <wipe_ScreenWipe+0x98>
   10300:	40 04 00 0f 	move s2, 1
   10304:	46 00 00 82 	store_8 s2, (s6)
   10308:	43 00 00 4f 	movehi s2, 3
   1030c:	20 0c 00 4f 	movehi s1, 96
   10310:	00 0f 00 07 	mull_i s24, s0, 3
   10314:	60 0c 00 4f 	movehi s3, 96
   10318:	02 90 2a 00 	or s0, s2, 2724
   1031c:	21 20 02 00 	or s1, s1, 136
   10320:	43 40 1b 00 	or s2, s3, 1744
   10324:	78 08 00 0b 	shl s3, s24, 2
   10328:	00 80 51 c0 	add_i s0, s0, s3
   1032c:	21 00 00 a8 	load_32 s1, (s1)
   10330:	22 00 00 88 	store_32 s1, (s2)
   10334:	60 00 00 a8 	load_32 s3, (s0)
   10338:	00 80 f2 c0 	move s0, s5
   1033c:	20 80 fc c0 	move s1, s25
   10340:	40 00 fd c0 	move s2, s26
   10344:	60 83 f2 c0 	move s27, s5
   10348:	63 00 00 fc 	call s3
   1034c:	a0 80 fd c0 	move s5, s27
   10350:	60 03 00 0f 	move s27, 0
   10354:	00 80 fd c0 	move s0, s27
   10358:	20 80 fd c0 	move s1, s27
   1035c:	40 80 f2 c0 	move s2, s5
   10360:	60 80 fc c0 	move s3, s25
   10364:	40 83 f2 c0 	move s26, s5
   10368:	d2 d6 00 f8 	call 219976 <V_MarkRect>
   1036c:	03 00 00 4f 	movehi s0, 3
   10370:	38 08 00 0b 	shl s1, s24, 2
   10374:	00 90 2a 00 	or s0, s0, 2724
   10378:	00 83 50 c0 	add_i s24, s0, s1
   1037c:	78 10 00 a8 	load_32 s3, 4(s24)
   10380:	5e 73 00 88 	store_32 s26, 28(sp)
   10384:	00 00 fd c0 	move s0, s26
   10388:	3e 83 00 88 	store_32 s25, 32(sp)
   1038c:	20 80 fc c0 	move s1, s25
   10390:	3e 93 00 a8 	load_32 s25, 36(sp)
   10394:	40 80 fc c0 	move s2, s25
   10398:	63 00 00 fc 	call s3
   1039c:	40 80 fc c0 	move s2, s25
   103a0:	3e a3 00 a8 	load_32 s25, 40(sp)
   103a4:	c0 00 00 f2 	bz s0, 24 <wipe_ScreenWipe+0x104>
   103a8:	79 03 00 82 	store_8 s27, (s25)
   103ac:	78 20 00 a8 	load_32 s3, 8(s24)
   103b0:	1e 70 00 a8 	load_32 s0, 28(sp)
   103b4:	3e 80 00 a8 	load_32 s1, 32(sp)
   103b8:	63 00 00 fc 	call s3
   103bc:	19 00 00 a0 	load_u8 s0, (s25)
   103c0:	fe b3 00 a8 	load_32 ra, 44(sp)
   103c4:	7e c3 00 a8 	load_32 s27, 48(sp)
   103c8:	5e d3 00 a8 	load_32 s26, 52(sp)
   103cc:	3e e3 00 a8 	load_32 s25, 56(sp)
   103d0:	00 04 00 03 	xor s0, s0, 1
   103d4:	1e f3 00 a8 	load_32 s24, 60(sp)
   103d8:	de 03 01 05 	add_i sp, sp, 64
   103dc:	1f 00 00 f0 	ret

00000000000103e0 D_PostEvent:
   103e0:	3a 04 00 4f 	movehi s1, 58
   103e4:	5a 04 00 4f 	movehi s2, 58
   103e8:	21 00 28 00 	or s1, s1, 2560
   103ec:	42 10 28 00 	or s2, s2, 2564
   103f0:	61 00 00 a8 	load_32 s3, (s1)
   103f4:	83 10 00 0b 	shl s4, s3, 4
   103f8:	42 00 52 c0 	add_i s2, s2, s4
   103fc:	80 30 00 a8 	load_32 s4, 12(s0)
   10400:	63 04 00 05 	add_i s3, s3, 1
   10404:	82 30 00 88 	store_32 s4, 12(s2)
   10408:	80 20 00 a8 	load_32 s4, 8(s0)
   1040c:	82 20 00 88 	store_32 s4, 8(s2)
   10410:	80 10 00 a8 	load_32 s4, 4(s0)
   10414:	82 10 00 88 	store_32 s4, 4(s2)
   10418:	00 00 00 a8 	load_32 s0, (s0)
   1041c:	02 00 00 88 	store_32 s0, (s2)
   10420:	03 fc 00 01 	and s0, s3, 63
   10424:	01 00 00 88 	store_32 s0, (s1)
   10428:	1f 00 00 f0 	ret

000000000001042c D_ProcessEvents:
   1042c:	de 03 ff 05 	add_i sp, sp, -64
   10430:	1e f3 00 88 	store_32 s24, 60(sp)
   10434:	3e e3 00 88 	store_32 s25, 56(sp)
   10438:	5e d3 00 88 	store_32 s26, 52(sp)
   1043c:	7e c3 00 88 	store_32 s27, 48(sp)
   10440:	fe b3 00 88 	store_32 ra, 44(sp)
   10444:	0b 04 00 4f 	movehi s0, 43
   10448:	00 00 40 00 	or s0, s0, 4096
   1044c:	00 00 00 a8 	load_32 s0, (s0)
   10450:	00 08 00 11 	cmpne_i s0, s0, 2
   10454:	c0 00 00 f4 	bnz s0, 24 <D_ProcessEvents+0x40>
   10458:	00 00 00 4f 	movehi s0, 0
   1045c:	00 34 79 00 	or s0, s0, 7757
   10460:	c0 b9 00 f8 	call 190208 <W_CheckNumForName>
   10464:	00 00 00 14 	cmplt_i s0, s0, 0
   10468:	20 03 00 f4 	bnz s0, 100 <D_ProcessEvents+0xa0>
   1046c:	1a 04 00 4f 	movehi s0, 58
   10470:	3a 04 00 4f 	movehi s1, 58
   10474:	20 13 38 00 	or s25, s0, 3588
   10478:	41 03 28 00 	or s26, s1, 2560
   1047c:	19 00 00 a8 	load_32 s0, (s25)
   10480:	3a 00 00 a8 	load_32 s1, (s26)
   10484:	20 80 00 c1 	cmpeq_i s1, s0, s1
   10488:	21 02 00 f4 	bnz s1, 68 <D_ProcessEvents+0xa0>
   1048c:	3a 04 00 4f 	movehi s1, 58
   10490:	61 13 28 00 	or s27, s1, 2564
   10494:	00 10 00 0b 	shl s0, s0, 4
   10498:	1b 03 50 c0 	add_i s24, s27, s0
   1049c:	00 00 fc c0 	move s0, s24
   104a0:	07 28 00 f8 	call 40988 <M_Responder>
   104a4:	60 00 00 f4 	bnz s0, 12 <D_ProcessEvents+0x84>
   104a8:	00 00 fc c0 	move s0, s24
   104ac:	3d 12 00 f8 	call 18676 <G_Responder>
   104b0:	19 00 00 a8 	load_32 s0, (s25)
   104b4:	00 04 00 05 	add_i s0, s0, 1
   104b8:	00 fc 00 01 	and s0, s0, 63
   104bc:	19 00 00 88 	store_32 s0, (s25)
   104c0:	3a 00 00 a8 	load_32 s1, (s26)
   104c4:	20 80 10 c1 	cmpne_i s1, s0, s1
   104c8:	61 fe ff f5 	bnz s1, -52 <D_ProcessEvents+0x68>
   104cc:	fe b3 00 a8 	load_32 ra, 44(sp)
   104d0:	7e c3 00 a8 	load_32 s27, 48(sp)
   104d4:	5e d3 00 a8 	load_32 s26, 52(sp)
   104d8:	3e e3 00 a8 	load_32 s25, 56(sp)
   104dc:	1e f3 00 a8 	load_32 s24, 60(sp)
   104e0:	de 03 01 05 	add_i sp, sp, 64
   104e4:	1f 00 00 f0 	ret

00000000000104e8 D_Display:
   104e8:	de 03 ff 05 	add_i sp, sp, -64
   104ec:	1e f3 00 88 	store_32 s24, 60(sp)
   104f0:	3e e3 00 88 	store_32 s25, 56(sp)
   104f4:	5e d3 00 88 	store_32 s26, 52(sp)
   104f8:	7e c3 00 88 	store_32 s27, 48(sp)
   104fc:	fe b3 00 88 	store_32 ra, 44(sp)
   10500:	1b 04 00 4f 	movehi s0, 59
   10504:	00 e0 01 00 	or s0, s0, 120
   10508:	00 00 00 a8 	load_32 s0, (s0)
   1050c:	00 23 00 f4 	bnz s0, 1120 <D_Display+0x484>
   10510:	1f 04 00 4f 	movehi s0, 63
   10514:	00 70 04 00 	or s0, s0, 284
   10518:	00 00 00 a8 	load_32 s0, (s0)
   1051c:	40 01 00 f2 	bz s0, 40 <D_Display+0x5c>
   10520:	da a4 00 f8 	call 168808 <R_ExecuteSetViewSize>
   10524:	13 04 00 4f 	movehi s0, 51
   10528:	20 0c 00 4f 	movehi s1, 96
   1052c:	40 fc ff 0f 	move s2, -1
   10530:	00 60 45 00 	or s0, s0, 4440
   10534:	21 d0 1b 00 	or s1, s1, 1780
   10538:	40 00 00 88 	store_32 s2, (s0)
   1053c:	00 0c 00 0f 	move s0, 3
   10540:	01 00 00 88 	store_32 s0, (s1)
   10544:	1a 04 00 4f 	movehi s0, 58
   10548:	33 04 00 4f 	movehi s1, 51
   1054c:	20 a3 7f 00 	or s25, s0, 8168
   10550:	21 50 45 00 	or s1, s1, 4436
   10554:	19 00 00 a8 	load_32 s0, (s25)
   10558:	3e 90 00 88 	store_32 s1, 36(sp)
   1055c:	21 00 00 a8 	load_32 s1, (s1)
   10560:	20 80 00 c1 	cmpeq_i s1, s0, s1
   10564:	41 00 00 f4 	bnz s1, 8 <D_Display+0x84>
   10568:	0c 00 00 f6 	b 48 <D_Display+0xb0>
   1056c:	60 03 00 0f 	move s27, 0
   10570:	3a 04 00 4f 	movehi s1, 58
   10574:	41 b3 7f 00 	or s26, s1, 8172
   10578:	3a 00 00 a8 	load_32 s1, (s26)
   1057c:	60 02 00 f4 	bnz s0, 76 <D_Display+0xe0>
   10580:	41 02 00 f2 	bz s1, 72 <D_Display+0xe0>
   10584:	f6 e6 00 f8 	call 236504 <HU_Erase>
   10588:	19 00 00 a8 	load_32 s0, (s25)
   1058c:	20 0c 00 16 	cmpgt_u s1, s0, 3
   10590:	c1 09 00 f4 	bnz s1, 312 <D_Display+0x1e0>
   10594:	0f 00 00 f6 	b 60 <D_Display+0xe8>
   10598:	00 00 00 0f 	move s0, 0
   1059c:	40 00 05 0f 	move s2, 320
   105a0:	60 20 03 0f 	move s3, 200
   105a4:	20 00 f0 c0 	move s1, s0
   105a8:	14 ff ff f9 	call -944 <wipe_StartScreen>
   105ac:	19 00 00 a8 	load_32 s0, (s25)
   105b0:	60 07 00 0f 	move s27, 1
   105b4:	3a 04 00 4f 	movehi s1, 58
   105b8:	41 b3 7f 00 	or s26, s1, 8172
   105bc:	3a 00 00 a8 	load_32 s1, (s26)
   105c0:	40 00 00 f4 	bnz s0, 8 <D_Display+0xe0>
   105c4:	ef ff ff f7 	b -68 <D_Display+0x98>
   105c8:	20 0c 00 16 	cmpgt_u s1, s0, 3
   105cc:	e1 07 00 f4 	bnz s1, 252 <D_Display+0x1e0>
   105d0:	23 00 00 4f 	movehi s1, 3
   105d4:	00 08 00 0b 	shl s0, s0, 2
   105d8:	21 f0 2a 00 	or s1, s1, 2748
   105dc:	00 80 50 c0 	add_i s0, s0, s1
   105e0:	00 00 00 a8 	load_32 s0, (s0)
   105e4:	00 00 00 f0 	b s0
   105e8:	1a 00 00 a8 	load_32 s0, (s26)
   105ec:	e0 06 00 f2 	bz s0, 220 <D_Display+0x1e0>
   105f0:	00 0c 00 4f 	movehi s0, 96
   105f4:	00 d0 21 00 	or s0, s0, 2164
   105f8:	00 00 00 a8 	load_32 s0, (s0)
   105fc:	40 00 00 f2 	bz s0, 8 <D_Display+0x11c>
   10600:	d1 3d 00 f8 	call 63300 <AM_Drawer>
   10604:	1e 04 00 4f 	movehi s0, 62
   10608:	00 13 1c 00 	or s24, s0, 1796
   1060c:	18 00 00 a8 	load_32 s0, (s24)
   10610:	1b 01 00 f4 	bnz s27, 32 <D_Display+0x148>
   10614:	20 0c 00 4f 	movehi s1, 96
   10618:	60 20 03 10 	cmpeq_i s3, s0, 200
   1061c:	21 c0 1b 00 	or s1, s1, 1776
   10620:	41 00 00 a8 	load_32 s2, (s1)
   10624:	20 00 00 0f 	move s1, 0
   10628:	63 00 00 f4 	bnz s3, 12 <D_Display+0x14c>
   1062c:	42 00 00 f2 	bz s2, 8 <D_Display+0x14c>
   10630:	20 04 00 0f 	move s1, 1
   10634:	40 0c 00 4f 	movehi s2, 96
   10638:	7b 04 00 4f 	movehi s3, 59
   1063c:	42 b0 1b 00 	or s2, s2, 1772
   10640:	83 20 1f 00 	or s4, s3, 1992
   10644:	62 00 00 a8 	load_32 s3, (s2)
   10648:	44 00 00 a8 	load_32 s2, (s4)
   1064c:	82 00 00 11 	cmpne_i s4, s2, 0
   10650:	40 80 f0 c0 	move s2, s1
   10654:	44 00 00 f4 	bnz s4, 8 <D_Display+0x174>
   10658:	40 04 00 0f 	move s2, 1
   1065c:	63 00 00 10 	cmpeq_i s3, s3, 0
   10660:	43 00 00 f4 	bnz s3, 8 <D_Display+0x180>
   10664:	20 00 f1 c0 	move s1, s2
   10668:	00 20 03 10 	cmpeq_i s0, s0, 200
   1066c:	00 04 00 01 	and s0, s0, 1
   10670:	38 df 00 f8 	call 228576 <ST_Drawer>
   10674:	18 00 00 a8 	load_32 s0, (s24)
   10678:	20 0c 00 4f 	movehi s1, 96
   1067c:	21 c0 1b 00 	or s1, s1, 1776
   10680:	00 20 03 10 	cmpeq_i s0, s0, 200
   10684:	00 04 00 01 	and s0, s0, 1
   10688:	01 00 00 88 	store_32 s0, (s1)
   1068c:	0f 00 00 f6 	b 60 <D_Display+0x1e0>
   10690:	4a d5 00 f8 	call 218408 <WI_Drawer>
   10694:	0d 00 00 f6 	b 52 <D_Display+0x1e0>
   10698:	2f fd ff f9 	call -2884 <F_Drawer>
   1069c:	0b 00 00 f6 	b 44 <D_Display+0x1e0>
   106a0:	1a 04 00 4f 	movehi s0, 58
   106a4:	20 94 01 0f 	move s1, 101
   106a8:	00 40 48 00 	or s0, s0, 4624
   106ac:	00 00 00 a8 	load_32 s0, (s0)
   106b0:	26 ba 00 f8 	call 190616 <W_CacheLumpName>
   106b4:	60 00 f0 c0 	move s3, s0
   106b8:	00 00 00 0f 	move s0, 0
   106bc:	20 00 f0 c0 	move s1, s0
   106c0:	40 00 f0 c0 	move s2, s0
   106c4:	81 d6 00 f8 	call 219652 <V_DrawPatch>
   106c8:	12 f7 ff f9 	call -9144 <I_UpdateNoBlit>
   106cc:	00 0c 00 4f 	movehi s0, 96
   106d0:	00 d3 21 00 	or s24, s0, 2164
   106d4:	19 00 00 a8 	load_32 s0, (s25)
   106d8:	38 00 00 a8 	load_32 s1, (s24)
   106dc:	41 00 00 c0 	or s2, s1, s0
   106e0:	3a 00 00 a8 	load_32 s1, (s26)
   106e4:	82 01 00 f4 	bnz s2, 48 <D_Display+0x22c>
   106e8:	61 01 00 f2 	bz s1, 44 <D_Display+0x22c>
   106ec:	1a 04 00 4f 	movehi s0, 58
   106f0:	3b 04 00 4f 	movehi s1, 59
   106f4:	00 50 6f 00 	or s0, s0, 7124
   106f8:	21 40 02 00 	or s1, s1, 144
   106fc:	00 00 00 a8 	load_32 s0, (s0)
   10700:	00 60 04 07 	mull_i s0, s0, 280
   10704:	01 00 50 c0 	add_i s0, s1, s0
   10708:	c7 a6 00 f8 	call 170780 <R_RenderPlayerView>
   1070c:	19 00 00 a8 	load_32 s0, (s25)
   10710:	3a 00 00 a8 	load_32 s1, (s26)
   10714:	80 00 00 f4 	bnz s0, 16 <D_Display+0x23c>
   10718:	61 00 00 f2 	bz s1, 12 <D_Display+0x23c>
   1071c:	7d e6 00 f8 	call 236020 <HU_Drawer>
   10720:	19 00 00 a8 	load_32 s0, (s25)
   10724:	33 04 00 4f 	movehi s1, 51
   10728:	41 63 45 00 	or s26, s1, 4440
   1072c:	3a 00 00 a8 	load_32 s1, (s26)
   10730:	40 01 00 f2 	bz s0, 40 <D_Display+0x270>
   10734:	40 80 00 c1 	cmpeq_i s2, s0, s1
   10738:	02 01 00 f4 	bnz s2, 32 <D_Display+0x270>
   1073c:	02 00 00 4f 	movehi s0, 2
   10740:	20 94 01 0f 	move s1, 101
   10744:	00 5c 6e 00 	or s0, s0, 7063
   10748:	00 ba 00 f8 	call 190464 <W_CacheLumpName>
   1074c:	ab f7 ff f9 	call -8532 <I_SetPalette>
   10750:	19 00 00 a8 	load_32 s0, (s25)
   10754:	3a 00 00 a8 	load_32 s1, (s26)
   10758:	7e a3 00 88 	store_32 s27, 40(sp)
   1075c:	00 01 00 f4 	bnz s0, 32 <D_Display+0x294>
   10760:	e1 00 00 f2 	bz s1, 28 <D_Display+0x294>
   10764:	00 0c 00 4f 	movehi s0, 96
   10768:	20 00 00 0f 	move s1, 0
   1076c:	00 90 1b 00 	or s0, s0, 1764
   10770:	20 00 00 88 	store_32 s1, (s0)
   10774:	67 a0 00 f8 	call 164252 <R_FillBackScreen>
   10778:	19 00 00 a8 	load_32 s0, (s25)
   1077c:	3e 04 00 4f 	movehi s1, 62
   10780:	58 00 00 a8 	load_32 s2, (s24)
   10784:	61 f3 0f 00 	or s27, s1, 1020
   10788:	42 00 00 c0 	or s2, s2, s0
   1078c:	3b 00 00 a8 	load_32 s1, (s27)
   10790:	02 04 00 f4 	bnz s2, 128 <D_Display+0x328>
   10794:	21 00 05 10 	cmpeq_i s1, s1, 320
   10798:	c1 03 00 f4 	bnz s1, 120 <D_Display+0x328>
   1079c:	3b 04 00 4f 	movehi s1, 59
   107a0:	40 0c 00 4f 	movehi s2, 96
   107a4:	60 0c 00 4f 	movehi s3, 96
   107a8:	21 60 1f 00 	or s1, s1, 2008
   107ac:	42 a0 1b 00 	or s2, s2, 1768
   107b0:	63 90 1b 00 	or s3, s3, 1764
   107b4:	21 00 00 a8 	load_32 s1, (s1)
   107b8:	42 00 00 a8 	load_32 s2, (s2)
   107bc:	42 80 00 c0 	or s2, s2, s1
   107c0:	23 00 00 a8 	load_32 s1, (s3)
   107c4:	02 01 00 f4 	bnz s2, 32 <D_Display+0x2fc>
   107c8:	41 00 00 f4 	bnz s1, 8 <D_Display+0x2e8>
   107cc:	06 00 00 f6 	b 24 <D_Display+0x2fc>
   107d0:	20 0c 00 4f 	movehi s1, 96
   107d4:	21 d0 1b 00 	or s1, s1, 1780
   107d8:	21 00 00 a8 	load_32 s1, (s1)
   107dc:	a1 01 00 f2 	bz s1, 52 <D_Display+0x328>
   107e0:	05 00 00 f6 	b 20 <D_Display+0x30c>
   107e4:	00 0c 00 4f 	movehi s0, 96
   107e8:	20 0c 00 0f 	move s1, 3
   107ec:	00 d0 1b 00 	or s0, s0, 1780
   107f0:	20 00 00 88 	store_32 s1, (s0)
   107f4:	7c a1 00 f8 	call 165360 <R_DrawViewBorder>
   107f8:	00 0c 00 4f 	movehi s0, 96
   107fc:	00 d0 1b 00 	or s0, s0, 1780
   10800:	20 00 00 a8 	load_32 s1, (s0)
   10804:	21 fc ff 05 	add_i s1, s1, -1
   10808:	20 00 00 88 	store_32 s1, (s0)
   1080c:	19 00 00 a8 	load_32 s0, (s25)
   10810:	3b 04 00 4f 	movehi s1, 59
   10814:	40 0c 00 4f 	movehi s2, 96
   10818:	7b 04 00 4f 	movehi s3, 59
   1081c:	21 60 1f 00 	or s1, s1, 2008
   10820:	42 a0 1b 00 	or s2, s2, 1768
   10824:	63 30 19 00 	or s3, s3, 1612
   10828:	80 0c 00 4f 	movehi s4, 96
   1082c:	21 00 00 a8 	load_32 s1, (s1)
   10830:	22 00 00 88 	store_32 s1, (s2)
   10834:	23 00 00 a8 	load_32 s1, (s3)
   10838:	7b 04 00 4f 	movehi s3, 59
   1083c:	44 90 1b 00 	or s2, s4, 1764
   10840:	80 0c 00 4f 	movehi s4, 96
   10844:	22 00 00 88 	store_32 s1, (s2)
   10848:	23 20 1f 00 	or s1, s3, 1992
   1084c:	44 b0 1b 00 	or s2, s4, 1772
   10850:	7b 04 00 4f 	movehi s3, 59
   10854:	21 00 00 a8 	load_32 s1, (s1)
   10858:	22 00 00 88 	store_32 s1, (s2)
   1085c:	5e 90 00 a8 	load_32 s2, 36(sp)
   10860:	23 f0 01 00 	or s1, s3, 124
   10864:	02 00 00 88 	store_32 s0, (s2)
   10868:	1a 00 00 88 	store_32 s0, (s26)
   1086c:	01 00 00 a8 	load_32 s0, (s1)
   10870:	80 03 00 f2 	bz s0, 112 <D_Display+0x3f8>
   10874:	1e 04 00 4f 	movehi s0, 62
   10878:	38 00 00 a8 	load_32 s1, (s24)
   1087c:	00 50 1c 00 	or s0, s0, 1812
   10880:	21 00 00 10 	cmpeq_i s1, s1, 0
   10884:	00 00 00 a8 	load_32 s0, (s0)
   10888:	61 00 00 f4 	bnz s1, 12 <D_Display+0x3ac>
   1088c:	00 13 00 0f 	move s24, 4
   10890:	02 00 00 f6 	b 8 <D_Display+0x3b0>
   10894:	00 13 00 05 	add_i s24, s0, 4
   10898:	1e 04 00 4f 	movehi s0, 62
   1089c:	00 40 1c 00 	or s0, s0, 1808
   108a0:	00 00 00 a8 	load_32 s0, (s0)
   108a4:	3b 00 00 a8 	load_32 s1, (s27)
   108a8:	21 f0 fe 05 	add_i s1, s1, -68
   108ac:	41 7c 00 0a 	shr s2, s1, 31
   108b0:	21 00 51 c0 	add_i s1, s1, s2
   108b4:	21 04 00 09 	ashr s1, s1, 1
   108b8:	21 03 50 c0 	add_i s25, s1, s0
   108bc:	01 00 00 4f 	movehi s0, 1
   108c0:	20 94 01 0f 	move s1, 101
   108c4:	00 c0 41 00 	or s0, s0, 4208
   108c8:	a0 b9 00 f8 	call 190080 <W_CacheLumpName>
   108cc:	60 00 f0 c0 	move s3, s0
   108d0:	00 80 fc c0 	move s0, s25
   108d4:	40 00 00 0f 	move s2, 0
   108d8:	20 00 fc c0 	move s1, s24
   108dc:	e4 d6 00 f8 	call 220048 <V_DrawPatchDirect>
   108e0:	62 2b 00 f8 	call 44424 <M_Drawer>
   108e4:	66 09 00 f8 	call 9624 <NetUpdate>
   108e8:	1e a0 00 a8 	load_32 s0, 40(sp)
   108ec:	40 00 00 f4 	bnz s0, 8 <D_Display+0x40c>
   108f0:	1e 00 00 f6 	b 120 <D_Display+0x480>
   108f4:	00 03 00 0f 	move s24, 0
   108f8:	40 00 05 0f 	move s2, 320
   108fc:	60 20 03 0f 	move s3, 200
   10900:	00 00 fc c0 	move s0, s24
   10904:	20 00 fc c0 	move s1, s24
   10908:	5e a0 00 88 	store_32 s2, 40(sp)
   1090c:	7e 90 00 88 	store_32 s3, 36(sp)
   10910:	47 fe ff f9 	call -1764 <wipe_EndScreen>
   10914:	d0 f5 ff f9 	call -10432 <I_GetTime>
   10918:	60 ff ff 05 	add_i s27, s0, -1
   1091c:	00 04 00 0f 	move s0, 1
   10920:	1e 80 00 88 	store_32 s0, 32(sp)
   10924:	cc f5 ff f9 	call -10448 <I_GetTime>
   10928:	20 03 f0 c0 	move s25, s0
   1092c:	b9 80 6d c0 	sub_i s5, s25, s27
   10930:	a5 ff ff f3 	bz s5, -12 <D_Display+0x43c>
   10934:	1e 80 00 a8 	load_32 s0, 32(sp)
   10938:	20 00 fc c0 	move s1, s24
   1093c:	40 00 fc c0 	move s2, s24
   10940:	7e a0 00 a8 	load_32 s3, 40(sp)
   10944:	9e 90 00 a8 	load_32 s4, 36(sp)
   10948:	5c fe ff f9 	call -1680 <wipe_ScreenWipe>
   1094c:	40 03 f0 c0 	move s26, s0
   10950:	70 f6 ff f9 	call -9792 <I_UpdateNoBlit>
   10954:	45 2b 00 f8 	call 44308 <M_Drawer>
   10958:	6f f6 ff f9 	call -9796 <I_FinishUpdate>
   1095c:	60 83 fc c0 	move s27, s25
   10960:	3a fe ff f3 	bz s26, -60 <D_Display+0x43c>
   10964:	02 00 00 f6 	b 8 <D_Display+0x484>
   10968:	6b f6 ff f9 	call -9812 <I_FinishUpdate>
   1096c:	fe b3 00 a8 	load_32 ra, 44(sp)
   10970:	7e c3 00 a8 	load_32 s27, 48(sp)
   10974:	5e d3 00 a8 	load_32 s26, 52(sp)
   10978:	3e e3 00 a8 	load_32 s25, 56(sp)
   1097c:	1e f3 00 a8 	load_32 s24, 60(sp)
   10980:	de 03 01 05 	add_i sp, sp, 64
   10984:	1f 00 00 f0 	ret

0000000000010988 D_PageDrawer:
   10988:	de 03 ff 05 	add_i sp, sp, -64
   1098c:	fe f3 00 88 	store_32 ra, 60(sp)
   10990:	1a 04 00 4f 	movehi s0, 58
   10994:	20 94 01 0f 	move s1, 101
   10998:	00 40 48 00 	or s0, s0, 4624
   1099c:	00 00 00 a8 	load_32 s0, (s0)
   109a0:	6a b9 00 f8 	call 189864 <W_CacheLumpName>
   109a4:	60 00 f0 c0 	move s3, s0
   109a8:	00 00 00 0f 	move s0, 0
   109ac:	20 00 f0 c0 	move s1, s0
   109b0:	40 00 f0 c0 	move s2, s0
   109b4:	c5 d5 00 f8 	call 218900 <V_DrawPatch>
   109b8:	fe f3 00 a8 	load_32 ra, 60(sp)
   109bc:	de 03 01 05 	add_i sp, sp, 64
   109c0:	1f 00 00 f0 	ret

00000000000109c4 D_DoomLoop:
   109c4:	de 03 fd 05 	add_i sp, sp, -192
   109c8:	1e f3 02 88 	store_32 s24, 188(sp)
   109cc:	3e e3 02 88 	store_32 s25, 184(sp)
   109d0:	5e d3 02 88 	store_32 s26, 180(sp)
   109d4:	7e c3 02 88 	store_32 s27, 176(sp)
   109d8:	fe b3 02 88 	store_32 ra, 172(sp)
   109dc:	1a 04 00 4f 	movehi s0, 58
   109e0:	00 40 6f 00 	or s0, s0, 7120
   109e4:	00 00 00 a8 	load_32 s0, (s0)
   109e8:	40 00 00 f2 	bz s0, 8 <D_DoomLoop+0x2c>
   109ec:	17 1c 00 f8 	call 28764 <G_BeginRecording>
   109f0:	02 00 00 4f 	movehi s0, 2
   109f4:	00 0c 40 00 	or s0, s0, 4099
   109f8:	2f 2d 00 f8 	call 46268 <M_CheckParm>
   109fc:	e0 02 00 f2 	bz s0, 92 <D_DoomLoop+0x94>
   10a00:	1a 04 00 4f 	movehi s0, 58
   10a04:	21 00 00 4f 	movehi s1, 1
   10a08:	1e 63 02 05 	add_i s24, sp, 152
   10a0c:	00 c0 6d 00 	or s0, s0, 7024
   10a10:	00 00 00 a8 	load_32 s0, (s0)
   10a14:	1e 20 00 88 	store_32 s0, 8(sp)
   10a18:	01 08 74 00 	or s0, s1, 7426
   10a1c:	1e 10 00 88 	store_32 s0, 4(sp)
   10a20:	1e 03 00 88 	store_32 s24, (sp)
   10a24:	f9 04 01 f8 	call 267236 <sprintf>
   10a28:	02 00 00 4f 	movehi s0, 2
   10a2c:	1e 13 00 88 	store_32 s24, 4(sp)
   10a30:	00 fc 29 00 	or s0, s0, 2687
   10a34:	1e 00 00 88 	store_32 s0, (sp)
   10a38:	e7 04 01 f8 	call 267164 <printf>
   10a3c:	01 00 00 4f 	movehi s0, 1
   10a40:	20 4c 2c 00 	or s1, s0, 2835
   10a44:	00 00 fc c0 	move s0, s24
   10a48:	36 06 01 f8 	call 268504 <fopen>
   10a4c:	3a 04 00 4f 	movehi s1, 58
   10a50:	21 c0 27 00 	or s1, s1, 2544
   10a54:	01 00 00 88 	store_32 s0, (s1)
   10a58:	09 f7 ff f9 	call -9180 <I_InitGraphics>
   10a5c:	13 04 00 4f 	movehi s0, 51
   10a60:	3b 04 00 4f 	movehi s1, 59
   10a64:	4b 04 00 4f 	movehi s2, 43
   10a68:	00 40 45 00 	or s0, s0, 4432
   10a6c:	1e 40 02 88 	store_32 s0, 144(sp)
   10a70:	1a 04 00 4f 	movehi s0, 58
   10a74:	20 c3 6d 00 	or s25, s0, 7024
   10a78:	01 40 02 00 	or s0, s1, 144
   10a7c:	1e 30 02 88 	store_32 s0, 140(sp)
   10a80:	02 00 40 00 	or s0, s2, 4096
   10a84:	1e 10 02 88 	store_32 s0, 132(sp)
   10a88:	00 00 00 4f 	movehi s0, 0
   10a8c:	3a 04 00 4f 	movehi s1, 58
   10a90:	55 a8 2a 4f 	movehi s2, 87381
   10a94:	00 34 79 00 	or s0, s0, 7757
   10a98:	1e c0 01 88 	store_32 s0, 112(sp)
   10a9c:	01 60 5f 00 	or s0, s1, 6104
   10aa0:	1e 50 02 88 	store_32 s0, 148(sp)
   10aa4:	02 ac 2a 00 	or s0, s2, 2731
   10aa8:	1e 00 02 88 	store_32 s0, 128(sp)
   10aac:	1a 04 00 4f 	movehi s0, 58
   10ab0:	3a 04 00 4f 	movehi s1, 58
   10ab4:	5a 04 00 4f 	movehi s2, 58
   10ab8:	00 90 5f 00 	or s0, s0, 6116
   10abc:	1e f0 01 88 	store_32 s0, 124(sp)
   10ac0:	01 a0 17 00 	or s0, s1, 1512
   10ac4:	1e e0 01 88 	store_32 s0, 120(sp)
   10ac8:	02 b0 7f 00 	or s0, s2, 8172
   10acc:	1e d0 01 88 	store_32 s0, 116(sp)
   10ad0:	1a 04 00 4f 	movehi s0, 58
   10ad4:	3e 23 02 88 	store_32 s25, 136(sp)
   10ad8:	3a 04 00 4f 	movehi s1, 58
   10adc:	5a 04 00 4f 	movehi s2, 58
   10ae0:	00 13 38 00 	or s24, s0, 3588
   10ae4:	61 03 28 00 	or s27, s1, 2560
   10ae8:	42 13 28 00 	or s26, s2, 2564
   10aec:	c4 f5 ff f9 	call -10480 <I_StartFrame>
   10af0:	1e 40 02 a8 	load_32 s0, 144(sp)
   10af4:	00 00 00 a8 	load_32 s0, (s0)
   10af8:	20 09 00 f2 	bz s0, 292 <D_DoomLoop+0x258>
   10afc:	0d 00 00 f6 	b 52 <D_DoomLoop+0x16c>
   10b00:	19 00 00 a8 	load_32 s0, (s25)
   10b04:	3e 30 02 a8 	load_32 s1, 140(sp)
   10b08:	00 60 04 07 	mull_i s0, s0, 280
   10b0c:	01 00 50 c0 	add_i s0, s1, s0
   10b10:	00 00 00 a8 	load_32 s0, (s0)
   10b14:	64 ee 00 f8 	call 244112 <S_UpdateSounds>
   10b18:	74 fe ff f9 	call -1584 <D_Display>
   10b1c:	a4 f5 ff f9 	call -10608 <I_SubmitSound>
   10b20:	b7 f5 ff f9 	call -10532 <I_StartFrame>
   10b24:	1e 40 02 a8 	load_32 s0, 144(sp)
   10b28:	00 00 00 a8 	load_32 s0, (s0)
   10b2c:	80 07 00 f2 	bz s0, 240 <D_DoomLoop+0x258>
   10b30:	b5 f5 ff f9 	call -10540 <I_StartTic>
   10b34:	1e 10 02 a8 	load_32 s0, 132(sp)
   10b38:	00 00 00 a8 	load_32 s0, (s0)
   10b3c:	00 08 00 11 	cmpne_i s0, s0, 2
   10b40:	a0 00 00 f4 	bnz s0, 20 <D_DoomLoop+0x190>
   10b44:	1e c0 01 a8 	load_32 s0, 112(sp)
   10b48:	06 b8 00 f8 	call 188440 <W_CheckNumForName>
   10b4c:	00 00 00 14 	cmplt_i s0, s0, 0
   10b50:	60 02 00 f4 	bnz s0, 76 <D_DoomLoop+0x1d8>
   10b54:	18 00 00 a8 	load_32 s0, (s24)
   10b58:	3b 00 00 a8 	load_32 s1, (s27)
   10b5c:	20 80 00 c1 	cmpeq_i s1, s0, s1
   10b60:	e1 01 00 f4 	bnz s1, 60 <D_DoomLoop+0x1d8>
   10b64:	00 10 00 0b 	shl s0, s0, 4
   10b68:	3a 03 50 c0 	add_i s25, s26, s0
   10b6c:	00 80 fc c0 	move s0, s25
   10b70:	53 26 00 f8 	call 39244 <M_Responder>
   10b74:	60 00 00 f4 	bnz s0, 12 <D_DoomLoop+0x1bc>
   10b78:	00 80 fc c0 	move s0, s25
   10b7c:	89 10 00 f8 	call 16932 <G_Responder>
   10b80:	18 00 00 a8 	load_32 s0, (s24)
   10b84:	00 04 00 05 	add_i s0, s0, 1
   10b88:	00 fc 00 01 	and s0, s0, 63
   10b8c:	18 00 00 88 	store_32 s0, (s24)
   10b90:	3b 00 00 a8 	load_32 s1, (s27)
   10b94:	20 80 10 c1 	cmpne_i s1, s0, s1
   10b98:	61 fe ff f5 	bnz s1, -52 <D_DoomLoop+0x1a0>
   10b9c:	3e 23 02 a8 	load_32 s25, 136(sp)
   10ba0:	19 00 00 a8 	load_32 s0, (s25)
   10ba4:	3e 50 02 a8 	load_32 s1, 148(sp)
   10ba8:	00 80 01 07 	mull_i s0, s0, 96
   10bac:	21 00 00 a8 	load_32 s1, (s1)
   10bb0:	5e 00 02 a8 	load_32 s2, 128(sp)
   10bb4:	41 00 f1 c1 	mulh_i s2, s1, s2
   10bb8:	62 04 00 0a 	shr s3, s2, 1
   10bbc:	42 7c 00 0a 	shr s2, s2, 31
   10bc0:	43 00 51 c0 	add_i s2, s3, s2
   10bc4:	42 30 00 07 	mull_i s2, s2, 12
   10bc8:	21 00 61 c0 	sub_i s1, s1, s2
   10bcc:	5e f0 01 a8 	load_32 s2, 124(sp)
   10bd0:	21 0c 00 0b 	shl s1, s1, 3
   10bd4:	02 00 50 c0 	add_i s0, s2, s0
   10bd8:	00 80 50 c0 	add_i s0, s0, s1
   10bdc:	90 0d 00 f8 	call 13888 <G_BuildTiccmd>
   10be0:	1e e0 01 a8 	load_32 s0, 120(sp)
   10be4:	00 00 00 a8 	load_32 s0, (s0)
   10be8:	40 00 00 f2 	bz s0, 8 <D_DoomLoop+0x22c>
   10bec:	0e 00 00 f8 	call 56 <D_DoAdvanceDemo>
   10bf0:	e4 2b 00 f8 	call 44944 <M_Ticker>
   10bf4:	33 11 00 f8 	call 17612 <G_Ticker>
   10bf8:	3e d0 01 a8 	load_32 s1, 116(sp)
   10bfc:	01 00 00 a8 	load_32 s0, (s1)
   10c00:	00 04 00 05 	add_i s0, s0, 1
   10c04:	01 00 00 88 	store_32 s0, (s1)
   10c08:	3e 50 02 a8 	load_32 s1, 148(sp)
   10c0c:	01 00 00 a8 	load_32 s0, (s1)
   10c10:	00 04 00 05 	add_i s0, s0, 1
   10c14:	01 00 00 88 	store_32 s0, (s1)
   10c18:	ba ff ff f7 	b -280 <D_DoomLoop+0x13c>
   10c1c:	1e 0c 00 f8 	call 12408 <TryRunTics>
   10c20:	b8 ff ff f7 	b -288 <D_DoomLoop+0x13c>

0000000000010c24 D_DoAdvanceDemo:
   10c24:	de 03 ff 05 	add_i sp, sp, -64
   10c28:	1e f3 00 88 	store_32 s24, 60(sp)
   10c2c:	3e e3 00 88 	store_32 s25, 56(sp)
   10c30:	fe d3 00 88 	store_32 ra, 52(sp)
   10c34:	1a 04 00 4f 	movehi s0, 58
   10c38:	3b 04 00 4f 	movehi s1, 59
   10c3c:	5b 04 00 4f 	movehi s2, 59
   10c40:	00 c0 6d 00 	or s0, s0, 7024
   10c44:	21 40 02 00 	or s1, s1, 144
   10c48:	7b 04 00 4f 	movehi s3, 59
   10c4c:	00 00 00 a8 	load_32 s0, (s0)
   10c50:	42 20 19 00 	or s2, s2, 1608
   10c54:	63 f0 01 00 	or s3, s3, 124
   10c58:	00 60 04 07 	mull_i s0, s0, 280
   10c5c:	01 00 50 c0 	add_i s0, s1, s0
   10c60:	20 00 00 0f 	move s1, 0
   10c64:	20 10 00 88 	store_32 s1, 4(s0)
   10c68:	1a 04 00 4f 	movehi s0, 58
   10c6c:	00 a0 17 00 	or s0, s0, 1512
   10c70:	20 00 00 88 	store_32 s1, (s0)
   10c74:	1a 04 00 4f 	movehi s0, 58
   10c78:	22 00 00 88 	store_32 s1, (s2)
   10c7c:	4b 04 00 4f 	movehi s2, 43
   10c80:	23 00 00 88 	store_32 s1, (s3)
   10c84:	7a 04 00 4f 	movehi s3, 58
   10c88:	00 60 6f 00 	or s0, s0, 7128
   10c8c:	42 00 40 00 	or s2, s2, 4096
   10c90:	23 d3 27 00 	or s25, s3, 2548
   10c94:	20 00 00 88 	store_32 s1, (s0)
   10c98:	02 03 00 a8 	load_32 s24, (s2)
   10c9c:	19 00 00 a8 	load_32 s0, (s25)
   10ca0:	38 0c 00 10 	cmpeq_i s1, s24, 3
   10ca4:	00 04 00 05 	add_i s0, s0, 1
   10ca8:	e1 00 00 f4 	bnz s1, 28 <D_DoAdvanceDemo+0xa0>
   10cac:	20 18 00 0f 	move s1, 6
   10cb0:	92 0f 01 f8 	call 278088 <__modsi3>
   10cb4:	20 18 00 16 	cmpgt_u s1, s0, 6
   10cb8:	19 00 00 88 	store_32 s0, (s25)
   10cbc:	81 07 00 f4 	bnz s1, 240 <D_DoAdvanceDemo+0x188>
   10cc0:	06 00 00 f6 	b 24 <D_DoAdvanceDemo+0xb4>
   10cc4:	20 1c 00 0f 	move s1, 7
   10cc8:	8c 0f 01 f8 	call 278064 <__modsi3>
   10ccc:	20 18 00 16 	cmpgt_u s1, s0, 6
   10cd0:	19 00 00 88 	store_32 s0, (s25)
   10cd4:	c1 06 00 f4 	bnz s1, 216 <D_DoAdvanceDemo+0x188>
   10cd8:	23 00 00 4f 	movehi s1, 3
   10cdc:	00 08 00 0b 	shl s0, s0, 2
   10ce0:	21 30 2b 00 	or s1, s1, 2764
   10ce4:	00 80 50 c0 	add_i s0, s0, s1
   10ce8:	00 00 00 a8 	load_32 s0, (s0)
   10cec:	00 00 00 f0 	b s0
   10cf0:	38 08 00 10 	cmpeq_i s1, s24, 2
   10cf4:	18 08 00 11 	cmpne_i s0, s24, 2
   10cf8:	81 07 00 f4 	bnz s1, 240 <D_DoAdvanceDemo+0x1c4>
   10cfc:	20 a8 02 0f 	move s1, 170
   10d00:	3b 00 00 f6 	b 236 <D_DoAdvanceDemo+0x1c8>
   10d04:	1a 04 00 4f 	movehi s0, 58
   10d08:	20 0c 00 0f 	move s1, 3
   10d0c:	58 08 00 11 	cmpne_i s2, s24, 2
   10d10:	00 a0 7f 00 	or s0, s0, 8168
   10d14:	20 00 00 88 	store_32 s1, (s0)
   10d18:	1a 04 00 4f 	movehi s0, 58
   10d1c:	00 50 48 00 	or s0, s0, 4628
   10d20:	02 05 00 f4 	bnz s2, 160 <D_DoAdvanceDemo+0x19c>
   10d24:	3a 04 00 4f 	movehi s1, 58
   10d28:	60 00 00 4f 	movehi s3, 0
   10d2c:	40 04 06 0f 	move s2, 385
   10d30:	40 00 00 88 	store_32 s2, (s0)
   10d34:	21 40 48 00 	or s1, s1, 4624
   10d38:	03 20 63 00 	or s0, s3, 6344
   10d3c:	01 00 00 88 	store_32 s0, (s1)
   10d40:	38 00 00 f6 	b 224 <D_DoAdvanceDemo+0x1fc>
   10d44:	00 00 00 4f 	movehi s0, 0
   10d48:	00 0c 14 00 	or s0, s0, 1283
   10d4c:	17 00 00 f6 	b 92 <D_DoAdvanceDemo+0x184>
   10d50:	1a 04 00 4f 	movehi s0, 58
   10d54:	3a 04 00 4f 	movehi s1, 58
   10d58:	40 20 03 0f 	move s2, 200
   10d5c:	00 50 48 00 	or s0, s0, 4628
   10d60:	60 00 00 4f 	movehi s3, 0
   10d64:	40 00 00 88 	store_32 s2, (s0)
   10d68:	01 a0 7f 00 	or s0, s1, 8168
   10d6c:	3a 04 00 4f 	movehi s1, 58
   10d70:	40 0c 00 0f 	move s2, 3
   10d74:	40 00 00 88 	store_32 s2, (s0)
   10d78:	03 04 3f 00 	or s0, s3, 4033
   10d7c:	21 40 48 00 	or s1, s1, 4624
   10d80:	01 00 00 88 	store_32 s0, (s1)
   10d84:	0a 00 00 f6 	b 40 <D_DoAdvanceDemo+0x188>
   10d88:	02 00 00 4f 	movehi s0, 2
   10d8c:	00 cc 10 00 	or s0, s0, 1075
   10d90:	06 00 00 f6 	b 24 <D_DoAdvanceDemo+0x184>
   10d94:	02 00 00 4f 	movehi s0, 2
   10d98:	00 a0 7a 00 	or s0, s0, 7848
   10d9c:	03 00 00 f6 	b 12 <D_DoAdvanceDemo+0x184>
   10da0:	00 00 00 4f 	movehi s0, 0
   10da4:	00 70 67 00 	or s0, s0, 6620
   10da8:	80 1b 00 f8 	call 28160 <G_DeferedPlayDemo>
   10dac:	fe d3 00 a8 	load_32 ra, 52(sp)
   10db0:	3e e3 00 a8 	load_32 s25, 56(sp)
   10db4:	1e f3 00 a8 	load_32 s24, 60(sp)
   10db8:	de 03 01 05 	add_i sp, sp, 64
   10dbc:	1f 00 00 f0 	ret
   10dc0:	40 20 03 0f 	move s2, 200
   10dc4:	40 00 00 88 	store_32 s2, (s0)
   10dc8:	38 0c 00 11 	cmpne_i s1, s24, 3
   10dcc:	1a 04 00 4f 	movehi s0, 58
   10dd0:	41 03 00 f4 	bnz s1, 104 <D_DoAdvanceDemo+0x214>
   10dd4:	20 00 00 4f 	movehi s1, 0
   10dd8:	00 40 48 00 	or s0, s0, 4624
   10ddc:	21 04 3f 00 	or s1, s1, 4033
   10de0:	20 00 00 88 	store_32 s1, (s0)
   10de4:	f2 ff ff f7 	b -56 <D_DoAdvanceDemo+0x188>
   10de8:	20 04 06 0f 	move s1, 385
   10dec:	5a 04 00 4f 	movehi s2, 58
   10df0:	7a 04 00 4f 	movehi s3, 58
   10df4:	80 00 00 4f 	movehi s4, 0
   10df8:	42 50 48 00 	or s2, s2, 4628
   10dfc:	22 00 00 88 	store_32 s1, (s2)
   10e00:	5a 04 00 4f 	movehi s2, 58
   10e04:	23 a0 7f 00 	or s1, s3, 8168
   10e08:	60 0c 00 0f 	move s3, 3
   10e0c:	42 40 48 00 	or s2, s2, 4624
   10e10:	61 00 00 88 	store_32 s3, (s1)
   10e14:	24 20 63 00 	or s1, s4, 6344
   10e18:	22 00 00 88 	store_32 s1, (s2)
   10e1c:	80 00 00 f4 	bnz s0, 16 <D_DoAdvanceDemo+0x208>
   10e20:	00 08 01 0f 	move s0, 66
   10e24:	06 ee 00 f8 	call 243736 <S_StartMusic>
   10e28:	e1 ff ff f7 	b -124 <D_DoAdvanceDemo+0x188>
   10e2c:	00 74 00 0f 	move s0, 29
   10e30:	03 ee 00 f8 	call 243724 <S_StartMusic>
   10e34:	de ff ff f7 	b -136 <D_DoAdvanceDemo+0x188>
   10e38:	21 00 00 4f 	movehi s1, 1
   10e3c:	00 40 48 00 	or s0, s0, 4624
   10e40:	21 a8 41 00 	or s1, s1, 4202
   10e44:	20 00 00 88 	store_32 s1, (s0)
   10e48:	d9 ff ff f7 	b -156 <D_DoAdvanceDemo+0x188>

0000000000010e4c D_PageTicker:
   10e4c:	1a 04 00 4f 	movehi s0, 58
   10e50:	00 50 48 00 	or s0, s0, 4628
   10e54:	20 00 00 a8 	load_32 s1, (s0)
   10e58:	41 fc ff 05 	add_i s2, s1, -1
   10e5c:	40 00 00 88 	store_32 s2, (s0)
   10e60:	21 00 00 12 	cmpgt_i s1, s1, 0
   10e64:	41 00 00 f4 	bnz s1, 8 <D_PageTicker+0x20>
   10e68:	02 00 00 f6 	b 8 <D_PageTicker+0x24>
   10e6c:	1f 00 00 f0 	ret
   10e70:	1a 04 00 4f 	movehi s0, 58
   10e74:	20 04 00 0f 	move s1, 1
   10e78:	00 a0 17 00 	or s0, s0, 1512
   10e7c:	20 00 00 88 	store_32 s1, (s0)
   10e80:	1f 00 00 f0 	ret

0000000000010e84 D_AdvanceDemo:
   10e84:	1a 04 00 4f 	movehi s0, 58
   10e88:	20 04 00 0f 	move s1, 1
   10e8c:	00 a0 17 00 	or s0, s0, 1512
   10e90:	20 00 00 88 	store_32 s1, (s0)
   10e94:	1f 00 00 f0 	ret

0000000000010e98 D_StartTitle:
   10e98:	1a 04 00 4f 	movehi s0, 58
   10e9c:	20 00 00 0f 	move s1, 0
   10ea0:	5a 04 00 4f 	movehi s2, 58
   10ea4:	00 60 6f 00 	or s0, s0, 7128
   10ea8:	20 00 00 88 	store_32 s1, (s0)
   10eac:	1a 04 00 4f 	movehi s0, 58
   10eb0:	22 d0 27 00 	or s1, s2, 2548
   10eb4:	40 fc ff 0f 	move s2, -1
   10eb8:	00 a0 17 00 	or s0, s0, 1512
   10ebc:	41 00 00 88 	store_32 s2, (s1)
   10ec0:	20 04 00 0f 	move s1, 1
   10ec4:	20 00 00 88 	store_32 s1, (s0)
   10ec8:	1f 00 00 f0 	ret

0000000000010ecc D_AddFile:
   10ecc:	de 03 ff 05 	add_i sp, sp, -64
   10ed0:	1e f3 00 88 	store_32 s24, 60(sp)
   10ed4:	3e e3 00 88 	store_32 s25, 56(sp)
   10ed8:	5e d3 00 88 	store_32 s26, 52(sp)
   10edc:	fe c3 00 88 	store_32 ra, 48(sp)
   10ee0:	3a 04 00 4f 	movehi s1, 58
   10ee4:	00 03 f0 c0 	move s24, s0
   10ee8:	00 00 00 0f 	move s0, 0
   10eec:	21 a0 5a 00 	or s1, s1, 5800
   10ef0:	40 08 00 0b 	shl s2, s0, 2
   10ef4:	41 03 51 c0 	add_i s26, s1, s2
   10ef8:	00 04 00 05 	add_i s0, s0, 1
   10efc:	5a 00 00 a8 	load_32 s2, (s26)
   10f00:	82 ff ff f5 	bnz s2, -16 <D_AddFile+0x24>
   10f04:	00 00 fc c0 	move s0, s24
   10f08:	26 06 01 f8 	call 268440 <strlen>
   10f0c:	00 04 00 05 	add_i s0, s0, 1
   10f10:	cc f0 00 f8 	call 246576 <malloc>
   10f14:	20 03 f0 c0 	move s25, s0
   10f18:	20 00 fc c0 	move s1, s24
   10f1c:	2c 06 01 f8 	call 268464 <strcpy>
   10f20:	3a 03 00 88 	store_32 s25, (s26)
   10f24:	fe c3 00 a8 	load_32 ra, 48(sp)
   10f28:	5e d3 00 a8 	load_32 s26, 52(sp)
   10f2c:	3e e3 00 a8 	load_32 s25, 56(sp)
   10f30:	1e f3 00 a8 	load_32 s24, 60(sp)
   10f34:	de 03 01 05 	add_i sp, sp, 64
   10f38:	1f 00 00 f0 	ret

0000000000010f3c IdentifyVersion:
   10f3c:	de 03 ff 05 	add_i sp, sp, -64
   10f40:	1e f3 00 88 	store_32 s24, 60(sp)
   10f44:	3e e3 00 88 	store_32 s25, 56(sp)
   10f48:	5e d3 00 88 	store_32 s26, 52(sp)
   10f4c:	fe c3 00 88 	store_32 ra, 48(sp)
   10f50:	0b 04 00 4f 	movehi s0, 43
   10f54:	5a 04 00 4f 	movehi s2, 58
   10f58:	60 04 00 0f 	move s3, 1
   10f5c:	20 00 40 00 	or s1, s0, 4096
   10f60:	00 00 00 0f 	move s0, 0
   10f64:	01 00 00 88 	store_32 s0, (s1)
   10f68:	22 e0 27 00 	or s1, s2, 2552
   10f6c:	5a 04 00 4f 	movehi s2, 58
   10f70:	61 00 00 88 	store_32 s3, (s1)
   10f74:	22 a0 5a 00 	or s1, s2, 5800
   10f78:	40 08 00 0b 	shl s2, s0, 2
   10f7c:	41 03 51 c0 	add_i s26, s1, s2
   10f80:	00 04 00 05 	add_i s0, s0, 1
   10f84:	5a 00 00 a8 	load_32 s2, (s26)
   10f88:	82 ff ff f5 	bnz s2, -16 <IdentifyVersion+0x3c>
   10f8c:	00 2b 00 0f 	move s24, 10
   10f90:	00 00 fc c0 	move s0, s24
   10f94:	ab f0 00 f8 	call 246444 <malloc>
   10f98:	20 03 f0 c0 	move s25, s0
   10f9c:	02 00 00 4f 	movehi s0, 2
   10fa0:	20 9c 36 00 	or s1, s0, 3495
   10fa4:	00 80 fc c0 	move s0, s25
   10fa8:	40 00 fc c0 	move s2, s24
   10fac:	56 03 01 f8 	call 265560 <memcpy>
   10fb0:	3a 03 00 88 	store_32 s25, (s26)
   10fb4:	fe c3 00 a8 	load_32 ra, 48(sp)
   10fb8:	5e d3 00 a8 	load_32 s26, 52(sp)
   10fbc:	3e e3 00 a8 	load_32 s25, 56(sp)
   10fc0:	1e f3 00 a8 	load_32 s24, 60(sp)
   10fc4:	de 03 01 05 	add_i sp, sp, 64
   10fc8:	1f 00 00 f0 	ret

0000000000010fcc FindResponseFile:
   10fcc:	de 03 fd 05 	add_i sp, sp, -192
   10fd0:	1e f3 02 88 	store_32 s24, 188(sp)
   10fd4:	3e e3 02 88 	store_32 s25, 184(sp)
   10fd8:	5e d3 02 88 	store_32 s26, 180(sp)
   10fdc:	7e c3 02 88 	store_32 s27, 176(sp)
   10fe0:	fe b3 02 88 	store_32 ra, 172(sp)
   10fe4:	1b 04 00 4f 	movehi s0, 59
   10fe8:	80 70 26 00 	or s4, s0, 2460
   10fec:	04 00 00 a8 	load_32 s0, (s4)
   10ff0:	20 08 00 14 	cmplt_i s1, s0, 2
   10ff4:	41 15 00 f4 	bnz s1, 680 <FindResponseFile+0x2d0>
   10ff8:	3b 04 00 4f 	movehi s1, 59
   10ffc:	20 07 00 0f 	move s25, 1
   11000:	61 83 26 00 	or s27, s1, 2464
   11004:	3b 00 00 a8 	load_32 s1, (s27)
   11008:	19 0b 00 0b 	shl s24, s25, 2
   1100c:	41 00 5c c0 	add_i s2, s1, s24
   11010:	42 00 00 a8 	load_32 s2, (s2)
   11014:	62 00 00 a0 	load_u8 s3, (s2)
   11018:	63 00 01 11 	cmpne_i s3, s3, 64
   1101c:	43 00 00 f4 	bnz s3, 8 <FindResponseFile+0x58>
   11020:	05 00 00 f6 	b 20 <FindResponseFile+0x68>
   11024:	39 07 00 05 	add_i s25, s25, 1
   11028:	59 00 40 c1 	cmplt_i s2, s25, s0
   1102c:	e2 fe ff f5 	bnz s2, -36 <FindResponseFile+0x3c>
   11030:	9b 00 00 f6 	b 620 <FindResponseFile+0x2d0>
   11034:	21 00 00 4f 	movehi s1, 1
   11038:	9e 30 01 88 	store_32 s4, 76(sp)
   1103c:	02 04 00 05 	add_i s0, s2, 1
   11040:	21 34 04 00 	or s1, s1, 269
   11044:	b7 04 01 f8 	call 266972 <fopen>
   11048:	40 03 f0 c0 	move s26, s0
   1104c:	5a 00 00 f4 	bnz s26, 8 <FindResponseFile+0x88>
   11050:	9a 00 00 f6 	b 616 <FindResponseFile+0x2ec>
   11054:	1b 00 00 a8 	load_32 s0, (s27)
   11058:	20 00 00 4f 	movehi s1, 0
   1105c:	00 00 5c c0 	add_i s0, s0, s24
   11060:	00 00 00 a8 	load_32 s0, (s0)
   11064:	00 04 00 05 	add_i s0, s0, 1
   11068:	1e 10 00 88 	store_32 s0, 4(sp)
   1106c:	01 58 4f 00 	or s0, s1, 5078
   11070:	1e 00 00 88 	store_32 s0, (sp)
   11074:	58 03 01 f8 	call 265568 <printf>
   11078:	00 03 00 0f 	move s24, 0
   1107c:	00 00 fd c0 	move s0, s26
   11080:	40 08 00 0f 	move s2, 2
   11084:	20 00 fc c0 	move s1, s24
   11088:	1d 05 01 f8 	call 267380 <fseek>
   1108c:	00 00 fd c0 	move s0, s26
   11090:	22 05 01 f8 	call 267400 <ftell>
   11094:	20 00 fd c0 	move s1, s26
   11098:	3e 40 01 88 	store_32 s1, 80(sp)
   1109c:	40 03 f0 c0 	move s26, s0
   110a0:	00 80 f0 c0 	move s0, s1
   110a4:	1e 63 01 88 	store_32 s24, 88(sp)
   110a8:	20 00 fc c0 	move s1, s24
   110ac:	40 00 fc c0 	move s2, s24
   110b0:	13 05 01 f8 	call 267340 <fseek>
   110b4:	00 00 fd c0 	move s0, s26
   110b8:	62 f0 00 f8 	call 246152 <malloc>
   110bc:	00 07 00 0f 	move s24, 1
   110c0:	7e 53 01 88 	store_32 s27, 84(sp)
   110c4:	60 03 f0 c0 	move s27, s0
   110c8:	20 00 fd c0 	move s1, s26
   110cc:	40 00 fc c0 	move s2, s24
   110d0:	7e 40 01 a8 	load_32 s3, 80(sp)
   110d4:	e5 04 01 f8 	call 267156 <fread>
   110d8:	1e 40 01 a8 	load_32 s0, 80(sp)
   110dc:	f8 04 01 f8 	call 267232 <fclose>
   110e0:	1e 30 01 a8 	load_32 s0, 76(sp)
   110e4:	59 04 00 05 	add_i s2, s25, 1
   110e8:	20 00 00 a8 	load_32 s1, (s0)
   110ec:	1e 50 01 a8 	load_32 s0, 84(sp)
   110f0:	62 80 30 c1 	cmpge_i s3, s2, s1
   110f4:	00 00 00 a8 	load_32 s0, (s0)
   110f8:	3e 63 01 a8 	load_32 s25, 88(sp)
   110fc:	c3 01 00 f4 	bnz s3, 56 <FindResponseFile+0x168>
   11100:	80 00 00 0f 	move s4, 0
   11104:	7e 70 01 05 	add_i s3, sp, 92
   11108:	a2 08 00 0b 	shl s5, s2, 2
   1110c:	a0 80 52 c0 	add_i s5, s0, s5
   11110:	c4 08 00 0b 	shl s6, s4, 2
   11114:	42 04 00 05 	add_i s2, s2, 1
   11118:	c3 00 53 c0 	add_i s6, s3, s6
   1111c:	a5 00 00 a8 	load_32 s5, (s5)
   11120:	24 07 00 05 	add_i s25, s4, 1
   11124:	e2 80 40 c1 	cmplt_i s7, s2, s1
   11128:	a6 00 00 88 	store_32 s5, (s6)
   1112c:	80 80 fc c0 	move s4, s25
   11130:	c7 fe ff f5 	bnz s7, -40 <FindResponseFile+0x13c>
   11134:	00 00 00 a8 	load_32 s0, (s0)
   11138:	1e 40 01 88 	store_32 s0, 80(sp)
   1113c:	00 40 06 0f 	move s0, 400
   11140:	40 f0 00 f8 	call 246016 <malloc>
   11144:	20 00 f0 c0 	move s1, s0
   11148:	3e 20 01 88 	store_32 s1, 72(sp)
   1114c:	1e 50 01 a8 	load_32 s0, 84(sp)
   11150:	40 30 06 0f 	move s2, 396
   11154:	20 00 00 88 	store_32 s1, (s0)
   11158:	01 10 00 05 	add_i s0, s1, 4
   1115c:	3e 60 01 a8 	load_32 s1, 88(sp)
   11160:	51 02 01 f8 	call 264516 <memset>
   11164:	5e 20 01 a8 	load_32 s2, 72(sp)
   11168:	1e 40 01 a8 	load_32 s0, 80(sp)
   1116c:	02 00 00 88 	store_32 s0, (s2)
   11170:	1e 60 01 a8 	load_32 s0, 88(sp)
   11174:	03 00 00 f6 	b 12 <FindResponseFile+0x1b4>
   11178:	3e 50 01 a8 	load_32 s1, 84(sp)
   1117c:	41 00 00 a8 	load_32 s2, (s1)
   11180:	38 08 00 0b 	shl s1, s24, 2
   11184:	22 80 50 c0 	add_i s1, s2, s1
   11188:	60 00 3d c1 	cmpge_i s3, s0, s26
   1118c:	5b 00 50 c0 	add_i s2, s27, s0
   11190:	41 00 00 88 	store_32 s2, (s1)
   11194:	43 01 00 f4 	bnz s3, 40 <FindResponseFile+0x1f0>
   11198:	3b 00 50 c0 	add_i s1, s27, s0
   1119c:	21 00 00 a0 	load_u8 s1, (s1)
   111a0:	21 7c ff 05 	add_i s1, s1, -33
   111a4:	21 fc 03 01 	and s1, s1, 255
   111a8:	21 64 01 16 	cmpgt_u s1, s1, 89
   111ac:	81 00 00 f4 	bnz s1, 16 <FindResponseFile+0x1f0>
   111b0:	00 04 00 05 	add_i s0, s0, 1
   111b4:	20 00 4d c1 	cmplt_i s1, s0, s26
   111b8:	01 ff ff f5 	bnz s1, -32 <FindResponseFile+0x1cc>
   111bc:	3b 00 50 c0 	add_i s1, s27, s0
   111c0:	7e 60 01 a8 	load_32 s3, 88(sp)
   111c4:	18 07 00 05 	add_i s24, s24, 1
   111c8:	40 00 3d c1 	cmpge_i s2, s0, s26
   111cc:	61 00 00 82 	store_8 s3, (s1)
   111d0:	62 01 00 f4 	bnz s2, 44 <FindResponseFile+0x230>
   111d4:	00 04 00 05 	add_i s0, s0, 1
   111d8:	20 00 3d c1 	cmpge_i s1, s0, s26
   111dc:	01 01 00 f4 	bnz s1, 32 <FindResponseFile+0x230>
   111e0:	3b 00 50 c0 	add_i s1, s27, s0
   111e4:	21 00 00 a0 	load_u8 s1, (s1)
   111e8:	21 7c ff 05 	add_i s1, s1, -33
   111ec:	21 fc 03 01 	and s1, s1, 255
   111f0:	21 64 01 16 	cmpgt_u s1, s1, 89
   111f4:	01 ff ff f5 	bnz s1, -32 <FindResponseFile+0x208>
   111f8:	e0 ff ff f7 	b -128 <FindResponseFile+0x1ac>
   111fc:	59 02 00 f2 	bz s25, 72 <FindResponseFile+0x278>
   11200:	5e 33 01 a8 	load_32 s26, 76(sp)
   11204:	00 00 00 0f 	move s0, 0
   11208:	7e 53 01 a8 	load_32 s27, 84(sp)
   1120c:	3e 70 01 05 	add_i s1, sp, 92
   11210:	40 08 00 0b 	shl s2, s0, 2
   11214:	41 00 51 c0 	add_i s2, s1, s2
   11218:	98 08 00 0b 	shl s4, s24, 2
   1121c:	00 04 00 05 	add_i s0, s0, 1
   11220:	62 00 00 a8 	load_32 s3, (s2)
   11224:	5b 00 00 a8 	load_32 s2, (s27)
   11228:	a0 80 8c c1 	cmplt_u s5, s0, s25
   1122c:	82 00 52 c0 	add_i s4, s2, s4
   11230:	58 04 00 05 	add_i s2, s24, 1
   11234:	64 00 00 88 	store_32 s3, (s4)
   11238:	00 03 f1 c0 	move s24, s2
   1123c:	a5 fe ff f5 	bnz s5, -44 <FindResponseFile+0x244>
   11240:	04 00 00 f6 	b 16 <FindResponseFile+0x284>
   11244:	40 00 fc c0 	move s2, s24
   11248:	5e 33 01 a8 	load_32 s26, 76(sp)
   1124c:	7e 53 01 a8 	load_32 s27, 84(sp)
   11250:	02 00 00 4f 	movehi s0, 2
   11254:	5a 00 00 88 	store_32 s2, (s26)
   11258:	5e 10 00 88 	store_32 s2, 4(sp)
   1125c:	00 ac 03 00 	or s0, s0, 235
   11260:	1e 00 00 88 	store_32 s0, (sp)
   11264:	dc 02 01 f8 	call 265072 <printf>
   11268:	1a 00 00 a8 	load_32 s0, (s26)
   1126c:	00 08 00 14 	cmplt_i s0, s0, 2
   11270:	60 01 00 f4 	bnz s0, 44 <FindResponseFile+0x2d0>
   11274:	00 07 00 0f 	move s24, 1
   11278:	1b 00 00 a8 	load_32 s0, (s27)
   1127c:	38 08 00 0b 	shl s1, s24, 2
   11280:	00 80 50 c0 	add_i s0, s0, s1
   11284:	00 00 00 a8 	load_32 s0, (s0)
   11288:	b1 03 01 f8 	call 265924 <puts>
   1128c:	1a 00 00 a8 	load_32 s0, (s26)
   11290:	18 07 00 05 	add_i s24, s24, 1
   11294:	18 00 40 c1 	cmplt_i s0, s24, s0
   11298:	00 ff ff f5 	bnz s0, -32 <FindResponseFile+0x2ac>
   1129c:	fe b3 02 a8 	load_32 ra, 172(sp)
   112a0:	7e c3 02 a8 	load_32 s27, 176(sp)
   112a4:	5e d3 02 a8 	load_32 s26, 180(sp)
   112a8:	3e e3 02 a8 	load_32 s25, 184(sp)
   112ac:	1e f3 02 a8 	load_32 s24, 188(sp)
   112b0:	de 03 03 05 	add_i sp, sp, 192
   112b4:	1f 00 00 f0 	ret
   112b8:	00 00 00 4f 	movehi s0, 0
   112bc:	00 4c 79 00 	or s0, s0, 7763
   112c0:	1e 00 00 88 	store_32 s0, (sp)
   112c4:	c4 02 01 f8 	call 264976 <printf>
   112c8:	00 04 00 0f 	move s0, 1
   112cc:	32 08 01 f8 	call 270536 <exit>

00000000000112d0 D_DoomMain:
   112d0:	de 03 f7 05 	add_i sp, sp, -576
   112d4:	1e f3 08 88 	store_32 s24, 572(sp)
   112d8:	3e e3 08 88 	store_32 s25, 568(sp)
   112dc:	5e d3 08 88 	store_32 s26, 564(sp)
   112e0:	7e c3 08 88 	store_32 s27, 560(sp)
   112e4:	fe b3 08 88 	store_32 ra, 556(sp)
   112e8:	39 ff ff f9 	call -796 <FindResponseFile>
   112ec:	3a 04 00 4f 	movehi s1, 58
   112f0:	0b 04 00 4f 	movehi s0, 43
   112f4:	61 e0 27 00 	or s3, s1, 2552
   112f8:	3a 04 00 4f 	movehi s1, 58
   112fc:	40 00 40 00 	or s2, s0, 4096
   11300:	5e 70 01 88 	store_32 s2, 92(sp)
   11304:	00 00 00 0f 	move s0, 0
   11308:	21 a3 5a 00 	or s25, s1, 5800
   1130c:	02 00 00 88 	store_32 s0, (s2)
   11310:	40 04 00 0f 	move s2, 1
   11314:	5e 90 01 88 	store_32 s2, 100(sp)
   11318:	7e c0 01 88 	store_32 s3, 112(sp)
   1131c:	43 00 00 88 	store_32 s2, (s3)
   11320:	20 08 00 0b 	shl s1, s0, 2
   11324:	79 83 50 c0 	add_i s27, s25, s1
   11328:	00 04 00 05 	add_i s0, s0, 1
   1132c:	3b 00 00 a8 	load_32 s1, (s27)
   11330:	81 ff ff f5 	bnz s1, -16 <D_DoomMain+0x50>
   11334:	00 2b 00 0f 	move s24, 10
   11338:	00 00 fc c0 	move s0, s24
   1133c:	c1 ef 00 f8 	call 245508 <malloc>
   11340:	40 03 f0 c0 	move s26, s0
   11344:	02 00 00 4f 	movehi s0, 2
   11348:	20 9c 36 00 	or s1, s0, 3495
   1134c:	00 00 fd c0 	move s0, s26
   11350:	40 00 fc c0 	move s2, s24
   11354:	6c 02 01 f8 	call 264624 <memcpy>
   11358:	1a 04 00 4f 	movehi s0, 58
   1135c:	5b 03 00 88 	store_32 s26, (s27)
   11360:	40 03 00 0f 	move s26, 0
   11364:	00 c0 16 00 	or s0, s0, 1456
   11368:	1e 60 01 88 	store_32 s0, 88(sp)
   1136c:	40 03 00 88 	store_32 s26, (s0)
   11370:	01 00 00 4f 	movehi s0, 1
   11374:	00 40 04 00 	or s0, s0, 272
   11378:	cf 2a 00 f8 	call 43836 <M_CheckParm>
   1137c:	3a 04 00 4f 	movehi s1, 58
   11380:	21 30 48 00 	or s1, s1, 4620
   11384:	01 00 00 88 	store_32 s0, (s1)
   11388:	01 00 00 4f 	movehi s0, 1
   1138c:	00 ec 7b 00 	or s0, s0, 7931
   11390:	c9 2a 00 f8 	call 43812 <M_CheckParm>
   11394:	3a 04 00 4f 	movehi s1, 58
   11398:	21 60 48 00 	or s1, s1, 4632
   1139c:	01 00 00 88 	store_32 s0, (s1)
   113a0:	00 00 00 4f 	movehi s0, 0
   113a4:	00 88 67 00 	or s0, s0, 6626
   113a8:	c3 2a 00 f8 	call 43788 <M_CheckParm>
   113ac:	3a 04 00 4f 	movehi s1, 58
   113b0:	21 20 38 00 	or s1, s1, 3592
   113b4:	01 00 00 88 	store_32 s0, (s1)
   113b8:	00 00 00 4f 	movehi s0, 0
   113bc:	00 ac 79 00 	or s0, s0, 7787
   113c0:	bd 2a 00 f8 	call 43764 <M_CheckParm>
   113c4:	7e c3 01 a8 	load_32 s27, 112(sp)
   113c8:	1b 00 00 88 	store_32 s0, (s27)
   113cc:	02 00 00 4f 	movehi s0, 2
   113d0:	00 b8 53 00 	or s0, s0, 5358
   113d4:	b8 2a 00 f8 	call 43744 <M_CheckParm>
   113d8:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0x110>
   113dc:	03 00 00 f6 	b 12 <D_DoomMain+0x118>
   113e0:	20 08 00 0f 	move s1, 2
   113e4:	06 00 00 f6 	b 24 <D_DoomMain+0x12c>
   113e8:	00 00 00 4f 	movehi s0, 0
   113ec:	00 bc 4f 00 	or s0, s0, 5103
   113f0:	b1 2a 00 f8 	call 43716 <M_CheckParm>
   113f4:	3e 90 01 a8 	load_32 s1, 100(sp)
   113f8:	80 00 00 f2 	bz s0, 16 <D_DoomMain+0x138>
   113fc:	1a 04 00 4f 	movehi s0, 58
   11400:	00 60 6e 00 	or s0, s0, 7064
   11404:	20 00 00 88 	store_32 s1, (s0)
   11408:	1e 70 01 a8 	load_32 s0, 92(sp)
   1140c:	00 00 00 a8 	load_32 s0, (s0)
   11410:	20 0c 00 16 	cmpgt_u s1, s0, 3
   11414:	c1 01 00 f4 	bnz s1, 56 <D_DoomMain+0x17c>
   11418:	23 00 00 4f 	movehi s1, 3
   1141c:	00 08 00 0b 	shl s0, s0, 2
   11420:	21 a0 2b 00 	or s1, s1, 2792
   11424:	00 80 50 c0 	add_i s0, s0, s1
   11428:	00 00 00 a8 	load_32 s0, (s0)
   1142c:	00 00 00 f0 	b s0
   11430:	00 00 00 4f 	movehi s0, 0
   11434:	1e 33 00 88 	store_32 s24, 12(sp)
   11438:	3e 90 01 a8 	load_32 s1, 100(sp)
   1143c:	3e 20 00 88 	store_32 s1, 8(sp)
   11440:	3a 04 00 4f 	movehi s1, 58
   11444:	00 7c 47 00 	or s0, s0, 4575
   11448:	1d 00 00 f6 	b 116 <D_DoomMain+0x1ec>
   1144c:	00 28 00 0f 	move s0, 10
   11450:	1e 30 00 88 	store_32 s0, 12(sp)
   11454:	01 00 00 4f 	movehi s0, 1
   11458:	3e 90 01 a8 	load_32 s1, 100(sp)
   1145c:	3e 20 00 88 	store_32 s1, 8(sp)
   11460:	3a 04 00 4f 	movehi s1, 58
   11464:	00 7c 61 00 	or s0, s0, 6239
   11468:	15 00 00 f6 	b 84 <D_DoomMain+0x1ec>
   1146c:	01 00 00 4f 	movehi s0, 1
   11470:	1e 33 00 88 	store_32 s24, 12(sp)
   11474:	3e 90 01 a8 	load_32 s1, 100(sp)
   11478:	3e 20 00 88 	store_32 s1, 8(sp)
   1147c:	3a 04 00 4f 	movehi s1, 58
   11480:	00 38 74 00 	or s0, s0, 7438
   11484:	0e 00 00 f6 	b 56 <D_DoomMain+0x1ec>
   11488:	02 00 00 4f 	movehi s0, 2
   1148c:	1e 33 00 88 	store_32 s24, 12(sp)
   11490:	3e 90 01 a8 	load_32 s1, 100(sp)
   11494:	3e 20 00 88 	store_32 s1, 8(sp)
   11498:	3a 04 00 4f 	movehi s1, 58
   1149c:	00 b8 7a 00 	or s0, s0, 7854
   114a0:	07 00 00 f6 	b 28 <D_DoomMain+0x1ec>
   114a4:	02 00 00 4f 	movehi s0, 2
   114a8:	1e 33 00 88 	store_32 s24, 12(sp)
   114ac:	3e 90 01 a8 	load_32 s1, 100(sp)
   114b0:	3e 20 00 88 	store_32 s1, 8(sp)
   114b4:	3a 04 00 4f 	movehi s1, 58
   114b8:	00 38 40 00 	or s0, s0, 4110
   114bc:	1e 10 00 88 	store_32 s0, 4(sp)
   114c0:	01 a0 48 00 	or s0, s1, 4648
   114c4:	1e 00 00 88 	store_32 s0, (sp)
   114c8:	50 02 01 f8 	call 264512 <sprintf>
   114cc:	1a 04 00 4f 	movehi s0, 58
   114d0:	00 a0 48 00 	or s0, s0, 4648
   114d4:	1e 03 01 f8 	call 265336 <puts>
   114d8:	1b 00 00 a8 	load_32 s0, (s27)
   114dc:	80 00 00 f2 	bz s0, 16 <D_DoomMain+0x21c>
   114e0:	01 00 00 4f 	movehi s0, 1
   114e4:	00 70 04 00 	or s0, s0, 284
   114e8:	19 03 01 f8 	call 265316 <puts>
   114ec:	00 00 00 4f 	movehi s0, 0
   114f0:	00 24 14 00 	or s0, s0, 1289
   114f4:	70 2a 00 f8 	call 43456 <M_CheckParm>
   114f8:	a0 07 00 f2 	bz s0, 244 <D_DoomMain+0x31c>
   114fc:	3b 04 00 4f 	movehi s1, 59
   11500:	21 70 26 00 	or s1, s1, 2460
   11504:	21 00 00 a8 	load_32 s1, (s1)
   11508:	21 fc ff 05 	add_i s1, s1, -1
   1150c:	20 80 30 c1 	cmpge_i s1, s0, s1
   11510:	e1 01 00 f4 	bnz s1, 60 <D_DoomMain+0x27c>
   11514:	3b 04 00 4f 	movehi s1, 59
   11518:	00 08 00 0b 	shl s0, s0, 2
   1151c:	21 80 26 00 	or s1, s1, 2464
   11520:	21 00 00 a8 	load_32 s1, (s1)
   11524:	01 00 50 c0 	add_i s0, s1, s0
   11528:	00 10 00 a8 	load_32 s0, 4(s0)
   1152c:	95 01 01 f8 	call 263764 <atoi>
   11530:	20 28 00 14 	cmplt_i s1, s0, 10
   11534:	e1 00 00 f4 	bnz s1, 28 <D_DoomMain+0x280>
   11538:	20 40 06 14 	cmplt_i s1, s0, 400
   1153c:	41 00 00 f4 	bnz s1, 8 <D_DoomMain+0x274>
   11540:	00 40 06 0f 	move s0, 400
   11544:	00 03 f0 c0 	move s24, s0
   11548:	02 00 00 f6 	b 8 <D_DoomMain+0x280>
   1154c:	00 23 03 0f 	move s24, 200
   11550:	01 00 00 4f 	movehi s0, 1
   11554:	1e 13 00 88 	store_32 s24, 4(sp)
   11558:	00 54 2c 00 	or s0, s0, 2837
   1155c:	1e 00 00 88 	store_32 s0, (sp)
   11560:	1d 02 01 f8 	call 264308 <printf>
   11564:	13 04 00 4f 	movehi s0, 51
   11568:	5c e8 51 4f 	movehi s2, 167772
   1156c:	00 e0 48 00 	or s0, s0, 4664
   11570:	42 7c 14 00 	or s2, s2, 1311
   11574:	20 00 00 a8 	load_32 s1, (s0)
   11578:	21 00 7c c0 	mull_i s1, s1, s24
   1157c:	21 00 f1 c1 	mulh_i s1, s1, s2
   11580:	61 14 00 09 	ashr s3, s1, 5
   11584:	21 7c 00 0a 	shr s1, s1, 31
   11588:	23 80 50 c0 	add_i s1, s3, s1
   1158c:	20 00 00 88 	store_32 s1, (s0)
   11590:	20 10 00 a8 	load_32 s1, 4(s0)
   11594:	73 04 00 4f 	movehi s3, 51
   11598:	63 00 49 00 	or s3, s3, 4672
   1159c:	21 00 7c c0 	mull_i s1, s1, s24
   115a0:	21 00 f1 c1 	mulh_i s1, s1, s2
   115a4:	81 14 00 09 	ashr s4, s1, 5
   115a8:	21 7c 00 0a 	shr s1, s1, 31
   115ac:	24 80 50 c0 	add_i s1, s4, s1
   115b0:	20 10 00 88 	store_32 s1, 4(s0)
   115b4:	03 00 00 a8 	load_32 s0, (s3)
   115b8:	00 00 7c c0 	mull_i s0, s0, s24
   115bc:	00 00 f1 c1 	mulh_i s0, s0, s2
   115c0:	20 14 00 09 	ashr s1, s0, 5
   115c4:	00 7c 00 0a 	shr s0, s0, 31
   115c8:	01 00 50 c0 	add_i s0, s1, s0
   115cc:	03 00 00 88 	store_32 s0, (s3)
   115d0:	03 10 00 a8 	load_32 s0, 4(s3)
   115d4:	00 00 7c c0 	mull_i s0, s0, s24
   115d8:	00 00 f1 c1 	mulh_i s0, s0, s2
   115dc:	20 14 00 09 	ashr s1, s0, 5
   115e0:	00 7c 00 0a 	shr s0, s0, 31
   115e4:	01 00 50 c0 	add_i s0, s1, s0
   115e8:	03 10 00 88 	store_32 s0, 4(s3)
   115ec:	01 00 00 4f 	movehi s0, 1
   115f0:	00 0c 20 00 	or s0, s0, 2051
   115f4:	30 2a 00 f8 	call 43200 <M_CheckParm>
   115f8:	a0 09 00 f2 	bz s0, 308 <D_DoomMain+0x45c>
   115fc:	3b 04 00 4f 	movehi s1, 59
   11600:	00 08 00 0b 	shl s0, s0, 2
   11604:	80 c0 01 0f 	move s4, 112
   11608:	61 83 26 00 	or s27, s1, 2464
   1160c:	3b 00 00 a8 	load_32 s1, (s27)
   11610:	41 00 50 c0 	add_i s2, s1, s0
   11614:	62 00 00 a8 	load_32 s3, (s2)
   11618:	83 10 00 82 	store_8 s4, 4(s3)
   1161c:	7e 70 01 a8 	load_32 s3, 92(sp)
   11620:	63 00 00 a8 	load_32 s3, (s3)
   11624:	83 0c 00 16 	cmpgt_u s4, s3, 3
   11628:	44 04 00 f4 	bnz s4, 136 <D_DoomMain+0x3e0>
   1162c:	63 08 00 11 	cmpne_i s3, s3, 2
   11630:	43 00 00 f4 	bnz s3, 8 <D_DoomMain+0x368>
   11634:	1f 00 00 f6 	b 124 <D_DoomMain+0x3e0>
   11638:	40 10 00 05 	add_i s2, s0, 4
   1163c:	5e c0 01 88 	store_32 s2, 112(sp)
   11640:	41 00 51 c0 	add_i s2, s1, s2
   11644:	00 23 00 05 	add_i s24, s0, 8
   11648:	01 00 5c c0 	add_i s0, s1, s24
   1164c:	42 00 00 a8 	load_32 s2, (s2)
   11650:	22 00 00 a2 	load_s8 s1, (s2)
   11654:	42 00 00 4f 	movehi s2, 2
   11658:	00 00 00 a8 	load_32 s0, (s0)
   1165c:	00 00 00 a2 	load_s8 s0, (s0)
   11660:	1e 30 00 88 	store_32 s0, 12(sp)
   11664:	02 28 5e 00 	or s0, s2, 6026
   11668:	3e 20 00 88 	store_32 s1, 8(sp)
   1166c:	1e 10 00 88 	store_32 s0, 4(sp)
   11670:	1e b0 04 05 	add_i s0, sp, 300
   11674:	1e 00 00 88 	store_32 s0, (sp)
   11678:	e4 01 01 f8 	call 264080 <sprintf>
   1167c:	1b 00 00 a8 	load_32 s0, (s27)
   11680:	41 00 00 4f 	movehi s2, 1
   11684:	3e c0 01 a8 	load_32 s1, 112(sp)
   11688:	20 80 50 c0 	add_i s1, s0, s1
   1168c:	00 00 5c c0 	add_i s0, s0, s24
   11690:	21 00 00 a8 	load_32 s1, (s1)
   11694:	00 00 00 a8 	load_32 s0, (s0)
   11698:	1e 20 00 88 	store_32 s0, 8(sp)
   1169c:	02 f4 74 00 	or s0, s2, 7485
   116a0:	3e 10 00 88 	store_32 s1, 4(sp)
   116a4:	1e 00 00 88 	store_32 s0, (sp)
   116a8:	cb 01 01 f8 	call 263980 <printf>
   116ac:	12 00 00 f6 	b 72 <D_DoomMain+0x424>
   116b0:	02 10 00 a8 	load_32 s0, 4(s2)
   116b4:	33 01 01 f8 	call 263372 <atoi>
   116b8:	20 24 00 12 	cmpgt_i s1, s0, 9
   116bc:	e1 00 00 f4 	bnz s1, 28 <D_DoomMain+0x408>
   116c0:	1e 20 00 88 	store_32 s0, 8(sp)
   116c4:	02 00 00 4f 	movehi s0, 2
   116c8:	3e b0 04 05 	add_i s1, sp, 300
   116cc:	3e 00 00 88 	store_32 s1, (sp)
   116d0:	00 08 04 00 	or s0, s0, 258
   116d4:	06 00 00 f6 	b 24 <D_DoomMain+0x41c>
   116d8:	1e 20 00 88 	store_32 s0, 8(sp)
   116dc:	00 00 00 4f 	movehi s0, 0
   116e0:	3e b0 04 05 	add_i s1, sp, 300
   116e4:	3e 00 00 88 	store_32 s1, (sp)
   116e8:	00 40 14 00 	or s0, s0, 1296
   116ec:	1e 10 00 88 	store_32 s0, 4(sp)
   116f0:	c6 01 01 f8 	call 263960 <sprintf>
   116f4:	1a 08 00 0b 	shl s0, s26, 2
   116f8:	79 03 50 c0 	add_i s27, s25, s0
   116fc:	5a 07 00 05 	add_i s26, s26, 1
   11700:	1b 00 00 a8 	load_32 s0, (s27)
   11704:	80 ff ff f5 	bnz s0, -16 <D_DoomMain+0x424>
   11708:	1e b3 04 05 	add_i s24, sp, 300
   1170c:	00 00 fc c0 	move s0, s24
   11710:	24 04 01 f8 	call 266384 <strlen>
   11714:	00 04 00 05 	add_i s0, s0, 1
   11718:	ca ee 00 f8 	call 244520 <malloc>
   1171c:	40 03 f0 c0 	move s26, s0
   11720:	20 00 fc c0 	move s1, s24
   11724:	2a 04 01 f8 	call 266408 <strcpy>
   11728:	5b 03 00 88 	store_32 s26, (s27)
   1172c:	02 00 00 4f 	movehi s0, 2
   11730:	00 c4 36 00 	or s0, s0, 3505
   11734:	e0 29 00 f8 	call 42880 <M_CheckParm>
   11738:	80 05 00 f2 	bz s0, 176 <D_DoomMain+0x518>
   1173c:	3b 04 00 4f 	movehi s1, 59
   11740:	60 07 00 05 	add_i s27, s0, 1
   11744:	61 70 26 00 	or s3, s1, 2460
   11748:	3e 90 01 a8 	load_32 s1, 100(sp)
   1174c:	5e 60 01 a8 	load_32 s2, 88(sp)
   11750:	22 00 00 88 	store_32 s1, (s2)
   11754:	7e b0 01 88 	store_32 s3, 108(sp)
   11758:	23 00 00 a8 	load_32 s1, (s3)
   1175c:	1b 80 00 c1 	cmpeq_i s0, s27, s1
   11760:	40 04 00 f4 	bnz s0, 136 <D_DoomMain+0x518>
   11764:	1b 04 00 4f 	movehi s0, 59
   11768:	00 80 26 00 	or s0, s0, 2464
   1176c:	1e a0 01 88 	store_32 s0, 104(sp)
   11770:	00 00 00 0f 	move s0, 0
   11774:	1e 80 01 88 	store_32 s0, 96(sp)
   11778:	1e a0 01 a8 	load_32 s0, 104(sp)
   1177c:	3b 08 00 0b 	shl s1, s27, 2
   11780:	00 00 00 a8 	load_32 s0, (s0)
   11784:	00 80 50 c0 	add_i s0, s0, s1
   11788:	00 03 00 a8 	load_32 s24, (s0)
   1178c:	18 00 00 a0 	load_u8 s0, (s24)
   11790:	00 b4 00 10 	cmpeq_i s0, s0, 45
   11794:	a0 02 00 f4 	bnz s0, 84 <D_DoomMain+0x518>
   11798:	1e 80 01 a8 	load_32 s0, 96(sp)
   1179c:	20 08 00 0b 	shl s1, s0, 2
   117a0:	59 83 50 c0 	add_i s26, s25, s1
   117a4:	00 04 00 05 	add_i s0, s0, 1
   117a8:	3a 00 00 a8 	load_32 s1, (s26)
   117ac:	81 ff ff f5 	bnz s1, -16 <D_DoomMain+0x4cc>
   117b0:	00 00 fc c0 	move s0, s24
   117b4:	fb 03 01 f8 	call 266220 <strlen>
   117b8:	00 04 00 05 	add_i s0, s0, 1
   117bc:	a1 ee 00 f8 	call 244356 <malloc>
   117c0:	1e c0 01 88 	store_32 s0, 112(sp)
   117c4:	20 00 fc c0 	move s1, s24
   117c8:	01 04 01 f8 	call 266244 <strcpy>
   117cc:	1e c0 01 a8 	load_32 s0, 112(sp)
   117d0:	7b 07 00 05 	add_i s27, s27, 1
   117d4:	1a 00 00 88 	store_32 s0, (s26)
   117d8:	1e b0 01 a8 	load_32 s0, 108(sp)
   117dc:	00 00 00 a8 	load_32 s0, (s0)
   117e0:	1b 00 10 c1 	cmpne_i s0, s27, s0
   117e4:	a0 fc ff f5 	bnz s0, -108 <D_DoomMain+0x4a8>
   117e8:	01 00 00 4f 	movehi s0, 1
   117ec:	00 74 75 00 	or s0, s0, 7517
   117f0:	1e b0 01 88 	store_32 s0, 108(sp)
   117f4:	b0 29 00 f8 	call 42688 <M_CheckParm>
   117f8:	a0 00 00 f4 	bnz s0, 20 <D_DoomMain+0x53c>
   117fc:	00 00 00 4f 	movehi s0, 0
   11800:	00 a0 14 00 	or s0, s0, 1320
   11804:	ac 29 00 f8 	call 42672 <M_CheckParm>
   11808:	00 06 00 f2 	bz s0, 192 <D_DoomMain+0x5f8>
   1180c:	3b 04 00 4f 	movehi s1, 59
   11810:	21 70 26 00 	or s1, s1, 2460
   11814:	21 00 00 a8 	load_32 s1, (s1)
   11818:	21 fc ff 05 	add_i s1, s1, -1
   1181c:	20 80 30 c1 	cmpge_i s1, s0, s1
   11820:	41 05 00 f4 	bnz s1, 168 <D_DoomMain+0x5f8>
   11824:	3b 04 00 4f 	movehi s1, 59
   11828:	00 04 00 05 	add_i s0, s0, 1
   1182c:	21 80 26 00 	or s1, s1, 2464
   11830:	3e c0 01 88 	store_32 s1, 112(sp)
   11834:	00 08 00 0b 	shl s0, s0, 2
   11838:	21 00 00 a8 	load_32 s1, (s1)
   1183c:	1e a0 01 88 	store_32 s0, 104(sp)
   11840:	01 00 50 c0 	add_i s0, s1, s0
   11844:	22 00 00 4f 	movehi s1, 2
   11848:	00 00 00 a8 	load_32 s0, (s0)
   1184c:	1e 20 00 88 	store_32 s0, 8(sp)
   11850:	01 e4 10 00 	or s0, s1, 1081
   11854:	1e 10 00 88 	store_32 s0, 4(sp)
   11858:	1e b0 04 05 	add_i s0, sp, 300
   1185c:	1e 00 00 88 	store_32 s0, (sp)
   11860:	6a 01 01 f8 	call 263592 <sprintf>
   11864:	00 00 00 0f 	move s0, 0
   11868:	20 08 00 0b 	shl s1, s0, 2
   1186c:	19 83 50 c0 	add_i s24, s25, s1
   11870:	00 04 00 05 	add_i s0, s0, 1
   11874:	38 00 00 a8 	load_32 s1, (s24)
   11878:	81 ff ff f5 	bnz s1, -16 <D_DoomMain+0x598>
   1187c:	5e b3 04 05 	add_i s26, sp, 300
   11880:	00 00 fd c0 	move s0, s26
   11884:	c7 03 01 f8 	call 266012 <strlen>
   11888:	00 04 00 05 	add_i s0, s0, 1
   1188c:	6d ee 00 f8 	call 244148 <malloc>
   11890:	60 03 f0 c0 	move s27, s0
   11894:	20 00 fd c0 	move s1, s26
   11898:	cd 03 01 f8 	call 266036 <strcpy>
   1189c:	78 03 00 88 	store_32 s27, (s24)
   118a0:	1e c0 01 a8 	load_32 s0, 112(sp)
   118a4:	00 00 00 a8 	load_32 s0, (s0)
   118a8:	3e a0 01 a8 	load_32 s1, 104(sp)
   118ac:	00 80 50 c0 	add_i s0, s0, s1
   118b0:	21 00 00 4f 	movehi s1, 1
   118b4:	00 00 00 a8 	load_32 s0, (s0)
   118b8:	1e 10 00 88 	store_32 s0, 4(sp)
   118bc:	01 70 0c 00 	or s0, s1, 796
   118c0:	1e 00 00 88 	store_32 s0, (sp)
   118c4:	44 01 01 f8 	call 263440 <printf>
   118c8:	1a 04 00 4f 	movehi s0, 58
   118cc:	3a 04 00 4f 	movehi s1, 58
   118d0:	40 93 48 00 	or s26, s0, 4644
   118d4:	00 08 00 0f 	move s0, 2
   118d8:	61 73 48 00 	or s27, s1, 4636
   118dc:	1a 00 00 88 	store_32 s0, (s26)
   118e0:	1a 04 00 4f 	movehi s0, 58
   118e4:	3a 04 00 4f 	movehi s1, 58
   118e8:	00 83 48 00 	or s24, s0, 4640
   118ec:	1e 90 01 a8 	load_32 s0, 100(sp)
   118f0:	21 b0 17 00 	or s1, s1, 1516
   118f4:	1b 00 00 88 	store_32 s0, (s27)
   118f8:	18 00 00 88 	store_32 s0, (s24)
   118fc:	00 00 00 0f 	move s0, 0
   11900:	1e a0 01 88 	store_32 s0, 104(sp)
   11904:	3e c0 01 88 	store_32 s1, 112(sp)
   11908:	01 00 00 88 	store_32 s0, (s1)
   1190c:	01 00 00 4f 	movehi s0, 1
   11910:	00 b4 33 00 	or s0, s0, 3309
   11914:	68 29 00 f8 	call 42400 <M_CheckParm>
   11918:	60 02 00 f2 	bz s0, 76 <D_DoomMain+0x694>
   1191c:	3b 04 00 4f 	movehi s1, 59
   11920:	21 70 26 00 	or s1, s1, 2460
   11924:	21 00 00 a8 	load_32 s1, (s1)
   11928:	21 fc ff 05 	add_i s1, s1, -1
   1192c:	20 80 30 c1 	cmpge_i s1, s0, s1
   11930:	a1 01 00 f4 	bnz s1, 52 <D_DoomMain+0x694>
   11934:	3b 04 00 4f 	movehi s1, 59
   11938:	00 08 00 0b 	shl s0, s0, 2
   1193c:	21 80 26 00 	or s1, s1, 2464
   11940:	21 00 00 a8 	load_32 s1, (s1)
   11944:	01 00 50 c0 	add_i s0, s1, s0
   11948:	00 10 00 a8 	load_32 s0, 4(s0)
   1194c:	00 00 00 a2 	load_s8 s0, (s0)
   11950:	00 3c ff 05 	add_i s0, s0, -49
   11954:	1a 00 00 88 	store_32 s0, (s26)
   11958:	1e 90 01 a8 	load_32 s0, 100(sp)
   1195c:	3e c0 01 a8 	load_32 s1, 112(sp)
   11960:	01 00 00 88 	store_32 s0, (s1)
   11964:	01 00 00 4f 	movehi s0, 1
   11968:	00 d0 33 00 	or s0, s0, 3316
   1196c:	52 29 00 f8 	call 42312 <M_CheckParm>
   11970:	80 02 00 f2 	bz s0, 80 <D_DoomMain+0x6f0>
   11974:	3b 04 00 4f 	movehi s1, 59
   11978:	21 70 26 00 	or s1, s1, 2460
   1197c:	21 00 00 a8 	load_32 s1, (s1)
   11980:	21 fc ff 05 	add_i s1, s1, -1
   11984:	20 80 30 c1 	cmpge_i s1, s0, s1
   11988:	c1 01 00 f4 	bnz s1, 56 <D_DoomMain+0x6f0>
   1198c:	3b 04 00 4f 	movehi s1, 59
   11990:	00 08 00 0b 	shl s0, s0, 2
   11994:	21 80 26 00 	or s1, s1, 2464
   11998:	21 00 00 a8 	load_32 s1, (s1)
   1199c:	01 00 50 c0 	add_i s0, s1, s0
   119a0:	00 10 00 a8 	load_32 s0, 4(s0)
   119a4:	00 00 00 a2 	load_s8 s0, (s0)
   119a8:	00 40 ff 05 	add_i s0, s0, -48
   119ac:	1b 00 00 88 	store_32 s0, (s27)
   119b0:	1e 90 01 a8 	load_32 s0, 100(sp)
   119b4:	18 00 00 88 	store_32 s0, (s24)
   119b8:	3e c0 01 a8 	load_32 s1, 112(sp)
   119bc:	01 00 00 88 	store_32 s0, (s1)
   119c0:	01 00 00 4f 	movehi s0, 1
   119c4:	00 f4 33 00 	or s0, s0, 3325
   119c8:	3b 29 00 f8 	call 42220 <M_CheckParm>
   119cc:	a0 04 00 f2 	bz s0, 148 <D_DoomMain+0x790>
   119d0:	3b 04 00 4f 	movehi s1, 59
   119d4:	5a 04 00 4f 	movehi s2, 58
   119d8:	21 70 26 00 	or s1, s1, 2460
   119dc:	42 60 6e 00 	or s2, s2, 7064
   119e0:	21 00 00 a8 	load_32 s1, (s1)
   119e4:	21 fc ff 05 	add_i s1, s1, -1
   119e8:	60 80 30 c1 	cmpge_i s3, s0, s1
   119ec:	22 00 00 a8 	load_32 s1, (s2)
   119f0:	83 03 00 f4 	bnz s3, 112 <D_DoomMain+0x790>
   119f4:	61 03 00 f2 	bz s1, 108 <D_DoomMain+0x790>
   119f8:	3b 04 00 4f 	movehi s1, 59
   119fc:	1e 83 01 88 	store_32 s24, 96(sp)
   11a00:	00 83 fd c0 	move s24, s27
   11a04:	60 03 fd c0 	move s27, s26
   11a08:	21 80 26 00 	or s1, s1, 2464
   11a0c:	00 08 00 0b 	shl s0, s0, 2
   11a10:	21 00 00 a8 	load_32 s1, (s1)
   11a14:	01 00 50 c0 	add_i s0, s1, s0
   11a18:	00 10 00 a8 	load_32 s0, 4(s0)
   11a1c:	59 00 01 f8 	call 262500 <atoi>
   11a20:	40 03 f0 c0 	move s26, s0
   11a24:	5e 13 00 88 	store_32 s26, 4(sp)
   11a28:	02 00 00 4f 	movehi s0, 2
   11a2c:	00 e0 53 00 	or s0, s0, 5368
   11a30:	1e 00 00 88 	store_32 s0, (sp)
   11a34:	e8 00 01 f8 	call 263072 <printf>
   11a38:	1a 08 00 14 	cmplt_i s0, s26, 2
   11a3c:	60 00 00 f4 	bnz s0, 12 <D_DoomMain+0x778>
   11a40:	00 cc 01 0f 	move s0, 115
   11a44:	b5 01 01 f8 	call 263892 <putchar>
   11a48:	00 00 00 4f 	movehi s0, 0
   11a4c:	00 84 1e 00 	or s0, s0, 1953
   11a50:	bf 01 01 f8 	call 263932 <puts>
   11a54:	40 83 fd c0 	move s26, s27
   11a58:	60 03 fc c0 	move s27, s24
   11a5c:	1e 83 01 a8 	load_32 s24, 96(sp)
   11a60:	01 00 00 4f 	movehi s0, 1
   11a64:	00 9c 75 00 	or s0, s0, 7527
   11a68:	13 29 00 f8 	call 42060 <M_CheckParm>
   11a6c:	c0 01 00 f2 	bz s0, 56 <D_DoomMain+0x7d4>
   11a70:	3b 04 00 4f 	movehi s1, 59
   11a74:	5a 04 00 4f 	movehi s2, 58
   11a78:	21 70 26 00 	or s1, s1, 2460
   11a7c:	42 60 6e 00 	or s2, s2, 7064
   11a80:	21 00 00 a8 	load_32 s1, (s1)
   11a84:	21 fc ff 05 	add_i s1, s1, -1
   11a88:	20 80 30 c1 	cmpge_i s1, s0, s1
   11a8c:	02 00 00 a8 	load_32 s0, (s2)
   11a90:	a1 00 00 f4 	bnz s1, 20 <D_DoomMain+0x7d4>
   11a94:	80 00 00 f2 	bz s0, 16 <D_DoomMain+0x7d4>
   11a98:	00 00 00 4f 	movehi s0, 0
   11a9c:	00 b8 68 00 	or s0, s0, 6702
   11aa0:	ab 01 01 f8 	call 263852 <puts>
   11aa4:	02 00 00 4f 	movehi s0, 2
   11aa8:	00 7c 6e 00 	or s0, s0, 7071
   11aac:	02 29 00 f8 	call 41992 <M_CheckParm>
   11ab0:	a0 03 00 f2 	bz s0, 116 <D_DoomMain+0x854>
   11ab4:	3b 04 00 4f 	movehi s1, 59
   11ab8:	21 70 26 00 	or s1, s1, 2460
   11abc:	21 00 00 a8 	load_32 s1, (s1)
   11ac0:	21 fc ff 05 	add_i s1, s1, -1
   11ac4:	20 80 30 c1 	cmpge_i s1, s0, s1
   11ac8:	e1 02 00 f4 	bnz s1, 92 <D_DoomMain+0x854>
   11acc:	3b 04 00 4f 	movehi s1, 59
   11ad0:	5e 70 01 a8 	load_32 s2, 92(sp)
   11ad4:	00 08 00 0b 	shl s0, s0, 2
   11ad8:	21 80 26 00 	or s1, s1, 2464
   11adc:	42 00 00 a8 	load_32 s2, (s2)
   11ae0:	21 00 00 a8 	load_32 s1, (s1)
   11ae4:	42 08 00 11 	cmpne_i s2, s2, 2
   11ae8:	21 00 50 c0 	add_i s1, s1, s0
   11aec:	01 10 00 a8 	load_32 s0, 4(s1)
   11af0:	62 00 00 f4 	bnz s2, 12 <D_DoomMain+0x82c>
   11af4:	23 00 01 f8 	call 262284 <atoi>
   11af8:	07 00 00 f6 	b 28 <D_DoomMain+0x844>
   11afc:	00 00 00 a2 	load_s8 s0, (s0)
   11b00:	00 40 ff 05 	add_i s0, s0, -48
   11b04:	1b 00 00 88 	store_32 s0, (s27)
   11b08:	01 20 00 a8 	load_32 s0, 8(s1)
   11b0c:	00 00 00 a2 	load_s8 s0, (s0)
   11b10:	00 40 ff 05 	add_i s0, s0, -48
   11b14:	18 00 00 88 	store_32 s0, (s24)
   11b18:	1e 90 01 a8 	load_32 s0, 100(sp)
   11b1c:	3e c0 01 a8 	load_32 s1, 112(sp)
   11b20:	01 00 00 88 	store_32 s0, (s1)
   11b24:	01 00 00 4f 	movehi s0, 1
   11b28:	00 24 20 00 	or s0, s0, 2057
   11b2c:	88 01 01 f8 	call 263712 <puts>
   11b30:	d6 d2 00 f8 	call 215896 <V_Init>
   11b34:	01 00 00 4f 	movehi s0, 1
   11b38:	00 10 7c 00 	or s0, s0, 7940
   11b3c:	84 01 01 f8 	call 263696 <puts>
   11b40:	ca 28 00 f8 	call 41768 <M_LoadDefaults>
   11b44:	01 00 00 4f 	movehi s0, 1
   11b48:	00 e0 41 00 	or s0, s0, 4216
   11b4c:	80 01 01 f8 	call 263680 <puts>
   11b50:	ff ea 00 f8 	call 240636 <Z_Init>
   11b54:	03 00 00 4f 	movehi s0, 3
   11b58:	00 2c 07 00 	or s0, s0, 459
   11b5c:	7c 01 01 f8 	call 263664 <puts>
   11b60:	00 80 fc c0 	move s0, s25
   11b64:	98 b3 00 f8 	call 183904 <W_InitMultipleFiles>
   11b68:	3e 63 01 a8 	load_32 s25, 88(sp)
   11b6c:	19 00 00 a8 	load_32 s0, (s25)
   11b70:	60 12 00 f2 	bz s0, 588 <D_DoomMain+0xaec>
   11b74:	03 00 00 4f 	movehi s0, 3
   11b78:	40 e0 02 0f 	move s2, 184
   11b7c:	20 e0 2b 00 	or s1, s0, 2808
   11b80:	1e d0 01 05 	add_i s0, sp, 116
   11b84:	60 00 01 f8 	call 262528 <memcpy>
   11b88:	1e 70 01 a8 	load_32 s0, 92(sp)
   11b8c:	00 00 00 a8 	load_32 s0, (s0)
   11b90:	e0 00 00 f4 	bnz s0, 28 <D_DoomMain+0x8dc>
   11b94:	02 00 00 4f 	movehi s0, 2
   11b98:	00 50 2a 00 	or s0, s0, 2708
   11b9c:	1e 00 00 88 	store_32 s0, (sp)
   11ba0:	59 f1 ff f9 	call -15004 <I_Error>
   11ba4:	1e 70 01 a8 	load_32 s0, 92(sp)
   11ba8:	00 00 00 a8 	load_32 s0, (s0)
   11bac:	00 04 00 11 	cmpne_i s0, s0, 1
   11bb0:	c0 0f 00 f4 	bnz s0, 504 <D_DoomMain+0xad8>
   11bb4:	3e d3 01 05 	add_i s25, sp, 116
   11bb8:	00 80 fc c0 	move s0, s25
   11bbc:	e9 b3 00 f8 	call 184228 <W_CheckNumForName>
   11bc0:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11bc4:	a0 00 00 f4 	bnz s0, 20 <D_DoomMain+0x908>
   11bc8:	00 00 00 4f 	movehi s0, 0
   11bcc:	00 ec 4f 00 	or s0, s0, 5115
   11bd0:	1e 00 00 88 	store_32 s0, (sp)
   11bd4:	4c f1 ff f9 	call -15056 <I_Error>
   11bd8:	19 20 00 05 	add_i s0, s25, 8
   11bdc:	e1 b3 00 f8 	call 184196 <W_CheckNumForName>
   11be0:	00 00 00 14 	cmplt_i s0, s0, 0
   11be4:	80 23 00 f4 	bnz s0, 1136 <D_DoomMain+0xd84>
   11be8:	19 40 00 05 	add_i s0, s25, 16
   11bec:	dd b3 00 f8 	call 184180 <W_CheckNumForName>
   11bf0:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11bf4:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0x92c>
   11bf8:	1f 01 00 f6 	b 1148 <D_DoomMain+0xda4>
   11bfc:	19 60 00 05 	add_i s0, s25, 24
   11c00:	d8 b3 00 f8 	call 184160 <W_CheckNumForName>
   11c04:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11c08:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0x940>
   11c0c:	22 01 00 f6 	b 1160 <D_DoomMain+0xdc4>
   11c10:	19 80 00 05 	add_i s0, s25, 32
   11c14:	d3 b3 00 f8 	call 184140 <W_CheckNumForName>
   11c18:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11c1c:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0x954>
   11c20:	25 01 00 f6 	b 1172 <D_DoomMain+0xde4>
   11c24:	19 a0 00 05 	add_i s0, s25, 40
   11c28:	ce b3 00 f8 	call 184120 <W_CheckNumForName>
   11c2c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11c30:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0x968>
   11c34:	28 01 00 f6 	b 1184 <D_DoomMain+0xe04>
   11c38:	19 c0 00 05 	add_i s0, s25, 48
   11c3c:	c9 b3 00 f8 	call 184100 <W_CheckNumForName>
   11c40:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11c44:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0x97c>
   11c48:	2b 01 00 f6 	b 1196 <D_DoomMain+0xe24>
   11c4c:	19 e0 00 05 	add_i s0, s25, 56
   11c50:	c4 b3 00 f8 	call 184080 <W_CheckNumForName>
   11c54:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11c58:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0x990>
   11c5c:	2e 01 00 f6 	b 1208 <D_DoomMain+0xe44>
   11c60:	19 00 01 05 	add_i s0, s25, 64
   11c64:	bf b3 00 f8 	call 184060 <W_CheckNumForName>
   11c68:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11c6c:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0x9a4>
   11c70:	31 01 00 f6 	b 1220 <D_DoomMain+0xe64>
   11c74:	19 20 01 05 	add_i s0, s25, 72
   11c78:	ba b3 00 f8 	call 184040 <W_CheckNumForName>
   11c7c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11c80:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0x9b8>
   11c84:	34 01 00 f6 	b 1232 <D_DoomMain+0xe84>
   11c88:	19 40 01 05 	add_i s0, s25, 80
   11c8c:	b5 b3 00 f8 	call 184020 <W_CheckNumForName>
   11c90:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11c94:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0x9cc>
   11c98:	37 01 00 f6 	b 1244 <D_DoomMain+0xea4>
   11c9c:	19 60 01 05 	add_i s0, s25, 88
   11ca0:	b0 b3 00 f8 	call 184000 <W_CheckNumForName>
   11ca4:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11ca8:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0x9e0>
   11cac:	3a 01 00 f6 	b 1256 <D_DoomMain+0xec4>
   11cb0:	19 80 01 05 	add_i s0, s25, 96
   11cb4:	ab b3 00 f8 	call 183980 <W_CheckNumForName>
   11cb8:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11cbc:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0x9f4>
   11cc0:	3d 01 00 f6 	b 1268 <D_DoomMain+0xee4>
   11cc4:	19 a0 01 05 	add_i s0, s25, 104
   11cc8:	a6 b3 00 f8 	call 183960 <W_CheckNumForName>
   11ccc:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11cd0:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0xa08>
   11cd4:	40 01 00 f6 	b 1280 <D_DoomMain+0xf04>
   11cd8:	19 c0 01 05 	add_i s0, s25, 112
   11cdc:	a1 b3 00 f8 	call 183940 <W_CheckNumForName>
   11ce0:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11ce4:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0xa1c>
   11ce8:	43 01 00 f6 	b 1292 <D_DoomMain+0xf24>
   11cec:	19 e0 01 05 	add_i s0, s25, 120
   11cf0:	9c b3 00 f8 	call 183920 <W_CheckNumForName>
   11cf4:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11cf8:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0xa30>
   11cfc:	46 01 00 f6 	b 1304 <D_DoomMain+0xf44>
   11d00:	19 00 02 05 	add_i s0, s25, 128
   11d04:	97 b3 00 f8 	call 183900 <W_CheckNumForName>
   11d08:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11d0c:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0xa44>
   11d10:	49 01 00 f6 	b 1316 <D_DoomMain+0xf64>
   11d14:	19 20 02 05 	add_i s0, s25, 136
   11d18:	92 b3 00 f8 	call 183880 <W_CheckNumForName>
   11d1c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11d20:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0xa58>
   11d24:	4c 01 00 f6 	b 1328 <D_DoomMain+0xf84>
   11d28:	19 40 02 05 	add_i s0, s25, 144
   11d2c:	8d b3 00 f8 	call 183860 <W_CheckNumForName>
   11d30:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11d34:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0xa6c>
   11d38:	4f 01 00 f6 	b 1340 <D_DoomMain+0xfa4>
   11d3c:	19 60 02 05 	add_i s0, s25, 152
   11d40:	88 b3 00 f8 	call 183840 <W_CheckNumForName>
   11d44:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11d48:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0xa80>
   11d4c:	52 01 00 f6 	b 1352 <D_DoomMain+0xfc4>
   11d50:	19 80 02 05 	add_i s0, s25, 160
   11d54:	83 b3 00 f8 	call 183820 <W_CheckNumForName>
   11d58:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11d5c:	40 00 00 f4 	bnz s0, 8 <D_DoomMain+0xa94>
   11d60:	55 01 00 f6 	b 1364 <D_DoomMain+0xfe4>
   11d64:	19 a0 02 05 	add_i s0, s25, 168
   11d68:	7e b3 00 f8 	call 183800 <W_CheckNumForName>
   11d6c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11d70:	a0 00 00 f4 	bnz s0, 20 <D_DoomMain+0xab4>
   11d74:	00 00 00 4f 	movehi s0, 0
   11d78:	00 ec 4f 00 	or s0, s0, 5115
   11d7c:	1e 00 00 88 	store_32 s0, (sp)
   11d80:	e1 f0 ff f9 	call -15484 <I_Error>
   11d84:	19 c0 02 05 	add_i s0, s25, 176
   11d88:	76 b3 00 f8 	call 183768 <W_CheckNumForName>
   11d8c:	3e 63 01 a8 	load_32 s25, 88(sp)
   11d90:	00 fc ff 12 	cmpgt_i s0, s0, -1
   11d94:	a0 00 00 f4 	bnz s0, 20 <D_DoomMain+0xad8>
   11d98:	00 00 00 4f 	movehi s0, 0
   11d9c:	00 ec 4f 00 	or s0, s0, 5115
   11da0:	1e 00 00 88 	store_32 s0, (sp)
   11da4:	d8 f0 ff f9 	call -15520 <I_Error>
   11da8:	19 00 00 a8 	load_32 s0, (s25)
   11dac:	80 00 00 f2 	bz s0, 16 <D_DoomMain+0xaec>
   11db0:	02 00 00 4f 	movehi s0, 2
   11db4:	00 94 6e 00 	or s0, s0, 7077
   11db8:	e5 00 01 f8 	call 263060 <puts>
   11dbc:	1e 70 01 a8 	load_32 s0, 92(sp)
   11dc0:	00 00 00 a8 	load_32 s0, (s0)
   11dc4:	20 fc ff 05 	add_i s1, s0, -1
   11dc8:	21 0c 00 18 	cmplt_u s1, s1, 3
   11dcc:	41 00 00 f4 	bnz s1, 8 <D_DoomMain+0xb04>
   11dd0:	04 00 00 f6 	b 16 <D_DoomMain+0xb10>
   11dd4:	00 00 00 4f 	movehi s0, 0
   11dd8:	00 c8 32 00 	or s0, s0, 3250
   11ddc:	06 00 00 f6 	b 24 <D_DoomMain+0xb24>
   11de0:	20 10 00 10 	cmpeq_i s1, s0, 4
   11de4:	41 00 00 f4 	bnz s1, 8 <D_DoomMain+0xb1c>
   11de8:	80 00 00 f4 	bnz s0, 16 <D_DoomMain+0xb28>
   11dec:	02 00 00 4f 	movehi s0, 2
   11df0:	00 dc 36 00 	or s0, s0, 3511
   11df4:	d6 00 01 f8 	call 263000 <puts>
   11df8:	00 00 00 4f 	movehi s0, 0
   11dfc:	00 20 3f 00 	or s0, s0, 4040
   11e00:	d3 00 01 f8 	call 262988 <puts>
   11e04:	71 27 00 f8 	call 40388 <M_Init>
   11e08:	00 00 00 4f 	movehi s0, 0
   11e0c:	00 a0 67 00 	or s0, s0, 6632
   11e10:	1e 00 00 88 	store_32 s0, (sp)
   11e14:	f0 ff 00 f8 	call 262080 <printf>
   11e18:	b2 9f 00 f8 	call 163528 <R_Init>
   11e1c:	01 00 00 4f 	movehi s0, 1
   11e20:	00 a8 7c 00 	or s0, s0, 7978
   11e24:	ca 00 01 f8 	call 262952 <puts>
   11e28:	a8 74 00 f8 	call 119456 <P_Init>
   11e2c:	00 00 00 4f 	movehi s0, 0
   11e30:	00 30 68 00 	or s0, s0, 6668
   11e34:	c6 00 01 f8 	call 262936 <puts>
   11e38:	91 f0 ff f9 	call -15804 <I_Init>
   11e3c:	02 00 00 4f 	movehi s0, 2
   11e40:	00 30 2b 00 	or s0, s0, 2764
   11e44:	c2 00 01 f8 	call 262920 <puts>
   11e48:	71 06 00 f8 	call 6596 <D_CheckNetGame>
   11e4c:	01 00 00 4f 	movehi s0, 1
   11e50:	00 2c 34 00 	or s0, s0, 3339
   11e54:	be 00 01 f8 	call 262904 <puts>
   11e58:	14 04 00 4f 	movehi s0, 52
   11e5c:	34 04 00 4f 	movehi s1, 52
   11e60:	00 60 53 00 	or s0, s0, 5336
   11e64:	21 70 53 00 	or s1, s1, 5340
   11e68:	00 00 00 a8 	load_32 s0, (s0)
   11e6c:	21 00 00 a8 	load_32 s1, (s1)
   11e70:	73 e6 00 f8 	call 235980 <S_Init>
   11e74:	01 00 00 4f 	movehi s0, 1
   11e78:	00 a0 2c 00 	or s0, s0, 2856
   11e7c:	b4 00 01 f8 	call 262864 <puts>
   11e80:	d5 df 00 f8 	call 229204 <HU_Init>
   11e84:	00 00 00 4f 	movehi s0, 0
   11e88:	00 9c 48 00 	or s0, s0, 4647
   11e8c:	b0 00 01 f8 	call 262848 <puts>
   11e90:	b4 df 00 f8 	call 229072 <ST_Init>
   11e94:	00 00 00 4f 	movehi s0, 0
   11e98:	00 3c 05 00 	or s0, s0, 335
   11e9c:	06 28 00 f8 	call 40984 <M_CheckParm>
   11ea0:	80 02 00 f2 	bz s0, 80 <D_DoomMain+0xc20>
   11ea4:	3b 04 00 4f 	movehi s1, 59
   11ea8:	21 70 26 00 	or s1, s1, 2460
   11eac:	21 00 00 a8 	load_32 s1, (s1)
   11eb0:	21 fc ff 05 	add_i s1, s1, -1
   11eb4:	20 80 30 c1 	cmpge_i s1, s0, s1
   11eb8:	c1 01 00 f4 	bnz s1, 56 <D_DoomMain+0xc20>
   11ebc:	3b 04 00 4f 	movehi s1, 59
   11ec0:	00 08 00 0b 	shl s0, s0, 2
   11ec4:	21 80 26 00 	or s1, s1, 2464
   11ec8:	21 00 00 a8 	load_32 s1, (s1)
   11ecc:	01 00 50 c0 	add_i s0, s1, s0
   11ed0:	00 10 00 a8 	load_32 s0, 4(s0)
   11ed4:	2b ff 00 f8 	call 261292 <atoi>
   11ed8:	3b 04 00 4f 	movehi s1, 59
   11edc:	42 00 00 4f 	movehi s2, 2
   11ee0:	21 c0 18 00 	or s1, s1, 1584
   11ee4:	01 00 00 88 	store_32 s0, (s1)
   11ee8:	02 e8 2b 00 	or s0, s2, 2810
   11eec:	98 00 01 f8 	call 262752 <puts>
   11ef0:	02 00 00 4f 	movehi s0, 2
   11ef4:	00 74 5e 00 	or s0, s0, 6045
   11ef8:	ef 27 00 f8 	call 40892 <M_CheckParm>
   11efc:	20 02 00 f2 	bz s0, 68 <D_DoomMain+0xc70>
   11f00:	3b 04 00 4f 	movehi s1, 59
   11f04:	21 70 26 00 	or s1, s1, 2460
   11f08:	21 00 00 a8 	load_32 s1, (s1)
   11f0c:	21 fc ff 05 	add_i s1, s1, -1
   11f10:	20 80 30 c1 	cmpge_i s1, s0, s1
   11f14:	61 01 00 f4 	bnz s1, 44 <D_DoomMain+0xc70>
   11f18:	3b 04 00 4f 	movehi s1, 59
   11f1c:	00 08 00 0b 	shl s0, s0, 2
   11f20:	21 80 26 00 	or s1, s1, 2464
   11f24:	21 00 00 a8 	load_32 s1, (s1)
   11f28:	01 00 50 c0 	add_i s0, s1, s0
   11f2c:	00 10 00 a8 	load_32 s0, 4(s0)
   11f30:	83 16 00 f8 	call 23052 <G_RecordDemo>
   11f34:	1e 90 01 a8 	load_32 s0, 100(sp)
   11f38:	3e c0 01 a8 	load_32 s1, 112(sp)
   11f3c:	01 00 00 88 	store_32 s0, (s1)
   11f40:	1e b0 01 a8 	load_32 s0, 108(sp)
   11f44:	dc 27 00 f8 	call 40816 <M_CheckParm>
   11f48:	60 02 00 f2 	bz s0, 76 <D_DoomMain+0xcc4>
   11f4c:	3b 04 00 4f 	movehi s1, 59
   11f50:	21 70 26 00 	or s1, s1, 2460
   11f54:	21 00 00 a8 	load_32 s1, (s1)
   11f58:	21 fc ff 05 	add_i s1, s1, -1
   11f5c:	20 80 30 c1 	cmpge_i s1, s0, s1
   11f60:	a1 01 00 f4 	bnz s1, 52 <D_DoomMain+0xcc4>
   11f64:	3b 04 00 4f 	movehi s1, 59
   11f68:	7e 90 01 a8 	load_32 s3, 100(sp)
   11f6c:	5b 04 00 4f 	movehi s2, 59
   11f70:	00 08 00 0b 	shl s0, s0, 2
   11f74:	21 a0 18 00 	or s1, s1, 1576
   11f78:	42 80 26 00 	or s2, s2, 2464
   11f7c:	61 00 00 88 	store_32 s3, (s1)
   11f80:	22 00 00 a8 	load_32 s1, (s2)
   11f84:	01 00 50 c0 	add_i s0, s1, s0
   11f88:	00 10 00 a8 	load_32 s0, 4(s0)
   11f8c:	07 17 00 f8 	call 23580 <G_DeferedPlayDemo>
   11f90:	8d fa ff f9 	call -5580 <D_DoomLoop>
   11f94:	00 00 00 4f 	movehi s0, 0
   11f98:	00 a0 14 00 	or s0, s0, 1320
   11f9c:	c6 27 00 f8 	call 40728 <M_CheckParm>
   11fa0:	e0 01 00 f2 	bz s0, 60 <D_DoomMain+0xd0c>
   11fa4:	3b 04 00 4f 	movehi s1, 59
   11fa8:	21 70 26 00 	or s1, s1, 2460
   11fac:	21 00 00 a8 	load_32 s1, (s1)
   11fb0:	21 fc ff 05 	add_i s1, s1, -1
   11fb4:	20 80 30 c1 	cmpge_i s1, s0, s1
   11fb8:	21 01 00 f4 	bnz s1, 36 <D_DoomMain+0xd0c>
   11fbc:	3b 04 00 4f 	movehi s1, 59
   11fc0:	00 08 00 0b 	shl s0, s0, 2
   11fc4:	21 80 26 00 	or s1, s1, 2464
   11fc8:	21 00 00 a8 	load_32 s1, (s1)
   11fcc:	01 00 50 c0 	add_i s0, s1, s0
   11fd0:	00 10 00 a8 	load_32 s0, 4(s0)
   11fd4:	fd 16 00 f8 	call 23540 <G_TimeDemo>
   11fd8:	7b fa ff f9 	call -5652 <D_DoomLoop>
   11fdc:	02 00 00 4f 	movehi s0, 2
   11fe0:	20 03 fc c0 	move s25, s24
   11fe4:	00 60 54 00 	or s0, s0, 5400
   11fe8:	b3 27 00 f8 	call 40652 <M_CheckParm>
   11fec:	00 03 f0 c0 	move s24, s0
   11ff0:	78 18 00 f2 	bz s24, 780 <D_DoomMain+0x102c>
   11ff4:	1b 04 00 4f 	movehi s0, 59
   11ff8:	00 70 26 00 	or s0, s0, 2460
   11ffc:	00 00 00 a8 	load_32 s0, (s0)
   12000:	00 fc ff 05 	add_i s0, s0, -1
   12004:	18 00 30 c1 	cmpge_i s0, s24, s0
   12008:	a0 17 00 f4 	bnz s0, 756 <D_DoomMain+0x102c>
   1200c:	01 00 00 4f 	movehi s0, 1
   12010:	00 10 34 00 	or s0, s0, 3332
   12014:	a8 27 00 f8 	call 40608 <M_CheckParm>
   12018:	3b 04 00 4f 	movehi s1, 59
   1201c:	58 08 00 0b 	shl s2, s24, 2
   12020:	21 80 26 00 	or s1, s1, 2464
   12024:	21 00 00 a8 	load_32 s1, (s1)
   12028:	21 00 51 c0 	add_i s1, s1, s2
   1202c:	21 10 00 a8 	load_32 s1, 4(s1)
   12030:	21 00 00 a2 	load_s8 s1, (s1)
   12034:	40 00 00 f2 	bz s0, 8 <D_DoomMain+0xd6c>
   12038:	a8 00 00 f6 	b 672 <D_DoomMain+0x1008>
   1203c:	00 00 00 4f 	movehi s0, 0
   12040:	3e 20 00 88 	store_32 s1, 8(sp)
   12044:	3e b0 04 05 	add_i s1, sp, 300
   12048:	3e 00 00 88 	store_32 s1, (sp)
   1204c:	00 c8 14 00 	or s0, s0, 1330
   12050:	a7 00 00 f6 	b 668 <D_DoomMain+0x101c>
   12054:	00 00 00 4f 	movehi s0, 0
   12058:	00 ec 4f 00 	or s0, s0, 5115
   1205c:	1e 00 00 88 	store_32 s0, (sp)
   12060:	29 f0 ff f9 	call -16220 <I_Error>
   12064:	19 40 00 05 	add_i s0, s25, 16
   12068:	be b2 00 f8 	call 183032 <W_CheckNumForName>
   1206c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   12070:	60 dc ff f5 	bnz s0, -1140 <D_DoomMain+0x92c>
   12074:	00 00 00 4f 	movehi s0, 0
   12078:	00 ec 4f 00 	or s0, s0, 5115
   1207c:	1e 00 00 88 	store_32 s0, (sp)
   12080:	21 f0 ff f9 	call -16252 <I_Error>
   12084:	19 60 00 05 	add_i s0, s25, 24
   12088:	b6 b2 00 f8 	call 183000 <W_CheckNumForName>
   1208c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   12090:	00 dc ff f5 	bnz s0, -1152 <D_DoomMain+0x940>
   12094:	00 00 00 4f 	movehi s0, 0
   12098:	00 ec 4f 00 	or s0, s0, 5115
   1209c:	1e 00 00 88 	store_32 s0, (sp)
   120a0:	19 f0 ff f9 	call -16284 <I_Error>
   120a4:	19 80 00 05 	add_i s0, s25, 32
   120a8:	ae b2 00 f8 	call 182968 <W_CheckNumForName>
   120ac:	00 fc ff 12 	cmpgt_i s0, s0, -1
   120b0:	a0 db ff f5 	bnz s0, -1164 <D_DoomMain+0x954>
   120b4:	00 00 00 4f 	movehi s0, 0
   120b8:	00 ec 4f 00 	or s0, s0, 5115
   120bc:	1e 00 00 88 	store_32 s0, (sp)
   120c0:	11 f0 ff f9 	call -16316 <I_Error>
   120c4:	19 a0 00 05 	add_i s0, s25, 40
   120c8:	a6 b2 00 f8 	call 182936 <W_CheckNumForName>
   120cc:	00 fc ff 12 	cmpgt_i s0, s0, -1
   120d0:	40 db ff f5 	bnz s0, -1176 <D_DoomMain+0x968>
   120d4:	00 00 00 4f 	movehi s0, 0
   120d8:	00 ec 4f 00 	or s0, s0, 5115
   120dc:	1e 00 00 88 	store_32 s0, (sp)
   120e0:	09 f0 ff f9 	call -16348 <I_Error>
   120e4:	19 c0 00 05 	add_i s0, s25, 48
   120e8:	9e b2 00 f8 	call 182904 <W_CheckNumForName>
   120ec:	00 fc ff 12 	cmpgt_i s0, s0, -1
   120f0:	e0 da ff f5 	bnz s0, -1188 <D_DoomMain+0x97c>
   120f4:	00 00 00 4f 	movehi s0, 0
   120f8:	00 ec 4f 00 	or s0, s0, 5115
   120fc:	1e 00 00 88 	store_32 s0, (sp)
   12100:	01 f0 ff f9 	call -16380 <I_Error>
   12104:	19 e0 00 05 	add_i s0, s25, 56
   12108:	96 b2 00 f8 	call 182872 <W_CheckNumForName>
   1210c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   12110:	80 da ff f5 	bnz s0, -1200 <D_DoomMain+0x990>
   12114:	00 00 00 4f 	movehi s0, 0
   12118:	00 ec 4f 00 	or s0, s0, 5115
   1211c:	1e 00 00 88 	store_32 s0, (sp)
   12120:	f9 ef ff f9 	call -16412 <I_Error>
   12124:	19 00 01 05 	add_i s0, s25, 64
   12128:	8e b2 00 f8 	call 182840 <W_CheckNumForName>
   1212c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   12130:	20 da ff f5 	bnz s0, -1212 <D_DoomMain+0x9a4>
   12134:	00 00 00 4f 	movehi s0, 0
   12138:	00 ec 4f 00 	or s0, s0, 5115
   1213c:	1e 00 00 88 	store_32 s0, (sp)
   12140:	f1 ef ff f9 	call -16444 <I_Error>
   12144:	19 20 01 05 	add_i s0, s25, 72
   12148:	86 b2 00 f8 	call 182808 <W_CheckNumForName>
   1214c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   12150:	c0 d9 ff f5 	bnz s0, -1224 <D_DoomMain+0x9b8>
   12154:	00 00 00 4f 	movehi s0, 0
   12158:	00 ec 4f 00 	or s0, s0, 5115
   1215c:	1e 00 00 88 	store_32 s0, (sp)
   12160:	e9 ef ff f9 	call -16476 <I_Error>
   12164:	19 40 01 05 	add_i s0, s25, 80
   12168:	7e b2 00 f8 	call 182776 <W_CheckNumForName>
   1216c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   12170:	60 d9 ff f5 	bnz s0, -1236 <D_DoomMain+0x9cc>
   12174:	00 00 00 4f 	movehi s0, 0
   12178:	00 ec 4f 00 	or s0, s0, 5115
   1217c:	1e 00 00 88 	store_32 s0, (sp)
   12180:	e1 ef ff f9 	call -16508 <I_Error>
   12184:	19 60 01 05 	add_i s0, s25, 88
   12188:	76 b2 00 f8 	call 182744 <W_CheckNumForName>
   1218c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   12190:	00 d9 ff f5 	bnz s0, -1248 <D_DoomMain+0x9e0>
   12194:	00 00 00 4f 	movehi s0, 0
   12198:	00 ec 4f 00 	or s0, s0, 5115
   1219c:	1e 00 00 88 	store_32 s0, (sp)
   121a0:	d9 ef ff f9 	call -16540 <I_Error>
   121a4:	19 80 01 05 	add_i s0, s25, 96
   121a8:	6e b2 00 f8 	call 182712 <W_CheckNumForName>
   121ac:	00 fc ff 12 	cmpgt_i s0, s0, -1
   121b0:	a0 d8 ff f5 	bnz s0, -1260 <D_DoomMain+0x9f4>
   121b4:	00 00 00 4f 	movehi s0, 0
   121b8:	00 ec 4f 00 	or s0, s0, 5115
   121bc:	1e 00 00 88 	store_32 s0, (sp)
   121c0:	d1 ef ff f9 	call -16572 <I_Error>
   121c4:	19 a0 01 05 	add_i s0, s25, 104
   121c8:	66 b2 00 f8 	call 182680 <W_CheckNumForName>
   121cc:	00 fc ff 12 	cmpgt_i s0, s0, -1
   121d0:	40 d8 ff f5 	bnz s0, -1272 <D_DoomMain+0xa08>
   121d4:	00 00 00 4f 	movehi s0, 0
   121d8:	00 ec 4f 00 	or s0, s0, 5115
   121dc:	1e 00 00 88 	store_32 s0, (sp)
   121e0:	c9 ef ff f9 	call -16604 <I_Error>
   121e4:	19 c0 01 05 	add_i s0, s25, 112
   121e8:	5e b2 00 f8 	call 182648 <W_CheckNumForName>
   121ec:	00 fc ff 12 	cmpgt_i s0, s0, -1
   121f0:	e0 d7 ff f5 	bnz s0, -1284 <D_DoomMain+0xa1c>
   121f4:	00 00 00 4f 	movehi s0, 0
   121f8:	00 ec 4f 00 	or s0, s0, 5115
   121fc:	1e 00 00 88 	store_32 s0, (sp)
   12200:	c1 ef ff f9 	call -16636 <I_Error>
   12204:	19 e0 01 05 	add_i s0, s25, 120
   12208:	56 b2 00 f8 	call 182616 <W_CheckNumForName>
   1220c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   12210:	80 d7 ff f5 	bnz s0, -1296 <D_DoomMain+0xa30>
   12214:	00 00 00 4f 	movehi s0, 0
   12218:	00 ec 4f 00 	or s0, s0, 5115
   1221c:	1e 00 00 88 	store_32 s0, (sp)
   12220:	b9 ef ff f9 	call -16668 <I_Error>
   12224:	19 00 02 05 	add_i s0, s25, 128
   12228:	4e b2 00 f8 	call 182584 <W_CheckNumForName>
   1222c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   12230:	20 d7 ff f5 	bnz s0, -1308 <D_DoomMain+0xa44>
   12234:	00 00 00 4f 	movehi s0, 0
   12238:	00 ec 4f 00 	or s0, s0, 5115
   1223c:	1e 00 00 88 	store_32 s0, (sp)
   12240:	b1 ef ff f9 	call -16700 <I_Error>
   12244:	19 20 02 05 	add_i s0, s25, 136
   12248:	46 b2 00 f8 	call 182552 <W_CheckNumForName>
   1224c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   12250:	c0 d6 ff f5 	bnz s0, -1320 <D_DoomMain+0xa58>
   12254:	00 00 00 4f 	movehi s0, 0
   12258:	00 ec 4f 00 	or s0, s0, 5115
   1225c:	1e 00 00 88 	store_32 s0, (sp)
   12260:	a9 ef ff f9 	call -16732 <I_Error>
   12264:	19 40 02 05 	add_i s0, s25, 144
   12268:	3e b2 00 f8 	call 182520 <W_CheckNumForName>
   1226c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   12270:	60 d6 ff f5 	bnz s0, -1332 <D_DoomMain+0xa6c>
   12274:	00 00 00 4f 	movehi s0, 0
   12278:	00 ec 4f 00 	or s0, s0, 5115
   1227c:	1e 00 00 88 	store_32 s0, (sp)
   12280:	a1 ef ff f9 	call -16764 <I_Error>
   12284:	19 60 02 05 	add_i s0, s25, 152
   12288:	36 b2 00 f8 	call 182488 <W_CheckNumForName>
   1228c:	00 fc ff 12 	cmpgt_i s0, s0, -1
   12290:	00 d6 ff f5 	bnz s0, -1344 <D_DoomMain+0xa80>
   12294:	00 00 00 4f 	movehi s0, 0
   12298:	00 ec 4f 00 	or s0, s0, 5115
   1229c:	1e 00 00 88 	store_32 s0, (sp)
   122a0:	99 ef ff f9 	call -16796 <I_Error>
   122a4:	19 80 02 05 	add_i s0, s25, 160
   122a8:	2e b2 00 f8 	call 182456 <W_CheckNumForName>
   122ac:	00 fc ff 12 	cmpgt_i s0, s0, -1
   122b0:	a0 d5 ff f5 	bnz s0, -1356 <D_DoomMain+0xa94>
   122b4:	00 00 00 4f 	movehi s0, 0
   122b8:	00 ec 4f 00 	or s0, s0, 5115
   122bc:	1e 00 00 88 	store_32 s0, (sp)
   122c0:	91 ef ff f9 	call -16828 <I_Error>
   122c4:	19 a0 02 05 	add_i s0, s25, 168
   122c8:	26 b2 00 f8 	call 182424 <W_CheckNumForName>
   122cc:	00 fc ff 12 	cmpgt_i s0, s0, -1
   122d0:	a0 d5 ff f5 	bnz s0, -1356 <D_DoomMain+0xab4>
   122d4:	a8 fe ff f7 	b -1376 <D_DoomMain+0xaa4>
   122d8:	00 00 00 4f 	movehi s0, 0
   122dc:	3e 20 00 88 	store_32 s1, 8(sp)
   122e0:	3e b0 04 05 	add_i s1, sp, 300
   122e4:	3e 00 00 88 	store_32 s1, (sp)
   122e8:	00 34 48 00 	or s0, s0, 4621
   122ec:	1e 10 00 88 	store_32 s0, 4(sp)
   122f0:	c6 fe 00 f8 	call 260888 <sprintf>
   122f4:	1e b0 04 05 	add_i s0, sp, 300
   122f8:	af 13 00 f8 	call 20156 <G_LoadGame>
   122fc:	1a 04 00 4f 	movehi s0, 58
   12300:	00 60 6f 00 	or s0, s0, 7128
   12304:	20 00 00 a8 	load_32 s1, (s0)
   12308:	21 0c 00 10 	cmpeq_i s1, s1, 3
   1230c:	61 02 00 f4 	bnz s1, 76 <D_DoomMain+0x1088>
   12310:	3b 04 00 4f 	movehi s1, 59
   12314:	5e c0 01 a8 	load_32 s2, 112(sp)
   12318:	21 c0 01 00 	or s1, s1, 112
   1231c:	42 00 00 a8 	load_32 s2, (s2)
   12320:	21 00 00 a8 	load_32 s1, (s1)
   12324:	21 00 01 c0 	or s1, s1, s2
   12328:	41 00 00 f2 	bz s1, 8 <D_DoomMain+0x1060>
   1232c:	0c 00 00 f6 	b 48 <D_DoomMain+0x108c>
   12330:	3a 04 00 4f 	movehi s1, 58
   12334:	7e a0 01 a8 	load_32 s3, 104(sp)
   12338:	5a 04 00 4f 	movehi s2, 58
   1233c:	60 00 00 88 	store_32 s3, (s0)
   12340:	01 d0 27 00 	or s0, s1, 2548
   12344:	22 a0 17 00 	or s1, s2, 1512
   12348:	40 fc ff 0f 	move s2, -1
   1234c:	40 00 00 88 	store_32 s2, (s0)
   12350:	1e 90 01 a8 	load_32 s0, 100(sp)
   12354:	01 00 00 88 	store_32 s0, (s1)
   12358:	9b f9 ff f9 	call -6548 <D_DoomLoop>
   1235c:	1a 00 00 a8 	load_32 s0, (s26)
   12360:	3b 00 00 a8 	load_32 s1, (s27)
   12364:	59 00 00 a8 	load_32 s2, (s25)
   12368:	a0 13 00 f8 	call 20096 <G_InitNew>
   1236c:	96 f9 ff f9 	call -6568 <D_DoomLoop>

0000000000012370 NetbufferSize:
   12370:	1a 04 00 4f 	movehi s0, 58
   12374:	00 80 5f 00 	or s0, s0, 6112
   12378:	00 00 00 a8 	load_32 s0, (s0)
   1237c:	00 1c 00 a0 	load_u8 s0, 7(s0)
   12380:	00 0c 00 0b 	shl s0, s0, 3
   12384:	00 20 00 05 	add_i s0, s0, 8
   12388:	1f 00 00 f0 	ret

000000000001238c NetbufferChecksum:
   1238c:	1a 04 00 4f 	movehi s0, 58
   12390:	9a 20 01 4f 	movehi s4, 2330
   12394:	00 80 5f 00 	or s0, s0, 6112
   12398:	00 00 00 a8 	load_32 s0, (s0)
   1239c:	20 1c 00 a0 	load_u8 s1, 7(s0)
   123a0:	21 0c 00 0b 	shl s1, s1, 3
   123a4:	21 10 00 00 	or s1, s1, 4
   123a8:	41 10 00 14 	cmplt_i s2, s1, 4
   123ac:	22 02 00 f4 	bnz s2, 68 <NetbufferChecksum+0x64>
   123b0:	40 10 00 05 	add_i s2, s0, 4
   123b4:	21 08 00 0a 	shr s1, s1, 2
   123b8:	60 00 00 0f 	move s3, 0
   123bc:	04 9c 15 00 	or s0, s4, 1383
   123c0:	83 08 00 0b 	shl s4, s3, 2
   123c4:	82 00 52 c0 	add_i s4, s2, s4
   123c8:	63 04 00 05 	add_i s3, s3, 1
   123cc:	84 00 00 a8 	load_32 s4, (s4)
   123d0:	a3 80 40 c1 	cmplt_i s5, s3, s1
   123d4:	84 80 71 c0 	mull_i s4, s4, s3
   123d8:	04 00 50 c0 	add_i s0, s4, s0
   123dc:	25 ff ff f5 	bnz s5, -28 <NetbufferChecksum+0x34>
   123e0:	3f fc 0f 4f 	movehi s1, 32767
   123e4:	21 fc 7f 00 	or s1, s1, 8191
   123e8:	00 80 10 c0 	and s0, s0, s1
   123ec:	1f 00 00 f0 	ret
   123f0:	04 9c 15 00 	or s0, s4, 1383
   123f4:	1f 00 00 f0 	ret

00000000000123f8 ExpandTics:
   123f8:	3a 04 00 4f 	movehi s1, 58
   123fc:	21 60 5f 00 	or s1, s1, 6104
   12400:	21 00 00 a8 	load_32 s1, (s1)
   12404:	41 fc 03 01 	and s2, s1, 255
   12408:	40 00 61 c0 	sub_i s2, s0, s2
   1240c:	62 00 01 05 	add_i s3, s2, 64
   12410:	63 04 02 18 	cmplt_u s3, s3, 129
   12414:	83 00 00 f4 	bnz s3, 16 <ExpandTics+0x2c>
   12418:	42 04 01 14 	cmplt_i s2, s2, 65
   1241c:	a2 00 00 f4 	bnz s2, 20 <ExpandTics+0x38>
   12420:	21 00 fc 05 	add_i s1, s1, -256
   12424:	21 00 fc 01 	and s1, s1, -256
   12428:	01 00 50 c0 	add_i s0, s1, s0
   1242c:	1f 00 00 f0 	ret
   12430:	21 00 04 05 	add_i s1, s1, 256
   12434:	21 00 fc 01 	and s1, s1, -256
   12438:	01 00 50 c0 	add_i s0, s1, s0
   1243c:	1f 00 00 f0 	ret

0000000000012440 HSendPacket:
   12440:	de 03 fe 05 	add_i sp, sp, -128
   12444:	1e f3 01 88 	store_32 s24, 124(sp)
   12448:	3e e3 01 88 	store_32 s25, 120(sp)
   1244c:	5e d3 01 88 	store_32 s26, 116(sp)
   12450:	7e c3 01 88 	store_32 s27, 112(sp)
   12454:	fe b3 01 88 	store_32 ra, 108(sp)
   12458:	5a 04 00 4f 	movehi s2, 58
   1245c:	22 83 5f 00 	or s25, s2, 6112
   12460:	79 00 00 a8 	load_32 s3, (s25)
   12464:	43 1c 00 a0 	load_u8 s2, 7(s3)
   12468:	00 03 f0 c0 	move s24, s0
   1246c:	1a 20 01 4f 	movehi s0, 2330
   12470:	82 0c 00 0b 	shl s4, s2, 3
   12474:	84 10 00 00 	or s4, s4, 4
   12478:	a4 10 00 14 	cmplt_i s5, s4, 4
   1247c:	05 07 00 f4 	bnz s5, 224 <HSendPacket+0x11c>
   12480:	84 08 00 0a 	shr s4, s4, 2
   12484:	a3 10 00 05 	add_i s5, s3, 4
   12488:	c0 00 00 0f 	move s6, 0
   1248c:	00 9c 15 00 	or s0, s0, 1383
   12490:	e6 08 00 0b 	shl s7, s6, 2
   12494:	e5 80 53 c0 	add_i s7, s5, s7
   12498:	c6 04 00 05 	add_i s6, s6, 1
   1249c:	e7 00 00 a8 	load_32 s7, (s7)
   124a0:	06 01 42 c1 	cmplt_i s8, s6, s4
   124a4:	e7 00 73 c0 	mull_i s7, s7, s6
   124a8:	07 00 50 c0 	add_i s0, s7, s0
   124ac:	28 ff ff f5 	bnz s8, -28 <HSendPacket+0x50>
   124b0:	9f fc 0f 4f 	movehi s4, 32767
   124b4:	84 fc 7f 00 	or s4, s4, 8191
   124b8:	00 00 12 c0 	and s0, s0, s4
   124bc:	00 80 00 c0 	or s0, s0, s1
   124c0:	03 00 00 88 	store_32 s0, (s3)
   124c4:	58 00 00 f4 	bnz s24, 8 <HSendPacket+0x8c>
   124c8:	29 00 00 f6 	b 164 <HSendPacket+0x12c>
   124cc:	1a 04 00 4f 	movehi s0, 58
   124d0:	00 30 6f 00 	or s0, s0, 7116
   124d4:	00 00 00 a8 	load_32 s0, (s0)
   124d8:	e0 0d 00 f4 	bnz s0, 444 <HSendPacket+0x254>
   124dc:	1b 04 00 4f 	movehi s0, 59
   124e0:	00 c0 01 00 	or s0, s0, 112
   124e4:	00 00 00 a8 	load_32 s0, (s0)
   124e8:	e0 00 00 f4 	bnz s0, 28 <HSendPacket+0xc4>
   124ec:	02 00 00 4f 	movehi s0, 2
   124f0:	00 00 11 00 	or s0, s0, 1088
   124f4:	1e 00 00 88 	store_32 s0, (sp)
   124f8:	03 ef ff f9 	call -17396 <I_Error>
   124fc:	79 00 00 a8 	load_32 s3, (s25)
   12500:	43 1c 00 a0 	load_u8 s2, 7(s3)
   12504:	1a 04 00 4f 	movehi s0, 58
   12508:	20 04 00 0f 	move s1, 1
   1250c:	82 0c 00 0b 	shl s4, s2, 3
   12510:	40 e3 5b 00 	or s26, s0, 5880
   12514:	1a 00 00 a8 	load_32 s0, (s26)
   12518:	20 18 00 86 	store_16 s1, 6(s0)
   1251c:	3a 04 00 4f 	movehi s1, 58
   12520:	00 23 00 86 	store_16 s24, 8(s0)
   12524:	01 c3 27 00 	or s24, s1, 2544
   12528:	24 20 00 05 	add_i s1, s4, 8
   1252c:	20 28 00 86 	store_16 s1, 10(s0)
   12530:	18 00 00 a8 	load_32 s0, (s24)
   12534:	e0 0a 00 f2 	bz s0, 348 <HSendPacket+0x250>
   12538:	83 0c 00 a0 	load_u8 s4, 3(s3)
   1253c:	84 00 01 01 	and s4, s4, 64
   12540:	a4 02 00 f4 	bnz s4, 84 <HSendPacket+0x154>
   12544:	9a 04 00 4f 	movehi s4, 58
   12548:	a0 fc ff 0f 	move s5, -1
   1254c:	84 60 5f 00 	or s4, s4, 6104
   12550:	84 00 00 a8 	load_32 s4, (s4)
   12554:	c4 fc 03 01 	and s6, s4, 255
   12558:	20 00 00 f6 	b 128 <HSendPacket+0x198>
   1255c:	00 9c 15 00 	or s0, s0, 1383
   12560:	00 80 00 c0 	or s0, s0, s1
   12564:	03 00 00 88 	store_32 s0, (s3)
   12568:	38 fb ff f5 	bnz s24, -156 <HSendPacket+0x8c>
   1256c:	1a 04 00 4f 	movehi s0, 58
   12570:	40 a0 01 0f 	move s2, 104
   12574:	20 80 f1 c0 	move s1, s3
   12578:	00 f0 66 00 	or s0, s0, 6588
   1257c:	e2 fd 00 f8 	call 259976 <memcpy>
   12580:	1a 04 00 4f 	movehi s0, 58
   12584:	20 04 00 0f 	move s1, 1
   12588:	00 e0 66 00 	or s0, s0, 6584
   1258c:	20 00 00 88 	store_32 s1, (s0)
   12590:	41 00 00 f6 	b 260 <HSendPacket+0x254>
   12594:	9a 04 00 4f 	movehi s4, 58
   12598:	a3 10 00 a0 	load_u8 s5, 4(s3)
   1259c:	84 60 5f 00 	or s4, s4, 6104
   125a0:	84 00 00 a8 	load_32 s4, (s4)
   125a4:	c4 fc 03 01 	and s6, s4, 255
   125a8:	05 01 63 c0 	sub_i s8, s5, s6
   125ac:	e8 00 01 05 	add_i s7, s8, 64
   125b0:	27 05 02 18 	cmplt_u s9, s7, 129
   125b4:	e0 00 f2 c0 	move s7, s4
   125b8:	c9 00 00 f4 	bnz s9, 24 <HSendPacket+0x190>
   125bc:	e8 04 01 14 	cmplt_i s7, s8, 65
   125c0:	67 00 00 f4 	bnz s7, 12 <HSendPacket+0x18c>
   125c4:	e4 00 fc 05 	add_i s7, s4, -256
   125c8:	02 00 00 f6 	b 8 <HSendPacket+0x190>
   125cc:	e4 00 04 05 	add_i s7, s4, 256
   125d0:	e7 00 fc 01 	and s7, s7, -256
   125d4:	a7 80 02 c0 	or s5, s7, s5
   125d8:	63 14 00 a0 	load_u8 s3, 5(s3)
   125dc:	c3 00 63 c0 	sub_i s6, s3, s6
   125e0:	e6 00 01 05 	add_i s7, s6, 64
   125e4:	e7 04 02 18 	cmplt_u s7, s7, 129
   125e8:	c7 00 00 f4 	bnz s7, 24 <HSendPacket+0x1c0>
   125ec:	c6 04 01 14 	cmplt_i s6, s6, 65
   125f0:	66 00 00 f4 	bnz s6, 12 <HSendPacket+0x1bc>
   125f4:	84 00 fc 05 	add_i s4, s4, -256
   125f8:	02 00 00 f6 	b 8 <HSendPacket+0x1c0>
   125fc:	84 00 04 05 	add_i s4, s4, 256
   12600:	3e 50 00 88 	store_32 s1, 20(sp)
   12604:	84 00 fc 01 	and s4, s4, -256
   12608:	20 00 00 4f 	movehi s1, 0
   1260c:	be 40 00 88 	store_32 s5, 16(sp)
   12610:	5e 30 00 88 	store_32 s2, 12(sp)
   12614:	1e 00 00 88 	store_32 s0, (sp)
   12618:	64 80 01 c0 	or s3, s4, s3
   1261c:	01 8c 1e 00 	or s0, s1, 1955
   12620:	1e 10 00 88 	store_32 s0, 4(sp)
   12624:	7e 20 00 88 	store_32 s3, 8(sp)
   12628:	c5 ff 00 f8 	call 261908 <fprintf>
   1262c:	1a 00 00 a8 	load_32 s0, (s26)
   12630:	00 28 00 a6 	load_s16 s0, 10(s0)
   12634:	38 00 00 a8 	load_32 s1, (s24)
   12638:	00 04 00 14 	cmplt_i s0, s0, 1
   1263c:	60 02 00 f4 	bnz s0, 76 <HSendPacket+0x248>
   12640:	02 00 00 4f 	movehi s0, 2
   12644:	60 03 00 0f 	move s27, 0
   12648:	00 68 2c 00 	or s0, s0, 2842
   1264c:	1e a0 01 88 	store_32 s0, 104(sp)
   12650:	19 00 00 a8 	load_32 s0, (s25)
   12654:	00 80 5d c0 	add_i s0, s0, s27
   12658:	00 00 00 a0 	load_u8 s0, (s0)
   1265c:	1e 20 00 88 	store_32 s0, 8(sp)
   12660:	1e a0 01 a8 	load_32 s0, 104(sp)
   12664:	1e 10 00 88 	store_32 s0, 4(sp)
   12668:	3e 00 00 88 	store_32 s1, (sp)
   1266c:	b4 ff 00 f8 	call 261840 <fprintf>
   12670:	1a 00 00 a8 	load_32 s0, (s26)
   12674:	7b 07 00 05 	add_i s27, s27, 1
   12678:	00 28 00 a6 	load_s16 s0, 10(s0)
   1267c:	38 00 00 a8 	load_32 s1, (s24)
   12680:	1b 00 40 c1 	cmplt_i s0, s27, s0
   12684:	60 fe ff f5 	bnz s0, -52 <HSendPacket+0x210>
   12688:	00 28 00 0f 	move s0, 10
   1268c:	15 fe 00 f8 	call 260180 <fputc>
   12690:	24 f0 ff f9 	call -16240 <I_NetCmd>
   12694:	fe b3 01 a8 	load_32 ra, 108(sp)
   12698:	7e c3 01 a8 	load_32 s27, 112(sp)
   1269c:	5e d3 01 a8 	load_32 s26, 116(sp)
   126a0:	3e e3 01 a8 	load_32 s25, 120(sp)
   126a4:	1e f3 01 a8 	load_32 s24, 124(sp)
   126a8:	de 03 02 05 	add_i sp, sp, 128
   126ac:	1f 00 00 f0 	ret

00000000000126b0 HGetPacket:
   126b0:	de 03 fe 05 	add_i sp, sp, -128
   126b4:	1e f3 01 88 	store_32 s24, 124(sp)
   126b8:	3e e3 01 88 	store_32 s25, 120(sp)
   126bc:	5e d3 01 88 	store_32 s26, 116(sp)
   126c0:	7e c3 01 88 	store_32 s27, 112(sp)
   126c4:	fe b3 01 88 	store_32 ra, 108(sp)
   126c8:	1a 04 00 4f 	movehi s0, 58
   126cc:	00 e3 66 00 	or s24, s0, 6584
   126d0:	18 00 00 a8 	load_32 s0, (s24)
   126d4:	e0 02 00 f2 	bz s0, 92 <HGetPacket+0x80>
   126d8:	1a 04 00 4f 	movehi s0, 58
   126dc:	3a 04 00 4f 	movehi s1, 58
   126e0:	40 a0 01 0f 	move s2, 104
   126e4:	00 80 5f 00 	or s0, s0, 6112
   126e8:	21 f0 66 00 	or s1, s1, 6588
   126ec:	00 00 00 a8 	load_32 s0, (s0)
   126f0:	85 fd 00 f8 	call 259604 <memcpy>
   126f4:	1a 04 00 4f 	movehi s0, 58
   126f8:	20 00 00 0f 	move s1, 0
   126fc:	00 e0 5b 00 	or s0, s0, 5880
   12700:	00 00 00 a8 	load_32 s0, (s0)
   12704:	20 20 00 86 	store_16 s1, 8(s0)
   12708:	38 00 00 88 	store_32 s1, (s24)
   1270c:	00 07 00 0f 	move s24, 1
   12710:	00 00 fc c0 	move s0, s24
   12714:	fe b3 01 a8 	load_32 ra, 108(sp)
   12718:	7e c3 01 a8 	load_32 s27, 112(sp)
   1271c:	5e d3 01 a8 	load_32 s26, 116(sp)
   12720:	3e e3 01 a8 	load_32 s25, 120(sp)
   12724:	1e f3 01 a8 	load_32 s24, 124(sp)
   12728:	de 03 02 05 	add_i sp, sp, 128
   1272c:	1f 00 00 f0 	ret
   12730:	1b 04 00 4f 	movehi s0, 59
   12734:	3a 04 00 4f 	movehi s1, 58
   12738:	00 03 00 0f 	move s24, 0
   1273c:	00 c0 01 00 	or s0, s0, 112
   12740:	21 30 6f 00 	or s1, s1, 7116
   12744:	40 00 00 a8 	load_32 s2, (s0)
   12748:	01 00 00 a8 	load_32 s0, (s1)
   1274c:	22 fe ff f3 	bz s2, -60 <HGetPacket+0x60>
   12750:	00 fe ff f5 	bnz s0, -64 <HGetPacket+0x60>
   12754:	1a 04 00 4f 	movehi s0, 58
   12758:	20 08 00 0f 	move s1, 2
   1275c:	20 e3 5b 00 	or s25, s0, 5880
   12760:	19 00 00 a8 	load_32 s0, (s25)
   12764:	20 18 00 86 	store_16 s1, 6(s0)
   12768:	ee ef ff f9 	call -16456 <I_NetCmd>
   1276c:	39 00 00 a8 	load_32 s1, (s25)
   12770:	01 20 00 a6 	load_s16 s0, 8(s1)
   12774:	40 fc ff 10 	cmpeq_i s2, s0, -1
   12778:	c2 fc ff f5 	bnz s2, -104 <HGetPacket+0x60>
   1277c:	5a 04 00 4f 	movehi s2, 58
   12780:	21 28 00 a6 	load_s16 s1, 10(s1)
   12784:	42 83 5f 00 	or s26, s2, 6112
   12788:	9a 00 00 a8 	load_32 s4, (s26)
   1278c:	44 1c 00 a0 	load_u8 s2, 7(s4)
   12790:	62 0c 00 0b 	shl s3, s2, 3
   12794:	63 20 00 05 	add_i s3, s3, 8
   12798:	63 80 00 c1 	cmpeq_i s3, s3, s1
   1279c:	43 00 00 f4 	bnz s3, 8 <HGetPacket+0xf4>
   127a0:	18 00 00 f6 	b 96 <HGetPacket+0x150>
   127a4:	a1 f0 ff 05 	add_i s5, s1, -4
   127a8:	7a 20 01 4f 	movehi s3, 2330
   127ac:	c5 10 00 14 	cmplt_i s6, s5, 4
   127b0:	e6 03 00 f4 	bnz s6, 124 <HGetPacket+0x17c>
   127b4:	c5 7c 00 09 	ashr s6, s5, 31
   127b8:	e0 00 00 0f 	move s7, 0
   127bc:	63 9c 15 00 	or s3, s3, 1383
   127c0:	c6 78 00 0a 	shr s6, s6, 30
   127c4:	a5 00 53 c0 	add_i s5, s5, s6
   127c8:	c4 10 00 05 	add_i s6, s4, 4
   127cc:	a5 08 00 09 	ashr s5, s5, 2
   127d0:	07 09 00 0b 	shl s8, s7, 2
   127d4:	06 01 54 c0 	add_i s8, s6, s8
   127d8:	e7 04 00 05 	add_i s7, s7, 1
   127dc:	08 01 00 a8 	load_32 s8, (s8)
   127e0:	27 81 42 c1 	cmplt_i s9, s7, s5
   127e4:	08 81 73 c0 	mull_i s8, s8, s7
   127e8:	68 80 51 c0 	add_i s3, s8, s3
   127ec:	29 ff ff f5 	bnz s9, -28 <HGetPacket+0x120>
   127f0:	bf fc 0f 4f 	movehi s5, 32767
   127f4:	a5 fc 7f 00 	or s5, s5, 8191
   127f8:	63 80 12 c0 	and s3, s3, s5
   127fc:	0d 00 00 f6 	b 52 <HGetPacket+0x180>
   12800:	1a 04 00 4f 	movehi s0, 58
   12804:	00 c0 27 00 	or s0, s0, 2544
   12808:	00 00 00 a8 	load_32 s0, (s0)
   1280c:	20 f8 ff f3 	bz s0, -252 <HGetPacket+0x60>
   12810:	41 00 00 4f 	movehi s2, 1
   12814:	3e 20 00 88 	store_32 s1, 8(sp)
   12818:	1e 00 00 88 	store_32 s0, (sp)
   1281c:	02 94 34 00 	or s0, s2, 3365
   12820:	1e 10 00 88 	store_32 s0, 4(sp)
   12824:	46 ff 00 f8 	call 261400 <fprintf>
   12828:	ba ff ff f7 	b -280 <HGetPacket+0x60>
   1282c:	63 9c 15 00 	or s3, s3, 1383
   12830:	fa 04 00 4f 	movehi s7, 58
   12834:	a4 00 00 a8 	load_32 s5, (s4)
   12838:	df fc 0f 4f 	movehi s6, 32767
   1283c:	67 c3 27 00 	or s27, s7, 2544
   12840:	c6 fc 7f 00 	or s6, s6, 8191
   12844:	c5 00 13 c0 	and s6, s5, s6
   12848:	c3 00 03 c1 	cmpeq_i s6, s3, s6
   1284c:	7b 00 00 a8 	load_32 s3, (s27)
   12850:	46 00 00 f4 	bnz s6, 8 <HGetPacket+0x1a8>
   12854:	10 00 00 f6 	b 64 <HGetPacket+0x1e4>
   12858:	00 07 00 0f 	move s24, 1
   1285c:	a3 f5 ff f3 	bz s3, -332 <HGetPacket+0x60>
   12860:	c0 00 20 4f 	movehi s6, 65536
   12864:	c5 00 13 c0 	and s6, s5, s6
   12868:	46 00 00 f2 	bz s6, 8 <HGetPacket+0x1c0>
   1286c:	11 00 00 f6 	b 68 <HGetPacket+0x200>
   12870:	c0 00 40 4f 	movehi s6, 131072
   12874:	a5 00 13 c0 	and s5, s5, s6
   12878:	a5 02 00 f4 	bnz s5, 84 <HGetPacket+0x21c>
   1287c:	ba 04 00 4f 	movehi s5, 58
   12880:	c0 fc ff 0f 	move s6, -1
   12884:	a5 60 5f 00 	or s5, s5, 6104
   12888:	a5 00 00 a8 	load_32 s5, (s5)
   1288c:	e5 fc 03 01 	and s7, s5, 255
   12890:	20 00 00 f6 	b 128 <HGetPacket+0x260>
   12894:	e3 f3 ff f3 	bz s3, -388 <HGetPacket+0x60>
   12898:	01 00 00 4f 	movehi s0, 1
   1289c:	20 50 00 0f 	move s1, 20
   128a0:	40 04 00 0f 	move s2, 1
   128a4:	00 38 2d 00 	or s0, s0, 2894
   128a8:	b4 fe 00 f8 	call 260816 <fwrite>
   128ac:	99 ff ff f7 	b -412 <HGetPacket+0x60>
   128b0:	02 00 00 4f 	movehi s0, 2
   128b4:	00 07 00 0f 	move s24, 1
   128b8:	20 34 00 0f 	move s1, 13
   128bc:	00 6c 7b 00 	or s0, s0, 7899
   128c0:	40 00 fc c0 	move s2, s24
   128c4:	ad fe 00 f8 	call 260788 <fwrite>
   128c8:	92 ff ff f7 	b -440 <HGetPacket+0x60>
   128cc:	ba 04 00 4f 	movehi s5, 58
   128d0:	c4 10 00 a0 	load_u8 s6, 4(s4)
   128d4:	a5 60 5f 00 	or s5, s5, 6104
   128d8:	a5 00 00 a8 	load_32 s5, (s5)
   128dc:	e5 fc 03 01 	and s7, s5, 255
   128e0:	26 81 63 c0 	sub_i s9, s6, s7
   128e4:	09 01 01 05 	add_i s8, s9, 64
   128e8:	48 05 02 18 	cmplt_u s10, s8, 129
   128ec:	00 81 f2 c0 	move s8, s5
   128f0:	ca 00 00 f4 	bnz s10, 24 <HGetPacket+0x258>
   128f4:	09 05 01 14 	cmplt_i s8, s9, 65
   128f8:	68 00 00 f4 	bnz s8, 12 <HGetPacket+0x254>
   128fc:	05 01 fc 05 	add_i s8, s5, -256
   12900:	02 00 00 f6 	b 8 <HGetPacket+0x258>
   12904:	05 01 04 05 	add_i s8, s5, 256
   12908:	08 01 fc 01 	and s8, s8, -256
   1290c:	c8 00 03 c0 	or s6, s8, s6
   12910:	84 14 00 a0 	load_u8 s4, 5(s4)
   12914:	e4 80 63 c0 	sub_i s7, s4, s7
   12918:	07 01 01 05 	add_i s8, s7, 64
   1291c:	08 05 02 18 	cmplt_u s8, s8, 129
   12920:	c8 00 00 f4 	bnz s8, 24 <HGetPacket+0x288>
   12924:	e7 04 01 14 	cmplt_i s7, s7, 65
   12928:	67 00 00 f4 	bnz s7, 12 <HGetPacket+0x284>
   1292c:	a5 00 fc 05 	add_i s5, s5, -256
   12930:	02 00 00 f6 	b 8 <HGetPacket+0x288>
   12934:	a5 00 04 05 	add_i s5, s5, 256
   12938:	3e 60 00 88 	store_32 s1, 24(sp)
   1293c:	a5 00 fc 01 	and s5, s5, -256
   12940:	22 00 00 4f 	movehi s1, 2
   12944:	de 50 00 88 	store_32 s6, 20(sp)
   12948:	5e 40 00 88 	store_32 s2, 16(sp)
   1294c:	1e 20 00 88 	store_32 s0, 8(sp)
   12950:	85 00 02 c0 	or s4, s5, s4
   12954:	7e 00 00 88 	store_32 s3, (sp)
   12958:	01 a4 7b 00 	or s0, s1, 7913
   1295c:	1e 10 00 88 	store_32 s0, 4(sp)
   12960:	9e 30 00 88 	store_32 s4, 12(sp)
   12964:	f6 fe 00 f8 	call 261080 <fprintf>
   12968:	19 00 00 a8 	load_32 s0, (s25)
   1296c:	00 28 00 a6 	load_s16 s0, 10(s0)
   12970:	3b 00 00 a8 	load_32 s1, (s27)
   12974:	00 04 00 14 	cmplt_i s0, s0, 1
   12978:	a0 02 00 f4 	bnz s0, 84 <HGetPacket+0x31c>
   1297c:	02 00 00 4f 	movehi s0, 2
   12980:	3e a3 01 88 	store_32 s25, 104(sp)
   12984:	5e 93 01 88 	store_32 s26, 100(sp)
   12988:	40 03 00 0f 	move s26, 0
   1298c:	20 6b 2c 00 	or s25, s0, 2842
   12990:	1e 90 01 a8 	load_32 s0, 100(sp)
   12994:	00 00 00 a8 	load_32 s0, (s0)
   12998:	00 00 5d c0 	add_i s0, s0, s26
   1299c:	00 00 00 a0 	load_u8 s0, (s0)
   129a0:	1e 20 00 88 	store_32 s0, 8(sp)
   129a4:	3e 13 00 88 	store_32 s25, 4(sp)
   129a8:	3e 00 00 88 	store_32 s1, (sp)
   129ac:	e4 fe 00 f8 	call 261008 <fprintf>
   129b0:	1e a0 01 a8 	load_32 s0, 104(sp)
   129b4:	5a 07 00 05 	add_i s26, s26, 1
   129b8:	00 00 00 a8 	load_32 s0, (s0)
   129bc:	00 28 00 a6 	load_s16 s0, 10(s0)
   129c0:	3b 00 00 a8 	load_32 s1, (s27)
   129c4:	1a 00 40 c1 	cmplt_i s0, s26, s0
   129c8:	40 fe ff f5 	bnz s0, -56 <HGetPacket+0x2e0>
   129cc:	00 28 00 0f 	move s0, 10
   129d0:	44 fd 00 f8 	call 259344 <fputc>
   129d4:	4f ff ff f7 	b -708 <HGetPacket+0x60>

00000000000129d8 GetPackets:
   129d8:	de 03 fc 05 	add_i sp, sp, -256
   129dc:	1e f3 03 88 	store_32 s24, 252(sp)
   129e0:	3e e3 03 88 	store_32 s25, 248(sp)
   129e4:	5e d3 03 88 	store_32 s26, 244(sp)
   129e8:	7e c3 03 88 	store_32 s27, 240(sp)
   129ec:	fe b3 03 88 	store_32 ra, 236(sp)
   129f0:	30 ff ff f9 	call -832 <HGetPacket>
   129f4:	60 23 00 f2 	bz s0, 1132 <GetPackets+0x488>
   129f8:	1a 04 00 4f 	movehi s0, 58
   129fc:	3a 04 00 4f 	movehi s1, 58
   12a00:	5a 04 00 4f 	movehi s2, 58
   12a04:	00 83 5f 00 	or s24, s0, 6112
   12a08:	00 00 20 4f 	movehi s0, 65536
   12a0c:	1e a0 03 88 	store_32 s0, 232(sp)
   12a10:	1a 04 00 4f 	movehi s0, 58
   12a14:	00 e0 5b 00 	or s0, s0, 5880
   12a18:	1e 60 03 88 	store_32 s0, 216(sp)
   12a1c:	01 60 5f 00 	or s0, s1, 6104
   12a20:	1e 70 03 88 	store_32 s0, 220(sp)
   12a24:	02 50 66 00 	or s0, s2, 6548
   12a28:	1e 00 03 88 	store_32 s0, 192(sp)
   12a2c:	00 00 00 0f 	move s0, 0
   12a30:	1e e0 02 88 	store_32 s0, 184(sp)
   12a34:	1b 04 00 4f 	movehi s0, 59
   12a38:	3a 04 00 4f 	movehi s1, 58
   12a3c:	42 00 00 4f 	movehi s2, 2
   12a40:	00 00 02 00 	or s0, s0, 128
   12a44:	1e d0 02 88 	store_32 s0, 180(sp)
   12a48:	01 f0 5b 00 	or s0, s1, 5884
   12a4c:	1e c0 02 88 	store_32 s0, 176(sp)
   12a50:	02 1c 7c 00 	or s0, s2, 7943
   12a54:	1e b0 02 88 	store_32 s0, 172(sp)
   12a58:	00 5c 00 0f 	move s0, 23
   12a5c:	1e a0 02 88 	store_32 s0, 168(sp)
   12a60:	1a 04 00 4f 	movehi s0, 58
   12a64:	3b 04 00 4f 	movehi s1, 59
   12a68:	5a 04 00 4f 	movehi s2, 58
   12a6c:	00 c0 6d 00 	or s0, s0, 7024
   12a70:	1e 90 02 88 	store_32 s0, 164(sp)
   12a74:	01 40 02 00 	or s0, s1, 144
   12a78:	1e 80 02 88 	store_32 s0, 160(sp)
   12a7c:	02 40 6f 00 	or s0, s2, 7120
   12a80:	1e 70 02 88 	store_32 s0, 156(sp)
   12a84:	1a 04 00 4f 	movehi s0, 58
   12a88:	20 00 10 4f 	movehi s1, 32768
   12a8c:	3e 40 03 88 	store_32 s1, 208(sp)
   12a90:	3a 04 00 4f 	movehi s1, 58
   12a94:	00 10 66 00 	or s0, s0, 6532
   12a98:	1e 30 03 88 	store_32 s0, 204(sp)
   12a9c:	1a 04 00 4f 	movehi s0, 58
   12aa0:	21 10 69 00 	or s1, s1, 6724
   12aa4:	3e 20 03 88 	store_32 s1, 200(sp)
   12aa8:	3a 04 00 4f 	movehi s1, 58
   12aac:	00 90 69 00 	or s0, s0, 6756
   12ab0:	1e 40 02 88 	store_32 s0, 144(sp)
   12ab4:	01 00 00 4f 	movehi s0, 1
   12ab8:	21 c0 27 00 	or s1, s1, 2544
   12abc:	3e f0 02 88 	store_32 s1, 188(sp)
   12ac0:	20 28 00 0f 	move s1, 10
   12ac4:	3e 60 02 88 	store_32 s1, 152(sp)
   12ac8:	00 0c 62 00 	or s0, s0, 6275
   12acc:	1e f0 01 88 	store_32 s0, 124(sp)
   12ad0:	1a 04 00 4f 	movehi s0, 58
   12ad4:	21 00 00 4f 	movehi s1, 1
   12ad8:	5a 04 00 4f 	movehi s2, 58
   12adc:	00 90 65 00 	or s0, s0, 6500
   12ae0:	1e 10 03 88 	store_32 s0, 196(sp)
   12ae4:	01 8c 2d 00 	or s0, s1, 2915
   12ae8:	1e 30 02 88 	store_32 s0, 140(sp)
   12aec:	02 90 68 00 	or s0, s2, 6692
   12af0:	1e 50 02 88 	store_32 s0, 148(sp)
   12af4:	00 04 00 0f 	move s0, 1
   12af8:	1e 00 02 88 	store_32 s0, 128(sp)
   12afc:	01 00 00 4f 	movehi s0, 1
   12b00:	35 a8 2a 4f 	movehi s1, 87381
   12b04:	5a 04 00 4f 	movehi s2, 58
   12b08:	00 08 2e 00 	or s0, s0, 2946
   12b0c:	1e e0 01 88 	store_32 s0, 120(sp)
   12b10:	01 ac 2a 00 	or s0, s1, 2731
   12b14:	1e 90 03 88 	store_32 s0, 228(sp)
   12b18:	02 90 5f 00 	or s0, s2, 6116
   12b1c:	1e 80 03 88 	store_32 s0, 224(sp)
   12b20:	1e 53 03 88 	store_32 s24, 212(sp)
   12b24:	16 00 00 f6 	b 88 <GetPackets+0x1a4>
   12b28:	21 00 04 05 	add_i s1, s1, 256
   12b2c:	5e 40 02 a8 	load_32 s2, 144(sp)
   12b30:	21 00 fc 01 	and s1, s1, -256
   12b34:	21 00 00 c0 	or s1, s1, s0
   12b38:	42 80 5d c0 	add_i s2, s2, s27
   12b3c:	22 00 00 88 	store_32 s1, (s2)
   12b40:	1e f0 02 a8 	load_32 s0, 188(sp)
   12b44:	40 00 00 a8 	load_32 s2, (s0)
   12b48:	1e 60 02 a8 	load_32 s0, 152(sp)
   12b4c:	82 08 00 f2 	bz s2, 272 <GetPackets+0x284>
   12b50:	3e 20 00 88 	store_32 s1, 8(sp)
   12b54:	5e 00 00 88 	store_32 s2, (sp)
   12b58:	1e f0 01 a8 	load_32 s0, 124(sp)
   12b5c:	1e 10 00 88 	store_32 s0, 4(sp)
   12b60:	fe 20 02 88 	store_32 s7, 136(sp)
   12b64:	be 10 02 88 	store_32 s5, 132(sp)
   12b68:	75 fe 00 f8 	call 260564 <fprintf>
   12b6c:	be 10 02 a8 	load_32 s5, 132(sp)
   12b70:	fe 20 02 a8 	load_32 s7, 136(sp)
   12b74:	1e 60 02 a8 	load_32 s0, 152(sp)
   12b78:	39 00 00 f6 	b 228 <GetPackets+0x284>
   12b7c:	38 00 00 a8 	load_32 s1, (s24)
   12b80:	01 00 00 a8 	load_32 s0, (s1)
   12b84:	5e a0 03 a8 	load_32 s2, 232(sp)
   12b88:	40 00 11 c0 	and s2, s0, s2
   12b8c:	42 16 00 f4 	bnz s2, 712 <GetPackets+0x47c>
   12b90:	81 18 00 a0 	load_u8 s4, 6(s1)
   12b94:	5e 60 03 a8 	load_32 s2, 216(sp)
   12b98:	42 00 00 a8 	load_32 s2, (s2)
   12b9c:	e2 20 00 a6 	load_s16 s7, 8(s2)
   12ba0:	41 14 00 a0 	load_u8 s2, 5(s1)
   12ba4:	7e 70 03 a8 	load_32 s3, 220(sp)
   12ba8:	63 00 00 a8 	load_32 s3, (s3)
   12bac:	a3 fc 03 01 	and s5, s3, 255
   12bb0:	a2 80 62 c0 	sub_i s5, s2, s5
   12bb4:	c5 00 01 05 	add_i s6, s5, 64
   12bb8:	c6 04 02 18 	cmplt_u s6, s6, 129
   12bbc:	86 00 00 f4 	bnz s6, 16 <GetPackets+0x1f4>
   12bc0:	a5 04 01 14 	cmplt_i s5, s5, 65
   12bc4:	a5 07 00 f4 	bnz s5, 244 <GetPackets+0x2e0>
   12bc8:	63 00 fc 05 	add_i s3, s3, -256
   12bcc:	21 1f 00 a0 	load_u8 s25, 7(s1)
   12bd0:	44 ff 01 01 	and s26, s4, 127
   12bd4:	80 fc ff 12 	cmpgt_i s4, s0, -1
   12bd8:	44 00 00 f4 	bnz s4, 8 <GetPackets+0x208>
   12bdc:	3c 00 00 f6 	b 240 <GetPackets+0x2f4>
   12be0:	23 00 fc 01 	and s1, s3, -256
   12be4:	7e 40 03 a8 	load_32 s3, 208(sp)
   12be8:	a1 00 01 c0 	or s5, s1, s2
   12bec:	00 80 11 c0 	and s0, s0, s3
   12bf0:	20 01 00 f2 	bz s0, 36 <GetPackets+0x23c>
   12bf4:	00 00 00 4f 	movehi s0, 0
   12bf8:	00 04 49 00 	or s0, s0, 4673
   12bfc:	1e 00 00 88 	store_32 s0, (sp)
   12c00:	00 83 f3 c0 	move s24, s7
   12c04:	60 83 f2 c0 	move s27, s5
   12c08:	3f ed ff f9 	call -19204 <I_Error>
   12c0c:	a0 80 fd c0 	move s5, s27
   12c10:	e0 00 fc c0 	move s7, s24
   12c14:	3e 30 03 a8 	load_32 s1, 204(sp)
   12c18:	1a 08 00 0b 	shl s0, s26, 2
   12c1c:	67 0b 00 0b 	shl s27, s7, 2
   12c20:	25 83 5c c0 	add_i s25, s5, s25
   12c24:	01 00 50 c0 	add_i s0, s1, s0
   12c28:	3e 20 03 a8 	load_32 s1, 200(sp)
   12c2c:	e0 00 00 88 	store_32 s7, (s0)
   12c30:	01 83 5d c0 	add_i s24, s1, s27
   12c34:	18 00 00 a8 	load_32 s0, (s24)
   12c38:	20 00 00 12 	cmpgt_i s1, s0, 0
   12c3c:	e1 00 00 f4 	bnz s1, 28 <GetPackets+0x280>
   12c40:	3e 50 03 a8 	load_32 s1, 212(sp)
   12c44:	21 00 00 a8 	load_32 s1, (s1)
   12c48:	41 0c 00 a0 	load_u8 s2, 3(s1)
   12c4c:	42 00 01 01 	and s2, s2, 64
   12c50:	42 00 00 f2 	bz s2, 8 <GetPackets+0x280>
   12c54:	50 00 00 f6 	b 320 <GetPackets+0x3bc>
   12c58:	00 fc ff 05 	add_i s0, s0, -1
   12c5c:	3e 10 03 a8 	load_32 s1, 196(sp)
   12c60:	18 00 00 88 	store_32 s0, (s24)
   12c64:	21 80 5d c0 	add_i s1, s1, s27
   12c68:	01 00 00 a8 	load_32 s0, (s1)
   12c6c:	1e 53 03 a8 	load_32 s24, 212(sp)
   12c70:	59 00 00 c1 	cmpeq_i s2, s25, s0
   12c74:	02 0f 00 f4 	bnz s2, 480 <GetPackets+0x47c>
   12c78:	59 00 30 c1 	cmpge_i s2, s25, s0
   12c7c:	62 06 00 f4 	bnz s2, 204 <GetPackets+0x370>
   12c80:	1e f0 02 a8 	load_32 s0, 188(sp)
   12c84:	00 00 00 a8 	load_32 s0, (s0)
   12c88:	60 0e 00 f2 	bz s0, 460 <GetPackets+0x47c>
   12c8c:	38 00 00 a8 	load_32 s1, (s24)
   12c90:	21 1c 00 a0 	load_u8 s1, 7(s1)
   12c94:	3e 30 00 88 	store_32 s1, 12(sp)
   12c98:	be 20 00 88 	store_32 s5, 8(sp)
   12c9c:	3e 30 02 a8 	load_32 s1, 140(sp)
   12ca0:	3e 10 00 88 	store_32 s1, 4(sp)
   12ca4:	1e 00 00 88 	store_32 s0, (sp)
   12ca8:	25 fe 00 f8 	call 260244 <fprintf>
   12cac:	81 fe ff f9 	call -1532 <HGetPacket>
   12cb0:	80 0d 00 f2 	bz s0, 432 <GetPackets+0x488>
   12cb4:	b2 ff ff f7 	b -312 <GetPackets+0x1a4>
   12cb8:	63 00 04 05 	add_i s3, s3, 256
   12cbc:	21 1f 00 a0 	load_u8 s25, 7(s1)
   12cc0:	44 ff 01 01 	and s26, s4, 127
   12cc4:	80 fc ff 12 	cmpgt_i s4, s0, -1
   12cc8:	c4 f8 ff f5 	bnz s4, -232 <GetPackets+0x208>
   12ccc:	3e 00 03 a8 	load_32 s1, 192(sp)
   12cd0:	07 08 00 0b 	shl s0, s7, 2
   12cd4:	01 00 50 c0 	add_i s0, s1, s0
   12cd8:	20 00 00 a8 	load_32 s1, (s0)
   12cdc:	c1 0b 00 f2 	bz s1, 376 <GetPackets+0x47c>
   12ce0:	5e d0 02 a8 	load_32 s2, 180(sp)
   12ce4:	3a 08 00 0b 	shl s1, s26, 2
   12ce8:	22 80 50 c0 	add_i s1, s2, s1
   12cec:	5e e0 02 a8 	load_32 s2, 184(sp)
   12cf0:	40 00 00 88 	store_32 s2, (s0)
   12cf4:	41 00 00 88 	store_32 s2, (s1)
   12cf8:	3e c3 02 a8 	load_32 s25, 176(sp)
   12cfc:	00 80 fc c0 	move s0, s25
   12d00:	3e b0 02 a8 	load_32 s1, 172(sp)
   12d04:	5e a0 02 a8 	load_32 s2, 168(sp)
   12d08:	ff fb 00 f8 	call 258044 <memcpy>
   12d0c:	1a c4 00 05 	add_i s0, s26, 49
   12d10:	19 1c 00 82 	store_8 s0, 7(s25)
   12d14:	1e 90 02 a8 	load_32 s0, 164(sp)
   12d18:	00 00 00 a8 	load_32 s0, (s0)
   12d1c:	3e 80 02 a8 	load_32 s1, 160(sp)
   12d20:	00 60 04 07 	mull_i s0, s0, 280
   12d24:	01 00 50 c0 	add_i s0, s1, s0
   12d28:	20 63 03 88 	store_32 s25, 216(s0)
   12d2c:	1e 70 02 a8 	load_32 s0, 156(sp)
   12d30:	00 00 00 a8 	load_32 s0, (s0)
   12d34:	00 09 00 f2 	bz s0, 288 <GetPackets+0x47c>
   12d38:	8b 12 00 f8 	call 18988 <G_CheckDemoStatus>
   12d3c:	5d fe ff f9 	call -1676 <HGetPacket>
   12d40:	00 09 00 f2 	bz s0, 288 <GetPackets+0x488>
   12d44:	8e ff ff f7 	b -456 <GetPackets+0x1a4>
   12d48:	40 80 32 c1 	cmpge_i s2, s0, s5
   12d4c:	c2 03 00 f4 	bnz s2, 120 <GetPackets+0x3ec>
   12d50:	3e f0 02 a8 	load_32 s1, 188(sp)
   12d54:	21 00 00 a8 	load_32 s1, (s1)
   12d58:	01 01 00 f2 	bz s1, 32 <GetPackets+0x3a0>
   12d5c:	1e 40 00 88 	store_32 s0, 16(sp)
   12d60:	be 30 00 88 	store_32 s5, 12(sp)
   12d64:	fe 20 00 88 	store_32 s7, 8(sp)
   12d68:	3e 00 00 88 	store_32 s1, (sp)
   12d6c:	1e e0 01 a8 	load_32 s0, 120(sp)
   12d70:	1e 10 00 88 	store_32 s0, 4(sp)
   12d74:	f2 fd 00 f8 	call 260040 <fprintf>
   12d78:	1e 50 02 a8 	load_32 s0, 148(sp)
   12d7c:	3e 00 02 a8 	load_32 s1, 128(sp)
   12d80:	00 80 5d c0 	add_i s0, s0, s27
   12d84:	20 00 00 88 	store_32 s1, (s0)
   12d88:	4a fe ff f9 	call -1752 <HGetPacket>
   12d8c:	a0 06 00 f2 	bz s0, 212 <GetPackets+0x488>
   12d90:	7b ff ff f7 	b -532 <GetPackets+0x1a4>
   12d94:	01 10 00 a0 	load_u8 s0, 4(s1)
   12d98:	3e 70 03 a8 	load_32 s1, 220(sp)
   12d9c:	21 00 00 a8 	load_32 s1, (s1)
   12da0:	41 fc 03 01 	and s2, s1, 255
   12da4:	40 00 61 c0 	sub_i s2, s0, s2
   12da8:	62 00 01 05 	add_i s3, s2, 64
   12dac:	63 04 02 18 	cmplt_u s3, s3, 129
   12db0:	e3 eb ff f5 	bnz s3, -644 <GetPackets+0x154>
   12db4:	42 04 01 14 	cmplt_i s2, s2, 65
   12db8:	82 eb ff f5 	bnz s2, -656 <GetPackets+0x150>
   12dbc:	21 00 fc 05 	add_i s1, s1, -256
   12dc0:	5b ff ff f7 	b -660 <GetPackets+0x154>
   12dc4:	5e 50 02 a8 	load_32 s2, 148(sp)
   12dc8:	60 80 3c c1 	cmpge_i s3, s0, s25
   12dcc:	9e e0 02 a8 	load_32 s4, 184(sp)
   12dd0:	42 80 5d c0 	add_i s2, s2, s27
   12dd4:	82 00 00 88 	store_32 s4, (s2)
   12dd8:	e3 03 00 f4 	bnz s3, 124 <GetPackets+0x47c>
   12ddc:	60 80 62 c0 	sub_i s3, s0, s5
   12de0:	58 00 00 a8 	load_32 s2, (s24)
   12de4:	63 0c 00 0b 	shl s3, s3, 3
   12de8:	42 80 51 c0 	add_i s2, s2, s3
   12dec:	42 20 00 05 	add_i s2, s2, 8
   12df0:	7e 90 03 a8 	load_32 s3, 228(sp)
   12df4:	be 80 03 a8 	load_32 s5, 224(sp)
   12df8:	60 80 f1 c1 	mulh_i s3, s0, s3
   12dfc:	83 04 00 0a 	shr s4, s3, 1
   12e00:	63 7c 00 0a 	shr s3, s3, 31
   12e04:	64 80 51 c0 	add_i s3, s4, s3
   12e08:	9a 80 01 07 	mull_i s4, s26, 96
   12e0c:	85 00 52 c0 	add_i s4, s5, s4
   12e10:	63 30 00 07 	mull_i s3, s3, 12
   12e14:	60 80 61 c0 	sub_i s3, s0, s3
   12e18:	00 04 00 05 	add_i s0, s0, 1
   12e1c:	01 00 00 88 	store_32 s0, (s1)
   12e20:	63 0c 00 0b 	shl s3, s3, 3
   12e24:	64 80 51 c0 	add_i s3, s4, s3
   12e28:	82 08 00 a4 	load_u16 s4, 2(s2)
   12e2c:	a2 00 00 a4 	load_u16 s5, (s2)
   12e30:	c2 18 00 a4 	load_u16 s6, 6(s2)
   12e34:	e2 10 00 a4 	load_u16 s7, 4(s2)
   12e38:	42 20 00 05 	add_i s2, s2, 8
   12e3c:	e3 10 00 86 	store_16 s7, 4(s3)
   12e40:	c3 18 00 86 	store_16 s6, 6(s3)
   12e44:	a3 00 00 86 	store_16 s5, (s3)
   12e48:	83 08 00 86 	store_16 s4, 2(s3)
   12e4c:	60 80 4c c1 	cmplt_i s3, s0, s25
   12e50:	03 fd ff f5 	bnz s3, -96 <GetPackets+0x418>
   12e54:	17 fe ff f9 	call -1956 <HGetPacket>
   12e58:	40 00 00 f2 	bz s0, 8 <GetPackets+0x488>
   12e5c:	48 ff ff f7 	b -736 <GetPackets+0x1a4>
   12e60:	fe b3 03 a8 	load_32 ra, 236(sp)
   12e64:	7e c3 03 a8 	load_32 s27, 240(sp)
   12e68:	5e d3 03 a8 	load_32 s26, 244(sp)
   12e6c:	3e e3 03 a8 	load_32 s25, 248(sp)
   12e70:	1e f3 03 a8 	load_32 s24, 252(sp)
   12e74:	de 03 04 05 	add_i sp, sp, 256
   12e78:	1f 00 00 f0 	ret

0000000000012e7c NetUpdate:
   12e7c:	de 03 fd 05 	add_i sp, sp, -192
   12e80:	1e f3 02 88 	store_32 s24, 188(sp)
   12e84:	3e e3 02 88 	store_32 s25, 184(sp)
   12e88:	5e d3 02 88 	store_32 s26, 180(sp)
   12e8c:	7e c3 02 88 	store_32 s27, 176(sp)
   12e90:	fe b3 02 88 	store_32 ra, 172(sp)
   12e94:	70 ec ff f9 	call -20032 <I_GetTime>
   12e98:	3a 04 00 4f 	movehi s1, 58
   12e9c:	21 20 6a 00 	or s1, s1, 6792
   12ea0:	01 03 00 a8 	load_32 s24, (s1)
   12ea4:	20 00 fc c0 	move s1, s24
   12ea8:	ec 06 01 f8 	call 269232 <__divsi3>
   12eac:	3a 04 00 4f 	movehi s1, 58
   12eb0:	41 c0 5d 00 	or s2, s1, 6000
   12eb4:	22 00 00 a8 	load_32 s1, (s2)
   12eb8:	02 00 00 88 	store_32 s0, (s2)
   12ebc:	20 80 60 c0 	sub_i s1, s0, s1
   12ec0:	61 04 00 14 	cmplt_i s3, s1, 1
   12ec4:	03 17 00 f4 	bnz s3, 736 <NetUpdate+0x328>
   12ec8:	1a 04 00 4f 	movehi s0, 58
   12ecc:	20 03 00 0f 	move s25, 0
   12ed0:	00 10 6a 00 	or s0, s0, 6788
   12ed4:	60 00 00 a8 	load_32 s3, (s0)
   12ed8:	83 80 20 c1 	cmpgt_i s4, s3, s1
   12edc:	84 00 00 f4 	bnz s4, 16 <NetUpdate+0x70>
   12ee0:	40 80 fc c0 	move s2, s25
   12ee4:	a4 00 00 f4 	bnz s4, 20 <NetUpdate+0x7c>
   12ee8:	03 00 00 f6 	b 12 <NetUpdate+0x78>
   12eec:	43 80 60 c0 	sub_i s2, s3, s1
   12ef0:	44 00 00 f4 	bnz s4, 8 <NetUpdate+0x7c>
   12ef4:	21 83 61 c0 	sub_i s25, s1, s3
   12ef8:	3a 04 00 4f 	movehi s1, 58
   12efc:	40 00 00 88 	store_32 s2, (s0)
   12f00:	7a 04 00 4f 	movehi s3, 58
   12f04:	21 c0 6d 00 	or s1, s1, 7024
   12f08:	43 80 5f 00 	or s2, s3, 6112
   12f0c:	01 00 00 a8 	load_32 s0, (s1)
   12f10:	3a 04 00 4f 	movehi s1, 58
   12f14:	5e 80 02 88 	store_32 s2, 160(sp)
   12f18:	42 00 00 a8 	load_32 s2, (s2)
   12f1c:	21 b0 7f 00 	or s1, s1, 8172
   12f20:	02 18 00 82 	store_8 s0, 6(s2)
   12f24:	01 00 00 a8 	load_32 s0, (s1)
   12f28:	20 00 fc c0 	move s1, s24
   12f2c:	cb 06 01 f8 	call 269100 <__divsi3>
   12f30:	39 04 00 14 	cmplt_i s1, s25, 1
   12f34:	3e 93 02 88 	store_32 s25, 164(sp)
   12f38:	1e a0 02 88 	store_32 s0, 168(sp)
   12f3c:	e1 03 00 f4 	bnz s1, 124 <NetUpdate+0x13c>
   12f40:	1a 04 00 4f 	movehi s0, 58
   12f44:	35 a8 2a 4f 	movehi s1, 87381
   12f48:	5a 04 00 4f 	movehi s2, 58
   12f4c:	40 03 00 0f 	move s26, 0
   12f50:	60 63 5f 00 	or s27, s0, 6104
   12f54:	21 af 2a 00 	or s25, s1, 2731
   12f58:	02 e3 5d 00 	or s24, s2, 6008
   12f5c:	aa ec ff f9 	call -19800 <I_StartTic>
   12f60:	33 f5 ff f9 	call -11060 <D_ProcessEvents>
   12f64:	1b 00 00 a8 	load_32 s0, (s27)
   12f68:	3e a0 02 a8 	load_32 s1, 168(sp)
   12f6c:	20 80 60 c0 	sub_i s1, s0, s1
   12f70:	21 10 00 12 	cmpgt_i s1, s1, 4
   12f74:	21 02 00 f4 	bnz s1, 68 <NetUpdate+0x13c>
   12f78:	20 80 fc c1 	mulh_i s1, s0, s25
   12f7c:	41 04 00 0a 	shr s2, s1, 1
   12f80:	21 7c 00 0a 	shr s1, s1, 31
   12f84:	22 80 50 c0 	add_i s1, s2, s1
   12f88:	21 30 00 07 	mull_i s1, s1, 12
   12f8c:	00 80 60 c0 	sub_i s0, s0, s1
   12f90:	00 0c 00 0b 	shl s0, s0, 3
   12f94:	18 00 50 c0 	add_i s0, s24, s0
   12f98:	a1 04 00 f8 	call 4740 <G_BuildTiccmd>
   12f9c:	1b 00 00 a8 	load_32 s0, (s27)
   12fa0:	5a 07 00 05 	add_i s26, s26, 1
   12fa4:	3e 90 02 a8 	load_32 s1, 164(sp)
   12fa8:	00 04 00 05 	add_i s0, s0, 1
   12fac:	1b 00 00 88 	store_32 s0, (s27)
   12fb0:	3a 80 40 c1 	cmplt_i s1, s26, s1
   12fb4:	41 fd ff f5 	bnz s1, -88 <NetUpdate+0xe0>
   12fb8:	13 04 00 4f 	movehi s0, 51
   12fbc:	00 40 45 00 	or s0, s0, 4432
   12fc0:	00 00 00 a8 	load_32 s0, (s0)
   12fc4:	20 0f 00 f4 	bnz s0, 484 <NetUpdate+0x32c>
   12fc8:	1a 04 00 4f 	movehi s0, 58
   12fcc:	00 e0 5b 00 	or s0, s0, 5880
   12fd0:	1e a0 02 88 	store_32 s0, 168(sp)
   12fd4:	20 00 00 a8 	load_32 s1, (s0)
   12fd8:	01 30 00 a6 	load_s16 s0, 12(s1)
   12fdc:	fe 80 02 a8 	load_32 s7, 160(sp)
   12fe0:	00 04 00 14 	cmplt_i s0, s0, 1
   12fe4:	00 0e 00 f4 	bnz s0, 448 <NetUpdate+0x328>
   12fe8:	1a 04 00 4f 	movehi s0, 58
   12fec:	5a 04 00 4f 	movehi s2, 58
   12ff0:	7a 04 00 4f 	movehi s3, 58
   12ff4:	00 50 66 00 	or s0, s0, 6548
   12ff8:	1e 90 02 88 	store_32 s0, 164(sp)
   12ffc:	02 90 69 00 	or s0, s2, 6756
   13000:	1e 60 02 88 	store_32 s0, 152(sp)
   13004:	03 60 5f 00 	or s0, s3, 6104
   13008:	1e 70 02 88 	store_32 s0, 156(sp)
   1300c:	02 00 00 4f 	movehi s0, 2
   13010:	5a 04 00 4f 	movehi s2, 58
   13014:	7a 04 00 4f 	movehi s3, 58
   13018:	00 b8 21 00 	or s0, s0, 2158
   1301c:	1e f0 01 88 	store_32 s0, 124(sp)
   13020:	02 90 68 00 	or s0, s2, 6692
   13024:	1e 50 02 88 	store_32 s0, 148(sp)
   13028:	03 90 65 00 	or s0, s3, 6500
   1302c:	1e 10 02 88 	store_32 s0, 132(sp)
   13030:	15 a8 2a 4f 	movehi s0, 87381
   13034:	5a 04 00 4f 	movehi s2, 58
   13038:	40 03 00 0f 	move s26, 0
   1303c:	00 af 2a 00 	or s24, s0, 2731
   13040:	22 e3 5d 00 	or s25, s2, 6008
   13044:	60 00 40 4f 	movehi s3, 131072
   13048:	7e 00 02 88 	store_32 s3, 128(sp)
   1304c:	5e 43 02 88 	store_32 s26, 144(sp)
   13050:	1e 90 02 a8 	load_32 s0, 164(sp)
   13054:	1a 09 00 0b 	shl s8, s26, 2
   13058:	00 00 54 c0 	add_i s0, s0, s8
   1305c:	00 00 00 a8 	load_32 s0, (s0)
   13060:	60 09 00 f2 	bz s0, 300 <NetUpdate+0x310>
   13064:	1e 60 02 a8 	load_32 s0, 152(sp)
   13068:	a0 00 54 c0 	add_i s5, s0, s8
   1306c:	65 03 00 a8 	load_32 s27, (s5)
   13070:	07 00 00 a8 	load_32 s0, (s7)
   13074:	60 17 00 82 	store_8 s27, 5(s0)
   13078:	5e 70 02 a8 	load_32 s2, 156(sp)
   1307c:	42 00 00 a8 	load_32 s2, (s2)
   13080:	62 80 6d c0 	sub_i s3, s2, s27
   13084:	60 1c 00 82 	store_8 s3, 7(s0)
   13088:	83 fc 03 01 	and s4, s3, 255
   1308c:	84 34 00 18 	cmplt_u s4, s4, 13
   13090:	e4 01 00 f4 	bnz s4, 60 <NetUpdate+0x250>
   13094:	1e f0 01 a8 	load_32 s0, 124(sp)
   13098:	1e 00 00 88 	store_32 s0, (sp)
   1309c:	1e 31 02 88 	store_32 s8, 140(sp)
   130a0:	be 20 02 88 	store_32 s5, 136(sp)
   130a4:	18 ec ff f9 	call -20384 <I_Error>
   130a8:	be 20 02 a8 	load_32 s5, 136(sp)
   130ac:	1e 31 02 a8 	load_32 s8, 140(sp)
   130b0:	fe 80 02 a8 	load_32 s7, 160(sp)
   130b4:	1e 70 02 a8 	load_32 s0, 156(sp)
   130b8:	40 00 00 a8 	load_32 s2, (s0)
   130bc:	1e a0 02 a8 	load_32 s0, 168(sp)
   130c0:	20 00 00 a8 	load_32 s1, (s0)
   130c4:	07 00 00 a8 	load_32 s0, (s7)
   130c8:	60 1c 00 a0 	load_u8 s3, 7(s0)
   130cc:	21 40 00 a6 	load_s16 s1, 16(s1)
   130d0:	22 80 60 c0 	sub_i s1, s2, s1
   130d4:	25 00 00 88 	store_32 s1, (s5)
   130d8:	43 fc 03 01 	and s2, s3, 255
   130dc:	82 03 00 f2 	bz s2, 112 <NetUpdate+0x2d0>
   130e0:	3e 40 02 a8 	load_32 s1, 144(sp)
   130e4:	41 80 5d c0 	add_i s2, s1, s27
   130e8:	c1 0c 00 0b 	shl s6, s1, 3
   130ec:	00 00 53 c0 	add_i s0, s0, s6
   130f0:	62 00 fc c1 	mulh_i s3, s2, s24
   130f4:	21 04 00 05 	add_i s1, s1, 1
   130f8:	83 04 00 0a 	shr s4, s3, 1
   130fc:	63 7c 00 0a 	shr s3, s3, 31
   13100:	64 80 51 c0 	add_i s3, s4, s3
   13104:	63 30 00 07 	mull_i s3, s3, 12
   13108:	42 80 61 c0 	sub_i s2, s2, s3
   1310c:	42 0c 00 0b 	shl s2, s2, 3
   13110:	59 00 51 c0 	add_i s2, s25, s2
   13114:	62 10 00 a4 	load_u16 s3, 4(s2)
   13118:	82 18 00 a4 	load_u16 s4, 6(s2)
   1311c:	a2 00 00 a4 	load_u16 s5, (s2)
   13120:	42 08 00 a4 	load_u16 s2, 2(s2)
   13124:	84 40 00 0b 	shl s4, s4, 16
   13128:	42 40 00 0b 	shl s2, s2, 16
   1312c:	64 80 01 c0 	or s3, s4, s3
   13130:	42 80 02 c0 	or s2, s2, s5
   13134:	40 20 00 88 	store_32 s2, 8(s0)
   13138:	60 30 00 88 	store_32 s3, 12(s0)
   1313c:	07 00 00 a8 	load_32 s0, (s7)
   13140:	40 1c 00 a0 	load_u8 s2, 7(s0)
   13144:	41 00 81 c1 	cmplt_u s2, s1, s2
   13148:	e2 fc ff f5 	bnz s2, -100 <NetUpdate+0x268>
   1314c:	3e 50 02 a8 	load_32 s1, 148(sp)
   13150:	21 00 54 c0 	add_i s1, s1, s8
   13154:	21 00 00 a8 	load_32 s1, (s1)
   13158:	01 01 00 f2 	bz s1, 32 <NetUpdate+0x2fc>
   1315c:	3e 10 02 a8 	load_32 s1, 132(sp)
   13160:	21 00 54 c0 	add_i s1, s1, s8
   13164:	21 00 00 a8 	load_32 s1, (s1)
   13168:	20 10 00 82 	store_8 s1, 4(s0)
   1316c:	00 00 fd c0 	move s0, s26
   13170:	3e 00 02 a8 	load_32 s1, 128(sp)
   13174:	04 00 00 f6 	b 16 <NetUpdate+0x308>
   13178:	3e 40 02 a8 	load_32 s1, 144(sp)
   1317c:	20 10 00 82 	store_8 s1, 4(s0)
   13180:	00 00 fd c0 	move s0, s26
   13184:	af fc ff f9 	call -3396 <HSendPacket>
   13188:	fe 80 02 a8 	load_32 s7, 160(sp)
   1318c:	1e a0 02 a8 	load_32 s0, 168(sp)
   13190:	5a 07 00 05 	add_i s26, s26, 1
   13194:	20 00 00 a8 	load_32 s1, (s0)
   13198:	01 30 00 a6 	load_s16 s0, 12(s1)
   1319c:	1a 00 40 c1 	cmplt_i s0, s26, s0
   131a0:	80 f5 ff f5 	bnz s0, -336 <NetUpdate+0x1d4>
   131a4:	0d fe ff f9 	call -1996 <GetPackets>
   131a8:	fe b3 02 a8 	load_32 ra, 172(sp)
   131ac:	7e c3 02 a8 	load_32 s27, 176(sp)
   131b0:	5e d3 02 a8 	load_32 s26, 180(sp)
   131b4:	3e e3 02 a8 	load_32 s25, 184(sp)
   131b8:	1e f3 02 a8 	load_32 s24, 188(sp)
   131bc:	de 03 03 05 	add_i sp, sp, 192
   131c0:	1f 00 00 f0 	ret

00000000000131c4 CheckAbort:
   131c4:	de 03 fe 05 	add_i sp, sp, -128
   131c8:	1e f3 01 88 	store_32 s24, 124(sp)
   131cc:	3e e3 01 88 	store_32 s25, 120(sp)
   131d0:	5e d3 01 88 	store_32 s26, 116(sp)
   131d4:	7e c3 01 88 	store_32 s27, 112(sp)
   131d8:	fe b3 01 88 	store_32 ra, 108(sp)
   131dc:	9e eb ff f9 	call -20872 <I_GetTime>
   131e0:	00 0b 00 05 	add_i s24, s0, 2
   131e4:	9c eb ff f9 	call -20880 <I_GetTime>
   131e8:	20 03 4c c1 	cmplt_i s25, s0, s24
   131ec:	06 ec ff f9 	call -20456 <I_StartTic>
   131f0:	b9 ff ff f5 	bnz s25, -12 <CheckAbort+0x20>
   131f4:	1a 04 00 4f 	movehi s0, 58
   131f8:	3a 04 00 4f 	movehi s1, 58
   131fc:	00 13 38 00 	or s24, s0, 3588
   13200:	21 03 28 00 	or s25, s1, 2560
   13204:	18 00 00 a8 	load_32 s0, (s24)
   13208:	39 00 00 a8 	load_32 s1, (s25)
   1320c:	40 80 00 c1 	cmpeq_i s2, s0, s1
   13210:	a2 02 00 f4 	bnz s2, 84 <CheckAbort+0xa0>
   13214:	5a 04 00 4f 	movehi s2, 58
   13218:	61 00 00 4f 	movehi s3, 1
   1321c:	42 13 28 00 	or s26, s2, 2564
   13220:	63 cb 0c 00 	or s27, s3, 818
   13224:	40 10 00 0b 	shl s2, s0, 4
   13228:	5a 00 51 c0 	add_i s2, s26, s2
   1322c:	62 00 00 a8 	load_32 s3, (s2)
   13230:	03 01 00 f4 	bnz s3, 32 <CheckAbort+0x8c>
   13234:	42 10 00 a8 	load_32 s2, 4(s2)
   13238:	42 6c 00 11 	cmpne_i s2, s2, 27
   1323c:	a2 00 00 f4 	bnz s2, 20 <CheckAbort+0x8c>
   13240:	7e 03 00 88 	store_32 s27, (sp)
   13244:	b0 eb ff f9 	call -20800 <I_Error>
   13248:	18 00 00 a8 	load_32 s0, (s24)
   1324c:	39 00 00 a8 	load_32 s1, (s25)
   13250:	00 04 00 05 	add_i s0, s0, 1
   13254:	00 fc 00 01 	and s0, s0, 63
   13258:	18 00 00 88 	store_32 s0, (s24)
   1325c:	40 80 10 c1 	cmpne_i s2, s0, s1
   13260:	22 fe ff f5 	bnz s2, -60 <CheckAbort+0x60>
   13264:	fe b3 01 a8 	load_32 ra, 108(sp)
   13268:	7e c3 01 a8 	load_32 s27, 112(sp)
   1326c:	5e d3 01 a8 	load_32 s26, 116(sp)
   13270:	3e e3 01 a8 	load_32 s25, 120(sp)
   13274:	1e f3 01 a8 	load_32 s24, 124(sp)
   13278:	de 03 02 05 	add_i sp, sp, 128
   1327c:	1f 00 00 f0 	ret

0000000000013280 D_ArbitrateNetStart:
   13280:	de 03 fd 05 	add_i sp, sp, -192
   13284:	1e f3 02 88 	store_32 s24, 188(sp)
   13288:	3e e3 02 88 	store_32 s25, 184(sp)
   1328c:	5e d3 02 88 	store_32 s26, 180(sp)
   13290:	7e c3 02 88 	store_32 s27, 176(sp)
   13294:	fe b3 02 88 	store_32 ra, 172(sp)
   13298:	1a 04 00 4f 	movehi s0, 58
   1329c:	00 07 00 0f 	move s24, 1
   132a0:	20 00 00 0f 	move s1, 0
   132a4:	00 b0 17 00 	or s0, s0, 1516
   132a8:	00 03 00 88 	store_32 s24, (s0)
   132ac:	1a 04 00 4f 	movehi s0, 58
   132b0:	3e 30 02 88 	store_32 s1, 140(sp)
   132b4:	3e 40 02 88 	store_32 s1, 144(sp)
   132b8:	40 e3 5b 00 	or s26, s0, 5880
   132bc:	3e 50 02 88 	store_32 s1, 148(sp)
   132c0:	3e 60 02 88 	store_32 s1, 152(sp)
   132c4:	3e 70 02 88 	store_32 s1, 156(sp)
   132c8:	3e 80 02 88 	store_32 s1, 160(sp)
   132cc:	3e 90 02 88 	store_32 s1, 164(sp)
   132d0:	3e a0 02 88 	store_32 s1, 168(sp)
   132d4:	1a 00 00 a8 	load_32 s0, (s26)
   132d8:	00 70 00 a4 	load_u16 s0, 28(s0)
   132dc:	40 0b 00 f2 	bz s0, 360 <D_ArbitrateNetStart+0x1c4>
   132e0:	01 00 00 4f 	movehi s0, 1
   132e4:	00 b0 75 00 	or s0, s0, 7532
   132e8:	99 fb 00 f8 	call 257636 <puts>
   132ec:	3a 04 00 4f 	movehi s1, 58
   132f0:	1a 04 00 4f 	movehi s0, 58
   132f4:	41 00 00 4f 	movehi s2, 1
   132f8:	01 03 28 00 	or s24, s1, 2560
   132fc:	3a 04 00 4f 	movehi s1, 58
   13300:	20 13 38 00 	or s25, s0, 3588
   13304:	1a 04 00 4f 	movehi s0, 58
   13308:	61 13 28 00 	or s27, s1, 2564
   1330c:	42 cb 0c 00 	or s26, s2, 818
   13310:	00 80 5f 00 	or s0, s0, 6112
   13314:	1e 00 02 88 	store_32 s0, 128(sp)
   13318:	1e 23 02 88 	store_32 s24, 136(sp)
   1331c:	5e 13 02 88 	store_32 s26, 132(sp)
   13320:	4d eb ff f9 	call -21196 <I_GetTime>
   13324:	00 0b 00 05 	add_i s24, s0, 2
   13328:	4b eb ff f9 	call -21204 <I_GetTime>
   1332c:	40 03 4c c1 	cmplt_i s26, s0, s24
   13330:	b5 eb ff f9 	call -20780 <I_StartTic>
   13334:	ba ff ff f5 	bnz s26, -12 <D_ArbitrateNetStart+0xa8>
   13338:	19 00 00 a8 	load_32 s0, (s25)
   1333c:	1e 23 02 a8 	load_32 s24, 136(sp)
   13340:	38 00 00 a8 	load_32 s1, (s24)
   13344:	5e 13 02 a8 	load_32 s26, 132(sp)
   13348:	40 80 00 c1 	cmpeq_i s2, s0, s1
   1334c:	22 02 00 f4 	bnz s2, 68 <D_ArbitrateNetStart+0x110>
   13350:	40 10 00 0b 	shl s2, s0, 4
   13354:	5b 00 51 c0 	add_i s2, s27, s2
   13358:	62 00 00 a8 	load_32 s3, (s2)
   1335c:	03 01 00 f4 	bnz s3, 32 <D_ArbitrateNetStart+0xfc>
   13360:	42 10 00 a8 	load_32 s2, 4(s2)
   13364:	42 6c 00 11 	cmpne_i s2, s2, 27
   13368:	a2 00 00 f4 	bnz s2, 20 <D_ArbitrateNetStart+0xfc>
   1336c:	5e 03 00 88 	store_32 s26, (sp)
   13370:	65 eb ff f9 	call -21100 <I_Error>
   13374:	19 00 00 a8 	load_32 s0, (s25)
   13378:	38 00 00 a8 	load_32 s1, (s24)
   1337c:	00 04 00 05 	add_i s0, s0, 1
   13380:	00 fc 00 01 	and s0, s0, 63
   13384:	19 00 00 88 	store_32 s0, (s25)
   13388:	40 80 10 c1 	cmpne_i s2, s0, s1
   1338c:	22 fe ff f5 	bnz s2, -60 <D_ArbitrateNetStart+0xd0>
   13390:	c8 fc ff f9 	call -3296 <HGetPacket>
   13394:	60 fc ff f3 	bz s0, -116 <D_ArbitrateNetStart+0xa0>
   13398:	1e 00 02 a8 	load_32 s0, 128(sp)
   1339c:	00 00 00 a8 	load_32 s0, (s0)
   133a0:	20 0c 00 a0 	load_u8 s1, 3(s0)
   133a4:	21 80 00 01 	and s1, s1, 32
   133a8:	c1 fb ff f3 	bz s1, -136 <D_ArbitrateNetStart+0xa0>
   133ac:	20 18 00 a0 	load_u8 s1, 6(s0)
   133b0:	21 b8 01 10 	cmpeq_i s1, s1, 110
   133b4:	e1 00 00 f4 	bnz s1, 28 <D_ArbitrateNetStart+0x150>
   133b8:	02 00 00 4f 	movehi s0, 2
   133bc:	00 64 22 00 	or s0, s0, 2201
   133c0:	1e 00 00 88 	store_32 s0, (sp)
   133c4:	50 eb ff f9 	call -21184 <I_Error>
   133c8:	1e 00 02 a8 	load_32 s0, 128(sp)
   133cc:	00 00 00 a8 	load_32 s0, (s0)
   133d0:	3a 04 00 4f 	movehi s1, 58
   133d4:	40 10 00 a0 	load_u8 s2, 4(s0)
   133d8:	7a 04 00 4f 	movehi s3, 58
   133dc:	21 90 48 00 	or s1, s1, 4644
   133e0:	82 3c 00 01 	and s4, s2, 15
   133e4:	81 00 00 88 	store_32 s4, (s1)
   133e8:	23 60 6e 00 	or s1, s3, 7064
   133ec:	82 14 00 0a 	shr s4, s2, 5
   133f0:	62 18 00 0a 	shr s3, s2, 6
   133f4:	61 00 00 88 	store_32 s3, (s1)
   133f8:	3a 04 00 4f 	movehi s1, 58
   133fc:	64 04 00 01 	and s3, s4, 1
   13400:	9a 04 00 4f 	movehi s4, 58
   13404:	21 30 48 00 	or s1, s1, 4620
   13408:	42 10 00 0a 	shr s2, s2, 4
   1340c:	84 60 48 00 	or s4, s4, 4632
   13410:	61 00 00 88 	store_32 s3, (s1)
   13414:	22 04 00 01 	and s1, s2, 1
   13418:	24 00 00 88 	store_32 s1, (s4)
   1341c:	3a 04 00 4f 	movehi s1, 58
   13420:	5a 04 00 4f 	movehi s2, 58
   13424:	00 14 00 a0 	load_u8 s0, 5(s0)
   13428:	21 80 48 00 	or s1, s1, 4640
   1342c:	42 70 48 00 	or s2, s2, 4636
   13430:	60 fc 00 01 	and s3, s0, 63
   13434:	61 00 00 88 	store_32 s3, (s1)
   13438:	00 18 00 0a 	shr s0, s0, 6
   1343c:	02 00 00 88 	store_32 s0, (s2)
   13440:	ec 00 00 f6 	b 944 <D_ArbitrateNetStart+0x570>
   13444:	00 00 00 4f 	movehi s0, 0
   13448:	3e 40 01 88 	store_32 s1, 80(sp)
   1344c:	00 98 69 00 	or s0, s0, 6758
   13450:	3f fb 00 f8 	call 257276 <puts>
   13454:	1a 04 00 4f 	movehi s0, 58
   13458:	3a 04 00 4f 	movehi s1, 58
   1345c:	5a 04 00 4f 	movehi s2, 58
   13460:	60 10 38 00 	or s3, s0, 3588
   13464:	01 00 28 00 	or s0, s1, 2560
   13468:	1e 90 01 88 	store_32 s0, 100(sp)
   1346c:	02 90 48 00 	or s0, s2, 4644
   13470:	1e 20 02 88 	store_32 s0, 136(sp)
   13474:	1a 04 00 4f 	movehi s0, 58
   13478:	3a 04 00 4f 	movehi s1, 58
   1347c:	5a 04 00 4f 	movehi s2, 58
   13480:	60 83 5f 00 	or s27, s0, 6112
   13484:	01 60 6e 00 	or s0, s1, 7064
   13488:	1e 10 02 88 	store_32 s0, 132(sp)
   1348c:	02 30 48 00 	or s0, s2, 4620
   13490:	1e 00 02 88 	store_32 s0, 128(sp)
   13494:	1a 04 00 4f 	movehi s0, 58
   13498:	3a 04 00 4f 	movehi s1, 58
   1349c:	5a 04 00 4f 	movehi s2, 58
   134a0:	00 60 48 00 	or s0, s0, 4632
   134a4:	1e f0 01 88 	store_32 s0, 124(sp)
   134a8:	01 70 48 00 	or s0, s1, 4636
   134ac:	1e e0 01 88 	store_32 s0, 120(sp)
   134b0:	02 80 48 00 	or s0, s2, 4640
   134b4:	1e d0 01 88 	store_32 s0, 116(sp)
   134b8:	00 b8 01 0f 	move s0, 110
   134bc:	1e c0 01 88 	store_32 s0, 112(sp)
   134c0:	00 00 20 4f 	movehi s0, 65536
   134c4:	1e b0 01 88 	store_32 s0, 108(sp)
   134c8:	1a 04 00 4f 	movehi s0, 58
   134cc:	21 00 00 4f 	movehi s1, 1
   134d0:	3e 33 02 05 	add_i s25, sp, 140
   134d4:	80 10 28 00 	or s4, s0, 2564
   134d8:	01 c8 0c 00 	or s0, s1, 818
   134dc:	1e 80 01 88 	store_32 s0, 96(sp)
   134e0:	1e 63 01 88 	store_32 s24, 88(sp)
   134e4:	7e 70 01 88 	store_32 s3, 92(sp)
   134e8:	3e 53 01 88 	store_32 s25, 84(sp)
   134ec:	9e a0 01 88 	store_32 s4, 104(sp)
   134f0:	d9 ea ff f9 	call -21660 <I_GetTime>
   134f4:	20 0b 00 05 	add_i s25, s0, 2
   134f8:	d7 ea ff f9 	call -21668 <I_GetTime>
   134fc:	00 83 4c c1 	cmplt_i s24, s0, s25
   13500:	41 eb ff f9 	call -21244 <I_StartTic>
   13504:	b8 ff ff f5 	bnz s24, -12 <D_ArbitrateNetStart+0x278>
   13508:	3e 73 01 a8 	load_32 s25, 92(sp)
   1350c:	19 00 00 a8 	load_32 s0, (s25)
   13510:	3e 90 01 a8 	load_32 s1, 100(sp)
   13514:	21 00 00 a8 	load_32 s1, (s1)
   13518:	1e 63 01 a8 	load_32 s24, 88(sp)
   1351c:	9e a0 01 a8 	load_32 s4, 104(sp)
   13520:	40 80 00 c1 	cmpeq_i s2, s0, s1
   13524:	82 02 00 f4 	bnz s2, 80 <D_ArbitrateNetStart+0x2f4>
   13528:	40 10 00 0b 	shl s2, s0, 4
   1352c:	44 00 51 c0 	add_i s2, s4, s2
   13530:	62 00 00 a8 	load_32 s3, (s2)
   13534:	63 01 00 f4 	bnz s3, 44 <D_ArbitrateNetStart+0x2e0>
   13538:	42 10 00 a8 	load_32 s2, 4(s2)
   1353c:	42 6c 00 11 	cmpne_i s2, s2, 27
   13540:	02 01 00 f4 	bnz s2, 32 <D_ArbitrateNetStart+0x2e0>
   13544:	1e 80 01 a8 	load_32 s0, 96(sp)
   13548:	1e 00 00 88 	store_32 s0, (sp)
   1354c:	ee ea ff f9 	call -21576 <I_Error>
   13550:	9e a0 01 a8 	load_32 s4, 104(sp)
   13554:	19 00 00 a8 	load_32 s0, (s25)
   13558:	3e 90 01 a8 	load_32 s1, 100(sp)
   1355c:	21 00 00 a8 	load_32 s1, (s1)
   13560:	00 04 00 05 	add_i s0, s0, 1
   13564:	00 fc 00 01 	and s0, s0, 63
   13568:	19 00 00 88 	store_32 s0, (s25)
   1356c:	40 80 10 c1 	cmpne_i s2, s0, s1
   13570:	c2 fd ff f5 	bnz s2, -72 <D_ArbitrateNetStart+0x2a8>
   13574:	1a 00 00 a8 	load_32 s0, (s26)
   13578:	00 30 00 a6 	load_s16 s0, 12(s0)
   1357c:	00 04 00 14 	cmplt_i s0, s0, 1
   13580:	e0 04 00 f4 	bnz s0, 156 <D_ArbitrateNetStart+0x39c>
   13584:	3e 43 01 a8 	load_32 s25, 80(sp)
   13588:	1e 20 02 a8 	load_32 s0, 136(sp)
   1358c:	20 00 00 a8 	load_32 s1, (s0)
   13590:	1b 00 00 a8 	load_32 s0, (s27)
   13594:	20 10 00 82 	store_8 s1, 4(s0)
   13598:	5e 10 02 a8 	load_32 s2, 132(sp)
   1359c:	42 00 00 a8 	load_32 s2, (s2)
   135a0:	82 00 00 f2 	bz s2, 16 <D_ArbitrateNetStart+0x330>
   135a4:	42 18 00 0b 	shl s2, s2, 6
   135a8:	22 80 00 c0 	or s1, s2, s1
   135ac:	20 10 00 82 	store_8 s1, 4(s0)
   135b0:	5e 00 02 a8 	load_32 s2, 128(sp)
   135b4:	42 00 00 a8 	load_32 s2, (s2)
   135b8:	62 00 00 f2 	bz s2, 12 <D_ArbitrateNetStart+0x344>
   135bc:	21 80 00 00 	or s1, s1, 32
   135c0:	20 10 00 82 	store_8 s1, 4(s0)
   135c4:	5e f0 01 a8 	load_32 s2, 124(sp)
   135c8:	42 00 00 a8 	load_32 s2, (s2)
   135cc:	62 00 00 f2 	bz s2, 12 <D_ArbitrateNetStart+0x358>
   135d0:	21 40 00 00 	or s1, s1, 16
   135d4:	20 10 00 82 	store_8 s1, 4(s0)
   135d8:	3e e0 01 a8 	load_32 s1, 120(sp)
   135dc:	21 00 00 a8 	load_32 s1, (s1)
   135e0:	5e d0 01 a8 	load_32 s2, 116(sp)
   135e4:	21 18 00 0b 	shl s1, s1, 6
   135e8:	42 00 00 a8 	load_32 s2, (s2)
   135ec:	21 00 51 c0 	add_i s1, s1, s2
   135f0:	20 14 00 82 	store_8 s1, 5(s0)
   135f4:	3e c0 01 a8 	load_32 s1, 112(sp)
   135f8:	20 18 00 86 	store_16 s1, 6(s0)
   135fc:	00 80 fc c0 	move s0, s25
   13600:	3e b0 01 a8 	load_32 s1, 108(sp)
   13604:	8f fb ff f9 	call -4548 <HSendPacket>
   13608:	1a 00 00 a8 	load_32 s0, (s26)
   1360c:	39 07 00 05 	add_i s25, s25, 1
   13610:	00 30 00 a6 	load_s16 s0, 12(s0)
   13614:	19 00 40 c1 	cmplt_i s0, s25, s0
   13618:	80 fb ff f5 	bnz s0, -144 <D_ArbitrateNetStart+0x308>
   1361c:	25 fc ff f9 	call -3948 <HGetPacket>
   13620:	3e 53 01 a8 	load_32 s25, 84(sp)
   13624:	80 0c 00 f2 	bz s0, 400 <D_ArbitrateNetStart+0x534>
   13628:	1b 00 00 a8 	load_32 s0, (s27)
   1362c:	00 18 00 a0 	load_u8 s0, 6(s0)
   13630:	00 fc 01 01 	and s0, s0, 127
   13634:	20 1c 00 16 	cmpgt_u s1, s0, 7
   13638:	81 00 00 f4 	bnz s1, 16 <D_ArbitrateNetStart+0x3c8>
   1363c:	00 08 00 0b 	shl s0, s0, 2
   13640:	19 00 50 c0 	add_i s0, s25, s0
   13644:	00 03 00 88 	store_32 s24, (s0)
   13648:	1a fc ff f9 	call -3992 <HGetPacket>
   1364c:	40 00 00 f4 	bnz s0, 8 <D_ArbitrateNetStart+0x3d4>
   13650:	59 00 00 f6 	b 356 <D_ArbitrateNetStart+0x534>
   13654:	1b 00 00 a8 	load_32 s0, (s27)
   13658:	00 18 00 a0 	load_u8 s0, 6(s0)
   1365c:	00 fc 01 01 	and s0, s0, 127
   13660:	20 1c 00 16 	cmpgt_u s1, s0, 7
   13664:	81 00 00 f4 	bnz s1, 16 <D_ArbitrateNetStart+0x3f4>
   13668:	00 08 00 0b 	shl s0, s0, 2
   1366c:	19 00 50 c0 	add_i s0, s25, s0
   13670:	00 03 00 88 	store_32 s24, (s0)
   13674:	0f fc ff f9 	call -4036 <HGetPacket>
   13678:	e0 09 00 f2 	bz s0, 316 <D_ArbitrateNetStart+0x534>
   1367c:	1b 00 00 a8 	load_32 s0, (s27)
   13680:	00 18 00 a0 	load_u8 s0, 6(s0)
   13684:	00 fc 01 01 	and s0, s0, 127
   13688:	20 1c 00 16 	cmpgt_u s1, s0, 7
   1368c:	81 00 00 f4 	bnz s1, 16 <D_ArbitrateNetStart+0x41c>
   13690:	00 08 00 0b 	shl s0, s0, 2
   13694:	19 00 50 c0 	add_i s0, s25, s0
   13698:	00 03 00 88 	store_32 s24, (s0)
   1369c:	05 fc ff f9 	call -4076 <HGetPacket>
   136a0:	a0 08 00 f2 	bz s0, 276 <D_ArbitrateNetStart+0x534>
   136a4:	1b 00 00 a8 	load_32 s0, (s27)
   136a8:	00 18 00 a0 	load_u8 s0, 6(s0)
   136ac:	00 fc 01 01 	and s0, s0, 127
   136b0:	20 1c 00 16 	cmpgt_u s1, s0, 7
   136b4:	81 00 00 f4 	bnz s1, 16 <D_ArbitrateNetStart+0x444>
   136b8:	00 08 00 0b 	shl s0, s0, 2
   136bc:	19 00 50 c0 	add_i s0, s25, s0
   136c0:	00 03 00 88 	store_32 s24, (s0)
   136c4:	fb fb ff f9 	call -4116 <HGetPacket>
   136c8:	60 07 00 f2 	bz s0, 236 <D_ArbitrateNetStart+0x534>
   136cc:	1b 00 00 a8 	load_32 s0, (s27)
   136d0:	00 18 00 a0 	load_u8 s0, 6(s0)
   136d4:	00 fc 01 01 	and s0, s0, 127
   136d8:	20 1c 00 16 	cmpgt_u s1, s0, 7
   136dc:	81 00 00 f4 	bnz s1, 16 <D_ArbitrateNetStart+0x46c>
   136e0:	00 08 00 0b 	shl s0, s0, 2
   136e4:	19 00 50 c0 	add_i s0, s25, s0
   136e8:	00 03 00 88 	store_32 s24, (s0)
   136ec:	f1 fb ff f9 	call -4156 <HGetPacket>
   136f0:	20 06 00 f2 	bz s0, 196 <D_ArbitrateNetStart+0x534>
   136f4:	1b 00 00 a8 	load_32 s0, (s27)
   136f8:	00 18 00 a0 	load_u8 s0, 6(s0)
   136fc:	00 fc 01 01 	and s0, s0, 127
   13700:	20 1c 00 16 	cmpgt_u s1, s0, 7
   13704:	81 00 00 f4 	bnz s1, 16 <D_ArbitrateNetStart+0x494>
   13708:	00 08 00 0b 	shl s0, s0, 2
   1370c:	19 00 50 c0 	add_i s0, s25, s0
   13710:	00 03 00 88 	store_32 s24, (s0)
   13714:	e7 fb ff f9 	call -4196 <HGetPacket>
   13718:	e0 04 00 f2 	bz s0, 156 <D_ArbitrateNetStart+0x534>
   1371c:	1b 00 00 a8 	load_32 s0, (s27)
   13720:	00 18 00 a0 	load_u8 s0, 6(s0)
   13724:	00 fc 01 01 	and s0, s0, 127
   13728:	20 1c 00 16 	cmpgt_u s1, s0, 7
   1372c:	81 00 00 f4 	bnz s1, 16 <D_ArbitrateNetStart+0x4bc>
   13730:	00 08 00 0b 	shl s0, s0, 2
   13734:	19 00 50 c0 	add_i s0, s25, s0
   13738:	00 03 00 88 	store_32 s24, (s0)
   1373c:	dd fb ff f9 	call -4236 <HGetPacket>
   13740:	a0 03 00 f2 	bz s0, 116 <D_ArbitrateNetStart+0x534>
   13744:	1b 00 00 a8 	load_32 s0, (s27)
   13748:	00 18 00 a0 	load_u8 s0, 6(s0)
   1374c:	00 fc 01 01 	and s0, s0, 127
   13750:	20 1c 00 16 	cmpgt_u s1, s0, 7
   13754:	81 00 00 f4 	bnz s1, 16 <D_ArbitrateNetStart+0x4e4>
   13758:	00 08 00 0b 	shl s0, s0, 2
   1375c:	19 00 50 c0 	add_i s0, s25, s0
   13760:	00 03 00 88 	store_32 s24, (s0)
   13764:	d3 fb ff f9 	call -4276 <HGetPacket>
   13768:	60 02 00 f2 	bz s0, 76 <D_ArbitrateNetStart+0x534>
   1376c:	1b 00 00 a8 	load_32 s0, (s27)
   13770:	00 18 00 a0 	load_u8 s0, 6(s0)
   13774:	00 fc 01 01 	and s0, s0, 127
   13778:	20 1c 00 16 	cmpgt_u s1, s0, 7
   1377c:	81 00 00 f4 	bnz s1, 16 <D_ArbitrateNetStart+0x50c>
   13780:	00 08 00 0b 	shl s0, s0, 2
   13784:	19 00 50 c0 	add_i s0, s25, s0
   13788:	00 03 00 88 	store_32 s24, (s0)
   1378c:	c9 fb ff f9 	call -4316 <HGetPacket>
   13790:	20 01 00 f2 	bz s0, 36 <D_ArbitrateNetStart+0x534>
   13794:	1b 00 00 a8 	load_32 s0, (s27)
   13798:	00 18 00 a0 	load_u8 s0, 6(s0)
   1379c:	00 fc 01 01 	and s0, s0, 127
   137a0:	20 1c 00 16 	cmpgt_u s1, s0, 7
   137a4:	81 00 00 f4 	bnz s1, 16 <D_ArbitrateNetStart+0x534>
   137a8:	00 08 00 0b 	shl s0, s0, 2
   137ac:	19 00 50 c0 	add_i s0, s25, s0
   137b0:	00 03 00 88 	store_32 s24, (s0)
   137b4:	1a 00 00 a8 	load_32 s0, (s26)
   137b8:	00 30 00 a6 	load_s16 s0, 12(s0)
   137bc:	7e 70 01 a8 	load_32 s3, 92(sp)
   137c0:	9e a0 01 a8 	load_32 s4, 104(sp)
   137c4:	20 08 00 14 	cmplt_i s1, s0, 2
   137c8:	41 01 00 f4 	bnz s1, 40 <D_ArbitrateNetStart+0x570>
   137cc:	20 00 fc c0 	move s1, s24
   137d0:	41 08 00 0b 	shl s2, s1, 2
   137d4:	59 00 51 c0 	add_i s2, s25, s2
   137d8:	21 04 00 05 	add_i s1, s1, 1
   137dc:	42 00 00 a8 	load_32 s2, (s2)
   137e0:	82 e8 ff f3 	bz s2, -752 <D_ArbitrateNetStart+0x270>
   137e4:	41 00 30 c1 	cmpge_i s2, s1, s0
   137e8:	42 00 00 f4 	bnz s2, 8 <D_ArbitrateNetStart+0x570>
   137ec:	f9 ff ff f7 	b -28 <D_ArbitrateNetStart+0x550>
   137f0:	fe b3 02 a8 	load_32 ra, 172(sp)
   137f4:	7e c3 02 a8 	load_32 s27, 176(sp)
   137f8:	5e d3 02 a8 	load_32 s26, 180(sp)
   137fc:	3e e3 02 a8 	load_32 s25, 184(sp)
   13800:	1e f3 02 a8 	load_32 s24, 188(sp)
   13804:	de 03 03 05 	add_i sp, sp, 192
   13808:	1f 00 00 f0 	ret

000000000001380c D_CheckNetGame:
   1380c:	de 03 fe 05 	add_i sp, sp, -128
   13810:	1e f3 01 88 	store_32 s24, 124(sp)
   13814:	3e e3 01 88 	store_32 s25, 120(sp)
   13818:	5e d3 01 88 	store_32 s26, 116(sp)
   1381c:	7e c3 01 88 	store_32 s27, 112(sp)
   13820:	fe b3 01 88 	store_32 ra, 108(sp)
   13824:	1a 04 00 4f 	movehi s0, 58
   13828:	3a 04 00 4f 	movehi s1, 58
   1382c:	20 03 00 0f 	move s25, 0
   13830:	00 53 66 00 	or s24, s0, 6548
   13834:	1a 04 00 4f 	movehi s0, 58
   13838:	21 90 68 00 	or s1, s1, 6692
   1383c:	38 73 00 88 	store_32 s25, 28(s24)
   13840:	00 90 65 00 	or s0, s0, 6500
   13844:	38 63 00 88 	store_32 s25, 24(s24)
   13848:	38 53 00 88 	store_32 s25, 20(s24)
   1384c:	38 43 00 88 	store_32 s25, 16(s24)
   13850:	38 33 00 88 	store_32 s25, 12(s24)
   13854:	38 23 00 88 	store_32 s25, 8(s24)
   13858:	38 13 00 88 	store_32 s25, 4(s24)
   1385c:	38 03 00 88 	store_32 s25, (s24)
   13860:	20 03 00 88 	store_32 s25, (s0)
   13864:	20 13 00 88 	store_32 s25, 4(s0)
   13868:	20 23 00 88 	store_32 s25, 8(s0)
   1386c:	20 33 00 88 	store_32 s25, 12(s0)
   13870:	20 43 00 88 	store_32 s25, 16(s0)
   13874:	20 53 00 88 	store_32 s25, 20(s0)
   13878:	20 63 00 88 	store_32 s25, 24(s0)
   1387c:	20 73 00 88 	store_32 s25, 28(s0)
   13880:	1a 04 00 4f 	movehi s0, 58
   13884:	21 03 00 88 	store_32 s25, (s1)
   13888:	21 13 00 88 	store_32 s25, 4(s1)
   1388c:	00 90 69 00 	or s0, s0, 6756
   13890:	21 23 00 88 	store_32 s25, 8(s1)
   13894:	21 33 00 88 	store_32 s25, 12(s1)
   13898:	21 43 00 88 	store_32 s25, 16(s1)
   1389c:	21 53 00 88 	store_32 s25, 20(s1)
   138a0:	21 63 00 88 	store_32 s25, 24(s1)
   138a4:	21 73 00 88 	store_32 s25, 28(s1)
   138a8:	20 73 00 88 	store_32 s25, 28(s0)
   138ac:	20 63 00 88 	store_32 s25, 24(s0)
   138b0:	20 53 00 88 	store_32 s25, 20(s0)
   138b4:	20 43 00 88 	store_32 s25, 16(s0)
   138b8:	20 33 00 88 	store_32 s25, 12(s0)
   138bc:	20 23 00 88 	store_32 s25, 8(s0)
   138c0:	20 13 00 88 	store_32 s25, 4(s0)
   138c4:	20 03 00 88 	store_32 s25, (s0)
   138c8:	77 eb ff f9 	call -21028 <I_InitNetwork>
   138cc:	1a 04 00 4f 	movehi s0, 58
   138d0:	42 34 12 4f 	movehi s2, 37282
   138d4:	60 e3 5b 00 	or s27, s0, 5880
   138d8:	42 e0 59 00 	or s2, s2, 5752
   138dc:	1b 00 00 a8 	load_32 s0, (s27)
   138e0:	20 00 00 a8 	load_32 s1, (s0)
   138e4:	21 00 01 c1 	cmpeq_i s1, s1, s2
   138e8:	c1 00 00 f4 	bnz s1, 24 <D_CheckNetGame+0xf4>
   138ec:	00 00 00 4f 	movehi s0, 0
   138f0:	00 68 49 00 	or s0, s0, 4698
   138f4:	1e 00 00 88 	store_32 s0, (sp)
   138f8:	03 ea ff f9 	call -22516 <I_Error>
   138fc:	1b 00 00 a8 	load_32 s0, (s27)
   13900:	3a 04 00 4f 	movehi s1, 58
   13904:	40 90 00 05 	add_i s2, s0, 36
   13908:	7b 04 00 4f 	movehi s3, 59
   1390c:	21 80 5f 00 	or s1, s1, 6112
   13910:	41 00 00 88 	store_32 s2, (s1)
   13914:	3a 04 00 4f 	movehi s1, 58
   13918:	5a 04 00 4f 	movehi s2, 58
   1391c:	00 70 00 a6 	load_s16 s0, 28(s0)
   13920:	21 50 6f 00 	or s1, s1, 7124
   13924:	42 c3 6d 00 	or s26, s2, 7024
   13928:	43 c0 01 00 	or s2, s3, 112
   1392c:	01 00 00 88 	store_32 s0, (s1)
   13930:	1a 00 00 88 	store_32 s0, (s26)
   13934:	02 00 00 a8 	load_32 s0, (s2)
   13938:	40 00 00 f2 	bz s0, 8 <D_CheckNetGame+0x134>
   1393c:	51 fe ff f9 	call -1724 <D_ArbitrateNetStart>
   13940:	1a 04 00 4f 	movehi s0, 58
   13944:	3a 04 00 4f 	movehi s1, 58
   13948:	5a 04 00 4f 	movehi s2, 58
   1394c:	7a 04 00 4f 	movehi s3, 58
   13950:	00 90 48 00 	or s0, s0, 4644
   13954:	21 60 6e 00 	or s1, s1, 7064
   13958:	42 80 48 00 	or s2, s2, 4640
   1395c:	63 70 48 00 	or s3, s3, 4636
   13960:	00 00 00 a8 	load_32 s0, (s0)
   13964:	21 00 00 a8 	load_32 s1, (s1)
   13968:	42 00 00 a8 	load_32 s2, (s2)
   1396c:	63 00 00 a8 	load_32 s3, (s3)
   13970:	7e 40 00 88 	store_32 s3, 16(sp)
   13974:	5e 30 00 88 	store_32 s2, 12(sp)
   13978:	42 00 00 4f 	movehi s2, 2
   1397c:	3e 20 00 88 	store_32 s1, 8(sp)
   13980:	1e 10 00 88 	store_32 s0, 4(sp)
   13984:	02 94 5e 00 	or s0, s2, 6053
   13988:	1e 00 00 88 	store_32 s0, (sp)
   1398c:	12 f9 00 f8 	call 255048 <printf>
   13990:	7b 03 00 a8 	load_32 s27, (s27)
   13994:	1a 04 00 4f 	movehi s0, 58
   13998:	00 20 6a 00 	or s0, s0, 6792
   1399c:	3b 38 00 a6 	load_s16 s1, 14(s27)
   139a0:	20 00 00 88 	store_32 s1, (s0)
   139a4:	00 30 00 0f 	move s0, 12
   139a8:	21 04 00 0b 	shl s1, s1, 1
   139ac:	2b 04 01 f8 	call 266412 <__divsi3>
   139b0:	20 08 00 12 	cmpgt_i s1, s0, 2
   139b4:	41 00 00 f4 	bnz s1, 8 <D_CheckNetGame+0x1b0>
   139b8:	00 08 00 0f 	move s0, 2
   139bc:	3a 04 00 4f 	movehi s1, 58
   139c0:	00 fc ff 05 	add_i s0, s0, -1
   139c4:	21 70 5f 00 	or s1, s1, 6108
   139c8:	01 00 00 88 	store_32 s0, (s1)
   139cc:	1b 78 00 a6 	load_s16 s0, 30(s27)
   139d0:	20 04 00 14 	cmplt_i s1, s0, 1
   139d4:	81 01 00 f4 	bnz s1, 48 <D_CheckNetGame+0x1f8>
   139d8:	1b 04 00 4f 	movehi s0, 59
   139dc:	20 00 00 0f 	move s1, 0
   139e0:	60 04 00 0f 	move s3, 1
   139e4:	40 00 02 00 	or s2, s0, 128
   139e8:	01 08 00 0b 	shl s0, s1, 2
   139ec:	02 00 50 c0 	add_i s0, s2, s0
   139f0:	21 04 00 05 	add_i s1, s1, 1
   139f4:	60 00 00 88 	store_32 s3, (s0)
   139f8:	1b 78 00 a6 	load_s16 s0, 30(s27)
   139fc:	81 00 40 c1 	cmplt_i s4, s1, s0
   13a00:	44 ff ff f5 	bnz s4, -24 <D_CheckNetGame+0x1dc>
   13a04:	3b 30 00 a6 	load_s16 s1, 12(s27)
   13a08:	41 04 00 14 	cmplt_i s2, s1, 1
   13a0c:	42 01 00 f4 	bnz s2, 40 <D_CheckNetGame+0x228>
   13a10:	00 04 00 0f 	move s0, 1
   13a14:	39 08 00 0b 	shl s1, s25, 2
   13a18:	38 80 50 c0 	add_i s1, s24, s1
   13a1c:	39 07 00 05 	add_i s25, s25, 1
   13a20:	01 00 00 88 	store_32 s0, (s1)
   13a24:	3b 30 00 a6 	load_s16 s1, 12(s27)
   13a28:	59 80 40 c1 	cmplt_i s2, s25, s1
   13a2c:	42 ff ff f5 	bnz s2, -24 <D_CheckNetGame+0x208>
   13a30:	1b 78 00 a6 	load_s16 s0, 30(s27)
   13a34:	5a 00 00 a8 	load_32 s2, (s26)
   13a38:	00 00 e0 c1 	sext_16 s0, s0
   13a3c:	3e 30 00 88 	store_32 s1, 12(sp)
   13a40:	22 00 00 4f 	movehi s1, 2
   13a44:	1e 20 00 88 	store_32 s0, 8(sp)
   13a48:	42 04 00 05 	add_i s2, s2, 1
   13a4c:	5e 10 00 88 	store_32 s2, 4(sp)
   13a50:	01 fc 40 00 	or s0, s1, 4159
   13a54:	1e 00 00 88 	store_32 s0, (sp)
   13a58:	df f8 00 f8 	call 254844 <printf>
   13a5c:	fe b3 01 a8 	load_32 ra, 108(sp)
   13a60:	7e c3 01 a8 	load_32 s27, 112(sp)
   13a64:	5e d3 01 a8 	load_32 s26, 116(sp)
   13a68:	3e e3 01 a8 	load_32 s25, 120(sp)
   13a6c:	1e f3 01 a8 	load_32 s24, 124(sp)
   13a70:	de 03 02 05 	add_i sp, sp, 128
   13a74:	1f 00 00 f0 	ret

0000000000013a78 D_QuitNetGame:
   13a78:	de 03 ff 05 	add_i sp, sp, -64
   13a7c:	1e f3 00 88 	store_32 s24, 60(sp)
   13a80:	3e e3 00 88 	store_32 s25, 56(sp)
   13a84:	5e d3 00 88 	store_32 s26, 52(sp)
   13a88:	7e c3 00 88 	store_32 s27, 48(sp)
   13a8c:	fe b3 00 88 	store_32 ra, 44(sp)
   13a90:	1a 04 00 4f 	movehi s0, 58
   13a94:	00 c0 27 00 	or s0, s0, 2544
   13a98:	00 00 00 a8 	load_32 s0, (s0)
   13a9c:	40 00 00 f4 	bnz s0, 8 <D_QuitNetGame+0x2c>
   13aa0:	13 00 00 f6 	b 76 <D_QuitNetGame+0x74>
   13aa4:	1b 04 00 4f 	movehi s0, 59
   13aa8:	3a 04 00 4f 	movehi s1, 58
   13aac:	5a 04 00 4f 	movehi s2, 58
   13ab0:	00 c0 01 00 	or s0, s0, 112
   13ab4:	21 c0 6d 00 	or s1, s1, 7024
   13ab8:	82 30 6f 00 	or s4, s2, 7116
   13abc:	60 00 00 a8 	load_32 s3, (s0)
   13ac0:	1b 04 00 4f 	movehi s0, 59
   13ac4:	00 20 19 00 	or s0, s0, 1608
   13ac8:	40 00 00 a8 	load_32 s2, (s0)
   13acc:	01 00 00 a8 	load_32 s0, (s1)
   13ad0:	24 00 00 a8 	load_32 s1, (s4)
   13ad4:	23 0d 00 f2 	bz s3, 420 <D_QuitNetGame+0x200>
   13ad8:	02 0d 00 f2 	bz s2, 416 <D_QuitNetGame+0x200>
   13adc:	40 fc ff 10 	cmpeq_i s2, s0, -1
   13ae0:	c2 0c 00 f4 	bnz s2, 408 <D_QuitNetGame+0x200>
   13ae4:	a1 0c 00 f4 	bnz s1, 404 <D_QuitNetGame+0x200>
   13ae8:	04 00 00 f6 	b 16 <D_QuitNetGame+0x80>
   13aec:	1a 04 00 4f 	movehi s0, 58
   13af0:	00 c0 6d 00 	or s0, s0, 7024
   13af4:	00 00 00 a8 	load_32 s0, (s0)
   13af8:	3a 04 00 4f 	movehi s1, 58
   13afc:	5a 04 00 4f 	movehi s2, 58
   13b00:	21 80 5f 00 	or s1, s1, 6112
   13b04:	42 e3 5b 00 	or s26, s2, 5880
   13b08:	21 00 00 a8 	load_32 s1, (s1)
   13b0c:	01 18 00 82 	store_8 s0, 6(s1)
   13b10:	00 00 00 0f 	move s0, 0
   13b14:	01 1c 00 82 	store_8 s0, 7(s1)
   13b18:	1a 00 00 a8 	load_32 s0, (s26)
   13b1c:	20 30 00 a6 	load_s16 s1, 12(s0)
   13b20:	21 08 00 14 	cmplt_i s1, s1, 2
   13b24:	21 02 00 f4 	bnz s1, 68 <D_QuitNetGame+0xf0>
   13b28:	3a 04 00 4f 	movehi s1, 58
   13b2c:	00 07 00 0f 	move s24, 1
   13b30:	20 03 80 4f 	movehi s25, 262144
   13b34:	61 53 66 00 	or s27, s1, 6548
   13b38:	38 08 00 0b 	shl s1, s24, 2
   13b3c:	3b 80 50 c0 	add_i s1, s27, s1
   13b40:	21 00 00 a8 	load_32 s1, (s1)
   13b44:	a1 00 00 f2 	bz s1, 20 <D_QuitNetGame+0xe0>
   13b48:	00 00 fc c0 	move s0, s24
   13b4c:	20 80 fc c0 	move s1, s25
   13b50:	3c fa ff f9 	call -5904 <HSendPacket>
   13b54:	1a 00 00 a8 	load_32 s0, (s26)
   13b58:	20 30 00 a6 	load_s16 s1, 12(s0)
   13b5c:	18 07 00 05 	add_i s24, s24, 1
   13b60:	38 80 40 c1 	cmplt_i s1, s24, s1
   13b64:	a1 fe ff f5 	bnz s1, -44 <D_QuitNetGame+0xc0>
   13b68:	00 07 00 0f 	move s24, 1
   13b6c:	00 00 fc c0 	move s0, s24
   13b70:	52 e9 ff f9 	call -23224 <I_WaitVBL>
   13b74:	1a 00 00 a8 	load_32 s0, (s26)
   13b78:	20 30 00 a6 	load_s16 s1, 12(s0)
   13b7c:	21 08 00 14 	cmplt_i s1, s1, 2
   13b80:	01 02 00 f4 	bnz s1, 64 <D_QuitNetGame+0x148>
   13b84:	3a 04 00 4f 	movehi s1, 58
   13b88:	20 03 80 4f 	movehi s25, 262144
   13b8c:	61 53 66 00 	or s27, s1, 6548
   13b90:	38 08 00 0b 	shl s1, s24, 2
   13b94:	3b 80 50 c0 	add_i s1, s27, s1
   13b98:	21 00 00 a8 	load_32 s1, (s1)
   13b9c:	a1 00 00 f2 	bz s1, 20 <D_QuitNetGame+0x138>
   13ba0:	00 00 fc c0 	move s0, s24
   13ba4:	20 80 fc c0 	move s1, s25
   13ba8:	26 fa ff f9 	call -5992 <HSendPacket>
   13bac:	1a 00 00 a8 	load_32 s0, (s26)
   13bb0:	20 30 00 a6 	load_s16 s1, 12(s0)
   13bb4:	18 07 00 05 	add_i s24, s24, 1
   13bb8:	38 80 40 c1 	cmplt_i s1, s24, s1
   13bbc:	a1 fe ff f5 	bnz s1, -44 <D_QuitNetGame+0x118>
   13bc0:	00 07 00 0f 	move s24, 1
   13bc4:	00 00 fc c0 	move s0, s24
   13bc8:	3c e9 ff f9 	call -23312 <I_WaitVBL>
   13bcc:	1a 00 00 a8 	load_32 s0, (s26)
   13bd0:	20 30 00 a6 	load_s16 s1, 12(s0)
   13bd4:	21 08 00 14 	cmplt_i s1, s1, 2
   13bd8:	01 02 00 f4 	bnz s1, 64 <D_QuitNetGame+0x1a0>
   13bdc:	3a 04 00 4f 	movehi s1, 58
   13be0:	20 03 80 4f 	movehi s25, 262144
   13be4:	61 53 66 00 	or s27, s1, 6548
   13be8:	38 08 00 0b 	shl s1, s24, 2
   13bec:	3b 80 50 c0 	add_i s1, s27, s1
   13bf0:	21 00 00 a8 	load_32 s1, (s1)
   13bf4:	a1 00 00 f2 	bz s1, 20 <D_QuitNetGame+0x190>
   13bf8:	00 00 fc c0 	move s0, s24
   13bfc:	20 80 fc c0 	move s1, s25
   13c00:	10 fa ff f9 	call -6080 <HSendPacket>
   13c04:	1a 00 00 a8 	load_32 s0, (s26)
   13c08:	20 30 00 a6 	load_s16 s1, 12(s0)
   13c0c:	18 07 00 05 	add_i s24, s24, 1
   13c10:	38 80 40 c1 	cmplt_i s1, s24, s1
   13c14:	a1 fe ff f5 	bnz s1, -44 <D_QuitNetGame+0x170>
   13c18:	00 07 00 0f 	move s24, 1
   13c1c:	00 00 fc c0 	move s0, s24
   13c20:	26 e9 ff f9 	call -23400 <I_WaitVBL>
   13c24:	1a 00 00 a8 	load_32 s0, (s26)
   13c28:	20 30 00 a6 	load_s16 s1, 12(s0)
   13c2c:	21 08 00 14 	cmplt_i s1, s1, 2
   13c30:	01 02 00 f4 	bnz s1, 64 <D_QuitNetGame+0x1f8>
   13c34:	3a 04 00 4f 	movehi s1, 58
   13c38:	20 03 80 4f 	movehi s25, 262144
   13c3c:	61 53 66 00 	or s27, s1, 6548
   13c40:	38 08 00 0b 	shl s1, s24, 2
   13c44:	3b 80 50 c0 	add_i s1, s27, s1
   13c48:	21 00 00 a8 	load_32 s1, (s1)
   13c4c:	a1 00 00 f2 	bz s1, 20 <D_QuitNetGame+0x1e8>
   13c50:	00 00 fc c0 	move s0, s24
   13c54:	20 80 fc c0 	move s1, s25
   13c58:	fa f9 ff f9 	call -6168 <HSendPacket>
   13c5c:	1a 00 00 a8 	load_32 s0, (s26)
   13c60:	20 30 00 a6 	load_s16 s1, 12(s0)
   13c64:	18 07 00 05 	add_i s24, s24, 1
   13c68:	38 80 40 c1 	cmplt_i s1, s24, s1
   13c6c:	a1 fe ff f5 	bnz s1, -44 <D_QuitNetGame+0x1c8>
   13c70:	00 04 00 0f 	move s0, 1
   13c74:	11 e9 ff f9 	call -23484 <I_WaitVBL>
   13c78:	fe b3 00 a8 	load_32 ra, 44(sp)
   13c7c:	7e c3 00 a8 	load_32 s27, 48(sp)
   13c80:	5e d3 00 a8 	load_32 s26, 52(sp)
   13c84:	3e e3 00 a8 	load_32 s25, 56(sp)
   13c88:	1e f3 00 a8 	load_32 s24, 60(sp)
   13c8c:	de 03 01 05 	add_i sp, sp, 64
   13c90:	1f 00 00 f0 	ret

0000000000013c94 TryRunTics:
   13c94:	de 03 fe 05 	add_i sp, sp, -128
   13c98:	1e f3 01 88 	store_32 s24, 124(sp)
   13c9c:	3e e3 01 88 	store_32 s25, 120(sp)
   13ca0:	5e d3 01 88 	store_32 s26, 116(sp)
   13ca4:	7e c3 01 88 	store_32 s27, 112(sp)
   13ca8:	fe b3 01 88 	store_32 ra, 108(sp)
   13cac:	ea e8 ff f9 	call -23640 <I_GetTime>
   13cb0:	3a 04 00 4f 	movehi s1, 58
   13cb4:	21 20 6a 00 	or s1, s1, 6792
   13cb8:	3e 90 01 88 	store_32 s1, 100(sp)
   13cbc:	21 00 00 a8 	load_32 s1, (s1)
   13cc0:	66 03 01 f8 	call 265624 <__divsi3>
   13cc4:	20 0c 00 4f 	movehi s1, 96
   13cc8:	21 e0 1b 00 	or s1, s1, 1784
   13ccc:	41 00 00 a8 	load_32 s2, (s1)
   13cd0:	1e 70 01 88 	store_32 s0, 92(sp)
   13cd4:	01 00 00 88 	store_32 s0, (s1)
   13cd8:	20 03 61 c0 	sub_i s25, s0, s2
   13cdc:	68 fc ff f9 	call -3680 <NetUpdate>
   13ce0:	1a 04 00 4f 	movehi s0, 58
   13ce4:	7f ff 7f 4f 	movehi s27, 262143
   13ce8:	00 e0 5b 00 	or s0, s0, 5880
   13cec:	1e 60 01 88 	store_32 s0, 88(sp)
   13cf0:	00 00 00 a8 	load_32 s0, (s0)
   13cf4:	00 30 00 a6 	load_s16 s0, 12(s0)
   13cf8:	20 04 00 14 	cmplt_i s1, s0, 1
   13cfc:	e1 02 00 f4 	bnz s1, 92 <TryRunTics+0xc4>
   13d00:	5a 04 00 4f 	movehi s2, 58
   13d04:	7a 04 00 4f 	movehi s3, 58
   13d08:	20 00 00 0f 	move s1, 0
   13d0c:	42 50 66 00 	or s2, s2, 6548
   13d10:	63 90 65 00 	or s3, s3, 6500
   13d14:	9b fc 7f 00 	or s4, s27, 8191
   13d18:	9e a0 01 88 	store_32 s4, 104(sp)
   13d1c:	81 08 00 0b 	shl s4, s1, 2
   13d20:	a2 00 52 c0 	add_i s5, s2, s4
   13d24:	a5 00 00 a8 	load_32 s5, (s5)
   13d28:	05 01 00 f2 	bz s5, 32 <TryRunTics+0xb4>
   13d2c:	83 00 52 c0 	add_i s4, s3, s4
   13d30:	84 00 00 a8 	load_32 s4, (s4)
   13d34:	de a0 01 a8 	load_32 s6, 104(sp)
   13d38:	a4 00 43 c1 	cmplt_i s5, s4, s6
   13d3c:	45 00 00 f4 	bnz s5, 8 <TryRunTics+0xb0>
   13d40:	80 00 f3 c0 	move s4, s6
   13d44:	9e a0 01 88 	store_32 s4, 104(sp)
   13d48:	21 04 00 05 	add_i s1, s1, 1
   13d4c:	81 00 40 c1 	cmplt_i s4, s1, s0
   13d50:	64 fe ff f5 	bnz s4, -52 <TryRunTics+0x88>
   13d54:	03 00 00 f6 	b 12 <TryRunTics+0xcc>
   13d58:	1b fc 7f 00 	or s0, s27, 8191
   13d5c:	1e a0 01 88 	store_32 s0, 104(sp)
   13d60:	1a 04 00 4f 	movehi s0, 58
   13d64:	00 b0 7f 00 	or s0, s0, 8172
   13d68:	1e 80 01 88 	store_32 s0, 96(sp)
   13d6c:	00 00 00 a8 	load_32 s0, (s0)
   13d70:	3e 90 01 a8 	load_32 s1, 100(sp)
   13d74:	21 00 00 a8 	load_32 s1, (s1)
   13d78:	38 03 01 f8 	call 265440 <__divsi3>
   13d7c:	3e a0 01 a8 	load_32 s1, 104(sp)
   13d80:	40 83 fc c0 	move s26, s25
   13d84:	01 00 60 c0 	sub_i s0, s1, s0
   13d88:	59 00 40 c1 	cmplt_i s2, s25, s0
   13d8c:	20 fc ff 05 	add_i s1, s0, -1
   13d90:	42 00 00 f4 	bnz s2, 8 <TryRunTics+0x104>
   13d94:	22 00 00 f6 	b 136 <TryRunTics+0x188>
   13d98:	39 80 40 c1 	cmplt_i s1, s25, s1
   13d9c:	81 04 00 f4 	bnz s1, 144 <TryRunTics+0x198>
   13da0:	3a 04 00 12 	cmpgt_i s1, s26, 1
   13da4:	41 00 00 f4 	bnz s1, 8 <TryRunTics+0x118>
   13da8:	40 07 00 0f 	move s26, 1
   13dac:	3a 04 00 4f 	movehi s1, 58
   13db0:	5a 04 00 4f 	movehi s2, 58
   13db4:	01 33 5d 00 	or s24, s1, 5964
   13db8:	42 c0 27 00 	or s2, s2, 2544
   13dbc:	38 00 00 a8 	load_32 s1, (s24)
   13dc0:	21 04 00 05 	add_i s1, s1, 1
   13dc4:	38 00 00 88 	store_32 s1, (s24)
   13dc8:	22 00 00 a8 	load_32 s1, (s2)
   13dcc:	21 01 00 f2 	bz s1, 36 <TryRunTics+0x15c>
   13dd0:	5e 43 00 88 	store_32 s26, 16(sp)
   13dd4:	1e 30 00 88 	store_32 s0, 12(sp)
   13dd8:	02 00 00 4f 	movehi s0, 2
   13ddc:	3e 23 00 88 	store_32 s25, 8(sp)
   13de0:	3e 00 00 88 	store_32 s1, (sp)
   13de4:	00 24 23 00 	or s0, s0, 2249
   13de8:	1e 10 00 88 	store_32 s0, 4(sp)
   13dec:	d4 f9 00 f8 	call 255824 <fprintf>
   13df0:	1a 04 00 4f 	movehi s0, 58
   13df4:	00 30 6f 00 	or s0, s0, 7116
   13df8:	00 00 00 a8 	load_32 s0, (s0)
   13dfc:	e0 09 00 f4 	bnz s0, 316 <TryRunTics+0x2a4>
   13e00:	1b 04 00 4f 	movehi s0, 59
   13e04:	00 00 02 00 	or s0, s0, 128
   13e08:	20 00 00 a8 	load_32 s1, (s0)
   13e0c:	41 00 00 f4 	bnz s1, 8 <TryRunTics+0x180>
   13e10:	0b 00 00 f6 	b 44 <TryRunTics+0x1a8>
   13e14:	00 00 00 0f 	move s0, 0
   13e18:	18 00 00 f6 	b 96 <TryRunTics+0x1e4>
   13e1c:	40 03 f0 c0 	move s26, s0
   13e20:	39 80 40 c1 	cmplt_i s1, s25, s1
   13e24:	41 00 00 f4 	bnz s1, 8 <TryRunTics+0x198>
   13e28:	de ff ff f7 	b -136 <TryRunTics+0x10c>
   13e2c:	59 07 00 05 	add_i s26, s25, 1
   13e30:	3a 04 00 12 	cmpgt_i s1, s26, 1
   13e34:	c1 fb ff f5 	bnz s1, -136 <TryRunTics+0x118>
   13e38:	dc ff ff f7 	b -144 <TryRunTics+0x114>
   13e3c:	20 10 00 a8 	load_32 s1, 4(s0)
   13e40:	61 00 00 f2 	bz s1, 12 <TryRunTics+0x1b8>
   13e44:	00 04 00 0f 	move s0, 1
   13e48:	0c 00 00 f6 	b 48 <TryRunTics+0x1e4>
   13e4c:	20 20 00 a8 	load_32 s1, 8(s0)
   13e50:	41 00 00 f4 	bnz s1, 8 <TryRunTics+0x1c4>
   13e54:	03 00 00 f6 	b 12 <TryRunTics+0x1cc>
   13e58:	00 08 00 0f 	move s0, 2
   13e5c:	07 00 00 f6 	b 28 <TryRunTics+0x1e4>
   13e60:	00 30 00 a8 	load_32 s0, 12(s0)
   13e64:	00 00 00 10 	cmpeq_i s0, s0, 0
   13e68:	60 00 00 f4 	bnz s0, 12 <TryRunTics+0x1e0>
   13e6c:	00 0c 00 0f 	move s0, 3
   13e70:	02 00 00 f6 	b 8 <TryRunTics+0x1e4>
   13e74:	00 10 00 0f 	move s0, 4
   13e78:	3a 04 00 4f 	movehi s1, 58
   13e7c:	21 c0 6d 00 	or s1, s1, 7024
   13e80:	21 00 00 a8 	load_32 s1, (s1)
   13e84:	21 00 00 c1 	cmpeq_i s1, s1, s0
   13e88:	81 05 00 f4 	bnz s1, 176 <TryRunTics+0x2a4>
   13e8c:	3a 04 00 4f 	movehi s1, 58
   13e90:	5a 04 00 4f 	movehi s2, 58
   13e94:	00 08 00 0b 	shl s0, s0, 2
   13e98:	21 10 66 00 	or s1, s1, 6532
   13e9c:	42 90 65 00 	or s2, s2, 6500
   13ea0:	21 00 50 c0 	add_i s1, s1, s0
   13ea4:	02 00 00 a8 	load_32 s0, (s2)
   13ea8:	21 00 00 a8 	load_32 s1, (s1)
   13eac:	21 08 00 0b 	shl s1, s1, 2
   13eb0:	22 80 50 c0 	add_i s1, s2, s1
   13eb4:	21 00 00 a8 	load_32 s1, (s1)
   13eb8:	40 80 20 c1 	cmpgt_i s2, s0, s1
   13ebc:	c2 00 00 f4 	bnz s2, 24 <TryRunTics+0x240>
   13ec0:	5a 04 00 4f 	movehi s2, 58
   13ec4:	42 c0 5d 00 	or s2, s2, 6000
   13ec8:	62 00 00 a8 	load_32 s3, (s2)
   13ecc:	63 fc ff 05 	add_i s3, s3, -1
   13ed0:	62 00 00 88 	store_32 s3, (s2)
   13ed4:	5a 04 00 4f 	movehi s2, 58
   13ed8:	ba 04 00 4f 	movehi s5, 58
   13edc:	42 d0 66 00 	or s2, s2, 6580
   13ee0:	a5 40 5d 00 	or s5, s5, 5968
   13ee4:	62 00 00 a8 	load_32 s3, (s2)
   13ee8:	98 00 00 a8 	load_32 s4, (s24)
   13eec:	23 80 20 c1 	cmpgt_i s1, s3, s1
   13ef0:	84 0c 00 01 	and s4, s4, 3
   13ef4:	21 04 00 01 	and s1, s1, 1
   13ef8:	64 08 00 0b 	shl s3, s4, 2
   13efc:	65 80 51 c0 	add_i s3, s5, s3
   13f00:	23 00 00 88 	store_32 s1, (s3)
   13f04:	02 00 00 88 	store_32 s0, (s2)
   13f08:	65 00 00 a8 	load_32 s3, (s5)
   13f0c:	45 10 00 a8 	load_32 s2, 4(s5)
   13f10:	25 20 00 a8 	load_32 s1, 8(s5)
   13f14:	05 30 00 a8 	load_32 s0, 12(s5)
   13f18:	03 01 00 f2 	bz s3, 32 <TryRunTics+0x2a4>
   13f1c:	e2 00 00 f2 	bz s2, 28 <TryRunTics+0x2a4>
   13f20:	c1 00 00 f2 	bz s1, 24 <TryRunTics+0x2a4>
   13f24:	a0 00 00 f2 	bz s0, 20 <TryRunTics+0x2a4>
   13f28:	1a 04 00 4f 	movehi s0, 58
   13f2c:	20 04 00 0f 	move s1, 1
   13f30:	00 10 6a 00 	or s0, s0, 6788
   13f34:	20 00 00 88 	store_32 s1, (s0)
   13f38:	5e 33 01 88 	store_32 s26, 76(sp)
   13f3c:	5a 04 00 4f 	movehi s2, 58
   13f40:	1e 90 01 a8 	load_32 s0, 100(sp)
   13f44:	5b ff 7f 00 	or s26, s27, 8191
   13f48:	22 00 00 4f 	movehi s1, 2
   13f4c:	02 93 65 00 	or s24, s2, 6500
   13f50:	20 03 00 a8 	load_32 s25, (s0)
   13f54:	00 00 00 0f 	move s0, 0
   13f58:	1e 50 01 88 	store_32 s0, 84(sp)
   13f5c:	1a 04 00 4f 	movehi s0, 58
   13f60:	60 53 66 00 	or s27, s0, 6548
   13f64:	01 78 2c 00 	or s0, s1, 2846
   13f68:	1e 40 01 88 	store_32 s0, 80(sp)
   13f6c:	1e 80 01 a8 	load_32 s0, 96(sp)
   13f70:	00 00 00 a8 	load_32 s0, (s0)
   13f74:	20 80 fc c0 	move s1, s25
   13f78:	b8 02 01 f8 	call 264928 <__divsi3>
   13f7c:	3e 30 01 a8 	load_32 s1, 76(sp)
   13f80:	00 80 50 c0 	add_i s0, s0, s1
   13f84:	3e a0 01 a8 	load_32 s1, 104(sp)
   13f88:	01 00 40 c1 	cmplt_i s0, s1, s0
   13f8c:	40 00 00 f4 	bnz s0, 8 <TryRunTics+0x300>
   13f90:	2e 00 00 f6 	b 184 <TryRunTics+0x3b4>
   13f94:	ba fb ff f9 	call -4376 <NetUpdate>
   13f98:	1e 60 01 a8 	load_32 s0, 88(sp)
   13f9c:	00 00 00 a8 	load_32 s0, (s0)
   13fa0:	00 30 00 a6 	load_s16 s0, 12(s0)
   13fa4:	5e a3 01 88 	store_32 s26, 104(sp)
   13fa8:	20 04 00 14 	cmplt_i s1, s0, 1
   13fac:	81 03 00 f4 	bnz s1, 112 <TryRunTics+0x388>
   13fb0:	3e 50 01 a8 	load_32 s1, 84(sp)
   13fb4:	80 00 fd c0 	move s4, s26
   13fb8:	41 08 00 0b 	shl s2, s1, 2
   13fbc:	7b 00 51 c0 	add_i s3, s27, s2
   13fc0:	63 00 00 a8 	load_32 s3, (s3)
   13fc4:	e3 00 00 f2 	bz s3, 28 <TryRunTics+0x34c>
   13fc8:	58 00 51 c0 	add_i s2, s24, s2
   13fcc:	42 00 00 a8 	load_32 s2, (s2)
   13fd0:	62 00 42 c1 	cmplt_i s3, s2, s4
   13fd4:	43 00 00 f4 	bnz s3, 8 <TryRunTics+0x348>
   13fd8:	40 00 f2 c0 	move s2, s4
   13fdc:	80 00 f1 c0 	move s4, s2
   13fe0:	21 04 00 05 	add_i s1, s1, 1
   13fe4:	41 00 40 c1 	cmplt_i s2, s1, s0
   13fe8:	82 fe ff f5 	bnz s2, -48 <TryRunTics+0x324>
   13fec:	1e 80 01 a8 	load_32 s0, 96(sp)
   13ff0:	00 00 00 a8 	load_32 s0, (s0)
   13ff4:	3e 90 01 a8 	load_32 s1, 100(sp)
   13ff8:	21 00 00 a8 	load_32 s1, (s1)
   13ffc:	9e a0 01 88 	store_32 s4, 104(sp)
   14000:	96 02 01 f8 	call 264792 <__divsi3>
   14004:	3e a0 01 a8 	load_32 s1, 104(sp)
   14008:	01 00 30 c1 	cmpge_i s0, s1, s0
   1400c:	80 00 00 f4 	bnz s0, 16 <TryRunTics+0x388>
   14010:	1e 40 01 a8 	load_32 s0, 80(sp)
   14014:	1e 00 00 88 	store_32 s0, (sp)
   14018:	3b e8 ff f9 	call -24340 <I_Error>
   1401c:	0e e8 ff f9 	call -24520 <I_GetTime>
   14020:	3e 90 01 a8 	load_32 s1, 100(sp)
   14024:	21 03 00 a8 	load_32 s25, (s1)
   14028:	20 80 fc c0 	move s1, s25
   1402c:	8b 02 01 f8 	call 264748 <__divsi3>
   14030:	3e 70 01 a8 	load_32 s1, 92(sp)
   14034:	00 80 60 c0 	sub_i s0, s0, s1
   14038:	00 50 00 14 	cmplt_i s0, s0, 20
   1403c:	80 f9 ff f5 	bnz s0, -208 <TryRunTics+0x2d8>
   14040:	d0 1e 00 f8 	call 31552 <M_Ticker>
   14044:	6d 00 00 f6 	b 436 <TryRunTics+0x564>
   14048:	7e 30 01 a8 	load_32 s3, 76(sp)
   1404c:	63 0d 00 f2 	bz s3, 428 <TryRunTics+0x564>
   14050:	00 00 00 4f 	movehi s0, 0
   14054:	35 a8 2a 4f 	movehi s1, 87381
   14058:	60 03 00 0f 	move s27, 0
   1405c:	00 a4 3f 00 	or s0, s0, 4073
   14060:	1e 60 01 88 	store_32 s0, 88(sp)
   14064:	1a 04 00 4f 	movehi s0, 58
   14068:	5a 04 00 4f 	movehi s2, 58
   1406c:	00 a0 17 00 	or s0, s0, 1512
   14070:	1e 70 01 88 	store_32 s0, 92(sp)
   14074:	01 ac 2a 00 	or s0, s1, 2731
   14078:	1e 50 01 88 	store_32 s0, 84(sp)
   1407c:	02 90 5f 00 	or s0, s2, 6116
   14080:	1e 40 01 88 	store_32 s0, 80(sp)
   14084:	19 04 00 14 	cmplt_i s0, s25, 1
   14088:	63 fc ff 05 	add_i s3, s3, -1
   1408c:	7e 30 01 88 	store_32 s3, 76(sp)
   14090:	c0 0a 00 f4 	bnz s0, 344 <TryRunTics+0x554>
   14094:	07 00 00 f6 	b 28 <TryRunTics+0x41c>
   14098:	1e 90 01 a8 	load_32 s0, 100(sp)
   1409c:	20 03 00 a8 	load_32 s25, (s0)
   140a0:	19 04 00 14 	cmplt_i s0, s25, 1
   140a4:	63 fc ff 05 	add_i s3, s3, -1
   140a8:	7e 30 01 88 	store_32 s3, 76(sp)
   140ac:	e0 09 00 f4 	bnz s0, 316 <TryRunTics+0x554>
   140b0:	1e 80 01 a8 	load_32 s0, 96(sp)
   140b4:	00 03 00 a8 	load_32 s24, (s0)
   140b8:	40 83 fd c0 	move s26, s27
   140bc:	00 00 fc c0 	move s0, s24
   140c0:	20 80 fc c0 	move s1, s25
   140c4:	65 02 01 f8 	call 264596 <__divsi3>
   140c8:	3e a0 01 a8 	load_32 s1, 104(sp)
   140cc:	00 80 50 c1 	cmple_i s0, s0, s1
   140d0:	80 00 00 f4 	bnz s0, 16 <TryRunTics+0x44c>
   140d4:	1e 60 01 a8 	load_32 s0, 88(sp)
   140d8:	1e 00 00 88 	store_32 s0, (sp)
   140dc:	0a e8 ff f9 	call -24536 <I_Error>
   140e0:	1e 70 01 a8 	load_32 s0, 92(sp)
   140e4:	00 00 00 a8 	load_32 s0, (s0)
   140e8:	40 00 00 f2 	bz s0, 8 <TryRunTics+0x45c>
   140ec:	ce f2 ff f9 	call -13512 <D_DoAdvanceDemo>
   140f0:	a4 1e 00 f8 	call 31376 <M_Ticker>
   140f4:	f3 03 00 f8 	call 4044 <G_Ticker>
   140f8:	3e 80 01 a8 	load_32 s1, 96(sp)
   140fc:	01 00 00 a8 	load_32 s0, (s1)
   14100:	00 07 00 05 	add_i s24, s0, 1
   14104:	01 03 00 88 	store_32 s24, (s1)
   14108:	1e 90 01 a8 	load_32 s0, 100(sp)
   1410c:	20 03 00 a8 	load_32 s25, (s0)
   14110:	19 fc ff 05 	add_i s0, s25, -1
   14114:	1a 00 00 c1 	cmpeq_i s0, s26, s0
   14118:	40 04 00 f4 	bnz s0, 136 <TryRunTics+0x50c>
   1411c:	00 00 fc c0 	move s0, s24
   14120:	20 80 fc c0 	move s1, s25
   14124:	4d 02 01 f8 	call 264500 <__divsi3>
   14128:	3e 50 01 a8 	load_32 s1, 84(sp)
   1412c:	20 80 f0 c1 	mulh_i s1, s0, s1
   14130:	41 04 00 09 	ashr s2, s1, 1
   14134:	21 7c 00 0a 	shr s1, s1, 31
   14138:	22 80 50 c0 	add_i s1, s2, s1
   1413c:	21 30 00 07 	mull_i s1, s1, 12
   14140:	00 80 60 c0 	sub_i s0, s0, s1
   14144:	3e 40 01 a8 	load_32 s1, 80(sp)
   14148:	00 0c 00 0b 	shl s0, s0, 3
   1414c:	01 00 50 c0 	add_i s0, s1, s0
   14150:	60 1b 00 82 	store_8 s27, 6(s0)
   14154:	20 1c 00 a2 	load_s8 s1, 7(s0)
   14158:	21 fc ff 12 	cmpgt_i s1, s1, -1
   1415c:	61 00 00 f4 	bnz s1, 12 <TryRunTics+0x4d4>
   14160:	20 1c 00 05 	add_i s1, s0, 7
   14164:	61 03 00 82 	store_8 s27, (s1)
   14168:	60 9b 01 82 	store_8 s27, 102(s0)
   1416c:	20 9c 01 a2 	load_s8 s1, 103(s0)
   14170:	21 00 00 14 	cmplt_i s1, s1, 0
   14174:	e1 01 00 f4 	bnz s1, 60 <TryRunTics+0x51c>
   14178:	60 1b 03 82 	store_8 s27, 198(s0)
   1417c:	20 1c 03 a2 	load_s8 s1, 199(s0)
   14180:	21 fc ff 12 	cmpgt_i s1, s1, -1
   14184:	41 00 00 f4 	bnz s1, 8 <TryRunTics+0x4f8>
   14188:	10 00 00 f6 	b 64 <TryRunTics+0x534>
   1418c:	60 9b 04 82 	store_8 s27, 294(s0)
   14190:	20 9c 04 a2 	load_s8 s1, 295(s0)
   14194:	21 fc ff 12 	cmpgt_i s1, s1, -1
   14198:	41 00 00 f4 	bnz s1, 8 <TryRunTics+0x50c>
   1419c:	0e 00 00 f6 	b 56 <TryRunTics+0x540>
   141a0:	5a 07 00 05 	add_i s26, s26, 1
   141a4:	1a 80 4c c1 	cmplt_i s0, s26, s25
   141a8:	a0 f8 ff f5 	bnz s0, -236 <TryRunTics+0x428>
   141ac:	0f 00 00 f6 	b 60 <TryRunTics+0x554>
   141b0:	20 9c 01 05 	add_i s1, s0, 103
   141b4:	61 03 00 82 	store_8 s27, (s1)
   141b8:	60 1b 03 82 	store_8 s27, 198(s0)
   141bc:	20 1c 03 a2 	load_s8 s1, 199(s0)
   141c0:	21 fc ff 12 	cmpgt_i s1, s1, -1
   141c4:	41 fe ff f5 	bnz s1, -56 <TryRunTics+0x4f8>
   141c8:	20 1c 03 05 	add_i s1, s0, 199
   141cc:	61 03 00 82 	store_8 s27, (s1)
   141d0:	ef ff ff f7 	b -68 <TryRunTics+0x4f8>
   141d4:	00 9c 04 05 	add_i s0, s0, 295
   141d8:	60 03 00 82 	store_8 s27, (s0)
   141dc:	5a 07 00 05 	add_i s26, s26, 1
   141e0:	1a 80 4c c1 	cmplt_i s0, s26, s25
   141e4:	c0 f6 ff f5 	bnz s0, -296 <TryRunTics+0x428>
   141e8:	25 fb ff f9 	call -4972 <NetUpdate>
   141ec:	7e 30 01 a8 	load_32 s3, 76(sp)
   141f0:	43 00 00 f2 	bz s3, 8 <TryRunTics+0x564>
   141f4:	a9 ff ff f7 	b -348 <TryRunTics+0x404>
   141f8:	fe b3 01 a8 	load_32 ra, 108(sp)
   141fc:	7e c3 01 a8 	load_32 s27, 112(sp)
   14200:	5e d3 01 a8 	load_32 s26, 116(sp)
   14204:	3e e3 01 a8 	load_32 s25, 120(sp)
   14208:	1e f3 01 a8 	load_32 s24, 124(sp)
   1420c:	de 03 02 05 	add_i sp, sp, 128
   14210:	1f 00 00 f0 	ret

0000000000014214 G_CmdChecksum:
   14214:	00 00 00 a8 	load_32 s0, (s0)
   14218:	1f 00 00 f0 	ret

000000000001421c G_BuildTiccmd:
   1421c:	de 03 ff 05 	add_i sp, sp, -64
   14220:	1e f3 00 88 	store_32 s24, 60(sp)
   14224:	3e e3 00 88 	store_32 s25, 56(sp)
   14228:	5e d3 00 88 	store_32 s26, 52(sp)
   1422c:	7e c3 00 88 	store_32 s27, 48(sp)
   14230:	fe b3 00 88 	store_32 ra, 44(sp)
   14234:	00 03 f0 c0 	move s24, s0
   14238:	73 e7 ff f9 	call -25140 <I_BaseTiccmd>
   1423c:	20 08 00 a4 	load_u16 s1, 2(s0)
   14240:	9a 04 00 4f 	movehi s4, 58
   14244:	40 00 00 a4 	load_u16 s2, (s0)
   14248:	60 18 00 a4 	load_u16 s3, 6(s0)
   1424c:	00 10 00 a4 	load_u16 s0, 4(s0)
   14250:	18 10 00 86 	store_16 s0, 4(s24)
   14254:	78 18 00 86 	store_16 s3, 6(s24)
   14258:	7a 04 00 4f 	movehi s3, 58
   1425c:	58 00 00 86 	store_16 s2, (s24)
   14260:	38 08 00 86 	store_16 s1, 2(s24)
   14264:	43 c0 6d 00 	or s2, s3, 7024
   14268:	64 60 5f 00 	or s3, s4, 6104
   1426c:	95 a8 2a 4f 	movehi s4, 87381
   14270:	42 00 00 a8 	load_32 s2, (s2)
   14274:	63 00 00 a8 	load_32 s3, (s3)
   14278:	84 ac 2a 00 	or s4, s4, 2731
   1427c:	42 60 00 07 	mull_i s2, s2, 24
   14280:	83 00 f2 c1 	mulh_i s4, s3, s4
   14284:	a4 04 00 0a 	shr s5, s4, 1
   14288:	84 7c 00 0a 	shr s4, s4, 31
   1428c:	85 00 52 c0 	add_i s4, s5, s4
   14290:	ba 04 00 4f 	movehi s5, 58
   14294:	84 30 00 07 	mull_i s4, s4, 12
   14298:	a5 40 6c 00 	or s5, s5, 6928
   1429c:	63 00 62 c0 	sub_i s3, s3, s4
   142a0:	80 04 00 0f 	move s4, 1
   142a4:	45 00 51 c0 	add_i s2, s5, s2
   142a8:	63 04 00 0b 	shl s3, s3, 1
   142ac:	42 80 51 c0 	add_i s2, s2, s3
   142b0:	7b 04 00 4f 	movehi s3, 59
   142b4:	42 00 00 a6 	load_s16 s2, (s2)
   142b8:	63 c0 00 00 	or s3, s3, 48
   142bc:	58 10 00 86 	store_16 s2, 4(s24)
   142c0:	5a 04 00 4f 	movehi s2, 58
   142c4:	63 00 00 a8 	load_32 s3, (s3)
   142c8:	62 83 6f 00 	or s27, s2, 7136
   142cc:	43 08 00 0b 	shl s2, s3, 2
   142d0:	5b 00 51 c0 	add_i s2, s27, s2
   142d4:	42 00 00 a8 	load_32 s2, (s2)
   142d8:	60 00 f2 c0 	move s3, s4
   142dc:	c2 02 00 f4 	bnz s2, 88 <G_BuildTiccmd+0x118>
   142e0:	53 04 00 4f 	movehi s2, 51
   142e4:	7b 04 00 4f 	movehi s3, 59
   142e8:	42 50 49 00 	or s2, s2, 4692
   142ec:	63 80 01 00 	or s3, s3, 96
   142f0:	42 00 00 a8 	load_32 s2, (s2)
   142f4:	63 00 00 a8 	load_32 s3, (s3)
   142f8:	63 08 00 0b 	shl s3, s3, 2
   142fc:	42 80 51 c0 	add_i s2, s2, s3
   14300:	42 00 00 a8 	load_32 s2, (s2)
   14304:	60 00 f2 c0 	move s3, s4
   14308:	62 01 00 f4 	bnz s2, 44 <G_BuildTiccmd+0x118>
   1430c:	53 04 00 4f 	movehi s2, 51
   14310:	7b 04 00 4f 	movehi s3, 59
   14314:	42 60 49 00 	or s2, s2, 4696
   14318:	63 30 00 00 	or s3, s3, 12
   1431c:	42 00 00 a8 	load_32 s2, (s2)
   14320:	63 00 00 a8 	load_32 s3, (s3)
   14324:	63 08 00 0b 	shl s3, s3, 2
   14328:	42 80 51 c0 	add_i s2, s2, s3
   1432c:	42 00 00 a8 	load_32 s2, (s2)
   14330:	62 00 00 11 	cmpne_i s3, s2, 0
   14334:	5b 04 00 4f 	movehi s2, 59
   14338:	42 b0 00 00 	or s2, s2, 44
   1433c:	42 00 00 a8 	load_32 s2, (s2)
   14340:	42 08 00 0b 	shl s2, s2, 2
   14344:	5b 00 51 c0 	add_i s2, s27, s2
   14348:	42 00 00 a8 	load_32 s2, (s2)
   1434c:	62 01 00 f4 	bnz s2, 44 <G_BuildTiccmd+0x15c>
   14350:	53 04 00 4f 	movehi s2, 51
   14354:	9b 04 00 4f 	movehi s4, 59
   14358:	42 60 49 00 	or s2, s2, 4696
   1435c:	84 20 00 00 	or s4, s4, 8
   14360:	42 00 00 a8 	load_32 s2, (s2)
   14364:	84 00 00 a8 	load_32 s4, (s4)
   14368:	84 08 00 0b 	shl s4, s4, 2
   1436c:	42 00 52 c0 	add_i s2, s2, s4
   14370:	42 00 00 a8 	load_32 s2, (s2)
   14374:	82 00 00 11 	cmpne_i s4, s2, 0
   14378:	5b 04 00 4f 	movehi s2, 59
   1437c:	24 07 00 01 	and s25, s4, 1
   14380:	42 50 00 00 	or s2, s2, 20
   14384:	42 00 00 a8 	load_32 s2, (s2)
   14388:	02 02 00 f4 	bnz s2, 64 <G_BuildTiccmd+0x1ac>
   1438c:	9b 04 00 4f 	movehi s4, 59
   14390:	84 a0 00 00 	or s4, s4, 40
   14394:	84 00 00 a8 	load_32 s4, (s4)
   14398:	84 08 00 0b 	shl s4, s4, 2
   1439c:	9b 00 52 c0 	add_i s4, s27, s4
   143a0:	84 00 00 a8 	load_32 s4, (s4)
   143a4:	24 01 00 f4 	bnz s4, 36 <G_BuildTiccmd+0x1ac>
   143a8:	9b 04 00 4f 	movehi s4, 59
   143ac:	84 90 00 00 	or s4, s4, 36
   143b0:	84 00 00 a8 	load_32 s4, (s4)
   143b4:	84 08 00 0b 	shl s4, s4, 2
   143b8:	9b 00 52 c0 	add_i s4, s27, s4
   143bc:	84 00 00 a8 	load_32 s4, (s4)
   143c0:	44 00 00 f4 	bnz s4, 8 <G_BuildTiccmd+0x1ac>
   143c4:	f9 00 00 f6 	b 996 <G_BuildTiccmd+0x58c>
   143c8:	9a 04 00 4f 	movehi s4, 58
   143cc:	bb 04 00 4f 	movehi s5, 59
   143d0:	84 20 6a 00 	or s4, s4, 6792
   143d4:	a5 10 19 00 	or s5, s5, 1604
   143d8:	84 00 00 a8 	load_32 s4, (s4)
   143dc:	c5 00 00 a8 	load_32 s6, (s5)
   143e0:	86 00 52 c0 	add_i s4, s6, s4
   143e4:	85 00 00 88 	store_32 s4, (s5)
   143e8:	c4 14 00 12 	cmpgt_i s6, s4, 5
   143ec:	80 80 fc c0 	move s4, s25
   143f0:	46 00 00 f4 	bnz s6, 8 <G_BuildTiccmd+0x1dc>
   143f4:	80 08 00 0f 	move s4, 2
   143f8:	bb 04 00 4f 	movehi s5, 59
   143fc:	c3 04 00 01 	and s6, s3, 1
   14400:	a5 a0 00 00 	or s5, s5, 40
   14404:	a5 00 00 a8 	load_32 s5, (s5)
   14408:	a5 08 00 0b 	shl s5, s5, 2
   1440c:	bb 80 52 c0 	add_i s5, s27, s5
   14410:	65 00 00 a8 	load_32 s3, (s5)
   14414:	de 90 00 88 	store_32 s6, 36(sp)
   14418:	06 01 00 f2 	bz s6, 32 <G_BuildTiccmd+0x21c>
   1441c:	43 05 00 f2 	bz s3, 168 <G_BuildTiccmd+0x2a8>
   14420:	13 04 00 4f 	movehi s0, 51
   14424:	39 08 00 0b 	shl s1, s25, 2
   14428:	00 00 49 00 	or s0, s0, 4672
   1442c:	00 80 50 c0 	add_i s0, s0, s1
   14430:	60 00 00 a8 	load_32 s3, (s0)
   14434:	25 00 00 f6 	b 148 <G_BuildTiccmd+0x2ac>
   14438:	00 40 00 0b 	shl s0, s0, 16
   1443c:	01 00 00 c0 	or s0, s1, s0
   14440:	03 01 00 f2 	bz s3, 32 <G_BuildTiccmd+0x244>
   14444:	33 04 00 4f 	movehi s1, 51
   14448:	64 08 00 0b 	shl s3, s4, 2
   1444c:	21 20 49 00 	or s1, s1, 4680
   14450:	21 80 51 c0 	add_i s1, s1, s3
   14454:	21 00 00 a6 	load_s16 s1, (s1)
   14458:	00 80 60 c0 	sub_i s0, s0, s1
   1445c:	18 08 00 86 	store_16 s0, 2(s24)
   14460:	3b 04 00 4f 	movehi s1, 59
   14464:	21 90 00 00 	or s1, s1, 36
   14468:	21 00 00 a8 	load_32 s1, (s1)
   1446c:	21 08 00 0b 	shl s1, s1, 2
   14470:	3b 80 50 c0 	add_i s1, s27, s1
   14474:	21 00 00 a8 	load_32 s1, (s1)
   14478:	01 01 00 f2 	bz s1, 32 <G_BuildTiccmd+0x27c>
   1447c:	33 04 00 4f 	movehi s1, 51
   14480:	64 08 00 0b 	shl s3, s4, 2
   14484:	21 20 49 00 	or s1, s1, 4680
   14488:	21 80 51 c0 	add_i s1, s1, s3
   1448c:	21 00 00 a6 	load_s16 s1, (s1)
   14490:	00 80 50 c0 	add_i s0, s0, s1
   14494:	18 08 00 86 	store_16 s0, 2(s24)
   14498:	22 04 00 14 	cmplt_i s1, s2, 1
   1449c:	21 04 00 f4 	bnz s1, 132 <G_BuildTiccmd+0x304>
   144a0:	33 04 00 4f 	movehi s1, 51
   144a4:	44 08 00 0b 	shl s2, s4, 2
   144a8:	60 00 00 0f 	move s3, 0
   144ac:	21 20 49 00 	or s1, s1, 4680
   144b0:	21 00 51 c0 	add_i s1, s1, s2
   144b4:	21 00 00 a6 	load_s16 s1, (s1)
   144b8:	00 80 60 c0 	sub_i s0, s0, s1
   144bc:	18 08 00 86 	store_16 s0, 2(s24)
   144c0:	2b 00 00 f6 	b 172 <G_BuildTiccmd+0x350>
   144c4:	60 00 00 0f 	move s3, 0
   144c8:	1b 04 00 4f 	movehi s0, 59
   144cc:	00 90 00 00 	or s0, s0, 36
   144d0:	00 00 00 a8 	load_32 s0, (s0)
   144d4:	00 08 00 0b 	shl s0, s0, 2
   144d8:	1b 00 50 c0 	add_i s0, s27, s0
   144dc:	00 00 00 a8 	load_32 s0, (s0)
   144e0:	e0 00 00 f2 	bz s0, 28 <G_BuildTiccmd+0x2e0>
   144e4:	13 04 00 4f 	movehi s0, 51
   144e8:	39 08 00 0b 	shl s1, s25, 2
   144ec:	00 00 49 00 	or s0, s0, 4672
   144f0:	00 80 50 c0 	add_i s0, s0, s1
   144f4:	00 00 00 a8 	load_32 s0, (s0)
   144f8:	63 00 60 c0 	sub_i s3, s3, s0
   144fc:	02 04 00 14 	cmplt_i s0, s2, 1
   14500:	60 02 00 f4 	bnz s0, 76 <G_BuildTiccmd+0x330>
   14504:	13 04 00 4f 	movehi s0, 51
   14508:	39 08 00 0b 	shl s1, s25, 2
   1450c:	00 00 49 00 	or s0, s0, 4672
   14510:	00 80 50 c0 	add_i s0, s0, s1
   14514:	00 00 00 a8 	load_32 s0, (s0)
   14518:	60 80 51 c0 	add_i s3, s0, s3
   1451c:	14 00 00 f6 	b 80 <G_BuildTiccmd+0x350>
   14520:	22 fc ff 12 	cmpgt_i s1, s2, -1
   14524:	60 00 00 0f 	move s3, 0
   14528:	21 02 00 f4 	bnz s1, 68 <G_BuildTiccmd+0x350>
   1452c:	33 04 00 4f 	movehi s1, 51
   14530:	44 08 00 0b 	shl s2, s4, 2
   14534:	21 20 49 00 	or s1, s1, 4680
   14538:	21 00 51 c0 	add_i s1, s1, s2
   1453c:	21 00 00 a6 	load_s16 s1, (s1)
   14540:	00 80 50 c0 	add_i s0, s0, s1
   14544:	18 08 00 86 	store_16 s0, 2(s24)
   14548:	09 00 00 f6 	b 36 <G_BuildTiccmd+0x350>
   1454c:	02 fc ff 12 	cmpgt_i s0, s2, -1
   14550:	e0 00 00 f4 	bnz s0, 28 <G_BuildTiccmd+0x350>
   14554:	13 04 00 4f 	movehi s0, 51
   14558:	39 08 00 0b 	shl s1, s25, 2
   1455c:	00 00 49 00 	or s0, s0, 4672
   14560:	00 80 50 c0 	add_i s0, s0, s1
   14564:	00 00 00 a8 	load_32 s0, (s0)
   14568:	63 00 60 c0 	sub_i s3, s3, s0
   1456c:	1b 04 00 4f 	movehi s0, 59
   14570:	00 f0 00 00 	or s0, s0, 60
   14574:	00 00 00 a8 	load_32 s0, (s0)
   14578:	00 08 00 0b 	shl s0, s0, 2
   1457c:	1b 00 50 c0 	add_i s0, s27, s0
   14580:	00 00 00 a8 	load_32 s0, (s0)
   14584:	e0 00 00 f2 	bz s0, 28 <G_BuildTiccmd+0x384>
   14588:	13 04 00 4f 	movehi s0, 51
   1458c:	39 08 00 0b 	shl s1, s25, 2
   14590:	00 e0 48 00 	or s0, s0, 4664
   14594:	00 80 50 c0 	add_i s0, s0, s1
   14598:	40 03 00 a8 	load_32 s26, (s0)
   1459c:	02 00 00 f6 	b 8 <G_BuildTiccmd+0x388>
   145a0:	40 03 00 0f 	move s26, 0
   145a4:	1b 04 00 4f 	movehi s0, 59
   145a8:	00 70 00 00 	or s0, s0, 28
   145ac:	00 00 00 a8 	load_32 s0, (s0)
   145b0:	00 08 00 0b 	shl s0, s0, 2
   145b4:	1b 00 50 c0 	add_i s0, s27, s0
   145b8:	00 00 00 a8 	load_32 s0, (s0)
   145bc:	e0 00 00 f2 	bz s0, 28 <G_BuildTiccmd+0x3bc>
   145c0:	13 04 00 4f 	movehi s0, 51
   145c4:	39 08 00 0b 	shl s1, s25, 2
   145c8:	00 e0 48 00 	or s0, s0, 4664
   145cc:	00 80 50 c0 	add_i s0, s0, s1
   145d0:	00 00 00 a8 	load_32 s0, (s0)
   145d4:	5a 03 60 c0 	sub_i s26, s26, s0
   145d8:	1b 04 00 4f 	movehi s0, 59
   145dc:	00 60 00 00 	or s0, s0, 24
   145e0:	00 00 00 a8 	load_32 s0, (s0)
   145e4:	20 fc ff 12 	cmpgt_i s1, s0, -1
   145e8:	41 00 00 f4 	bnz s1, 8 <G_BuildTiccmd+0x3d4>
   145ec:	09 00 00 f6 	b 36 <G_BuildTiccmd+0x3f4>
   145f0:	c0 01 00 f2 	bz s0, 56 <G_BuildTiccmd+0x40c>
   145f4:	13 04 00 4f 	movehi s0, 51
   145f8:	39 08 00 0b 	shl s1, s25, 2
   145fc:	00 e0 48 00 	or s0, s0, 4664
   14600:	00 80 50 c0 	add_i s0, s0, s1
   14604:	00 00 00 a8 	load_32 s0, (s0)
   14608:	5a 03 60 c0 	sub_i s26, s26, s0
   1460c:	07 00 00 f6 	b 28 <G_BuildTiccmd+0x40c>
   14610:	13 04 00 4f 	movehi s0, 51
   14614:	39 08 00 0b 	shl s1, s25, 2
   14618:	00 e0 48 00 	or s0, s0, 4664
   1461c:	00 80 50 c0 	add_i s0, s0, s1
   14620:	00 00 00 a8 	load_32 s0, (s0)
   14624:	40 03 5d c0 	add_i s26, s0, s26
   14628:	1b 04 00 4f 	movehi s0, 59
   1462c:	00 e0 00 00 	or s0, s0, 56
   14630:	00 00 00 a8 	load_32 s0, (s0)
   14634:	00 08 00 0b 	shl s0, s0, 2
   14638:	1b 00 50 c0 	add_i s0, s27, s0
   1463c:	00 00 00 a8 	load_32 s0, (s0)
   14640:	e0 00 00 f2 	bz s0, 28 <G_BuildTiccmd+0x440>
   14644:	13 04 00 4f 	movehi s0, 51
   14648:	39 08 00 0b 	shl s1, s25, 2
   1464c:	00 00 49 00 	or s0, s0, 4672
   14650:	00 80 50 c0 	add_i s0, s0, s1
   14654:	00 00 00 a8 	load_32 s0, (s0)
   14658:	60 80 51 c0 	add_i s3, s0, s3
   1465c:	1b 04 00 4f 	movehi s0, 59
   14660:	00 d0 00 00 	or s0, s0, 52
   14664:	00 00 00 a8 	load_32 s0, (s0)
   14668:	00 08 00 0b 	shl s0, s0, 2
   1466c:	1b 00 50 c0 	add_i s0, s27, s0
   14670:	00 00 00 a8 	load_32 s0, (s0)
   14674:	e0 00 00 f2 	bz s0, 28 <G_BuildTiccmd+0x474>
   14678:	13 04 00 4f 	movehi s0, 51
   1467c:	39 08 00 0b 	shl s1, s25, 2
   14680:	00 00 49 00 	or s0, s0, 4672
   14684:	00 80 50 c0 	add_i s0, s0, s1
   14688:	00 00 00 a8 	load_32 s0, (s0)
   1468c:	63 00 60 c0 	sub_i s3, s3, s0
   14690:	7e a0 00 88 	store_32 s3, 40(sp)
   14694:	72 d8 00 f8 	call 221640 <HU_dequeueChatChar>
   14698:	3b 04 00 4f 	movehi s1, 59
   1469c:	18 18 00 82 	store_8 s0, 6(s24)
   146a0:	21 80 00 00 	or s1, s1, 32
   146a4:	01 00 00 a8 	load_32 s0, (s1)
   146a8:	00 08 00 0b 	shl s0, s0, 2
   146ac:	1b 00 50 c0 	add_i s0, s27, s0
   146b0:	00 00 00 a8 	load_32 s0, (s0)
   146b4:	a0 02 00 f4 	bnz s0, 84 <G_BuildTiccmd+0x4ec>
   146b8:	13 04 00 4f 	movehi s0, 51
   146bc:	3b 04 00 4f 	movehi s1, 59
   146c0:	00 50 49 00 	or s0, s0, 4692
   146c4:	21 60 01 00 	or s1, s1, 88
   146c8:	00 00 00 a8 	load_32 s0, (s0)
   146cc:	21 00 00 a8 	load_32 s1, (s1)
   146d0:	21 08 00 0b 	shl s1, s1, 2
   146d4:	00 80 50 c0 	add_i s0, s0, s1
   146d8:	00 00 00 a8 	load_32 s0, (s0)
   146dc:	60 01 00 f4 	bnz s0, 44 <G_BuildTiccmd+0x4ec>
   146e0:	13 04 00 4f 	movehi s0, 51
   146e4:	3b 04 00 4f 	movehi s1, 59
   146e8:	00 60 49 00 	or s0, s0, 4696
   146ec:	21 10 00 00 	or s1, s1, 4
   146f0:	00 00 00 a8 	load_32 s0, (s0)
   146f4:	21 00 00 a8 	load_32 s1, (s1)
   146f8:	21 08 00 0b 	shl s1, s1, 2
   146fc:	00 80 50 c0 	add_i s0, s0, s1
   14700:	00 00 00 a8 	load_32 s0, (s0)
   14704:	80 00 00 f2 	bz s0, 16 <G_BuildTiccmd+0x4f8>
   14708:	18 1c 00 a0 	load_u8 s0, 7(s24)
   1470c:	00 04 00 00 	or s0, s0, 1
   14710:	18 1c 00 82 	store_8 s0, 7(s24)
   14714:	1b 04 00 4f 	movehi s0, 59
   14718:	00 00 01 00 	or s0, s0, 64
   1471c:	00 00 00 a8 	load_32 s0, (s0)
   14720:	00 08 00 0b 	shl s0, s0, 2
   14724:	1b 00 50 c0 	add_i s0, s27, s0
   14728:	00 00 00 a8 	load_32 s0, (s0)
   1472c:	60 01 00 f4 	bnz s0, 44 <G_BuildTiccmd+0x53c>
   14730:	13 04 00 4f 	movehi s0, 51
   14734:	3b 04 00 4f 	movehi s1, 59
   14738:	00 60 49 00 	or s0, s0, 4696
   1473c:	21 40 00 00 	or s1, s1, 16
   14740:	00 00 00 a8 	load_32 s0, (s0)
   14744:	21 00 00 a8 	load_32 s1, (s1)
   14748:	21 08 00 0b 	shl s1, s1, 2
   1474c:	00 80 50 c0 	add_i s0, s0, s1
   14750:	00 00 00 a8 	load_32 s0, (s0)
   14754:	00 01 00 f2 	bz s0, 32 <G_BuildTiccmd+0x558>
   14758:	3a 04 00 4f 	movehi s1, 58
   1475c:	18 1c 00 a0 	load_u8 s0, 7(s24)
   14760:	21 00 6e 00 	or s1, s1, 7040
   14764:	00 08 00 00 	or s0, s0, 2
   14768:	18 1c 00 82 	store_8 s0, 7(s24)
   1476c:	00 00 00 0f 	move s0, 0
   14770:	01 00 00 88 	store_32 s0, (s1)
   14774:	1b 10 03 a8 	load_32 s0, 196(s27)
   14778:	60 00 00 f2 	bz s0, 12 <G_BuildTiccmd+0x568>
   1477c:	00 00 00 0f 	move s0, 0
   14780:	22 00 00 f6 	b 136 <G_BuildTiccmd+0x5ec>
   14784:	1b 20 03 a8 	load_32 s0, 200(s27)
   14788:	60 00 00 f2 	bz s0, 12 <G_BuildTiccmd+0x578>
   1478c:	00 20 00 0f 	move s0, 8
   14790:	1e 00 00 f6 	b 120 <G_BuildTiccmd+0x5ec>
   14794:	1b 30 03 a8 	load_32 s0, 204(s27)
   14798:	40 00 00 f4 	bnz s0, 8 <G_BuildTiccmd+0x584>
   1479c:	08 00 00 f6 	b 32 <G_BuildTiccmd+0x5a0>
   147a0:	00 40 00 0f 	move s0, 16
   147a4:	19 00 00 f6 	b 100 <G_BuildTiccmd+0x5ec>
   147a8:	9b 04 00 4f 	movehi s4, 59
   147ac:	a0 00 00 0f 	move s5, 0
   147b0:	84 10 19 00 	or s4, s4, 1604
   147b4:	a4 00 00 88 	store_32 s5, (s4)
   147b8:	0f ff ff f7 	b -964 <G_BuildTiccmd+0x1d8>
   147bc:	1b 40 03 a8 	load_32 s0, 208(s27)
   147c0:	40 00 00 f4 	bnz s0, 8 <G_BuildTiccmd+0x5ac>
   147c4:	03 00 00 f6 	b 12 <G_BuildTiccmd+0x5b4>
   147c8:	00 60 00 0f 	move s0, 24
   147cc:	0f 00 00 f6 	b 60 <G_BuildTiccmd+0x5ec>
   147d0:	1b 50 03 a8 	load_32 s0, 212(s27)
   147d4:	40 00 00 f4 	bnz s0, 8 <G_BuildTiccmd+0x5c0>
   147d8:	03 00 00 f6 	b 12 <G_BuildTiccmd+0x5c8>
   147dc:	00 80 00 0f 	move s0, 32
   147e0:	0a 00 00 f6 	b 40 <G_BuildTiccmd+0x5ec>
   147e4:	1b 60 03 a8 	load_32 s0, 216(s27)
   147e8:	40 00 00 f4 	bnz s0, 8 <G_BuildTiccmd+0x5d4>
   147ec:	03 00 00 f6 	b 12 <G_BuildTiccmd+0x5dc>
   147f0:	00 a0 00 0f 	move s0, 40
   147f4:	05 00 00 f6 	b 20 <G_BuildTiccmd+0x5ec>
   147f8:	1b 70 03 a8 	load_32 s0, 220(s27)
   147fc:	40 00 00 f4 	bnz s0, 8 <G_BuildTiccmd+0x5e8>
   14800:	bc 00 00 f6 	b 752 <G_BuildTiccmd+0x8d4>
   14804:	00 c0 00 0f 	move s0, 48
   14808:	fe 90 00 a8 	load_32 s7, 36(sp)
   1480c:	38 1c 00 a0 	load_u8 s1, 7(s24)
   14810:	00 80 00 c0 	or s0, s0, s1
   14814:	00 10 00 00 	or s0, s0, 4
   14818:	18 1c 00 82 	store_8 s0, 7(s24)
   1481c:	13 04 00 4f 	movehi s0, 51
   14820:	3b 04 00 4f 	movehi s1, 59
   14824:	00 50 49 00 	or s0, s0, 4692
   14828:	21 70 01 00 	or s1, s1, 92
   1482c:	00 00 00 a8 	load_32 s0, (s0)
   14830:	21 00 00 a8 	load_32 s1, (s1)
   14834:	21 08 00 0b 	shl s1, s1, 2
   14838:	20 80 50 c0 	add_i s1, s0, s1
   1483c:	41 00 00 a8 	load_32 s2, (s1)
   14840:	e2 00 00 f2 	bz s2, 28 <G_BuildTiccmd+0x640>
   14844:	33 04 00 4f 	movehi s1, 51
   14848:	79 08 00 0b 	shl s3, s25, 2
   1484c:	21 e0 48 00 	or s1, s1, 4664
   14850:	21 80 51 c0 	add_i s1, s1, s3
   14854:	21 00 00 a8 	load_32 s1, (s1)
   14858:	41 03 5d c0 	add_i s26, s1, s26
   1485c:	9a 04 00 4f 	movehi s4, 58
   14860:	3a 04 00 4f 	movehi s1, 58
   14864:	64 20 6e 00 	or s3, s4, 7048
   14868:	21 40 6e 00 	or s1, s1, 7056
   1486c:	a3 00 00 a8 	load_32 s5, (s3)
   14870:	c2 80 02 c1 	cmpeq_i s6, s2, s5
   14874:	a1 00 00 a8 	load_32 s5, (s1)
   14878:	26 02 00 f4 	bnz s6, 68 <G_BuildTiccmd+0x6a0>
   1487c:	c5 08 00 14 	cmplt_i s6, s5, 2
   14880:	e6 01 00 f4 	bnz s6, 60 <G_BuildTiccmd+0x6a0>
   14884:	7a 04 00 4f 	movehi s3, 58
   14888:	84 20 6e 00 	or s4, s4, 7048
   1488c:	63 00 6e 00 	or s3, s3, 7040
   14890:	44 00 00 88 	store_32 s2, (s4)
   14894:	83 00 00 a8 	load_32 s4, (s3)
   14898:	62 00 00 f2 	bz s2, 12 <G_BuildTiccmd+0x688>
   1489c:	84 04 00 05 	add_i s4, s4, 1
   148a0:	83 00 00 88 	store_32 s4, (s3)
   148a4:	44 08 00 11 	cmpne_i s2, s4, 2
   148a8:	22 02 00 f4 	bnz s2, 68 <G_BuildTiccmd+0x6d0>
   148ac:	38 1c 00 a0 	load_u8 s1, 7(s24)
   148b0:	21 08 00 00 	or s1, s1, 2
   148b4:	38 1c 00 82 	store_8 s1, 7(s24)
   148b8:	0c 00 00 f6 	b 48 <G_BuildTiccmd+0x6cc>
   148bc:	5a 04 00 4f 	movehi s2, 58
   148c0:	42 20 6a 00 	or s2, s2, 6792
   148c4:	42 00 00 a8 	load_32 s2, (s2)
   148c8:	42 80 52 c0 	add_i s2, s2, s5
   148cc:	41 00 00 88 	store_32 s2, (s1)
   148d0:	82 54 00 14 	cmplt_i s4, s2, 21
   148d4:	04 01 00 f4 	bnz s4, 32 <G_BuildTiccmd+0x6d8>
   148d8:	3a 04 00 4f 	movehi s1, 58
   148dc:	40 00 00 0f 	move s2, 0
   148e0:	21 00 6e 00 	or s1, s1, 7040
   148e4:	41 00 00 88 	store_32 s2, (s1)
   148e8:	20 80 f1 c0 	move s1, s3
   148ec:	40 00 00 0f 	move s2, 0
   148f0:	41 00 00 88 	store_32 s2, (s1)
   148f4:	3b 04 00 4f 	movehi s1, 59
   148f8:	21 80 01 00 	or s1, s1, 96
   148fc:	21 00 00 a8 	load_32 s1, (s1)
   14900:	21 08 00 0b 	shl s1, s1, 2
   14904:	00 80 50 c0 	add_i s0, s0, s1
   14908:	00 00 00 a8 	load_32 s0, (s0)
   1490c:	40 00 00 f4 	bnz s0, 8 <G_BuildTiccmd+0x6f8>
   14910:	03 00 00 f6 	b 12 <G_BuildTiccmd+0x700>
   14914:	60 04 00 0f 	move s3, 1
   14918:	0b 00 00 f6 	b 44 <G_BuildTiccmd+0x728>
   1491c:	13 04 00 4f 	movehi s0, 51
   14920:	3b 04 00 4f 	movehi s1, 59
   14924:	00 60 49 00 	or s0, s0, 4696
   14928:	21 30 00 00 	or s1, s1, 12
   1492c:	00 00 00 a8 	load_32 s0, (s0)
   14930:	21 00 00 a8 	load_32 s1, (s1)
   14934:	21 08 00 0b 	shl s1, s1, 2
   14938:	00 80 50 c0 	add_i s0, s0, s1
   1493c:	00 00 00 a8 	load_32 s0, (s0)
   14940:	60 00 00 11 	cmpne_i s3, s0, 0
   14944:	5a 04 00 4f 	movehi s2, 58
   14948:	1a 04 00 4f 	movehi s0, 58
   1494c:	63 04 00 01 	and s3, s3, 1
   14950:	22 30 6e 00 	or s1, s2, 7052
   14954:	00 50 6e 00 	or s0, s0, 7060
   14958:	81 00 00 a8 	load_32 s4, (s1)
   1495c:	a4 80 01 c1 	cmpeq_i s5, s4, s3
   14960:	80 00 00 a8 	load_32 s4, (s0)
   14964:	65 02 00 f4 	bnz s5, 76 <G_BuildTiccmd+0x794>
   14968:	a4 08 00 14 	cmplt_i s5, s4, 2
   1496c:	25 02 00 f4 	bnz s5, 68 <G_BuildTiccmd+0x794>
   14970:	9a 04 00 4f 	movehi s4, 58
   14974:	42 30 6e 00 	or s2, s2, 7052
   14978:	24 10 6e 00 	or s1, s4, 7044
   1497c:	62 00 00 88 	store_32 s3, (s2)
   14980:	41 00 00 a8 	load_32 s2, (s1)
   14984:	83 00 00 f2 	bz s3, 16 <G_BuildTiccmd+0x778>
   14988:	42 04 00 05 	add_i s2, s2, 1
   1498c:	64 10 6e 00 	or s3, s4, 7044
   14990:	43 00 00 88 	store_32 s2, (s3)
   14994:	be a0 00 a8 	load_32 s5, 40(sp)
   14998:	42 08 00 11 	cmpne_i s2, s2, 2
   1499c:	42 02 00 f4 	bnz s2, 72 <G_BuildTiccmd+0x7c8>
   149a0:	18 1c 00 a0 	load_u8 s0, 7(s24)
   149a4:	00 08 00 00 	or s0, s0, 2
   149a8:	18 1c 00 82 	store_8 s0, 7(s24)
   149ac:	0d 00 00 f6 	b 52 <G_BuildTiccmd+0x7c4>
   149b0:	5a 04 00 4f 	movehi s2, 58
   149b4:	42 20 6a 00 	or s2, s2, 6792
   149b8:	42 00 00 a8 	load_32 s2, (s2)
   149bc:	42 00 52 c0 	add_i s2, s2, s4
   149c0:	40 00 00 88 	store_32 s2, (s0)
   149c4:	be a0 00 a8 	load_32 s5, 40(sp)
   149c8:	62 54 00 14 	cmplt_i s3, s2, 21
   149cc:	03 01 00 f4 	bnz s3, 32 <G_BuildTiccmd+0x7d0>
   149d0:	1a 04 00 4f 	movehi s0, 58
   149d4:	40 00 00 0f 	move s2, 0
   149d8:	00 10 6e 00 	or s0, s0, 7044
   149dc:	40 00 00 88 	store_32 s2, (s0)
   149e0:	00 80 f0 c0 	move s0, s1
   149e4:	20 00 00 0f 	move s1, 0
   149e8:	20 00 00 88 	store_32 s1, (s0)
   149ec:	1b 04 00 4f 	movehi s0, 59
   149f0:	20 a0 01 00 	or s1, s0, 104
   149f4:	1b 04 00 4f 	movehi s0, 59
   149f8:	41 00 00 a8 	load_32 s2, (s1)
   149fc:	60 90 01 00 	or s3, s0, 100
   14a00:	03 00 00 a8 	load_32 s0, (s3)
   14a04:	42 00 5d c0 	add_i s2, s2, s26
   14a08:	87 00 00 f2 	bz s7, 16 <G_BuildTiccmd+0x7fc>
   14a0c:	00 04 00 0b 	shl s0, s0, 1
   14a10:	a0 80 52 c0 	add_i s5, s0, s5
   14a14:	05 00 00 f6 	b 20 <G_BuildTiccmd+0x80c>
   14a18:	98 08 00 a6 	load_s16 s4, 2(s24)
   14a1c:	00 0c 00 0b 	shl s0, s0, 3
   14a20:	04 00 60 c0 	sub_i s0, s4, s0
   14a24:	18 08 00 86 	store_16 s0, 2(s24)
   14a28:	93 04 00 4f 	movehi s4, 51
   14a2c:	00 00 00 0f 	move s0, 0
   14a30:	01 00 00 88 	store_32 s0, (s1)
   14a34:	03 00 00 88 	store_32 s0, (s3)
   14a38:	84 e0 48 00 	or s4, s4, 4664
   14a3c:	24 10 00 a8 	load_32 s1, 4(s4)
   14a40:	82 80 20 c1 	cmpgt_i s4, s2, s1
   14a44:	60 80 f0 c0 	move s3, s1
   14a48:	a4 00 00 f4 	bnz s4, 20 <G_BuildTiccmd+0x840>
   14a4c:	60 80 60 c0 	sub_i s3, s0, s1
   14a50:	82 80 41 c1 	cmplt_i s4, s2, s3
   14a54:	44 00 00 f4 	bnz s4, 8 <G_BuildTiccmd+0x840>
   14a58:	60 00 f1 c0 	move s3, s2
   14a5c:	45 80 20 c1 	cmpgt_i s2, s5, s1
   14a60:	a2 00 00 f4 	bnz s2, 20 <G_BuildTiccmd+0x858>
   14a64:	20 80 60 c0 	sub_i s1, s0, s1
   14a68:	45 80 40 c1 	cmplt_i s2, s5, s1
   14a6c:	42 00 00 f4 	bnz s2, 8 <G_BuildTiccmd+0x858>
   14a70:	20 80 f2 c0 	move s1, s5
   14a74:	58 00 00 a0 	load_u8 s2, (s24)
   14a78:	42 80 51 c0 	add_i s2, s2, s3
   14a7c:	58 00 00 82 	store_8 s2, (s24)
   14a80:	5b 04 00 4f 	movehi s2, 59
   14a84:	78 04 00 a0 	load_u8 s3, 1(s24)
   14a88:	42 80 18 00 	or s2, s2, 1568
   14a8c:	23 80 50 c0 	add_i s1, s3, s1
   14a90:	38 04 00 82 	store_8 s1, 1(s24)
   14a94:	22 00 00 a8 	load_32 s1, (s2)
   14a98:	81 00 00 f2 	bz s1, 16 <G_BuildTiccmd+0x88c>
   14a9c:	02 00 00 88 	store_32 s0, (s2)
   14aa0:	20 04 02 0f 	move s1, 129
   14aa4:	38 1c 00 82 	store_8 s1, 7(s24)
   14aa8:	3b 04 00 4f 	movehi s1, 59
   14aac:	21 90 18 00 	or s1, s1, 1572
   14ab0:	41 00 00 a8 	load_32 s2, (s1)
   14ab4:	02 01 00 f2 	bz s2, 32 <G_BuildTiccmd+0x8b8>
   14ab8:	5b 04 00 4f 	movehi s2, 59
   14abc:	01 00 00 88 	store_32 s0, (s1)
   14ac0:	42 60 14 00 	or s2, s2, 1304
   14ac4:	02 00 00 a0 	load_u8 s0, (s2)
   14ac8:	00 08 00 0b 	shl s0, s0, 2
   14acc:	00 08 02 00 	or s0, s0, 130
   14ad0:	18 1c 00 82 	store_8 s0, 7(s24)
   14ad4:	fe b3 00 a8 	load_32 ra, 44(sp)
   14ad8:	7e c3 00 a8 	load_32 s27, 48(sp)
   14adc:	5e d3 00 a8 	load_32 s26, 52(sp)
   14ae0:	3e e3 00 a8 	load_32 s25, 56(sp)
   14ae4:	1e f3 00 a8 	load_32 s24, 60(sp)
   14ae8:	de 03 01 05 	add_i sp, sp, 64
   14aec:	1f 00 00 f0 	ret
   14af0:	1b 80 03 a8 	load_32 s0, 224(s27)
   14af4:	fe 90 00 a8 	load_32 s7, 36(sp)
   14af8:	20 e9 ff f3 	bz s0, -732 <G_BuildTiccmd+0x600>
   14afc:	00 e0 00 0f 	move s0, 56
   14b00:	43 ff ff f7 	b -756 <G_BuildTiccmd+0x5f0>

0000000000014b04 G_DoLoadLevel:
   14b04:	de 03 ff 05 	add_i sp, sp, -64
   14b08:	1e f3 00 88 	store_32 s24, 60(sp)
   14b0c:	fe e3 00 88 	store_32 ra, 56(sp)
   14b10:	01 00 00 4f 	movehi s0, 1
   14b14:	00 98 33 00 	or s0, s0, 3302
   14b18:	01 8b 00 f8 	call 142340 <R_FlatNumForName>
   14b1c:	32 08 00 4f 	movehi s1, 82
   14b20:	4b 04 00 4f 	movehi s2, 43
   14b24:	21 70 4b 00 	or s1, s1, 4828
   14b28:	42 00 40 00 	or s2, s2, 4096
   14b2c:	01 00 00 88 	store_32 s0, (s1)
   14b30:	02 00 00 a8 	load_32 s0, (s2)
   14b34:	00 04 00 00 	or s0, s0, 1
   14b38:	00 0c 00 11 	cmpne_i s0, s0, 3
   14b3c:	a0 02 00 f4 	bnz s0, 84 <G_DoLoadLevel+0x8c>
   14b40:	00 00 00 4f 	movehi s0, 0
   14b44:	00 f8 1e 00 	or s0, s0, 1982
   14b48:	54 8b 00 f8 	call 142672 <R_TextureNumForName>
   14b4c:	32 08 00 4f 	movehi s1, 82
   14b50:	5a 04 00 4f 	movehi s2, 58
   14b54:	01 83 4b 00 	or s24, s1, 4832
   14b58:	22 80 7f 00 	or s1, s2, 8160
   14b5c:	18 00 00 88 	store_32 s0, (s24)
   14b60:	01 00 00 a8 	load_32 s0, (s1)
   14b64:	20 2c 00 12 	cmpgt_i s1, s0, 11
   14b68:	81 00 00 f4 	bnz s1, 16 <G_DoLoadLevel+0x74>
   14b6c:	02 00 00 4f 	movehi s0, 2
   14b70:	00 6c 41 00 	or s0, s0, 4187
   14b74:	05 00 00 f6 	b 20 <G_DoLoadLevel+0x84>
   14b78:	00 50 00 12 	cmpgt_i s0, s0, 20
   14b7c:	a0 00 00 f4 	bnz s0, 20 <G_DoLoadLevel+0x8c>
   14b80:	02 00 00 4f 	movehi s0, 2
   14b84:	00 78 7c 00 	or s0, s0, 7966
   14b88:	44 8b 00 f8 	call 142608 <R_TextureNumForName>
   14b8c:	18 00 00 88 	store_32 s0, (s24)
   14b90:	1a 04 00 4f 	movehi s0, 58
   14b94:	3b 04 00 4f 	movehi s1, 59
   14b98:	53 04 00 4f 	movehi s2, 51
   14b9c:	60 b0 7f 00 	or s3, s0, 8172
   14ba0:	21 10 01 00 	or s1, s1, 68
   14ba4:	02 50 45 00 	or s0, s2, 4436
   14ba8:	43 00 00 a8 	load_32 s2, (s3)
   14bac:	41 00 00 88 	store_32 s2, (s1)
   14bb0:	20 00 00 a8 	load_32 s1, (s0)
   14bb4:	61 00 00 f4 	bnz s1, 12 <G_DoLoadLevel+0xbc>
   14bb8:	20 fc ff 0f 	move s1, -1
   14bbc:	20 00 00 88 	store_32 s1, (s0)
   14bc0:	1a 04 00 4f 	movehi s0, 58
   14bc4:	3b 04 00 4f 	movehi s1, 59
   14bc8:	5b 04 00 4f 	movehi s2, 59
   14bcc:	00 a0 7f 00 	or s0, s0, 8168
   14bd0:	00 03 00 0f 	move s24, 0
   14bd4:	21 00 02 00 	or s1, s1, 128
   14bd8:	00 03 00 88 	store_32 s24, (s0)
   14bdc:	02 40 02 00 	or s0, s2, 144
   14be0:	61 00 00 a8 	load_32 s3, (s1)
   14be4:	40 10 00 a8 	load_32 s2, 4(s0)
   14be8:	a3 00 00 f2 	bz s3, 20 <G_DoLoadLevel+0xf8>
   14bec:	42 04 00 11 	cmpne_i s2, s2, 1
   14bf0:	62 00 00 f4 	bnz s2, 12 <G_DoLoadLevel+0xf8>
   14bf4:	40 08 00 0f 	move s2, 2
   14bf8:	40 10 00 88 	store_32 s2, 4(s0)
   14bfc:	00 b3 01 88 	store_32 s24, 108(s0)
   14c00:	00 a3 01 88 	store_32 s24, 104(s0)
   14c04:	00 93 01 88 	store_32 s24, 100(s0)
   14c08:	00 83 01 88 	store_32 s24, 96(s0)
   14c0c:	61 10 00 a8 	load_32 s3, 4(s1)
   14c10:	40 70 04 a8 	load_32 s2, 284(s0)
   14c14:	a3 00 00 f2 	bz s3, 20 <G_DoLoadLevel+0x124>
   14c18:	42 04 00 11 	cmpne_i s2, s2, 1
   14c1c:	62 00 00 f4 	bnz s2, 12 <G_DoLoadLevel+0x124>
   14c20:	40 08 00 0f 	move s2, 2
   14c24:	40 70 04 88 	store_32 s2, 284(s0)
   14c28:	00 13 06 88 	store_32 s24, 388(s0)
   14c2c:	00 03 06 88 	store_32 s24, 384(s0)
   14c30:	00 f3 05 88 	store_32 s24, 380(s0)
   14c34:	00 e3 05 88 	store_32 s24, 376(s0)
   14c38:	61 20 00 a8 	load_32 s3, 8(s1)
   14c3c:	40 d0 08 a8 	load_32 s2, 564(s0)
   14c40:	a3 00 00 f2 	bz s3, 20 <G_DoLoadLevel+0x150>
   14c44:	42 04 00 11 	cmpne_i s2, s2, 1
   14c48:	62 00 00 f4 	bnz s2, 12 <G_DoLoadLevel+0x150>
   14c4c:	40 08 00 0f 	move s2, 2
   14c50:	40 d0 08 88 	store_32 s2, 564(s0)
   14c54:	00 73 0a 88 	store_32 s24, 668(s0)
   14c58:	00 63 0a 88 	store_32 s24, 664(s0)
   14c5c:	00 53 0a 88 	store_32 s24, 660(s0)
   14c60:	00 43 0a 88 	store_32 s24, 656(s0)
   14c64:	41 30 00 a8 	load_32 s2, 12(s1)
   14c68:	20 30 0d a8 	load_32 s1, 844(s0)
   14c6c:	a2 00 00 f2 	bz s2, 20 <G_DoLoadLevel+0x17c>
   14c70:	21 04 00 11 	cmpne_i s1, s1, 1
   14c74:	61 00 00 f4 	bnz s1, 12 <G_DoLoadLevel+0x17c>
   14c78:	20 08 00 0f 	move s1, 2
   14c7c:	20 30 0d 88 	store_32 s1, 844(s0)
   14c80:	3a 04 00 4f 	movehi s1, 58
   14c84:	00 d3 0e 88 	store_32 s24, 948(s0)
   14c88:	5a 04 00 4f 	movehi s2, 58
   14c8c:	00 c3 0e 88 	store_32 s24, 944(s0)
   14c90:	00 b3 0e 88 	store_32 s24, 940(s0)
   14c94:	00 a3 0e 88 	store_32 s24, 936(s0)
   14c98:	1a 04 00 4f 	movehi s0, 58
   14c9c:	21 80 7f 00 	or s1, s1, 8160
   14ca0:	42 90 7f 00 	or s2, s2, 8164
   14ca4:	00 70 6f 00 	or s0, s0, 7132
   14ca8:	00 00 00 a8 	load_32 s0, (s0)
   14cac:	21 00 00 a8 	load_32 s1, (s1)
   14cb0:	62 00 00 a8 	load_32 s3, (s2)
   14cb4:	40 00 fc c0 	move s2, s24
   14cb8:	be 67 00 f8 	call 106232 <P_SetupLevel>
   14cbc:	1a 04 00 4f 	movehi s0, 58
   14cc0:	3a 04 00 4f 	movehi s1, 58
   14cc4:	00 c0 6d 00 	or s0, s0, 7024
   14cc8:	21 50 6f 00 	or s1, s1, 7124
   14ccc:	00 00 00 a8 	load_32 s0, (s0)
   14cd0:	01 00 00 88 	store_32 s0, (s1)
   14cd4:	e0 e4 ff f9 	call -27776 <I_GetTime>
   14cd8:	3b 04 00 4f 	movehi s1, 59
   14cdc:	5a 04 00 4f 	movehi s2, 58
   14ce0:	21 b0 18 00 	or s1, s1, 1580
   14ce4:	42 60 6f 00 	or s2, s2, 7128
   14ce8:	01 00 00 88 	store_32 s0, (s1)
   14cec:	02 03 00 88 	store_32 s24, (s2)
   14cf0:	da e0 00 f8 	call 230248 <Z_CheckHeap>
   14cf4:	1a 04 00 4f 	movehi s0, 58
   14cf8:	40 00 10 0f 	move s2, 1024
   14cfc:	20 00 fc c0 	move s1, s24
   14d00:	00 80 6f 00 	or s0, s0, 7136
   14d04:	68 f3 00 f8 	call 249248 <memset>
   14d08:	1b 04 00 4f 	movehi s0, 59
   14d0c:	3b 04 00 4f 	movehi s1, 59
   14d10:	5b 04 00 4f 	movehi s2, 59
   14d14:	00 60 00 00 	or s0, s0, 24
   14d18:	21 50 00 00 	or s1, s1, 20
   14d1c:	00 03 00 88 	store_32 s24, (s0)
   14d20:	1b 04 00 4f 	movehi s0, 59
   14d24:	01 03 00 88 	store_32 s24, (s1)
   14d28:	3b 04 00 4f 	movehi s1, 59
   14d2c:	00 a0 01 00 	or s0, s0, 104
   14d30:	21 90 01 00 	or s1, s1, 100
   14d34:	00 03 00 88 	store_32 s24, (s0)
   14d38:	02 f0 01 00 	or s0, s2, 124
   14d3c:	01 03 00 88 	store_32 s24, (s1)
   14d40:	3b 04 00 4f 	movehi s1, 59
   14d44:	5b 04 00 4f 	movehi s2, 59
   14d48:	00 03 00 88 	store_32 s24, (s0)
   14d4c:	1b 04 00 4f 	movehi s0, 59
   14d50:	21 90 18 00 	or s1, s1, 1572
   14d54:	00 80 18 00 	or s0, s0, 1568
   14d58:	01 03 00 88 	store_32 s24, (s1)
   14d5c:	22 20 01 00 	or s1, s2, 72
   14d60:	00 03 00 88 	store_32 s24, (s0)
   14d64:	1a 04 00 4f 	movehi s0, 58
   14d68:	01 03 00 88 	store_32 s24, (s1)
   14d6c:	01 13 00 88 	store_32 s24, 4(s1)
   14d70:	00 c0 7f 00 	or s0, s0, 8176
   14d74:	01 23 00 88 	store_32 s24, 8(s1)
   14d78:	01 33 00 88 	store_32 s24, 12(s1)
   14d7c:	00 03 00 88 	store_32 s24, (s0)
   14d80:	00 13 00 88 	store_32 s24, 4(s0)
   14d84:	00 23 00 88 	store_32 s24, 8(s0)
   14d88:	00 33 00 88 	store_32 s24, 12(s0)
   14d8c:	00 43 00 88 	store_32 s24, 16(s0)
   14d90:	fe e3 00 a8 	load_32 ra, 56(sp)
   14d94:	1e f3 00 a8 	load_32 s24, 60(sp)
   14d98:	de 03 01 05 	add_i sp, sp, 64
   14d9c:	1f 00 00 f0 	ret

0000000000014da0 G_Responder:
   14da0:	de 03 ff 05 	add_i sp, sp, -64
   14da4:	1e f3 00 88 	store_32 s24, 60(sp)
   14da8:	3e e3 00 88 	store_32 s25, 56(sp)
   14dac:	5e d3 00 88 	store_32 s26, 52(sp)
   14db0:	fe c3 00 88 	store_32 ra, 48(sp)
   14db4:	3a 04 00 4f 	movehi s1, 58
   14db8:	41 a3 7f 00 	or s26, s1, 8168
   14dbc:	3a 00 00 a8 	load_32 s1, (s26)
   14dc0:	00 03 f0 c0 	move s24, s0
   14dc4:	e1 01 00 f4 	bnz s1, 60 <G_Responder+0x60>
   14dc8:	18 00 00 a8 	load_32 s0, (s24)
   14dcc:	a0 01 00 f4 	bnz s0, 52 <G_Responder+0x60>
   14dd0:	18 10 00 a8 	load_32 s0, 4(s24)
   14dd4:	00 60 03 11 	cmpne_i s0, s0, 216
   14dd8:	40 01 00 f4 	bnz s0, 40 <G_Responder+0x60>
   14ddc:	1b 04 00 4f 	movehi s0, 59
   14de0:	5a 04 00 4f 	movehi s2, 58
   14de4:	00 a0 18 00 	or s0, s0, 1576
   14de8:	42 60 6e 00 	or s2, s2, 7064
   14dec:	60 00 00 a8 	load_32 s3, (s0)
   14df0:	02 00 00 a8 	load_32 s0, (s2)
   14df4:	63 11 00 f4 	bnz s3, 556 <G_Responder+0x280>
   14df8:	40 00 00 f4 	bnz s0, 8 <G_Responder+0x60>
   14dfc:	89 00 00 f6 	b 548 <G_Responder+0x280>
   14e00:	1a 04 00 4f 	movehi s0, 58
   14e04:	5b 04 00 4f 	movehi s2, 59
   14e08:	00 60 6f 00 	or s0, s0, 7128
   14e0c:	42 a0 18 00 	or s2, s2, 1576
   14e10:	00 00 00 a8 	load_32 s0, (s0)
   14e14:	42 00 00 a8 	load_32 s2, (s2)
   14e18:	02 00 00 c0 	or s0, s2, s0
   14e1c:	00 01 00 f4 	bnz s0, 32 <G_Responder+0x9c>
   14e20:	1a 04 00 4f 	movehi s0, 58
   14e24:	41 0c 00 10 	cmpeq_i s2, s1, 3
   14e28:	00 30 6f 00 	or s0, s0, 7116
   14e2c:	00 00 00 a8 	load_32 s0, (s0)
   14e30:	02 05 00 f4 	bnz s2, 160 <G_Responder+0x130>
   14e34:	40 00 00 f2 	bz s0, 8 <G_Responder+0x9c>
   14e38:	26 00 00 f6 	b 152 <G_Responder+0x130>
   14e3c:	41 00 00 f4 	bnz s1, 8 <G_Responder+0xa4>
   14e40:	16 00 00 f6 	b 88 <G_Responder+0xf8>
   14e44:	01 08 00 11 	cmpne_i s0, s1, 2
   14e48:	80 00 00 f4 	bnz s0, 16 <G_Responder+0xb8>
   14e4c:	00 00 fc c0 	move s0, s24
   14e50:	e1 e6 ff f9 	call -25724 <F_Responder>
   14e54:	60 12 00 f4 	bnz s0, 588 <G_Responder+0x300>
   14e58:	18 00 00 a8 	load_32 s0, (s24)
   14e5c:	20 03 00 0f 	move s25, 0
   14e60:	20 0c 00 16 	cmpgt_u s1, s0, 3
   14e64:	01 12 00 f4 	bnz s1, 576 <G_Responder+0x304>
   14e68:	23 00 00 4f 	movehi s1, 3
   14e6c:	00 08 00 0b 	shl s0, s0, 2
   14e70:	21 c0 2e 00 	or s1, s1, 2992
   14e74:	00 80 50 c0 	add_i s0, s0, s1
   14e78:	00 00 00 a8 	load_32 s0, (s0)
   14e7c:	00 00 00 f0 	b s0
   14e80:	18 10 00 a8 	load_32 s0, 4(s24)
   14e84:	20 fc 03 11 	cmpne_i s1, s0, 255
   14e88:	a1 0f 00 f4 	bnz s1, 500 <G_Responder+0x2dc>
   14e8c:	1b 04 00 4f 	movehi s0, 59
   14e90:	00 80 18 00 	or s0, s0, 1568
   14e94:	80 00 00 f6 	b 512 <G_Responder+0x2f4>
   14e98:	00 00 fc c0 	move s0, s24
   14e9c:	85 d6 00 f8 	call 219668 <HU_Responder>
   14ea0:	20 07 00 0f 	move s25, 1
   14ea4:	00 10 00 f4 	bnz s0, 512 <G_Responder+0x304>
   14ea8:	00 00 fc c0 	move s0, s24
   14eac:	85 c7 00 f8 	call 204308 <ST_Responder>
   14eb0:	a0 0f 00 f4 	bnz s0, 500 <G_Responder+0x304>
   14eb4:	00 00 fc c0 	move s0, s24
   14eb8:	43 22 00 f8 	call 35084 <AM_Responder>
   14ebc:	40 0f 00 f4 	bnz s0, 488 <G_Responder+0x304>
   14ec0:	3a 00 00 a8 	load_32 s1, (s26)
   14ec4:	01 08 00 11 	cmpne_i s0, s1, 2
   14ec8:	80 fc ff f5 	bnz s0, -112 <G_Responder+0xb8>
   14ecc:	e0 ff ff f7 	b -128 <G_Responder+0xac>
   14ed0:	18 00 00 a8 	load_32 s0, (s24)
   14ed4:	00 01 00 f2 	bz s0, 32 <G_Responder+0x154>
   14ed8:	20 0c 00 10 	cmpeq_i s1, s0, 3
   14edc:	20 03 00 0f 	move s25, 0
   14ee0:	61 00 00 f4 	bnz s1, 12 <G_Responder+0x14c>
   14ee4:	00 08 00 11 	cmpne_i s0, s0, 2
   14ee8:	e0 0d 00 f4 	bnz s0, 444 <G_Responder+0x304>
   14eec:	18 10 00 a8 	load_32 s0, 4(s24)
   14ef0:	a0 0d 00 f2 	bz s0, 436 <G_Responder+0x304>
   14ef4:	04 14 00 f8 	call 20496 <M_StartControlPanel>
   14ef8:	6a 00 00 f6 	b 424 <G_Responder+0x300>
   14efc:	18 10 00 a8 	load_32 s0, 4(s24)
   14f00:	20 fc 03 12 	cmpgt_i s1, s0, 255
   14f04:	01 0d 00 f4 	bnz s1, 416 <G_Responder+0x304>
   14f08:	3a 04 00 4f 	movehi s1, 58
   14f0c:	00 08 00 0b 	shl s0, s0, 2
   14f10:	20 03 00 0f 	move s25, 0
   14f14:	21 80 6f 00 	or s1, s1, 7136
   14f18:	01 00 50 c0 	add_i s0, s1, s0
   14f1c:	20 03 00 88 	store_32 s25, (s0)
   14f20:	61 00 00 f6 	b 388 <G_Responder+0x304>
   14f24:	13 04 00 4f 	movehi s0, 51
   14f28:	38 10 00 a8 	load_32 s1, 4(s24)
   14f2c:	7b 04 00 4f 	movehi s3, 59
   14f30:	00 50 49 00 	or s0, s0, 4692
   14f34:	21 04 00 01 	and s1, s1, 1
   14f38:	63 90 01 00 	or s3, s3, 100
   14f3c:	40 00 00 a8 	load_32 s2, (s0)
   14f40:	22 00 00 88 	store_32 s1, (s2)
   14f44:	5b 04 00 4f 	movehi s2, 59
   14f48:	38 10 00 a8 	load_32 s1, 4(s24)
   14f4c:	00 00 00 a8 	load_32 s0, (s0)
   14f50:	42 e0 1f 00 	or s2, s2, 2040
   14f54:	21 08 00 01 	and s1, s1, 2
   14f58:	20 10 00 88 	store_32 s1, 4(s0)
   14f5c:	38 10 00 a8 	load_32 s1, 4(s24)
   14f60:	21 10 00 01 	and s1, s1, 4
   14f64:	20 20 00 88 	store_32 s1, 8(s0)
   14f68:	18 20 00 a8 	load_32 s0, 8(s24)
   14f6c:	22 00 00 a8 	load_32 s1, (s2)
   14f70:	53 64 66 4f 	movehi s2, 209715
   14f74:	42 9c 19 00 	or s2, s2, 1639
   14f78:	21 14 00 05 	add_i s1, s1, 5
   14f7c:	01 00 70 c0 	mull_i s0, s1, s0
   14f80:	00 00 f1 c1 	mulh_i s0, s0, s2
   14f84:	80 08 00 09 	ashr s4, s0, 2
   14f88:	00 7c 00 0a 	shr s0, s0, 31
   14f8c:	04 00 50 c0 	add_i s0, s4, s0
   14f90:	03 00 00 88 	store_32 s0, (s3)
   14f94:	18 30 00 a8 	load_32 s0, 12(s24)
   14f98:	00 80 70 c0 	mull_i s0, s0, s1
   14f9c:	3b 04 00 4f 	movehi s1, 59
   14fa0:	00 00 f1 c1 	mulh_i s0, s0, s2
   14fa4:	21 a0 01 00 	or s1, s1, 104
   14fa8:	40 08 00 09 	ashr s2, s0, 2
   14fac:	00 7c 00 0a 	shr s0, s0, 31
   14fb0:	02 00 50 c0 	add_i s0, s2, s0
   14fb4:	01 00 00 88 	store_32 s0, (s1)
   14fb8:	3a 00 00 f6 	b 232 <G_Responder+0x300>
   14fbc:	13 04 00 4f 	movehi s0, 51
   14fc0:	38 10 00 a8 	load_32 s1, 4(s24)
   14fc4:	00 60 49 00 	or s0, s0, 4696
   14fc8:	21 04 00 01 	and s1, s1, 1
   14fcc:	40 00 00 a8 	load_32 s2, (s0)
   14fd0:	22 00 00 88 	store_32 s1, (s2)
   14fd4:	5b 04 00 4f 	movehi s2, 59
   14fd8:	38 10 00 a8 	load_32 s1, 4(s24)
   14fdc:	00 00 00 a8 	load_32 s0, (s0)
   14fe0:	21 08 00 01 	and s1, s1, 2
   14fe4:	20 10 00 88 	store_32 s1, 4(s0)
   14fe8:	38 10 00 a8 	load_32 s1, 4(s24)
   14fec:	21 10 00 01 	and s1, s1, 4
   14ff0:	20 20 00 88 	store_32 s1, 8(s0)
   14ff4:	38 10 00 a8 	load_32 s1, 4(s24)
   14ff8:	21 20 00 01 	and s1, s1, 8
   14ffc:	20 30 00 88 	store_32 s1, 12(s0)
   15000:	1b 04 00 4f 	movehi s0, 59
   15004:	22 50 00 00 	or s1, s2, 20
   15008:	58 20 00 a8 	load_32 s2, 8(s24)
   1500c:	00 60 00 00 	or s0, s0, 24
   15010:	41 00 00 88 	store_32 s2, (s1)
   15014:	38 30 00 a8 	load_32 s1, 12(s24)
   15018:	20 00 00 88 	store_32 s1, (s0)
   1501c:	21 00 00 f6 	b 132 <G_Responder+0x300>
   15020:	1a 04 00 4f 	movehi s0, 58
   15024:	3a 04 00 4f 	movehi s1, 58
   15028:	7b 04 00 4f 	movehi s3, 59
   1502c:	40 c0 6d 00 	or s2, s0, 7024
   15030:	01 50 6f 00 	or s0, s1, 7124
   15034:	63 00 02 00 	or s3, s3, 128
   15038:	22 00 00 a8 	load_32 s1, (s2)
   1503c:	40 00 00 0f 	move s2, 0
   15040:	80 00 00 a8 	load_32 s4, (s0)
   15044:	a4 04 00 05 	add_i s5, s4, 1
   15048:	80 00 f1 c0 	move s4, s2
   1504c:	c5 10 00 10 	cmpeq_i s6, s5, 4
   15050:	46 00 00 f4 	bnz s6, 8 <G_Responder+0x2b8>
   15054:	80 80 f2 c0 	move s4, s5
   15058:	a4 08 00 0b 	shl s5, s4, 2
   1505c:	a3 80 52 c0 	add_i s5, s3, s5
   15060:	a5 00 00 a8 	load_32 s5, (s5)
   15064:	85 00 00 f4 	bnz s5, 16 <G_Responder+0x2d4>
   15068:	a4 80 00 c1 	cmpeq_i s5, s4, s1
   1506c:	45 00 00 f4 	bnz s5, 8 <G_Responder+0x2d4>
   15070:	f5 ff ff f7 	b -44 <G_Responder+0x2a4>
   15074:	80 00 00 88 	store_32 s4, (s0)
   15078:	0a 00 00 f6 	b 40 <G_Responder+0x300>
   1507c:	20 fc 03 12 	cmpgt_i s1, s0, 255
   15080:	01 01 00 f4 	bnz s1, 32 <G_Responder+0x300>
   15084:	3a 04 00 4f 	movehi s1, 58
   15088:	00 08 00 0b 	shl s0, s0, 2
   1508c:	21 80 6f 00 	or s1, s1, 7136
   15090:	01 00 50 c0 	add_i s0, s1, s0
   15094:	20 07 00 0f 	move s25, 1
   15098:	20 03 00 88 	store_32 s25, (s0)
   1509c:	02 00 00 f6 	b 8 <G_Responder+0x304>
   150a0:	20 07 00 0f 	move s25, 1
   150a4:	00 80 fc c0 	move s0, s25
   150a8:	fe c3 00 a8 	load_32 ra, 48(sp)
   150ac:	5e d3 00 a8 	load_32 s26, 52(sp)
   150b0:	3e e3 00 a8 	load_32 s25, 56(sp)
   150b4:	1e f3 00 a8 	load_32 s24, 60(sp)
   150b8:	de 03 01 05 	add_i sp, sp, 64
   150bc:	1f 00 00 f0 	ret

00000000000150c0 G_Ticker:
   150c0:	de 03 fd 05 	add_i sp, sp, -192
   150c4:	1e f3 02 88 	store_32 s24, 188(sp)
   150c8:	3e e3 02 88 	store_32 s25, 184(sp)
   150cc:	5e d3 02 88 	store_32 s26, 180(sp)
   150d0:	7e c3 02 88 	store_32 s27, 176(sp)
   150d4:	fe b3 02 88 	store_32 ra, 172(sp)
   150d8:	1b 04 00 4f 	movehi s0, 59
   150dc:	3b 04 00 4f 	movehi s1, 59
   150e0:	40 00 02 00 	or s2, s0, 128
   150e4:	5e a0 02 88 	store_32 s2, 168(sp)
   150e8:	01 40 02 00 	or s0, s1, 144
   150ec:	22 00 00 a8 	load_32 s1, (s2)
   150f0:	1e 80 02 88 	store_32 s0, 160(sp)
   150f4:	00 10 00 a8 	load_32 s0, 4(s0)
   150f8:	a1 00 00 f2 	bz s1, 20 <G_Ticker+0x4c>
   150fc:	00 08 00 11 	cmpne_i s0, s0, 2
   15100:	60 00 00 f4 	bnz s0, 12 <G_Ticker+0x4c>
   15104:	00 00 00 0f 	move s0, 0
   15108:	1a 02 00 f8 	call 2152 <G_DoReborn>
   1510c:	1e a0 02 a8 	load_32 s0, 168(sp)
   15110:	20 10 00 a8 	load_32 s1, 4(s0)
   15114:	1e 80 02 a8 	load_32 s0, 160(sp)
   15118:	00 70 04 a8 	load_32 s0, 284(s0)
   1511c:	c1 00 00 f2 	bz s1, 24 <G_Ticker+0x74>
   15120:	00 08 00 10 	cmpeq_i s0, s0, 2
   15124:	40 00 00 f4 	bnz s0, 8 <G_Ticker+0x6c>
   15128:	03 00 00 f6 	b 12 <G_Ticker+0x74>
   1512c:	00 04 00 0f 	move s0, 1
   15130:	10 02 00 f8 	call 2112 <G_DoReborn>
   15134:	1e a0 02 a8 	load_32 s0, 168(sp)
   15138:	20 20 00 a8 	load_32 s1, 8(s0)
   1513c:	1e 80 02 a8 	load_32 s0, 160(sp)
   15140:	00 d0 08 a8 	load_32 s0, 564(s0)
   15144:	a1 00 00 f2 	bz s1, 20 <G_Ticker+0x98>
   15148:	00 08 00 11 	cmpne_i s0, s0, 2
   1514c:	60 00 00 f4 	bnz s0, 12 <G_Ticker+0x98>
   15150:	00 08 00 0f 	move s0, 2
   15154:	07 02 00 f8 	call 2076 <G_DoReborn>
   15158:	1e a0 02 a8 	load_32 s0, 168(sp)
   1515c:	20 30 00 a8 	load_32 s1, 12(s0)
   15160:	1e 80 02 a8 	load_32 s0, 160(sp)
   15164:	00 30 0d a8 	load_32 s0, 844(s0)
   15168:	e1 00 00 f2 	bz s1, 28 <G_Ticker+0xc4>
   1516c:	00 08 00 11 	cmpne_i s0, s0, 2
   15170:	a0 00 00 f4 	bnz s0, 20 <G_Ticker+0xc4>
   15174:	00 0c 00 0f 	move s0, 3
   15178:	fe 01 00 f8 	call 2040 <G_DoReborn>
   1517c:	02 00 00 f6 	b 8 <G_Ticker+0xc4>
   15180:	61 fe ff f9 	call -1660 <G_DoLoadLevel>
   15184:	1a 04 00 4f 	movehi s0, 58
   15188:	20 63 6f 00 	or s25, s0, 7128
   1518c:	19 00 00 a8 	load_32 s0, (s25)
   15190:	20 24 00 16 	cmpgt_u s1, s0, 9
   15194:	81 ff ff f5 	bnz s1, -16 <G_Ticker+0xc4>
   15198:	23 00 00 4f 	movehi s1, 3
   1519c:	00 08 00 0b 	shl s0, s0, 2
   151a0:	21 00 2f 00 	or s1, s1, 3008
   151a4:	00 80 50 c0 	add_i s0, s0, s1
   151a8:	00 00 00 a8 	load_32 s0, (s0)
   151ac:	00 00 00 f0 	b s0
   151b0:	1a 04 00 4f 	movehi s0, 58
   151b4:	3b 04 00 4f 	movehi s1, 59
   151b8:	00 03 00 0f 	move s24, 0
   151bc:	00 30 6f 00 	or s0, s0, 7116
   151c0:	21 b0 01 00 	or s1, s1, 108
   151c4:	5a 04 00 4f 	movehi s2, 58
   151c8:	00 03 00 88 	store_32 s24, (s0)
   151cc:	1b 04 00 4f 	movehi s0, 59
   151d0:	01 03 00 88 	store_32 s24, (s1)
   151d4:	22 60 6e 00 	or s1, s2, 7064
   151d8:	00 c0 01 00 	or s0, s0, 112
   151dc:	5a 04 00 4f 	movehi s2, 58
   151e0:	00 03 00 88 	store_32 s24, (s0)
   151e4:	1a 04 00 4f 	movehi s0, 58
   151e8:	01 03 00 88 	store_32 s24, (s1)
   151ec:	42 c0 6d 00 	or s2, s2, 7024
   151f0:	3e a0 02 a8 	load_32 s1, 168(sp)
   151f4:	00 60 48 00 	or s0, s0, 4632
   151f8:	01 33 00 88 	store_32 s24, 12(s1)
   151fc:	01 23 00 88 	store_32 s24, 8(s1)
   15200:	01 13 00 88 	store_32 s24, 4(s1)
   15204:	3a 04 00 4f 	movehi s1, 58
   15208:	00 03 00 88 	store_32 s24, (s0)
   1520c:	1a 04 00 4f 	movehi s0, 58
   15210:	21 30 48 00 	or s1, s1, 4620
   15214:	00 20 38 00 	or s0, s0, 3592
   15218:	00 03 00 88 	store_32 s24, (s0)
   1521c:	1a 04 00 4f 	movehi s0, 58
   15220:	01 03 00 88 	store_32 s24, (s1)
   15224:	3a 04 00 4f 	movehi s1, 58
   15228:	02 03 00 88 	store_32 s24, (s2)
   1522c:	5a 04 00 4f 	movehi s2, 58
   15230:	00 f0 6d 00 	or s0, s0, 7036
   15234:	21 d0 6d 00 	or s1, s1, 7028
   15238:	42 e0 6d 00 	or s2, s2, 7032
   1523c:	00 00 00 a8 	load_32 s0, (s0)
   15240:	21 00 00 a8 	load_32 s1, (s1)
   15244:	42 00 00 a8 	load_32 s2, (s2)
   15248:	e8 07 00 f8 	call 8096 <G_InitNew>
   1524c:	19 03 00 88 	store_32 s24, (s25)
   15250:	cd ff ff f7 	b -204 <G_Ticker+0xc4>
   15254:	58 02 00 f8 	call 2400 <G_DoLoadGame>
   15258:	cb ff ff f7 	b -212 <G_Ticker+0xc4>
   1525c:	c1 02 00 f8 	call 2820 <G_DoSaveGame>
   15260:	c9 ff ff f7 	b -220 <G_Ticker+0xc4>
   15264:	4d 03 00 f8 	call 3380 <G_DoPlayDemo>
   15268:	c7 ff ff f7 	b -228 <G_Ticker+0xc4>
   1526c:	b1 03 00 f8 	call 3780 <G_DoCompleted>
   15270:	c5 ff ff f7 	b -236 <G_Ticker+0xc4>
   15274:	39 e5 ff f9 	call -27420 <F_StartFinale>
   15278:	c3 ff ff f7 	b -244 <G_Ticker+0xc4>
   1527c:	1a 04 00 4f 	movehi s0, 58
   15280:	3b 04 00 4f 	movehi s1, 59
   15284:	00 03 00 0f 	move s24, 0
   15288:	00 a0 7f 00 	or s0, s0, 8168
   1528c:	21 40 19 00 	or s1, s1, 1616
   15290:	00 03 00 88 	store_32 s24, (s0)
   15294:	1a 04 00 4f 	movehi s0, 58
   15298:	21 30 00 a8 	load_32 s1, 12(s1)
   1529c:	00 80 7f 00 	or s0, s0, 8160
   152a0:	21 04 00 05 	add_i s1, s1, 1
   152a4:	20 00 00 88 	store_32 s1, (s0)
   152a8:	17 fe ff f9 	call -1956 <G_DoLoadLevel>
   152ac:	1b 04 00 4f 	movehi s0, 59
   152b0:	19 03 00 88 	store_32 s24, (s25)
   152b4:	20 04 00 0f 	move s1, 1
   152b8:	00 30 19 00 	or s0, s0, 1612
   152bc:	20 00 00 88 	store_32 s1, (s0)
   152c0:	b1 ff ff f7 	b -316 <G_Ticker+0xc4>
   152c4:	fb 1a 00 f8 	call 27628 <M_ScreenShot>
   152c8:	00 00 00 0f 	move s0, 0
   152cc:	19 00 00 88 	store_32 s0, (s25)
   152d0:	ad ff ff f7 	b -332 <G_Ticker+0xc4>
   152d4:	1a 04 00 4f 	movehi s0, 58
   152d8:	3e 83 01 88 	store_32 s25, 96(sp)
   152dc:	3a 04 00 4f 	movehi s1, 58
   152e0:	00 b0 7f 00 	or s0, s0, 8172
   152e4:	1e 10 02 88 	store_32 s0, 132(sp)
   152e8:	21 20 6a 00 	or s1, s1, 6792
   152ec:	00 00 00 a8 	load_32 s0, (s0)
   152f0:	3e 00 02 88 	store_32 s1, 128(sp)
   152f4:	21 00 00 a8 	load_32 s1, (s1)
   152f8:	d8 fd 00 f8 	call 259936 <__divsi3>
   152fc:	35 a8 2a 4f 	movehi s1, 87381
   15300:	74 04 00 4f 	movehi s3, 52
   15304:	40 03 00 0f 	move s26, 0
   15308:	21 ac 2a 00 	or s1, s1, 2731
   1530c:	20 80 f0 c1 	mulh_i s1, s0, s1
   15310:	41 04 00 09 	ashr s2, s1, 1
   15314:	21 7c 00 0a 	shr s1, s1, 31
   15318:	22 80 50 c0 	add_i s1, s2, s1
   1531c:	5a 04 00 4f 	movehi s2, 58
   15320:	21 30 00 07 	mull_i s1, s1, 12
   15324:	00 80 60 c0 	sub_i s0, s0, s1
   15328:	22 90 5f 00 	or s1, s2, 6116
   1532c:	3e 70 02 88 	store_32 s1, 156(sp)
   15330:	5a 04 00 4f 	movehi s2, 58
   15334:	20 0c 00 0b 	shl s1, s0, 3
   15338:	3e 60 02 88 	store_32 s1, 152(sp)
   1533c:	3a 04 00 4f 	movehi s1, 58
   15340:	00 04 00 0b 	shl s0, s0, 1
   15344:	21 30 6f 00 	or s1, s1, 7116
   15348:	3e 50 02 88 	store_32 s1, 148(sp)
   1534c:	22 40 6f 00 	or s1, s2, 7120
   15350:	3e 40 02 88 	store_32 s1, 144(sp)
   15354:	23 50 48 00 	or s1, s3, 4628
   15358:	3e d0 01 88 	store_32 s1, 116(sp)
   1535c:	21 00 00 4f 	movehi s1, 1
   15360:	40 0c 00 4f 	movehi s2, 96
   15364:	7a 04 00 4f 	movehi s3, 58
   15368:	21 8c 20 00 	or s1, s1, 2083
   1536c:	3e c0 01 88 	store_32 s1, 112(sp)
   15370:	22 f0 1b 00 	or s1, s2, 1788
   15374:	3e b0 01 88 	store_32 s1, 108(sp)
   15378:	23 c0 6d 00 	or s1, s3, 7024
   1537c:	3e a0 01 88 	store_32 s1, 104(sp)
   15380:	3b 04 00 4f 	movehi s1, 59
   15384:	5b 04 00 4f 	movehi s2, 59
   15388:	7a 04 00 4f 	movehi s3, 58
   1538c:	21 c0 01 00 	or s1, s1, 112
   15390:	3e 30 02 88 	store_32 s1, 140(sp)
   15394:	22 b0 01 00 	or s1, s2, 108
   15398:	3e 20 02 88 	store_32 s1, 136(sp)
   1539c:	5a 04 00 4f 	movehi s2, 58
   153a0:	23 40 6c 00 	or s1, s3, 6928
   153a4:	3e f0 01 88 	store_32 s1, 124(sp)
   153a8:	1e e0 01 88 	store_32 s0, 120(sp)
   153ac:	00 00 00 4f 	movehi s0, 0
   153b0:	c2 80 6e 00 	or s6, s2, 7072
   153b4:	20 0c 00 4f 	movehi s1, 96
   153b8:	00 0c 1f 00 	or s0, s0, 1987
   153bc:	1e 70 01 88 	store_32 s0, 92(sp)
   153c0:	01 b0 21 00 	or s0, s1, 2156
   153c4:	1e 90 01 88 	store_32 s0, 100(sp)
   153c8:	de 90 02 88 	store_32 s6, 164(sp)
   153cc:	1e a0 02 a8 	load_32 s0, 168(sp)
   153d0:	7a 0b 00 0b 	shl s27, s26, 2
   153d4:	00 80 5d c0 	add_i s0, s0, s27
   153d8:	00 00 00 a8 	load_32 s0, (s0)
   153dc:	a0 09 00 f2 	bz s0, 308 <G_Ticker+0x450>
   153e0:	3e 70 02 a8 	load_32 s1, 156(sp)
   153e4:	1a 80 01 07 	mull_i s0, s26, 96
   153e8:	9a 60 04 07 	mull_i s4, s26, 280
   153ec:	01 00 50 c0 	add_i s0, s1, s0
   153f0:	3e 60 02 a8 	load_32 s1, 152(sp)
   153f4:	00 80 50 c0 	add_i s0, s0, s1
   153f8:	20 10 00 a4 	load_u16 s1, 4(s0)
   153fc:	40 18 00 a4 	load_u16 s2, 6(s0)
   15400:	60 00 00 a4 	load_u16 s3, (s0)
   15404:	00 08 00 a4 	load_u16 s0, 2(s0)
   15408:	be 80 02 a8 	load_32 s5, 160(sp)
   1540c:	42 40 00 0b 	shl s2, s2, 16
   15410:	00 40 00 0b 	shl s0, s0, 16
   15414:	25 03 52 c0 	add_i s25, s5, s4
   15418:	22 80 00 c0 	or s1, s2, s1
   1541c:	00 80 01 c0 	or s0, s0, s3
   15420:	19 20 00 88 	store_32 s0, 8(s25)
   15424:	19 23 00 05 	add_i s24, s25, 8
   15428:	39 30 00 88 	store_32 s1, 12(s25)
   1542c:	1e 50 02 a8 	load_32 s0, 148(sp)
   15430:	00 00 00 a8 	load_32 s0, (s0)
   15434:	e0 00 00 f2 	bz s0, 28 <G_Ticker+0x390>
   15438:	06 00 00 a8 	load_32 s0, (s6)
   1543c:	20 00 00 a0 	load_u8 s1, (s0)
   15440:	21 00 02 11 	cmpne_i s1, s1, 128
   15444:	e1 06 00 f4 	bnz s1, 220 <G_Ticker+0x460>
   15448:	c7 08 00 f8 	call 8988 <G_CheckDemoStatus>
   1544c:	de 90 02 a8 	load_32 s6, 164(sp)
   15450:	1e 40 02 a8 	load_32 s0, 144(sp)
   15454:	00 00 00 a8 	load_32 s0, (s0)
   15458:	80 00 00 f2 	bz s0, 16 <G_Ticker+0x3a8>
   1545c:	00 00 fc c0 	move s0, s24
   15460:	9d 04 00 f8 	call 4724 <G_WriteDemoTiccmd>
   15464:	de 90 02 a8 	load_32 s6, 164(sp)
   15468:	18 00 00 a2 	load_s8 s0, (s24)
   1546c:	00 cc 00 14 	cmplt_i s0, s0, 51
   15470:	20 03 00 f4 	bnz s0, 100 <G_Ticker+0x414>
   15474:	1e 10 02 a8 	load_32 s0, 132(sp)
   15478:	00 00 00 a8 	load_32 s0, (s0)
   1547c:	20 7c 00 01 	and s1, s0, 31
   15480:	a1 02 00 f4 	bnz s1, 84 <G_Ticker+0x414>
   15484:	00 14 00 0a 	shr s0, s0, 5
   15488:	00 0c 00 01 	and s0, s0, 3
   1548c:	00 00 1d c1 	cmpne_i s0, s0, s26
   15490:	20 02 00 f4 	bnz s0, 68 <G_Ticker+0x414>
   15494:	1e d0 01 a8 	load_32 s0, 116(sp)
   15498:	00 80 5d c0 	add_i s0, s0, s27
   1549c:	00 00 00 a8 	load_32 s0, (s0)
   154a0:	1e 20 00 88 	store_32 s0, 8(sp)
   154a4:	1e c0 01 a8 	load_32 s0, 112(sp)
   154a8:	1e 10 00 88 	store_32 s0, 4(sp)
   154ac:	1e b3 01 a8 	load_32 s24, 108(sp)
   154b0:	1e 03 00 88 	store_32 s24, (sp)
   154b4:	55 f2 00 f8 	call 248148 <sprintf>
   154b8:	de 90 02 a8 	load_32 s6, 164(sp)
   154bc:	1e a0 01 a8 	load_32 s0, 104(sp)
   154c0:	00 00 00 a8 	load_32 s0, (s0)
   154c4:	3e 80 02 a8 	load_32 s1, 160(sp)
   154c8:	00 60 04 07 	mull_i s0, s0, 280
   154cc:	01 00 50 c0 	add_i s0, s1, s0
   154d0:	00 63 03 88 	store_32 s24, 216(s0)
   154d4:	1e 30 02 a8 	load_32 s0, 140(sp)
   154d8:	20 00 00 a8 	load_32 s1, (s0)
   154dc:	1e 20 02 a8 	load_32 s0, 136(sp)
   154e0:	00 00 00 a8 	load_32 s0, (s0)
   154e4:	61 01 00 f2 	bz s1, 44 <G_Ticker+0x450>
   154e8:	40 01 00 f4 	bnz s0, 40 <G_Ticker+0x450>
   154ec:	1e 10 02 a8 	load_32 s0, 132(sp)
   154f0:	00 03 00 a8 	load_32 s24, (s0)
   154f4:	1e 00 02 a8 	load_32 s0, 128(sp)
   154f8:	20 00 00 a8 	load_32 s1, (s0)
   154fc:	00 00 fc c0 	move s0, s24
   15500:	7e fd 00 f8 	call 259576 <__modsi3>
   15504:	de 90 02 a8 	load_32 s6, 164(sp)
   15508:	40 00 00 f4 	bnz s0, 8 <G_Ticker+0x450>
   1550c:	1a 00 00 f6 	b 104 <G_Ticker+0x4b4>
   15510:	5a 07 00 05 	add_i s26, s26, 1
   15514:	1a 10 00 18 	cmplt_u s0, s26, 4
   15518:	a0 f5 ff f5 	bnz s0, -332 <G_Ticker+0x30c>
   1551c:	41 00 00 f6 	b 260 <G_Ticker+0x560>
   15520:	20 04 00 05 	add_i s1, s0, 1
   15524:	26 00 00 88 	store_32 s1, (s6)
   15528:	20 00 00 a0 	load_u8 s1, (s0)
   1552c:	38 00 00 82 	store_8 s1, (s24)
   15530:	20 08 00 05 	add_i s1, s0, 2
   15534:	26 00 00 88 	store_32 s1, (s6)
   15538:	20 04 00 a0 	load_u8 s1, 1(s0)
   1553c:	39 24 00 82 	store_8 s1, 9(s25)
   15540:	20 0c 00 05 	add_i s1, s0, 3
   15544:	26 00 00 88 	store_32 s1, (s6)
   15548:	20 08 00 a0 	load_u8 s1, 2(s0)
   1554c:	21 20 00 0b 	shl s1, s1, 8
   15550:	39 28 00 86 	store_16 s1, 10(s25)
   15554:	20 10 00 05 	add_i s1, s0, 4
   15558:	26 00 00 88 	store_32 s1, (s6)
   1555c:	00 0c 00 a0 	load_u8 s0, 3(s0)
   15560:	19 3c 00 82 	store_8 s0, 15(s25)
   15564:	1e 40 02 a8 	load_32 s0, 144(sp)
   15568:	00 00 00 a8 	load_32 s0, (s0)
   1556c:	e0 f7 ff f3 	bz s0, -260 <G_Ticker+0x3a8>
   15570:	bb ff ff f7 	b -276 <G_Ticker+0x39c>
   15574:	18 34 00 14 	cmplt_i s0, s24, 13
   15578:	40 02 00 f4 	bnz s0, 72 <G_Ticker+0x500>
   1557c:	3e f0 01 a8 	load_32 s1, 124(sp)
   15580:	1a 60 00 07 	mull_i s0, s26, 24
   15584:	01 00 50 c0 	add_i s0, s1, s0
   15588:	3e e0 01 a8 	load_32 s1, 120(sp)
   1558c:	00 80 50 c0 	add_i s0, s0, s1
   15590:	00 00 00 a4 	load_u16 s0, (s0)
   15594:	39 30 00 a4 	load_u16 s1, 12(s25)
   15598:	40 80 00 c1 	cmpeq_i s2, s0, s1
   1559c:	22 01 00 f4 	bnz s2, 36 <G_Ticker+0x500>
   155a0:	00 00 e0 c1 	sext_16 s0, s0
   155a4:	1e 20 00 88 	store_32 s0, 8(sp)
   155a8:	20 80 e0 c1 	sext_16 s1, s1
   155ac:	3e 10 00 88 	store_32 s1, 4(sp)
   155b0:	1e 70 01 a8 	load_32 s0, 92(sp)
   155b4:	1e 00 00 88 	store_32 s0, (sp)
   155b8:	d3 e2 ff f9 	call -29876 <I_Error>
   155bc:	de 90 02 a8 	load_32 s6, 164(sp)
   155c0:	19 00 00 a8 	load_32 s0, (s25)
   155c4:	80 01 00 f2 	bz s0, 48 <G_Ticker+0x534>
   155c8:	5e f0 01 a8 	load_32 s2, 124(sp)
   155cc:	3a 60 00 07 	mull_i s1, s26, 24
   155d0:	22 80 50 c0 	add_i s1, s2, s1
   155d4:	5e e0 01 a8 	load_32 s2, 120(sp)
   155d8:	00 30 00 a8 	load_32 s0, 12(s0)
   155dc:	21 00 51 c0 	add_i s1, s1, s2
   155e0:	01 00 00 86 	store_16 s0, (s1)
   155e4:	5a 07 00 05 	add_i s26, s26, 1
   155e8:	1a 10 00 18 	cmplt_u s0, s26, 4
   155ec:	00 ef ff f5 	bnz s0, -544 <G_Ticker+0x30c>
   155f0:	0c 00 00 f6 	b 48 <G_Ticker+0x560>
   155f4:	3e f0 01 a8 	load_32 s1, 124(sp)
   155f8:	1a 60 00 07 	mull_i s0, s26, 24
   155fc:	01 00 50 c0 	add_i s0, s1, s0
   15600:	3e e0 01 a8 	load_32 s1, 120(sp)
   15604:	00 80 50 c0 	add_i s0, s0, s1
   15608:	3e 90 01 a8 	load_32 s1, 100(sp)
   1560c:	21 00 00 a8 	load_32 s1, (s1)
   15610:	20 00 00 86 	store_16 s1, (s0)
   15614:	5a 07 00 05 	add_i s26, s26, 1
   15618:	1a 10 00 18 	cmplt_u s0, s26, 4
   1561c:	80 ed ff f5 	bnz s0, -592 <G_Ticker+0x30c>
   15620:	1e a0 02 a8 	load_32 s0, 168(sp)
   15624:	00 00 00 a8 	load_32 s0, (s0)
   15628:	3e 83 01 a8 	load_32 s25, 96(sp)
   1562c:	c0 00 00 f2 	bz s0, 24 <G_Ticker+0x584>
   15630:	1e 80 02 a8 	load_32 s0, 160(sp)
   15634:	00 3f 00 a2 	load_s8 s24, 15(s0)
   15638:	18 fc ff 12 	cmpgt_i s0, s24, -1
   1563c:	40 00 00 f4 	bnz s0, 8 <G_Ticker+0x584>
   15640:	29 00 00 f6 	b 164 <G_Ticker+0x624>
   15644:	1e a0 02 a8 	load_32 s0, 168(sp)
   15648:	00 10 00 a8 	load_32 s0, 4(s0)
   1564c:	c0 00 00 f2 	bz s0, 24 <G_Ticker+0x5a4>
   15650:	1e 80 02 a8 	load_32 s0, 160(sp)
   15654:	00 9f 04 a2 	load_s8 s24, 295(s0)
   15658:	18 fc ff 12 	cmpgt_i s0, s24, -1
   1565c:	40 00 00 f4 	bnz s0, 8 <G_Ticker+0x5a4>
   15660:	31 00 00 f6 	b 196 <G_Ticker+0x664>
   15664:	1e a0 02 a8 	load_32 s0, 168(sp)
   15668:	00 20 00 a8 	load_32 s0, 8(s0)
   1566c:	c0 00 00 f2 	bz s0, 24 <G_Ticker+0x5c4>
   15670:	1e 80 02 a8 	load_32 s0, 160(sp)
   15674:	00 ff 08 a2 	load_s8 s24, 575(s0)
   15678:	18 fc ff 12 	cmpgt_i s0, s24, -1
   1567c:	40 00 00 f4 	bnz s0, 8 <G_Ticker+0x5c4>
   15680:	41 00 00 f6 	b 260 <G_Ticker+0x6c4>
   15684:	1e a0 02 a8 	load_32 s0, 168(sp)
   15688:	00 30 00 a8 	load_32 s0, 12(s0)
   1568c:	c0 00 00 f2 	bz s0, 24 <G_Ticker+0x5e4>
   15690:	1e 80 02 a8 	load_32 s0, 160(sp)
   15694:	00 5f 0d a2 	load_s8 s24, 855(s0)
   15698:	18 fc ff 12 	cmpgt_i s0, s24, -1
   1569c:	40 00 00 f4 	bnz s0, 8 <G_Ticker+0x5e4>
   156a0:	51 00 00 f6 	b 324 <G_Ticker+0x724>
   156a4:	1a 04 00 4f 	movehi s0, 58
   156a8:	00 a0 7f 00 	or s0, s0, 8168
   156ac:	00 00 00 a8 	load_32 s0, (s0)
   156b0:	20 0c 00 16 	cmpgt_u s1, s0, 3
   156b4:	c1 0c 00 f4 	bnz s1, 408 <G_Ticker+0x78c>
   156b8:	23 00 00 4f 	movehi s1, 3
   156bc:	00 08 00 0b 	shl s0, s0, 2
   156c0:	21 a0 2f 00 	or s1, s1, 3048
   156c4:	00 80 50 c0 	add_i s0, s0, s1
   156c8:	00 00 00 a8 	load_32 s0, (s0)
   156cc:	00 00 00 f0 	b s0
   156d0:	40 79 00 f8 	call 124160 <P_Ticker>
   156d4:	ac c9 00 f8 	call 206512 <ST_Ticker>
   156d8:	94 23 00 f8 	call 36432 <AM_Ticker>
   156dc:	ae d2 00 f8 	call 215736 <HU_Ticker>
   156e0:	5b 00 00 f6 	b 364 <G_Ticker+0x78c>
   156e4:	18 0c 00 01 	and s0, s24, 3
   156e8:	20 08 00 10 	cmpeq_i s1, s0, 2
   156ec:	e1 0b 00 f4 	bnz s1, 380 <G_Ticker+0x7a8>
   156f0:	00 04 00 11 	cmpne_i s0, s0, 1
   156f4:	80 fa ff f5 	bnz s0, -176 <G_Ticker+0x584>
   156f8:	1b 04 00 4f 	movehi s0, 59
   156fc:	00 f0 01 00 	or s0, s0, 124
   15700:	20 00 00 a8 	load_32 s1, (s0)
   15704:	21 04 00 03 	xor s1, s1, 1
   15708:	20 00 00 88 	store_32 s1, (s0)
   1570c:	01 11 00 f2 	bz s1, 544 <G_Ticker+0x86c>
   15710:	3e db 00 f8 	call 224504 <S_PauseSound>
   15714:	1e a0 02 a8 	load_32 s0, 168(sp)
   15718:	00 10 00 a8 	load_32 s0, 4(s0)
   1571c:	40 fa ff f3 	bz s0, -184 <G_Ticker+0x5a4>
   15720:	cc ff ff f7 	b -208 <G_Ticker+0x590>
   15724:	18 0c 00 01 	and s0, s24, 3
   15728:	20 04 00 10 	cmpeq_i s1, s0, 1
   1572c:	41 0c 00 f4 	bnz s1, 392 <G_Ticker+0x7f4>
   15730:	00 08 00 11 	cmpne_i s0, s0, 2
   15734:	80 f9 ff f5 	bnz s0, -208 <G_Ticker+0x5a4>
   15738:	1b 04 00 4f 	movehi s0, 59
   1573c:	00 e0 13 00 	or s0, s0, 1272
   15740:	20 00 00 a0 	load_u8 s1, (s0)
   15744:	a1 00 00 f4 	bnz s1, 20 <G_Ticker+0x698>
   15748:	21 00 00 4f 	movehi s1, 1
   1574c:	40 24 00 0f 	move s2, 9
   15750:	21 ec 55 00 	or s1, s1, 5499
   15754:	6c f1 00 f8 	call 247216 <memcpy>
   15758:	1b 04 00 4f 	movehi s0, 59
   1575c:	38 08 00 0a 	shr s1, s24, 2
   15760:	00 60 14 00 	or s0, s0, 1304
   15764:	21 1c 00 01 	and s1, s1, 7
   15768:	20 00 00 88 	store_32 s1, (s0)
   1576c:	00 10 00 0f 	move s0, 4
   15770:	19 00 00 88 	store_32 s0, (s25)
   15774:	1e a0 02 a8 	load_32 s0, 168(sp)
   15778:	00 20 00 a8 	load_32 s0, 8(s0)
   1577c:	40 f8 ff f3 	bz s0, -248 <G_Ticker+0x5c4>
   15780:	bc ff ff f7 	b -272 <G_Ticker+0x5b0>
   15784:	18 0c 00 01 	and s0, s24, 3
   15788:	20 04 00 10 	cmpeq_i s1, s0, 1
   1578c:	a1 0a 00 f4 	bnz s1, 340 <G_Ticker+0x820>
   15790:	00 08 00 11 	cmpne_i s0, s0, 2
   15794:	80 f7 ff f5 	bnz s0, -272 <G_Ticker+0x5c4>
   15798:	1b 04 00 4f 	movehi s0, 59
   1579c:	00 e0 13 00 	or s0, s0, 1272
   157a0:	20 00 00 a0 	load_u8 s1, (s0)
   157a4:	a1 00 00 f4 	bnz s1, 20 <G_Ticker+0x6f8>
   157a8:	21 00 00 4f 	movehi s1, 1
   157ac:	40 24 00 0f 	move s2, 9
   157b0:	21 ec 55 00 	or s1, s1, 5499
   157b4:	54 f1 00 f8 	call 247120 <memcpy>
   157b8:	1b 04 00 4f 	movehi s0, 59
   157bc:	38 08 00 0a 	shr s1, s24, 2
   157c0:	00 60 14 00 	or s0, s0, 1304
   157c4:	21 1c 00 01 	and s1, s1, 7
   157c8:	20 00 00 88 	store_32 s1, (s0)
   157cc:	00 10 00 0f 	move s0, 4
   157d0:	19 00 00 88 	store_32 s0, (s25)
   157d4:	1e a0 02 a8 	load_32 s0, 168(sp)
   157d8:	00 30 00 a8 	load_32 s0, 12(s0)
   157dc:	40 f6 ff f3 	bz s0, -312 <G_Ticker+0x5e4>
   157e0:	ac ff ff f7 	b -336 <G_Ticker+0x5d0>
   157e4:	18 0c 00 01 	and s0, s24, 3
   157e8:	20 04 00 10 	cmpeq_i s1, s0, 1
   157ec:	01 09 00 f4 	bnz s1, 288 <G_Ticker+0x84c>
   157f0:	00 08 00 11 	cmpne_i s0, s0, 2
   157f4:	80 f5 ff f5 	bnz s0, -336 <G_Ticker+0x5e4>
   157f8:	1b 04 00 4f 	movehi s0, 59
   157fc:	00 e0 13 00 	or s0, s0, 1272
   15800:	20 00 00 a0 	load_u8 s1, (s0)
   15804:	a1 00 00 f4 	bnz s1, 20 <G_Ticker+0x758>
   15808:	21 00 00 4f 	movehi s1, 1
   1580c:	40 24 00 0f 	move s2, 9
   15810:	21 ec 55 00 	or s1, s1, 5499
   15814:	3c f1 00 f8 	call 247024 <memcpy>
   15818:	1b 04 00 4f 	movehi s0, 59
   1581c:	38 08 00 0a 	shr s1, s24, 2
   15820:	00 60 14 00 	or s0, s0, 1304
   15824:	21 1c 00 01 	and s1, s1, 7
   15828:	20 00 00 88 	store_32 s1, (s0)
   1582c:	00 10 00 0f 	move s0, 4
   15830:	19 00 00 88 	store_32 s0, (s25)
   15834:	9c ff ff f7 	b -400 <G_Ticker+0x5e4>
   15838:	8e bd 00 f8 	call 194104 <WI_Ticker>
   1583c:	04 00 00 f6 	b 16 <G_Ticker+0x78c>
   15840:	da e4 ff f9 	call -27800 <F_Ticker>
   15844:	02 00 00 f6 	b 8 <G_Ticker+0x78c>
   15848:	81 ed ff f9 	call -18940 <D_PageTicker>
   1584c:	fe b3 02 a8 	load_32 ra, 172(sp)
   15850:	7e c3 02 a8 	load_32 s27, 176(sp)
   15854:	5e d3 02 a8 	load_32 s26, 180(sp)
   15858:	3e e3 02 a8 	load_32 s25, 184(sp)
   1585c:	1e f3 02 a8 	load_32 s24, 188(sp)
   15860:	de 03 03 05 	add_i sp, sp, 192
   15864:	1f 00 00 f0 	ret
   15868:	1b 04 00 4f 	movehi s0, 59
   1586c:	00 e0 13 00 	or s0, s0, 1272
   15870:	20 00 00 a0 	load_u8 s1, (s0)
   15874:	a1 00 00 f4 	bnz s1, 20 <G_Ticker+0x7c8>
   15878:	21 00 00 4f 	movehi s1, 1
   1587c:	40 24 00 0f 	move s2, 9
   15880:	21 ec 55 00 	or s1, s1, 5499
   15884:	20 f1 00 f8 	call 246912 <memcpy>
   15888:	1b 04 00 4f 	movehi s0, 59
   1588c:	38 08 00 0a 	shr s1, s24, 2
   15890:	00 60 14 00 	or s0, s0, 1304
   15894:	21 1c 00 01 	and s1, s1, 7
   15898:	20 00 00 88 	store_32 s1, (s0)
   1589c:	00 10 00 0f 	move s0, 4
   158a0:	19 00 00 88 	store_32 s0, (s25)
   158a4:	1e a0 02 a8 	load_32 s0, 168(sp)
   158a8:	00 10 00 a8 	load_32 s0, 4(s0)
   158ac:	c0 ed ff f3 	bz s0, -584 <G_Ticker+0x5a4>
   158b0:	68 ff ff f7 	b -608 <G_Ticker+0x590>
   158b4:	1b 04 00 4f 	movehi s0, 59
   158b8:	00 f0 01 00 	or s0, s0, 124
   158bc:	20 00 00 a8 	load_32 s1, (s0)
   158c0:	21 04 00 03 	xor s1, s1, 1
   158c4:	20 00 00 88 	store_32 s1, (s0)
   158c8:	c1 03 00 f2 	bz s1, 120 <G_Ticker+0x880>
   158cc:	cf da 00 f8 	call 224060 <S_PauseSound>
   158d0:	1e a0 02 a8 	load_32 s0, 168(sp)
   158d4:	00 20 00 a8 	load_32 s0, 8(s0)
   158d8:	60 ed ff f3 	bz s0, -596 <G_Ticker+0x5c4>
   158dc:	65 ff ff f7 	b -620 <G_Ticker+0x5b0>
   158e0:	1b 04 00 4f 	movehi s0, 59
   158e4:	00 f0 01 00 	or s0, s0, 124
   158e8:	20 00 00 a8 	load_32 s1, (s0)
   158ec:	21 04 00 03 	xor s1, s1, 1
   158f0:	20 00 00 88 	store_32 s1, (s0)
   158f4:	01 03 00 f2 	bz s1, 96 <G_Ticker+0x894>
   158f8:	c4 da 00 f8 	call 224016 <S_PauseSound>
   158fc:	1e a0 02 a8 	load_32 s0, 168(sp)
   15900:	00 30 00 a8 	load_32 s0, 12(s0)
   15904:	00 ed ff f3 	bz s0, -608 <G_Ticker+0x5e4>
   15908:	62 ff ff f7 	b -632 <G_Ticker+0x5d0>
   1590c:	1b 04 00 4f 	movehi s0, 59
   15910:	00 f0 01 00 	or s0, s0, 124
   15914:	20 00 00 a8 	load_32 s1, (s0)
   15918:	21 04 00 03 	xor s1, s1, 1
   1591c:	20 00 00 88 	store_32 s1, (s0)
   15920:	41 02 00 f2 	bz s1, 72 <G_Ticker+0x8a8>
   15924:	b9 da 00 f8 	call 223972 <S_PauseSound>
   15928:	5f ff ff f7 	b -644 <G_Ticker+0x5e4>
   1592c:	ca da 00 f8 	call 224040 <S_ResumeSound>
   15930:	1e a0 02 a8 	load_32 s0, 168(sp)
   15934:	00 10 00 a8 	load_32 s0, 4(s0)
   15938:	60 e9 ff f3 	bz s0, -724 <G_Ticker+0x5a4>
   1593c:	45 ff ff f7 	b -748 <G_Ticker+0x590>
   15940:	c5 da 00 f8 	call 224020 <S_ResumeSound>
   15944:	1e a0 02 a8 	load_32 s0, 168(sp)
   15948:	00 20 00 a8 	load_32 s0, 8(s0)
   1594c:	c0 e9 ff f3 	bz s0, -712 <G_Ticker+0x5c4>
   15950:	48 ff ff f7 	b -736 <G_Ticker+0x5b0>
   15954:	c0 da 00 f8 	call 224000 <S_ResumeSound>
   15958:	1e a0 02 a8 	load_32 s0, 168(sp)
   1595c:	00 30 00 a8 	load_32 s0, 12(s0)
   15960:	20 ea ff f3 	bz s0, -700 <G_Ticker+0x5e4>
   15964:	4b ff ff f7 	b -724 <G_Ticker+0x5d0>
   15968:	bb da 00 f8 	call 223980 <S_ResumeSound>
   1596c:	4e ff ff f7 	b -712 <G_Ticker+0x5e4>

0000000000015970 G_DoReborn:
   15970:	de 03 ff 05 	add_i sp, sp, -64
   15974:	1e f3 00 88 	store_32 s24, 60(sp)
   15978:	3e e3 00 88 	store_32 s25, 56(sp)
   1597c:	5e d3 00 88 	store_32 s26, 52(sp)
   15980:	7e c3 00 88 	store_32 s27, 48(sp)
   15984:	fe b3 00 88 	store_32 ra, 44(sp)
   15988:	3b 04 00 4f 	movehi s1, 59
   1598c:	21 c0 01 00 	or s1, s1, 112
   15990:	21 00 00 a8 	load_32 s1, (s1)
   15994:	00 03 f0 c0 	move s24, s0
   15998:	41 00 00 f4 	bnz s1, 8 <G_DoReborn+0x30>
   1599c:	0f 00 00 f6 	b 60 <G_DoReborn+0x68>
   159a0:	1b 04 00 4f 	movehi s0, 59
   159a4:	38 60 04 07 	mull_i s1, s24, 280
   159a8:	60 03 00 0f 	move s27, 0
   159ac:	00 40 02 00 	or s0, s0, 144
   159b0:	00 80 50 c0 	add_i s0, s0, s1
   159b4:	3a 04 00 4f 	movehi s1, 58
   159b8:	00 00 00 a8 	load_32 s0, (s0)
   159bc:	21 60 6e 00 	or s1, s1, 7064
   159c0:	60 13 02 88 	store_32 s27, 132(s0)
   159c4:	01 00 00 a8 	load_32 s0, (s1)
   159c8:	20 01 00 f2 	bz s0, 36 <G_DoReborn+0x7c>
   159cc:	00 00 fc c0 	move s0, s24
   159d0:	b1 04 00 f8 	call 4804 <G_DeathMatchSpawnPlayer>
   159d4:	3d 00 00 f6 	b 244 <G_DoReborn+0x158>
   159d8:	1a 04 00 4f 	movehi s0, 58
   159dc:	20 04 00 0f 	move s1, 1
   159e0:	00 60 6f 00 	or s0, s0, 7128
   159e4:	20 00 00 88 	store_32 s1, (s0)
   159e8:	38 00 00 f6 	b 224 <G_DoReborn+0x158>
   159ec:	1b 04 00 4f 	movehi s0, 59
   159f0:	1e a0 00 88 	store_32 s0, 40(sp)
   159f4:	40 d3 4a 00 	or s26, s0, 4788
   159f8:	18 28 00 07 	mull_i s0, s24, 10
   159fc:	3a 03 50 c0 	add_i s25, s26, s0
   15a00:	00 00 fc c0 	move s0, s24
   15a04:	20 80 fc c0 	move s1, s25
   15a08:	22 04 00 f8 	call 4232 <G_CheckSpot>
   15a0c:	40 00 00 f4 	bnz s0, 8 <G_DoReborn+0xa4>
   15a10:	04 00 00 f6 	b 16 <G_DoReborn+0xb0>
   15a14:	00 80 fc c0 	move s0, s25
   15a18:	3b 75 00 f8 	call 120044 <P_SpawnPlayer>
   15a1c:	2b 00 00 f6 	b 172 <G_DoReborn+0x158>
   15a20:	3e 93 00 88 	store_32 s25, 36(sp)
   15a24:	00 00 fc c0 	move s0, s24
   15a28:	20 00 fd c0 	move s1, s26
   15a2c:	19 04 00 f8 	call 4196 <G_CheckSpot>
   15a30:	20 00 fd c0 	move s1, s26
   15a34:	40 00 00 f2 	bz s0, 8 <G_DoReborn+0xcc>
   15a38:	1c 00 00 f6 	b 112 <G_DoReborn+0x138>
   15a3c:	1e a0 00 a8 	load_32 s0, 40(sp)
   15a40:	20 d3 4a 00 	or s25, s0, 4788
   15a44:	00 00 fc c0 	move s0, s24
   15a48:	39 28 00 05 	add_i s1, s25, 10
   15a4c:	3e a0 00 88 	store_32 s1, 40(sp)
   15a50:	10 04 00 f8 	call 4160 <G_CheckSpot>
   15a54:	80 00 00 f2 	bz s0, 16 <G_DoReborn+0xf4>
   15a58:	60 07 00 0f 	move s27, 1
   15a5c:	3e a0 00 a8 	load_32 s1, 40(sp)
   15a60:	12 00 00 f6 	b 72 <G_DoReborn+0x138>
   15a64:	39 50 00 05 	add_i s1, s25, 20
   15a68:	00 00 fc c0 	move s0, s24
   15a6c:	3e a0 00 88 	store_32 s1, 40(sp)
   15a70:	08 04 00 f8 	call 4128 <G_CheckSpot>
   15a74:	40 00 00 f4 	bnz s0, 8 <G_DoReborn+0x10c>
   15a78:	04 00 00 f6 	b 16 <G_DoReborn+0x118>
   15a7c:	60 0b 00 0f 	move s27, 2
   15a80:	3e a0 00 a8 	load_32 s1, 40(sp)
   15a84:	09 00 00 f6 	b 36 <G_DoReborn+0x138>
   15a88:	39 78 00 05 	add_i s1, s25, 30
   15a8c:	00 00 fc c0 	move s0, s24
   15a90:	20 83 f0 c0 	move s25, s1
   15a94:	ff 03 00 f8 	call 4092 <G_CheckSpot>
   15a98:	40 00 00 f4 	bnz s0, 8 <G_DoReborn+0x130>
   15a9c:	12 00 00 f6 	b 72 <G_DoReborn+0x174>
   15aa0:	60 0f 00 0f 	move s27, 3
   15aa4:	20 80 fc c0 	move s1, s25
   15aa8:	1b 28 00 07 	mull_i s0, s27, 10
   15aac:	3a 03 50 c0 	add_i s25, s26, s0
   15ab0:	18 04 00 05 	add_i s0, s24, 1
   15ab4:	19 18 00 86 	store_16 s0, 6(s25)
   15ab8:	00 80 f0 c0 	move s0, s1
   15abc:	12 75 00 f8 	call 119880 <P_SpawnPlayer>
   15ac0:	1b 04 00 05 	add_i s0, s27, 1
   15ac4:	19 18 00 86 	store_16 s0, 6(s25)
   15ac8:	fe b3 00 a8 	load_32 ra, 44(sp)
   15acc:	7e c3 00 a8 	load_32 s27, 48(sp)
   15ad0:	5e d3 00 a8 	load_32 s26, 52(sp)
   15ad4:	3e e3 00 a8 	load_32 s25, 56(sp)
   15ad8:	1e f3 00 a8 	load_32 s24, 60(sp)
   15adc:	de 03 01 05 	add_i sp, sp, 64
   15ae0:	1f 00 00 f0 	ret
   15ae4:	1e 90 00 a8 	load_32 s0, 36(sp)
   15ae8:	cc ff ff f7 	b -208 <G_DoReborn+0xa8>

0000000000015aec G_DoNewGame:
   15aec:	de 03 ff 05 	add_i sp, sp, -64
   15af0:	1e f3 00 88 	store_32 s24, 60(sp)
   15af4:	fe e3 00 88 	store_32 ra, 56(sp)
   15af8:	1a 04 00 4f 	movehi s0, 58
   15afc:	3b 04 00 4f 	movehi s1, 59
   15b00:	5b 04 00 4f 	movehi s2, 59
   15b04:	00 30 6f 00 	or s0, s0, 7116
   15b08:	21 b0 01 00 	or s1, s1, 108
   15b0c:	00 03 00 0f 	move s24, 0
   15b10:	00 03 00 88 	store_32 s24, (s0)
   15b14:	02 c0 01 00 	or s0, s2, 112
   15b18:	01 03 00 88 	store_32 s24, (s1)
   15b1c:	3a 04 00 4f 	movehi s1, 58
   15b20:	5b 04 00 4f 	movehi s2, 59
   15b24:	00 03 00 88 	store_32 s24, (s0)
   15b28:	01 60 6e 00 	or s0, s1, 7064
   15b2c:	22 00 02 00 	or s1, s2, 128
   15b30:	5a 04 00 4f 	movehi s2, 58
   15b34:	00 03 00 88 	store_32 s24, (s0)
   15b38:	01 33 00 88 	store_32 s24, 12(s1)
   15b3c:	02 60 48 00 	or s0, s2, 4632
   15b40:	01 23 00 88 	store_32 s24, 8(s1)
   15b44:	01 13 00 88 	store_32 s24, 4(s1)
   15b48:	3a 04 00 4f 	movehi s1, 58
   15b4c:	5a 04 00 4f 	movehi s2, 58
   15b50:	00 03 00 88 	store_32 s24, (s0)
   15b54:	1a 04 00 4f 	movehi s0, 58
   15b58:	21 30 48 00 	or s1, s1, 4620
   15b5c:	42 c0 6d 00 	or s2, s2, 7024
   15b60:	00 20 38 00 	or s0, s0, 3592
   15b64:	00 03 00 88 	store_32 s24, (s0)
   15b68:	1a 04 00 4f 	movehi s0, 58
   15b6c:	01 03 00 88 	store_32 s24, (s1)
   15b70:	3a 04 00 4f 	movehi s1, 58
   15b74:	02 03 00 88 	store_32 s24, (s2)
   15b78:	5a 04 00 4f 	movehi s2, 58
   15b7c:	00 f0 6d 00 	or s0, s0, 7036
   15b80:	21 d0 6d 00 	or s1, s1, 7028
   15b84:	42 e0 6d 00 	or s2, s2, 7032
   15b88:	00 00 00 a8 	load_32 s0, (s0)
   15b8c:	21 00 00 a8 	load_32 s1, (s1)
   15b90:	42 00 00 a8 	load_32 s2, (s2)
   15b94:	95 05 00 f8 	call 5716 <G_InitNew>
   15b98:	1a 04 00 4f 	movehi s0, 58
   15b9c:	00 60 6f 00 	or s0, s0, 7128
   15ba0:	00 03 00 88 	store_32 s24, (s0)
   15ba4:	fe e3 00 a8 	load_32 ra, 56(sp)
   15ba8:	1e f3 00 a8 	load_32 s24, 60(sp)
   15bac:	de 03 01 05 	add_i sp, sp, 64
   15bb0:	1f 00 00 f0 	ret

0000000000015bb4 G_DoLoadGame:
   15bb4:	de 03 fe 05 	add_i sp, sp, -128
   15bb8:	1e f3 01 88 	store_32 s24, 124(sp)
   15bbc:	3e e3 01 88 	store_32 s25, 120(sp)
   15bc0:	5e d3 01 88 	store_32 s26, 116(sp)
   15bc4:	7e c3 01 88 	store_32 s27, 112(sp)
   15bc8:	fe b3 01 88 	store_32 ra, 108(sp)
   15bcc:	1a 04 00 4f 	movehi s0, 58
   15bd0:	3b 04 00 4f 	movehi s1, 59
   15bd4:	20 03 00 0f 	move s25, 0
   15bd8:	00 60 6f 00 	or s0, s0, 7128
   15bdc:	01 d3 13 00 	or s24, s1, 1268
   15be0:	20 03 00 88 	store_32 s25, (s0)
   15be4:	1b 04 00 4f 	movehi s0, 59
   15be8:	20 00 fc c0 	move s1, s24
   15bec:	00 70 14 00 	or s0, s0, 1308
   15bf0:	9b 18 00 f8 	call 25196 <M_ReadFile>
   15bf4:	1c 04 00 4f 	movehi s0, 60
   15bf8:	38 00 00 a8 	load_32 s1, (s24)
   15bfc:	5e 73 01 05 	add_i s26, sp, 92
   15c00:	60 83 02 00 	or s27, s0, 160
   15c04:	01 60 00 05 	add_i s0, s1, 24
   15c08:	20 b8 01 0f 	move s1, 110
   15c0c:	1b 00 00 88 	store_32 s0, (s27)
   15c10:	02 00 00 4f 	movehi s0, 2
   15c14:	3e 73 01 88 	store_32 s25, 92(sp)
   15c18:	3e 83 01 88 	store_32 s25, 96(sp)
   15c1c:	3e 93 01 88 	store_32 s25, 100(sp)
   15c20:	00 80 41 00 	or s0, s0, 4192
   15c24:	3e a3 01 88 	store_32 s25, 104(sp)
   15c28:	3e 20 00 88 	store_32 s1, 8(sp)
   15c2c:	1e 10 00 88 	store_32 s0, 4(sp)
   15c30:	5e 03 00 88 	store_32 s26, (sp)
   15c34:	75 f0 00 f8 	call 246228 <sprintf>
   15c38:	3b 03 00 a8 	load_32 s25, (s27)
   15c3c:	00 80 fc c0 	move s0, s25
   15c40:	20 00 fd c0 	move s1, s26
   15c44:	5a f2 00 f8 	call 248168 <strcmp>
   15c48:	e0 07 00 f4 	bnz s0, 252 <G_DoLoadGame+0x190>
   15c4c:	1a 04 00 4f 	movehi s0, 58
   15c50:	5a 04 00 4f 	movehi s2, 58
   15c54:	7a 04 00 4f 	movehi s3, 58
   15c58:	20 90 7f 00 	or s1, s0, 8164
   15c5c:	19 40 00 a0 	load_u8 s0, 16(s25)
   15c60:	42 70 6f 00 	or s2, s2, 7132
   15c64:	9b 04 00 4f 	movehi s4, 59
   15c68:	01 00 00 88 	store_32 s0, (s1)
   15c6c:	63 80 7f 00 	or s3, s3, 8160
   15c70:	39 44 00 a0 	load_u8 s1, 17(s25)
   15c74:	22 00 00 88 	store_32 s1, (s2)
   15c78:	84 00 02 00 	or s4, s4, 128
   15c7c:	59 48 00 a0 	load_u8 s2, 18(s25)
   15c80:	43 00 00 88 	store_32 s2, (s3)
   15c84:	79 4c 00 a0 	load_u8 s3, 19(s25)
   15c88:	64 00 00 88 	store_32 s3, (s4)
   15c8c:	79 50 00 a0 	load_u8 s3, 20(s25)
   15c90:	64 10 00 88 	store_32 s3, 4(s4)
   15c94:	79 54 00 a0 	load_u8 s3, 21(s25)
   15c98:	64 20 00 88 	store_32 s3, 8(s4)
   15c9c:	79 5c 00 05 	add_i s3, s25, 23
   15ca0:	7b 00 00 88 	store_32 s3, (s27)
   15ca4:	79 58 00 a0 	load_u8 s3, 22(s25)
   15ca8:	64 30 00 88 	store_32 s3, 12(s4)
   15cac:	4f 05 00 f8 	call 5436 <G_InitNew>
   15cb0:	1b 00 00 a8 	load_32 s0, (s27)
   15cb4:	20 04 00 05 	add_i s1, s0, 1
   15cb8:	3b 00 00 88 	store_32 s1, (s27)
   15cbc:	20 00 00 a0 	load_u8 s1, (s0)
   15cc0:	40 08 00 05 	add_i s2, s0, 2
   15cc4:	5b 00 00 88 	store_32 s2, (s27)
   15cc8:	60 0c 00 05 	add_i s3, s0, 3
   15ccc:	40 04 00 a0 	load_u8 s2, 1(s0)
   15cd0:	7b 00 00 88 	store_32 s3, (s27)
   15cd4:	7c 04 00 4f 	movehi s3, 60
   15cd8:	00 08 00 a0 	load_u8 s0, 2(s0)
   15cdc:	21 40 00 0b 	shl s1, s1, 16
   15ce0:	42 20 00 0b 	shl s2, s2, 8
   15ce4:	22 80 00 c0 	or s1, s2, s1
   15ce8:	43 40 02 00 	or s2, s3, 144
   15cec:	01 00 00 c0 	or s0, s1, s0
   15cf0:	02 00 00 88 	store_32 s0, (s2)
   15cf4:	bc 78 00 f8 	call 123632 <P_UnArchivePlayers>
   15cf8:	bd 79 00 f8 	call 124660 <P_UnArchiveWorld>
   15cfc:	82 7a 00 f8 	call 125448 <P_UnArchiveThinkers>
   15d00:	92 7c 00 f8 	call 127560 <P_UnArchiveSpecials>
   15d04:	1b 00 00 a8 	load_32 s0, (s27)
   15d08:	00 00 00 a0 	load_u8 s0, (s0)
   15d0c:	00 74 00 10 	cmpeq_i s0, s0, 29
   15d10:	a0 00 00 f4 	bnz s0, 20 <G_DoLoadGame+0x170>
   15d14:	02 00 00 4f 	movehi s0, 2
   15d18:	00 88 54 00 	or s0, s0, 5410
   15d1c:	1e 00 00 88 	store_32 s0, (sp)
   15d20:	f9 e0 ff f9 	call -31772 <I_Error>
   15d24:	18 00 00 a8 	load_32 s0, (s24)
   15d28:	a3 da 00 f8 	call 223884 <Z_Free>
   15d2c:	1f 04 00 4f 	movehi s0, 63
   15d30:	00 70 04 00 	or s0, s0, 284
   15d34:	00 00 00 a8 	load_32 s0, (s0)
   15d38:	40 00 00 f2 	bz s0, 8 <G_DoLoadGame+0x18c>
   15d3c:	d3 8e 00 f8 	call 146252 <R_ExecuteSetViewSize>
   15d40:	f4 8a 00 f8 	call 142288 <R_FillBackScreen>
   15d44:	fe b3 01 a8 	load_32 ra, 108(sp)
   15d48:	7e c3 01 a8 	load_32 s27, 112(sp)
   15d4c:	5e d3 01 a8 	load_32 s26, 116(sp)
   15d50:	3e e3 01 a8 	load_32 s25, 120(sp)
   15d54:	1e f3 01 a8 	load_32 s24, 124(sp)
   15d58:	de 03 02 05 	add_i sp, sp, 128
   15d5c:	1f 00 00 f0 	ret

0000000000015d60 G_DoSaveGame:
   15d60:	de 03 fc 05 	add_i sp, sp, -256
   15d64:	1e f3 03 88 	store_32 s24, 252(sp)
   15d68:	3e e3 03 88 	store_32 s25, 248(sp)
   15d6c:	5e d3 03 88 	store_32 s26, 244(sp)
   15d70:	7e c3 03 88 	store_32 s27, 240(sp)
   15d74:	fe b3 03 88 	store_32 ra, 236(sp)
   15d78:	01 00 00 4f 	movehi s0, 1
   15d7c:	00 10 34 00 	or s0, s0, 3332
   15d80:	4d 18 00 f8 	call 24884 <M_CheckParm>
   15d84:	3b 04 00 4f 	movehi s1, 59
   15d88:	21 60 14 00 	or s1, s1, 1304
   15d8c:	21 00 00 a8 	load_32 s1, (s1)
   15d90:	e0 00 00 f2 	bz s0, 28 <G_DoSaveGame+0x4c>
   15d94:	00 00 00 4f 	movehi s0, 0
   15d98:	3e 20 00 88 	store_32 s1, 8(sp)
   15d9c:	3e 20 02 05 	add_i s1, sp, 136
   15da0:	3e 00 00 88 	store_32 s1, (sp)
   15da4:	00 2c 51 00 	or s0, s0, 5195
   15da8:	06 00 00 f6 	b 24 <G_DoSaveGame+0x60>
   15dac:	02 00 00 4f 	movehi s0, 2
   15db0:	3e 20 00 88 	store_32 s1, 8(sp)
   15db4:	3e 20 02 05 	add_i s1, sp, 136
   15db8:	3e 00 00 88 	store_32 s1, (sp)
   15dbc:	00 ec 2c 00 	or s0, s0, 2875
   15dc0:	1e 10 00 88 	store_32 s0, 4(sp)
   15dc4:	11 f0 00 f8 	call 245828 <sprintf>
   15dc8:	00 0c 00 4f 	movehi s0, 96
   15dcc:	3b 04 00 4f 	movehi s1, 59
   15dd0:	42 03 00 4f 	movehi s26, 2
   15dd4:	00 20 02 00 	or s0, s0, 136
   15dd8:	61 d3 13 00 	or s27, s1, 1268
   15ddc:	3b 04 00 4f 	movehi s1, 59
   15de0:	20 13 00 a8 	load_32 s25, 4(s0)
   15de4:	40 60 00 0f 	move s2, 24
   15de8:	21 e0 13 00 	or s1, s1, 1272
   15dec:	19 00 5d c0 	add_i s0, s25, s26
   15df0:	1b 00 00 88 	store_32 s0, (s27)
   15df4:	3e d0 01 88 	store_32 s1, 116(sp)
   15df8:	c3 ef 00 f8 	call 245516 <memcpy>
   15dfc:	1c 04 00 4f 	movehi s0, 60
   15e00:	20 b8 01 0f 	move s1, 110
   15e04:	00 83 02 00 	or s24, s0, 160
   15e08:	1a 60 00 00 	or s0, s26, 24
   15e0c:	19 00 50 c0 	add_i s0, s25, s0
   15e10:	18 00 00 88 	store_32 s0, (s24)
   15e14:	02 00 00 4f 	movehi s0, 2
   15e18:	40 03 00 0f 	move s26, 0
   15e1c:	5e e3 01 88 	store_32 s26, 120(sp)
   15e20:	5e f3 01 88 	store_32 s26, 124(sp)
   15e24:	3e e3 01 05 	add_i s25, sp, 120
   15e28:	5e 03 02 88 	store_32 s26, 128(sp)
   15e2c:	00 80 41 00 	or s0, s0, 4192
   15e30:	5e 13 02 88 	store_32 s26, 132(sp)
   15e34:	3e 20 00 88 	store_32 s1, 8(sp)
   15e38:	1e 10 00 88 	store_32 s0, 4(sp)
   15e3c:	3e 03 00 88 	store_32 s25, (sp)
   15e40:	f2 ef 00 f8 	call 245704 <sprintf>
   15e44:	18 00 00 a8 	load_32 s0, (s24)
   15e48:	40 40 00 0f 	move s2, 16
   15e4c:	20 80 fc c0 	move s1, s25
   15e50:	ad ef 00 f8 	call 245428 <memcpy>
   15e54:	1a 04 00 4f 	movehi s0, 58
   15e58:	38 00 00 a8 	load_32 s1, (s24)
   15e5c:	5a 04 00 4f 	movehi s2, 58
   15e60:	7b 04 00 4f 	movehi s3, 59
   15e64:	00 90 7f 00 	or s0, s0, 8164
   15e68:	42 70 6f 00 	or s2, s2, 7132
   15e6c:	00 00 00 a8 	load_32 s0, (s0)
   15e70:	01 40 00 82 	store_8 s0, 16(s1)
   15e74:	1a 04 00 4f 	movehi s0, 58
   15e78:	42 00 00 a8 	load_32 s2, (s2)
   15e7c:	41 44 00 82 	store_8 s2, 17(s1)
   15e80:	43 00 02 00 	or s2, s3, 128
   15e84:	00 80 7f 00 	or s0, s0, 8160
   15e88:	00 00 00 a8 	load_32 s0, (s0)
   15e8c:	01 48 00 82 	store_8 s0, 18(s1)
   15e90:	02 00 00 a8 	load_32 s0, (s2)
   15e94:	01 4c 00 82 	store_8 s0, 19(s1)
   15e98:	02 10 00 a8 	load_32 s0, 4(s2)
   15e9c:	01 50 00 82 	store_8 s0, 20(s1)
   15ea0:	1c 04 00 4f 	movehi s0, 60
   15ea4:	62 20 00 a8 	load_32 s3, 8(s2)
   15ea8:	61 54 00 82 	store_8 s3, 21(s1)
   15eac:	00 40 02 00 	or s0, s0, 144
   15eb0:	42 30 00 a8 	load_32 s2, 12(s2)
   15eb4:	41 58 00 82 	store_8 s2, 22(s1)
   15eb8:	40 00 00 a8 	load_32 s2, (s0)
   15ebc:	62 40 00 0a 	shr s3, s2, 16
   15ec0:	61 5c 00 82 	store_8 s3, 23(s1)
   15ec4:	42 20 00 0a 	shr s2, s2, 8
   15ec8:	41 60 00 82 	store_8 s2, 24(s1)
   15ecc:	00 00 00 a8 	load_32 s0, (s0)
   15ed0:	41 68 00 05 	add_i s2, s1, 26
   15ed4:	58 00 00 88 	store_32 s2, (s24)
   15ed8:	01 64 00 82 	store_8 s0, 25(s1)
   15edc:	99 77 00 f8 	call 122468 <P_ArchivePlayers>
   15ee0:	e1 78 00 f8 	call 123780 <P_ArchiveWorld>
   15ee4:	ad 79 00 f8 	call 124596 <P_ArchiveThinkers>
   15ee8:	7c 7a 00 f8 	call 125424 <P_ArchiveSpecials>
   15eec:	18 00 00 a8 	load_32 s0, (s24)
   15ef0:	56 00 00 4f 	movehi s2, 22
   15ef4:	20 04 00 05 	add_i s1, s0, 1
   15ef8:	38 00 00 88 	store_32 s1, (s24)
   15efc:	20 74 00 0f 	move s1, 29
   15f00:	20 00 00 82 	store_8 s1, (s0)
   15f04:	18 00 00 a8 	load_32 s0, (s24)
   15f08:	3b 00 00 a8 	load_32 s1, (s27)
   15f0c:	20 83 60 c0 	sub_i s25, s0, s1
   15f10:	02 04 00 00 	or s0, s2, 1
   15f14:	19 00 40 c1 	cmplt_i s0, s25, s0
   15f18:	c0 00 00 f4 	bnz s0, 24 <G_DoSaveGame+0x1d0>
   15f1c:	02 00 00 4f 	movehi s0, 2
   15f20:	00 88 11 00 	or s0, s0, 1122
   15f24:	1e 00 00 88 	store_32 s0, (sp)
   15f28:	77 e0 ff f9 	call -32292 <I_Error>
   15f2c:	3b 00 00 a8 	load_32 s1, (s27)
   15f30:	1e 20 02 05 	add_i s0, sp, 136
   15f34:	40 80 fc c0 	move s2, s25
   15f38:	c7 17 00 f8 	call 24348 <M_WriteFile>
   15f3c:	1a 04 00 4f 	movehi s0, 58
   15f40:	3a 04 00 4f 	movehi s1, 58
   15f44:	41 00 00 4f 	movehi s2, 1
   15f48:	00 60 6f 00 	or s0, s0, 7128
   15f4c:	21 c0 6d 00 	or s1, s1, 7024
   15f50:	40 03 00 88 	store_32 s26, (s0)
   15f54:	1e d0 01 a8 	load_32 s0, 116(sp)
   15f58:	40 03 00 82 	store_8 s26, (s0)
   15f5c:	01 00 00 a8 	load_32 s0, (s1)
   15f60:	3b 04 00 4f 	movehi s1, 59
   15f64:	21 40 02 00 	or s1, s1, 144
   15f68:	00 60 04 07 	mull_i s0, s0, 280
   15f6c:	01 00 50 c0 	add_i s0, s1, s0
   15f70:	22 60 0d 00 	or s1, s2, 856
   15f74:	20 60 03 88 	store_32 s1, 216(s0)
   15f78:	66 8a 00 f8 	call 141720 <R_FillBackScreen>
   15f7c:	fe b3 03 a8 	load_32 ra, 236(sp)
   15f80:	7e c3 03 a8 	load_32 s27, 240(sp)
   15f84:	5e d3 03 a8 	load_32 s26, 244(sp)
   15f88:	3e e3 03 a8 	load_32 s25, 248(sp)
   15f8c:	1e f3 03 a8 	load_32 s24, 252(sp)
   15f90:	de 03 04 05 	add_i sp, sp, 256
   15f94:	1f 00 00 f0 	ret

0000000000015f98 G_DoPlayDemo:
   15f98:	de 03 ff 05 	add_i sp, sp, -64
   15f9c:	1e f3 00 88 	store_32 s24, 60(sp)
   15fa0:	3e e3 00 88 	store_32 s25, 56(sp)
   15fa4:	5e d3 00 88 	store_32 s26, 52(sp)
   15fa8:	fe c3 00 88 	store_32 ra, 48(sp)
   15fac:	1a 04 00 4f 	movehi s0, 58
   15fb0:	3a 04 00 4f 	movehi s1, 58
   15fb4:	00 07 00 0f 	move s24, 1
   15fb8:	40 63 6f 00 	or s26, s0, 7128
   15fbc:	01 70 6e 00 	or s0, s1, 7068
   15fc0:	20 03 00 0f 	move s25, 0
   15fc4:	3a 03 00 88 	store_32 s25, (s26)
   15fc8:	00 00 00 a8 	load_32 s0, (s0)
   15fcc:	20 00 fc c0 	move s1, s24
   15fd0:	de a3 00 f8 	call 167800 <W_CacheLumpName>
   15fd4:	3a 04 00 4f 	movehi s1, 58
   15fd8:	5a 04 00 4f 	movehi s2, 58
   15fdc:	60 00 f0 c0 	move s3, s0
   15fe0:	21 90 6e 00 	or s1, s1, 7076
   15fe4:	82 80 6e 00 	or s4, s2, 7072
   15fe8:	03 04 00 05 	add_i s0, s3, 1
   15fec:	61 00 00 88 	store_32 s3, (s1)
   15ff0:	04 00 00 88 	store_32 s0, (s4)
   15ff4:	03 00 00 a0 	load_u8 s0, (s3)
   15ff8:	00 b8 01 10 	cmpeq_i s0, s0, 110
   15ffc:	40 00 00 f4 	bnz s0, 8 <G_DoPlayDemo+0x6c>
   16000:	42 00 00 f6 	b 264 <G_DoPlayDemo+0x170>
   16004:	ba 04 00 4f 	movehi s5, 58
   16008:	03 08 00 05 	add_i s0, s3, 2
   1600c:	04 00 00 88 	store_32 s0, (s4)
   16010:	03 04 00 a0 	load_u8 s0, 1(s3)
   16014:	23 0c 00 05 	add_i s1, s3, 3
   16018:	24 00 00 88 	store_32 s1, (s4)
   1601c:	a5 60 6e 00 	or s5, s5, 7064
   16020:	da 04 00 4f 	movehi s6, 58
   16024:	23 08 00 a0 	load_u8 s1, 2(s3)
   16028:	43 10 00 05 	add_i s2, s3, 4
   1602c:	44 00 00 88 	store_32 s2, (s4)
   16030:	43 0c 00 a0 	load_u8 s2, 3(s3)
   16034:	e3 10 00 a0 	load_u8 s7, 4(s3)
   16038:	e5 00 00 88 	store_32 s7, (s5)
   1603c:	a6 60 48 00 	or s5, s6, 4632
   16040:	da 04 00 4f 	movehi s6, 58
   16044:	e3 14 00 a0 	load_u8 s7, 5(s3)
   16048:	e5 00 00 88 	store_32 s7, (s5)
   1604c:	a6 20 38 00 	or s5, s6, 3592
   16050:	e3 18 00 a0 	load_u8 s7, 6(s3)
   16054:	da 04 00 4f 	movehi s6, 58
   16058:	e5 00 00 88 	store_32 s7, (s5)
   1605c:	fa 04 00 4f 	movehi s7, 58
   16060:	a6 30 48 00 	or s5, s6, 4620
   16064:	c3 1c 00 a0 	load_u8 s6, 7(s3)
   16068:	c5 00 00 88 	store_32 s6, (s5)
   1606c:	bb 04 00 4f 	movehi s5, 59
   16070:	c7 c0 6d 00 	or s6, s7, 7024
   16074:	e3 20 00 a0 	load_u8 s7, 8(s3)
   16078:	a5 00 02 00 	or s5, s5, 128
   1607c:	e6 00 00 88 	store_32 s7, (s6)
   16080:	c3 24 00 a0 	load_u8 s6, 9(s3)
   16084:	c5 00 00 88 	store_32 s6, (s5)
   16088:	c3 28 00 a0 	load_u8 s6, 10(s3)
   1608c:	c5 10 00 88 	store_32 s6, 4(s5)
   16090:	e3 2c 00 a0 	load_u8 s7, 11(s3)
   16094:	e5 20 00 88 	store_32 s7, 8(s5)
   16098:	e3 34 00 05 	add_i s7, s3, 13
   1609c:	e4 00 00 88 	store_32 s7, (s4)
   160a0:	63 30 00 a0 	load_u8 s3, 12(s3)
   160a4:	65 30 00 88 	store_32 s3, 12(s5)
   160a8:	e6 00 00 f2 	bz s6, 28 <G_DoPlayDemo+0x12c>
   160ac:	7b 04 00 4f 	movehi s3, 59
   160b0:	9b 04 00 4f 	movehi s4, 59
   160b4:	63 c0 01 00 	or s3, s3, 112
   160b8:	84 b0 01 00 	or s4, s4, 108
   160bc:	03 03 00 88 	store_32 s24, (s3)
   160c0:	04 03 00 88 	store_32 s24, (s4)
   160c4:	73 04 00 4f 	movehi s3, 51
   160c8:	43 d3 48 00 	or s26, s3, 4660
   160cc:	3a 03 00 88 	store_32 s25, (s26)
   160d0:	46 04 00 f8 	call 4376 <G_InitNew>
   160d4:	1b 04 00 4f 	movehi s0, 59
   160d8:	1a 03 00 88 	store_32 s24, (s26)
   160dc:	3a 04 00 4f 	movehi s1, 58
   160e0:	00 20 19 00 	or s0, s0, 1608
   160e4:	21 30 6f 00 	or s1, s1, 7116
   160e8:	20 03 00 88 	store_32 s25, (s0)
   160ec:	01 03 00 88 	store_32 s24, (s1)
   160f0:	fe c3 00 a8 	load_32 ra, 48(sp)
   160f4:	5e d3 00 a8 	load_32 s26, 52(sp)
   160f8:	3e e3 00 a8 	load_32 s25, 56(sp)
   160fc:	1e f3 00 a8 	load_32 s24, 60(sp)
   16100:	de 03 01 05 	add_i sp, sp, 64
   16104:	1f 00 00 f0 	ret
   16108:	1a 04 00 4f 	movehi s0, 58
   1610c:	20 9c 00 0f 	move s1, 39
   16110:	40 04 00 0f 	move s2, 1
   16114:	00 90 16 00 	or s0, s0, 1444
   16118:	60 00 00 a8 	load_32 s3, (s0)
   1611c:	00 00 00 4f 	movehi s0, 0
   16120:	00 a4 1f 00 	or s0, s0, 2025
   16124:	95 f0 00 f8 	call 246356 <fwrite>
   16128:	3a 03 00 88 	store_32 s25, (s26)
   1612c:	f1 ff ff f7 	b -60 <G_DoPlayDemo+0x158>

0000000000016130 G_DoCompleted:
   16130:	de 03 ff 05 	add_i sp, sp, -64
   16134:	1e f3 00 88 	store_32 s24, 60(sp)
   16138:	3e e3 00 88 	store_32 s25, 56(sp)
   1613c:	5e d3 00 88 	store_32 s26, 52(sp)
   16140:	7e c3 00 88 	store_32 s27, 48(sp)
   16144:	fe b3 00 88 	store_32 ra, 44(sp)
   16148:	1a 04 00 4f 	movehi s0, 58
   1614c:	3b 04 00 4f 	movehi s1, 59
   16150:	00 03 00 0f 	move s24, 0
   16154:	20 63 6f 00 	or s25, s0, 7128
   16158:	41 03 02 00 	or s26, s1, 128
   1615c:	19 03 00 88 	store_32 s24, (s25)
   16160:	1a 00 00 a8 	load_32 s0, (s26)
   16164:	20 02 00 f2 	bz s0, 68 <G_DoCompleted+0x78>
   16168:	1b 04 00 4f 	movehi s0, 59
   1616c:	40 c0 00 0f 	move s2, 48
   16170:	20 00 fc c0 	move s1, s24
   16174:	60 43 02 00 	or s27, s0, 144
   16178:	1b b0 00 05 	add_i s0, s27, 44
   1617c:	4a ee 00 f8 	call 244008 <memset>
   16180:	1b 00 00 a8 	load_32 s0, (s27)
   16184:	5f f8 ff 4f 	movehi s2, 524255
   16188:	42 fc 7f 00 	or s2, s2, 8191
   1618c:	20 a0 01 a8 	load_32 s1, 104(s0)
   16190:	21 00 11 c0 	and s1, s1, s2
   16194:	20 a0 01 88 	store_32 s1, 104(s0)
   16198:	1b a3 03 88 	store_32 s24, 232(s27)
   1619c:	1b b3 03 88 	store_32 s24, 236(s27)
   161a0:	1b 73 03 88 	store_32 s24, 220(s27)
   161a4:	1b 83 03 88 	store_32 s24, 224(s27)
   161a8:	1a 10 00 a8 	load_32 s0, 4(s26)
   161ac:	20 02 00 f2 	bz s0, 68 <G_DoCompleted+0xc0>
   161b0:	1b 04 00 4f 	movehi s0, 59
   161b4:	40 c0 00 0f 	move s2, 48
   161b8:	20 00 fc c0 	move s1, s24
   161bc:	60 43 02 00 	or s27, s0, 144
   161c0:	1b 10 05 05 	add_i s0, s27, 324
   161c4:	38 ee 00 f8 	call 243936 <memset>
   161c8:	1b 60 04 a8 	load_32 s0, 280(s27)
   161cc:	5f f8 ff 4f 	movehi s2, 524255
   161d0:	42 fc 7f 00 	or s2, s2, 8191
   161d4:	20 a0 01 a8 	load_32 s1, 104(s0)
   161d8:	21 00 11 c0 	and s1, s1, s2
   161dc:	20 a0 01 88 	store_32 s1, 104(s0)
   161e0:	1b 03 08 88 	store_32 s24, 512(s27)
   161e4:	1b 13 08 88 	store_32 s24, 516(s27)
   161e8:	1b d3 07 88 	store_32 s24, 500(s27)
   161ec:	1b e3 07 88 	store_32 s24, 504(s27)
   161f0:	1a 20 00 a8 	load_32 s0, 8(s26)
   161f4:	20 02 00 f2 	bz s0, 68 <G_DoCompleted+0x108>
   161f8:	1b 04 00 4f 	movehi s0, 59
   161fc:	40 c0 00 0f 	move s2, 48
   16200:	20 00 fc c0 	move s1, s24
   16204:	60 43 02 00 	or s27, s0, 144
   16208:	1b 70 09 05 	add_i s0, s27, 604
   1620c:	26 ee 00 f8 	call 243864 <memset>
   16210:	1b c0 08 a8 	load_32 s0, 560(s27)
   16214:	5f f8 ff 4f 	movehi s2, 524255
   16218:	42 fc 7f 00 	or s2, s2, 8191
   1621c:	20 a0 01 a8 	load_32 s1, 104(s0)
   16220:	21 00 11 c0 	and s1, s1, s2
   16224:	20 a0 01 88 	store_32 s1, 104(s0)
   16228:	1b 63 0c 88 	store_32 s24, 792(s27)
   1622c:	1b 73 0c 88 	store_32 s24, 796(s27)
   16230:	1b 33 0c 88 	store_32 s24, 780(s27)
   16234:	1b 43 0c 88 	store_32 s24, 784(s27)
   16238:	1a 30 00 a8 	load_32 s0, 12(s26)
   1623c:	20 02 00 f2 	bz s0, 68 <G_DoCompleted+0x150>
   16240:	1b 04 00 4f 	movehi s0, 59
   16244:	40 c0 00 0f 	move s2, 48
   16248:	20 00 fc c0 	move s1, s24
   1624c:	60 43 02 00 	or s27, s0, 144
   16250:	1b d0 0d 05 	add_i s0, s27, 884
   16254:	14 ee 00 f8 	call 243792 <memset>
   16258:	1b 20 0d a8 	load_32 s0, 840(s27)
   1625c:	5f f8 ff 4f 	movehi s2, 524255
   16260:	42 fc 7f 00 	or s2, s2, 8191
   16264:	20 a0 01 a8 	load_32 s1, 104(s0)
   16268:	21 00 11 c0 	and s1, s1, s2
   1626c:	20 a0 01 88 	store_32 s1, 104(s0)
   16270:	1b c3 10 88 	store_32 s24, 1072(s27)
   16274:	1b d3 10 88 	store_32 s24, 1076(s27)
   16278:	1b 93 10 88 	store_32 s24, 1060(s27)
   1627c:	1b a3 10 88 	store_32 s24, 1064(s27)
   16280:	00 0c 00 4f 	movehi s0, 96
   16284:	60 d3 21 00 	or s27, s0, 2164
   16288:	1b 00 00 a8 	load_32 s0, (s27)
   1628c:	40 00 00 f2 	bz s0, 8 <G_DoCompleted+0x164>
   16290:	1c 1c 00 f8 	call 28784 <AM_Stop>
   16294:	0b 04 00 4f 	movehi s0, 43
   16298:	3a 04 00 4f 	movehi s1, 58
   1629c:	00 00 40 00 	or s0, s0, 4096
   162a0:	a0 00 00 a8 	load_32 s5, (s0)
   162a4:	01 80 7f 00 	or s0, s1, 8160
   162a8:	40 00 00 a8 	load_32 s2, (s0)
   162ac:	25 08 00 10 	cmpeq_i s1, s5, 2
   162b0:	01 01 00 f4 	bnz s1, 32 <G_DoCompleted+0x1a0>
   162b4:	02 24 00 10 	cmpeq_i s0, s2, 9
   162b8:	60 05 00 f4 	bnz s0, 172 <G_DoCompleted+0x234>
   162bc:	02 20 00 11 	cmpne_i s0, s2, 8
   162c0:	80 00 00 f4 	bnz s0, 16 <G_DoCompleted+0x1a0>
   162c4:	00 1c 00 0f 	move s0, 7
   162c8:	19 00 00 88 	store_32 s0, (s25)
   162cc:	b8 00 00 f6 	b 736 <G_DoCompleted+0x47c>
   162d0:	c2 24 00 10 	cmpeq_i s6, s2, 9
   162d4:	1a 04 00 4f 	movehi s0, 58
   162d8:	fb 04 00 4f 	movehi s7, 59
   162dc:	1a 05 00 4f 	movehi s8, 58
   162e0:	00 c0 6d 00 	or s0, s0, 7024
   162e4:	27 43 19 00 	or s25, s7, 1616
   162e8:	e8 70 6f 00 	or s7, s8, 7132
   162ec:	60 00 00 a8 	load_32 s3, (s0)
   162f0:	1b 04 00 4f 	movehi s0, 59
   162f4:	25 09 00 11 	cmpne_i s9, s5, 2
   162f8:	bb 04 00 4f 	movehi s5, 59
   162fc:	00 40 02 00 	or s0, s0, 144
   16300:	83 60 04 07 	mull_i s4, s3, 280
   16304:	05 71 18 00 	or s8, s5, 1564
   16308:	80 00 52 c0 	add_i s4, s0, s4
   1630c:	a2 fc ff 05 	add_i s5, s2, -1
   16310:	84 50 04 a8 	load_32 s4, 276(s4)
   16314:	99 10 00 88 	store_32 s4, 4(s25)
   16318:	87 00 00 a8 	load_32 s4, (s7)
   1631c:	e4 fc ff 05 	add_i s7, s4, -1
   16320:	f9 00 00 88 	store_32 s7, (s25)
   16324:	b9 20 00 88 	store_32 s5, 8(s25)
   16328:	08 01 00 a8 	load_32 s8, (s8)
   1632c:	49 01 00 f4 	bnz s9, 40 <G_DoCompleted+0x224>
   16330:	a8 02 00 f2 	bz s8, 84 <G_DoCompleted+0x254>
   16334:	c2 7c 00 10 	cmpeq_i s6, s2, 31
   16338:	e6 04 00 f4 	bnz s6, 156 <G_DoCompleted+0x2a4>
   1633c:	c2 3c 00 11 	cmpne_i s6, s2, 15
   16340:	e6 04 00 f4 	bnz s6, 156 <G_DoCompleted+0x2ac>
   16344:	40 78 00 0f 	move s2, 30
   16348:	59 30 00 88 	store_32 s2, 12(s25)
   1634c:	40 3c 00 0f 	move s2, 15
   16350:	23 00 00 f6 	b 140 <G_DoCompleted+0x2ac>
   16354:	48 02 00 f2 	bz s8, 72 <G_DoCompleted+0x26c>
   16358:	c0 20 00 0f 	move s6, 8
   1635c:	d9 30 00 88 	store_32 s6, 12(s25)
   16360:	1f 00 00 f6 	b 124 <G_DoCompleted+0x2ac>
   16364:	1b 04 00 4f 	movehi s0, 59
   16368:	c0 04 00 0f 	move s6, 1
   1636c:	00 40 02 00 	or s0, s0, 144
   16370:	c0 50 04 88 	store_32 s6, 276(s0)
   16374:	c0 b0 08 88 	store_32 s6, 556(s0)
   16378:	c0 10 0d 88 	store_32 s6, 836(s0)
   1637c:	c0 70 11 88 	store_32 s6, 1116(s0)
   16380:	d5 ff ff f7 	b -172 <G_DoCompleted+0x1a4>
   16384:	c2 84 ff 05 	add_i s6, s2, -31
   16388:	c6 04 00 16 	cmpgt_u s6, s6, 1
   1638c:	66 02 00 f4 	bnz s6, 76 <G_DoCompleted+0x2a8>
   16390:	c0 3c 00 0f 	move s6, 15
   16394:	d9 30 00 88 	store_32 s6, 12(s25)
   16398:	11 00 00 f6 	b 68 <G_DoCompleted+0x2ac>
   1639c:	c6 04 00 01 	and s6, s6, 1
   163a0:	c6 01 00 f2 	bz s6, 56 <G_DoCompleted+0x2a8>
   163a4:	c7 0c 00 16 	cmpgt_u s6, s7, 3
   163a8:	40 24 00 0f 	move s2, 9
   163ac:	86 01 00 f4 	bnz s6, 48 <G_DoCompleted+0x2ac>
   163b0:	c3 00 00 4f 	movehi s6, 3
   163b4:	e7 08 00 0b 	shl s7, s7, 2
   163b8:	c6 e0 2f 00 	or s6, s6, 3064
   163bc:	c7 00 53 c0 	add_i s6, s7, s6
   163c0:	c6 00 00 a8 	load_32 s6, (s6)
   163c4:	06 00 00 f0 	b s6
   163c8:	c0 0c 00 0f 	move s6, 3
   163cc:	d9 30 00 88 	store_32 s6, 12(s25)
   163d0:	03 00 00 f6 	b 12 <G_DoCompleted+0x2ac>
   163d4:	40 7c 00 0f 	move s2, 31
   163d8:	59 30 00 88 	store_32 s2, 12(s25)
   163dc:	db 04 00 4f 	movehi s6, 59
   163e0:	fb 04 00 4f 	movehi s7, 59
   163e4:	1b 05 00 4f 	movehi s8, 59
   163e8:	c6 f0 18 00 	or s6, s6, 1596
   163ec:	e7 e0 18 00 	or s7, s7, 1592
   163f0:	c6 00 00 a8 	load_32 s6, (s6)
   163f4:	d9 40 00 88 	store_32 s6, 16(s25)
   163f8:	c8 00 19 00 	or s6, s8, 1600
   163fc:	e7 00 00 a8 	load_32 s7, (s7)
   16400:	f9 50 00 88 	store_32 s7, 20(s25)
   16404:	c6 00 00 a8 	load_32 s6, (s6)
   16408:	d9 60 00 88 	store_32 s6, 24(s25)
   1640c:	19 73 00 88 	store_32 s24, 28(s25)
   16410:	e1 00 00 f4 	bnz s1, 28 <G_DoCompleted+0x2fc>
   16414:	33 04 00 4f 	movehi s1, 51
   16418:	84 a0 00 07 	mull_i s4, s4, 40
   1641c:	42 08 00 0b 	shl s2, s2, 2
   16420:	21 70 49 00 	or s1, s1, 4700
   16424:	21 00 52 c0 	add_i s1, s1, s4
   16428:	04 00 00 f6 	b 16 <G_DoCompleted+0x308>
   1642c:	33 04 00 4f 	movehi s1, 51
   16430:	45 08 00 0b 	shl s2, s5, 2
   16434:	21 f0 4b 00 	or s1, s1, 4860
   16438:	21 00 51 c0 	add_i s1, s1, s2
   1643c:	5c 04 00 4f 	movehi s2, 60
   16440:	21 00 00 a8 	load_32 s1, (s1)
   16444:	42 40 02 00 	or s2, s2, 144
   16448:	21 8c 00 07 	mull_i s1, s1, 35
   1644c:	39 80 00 88 	store_32 s1, 32(s25)
   16450:	79 90 00 88 	store_32 s3, 36(s25)
   16454:	7b 04 00 4f 	movehi s3, 59
   16458:	22 00 00 a8 	load_32 s1, (s2)
   1645c:	5a 00 00 a8 	load_32 s2, (s26)
   16460:	59 a0 00 88 	store_32 s2, 40(s25)
   16464:	40 30 03 a8 	load_32 s2, 204(s0)
   16468:	59 b0 00 88 	store_32 s2, 44(s25)
   1646c:	40 40 03 a8 	load_32 s2, 208(s0)
   16470:	59 c0 00 88 	store_32 s2, 48(s25)
   16474:	40 50 03 a8 	load_32 s2, 212(s0)
   16478:	59 d0 00 88 	store_32 s2, 52(s25)
   1647c:	39 e0 00 88 	store_32 s1, 56(s25)
   16480:	40 b0 01 a8 	load_32 s2, 108(s0)
   16484:	59 20 01 88 	store_32 s2, 72(s25)
   16488:	40 a0 01 a8 	load_32 s2, 104(s0)
   1648c:	59 10 01 88 	store_32 s2, 68(s25)
   16490:	40 90 01 a8 	load_32 s2, 100(s0)
   16494:	59 00 01 88 	store_32 s2, 64(s25)
   16498:	40 80 01 a8 	load_32 s2, 96(s0)
   1649c:	59 f0 00 88 	store_32 s2, 60(s25)
   164a0:	5a 10 00 a8 	load_32 s2, 4(s26)
   164a4:	59 40 01 88 	store_32 s2, 80(s25)
   164a8:	40 90 07 a8 	load_32 s2, 484(s0)
   164ac:	59 50 01 88 	store_32 s2, 84(s25)
   164b0:	40 a0 07 a8 	load_32 s2, 488(s0)
   164b4:	59 60 01 88 	store_32 s2, 88(s25)
   164b8:	40 b0 07 a8 	load_32 s2, 492(s0)
   164bc:	59 70 01 88 	store_32 s2, 92(s25)
   164c0:	39 80 01 88 	store_32 s1, 96(s25)
   164c4:	40 e0 05 a8 	load_32 s2, 376(s0)
   164c8:	59 90 01 88 	store_32 s2, 100(s25)
   164cc:	40 f0 05 a8 	load_32 s2, 380(s0)
   164d0:	59 a0 01 88 	store_32 s2, 104(s25)
   164d4:	40 00 06 a8 	load_32 s2, 384(s0)
   164d8:	59 b0 01 88 	store_32 s2, 108(s25)
   164dc:	40 10 06 a8 	load_32 s2, 388(s0)
   164e0:	59 c0 01 88 	store_32 s2, 112(s25)
   164e4:	5a 20 00 a8 	load_32 s2, 8(s26)
   164e8:	59 e0 01 88 	store_32 s2, 120(s25)
   164ec:	40 f0 0b a8 	load_32 s2, 764(s0)
   164f0:	59 f0 01 88 	store_32 s2, 124(s25)
   164f4:	40 00 0c a8 	load_32 s2, 768(s0)
   164f8:	59 00 02 88 	store_32 s2, 128(s25)
   164fc:	40 10 0c a8 	load_32 s2, 772(s0)
   16500:	59 10 02 88 	store_32 s2, 132(s25)
   16504:	39 20 02 88 	store_32 s1, 136(s25)
   16508:	40 40 0a a8 	load_32 s2, 656(s0)
   1650c:	59 30 02 88 	store_32 s2, 140(s25)
   16510:	40 50 0a a8 	load_32 s2, 660(s0)
   16514:	59 40 02 88 	store_32 s2, 144(s25)
   16518:	40 60 0a a8 	load_32 s2, 664(s0)
   1651c:	59 50 02 88 	store_32 s2, 148(s25)
   16520:	40 70 0a a8 	load_32 s2, 668(s0)
   16524:	59 60 02 88 	store_32 s2, 152(s25)
   16528:	5a 30 00 a8 	load_32 s2, 12(s26)
   1652c:	59 80 02 88 	store_32 s2, 160(s25)
   16530:	40 50 10 a8 	load_32 s2, 1044(s0)
   16534:	59 90 02 88 	store_32 s2, 164(s25)
   16538:	40 60 10 a8 	load_32 s2, 1048(s0)
   1653c:	59 a0 02 88 	store_32 s2, 168(s25)
   16540:	40 70 10 a8 	load_32 s2, 1052(s0)
   16544:	59 b0 02 88 	store_32 s2, 172(s25)
   16548:	40 04 00 0f 	move s2, 1
   1654c:	39 c0 02 88 	store_32 s1, 176(s25)
   16550:	20 a0 0e a8 	load_32 s1, 936(s0)
   16554:	39 d0 02 88 	store_32 s1, 180(s25)
   16558:	20 b0 0e a8 	load_32 s1, 940(s0)
   1655c:	39 e0 02 88 	store_32 s1, 184(s25)
   16560:	20 c0 0e a8 	load_32 s1, 944(s0)
   16564:	39 f0 02 88 	store_32 s1, 188(s25)
   16568:	3a 04 00 4f 	movehi s1, 58
   1656c:	00 d0 0e a8 	load_32 s0, 948(s0)
   16570:	19 00 03 88 	store_32 s0, 192(s25)
   16574:	01 a0 7f 00 	or s0, s1, 8168
   16578:	3b 04 00 4f 	movehi s1, 59
   1657c:	40 00 00 88 	store_32 s2, (s0)
   16580:	03 c0 18 00 	or s0, s3, 1584
   16584:	21 30 19 00 	or s1, s1, 1612
   16588:	01 03 00 88 	store_32 s24, (s1)
   1658c:	1b 03 00 88 	store_32 s24, (s27)
   16590:	00 00 00 a8 	load_32 s0, (s0)
   16594:	80 00 00 f2 	bz s0, 16 <G_DoCompleted+0x474>
   16598:	40 20 03 0f 	move s2, 200
   1659c:	20 80 fc c0 	move s1, s25
   165a0:	d9 ed 00 f8 	call 243556 <memcpy>
   165a4:	00 80 fc c0 	move s0, s25
   165a8:	dd bd 00 f8 	call 194420 <WI_Start>
   165ac:	fe b3 00 a8 	load_32 ra, 44(sp)
   165b0:	7e c3 00 a8 	load_32 s27, 48(sp)
   165b4:	5e d3 00 a8 	load_32 s26, 52(sp)
   165b8:	3e e3 00 a8 	load_32 s25, 56(sp)
   165bc:	1e f3 00 a8 	load_32 s24, 60(sp)
   165c0:	de 03 01 05 	add_i sp, sp, 64
   165c4:	1f 00 00 f0 	ret
   165c8:	c0 14 00 0f 	move s6, 5
   165cc:	d9 30 00 88 	store_32 s6, 12(s25)
   165d0:	83 ff ff f7 	b -500 <G_DoCompleted+0x2ac>
   165d4:	c0 18 00 0f 	move s6, 6
   165d8:	d9 30 00 88 	store_32 s6, 12(s25)
   165dc:	80 ff ff f7 	b -512 <G_DoCompleted+0x2ac>
   165e0:	c0 08 00 0f 	move s6, 2
   165e4:	d9 30 00 88 	store_32 s6, 12(s25)
   165e8:	7d ff ff f7 	b -524 <G_DoCompleted+0x2ac>

00000000000165ec G_DoWorldDone:
   165ec:	de 03 ff 05 	add_i sp, sp, -64
   165f0:	1e f3 00 88 	store_32 s24, 60(sp)
   165f4:	fe e3 00 88 	store_32 ra, 56(sp)
   165f8:	1a 04 00 4f 	movehi s0, 58
   165fc:	3b 04 00 4f 	movehi s1, 59
   16600:	00 03 00 0f 	move s24, 0
   16604:	00 a0 7f 00 	or s0, s0, 8168
   16608:	21 40 19 00 	or s1, s1, 1616
   1660c:	00 03 00 88 	store_32 s24, (s0)
   16610:	1a 04 00 4f 	movehi s0, 58
   16614:	21 30 00 a8 	load_32 s1, 12(s1)
   16618:	00 80 7f 00 	or s0, s0, 8160
   1661c:	21 04 00 05 	add_i s1, s1, 1
   16620:	20 00 00 88 	store_32 s1, (s0)
   16624:	38 f9 ff f9 	call -6944 <G_DoLoadLevel>
   16628:	1a 04 00 4f 	movehi s0, 58
   1662c:	3b 04 00 4f 	movehi s1, 59
   16630:	00 60 6f 00 	or s0, s0, 7128
   16634:	21 30 19 00 	or s1, s1, 1612
   16638:	00 03 00 88 	store_32 s24, (s0)
   1663c:	00 04 00 0f 	move s0, 1
   16640:	01 00 00 88 	store_32 s0, (s1)
   16644:	fe e3 00 a8 	load_32 ra, 56(sp)
   16648:	1e f3 00 a8 	load_32 s24, 60(sp)
   1664c:	de 03 01 05 	add_i sp, sp, 64
   16650:	1f 00 00 f0 	ret

0000000000016654 G_ReadDemoTiccmd:
   16654:	de 03 ff 05 	add_i sp, sp, -64
   16658:	fe f3 00 88 	store_32 ra, 60(sp)
   1665c:	3a 04 00 4f 	movehi s1, 58
   16660:	41 80 6e 00 	or s2, s1, 7072
   16664:	22 00 00 a8 	load_32 s1, (s2)
   16668:	61 00 00 a0 	load_u8 s3, (s1)
   1666c:	63 00 02 11 	cmpne_i s3, s3, 128
   16670:	a3 00 00 f4 	bnz s3, 20 <G_ReadDemoTiccmd+0x30>
   16674:	3c 04 00 f8 	call 4336 <G_CheckDemoStatus>
   16678:	fe f3 00 a8 	load_32 ra, 60(sp)
   1667c:	de 03 01 05 	add_i sp, sp, 64
   16680:	1f 00 00 f0 	ret
   16684:	61 04 00 05 	add_i s3, s1, 1
   16688:	62 00 00 88 	store_32 s3, (s2)
   1668c:	61 00 00 a0 	load_u8 s3, (s1)
   16690:	60 00 00 82 	store_8 s3, (s0)
   16694:	61 08 00 05 	add_i s3, s1, 2
   16698:	62 00 00 88 	store_32 s3, (s2)
   1669c:	61 04 00 a0 	load_u8 s3, 1(s1)
   166a0:	60 04 00 82 	store_8 s3, 1(s0)
   166a4:	61 0c 00 05 	add_i s3, s1, 3
   166a8:	62 00 00 88 	store_32 s3, (s2)
   166ac:	61 08 00 a0 	load_u8 s3, 2(s1)
   166b0:	63 20 00 0b 	shl s3, s3, 8
   166b4:	60 08 00 86 	store_16 s3, 2(s0)
   166b8:	61 10 00 05 	add_i s3, s1, 4
   166bc:	62 00 00 88 	store_32 s3, (s2)
   166c0:	21 0c 00 a0 	load_u8 s1, 3(s1)
   166c4:	20 1c 00 82 	store_8 s1, 7(s0)
   166c8:	fe f3 00 a8 	load_32 ra, 60(sp)
   166cc:	de 03 01 05 	add_i sp, sp, 64
   166d0:	1f 00 00 f0 	ret

00000000000166d4 G_WriteDemoTiccmd:
   166d4:	de 03 ff 05 	add_i sp, sp, -64
   166d8:	1e f3 00 88 	store_32 s24, 60(sp)
   166dc:	fe e3 00 88 	store_32 ra, 56(sp)
   166e0:	3a 04 00 4f 	movehi s1, 58
   166e4:	21 80 6f 00 	or s1, s1, 7136
   166e8:	21 10 07 a8 	load_32 s1, 452(s1)
   166ec:	00 03 f0 c0 	move s24, s0
   166f0:	41 00 00 f2 	bz s1, 8 <G_WriteDemoTiccmd+0x24>
   166f4:	1c 04 00 f8 	call 4208 <G_CheckDemoStatus>
   166f8:	1a 04 00 4f 	movehi s0, 58
   166fc:	38 00 00 a0 	load_u8 s1, (s24)
   16700:	00 80 6e 00 	or s0, s0, 7072
   16704:	40 00 00 a8 	load_32 s2, (s0)
   16708:	62 04 00 05 	add_i s3, s2, 1
   1670c:	60 00 00 88 	store_32 s3, (s0)
   16710:	22 00 00 82 	store_8 s1, (s2)
   16714:	38 04 00 a0 	load_u8 s1, 1(s24)
   16718:	40 00 00 a8 	load_32 s2, (s0)
   1671c:	62 04 00 05 	add_i s3, s2, 1
   16720:	60 00 00 88 	store_32 s3, (s0)
   16724:	22 00 00 82 	store_8 s1, (s2)
   16728:	38 08 00 a6 	load_s16 s1, 2(s24)
   1672c:	40 00 00 a8 	load_32 s2, (s0)
   16730:	21 00 02 05 	add_i s1, s1, 128
   16734:	62 04 00 05 	add_i s3, s2, 1
   16738:	60 00 00 88 	store_32 s3, (s0)
   1673c:	21 20 00 0a 	shr s1, s1, 8
   16740:	22 00 00 82 	store_8 s1, (s2)
   16744:	38 1c 00 a0 	load_u8 s1, 7(s24)
   16748:	40 00 00 a8 	load_32 s2, (s0)
   1674c:	62 04 00 05 	add_i s3, s2, 1
   16750:	60 00 00 88 	store_32 s3, (s0)
   16754:	22 00 00 82 	store_8 s1, (s2)
   16758:	5a 04 00 4f 	movehi s2, 58
   1675c:	20 00 00 a8 	load_32 s1, (s0)
   16760:	62 a0 6e 00 	or s3, s2, 7080
   16764:	41 f0 ff 05 	add_i s2, s1, -4
   16768:	40 00 00 88 	store_32 s2, (s0)
   1676c:	63 00 00 a8 	load_32 s3, (s3)
   16770:	63 c0 ff 05 	add_i s3, s3, -16
   16774:	62 80 91 c1 	cmple_u s3, s2, s3
   16778:	c3 00 00 f4 	bnz s3, 24 <G_WriteDemoTiccmd+0xbc>
   1677c:	fa 03 00 f8 	call 4072 <G_CheckDemoStatus>
   16780:	fe e3 00 a8 	load_32 ra, 56(sp)
   16784:	1e f3 00 a8 	load_32 s24, 60(sp)
   16788:	de 03 01 05 	add_i sp, sp, 64
   1678c:	1f 00 00 f0 	ret
   16790:	42 00 00 a0 	load_u8 s2, (s2)
   16794:	42 00 02 11 	cmpne_i s2, s2, 128
   16798:	c2 00 00 f4 	bnz s2, 24 <G_WriteDemoTiccmd+0xdc>
   1679c:	f2 03 00 f8 	call 4040 <G_CheckDemoStatus>
   167a0:	fe e3 00 a8 	load_32 ra, 56(sp)
   167a4:	1e f3 00 a8 	load_32 s24, 60(sp)
   167a8:	de 03 01 05 	add_i sp, sp, 64
   167ac:	1f 00 00 f0 	ret
   167b0:	41 f4 ff 05 	add_i s2, s1, -3
   167b4:	40 00 00 88 	store_32 s2, (s0)
   167b8:	41 f0 ff a1 	load_u8 s2, -4(s1)
   167bc:	58 00 00 82 	store_8 s2, (s24)
   167c0:	41 f8 ff 05 	add_i s2, s1, -2
   167c4:	40 00 00 88 	store_32 s2, (s0)
   167c8:	41 f4 ff a1 	load_u8 s2, -3(s1)
   167cc:	58 04 00 82 	store_8 s2, 1(s24)
   167d0:	41 fc ff 05 	add_i s2, s1, -1
   167d4:	40 00 00 88 	store_32 s2, (s0)
   167d8:	41 f8 ff a1 	load_u8 s2, -2(s1)
   167dc:	42 20 00 0b 	shl s2, s2, 8
   167e0:	58 08 00 86 	store_16 s2, 2(s24)
   167e4:	20 00 00 88 	store_32 s1, (s0)
   167e8:	01 fc ff a1 	load_u8 s0, -1(s1)
   167ec:	18 1c 00 82 	store_8 s0, 7(s24)
   167f0:	fe e3 00 a8 	load_32 ra, 56(sp)
   167f4:	1e f3 00 a8 	load_32 s24, 60(sp)
   167f8:	de 03 01 05 	add_i sp, sp, 64
   167fc:	1f 00 00 f0 	ret

0000000000016800 G_InitPlayer:
   16800:	de 03 ff 05 	add_i sp, sp, -64
   16804:	1e f3 00 88 	store_32 s24, 60(sp)
   16808:	3e e3 00 88 	store_32 s25, 56(sp)
   1680c:	5e d3 00 88 	store_32 s26, 52(sp)
   16810:	7e c3 00 88 	store_32 s27, 48(sp)
   16814:	fe b3 00 88 	store_32 ra, 44(sp)
   16818:	3b 04 00 4f 	movehi s1, 59
   1681c:	00 60 04 07 	mull_i s0, s0, 280
   16820:	20 03 00 0f 	move s25, 0
   16824:	21 40 02 00 	or s1, s1, 144
   16828:	40 60 04 0f 	move s2, 280
   1682c:	01 03 50 c0 	add_i s24, s1, s0
   16830:	18 b0 01 a8 	load_32 s0, 108(s24)
   16834:	1e a0 00 88 	store_32 s0, 40(sp)
   16838:	18 a0 01 a8 	load_32 s0, 104(s24)
   1683c:	1e 90 00 88 	store_32 s0, 36(sp)
   16840:	18 90 01 a8 	load_32 s0, 100(s24)
   16844:	1e 80 00 88 	store_32 s0, 32(sp)
   16848:	18 80 01 a8 	load_32 s0, 96(s24)
   1684c:	1e 70 00 88 	store_32 s0, 28(sp)
   16850:	58 33 03 a8 	load_32 s26, 204(s24)
   16854:	78 43 03 a8 	load_32 s27, 208(s24)
   16858:	18 50 03 a8 	load_32 s0, 212(s24)
   1685c:	1e 60 00 88 	store_32 s0, 24(sp)
   16860:	00 00 fc c0 	move s0, s24
   16864:	20 80 fc c0 	move s1, s25
   16868:	8f ec 00 f8 	call 242236 <memset>
   1686c:	1e 70 00 a8 	load_32 s0, 28(sp)
   16870:	20 90 01 0f 	move s1, 100
   16874:	18 80 01 88 	store_32 s0, 96(s24)
   16878:	1e 80 00 a8 	load_32 s0, 32(sp)
   1687c:	18 90 01 88 	store_32 s0, 100(s24)
   16880:	1e 90 00 a8 	load_32 s0, 36(sp)
   16884:	18 a0 01 88 	store_32 s0, 104(s24)
   16888:	1e a0 00 a8 	load_32 s0, 40(sp)
   1688c:	18 b0 01 88 	store_32 s0, 108(s24)
   16890:	58 33 03 88 	store_32 s26, 204(s24)
   16894:	78 43 03 88 	store_32 s27, 208(s24)
   16898:	1e 60 00 a8 	load_32 s0, 24(sp)
   1689c:	18 50 03 88 	store_32 s0, 212(s24)
   168a0:	00 04 00 0f 	move s0, 1
   168a4:	18 f0 02 88 	store_32 s0, 188(s24)
   168a8:	18 00 03 88 	store_32 s0, 192(s24)
   168ac:	38 13 00 88 	store_32 s25, 4(s24)
   168b0:	38 80 00 88 	store_32 s1, 32(s24)
   168b4:	33 04 00 4f 	movehi s1, 51
   168b8:	18 d0 01 88 	store_32 s0, 116(s24)
   168bc:	18 c0 01 88 	store_32 s0, 112(s24)
   168c0:	18 e0 01 88 	store_32 s0, 120(s24)
   168c4:	18 f0 01 88 	store_32 s0, 124(s24)
   168c8:	01 b0 7b 00 	or s0, s1, 7916
   168cc:	20 c8 00 0f 	move s1, 50
   168d0:	38 70 02 88 	store_32 s1, 156(s24)
   168d4:	20 30 00 a8 	load_32 s1, 12(s0)
   168d8:	38 e0 02 88 	store_32 s1, 184(s24)
   168dc:	20 20 00 a8 	load_32 s1, 8(s0)
   168e0:	38 d0 02 88 	store_32 s1, 180(s24)
   168e4:	20 10 00 a8 	load_32 s1, 4(s0)
   168e8:	38 c0 02 88 	store_32 s1, 176(s24)
   168ec:	00 00 00 a8 	load_32 s0, (s0)
   168f0:	18 b0 02 88 	store_32 s0, 172(s24)
   168f4:	fe b3 00 a8 	load_32 ra, 44(sp)
   168f8:	7e c3 00 a8 	load_32 s27, 48(sp)
   168fc:	5e d3 00 a8 	load_32 s26, 52(sp)
   16900:	3e e3 00 a8 	load_32 s25, 56(sp)
   16904:	1e f3 00 a8 	load_32 s24, 60(sp)
   16908:	de 03 01 05 	add_i sp, sp, 64
   1690c:	1f 00 00 f0 	ret

0000000000016910 G_PlayerReborn:
   16910:	de 03 ff 05 	add_i sp, sp, -64
   16914:	1e f3 00 88 	store_32 s24, 60(sp)
   16918:	3e e3 00 88 	store_32 s25, 56(sp)
   1691c:	5e d3 00 88 	store_32 s26, 52(sp)
   16920:	7e c3 00 88 	store_32 s27, 48(sp)
   16924:	fe b3 00 88 	store_32 ra, 44(sp)
   16928:	3b 04 00 4f 	movehi s1, 59
   1692c:	00 60 04 07 	mull_i s0, s0, 280
   16930:	20 03 00 0f 	move s25, 0
   16934:	21 40 02 00 	or s1, s1, 144
   16938:	40 60 04 0f 	move s2, 280
   1693c:	01 03 50 c0 	add_i s24, s1, s0
   16940:	18 b0 01 a8 	load_32 s0, 108(s24)
   16944:	1e a0 00 88 	store_32 s0, 40(sp)
   16948:	18 a0 01 a8 	load_32 s0, 104(s24)
   1694c:	1e 90 00 88 	store_32 s0, 36(sp)
   16950:	18 90 01 a8 	load_32 s0, 100(s24)
   16954:	1e 80 00 88 	store_32 s0, 32(sp)
   16958:	18 80 01 a8 	load_32 s0, 96(s24)
   1695c:	1e 70 00 88 	store_32 s0, 28(sp)
   16960:	58 33 03 a8 	load_32 s26, 204(s24)
   16964:	78 43 03 a8 	load_32 s27, 208(s24)
   16968:	18 50 03 a8 	load_32 s0, 212(s24)
   1696c:	1e 60 00 88 	store_32 s0, 24(sp)
   16970:	00 00 fc c0 	move s0, s24
   16974:	20 80 fc c0 	move s1, s25
   16978:	4b ec 00 f8 	call 241964 <memset>
   1697c:	1e 70 00 a8 	load_32 s0, 28(sp)
   16980:	20 90 01 0f 	move s1, 100
   16984:	18 80 01 88 	store_32 s0, 96(s24)
   16988:	1e 80 00 a8 	load_32 s0, 32(sp)
   1698c:	18 90 01 88 	store_32 s0, 100(s24)
   16990:	1e 90 00 a8 	load_32 s0, 36(sp)
   16994:	18 a0 01 88 	store_32 s0, 104(s24)
   16998:	1e a0 00 a8 	load_32 s0, 40(sp)
   1699c:	18 b0 01 88 	store_32 s0, 108(s24)
   169a0:	58 33 03 88 	store_32 s26, 204(s24)
   169a4:	78 43 03 88 	store_32 s27, 208(s24)
   169a8:	1e 60 00 a8 	load_32 s0, 24(sp)
   169ac:	18 50 03 88 	store_32 s0, 212(s24)
   169b0:	00 04 00 0f 	move s0, 1
   169b4:	18 f0 02 88 	store_32 s0, 188(s24)
   169b8:	18 00 03 88 	store_32 s0, 192(s24)
   169bc:	38 13 00 88 	store_32 s25, 4(s24)
   169c0:	38 80 00 88 	store_32 s1, 32(s24)
   169c4:	33 04 00 4f 	movehi s1, 51
   169c8:	18 d0 01 88 	store_32 s0, 116(s24)
   169cc:	18 c0 01 88 	store_32 s0, 112(s24)
   169d0:	18 e0 01 88 	store_32 s0, 120(s24)
   169d4:	18 f0 01 88 	store_32 s0, 124(s24)
   169d8:	01 b0 7b 00 	or s0, s1, 7916
   169dc:	20 c8 00 0f 	move s1, 50
   169e0:	38 70 02 88 	store_32 s1, 156(s24)
   169e4:	20 30 00 a8 	load_32 s1, 12(s0)
   169e8:	38 e0 02 88 	store_32 s1, 184(s24)
   169ec:	20 20 00 a8 	load_32 s1, 8(s0)
   169f0:	38 d0 02 88 	store_32 s1, 180(s24)
   169f4:	20 10 00 a8 	load_32 s1, 4(s0)
   169f8:	38 c0 02 88 	store_32 s1, 176(s24)
   169fc:	00 00 00 a8 	load_32 s0, (s0)
   16a00:	18 b0 02 88 	store_32 s0, 172(s24)
   16a04:	fe b3 00 a8 	load_32 ra, 44(sp)
   16a08:	7e c3 00 a8 	load_32 s27, 48(sp)
   16a0c:	5e d3 00 a8 	load_32 s26, 52(sp)
   16a10:	3e e3 00 a8 	load_32 s25, 56(sp)
   16a14:	1e f3 00 a8 	load_32 s24, 60(sp)
   16a18:	de 03 01 05 	add_i sp, sp, 64
   16a1c:	1f 00 00 f0 	ret

0000000000016a20 G_PlayerFinishLevel:
   16a20:	de 03 ff 05 	add_i sp, sp, -64
   16a24:	1e f3 00 88 	store_32 s24, 60(sp)
   16a28:	3e e3 00 88 	store_32 s25, 56(sp)
   16a2c:	fe d3 00 88 	store_32 ra, 52(sp)
   16a30:	3b 04 00 4f 	movehi s1, 59
   16a34:	00 60 04 07 	mull_i s0, s0, 280
   16a38:	00 03 00 0f 	move s24, 0
   16a3c:	21 40 02 00 	or s1, s1, 144
   16a40:	40 c0 00 0f 	move s2, 48
   16a44:	21 03 50 c0 	add_i s25, s1, s0
   16a48:	20 00 fc c0 	move s1, s24
   16a4c:	19 b0 00 05 	add_i s0, s25, 44
   16a50:	15 ec 00 f8 	call 241748 <memset>
   16a54:	19 00 00 a8 	load_32 s0, (s25)
   16a58:	5f f8 ff 4f 	movehi s2, 524255
   16a5c:	42 fc 7f 00 	or s2, s2, 8191
   16a60:	20 a0 01 a8 	load_32 s1, 104(s0)
   16a64:	21 00 11 c0 	and s1, s1, s2
   16a68:	20 a0 01 88 	store_32 s1, 104(s0)
   16a6c:	19 a3 03 88 	store_32 s24, 232(s25)
   16a70:	19 b3 03 88 	store_32 s24, 236(s25)
   16a74:	19 73 03 88 	store_32 s24, 220(s25)
   16a78:	19 83 03 88 	store_32 s24, 224(s25)
   16a7c:	fe d3 00 a8 	load_32 ra, 52(sp)
   16a80:	3e e3 00 a8 	load_32 s25, 56(sp)
   16a84:	1e f3 00 a8 	load_32 s24, 60(sp)
   16a88:	de 03 01 05 	add_i sp, sp, 64
   16a8c:	1f 00 00 f0 	ret

0000000000016a90 G_CheckSpot:
   16a90:	de 03 ff 05 	add_i sp, sp, -64
   16a94:	1e f3 00 88 	store_32 s24, 60(sp)
   16a98:	3e e3 00 88 	store_32 s25, 56(sp)
   16a9c:	5e d3 00 88 	store_32 s26, 52(sp)
   16aa0:	7e c3 00 88 	store_32 s27, 48(sp)
   16aa4:	fe b3 00 88 	store_32 ra, 44(sp)
   16aa8:	5b 04 00 4f 	movehi s2, 59
   16aac:	62 43 02 00 	or s27, s2, 144
   16ab0:	40 60 04 07 	mull_i s2, s0, 280
   16ab4:	3b 03 51 c0 	add_i s25, s27, s2
   16ab8:	79 00 00 a8 	load_32 s3, (s25)
   16abc:	00 83 f0 c0 	move s24, s1
   16ac0:	43 00 00 f4 	bnz s3, 8 <G_CheckSpot+0x38>
   16ac4:	53 00 00 f6 	b 332 <G_CheckSpot+0x180>
   16ac8:	18 00 00 a6 	load_s16 s0, (s24)
   16acc:	38 08 00 a6 	load_s16 s1, 2(s24)
   16ad0:	40 43 00 0b 	shl s26, s0, 16
   16ad4:	41 40 00 0b 	shl s2, s1, 16
   16ad8:	00 80 f1 c0 	move s0, s3
   16adc:	20 00 fd c0 	move s1, s26
   16ae0:	5e a0 00 88 	store_32 s2, 40(sp)
   16ae4:	df 44 00 f8 	call 70524 <P_CheckPosition>
   16ae8:	00 0c 00 f2 	bz s0, 384 <G_CheckSpot+0x1d8>
   16aec:	1a 04 00 4f 	movehi s0, 58
   16af0:	5e 93 00 88 	store_32 s26, 36(sp)
   16af4:	40 33 6c 00 	or s26, s0, 6924
   16af8:	1a 00 00 a8 	load_32 s0, (s26)
   16afc:	20 80 00 14 	cmplt_i s1, s0, 32
   16b00:	21 01 00 f4 	bnz s1, 36 <G_CheckSpot+0x94>
   16b04:	3a 04 00 4f 	movehi s1, 58
   16b08:	00 7c 00 01 	and s0, s0, 31
   16b0c:	21 30 6a 00 	or s1, s1, 6796
   16b10:	00 08 00 0b 	shl s0, s0, 2
   16b14:	01 00 50 c0 	add_i s0, s1, s0
   16b18:	00 00 00 a8 	load_32 s0, (s0)
   16b1c:	1a 6d 00 f8 	call 111720 <P_RemoveMobj>
   16b20:	1a 00 00 a8 	load_32 s0, (s26)
   16b24:	20 7c 00 09 	ashr s1, s0, 31
   16b28:	5f fc 3f 4f 	movehi s2, 131071
   16b2c:	7a 04 00 4f 	movehi s3, 58
   16b30:	21 6c 00 0a 	shr s1, s1, 27
   16b34:	20 80 50 c0 	add_i s1, s0, s1
   16b38:	42 80 7f 00 	or s2, s2, 8160
   16b3c:	21 00 11 c0 	and s1, s1, s2
   16b40:	20 80 60 c0 	sub_i s1, s0, s1
   16b44:	43 30 6a 00 	or s2, s3, 6796
   16b48:	00 04 00 05 	add_i s0, s0, 1
   16b4c:	21 08 00 0b 	shl s1, s1, 2
   16b50:	22 80 50 c0 	add_i s1, s2, s1
   16b54:	59 00 00 a8 	load_32 s2, (s25)
   16b58:	41 00 00 88 	store_32 s2, (s1)
   16b5c:	1a 00 00 88 	store_32 s0, (s26)
   16b60:	3e 93 00 a8 	load_32 s25, 36(sp)
   16b64:	00 80 fc c0 	move s0, s25
   16b68:	5e a3 00 a8 	load_32 s26, 40(sp)
   16b6c:	20 00 fd c0 	move s1, s26
   16b70:	cf 8c 00 f8 	call 144188 <R_PointInSubsector>
   16b74:	5b 08 b6 4f 	movehi s2, 372827
   16b78:	38 10 00 a6 	load_s16 s1, 4(s24)
   16b7c:	74 04 00 4f 	movehi s3, 52
   16b80:	42 dc 02 00 	or s2, s2, 183
   16b84:	41 00 f1 c1 	mulh_i s2, s1, s2
   16b88:	22 80 50 c0 	add_i s1, s2, s1
   16b8c:	41 14 00 0a 	shr s2, s1, 5
   16b90:	21 7c 00 0a 	shr s1, s1, 31
   16b94:	22 80 50 c0 	add_i s1, s2, s1
   16b98:	43 40 19 00 	or s2, s3, 1616
   16b9c:	6d 04 00 4f 	movehi s3, 45
   16ba0:	20 80 e0 c1 	sext_16 s1, s1
   16ba4:	42 00 00 a8 	load_32 s2, (s2)
   16ba8:	63 90 41 00 	or s3, s3, 4196
   16bac:	21 30 00 0b 	shl s1, s1, 12
   16bb0:	42 80 50 c0 	add_i s2, s2, s1
   16bb4:	23 80 50 c0 	add_i s1, s3, s1
   16bb8:	42 00 00 a8 	load_32 s2, (s2)
   16bbc:	21 00 00 a8 	load_32 s1, (s1)
   16bc0:	60 00 00 a8 	load_32 s3, (s0)
   16bc4:	42 50 00 07 	mull_i s2, s2, 20
   16bc8:	21 50 00 07 	mull_i s1, s1, 20
   16bcc:	02 80 5c c0 	add_i s0, s2, s25
   16bd0:	43 00 00 a8 	load_32 s2, (s3)
   16bd4:	21 00 5d c0 	add_i s1, s1, s26
   16bd8:	60 9c 00 0f 	move s3, 39
   16bdc:	bb 6f 00 f8 	call 114412 <P_SpawnMobj>
   16be0:	3a 04 00 4f 	movehi s1, 58
   16be4:	20 07 00 0f 	move s25, 1
   16be8:	21 c0 6d 00 	or s1, s1, 7024
   16bec:	21 00 00 a8 	load_32 s1, (s1)
   16bf0:	21 60 04 07 	mull_i s1, s1, 280
   16bf4:	3b 80 50 c0 	add_i s1, s27, s1
   16bf8:	21 40 00 a8 	load_32 s1, 16(s1)
   16bfc:	21 04 00 10 	cmpeq_i s1, s1, 1
   16c00:	a1 03 00 f4 	bnz s1, 116 <G_CheckSpot+0x1e4>
   16c04:	20 8c 00 0f 	move s1, 35
   16c08:	f7 d5 00 f8 	call 219100 <S_StartSound>
   16c0c:	1a 00 00 f6 	b 104 <G_CheckSpot+0x1e4>
   16c10:	20 04 00 14 	cmplt_i s1, s0, 1
   16c14:	20 07 00 0f 	move s25, 1
   16c18:	e1 02 00 f4 	bnz s1, 92 <G_CheckSpot+0x1e4>
   16c1c:	58 00 00 a6 	load_s16 s2, (s24)
   16c20:	20 00 00 0f 	move s1, 0
   16c24:	60 80 f0 c0 	move s3, s1
   16c28:	42 40 00 0b 	shl s2, s2, 16
   16c2c:	83 60 04 07 	mull_i s4, s3, 280
   16c30:	9b 00 52 c0 	add_i s4, s27, s4
   16c34:	84 00 00 a8 	load_32 s4, (s4)
   16c38:	a4 30 00 a8 	load_32 s5, 12(s4)
   16c3c:	a5 00 11 c1 	cmpne_i s5, s5, s2
   16c40:	c5 00 00 f4 	bnz s5, 24 <G_CheckSpot+0x1c8>
   16c44:	84 40 00 a8 	load_32 s4, 16(s4)
   16c48:	b8 08 00 a6 	load_s16 s5, 2(s24)
   16c4c:	a5 40 00 0b 	shl s5, s5, 16
   16c50:	84 80 02 c1 	cmpeq_i s4, s4, s5
   16c54:	e4 00 00 f4 	bnz s4, 28 <G_CheckSpot+0x1e0>
   16c58:	63 04 00 05 	add_i s3, s3, 1
   16c5c:	83 00 40 c1 	cmplt_i s4, s3, s0
   16c60:	64 fe ff f5 	bnz s4, -52 <G_CheckSpot+0x19c>
   16c64:	04 00 00 f6 	b 16 <G_CheckSpot+0x1e4>
   16c68:	20 03 00 0f 	move s25, 0
   16c6c:	02 00 00 f6 	b 8 <G_CheckSpot+0x1e4>
   16c70:	20 83 f0 c0 	move s25, s1
   16c74:	00 80 fc c0 	move s0, s25
   16c78:	fe b3 00 a8 	load_32 ra, 44(sp)
   16c7c:	7e c3 00 a8 	load_32 s27, 48(sp)
   16c80:	5e d3 00 a8 	load_32 s26, 52(sp)
   16c84:	3e e3 00 a8 	load_32 s25, 56(sp)
   16c88:	1e f3 00 a8 	load_32 s24, 60(sp)
   16c8c:	de 03 01 05 	add_i sp, sp, 64
   16c90:	1f 00 00 f0 	ret

0000000000016c94 G_DeathMatchSpawnPlayer:
   16c94:	de 03 fe 05 	add_i sp, sp, -128
   16c98:	1e f3 01 88 	store_32 s24, 124(sp)
   16c9c:	3e e3 01 88 	store_32 s25, 120(sp)
   16ca0:	5e d3 01 88 	store_32 s26, 116(sp)
   16ca4:	7e c3 01 88 	store_32 s27, 112(sp)
   16ca8:	fe b3 01 88 	store_32 ra, 108(sp)
   16cac:	3b 04 00 4f 	movehi s1, 59
   16cb0:	5b 04 00 4f 	movehi s2, 59
   16cb4:	21 a0 48 00 	or s1, s1, 4648
   16cb8:	22 b3 48 00 	or s25, s2, 4652
   16cbc:	46 cc cc 4f 	movehi s2, 419430
   16cc0:	21 00 00 a8 	load_32 s1, (s1)
   16cc4:	00 03 f0 c0 	move s24, s0
   16cc8:	42 34 33 00 	or s2, s2, 3277
   16ccc:	21 80 6c c0 	sub_i s1, s1, s25
   16cd0:	01 04 00 09 	ashr s0, s1, 1
   16cd4:	21 9c 00 12 	cmpgt_i s1, s1, 39
   16cd8:	40 03 71 c0 	mull_i s26, s0, s2
   16cdc:	c1 00 00 f4 	bnz s1, 24 <G_DeathMatchSpawnPlayer+0x60>
   16ce0:	00 00 00 4f 	movehi s0, 0
   16ce4:	5e 13 00 88 	store_32 s26, 4(sp)
   16ce8:	00 80 50 00 	or s0, s0, 5152
   16cec:	1e 00 00 88 	store_32 s0, (sp)
   16cf0:	05 dd ff f9 	call -35820 <I_Error>
   16cf4:	80 15 00 f8 	call 22016 <P_Random>
   16cf8:	5e a3 01 88 	store_32 s26, 104(sp)
   16cfc:	20 00 fd c0 	move s1, s26
   16d00:	7e f7 00 f8 	call 253432 <__modsi3>
   16d04:	40 03 f0 c0 	move s26, s0
   16d08:	1a 28 00 07 	mull_i s0, s26, 10
   16d0c:	79 03 50 c0 	add_i s27, s25, s0
   16d10:	00 00 fc c0 	move s0, s24
   16d14:	20 80 fd c0 	move s1, s27
   16d18:	5e ff ff f9 	call -648 <G_CheckSpot>
   16d1c:	20 18 00 f4 	bnz s0, 772 <G_DeathMatchSpawnPlayer+0x38c>
   16d20:	75 15 00 f8 	call 21972 <P_Random>
   16d24:	3e a0 01 a8 	load_32 s1, 104(sp)
   16d28:	74 f7 00 f8 	call 253392 <__modsi3>
   16d2c:	40 03 f0 c0 	move s26, s0
   16d30:	1a 28 00 07 	mull_i s0, s26, 10
   16d34:	79 03 50 c0 	add_i s27, s25, s0
   16d38:	00 00 fc c0 	move s0, s24
   16d3c:	20 80 fd c0 	move s1, s27
   16d40:	54 ff ff f9 	call -688 <G_CheckSpot>
   16d44:	40 00 00 f2 	bz s0, 8 <G_DeathMatchSpawnPlayer+0xb8>
   16d48:	b6 00 00 f6 	b 728 <G_DeathMatchSpawnPlayer+0x38c>
   16d4c:	6a 15 00 f8 	call 21928 <P_Random>
   16d50:	3e a0 01 a8 	load_32 s1, 104(sp)
   16d54:	69 f7 00 f8 	call 253348 <__modsi3>
   16d58:	40 03 f0 c0 	move s26, s0
   16d5c:	1a 28 00 07 	mull_i s0, s26, 10
   16d60:	79 03 50 c0 	add_i s27, s25, s0
   16d64:	00 00 fc c0 	move s0, s24
   16d68:	20 80 fd c0 	move s1, s27
   16d6c:	49 ff ff f9 	call -732 <G_CheckSpot>
   16d70:	80 15 00 f4 	bnz s0, 688 <G_DeathMatchSpawnPlayer+0x38c>
   16d74:	60 15 00 f8 	call 21888 <P_Random>
   16d78:	3e a0 01 a8 	load_32 s1, 104(sp)
   16d7c:	5f f7 00 f8 	call 253308 <__modsi3>
   16d80:	40 03 f0 c0 	move s26, s0
   16d84:	1a 28 00 07 	mull_i s0, s26, 10
   16d88:	79 03 50 c0 	add_i s27, s25, s0
   16d8c:	00 00 fc c0 	move s0, s24
   16d90:	20 80 fd c0 	move s1, s27
   16d94:	3f ff ff f9 	call -772 <G_CheckSpot>
   16d98:	40 14 00 f4 	bnz s0, 648 <G_DeathMatchSpawnPlayer+0x38c>
   16d9c:	56 15 00 f8 	call 21848 <P_Random>
   16da0:	3e a0 01 a8 	load_32 s1, 104(sp)
   16da4:	55 f7 00 f8 	call 253268 <__modsi3>
   16da8:	40 03 f0 c0 	move s26, s0
   16dac:	1a 28 00 07 	mull_i s0, s26, 10
   16db0:	79 03 50 c0 	add_i s27, s25, s0
   16db4:	00 00 fc c0 	move s0, s24
   16db8:	20 80 fd c0 	move s1, s27
   16dbc:	35 ff ff f9 	call -812 <G_CheckSpot>
   16dc0:	00 13 00 f4 	bnz s0, 608 <G_DeathMatchSpawnPlayer+0x38c>
   16dc4:	4c 15 00 f8 	call 21808 <P_Random>
   16dc8:	3e a0 01 a8 	load_32 s1, 104(sp)
   16dcc:	4b f7 00 f8 	call 253228 <__modsi3>
   16dd0:	40 03 f0 c0 	move s26, s0
   16dd4:	1a 28 00 07 	mull_i s0, s26, 10
   16dd8:	79 03 50 c0 	add_i s27, s25, s0
   16ddc:	00 00 fc c0 	move s0, s24
   16de0:	20 80 fd c0 	move s1, s27
   16de4:	2b ff ff f9 	call -852 <G_CheckSpot>
   16de8:	c0 11 00 f4 	bnz s0, 568 <G_DeathMatchSpawnPlayer+0x38c>
   16dec:	42 15 00 f8 	call 21768 <P_Random>
   16df0:	3e a0 01 a8 	load_32 s1, 104(sp)
   16df4:	41 f7 00 f8 	call 253188 <__modsi3>
   16df8:	40 03 f0 c0 	move s26, s0
   16dfc:	1a 28 00 07 	mull_i s0, s26, 10
   16e00:	79 03 50 c0 	add_i s27, s25, s0
   16e04:	00 00 fc c0 	move s0, s24
   16e08:	20 80 fd c0 	move s1, s27
   16e0c:	21 ff ff f9 	call -892 <G_CheckSpot>
   16e10:	80 10 00 f4 	bnz s0, 528 <G_DeathMatchSpawnPlayer+0x38c>
   16e14:	38 15 00 f8 	call 21728 <P_Random>
   16e18:	3e a0 01 a8 	load_32 s1, 104(sp)
   16e1c:	37 f7 00 f8 	call 253148 <__modsi3>
   16e20:	40 03 f0 c0 	move s26, s0
   16e24:	1a 28 00 07 	mull_i s0, s26, 10
   16e28:	79 03 50 c0 	add_i s27, s25, s0
   16e2c:	00 00 fc c0 	move s0, s24
   16e30:	20 80 fd c0 	move s1, s27
   16e34:	17 ff ff f9 	call -932 <G_CheckSpot>
   16e38:	40 0f 00 f4 	bnz s0, 488 <G_DeathMatchSpawnPlayer+0x38c>
   16e3c:	2e 15 00 f8 	call 21688 <P_Random>
   16e40:	3e a0 01 a8 	load_32 s1, 104(sp)
   16e44:	2d f7 00 f8 	call 253108 <__modsi3>
   16e48:	40 03 f0 c0 	move s26, s0
   16e4c:	1a 28 00 07 	mull_i s0, s26, 10
   16e50:	79 03 50 c0 	add_i s27, s25, s0
   16e54:	00 00 fc c0 	move s0, s24
   16e58:	20 80 fd c0 	move s1, s27
   16e5c:	0d ff ff f9 	call -972 <G_CheckSpot>
   16e60:	00 0e 00 f4 	bnz s0, 448 <G_DeathMatchSpawnPlayer+0x38c>
   16e64:	24 15 00 f8 	call 21648 <P_Random>
   16e68:	3e a0 01 a8 	load_32 s1, 104(sp)
   16e6c:	23 f7 00 f8 	call 253068 <__modsi3>
   16e70:	40 03 f0 c0 	move s26, s0
   16e74:	1a 28 00 07 	mull_i s0, s26, 10
   16e78:	79 03 50 c0 	add_i s27, s25, s0
   16e7c:	00 00 fc c0 	move s0, s24
   16e80:	20 80 fd c0 	move s1, s27
   16e84:	03 ff ff f9 	call -1012 <G_CheckSpot>
   16e88:	c0 0c 00 f4 	bnz s0, 408 <G_DeathMatchSpawnPlayer+0x38c>
   16e8c:	1a 15 00 f8 	call 21608 <P_Random>
   16e90:	3e a0 01 a8 	load_32 s1, 104(sp)
   16e94:	19 f7 00 f8 	call 253028 <__modsi3>
   16e98:	40 03 f0 c0 	move s26, s0
   16e9c:	1a 28 00 07 	mull_i s0, s26, 10
   16ea0:	79 03 50 c0 	add_i s27, s25, s0
   16ea4:	00 00 fc c0 	move s0, s24
   16ea8:	20 80 fd c0 	move s1, s27
   16eac:	f9 fe ff f9 	call -1052 <G_CheckSpot>
   16eb0:	80 0b 00 f4 	bnz s0, 368 <G_DeathMatchSpawnPlayer+0x38c>
   16eb4:	10 15 00 f8 	call 21568 <P_Random>
   16eb8:	3e a0 01 a8 	load_32 s1, 104(sp)
   16ebc:	0f f7 00 f8 	call 252988 <__modsi3>
   16ec0:	40 03 f0 c0 	move s26, s0
   16ec4:	1a 28 00 07 	mull_i s0, s26, 10
   16ec8:	79 03 50 c0 	add_i s27, s25, s0
   16ecc:	00 00 fc c0 	move s0, s24
   16ed0:	20 80 fd c0 	move s1, s27
   16ed4:	ef fe ff f9 	call -1092 <G_CheckSpot>
   16ed8:	40 0a 00 f4 	bnz s0, 328 <G_DeathMatchSpawnPlayer+0x38c>
   16edc:	06 15 00 f8 	call 21528 <P_Random>
   16ee0:	3e a0 01 a8 	load_32 s1, 104(sp)
   16ee4:	05 f7 00 f8 	call 252948 <__modsi3>
   16ee8:	40 03 f0 c0 	move s26, s0
   16eec:	1a 28 00 07 	mull_i s0, s26, 10
   16ef0:	79 03 50 c0 	add_i s27, s25, s0
   16ef4:	00 00 fc c0 	move s0, s24
   16ef8:	20 80 fd c0 	move s1, s27
   16efc:	e5 fe ff f9 	call -1132 <G_CheckSpot>
   16f00:	00 09 00 f4 	bnz s0, 288 <G_DeathMatchSpawnPlayer+0x38c>
   16f04:	fc 14 00 f8 	call 21488 <P_Random>
   16f08:	3e a0 01 a8 	load_32 s1, 104(sp)
   16f0c:	fb f6 00 f8 	call 252908 <__modsi3>
   16f10:	40 03 f0 c0 	move s26, s0
   16f14:	1a 28 00 07 	mull_i s0, s26, 10
   16f18:	79 03 50 c0 	add_i s27, s25, s0
   16f1c:	00 00 fc c0 	move s0, s24
   16f20:	20 80 fd c0 	move s1, s27
   16f24:	db fe ff f9 	call -1172 <G_CheckSpot>
   16f28:	c0 07 00 f4 	bnz s0, 248 <G_DeathMatchSpawnPlayer+0x38c>
   16f2c:	f2 14 00 f8 	call 21448 <P_Random>
   16f30:	3e a0 01 a8 	load_32 s1, 104(sp)
   16f34:	f1 f6 00 f8 	call 252868 <__modsi3>
   16f38:	40 03 f0 c0 	move s26, s0
   16f3c:	1a 28 00 07 	mull_i s0, s26, 10
   16f40:	79 03 50 c0 	add_i s27, s25, s0
   16f44:	00 00 fc c0 	move s0, s24
   16f48:	20 80 fd c0 	move s1, s27
   16f4c:	d1 fe ff f9 	call -1212 <G_CheckSpot>
   16f50:	80 06 00 f4 	bnz s0, 208 <G_DeathMatchSpawnPlayer+0x38c>
   16f54:	e8 14 00 f8 	call 21408 <P_Random>
   16f58:	3e a0 01 a8 	load_32 s1, 104(sp)
   16f5c:	e7 f6 00 f8 	call 252828 <__modsi3>
   16f60:	40 03 f0 c0 	move s26, s0
   16f64:	1a 28 00 07 	mull_i s0, s26, 10
   16f68:	79 03 50 c0 	add_i s27, s25, s0
   16f6c:	00 00 fc c0 	move s0, s24
   16f70:	20 80 fd c0 	move s1, s27
   16f74:	c7 fe ff f9 	call -1252 <G_CheckSpot>
   16f78:	40 05 00 f4 	bnz s0, 168 <G_DeathMatchSpawnPlayer+0x38c>
   16f7c:	de 14 00 f8 	call 21368 <P_Random>
   16f80:	3e a0 01 a8 	load_32 s1, 104(sp)
   16f84:	dd f6 00 f8 	call 252788 <__modsi3>
   16f88:	40 03 f0 c0 	move s26, s0
   16f8c:	1a 28 00 07 	mull_i s0, s26, 10
   16f90:	79 03 50 c0 	add_i s27, s25, s0
   16f94:	00 00 fc c0 	move s0, s24
   16f98:	20 80 fd c0 	move s1, s27
   16f9c:	bd fe ff f9 	call -1292 <G_CheckSpot>
   16fa0:	00 04 00 f4 	bnz s0, 128 <G_DeathMatchSpawnPlayer+0x38c>
   16fa4:	d4 14 00 f8 	call 21328 <P_Random>
   16fa8:	3e a0 01 a8 	load_32 s1, 104(sp)
   16fac:	d3 f6 00 f8 	call 252748 <__modsi3>
   16fb0:	40 03 f0 c0 	move s26, s0
   16fb4:	1a 28 00 07 	mull_i s0, s26, 10
   16fb8:	79 03 50 c0 	add_i s27, s25, s0
   16fbc:	00 00 fc c0 	move s0, s24
   16fc0:	20 80 fd c0 	move s1, s27
   16fc4:	b3 fe ff f9 	call -1332 <G_CheckSpot>
   16fc8:	c0 02 00 f4 	bnz s0, 88 <G_DeathMatchSpawnPlayer+0x38c>
   16fcc:	ca 14 00 f8 	call 21288 <P_Random>
   16fd0:	3e a0 01 a8 	load_32 s1, 104(sp)
   16fd4:	c9 f6 00 f8 	call 252708 <__modsi3>
   16fd8:	40 03 f0 c0 	move s26, s0
   16fdc:	1a 28 00 07 	mull_i s0, s26, 10
   16fe0:	79 03 50 c0 	add_i s27, s25, s0
   16fe4:	00 00 fc c0 	move s0, s24
   16fe8:	20 80 fd c0 	move s1, s27
   16fec:	a9 fe ff f9 	call -1372 <G_CheckSpot>
   16ff0:	80 01 00 f4 	bnz s0, 48 <G_DeathMatchSpawnPlayer+0x38c>
   16ff4:	c0 14 00 f8 	call 21248 <P_Random>
   16ff8:	3e a0 01 a8 	load_32 s1, 104(sp)
   16ffc:	bf f6 00 f8 	call 252668 <__modsi3>
   17000:	40 03 f0 c0 	move s26, s0
   17004:	1a 28 00 07 	mull_i s0, s26, 10
   17008:	79 03 50 c0 	add_i s27, s25, s0
   1700c:	00 00 fc c0 	move s0, s24
   17010:	20 80 fd c0 	move s1, s27
   17014:	9f fe ff f9 	call -1412 <G_CheckSpot>
   17018:	40 00 00 f4 	bnz s0, 8 <G_DeathMatchSpawnPlayer+0x38c>
   1701c:	0e 00 00 f6 	b 56 <G_DeathMatchSpawnPlayer+0x3c0>
   17020:	1a 28 00 07 	mull_i s0, s26, 10
   17024:	19 00 50 c0 	add_i s0, s25, s0
   17028:	38 04 00 05 	add_i s1, s24, 1
   1702c:	20 18 00 86 	store_16 s1, 6(s0)
   17030:	00 80 fd c0 	move s0, s27
   17034:	b4 6f 00 f8 	call 114384 <P_SpawnPlayer>
   17038:	fe b3 01 a8 	load_32 ra, 108(sp)
   1703c:	7e c3 01 a8 	load_32 s27, 112(sp)
   17040:	5e d3 01 a8 	load_32 s26, 116(sp)
   17044:	3e e3 01 a8 	load_32 s25, 120(sp)
   17048:	1e f3 01 a8 	load_32 s24, 124(sp)
   1704c:	de 03 02 05 	add_i sp, sp, 128
   17050:	1f 00 00 f0 	ret
   17054:	1b 04 00 4f 	movehi s0, 59
   17058:	38 28 00 07 	mull_i s1, s24, 10
   1705c:	00 d0 4a 00 	or s0, s0, 4788
   17060:	00 80 50 c0 	add_i s0, s0, s1
   17064:	f4 ff ff f7 	b -48 <G_DeathMatchSpawnPlayer+0x3a0>

0000000000017068 G_ScreenShot:
   17068:	1a 04 00 4f 	movehi s0, 58
   1706c:	20 24 00 0f 	move s1, 9
   17070:	00 60 6f 00 	or s0, s0, 7128
   17074:	20 00 00 88 	store_32 s1, (s0)
   17078:	1f 00 00 f0 	ret

000000000001707c G_ExitLevel:
   1707c:	1b 04 00 4f 	movehi s0, 59
   17080:	3a 04 00 4f 	movehi s1, 58
   17084:	40 00 00 0f 	move s2, 0
   17088:	00 70 18 00 	or s0, s0, 1564
   1708c:	21 60 6f 00 	or s1, s1, 7128
   17090:	40 00 00 88 	store_32 s2, (s0)
   17094:	00 18 00 0f 	move s0, 6
   17098:	01 00 00 88 	store_32 s0, (s1)
   1709c:	1f 00 00 f0 	ret

00000000000170a0 G_SecretExitLevel:
   170a0:	de 03 ff 05 	add_i sp, sp, -64
   170a4:	fe f3 00 88 	store_32 ra, 60(sp)
   170a8:	0b 04 00 4f 	movehi s0, 43
   170ac:	00 00 40 00 	or s0, s0, 4096
   170b0:	00 00 00 a8 	load_32 s0, (s0)
   170b4:	00 08 00 11 	cmpne_i s0, s0, 2
   170b8:	c0 00 00 f4 	bnz s0, 24 <G_SecretExitLevel+0x30>
   170bc:	00 00 00 4f 	movehi s0, 0
   170c0:	00 14 51 00 	or s0, s0, 5189
   170c4:	a7 9e 00 f8 	call 162460 <W_CheckNumForName>
   170c8:	00 00 00 14 	cmplt_i s0, s0, 0
   170cc:	60 00 00 f4 	bnz s0, 12 <G_SecretExitLevel+0x38>
   170d0:	00 04 00 0f 	move s0, 1
   170d4:	02 00 00 f6 	b 8 <G_SecretExitLevel+0x3c>
   170d8:	00 00 00 0f 	move s0, 0
   170dc:	3b 04 00 4f 	movehi s1, 59
   170e0:	5a 04 00 4f 	movehi s2, 58
   170e4:	21 70 18 00 	or s1, s1, 1564
   170e8:	42 60 6f 00 	or s2, s2, 7128
   170ec:	01 00 00 88 	store_32 s0, (s1)
   170f0:	00 18 00 0f 	move s0, 6
   170f4:	02 00 00 88 	store_32 s0, (s2)
   170f8:	fe f3 00 a8 	load_32 ra, 60(sp)
   170fc:	de 03 01 05 	add_i sp, sp, 64
   17100:	1f 00 00 f0 	ret

0000000000017104 G_WorldDone:
   17104:	de 03 ff 05 	add_i sp, sp, -64
   17108:	fe f3 00 88 	store_32 ra, 60(sp)
   1710c:	1a 04 00 4f 	movehi s0, 58
   17110:	3b 04 00 4f 	movehi s1, 59
   17114:	40 20 00 0f 	move s2, 8
   17118:	00 60 6f 00 	or s0, s0, 7128
   1711c:	21 70 18 00 	or s1, s1, 1564
   17120:	40 00 00 88 	store_32 s2, (s0)
   17124:	01 00 00 a8 	load_32 s0, (s1)
   17128:	40 01 00 f2 	bz s0, 40 <G_WorldDone+0x4c>
   1712c:	3a 04 00 4f 	movehi s1, 58
   17130:	5b 04 00 4f 	movehi s2, 59
   17134:	21 c0 6d 00 	or s1, s1, 7024
   17138:	42 40 02 00 	or s2, s2, 144
   1713c:	21 00 00 a8 	load_32 s1, (s1)
   17140:	21 60 04 07 	mull_i s1, s1, 280
   17144:	22 80 50 c0 	add_i s1, s2, s1
   17148:	40 04 00 0f 	move s2, 1
   1714c:	41 50 04 88 	store_32 s2, 276(s1)
   17150:	2b 04 00 4f 	movehi s1, 43
   17154:	21 00 40 00 	or s1, s1, 4096
   17158:	21 00 00 a8 	load_32 s1, (s1)
   1715c:	21 08 00 11 	cmpne_i s1, s1, 2
   17160:	41 02 00 f4 	bnz s1, 72 <G_WorldDone+0xa4>
   17164:	3a 04 00 4f 	movehi s1, 58
   17168:	21 80 7f 00 	or s1, s1, 8160
   1716c:	21 00 00 a8 	load_32 s1, (s1)
   17170:	41 7c 00 16 	cmpgt_u s2, s1, 31
   17174:	a2 01 00 f4 	bnz s2, 52 <G_WorldDone+0xa4>
   17178:	40 04 00 0f 	move s2, 1
   1717c:	60 10 40 4f 	movehi s3, 131200
   17180:	22 80 b0 c0 	shl s1, s2, s1
   17184:	43 00 21 00 	or s2, s3, 2112
   17188:	41 00 11 c0 	and s2, s1, s2
   1718c:	c2 00 00 f4 	bnz s2, 24 <G_WorldDone+0xa0>
   17190:	44 00 80 4f 	movehi s2, 262148
   17194:	21 00 11 c0 	and s1, s1, s2
   17198:	41 00 00 f4 	bnz s1, 8 <G_WorldDone+0x9c>
   1719c:	03 00 00 f6 	b 12 <G_WorldDone+0xa4>
   171a0:	40 00 00 f2 	bz s0, 8 <G_WorldDone+0xa4>
   171a4:	6d dd ff f9 	call -35404 <F_StartFinale>
   171a8:	fe f3 00 a8 	load_32 ra, 60(sp)
   171ac:	de 03 01 05 	add_i sp, sp, 64
   171b0:	1f 00 00 f0 	ret

00000000000171b4 G_LoadGame:
   171b4:	de 03 ff 05 	add_i sp, sp, -64
   171b8:	fe f3 00 88 	store_32 ra, 60(sp)
   171bc:	20 00 f0 c0 	move s1, s0
   171c0:	1b 04 00 4f 	movehi s0, 59
   171c4:	00 70 14 00 	or s0, s0, 1308
   171c8:	81 ed 00 f8 	call 243204 <strcpy>
   171cc:	1a 04 00 4f 	movehi s0, 58
   171d0:	20 0c 00 0f 	move s1, 3
   171d4:	00 60 6f 00 	or s0, s0, 7128
   171d8:	20 00 00 88 	store_32 s1, (s0)
   171dc:	fe f3 00 a8 	load_32 ra, 60(sp)
   171e0:	de 03 01 05 	add_i sp, sp, 64
   171e4:	1f 00 00 f0 	ret

00000000000171e8 G_InitNew:
   171e8:	de 03 ff 05 	add_i sp, sp, -64
   171ec:	1e f3 00 88 	store_32 s24, 60(sp)
   171f0:	3e e3 00 88 	store_32 s25, 56(sp)
   171f4:	5e d3 00 88 	store_32 s26, 52(sp)
   171f8:	7e c3 00 88 	store_32 s27, 48(sp)
   171fc:	fe b3 00 88 	store_32 ra, 44(sp)
   17200:	7b 04 00 4f 	movehi s3, 59
   17204:	63 f3 01 00 	or s27, s3, 124
   17208:	7b 00 00 a8 	load_32 s3, (s27)
   1720c:	20 03 f1 c0 	move s25, s2
   17210:	40 83 f0 c0 	move s26, s1
   17214:	00 03 f0 c0 	move s24, s0
   17218:	83 00 00 f2 	bz s3, 16 <G_InitNew+0x40>
   1721c:	00 00 00 0f 	move s0, 0
   17220:	1b 00 00 88 	store_32 s0, (s27)
   17224:	8c d4 00 f8 	call 217648 <S_ResumeSound>
   17228:	7e 93 00 88 	store_32 s27, 36(sp)
   1722c:	78 13 00 18 	cmplt_u s27, s24, 4
   17230:	00 00 fc c0 	move s0, s24
   17234:	5b 00 00 f4 	bnz s27, 8 <G_InitNew+0x54>
   17238:	00 10 00 0f 	move s0, 4
   1723c:	1e a0 00 88 	store_32 s0, 40(sp)
   17240:	3a 04 00 12 	cmpgt_i s1, s26, 1
   17244:	00 04 00 0f 	move s0, 1
   17248:	41 00 00 f4 	bnz s1, 8 <G_InitNew+0x68>
   1724c:	40 03 f0 c0 	move s26, s0
   17250:	2b 04 00 4f 	movehi s1, 43
   17254:	21 00 40 00 	or s1, s1, 4096
   17258:	3e 80 00 88 	store_32 s1, 32(sp)
   1725c:	21 00 00 a8 	load_32 s1, (s1)
   17260:	60 00 f0 c0 	move s3, s0
   17264:	61 01 00 f2 	bz s1, 44 <G_InitNew+0xa8>
   17268:	41 0c 00 11 	cmpne_i s2, s1, 3
   1726c:	a2 00 00 f4 	bnz s2, 20 <G_InitNew+0x98>
   17270:	5a 10 00 14 	cmplt_i s2, s26, 4
   17274:	c2 00 00 f4 	bnz s2, 24 <G_InitNew+0xa4>
   17278:	40 13 00 0f 	move s26, 4
   1727c:	04 00 00 f6 	b 16 <G_InitNew+0xa4>
   17280:	5a 0c 00 14 	cmplt_i s2, s26, 3
   17284:	42 00 00 f4 	bnz s2, 8 <G_InitNew+0xa4>
   17288:	40 0f 00 0f 	move s26, 3
   1728c:	60 00 fd c0 	move s3, s26
   17290:	59 04 00 12 	cmpgt_i s2, s25, 1
   17294:	42 00 00 f4 	bnz s2, 8 <G_InitNew+0xb4>
   17298:	20 03 f0 c0 	move s25, s0
   1729c:	01 08 00 11 	cmpne_i s0, s1, 2
   172a0:	c0 00 00 f4 	bnz s0, 24 <G_InitNew+0xd0>
   172a4:	40 83 fc c0 	move s26, s25
   172a8:	19 24 00 12 	cmpgt_i s0, s25, 9
   172ac:	7e 70 00 88 	store_32 s3, 28(sp)
   172b0:	e0 00 00 f4 	bnz s0, 28 <G_InitNew+0xe4>
   172b4:	05 00 00 f6 	b 20 <G_InitNew+0xe0>
   172b8:	40 27 00 0f 	move s26, 9
   172bc:	19 24 00 12 	cmpgt_i s0, s25, 9
   172c0:	7e 70 00 88 	store_32 s3, 28(sp)
   172c4:	40 00 00 f4 	bnz s0, 8 <G_InitNew+0xe4>
   172c8:	40 83 fc c0 	move s26, s25
   172cc:	20 14 00 f8 	call 20608 <M_ClearRandom>
   172d0:	1a 04 00 4f 	movehi s0, 58
   172d4:	5b 04 00 4f 	movehi s2, 59
   172d8:	7a 04 00 4f 	movehi s3, 58
   172dc:	00 60 48 00 	or s0, s0, 4632
   172e0:	42 c0 13 00 	or s2, s2, 1264
   172e4:	63 20 38 00 	or s3, s3, 3592
   172e8:	20 00 00 a8 	load_32 s1, (s0)
   172ec:	18 0c 00 16 	cmpgt_u s0, s24, 3
   172f0:	21 00 00 11 	cmpne_i s1, s1, 0
   172f4:	20 80 00 c0 	or s1, s0, s1
   172f8:	21 04 00 01 	and s1, s1, 1
   172fc:	22 00 00 88 	store_32 s1, (s2)
   17300:	23 00 00 a8 	load_32 s1, (s3)
   17304:	e1 00 00 f4 	bnz s1, 28 <G_InitNew+0x138>
   17308:	3a 04 00 4f 	movehi s1, 58
   1730c:	21 90 7f 00 	or s1, s1, 8164
   17310:	21 00 00 a8 	load_32 s1, (s1)
   17314:	3b 13 00 f4 	bnz s27, 612 <G_InitNew+0x390>
   17318:	41 10 00 10 	cmpeq_i s2, s1, 4
   1731c:	e2 12 00 f4 	bnz s2, 604 <G_InitNew+0x390>
   17320:	14 04 00 4f 	movehi s0, 52
   17324:	21 00 00 4f 	movehi s1, 1
   17328:	00 20 5c 00 	or s0, s0, 5896
   1732c:	41 d0 50 00 	or s2, s1, 5172
   17330:	81 40 51 00 	or s4, s1, 5200
   17334:	40 00 51 c0 	add_i s2, s0, s2
   17338:	80 00 52 c0 	add_i s4, s0, s4
   1733c:	62 00 00 a8 	load_32 s3, (s2)
   17340:	63 04 00 09 	ashr s3, s3, 1
   17344:	62 00 00 88 	store_32 s3, (s2)
   17348:	44 00 00 a8 	load_32 s2, (s4)
   1734c:	61 b0 51 00 	or s3, s1, 5228
   17350:	60 80 51 c0 	add_i s3, s0, s3
   17354:	42 04 00 09 	ashr s2, s2, 1
   17358:	44 00 00 88 	store_32 s2, (s4)
   1735c:	43 00 00 a8 	load_32 s2, (s3)
   17360:	81 20 52 00 	or s4, s1, 5256
   17364:	80 00 52 c0 	add_i s4, s0, s4
   17368:	42 04 00 09 	ashr s2, s2, 1
   1736c:	43 00 00 88 	store_32 s2, (s3)
   17370:	44 00 00 a8 	load_32 s2, (s4)
   17374:	61 90 52 00 	or s3, s1, 5284
   17378:	60 80 51 c0 	add_i s3, s0, s3
   1737c:	42 04 00 09 	ashr s2, s2, 1
   17380:	44 00 00 88 	store_32 s2, (s4)
   17384:	43 00 00 a8 	load_32 s2, (s3)
   17388:	81 00 53 00 	or s4, s1, 5312
   1738c:	80 00 52 c0 	add_i s4, s0, s4
   17390:	42 04 00 09 	ashr s2, s2, 1
   17394:	43 00 00 88 	store_32 s2, (s3)
   17398:	44 00 00 a8 	load_32 s2, (s4)
   1739c:	61 70 53 00 	or s3, s1, 5340
   173a0:	60 80 51 c0 	add_i s3, s0, s3
   173a4:	42 04 00 09 	ashr s2, s2, 1
   173a8:	44 00 00 88 	store_32 s2, (s4)
   173ac:	43 00 00 a8 	load_32 s2, (s3)
   173b0:	81 e0 53 00 	or s4, s1, 5368
   173b4:	80 00 52 c0 	add_i s4, s0, s4
   173b8:	42 04 00 09 	ashr s2, s2, 1
   173bc:	43 00 00 88 	store_32 s2, (s3)
   173c0:	44 00 00 a8 	load_32 s2, (s4)
   173c4:	61 50 54 00 	or s3, s1, 5396
   173c8:	60 80 51 c0 	add_i s3, s0, s3
   173cc:	42 04 00 09 	ashr s2, s2, 1
   173d0:	44 00 00 88 	store_32 s2, (s4)
   173d4:	43 00 00 a8 	load_32 s2, (s3)
   173d8:	81 c0 54 00 	or s4, s1, 5424
   173dc:	80 00 52 c0 	add_i s4, s0, s4
   173e0:	42 04 00 09 	ashr s2, s2, 1
   173e4:	43 00 00 88 	store_32 s2, (s3)
   173e8:	44 00 00 a8 	load_32 s2, (s4)
   173ec:	61 30 55 00 	or s3, s1, 5452
   173f0:	60 80 51 c0 	add_i s3, s0, s3
   173f4:	42 04 00 09 	ashr s2, s2, 1
   173f8:	44 00 00 88 	store_32 s2, (s4)
   173fc:	43 00 00 a8 	load_32 s2, (s3)
   17400:	81 a0 55 00 	or s4, s1, 5480
   17404:	80 00 52 c0 	add_i s4, s0, s4
   17408:	21 10 56 00 	or s1, s1, 5508
   1740c:	00 80 50 c0 	add_i s0, s0, s1
   17410:	42 04 00 09 	ashr s2, s2, 1
   17414:	43 00 00 88 	store_32 s2, (s3)
   17418:	44 00 00 a8 	load_32 s2, (s4)
   1741c:	22 04 00 09 	ashr s1, s2, 1
   17420:	24 00 00 88 	store_32 s1, (s4)
   17424:	00 00 00 a8 	load_32 s0, (s0)
   17428:	20 14 00 4f 	movehi s1, 160
   1742c:	40 80 f0 c0 	move s2, s1
   17430:	de 90 00 a8 	load_32 s6, 36(sp)
   17434:	00 04 00 09 	ashr s0, s0, 1
   17438:	74 04 00 4f 	movehi s3, 52
   1743c:	81 00 00 4f 	movehi s4, 1
   17440:	b8 04 00 4f 	movehi s5, 56
   17444:	63 20 5c 00 	or s3, s3, 5896
   17448:	84 10 56 00 	or s4, s4, 5508
   1744c:	63 00 52 c0 	add_i s3, s3, s4
   17450:	85 30 03 00 	or s4, s5, 204
   17454:	03 00 00 88 	store_32 s0, (s3)
   17458:	24 f0 17 88 	store_32 s1, 1532(s4)
   1745c:	44 f0 2e 88 	store_32 s2, 3004(s4)
   17460:	44 80 2d 88 	store_32 s2, 2912(s4)
   17464:	1b 04 00 4f 	movehi s0, 59
   17468:	5b 04 00 4f 	movehi s2, 59
   1746c:	60 0c 00 4f 	movehi s3, 96
   17470:	00 40 02 00 	or s0, s0, 144
   17474:	42 20 19 00 	or s2, s2, 1608
   17478:	20 08 00 0f 	move s1, 2
   1747c:	20 10 00 88 	store_32 s1, 4(s0)
   17480:	63 d0 21 00 	or s3, s3, 2164
   17484:	20 70 04 88 	store_32 s1, 284(s0)
   17488:	9a 04 00 4f 	movehi s4, 58
   1748c:	20 d0 08 88 	store_32 s1, 564(s0)
   17490:	20 30 0d 88 	store_32 s1, 844(s0)
   17494:	00 04 00 0f 	move s0, 1
   17498:	02 00 00 88 	store_32 s0, (s2)
   1749c:	5a 04 00 4f 	movehi s2, 58
   174a0:	20 00 00 0f 	move s1, 0
   174a4:	26 00 00 88 	store_32 s1, (s6)
   174a8:	84 70 6f 00 	or s4, s4, 7132
   174ac:	42 30 6f 00 	or s2, s2, 7116
   174b0:	22 00 00 88 	store_32 s1, (s2)
   174b4:	5a 04 00 4f 	movehi s2, 58
   174b8:	23 00 00 88 	store_32 s1, (s3)
   174bc:	7b 04 00 4f 	movehi s3, 59
   174c0:	3e 70 00 a8 	load_32 s1, 28(sp)
   174c4:	24 00 00 88 	store_32 s1, (s4)
   174c8:	80 80 f0 c0 	move s4, s1
   174cc:	3a 04 00 4f 	movehi s1, 58
   174d0:	21 83 7f 00 	or s25, s1, 8160
   174d4:	22 90 7f 00 	or s1, s2, 8164
   174d8:	43 30 19 00 	or s2, s3, 1612
   174dc:	59 03 00 88 	store_32 s26, (s25)
   174e0:	7e a0 00 a8 	load_32 s3, 40(sp)
   174e4:	61 00 00 88 	store_32 s3, (s1)
   174e8:	02 00 00 88 	store_32 s0, (s2)
   174ec:	1e 80 00 a8 	load_32 s0, 32(sp)
   174f0:	00 00 00 a8 	load_32 s0, (s0)
   174f4:	00 08 00 11 	cmpne_i s0, s0, 2
   174f8:	a0 01 00 f4 	bnz s0, 52 <G_InitNew+0x344>
   174fc:	00 00 00 4f 	movehi s0, 0
   17500:	00 f8 1e 00 	or s0, s0, 1982
   17504:	e5 80 00 f8 	call 131988 <R_TextureNumForName>
   17508:	32 08 00 4f 	movehi s1, 82
   1750c:	01 83 4b 00 	or s24, s1, 4832
   17510:	18 00 00 88 	store_32 s0, (s24)
   17514:	19 00 00 a8 	load_32 s0, (s25)
   17518:	20 2c 00 12 	cmpgt_i s1, s0, 11
   1751c:	01 02 00 f4 	bnz s1, 64 <G_InitNew+0x374>
   17520:	02 00 00 4f 	movehi s0, 2
   17524:	00 6c 41 00 	or s0, s0, 4187
   17528:	11 00 00 f6 	b 68 <G_InitNew+0x384>
   1752c:	04 fc ff 05 	add_i s0, s4, -1
   17530:	20 0c 00 16 	cmpgt_u s1, s0, 3
   17534:	e1 0c 00 f4 	bnz s1, 412 <G_InitNew+0x4e8>
   17538:	23 00 00 4f 	movehi s1, 3
   1753c:	00 08 00 0b 	shl s0, s0, 2
   17540:	21 20 30 00 	or s1, s1, 3080
   17544:	00 80 50 c0 	add_i s0, s0, s1
   17548:	00 00 00 a8 	load_32 s0, (s0)
   1754c:	00 00 00 f0 	b s0
   17550:	02 00 00 4f 	movehi s0, 2
   17554:	00 6c 41 00 	or s0, s0, 4187
   17558:	5a 00 00 f6 	b 360 <G_InitNew+0x4d8>
   1755c:	00 50 00 12 	cmpgt_i s0, s0, 20
   17560:	80 0b 00 f4 	bnz s0, 368 <G_InitNew+0x4e8>
   17564:	02 00 00 4f 	movehi s0, 2
   17568:	00 78 7c 00 	or s0, s0, 7966
   1756c:	cb 80 00 f8 	call 131884 <R_TextureNumForName>
   17570:	18 00 00 88 	store_32 s0, (s24)
   17574:	57 00 00 f6 	b 348 <G_InitNew+0x4e8>
   17578:	de 90 00 a8 	load_32 s6, 36(sp)
   1757c:	40 f7 ff f5 	bnz s0, -280 <G_InitNew+0x27c>
   17580:	01 10 00 11 	cmpne_i s0, s1, 4
   17584:	00 f7 ff f5 	bnz s0, -288 <G_InitNew+0x27c>
   17588:	14 04 00 4f 	movehi s0, 52
   1758c:	21 00 00 4f 	movehi s1, 1
   17590:	00 20 5c 00 	or s0, s0, 5896
   17594:	41 d0 50 00 	or s2, s1, 5172
   17598:	81 40 51 00 	or s4, s1, 5200
   1759c:	40 00 51 c0 	add_i s2, s0, s2
   175a0:	80 00 52 c0 	add_i s4, s0, s4
   175a4:	62 00 00 a8 	load_32 s3, (s2)
   175a8:	63 04 00 0b 	shl s3, s3, 1
   175ac:	62 00 00 88 	store_32 s3, (s2)
   175b0:	44 00 00 a8 	load_32 s2, (s4)
   175b4:	61 b0 51 00 	or s3, s1, 5228
   175b8:	60 80 51 c0 	add_i s3, s0, s3
   175bc:	42 04 00 0b 	shl s2, s2, 1
   175c0:	44 00 00 88 	store_32 s2, (s4)
   175c4:	43 00 00 a8 	load_32 s2, (s3)
   175c8:	81 20 52 00 	or s4, s1, 5256
   175cc:	80 00 52 c0 	add_i s4, s0, s4
   175d0:	42 04 00 0b 	shl s2, s2, 1
   175d4:	43 00 00 88 	store_32 s2, (s3)
   175d8:	44 00 00 a8 	load_32 s2, (s4)
   175dc:	61 90 52 00 	or s3, s1, 5284
   175e0:	60 80 51 c0 	add_i s3, s0, s3
   175e4:	42 04 00 0b 	shl s2, s2, 1
   175e8:	44 00 00 88 	store_32 s2, (s4)
   175ec:	43 00 00 a8 	load_32 s2, (s3)
   175f0:	81 00 53 00 	or s4, s1, 5312
   175f4:	80 00 52 c0 	add_i s4, s0, s4
   175f8:	42 04 00 0b 	shl s2, s2, 1
   175fc:	43 00 00 88 	store_32 s2, (s3)
   17600:	44 00 00 a8 	load_32 s2, (s4)
   17604:	61 70 53 00 	or s3, s1, 5340
   17608:	60 80 51 c0 	add_i s3, s0, s3
   1760c:	42 04 00 0b 	shl s2, s2, 1
   17610:	44 00 00 88 	store_32 s2, (s4)
   17614:	43 00 00 a8 	load_32 s2, (s3)
   17618:	81 e0 53 00 	or s4, s1, 5368
   1761c:	80 00 52 c0 	add_i s4, s0, s4
   17620:	42 04 00 0b 	shl s2, s2, 1
   17624:	43 00 00 88 	store_32 s2, (s3)
   17628:	44 00 00 a8 	load_32 s2, (s4)
   1762c:	61 50 54 00 	or s3, s1, 5396
   17630:	60 80 51 c0 	add_i s3, s0, s3
   17634:	42 04 00 0b 	shl s2, s2, 1
   17638:	44 00 00 88 	store_32 s2, (s4)
   1763c:	43 00 00 a8 	load_32 s2, (s3)
   17640:	81 c0 54 00 	or s4, s1, 5424
   17644:	80 00 52 c0 	add_i s4, s0, s4
   17648:	42 04 00 0b 	shl s2, s2, 1
   1764c:	43 00 00 88 	store_32 s2, (s3)
   17650:	44 00 00 a8 	load_32 s2, (s4)
   17654:	61 30 55 00 	or s3, s1, 5452
   17658:	60 80 51 c0 	add_i s3, s0, s3
   1765c:	42 04 00 0b 	shl s2, s2, 1
   17660:	44 00 00 88 	store_32 s2, (s4)
   17664:	43 00 00 a8 	load_32 s2, (s3)
   17668:	81 a0 55 00 	or s4, s1, 5480
   1766c:	80 00 52 c0 	add_i s4, s0, s4
   17670:	21 10 56 00 	or s1, s1, 5508
   17674:	00 80 50 c0 	add_i s0, s0, s1
   17678:	42 04 00 0b 	shl s2, s2, 1
   1767c:	43 00 00 88 	store_32 s2, (s3)
   17680:	44 00 00 a8 	load_32 s2, (s4)
   17684:	22 04 00 0b 	shl s1, s2, 1
   17688:	24 00 00 88 	store_32 s1, (s4)
   1768c:	00 00 00 a8 	load_32 s0, (s0)
   17690:	50 08 00 4f 	movehi s2, 80
   17694:	38 0c 00 4f 	movehi s1, 120
   17698:	00 04 00 0b 	shl s0, s0, 1
   1769c:	67 ff ff f7 	b -612 <G_InitNew+0x250>
   176a0:	02 00 00 4f 	movehi s0, 2
   176a4:	00 78 7c 00 	or s0, s0, 7966
   176a8:	06 00 00 f6 	b 24 <G_InitNew+0x4d8>
   176ac:	00 00 00 4f 	movehi s0, 0
   176b0:	00 f8 1e 00 	or s0, s0, 1982
   176b4:	03 00 00 f6 	b 12 <G_InitNew+0x4d8>
   176b8:	00 00 00 4f 	movehi s0, 0
   176bc:	00 00 15 00 	or s0, s0, 1344
   176c0:	76 80 00 f8 	call 131544 <R_TextureNumForName>
   176c4:	32 08 00 4f 	movehi s1, 82
   176c8:	21 80 4b 00 	or s1, s1, 4832
   176cc:	01 00 00 88 	store_32 s0, (s1)
   176d0:	0d f5 ff f9 	call -11212 <G_DoLoadLevel>
   176d4:	fe b3 00 a8 	load_32 ra, 44(sp)
   176d8:	7e c3 00 a8 	load_32 s27, 48(sp)
   176dc:	5e d3 00 a8 	load_32 s26, 52(sp)
   176e0:	3e e3 00 a8 	load_32 s25, 56(sp)
   176e4:	1e f3 00 a8 	load_32 s24, 60(sp)
   176e8:	de 03 01 05 	add_i sp, sp, 64
   176ec:	1f 00 00 f0 	ret

00000000000176f0 G_SaveGame:
   176f0:	de 03 ff 05 	add_i sp, sp, -64
   176f4:	fe f3 00 88 	store_32 ra, 60(sp)
   176f8:	5b 04 00 4f 	movehi s2, 59
   176fc:	42 60 14 00 	or s2, s2, 1304
   17700:	02 00 00 88 	store_32 s0, (s2)
   17704:	1b 04 00 4f 	movehi s0, 59
   17708:	00 e0 13 00 	or s0, s0, 1272
   1770c:	30 ec 00 f8 	call 241856 <strcpy>
   17710:	1b 04 00 4f 	movehi s0, 59
   17714:	20 04 00 0f 	move s1, 1
   17718:	00 90 18 00 	or s0, s0, 1572
   1771c:	20 00 00 88 	store_32 s1, (s0)
   17720:	fe f3 00 a8 	load_32 ra, 60(sp)
   17724:	de 03 01 05 	add_i sp, sp, 64
   17728:	1f 00 00 f0 	ret

000000000001772c G_DeferedInitNew:
   1772c:	7a 04 00 4f 	movehi s3, 58
   17730:	9a 04 00 4f 	movehi s4, 58
   17734:	63 f0 6d 00 	or s3, s3, 7036
   17738:	03 00 00 88 	store_32 s0, (s3)
   1773c:	1a 04 00 4f 	movehi s0, 58
   17740:	64 d0 6d 00 	or s3, s4, 7028
   17744:	9a 04 00 4f 	movehi s4, 58
   17748:	00 e0 6d 00 	or s0, s0, 7032
   1774c:	23 00 00 88 	store_32 s1, (s3)
   17750:	24 60 6f 00 	or s1, s4, 7128
   17754:	40 00 00 88 	store_32 s2, (s0)
   17758:	00 08 00 0f 	move s0, 2
   1775c:	01 00 00 88 	store_32 s0, (s1)
   17760:	1f 00 00 f0 	ret

0000000000017764 G_CheckDemoStatus:
   17764:	de 03 fe 05 	add_i sp, sp, -128
   17768:	1e f3 01 88 	store_32 s24, 124(sp)
   1776c:	3e e3 01 88 	store_32 s25, 120(sp)
   17770:	5e d3 01 88 	store_32 s26, 116(sp)
   17774:	fe c3 01 88 	store_32 ra, 112(sp)
   17778:	1b 04 00 4f 	movehi s0, 59
   1777c:	00 d0 18 00 	or s0, s0, 1588
   17780:	00 00 00 a8 	load_32 s0, (s0)
   17784:	e0 01 00 f2 	bz s0, 60 <G_CheckDemoStatus+0x5c>
   17788:	33 da ff f9 	call -38708 <I_GetTime>
   1778c:	3a 04 00 4f 	movehi s1, 58
   17790:	5b 04 00 4f 	movehi s2, 59
   17794:	21 b0 7f 00 	or s1, s1, 8172
   17798:	42 b0 18 00 	or s2, s2, 1580
   1779c:	21 00 00 a8 	load_32 s1, (s1)
   177a0:	42 00 00 a8 	load_32 s2, (s2)
   177a4:	00 00 61 c0 	sub_i s0, s0, s2
   177a8:	1e 20 00 88 	store_32 s0, 8(sp)
   177ac:	41 00 00 4f 	movehi s2, 1
   177b0:	3e 10 00 88 	store_32 s1, 4(sp)
   177b4:	02 90 0d 00 	or s0, s2, 868
   177b8:	1e 00 00 88 	store_32 s0, (sp)
   177bc:	52 da ff f9 	call -38584 <I_Error>
   177c0:	1a 04 00 4f 	movehi s0, 58
   177c4:	00 33 6f 00 	or s24, s0, 7116
   177c8:	18 00 00 a8 	load_32 s0, (s24)
   177cc:	c0 06 00 f2 	bz s0, 216 <G_CheckDemoStatus+0x140>
   177d0:	1b 04 00 4f 	movehi s0, 59
   177d4:	00 a0 18 00 	or s0, s0, 1576
   177d8:	00 00 00 a8 	load_32 s0, (s0)
   177dc:	40 00 00 f2 	bz s0, 8 <G_CheckDemoStatus+0x80>
   177e0:	2d da ff f9 	call -38732 <I_Quit>
   177e4:	1a 04 00 4f 	movehi s0, 58
   177e8:	4a 1c 00 4f 	movehi s2, 234
   177ec:	20 93 6e 00 	or s25, s0, 7076
   177f0:	42 44 28 00 	or s2, s2, 2577
   177f4:	19 00 00 a8 	load_32 s0, (s25)
   177f8:	20 d0 ff a9 	load_32 s1, -12(s0)
   177fc:	21 00 01 c1 	cmpeq_i s1, s1, s2
   17800:	01 01 00 f4 	bnz s1, 32 <G_CheckDemoStatus+0xbc>
   17804:	00 00 00 4f 	movehi s0, 0
   17808:	20 08 1a 0f 	move s1, 1666
   1780c:	3e 10 00 88 	store_32 s1, 4(sp)
   17810:	00 20 2c 00 	or s0, s0, 2824
   17814:	1e 00 00 88 	store_32 s0, (sp)
   17818:	3b da ff f9 	call -38676 <I_Error>
   1781c:	19 00 00 a8 	load_32 s0, (s25)
   17820:	20 94 01 0f 	move s1, 101
   17824:	47 d6 00 f8 	call 219420 <Z_ChangeTag2>
   17828:	1b 04 00 4f 	movehi s0, 59
   1782c:	5b 04 00 4f 	movehi s2, 59
   17830:	20 00 00 0f 	move s1, 0
   17834:	38 00 00 88 	store_32 s1, (s24)
   17838:	00 b0 01 00 	or s0, s0, 108
   1783c:	7b 04 00 4f 	movehi s3, 59
   17840:	20 00 00 88 	store_32 s1, (s0)
   17844:	02 c0 01 00 	or s0, s2, 112
   17848:	5a 04 00 4f 	movehi s2, 58
   1784c:	20 00 00 88 	store_32 s1, (s0)
   17850:	02 60 6e 00 	or s0, s2, 7064
   17854:	43 00 02 00 	or s2, s3, 128
   17858:	7a 04 00 4f 	movehi s3, 58
   1785c:	20 00 00 88 	store_32 s1, (s0)
   17860:	22 30 00 88 	store_32 s1, 12(s2)
   17864:	03 60 48 00 	or s0, s3, 4632
   17868:	22 20 00 88 	store_32 s1, 8(s2)
   1786c:	22 10 00 88 	store_32 s1, 4(s2)
   17870:	5a 04 00 4f 	movehi s2, 58
   17874:	7a 04 00 4f 	movehi s3, 58
   17878:	20 00 00 88 	store_32 s1, (s0)
   1787c:	1a 04 00 4f 	movehi s0, 58
   17880:	42 30 48 00 	or s2, s2, 4620
   17884:	63 c0 6d 00 	or s3, s3, 7024
   17888:	00 20 38 00 	or s0, s0, 3592
   1788c:	20 00 00 88 	store_32 s1, (s0)
   17890:	22 00 00 88 	store_32 s1, (s2)
   17894:	23 00 00 88 	store_32 s1, (s3)
   17898:	7b e5 ff f9 	call -27156 <D_AdvanceDemo>
   1789c:	00 07 00 0f 	move s24, 1
   178a0:	20 00 00 f6 	b 128 <G_CheckDemoStatus+0x1bc>
   178a4:	1a 04 00 4f 	movehi s0, 58
   178a8:	40 43 6f 00 	or s26, s0, 7120
   178ac:	1a 00 00 a8 	load_32 s0, (s26)
   178b0:	60 03 00 f2 	bz s0, 108 <G_CheckDemoStatus+0x1b8>
   178b4:	1a 04 00 4f 	movehi s0, 58
   178b8:	5a 04 00 4f 	movehi s2, 58
   178bc:	00 80 6e 00 	or s0, s0, 7072
   178c0:	02 93 6e 00 	or s24, s2, 7076
   178c4:	40 00 02 0f 	move s2, 128
   178c8:	20 00 00 a8 	load_32 s1, (s0)
   178cc:	61 04 00 05 	add_i s3, s1, 1
   178d0:	60 00 00 88 	store_32 s3, (s0)
   178d4:	41 00 00 82 	store_8 s2, (s1)
   178d8:	38 00 00 a8 	load_32 s1, (s24)
   178dc:	00 00 00 a8 	load_32 s0, (s0)
   178e0:	40 80 60 c0 	sub_i s2, s0, s1
   178e4:	1a 04 00 4f 	movehi s0, 58
   178e8:	20 b3 6e 00 	or s25, s0, 7084
   178ec:	00 80 fc c0 	move s0, s25
   178f0:	59 11 00 f8 	call 17764 <M_WriteFile>
   178f4:	18 00 00 a8 	load_32 s0, (s24)
   178f8:	af d3 00 f8 	call 216764 <Z_Free>
   178fc:	01 00 00 4f 	movehi s0, 1
   17900:	00 03 00 0f 	move s24, 0
   17904:	1a 03 00 88 	store_32 s24, (s26)
   17908:	3e 13 00 88 	store_32 s25, 4(sp)
   1790c:	00 e0 20 00 	or s0, s0, 2104
   17910:	1e 00 00 88 	store_32 s0, (sp)
   17914:	fc d9 ff f9 	call -38928 <I_Error>
   17918:	02 00 00 f6 	b 8 <G_CheckDemoStatus+0x1bc>
   1791c:	00 03 00 0f 	move s24, 0
   17920:	00 00 fc c0 	move s0, s24
   17924:	fe c3 01 a8 	load_32 ra, 112(sp)
   17928:	5e d3 01 a8 	load_32 s26, 116(sp)
   1792c:	3e e3 01 a8 	load_32 s25, 120(sp)
   17930:	1e f3 01 a8 	load_32 s24, 124(sp)
   17934:	de 03 02 05 	add_i sp, sp, 128
   17938:	1f 00 00 f0 	ret

000000000001793c G_RecordDemo:
   1793c:	de 03 ff 05 	add_i sp, sp, -64
   17940:	1e f3 00 88 	store_32 s24, 60(sp)
   17944:	3e e3 00 88 	store_32 s25, 56(sp)
   17948:	fe d3 00 88 	store_32 ra, 52(sp)
   1794c:	3b 04 00 4f 	movehi s1, 59
   17950:	41 20 19 00 	or s2, s1, 1608
   17954:	20 00 f0 c0 	move s1, s0
   17958:	00 00 00 0f 	move s0, 0
   1795c:	02 00 00 88 	store_32 s0, (s2)
   17960:	1a 04 00 4f 	movehi s0, 58
   17964:	00 b3 6e 00 	or s24, s0, 7084
   17968:	00 00 fc c0 	move s0, s24
   1796c:	98 eb 00 f8 	call 241248 <strcpy>
   17970:	00 00 fc c0 	move s0, s24
   17974:	8b eb 00 f8 	call 241196 <strlen>
   17978:	22 00 00 4f 	movehi s1, 2
   1797c:	18 00 50 c0 	add_i s0, s24, s0
   17980:	21 88 39 00 	or s1, s1, 3682
   17984:	41 00 00 a0 	load_u8 s2, (s1)
   17988:	40 00 00 82 	store_8 s2, (s0)
   1798c:	41 04 00 a0 	load_u8 s2, 1(s1)
   17990:	40 04 00 82 	store_8 s2, 1(s0)
   17994:	41 08 00 a0 	load_u8 s2, 2(s1)
   17998:	40 08 00 82 	store_8 s2, 2(s0)
   1799c:	41 0c 00 a0 	load_u8 s2, 3(s1)
   179a0:	40 0c 00 82 	store_8 s2, 3(s0)
   179a4:	21 10 00 a0 	load_u8 s1, 4(s1)
   179a8:	20 10 00 82 	store_8 s1, 4(s0)
   179ac:	02 00 00 4f 	movehi s0, 2
   179b0:	00 ac 41 00 	or s0, s0, 4203
   179b4:	40 11 00 f8 	call 17664 <M_CheckParm>
   179b8:	10 03 00 4f 	movehi s24, 16
   179bc:	e0 01 00 f2 	bz s0, 60 <G_RecordDemo+0xbc>
   179c0:	3b 04 00 4f 	movehi s1, 59
   179c4:	21 70 26 00 	or s1, s1, 2460
   179c8:	21 00 00 a8 	load_32 s1, (s1)
   179cc:	21 fc ff 05 	add_i s1, s1, -1
   179d0:	20 80 30 c1 	cmpge_i s1, s0, s1
   179d4:	21 01 00 f4 	bnz s1, 36 <G_RecordDemo+0xbc>
   179d8:	3b 04 00 4f 	movehi s1, 59
   179dc:	00 08 00 0b 	shl s0, s0, 2
   179e0:	21 80 26 00 	or s1, s1, 2464
   179e4:	21 00 00 a8 	load_32 s1, (s1)
   179e8:	01 00 50 c0 	add_i s0, s1, s0
   179ec:	00 10 00 a8 	load_32 s0, 4(s0)
   179f0:	64 e8 00 f8 	call 237968 <atoi>
   179f4:	00 2b 00 0b 	shl s24, s0, 10
   179f8:	20 07 00 0f 	move s25, 1
   179fc:	00 00 fc c0 	move s0, s24
   17a00:	40 00 00 0f 	move s2, 0
   17a04:	20 80 fc c0 	move s1, s25
   17a08:	b4 d3 00 f8 	call 216784 <Z_Malloc>
   17a0c:	3a 04 00 4f 	movehi s1, 58
   17a10:	5a 04 00 4f 	movehi s2, 58
   17a14:	7a 04 00 4f 	movehi s3, 58
   17a18:	21 90 6e 00 	or s1, s1, 7076
   17a1c:	01 00 00 88 	store_32 s0, (s1)
   17a20:	22 a0 6e 00 	or s1, s2, 7080
   17a24:	43 40 6f 00 	or s2, s3, 7120
   17a28:	00 00 5c c0 	add_i s0, s0, s24
   17a2c:	01 00 00 88 	store_32 s0, (s1)
   17a30:	22 03 00 88 	store_32 s25, (s2)
   17a34:	fe d3 00 a8 	load_32 ra, 52(sp)
   17a38:	3e e3 00 a8 	load_32 s25, 56(sp)
   17a3c:	1e f3 00 a8 	load_32 s24, 60(sp)
   17a40:	de 03 01 05 	add_i sp, sp, 64
   17a44:	1f 00 00 f0 	ret

0000000000017a48 G_BeginRecording:
   17a48:	1a 04 00 4f 	movehi s0, 58
   17a4c:	3a 04 00 4f 	movehi s1, 58
   17a50:	00 90 6e 00 	or s0, s0, 7076
   17a54:	40 00 00 a8 	load_32 s2, (s0)
   17a58:	01 80 6e 00 	or s0, s1, 7072
   17a5c:	3a 04 00 4f 	movehi s1, 58
   17a60:	62 04 00 05 	add_i s3, s2, 1
   17a64:	60 00 00 88 	store_32 s3, (s0)
   17a68:	21 90 7f 00 	or s1, s1, 8164
   17a6c:	60 b8 01 0f 	move s3, 110
   17a70:	62 00 00 82 	store_8 s3, (s2)
   17a74:	7a 04 00 4f 	movehi s3, 58
   17a78:	21 00 00 a8 	load_32 s1, (s1)
   17a7c:	40 00 00 a8 	load_32 s2, (s0)
   17a80:	63 70 6f 00 	or s3, s3, 7132
   17a84:	82 04 00 05 	add_i s4, s2, 1
   17a88:	80 00 00 88 	store_32 s4, (s0)
   17a8c:	22 00 00 82 	store_8 s1, (s2)
   17a90:	23 00 00 a8 	load_32 s1, (s3)
   17a94:	7a 04 00 4f 	movehi s3, 58
   17a98:	40 00 00 a8 	load_32 s2, (s0)
   17a9c:	63 80 7f 00 	or s3, s3, 8160
   17aa0:	82 04 00 05 	add_i s4, s2, 1
   17aa4:	80 00 00 88 	store_32 s4, (s0)
   17aa8:	22 00 00 82 	store_8 s1, (s2)
   17aac:	23 00 00 a8 	load_32 s1, (s3)
   17ab0:	7a 04 00 4f 	movehi s3, 58
   17ab4:	40 00 00 a8 	load_32 s2, (s0)
   17ab8:	63 60 6e 00 	or s3, s3, 7064
   17abc:	82 04 00 05 	add_i s4, s2, 1
   17ac0:	80 00 00 88 	store_32 s4, (s0)
   17ac4:	22 00 00 82 	store_8 s1, (s2)
   17ac8:	23 00 00 a8 	load_32 s1, (s3)
   17acc:	7a 04 00 4f 	movehi s3, 58
   17ad0:	40 00 00 a8 	load_32 s2, (s0)
   17ad4:	63 60 48 00 	or s3, s3, 4632
   17ad8:	82 04 00 05 	add_i s4, s2, 1
   17adc:	80 00 00 88 	store_32 s4, (s0)
   17ae0:	22 00 00 82 	store_8 s1, (s2)
   17ae4:	23 00 00 a8 	load_32 s1, (s3)
   17ae8:	7a 04 00 4f 	movehi s3, 58
   17aec:	40 00 00 a8 	load_32 s2, (s0)
   17af0:	63 20 38 00 	or s3, s3, 3592
   17af4:	82 04 00 05 	add_i s4, s2, 1
   17af8:	80 00 00 88 	store_32 s4, (s0)
   17afc:	22 00 00 82 	store_8 s1, (s2)
   17b00:	23 00 00 a8 	load_32 s1, (s3)
   17b04:	7a 04 00 4f 	movehi s3, 58
   17b08:	40 00 00 a8 	load_32 s2, (s0)
   17b0c:	63 30 48 00 	or s3, s3, 4620
   17b10:	82 04 00 05 	add_i s4, s2, 1
   17b14:	80 00 00 88 	store_32 s4, (s0)
   17b18:	22 00 00 82 	store_8 s1, (s2)
   17b1c:	23 00 00 a8 	load_32 s1, (s3)
   17b20:	7a 04 00 4f 	movehi s3, 58
   17b24:	40 00 00 a8 	load_32 s2, (s0)
   17b28:	63 c0 6d 00 	or s3, s3, 7024
   17b2c:	82 04 00 05 	add_i s4, s2, 1
   17b30:	80 00 00 88 	store_32 s4, (s0)
   17b34:	22 00 00 82 	store_8 s1, (s2)
   17b38:	23 00 00 a8 	load_32 s1, (s3)
   17b3c:	7b 04 00 4f 	movehi s3, 59
   17b40:	40 00 00 a8 	load_32 s2, (s0)
   17b44:	63 00 02 00 	or s3, s3, 128
   17b48:	82 04 00 05 	add_i s4, s2, 1
   17b4c:	80 00 00 88 	store_32 s4, (s0)
   17b50:	22 00 00 82 	store_8 s1, (s2)
   17b54:	23 00 00 a8 	load_32 s1, (s3)
   17b58:	40 00 00 a8 	load_32 s2, (s0)
   17b5c:	82 04 00 05 	add_i s4, s2, 1
   17b60:	80 00 00 88 	store_32 s4, (s0)
   17b64:	22 00 00 82 	store_8 s1, (s2)
   17b68:	23 10 00 a8 	load_32 s1, 4(s3)
   17b6c:	40 00 00 a8 	load_32 s2, (s0)
   17b70:	82 04 00 05 	add_i s4, s2, 1
   17b74:	80 00 00 88 	store_32 s4, (s0)
   17b78:	22 00 00 82 	store_8 s1, (s2)
   17b7c:	23 20 00 a8 	load_32 s1, 8(s3)
   17b80:	40 00 00 a8 	load_32 s2, (s0)
   17b84:	82 04 00 05 	add_i s4, s2, 1
   17b88:	80 00 00 88 	store_32 s4, (s0)
   17b8c:	22 00 00 82 	store_8 s1, (s2)
   17b90:	23 30 00 a8 	load_32 s1, 12(s3)
   17b94:	40 00 00 a8 	load_32 s2, (s0)
   17b98:	62 04 00 05 	add_i s3, s2, 1
   17b9c:	60 00 00 88 	store_32 s3, (s0)
   17ba0:	22 00 00 82 	store_8 s1, (s2)
   17ba4:	1f 00 00 f0 	ret

0000000000017ba8 G_DeferedPlayDemo:
   17ba8:	3a 04 00 4f 	movehi s1, 58
   17bac:	5a 04 00 4f 	movehi s2, 58
   17bb0:	21 70 6e 00 	or s1, s1, 7068
   17bb4:	42 60 6f 00 	or s2, s2, 7128
   17bb8:	01 00 00 88 	store_32 s0, (s1)
   17bbc:	00 14 00 0f 	move s0, 5
   17bc0:	02 00 00 88 	store_32 s0, (s2)
   17bc4:	1f 00 00 f0 	ret

0000000000017bc8 G_TimeDemo:
   17bc8:	de 03 ff 05 	add_i sp, sp, -64
   17bcc:	1e f3 00 88 	store_32 s24, 60(sp)
   17bd0:	fe e3 00 88 	store_32 ra, 56(sp)
   17bd4:	00 03 f0 c0 	move s24, s0
   17bd8:	01 00 00 4f 	movehi s0, 1
   17bdc:	00 c0 20 00 	or s0, s0, 2096
   17be0:	b5 10 00 f8 	call 17108 <M_CheckParm>
   17be4:	3b 04 00 4f 	movehi s1, 59
   17be8:	21 e0 01 00 	or s1, s1, 120
   17bec:	01 00 00 88 	store_32 s0, (s1)
   17bf0:	00 00 00 4f 	movehi s0, 0
   17bf4:	00 d0 79 00 	or s0, s0, 7796
   17bf8:	af 10 00 f8 	call 17084 <M_CheckParm>
   17bfc:	3b 04 00 4f 	movehi s1, 59
   17c00:	5b 04 00 4f 	movehi s2, 59
   17c04:	7a 04 00 4f 	movehi s3, 58
   17c08:	21 d0 01 00 	or s1, s1, 116
   17c0c:	01 00 00 88 	store_32 s0, (s1)
   17c10:	02 d0 18 00 	or s0, s2, 1588
   17c14:	53 04 00 4f 	movehi s2, 51
   17c18:	20 04 00 0f 	move s1, 1
   17c1c:	20 00 00 88 	store_32 s1, (s0)
   17c20:	1a 04 00 4f 	movehi s0, 58
   17c24:	42 40 45 00 	or s2, s2, 4432
   17c28:	00 70 6e 00 	or s0, s0, 7068
   17c2c:	22 00 00 88 	store_32 s1, (s2)
   17c30:	23 60 6f 00 	or s1, s3, 7128
   17c34:	00 03 00 88 	store_32 s24, (s0)
   17c38:	00 14 00 0f 	move s0, 5
   17c3c:	01 00 00 88 	store_32 s0, (s1)
   17c40:	fe e3 00 a8 	load_32 ra, 56(sp)
   17c44:	1e f3 00 a8 	load_32 s24, 60(sp)
   17c48:	de 03 01 05 	add_i sp, sp, 64
   17c4c:	1f 00 00 f0 	ret

0000000000017c50 M_NewGame:
   17c50:	1b 04 00 4f 	movehi s0, 59
   17c54:	3a 04 00 4f 	movehi s1, 58
   17c58:	00 c0 01 00 	or s0, s0, 112
   17c5c:	21 30 6f 00 	or s1, s1, 7116
   17c60:	40 00 00 a8 	load_32 s2, (s0)
   17c64:	01 00 00 a8 	load_32 s0, (s1)
   17c68:	42 03 00 f2 	bz s2, 104 <M_NewGame+0x80>
   17c6c:	20 03 00 f4 	bnz s0, 100 <M_NewGame+0x80>
   17c70:	1b 04 00 4f 	movehi s0, 59
   17c74:	3b 04 00 4f 	movehi s1, 59
   17c78:	5b 04 00 4f 	movehi s2, 59
   17c7c:	00 60 1f 00 	or s0, s0, 2008
   17c80:	21 70 1f 00 	or s1, s1, 2012
   17c84:	82 00 00 4f 	movehi s4, 2
   17c88:	60 00 00 a8 	load_32 s3, (s0)
   17c8c:	bb 04 00 4f 	movehi s5, 59
   17c90:	61 00 00 88 	store_32 s3, (s1)
   17c94:	22 b0 1f 00 	or s1, s2, 2028
   17c98:	7b 04 00 4f 	movehi s3, 59
   17c9c:	40 04 00 0f 	move s2, 1
   17ca0:	41 00 00 88 	store_32 s2, (s1)
   17ca4:	23 a0 1f 00 	or s1, s3, 2024
   17ca8:	64 e8 11 00 	or s3, s4, 1146
   17cac:	9b 04 00 4f 	movehi s4, 59
   17cb0:	61 00 00 88 	store_32 s3, (s1)
   17cb4:	65 80 1f 00 	or s3, s5, 2016
   17cb8:	24 90 1f 00 	or s1, s4, 2020
   17cbc:	80 00 00 0f 	move s4, 0
   17cc0:	81 00 00 88 	store_32 s4, (s1)
   17cc4:	83 00 00 88 	store_32 s4, (s3)
   17cc8:	40 00 00 88 	store_32 s2, (s0)
   17ccc:	1f 00 00 f0 	ret
   17cd0:	0b 04 00 4f 	movehi s0, 43
   17cd4:	00 00 40 00 	or s0, s0, 4096
   17cd8:	00 00 00 a8 	load_32 s0, (s0)
   17cdc:	00 08 00 11 	cmpne_i s0, s0, 2
   17ce0:	e0 00 00 f4 	bnz s0, 28 <M_NewGame+0xac>
   17ce4:	1b 04 00 4f 	movehi s0, 59
   17ce8:	33 04 00 4f 	movehi s1, 51
   17cec:	5b 04 00 4f 	movehi s2, 59
   17cf0:	00 60 1c 00 	or s0, s0, 1816
   17cf4:	21 b0 55 00 	or s1, s1, 5484
   17cf8:	06 00 00 f6 	b 24 <M_NewGame+0xc0>
   17cfc:	1b 04 00 4f 	movehi s0, 59
   17d00:	33 04 00 4f 	movehi s1, 51
   17d04:	5b 04 00 4f 	movehi s2, 59
   17d08:	00 60 1c 00 	or s0, s0, 1816
   17d0c:	21 c0 53 00 	or s1, s1, 5360
   17d10:	42 30 1f 00 	or s2, s2, 1996
   17d14:	20 00 00 88 	store_32 s1, (s0)
   17d18:	01 50 00 a6 	load_s16 s0, 20(s1)
   17d1c:	02 00 00 86 	store_16 s0, (s2)
   17d20:	1f 00 00 f0 	ret

0000000000017d24 M_Options:
   17d24:	1b 04 00 4f 	movehi s0, 59
   17d28:	33 04 00 4f 	movehi s1, 51
   17d2c:	5b 04 00 4f 	movehi s2, 59
   17d30:	00 60 1c 00 	or s0, s0, 1816
   17d34:	21 90 58 00 	or s1, s1, 5668
   17d38:	42 30 1f 00 	or s2, s2, 1996
   17d3c:	20 00 00 88 	store_32 s1, (s0)
   17d40:	01 50 00 a6 	load_s16 s0, 20(s1)
   17d44:	02 00 00 86 	store_16 s0, (s2)
   17d48:	1f 00 00 f0 	ret

0000000000017d4c M_LoadGame:
   17d4c:	1b 04 00 4f 	movehi s0, 59
   17d50:	00 c0 01 00 	or s0, s0, 112
   17d54:	00 00 00 a8 	load_32 s0, (s0)
   17d58:	20 03 00 f2 	bz s0, 100 <M_LoadGame+0x70>
   17d5c:	1b 04 00 4f 	movehi s0, 59
   17d60:	3b 04 00 4f 	movehi s1, 59
   17d64:	5b 04 00 4f 	movehi s2, 59
   17d68:	00 60 1f 00 	or s0, s0, 2008
   17d6c:	21 70 1f 00 	or s1, s1, 2012
   17d70:	80 00 00 4f 	movehi s4, 0
   17d74:	60 00 00 a8 	load_32 s3, (s0)
   17d78:	bb 04 00 4f 	movehi s5, 59
   17d7c:	61 00 00 88 	store_32 s3, (s1)
   17d80:	22 b0 1f 00 	or s1, s2, 2028
   17d84:	7b 04 00 4f 	movehi s3, 59
   17d88:	40 04 00 0f 	move s2, 1
   17d8c:	41 00 00 88 	store_32 s2, (s1)
   17d90:	23 a0 1f 00 	or s1, s3, 2024
   17d94:	64 14 7a 00 	or s3, s4, 7813
   17d98:	9b 04 00 4f 	movehi s4, 59
   17d9c:	61 00 00 88 	store_32 s3, (s1)
   17da0:	65 80 1f 00 	or s3, s5, 2016
   17da4:	24 90 1f 00 	or s1, s4, 2020
   17da8:	80 00 00 0f 	move s4, 0
   17dac:	81 00 00 88 	store_32 s4, (s1)
   17db0:	83 00 00 88 	store_32 s4, (s3)
   17db4:	40 00 00 88 	store_32 s2, (s0)
   17db8:	1f 00 00 f0 	ret
   17dbc:	1b 04 00 4f 	movehi s0, 59
   17dc0:	33 04 00 4f 	movehi s1, 51
   17dc4:	5b 04 00 4f 	movehi s2, 59
   17dc8:	00 60 1c 00 	or s0, s0, 1816
   17dcc:	21 d0 5d 00 	or s1, s1, 6004
   17dd0:	42 30 1f 00 	or s2, s2, 1996
   17dd4:	20 00 00 88 	store_32 s1, (s0)
   17dd8:	01 50 00 a6 	load_s16 s0, 20(s1)
   17ddc:	02 00 00 86 	store_16 s0, (s2)
   17de0:	1f 00 00 f0 	ret

0000000000017de4 M_SaveGame:
   17de4:	1b 04 00 4f 	movehi s0, 59
   17de8:	00 20 19 00 	or s0, s0, 1608
   17dec:	00 00 00 a8 	load_32 s0, (s0)
   17df0:	40 00 00 f4 	bnz s0, 8 <M_SaveGame+0x14>
   17df4:	07 00 00 f6 	b 28 <M_SaveGame+0x2c>
   17df8:	1a 04 00 4f 	movehi s0, 58
   17dfc:	00 a0 7f 00 	or s0, s0, 8168
   17e00:	00 00 00 a8 	load_32 s0, (s0)
   17e04:	40 00 00 f4 	bnz s0, 8 <M_SaveGame+0x28>
   17e08:	1a 00 00 f6 	b 104 <M_SaveGame+0x8c>
   17e0c:	1f 00 00 f0 	ret
   17e10:	1b 04 00 4f 	movehi s0, 59
   17e14:	3b 04 00 4f 	movehi s1, 59
   17e18:	5b 04 00 4f 	movehi s2, 59
   17e1c:	00 60 1f 00 	or s0, s0, 2008
   17e20:	21 70 1f 00 	or s1, s1, 2012
   17e24:	82 00 00 4f 	movehi s4, 2
   17e28:	60 00 00 a8 	load_32 s3, (s0)
   17e2c:	bb 04 00 4f 	movehi s5, 59
   17e30:	61 00 00 88 	store_32 s3, (s1)
   17e34:	22 b0 1f 00 	or s1, s2, 2028
   17e38:	7b 04 00 4f 	movehi s3, 59
   17e3c:	40 04 00 0f 	move s2, 1
   17e40:	41 00 00 88 	store_32 s2, (s1)
   17e44:	23 a0 1f 00 	or s1, s3, 2024
   17e48:	64 e8 54 00 	or s3, s4, 5434
   17e4c:	9b 04 00 4f 	movehi s4, 59
   17e50:	61 00 00 88 	store_32 s3, (s1)
   17e54:	65 80 1f 00 	or s3, s5, 2016
   17e58:	24 90 1f 00 	or s1, s4, 2020
   17e5c:	80 00 00 0f 	move s4, 0
   17e60:	81 00 00 88 	store_32 s4, (s1)
   17e64:	83 00 00 88 	store_32 s4, (s3)
   17e68:	40 00 00 88 	store_32 s2, (s0)
   17e6c:	1f 00 00 f0 	ret
   17e70:	1b 04 00 4f 	movehi s0, 59
   17e74:	33 04 00 4f 	movehi s1, 51
   17e78:	5b 04 00 4f 	movehi s2, 59
   17e7c:	00 60 1c 00 	or s0, s0, 1816
   17e80:	21 10 60 00 	or s1, s1, 6148
   17e84:	42 30 1f 00 	or s2, s2, 1996
   17e88:	20 00 00 88 	store_32 s1, (s0)
   17e8c:	01 50 00 a6 	load_s16 s0, 20(s1)
   17e90:	02 00 00 86 	store_16 s0, (s2)
   17e94:	1f 00 00 f0 	ret

0000000000017e98 M_ReadThis:
   17e98:	1b 04 00 4f 	movehi s0, 59
   17e9c:	33 04 00 4f 	movehi s1, 51
   17ea0:	5b 04 00 4f 	movehi s2, 59
   17ea4:	00 60 1c 00 	or s0, s0, 1816
   17ea8:	21 40 59 00 	or s1, s1, 5712
   17eac:	42 30 1f 00 	or s2, s2, 1996
   17eb0:	20 00 00 88 	store_32 s1, (s0)
   17eb4:	01 50 00 a6 	load_s16 s0, 20(s1)
   17eb8:	02 00 00 86 	store_16 s0, (s2)
   17ebc:	1f 00 00 f0 	ret

0000000000017ec0 M_QuitDOOM:
   17ec0:	de 03 fe 05 	add_i sp, sp, -128
   17ec4:	fe f3 01 88 	store_32 ra, 124(sp)
   17ec8:	00 0c 00 4f 	movehi s0, 96
   17ecc:	00 f0 0a 00 	or s0, s0, 700
   17ed0:	00 00 00 a8 	load_32 s0, (s0)
   17ed4:	a0 00 00 f2 	bz s0, 20 <M_QuitDOOM+0x28>
   17ed8:	0b 04 00 4f 	movehi s0, 43
   17edc:	00 10 40 00 	or s0, s0, 4100
   17ee0:	00 00 00 a8 	load_32 s0, (s0)
   17ee4:	11 00 00 f6 	b 68 <M_QuitDOOM+0x68>
   17ee8:	1a 04 00 4f 	movehi s0, 58
   17eec:	33 64 66 4f 	movehi s1, 209715
   17ef0:	00 b0 7f 00 	or s0, s0, 8172
   17ef4:	21 9c 19 00 	or s1, s1, 1639
   17ef8:	00 00 00 a8 	load_32 s0, (s0)
   17efc:	20 80 f0 c1 	mulh_i s1, s0, s1
   17f00:	41 0c 00 09 	ashr s2, s1, 3
   17f04:	21 7c 00 0a 	shr s1, s1, 31
   17f08:	22 80 50 c0 	add_i s1, s2, s1
   17f0c:	4b 04 00 4f 	movehi s2, 43
   17f10:	21 50 00 07 	mull_i s1, s1, 20
   17f14:	00 80 60 c0 	sub_i s0, s0, s1
   17f18:	22 10 40 00 	or s1, s2, 4100
   17f1c:	00 08 00 0b 	shl s0, s0, 2
   17f20:	01 00 50 c0 	add_i s0, s1, s0
   17f24:	00 10 00 a8 	load_32 s0, 4(s0)
   17f28:	20 00 00 4f 	movehi s1, 0
   17f2c:	1e 20 00 88 	store_32 s0, 8(sp)
   17f30:	1b 04 00 4f 	movehi s0, 59
   17f34:	21 04 16 00 	or s1, s1, 1409
   17f38:	3e 10 00 88 	store_32 s1, 4(sp)
   17f3c:	00 80 1c 00 	or s0, s0, 1824
   17f40:	1e 00 00 88 	store_32 s0, (sp)
   17f44:	b1 e7 00 f8 	call 237252 <sprintf>
   17f48:	1b 04 00 4f 	movehi s0, 59
   17f4c:	3b 04 00 4f 	movehi s1, 59
   17f50:	5b 04 00 4f 	movehi s2, 59
   17f54:	00 60 1f 00 	or s0, s0, 2008
   17f58:	21 70 1f 00 	or s1, s1, 2012
   17f5c:	9b 04 00 4f 	movehi s4, 59
   17f60:	60 00 00 a8 	load_32 s3, (s0)
   17f64:	61 00 00 88 	store_32 s3, (s1)
   17f68:	22 b0 1f 00 	or s1, s2, 2028
   17f6c:	5b 04 00 4f 	movehi s2, 59
   17f70:	60 04 00 0f 	move s3, 1
   17f74:	61 00 00 88 	store_32 s3, (s1)
   17f78:	24 80 1c 00 	or s1, s4, 1824
   17f7c:	42 a0 1f 00 	or s2, s2, 2024
   17f80:	8d 00 00 4f 	movehi s4, 13
   17f84:	22 00 00 88 	store_32 s1, (s2)
   17f88:	3b 04 00 4f 	movehi s1, 59
   17f8c:	5b 04 00 4f 	movehi s2, 59
   17f90:	84 80 0a 00 	or s4, s4, 672
   17f94:	21 90 1f 00 	or s1, s1, 2020
   17f98:	42 80 1f 00 	or s2, s2, 2016
   17f9c:	81 00 00 88 	store_32 s4, (s1)
   17fa0:	62 00 00 88 	store_32 s3, (s2)
   17fa4:	60 00 00 88 	store_32 s3, (s0)
   17fa8:	fe f3 01 a8 	load_32 ra, 124(sp)
   17fac:	de 03 02 05 	add_i sp, sp, 128
   17fb0:	1f 00 00 f0 	ret

0000000000017fb4 M_DrawMainMenu:
   17fb4:	de 03 ff 05 	add_i sp, sp, -64
   17fb8:	fe f3 00 88 	store_32 ra, 60(sp)
   17fbc:	03 00 00 4f 	movehi s0, 3
   17fc0:	20 94 01 0f 	move s1, 101
   17fc4:	00 70 08 00 	or s0, s0, 540
   17fc8:	e0 9b 00 f8 	call 159616 <W_CacheLumpName>
   17fcc:	60 00 f0 c0 	move s3, s0
   17fd0:	00 78 01 0f 	move s0, 94
   17fd4:	20 08 00 0f 	move s1, 2
   17fd8:	40 00 00 0f 	move s2, 0
   17fdc:	24 b9 00 f8 	call 189584 <V_DrawPatchDirect>
   17fe0:	fe f3 00 a8 	load_32 ra, 60(sp)
   17fe4:	de 03 01 05 	add_i sp, sp, 64
   17fe8:	1f 00 00 f0 	ret

0000000000017fec M_Episode:
   17fec:	2b 04 00 4f 	movehi s1, 43
   17ff0:	21 00 40 00 	or s1, s1, 4096
   17ff4:	21 00 00 a8 	load_32 s1, (s1)
   17ff8:	80 03 00 f2 	bz s0, 112 <M_Episode+0x7c>
   17ffc:	61 03 00 f4 	bnz s1, 108 <M_Episode+0x7c>
   18000:	1b 04 00 4f 	movehi s0, 59
   18004:	3b 04 00 4f 	movehi s1, 59
   18008:	5b 04 00 4f 	movehi s2, 59
   1800c:	00 60 1f 00 	or s0, s0, 2008
   18010:	21 70 1f 00 	or s1, s1, 2012
   18014:	81 00 00 4f 	movehi s4, 1
   18018:	60 00 00 a8 	load_32 s3, (s0)
   1801c:	61 00 00 88 	store_32 s3, (s1)
   18020:	22 b0 1f 00 	or s1, s2, 2028
   18024:	7b 04 00 4f 	movehi s3, 59
   18028:	40 04 00 0f 	move s2, 1
   1802c:	41 00 00 88 	store_32 s2, (s1)
   18030:	23 a0 1f 00 	or s1, s3, 2024
   18034:	64 5c 62 00 	or s3, s4, 6295
   18038:	9b 04 00 4f 	movehi s4, 59
   1803c:	61 00 00 88 	store_32 s3, (s1)
   18040:	3b 04 00 4f 	movehi s1, 59
   18044:	64 90 1f 00 	or s3, s4, 2020
   18048:	80 00 00 0f 	move s4, 0
   1804c:	21 80 1f 00 	or s1, s1, 2016
   18050:	83 00 00 88 	store_32 s4, (s3)
   18054:	73 04 00 4f 	movehi s3, 51
   18058:	81 00 00 88 	store_32 s4, (s1)
   1805c:	40 00 00 88 	store_32 s2, (s0)
   18060:	03 40 59 00 	or s0, s3, 5712
   18064:	10 00 00 f6 	b 64 <M_Episode+0xb8>
   18068:	21 04 00 10 	cmpeq_i s1, s1, 1
   1806c:	a1 00 00 f4 	bnz s1, 20 <M_Episode+0x94>
   18070:	20 00 f0 c0 	move s1, s0
   18074:	40 08 00 12 	cmpgt_i s2, s0, 2
   18078:	c2 00 00 f4 	bnz s2, 24 <M_Episode+0xa4>
   1807c:	04 00 00 f6 	b 16 <M_Episode+0xa0>
   18080:	20 00 00 0f 	move s1, 0
   18084:	40 08 00 12 	cmpgt_i s2, s0, 2
   18088:	42 00 00 f4 	bnz s2, 8 <M_Episode+0xa4>
   1808c:	20 00 f0 c0 	move s1, s0
   18090:	1b 04 00 4f 	movehi s0, 59
   18094:	53 04 00 4f 	movehi s2, 51
   18098:	00 00 1f 00 	or s0, s0, 1984
   1809c:	20 00 00 88 	store_32 s1, (s0)
   180a0:	02 b0 55 00 	or s0, s2, 5484
   180a4:	3b 04 00 4f 	movehi s1, 59
   180a8:	5b 04 00 4f 	movehi s2, 59
   180ac:	21 60 1c 00 	or s1, s1, 1816
   180b0:	42 30 1f 00 	or s2, s2, 1996
   180b4:	01 00 00 88 	store_32 s0, (s1)
   180b8:	00 50 00 a6 	load_s16 s0, 20(s0)
   180bc:	02 00 00 86 	store_16 s0, (s2)
   180c0:	1f 00 00 f0 	ret

00000000000180c4 M_DrawEpisode:
   180c4:	de 03 ff 05 	add_i sp, sp, -64
   180c8:	fe f3 00 88 	store_32 ra, 60(sp)
   180cc:	01 00 00 4f 	movehi s0, 1
   180d0:	20 94 01 0f 	move s1, 101
   180d4:	00 20 7d 00 	or s0, s0, 8008
   180d8:	9c 9b 00 f8 	call 159344 <W_CacheLumpName>
   180dc:	60 00 f0 c0 	move s3, s0
   180e0:	00 d8 00 0f 	move s0, 54
   180e4:	20 98 00 0f 	move s1, 38
   180e8:	40 00 00 0f 	move s2, 0
   180ec:	e0 b8 00 f8 	call 189312 <V_DrawPatchDirect>
   180f0:	fe f3 00 a8 	load_32 ra, 60(sp)
   180f4:	de 03 01 05 	add_i sp, sp, 64
   180f8:	1f 00 00 f0 	ret

00000000000180fc M_ChooseSkill:
   180fc:	de 03 ff 05 	add_i sp, sp, -64
   18100:	fe f3 00 88 	store_32 ra, 60(sp)
   18104:	20 10 00 11 	cmpne_i s1, s0, 4
   18108:	21 03 00 f4 	bnz s1, 100 <M_ChooseSkill+0x70>
   1810c:	1b 04 00 4f 	movehi s0, 59
   18110:	3b 04 00 4f 	movehi s1, 59
   18114:	5b 04 00 4f 	movehi s2, 59
   18118:	00 60 1f 00 	or s0, s0, 2008
   1811c:	21 70 1f 00 	or s1, s1, 2012
   18120:	60 00 00 4f 	movehi s3, 0
   18124:	00 00 00 a8 	load_32 s0, (s0)
   18128:	01 00 00 88 	store_32 s0, (s1)
   1812c:	22 b0 1f 00 	or s1, s2, 2028
   18130:	5b 04 00 4f 	movehi s2, 59
   18134:	00 04 00 0f 	move s0, 1
   18138:	01 00 00 88 	store_32 s0, (s1)
   1813c:	23 d4 36 00 	or s1, s3, 3509
   18140:	42 a0 1f 00 	or s2, s2, 2024
   18144:	6d 00 00 4f 	movehi s3, 13
   18148:	22 00 00 88 	store_32 s1, (s2)
   1814c:	3b 04 00 4f 	movehi s1, 59
   18150:	5b 04 00 4f 	movehi s2, 59
   18154:	63 30 08 00 	or s3, s3, 524
   18158:	21 90 1f 00 	or s1, s1, 2020
   1815c:	42 80 1f 00 	or s2, s2, 2016
   18160:	61 00 00 88 	store_32 s3, (s1)
   18164:	02 00 00 88 	store_32 s0, (s2)
   18168:	08 00 00 f6 	b 32 <M_ChooseSkill+0x8c>
   1816c:	3b 04 00 4f 	movehi s1, 59
   18170:	40 04 00 0f 	move s2, 1
   18174:	21 00 1f 00 	or s1, s1, 1984
   18178:	21 00 00 a8 	load_32 s1, (s1)
   1817c:	21 04 00 05 	add_i s1, s1, 1
   18180:	6b fd ff f9 	call -2644 <G_DeferedInitNew>
   18184:	00 00 00 0f 	move s0, 0
   18188:	3b 04 00 4f 	movehi s1, 59
   1818c:	21 60 1f 00 	or s1, s1, 2008
   18190:	01 00 00 88 	store_32 s0, (s1)
   18194:	fe f3 00 a8 	load_32 ra, 60(sp)
   18198:	de 03 01 05 	add_i sp, sp, 64
   1819c:	1f 00 00 f0 	ret

00000000000181a0 M_DrawNewGame:
   181a0:	de 03 ff 05 	add_i sp, sp, -64
   181a4:	1e f3 00 88 	store_32 s24, 60(sp)
   181a8:	3e e3 00 88 	store_32 s25, 56(sp)
   181ac:	fe d3 00 88 	store_32 ra, 52(sp)
   181b0:	02 00 00 4f 	movehi s0, 2
   181b4:	00 97 01 0f 	move s24, 101
   181b8:	00 8c 7c 00 	or s0, s0, 7971
   181bc:	20 00 fc c0 	move s1, s24
   181c0:	62 9b 00 f8 	call 159112 <W_CacheLumpName>
   181c4:	20 03 00 0f 	move s25, 0
   181c8:	60 00 f0 c0 	move s3, s0
   181cc:	00 80 01 0f 	move s0, 96
   181d0:	20 38 00 0f 	move s1, 14
   181d4:	40 80 fc c0 	move s2, s25
   181d8:	a5 b8 00 f8 	call 189076 <V_DrawPatchDirect>
   181dc:	01 00 00 4f 	movehi s0, 1
   181e0:	20 00 fc c0 	move s1, s24
   181e4:	00 24 21 00 	or s0, s0, 2121
   181e8:	58 9b 00 f8 	call 159072 <W_CacheLumpName>
   181ec:	60 00 f0 c0 	move s3, s0
   181f0:	00 d8 00 0f 	move s0, 54
   181f4:	20 98 00 0f 	move s1, 38
   181f8:	40 80 fc c0 	move s2, s25
   181fc:	9c b8 00 f8 	call 189040 <V_DrawPatchDirect>
   18200:	fe d3 00 a8 	load_32 ra, 52(sp)
   18204:	3e e3 00 a8 	load_32 s25, 56(sp)
   18208:	1e f3 00 a8 	load_32 s24, 60(sp)
   1820c:	de 03 01 05 	add_i sp, sp, 64
   18210:	1f 00 00 f0 	ret

0000000000018214 M_EndGame:
   18214:	de 03 ff 05 	add_i sp, sp, -64
   18218:	fe f3 00 88 	store_32 ra, 60(sp)
   1821c:	1b 04 00 4f 	movehi s0, 59
   18220:	00 20 19 00 	or s0, s0, 1608
   18224:	00 00 00 a8 	load_32 s0, (s0)
   18228:	40 00 00 f4 	bnz s0, 8 <M_EndGame+0x1c>
   1822c:	1f 00 00 f6 	b 124 <M_EndGame+0x94>
   18230:	1b 04 00 4f 	movehi s0, 59
   18234:	3b 04 00 4f 	movehi s1, 59
   18238:	7b 04 00 4f 	movehi s3, 59
   1823c:	00 c0 01 00 	or s0, s0, 112
   18240:	63 70 1f 00 	or s3, s3, 2012
   18244:	40 00 00 a8 	load_32 s2, (s0)
   18248:	01 60 1f 00 	or s0, s1, 2008
   1824c:	3b 04 00 4f 	movehi s1, 59
   18250:	80 00 00 a8 	load_32 s4, (s0)
   18254:	a1 b0 1f 00 	or s5, s1, 2028
   18258:	83 00 00 88 	store_32 s4, (s3)
   1825c:	20 04 00 0f 	move s1, 1
   18260:	25 00 00 88 	store_32 s1, (s5)
   18264:	e2 02 00 f2 	bz s2, 92 <M_EndGame+0xac>
   18268:	5b 04 00 4f 	movehi s2, 59
   1826c:	62 00 00 4f 	movehi s3, 2
   18270:	9b 04 00 4f 	movehi s4, 59
   18274:	42 a0 1f 00 	or s2, s2, 2024
   18278:	bb 04 00 4f 	movehi s5, 59
   1827c:	63 88 5f 00 	or s3, s3, 6114
   18280:	62 00 00 88 	store_32 s3, (s2)
   18284:	44 90 1f 00 	or s2, s4, 2020
   18288:	65 80 1f 00 	or s3, s5, 2016
   1828c:	80 00 00 0f 	move s4, 0
   18290:	82 00 00 88 	store_32 s4, (s2)
   18294:	83 00 00 88 	store_32 s4, (s3)
   18298:	20 00 00 88 	store_32 s1, (s0)
   1829c:	fe f3 00 a8 	load_32 ra, 60(sp)
   182a0:	de 03 01 05 	add_i sp, sp, 64
   182a4:	1f 00 00 f0 	ret
   182a8:	00 00 00 0f 	move s0, 0
   182ac:	20 88 00 0f 	move s1, 34
   182b0:	4d d0 00 f8 	call 213300 <S_StartSound>
   182b4:	fe f3 00 a8 	load_32 ra, 60(sp)
   182b8:	de 03 01 05 	add_i sp, sp, 64
   182bc:	1f 00 00 f0 	ret
   182c0:	5b 04 00 4f 	movehi s2, 59
   182c4:	60 00 00 4f 	movehi s3, 0
   182c8:	8d 00 00 4f 	movehi s4, 13
   182cc:	42 a0 1f 00 	or s2, s2, 2024
   182d0:	63 e0 3f 00 	or s3, s3, 4088
   182d4:	84 50 09 00 	or s4, s4, 596
   182d8:	62 00 00 88 	store_32 s3, (s2)
   182dc:	5b 04 00 4f 	movehi s2, 59
   182e0:	7b 04 00 4f 	movehi s3, 59
   182e4:	42 90 1f 00 	or s2, s2, 2020
   182e8:	63 80 1f 00 	or s3, s3, 2016
   182ec:	82 00 00 88 	store_32 s4, (s2)
   182f0:	23 00 00 88 	store_32 s1, (s3)
   182f4:	20 00 00 88 	store_32 s1, (s0)
   182f8:	fe f3 00 a8 	load_32 ra, 60(sp)
   182fc:	de 03 01 05 	add_i sp, sp, 64
   18300:	1f 00 00 f0 	ret

0000000000018304 M_ChangeMessages:
   18304:	1b 04 00 4f 	movehi s0, 59
   18308:	7a 04 00 4f 	movehi s3, 58
   1830c:	20 b0 24 00 	or s1, s0, 2348
   18310:	00 04 00 0f 	move s0, 1
   18314:	63 c0 6d 00 	or s3, s3, 7024
   18318:	41 00 00 a8 	load_32 s2, (s1)
   1831c:	40 00 61 c0 	sub_i s2, s0, s2
   18320:	41 00 00 88 	store_32 s2, (s1)
   18324:	23 00 00 a8 	load_32 s1, (s3)
   18328:	7b 04 00 4f 	movehi s3, 59
   1832c:	42 00 00 10 	cmpeq_i s2, s2, 0
   18330:	63 40 02 00 	or s3, s3, 144
   18334:	21 60 04 07 	mull_i s1, s1, 280
   18338:	23 80 50 c0 	add_i s1, s3, s1
   1833c:	82 00 00 f4 	bnz s2, 16 <M_ChangeMessages+0x48>
   18340:	41 00 00 4f 	movehi s2, 1
   18344:	42 a8 2e 00 	or s2, s2, 2986
   18348:	03 00 00 f6 	b 12 <M_ChangeMessages+0x50>
   1834c:	40 00 00 4f 	movehi s2, 0
   18350:	42 10 6a 00 	or s2, s2, 6788
   18354:	60 0c 00 4f 	movehi s3, 96
   18358:	41 60 03 88 	store_32 s2, 216(s1)
   1835c:	63 a0 06 00 	or s3, s3, 424
   18360:	03 00 00 88 	store_32 s0, (s3)
   18364:	1f 00 00 f0 	ret

0000000000018368 M_ChangeDetail:
   18368:	1b 04 00 4f 	movehi s0, 59
   1836c:	40 04 00 0f 	move s2, 1
   18370:	00 70 1c 00 	or s0, s0, 1820
   18374:	20 00 00 a8 	load_32 s1, (s0)
   18378:	22 80 60 c0 	sub_i s1, s2, s1
   1837c:	20 00 00 88 	store_32 s1, (s0)
   18380:	1f 00 00 f0 	ret

0000000000018384 M_SizeDisplay:
   18384:	de 03 ff 05 	add_i sp, sp, -64
   18388:	fe f3 00 88 	store_32 ra, 60(sp)
   1838c:	20 04 00 10 	cmpeq_i s1, s0, 1
   18390:	a1 01 00 f4 	bnz s1, 52 <M_SizeDisplay+0x40>
   18394:	00 03 00 f4 	bnz s0, 96 <M_SizeDisplay+0x70>
   18398:	1b 04 00 4f 	movehi s0, 59
   1839c:	00 90 24 00 	or s0, s0, 2340
   183a0:	20 00 00 a8 	load_32 s1, (s0)
   183a4:	41 04 00 14 	cmplt_i s2, s1, 1
   183a8:	62 02 00 f4 	bnz s2, 76 <M_SizeDisplay+0x70>
   183ac:	5b 04 00 4f 	movehi s2, 59
   183b0:	21 fc ff 05 	add_i s1, s1, -1
   183b4:	42 a0 24 00 	or s2, s2, 2344
   183b8:	62 00 00 a8 	load_32 s3, (s2)
   183bc:	63 fc ff 05 	add_i s3, s3, -1
   183c0:	0b 00 00 f6 	b 44 <M_SizeDisplay+0x68>
   183c4:	1b 04 00 4f 	movehi s0, 59
   183c8:	00 90 24 00 	or s0, s0, 2340
   183cc:	20 00 00 a8 	load_32 s1, (s0)
   183d0:	41 1c 00 12 	cmpgt_i s2, s1, 7
   183d4:	02 01 00 f4 	bnz s2, 32 <M_SizeDisplay+0x70>
   183d8:	5b 04 00 4f 	movehi s2, 59
   183dc:	21 04 00 05 	add_i s1, s1, 1
   183e0:	42 a0 24 00 	or s2, s2, 2344
   183e4:	62 00 00 a8 	load_32 s3, (s2)
   183e8:	63 04 00 05 	add_i s3, s3, 1
   183ec:	62 00 00 88 	store_32 s3, (s2)
   183f0:	20 00 00 88 	store_32 s1, (s0)
   183f4:	1b 04 00 4f 	movehi s0, 59
   183f8:	3b 04 00 4f 	movehi s1, 59
   183fc:	00 a0 24 00 	or s0, s0, 2344
   18400:	21 70 1c 00 	or s1, s1, 1820
   18404:	00 00 00 a8 	load_32 s0, (s0)
   18408:	21 00 00 a8 	load_32 s1, (s1)
   1840c:	14 85 00 f8 	call 136272 <R_SetViewSize>
   18410:	fe f3 00 a8 	load_32 ra, 60(sp)
   18414:	de 03 01 05 	add_i sp, sp, 64
   18418:	1f 00 00 f0 	ret

000000000001841c M_ChangeSensitivity:
   1841c:	20 04 00 10 	cmpeq_i s1, s0, 1
   18420:	01 01 00 f4 	bnz s1, 32 <M_ChangeSensitivity+0x24>
   18424:	c0 01 00 f4 	bnz s0, 56 <M_ChangeSensitivity+0x40>
   18428:	1b 04 00 4f 	movehi s0, 59
   1842c:	00 e0 1f 00 	or s0, s0, 2040
   18430:	20 00 00 a8 	load_32 s1, (s0)
   18434:	41 01 00 f2 	bz s1, 40 <M_ChangeSensitivity+0x40>
   18438:	21 fc ff 05 	add_i s1, s1, -1
   1843c:	07 00 00 f6 	b 28 <M_ChangeSensitivity+0x3c>
   18440:	1b 04 00 4f 	movehi s0, 59
   18444:	00 e0 1f 00 	or s0, s0, 2040
   18448:	20 00 00 a8 	load_32 s1, (s0)
   1844c:	41 20 00 12 	cmpgt_i s2, s1, 8
   18450:	62 00 00 f4 	bnz s2, 12 <M_ChangeSensitivity+0x40>
   18454:	21 04 00 05 	add_i s1, s1, 1
   18458:	20 00 00 88 	store_32 s1, (s0)
   1845c:	1f 00 00 f0 	ret

0000000000018460 M_Sound:
   18460:	1b 04 00 4f 	movehi s0, 59
   18464:	33 04 00 4f 	movehi s1, 51
   18468:	5b 04 00 4f 	movehi s2, 59
   1846c:	00 60 1c 00 	or s0, s0, 1816
   18470:	21 90 5b 00 	or s1, s1, 5860
   18474:	42 30 1f 00 	or s2, s2, 1996
   18478:	20 00 00 88 	store_32 s1, (s0)
   1847c:	01 50 00 a6 	load_s16 s0, 20(s1)
   18480:	02 00 00 86 	store_16 s0, (s2)
   18484:	1f 00 00 f0 	ret

0000000000018488 M_DrawOptions:
   18488:	de 03 ff 05 	add_i sp, sp, -64
   1848c:	1e f3 00 88 	store_32 s24, 60(sp)
   18490:	3e e3 00 88 	store_32 s25, 56(sp)
   18494:	5e d3 00 88 	store_32 s26, 52(sp)
   18498:	7e c3 00 88 	store_32 s27, 48(sp)
   1849c:	fe b3 00 88 	store_32 ra, 44(sp)
   184a0:	01 00 00 4f 	movehi s0, 1
   184a4:	20 94 01 0f 	move s1, 101
   184a8:	3e a0 00 88 	store_32 s1, 40(sp)
   184ac:	00 44 7d 00 	or s0, s0, 8017
   184b0:	a6 9a 00 f8 	call 158360 <W_CacheLumpName>
   184b4:	20 03 00 0f 	move s25, 0
   184b8:	60 00 f0 c0 	move s3, s0
   184bc:	00 b0 01 0f 	move s0, 108
   184c0:	20 3c 00 0f 	move s1, 15
   184c4:	40 80 fc c0 	move s2, s25
   184c8:	e9 b7 00 f8 	call 188324 <V_DrawPatchDirect>
   184cc:	13 04 00 4f 	movehi s0, 51
   184d0:	73 04 00 4f 	movehi s3, 51
   184d4:	00 93 58 00 	or s24, s0, 5668
   184d8:	1b 04 00 4f 	movehi s0, 59
   184dc:	38 40 00 a6 	load_s16 s1, 16(s24)
   184e0:	00 70 1c 00 	or s0, s0, 1820
   184e4:	58 48 00 a6 	load_s16 s2, 18(s24)
   184e8:	00 00 00 a8 	load_32 s0, (s0)
   184ec:	41 bf 02 05 	add_i s26, s1, 175
   184f0:	23 70 60 00 	or s1, s3, 6172
   184f4:	62 83 00 05 	add_i s27, s2, 32
   184f8:	00 24 00 07 	mull_i s0, s0, 9
   184fc:	01 00 50 c0 	add_i s0, s1, s0
   18500:	3e a0 00 a8 	load_32 s1, 40(sp)
   18504:	91 9a 00 f8 	call 158276 <W_CacheLumpName>
   18508:	60 00 f0 c0 	move s3, s0
   1850c:	00 00 fd c0 	move s0, s26
   18510:	20 80 fd c0 	move s1, s27
   18514:	40 80 fc c0 	move s2, s25
   18518:	d5 b7 00 f8 	call 188244 <V_DrawPatchDirect>
   1851c:	1b 04 00 4f 	movehi s0, 59
   18520:	38 40 00 a6 	load_s16 s1, 16(s24)
   18524:	73 04 00 4f 	movehi s3, 51
   18528:	58 48 00 a6 	load_s16 s2, 18(s24)
   1852c:	00 b0 24 00 	or s0, s0, 2348
   18530:	41 e3 01 05 	add_i s26, s1, 120
   18534:	23 b8 60 00 	or s1, s3, 6190
   18538:	00 00 00 a8 	load_32 s0, (s0)
   1853c:	62 43 00 05 	add_i s27, s2, 16
   18540:	00 24 00 07 	mull_i s0, s0, 9
   18544:	01 00 50 c0 	add_i s0, s1, s0
   18548:	3e a0 00 a8 	load_32 s1, 40(sp)
   1854c:	7f 9a 00 f8 	call 158204 <W_CacheLumpName>
   18550:	60 00 f0 c0 	move s3, s0
   18554:	00 00 fd c0 	move s0, s26
   18558:	20 80 fd c0 	move s1, s27
   1855c:	40 80 fc c0 	move s2, s25
   18560:	c3 b7 00 f8 	call 188172 <V_DrawPatchDirect>
   18564:	3b 04 00 4f 	movehi s1, 59
   18568:	18 40 00 a6 	load_s16 s0, 16(s24)
   1856c:	58 48 00 a6 	load_s16 s2, 18(s24)
   18570:	61 e0 1f 00 	or s3, s1, 2040
   18574:	22 80 01 05 	add_i s1, s2, 96
   18578:	63 00 00 a8 	load_32 s3, (s3)
   1857c:	40 28 00 0f 	move s2, 10
   18580:	d5 06 00 f8 	call 6996 <M_DrawThermo>
   18584:	3b 04 00 4f 	movehi s1, 59
   18588:	18 40 00 a6 	load_s16 s0, 16(s24)
   1858c:	58 48 00 a6 	load_s16 s2, 18(s24)
   18590:	61 90 24 00 	or s3, s1, 2340
   18594:	22 00 01 05 	add_i s1, s2, 64
   18598:	63 00 00 a8 	load_32 s3, (s3)
   1859c:	40 24 00 0f 	move s2, 9
   185a0:	cd 06 00 f8 	call 6964 <M_DrawThermo>
   185a4:	fe b3 00 a8 	load_32 ra, 44(sp)
   185a8:	7e c3 00 a8 	load_32 s27, 48(sp)
   185ac:	5e d3 00 a8 	load_32 s26, 52(sp)
   185b0:	3e e3 00 a8 	load_32 s25, 56(sp)
   185b4:	1e f3 00 a8 	load_32 s24, 60(sp)
   185b8:	de 03 01 05 	add_i sp, sp, 64
   185bc:	1f 00 00 f0 	ret

00000000000185c0 M_ReadThis2:
   185c0:	1b 04 00 4f 	movehi s0, 59
   185c4:	33 04 00 4f 	movehi s1, 51
   185c8:	5b 04 00 4f 	movehi s2, 59
   185cc:	00 60 1c 00 	or s0, s0, 1816
   185d0:	21 f0 59 00 	or s1, s1, 5756
   185d4:	42 30 1f 00 	or s2, s2, 1996
   185d8:	20 00 00 88 	store_32 s1, (s0)
   185dc:	01 50 00 a6 	load_s16 s0, 20(s1)
   185e0:	02 00 00 86 	store_16 s0, (s2)
   185e4:	1f 00 00 f0 	ret

00000000000185e8 M_DrawReadThis1:
   185e8:	de 03 ff 05 	add_i sp, sp, -64
   185ec:	fe f3 00 88 	store_32 ra, 60(sp)
   185f0:	1b 04 00 4f 	movehi s0, 59
   185f4:	2b 04 00 4f 	movehi s1, 43
   185f8:	40 04 00 0f 	move s2, 1
   185fc:	00 20 1f 00 	or s0, s0, 1992
   18600:	21 00 40 00 	or s1, s1, 4096
   18604:	40 00 00 88 	store_32 s2, (s0)
   18608:	01 00 00 a8 	load_32 s0, (s1)
   1860c:	20 08 00 18 	cmplt_u s1, s0, 2
   18610:	01 01 00 f4 	bnz s1, 32 <M_DrawReadThis1+0x48>
   18614:	20 0c 00 10 	cmpeq_i s1, s0, 3
   18618:	c1 00 00 f4 	bnz s1, 24 <M_DrawReadThis1+0x48>
   1861c:	00 08 00 11 	cmpne_i s0, s0, 2
   18620:	a0 01 00 f4 	bnz s0, 52 <M_DrawReadThis1+0x6c>
   18624:	03 00 00 4f 	movehi s0, 3
   18628:	00 5c 08 00 	or s0, s0, 535
   1862c:	03 00 00 f6 	b 12 <M_DrawReadThis1+0x50>
   18630:	02 00 00 4f 	movehi s0, 2
   18634:	00 d0 41 00 	or s0, s0, 4212
   18638:	20 94 01 0f 	move s1, 101
   1863c:	43 9a 00 f8 	call 157964 <W_CacheLumpName>
   18640:	60 00 f0 c0 	move s3, s0
   18644:	00 00 00 0f 	move s0, 0
   18648:	20 00 f0 c0 	move s1, s0
   1864c:	40 00 f0 c0 	move s2, s0
   18650:	87 b7 00 f8 	call 187932 <V_DrawPatchDirect>
   18654:	fe f3 00 a8 	load_32 ra, 60(sp)
   18658:	de 03 01 05 	add_i sp, sp, 64
   1865c:	1f 00 00 f0 	ret

0000000000018660 M_FinishReadThis:
   18660:	1b 04 00 4f 	movehi s0, 59
   18664:	33 04 00 4f 	movehi s1, 51
   18668:	5b 04 00 4f 	movehi s2, 59
   1866c:	00 60 1c 00 	or s0, s0, 1816
   18670:	21 20 52 00 	or s1, s1, 5256
   18674:	42 30 1f 00 	or s2, s2, 1996
   18678:	20 00 00 88 	store_32 s1, (s0)
   1867c:	01 50 00 a6 	load_s16 s0, 20(s1)
   18680:	02 00 00 86 	store_16 s0, (s2)
   18684:	1f 00 00 f0 	ret

0000000000018688 M_DrawReadThis2:
   18688:	de 03 ff 05 	add_i sp, sp, -64
   1868c:	fe f3 00 88 	store_32 ra, 60(sp)
   18690:	1b 04 00 4f 	movehi s0, 59
   18694:	2b 04 00 4f 	movehi s1, 43
   18698:	40 04 00 0f 	move s2, 1
   1869c:	00 20 1f 00 	or s0, s0, 1992
   186a0:	21 00 40 00 	or s1, s1, 4096
   186a4:	40 00 00 88 	store_32 s2, (s0)
   186a8:	01 00 00 a8 	load_32 s0, (s1)
   186ac:	20 08 00 18 	cmplt_u s1, s0, 2
   186b0:	e1 00 00 f4 	bnz s1, 28 <M_DrawReadThis2+0x44>
   186b4:	00 f8 ff 05 	add_i s0, s0, -2
   186b8:	00 04 00 16 	cmpgt_u s0, s0, 1
   186bc:	a0 01 00 f4 	bnz s0, 52 <M_DrawReadThis2+0x68>
   186c0:	00 00 00 4f 	movehi s0, 0
   186c4:	00 04 3f 00 	or s0, s0, 4033
   186c8:	03 00 00 f6 	b 12 <M_DrawReadThis2+0x4c>
   186cc:	01 00 00 4f 	movehi s0, 1
   186d0:	00 a8 41 00 	or s0, s0, 4202
   186d4:	20 94 01 0f 	move s1, 101
   186d8:	1c 9a 00 f8 	call 157808 <W_CacheLumpName>
   186dc:	60 00 f0 c0 	move s3, s0
   186e0:	00 00 00 0f 	move s0, 0
   186e4:	20 00 f0 c0 	move s1, s0
   186e8:	40 00 f0 c0 	move s2, s0
   186ec:	60 b7 00 f8 	call 187776 <V_DrawPatchDirect>
   186f0:	fe f3 00 a8 	load_32 ra, 60(sp)
   186f4:	de 03 01 05 	add_i sp, sp, 64
   186f8:	1f 00 00 f0 	ret

00000000000186fc M_SfxVol:
   186fc:	de 03 ff 05 	add_i sp, sp, -64
   18700:	fe f3 00 88 	store_32 ra, 60(sp)
   18704:	60 01 00 f2 	bz s0, 44 <M_SfxVol+0x34>
   18708:	00 04 00 10 	cmpeq_i s0, s0, 1
   1870c:	40 00 00 f4 	bnz s0, 8 <M_SfxVol+0x18>
   18710:	12 00 00 f6 	b 72 <M_SfxVol+0x5c>
   18714:	14 04 00 4f 	movehi s0, 52
   18718:	20 60 53 00 	or s1, s0, 5336
   1871c:	01 00 00 a8 	load_32 s0, (s1)
   18720:	40 38 00 12 	cmpgt_i s2, s0, 14
   18724:	22 01 00 f4 	bnz s2, 36 <M_SfxVol+0x4c>
   18728:	00 04 00 05 	add_i s0, s0, 1
   1872c:	06 00 00 f6 	b 24 <M_SfxVol+0x48>
   18730:	14 04 00 4f 	movehi s0, 52
   18734:	20 60 53 00 	or s1, s0, 5336
   18738:	01 00 00 a8 	load_32 s0, (s1)
   1873c:	c0 01 00 f2 	bz s0, 56 <M_SfxVol+0x78>
   18740:	00 fc ff 05 	add_i s0, s0, -1
   18744:	01 00 00 88 	store_32 s0, (s1)
   18748:	86 cc 00 f8 	call 209432 <S_SetSfxVolume>
   1874c:	fe f3 00 a8 	load_32 ra, 60(sp)
   18750:	de 03 01 05 	add_i sp, sp, 64
   18754:	1f 00 00 f0 	ret
   18758:	14 04 00 4f 	movehi s0, 52
   1875c:	00 60 53 00 	or s0, s0, 5336
   18760:	00 00 00 a8 	load_32 s0, (s0)
   18764:	7f cc 00 f8 	call 209404 <S_SetSfxVolume>
   18768:	fe f3 00 a8 	load_32 ra, 60(sp)
   1876c:	de 03 01 05 	add_i sp, sp, 64
   18770:	1f 00 00 f0 	ret
   18774:	00 00 00 0f 	move s0, 0
   18778:	7a cc 00 f8 	call 209384 <S_SetSfxVolume>
   1877c:	fe f3 00 a8 	load_32 ra, 60(sp)
   18780:	de 03 01 05 	add_i sp, sp, 64
   18784:	1f 00 00 f0 	ret

0000000000018788 M_MusicVol:
   18788:	de 03 ff 05 	add_i sp, sp, -64
   1878c:	fe f3 00 88 	store_32 ra, 60(sp)
   18790:	60 01 00 f2 	bz s0, 44 <M_MusicVol+0x34>
   18794:	00 04 00 10 	cmpeq_i s0, s0, 1
   18798:	40 00 00 f4 	bnz s0, 8 <M_MusicVol+0x18>
   1879c:	12 00 00 f6 	b 72 <M_MusicVol+0x5c>
   187a0:	14 04 00 4f 	movehi s0, 52
   187a4:	20 70 53 00 	or s1, s0, 5340
   187a8:	01 00 00 a8 	load_32 s0, (s1)
   187ac:	40 38 00 12 	cmpgt_i s2, s0, 14
   187b0:	22 01 00 f4 	bnz s2, 36 <M_MusicVol+0x4c>
   187b4:	00 04 00 05 	add_i s0, s0, 1
   187b8:	06 00 00 f6 	b 24 <M_MusicVol+0x48>
   187bc:	14 04 00 4f 	movehi s0, 52
   187c0:	20 70 53 00 	or s1, s0, 5340
   187c4:	01 00 00 a8 	load_32 s0, (s1)
   187c8:	c0 01 00 f2 	bz s0, 56 <M_MusicVol+0x78>
   187cc:	00 fc ff 05 	add_i s0, s0, -1
   187d0:	01 00 00 88 	store_32 s0, (s1)
   187d4:	75 cc 00 f8 	call 209364 <S_SetMusicVolume>
   187d8:	fe f3 00 a8 	load_32 ra, 60(sp)
   187dc:	de 03 01 05 	add_i sp, sp, 64
   187e0:	1f 00 00 f0 	ret
   187e4:	14 04 00 4f 	movehi s0, 52
   187e8:	00 70 53 00 	or s0, s0, 5340
   187ec:	00 00 00 a8 	load_32 s0, (s0)
   187f0:	6e cc 00 f8 	call 209336 <S_SetMusicVolume>
   187f4:	fe f3 00 a8 	load_32 ra, 60(sp)
   187f8:	de 03 01 05 	add_i sp, sp, 64
   187fc:	1f 00 00 f0 	ret
   18800:	00 00 00 0f 	move s0, 0
   18804:	69 cc 00 f8 	call 209316 <S_SetMusicVolume>
   18808:	fe f3 00 a8 	load_32 ra, 60(sp)
   1880c:	de 03 01 05 	add_i sp, sp, 64
   18810:	1f 00 00 f0 	ret

0000000000018814 M_DrawSound:
   18814:	de 03 ff 05 	add_i sp, sp, -64
   18818:	1e f3 00 88 	store_32 s24, 60(sp)
   1881c:	3e e3 00 88 	store_32 s25, 56(sp)
   18820:	fe d3 00 88 	store_32 ra, 52(sp)
   18824:	01 00 00 4f 	movehi s0, 1
   18828:	20 94 01 0f 	move s1, 101
   1882c:	00 34 0e 00 	or s0, s0, 909
   18830:	c6 99 00 f8 	call 157464 <W_CacheLumpName>
   18834:	60 00 f0 c0 	move s3, s0
   18838:	00 f0 00 0f 	move s0, 60
   1883c:	20 98 00 0f 	move s1, 38
   18840:	40 00 00 0f 	move s2, 0
   18844:	0a b7 00 f8 	call 187432 <V_DrawPatchDirect>
   18848:	13 04 00 4f 	movehi s0, 51
   1884c:	34 04 00 4f 	movehi s1, 52
   18850:	00 43 00 0f 	move s24, 16
   18854:	20 93 5b 00 	or s25, s0, 5860
   18858:	61 60 53 00 	or s3, s1, 5336
   1885c:	19 40 00 a6 	load_s16 s0, 16(s25)
   18860:	59 48 00 a6 	load_s16 s2, 18(s25)
   18864:	63 00 00 a8 	load_32 s3, (s3)
   18868:	22 40 00 05 	add_i s1, s2, 16
   1886c:	40 00 fc c0 	move s2, s24
   18870:	19 06 00 f8 	call 6244 <M_DrawThermo>
   18874:	34 04 00 4f 	movehi s1, 52
   18878:	19 40 00 a6 	load_s16 s0, 16(s25)
   1887c:	59 48 00 a6 	load_s16 s2, 18(s25)
   18880:	61 70 53 00 	or s3, s1, 5340
   18884:	22 c0 00 05 	add_i s1, s2, 48
   18888:	63 00 00 a8 	load_32 s3, (s3)
   1888c:	40 00 fc c0 	move s2, s24
   18890:	11 06 00 f8 	call 6212 <M_DrawThermo>
   18894:	fe d3 00 a8 	load_32 ra, 52(sp)
   18898:	3e e3 00 a8 	load_32 s25, 56(sp)
   1889c:	1e f3 00 a8 	load_32 s24, 60(sp)
   188a0:	de 03 01 05 	add_i sp, sp, 64
   188a4:	1f 00 00 f0 	ret

00000000000188a8 M_LoadSelect:
   188a8:	de 03 fa 05 	add_i sp, sp, -384
   188ac:	1e f3 05 88 	store_32 s24, 380(sp)
   188b0:	fe e3 05 88 	store_32 ra, 376(sp)
   188b4:	00 03 f0 c0 	move s24, s0
   188b8:	01 00 00 4f 	movehi s0, 1
   188bc:	00 10 34 00 	or s0, s0, 3332
   188c0:	7d 0d 00 f8 	call 13812 <M_CheckParm>
   188c4:	e0 00 00 f2 	bz s0, 28 <M_LoadSelect+0x38>
   188c8:	00 00 00 4f 	movehi s0, 0
   188cc:	1e 23 00 88 	store_32 s24, 8(sp)
   188d0:	3e e0 01 05 	add_i s1, sp, 120
   188d4:	3e 00 00 88 	store_32 s1, (sp)
   188d8:	00 2c 51 00 	or s0, s0, 5195
   188dc:	06 00 00 f6 	b 24 <M_LoadSelect+0x4c>
   188e0:	02 00 00 4f 	movehi s0, 2
   188e4:	1e 23 00 88 	store_32 s24, 8(sp)
   188e8:	3e e0 01 05 	add_i s1, sp, 120
   188ec:	3e 00 00 88 	store_32 s1, (sp)
   188f0:	00 ec 2c 00 	or s0, s0, 2875
   188f4:	1e 10 00 88 	store_32 s0, 4(sp)
   188f8:	44 e5 00 f8 	call 234768 <sprintf>
   188fc:	1e e0 01 05 	add_i s0, sp, 120
   18900:	2d fa ff f9 	call -5964 <G_LoadGame>
   18904:	1b 04 00 4f 	movehi s0, 59
   18908:	20 00 00 0f 	move s1, 0
   1890c:	00 60 1f 00 	or s0, s0, 2008
   18910:	20 00 00 88 	store_32 s1, (s0)
   18914:	fe e3 05 a8 	load_32 ra, 376(sp)
   18918:	1e f3 05 a8 	load_32 s24, 380(sp)
   1891c:	de 03 06 05 	add_i sp, sp, 384
   18920:	1f 00 00 f0 	ret

0000000000018924 M_DrawLoad:
   18924:	de 03 ff 05 	add_i sp, sp, -64
   18928:	1e f3 00 88 	store_32 s24, 60(sp)
   1892c:	3e e3 00 88 	store_32 s25, 56(sp)
   18930:	5e d3 00 88 	store_32 s26, 52(sp)
   18934:	7e c3 00 88 	store_32 s27, 48(sp)
   18938:	fe b3 00 88 	store_32 ra, 44(sp)
   1893c:	01 00 00 4f 	movehi s0, 1
   18940:	20 94 01 0f 	move s1, 101
   18944:	00 14 0e 00 	or s0, s0, 901
   18948:	80 99 00 f8 	call 157184 <W_CacheLumpName>
   1894c:	60 00 f0 c0 	move s3, s0
   18950:	40 00 00 0f 	move s2, 0
   18954:	5e 90 00 88 	store_32 s2, 36(sp)
   18958:	00 20 01 0f 	move s0, 72
   1895c:	20 70 00 0f 	move s1, 28
   18960:	c3 b6 00 f8 	call 187148 <V_DrawPatchDirect>
   18964:	13 04 00 4f 	movehi s0, 51
   18968:	00 d3 5d 00 	or s24, s0, 6004
   1896c:	18 40 00 a6 	load_s16 s0, 16(s24)
   18970:	38 48 00 a6 	load_s16 s1, 18(s24)
   18974:	07 03 00 f8 	call 3100 <M_DrawSaveLoadBorder>
   18978:	00 0c 00 4f 	movehi s0, 96
   1897c:	38 43 00 a6 	load_s16 s25, 16(s24)
   18980:	3b 04 00 4f 	movehi s1, 59
   18984:	1e 83 00 88 	store_32 s24, 32(sp)
   18988:	58 48 00 a6 	load_s16 s2, 18(s24)
   1898c:	60 b3 02 00 	or s27, s0, 172
   18990:	5e a0 00 88 	store_32 s2, 40(sp)
   18994:	01 d3 20 00 	or s24, s1, 2100
   18998:	3e 70 00 88 	store_32 s1, 28(sp)
   1899c:	3e 63 00 88 	store_32 s25, 24(sp)
   189a0:	18 00 00 a0 	load_u8 s0, (s24)
   189a4:	a0 04 00 f2 	bz s0, 148 <M_DrawLoad+0x114>
   189a8:	04 00 00 f6 	b 16 <M_DrawLoad+0x94>
   189ac:	39 13 00 05 	add_i s25, s25, 4
   189b0:	18 00 00 a0 	load_u8 s0, (s24)
   189b4:	20 04 00 f2 	bz s0, 132 <M_DrawLoad+0x114>
   189b8:	20 28 00 11 	cmpne_i s1, s0, 10
   189bc:	18 07 00 05 	add_i s24, s24, 1
   189c0:	41 00 00 f4 	bnz s1, 8 <M_DrawLoad+0xa4>
   189c4:	16 00 00 f6 	b 88 <M_DrawLoad+0xf8>
   189c8:	00 00 d0 c1 	sext_8 s0, s0
   189cc:	46 e7 00 f8 	call 236824 <toupper>
   189d0:	00 7c ff 05 	add_i s0, s0, -33
   189d4:	20 fc 00 18 	cmplt_u s1, s0, 63
   189d8:	41 00 00 f4 	bnz s1, 8 <M_DrawLoad+0xbc>
   189dc:	f4 ff ff f7 	b -48 <M_DrawLoad+0x88>
   189e0:	00 08 00 0b 	shl s0, s0, 2
   189e4:	1b 00 50 c0 	add_i s0, s27, s0
   189e8:	60 00 00 a8 	load_32 s3, (s0)
   189ec:	03 00 00 a6 	load_s16 s0, (s3)
   189f0:	59 03 50 c0 	add_i s26, s25, s0
   189f4:	1a 00 05 12 	cmpgt_i s0, s26, 320
   189f8:	00 02 00 f4 	bnz s0, 64 <M_DrawLoad+0x114>
   189fc:	00 80 fc c0 	move s0, s25
   18a00:	3e a0 00 a8 	load_32 s1, 40(sp)
   18a04:	5e 90 00 a8 	load_32 s2, 36(sp)
   18a08:	99 b6 00 f8 	call 186980 <V_DrawPatchDirect>
   18a0c:	20 03 fd c0 	move s25, s26
   18a10:	18 00 00 a0 	load_u8 s0, (s24)
   18a14:	20 01 00 f2 	bz s0, 36 <M_DrawLoad+0x114>
   18a18:	e8 ff ff f7 	b -96 <M_DrawLoad+0x94>
   18a1c:	1e a0 00 a8 	load_32 s0, 40(sp)
   18a20:	00 30 00 05 	add_i s0, s0, 12
   18a24:	1e a0 00 88 	store_32 s0, 40(sp)
   18a28:	3e 63 00 a8 	load_32 s25, 24(sp)
   18a2c:	18 00 00 a0 	load_u8 s0, (s24)
   18a30:	40 00 00 f2 	bz s0, 8 <M_DrawLoad+0x114>
   18a34:	e1 ff ff f7 	b -124 <M_DrawLoad+0x94>
   18a38:	1e 83 00 a8 	load_32 s24, 32(sp)
   18a3c:	18 40 00 a6 	load_s16 s0, 16(s24)
   18a40:	38 48 00 a6 	load_s16 s1, 18(s24)
   18a44:	21 40 00 05 	add_i s1, s1, 16
   18a48:	d2 02 00 f8 	call 2888 <M_DrawSaveLoadBorder>
   18a4c:	58 40 00 a6 	load_s16 s2, 16(s24)
   18a50:	18 48 00 a6 	load_s16 s0, 18(s24)
   18a54:	3e 70 00 a8 	load_32 s1, 28(sp)
   18a58:	00 40 00 05 	add_i s0, s0, 16
   18a5c:	21 d0 20 00 	or s1, s1, 2100
   18a60:	3e 70 00 88 	store_32 s1, 28(sp)
   18a64:	1e a0 00 88 	store_32 s0, 40(sp)
   18a68:	00 00 00 0f 	move s0, 0
   18a6c:	1e 90 00 88 	store_32 s0, 36(sp)
   18a70:	21 63 00 05 	add_i s25, s1, 24
   18a74:	5e 60 00 88 	store_32 s2, 24(sp)
   18a78:	00 03 f1 c0 	move s24, s2
   18a7c:	19 00 00 a0 	load_u8 s0, (s25)
   18a80:	a0 04 00 f2 	bz s0, 148 <M_DrawLoad+0x1f0>
   18a84:	0c 00 00 f6 	b 48 <M_DrawLoad+0x190>
   18a88:	1e a0 00 a8 	load_32 s0, 40(sp)
   18a8c:	00 30 00 05 	add_i s0, s0, 12
   18a90:	1e a0 00 88 	store_32 s0, 40(sp)
   18a94:	5e 60 00 a8 	load_32 s2, 24(sp)
   18a98:	00 03 f1 c0 	move s24, s2
   18a9c:	19 00 00 a0 	load_u8 s0, (s25)
   18aa0:	a0 03 00 f2 	bz s0, 116 <M_DrawLoad+0x1f0>
   18aa4:	04 00 00 f6 	b 16 <M_DrawLoad+0x190>
   18aa8:	18 13 00 05 	add_i s24, s24, 4
   18aac:	19 00 00 a0 	load_u8 s0, (s25)
   18ab0:	20 03 00 f2 	bz s0, 100 <M_DrawLoad+0x1f0>
   18ab4:	20 28 00 11 	cmpne_i s1, s0, 10
   18ab8:	39 07 00 05 	add_i s25, s25, 1
   18abc:	41 00 00 f4 	bnz s1, 8 <M_DrawLoad+0x1a0>
   18ac0:	f2 ff ff f7 	b -56 <M_DrawLoad+0x164>
   18ac4:	00 00 d0 c1 	sext_8 s0, s0
   18ac8:	07 e7 00 f8 	call 236572 <toupper>
   18acc:	00 7c ff 05 	add_i s0, s0, -33
   18ad0:	20 f8 00 16 	cmpgt_u s1, s0, 62
   18ad4:	a1 fe ff f5 	bnz s1, -44 <M_DrawLoad+0x184>
   18ad8:	00 08 00 0b 	shl s0, s0, 2
   18adc:	1b 00 50 c0 	add_i s0, s27, s0
   18ae0:	60 00 00 a8 	load_32 s3, (s0)
   18ae4:	03 00 00 a6 	load_s16 s0, (s3)
   18ae8:	58 03 50 c0 	add_i s26, s24, s0
   18aec:	1a 00 05 12 	cmpgt_i s0, s26, 320
   18af0:	20 01 00 f4 	bnz s0, 36 <M_DrawLoad+0x1f0>
   18af4:	00 00 fc c0 	move s0, s24
   18af8:	3e a0 00 a8 	load_32 s1, 40(sp)
   18afc:	5e 90 00 a8 	load_32 s2, 36(sp)
   18b00:	5b b6 00 f8 	call 186732 <V_DrawPatchDirect>
   18b04:	00 03 fd c0 	move s24, s26
   18b08:	19 00 00 a0 	load_u8 s0, (s25)
   18b0c:	40 00 00 f2 	bz s0, 8 <M_DrawLoad+0x1f0>
   18b10:	e9 ff ff f7 	b -92 <M_DrawLoad+0x190>
   18b14:	1e 83 00 a8 	load_32 s24, 32(sp)
   18b18:	18 40 00 a6 	load_s16 s0, 16(s24)
   18b1c:	38 48 00 a6 	load_s16 s1, 18(s24)
   18b20:	21 80 00 05 	add_i s1, s1, 32
   18b24:	9b 02 00 f8 	call 2668 <M_DrawSaveLoadBorder>
   18b28:	58 40 00 a6 	load_s16 s2, 16(s24)
   18b2c:	18 48 00 a6 	load_s16 s0, 18(s24)
   18b30:	3e 70 00 a8 	load_32 s1, 28(sp)
   18b34:	00 80 00 05 	add_i s0, s0, 32
   18b38:	1e a0 00 88 	store_32 s0, 40(sp)
   18b3c:	21 c3 00 05 	add_i s25, s1, 48
   18b40:	00 00 00 0f 	move s0, 0
   18b44:	1e 90 00 88 	store_32 s0, 36(sp)
   18b48:	5e 60 00 88 	store_32 s2, 24(sp)
   18b4c:	00 03 f1 c0 	move s24, s2
   18b50:	19 00 00 a0 	load_u8 s0, (s25)
   18b54:	a0 04 00 f2 	bz s0, 148 <M_DrawLoad+0x2c4>
   18b58:	0c 00 00 f6 	b 48 <M_DrawLoad+0x264>
   18b5c:	1e a0 00 a8 	load_32 s0, 40(sp)
   18b60:	00 30 00 05 	add_i s0, s0, 12
   18b64:	1e a0 00 88 	store_32 s0, 40(sp)
   18b68:	5e 60 00 a8 	load_32 s2, 24(sp)
   18b6c:	00 03 f1 c0 	move s24, s2
   18b70:	19 00 00 a0 	load_u8 s0, (s25)
   18b74:	a0 03 00 f2 	bz s0, 116 <M_DrawLoad+0x2c4>
   18b78:	04 00 00 f6 	b 16 <M_DrawLoad+0x264>
   18b7c:	18 13 00 05 	add_i s24, s24, 4
   18b80:	19 00 00 a0 	load_u8 s0, (s25)
   18b84:	20 03 00 f2 	bz s0, 100 <M_DrawLoad+0x2c4>
   18b88:	20 28 00 11 	cmpne_i s1, s0, 10
   18b8c:	39 07 00 05 	add_i s25, s25, 1
   18b90:	41 00 00 f4 	bnz s1, 8 <M_DrawLoad+0x274>
   18b94:	f2 ff ff f7 	b -56 <M_DrawLoad+0x238>
   18b98:	00 00 d0 c1 	sext_8 s0, s0
   18b9c:	d2 e6 00 f8 	call 236360 <toupper>
   18ba0:	00 7c ff 05 	add_i s0, s0, -33
   18ba4:	20 f8 00 16 	cmpgt_u s1, s0, 62
   18ba8:	a1 fe ff f5 	bnz s1, -44 <M_DrawLoad+0x258>
   18bac:	00 08 00 0b 	shl s0, s0, 2
   18bb0:	1b 00 50 c0 	add_i s0, s27, s0
   18bb4:	60 00 00 a8 	load_32 s3, (s0)
   18bb8:	03 00 00 a6 	load_s16 s0, (s3)
   18bbc:	58 03 50 c0 	add_i s26, s24, s0
   18bc0:	1a 00 05 12 	cmpgt_i s0, s26, 320
   18bc4:	20 01 00 f4 	bnz s0, 36 <M_DrawLoad+0x2c4>
   18bc8:	00 00 fc c0 	move s0, s24
   18bcc:	3e a0 00 a8 	load_32 s1, 40(sp)
   18bd0:	5e 90 00 a8 	load_32 s2, 36(sp)
   18bd4:	26 b6 00 f8 	call 186520 <V_DrawPatchDirect>
   18bd8:	00 03 fd c0 	move s24, s26
   18bdc:	19 00 00 a0 	load_u8 s0, (s25)
   18be0:	40 00 00 f2 	bz s0, 8 <M_DrawLoad+0x2c4>
   18be4:	e9 ff ff f7 	b -92 <M_DrawLoad+0x264>
   18be8:	1e 83 00 a8 	load_32 s24, 32(sp)
   18bec:	18 40 00 a6 	load_s16 s0, 16(s24)
   18bf0:	38 48 00 a6 	load_s16 s1, 18(s24)
   18bf4:	21 c0 00 05 	add_i s1, s1, 48
   18bf8:	66 02 00 f8 	call 2456 <M_DrawSaveLoadBorder>
   18bfc:	58 40 00 a6 	load_s16 s2, 16(s24)
   18c00:	18 48 00 a6 	load_s16 s0, 18(s24)
   18c04:	3e 70 00 a8 	load_32 s1, 28(sp)
   18c08:	00 c0 00 05 	add_i s0, s0, 48
   18c0c:	1e a0 00 88 	store_32 s0, 40(sp)
   18c10:	21 23 01 05 	add_i s25, s1, 72
   18c14:	00 00 00 0f 	move s0, 0
   18c18:	1e 90 00 88 	store_32 s0, 36(sp)
   18c1c:	5e 60 00 88 	store_32 s2, 24(sp)
   18c20:	00 03 f1 c0 	move s24, s2
   18c24:	19 00 00 a0 	load_u8 s0, (s25)
   18c28:	a0 04 00 f2 	bz s0, 148 <M_DrawLoad+0x398>
   18c2c:	0c 00 00 f6 	b 48 <M_DrawLoad+0x338>
   18c30:	1e a0 00 a8 	load_32 s0, 40(sp)
   18c34:	00 30 00 05 	add_i s0, s0, 12
   18c38:	1e a0 00 88 	store_32 s0, 40(sp)
   18c3c:	5e 60 00 a8 	load_32 s2, 24(sp)
   18c40:	00 03 f1 c0 	move s24, s2
   18c44:	19 00 00 a0 	load_u8 s0, (s25)
   18c48:	a0 03 00 f2 	bz s0, 116 <M_DrawLoad+0x398>
   18c4c:	04 00 00 f6 	b 16 <M_DrawLoad+0x338>
   18c50:	18 13 00 05 	add_i s24, s24, 4
   18c54:	19 00 00 a0 	load_u8 s0, (s25)
   18c58:	20 03 00 f2 	bz s0, 100 <M_DrawLoad+0x398>
   18c5c:	20 28 00 11 	cmpne_i s1, s0, 10
   18c60:	39 07 00 05 	add_i s25, s25, 1
   18c64:	41 00 00 f4 	bnz s1, 8 <M_DrawLoad+0x348>
   18c68:	f2 ff ff f7 	b -56 <M_DrawLoad+0x30c>
   18c6c:	00 00 d0 c1 	sext_8 s0, s0
   18c70:	9d e6 00 f8 	call 236148 <toupper>
   18c74:	00 7c ff 05 	add_i s0, s0, -33
   18c78:	20 f8 00 16 	cmpgt_u s1, s0, 62
   18c7c:	a1 fe ff f5 	bnz s1, -44 <M_DrawLoad+0x32c>
   18c80:	00 08 00 0b 	shl s0, s0, 2
   18c84:	1b 00 50 c0 	add_i s0, s27, s0
   18c88:	60 00 00 a8 	load_32 s3, (s0)
   18c8c:	03 00 00 a6 	load_s16 s0, (s3)
   18c90:	58 03 50 c0 	add_i s26, s24, s0
   18c94:	1a 00 05 12 	cmpgt_i s0, s26, 320
   18c98:	20 01 00 f4 	bnz s0, 36 <M_DrawLoad+0x398>
   18c9c:	00 00 fc c0 	move s0, s24
   18ca0:	3e a0 00 a8 	load_32 s1, 40(sp)
   18ca4:	5e 90 00 a8 	load_32 s2, 36(sp)
   18ca8:	f1 b5 00 f8 	call 186308 <V_DrawPatchDirect>
   18cac:	00 03 fd c0 	move s24, s26
   18cb0:	19 00 00 a0 	load_u8 s0, (s25)
   18cb4:	40 00 00 f2 	bz s0, 8 <M_DrawLoad+0x398>
   18cb8:	e9 ff ff f7 	b -92 <M_DrawLoad+0x338>
   18cbc:	1e 83 00 a8 	load_32 s24, 32(sp)
   18cc0:	18 40 00 a6 	load_s16 s0, 16(s24)
   18cc4:	38 48 00 a6 	load_s16 s1, 18(s24)
   18cc8:	21 00 01 05 	add_i s1, s1, 64
   18ccc:	31 02 00 f8 	call 2244 <M_DrawSaveLoadBorder>
   18cd0:	58 40 00 a6 	load_s16 s2, 16(s24)
   18cd4:	18 48 00 a6 	load_s16 s0, 18(s24)
   18cd8:	3e 70 00 a8 	load_32 s1, 28(sp)
   18cdc:	00 00 01 05 	add_i s0, s0, 64
   18ce0:	1e a0 00 88 	store_32 s0, 40(sp)
   18ce4:	21 83 01 05 	add_i s25, s1, 96
   18ce8:	00 00 00 0f 	move s0, 0
   18cec:	1e 90 00 88 	store_32 s0, 36(sp)
   18cf0:	5e 60 00 88 	store_32 s2, 24(sp)
   18cf4:	00 03 f1 c0 	move s24, s2
   18cf8:	19 00 00 a0 	load_u8 s0, (s25)
   18cfc:	a0 04 00 f2 	bz s0, 148 <M_DrawLoad+0x46c>
   18d00:	0c 00 00 f6 	b 48 <M_DrawLoad+0x40c>
   18d04:	1e a0 00 a8 	load_32 s0, 40(sp)
   18d08:	00 30 00 05 	add_i s0, s0, 12
   18d0c:	1e a0 00 88 	store_32 s0, 40(sp)
   18d10:	5e 60 00 a8 	load_32 s2, 24(sp)
   18d14:	00 03 f1 c0 	move s24, s2
   18d18:	19 00 00 a0 	load_u8 s0, (s25)
   18d1c:	a0 03 00 f2 	bz s0, 116 <M_DrawLoad+0x46c>
   18d20:	04 00 00 f6 	b 16 <M_DrawLoad+0x40c>
   18d24:	18 13 00 05 	add_i s24, s24, 4
   18d28:	19 00 00 a0 	load_u8 s0, (s25)
   18d2c:	20 03 00 f2 	bz s0, 100 <M_DrawLoad+0x46c>
   18d30:	20 28 00 11 	cmpne_i s1, s0, 10
   18d34:	39 07 00 05 	add_i s25, s25, 1
   18d38:	41 00 00 f4 	bnz s1, 8 <M_DrawLoad+0x41c>
   18d3c:	f2 ff ff f7 	b -56 <M_DrawLoad+0x3e0>
   18d40:	00 00 d0 c1 	sext_8 s0, s0
   18d44:	68 e6 00 f8 	call 235936 <toupper>
   18d48:	00 7c ff 05 	add_i s0, s0, -33
   18d4c:	20 f8 00 16 	cmpgt_u s1, s0, 62
   18d50:	a1 fe ff f5 	bnz s1, -44 <M_DrawLoad+0x400>
   18d54:	00 08 00 0b 	shl s0, s0, 2
   18d58:	1b 00 50 c0 	add_i s0, s27, s0
   18d5c:	60 00 00 a8 	load_32 s3, (s0)
   18d60:	03 00 00 a6 	load_s16 s0, (s3)
   18d64:	58 03 50 c0 	add_i s26, s24, s0
   18d68:	1a 00 05 12 	cmpgt_i s0, s26, 320
   18d6c:	20 01 00 f4 	bnz s0, 36 <M_DrawLoad+0x46c>
   18d70:	00 00 fc c0 	move s0, s24
   18d74:	3e a0 00 a8 	load_32 s1, 40(sp)
   18d78:	5e 90 00 a8 	load_32 s2, 36(sp)
   18d7c:	bc b5 00 f8 	call 186096 <V_DrawPatchDirect>
   18d80:	00 03 fd c0 	move s24, s26
   18d84:	19 00 00 a0 	load_u8 s0, (s25)
   18d88:	40 00 00 f2 	bz s0, 8 <M_DrawLoad+0x46c>
   18d8c:	e9 ff ff f7 	b -92 <M_DrawLoad+0x40c>
   18d90:	1e 83 00 a8 	load_32 s24, 32(sp)
   18d94:	18 40 00 a6 	load_s16 s0, 16(s24)
   18d98:	38 48 00 a6 	load_s16 s1, 18(s24)
   18d9c:	21 40 01 05 	add_i s1, s1, 80
   18da0:	fc 01 00 f8 	call 2032 <M_DrawSaveLoadBorder>
   18da4:	58 40 00 a6 	load_s16 s2, 16(s24)
   18da8:	18 48 00 a6 	load_s16 s0, 18(s24)
   18dac:	3e 70 00 a8 	load_32 s1, 28(sp)
   18db0:	00 40 01 05 	add_i s0, s0, 80
   18db4:	1e a0 00 88 	store_32 s0, 40(sp)
   18db8:	21 e3 01 05 	add_i s25, s1, 120
   18dbc:	00 00 00 0f 	move s0, 0
   18dc0:	1e 90 00 88 	store_32 s0, 36(sp)
   18dc4:	5e 60 00 88 	store_32 s2, 24(sp)
   18dc8:	00 03 f1 c0 	move s24, s2
   18dcc:	19 00 00 a0 	load_u8 s0, (s25)
   18dd0:	a0 04 00 f2 	bz s0, 148 <M_DrawLoad+0x540>
   18dd4:	0c 00 00 f6 	b 48 <M_DrawLoad+0x4e0>
   18dd8:	1e a0 00 a8 	load_32 s0, 40(sp)
   18ddc:	00 30 00 05 	add_i s0, s0, 12
   18de0:	1e a0 00 88 	store_32 s0, 40(sp)
   18de4:	5e 60 00 a8 	load_32 s2, 24(sp)
   18de8:	00 03 f1 c0 	move s24, s2
   18dec:	19 00 00 a0 	load_u8 s0, (s25)
   18df0:	a0 03 00 f2 	bz s0, 116 <M_DrawLoad+0x540>
   18df4:	04 00 00 f6 	b 16 <M_DrawLoad+0x4e0>
   18df8:	18 13 00 05 	add_i s24, s24, 4
   18dfc:	19 00 00 a0 	load_u8 s0, (s25)
   18e00:	20 03 00 f2 	bz s0, 100 <M_DrawLoad+0x540>
   18e04:	20 28 00 11 	cmpne_i s1, s0, 10
   18e08:	39 07 00 05 	add_i s25, s25, 1
   18e0c:	41 00 00 f4 	bnz s1, 8 <M_DrawLoad+0x4f0>
   18e10:	f2 ff ff f7 	b -56 <M_DrawLoad+0x4b4>
   18e14:	00 00 d0 c1 	sext_8 s0, s0
   18e18:	33 e6 00 f8 	call 235724 <toupper>
   18e1c:	00 7c ff 05 	add_i s0, s0, -33
   18e20:	20 f8 00 16 	cmpgt_u s1, s0, 62
   18e24:	a1 fe ff f5 	bnz s1, -44 <M_DrawLoad+0x4d4>
   18e28:	00 08 00 0b 	shl s0, s0, 2
   18e2c:	1b 00 50 c0 	add_i s0, s27, s0
   18e30:	60 00 00 a8 	load_32 s3, (s0)
   18e34:	03 00 00 a6 	load_s16 s0, (s3)
   18e38:	58 03 50 c0 	add_i s26, s24, s0
   18e3c:	1a 00 05 12 	cmpgt_i s0, s26, 320
   18e40:	20 01 00 f4 	bnz s0, 36 <M_DrawLoad+0x540>
   18e44:	00 00 fc c0 	move s0, s24
   18e48:	3e a0 00 a8 	load_32 s1, 40(sp)
   18e4c:	5e 90 00 a8 	load_32 s2, 36(sp)
   18e50:	87 b5 00 f8 	call 185884 <V_DrawPatchDirect>
   18e54:	00 03 fd c0 	move s24, s26
   18e58:	19 00 00 a0 	load_u8 s0, (s25)
   18e5c:	40 00 00 f2 	bz s0, 8 <M_DrawLoad+0x540>
   18e60:	e9 ff ff f7 	b -92 <M_DrawLoad+0x4e0>
   18e64:	fe b3 00 a8 	load_32 ra, 44(sp)
   18e68:	7e c3 00 a8 	load_32 s27, 48(sp)
   18e6c:	5e d3 00 a8 	load_32 s26, 52(sp)
   18e70:	3e e3 00 a8 	load_32 s25, 56(sp)
   18e74:	1e f3 00 a8 	load_32 s24, 60(sp)
   18e78:	de 03 01 05 	add_i sp, sp, 64
   18e7c:	1f 00 00 f0 	ret

0000000000018e80 M_SaveSelect:
   18e80:	de 03 ff 05 	add_i sp, sp, -64
   18e84:	1e f3 00 88 	store_32 s24, 60(sp)
   18e88:	fe e3 00 88 	store_32 ra, 56(sp)
   18e8c:	3b 04 00 4f 	movehi s1, 59
   18e90:	5b 04 00 4f 	movehi s2, 59
   18e94:	9b 04 00 4f 	movehi s4, 59
   18e98:	21 c0 20 00 	or s1, s1, 2096
   18e9c:	42 b0 20 00 	or s2, s2, 2092
   18ea0:	60 04 00 0f 	move s3, 1
   18ea4:	61 00 00 88 	store_32 s3, (s1)
   18ea8:	24 d0 20 00 	or s1, s4, 2100
   18eac:	02 00 00 88 	store_32 s0, (s2)
   18eb0:	00 60 00 07 	mull_i s0, s0, 24
   18eb4:	01 03 50 c0 	add_i s24, s1, s0
   18eb8:	1b 04 00 4f 	movehi s0, 59
   18ebc:	20 00 fc c0 	move s1, s24
   18ec0:	00 50 20 00 	or s0, s0, 2068
   18ec4:	42 e6 00 f8 	call 235784 <strcpy>
   18ec8:	02 00 00 4f 	movehi s0, 2
   18ecc:	20 bc 54 00 	or s1, s0, 5423
   18ed0:	00 00 fc c0 	move s0, s24
   18ed4:	b6 e5 00 f8 	call 235224 <strcmp>
   18ed8:	60 00 00 f4 	bnz s0, 12 <M_SaveSelect+0x64>
   18edc:	00 00 00 0f 	move s0, 0
   18ee0:	18 00 00 82 	store_8 s0, (s24)
   18ee4:	00 00 fc c0 	move s0, s24
   18ee8:	2e e6 00 f8 	call 235704 <strlen>
   18eec:	3b 04 00 4f 	movehi s1, 59
   18ef0:	21 40 20 00 	or s1, s1, 2064
   18ef4:	01 00 00 88 	store_32 s0, (s1)
   18ef8:	fe e3 00 a8 	load_32 ra, 56(sp)
   18efc:	1e f3 00 a8 	load_32 s24, 60(sp)
   18f00:	de 03 01 05 	add_i sp, sp, 64
   18f04:	1f 00 00 f0 	ret

0000000000018f08 M_DrawSave:
   18f08:	de 03 ff 05 	add_i sp, sp, -64
   18f0c:	1e f3 00 88 	store_32 s24, 60(sp)
   18f10:	3e e3 00 88 	store_32 s25, 56(sp)
   18f14:	5e d3 00 88 	store_32 s26, 52(sp)
   18f18:	7e c3 00 88 	store_32 s27, 48(sp)
   18f1c:	fe b3 00 88 	store_32 ra, 44(sp)
   18f20:	00 00 00 4f 	movehi s0, 0
   18f24:	20 94 01 0f 	move s1, 101
   18f28:	00 14 15 00 	or s0, s0, 1349
   18f2c:	07 98 00 f8 	call 155676 <W_CacheLumpName>
   18f30:	60 00 f0 c0 	move s3, s0
   18f34:	40 00 00 0f 	move s2, 0
   18f38:	5e 90 00 88 	store_32 s2, 36(sp)
   18f3c:	00 20 01 0f 	move s0, 72
   18f40:	20 70 00 0f 	move s1, 28
   18f44:	4a b5 00 f8 	call 185640 <V_DrawPatchDirect>
   18f48:	13 04 00 4f 	movehi s0, 51
   18f4c:	00 d3 5d 00 	or s24, s0, 6004
   18f50:	18 40 00 a6 	load_s16 s0, 16(s24)
   18f54:	38 48 00 a6 	load_s16 s1, 18(s24)
   18f58:	8e 01 00 f8 	call 1592 <M_DrawSaveLoadBorder>
   18f5c:	3b 04 00 4f 	movehi s1, 59
   18f60:	58 40 00 a6 	load_s16 s2, 16(s24)
   18f64:	1e 73 00 88 	store_32 s24, 28(sp)
   18f68:	00 0c 00 4f 	movehi s0, 96
   18f6c:	38 4b 00 a6 	load_s16 s25, 18(s24)
   18f70:	61 d3 20 00 	or s27, s1, 2100
   18f74:	3e 80 00 88 	store_32 s1, 32(sp)
   18f78:	00 b0 02 00 	or s0, s0, 172
   18f7c:	1e a0 00 88 	store_32 s0, 40(sp)
   18f80:	5e 60 00 88 	store_32 s2, 24(sp)
   18f84:	00 03 f1 c0 	move s24, s2
   18f88:	1b 00 00 a0 	load_u8 s0, (s27)
   18f8c:	a0 04 00 f2 	bz s0, 148 <M_DrawSave+0x118>
   18f90:	0a 00 00 f6 	b 40 <M_DrawSave+0xb0>
   18f94:	39 33 00 05 	add_i s25, s25, 12
   18f98:	5e 60 00 a8 	load_32 s2, 24(sp)
   18f9c:	00 03 f1 c0 	move s24, s2
   18fa0:	1b 00 00 a0 	load_u8 s0, (s27)
   18fa4:	e0 03 00 f2 	bz s0, 124 <M_DrawSave+0x118>
   18fa8:	04 00 00 f6 	b 16 <M_DrawSave+0xb0>
   18fac:	18 13 00 05 	add_i s24, s24, 4
   18fb0:	1b 00 00 a0 	load_u8 s0, (s27)
   18fb4:	60 03 00 f2 	bz s0, 108 <M_DrawSave+0x118>
   18fb8:	20 28 00 11 	cmpne_i s1, s0, 10
   18fbc:	7b 07 00 05 	add_i s27, s27, 1
   18fc0:	41 00 00 f4 	bnz s1, 8 <M_DrawSave+0xc0>
   18fc4:	f4 ff ff f7 	b -48 <M_DrawSave+0x8c>
   18fc8:	00 00 d0 c1 	sext_8 s0, s0
   18fcc:	c6 e5 00 f8 	call 235288 <toupper>
   18fd0:	00 7c ff 05 	add_i s0, s0, -33
   18fd4:	20 fc 00 18 	cmplt_u s1, s0, 63
   18fd8:	41 00 00 f4 	bnz s1, 8 <M_DrawSave+0xd8>
   18fdc:	f4 ff ff f7 	b -48 <M_DrawSave+0xa4>
   18fe0:	3e a0 00 a8 	load_32 s1, 40(sp)
   18fe4:	00 08 00 0b 	shl s0, s0, 2
   18fe8:	01 00 50 c0 	add_i s0, s1, s0
   18fec:	60 00 00 a8 	load_32 s3, (s0)
   18ff0:	03 00 00 a6 	load_s16 s0, (s3)
   18ff4:	58 03 50 c0 	add_i s26, s24, s0
   18ff8:	1a 00 05 12 	cmpgt_i s0, s26, 320
   18ffc:	20 01 00 f4 	bnz s0, 36 <M_DrawSave+0x118>
   19000:	00 00 fc c0 	move s0, s24
   19004:	20 80 fc c0 	move s1, s25
   19008:	5e 90 00 a8 	load_32 s2, 36(sp)
   1900c:	18 b5 00 f8 	call 185440 <V_DrawPatchDirect>
   19010:	00 03 fd c0 	move s24, s26
   19014:	1b 00 00 a0 	load_u8 s0, (s27)
   19018:	40 00 00 f2 	bz s0, 8 <M_DrawSave+0x118>
   1901c:	e7 ff ff f7 	b -100 <M_DrawSave+0xb0>
   19020:	1e 73 00 a8 	load_32 s24, 28(sp)
   19024:	18 40 00 a6 	load_s16 s0, 16(s24)
   19028:	38 48 00 a6 	load_s16 s1, 18(s24)
   1902c:	21 40 00 05 	add_i s1, s1, 16
   19030:	58 01 00 f8 	call 1376 <M_DrawSaveLoadBorder>
   19034:	38 43 00 a6 	load_s16 s25, 16(s24)
   19038:	18 48 00 a6 	load_s16 s0, 18(s24)
   1903c:	3e 80 00 a8 	load_32 s1, 32(sp)
   19040:	00 43 00 05 	add_i s24, s0, 16
   19044:	21 d0 20 00 	or s1, s1, 2100
   19048:	3e 80 00 88 	store_32 s1, 32(sp)
   1904c:	00 00 00 0f 	move s0, 0
   19050:	1e 90 00 88 	store_32 s0, 36(sp)
   19054:	3e 63 00 88 	store_32 s25, 24(sp)
   19058:	61 63 00 05 	add_i s27, s1, 24
   1905c:	1b 00 00 a0 	load_u8 s0, (s27)
   19060:	60 04 00 f2 	bz s0, 140 <M_DrawSave+0x1e4>
   19064:	04 00 00 f6 	b 16 <M_DrawSave+0x16c>
   19068:	39 13 00 05 	add_i s25, s25, 4
   1906c:	1b 00 00 a0 	load_u8 s0, (s27)
   19070:	e0 03 00 f2 	bz s0, 124 <M_DrawSave+0x1e4>
   19074:	20 28 00 11 	cmpne_i s1, s0, 10
   19078:	7b 07 00 05 	add_i s27, s27, 1
   1907c:	41 00 00 f4 	bnz s1, 8 <M_DrawSave+0x17c>
   19080:	16 00 00 f6 	b 88 <M_DrawSave+0x1d0>
   19084:	00 00 d0 c1 	sext_8 s0, s0
   19088:	97 e5 00 f8 	call 235100 <toupper>
   1908c:	00 7c ff 05 	add_i s0, s0, -33
   19090:	20 f8 00 16 	cmpgt_u s1, s0, 62
   19094:	a1 fe ff f5 	bnz s1, -44 <M_DrawSave+0x160>
   19098:	3e a0 00 a8 	load_32 s1, 40(sp)
   1909c:	00 08 00 0b 	shl s0, s0, 2
   190a0:	01 00 50 c0 	add_i s0, s1, s0
   190a4:	60 00 00 a8 	load_32 s3, (s0)
   190a8:	03 00 00 a6 	load_s16 s0, (s3)
   190ac:	59 03 50 c0 	add_i s26, s25, s0
   190b0:	1a 00 05 12 	cmpgt_i s0, s26, 320
   190b4:	c0 01 00 f4 	bnz s0, 56 <M_DrawSave+0x1e4>
   190b8:	00 80 fc c0 	move s0, s25
   190bc:	20 00 fc c0 	move s1, s24
   190c0:	5e 90 00 a8 	load_32 s2, 36(sp)
   190c4:	ea b4 00 f8 	call 185256 <V_DrawPatchDirect>
   190c8:	20 03 fd c0 	move s25, s26
   190cc:	1b 00 00 a0 	load_u8 s0, (s27)
   190d0:	e0 00 00 f2 	bz s0, 28 <M_DrawSave+0x1e4>
   190d4:	e8 ff ff f7 	b -96 <M_DrawSave+0x16c>
   190d8:	18 33 00 05 	add_i s24, s24, 12
   190dc:	3e 63 00 a8 	load_32 s25, 24(sp)
   190e0:	1b 00 00 a0 	load_u8 s0, (s27)
   190e4:	40 00 00 f2 	bz s0, 8 <M_DrawSave+0x1e4>
   190e8:	e3 ff ff f7 	b -116 <M_DrawSave+0x16c>
   190ec:	1e 73 00 a8 	load_32 s24, 28(sp)
   190f0:	18 40 00 a6 	load_s16 s0, 16(s24)
   190f4:	38 48 00 a6 	load_s16 s1, 18(s24)
   190f8:	21 80 00 05 	add_i s1, s1, 32
   190fc:	25 01 00 f8 	call 1172 <M_DrawSaveLoadBorder>
   19100:	38 43 00 a6 	load_s16 s25, 16(s24)
   19104:	18 48 00 a6 	load_s16 s0, 18(s24)
   19108:	3e 80 00 a8 	load_32 s1, 32(sp)
   1910c:	00 83 00 05 	add_i s24, s0, 32
   19110:	61 c3 00 05 	add_i s27, s1, 48
   19114:	00 00 00 0f 	move s0, 0
   19118:	1e 90 00 88 	store_32 s0, 36(sp)
   1911c:	3e 63 00 88 	store_32 s25, 24(sp)
   19120:	1b 00 00 a0 	load_u8 s0, (s27)
   19124:	60 04 00 f2 	bz s0, 140 <M_DrawSave+0x2a8>
   19128:	04 00 00 f6 	b 16 <M_DrawSave+0x230>
   1912c:	39 13 00 05 	add_i s25, s25, 4
   19130:	1b 00 00 a0 	load_u8 s0, (s27)
   19134:	e0 03 00 f2 	bz s0, 124 <M_DrawSave+0x2a8>
   19138:	20 28 00 11 	cmpne_i s1, s0, 10
   1913c:	7b 07 00 05 	add_i s27, s27, 1
   19140:	41 00 00 f4 	bnz s1, 8 <M_DrawSave+0x240>
   19144:	16 00 00 f6 	b 88 <M_DrawSave+0x294>
   19148:	00 00 d0 c1 	sext_8 s0, s0
   1914c:	66 e5 00 f8 	call 234904 <toupper>
   19150:	00 7c ff 05 	add_i s0, s0, -33
   19154:	20 f8 00 16 	cmpgt_u s1, s0, 62
   19158:	a1 fe ff f5 	bnz s1, -44 <M_DrawSave+0x224>
   1915c:	3e a0 00 a8 	load_32 s1, 40(sp)
   19160:	00 08 00 0b 	shl s0, s0, 2
   19164:	01 00 50 c0 	add_i s0, s1, s0
   19168:	60 00 00 a8 	load_32 s3, (s0)
   1916c:	03 00 00 a6 	load_s16 s0, (s3)
   19170:	59 03 50 c0 	add_i s26, s25, s0
   19174:	1a 00 05 12 	cmpgt_i s0, s26, 320
   19178:	c0 01 00 f4 	bnz s0, 56 <M_DrawSave+0x2a8>
   1917c:	00 80 fc c0 	move s0, s25
   19180:	20 00 fc c0 	move s1, s24
   19184:	5e 90 00 a8 	load_32 s2, 36(sp)
   19188:	b9 b4 00 f8 	call 185060 <V_DrawPatchDirect>
   1918c:	20 03 fd c0 	move s25, s26
   19190:	1b 00 00 a0 	load_u8 s0, (s27)
   19194:	e0 00 00 f2 	bz s0, 28 <M_DrawSave+0x2a8>
   19198:	e8 ff ff f7 	b -96 <M_DrawSave+0x230>
   1919c:	18 33 00 05 	add_i s24, s24, 12
   191a0:	3e 63 00 a8 	load_32 s25, 24(sp)
   191a4:	1b 00 00 a0 	load_u8 s0, (s27)
   191a8:	40 00 00 f2 	bz s0, 8 <M_DrawSave+0x2a8>
   191ac:	e3 ff ff f7 	b -116 <M_DrawSave+0x230>
   191b0:	1e 73 00 a8 	load_32 s24, 28(sp)
   191b4:	18 40 00 a6 	load_s16 s0, 16(s24)
   191b8:	38 48 00 a6 	load_s16 s1, 18(s24)
   191bc:	21 c0 00 05 	add_i s1, s1, 48
   191c0:	f4 00 00 f8 	call 976 <M_DrawSaveLoadBorder>
   191c4:	38 43 00 a6 	load_s16 s25, 16(s24)
   191c8:	18 48 00 a6 	load_s16 s0, 18(s24)
   191cc:	3e 80 00 a8 	load_32 s1, 32(sp)
   191d0:	00 c3 00 05 	add_i s24, s0, 48
   191d4:	61 23 01 05 	add_i s27, s1, 72
   191d8:	00 00 00 0f 	move s0, 0
   191dc:	1e 90 00 88 	store_32 s0, 36(sp)
   191e0:	3e 63 00 88 	store_32 s25, 24(sp)
   191e4:	1b 00 00 a0 	load_u8 s0, (s27)
   191e8:	60 04 00 f2 	bz s0, 140 <M_DrawSave+0x36c>
   191ec:	04 00 00 f6 	b 16 <M_DrawSave+0x2f4>
   191f0:	39 13 00 05 	add_i s25, s25, 4
   191f4:	1b 00 00 a0 	load_u8 s0, (s27)
   191f8:	e0 03 00 f2 	bz s0, 124 <M_DrawSave+0x36c>
   191fc:	20 28 00 11 	cmpne_i s1, s0, 10
   19200:	7b 07 00 05 	add_i s27, s27, 1
   19204:	41 00 00 f4 	bnz s1, 8 <M_DrawSave+0x304>
   19208:	16 00 00 f6 	b 88 <M_DrawSave+0x358>
   1920c:	00 00 d0 c1 	sext_8 s0, s0
   19210:	35 e5 00 f8 	call 234708 <toupper>
   19214:	00 7c ff 05 	add_i s0, s0, -33
   19218:	20 f8 00 16 	cmpgt_u s1, s0, 62
   1921c:	a1 fe ff f5 	bnz s1, -44 <M_DrawSave+0x2e8>
   19220:	3e a0 00 a8 	load_32 s1, 40(sp)
   19224:	00 08 00 0b 	shl s0, s0, 2
   19228:	01 00 50 c0 	add_i s0, s1, s0
   1922c:	60 00 00 a8 	load_32 s3, (s0)
   19230:	03 00 00 a6 	load_s16 s0, (s3)
   19234:	59 03 50 c0 	add_i s26, s25, s0
   19238:	1a 00 05 12 	cmpgt_i s0, s26, 320
   1923c:	c0 01 00 f4 	bnz s0, 56 <M_DrawSave+0x36c>
   19240:	00 80 fc c0 	move s0, s25
   19244:	20 00 fc c0 	move s1, s24
   19248:	5e 90 00 a8 	load_32 s2, 36(sp)
   1924c:	88 b4 00 f8 	call 184864 <V_DrawPatchDirect>
   19250:	20 03 fd c0 	move s25, s26
   19254:	1b 00 00 a0 	load_u8 s0, (s27)
   19258:	e0 00 00 f2 	bz s0, 28 <M_DrawSave+0x36c>
   1925c:	e8 ff ff f7 	b -96 <M_DrawSave+0x2f4>
   19260:	18 33 00 05 	add_i s24, s24, 12
   19264:	3e 63 00 a8 	load_32 s25, 24(sp)
   19268:	1b 00 00 a0 	load_u8 s0, (s27)
   1926c:	40 00 00 f2 	bz s0, 8 <M_DrawSave+0x36c>
   19270:	e3 ff ff f7 	b -116 <M_DrawSave+0x2f4>
   19274:	1e 73 00 a8 	load_32 s24, 28(sp)
   19278:	18 40 00 a6 	load_s16 s0, 16(s24)
   1927c:	38 48 00 a6 	load_s16 s1, 18(s24)
   19280:	21 00 01 05 	add_i s1, s1, 64
   19284:	c3 00 00 f8 	call 780 <M_DrawSaveLoadBorder>
   19288:	38 43 00 a6 	load_s16 s25, 16(s24)
   1928c:	18 48 00 a6 	load_s16 s0, 18(s24)
   19290:	3e 80 00 a8 	load_32 s1, 32(sp)
   19294:	00 03 01 05 	add_i s24, s0, 64
   19298:	61 83 01 05 	add_i s27, s1, 96
   1929c:	00 00 00 0f 	move s0, 0
   192a0:	1e 90 00 88 	store_32 s0, 36(sp)
   192a4:	3e 63 00 88 	store_32 s25, 24(sp)
   192a8:	1b 00 00 a0 	load_u8 s0, (s27)
   192ac:	60 04 00 f2 	bz s0, 140 <M_DrawSave+0x430>
   192b0:	04 00 00 f6 	b 16 <M_DrawSave+0x3b8>
   192b4:	39 13 00 05 	add_i s25, s25, 4
   192b8:	1b 00 00 a0 	load_u8 s0, (s27)
   192bc:	e0 03 00 f2 	bz s0, 124 <M_DrawSave+0x430>
   192c0:	20 28 00 11 	cmpne_i s1, s0, 10
   192c4:	7b 07 00 05 	add_i s27, s27, 1
   192c8:	41 00 00 f4 	bnz s1, 8 <M_DrawSave+0x3c8>
   192cc:	16 00 00 f6 	b 88 <M_DrawSave+0x41c>
   192d0:	00 00 d0 c1 	sext_8 s0, s0
   192d4:	04 e5 00 f8 	call 234512 <toupper>
   192d8:	00 7c ff 05 	add_i s0, s0, -33
   192dc:	20 f8 00 16 	cmpgt_u s1, s0, 62
   192e0:	a1 fe ff f5 	bnz s1, -44 <M_DrawSave+0x3ac>
   192e4:	3e a0 00 a8 	load_32 s1, 40(sp)
   192e8:	00 08 00 0b 	shl s0, s0, 2
   192ec:	01 00 50 c0 	add_i s0, s1, s0
   192f0:	60 00 00 a8 	load_32 s3, (s0)
   192f4:	03 00 00 a6 	load_s16 s0, (s3)
   192f8:	59 03 50 c0 	add_i s26, s25, s0
   192fc:	1a 00 05 12 	cmpgt_i s0, s26, 320
   19300:	c0 01 00 f4 	bnz s0, 56 <M_DrawSave+0x430>
   19304:	00 80 fc c0 	move s0, s25
   19308:	20 00 fc c0 	move s1, s24
   1930c:	5e 90 00 a8 	load_32 s2, 36(sp)
   19310:	57 b4 00 f8 	call 184668 <V_DrawPatchDirect>
   19314:	20 03 fd c0 	move s25, s26
   19318:	1b 00 00 a0 	load_u8 s0, (s27)
   1931c:	e0 00 00 f2 	bz s0, 28 <M_DrawSave+0x430>
   19320:	e8 ff ff f7 	b -96 <M_DrawSave+0x3b8>
   19324:	18 33 00 05 	add_i s24, s24, 12
   19328:	3e 63 00 a8 	load_32 s25, 24(sp)
   1932c:	1b 00 00 a0 	load_u8 s0, (s27)
   19330:	40 00 00 f2 	bz s0, 8 <M_DrawSave+0x430>
   19334:	e3 ff ff f7 	b -116 <M_DrawSave+0x3b8>
   19338:	1e 73 00 a8 	load_32 s24, 28(sp)
   1933c:	18 40 00 a6 	load_s16 s0, 16(s24)
   19340:	38 48 00 a6 	load_s16 s1, 18(s24)
   19344:	21 40 01 05 	add_i s1, s1, 80
   19348:	92 00 00 f8 	call 584 <M_DrawSaveLoadBorder>
   1934c:	58 40 00 a6 	load_s16 s2, 16(s24)
   19350:	20 03 00 0f 	move s25, 0
   19354:	18 48 00 a6 	load_s16 s0, 18(s24)
   19358:	3e 80 00 a8 	load_32 s1, 32(sp)
   1935c:	00 40 01 05 	add_i s0, s0, 80
   19360:	1e 90 00 88 	store_32 s0, 36(sp)
   19364:	61 e3 01 05 	add_i s27, s1, 120
   19368:	5e 60 00 88 	store_32 s2, 24(sp)
   1936c:	00 03 f1 c0 	move s24, s2
   19370:	1b 00 00 a0 	load_u8 s0, (s27)
   19374:	c0 04 00 f2 	bz s0, 152 <M_DrawSave+0x504>
   19378:	0c 00 00 f6 	b 48 <M_DrawSave+0x4a0>
   1937c:	1e 90 00 a8 	load_32 s0, 36(sp)
   19380:	00 30 00 05 	add_i s0, s0, 12
   19384:	1e 90 00 88 	store_32 s0, 36(sp)
   19388:	5e 60 00 a8 	load_32 s2, 24(sp)
   1938c:	00 03 f1 c0 	move s24, s2
   19390:	1b 00 00 a0 	load_u8 s0, (s27)
   19394:	c0 03 00 f2 	bz s0, 120 <M_DrawSave+0x504>
   19398:	04 00 00 f6 	b 16 <M_DrawSave+0x4a0>
   1939c:	18 13 00 05 	add_i s24, s24, 4
   193a0:	1b 00 00 a0 	load_u8 s0, (s27)
   193a4:	40 03 00 f2 	bz s0, 104 <M_DrawSave+0x504>
   193a8:	20 28 00 11 	cmpne_i s1, s0, 10
   193ac:	7b 07 00 05 	add_i s27, s27, 1
   193b0:	41 00 00 f4 	bnz s1, 8 <M_DrawSave+0x4b0>
   193b4:	f2 ff ff f7 	b -56 <M_DrawSave+0x474>
   193b8:	00 00 d0 c1 	sext_8 s0, s0
   193bc:	ca e4 00 f8 	call 234280 <toupper>
   193c0:	00 7c ff 05 	add_i s0, s0, -33
   193c4:	20 f8 00 16 	cmpgt_u s1, s0, 62
   193c8:	a1 fe ff f5 	bnz s1, -44 <M_DrawSave+0x494>
   193cc:	3e a0 00 a8 	load_32 s1, 40(sp)
   193d0:	00 08 00 0b 	shl s0, s0, 2
   193d4:	01 00 50 c0 	add_i s0, s1, s0
   193d8:	60 00 00 a8 	load_32 s3, (s0)
   193dc:	03 00 00 a6 	load_s16 s0, (s3)
   193e0:	58 03 50 c0 	add_i s26, s24, s0
   193e4:	1a 00 05 12 	cmpgt_i s0, s26, 320
   193e8:	20 01 00 f4 	bnz s0, 36 <M_DrawSave+0x504>
   193ec:	00 00 fc c0 	move s0, s24
   193f0:	3e 90 00 a8 	load_32 s1, 36(sp)
   193f4:	40 80 fc c0 	move s2, s25
   193f8:	1d b4 00 f8 	call 184436 <V_DrawPatchDirect>
   193fc:	00 03 fd c0 	move s24, s26
   19400:	1b 00 00 a0 	load_u8 s0, (s27)
   19404:	40 00 00 f2 	bz s0, 8 <M_DrawSave+0x504>
   19408:	e8 ff ff f7 	b -96 <M_DrawSave+0x4a0>
   1940c:	1b 04 00 4f 	movehi s0, 59
   19410:	00 c0 20 00 	or s0, s0, 2096
   19414:	00 00 00 a8 	load_32 s0, (s0)
   19418:	c0 0a 00 f2 	bz s0, 344 <M_DrawSave+0x668>
   1941c:	1b 04 00 4f 	movehi s0, 59
   19420:	00 b0 20 00 	or s0, s0, 2092
   19424:	40 00 00 a8 	load_32 s2, (s0)
   19428:	3e 80 00 a8 	load_32 s1, 32(sp)
   1942c:	02 60 00 07 	mull_i s0, s2, 24
   19430:	01 00 50 c0 	add_i s0, s1, s0
   19434:	40 03 00 a0 	load_u8 s26, (s0)
   19438:	da 03 00 f2 	bz s26, 120 <M_DrawSave+0x5a8>
   1943c:	5e 60 00 88 	store_32 s2, 24(sp)
   19440:	1e 80 00 88 	store_32 s0, 32(sp)
   19444:	d7 e4 00 f8 	call 234332 <strlen>
   19448:	00 03 00 0f 	move s24, 0
   1944c:	1e 90 00 88 	store_32 s0, 36(sp)
   19450:	60 13 00 0f 	move s27, 4
   19454:	20 03 fc c0 	move s25, s24
   19458:	04 00 00 f6 	b 16 <M_DrawSave+0x560>
   1945c:	1e 80 00 a8 	load_32 s0, 32(sp)
   19460:	00 00 5c c0 	add_i s0, s0, s24
   19464:	40 03 00 a0 	load_u8 s26, (s0)
   19468:	00 00 dd c1 	sext_8 s0, s26
   1946c:	9e e4 00 f8 	call 234104 <toupper>
   19470:	20 7c ff 05 	add_i s1, s0, -33
   19474:	00 80 fd c0 	move s0, s27
   19478:	41 f8 00 16 	cmpgt_u s2, s1, 62
   1947c:	c2 00 00 f4 	bnz s2, 24 <M_DrawSave+0x58c>
   19480:	01 08 00 0b 	shl s0, s1, 2
   19484:	3e a0 00 a8 	load_32 s1, 40(sp)
   19488:	01 00 50 c0 	add_i s0, s1, s0
   1948c:	00 00 00 a8 	load_32 s0, (s0)
   19490:	00 00 00 a6 	load_s16 s0, (s0)
   19494:	3e 90 00 a8 	load_32 s1, 36(sp)
   19498:	18 07 00 05 	add_i s24, s24, 1
   1949c:	39 03 50 c0 	add_i s25, s25, s0
   194a0:	38 80 70 c1 	cmpge_u s1, s24, s1
   194a4:	41 00 00 f4 	bnz s1, 8 <M_DrawSave+0x5a4>
   194a8:	ed ff ff f7 	b -76 <M_DrawSave+0x554>
   194ac:	5e 60 00 a8 	load_32 s2, 24(sp)
   194b0:	3e 70 00 a8 	load_32 s1, 28(sp)
   194b4:	60 00 00 4f 	movehi s3, 0
   194b8:	42 10 00 0b 	shl s2, s2, 4
   194bc:	63 cf 36 00 	or s27, s3, 3507
   194c0:	01 40 00 a6 	load_s16 s0, 16(s1)
   194c4:	21 48 00 a6 	load_s16 s1, 18(s1)
   194c8:	39 03 50 c0 	add_i s25, s25, s0
   194cc:	02 83 50 c0 	add_i s24, s2, s1
   194d0:	00 00 00 0f 	move s0, 0
   194d4:	1e 90 00 88 	store_32 s0, 36(sp)
   194d8:	3e 83 00 88 	store_32 s25, 32(sp)
   194dc:	1b 00 00 a0 	load_u8 s0, (s27)
   194e0:	80 04 00 f2 	bz s0, 144 <M_DrawSave+0x668>
   194e4:	04 00 00 f6 	b 16 <M_DrawSave+0x5ec>
   194e8:	39 13 00 05 	add_i s25, s25, 4
   194ec:	1b 00 00 a0 	load_u8 s0, (s27)
   194f0:	00 04 00 f2 	bz s0, 128 <M_DrawSave+0x668>
   194f4:	20 28 00 11 	cmpne_i s1, s0, 10
   194f8:	7b 07 00 05 	add_i s27, s27, 1
   194fc:	41 00 00 f4 	bnz s1, 8 <M_DrawSave+0x5fc>
   19500:	17 00 00 f6 	b 92 <M_DrawSave+0x654>
   19504:	00 00 d0 c1 	sext_8 s0, s0
   19508:	77 e4 00 f8 	call 233948 <toupper>
   1950c:	00 7c ff 05 	add_i s0, s0, -33
   19510:	20 fc 00 18 	cmplt_u s1, s0, 63
   19514:	41 00 00 f4 	bnz s1, 8 <M_DrawSave+0x614>
   19518:	f4 ff ff f7 	b -48 <M_DrawSave+0x5e0>
   1951c:	3e a0 00 a8 	load_32 s1, 40(sp)
   19520:	00 08 00 0b 	shl s0, s0, 2
   19524:	01 00 50 c0 	add_i s0, s1, s0
   19528:	60 00 00 a8 	load_32 s3, (s0)
   1952c:	03 00 00 a6 	load_s16 s0, (s3)
   19530:	59 03 50 c0 	add_i s26, s25, s0
   19534:	1a 00 05 12 	cmpgt_i s0, s26, 320
   19538:	c0 01 00 f4 	bnz s0, 56 <M_DrawSave+0x668>
   1953c:	00 80 fc c0 	move s0, s25
   19540:	20 00 fc c0 	move s1, s24
   19544:	5e 90 00 a8 	load_32 s2, 36(sp)
   19548:	c9 b3 00 f8 	call 184100 <V_DrawPatchDirect>
   1954c:	20 03 fd c0 	move s25, s26
   19550:	1b 00 00 a0 	load_u8 s0, (s27)
   19554:	e0 00 00 f2 	bz s0, 28 <M_DrawSave+0x668>
   19558:	e7 ff ff f7 	b -100 <M_DrawSave+0x5ec>
   1955c:	18 33 00 05 	add_i s24, s24, 12
   19560:	3e 83 00 a8 	load_32 s25, 32(sp)
   19564:	1b 00 00 a0 	load_u8 s0, (s27)
   19568:	40 00 00 f2 	bz s0, 8 <M_DrawSave+0x668>
   1956c:	e2 ff ff f7 	b -120 <M_DrawSave+0x5ec>
   19570:	fe b3 00 a8 	load_32 ra, 44(sp)
   19574:	7e c3 00 a8 	load_32 s27, 48(sp)
   19578:	5e d3 00 a8 	load_32 s26, 52(sp)
   1957c:	3e e3 00 a8 	load_32 s25, 56(sp)
   19580:	1e f3 00 a8 	load_32 s24, 60(sp)
   19584:	de 03 01 05 	add_i sp, sp, 64
   19588:	1f 00 00 f0 	ret

000000000001958c M_ReadSaveStrings:
   1958c:	1f 00 00 f0 	ret

0000000000019590 M_DrawSaveLoadBorder:
   19590:	de 03 ff 05 	add_i sp, sp, -64
   19594:	1e f3 00 88 	store_32 s24, 60(sp)
   19598:	3e e3 00 88 	store_32 s25, 56(sp)
   1959c:	5e d3 00 88 	store_32 s26, 52(sp)
   195a0:	7e c3 00 88 	store_32 s27, 48(sp)
   195a4:	fe b3 00 88 	store_32 ra, 44(sp)
   195a8:	60 03 f0 c0 	move s27, s0
   195ac:	02 00 00 4f 	movehi s0, 2
   195b0:	20 97 01 0f 	move s25, 101
   195b4:	01 1f 00 05 	add_i s24, s1, 7
   195b8:	1e 93 00 88 	store_32 s24, 36(sp)
   195bc:	00 6c 04 00 	or s0, s0, 283
   195c0:	20 80 fc c0 	move s1, s25
   195c4:	5b e3 ff 05 	add_i s26, s27, -8
   195c8:	60 96 00 f8 	call 153984 <W_CacheLumpName>
   195cc:	60 00 f0 c0 	move s3, s0
   195d0:	00 00 fd c0 	move s0, s26
   195d4:	40 00 00 0f 	move s2, 0
   195d8:	20 00 fc c0 	move s1, s24
   195dc:	00 03 f1 c0 	move s24, s2
   195e0:	1e 73 00 88 	store_32 s24, 28(sp)
   195e4:	a2 b3 00 f8 	call 183944 <V_DrawPatchDirect>
   195e8:	00 00 00 4f 	movehi s0, 0
   195ec:	00 f0 79 00 	or s0, s0, 7804
   195f0:	1e 60 00 88 	store_32 s0, 24(sp)
   195f4:	20 80 fc c0 	move s1, s25
   195f8:	40 83 fc c0 	move s26, s25
   195fc:	53 96 00 f8 	call 153932 <W_CacheLumpName>
   19600:	60 00 f0 c0 	move s3, s0
   19604:	7e 83 00 88 	store_32 s27, 32(sp)
   19608:	00 80 fd c0 	move s0, s27
   1960c:	3e 93 00 a8 	load_32 s25, 36(sp)
   19610:	20 80 fc c0 	move s1, s25
   19614:	40 00 fc c0 	move s2, s24
   19618:	95 b3 00 f8 	call 183892 <V_DrawPatchDirect>
   1961c:	1e 63 00 a8 	load_32 s24, 24(sp)
   19620:	7b 23 00 05 	add_i s27, s27, 8
   19624:	00 00 fc c0 	move s0, s24
   19628:	20 00 fd c0 	move s1, s26
   1962c:	5e a3 00 88 	store_32 s26, 40(sp)
   19630:	46 96 00 f8 	call 153880 <W_CacheLumpName>
   19634:	60 00 f0 c0 	move s3, s0
   19638:	00 80 fd c0 	move s0, s27
   1963c:	20 80 fc c0 	move s1, s25
   19640:	7e 73 00 a8 	load_32 s27, 28(sp)
   19644:	40 80 fd c0 	move s2, s27
   19648:	89 b3 00 f8 	call 183844 <V_DrawPatchDirect>
   1964c:	3e 83 00 a8 	load_32 s25, 32(sp)
   19650:	19 40 00 05 	add_i s0, s25, 16
   19654:	1e 50 00 88 	store_32 s0, 20(sp)
   19658:	00 00 fc c0 	move s0, s24
   1965c:	20 00 fd c0 	move s1, s26
   19660:	3a 96 00 f8 	call 153832 <W_CacheLumpName>
   19664:	60 00 f0 c0 	move s3, s0
   19668:	1e 50 00 a8 	load_32 s0, 20(sp)
   1966c:	5e 93 00 a8 	load_32 s26, 36(sp)
   19670:	20 00 fd c0 	move s1, s26
   19674:	40 80 fd c0 	move s2, s27
   19678:	7d b3 00 f8 	call 183796 <V_DrawPatchDirect>
   1967c:	19 60 00 05 	add_i s0, s25, 24
   19680:	1e 50 00 88 	store_32 s0, 20(sp)
   19684:	00 00 fc c0 	move s0, s24
   19688:	20 03 fc c0 	move s25, s24
   1968c:	3e a0 00 a8 	load_32 s1, 40(sp)
   19690:	2e 96 00 f8 	call 153784 <W_CacheLumpName>
   19694:	60 00 f0 c0 	move s3, s0
   19698:	1e 50 00 a8 	load_32 s0, 20(sp)
   1969c:	20 00 fd c0 	move s1, s26
   196a0:	40 80 fd c0 	move s2, s27
   196a4:	00 83 fd c0 	move s24, s27
   196a8:	71 b3 00 f8 	call 183748 <V_DrawPatchDirect>
   196ac:	1e 80 00 a8 	load_32 s0, 32(sp)
   196b0:	60 83 00 05 	add_i s27, s0, 32
   196b4:	00 80 fc c0 	move s0, s25
   196b8:	3e a0 00 a8 	load_32 s1, 40(sp)
   196bc:	23 96 00 f8 	call 153740 <W_CacheLumpName>
   196c0:	60 00 f0 c0 	move s3, s0
   196c4:	00 80 fd c0 	move s0, s27
   196c8:	20 00 fd c0 	move s1, s26
   196cc:	60 03 fd c0 	move s27, s26
   196d0:	40 00 fc c0 	move s2, s24
   196d4:	66 b3 00 f8 	call 183704 <V_DrawPatchDirect>
   196d8:	3e 83 00 a8 	load_32 s25, 32(sp)
   196dc:	19 a0 00 05 	add_i s0, s25, 40
   196e0:	1e 50 00 88 	store_32 s0, 20(sp)
   196e4:	1e 63 00 a8 	load_32 s24, 24(sp)
   196e8:	00 00 fc c0 	move s0, s24
   196ec:	5e a3 00 a8 	load_32 s26, 40(sp)
   196f0:	20 00 fd c0 	move s1, s26
   196f4:	15 96 00 f8 	call 153684 <W_CacheLumpName>
   196f8:	60 00 f0 c0 	move s3, s0
   196fc:	1e 50 00 a8 	load_32 s0, 20(sp)
   19700:	20 80 fd c0 	move s1, s27
   19704:	7e 73 00 a8 	load_32 s27, 28(sp)
   19708:	40 80 fd c0 	move s2, s27
   1970c:	58 b3 00 f8 	call 183648 <V_DrawPatchDirect>
   19710:	19 c0 00 05 	add_i s0, s25, 48
   19714:	1e 50 00 88 	store_32 s0, 20(sp)
   19718:	00 00 fc c0 	move s0, s24
   1971c:	20 00 fd c0 	move s1, s26
   19720:	0a 96 00 f8 	call 153640 <W_CacheLumpName>
   19724:	60 00 f0 c0 	move s3, s0
   19728:	1e 50 00 a8 	load_32 s0, 20(sp)
   1972c:	5e 93 00 a8 	load_32 s26, 36(sp)
   19730:	20 00 fd c0 	move s1, s26
   19734:	40 80 fd c0 	move s2, s27
   19738:	4d b3 00 f8 	call 183604 <V_DrawPatchDirect>
   1973c:	19 e0 00 05 	add_i s0, s25, 56
   19740:	1e 50 00 88 	store_32 s0, 20(sp)
   19744:	00 00 fc c0 	move s0, s24
   19748:	3e a0 00 a8 	load_32 s1, 40(sp)
   1974c:	ff 95 00 f8 	call 153596 <W_CacheLumpName>
   19750:	60 00 f0 c0 	move s3, s0
   19754:	1e 50 00 a8 	load_32 s0, 20(sp)
   19758:	20 00 fd c0 	move s1, s26
   1975c:	40 80 fd c0 	move s2, s27
   19760:	43 b3 00 f8 	call 183564 <V_DrawPatchDirect>
   19764:	19 00 01 05 	add_i s0, s25, 64
   19768:	1e 50 00 88 	store_32 s0, 20(sp)
   1976c:	00 00 fc c0 	move s0, s24
   19770:	5e a3 00 a8 	load_32 s26, 40(sp)
   19774:	20 00 fd c0 	move s1, s26
   19778:	f4 95 00 f8 	call 153552 <W_CacheLumpName>
   1977c:	60 00 f0 c0 	move s3, s0
   19780:	1e 50 00 a8 	load_32 s0, 20(sp)
   19784:	3e 90 00 a8 	load_32 s1, 36(sp)
   19788:	40 80 fd c0 	move s2, s27
   1978c:	38 b3 00 f8 	call 183520 <V_DrawPatchDirect>
   19790:	19 20 01 05 	add_i s0, s25, 72
   19794:	1e 50 00 88 	store_32 s0, 20(sp)
   19798:	00 00 fc c0 	move s0, s24
   1979c:	20 00 fd c0 	move s1, s26
   197a0:	ea 95 00 f8 	call 153512 <W_CacheLumpName>
   197a4:	60 00 f0 c0 	move s3, s0
   197a8:	1e 50 00 a8 	load_32 s0, 20(sp)
   197ac:	5e 93 00 a8 	load_32 s26, 36(sp)
   197b0:	20 00 fd c0 	move s1, s26
   197b4:	40 80 fd c0 	move s2, s27
   197b8:	2d b3 00 f8 	call 183476 <V_DrawPatchDirect>
   197bc:	19 40 01 05 	add_i s0, s25, 80
   197c0:	1e 50 00 88 	store_32 s0, 20(sp)
   197c4:	00 00 fc c0 	move s0, s24
   197c8:	3e a0 00 a8 	load_32 s1, 40(sp)
   197cc:	df 95 00 f8 	call 153468 <W_CacheLumpName>
   197d0:	60 00 f0 c0 	move s3, s0
   197d4:	1e 50 00 a8 	load_32 s0, 20(sp)
   197d8:	20 00 fd c0 	move s1, s26
   197dc:	40 80 fd c0 	move s2, s27
   197e0:	23 b3 00 f8 	call 183436 <V_DrawPatchDirect>
   197e4:	19 60 01 05 	add_i s0, s25, 88
   197e8:	1e 50 00 88 	store_32 s0, 20(sp)
   197ec:	00 00 fc c0 	move s0, s24
   197f0:	5e a3 00 a8 	load_32 s26, 40(sp)
   197f4:	20 00 fd c0 	move s1, s26
   197f8:	d4 95 00 f8 	call 153424 <W_CacheLumpName>
   197fc:	60 00 f0 c0 	move s3, s0
   19800:	1e 50 00 a8 	load_32 s0, 20(sp)
   19804:	3e 90 00 a8 	load_32 s1, 36(sp)
   19808:	40 80 fd c0 	move s2, s27
   1980c:	18 b3 00 f8 	call 183392 <V_DrawPatchDirect>
   19810:	19 80 01 05 	add_i s0, s25, 96
   19814:	1e 50 00 88 	store_32 s0, 20(sp)
   19818:	00 00 fc c0 	move s0, s24
   1981c:	20 00 fd c0 	move s1, s26
   19820:	ca 95 00 f8 	call 153384 <W_CacheLumpName>
   19824:	60 00 f0 c0 	move s3, s0
   19828:	1e 50 00 a8 	load_32 s0, 20(sp)
   1982c:	5e 93 00 a8 	load_32 s26, 36(sp)
   19830:	20 00 fd c0 	move s1, s26
   19834:	40 80 fd c0 	move s2, s27
   19838:	0d b3 00 f8 	call 183348 <V_DrawPatchDirect>
   1983c:	19 a0 01 05 	add_i s0, s25, 104
   19840:	1e 50 00 88 	store_32 s0, 20(sp)
   19844:	00 00 fc c0 	move s0, s24
   19848:	20 03 fc c0 	move s25, s24
   1984c:	7e a3 00 a8 	load_32 s27, 40(sp)
   19850:	20 80 fd c0 	move s1, s27
   19854:	bd 95 00 f8 	call 153332 <W_CacheLumpName>
   19858:	60 00 f0 c0 	move s3, s0
   1985c:	1e 50 00 a8 	load_32 s0, 20(sp)
   19860:	20 00 fd c0 	move s1, s26
   19864:	00 03 fd c0 	move s24, s26
   19868:	5e 70 00 a8 	load_32 s2, 28(sp)
   1986c:	00 b3 00 f8 	call 183296 <V_DrawPatchDirect>
   19870:	1e 80 00 a8 	load_32 s0, 32(sp)
   19874:	00 c0 01 05 	add_i s0, s0, 112
   19878:	1e 50 00 88 	store_32 s0, 20(sp)
   1987c:	00 80 fc c0 	move s0, s25
   19880:	40 83 fd c0 	move s26, s27
   19884:	20 00 fd c0 	move s1, s26
   19888:	b0 95 00 f8 	call 153280 <W_CacheLumpName>
   1988c:	60 00 f0 c0 	move s3, s0
   19890:	1e 50 00 a8 	load_32 s0, 20(sp)
   19894:	20 00 fc c0 	move s1, s24
   19898:	7e 73 00 a8 	load_32 s27, 28(sp)
   1989c:	40 80 fd c0 	move s2, s27
   198a0:	f3 b2 00 f8 	call 183244 <V_DrawPatchDirect>
   198a4:	3e 83 00 a8 	load_32 s25, 32(sp)
   198a8:	19 e0 01 05 	add_i s0, s25, 120
   198ac:	1e 50 00 88 	store_32 s0, 20(sp)
   198b0:	1e 63 00 a8 	load_32 s24, 24(sp)
   198b4:	00 00 fc c0 	move s0, s24
   198b8:	20 00 fd c0 	move s1, s26
   198bc:	a3 95 00 f8 	call 153228 <W_CacheLumpName>
   198c0:	60 00 f0 c0 	move s3, s0
   198c4:	1e 50 00 a8 	load_32 s0, 20(sp)
   198c8:	5e 93 00 a8 	load_32 s26, 36(sp)
   198cc:	20 00 fd c0 	move s1, s26
   198d0:	40 80 fd c0 	move s2, s27
   198d4:	e6 b2 00 f8 	call 183192 <V_DrawPatchDirect>
   198d8:	19 00 02 05 	add_i s0, s25, 128
   198dc:	1e 50 00 88 	store_32 s0, 20(sp)
   198e0:	00 00 fc c0 	move s0, s24
   198e4:	3e a0 00 a8 	load_32 s1, 40(sp)
   198e8:	98 95 00 f8 	call 153184 <W_CacheLumpName>
   198ec:	60 00 f0 c0 	move s3, s0
   198f0:	1e 50 00 a8 	load_32 s0, 20(sp)
   198f4:	20 00 fd c0 	move s1, s26
   198f8:	40 80 fd c0 	move s2, s27
   198fc:	dc b2 00 f8 	call 183152 <V_DrawPatchDirect>
   19900:	19 20 02 05 	add_i s0, s25, 136
   19904:	1e 50 00 88 	store_32 s0, 20(sp)
   19908:	00 00 fc c0 	move s0, s24
   1990c:	5e a3 00 a8 	load_32 s26, 40(sp)
   19910:	20 00 fd c0 	move s1, s26
   19914:	8d 95 00 f8 	call 153140 <W_CacheLumpName>
   19918:	60 00 f0 c0 	move s3, s0
   1991c:	1e 50 00 a8 	load_32 s0, 20(sp)
   19920:	3e 90 00 a8 	load_32 s1, 36(sp)
   19924:	40 80 fd c0 	move s2, s27
   19928:	d1 b2 00 f8 	call 183108 <V_DrawPatchDirect>
   1992c:	19 40 02 05 	add_i s0, s25, 144
   19930:	1e 50 00 88 	store_32 s0, 20(sp)
   19934:	00 00 fc c0 	move s0, s24
   19938:	20 00 fd c0 	move s1, s26
   1993c:	83 95 00 f8 	call 153100 <W_CacheLumpName>
   19940:	60 00 f0 c0 	move s3, s0
   19944:	1e 50 00 a8 	load_32 s0, 20(sp)
   19948:	5e 93 00 a8 	load_32 s26, 36(sp)
   1994c:	20 00 fd c0 	move s1, s26
   19950:	40 80 fd c0 	move s2, s27
   19954:	c6 b2 00 f8 	call 183064 <V_DrawPatchDirect>
   19958:	19 60 02 05 	add_i s0, s25, 152
   1995c:	1e 50 00 88 	store_32 s0, 20(sp)
   19960:	00 00 fc c0 	move s0, s24
   19964:	3e a0 00 a8 	load_32 s1, 40(sp)
   19968:	78 95 00 f8 	call 153056 <W_CacheLumpName>
   1996c:	60 00 f0 c0 	move s3, s0
   19970:	1e 50 00 a8 	load_32 s0, 20(sp)
   19974:	20 00 fd c0 	move s1, s26
   19978:	40 80 fd c0 	move s2, s27
   1997c:	bc b2 00 f8 	call 183024 <V_DrawPatchDirect>
   19980:	19 80 02 05 	add_i s0, s25, 160
   19984:	1e 50 00 88 	store_32 s0, 20(sp)
   19988:	00 00 fc c0 	move s0, s24
   1998c:	5e a3 00 a8 	load_32 s26, 40(sp)
   19990:	20 00 fd c0 	move s1, s26
   19994:	6d 95 00 f8 	call 153012 <W_CacheLumpName>
   19998:	60 00 f0 c0 	move s3, s0
   1999c:	1e 50 00 a8 	load_32 s0, 20(sp)
   199a0:	3e 90 00 a8 	load_32 s1, 36(sp)
   199a4:	40 80 fd c0 	move s2, s27
   199a8:	b1 b2 00 f8 	call 182980 <V_DrawPatchDirect>
   199ac:	19 a0 02 05 	add_i s0, s25, 168
   199b0:	1e 50 00 88 	store_32 s0, 20(sp)
   199b4:	00 00 fc c0 	move s0, s24
   199b8:	20 00 fd c0 	move s1, s26
   199bc:	63 95 00 f8 	call 152972 <W_CacheLumpName>
   199c0:	60 00 f0 c0 	move s3, s0
   199c4:	1e 50 00 a8 	load_32 s0, 20(sp)
   199c8:	5e 93 00 a8 	load_32 s26, 36(sp)
   199cc:	20 00 fd c0 	move s1, s26
   199d0:	40 80 fd c0 	move s2, s27
   199d4:	a6 b2 00 f8 	call 182936 <V_DrawPatchDirect>
   199d8:	19 c0 02 05 	add_i s0, s25, 176
   199dc:	1e 50 00 88 	store_32 s0, 20(sp)
   199e0:	00 00 fc c0 	move s0, s24
   199e4:	1e a3 00 a8 	load_32 s24, 40(sp)
   199e8:	20 00 fc c0 	move s1, s24
   199ec:	57 95 00 f8 	call 152924 <W_CacheLumpName>
   199f0:	60 00 f0 c0 	move s3, s0
   199f4:	1e 50 00 a8 	load_32 s0, 20(sp)
   199f8:	20 00 fd c0 	move s1, s26
   199fc:	40 80 fd c0 	move s2, s27
   19a00:	9b b2 00 f8 	call 182892 <V_DrawPatchDirect>
   19a04:	19 e0 02 05 	add_i s0, s25, 184
   19a08:	1e 50 00 88 	store_32 s0, 20(sp)
   19a0c:	1e 60 00 a8 	load_32 s0, 24(sp)
   19a10:	20 00 fc c0 	move s1, s24
   19a14:	4d 95 00 f8 	call 152884 <W_CacheLumpName>
   19a18:	60 00 f0 c0 	move s3, s0
   19a1c:	1e 50 00 a8 	load_32 s0, 20(sp)
   19a20:	20 00 fd c0 	move s1, s26
   19a24:	40 80 fd c0 	move s2, s27
   19a28:	91 b2 00 f8 	call 182852 <V_DrawPatchDirect>
   19a2c:	01 00 00 4f 	movehi s0, 1
   19a30:	20 00 fc c0 	move s1, s24
   19a34:	39 03 03 05 	add_i s25, s25, 192
   19a38:	00 84 2e 00 	or s0, s0, 2977
   19a3c:	43 95 00 f8 	call 152844 <W_CacheLumpName>
   19a40:	60 00 f0 c0 	move s3, s0
   19a44:	00 80 fc c0 	move s0, s25
   19a48:	20 00 fd c0 	move s1, s26
   19a4c:	40 80 fd c0 	move s2, s27
   19a50:	87 b2 00 f8 	call 182812 <V_DrawPatchDirect>
   19a54:	fe b3 00 a8 	load_32 ra, 44(sp)
   19a58:	7e c3 00 a8 	load_32 s27, 48(sp)
   19a5c:	5e d3 00 a8 	load_32 s26, 52(sp)
   19a60:	3e e3 00 a8 	load_32 s25, 56(sp)
   19a64:	1e f3 00 a8 	load_32 s24, 60(sp)
   19a68:	de 03 01 05 	add_i sp, sp, 64
   19a6c:	1f 00 00 f0 	ret

0000000000019a70 M_WriteText:
   19a70:	de 03 ff 05 	add_i sp, sp, -64
   19a74:	1e f3 00 88 	store_32 s24, 60(sp)
   19a78:	3e e3 00 88 	store_32 s25, 56(sp)
   19a7c:	5e d3 00 88 	store_32 s26, 52(sp)
   19a80:	7e c3 00 88 	store_32 s27, 48(sp)
   19a84:	fe b3 00 88 	store_32 ra, 44(sp)
   19a88:	60 0c 00 4f 	movehi s3, 96
   19a8c:	00 03 f1 c0 	move s24, s2
   19a90:	20 83 f0 c0 	move s25, s1
   19a94:	60 03 f0 c0 	move s27, s0
   19a98:	23 b0 02 00 	or s1, s3, 172
   19a9c:	3e a0 00 88 	store_32 s1, 40(sp)
   19aa0:	20 00 00 0f 	move s1, 0
   19aa4:	3e 90 00 88 	store_32 s1, 36(sp)
   19aa8:	7e 83 00 88 	store_32 s27, 32(sp)
   19aac:	18 00 00 a0 	load_u8 s0, (s24)
   19ab0:	80 04 00 f2 	bz s0, 144 <M_WriteText+0xd0>
   19ab4:	04 00 00 f6 	b 16 <M_WriteText+0x54>
   19ab8:	7b 13 00 05 	add_i s27, s27, 4
   19abc:	18 00 00 a0 	load_u8 s0, (s24)
   19ac0:	00 04 00 f2 	bz s0, 128 <M_WriteText+0xd0>
   19ac4:	20 28 00 11 	cmpne_i s1, s0, 10
   19ac8:	18 07 00 05 	add_i s24, s24, 1
   19acc:	41 00 00 f4 	bnz s1, 8 <M_WriteText+0x64>
   19ad0:	17 00 00 f6 	b 92 <M_WriteText+0xbc>
   19ad4:	00 00 d0 c1 	sext_8 s0, s0
   19ad8:	03 e3 00 f8 	call 232460 <toupper>
   19adc:	00 7c ff 05 	add_i s0, s0, -33
   19ae0:	20 fc 00 18 	cmplt_u s1, s0, 63
   19ae4:	41 00 00 f4 	bnz s1, 8 <M_WriteText+0x7c>
   19ae8:	f4 ff ff f7 	b -48 <M_WriteText+0x48>
   19aec:	3e a0 00 a8 	load_32 s1, 40(sp)
   19af0:	00 08 00 0b 	shl s0, s0, 2
   19af4:	01 00 50 c0 	add_i s0, s1, s0
   19af8:	60 00 00 a8 	load_32 s3, (s0)
   19afc:	03 00 00 a6 	load_s16 s0, (s3)
   19b00:	5b 03 50 c0 	add_i s26, s27, s0
   19b04:	1a 00 05 12 	cmpgt_i s0, s26, 320
   19b08:	c0 01 00 f4 	bnz s0, 56 <M_WriteText+0xd0>
   19b0c:	00 80 fd c0 	move s0, s27
   19b10:	20 80 fc c0 	move s1, s25
   19b14:	5e 90 00 a8 	load_32 s2, 36(sp)
   19b18:	55 b2 00 f8 	call 182612 <V_DrawPatchDirect>
   19b1c:	60 03 fd c0 	move s27, s26
   19b20:	18 00 00 a0 	load_u8 s0, (s24)
   19b24:	e0 00 00 f2 	bz s0, 28 <M_WriteText+0xd0>
   19b28:	e7 ff ff f7 	b -100 <M_WriteText+0x54>
   19b2c:	39 33 00 05 	add_i s25, s25, 12
   19b30:	7e 83 00 a8 	load_32 s27, 32(sp)
   19b34:	18 00 00 a0 	load_u8 s0, (s24)
   19b38:	40 00 00 f2 	bz s0, 8 <M_WriteText+0xd0>
   19b3c:	e2 ff ff f7 	b -120 <M_WriteText+0x54>
   19b40:	fe b3 00 a8 	load_32 ra, 44(sp)
   19b44:	7e c3 00 a8 	load_32 s27, 48(sp)
   19b48:	5e d3 00 a8 	load_32 s26, 52(sp)
   19b4c:	3e e3 00 a8 	load_32 s25, 56(sp)
   19b50:	1e f3 00 a8 	load_32 s24, 60(sp)
   19b54:	de 03 01 05 	add_i sp, sp, 64
   19b58:	1f 00 00 f0 	ret

0000000000019b5c M_ClearMenus:
   19b5c:	1b 04 00 4f 	movehi s0, 59
   19b60:	20 00 00 0f 	move s1, 0
   19b64:	00 60 1f 00 	or s0, s0, 2008
   19b68:	20 00 00 88 	store_32 s1, (s0)
   19b6c:	1f 00 00 f0 	ret

0000000000019b70 M_StartMessage:
   19b70:	7b 04 00 4f 	movehi s3, 59
   19b74:	9b 04 00 4f 	movehi s4, 59
   19b78:	bb 04 00 4f 	movehi s5, 59
   19b7c:	63 60 1f 00 	or s3, s3, 2008
   19b80:	84 70 1f 00 	or s4, s4, 2012
   19b84:	a5 b0 1f 00 	or s5, s5, 2028
   19b88:	c3 00 00 a8 	load_32 s6, (s3)
   19b8c:	fb 04 00 4f 	movehi s7, 59
   19b90:	c4 00 00 88 	store_32 s6, (s4)
   19b94:	db 04 00 4f 	movehi s6, 59
   19b98:	80 04 00 0f 	move s4, 1
   19b9c:	85 00 00 88 	store_32 s4, (s5)
   19ba0:	bb 04 00 4f 	movehi s5, 59
   19ba4:	c6 90 1f 00 	or s6, s6, 2020
   19ba8:	e7 80 1f 00 	or s7, s7, 2016
   19bac:	a5 a0 1f 00 	or s5, s5, 2024
   19bb0:	05 00 00 88 	store_32 s0, (s5)
   19bb4:	26 00 00 88 	store_32 s1, (s6)
   19bb8:	47 00 00 88 	store_32 s2, (s7)
   19bbc:	83 00 00 88 	store_32 s4, (s3)
   19bc0:	1f 00 00 f0 	ret

0000000000019bc4 M_SetupNextMenu:
   19bc4:	3b 04 00 4f 	movehi s1, 59
   19bc8:	5b 04 00 4f 	movehi s2, 59
   19bcc:	21 60 1c 00 	or s1, s1, 1816
   19bd0:	42 30 1f 00 	or s2, s2, 1996
   19bd4:	01 00 00 88 	store_32 s0, (s1)
   19bd8:	00 50 00 a6 	load_s16 s0, 20(s0)
   19bdc:	02 00 00 86 	store_16 s0, (s2)
   19be0:	1f 00 00 f0 	ret

0000000000019be4 M_StringWidth:
   19be4:	de 03 ff 05 	add_i sp, sp, -64
   19be8:	1e f3 00 88 	store_32 s24, 60(sp)
   19bec:	3e e3 00 88 	store_32 s25, 56(sp)
   19bf0:	5e d3 00 88 	store_32 s26, 52(sp)
   19bf4:	7e c3 00 88 	store_32 s27, 48(sp)
   19bf8:	fe b3 00 88 	store_32 ra, 44(sp)
   19bfc:	40 03 00 a0 	load_u8 s26, (s0)
   19c00:	fa 03 00 f2 	bz s26, 124 <M_StringWidth+0x98>
   19c04:	1e 90 00 88 	store_32 s0, 36(sp)
   19c08:	e6 e2 00 f8 	call 232344 <strlen>
   19c0c:	1e a0 00 88 	store_32 s0, 40(sp)
   19c10:	00 0c 00 4f 	movehi s0, 96
   19c14:	60 03 00 0f 	move s27, 0
   19c18:	00 13 00 0f 	move s24, 4
   19c1c:	00 b0 02 00 	or s0, s0, 172
   19c20:	1e 80 00 88 	store_32 s0, 32(sp)
   19c24:	20 83 fd c0 	move s25, s27
   19c28:	04 00 00 f6 	b 16 <M_StringWidth+0x54>
   19c2c:	1e 90 00 a8 	load_32 s0, 36(sp)
   19c30:	00 80 5d c0 	add_i s0, s0, s27
   19c34:	40 03 00 a0 	load_u8 s26, (s0)
   19c38:	00 00 dd c1 	sext_8 s0, s26
   19c3c:	aa e2 00 f8 	call 232104 <toupper>
   19c40:	20 7c ff 05 	add_i s1, s0, -33
   19c44:	00 00 fc c0 	move s0, s24
   19c48:	41 f8 00 16 	cmpgt_u s2, s1, 62
   19c4c:	c2 00 00 f4 	bnz s2, 24 <M_StringWidth+0x80>
   19c50:	01 08 00 0b 	shl s0, s1, 2
   19c54:	3e 80 00 a8 	load_32 s1, 32(sp)
   19c58:	01 00 50 c0 	add_i s0, s1, s0
   19c5c:	00 00 00 a8 	load_32 s0, (s0)
   19c60:	00 00 00 a6 	load_s16 s0, (s0)
   19c64:	3e a0 00 a8 	load_32 s1, 40(sp)
   19c68:	7b 07 00 05 	add_i s27, s27, 1
   19c6c:	39 03 50 c0 	add_i s25, s25, s0
   19c70:	3b 80 70 c1 	cmpge_u s1, s27, s1
   19c74:	61 00 00 f4 	bnz s1, 12 <M_StringWidth+0x9c>
   19c78:	ed ff ff f7 	b -76 <M_StringWidth+0x48>
   19c7c:	20 03 00 0f 	move s25, 0
   19c80:	00 80 fc c0 	move s0, s25
   19c84:	fe b3 00 a8 	load_32 ra, 44(sp)
   19c88:	7e c3 00 a8 	load_32 s27, 48(sp)
   19c8c:	5e d3 00 a8 	load_32 s26, 52(sp)
   19c90:	3e e3 00 a8 	load_32 s25, 56(sp)
   19c94:	1e f3 00 a8 	load_32 s24, 60(sp)
   19c98:	de 03 01 05 	add_i sp, sp, 64
   19c9c:	1f 00 00 f0 	ret

0000000000019ca0 M_DoSave:
   19ca0:	de 03 ff 05 	add_i sp, sp, -64
   19ca4:	1e f3 00 88 	store_32 s24, 60(sp)
   19ca8:	fe e3 00 88 	store_32 ra, 56(sp)
   19cac:	3b 04 00 4f 	movehi s1, 59
   19cb0:	00 03 f0 c0 	move s24, s0
   19cb4:	21 d0 20 00 	or s1, s1, 2100
   19cb8:	18 60 00 07 	mull_i s0, s24, 24
   19cbc:	21 00 50 c0 	add_i s1, s1, s0
   19cc0:	00 00 fc c0 	move s0, s24
   19cc4:	8b f6 ff f9 	call -9684 <G_SaveGame>
   19cc8:	1b 04 00 4f 	movehi s0, 59
   19ccc:	3b 04 00 4f 	movehi s1, 59
   19cd0:	40 60 1f 00 	or s2, s0, 2008
   19cd4:	01 10 20 00 	or s0, s1, 2052
   19cd8:	20 00 00 0f 	move s1, 0
   19cdc:	22 00 00 88 	store_32 s1, (s2)
   19ce0:	20 00 00 a8 	load_32 s1, (s0)
   19ce4:	21 f8 ff 11 	cmpne_i s1, s1, -2
   19ce8:	41 00 00 f4 	bnz s1, 8 <M_DoSave+0x50>
   19cec:	00 03 00 88 	store_32 s24, (s0)
   19cf0:	fe e3 00 a8 	load_32 ra, 56(sp)
   19cf4:	1e f3 00 a8 	load_32 s24, 60(sp)
   19cf8:	de 03 01 05 	add_i sp, sp, 64
   19cfc:	1f 00 00 f0 	ret

0000000000019d00 M_QuickSaveResponse:
   19d00:	de 03 ff 05 	add_i sp, sp, -64
   19d04:	1e f3 00 88 	store_32 s24, 60(sp)
   19d08:	3e e3 00 88 	store_32 s25, 56(sp)
   19d0c:	fe d3 00 88 	store_32 ra, 52(sp)
   19d10:	00 e4 01 11 	cmpne_i s0, s0, 121
   19d14:	a0 02 00 f4 	bnz s0, 84 <M_QuickSaveResponse+0x68>
   19d18:	1b 04 00 4f 	movehi s0, 59
   19d1c:	20 13 20 00 	or s25, s0, 2052
   19d20:	1b 04 00 4f 	movehi s0, 59
   19d24:	19 03 00 a8 	load_32 s24, (s25)
   19d28:	00 d0 20 00 	or s0, s0, 2100
   19d2c:	38 60 00 07 	mull_i s1, s24, 24
   19d30:	20 80 50 c0 	add_i s1, s0, s1
   19d34:	00 00 fc c0 	move s0, s24
   19d38:	6e f6 ff f9 	call -9800 <G_SaveGame>
   19d3c:	1b 04 00 4f 	movehi s0, 59
   19d40:	20 00 00 0f 	move s1, 0
   19d44:	00 60 1f 00 	or s0, s0, 2008
   19d48:	20 00 00 88 	store_32 s1, (s0)
   19d4c:	19 00 00 a8 	load_32 s0, (s25)
   19d50:	00 f8 ff 11 	cmpne_i s0, s0, -2
   19d54:	40 00 00 f4 	bnz s0, 8 <M_QuickSaveResponse+0x5c>
   19d58:	19 03 00 88 	store_32 s24, (s25)
   19d5c:	00 00 00 0f 	move s0, 0
   19d60:	20 60 00 0f 	move s1, 24
   19d64:	a0 c9 00 f8 	call 206464 <S_StartSound>
   19d68:	fe d3 00 a8 	load_32 ra, 52(sp)
   19d6c:	3e e3 00 a8 	load_32 s25, 56(sp)
   19d70:	1e f3 00 a8 	load_32 s24, 60(sp)
   19d74:	de 03 01 05 	add_i sp, sp, 64
   19d78:	1f 00 00 f0 	ret

0000000000019d7c M_QuickSave:
   19d7c:	de 03 fe 05 	add_i sp, sp, -128
   19d80:	1e f3 01 88 	store_32 s24, 124(sp)
   19d84:	fe e3 01 88 	store_32 ra, 120(sp)
   19d88:	1b 04 00 4f 	movehi s0, 59
   19d8c:	00 20 19 00 	or s0, s0, 1608
   19d90:	00 00 00 a8 	load_32 s0, (s0)
   19d94:	40 00 00 f4 	bnz s0, 8 <M_QuickSave+0x20>
   19d98:	0a 00 00 f6 	b 40 <M_QuickSave+0x44>
   19d9c:	1a 04 00 4f 	movehi s0, 58
   19da0:	00 a0 7f 00 	or s0, s0, 8168
   19da4:	00 00 00 a8 	load_32 s0, (s0)
   19da8:	40 00 00 f4 	bnz s0, 8 <M_QuickSave+0x34>
   19dac:	0c 00 00 f6 	b 48 <M_QuickSave+0x60>
   19db0:	fe e3 01 a8 	load_32 ra, 120(sp)
   19db4:	1e f3 01 a8 	load_32 s24, 124(sp)
   19db8:	de 03 02 05 	add_i sp, sp, 128
   19dbc:	1f 00 00 f0 	ret
   19dc0:	00 00 00 0f 	move s0, 0
   19dc4:	20 88 00 0f 	move s1, 34
   19dc8:	87 c9 00 f8 	call 206364 <S_StartSound>
   19dcc:	fe e3 01 a8 	load_32 ra, 120(sp)
   19dd0:	1e f3 01 a8 	load_32 s24, 124(sp)
   19dd4:	de 03 02 05 	add_i sp, sp, 128
   19dd8:	1f 00 00 f0 	ret
   19ddc:	1b 04 00 4f 	movehi s0, 59
   19de0:	00 10 20 00 	or s0, s0, 2052
   19de4:	20 00 00 a8 	load_32 s1, (s0)
   19de8:	41 fc ff 12 	cmpgt_i s2, s1, -1
   19dec:	42 00 00 f4 	bnz s2, 8 <M_QuickSave+0x78>
   19df0:	27 00 00 f6 	b 156 <M_QuickSave+0x110>
   19df4:	1b 04 00 4f 	movehi s0, 59
   19df8:	21 60 00 07 	mull_i s1, s1, 24
   19dfc:	5b 04 00 4f 	movehi s2, 59
   19e00:	00 d0 20 00 	or s0, s0, 2100
   19e04:	02 e3 24 00 	or s24, s2, 2360
   19e08:	00 80 50 c0 	add_i s0, s0, s1
   19e0c:	23 00 00 4f 	movehi s1, 3
   19e10:	21 88 07 00 	or s1, s1, 482
   19e14:	3e 10 00 88 	store_32 s1, 4(sp)
   19e18:	1e 03 00 88 	store_32 s24, (sp)
   19e1c:	1e 20 00 88 	store_32 s0, 8(sp)
   19e20:	fa df 00 f8 	call 229352 <sprintf>
   19e24:	1b 04 00 4f 	movehi s0, 59
   19e28:	3b 04 00 4f 	movehi s1, 59
   19e2c:	7b 04 00 4f 	movehi s3, 59
   19e30:	00 60 1f 00 	or s0, s0, 2008
   19e34:	21 70 1f 00 	or s1, s1, 2012
   19e38:	9b 04 00 4f 	movehi s4, 59
   19e3c:	40 00 00 a8 	load_32 s2, (s0)
   19e40:	41 00 00 88 	store_32 s2, (s1)
   19e44:	23 b0 1f 00 	or s1, s3, 2028
   19e48:	44 a0 1f 00 	or s2, s4, 2024
   19e4c:	60 04 00 0f 	move s3, 1
   19e50:	61 00 00 88 	store_32 s3, (s1)
   19e54:	3b 04 00 4f 	movehi s1, 59
   19e58:	02 03 00 88 	store_32 s24, (s2)
   19e5c:	5b 04 00 4f 	movehi s2, 59
   19e60:	8c 00 00 4f 	movehi s4, 12
   19e64:	21 90 1f 00 	or s1, s1, 2020
   19e68:	42 80 1f 00 	or s2, s2, 2016
   19e6c:	84 00 74 00 	or s4, s4, 7424
   19e70:	81 00 00 88 	store_32 s4, (s1)
   19e74:	62 00 00 88 	store_32 s3, (s2)
   19e78:	60 00 00 88 	store_32 s3, (s0)
   19e7c:	fe e3 01 a8 	load_32 ra, 120(sp)
   19e80:	1e f3 01 a8 	load_32 s24, 124(sp)
   19e84:	de 03 02 05 	add_i sp, sp, 128
   19e88:	1f 00 00 f0 	ret
   19e8c:	3b 04 00 4f 	movehi s1, 59
   19e90:	21 60 1f 00 	or s1, s1, 2008
   19e94:	41 00 00 a8 	load_32 s2, (s1)
   19e98:	82 01 00 f4 	bnz s2, 48 <M_QuickSave+0x14c>
   19e9c:	40 04 00 0f 	move s2, 1
   19ea0:	41 00 00 88 	store_32 s2, (s1)
   19ea4:	3b 04 00 4f 	movehi s1, 59
   19ea8:	53 04 00 4f 	movehi s2, 51
   19eac:	7b 04 00 4f 	movehi s3, 59
   19eb0:	21 60 1c 00 	or s1, s1, 1816
   19eb4:	42 20 52 00 	or s2, s2, 5256
   19eb8:	63 30 1f 00 	or s3, s3, 1996
   19ebc:	41 00 00 88 	store_32 s2, (s1)
   19ec0:	22 50 00 a6 	load_s16 s1, 20(s2)
   19ec4:	23 00 00 86 	store_16 s1, (s3)
   19ec8:	3b 04 00 4f 	movehi s1, 59
   19ecc:	53 04 00 4f 	movehi s2, 51
   19ed0:	7b 04 00 4f 	movehi s3, 59
   19ed4:	21 60 1c 00 	or s1, s1, 1816
   19ed8:	42 10 60 00 	or s2, s2, 6148
   19edc:	63 30 1f 00 	or s3, s3, 1996
   19ee0:	41 00 00 88 	store_32 s2, (s1)
   19ee4:	22 50 00 a6 	load_s16 s1, 20(s2)
   19ee8:	23 00 00 86 	store_16 s1, (s3)
   19eec:	20 f8 ff 0f 	move s1, -2
   19ef0:	20 00 00 88 	store_32 s1, (s0)
   19ef4:	fe e3 01 a8 	load_32 ra, 120(sp)
   19ef8:	1e f3 01 a8 	load_32 s24, 124(sp)
   19efc:	de 03 02 05 	add_i sp, sp, 128
   19f00:	1f 00 00 f0 	ret

0000000000019f04 M_StartControlPanel:
   19f04:	1b 04 00 4f 	movehi s0, 59
   19f08:	00 60 1f 00 	or s0, s0, 2008
   19f0c:	20 00 00 a8 	load_32 s1, (s0)
   19f10:	41 00 00 f4 	bnz s1, 8 <M_StartControlPanel+0x14>
   19f14:	02 00 00 f6 	b 8 <M_StartControlPanel+0x18>
   19f18:	1f 00 00 f0 	ret
   19f1c:	20 04 00 0f 	move s1, 1
   19f20:	20 00 00 88 	store_32 s1, (s0)
   19f24:	1b 04 00 4f 	movehi s0, 59
   19f28:	33 04 00 4f 	movehi s1, 51
   19f2c:	5b 04 00 4f 	movehi s2, 59
   19f30:	00 60 1c 00 	or s0, s0, 1816
   19f34:	21 20 52 00 	or s1, s1, 5256
   19f38:	42 30 1f 00 	or s2, s2, 1996
   19f3c:	20 00 00 88 	store_32 s1, (s0)
   19f40:	01 50 00 a6 	load_s16 s0, 20(s1)
   19f44:	02 00 00 86 	store_16 s0, (s2)
   19f48:	1f 00 00 f0 	ret

0000000000019f4c M_QuickLoadResponse:
   19f4c:	de 03 fa 05 	add_i sp, sp, -384
   19f50:	1e f3 05 88 	store_32 s24, 380(sp)
   19f54:	fe e3 05 88 	store_32 ra, 376(sp)
   19f58:	00 e4 01 11 	cmpne_i s0, s0, 121
   19f5c:	a0 03 00 f4 	bnz s0, 116 <M_QuickLoadResponse+0x84>
   19f60:	1b 04 00 4f 	movehi s0, 59
   19f64:	00 10 20 00 	or s0, s0, 2052
   19f68:	00 03 00 a8 	load_32 s24, (s0)
   19f6c:	01 00 00 4f 	movehi s0, 1
   19f70:	00 10 34 00 	or s0, s0, 3332
   19f74:	d0 07 00 f8 	call 8000 <M_CheckParm>
   19f78:	e0 00 00 f2 	bz s0, 28 <M_QuickLoadResponse+0x48>
   19f7c:	00 00 00 4f 	movehi s0, 0
   19f80:	1e 23 00 88 	store_32 s24, 8(sp)
   19f84:	3e e0 01 05 	add_i s1, sp, 120
   19f88:	3e 00 00 88 	store_32 s1, (sp)
   19f8c:	00 2c 51 00 	or s0, s0, 5195
   19f90:	06 00 00 f6 	b 24 <M_QuickLoadResponse+0x5c>
   19f94:	02 00 00 4f 	movehi s0, 2
   19f98:	1e 23 00 88 	store_32 s24, 8(sp)
   19f9c:	3e e0 01 05 	add_i s1, sp, 120
   19fa0:	3e 00 00 88 	store_32 s1, (sp)
   19fa4:	00 ec 2c 00 	or s0, s0, 2875
   19fa8:	1e 10 00 88 	store_32 s0, 4(sp)
   19fac:	97 df 00 f8 	call 228956 <sprintf>
   19fb0:	1e e0 01 05 	add_i s0, sp, 120
   19fb4:	80 f4 ff f9 	call -11776 <G_LoadGame>
   19fb8:	1b 04 00 4f 	movehi s0, 59
   19fbc:	20 60 1f 00 	or s1, s0, 2008
   19fc0:	00 00 00 0f 	move s0, 0
   19fc4:	01 00 00 88 	store_32 s0, (s1)
   19fc8:	20 60 00 0f 	move s1, 24
   19fcc:	06 c9 00 f8 	call 205848 <S_StartSound>
   19fd0:	fe e3 05 a8 	load_32 ra, 376(sp)
   19fd4:	1e f3 05 a8 	load_32 s24, 380(sp)
   19fd8:	de 03 06 05 	add_i sp, sp, 384
   19fdc:	1f 00 00 f0 	ret

0000000000019fe0 M_QuickLoad:
   19fe0:	de 03 fe 05 	add_i sp, sp, -128
   19fe4:	1e f3 01 88 	store_32 s24, 124(sp)
   19fe8:	fe e3 01 88 	store_32 ra, 120(sp)
   19fec:	1b 04 00 4f 	movehi s0, 59
   19ff0:	00 c0 01 00 	or s0, s0, 112
   19ff4:	00 00 00 a8 	load_32 s0, (s0)
   19ff8:	40 00 00 f4 	bnz s0, 8 <M_QuickLoad+0x20>
   19ffc:	06 00 00 f6 	b 24 <M_QuickLoad+0x34>
   1a000:	20 00 00 4f 	movehi s1, 0
   1a004:	00 00 00 0f 	move s0, 0
   1a008:	01 37 15 00 	or s24, s1, 1357
   1a00c:	20 00 f0 c0 	move s1, s0
   1a010:	15 00 00 f6 	b 84 <M_QuickLoad+0x84>
   1a014:	1b 04 00 4f 	movehi s0, 59
   1a018:	00 10 20 00 	or s0, s0, 2052
   1a01c:	00 00 00 a8 	load_32 s0, (s0)
   1a020:	20 00 00 14 	cmplt_i s1, s0, 0
   1a024:	01 05 00 f4 	bnz s1, 160 <M_QuickLoad+0xe4>
   1a028:	3b 04 00 4f 	movehi s1, 59
   1a02c:	00 60 00 07 	mull_i s0, s0, 24
   1a030:	5b 04 00 4f 	movehi s2, 59
   1a034:	21 d0 20 00 	or s1, s1, 2100
   1a038:	02 e3 24 00 	or s24, s2, 2360
   1a03c:	01 00 50 c0 	add_i s0, s1, s0
   1a040:	20 00 00 4f 	movehi s1, 0
   1a044:	21 44 63 00 	or s1, s1, 6353
   1a048:	3e 10 00 88 	store_32 s1, 4(sp)
   1a04c:	1e 03 00 88 	store_32 s24, (sp)
   1a050:	1e 20 00 88 	store_32 s0, 8(sp)
   1a054:	6d df 00 f8 	call 228788 <sprintf>
   1a058:	0c 00 00 4f 	movehi s0, 12
   1a05c:	20 04 00 0f 	move s1, 1
   1a060:	00 30 7d 00 	or s0, s0, 8012
   1a064:	5b 04 00 4f 	movehi s2, 59
   1a068:	7b 04 00 4f 	movehi s3, 59
   1a06c:	9b 04 00 4f 	movehi s4, 59
   1a070:	42 60 1f 00 	or s2, s2, 2008
   1a074:	63 70 1f 00 	or s3, s3, 2012
   1a078:	84 b0 1f 00 	or s4, s4, 2028
   1a07c:	a2 00 00 a8 	load_32 s5, (s2)
   1a080:	db 04 00 4f 	movehi s6, 59
   1a084:	a3 00 00 88 	store_32 s5, (s3)
   1a088:	bb 04 00 4f 	movehi s5, 59
   1a08c:	60 04 00 0f 	move s3, 1
   1a090:	64 00 00 88 	store_32 s3, (s4)
   1a094:	9b 04 00 4f 	movehi s4, 59
   1a098:	a5 90 1f 00 	or s5, s5, 2020
   1a09c:	c6 80 1f 00 	or s6, s6, 2016
   1a0a0:	84 a0 1f 00 	or s4, s4, 2024
   1a0a4:	04 03 00 88 	store_32 s24, (s4)
   1a0a8:	05 00 00 88 	store_32 s0, (s5)
   1a0ac:	26 00 00 88 	store_32 s1, (s6)
   1a0b0:	62 00 00 88 	store_32 s3, (s2)
   1a0b4:	fe e3 01 a8 	load_32 ra, 120(sp)
   1a0b8:	1e f3 01 a8 	load_32 s24, 124(sp)
   1a0bc:	de 03 02 05 	add_i sp, sp, 128
   1a0c0:	1f 00 00 f0 	ret
   1a0c4:	20 00 00 4f 	movehi s1, 0
   1a0c8:	00 00 00 0f 	move s0, 0
   1a0cc:	01 3f 2d 00 	or s24, s1, 2895
   1a0d0:	cf ff ff f7 	b -196 <M_QuickLoad+0x2c>

000000000001a0d4 M_DrawThermo:
   1a0d4:	de 03 ff 05 	add_i sp, sp, -64
   1a0d8:	1e f3 00 88 	store_32 s24, 60(sp)
   1a0dc:	3e e3 00 88 	store_32 s25, 56(sp)
   1a0e0:	5e d3 00 88 	store_32 s26, 52(sp)
   1a0e4:	7e c3 00 88 	store_32 s27, 48(sp)
   1a0e8:	fe b3 00 88 	store_32 ra, 44(sp)
   1a0ec:	7e 60 00 88 	store_32 s3, 24(sp)
   1a0f0:	40 03 f1 c0 	move s26, s2
   1a0f4:	20 83 f0 c0 	move s25, s1
   1a0f8:	00 03 f0 c0 	move s24, s0
   1a0fc:	00 00 00 4f 	movehi s0, 0
   1a100:	20 94 01 0f 	move s1, 101
   1a104:	00 e8 7a 00 	or s0, s0, 7866
   1a108:	90 93 00 f8 	call 151104 <W_CacheLumpName>
   1a10c:	60 00 f0 c0 	move s3, s0
   1a110:	00 00 fc c0 	move s0, s24
   1a114:	3e a3 00 88 	store_32 s25, 40(sp)
   1a118:	40 00 00 0f 	move s2, 0
   1a11c:	20 80 fc c0 	move s1, s25
   1a120:	5e 90 00 88 	store_32 s2, 36(sp)
   1a124:	d2 b0 00 f8 	call 181064 <V_DrawPatchDirect>
   1a128:	40 00 fd c0 	move s2, s26
   1a12c:	38 23 00 05 	add_i s25, s24, 8
   1a130:	3e 73 00 88 	store_32 s25, 28(sp)
   1a134:	02 04 00 14 	cmplt_i s0, s2, 1
   1a138:	a0 02 00 f4 	bnz s0, 84 <M_DrawThermo+0xb8>
   1a13c:	01 00 00 4f 	movehi s0, 1
   1a140:	40 97 01 0f 	move s26, 101
   1a144:	00 44 21 00 	or s0, s0, 2129
   1a148:	1e 80 00 88 	store_32 s0, 32(sp)
   1a14c:	7e 93 00 a8 	load_32 s27, 36(sp)
   1a150:	3e 73 00 a8 	load_32 s25, 28(sp)
   1a154:	1e 80 00 a8 	load_32 s0, 32(sp)
   1a158:	20 00 fd c0 	move s1, s26
   1a15c:	00 03 f1 c0 	move s24, s2
   1a160:	7a 93 00 f8 	call 151016 <W_CacheLumpName>
   1a164:	60 00 f0 c0 	move s3, s0
   1a168:	00 80 fc c0 	move s0, s25
   1a16c:	3e a0 00 a8 	load_32 s1, 40(sp)
   1a170:	5e 90 00 a8 	load_32 s2, 36(sp)
   1a174:	be b0 00 f8 	call 180984 <V_DrawPatchDirect>
   1a178:	7b 07 00 05 	add_i s27, s27, 1
   1a17c:	40 00 fc c0 	move s2, s24
   1a180:	39 23 00 05 	add_i s25, s25, 8
   1a184:	1b 00 41 c1 	cmplt_i s0, s27, s2
   1a188:	60 fe ff f5 	bnz s0, -52 <M_DrawThermo+0x80>
   1a18c:	01 00 00 4f 	movehi s0, 1
   1a190:	00 97 01 0f 	move s24, 101
   1a194:	00 ec 34 00 	or s0, s0, 3387
   1a198:	20 00 fc c0 	move s1, s24
   1a19c:	6b 93 00 f8 	call 150956 <W_CacheLumpName>
   1a1a0:	60 00 f0 c0 	move s3, s0
   1a1a4:	00 80 fc c0 	move s0, s25
   1a1a8:	7e a3 00 a8 	load_32 s27, 40(sp)
   1a1ac:	40 03 00 0f 	move s26, 0
   1a1b0:	20 80 fd c0 	move s1, s27
   1a1b4:	40 00 fd c0 	move s2, s26
   1a1b8:	ad b0 00 f8 	call 180916 <V_DrawPatchDirect>
   1a1bc:	1e 60 00 a8 	load_32 s0, 24(sp)
   1a1c0:	3e 70 00 a8 	load_32 s1, 28(sp)
   1a1c4:	00 0c 00 0b 	shl s0, s0, 3
   1a1c8:	20 83 50 c0 	add_i s25, s0, s1
   1a1cc:	02 00 00 4f 	movehi s0, 2
   1a1d0:	20 00 fc c0 	move s1, s24
   1a1d4:	00 24 2d 00 	or s0, s0, 2889
   1a1d8:	5c 93 00 f8 	call 150896 <W_CacheLumpName>
   1a1dc:	60 00 f0 c0 	move s3, s0
   1a1e0:	00 80 fc c0 	move s0, s25
   1a1e4:	20 80 fd c0 	move s1, s27
   1a1e8:	40 00 fd c0 	move s2, s26
   1a1ec:	a0 b0 00 f8 	call 180864 <V_DrawPatchDirect>
   1a1f0:	fe b3 00 a8 	load_32 ra, 44(sp)
   1a1f4:	7e c3 00 a8 	load_32 s27, 48(sp)
   1a1f8:	5e d3 00 a8 	load_32 s26, 52(sp)
   1a1fc:	3e e3 00 a8 	load_32 s25, 56(sp)
   1a200:	1e f3 00 a8 	load_32 s24, 60(sp)
   1a204:	de 03 01 05 	add_i sp, sp, 64
   1a208:	1f 00 00 f0 	ret

000000000001a20c M_VerifyNightmare:
   1a20c:	de 03 ff 05 	add_i sp, sp, -64
   1a210:	fe f3 00 88 	store_32 ra, 60(sp)
   1a214:	00 e4 01 11 	cmpne_i s0, s0, 121
   1a218:	80 01 00 f4 	bnz s0, 48 <M_VerifyNightmare+0x3c>
   1a21c:	1b 04 00 4f 	movehi s0, 59
   1a220:	40 04 00 0f 	move s2, 1
   1a224:	00 00 1f 00 	or s0, s0, 1984
   1a228:	00 00 00 a8 	load_32 s0, (s0)
   1a22c:	20 04 00 05 	add_i s1, s0, 1
   1a230:	00 10 00 0f 	move s0, 4
   1a234:	3e f5 ff f9 	call -11016 <G_DeferedInitNew>
   1a238:	1b 04 00 4f 	movehi s0, 59
   1a23c:	20 00 00 0f 	move s1, 0
   1a240:	00 60 1f 00 	or s0, s0, 2008
   1a244:	20 00 00 88 	store_32 s1, (s0)
   1a248:	fe f3 00 a8 	load_32 ra, 60(sp)
   1a24c:	de 03 01 05 	add_i sp, sp, 64
   1a250:	1f 00 00 f0 	ret

000000000001a254 M_EndGameResponse:
   1a254:	de 03 ff 05 	add_i sp, sp, -64
   1a258:	fe f3 00 88 	store_32 ra, 60(sp)
   1a25c:	00 e4 01 11 	cmpne_i s0, s0, 121
   1a260:	a0 01 00 f4 	bnz s0, 52 <M_EndGameResponse+0x40>
   1a264:	1b 04 00 4f 	movehi s0, 59
   1a268:	3b 04 00 4f 	movehi s1, 59
   1a26c:	5b 04 00 4f 	movehi s2, 59
   1a270:	00 30 1f 00 	or s0, s0, 1996
   1a274:	21 60 1c 00 	or s1, s1, 1816
   1a278:	42 60 1f 00 	or s2, s2, 2008
   1a27c:	00 00 00 a6 	load_s16 s0, (s0)
   1a280:	21 00 00 a8 	load_32 s1, (s1)
   1a284:	01 50 00 86 	store_16 s0, 20(s1)
   1a288:	00 00 00 0f 	move s0, 0
   1a28c:	02 00 00 88 	store_32 s0, (s2)
   1a290:	02 db ff f9 	call -37880 <D_StartTitle>
   1a294:	fe f3 00 a8 	load_32 ra, 60(sp)
   1a298:	de 03 01 05 	add_i sp, sp, 64
   1a29c:	1f 00 00 f0 	ret

000000000001a2a0 M_QuitResponse:
   1a2a0:	de 03 ff 05 	add_i sp, sp, -64
   1a2a4:	fe f3 00 88 	store_32 ra, 60(sp)
   1a2a8:	00 e4 01 11 	cmpne_i s0, s0, 121
   1a2ac:	80 03 00 f4 	bnz s0, 112 <M_QuitResponse+0x7c>
   1a2b0:	1b 04 00 4f 	movehi s0, 59
   1a2b4:	00 c0 01 00 	or s0, s0, 112
   1a2b8:	00 00 00 a8 	load_32 s0, (s0)
   1a2bc:	e0 02 00 f4 	bnz s0, 92 <M_QuitResponse+0x78>
   1a2c0:	0b 04 00 4f 	movehi s0, 43
   1a2c4:	3a 04 00 4f 	movehi s1, 58
   1a2c8:	00 00 40 00 	or s0, s0, 4096
   1a2cc:	21 b0 7f 00 	or s1, s1, 8172
   1a2d0:	00 00 00 a8 	load_32 s0, (s0)
   1a2d4:	21 00 00 a8 	load_32 s1, (s1)
   1a2d8:	40 08 00 11 	cmpne_i s2, s0, 2
   1a2dc:	21 08 00 0a 	shr s1, s1, 2
   1a2e0:	01 1c 00 01 	and s0, s1, 7
   1a2e4:	82 00 00 f4 	bnz s2, 16 <M_QuitResponse+0x54>
   1a2e8:	33 04 00 4f 	movehi s1, 51
   1a2ec:	21 80 61 00 	or s1, s1, 6240
   1a2f0:	03 00 00 f6 	b 12 <M_QuitResponse+0x5c>
   1a2f4:	33 04 00 4f 	movehi s1, 51
   1a2f8:	21 00 61 00 	or s1, s1, 6208
   1a2fc:	00 08 00 0b 	shl s0, s0, 2
   1a300:	01 00 50 c0 	add_i s0, s1, s0
   1a304:	20 00 00 a8 	load_32 s1, (s0)
   1a308:	00 00 00 0f 	move s0, 0
   1a30c:	36 c8 00 f8 	call 205016 <S_StartSound>
   1a310:	00 a4 01 0f 	move s0, 105
   1a314:	69 cf ff f9 	call -49756 <I_WaitVBL>
   1a318:	5f cf ff f9 	call -49796 <I_Quit>
   1a31c:	fe f3 00 a8 	load_32 ra, 60(sp)
   1a320:	de 03 01 05 	add_i sp, sp, 64
   1a324:	1f 00 00 f0 	ret

000000000001a328 M_DrawEmptyCell:
   1a328:	de 03 ff 05 	add_i sp, sp, -64
   1a32c:	1e f3 00 88 	store_32 s24, 60(sp)
   1a330:	3e e3 00 88 	store_32 s25, 56(sp)
   1a334:	fe d3 00 88 	store_32 ra, 52(sp)
   1a338:	40 40 00 a6 	load_s16 s2, 16(s0)
   1a33c:	21 10 00 0b 	shl s1, s1, 4
   1a340:	00 48 00 a6 	load_s16 s0, 18(s0)
   1a344:	02 db ff 05 	add_i s24, s2, -10
   1a348:	01 00 50 c0 	add_i s0, s1, s0
   1a34c:	20 94 01 0f 	move s1, 101
   1a350:	20 ff ff 05 	add_i s25, s0, -1
   1a354:	01 00 00 4f 	movehi s0, 1
   1a358:	00 d8 2e 00 	or s0, s0, 2998
   1a35c:	fb 92 00 f8 	call 150508 <W_CacheLumpName>
   1a360:	60 00 f0 c0 	move s3, s0
   1a364:	00 00 fc c0 	move s0, s24
   1a368:	40 00 00 0f 	move s2, 0
   1a36c:	20 80 fc c0 	move s1, s25
   1a370:	3f b0 00 f8 	call 180476 <V_DrawPatchDirect>
   1a374:	fe d3 00 a8 	load_32 ra, 52(sp)
   1a378:	3e e3 00 a8 	load_32 s25, 56(sp)
   1a37c:	1e f3 00 a8 	load_32 s24, 60(sp)
   1a380:	de 03 01 05 	add_i sp, sp, 64
   1a384:	1f 00 00 f0 	ret

000000000001a388 M_DrawSelCell:
   1a388:	de 03 ff 05 	add_i sp, sp, -64
   1a38c:	1e f3 00 88 	store_32 s24, 60(sp)
   1a390:	3e e3 00 88 	store_32 s25, 56(sp)
   1a394:	fe d3 00 88 	store_32 ra, 52(sp)
   1a398:	40 40 00 a6 	load_s16 s2, 16(s0)
   1a39c:	21 10 00 0b 	shl s1, s1, 4
   1a3a0:	00 48 00 a6 	load_s16 s0, 18(s0)
   1a3a4:	02 db ff 05 	add_i s24, s2, -10
   1a3a8:	01 00 50 c0 	add_i s0, s1, s0
   1a3ac:	20 94 01 0f 	move s1, 101
   1a3b0:	20 ff ff 05 	add_i s25, s0, -1
   1a3b4:	02 00 00 4f 	movehi s0, 2
   1a3b8:	00 b8 55 00 	or s0, s0, 5486
   1a3bc:	e3 92 00 f8 	call 150412 <W_CacheLumpName>
   1a3c0:	60 00 f0 c0 	move s3, s0
   1a3c4:	00 00 fc c0 	move s0, s24
   1a3c8:	40 00 00 0f 	move s2, 0
   1a3cc:	20 80 fc c0 	move s1, s25
   1a3d0:	27 b0 00 f8 	call 180380 <V_DrawPatchDirect>
   1a3d4:	fe d3 00 a8 	load_32 ra, 52(sp)
   1a3d8:	3e e3 00 a8 	load_32 s25, 56(sp)
   1a3dc:	1e f3 00 a8 	load_32 s24, 60(sp)
   1a3e0:	de 03 01 05 	add_i sp, sp, 64
   1a3e4:	1f 00 00 f0 	ret

000000000001a3e8 M_StopMessage:
   1a3e8:	1b 04 00 4f 	movehi s0, 59
   1a3ec:	3b 04 00 4f 	movehi s1, 59
   1a3f0:	5b 04 00 4f 	movehi s2, 59
   1a3f4:	00 70 1f 00 	or s0, s0, 2012
   1a3f8:	21 60 1f 00 	or s1, s1, 2008
   1a3fc:	42 b0 1f 00 	or s2, s2, 2028
   1a400:	00 00 00 a8 	load_32 s0, (s0)
   1a404:	01 00 00 88 	store_32 s0, (s1)
   1a408:	00 00 00 0f 	move s0, 0
   1a40c:	02 00 00 88 	store_32 s0, (s2)
   1a410:	1f 00 00 f0 	ret

000000000001a414 M_StringHeight:
   1a414:	de 03 ff 05 	add_i sp, sp, -64
   1a418:	1e f3 00 88 	store_32 s24, 60(sp)
   1a41c:	3e e3 00 88 	store_32 s25, 56(sp)
   1a420:	5e d3 00 88 	store_32 s26, 52(sp)
   1a424:	fe c3 00 88 	store_32 ra, 48(sp)
   1a428:	20 0c 00 4f 	movehi s1, 96
   1a42c:	21 b0 02 00 	or s1, s1, 172
   1a430:	21 00 00 a8 	load_32 s1, (s1)
   1a434:	00 03 f0 c0 	move s24, s0
   1a438:	21 0b 00 a6 	load_s16 s25, 2(s1)
   1a43c:	58 03 00 a0 	load_u8 s26, (s24)
   1a440:	fa 02 00 f2 	bz s26, 92 <M_StringHeight+0x88>
   1a444:	00 00 fc c0 	move s0, s24
   1a448:	d6 e0 00 f8 	call 230232 <strlen>
   1a44c:	5a 28 00 10 	cmpeq_i s2, s26, 10
   1a450:	20 80 fc c0 	move s1, s25
   1a454:	42 00 00 f4 	bnz s2, 8 <M_StringHeight+0x48>
   1a458:	20 00 00 0f 	move s1, 0
   1a45c:	40 08 00 18 	cmplt_u s2, s0, 2
   1a460:	21 80 5c c0 	add_i s1, s1, s25
   1a464:	e2 01 00 f4 	bnz s2, 60 <M_StringHeight+0x8c>
   1a468:	40 04 00 0f 	move s2, 1
   1a46c:	60 00 00 0f 	move s3, 0
   1a470:	98 00 51 c0 	add_i s4, s24, s2
   1a474:	84 00 00 a0 	load_u8 s4, (s4)
   1a478:	a4 28 00 10 	cmpeq_i s5, s4, 10
   1a47c:	80 80 fc c0 	move s4, s25
   1a480:	45 00 00 f4 	bnz s5, 8 <M_StringHeight+0x74>
   1a484:	80 80 f1 c0 	move s4, s3
   1a488:	42 04 00 05 	add_i s2, s2, 1
   1a48c:	24 80 50 c0 	add_i s1, s4, s1
   1a490:	a2 00 80 c1 	cmplt_u s5, s2, s0
   1a494:	e5 fe ff f5 	bnz s5, -36 <M_StringHeight+0x5c>
   1a498:	02 00 00 f6 	b 8 <M_StringHeight+0x8c>
   1a49c:	20 80 fc c0 	move s1, s25
   1a4a0:	00 80 f0 c0 	move s0, s1
   1a4a4:	fe c3 00 a8 	load_32 ra, 48(sp)
   1a4a8:	5e d3 00 a8 	load_32 s26, 52(sp)
   1a4ac:	3e e3 00 a8 	load_32 s25, 56(sp)
   1a4b0:	1e f3 00 a8 	load_32 s24, 60(sp)
   1a4b4:	de 03 01 05 	add_i sp, sp, 64
   1a4b8:	1f 00 00 f0 	ret

000000000001a4bc M_Responder:
   1a4bc:	de 03 fe 05 	add_i sp, sp, -128
   1a4c0:	1e f3 01 88 	store_32 s24, 124(sp)
   1a4c4:	3e e3 01 88 	store_32 s25, 120(sp)
   1a4c8:	5e d3 01 88 	store_32 s26, 116(sp)
   1a4cc:	7e c3 01 88 	store_32 s27, 112(sp)
   1a4d0:	fe b3 01 88 	store_32 ra, 108(sp)
   1a4d4:	00 03 f0 c0 	move s24, s0
   1a4d8:	18 00 00 a8 	load_32 s0, (s24)
   1a4dc:	20 0c 00 11 	cmpne_i s1, s0, 3
   1a4e0:	e1 01 00 f4 	bnz s1, 60 <M_Responder+0x60>
   1a4e4:	60 0f 00 4f 	movehi s27, 96
   1a4e8:	5b 33 1d 00 	or s26, s27, 1868
   1a4ec:	3a 03 00 a8 	load_32 s25, (s26)
   1a4f0:	d9 ce ff f9 	call -50332 <I_GetTime>
   1a4f4:	19 00 30 c1 	cmpge_i s0, s25, s0
   1a4f8:	00 01 00 f4 	bnz s0, 32 <M_Responder+0x5c>
   1a4fc:	18 30 00 a8 	load_32 s0, 12(s24)
   1a500:	20 fc ff 10 	cmpeq_i s1, s0, -1
   1a504:	41 07 00 f4 	bnz s1, 232 <M_Responder+0x130>
   1a508:	00 04 00 11 	cmpne_i s0, s0, 1
   1a50c:	80 08 00 f4 	bnz s0, 272 <M_Responder+0x160>
   1a510:	20 bf 02 0f 	move s25, 175
   1a514:	37 00 00 f6 	b 220 <M_Responder+0x134>
   1a518:	18 00 00 a8 	load_32 s0, (s24)
   1a51c:	20 08 00 11 	cmpne_i s1, s0, 2
   1a520:	61 03 00 f4 	bnz s1, 108 <M_Responder+0xd0>
   1a524:	60 0f 00 4f 	movehi s27, 96
   1a528:	5b 43 1d 00 	or s26, s27, 1872
   1a52c:	3a 03 00 a8 	load_32 s25, (s26)
   1a530:	c9 ce ff f9 	call -50396 <I_GetTime>
   1a534:	19 00 40 c1 	cmplt_i s0, s25, s0
   1a538:	40 00 00 f4 	bnz s0, 8 <M_Responder+0x84>
   1a53c:	13 00 00 f6 	b 76 <M_Responder+0xcc>
   1a540:	00 0c 00 4f 	movehi s0, 96
   1a544:	7e a3 01 88 	store_32 s27, 104(sp)
   1a548:	5e 93 01 88 	store_32 s26, 100(sp)
   1a54c:	40 0c 00 4f 	movehi s2, 96
   1a550:	40 53 1d 00 	or s26, s0, 1876
   1a554:	18 30 00 a8 	load_32 s0, 12(s24)
   1a558:	62 63 1d 00 	or s27, s2, 1880
   1a55c:	3a 00 00 a8 	load_32 s1, (s26)
   1a560:	01 00 50 c0 	add_i s0, s1, s0
   1a564:	1a 00 00 88 	store_32 s0, (s26)
   1a568:	3b 00 00 a8 	load_32 s1, (s27)
   1a56c:	41 88 ff 05 	add_i s2, s1, -30
   1a570:	40 00 41 c1 	cmplt_i s2, s0, s2
   1a574:	42 00 00 f4 	bnz s2, 8 <M_Responder+0xc0>
   1a578:	0c 00 00 f6 	b 48 <M_Responder+0xec>
   1a57c:	20 bf 02 0f 	move s25, 175
   1a580:	00 88 ff 0f 	move s0, -30
   1a584:	0e 00 00 f6 	b 56 <M_Responder+0x100>
   1a588:	18 00 00 a8 	load_32 s0, (s24)
   1a58c:	a0 00 00 f4 	bnz s0, 20 <M_Responder+0xe4>
   1a590:	38 13 00 a8 	load_32 s25, 4(s24)
   1a594:	19 fc ff 10 	cmpeq_i s0, s25, -1
   1a598:	40 00 00 f4 	bnz s0, 8 <M_Responder+0xe4>
   1a59c:	87 00 00 f6 	b 540 <M_Responder+0x2fc>
   1a5a0:	a0 00 00 0f 	move s5, 0
   1a5a4:	4f 01 00 f6 	b 1340 <M_Responder+0x624>
   1a5a8:	21 78 00 05 	add_i s1, s1, 30
   1a5ac:	00 80 50 c1 	cmple_i s0, s0, s1
   1a5b0:	20 06 00 f4 	bnz s0, 196 <M_Responder+0x1b8>
   1a5b4:	20 b7 02 0f 	move s25, 173
   1a5b8:	00 78 00 0f 	move s0, 30
   1a5bc:	1e 80 01 88 	store_32 s0, 96(sp)
   1a5c0:	a5 ce ff f9 	call -50540 <I_GetTime>
   1a5c4:	3e a0 01 a8 	load_32 s1, 104(sp)
   1a5c8:	00 14 00 05 	add_i s0, s0, 5
   1a5cc:	21 40 1d 00 	or s1, s1, 1872
   1a5d0:	01 00 00 88 	store_32 s0, (s1)
   1a5d4:	1b 00 00 a8 	load_32 s0, (s27)
   1a5d8:	3e 80 01 a8 	load_32 s1, 96(sp)
   1a5dc:	00 80 50 c0 	add_i s0, s0, s1
   1a5e0:	1b 00 00 88 	store_32 s0, (s27)
   1a5e4:	1a 00 00 88 	store_32 s0, (s26)
   1a5e8:	24 00 00 f6 	b 144 <M_Responder+0x1bc>
   1a5ec:	20 b7 02 0f 	move s25, 173
   1a5f0:	99 ce ff f9 	call -50588 <I_GetTime>
   1a5f4:	3b 30 1d 00 	or s1, s27, 1868
   1a5f8:	00 14 00 05 	add_i s0, s0, 5
   1a5fc:	01 00 00 88 	store_32 s0, (s1)
   1a600:	18 20 00 a8 	load_32 s0, 8(s24)
   1a604:	20 fc ff 10 	cmpeq_i s1, s0, -1
   1a608:	41 01 00 f4 	bnz s1, 40 <M_Responder+0x174>
   1a60c:	00 04 00 11 	cmpne_i s0, s0, 1
   1a610:	a0 01 00 f4 	bnz s0, 52 <M_Responder+0x188>
   1a614:	20 bb 02 0f 	move s25, 174
   1a618:	07 00 00 f6 	b 28 <M_Responder+0x178>
   1a61c:	20 ff ff 0f 	move s25, -1
   1a620:	18 20 00 a8 	load_32 s0, 8(s24)
   1a624:	20 fc ff 10 	cmpeq_i s1, s0, -1
   1a628:	41 00 00 f4 	bnz s1, 8 <M_Responder+0x174>
   1a62c:	f8 ff ff f7 	b -32 <M_Responder+0x150>
   1a630:	20 b3 02 0f 	move s25, 172
   1a634:	88 ce ff f9 	call -50656 <I_GetTime>
   1a638:	3b 30 1d 00 	or s1, s27, 1868
   1a63c:	00 08 00 05 	add_i s0, s0, 2
   1a640:	01 00 00 88 	store_32 s0, (s1)
   1a644:	18 10 00 a8 	load_32 s0, 4(s24)
   1a648:	20 04 00 01 	and s1, s0, 1
   1a64c:	c1 00 00 f2 	bz s1, 24 <M_Responder+0x1a8>
   1a650:	81 ce ff f9 	call -50684 <I_GetTime>
   1a654:	00 14 00 05 	add_i s0, s0, 5
   1a658:	1a 00 00 88 	store_32 s0, (s26)
   1a65c:	18 10 00 a8 	load_32 s0, 4(s24)
   1a660:	20 37 00 0f 	move s25, 13
   1a664:	00 08 00 01 	and s0, s0, 2
   1a668:	40 0a 00 f2 	bz s0, 328 <M_Responder+0x2f4>
   1a66c:	00 17 00 0f 	move s24, 5
   1a670:	2e 00 00 f6 	b 184 <M_Responder+0x26c>
   1a674:	20 ff ff 0f 	move s25, -1
   1a678:	00 0c 00 4f 	movehi s0, 96
   1a67c:	40 0c 00 4f 	movehi s2, 96
   1a680:	40 73 1d 00 	or s26, s0, 1884
   1a684:	18 20 00 a8 	load_32 s0, 8(s24)
   1a688:	62 83 1d 00 	or s27, s2, 1888
   1a68c:	3a 00 00 a8 	load_32 s1, (s26)
   1a690:	01 00 50 c0 	add_i s0, s1, s0
   1a694:	1a 00 00 88 	store_32 s0, (s26)
   1a698:	3b 00 00 a8 	load_32 s1, (s27)
   1a69c:	41 88 ff 05 	add_i s2, s1, -30
   1a6a0:	40 00 41 c1 	cmplt_i s2, s0, s2
   1a6a4:	42 00 00 f4 	bnz s2, 8 <M_Responder+0x1f0>
   1a6a8:	04 00 00 f6 	b 16 <M_Responder+0x1fc>
   1a6ac:	20 b3 02 0f 	move s25, 172
   1a6b0:	00 88 ff 0f 	move s0, -30
   1a6b4:	06 00 00 f6 	b 24 <M_Responder+0x210>
   1a6b8:	21 78 00 05 	add_i s1, s1, 30
   1a6bc:	00 80 50 c1 	cmple_i s0, s0, s1
   1a6c0:	80 06 00 f4 	bnz s0, 208 <M_Responder+0x2d4>
   1a6c4:	20 bb 02 0f 	move s25, 174
   1a6c8:	00 78 00 0f 	move s0, 30
   1a6cc:	1e 80 01 88 	store_32 s0, 96(sp)
   1a6d0:	61 ce ff f9 	call -50812 <I_GetTime>
   1a6d4:	3e a0 01 a8 	load_32 s1, 104(sp)
   1a6d8:	00 14 00 05 	add_i s0, s0, 5
   1a6dc:	21 40 1d 00 	or s1, s1, 1872
   1a6e0:	01 00 00 88 	store_32 s0, (s1)
   1a6e4:	1b 00 00 a8 	load_32 s0, (s27)
   1a6e8:	3e 80 01 a8 	load_32 s1, 96(sp)
   1a6ec:	00 80 50 c0 	add_i s0, s0, s1
   1a6f0:	1b 00 00 88 	store_32 s0, (s27)
   1a6f4:	1a 00 00 88 	store_32 s0, (s26)
   1a6f8:	18 10 00 a8 	load_32 s0, 4(s24)
   1a6fc:	5e 93 01 a8 	load_32 s26, 100(sp)
   1a700:	20 04 00 01 	and s1, s0, 1
   1a704:	01 05 00 f2 	bz s1, 160 <M_Responder+0x2e8>
   1a708:	53 ce ff f9 	call -50868 <I_GetTime>
   1a70c:	00 3c 00 05 	add_i s0, s0, 15
   1a710:	1a 00 00 88 	store_32 s0, (s26)
   1a714:	18 10 00 a8 	load_32 s0, 4(s24)
   1a718:	20 37 00 0f 	move s25, 13
   1a71c:	00 08 00 01 	and s0, s0, 2
   1a720:	80 04 00 f2 	bz s0, 144 <M_Responder+0x2f4>
   1a724:	00 3f 00 0f 	move s24, 15
   1a728:	4b ce ff f9 	call -50900 <I_GetTime>
   1a72c:	20 ff 01 0f 	move s25, 127
   1a730:	00 00 5c c0 	add_i s0, s0, s24
   1a734:	1a 00 00 88 	store_32 s0, (s26)
   1a738:	1b 04 00 4f 	movehi s0, 59
   1a73c:	00 c0 20 00 	or s0, s0, 2096
   1a740:	20 00 00 a8 	load_32 s1, (s0)
   1a744:	41 00 00 f2 	bz s1, 8 <M_Responder+0x290>
   1a748:	20 00 00 f6 	b 128 <M_Responder+0x30c>
   1a74c:	1b 04 00 4f 	movehi s0, 59
   1a750:	60 b3 1f 00 	or s27, s0, 2028
   1a754:	1b 00 00 a8 	load_32 s0, (s27)
   1a758:	80 14 00 f2 	bz s0, 656 <M_Responder+0x52c>
   1a75c:	1b 04 00 4f 	movehi s0, 59
   1a760:	00 80 1f 00 	or s0, s0, 2016
   1a764:	00 00 00 a8 	load_32 s0, (s0)
   1a768:	00 04 00 11 	cmpne_i s0, s0, 1
   1a76c:	40 19 00 f4 	bnz s0, 808 <M_Responder+0x5d8>
   1a770:	19 b4 01 12 	cmpgt_i s0, s25, 109
   1a774:	a0 00 00 0f 	move s5, 0
   1a778:	60 18 00 f4 	bnz s0, 780 <M_Responder+0x5c8>
   1a77c:	19 6c 00 10 	cmpeq_i s0, s25, 27
   1a780:	a0 18 00 f4 	bnz s0, 788 <M_Responder+0x5d8>
   1a784:	19 80 00 10 	cmpeq_i s0, s25, 32
   1a788:	60 18 00 f4 	bnz s0, 780 <M_Responder+0x5d8>
   1a78c:	d5 00 00 f6 	b 852 <M_Responder+0x624>
   1a790:	18 10 00 a8 	load_32 s0, 4(s24)
   1a794:	5e 93 01 a8 	load_32 s26, 100(sp)
   1a798:	20 04 00 01 	and s1, s0, 1
   1a79c:	41 00 00 f2 	bz s1, 8 <M_Responder+0x2e8>
   1a7a0:	da ff ff f7 	b -152 <M_Responder+0x24c>
   1a7a4:	00 08 00 01 	and s0, s0, 2
   1a7a8:	40 00 00 f2 	bz s0, 8 <M_Responder+0x2f4>
   1a7ac:	de ff ff f7 	b -136 <M_Responder+0x268>
   1a7b0:	19 fc ff 10 	cmpeq_i s0, s25, -1
   1a7b4:	60 ef ff f5 	bnz s0, -532 <M_Responder+0xe4>
   1a7b8:	1b 04 00 4f 	movehi s0, 59
   1a7bc:	00 c0 20 00 	or s0, s0, 2096
   1a7c0:	20 00 00 a8 	load_32 s1, (s0)
   1a7c4:	41 fc ff f3 	bz s1, -120 <M_Responder+0x290>
   1a7c8:	39 34 00 10 	cmpeq_i s1, s25, 13
   1a7cc:	c1 02 00 f4 	bnz s1, 88 <M_Responder+0x368>
   1a7d0:	39 6c 00 10 	cmpeq_i s1, s25, 27
   1a7d4:	c1 05 00 f4 	bnz s1, 184 <M_Responder+0x3d0>
   1a7d8:	19 fc 01 11 	cmpne_i s0, s25, 127
   1a7dc:	20 07 00 f4 	bnz s0, 228 <M_Responder+0x404>
   1a7e0:	1b 04 00 4f 	movehi s0, 59
   1a7e4:	a0 04 00 0f 	move s5, 1
   1a7e8:	00 40 20 00 	or s0, s0, 2064
   1a7ec:	20 00 00 a8 	load_32 s1, (s0)
   1a7f0:	41 04 00 14 	cmplt_i s2, s1, 1
   1a7f4:	62 17 00 f4 	bnz s2, 748 <M_Responder+0x624>
   1a7f8:	5b 04 00 4f 	movehi s2, 59
   1a7fc:	21 fc ff 05 	add_i s1, s1, -1
   1a800:	20 00 00 88 	store_32 s1, (s0)
   1a804:	1b 04 00 4f 	movehi s0, 59
   1a808:	42 b0 20 00 	or s2, s2, 2092
   1a80c:	00 d0 20 00 	or s0, s0, 2100
   1a810:	42 00 00 a8 	load_32 s2, (s2)
   1a814:	42 60 00 07 	mull_i s2, s2, 24
   1a818:	00 00 51 c0 	add_i s0, s0, s2
   1a81c:	00 80 50 c0 	add_i s0, s0, s1
   1a820:	6f 00 00 f6 	b 444 <M_Responder+0x520>
   1a824:	3b 04 00 4f 	movehi s1, 59
   1a828:	00 03 00 0f 	move s24, 0
   1a82c:	00 03 00 88 	store_32 s24, (s0)
   1a830:	1b 04 00 4f 	movehi s0, 59
   1a834:	21 b0 20 00 	or s1, s1, 2092
   1a838:	a0 04 00 0f 	move s5, 1
   1a83c:	00 d0 20 00 	or s0, s0, 2100
   1a840:	21 03 00 a8 	load_32 s25, (s1)
   1a844:	39 60 00 07 	mull_i s1, s25, 24
   1a848:	20 80 50 c0 	add_i s1, s0, s1
   1a84c:	01 00 00 a0 	load_u8 s0, (s1)
   1a850:	80 14 00 f2 	bz s0, 656 <M_Responder+0x624>
   1a854:	40 83 f2 c0 	move s26, s5
   1a858:	00 80 fc c0 	move s0, s25
   1a85c:	a5 f3 ff f9 	call -12652 <G_SaveGame>
   1a860:	1b 04 00 4f 	movehi s0, 59
   1a864:	3b 04 00 4f 	movehi s1, 59
   1a868:	40 60 1f 00 	or s2, s0, 2008
   1a86c:	01 10 20 00 	or s0, s1, 2052
   1a870:	02 03 00 88 	store_32 s24, (s2)
   1a874:	20 00 00 a8 	load_32 s1, (s0)
   1a878:	21 f8 ff 11 	cmpne_i s1, s1, -2
   1a87c:	21 14 00 f4 	bnz s1, 644 <M_Responder+0x644>
   1a880:	20 03 00 88 	store_32 s25, (s0)
   1a884:	a0 00 fd c0 	move s5, s26
   1a888:	96 00 00 f6 	b 600 <M_Responder+0x624>
   1a88c:	3b 04 00 4f 	movehi s1, 59
   1a890:	40 00 00 0f 	move s2, 0
   1a894:	40 00 00 88 	store_32 s2, (s0)
   1a898:	1b 04 00 4f 	movehi s0, 59
   1a89c:	21 b0 20 00 	or s1, s1, 2092
   1a8a0:	00 d0 20 00 	or s0, s0, 2100
   1a8a4:	21 00 00 a8 	load_32 s1, (s1)
   1a8a8:	21 60 00 07 	mull_i s1, s1, 24
   1a8ac:	00 80 50 c0 	add_i s0, s0, s1
   1a8b0:	3b 04 00 4f 	movehi s1, 59
   1a8b4:	21 50 20 00 	or s1, s1, 2068
   1a8b8:	c5 df 00 f8 	call 229140 <strcpy>
   1a8bc:	88 00 00 f6 	b 544 <M_Responder+0x620>
   1a8c0:	00 80 fc c0 	move s0, s25
   1a8c4:	88 df 00 f8 	call 228896 <toupper>
   1a8c8:	40 00 f0 c0 	move s2, s0
   1a8cc:	a0 04 00 0f 	move s5, 1
   1a8d0:	02 80 00 10 	cmpeq_i s0, s2, 32
   1a8d4:	80 00 00 f4 	bnz s0, 16 <M_Responder+0x428>
   1a8d8:	02 7c ff 05 	add_i s0, s2, -33
   1a8dc:	00 f8 00 16 	cmpgt_u s0, s0, 62
   1a8e0:	00 10 00 f4 	bnz s0, 512 <M_Responder+0x624>
   1a8e4:	1b 04 00 4f 	movehi s0, 59
   1a8e8:	22 80 ff 05 	add_i s1, s2, -32
   1a8ec:	60 40 20 00 	or s3, s0, 2064
   1a8f0:	01 7c 01 16 	cmpgt_u s0, s1, 95
   1a8f4:	83 00 00 a8 	load_32 s4, (s3)
   1a8f8:	40 0f 00 f4 	bnz s0, 488 <M_Responder+0x624>
   1a8fc:	04 58 00 12 	cmpgt_i s0, s4, 22
   1a900:	00 0f 00 f4 	bnz s0, 480 <M_Responder+0x624>
   1a904:	1b 04 00 4f 	movehi s0, 59
   1a908:	3b 04 00 4f 	movehi s1, 59
   1a90c:	00 b0 20 00 	or s0, s0, 2092
   1a910:	21 d0 20 00 	or s1, s1, 2100
   1a914:	00 00 00 a8 	load_32 s0, (s0)
   1a918:	00 60 00 07 	mull_i s0, s0, 24
   1a91c:	01 00 50 c0 	add_i s0, s1, s0
   1a920:	60 03 00 a0 	load_u8 s27, (s0)
   1a924:	3b 05 00 f2 	bz s27, 164 <M_Responder+0x50c>
   1a928:	9e 40 01 88 	store_32 s4, 80(sp)
   1a92c:	7e 50 01 88 	store_32 s3, 84(sp)
   1a930:	5e 60 01 88 	store_32 s2, 88(sp)
   1a934:	be 70 01 88 	store_32 s5, 92(sp)
   1a938:	1e a0 01 88 	store_32 s0, 104(sp)
   1a93c:	99 df 00 f8 	call 228964 <strlen>
   1a940:	1e 90 01 88 	store_32 s0, 100(sp)
   1a944:	00 0c 00 4f 	movehi s0, 96
   1a948:	20 03 00 0f 	move s25, 0
   1a94c:	00 13 00 0f 	move s24, 4
   1a950:	00 b0 02 00 	or s0, s0, 172
   1a954:	1e 80 01 88 	store_32 s0, 96(sp)
   1a958:	40 83 fc c0 	move s26, s25
   1a95c:	03 00 00 f6 	b 12 <M_Responder+0x4ac>
   1a960:	00 80 5c c0 	add_i s0, s0, s25
   1a964:	60 03 00 a0 	load_u8 s27, (s0)
   1a968:	00 80 dd c1 	sext_8 s0, s27
   1a96c:	5e df 00 f8 	call 228728 <toupper>
   1a970:	20 7c ff 05 	add_i s1, s0, -33
   1a974:	00 00 fc c0 	move s0, s24
   1a978:	41 f8 00 16 	cmpgt_u s2, s1, 62
   1a97c:	c2 00 00 f4 	bnz s2, 24 <M_Responder+0x4d8>
   1a980:	01 08 00 0b 	shl s0, s1, 2
   1a984:	3e 80 01 a8 	load_32 s1, 96(sp)
   1a988:	01 00 50 c0 	add_i s0, s1, s0
   1a98c:	00 00 00 a8 	load_32 s0, (s0)
   1a990:	00 00 00 a6 	load_s16 s0, (s0)
   1a994:	3e 90 01 a8 	load_32 s1, 100(sp)
   1a998:	39 07 00 05 	add_i s25, s25, 1
   1a99c:	5a 03 50 c0 	add_i s26, s26, s0
   1a9a0:	1e a0 01 a8 	load_32 s0, 104(sp)
   1a9a4:	39 80 70 c1 	cmpge_u s1, s25, s1
   1a9a8:	41 00 00 f4 	bnz s1, 8 <M_Responder+0x4f4>
   1a9ac:	ed ff ff f7 	b -76 <M_Responder+0x4a4>
   1a9b0:	be 70 01 a8 	load_32 s5, 92(sp)
   1a9b4:	3a bc 02 12 	cmpgt_i s1, s26, 175
   1a9b8:	5e 60 01 a8 	load_32 s2, 88(sp)
   1a9bc:	7e 50 01 a8 	load_32 s3, 84(sp)
   1a9c0:	9e 40 01 a8 	load_32 s4, 80(sp)
   1a9c4:	e1 08 00 f4 	bnz s1, 284 <M_Responder+0x624>
   1a9c8:	c4 04 00 05 	add_i s6, s4, 1
   1a9cc:	c3 00 00 88 	store_32 s6, (s3)
   1a9d0:	20 00 52 c0 	add_i s1, s0, s4
   1a9d4:	00 00 53 c0 	add_i s0, s0, s6
   1a9d8:	41 00 00 82 	store_8 s2, (s1)
   1a9dc:	20 00 00 0f 	move s1, 0
   1a9e0:	20 00 00 82 	store_8 s1, (s0)
   1a9e4:	3f 00 00 f6 	b 252 <M_Responder+0x624>
   1a9e8:	1a 04 00 4f 	movehi s0, 58
   1a9ec:	39 ec 02 11 	cmpne_i s1, s25, 187
   1a9f0:	00 e0 27 00 	or s0, s0, 2552
   1a9f4:	00 00 00 a8 	load_32 s0, (s0)
   1a9f8:	81 00 00 f4 	bnz s1, 16 <M_Responder+0x54c>
   1a9fc:	60 00 00 f2 	bz s0, 12 <M_Responder+0x54c>
   1aa00:	9a f1 ff f9 	call -14744 <G_ScreenShot>
   1aa04:	36 00 00 f6 	b 216 <M_Responder+0x620>
   1aa08:	1b 04 00 4f 	movehi s0, 59
   1aa0c:	40 63 1f 00 	or s26, s0, 2008
   1aa10:	1a 00 00 a8 	load_32 s0, (s26)
   1aa14:	40 00 00 f4 	bnz s0, 8 <M_Responder+0x560>
   1aa18:	3c 00 00 f6 	b 240 <M_Responder+0x64c>
   1aa1c:	19 04 fe 05 	add_i s0, s25, -127
   1aa20:	20 c0 00 16 	cmpgt_u s1, s0, 48
   1aa24:	01 0a 00 f4 	bnz s1, 320 <M_Responder+0x6a8>
   1aa28:	23 00 00 4f 	movehi s1, 3
   1aa2c:	00 08 00 0b 	shl s0, s0, 2
   1aa30:	21 60 30 00 	or s1, s1, 3096
   1aa34:	00 80 50 c0 	add_i s0, s0, s1
   1aa38:	00 00 00 a8 	load_32 s0, (s0)
   1aa3c:	00 00 00 f0 	b s0
   1aa40:	1b 04 00 4f 	movehi s0, 59
   1aa44:	3b 04 00 4f 	movehi s1, 59
   1aa48:	a0 04 00 0f 	move s5, 1
   1aa4c:	00 30 1f 00 	or s0, s0, 1996
   1aa50:	21 60 1c 00 	or s1, s1, 1816
   1aa54:	40 00 00 a6 	load_s16 s2, (s0)
   1aa58:	61 00 00 a8 	load_32 s3, (s1)
   1aa5c:	43 50 00 86 	store_16 s2, 20(s3)
   1aa60:	43 10 00 a8 	load_32 s2, 4(s3)
   1aa64:	e2 03 00 f2 	bz s2, 124 <M_Responder+0x624>
   1aa68:	41 00 00 88 	store_32 s2, (s1)
   1aa6c:	22 50 00 a6 	load_s16 s1, 20(s2)
   1aa70:	20 00 00 86 	store_16 s1, (s0)
   1aa74:	00 00 00 0f 	move s0, 0
   1aa78:	20 5c 00 0f 	move s1, 23
   1aa7c:	00 83 f2 c0 	move s24, s5
   1aa80:	42 02 00 f6 	b 2312 <M_Responder+0xecc>
   1aa84:	19 e4 01 10 	cmpeq_i s0, s25, 121
   1aa88:	60 00 00 f4 	bnz s0, 12 <M_Responder+0x5d8>
   1aa8c:	19 b8 01 11 	cmpne_i s0, s25, 110
   1aa90:	80 02 00 f4 	bnz s0, 80 <M_Responder+0x624>
   1aa94:	1b 04 00 4f 	movehi s0, 59
   1aa98:	3b 04 00 4f 	movehi s1, 59
   1aa9c:	00 03 00 0f 	move s24, 0
   1aaa0:	00 70 1f 00 	or s0, s0, 2012
   1aaa4:	41 63 1f 00 	or s26, s1, 2008
   1aaa8:	3b 04 00 4f 	movehi s1, 59
   1aaac:	00 00 00 a8 	load_32 s0, (s0)
   1aab0:	1a 00 00 88 	store_32 s0, (s26)
   1aab4:	01 90 1f 00 	or s0, s1, 2020
   1aab8:	1b 03 00 88 	store_32 s24, (s27)
   1aabc:	20 00 00 a8 	load_32 s1, (s0)
   1aac0:	61 00 00 f2 	bz s1, 12 <M_Responder+0x610>
   1aac4:	00 80 fc c0 	move s0, s25
   1aac8:	21 00 00 fc 	call s1
   1aacc:	1a 03 00 88 	store_32 s24, (s26)
   1aad0:	20 60 00 0f 	move s1, 24
   1aad4:	00 00 fc c0 	move s0, s24
   1aad8:	43 c6 00 f8 	call 203020 <S_StartSound>
   1aadc:	a0 04 00 0f 	move s5, 1
   1aae0:	00 80 f2 c0 	move s0, s5
   1aae4:	fe b3 01 a8 	load_32 ra, 108(sp)
   1aae8:	7e c3 01 a8 	load_32 s27, 112(sp)
   1aaec:	5e d3 01 a8 	load_32 s26, 116(sp)
   1aaf0:	3e e3 01 a8 	load_32 s25, 120(sp)
   1aaf4:	1e f3 01 a8 	load_32 s24, 124(sp)
   1aaf8:	de 03 02 05 	add_i sp, sp, 128
   1aafc:	1f 00 00 f0 	ret
   1ab00:	a0 00 fd c0 	move s5, s26
   1ab04:	f7 ff ff f7 	b -36 <M_Responder+0x624>
   1ab08:	19 e8 02 12 	cmpgt_i s0, s25, 186
   1ab0c:	a0 00 00 0f 	move s5, 0
   1ab10:	40 00 00 f4 	bnz s0, 8 <M_Responder+0x65c>
   1ab14:	38 00 00 f6 	b 224 <M_Responder+0x738>
   1ab18:	19 14 fd 05 	add_i s0, s25, -187
   1ab1c:	20 70 00 16 	cmpgt_u s1, s0, 28
   1ab20:	01 fe ff f5 	bnz s1, -64 <M_Responder+0x624>
   1ab24:	23 00 00 4f 	movehi s1, 3
   1ab28:	00 08 00 0b 	shl s0, s0, 2
   1ab2c:	21 70 33 00 	or s1, s1, 3292
   1ab30:	00 80 50 c0 	add_i s0, s0, s1
   1ab34:	00 00 00 a8 	load_32 s0, (s0)
   1ab38:	00 00 00 f0 	b s0
   1ab3c:	0b 04 00 4f 	movehi s0, 43
   1ab40:	00 07 00 0f 	move s24, 1
   1ab44:	1a 03 00 88 	store_32 s24, (s26)
   1ab48:	00 00 40 00 	or s0, s0, 4096
   1ab4c:	00 00 00 a8 	load_32 s0, (s0)
   1ab50:	00 0c 00 10 	cmpeq_i s0, s0, 3
   1ab54:	20 3f 00 f4 	bnz s0, 2020 <M_Responder+0xe7c>
   1ab58:	13 04 00 4f 	movehi s0, 51
   1ab5c:	00 40 59 00 	or s0, s0, 5712
   1ab60:	f8 01 00 f6 	b 2016 <M_Responder+0xe84>
   1ab64:	19 34 00 10 	cmpeq_i s0, s25, 13
   1ab68:	a0 17 00 f4 	bnz s0, 756 <M_Responder+0x9a0>
   1ab6c:	19 6c 00 10 	cmpeq_i s0, s25, 27
   1ab70:	40 00 00 f4 	bnz s0, 8 <M_Responder+0x6bc>
   1ab74:	0c 00 00 f6 	b 48 <M_Responder+0x6e8>
   1ab78:	1b 04 00 4f 	movehi s0, 59
   1ab7c:	3b 04 00 4f 	movehi s1, 59
   1ab80:	00 30 1f 00 	or s0, s0, 1996
   1ab84:	21 60 1c 00 	or s1, s1, 1816
   1ab88:	00 00 00 a6 	load_s16 s0, (s0)
   1ab8c:	21 00 00 a8 	load_32 s1, (s1)
   1ab90:	01 50 00 86 	store_16 s0, 20(s1)
   1ab94:	00 00 00 0f 	move s0, 0
   1ab98:	1a 00 00 88 	store_32 s0, (s26)
   1ab9c:	20 60 00 0f 	move s1, 24
   1aba0:	ce ff ff f7 	b -200 <M_Responder+0x61c>
   1aba4:	1b 04 00 4f 	movehi s0, 59
   1aba8:	3b 04 00 4f 	movehi s1, 59
   1abac:	00 30 1f 00 	or s0, s0, 1996
   1abb0:	41 60 1c 00 	or s2, s1, 1816
   1abb4:	20 00 00 a6 	load_s16 s1, (s0)
   1abb8:	42 00 00 a8 	load_32 s2, (s2)
   1abbc:	82 00 00 a6 	load_s16 s4, (s2)
   1abc0:	60 80 f0 c0 	move s3, s1
   1abc4:	63 04 00 05 	add_i s3, s3, 1
   1abc8:	a3 00 42 c1 	cmplt_i s5, s3, s4
   1abcc:	45 00 00 f4 	bnz s5, 8 <M_Responder+0x718>
   1abd0:	ba 00 00 f6 	b 744 <M_Responder+0x9fc>
   1abd4:	a2 20 00 a8 	load_32 s5, 8(s2)
   1abd8:	c3 50 00 07 	mull_i s6, s3, 20
   1abdc:	a5 00 53 c0 	add_i s5, s5, s6
   1abe0:	a5 40 00 a2 	load_s8 s5, 16(s5)
   1abe4:	b9 80 12 c1 	cmpne_i s5, s25, s5
   1abe8:	e5 fe ff f5 	bnz s5, -36 <M_Responder+0x708>
   1abec:	60 00 00 86 	store_16 s3, (s0)
   1abf0:	ca 01 00 f6 	b 1832 <M_Responder+0xe5c>
   1abf4:	19 6c 00 10 	cmpeq_i s0, s25, 27
   1abf8:	80 33 00 f4 	bnz s0, 1648 <M_Responder+0xdac>
   1abfc:	19 b4 00 10 	cmpeq_i s0, s25, 45
   1ac00:	e0 34 00 f4 	bnz s0, 1692 <M_Responder+0xde0>
   1ac04:	19 f4 00 10 	cmpeq_i s0, s25, 61
   1ac08:	40 00 00 f4 	bnz s0, 8 <M_Responder+0x754>
   1ac0c:	b5 ff ff f7 	b -300 <M_Responder+0x624>
   1ac10:	00 0c 00 4f 	movehi s0, 96
   1ac14:	20 0c 00 4f 	movehi s1, 96
   1ac18:	00 d0 21 00 	or s0, s0, 2164
   1ac1c:	21 a0 02 00 	or s1, s1, 168
   1ac20:	00 00 00 a8 	load_32 s0, (s0)
   1ac24:	21 00 00 a8 	load_32 s1, (s1)
   1ac28:	01 00 00 c0 	or s0, s1, s0
   1ac2c:	a0 f5 ff f5 	bnz s0, -332 <M_Responder+0x624>
   1ac30:	1b 04 00 4f 	movehi s0, 59
   1ac34:	20 90 24 00 	or s1, s0, 2340
   1ac38:	1b 04 00 4f 	movehi s0, 59
   1ac3c:	41 00 00 a8 	load_32 s2, (s1)
   1ac40:	60 a0 24 00 	or s3, s0, 2344
   1ac44:	03 00 00 a8 	load_32 s0, (s3)
   1ac48:	82 1c 00 12 	cmpgt_i s4, s2, 7
   1ac4c:	04 35 00 f4 	bnz s4, 1696 <M_Responder+0xe30>
   1ac50:	00 04 00 05 	add_i s0, s0, 1
   1ac54:	03 00 00 88 	store_32 s0, (s3)
   1ac58:	42 04 00 05 	add_i s2, s2, 1
   1ac5c:	a3 01 00 f6 	b 1676 <M_Responder+0xe2c>
   1ac60:	1b 04 00 4f 	movehi s0, 59
   1ac64:	a0 04 00 0f 	move s5, 1
   1ac68:	00 63 1c 00 	or s24, s0, 1816
   1ac6c:	1b 04 00 4f 	movehi s0, 59
   1ac70:	38 00 00 a8 	load_32 s1, (s24)
   1ac74:	40 33 1f 00 	or s26, s0, 1996
   1ac78:	01 20 00 a8 	load_32 s0, 8(s1)
   1ac7c:	3a 00 00 a6 	load_s16 s1, (s26)
   1ac80:	21 50 00 07 	mull_i s1, s1, 20
   1ac84:	00 80 50 c0 	add_i s0, s0, s1
   1ac88:	20 30 00 a8 	load_32 s1, 12(s0)
   1ac8c:	a1 f2 ff f3 	bz s1, -428 <M_Responder+0x624>
   1ac90:	00 00 00 a4 	load_u16 s0, (s0)
   1ac94:	00 08 00 11 	cmpne_i s0, s0, 2
   1ac98:	40 f2 ff f5 	bnz s0, -440 <M_Responder+0x624>
   1ac9c:	20 03 00 0f 	move s25, 0
   1aca0:	20 58 00 0f 	move s1, 22
   1aca4:	00 80 fc c0 	move s0, s25
   1aca8:	60 83 f2 c0 	move s27, s5
   1acac:	ce c5 00 f8 	call 202552 <S_StartSound>
   1acb0:	18 00 00 a8 	load_32 s0, (s24)
   1acb4:	00 20 00 a8 	load_32 s0, 8(s0)
   1acb8:	3a 00 00 a6 	load_s16 s1, (s26)
   1acbc:	21 50 00 07 	mull_i s1, s1, 20
   1acc0:	00 80 50 c0 	add_i s0, s0, s1
   1acc4:	20 30 00 a8 	load_32 s1, 12(s0)
   1acc8:	00 80 fc c0 	move s0, s25
   1accc:	21 00 00 fc 	call s1
   1acd0:	a0 80 fd c0 	move s5, s27
   1acd4:	83 ff ff f7 	b -500 <M_Responder+0x624>
   1acd8:	1b 04 00 4f 	movehi s0, 59
   1acdc:	27 00 00 4f 	movehi s1, 7
   1ace0:	5b 04 00 4f 	movehi s2, 59
   1ace4:	00 33 1f 00 	or s24, s0, 1996
   1ace8:	61 ff 7f 00 	or s27, s1, 8191
   1acec:	22 63 1c 00 	or s25, s2, 1816
   1acf0:	18 00 00 a6 	load_s16 s0, (s24)
   1acf4:	40 4f 00 0f 	move s26, 19
   1acf8:	20 00 00 0f 	move s1, 0
   1acfc:	3e a0 01 88 	store_32 s1, 104(sp)
   1ad00:	20 04 00 0f 	move s1, 1
   1ad04:	3e 70 01 88 	store_32 s1, 92(sp)
   1ad08:	20 80 1d c0 	and s1, s0, s27
   1ad0c:	61 00 00 f4 	bnz s1, 12 <M_Responder+0x85c>
   1ad10:	19 00 00 a8 	load_32 s0, (s25)
   1ad14:	00 00 00 a6 	load_s16 s0, (s0)
   1ad18:	00 fc ff 05 	add_i s0, s0, -1
   1ad1c:	18 00 00 86 	store_16 s0, (s24)
   1ad20:	1e a0 01 a8 	load_32 s0, 104(sp)
   1ad24:	20 00 fd c0 	move s1, s26
   1ad28:	af c5 00 f8 	call 202428 <S_StartSound>
   1ad2c:	19 00 00 a8 	load_32 s0, (s25)
   1ad30:	20 20 00 a8 	load_32 s1, 8(s0)
   1ad34:	18 00 00 a6 	load_s16 s0, (s24)
   1ad38:	40 50 00 07 	mull_i s2, s0, 20
   1ad3c:	21 00 51 c0 	add_i s1, s1, s2
   1ad40:	21 00 00 a4 	load_u16 s1, (s1)
   1ad44:	21 80 0d c1 	cmpeq_i s1, s1, s27
   1ad48:	01 fe ff f5 	bnz s1, -64 <M_Responder+0x84c>
   1ad4c:	be 70 01 a8 	load_32 s5, 92(sp)
   1ad50:	64 ff ff f7 	b -624 <M_Responder+0x624>
   1ad54:	1b 04 00 4f 	movehi s0, 59
   1ad58:	a0 04 00 0f 	move s5, 1
   1ad5c:	00 63 1c 00 	or s24, s0, 1816
   1ad60:	1b 04 00 4f 	movehi s0, 59
   1ad64:	38 00 00 a8 	load_32 s1, (s24)
   1ad68:	20 33 1f 00 	or s25, s0, 1996
   1ad6c:	01 20 00 a8 	load_32 s0, 8(s1)
   1ad70:	39 00 00 a6 	load_s16 s1, (s25)
   1ad74:	21 50 00 07 	mull_i s1, s1, 20
   1ad78:	00 80 50 c0 	add_i s0, s0, s1
   1ad7c:	20 30 00 a8 	load_32 s1, 12(s0)
   1ad80:	01 eb ff f3 	bz s1, -672 <M_Responder+0x624>
   1ad84:	00 00 00 a4 	load_u16 s0, (s0)
   1ad88:	00 08 00 11 	cmpne_i s0, s0, 2
   1ad8c:	a0 ea ff f5 	bnz s0, -684 <M_Responder+0x624>
   1ad90:	00 00 00 0f 	move s0, 0
   1ad94:	20 58 00 0f 	move s1, 22
   1ad98:	93 c5 00 f8 	call 202316 <S_StartSound>
   1ad9c:	18 00 00 a8 	load_32 s0, (s24)
   1ada0:	00 07 00 0f 	move s24, 1
   1ada4:	00 20 00 a8 	load_32 s0, 8(s0)
   1ada8:	39 00 00 a6 	load_s16 s1, (s25)
   1adac:	21 50 00 07 	mull_i s1, s1, 20
   1adb0:	00 80 50 c0 	add_i s0, s0, s1
   1adb4:	20 30 00 a8 	load_32 s1, 12(s0)
   1adb8:	00 00 fc c0 	move s0, s24
   1adbc:	21 00 00 fc 	call s1
   1adc0:	a0 00 fc c0 	move s5, s24
   1adc4:	47 ff ff f7 	b -740 <M_Responder+0x624>
   1adc8:	1b 04 00 4f 	movehi s0, 59
   1adcc:	3b 04 00 4f 	movehi s1, 59
   1add0:	47 00 00 4f 	movehi s2, 7
   1add4:	60 33 1f 00 	or s27, s0, 1996
   1add8:	21 60 1c 00 	or s1, s1, 1816
   1addc:	20 03 00 0f 	move s25, 0
   1ade0:	1b 00 00 a6 	load_s16 s0, (s27)
   1ade4:	40 4f 00 0f 	move s26, 19
   1ade8:	3e a0 01 88 	store_32 s1, 104(sp)
   1adec:	00 07 00 0f 	move s24, 1
   1adf0:	21 00 00 a8 	load_32 s1, (s1)
   1adf4:	42 fc 7f 00 	or s2, s2, 8191
   1adf8:	5e 90 01 88 	store_32 s2, 100(sp)
   1adfc:	21 00 00 a6 	load_s16 s1, (s1)
   1ae00:	40 00 e0 c1 	sext_16 s2, s0
   1ae04:	21 fc ff 05 	add_i s1, s1, -1
   1ae08:	21 00 21 c1 	cmpgt_i s1, s1, s2
   1ae0c:	61 00 00 f4 	bnz s1, 12 <M_Responder+0x95c>
   1ae10:	00 80 fc c0 	move s0, s25
   1ae14:	02 00 00 f6 	b 8 <M_Responder+0x960>
   1ae18:	00 04 00 05 	add_i s0, s0, 1
   1ae1c:	1b 00 00 86 	store_16 s0, (s27)
   1ae20:	00 80 fc c0 	move s0, s25
   1ae24:	20 00 fd c0 	move s1, s26
   1ae28:	6f c5 00 f8 	call 202172 <S_StartSound>
   1ae2c:	1e a0 01 a8 	load_32 s0, 104(sp)
   1ae30:	20 00 00 a8 	load_32 s1, (s0)
   1ae34:	41 20 00 a8 	load_32 s2, 8(s1)
   1ae38:	1b 00 00 a6 	load_s16 s0, (s27)
   1ae3c:	60 50 00 07 	mull_i s3, s0, 20
   1ae40:	42 80 51 c0 	add_i s2, s2, s3
   1ae44:	42 00 00 a4 	load_u16 s2, (s2)
   1ae48:	7e 90 01 a8 	load_32 s3, 100(sp)
   1ae4c:	a0 00 fc c0 	move s5, s24
   1ae50:	42 80 01 c1 	cmpeq_i s2, s2, s3
   1ae54:	42 fd ff f5 	bnz s2, -88 <M_Responder+0x940>
   1ae58:	22 ff ff f7 	b -888 <M_Responder+0x624>
   1ae5c:	1b 04 00 4f 	movehi s0, 59
   1ae60:	3b 04 00 4f 	movehi s1, 59
   1ae64:	a0 04 00 0f 	move s5, 1
   1ae68:	00 60 1c 00 	or s0, s0, 1816
   1ae6c:	40 00 00 a8 	load_32 s2, (s0)
   1ae70:	01 30 1f 00 	or s0, s1, 1996
   1ae74:	22 20 00 a8 	load_32 s1, 8(s2)
   1ae78:	00 00 00 a6 	load_s16 s0, (s0)
   1ae7c:	60 50 00 07 	mull_i s3, s0, 20
   1ae80:	61 80 51 c0 	add_i s3, s1, s3
   1ae84:	23 30 00 a8 	load_32 s1, 12(s3)
   1ae88:	c1 e2 ff f3 	bz s1, -936 <M_Responder+0x624>
   1ae8c:	63 00 00 a4 	load_u16 s3, (s3)
   1ae90:	83 e2 ff f3 	bz s3, -944 <M_Responder+0x624>
   1ae94:	63 08 00 11 	cmpne_i s3, s3, 2
   1ae98:	02 50 00 86 	store_16 s0, 20(s2)
   1ae9c:	43 24 00 f4 	bnz s3, 1160 <M_Responder+0xe68>
   1aea0:	00 07 00 0f 	move s24, 1
   1aea4:	00 00 fc c0 	move s0, s24
   1aea8:	21 00 00 fc 	call s1
   1aeac:	00 00 00 0f 	move s0, 0
   1aeb0:	20 58 00 0f 	move s1, 22
   1aeb4:	35 01 00 f6 	b 1236 <M_Responder+0xecc>
   1aeb8:	a0 00 00 0f 	move s5, 0
   1aebc:	61 00 00 14 	cmplt_i s3, s1, 0
   1aec0:	03 e1 ff f5 	bnz s3, -992 <M_Responder+0x624>
   1aec4:	62 20 00 a8 	load_32 s3, 8(s2)
   1aec8:	40 80 f2 c0 	move s2, s5
   1aecc:	82 50 00 07 	mull_i s4, s2, 20
   1aed0:	83 00 52 c0 	add_i s4, s3, s4
   1aed4:	84 40 00 a2 	load_s8 s4, 16(s4)
   1aed8:	99 00 12 c1 	cmpne_i s4, s25, s4
   1aedc:	44 00 00 f4 	bnz s4, 8 <M_Responder+0xa28>
   1aee0:	0d 01 00 f6 	b 1076 <M_Responder+0xe58>
   1aee4:	82 80 40 c1 	cmplt_i s4, s2, s1
   1aee8:	42 04 00 05 	add_i s2, s2, 1
   1aeec:	04 ff ff f5 	bnz s4, -32 <M_Responder+0xa10>
   1aef0:	fc fe ff f7 	b -1040 <M_Responder+0x624>
   1aef4:	00 04 00 0f 	move s0, 1
   1aef8:	1e 70 01 88 	store_32 s0, 92(sp)
   1aefc:	1a 00 00 88 	store_32 s0, (s26)
   1af00:	1b 04 00 4f 	movehi s0, 59
   1af04:	33 04 00 4f 	movehi s1, 51
   1af08:	5b 04 00 4f 	movehi s2, 59
   1af0c:	00 63 1c 00 	or s24, s0, 1816
   1af10:	01 20 52 00 	or s0, s1, 5256
   1af14:	22 30 1f 00 	or s1, s2, 1996
   1af18:	20 03 00 0f 	move s25, 0
   1af1c:	18 00 00 88 	store_32 s0, (s24)
   1af20:	00 50 00 a6 	load_s16 s0, 20(s0)
   1af24:	3e a0 01 88 	store_32 s1, 104(sp)
   1af28:	01 00 00 86 	store_16 s0, (s1)
   1af2c:	20 5c 00 0f 	move s1, 23
   1af30:	00 80 fc c0 	move s0, s25
   1af34:	2c c5 00 f8 	call 201904 <S_StartSound>
   1af38:	1b 04 00 4f 	movehi s0, 59
   1af3c:	00 20 19 00 	or s0, s0, 1608
   1af40:	00 00 00 a8 	load_32 s0, (s0)
   1af44:	40 00 00 f4 	bnz s0, 8 <M_Responder+0xa90>
   1af48:	27 01 00 f6 	b 1180 <M_Responder+0xf28>
   1af4c:	1a 04 00 4f 	movehi s0, 58
   1af50:	00 a0 7f 00 	or s0, s0, 8168
   1af54:	00 00 00 a8 	load_32 s0, (s0)
   1af58:	a0 ef ff f5 	bnz s0, -524 <M_Responder+0x890>
   1af5c:	13 04 00 4f 	movehi s0, 51
   1af60:	00 10 60 00 	or s0, s0, 6148
   1af64:	18 00 00 88 	store_32 s0, (s24)
   1af68:	00 50 00 a6 	load_s16 s0, 20(s0)
   1af6c:	3e a0 01 a8 	load_32 s1, 104(sp)
   1af70:	01 00 00 86 	store_16 s0, (s1)
   1af74:	be 70 01 a8 	load_32 s5, 92(sp)
   1af78:	da fe ff f7 	b -1176 <M_Responder+0x624>
   1af7c:	1b 04 00 4f 	movehi s0, 59
   1af80:	33 04 00 4f 	movehi s1, 51
   1af84:	5b 04 00 4f 	movehi s2, 59
   1af88:	60 60 1c 00 	or s3, s0, 1816
   1af8c:	01 20 52 00 	or s0, s1, 5256
   1af90:	22 30 1f 00 	or s1, s2, 1996
   1af94:	20 03 00 0f 	move s25, 0
   1af98:	00 07 00 0f 	move s24, 1
   1af9c:	1a 03 00 88 	store_32 s24, (s26)
   1afa0:	7e 90 01 88 	store_32 s3, 100(sp)
   1afa4:	03 00 00 88 	store_32 s0, (s3)
   1afa8:	00 50 00 a6 	load_s16 s0, 20(s0)
   1afac:	3e a0 01 88 	store_32 s1, 104(sp)
   1afb0:	01 00 00 86 	store_16 s0, (s1)
   1afb4:	20 5c 00 0f 	move s1, 23
   1afb8:	00 80 fc c0 	move s0, s25
   1afbc:	0a c5 00 f8 	call 201768 <S_StartSound>
   1afc0:	1b 04 00 4f 	movehi s0, 59
   1afc4:	00 c0 01 00 	or s0, s0, 112
   1afc8:	00 00 00 a8 	load_32 s0, (s0)
   1afcc:	60 22 00 f2 	bz s0, 1100 <M_Responder+0xf5c>
   1afd0:	1b 04 00 4f 	movehi s0, 59
   1afd4:	3a 00 00 a8 	load_32 s1, (s26)
   1afd8:	5b 04 00 4f 	movehi s2, 59
   1afdc:	7b 04 00 4f 	movehi s3, 59
   1afe0:	00 70 1f 00 	or s0, s0, 2012
   1afe4:	63 80 1f 00 	or s3, s3, 2016
   1afe8:	20 00 00 88 	store_32 s1, (s0)
   1afec:	02 a0 1f 00 	or s0, s2, 2024
   1aff0:	5b 04 00 4f 	movehi s2, 59
   1aff4:	1b 03 00 88 	store_32 s24, (s27)
   1aff8:	20 00 00 4f 	movehi s1, 0
   1affc:	42 90 1f 00 	or s2, s2, 2020
   1b000:	21 14 7a 00 	or s1, s1, 7813
   1b004:	20 00 00 88 	store_32 s1, (s0)
   1b008:	22 03 00 88 	store_32 s25, (s2)
   1b00c:	23 03 00 88 	store_32 s25, (s3)
   1b010:	1a 03 00 88 	store_32 s24, (s26)
   1b014:	a0 00 fc c0 	move s5, s24
   1b018:	b2 fe ff f7 	b -1336 <M_Responder+0x624>
   1b01c:	1b 04 00 4f 	movehi s0, 59
   1b020:	33 04 00 4f 	movehi s1, 51
   1b024:	5b 04 00 4f 	movehi s2, 59
   1b028:	00 60 1c 00 	or s0, s0, 1816
   1b02c:	00 07 00 0f 	move s24, 1
   1b030:	1a 03 00 88 	store_32 s24, (s26)
   1b034:	21 90 5b 00 	or s1, s1, 5860
   1b038:	42 30 1f 00 	or s2, s2, 1996
   1b03c:	20 00 00 88 	store_32 s1, (s0)
   1b040:	c5 00 00 f6 	b 788 <M_Responder+0xe98>
   1b044:	1b 04 00 4f 	movehi s0, 59
   1b048:	00 07 00 0f 	move s24, 1
   1b04c:	00 70 1c 00 	or s0, s0, 1820
   1b050:	20 00 00 a8 	load_32 s1, (s0)
   1b054:	38 80 60 c0 	sub_i s1, s24, s1
   1b058:	20 00 00 88 	store_32 s1, (s0)
   1b05c:	8e 00 00 f6 	b 568 <M_Responder+0xdd8>
   1b060:	00 00 00 0f 	move s0, 0
   1b064:	20 5c 00 0f 	move s1, 23
   1b068:	df c4 00 f8 	call 201596 <S_StartSound>
   1b06c:	1b 04 00 4f 	movehi s0, 59
   1b070:	00 20 19 00 	or s0, s0, 1608
   1b074:	00 00 00 a8 	load_32 s0, (s0)
   1b078:	40 00 00 f4 	bnz s0, 8 <M_Responder+0xbc4>
   1b07c:	a3 00 00 f6 	b 652 <M_Responder+0xe4c>
   1b080:	1a 04 00 4f 	movehi s0, 58
   1b084:	a0 04 00 0f 	move s5, 1
   1b088:	00 a0 7f 00 	or s0, s0, 8168
   1b08c:	00 00 00 a8 	load_32 s0, (s0)
   1b090:	80 d2 ff f5 	bnz s0, -1456 <M_Responder+0x624>
   1b094:	1b 04 00 4f 	movehi s0, 59
   1b098:	00 10 20 00 	or s0, s0, 2052
   1b09c:	20 00 00 a8 	load_32 s1, (s0)
   1b0a0:	41 fc ff 12 	cmpgt_i s2, s1, -1
   1b0a4:	42 00 00 f4 	bnz s2, 8 <M_Responder+0xbf0>
   1b0a8:	57 01 00 f6 	b 1372 <M_Responder+0x1148>
   1b0ac:	1b 04 00 4f 	movehi s0, 59
   1b0b0:	21 60 00 07 	mull_i s1, s1, 24
   1b0b4:	5b 04 00 4f 	movehi s2, 59
   1b0b8:	00 d0 20 00 	or s0, s0, 2100
   1b0bc:	02 e3 24 00 	or s24, s2, 2360
   1b0c0:	00 80 50 c0 	add_i s0, s0, s1
   1b0c4:	23 00 00 4f 	movehi s1, 3
   1b0c8:	21 88 07 00 	or s1, s1, 482
   1b0cc:	3e 10 00 88 	store_32 s1, 4(sp)
   1b0d0:	1e 03 00 88 	store_32 s24, (sp)
   1b0d4:	1e 20 00 88 	store_32 s0, 8(sp)
   1b0d8:	4c db 00 f8 	call 224560 <sprintf>
   1b0dc:	1b 04 00 4f 	movehi s0, 59
   1b0e0:	5a 00 00 a8 	load_32 s2, (s26)
   1b0e4:	3b 04 00 4f 	movehi s1, 59
   1b0e8:	a0 04 00 0f 	move s5, 1
   1b0ec:	00 70 1f 00 	or s0, s0, 2012
   1b0f0:	40 00 00 88 	store_32 s2, (s0)
   1b0f4:	01 a0 1f 00 	or s0, s1, 2024
   1b0f8:	3b 04 00 4f 	movehi s1, 59
   1b0fc:	bb 00 00 88 	store_32 s5, (s27)
   1b100:	4c 00 00 4f 	movehi s2, 12
   1b104:	00 03 00 88 	store_32 s24, (s0)
   1b108:	1b 04 00 4f 	movehi s0, 59
   1b10c:	21 80 1f 00 	or s1, s1, 2016
   1b110:	42 00 74 00 	or s2, s2, 7424
   1b114:	00 90 1f 00 	or s0, s0, 2020
   1b118:	14 01 00 f6 	b 1104 <M_Responder+0x10ac>
   1b11c:	20 03 00 0f 	move s25, 0
   1b120:	20 5c 00 0f 	move s1, 23
   1b124:	00 80 fc c0 	move s0, s25
   1b128:	af c4 00 f8 	call 201404 <S_StartSound>
   1b12c:	1b 04 00 4f 	movehi s0, 59
   1b130:	00 20 19 00 	or s0, s0, 1608
   1b134:	00 00 00 a8 	load_32 s0, (s0)
   1b138:	40 00 00 f4 	bnz s0, 8 <M_Responder+0xc84>
   1b13c:	73 00 00 f6 	b 460 <M_Responder+0xe4c>
   1b140:	1b 04 00 4f 	movehi s0, 59
   1b144:	3b 04 00 4f 	movehi s1, 59
   1b148:	a0 04 00 0f 	move s5, 1
   1b14c:	00 c0 01 00 	or s0, s0, 112
   1b150:	21 70 1f 00 	or s1, s1, 2012
   1b154:	00 00 00 a8 	load_32 s0, (s0)
   1b158:	5a 00 00 a8 	load_32 s2, (s26)
   1b15c:	41 00 00 88 	store_32 s2, (s1)
   1b160:	bb 00 00 88 	store_32 s5, (s27)
   1b164:	a0 20 00 f2 	bz s0, 1044 <M_Responder+0x10bc>
   1b168:	1b 04 00 4f 	movehi s0, 59
   1b16c:	22 00 00 4f 	movehi s1, 2
   1b170:	5b 04 00 4f 	movehi s2, 59
   1b174:	00 a0 1f 00 	or s0, s0, 2024
   1b178:	7b 04 00 4f 	movehi s3, 59
   1b17c:	21 88 5f 00 	or s1, s1, 6114
   1b180:	1a 01 00 f6 	b 1128 <M_Responder+0x112c>
   1b184:	1b 04 00 4f 	movehi s0, 59
   1b188:	5a 04 00 4f 	movehi s2, 58
   1b18c:	60 04 00 0f 	move s3, 1
   1b190:	00 b0 24 00 	or s0, s0, 2348
   1b194:	42 c0 6d 00 	or s2, s2, 7024
   1b198:	20 00 00 a8 	load_32 s1, (s0)
   1b19c:	23 80 60 c0 	sub_i s1, s3, s1
   1b1a0:	20 00 00 88 	store_32 s1, (s0)
   1b1a4:	02 00 00 a8 	load_32 s0, (s2)
   1b1a8:	5b 04 00 4f 	movehi s2, 59
   1b1ac:	21 00 00 10 	cmpeq_i s1, s1, 0
   1b1b0:	42 40 02 00 	or s2, s2, 144
   1b1b4:	00 60 04 07 	mull_i s0, s0, 280
   1b1b8:	02 00 50 c0 	add_i s0, s2, s0
   1b1bc:	41 0d 00 f4 	bnz s1, 424 <M_Responder+0xea8>
   1b1c0:	21 00 00 4f 	movehi s1, 1
   1b1c4:	21 a8 2e 00 	or s1, s1, 2986
   1b1c8:	69 00 00 f6 	b 420 <M_Responder+0xeb0>
   1b1cc:	20 03 00 0f 	move s25, 0
   1b1d0:	20 5c 00 0f 	move s1, 23
   1b1d4:	00 80 fc c0 	move s0, s25
   1b1d8:	83 c4 00 f8 	call 201228 <S_StartSound>
   1b1dc:	1b 04 00 4f 	movehi s0, 59
   1b1e0:	00 c0 01 00 	or s0, s0, 112
   1b1e4:	00 00 00 a8 	load_32 s0, (s0)
   1b1e8:	a0 12 00 f2 	bz s0, 596 <M_Responder+0xf80>
   1b1ec:	1b 04 00 4f 	movehi s0, 59
   1b1f0:	3a 00 00 a8 	load_32 s1, (s26)
   1b1f4:	a0 04 00 0f 	move s5, 1
   1b1f8:	5b 04 00 4f 	movehi s2, 59
   1b1fc:	00 70 1f 00 	or s0, s0, 2012
   1b200:	7b 04 00 4f 	movehi s3, 59
   1b204:	20 00 00 88 	store_32 s1, (s0)
   1b208:	1b 04 00 4f 	movehi s0, 59
   1b20c:	20 00 00 4f 	movehi s1, 0
   1b210:	bb 00 00 88 	store_32 s5, (s27)
   1b214:	00 a0 1f 00 	or s0, s0, 2024
   1b218:	21 34 15 00 	or s1, s1, 1357
   1b21c:	f3 00 00 f6 	b 972 <M_Responder+0x112c>
   1b220:	00 00 00 0f 	move s0, 0
   1b224:	20 5c 00 0f 	move s1, 23
   1b228:	6f c4 00 f8 	call 201148 <S_StartSound>
   1b22c:	00 0c 00 4f 	movehi s0, 96
   1b230:	00 f0 0a 00 	or s0, s0, 700
   1b234:	00 00 00 a8 	load_32 s0, (s0)
   1b238:	60 14 00 f2 	bz s0, 652 <M_Responder+0x1008>
   1b23c:	0b 04 00 4f 	movehi s0, 43
   1b240:	00 10 40 00 	or s0, s0, 4100
   1b244:	00 00 00 a8 	load_32 s0, (s0)
   1b248:	af 00 00 f6 	b 700 <M_Responder+0x1048>
   1b24c:	00 0c 00 4f 	movehi s0, 96
   1b250:	00 70 02 00 	or s0, s0, 156
   1b254:	20 00 00 a8 	load_32 s1, (s0)
   1b258:	41 0c 00 12 	cmpgt_i s2, s1, 3
   1b25c:	c2 09 00 f4 	bnz s2, 312 <M_Responder+0xed8>
   1b260:	21 04 00 05 	add_i s1, s1, 1
   1b264:	4d 00 00 f6 	b 308 <M_Responder+0xedc>
   1b268:	1b 04 00 4f 	movehi s0, 59
   1b26c:	33 04 00 4f 	movehi s1, 51
   1b270:	5b 04 00 4f 	movehi s2, 59
   1b274:	00 60 1c 00 	or s0, s0, 1816
   1b278:	21 20 52 00 	or s1, s1, 5256
   1b27c:	42 30 1f 00 	or s2, s2, 1996
   1b280:	00 07 00 0f 	move s24, 1
   1b284:	1a 03 00 88 	store_32 s24, (s26)
   1b288:	20 00 00 88 	store_32 s1, (s0)
   1b28c:	01 50 00 a6 	load_s16 s0, 20(s1)
   1b290:	02 00 00 86 	store_16 s0, (s2)
   1b294:	00 00 00 0f 	move s0, 0
   1b298:	31 00 00 f6 	b 196 <M_Responder+0xea0>
   1b29c:	00 0c 00 4f 	movehi s0, 96
   1b2a0:	20 0c 00 4f 	movehi s1, 96
   1b2a4:	00 d0 21 00 	or s0, s0, 2164
   1b2a8:	21 a0 02 00 	or s1, s1, 168
   1b2ac:	00 00 00 a8 	load_32 s0, (s0)
   1b2b0:	21 00 00 a8 	load_32 s1, (s1)
   1b2b4:	01 00 00 c0 	or s0, s1, s0
   1b2b8:	40 c1 ff f5 	bnz s0, -2008 <M_Responder+0x624>
   1b2bc:	1b 04 00 4f 	movehi s0, 59
   1b2c0:	20 90 24 00 	or s1, s0, 2340
   1b2c4:	1b 04 00 4f 	movehi s0, 59
   1b2c8:	41 00 00 a8 	load_32 s2, (s1)
   1b2cc:	60 a0 24 00 	or s3, s0, 2344
   1b2d0:	03 00 00 a8 	load_32 s0, (s3)
   1b2d4:	82 04 00 14 	cmplt_i s4, s2, 1
   1b2d8:	a4 00 00 f4 	bnz s4, 20 <M_Responder+0xe30>
   1b2dc:	00 fc ff 05 	add_i s0, s0, -1
   1b2e0:	03 00 00 88 	store_32 s0, (s3)
   1b2e4:	42 fc ff 05 	add_i s2, s2, -1
   1b2e8:	41 00 00 88 	store_32 s2, (s1)
   1b2ec:	3b 04 00 4f 	movehi s1, 59
   1b2f0:	21 70 1c 00 	or s1, s1, 1820
   1b2f4:	21 00 00 a8 	load_32 s1, (s1)
   1b2f8:	59 79 00 f8 	call 124260 <R_SetViewSize>
   1b2fc:	00 00 00 0f 	move s0, 0
   1b300:	20 58 00 0f 	move s1, 22
   1b304:	f5 fd ff f7 	b -2092 <M_Responder+0x61c>
   1b308:	00 00 00 0f 	move s0, 0
   1b30c:	20 88 00 0f 	move s1, 34
   1b310:	f2 fd ff f7 	b -2104 <M_Responder+0x61c>
   1b314:	40 00 00 86 	store_16 s2, (s0)
   1b318:	00 00 00 0f 	move s0, 0
   1b31c:	20 4c 00 0f 	move s1, 19
   1b320:	ee fd ff f7 	b -2120 <M_Responder+0x61c>
   1b324:	21 00 00 fc 	call s1
   1b328:	00 07 00 0f 	move s24, 1
   1b32c:	00 00 00 0f 	move s0, 0
   1b330:	20 00 fc c0 	move s1, s24
   1b334:	15 00 00 f6 	b 84 <M_Responder+0xecc>
   1b338:	13 04 00 4f 	movehi s0, 51
   1b33c:	00 f0 59 00 	or s0, s0, 5756
   1b340:	3b 04 00 4f 	movehi s1, 59
   1b344:	5b 04 00 4f 	movehi s2, 59
   1b348:	21 60 1c 00 	or s1, s1, 1816
   1b34c:	42 30 1f 00 	or s2, s2, 1996
   1b350:	01 00 00 88 	store_32 s0, (s1)
   1b354:	00 00 00 0f 	move s0, 0
   1b358:	02 00 00 86 	store_16 s0, (s2)
   1b35c:	20 5c 00 0f 	move s1, 23
   1b360:	0a 00 00 f6 	b 40 <M_Responder+0xecc>
   1b364:	20 00 00 4f 	movehi s1, 0
   1b368:	21 10 6a 00 	or s1, s1, 6788
   1b36c:	40 0c 00 4f 	movehi s2, 96
   1b370:	20 60 03 88 	store_32 s1, 216(s0)
   1b374:	00 00 00 0f 	move s0, 0
   1b378:	20 5c 00 0f 	move s1, 23
   1b37c:	42 a0 06 00 	or s2, s2, 424
   1b380:	62 00 00 88 	store_32 s3, (s2)
   1b384:	00 83 f1 c0 	move s24, s3
   1b388:	17 c4 00 f8 	call 200796 <S_StartSound>
   1b38c:	a0 00 fc c0 	move s5, s24
   1b390:	d4 fd ff f7 	b -2224 <M_Responder+0x624>
   1b394:	20 00 00 0f 	move s1, 0
   1b398:	5a 04 00 4f 	movehi s2, 58
   1b39c:	20 00 00 88 	store_32 s1, (s0)
   1b3a0:	7b 04 00 4f 	movehi s3, 59
   1b3a4:	21 68 00 07 	mull_i s1, s1, 26
   1b3a8:	02 c0 6d 00 	or s0, s2, 7024
   1b3ac:	53 04 00 4f 	movehi s2, 51
   1b3b0:	63 40 02 00 	or s3, s3, 144
   1b3b4:	00 00 00 a8 	load_32 s0, (s0)
   1b3b8:	42 f0 4d 00 	or s2, s2, 4988
   1b3bc:	00 60 04 07 	mull_i s0, s0, 280
   1b3c0:	03 00 50 c0 	add_i s0, s3, s0
   1b3c4:	22 80 50 c0 	add_i s1, s2, s1
   1b3c8:	20 60 03 88 	store_32 s1, 216(s0)
   1b3cc:	02 00 00 4f 	movehi s0, 2
   1b3d0:	20 94 01 0f 	move s1, 101
   1b3d4:	00 5c 6e 00 	or s0, s0, 7063
   1b3d8:	dc 8e 00 f8 	call 146288 <W_CacheLumpName>
   1b3dc:	87 cc ff f9 	call -52708 <I_SetPalette>
   1b3e0:	bf fd ff f7 	b -2308 <M_Responder+0x620>
   1b3e4:	1b 04 00 4f 	movehi s0, 59
   1b3e8:	3a 00 00 a8 	load_32 s1, (s26)
   1b3ec:	a0 04 00 0f 	move s5, 1
   1b3f0:	5b 04 00 4f 	movehi s2, 59
   1b3f4:	00 70 1f 00 	or s0, s0, 2012
   1b3f8:	7b 04 00 4f 	movehi s3, 59
   1b3fc:	20 00 00 88 	store_32 s1, (s0)
   1b400:	1b 04 00 4f 	movehi s0, 59
   1b404:	22 00 00 4f 	movehi s1, 2
   1b408:	bb 00 00 88 	store_32 s5, (s27)
   1b40c:	00 a0 1f 00 	or s0, s0, 2024
   1b410:	21 e8 54 00 	or s1, s1, 5434
   1b414:	75 00 00 f6 	b 468 <M_Responder+0x112c>
   1b418:	13 04 00 4f 	movehi s0, 51
   1b41c:	3e 90 01 a8 	load_32 s1, 100(sp)
   1b420:	00 d0 5d 00 	or s0, s0, 6004
   1b424:	01 00 00 88 	store_32 s0, (s1)
   1b428:	00 50 00 a6 	load_s16 s0, 20(s0)
   1b42c:	3e a0 01 a8 	load_32 s1, 104(sp)
   1b430:	01 00 00 86 	store_16 s0, (s1)
   1b434:	a0 00 fc c0 	move s5, s24
   1b438:	aa fd ff f7 	b -2392 <M_Responder+0x624>
   1b43c:	1b 04 00 4f 	movehi s0, 59
   1b440:	00 10 20 00 	or s0, s0, 2052
   1b444:	00 00 00 a8 	load_32 s0, (s0)
   1b448:	20 fc ff 12 	cmpgt_i s1, s0, -1
   1b44c:	41 00 00 f4 	bnz s1, 8 <M_Responder+0xf98>
   1b450:	5a 00 00 f6 	b 360 <M_Responder+0x10fc>
   1b454:	3b 04 00 4f 	movehi s1, 59
   1b458:	00 60 00 07 	mull_i s0, s0, 24
   1b45c:	5b 04 00 4f 	movehi s2, 59
   1b460:	21 d0 20 00 	or s1, s1, 2100
   1b464:	02 e3 24 00 	or s24, s2, 2360
   1b468:	01 00 50 c0 	add_i s0, s1, s0
   1b46c:	20 00 00 4f 	movehi s1, 0
   1b470:	21 44 63 00 	or s1, s1, 6353
   1b474:	3e 10 00 88 	store_32 s1, 4(sp)
   1b478:	1e 03 00 88 	store_32 s24, (sp)
   1b47c:	1e 20 00 88 	store_32 s0, 8(sp)
   1b480:	62 da 00 f8 	call 223624 <sprintf>
   1b484:	1b 04 00 4f 	movehi s0, 59
   1b488:	5a 00 00 a8 	load_32 s2, (s26)
   1b48c:	3b 04 00 4f 	movehi s1, 59
   1b490:	a0 04 00 0f 	move s5, 1
   1b494:	00 70 1f 00 	or s0, s0, 2012
   1b498:	40 00 00 88 	store_32 s2, (s0)
   1b49c:	01 a0 1f 00 	or s0, s1, 2024
   1b4a0:	3b 04 00 4f 	movehi s1, 59
   1b4a4:	bb 00 00 88 	store_32 s5, (s27)
   1b4a8:	4c 00 00 4f 	movehi s2, 12
   1b4ac:	00 03 00 88 	store_32 s24, (s0)
   1b4b0:	1b 04 00 4f 	movehi s0, 59
   1b4b4:	21 80 1f 00 	or s1, s1, 2016
   1b4b8:	42 30 7d 00 	or s2, s2, 8012
   1b4bc:	00 90 1f 00 	or s0, s0, 2020
   1b4c0:	2a 00 00 f6 	b 168 <M_Responder+0x10ac>
   1b4c4:	1a 04 00 4f 	movehi s0, 58
   1b4c8:	33 64 66 4f 	movehi s1, 209715
   1b4cc:	00 b0 7f 00 	or s0, s0, 8172
   1b4d0:	21 9c 19 00 	or s1, s1, 1639
   1b4d4:	00 00 00 a8 	load_32 s0, (s0)
   1b4d8:	20 80 f0 c1 	mulh_i s1, s0, s1
   1b4dc:	41 0c 00 09 	ashr s2, s1, 3
   1b4e0:	21 7c 00 0a 	shr s1, s1, 31
   1b4e4:	22 80 50 c0 	add_i s1, s2, s1
   1b4e8:	4b 04 00 4f 	movehi s2, 43
   1b4ec:	21 50 00 07 	mull_i s1, s1, 20
   1b4f0:	00 80 60 c0 	sub_i s0, s0, s1
   1b4f4:	22 10 40 00 	or s1, s2, 4100
   1b4f8:	00 08 00 0b 	shl s0, s0, 2
   1b4fc:	01 00 50 c0 	add_i s0, s1, s0
   1b500:	00 10 00 a8 	load_32 s0, 4(s0)
   1b504:	20 00 00 4f 	movehi s1, 0
   1b508:	1e 20 00 88 	store_32 s0, 8(sp)
   1b50c:	1b 04 00 4f 	movehi s0, 59
   1b510:	21 04 16 00 	or s1, s1, 1409
   1b514:	3e 10 00 88 	store_32 s1, 4(sp)
   1b518:	00 80 1c 00 	or s0, s0, 1824
   1b51c:	1e 00 00 88 	store_32 s0, (sp)
   1b520:	3a da 00 f8 	call 223464 <sprintf>
   1b524:	1b 04 00 4f 	movehi s0, 59
   1b528:	3a 00 00 a8 	load_32 s1, (s26)
   1b52c:	4d 00 00 4f 	movehi s2, 13
   1b530:	a0 04 00 0f 	move s5, 1
   1b534:	00 70 1f 00 	or s0, s0, 2012
   1b538:	42 80 0a 00 	or s2, s2, 672
   1b53c:	20 00 00 88 	store_32 s1, (s0)
   1b540:	1b 04 00 4f 	movehi s0, 59
   1b544:	3b 04 00 4f 	movehi s1, 59
   1b548:	bb 00 00 88 	store_32 s5, (s27)
   1b54c:	00 a0 1f 00 	or s0, s0, 2024
   1b550:	21 80 1c 00 	or s1, s1, 1824
   1b554:	20 00 00 88 	store_32 s1, (s0)
   1b558:	1b 04 00 4f 	movehi s0, 59
   1b55c:	3b 04 00 4f 	movehi s1, 59
   1b560:	00 90 1f 00 	or s0, s0, 2020
   1b564:	21 80 1f 00 	or s1, s1, 2016
   1b568:	40 00 00 88 	store_32 s2, (s0)
   1b56c:	a1 00 00 88 	store_32 s5, (s1)
   1b570:	ba 00 00 88 	store_32 s5, (s26)
   1b574:	5b fd ff f7 	b -2708 <M_Responder+0x624>
   1b578:	1b 04 00 4f 	movehi s0, 59
   1b57c:	20 00 00 4f 	movehi s1, 0
   1b580:	5b 04 00 4f 	movehi s2, 59
   1b584:	00 a0 1f 00 	or s0, s0, 2024
   1b588:	21 e0 3f 00 	or s1, s1, 4088
   1b58c:	42 80 1f 00 	or s2, s2, 2016
   1b590:	20 00 00 88 	store_32 s1, (s0)
   1b594:	1b 04 00 4f 	movehi s0, 59
   1b598:	2d 00 00 4f 	movehi s1, 13
   1b59c:	a0 04 00 0f 	move s5, 1
   1b5a0:	00 90 1f 00 	or s0, s0, 2020
   1b5a4:	21 50 09 00 	or s1, s1, 596
   1b5a8:	20 00 00 88 	store_32 s1, (s0)
   1b5ac:	a2 00 00 88 	store_32 s5, (s2)
   1b5b0:	ba 00 00 88 	store_32 s5, (s26)
   1b5b4:	4b fd ff f7 	b -2772 <M_Responder+0x624>
   1b5b8:	1b 04 00 4f 	movehi s0, 59
   1b5bc:	3a 00 00 a8 	load_32 s1, (s26)
   1b5c0:	a0 04 00 0f 	move s5, 1
   1b5c4:	5b 04 00 4f 	movehi s2, 59
   1b5c8:	00 70 1f 00 	or s0, s0, 2012
   1b5cc:	7b 04 00 4f 	movehi s3, 59
   1b5d0:	20 00 00 88 	store_32 s1, (s0)
   1b5d4:	1b 04 00 4f 	movehi s0, 59
   1b5d8:	20 00 00 4f 	movehi s1, 0
   1b5dc:	bb 00 00 88 	store_32 s5, (s27)
   1b5e0:	00 a0 1f 00 	or s0, s0, 2024
   1b5e4:	21 3c 2d 00 	or s1, s1, 2895
   1b5e8:	42 90 1f 00 	or s2, s2, 2020
   1b5ec:	20 00 00 88 	store_32 s1, (s0)
   1b5f0:	63 80 1f 00 	or s3, s3, 2016
   1b5f4:	22 03 00 88 	store_32 s25, (s2)
   1b5f8:	23 03 00 88 	store_32 s25, (s3)
   1b5fc:	ba 00 00 88 	store_32 s5, (s26)
   1b600:	38 fd ff f7 	b -2848 <M_Responder+0x624>
   1b604:	3a 00 00 a8 	load_32 s1, (s26)
   1b608:	81 01 00 f4 	bnz s1, 48 <M_Responder+0x117c>
   1b60c:	20 04 00 0f 	move s1, 1
   1b610:	3a 00 00 88 	store_32 s1, (s26)
   1b614:	3b 04 00 4f 	movehi s1, 59
   1b618:	53 04 00 4f 	movehi s2, 51
   1b61c:	7b 04 00 4f 	movehi s3, 59
   1b620:	21 60 1c 00 	or s1, s1, 1816
   1b624:	42 20 52 00 	or s2, s2, 5256
   1b628:	63 30 1f 00 	or s3, s3, 1996
   1b62c:	41 00 00 88 	store_32 s2, (s1)
   1b630:	22 50 00 a6 	load_s16 s1, 20(s2)
   1b634:	23 00 00 86 	store_16 s1, (s3)
   1b638:	3b 04 00 4f 	movehi s1, 59
   1b63c:	53 04 00 4f 	movehi s2, 51
   1b640:	7b 04 00 4f 	movehi s3, 59
   1b644:	21 60 1c 00 	or s1, s1, 1816
   1b648:	42 10 60 00 	or s2, s2, 6148
   1b64c:	63 30 1f 00 	or s3, s3, 1996
   1b650:	41 00 00 88 	store_32 s2, (s1)
   1b654:	22 50 00 a6 	load_s16 s1, 20(s2)
   1b658:	23 00 00 86 	store_16 s1, (s3)
   1b65c:	20 f8 ff 0f 	move s1, -2
   1b660:	20 00 00 88 	store_32 s1, (s0)
   1b664:	1f fd ff f7 	b -2948 <M_Responder+0x624>

000000000001b668 M_Drawer:
   1b668:	de 03 fe 05 	add_i sp, sp, -128
   1b66c:	1e f3 01 88 	store_32 s24, 124(sp)
   1b670:	3e e3 01 88 	store_32 s25, 120(sp)
   1b674:	5e d3 01 88 	store_32 s26, 116(sp)
   1b678:	7e c3 01 88 	store_32 s27, 112(sp)
   1b67c:	fe b3 01 88 	store_32 ra, 108(sp)
   1b680:	1b 04 00 4f 	movehi s0, 59
   1b684:	3b 04 00 4f 	movehi s1, 59
   1b688:	20 03 00 0f 	move s25, 0
   1b68c:	00 20 1f 00 	or s0, s0, 1992
   1b690:	21 b0 1f 00 	or s1, s1, 2028
   1b694:	20 03 00 88 	store_32 s25, (s0)
   1b698:	01 00 00 a8 	load_32 s0, (s1)
   1b69c:	80 05 00 f2 	bz s0, 176 <M_Drawer+0xe4>
   1b6a0:	1b 04 00 4f 	movehi s0, 59
   1b6a4:	20 0c 00 4f 	movehi s1, 96
   1b6a8:	00 a0 1f 00 	or s0, s0, 2024
   1b6ac:	1e b0 00 88 	store_32 s0, 44(sp)
   1b6b0:	21 b0 02 00 	or s1, s1, 172
   1b6b4:	40 03 00 a8 	load_32 s26, (s0)
   1b6b8:	3e 00 01 88 	store_32 s1, 64(sp)
   1b6bc:	01 00 00 a8 	load_32 s0, (s1)
   1b6c0:	60 0b 00 a6 	load_s16 s27, 2(s0)
   1b6c4:	1a 03 00 a0 	load_u8 s24, (s26)
   1b6c8:	58 00 00 f4 	bnz s24, 8 <M_Drawer+0x68>
   1b6cc:	7a 00 00 f6 	b 488 <M_Drawer+0x24c>
   1b6d0:	00 00 fd c0 	move s0, s26
   1b6d4:	33 dc 00 f8 	call 225484 <strlen>
   1b6d8:	58 28 00 10 	cmpeq_i s2, s24, 10
   1b6dc:	20 80 fd c0 	move s1, s27
   1b6e0:	42 00 00 f4 	bnz s2, 8 <M_Drawer+0x80>
   1b6e4:	20 80 fc c0 	move s1, s25
   1b6e8:	40 08 00 18 	cmplt_u s2, s0, 2
   1b6ec:	21 80 5d c0 	add_i s1, s1, s27
   1b6f0:	42 0f 00 f4 	bnz s2, 488 <M_Drawer+0x270>
   1b6f4:	40 04 00 0f 	move s2, 1
   1b6f8:	60 00 00 0f 	move s3, 0
   1b6fc:	9a 00 51 c0 	add_i s4, s26, s2
   1b700:	84 00 00 a0 	load_u8 s4, (s4)
   1b704:	a4 28 00 10 	cmpeq_i s5, s4, 10
   1b708:	80 80 fd c0 	move s4, s27
   1b70c:	45 00 00 f4 	bnz s5, 8 <M_Drawer+0xac>
   1b710:	80 80 f1 c0 	move s4, s3
   1b714:	42 04 00 05 	add_i s2, s2, 1
   1b718:	24 80 50 c0 	add_i s1, s4, s1
   1b71c:	a2 00 80 c1 	cmplt_u s5, s2, s0
   1b720:	e5 fe ff f5 	bnz s5, -36 <M_Drawer+0x94>
   1b724:	40 0c 00 4f 	movehi s2, 96
   1b728:	01 7c 00 0a 	shr s0, s1, 31
   1b72c:	01 00 50 c0 	add_i s0, s1, s0
   1b730:	20 90 01 0f 	move s1, 100
   1b734:	42 98 1d 00 	or s2, s2, 1894
   1b738:	00 04 00 0a 	shr s0, s0, 1
   1b73c:	01 00 60 c0 	sub_i s0, s1, s0
   1b740:	02 00 00 86 	store_16 s0, (s2)
   1b744:	18 21 00 f2 	bz s24, 1056 <M_Drawer+0x4fc>
   1b748:	6c 00 00 f6 	b 432 <M_Drawer+0x290>
   1b74c:	1b 04 00 4f 	movehi s0, 59
   1b750:	00 60 1f 00 	or s0, s0, 2008
   1b754:	00 00 00 a8 	load_32 s0, (s0)
   1b758:	60 20 00 f2 	bz s0, 1036 <M_Drawer+0x4fc>
   1b75c:	1b 04 00 4f 	movehi s0, 59
   1b760:	40 63 1c 00 	or s26, s0, 1816
   1b764:	1a 00 00 a8 	load_32 s0, (s26)
   1b768:	20 30 00 a8 	load_32 s1, 12(s0)
   1b76c:	61 00 00 f2 	bz s1, 12 <M_Drawer+0x110>
   1b770:	21 00 00 fc 	call s1
   1b774:	1a 00 00 a8 	load_32 s0, (s26)
   1b778:	20 0c 00 4f 	movehi s1, 96
   1b77c:	40 40 00 a6 	load_s16 s2, 16(s0)
   1b780:	60 0c 00 4f 	movehi s3, 96
   1b784:	21 90 1d 00 	or s1, s1, 1892
   1b788:	3e e0 00 88 	store_32 s1, 56(sp)
   1b78c:	03 9b 1d 00 	or s24, s3, 1894
   1b790:	41 00 00 86 	store_16 s2, (s1)
   1b794:	20 48 00 a6 	load_s16 s1, 18(s0)
   1b798:	38 00 00 86 	store_16 s1, (s24)
   1b79c:	60 00 00 a6 	load_s16 s3, (s0)
   1b7a0:	7e 00 01 88 	store_32 s3, 64(sp)
   1b7a4:	63 04 00 14 	cmplt_i s3, s3, 1
   1b7a8:	63 05 00 f4 	bnz s3, 172 <M_Drawer+0x1ec>
   1b7ac:	47 00 00 4f 	movehi s2, 7
   1b7b0:	20 03 00 0f 	move s25, 0
   1b7b4:	42 fc 7f 00 	or s2, s2, 8191
   1b7b8:	5e f0 00 88 	store_32 s2, 60(sp)
   1b7bc:	40 94 01 0f 	move s2, 101
   1b7c0:	5e b0 00 88 	store_32 s2, 44(sp)
   1b7c4:	3e c3 00 88 	store_32 s25, 48(sp)
   1b7c8:	5e d3 00 88 	store_32 s26, 52(sp)
   1b7cc:	02 00 00 f6 	b 8 <M_Drawer+0x16c>
   1b7d0:	1a 00 00 a8 	load_32 s0, (s26)
   1b7d4:	5e f0 00 a8 	load_32 s2, 60(sp)
   1b7d8:	00 20 00 a8 	load_32 s0, 8(s0)
   1b7dc:	59 00 11 c0 	and s2, s25, s2
   1b7e0:	42 50 00 07 	mull_i s2, s2, 20
   1b7e4:	00 00 51 c0 	add_i s0, s0, s2
   1b7e8:	40 08 00 a0 	load_u8 s2, 2(s0)
   1b7ec:	c2 01 00 f2 	bz s2, 56 <M_Drawer+0x1bc>
   1b7f0:	5e e0 00 a8 	load_32 s2, 56(sp)
   1b7f4:	60 83 e0 c1 	sext_16 s27, s1
   1b7f8:	00 08 00 05 	add_i s0, s0, 2
   1b7fc:	42 03 00 a6 	load_s16 s26, (s2)
   1b800:	3e b0 00 a8 	load_32 s1, 44(sp)
   1b804:	d1 8d 00 f8 	call 145220 <W_CacheLumpName>
   1b808:	60 00 f0 c0 	move s3, s0
   1b80c:	00 00 fd c0 	move s0, s26
   1b810:	5e d3 00 a8 	load_32 s26, 52(sp)
   1b814:	20 80 fd c0 	move s1, s27
   1b818:	5e c0 00 a8 	load_32 s2, 48(sp)
   1b81c:	14 ab 00 f8 	call 175184 <V_DrawPatchDirect>
   1b820:	38 00 00 a6 	load_s16 s1, (s24)
   1b824:	19 04 00 05 	add_i s0, s25, 1
   1b828:	21 40 00 05 	add_i s1, s1, 16
   1b82c:	20 03 e0 c1 	sext_16 s25, s0
   1b830:	1e 00 01 a8 	load_32 s0, 64(sp)
   1b834:	38 00 00 86 	store_16 s1, (s24)
   1b838:	19 00 30 c1 	cmpge_i s0, s25, s0
   1b83c:	40 00 00 f4 	bnz s0, 8 <M_Drawer+0x1dc>
   1b840:	e4 ff ff f7 	b -112 <M_Drawer+0x168>
   1b844:	1e e0 00 a8 	load_32 s0, 56(sp)
   1b848:	40 00 00 a6 	load_s16 s2, (s0)
   1b84c:	1a 00 00 a8 	load_32 s0, (s26)
   1b850:	20 48 00 a6 	load_s16 s1, 18(s0)
   1b854:	1b 04 00 4f 	movehi s0, 59
   1b858:	7b 04 00 4f 	movehi s3, 59
   1b85c:	20 80 e0 c1 	sext_16 s1, s1
   1b860:	00 30 1f 00 	or s0, s0, 1996
   1b864:	63 20 26 00 	or s3, s3, 2440
   1b868:	40 00 e1 c1 	sext_16 s2, s2
   1b86c:	00 00 00 a6 	load_s16 s0, (s0)
   1b870:	63 00 00 a6 	load_s16 s3, (s3)
   1b874:	02 83 ff 05 	add_i s24, s2, -32
   1b878:	00 10 00 0b 	shl s0, s0, 4
   1b87c:	01 00 50 c0 	add_i s0, s1, s0
   1b880:	33 04 00 4f 	movehi s1, 51
   1b884:	20 ef ff 05 	add_i s25, s0, -5
   1b888:	21 f8 4f 00 	or s1, s1, 5118
   1b88c:	03 24 00 07 	mull_i s0, s3, 9
   1b890:	01 00 50 c0 	add_i s0, s1, s0
   1b894:	20 94 01 0f 	move s1, 101
   1b898:	ac 8d 00 f8 	call 145072 <W_CacheLumpName>
   1b89c:	60 00 f0 c0 	move s3, s0
   1b8a0:	00 00 fc c0 	move s0, s24
   1b8a4:	40 00 00 0f 	move s2, 0
   1b8a8:	20 80 fc c0 	move s1, s25
   1b8ac:	f0 aa 00 f8 	call 175040 <V_DrawPatchDirect>
   1b8b0:	ad 00 00 f6 	b 692 <M_Drawer+0x4fc>
   1b8b4:	20 0c 00 4f 	movehi s1, 96
   1b8b8:	1b 7c 00 0a 	shr s0, s27, 31
   1b8bc:	1b 00 50 c0 	add_i s0, s27, s0
   1b8c0:	40 90 01 0f 	move s2, 100
   1b8c4:	21 98 1d 00 	or s1, s1, 1894
   1b8c8:	00 04 00 0a 	shr s0, s0, 1
   1b8cc:	02 00 60 c0 	sub_i s0, s2, s0
   1b8d0:	01 00 00 86 	store_16 s0, (s1)
   1b8d4:	a4 00 00 f6 	b 656 <M_Drawer+0x4fc>
   1b8d8:	40 0c 00 4f 	movehi s2, 96
   1b8dc:	01 7c 00 0a 	shr s0, s1, 31
   1b8e0:	01 00 50 c0 	add_i s0, s1, s0
   1b8e4:	20 90 01 0f 	move s1, 100
   1b8e8:	42 98 1d 00 	or s2, s2, 1894
   1b8ec:	00 04 00 0a 	shr s0, s0, 1
   1b8f0:	01 00 60 c0 	sub_i s0, s1, s0
   1b8f4:	02 00 00 86 	store_16 s0, (s2)
   1b8f8:	1e 10 01 05 	add_i s0, sp, 68
   1b8fc:	1e d0 00 88 	store_32 s0, 52(sp)
   1b900:	00 a0 00 0f 	move s0, 40
   1b904:	1e 70 00 88 	store_32 s0, 28(sp)
   1b908:	00 0c 00 4f 	movehi s0, 96
   1b90c:	20 0c 00 4f 	movehi s1, 96
   1b910:	40 80 02 0f 	move s2, 160
   1b914:	5e 90 00 88 	store_32 s2, 36(sp)
   1b918:	00 90 1d 00 	or s0, s0, 1892
   1b91c:	1e 80 00 88 	store_32 s0, 32(sp)
   1b920:	01 98 1d 00 	or s0, s1, 1894
   1b924:	1e c0 00 88 	store_32 s0, 48(sp)
   1b928:	20 03 00 0f 	move s25, 0
   1b92c:	60 03 fd c0 	move s27, s26
   1b930:	3e e3 00 88 	store_32 s25, 56(sp)
   1b934:	3e a3 00 88 	store_32 s25, 40(sp)
   1b938:	18 fc 03 01 	and s0, s24, 255
   1b93c:	00 83 fc c0 	move s24, s25
   1b940:	00 28 00 10 	cmpeq_i s0, s0, 10
   1b944:	80 01 00 f4 	bnz s0, 48 <M_Drawer+0x30c>
   1b948:	00 80 fd c0 	move s0, s27
   1b94c:	95 db 00 f8 	call 224852 <strlen>
   1b950:	20 04 00 0f 	move s1, 1
   1b954:	00 83 e0 c1 	sext_16 s24, s1
   1b958:	40 00 9c c1 	cmple_u s2, s0, s24
   1b95c:	a2 02 00 f4 	bnz s2, 84 <M_Drawer+0x348>
   1b960:	5b 00 5c c0 	add_i s2, s27, s24
   1b964:	21 04 00 05 	add_i s1, s1, 1
   1b968:	42 00 00 a0 	load_u8 s2, (s2)
   1b96c:	42 28 00 11 	cmpne_i s2, s2, 10
   1b970:	22 ff ff f5 	bnz s2, -28 <M_Drawer+0x2ec>
   1b974:	5e d3 00 a8 	load_32 s26, 52(sp)
   1b978:	00 00 fd c0 	move s0, s26
   1b97c:	20 80 fc c0 	move s1, s25
   1b980:	5e 70 00 a8 	load_32 s2, 28(sp)
   1b984:	48 d8 00 f8 	call 221472 <memset>
   1b988:	00 00 fd c0 	move s0, s26
   1b98c:	20 80 fd c0 	move s1, s27
   1b990:	40 00 fc c0 	move s2, s24
   1b994:	9b db 00 f8 	call 224876 <strncpy>
   1b998:	1e e0 00 a8 	load_32 s0, 56(sp)
   1b99c:	00 00 5c c0 	add_i s0, s0, s24
   1b9a0:	60 07 00 05 	add_i s27, s0, 1
   1b9a4:	1e b0 00 a8 	load_32 s0, 44(sp)
   1b9a8:	40 03 00 a8 	load_32 s26, (s0)
   1b9ac:	02 00 00 f6 	b 8 <M_Drawer+0x34c>
   1b9b0:	7e e3 00 a8 	load_32 s27, 56(sp)
   1b9b4:	5a 83 5d c0 	add_i s26, s26, s27
   1b9b8:	00 00 fd c0 	move s0, s26
   1b9bc:	79 db 00 f8 	call 224740 <strlen>
   1b9c0:	00 00 1c c1 	cmpne_i s0, s0, s24
   1b9c4:	a0 00 00 f4 	bnz s0, 20 <M_Drawer+0x370>
   1b9c8:	1e d0 00 a8 	load_32 s0, 52(sp)
   1b9cc:	20 00 fd c0 	move s1, s26
   1b9d0:	7f db 00 f8 	call 224764 <strcpy>
   1b9d4:	7b 03 5c c0 	add_i s27, s27, s24
   1b9d8:	7e e3 00 88 	store_32 s27, 56(sp)
   1b9dc:	1e 13 01 a0 	load_u8 s24, 68(sp)
   1b9e0:	38 04 00 f2 	bz s24, 132 <M_Drawer+0x3fc>
   1b9e4:	1e 10 01 05 	add_i s0, sp, 68
   1b9e8:	1e f0 00 88 	store_32 s0, 60(sp)
   1b9ec:	6d db 00 f8 	call 224692 <strlen>
   1b9f0:	60 03 00 0f 	move s27, 0
   1b9f4:	40 03 f0 c0 	move s26, s0
   1b9f8:	20 83 fd c0 	move s25, s27
   1b9fc:	04 00 00 f6 	b 16 <M_Drawer+0x3a4>
   1ba00:	1e f0 00 a8 	load_32 s0, 60(sp)
   1ba04:	00 80 5d c0 	add_i s0, s0, s27
   1ba08:	00 03 00 a0 	load_u8 s24, (s0)
   1ba0c:	00 00 dc c1 	sext_8 s0, s24
   1ba10:	35 db 00 f8 	call 224468 <toupper>
   1ba14:	00 7c ff 05 	add_i s0, s0, -33
   1ba18:	20 f8 00 16 	cmpgt_u s1, s0, 62
   1ba1c:	41 00 00 f4 	bnz s1, 8 <M_Drawer+0x3bc>
   1ba20:	07 00 00 f6 	b 28 <M_Drawer+0x3d4>
   1ba24:	00 10 00 0f 	move s0, 4
   1ba28:	7b 07 00 05 	add_i s27, s27, 1
   1ba2c:	39 03 50 c0 	add_i s25, s25, s0
   1ba30:	3b 00 7d c1 	cmpge_u s1, s27, s26
   1ba34:	81 01 00 f4 	bnz s1, 48 <M_Drawer+0x3fc>
   1ba38:	f2 ff ff f7 	b -56 <M_Drawer+0x398>
   1ba3c:	3e 00 01 a8 	load_32 s1, 64(sp)
   1ba40:	00 08 00 0b 	shl s0, s0, 2
   1ba44:	01 00 50 c0 	add_i s0, s1, s0
   1ba48:	00 00 00 a8 	load_32 s0, (s0)
   1ba4c:	00 00 00 a6 	load_s16 s0, (s0)
   1ba50:	7b 07 00 05 	add_i s27, s27, 1
   1ba54:	39 03 50 c0 	add_i s25, s25, s0
   1ba58:	3b 00 7d c1 	cmpge_u s1, s27, s26
   1ba5c:	41 00 00 f4 	bnz s1, 8 <M_Drawer+0x3fc>
   1ba60:	e8 ff ff f7 	b -96 <M_Drawer+0x398>
   1ba64:	19 7c 00 0a 	shr s0, s25, 31
   1ba68:	3e 90 00 a8 	load_32 s1, 36(sp)
   1ba6c:	19 00 50 c0 	add_i s0, s25, s0
   1ba70:	00 04 00 0a 	shr s0, s0, 1
   1ba74:	01 00 60 c0 	sub_i s0, s1, s0
   1ba78:	3e 80 00 a8 	load_32 s1, 32(sp)
   1ba7c:	00 03 e0 c1 	sext_16 s24, s0
   1ba80:	01 00 00 86 	store_16 s0, (s1)
   1ba84:	1e c0 00 a8 	load_32 s0, 48(sp)
   1ba88:	60 03 00 a6 	load_s16 s27, (s0)
   1ba8c:	5e d3 00 a8 	load_32 s26, 52(sp)
   1ba90:	1e f3 00 88 	store_32 s24, 60(sp)
   1ba94:	1a 00 00 a0 	load_u8 s0, (s26)
   1ba98:	80 04 00 f2 	bz s0, 144 <M_Drawer+0x4c0>
   1ba9c:	04 00 00 f6 	b 16 <M_Drawer+0x444>
   1baa0:	18 13 00 05 	add_i s24, s24, 4
   1baa4:	1a 00 00 a0 	load_u8 s0, (s26)
   1baa8:	00 04 00 f2 	bz s0, 128 <M_Drawer+0x4c0>
   1baac:	20 28 00 11 	cmpne_i s1, s0, 10
   1bab0:	5a 07 00 05 	add_i s26, s26, 1
   1bab4:	41 00 00 f4 	bnz s1, 8 <M_Drawer+0x454>
   1bab8:	17 00 00 f6 	b 92 <M_Drawer+0x4ac>
   1babc:	00 00 d0 c1 	sext_8 s0, s0
   1bac0:	09 db 00 f8 	call 224292 <toupper>
   1bac4:	00 7c ff 05 	add_i s0, s0, -33
   1bac8:	20 fc 00 18 	cmplt_u s1, s0, 63
   1bacc:	41 00 00 f4 	bnz s1, 8 <M_Drawer+0x46c>
   1bad0:	f4 ff ff f7 	b -48 <M_Drawer+0x438>
   1bad4:	3e 00 01 a8 	load_32 s1, 64(sp)
   1bad8:	00 08 00 0b 	shl s0, s0, 2
   1badc:	01 00 50 c0 	add_i s0, s1, s0
   1bae0:	60 00 00 a8 	load_32 s3, (s0)
   1bae4:	03 00 00 a6 	load_s16 s0, (s3)
   1bae8:	38 03 50 c0 	add_i s25, s24, s0
   1baec:	19 00 05 12 	cmpgt_i s0, s25, 320
   1baf0:	c0 01 00 f4 	bnz s0, 56 <M_Drawer+0x4c0>
   1baf4:	00 00 fc c0 	move s0, s24
   1baf8:	40 00 00 0f 	move s2, 0
   1bafc:	20 80 fd c0 	move s1, s27
   1bb00:	5b aa 00 f8 	call 174444 <V_DrawPatchDirect>
   1bb04:	00 83 fc c0 	move s24, s25
   1bb08:	1a 00 00 a0 	load_u8 s0, (s26)
   1bb0c:	e0 00 00 f2 	bz s0, 28 <M_Drawer+0x4c0>
   1bb10:	e7 ff ff f7 	b -100 <M_Drawer+0x444>
   1bb14:	7b 33 00 05 	add_i s27, s27, 12
   1bb18:	1e f3 00 a8 	load_32 s24, 60(sp)
   1bb1c:	1a 00 00 a0 	load_u8 s0, (s26)
   1bb20:	40 00 00 f2 	bz s0, 8 <M_Drawer+0x4c0>
   1bb24:	e2 ff ff f7 	b -120 <M_Drawer+0x444>
   1bb28:	1e 00 01 a8 	load_32 s0, 64(sp)
   1bb2c:	00 00 00 a8 	load_32 s0, (s0)
   1bb30:	00 08 00 a6 	load_s16 s0, 2(s0)
   1bb34:	5e c0 00 a8 	load_32 s2, 48(sp)
   1bb38:	22 00 00 a6 	load_s16 s1, (s2)
   1bb3c:	01 00 50 c0 	add_i s0, s1, s0
   1bb40:	02 00 00 86 	store_16 s0, (s2)
   1bb44:	1e b0 00 a8 	load_32 s0, 44(sp)
   1bb48:	40 03 00 a8 	load_32 s26, (s0)
   1bb4c:	1e e0 00 a8 	load_32 s0, 56(sp)
   1bb50:	7a 03 50 c0 	add_i s27, s26, s0
   1bb54:	1b 03 00 a0 	load_u8 s24, (s27)
   1bb58:	3e a3 00 a8 	load_32 s25, 40(sp)
   1bb5c:	58 00 00 f2 	bz s24, 8 <M_Drawer+0x4fc>
   1bb60:	76 ff ff f7 	b -552 <M_Drawer+0x2d0>
   1bb64:	fe b3 01 a8 	load_32 ra, 108(sp)
   1bb68:	7e c3 01 a8 	load_32 s27, 112(sp)
   1bb6c:	5e d3 01 a8 	load_32 s26, 116(sp)
   1bb70:	3e e3 01 a8 	load_32 s25, 120(sp)
   1bb74:	1e f3 01 a8 	load_32 s24, 124(sp)
   1bb78:	de 03 02 05 	add_i sp, sp, 128
   1bb7c:	1f 00 00 f0 	ret

000000000001bb80 M_Ticker:
   1bb80:	1b 04 00 4f 	movehi s0, 59
   1bb84:	00 c0 24 00 	or s0, s0, 2352
   1bb88:	20 00 00 a6 	load_s16 s1, (s0)
   1bb8c:	21 fc ff 05 	add_i s1, s1, -1
   1bb90:	20 00 00 86 	store_16 s1, (s0)
   1bb94:	40 80 e0 c1 	sext_16 s2, s1
   1bb98:	42 00 00 12 	cmpgt_i s2, s2, 0
   1bb9c:	42 00 00 f4 	bnz s2, 8 <M_Ticker+0x24>
   1bba0:	02 00 00 f6 	b 8 <M_Ticker+0x28>
   1bba4:	1f 00 00 f0 	ret
   1bba8:	3b 04 00 4f 	movehi s1, 59
   1bbac:	21 20 26 00 	or s1, s1, 2440
   1bbb0:	41 00 00 a6 	load_s16 s2, (s1)
   1bbb4:	42 04 00 03 	xor s2, s2, 1
   1bbb8:	41 00 00 86 	store_16 s2, (s1)
   1bbbc:	20 20 00 0f 	move s1, 8
   1bbc0:	20 00 00 86 	store_16 s1, (s0)
   1bbc4:	1f 00 00 f0 	ret

000000000001bbc8 M_Init:
   1bbc8:	1b 04 00 4f 	movehi s0, 59
   1bbcc:	33 04 00 4f 	movehi s1, 51
   1bbd0:	7b 04 00 4f 	movehi s3, 59
   1bbd4:	40 60 1c 00 	or s2, s0, 1816
   1bbd8:	01 20 52 00 	or s0, s1, 5256
   1bbdc:	23 60 1f 00 	or s1, s3, 2008
   1bbe0:	02 00 00 88 	store_32 s0, (s2)
   1bbe4:	5b 04 00 4f 	movehi s2, 59
   1bbe8:	60 00 00 0f 	move s3, 0
   1bbec:	61 00 00 88 	store_32 s3, (s1)
   1bbf0:	bb 04 00 4f 	movehi s5, 59
   1bbf4:	22 30 1f 00 	or s1, s2, 1996
   1bbf8:	80 50 00 a6 	load_s16 s4, 20(s0)
   1bbfc:	5b 04 00 4f 	movehi s2, 59
   1bc00:	81 00 00 86 	store_16 s4, (s1)
   1bc04:	9b 04 00 4f 	movehi s4, 59
   1bc08:	22 20 26 00 	or s1, s2, 2440
   1bc0c:	5b 04 00 4f 	movehi s2, 59
   1bc10:	61 00 00 86 	store_16 s3, (s1)
   1bc14:	22 c0 24 00 	or s1, s2, 2352
   1bc18:	44 a0 24 00 	or s2, s4, 2344
   1bc1c:	80 28 00 0f 	move s4, 10
   1bc20:	81 00 00 86 	store_16 s4, (s1)
   1bc24:	9b 04 00 4f 	movehi s4, 59
   1bc28:	22 00 00 a8 	load_32 s1, (s2)
   1bc2c:	5b 04 00 4f 	movehi s2, 59
   1bc30:	42 90 24 00 	or s2, s2, 2340
   1bc34:	21 f4 ff 05 	add_i s1, s1, -3
   1bc38:	22 00 00 88 	store_32 s1, (s2)
   1bc3c:	24 b0 1f 00 	or s1, s4, 2028
   1bc40:	45 a0 1f 00 	or s2, s5, 2024
   1bc44:	9b 04 00 4f 	movehi s4, 59
   1bc48:	61 00 00 88 	store_32 s3, (s1)
   1bc4c:	62 00 00 88 	store_32 s3, (s2)
   1bc50:	5b 04 00 4f 	movehi s2, 59
   1bc54:	24 70 1f 00 	or s1, s4, 2012
   1bc58:	8b 04 00 4f 	movehi s4, 43
   1bc5c:	61 00 00 88 	store_32 s3, (s1)
   1bc60:	22 10 20 00 	or s1, s2, 2052
   1bc64:	44 00 40 00 	or s2, s4, 4096
   1bc68:	60 fc ff 0f 	move s3, -1
   1bc6c:	61 00 00 88 	store_32 s3, (s1)
   1bc70:	22 00 00 a8 	load_32 s1, (s2)
   1bc74:	41 08 00 18 	cmplt_u s2, s1, 2
   1bc78:	42 00 00 f4 	bnz s2, 8 <M_Init+0xb8>
   1bc7c:	07 00 00 f6 	b 28 <M_Init+0xd0>
   1bc80:	13 04 00 4f 	movehi s0, 51
   1bc84:	00 c0 53 00 	or s0, s0, 5360
   1bc88:	20 00 00 a6 	load_s16 s1, (s0)
   1bc8c:	21 fc ff 05 	add_i s1, s1, -1
   1bc90:	20 00 00 86 	store_16 s1, (s0)
   1bc94:	26 00 00 f6 	b 152 <M_Init+0x164>
   1bc98:	21 08 00 11 	cmpne_i s1, s1, 2
   1bc9c:	81 04 00 f4 	bnz s1, 144 <M_Init+0x164>
   1bca0:	33 04 00 4f 	movehi s1, 51
   1bca4:	6c 00 00 4f 	movehi s3, 12
   1bca8:	21 40 50 00 	or s1, s1, 5136
   1bcac:	41 d0 01 a8 	load_32 s2, 116(s1)
   1bcb0:	41 80 01 88 	store_32 s2, 96(s1)
   1bcb4:	41 c0 01 a8 	load_32 s2, 112(s1)
   1bcb8:	41 70 01 88 	store_32 s2, 92(s1)
   1bcbc:	41 b0 01 a8 	load_32 s2, 108(s1)
   1bcc0:	41 60 01 88 	store_32 s2, 88(s1)
   1bcc4:	41 a0 01 a8 	load_32 s2, 104(s1)
   1bcc8:	41 50 01 88 	store_32 s2, 84(s1)
   1bccc:	41 90 01 a8 	load_32 s2, 100(s1)
   1bcd0:	41 40 01 88 	store_32 s2, 80(s1)
   1bcd4:	53 04 00 4f 	movehi s2, 51
   1bcd8:	20 00 00 a6 	load_s16 s1, (s0)
   1bcdc:	21 fc ff 05 	add_i s1, s1, -1
   1bce0:	20 00 00 86 	store_16 s1, (s0)
   1bce4:	20 48 00 a6 	load_s16 s1, 18(s0)
   1bce8:	21 20 00 05 	add_i s1, s1, 8
   1bcec:	20 48 00 86 	store_16 s1, 18(s0)
   1bcf0:	22 b0 55 00 	or s1, s2, 5484
   1bcf4:	53 04 00 4f 	movehi s2, 51
   1bcf8:	01 10 00 88 	store_32 s0, 4(s1)
   1bcfc:	23 a0 17 00 	or s1, s3, 1512
   1bd00:	02 40 59 00 	or s0, s2, 5712
   1bd04:	48 a4 00 4f 	movehi s2, 1320
   1bd08:	6c 00 00 4f 	movehi s3, 12
   1bd0c:	20 30 00 88 	store_32 s1, 12(s0)
   1bd10:	33 04 00 4f 	movehi s1, 51
   1bd14:	42 28 05 00 	or s2, s2, 330
   1bd18:	40 40 00 88 	store_32 s2, 16(s0)
   1bd1c:	03 80 19 00 	or s0, s3, 1632
   1bd20:	21 f0 58 00 	or s1, s1, 5692
   1bd24:	01 30 00 88 	store_32 s0, 12(s1)
   1bd28:	1f 00 00 f0 	ret
   1bd2c:	1f 00 00 f0 	ret

000000000001bd30 M_DrawText:
   1bd30:	de 03 ff 05 	add_i sp, sp, -64
   1bd34:	1e f3 00 88 	store_32 s24, 60(sp)
   1bd38:	3e e3 00 88 	store_32 s25, 56(sp)
   1bd3c:	5e d3 00 88 	store_32 s26, 52(sp)
   1bd40:	7e c3 00 88 	store_32 s27, 48(sp)
   1bd44:	fe b3 00 88 	store_32 ra, 44(sp)
   1bd48:	00 83 f1 c0 	move s24, s3
   1bd4c:	78 00 00 a0 	load_u8 s3, (s24)
   1bd50:	3e a0 00 88 	store_32 s1, 40(sp)
   1bd54:	40 03 f0 c0 	move s26, s0
   1bd58:	c3 06 00 f2 	bz s3, 216 <M_DrawText+0x100>
   1bd5c:	00 0c 00 4f 	movehi s0, 96
   1bd60:	20 b3 02 00 	or s25, s0, 172
   1bd64:	00 00 00 0f 	move s0, 0
   1bd68:	22 03 00 f2 	bz s2, 100 <M_DrawText+0x9c>
   1bd6c:	1e 90 00 88 	store_32 s0, 36(sp)
   1bd70:	00 80 d1 c1 	sext_8 s0, s3
   1bd74:	5c da 00 f8 	call 223600 <toupper>
   1bd78:	00 7c ff 05 	add_i s0, s0, -33
   1bd7c:	20 00 01 18 	cmplt_u s1, s0, 64
   1bd80:	61 00 00 f4 	bnz s1, 12 <M_DrawText+0x5c>
   1bd84:	7a 13 00 05 	add_i s27, s26, 4
   1bd88:	0c 00 00 f6 	b 48 <M_DrawText+0x88>
   1bd8c:	00 08 00 0b 	shl s0, s0, 2
   1bd90:	19 00 50 c0 	add_i s0, s25, s0
   1bd94:	60 00 00 a8 	load_32 s3, (s0)
   1bd98:	03 00 00 a6 	load_s16 s0, (s3)
   1bd9c:	7a 03 50 c0 	add_i s27, s26, s0
   1bda0:	1b 00 05 12 	cmpgt_i s0, s27, 320
   1bda4:	60 04 00 f4 	bnz s0, 140 <M_DrawText+0x100>
   1bda8:	00 00 fd c0 	move s0, s26
   1bdac:	3e a0 00 a8 	load_32 s1, 40(sp)
   1bdb0:	5e 90 00 a8 	load_32 s2, 36(sp)
   1bdb4:	ae a9 00 f8 	call 173752 <V_DrawPatchDirect>
   1bdb8:	18 07 00 05 	add_i s24, s24, 1
   1bdbc:	78 00 00 a0 	load_u8 s3, (s24)
   1bdc0:	40 83 fd c0 	move s26, s27
   1bdc4:	83 03 00 f2 	bz s3, 112 <M_DrawText+0x104>
   1bdc8:	ea ff ff f7 	b -88 <M_DrawText+0x40>
   1bdcc:	1e 90 00 88 	store_32 s0, 36(sp)
   1bdd0:	00 80 d1 c1 	sext_8 s0, s3
   1bdd4:	44 da 00 f8 	call 223504 <toupper>
   1bdd8:	00 7c ff 05 	add_i s0, s0, -33
   1bddc:	20 fc 00 16 	cmpgt_u s1, s0, 63
   1bde0:	41 00 00 f4 	bnz s1, 8 <M_DrawText+0xb8>
   1bde4:	03 00 00 f6 	b 12 <M_DrawText+0xc0>
   1bde8:	7a 13 00 05 	add_i s27, s26, 4
   1bdec:	0c 00 00 f6 	b 48 <M_DrawText+0xec>
   1bdf0:	00 08 00 0b 	shl s0, s0, 2
   1bdf4:	19 00 50 c0 	add_i s0, s25, s0
   1bdf8:	60 00 00 a8 	load_32 s3, (s0)
   1bdfc:	03 00 00 a6 	load_s16 s0, (s3)
   1be00:	7a 03 50 c0 	add_i s27, s26, s0
   1be04:	1b 00 05 12 	cmpgt_i s0, s27, 320
   1be08:	40 01 00 f4 	bnz s0, 40 <M_DrawText+0x100>
   1be0c:	00 00 fd c0 	move s0, s26
   1be10:	3e a0 00 a8 	load_32 s1, 40(sp)
   1be14:	5e 90 00 a8 	load_32 s2, 36(sp)
   1be18:	ac a8 00 f8 	call 172720 <V_DrawPatch>
   1be1c:	18 07 00 05 	add_i s24, s24, 1
   1be20:	78 00 00 a0 	load_u8 s3, (s24)
   1be24:	40 83 fd c0 	move s26, s27
   1be28:	63 00 00 f2 	bz s3, 12 <M_DrawText+0x104>
   1be2c:	e9 ff ff f7 	b -92 <M_DrawText+0xa0>
   1be30:	60 03 fd c0 	move s27, s26
   1be34:	00 80 fd c0 	move s0, s27
   1be38:	fe b3 00 a8 	load_32 ra, 44(sp)
   1be3c:	7e c3 00 a8 	load_32 s27, 48(sp)
   1be40:	5e d3 00 a8 	load_32 s26, 52(sp)
   1be44:	3e e3 00 a8 	load_32 s25, 56(sp)
   1be48:	1e f3 00 a8 	load_32 s24, 60(sp)
   1be4c:	de 03 01 05 	add_i sp, sp, 64
   1be50:	1f 00 00 f0 	ret

000000000001be54 M_WriteFile:
   1be54:	00 04 00 0f 	move s0, 1
   1be58:	1f 00 00 f0 	ret

000000000001be5c M_ReadFile:
   1be5c:	00 00 00 0f 	move s0, 0
   1be60:	1f 00 00 f0 	ret

000000000001be64 M_SaveDefaults:
   1be64:	1f 00 00 f0 	ret

000000000001be68 M_LoadDefaults:
   1be68:	1b 04 00 4f 	movehi s0, 59
   1be6c:	53 04 00 4f 	movehi s2, 51
   1be70:	20 94 00 0f 	move s1, 37
   1be74:	00 40 26 00 	or s0, s0, 2448
   1be78:	42 00 62 00 	or s2, s2, 6272
   1be7c:	20 00 00 88 	store_32 s1, (s0)
   1be80:	20 00 00 0f 	move s1, 0
   1be84:	61 50 00 07 	mull_i s3, s1, 20
   1be88:	62 80 51 c0 	add_i s3, s2, s3
   1be8c:	21 04 00 05 	add_i s1, s1, 1
   1be90:	83 20 00 a8 	load_32 s4, 8(s3)
   1be94:	63 10 00 a8 	load_32 s3, 4(s3)
   1be98:	83 00 00 88 	store_32 s4, (s3)
   1be9c:	60 00 00 a8 	load_32 s3, (s0)
   1bea0:	61 80 41 c1 	cmplt_i s3, s1, s3
   1bea4:	03 ff ff f5 	bnz s3, -32 <M_LoadDefaults+0x1c>
   1bea8:	1f 00 00 f0 	ret

000000000001beac WritePCXfile:
   1beac:	1f 00 00 f0 	ret

000000000001beb0 M_ScreenShot:
   1beb0:	1f 00 00 f0 	ret

000000000001beb4 M_CheckParm:
   1beb4:	00 00 00 0f 	move s0, 0
   1beb8:	1f 00 00 f0 	ret

000000000001bebc M_ClearBox:
   1bebc:	5f fc 7f 4f 	movehi s2, 262143
   1bec0:	20 00 80 4f 	movehi s1, 262144
   1bec4:	20 30 00 88 	store_32 s1, 12(s0)
   1bec8:	20 00 00 88 	store_32 s1, (s0)
   1becc:	22 fc 7f 00 	or s1, s2, 8191
   1bed0:	20 20 00 88 	store_32 s1, 8(s0)
   1bed4:	20 10 00 88 	store_32 s1, 4(s0)
   1bed8:	1f 00 00 f0 	ret

000000000001bedc M_AddToBox:
   1bedc:	60 20 00 a8 	load_32 s3, 8(s0)
   1bee0:	63 80 20 c1 	cmpgt_i s3, s3, s1
   1bee4:	43 00 00 f4 	bnz s3, 8 <M_AddToBox+0x10>
   1bee8:	03 00 00 f6 	b 12 <M_AddToBox+0x18>
   1beec:	60 20 00 05 	add_i s3, s0, 8
   1bef0:	05 00 00 f6 	b 20 <M_AddToBox+0x28>
   1bef4:	60 30 00 a8 	load_32 s3, 12(s0)
   1bef8:	63 80 30 c1 	cmpge_i s3, s3, s1
   1befc:	63 00 00 f4 	bnz s3, 12 <M_AddToBox+0x2c>
   1bf00:	60 30 00 05 	add_i s3, s0, 12
   1bf04:	23 00 00 88 	store_32 s1, (s3)
   1bf08:	20 10 00 a8 	load_32 s1, 4(s0)
   1bf0c:	21 00 21 c1 	cmpgt_i s1, s1, s2
   1bf10:	41 00 00 f4 	bnz s1, 8 <M_AddToBox+0x3c>
   1bf14:	03 00 00 f6 	b 12 <M_AddToBox+0x44>
   1bf18:	00 10 00 05 	add_i s0, s0, 4
   1bf1c:	04 00 00 f6 	b 16 <M_AddToBox+0x50>
   1bf20:	20 00 00 a8 	load_32 s1, (s0)
   1bf24:	21 00 31 c1 	cmpge_i s1, s1, s2
   1bf28:	41 00 00 f4 	bnz s1, 8 <M_AddToBox+0x54>
   1bf2c:	40 00 00 88 	store_32 s2, (s0)
   1bf30:	1f 00 00 f0 	ret

000000000001bf34 FixedMul:
   1bf34:	41 00 70 c0 	mull_i s2, s1, s0
   1bf38:	01 00 f0 c1 	mulh_i s0, s1, s0
   1bf3c:	22 40 00 0a 	shr s1, s2, 16
   1bf40:	00 40 00 0b 	shl s0, s0, 16
   1bf44:	01 00 00 c0 	or s0, s1, s0
   1bf48:	1f 00 00 f0 	ret

000000000001bf4c FixedDiv:
   1bf4c:	de 03 fe 05 	add_i sp, sp, -128
   1bf50:	1e f3 01 88 	store_32 s24, 124(sp)
   1bf54:	fe e3 01 88 	store_32 ra, 120(sp)
   1bf58:	40 7c 00 09 	ashr s2, s0, 31
   1bf5c:	60 00 51 c0 	add_i s3, s0, s2
   1bf60:	43 00 31 c0 	xor s2, s3, s2
   1bf64:	61 7c 00 09 	ashr s3, s1, 31
   1bf68:	81 80 51 c0 	add_i s4, s1, s3
   1bf6c:	42 38 00 0a 	shr s2, s2, 14
   1bf70:	64 80 31 c0 	xor s3, s4, s3
   1bf74:	42 80 41 c1 	cmplt_i s2, s2, s3
   1bf78:	42 00 00 f4 	bnz s2, 8 <FixedDiv+0x34>
   1bf7c:	28 00 00 f6 	b 160 <FixedDiv+0xd0>
   1bf80:	20 80 a0 c2 	itof s1, s1
   1bf84:	43 00 00 4f 	movehi s2, 3
   1bf88:	00 00 a0 c2 	itof s0, s0
   1bf8c:	42 50 21 00 	or s2, s2, 2132
   1bf90:	42 00 00 a8 	load_32 s2, (s2)
   1bf94:	60 80 c0 c1 	reciprocal s3, s1
   1bf98:	83 80 20 c2 	mul_f s4, s3, s1
   1bf9c:	82 00 12 c2 	sub_f s4, s2, s4
   1bfa0:	63 00 22 c2 	mul_f s3, s3, s4
   1bfa4:	23 80 20 c2 	mul_f s1, s3, s1
   1bfa8:	22 80 10 c2 	sub_f s1, s2, s1
   1bfac:	43 00 00 4f 	movehi s2, 3
   1bfb0:	23 80 20 c2 	mul_f s1, s3, s1
   1bfb4:	00 80 20 c2 	mul_f s0, s0, s1
   1bfb8:	22 40 21 00 	or s1, s2, 2128
   1bfbc:	43 00 00 4f 	movehi s2, 3
   1bfc0:	21 00 00 a8 	load_32 s1, (s1)
   1bfc4:	00 83 20 c2 	mul_f s24, s0, s1
   1bfc8:	02 70 21 00 	or s0, s2, 2140
   1bfcc:	00 00 00 a8 	load_32 s0, (s0)
   1bfd0:	18 00 d0 c2 	cmpge_f s0, s24, s0
   1bfd4:	20 01 00 f4 	bnz s0, 36 <FixedDiv+0xac>
   1bfd8:	03 00 00 4f 	movehi s0, 3
   1bfdc:	27 00 00 4f 	movehi s1, 7
   1bfe0:	00 20 21 00 	or s0, s0, 2120
   1bfe4:	21 fc 7f 00 	or s1, s1, 8191
   1bfe8:	00 00 00 a8 	load_32 s0, (s0)
   1bfec:	18 00 e0 c2 	cmplt_f s0, s24, s0
   1bff0:	00 80 10 c1 	cmpne_i s0, s0, s1
   1bff4:	a0 00 00 f4 	bnz s0, 20 <FixedDiv+0xbc>
   1bff8:	00 00 00 4f 	movehi s0, 0
   1bffc:	00 54 52 00 	or s0, s0, 5269
   1c000:	1e 00 00 88 	store_32 s0, (sp)
   1c004:	40 c8 ff f9 	call -57088 <I_Error>
   1c008:	00 00 bc c1 	ftoi s0, s24
   1c00c:	fe e3 01 a8 	load_32 ra, 120(sp)
   1c010:	1e f3 01 a8 	load_32 s24, 124(sp)
   1c014:	de 03 02 05 	add_i sp, sp, 128
   1c018:	1f 00 00 f0 	ret
   1c01c:	01 00 30 c0 	xor s0, s1, s0
   1c020:	00 00 00 14 	cmplt_i s0, s0, 0
   1c024:	e0 00 00 f4 	bnz s0, 28 <FixedDiv+0xf4>
   1c028:	1f fc 7f 4f 	movehi s0, 262143
   1c02c:	00 fc 7f 00 	or s0, s0, 8191
   1c030:	fe e3 01 a8 	load_32 ra, 120(sp)
   1c034:	1e f3 01 a8 	load_32 s24, 124(sp)
   1c038:	de 03 02 05 	add_i sp, sp, 128
   1c03c:	1f 00 00 f0 	ret
   1c040:	00 00 80 4f 	movehi s0, 262144
   1c044:	fe e3 01 a8 	load_32 ra, 120(sp)
   1c048:	1e f3 01 a8 	load_32 s24, 124(sp)
   1c04c:	de 03 02 05 	add_i sp, sp, 128
   1c050:	1f 00 00 f0 	ret

000000000001c054 FixedDiv2:
   1c054:	de 03 fe 05 	add_i sp, sp, -128
   1c058:	1e f3 01 88 	store_32 s24, 124(sp)
   1c05c:	fe e3 01 88 	store_32 ra, 120(sp)
   1c060:	20 80 a0 c2 	itof s1, s1
   1c064:	43 00 00 4f 	movehi s2, 3
   1c068:	00 00 a0 c2 	itof s0, s0
   1c06c:	42 50 21 00 	or s2, s2, 2132
   1c070:	42 00 00 a8 	load_32 s2, (s2)
   1c074:	60 80 c0 c1 	reciprocal s3, s1
   1c078:	83 80 20 c2 	mul_f s4, s3, s1
   1c07c:	82 00 12 c2 	sub_f s4, s2, s4
   1c080:	63 00 22 c2 	mul_f s3, s3, s4
   1c084:	23 80 20 c2 	mul_f s1, s3, s1
   1c088:	22 80 10 c2 	sub_f s1, s2, s1
   1c08c:	43 00 00 4f 	movehi s2, 3
   1c090:	23 80 20 c2 	mul_f s1, s3, s1
   1c094:	00 80 20 c2 	mul_f s0, s0, s1
   1c098:	22 40 21 00 	or s1, s2, 2128
   1c09c:	43 00 00 4f 	movehi s2, 3
   1c0a0:	21 00 00 a8 	load_32 s1, (s1)
   1c0a4:	00 83 20 c2 	mul_f s24, s0, s1
   1c0a8:	02 70 21 00 	or s0, s2, 2140
   1c0ac:	00 00 00 a8 	load_32 s0, (s0)
   1c0b0:	18 00 d0 c2 	cmpge_f s0, s24, s0
   1c0b4:	20 01 00 f4 	bnz s0, 36 <FixedDiv2+0x84>
   1c0b8:	03 00 00 4f 	movehi s0, 3
   1c0bc:	27 00 00 4f 	movehi s1, 7
   1c0c0:	00 20 21 00 	or s0, s0, 2120
   1c0c4:	21 fc 7f 00 	or s1, s1, 8191
   1c0c8:	00 00 00 a8 	load_32 s0, (s0)
   1c0cc:	18 00 e0 c2 	cmplt_f s0, s24, s0
   1c0d0:	00 80 10 c1 	cmpne_i s0, s0, s1
   1c0d4:	a0 00 00 f4 	bnz s0, 20 <FixedDiv2+0x94>
   1c0d8:	00 00 00 4f 	movehi s0, 0
   1c0dc:	00 54 52 00 	or s0, s0, 5269
   1c0e0:	1e 00 00 88 	store_32 s0, (sp)
   1c0e4:	08 c8 ff f9 	call -57312 <I_Error>
   1c0e8:	00 00 bc c1 	ftoi s0, s24
   1c0ec:	fe e3 01 a8 	load_32 ra, 120(sp)
   1c0f0:	1e f3 01 a8 	load_32 s24, 124(sp)
   1c0f4:	de 03 02 05 	add_i sp, sp, 128
   1c0f8:	1f 00 00 f0 	ret

000000000001c0fc SwapSHORT:
   1c0fc:	20 60 00 0b 	shl s1, s0, 24
   1c100:	00 20 00 0b 	shl s0, s0, 8
   1c104:	01 00 00 c0 	or s0, s1, s0
   1c108:	00 40 00 0a 	shr s0, s0, 16
   1c10c:	1f 00 00 f0 	ret

000000000001c110 SwapLONG:
   1c110:	27 00 00 4f 	movehi s1, 7
   1c114:	40 20 00 0a 	shr s2, s0, 8
   1c118:	60 60 00 0b 	shl s3, s0, 24
   1c11c:	21 00 7c 00 	or s1, s1, 7936
   1c120:	22 80 10 c0 	and s1, s2, s1
   1c124:	40 20 00 0b 	shl s2, s0, 8
   1c128:	98 fc 00 4f 	movehi s4, 2040
   1c12c:	00 60 00 0a 	shr s0, s0, 24
   1c130:	42 00 12 c0 	and s2, s2, s4
   1c134:	43 00 01 c0 	or s2, s3, s2
   1c138:	01 00 00 c0 	or s0, s1, s0
   1c13c:	02 00 00 c0 	or s0, s2, s0
   1c140:	1f 00 00 f0 	ret

000000000001c144 cht_CheckCheat:
   1c144:	40 0c 00 4f 	movehi s2, 96
   1c148:	42 a0 1d 00 	or s2, s2, 1896
   1c14c:	62 00 00 a0 	load_u8 s3, (s2)
   1c150:	a3 03 00 f4 	bnz s3, 116 <cht_CheckCheat+0x80>
   1c154:	80 0c 00 4f 	movehi s4, 96
   1c158:	60 04 00 0f 	move s3, 1
   1c15c:	62 00 00 82 	store_8 s3, (s2)
   1c160:	40 00 00 0f 	move s2, 0
   1c164:	64 a4 1d 00 	or s3, s4, 1897
   1c168:	82 14 00 0b 	shl s4, s2, 5
   1c16c:	a2 90 00 01 	and s5, s2, 36
   1c170:	c2 04 00 0b 	shl s6, s2, 1
   1c174:	84 00 01 01 	and s4, s4, 64
   1c178:	85 00 02 c0 	or s4, s5, s4
   1c17c:	a2 1c 00 0b 	shl s5, s2, 7
   1c180:	c6 40 00 01 	and s6, s6, 16
   1c184:	84 80 02 c0 	or s4, s4, s5
   1c188:	a2 04 00 0a 	shr s5, s2, 1
   1c18c:	84 00 03 c0 	or s4, s4, s6
   1c190:	a5 20 00 01 	and s5, s5, 8
   1c194:	c2 14 00 0a 	shr s6, s2, 5
   1c198:	84 80 02 c0 	or s4, s4, s5
   1c19c:	a6 08 00 01 	and s5, s6, 2
   1c1a0:	84 80 02 c0 	or s4, s4, s5
   1c1a4:	a2 1c 00 0a 	shr s5, s2, 7
   1c1a8:	c3 00 51 c0 	add_i s6, s3, s2
   1c1ac:	42 04 00 05 	add_i s2, s2, 1
   1c1b0:	a5 04 00 01 	and s5, s5, 1
   1c1b4:	84 80 02 c0 	or s4, s4, s5
   1c1b8:	86 00 00 82 	store_8 s4, (s6)
   1c1bc:	a2 00 04 18 	cmplt_u s5, s2, 256
   1c1c0:	45 fd ff f5 	bnz s5, -88 <cht_CheckCheat+0x24>
   1c1c4:	40 10 00 a8 	load_32 s2, 4(s0)
   1c1c8:	42 00 00 f4 	bnz s2, 8 <cht_CheckCheat+0x8c>
   1c1cc:	11 00 00 f6 	b 68 <cht_CheckCheat+0xcc>
   1c1d0:	62 00 00 a0 	load_u8 s3, (s2)
   1c1d4:	43 00 00 f4 	bnz s3, 8 <cht_CheckCheat+0x98>
   1c1d8:	12 00 00 f6 	b 72 <cht_CheckCheat+0xdc>
   1c1dc:	80 0c 00 4f 	movehi s4, 96
   1c1e0:	21 fc 03 01 	and s1, s1, 255
   1c1e4:	84 a4 1d 00 	or s4, s4, 1897
   1c1e8:	24 80 50 c0 	add_i s1, s4, s1
   1c1ec:	21 00 00 a0 	load_u8 s1, (s1)
   1c1f0:	21 80 11 c1 	cmpne_i s1, s1, s3
   1c1f4:	01 03 00 f4 	bnz s1, 96 <cht_CheckCheat+0x110>
   1c1f8:	22 04 00 05 	add_i s1, s2, 1
   1c1fc:	20 10 00 88 	store_32 s1, 4(s0)
   1c200:	41 00 00 a0 	load_u8 s2, (s1)
   1c204:	62 fc 03 10 	cmpeq_i s3, s2, 255
   1c208:	c3 01 00 f4 	bnz s3, 56 <cht_CheckCheat+0xfc>
   1c20c:	17 00 00 f6 	b 92 <cht_CheckCheat+0x124>
   1c210:	40 00 00 a8 	load_32 s2, (s0)
   1c214:	40 10 00 88 	store_32 s2, 4(s0)
   1c218:	62 00 00 a0 	load_u8 s3, (s2)
   1c21c:	03 fe ff f5 	bnz s3, -64 <cht_CheckCheat+0x98>
   1c220:	62 04 00 05 	add_i s3, s2, 1
   1c224:	60 10 00 88 	store_32 s3, 4(s0)
   1c228:	22 00 00 82 	store_8 s1, (s2)
   1c22c:	20 10 00 a8 	load_32 s1, 4(s0)
   1c230:	41 00 00 a0 	load_u8 s2, (s1)
   1c234:	62 fc 03 10 	cmpeq_i s3, s2, 255
   1c238:	43 00 00 f4 	bnz s3, 8 <cht_CheckCheat+0xfc>
   1c23c:	0b 00 00 f6 	b 44 <cht_CheckCheat+0x124>
   1c240:	40 00 00 a8 	load_32 s2, (s0)
   1c244:	20 04 00 0f 	move s1, 1
   1c248:	40 10 00 88 	store_32 s2, 4(s0)
   1c24c:	00 80 f0 c0 	move s0, s1
   1c250:	1f 00 00 f0 	ret
   1c254:	20 00 00 a8 	load_32 s1, (s0)
   1c258:	20 10 00 88 	store_32 s1, 4(s0)
   1c25c:	41 00 00 a0 	load_u8 s2, (s1)
   1c260:	62 fc 03 10 	cmpeq_i s3, s2, 255
   1c264:	e3 fe ff f5 	bnz s3, -36 <cht_CheckCheat+0xfc>
   1c268:	42 04 00 11 	cmpne_i s2, s2, 1
   1c26c:	c2 00 00 f4 	bnz s2, 24 <cht_CheckCheat+0x140>
   1c270:	41 04 00 05 	add_i s2, s1, 1
   1c274:	20 00 00 0f 	move s1, 0
   1c278:	40 10 00 88 	store_32 s2, 4(s0)
   1c27c:	00 80 f0 c0 	move s0, s1
   1c280:	1f 00 00 f0 	ret
   1c284:	20 00 00 0f 	move s1, 0
   1c288:	00 80 f0 c0 	move s0, s1
   1c28c:	1f 00 00 f0 	ret

000000000001c290 cht_GetParam:
   1c290:	00 00 00 a8 	load_32 s0, (s0)
   1c294:	40 00 00 a0 	load_u8 s2, (s0)
   1c298:	00 04 00 05 	add_i s0, s0, 1
   1c29c:	42 04 00 11 	cmpne_i s2, s2, 1
   1c2a0:	a2 ff ff f5 	bnz s2, -12 <cht_GetParam+0x4>
   1c2a4:	60 00 00 a0 	load_u8 s3, (s0)
   1c2a8:	40 00 00 0f 	move s2, 0
   1c2ac:	61 00 00 82 	store_8 s3, (s1)
   1c2b0:	83 fc 03 01 	and s4, s3, 255
   1c2b4:	40 00 00 82 	store_8 s2, (s0)
   1c2b8:	21 04 00 05 	add_i s1, s1, 1
   1c2bc:	60 04 00 a0 	load_u8 s3, 1(s0)
   1c2c0:	c4 00 00 f2 	bz s4, 24 <cht_GetParam+0x48>
   1c2c4:	83 fc 03 01 	and s4, s3, 255
   1c2c8:	00 04 00 05 	add_i s0, s0, 1
   1c2cc:	84 fc 03 10 	cmpeq_i s4, s4, 255
   1c2d0:	e4 00 00 f4 	bnz s4, 28 <cht_GetParam+0x5c>
   1c2d4:	f6 ff ff f7 	b -40 <cht_GetParam+0x1c>
   1c2d8:	03 fc 03 01 	and s0, s3, 255
   1c2dc:	00 fc 03 11 	cmpne_i s0, s0, 255
   1c2e0:	40 00 00 f4 	bnz s0, 8 <cht_GetParam+0x58>
   1c2e4:	02 00 00 f6 	b 8 <cht_GetParam+0x5c>
   1c2e8:	1f 00 00 f0 	ret
   1c2ec:	41 00 00 82 	store_8 s2, (s1)
   1c2f0:	1f 00 00 f0 	ret

000000000001c2f4 P_Random:
   1c2f4:	00 0c 00 4f 	movehi s0, 96
   1c2f8:	53 04 00 4f 	movehi s2, 51
   1c2fc:	00 c0 21 00 	or s0, s0, 2160
   1c300:	42 90 6d 00 	or s2, s2, 7012
   1c304:	20 00 00 a8 	load_32 s1, (s0)
   1c308:	21 04 00 05 	add_i s1, s1, 1
   1c30c:	21 fc 03 01 	and s1, s1, 255
   1c310:	20 00 00 88 	store_32 s1, (s0)
   1c314:	42 80 50 c0 	add_i s2, s2, s1
   1c318:	02 00 00 a0 	load_u8 s0, (s2)
   1c31c:	1f 00 00 f0 	ret

000000000001c320 M_Random:
   1c320:	00 0c 00 4f 	movehi s0, 96
   1c324:	53 04 00 4f 	movehi s2, 51
   1c328:	00 b0 21 00 	or s0, s0, 2156
   1c32c:	42 90 6d 00 	or s2, s2, 7012
   1c330:	20 00 00 a8 	load_32 s1, (s0)
   1c334:	21 04 00 05 	add_i s1, s1, 1
   1c338:	21 fc 03 01 	and s1, s1, 255
   1c33c:	20 00 00 88 	store_32 s1, (s0)
   1c340:	42 80 50 c0 	add_i s2, s2, s1
   1c344:	02 00 00 a0 	load_u8 s0, (s2)
   1c348:	1f 00 00 f0 	ret

000000000001c34c M_ClearRandom:
   1c34c:	00 0c 00 4f 	movehi s0, 96
   1c350:	20 0c 00 4f 	movehi s1, 96
   1c354:	40 00 00 0f 	move s2, 0
   1c358:	00 c0 21 00 	or s0, s0, 2160
   1c35c:	21 b0 21 00 	or s1, s1, 2156
   1c360:	40 00 00 88 	store_32 s2, (s0)
   1c364:	41 00 00 88 	store_32 s2, (s1)
   1c368:	1f 00 00 f0 	ret

000000000001c36c AM_getIslope:
   1c36c:	de 03 ff 05 	add_i sp, sp, -64
   1c370:	1e f3 00 88 	store_32 s24, 60(sp)
   1c374:	3e e3 00 88 	store_32 s25, 56(sp)
   1c378:	5e d3 00 88 	store_32 s26, 52(sp)
   1c37c:	fe c3 00 88 	store_32 ra, 48(sp)
   1c380:	40 10 00 a8 	load_32 s2, 4(s0)
   1c384:	60 30 00 a8 	load_32 s3, 12(s0)
   1c388:	80 20 00 a8 	load_32 s4, 8(s0)
   1c38c:	00 00 00 a8 	load_32 s0, (s0)
   1c390:	00 83 f0 c0 	move s24, s1
   1c394:	22 83 61 c0 	sub_i s25, s2, s3
   1c398:	44 03 60 c0 	sub_i s26, s4, s0
   1c39c:	59 00 00 f4 	bnz s25, 8 <AM_getIslope+0x38>
   1c3a0:	0b 00 00 f6 	b 44 <AM_getIslope+0x60>
   1c3a4:	00 00 fd c0 	move s0, s26
   1c3a8:	20 80 fc c0 	move s1, s25
   1c3ac:	e8 fe ff f9 	call -1120 <FixedDiv>
   1c3b0:	18 10 00 88 	store_32 s0, 4(s24)
   1c3b4:	5a 00 00 f4 	bnz s26, 8 <AM_getIslope+0x50>
   1c3b8:	0b 00 00 f6 	b 44 <AM_getIslope+0x78>
   1c3bc:	00 80 fc c0 	move s0, s25
   1c3c0:	20 00 fd c0 	move s1, s26
   1c3c4:	e2 fe ff f9 	call -1144 <FixedDiv>
   1c3c8:	13 00 00 f6 	b 76 <AM_getIslope+0xa8>
   1c3cc:	1a 00 00 14 	cmplt_i s0, s26, 0
   1c3d0:	40 01 00 f4 	bnz s0, 40 <AM_getIslope+0x8c>
   1c3d4:	1f fc 7f 4f 	movehi s0, 262143
   1c3d8:	00 fc 7f 00 	or s0, s0, 8191
   1c3dc:	18 10 00 88 	store_32 s0, 4(s24)
   1c3e0:	fa fe ff f5 	bnz s26, -36 <AM_getIslope+0x50>
   1c3e4:	19 00 00 14 	cmplt_i s0, s25, 0
   1c3e8:	20 01 00 f4 	bnz s0, 36 <AM_getIslope+0xa0>
   1c3ec:	1f fc 7f 4f 	movehi s0, 262143
   1c3f0:	00 fc 7f 00 	or s0, s0, 8191
   1c3f4:	08 00 00 f6 	b 32 <AM_getIslope+0xa8>
   1c3f8:	00 00 80 4f 	movehi s0, 262144
   1c3fc:	00 04 00 00 	or s0, s0, 1
   1c400:	18 10 00 88 	store_32 s0, 4(s24)
   1c404:	da fd ff f5 	bnz s26, -72 <AM_getIslope+0x50>
   1c408:	f7 ff ff f7 	b -36 <AM_getIslope+0x78>
   1c40c:	00 00 80 4f 	movehi s0, 262144
   1c410:	00 04 00 00 	or s0, s0, 1
   1c414:	18 00 00 88 	store_32 s0, (s24)
   1c418:	fe c3 00 a8 	load_32 ra, 48(sp)
   1c41c:	5e d3 00 a8 	load_32 s26, 52(sp)
   1c420:	3e e3 00 a8 	load_32 s25, 56(sp)
   1c424:	1e f3 00 a8 	load_32 s24, 60(sp)
   1c428:	de 03 01 05 	add_i sp, sp, 64
   1c42c:	1f 00 00 f0 	ret

000000000001c430 AM_activateNewScale:
   1c430:	de 03 ff 05 	add_i sp, sp, -64
   1c434:	1e f3 00 88 	store_32 s24, 60(sp)
   1c438:	3e e3 00 88 	store_32 s25, 56(sp)
   1c43c:	5e d3 00 88 	store_32 s26, 52(sp)
   1c440:	7e c3 00 88 	store_32 s27, 48(sp)
   1c444:	fe b3 00 88 	store_32 ra, 44(sp)
   1c448:	00 0c 00 4f 	movehi s0, 96
   1c44c:	20 0c 00 4f 	movehi s1, 96
   1c450:	40 0c 00 4f 	movehi s2, 96
   1c454:	00 e0 21 00 	or s0, s0, 2168
   1c458:	1e a0 00 88 	store_32 s0, 40(sp)
   1c45c:	41 f3 21 00 	or s26, s1, 2172
   1c460:	42 00 22 00 	or s2, s2, 2176
   1c464:	00 00 00 a8 	load_32 s0, (s0)
   1c468:	00 03 00 0f 	move s24, 0
   1c46c:	20 7c 00 0a 	shr s1, s0, 31
   1c470:	00 80 50 c0 	add_i s0, s0, s1
   1c474:	3a 00 00 a8 	load_32 s1, (s26)
   1c478:	00 04 00 09 	ashr s0, s0, 1
   1c47c:	01 00 50 c0 	add_i s0, s1, s0
   1c480:	1a 00 00 88 	store_32 s0, (s26)
   1c484:	5e 90 00 88 	store_32 s2, 36(sp)
   1c488:	20 0c 00 4f 	movehi s1, 96
   1c48c:	02 00 00 a8 	load_32 s0, (s2)
   1c490:	40 0c 00 4f 	movehi s2, 96
   1c494:	61 13 22 00 	or s27, s1, 2180
   1c498:	42 20 22 00 	or s2, s2, 2184
   1c49c:	20 7c 00 0a 	shr s1, s0, 31
   1c4a0:	00 80 50 c0 	add_i s0, s0, s1
   1c4a4:	3b 00 00 a8 	load_32 s1, (s27)
   1c4a8:	00 04 00 09 	ashr s0, s0, 1
   1c4ac:	01 00 50 c0 	add_i s0, s1, s0
   1c4b0:	1b 00 00 88 	store_32 s0, (s27)
   1c4b4:	02 00 00 a0 	load_u8 s0, (s2)
   1c4b8:	00 00 00 11 	cmpne_i s0, s0, 0
   1c4bc:	60 00 00 f4 	bnz s0, 12 <AM_activateNewScale+0x98>
   1c4c0:	00 00 fc c0 	move s0, s24
   1c4c4:	02 00 00 f6 	b 8 <AM_activateNewScale+0x9c>
   1c4c8:	00 40 01 4f 	movehi s0, 2560
   1c4cc:	20 0c 00 4f 	movehi s1, 96
   1c4d0:	21 33 22 00 	or s25, s1, 2188
   1c4d4:	39 00 00 a8 	load_32 s1, (s25)
   1c4d8:	97 fe ff f9 	call -1444 <FixedMul>
   1c4dc:	20 0c 00 4f 	movehi s1, 96
   1c4e0:	5e a0 00 a8 	load_32 s2, 40(sp)
   1c4e4:	21 40 22 00 	or s1, s1, 2192
   1c4e8:	02 00 00 88 	store_32 s0, (s2)
   1c4ec:	01 00 00 a0 	load_u8 s0, (s1)
   1c4f0:	00 00 00 11 	cmpne_i s0, s0, 0
   1c4f4:	40 00 00 f4 	bnz s0, 8 <AM_activateNewScale+0xcc>
   1c4f8:	02 00 00 f6 	b 8 <AM_activateNewScale+0xd0>
   1c4fc:	00 ab 00 4f 	movehi s24, 1344
   1c500:	39 00 00 a8 	load_32 s1, (s25)
   1c504:	00 00 fc c0 	move s0, s24
   1c508:	8b fe ff f9 	call -1492 <FixedMul>
   1c50c:	3e 90 00 a8 	load_32 s1, 36(sp)
   1c510:	a0 0c 00 4f 	movehi s5, 96
   1c514:	01 00 00 88 	store_32 s0, (s1)
   1c518:	3e a0 00 a8 	load_32 s1, 40(sp)
   1c51c:	21 00 00 a8 	load_32 s1, (s1)
   1c520:	7a 00 00 a8 	load_32 s3, (s26)
   1c524:	41 7c 00 0a 	shr s2, s1, 31
   1c528:	41 00 51 c0 	add_i s2, s1, s2
   1c52c:	42 04 00 09 	ashr s2, s2, 1
   1c530:	43 00 61 c0 	sub_i s2, s3, s2
   1c534:	5a 00 00 88 	store_32 s2, (s26)
   1c538:	60 7c 00 0a 	shr s3, s0, 31
   1c53c:	9b 00 00 a8 	load_32 s4, (s27)
   1c540:	60 80 51 c0 	add_i s3, s0, s3
   1c544:	22 80 50 c0 	add_i s1, s2, s1
   1c548:	45 60 22 00 	or s2, s5, 2200
   1c54c:	63 04 00 09 	ashr s3, s3, 1
   1c550:	64 80 61 c0 	sub_i s3, s4, s3
   1c554:	7b 00 00 88 	store_32 s3, (s27)
   1c558:	80 0c 00 4f 	movehi s4, 96
   1c55c:	03 00 50 c0 	add_i s0, s3, s0
   1c560:	84 50 22 00 	or s4, s4, 2196
   1c564:	24 00 00 88 	store_32 s1, (s4)
   1c568:	02 00 00 88 	store_32 s0, (s2)
   1c56c:	fe b3 00 a8 	load_32 ra, 44(sp)
   1c570:	7e c3 00 a8 	load_32 s27, 48(sp)
   1c574:	5e d3 00 a8 	load_32 s26, 52(sp)
   1c578:	3e e3 00 a8 	load_32 s25, 56(sp)
   1c57c:	1e f3 00 a8 	load_32 s24, 60(sp)
   1c580:	de 03 01 05 	add_i sp, sp, 64
   1c584:	1f 00 00 f0 	ret

000000000001c588 AM_saveScaleAndLoc:
   1c588:	00 0c 00 4f 	movehi s0, 96
   1c58c:	20 0c 00 4f 	movehi s1, 96
   1c590:	40 0c 00 4f 	movehi s2, 96
   1c594:	00 f0 21 00 	or s0, s0, 2172
   1c598:	21 70 22 00 	or s1, s1, 2204
   1c59c:	42 e0 21 00 	or s2, s2, 2168
   1c5a0:	00 00 00 a8 	load_32 s0, (s0)
   1c5a4:	60 0c 00 4f 	movehi s3, 96
   1c5a8:	01 00 00 88 	store_32 s0, (s1)
   1c5ac:	00 0c 00 4f 	movehi s0, 96
   1c5b0:	20 0c 00 4f 	movehi s1, 96
   1c5b4:	63 a0 22 00 	or s3, s3, 2216
   1c5b8:	00 10 22 00 	or s0, s0, 2180
   1c5bc:	21 80 22 00 	or s1, s1, 2208
   1c5c0:	00 00 00 a8 	load_32 s0, (s0)
   1c5c4:	01 00 00 88 	store_32 s0, (s1)
   1c5c8:	20 0c 00 4f 	movehi s1, 96
   1c5cc:	02 00 00 a8 	load_32 s0, (s2)
   1c5d0:	40 0c 00 4f 	movehi s2, 96
   1c5d4:	21 90 22 00 	or s1, s1, 2212
   1c5d8:	42 00 22 00 	or s2, s2, 2176
   1c5dc:	01 00 00 88 	store_32 s0, (s1)
   1c5e0:	02 00 00 a8 	load_32 s0, (s2)
   1c5e4:	03 00 00 88 	store_32 s0, (s3)
   1c5e8:	1f 00 00 f0 	ret

000000000001c5ec AM_restoreScaleAndLoc:
   1c5ec:	de 03 ff 05 	add_i sp, sp, -64
   1c5f0:	fe f3 00 88 	store_32 ra, 60(sp)
   1c5f4:	00 0c 00 4f 	movehi s0, 96
   1c5f8:	20 0c 00 4f 	movehi s1, 96
   1c5fc:	73 04 00 4f 	movehi s3, 51
   1c600:	00 90 22 00 	or s0, s0, 2212
   1c604:	41 e0 21 00 	or s2, s1, 2168
   1c608:	63 d0 78 00 	or s3, s3, 7732
   1c60c:	20 00 00 a8 	load_32 s1, (s0)
   1c610:	00 0c 00 4f 	movehi s0, 96
   1c614:	22 00 00 88 	store_32 s1, (s2)
   1c618:	40 0c 00 4f 	movehi s2, 96
   1c61c:	00 a0 22 00 	or s0, s0, 2216
   1c620:	42 00 22 00 	or s2, s2, 2176
   1c624:	00 00 00 a8 	load_32 s0, (s0)
   1c628:	02 00 00 88 	store_32 s0, (s2)
   1c62c:	43 00 00 a8 	load_32 s2, (s3)
   1c630:	42 00 00 f4 	bnz s2, 8 <AM_restoreScaleAndLoc+0x4c>
   1c634:	13 00 00 f6 	b 76 <AM_restoreScaleAndLoc+0x94>
   1c638:	40 0c 00 4f 	movehi s2, 96
   1c63c:	a0 0c 00 4f 	movehi s5, 96
   1c640:	81 7c 00 0a 	shr s4, s1, 31
   1c644:	42 b0 22 00 	or s2, s2, 2220
   1c648:	81 00 52 c0 	add_i s4, s1, s4
   1c64c:	a5 f0 21 00 	or s5, s5, 2172
   1c650:	42 00 00 a8 	load_32 s2, (s2)
   1c654:	84 04 00 09 	ashr s4, s4, 1
   1c658:	42 00 00 a8 	load_32 s2, (s2)
   1c65c:	62 30 00 a8 	load_32 s3, 12(s2)
   1c660:	63 00 62 c0 	sub_i s3, s3, s4
   1c664:	65 00 00 88 	store_32 s3, (s5)
   1c668:	80 7c 00 0a 	shr s4, s0, 31
   1c66c:	42 40 00 a8 	load_32 s2, 16(s2)
   1c670:	80 00 52 c0 	add_i s4, s0, s4
   1c674:	84 04 00 09 	ashr s4, s4, 1
   1c678:	42 00 62 c0 	sub_i s2, s2, s4
   1c67c:	0a 00 00 f6 	b 40 <AM_restoreScaleAndLoc+0xb8>
   1c680:	40 0c 00 4f 	movehi s2, 96
   1c684:	60 0c 00 4f 	movehi s3, 96
   1c688:	80 0c 00 4f 	movehi s4, 96
   1c68c:	42 70 22 00 	or s2, s2, 2204
   1c690:	a3 f0 21 00 	or s5, s3, 2172
   1c694:	84 80 22 00 	or s4, s4, 2208
   1c698:	62 00 00 a8 	load_32 s3, (s2)
   1c69c:	65 00 00 88 	store_32 s3, (s5)
   1c6a0:	44 00 00 a8 	load_32 s2, (s4)
   1c6a4:	80 0c 00 4f 	movehi s4, 96
   1c6a8:	a0 0c 00 4f 	movehi s5, 96
   1c6ac:	c0 0c 00 4f 	movehi s6, 96
   1c6b0:	84 10 22 00 	or s4, s4, 2180
   1c6b4:	63 80 50 c0 	add_i s3, s3, s1
   1c6b8:	02 00 50 c0 	add_i s0, s2, s0
   1c6bc:	44 00 00 88 	store_32 s2, (s4)
   1c6c0:	85 50 22 00 	or s4, s5, 2196
   1c6c4:	a0 0c 00 4f 	movehi s5, 96
   1c6c8:	64 00 00 88 	store_32 s3, (s4)
   1c6cc:	86 20 22 00 	or s4, s6, 2184
   1c6d0:	65 60 22 00 	or s3, s5, 2200
   1c6d4:	03 00 00 88 	store_32 s0, (s3)
   1c6d8:	04 00 00 a0 	load_u8 s0, (s4)
   1c6dc:	00 00 00 11 	cmpne_i s0, s0, 0
   1c6e0:	60 00 00 f4 	bnz s0, 12 <AM_restoreScaleAndLoc+0x100>
   1c6e4:	00 00 00 0f 	move s0, 0
   1c6e8:	02 00 00 f6 	b 8 <AM_restoreScaleAndLoc+0x104>
   1c6ec:	00 40 01 4f 	movehi s0, 2560
   1c6f0:	17 fe ff f9 	call -1956 <FixedDiv>
   1c6f4:	33 04 00 4f 	movehi s1, 51
   1c6f8:	41 e0 78 00 	or s2, s1, 7736
   1c6fc:	20 00 f0 c0 	move s1, s0
   1c700:	08 00 00 4f 	movehi s0, 8
   1c704:	22 00 00 88 	store_32 s1, (s2)
   1c708:	11 fe ff f9 	call -1980 <FixedDiv>
   1c70c:	20 0c 00 4f 	movehi s1, 96
   1c710:	21 30 22 00 	or s1, s1, 2188
   1c714:	01 00 00 88 	store_32 s0, (s1)
   1c718:	fe f3 00 a8 	load_32 ra, 60(sp)
   1c71c:	de 03 01 05 	add_i sp, sp, 64
   1c720:	1f 00 00 f0 	ret

000000000001c724 AM_addMark:
   1c724:	00 0c 00 4f 	movehi s0, 96
   1c728:	20 0c 00 4f 	movehi s1, 96
   1c72c:	40 0c 00 4f 	movehi s2, 96
   1c730:	00 f0 21 00 	or s0, s0, 2172
   1c734:	21 e0 21 00 	or s1, s1, 2168
   1c738:	42 00 24 00 	or s2, s2, 2304
   1c73c:	00 00 00 a8 	load_32 s0, (s0)
   1c740:	80 0c 00 4f 	movehi s4, 96
   1c744:	21 00 00 a8 	load_32 s1, (s1)
   1c748:	a0 0c 00 4f 	movehi s5, 96
   1c74c:	c0 0c 00 4f 	movehi s6, 96
   1c750:	61 7c 00 0a 	shr s3, s1, 31
   1c754:	21 80 51 c0 	add_i s1, s1, s3
   1c758:	62 00 00 a8 	load_32 s3, (s2)
   1c75c:	21 04 00 09 	ashr s1, s1, 1
   1c760:	01 00 50 c0 	add_i s0, s1, s0
   1c764:	24 c0 22 00 	or s1, s4, 2224
   1c768:	83 0c 00 0b 	shl s4, s3, 3
   1c76c:	63 04 00 05 	add_i s3, s3, 1
   1c770:	21 00 52 c0 	add_i s1, s1, s4
   1c774:	85 10 22 00 	or s4, s5, 2180
   1c778:	a6 00 22 00 	or s5, s6, 2176
   1c77c:	01 00 00 88 	store_32 s0, (s1)
   1c780:	04 00 00 a8 	load_32 s0, (s4)
   1c784:	85 00 00 a8 	load_32 s4, (s5)
   1c788:	b3 64 66 4f 	movehi s5, 209715
   1c78c:	a5 9c 19 00 	or s5, s5, 1639
   1c790:	a3 80 f2 c1 	mulh_i s5, s3, s5
   1c794:	c4 7c 00 0a 	shr s6, s4, 31
   1c798:	84 00 53 c0 	add_i s4, s4, s6
   1c79c:	c5 08 00 09 	ashr s6, s5, 2
   1c7a0:	a5 7c 00 0a 	shr s5, s5, 31
   1c7a4:	84 04 00 09 	ashr s4, s4, 1
   1c7a8:	a6 80 52 c0 	add_i s5, s6, s5
   1c7ac:	04 00 50 c0 	add_i s0, s4, s0
   1c7b0:	01 10 00 88 	store_32 s0, 4(s1)
   1c7b4:	05 28 00 07 	mull_i s0, s5, 10
   1c7b8:	03 00 60 c0 	sub_i s0, s3, s0
   1c7bc:	02 00 00 88 	store_32 s0, (s2)
   1c7c0:	1f 00 00 f0 	ret

000000000001c7c4 AM_findMinMaxBoundaries:
   1c7c4:	de 03 ff 05 	add_i sp, sp, -64
   1c7c8:	1e f3 00 88 	store_32 s24, 60(sp)
   1c7cc:	3e e3 00 88 	store_32 s25, 56(sp)
   1c7d0:	5e d3 00 88 	store_32 s26, 52(sp)
   1c7d4:	7e c3 00 88 	store_32 s27, 48(sp)
   1c7d8:	fe b3 00 88 	store_32 ra, 44(sp)
   1c7dc:	40 0c 00 4f 	movehi s2, 96
   1c7e0:	60 0c 00 4f 	movehi s3, 96
   1c7e4:	80 0c 00 4f 	movehi s4, 96
   1c7e8:	00 0c 00 4f 	movehi s0, 96
   1c7ec:	bb 04 00 4f 	movehi s5, 59
   1c7f0:	60 01 80 4f 	movehi s11, 262144
   1c7f4:	5f fd 7f 4f 	movehi s10, 262143
   1c7f8:	20 10 24 00 	or s1, s0, 2308
   1c7fc:	42 20 24 00 	or s2, s2, 2312
   1c800:	63 30 24 00 	or s3, s3, 2316
   1c804:	84 40 24 00 	or s4, s4, 2320
   1c808:	a5 c0 4a 00 	or s5, s5, 4784
   1c80c:	0a fc 7f 00 	or s0, s10, 8191
   1c810:	01 00 00 88 	store_32 s0, (s1)
   1c814:	02 00 00 88 	store_32 s0, (s2)
   1c818:	cb 04 00 00 	or s6, s11, 1
   1c81c:	c3 00 00 88 	store_32 s6, (s3)
   1c820:	c4 00 00 88 	store_32 s6, (s4)
   1c824:	a5 00 00 a8 	load_32 s5, (s5)
   1c828:	e0 00 f0 c0 	move s7, s0
   1c82c:	00 01 f3 c0 	move s8, s6
   1c830:	25 05 00 14 	cmplt_i s9, s5, 1
   1c834:	49 05 00 f4 	bnz s9, 168 <AM_findMinMaxBoundaries+0x118>
   1c838:	1b 04 00 4f 	movehi s0, 59
   1c83c:	cb 04 00 00 	or s6, s11, 1
   1c840:	00 c0 4b 00 	or s0, s0, 4848
   1c844:	20 01 00 a8 	load_32 s9, (s0)
   1c848:	0a fc 7f 00 	or s0, s10, 8191
   1c84c:	00 01 f3 c0 	move s8, s6
   1c850:	40 01 00 0f 	move s10, 0
   1c854:	e0 00 f0 c0 	move s7, s0
   1c858:	6a 0d 00 0b 	shl s11, s10, 3
   1c85c:	69 81 55 c0 	add_i s11, s9, s11
   1c860:	8b 01 00 a8 	load_32 s12, (s11)
   1c864:	ac 81 43 c1 	cmplt_i s13, s12, s7
   1c868:	4d 00 00 f4 	bnz s13, 8 <AM_findMinMaxBoundaries+0xac>
   1c86c:	05 00 00 f6 	b 20 <AM_findMinMaxBoundaries+0xbc>
   1c870:	a0 01 f1 c0 	move s13, s2
   1c874:	c0 01 f4 c0 	move s14, s8
   1c878:	e0 00 f6 c0 	move s7, s12
   1c87c:	05 00 00 f6 	b 20 <AM_findMinMaxBoundaries+0xcc>
   1c880:	a0 01 f2 c0 	move s13, s4
   1c884:	ec 01 54 c1 	cmple_i s15, s12, s8
   1c888:	c0 01 f6 c0 	move s14, s12
   1c88c:	6f 00 00 f4 	bnz s15, 12 <AM_findMinMaxBoundaries+0xd4>
   1c890:	8d 01 00 88 	store_32 s12, (s13)
   1c894:	00 01 f7 c0 	move s8, s14
   1c898:	6b 11 00 a8 	load_32 s11, 4(s11)
   1c89c:	8b 01 40 c1 	cmplt_i s12, s11, s0
   1c8a0:	4c 00 00 f4 	bnz s12, 8 <AM_findMinMaxBoundaries+0xe4>
   1c8a4:	05 00 00 f6 	b 20 <AM_findMinMaxBoundaries+0xf4>
   1c8a8:	80 81 f0 c0 	move s12, s1
   1c8ac:	a0 01 f3 c0 	move s13, s6
   1c8b0:	00 80 f5 c0 	move s0, s11
   1c8b4:	05 00 00 f6 	b 20 <AM_findMinMaxBoundaries+0x104>
   1c8b8:	80 81 f1 c0 	move s12, s3
   1c8bc:	cb 01 53 c1 	cmple_i s14, s11, s6
   1c8c0:	a0 81 f5 c0 	move s13, s11
   1c8c4:	6e 00 00 f4 	bnz s14, 12 <AM_findMinMaxBoundaries+0x10c>
   1c8c8:	6c 01 00 88 	store_32 s11, (s12)
   1c8cc:	c0 80 f6 c0 	move s6, s13
   1c8d0:	4a 05 00 05 	add_i s10, s10, 1
   1c8d4:	6a 81 42 c1 	cmplt_i s11, s10, s5
   1c8d8:	0b fc ff f5 	bnz s11, -128 <AM_findMinMaxBoundaries+0x94>
   1c8dc:	20 0c 00 4f 	movehi s1, 96
   1c8e0:	40 0c 00 4f 	movehi s2, 96
   1c8e4:	06 00 60 c0 	sub_i s0, s6, s0
   1c8e8:	61 53 24 00 	or s27, s1, 2324
   1c8ec:	22 20 22 00 	or s1, s2, 2184
   1c8f0:	40 00 00 0f 	move s2, 0
   1c8f4:	1b 00 00 88 	store_32 s0, (s27)
   1c8f8:	01 00 00 a0 	load_u8 s0, (s1)
   1c8fc:	28 80 63 c0 	sub_i s1, s8, s7
   1c900:	5e a0 00 88 	store_32 s2, 40(sp)
   1c904:	00 00 00 11 	cmpne_i s0, s0, 0
   1c908:	60 00 00 f4 	bnz s0, 12 <AM_findMinMaxBoundaries+0x150>
   1c90c:	00 00 f1 c0 	move s0, s2
   1c910:	02 00 00 f6 	b 8 <AM_findMinMaxBoundaries+0x154>
   1c914:	00 40 01 4f 	movehi s0, 2560
   1c918:	8d fd ff f9 	call -2508 <FixedDiv>
   1c91c:	20 0c 00 4f 	movehi s1, 96
   1c920:	00 ab 00 4f 	movehi s24, 1344
   1c924:	41 43 22 00 	or s26, s1, 2192
   1c928:	3a 00 00 a0 	load_u8 s1, (s26)
   1c92c:	20 03 f0 c0 	move s25, s0
   1c930:	00 00 fc c0 	move s0, s24
   1c934:	21 00 00 11 	cmpne_i s1, s1, 0
   1c938:	41 00 00 f4 	bnz s1, 8 <AM_findMinMaxBoundaries+0x17c>
   1c93c:	1e a0 00 a8 	load_32 s0, 40(sp)
   1c940:	3b 00 00 a8 	load_32 s1, (s27)
   1c944:	82 fd ff f9 	call -2552 <FixedDiv>
   1c948:	39 00 40 c1 	cmplt_i s1, s25, s0
   1c94c:	41 00 00 f4 	bnz s1, 8 <AM_findMinMaxBoundaries+0x190>
   1c950:	20 03 f0 c0 	move s25, s0
   1c954:	00 0c 00 4f 	movehi s0, 96
   1c958:	00 60 24 00 	or s0, s0, 2328
   1c95c:	20 03 00 88 	store_32 s25, (s0)
   1c960:	1a 00 00 a0 	load_u8 s0, (s26)
   1c964:	00 00 00 11 	cmpne_i s0, s0, 0
   1c968:	40 00 00 f4 	bnz s0, 8 <AM_findMinMaxBoundaries+0x1ac>
   1c96c:	1e a3 00 a8 	load_32 s24, 40(sp)
   1c970:	20 20 00 4f 	movehi s1, 256
   1c974:	00 00 fc c0 	move s0, s24
   1c978:	75 fd ff f9 	call -2604 <FixedDiv>
   1c97c:	20 0c 00 4f 	movehi s1, 96
   1c980:	21 70 24 00 	or s1, s1, 2332
   1c984:	01 00 00 88 	store_32 s0, (s1)
   1c988:	fe b3 00 a8 	load_32 ra, 44(sp)
   1c98c:	7e c3 00 a8 	load_32 s27, 48(sp)
   1c990:	5e d3 00 a8 	load_32 s26, 52(sp)
   1c994:	3e e3 00 a8 	load_32 s25, 56(sp)
   1c998:	1e f3 00 a8 	load_32 s24, 60(sp)
   1c99c:	de 03 01 05 	add_i sp, sp, 64
   1c9a0:	1f 00 00 f0 	ret

000000000001c9a4 AM_changeWindowLoc:
   1c9a4:	00 0c 00 4f 	movehi s0, 96
   1c9a8:	20 0c 00 4f 	movehi s1, 96
   1c9ac:	00 b0 26 00 	or s0, s0, 2476
   1c9b0:	21 c0 26 00 	or s1, s1, 2480
   1c9b4:	00 00 00 a8 	load_32 s0, (s0)
   1c9b8:	21 00 00 a8 	load_32 s1, (s1)
   1c9bc:	41 00 00 c0 	or s2, s1, s0
   1c9c0:	42 01 00 f2 	bz s2, 40 <AM_changeWindowLoc+0x44>
   1c9c4:	53 04 00 4f 	movehi s2, 51
   1c9c8:	60 0c 00 4f 	movehi s3, 96
   1c9cc:	bf fc 7f 4f 	movehi s5, 262143
   1c9d0:	42 d0 78 00 	or s2, s2, 7732
   1c9d4:	63 d0 26 00 	or s3, s3, 2484
   1c9d8:	80 00 00 0f 	move s4, 0
   1c9dc:	82 00 00 88 	store_32 s4, (s2)
   1c9e0:	45 fc 7f 00 	or s2, s5, 8191
   1c9e4:	43 00 00 88 	store_32 s2, (s3)
   1c9e8:	40 0c 00 4f 	movehi s2, 96
   1c9ec:	60 0c 00 4f 	movehi s3, 96
   1c9f0:	a0 0c 00 4f 	movehi s5, 96
   1c9f4:	82 f0 21 00 	or s4, s2, 2172
   1c9f8:	63 10 22 00 	or s3, s3, 2180
   1c9fc:	a5 e0 21 00 	or s5, s5, 2168
   1ca00:	44 00 00 a8 	load_32 s2, (s4)
   1ca04:	c0 0c 00 4f 	movehi s6, 96
   1ca08:	c6 40 24 00 	or s6, s6, 2320
   1ca0c:	02 00 50 c0 	add_i s0, s2, s0
   1ca10:	04 00 00 88 	store_32 s0, (s4)
   1ca14:	43 00 00 a8 	load_32 s2, (s3)
   1ca18:	42 80 50 c0 	add_i s2, s2, s1
   1ca1c:	43 00 00 88 	store_32 s2, (s3)
   1ca20:	25 00 00 a8 	load_32 s1, (s5)
   1ca24:	e6 00 00 a8 	load_32 s7, (s6)
   1ca28:	a1 7c 00 0a 	shr s5, s1, 31
   1ca2c:	a1 80 52 c0 	add_i s5, s1, s5
   1ca30:	a5 04 00 09 	ashr s5, s5, 1
   1ca34:	c5 00 50 c0 	add_i s6, s5, s0
   1ca38:	06 81 53 c1 	cmple_i s8, s6, s7
   1ca3c:	48 00 00 f4 	bnz s8, 8 <AM_changeWindowLoc+0xa0>
   1ca40:	06 00 00 f6 	b 24 <AM_changeWindowLoc+0xb4>
   1ca44:	e0 0c 00 4f 	movehi s7, 96
   1ca48:	e7 20 24 00 	or s7, s7, 2312
   1ca4c:	e7 00 00 a8 	load_32 s7, (s7)
   1ca50:	c6 80 33 c1 	cmpge_i s6, s6, s7
   1ca54:	66 00 00 f4 	bnz s6, 12 <AM_changeWindowLoc+0xbc>
   1ca58:	07 80 62 c0 	sub_i s0, s7, s5
   1ca5c:	04 00 00 88 	store_32 s0, (s4)
   1ca60:	80 0c 00 4f 	movehi s4, 96
   1ca64:	c0 0c 00 4f 	movehi s6, 96
   1ca68:	84 00 22 00 	or s4, s4, 2176
   1ca6c:	c6 30 24 00 	or s6, s6, 2316
   1ca70:	84 00 00 a8 	load_32 s4, (s4)
   1ca74:	e6 00 00 a8 	load_32 s7, (s6)
   1ca78:	a4 7c 00 0a 	shr s5, s4, 31
   1ca7c:	a4 80 52 c0 	add_i s5, s4, s5
   1ca80:	a5 04 00 09 	ashr s5, s5, 1
   1ca84:	c5 00 51 c0 	add_i s6, s5, s2
   1ca88:	06 81 53 c1 	cmple_i s8, s6, s7
   1ca8c:	48 00 00 f4 	bnz s8, 8 <AM_changeWindowLoc+0xf0>
   1ca90:	06 00 00 f6 	b 24 <AM_changeWindowLoc+0x104>
   1ca94:	e0 0c 00 4f 	movehi s7, 96
   1ca98:	e7 10 24 00 	or s7, s7, 2308
   1ca9c:	e7 00 00 a8 	load_32 s7, (s7)
   1caa0:	c6 80 33 c1 	cmpge_i s6, s6, s7
   1caa4:	66 00 00 f4 	bnz s6, 12 <AM_changeWindowLoc+0x10c>
   1caa8:	47 80 62 c0 	sub_i s2, s7, s5
   1caac:	43 00 00 88 	store_32 s2, (s3)
   1cab0:	60 0c 00 4f 	movehi s3, 96
   1cab4:	a0 0c 00 4f 	movehi s5, 96
   1cab8:	00 80 50 c0 	add_i s0, s0, s1
   1cabc:	63 50 22 00 	or s3, s3, 2196
   1cac0:	25 60 22 00 	or s1, s5, 2200
   1cac4:	03 00 00 88 	store_32 s0, (s3)
   1cac8:	02 00 52 c0 	add_i s0, s2, s4
   1cacc:	01 00 00 88 	store_32 s0, (s1)
   1cad0:	1f 00 00 f0 	ret

000000000001cad4 AM_initVariables:
   1cad4:	de 03 ff 05 	add_i sp, sp, -64
   1cad8:	1e f3 00 88 	store_32 s24, 60(sp)
   1cadc:	3e e3 00 88 	store_32 s25, 56(sp)
   1cae0:	5e d3 00 88 	store_32 s26, 52(sp)
   1cae4:	7e c3 00 88 	store_32 s27, 48(sp)
   1cae8:	fe b3 00 88 	store_32 ra, 44(sp)
   1caec:	00 0c 00 4f 	movehi s0, 96
   1caf0:	20 0c 00 4f 	movehi s1, 96
   1caf4:	40 0c 00 4f 	movehi s2, 96
   1caf8:	00 d0 21 00 	or s0, s0, 2164
   1cafc:	21 20 02 00 	or s1, s1, 136
   1cb00:	e0 04 00 0f 	move s7, 1
   1cb04:	e0 00 00 88 	store_32 s7, (s0)
   1cb08:	02 80 24 00 	or s0, s2, 2336
   1cb0c:	21 00 00 a8 	load_32 s1, (s1)
   1cb10:	40 0c 00 4f 	movehi s2, 96
   1cb14:	00 03 00 0f 	move s24, 0
   1cb18:	20 00 00 88 	store_32 s1, (s0)
   1cb1c:	1f fc 7f 4f 	movehi s0, 262143
   1cb20:	20 0c 00 4f 	movehi s1, 96
   1cb24:	82 d0 26 00 	or s4, s2, 2484
   1cb28:	a0 fc 7f 00 	or s5, s0, 8191
   1cb2c:	01 90 24 00 	or s0, s1, 2340
   1cb30:	20 0c 00 4f 	movehi s1, 96
   1cb34:	a4 00 00 88 	store_32 s5, (s4)
   1cb38:	40 0c 00 4f 	movehi s2, 96
   1cb3c:	00 03 00 88 	store_32 s24, (s0)
   1cb40:	68 00 00 4f 	movehi s3, 8
   1cb44:	01 a0 24 00 	or s0, s1, 2344
   1cb48:	20 0c 00 4f 	movehi s1, 96
   1cb4c:	22 b3 26 00 	or s25, s2, 2476
   1cb50:	00 03 00 88 	store_32 s24, (s0)
   1cb54:	00 0c 00 4f 	movehi s0, 96
   1cb58:	c1 c0 26 00 	or s6, s1, 2480
   1cb5c:	20 0c 00 4f 	movehi s1, 96
   1cb60:	40 0c 00 4f 	movehi s2, 96
   1cb64:	00 b0 24 00 	or s0, s0, 2348
   1cb68:	06 03 00 88 	store_32 s24, (s6)
   1cb6c:	21 c0 24 00 	or s1, s1, 2352
   1cb70:	19 03 00 88 	store_32 s24, (s25)
   1cb74:	42 20 22 00 	or s2, s2, 2184
   1cb78:	60 00 00 88 	store_32 s3, (s0)
   1cb7c:	61 00 00 88 	store_32 s3, (s1)
   1cb80:	02 00 00 a0 	load_u8 s0, (s2)
   1cb84:	9e 90 00 88 	store_32 s4, 36(sp)
   1cb88:	be 80 00 88 	store_32 s5, 32(sp)
   1cb8c:	de a0 00 88 	store_32 s6, 40(sp)
   1cb90:	00 00 00 11 	cmpne_i s0, s0, 0
   1cb94:	fe 70 00 88 	store_32 s7, 28(sp)
   1cb98:	60 00 00 f4 	bnz s0, 12 <AM_initVariables+0xd0>
   1cb9c:	00 00 fc c0 	move s0, s24
   1cba0:	02 00 00 f6 	b 8 <AM_initVariables+0xd4>
   1cba4:	00 40 01 4f 	movehi s0, 2560
   1cba8:	20 0c 00 4f 	movehi s1, 96
   1cbac:	61 33 22 00 	or s27, s1, 2188
   1cbb0:	3b 00 00 a8 	load_32 s1, (s27)
   1cbb4:	e0 fc ff f9 	call -3200 <FixedMul>
   1cbb8:	20 0c 00 4f 	movehi s1, 96
   1cbbc:	40 0c 00 4f 	movehi s2, 96
   1cbc0:	41 e3 21 00 	or s26, s1, 2168
   1cbc4:	22 40 22 00 	or s1, s2, 2192
   1cbc8:	1a 00 00 88 	store_32 s0, (s26)
   1cbcc:	01 00 00 a0 	load_u8 s0, (s1)
   1cbd0:	00 00 00 11 	cmpne_i s0, s0, 0
   1cbd4:	40 00 00 f4 	bnz s0, 8 <AM_initVariables+0x108>
   1cbd8:	02 00 00 f6 	b 8 <AM_initVariables+0x10c>
   1cbdc:	00 ab 00 4f 	movehi s24, 1344
   1cbe0:	3b 00 00 a8 	load_32 s1, (s27)
   1cbe4:	00 00 fc c0 	move s0, s24
   1cbe8:	d3 fc ff f9 	call -3252 <FixedMul>
   1cbec:	20 0c 00 4f 	movehi s1, 96
   1cbf0:	5a 04 00 4f 	movehi s2, 58
   1cbf4:	7b 04 00 4f 	movehi s3, 59
   1cbf8:	21 00 22 00 	or s1, s1, 2176
   1cbfc:	42 c0 6d 00 	or s2, s2, 7024
   1cc00:	01 00 00 88 	store_32 s0, (s1)
   1cc04:	22 00 00 a8 	load_32 s1, (s2)
   1cc08:	43 00 02 00 	or s2, s3, 128
   1cc0c:	61 08 00 0b 	shl s3, s1, 2
   1cc10:	62 80 51 c0 	add_i s3, s2, s3
   1cc14:	63 00 00 a8 	load_32 s3, (s3)
   1cc18:	a3 02 00 f4 	bnz s3, 84 <AM_initVariables+0x198>
   1cc1c:	22 00 00 a8 	load_32 s1, (s2)
   1cc20:	41 00 00 f4 	bnz s1, 8 <AM_initVariables+0x154>
   1cc24:	03 00 00 f6 	b 12 <AM_initVariables+0x15c>
   1cc28:	20 00 00 0f 	move s1, 0
   1cc2c:	10 00 00 f6 	b 64 <AM_initVariables+0x198>
   1cc30:	62 10 00 a8 	load_32 s3, 4(s2)
   1cc34:	3e 70 00 a8 	load_32 s1, 28(sp)
   1cc38:	43 00 00 f2 	bz s3, 8 <AM_initVariables+0x16c>
   1cc3c:	0c 00 00 f6 	b 48 <AM_initVariables+0x198>
   1cc40:	22 20 00 a8 	load_32 s1, 8(s2)
   1cc44:	41 00 00 f4 	bnz s1, 8 <AM_initVariables+0x178>
   1cc48:	03 00 00 f6 	b 12 <AM_initVariables+0x180>
   1cc4c:	20 08 00 0f 	move s1, 2
   1cc50:	07 00 00 f6 	b 28 <AM_initVariables+0x198>
   1cc54:	22 30 00 a8 	load_32 s1, 12(s2)
   1cc58:	21 00 00 10 	cmpeq_i s1, s1, 0
   1cc5c:	61 00 00 f4 	bnz s1, 12 <AM_initVariables+0x194>
   1cc60:	20 0c 00 0f 	move s1, 3
   1cc64:	02 00 00 f6 	b 8 <AM_initVariables+0x198>
   1cc68:	20 10 00 0f 	move s1, 4
   1cc6c:	5b 04 00 4f 	movehi s2, 59
   1cc70:	60 0c 00 4f 	movehi s3, 96
   1cc74:	21 60 04 07 	mull_i s1, s1, 280
   1cc78:	42 40 02 00 	or s2, s2, 144
   1cc7c:	63 b0 22 00 	or s3, s3, 2220
   1cc80:	80 0c 00 4f 	movehi s4, 96
   1cc84:	22 80 50 c0 	add_i s1, s2, s1
   1cc88:	23 00 00 88 	store_32 s1, (s3)
   1cc8c:	e4 f0 21 00 	or s7, s4, 2172
   1cc90:	41 00 00 a8 	load_32 s2, (s1)
   1cc94:	80 0c 00 4f 	movehi s4, 96
   1cc98:	42 31 00 a8 	load_32 s10, 12(s2)
   1cc9c:	3a 00 00 a8 	load_32 s1, (s26)
   1cca0:	61 7c 00 0a 	shr s3, s1, 31
   1cca4:	61 80 51 c0 	add_i s3, s1, s3
   1cca8:	23 05 00 09 	ashr s9, s3, 1
   1ccac:	6a 80 64 c0 	sub_i s3, s10, s9
   1ccb0:	67 00 00 88 	store_32 s3, (s7)
   1ccb4:	c2 40 00 a8 	load_32 s6, 16(s2)
   1ccb8:	40 7c 00 0a 	shr s2, s0, 31
   1ccbc:	a0 00 51 c0 	add_i s5, s0, s2
   1ccc0:	44 10 22 00 	or s2, s4, 2180
   1ccc4:	85 04 00 09 	ashr s4, s5, 1
   1ccc8:	66 01 62 c0 	sub_i s11, s6, s4
   1cccc:	62 01 00 88 	store_32 s11, (s2)
   1ccd0:	99 01 00 a8 	load_32 s12, (s25)
   1ccd4:	be a0 00 a8 	load_32 s5, 40(sp)
   1ccd8:	05 01 00 a8 	load_32 s8, (s5)
   1ccdc:	a8 00 06 c0 	or s5, s8, s12
   1cce0:	05 01 00 f2 	bz s5, 32 <AM_initVariables+0x22c>
   1cce4:	b3 04 00 4f 	movehi s5, 51
   1cce8:	a0 01 00 0f 	move s13, 0
   1ccec:	a5 d0 78 00 	or s5, s5, 7732
   1ccf0:	a5 01 00 88 	store_32 s13, (s5)
   1ccf4:	be 90 00 a8 	load_32 s5, 36(sp)
   1ccf8:	be 81 00 a8 	load_32 s13, 32(sp)
   1ccfc:	a5 01 00 88 	store_32 s13, (s5)
   1cd00:	a0 0d 00 4f 	movehi s13, 96
   1cd04:	ac 80 51 c0 	add_i s5, s12, s3
   1cd08:	a7 00 00 88 	store_32 s5, (s7)
   1cd0c:	68 80 55 c0 	add_i s3, s8, s11
   1cd10:	62 00 00 88 	store_32 s3, (s2)
   1cd14:	ad 41 24 00 	or s13, s13, 2320
   1cd18:	4c 01 55 c0 	add_i s10, s12, s10
   1cd1c:	6d 01 00 a8 	load_32 s11, (s13)
   1cd20:	8a 81 55 c1 	cmple_i s12, s10, s11
   1cd24:	4c 00 00 f4 	bnz s12, 8 <AM_initVariables+0x258>
   1cd28:	06 00 00 f6 	b 24 <AM_initVariables+0x26c>
   1cd2c:	60 0d 00 4f 	movehi s11, 96
   1cd30:	6b 21 24 00 	or s11, s11, 2312
   1cd34:	6b 01 00 a8 	load_32 s11, (s11)
   1cd38:	4a 81 35 c1 	cmpge_i s10, s10, s11
   1cd3c:	6a 00 00 f4 	bnz s10, 12 <AM_initVariables+0x274>
   1cd40:	ab 80 64 c0 	sub_i s5, s11, s9
   1cd44:	a7 00 00 88 	store_32 s5, (s7)
   1cd48:	e0 0c 00 4f 	movehi s7, 96
   1cd4c:	c8 00 53 c0 	add_i s6, s8, s6
   1cd50:	e7 30 24 00 	or s7, s7, 2316
   1cd54:	e7 00 00 a8 	load_32 s7, (s7)
   1cd58:	06 81 23 c1 	cmpgt_i s8, s6, s7
   1cd5c:	c8 00 00 f4 	bnz s8, 24 <AM_initVariables+0x2a0>
   1cd60:	e0 0c 00 4f 	movehi s7, 96
   1cd64:	e7 10 24 00 	or s7, s7, 2308
   1cd68:	e7 00 00 a8 	load_32 s7, (s7)
   1cd6c:	c6 80 33 c1 	cmpge_i s6, s6, s7
   1cd70:	66 00 00 f4 	bnz s6, 12 <AM_initVariables+0x2a8>
   1cd74:	67 00 62 c0 	sub_i s3, s7, s4
   1cd78:	62 00 00 88 	store_32 s3, (s2)
   1cd7c:	40 0c 00 4f 	movehi s2, 96
   1cd80:	c0 0c 00 4f 	movehi s6, 96
   1cd84:	e0 0c 00 4f 	movehi s7, 96
   1cd88:	42 50 22 00 	or s2, s2, 2196
   1cd8c:	85 80 50 c0 	add_i s4, s5, s1
   1cd90:	82 00 00 88 	store_32 s4, (s2)
   1cd94:	46 60 22 00 	or s2, s6, 2200
   1cd98:	87 70 22 00 	or s4, s7, 2204
   1cd9c:	c3 00 50 c0 	add_i s6, s3, s0
   1cda0:	c2 00 00 88 	store_32 s6, (s2)
   1cda4:	40 0c 00 4f 	movehi s2, 96
   1cda8:	a4 00 00 88 	store_32 s5, (s4)
   1cdac:	80 0c 00 4f 	movehi s4, 96
   1cdb0:	a0 0c 00 4f 	movehi s5, 96
   1cdb4:	42 80 22 00 	or s2, s2, 2208
   1cdb8:	84 90 22 00 	or s4, s4, 2212
   1cdbc:	a5 a0 22 00 	or s5, s5, 2216
   1cdc0:	62 00 00 88 	store_32 s3, (s2)
   1cdc4:	24 00 00 88 	store_32 s1, (s4)
   1cdc8:	05 00 00 88 	store_32 s0, (s5)
   1cdcc:	13 04 00 4f 	movehi s0, 51
   1cdd0:	00 f0 78 00 	or s0, s0, 7740
   1cdd4:	bb a7 00 f8 	call 171756 <ST_Responder>
   1cdd8:	fe b3 00 a8 	load_32 ra, 44(sp)
   1cddc:	7e c3 00 a8 	load_32 s27, 48(sp)
   1cde0:	5e d3 00 a8 	load_32 s26, 52(sp)
   1cde4:	3e e3 00 a8 	load_32 s25, 56(sp)
   1cde8:	1e f3 00 a8 	load_32 s24, 60(sp)
   1cdec:	de 03 01 05 	add_i sp, sp, 64
   1cdf0:	1f 00 00 f0 	ret

000000000001cdf4 AM_loadPics:
   1cdf4:	de 03 fe 05 	add_i sp, sp, -128
   1cdf8:	1e f3 01 88 	store_32 s24, 124(sp)
   1cdfc:	3e e3 01 88 	store_32 s25, 120(sp)
   1ce00:	5e d3 01 88 	store_32 s26, 116(sp)
   1ce04:	7e c3 01 88 	store_32 s27, 112(sp)
   1ce08:	fe b3 01 88 	store_32 ra, 108(sp)
   1ce0c:	01 00 00 4f 	movehi s0, 1
   1ce10:	20 00 00 0f 	move s1, 0
   1ce14:	3e 20 00 88 	store_32 s1, 8(sp)
   1ce18:	1e 8f 01 05 	add_i s24, sp, 99
   1ce1c:	40 13 56 00 	or s26, s0, 5508
   1ce20:	5e 13 00 88 	store_32 s26, 4(sp)
   1ce24:	1e 03 00 88 	store_32 s24, (sp)
   1ce28:	f8 d3 00 f8 	call 217056 <sprintf>
   1ce2c:	20 07 00 0f 	move s25, 1
   1ce30:	00 00 fc c0 	move s0, s24
   1ce34:	20 80 fc c0 	move s1, s25
   1ce38:	44 88 00 f8 	call 139536 <W_CacheLumpName>
   1ce3c:	20 0c 00 4f 	movehi s1, 96
   1ce40:	61 d3 24 00 	or s27, s1, 2356
   1ce44:	1b 00 00 88 	store_32 s0, (s27)
   1ce48:	3e 23 00 88 	store_32 s25, 8(sp)
   1ce4c:	5e 13 00 88 	store_32 s26, 4(sp)
   1ce50:	1e 03 00 88 	store_32 s24, (sp)
   1ce54:	ed d3 00 f8 	call 217012 <sprintf>
   1ce58:	00 00 fc c0 	move s0, s24
   1ce5c:	20 80 fc c0 	move s1, s25
   1ce60:	3a 88 00 f8 	call 139496 <W_CacheLumpName>
   1ce64:	1b 10 00 88 	store_32 s0, 4(s27)
   1ce68:	00 08 00 0f 	move s0, 2
   1ce6c:	1e 20 00 88 	store_32 s0, 8(sp)
   1ce70:	5e 13 00 88 	store_32 s26, 4(sp)
   1ce74:	1e 03 00 88 	store_32 s24, (sp)
   1ce78:	e4 d3 00 f8 	call 216976 <sprintf>
   1ce7c:	00 00 fc c0 	move s0, s24
   1ce80:	20 80 fc c0 	move s1, s25
   1ce84:	31 88 00 f8 	call 139460 <W_CacheLumpName>
   1ce88:	1b 20 00 88 	store_32 s0, 8(s27)
   1ce8c:	00 0c 00 0f 	move s0, 3
   1ce90:	1e 20 00 88 	store_32 s0, 8(sp)
   1ce94:	5e 13 00 88 	store_32 s26, 4(sp)
   1ce98:	1e 03 00 88 	store_32 s24, (sp)
   1ce9c:	db d3 00 f8 	call 216940 <sprintf>
   1cea0:	00 00 fc c0 	move s0, s24
   1cea4:	20 80 fc c0 	move s1, s25
   1cea8:	28 88 00 f8 	call 139424 <W_CacheLumpName>
   1ceac:	1b 30 00 88 	store_32 s0, 12(s27)
   1ceb0:	00 10 00 0f 	move s0, 4
   1ceb4:	1e 20 00 88 	store_32 s0, 8(sp)
   1ceb8:	5e 13 00 88 	store_32 s26, 4(sp)
   1cebc:	1e 03 00 88 	store_32 s24, (sp)
   1cec0:	d2 d3 00 f8 	call 216904 <sprintf>
   1cec4:	00 00 fc c0 	move s0, s24
   1cec8:	20 80 fc c0 	move s1, s25
   1cecc:	1f 88 00 f8 	call 139388 <W_CacheLumpName>
   1ced0:	1b 40 00 88 	store_32 s0, 16(s27)
   1ced4:	00 14 00 0f 	move s0, 5
   1ced8:	1e 20 00 88 	store_32 s0, 8(sp)
   1cedc:	5e 13 00 88 	store_32 s26, 4(sp)
   1cee0:	1e 03 00 88 	store_32 s24, (sp)
   1cee4:	c9 d3 00 f8 	call 216868 <sprintf>
   1cee8:	00 00 fc c0 	move s0, s24
   1ceec:	20 80 fc c0 	move s1, s25
   1cef0:	16 88 00 f8 	call 139352 <W_CacheLumpName>
   1cef4:	1b 50 00 88 	store_32 s0, 20(s27)
   1cef8:	00 18 00 0f 	move s0, 6
   1cefc:	1e 20 00 88 	store_32 s0, 8(sp)
   1cf00:	5e 13 00 88 	store_32 s26, 4(sp)
   1cf04:	1e 03 00 88 	store_32 s24, (sp)
   1cf08:	c0 d3 00 f8 	call 216832 <sprintf>
   1cf0c:	00 00 fc c0 	move s0, s24
   1cf10:	20 80 fc c0 	move s1, s25
   1cf14:	0d 88 00 f8 	call 139316 <W_CacheLumpName>
   1cf18:	1b 60 00 88 	store_32 s0, 24(s27)
   1cf1c:	00 1c 00 0f 	move s0, 7
   1cf20:	1e 20 00 88 	store_32 s0, 8(sp)
   1cf24:	5e 13 00 88 	store_32 s26, 4(sp)
   1cf28:	1e 03 00 88 	store_32 s24, (sp)
   1cf2c:	b7 d3 00 f8 	call 216796 <sprintf>
   1cf30:	00 00 fc c0 	move s0, s24
   1cf34:	20 80 fc c0 	move s1, s25
   1cf38:	04 88 00 f8 	call 139280 <W_CacheLumpName>
   1cf3c:	1b 70 00 88 	store_32 s0, 28(s27)
   1cf40:	00 20 00 0f 	move s0, 8
   1cf44:	1e 20 00 88 	store_32 s0, 8(sp)
   1cf48:	5e 13 00 88 	store_32 s26, 4(sp)
   1cf4c:	1e 03 00 88 	store_32 s24, (sp)
   1cf50:	ae d3 00 f8 	call 216760 <sprintf>
   1cf54:	00 00 fc c0 	move s0, s24
   1cf58:	20 80 fc c0 	move s1, s25
   1cf5c:	fb 87 00 f8 	call 139244 <W_CacheLumpName>
   1cf60:	1b 80 00 88 	store_32 s0, 32(s27)
   1cf64:	00 24 00 0f 	move s0, 9
   1cf68:	1e 20 00 88 	store_32 s0, 8(sp)
   1cf6c:	5e 13 00 88 	store_32 s26, 4(sp)
   1cf70:	1e 03 00 88 	store_32 s24, (sp)
   1cf74:	a5 d3 00 f8 	call 216724 <sprintf>
   1cf78:	00 00 fc c0 	move s0, s24
   1cf7c:	20 80 fc c0 	move s1, s25
   1cf80:	f2 87 00 f8 	call 139208 <W_CacheLumpName>
   1cf84:	1b 90 00 88 	store_32 s0, 36(s27)
   1cf88:	fe b3 01 a8 	load_32 ra, 108(sp)
   1cf8c:	7e c3 01 a8 	load_32 s27, 112(sp)
   1cf90:	5e d3 01 a8 	load_32 s26, 116(sp)
   1cf94:	3e e3 01 a8 	load_32 s25, 120(sp)
   1cf98:	1e f3 01 a8 	load_32 s24, 124(sp)
   1cf9c:	de 03 02 05 	add_i sp, sp, 128
   1cfa0:	1f 00 00 f0 	ret

000000000001cfa4 AM_unloadPics:
   1cfa4:	de 03 fe 05 	add_i sp, sp, -128
   1cfa8:	1e f3 01 88 	store_32 s24, 124(sp)
   1cfac:	3e e3 01 88 	store_32 s25, 120(sp)
   1cfb0:	fe d3 01 88 	store_32 ra, 116(sp)
   1cfb4:	00 0c 00 4f 	movehi s0, 96
   1cfb8:	4a 1c 00 4f 	movehi s2, 234
   1cfbc:	00 d3 24 00 	or s24, s0, 2356
   1cfc0:	22 47 28 00 	or s25, s2, 2577
   1cfc4:	18 00 00 a8 	load_32 s0, (s24)
   1cfc8:	20 d0 ff a9 	load_32 s1, -12(s0)
   1cfcc:	21 80 0c c1 	cmpeq_i s1, s1, s25
   1cfd0:	01 01 00 f4 	bnz s1, 32 <AM_unloadPics+0x4c>
   1cfd4:	00 00 00 4f 	movehi s0, 0
   1cfd8:	20 20 08 0f 	move s1, 520
   1cfdc:	3e 10 00 88 	store_32 s1, 4(sp)
   1cfe0:	00 84 05 00 	or s0, s0, 353
   1cfe4:	1e 00 00 88 	store_32 s0, (sp)
   1cfe8:	47 c4 ff f9 	call -61156 <I_Error>
   1cfec:	18 00 00 a8 	load_32 s0, (s24)
   1cff0:	20 94 01 0f 	move s1, 101
   1cff4:	53 c0 00 f8 	call 196940 <Z_ChangeTag2>
   1cff8:	18 10 00 a8 	load_32 s0, 4(s24)
   1cffc:	20 d0 ff a9 	load_32 s1, -12(s0)
   1d000:	21 80 0c c1 	cmpeq_i s1, s1, s25
   1d004:	01 01 00 f4 	bnz s1, 32 <AM_unloadPics+0x80>
   1d008:	00 00 00 4f 	movehi s0, 0
   1d00c:	20 20 08 0f 	move s1, 520
   1d010:	3e 10 00 88 	store_32 s1, 4(sp)
   1d014:	00 84 05 00 	or s0, s0, 353
   1d018:	1e 00 00 88 	store_32 s0, (sp)
   1d01c:	3a c4 ff f9 	call -61208 <I_Error>
   1d020:	18 10 00 a8 	load_32 s0, 4(s24)
   1d024:	20 94 01 0f 	move s1, 101
   1d028:	46 c0 00 f8 	call 196888 <Z_ChangeTag2>
   1d02c:	18 20 00 a8 	load_32 s0, 8(s24)
   1d030:	20 d0 ff a9 	load_32 s1, -12(s0)
   1d034:	21 80 0c c1 	cmpeq_i s1, s1, s25
   1d038:	01 01 00 f4 	bnz s1, 32 <AM_unloadPics+0xb4>
   1d03c:	00 00 00 4f 	movehi s0, 0
   1d040:	20 20 08 0f 	move s1, 520
   1d044:	3e 10 00 88 	store_32 s1, 4(sp)
   1d048:	00 84 05 00 	or s0, s0, 353
   1d04c:	1e 00 00 88 	store_32 s0, (sp)
   1d050:	2d c4 ff f9 	call -61260 <I_Error>
   1d054:	18 20 00 a8 	load_32 s0, 8(s24)
   1d058:	20 94 01 0f 	move s1, 101
   1d05c:	39 c0 00 f8 	call 196836 <Z_ChangeTag2>
   1d060:	18 30 00 a8 	load_32 s0, 12(s24)
   1d064:	20 d0 ff a9 	load_32 s1, -12(s0)
   1d068:	21 80 0c c1 	cmpeq_i s1, s1, s25
   1d06c:	01 01 00 f4 	bnz s1, 32 <AM_unloadPics+0xe8>
   1d070:	00 00 00 4f 	movehi s0, 0
   1d074:	20 20 08 0f 	move s1, 520
   1d078:	3e 10 00 88 	store_32 s1, 4(sp)
   1d07c:	00 84 05 00 	or s0, s0, 353
   1d080:	1e 00 00 88 	store_32 s0, (sp)
   1d084:	20 c4 ff f9 	call -61312 <I_Error>
   1d088:	18 30 00 a8 	load_32 s0, 12(s24)
   1d08c:	20 94 01 0f 	move s1, 101
   1d090:	2c c0 00 f8 	call 196784 <Z_ChangeTag2>
   1d094:	18 40 00 a8 	load_32 s0, 16(s24)
   1d098:	20 d0 ff a9 	load_32 s1, -12(s0)
   1d09c:	21 80 0c c1 	cmpeq_i s1, s1, s25
   1d0a0:	01 01 00 f4 	bnz s1, 32 <AM_unloadPics+0x11c>
   1d0a4:	00 00 00 4f 	movehi s0, 0
   1d0a8:	20 20 08 0f 	move s1, 520
   1d0ac:	3e 10 00 88 	store_32 s1, 4(sp)
   1d0b0:	00 84 05 00 	or s0, s0, 353
   1d0b4:	1e 00 00 88 	store_32 s0, (sp)
   1d0b8:	13 c4 ff f9 	call -61364 <I_Error>
   1d0bc:	18 40 00 a8 	load_32 s0, 16(s24)
   1d0c0:	20 94 01 0f 	move s1, 101
   1d0c4:	1f c0 00 f8 	call 196732 <Z_ChangeTag2>
   1d0c8:	18 50 00 a8 	load_32 s0, 20(s24)
   1d0cc:	20 d0 ff a9 	load_32 s1, -12(s0)
   1d0d0:	21 80 0c c1 	cmpeq_i s1, s1, s25
   1d0d4:	01 01 00 f4 	bnz s1, 32 <AM_unloadPics+0x150>
   1d0d8:	00 00 00 4f 	movehi s0, 0
   1d0dc:	20 20 08 0f 	move s1, 520
   1d0e0:	3e 10 00 88 	store_32 s1, 4(sp)
   1d0e4:	00 84 05 00 	or s0, s0, 353
   1d0e8:	1e 00 00 88 	store_32 s0, (sp)
   1d0ec:	06 c4 ff f9 	call -61416 <I_Error>
   1d0f0:	18 50 00 a8 	load_32 s0, 20(s24)
   1d0f4:	20 94 01 0f 	move s1, 101
   1d0f8:	12 c0 00 f8 	call 196680 <Z_ChangeTag2>
   1d0fc:	18 60 00 a8 	load_32 s0, 24(s24)
   1d100:	20 d0 ff a9 	load_32 s1, -12(s0)
   1d104:	21 80 0c c1 	cmpeq_i s1, s1, s25
   1d108:	01 01 00 f4 	bnz s1, 32 <AM_unloadPics+0x184>
   1d10c:	00 00 00 4f 	movehi s0, 0
   1d110:	20 20 08 0f 	move s1, 520
   1d114:	3e 10 00 88 	store_32 s1, 4(sp)
   1d118:	00 84 05 00 	or s0, s0, 353
   1d11c:	1e 00 00 88 	store_32 s0, (sp)
   1d120:	f9 c3 ff f9 	call -61468 <I_Error>
   1d124:	18 60 00 a8 	load_32 s0, 24(s24)
   1d128:	20 94 01 0f 	move s1, 101
   1d12c:	05 c0 00 f8 	call 196628 <Z_ChangeTag2>
   1d130:	18 70 00 a8 	load_32 s0, 28(s24)
   1d134:	20 d0 ff a9 	load_32 s1, -12(s0)
   1d138:	21 80 0c c1 	cmpeq_i s1, s1, s25
   1d13c:	01 01 00 f4 	bnz s1, 32 <AM_unloadPics+0x1b8>
   1d140:	00 00 00 4f 	movehi s0, 0
   1d144:	20 20 08 0f 	move s1, 520
   1d148:	3e 10 00 88 	store_32 s1, 4(sp)
   1d14c:	00 84 05 00 	or s0, s0, 353
   1d150:	1e 00 00 88 	store_32 s0, (sp)
   1d154:	ec c3 ff f9 	call -61520 <I_Error>
   1d158:	18 70 00 a8 	load_32 s0, 28(s24)
   1d15c:	20 94 01 0f 	move s1, 101
   1d160:	f8 bf 00 f8 	call 196576 <Z_ChangeTag2>
   1d164:	18 80 00 a8 	load_32 s0, 32(s24)
   1d168:	20 d0 ff a9 	load_32 s1, -12(s0)
   1d16c:	21 80 0c c1 	cmpeq_i s1, s1, s25
   1d170:	01 01 00 f4 	bnz s1, 32 <AM_unloadPics+0x1ec>
   1d174:	00 00 00 4f 	movehi s0, 0
   1d178:	20 20 08 0f 	move s1, 520
   1d17c:	3e 10 00 88 	store_32 s1, 4(sp)
   1d180:	00 84 05 00 	or s0, s0, 353
   1d184:	1e 00 00 88 	store_32 s0, (sp)
   1d188:	df c3 ff f9 	call -61572 <I_Error>
   1d18c:	18 80 00 a8 	load_32 s0, 32(s24)
   1d190:	20 94 01 0f 	move s1, 101
   1d194:	eb bf 00 f8 	call 196524 <Z_ChangeTag2>
   1d198:	18 90 00 a8 	load_32 s0, 36(s24)
   1d19c:	20 d0 ff a9 	load_32 s1, -12(s0)
   1d1a0:	21 80 0c c1 	cmpeq_i s1, s1, s25
   1d1a4:	01 01 00 f4 	bnz s1, 32 <AM_unloadPics+0x220>
   1d1a8:	00 00 00 4f 	movehi s0, 0
   1d1ac:	20 20 08 0f 	move s1, 520
   1d1b0:	3e 10 00 88 	store_32 s1, 4(sp)
   1d1b4:	00 84 05 00 	or s0, s0, 353
   1d1b8:	1e 00 00 88 	store_32 s0, (sp)
   1d1bc:	d2 c3 ff f9 	call -61624 <I_Error>
   1d1c0:	18 90 00 a8 	load_32 s0, 36(s24)
   1d1c4:	20 94 01 0f 	move s1, 101
   1d1c8:	de bf 00 f8 	call 196472 <Z_ChangeTag2>
   1d1cc:	fe d3 01 a8 	load_32 ra, 116(sp)
   1d1d0:	3e e3 01 a8 	load_32 s25, 120(sp)
   1d1d4:	1e f3 01 a8 	load_32 s24, 124(sp)
   1d1d8:	de 03 02 05 	add_i sp, sp, 128
   1d1dc:	1f 00 00 f0 	ret

000000000001d1e0 AM_clearMarks:
   1d1e0:	00 0c 00 4f 	movehi s0, 96
   1d1e4:	40 0c 00 4f 	movehi s2, 96
   1d1e8:	20 fc ff 0f 	move s1, -1
   1d1ec:	00 c0 22 00 	or s0, s0, 2224
   1d1f0:	42 00 24 00 	or s2, s2, 2304
   1d1f4:	20 00 00 88 	store_32 s1, (s0)
   1d1f8:	20 20 00 88 	store_32 s1, 8(s0)
   1d1fc:	20 40 00 88 	store_32 s1, 16(s0)
   1d200:	20 60 00 88 	store_32 s1, 24(s0)
   1d204:	20 80 00 88 	store_32 s1, 32(s0)
   1d208:	20 a0 00 88 	store_32 s1, 40(s0)
   1d20c:	20 c0 00 88 	store_32 s1, 48(s0)
   1d210:	20 e0 00 88 	store_32 s1, 56(s0)
   1d214:	20 00 01 88 	store_32 s1, 64(s0)
   1d218:	20 20 01 88 	store_32 s1, 72(s0)
   1d21c:	00 00 00 0f 	move s0, 0
   1d220:	02 00 00 88 	store_32 s0, (s2)
   1d224:	1f 00 00 f0 	ret

000000000001d228 AM_LevelInit:
   1d228:	de 03 ff 05 	add_i sp, sp, -64
   1d22c:	1e f3 00 88 	store_32 s24, 60(sp)
   1d230:	fe e3 00 88 	store_32 ra, 56(sp)
   1d234:	00 0c 00 4f 	movehi s0, 96
   1d238:	20 0c 00 4f 	movehi s1, 96
   1d23c:	40 04 00 0f 	move s2, 1
   1d240:	00 20 22 00 	or s0, s0, 2184
   1d244:	21 40 22 00 	or s1, s1, 2192
   1d248:	60 0c 00 4f 	movehi s3, 96
   1d24c:	40 00 00 82 	store_8 s2, (s0)
   1d250:	41 00 00 82 	store_8 s2, (s1)
   1d254:	40 0c 00 4f 	movehi s2, 96
   1d258:	03 c0 22 00 	or s0, s3, 2224
   1d25c:	20 fc ff 0f 	move s1, -1
   1d260:	42 00 24 00 	or s2, s2, 2304
   1d264:	20 00 00 88 	store_32 s1, (s0)
   1d268:	20 20 00 88 	store_32 s1, 8(s0)
   1d26c:	20 40 00 88 	store_32 s1, 16(s0)
   1d270:	20 60 00 88 	store_32 s1, 24(s0)
   1d274:	20 80 00 88 	store_32 s1, 32(s0)
   1d278:	20 a0 00 88 	store_32 s1, 40(s0)
   1d27c:	20 c0 00 88 	store_32 s1, 48(s0)
   1d280:	20 e0 00 88 	store_32 s1, 56(s0)
   1d284:	20 00 01 88 	store_32 s1, 64(s0)
   1d288:	20 20 01 88 	store_32 s1, 72(s0)
   1d28c:	00 00 00 0f 	move s0, 0
   1d290:	02 00 00 88 	store_32 s0, (s2)
   1d294:	4c fd ff f9 	call -2768 <AM_findMinMaxBoundaries>
   1d298:	00 0c 00 4f 	movehi s0, 96
   1d29c:	25 00 00 4f 	movehi s1, 5
   1d2a0:	00 63 24 00 	or s24, s0, 2328
   1d2a4:	21 cc 4c 00 	or s1, s1, 4915
   1d2a8:	18 00 00 a8 	load_32 s0, (s24)
   1d2ac:	28 fb ff f9 	call -4960 <FixedDiv>
   1d2b0:	33 04 00 4f 	movehi s1, 51
   1d2b4:	60 0c 00 4f 	movehi s3, 96
   1d2b8:	41 e0 78 00 	or s2, s1, 7736
   1d2bc:	63 70 24 00 	or s3, s3, 2332
   1d2c0:	20 00 f0 c0 	move s1, s0
   1d2c4:	22 00 00 88 	store_32 s1, (s2)
   1d2c8:	03 00 00 a8 	load_32 s0, (s3)
   1d2cc:	01 00 50 c1 	cmple_i s0, s1, s0
   1d2d0:	60 00 00 f4 	bnz s0, 12 <AM_LevelInit+0xb4>
   1d2d4:	38 00 00 a8 	load_32 s1, (s24)
   1d2d8:	22 00 00 88 	store_32 s1, (s2)
   1d2dc:	08 00 00 4f 	movehi s0, 8
   1d2e0:	1b fb ff f9 	call -5012 <FixedDiv>
   1d2e4:	20 0c 00 4f 	movehi s1, 96
   1d2e8:	21 30 22 00 	or s1, s1, 2188
   1d2ec:	01 00 00 88 	store_32 s0, (s1)
   1d2f0:	fe e3 00 a8 	load_32 ra, 56(sp)
   1d2f4:	1e f3 00 a8 	load_32 s24, 60(sp)
   1d2f8:	de 03 01 05 	add_i sp, sp, 64
   1d2fc:	1f 00 00 f0 	ret

000000000001d300 AM_Stop:
   1d300:	de 03 ff 05 	add_i sp, sp, -64
   1d304:	1e f3 00 88 	store_32 s24, 60(sp)
   1d308:	fe e3 00 88 	store_32 ra, 56(sp)
   1d30c:	26 ff ff f9 	call -872 <AM_unloadPics>
   1d310:	00 0c 00 4f 	movehi s0, 96
   1d314:	00 03 00 0f 	move s24, 0
   1d318:	00 d0 21 00 	or s0, s0, 2164
   1d31c:	00 03 00 88 	store_32 s24, (s0)
   1d320:	13 04 00 4f 	movehi s0, 51
   1d324:	00 30 79 00 	or s0, s0, 7756
   1d328:	66 a6 00 f8 	call 170392 <ST_Responder>
   1d32c:	00 0c 00 4f 	movehi s0, 96
   1d330:	00 70 25 00 	or s0, s0, 2396
   1d334:	00 03 00 82 	store_8 s24, (s0)
   1d338:	fe e3 00 a8 	load_32 ra, 56(sp)
   1d33c:	1e f3 00 a8 	load_32 s24, 60(sp)
   1d340:	de 03 01 05 	add_i sp, sp, 64
   1d344:	1f 00 00 f0 	ret

000000000001d348 AM_Start:
   1d348:	de 03 ff 05 	add_i sp, sp, -64
   1d34c:	1e f3 00 88 	store_32 s24, 60(sp)
   1d350:	3e e3 00 88 	store_32 s25, 56(sp)
   1d354:	5e d3 00 88 	store_32 s26, 52(sp)
   1d358:	fe c3 00 88 	store_32 ra, 48(sp)
   1d35c:	00 0c 00 4f 	movehi s0, 96
   1d360:	40 73 25 00 	or s26, s0, 2396
   1d364:	1a 00 00 a0 	load_u8 s0, (s26)
   1d368:	00 04 00 11 	cmpne_i s0, s0, 1
   1d36c:	40 01 00 f4 	bnz s0, 40 <AM_Start+0x4c>
   1d370:	0d ff ff f9 	call -972 <AM_unloadPics>
   1d374:	00 0c 00 4f 	movehi s0, 96
   1d378:	00 03 00 0f 	move s24, 0
   1d37c:	00 d0 21 00 	or s0, s0, 2164
   1d380:	00 03 00 88 	store_32 s24, (s0)
   1d384:	13 04 00 4f 	movehi s0, 51
   1d388:	00 30 79 00 	or s0, s0, 7756
   1d38c:	4d a6 00 f8 	call 170292 <ST_Responder>
   1d390:	1a 03 00 82 	store_8 s24, (s26)
   1d394:	33 04 00 4f 	movehi s1, 51
   1d398:	5a 04 00 4f 	movehi s2, 58
   1d39c:	00 04 00 0f 	move s0, 1
   1d3a0:	1a 00 00 82 	store_8 s0, (s26)
   1d3a4:	01 73 79 00 	or s24, s1, 7772
   1d3a8:	22 83 7f 00 	or s25, s2, 8160
   1d3ac:	38 00 00 a8 	load_32 s1, (s24)
   1d3b0:	59 00 00 a8 	load_32 s2, (s25)
   1d3b4:	21 00 11 c1 	cmpne_i s1, s1, s2
   1d3b8:	21 01 00 f4 	bnz s1, 36 <AM_Start+0x94>
   1d3bc:	33 04 00 4f 	movehi s1, 51
   1d3c0:	5a 04 00 4f 	movehi s2, 58
   1d3c4:	21 80 79 00 	or s1, s1, 7776
   1d3c8:	42 70 6f 00 	or s2, s2, 7132
   1d3cc:	21 00 00 a8 	load_32 s1, (s1)
   1d3d0:	42 00 00 a8 	load_32 s2, (s2)
   1d3d4:	21 00 01 c1 	cmpeq_i s1, s1, s2
   1d3d8:	e1 06 00 f4 	bnz s1, 220 <AM_Start+0x16c>
   1d3dc:	20 0c 00 4f 	movehi s1, 96
   1d3e0:	40 0c 00 4f 	movehi s2, 96
   1d3e4:	60 0c 00 4f 	movehi s3, 96
   1d3e8:	21 20 22 00 	or s1, s1, 2184
   1d3ec:	42 40 22 00 	or s2, s2, 2192
   1d3f0:	01 00 00 82 	store_8 s0, (s1)
   1d3f4:	23 c0 22 00 	or s1, s3, 2224
   1d3f8:	02 00 00 82 	store_8 s0, (s2)
   1d3fc:	40 0c 00 4f 	movehi s2, 96
   1d400:	00 fc ff 0f 	move s0, -1
   1d404:	01 00 00 88 	store_32 s0, (s1)
   1d408:	42 00 24 00 	or s2, s2, 2304
   1d40c:	01 20 00 88 	store_32 s0, 8(s1)
   1d410:	01 40 00 88 	store_32 s0, 16(s1)
   1d414:	01 60 00 88 	store_32 s0, 24(s1)
   1d418:	01 80 00 88 	store_32 s0, 32(s1)
   1d41c:	01 a0 00 88 	store_32 s0, 40(s1)
   1d420:	01 c0 00 88 	store_32 s0, 48(s1)
   1d424:	01 e0 00 88 	store_32 s0, 56(s1)
   1d428:	01 00 01 88 	store_32 s0, 64(s1)
   1d42c:	01 20 01 88 	store_32 s0, 72(s1)
   1d430:	00 00 00 0f 	move s0, 0
   1d434:	02 00 00 88 	store_32 s0, (s2)
   1d438:	e3 fc ff f9 	call -3188 <AM_findMinMaxBoundaries>
   1d43c:	00 0c 00 4f 	movehi s0, 96
   1d440:	25 00 00 4f 	movehi s1, 5
   1d444:	40 63 24 00 	or s26, s0, 2328
   1d448:	21 cc 4c 00 	or s1, s1, 4915
   1d44c:	1a 00 00 a8 	load_32 s0, (s26)
   1d450:	bf fa ff f9 	call -5380 <FixedDiv>
   1d454:	33 04 00 4f 	movehi s1, 51
   1d458:	60 0c 00 4f 	movehi s3, 96
   1d45c:	41 e0 78 00 	or s2, s1, 7736
   1d460:	63 70 24 00 	or s3, s3, 2332
   1d464:	20 00 f0 c0 	move s1, s0
   1d468:	22 00 00 88 	store_32 s1, (s2)
   1d46c:	03 00 00 a8 	load_32 s0, (s3)
   1d470:	01 00 50 c1 	cmple_i s0, s1, s0
   1d474:	60 00 00 f4 	bnz s0, 12 <AM_Start+0x138>
   1d478:	3a 00 00 a8 	load_32 s1, (s26)
   1d47c:	22 00 00 88 	store_32 s1, (s2)
   1d480:	08 00 00 4f 	movehi s0, 8
   1d484:	b2 fa ff f9 	call -5432 <FixedDiv>
   1d488:	20 0c 00 4f 	movehi s1, 96
   1d48c:	21 30 22 00 	or s1, s1, 2188
   1d490:	01 00 00 88 	store_32 s0, (s1)
   1d494:	1a 04 00 4f 	movehi s0, 58
   1d498:	33 04 00 4f 	movehi s1, 51
   1d49c:	59 00 00 a8 	load_32 s2, (s25)
   1d4a0:	58 00 00 88 	store_32 s2, (s24)
   1d4a4:	00 70 6f 00 	or s0, s0, 7132
   1d4a8:	21 80 79 00 	or s1, s1, 7776
   1d4ac:	00 00 00 a8 	load_32 s0, (s0)
   1d4b0:	01 00 00 88 	store_32 s0, (s1)
   1d4b4:	88 fd ff f9 	call -2528 <AM_initVariables>
   1d4b8:	4f fe ff f9 	call -1732 <AM_loadPics>
   1d4bc:	fe c3 00 a8 	load_32 ra, 48(sp)
   1d4c0:	5e d3 00 a8 	load_32 s26, 52(sp)
   1d4c4:	3e e3 00 a8 	load_32 s25, 56(sp)
   1d4c8:	1e f3 00 a8 	load_32 s24, 60(sp)
   1d4cc:	de 03 01 05 	add_i sp, sp, 64
   1d4d0:	1f 00 00 f0 	ret

000000000001d4d4 AM_minOutWindowScale:
   1d4d4:	de 03 ff 05 	add_i sp, sp, -64
   1d4d8:	1e f3 00 88 	store_32 s24, 60(sp)
   1d4dc:	3e e3 00 88 	store_32 s25, 56(sp)
   1d4e0:	5e d3 00 88 	store_32 s26, 52(sp)
   1d4e4:	7e c3 00 88 	store_32 s27, 48(sp)
   1d4e8:	fe b3 00 88 	store_32 ra, 44(sp)
   1d4ec:	00 0c 00 4f 	movehi s0, 96
   1d4f0:	33 04 00 4f 	movehi s1, 51
   1d4f4:	00 60 24 00 	or s0, s0, 2328
   1d4f8:	41 e0 78 00 	or s2, s1, 7736
   1d4fc:	20 00 00 a8 	load_32 s1, (s0)
   1d500:	08 00 00 4f 	movehi s0, 8
   1d504:	22 00 00 88 	store_32 s1, (s2)
   1d508:	91 fa ff f9 	call -5564 <FixedDiv>
   1d50c:	20 0c 00 4f 	movehi s1, 96
   1d510:	40 0c 00 4f 	movehi s2, 96
   1d514:	00 03 00 0f 	move s24, 0
   1d518:	61 30 22 00 	or s3, s1, 2188
   1d51c:	22 e3 21 00 	or s25, s2, 2168
   1d520:	20 00 f0 c0 	move s1, s0
   1d524:	7e a0 00 88 	store_32 s3, 40(sp)
   1d528:	23 00 00 88 	store_32 s1, (s3)
   1d52c:	40 0c 00 4f 	movehi s2, 96
   1d530:	19 00 00 a8 	load_32 s0, (s25)
   1d534:	60 0c 00 4f 	movehi s3, 96
   1d538:	42 f3 21 00 	or s26, s2, 2172
   1d53c:	63 00 22 00 	or s3, s3, 2176
   1d540:	40 7c 00 0a 	shr s2, s0, 31
   1d544:	00 00 51 c0 	add_i s0, s0, s2
   1d548:	5a 00 00 a8 	load_32 s2, (s26)
   1d54c:	00 04 00 09 	ashr s0, s0, 1
   1d550:	02 00 50 c0 	add_i s0, s2, s0
   1d554:	1a 00 00 88 	store_32 s0, (s26)
   1d558:	7e 90 00 88 	store_32 s3, 36(sp)
   1d55c:	40 0c 00 4f 	movehi s2, 96
   1d560:	03 00 00 a8 	load_32 s0, (s3)
   1d564:	60 0c 00 4f 	movehi s3, 96
   1d568:	62 13 22 00 	or s27, s2, 2180
   1d56c:	63 20 22 00 	or s3, s3, 2184
   1d570:	40 7c 00 0a 	shr s2, s0, 31
   1d574:	00 00 51 c0 	add_i s0, s0, s2
   1d578:	5b 00 00 a8 	load_32 s2, (s27)
   1d57c:	00 04 00 09 	ashr s0, s0, 1
   1d580:	02 00 50 c0 	add_i s0, s2, s0
   1d584:	1b 00 00 88 	store_32 s0, (s27)
   1d588:	03 00 00 a0 	load_u8 s0, (s3)
   1d58c:	00 00 00 11 	cmpne_i s0, s0, 0
   1d590:	60 00 00 f4 	bnz s0, 12 <AM_minOutWindowScale+0xc8>
   1d594:	00 00 fc c0 	move s0, s24
   1d598:	02 00 00 f6 	b 8 <AM_minOutWindowScale+0xcc>
   1d59c:	00 40 01 4f 	movehi s0, 2560
   1d5a0:	65 fa ff f9 	call -5740 <FixedMul>
   1d5a4:	20 0c 00 4f 	movehi s1, 96
   1d5a8:	19 00 00 88 	store_32 s0, (s25)
   1d5ac:	21 40 22 00 	or s1, s1, 2192
   1d5b0:	01 00 00 a0 	load_u8 s0, (s1)
   1d5b4:	00 00 00 11 	cmpne_i s0, s0, 0
   1d5b8:	40 00 00 f4 	bnz s0, 8 <AM_minOutWindowScale+0xec>
   1d5bc:	02 00 00 f6 	b 8 <AM_minOutWindowScale+0xf0>
   1d5c0:	00 ab 00 4f 	movehi s24, 1344
   1d5c4:	1e a0 00 a8 	load_32 s0, 40(sp)
   1d5c8:	20 00 00 a8 	load_32 s1, (s0)
   1d5cc:	00 00 fc c0 	move s0, s24
   1d5d0:	59 fa ff f9 	call -5788 <FixedMul>
   1d5d4:	3e 90 00 a8 	load_32 s1, 36(sp)
   1d5d8:	a0 0c 00 4f 	movehi s5, 96
   1d5dc:	01 00 00 88 	store_32 s0, (s1)
   1d5e0:	39 00 00 a8 	load_32 s1, (s25)
   1d5e4:	7a 00 00 a8 	load_32 s3, (s26)
   1d5e8:	41 7c 00 0a 	shr s2, s1, 31
   1d5ec:	41 00 51 c0 	add_i s2, s1, s2
   1d5f0:	42 04 00 09 	ashr s2, s2, 1
   1d5f4:	43 00 61 c0 	sub_i s2, s3, s2
   1d5f8:	5a 00 00 88 	store_32 s2, (s26)
   1d5fc:	60 7c 00 0a 	shr s3, s0, 31
   1d600:	9b 00 00 a8 	load_32 s4, (s27)
   1d604:	60 80 51 c0 	add_i s3, s0, s3
   1d608:	22 80 50 c0 	add_i s1, s2, s1
   1d60c:	45 60 22 00 	or s2, s5, 2200
   1d610:	63 04 00 09 	ashr s3, s3, 1
   1d614:	64 80 61 c0 	sub_i s3, s4, s3
   1d618:	7b 00 00 88 	store_32 s3, (s27)
   1d61c:	80 0c 00 4f 	movehi s4, 96
   1d620:	03 00 50 c0 	add_i s0, s3, s0
   1d624:	84 50 22 00 	or s4, s4, 2196
   1d628:	24 00 00 88 	store_32 s1, (s4)
   1d62c:	02 00 00 88 	store_32 s0, (s2)
   1d630:	fe b3 00 a8 	load_32 ra, 44(sp)
   1d634:	7e c3 00 a8 	load_32 s27, 48(sp)
   1d638:	5e d3 00 a8 	load_32 s26, 52(sp)
   1d63c:	3e e3 00 a8 	load_32 s25, 56(sp)
   1d640:	1e f3 00 a8 	load_32 s24, 60(sp)
   1d644:	de 03 01 05 	add_i sp, sp, 64
   1d648:	1f 00 00 f0 	ret

000000000001d64c AM_maxOutWindowScale:
   1d64c:	de 03 ff 05 	add_i sp, sp, -64
   1d650:	1e f3 00 88 	store_32 s24, 60(sp)
   1d654:	3e e3 00 88 	store_32 s25, 56(sp)
   1d658:	5e d3 00 88 	store_32 s26, 52(sp)
   1d65c:	7e c3 00 88 	store_32 s27, 48(sp)
   1d660:	fe b3 00 88 	store_32 ra, 44(sp)
   1d664:	00 0c 00 4f 	movehi s0, 96
   1d668:	33 04 00 4f 	movehi s1, 51
   1d66c:	00 70 24 00 	or s0, s0, 2332
   1d670:	41 e0 78 00 	or s2, s1, 7736
   1d674:	20 00 00 a8 	load_32 s1, (s0)
   1d678:	08 00 00 4f 	movehi s0, 8
   1d67c:	22 00 00 88 	store_32 s1, (s2)
   1d680:	33 fa ff f9 	call -5940 <FixedDiv>
   1d684:	20 0c 00 4f 	movehi s1, 96
   1d688:	40 0c 00 4f 	movehi s2, 96
   1d68c:	00 03 00 0f 	move s24, 0
   1d690:	61 30 22 00 	or s3, s1, 2188
   1d694:	22 e3 21 00 	or s25, s2, 2168
   1d698:	20 00 f0 c0 	move s1, s0
   1d69c:	7e a0 00 88 	store_32 s3, 40(sp)
   1d6a0:	23 00 00 88 	store_32 s1, (s3)
   1d6a4:	40 0c 00 4f 	movehi s2, 96
   1d6a8:	19 00 00 a8 	load_32 s0, (s25)
   1d6ac:	60 0c 00 4f 	movehi s3, 96
   1d6b0:	42 f3 21 00 	or s26, s2, 2172
   1d6b4:	63 00 22 00 	or s3, s3, 2176
   1d6b8:	40 7c 00 0a 	shr s2, s0, 31
   1d6bc:	00 00 51 c0 	add_i s0, s0, s2
   1d6c0:	5a 00 00 a8 	load_32 s2, (s26)
   1d6c4:	00 04 00 09 	ashr s0, s0, 1
   1d6c8:	02 00 50 c0 	add_i s0, s2, s0
   1d6cc:	1a 00 00 88 	store_32 s0, (s26)
   1d6d0:	7e 90 00 88 	store_32 s3, 36(sp)
   1d6d4:	40 0c 00 4f 	movehi s2, 96
   1d6d8:	03 00 00 a8 	load_32 s0, (s3)
   1d6dc:	60 0c 00 4f 	movehi s3, 96
   1d6e0:	62 13 22 00 	or s27, s2, 2180
   1d6e4:	63 20 22 00 	or s3, s3, 2184
   1d6e8:	40 7c 00 0a 	shr s2, s0, 31
   1d6ec:	00 00 51 c0 	add_i s0, s0, s2
   1d6f0:	5b 00 00 a8 	load_32 s2, (s27)
   1d6f4:	00 04 00 09 	ashr s0, s0, 1
   1d6f8:	02 00 50 c0 	add_i s0, s2, s0
   1d6fc:	1b 00 00 88 	store_32 s0, (s27)
   1d700:	03 00 00 a0 	load_u8 s0, (s3)
   1d704:	00 00 00 11 	cmpne_i s0, s0, 0
   1d708:	60 00 00 f4 	bnz s0, 12 <AM_maxOutWindowScale+0xc8>
   1d70c:	00 00 fc c0 	move s0, s24
   1d710:	02 00 00 f6 	b 8 <AM_maxOutWindowScale+0xcc>
   1d714:	00 40 01 4f 	movehi s0, 2560
   1d718:	07 fa ff f9 	call -6116 <FixedMul>
   1d71c:	20 0c 00 4f 	movehi s1, 96
   1d720:	19 00 00 88 	store_32 s0, (s25)
   1d724:	21 40 22 00 	or s1, s1, 2192
   1d728:	01 00 00 a0 	load_u8 s0, (s1)
   1d72c:	00 00 00 11 	cmpne_i s0, s0, 0
   1d730:	40 00 00 f4 	bnz s0, 8 <AM_maxOutWindowScale+0xec>
   1d734:	02 00 00 f6 	b 8 <AM_maxOutWindowScale+0xf0>
   1d738:	00 ab 00 4f 	movehi s24, 1344
   1d73c:	1e a0 00 a8 	load_32 s0, 40(sp)
   1d740:	20 00 00 a8 	load_32 s1, (s0)
   1d744:	00 00 fc c0 	move s0, s24
   1d748:	fb f9 ff f9 	call -6164 <FixedMul>
   1d74c:	3e 90 00 a8 	load_32 s1, 36(sp)
   1d750:	a0 0c 00 4f 	movehi s5, 96
   1d754:	01 00 00 88 	store_32 s0, (s1)
   1d758:	39 00 00 a8 	load_32 s1, (s25)
   1d75c:	7a 00 00 a8 	load_32 s3, (s26)
   1d760:	41 7c 00 0a 	shr s2, s1, 31
   1d764:	41 00 51 c0 	add_i s2, s1, s2
   1d768:	42 04 00 09 	ashr s2, s2, 1
   1d76c:	43 00 61 c0 	sub_i s2, s3, s2
   1d770:	5a 00 00 88 	store_32 s2, (s26)
   1d774:	60 7c 00 0a 	shr s3, s0, 31
   1d778:	9b 00 00 a8 	load_32 s4, (s27)
   1d77c:	60 80 51 c0 	add_i s3, s0, s3
   1d780:	22 80 50 c0 	add_i s1, s2, s1
   1d784:	45 60 22 00 	or s2, s5, 2200
   1d788:	63 04 00 09 	ashr s3, s3, 1
   1d78c:	64 80 61 c0 	sub_i s3, s4, s3
   1d790:	7b 00 00 88 	store_32 s3, (s27)
   1d794:	80 0c 00 4f 	movehi s4, 96
   1d798:	03 00 50 c0 	add_i s0, s3, s0
   1d79c:	84 50 22 00 	or s4, s4, 2196
   1d7a0:	24 00 00 88 	store_32 s1, (s4)
   1d7a4:	02 00 00 88 	store_32 s0, (s2)
   1d7a8:	fe b3 00 a8 	load_32 ra, 44(sp)
   1d7ac:	7e c3 00 a8 	load_32 s27, 48(sp)
   1d7b0:	5e d3 00 a8 	load_32 s26, 52(sp)
   1d7b4:	3e e3 00 a8 	load_32 s25, 56(sp)
   1d7b8:	1e f3 00 a8 	load_32 s24, 60(sp)
   1d7bc:	de 03 01 05 	add_i sp, sp, 64
   1d7c0:	1f 00 00 f0 	ret

000000000001d7c4 AM_Responder:
   1d7c4:	de 03 fe 05 	add_i sp, sp, -128
   1d7c8:	1e f3 01 88 	store_32 s24, 124(sp)
   1d7cc:	3e e3 01 88 	store_32 s25, 120(sp)
   1d7d0:	5e d3 01 88 	store_32 s26, 116(sp)
   1d7d4:	7e c3 01 88 	store_32 s27, 112(sp)
   1d7d8:	fe b3 01 88 	store_32 ra, 108(sp)
   1d7dc:	20 0c 00 4f 	movehi s1, 96
   1d7e0:	41 d3 21 00 	or s26, s1, 2164
   1d7e4:	3a 00 00 a8 	load_32 s1, (s26)
   1d7e8:	00 03 f0 c0 	move s24, s0
   1d7ec:	18 00 00 a8 	load_32 s0, (s24)
   1d7f0:	41 00 00 f4 	bnz s1, 8 <AM_Responder+0x34>
   1d7f4:	17 00 00 f6 	b 92 <AM_Responder+0x8c>
   1d7f8:	40 00 00 f4 	bnz s0, 8 <AM_Responder+0x3c>
   1d7fc:	20 00 00 f6 	b 128 <AM_Responder+0xb8>
   1d800:	00 04 00 11 	cmpne_i s0, s0, 1
   1d804:	20 03 00 0f 	move s25, 0
   1d808:	80 3d 00 f4 	bnz s0, 1968 <AM_Responder+0x7f4>
   1d80c:	18 10 00 a8 	load_32 s0, 4(s24)
   1d810:	20 50 fd 05 	add_i s1, s0, -172
   1d814:	41 0c 00 16 	cmpgt_u s2, s1, 3
   1d818:	82 08 00 f4 	bnz s2, 272 <AM_Responder+0x164>
   1d81c:	03 00 00 4f 	movehi s0, 3
   1d820:	21 08 00 0b 	shl s1, s1, 2
   1d824:	00 40 35 00 	or s0, s0, 3408
   1d828:	01 00 50 c0 	add_i s0, s1, s0
   1d82c:	00 00 00 a8 	load_32 s0, (s0)
   1d830:	00 00 00 f0 	b s0
   1d834:	13 04 00 4f 	movehi s0, 51
   1d838:	00 d0 78 00 	or s0, s0, 7732
   1d83c:	00 00 00 a8 	load_32 s0, (s0)
   1d840:	c0 3b 00 f4 	bnz s0, 1912 <AM_Responder+0x7f4>
   1d844:	00 0c 00 4f 	movehi s0, 96
   1d848:	00 c0 26 00 	or s0, s0, 2480
   1d84c:	4a 00 00 f6 	b 296 <AM_Responder+0x1b0>
   1d850:	20 03 00 0f 	move s25, 0
   1d854:	20 3b 00 f4 	bnz s0, 1892 <AM_Responder+0x7f4>
   1d858:	18 10 00 a8 	load_32 s0, 4(s24)
   1d85c:	00 24 00 11 	cmpne_i s0, s0, 9
   1d860:	c0 3a 00 f4 	bnz s0, 1880 <AM_Responder+0x7f4>
   1d864:	b9 fe ff f9 	call -1308 <AM_Start>
   1d868:	1b 04 00 4f 	movehi s0, 59
   1d86c:	20 00 00 0f 	move s1, 0
   1d870:	20 07 00 0f 	move s25, 1
   1d874:	00 30 19 00 	or s0, s0, 1612
   1d878:	cf 01 00 f6 	b 1852 <AM_Responder+0x7f0>
   1d87c:	18 10 00 a8 	load_32 s0, 4(s24)
   1d880:	20 03 00 0f 	move s25, 0
   1d884:	20 4c ff 05 	add_i s1, s0, -45
   1d888:	41 00 01 16 	cmpgt_u s2, s1, 64
   1d88c:	22 02 00 f4 	bnz s2, 68 <AM_Responder+0x10c>
   1d890:	03 00 00 4f 	movehi s0, 3
   1d894:	21 08 00 0b 	shl s1, s1, 2
   1d898:	00 80 35 00 	or s0, s0, 3424
   1d89c:	01 00 50 c0 	add_i s0, s1, s0
   1d8a0:	00 00 00 a8 	load_32 s0, (s0)
   1d8a4:	00 00 00 f0 	b s0
   1d8a8:	00 0c 00 4f 	movehi s0, 96
   1d8ac:	40 0c 00 4f 	movehi s2, 96
   1d8b0:	27 00 00 4f 	movehi s1, 7
   1d8b4:	00 c0 24 00 	or s0, s0, 2352
   1d8b8:	68 00 00 4f 	movehi s3, 8
   1d8bc:	42 b0 24 00 	or s2, s2, 2348
   1d8c0:	21 e8 6b 00 	or s1, s1, 6906
   1d8c4:	20 00 00 88 	store_32 s1, (s0)
   1d8c8:	03 78 14 00 	or s0, s3, 1310
   1d8cc:	a3 01 00 f6 	b 1676 <AM_Responder+0x794>
   1d8d0:	20 50 fd 05 	add_i s1, s0, -172
   1d8d4:	41 0c 00 16 	cmpgt_u s2, s1, 3
   1d8d8:	42 05 00 f4 	bnz s2, 168 <AM_Responder+0x1bc>
   1d8dc:	03 00 00 4f 	movehi s0, 3
   1d8e0:	21 08 00 0b 	shl s1, s1, 2
   1d8e4:	00 90 39 00 	or s0, s0, 3684
   1d8e8:	01 00 50 c0 	add_i s0, s1, s0
   1d8ec:	00 00 00 a8 	load_32 s0, (s0)
   1d8f0:	00 00 00 f0 	b s0
   1d8f4:	13 04 00 4f 	movehi s0, 51
   1d8f8:	00 d0 78 00 	or s0, s0, 7732
   1d8fc:	00 00 00 a8 	load_32 s0, (s0)
   1d900:	00 33 00 f4 	bnz s0, 1632 <AM_Responder+0x79c>
   1d904:	00 0c 00 4f 	movehi s0, 96
   1d908:	00 30 22 00 	or s0, s0, 2188
   1d90c:	20 00 00 a8 	load_32 s1, (s0)
   1d910:	00 04 00 4f 	movehi s0, 32
   1d914:	88 f9 ff f9 	call -6624 <FixedMul>
   1d918:	20 0c 00 4f 	movehi s1, 96
   1d91c:	40 00 00 0f 	move s2, 0
   1d920:	21 b0 26 00 	or s1, s1, 2476
   1d924:	f3 00 00 f6 	b 972 <AM_Responder+0x52c>
   1d928:	20 b4 00 10 	cmpeq_i s1, s0, 45
   1d92c:	81 00 00 f4 	bnz s1, 16 <AM_Responder+0x178>
   1d930:	00 f4 00 10 	cmpeq_i s0, s0, 61
   1d934:	40 00 00 f4 	bnz s0, 8 <AM_Responder+0x178>
   1d938:	a0 01 00 f6 	b 1664 <AM_Responder+0x7f4>
   1d93c:	00 0c 00 4f 	movehi s0, 96
   1d940:	20 0c 00 4f 	movehi s1, 96
   1d944:	48 00 00 4f 	movehi s2, 8
   1d948:	00 c0 24 00 	or s0, s0, 2352
   1d94c:	21 b0 24 00 	or s1, s1, 2348
   1d950:	40 00 00 88 	store_32 s2, (s0)
   1d954:	41 00 00 88 	store_32 s2, (s1)
   1d958:	98 01 00 f6 	b 1632 <AM_Responder+0x7f4>
   1d95c:	13 04 00 4f 	movehi s0, 51
   1d960:	00 d0 78 00 	or s0, s0, 7732
   1d964:	00 00 00 a8 	load_32 s0, (s0)
   1d968:	80 32 00 f4 	bnz s0, 1616 <AM_Responder+0x7f4>
   1d96c:	00 0c 00 4f 	movehi s0, 96
   1d970:	00 b0 26 00 	or s0, s0, 2476
   1d974:	20 03 00 0f 	move s25, 0
   1d978:	20 03 00 88 	store_32 s25, (s0)
   1d97c:	8f 01 00 f6 	b 1596 <AM_Responder+0x7f4>
   1d980:	00 24 00 10 	cmpeq_i s0, s0, 9
   1d984:	40 00 00 f4 	bnz s0, 8 <AM_Responder+0x1c8>
   1d988:	76 01 00 f6 	b 1496 <AM_Responder+0x79c>
   1d98c:	00 0c 00 4f 	movehi s0, 96
   1d990:	3b 04 00 4f 	movehi s1, 59
   1d994:	60 03 00 0f 	move s27, 0
   1d998:	00 80 25 00 	or s0, s0, 2400
   1d99c:	21 30 19 00 	or s1, s1, 1612
   1d9a0:	20 07 00 0f 	move s25, 1
   1d9a4:	60 03 00 88 	store_32 s27, (s0)
   1d9a8:	21 03 00 88 	store_32 s25, (s1)
   1d9ac:	7e fd ff f9 	call -2568 <AM_unloadPics>
   1d9b0:	13 04 00 4f 	movehi s0, 51
   1d9b4:	7a 03 00 88 	store_32 s27, (s26)
   1d9b8:	00 30 79 00 	or s0, s0, 7756
   1d9bc:	c1 a4 00 f8 	call 168708 <ST_Responder>
   1d9c0:	00 0c 00 4f 	movehi s0, 96
   1d9c4:	00 70 25 00 	or s0, s0, 2396
   1d9c8:	60 03 00 82 	store_8 s27, (s0)
   1d9cc:	1a 04 00 4f 	movehi s0, 58
   1d9d0:	00 60 6e 00 	or s0, s0, 7064
   1d9d4:	00 00 00 a8 	load_32 s0, (s0)
   1d9d8:	00 2f 00 f4 	bnz s0, 1504 <AM_Responder+0x7f4>
   1d9dc:	65 01 00 f6 	b 1428 <AM_Responder+0x7ac>
   1d9e0:	00 0c 00 4f 	movehi s0, 96
   1d9e4:	00 80 25 00 	or s0, s0, 2400
   1d9e8:	20 00 00 a8 	load_32 s1, (s0)
   1d9ec:	41 00 00 10 	cmpeq_i s2, s1, 0
   1d9f0:	42 04 00 01 	and s2, s2, 1
   1d9f4:	40 00 00 88 	store_32 s2, (s0)
   1d9f8:	41 00 00 f4 	bnz s1, 8 <AM_Responder+0x23c>
   1d9fc:	ca 00 00 f6 	b 808 <AM_Responder+0x560>
   1da00:	00 0c 00 4f 	movehi s0, 96
   1da04:	20 0c 00 4f 	movehi s1, 96
   1da08:	73 04 00 4f 	movehi s3, 51
   1da0c:	00 90 22 00 	or s0, s0, 2212
   1da10:	41 e0 21 00 	or s2, s1, 2168
   1da14:	63 d0 78 00 	or s3, s3, 7732
   1da18:	20 00 00 a8 	load_32 s1, (s0)
   1da1c:	00 0c 00 4f 	movehi s0, 96
   1da20:	22 00 00 88 	store_32 s1, (s2)
   1da24:	40 0c 00 4f 	movehi s2, 96
   1da28:	00 a0 22 00 	or s0, s0, 2216
   1da2c:	42 00 22 00 	or s2, s2, 2176
   1da30:	00 00 00 a8 	load_32 s0, (s0)
   1da34:	02 00 00 88 	store_32 s0, (s2)
   1da38:	43 00 00 a8 	load_32 s2, (s3)
   1da3c:	42 00 00 f4 	bnz s2, 8 <AM_Responder+0x280>
   1da40:	f9 00 00 f6 	b 996 <AM_Responder+0x660>
   1da44:	40 0c 00 4f 	movehi s2, 96
   1da48:	a0 0c 00 4f 	movehi s5, 96
   1da4c:	81 7c 00 0a 	shr s4, s1, 31
   1da50:	42 b0 22 00 	or s2, s2, 2220
   1da54:	81 00 52 c0 	add_i s4, s1, s4
   1da58:	a5 f0 21 00 	or s5, s5, 2172
   1da5c:	42 00 00 a8 	load_32 s2, (s2)
   1da60:	84 04 00 09 	ashr s4, s4, 1
   1da64:	42 00 00 a8 	load_32 s2, (s2)
   1da68:	62 30 00 a8 	load_32 s3, 12(s2)
   1da6c:	63 00 62 c0 	sub_i s3, s3, s4
   1da70:	65 00 00 88 	store_32 s3, (s5)
   1da74:	80 7c 00 0a 	shr s4, s0, 31
   1da78:	42 40 00 a8 	load_32 s2, 16(s2)
   1da7c:	80 00 52 c0 	add_i s4, s0, s4
   1da80:	84 04 00 09 	ashr s4, s4, 1
   1da84:	42 00 62 c0 	sub_i s2, s2, s4
   1da88:	f0 00 00 f6 	b 960 <AM_Responder+0x684>
   1da8c:	00 0c 00 4f 	movehi s0, 96
   1da90:	40 0c 00 4f 	movehi s2, 96
   1da94:	28 00 00 4f 	movehi s1, 8
   1da98:	00 c0 24 00 	or s0, s0, 2352
   1da9c:	67 00 00 4f 	movehi s3, 7
   1daa0:	42 b0 24 00 	or s2, s2, 2348
   1daa4:	21 78 14 00 	or s1, s1, 1310
   1daa8:	20 00 00 88 	store_32 s1, (s0)
   1daac:	03 e8 6b 00 	or s0, s3, 6906
   1dab0:	2a 01 00 f6 	b 1192 <AM_Responder+0x794>
   1dab4:	00 0c 00 4f 	movehi s0, 96
   1dab8:	40 0c 00 4f 	movehi s2, 96
   1dabc:	60 0c 00 4f 	movehi s3, 96
   1dac0:	00 c0 22 00 	or s0, s0, 2224
   1dac4:	20 fc ff 0f 	move s1, -1
   1dac8:	20 00 00 88 	store_32 s1, (s0)
   1dacc:	20 20 00 88 	store_32 s1, 8(s0)
   1dad0:	20 40 00 88 	store_32 s1, 16(s0)
   1dad4:	20 60 00 88 	store_32 s1, 24(s0)
   1dad8:	20 80 00 88 	store_32 s1, 32(s0)
   1dadc:	20 a0 00 88 	store_32 s1, 40(s0)
   1dae0:	20 c0 00 88 	store_32 s1, 48(s0)
   1dae4:	20 e0 00 88 	store_32 s1, 56(s0)
   1dae8:	20 00 01 88 	store_32 s1, 64(s0)
   1daec:	20 20 01 88 	store_32 s1, 72(s0)
   1daf0:	02 00 24 00 	or s0, s2, 2304
   1daf4:	23 b0 22 00 	or s1, s3, 2220
   1daf8:	40 00 00 0f 	move s2, 0
   1dafc:	40 00 00 88 	store_32 s2, (s0)
   1db00:	01 00 00 a8 	load_32 s0, (s1)
   1db04:	22 00 00 4f 	movehi s1, 2
   1db08:	21 f8 04 00 	or s1, s1, 318
   1db0c:	20 60 03 88 	store_32 s1, 216(s0)
   1db10:	13 01 00 f6 	b 1100 <AM_Responder+0x798>
   1db14:	13 04 00 4f 	movehi s0, 51
   1db18:	40 0c 00 4f 	movehi s2, 96
   1db1c:	9f fc 7f 4f 	movehi s4, 262143
   1db20:	00 d0 78 00 	or s0, s0, 7732
   1db24:	42 d0 26 00 	or s2, s2, 2484
   1db28:	20 00 00 a8 	load_32 s1, (s0)
   1db2c:	21 00 00 10 	cmpeq_i s1, s1, 0
   1db30:	61 04 00 01 	and s3, s1, 1
   1db34:	60 00 00 88 	store_32 s3, (s0)
   1db38:	04 fc 7f 00 	or s0, s4, 8191
   1db3c:	02 00 00 88 	store_32 s0, (s2)
   1db40:	e1 0d 00 f4 	bnz s1, 444 <AM_Responder+0x538>
   1db44:	00 00 00 4f 	movehi s0, 0
   1db48:	00 44 6a 00 	or s0, s0, 6801
   1db4c:	71 00 00 f6 	b 452 <AM_Responder+0x54c>
   1db50:	00 0c 00 4f 	movehi s0, 96
   1db54:	00 e0 25 00 	or s0, s0, 2424
   1db58:	20 00 00 a8 	load_32 s1, (s0)
   1db5c:	21 00 00 10 	cmpeq_i s1, s1, 0
   1db60:	41 04 00 01 	and s2, s1, 1
   1db64:	40 00 00 88 	store_32 s2, (s0)
   1db68:	01 0d 00 f4 	bnz s1, 416 <AM_Responder+0x544>
   1db6c:	01 00 00 4f 	movehi s0, 1
   1db70:	00 14 05 00 	or s0, s0, 325
   1db74:	67 00 00 f6 	b 412 <AM_Responder+0x54c>
   1db78:	00 0c 00 4f 	movehi s0, 96
   1db7c:	20 00 00 4f 	movehi s1, 0
   1db80:	20 03 24 00 	or s25, s0, 2304
   1db84:	19 00 00 a8 	load_32 s0, (s25)
   1db88:	1e 30 00 88 	store_32 s0, 12(sp)
   1db8c:	01 d8 52 00 	or s0, s1, 5302
   1db90:	22 00 00 4f 	movehi s1, 2
   1db94:	1e 20 00 88 	store_32 s0, 8(sp)
   1db98:	00 0c 00 4f 	movehi s0, 96
   1db9c:	21 f4 56 00 	or s1, s1, 5565
   1dba0:	3e 10 00 88 	store_32 s1, 4(sp)
   1dba4:	40 93 25 00 	or s26, s0, 2404
   1dba8:	5e 03 00 88 	store_32 s26, (sp)
   1dbac:	97 d0 00 f8 	call 213596 <sprintf>
   1dbb0:	00 0c 00 4f 	movehi s0, 96
   1dbb4:	20 0c 00 4f 	movehi s1, 96
   1dbb8:	40 0c 00 4f 	movehi s2, 96
   1dbbc:	00 b0 22 00 	or s0, s0, 2220
   1dbc0:	21 f0 21 00 	or s1, s1, 2172
   1dbc4:	42 e0 21 00 	or s2, s2, 2168
   1dbc8:	00 00 00 a8 	load_32 s0, (s0)
   1dbcc:	60 0c 00 4f 	movehi s3, 96
   1dbd0:	80 0c 00 4f 	movehi s4, 96
   1dbd4:	a0 0c 00 4f 	movehi s5, 96
   1dbd8:	40 63 03 88 	store_32 s26, 216(s0)
   1dbdc:	01 00 00 a8 	load_32 s0, (s1)
   1dbe0:	22 00 00 a8 	load_32 s1, (s2)
   1dbe4:	41 7c 00 0a 	shr s2, s1, 31
   1dbe8:	21 00 51 c0 	add_i s1, s1, s2
   1dbec:	59 00 00 a8 	load_32 s2, (s25)
   1dbf0:	21 04 00 09 	ashr s1, s1, 1
   1dbf4:	01 00 50 c0 	add_i s0, s1, s0
   1dbf8:	23 c0 22 00 	or s1, s3, 2224
   1dbfc:	62 0c 00 0b 	shl s3, s2, 3
   1dc00:	42 04 00 05 	add_i s2, s2, 1
   1dc04:	21 80 51 c0 	add_i s1, s1, s3
   1dc08:	64 10 22 00 	or s3, s4, 2180
   1dc0c:	85 00 22 00 	or s4, s5, 2176
   1dc10:	01 00 00 88 	store_32 s0, (s1)
   1dc14:	03 00 00 a8 	load_32 s0, (s3)
   1dc18:	64 00 00 a8 	load_32 s3, (s4)
   1dc1c:	93 64 66 4f 	movehi s4, 209715
   1dc20:	84 9c 19 00 	or s4, s4, 1639
   1dc24:	82 00 f2 c1 	mulh_i s4, s2, s4
   1dc28:	a3 7c 00 0a 	shr s5, s3, 31
   1dc2c:	63 80 52 c0 	add_i s3, s3, s5
   1dc30:	a4 08 00 09 	ashr s5, s4, 2
   1dc34:	84 7c 00 0a 	shr s4, s4, 31
   1dc38:	63 04 00 09 	ashr s3, s3, 1
   1dc3c:	85 00 52 c0 	add_i s4, s5, s4
   1dc40:	03 00 50 c0 	add_i s0, s3, s0
   1dc44:	01 10 00 88 	store_32 s0, 4(s1)
   1dc48:	04 28 00 07 	mull_i s0, s4, 10
   1dc4c:	02 00 60 c0 	sub_i s0, s2, s0
   1dc50:	19 00 00 88 	store_32 s0, (s25)
   1dc54:	c2 00 00 f6 	b 776 <AM_Responder+0x798>
   1dc58:	13 04 00 4f 	movehi s0, 51
   1dc5c:	00 d0 78 00 	or s0, s0, 7732
   1dc60:	00 00 00 a8 	load_32 s0, (s0)
   1dc64:	e0 17 00 f4 	bnz s0, 764 <AM_Responder+0x79c>
   1dc68:	00 0c 00 4f 	movehi s0, 96
   1dc6c:	00 30 22 00 	or s0, s0, 2188
   1dc70:	20 00 00 a8 	load_32 s1, (s0)
   1dc74:	00 04 00 4f 	movehi s0, 32
   1dc78:	af f8 ff f9 	call -7492 <FixedMul>
   1dc7c:	20 0c 00 4f 	movehi s1, 96
   1dc80:	21 c0 26 00 	or s1, s1, 2480
   1dc84:	01 00 00 88 	store_32 s0, (s1)
   1dc88:	b5 00 00 f6 	b 724 <AM_Responder+0x798>
   1dc8c:	13 04 00 4f 	movehi s0, 51
   1dc90:	00 d0 78 00 	or s0, s0, 7732
   1dc94:	00 00 00 a8 	load_32 s0, (s0)
   1dc98:	40 16 00 f4 	bnz s0, 712 <AM_Responder+0x79c>
   1dc9c:	00 0c 00 4f 	movehi s0, 96
   1dca0:	00 30 22 00 	or s0, s0, 2188
   1dca4:	20 00 00 a8 	load_32 s1, (s0)
   1dca8:	00 04 00 4f 	movehi s0, 32
   1dcac:	a2 f8 ff f9 	call -7544 <FixedMul>
   1dcb0:	20 0c 00 4f 	movehi s1, 96
   1dcb4:	21 b0 26 00 	or s1, s1, 2476
   1dcb8:	01 00 00 88 	store_32 s0, (s1)
   1dcbc:	a8 00 00 f6 	b 672 <AM_Responder+0x798>
   1dcc0:	13 04 00 4f 	movehi s0, 51
   1dcc4:	00 d0 78 00 	or s0, s0, 7732
   1dcc8:	00 00 00 a8 	load_32 s0, (s0)
   1dccc:	a0 14 00 f4 	bnz s0, 660 <AM_Responder+0x79c>
   1dcd0:	00 0c 00 4f 	movehi s0, 96
   1dcd4:	00 30 22 00 	or s0, s0, 2188
   1dcd8:	20 00 00 a8 	load_32 s1, (s0)
   1dcdc:	00 04 00 4f 	movehi s0, 32
   1dce0:	95 f8 ff f9 	call -7596 <FixedMul>
   1dce4:	20 0c 00 4f 	movehi s1, 96
   1dce8:	40 00 00 0f 	move s2, 0
   1dcec:	21 c0 26 00 	or s1, s1, 2480
   1dcf0:	02 00 60 c0 	sub_i s0, s2, s0
   1dcf4:	01 00 00 88 	store_32 s0, (s1)
   1dcf8:	99 00 00 f6 	b 612 <AM_Responder+0x798>
   1dcfc:	02 00 00 4f 	movehi s0, 2
   1dd00:	00 60 13 00 	or s0, s0, 1240
   1dd04:	03 00 00 f6 	b 12 <AM_Responder+0x54c>
   1dd08:	00 00 00 4f 	movehi s0, 0
   1dd0c:	00 b8 52 00 	or s0, s0, 5294
   1dd10:	20 0c 00 4f 	movehi s1, 96
   1dd14:	21 b0 22 00 	or s1, s1, 2220
   1dd18:	21 00 00 a8 	load_32 s1, (s1)
   1dd1c:	01 60 03 88 	store_32 s0, 216(s1)
   1dd20:	8f 00 00 f6 	b 572 <AM_Responder+0x798>
   1dd24:	00 0c 00 4f 	movehi s0, 96
   1dd28:	20 0c 00 4f 	movehi s1, 96
   1dd2c:	40 0c 00 4f 	movehi s2, 96
   1dd30:	20 f3 21 00 	or s25, s0, 2172
   1dd34:	60 0c 00 4f 	movehi s3, 96
   1dd38:	21 70 22 00 	or s1, s1, 2204
   1dd3c:	82 10 22 00 	or s4, s2, 2180
   1dd40:	19 00 00 a8 	load_32 s0, (s25)
   1dd44:	43 80 22 00 	or s2, s3, 2208
   1dd48:	9e 60 01 88 	store_32 s4, 88(sp)
   1dd4c:	01 00 00 88 	store_32 s0, (s1)
   1dd50:	20 0c 00 4f 	movehi s1, 96
   1dd54:	04 00 00 a8 	load_32 s0, (s4)
   1dd58:	73 04 00 4f 	movehi s3, 51
   1dd5c:	02 00 00 88 	store_32 s0, (s2)
   1dd60:	00 0c 00 4f 	movehi s0, 96
   1dd64:	40 0c 00 4f 	movehi s2, 96
   1dd68:	63 e0 78 00 	or s3, s3, 7736
   1dd6c:	40 e3 21 00 	or s26, s0, 2168
   1dd70:	01 90 22 00 	or s0, s1, 2212
   1dd74:	62 03 22 00 	or s27, s2, 2176
   1dd78:	3a 00 00 a8 	load_32 s1, (s26)
   1dd7c:	40 0c 00 4f 	movehi s2, 96
   1dd80:	20 00 00 88 	store_32 s1, (s0)
   1dd84:	20 0c 00 4f 	movehi s1, 96
   1dd88:	1b 00 00 a8 	load_32 s0, (s27)
   1dd8c:	42 60 24 00 	or s2, s2, 2328
   1dd90:	21 a0 22 00 	or s1, s1, 2216
   1dd94:	01 00 00 88 	store_32 s0, (s1)
   1dd98:	08 00 00 4f 	movehi s0, 8
   1dd9c:	22 00 00 a8 	load_32 s1, (s2)
   1dda0:	23 00 00 88 	store_32 s1, (s3)
   1dda4:	6a f8 ff f9 	call -7768 <FixedDiv>
   1dda8:	20 0c 00 4f 	movehi s1, 96
   1ddac:	60 0c 00 4f 	movehi s3, 96
   1ddb0:	41 30 22 00 	or s2, s1, 2188
   1ddb4:	20 00 f0 c0 	move s1, s0
   1ddb8:	5e 70 01 88 	store_32 s2, 92(sp)
   1ddbc:	63 20 22 00 	or s3, s3, 2184
   1ddc0:	22 00 00 88 	store_32 s1, (s2)
   1ddc4:	5e 83 01 88 	store_32 s26, 96(sp)
   1ddc8:	1a 00 00 a8 	load_32 s0, (s26)
   1ddcc:	40 7c 00 0a 	shr s2, s0, 31
   1ddd0:	00 00 51 c0 	add_i s0, s0, s2
   1ddd4:	59 00 00 a8 	load_32 s2, (s25)
   1ddd8:	3e a3 01 88 	store_32 s25, 104(sp)
   1dddc:	00 04 00 09 	ashr s0, s0, 1
   1dde0:	02 00 50 c0 	add_i s0, s2, s0
   1dde4:	19 00 00 88 	store_32 s0, (s25)
   1dde8:	7e 93 01 88 	store_32 s27, 100(sp)
   1ddec:	20 03 00 0f 	move s25, 0
   1ddf0:	1b 00 00 a8 	load_32 s0, (s27)
   1ddf4:	7e 63 01 a8 	load_32 s27, 88(sp)
   1ddf8:	40 7c 00 0a 	shr s2, s0, 31
   1ddfc:	00 00 51 c0 	add_i s0, s0, s2
   1de00:	5b 00 00 a8 	load_32 s2, (s27)
   1de04:	00 04 00 09 	ashr s0, s0, 1
   1de08:	02 00 50 c0 	add_i s0, s2, s0
   1de0c:	1b 00 00 88 	store_32 s0, (s27)
   1de10:	03 00 00 a0 	load_u8 s0, (s3)
   1de14:	00 00 00 11 	cmpne_i s0, s0, 0
   1de18:	40 05 00 f4 	bnz s0, 168 <AM_Responder+0x6fc>
   1de1c:	00 80 fc c0 	move s0, s25
   1de20:	29 00 00 f6 	b 164 <AM_Responder+0x700>
   1de24:	40 0c 00 4f 	movehi s2, 96
   1de28:	60 0c 00 4f 	movehi s3, 96
   1de2c:	80 0c 00 4f 	movehi s4, 96
   1de30:	42 70 22 00 	or s2, s2, 2204
   1de34:	a3 f0 21 00 	or s5, s3, 2172
   1de38:	84 80 22 00 	or s4, s4, 2208
   1de3c:	62 00 00 a8 	load_32 s3, (s2)
   1de40:	65 00 00 88 	store_32 s3, (s5)
   1de44:	44 00 00 a8 	load_32 s2, (s4)
   1de48:	80 0c 00 4f 	movehi s4, 96
   1de4c:	a0 0c 00 4f 	movehi s5, 96
   1de50:	c0 0c 00 4f 	movehi s6, 96
   1de54:	84 10 22 00 	or s4, s4, 2180
   1de58:	63 80 50 c0 	add_i s3, s3, s1
   1de5c:	02 00 50 c0 	add_i s0, s2, s0
   1de60:	44 00 00 88 	store_32 s2, (s4)
   1de64:	85 50 22 00 	or s4, s5, 2196
   1de68:	a0 0c 00 4f 	movehi s5, 96
   1de6c:	64 00 00 88 	store_32 s3, (s4)
   1de70:	86 20 22 00 	or s4, s6, 2184
   1de74:	65 60 22 00 	or s3, s5, 2200
   1de78:	03 00 00 88 	store_32 s0, (s3)
   1de7c:	04 00 00 a0 	load_u8 s0, (s4)
   1de80:	00 00 00 11 	cmpne_i s0, s0, 0
   1de84:	60 00 00 f4 	bnz s0, 12 <AM_Responder+0x6cc>
   1de88:	00 00 00 0f 	move s0, 0
   1de8c:	02 00 00 f6 	b 8 <AM_Responder+0x6d0>
   1de90:	00 40 01 4f 	movehi s0, 2560
   1de94:	2e f8 ff f9 	call -8008 <FixedDiv>
   1de98:	33 04 00 4f 	movehi s1, 51
   1de9c:	41 e0 78 00 	or s2, s1, 7736
   1dea0:	20 00 f0 c0 	move s1, s0
   1dea4:	08 00 00 4f 	movehi s0, 8
   1dea8:	22 00 00 88 	store_32 s1, (s2)
   1deac:	28 f8 ff f9 	call -8032 <FixedDiv>
   1deb0:	20 0c 00 4f 	movehi s1, 96
   1deb4:	21 30 22 00 	or s1, s1, 2188
   1deb8:	01 00 00 88 	store_32 s0, (s1)
   1debc:	28 00 00 f6 	b 160 <AM_Responder+0x798>
   1dec0:	00 40 01 4f 	movehi s0, 2560
   1dec4:	1c f8 ff f9 	call -8080 <FixedMul>
   1dec8:	20 0c 00 4f 	movehi s1, 96
   1decc:	5e 83 01 a8 	load_32 s26, 96(sp)
   1ded0:	21 40 22 00 	or s1, s1, 2192
   1ded4:	1a 00 00 88 	store_32 s0, (s26)
   1ded8:	01 00 00 a0 	load_u8 s0, (s1)
   1dedc:	00 00 00 11 	cmpne_i s0, s0, 0
   1dee0:	40 00 00 f4 	bnz s0, 8 <AM_Responder+0x724>
   1dee4:	02 00 00 f6 	b 8 <AM_Responder+0x728>
   1dee8:	20 ab 00 4f 	movehi s25, 1344
   1deec:	1e 70 01 a8 	load_32 s0, 92(sp)
   1def0:	20 00 00 a8 	load_32 s1, (s0)
   1def4:	00 80 fc c0 	move s0, s25
   1def8:	0f f8 ff f9 	call -8132 <FixedMul>
   1defc:	3e 90 01 a8 	load_32 s1, 100(sp)
   1df00:	a0 0c 00 4f 	movehi s5, 96
   1df04:	01 00 00 88 	store_32 s0, (s1)
   1df08:	3a 00 00 a8 	load_32 s1, (s26)
   1df0c:	9e a0 01 a8 	load_32 s4, 104(sp)
   1df10:	41 7c 00 0a 	shr s2, s1, 31
   1df14:	41 00 51 c0 	add_i s2, s1, s2
   1df18:	64 00 00 a8 	load_32 s3, (s4)
   1df1c:	42 04 00 09 	ashr s2, s2, 1
   1df20:	43 00 61 c0 	sub_i s2, s3, s2
   1df24:	44 00 00 88 	store_32 s2, (s4)
   1df28:	60 7c 00 0a 	shr s3, s0, 31
   1df2c:	9b 00 00 a8 	load_32 s4, (s27)
   1df30:	60 80 51 c0 	add_i s3, s0, s3
   1df34:	22 80 50 c0 	add_i s1, s2, s1
   1df38:	45 60 22 00 	or s2, s5, 2200
   1df3c:	63 04 00 09 	ashr s3, s3, 1
   1df40:	64 80 61 c0 	sub_i s3, s4, s3
   1df44:	7b 00 00 88 	store_32 s3, (s27)
   1df48:	80 0c 00 4f 	movehi s4, 96
   1df4c:	03 00 50 c0 	add_i s0, s3, s0
   1df50:	84 50 22 00 	or s4, s4, 2196
   1df54:	24 00 00 88 	store_32 s1, (s4)
   1df58:	02 00 00 88 	store_32 s0, (s2)
   1df5c:	20 07 00 0f 	move s25, 1
   1df60:	1a 04 00 4f 	movehi s0, 58
   1df64:	00 60 6e 00 	or s0, s0, 7064
   1df68:	00 00 00 a8 	load_32 s0, (s0)
   1df6c:	60 02 00 f4 	bnz s0, 76 <AM_Responder+0x7f4>
   1df70:	13 04 00 4f 	movehi s0, 51
   1df74:	38 10 00 a2 	load_s8 s1, 4(s24)
   1df78:	00 90 79 00 	or s0, s0, 7780
   1df7c:	72 f8 ff f9 	call -7736 <cht_CheckCheat>
   1df80:	c0 01 00 f2 	bz s0, 56 <AM_Responder+0x7f4>
   1df84:	00 0c 00 4f 	movehi s0, 96
   1df88:	4a 54 55 4f 	movehi s2, 174762
   1df8c:	20 03 00 0f 	move s25, 0
   1df90:	00 f0 25 00 	or s0, s0, 2428
   1df94:	42 58 55 00 	or s2, s2, 5462
   1df98:	20 00 00 a8 	load_32 s1, (s0)
   1df9c:	21 04 00 05 	add_i s1, s1, 1
   1dfa0:	41 00 f1 c1 	mulh_i s2, s1, s2
   1dfa4:	62 7c 00 0a 	shr s3, s2, 31
   1dfa8:	42 80 51 c0 	add_i s2, s2, s3
   1dfac:	42 0c 00 07 	mull_i s2, s2, 3
   1dfb0:	21 00 61 c0 	sub_i s1, s1, s2
   1dfb4:	20 00 00 88 	store_32 s1, (s0)
   1dfb8:	00 80 fc c0 	move s0, s25
   1dfbc:	fe b3 01 a8 	load_32 ra, 108(sp)
   1dfc0:	7e c3 01 a8 	load_32 s27, 112(sp)
   1dfc4:	5e d3 01 a8 	load_32 s26, 116(sp)
   1dfc8:	3e e3 01 a8 	load_32 s25, 120(sp)
   1dfcc:	1e f3 01 a8 	load_32 s24, 124(sp)
   1dfd0:	de 03 02 05 	add_i sp, sp, 128
   1dfd4:	1f 00 00 f0 	ret

000000000001dfd8 AM_changeWindowScale:
   1dfd8:	de 03 ff 05 	add_i sp, sp, -64
   1dfdc:	1e f3 00 88 	store_32 s24, 60(sp)
   1dfe0:	3e e3 00 88 	store_32 s25, 56(sp)
   1dfe4:	5e d3 00 88 	store_32 s26, 52(sp)
   1dfe8:	7e c3 00 88 	store_32 s27, 48(sp)
   1dfec:	fe b3 00 88 	store_32 ra, 44(sp)
   1dff0:	20 0c 00 4f 	movehi s1, 96
   1dff4:	13 04 00 4f 	movehi s0, 51
   1dff8:	21 c0 24 00 	or s1, s1, 2352
   1dffc:	00 e3 78 00 	or s24, s0, 7736
   1e000:	18 00 00 a8 	load_32 s0, (s24)
   1e004:	21 00 00 a8 	load_32 s1, (s1)
   1e008:	cb f7 ff f9 	call -8404 <FixedMul>
   1e00c:	20 00 f0 c0 	move s1, s0
   1e010:	38 00 00 88 	store_32 s1, (s24)
   1e014:	08 00 00 4f 	movehi s0, 8
   1e018:	cd f7 ff f9 	call -8396 <FixedDiv>
   1e01c:	20 0c 00 4f 	movehi s1, 96
   1e020:	60 0c 00 4f 	movehi s3, 96
   1e024:	40 00 f0 c0 	move s2, s0
   1e028:	21 33 22 00 	or s25, s1, 2188
   1e02c:	23 60 24 00 	or s1, s3, 2328
   1e030:	59 00 00 88 	store_32 s2, (s25)
   1e034:	18 00 00 a8 	load_32 s0, (s24)
   1e038:	21 00 00 a8 	load_32 s1, (s1)
   1e03c:	3e a3 00 88 	store_32 s25, 40(sp)
   1e040:	60 80 30 c1 	cmpge_i s3, s0, s1
   1e044:	a3 04 00 f4 	bnz s3, 148 <AM_changeWindowScale+0x100>
   1e048:	08 00 00 4f 	movehi s0, 8
   1e04c:	38 00 00 88 	store_32 s1, (s24)
   1e050:	bf f7 ff f9 	call -8452 <FixedDiv>
   1e054:	20 0c 00 4f 	movehi s1, 96
   1e058:	40 0c 00 4f 	movehi s2, 96
   1e05c:	60 0c 00 4f 	movehi s3, 96
   1e060:	41 e3 21 00 	or s26, s1, 2168
   1e064:	20 00 f0 c0 	move s1, s0
   1e068:	39 00 00 88 	store_32 s1, (s25)
   1e06c:	62 f3 21 00 	or s27, s2, 2172
   1e070:	1a 00 00 a8 	load_32 s0, (s26)
   1e074:	63 00 22 00 	or s3, s3, 2176
   1e078:	00 03 00 0f 	move s24, 0
   1e07c:	40 7c 00 0a 	shr s2, s0, 31
   1e080:	00 00 51 c0 	add_i s0, s0, s2
   1e084:	5b 00 00 a8 	load_32 s2, (s27)
   1e088:	00 04 00 09 	ashr s0, s0, 1
   1e08c:	02 00 50 c0 	add_i s0, s2, s0
   1e090:	1b 00 00 88 	store_32 s0, (s27)
   1e094:	7e 90 00 88 	store_32 s3, 36(sp)
   1e098:	40 0c 00 4f 	movehi s2, 96
   1e09c:	03 00 00 a8 	load_32 s0, (s3)
   1e0a0:	60 0c 00 4f 	movehi s3, 96
   1e0a4:	22 13 22 00 	or s25, s2, 2180
   1e0a8:	63 20 22 00 	or s3, s3, 2184
   1e0ac:	40 7c 00 0a 	shr s2, s0, 31
   1e0b0:	00 00 51 c0 	add_i s0, s0, s2
   1e0b4:	59 00 00 a8 	load_32 s2, (s25)
   1e0b8:	00 04 00 09 	ashr s0, s0, 1
   1e0bc:	02 00 50 c0 	add_i s0, s2, s0
   1e0c0:	19 00 00 88 	store_32 s0, (s25)
   1e0c4:	03 00 00 a0 	load_u8 s0, (s3)
   1e0c8:	00 00 00 11 	cmpne_i s0, s0, 0
   1e0cc:	80 05 00 f4 	bnz s0, 176 <AM_changeWindowScale+0x1a4>
   1e0d0:	00 00 fc c0 	move s0, s24
   1e0d4:	2b 00 00 f6 	b 172 <AM_changeWindowScale+0x1a8>
   1e0d8:	20 0c 00 4f 	movehi s1, 96
   1e0dc:	21 70 24 00 	or s1, s1, 2332
   1e0e0:	21 00 00 a8 	load_32 s1, (s1)
   1e0e4:	00 80 50 c1 	cmple_i s0, s0, s1
   1e0e8:	80 08 00 f4 	bnz s0, 272 <AM_changeWindowScale+0x220>
   1e0ec:	08 00 00 4f 	movehi s0, 8
   1e0f0:	38 00 00 88 	store_32 s1, (s24)
   1e0f4:	96 f7 ff f9 	call -8616 <FixedDiv>
   1e0f8:	20 0c 00 4f 	movehi s1, 96
   1e0fc:	60 0c 00 4f 	movehi s3, 96
   1e100:	00 03 00 0f 	move s24, 0
   1e104:	41 e0 21 00 	or s2, s1, 2168
   1e108:	20 00 f0 c0 	move s1, s0
   1e10c:	39 00 00 88 	store_32 s1, (s25)
   1e110:	5e 90 00 88 	store_32 s2, 36(sp)
   1e114:	23 03 22 00 	or s25, s3, 2176
   1e118:	02 00 00 a8 	load_32 s0, (s2)
   1e11c:	40 0c 00 4f 	movehi s2, 96
   1e120:	60 0c 00 4f 	movehi s3, 96
   1e124:	62 f3 21 00 	or s27, s2, 2172
   1e128:	40 7c 00 0a 	shr s2, s0, 31
   1e12c:	00 00 51 c0 	add_i s0, s0, s2
   1e130:	5b 00 00 a8 	load_32 s2, (s27)
   1e134:	63 20 22 00 	or s3, s3, 2184
   1e138:	00 04 00 09 	ashr s0, s0, 1
   1e13c:	02 00 50 c0 	add_i s0, s2, s0
   1e140:	1b 00 00 88 	store_32 s0, (s27)
   1e144:	40 0c 00 4f 	movehi s2, 96
   1e148:	19 00 00 a8 	load_32 s0, (s25)
   1e14c:	42 13 22 00 	or s26, s2, 2180
   1e150:	40 7c 00 0a 	shr s2, s0, 31
   1e154:	00 00 51 c0 	add_i s0, s0, s2
   1e158:	5a 00 00 a8 	load_32 s2, (s26)
   1e15c:	00 04 00 09 	ashr s0, s0, 1
   1e160:	02 00 50 c0 	add_i s0, s2, s0
   1e164:	1a 00 00 88 	store_32 s0, (s26)
   1e168:	03 00 00 a0 	load_u8 s0, (s3)
   1e16c:	00 00 00 11 	cmpne_i s0, s0, 0
   1e170:	20 08 00 f4 	bnz s0, 260 <AM_changeWindowScale+0x29c>
   1e174:	00 00 fc c0 	move s0, s24
   1e178:	43 00 00 f6 	b 268 <AM_changeWindowScale+0x2ac>
   1e17c:	00 40 01 4f 	movehi s0, 2560
   1e180:	6d f7 ff f9 	call -8780 <FixedMul>
   1e184:	20 0c 00 4f 	movehi s1, 96
   1e188:	1a 00 00 88 	store_32 s0, (s26)
   1e18c:	21 40 22 00 	or s1, s1, 2192
   1e190:	01 00 00 a0 	load_u8 s0, (s1)
   1e194:	00 00 00 11 	cmpne_i s0, s0, 0
   1e198:	40 00 00 f4 	bnz s0, 8 <AM_changeWindowScale+0x1c8>
   1e19c:	02 00 00 f6 	b 8 <AM_changeWindowScale+0x1cc>
   1e1a0:	00 ab 00 4f 	movehi s24, 1344
   1e1a4:	1e a0 00 a8 	load_32 s0, 40(sp)
   1e1a8:	20 00 00 a8 	load_32 s1, (s0)
   1e1ac:	00 00 fc c0 	move s0, s24
   1e1b0:	61 f7 ff f9 	call -8828 <FixedMul>
   1e1b4:	3e 90 00 a8 	load_32 s1, 36(sp)
   1e1b8:	a0 0c 00 4f 	movehi s5, 96
   1e1bc:	01 00 00 88 	store_32 s0, (s1)
   1e1c0:	3a 00 00 a8 	load_32 s1, (s26)
   1e1c4:	7b 00 00 a8 	load_32 s3, (s27)
   1e1c8:	41 7c 00 0a 	shr s2, s1, 31
   1e1cc:	41 00 51 c0 	add_i s2, s1, s2
   1e1d0:	42 04 00 09 	ashr s2, s2, 1
   1e1d4:	43 00 61 c0 	sub_i s2, s3, s2
   1e1d8:	5b 00 00 88 	store_32 s2, (s27)
   1e1dc:	60 7c 00 0a 	shr s3, s0, 31
   1e1e0:	99 00 00 a8 	load_32 s4, (s25)
   1e1e4:	60 80 51 c0 	add_i s3, s0, s3
   1e1e8:	63 04 00 09 	ashr s3, s3, 1
   1e1ec:	64 80 61 c0 	sub_i s3, s4, s3
   1e1f0:	79 00 00 88 	store_32 s3, (s25)
   1e1f4:	42 00 00 f6 	b 264 <AM_changeWindowScale+0x324>
   1e1f8:	00 0c 00 4f 	movehi s0, 96
   1e1fc:	20 0c 00 4f 	movehi s1, 96
   1e200:	60 0c 00 4f 	movehi s3, 96
   1e204:	00 e0 21 00 	or s0, s0, 2168
   1e208:	1e 90 00 88 	store_32 s0, 36(sp)
   1e20c:	61 f3 21 00 	or s27, s1, 2172
   1e210:	23 03 22 00 	or s25, s3, 2176
   1e214:	00 00 00 a8 	load_32 s0, (s0)
   1e218:	60 0c 00 4f 	movehi s3, 96
   1e21c:	00 03 00 0f 	move s24, 0
   1e220:	63 20 22 00 	or s3, s3, 2184
   1e224:	20 7c 00 0a 	shr s1, s0, 31
   1e228:	00 80 50 c0 	add_i s0, s0, s1
   1e22c:	3b 00 00 a8 	load_32 s1, (s27)
   1e230:	00 04 00 09 	ashr s0, s0, 1
   1e234:	01 00 50 c0 	add_i s0, s1, s0
   1e238:	1b 00 00 88 	store_32 s0, (s27)
   1e23c:	20 0c 00 4f 	movehi s1, 96
   1e240:	19 00 00 a8 	load_32 s0, (s25)
   1e244:	41 13 22 00 	or s26, s1, 2180
   1e248:	20 7c 00 0a 	shr s1, s0, 31
   1e24c:	00 80 50 c0 	add_i s0, s0, s1
   1e250:	3a 00 00 a8 	load_32 s1, (s26)
   1e254:	00 04 00 09 	ashr s0, s0, 1
   1e258:	01 00 50 c0 	add_i s0, s1, s0
   1e25c:	1a 00 00 88 	store_32 s0, (s26)
   1e260:	03 00 00 a0 	load_u8 s0, (s3)
   1e264:	00 00 00 11 	cmpne_i s0, s0, 0
   1e268:	a0 00 00 f4 	bnz s0, 20 <AM_changeWindowScale+0x2a4>
   1e26c:	00 00 fc c0 	move s0, s24
   1e270:	04 00 00 f6 	b 16 <AM_changeWindowScale+0x2a8>
   1e274:	00 40 01 4f 	movehi s0, 2560
   1e278:	03 00 00 f6 	b 12 <AM_changeWindowScale+0x2ac>
   1e27c:	00 40 01 4f 	movehi s0, 2560
   1e280:	20 00 f1 c0 	move s1, s2
   1e284:	2c f7 ff f9 	call -9040 <FixedMul>
   1e288:	20 0c 00 4f 	movehi s1, 96
   1e28c:	5e 90 00 a8 	load_32 s2, 36(sp)
   1e290:	21 40 22 00 	or s1, s1, 2192
   1e294:	02 00 00 88 	store_32 s0, (s2)
   1e298:	01 00 00 a0 	load_u8 s0, (s1)
   1e29c:	00 00 00 11 	cmpne_i s0, s0, 0
   1e2a0:	40 00 00 f4 	bnz s0, 8 <AM_changeWindowScale+0x2d0>
   1e2a4:	02 00 00 f6 	b 8 <AM_changeWindowScale+0x2d4>
   1e2a8:	00 ab 00 4f 	movehi s24, 1344
   1e2ac:	1e a0 00 a8 	load_32 s0, 40(sp)
   1e2b0:	20 00 00 a8 	load_32 s1, (s0)
   1e2b4:	00 00 fc c0 	move s0, s24
   1e2b8:	1f f7 ff f9 	call -9092 <FixedMul>
   1e2bc:	19 00 00 88 	store_32 s0, (s25)
   1e2c0:	a0 0c 00 4f 	movehi s5, 96
   1e2c4:	3e 90 00 a8 	load_32 s1, 36(sp)
   1e2c8:	21 00 00 a8 	load_32 s1, (s1)
   1e2cc:	7b 00 00 a8 	load_32 s3, (s27)
   1e2d0:	41 7c 00 0a 	shr s2, s1, 31
   1e2d4:	41 00 51 c0 	add_i s2, s1, s2
   1e2d8:	42 04 00 09 	ashr s2, s2, 1
   1e2dc:	43 00 61 c0 	sub_i s2, s3, s2
   1e2e0:	5b 00 00 88 	store_32 s2, (s27)
   1e2e4:	60 7c 00 0a 	shr s3, s0, 31
   1e2e8:	9a 00 00 a8 	load_32 s4, (s26)
   1e2ec:	60 80 51 c0 	add_i s3, s0, s3
   1e2f0:	63 04 00 09 	ashr s3, s3, 1
   1e2f4:	64 80 61 c0 	sub_i s3, s4, s3
   1e2f8:	7a 00 00 88 	store_32 s3, (s26)
   1e2fc:	85 50 22 00 	or s4, s5, 2196
   1e300:	22 80 50 c0 	add_i s1, s2, s1
   1e304:	24 00 00 88 	store_32 s1, (s4)
   1e308:	20 0c 00 4f 	movehi s1, 96
   1e30c:	03 00 50 c0 	add_i s0, s3, s0
   1e310:	21 60 22 00 	or s1, s1, 2200
   1e314:	01 00 00 88 	store_32 s0, (s1)
   1e318:	fe b3 00 a8 	load_32 ra, 44(sp)
   1e31c:	7e c3 00 a8 	load_32 s27, 48(sp)
   1e320:	5e d3 00 a8 	load_32 s26, 52(sp)
   1e324:	3e e3 00 a8 	load_32 s25, 56(sp)
   1e328:	1e f3 00 a8 	load_32 s24, 60(sp)
   1e32c:	de 03 01 05 	add_i sp, sp, 64
   1e330:	1f 00 00 f0 	ret

000000000001e334 AM_doFollowPlayer:
   1e334:	de 03 ff 05 	add_i sp, sp, -64
   1e338:	1e f3 00 88 	store_32 s24, 60(sp)
   1e33c:	3e e3 00 88 	store_32 s25, 56(sp)
   1e340:	5e d3 00 88 	store_32 s26, 52(sp)
   1e344:	7e c3 00 88 	store_32 s27, 48(sp)
   1e348:	fe b3 00 88 	store_32 ra, 44(sp)
   1e34c:	00 0c 00 4f 	movehi s0, 96
   1e350:	20 0c 00 4f 	movehi s1, 96
   1e354:	60 d0 26 00 	or s3, s0, 2484
   1e358:	41 b3 22 00 	or s26, s1, 2220
   1e35c:	43 00 00 a8 	load_32 s2, (s3)
   1e360:	1a 00 00 a8 	load_32 s0, (s26)
   1e364:	20 00 00 a8 	load_32 s1, (s0)
   1e368:	01 30 00 a8 	load_32 s0, 12(s1)
   1e36c:	42 00 10 c1 	cmpne_i s2, s2, s0
   1e370:	e2 00 00 f4 	bnz s2, 28 <AM_doFollowPlayer+0x58>
   1e374:	40 0c 00 4f 	movehi s2, 96
   1e378:	42 e0 26 00 	or s2, s2, 2488
   1e37c:	42 00 00 a8 	load_32 s2, (s2)
   1e380:	21 40 00 a8 	load_32 s1, 16(s1)
   1e384:	22 80 00 c1 	cmpeq_i s1, s2, s1
   1e388:	e1 07 00 f4 	bnz s1, 252 <AM_doFollowPlayer+0x150>
   1e38c:	33 04 00 4f 	movehi s1, 51
   1e390:	21 e0 78 00 	or s1, s1, 7736
   1e394:	3e 80 00 88 	store_32 s1, 32(sp)
   1e398:	21 00 00 a8 	load_32 s1, (s1)
   1e39c:	7e a0 00 88 	store_32 s3, 40(sp)
   1e3a0:	e5 f6 ff f9 	call -9324 <FixedMul>
   1e3a4:	20 0c 00 4f 	movehi s1, 96
   1e3a8:	18 ff ff 4f 	movehi s24, 524280
   1e3ac:	00 00 1c c0 	and s0, s0, s24
   1e3b0:	61 33 22 00 	or s27, s1, 2188
   1e3b4:	3b 00 00 a8 	load_32 s1, (s27)
   1e3b8:	df f6 ff f9 	call -9348 <FixedMul>
   1e3bc:	20 0c 00 4f 	movehi s1, 96
   1e3c0:	60 0c 00 4f 	movehi s3, 96
   1e3c4:	21 e0 21 00 	or s1, s1, 2168
   1e3c8:	3e 90 00 88 	store_32 s1, 36(sp)
   1e3cc:	23 f3 21 00 	or s25, s3, 2172
   1e3d0:	21 00 00 a8 	load_32 s1, (s1)
   1e3d4:	41 7c 00 0a 	shr s2, s1, 31
   1e3d8:	21 00 51 c0 	add_i s1, s1, s2
   1e3dc:	21 04 00 09 	ashr s1, s1, 1
   1e3e0:	00 80 60 c0 	sub_i s0, s0, s1
   1e3e4:	19 00 00 88 	store_32 s0, (s25)
   1e3e8:	1a 00 00 a8 	load_32 s0, (s26)
   1e3ec:	00 00 00 a8 	load_32 s0, (s0)
   1e3f0:	00 40 00 a8 	load_32 s0, 16(s0)
   1e3f4:	3e 80 00 a8 	load_32 s1, 32(sp)
   1e3f8:	21 00 00 a8 	load_32 s1, (s1)
   1e3fc:	ce f6 ff f9 	call -9416 <FixedMul>
   1e400:	3b 00 00 a8 	load_32 s1, (s27)
   1e404:	00 00 1c c0 	and s0, s0, s24
   1e408:	cb f6 ff f9 	call -9428 <FixedMul>
   1e40c:	20 0c 00 4f 	movehi s1, 96
   1e410:	60 0c 00 4f 	movehi s3, 96
   1e414:	80 0c 00 4f 	movehi s4, 96
   1e418:	21 00 22 00 	or s1, s1, 2176
   1e41c:	63 10 22 00 	or s3, s3, 2180
   1e420:	a0 0c 00 4f 	movehi s5, 96
   1e424:	21 00 00 a8 	load_32 s1, (s1)
   1e428:	84 50 22 00 	or s4, s4, 2196
   1e42c:	41 7c 00 0a 	shr s2, s1, 31
   1e430:	41 00 51 c0 	add_i s2, s1, s2
   1e434:	42 04 00 09 	ashr s2, s2, 1
   1e438:	00 00 61 c0 	sub_i s0, s0, s2
   1e43c:	03 00 00 88 	store_32 s0, (s3)
   1e440:	59 00 00 a8 	load_32 s2, (s25)
   1e444:	7e 90 00 a8 	load_32 s3, 36(sp)
   1e448:	00 80 50 c0 	add_i s0, s0, s1
   1e44c:	20 0c 00 4f 	movehi s1, 96
   1e450:	63 00 00 a8 	load_32 s3, (s3)
   1e454:	21 e0 26 00 	or s1, s1, 2488
   1e458:	43 00 51 c0 	add_i s2, s3, s2
   1e45c:	44 00 00 88 	store_32 s2, (s4)
   1e460:	65 60 22 00 	or s3, s5, 2200
   1e464:	03 00 00 88 	store_32 s0, (s3)
   1e468:	1a 00 00 a8 	load_32 s0, (s26)
   1e46c:	00 00 00 a8 	load_32 s0, (s0)
   1e470:	40 30 00 a8 	load_32 s2, 12(s0)
   1e474:	7e a0 00 a8 	load_32 s3, 40(sp)
   1e478:	43 00 00 88 	store_32 s2, (s3)
   1e47c:	00 40 00 a8 	load_32 s0, 16(s0)
   1e480:	01 00 00 88 	store_32 s0, (s1)
   1e484:	fe b3 00 a8 	load_32 ra, 44(sp)
   1e488:	7e c3 00 a8 	load_32 s27, 48(sp)
   1e48c:	5e d3 00 a8 	load_32 s26, 52(sp)
   1e490:	3e e3 00 a8 	load_32 s25, 56(sp)
   1e494:	1e f3 00 a8 	load_32 s24, 60(sp)
   1e498:	de 03 01 05 	add_i sp, sp, 64
   1e49c:	1f 00 00 f0 	ret

000000000001e4a0 AM_updateLightLev:
   1e4a0:	00 0c 00 4f 	movehi s0, 96
   1e4a4:	20 0c 00 4f 	movehi s1, 96
   1e4a8:	40 90 24 00 	or s2, s0, 2340
   1e4ac:	01 00 26 00 	or s0, s1, 2432
   1e4b0:	22 00 00 a8 	load_32 s1, (s2)
   1e4b4:	40 00 00 a8 	load_32 s2, (s0)
   1e4b8:	41 00 51 c1 	cmple_i s2, s1, s2
   1e4bc:	42 03 00 f4 	bnz s2, 104 <AM_updateLightLev+0x84>
   1e4c0:	40 0c 00 4f 	movehi s2, 96
   1e4c4:	83 00 00 4f 	movehi s4, 3
   1e4c8:	c0 0c 00 4f 	movehi s6, 96
   1e4cc:	42 10 26 00 	or s2, s2, 2436
   1e4d0:	84 d0 39 00 	or s4, s4, 3700
   1e4d4:	62 00 00 a8 	load_32 s3, (s2)
   1e4d8:	a3 04 00 05 	add_i s5, s3, 1
   1e4dc:	a2 00 00 88 	store_32 s5, (s2)
   1e4e0:	63 08 00 0b 	shl s3, s3, 2
   1e4e4:	64 80 51 c0 	add_i s3, s4, s3
   1e4e8:	a5 20 00 11 	cmpne_i s5, s5, 8
   1e4ec:	86 a0 24 00 	or s4, s6, 2344
   1e4f0:	63 00 00 a8 	load_32 s3, (s3)
   1e4f4:	64 00 00 88 	store_32 s3, (s4)
   1e4f8:	65 00 00 f4 	bnz s5, 12 <AM_updateLightLev+0x64>
   1e4fc:	60 00 00 0f 	move s3, 0
   1e500:	62 00 00 88 	store_32 s3, (s2)
   1e504:	55 a8 2a 4f 	movehi s2, 87381
   1e508:	42 ac 2a 00 	or s2, s2, 2731
   1e50c:	21 00 f1 c1 	mulh_i s1, s1, s2
   1e510:	41 7c 00 0a 	shr s2, s1, 31
   1e514:	21 00 51 c0 	add_i s1, s1, s2
   1e518:	21 18 00 07 	mull_i s1, s1, 6
   1e51c:	21 18 00 05 	add_i s1, s1, 6
   1e520:	20 00 00 88 	store_32 s1, (s0)
   1e524:	1f 00 00 f0 	ret

000000000001e528 AM_Ticker:
   1e528:	de 03 ff 05 	add_i sp, sp, -64
   1e52c:	1e f3 00 88 	store_32 s24, 60(sp)
   1e530:	fe e3 00 88 	store_32 ra, 56(sp)
   1e534:	00 0c 00 4f 	movehi s0, 96
   1e538:	00 d0 21 00 	or s0, s0, 2164
   1e53c:	00 00 00 a8 	load_32 s0, (s0)
   1e540:	40 0b 00 f2 	bz s0, 360 <AM_Ticker+0x180>
   1e544:	00 0c 00 4f 	movehi s0, 96
   1e548:	53 04 00 4f 	movehi s2, 51
   1e54c:	00 90 24 00 	or s0, s0, 2340
   1e550:	02 d3 78 00 	or s24, s2, 7732
   1e554:	20 00 00 a8 	load_32 s1, (s0)
   1e558:	21 04 00 05 	add_i s1, s1, 1
   1e55c:	20 00 00 88 	store_32 s1, (s0)
   1e560:	18 00 00 a8 	load_32 s0, (s24)
   1e564:	40 00 00 f2 	bz s0, 8 <AM_Ticker+0x44>
   1e568:	73 ff ff f9 	call -564 <AM_doFollowPlayer>
   1e56c:	00 0c 00 4f 	movehi s0, 96
   1e570:	28 00 00 4f 	movehi s1, 8
   1e574:	00 b0 24 00 	or s0, s0, 2348
   1e578:	00 00 00 a8 	load_32 s0, (s0)
   1e57c:	00 80 00 c1 	cmpeq_i s0, s0, s1
   1e580:	40 00 00 f4 	bnz s0, 8 <AM_Ticker+0x60>
   1e584:	95 fe ff f9 	call -1452 <AM_changeWindowScale>
   1e588:	00 0c 00 4f 	movehi s0, 96
   1e58c:	20 0c 00 4f 	movehi s1, 96
   1e590:	00 b0 26 00 	or s0, s0, 2476
   1e594:	21 c0 26 00 	or s1, s1, 2480
   1e598:	00 00 00 a8 	load_32 s0, (s0)
   1e59c:	21 00 00 a8 	load_32 s1, (s1)
   1e5a0:	41 00 00 c0 	or s2, s1, s0
   1e5a4:	22 08 00 f2 	bz s2, 260 <AM_Ticker+0x180>
   1e5a8:	40 00 00 0f 	move s2, 0
   1e5ac:	58 00 00 88 	store_32 s2, (s24)
   1e5b0:	40 0c 00 4f 	movehi s2, 96
   1e5b4:	60 0c 00 4f 	movehi s3, 96
   1e5b8:	bf fc 7f 4f 	movehi s5, 262143
   1e5bc:	42 d0 26 00 	or s2, s2, 2484
   1e5c0:	83 f0 21 00 	or s4, s3, 2172
   1e5c4:	65 fc 7f 00 	or s3, s5, 8191
   1e5c8:	62 00 00 88 	store_32 s3, (s2)
   1e5cc:	60 0c 00 4f 	movehi s3, 96
   1e5d0:	44 00 00 a8 	load_32 s2, (s4)
   1e5d4:	a0 0c 00 4f 	movehi s5, 96
   1e5d8:	c0 0c 00 4f 	movehi s6, 96
   1e5dc:	63 10 22 00 	or s3, s3, 2180
   1e5e0:	a5 e0 21 00 	or s5, s5, 2168
   1e5e4:	02 00 50 c0 	add_i s0, s2, s0
   1e5e8:	04 00 00 88 	store_32 s0, (s4)
   1e5ec:	43 00 00 a8 	load_32 s2, (s3)
   1e5f0:	c6 40 24 00 	or s6, s6, 2320
   1e5f4:	42 80 50 c0 	add_i s2, s2, s1
   1e5f8:	43 00 00 88 	store_32 s2, (s3)
   1e5fc:	25 00 00 a8 	load_32 s1, (s5)
   1e600:	e6 00 00 a8 	load_32 s7, (s6)
   1e604:	a1 7c 00 0a 	shr s5, s1, 31
   1e608:	a1 80 52 c0 	add_i s5, s1, s5
   1e60c:	a5 04 00 09 	ashr s5, s5, 1
   1e610:	c5 00 50 c0 	add_i s6, s5, s0
   1e614:	06 81 53 c1 	cmple_i s8, s6, s7
   1e618:	48 00 00 f4 	bnz s8, 8 <AM_Ticker+0xf8>
   1e61c:	06 00 00 f6 	b 24 <AM_Ticker+0x10c>
   1e620:	e0 0c 00 4f 	movehi s7, 96
   1e624:	e7 20 24 00 	or s7, s7, 2312
   1e628:	e7 00 00 a8 	load_32 s7, (s7)
   1e62c:	c6 80 33 c1 	cmpge_i s6, s6, s7
   1e630:	66 00 00 f4 	bnz s6, 12 <AM_Ticker+0x114>
   1e634:	07 80 62 c0 	sub_i s0, s7, s5
   1e638:	04 00 00 88 	store_32 s0, (s4)
   1e63c:	80 0c 00 4f 	movehi s4, 96
   1e640:	c0 0c 00 4f 	movehi s6, 96
   1e644:	84 00 22 00 	or s4, s4, 2176
   1e648:	c6 30 24 00 	or s6, s6, 2316
   1e64c:	84 00 00 a8 	load_32 s4, (s4)
   1e650:	c6 00 00 a8 	load_32 s6, (s6)
   1e654:	a4 7c 00 0a 	shr s5, s4, 31
   1e658:	a4 80 52 c0 	add_i s5, s4, s5
   1e65c:	a5 04 00 09 	ashr s5, s5, 1
   1e660:	e5 00 51 c0 	add_i s7, s5, s2
   1e664:	07 01 23 c1 	cmpgt_i s8, s7, s6
   1e668:	c8 00 00 f4 	bnz s8, 24 <AM_Ticker+0x158>
   1e66c:	c0 0c 00 4f 	movehi s6, 96
   1e670:	c6 10 24 00 	or s6, s6, 2308
   1e674:	c6 00 00 a8 	load_32 s6, (s6)
   1e678:	e7 00 33 c1 	cmpge_i s7, s7, s6
   1e67c:	67 00 00 f4 	bnz s7, 12 <AM_Ticker+0x160>
   1e680:	46 80 62 c0 	sub_i s2, s6, s5
   1e684:	43 00 00 88 	store_32 s2, (s3)
   1e688:	60 0c 00 4f 	movehi s3, 96
   1e68c:	a0 0c 00 4f 	movehi s5, 96
   1e690:	00 80 50 c0 	add_i s0, s0, s1
   1e694:	63 50 22 00 	or s3, s3, 2196
   1e698:	25 60 22 00 	or s1, s5, 2200
   1e69c:	03 00 00 88 	store_32 s0, (s3)
   1e6a0:	02 00 52 c0 	add_i s0, s2, s4
   1e6a4:	01 00 00 88 	store_32 s0, (s1)
   1e6a8:	fe e3 00 a8 	load_32 ra, 56(sp)
   1e6ac:	1e f3 00 a8 	load_32 s24, 60(sp)
   1e6b0:	de 03 01 05 	add_i sp, sp, 64
   1e6b4:	1f 00 00 f0 	ret

000000000001e6b8 AM_clearFB:
   1e6b8:	de 03 ff 05 	add_i sp, sp, -64
   1e6bc:	fe f3 00 88 	store_32 ra, 60(sp)
   1e6c0:	20 0c 00 4f 	movehi s1, 96
   1e6c4:	40 0c 00 4f 	movehi s2, 96
   1e6c8:	21 80 24 00 	or s1, s1, 2336
   1e6cc:	42 20 22 00 	or s2, s2, 2184
   1e6d0:	61 00 00 a8 	load_32 s3, (s1)
   1e6d4:	42 00 00 a0 	load_u8 s2, (s2)
   1e6d8:	20 00 f0 c0 	move s1, s0
   1e6dc:	00 00 00 0f 	move s0, 0
   1e6e0:	42 00 00 11 	cmpne_i s2, s2, 0
   1e6e4:	62 00 00 f4 	bnz s2, 12 <AM_clearFB+0x38>
   1e6e8:	40 00 f0 c0 	move s2, s0
   1e6ec:	02 00 00 f6 	b 8 <AM_clearFB+0x3c>
   1e6f0:	40 00 05 0f 	move s2, 320
   1e6f4:	80 0c 00 4f 	movehi s4, 96
   1e6f8:	84 40 22 00 	or s4, s4, 2192
   1e6fc:	84 00 00 a0 	load_u8 s4, (s4)
   1e700:	84 00 00 11 	cmpne_i s4, s4, 0
   1e704:	44 00 00 f4 	bnz s4, 8 <AM_clearFB+0x54>
   1e708:	02 00 00 f6 	b 8 <AM_clearFB+0x58>
   1e70c:	00 a0 02 0f 	move s0, 168
   1e710:	40 00 71 c0 	mull_i s2, s0, s2
   1e714:	00 80 f1 c0 	move s0, s3
   1e718:	e3 cc 00 f8 	call 209804 <memset>
   1e71c:	fe f3 00 a8 	load_32 ra, 60(sp)
   1e720:	de 03 01 05 	add_i sp, sp, 64
   1e724:	1f 00 00 f0 	ret

000000000001e728 AM_clipMline:
   1e728:	de 03 ff 05 	add_i sp, sp, -64
   1e72c:	1e f3 00 88 	store_32 s24, 60(sp)
   1e730:	3e e3 00 88 	store_32 s25, 56(sp)
   1e734:	5e d3 00 88 	store_32 s26, 52(sp)
   1e738:	7e c3 00 88 	store_32 s27, 48(sp)
   1e73c:	fe b3 00 88 	store_32 ra, 44(sp)
   1e740:	40 0c 00 4f 	movehi s2, 96
   1e744:	20 03 f0 c0 	move s25, s0
   1e748:	42 60 22 00 	or s2, s2, 2200
   1e74c:	79 10 00 a8 	load_32 s3, 4(s25)
   1e750:	02 00 00 a8 	load_32 s0, (s2)
   1e754:	40 20 00 0f 	move s2, 8
   1e758:	00 83 f0 c0 	move s24, s1
   1e75c:	20 00 f1 c0 	move s1, s2
   1e760:	83 00 20 c1 	cmpgt_i s4, s3, s0
   1e764:	44 00 00 f4 	bnz s4, 8 <AM_clipMline+0x44>
   1e768:	09 00 00 f6 	b 36 <AM_clipMline+0x64>
   1e76c:	79 30 00 a8 	load_32 s3, 12(s25)
   1e770:	03 00 20 c1 	cmpgt_i s0, s3, s0
   1e774:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x54>
   1e778:	13 00 00 f6 	b 76 <AM_clipMline+0x9c>
   1e77c:	62 80 10 c0 	and s3, s2, s1
   1e780:	00 00 00 0f 	move s0, 0
   1e784:	e3 2e 00 f4 	bnz s3, 1500 <AM_clipMline+0x638>
   1e788:	1d 00 00 f6 	b 116 <AM_clipMline+0xd4>
   1e78c:	20 0c 00 4f 	movehi s1, 96
   1e790:	21 10 22 00 	or s1, s1, 2180
   1e794:	21 00 00 a8 	load_32 s1, (s1)
   1e798:	23 80 40 c1 	cmplt_i s1, s3, s1
   1e79c:	c1 00 00 f4 	bnz s1, 24 <AM_clipMline+0x8c>
   1e7a0:	20 00 00 0f 	move s1, 0
   1e7a4:	79 30 00 a8 	load_32 s3, 12(s25)
   1e7a8:	03 00 20 c1 	cmpgt_i s0, s3, s0
   1e7ac:	80 fe ff f5 	bnz s0, -48 <AM_clipMline+0x54>
   1e7b0:	05 00 00 f6 	b 20 <AM_clipMline+0x9c>
   1e7b4:	20 10 00 0f 	move s1, 4
   1e7b8:	79 30 00 a8 	load_32 s3, 12(s25)
   1e7bc:	03 00 20 c1 	cmpgt_i s0, s3, s0
   1e7c0:	e0 fd ff f5 	bnz s0, -68 <AM_clipMline+0x54>
   1e7c4:	00 0c 00 4f 	movehi s0, 96
   1e7c8:	00 10 22 00 	or s0, s0, 2180
   1e7cc:	00 00 00 a8 	load_32 s0, (s0)
   1e7d0:	03 00 40 c1 	cmplt_i s0, s3, s0
   1e7d4:	c0 00 00 f4 	bnz s0, 24 <AM_clipMline+0xc4>
   1e7d8:	40 00 00 0f 	move s2, 0
   1e7dc:	62 80 10 c0 	and s3, s2, s1
   1e7e0:	00 00 00 0f 	move s0, 0
   1e7e4:	e3 2b 00 f4 	bnz s3, 1404 <AM_clipMline+0x638>
   1e7e8:	05 00 00 f6 	b 20 <AM_clipMline+0xd4>
   1e7ec:	40 10 00 0f 	move s2, 4
   1e7f0:	62 80 10 c0 	and s3, s2, s1
   1e7f4:	00 00 00 0f 	move s0, 0
   1e7f8:	43 2b 00 f4 	bnz s3, 1384 <AM_clipMline+0x638>
   1e7fc:	60 0c 00 4f 	movehi s3, 96
   1e800:	43 f3 21 00 	or s26, s3, 2172
   1e804:	79 00 00 a8 	load_32 s3, (s25)
   1e808:	9a 00 00 a8 	load_32 s4, (s26)
   1e80c:	a3 00 32 c1 	cmpge_i s5, s3, s4
   1e810:	c5 00 00 f4 	bnz s5, 24 <AM_clipMline+0x100>
   1e814:	21 04 00 00 	or s1, s1, 1
   1e818:	b9 20 00 a8 	load_32 s5, 8(s25)
   1e81c:	c5 00 32 c1 	cmpge_i s6, s5, s4
   1e820:	06 02 00 f4 	bnz s6, 64 <AM_clipMline+0x138>
   1e824:	0b 00 00 f6 	b 44 <AM_clipMline+0x128>
   1e828:	a0 0c 00 4f 	movehi s5, 96
   1e82c:	a5 50 22 00 	or s5, s5, 2196
   1e830:	a5 00 00 a8 	load_32 s5, (s5)
   1e834:	a3 80 22 c1 	cmpgt_i s5, s3, s5
   1e838:	45 00 00 f4 	bnz s5, 8 <AM_clipMline+0x118>
   1e83c:	02 00 00 f6 	b 8 <AM_clipMline+0x11c>
   1e840:	21 08 00 00 	or s1, s1, 2
   1e844:	b9 20 00 a8 	load_32 s5, 8(s25)
   1e848:	c5 00 32 c1 	cmpge_i s6, s5, s4
   1e84c:	a6 00 00 f4 	bnz s6, 20 <AM_clipMline+0x138>
   1e850:	42 04 00 00 	or s2, s2, 1
   1e854:	22 80 10 c0 	and s1, s2, s1
   1e858:	41 28 00 f4 	bnz s1, 1288 <AM_clipMline+0x638>
   1e85c:	0a 00 00 f6 	b 40 <AM_clipMline+0x15c>
   1e860:	c0 0c 00 4f 	movehi s6, 96
   1e864:	c6 50 22 00 	or s6, s6, 2196
   1e868:	c6 00 00 a8 	load_32 s6, (s6)
   1e86c:	a5 00 23 c1 	cmpgt_i s5, s5, s6
   1e870:	45 00 00 f4 	bnz s5, 8 <AM_clipMline+0x150>
   1e874:	02 00 00 f6 	b 8 <AM_clipMline+0x154>
   1e878:	42 08 00 00 	or s2, s2, 2
   1e87c:	22 80 10 c0 	and s1, s2, s1
   1e880:	01 27 00 f4 	bnz s1, 1248 <AM_clipMline+0x638>
   1e884:	13 04 00 4f 	movehi s0, 51
   1e888:	60 e3 78 00 	or s27, s0, 7736
   1e88c:	03 00 62 c0 	sub_i s0, s3, s4
   1e890:	3b 00 00 a8 	load_32 s1, (s27)
   1e894:	a8 f5 ff f9 	call -10592 <FixedMul>
   1e898:	20 0c 00 4f 	movehi s1, 96
   1e89c:	1e a3 00 88 	store_32 s24, 40(sp)
   1e8a0:	00 40 00 09 	ashr s0, s0, 16
   1e8a4:	18 00 00 88 	store_32 s0, (s24)
   1e8a8:	00 a3 02 0f 	move s24, 168
   1e8ac:	21 40 22 00 	or s1, s1, 2192
   1e8b0:	3e 80 00 88 	store_32 s1, 32(sp)
   1e8b4:	01 00 00 a0 	load_u8 s0, (s1)
   1e8b8:	20 00 00 0f 	move s1, 0
   1e8bc:	1e 93 00 88 	store_32 s24, 36(sp)
   1e8c0:	00 00 00 11 	cmpne_i s0, s0, 0
   1e8c4:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x1a4>
   1e8c8:	00 83 f0 c0 	move s24, s1
   1e8cc:	00 0c 00 4f 	movehi s0, 96
   1e8d0:	3e 60 00 88 	store_32 s1, 24(sp)
   1e8d4:	20 10 22 00 	or s1, s0, 2180
   1e8d8:	19 10 00 a8 	load_32 s0, 4(s25)
   1e8dc:	3e 70 00 88 	store_32 s1, 28(sp)
   1e8e0:	21 00 00 a8 	load_32 s1, (s1)
   1e8e4:	00 80 60 c0 	sub_i s0, s0, s1
   1e8e8:	3b 00 00 a8 	load_32 s1, (s27)
   1e8ec:	92 f5 ff f9 	call -10680 <FixedMul>
   1e8f0:	00 40 00 09 	ashr s0, s0, 16
   1e8f4:	18 00 60 c0 	sub_i s0, s24, s0
   1e8f8:	1e a3 00 a8 	load_32 s24, 40(sp)
   1e8fc:	18 10 00 88 	store_32 s0, 4(s24)
   1e900:	19 20 00 a8 	load_32 s0, 8(s25)
   1e904:	3a 00 00 a8 	load_32 s1, (s26)
   1e908:	00 80 60 c0 	sub_i s0, s0, s1
   1e90c:	3b 00 00 a8 	load_32 s1, (s27)
   1e910:	89 f5 ff f9 	call -10716 <FixedMul>
   1e914:	00 40 00 09 	ashr s0, s0, 16
   1e918:	18 20 00 88 	store_32 s0, 8(s24)
   1e91c:	5e 83 00 a8 	load_32 s26, 32(sp)
   1e920:	1a 00 00 a0 	load_u8 s0, (s26)
   1e924:	1e 93 00 a8 	load_32 s24, 36(sp)
   1e928:	00 00 00 11 	cmpne_i s0, s0, 0
   1e92c:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x20c>
   1e930:	1e 63 00 a8 	load_32 s24, 24(sp)
   1e934:	19 30 00 a8 	load_32 s0, 12(s25)
   1e938:	3e 70 00 a8 	load_32 s1, 28(sp)
   1e93c:	21 00 00 a8 	load_32 s1, (s1)
   1e940:	00 80 60 c0 	sub_i s0, s0, s1
   1e944:	3b 00 00 a8 	load_32 s1, (s27)
   1e948:	7b f5 ff f9 	call -10772 <FixedMul>
   1e94c:	00 40 00 09 	ashr s0, s0, 16
   1e950:	98 00 60 c0 	sub_i s4, s24, s0
   1e954:	1e a0 00 a8 	load_32 s0, 40(sp)
   1e958:	80 30 00 88 	store_32 s4, 12(s0)
   1e95c:	00 10 00 a8 	load_32 s0, 4(s0)
   1e960:	1e 90 00 88 	store_32 s0, 36(sp)
   1e964:	00 00 00 14 	cmplt_i s0, s0, 0
   1e968:	40 01 00 f4 	bnz s0, 40 <AM_clipMline+0x268>
   1e96c:	1a 00 00 a0 	load_u8 s0, (s26)
   1e970:	20 03 00 0f 	move s25, 0
   1e974:	00 00 00 11 	cmpne_i s0, s0, 0
   1e978:	80 01 00 f4 	bnz s0, 48 <AM_clipMline+0x280>
   1e97c:	00 80 fc c0 	move s0, s25
   1e980:	3e 90 00 a8 	load_32 s1, 36(sp)
   1e984:	01 00 40 c1 	cmplt_i s0, s1, s0
   1e988:	a0 01 00 f4 	bnz s0, 52 <AM_clipMline+0x294>
   1e98c:	0b 00 00 f6 	b 44 <AM_clipMline+0x290>
   1e990:	20 23 00 0f 	move s25, 8
   1e994:	1e a0 00 a8 	load_32 s0, 40(sp)
   1e998:	00 03 00 a8 	load_32 s24, (s0)
   1e99c:	18 fc ff 12 	cmpgt_i s0, s24, -1
   1e9a0:	80 01 00 f4 	bnz s0, 48 <AM_clipMline+0x2a8>
   1e9a4:	14 00 00 f6 	b 80 <AM_clipMline+0x2cc>
   1e9a8:	00 a0 02 0f 	move s0, 168
   1e9ac:	3e 90 00 a8 	load_32 s1, 36(sp)
   1e9b0:	01 00 40 c1 	cmplt_i s0, s1, s0
   1e9b4:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x294>
   1e9b8:	20 13 00 0f 	move s25, 4
   1e9bc:	1e a0 00 a8 	load_32 s0, 40(sp)
   1e9c0:	00 03 00 a8 	load_32 s24, (s0)
   1e9c4:	18 fc ff 12 	cmpgt_i s0, s24, -1
   1e9c8:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x2a8>
   1e9cc:	0a 00 00 f6 	b 40 <AM_clipMline+0x2cc>
   1e9d0:	00 0c 00 4f 	movehi s0, 96
   1e9d4:	00 20 22 00 	or s0, s0, 2184
   1e9d8:	00 00 00 a0 	load_u8 s0, (s0)
   1e9dc:	00 00 00 11 	cmpne_i s0, s0, 0
   1e9e0:	20 01 00 f4 	bnz s0, 36 <AM_clipMline+0x2dc>
   1e9e4:	00 00 00 0f 	move s0, 0
   1e9e8:	18 00 40 c1 	cmplt_i s0, s24, s0
   1e9ec:	40 01 00 f4 	bnz s0, 40 <AM_clipMline+0x2ec>
   1e9f0:	08 00 00 f6 	b 32 <AM_clipMline+0x2e8>
   1e9f4:	39 07 00 00 	or s25, s25, 1
   1e9f8:	04 00 00 14 	cmplt_i s0, s4, 0
   1e9fc:	00 02 00 f4 	bnz s0, 64 <AM_clipMline+0x314>
   1ea00:	07 00 00 f6 	b 28 <AM_clipMline+0x2f4>
   1ea04:	00 00 05 0f 	move s0, 320
   1ea08:	18 00 40 c1 	cmplt_i s0, s24, s0
   1ea0c:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x2ec>
   1ea10:	39 0b 00 00 	or s25, s25, 2
   1ea14:	04 00 00 14 	cmplt_i s0, s4, 0
   1ea18:	20 01 00 f4 	bnz s0, 36 <AM_clipMline+0x314>
   1ea1c:	1a 00 00 a0 	load_u8 s0, (s26)
   1ea20:	40 03 00 0f 	move s26, 0
   1ea24:	00 00 00 11 	cmpne_i s0, s0, 0
   1ea28:	60 01 00 f4 	bnz s0, 44 <AM_clipMline+0x32c>
   1ea2c:	00 00 fd c0 	move s0, s26
   1ea30:	04 00 40 c1 	cmplt_i s0, s4, s0
   1ea34:	80 01 00 f4 	bnz s0, 48 <AM_clipMline+0x33c>
   1ea38:	0a 00 00 f6 	b 40 <AM_clipMline+0x338>
   1ea3c:	40 23 00 0f 	move s26, 8
   1ea40:	1e a0 00 a8 	load_32 s0, 40(sp)
   1ea44:	a0 20 00 a8 	load_32 s5, 8(s0)
   1ea48:	05 fc ff 12 	cmpgt_i s0, s5, -1
   1ea4c:	60 01 00 f4 	bnz s0, 44 <AM_clipMline+0x350>
   1ea50:	13 00 00 f6 	b 76 <AM_clipMline+0x374>
   1ea54:	00 a0 02 0f 	move s0, 168
   1ea58:	04 00 40 c1 	cmplt_i s0, s4, s0
   1ea5c:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x33c>
   1ea60:	40 13 00 0f 	move s26, 4
   1ea64:	1e a0 00 a8 	load_32 s0, 40(sp)
   1ea68:	a0 20 00 a8 	load_32 s5, 8(s0)
   1ea6c:	05 fc ff 12 	cmpgt_i s0, s5, -1
   1ea70:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x350>
   1ea74:	0a 00 00 f6 	b 40 <AM_clipMline+0x374>
   1ea78:	00 0c 00 4f 	movehi s0, 96
   1ea7c:	00 20 22 00 	or s0, s0, 2184
   1ea80:	00 00 00 a0 	load_u8 s0, (s0)
   1ea84:	00 00 00 11 	cmpne_i s0, s0, 0
   1ea88:	20 01 00 f4 	bnz s0, 36 <AM_clipMline+0x384>
   1ea8c:	00 00 00 0f 	move s0, 0
   1ea90:	05 00 40 c1 	cmplt_i s0, s5, s0
   1ea94:	40 01 00 f4 	bnz s0, 40 <AM_clipMline+0x394>
   1ea98:	08 00 00 f6 	b 32 <AM_clipMline+0x390>
   1ea9c:	5a 07 00 00 	or s26, s26, 1
   1eaa0:	1a 80 1c c0 	and s0, s26, s25
   1eaa4:	20 01 00 f4 	bnz s0, 36 <AM_clipMline+0x3a0>
   1eaa8:	0a 00 00 f6 	b 40 <AM_clipMline+0x3a8>
   1eaac:	00 00 05 0f 	move s0, 320
   1eab0:	05 00 40 c1 	cmplt_i s0, s5, s0
   1eab4:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x394>
   1eab8:	5a 0b 00 00 	or s26, s26, 2
   1eabc:	1a 80 1c c0 	and s0, s26, s25
   1eac0:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x3a0>
   1eac4:	03 00 00 f6 	b 12 <AM_clipMline+0x3a8>
   1eac8:	00 00 00 0f 	move s0, 0
   1eacc:	a5 00 00 f6 	b 660 <AM_clipMline+0x638>
   1ead0:	1e 80 00 a8 	load_32 s0, 32(sp)
   1ead4:	20 00 00 0f 	move s1, 0
   1ead8:	00 00 00 a0 	load_u8 s0, (s0)
   1eadc:	00 00 00 11 	cmpne_i s0, s0, 0
   1eae0:	60 00 00 f4 	bnz s0, 12 <AM_clipMline+0x3c4>
   1eae4:	3e 60 00 88 	store_32 s1, 24(sp)
   1eae8:	03 00 00 f6 	b 12 <AM_clipMline+0x3cc>
   1eaec:	00 a0 02 0f 	move s0, 168
   1eaf0:	1e 60 00 88 	store_32 s0, 24(sp)
   1eaf4:	00 0c 00 4f 	movehi s0, 96
   1eaf8:	00 20 22 00 	or s0, s0, 2184
   1eafc:	00 00 00 a0 	load_u8 s0, (s0)
   1eb00:	00 00 00 11 	cmpne_i s0, s0, 0
   1eb04:	20 01 00 f4 	bnz s0, 36 <AM_clipMline+0x400>
   1eb08:	40 fc ff 0f 	move s2, -1
   1eb0c:	5e 20 00 88 	store_32 s2, 8(sp)
   1eb10:	3e 10 00 88 	store_32 s1, 4(sp)
   1eb14:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x3f4>
   1eb18:	08 00 00 f6 	b 32 <AM_clipMline+0x410>
   1eb1c:	00 00 05 0f 	move s0, 320
   1eb20:	1e 50 00 88 	store_32 s0, 20(sp)
   1eb24:	06 00 00 f6 	b 24 <AM_clipMline+0x414>
   1eb28:	40 fc 04 0f 	move s2, 319
   1eb2c:	5e 20 00 88 	store_32 s2, 8(sp)
   1eb30:	3e 10 00 88 	store_32 s1, 4(sp)
   1eb34:	40 ff ff f5 	bnz s0, -24 <AM_clipMline+0x3f4>
   1eb38:	3e 50 00 88 	store_32 s1, 20(sp)
   1eb3c:	1e 60 00 a8 	load_32 s0, 24(sp)
   1eb40:	00 fc ff 05 	add_i s0, s0, -1
   1eb44:	1e 30 00 88 	store_32 s0, 12(sp)
   1eb48:	00 04 00 0f 	move s0, 1
   1eb4c:	1e 00 00 88 	store_32 s0, (sp)
   1eb50:	1a 80 0c c0 	or s0, s26, s25
   1eb54:	40 10 00 f2 	bz s0, 520 <AM_clipMline+0x634>
   1eb58:	19 00 00 10 	cmpeq_i s0, s25, 0
   1eb5c:	60 03 fd c0 	move s27, s26
   1eb60:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x440>
   1eb64:	60 83 fc c0 	move s27, s25
   1eb68:	1b 20 00 01 	and s0, s27, 8
   1eb6c:	9e 80 00 88 	store_32 s4, 32(sp)
   1eb70:	be 70 00 88 	store_32 s5, 28(sp)
   1eb74:	40 00 00 f2 	bz s0, 8 <AM_clipMline+0x454>
   1eb78:	20 00 00 f6 	b 128 <AM_clipMline+0x4d0>
   1eb7c:	1b 10 00 01 	and s0, s27, 4
   1eb80:	40 00 00 f2 	bz s0, 8 <AM_clipMline+0x460>
   1eb84:	31 00 00 f6 	b 196 <AM_clipMline+0x520>
   1eb88:	1b 08 00 01 	and s0, s27, 2
   1eb8c:	40 00 00 f2 	bz s0, 8 <AM_clipMline+0x46c>
   1eb90:	64 00 00 f6 	b 400 <AM_clipMline+0x5f8>
   1eb94:	1b 04 00 01 	and s0, s27, 1
   1eb98:	c0 01 00 f2 	bz s0, 56 <AM_clipMline+0x4a8>
   1eb9c:	1e 43 00 88 	store_32 s24, 16(sp)
   1eba0:	1e 93 00 a8 	load_32 s24, 36(sp)
   1eba4:	1e 80 00 a8 	load_32 s0, 32(sp)
   1eba8:	3e 40 00 a8 	load_32 s1, 16(sp)
   1ebac:	5e 70 00 a8 	load_32 s2, 28(sp)
   1ebb0:	18 00 60 c0 	sub_i s0, s24, s0
   1ebb4:	22 80 60 c0 	sub_i s1, s2, s1
   1ebb8:	5e 40 00 a8 	load_32 s2, 16(sp)
   1ebbc:	00 00 71 c0 	mull_i s0, s0, s2
   1ebc0:	a6 d7 00 f8 	call 220824 <__divsi3>
   1ebc4:	20 00 5c c0 	add_i s1, s0, s24
   1ebc8:	1e 43 00 a8 	load_32 s24, 16(sp)
   1ebcc:	5e 10 00 a8 	load_32 s2, 4(sp)
   1ebd0:	1b 80 1c c1 	cmpne_i s0, s27, s25
   1ebd4:	60 02 00 f4 	bnz s0, 76 <AM_clipMline+0x4f8>
   1ebd8:	7e a0 00 a8 	load_32 s3, 40(sp)
   1ebdc:	43 00 00 88 	store_32 s2, (s3)
   1ebe0:	1e 60 00 a8 	load_32 s0, 24(sp)
   1ebe4:	23 10 00 88 	store_32 s1, 4(s3)
   1ebe8:	01 00 40 c1 	cmplt_i s0, s1, s0
   1ebec:	60 04 00 f4 	bnz s0, 140 <AM_clipMline+0x550>
   1ebf0:	20 13 00 0f 	move s25, 4
   1ebf4:	22 00 00 f6 	b 136 <AM_clipMline+0x554>
   1ebf8:	5e 90 00 a8 	load_32 s2, 36(sp)
   1ebfc:	05 00 6c c0 	sub_i s0, s5, s24
   1ec00:	22 00 62 c0 	sub_i s1, s2, s4
   1ec04:	00 00 71 c0 	mull_i s0, s0, s2
   1ec08:	94 d7 00 f8 	call 220752 <__divsi3>
   1ec0c:	40 00 5c c0 	add_i s2, s0, s24
   1ec10:	20 00 00 0f 	move s1, 0
   1ec14:	1b 80 1c c1 	cmpne_i s0, s27, s25
   1ec18:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x4f8>
   1ec1c:	ef ff ff f7 	b -68 <AM_clipMline+0x4b0>
   1ec20:	7e a0 00 a8 	load_32 s3, 40(sp)
   1ec24:	43 20 00 88 	store_32 s2, 8(s3)
   1ec28:	1e 60 00 a8 	load_32 s0, 24(sp)
   1ec2c:	23 30 00 88 	store_32 s1, 12(s3)
   1ec30:	01 00 40 c1 	cmplt_i s0, s1, s0
   1ec34:	00 04 00 f4 	bnz s0, 128 <AM_clipMline+0x58c>
   1ec38:	40 13 00 0f 	move s26, 4
   1ec3c:	01 00 00 14 	cmplt_i s0, s1, 0
   1ec40:	20 04 00 f4 	bnz s0, 132 <AM_clipMline+0x59c>
   1ec44:	21 00 00 f6 	b 132 <AM_clipMline+0x5a0>
   1ec48:	3e 90 00 a8 	load_32 s1, 36(sp)
   1ec4c:	45 00 6c c0 	sub_i s2, s5, s24
   1ec50:	1e 60 00 a8 	load_32 s0, 24(sp)
   1ec54:	01 00 60 c0 	sub_i s0, s1, s0
   1ec58:	21 00 62 c0 	sub_i s1, s1, s4
   1ec5c:	00 00 71 c0 	mull_i s0, s0, s2
   1ec60:	7e d7 00 f8 	call 220664 <__divsi3>
   1ec64:	40 00 5c c0 	add_i s2, s0, s24
   1ec68:	3e 30 00 a8 	load_32 s1, 12(sp)
   1ec6c:	1b 80 1c c1 	cmpne_i s0, s27, s25
   1ec70:	80 fd ff f5 	bnz s0, -80 <AM_clipMline+0x4f8>
   1ec74:	d9 ff ff f7 	b -156 <AM_clipMline+0x4b0>
   1ec78:	20 03 00 0f 	move s25, 0
   1ec7c:	9e 80 00 a8 	load_32 s4, 32(sp)
   1ec80:	01 00 00 14 	cmplt_i s0, s1, 0
   1ec84:	be 70 00 a8 	load_32 s5, 28(sp)
   1ec88:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x568>
   1ec8c:	02 00 00 f6 	b 8 <AM_clipMline+0x56c>
   1ec90:	20 23 00 0f 	move s25, 8
   1ec94:	02 fc ff 12 	cmpgt_i s0, s2, -1
   1ec98:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x578>
   1ec9c:	13 00 00 f6 	b 76 <AM_clipMline+0x5c0>
   1eca0:	1e 50 00 a8 	load_32 s0, 20(sp)
   1eca4:	02 00 40 c1 	cmplt_i s0, s2, s0
   1eca8:	20 02 00 f4 	bnz s0, 68 <AM_clipMline+0x5c4>
   1ecac:	39 0b 00 00 	or s25, s25, 2
   1ecb0:	0f 00 00 f6 	b 60 <AM_clipMline+0x5c4>
   1ecb4:	40 03 00 0f 	move s26, 0
   1ecb8:	01 00 00 14 	cmplt_i s0, s1, 0
   1ecbc:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x59c>
   1ecc0:	02 00 00 f6 	b 8 <AM_clipMline+0x5a0>
   1ecc4:	40 23 00 0f 	move s26, 8
   1ecc8:	02 fc ff 12 	cmpgt_i s0, s2, -1
   1eccc:	40 00 00 f4 	bnz s0, 8 <AM_clipMline+0x5ac>
   1ecd0:	0d 00 00 f6 	b 52 <AM_clipMline+0x5dc>
   1ecd4:	1e 50 00 a8 	load_32 s0, 20(sp)
   1ecd8:	02 00 40 c1 	cmplt_i s0, s2, s0
   1ecdc:	60 01 00 f4 	bnz s0, 44 <AM_clipMline+0x5e0>
   1ece0:	5a 0b 00 00 	or s26, s26, 2
   1ece4:	09 00 00 f6 	b 36 <AM_clipMline+0x5e0>
   1ece8:	39 07 00 00 	or s25, s25, 1
   1ecec:	00 03 f1 c0 	move s24, s2
   1ecf0:	3e 90 00 88 	store_32 s1, 36(sp)
   1ecf4:	7a 80 1c c0 	and s3, s26, s25
   1ecf8:	00 00 00 0f 	move s0, 0
   1ecfc:	a3 f2 ff f3 	bz s3, -428 <AM_clipMline+0x428>
   1ed00:	18 00 00 f6 	b 96 <AM_clipMline+0x638>
   1ed04:	5a 07 00 00 	or s26, s26, 1
   1ed08:	a0 00 f1 c0 	move s5, s2
   1ed0c:	80 80 f0 c0 	move s4, s1
   1ed10:	7a 80 1c c0 	and s3, s26, s25
   1ed14:	00 00 00 0f 	move s0, 0
   1ed18:	c3 f1 ff f3 	bz s3, -456 <AM_clipMline+0x428>
   1ed1c:	11 00 00 f6 	b 68 <AM_clipMline+0x638>
   1ed20:	1e 20 00 a8 	load_32 s0, 8(sp)
   1ed24:	1e 43 00 88 	store_32 s24, 16(sp)
   1ed28:	00 00 6c c0 	sub_i s0, s0, s24
   1ed2c:	1e 93 00 a8 	load_32 s24, 36(sp)
   1ed30:	3e 40 00 a8 	load_32 s1, 16(sp)
   1ed34:	44 00 6c c0 	sub_i s2, s4, s24
   1ed38:	25 80 60 c0 	sub_i s1, s5, s1
   1ed3c:	00 00 71 c0 	mull_i s0, s0, s2
   1ed40:	46 d7 00 f8 	call 220440 <__divsi3>
   1ed44:	20 00 5c c0 	add_i s1, s0, s24
   1ed48:	1e 43 00 a8 	load_32 s24, 16(sp)
   1ed4c:	5e 20 00 a8 	load_32 s2, 8(sp)
   1ed50:	1b 80 1c c1 	cmpne_i s0, s27, s25
   1ed54:	60 f6 ff f5 	bnz s0, -308 <AM_clipMline+0x4f8>
   1ed58:	a0 ff ff f7 	b -384 <AM_clipMline+0x4b0>
   1ed5c:	1e 00 00 a8 	load_32 s0, (sp)
   1ed60:	fe b3 00 a8 	load_32 ra, 44(sp)
   1ed64:	7e c3 00 a8 	load_32 s27, 48(sp)
   1ed68:	5e d3 00 a8 	load_32 s26, 52(sp)
   1ed6c:	3e e3 00 a8 	load_32 s25, 56(sp)
   1ed70:	1e f3 00 a8 	load_32 s24, 60(sp)
   1ed74:	de 03 01 05 	add_i sp, sp, 64
   1ed78:	1f 00 00 f0 	ret

000000000001ed7c AM_drawFline:
   1ed7c:	de 03 fe 05 	add_i sp, sp, -128
   1ed80:	fe f3 01 88 	store_32 ra, 124(sp)
   1ed84:	40 00 00 a8 	load_32 s2, (s0)
   1ed88:	62 00 00 14 	cmplt_i s3, s2, 0
   1ed8c:	03 0b 00 f4 	bnz s3, 352 <AM_drawFline+0x170>
   1ed90:	60 0c 00 4f 	movehi s3, 96
   1ed94:	63 20 22 00 	or s3, s3, 2184
   1ed98:	63 00 00 a0 	load_u8 s3, (s3)
   1ed9c:	63 00 00 11 	cmpne_i s3, s3, 0
   1eda0:	63 09 00 f4 	bnz s3, 300 <AM_drawFline+0x150>
   1eda4:	60 00 00 0f 	move s3, 0
   1eda8:	82 80 31 c1 	cmpge_i s4, s2, s3
   1edac:	04 0a 00 f4 	bnz s4, 320 <AM_drawFline+0x170>
   1edb0:	80 10 00 a8 	load_32 s4, 4(s0)
   1edb4:	a4 00 00 14 	cmplt_i s5, s4, 0
   1edb8:	a5 09 00 f4 	bnz s5, 308 <AM_drawFline+0x170>
   1edbc:	a0 0c 00 4f 	movehi s5, 96
   1edc0:	a5 40 22 00 	or s5, s5, 2192
   1edc4:	a5 00 00 a0 	load_u8 s5, (s5)
   1edc8:	a5 00 00 11 	cmpne_i s5, s5, 0
   1edcc:	85 08 00 f4 	bnz s5, 272 <AM_drawFline+0x160>
   1edd0:	a0 00 00 0f 	move s5, 0
   1edd4:	c4 80 32 c1 	cmpge_i s6, s4, s5
   1edd8:	a6 08 00 f4 	bnz s6, 276 <AM_drawFline+0x170>
   1eddc:	c0 20 00 a8 	load_32 s6, 8(s0)
   1ede0:	e6 80 71 c1 	cmpge_u s7, s6, s3
   1ede4:	47 08 00 f4 	bnz s7, 264 <AM_drawFline+0x170>
   1ede8:	e0 30 00 a8 	load_32 s7, 12(s0)
   1edec:	a7 80 82 c1 	cmplt_u s5, s7, s5
   1edf0:	45 00 00 f4 	bnz s5, 8 <AM_drawFline+0x7c>
   1edf4:	3e 00 00 f6 	b 248 <AM_drawFline+0x170>
   1edf8:	a6 00 61 c0 	sub_i s5, s6, s2
   1edfc:	80 05 00 0f 	move s12, 1
   1ee00:	c5 7c 00 09 	ashr s6, s5, 31
   1ee04:	05 01 53 c0 	add_i s8, s5, s6
   1ee08:	48 01 33 c0 	xor s10, s8, s6
   1ee0c:	05 01 00 14 	cmplt_i s8, s5, 0
   1ee10:	a0 fc ff 0f 	move s5, -1
   1ee14:	c0 80 f2 c0 	move s6, s5
   1ee18:	48 00 00 f4 	bnz s8, 8 <AM_drawFline+0xa4>
   1ee1c:	c0 00 f6 c0 	move s6, s12
   1ee20:	e7 00 62 c0 	sub_i s7, s7, s4
   1ee24:	07 7d 00 09 	ashr s8, s7, 31
   1ee28:	27 01 54 c0 	add_i s9, s7, s8
   1ee2c:	e7 00 00 14 	cmplt_i s7, s7, 0
   1ee30:	69 01 34 c0 	xor s11, s9, s8
   1ee34:	0a 05 00 0b 	shl s8, s10, 1
   1ee38:	2b 05 00 0b 	shl s9, s11, 1
   1ee3c:	47 00 00 f4 	bnz s7, 8 <AM_drawFline+0xc8>
   1ee40:	a0 00 f6 c0 	move s5, s12
   1ee44:	e0 0c 00 4f 	movehi s7, 96
   1ee48:	84 81 71 c0 	mull_i s12, s4, s3
   1ee4c:	a8 81 54 c1 	cmple_i s13, s8, s9
   1ee50:	e7 80 24 00 	or s7, s7, 2336
   1ee54:	8c 01 51 c0 	add_i s12, s12, s2
   1ee58:	e7 00 00 a8 	load_32 s7, (s7)
   1ee5c:	87 01 56 c0 	add_i s12, s7, s12
   1ee60:	2c 00 00 82 	store_8 s1, (s12)
   1ee64:	6d 06 00 f4 	bnz s13, 204 <AM_drawFline+0x1b4>
   1ee68:	60 21 00 a8 	load_32 s11, 8(s0)
   1ee6c:	62 81 05 c1 	cmpeq_i s11, s2, s11
   1ee70:	0b 09 00 f4 	bnz s11, 288 <AM_drawFline+0x214>
   1ee74:	60 01 00 0f 	move s11, 0
   1ee78:	49 01 65 c0 	sub_i s10, s9, s10
   1ee7c:	0b 01 64 c0 	sub_i s8, s11, s8
   1ee80:	aa fd ff 12 	cmpgt_i s13, s10, -1
   1ee84:	80 81 f2 c0 	move s12, s5
   1ee88:	4d 00 00 f4 	bnz s13, 8 <AM_drawFline+0x114>
   1ee8c:	80 81 f5 c0 	move s12, s11
   1ee90:	8c 00 52 c0 	add_i s4, s12, s4
   1ee94:	80 01 f4 c0 	move s12, s8
   1ee98:	4d 00 00 f4 	bnz s13, 8 <AM_drawFline+0x124>
   1ee9c:	80 81 f5 c0 	move s12, s11
   1eea0:	a4 81 71 c0 	mull_i s13, s4, s3
   1eea4:	42 00 53 c0 	add_i s2, s2, s6
   1eea8:	4a 81 54 c0 	add_i s10, s10, s9
   1eeac:	ad 01 51 c0 	add_i s13, s13, s2
   1eeb0:	a7 81 56 c0 	add_i s13, s7, s13
   1eeb4:	4a 01 56 c0 	add_i s10, s10, s12
   1eeb8:	2d 00 00 82 	store_8 s1, (s13)
   1eebc:	a0 21 00 a8 	load_32 s13, 8(s0)
   1eec0:	a2 81 06 c1 	cmpeq_i s13, s2, s13
   1eec4:	6d 06 00 f4 	bnz s13, 204 <AM_drawFline+0x214>
   1eec8:	ee ff ff f7 	b -72 <AM_drawFline+0x104>
   1eecc:	60 00 05 0f 	move s3, 320
   1eed0:	82 80 31 c1 	cmpge_i s4, s2, s3
   1eed4:	c4 00 00 f4 	bnz s4, 24 <AM_drawFline+0x170>
   1eed8:	b6 ff ff f7 	b -296 <AM_drawFline+0x34>
   1eedc:	a0 a0 02 0f 	move s5, 168
   1eee0:	c4 80 32 c1 	cmpge_i s6, s4, s5
   1eee4:	46 00 00 f4 	bnz s6, 8 <AM_drawFline+0x170>
   1eee8:	bd ff ff f7 	b -268 <AM_drawFline+0x60>
   1eeec:	1a 04 00 4f 	movehi s0, 58
   1eef0:	20 0c 00 4f 	movehi s1, 96
   1eef4:	00 90 16 00 	or s0, s0, 1444
   1eef8:	21 20 26 00 	or s1, s1, 2440
   1eefc:	00 00 00 a8 	load_32 s0, (s0)
   1ef00:	41 00 00 a8 	load_32 s2, (s1)
   1ef04:	62 04 00 05 	add_i s3, s2, 1
   1ef08:	61 00 00 88 	store_32 s3, (s1)
   1ef0c:	20 00 00 4f 	movehi s1, 0
   1ef10:	5e 20 00 88 	store_32 s2, 8(sp)
   1ef14:	21 4c 21 00 	or s1, s1, 2131
   1ef18:	3e 10 00 88 	store_32 s1, 4(sp)
   1ef1c:	1e 00 00 88 	store_32 s0, (sp)
   1ef20:	87 cd 00 f8 	call 210460 <fprintf>
   1ef24:	fe f3 01 a8 	load_32 ra, 124(sp)
   1ef28:	de 03 02 05 	add_i sp, sp, 128
   1ef2c:	1f 00 00 f0 	ret
   1ef30:	40 31 00 a8 	load_32 s10, 12(s0)
   1ef34:	44 01 05 c1 	cmpeq_i s10, s4, s10
   1ef38:	ca 02 00 f4 	bnz s10, 88 <AM_drawFline+0x214>
   1ef3c:	40 01 00 0f 	move s10, 0
   1ef40:	68 81 65 c0 	sub_i s11, s8, s11
   1ef44:	2a 81 64 c0 	sub_i s9, s10, s9
   1ef48:	ab fd ff 12 	cmpgt_i s13, s11, -1
   1ef4c:	80 01 f3 c0 	move s12, s6
   1ef50:	4d 00 00 f4 	bnz s13, 8 <AM_drawFline+0x1dc>
   1ef54:	80 01 f5 c0 	move s12, s10
   1ef58:	4c 00 51 c0 	add_i s2, s12, s2
   1ef5c:	80 81 f4 c0 	move s12, s9
   1ef60:	4d 00 00 f4 	bnz s13, 8 <AM_drawFline+0x1ec>
   1ef64:	80 01 f5 c0 	move s12, s10
   1ef68:	84 80 52 c0 	add_i s4, s4, s5
   1ef6c:	6b 01 54 c0 	add_i s11, s11, s8
   1ef70:	a4 81 71 c0 	mull_i s13, s4, s3
   1ef74:	6b 01 56 c0 	add_i s11, s11, s12
   1ef78:	ad 01 51 c0 	add_i s13, s13, s2
   1ef7c:	a7 81 56 c0 	add_i s13, s7, s13
   1ef80:	2d 00 00 82 	store_8 s1, (s13)
   1ef84:	a0 31 00 a8 	load_32 s13, 12(s0)
   1ef88:	a4 81 16 c1 	cmpne_i s13, s4, s13
   1ef8c:	ed fd ff f5 	bnz s13, -68 <AM_drawFline+0x1cc>
   1ef90:	fe f3 01 a8 	load_32 ra, 124(sp)
   1ef94:	de 03 02 05 	add_i sp, sp, 128
   1ef98:	1f 00 00 f0 	ret

000000000001ef9c AM_drawMline:
   1ef9c:	de 03 ff 05 	add_i sp, sp, -64
   1efa0:	1e f3 00 88 	store_32 s24, 60(sp)
   1efa4:	3e e3 00 88 	store_32 s25, 56(sp)
   1efa8:	fe d3 00 88 	store_32 ra, 52(sp)
   1efac:	00 83 f0 c0 	move s24, s1
   1efb0:	20 0c 00 4f 	movehi s1, 96
   1efb4:	21 33 26 00 	or s25, s1, 2444
   1efb8:	20 80 fc c0 	move s1, s25
   1efbc:	db fd ff f9 	call -2196 <AM_clipMline>
   1efc0:	80 00 00 f2 	bz s0, 16 <AM_drawMline+0x34>
   1efc4:	00 80 fc c0 	move s0, s25
   1efc8:	20 00 fc c0 	move s1, s24
   1efcc:	6c ff ff f9 	call -592 <AM_drawFline>
   1efd0:	fe d3 00 a8 	load_32 ra, 52(sp)
   1efd4:	3e e3 00 a8 	load_32 s25, 56(sp)
   1efd8:	1e f3 00 a8 	load_32 s24, 60(sp)
   1efdc:	de 03 01 05 	add_i sp, sp, 64
   1efe0:	1f 00 00 f0 	ret

000000000001efe4 AM_drawGrid:
   1efe4:	de 03 fe 05 	add_i sp, sp, -128
   1efe8:	1e f3 01 88 	store_32 s24, 124(sp)
   1efec:	3e e3 01 88 	store_32 s25, 120(sp)
   1eff0:	5e d3 01 88 	store_32 s26, 116(sp)
   1eff4:	7e c3 01 88 	store_32 s27, 112(sp)
   1eff8:	fe b3 01 88 	store_32 ra, 108(sp)
   1effc:	5b 04 00 4f 	movehi s2, 59
   1f000:	20 0c 00 4f 	movehi s1, 96
   1f004:	c0 80 ff 4f 	movehi s6, 523264
   1f008:	42 70 48 00 	or s2, s2, 4636
   1f00c:	e1 f0 21 00 	or s7, s1, 2172
   1f010:	20 83 00 4f 	movehi s25, 1024
   1f014:	27 00 00 a8 	load_32 s1, (s7)
   1f018:	42 00 00 a8 	load_32 s2, (s2)
   1f01c:	1e 50 01 88 	store_32 s0, 84(sp)
   1f020:	41 00 61 c0 	sub_i s2, s1, s2
   1f024:	62 7c 00 09 	ashr s3, s2, 31
   1f028:	63 24 00 0a 	shr s3, s3, 9
   1f02c:	62 80 51 c0 	add_i s3, s2, s3
   1f030:	63 00 13 c0 	and s3, s3, s6
   1f034:	42 80 61 c0 	sub_i s2, s2, s3
   1f038:	02 00 00 10 	cmpeq_i s0, s2, 0
   1f03c:	60 00 00 f4 	bnz s0, 12 <AM_drawGrid+0x64>
   1f040:	59 00 61 c0 	sub_i s2, s25, s2
   1f044:	02 00 00 f6 	b 8 <AM_drawGrid+0x68>
   1f048:	40 00 00 0f 	move s2, 0
   1f04c:	00 0c 00 4f 	movehi s0, 96
   1f050:	be 60 01 05 	add_i s5, sp, 88
   1f054:	80 0c 00 4f 	movehi s4, 96
   1f058:	00 e1 21 00 	or s8, s0, 2168
   1f05c:	00 0c 00 4f 	movehi s0, 96
   1f060:	24 01 22 00 	or s9, s4, 2176
   1f064:	68 00 00 a8 	load_32 s3, (s8)
   1f068:	02 83 50 c0 	add_i s24, s2, s1
   1f06c:	40 11 22 00 	or s10, s0, 2180
   1f070:	be 30 01 88 	store_32 s5, 76(sp)
   1f074:	a5 10 00 00 	or s5, s5, 4
   1f078:	0a 00 00 a8 	load_32 s0, (s10)
   1f07c:	43 80 50 c0 	add_i s2, s3, s1
   1f080:	be 20 01 88 	store_32 s5, 72(sp)
   1f084:	05 00 00 88 	store_32 s0, (s5)
   1f088:	89 00 00 a8 	load_32 s4, (s9)
   1f08c:	5e 40 01 88 	store_32 s2, 80(sp)
   1f090:	58 00 31 c1 	cmpge_i s2, s24, s2
   1f094:	64 03 50 c0 	add_i s27, s4, s0
   1f098:	7e 93 01 88 	store_32 s27, 100(sp)
   1f09c:	42 04 00 f4 	bnz s2, 136 <AM_drawGrid+0x140>
   1f0a0:	00 0c 00 4f 	movehi s0, 96
   1f0a4:	5e d1 00 88 	store_32 s10, 52(sp)
   1f0a8:	7e 63 01 05 	add_i s27, sp, 88
   1f0ac:	3e e1 00 88 	store_32 s9, 56(sp)
   1f0b0:	1e f1 00 88 	store_32 s8, 60(sp)
   1f0b4:	40 33 26 00 	or s26, s0, 2444
   1f0b8:	fe 00 01 88 	store_32 s7, 64(sp)
   1f0bc:	de 10 01 88 	store_32 s6, 68(sp)
   1f0c0:	1e 63 01 88 	store_32 s24, 88(sp)
   1f0c4:	1e 83 01 88 	store_32 s24, 96(sp)
   1f0c8:	00 80 fd c0 	move s0, s27
   1f0cc:	20 00 fd c0 	move s1, s26
   1f0d0:	96 fd ff f9 	call -2472 <AM_clipMline>
   1f0d4:	80 00 00 f2 	bz s0, 16 <AM_drawGrid+0x100>
   1f0d8:	00 00 fd c0 	move s0, s26
   1f0dc:	3e 50 01 a8 	load_32 s1, 84(sp)
   1f0e0:	27 ff ff f9 	call -868 <AM_drawFline>
   1f0e4:	1e 40 01 a8 	load_32 s0, 80(sp)
   1f0e8:	18 83 5c c0 	add_i s24, s24, s25
   1f0ec:	18 00 40 c1 	cmplt_i s0, s24, s0
   1f0f0:	80 fe ff f5 	bnz s0, -48 <AM_drawGrid+0xdc>
   1f0f4:	1e d0 00 a8 	load_32 s0, 52(sp)
   1f0f8:	00 00 00 a8 	load_32 s0, (s0)
   1f0fc:	3e e0 00 a8 	load_32 s1, 56(sp)
   1f100:	41 00 00 a8 	load_32 s2, (s1)
   1f104:	3e 00 01 a8 	load_32 s1, 64(sp)
   1f108:	62 03 50 c0 	add_i s27, s2, s0
   1f10c:	21 00 00 a8 	load_32 s1, (s1)
   1f110:	7e f0 00 a8 	load_32 s3, 60(sp)
   1f114:	63 00 00 a8 	load_32 s3, (s3)
   1f118:	43 80 50 c0 	add_i s2, s3, s1
   1f11c:	5e 40 01 88 	store_32 s2, 80(sp)
   1f120:	de 10 01 a8 	load_32 s6, 68(sp)
   1f124:	5b 04 00 4f 	movehi s2, 59
   1f128:	42 80 48 00 	or s2, s2, 4640
   1f12c:	42 00 00 a8 	load_32 s2, (s2)
   1f130:	40 00 61 c0 	sub_i s2, s0, s2
   1f134:	62 7c 00 09 	ashr s3, s2, 31
   1f138:	63 24 00 0a 	shr s3, s3, 9
   1f13c:	62 80 51 c0 	add_i s3, s2, s3
   1f140:	63 00 13 c0 	and s3, s3, s6
   1f144:	42 80 61 c0 	sub_i s2, s2, s3
   1f148:	62 00 00 10 	cmpeq_i s3, s2, 0
   1f14c:	63 00 00 f4 	bnz s3, 12 <AM_drawGrid+0x174>
   1f150:	59 00 61 c0 	sub_i s2, s25, s2
   1f154:	02 00 00 f6 	b 8 <AM_drawGrid+0x178>
   1f158:	40 00 00 0f 	move s2, 0
   1f15c:	02 03 50 c0 	add_i s24, s2, s0
   1f160:	3e 60 01 88 	store_32 s1, 88(sp)
   1f164:	3e 40 01 a8 	load_32 s1, 80(sp)
   1f168:	3e 80 01 88 	store_32 s1, 96(sp)
   1f16c:	18 80 3d c1 	cmpge_i s0, s24, s27
   1f170:	00 02 00 f4 	bnz s0, 64 <AM_drawGrid+0x1cc>
   1f174:	00 0c 00 4f 	movehi s0, 96
   1f178:	40 33 26 00 	or s26, s0, 2444
   1f17c:	1e 20 01 a8 	load_32 s0, 72(sp)
   1f180:	00 03 00 88 	store_32 s24, (s0)
   1f184:	1e 93 01 88 	store_32 s24, 100(sp)
   1f188:	1e 30 01 a8 	load_32 s0, 76(sp)
   1f18c:	20 00 fd c0 	move s1, s26
   1f190:	66 fd ff f9 	call -2664 <AM_clipMline>
   1f194:	80 00 00 f2 	bz s0, 16 <AM_drawGrid+0x1c0>
   1f198:	00 00 fd c0 	move s0, s26
   1f19c:	3e 50 01 a8 	load_32 s1, 84(sp)
   1f1a0:	f7 fe ff f9 	call -1060 <AM_drawFline>
   1f1a4:	18 83 5c c0 	add_i s24, s24, s25
   1f1a8:	18 80 4d c1 	cmplt_i s0, s24, s27
   1f1ac:	80 fe ff f5 	bnz s0, -48 <AM_drawGrid+0x198>
   1f1b0:	fe b3 01 a8 	load_32 ra, 108(sp)
   1f1b4:	7e c3 01 a8 	load_32 s27, 112(sp)
   1f1b8:	5e d3 01 a8 	load_32 s26, 116(sp)
   1f1bc:	3e e3 01 a8 	load_32 s25, 120(sp)
   1f1c0:	1e f3 01 a8 	load_32 s24, 124(sp)
   1f1c4:	de 03 02 05 	add_i sp, sp, 128
   1f1c8:	1f 00 00 f0 	ret

000000000001f1cc AM_drawWalls:
   1f1cc:	de 03 ff 05 	add_i sp, sp, -64
   1f1d0:	1e f3 00 88 	store_32 s24, 60(sp)
   1f1d4:	3e e3 00 88 	store_32 s25, 56(sp)
   1f1d8:	5e d3 00 88 	store_32 s26, 52(sp)
   1f1dc:	7e c3 00 88 	store_32 s27, 48(sp)
   1f1e0:	fe b3 00 88 	store_32 ra, 44(sp)
   1f1e4:	1b 04 00 4f 	movehi s0, 59
   1f1e8:	00 60 4a 00 	or s0, s0, 4760
   1f1ec:	1e a0 00 88 	store_32 s0, 40(sp)
   1f1f0:	00 00 00 a8 	load_32 s0, (s0)
   1f1f4:	00 04 00 14 	cmplt_i s0, s0, 1
   1f1f8:	80 10 00 f4 	bnz s0, 528 <AM_drawWalls+0x23c>
   1f1fc:	1b 04 00 4f 	movehi s0, 59
   1f200:	40 0c 00 4f 	movehi s2, 96
   1f204:	20 0c 00 4f 	movehi s1, 96
   1f208:	00 40 4a 00 	or s0, s0, 4752
   1f20c:	1e 90 00 88 	store_32 s0, 36(sp)
   1f210:	02 f0 25 00 	or s0, s2, 2428
   1f214:	1e 80 00 88 	store_32 s0, 32(sp)
   1f218:	00 0c 00 4f 	movehi s0, 96
   1f21c:	01 73 26 00 	or s24, s1, 2460
   1f220:	20 04 00 0f 	move s1, 1
   1f224:	3e 70 00 88 	store_32 s1, 28(sp)
   1f228:	20 0c 00 4f 	movehi s1, 96
   1f22c:	00 b0 22 00 	or s0, s0, 2220
   1f230:	1e 40 00 88 	store_32 s0, 16(sp)
   1f234:	00 0c 00 4f 	movehi s0, 96
   1f238:	21 33 26 00 	or s25, s1, 2444
   1f23c:	40 03 00 0f 	move s26, 0
   1f240:	00 a0 24 00 	or s0, s0, 2344
   1f244:	20 8c 01 0f 	move s1, 99
   1f248:	3e 20 00 88 	store_32 s1, 8(sp)
   1f24c:	1e 60 00 88 	store_32 s0, 24(sp)
   1f250:	00 e0 02 0f 	move s0, 184
   1f254:	1e 30 00 88 	store_32 s0, 12(sp)
   1f258:	5e 53 00 88 	store_32 s26, 20(sp)
   1f25c:	15 00 00 f6 	b 84 <AM_drawWalls+0xe4>
   1f260:	3e 50 00 a8 	load_32 s1, 20(sp)
   1f264:	62 00 02 01 	and s3, s2, 128
   1f268:	63 0c 00 f4 	bnz s3, 396 <AM_drawWalls+0x228>
   1f26c:	25 00 00 f6 	b 148 <AM_drawWalls+0x134>
   1f270:	1e 60 00 a8 	load_32 s0, 24(sp)
   1f274:	60 03 00 a8 	load_32 s27, (s0)
   1f278:	00 00 fc c0 	move s0, s24
   1f27c:	20 80 fc c0 	move s1, s25
   1f280:	2a fd ff f9 	call -2904 <AM_clipMline>
   1f284:	80 0b 00 f2 	bz s0, 368 <AM_drawWalls+0x228>
   1f288:	3b 00 01 05 	add_i s1, s27, 64
   1f28c:	58 00 00 f6 	b 352 <AM_drawWalls+0x220>
   1f290:	1e 60 00 a8 	load_32 s0, 24(sp)
   1f294:	60 03 00 a8 	load_32 s27, (s0)
   1f298:	00 00 fc c0 	move s0, s24
   1f29c:	20 80 fc c0 	move s1, s25
   1f2a0:	22 fd ff f9 	call -2936 <AM_clipMline>
   1f2a4:	80 0a 00 f2 	bz s0, 336 <AM_drawWalls+0x228>
   1f2a8:	3b 9c 03 05 	add_i s1, s27, 231
   1f2ac:	50 00 00 f6 	b 320 <AM_drawWalls+0x220>
   1f2b0:	1e 90 00 a8 	load_32 s0, 36(sp)
   1f2b4:	3a 18 00 0b 	shl s1, s26, 6
   1f2b8:	00 00 00 a8 	load_32 s0, (s0)
   1f2bc:	00 80 50 c0 	add_i s0, s0, s1
   1f2c0:	20 00 00 a8 	load_32 s1, (s0)
   1f2c4:	41 00 00 a8 	load_32 s2, (s1)
   1f2c8:	58 00 00 88 	store_32 s2, (s24)
   1f2cc:	21 10 00 a8 	load_32 s1, 4(s1)
   1f2d0:	38 10 00 88 	store_32 s1, 4(s24)
   1f2d4:	20 10 00 a8 	load_32 s1, 4(s0)
   1f2d8:	41 00 00 a8 	load_32 s2, (s1)
   1f2dc:	58 20 00 88 	store_32 s2, 8(s24)
   1f2e0:	21 10 00 a8 	load_32 s1, 4(s1)
   1f2e4:	38 30 00 88 	store_32 s1, 12(s24)
   1f2e8:	3e 80 00 a8 	load_32 s1, 32(sp)
   1f2ec:	61 00 00 a8 	load_32 s3, (s1)
   1f2f0:	40 40 00 a6 	load_s16 s2, 16(s0)
   1f2f4:	3e 70 00 a8 	load_32 s1, 28(sp)
   1f2f8:	43 00 00 f4 	bnz s3, 8 <AM_drawWalls+0x134>
   1f2fc:	0e 00 00 f6 	b 56 <AM_drawWalls+0x168>
   1f300:	60 d0 00 a8 	load_32 s3, 52(s0)
   1f304:	43 00 00 f4 	bnz s3, 8 <AM_drawWalls+0x140>
   1f308:	32 00 00 f6 	b 200 <AM_drawWalls+0x204>
   1f30c:	80 48 00 a4 	load_u16 s4, 18(s0)
   1f310:	84 9c 00 11 	cmpne_i s4, s4, 39
   1f314:	04 03 00 f4 	bnz s4, 96 <AM_drawWalls+0x1a8>
   1f318:	00 00 fc c0 	move s0, s24
   1f31c:	20 80 fc c0 	move s1, s25
   1f320:	02 fd ff f9 	call -3064 <AM_clipMline>
   1f324:	80 06 00 f2 	bz s0, 208 <AM_drawWalls+0x228>
   1f328:	00 80 fc c0 	move s0, s25
   1f32c:	3e 30 00 a8 	load_32 s1, 12(sp)
   1f330:	30 00 00 f6 	b 192 <AM_drawWalls+0x224>
   1f334:	22 00 04 01 	and s1, s2, 256
   1f338:	41 00 00 f2 	bz s1, 8 <AM_drawWalls+0x174>
   1f33c:	c9 ff ff f7 	b -220 <AM_drawWalls+0x94>
   1f340:	1e 40 00 a8 	load_32 s0, 16(sp)
   1f344:	22 00 02 01 	and s1, s2, 128
   1f348:	00 00 00 a8 	load_32 s0, (s0)
   1f34c:	00 f0 00 a8 	load_32 s0, 60(s0)
   1f350:	21 05 00 f4 	bnz s1, 164 <AM_drawWalls+0x228>
   1f354:	00 05 00 f2 	bz s0, 160 <AM_drawWalls+0x228>
   1f358:	00 00 fc c0 	move s0, s24
   1f35c:	20 80 fc c0 	move s1, s25
   1f360:	f2 fc ff f9 	call -3128 <AM_clipMline>
   1f364:	80 04 00 f2 	bz s0, 144 <AM_drawWalls+0x228>
   1f368:	00 80 fc c0 	move s0, s25
   1f36c:	3e 20 00 a8 	load_32 s1, 8(sp)
   1f370:	20 00 00 f6 	b 128 <AM_drawWalls+0x224>
   1f374:	42 80 00 01 	and s2, s2, 32
   1f378:	42 00 00 f2 	bz s2, 8 <AM_drawWalls+0x1b4>
   1f37c:	15 00 00 f6 	b 84 <AM_drawWalls+0x204>
   1f380:	43 00 00 a8 	load_32 s2, (s3)
   1f384:	00 c0 00 a8 	load_32 s0, 48(s0)
   1f388:	80 00 00 a8 	load_32 s4, (s0)
   1f38c:	42 00 02 c1 	cmpeq_i s2, s2, s4
   1f390:	42 00 00 f4 	bnz s2, 8 <AM_drawWalls+0x1cc>
   1f394:	b7 ff ff f7 	b -292 <AM_drawWalls+0xa4>
   1f398:	43 10 00 a8 	load_32 s2, 4(s3)
   1f39c:	00 10 00 a8 	load_32 s0, 4(s0)
   1f3a0:	02 00 00 c1 	cmpeq_i s0, s2, s0
   1f3a4:	40 00 00 f4 	bnz s0, 8 <AM_drawWalls+0x1e0>
   1f3a8:	ba ff ff f7 	b -280 <AM_drawWalls+0xc4>
   1f3ac:	41 02 00 f2 	bz s1, 72 <AM_drawWalls+0x228>
   1f3b0:	1e 60 00 a8 	load_32 s0, 24(sp)
   1f3b4:	60 03 00 a8 	load_32 s27, (s0)
   1f3b8:	00 00 fc c0 	move s0, s24
   1f3bc:	20 80 fc c0 	move s1, s25
   1f3c0:	da fc ff f9 	call -3224 <AM_clipMline>
   1f3c4:	80 01 00 f2 	bz s0, 48 <AM_drawWalls+0x228>
   1f3c8:	3b 80 01 05 	add_i s1, s27, 96
   1f3cc:	08 00 00 f6 	b 32 <AM_drawWalls+0x220>
   1f3d0:	1e 60 00 a8 	load_32 s0, 24(sp)
   1f3d4:	60 03 00 a8 	load_32 s27, (s0)
   1f3d8:	00 00 fc c0 	move s0, s24
   1f3dc:	20 80 fc c0 	move s1, s25
   1f3e0:	d2 fc ff f9 	call -3256 <AM_clipMline>
   1f3e4:	80 00 00 f2 	bz s0, 16 <AM_drawWalls+0x228>
   1f3e8:	3b c0 02 05 	add_i s1, s27, 176
   1f3ec:	00 80 fc c0 	move s0, s25
   1f3f0:	63 fe ff f9 	call -1652 <AM_drawFline>
   1f3f4:	1e a0 00 a8 	load_32 s0, 40(sp)
   1f3f8:	5a 07 00 05 	add_i s26, s26, 1
   1f3fc:	00 00 00 a8 	load_32 s0, (s0)
   1f400:	1a 00 40 c1 	cmplt_i s0, s26, s0
   1f404:	60 f5 ff f5 	bnz s0, -340 <AM_drawWalls+0xe4>
   1f408:	fe b3 00 a8 	load_32 ra, 44(sp)
   1f40c:	7e c3 00 a8 	load_32 s27, 48(sp)
   1f410:	5e d3 00 a8 	load_32 s26, 52(sp)
   1f414:	3e e3 00 a8 	load_32 s25, 56(sp)
   1f418:	1e f3 00 a8 	load_32 s24, 60(sp)
   1f41c:	de 03 01 05 	add_i sp, sp, 64
   1f420:	1f 00 00 f0 	ret

000000000001f424 AM_rotate:
   1f424:	de 03 ff 05 	add_i sp, sp, -64
   1f428:	1e f3 00 88 	store_32 s24, 60(sp)
   1f42c:	3e e3 00 88 	store_32 s25, 56(sp)
   1f430:	5e d3 00 88 	store_32 s26, 52(sp)
   1f434:	7e c3 00 88 	store_32 s27, 48(sp)
   1f438:	fe b3 00 88 	store_32 ra, 44(sp)
   1f43c:	74 04 00 4f 	movehi s3, 52
   1f440:	42 44 00 0a 	shr s2, s2, 17
   1f444:	83 40 19 00 	or s4, s3, 1616
   1f448:	9e a0 00 88 	store_32 s4, 40(sp)
   1f44c:	1e 90 00 88 	store_32 s0, 36(sp)
   1f450:	00 00 00 a8 	load_32 s0, (s0)
   1f454:	64 00 00 a8 	load_32 s3, (s4)
   1f458:	83 00 00 4f 	movehi s4, 3
   1f45c:	20 83 f0 c0 	move s25, s1
   1f460:	84 f0 7f 00 	or s4, s4, 8188
   1f464:	62 03 12 c0 	and s27, s2, s4
   1f468:	43 80 5d c0 	add_i s2, s3, s27
   1f46c:	22 00 00 a8 	load_32 s1, (s2)
   1f470:	b1 f2 ff f9 	call -13628 <FixedMul>
   1f474:	2d 04 00 4f 	movehi s1, 45
   1f478:	40 03 f0 c0 	move s26, s0
   1f47c:	19 00 00 a8 	load_32 s0, (s25)
   1f480:	21 90 41 00 	or s1, s1, 4196
   1f484:	01 83 5d c0 	add_i s24, s1, s27
   1f488:	38 00 00 a8 	load_32 s1, (s24)
   1f48c:	aa f2 ff f9 	call -13656 <FixedMul>
   1f490:	1a 00 60 c0 	sub_i s0, s26, s0
   1f494:	1e 80 00 88 	store_32 s0, 32(sp)
   1f498:	5e 93 00 a8 	load_32 s26, 36(sp)
   1f49c:	1a 00 00 a8 	load_32 s0, (s26)
   1f4a0:	38 00 00 a8 	load_32 s1, (s24)
   1f4a4:	a4 f2 ff f9 	call -13680 <FixedMul>
   1f4a8:	59 00 00 a8 	load_32 s2, (s25)
   1f4ac:	3e a0 00 a8 	load_32 s1, 40(sp)
   1f4b0:	21 00 00 a8 	load_32 s1, (s1)
   1f4b4:	00 03 f0 c0 	move s24, s0
   1f4b8:	21 80 5d c0 	add_i s1, s1, s27
   1f4bc:	21 00 00 a8 	load_32 s1, (s1)
   1f4c0:	00 00 f1 c0 	move s0, s2
   1f4c4:	9c f2 ff f9 	call -13712 <FixedMul>
   1f4c8:	00 00 5c c0 	add_i s0, s0, s24
   1f4cc:	19 00 00 88 	store_32 s0, (s25)
   1f4d0:	1e 80 00 a8 	load_32 s0, 32(sp)
   1f4d4:	1a 00 00 88 	store_32 s0, (s26)
   1f4d8:	fe b3 00 a8 	load_32 ra, 44(sp)
   1f4dc:	7e c3 00 a8 	load_32 s27, 48(sp)
   1f4e0:	5e d3 00 a8 	load_32 s26, 52(sp)
   1f4e4:	3e e3 00 a8 	load_32 s25, 56(sp)
   1f4e8:	1e f3 00 a8 	load_32 s24, 60(sp)
   1f4ec:	de 03 01 05 	add_i sp, sp, 64
   1f4f0:	1f 00 00 f0 	ret

000000000001f4f4 AM_drawLineCharacter:
   1f4f4:	de 03 fe 05 	add_i sp, sp, -128
   1f4f8:	1e f3 01 88 	store_32 s24, 124(sp)
   1f4fc:	3e e3 01 88 	store_32 s25, 120(sp)
   1f500:	5e d3 01 88 	store_32 s26, 116(sp)
   1f504:	7e c3 01 88 	store_32 s27, 112(sp)
   1f508:	fe b3 01 88 	store_32 ra, 108(sp)
   1f50c:	3e b0 00 88 	store_32 s1, 44(sp)
   1f510:	21 04 00 14 	cmplt_i s1, s1, 1
   1f514:	de 00 01 88 	store_32 s6, 64(sp)
   1f518:	be f0 00 88 	store_32 s5, 60(sp)
   1f51c:	9e 90 00 88 	store_32 s4, 36(sp)
   1f520:	7e 10 01 88 	store_32 s3, 68(sp)
   1f524:	5e 50 01 88 	store_32 s2, 84(sp)
   1f528:	1e a0 00 88 	store_32 s0, 40(sp)
   1f52c:	21 12 00 f4 	bnz s1, 580 <AM_drawLineCharacter+0x27c>
   1f530:	3e 10 01 a8 	load_32 s1, 68(sp)
   1f534:	0d 04 00 4f 	movehi s0, 45
   1f538:	60 03 00 0f 	move s27, 0
   1f53c:	00 90 41 00 	or s0, s0, 4196
   1f540:	21 4c 00 0a 	shr s1, s1, 19
   1f544:	21 08 00 0b 	shl s1, s1, 2
   1f548:	3e 40 01 88 	store_32 s1, 80(sp)
   1f54c:	00 80 50 c0 	add_i s0, s0, s1
   1f550:	1e d0 00 88 	store_32 s0, 52(sp)
   1f554:	1e 60 01 05 	add_i s0, sp, 88
   1f558:	34 04 00 4f 	movehi s1, 52
   1f55c:	40 10 00 00 	or s2, s0, 4
   1f560:	01 40 19 00 	or s0, s1, 1616
   1f564:	1e 30 01 88 	store_32 s0, 76(sp)
   1f568:	5e 20 01 88 	store_32 s2, 72(sp)
   1f56c:	3e a0 00 a8 	load_32 s1, 40(sp)
   1f570:	1b 10 00 0b 	shl s0, s27, 4
   1f574:	01 03 50 c0 	add_i s24, s1, s0
   1f578:	58 03 00 a8 	load_32 s26, (s24)
   1f57c:	5e 63 01 88 	store_32 s26, 88(sp)
   1f580:	38 13 00 a8 	load_32 s25, 4(s24)
   1f584:	22 03 00 88 	store_32 s25, (s2)
   1f588:	1e 50 01 a8 	load_32 s0, 84(sp)
   1f58c:	7e e3 00 88 	store_32 s27, 56(sp)
   1f590:	a0 01 00 f2 	bz s0, 52 <AM_drawLineCharacter+0xd0>
   1f594:	7e 53 01 a8 	load_32 s27, 84(sp)
   1f598:	00 80 fd c0 	move s0, s27
   1f59c:	20 00 fd c0 	move s1, s26
   1f5a0:	65 f2 ff f9 	call -13932 <FixedMul>
   1f5a4:	40 03 f0 c0 	move s26, s0
   1f5a8:	5e 63 01 88 	store_32 s26, 88(sp)
   1f5ac:	00 80 fd c0 	move s0, s27
   1f5b0:	20 80 fc c0 	move s1, s25
   1f5b4:	60 f2 ff f9 	call -13952 <FixedMul>
   1f5b8:	5e 20 01 a8 	load_32 s2, 72(sp)
   1f5bc:	20 03 f0 c0 	move s25, s0
   1f5c0:	22 03 00 88 	store_32 s25, (s2)
   1f5c4:	1e 10 01 a8 	load_32 s0, 68(sp)
   1f5c8:	00 04 00 f2 	bz s0, 128 <AM_drawLineCharacter+0x154>
   1f5cc:	1e 30 01 a8 	load_32 s0, 76(sp)
   1f5d0:	00 00 00 a8 	load_32 s0, (s0)
   1f5d4:	3e 40 01 a8 	load_32 s1, 80(sp)
   1f5d8:	00 80 50 c0 	add_i s0, s0, s1
   1f5dc:	20 00 00 a8 	load_32 s1, (s0)
   1f5e0:	00 00 fd c0 	move s0, s26
   1f5e4:	54 f2 ff f9 	call -14000 <FixedMul>
   1f5e8:	1e c0 00 88 	store_32 s0, 48(sp)
   1f5ec:	7e d3 00 a8 	load_32 s27, 52(sp)
   1f5f0:	3b 00 00 a8 	load_32 s1, (s27)
   1f5f4:	00 80 fc c0 	move s0, s25
   1f5f8:	4f f2 ff f9 	call -14020 <FixedMul>
   1f5fc:	3e c0 00 a8 	load_32 s1, 48(sp)
   1f600:	01 00 60 c0 	sub_i s0, s1, s0
   1f604:	1e c0 00 88 	store_32 s0, 48(sp)
   1f608:	3b 00 00 a8 	load_32 s1, (s27)
   1f60c:	00 00 fd c0 	move s0, s26
   1f610:	49 f2 ff f9 	call -14044 <FixedMul>
   1f614:	3e 30 01 a8 	load_32 s1, 76(sp)
   1f618:	21 00 00 a8 	load_32 s1, (s1)
   1f61c:	5e 40 01 a8 	load_32 s2, 80(sp)
   1f620:	40 03 f0 c0 	move s26, s0
   1f624:	21 00 51 c0 	add_i s1, s1, s2
   1f628:	21 00 00 a8 	load_32 s1, (s1)
   1f62c:	00 80 fc c0 	move s0, s25
   1f630:	41 f2 ff f9 	call -14076 <FixedMul>
   1f634:	5e 20 01 a8 	load_32 s2, 72(sp)
   1f638:	20 03 5d c0 	add_i s25, s0, s26
   1f63c:	22 03 00 88 	store_32 s25, (s2)
   1f640:	5e c3 00 a8 	load_32 s26, 48(sp)
   1f644:	5e 63 01 88 	store_32 s26, 88(sp)
   1f648:	1e f0 00 a8 	load_32 s0, 60(sp)
   1f64c:	1a 00 50 c0 	add_i s0, s26, s0
   1f650:	1e 60 01 88 	store_32 s0, 88(sp)
   1f654:	1e 00 01 a8 	load_32 s0, 64(sp)
   1f658:	19 00 50 c0 	add_i s0, s25, s0
   1f65c:	02 00 00 88 	store_32 s0, (s2)
   1f660:	58 23 00 a8 	load_32 s26, 8(s24)
   1f664:	5e 83 01 88 	store_32 s26, 96(sp)
   1f668:	38 33 00 a8 	load_32 s25, 12(s24)
   1f66c:	3e 93 01 88 	store_32 s25, 100(sp)
   1f670:	1e 50 01 a8 	load_32 s0, 84(sp)
   1f674:	80 01 00 f2 	bz s0, 48 <AM_drawLineCharacter+0x1b0>
   1f678:	1e 53 01 a8 	load_32 s24, 84(sp)
   1f67c:	00 00 fc c0 	move s0, s24
   1f680:	20 00 fd c0 	move s1, s26
   1f684:	2c f2 ff f9 	call -14160 <FixedMul>
   1f688:	40 03 f0 c0 	move s26, s0
   1f68c:	5e 83 01 88 	store_32 s26, 96(sp)
   1f690:	00 00 fc c0 	move s0, s24
   1f694:	20 80 fc c0 	move s1, s25
   1f698:	27 f2 ff f9 	call -14180 <FixedMul>
   1f69c:	20 03 f0 c0 	move s25, s0
   1f6a0:	3e 93 01 88 	store_32 s25, 100(sp)
   1f6a4:	1e 10 01 a8 	load_32 s0, 68(sp)
   1f6a8:	a0 03 00 f2 	bz s0, 116 <AM_drawLineCharacter+0x228>
   1f6ac:	1e 30 01 a8 	load_32 s0, 76(sp)
   1f6b0:	00 00 00 a8 	load_32 s0, (s0)
   1f6b4:	3e 40 01 a8 	load_32 s1, 80(sp)
   1f6b8:	00 80 50 c0 	add_i s0, s0, s1
   1f6bc:	20 00 00 a8 	load_32 s1, (s0)
   1f6c0:	00 00 fd c0 	move s0, s26
   1f6c4:	1c f2 ff f9 	call -14224 <FixedMul>
   1f6c8:	00 03 f0 c0 	move s24, s0
   1f6cc:	7e d3 00 a8 	load_32 s27, 52(sp)
   1f6d0:	3b 00 00 a8 	load_32 s1, (s27)
   1f6d4:	00 80 fc c0 	move s0, s25
   1f6d8:	17 f2 ff f9 	call -14244 <FixedMul>
   1f6dc:	3b 00 00 a8 	load_32 s1, (s27)
   1f6e0:	18 03 60 c0 	sub_i s24, s24, s0
   1f6e4:	00 00 fd c0 	move s0, s26
   1f6e8:	13 f2 ff f9 	call -14260 <FixedMul>
   1f6ec:	3e 30 01 a8 	load_32 s1, 76(sp)
   1f6f0:	21 00 00 a8 	load_32 s1, (s1)
   1f6f4:	5e 40 01 a8 	load_32 s2, 80(sp)
   1f6f8:	40 03 f0 c0 	move s26, s0
   1f6fc:	21 00 51 c0 	add_i s1, s1, s2
   1f700:	21 00 00 a8 	load_32 s1, (s1)
   1f704:	00 80 fc c0 	move s0, s25
   1f708:	0b f2 ff f9 	call -14292 <FixedMul>
   1f70c:	20 03 5d c0 	add_i s25, s0, s26
   1f710:	3e 93 01 88 	store_32 s25, 100(sp)
   1f714:	1e 83 01 88 	store_32 s24, 96(sp)
   1f718:	40 03 fc c0 	move s26, s24
   1f71c:	7e e3 00 a8 	load_32 s27, 56(sp)
   1f720:	1e f0 00 a8 	load_32 s0, 60(sp)
   1f724:	1a 00 50 c0 	add_i s0, s26, s0
   1f728:	1e 80 01 88 	store_32 s0, 96(sp)
   1f72c:	1e 00 01 a8 	load_32 s0, 64(sp)
   1f730:	19 00 50 c0 	add_i s0, s25, s0
   1f734:	1e 90 01 88 	store_32 s0, 100(sp)
   1f738:	00 0c 00 4f 	movehi s0, 96
   1f73c:	20 33 26 00 	or s25, s0, 2444
   1f740:	1e 60 01 05 	add_i s0, sp, 88
   1f744:	20 80 fc c0 	move s1, s25
   1f748:	f8 fb ff f9 	call -4128 <AM_clipMline>
   1f74c:	80 00 00 f2 	bz s0, 16 <AM_drawLineCharacter+0x268>
   1f750:	00 80 fc c0 	move s0, s25
   1f754:	3e 90 00 a8 	load_32 s1, 36(sp)
   1f758:	89 fd ff f9 	call -2524 <AM_drawFline>
   1f75c:	1e b0 00 a8 	load_32 s0, 44(sp)
   1f760:	7b 07 00 05 	add_i s27, s27, 1
   1f764:	5e 20 01 a8 	load_32 s2, 72(sp)
   1f768:	1b 00 40 c1 	cmplt_i s0, s27, s0
   1f76c:	00 f0 ff f5 	bnz s0, -512 <AM_drawLineCharacter+0x78>
   1f770:	fe b3 01 a8 	load_32 ra, 108(sp)
   1f774:	7e c3 01 a8 	load_32 s27, 112(sp)
   1f778:	5e d3 01 a8 	load_32 s26, 116(sp)
   1f77c:	3e e3 01 a8 	load_32 s25, 120(sp)
   1f780:	1e f3 01 a8 	load_32 s24, 124(sp)
   1f784:	de 03 02 05 	add_i sp, sp, 128
   1f788:	1f 00 00 f0 	ret

000000000001f78c AM_drawPlayers:
   1f78c:	de 03 ff 05 	add_i sp, sp, -64
   1f790:	1e f3 00 88 	store_32 s24, 60(sp)
   1f794:	3e e3 00 88 	store_32 s25, 56(sp)
   1f798:	5e d3 00 88 	store_32 s26, 52(sp)
   1f79c:	7e c3 00 88 	store_32 s27, 48(sp)
   1f7a0:	fe b3 00 88 	store_32 ra, 44(sp)
   1f7a4:	1b 04 00 4f 	movehi s0, 59
   1f7a8:	00 c0 01 00 	or s0, s0, 112
   1f7ac:	00 00 00 a8 	load_32 s0, (s0)
   1f7b0:	80 02 00 f2 	bz s0, 80 <AM_drawPlayers+0x74>
   1f7b4:	1a 04 00 4f 	movehi s0, 58
   1f7b8:	3b 04 00 4f 	movehi s1, 59
   1f7bc:	40 0c 00 4f 	movehi s2, 96
   1f7c0:	40 63 6e 00 	or s26, s0, 7064
   1f7c4:	21 a3 18 00 	or s25, s1, 1576
   1f7c8:	02 b3 22 00 	or s24, s2, 2220
   1f7cc:	1a 00 00 a8 	load_32 s0, (s26)
   1f7d0:	60 03 00 0f 	move s27, 0
   1f7d4:	59 00 00 a8 	load_32 s2, (s25)
   1f7d8:	38 00 00 a8 	load_32 s1, (s24)
   1f7dc:	00 03 00 f2 	bz s0, 96 <AM_drawPlayers+0xb0>
   1f7e0:	e2 02 00 f4 	bnz s2, 92 <AM_drawPlayers+0xb0>
   1f7e4:	7b 04 00 4f 	movehi s3, 59
   1f7e8:	63 40 02 00 	or s3, s3, 144
   1f7ec:	61 80 01 c1 	cmpeq_i s3, s1, s3
   1f7f0:	63 02 00 f4 	bnz s3, 76 <AM_drawPlayers+0xb0>
   1f7f4:	40 80 fd c0 	move s2, s27
   1f7f8:	20 07 00 f2 	bz s0, 228 <AM_drawPlayers+0x150>
   1f7fc:	2f 00 00 f6 	b 188 <AM_drawPlayers+0x12c>
   1f800:	00 0c 00 4f 	movehi s0, 96
   1f804:	20 0c 00 4f 	movehi s1, 96
   1f808:	00 f0 25 00 	or s0, s0, 2428
   1f80c:	21 b0 22 00 	or s1, s1, 2220
   1f810:	00 00 00 a8 	load_32 s0, (s0)
   1f814:	21 00 00 a8 	load_32 s1, (s1)
   1f818:	21 00 00 a8 	load_32 s1, (s1)
   1f81c:	61 80 00 a8 	load_32 s3, 32(s1)
   1f820:	a1 30 00 a8 	load_32 s5, 12(s1)
   1f824:	c1 40 00 a8 	load_32 s6, 16(s1)
   1f828:	00 02 00 f2 	bz s0, 64 <AM_drawPlayers+0xdc>
   1f82c:	13 04 00 4f 	movehi s0, 51
   1f830:	20 40 00 0f 	move s1, 16
   1f834:	00 50 73 00 	or s0, s0, 7380
   1f838:	0f 00 00 f6 	b 60 <AM_drawPlayers+0xe8>
   1f83c:	7b 04 00 4f 	movehi s3, 59
   1f840:	63 00 02 00 	or s3, s3, 128
   1f844:	63 00 00 a8 	load_32 s3, (s3)
   1f848:	63 03 00 f2 	bz s3, 108 <AM_drawPlayers+0x128>
   1f84c:	1b 04 00 4f 	movehi s0, 59
   1f850:	00 40 02 00 	or s0, s0, 144
   1f854:	20 d0 00 a8 	load_32 s1, 52(s0)
   1f858:	21 00 00 10 	cmpeq_i s1, s1, 0
   1f85c:	21 01 00 f4 	bnz s1, 36 <AM_drawPlayers+0xf4>
   1f860:	80 d8 03 0f 	move s4, 246
   1f864:	08 00 00 f6 	b 32 <AM_drawPlayers+0xf8>
   1f868:	13 04 00 4f 	movehi s0, 51
   1f86c:	20 1c 00 0f 	move s1, 7
   1f870:	00 90 71 00 	or s0, s0, 7268
   1f874:	40 00 00 0f 	move s2, 0
   1f878:	80 44 03 0f 	move s4, 209
   1f87c:	72 00 00 f6 	b 456 <AM_drawPlayers+0x2b8>
   1f880:	80 c0 01 0f 	move s4, 112
   1f884:	00 00 00 a8 	load_32 s0, (s0)
   1f888:	20 1c 00 0f 	move s1, 7
   1f88c:	40 00 00 0f 	move s2, 0
   1f890:	60 80 00 a8 	load_32 s3, 32(s0)
   1f894:	a0 30 00 a8 	load_32 s5, 12(s0)
   1f898:	c0 40 00 a8 	load_32 s6, 16(s0)
   1f89c:	13 04 00 4f 	movehi s0, 51
   1f8a0:	00 90 71 00 	or s0, s0, 7268
   1f8a4:	14 ff ff f9 	call -944 <AM_drawLineCharacter>
   1f8a8:	1a 00 00 a8 	load_32 s0, (s26)
   1f8ac:	59 00 00 a8 	load_32 s2, (s25)
   1f8b0:	38 00 00 a8 	load_32 s1, (s24)
   1f8b4:	40 01 00 f2 	bz s0, 40 <AM_drawPlayers+0x150>
   1f8b8:	22 01 00 f4 	bnz s2, 36 <AM_drawPlayers+0x150>
   1f8bc:	7b 04 00 4f 	movehi s3, 59
   1f8c0:	63 40 02 00 	or s3, s3, 144
   1f8c4:	63 60 04 05 	add_i s3, s3, 280
   1f8c8:	61 80 01 c1 	cmpeq_i s3, s1, s3
   1f8cc:	83 00 00 f4 	bnz s3, 16 <AM_drawPlayers+0x150>
   1f8d0:	40 80 fd c0 	move s2, s27
   1f8d4:	00 05 00 f2 	bz s0, 160 <AM_drawPlayers+0x1e8>
   1f8d8:	1a 00 00 f6 	b 104 <AM_drawPlayers+0x1b4>
   1f8dc:	7b 04 00 4f 	movehi s3, 59
   1f8e0:	63 00 02 00 	or s3, s3, 128
   1f8e4:	63 10 00 a8 	load_32 s3, 4(s3)
   1f8e8:	a3 02 00 f2 	bz s3, 84 <AM_drawPlayers+0x1b0>
   1f8ec:	1b 04 00 4f 	movehi s0, 59
   1f8f0:	00 40 02 00 	or s0, s0, 144
   1f8f4:	20 30 05 a8 	load_32 s1, 332(s0)
   1f8f8:	21 00 00 10 	cmpeq_i s1, s1, 0
   1f8fc:	61 00 00 f4 	bnz s1, 12 <AM_drawPlayers+0x17c>
   1f900:	80 d8 03 0f 	move s4, 246
   1f904:	02 00 00 f6 	b 8 <AM_drawPlayers+0x180>
   1f908:	80 80 01 0f 	move s4, 96
   1f90c:	00 60 04 a8 	load_32 s0, 280(s0)
   1f910:	20 1c 00 0f 	move s1, 7
   1f914:	40 00 00 0f 	move s2, 0
   1f918:	60 80 00 a8 	load_32 s3, 32(s0)
   1f91c:	a0 30 00 a8 	load_32 s5, 12(s0)
   1f920:	c0 40 00 a8 	load_32 s6, 16(s0)
   1f924:	13 04 00 4f 	movehi s0, 51
   1f928:	00 90 71 00 	or s0, s0, 7268
   1f92c:	f2 fe ff f9 	call -1080 <AM_drawLineCharacter>
   1f930:	1a 00 00 a8 	load_32 s0, (s26)
   1f934:	59 00 00 a8 	load_32 s2, (s25)
   1f938:	38 00 00 a8 	load_32 s1, (s24)
   1f93c:	c0 01 00 f2 	bz s0, 56 <AM_drawPlayers+0x1e8>
   1f940:	a2 01 00 f4 	bnz s2, 52 <AM_drawPlayers+0x1e8>
   1f944:	7b 04 00 4f 	movehi s3, 59
   1f948:	63 40 02 00 	or s3, s3, 144
   1f94c:	63 c0 08 05 	add_i s3, s3, 560
   1f950:	61 80 11 c1 	cmpne_i s3, s1, s3
   1f954:	43 00 00 f4 	bnz s3, 8 <AM_drawPlayers+0x1d0>
   1f958:	07 00 00 f6 	b 28 <AM_drawPlayers+0x1e8>
   1f95c:	40 80 fd c0 	move s2, s27
   1f960:	7b 04 00 4f 	movehi s3, 59
   1f964:	63 00 02 00 	or s3, s3, 128
   1f968:	63 30 00 a8 	load_32 s3, 12(s3)
   1f96c:	e3 06 00 f2 	bz s3, 220 <AM_drawPlayers+0x2bc>
   1f970:	1d 00 00 f6 	b 116 <AM_drawPlayers+0x258>
   1f974:	7b 04 00 4f 	movehi s3, 59
   1f978:	63 00 02 00 	or s3, s3, 128
   1f97c:	63 20 00 a8 	load_32 s3, 8(s3)
   1f980:	a3 02 00 f2 	bz s3, 84 <AM_drawPlayers+0x248>
   1f984:	1b 04 00 4f 	movehi s0, 59
   1f988:	00 40 02 00 	or s0, s0, 144
   1f98c:	20 90 09 a8 	load_32 s1, 612(s0)
   1f990:	21 00 00 10 	cmpeq_i s1, s1, 0
   1f994:	61 00 00 f4 	bnz s1, 12 <AM_drawPlayers+0x214>
   1f998:	80 d8 03 0f 	move s4, 246
   1f99c:	02 00 00 f6 	b 8 <AM_drawPlayers+0x218>
   1f9a0:	80 00 01 0f 	move s4, 64
   1f9a4:	00 c0 08 a8 	load_32 s0, 560(s0)
   1f9a8:	20 1c 00 0f 	move s1, 7
   1f9ac:	40 00 00 0f 	move s2, 0
   1f9b0:	60 80 00 a8 	load_32 s3, 32(s0)
   1f9b4:	a0 30 00 a8 	load_32 s5, 12(s0)
   1f9b8:	c0 40 00 a8 	load_32 s6, 16(s0)
   1f9bc:	13 04 00 4f 	movehi s0, 51
   1f9c0:	00 90 71 00 	or s0, s0, 7268
   1f9c4:	cc fe ff f9 	call -1232 <AM_drawLineCharacter>
   1f9c8:	1a 00 00 a8 	load_32 s0, (s26)
   1f9cc:	59 00 00 a8 	load_32 s2, (s25)
   1f9d0:	38 00 00 a8 	load_32 s1, (s24)
   1f9d4:	7b 04 00 4f 	movehi s3, 59
   1f9d8:	63 00 02 00 	or s3, s3, 128
   1f9dc:	63 30 00 a8 	load_32 s3, 12(s3)
   1f9e0:	43 03 00 f2 	bz s3, 104 <AM_drawPlayers+0x2bc>
   1f9e4:	7b 04 00 4f 	movehi s3, 59
   1f9e8:	80 00 00 10 	cmpeq_i s4, s0, 0
   1f9ec:	42 00 00 11 	cmpne_i s2, s2, 0
   1f9f0:	03 40 02 00 	or s0, s3, 144
   1f9f4:	44 00 01 c0 	or s2, s4, s2
   1f9f8:	60 20 0d 05 	add_i s3, s0, 840
   1f9fc:	21 80 01 c1 	cmpeq_i s1, s1, s3
   1fa00:	22 80 00 c0 	or s1, s2, s1
   1fa04:	21 04 00 01 	and s1, s1, 1
   1fa08:	01 02 00 f2 	bz s1, 64 <AM_drawPlayers+0x2bc>
   1fa0c:	20 f0 0d a8 	load_32 s1, 892(s0)
   1fa10:	21 00 00 10 	cmpeq_i s1, s1, 0
   1fa14:	61 00 00 f4 	bnz s1, 12 <AM_drawPlayers+0x294>
   1fa18:	80 d8 03 0f 	move s4, 246
   1fa1c:	02 00 00 f6 	b 8 <AM_drawPlayers+0x298>
   1fa20:	80 c0 02 0f 	move s4, 176
   1fa24:	00 20 0d a8 	load_32 s0, 840(s0)
   1fa28:	20 1c 00 0f 	move s1, 7
   1fa2c:	40 00 00 0f 	move s2, 0
   1fa30:	60 80 00 a8 	load_32 s3, 32(s0)
   1fa34:	a0 30 00 a8 	load_32 s5, 12(s0)
   1fa38:	c0 40 00 a8 	load_32 s6, 16(s0)
   1fa3c:	13 04 00 4f 	movehi s0, 51
   1fa40:	00 90 71 00 	or s0, s0, 7268
   1fa44:	ac fe ff f9 	call -1360 <AM_drawLineCharacter>
   1fa48:	fe b3 00 a8 	load_32 ra, 44(sp)
   1fa4c:	7e c3 00 a8 	load_32 s27, 48(sp)
   1fa50:	5e d3 00 a8 	load_32 s26, 52(sp)
   1fa54:	3e e3 00 a8 	load_32 s25, 56(sp)
   1fa58:	1e f3 00 a8 	load_32 s24, 60(sp)
   1fa5c:	de 03 01 05 	add_i sp, sp, 64
   1fa60:	1f 00 00 f0 	ret

000000000001fa64 AM_drawThings:
   1fa64:	de 03 ff 05 	add_i sp, sp, -64
   1fa68:	1e f3 00 88 	store_32 s24, 60(sp)
   1fa6c:	3e e3 00 88 	store_32 s25, 56(sp)
   1fa70:	5e d3 00 88 	store_32 s26, 52(sp)
   1fa74:	7e c3 00 88 	store_32 s27, 48(sp)
   1fa78:	fe b3 00 88 	store_32 ra, 44(sp)
   1fa7c:	3b 04 00 4f 	movehi s1, 59
   1fa80:	21 80 4a 00 	or s1, s1, 4768
   1fa84:	3e 60 00 88 	store_32 s1, 24(sp)
   1fa88:	01 01 00 a8 	load_32 s8, (s1)
   1fa8c:	20 03 f0 c0 	move s25, s0
   1fa90:	48 04 00 14 	cmplt_i s2, s8, 1
   1fa94:	c2 04 00 f4 	bnz s2, 152 <AM_drawThings+0xc8>
   1fa98:	40 0c 00 4f 	movehi s2, 96
   1fa9c:	73 04 00 4f 	movehi s3, 51
   1faa0:	1b 04 00 4f 	movehi s0, 59
   1faa4:	c2 a0 24 00 	or s6, s2, 2344
   1faa8:	a0 00 00 0f 	move s5, 0
   1faac:	63 13 78 00 	or s27, s3, 7684
   1fab0:	40 0f 00 0f 	move s26, 3
   1fab4:	40 10 00 4f 	movehi s2, 128
   1fab8:	00 80 4b 00 	or s0, s0, 4832
   1fabc:	1e 70 00 88 	store_32 s0, 28(sp)
   1fac0:	de a0 00 88 	store_32 s6, 40(sp)
   1fac4:	5e 90 00 88 	store_32 s2, 36(sp)
   1fac8:	1e 70 00 a8 	load_32 s0, 28(sp)
   1facc:	65 60 01 07 	mull_i s3, s5, 88
   1fad0:	00 00 00 a8 	load_32 s0, (s0)
   1fad4:	00 80 51 c0 	add_i s0, s0, s3
   1fad8:	00 23 01 a8 	load_32 s24, 72(s0)
   1fadc:	38 02 00 f2 	bz s24, 68 <AM_drawThings+0xbc>
   1fae0:	be 80 00 88 	store_32 s5, 32(sp)
   1fae4:	78 80 00 a8 	load_32 s3, 32(s24)
   1fae8:	06 00 00 a8 	load_32 s0, (s6)
   1faec:	b8 30 00 a8 	load_32 s5, 12(s24)
   1faf0:	d8 40 00 a8 	load_32 s6, 16(s24)
   1faf4:	80 80 5c c0 	add_i s4, s0, s25
   1faf8:	00 80 fd c0 	move s0, s27
   1fafc:	20 00 fd c0 	move s1, s26
   1fb00:	7d fe ff f9 	call -1548 <AM_drawLineCharacter>
   1fb04:	5e 90 00 a8 	load_32 s2, 36(sp)
   1fb08:	de a0 00 a8 	load_32 s6, 40(sp)
   1fb0c:	18 63 00 a8 	load_32 s24, 24(s24)
   1fb10:	b8 fe ff f5 	bnz s24, -44 <AM_drawThings+0x80>
   1fb14:	1e 60 00 a8 	load_32 s0, 24(sp)
   1fb18:	00 01 00 a8 	load_32 s8, (s0)
   1fb1c:	be 80 00 a8 	load_32 s5, 32(sp)
   1fb20:	a5 04 00 05 	add_i s5, s5, 1
   1fb24:	05 00 44 c1 	cmplt_i s0, s5, s8
   1fb28:	00 fd ff f5 	bnz s0, -96 <AM_drawThings+0x64>
   1fb2c:	fe b3 00 a8 	load_32 ra, 44(sp)
   1fb30:	7e c3 00 a8 	load_32 s27, 48(sp)
   1fb34:	5e d3 00 a8 	load_32 s26, 52(sp)
   1fb38:	3e e3 00 a8 	load_32 s25, 56(sp)
   1fb3c:	1e f3 00 a8 	load_32 s24, 60(sp)
   1fb40:	de 03 01 05 	add_i sp, sp, 64
   1fb44:	1f 00 00 f0 	ret

000000000001fb48 AM_drawMarks:
   1fb48:	de 03 fe 05 	add_i sp, sp, -128
   1fb4c:	1e f3 01 88 	store_32 s24, 124(sp)
   1fb50:	3e e3 01 88 	store_32 s25, 120(sp)
   1fb54:	5e d3 01 88 	store_32 s26, 116(sp)
   1fb58:	7e c3 01 88 	store_32 s27, 112(sp)
   1fb5c:	fe b3 01 88 	store_32 ra, 108(sp)
   1fb60:	00 0c 00 4f 	movehi s0, 96
   1fb64:	40 0c 00 4f 	movehi s2, 96
   1fb68:	33 04 00 4f 	movehi s1, 51
   1fb6c:	00 c0 22 00 	or s0, s0, 2224
   1fb70:	1e a0 01 88 	store_32 s0, 104(sp)
   1fb74:	00 0c 00 4f 	movehi s0, 96
   1fb78:	21 e3 78 00 	or s25, s1, 7736
   1fb7c:	20 0c 00 4f 	movehi s1, 96
   1fb80:	00 f0 21 00 	or s0, s0, 2172
   1fb84:	1e 70 01 88 	store_32 s0, 92(sp)
   1fb88:	02 40 22 00 	or s0, s2, 2192
   1fb8c:	1e 80 01 88 	store_32 s0, 96(sp)
   1fb90:	00 0c 00 4f 	movehi s0, 96
   1fb94:	40 a0 02 0f 	move s2, 168
   1fb98:	5e 60 01 88 	store_32 s2, 88(sp)
   1fb9c:	60 03 00 0f 	move s27, 0
   1fba0:	00 10 22 00 	or s0, s0, 2180
   1fba4:	1e 50 01 88 	store_32 s0, 84(sp)
   1fba8:	01 20 22 00 	or s0, s1, 2184
   1fbac:	1e 30 01 88 	store_32 s0, 76(sp)
   1fbb0:	00 ec ff 0f 	move s0, -5
   1fbb4:	1e 10 01 88 	store_32 s0, 68(sp)
   1fbb8:	00 ec 04 0f 	move s0, 315
   1fbbc:	1e 20 01 88 	store_32 s0, 72(sp)
   1fbc0:	00 0c 00 4f 	movehi s0, 96
   1fbc4:	20 e8 ff 0f 	move s1, -6
   1fbc8:	3e f0 00 88 	store_32 s1, 60(sp)
   1fbcc:	20 88 02 0f 	move s1, 162
   1fbd0:	3e 00 01 88 	store_32 s1, 64(sp)
   1fbd4:	00 d0 24 00 	or s0, s0, 2356
   1fbd8:	1e e0 00 88 	store_32 s0, 56(sp)
   1fbdc:	7e 43 01 88 	store_32 s27, 80(sp)
   1fbe0:	3e a0 01 a8 	load_32 s1, 104(sp)
   1fbe4:	1b 0c 00 0b 	shl s0, s27, 3
   1fbe8:	41 03 50 c0 	add_i s26, s1, s0
   1fbec:	1a 00 00 a8 	load_32 s0, (s26)
   1fbf0:	20 fc ff 10 	cmpeq_i s1, s0, -1
   1fbf4:	41 06 00 f4 	bnz s1, 200 <AM_drawMarks+0x174>
   1fbf8:	3e 70 01 a8 	load_32 s1, 92(sp)
   1fbfc:	21 00 00 a8 	load_32 s1, (s1)
   1fc00:	00 80 60 c0 	sub_i s0, s0, s1
   1fc04:	39 00 00 a8 	load_32 s1, (s25)
   1fc08:	cb f0 ff f9 	call -15572 <FixedMul>
   1fc0c:	3e 80 01 a8 	load_32 s1, 96(sp)
   1fc10:	21 00 00 a0 	load_u8 s1, (s1)
   1fc14:	00 03 f0 c0 	move s24, s0
   1fc18:	1e 60 01 a8 	load_32 s0, 88(sp)
   1fc1c:	21 00 00 11 	cmpne_i s1, s1, 0
   1fc20:	41 00 00 f4 	bnz s1, 8 <AM_drawMarks+0xe0>
   1fc24:	1e 40 01 a8 	load_32 s0, 80(sp)
   1fc28:	1e 90 01 88 	store_32 s0, 100(sp)
   1fc2c:	1a 10 00 a8 	load_32 s0, 4(s26)
   1fc30:	3e 50 01 a8 	load_32 s1, 84(sp)
   1fc34:	21 00 00 a8 	load_32 s1, (s1)
   1fc38:	00 80 60 c0 	sub_i s0, s0, s1
   1fc3c:	39 00 00 a8 	load_32 s1, (s25)
   1fc40:	bd f0 ff f9 	call -15628 <FixedMul>
   1fc44:	38 00 00 14 	cmplt_i s1, s24, 0
   1fc48:	a1 03 00 f4 	bnz s1, 116 <AM_drawMarks+0x174>
   1fc4c:	3e 30 01 a8 	load_32 s1, 76(sp)
   1fc50:	00 40 00 09 	ashr s0, s0, 16
   1fc54:	21 00 00 a0 	load_u8 s1, (s1)
   1fc58:	61 00 00 11 	cmpne_i s3, s1, 0
   1fc5c:	3e 90 01 a8 	load_32 s1, 100(sp)
   1fc60:	5e 20 01 a8 	load_32 s2, 72(sp)
   1fc64:	21 00 60 c0 	sub_i s1, s1, s0
   1fc68:	43 00 00 f4 	bnz s3, 8 <AM_drawMarks+0x128>
   1fc6c:	5e 10 01 a8 	load_32 s2, 68(sp)
   1fc70:	01 00 00 14 	cmplt_i s0, s1, 0
   1fc74:	40 02 00 f4 	bnz s0, 72 <AM_drawMarks+0x174>
   1fc78:	18 40 00 09 	ashr s0, s24, 16
   1fc7c:	40 00 21 c1 	cmpgt_i s2, s0, s2
   1fc80:	e2 01 00 f4 	bnz s2, 60 <AM_drawMarks+0x174>
   1fc84:	5e 80 01 a8 	load_32 s2, 96(sp)
   1fc88:	42 00 00 a0 	load_u8 s2, (s2)
   1fc8c:	62 00 00 11 	cmpne_i s3, s2, 0
   1fc90:	5e 00 01 a8 	load_32 s2, 64(sp)
   1fc94:	43 00 00 f4 	bnz s3, 8 <AM_drawMarks+0x154>
   1fc98:	5e f0 00 a8 	load_32 s2, 60(sp)
   1fc9c:	41 00 21 c1 	cmpgt_i s2, s1, s2
   1fca0:	e2 00 00 f4 	bnz s2, 28 <AM_drawMarks+0x174>
   1fca4:	7e e0 00 a8 	load_32 s3, 56(sp)
   1fca8:	5b 08 00 0b 	shl s2, s27, 2
   1fcac:	43 00 51 c0 	add_i s2, s3, s2
   1fcb0:	62 00 00 a8 	load_32 s3, (s2)
   1fcb4:	5e 40 01 a8 	load_32 s2, 80(sp)
   1fcb8:	04 99 00 f8 	call 156688 <V_DrawPatch>
   1fcbc:	7b 07 00 05 	add_i s27, s27, 1
   1fcc0:	1b 28 00 18 	cmplt_u s0, s27, 10
   1fcc4:	e0 f8 ff f5 	bnz s0, -228 <AM_drawMarks+0x98>
   1fcc8:	fe b3 01 a8 	load_32 ra, 108(sp)
   1fccc:	7e c3 01 a8 	load_32 s27, 112(sp)
   1fcd0:	5e d3 01 a8 	load_32 s26, 116(sp)
   1fcd4:	3e e3 01 a8 	load_32 s25, 120(sp)
   1fcd8:	1e f3 01 a8 	load_32 s24, 124(sp)
   1fcdc:	de 03 02 05 	add_i sp, sp, 128
   1fce0:	1f 00 00 f0 	ret

000000000001fce4 AM_drawCrosshair:
   1fce4:	20 0c 00 4f 	movehi s1, 96
   1fce8:	40 0c 00 4f 	movehi s2, 96
   1fcec:	21 80 24 00 	or s1, s1, 2336
   1fcf0:	42 20 22 00 	or s2, s2, 2184
   1fcf4:	21 00 00 a8 	load_32 s1, (s1)
   1fcf8:	42 00 00 a0 	load_u8 s2, (s2)
   1fcfc:	42 00 00 11 	cmpne_i s2, s2, 0
   1fd00:	62 00 00 f4 	bnz s2, 12 <AM_drawCrosshair+0x28>
   1fd04:	40 00 00 0f 	move s2, 0
   1fd08:	02 00 00 f6 	b 8 <AM_drawCrosshair+0x2c>
   1fd0c:	40 00 05 0f 	move s2, 320
   1fd10:	60 0c 00 4f 	movehi s3, 96
   1fd14:	63 40 22 00 	or s3, s3, 2192
   1fd18:	63 00 00 a0 	load_u8 s3, (s3)
   1fd1c:	63 00 00 11 	cmpne_i s3, s3, 0
   1fd20:	63 00 00 f4 	bnz s3, 12 <AM_drawCrosshair+0x48>
   1fd24:	60 04 00 0f 	move s3, 1
   1fd28:	02 00 00 f6 	b 8 <AM_drawCrosshair+0x4c>
   1fd2c:	60 a4 02 0f 	move s3, 169
   1fd30:	43 00 71 c0 	mull_i s2, s3, s2
   1fd34:	42 04 00 0a 	shr s2, s2, 1
   1fd38:	21 00 51 c0 	add_i s1, s1, s2
   1fd3c:	01 00 00 82 	store_8 s0, (s1)
   1fd40:	1f 00 00 f0 	ret

000000000001fd44 AM_Drawer:
   1fd44:	de 03 ff 05 	add_i sp, sp, -64
   1fd48:	1e f3 00 88 	store_32 s24, 60(sp)
   1fd4c:	3e e3 00 88 	store_32 s25, 56(sp)
   1fd50:	5e d3 00 88 	store_32 s26, 52(sp)
   1fd54:	7e c3 00 88 	store_32 s27, 48(sp)
   1fd58:	fe b3 00 88 	store_32 ra, 44(sp)
   1fd5c:	00 0c 00 4f 	movehi s0, 96
   1fd60:	00 d0 21 00 	or s0, s0, 2164
   1fd64:	00 00 00 a8 	load_32 s0, (s0)
   1fd68:	c0 0e 00 f2 	bz s0, 472 <AM_Drawer+0x1fc>
   1fd6c:	00 0c 00 4f 	movehi s0, 96
   1fd70:	20 0c 00 4f 	movehi s1, 96
   1fd74:	c0 80 24 00 	or s6, s0, 2336
   1fd78:	81 20 22 00 	or s4, s1, 2184
   1fd7c:	06 00 00 a8 	load_32 s0, (s6)
   1fd80:	24 00 00 a0 	load_u8 s1, (s4)
   1fd84:	41 00 00 11 	cmpne_i s2, s1, 0
   1fd88:	20 00 00 0f 	move s1, 0
   1fd8c:	62 00 00 f4 	bnz s2, 12 <AM_Drawer+0x54>
   1fd90:	40 80 f0 c0 	move s2, s1
   1fd94:	02 00 00 f6 	b 8 <AM_Drawer+0x58>
   1fd98:	40 00 05 0f 	move s2, 320
   1fd9c:	60 0c 00 4f 	movehi s3, 96
   1fda0:	a3 40 22 00 	or s5, s3, 2192
   1fda4:	65 00 00 a0 	load_u8 s3, (s5)
   1fda8:	9e 60 00 88 	store_32 s4, 24(sp)
   1fdac:	de 40 00 88 	store_32 s6, 16(sp)
   1fdb0:	63 00 00 11 	cmpne_i s3, s3, 0
   1fdb4:	63 00 00 f4 	bnz s3, 12 <AM_Drawer+0x7c>
   1fdb8:	60 80 f0 c0 	move s3, s1
   1fdbc:	02 00 00 f6 	b 8 <AM_Drawer+0x80>
   1fdc0:	60 a0 02 0f 	move s3, 168
   1fdc4:	43 00 71 c0 	mull_i s2, s3, s2
   1fdc8:	be 50 00 88 	store_32 s5, 20(sp)
   1fdcc:	36 c7 00 f8 	call 203992 <memset>
   1fdd0:	00 0c 00 4f 	movehi s0, 96
   1fdd4:	00 e0 25 00 	or s0, s0, 2424
   1fdd8:	00 00 00 a8 	load_32 s0, (s0)
   1fddc:	60 00 00 f2 	bz s0, 12 <AM_Drawer+0xa4>
   1fde0:	00 a0 01 0f 	move s0, 104
   1fde4:	80 fc ff f9 	call -3584 <AM_drawGrid>
   1fde8:	f9 fc ff f9 	call -3100 <AM_drawWalls>
   1fdec:	68 fe ff f9 	call -1632 <AM_drawPlayers>
   1fdf0:	00 0c 00 4f 	movehi s0, 96
   1fdf4:	00 f0 25 00 	or s0, s0, 2428
   1fdf8:	00 00 00 a8 	load_32 s0, (s0)
   1fdfc:	00 08 00 11 	cmpne_i s0, s0, 2
   1fe00:	60 05 00 f4 	bnz s0, 172 <AM_Drawer+0x168>
   1fe04:	1b 04 00 4f 	movehi s0, 59
   1fe08:	00 80 4a 00 	or s0, s0, 4768
   1fe0c:	1e 70 00 88 	store_32 s0, 28(sp)
   1fe10:	00 00 00 a8 	load_32 s0, (s0)
   1fe14:	20 04 00 14 	cmplt_i s1, s0, 1
   1fe18:	a1 04 00 f4 	bnz s1, 148 <AM_Drawer+0x168>
   1fe1c:	40 0c 00 4f 	movehi s2, 96
   1fe20:	73 04 00 4f 	movehi s3, 51
   1fe24:	3b 04 00 4f 	movehi s1, 59
   1fe28:	80 00 00 0f 	move s4, 0
   1fe2c:	a2 a0 24 00 	or s5, s2, 2344
   1fe30:	23 13 78 00 	or s25, s3, 7684
   1fe34:	40 0f 00 0f 	move s26, 3
   1fe38:	00 13 00 4f 	movehi s24, 128
   1fe3c:	21 80 4b 00 	or s1, s1, 4832
   1fe40:	3e 80 00 88 	store_32 s1, 32(sp)
   1fe44:	be a0 00 88 	store_32 s5, 40(sp)
   1fe48:	3e 80 00 a8 	load_32 s1, 32(sp)
   1fe4c:	64 60 01 07 	mull_i s3, s4, 88
   1fe50:	21 00 00 a8 	load_32 s1, (s1)
   1fe54:	21 80 51 c0 	add_i s1, s1, s3
   1fe58:	61 23 01 a8 	load_32 s27, 72(s1)
   1fe5c:	3b 02 00 f2 	bz s27, 68 <AM_Drawer+0x15c>
   1fe60:	9e 90 00 88 	store_32 s4, 36(sp)
   1fe64:	7b 80 00 a8 	load_32 s3, 32(s27)
   1fe68:	05 00 00 a8 	load_32 s0, (s5)
   1fe6c:	bb 30 00 a8 	load_32 s5, 12(s27)
   1fe70:	db 40 00 a8 	load_32 s6, 16(s27)
   1fe74:	80 c0 01 05 	add_i s4, s0, 112
   1fe78:	00 80 fc c0 	move s0, s25
   1fe7c:	20 00 fd c0 	move s1, s26
   1fe80:	40 00 fc c0 	move s2, s24
   1fe84:	9c fd ff f9 	call -2448 <AM_drawLineCharacter>
   1fe88:	be a0 00 a8 	load_32 s5, 40(sp)
   1fe8c:	7b 63 00 a8 	load_32 s27, 24(s27)
   1fe90:	bb fe ff f5 	bnz s27, -44 <AM_Drawer+0x120>
   1fe94:	1e 70 00 a8 	load_32 s0, 28(sp)
   1fe98:	00 00 00 a8 	load_32 s0, (s0)
   1fe9c:	9e 90 00 a8 	load_32 s4, 36(sp)
   1fea0:	84 04 00 05 	add_i s4, s4, 1
   1fea4:	24 00 40 c1 	cmplt_i s1, s4, s0
   1fea8:	01 fd ff f5 	bnz s1, -96 <AM_Drawer+0x104>
   1feac:	1e 40 00 a8 	load_32 s0, 16(sp)
   1feb0:	00 03 05 0f 	move s24, 320
   1feb4:	20 03 00 0f 	move s25, 0
   1feb8:	00 00 00 a8 	load_32 s0, (s0)
   1febc:	5e 63 00 a8 	load_32 s26, 24(sp)
   1fec0:	3a 00 00 a0 	load_u8 s1, (s26)
   1fec4:	41 00 00 11 	cmpne_i s2, s1, 0
   1fec8:	20 00 fc c0 	move s1, s24
   1fecc:	42 00 00 f4 	bnz s2, 8 <AM_Drawer+0x190>
   1fed0:	20 80 fc c0 	move s1, s25
   1fed4:	7e 53 00 a8 	load_32 s27, 20(sp)
   1fed8:	5b 00 00 a0 	load_u8 s2, (s27)
   1fedc:	42 00 00 11 	cmpne_i s2, s2, 0
   1fee0:	62 00 00 f4 	bnz s2, 12 <AM_Drawer+0x1a8>
   1fee4:	40 04 00 0f 	move s2, 1
   1fee8:	02 00 00 f6 	b 8 <AM_Drawer+0x1ac>
   1feec:	40 a4 02 0f 	move s2, 169
   1fef0:	22 80 70 c0 	mull_i s1, s2, s1
   1fef4:	21 04 00 0a 	shr s1, s1, 1
   1fef8:	00 80 50 c0 	add_i s0, s0, s1
   1fefc:	20 80 01 0f 	move s1, 96
   1ff00:	20 00 00 82 	store_8 s1, (s0)
   1ff04:	11 ff ff f9 	call -956 <AM_drawMarks>
   1ff08:	1a 00 00 a0 	load_u8 s0, (s26)
   1ff0c:	00 00 00 11 	cmpne_i s0, s0, 0
   1ff10:	40 00 00 f4 	bnz s0, 8 <AM_Drawer+0x1d4>
   1ff14:	00 83 fc c0 	move s24, s25
   1ff18:	1b 00 00 a0 	load_u8 s0, (s27)
   1ff1c:	00 00 00 11 	cmpne_i s0, s0, 0
   1ff20:	60 00 00 f4 	bnz s0, 12 <AM_Drawer+0x1e8>
   1ff24:	60 80 fc c0 	move s3, s25
   1ff28:	02 00 00 f6 	b 8 <AM_Drawer+0x1ec>
   1ff2c:	60 a0 02 0f 	move s3, 168
   1ff30:	00 80 fc c0 	move s0, s25
   1ff34:	20 80 fc c0 	move s1, s25
   1ff38:	40 00 fc c0 	move s2, s24
   1ff3c:	dd 97 00 f8 	call 155508 <V_MarkRect>
   1ff40:	fe b3 00 a8 	load_32 ra, 44(sp)
   1ff44:	7e c3 00 a8 	load_32 s27, 48(sp)
   1ff48:	5e d3 00 a8 	load_32 s26, 52(sp)
   1ff4c:	3e e3 00 a8 	load_32 s25, 56(sp)
   1ff50:	1e f3 00 a8 	load_32 s24, 60(sp)
   1ff54:	de 03 01 05 	add_i sp, sp, 64
   1ff58:	1f 00 00 f0 	ret

000000000001ff5c T_MoveCeiling:
   1ff5c:	de 03 ff 05 	add_i sp, sp, -64
   1ff60:	1e f3 00 88 	store_32 s24, 60(sp)
   1ff64:	3e e3 00 88 	store_32 s25, 56(sp)
   1ff68:	5e d3 00 88 	store_32 s26, 52(sp)
   1ff6c:	fe c3 00 88 	store_32 ra, 48(sp)
   1ff70:	00 03 f0 c0 	move s24, s0
   1ff74:	18 90 00 a8 	load_32 s0, 36(s24)
   1ff78:	20 fc ff 10 	cmpeq_i s1, s0, -1
   1ff7c:	41 04 00 f4 	bnz s1, 136 <T_MoveCeiling+0xa8>
   1ff80:	00 04 00 11 	cmpne_i s0, s0, 1
   1ff84:	a0 0b 00 f4 	bnz s0, 372 <T_MoveCeiling+0x19c>
   1ff88:	80 04 00 0f 	move s4, 1
   1ff8c:	18 40 00 a8 	load_32 s0, 16(s24)
   1ff90:	38 70 00 a8 	load_32 s1, 28(s24)
   1ff94:	60 00 00 0f 	move s3, 0
   1ff98:	58 60 00 a8 	load_32 s2, 24(s24)
   1ff9c:	a0 00 f2 c0 	move s5, s4
   1ffa0:	04 14 00 f8 	call 20496 <T_MovePlane>
   1ffa4:	3c 04 00 4f 	movehi s1, 60
   1ffa8:	21 40 02 00 	or s1, s1, 144
   1ffac:	21 00 00 a0 	load_u8 s1, (s1)
   1ffb0:	20 03 f0 c0 	move s25, s0
   1ffb4:	21 1c 00 01 	and s1, s1, 7
   1ffb8:	01 01 00 f4 	bnz s1, 32 <T_MoveCeiling+0x7c>
   1ffbc:	18 30 00 a8 	load_32 s0, 12(s24)
   1ffc0:	00 14 00 10 	cmpeq_i s0, s0, 5
   1ffc4:	a0 00 00 f4 	bnz s0, 20 <T_MoveCeiling+0x7c>
   1ffc8:	18 40 00 a8 	load_32 s0, 16(s24)
   1ffcc:	20 58 00 0f 	move s1, 22
   1ffd0:	00 b0 00 05 	add_i s0, s0, 44
   1ffd4:	04 b1 00 f8 	call 181264 <S_StartSound>
   1ffd8:	19 08 00 11 	cmpne_i s0, s25, 2
   1ffdc:	e0 08 00 f4 	bnz s0, 284 <T_MoveCeiling+0x19c>
   1ffe0:	18 30 00 a8 	load_32 s0, 12(s24)
   1ffe4:	20 f4 ff 05 	add_i s1, s0, -3
   1ffe8:	21 08 00 18 	cmplt_u s1, s1, 2
   1ffec:	21 07 00 f4 	bnz s1, 228 <T_MoveCeiling+0x174>
   1fff0:	20 14 00 10 	cmpeq_i s1, s0, 5
   1fff4:	61 06 00 f4 	bnz s1, 204 <T_MoveCeiling+0x164>
   1fff8:	00 04 00 11 	cmpne_i s0, s0, 1
   1fffc:	e0 07 00 f4 	bnz s0, 252 <T_MoveCeiling+0x19c>
   20000:	23 00 00 f6 	b 140 <T_MoveCeiling+0x130>
   20004:	20 07 00 0f 	move s25, 1
   20008:	18 40 00 a8 	load_32 s0, 16(s24)
   2000c:	38 70 00 a8 	load_32 s1, 28(s24)
   20010:	a0 fc ff 0f 	move s5, -1
   20014:	58 50 00 a8 	load_32 s2, 20(s24)
   20018:	78 80 00 a8 	load_32 s3, 32(s24)
   2001c:	80 80 fc c0 	move s4, s25
   20020:	e4 13 00 f8 	call 20368 <T_MovePlane>
   20024:	3c 04 00 4f 	movehi s1, 60
   20028:	21 40 02 00 	or s1, s1, 144
   2002c:	21 00 00 a0 	load_u8 s1, (s1)
   20030:	40 03 f0 c0 	move s26, s0
   20034:	21 1c 00 01 	and s1, s1, 7
   20038:	01 01 00 f4 	bnz s1, 32 <T_MoveCeiling+0xfc>
   2003c:	18 30 00 a8 	load_32 s0, 12(s24)
   20040:	00 14 00 10 	cmpeq_i s0, s0, 5
   20044:	a0 00 00 f4 	bnz s0, 20 <T_MoveCeiling+0xfc>
   20048:	18 40 00 a8 	load_32 s0, 16(s24)
   2004c:	20 58 00 0f 	move s1, 22
   20050:	00 b0 00 05 	add_i s0, s0, 44
   20054:	e4 b0 00 f8 	call 181136 <S_StartSound>
   20058:	1a 04 00 10 	cmpeq_i s0, s26, 1
   2005c:	e0 01 00 f4 	bnz s0, 60 <T_MoveCeiling+0x13c>
   20060:	1a 08 00 11 	cmpne_i s0, s26, 2
   20064:	a0 04 00 f4 	bnz s0, 148 <T_MoveCeiling+0x19c>
   20068:	18 30 00 a8 	load_32 s0, 12(s24)
   2006c:	20 14 00 16 	cmpgt_u s1, s0, 5
   20070:	41 04 00 f4 	bnz s1, 136 <T_MoveCeiling+0x19c>
   20074:	23 00 00 4f 	movehi s1, 3
   20078:	00 08 00 0b 	shl s0, s0, 2
   2007c:	21 50 3a 00 	or s1, s1, 3732
   20080:	00 80 50 c0 	add_i s0, s0, s1
   20084:	00 00 00 a8 	load_32 s0, (s0)
   20088:	00 00 00 f0 	b s0
   2008c:	00 00 fc c0 	move s0, s24
   20090:	20 00 00 f8 	call 128 <P_RemoveActiveCeiling>
   20094:	19 00 00 f6 	b 100 <T_MoveCeiling+0x19c>
   20098:	18 30 00 a8 	load_32 s0, 12(s24)
   2009c:	20 14 00 16 	cmpgt_u s1, s0, 5
   200a0:	c1 02 00 f4 	bnz s1, 88 <T_MoveCeiling+0x19c>
   200a4:	19 00 b0 c0 	shl s0, s25, s0
   200a8:	00 b0 00 01 	and s0, s0, 44
   200ac:	40 00 00 f4 	bnz s0, 8 <T_MoveCeiling+0x158>
   200b0:	12 00 00 f6 	b 72 <T_MoveCeiling+0x19c>
   200b4:	01 00 00 4f 	movehi s0, 1
   200b8:	18 70 00 88 	store_32 s0, 28(s24)
   200bc:	0f 00 00 f6 	b 60 <T_MoveCeiling+0x19c>
   200c0:	18 40 00 a8 	load_32 s0, 16(s24)
   200c4:	20 4c 00 0f 	move s1, 19
   200c8:	00 b0 00 05 	add_i s0, s0, 44
   200cc:	c6 b0 00 f8 	call 181016 <S_StartSound>
   200d0:	00 fc ff 0f 	move s0, -1
   200d4:	18 90 00 88 	store_32 s0, 36(s24)
   200d8:	08 00 00 f6 	b 32 <T_MoveCeiling+0x19c>
   200dc:	18 40 00 a8 	load_32 s0, 16(s24)
   200e0:	20 4c 00 0f 	move s1, 19
   200e4:	00 b0 00 05 	add_i s0, s0, 44
   200e8:	bf b0 00 f8 	call 180988 <S_StartSound>
   200ec:	08 00 00 4f 	movehi s0, 8
   200f0:	18 70 00 88 	store_32 s0, 28(s24)
   200f4:	38 93 00 88 	store_32 s25, 36(s24)
   200f8:	fe c3 00 a8 	load_32 ra, 48(sp)
   200fc:	5e d3 00 a8 	load_32 s26, 52(sp)
   20100:	3e e3 00 a8 	load_32 s25, 56(sp)
   20104:	1e f3 00 a8 	load_32 s24, 60(sp)
   20108:	de 03 01 05 	add_i sp, sp, 64
   2010c:	1f 00 00 f0 	ret

0000000000020110 P_RemoveActiveCeiling:
   20110:	de 03 ff 05 	add_i sp, sp, -64
   20114:	1e f3 00 88 	store_32 s24, 60(sp)
   20118:	3e e3 00 88 	store_32 s25, 56(sp)
   2011c:	fe d3 00 88 	store_32 ra, 52(sp)
   20120:	3b 04 00 4f 	movehi s1, 59
   20124:	01 93 26 00 	or s24, s1, 2468
   20128:	58 00 00 a8 	load_32 s2, (s24)
   2012c:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20130:	82 12 00 f4 	bnz s2, 592 <P_RemoveActiveCeiling+0x270>
   20134:	21 90 26 00 	or s1, s1, 2468
   20138:	41 10 00 a8 	load_32 s2, 4(s1)
   2013c:	42 00 10 c1 	cmpne_i s2, s2, s0
   20140:	42 00 00 f4 	bnz s2, 8 <P_RemoveActiveCeiling+0x38>
   20144:	58 00 00 f6 	b 352 <P_RemoveActiveCeiling+0x194>
   20148:	41 20 00 a8 	load_32 s2, 8(s1)
   2014c:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20150:	e2 0a 00 f4 	bnz s2, 348 <P_RemoveActiveCeiling+0x19c>
   20154:	41 30 00 a8 	load_32 s2, 12(s1)
   20158:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2015c:	c2 0a 00 f4 	bnz s2, 344 <P_RemoveActiveCeiling+0x1a4>
   20160:	41 40 00 a8 	load_32 s2, 16(s1)
   20164:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20168:	a2 0a 00 f4 	bnz s2, 340 <P_RemoveActiveCeiling+0x1ac>
   2016c:	41 50 00 a8 	load_32 s2, 20(s1)
   20170:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20174:	82 0a 00 f4 	bnz s2, 336 <P_RemoveActiveCeiling+0x1b4>
   20178:	41 60 00 a8 	load_32 s2, 24(s1)
   2017c:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20180:	62 0a 00 f4 	bnz s2, 332 <P_RemoveActiveCeiling+0x1bc>
   20184:	41 70 00 a8 	load_32 s2, 28(s1)
   20188:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2018c:	42 0a 00 f4 	bnz s2, 328 <P_RemoveActiveCeiling+0x1c4>
   20190:	41 80 00 a8 	load_32 s2, 32(s1)
   20194:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20198:	22 0a 00 f4 	bnz s2, 324 <P_RemoveActiveCeiling+0x1cc>
   2019c:	41 90 00 a8 	load_32 s2, 36(s1)
   201a0:	42 00 00 c1 	cmpeq_i s2, s2, s0
   201a4:	02 0a 00 f4 	bnz s2, 320 <P_RemoveActiveCeiling+0x1d4>
   201a8:	41 a0 00 a8 	load_32 s2, 40(s1)
   201ac:	42 00 00 c1 	cmpeq_i s2, s2, s0
   201b0:	e2 09 00 f4 	bnz s2, 316 <P_RemoveActiveCeiling+0x1dc>
   201b4:	41 b0 00 a8 	load_32 s2, 44(s1)
   201b8:	42 00 00 c1 	cmpeq_i s2, s2, s0
   201bc:	c2 09 00 f4 	bnz s2, 312 <P_RemoveActiveCeiling+0x1e4>
   201c0:	41 c0 00 a8 	load_32 s2, 48(s1)
   201c4:	42 00 00 c1 	cmpeq_i s2, s2, s0
   201c8:	a2 09 00 f4 	bnz s2, 308 <P_RemoveActiveCeiling+0x1ec>
   201cc:	41 d0 00 a8 	load_32 s2, 52(s1)
   201d0:	42 00 00 c1 	cmpeq_i s2, s2, s0
   201d4:	82 09 00 f4 	bnz s2, 304 <P_RemoveActiveCeiling+0x1f4>
   201d8:	41 e0 00 a8 	load_32 s2, 56(s1)
   201dc:	42 00 00 c1 	cmpeq_i s2, s2, s0
   201e0:	62 09 00 f4 	bnz s2, 300 <P_RemoveActiveCeiling+0x1fc>
   201e4:	41 f0 00 a8 	load_32 s2, 60(s1)
   201e8:	42 00 00 c1 	cmpeq_i s2, s2, s0
   201ec:	42 09 00 f4 	bnz s2, 296 <P_RemoveActiveCeiling+0x204>
   201f0:	41 00 01 a8 	load_32 s2, 64(s1)
   201f4:	42 00 00 c1 	cmpeq_i s2, s2, s0
   201f8:	22 09 00 f4 	bnz s2, 292 <P_RemoveActiveCeiling+0x20c>
   201fc:	41 10 01 a8 	load_32 s2, 68(s1)
   20200:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20204:	02 09 00 f4 	bnz s2, 288 <P_RemoveActiveCeiling+0x214>
   20208:	41 20 01 a8 	load_32 s2, 72(s1)
   2020c:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20210:	e2 08 00 f4 	bnz s2, 284 <P_RemoveActiveCeiling+0x21c>
   20214:	41 30 01 a8 	load_32 s2, 76(s1)
   20218:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2021c:	c2 08 00 f4 	bnz s2, 280 <P_RemoveActiveCeiling+0x224>
   20220:	41 40 01 a8 	load_32 s2, 80(s1)
   20224:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20228:	a2 08 00 f4 	bnz s2, 276 <P_RemoveActiveCeiling+0x22c>
   2022c:	41 50 01 a8 	load_32 s2, 84(s1)
   20230:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20234:	82 08 00 f4 	bnz s2, 272 <P_RemoveActiveCeiling+0x234>
   20238:	41 60 01 a8 	load_32 s2, 88(s1)
   2023c:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20240:	62 08 00 f4 	bnz s2, 268 <P_RemoveActiveCeiling+0x23c>
   20244:	41 70 01 a8 	load_32 s2, 92(s1)
   20248:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2024c:	42 08 00 f4 	bnz s2, 264 <P_RemoveActiveCeiling+0x244>
   20250:	41 80 01 a8 	load_32 s2, 96(s1)
   20254:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20258:	22 08 00 f4 	bnz s2, 260 <P_RemoveActiveCeiling+0x24c>
   2025c:	41 90 01 a8 	load_32 s2, 100(s1)
   20260:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20264:	02 08 00 f4 	bnz s2, 256 <P_RemoveActiveCeiling+0x254>
   20268:	41 a0 01 a8 	load_32 s2, 104(s1)
   2026c:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20270:	e2 07 00 f4 	bnz s2, 252 <P_RemoveActiveCeiling+0x25c>
   20274:	41 b0 01 a8 	load_32 s2, 108(s1)
   20278:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2027c:	c2 07 00 f4 	bnz s2, 248 <P_RemoveActiveCeiling+0x264>
   20280:	41 c0 01 a8 	load_32 s2, 112(s1)
   20284:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20288:	a2 07 00 f4 	bnz s2, 244 <P_RemoveActiveCeiling+0x26c>
   2028c:	41 d0 01 a8 	load_32 s2, 116(s1)
   20290:	42 00 00 c1 	cmpeq_i s2, s2, s0
   20294:	42 00 00 f4 	bnz s2, 8 <P_RemoveActiveCeiling+0x18c>
   20298:	40 00 00 f6 	b 256 <P_RemoveActiveCeiling+0x288>
   2029c:	01 d3 01 05 	add_i s24, s1, 116
   202a0:	38 00 00 f6 	b 224 <P_RemoveActiveCeiling+0x270>
   202a4:	01 13 00 05 	add_i s24, s1, 4
   202a8:	36 00 00 f6 	b 216 <P_RemoveActiveCeiling+0x270>
   202ac:	01 23 00 05 	add_i s24, s1, 8
   202b0:	34 00 00 f6 	b 208 <P_RemoveActiveCeiling+0x270>
   202b4:	01 33 00 05 	add_i s24, s1, 12
   202b8:	32 00 00 f6 	b 200 <P_RemoveActiveCeiling+0x270>
   202bc:	01 43 00 05 	add_i s24, s1, 16
   202c0:	30 00 00 f6 	b 192 <P_RemoveActiveCeiling+0x270>
   202c4:	01 53 00 05 	add_i s24, s1, 20
   202c8:	2e 00 00 f6 	b 184 <P_RemoveActiveCeiling+0x270>
   202cc:	01 63 00 05 	add_i s24, s1, 24
   202d0:	2c 00 00 f6 	b 176 <P_RemoveActiveCeiling+0x270>
   202d4:	01 73 00 05 	add_i s24, s1, 28
   202d8:	2a 00 00 f6 	b 168 <P_RemoveActiveCeiling+0x270>
   202dc:	01 83 00 05 	add_i s24, s1, 32
   202e0:	28 00 00 f6 	b 160 <P_RemoveActiveCeiling+0x270>
   202e4:	01 93 00 05 	add_i s24, s1, 36
   202e8:	26 00 00 f6 	b 152 <P_RemoveActiveCeiling+0x270>
   202ec:	01 a3 00 05 	add_i s24, s1, 40
   202f0:	24 00 00 f6 	b 144 <P_RemoveActiveCeiling+0x270>
   202f4:	01 b3 00 05 	add_i s24, s1, 44
   202f8:	22 00 00 f6 	b 136 <P_RemoveActiveCeiling+0x270>
   202fc:	01 c3 00 05 	add_i s24, s1, 48
   20300:	20 00 00 f6 	b 128 <P_RemoveActiveCeiling+0x270>
   20304:	01 d3 00 05 	add_i s24, s1, 52
   20308:	1e 00 00 f6 	b 120 <P_RemoveActiveCeiling+0x270>
   2030c:	01 e3 00 05 	add_i s24, s1, 56
   20310:	1c 00 00 f6 	b 112 <P_RemoveActiveCeiling+0x270>
   20314:	01 f3 00 05 	add_i s24, s1, 60
   20318:	1a 00 00 f6 	b 104 <P_RemoveActiveCeiling+0x270>
   2031c:	01 03 01 05 	add_i s24, s1, 64
   20320:	18 00 00 f6 	b 96 <P_RemoveActiveCeiling+0x270>
   20324:	01 13 01 05 	add_i s24, s1, 68
   20328:	16 00 00 f6 	b 88 <P_RemoveActiveCeiling+0x270>
   2032c:	01 23 01 05 	add_i s24, s1, 72
   20330:	14 00 00 f6 	b 80 <P_RemoveActiveCeiling+0x270>
   20334:	01 33 01 05 	add_i s24, s1, 76
   20338:	12 00 00 f6 	b 72 <P_RemoveActiveCeiling+0x270>
   2033c:	01 43 01 05 	add_i s24, s1, 80
   20340:	10 00 00 f6 	b 64 <P_RemoveActiveCeiling+0x270>
   20344:	01 53 01 05 	add_i s24, s1, 84
   20348:	0e 00 00 f6 	b 56 <P_RemoveActiveCeiling+0x270>
   2034c:	01 63 01 05 	add_i s24, s1, 88
   20350:	0c 00 00 f6 	b 48 <P_RemoveActiveCeiling+0x270>
   20354:	01 73 01 05 	add_i s24, s1, 92
   20358:	0a 00 00 f6 	b 40 <P_RemoveActiveCeiling+0x270>
   2035c:	01 83 01 05 	add_i s24, s1, 96
   20360:	08 00 00 f6 	b 32 <P_RemoveActiveCeiling+0x270>
   20364:	01 93 01 05 	add_i s24, s1, 100
   20368:	06 00 00 f6 	b 24 <P_RemoveActiveCeiling+0x270>
   2036c:	01 a3 01 05 	add_i s24, s1, 104
   20370:	04 00 00 f6 	b 16 <P_RemoveActiveCeiling+0x270>
   20374:	01 b3 01 05 	add_i s24, s1, 108
   20378:	02 00 00 f6 	b 8 <P_RemoveActiveCeiling+0x270>
   2037c:	01 c3 01 05 	add_i s24, s1, 112
   20380:	00 40 00 a8 	load_32 s0, 16(s0)
   20384:	20 03 00 0f 	move s25, 0
   20388:	20 33 01 88 	store_32 s25, 76(s0)
   2038c:	18 00 00 a8 	load_32 s0, (s24)
   20390:	ea 4d 00 f8 	call 79784 <P_RemoveThinker>
   20394:	38 03 00 88 	store_32 s25, (s24)
   20398:	fe d3 00 a8 	load_32 ra, 52(sp)
   2039c:	3e e3 00 a8 	load_32 s25, 56(sp)
   203a0:	1e f3 00 a8 	load_32 s24, 60(sp)
   203a4:	de 03 01 05 	add_i sp, sp, 64
   203a8:	1f 00 00 f0 	ret

00000000000203ac EV_DoCeiling:
   203ac:	de 03 fe 05 	add_i sp, sp, -128
   203b0:	1e f3 01 88 	store_32 s24, 124(sp)
   203b4:	3e e3 01 88 	store_32 s25, 120(sp)
   203b8:	5e d3 01 88 	store_32 s26, 116(sp)
   203bc:	7e c3 01 88 	store_32 s27, 112(sp)
   203c0:	fe b3 01 88 	store_32 ra, 108(sp)
   203c4:	41 f4 ff 05 	add_i s2, s1, -3
   203c8:	00 03 f0 c0 	move s24, s0
   203cc:	42 08 00 16 	cmpgt_u s2, s2, 2
   203d0:	02 0c 00 f4 	bnz s2, 384 <EV_DoCeiling+0x1a4>
   203d4:	7b 04 00 4f 	movehi s3, 59
   203d8:	4f 00 00 4f 	movehi s2, 15
   203dc:	00 00 00 0f 	move s0, 0
   203e0:	a3 90 26 00 	or s5, s3, 2468
   203e4:	c2 70 7d 00 	or s6, s2, 8028
   203e8:	40 08 00 0b 	shl s2, s0, 2
   203ec:	45 00 51 c0 	add_i s2, s5, s2
   203f0:	42 00 00 a8 	load_32 s2, (s2)
   203f4:	02 01 00 f2 	bz s2, 32 <EV_DoCeiling+0x68>
   203f8:	62 a0 00 a8 	load_32 s3, 40(s2)
   203fc:	98 50 00 a6 	load_s16 s4, 20(s24)
   20400:	63 00 12 c1 	cmpne_i s3, s3, s4
   20404:	83 00 00 f4 	bnz s3, 16 <EV_DoCeiling+0x68>
   20408:	62 90 00 a8 	load_32 s3, 36(s2)
   2040c:	43 00 00 f4 	bnz s3, 8 <EV_DoCeiling+0x68>
   20410:	05 00 00 f6 	b 20 <EV_DoCeiling+0x78>
   20414:	00 04 00 05 	add_i s0, s0, 1
   20418:	40 78 00 18 	cmplt_u s2, s0, 30
   2041c:	62 fe ff f5 	bnz s2, -52 <EV_DoCeiling+0x3c>
   20420:	07 00 00 f6 	b 28 <EV_DoCeiling+0x90>
   20424:	62 b0 00 a8 	load_32 s3, 44(s2)
   20428:	62 90 00 88 	store_32 s3, 36(s2)
   2042c:	c2 20 00 88 	store_32 s6, 8(s2)
   20430:	00 04 00 05 	add_i s0, s0, 1
   20434:	40 78 00 18 	cmplt_u s2, s0, 30
   20438:	82 fd ff f5 	bnz s2, -80 <EV_DoCeiling+0x3c>
   2043c:	01 10 00 11 	cmpne_i s0, s1, 4
   20440:	80 08 00 f4 	bnz s0, 272 <EV_DoCeiling+0x1a4>
   20444:	1b 04 00 4f 	movehi s0, 59
   20448:	de 80 01 88 	store_32 s6, 96(sp)
   2044c:	60 ff ff 0f 	move s27, -1
   20450:	20 00 00 0f 	move s1, 0
   20454:	20 83 4b 00 	or s25, s0, 4832
   20458:	00 c0 00 0f 	move s0, 48
   2045c:	1e 50 01 88 	store_32 s0, 84(sp)
   20460:	00 cc 00 0f 	move s0, 51
   20464:	1e 40 01 88 	store_32 s0, 80(sp)
   20468:	00 04 00 0f 	move s0, 1
   2046c:	1e 90 01 88 	store_32 s0, 100(sp)
   20470:	00 08 00 4f 	movehi s0, 64
   20474:	1e 30 01 88 	store_32 s0, 76(sp)
   20478:	10 00 00 4f 	movehi s0, 16
   2047c:	1e 20 01 88 	store_32 s0, 72(sp)
   20480:	00 10 00 0f 	move s0, 4
   20484:	1e 10 01 88 	store_32 s0, 68(sp)
   20488:	3e 60 01 88 	store_32 s1, 88(sp)
   2048c:	3e a0 01 88 	store_32 s1, 104(sp)
   20490:	7e 73 01 88 	store_32 s27, 92(sp)
   20494:	28 00 00 f6 	b 160 <EV_DoCeiling+0x188>
   20498:	19 00 00 a8 	load_32 s0, (s25)
   2049c:	3b 60 01 07 	mull_i s1, s27, 88
   204a0:	40 83 50 c0 	add_i s26, s0, s1
   204a4:	1a 30 01 a8 	load_32 s0, 76(s26)
   204a8:	60 04 00 f4 	bnz s0, 140 <EV_DoCeiling+0x188>
   204ac:	1a 30 01 05 	add_i s0, s26, 76
   204b0:	1e a0 01 88 	store_32 s0, 104(sp)
   204b4:	1e 50 01 a8 	load_32 s0, 84(sp)
   204b8:	3e 40 01 a8 	load_32 s1, 80(sp)
   204bc:	5e 60 01 a8 	load_32 s2, 88(sp)
   204c0:	06 b1 00 f8 	call 181272 <Z_Malloc>
   204c4:	1e 00 01 88 	store_32 s0, 64(sp)
   204c8:	94 4d 00 f8 	call 79440 <P_AddThinker>
   204cc:	5e 00 01 a8 	load_32 s2, 64(sp)
   204d0:	1e a0 01 a8 	load_32 s0, 104(sp)
   204d4:	40 00 00 88 	store_32 s2, (s0)
   204d8:	1e 80 01 a8 	load_32 s0, 96(sp)
   204dc:	02 20 00 88 	store_32 s0, 8(s2)
   204e0:	42 43 00 88 	store_32 s26, 16(s2)
   204e4:	1e 90 01 a8 	load_32 s0, 100(sp)
   204e8:	02 80 00 88 	store_32 s0, 32(s2)
   204ec:	1a 10 00 a8 	load_32 s0, 4(s26)
   204f0:	02 60 00 88 	store_32 s0, 24(s2)
   204f4:	1a 00 00 a8 	load_32 s0, (s26)
   204f8:	3e 30 01 a8 	load_32 s1, 76(sp)
   204fc:	00 80 50 c0 	add_i s0, s0, s1
   20500:	02 50 00 88 	store_32 s0, 20(s2)
   20504:	1e 70 01 a8 	load_32 s0, 92(sp)
   20508:	02 90 00 88 	store_32 s0, 36(s2)
   2050c:	1e 20 01 a8 	load_32 s0, 72(sp)
   20510:	02 70 00 88 	store_32 s0, 28(s2)
   20514:	1a 40 00 a6 	load_s16 s0, 16(s26)
   20518:	02 a0 00 88 	store_32 s0, 40(s2)
   2051c:	1e 10 01 a8 	load_32 s0, 68(sp)
   20520:	02 30 00 88 	store_32 s0, 12(s2)
   20524:	00 00 f1 c0 	move s0, s2
   20528:	8a 00 00 f8 	call 552 <P_AddActiveCeiling>
   2052c:	1e 90 01 a8 	load_32 s0, 100(sp)
   20530:	1e a0 01 88 	store_32 s0, 104(sp)
   20534:	00 00 fc c0 	move s0, s24
   20538:	20 80 fd c0 	move s1, s27
   2053c:	5c 3f 00 f8 	call 64880 <P_FindSectorFromLineTag>
   20540:	60 03 f0 c0 	move s27, s0
   20544:	1b fc ff 12 	cmpgt_i s0, s27, -1
   20548:	80 fa ff f5 	bnz s0, -176 <EV_DoCeiling+0xec>
   2054c:	5e 00 00 f6 	b 376 <EV_DoCeiling+0x318>
   20550:	1b 04 00 4f 	movehi s0, 59
   20554:	60 c0 00 0f 	move s3, 48
   20558:	7e 60 01 88 	store_32 s3, 88(sp)
   2055c:	60 cc 00 0f 	move s3, 51
   20560:	7e 50 01 88 	store_32 s3, 84(sp)
   20564:	40 83 4b 00 	or s26, s0, 4832
   20568:	0f 00 00 4f 	movehi s0, 15
   2056c:	60 ff ff 0f 	move s27, -1
   20570:	61 14 00 16 	cmpgt_u s3, s1, 5
   20574:	00 70 7d 00 	or s0, s0, 8028
   20578:	1e 40 01 88 	store_32 s0, 80(sp)
   2057c:	03 00 00 4f 	movehi s0, 3
   20580:	7e 30 01 88 	store_32 s3, 76(sp)
   20584:	60 04 00 0f 	move s3, 1
   20588:	7e 80 01 88 	store_32 s3, 96(sp)
   2058c:	40 00 00 0f 	move s2, 0
   20590:	00 b0 3a 00 	or s0, s0, 3756
   20594:	1e 10 01 88 	store_32 s0, 68(sp)
   20598:	00 08 00 4f 	movehi s0, 64
   2059c:	1e d0 00 88 	store_32 s0, 52(sp)
   205a0:	01 00 00 10 	cmpeq_i s0, s1, 0
   205a4:	3e 70 01 88 	store_32 s1, 92(sp)
   205a8:	1e e0 00 88 	store_32 s0, 56(sp)
   205ac:	08 00 00 4f 	movehi s0, 8
   205b0:	1e 00 01 88 	store_32 s0, 64(sp)
   205b4:	5e 90 01 88 	store_32 s2, 100(sp)
   205b8:	5e a0 01 88 	store_32 s2, 104(sp)
   205bc:	7e f3 00 88 	store_32 s27, 60(sp)
   205c0:	08 00 00 f6 	b 32 <EV_DoCeiling+0x234>
   205c4:	19 40 00 a6 	load_s16 s0, 16(s25)
   205c8:	03 a0 00 88 	store_32 s0, 40(s3)
   205cc:	23 30 00 88 	store_32 s1, 12(s3)
   205d0:	00 80 f1 c0 	move s0, s3
   205d4:	5f 00 00 f8 	call 380 <P_AddActiveCeiling>
   205d8:	1e 80 01 a8 	load_32 s0, 96(sp)
   205dc:	1e a0 01 88 	store_32 s0, 104(sp)
   205e0:	00 00 fc c0 	move s0, s24
   205e4:	20 80 fd c0 	move s1, s27
   205e8:	31 3f 00 f8 	call 64708 <P_FindSectorFromLineTag>
   205ec:	60 03 f0 c0 	move s27, s0
   205f0:	1b 00 00 14 	cmplt_i s0, s27, 0
   205f4:	80 06 00 f4 	bnz s0, 208 <EV_DoCeiling+0x318>
   205f8:	1a 00 00 a8 	load_32 s0, (s26)
   205fc:	3b 60 01 07 	mull_i s1, s27, 88
   20600:	20 83 50 c0 	add_i s25, s0, s1
   20604:	19 30 01 a8 	load_32 s0, 76(s25)
   20608:	c0 fe ff f5 	bnz s0, -40 <EV_DoCeiling+0x234>
   2060c:	19 30 01 05 	add_i s0, s25, 76
   20610:	1e 20 01 88 	store_32 s0, 72(sp)
   20614:	1e 60 01 a8 	load_32 s0, 88(sp)
   20618:	3e 50 01 a8 	load_32 s1, 84(sp)
   2061c:	5e 90 01 a8 	load_32 s2, 100(sp)
   20620:	ae b0 00 f8 	call 180920 <Z_Malloc>
   20624:	1e a0 01 88 	store_32 s0, 104(sp)
   20628:	3c 4d 00 f8 	call 79088 <P_AddThinker>
   2062c:	7e a0 01 a8 	load_32 s3, 104(sp)
   20630:	1e 20 01 a8 	load_32 s0, 72(sp)
   20634:	60 00 00 88 	store_32 s3, (s0)
   20638:	1e 40 01 a8 	load_32 s0, 80(sp)
   2063c:	03 20 00 88 	store_32 s0, 8(s3)
   20640:	23 43 00 88 	store_32 s25, 16(s3)
   20644:	1e 90 01 a8 	load_32 s0, 100(sp)
   20648:	03 80 00 88 	store_32 s0, 32(s3)
   2064c:	3e 70 01 a8 	load_32 s1, 92(sp)
   20650:	1e 30 01 a8 	load_32 s0, 76(sp)
   20654:	80 fb ff f5 	bnz s0, -144 <EV_DoCeiling+0x218>
   20658:	5e 10 01 a8 	load_32 s2, 68(sp)
   2065c:	01 08 00 0b 	shl s0, s1, 2
   20660:	00 00 51 c0 	add_i s0, s0, s2
   20664:	00 00 00 a8 	load_32 s0, (s0)
   20668:	00 00 00 f0 	b s0
   2066c:	1e 80 01 a8 	load_32 s0, 96(sp)
   20670:	03 80 00 88 	store_32 s0, 32(s3)
   20674:	19 10 00 a8 	load_32 s0, 4(s25)
   20678:	03 60 00 88 	store_32 s0, 24(s3)
   2067c:	19 00 00 a8 	load_32 s0, (s25)
   20680:	5e e0 00 a8 	load_32 s2, 56(sp)
   20684:	62 00 00 f4 	bnz s2, 12 <EV_DoCeiling+0x2e4>
   20688:	5e d0 00 a8 	load_32 s2, 52(sp)
   2068c:	00 00 51 c0 	add_i s0, s0, s2
   20690:	03 50 00 88 	store_32 s0, 20(s3)
   20694:	1e f0 00 a8 	load_32 s0, 60(sp)
   20698:	03 90 00 88 	store_32 s0, 36(s3)
   2069c:	1e 00 01 a8 	load_32 s0, 64(sp)
   206a0:	03 70 00 88 	store_32 s0, 28(s3)
   206a4:	c8 ff ff f7 	b -224 <EV_DoCeiling+0x218>
   206a8:	00 80 fc c0 	move s0, s25
   206ac:	de 3e 00 f8 	call 64376 <P_FindHighestCeilingSurrounding>
   206b0:	7e a0 01 a8 	load_32 s3, 104(sp)
   206b4:	3e 70 01 a8 	load_32 s1, 92(sp)
   206b8:	03 60 00 88 	store_32 s0, 24(s3)
   206bc:	1e 80 01 a8 	load_32 s0, 96(sp)
   206c0:	f6 ff ff f7 	b -40 <EV_DoCeiling+0x2ec>
   206c4:	1e a0 01 a8 	load_32 s0, 104(sp)
   206c8:	fe b3 01 a8 	load_32 ra, 108(sp)
   206cc:	7e c3 01 a8 	load_32 s27, 112(sp)
   206d0:	5e d3 01 a8 	load_32 s26, 116(sp)
   206d4:	3e e3 01 a8 	load_32 s25, 120(sp)
   206d8:	1e f3 01 a8 	load_32 s24, 124(sp)
   206dc:	de 03 02 05 	add_i sp, sp, 128
   206e0:	1f 00 00 f0 	ret

00000000000206e4 P_ActivateInStasisCeiling:
   206e4:	5b 04 00 4f 	movehi s2, 59
   206e8:	6f 00 00 4f 	movehi s3, 15
   206ec:	20 00 00 0f 	move s1, 0
   206f0:	42 90 26 00 	or s2, s2, 2468
   206f4:	63 70 7d 00 	or s3, s3, 8028
   206f8:	81 08 00 0b 	shl s4, s1, 2
   206fc:	82 00 52 c0 	add_i s4, s2, s4
   20700:	84 00 00 a8 	load_32 s4, (s4)
   20704:	04 01 00 f2 	bz s4, 32 <P_ActivateInStasisCeiling+0x40>
   20708:	a4 a0 00 a8 	load_32 s5, 40(s4)
   2070c:	c0 50 00 a6 	load_s16 s6, 20(s0)
   20710:	a5 00 13 c1 	cmpne_i s5, s5, s6
   20714:	85 00 00 f4 	bnz s5, 16 <P_ActivateInStasisCeiling+0x40>
   20718:	a4 90 00 a8 	load_32 s5, 36(s4)
   2071c:	45 00 00 f4 	bnz s5, 8 <P_ActivateInStasisCeiling+0x40>
   20720:	05 00 00 f6 	b 20 <P_ActivateInStasisCeiling+0x50>
   20724:	21 04 00 05 	add_i s1, s1, 1
   20728:	81 78 00 18 	cmplt_u s4, s1, 30
   2072c:	64 fe ff f5 	bnz s4, -52 <P_ActivateInStasisCeiling+0x14>
   20730:	07 00 00 f6 	b 28 <P_ActivateInStasisCeiling+0x68>
   20734:	a4 b0 00 a8 	load_32 s5, 44(s4)
   20738:	a4 90 00 88 	store_32 s5, 36(s4)
   2073c:	64 20 00 88 	store_32 s3, 8(s4)
   20740:	21 04 00 05 	add_i s1, s1, 1
   20744:	81 78 00 18 	cmplt_u s4, s1, 30
   20748:	84 fd ff f5 	bnz s4, -80 <P_ActivateInStasisCeiling+0x14>
   2074c:	1f 00 00 f0 	ret

0000000000020750 P_AddActiveCeiling:
   20750:	5b 04 00 4f 	movehi s2, 59
   20754:	22 90 26 00 	or s1, s2, 2468
   20758:	61 00 00 a8 	load_32 s3, (s1)
   2075c:	e3 0e 00 f2 	bz s3, 476 <P_AddActiveCeiling+0x1e8>
   20760:	22 90 26 00 	or s1, s2, 2468
   20764:	41 10 00 a8 	load_32 s2, 4(s1)
   20768:	42 00 00 f4 	bnz s2, 8 <P_AddActiveCeiling+0x20>
   2076c:	3c 00 00 f6 	b 240 <P_AddActiveCeiling+0x10c>
   20770:	41 20 00 a8 	load_32 s2, 8(s1)
   20774:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x114>
   20778:	41 30 00 a8 	load_32 s2, 12(s1)
   2077c:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x11c>
   20780:	41 40 00 a8 	load_32 s2, 16(s1)
   20784:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x124>
   20788:	41 50 00 a8 	load_32 s2, 20(s1)
   2078c:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x12c>
   20790:	41 60 00 a8 	load_32 s2, 24(s1)
   20794:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x134>
   20798:	41 70 00 a8 	load_32 s2, 28(s1)
   2079c:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x13c>
   207a0:	41 80 00 a8 	load_32 s2, 32(s1)
   207a4:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x144>
   207a8:	41 90 00 a8 	load_32 s2, 36(s1)
   207ac:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x14c>
   207b0:	41 a0 00 a8 	load_32 s2, 40(s1)
   207b4:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x154>
   207b8:	41 b0 00 a8 	load_32 s2, 44(s1)
   207bc:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x15c>
   207c0:	41 c0 00 a8 	load_32 s2, 48(s1)
   207c4:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x164>
   207c8:	41 d0 00 a8 	load_32 s2, 52(s1)
   207cc:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x16c>
   207d0:	41 e0 00 a8 	load_32 s2, 56(s1)
   207d4:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x174>
   207d8:	41 f0 00 a8 	load_32 s2, 60(s1)
   207dc:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x17c>
   207e0:	41 00 01 a8 	load_32 s2, 64(s1)
   207e4:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x184>
   207e8:	41 10 01 a8 	load_32 s2, 68(s1)
   207ec:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x18c>
   207f0:	41 20 01 a8 	load_32 s2, 72(s1)
   207f4:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x194>
   207f8:	41 30 01 a8 	load_32 s2, 76(s1)
   207fc:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x19c>
   20800:	41 40 01 a8 	load_32 s2, 80(s1)
   20804:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x1a4>
   20808:	41 50 01 a8 	load_32 s2, 84(s1)
   2080c:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x1ac>
   20810:	41 60 01 a8 	load_32 s2, 88(s1)
   20814:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x1b4>
   20818:	41 70 01 a8 	load_32 s2, 92(s1)
   2081c:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x1bc>
   20820:	41 80 01 a8 	load_32 s2, 96(s1)
   20824:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x1c4>
   20828:	41 90 01 a8 	load_32 s2, 100(s1)
   2082c:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x1cc>
   20830:	41 a0 01 a8 	load_32 s2, 104(s1)
   20834:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x1d4>
   20838:	41 b0 01 a8 	load_32 s2, 108(s1)
   2083c:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x1dc>
   20840:	41 c0 01 a8 	load_32 s2, 112(s1)
   20844:	82 07 00 f2 	bz s2, 240 <P_AddActiveCeiling+0x1e4>
   20848:	41 d0 01 a8 	load_32 s2, 116(s1)
   2084c:	42 00 00 f2 	bz s2, 8 <P_AddActiveCeiling+0x104>
   20850:	3b 00 00 f6 	b 236 <P_AddActiveCeiling+0x1ec>
   20854:	21 d0 01 05 	add_i s1, s1, 116
   20858:	38 00 00 f6 	b 224 <P_AddActiveCeiling+0x1e8>
   2085c:	21 10 00 05 	add_i s1, s1, 4
   20860:	36 00 00 f6 	b 216 <P_AddActiveCeiling+0x1e8>
   20864:	21 20 00 05 	add_i s1, s1, 8
   20868:	34 00 00 f6 	b 208 <P_AddActiveCeiling+0x1e8>
   2086c:	21 30 00 05 	add_i s1, s1, 12
   20870:	32 00 00 f6 	b 200 <P_AddActiveCeiling+0x1e8>
   20874:	21 40 00 05 	add_i s1, s1, 16
   20878:	30 00 00 f6 	b 192 <P_AddActiveCeiling+0x1e8>
   2087c:	21 50 00 05 	add_i s1, s1, 20
   20880:	2e 00 00 f6 	b 184 <P_AddActiveCeiling+0x1e8>
   20884:	21 60 00 05 	add_i s1, s1, 24
   20888:	2c 00 00 f6 	b 176 <P_AddActiveCeiling+0x1e8>
   2088c:	21 70 00 05 	add_i s1, s1, 28
   20890:	2a 00 00 f6 	b 168 <P_AddActiveCeiling+0x1e8>
   20894:	21 80 00 05 	add_i s1, s1, 32
   20898:	28 00 00 f6 	b 160 <P_AddActiveCeiling+0x1e8>
   2089c:	21 90 00 05 	add_i s1, s1, 36
   208a0:	26 00 00 f6 	b 152 <P_AddActiveCeiling+0x1e8>
   208a4:	21 a0 00 05 	add_i s1, s1, 40
   208a8:	24 00 00 f6 	b 144 <P_AddActiveCeiling+0x1e8>
   208ac:	21 b0 00 05 	add_i s1, s1, 44
   208b0:	22 00 00 f6 	b 136 <P_AddActiveCeiling+0x1e8>
   208b4:	21 c0 00 05 	add_i s1, s1, 48
   208b8:	20 00 00 f6 	b 128 <P_AddActiveCeiling+0x1e8>
   208bc:	21 d0 00 05 	add_i s1, s1, 52
   208c0:	1e 00 00 f6 	b 120 <P_AddActiveCeiling+0x1e8>
   208c4:	21 e0 00 05 	add_i s1, s1, 56
   208c8:	1c 00 00 f6 	b 112 <P_AddActiveCeiling+0x1e8>
   208cc:	21 f0 00 05 	add_i s1, s1, 60
   208d0:	1a 00 00 f6 	b 104 <P_AddActiveCeiling+0x1e8>
   208d4:	21 00 01 05 	add_i s1, s1, 64
   208d8:	18 00 00 f6 	b 96 <P_AddActiveCeiling+0x1e8>
   208dc:	21 10 01 05 	add_i s1, s1, 68
   208e0:	16 00 00 f6 	b 88 <P_AddActiveCeiling+0x1e8>
   208e4:	21 20 01 05 	add_i s1, s1, 72
   208e8:	14 00 00 f6 	b 80 <P_AddActiveCeiling+0x1e8>
   208ec:	21 30 01 05 	add_i s1, s1, 76
   208f0:	12 00 00 f6 	b 72 <P_AddActiveCeiling+0x1e8>
   208f4:	21 40 01 05 	add_i s1, s1, 80
   208f8:	10 00 00 f6 	b 64 <P_AddActiveCeiling+0x1e8>
   208fc:	21 50 01 05 	add_i s1, s1, 84
   20900:	0e 00 00 f6 	b 56 <P_AddActiveCeiling+0x1e8>
   20904:	21 60 01 05 	add_i s1, s1, 88
   20908:	0c 00 00 f6 	b 48 <P_AddActiveCeiling+0x1e8>
   2090c:	21 70 01 05 	add_i s1, s1, 92
   20910:	0a 00 00 f6 	b 40 <P_AddActiveCeiling+0x1e8>
   20914:	21 80 01 05 	add_i s1, s1, 96
   20918:	08 00 00 f6 	b 32 <P_AddActiveCeiling+0x1e8>
   2091c:	21 90 01 05 	add_i s1, s1, 100
   20920:	06 00 00 f6 	b 24 <P_AddActiveCeiling+0x1e8>
   20924:	21 a0 01 05 	add_i s1, s1, 104
   20928:	04 00 00 f6 	b 16 <P_AddActiveCeiling+0x1e8>
   2092c:	21 b0 01 05 	add_i s1, s1, 108
   20930:	02 00 00 f6 	b 8 <P_AddActiveCeiling+0x1e8>
   20934:	21 c0 01 05 	add_i s1, s1, 112
   20938:	01 00 00 88 	store_32 s0, (s1)
   2093c:	1f 00 00 f0 	ret

0000000000020940 EV_CeilingCrushStop:
   20940:	3b 04 00 4f 	movehi s1, 59
   20944:	40 00 00 0f 	move s2, 0
   20948:	80 04 00 0f 	move s4, 1
   2094c:	61 90 26 00 	or s3, s1, 2468
   20950:	20 00 f1 c0 	move s1, s2
   20954:	a0 00 f1 c0 	move s5, s2
   20958:	c5 08 00 0b 	shl s6, s5, 2
   2095c:	c3 00 53 c0 	add_i s6, s3, s6
   20960:	e6 00 00 a8 	load_32 s7, (s6)
   20964:	87 01 00 f2 	bz s7, 48 <EV_CeilingCrushStop+0x54>
   20968:	07 a1 00 a8 	load_32 s8, 40(s7)
   2096c:	20 51 00 a6 	load_s16 s9, 20(s0)
   20970:	08 81 14 c1 	cmpne_i s8, s8, s9
   20974:	08 01 00 f4 	bnz s8, 32 <EV_CeilingCrushStop+0x54>
   20978:	07 91 00 a8 	load_32 s8, 36(s7)
   2097c:	c8 00 00 f2 	bz s8, 24 <EV_CeilingCrushStop+0x54>
   20980:	07 b1 00 88 	store_32 s8, 44(s7)
   20984:	47 20 00 88 	store_32 s2, 8(s7)
   20988:	26 00 00 a8 	load_32 s1, (s6)
   2098c:	41 90 00 88 	store_32 s2, 36(s1)
   20990:	20 00 f2 c0 	move s1, s4
   20994:	a5 04 00 05 	add_i s5, s5, 1
   20998:	c5 78 00 18 	cmplt_u s6, s5, 30
   2099c:	e6 fd ff f5 	bnz s6, -68 <EV_CeilingCrushStop+0x18>
   209a0:	00 80 f0 c0 	move s0, s1
   209a4:	1f 00 00 f0 	ret

00000000000209a8 T_VerticalDoor:
   209a8:	de 03 ff 05 	add_i sp, sp, -64
   209ac:	1e f3 00 88 	store_32 s24, 60(sp)
   209b0:	3e e3 00 88 	store_32 s25, 56(sp)
   209b4:	5e d3 00 88 	store_32 s26, 52(sp)
   209b8:	fe c3 00 88 	store_32 ra, 48(sp)
   209bc:	00 03 f0 c0 	move s24, s0
   209c0:	18 70 00 a8 	load_32 s0, 28(s24)
   209c4:	00 04 00 05 	add_i s0, s0, 1
   209c8:	20 0c 00 16 	cmpgt_u s1, s0, 3
   209cc:	a1 0d 00 f4 	bnz s1, 436 <T_VerticalDoor+0x1d8>
   209d0:	23 00 00 4f 	movehi s1, 3
   209d4:	00 08 00 0b 	shl s0, s0, 2
   209d8:	21 10 3b 00 	or s1, s1, 3780
   209dc:	00 80 50 c0 	add_i s0, s0, s1
   209e0:	00 00 00 a8 	load_32 s0, (s0)
   209e4:	00 00 00 f0 	b s0
   209e8:	18 40 00 a8 	load_32 s0, 16(s24)
   209ec:	20 03 00 0f 	move s25, 0
   209f0:	40 07 00 0f 	move s26, 1
   209f4:	38 60 00 a8 	load_32 s1, 24(s24)
   209f8:	a0 fc ff 0f 	move s5, -1
   209fc:	40 00 00 a8 	load_32 s2, (s0)
   20a00:	60 80 fc c0 	move s3, s25
   20a04:	80 00 fd c0 	move s4, s26
   20a08:	6a 11 00 f8 	call 17832 <T_MovePlane>
   20a0c:	20 04 00 10 	cmpeq_i s1, s0, 1
   20a10:	61 08 00 f4 	bnz s1, 268 <T_VerticalDoor+0x174>
   20a14:	00 08 00 11 	cmpne_i s0, s0, 2
   20a18:	40 0b 00 f4 	bnz s0, 360 <T_VerticalDoor+0x1d8>
   20a1c:	18 30 00 a8 	load_32 s0, 12(s24)
   20a20:	20 1c 00 16 	cmpgt_u s1, s0, 7
   20a24:	e1 0a 00 f4 	bnz s1, 348 <T_VerticalDoor+0x1d8>
   20a28:	23 00 00 4f 	movehi s1, 3
   20a2c:	00 08 00 0b 	shl s0, s0, 2
   20a30:	21 50 3b 00 	or s1, s1, 3796
   20a34:	00 80 50 c0 	add_i s0, s0, s1
   20a38:	00 00 00 a8 	load_32 s0, (s0)
   20a3c:	00 00 00 f0 	b s0
   20a40:	18 40 00 a8 	load_32 s0, 16(s24)
   20a44:	20 33 01 88 	store_32 s25, 76(s0)
   20a48:	00 00 fc c0 	move s0, s24
   20a4c:	3b 4c 00 f8 	call 78060 <P_RemoveThinker>
   20a50:	0d 00 00 f6 	b 52 <T_VerticalDoor+0xdc>
   20a54:	18 90 00 a8 	load_32 s0, 36(s24)
   20a58:	00 fc ff 05 	add_i s0, s0, -1
   20a5c:	18 90 00 88 	store_32 s0, 36(s24)
   20a60:	00 09 00 f4 	bnz s0, 288 <T_VerticalDoor+0x1d8>
   20a64:	18 30 00 a8 	load_32 s0, 12(s24)
   20a68:	60 07 00 f2 	bz s0, 236 <T_VerticalDoor+0x1ac>
   20a6c:	20 04 00 10 	cmpeq_i s1, s0, 1
   20a70:	c1 07 00 f4 	bnz s1, 248 <T_VerticalDoor+0x1c0>
   20a74:	00 14 00 11 	cmpne_i s0, s0, 5
   20a78:	40 08 00 f4 	bnz s0, 264 <T_VerticalDoor+0x1d8>
   20a7c:	00 fc ff 0f 	move s0, -1
   20a80:	18 70 00 88 	store_32 s0, 28(s24)
   20a84:	18 40 00 a8 	load_32 s0, 16(s24)
   20a88:	20 64 01 0f 	move s1, 89
   20a8c:	3b 00 00 f6 	b 236 <T_VerticalDoor+0x1d0>
   20a90:	20 03 00 0f 	move s25, 0
   20a94:	18 40 00 a8 	load_32 s0, 16(s24)
   20a98:	40 07 00 0f 	move s26, 1
   20a9c:	38 60 00 a8 	load_32 s1, 24(s24)
   20aa0:	58 50 00 a8 	load_32 s2, 20(s24)
   20aa4:	60 80 fc c0 	move s3, s25
   20aa8:	80 00 fd c0 	move s4, s26
   20aac:	a0 00 fd c0 	move s5, s26
   20ab0:	40 11 00 f8 	call 17664 <T_MovePlane>
   20ab4:	00 08 00 11 	cmpne_i s0, s0, 2
   20ab8:	40 06 00 f4 	bnz s0, 200 <T_VerticalDoor+0x1d8>
   20abc:	18 30 00 a8 	load_32 s0, 12(s24)
   20ac0:	20 18 00 16 	cmpgt_u s1, s0, 6
   20ac4:	e1 05 00 f4 	bnz s1, 188 <T_VerticalDoor+0x1d8>
   20ac8:	1a 00 b0 c0 	shl s0, s26, s0
   20acc:	20 28 01 01 	and s1, s0, 74
   20ad0:	41 00 00 f4 	bnz s1, 8 <T_VerticalDoor+0x130>
   20ad4:	19 00 00 f6 	b 100 <T_VerticalDoor+0x190>
   20ad8:	18 40 00 a8 	load_32 s0, 16(s24)
   20adc:	20 33 01 88 	store_32 s25, 76(s0)
   20ae0:	00 00 fc c0 	move s0, s24
   20ae4:	15 4c 00 f8 	call 77908 <P_RemoveThinker>
   20ae8:	26 00 00 f6 	b 152 <T_VerticalDoor+0x1d8>
   20aec:	18 90 00 a8 	load_32 s0, 36(s24)
   20af0:	00 fc ff 05 	add_i s0, s0, -1
   20af4:	18 90 00 88 	store_32 s0, 36(s24)
   20af8:	40 04 00 f4 	bnz s0, 136 <T_VerticalDoor+0x1d8>
   20afc:	18 30 00 a8 	load_32 s0, 12(s24)
   20b00:	00 10 00 11 	cmpne_i s0, s0, 4
   20b04:	e0 03 00 f4 	bnz s0, 124 <T_VerticalDoor+0x1d8>
   20b08:	00 04 00 0f 	move s0, 1
   20b0c:	18 70 00 88 	store_32 s0, 28(s24)
   20b10:	00 00 00 0f 	move s0, 0
   20b14:	18 30 00 88 	store_32 s0, 12(s24)
   20b18:	16 00 00 f6 	b 88 <T_VerticalDoor+0x1c8>
   20b1c:	18 30 00 a8 	load_32 s0, 12(s24)
   20b20:	20 08 00 10 	cmpeq_i s1, s0, 2
   20b24:	e1 02 00 f4 	bnz s1, 92 <T_VerticalDoor+0x1d8>
   20b28:	00 1c 00 10 	cmpeq_i s0, s0, 7
   20b2c:	a0 02 00 f4 	bnz s0, 84 <T_VerticalDoor+0x1d8>
   20b30:	58 73 00 88 	store_32 s26, 28(s24)
   20b34:	0f 00 00 f6 	b 60 <T_VerticalDoor+0x1c8>
   20b38:	00 84 00 01 	and s0, s0, 33
   20b3c:	40 00 00 f4 	bnz s0, 8 <T_VerticalDoor+0x19c>
   20b40:	10 00 00 f6 	b 64 <T_VerticalDoor+0x1d8>
   20b44:	38 73 00 88 	store_32 s25, 28(s24)
   20b48:	18 80 00 a8 	load_32 s0, 32(s24)
   20b4c:	18 90 00 88 	store_32 s0, 36(s24)
   20b50:	0c 00 00 f6 	b 48 <T_VerticalDoor+0x1d8>
   20b54:	00 fc ff 0f 	move s0, -1
   20b58:	18 70 00 88 	store_32 s0, 28(s24)
   20b5c:	18 40 00 a8 	load_32 s0, 16(s24)
   20b60:	20 54 00 0f 	move s1, 21
   20b64:	05 00 00 f6 	b 20 <T_VerticalDoor+0x1d0>
   20b68:	00 04 00 0f 	move s0, 1
   20b6c:	18 70 00 88 	store_32 s0, 28(s24)
   20b70:	18 40 00 a8 	load_32 s0, 16(s24)
   20b74:	20 50 00 0f 	move s1, 20
   20b78:	00 b0 00 05 	add_i s0, s0, 44
   20b7c:	1a ae 00 f8 	call 178280 <S_StartSound>
   20b80:	fe c3 00 a8 	load_32 ra, 48(sp)
   20b84:	5e d3 00 a8 	load_32 s26, 52(sp)
   20b88:	3e e3 00 a8 	load_32 s25, 56(sp)
   20b8c:	1e f3 00 a8 	load_32 s24, 60(sp)
   20b90:	de 03 01 05 	add_i sp, sp, 64
   20b94:	1f 00 00 f0 	ret
   20b98:	38 73 00 88 	store_32 s25, 28(s24)
   20b9c:	00 68 10 0f 	move s0, 1050
   20ba0:	18 90 00 88 	store_32 s0, 36(s24)
   20ba4:	f7 ff ff f7 	b -36 <T_VerticalDoor+0x1d8>

0000000000020ba8 EV_DoLockedDoor:
   20ba8:	de 03 ff 05 	add_i sp, sp, -64
   20bac:	1e f3 00 88 	store_32 s24, 60(sp)
   20bb0:	fe e3 00 88 	store_32 ra, 56(sp)
   20bb4:	42 10 02 a8 	load_32 s2, 132(s2)
   20bb8:	42 02 00 f2 	bz s2, 72 <EV_DoLockedDoor+0x58>
   20bbc:	60 48 00 a6 	load_s16 s3, 18(s0)
   20bc0:	63 74 fe 05 	add_i s3, s3, -99
   20bc4:	83 98 00 16 	cmpgt_u s4, s3, 38
   20bc8:	84 03 00 f4 	bnz s4, 112 <EV_DoLockedDoor+0x90>
   20bcc:	83 00 00 4f 	movehi s4, 3
   20bd0:	63 08 00 0b 	shl s3, s3, 2
   20bd4:	84 d0 3b 00 	or s4, s4, 3828
   20bd8:	63 00 52 c0 	add_i s3, s3, s4
   20bdc:	63 00 00 a8 	load_32 s3, (s3)
   20be0:	03 00 00 f0 	b s3
   20be4:	62 10 01 a8 	load_32 s3, 68(s2)
   20be8:	83 02 00 f4 	bnz s3, 80 <EV_DoLockedDoor+0x90>
   20bec:	62 40 01 a8 	load_32 s3, 80(s2)
   20bf0:	43 02 00 f4 	bnz s3, 72 <EV_DoLockedDoor+0x90>
   20bf4:	01 00 00 4f 	movehi s0, 1
   20bf8:	00 c0 42 00 	or s0, s0, 4272
   20bfc:	18 00 00 f6 	b 96 <EV_DoLockedDoor+0xb4>
   20c00:	00 03 00 0f 	move s24, 0
   20c04:	0f 00 00 f6 	b 60 <EV_DoLockedDoor+0x98>
   20c08:	62 30 01 a8 	load_32 s3, 76(s2)
   20c0c:	63 01 00 f4 	bnz s3, 44 <EV_DoLockedDoor+0x90>
   20c10:	62 60 01 a8 	load_32 s3, 88(s2)
   20c14:	23 01 00 f4 	bnz s3, 36 <EV_DoLockedDoor+0x90>
   20c18:	02 00 00 4f 	movehi s0, 2
   20c1c:	00 40 05 00 	or s0, s0, 336
   20c20:	0f 00 00 f6 	b 60 <EV_DoLockedDoor+0xb4>
   20c24:	62 20 01 a8 	load_32 s3, 72(s2)
   20c28:	83 00 00 f4 	bnz s3, 16 <EV_DoLockedDoor+0x90>
   20c2c:	62 50 01 a8 	load_32 s3, 84(s2)
   20c30:	43 00 00 f4 	bnz s3, 8 <EV_DoLockedDoor+0x90>
   20c34:	08 00 00 f6 	b 32 <EV_DoLockedDoor+0xac>
   20c38:	0f 00 00 f8 	call 60 <EV_DoDoor>
   20c3c:	00 03 f0 c0 	move s24, s0
   20c40:	00 00 fc c0 	move s0, s24
   20c44:	fe e3 00 a8 	load_32 ra, 56(sp)
   20c48:	1e f3 00 a8 	load_32 s24, 60(sp)
   20c4c:	de 03 01 05 	add_i sp, sp, 64
   20c50:	1f 00 00 f0 	ret
   20c54:	01 00 00 4f 	movehi s0, 1
   20c58:	00 6c 76 00 	or s0, s0, 7579
   20c5c:	00 03 00 0f 	move s24, 0
   20c60:	02 60 03 88 	store_32 s0, 216(s2)
   20c64:	20 88 00 0f 	move s1, 34
   20c68:	00 00 fc c0 	move s0, s24
   20c6c:	de ad 00 f8 	call 178040 <S_StartSound>
   20c70:	f4 ff ff f7 	b -48 <EV_DoLockedDoor+0x98>

0000000000020c74 EV_DoDoor:
   20c74:	de 03 fe 05 	add_i sp, sp, -128
   20c78:	1e f3 01 88 	store_32 s24, 124(sp)
   20c7c:	3e e3 01 88 	store_32 s25, 120(sp)
   20c80:	5e d3 01 88 	store_32 s26, 116(sp)
   20c84:	7e c3 01 88 	store_32 s27, 112(sp)
   20c88:	fe b3 01 88 	store_32 ra, 108(sp)
   20c8c:	3e 90 01 88 	store_32 s1, 100(sp)
   20c90:	21 1c 00 10 	cmpeq_i s1, s1, 7
   20c94:	1e a0 01 88 	store_32 s0, 104(sp)
   20c98:	1b 04 00 4f 	movehi s0, 59
   20c9c:	41 00 00 f4 	bnz s1, 8 <EV_DoDoor+0x30>
   20ca0:	49 00 00 f6 	b 292 <EV_DoDoor+0x150>
   20ca4:	00 83 4b 00 	or s24, s0, 4832
   20ca8:	10 00 00 4f 	movehi s0, 16
   20cac:	20 a0 00 0f 	move s1, 40
   20cb0:	3e 70 01 88 	store_32 s1, 92(sp)
   20cb4:	20 cc 00 0f 	move s1, 51
   20cb8:	3e 60 01 88 	store_32 s1, 88(sp)
   20cbc:	00 a0 26 00 	or s0, s0, 2472
   20cc0:	1e 50 01 88 	store_32 s0, 84(sp)
   20cc4:	00 1c 00 0f 	move s0, 7
   20cc8:	1e 40 01 88 	store_32 s0, 80(sp)
   20ccc:	00 58 02 0f 	move s0, 150
   20cd0:	1e 30 01 88 	store_32 s0, 76(sp)
   20cd4:	10 00 00 4f 	movehi s0, 16
   20cd8:	1e 20 01 88 	store_32 s0, 72(sp)
   20cdc:	00 fc ff 4f 	movehi s0, 524256
   20ce0:	1e 10 01 88 	store_32 s0, 68(sp)
   20ce4:	00 08 00 4f 	movehi s0, 64
   20ce8:	1e 00 01 88 	store_32 s0, 64(sp)
   20cec:	00 64 01 0f 	move s0, 89
   20cf0:	1e f0 00 88 	store_32 s0, 60(sp)
   20cf4:	00 04 00 0f 	move s0, 1
   20cf8:	1e e0 00 88 	store_32 s0, 56(sp)
   20cfc:	20 03 00 0f 	move s25, 0
   20d00:	3e 83 01 88 	store_32 s25, 96(sp)
   20d04:	40 ff ff 0f 	move s26, -1
   20d08:	5e 93 01 88 	store_32 s26, 100(sp)
   20d0c:	27 00 00 f6 	b 156 <EV_DoDoor+0x134>
   20d10:	18 00 00 a8 	load_32 s0, (s24)
   20d14:	3a 60 01 07 	mull_i s1, s26, 88
   20d18:	60 83 50 c0 	add_i s27, s0, s1
   20d1c:	1b 30 01 a8 	load_32 s0, 76(s27)
   20d20:	40 04 00 f4 	bnz s0, 136 <EV_DoDoor+0x134>
   20d24:	1b 30 01 05 	add_i s0, s27, 76
   20d28:	1e d0 00 88 	store_32 s0, 52(sp)
   20d2c:	1e 70 01 a8 	load_32 s0, 92(sp)
   20d30:	3e 60 01 a8 	load_32 s1, 88(sp)
   20d34:	5e 80 01 a8 	load_32 s2, 96(sp)
   20d38:	e8 ae 00 f8 	call 179104 <Z_Malloc>
   20d3c:	20 03 f0 c0 	move s25, s0
   20d40:	76 4b 00 f8 	call 77272 <P_AddThinker>
   20d44:	1e d0 00 a8 	load_32 s0, 52(sp)
   20d48:	20 03 00 88 	store_32 s25, (s0)
   20d4c:	1e 50 01 a8 	load_32 s0, 84(sp)
   20d50:	19 20 00 88 	store_32 s0, 8(s25)
   20d54:	79 43 00 88 	store_32 s27, 16(s25)
   20d58:	1e 40 01 a8 	load_32 s0, 80(sp)
   20d5c:	19 30 00 88 	store_32 s0, 12(s25)
   20d60:	1e 30 01 a8 	load_32 s0, 76(sp)
   20d64:	19 80 00 88 	store_32 s0, 32(s25)
   20d68:	1e 20 01 a8 	load_32 s0, 72(sp)
   20d6c:	19 60 00 88 	store_32 s0, 24(s25)
   20d70:	00 80 fd c0 	move s0, s27
   20d74:	09 3d 00 f8 	call 62500 <P_FindLowestCeilingSurrounding>
   20d78:	3e 10 01 a8 	load_32 s1, 68(sp)
   20d7c:	00 80 50 c0 	add_i s0, s0, s1
   20d80:	19 50 00 88 	store_32 s0, 20(s25)
   20d84:	1e 90 01 a8 	load_32 s0, 100(sp)
   20d88:	19 70 00 88 	store_32 s0, 28(s25)
   20d8c:	1e 00 01 a8 	load_32 s0, 64(sp)
   20d90:	19 60 00 88 	store_32 s0, 24(s25)
   20d94:	19 40 00 a8 	load_32 s0, 16(s25)
   20d98:	3e f0 00 a8 	load_32 s1, 60(sp)
   20d9c:	00 b0 00 05 	add_i s0, s0, 44
   20da0:	91 ad 00 f8 	call 177732 <S_StartSound>
   20da4:	3e e3 00 a8 	load_32 s25, 56(sp)
   20da8:	1e a0 01 a8 	load_32 s0, 104(sp)
   20dac:	20 00 fd c0 	move s1, s26
   20db0:	3f 3d 00 f8 	call 62716 <P_FindSectorFromLineTag>
   20db4:	40 03 f0 c0 	move s26, s0
   20db8:	1a fc ff 12 	cmpgt_i s0, s26, -1
   20dbc:	a0 fa ff f5 	bnz s0, -172 <EV_DoDoor+0x9c>
   20dc0:	89 00 00 f6 	b 548 <EV_DoDoor+0x370>
   20dc4:	20 83 4b 00 	or s25, s0, 4832
   20dc8:	10 00 00 4f 	movehi s0, 16
   20dcc:	40 a0 00 0f 	move s2, 40
   20dd0:	5e 60 01 88 	store_32 s2, 88(sp)
   20dd4:	40 cc 00 0f 	move s2, 51
   20dd8:	5e 50 01 88 	store_32 s2, 84(sp)
   20ddc:	00 a0 26 00 	or s0, s0, 2472
   20de0:	1e 40 01 88 	store_32 s0, 80(sp)
   20de4:	00 58 02 0f 	move s0, 150
   20de8:	1e 30 01 88 	store_32 s0, 76(sp)
   20dec:	10 00 00 4f 	movehi s0, 16
   20df0:	1e 20 01 88 	store_32 s0, 72(sp)
   20df4:	03 00 00 4f 	movehi s0, 3
   20df8:	7e 90 01 a8 	load_32 s3, 100(sp)
   20dfc:	60 ff ff 0f 	move s27, -1
   20e00:	00 03 00 0f 	move s24, 0
   20e04:	00 40 3e 00 	or s0, s0, 3984
   20e08:	63 18 00 16 	cmpgt_u s3, s3, 6
   20e0c:	7e 10 01 88 	store_32 s3, 68(sp)
   20e10:	1e f0 00 88 	store_32 s0, 60(sp)
   20e14:	00 fc ff 4f 	movehi s0, 524256
   20e18:	1e e0 00 88 	store_32 s0, 56(sp)
   20e1c:	00 50 00 0f 	move s0, 20
   20e20:	1e a0 00 88 	store_32 s0, 40(sp)
   20e24:	00 54 00 0f 	move s0, 21
   20e28:	1e b0 00 88 	store_32 s0, 44(sp)
   20e2c:	00 08 00 4f 	movehi s0, 64
   20e30:	1e d0 00 88 	store_32 s0, 52(sp)
   20e34:	00 60 01 0f 	move s0, 88
   20e38:	1e 90 00 88 	store_32 s0, 36(sp)
   20e3c:	40 04 00 0f 	move s2, 1
   20e40:	1e 73 01 88 	store_32 s24, 92(sp)
   20e44:	7e c3 00 88 	store_32 s27, 48(sp)
   20e48:	5e 80 01 88 	store_32 s2, 96(sp)
   20e4c:	04 00 00 f6 	b 16 <EV_DoDoor+0x1e8>
   20e50:	65 ad 00 f8 	call 177556 <S_StartSound>
   20e54:	5e 80 01 a8 	load_32 s2, 96(sp)
   20e58:	00 03 f1 c0 	move s24, s2
   20e5c:	1e a0 01 a8 	load_32 s0, 104(sp)
   20e60:	20 80 fd c0 	move s1, s27
   20e64:	12 3d 00 f8 	call 62536 <P_FindSectorFromLineTag>
   20e68:	60 03 f0 c0 	move s27, s0
   20e6c:	1b 00 00 14 	cmplt_i s0, s27, 0
   20e70:	80 0b 00 f4 	bnz s0, 368 <EV_DoDoor+0x36c>
   20e74:	19 00 00 a8 	load_32 s0, (s25)
   20e78:	3b 60 01 07 	mull_i s1, s27, 88
   20e7c:	40 83 50 c0 	add_i s26, s0, s1
   20e80:	1a 30 01 a8 	load_32 s0, 76(s26)
   20e84:	c0 fe ff f5 	bnz s0, -40 <EV_DoDoor+0x1e8>
   20e88:	1a 30 01 05 	add_i s0, s26, 76
   20e8c:	1e 00 01 88 	store_32 s0, 64(sp)
   20e90:	1e 60 01 a8 	load_32 s0, 88(sp)
   20e94:	3e 50 01 a8 	load_32 s1, 84(sp)
   20e98:	5e 70 01 a8 	load_32 s2, 92(sp)
   20e9c:	8f ae 00 f8 	call 178748 <Z_Malloc>
   20ea0:	00 03 f0 c0 	move s24, s0
   20ea4:	1d 4b 00 f8 	call 76916 <P_AddThinker>
   20ea8:	1e 00 01 a8 	load_32 s0, 64(sp)
   20eac:	00 03 00 88 	store_32 s24, (s0)
   20eb0:	1e 40 01 a8 	load_32 s0, 80(sp)
   20eb4:	18 20 00 88 	store_32 s0, 8(s24)
   20eb8:	58 43 00 88 	store_32 s26, 16(s24)
   20ebc:	1e 90 01 a8 	load_32 s0, 100(sp)
   20ec0:	18 30 00 88 	store_32 s0, 12(s24)
   20ec4:	1e 30 01 a8 	load_32 s0, 76(sp)
   20ec8:	18 80 00 88 	store_32 s0, 32(s24)
   20ecc:	1e 20 01 a8 	load_32 s0, 72(sp)
   20ed0:	1e 03 01 88 	store_32 s24, 64(sp)
   20ed4:	18 60 00 88 	store_32 s0, 24(s24)
   20ed8:	5e 80 01 a8 	load_32 s2, 96(sp)
   20edc:	00 03 f1 c0 	move s24, s2
   20ee0:	1e 10 01 a8 	load_32 s0, 68(sp)
   20ee4:	c0 fb ff f5 	bnz s0, -136 <EV_DoDoor+0x1e8>
   20ee8:	1e 90 01 a8 	load_32 s0, 100(sp)
   20eec:	3e f0 00 a8 	load_32 s1, 60(sp)
   20ef0:	00 08 00 0b 	shl s0, s0, 2
   20ef4:	00 80 50 c0 	add_i s0, s0, s1
   20ef8:	00 00 00 a8 	load_32 s0, (s0)
   20efc:	00 03 f1 c0 	move s24, s2
   20f00:	00 00 00 f0 	b s0
   20f04:	1e 03 01 a8 	load_32 s24, 64(sp)
   20f08:	58 70 00 88 	store_32 s2, 28(s24)
   20f0c:	00 00 fd c0 	move s0, s26
   20f10:	a2 3c 00 f8 	call 62088 <P_FindLowestCeilingSurrounding>
   20f14:	5e 80 01 a8 	load_32 s2, 96(sp)
   20f18:	3e e0 00 a8 	load_32 s1, 56(sp)
   20f1c:	00 80 50 c0 	add_i s0, s0, s1
   20f20:	18 50 00 88 	store_32 s0, 20(s24)
   20f24:	3a 10 00 a8 	load_32 s1, 4(s26)
   20f28:	00 03 f1 c0 	move s24, s2
   20f2c:	00 80 00 c1 	cmpeq_i s0, s0, s1
   20f30:	60 f9 ff f5 	bnz s0, -212 <EV_DoDoor+0x1e8>
   20f34:	1e 00 01 a8 	load_32 s0, 64(sp)
   20f38:	00 40 00 a8 	load_32 s0, 16(s0)
   20f3c:	3e a0 00 a8 	load_32 s1, 40(sp)
   20f40:	00 b0 00 05 	add_i s0, s0, 44
   20f44:	c3 ff ff f7 	b -244 <EV_DoDoor+0x1dc>
   20f48:	1e 03 01 a8 	load_32 s24, 64(sp)
   20f4c:	58 70 00 88 	store_32 s2, 28(s24)
   20f50:	00 00 fd c0 	move s0, s26
   20f54:	91 3c 00 f8 	call 62020 <P_FindLowestCeilingSurrounding>
   20f58:	5e 80 01 a8 	load_32 s2, 96(sp)
   20f5c:	3e e0 00 a8 	load_32 s1, 56(sp)
   20f60:	00 80 50 c0 	add_i s0, s0, s1
   20f64:	18 50 00 88 	store_32 s0, 20(s24)
   20f68:	3e d0 00 a8 	load_32 s1, 52(sp)
   20f6c:	38 60 00 88 	store_32 s1, 24(s24)
   20f70:	3a 10 00 a8 	load_32 s1, 4(s26)
   20f74:	00 03 f1 c0 	move s24, s2
   20f78:	00 80 00 c1 	cmpeq_i s0, s0, s1
   20f7c:	00 f7 ff f5 	bnz s0, -288 <EV_DoDoor+0x1e8>
   20f80:	1e 00 01 a8 	load_32 s0, 64(sp)
   20f84:	00 40 00 a8 	load_32 s0, 16(s0)
   20f88:	3e 90 00 a8 	load_32 s1, 36(sp)
   20f8c:	00 b0 00 05 	add_i s0, s0, 44
   20f90:	b0 ff ff f7 	b -320 <EV_DoDoor+0x1dc>
   20f94:	1a 10 00 a8 	load_32 s0, 4(s26)
   20f98:	3e 00 01 a8 	load_32 s1, 64(sp)
   20f9c:	01 50 00 88 	store_32 s0, 20(s1)
   20fa0:	1e c0 00 a8 	load_32 s0, 48(sp)
   20fa4:	01 70 00 88 	store_32 s0, 28(s1)
   20fa8:	1a b0 00 05 	add_i s0, s26, 44
   20fac:	0b 00 00 f6 	b 44 <EV_DoDoor+0x364>
   20fb0:	00 00 fd c0 	move s0, s26
   20fb4:	79 3c 00 f8 	call 61924 <P_FindLowestCeilingSurrounding>
   20fb8:	3e e0 00 a8 	load_32 s1, 56(sp)
   20fbc:	00 80 50 c0 	add_i s0, s0, s1
   20fc0:	3e 00 01 a8 	load_32 s1, 64(sp)
   20fc4:	01 50 00 88 	store_32 s0, 20(s1)
   20fc8:	1e c0 00 a8 	load_32 s0, 48(sp)
   20fcc:	01 70 00 88 	store_32 s0, 28(s1)
   20fd0:	01 40 00 a8 	load_32 s0, 16(s1)
   20fd4:	00 b0 00 05 	add_i s0, s0, 44
   20fd8:	3e b0 00 a8 	load_32 s1, 44(sp)
   20fdc:	9d ff ff f7 	b -396 <EV_DoDoor+0x1dc>
   20fe0:	20 03 fc c0 	move s25, s24
   20fe4:	00 80 fc c0 	move s0, s25
   20fe8:	fe b3 01 a8 	load_32 ra, 108(sp)
   20fec:	7e c3 01 a8 	load_32 s27, 112(sp)
   20ff0:	5e d3 01 a8 	load_32 s26, 116(sp)
   20ff4:	3e e3 01 a8 	load_32 s25, 120(sp)
   20ff8:	1e f3 01 a8 	load_32 s24, 124(sp)
   20ffc:	de 03 02 05 	add_i sp, sp, 128
   21000:	1f 00 00 f0 	ret

0000000000021004 EV_VerticalDoor:
   21004:	de 03 ff 05 	add_i sp, sp, -64
   21008:	1e f3 00 88 	store_32 s24, 60(sp)
   2100c:	3e e3 00 88 	store_32 s25, 56(sp)
   21010:	5e d3 00 88 	store_32 s26, 52(sp)
   21014:	7e c3 00 88 	store_32 s27, 48(sp)
   21018:	fe b3 00 88 	store_32 ra, 44(sp)
   2101c:	00 03 f0 c0 	move s24, s0
   21020:	01 10 02 a8 	load_32 s0, 132(s1)
   21024:	38 48 00 a6 	load_s16 s1, 18(s24)
   21028:	41 98 ff 05 	add_i s2, s1, -26
   2102c:	62 20 00 16 	cmpgt_u s3, s2, 8
   21030:	03 04 00 f4 	bnz s3, 128 <EV_VerticalDoor+0xac>
   21034:	60 04 00 0f 	move s3, 1
   21038:	63 00 b1 c0 	shl s3, s3, s2
   2103c:	83 04 01 01 	and s4, s3, 65
   21040:	c4 01 00 f4 	bnz s4, 56 <EV_VerticalDoor+0x74>
   21044:	83 10 02 01 	and s4, s3, 132
   21048:	84 02 00 f4 	bnz s4, 80 <EV_VerticalDoor+0x94>
   2104c:	63 08 04 01 	and s3, s3, 258
   21050:	43 00 00 f4 	bnz s3, 8 <EV_VerticalDoor+0x54>
   21054:	17 00 00 f6 	b 92 <EV_VerticalDoor+0xac>
   21058:	80 0f 00 f2 	bz s0, 496 <EV_VerticalDoor+0x244>
   2105c:	60 20 01 a8 	load_32 s3, 72(s0)
   21060:	83 02 00 f4 	bnz s3, 80 <EV_VerticalDoor+0xac>
   21064:	60 50 01 a8 	load_32 s3, 84(s0)
   21068:	43 02 00 f4 	bnz s3, 72 <EV_VerticalDoor+0xac>
   2106c:	22 00 00 4f 	movehi s1, 2
   21070:	21 08 75 00 	or s1, s1, 7490
   21074:	7e 00 00 f6 	b 504 <EV_VerticalDoor+0x268>
   21078:	80 0e 00 f2 	bz s0, 464 <EV_VerticalDoor+0x244>
   2107c:	60 10 01 a8 	load_32 s3, 68(s0)
   21080:	83 01 00 f4 	bnz s3, 48 <EV_VerticalDoor+0xac>
   21084:	60 40 01 a8 	load_32 s3, 80(s0)
   21088:	43 01 00 f4 	bnz s3, 40 <EV_VerticalDoor+0xac>
   2108c:	20 00 00 4f 	movehi s1, 0
   21090:	21 e8 40 00 	or s1, s1, 4154
   21094:	76 00 00 f6 	b 472 <EV_VerticalDoor+0x268>
   21098:	80 0d 00 f2 	bz s0, 432 <EV_VerticalDoor+0x244>
   2109c:	60 30 01 a8 	load_32 s3, 76(s0)
   210a0:	83 00 00 f4 	bnz s3, 16 <EV_VerticalDoor+0xac>
   210a4:	60 60 01 a8 	load_32 s3, 88(s0)
   210a8:	43 00 00 f4 	bnz s3, 8 <EV_VerticalDoor+0xac>
   210ac:	6e 00 00 f6 	b 440 <EV_VerticalDoor+0x260>
   210b0:	7b 04 00 4f 	movehi s3, 59
   210b4:	63 a0 4b 00 	or s3, s3, 4840
   210b8:	63 00 00 a8 	load_32 s3, (s3)
   210bc:	98 60 00 a6 	load_s16 s4, 24(s24)
   210c0:	84 50 00 07 	mull_i s4, s4, 20
   210c4:	63 00 52 c0 	add_i s3, s3, s4
   210c8:	23 43 00 a8 	load_32 s25, 16(s3)
   210cc:	79 30 01 a8 	load_32 s3, 76(s25)
   210d0:	e3 01 00 f2 	bz s3, 60 <EV_VerticalDoor+0x108>
   210d4:	81 78 00 12 	cmpgt_i s4, s1, 30
   210d8:	84 02 00 f4 	bnz s4, 80 <EV_VerticalDoor+0x124>
   210dc:	42 0c 00 18 	cmplt_u s2, s2, 3
   210e0:	82 00 00 f4 	bnz s2, 16 <EV_VerticalDoor+0xec>
   210e4:	21 04 00 10 	cmpeq_i s1, s1, 1
   210e8:	41 00 00 f4 	bnz s1, 8 <EV_VerticalDoor+0xec>
   210ec:	16 00 00 f6 	b 88 <EV_VerticalDoor+0x140>
   210f0:	23 70 00 a8 	load_32 s1, 28(s3)
   210f4:	21 fc ff 10 	cmpeq_i s1, s1, -1
   210f8:	e1 07 00 f4 	bnz s1, 252 <EV_VerticalDoor+0x1f0>
   210fc:	60 0a 00 f2 	bz s0, 332 <EV_VerticalDoor+0x244>
   21100:	00 fc ff 0f 	move s0, -1
   21104:	03 70 00 88 	store_32 s0, 28(s3)
   21108:	50 00 00 f6 	b 320 <EV_VerticalDoor+0x244>
   2110c:	01 2c fe 05 	add_i s0, s1, -117
   21110:	00 08 00 18 	cmplt_u s0, s0, 2
   21114:	e0 01 00 f4 	bnz s0, 60 <EV_VerticalDoor+0x14c>
   21118:	01 04 00 10 	cmpeq_i s0, s1, 1
   2111c:	40 01 00 f4 	bnz s0, 40 <EV_VerticalDoor+0x140>
   21120:	01 7c 00 10 	cmpeq_i s0, s1, 31
   21124:	08 00 00 f6 	b 32 <EV_VerticalDoor+0x140>
   21128:	41 7c 00 10 	cmpeq_i s2, s1, 31
   2112c:	c2 00 00 f4 	bnz s2, 24 <EV_VerticalDoor+0x140>
   21130:	41 d8 01 10 	cmpeq_i s2, s1, 118
   21134:	e2 00 00 f4 	bnz s2, 28 <EV_VerticalDoor+0x14c>
   21138:	21 d4 01 11 	cmpne_i s1, s1, 117
   2113c:	41 00 00 f4 	bnz s1, 8 <EV_VerticalDoor+0x140>
   21140:	ec ff ff f7 	b -80 <EV_VerticalDoor+0xec>
   21144:	19 b0 00 05 	add_i s0, s25, 44
   21148:	20 50 00 0f 	move s1, 20
   2114c:	03 00 00 f6 	b 12 <EV_VerticalDoor+0x154>
   21150:	19 b0 00 05 	add_i s0, s25, 44
   21154:	20 60 01 0f 	move s1, 88
   21158:	a3 ac 00 f8 	call 176780 <S_StartSound>
   2115c:	60 03 00 0f 	move s27, 0
   21160:	00 a0 00 0f 	move s0, 40
   21164:	20 cc 00 0f 	move s1, 51
   21168:	40 80 fd c0 	move s2, s27
   2116c:	db ad 00 f8 	call 178028 <Z_Malloc>
   21170:	40 03 f0 c0 	move s26, s0
   21174:	69 4a 00 f8 	call 76196 <P_AddThinker>
   21178:	10 00 00 4f 	movehi s0, 16
   2117c:	59 33 01 88 	store_32 s26, 76(s25)
   21180:	00 a0 26 00 	or s0, s0, 2472
   21184:	1a 20 00 88 	store_32 s0, 8(s26)
   21188:	00 04 00 0f 	move s0, 1
   2118c:	3a 43 00 88 	store_32 s25, 16(s26)
   21190:	1a 70 00 88 	store_32 s0, 28(s26)
   21194:	10 00 00 4f 	movehi s0, 16
   21198:	1a 60 00 88 	store_32 s0, 24(s26)
   2119c:	00 58 02 0f 	move s0, 150
   211a0:	1a 80 00 88 	store_32 s0, 32(s26)
   211a4:	18 48 00 a6 	load_s16 s0, 18(s24)
   211a8:	20 78 00 12 	cmpgt_i s1, s0, 30
   211ac:	41 00 00 f4 	bnz s1, 8 <EV_VerticalDoor+0x1b0>
   211b0:	09 00 00 f6 	b 36 <EV_VerticalDoor+0x1d0>
   211b4:	20 84 ff 05 	add_i s1, s0, -31
   211b8:	21 10 00 18 	cmplt_u s1, s1, 4
   211bc:	41 00 00 f4 	bnz s1, 8 <EV_VerticalDoor+0x1c0>
   211c0:	10 00 00 f6 	b 64 <EV_VerticalDoor+0x1fc>
   211c4:	00 0c 00 0f 	move s0, 3
   211c8:	1a 30 00 88 	store_32 s0, 12(s26)
   211cc:	78 4b 00 86 	store_16 s27, 18(s24)
   211d0:	19 00 00 f6 	b 100 <EV_VerticalDoor+0x230>
   211d4:	20 98 ff 05 	add_i s1, s0, -26
   211d8:	21 0c 00 18 	cmplt_u s1, s1, 3
   211dc:	81 00 00 f4 	bnz s1, 16 <EV_VerticalDoor+0x1e8>
   211e0:	00 04 00 10 	cmpeq_i s0, s0, 1
   211e4:	40 00 00 f4 	bnz s0, 8 <EV_VerticalDoor+0x1e8>
   211e8:	13 00 00 f6 	b 76 <EV_VerticalDoor+0x230>
   211ec:	7a 33 00 88 	store_32 s27, 12(s26)
   211f0:	11 00 00 f6 	b 68 <EV_VerticalDoor+0x230>
   211f4:	00 04 00 0f 	move s0, 1
   211f8:	03 70 00 88 	store_32 s0, 28(s3)
   211fc:	13 00 00 f6 	b 76 <EV_VerticalDoor+0x244>
   21200:	20 d4 01 10 	cmpeq_i s1, s0, 117
   21204:	01 01 00 f4 	bnz s1, 32 <EV_VerticalDoor+0x220>
   21208:	00 d8 01 10 	cmpeq_i s0, s0, 118
   2120c:	40 00 00 f4 	bnz s0, 8 <EV_VerticalDoor+0x210>
   21210:	09 00 00 f6 	b 36 <EV_VerticalDoor+0x230>
   21214:	00 18 00 0f 	move s0, 6
   21218:	1a 30 00 88 	store_32 s0, 12(s26)
   2121c:	78 4b 00 86 	store_16 s27, 18(s24)
   21220:	03 00 00 f6 	b 12 <EV_VerticalDoor+0x228>
   21224:	00 14 00 0f 	move s0, 5
   21228:	1a 30 00 88 	store_32 s0, 12(s26)
   2122c:	00 08 00 4f 	movehi s0, 64
   21230:	1a 60 00 88 	store_32 s0, 24(s26)
   21234:	00 80 fc c0 	move s0, s25
   21238:	d8 3b 00 f8 	call 61280 <P_FindLowestCeilingSurrounding>
   2123c:	20 fc ff 4f 	movehi s1, 524256
   21240:	00 80 50 c0 	add_i s0, s0, s1
   21244:	1a 50 00 88 	store_32 s0, 20(s26)
   21248:	fe b3 00 a8 	load_32 ra, 44(sp)
   2124c:	7e c3 00 a8 	load_32 s27, 48(sp)
   21250:	5e d3 00 a8 	load_32 s26, 52(sp)
   21254:	3e e3 00 a8 	load_32 s25, 56(sp)
   21258:	1e f3 00 a8 	load_32 s24, 60(sp)
   2125c:	de 03 01 05 	add_i sp, sp, 64
   21260:	1f 00 00 f0 	ret
   21264:	20 00 00 4f 	movehi s1, 0
   21268:	21 84 6a 00 	or s1, s1, 6817
   2126c:	20 60 03 88 	store_32 s1, 216(s0)
   21270:	00 00 00 0f 	move s0, 0
   21274:	20 88 00 0f 	move s1, 34
   21278:	5b ac 00 f8 	call 176492 <S_StartSound>
   2127c:	f3 ff ff f7 	b -52 <EV_VerticalDoor+0x244>

0000000000021280 P_SpawnDoorCloseIn30:
   21280:	de 03 ff 05 	add_i sp, sp, -64
   21284:	1e f3 00 88 	store_32 s24, 60(sp)
   21288:	3e e3 00 88 	store_32 s25, 56(sp)
   2128c:	5e d3 00 88 	store_32 s26, 52(sp)
   21290:	fe c3 00 88 	store_32 ra, 48(sp)
   21294:	20 03 00 0f 	move s25, 0
   21298:	00 03 f0 c0 	move s24, s0
   2129c:	00 a0 00 0f 	move s0, 40
   212a0:	20 cc 00 0f 	move s1, 51
   212a4:	40 80 fc c0 	move s2, s25
   212a8:	8c ad 00 f8 	call 177712 <Z_Malloc>
   212ac:	40 03 f0 c0 	move s26, s0
   212b0:	1a 4a 00 f8 	call 75880 <P_AddThinker>
   212b4:	10 00 00 4f 	movehi s0, 16
   212b8:	58 33 01 88 	store_32 s26, 76(s24)
   212bc:	38 3b 00 86 	store_16 s25, 14(s24)
   212c0:	00 a0 26 00 	or s0, s0, 2472
   212c4:	1a 20 00 88 	store_32 s0, 8(s26)
   212c8:	10 00 00 4f 	movehi s0, 16
   212cc:	1a 43 00 88 	store_32 s24, 16(s26)
   212d0:	3a 73 00 88 	store_32 s25, 28(s26)
   212d4:	3a 33 00 88 	store_32 s25, 12(s26)
   212d8:	1a 60 00 88 	store_32 s0, 24(s26)
   212dc:	00 68 10 0f 	move s0, 1050
   212e0:	1a 90 00 88 	store_32 s0, 36(s26)
   212e4:	fe c3 00 a8 	load_32 ra, 48(sp)
   212e8:	5e d3 00 a8 	load_32 s26, 52(sp)
   212ec:	3e e3 00 a8 	load_32 s25, 56(sp)
   212f0:	1e f3 00 a8 	load_32 s24, 60(sp)
   212f4:	de 03 01 05 	add_i sp, sp, 64
   212f8:	1f 00 00 f0 	ret

00000000000212fc P_SpawnDoorRaiseIn5Mins:
   212fc:	de 03 ff 05 	add_i sp, sp, -64
   21300:	1e f3 00 88 	store_32 s24, 60(sp)
   21304:	3e e3 00 88 	store_32 s25, 56(sp)
   21308:	5e d3 00 88 	store_32 s26, 52(sp)
   2130c:	fe c3 00 88 	store_32 ra, 48(sp)
   21310:	20 03 00 0f 	move s25, 0
   21314:	00 03 f0 c0 	move s24, s0
   21318:	00 a0 00 0f 	move s0, 40
   2131c:	20 cc 00 0f 	move s1, 51
   21320:	40 80 fc c0 	move s2, s25
   21324:	6d ad 00 f8 	call 177588 <Z_Malloc>
   21328:	40 03 f0 c0 	move s26, s0
   2132c:	fb 49 00 f8 	call 75756 <P_AddThinker>
   21330:	10 00 00 4f 	movehi s0, 16
   21334:	58 33 01 88 	store_32 s26, 76(s24)
   21338:	38 3b 00 86 	store_16 s25, 14(s24)
   2133c:	00 a0 26 00 	or s0, s0, 2472
   21340:	1a 20 00 88 	store_32 s0, 8(s26)
   21344:	00 08 00 0f 	move s0, 2
   21348:	1a 43 00 88 	store_32 s24, 16(s26)
   2134c:	1a 70 00 88 	store_32 s0, 28(s26)
   21350:	00 10 00 0f 	move s0, 4
   21354:	1a 30 00 88 	store_32 s0, 12(s26)
   21358:	10 00 00 4f 	movehi s0, 16
   2135c:	1a 60 00 88 	store_32 s0, 24(s26)
   21360:	00 00 fc c0 	move s0, s24
   21364:	8d 3b 00 f8 	call 60980 <P_FindLowestCeilingSurrounding>
   21368:	20 fc ff 4f 	movehi s1, 524256
   2136c:	00 80 50 c0 	add_i s0, s0, s1
   21370:	1a 50 00 88 	store_32 s0, 20(s26)
   21374:	01 00 00 4f 	movehi s0, 1
   21378:	20 58 02 0f 	move s1, 150
   2137c:	3a 80 00 88 	store_32 s1, 32(s26)
   21380:	00 10 24 00 	or s0, s0, 2308
   21384:	1a 90 00 88 	store_32 s0, 36(s26)
   21388:	fe c3 00 a8 	load_32 ra, 48(sp)
   2138c:	5e d3 00 a8 	load_32 s26, 52(sp)
   21390:	3e e3 00 a8 	load_32 s25, 56(sp)
   21394:	1e f3 00 a8 	load_32 s24, 60(sp)
   21398:	de 03 01 05 	add_i sp, sp, 64
   2139c:	1f 00 00 f0 	ret

00000000000213a0 P_RecursiveSound:
   213a0:	de 03 ff 05 	add_i sp, sp, -64
   213a4:	1e f3 00 88 	store_32 s24, 60(sp)
   213a8:	3e e3 00 88 	store_32 s25, 56(sp)
   213ac:	5e d3 00 88 	store_32 s26, 52(sp)
   213b0:	7e c3 00 88 	store_32 s27, 48(sp)
   213b4:	fe b3 00 88 	store_32 ra, 44(sp)
   213b8:	54 04 00 4f 	movehi s2, 52
   213bc:	00 03 f0 c0 	move s24, s0
   213c0:	42 30 19 00 	or s2, s2, 1612
   213c4:	78 10 01 a8 	load_32 s3, 68(s24)
   213c8:	02 00 00 a8 	load_32 s0, (s2)
   213cc:	43 00 00 c1 	cmpeq_i s2, s3, s0
   213d0:	42 00 00 f4 	bnz s2, 8 <P_RecursiveSound+0x38>
   213d4:	07 00 00 f6 	b 28 <P_RecursiveSound+0x50>
   213d8:	58 50 00 a8 	load_32 s2, 20(s24)
   213dc:	60 80 f0 c0 	move s3, s1
   213e0:	21 04 00 05 	add_i s1, s1, 1
   213e4:	42 80 50 c1 	cmple_i s2, s2, s1
   213e8:	c2 0d 00 f4 	bnz s2, 440 <P_RecursiveSound+0x200>
   213ec:	03 00 00 f6 	b 12 <P_RecursiveSound+0x58>
   213f0:	60 80 f0 c0 	move s3, s1
   213f4:	21 04 00 05 	add_i s1, s1, 1
   213f8:	5b 04 00 4f 	movehi s2, 59
   213fc:	18 10 01 88 	store_32 s0, 68(s24)
   21400:	38 50 00 88 	store_32 s1, 20(s24)
   21404:	42 a0 2a 00 	or s2, s2, 2728
   21408:	02 00 00 a8 	load_32 s0, (s2)
   2140c:	18 60 00 88 	store_32 s0, 24(s24)
   21410:	18 40 01 a8 	load_32 s0, 80(s24)
   21414:	00 04 00 14 	cmplt_i s0, s0, 1
   21418:	40 0c 00 f4 	bnz s0, 392 <P_RecursiveSound+0x200>
   2141c:	03 06 00 f2 	bz s3, 192 <P_RecursiveSound+0x13c>
   21420:	1b 04 00 4f 	movehi s0, 59
   21424:	7e 90 00 88 	store_32 s3, 36(sp)
   21428:	3b 04 00 4f 	movehi s1, 59
   2142c:	60 03 00 0f 	move s27, 0
   21430:	20 b3 45 00 	or s25, s0, 4460
   21434:	01 a0 4b 00 	or s0, s1, 4840
   21438:	1e a0 00 88 	store_32 s0, 40(sp)
   2143c:	09 00 00 f6 	b 36 <P_RecursiveSound+0xc0>
   21440:	1a 60 00 a6 	load_s16 s0, 24(s26)
   21444:	00 50 00 07 	mull_i s0, s0, 20
   21448:	01 00 50 c0 	add_i s0, s1, s0
   2144c:	00 40 00 a8 	load_32 s0, 16(s0)
   21450:	3a 40 00 a0 	load_u8 s1, 16(s26)
   21454:	21 00 01 01 	and s1, s1, 64
   21458:	81 03 00 f4 	bnz s1, 112 <P_RecursiveSound+0x128>
   2145c:	19 00 00 f6 	b 100 <P_RecursiveSound+0x120>
   21460:	18 50 01 a8 	load_32 s0, 84(s24)
   21464:	3b 08 00 0b 	shl s1, s27, 2
   21468:	00 80 50 c0 	add_i s0, s0, s1
   2146c:	40 03 00 a8 	load_32 s26, (s0)
   21470:	1a 40 00 a0 	load_u8 s0, 16(s26)
   21474:	00 10 00 01 	and s0, s0, 4
   21478:	80 02 00 f2 	bz s0, 80 <P_RecursiveSound+0x128>
   2147c:	00 00 fd c0 	move s0, s26
   21480:	f7 21 00 f8 	call 34780 <P_LineOpening>
   21484:	19 00 00 a8 	load_32 s0, (s25)
   21488:	00 04 00 14 	cmplt_i s0, s0, 1
   2148c:	e0 01 00 f4 	bnz s0, 60 <P_RecursiveSound+0x128>
   21490:	1e a0 00 a8 	load_32 s0, 40(sp)
   21494:	20 00 00 a8 	load_32 s1, (s0)
   21498:	1a 58 00 a6 	load_s16 s0, 22(s26)
   2149c:	00 50 00 07 	mull_i s0, s0, 20
   214a0:	01 00 50 c0 	add_i s0, s1, s0
   214a4:	00 40 00 a8 	load_32 s0, 16(s0)
   214a8:	40 00 1c c1 	cmpne_i s2, s0, s24
   214ac:	42 00 00 f4 	bnz s2, 8 <P_RecursiveSound+0x114>
   214b0:	e4 ff ff f7 	b -112 <P_RecursiveSound+0xa0>
   214b4:	3a 40 00 a0 	load_u8 s1, 16(s26)
   214b8:	21 00 01 01 	and s1, s1, 64
   214bc:	61 00 00 f4 	bnz s1, 12 <P_RecursiveSound+0x128>
   214c0:	3e 90 00 a8 	load_32 s1, 36(sp)
   214c4:	b7 ff ff f9 	call -292 <P_RecursiveSound>
   214c8:	18 40 01 a8 	load_32 s0, 80(s24)
   214cc:	7b 07 00 05 	add_i s27, s27, 1
   214d0:	1b 00 40 c1 	cmplt_i s0, s27, s0
   214d4:	60 fc ff f5 	bnz s0, -116 <P_RecursiveSound+0xc0>
   214d8:	32 00 00 f6 	b 200 <P_RecursiveSound+0x200>
   214dc:	1b 04 00 4f 	movehi s0, 59
   214e0:	3b 04 00 4f 	movehi s1, 59
   214e4:	20 03 00 0f 	move s25, 0
   214e8:	40 b3 45 00 	or s26, s0, 4460
   214ec:	01 a0 4b 00 	or s0, s1, 4840
   214f0:	1e a0 00 88 	store_32 s0, 40(sp)
   214f4:	00 04 00 0f 	move s0, 1
   214f8:	1e 80 00 88 	store_32 s0, 32(sp)
   214fc:	3e 93 00 88 	store_32 s25, 36(sp)
   21500:	18 50 01 a8 	load_32 s0, 84(s24)
   21504:	39 08 00 0b 	shl s1, s25, 2
   21508:	00 80 50 c0 	add_i s0, s0, s1
   2150c:	60 03 00 a8 	load_32 s27, (s0)
   21510:	1b 40 00 a0 	load_u8 s0, 16(s27)
   21514:	00 10 00 01 	and s0, s0, 4
   21518:	c0 03 00 f2 	bz s0, 120 <P_RecursiveSound+0x1f0>
   2151c:	00 80 fd c0 	move s0, s27
   21520:	cf 21 00 f8 	call 34620 <P_LineOpening>
   21524:	1a 00 00 a8 	load_32 s0, (s26)
   21528:	00 04 00 14 	cmplt_i s0, s0, 1
   2152c:	20 03 00 f4 	bnz s0, 100 <P_RecursiveSound+0x1f0>
   21530:	1e a0 00 a8 	load_32 s0, 40(sp)
   21534:	20 00 00 a8 	load_32 s1, (s0)
   21538:	1b 58 00 a6 	load_s16 s0, 22(s27)
   2153c:	00 50 00 07 	mull_i s0, s0, 20
   21540:	01 00 50 c0 	add_i s0, s1, s0
   21544:	00 40 00 a8 	load_32 s0, 16(s0)
   21548:	40 00 1c c1 	cmpne_i s2, s0, s24
   2154c:	42 00 00 f4 	bnz s2, 8 <P_RecursiveSound+0x1b4>
   21550:	07 00 00 f6 	b 28 <P_RecursiveSound+0x1cc>
   21554:	3b 40 00 a0 	load_u8 s1, 16(s27)
   21558:	21 00 01 01 	and s1, s1, 64
   2155c:	41 00 00 f2 	bz s1, 8 <P_RecursiveSound+0x1c4>
   21560:	0a 00 00 f6 	b 40 <P_RecursiveSound+0x1e8>
   21564:	3e 90 00 a8 	load_32 s1, 36(sp)
   21568:	09 00 00 f6 	b 36 <P_RecursiveSound+0x1ec>
   2156c:	1b 60 00 a6 	load_s16 s0, 24(s27)
   21570:	00 50 00 07 	mull_i s0, s0, 20
   21574:	01 00 50 c0 	add_i s0, s1, s0
   21578:	00 40 00 a8 	load_32 s0, 16(s0)
   2157c:	3b 40 00 a0 	load_u8 s1, 16(s27)
   21580:	21 00 01 01 	and s1, s1, 64
   21584:	01 ff ff f3 	bz s1, -32 <P_RecursiveSound+0x1c4>
   21588:	3e 80 00 a8 	load_32 s1, 32(sp)
   2158c:	85 ff ff f9 	call -492 <P_RecursiveSound>
   21590:	18 40 01 a8 	load_32 s0, 80(s24)
   21594:	39 07 00 05 	add_i s25, s25, 1
   21598:	19 00 40 c1 	cmplt_i s0, s25, s0
   2159c:	20 fb ff f5 	bnz s0, -156 <P_RecursiveSound+0x160>
   215a0:	fe b3 00 a8 	load_32 ra, 44(sp)
   215a4:	7e c3 00 a8 	load_32 s27, 48(sp)
   215a8:	5e d3 00 a8 	load_32 s26, 52(sp)
   215ac:	3e e3 00 a8 	load_32 s25, 56(sp)
   215b0:	1e f3 00 a8 	load_32 s24, 60(sp)
   215b4:	de 03 01 05 	add_i sp, sp, 64
   215b8:	1f 00 00 f0 	ret

00000000000215bc P_NoiseAlert:
   215bc:	de 03 ff 05 	add_i sp, sp, -64
   215c0:	fe f3 00 88 	store_32 ra, 60(sp)
   215c4:	5b 04 00 4f 	movehi s2, 59
   215c8:	74 04 00 4f 	movehi s3, 52
   215cc:	42 a0 2a 00 	or s2, s2, 2728
   215d0:	63 30 19 00 	or s3, s3, 1612
   215d4:	02 00 00 88 	store_32 s0, (s2)
   215d8:	03 00 00 a8 	load_32 s0, (s3)
   215dc:	00 04 00 05 	add_i s0, s0, 1
   215e0:	03 00 00 88 	store_32 s0, (s3)
   215e4:	01 d0 00 a8 	load_32 s0, 52(s1)
   215e8:	20 00 00 0f 	move s1, 0
   215ec:	00 00 00 a8 	load_32 s0, (s0)
   215f0:	6c ff ff f9 	call -592 <P_RecursiveSound>
   215f4:	fe f3 00 a8 	load_32 ra, 60(sp)
   215f8:	de 03 01 05 	add_i sp, sp, 64
   215fc:	1f 00 00 f0 	ret

0000000000021600 P_CheckMeleeRange:
   21600:	de 03 ff 05 	add_i sp, sp, -64
   21604:	1e f3 00 88 	store_32 s24, 60(sp)
   21608:	3e e3 00 88 	store_32 s25, 56(sp)
   2160c:	5e d3 00 88 	store_32 s26, 52(sp)
   21610:	fe c3 00 88 	store_32 ra, 48(sp)
   21614:	20 03 f0 c0 	move s25, s0
   21618:	00 03 00 0f 	move s24, 0
   2161c:	59 e3 01 a8 	load_32 s26, 120(s25)
   21620:	7a 02 00 f2 	bz s26, 76 <P_CheckMeleeRange+0x6c>
   21624:	1a 30 00 a8 	load_32 s0, 12(s26)
   21628:	39 30 00 a8 	load_32 s1, 12(s25)
   2162c:	5a 40 00 a8 	load_32 s2, 16(s26)
   21630:	79 40 00 a8 	load_32 s3, 16(s25)
   21634:	00 80 60 c0 	sub_i s0, s0, s1
   21638:	22 80 61 c0 	sub_i s1, s2, s3
   2163c:	20 20 00 f8 	call 32896 <P_AproxDistance>
   21640:	3a 70 01 a8 	load_32 s1, 92(s26)
   21644:	40 2c 00 4f 	movehi s2, 352
   21648:	21 00 01 a8 	load_32 s1, 64(s1)
   2164c:	21 00 51 c0 	add_i s1, s1, s2
   21650:	00 80 30 c1 	cmpge_i s0, s0, s1
   21654:	c0 00 00 f4 	bnz s0, 24 <P_CheckMeleeRange+0x6c>
   21658:	39 e0 01 a8 	load_32 s1, 120(s25)
   2165c:	00 80 fc c0 	move s0, s25
   21660:	55 39 00 f8 	call 58708 <P_CheckSight>
   21664:	00 00 00 11 	cmpne_i s0, s0, 0
   21668:	00 07 00 01 	and s24, s0, 1
   2166c:	00 00 fc c0 	move s0, s24
   21670:	fe c3 00 a8 	load_32 ra, 48(sp)
   21674:	5e d3 00 a8 	load_32 s26, 52(sp)
   21678:	3e e3 00 a8 	load_32 s25, 56(sp)
   2167c:	1e f3 00 a8 	load_32 s24, 60(sp)
   21680:	de 03 01 05 	add_i sp, sp, 64
   21684:	1f 00 00 f0 	ret

0000000000021688 P_CheckMissileRange:
   21688:	de 03 ff 05 	add_i sp, sp, -64
   2168c:	1e f3 00 88 	store_32 s24, 60(sp)
   21690:	3e e3 00 88 	store_32 s25, 56(sp)
   21694:	fe d3 00 88 	store_32 ra, 52(sp)
   21698:	20 03 f0 c0 	move s25, s0
   2169c:	39 e0 01 a8 	load_32 s1, 120(s25)
   216a0:	45 39 00 f8 	call 58644 <P_CheckSight>
   216a4:	00 03 00 0f 	move s24, 0
   216a8:	00 04 00 f2 	bz s0, 128 <P_CheckMissileRange+0xa0>
   216ac:	19 a0 01 a8 	load_32 s0, 104(s25)
   216b0:	20 00 01 01 	and s1, s0, 64
   216b4:	41 00 00 f2 	bz s1, 8 <P_CheckMissileRange+0x34>
   216b8:	19 00 00 f6 	b 100 <P_CheckMissileRange+0x94>
   216bc:	19 f0 01 a8 	load_32 s0, 124(s25)
   216c0:	40 03 00 f4 	bnz s0, 104 <P_CheckMissileRange+0xa0>
   216c4:	19 30 00 a8 	load_32 s0, 12(s25)
   216c8:	39 e0 01 a8 	load_32 s1, 120(s25)
   216cc:	41 30 00 a8 	load_32 s2, 12(s1)
   216d0:	79 40 00 a8 	load_32 s3, 16(s25)
   216d4:	21 40 00 a8 	load_32 s1, 16(s1)
   216d8:	00 00 61 c0 	sub_i s0, s0, s2
   216dc:	23 80 60 c0 	sub_i s1, s3, s1
   216e0:	f7 1f 00 f8 	call 32732 <P_AproxDistance>
   216e4:	39 70 01 a8 	load_32 s1, 92(s25)
   216e8:	21 a0 00 a8 	load_32 s1, 40(s1)
   216ec:	21 00 00 10 	cmpeq_i s1, s1, 0
   216f0:	81 02 00 f4 	bnz s1, 80 <P_CheckMissileRange+0xb8>
   216f4:	40 c0 ff 4f 	movehi s2, 523776
   216f8:	39 60 01 a8 	load_32 s1, 88(s25)
   216fc:	02 00 50 c0 	add_i s0, s2, s0
   21700:	61 0c 00 11 	cmpne_i s3, s1, 3
   21704:	a3 02 00 f4 	bnz s3, 84 <P_CheckMissileRange+0xd0>
   21708:	47 80 03 4f 	movehi s2, 7175
   2170c:	42 fc 7f 00 	or s2, s2, 8191
   21710:	40 00 21 c1 	cmpgt_i s2, s0, s2
   21714:	a2 00 00 f4 	bnz s2, 20 <P_CheckMissileRange+0xa0>
   21718:	10 00 00 f6 	b 64 <P_CheckMissileRange+0xd0>
   2171c:	00 fc fe 01 	and s0, s0, -65
   21720:	19 a0 01 88 	store_32 s0, 104(s25)
   21724:	00 07 00 0f 	move s24, 1
   21728:	00 00 fc c0 	move s0, s24
   2172c:	fe d3 00 a8 	load_32 ra, 52(sp)
   21730:	3e e3 00 a8 	load_32 s25, 56(sp)
   21734:	1e f3 00 a8 	load_32 s24, 60(sp)
   21738:	de 03 01 05 	add_i sp, sp, 64
   2173c:	1f 00 00 f0 	ret
   21740:	40 40 ff 4f 	movehi s2, 522752
   21744:	39 60 01 a8 	load_32 s1, 88(s25)
   21748:	02 00 50 c0 	add_i s0, s2, s0
   2174c:	61 0c 00 11 	cmpne_i s3, s1, 3
   21750:	43 00 00 f4 	bnz s3, 8 <P_CheckMissileRange+0xd0>
   21754:	ed ff ff f7 	b -76 <P_CheckMissileRange+0x80>
   21758:	41 b8 ff 05 	add_i s2, s1, -18
   2175c:	42 08 00 18 	cmplt_u s2, s2, 2
   21760:	82 01 00 f4 	bnz s2, 48 <P_CheckMissileRange+0x108>
   21764:	41 54 00 10 	cmpeq_i s2, s1, 21
   21768:	42 01 00 f4 	bnz s2, 40 <P_CheckMissileRange+0x108>
   2176c:	41 14 00 11 	cmpne_i s2, s1, 5
   21770:	42 03 00 f4 	bnz s2, 104 <P_CheckMissileRange+0x150>
   21774:	40 c4 00 4f 	movehi s2, 1568
   21778:	40 00 41 c1 	cmplt_i s2, s0, s2
   2177c:	62 fd ff f5 	bnz s2, -84 <P_CheckMissileRange+0xa0>
   21780:	00 44 00 0a 	shr s0, s0, 17
   21784:	40 20 03 14 	cmplt_i s2, s0, 200
   21788:	c2 00 00 f4 	bnz s2, 24 <P_CheckMissileRange+0x118>
   2178c:	04 00 00 f6 	b 16 <P_CheckMissileRange+0x114>
   21790:	00 44 00 09 	ashr s0, s0, 17
   21794:	40 20 03 14 	cmplt_i s2, s0, 200
   21798:	42 00 00 f4 	bnz s2, 8 <P_CheckMissileRange+0x118>
   2179c:	00 20 03 0f 	move s0, 200
   217a0:	40 80 02 12 	cmpgt_i s2, s0, 160
   217a4:	a2 00 00 f4 	bnz s2, 20 <P_CheckMissileRange+0x130>
   217a8:	00 03 f0 c0 	move s24, s0
   217ac:	21 54 00 10 	cmpeq_i s1, s1, 21
   217b0:	c1 00 00 f4 	bnz s1, 24 <P_CheckMissileRange+0x140>
   217b4:	04 00 00 f6 	b 16 <P_CheckMissileRange+0x13c>
   217b8:	00 83 02 0f 	move s24, 160
   217bc:	21 54 00 10 	cmpeq_i s1, s1, 21
   217c0:	41 00 00 f4 	bnz s1, 8 <P_CheckMissileRange+0x140>
   217c4:	00 03 f0 c0 	move s24, s0
   217c8:	cb ea ff f9 	call -21716 <P_Random>
   217cc:	00 00 3c c1 	cmpge_i s0, s0, s24
   217d0:	00 07 00 01 	and s24, s0, 1
   217d4:	d5 ff ff f7 	b -172 <P_CheckMissileRange+0xa0>
   217d8:	00 40 00 09 	ashr s0, s0, 16
   217dc:	40 20 03 14 	cmplt_i s2, s0, 200
   217e0:	02 fe ff f5 	bnz s2, -64 <P_CheckMissileRange+0x118>
   217e4:	ee ff ff f7 	b -72 <P_CheckMissileRange+0x114>

00000000000217e8 P_Move:
   217e8:	de 03 fe 05 	add_i sp, sp, -128
   217ec:	1e f3 01 88 	store_32 s24, 124(sp)
   217f0:	3e e3 01 88 	store_32 s25, 120(sp)
   217f4:	5e d3 01 88 	store_32 s26, 116(sp)
   217f8:	7e c3 01 88 	store_32 s27, 112(sp)
   217fc:	fe b3 01 88 	store_32 ra, 108(sp)
   21800:	00 03 f0 c0 	move s24, s0
   21804:	40 03 00 0f 	move s26, 0
   21808:	18 c0 01 a8 	load_32 s0, 112(s24)
   2180c:	20 20 00 10 	cmpeq_i s1, s0, 8
   21810:	a1 0b 00 f4 	bnz s1, 372 <P_Move+0x19c>
   21814:	20 20 00 18 	cmplt_u s1, s0, 8
   21818:	c1 00 00 f4 	bnz s1, 24 <P_Move+0x48>
   2181c:	00 00 00 4f 	movehi s0, 0
   21820:	00 a0 06 00 	or s0, s0, 424
   21824:	1e 00 00 88 	store_32 s0, (sp)
   21828:	37 b2 ff f9 	call -79652 <I_Error>
   2182c:	18 c0 01 a8 	load_32 s0, 112(s24)
   21830:	53 04 00 4f 	movehi s2, 51
   21834:	38 30 00 a8 	load_32 s1, 12(s24)
   21838:	93 04 00 4f 	movehi s4, 51
   2183c:	78 70 01 a8 	load_32 s3, 92(s24)
   21840:	00 08 00 0b 	shl s0, s0, 2
   21844:	42 a0 7a 00 	or s2, s2, 7848
   21848:	84 20 7b 00 	or s4, s4, 7880
   2184c:	63 f0 00 a8 	load_32 s3, 60(s3)
   21850:	42 00 50 c0 	add_i s2, s2, s0
   21854:	04 00 50 c0 	add_i s0, s4, s0
   21858:	42 00 00 a8 	load_32 s2, (s2)
   2185c:	98 40 00 a8 	load_32 s4, 16(s24)
   21860:	00 00 00 a8 	load_32 s0, (s0)
   21864:	42 80 71 c0 	mull_i s2, s2, s3
   21868:	00 80 71 c0 	mull_i s0, s0, s3
   2186c:	22 80 50 c0 	add_i s1, s2, s1
   21870:	40 00 52 c0 	add_i s2, s0, s4
   21874:	00 00 fc c0 	move s0, s24
   21878:	1f 1a 00 f8 	call 26748 <P_TryMove>
   2187c:	38 a0 01 a8 	load_32 s1, 104(s24)
   21880:	40 00 00 f4 	bnz s0, 8 <P_Move+0xa0>
   21884:	0c 00 00 f6 	b 48 <P_Move+0xcc>
   21888:	1f dc ff 4f 	movehi s0, 524031
   2188c:	40 07 00 0f 	move s26, 1
   21890:	00 fc 7f 00 	or s0, s0, 8191
   21894:	01 00 10 c0 	and s0, s1, s0
   21898:	18 a0 01 88 	store_32 s0, 104(s24)
   2189c:	02 00 00 4f 	movehi s0, 2
   218a0:	01 00 10 c0 	and s0, s1, s0
   218a4:	00 07 00 f4 	bnz s0, 224 <P_Move+0x19c>
   218a8:	18 e0 00 a8 	load_32 s0, 56(s24)
   218ac:	18 50 00 88 	store_32 s0, 20(s24)
   218b0:	35 00 00 f6 	b 212 <P_Move+0x19c>
   218b4:	1b 04 00 4f 	movehi s0, 59
   218b8:	42 00 00 4f 	movehi s2, 2
   218bc:	41 00 11 c0 	and s2, s1, s2
   218c0:	00 70 2b 00 	or s0, s0, 2780
   218c4:	00 00 00 a8 	load_32 s0, (s0)
   218c8:	42 01 00 f2 	bz s2, 40 <P_Move+0x108>
   218cc:	20 01 00 f2 	bz s0, 36 <P_Move+0x108>
   218d0:	1b 04 00 4f 	movehi s0, 59
   218d4:	40 00 2d 00 	or s2, s0, 2880
   218d8:	18 50 00 a8 	load_32 s0, 20(s24)
   218dc:	42 00 00 a8 	load_32 s2, (s2)
   218e0:	40 00 41 c1 	cmplt_i s2, s0, s2
   218e4:	22 04 00 f4 	bnz s2, 132 <P_Move+0x180>
   218e8:	40 fc ff 4f 	movehi s2, 524256
   218ec:	20 00 00 f6 	b 128 <P_Move+0x184>
   218f0:	1b 04 00 4f 	movehi s0, 59
   218f4:	60 b3 2b 00 	or s27, s0, 2796
   218f8:	1b 00 00 a8 	load_32 s0, (s27)
   218fc:	40 04 00 f2 	bz s0, 136 <P_Move+0x19c>
   21900:	20 20 00 0f 	move s1, 8
   21904:	38 c0 01 88 	store_32 s1, 112(s24)
   21908:	3b 04 00 4f 	movehi s1, 59
   2190c:	20 03 00 0f 	move s25, 0
   21910:	00 fc ff 05 	add_i s0, s0, -1
   21914:	1b 00 00 88 	store_32 s0, (s27)
   21918:	21 10 2c 00 	or s1, s1, 2820
   2191c:	3e a0 01 88 	store_32 s1, 104(sp)
   21920:	20 04 00 0f 	move s1, 1
   21924:	3e 90 01 88 	store_32 s1, 100(sp)
   21928:	40 83 fc c0 	move s26, s25
   2192c:	3e a0 01 a8 	load_32 s1, 104(sp)
   21930:	00 08 00 0b 	shl s0, s0, 2
   21934:	01 00 50 c0 	add_i s0, s1, s0
   21938:	20 00 00 a8 	load_32 s1, (s0)
   2193c:	00 00 fc c0 	move s0, s24
   21940:	40 80 fc c0 	move s2, s25
   21944:	08 40 00 f8 	call 65568 <P_UseSpecialLine>
   21948:	00 00 00 10 	cmpeq_i s0, s0, 0
   2194c:	40 00 00 f4 	bnz s0, 8 <P_Move+0x16c>
   21950:	5e 93 01 a8 	load_32 s26, 100(sp)
   21954:	3b 00 00 a8 	load_32 s1, (s27)
   21958:	01 fc ff 05 	add_i s0, s1, -1
   2195c:	1b 00 00 88 	store_32 s0, (s27)
   21960:	21 01 00 f2 	bz s1, 36 <P_Move+0x19c>
   21964:	f2 ff ff f7 	b -56 <P_Move+0x144>
   21968:	40 04 00 4f 	movehi s2, 32
   2196c:	02 00 50 c0 	add_i s0, s2, s0
   21970:	18 50 00 88 	store_32 s0, 20(s24)
   21974:	00 20 00 4f 	movehi s0, 256
   21978:	01 00 00 c0 	or s0, s1, s0
   2197c:	18 a0 01 88 	store_32 s0, 104(s24)
   21980:	40 07 00 0f 	move s26, 1
   21984:	00 00 fd c0 	move s0, s26
   21988:	fe b3 01 a8 	load_32 ra, 108(sp)
   2198c:	7e c3 01 a8 	load_32 s27, 112(sp)
   21990:	5e d3 01 a8 	load_32 s26, 116(sp)
   21994:	3e e3 01 a8 	load_32 s25, 120(sp)
   21998:	1e f3 01 a8 	load_32 s24, 124(sp)
   2199c:	de 03 02 05 	add_i sp, sp, 128
   219a0:	1f 00 00 f0 	ret

00000000000219a4 P_TryWalk:
   219a4:	de 03 ff 05 	add_i sp, sp, -64
   219a8:	1e f3 00 88 	store_32 s24, 60(sp)
   219ac:	fe e3 00 88 	store_32 ra, 56(sp)
   219b0:	00 03 f0 c0 	move s24, s0
   219b4:	8d ff ff f9 	call -460 <P_Move>
   219b8:	20 01 00 f2 	bz s0, 36 <P_TryWalk+0x38>
   219bc:	4e ea ff f9 	call -22216 <P_Random>
   219c0:	00 3c 00 01 	and s0, s0, 15
   219c4:	18 d0 01 88 	store_32 s0, 116(s24)
   219c8:	00 04 00 0f 	move s0, 1
   219cc:	fe e3 00 a8 	load_32 ra, 56(sp)
   219d0:	1e f3 00 a8 	load_32 s24, 60(sp)
   219d4:	de 03 01 05 	add_i sp, sp, 64
   219d8:	1f 00 00 f0 	ret
   219dc:	00 00 00 0f 	move s0, 0
   219e0:	fe e3 00 a8 	load_32 ra, 56(sp)
   219e4:	1e f3 00 a8 	load_32 s24, 60(sp)
   219e8:	de 03 01 05 	add_i sp, sp, 64
   219ec:	1f 00 00 f0 	ret

00000000000219f0 P_NewChaseDir:
   219f0:	de 03 fc 05 	add_i sp, sp, -256
   219f4:	1e f3 03 88 	store_32 s24, 252(sp)
   219f8:	3e e3 03 88 	store_32 s25, 248(sp)
   219fc:	5e d3 03 88 	store_32 s26, 244(sp)
   21a00:	7e c3 03 88 	store_32 s27, 240(sp)
   21a04:	fe b3 03 88 	store_32 ra, 236(sp)
   21a08:	5e 03 02 8e 	store_v v26, 128(sp)
   21a0c:	00 03 f0 c0 	move s24, s0
   21a10:	18 e0 01 a8 	load_32 s0, 120(s24)
   21a14:	c0 00 00 f4 	bnz s0, 24 <P_NewChaseDir+0x3c>
   21a18:	00 00 00 4f 	movehi s0, 0
   21a1c:	00 54 38 00 	or s0, s0, 3605
   21a20:	1e 00 00 88 	store_32 s0, (sp)
   21a24:	b8 b1 ff f9 	call -80160 <I_Error>
   21a28:	18 e0 01 a8 	load_32 s0, 120(s24)
   21a2c:	33 04 00 4f 	movehi s1, 51
   21a30:	58 c3 01 a8 	load_32 s26, 112(s24)
   21a34:	60 0b 00 0f 	move s27, 2
   21a38:	21 d0 79 00 	or s1, s1, 7796
   21a3c:	5a 08 00 0b 	shl s2, s26, 2
   21a40:	21 00 51 c0 	add_i s1, s1, s2
   21a44:	21 00 00 a8 	load_32 s1, (s1)
   21a48:	3e f0 01 88 	store_32 s1, 124(sp)
   21a4c:	20 40 00 a8 	load_32 s1, 16(s0)
   21a50:	00 30 00 a8 	load_32 s0, 12(s0)
   21a54:	58 40 00 a8 	load_32 s2, 16(s24)
   21a58:	78 30 00 a8 	load_32 s3, 12(s24)
   21a5c:	00 00 f0 c4 	move v0, s0
   21a60:	00 ec f0 c8 	move_mask v0, s27, s1
   21a64:	20 80 f1 c4 	move v1, s3
   21a68:	20 6c f1 c8 	move_mask v1, s27, s2
   21a6c:	40 83 60 d0 	sub_i v26, v0, v1
   21a70:	50 f4 ff 4f 	movehi s2, 524208
   21a74:	60 20 00 0f 	move s3, 8
   21a78:	1a 00 00 3a 	getlane s0, v26, 0
   21a7c:	20 00 41 c1 	cmplt_i s1, s0, s2
   21a80:	61 00 00 f4 	bnz s1, 12 <P_NewChaseDir+0x9c>
   21a84:	20 83 f1 c0 	move s25, s3
   21a88:	02 00 00 f6 	b 8 <P_NewChaseDir+0xa0>
   21a8c:	20 13 00 0f 	move s25, 4
   21a90:	90 08 00 4f 	movehi s4, 80
   21a94:	a0 00 22 c1 	cmpgt_i s5, s0, s4
   21a98:	3a 04 00 3a 	getlane s1, v26, 1
   21a9c:	85 03 00 f4 	bnz s5, 112 <P_NewChaseDir+0x11c>
   21aa0:	81 00 22 c1 	cmpgt_i s4, s1, s4
   21aa4:	44 00 00 f4 	bnz s4, 8 <P_NewChaseDir+0xbc>
   21aa8:	1c 00 00 f6 	b 112 <P_NewChaseDir+0x128>
   21aac:	41 00 41 c1 	cmplt_i s2, s1, s2
   21ab0:	c2 03 00 f4 	bnz s2, 120 <P_NewChaseDir+0x138>
   21ab4:	59 20 00 10 	cmpeq_i s2, s25, 8
   21ab8:	02 04 00 f4 	bnz s2, 128 <P_NewChaseDir+0x148>
   21abc:	5b 20 00 10 	cmpeq_i s2, s27, 8
   21ac0:	c2 03 00 f4 	bnz s2, 120 <P_NewChaseDir+0x148>
   21ac4:	21 78 00 0a 	shr s1, s1, 30
   21ac8:	00 00 00 12 	cmpgt_i s0, s0, 0
   21acc:	53 04 00 4f 	movehi s2, 51
   21ad0:	21 08 00 01 	and s1, s1, 2
   21ad4:	00 04 00 01 	and s0, s0, 1
   21ad8:	01 00 00 c0 	or s0, s1, s0
   21adc:	22 60 7a 00 	or s1, s2, 7832
   21ae0:	00 08 00 0b 	shl s0, s0, 2
   21ae4:	01 00 50 c0 	add_i s0, s1, s0
   21ae8:	00 00 00 a8 	load_32 s0, (s0)
   21aec:	3e f0 01 a8 	load_32 s1, 124(sp)
   21af0:	18 c0 01 88 	store_32 s0, 112(s24)
   21af4:	20 80 00 c1 	cmpeq_i s1, s0, s1
   21af8:	01 02 00 f4 	bnz s1, 64 <P_NewChaseDir+0x148>
   21afc:	00 00 fc c0 	move s0, s24
   21b00:	3a ff ff f9 	call -792 <P_Move>
   21b04:	a0 01 00 f2 	bz s0, 52 <P_NewChaseDir+0x148>
   21b08:	c3 00 00 f6 	b 780 <P_NewChaseDir+0x424>
   21b0c:	20 03 00 0f 	move s25, 0
   21b10:	81 00 22 c1 	cmpgt_i s4, s1, s4
   21b14:	c4 fc ff f5 	bnz s4, -104 <P_NewChaseDir+0xbc>
   21b18:	60 83 f1 c0 	move s27, s3
   21b1c:	41 00 41 c1 	cmplt_i s2, s1, s2
   21b20:	42 00 00 f4 	bnz s2, 8 <P_NewChaseDir+0x138>
   21b24:	e4 ff ff f7 	b -112 <P_NewChaseDir+0xc4>
   21b28:	60 1b 00 0f 	move s27, 6
   21b2c:	59 20 00 10 	cmpeq_i s2, s25, 8
   21b30:	42 00 00 f4 	bnz s2, 8 <P_NewChaseDir+0x148>
   21b34:	e2 ff ff f7 	b -120 <P_NewChaseDir+0xcc>
   21b38:	ef e9 ff f9 	call -22596 <P_Random>
   21b3c:	00 20 03 12 	cmpgt_i s0, s0, 200
   21b40:	00 01 00 f4 	bnz s0, 32 <P_NewChaseDir+0x170>
   21b44:	1a 7c 00 29 	ashr v0, v26, 31
   21b48:	3a 00 50 d0 	add_i v1, v26, v0
   21b4c:	01 00 30 d0 	xor v0, v1, v0
   21b50:	00 04 00 3a 	getlane s0, v0, 1
   21b54:	20 00 00 3a 	getlane s1, v0, 0
   21b58:	00 80 90 c1 	cmple_u s0, s0, s1
   21b5c:	60 00 00 f4 	bnz s0, 12 <P_NewChaseDir+0x178>
   21b60:	00 80 fd c0 	move s0, s27
   21b64:	03 00 00 f6 	b 12 <P_NewChaseDir+0x180>
   21b68:	00 80 fc c0 	move s0, s25
   21b6c:	20 83 fd c0 	move s25, s27
   21b70:	3e f0 01 a8 	load_32 s1, 124(sp)
   21b74:	59 80 00 c1 	cmpeq_i s2, s25, s1
   21b78:	20 80 00 c1 	cmpeq_i s1, s0, s1
   21b7c:	42 00 00 f4 	bnz s2, 8 <P_NewChaseDir+0x194>
   21b80:	02 00 00 f6 	b 8 <P_NewChaseDir+0x198>
   21b84:	20 23 00 0f 	move s25, 8
   21b88:	01 01 00 f4 	bnz s1, 32 <P_NewChaseDir+0x1b8>
   21b8c:	20 20 00 10 	cmpeq_i s1, s0, 8
   21b90:	c1 00 00 f4 	bnz s1, 24 <P_NewChaseDir+0x1b8>
   21b94:	18 c0 01 88 	store_32 s0, 112(s24)
   21b98:	00 00 fc c0 	move s0, s24
   21b9c:	13 ff ff f9 	call -948 <P_Move>
   21ba0:	40 00 00 f2 	bz s0, 8 <P_NewChaseDir+0x1b8>
   21ba4:	9c 00 00 f6 	b 624 <P_NewChaseDir+0x424>
   21ba8:	19 20 00 10 	cmpeq_i s0, s25, 8
   21bac:	c0 00 00 f4 	bnz s0, 24 <P_NewChaseDir+0x1d4>
   21bb0:	38 c3 01 88 	store_32 s25, 112(s24)
   21bb4:	00 00 fc c0 	move s0, s24
   21bb8:	0c ff ff f9 	call -976 <P_Move>
   21bbc:	40 00 00 f2 	bz s0, 8 <P_NewChaseDir+0x1d4>
   21bc0:	95 00 00 f6 	b 596 <P_NewChaseDir+0x424>
   21bc4:	1a 20 00 10 	cmpeq_i s0, s26, 8
   21bc8:	c0 00 00 f4 	bnz s0, 24 <P_NewChaseDir+0x1f0>
   21bcc:	58 c3 01 88 	store_32 s26, 112(s24)
   21bd0:	00 00 fc c0 	move s0, s24
   21bd4:	05 ff ff f9 	call -1004 <P_Move>
   21bd8:	40 00 00 f2 	bz s0, 8 <P_NewChaseDir+0x1f0>
   21bdc:	8e 00 00 f6 	b 568 <P_NewChaseDir+0x424>
   21be0:	c5 e9 ff f9 	call -22764 <P_Random>
   21be4:	00 04 00 01 	and s0, s0, 1
   21be8:	40 00 00 f2 	bz s0, 8 <P_NewChaseDir+0x200>
   21bec:	0e 00 00 f6 	b 56 <P_NewChaseDir+0x234>
   21bf0:	1e f0 01 a8 	load_32 s0, 124(sp)
   21bf4:	00 1c 00 10 	cmpeq_i s0, s0, 7
   21bf8:	40 00 00 f4 	bnz s0, 8 <P_NewChaseDir+0x210>
   21bfc:	47 00 00 f6 	b 284 <P_NewChaseDir+0x328>
   21c00:	00 18 00 0f 	move s0, 6
   21c04:	18 c0 01 88 	store_32 s0, 112(s24)
   21c08:	00 00 fc c0 	move s0, s24
   21c0c:	f7 fe ff f9 	call -1060 <P_Move>
   21c10:	20 10 00 f4 	bnz s0, 516 <P_NewChaseDir+0x424>
   21c14:	1e f0 01 a8 	load_32 s0, 124(sp)
   21c18:	00 14 00 10 	cmpeq_i s0, s0, 5
   21c1c:	20 0a 00 f4 	bnz s0, 324 <P_NewChaseDir+0x370>
   21c20:	48 00 00 f6 	b 288 <P_NewChaseDir+0x350>
   21c24:	1e f0 01 a8 	load_32 s0, 124(sp)
   21c28:	40 01 00 f2 	bz s0, 40 <P_NewChaseDir+0x260>
   21c2c:	00 00 00 0f 	move s0, 0
   21c30:	18 c0 01 88 	store_32 s0, 112(s24)
   21c34:	00 00 fc c0 	move s0, s24
   21c38:	ec fe ff f9 	call -1104 <P_Move>
   21c3c:	40 00 00 f2 	bz s0, 8 <P_NewChaseDir+0x254>
   21c40:	75 00 00 f6 	b 468 <P_NewChaseDir+0x424>
   21c44:	1e f0 01 a8 	load_32 s0, 124(sp)
   21c48:	00 04 00 10 	cmpeq_i s0, s0, 1
   21c4c:	20 01 00 f4 	bnz s0, 36 <P_NewChaseDir+0x280>
   21c50:	00 04 00 0f 	move s0, 1
   21c54:	18 c0 01 88 	store_32 s0, 112(s24)
   21c58:	00 00 fc c0 	move s0, s24
   21c5c:	e3 fe ff f9 	call -1140 <P_Move>
   21c60:	a0 0d 00 f4 	bnz s0, 436 <P_NewChaseDir+0x424>
   21c64:	1e f0 01 a8 	load_32 s0, 124(sp)
   21c68:	00 08 00 10 	cmpeq_i s0, s0, 2
   21c6c:	20 01 00 f4 	bnz s0, 36 <P_NewChaseDir+0x2a0>
   21c70:	00 08 00 0f 	move s0, 2
   21c74:	18 c0 01 88 	store_32 s0, 112(s24)
   21c78:	00 00 fc c0 	move s0, s24
   21c7c:	db fe ff f9 	call -1172 <P_Move>
   21c80:	a0 0c 00 f4 	bnz s0, 404 <P_NewChaseDir+0x424>
   21c84:	1e f0 01 a8 	load_32 s0, 124(sp)
   21c88:	00 0c 00 10 	cmpeq_i s0, s0, 3
   21c8c:	20 01 00 f4 	bnz s0, 36 <P_NewChaseDir+0x2c0>
   21c90:	00 0c 00 0f 	move s0, 3
   21c94:	18 c0 01 88 	store_32 s0, 112(s24)
   21c98:	00 00 fc c0 	move s0, s24
   21c9c:	d3 fe ff f9 	call -1204 <P_Move>
   21ca0:	a0 0b 00 f4 	bnz s0, 372 <P_NewChaseDir+0x424>
   21ca4:	1e f0 01 a8 	load_32 s0, 124(sp)
   21ca8:	00 10 00 10 	cmpeq_i s0, s0, 4
   21cac:	20 01 00 f4 	bnz s0, 36 <P_NewChaseDir+0x2e0>
   21cb0:	00 10 00 0f 	move s0, 4
   21cb4:	18 c0 01 88 	store_32 s0, 112(s24)
   21cb8:	00 00 fc c0 	move s0, s24
   21cbc:	cb fe ff f9 	call -1236 <P_Move>
   21cc0:	a0 0a 00 f4 	bnz s0, 340 <P_NewChaseDir+0x424>
   21cc4:	1e f0 01 a8 	load_32 s0, 124(sp)
   21cc8:	00 14 00 10 	cmpeq_i s0, s0, 5
   21ccc:	20 01 00 f4 	bnz s0, 36 <P_NewChaseDir+0x300>
   21cd0:	00 14 00 0f 	move s0, 5
   21cd4:	18 c0 01 88 	store_32 s0, 112(s24)
   21cd8:	00 00 fc c0 	move s0, s24
   21cdc:	c3 fe ff f9 	call -1268 <P_Move>
   21ce0:	a0 09 00 f4 	bnz s0, 308 <P_NewChaseDir+0x424>
   21ce4:	1e f0 01 a8 	load_32 s0, 124(sp)
   21ce8:	00 18 00 10 	cmpeq_i s0, s0, 6
   21cec:	20 01 00 f4 	bnz s0, 36 <P_NewChaseDir+0x320>
   21cf0:	00 18 00 0f 	move s0, 6
   21cf4:	18 c0 01 88 	store_32 s0, 112(s24)
   21cf8:	00 00 fc c0 	move s0, s24
   21cfc:	bb fe ff f9 	call -1300 <P_Move>
   21d00:	a0 08 00 f4 	bnz s0, 276 <P_NewChaseDir+0x424>
   21d04:	1e f0 01 a8 	load_32 s0, 124(sp)
   21d08:	00 1c 00 10 	cmpeq_i s0, s0, 7
   21d0c:	a0 07 00 f4 	bnz s0, 244 <P_NewChaseDir+0x410>
   21d10:	00 1c 00 0f 	move s0, 7
   21d14:	33 00 00 f6 	b 204 <P_NewChaseDir+0x3f0>
   21d18:	00 1c 00 0f 	move s0, 7
   21d1c:	18 c0 01 88 	store_32 s0, 112(s24)
   21d20:	00 00 fc c0 	move s0, s24
   21d24:	b1 fe ff f9 	call -1340 <P_Move>
   21d28:	40 00 00 f2 	bz s0, 8 <P_NewChaseDir+0x340>
   21d2c:	3a 00 00 f6 	b 232 <P_NewChaseDir+0x424>
   21d30:	1e f0 01 a8 	load_32 s0, 124(sp)
   21d34:	00 18 00 10 	cmpeq_i s0, s0, 6
   21d38:	40 00 00 f4 	bnz s0, 8 <P_NewChaseDir+0x350>
   21d3c:	b1 ff ff f7 	b -316 <P_NewChaseDir+0x210>
   21d40:	00 14 00 0f 	move s0, 5
   21d44:	18 c0 01 88 	store_32 s0, 112(s24)
   21d48:	00 00 fc c0 	move s0, s24
   21d4c:	a7 fe ff f9 	call -1380 <P_Move>
   21d50:	20 06 00 f4 	bnz s0, 196 <P_NewChaseDir+0x424>
   21d54:	1e f0 01 a8 	load_32 s0, 124(sp)
   21d58:	00 10 00 10 	cmpeq_i s0, s0, 4
   21d5c:	20 01 00 f4 	bnz s0, 36 <P_NewChaseDir+0x390>
   21d60:	00 10 00 0f 	move s0, 4
   21d64:	18 c0 01 88 	store_32 s0, 112(s24)
   21d68:	00 00 fc c0 	move s0, s24
   21d6c:	9f fe ff f9 	call -1412 <P_Move>
   21d70:	20 05 00 f4 	bnz s0, 164 <P_NewChaseDir+0x424>
   21d74:	1e f0 01 a8 	load_32 s0, 124(sp)
   21d78:	00 0c 00 10 	cmpeq_i s0, s0, 3
   21d7c:	20 01 00 f4 	bnz s0, 36 <P_NewChaseDir+0x3b0>
   21d80:	00 0c 00 0f 	move s0, 3
   21d84:	18 c0 01 88 	store_32 s0, 112(s24)
   21d88:	00 00 fc c0 	move s0, s24
   21d8c:	97 fe ff f9 	call -1444 <P_Move>
   21d90:	20 04 00 f4 	bnz s0, 132 <P_NewChaseDir+0x424>
   21d94:	1e f0 01 a8 	load_32 s0, 124(sp)
   21d98:	00 08 00 10 	cmpeq_i s0, s0, 2
   21d9c:	20 01 00 f4 	bnz s0, 36 <P_NewChaseDir+0x3d0>
   21da0:	00 08 00 0f 	move s0, 2
   21da4:	18 c0 01 88 	store_32 s0, 112(s24)
   21da8:	00 00 fc c0 	move s0, s24
   21dac:	8f fe ff f9 	call -1476 <P_Move>
   21db0:	20 03 00 f4 	bnz s0, 100 <P_NewChaseDir+0x424>
   21db4:	1e f0 01 a8 	load_32 s0, 124(sp)
   21db8:	00 04 00 10 	cmpeq_i s0, s0, 1
   21dbc:	00 01 00 f4 	bnz s0, 32 <P_NewChaseDir+0x3ec>
   21dc0:	00 04 00 0f 	move s0, 1
   21dc4:	18 c0 01 88 	store_32 s0, 112(s24)
   21dc8:	00 00 fc c0 	move s0, s24
   21dcc:	87 fe ff f9 	call -1508 <P_Move>
   21dd0:	20 02 00 f4 	bnz s0, 68 <P_NewChaseDir+0x424>
   21dd4:	1e f0 01 a8 	load_32 s0, 124(sp)
   21dd8:	40 01 00 f2 	bz s0, 40 <P_NewChaseDir+0x410>
   21ddc:	00 00 00 0f 	move s0, 0
   21de0:	18 c0 01 88 	store_32 s0, 112(s24)
   21de4:	00 00 fc c0 	move s0, s24
   21de8:	80 fe ff f9 	call -1536 <P_Move>
   21dec:	40 00 00 f2 	bz s0, 8 <P_NewChaseDir+0x404>
   21df0:	09 00 00 f6 	b 36 <P_NewChaseDir+0x424>
   21df4:	1e f0 01 a8 	load_32 s0, 124(sp)
   21df8:	00 20 00 10 	cmpeq_i s0, s0, 8
   21dfc:	20 02 00 f4 	bnz s0, 68 <P_NewChaseDir+0x450>
   21e00:	1e f0 01 a8 	load_32 s0, 124(sp)
   21e04:	18 c0 01 88 	store_32 s0, 112(s24)
   21e08:	00 00 fc c0 	move s0, s24
   21e0c:	77 fe ff f9 	call -1572 <P_Move>
   21e10:	80 01 00 f2 	bz s0, 48 <P_NewChaseDir+0x450>
   21e14:	38 e9 ff f9 	call -23328 <P_Random>
   21e18:	00 3c 00 01 	and s0, s0, 15
   21e1c:	18 d0 01 88 	store_32 s0, 116(s24)
   21e20:	5e 03 02 ae 	load_v v26, 128(sp)
   21e24:	fe b3 03 a8 	load_32 ra, 236(sp)
   21e28:	7e c3 03 a8 	load_32 s27, 240(sp)
   21e2c:	5e d3 03 a8 	load_32 s26, 244(sp)
   21e30:	3e e3 03 a8 	load_32 s25, 248(sp)
   21e34:	1e f3 03 a8 	load_32 s24, 252(sp)
   21e38:	de 03 04 05 	add_i sp, sp, 256
   21e3c:	1f 00 00 f0 	ret
   21e40:	00 20 00 0f 	move s0, 8
   21e44:	18 c0 01 88 	store_32 s0, 112(s24)
   21e48:	f6 ff ff f7 	b -40 <P_NewChaseDir+0x430>

0000000000021e4c P_LookForPlayers:
   21e4c:	de 03 ff 05 	add_i sp, sp, -64
   21e50:	1e f3 00 88 	store_32 s24, 60(sp)
   21e54:	3e e3 00 88 	store_32 s25, 56(sp)
   21e58:	5e d3 00 88 	store_32 s26, 52(sp)
   21e5c:	7e c3 00 88 	store_32 s27, 48(sp)
   21e60:	fe b3 00 88 	store_32 ra, 44(sp)
   21e64:	00 03 f0 c0 	move s24, s0
   21e68:	18 20 02 a8 	load_32 s0, 136(s24)
   21e6c:	40 fc ff 05 	add_i s2, s0, -1
   21e70:	42 0c 00 01 	and s2, s2, 3
   21e74:	5e a0 00 88 	store_32 s2, 40(sp)
   21e78:	c1 04 00 f2 	bz s1, 152 <P_LookForPlayers+0xc4>
   21e7c:	3b 04 00 4f 	movehi s1, 59
   21e80:	5b 04 00 4f 	movehi s2, 59
   21e84:	40 03 00 0f 	move s26, 0
   21e88:	21 03 02 00 	or s25, s1, 128
   21e8c:	22 40 02 00 	or s1, s2, 144
   21e90:	3e 90 00 88 	store_32 s1, 36(sp)
   21e94:	5e 53 00 88 	store_32 s26, 20(sp)
   21e98:	20 08 00 0b 	shl s1, s0, 2
   21e9c:	39 80 50 c0 	add_i s1, s25, s1
   21ea0:	21 00 00 a8 	load_32 s1, (s1)
   21ea4:	41 00 00 f2 	bz s1, 8 <P_LookForPlayers+0x60>
   21ea8:	08 00 00 f6 	b 32 <P_LookForPlayers+0x7c>
   21eac:	00 04 00 05 	add_i s0, s0, 1
   21eb0:	00 0c 00 01 	and s0, s0, 3
   21eb4:	18 20 02 88 	store_32 s0, 136(s24)
   21eb8:	20 08 00 0b 	shl s1, s0, 2
   21ebc:	39 80 50 c0 	add_i s1, s25, s1
   21ec0:	21 00 00 a8 	load_32 s1, (s1)
   21ec4:	41 ff ff f3 	bz s1, -24 <P_LookForPlayers+0x60>
   21ec8:	3a 08 00 10 	cmpeq_i s1, s26, 2
   21ecc:	e1 0a 00 f4 	bnz s1, 348 <P_LookForPlayers+0x1dc>
   21ed0:	3e a0 00 a8 	load_32 s1, 40(sp)
   21ed4:	20 80 00 c1 	cmpeq_i s1, s0, s1
   21ed8:	81 0a 00 f4 	bnz s1, 336 <P_LookForPlayers+0x1dc>
   21edc:	5e 90 00 a8 	load_32 s2, 36(sp)
   21ee0:	20 60 04 07 	mull_i s1, s0, 280
   21ee4:	5a 07 00 05 	add_i s26, s26, 1
   21ee8:	62 83 50 c0 	add_i s27, s2, s1
   21eec:	3b 80 00 a8 	load_32 s1, 32(s27)
   21ef0:	21 04 00 14 	cmplt_i s1, s1, 1
   21ef4:	c1 fd ff f5 	bnz s1, -72 <P_LookForPlayers+0x60>
   21ef8:	3b 00 00 a8 	load_32 s1, (s27)
   21efc:	00 00 fc c0 	move s0, s24
   21f00:	2d 37 00 f8 	call 56500 <P_CheckSight>
   21f04:	60 09 00 f4 	bnz s0, 300 <P_LookForPlayers+0x1e4>
   21f08:	18 20 02 a8 	load_32 s0, 136(s24)
   21f0c:	e8 ff ff f7 	b -96 <P_LookForPlayers+0x60>
   21f10:	3b 04 00 4f 	movehi s1, 59
   21f14:	5b 04 00 4f 	movehi s2, 59
   21f18:	20 03 00 0f 	move s25, 0
   21f1c:	41 03 02 00 	or s26, s1, 128
   21f20:	22 40 02 00 	or s1, s2, 144
   21f24:	3e 90 00 88 	store_32 s1, 36(sp)
   21f28:	3f fc bf 4f 	movehi s1, 393215
   21f2c:	5f fc 7f 4f 	movehi s2, 262143
   21f30:	60 40 00 4f 	movehi s3, 512
   21f34:	21 fc 7f 00 	or s1, s1, 8191
   21f38:	3e 80 00 88 	store_32 s1, 32(sp)
   21f3c:	22 f8 7f 00 	or s1, s2, 8190
   21f40:	3e 70 00 88 	store_32 s1, 28(sp)
   21f44:	23 04 00 00 	or s1, s3, 1
   21f48:	3e 60 00 88 	store_32 s1, 24(sp)
   21f4c:	3e 53 00 88 	store_32 s25, 20(sp)
   21f50:	20 08 00 0b 	shl s1, s0, 2
   21f54:	3a 80 50 c0 	add_i s1, s26, s1
   21f58:	21 00 00 a8 	load_32 s1, (s1)
   21f5c:	01 05 00 f2 	bz s1, 160 <P_LookForPlayers+0x1b0>
   21f60:	2f 00 00 f6 	b 188 <P_LookForPlayers+0x1d0>
   21f64:	3e a0 00 a8 	load_32 s1, 40(sp)
   21f68:	20 80 00 c1 	cmpeq_i s1, s0, s1
   21f6c:	e1 05 00 f4 	bnz s1, 188 <P_LookForPlayers+0x1dc>
   21f70:	3e 90 00 a8 	load_32 s1, 36(sp)
   21f74:	00 60 04 07 	mull_i s0, s0, 280
   21f78:	39 07 00 05 	add_i s25, s25, 1
   21f7c:	61 03 50 c0 	add_i s27, s1, s0
   21f80:	1b 80 00 a8 	load_32 s0, 32(s27)
   21f84:	00 04 00 14 	cmplt_i s0, s0, 1
   21f88:	a0 03 00 f4 	bnz s0, 116 <P_LookForPlayers+0x1b0>
   21f8c:	3b 00 00 a8 	load_32 s1, (s27)
   21f90:	00 00 fc c0 	move s0, s24
   21f94:	08 37 00 f8 	call 56352 <P_CheckSight>
   21f98:	20 03 00 f2 	bz s0, 100 <P_LookForPlayers+0x1b0>
   21f9c:	18 30 00 a8 	load_32 s0, 12(s24)
   21fa0:	38 40 00 a8 	load_32 s1, 16(s24)
   21fa4:	7b 00 00 a8 	load_32 s3, (s27)
   21fa8:	43 30 00 a8 	load_32 s2, 12(s3)
   21fac:	63 40 00 a8 	load_32 s3, 16(s3)
   21fb0:	ee 5c 00 f8 	call 95160 <R_PointToAngle2>
   21fb4:	38 80 00 a8 	load_32 s1, 32(s24)
   21fb8:	5e 80 00 a8 	load_32 s2, 32(sp)
   21fbc:	00 00 51 c0 	add_i s0, s0, s2
   21fc0:	00 80 60 c0 	sub_i s0, s0, s1
   21fc4:	3e 70 00 a8 	load_32 s1, 28(sp)
   21fc8:	00 80 60 c1 	cmpgt_u s0, s0, s1
   21fcc:	20 03 00 f4 	bnz s0, 100 <P_LookForPlayers+0x1e4>
   21fd0:	1b 00 00 a8 	load_32 s0, (s27)
   21fd4:	20 30 00 a8 	load_32 s1, 12(s0)
   21fd8:	58 30 00 a8 	load_32 s2, 12(s24)
   21fdc:	60 40 00 a8 	load_32 s3, 16(s0)
   21fe0:	98 40 00 a8 	load_32 s4, 16(s24)
   21fe4:	01 00 61 c0 	sub_i s0, s1, s2
   21fe8:	23 00 62 c0 	sub_i s1, s3, s4
   21fec:	b4 1d 00 f8 	call 30416 <P_AproxDistance>
   21ff0:	3e 60 00 a8 	load_32 s1, 24(sp)
   21ff4:	00 80 40 c1 	cmplt_i s0, s0, s1
   21ff8:	c0 01 00 f4 	bnz s0, 56 <P_LookForPlayers+0x1e4>
   21ffc:	18 20 02 a8 	load_32 s0, 136(s24)
   22000:	00 04 00 05 	add_i s0, s0, 1
   22004:	00 0c 00 01 	and s0, s0, 3
   22008:	18 20 02 88 	store_32 s0, 136(s24)
   2200c:	20 08 00 0b 	shl s1, s0, 2
   22010:	3a 80 50 c0 	add_i s1, s26, s1
   22014:	21 00 00 a8 	load_32 s1, (s1)
   22018:	21 ff ff f3 	bz s1, -28 <P_LookForPlayers+0x1b0>
   2201c:	39 08 00 10 	cmpeq_i s1, s25, 2
   22020:	41 00 00 f4 	bnz s1, 8 <P_LookForPlayers+0x1dc>
   22024:	d0 ff ff f7 	b -192 <P_LookForPlayers+0x118>
   22028:	1e 50 00 a8 	load_32 s0, 20(sp)
   2202c:	04 00 00 f6 	b 16 <P_LookForPlayers+0x1f0>
   22030:	1b 00 00 a8 	load_32 s0, (s27)
   22034:	18 e0 01 88 	store_32 s0, 120(s24)
   22038:	00 04 00 0f 	move s0, 1
   2203c:	fe b3 00 a8 	load_32 ra, 44(sp)
   22040:	7e c3 00 a8 	load_32 s27, 48(sp)
   22044:	5e d3 00 a8 	load_32 s26, 52(sp)
   22048:	3e e3 00 a8 	load_32 s25, 56(sp)
   2204c:	1e f3 00 a8 	load_32 s24, 60(sp)
   22050:	de 03 01 05 	add_i sp, sp, 64
   22054:	1f 00 00 f0 	ret

0000000000022058 A_KeenDie:
   22058:	de 03 fe 05 	add_i sp, sp, -128
   2205c:	fe f3 01 88 	store_32 ra, 124(sp)
   22060:	3c 04 00 4f 	movehi s1, 60
   22064:	40 a0 01 a8 	load_32 s2, 104(s0)
   22068:	21 50 02 00 	or s1, s1, 148
   2206c:	42 f4 ff 01 	and s2, s2, -3
   22070:	40 a0 01 88 	store_32 s2, 104(s0)
   22074:	41 10 00 a8 	load_32 s2, 4(s1)
   22078:	62 80 00 c1 	cmpeq_i s3, s2, s1
   2207c:	43 02 00 f4 	bnz s3, 72 <A_KeenDie+0x6c>
   22080:	79 00 00 4f 	movehi s3, 25
   22084:	63 50 31 00 	or s3, s3, 3156
   22088:	82 20 00 a8 	load_32 s4, 8(s2)
   2208c:	a2 00 00 c1 	cmpeq_i s5, s2, s0
   22090:	45 01 00 f4 	bnz s5, 40 <A_KeenDie+0x60>
   22094:	84 80 11 c1 	cmpne_i s4, s4, s3
   22098:	04 01 00 f4 	bnz s4, 32 <A_KeenDie+0x60>
   2209c:	82 60 01 a8 	load_32 s4, 88(s2)
   220a0:	a0 60 01 a8 	load_32 s5, 88(s0)
   220a4:	84 80 12 c1 	cmpne_i s4, s4, s5
   220a8:	84 00 00 f4 	bnz s4, 16 <A_KeenDie+0x60>
   220ac:	82 b0 01 a8 	load_32 s4, 108(s2)
   220b0:	84 00 00 12 	cmpgt_i s4, s4, 0
   220b4:	24 01 00 f4 	bnz s4, 36 <A_KeenDie+0x80>
   220b8:	42 10 00 a8 	load_32 s2, 4(s2)
   220bc:	82 80 10 c1 	cmpne_i s4, s2, s1
   220c0:	44 fe ff f5 	bnz s4, -56 <A_KeenDie+0x30>
   220c4:	00 68 0a 0f 	move s0, 666
   220c8:	1e 30 01 86 	store_16 s0, 76(sp)
   220cc:	1e e0 00 05 	add_i s0, sp, 56
   220d0:	20 0c 00 0f 	move s1, 3
   220d4:	e8 fa ff f9 	call -5216 <EV_DoDoor>
   220d8:	fe f3 01 a8 	load_32 ra, 124(sp)
   220dc:	de 03 02 05 	add_i sp, sp, 128
   220e0:	1f 00 00 f0 	ret

00000000000220e4 A_Fall:
   220e4:	20 a0 01 a8 	load_32 s1, 104(s0)
   220e8:	21 f4 ff 01 	and s1, s1, -3
   220ec:	20 a0 01 88 	store_32 s1, 104(s0)
   220f0:	1f 00 00 f0 	ret

00000000000220f4 A_Look:
   220f4:	de 03 ff 05 	add_i sp, sp, -64
   220f8:	1e f3 00 88 	store_32 s24, 60(sp)
   220fc:	3e e3 00 88 	store_32 s25, 56(sp)
   22100:	5e d3 00 88 	store_32 s26, 52(sp)
   22104:	fe c3 00 88 	store_32 ra, 48(sp)
   22108:	00 03 f0 c0 	move s24, s0
   2210c:	00 00 00 0f 	move s0, 0
   22110:	18 00 02 88 	store_32 s0, 128(s24)
   22114:	18 d0 00 a8 	load_32 s0, 52(s24)
   22118:	00 00 00 a8 	load_32 s0, (s0)
   2211c:	20 60 00 a8 	load_32 s1, 24(s0)
   22120:	a1 00 00 f2 	bz s1, 20 <A_Look+0x40>
   22124:	01 a0 01 a0 	load_u8 s0, 104(s1)
   22128:	00 10 00 01 	and s0, s0, 4
   2212c:	40 00 00 f2 	bz s0, 8 <A_Look+0x40>
   22130:	06 00 00 f6 	b 24 <A_Look+0x54>
   22134:	20 00 00 0f 	move s1, 0
   22138:	00 00 fc c0 	move s0, s24
   2213c:	44 ff ff f9 	call -752 <P_LookForPlayers>
   22140:	60 05 00 f2 	bz s0, 172 <A_Look+0xf8>
   22144:	09 00 00 f6 	b 36 <A_Look+0x74>
   22148:	38 e0 01 88 	store_32 s1, 120(s24)
   2214c:	18 a0 01 a0 	load_u8 s0, 104(s24)
   22150:	00 80 00 01 	and s0, s0, 32
   22154:	a0 00 00 f2 	bz s0, 20 <A_Look+0x74>
   22158:	00 00 fc c0 	move s0, s24
   2215c:	96 36 00 f8 	call 55896 <P_CheckSight>
   22160:	40 00 00 f4 	bnz s0, 8 <A_Look+0x74>
   22164:	f4 ff ff f7 	b -48 <A_Look+0x40>
   22168:	18 70 01 a8 	load_32 s0, 92(s24)
   2216c:	20 40 00 a8 	load_32 s1, 16(s0)
   22170:	01 70 ff 05 	add_i s0, s1, -36
   22174:	00 0c 00 18 	cmplt_u s0, s0, 3
   22178:	00 01 00 f4 	bnz s0, 32 <A_Look+0xa4>
   2217c:	01 64 ff 05 	add_i s0, s1, -39
   22180:	00 08 00 18 	cmplt_u s0, s0, 2
   22184:	40 00 00 f4 	bnz s0, 8 <A_Look+0x98>
   22188:	11 00 00 f6 	b 68 <A_Look+0xd8>
   2218c:	40 9f 00 0f 	move s26, 39
   22190:	20 0b 00 0f 	move s25, 2
   22194:	03 00 00 f6 	b 12 <A_Look+0xac>
   22198:	40 93 00 0f 	move s26, 36
   2219c:	20 0f 00 0f 	move s25, 3
   221a0:	55 e8 ff f9 	call -24236 <P_Random>
   221a4:	20 80 fc c0 	move s1, s25
   221a8:	54 ca 00 f8 	call 207184 <__modsi3>
   221ac:	20 00 5d c0 	add_i s1, s0, s26
   221b0:	18 60 01 a8 	load_32 s0, 88(s24)
   221b4:	40 54 00 10 	cmpeq_i s2, s0, 21
   221b8:	62 00 00 f4 	bnz s2, 12 <A_Look+0xd0>
   221bc:	00 4c 00 11 	cmpne_i s0, s0, 19
   221c0:	a0 00 00 f4 	bnz s0, 20 <A_Look+0xe0>
   221c4:	00 00 00 0f 	move s0, 0
   221c8:	04 00 00 f6 	b 16 <A_Look+0xe4>
   221cc:	81 00 00 f2 	bz s1, 16 <A_Look+0xe8>
   221d0:	f8 ff ff f7 	b -32 <A_Look+0xbc>
   221d4:	00 00 fc c0 	move s0, s24
   221d8:	83 a8 00 f8 	call 172556 <S_StartSound>
   221dc:	18 70 01 a8 	load_32 s0, 92(s24)
   221e0:	20 30 00 a8 	load_32 s1, 12(s0)
   221e4:	00 00 fc c0 	move s0, s24
   221e8:	0c 3f 00 f8 	call 64560 <P_SetMobjState>
   221ec:	fe c3 00 a8 	load_32 ra, 48(sp)
   221f0:	5e d3 00 a8 	load_32 s26, 52(sp)
   221f4:	3e e3 00 a8 	load_32 s25, 56(sp)
   221f8:	1e f3 00 a8 	load_32 s24, 60(sp)
   221fc:	de 03 01 05 	add_i sp, sp, 64
   22200:	1f 00 00 f0 	ret

0000000000022204 A_Chase:
   22204:	de 03 ff 05 	add_i sp, sp, -64
   22208:	1e f3 00 88 	store_32 s24, 60(sp)
   2220c:	3e e3 00 88 	store_32 s25, 56(sp)
   22210:	5e d3 00 88 	store_32 s26, 52(sp)
   22214:	7e c3 00 88 	store_32 s27, 48(sp)
   22218:	fe b3 00 88 	store_32 ra, 44(sp)
   2221c:	80 00 f0 c0 	move s4, s0
   22220:	04 f0 01 a8 	load_32 s0, 124(s4)
   22224:	60 00 00 f2 	bz s0, 12 <A_Chase+0x2c>
   22228:	00 fc ff 05 	add_i s0, s0, -1
   2222c:	04 f0 01 88 	store_32 s0, 124(s4)
   22230:	04 00 02 a8 	load_32 s0, 128(s4)
   22234:	40 01 00 f2 	bz s0, 40 <A_Chase+0x58>
   22238:	24 e0 01 a8 	load_32 s1, 120(s4)
   2223c:	c1 00 00 f2 	bz s1, 24 <A_Chase+0x50>
   22240:	21 b0 01 a8 	load_32 s1, 108(s1)
   22244:	21 04 00 14 	cmplt_i s1, s1, 1
   22248:	61 00 00 f4 	bnz s1, 12 <A_Chase+0x50>
   2224c:	00 fc ff 05 	add_i s0, s0, -1
   22250:	02 00 00 f6 	b 8 <A_Chase+0x54>
   22254:	00 00 00 0f 	move s0, 0
   22258:	04 00 02 88 	store_32 s0, 128(s4)
   2225c:	24 c0 01 a8 	load_32 s1, 112(s4)
   22260:	01 1c 00 12 	cmpgt_i s0, s1, 7
   22264:	00 07 00 f4 	bnz s0, 224 <A_Chase+0x140>
   22268:	04 80 00 a8 	load_32 s0, 32(s4)
   2226c:	40 00 e0 4f 	movehi s2, 458752
   22270:	21 74 00 0b 	shl s1, s1, 29
   22274:	00 00 11 c0 	and s0, s0, s2
   22278:	04 80 00 88 	store_32 s0, 32(s4)
   2227c:	20 80 60 c0 	sub_i s1, s0, s1
   22280:	61 04 00 14 	cmplt_i s3, s1, 1
   22284:	a3 05 00 f4 	bnz s3, 180 <A_Chase+0x134>
   22288:	00 00 51 c0 	add_i s0, s0, s2
   2228c:	04 80 00 88 	store_32 s0, 32(s4)
   22290:	04 e3 01 a8 	load_32 s24, 120(s4)
   22294:	f8 05 00 f2 	bz s24, 188 <A_Chase+0x14c>
   22298:	18 a0 01 a0 	load_u8 s0, 104(s24)
   2229c:	00 10 00 01 	and s0, s0, 4
   222a0:	40 00 00 f4 	bnz s0, 8 <A_Chase+0xa4>
   222a4:	2b 00 00 f6 	b 172 <A_Chase+0x14c>
   222a8:	04 a0 01 a8 	load_32 s0, 104(s4)
   222ac:	20 00 02 01 	and s1, s0, 128
   222b0:	41 00 00 f2 	bz s1, 8 <A_Chase+0xb4>
   222b4:	5f 00 00 f6 	b 380 <A_Chase+0x22c>
   222b8:	04 70 01 a8 	load_32 s0, 92(s4)
   222bc:	00 a0 00 a8 	load_32 s0, 40(s0)
   222c0:	9e a0 00 88 	store_32 s4, 40(sp)
   222c4:	20 0d 00 f2 	bz s0, 420 <A_Chase+0x264>
   222c8:	18 30 00 a8 	load_32 s0, 12(s24)
   222cc:	24 30 00 a8 	load_32 s1, 12(s4)
   222d0:	58 40 00 a8 	load_32 s2, 16(s24)
   222d4:	64 40 00 a8 	load_32 s3, 16(s4)
   222d8:	00 80 60 c0 	sub_i s0, s0, s1
   222dc:	22 80 61 c0 	sub_i s1, s2, s3
   222e0:	f7 1c 00 f8 	call 29660 <P_AproxDistance>
   222e4:	9e a0 00 a8 	load_32 s4, 40(sp)
   222e8:	40 2c 00 4f 	movehi s2, 352
   222ec:	38 70 01 a8 	load_32 s1, 92(s24)
   222f0:	21 00 01 a8 	load_32 s1, 64(s1)
   222f4:	21 00 51 c0 	add_i s1, s1, s2
   222f8:	00 80 30 c1 	cmpge_i s0, s0, s1
   222fc:	60 0b 00 f4 	bnz s0, 364 <A_Chase+0x264>
   22300:	24 e0 01 a8 	load_32 s1, 120(s4)
   22304:	00 00 f2 c0 	move s0, s4
   22308:	2b 36 00 f8 	call 55468 <P_CheckSight>
   2230c:	9e a0 00 a8 	load_32 s4, 40(sp)
   22310:	c0 0a 00 f2 	bz s0, 344 <A_Chase+0x264>
   22314:	04 70 01 a8 	load_32 s0, 92(s4)
   22318:	20 60 00 a8 	load_32 s1, 24(s0)
   2231c:	a1 00 00 f2 	bz s1, 20 <A_Chase+0x12c>
   22320:	00 00 f2 c0 	move s0, s4
   22324:	30 a8 00 f8 	call 172224 <S_StartSound>
   22328:	9e a0 00 a8 	load_32 s4, 40(sp)
   2232c:	04 70 01 a8 	load_32 s0, 92(s4)
   22330:	20 a0 00 a8 	load_32 s1, 40(s0)
   22334:	36 00 00 f6 	b 216 <A_Chase+0x208>
   22338:	21 fc ff 12 	cmpgt_i s1, s1, -1
   2233c:	41 00 00 f4 	bnz s1, 8 <A_Chase+0x140>
   22340:	89 00 00 f6 	b 548 <A_Chase+0x360>
   22344:	04 e3 01 a8 	load_32 s24, 120(s4)
   22348:	58 00 00 f2 	bz s24, 8 <A_Chase+0x14c>
   2234c:	d3 ff ff f7 	b -180 <A_Chase+0x94>
   22350:	04 20 02 a8 	load_32 s0, 136(s4)
   22354:	5b 04 00 4f 	movehi s2, 59
   22358:	40 03 00 0f 	move s26, 0
   2235c:	20 fc ff 05 	add_i s1, s0, -1
   22360:	21 0c 00 01 	and s1, s1, 3
   22364:	3e a0 00 88 	store_32 s1, 40(sp)
   22368:	3b 04 00 4f 	movehi s1, 59
   2236c:	61 03 02 00 	or s27, s1, 128
   22370:	22 40 02 00 	or s1, s2, 144
   22374:	3e 90 00 88 	store_32 s1, 36(sp)
   22378:	20 08 00 0b 	shl s1, s0, 2
   2237c:	3b 80 50 c0 	add_i s1, s27, s1
   22380:	21 00 00 a8 	load_32 s1, (s1)
   22384:	81 00 00 f2 	bz s1, 16 <A_Chase+0x190>
   22388:	0a 00 00 f6 	b 40 <A_Chase+0x1ac>
   2238c:	18 20 02 a8 	load_32 s0, 136(s24)
   22390:	80 00 fc c0 	move s4, s24
   22394:	00 04 00 05 	add_i s0, s0, 1
   22398:	00 0c 00 01 	and s0, s0, 3
   2239c:	04 20 02 88 	store_32 s0, 136(s4)
   223a0:	20 08 00 0b 	shl s1, s0, 2
   223a4:	3b 80 50 c0 	add_i s1, s27, s1
   223a8:	21 00 00 a8 	load_32 s1, (s1)
   223ac:	41 ff ff f3 	bz s1, -24 <A_Chase+0x190>
   223b0:	3e a0 00 a8 	load_32 s1, 40(sp)
   223b4:	20 80 00 c1 	cmpeq_i s1, s0, s1
   223b8:	61 02 00 f4 	bnz s1, 76 <A_Chase+0x200>
   223bc:	3a 08 00 10 	cmpeq_i s1, s26, 2
   223c0:	21 02 00 f4 	bnz s1, 68 <A_Chase+0x200>
   223c4:	5e 90 00 a8 	load_32 s2, 36(sp)
   223c8:	20 60 04 07 	mull_i s1, s0, 280
   223cc:	5a 07 00 05 	add_i s26, s26, 1
   223d0:	22 83 50 c0 	add_i s25, s2, s1
   223d4:	39 80 00 a8 	load_32 s1, 32(s25)
   223d8:	21 04 00 14 	cmplt_i s1, s1, 1
   223dc:	c1 fd ff f5 	bnz s1, -72 <A_Chase+0x190>
   223e0:	39 00 00 a8 	load_32 s1, (s25)
   223e4:	00 00 f2 c0 	move s0, s4
   223e8:	00 03 f2 c0 	move s24, s4
   223ec:	f2 35 00 f8 	call 55240 <P_CheckSight>
   223f0:	40 00 00 f4 	bnz s0, 8 <A_Chase+0x1f4>
   223f4:	e6 ff ff f7 	b -104 <A_Chase+0x188>
   223f8:	19 00 00 a8 	load_32 s0, (s25)
   223fc:	18 e0 01 88 	store_32 s0, 120(s24)
   22400:	05 00 00 f6 	b 20 <A_Chase+0x210>
   22404:	04 70 01 a8 	load_32 s0, 92(s4)
   22408:	20 10 00 a8 	load_32 s1, 4(s0)
   2240c:	00 00 f2 c0 	move s0, s4
   22410:	82 3e 00 f8 	call 64008 <P_SetMobjState>
   22414:	fe b3 00 a8 	load_32 ra, 44(sp)
   22418:	7e c3 00 a8 	load_32 s27, 48(sp)
   2241c:	5e d3 00 a8 	load_32 s26, 52(sp)
   22420:	3e e3 00 a8 	load_32 s25, 56(sp)
   22424:	1e f3 00 a8 	load_32 s24, 60(sp)
   22428:	de 03 01 05 	add_i sp, sp, 64
   2242c:	1f 00 00 f0 	ret
   22430:	3a 04 00 4f 	movehi s1, 58
   22434:	00 fc fd 01 	and s0, s0, -129
   22438:	04 a0 01 88 	store_32 s0, 104(s4)
   2243c:	1a 04 00 4f 	movehi s0, 58
   22440:	21 90 7f 00 	or s1, s1, 8164
   22444:	00 20 38 00 	or s0, s0, 3592
   22448:	21 00 00 a8 	load_32 s1, (s1)
   2244c:	00 00 00 a8 	load_32 s0, (s0)
   22450:	21 10 00 10 	cmpeq_i s1, s1, 4
   22454:	01 fe ff f5 	bnz s1, -64 <A_Chase+0x210>
   22458:	e0 fd ff f5 	bnz s0, -68 <A_Chase+0x210>
   2245c:	00 00 f2 c0 	move s0, s4
   22460:	64 fd ff f9 	call -2672 <P_NewChaseDir>
   22464:	ec ff ff f7 	b -80 <A_Chase+0x210>
   22468:	04 70 01 a8 	load_32 s0, 92(s4)
   2246c:	00 b0 00 a8 	load_32 s0, 44(s0)
   22470:	20 03 00 f2 	bz s0, 100 <A_Chase+0x2d0>
   22474:	1a 04 00 4f 	movehi s0, 58
   22478:	3a 04 00 4f 	movehi s1, 58
   2247c:	00 90 7f 00 	or s0, s0, 8164
   22480:	21 20 38 00 	or s1, s1, 3592
   22484:	00 00 00 a8 	load_32 s0, (s0)
   22488:	40 0c 00 16 	cmpgt_u s2, s0, 3
   2248c:	01 00 00 a8 	load_32 s0, (s1)
   22490:	82 00 00 f4 	bnz s2, 16 <A_Chase+0x29c>
   22494:	60 00 00 f4 	bnz s0, 12 <A_Chase+0x29c>
   22498:	04 d0 01 a8 	load_32 s0, 116(s4)
   2249c:	c0 01 00 f4 	bnz s0, 56 <A_Chase+0x2d0>
   224a0:	00 00 f2 c0 	move s0, s4
   224a4:	79 fc ff f9 	call -3612 <P_CheckMissileRange>
   224a8:	9e a0 00 a8 	load_32 s4, 40(sp)
   224ac:	40 01 00 f2 	bz s0, 40 <A_Chase+0x2d0>
   224b0:	04 70 01 a8 	load_32 s0, 92(s4)
   224b4:	20 b0 00 a8 	load_32 s1, 44(s0)
   224b8:	00 00 f2 c0 	move s0, s4
   224bc:	00 03 f2 c0 	move s24, s4
   224c0:	56 3e 00 f8 	call 63832 <P_SetMobjState>
   224c4:	18 a0 01 a8 	load_32 s0, 104(s24)
   224c8:	00 00 02 00 	or s0, s0, 128
   224cc:	18 a0 01 88 	store_32 s0, 104(s24)
   224d0:	d1 ff ff f7 	b -188 <A_Chase+0x210>
   224d4:	1b 04 00 4f 	movehi s0, 59
   224d8:	00 c0 01 00 	or s0, s0, 112
   224dc:	00 00 00 a8 	load_32 s0, (s0)
   224e0:	20 01 00 f2 	bz s0, 36 <A_Chase+0x300>
   224e4:	04 00 02 a8 	load_32 s0, 128(s4)
   224e8:	e0 00 00 f4 	bnz s0, 28 <A_Chase+0x300>
   224ec:	24 e0 01 a8 	load_32 s1, 120(s4)
   224f0:	00 00 f2 c0 	move s0, s4
   224f4:	b0 35 00 f8 	call 54976 <P_CheckSight>
   224f8:	9e a0 00 a8 	load_32 s4, 40(sp)
   224fc:	40 00 00 f4 	bnz s0, 8 <A_Chase+0x300>
   22500:	1f 00 00 f6 	b 124 <A_Chase+0x378>
   22504:	04 d0 01 a8 	load_32 s0, 116(s4)
   22508:	20 fc ff 05 	add_i s1, s0, -1
   2250c:	24 d0 01 88 	store_32 s1, 116(s4)
   22510:	00 04 00 14 	cmplt_i s0, s0, 1
   22514:	a0 00 00 f4 	bnz s0, 20 <A_Chase+0x324>
   22518:	00 00 f2 c0 	move s0, s4
   2251c:	b3 fc ff f9 	call -3380 <P_Move>
   22520:	9e a0 00 a8 	load_32 s4, 40(sp)
   22524:	80 00 00 f4 	bnz s0, 16 <A_Chase+0x330>
   22528:	00 00 f2 c0 	move s0, s4
   2252c:	31 fd ff f9 	call -2876 <P_NewChaseDir>
   22530:	9e a0 00 a8 	load_32 s4, 40(sp)
   22534:	04 70 01 a8 	load_32 s0, 92(s4)
   22538:	00 40 01 a8 	load_32 s0, 80(s0)
   2253c:	c0 f6 ff f3 	bz s0, -296 <A_Chase+0x210>
   22540:	6d e7 ff f9 	call -25164 <P_Random>
   22544:	5e a0 00 a8 	load_32 s2, 40(sp)
   22548:	00 08 00 12 	cmpgt_i s0, s0, 2
   2254c:	40 f6 ff f5 	bnz s0, -312 <A_Chase+0x210>
   22550:	02 70 01 a8 	load_32 s0, 92(s2)
   22554:	20 40 01 a8 	load_32 s1, 80(s0)
   22558:	00 00 f1 c0 	move s0, s2
   2255c:	a2 a7 00 f8 	call 171656 <S_StartSound>
   22560:	ad ff ff f7 	b -332 <A_Chase+0x210>
   22564:	20 00 20 4f 	movehi s1, 65536
   22568:	00 80 50 c0 	add_i s0, s0, s1
   2256c:	04 80 00 88 	store_32 s0, 32(s4)
   22570:	04 e3 01 a8 	load_32 s24, 120(s4)
   22574:	f8 ee ff f3 	bz s24, -548 <A_Chase+0x14c>
   22578:	48 ff ff f7 	b -736 <A_Chase+0x94>
   2257c:	04 20 02 a8 	load_32 s0, 136(s4)
   22580:	5b 04 00 4f 	movehi s2, 59
   22584:	40 03 00 0f 	move s26, 0
   22588:	20 fc ff 05 	add_i s1, s0, -1
   2258c:	21 0c 00 01 	and s1, s1, 3
   22590:	3e 90 00 88 	store_32 s1, 36(sp)
   22594:	3b 04 00 4f 	movehi s1, 59
   22598:	61 03 02 00 	or s27, s1, 128
   2259c:	22 40 02 00 	or s1, s2, 144
   225a0:	3e 80 00 88 	store_32 s1, 32(sp)
   225a4:	20 08 00 0b 	shl s1, s0, 2
   225a8:	3b 80 50 c0 	add_i s1, s27, s1
   225ac:	21 00 00 a8 	load_32 s1, (s1)
   225b0:	81 00 00 f2 	bz s1, 16 <A_Chase+0x3bc>
   225b4:	0a 00 00 f6 	b 40 <A_Chase+0x3d8>
   225b8:	19 20 02 a8 	load_32 s0, 136(s25)
   225bc:	80 80 fc c0 	move s4, s25
   225c0:	00 04 00 05 	add_i s0, s0, 1
   225c4:	00 0c 00 01 	and s0, s0, 3
   225c8:	04 20 02 88 	store_32 s0, 136(s4)
   225cc:	20 08 00 0b 	shl s1, s0, 2
   225d0:	3b 80 50 c0 	add_i s1, s27, s1
   225d4:	21 00 00 a8 	load_32 s1, (s1)
   225d8:	41 ff ff f3 	bz s1, -24 <A_Chase+0x3bc>
   225dc:	3e 90 00 a8 	load_32 s1, 36(sp)
   225e0:	20 80 00 c1 	cmpeq_i s1, s0, s1
   225e4:	01 f9 ff f5 	bnz s1, -224 <A_Chase+0x300>
   225e8:	3a 08 00 10 	cmpeq_i s1, s26, 2
   225ec:	c1 f8 ff f5 	bnz s1, -232 <A_Chase+0x300>
   225f0:	5e 80 00 a8 	load_32 s2, 32(sp)
   225f4:	20 60 04 07 	mull_i s1, s0, 280
   225f8:	5a 07 00 05 	add_i s26, s26, 1
   225fc:	02 83 50 c0 	add_i s24, s2, s1
   22600:	38 80 00 a8 	load_32 s1, 32(s24)
   22604:	21 04 00 14 	cmplt_i s1, s1, 1
   22608:	c1 fd ff f5 	bnz s1, -72 <A_Chase+0x3bc>
   2260c:	38 00 00 a8 	load_32 s1, (s24)
   22610:	00 00 f2 c0 	move s0, s4
   22614:	20 03 f2 c0 	move s25, s4
   22618:	67 35 00 f8 	call 54684 <P_CheckSight>
   2261c:	40 00 00 f4 	bnz s0, 8 <A_Chase+0x420>
   22620:	e6 ff ff f7 	b -104 <A_Chase+0x3b4>
   22624:	18 00 00 a8 	load_32 s0, (s24)
   22628:	19 e0 01 88 	store_32 s0, 120(s25)
   2262c:	7a ff ff f7 	b -536 <A_Chase+0x210>

0000000000022630 A_FaceTarget:
   22630:	de 03 ff 05 	add_i sp, sp, -64
   22634:	1e f3 00 88 	store_32 s24, 60(sp)
   22638:	3e e3 00 88 	store_32 s25, 56(sp)
   2263c:	fe d3 00 88 	store_32 ra, 52(sp)
   22640:	00 03 f0 c0 	move s24, s0
   22644:	78 e0 01 a8 	load_32 s3, 120(s24)
   22648:	c3 02 00 f2 	bz s3, 88 <A_FaceTarget+0x70>
   2264c:	18 a0 01 a8 	load_32 s0, 104(s24)
   22650:	00 7c ff 01 	and s0, s0, -33
   22654:	18 a0 01 88 	store_32 s0, 104(s24)
   22658:	18 30 00 a8 	load_32 s0, 12(s24)
   2265c:	38 40 00 a8 	load_32 s1, 16(s24)
   22660:	43 30 00 a8 	load_32 s2, 12(s3)
   22664:	63 40 00 a8 	load_32 s3, 16(s3)
   22668:	40 5b 00 f8 	call 93440 <R_PointToAngle2>
   2266c:	18 80 00 88 	store_32 s0, 32(s24)
   22670:	18 e0 01 a8 	load_32 s0, 120(s24)
   22674:	00 a8 01 a0 	load_u8 s0, 106(s0)
   22678:	00 10 00 01 	and s0, s0, 4
   2267c:	20 01 00 f2 	bz s0, 36 <A_FaceTarget+0x70>
   22680:	1d e7 ff f9 	call -25484 <P_Random>
   22684:	20 03 f0 c0 	move s25, s0
   22688:	1b e7 ff f9 	call -25492 <P_Random>
   2268c:	19 00 60 c0 	sub_i s0, s25, s0
   22690:	38 80 00 a8 	load_32 s1, 32(s24)
   22694:	00 54 00 0b 	shl s0, s0, 21
   22698:	00 80 50 c0 	add_i s0, s0, s1
   2269c:	18 80 00 88 	store_32 s0, 32(s24)
   226a0:	fe d3 00 a8 	load_32 ra, 52(sp)
   226a4:	3e e3 00 a8 	load_32 s25, 56(sp)
   226a8:	1e f3 00 a8 	load_32 s24, 60(sp)
   226ac:	de 03 01 05 	add_i sp, sp, 64
   226b0:	1f 00 00 f0 	ret

00000000000226b4 A_PosAttack:
   226b4:	de 03 ff 05 	add_i sp, sp, -64
   226b8:	1e f3 00 88 	store_32 s24, 60(sp)
   226bc:	3e e3 00 88 	store_32 s25, 56(sp)
   226c0:	5e d3 00 88 	store_32 s26, 52(sp)
   226c4:	7e c3 00 88 	store_32 s27, 48(sp)
   226c8:	fe b3 00 88 	store_32 ra, 44(sp)
   226cc:	00 03 f0 c0 	move s24, s0
   226d0:	78 e0 01 a8 	load_32 s3, 120(s24)
   226d4:	c3 06 00 f2 	bz s3, 216 <A_PosAttack+0xf8>
   226d8:	18 a0 01 a8 	load_32 s0, 104(s24)
   226dc:	00 7c ff 01 	and s0, s0, -33
   226e0:	18 a0 01 88 	store_32 s0, 104(s24)
   226e4:	18 30 00 a8 	load_32 s0, 12(s24)
   226e8:	38 40 00 a8 	load_32 s1, 16(s24)
   226ec:	43 30 00 a8 	load_32 s2, 12(s3)
   226f0:	63 40 00 a8 	load_32 s3, 16(s3)
   226f4:	1d 5b 00 f8 	call 93300 <R_PointToAngle2>
   226f8:	20 03 f0 c0 	move s25, s0
   226fc:	38 83 00 88 	store_32 s25, 32(s24)
   22700:	18 e0 01 a8 	load_32 s0, 120(s24)
   22704:	00 a8 01 a0 	load_u8 s0, 106(s0)
   22708:	00 10 00 01 	and s0, s0, 4
   2270c:	20 01 00 f2 	bz s0, 36 <A_PosAttack+0x7c>
   22710:	f9 e6 ff f9 	call -25628 <P_Random>
   22714:	20 03 f0 c0 	move s25, s0
   22718:	f7 e6 ff f9 	call -25636 <P_Random>
   2271c:	19 00 60 c0 	sub_i s0, s25, s0
   22720:	38 80 00 a8 	load_32 s1, 32(s24)
   22724:	00 54 00 0b 	shl s0, s0, 21
   22728:	20 83 50 c0 	add_i s25, s0, s1
   2272c:	38 83 00 88 	store_32 s25, 32(s24)
   22730:	40 03 08 4f 	movehi s26, 16384
   22734:	00 00 fc c0 	move s0, s24
   22738:	20 80 fc c0 	move s1, s25
   2273c:	40 00 fd c0 	move s2, s26
   22740:	fd 19 00 f8 	call 26612 <P_AimLineAttack>
   22744:	1e a0 00 88 	store_32 s0, 40(sp)
   22748:	20 04 00 0f 	move s1, 1
   2274c:	00 00 fc c0 	move s0, s24
   22750:	25 a7 00 f8 	call 171156 <S_StartSound>
   22754:	e8 e6 ff f9 	call -25696 <P_Random>
   22758:	60 03 f0 c0 	move s27, s0
   2275c:	e6 e6 ff f9 	call -25704 <P_Random>
   22760:	1b 00 60 c0 	sub_i s0, s27, s0
   22764:	00 50 00 0b 	shl s0, s0, 20
   22768:	20 83 5c c0 	add_i s25, s0, s25
   2276c:	e2 e6 ff f9 	call -25720 <P_Random>
   22770:	33 64 66 4f 	movehi s1, 209715
   22774:	21 9c 19 00 	or s1, s1, 1639
   22778:	20 80 f0 c1 	mulh_i s1, s0, s1
   2277c:	41 04 00 09 	ashr s2, s1, 1
   22780:	21 7c 00 0a 	shr s1, s1, 31
   22784:	22 80 50 c0 	add_i s1, s2, s1
   22788:	21 14 00 07 	mull_i s1, s1, 5
   2278c:	00 80 60 c0 	sub_i s0, s0, s1
   22790:	00 0c 00 07 	mull_i s0, s0, 3
   22794:	80 0c 00 05 	add_i s4, s0, 3
   22798:	00 00 fc c0 	move s0, s24
   2279c:	20 80 fc c0 	move s1, s25
   227a0:	40 00 fd c0 	move s2, s26
   227a4:	7e a0 00 a8 	load_32 s3, 40(sp)
   227a8:	29 1a 00 f8 	call 26788 <P_LineAttack>
   227ac:	fe b3 00 a8 	load_32 ra, 44(sp)
   227b0:	7e c3 00 a8 	load_32 s27, 48(sp)
   227b4:	5e d3 00 a8 	load_32 s26, 52(sp)
   227b8:	3e e3 00 a8 	load_32 s25, 56(sp)
   227bc:	1e f3 00 a8 	load_32 s24, 60(sp)
   227c0:	de 03 01 05 	add_i sp, sp, 64
   227c4:	1f 00 00 f0 	ret

00000000000227c8 A_SPosAttack:
   227c8:	de 03 ff 05 	add_i sp, sp, -64
   227cc:	1e f3 00 88 	store_32 s24, 60(sp)
   227d0:	3e e3 00 88 	store_32 s25, 56(sp)
   227d4:	5e d3 00 88 	store_32 s26, 52(sp)
   227d8:	7e c3 00 88 	store_32 s27, 48(sp)
   227dc:	fe b3 00 88 	store_32 ra, 44(sp)
   227e0:	00 03 f0 c0 	move s24, s0
   227e4:	18 e0 01 a8 	load_32 s0, 120(s24)
   227e8:	60 0d 00 f2 	bz s0, 428 <A_SPosAttack+0x1cc>
   227ec:	20 08 00 0f 	move s1, 2
   227f0:	00 00 fc c0 	move s0, s24
   227f4:	fc a6 00 f8 	call 170992 <S_StartSound>
   227f8:	78 e0 01 a8 	load_32 s3, 120(s24)
   227fc:	43 00 00 f4 	bnz s3, 8 <A_SPosAttack+0x3c>
   22800:	18 00 00 f6 	b 96 <A_SPosAttack+0x98>
   22804:	18 a0 01 a8 	load_32 s0, 104(s24)
   22808:	00 7c ff 01 	and s0, s0, -33
   2280c:	18 a0 01 88 	store_32 s0, 104(s24)
   22810:	18 30 00 a8 	load_32 s0, 12(s24)
   22814:	38 40 00 a8 	load_32 s1, 16(s24)
   22818:	43 30 00 a8 	load_32 s2, 12(s3)
   2281c:	63 40 00 a8 	load_32 s3, 16(s3)
   22820:	d2 5a 00 f8 	call 93000 <R_PointToAngle2>
   22824:	20 00 f0 c0 	move s1, s0
   22828:	38 80 00 88 	store_32 s1, 32(s24)
   2282c:	18 e0 01 a8 	load_32 s0, 120(s24)
   22830:	00 a8 01 a0 	load_u8 s0, 106(s0)
   22834:	00 10 00 01 	and s0, s0, 4
   22838:	60 01 00 f2 	bz s0, 44 <A_SPosAttack+0x9c>
   2283c:	ae e6 ff f9 	call -25928 <P_Random>
   22840:	20 03 f0 c0 	move s25, s0
   22844:	ac e6 ff f9 	call -25936 <P_Random>
   22848:	19 00 60 c0 	sub_i s0, s25, s0
   2284c:	38 80 00 a8 	load_32 s1, 32(s24)
   22850:	00 54 00 0b 	shl s0, s0, 21
   22854:	20 80 50 c0 	add_i s1, s0, s1
   22858:	38 80 00 88 	store_32 s1, 32(s24)
   2285c:	02 00 00 f6 	b 8 <A_SPosAttack+0x9c>
   22860:	38 80 00 a8 	load_32 s1, 32(s24)
   22864:	40 00 08 4f 	movehi s2, 16384
   22868:	5e 80 00 88 	store_32 s2, 32(sp)
   2286c:	00 00 fc c0 	move s0, s24
   22870:	40 83 f0 c0 	move s26, s1
   22874:	5e a3 00 88 	store_32 s26, 40(sp)
   22878:	af 19 00 f8 	call 26300 <P_AimLineAttack>
   2287c:	20 03 f0 c0 	move s25, s0
   22880:	9d e6 ff f9 	call -25996 <P_Random>
   22884:	60 03 f0 c0 	move s27, s0
   22888:	9b e6 ff f9 	call -26004 <P_Random>
   2288c:	1b 00 60 c0 	sub_i s0, s27, s0
   22890:	00 50 00 0b 	shl s0, s0, 20
   22894:	60 03 5d c0 	add_i s27, s0, s26
   22898:	97 e6 ff f9 	call -26020 <P_Random>
   2289c:	33 64 66 4f 	movehi s1, 209715
   228a0:	21 9c 19 00 	or s1, s1, 1639
   228a4:	3e 90 00 88 	store_32 s1, 36(sp)
   228a8:	20 80 f0 c1 	mulh_i s1, s0, s1
   228ac:	41 04 00 09 	ashr s2, s1, 1
   228b0:	21 7c 00 0a 	shr s1, s1, 31
   228b4:	22 80 50 c0 	add_i s1, s2, s1
   228b8:	21 14 00 07 	mull_i s1, s1, 5
   228bc:	00 80 60 c0 	sub_i s0, s0, s1
   228c0:	00 0c 00 07 	mull_i s0, s0, 3
   228c4:	80 0c 00 05 	add_i s4, s0, 3
   228c8:	00 00 fc c0 	move s0, s24
   228cc:	20 80 fd c0 	move s1, s27
   228d0:	5e 83 00 a8 	load_32 s26, 32(sp)
   228d4:	40 00 fd c0 	move s2, s26
   228d8:	3e 73 00 88 	store_32 s25, 28(sp)
   228dc:	60 80 fc c0 	move s3, s25
   228e0:	db 19 00 f8 	call 26476 <P_LineAttack>
   228e4:	84 e6 ff f9 	call -26096 <P_Random>
   228e8:	60 03 f0 c0 	move s27, s0
   228ec:	82 e6 ff f9 	call -26104 <P_Random>
   228f0:	1b 00 60 c0 	sub_i s0, s27, s0
   228f4:	3e a0 00 a8 	load_32 s1, 40(sp)
   228f8:	00 50 00 0b 	shl s0, s0, 20
   228fc:	60 83 50 c0 	add_i s27, s0, s1
   22900:	7d e6 ff f9 	call -26124 <P_Random>
   22904:	3e 90 00 a8 	load_32 s1, 36(sp)
   22908:	20 80 f0 c1 	mulh_i s1, s0, s1
   2290c:	41 04 00 09 	ashr s2, s1, 1
   22910:	21 7c 00 0a 	shr s1, s1, 31
   22914:	22 80 50 c0 	add_i s1, s2, s1
   22918:	21 14 00 07 	mull_i s1, s1, 5
   2291c:	00 80 60 c0 	sub_i s0, s0, s1
   22920:	00 0c 00 07 	mull_i s0, s0, 3
   22924:	80 0c 00 05 	add_i s4, s0, 3
   22928:	00 00 fc c0 	move s0, s24
   2292c:	20 80 fd c0 	move s1, s27
   22930:	40 00 fd c0 	move s2, s26
   22934:	60 80 fc c0 	move s3, s25
   22938:	c5 19 00 f8 	call 26388 <P_LineAttack>
   2293c:	6e e6 ff f9 	call -26184 <P_Random>
   22940:	60 03 f0 c0 	move s27, s0
   22944:	6c e6 ff f9 	call -26192 <P_Random>
   22948:	1b 00 60 c0 	sub_i s0, s27, s0
   2294c:	3e a0 00 a8 	load_32 s1, 40(sp)
   22950:	00 50 00 0b 	shl s0, s0, 20
   22954:	20 83 50 c0 	add_i s25, s0, s1
   22958:	67 e6 ff f9 	call -26212 <P_Random>
   2295c:	3e 90 00 a8 	load_32 s1, 36(sp)
   22960:	20 80 f0 c1 	mulh_i s1, s0, s1
   22964:	41 04 00 09 	ashr s2, s1, 1
   22968:	21 7c 00 0a 	shr s1, s1, 31
   2296c:	22 80 50 c0 	add_i s1, s2, s1
   22970:	21 14 00 07 	mull_i s1, s1, 5
   22974:	00 80 60 c0 	sub_i s0, s0, s1
   22978:	00 0c 00 07 	mull_i s0, s0, 3
   2297c:	80 0c 00 05 	add_i s4, s0, 3
   22980:	00 00 fc c0 	move s0, s24
   22984:	20 80 fc c0 	move s1, s25
   22988:	40 00 fd c0 	move s2, s26
   2298c:	7e 70 00 a8 	load_32 s3, 28(sp)
   22990:	af 19 00 f8 	call 26300 <P_LineAttack>
   22994:	fe b3 00 a8 	load_32 ra, 44(sp)
   22998:	7e c3 00 a8 	load_32 s27, 48(sp)
   2299c:	5e d3 00 a8 	load_32 s26, 52(sp)
   229a0:	3e e3 00 a8 	load_32 s25, 56(sp)
   229a4:	1e f3 00 a8 	load_32 s24, 60(sp)
   229a8:	de 03 01 05 	add_i sp, sp, 64
   229ac:	1f 00 00 f0 	ret

00000000000229b0 A_CPosAttack:
   229b0:	de 03 ff 05 	add_i sp, sp, -64
   229b4:	1e f3 00 88 	store_32 s24, 60(sp)
   229b8:	3e e3 00 88 	store_32 s25, 56(sp)
   229bc:	5e d3 00 88 	store_32 s26, 52(sp)
   229c0:	7e c3 00 88 	store_32 s27, 48(sp)
   229c4:	fe b3 00 88 	store_32 ra, 44(sp)
   229c8:	00 03 f0 c0 	move s24, s0
   229cc:	18 e0 01 a8 	load_32 s0, 120(s24)
   229d0:	60 07 00 f2 	bz s0, 236 <A_CPosAttack+0x10c>
   229d4:	20 08 00 0f 	move s1, 2
   229d8:	00 00 fc c0 	move s0, s24
   229dc:	82 a6 00 f8 	call 170504 <S_StartSound>
   229e0:	78 e0 01 a8 	load_32 s3, 120(s24)
   229e4:	43 00 00 f4 	bnz s3, 8 <A_CPosAttack+0x3c>
   229e8:	18 00 00 f6 	b 96 <A_CPosAttack+0x98>
   229ec:	18 a0 01 a8 	load_32 s0, 104(s24)
   229f0:	00 7c ff 01 	and s0, s0, -33
   229f4:	18 a0 01 88 	store_32 s0, 104(s24)
   229f8:	18 30 00 a8 	load_32 s0, 12(s24)
   229fc:	38 40 00 a8 	load_32 s1, 16(s24)
   22a00:	43 30 00 a8 	load_32 s2, 12(s3)
   22a04:	63 40 00 a8 	load_32 s3, 16(s3)
   22a08:	58 5a 00 f8 	call 92512 <R_PointToAngle2>
   22a0c:	20 03 f0 c0 	move s25, s0
   22a10:	38 83 00 88 	store_32 s25, 32(s24)
   22a14:	18 e0 01 a8 	load_32 s0, 120(s24)
   22a18:	00 a8 01 a0 	load_u8 s0, 106(s0)
   22a1c:	00 10 00 01 	and s0, s0, 4
   22a20:	60 01 00 f2 	bz s0, 44 <A_CPosAttack+0x9c>
   22a24:	34 e6 ff f9 	call -26416 <P_Random>
   22a28:	20 03 f0 c0 	move s25, s0
   22a2c:	32 e6 ff f9 	call -26424 <P_Random>
   22a30:	19 00 60 c0 	sub_i s0, s25, s0
   22a34:	38 80 00 a8 	load_32 s1, 32(s24)
   22a38:	00 54 00 0b 	shl s0, s0, 21
   22a3c:	20 83 50 c0 	add_i s25, s0, s1
   22a40:	38 83 00 88 	store_32 s25, 32(s24)
   22a44:	02 00 00 f6 	b 8 <A_CPosAttack+0x9c>
   22a48:	38 83 00 a8 	load_32 s25, 32(s24)
   22a4c:	40 03 08 4f 	movehi s26, 16384
   22a50:	00 00 fc c0 	move s0, s24
   22a54:	20 80 fc c0 	move s1, s25
   22a58:	40 00 fd c0 	move s2, s26
   22a5c:	36 19 00 f8 	call 25816 <P_AimLineAttack>
   22a60:	1e a0 00 88 	store_32 s0, 40(sp)
   22a64:	24 e6 ff f9 	call -26480 <P_Random>
   22a68:	60 03 f0 c0 	move s27, s0
   22a6c:	22 e6 ff f9 	call -26488 <P_Random>
   22a70:	1b 00 60 c0 	sub_i s0, s27, s0
   22a74:	00 50 00 0b 	shl s0, s0, 20
   22a78:	20 83 5c c0 	add_i s25, s0, s25
   22a7c:	1e e6 ff f9 	call -26504 <P_Random>
   22a80:	33 64 66 4f 	movehi s1, 209715
   22a84:	21 9c 19 00 	or s1, s1, 1639
   22a88:	20 80 f0 c1 	mulh_i s1, s0, s1
   22a8c:	41 04 00 09 	ashr s2, s1, 1
   22a90:	21 7c 00 0a 	shr s1, s1, 31
   22a94:	22 80 50 c0 	add_i s1, s2, s1
   22a98:	21 14 00 07 	mull_i s1, s1, 5
   22a9c:	00 80 60 c0 	sub_i s0, s0, s1
   22aa0:	00 0c 00 07 	mull_i s0, s0, 3
   22aa4:	80 0c 00 05 	add_i s4, s0, 3
   22aa8:	00 00 fc c0 	move s0, s24
   22aac:	20 80 fc c0 	move s1, s25
   22ab0:	40 00 fd c0 	move s2, s26
   22ab4:	7e a0 00 a8 	load_32 s3, 40(sp)
   22ab8:	65 19 00 f8 	call 26004 <P_LineAttack>
   22abc:	fe b3 00 a8 	load_32 ra, 44(sp)
   22ac0:	7e c3 00 a8 	load_32 s27, 48(sp)
   22ac4:	5e d3 00 a8 	load_32 s26, 52(sp)
   22ac8:	3e e3 00 a8 	load_32 s25, 56(sp)
   22acc:	1e f3 00 a8 	load_32 s24, 60(sp)
   22ad0:	de 03 01 05 	add_i sp, sp, 64
   22ad4:	1f 00 00 f0 	ret

0000000000022ad8 A_CPosRefire:
   22ad8:	de 03 ff 05 	add_i sp, sp, -64
   22adc:	1e f3 00 88 	store_32 s24, 60(sp)
   22ae0:	3e e3 00 88 	store_32 s25, 56(sp)
   22ae4:	fe d3 00 88 	store_32 ra, 52(sp)
   22ae8:	00 03 f0 c0 	move s24, s0
   22aec:	78 e0 01 a8 	load_32 s3, 120(s24)
   22af0:	c3 02 00 f2 	bz s3, 88 <A_CPosRefire+0x70>
   22af4:	18 a0 01 a8 	load_32 s0, 104(s24)
   22af8:	00 7c ff 01 	and s0, s0, -33
   22afc:	18 a0 01 88 	store_32 s0, 104(s24)
   22b00:	18 30 00 a8 	load_32 s0, 12(s24)
   22b04:	38 40 00 a8 	load_32 s1, 16(s24)
   22b08:	43 30 00 a8 	load_32 s2, 12(s3)
   22b0c:	63 40 00 a8 	load_32 s3, 16(s3)
   22b10:	16 5a 00 f8 	call 92248 <R_PointToAngle2>
   22b14:	18 80 00 88 	store_32 s0, 32(s24)
   22b18:	18 e0 01 a8 	load_32 s0, 120(s24)
   22b1c:	00 a8 01 a0 	load_u8 s0, 106(s0)
   22b20:	00 10 00 01 	and s0, s0, 4
   22b24:	20 01 00 f2 	bz s0, 36 <A_CPosRefire+0x70>
   22b28:	f3 e5 ff f9 	call -26676 <P_Random>
   22b2c:	20 03 f0 c0 	move s25, s0
   22b30:	f1 e5 ff f9 	call -26684 <P_Random>
   22b34:	19 00 60 c0 	sub_i s0, s25, s0
   22b38:	38 80 00 a8 	load_32 s1, 32(s24)
   22b3c:	00 54 00 0b 	shl s0, s0, 21
   22b40:	00 80 50 c0 	add_i s0, s0, s1
   22b44:	18 80 00 88 	store_32 s0, 32(s24)
   22b48:	eb e5 ff f9 	call -26708 <P_Random>
   22b4c:	00 a0 00 14 	cmplt_i s0, s0, 40
   22b50:	a0 01 00 f4 	bnz s0, 52 <A_CPosRefire+0xac>
   22b54:	38 e0 01 a8 	load_32 s1, 120(s24)
   22b58:	e1 00 00 f2 	bz s1, 28 <A_CPosRefire+0x9c>
   22b5c:	01 b0 01 a8 	load_32 s0, 108(s1)
   22b60:	00 04 00 14 	cmplt_i s0, s0, 1
   22b64:	80 00 00 f4 	bnz s0, 16 <A_CPosRefire+0x9c>
   22b68:	00 00 fc c0 	move s0, s24
   22b6c:	12 34 00 f8 	call 53320 <P_CheckSight>
   22b70:	a0 00 00 f4 	bnz s0, 20 <A_CPosRefire+0xac>
   22b74:	18 70 01 a8 	load_32 s0, 92(s24)
   22b78:	20 30 00 a8 	load_32 s1, 12(s0)
   22b7c:	00 00 fc c0 	move s0, s24
   22b80:	a6 3c 00 f8 	call 62104 <P_SetMobjState>
   22b84:	fe d3 00 a8 	load_32 ra, 52(sp)
   22b88:	3e e3 00 a8 	load_32 s25, 56(sp)
   22b8c:	1e f3 00 a8 	load_32 s24, 60(sp)
   22b90:	de 03 01 05 	add_i sp, sp, 64
   22b94:	1f 00 00 f0 	ret

0000000000022b98 A_SpidRefire:
   22b98:	de 03 ff 05 	add_i sp, sp, -64
   22b9c:	1e f3 00 88 	store_32 s24, 60(sp)
   22ba0:	3e e3 00 88 	store_32 s25, 56(sp)
   22ba4:	fe d3 00 88 	store_32 ra, 52(sp)
   22ba8:	00 03 f0 c0 	move s24, s0
   22bac:	78 e0 01 a8 	load_32 s3, 120(s24)
   22bb0:	c3 02 00 f2 	bz s3, 88 <A_SpidRefire+0x70>
   22bb4:	18 a0 01 a8 	load_32 s0, 104(s24)
   22bb8:	00 7c ff 01 	and s0, s0, -33
   22bbc:	18 a0 01 88 	store_32 s0, 104(s24)
   22bc0:	18 30 00 a8 	load_32 s0, 12(s24)
   22bc4:	38 40 00 a8 	load_32 s1, 16(s24)
   22bc8:	43 30 00 a8 	load_32 s2, 12(s3)
   22bcc:	63 40 00 a8 	load_32 s3, 16(s3)
   22bd0:	e6 59 00 f8 	call 92056 <R_PointToAngle2>
   22bd4:	18 80 00 88 	store_32 s0, 32(s24)
   22bd8:	18 e0 01 a8 	load_32 s0, 120(s24)
   22bdc:	00 a8 01 a0 	load_u8 s0, 106(s0)
   22be0:	00 10 00 01 	and s0, s0, 4
   22be4:	20 01 00 f2 	bz s0, 36 <A_SpidRefire+0x70>
   22be8:	c3 e5 ff f9 	call -26868 <P_Random>
   22bec:	20 03 f0 c0 	move s25, s0
   22bf0:	c1 e5 ff f9 	call -26876 <P_Random>
   22bf4:	19 00 60 c0 	sub_i s0, s25, s0
   22bf8:	38 80 00 a8 	load_32 s1, 32(s24)
   22bfc:	00 54 00 0b 	shl s0, s0, 21
   22c00:	00 80 50 c0 	add_i s0, s0, s1
   22c04:	18 80 00 88 	store_32 s0, 32(s24)
   22c08:	bb e5 ff f9 	call -26900 <P_Random>
   22c0c:	00 28 00 14 	cmplt_i s0, s0, 10
   22c10:	a0 01 00 f4 	bnz s0, 52 <A_SpidRefire+0xac>
   22c14:	38 e0 01 a8 	load_32 s1, 120(s24)
   22c18:	e1 00 00 f2 	bz s1, 28 <A_SpidRefire+0x9c>
   22c1c:	01 b0 01 a8 	load_32 s0, 108(s1)
   22c20:	00 04 00 14 	cmplt_i s0, s0, 1
   22c24:	80 00 00 f4 	bnz s0, 16 <A_SpidRefire+0x9c>
   22c28:	00 00 fc c0 	move s0, s24
   22c2c:	e2 33 00 f8 	call 53128 <P_CheckSight>
   22c30:	a0 00 00 f4 	bnz s0, 20 <A_SpidRefire+0xac>
   22c34:	18 70 01 a8 	load_32 s0, 92(s24)
   22c38:	20 30 00 a8 	load_32 s1, 12(s0)
   22c3c:	00 00 fc c0 	move s0, s24
   22c40:	76 3c 00 f8 	call 61912 <P_SetMobjState>
   22c44:	fe d3 00 a8 	load_32 ra, 52(sp)
   22c48:	3e e3 00 a8 	load_32 s25, 56(sp)
   22c4c:	1e f3 00 a8 	load_32 s24, 60(sp)
   22c50:	de 03 01 05 	add_i sp, sp, 64
   22c54:	1f 00 00 f0 	ret

0000000000022c58 A_BspiAttack:
   22c58:	de 03 ff 05 	add_i sp, sp, -64
   22c5c:	1e f3 00 88 	store_32 s24, 60(sp)
   22c60:	3e e3 00 88 	store_32 s25, 56(sp)
   22c64:	fe d3 00 88 	store_32 ra, 52(sp)
   22c68:	00 03 f0 c0 	move s24, s0
   22c6c:	78 e0 01 a8 	load_32 s3, 120(s24)
   22c70:	43 03 00 f2 	bz s3, 104 <A_BspiAttack+0x80>
   22c74:	18 a0 01 a8 	load_32 s0, 104(s24)
   22c78:	00 7c ff 01 	and s0, s0, -33
   22c7c:	18 a0 01 88 	store_32 s0, 104(s24)
   22c80:	18 30 00 a8 	load_32 s0, 12(s24)
   22c84:	38 40 00 a8 	load_32 s1, 16(s24)
   22c88:	43 30 00 a8 	load_32 s2, 12(s3)
   22c8c:	63 40 00 a8 	load_32 s3, 16(s3)
   22c90:	b6 59 00 f8 	call 91864 <R_PointToAngle2>
   22c94:	18 80 00 88 	store_32 s0, 32(s24)
   22c98:	38 e0 01 a8 	load_32 s1, 120(s24)
   22c9c:	01 a8 01 a0 	load_u8 s0, 106(s1)
   22ca0:	00 10 00 01 	and s0, s0, 4
   22ca4:	40 01 00 f2 	bz s0, 40 <A_BspiAttack+0x74>
   22ca8:	93 e5 ff f9 	call -27060 <P_Random>
   22cac:	20 03 f0 c0 	move s25, s0
   22cb0:	91 e5 ff f9 	call -27068 <P_Random>
   22cb4:	19 00 60 c0 	sub_i s0, s25, s0
   22cb8:	38 80 00 a8 	load_32 s1, 32(s24)
   22cbc:	00 54 00 0b 	shl s0, s0, 21
   22cc0:	00 80 50 c0 	add_i s0, s0, s1
   22cc4:	18 80 00 88 	store_32 s0, 32(s24)
   22cc8:	38 e0 01 a8 	load_32 s1, 120(s24)
   22ccc:	40 90 00 0f 	move s2, 36
   22cd0:	00 00 fc c0 	move s0, s24
   22cd4:	50 42 00 f8 	call 67904 <P_SpawnMissile>
   22cd8:	fe d3 00 a8 	load_32 ra, 52(sp)
   22cdc:	3e e3 00 a8 	load_32 s25, 56(sp)
   22ce0:	1e f3 00 a8 	load_32 s24, 60(sp)
   22ce4:	de 03 01 05 	add_i sp, sp, 64
   22ce8:	1f 00 00 f0 	ret

0000000000022cec A_TroopAttack:
   22cec:	de 03 ff 05 	add_i sp, sp, -64
   22cf0:	1e f3 00 88 	store_32 s24, 60(sp)
   22cf4:	3e e3 00 88 	store_32 s25, 56(sp)
   22cf8:	fe d3 00 88 	store_32 ra, 52(sp)
   22cfc:	00 03 f0 c0 	move s24, s0
   22d00:	78 e0 01 a8 	load_32 s3, 120(s24)
   22d04:	a3 07 00 f2 	bz s3, 244 <A_TroopAttack+0x10c>
   22d08:	18 a0 01 a8 	load_32 s0, 104(s24)
   22d0c:	00 7c ff 01 	and s0, s0, -33
   22d10:	18 a0 01 88 	store_32 s0, 104(s24)
   22d14:	18 30 00 a8 	load_32 s0, 12(s24)
   22d18:	38 40 00 a8 	load_32 s1, 16(s24)
   22d1c:	43 30 00 a8 	load_32 s2, 12(s3)
   22d20:	63 40 00 a8 	load_32 s3, 16(s3)
   22d24:	91 59 00 f8 	call 91716 <R_PointToAngle2>
   22d28:	18 80 00 88 	store_32 s0, 32(s24)
   22d2c:	38 e3 01 a8 	load_32 s25, 120(s24)
   22d30:	19 a8 01 a0 	load_u8 s0, 106(s25)
   22d34:	00 10 00 01 	and s0, s0, 4
   22d38:	40 01 00 f2 	bz s0, 40 <A_TroopAttack+0x74>
   22d3c:	6e e5 ff f9 	call -27208 <P_Random>
   22d40:	20 03 f0 c0 	move s25, s0
   22d44:	6c e5 ff f9 	call -27216 <P_Random>
   22d48:	19 00 60 c0 	sub_i s0, s25, s0
   22d4c:	38 80 00 a8 	load_32 s1, 32(s24)
   22d50:	00 54 00 0b 	shl s0, s0, 21
   22d54:	00 80 50 c0 	add_i s0, s0, s1
   22d58:	18 80 00 88 	store_32 s0, 32(s24)
   22d5c:	38 e3 01 a8 	load_32 s25, 120(s24)
   22d60:	59 04 00 f2 	bz s25, 136 <A_TroopAttack+0xfc>
   22d64:	19 30 00 a8 	load_32 s0, 12(s25)
   22d68:	38 30 00 a8 	load_32 s1, 12(s24)
   22d6c:	59 40 00 a8 	load_32 s2, 16(s25)
   22d70:	78 40 00 a8 	load_32 s3, 16(s24)
   22d74:	00 80 60 c0 	sub_i s0, s0, s1
   22d78:	22 80 61 c0 	sub_i s1, s2, s3
   22d7c:	50 1a 00 f8 	call 26944 <P_AproxDistance>
   22d80:	39 70 01 a8 	load_32 s1, 92(s25)
   22d84:	40 2c 00 4f 	movehi s2, 352
   22d88:	21 00 01 a8 	load_32 s1, 64(s1)
   22d8c:	21 00 51 c0 	add_i s1, s1, s2
   22d90:	00 80 30 c1 	cmpge_i s0, s0, s1
   22d94:	a0 02 00 f4 	bnz s0, 84 <A_TroopAttack+0xfc>
   22d98:	38 e0 01 a8 	load_32 s1, 120(s24)
   22d9c:	00 00 fc c0 	move s0, s24
   22da0:	85 33 00 f8 	call 52756 <P_CheckSight>
   22da4:	20 02 00 f2 	bz s0, 68 <A_TroopAttack+0xfc>
   22da8:	20 dc 00 0f 	move s1, 55
   22dac:	00 00 fc c0 	move s0, s24
   22db0:	8d a5 00 f8 	call 169524 <S_StartSound>
   22db4:	50 e5 ff f9 	call -27328 <P_Random>
   22db8:	20 7c 00 09 	ashr s1, s0, 31
   22dbc:	21 74 00 0a 	shr s1, s1, 29
   22dc0:	20 80 50 c0 	add_i s1, s0, s1
   22dc4:	21 e0 ff 01 	and s1, s1, -8
   22dc8:	00 80 60 c0 	sub_i s0, s0, s1
   22dcc:	00 0c 00 07 	mull_i s0, s0, 3
   22dd0:	60 0c 00 05 	add_i s3, s0, 3
   22dd4:	18 e0 01 a8 	load_32 s0, 120(s24)
   22dd8:	20 00 fc c0 	move s1, s24
   22ddc:	40 00 fc c0 	move s2, s24
   22de0:	ac 0f 00 f8 	call 16048 <P_DamageMobj>
   22de4:	05 00 00 f6 	b 20 <A_TroopAttack+0x10c>
   22de8:	38 e0 01 a8 	load_32 s1, 120(s24)
   22dec:	40 7c 00 0f 	move s2, 31
   22df0:	00 00 fc c0 	move s0, s24
   22df4:	08 42 00 f8 	call 67616 <P_SpawnMissile>
   22df8:	fe d3 00 a8 	load_32 ra, 52(sp)
   22dfc:	3e e3 00 a8 	load_32 s25, 56(sp)
   22e00:	1e f3 00 a8 	load_32 s24, 60(sp)
   22e04:	de 03 01 05 	add_i sp, sp, 64
   22e08:	1f 00 00 f0 	ret

0000000000022e0c A_SargAttack:
   22e0c:	de 03 ff 05 	add_i sp, sp, -64
   22e10:	1e f3 00 88 	store_32 s24, 60(sp)
   22e14:	3e e3 00 88 	store_32 s25, 56(sp)
   22e18:	fe d3 00 88 	store_32 ra, 52(sp)
   22e1c:	00 03 f0 c0 	move s24, s0
   22e20:	78 e0 01 a8 	load_32 s3, 120(s24)
   22e24:	03 07 00 f2 	bz s3, 224 <A_SargAttack+0xf8>
   22e28:	18 a0 01 a8 	load_32 s0, 104(s24)
   22e2c:	00 7c ff 01 	and s0, s0, -33
   22e30:	18 a0 01 88 	store_32 s0, 104(s24)
   22e34:	18 30 00 a8 	load_32 s0, 12(s24)
   22e38:	38 40 00 a8 	load_32 s1, 16(s24)
   22e3c:	43 30 00 a8 	load_32 s2, 12(s3)
   22e40:	63 40 00 a8 	load_32 s3, 16(s3)
   22e44:	49 59 00 f8 	call 91428 <R_PointToAngle2>
   22e48:	18 80 00 88 	store_32 s0, 32(s24)
   22e4c:	38 e3 01 a8 	load_32 s25, 120(s24)
   22e50:	19 a8 01 a0 	load_u8 s0, 106(s25)
   22e54:	00 10 00 01 	and s0, s0, 4
   22e58:	40 01 00 f2 	bz s0, 40 <A_SargAttack+0x74>
   22e5c:	26 e5 ff f9 	call -27496 <P_Random>
   22e60:	20 03 f0 c0 	move s25, s0
   22e64:	24 e5 ff f9 	call -27504 <P_Random>
   22e68:	19 00 60 c0 	sub_i s0, s25, s0
   22e6c:	38 80 00 a8 	load_32 s1, 32(s24)
   22e70:	00 54 00 0b 	shl s0, s0, 21
   22e74:	00 80 50 c0 	add_i s0, s0, s1
   22e78:	18 80 00 88 	store_32 s0, 32(s24)
   22e7c:	38 e3 01 a8 	load_32 s25, 120(s24)
   22e80:	39 04 00 f2 	bz s25, 132 <A_SargAttack+0xf8>
   22e84:	19 30 00 a8 	load_32 s0, 12(s25)
   22e88:	38 30 00 a8 	load_32 s1, 12(s24)
   22e8c:	59 40 00 a8 	load_32 s2, 16(s25)
   22e90:	78 40 00 a8 	load_32 s3, 16(s24)
   22e94:	00 80 60 c0 	sub_i s0, s0, s1
   22e98:	22 80 61 c0 	sub_i s1, s2, s3
   22e9c:	08 1a 00 f8 	call 26656 <P_AproxDistance>
   22ea0:	39 70 01 a8 	load_32 s1, 92(s25)
   22ea4:	40 2c 00 4f 	movehi s2, 352
   22ea8:	21 00 01 a8 	load_32 s1, 64(s1)
   22eac:	21 00 51 c0 	add_i s1, s1, s2
   22eb0:	00 80 30 c1 	cmpge_i s0, s0, s1
   22eb4:	80 02 00 f4 	bnz s0, 80 <A_SargAttack+0xf8>
   22eb8:	38 e0 01 a8 	load_32 s1, 120(s24)
   22ebc:	00 00 fc c0 	move s0, s24
   22ec0:	3d 33 00 f8 	call 52468 <P_CheckSight>
   22ec4:	00 02 00 f2 	bz s0, 64 <A_SargAttack+0xf8>
   22ec8:	0b e5 ff f9 	call -27604 <P_Random>
   22ecc:	33 64 66 4f 	movehi s1, 209715
   22ed0:	21 9c 19 00 	or s1, s1, 1639
   22ed4:	20 80 f0 c1 	mulh_i s1, s0, s1
   22ed8:	41 08 00 0a 	shr s2, s1, 2
   22edc:	21 7c 00 0a 	shr s1, s1, 31
   22ee0:	22 80 50 c0 	add_i s1, s2, s1
   22ee4:	21 28 00 07 	mull_i s1, s1, 10
   22ee8:	00 80 60 c0 	sub_i s0, s0, s1
   22eec:	00 08 00 0b 	shl s0, s0, 2
   22ef0:	60 10 00 05 	add_i s3, s0, 4
   22ef4:	18 e0 01 a8 	load_32 s0, 120(s24)
   22ef8:	20 00 fc c0 	move s1, s24
   22efc:	40 00 fc c0 	move s2, s24
   22f00:	64 0f 00 f8 	call 15760 <P_DamageMobj>
   22f04:	fe d3 00 a8 	load_32 ra, 52(sp)
   22f08:	3e e3 00 a8 	load_32 s25, 56(sp)
   22f0c:	1e f3 00 a8 	load_32 s24, 60(sp)
   22f10:	de 03 01 05 	add_i sp, sp, 64
   22f14:	1f 00 00 f0 	ret

0000000000022f18 A_HeadAttack:
   22f18:	de 03 ff 05 	add_i sp, sp, -64
   22f1c:	1e f3 00 88 	store_32 s24, 60(sp)
   22f20:	3e e3 00 88 	store_32 s25, 56(sp)
   22f24:	fe d3 00 88 	store_32 ra, 52(sp)
   22f28:	00 03 f0 c0 	move s24, s0
   22f2c:	78 e0 01 a8 	load_32 s3, 120(s24)
   22f30:	83 07 00 f2 	bz s3, 240 <A_HeadAttack+0x108>
   22f34:	18 a0 01 a8 	load_32 s0, 104(s24)
   22f38:	00 7c ff 01 	and s0, s0, -33
   22f3c:	18 a0 01 88 	store_32 s0, 104(s24)
   22f40:	18 30 00 a8 	load_32 s0, 12(s24)
   22f44:	38 40 00 a8 	load_32 s1, 16(s24)
   22f48:	43 30 00 a8 	load_32 s2, 12(s3)
   22f4c:	63 40 00 a8 	load_32 s3, 16(s3)
   22f50:	06 59 00 f8 	call 91160 <R_PointToAngle2>
   22f54:	18 80 00 88 	store_32 s0, 32(s24)
   22f58:	38 e3 01 a8 	load_32 s25, 120(s24)
   22f5c:	19 a8 01 a0 	load_u8 s0, 106(s25)
   22f60:	00 10 00 01 	and s0, s0, 4
   22f64:	40 01 00 f2 	bz s0, 40 <A_HeadAttack+0x74>
   22f68:	e3 e4 ff f9 	call -27764 <P_Random>
   22f6c:	20 03 f0 c0 	move s25, s0
   22f70:	e1 e4 ff f9 	call -27772 <P_Random>
   22f74:	19 00 60 c0 	sub_i s0, s25, s0
   22f78:	38 80 00 a8 	load_32 s1, 32(s24)
   22f7c:	00 54 00 0b 	shl s0, s0, 21
   22f80:	00 80 50 c0 	add_i s0, s0, s1
   22f84:	18 80 00 88 	store_32 s0, 32(s24)
   22f88:	38 e3 01 a8 	load_32 s25, 120(s24)
   22f8c:	39 04 00 f2 	bz s25, 132 <A_HeadAttack+0xf8>
   22f90:	19 30 00 a8 	load_32 s0, 12(s25)
   22f94:	38 30 00 a8 	load_32 s1, 12(s24)
   22f98:	59 40 00 a8 	load_32 s2, 16(s25)
   22f9c:	78 40 00 a8 	load_32 s3, 16(s24)
   22fa0:	00 80 60 c0 	sub_i s0, s0, s1
   22fa4:	22 80 61 c0 	sub_i s1, s2, s3
   22fa8:	c5 19 00 f8 	call 26388 <P_AproxDistance>
   22fac:	39 70 01 a8 	load_32 s1, 92(s25)
   22fb0:	40 2c 00 4f 	movehi s2, 352
   22fb4:	21 00 01 a8 	load_32 s1, 64(s1)
   22fb8:	21 00 51 c0 	add_i s1, s1, s2
   22fbc:	00 80 30 c1 	cmpge_i s0, s0, s1
   22fc0:	80 02 00 f4 	bnz s0, 80 <A_HeadAttack+0xf8>
   22fc4:	38 e0 01 a8 	load_32 s1, 120(s24)
   22fc8:	00 00 fc c0 	move s0, s24
   22fcc:	fa 32 00 f8 	call 52200 <P_CheckSight>
   22fd0:	00 02 00 f2 	bz s0, 64 <A_HeadAttack+0xf8>
   22fd4:	c8 e4 ff f9 	call -27872 <P_Random>
   22fd8:	35 a8 2a 4f 	movehi s1, 87381
   22fdc:	21 ac 2a 00 	or s1, s1, 2731
   22fe0:	20 80 f0 c1 	mulh_i s1, s0, s1
   22fe4:	41 7c 00 0a 	shr s2, s1, 31
   22fe8:	21 00 51 c0 	add_i s1, s1, s2
   22fec:	21 18 00 07 	mull_i s1, s1, 6
   22ff0:	00 80 60 c0 	sub_i s0, s0, s1
   22ff4:	00 28 00 07 	mull_i s0, s0, 10
   22ff8:	60 28 00 05 	add_i s3, s0, 10
   22ffc:	18 e0 01 a8 	load_32 s0, 120(s24)
   23000:	20 00 fc c0 	move s1, s24
   23004:	40 00 fc c0 	move s2, s24
   23008:	22 0f 00 f8 	call 15496 <P_DamageMobj>
   2300c:	05 00 00 f6 	b 20 <A_HeadAttack+0x108>
   23010:	38 e0 01 a8 	load_32 s1, 120(s24)
   23014:	40 80 00 0f 	move s2, 32
   23018:	00 00 fc c0 	move s0, s24
   2301c:	7e 41 00 f8 	call 67064 <P_SpawnMissile>
   23020:	fe d3 00 a8 	load_32 ra, 52(sp)
   23024:	3e e3 00 a8 	load_32 s25, 56(sp)
   23028:	1e f3 00 a8 	load_32 s24, 60(sp)
   2302c:	de 03 01 05 	add_i sp, sp, 64
   23030:	1f 00 00 f0 	ret

0000000000023034 A_CyberAttack:
   23034:	de 03 ff 05 	add_i sp, sp, -64
   23038:	1e f3 00 88 	store_32 s24, 60(sp)
   2303c:	3e e3 00 88 	store_32 s25, 56(sp)
   23040:	fe d3 00 88 	store_32 ra, 52(sp)
   23044:	00 03 f0 c0 	move s24, s0
   23048:	78 e0 01 a8 	load_32 s3, 120(s24)
   2304c:	43 03 00 f2 	bz s3, 104 <A_CyberAttack+0x80>
   23050:	18 a0 01 a8 	load_32 s0, 104(s24)
   23054:	00 7c ff 01 	and s0, s0, -33
   23058:	18 a0 01 88 	store_32 s0, 104(s24)
   2305c:	18 30 00 a8 	load_32 s0, 12(s24)
   23060:	38 40 00 a8 	load_32 s1, 16(s24)
   23064:	43 30 00 a8 	load_32 s2, 12(s3)
   23068:	63 40 00 a8 	load_32 s3, 16(s3)
   2306c:	bf 58 00 f8 	call 90876 <R_PointToAngle2>
   23070:	18 80 00 88 	store_32 s0, 32(s24)
   23074:	38 e0 01 a8 	load_32 s1, 120(s24)
   23078:	01 a8 01 a0 	load_u8 s0, 106(s1)
   2307c:	00 10 00 01 	and s0, s0, 4
   23080:	40 01 00 f2 	bz s0, 40 <A_CyberAttack+0x74>
   23084:	9c e4 ff f9 	call -28048 <P_Random>
   23088:	20 03 f0 c0 	move s25, s0
   2308c:	9a e4 ff f9 	call -28056 <P_Random>
   23090:	19 00 60 c0 	sub_i s0, s25, s0
   23094:	38 80 00 a8 	load_32 s1, 32(s24)
   23098:	00 54 00 0b 	shl s0, s0, 21
   2309c:	00 80 50 c0 	add_i s0, s0, s1
   230a0:	18 80 00 88 	store_32 s0, 32(s24)
   230a4:	38 e0 01 a8 	load_32 s1, 120(s24)
   230a8:	40 84 00 0f 	move s2, 33
   230ac:	00 00 fc c0 	move s0, s24
   230b0:	59 41 00 f8 	call 66916 <P_SpawnMissile>
   230b4:	fe d3 00 a8 	load_32 ra, 52(sp)
   230b8:	3e e3 00 a8 	load_32 s25, 56(sp)
   230bc:	1e f3 00 a8 	load_32 s24, 60(sp)
   230c0:	de 03 01 05 	add_i sp, sp, 64
   230c4:	1f 00 00 f0 	ret

00000000000230c8 A_BruisAttack:
   230c8:	de 03 ff 05 	add_i sp, sp, -64
   230cc:	1e f3 00 88 	store_32 s24, 60(sp)
   230d0:	3e e3 00 88 	store_32 s25, 56(sp)
   230d4:	fe d3 00 88 	store_32 ra, 52(sp)
   230d8:	00 03 f0 c0 	move s24, s0
   230dc:	38 e3 01 a8 	load_32 s25, 120(s24)
   230e0:	d9 04 00 f2 	bz s25, 152 <A_BruisAttack+0xb0>
   230e4:	19 30 00 a8 	load_32 s0, 12(s25)
   230e8:	38 30 00 a8 	load_32 s1, 12(s24)
   230ec:	59 40 00 a8 	load_32 s2, 16(s25)
   230f0:	78 40 00 a8 	load_32 s3, 16(s24)
   230f4:	00 80 60 c0 	sub_i s0, s0, s1
   230f8:	22 80 61 c0 	sub_i s1, s2, s3
   230fc:	70 19 00 f8 	call 26048 <P_AproxDistance>
   23100:	39 70 01 a8 	load_32 s1, 92(s25)
   23104:	40 2c 00 4f 	movehi s2, 352
   23108:	21 00 01 a8 	load_32 s1, 64(s1)
   2310c:	21 00 51 c0 	add_i s1, s1, s2
   23110:	00 80 30 c1 	cmpge_i s0, s0, s1
   23114:	a0 02 00 f4 	bnz s0, 84 <A_BruisAttack+0xa0>
   23118:	38 e0 01 a8 	load_32 s1, 120(s24)
   2311c:	00 00 fc c0 	move s0, s24
   23120:	a5 32 00 f8 	call 51860 <P_CheckSight>
   23124:	20 02 00 f2 	bz s0, 68 <A_BruisAttack+0xa0>
   23128:	20 dc 00 0f 	move s1, 55
   2312c:	00 00 fc c0 	move s0, s24
   23130:	ad a4 00 f8 	call 168628 <S_StartSound>
   23134:	70 e4 ff f9 	call -28224 <P_Random>
   23138:	20 7c 00 09 	ashr s1, s0, 31
   2313c:	21 74 00 0a 	shr s1, s1, 29
   23140:	20 80 50 c0 	add_i s1, s0, s1
   23144:	21 e0 ff 01 	and s1, s1, -8
   23148:	00 80 60 c0 	sub_i s0, s0, s1
   2314c:	00 28 00 07 	mull_i s0, s0, 10
   23150:	60 28 00 05 	add_i s3, s0, 10
   23154:	18 e0 01 a8 	load_32 s0, 120(s24)
   23158:	20 00 fc c0 	move s1, s24
   2315c:	40 00 fc c0 	move s2, s24
   23160:	cc 0e 00 f8 	call 15152 <P_DamageMobj>
   23164:	05 00 00 f6 	b 20 <A_BruisAttack+0xb0>
   23168:	38 e0 01 a8 	load_32 s1, 120(s24)
   2316c:	40 40 00 0f 	move s2, 16
   23170:	00 00 fc c0 	move s0, s24
   23174:	28 41 00 f8 	call 66720 <P_SpawnMissile>
   23178:	fe d3 00 a8 	load_32 ra, 52(sp)
   2317c:	3e e3 00 a8 	load_32 s25, 56(sp)
   23180:	1e f3 00 a8 	load_32 s24, 60(sp)
   23184:	de 03 01 05 	add_i sp, sp, 64
   23188:	1f 00 00 f0 	ret

000000000002318c A_SkelMissile:
   2318c:	de 03 ff 05 	add_i sp, sp, -64
   23190:	1e f3 00 88 	store_32 s24, 60(sp)
   23194:	3e e3 00 88 	store_32 s25, 56(sp)
   23198:	fe d3 00 88 	store_32 ra, 52(sp)
   2319c:	00 03 f0 c0 	move s24, s0
   231a0:	78 e0 01 a8 	load_32 s3, 120(s24)
   231a4:	83 05 00 f2 	bz s3, 176 <A_SkelMissile+0xc8>
   231a8:	18 a0 01 a8 	load_32 s0, 104(s24)
   231ac:	00 7c ff 01 	and s0, s0, -33
   231b0:	18 a0 01 88 	store_32 s0, 104(s24)
   231b4:	18 30 00 a8 	load_32 s0, 12(s24)
   231b8:	38 40 00 a8 	load_32 s1, 16(s24)
   231bc:	43 30 00 a8 	load_32 s2, 12(s3)
   231c0:	63 40 00 a8 	load_32 s3, 16(s3)
   231c4:	69 58 00 f8 	call 90532 <R_PointToAngle2>
   231c8:	18 80 00 88 	store_32 s0, 32(s24)
   231cc:	38 e0 01 a8 	load_32 s1, 120(s24)
   231d0:	01 a8 01 a0 	load_u8 s0, 106(s1)
   231d4:	00 10 00 01 	and s0, s0, 4
   231d8:	40 01 00 f2 	bz s0, 40 <A_SkelMissile+0x74>
   231dc:	46 e4 ff f9 	call -28392 <P_Random>
   231e0:	20 03 f0 c0 	move s25, s0
   231e4:	44 e4 ff f9 	call -28400 <P_Random>
   231e8:	19 00 60 c0 	sub_i s0, s25, s0
   231ec:	38 80 00 a8 	load_32 s1, 32(s24)
   231f0:	00 54 00 0b 	shl s0, s0, 21
   231f4:	00 80 50 c0 	add_i s0, s0, s1
   231f8:	18 80 00 88 	store_32 s0, 32(s24)
   231fc:	38 e0 01 a8 	load_32 s1, 120(s24)
   23200:	18 50 00 a8 	load_32 s0, 20(s24)
   23204:	40 10 00 4f 	movehi s2, 128
   23208:	00 00 51 c0 	add_i s0, s0, s2
   2320c:	18 50 00 88 	store_32 s0, 20(s24)
   23210:	40 18 00 0f 	move s2, 6
   23214:	00 00 fc c0 	move s0, s24
   23218:	ff 40 00 f8 	call 66556 <P_SpawnMissile>
   2321c:	38 50 00 a8 	load_32 s1, 20(s24)
   23220:	40 f0 ff 4f 	movehi s2, 524160
   23224:	21 00 51 c0 	add_i s1, s1, s2
   23228:	38 50 00 88 	store_32 s1, 20(s24)
   2322c:	20 20 01 a8 	load_32 s1, 72(s0)
   23230:	40 30 00 a8 	load_32 s2, 12(s0)
   23234:	22 80 50 c0 	add_i s1, s2, s1
   23238:	20 30 00 88 	store_32 s1, 12(s0)
   2323c:	20 30 01 a8 	load_32 s1, 76(s0)
   23240:	40 40 00 a8 	load_32 s2, 16(s0)
   23244:	22 80 50 c0 	add_i s1, s2, s1
   23248:	20 40 00 88 	store_32 s1, 16(s0)
   2324c:	38 e0 01 a8 	load_32 s1, 120(s24)
   23250:	20 60 02 88 	store_32 s1, 152(s0)
   23254:	fe d3 00 a8 	load_32 ra, 52(sp)
   23258:	3e e3 00 a8 	load_32 s25, 56(sp)
   2325c:	1e f3 00 a8 	load_32 s24, 60(sp)
   23260:	de 03 01 05 	add_i sp, sp, 64
   23264:	1f 00 00 f0 	ret

0000000000023268 A_Tracer:
   23268:	de 03 ff 05 	add_i sp, sp, -64
   2326c:	1e f3 00 88 	store_32 s24, 60(sp)
   23270:	3e e3 00 88 	store_32 s25, 56(sp)
   23274:	5e d3 00 88 	store_32 s26, 52(sp)
   23278:	fe c3 00 88 	store_32 ra, 48(sp)
   2327c:	3a 04 00 4f 	movehi s1, 58
   23280:	21 b0 7f 00 	or s1, s1, 8172
   23284:	21 00 00 a0 	load_u8 s1, (s1)
   23288:	00 03 f0 c0 	move s24, s0
   2328c:	21 0c 00 01 	and s1, s1, 3
   23290:	41 00 00 f4 	bnz s1, 8 <A_Tracer+0x30>
   23294:	07 00 00 f6 	b 28 <A_Tracer+0x48>
   23298:	fe c3 00 a8 	load_32 ra, 48(sp)
   2329c:	5e d3 00 a8 	load_32 s26, 52(sp)
   232a0:	3e e3 00 a8 	load_32 s25, 56(sp)
   232a4:	1e f3 00 a8 	load_32 s24, 60(sp)
   232a8:	de 03 01 05 	add_i sp, sp, 64
   232ac:	1f 00 00 f0 	ret
   232b0:	18 30 00 a8 	load_32 s0, 12(s24)
   232b4:	38 40 00 a8 	load_32 s1, 16(s24)
   232b8:	58 50 00 a8 	load_32 s2, 20(s24)
   232bc:	37 40 00 f8 	call 65756 <P_SpawnPuff>
   232c0:	18 30 00 a8 	load_32 s0, 12(s24)
   232c4:	38 20 01 a8 	load_32 s1, 72(s24)
   232c8:	58 40 00 a8 	load_32 s2, 16(s24)
   232cc:	78 30 01 a8 	load_32 s3, 76(s24)
   232d0:	00 80 60 c0 	sub_i s0, s0, s1
   232d4:	22 80 61 c0 	sub_i s1, s2, s3
   232d8:	58 50 00 a8 	load_32 s2, 20(s24)
   232dc:	60 1c 00 0f 	move s3, 7
   232e0:	fa 3d 00 f8 	call 63464 <P_SpawnMobj>
   232e4:	20 03 f0 c0 	move s25, s0
   232e8:	08 00 00 4f 	movehi s0, 8
   232ec:	19 40 01 88 	store_32 s0, 80(s25)
   232f0:	01 e4 ff f9 	call -28668 <P_Random>
   232f4:	39 80 01 a8 	load_32 s1, 96(s25)
   232f8:	00 0c 00 01 	and s0, s0, 3
   232fc:	01 00 60 c0 	sub_i s0, s1, s0
   23300:	20 04 00 12 	cmpgt_i s1, s0, 1
   23304:	41 00 00 f4 	bnz s1, 8 <A_Tracer+0xa4>
   23308:	00 04 00 0f 	move s0, 1
   2330c:	19 80 01 88 	store_32 s0, 96(s25)
   23310:	38 63 02 a8 	load_32 s25, 152(s24)
   23314:	39 fc ff f3 	bz s25, -124 <A_Tracer+0x30>
   23318:	19 b0 01 a8 	load_32 s0, 108(s25)
   2331c:	00 04 00 14 	cmplt_i s0, s0, 1
   23320:	c0 fb ff f5 	bnz s0, -136 <A_Tracer+0x30>
   23324:	18 30 00 a8 	load_32 s0, 12(s24)
   23328:	38 40 00 a8 	load_32 s1, 16(s24)
   2332c:	59 30 00 a8 	load_32 s2, 12(s25)
   23330:	79 40 00 a8 	load_32 s3, 16(s25)
   23334:	0d 58 00 f8 	call 90164 <R_PointToAngle2>
   23338:	38 80 00 a8 	load_32 s1, 32(s24)
   2333c:	40 80 00 c1 	cmpeq_i s2, s0, s1
   23340:	82 02 00 f4 	bnz s2, 80 <A_Tracer+0x128>
   23344:	73 04 00 4f 	movehi s3, 51
   23348:	40 00 80 4f 	movehi s2, 262144
   2334c:	80 80 60 c0 	sub_i s4, s0, s1
   23350:	63 a0 7b 00 	or s3, s3, 7912
   23354:	a2 04 00 00 	or s5, s2, 1
   23358:	84 80 82 c1 	cmplt_u s4, s4, s5
   2335c:	63 00 00 a8 	load_32 s3, (s3)
   23360:	c4 00 00 f4 	bnz s4, 24 <A_Tracer+0x110>
   23364:	21 80 61 c0 	sub_i s1, s1, s3
   23368:	40 80 60 c0 	sub_i s2, s0, s1
   2336c:	42 fc ff 12 	cmpgt_i s2, s2, -1
   23370:	e2 00 00 f4 	bnz s2, 28 <A_Tracer+0x124>
   23374:	05 00 00 f6 	b 20 <A_Tracer+0x120>
   23378:	23 80 50 c0 	add_i s1, s3, s1
   2337c:	60 80 60 c0 	sub_i s3, s0, s1
   23380:	43 00 61 c1 	cmpgt_u s2, s3, s2
   23384:	42 00 00 f4 	bnz s2, 8 <A_Tracer+0x124>
   23388:	00 80 f0 c0 	move s0, s1
   2338c:	18 80 00 88 	store_32 s0, 32(s24)
   23390:	34 04 00 4f 	movehi s1, 52
   23394:	58 70 01 a8 	load_32 s2, 92(s24)
   23398:	83 00 00 4f 	movehi s4, 3
   2339c:	60 44 00 0a 	shr s3, s0, 17
   233a0:	21 40 19 00 	or s1, s1, 1616
   233a4:	02 f0 00 a8 	load_32 s0, 60(s2)
   233a8:	44 f0 7f 00 	or s2, s4, 8188
   233ac:	43 03 11 c0 	and s26, s3, s2
   233b0:	21 00 00 a8 	load_32 s1, (s1)
   233b4:	21 00 5d c0 	add_i s1, s1, s26
   233b8:	21 00 00 a8 	load_32 s1, (s1)
   233bc:	de e2 ff f9 	call -29832 <FixedMul>
   233c0:	2d 04 00 4f 	movehi s1, 45
   233c4:	18 20 01 88 	store_32 s0, 72(s24)
   233c8:	01 90 41 00 	or s0, s1, 4196
   233cc:	38 70 01 a8 	load_32 s1, 92(s24)
   233d0:	40 00 5d c0 	add_i s2, s0, s26
   233d4:	01 f0 00 a8 	load_32 s0, 60(s1)
   233d8:	22 00 00 a8 	load_32 s1, (s2)
   233dc:	d6 e2 ff f9 	call -29864 <FixedMul>
   233e0:	18 30 01 88 	store_32 s0, 76(s24)
   233e4:	19 30 00 a8 	load_32 s0, 12(s25)
   233e8:	38 30 00 a8 	load_32 s1, 12(s24)
   233ec:	59 40 00 a8 	load_32 s2, 16(s25)
   233f0:	78 40 00 a8 	load_32 s3, 16(s24)
   233f4:	00 80 60 c0 	sub_i s0, s0, s1
   233f8:	22 80 61 c0 	sub_i s1, s2, s3
   233fc:	b0 18 00 f8 	call 25280 <P_AproxDistance>
   23400:	38 70 01 a8 	load_32 s1, 92(s24)
   23404:	21 f0 00 a8 	load_32 s1, 60(s1)
   23408:	94 c5 00 f8 	call 202320 <__divsi3>
   2340c:	20 00 f0 c0 	move s1, s0
   23410:	01 04 00 12 	cmpgt_i s0, s1, 1
   23414:	40 00 00 f4 	bnz s0, 8 <A_Tracer+0x1b4>
   23418:	20 04 00 0f 	move s1, 1
   2341c:	19 50 00 a8 	load_32 s0, 20(s25)
   23420:	40 28 00 4f 	movehi s2, 320
   23424:	78 50 00 a8 	load_32 s3, 20(s24)
   23428:	00 00 51 c0 	add_i s0, s0, s2
   2342c:	00 80 61 c0 	sub_i s0, s0, s3
   23430:	8a c5 00 f8 	call 202280 <__divsi3>
   23434:	38 40 01 a8 	load_32 s1, 80(s24)
   23438:	00 80 40 c1 	cmplt_i s0, s0, s1
   2343c:	60 00 00 f4 	bnz s0, 12 <A_Tracer+0x1e0>
   23440:	01 00 00 4f 	movehi s0, 1
   23444:	02 00 00 f6 	b 8 <A_Tracer+0x1e4>
   23448:	00 00 80 0f 	move s0, -8192
   2344c:	00 80 50 c0 	add_i s0, s0, s1
   23450:	18 40 01 88 	store_32 s0, 80(s24)
   23454:	91 ff ff f7 	b -444 <A_Tracer+0x30>

0000000000023458 A_SkelWhoosh:
   23458:	de 03 ff 05 	add_i sp, sp, -64
   2345c:	1e f3 00 88 	store_32 s24, 60(sp)
   23460:	3e e3 00 88 	store_32 s25, 56(sp)
   23464:	fe d3 00 88 	store_32 ra, 52(sp)
   23468:	00 03 f0 c0 	move s24, s0
   2346c:	78 e0 01 a8 	load_32 s3, 120(s24)
   23470:	23 03 00 f2 	bz s3, 100 <A_SkelWhoosh+0x7c>
   23474:	18 a0 01 a8 	load_32 s0, 104(s24)
   23478:	00 7c ff 01 	and s0, s0, -33
   2347c:	18 a0 01 88 	store_32 s0, 104(s24)
   23480:	18 30 00 a8 	load_32 s0, 12(s24)
   23484:	38 40 00 a8 	load_32 s1, 16(s24)
   23488:	43 30 00 a8 	load_32 s2, 12(s3)
   2348c:	63 40 00 a8 	load_32 s3, 16(s3)
   23490:	b6 57 00 f8 	call 89816 <R_PointToAngle2>
   23494:	18 80 00 88 	store_32 s0, 32(s24)
   23498:	18 e0 01 a8 	load_32 s0, 120(s24)
   2349c:	00 a8 01 a0 	load_u8 s0, 106(s0)
   234a0:	00 10 00 01 	and s0, s0, 4
   234a4:	20 01 00 f2 	bz s0, 36 <A_SkelWhoosh+0x70>
   234a8:	93 e3 ff f9 	call -29108 <P_Random>
   234ac:	20 03 f0 c0 	move s25, s0
   234b0:	91 e3 ff f9 	call -29116 <P_Random>
   234b4:	19 00 60 c0 	sub_i s0, s25, s0
   234b8:	38 80 00 a8 	load_32 s1, 32(s24)
   234bc:	00 54 00 0b 	shl s0, s0, 21
   234c0:	00 80 50 c0 	add_i s0, s0, s1
   234c4:	18 80 00 88 	store_32 s0, 32(s24)
   234c8:	20 e0 00 0f 	move s1, 56
   234cc:	00 00 fc c0 	move s0, s24
   234d0:	c5 a3 00 f8 	call 167700 <S_StartSound>
   234d4:	fe d3 00 a8 	load_32 ra, 52(sp)
   234d8:	3e e3 00 a8 	load_32 s25, 56(sp)
   234dc:	1e f3 00 a8 	load_32 s24, 60(sp)
   234e0:	de 03 01 05 	add_i sp, sp, 64
   234e4:	1f 00 00 f0 	ret

00000000000234e8 A_SkelFist:
   234e8:	de 03 ff 05 	add_i sp, sp, -64
   234ec:	1e f3 00 88 	store_32 s24, 60(sp)
   234f0:	3e e3 00 88 	store_32 s25, 56(sp)
   234f4:	fe d3 00 88 	store_32 ra, 52(sp)
   234f8:	00 03 f0 c0 	move s24, s0
   234fc:	78 e0 01 a8 	load_32 s3, 120(s24)
   23500:	83 07 00 f2 	bz s3, 240 <A_SkelFist+0x108>
   23504:	18 a0 01 a8 	load_32 s0, 104(s24)
   23508:	00 7c ff 01 	and s0, s0, -33
   2350c:	18 a0 01 88 	store_32 s0, 104(s24)
   23510:	18 30 00 a8 	load_32 s0, 12(s24)
   23514:	38 40 00 a8 	load_32 s1, 16(s24)
   23518:	43 30 00 a8 	load_32 s2, 12(s3)
   2351c:	63 40 00 a8 	load_32 s3, 16(s3)
   23520:	92 57 00 f8 	call 89672 <R_PointToAngle2>
   23524:	18 80 00 88 	store_32 s0, 32(s24)
   23528:	38 e3 01 a8 	load_32 s25, 120(s24)
   2352c:	19 a8 01 a0 	load_u8 s0, 106(s25)
   23530:	00 10 00 01 	and s0, s0, 4
   23534:	40 01 00 f2 	bz s0, 40 <A_SkelFist+0x74>
   23538:	6f e3 ff f9 	call -29252 <P_Random>
   2353c:	20 03 f0 c0 	move s25, s0
   23540:	6d e3 ff f9 	call -29260 <P_Random>
   23544:	19 00 60 c0 	sub_i s0, s25, s0
   23548:	38 80 00 a8 	load_32 s1, 32(s24)
   2354c:	00 54 00 0b 	shl s0, s0, 21
   23550:	00 80 50 c0 	add_i s0, s0, s1
   23554:	18 80 00 88 	store_32 s0, 32(s24)
   23558:	38 e3 01 a8 	load_32 s25, 120(s24)
   2355c:	b9 04 00 f2 	bz s25, 148 <A_SkelFist+0x108>
   23560:	19 30 00 a8 	load_32 s0, 12(s25)
   23564:	38 30 00 a8 	load_32 s1, 12(s24)
   23568:	59 40 00 a8 	load_32 s2, 16(s25)
   2356c:	78 40 00 a8 	load_32 s3, 16(s24)
   23570:	00 80 60 c0 	sub_i s0, s0, s1
   23574:	22 80 61 c0 	sub_i s1, s2, s3
   23578:	51 18 00 f8 	call 24900 <P_AproxDistance>
   2357c:	39 70 01 a8 	load_32 s1, 92(s25)
   23580:	40 2c 00 4f 	movehi s2, 352
   23584:	21 00 01 a8 	load_32 s1, 64(s1)
   23588:	21 00 51 c0 	add_i s1, s1, s2
   2358c:	00 80 30 c1 	cmpge_i s0, s0, s1
   23590:	00 03 00 f4 	bnz s0, 96 <A_SkelFist+0x108>
   23594:	38 e0 01 a8 	load_32 s1, 120(s24)
   23598:	00 00 fc c0 	move s0, s24
   2359c:	86 31 00 f8 	call 50712 <P_CheckSight>
   235a0:	80 02 00 f2 	bz s0, 80 <A_SkelFist+0x108>
   235a4:	54 e3 ff f9 	call -29360 <P_Random>
   235a8:	33 64 66 4f 	movehi s1, 209715
   235ac:	21 9c 19 00 	or s1, s1, 1639
   235b0:	20 80 f0 c1 	mulh_i s1, s0, s1
   235b4:	41 08 00 09 	ashr s2, s1, 2
   235b8:	21 7c 00 0a 	shr s1, s1, 31
   235bc:	22 80 50 c0 	add_i s1, s2, s1
   235c0:	21 28 00 07 	mull_i s1, s1, 10
   235c4:	00 80 60 c0 	sub_i s0, s0, s1
   235c8:	20 d4 00 0f 	move s1, 53
   235cc:	00 18 00 07 	mull_i s0, s0, 6
   235d0:	20 1b 00 05 	add_i s25, s0, 6
   235d4:	00 00 fc c0 	move s0, s24
   235d8:	83 a3 00 f8 	call 167436 <S_StartSound>
   235dc:	18 e0 01 a8 	load_32 s0, 120(s24)
   235e0:	20 00 fc c0 	move s1, s24
   235e4:	40 00 fc c0 	move s2, s24
   235e8:	60 80 fc c0 	move s3, s25
   235ec:	a9 0d 00 f8 	call 13988 <P_DamageMobj>
   235f0:	fe d3 00 a8 	load_32 ra, 52(sp)
   235f4:	3e e3 00 a8 	load_32 s25, 56(sp)
   235f8:	1e f3 00 a8 	load_32 s24, 60(sp)
   235fc:	de 03 01 05 	add_i sp, sp, 64
   23600:	1f 00 00 f0 	ret

0000000000023604 PIT_VileCheck:
   23604:	de 03 ff 05 	add_i sp, sp, -64
   23608:	1e f3 00 88 	store_32 s24, 60(sp)
   2360c:	fe e3 00 88 	store_32 ra, 56(sp)
   23610:	60 00 f0 c0 	move s3, s0
   23614:	03 a8 01 a0 	load_u8 s0, 106(s3)
   23618:	20 40 00 01 	and s1, s0, 16
   2361c:	00 04 00 0f 	move s0, 1
   23620:	a1 00 00 f2 	bz s1, 20 <PIT_VileCheck+0x30>
   23624:	23 80 01 a8 	load_32 s1, 96(s3)
   23628:	21 fc ff 11 	cmpne_i s1, s1, -1
   2362c:	41 00 00 f4 	bnz s1, 8 <PIT_VileCheck+0x30>
   23630:	05 00 00 f6 	b 20 <PIT_VileCheck+0x40>
   23634:	fe e3 00 a8 	load_32 ra, 56(sp)
   23638:	1e f3 00 a8 	load_32 s24, 60(sp)
   2363c:	de 03 01 05 	add_i sp, sp, 64
   23640:	1f 00 00 f0 	ret
   23644:	23 70 01 a8 	load_32 s1, 92(s3)
   23648:	41 60 01 a8 	load_32 s2, 88(s1)
   2364c:	42 ff ff f3 	bz s2, -24 <PIT_VileCheck+0x30>
   23650:	58 04 00 4f 	movehi s2, 56
   23654:	a1 00 01 a8 	load_32 s5, 64(s1)
   23658:	9b 04 00 4f 	movehi s4, 59
   2365c:	42 30 03 00 	or s2, s2, 204
   23660:	84 c0 2a 00 	or s4, s4, 2736
   23664:	42 50 05 a8 	load_32 s2, 340(s2)
   23668:	23 30 00 a8 	load_32 s1, 12(s3)
   2366c:	84 00 00 a8 	load_32 s4, (s4)
   23670:	81 00 62 c0 	sub_i s4, s1, s4
   23674:	c4 7c 00 09 	ashr s6, s4, 31
   23678:	84 00 53 c0 	add_i s4, s4, s6
   2367c:	c4 00 33 c0 	xor s6, s4, s6
   23680:	82 80 52 c0 	add_i s4, s2, s5
   23684:	46 00 22 c1 	cmpgt_i s2, s6, s4
   23688:	62 fd ff f5 	bnz s2, -84 <PIT_VileCheck+0x30>
   2368c:	5b 04 00 4f 	movehi s2, 59
   23690:	a2 d0 2a 00 	or s5, s2, 2740
   23694:	43 40 00 a8 	load_32 s2, 16(s3)
   23698:	a5 00 00 a8 	load_32 s5, (s5)
   2369c:	a2 80 62 c0 	sub_i s5, s2, s5
   236a0:	c5 7c 00 09 	ashr s6, s5, 31
   236a4:	a5 00 53 c0 	add_i s5, s5, s6
   236a8:	a5 00 33 c0 	xor s5, s5, s6
   236ac:	85 00 22 c1 	cmpgt_i s4, s5, s4
   236b0:	24 fc ff f5 	bnz s4, -124 <PIT_VileCheck+0x30>
   236b4:	1b 04 00 4f 	movehi s0, 59
   236b8:	00 83 2a 00 	or s24, s0, 2720
   236bc:	00 00 00 0f 	move s0, 0
   236c0:	78 00 00 88 	store_32 s3, (s24)
   236c4:	03 30 01 88 	store_32 s0, 76(s3)
   236c8:	03 20 01 88 	store_32 s0, 72(s3)
   236cc:	03 10 01 a8 	load_32 s0, 68(s3)
   236d0:	00 08 00 0b 	shl s0, s0, 2
   236d4:	03 10 01 88 	store_32 s0, 68(s3)
   236d8:	00 80 f1 c0 	move s0, s3
   236dc:	e1 11 00 f8 	call 18308 <P_CheckPosition>
   236e0:	38 00 00 a8 	load_32 s1, (s24)
   236e4:	00 00 00 10 	cmpeq_i s0, s0, 0
   236e8:	00 04 00 01 	and s0, s0, 1
   236ec:	41 10 01 a8 	load_32 s2, 68(s1)
   236f0:	42 08 00 09 	ashr s2, s2, 2
   236f4:	41 10 01 88 	store_32 s2, 68(s1)
   236f8:	fe e3 00 a8 	load_32 ra, 56(sp)
   236fc:	1e f3 00 a8 	load_32 s24, 60(sp)
   23700:	de 03 01 05 	add_i sp, sp, 64
   23704:	1f 00 00 f0 	ret

0000000000023708 A_VileChase:
   23708:	de 03 ff 05 	add_i sp, sp, -64
   2370c:	1e f3 00 88 	store_32 s24, 60(sp)
   23710:	3e e3 00 88 	store_32 s25, 56(sp)
   23714:	5e d3 00 88 	store_32 s26, 52(sp)
   23718:	7e c3 00 88 	store_32 s27, 48(sp)
   2371c:	fe b3 00 88 	store_32 ra, 44(sp)
   23720:	c0 00 f0 c0 	move s6, s0
   23724:	06 c0 01 a8 	load_32 s0, 112(s6)
   23728:	20 20 00 10 	cmpeq_i s1, s0, 8
   2372c:	c1 08 00 f4 	bnz s1, 280 <A_VileChase+0x13c>
   23730:	33 04 00 4f 	movehi s1, 51
   23734:	46 30 00 a8 	load_32 s2, 12(s6)
   23738:	66 70 01 a8 	load_32 s3, 92(s6)
   2373c:	00 08 00 0b 	shl s0, s0, 2
   23740:	93 04 00 4f 	movehi s4, 51
   23744:	21 a0 7a 00 	or s1, s1, 7848
   23748:	bb 04 00 4f 	movehi s5, 59
   2374c:	63 f0 00 a8 	load_32 s3, 60(s3)
   23750:	84 20 7b 00 	or s4, s4, 7880
   23754:	21 00 50 c0 	add_i s1, s1, s0
   23758:	a5 c0 2a 00 	or s5, s5, 2736
   2375c:	04 00 50 c0 	add_i s0, s4, s0
   23760:	21 00 00 a8 	load_32 s1, (s1)
   23764:	9b 04 00 4f 	movehi s4, 59
   23768:	21 80 71 c0 	mull_i s1, s1, s3
   2376c:	21 00 51 c0 	add_i s1, s1, s2
   23770:	25 00 00 88 	store_32 s1, (s5)
   23774:	46 40 00 a8 	load_32 s2, 16(s6)
   23778:	bb 04 00 4f 	movehi s5, 59
   2377c:	00 00 00 a8 	load_32 s0, (s0)
   23780:	00 80 71 c0 	mull_i s0, s0, s3
   23784:	64 d0 2a 00 	or s3, s4, 2740
   23788:	85 70 48 00 	or s4, s5, 4636
   2378c:	00 00 51 c0 	add_i s0, s0, s2
   23790:	03 00 00 88 	store_32 s0, (s3)
   23794:	bb 04 00 4f 	movehi s5, 59
   23798:	44 00 00 a8 	load_32 s2, (s4)
   2379c:	9b 04 00 4f 	movehi s4, 59
   237a0:	a5 b0 2a 00 	or s5, s5, 2732
   237a4:	84 80 48 00 	or s4, s4, 4640
   237a8:	61 00 61 c0 	sub_i s3, s1, s2
   237ac:	20 c0 ff 4f 	movehi s1, 523776
   237b0:	43 80 50 c0 	add_i s2, s3, s1
   237b4:	22 5f 00 09 	ashr s25, s2, 23
   237b8:	40 40 00 4f 	movehi s2, 512
   237bc:	63 00 51 c0 	add_i s3, s3, s2
   237c0:	e3 5c 00 09 	ashr s7, s3, 23
   237c4:	64 00 00 a8 	load_32 s3, (s4)
   237c8:	99 80 23 c1 	cmpgt_i s4, s25, s7
   237cc:	c5 00 00 88 	store_32 s6, (s5)
   237d0:	a4 03 00 f4 	bnz s4, 116 <A_VileChase+0x13c>
   237d4:	00 80 61 c0 	sub_i s0, s0, s3
   237d8:	20 80 50 c0 	add_i s1, s0, s1
   237dc:	00 00 51 c0 	add_i s0, s0, s2
   237e0:	61 5f 00 09 	ashr s27, s1, 23
   237e4:	00 5f 00 09 	ashr s24, s0, 23
   237e8:	1b 00 2c c1 	cmpgt_i s0, s27, s24
   237ec:	c0 02 00 f4 	bnz s0, 88 <A_VileChase+0x13c>
   237f0:	11 00 00 4f 	movehi s0, 17
   237f4:	de a0 00 88 	store_32 s6, 40(sp)
   237f8:	fe 90 00 88 	store_32 s7, 36(sp)
   237fc:	7e 83 00 88 	store_32 s27, 32(sp)
   23800:	40 13 58 00 	or s26, s0, 5636
   23804:	00 80 fc c0 	move s0, s25
   23808:	20 80 fd c0 	move s1, s27
   2380c:	40 00 fd c0 	move s2, s26
   23810:	11 1a 00 f8 	call 26692 <P_BlockThingsIterator>
   23814:	40 00 00 f4 	bnz s0, 8 <A_VileChase+0x114>
   23818:	0e 00 00 f6 	b 56 <A_VileChase+0x148>
   2381c:	1b 00 3c c1 	cmpge_i s0, s27, s24
   23820:	7b 07 00 05 	add_i s27, s27, 1
   23824:	40 00 00 f4 	bnz s0, 8 <A_VileChase+0x124>
   23828:	f7 ff ff f7 	b -36 <A_VileChase+0xfc>
   2382c:	fe 90 00 a8 	load_32 s7, 36(sp)
   23830:	de a0 00 a8 	load_32 s6, 40(sp)
   23834:	7e 83 00 a8 	load_32 s27, 32(sp)
   23838:	19 80 43 c1 	cmplt_i s0, s25, s7
   2383c:	39 07 00 05 	add_i s25, s25, 1
   23840:	20 fe ff f5 	bnz s0, -60 <A_VileChase+0xfc>
   23844:	00 00 f3 c0 	move s0, s6
   23848:	6f fa ff f9 	call -5700 <A_Chase>
   2384c:	34 00 00 f6 	b 208 <A_VileChase+0x214>
   23850:	1b 04 00 4f 	movehi s0, 59
   23854:	5e a0 00 a8 	load_32 s2, 40(sp)
   23858:	40 83 2a 00 	or s26, s0, 2720
   2385c:	62 e3 01 a8 	load_32 s27, 120(s2)
   23860:	7a 00 00 a8 	load_32 s3, (s26)
   23864:	62 e0 01 88 	store_32 s3, 120(s2)
   23868:	03 03 00 f2 	bz s3, 96 <A_VileChase+0x1c0>
   2386c:	02 a0 01 a8 	load_32 s0, 104(s2)
   23870:	00 7c ff 01 	and s0, s0, -33
   23874:	02 a0 01 88 	store_32 s0, 104(s2)
   23878:	02 30 00 a8 	load_32 s0, 12(s2)
   2387c:	22 40 00 a8 	load_32 s1, 16(s2)
   23880:	43 30 00 a8 	load_32 s2, 12(s3)
   23884:	63 40 00 a8 	load_32 s3, 16(s3)
   23888:	b8 56 00 f8 	call 88800 <R_PointToAngle2>
   2388c:	5e a0 00 a8 	load_32 s2, 40(sp)
   23890:	02 80 00 88 	store_32 s0, 32(s2)
   23894:	02 e0 01 a8 	load_32 s0, 120(s2)
   23898:	00 a8 01 a0 	load_u8 s0, 106(s0)
   2389c:	00 10 00 01 	and s0, s0, 4
   238a0:	40 01 00 f2 	bz s0, 40 <A_VileChase+0x1c0>
   238a4:	94 e2 ff f9 	call -30128 <P_Random>
   238a8:	20 03 f0 c0 	move s25, s0
   238ac:	92 e2 ff f9 	call -30136 <P_Random>
   238b0:	5e a0 00 a8 	load_32 s2, 40(sp)
   238b4:	19 00 60 c0 	sub_i s0, s25, s0
   238b8:	00 54 00 0b 	shl s0, s0, 21
   238bc:	22 80 00 a8 	load_32 s1, 32(s2)
   238c0:	00 80 50 c0 	add_i s0, s0, s1
   238c4:	02 80 00 88 	store_32 s0, 32(s2)
   238c8:	62 e3 01 88 	store_32 s27, 120(s2)
   238cc:	20 28 04 0f 	move s1, 266
   238d0:	00 00 f1 c0 	move s0, s2
   238d4:	51 39 00 f8 	call 58692 <P_SetMobjState>
   238d8:	1a 00 00 a8 	load_32 s0, (s26)
   238dc:	20 7c 00 0f 	move s1, 31
   238e0:	c1 a2 00 f8 	call 166660 <S_StartSound>
   238e4:	1a 00 00 a8 	load_32 s0, (s26)
   238e8:	00 73 01 a8 	load_32 s24, 92(s0)
   238ec:	38 60 01 a8 	load_32 s1, 88(s24)
   238f0:	4a 39 00 f8 	call 58664 <P_SetMobjState>
   238f4:	1a 00 00 a8 	load_32 s0, (s26)
   238f8:	20 10 01 a8 	load_32 s1, 68(s0)
   238fc:	21 08 00 0b 	shl s1, s1, 2
   23900:	20 10 01 88 	store_32 s1, 68(s0)
   23904:	38 50 01 a8 	load_32 s1, 84(s24)
   23908:	20 a0 01 88 	store_32 s1, 104(s0)
   2390c:	38 20 00 a8 	load_32 s1, 8(s24)
   23910:	20 b0 01 88 	store_32 s1, 108(s0)
   23914:	20 00 00 0f 	move s1, 0
   23918:	20 e0 01 88 	store_32 s1, 120(s0)
   2391c:	fe b3 00 a8 	load_32 ra, 44(sp)
   23920:	7e c3 00 a8 	load_32 s27, 48(sp)
   23924:	5e d3 00 a8 	load_32 s26, 52(sp)
   23928:	3e e3 00 a8 	load_32 s25, 56(sp)
   2392c:	1e f3 00 a8 	load_32 s24, 60(sp)
   23930:	de 03 01 05 	add_i sp, sp, 64
   23934:	1f 00 00 f0 	ret

0000000000023938 A_VileStart:
   23938:	de 03 ff 05 	add_i sp, sp, -64
   2393c:	fe f3 00 88 	store_32 ra, 60(sp)
   23940:	20 d8 00 0f 	move s1, 54
   23944:	a8 a2 00 f8 	call 166560 <S_StartSound>
   23948:	fe f3 00 a8 	load_32 ra, 60(sp)
   2394c:	de 03 01 05 	add_i sp, sp, 64
   23950:	1f 00 00 f0 	ret

0000000000023954 A_StartFire:
   23954:	de 03 ff 05 	add_i sp, sp, -64
   23958:	1e f3 00 88 	store_32 s24, 60(sp)
   2395c:	fe e3 00 88 	store_32 ra, 56(sp)
   23960:	20 70 01 0f 	move s1, 92
   23964:	00 03 f0 c0 	move s24, s0
   23968:	9f a2 00 f8 	call 166524 <S_StartSound>
   2396c:	00 00 fc c0 	move s0, s24
   23970:	05 00 00 f8 	call 20 <A_Fire>
   23974:	fe e3 00 a8 	load_32 ra, 56(sp)
   23978:	1e f3 00 a8 	load_32 s24, 60(sp)
   2397c:	de 03 01 05 	add_i sp, sp, 64
   23980:	1f 00 00 f0 	ret

0000000000023984 A_Fire:
   23984:	de 03 ff 05 	add_i sp, sp, -64
   23988:	1e f3 00 88 	store_32 s24, 60(sp)
   2398c:	3e e3 00 88 	store_32 s25, 56(sp)
   23990:	5e d3 00 88 	store_32 s26, 52(sp)
   23994:	7e c3 00 88 	store_32 s27, 48(sp)
   23998:	fe b3 00 88 	store_32 ra, 44(sp)
   2399c:	00 03 f0 c0 	move s24, s0
   239a0:	38 63 02 a8 	load_32 s25, 152(s24)
   239a4:	d9 04 00 f2 	bz s25, 152 <A_Fire+0xb8>
   239a8:	18 e0 01 a8 	load_32 s0, 120(s24)
   239ac:	20 80 fc c0 	move s1, s25
   239b0:	81 30 00 f8 	call 49668 <P_CheckSight>
   239b4:	40 04 00 f2 	bz s0, 136 <A_Fire+0xb8>
   239b8:	19 80 00 a8 	load_32 s0, 32(s25)
   239bc:	23 00 00 4f 	movehi s1, 3
   239c0:	21 f0 7f 00 	or s1, s1, 8188
   239c4:	00 44 00 0a 	shr s0, s0, 17
   239c8:	60 83 10 c0 	and s27, s0, s1
   239cc:	00 00 fc c0 	move s0, s24
   239d0:	ca 18 00 f8 	call 25384 <P_UnsetThingPosition>
   239d4:	14 04 00 4f 	movehi s0, 52
   239d8:	39 30 00 a8 	load_32 s1, 12(s25)
   239dc:	3e a0 00 88 	store_32 s1, 40(sp)
   239e0:	40 1b 00 4f 	movehi s26, 192
   239e4:	00 40 19 00 	or s0, s0, 1616
   239e8:	00 00 00 a8 	load_32 s0, (s0)
   239ec:	00 80 5d c0 	add_i s0, s0, s27
   239f0:	20 00 00 a8 	load_32 s1, (s0)
   239f4:	00 00 fd c0 	move s0, s26
   239f8:	4f e1 ff f9 	call -31428 <FixedMul>
   239fc:	2d 04 00 4f 	movehi s1, 45
   23a00:	5e a0 00 a8 	load_32 s2, 40(sp)
   23a04:	21 90 41 00 	or s1, s1, 4196
   23a08:	00 00 51 c0 	add_i s0, s0, s2
   23a0c:	18 30 00 88 	store_32 s0, 12(s24)
   23a10:	21 80 5d c0 	add_i s1, s1, s27
   23a14:	79 43 00 a8 	load_32 s27, 16(s25)
   23a18:	21 00 00 a8 	load_32 s1, (s1)
   23a1c:	00 00 fd c0 	move s0, s26
   23a20:	45 e1 ff f9 	call -31468 <FixedMul>
   23a24:	00 80 5d c0 	add_i s0, s0, s27
   23a28:	18 40 00 88 	store_32 s0, 16(s24)
   23a2c:	19 50 00 a8 	load_32 s0, 20(s25)
   23a30:	18 50 00 88 	store_32 s0, 20(s24)
   23a34:	00 00 fc c0 	move s0, s24
   23a38:	ec 18 00 f8 	call 25520 <P_SetThingPosition>
   23a3c:	fe b3 00 a8 	load_32 ra, 44(sp)
   23a40:	7e c3 00 a8 	load_32 s27, 48(sp)
   23a44:	5e d3 00 a8 	load_32 s26, 52(sp)
   23a48:	3e e3 00 a8 	load_32 s25, 56(sp)
   23a4c:	1e f3 00 a8 	load_32 s24, 60(sp)
   23a50:	de 03 01 05 	add_i sp, sp, 64
   23a54:	1f 00 00 f0 	ret

0000000000023a58 A_FireCrackle:
   23a58:	de 03 ff 05 	add_i sp, sp, -64
   23a5c:	1e f3 00 88 	store_32 s24, 60(sp)
   23a60:	fe e3 00 88 	store_32 ra, 56(sp)
   23a64:	20 6c 01 0f 	move s1, 91
   23a68:	00 03 f0 c0 	move s24, s0
   23a6c:	5e a2 00 f8 	call 166264 <S_StartSound>
   23a70:	00 00 fc c0 	move s0, s24
   23a74:	c4 ff ff f9 	call -240 <A_Fire>
   23a78:	fe e3 00 a8 	load_32 ra, 56(sp)
   23a7c:	1e f3 00 a8 	load_32 s24, 60(sp)
   23a80:	de 03 01 05 	add_i sp, sp, 64
   23a84:	1f 00 00 f0 	ret

0000000000023a88 A_VileTarget:
   23a88:	de 03 ff 05 	add_i sp, sp, -64
   23a8c:	1e f3 00 88 	store_32 s24, 60(sp)
   23a90:	3e e3 00 88 	store_32 s25, 56(sp)
   23a94:	fe d3 00 88 	store_32 ra, 52(sp)
   23a98:	00 03 f0 c0 	move s24, s0
   23a9c:	78 e0 01 a8 	load_32 s3, 120(s24)
   23aa0:	23 04 00 f2 	bz s3, 132 <A_VileTarget+0x9c>
   23aa4:	18 a0 01 a8 	load_32 s0, 104(s24)
   23aa8:	00 7c ff 01 	and s0, s0, -33
   23aac:	18 a0 01 88 	store_32 s0, 104(s24)
   23ab0:	18 30 00 a8 	load_32 s0, 12(s24)
   23ab4:	38 40 00 a8 	load_32 s1, 16(s24)
   23ab8:	43 30 00 a8 	load_32 s2, 12(s3)
   23abc:	63 40 00 a8 	load_32 s3, 16(s3)
   23ac0:	2a 56 00 f8 	call 88232 <R_PointToAngle2>
   23ac4:	18 80 00 88 	store_32 s0, 32(s24)
   23ac8:	38 e0 01 a8 	load_32 s1, 120(s24)
   23acc:	01 a8 01 a0 	load_u8 s0, 106(s1)
   23ad0:	00 10 00 01 	and s0, s0, 4
   23ad4:	40 01 00 f2 	bz s0, 40 <A_VileTarget+0x74>
   23ad8:	07 e2 ff f9 	call -30692 <P_Random>
   23adc:	20 03 f0 c0 	move s25, s0
   23ae0:	05 e2 ff f9 	call -30700 <P_Random>
   23ae4:	19 00 60 c0 	sub_i s0, s25, s0
   23ae8:	38 80 00 a8 	load_32 s1, 32(s24)
   23aec:	00 54 00 0b 	shl s0, s0, 21
   23af0:	00 80 50 c0 	add_i s0, s0, s1
   23af4:	18 80 00 88 	store_32 s0, 32(s24)
   23af8:	38 e0 01 a8 	load_32 s1, 120(s24)
   23afc:	01 30 00 a8 	load_32 s0, 12(s1)
   23b00:	60 10 00 0f 	move s3, 4
   23b04:	41 50 00 a8 	load_32 s2, 20(s1)
   23b08:	20 00 f0 c0 	move s1, s0
   23b0c:	ef 3b 00 f8 	call 61372 <P_SpawnMobj>
   23b10:	18 60 02 88 	store_32 s0, 152(s24)
   23b14:	00 e3 01 88 	store_32 s24, 120(s0)
   23b18:	38 e0 01 a8 	load_32 s1, 120(s24)
   23b1c:	20 60 02 88 	store_32 s1, 152(s0)
   23b20:	99 ff ff f9 	call -412 <A_Fire>
   23b24:	fe d3 00 a8 	load_32 ra, 52(sp)
   23b28:	3e e3 00 a8 	load_32 s25, 56(sp)
   23b2c:	1e f3 00 a8 	load_32 s24, 60(sp)
   23b30:	de 03 01 05 	add_i sp, sp, 64
   23b34:	1f 00 00 f0 	ret

0000000000023b38 A_VileAttack:
   23b38:	de 03 ff 05 	add_i sp, sp, -64
   23b3c:	1e f3 00 88 	store_32 s24, 60(sp)
   23b40:	3e e3 00 88 	store_32 s25, 56(sp)
   23b44:	5e d3 00 88 	store_32 s26, 52(sp)
   23b48:	7e c3 00 88 	store_32 s27, 48(sp)
   23b4c:	fe b3 00 88 	store_32 ra, 44(sp)
   23b50:	00 03 f0 c0 	move s24, s0
   23b54:	78 e0 01 a8 	load_32 s3, 120(s24)
   23b58:	03 09 00 f2 	bz s3, 288 <A_VileAttack+0x140>
   23b5c:	18 a0 01 a8 	load_32 s0, 104(s24)
   23b60:	00 7c ff 01 	and s0, s0, -33
   23b64:	18 a0 01 88 	store_32 s0, 104(s24)
   23b68:	18 30 00 a8 	load_32 s0, 12(s24)
   23b6c:	38 40 00 a8 	load_32 s1, 16(s24)
   23b70:	43 30 00 a8 	load_32 s2, 12(s3)
   23b74:	63 40 00 a8 	load_32 s3, 16(s3)
   23b78:	fc 55 00 f8 	call 88048 <R_PointToAngle2>
   23b7c:	18 80 00 88 	store_32 s0, 32(s24)
   23b80:	38 e0 01 a8 	load_32 s1, 120(s24)
   23b84:	01 a8 01 a0 	load_u8 s0, 106(s1)
   23b88:	00 10 00 01 	and s0, s0, 4
   23b8c:	40 01 00 f2 	bz s0, 40 <A_VileAttack+0x7c>
   23b90:	d9 e1 ff f9 	call -30876 <P_Random>
   23b94:	20 03 f0 c0 	move s25, s0
   23b98:	d7 e1 ff f9 	call -30884 <P_Random>
   23b9c:	19 00 60 c0 	sub_i s0, s25, s0
   23ba0:	38 80 00 a8 	load_32 s1, 32(s24)
   23ba4:	00 54 00 0b 	shl s0, s0, 21
   23ba8:	00 80 50 c0 	add_i s0, s0, s1
   23bac:	18 80 00 88 	store_32 s0, 32(s24)
   23bb0:	38 e0 01 a8 	load_32 s1, 120(s24)
   23bb4:	00 00 fc c0 	move s0, s24
   23bb8:	ff 2f 00 f8 	call 49148 <P_CheckSight>
   23bbc:	e0 05 00 f2 	bz s0, 188 <A_VileAttack+0x140>
   23bc0:	20 48 01 0f 	move s1, 82
   23bc4:	00 00 fc c0 	move s0, s24
   23bc8:	07 a2 00 f8 	call 165916 <S_StartSound>
   23bcc:	18 e0 01 a8 	load_32 s0, 120(s24)
   23bd0:	20 00 fc c0 	move s1, s24
   23bd4:	60 50 00 0f 	move s3, 20
   23bd8:	40 00 fc c0 	move s2, s24
   23bdc:	2d 0c 00 f8 	call 12468 <P_DamageMobj>
   23be0:	58 e3 01 a8 	load_32 s26, 120(s24)
   23be4:	1a 70 01 a8 	load_32 s0, 92(s26)
   23be8:	20 20 01 a8 	load_32 s1, 72(s0)
   23bec:	00 e8 03 4f 	movehi s0, 8000
   23bf0:	9a c3 00 f8 	call 200296 <__divsi3>
   23bf4:	1a 40 01 88 	store_32 s0, 80(s26)
   23bf8:	18 80 00 a8 	load_32 s0, 32(s24)
   23bfc:	38 63 02 a8 	load_32 s25, 152(s24)
   23c00:	d9 03 00 f2 	bz s25, 120 <A_VileAttack+0x140>
   23c04:	34 04 00 4f 	movehi s1, 52
   23c08:	5a 30 00 a8 	load_32 s2, 12(s26)
   23c0c:	5e a0 00 88 	store_32 s2, 40(sp)
   23c10:	00 4c 00 0a 	shr s0, s0, 19
   23c14:	40 1b 00 4f 	movehi s26, 192
   23c18:	21 40 19 00 	or s1, s1, 1616
   23c1c:	60 0b 00 0b 	shl s27, s0, 2
   23c20:	21 00 00 a8 	load_32 s1, (s1)
   23c24:	01 80 5d c0 	add_i s0, s1, s27
   23c28:	20 00 00 a8 	load_32 s1, (s0)
   23c2c:	00 00 fd c0 	move s0, s26
   23c30:	c1 e0 ff f9 	call -31996 <FixedMul>
   23c34:	5e a0 00 a8 	load_32 s2, 40(sp)
   23c38:	2d 04 00 4f 	movehi s1, 45
   23c3c:	02 00 60 c0 	sub_i s0, s2, s0
   23c40:	19 30 00 88 	store_32 s0, 12(s25)
   23c44:	01 90 41 00 	or s0, s1, 4196
   23c48:	38 e0 01 a8 	load_32 s1, 120(s24)
   23c4c:	00 80 5d c0 	add_i s0, s0, s27
   23c50:	61 43 00 a8 	load_32 s27, 16(s1)
   23c54:	20 00 00 a8 	load_32 s1, (s0)
   23c58:	00 00 fd c0 	move s0, s26
   23c5c:	b6 e0 ff f9 	call -32040 <FixedMul>
   23c60:	1b 00 60 c0 	sub_i s0, s27, s0
   23c64:	19 40 00 88 	store_32 s0, 16(s25)
   23c68:	00 80 fc c0 	move s0, s25
   23c6c:	40 18 01 0f 	move s2, 70
   23c70:	20 00 fc c0 	move s1, s24
   23c74:	b9 15 00 f8 	call 22244 <P_RadiusAttack>
   23c78:	fe b3 00 a8 	load_32 ra, 44(sp)
   23c7c:	7e c3 00 a8 	load_32 s27, 48(sp)
   23c80:	5e d3 00 a8 	load_32 s26, 52(sp)
   23c84:	3e e3 00 a8 	load_32 s25, 56(sp)
   23c88:	1e f3 00 a8 	load_32 s24, 60(sp)
   23c8c:	de 03 01 05 	add_i sp, sp, 64
   23c90:	1f 00 00 f0 	ret

0000000000023c94 A_FatRaise:
   23c94:	de 03 ff 05 	add_i sp, sp, -64
   23c98:	1e f3 00 88 	store_32 s24, 60(sp)
   23c9c:	3e e3 00 88 	store_32 s25, 56(sp)
   23ca0:	fe d3 00 88 	store_32 ra, 52(sp)
   23ca4:	00 03 f0 c0 	move s24, s0
   23ca8:	78 e0 01 a8 	load_32 s3, 120(s24)
   23cac:	c3 02 00 f2 	bz s3, 88 <A_FatRaise+0x70>
   23cb0:	18 a0 01 a8 	load_32 s0, 104(s24)
   23cb4:	00 7c ff 01 	and s0, s0, -33
   23cb8:	18 a0 01 88 	store_32 s0, 104(s24)
   23cbc:	18 30 00 a8 	load_32 s0, 12(s24)
   23cc0:	38 40 00 a8 	load_32 s1, 16(s24)
   23cc4:	43 30 00 a8 	load_32 s2, 12(s3)
   23cc8:	63 40 00 a8 	load_32 s3, 16(s3)
   23ccc:	a7 55 00 f8 	call 87708 <R_PointToAngle2>
   23cd0:	18 80 00 88 	store_32 s0, 32(s24)
   23cd4:	18 e0 01 a8 	load_32 s0, 120(s24)
   23cd8:	00 a8 01 a0 	load_u8 s0, 106(s0)
   23cdc:	00 10 00 01 	and s0, s0, 4
   23ce0:	20 01 00 f2 	bz s0, 36 <A_FatRaise+0x70>
   23ce4:	84 e1 ff f9 	call -31216 <P_Random>
   23ce8:	20 03 f0 c0 	move s25, s0
   23cec:	82 e1 ff f9 	call -31224 <P_Random>
   23cf0:	19 00 60 c0 	sub_i s0, s25, s0
   23cf4:	38 80 00 a8 	load_32 s1, 32(s24)
   23cf8:	00 54 00 0b 	shl s0, s0, 21
   23cfc:	00 80 50 c0 	add_i s0, s0, s1
   23d00:	18 80 00 88 	store_32 s0, 32(s24)
   23d04:	20 8c 01 0f 	move s1, 99
   23d08:	00 00 fc c0 	move s0, s24
   23d0c:	b6 a1 00 f8 	call 165592 <S_StartSound>
   23d10:	fe d3 00 a8 	load_32 ra, 52(sp)
   23d14:	3e e3 00 a8 	load_32 s25, 56(sp)
   23d18:	1e f3 00 a8 	load_32 s24, 60(sp)
   23d1c:	de 03 01 05 	add_i sp, sp, 64
   23d20:	1f 00 00 f0 	ret

0000000000023d24 A_FatAttack1:
   23d24:	de 03 ff 05 	add_i sp, sp, -64
   23d28:	1e f3 00 88 	store_32 s24, 60(sp)
   23d2c:	3e e3 00 88 	store_32 s25, 56(sp)
   23d30:	5e d3 00 88 	store_32 s26, 52(sp)
   23d34:	fe c3 00 88 	store_32 ra, 48(sp)
   23d38:	00 03 f0 c0 	move s24, s0
   23d3c:	78 e0 01 a8 	load_32 s3, 120(s24)
   23d40:	43 00 00 f4 	bnz s3, 8 <A_FatAttack1+0x24>
   23d44:	18 00 00 f6 	b 96 <A_FatAttack1+0x80>
   23d48:	18 a0 01 a8 	load_32 s0, 104(s24)
   23d4c:	00 7c ff 01 	and s0, s0, -33
   23d50:	18 a0 01 88 	store_32 s0, 104(s24)
   23d54:	18 30 00 a8 	load_32 s0, 12(s24)
   23d58:	38 40 00 a8 	load_32 s1, 16(s24)
   23d5c:	43 30 00 a8 	load_32 s2, 12(s3)
   23d60:	63 40 00 a8 	load_32 s3, 16(s3)
   23d64:	81 55 00 f8 	call 87556 <R_PointToAngle2>
   23d68:	18 80 00 88 	store_32 s0, 32(s24)
   23d6c:	38 e0 01 a8 	load_32 s1, 120(s24)
   23d70:	41 a8 01 a0 	load_u8 s2, 106(s1)
   23d74:	42 10 00 01 	and s2, s2, 4
   23d78:	a2 01 00 f2 	bz s2, 52 <A_FatAttack1+0x88>
   23d7c:	5e e1 ff f9 	call -31368 <P_Random>
   23d80:	20 03 f0 c0 	move s25, s0
   23d84:	5c e1 ff f9 	call -31376 <P_Random>
   23d88:	19 00 60 c0 	sub_i s0, s25, s0
   23d8c:	38 80 00 a8 	load_32 s1, 32(s24)
   23d90:	00 54 00 0b 	shl s0, s0, 21
   23d94:	00 80 50 c0 	add_i s0, s0, s1
   23d98:	18 80 00 88 	store_32 s0, 32(s24)
   23d9c:	38 e0 01 a8 	load_32 s1, 120(s24)
   23da0:	03 00 00 f6 	b 12 <A_FatAttack1+0x88>
   23da4:	18 80 00 a8 	load_32 s0, 32(s24)
   23da8:	20 00 00 0f 	move s1, 0
   23dac:	20 27 00 0f 	move s25, 9
   23db0:	40 03 08 4f 	movehi s26, 16384
   23db4:	00 00 5d c0 	add_i s0, s0, s26
   23db8:	18 80 00 88 	store_32 s0, 32(s24)
   23dbc:	00 00 fc c0 	move s0, s24
   23dc0:	40 80 fc c0 	move s2, s25
   23dc4:	14 3e 00 f8 	call 63568 <P_SpawnMissile>
   23dc8:	38 e0 01 a8 	load_32 s1, 120(s24)
   23dcc:	00 00 fc c0 	move s0, s24
   23dd0:	40 80 fc c0 	move s2, s25
   23dd4:	10 3e 00 f8 	call 63552 <P_SpawnMissile>
   23dd8:	00 03 f0 c0 	move s24, s0
   23ddc:	34 04 00 4f 	movehi s1, 52
   23de0:	83 00 00 4f 	movehi s4, 3
   23de4:	18 80 00 a8 	load_32 s0, 32(s24)
   23de8:	21 40 19 00 	or s1, s1, 1616
   23dec:	00 00 5d c0 	add_i s0, s0, s26
   23df0:	18 80 00 88 	store_32 s0, 32(s24)
   23df4:	58 70 01 a8 	load_32 s2, 92(s24)
   23df8:	60 44 00 0a 	shr s3, s0, 17
   23dfc:	02 f0 00 a8 	load_32 s0, 60(s2)
   23e00:	44 f0 7f 00 	or s2, s4, 8188
   23e04:	21 00 00 a8 	load_32 s1, (s1)
   23e08:	23 03 11 c0 	and s25, s3, s2
   23e0c:	21 80 5c c0 	add_i s1, s1, s25
   23e10:	21 00 00 a8 	load_32 s1, (s1)
   23e14:	48 e0 ff f9 	call -32480 <FixedMul>
   23e18:	2d 04 00 4f 	movehi s1, 45
   23e1c:	18 20 01 88 	store_32 s0, 72(s24)
   23e20:	01 90 41 00 	or s0, s1, 4196
   23e24:	38 70 01 a8 	load_32 s1, 92(s24)
   23e28:	40 80 5c c0 	add_i s2, s0, s25
   23e2c:	01 f0 00 a8 	load_32 s0, 60(s1)
   23e30:	22 00 00 a8 	load_32 s1, (s2)
   23e34:	40 e0 ff f9 	call -32512 <FixedMul>
   23e38:	18 30 01 88 	store_32 s0, 76(s24)
   23e3c:	fe c3 00 a8 	load_32 ra, 48(sp)
   23e40:	5e d3 00 a8 	load_32 s26, 52(sp)
   23e44:	3e e3 00 a8 	load_32 s25, 56(sp)
   23e48:	1e f3 00 a8 	load_32 s24, 60(sp)
   23e4c:	de 03 01 05 	add_i sp, sp, 64
   23e50:	1f 00 00 f0 	ret

0000000000023e54 A_FatAttack2:
   23e54:	de 03 ff 05 	add_i sp, sp, -64
   23e58:	1e f3 00 88 	store_32 s24, 60(sp)
   23e5c:	3e e3 00 88 	store_32 s25, 56(sp)
   23e60:	fe d3 00 88 	store_32 ra, 52(sp)
   23e64:	00 03 f0 c0 	move s24, s0
   23e68:	78 e0 01 a8 	load_32 s3, 120(s24)
   23e6c:	43 00 00 f4 	bnz s3, 8 <A_FatAttack2+0x20>
   23e70:	18 00 00 f6 	b 96 <A_FatAttack2+0x7c>
   23e74:	18 a0 01 a8 	load_32 s0, 104(s24)
   23e78:	00 7c ff 01 	and s0, s0, -33
   23e7c:	18 a0 01 88 	store_32 s0, 104(s24)
   23e80:	18 30 00 a8 	load_32 s0, 12(s24)
   23e84:	38 40 00 a8 	load_32 s1, 16(s24)
   23e88:	43 30 00 a8 	load_32 s2, 12(s3)
   23e8c:	63 40 00 a8 	load_32 s3, 16(s3)
   23e90:	36 55 00 f8 	call 87256 <R_PointToAngle2>
   23e94:	18 80 00 88 	store_32 s0, 32(s24)
   23e98:	38 e0 01 a8 	load_32 s1, 120(s24)
   23e9c:	41 a8 01 a0 	load_u8 s2, 106(s1)
   23ea0:	42 10 00 01 	and s2, s2, 4
   23ea4:	a2 01 00 f2 	bz s2, 52 <A_FatAttack2+0x84>
   23ea8:	13 e1 ff f9 	call -31668 <P_Random>
   23eac:	20 03 f0 c0 	move s25, s0
   23eb0:	11 e1 ff f9 	call -31676 <P_Random>
   23eb4:	19 00 60 c0 	sub_i s0, s25, s0
   23eb8:	38 80 00 a8 	load_32 s1, 32(s24)
   23ebc:	00 54 00 0b 	shl s0, s0, 21
   23ec0:	00 80 50 c0 	add_i s0, s0, s1
   23ec4:	18 80 00 88 	store_32 s0, 32(s24)
   23ec8:	38 e0 01 a8 	load_32 s1, 120(s24)
   23ecc:	03 00 00 f6 	b 12 <A_FatAttack2+0x84>
   23ed0:	18 80 00 a8 	load_32 s0, 32(s24)
   23ed4:	20 00 00 0f 	move s1, 0
   23ed8:	20 27 00 0f 	move s25, 9
   23edc:	40 00 f8 4f 	movehi s2, 507904
   23ee0:	00 00 51 c0 	add_i s0, s0, s2
   23ee4:	18 80 00 88 	store_32 s0, 32(s24)
   23ee8:	00 00 fc c0 	move s0, s24
   23eec:	40 80 fc c0 	move s2, s25
   23ef0:	c9 3d 00 f8 	call 63268 <P_SpawnMissile>
   23ef4:	38 e0 01 a8 	load_32 s1, 120(s24)
   23ef8:	00 00 fc c0 	move s0, s24
   23efc:	40 80 fc c0 	move s2, s25
   23f00:	c5 3d 00 f8 	call 63252 <P_SpawnMissile>
   23f04:	00 03 f0 c0 	move s24, s0
   23f08:	20 00 f0 4f 	movehi s1, 491520
   23f0c:	83 00 00 4f 	movehi s4, 3
   23f10:	18 80 00 a8 	load_32 s0, 32(s24)
   23f14:	00 80 50 c0 	add_i s0, s0, s1
   23f18:	18 80 00 88 	store_32 s0, 32(s24)
   23f1c:	34 04 00 4f 	movehi s1, 52
   23f20:	58 70 01 a8 	load_32 s2, 92(s24)
   23f24:	60 44 00 0a 	shr s3, s0, 17
   23f28:	21 40 19 00 	or s1, s1, 1616
   23f2c:	02 f0 00 a8 	load_32 s0, 60(s2)
   23f30:	44 f0 7f 00 	or s2, s4, 8188
   23f34:	23 03 11 c0 	and s25, s3, s2
   23f38:	21 00 00 a8 	load_32 s1, (s1)
   23f3c:	21 80 5c c0 	add_i s1, s1, s25
   23f40:	21 00 00 a8 	load_32 s1, (s1)
   23f44:	fc df ff f9 	call -32784 <FixedMul>
   23f48:	2d 04 00 4f 	movehi s1, 45
   23f4c:	18 20 01 88 	store_32 s0, 72(s24)
   23f50:	01 90 41 00 	or s0, s1, 4196
   23f54:	38 70 01 a8 	load_32 s1, 92(s24)
   23f58:	40 80 5c c0 	add_i s2, s0, s25
   23f5c:	01 f0 00 a8 	load_32 s0, 60(s1)
   23f60:	22 00 00 a8 	load_32 s1, (s2)
   23f64:	f4 df ff f9 	call -32816 <FixedMul>
   23f68:	18 30 01 88 	store_32 s0, 76(s24)
   23f6c:	fe d3 00 a8 	load_32 ra, 52(sp)
   23f70:	3e e3 00 a8 	load_32 s25, 56(sp)
   23f74:	1e f3 00 a8 	load_32 s24, 60(sp)
   23f78:	de 03 01 05 	add_i sp, sp, 64
   23f7c:	1f 00 00 f0 	ret

0000000000023f80 A_FatAttack3:
   23f80:	de 03 ff 05 	add_i sp, sp, -64
   23f84:	1e f3 00 88 	store_32 s24, 60(sp)
   23f88:	3e e3 00 88 	store_32 s25, 56(sp)
   23f8c:	5e d3 00 88 	store_32 s26, 52(sp)
   23f90:	7e c3 00 88 	store_32 s27, 48(sp)
   23f94:	fe b3 00 88 	store_32 ra, 44(sp)
   23f98:	00 03 f0 c0 	move s24, s0
   23f9c:	78 e0 01 a8 	load_32 s3, 120(s24)
   23fa0:	03 03 00 f2 	bz s3, 96 <A_FatAttack3+0x80>
   23fa4:	18 a0 01 a8 	load_32 s0, 104(s24)
   23fa8:	00 7c ff 01 	and s0, s0, -33
   23fac:	18 a0 01 88 	store_32 s0, 104(s24)
   23fb0:	18 30 00 a8 	load_32 s0, 12(s24)
   23fb4:	38 40 00 a8 	load_32 s1, 16(s24)
   23fb8:	43 30 00 a8 	load_32 s2, 12(s3)
   23fbc:	63 40 00 a8 	load_32 s3, 16(s3)
   23fc0:	ea 54 00 f8 	call 86952 <R_PointToAngle2>
   23fc4:	18 80 00 88 	store_32 s0, 32(s24)
   23fc8:	38 e0 01 a8 	load_32 s1, 120(s24)
   23fcc:	01 a8 01 a0 	load_u8 s0, 106(s1)
   23fd0:	00 10 00 01 	and s0, s0, 4
   23fd4:	80 01 00 f2 	bz s0, 48 <A_FatAttack3+0x84>
   23fd8:	c7 e0 ff f9 	call -31972 <P_Random>
   23fdc:	20 03 f0 c0 	move s25, s0
   23fe0:	c5 e0 ff f9 	call -31980 <P_Random>
   23fe4:	19 00 60 c0 	sub_i s0, s25, s0
   23fe8:	38 80 00 a8 	load_32 s1, 32(s24)
   23fec:	00 54 00 0b 	shl s0, s0, 21
   23ff0:	00 80 50 c0 	add_i s0, s0, s1
   23ff4:	18 80 00 88 	store_32 s0, 32(s24)
   23ff8:	38 e0 01 a8 	load_32 s1, 120(s24)
   23ffc:	02 00 00 f6 	b 8 <A_FatAttack3+0x84>
   24000:	20 00 00 0f 	move s1, 0
   24004:	40 24 00 0f 	move s2, 9
   24008:	5e a0 00 88 	store_32 s2, 40(sp)
   2400c:	00 00 fc c0 	move s0, s24
   24010:	81 3d 00 f8 	call 62980 <P_SpawnMissile>
   24014:	40 03 f0 c0 	move s26, s0
   24018:	20 00 fc 4f 	movehi s1, 516096
   2401c:	1a 80 00 a8 	load_32 s0, 32(s26)
   24020:	00 80 50 c0 	add_i s0, s0, s1
   24024:	1a 80 00 88 	store_32 s0, 32(s26)
   24028:	34 04 00 4f 	movehi s1, 52
   2402c:	5a 70 01 a8 	load_32 s2, 92(s26)
   24030:	60 44 00 0a 	shr s3, s0, 17
   24034:	81 40 19 00 	or s4, s1, 1616
   24038:	9e 90 00 88 	store_32 s4, 36(sp)
   2403c:	23 00 00 4f 	movehi s1, 3
   24040:	02 f0 00 a8 	load_32 s0, 60(s2)
   24044:	44 00 00 a8 	load_32 s2, (s4)
   24048:	21 f0 7f 00 	or s1, s1, 8188
   2404c:	3e 80 00 88 	store_32 s1, 32(sp)
   24050:	63 83 10 c0 	and s27, s3, s1
   24054:	22 80 5d c0 	add_i s1, s2, s27
   24058:	21 00 00 a8 	load_32 s1, (s1)
   2405c:	b6 df ff f9 	call -33064 <FixedMul>
   24060:	2d 04 00 4f 	movehi s1, 45
   24064:	1a 20 01 88 	store_32 s0, 72(s26)
   24068:	1a 70 01 a8 	load_32 s0, 92(s26)
   2406c:	21 93 41 00 	or s25, s1, 4196
   24070:	00 f0 00 a8 	load_32 s0, 60(s0)
   24074:	39 80 5d c0 	add_i s1, s25, s27
   24078:	21 00 00 a8 	load_32 s1, (s1)
   2407c:	ae df ff f9 	call -33096 <FixedMul>
   24080:	1a 30 01 88 	store_32 s0, 76(s26)
   24084:	38 e0 01 a8 	load_32 s1, 120(s24)
   24088:	00 00 fc c0 	move s0, s24
   2408c:	5e a0 00 a8 	load_32 s2, 40(sp)
   24090:	61 3d 00 f8 	call 62852 <P_SpawnMissile>
   24094:	00 03 f0 c0 	move s24, s0
   24098:	20 00 04 4f 	movehi s1, 8192
   2409c:	18 80 00 a8 	load_32 s0, 32(s24)
   240a0:	00 80 50 c0 	add_i s0, s0, s1
   240a4:	18 80 00 88 	store_32 s0, 32(s24)
   240a8:	38 70 01 a8 	load_32 s1, 92(s24)
   240ac:	40 44 00 0a 	shr s2, s0, 17
   240b0:	01 f0 00 a8 	load_32 s0, 60(s1)
   240b4:	3e 90 00 a8 	load_32 s1, 36(sp)
   240b8:	21 00 00 a8 	load_32 s1, (s1)
   240bc:	7e 80 00 a8 	load_32 s3, 32(sp)
   240c0:	42 83 11 c0 	and s26, s2, s3
   240c4:	21 00 5d c0 	add_i s1, s1, s26
   240c8:	21 00 00 a8 	load_32 s1, (s1)
   240cc:	9a df ff f9 	call -33176 <FixedMul>
   240d0:	18 20 01 88 	store_32 s0, 72(s24)
   240d4:	39 00 5d c0 	add_i s1, s25, s26
   240d8:	18 70 01 a8 	load_32 s0, 92(s24)
   240dc:	00 f0 00 a8 	load_32 s0, 60(s0)
   240e0:	21 00 00 a8 	load_32 s1, (s1)
   240e4:	94 df ff f9 	call -33200 <FixedMul>
   240e8:	18 30 01 88 	store_32 s0, 76(s24)
   240ec:	fe b3 00 a8 	load_32 ra, 44(sp)
   240f0:	7e c3 00 a8 	load_32 s27, 48(sp)
   240f4:	5e d3 00 a8 	load_32 s26, 52(sp)
   240f8:	3e e3 00 a8 	load_32 s25, 56(sp)
   240fc:	1e f3 00 a8 	load_32 s24, 60(sp)
   24100:	de 03 01 05 	add_i sp, sp, 64
   24104:	1f 00 00 f0 	ret

0000000000024108 A_SkullAttack:
   24108:	de 03 ff 05 	add_i sp, sp, -64
   2410c:	1e f3 00 88 	store_32 s24, 60(sp)
   24110:	3e e3 00 88 	store_32 s25, 56(sp)
   24114:	5e d3 00 88 	store_32 s26, 52(sp)
   24118:	7e c3 00 88 	store_32 s27, 48(sp)
   2411c:	fe b3 00 88 	store_32 ra, 44(sp)
   24120:	00 03 f0 c0 	move s24, s0
   24124:	58 e3 01 a8 	load_32 s26, 120(s24)
   24128:	fa 09 00 f2 	bz s26, 316 <A_SkullAttack+0x15c>
   2412c:	18 a0 01 a8 	load_32 s0, 104(s24)
   24130:	20 00 01 4f 	movehi s1, 2048
   24134:	00 80 00 c0 	or s0, s0, s1
   24138:	18 a0 01 88 	store_32 s0, 104(s24)
   2413c:	18 70 01 a8 	load_32 s0, 92(s24)
   24140:	20 60 00 a8 	load_32 s1, 24(s0)
   24144:	00 00 fc c0 	move s0, s24
   24148:	a7 a0 00 f8 	call 164508 <S_StartSound>
   2414c:	78 e0 01 a8 	load_32 s3, 120(s24)
   24150:	43 00 00 f4 	bnz s3, 8 <A_SkullAttack+0x50>
   24154:	17 00 00 f6 	b 92 <A_SkullAttack+0xa8>
   24158:	18 a0 01 a8 	load_32 s0, 104(s24)
   2415c:	00 7c ff 01 	and s0, s0, -33
   24160:	18 a0 01 88 	store_32 s0, 104(s24)
   24164:	18 30 00 a8 	load_32 s0, 12(s24)
   24168:	38 40 00 a8 	load_32 s1, 16(s24)
   2416c:	43 30 00 a8 	load_32 s2, 12(s3)
   24170:	63 40 00 a8 	load_32 s3, 16(s3)
   24174:	7d 54 00 f8 	call 86516 <R_PointToAngle2>
   24178:	18 80 00 88 	store_32 s0, 32(s24)
   2417c:	38 e0 01 a8 	load_32 s1, 120(s24)
   24180:	21 a8 01 a0 	load_u8 s1, 106(s1)
   24184:	21 10 00 01 	and s1, s1, 4
   24188:	61 01 00 f2 	bz s1, 44 <A_SkullAttack+0xac>
   2418c:	5a e0 ff f9 	call -32408 <P_Random>
   24190:	20 03 f0 c0 	move s25, s0
   24194:	58 e0 ff f9 	call -32416 <P_Random>
   24198:	19 00 60 c0 	sub_i s0, s25, s0
   2419c:	38 80 00 a8 	load_32 s1, 32(s24)
   241a0:	00 54 00 0b 	shl s0, s0, 21
   241a4:	00 80 50 c0 	add_i s0, s0, s1
   241a8:	18 80 00 88 	store_32 s0, 32(s24)
   241ac:	02 00 00 f6 	b 8 <A_SkullAttack+0xac>
   241b0:	18 80 00 a8 	load_32 s0, 32(s24)
   241b4:	34 04 00 4f 	movehi s1, 52
   241b8:	43 00 00 4f 	movehi s2, 3
   241bc:	00 44 00 0a 	shr s0, s0, 17
   241c0:	21 40 19 00 	or s1, s1, 1616
   241c4:	42 f0 7f 00 	or s2, s2, 8188
   241c8:	60 03 11 c0 	and s27, s0, s2
   241cc:	21 00 00 a8 	load_32 s1, (s1)
   241d0:	20 17 00 4f 	movehi s25, 160
   241d4:	01 80 5d c0 	add_i s0, s1, s27
   241d8:	20 00 00 a8 	load_32 s1, (s0)
   241dc:	00 80 fc c0 	move s0, s25
   241e0:	55 df ff f9 	call -33452 <FixedMul>
   241e4:	2d 04 00 4f 	movehi s1, 45
   241e8:	18 20 01 88 	store_32 s0, 72(s24)
   241ec:	21 90 41 00 	or s1, s1, 4196
   241f0:	21 80 5d c0 	add_i s1, s1, s27
   241f4:	21 00 00 a8 	load_32 s1, (s1)
   241f8:	00 80 fc c0 	move s0, s25
   241fc:	4e df ff f9 	call -33480 <FixedMul>
   24200:	18 30 01 88 	store_32 s0, 76(s24)
   24204:	1a 30 00 a8 	load_32 s0, 12(s26)
   24208:	38 30 00 a8 	load_32 s1, 12(s24)
   2420c:	5a 40 00 a8 	load_32 s2, 16(s26)
   24210:	78 40 00 a8 	load_32 s3, 16(s24)
   24214:	00 80 60 c0 	sub_i s0, s0, s1
   24218:	22 80 61 c0 	sub_i s1, s2, s3
   2421c:	28 15 00 f8 	call 21664 <P_AproxDistance>
   24220:	33 64 66 4f 	movehi s1, 209715
   24224:	21 9c 19 00 	or s1, s1, 1639
   24228:	00 80 f0 c1 	mulh_i s0, s0, s1
   2422c:	20 4c 00 09 	ashr s1, s0, 19
   24230:	00 7c 00 0a 	shr s0, s0, 31
   24234:	21 00 50 c0 	add_i s1, s1, s0
   24238:	01 04 00 12 	cmpgt_i s0, s1, 1
   2423c:	40 00 00 f4 	bnz s0, 8 <A_SkullAttack+0x13c>
   24240:	20 04 00 0f 	move s1, 1
   24244:	1a 50 00 a8 	load_32 s0, 20(s26)
   24248:	5a 10 01 a8 	load_32 s2, 68(s26)
   2424c:	78 50 00 a8 	load_32 s3, 20(s24)
   24250:	42 04 00 09 	ashr s2, s2, 1
   24254:	02 00 50 c0 	add_i s0, s2, s0
   24258:	00 80 61 c0 	sub_i s0, s0, s3
   2425c:	ff c1 00 f8 	call 198652 <__divsi3>
   24260:	18 40 01 88 	store_32 s0, 80(s24)
   24264:	fe b3 00 a8 	load_32 ra, 44(sp)
   24268:	7e c3 00 a8 	load_32 s27, 48(sp)
   2426c:	5e d3 00 a8 	load_32 s26, 52(sp)
   24270:	3e e3 00 a8 	load_32 s25, 56(sp)
   24274:	1e f3 00 a8 	load_32 s24, 60(sp)
   24278:	de 03 01 05 	add_i sp, sp, 64
   2427c:	1f 00 00 f0 	ret

0000000000024280 A_PainShootSkull:
   24280:	de 03 ff 05 	add_i sp, sp, -64
   24284:	1e f3 00 88 	store_32 s24, 60(sp)
   24288:	3e e3 00 88 	store_32 s25, 56(sp)
   2428c:	5e d3 00 88 	store_32 s26, 52(sp)
   24290:	7e c3 00 88 	store_32 s27, 48(sp)
   24294:	fe b3 00 88 	store_32 ra, 44(sp)
   24298:	5c 04 00 4f 	movehi s2, 60
   2429c:	42 50 02 00 	or s2, s2, 148
   242a0:	62 10 00 a8 	load_32 s3, 4(s2)
   242a4:	00 03 f0 c0 	move s24, s0
   242a8:	83 00 01 c1 	cmpeq_i s4, s3, s2
   242ac:	a4 02 00 f4 	bnz s4, 84 <A_PainShootSkull+0x80>
   242b0:	99 00 00 4f 	movehi s4, 25
   242b4:	00 00 00 0f 	move s0, 0
   242b8:	84 50 31 00 	or s4, s4, 3156
   242bc:	a3 20 00 a8 	load_32 s5, 8(s3)
   242c0:	a5 00 12 c1 	cmpne_i s5, s5, s4
   242c4:	45 00 00 f4 	bnz s5, 8 <A_PainShootSkull+0x4c>
   242c8:	05 00 00 f6 	b 20 <A_PainShootSkull+0x5c>
   242cc:	63 10 00 a8 	load_32 s3, 4(s3)
   242d0:	a3 00 11 c1 	cmpne_i s5, s3, s2
   242d4:	45 ff ff f5 	bnz s5, -24 <A_PainShootSkull+0x3c>
   242d8:	08 00 00 f6 	b 32 <A_PainShootSkull+0x78>
   242dc:	a3 60 01 a8 	load_32 s5, 88(s3)
   242e0:	a5 48 00 10 	cmpeq_i s5, s5, 18
   242e4:	a5 04 00 01 	and s5, s5, 1
   242e8:	00 80 52 c0 	add_i s0, s0, s5
   242ec:	63 10 00 a8 	load_32 s3, 4(s3)
   242f0:	a3 00 11 c1 	cmpne_i s5, s3, s2
   242f4:	45 fe ff f5 	bnz s5, -56 <A_PainShootSkull+0x3c>
   242f8:	00 50 00 12 	cmpgt_i s0, s0, 20
   242fc:	20 07 00 f4 	bnz s0, 228 <A_PainShootSkull+0x160>
   24300:	18 04 00 4f 	movehi s0, 56
   24304:	58 70 01 a8 	load_32 s2, 92(s24)
   24308:	63 00 00 4f 	movehi s3, 3
   2430c:	21 44 00 0a 	shr s1, s1, 17
   24310:	00 30 03 00 	or s0, s0, 204
   24314:	42 00 01 a8 	load_32 s2, 64(s2)
   24318:	63 f0 7f 00 	or s3, s3, 8188
   2431c:	61 83 11 c0 	and s27, s1, s3
   24320:	00 e0 1a a8 	load_32 s0, 1720(s0)
   24324:	58 33 00 a8 	load_32 s26, 12(s24)
   24328:	00 00 51 c0 	add_i s0, s0, s2
   2432c:	54 04 00 4f 	movehi s2, 52
   24330:	00 0c 00 07 	mull_i s0, s0, 3
   24334:	42 40 19 00 	or s2, s2, 1616
   24338:	80 7c 00 0a 	shr s4, s0, 31
   2433c:	00 00 52 c0 	add_i s0, s0, s4
   24340:	42 00 00 a8 	load_32 s2, (s2)
   24344:	00 04 00 09 	ashr s0, s0, 1
   24348:	22 80 5d c0 	add_i s1, s2, s27
   2434c:	40 04 00 4f 	movehi s2, 32
   24350:	20 03 51 c0 	add_i s25, s0, s2
   24354:	21 00 00 a8 	load_32 s1, (s1)
   24358:	00 80 fc c0 	move s0, s25
   2435c:	f6 de ff f9 	call -33832 <FixedMul>
   24360:	2d 04 00 4f 	movehi s1, 45
   24364:	40 03 5d c0 	add_i s26, s0, s26
   24368:	21 90 41 00 	or s1, s1, 4196
   2436c:	21 80 5d c0 	add_i s1, s1, s27
   24370:	78 43 00 a8 	load_32 s27, 16(s24)
   24374:	21 00 00 a8 	load_32 s1, (s1)
   24378:	00 80 fc c0 	move s0, s25
   2437c:	ee de ff f9 	call -33864 <FixedMul>
   24380:	58 50 00 a8 	load_32 s2, 20(s24)
   24384:	20 80 5d c0 	add_i s1, s0, s27
   24388:	00 08 00 4f 	movehi s0, 64
   2438c:	60 48 00 0f 	move s3, 18
   24390:	42 00 50 c0 	add_i s2, s2, s0
   24394:	00 00 fd c0 	move s0, s26
   24398:	cc 39 00 f8 	call 59184 <P_SpawnMobj>
   2439c:	20 03 f0 c0 	move s25, s0
   243a0:	39 30 00 a8 	load_32 s1, 12(s25)
   243a4:	59 40 00 a8 	load_32 s2, 16(s25)
   243a8:	53 0f 00 f8 	call 15692 <P_TryMove>
   243ac:	40 00 00 f4 	bnz s0, 8 <A_PainShootSkull+0x134>
   243b0:	06 00 00 f6 	b 24 <A_PainShootSkull+0x148>
   243b4:	18 e0 01 a8 	load_32 s0, 120(s24)
   243b8:	19 e0 01 88 	store_32 s0, 120(s25)
   243bc:	00 80 fc c0 	move s0, s25
   243c0:	52 ff ff f9 	call -696 <A_SkullAttack>
   243c4:	07 00 00 f6 	b 28 <A_PainShootSkull+0x160>
   243c8:	01 00 00 4f 	movehi s0, 1
   243cc:	60 40 1c 00 	or s3, s0, 1808
   243d0:	00 80 fc c0 	move s0, s25
   243d4:	20 00 fc c0 	move s1, s24
   243d8:	40 00 fc c0 	move s2, s24
   243dc:	2d 0a 00 f8 	call 10420 <P_DamageMobj>
   243e0:	fe b3 00 a8 	load_32 ra, 44(sp)
   243e4:	7e c3 00 a8 	load_32 s27, 48(sp)
   243e8:	5e d3 00 a8 	load_32 s26, 52(sp)
   243ec:	3e e3 00 a8 	load_32 s25, 56(sp)
   243f0:	1e f3 00 a8 	load_32 s24, 60(sp)
   243f4:	de 03 01 05 	add_i sp, sp, 64
   243f8:	1f 00 00 f0 	ret

00000000000243fc A_PainAttack:
   243fc:	de 03 ff 05 	add_i sp, sp, -64
   24400:	1e f3 00 88 	store_32 s24, 60(sp)
   24404:	3e e3 00 88 	store_32 s25, 56(sp)
   24408:	fe d3 00 88 	store_32 ra, 52(sp)
   2440c:	00 03 f0 c0 	move s24, s0
   24410:	78 e0 01 a8 	load_32 s3, 120(s24)
   24414:	23 03 00 f2 	bz s3, 100 <A_PainAttack+0x7c>
   24418:	18 a0 01 a8 	load_32 s0, 104(s24)
   2441c:	00 7c ff 01 	and s0, s0, -33
   24420:	18 a0 01 88 	store_32 s0, 104(s24)
   24424:	18 30 00 a8 	load_32 s0, 12(s24)
   24428:	38 40 00 a8 	load_32 s1, 16(s24)
   2442c:	43 30 00 a8 	load_32 s2, 12(s3)
   24430:	63 40 00 a8 	load_32 s3, 16(s3)
   24434:	cd 53 00 f8 	call 85812 <R_PointToAngle2>
   24438:	20 00 f0 c0 	move s1, s0
   2443c:	38 80 00 88 	store_32 s1, 32(s24)
   24440:	18 e0 01 a8 	load_32 s0, 120(s24)
   24444:	00 a8 01 a0 	load_u8 s0, 106(s0)
   24448:	00 10 00 01 	and s0, s0, 4
   2444c:	20 01 00 f2 	bz s0, 36 <A_PainAttack+0x74>
   24450:	a9 df ff f9 	call -33116 <P_Random>
   24454:	20 03 f0 c0 	move s25, s0
   24458:	a7 df ff f9 	call -33124 <P_Random>
   2445c:	19 00 60 c0 	sub_i s0, s25, s0
   24460:	38 80 00 a8 	load_32 s1, 32(s24)
   24464:	00 54 00 0b 	shl s0, s0, 21
   24468:	20 80 50 c0 	add_i s1, s0, s1
   2446c:	38 80 00 88 	store_32 s1, 32(s24)
   24470:	00 00 fc c0 	move s0, s24
   24474:	83 ff ff f9 	call -500 <A_PainShootSkull>
   24478:	fe d3 00 a8 	load_32 ra, 52(sp)
   2447c:	3e e3 00 a8 	load_32 s25, 56(sp)
   24480:	1e f3 00 a8 	load_32 s24, 60(sp)
   24484:	de 03 01 05 	add_i sp, sp, 64
   24488:	1f 00 00 f0 	ret

000000000002448c A_PainDie:
   2448c:	de 03 ff 05 	add_i sp, sp, -64
   24490:	1e f3 00 88 	store_32 s24, 60(sp)
   24494:	fe e3 00 88 	store_32 ra, 56(sp)
   24498:	00 03 f0 c0 	move s24, s0
   2449c:	20 00 40 4f 	movehi s1, 131072
   244a0:	18 a0 01 a8 	load_32 s0, 104(s24)
   244a4:	00 f4 ff 01 	and s0, s0, -3
   244a8:	18 a0 01 88 	store_32 s0, 104(s24)
   244ac:	18 80 00 a8 	load_32 s0, 32(s24)
   244b0:	20 80 50 c0 	add_i s1, s0, s1
   244b4:	00 00 fc c0 	move s0, s24
   244b8:	72 ff ff f9 	call -568 <A_PainShootSkull>
   244bc:	18 80 00 a8 	load_32 s0, 32(s24)
   244c0:	20 00 80 4f 	movehi s1, 262144
   244c4:	20 80 30 c0 	xor s1, s0, s1
   244c8:	00 00 fc c0 	move s0, s24
   244cc:	6d ff ff f9 	call -588 <A_PainShootSkull>
   244d0:	18 80 00 a8 	load_32 s0, 32(s24)
   244d4:	20 00 c0 4f 	movehi s1, 393216
   244d8:	20 80 50 c0 	add_i s1, s0, s1
   244dc:	00 00 fc c0 	move s0, s24
   244e0:	68 ff ff f9 	call -608 <A_PainShootSkull>
   244e4:	fe e3 00 a8 	load_32 ra, 56(sp)
   244e8:	1e f3 00 a8 	load_32 s24, 60(sp)
   244ec:	de 03 01 05 	add_i sp, sp, 64
   244f0:	1f 00 00 f0 	ret

00000000000244f4 A_Scream:
   244f4:	de 03 ff 05 	add_i sp, sp, -64
   244f8:	1e f3 00 88 	store_32 s24, 60(sp)
   244fc:	3e e3 00 88 	store_32 s25, 56(sp)
   24500:	5e d3 00 88 	store_32 s26, 52(sp)
   24504:	fe c3 00 88 	store_32 ra, 48(sp)
   24508:	00 03 f0 c0 	move s24, s0
   2450c:	18 70 01 a8 	load_32 s0, 92(s24)
   24510:	20 e0 00 a8 	load_32 s1, 56(s0)
   24514:	01 14 ff 05 	add_i s0, s1, -59
   24518:	00 0c 00 18 	cmplt_u s0, s0, 3
   2451c:	00 01 00 f4 	bnz s0, 32 <A_Scream+0x48>
   24520:	01 08 ff 05 	add_i s0, s1, -62
   24524:	00 08 00 18 	cmplt_u s0, s0, 2
   24528:	40 00 00 f4 	bnz s0, 8 <A_Scream+0x3c>
   2452c:	11 00 00 f6 	b 68 <A_Scream+0x7c>
   24530:	40 fb 00 0f 	move s26, 62
   24534:	20 0b 00 0f 	move s25, 2
   24538:	03 00 00 f6 	b 12 <A_Scream+0x50>
   2453c:	40 ef 00 0f 	move s26, 59
   24540:	20 0f 00 0f 	move s25, 3
   24544:	6c df ff f9 	call -33360 <P_Random>
   24548:	20 80 fc c0 	move s1, s25
   2454c:	6b c1 00 f8 	call 198060 <__modsi3>
   24550:	20 00 5d c0 	add_i s1, s0, s26
   24554:	18 60 01 a8 	load_32 s0, 88(s24)
   24558:	40 54 00 10 	cmpeq_i s2, s0, 21
   2455c:	62 00 00 f4 	bnz s2, 12 <A_Scream+0x74>
   24560:	00 4c 00 11 	cmpne_i s0, s0, 19
   24564:	a0 00 00 f4 	bnz s0, 20 <A_Scream+0x84>
   24568:	00 00 00 0f 	move s0, 0
   2456c:	04 00 00 f6 	b 16 <A_Scream+0x88>
   24570:	81 00 00 f2 	bz s1, 16 <A_Scream+0x8c>
   24574:	f8 ff ff f7 	b -32 <A_Scream+0x60>
   24578:	00 00 fc c0 	move s0, s24
   2457c:	9a 9f 00 f8 	call 163432 <S_StartSound>
   24580:	fe c3 00 a8 	load_32 ra, 48(sp)
   24584:	5e d3 00 a8 	load_32 s26, 52(sp)
   24588:	3e e3 00 a8 	load_32 s25, 56(sp)
   2458c:	1e f3 00 a8 	load_32 s24, 60(sp)
   24590:	de 03 01 05 	add_i sp, sp, 64
   24594:	1f 00 00 f0 	ret

0000000000024598 A_XScream:
   24598:	de 03 ff 05 	add_i sp, sp, -64
   2459c:	fe f3 00 88 	store_32 ra, 60(sp)
   245a0:	20 7c 00 0f 	move s1, 31
   245a4:	90 9f 00 f8 	call 163392 <S_StartSound>
   245a8:	fe f3 00 a8 	load_32 ra, 60(sp)
   245ac:	de 03 01 05 	add_i sp, sp, 64
   245b0:	1f 00 00 f0 	ret

00000000000245b4 A_Pain:
   245b4:	de 03 ff 05 	add_i sp, sp, -64
   245b8:	fe f3 00 88 	store_32 ra, 60(sp)
   245bc:	20 70 01 a8 	load_32 s1, 92(s0)
   245c0:	21 90 00 a8 	load_32 s1, 36(s1)
   245c4:	41 00 00 f2 	bz s1, 8 <A_Pain+0x18>
   245c8:	87 9f 00 f8 	call 163356 <S_StartSound>
   245cc:	fe f3 00 a8 	load_32 ra, 60(sp)
   245d0:	de 03 01 05 	add_i sp, sp, 64
   245d4:	1f 00 00 f0 	ret

00000000000245d8 A_Explode:
   245d8:	de 03 ff 05 	add_i sp, sp, -64
   245dc:	fe f3 00 88 	store_32 ra, 60(sp)
   245e0:	20 e0 01 a8 	load_32 s1, 120(s0)
   245e4:	40 00 02 0f 	move s2, 128
   245e8:	5c 13 00 f8 	call 19824 <P_RadiusAttack>
   245ec:	fe f3 00 a8 	load_32 ra, 60(sp)
   245f0:	de 03 01 05 	add_i sp, sp, 64
   245f4:	1f 00 00 f0 	ret

00000000000245f8 A_BossDeath:
   245f8:	de 03 fe 05 	add_i sp, sp, -128
   245fc:	fe f3 01 88 	store_32 ra, 124(sp)
   24600:	2b 04 00 4f 	movehi s1, 43
   24604:	21 00 40 00 	or s1, s1, 4096
   24608:	21 00 00 a8 	load_32 s1, (s1)
   2460c:	21 08 00 11 	cmpne_i s1, s1, 2
   24610:	a1 01 00 f4 	bnz s1, 52 <A_BossDeath+0x4c>
   24614:	5a 04 00 4f 	movehi s2, 58
   24618:	42 80 7f 00 	or s2, s2, 8160
   2461c:	42 00 00 a8 	load_32 s2, (s2)
   24620:	42 1c 00 11 	cmpne_i s2, s2, 7
   24624:	42 12 00 f4 	bnz s2, 584 <A_BossDeath+0x274>
   24628:	60 60 01 a8 	load_32 s3, 88(s0)
   2462c:	40 1c 00 0f 	move s2, 7
   24630:	83 20 00 10 	cmpeq_i s4, s3, 8
   24634:	04 08 00 f4 	bnz s4, 256 <A_BossDeath+0x13c>
   24638:	63 50 00 10 	cmpeq_i s3, s3, 20
   2463c:	c3 07 00 f4 	bnz s3, 248 <A_BossDeath+0x13c>
   24640:	8b 00 00 f6 	b 556 <A_BossDeath+0x274>
   24644:	5a 04 00 4f 	movehi s2, 58
   24648:	42 70 6f 00 	or s2, s2, 7132
   2464c:	42 00 00 a8 	load_32 s2, (s2)
   24650:	42 fc ff 05 	add_i s2, s2, -1
   24654:	62 0c 00 16 	cmpgt_u s3, s2, 3
   24658:	03 02 00 f4 	bnz s3, 64 <A_BossDeath+0xa0>
   2465c:	63 00 00 4f 	movehi s3, 3
   24660:	42 08 00 0b 	shl s2, s2, 2
   24664:	63 b0 3e 00 	or s3, s3, 4012
   24668:	42 80 51 c0 	add_i s2, s2, s3
   2466c:	42 00 00 a8 	load_32 s2, (s2)
   24670:	02 00 00 f0 	b s2
   24674:	5a 04 00 4f 	movehi s2, 58
   24678:	42 80 7f 00 	or s2, s2, 8160
   2467c:	42 00 00 a8 	load_32 s2, (s2)
   24680:	42 20 00 11 	cmpne_i s2, s2, 8
   24684:	42 0f 00 f4 	bnz s2, 488 <A_BossDeath+0x274>
   24688:	40 60 01 a8 	load_32 s2, 88(s0)
   2468c:	42 3c 00 10 	cmpeq_i s2, s2, 15
   24690:	02 05 00 f4 	bnz s2, 160 <A_BossDeath+0x138>
   24694:	76 00 00 f6 	b 472 <A_BossDeath+0x274>
   24698:	5a 04 00 4f 	movehi s2, 58
   2469c:	42 80 7f 00 	or s2, s2, 8160
   246a0:	42 00 00 a8 	load_32 s2, (s2)
   246a4:	42 20 00 11 	cmpne_i s2, s2, 8
   246a8:	22 0e 00 f4 	bnz s2, 452 <A_BossDeath+0x274>
   246ac:	21 00 00 f6 	b 132 <A_BossDeath+0x138>
   246b0:	5a 04 00 4f 	movehi s2, 58
   246b4:	42 80 7f 00 	or s2, s2, 8160
   246b8:	42 00 00 a8 	load_32 s2, (s2)
   246bc:	42 20 00 11 	cmpne_i s2, s2, 8
   246c0:	62 0d 00 f4 	bnz s2, 428 <A_BossDeath+0x274>
   246c4:	40 60 01 a8 	load_32 s2, 88(s0)
   246c8:	42 54 00 10 	cmpeq_i s2, s2, 21
   246cc:	22 03 00 f4 	bnz s2, 100 <A_BossDeath+0x138>
   246d0:	67 00 00 f6 	b 412 <A_BossDeath+0x274>
   246d4:	5a 04 00 4f 	movehi s2, 58
   246d8:	42 80 7f 00 	or s2, s2, 8160
   246dc:	42 00 00 a8 	load_32 s2, (s2)
   246e0:	42 20 00 11 	cmpne_i s2, s2, 8
   246e4:	42 0c 00 f4 	bnz s2, 392 <A_BossDeath+0x274>
   246e8:	0e 00 00 f6 	b 56 <A_BossDeath+0x128>
   246ec:	5a 04 00 4f 	movehi s2, 58
   246f0:	42 80 7f 00 	or s2, s2, 8160
   246f4:	42 00 00 a8 	load_32 s2, (s2)
   246f8:	62 20 00 10 	cmpeq_i s3, s2, 8
   246fc:	23 01 00 f4 	bnz s3, 36 <A_BossDeath+0x128>
   24700:	42 18 00 11 	cmpne_i s2, s2, 6
   24704:	42 0b 00 f4 	bnz s2, 360 <A_BossDeath+0x274>
   24708:	40 60 01 a8 	load_32 s2, 88(s0)
   2470c:	42 54 00 10 	cmpeq_i s2, s2, 21
   24710:	42 00 00 f4 	bnz s2, 8 <A_BossDeath+0x120>
   24714:	56 00 00 f6 	b 344 <A_BossDeath+0x274>
   24718:	40 18 00 0f 	move s2, 6
   2471c:	06 00 00 f6 	b 24 <A_BossDeath+0x13c>
   24720:	40 60 01 a8 	load_32 s2, 88(s0)
   24724:	42 4c 00 10 	cmpeq_i s2, s2, 19
   24728:	42 00 00 f4 	bnz s2, 8 <A_BossDeath+0x138>
   2472c:	50 00 00 f6 	b 320 <A_BossDeath+0x274>
   24730:	40 20 00 0f 	move s2, 8
   24734:	7b 04 00 4f 	movehi s3, 59
   24738:	bb 04 00 4f 	movehi s5, 59
   2473c:	83 00 02 00 	or s4, s3, 128
   24740:	65 40 02 00 	or s3, s5, 144
   24744:	c4 00 00 a8 	load_32 s6, (s4)
   24748:	a3 80 00 a8 	load_32 s5, 32(s3)
   2474c:	66 00 00 f2 	bz s6, 12 <A_BossDeath+0x160>
   24750:	a5 00 00 12 	cmpgt_i s5, s5, 0
   24754:	45 02 00 f4 	bnz s5, 72 <A_BossDeath+0x1a4>
   24758:	c4 10 00 a8 	load_32 s6, 4(s4)
   2475c:	a3 e0 04 a8 	load_32 s5, 312(s3)
   24760:	86 00 00 f2 	bz s6, 16 <A_BossDeath+0x178>
   24764:	a5 04 00 14 	cmplt_i s5, s5, 1
   24768:	45 00 00 f4 	bnz s5, 8 <A_BossDeath+0x178>
   2476c:	0c 00 00 f6 	b 48 <A_BossDeath+0x1a4>
   24770:	c4 20 00 a8 	load_32 s6, 8(s4)
   24774:	a3 40 09 a8 	load_32 s5, 592(s3)
   24778:	66 00 00 f2 	bz s6, 12 <A_BossDeath+0x18c>
   2477c:	a5 00 00 12 	cmpgt_i s5, s5, 0
   24780:	e5 00 00 f4 	bnz s5, 28 <A_BossDeath+0x1a4>
   24784:	84 30 00 a8 	load_32 s4, 12(s4)
   24788:	63 a0 0d a8 	load_32 s3, 872(s3)
   2478c:	04 07 00 f2 	bz s4, 224 <A_BossDeath+0x274>
   24790:	63 00 00 12 	cmpgt_i s3, s3, 0
   24794:	43 00 00 f4 	bnz s3, 8 <A_BossDeath+0x1a4>
   24798:	35 00 00 f6 	b 212 <A_BossDeath+0x274>
   2479c:	7c 04 00 4f 	movehi s3, 60
   247a0:	63 50 02 00 	or s3, s3, 148
   247a4:	83 10 00 a8 	load_32 s4, 4(s3)
   247a8:	a4 80 01 c1 	cmpeq_i s5, s4, s3
   247ac:	45 02 00 f4 	bnz s5, 72 <A_BossDeath+0x1fc>
   247b0:	b9 00 00 4f 	movehi s5, 25
   247b4:	a5 50 31 00 	or s5, s5, 3156
   247b8:	c4 20 00 a8 	load_32 s6, 8(s4)
   247bc:	e4 00 00 c1 	cmpeq_i s7, s4, s0
   247c0:	47 01 00 f4 	bnz s7, 40 <A_BossDeath+0x1f0>
   247c4:	c6 80 12 c1 	cmpne_i s6, s6, s5
   247c8:	06 01 00 f4 	bnz s6, 32 <A_BossDeath+0x1f0>
   247cc:	c4 60 01 a8 	load_32 s6, 88(s4)
   247d0:	e0 60 01 a8 	load_32 s7, 88(s0)
   247d4:	c6 80 13 c1 	cmpne_i s6, s6, s7
   247d8:	86 00 00 f4 	bnz s6, 16 <A_BossDeath+0x1f0>
   247dc:	c4 b0 01 a8 	load_32 s6, 108(s4)
   247e0:	c6 00 00 12 	cmpgt_i s6, s6, 0
   247e4:	46 04 00 f4 	bnz s6, 136 <A_BossDeath+0x274>
   247e8:	84 10 00 a8 	load_32 s4, 4(s4)
   247ec:	c4 80 11 c1 	cmpne_i s6, s4, s3
   247f0:	46 fe ff f5 	bnz s6, -56 <A_BossDeath+0x1c0>
   247f4:	21 01 00 f4 	bnz s1, 36 <A_BossDeath+0x220>
   247f8:	22 1c 00 11 	cmpne_i s1, s2, 7
   247fc:	61 03 00 f4 	bnz s1, 108 <A_BossDeath+0x270>
   24800:	00 60 01 a8 	load_32 s0, 88(s0)
   24804:	20 50 00 10 	cmpeq_i s1, s0, 20
   24808:	81 04 00 f4 	bnz s1, 144 <A_BossDeath+0x2a0>
   2480c:	00 20 00 11 	cmpne_i s0, s0, 8
   24810:	c0 02 00 f4 	bnz s0, 88 <A_BossDeath+0x270>
   24814:	19 00 00 f6 	b 100 <A_BossDeath+0x280>
   24818:	1a 04 00 4f 	movehi s0, 58
   2481c:	00 70 6f 00 	or s0, s0, 7132
   24820:	00 00 00 a8 	load_32 s0, (s0)
   24824:	20 10 00 10 	cmpeq_i s1, s0, 4
   24828:	81 00 00 f4 	bnz s1, 16 <A_BossDeath+0x240>
   2482c:	00 04 00 11 	cmpne_i s0, s0, 1
   24830:	c0 01 00 f4 	bnz s0, 56 <A_BossDeath+0x270>
   24834:	11 00 00 f6 	b 68 <A_BossDeath+0x280>
   24838:	02 20 00 10 	cmpeq_i s0, s2, 8
   2483c:	e0 01 00 f4 	bnz s0, 60 <A_BossDeath+0x280>
   24840:	02 18 00 11 	cmpne_i s0, s2, 6
   24844:	20 01 00 f4 	bnz s0, 36 <A_BossDeath+0x270>
   24848:	00 68 0a 0f 	move s0, 666
   2484c:	1e 30 01 86 	store_16 s0, 76(sp)
   24850:	1e e0 00 05 	add_i s0, sp, 56
   24854:	20 18 00 0f 	move s1, 6
   24858:	07 f1 ff f9 	call -15332 <EV_DoDoor>
   2485c:	fe f3 01 a8 	load_32 ra, 124(sp)
   24860:	de 03 02 05 	add_i sp, sp, 128
   24864:	1f 00 00 f0 	ret
   24868:	05 ca ff f9 	call -55276 <G_ExitLevel>
   2486c:	fe f3 01 a8 	load_32 ra, 124(sp)
   24870:	de 03 02 05 	add_i sp, sp, 128
   24874:	1f 00 00 f0 	ret
   24878:	00 68 0a 0f 	move s0, 666
   2487c:	1e 30 01 86 	store_16 s0, 76(sp)
   24880:	1e e0 00 05 	add_i s0, sp, 56
   24884:	20 04 00 0f 	move s1, 1
   24888:	6a 02 00 f8 	call 2472 <EV_DoFloor>
   2488c:	fe f3 01 a8 	load_32 ra, 124(sp)
   24890:	de 03 02 05 	add_i sp, sp, 128
   24894:	1f 00 00 f0 	ret
   24898:	00 6c 0a 0f 	move s0, 667
   2489c:	1e 30 01 86 	store_16 s0, 76(sp)
   248a0:	1e e0 00 05 	add_i s0, sp, 56
   248a4:	20 14 00 0f 	move s1, 5
   248a8:	62 02 00 f8 	call 2440 <EV_DoFloor>
   248ac:	fe f3 01 a8 	load_32 ra, 124(sp)
   248b0:	de 03 02 05 	add_i sp, sp, 128
   248b4:	1f 00 00 f0 	ret

00000000000248b8 A_Hoof:
   248b8:	de 03 ff 05 	add_i sp, sp, -64
   248bc:	1e f3 00 88 	store_32 s24, 60(sp)
   248c0:	fe e3 00 88 	store_32 ra, 56(sp)
   248c4:	20 50 01 0f 	move s1, 84
   248c8:	00 03 f0 c0 	move s24, s0
   248cc:	c6 9e 00 f8 	call 162584 <S_StartSound>
   248d0:	00 00 fc c0 	move s0, s24
   248d4:	4c f6 ff f9 	call -9936 <A_Chase>
   248d8:	fe e3 00 a8 	load_32 ra, 56(sp)
   248dc:	1e f3 00 a8 	load_32 s24, 60(sp)
   248e0:	de 03 01 05 	add_i sp, sp, 64
   248e4:	1f 00 00 f0 	ret

00000000000248e8 A_Metal:
   248e8:	de 03 ff 05 	add_i sp, sp, -64
   248ec:	1e f3 00 88 	store_32 s24, 60(sp)
   248f0:	fe e3 00 88 	store_32 ra, 56(sp)
   248f4:	20 54 01 0f 	move s1, 85
   248f8:	00 03 f0 c0 	move s24, s0
   248fc:	ba 9e 00 f8 	call 162536 <S_StartSound>
   24900:	00 00 fc c0 	move s0, s24
   24904:	40 f6 ff f9 	call -9984 <A_Chase>
   24908:	fe e3 00 a8 	load_32 ra, 56(sp)
   2490c:	1e f3 00 a8 	load_32 s24, 60(sp)
   24910:	de 03 01 05 	add_i sp, sp, 64
   24914:	1f 00 00 f0 	ret

0000000000024918 A_BabyMetal:
   24918:	de 03 ff 05 	add_i sp, sp, -64
   2491c:	1e f3 00 88 	store_32 s24, 60(sp)
   24920:	fe e3 00 88 	store_32 ra, 56(sp)
   24924:	20 3c 01 0f 	move s1, 79
   24928:	00 03 f0 c0 	move s24, s0
   2492c:	ae 9e 00 f8 	call 162488 <S_StartSound>
   24930:	00 00 fc c0 	move s0, s24
   24934:	34 f6 ff f9 	call -10032 <A_Chase>
   24938:	fe e3 00 a8 	load_32 ra, 56(sp)
   2493c:	1e f3 00 a8 	load_32 s24, 60(sp)
   24940:	de 03 01 05 	add_i sp, sp, 64
   24944:	1f 00 00 f0 	ret

0000000000024948 A_OpenShotgun2:
   24948:	de 03 ff 05 	add_i sp, sp, -64
   2494c:	fe f3 00 88 	store_32 ra, 60(sp)
   24950:	00 00 00 a8 	load_32 s0, (s0)
   24954:	20 14 00 0f 	move s1, 5
   24958:	a3 9e 00 f8 	call 162444 <S_StartSound>
   2495c:	fe f3 00 a8 	load_32 ra, 60(sp)
   24960:	de 03 01 05 	add_i sp, sp, 64
   24964:	1f 00 00 f0 	ret

0000000000024968 A_LoadShotgun2:
   24968:	de 03 ff 05 	add_i sp, sp, -64
   2496c:	fe f3 00 88 	store_32 ra, 60(sp)
   24970:	00 00 00 a8 	load_32 s0, (s0)
   24974:	20 1c 00 0f 	move s1, 7
   24978:	9b 9e 00 f8 	call 162412 <S_StartSound>
   2497c:	fe f3 00 a8 	load_32 ra, 60(sp)
   24980:	de 03 01 05 	add_i sp, sp, 64
   24984:	1f 00 00 f0 	ret

0000000000024988 A_CloseShotgun2:
   24988:	de 03 ff 05 	add_i sp, sp, -64
   2498c:	1e f3 00 88 	store_32 s24, 60(sp)
   24990:	3e e3 00 88 	store_32 s25, 56(sp)
   24994:	fe d3 00 88 	store_32 ra, 52(sp)
   24998:	00 83 f0 c0 	move s24, s1
   2499c:	20 03 f0 c0 	move s25, s0
   249a0:	20 18 00 0f 	move s1, 6
   249a4:	19 00 00 a8 	load_32 s0, (s25)
   249a8:	8f 9e 00 f8 	call 162364 <S_StartSound>
   249ac:	00 80 fc c0 	move s0, s25
   249b0:	20 00 fc c0 	move s1, s24
   249b4:	f7 1e 00 f8 	call 31708 <A_ReFire>
   249b8:	fe d3 00 a8 	load_32 ra, 52(sp)
   249bc:	3e e3 00 a8 	load_32 s25, 56(sp)
   249c0:	1e f3 00 a8 	load_32 s24, 60(sp)
   249c4:	de 03 01 05 	add_i sp, sp, 64
   249c8:	1f 00 00 f0 	ret

00000000000249cc A_BrainAwake:
   249cc:	de 03 ff 05 	add_i sp, sp, -64
   249d0:	fe f3 00 88 	store_32 ra, 60(sp)
   249d4:	1b 04 00 4f 	movehi s0, 59
   249d8:	5b 04 00 4f 	movehi s2, 59
   249dc:	7c 04 00 4f 	movehi s3, 60
   249e0:	00 90 2a 00 	or s0, s0, 2724
   249e4:	82 70 28 00 	or s4, s2, 2588
   249e8:	43 50 02 00 	or s2, s3, 148
   249ec:	20 00 00 0f 	move s1, 0
   249f0:	20 00 00 88 	store_32 s1, (s0)
   249f4:	24 00 00 88 	store_32 s1, (s4)
   249f8:	62 10 00 a8 	load_32 s3, 4(s2)
   249fc:	83 00 01 c1 	cmpeq_i s4, s3, s2
   24a00:	64 02 00 f4 	bnz s4, 76 <A_BrainAwake+0x80>
   24a04:	99 00 00 4f 	movehi s4, 25
   24a08:	bb 04 00 4f 	movehi s5, 59
   24a0c:	84 50 31 00 	or s4, s4, 3156
   24a10:	a5 80 28 00 	or s5, s5, 2592
   24a14:	c3 20 00 a8 	load_32 s6, 8(s3)
   24a18:	c6 00 12 c1 	cmpne_i s6, s6, s4
   24a1c:	26 01 00 f4 	bnz s6, 36 <A_BrainAwake+0x74>
   24a20:	c3 60 01 a8 	load_32 s6, 88(s3)
   24a24:	c6 6c 00 11 	cmpne_i s6, s6, 27
   24a28:	c6 00 00 f4 	bnz s6, 24 <A_BrainAwake+0x74>
   24a2c:	c1 08 00 0b 	shl s6, s1, 2
   24a30:	c5 00 53 c0 	add_i s6, s5, s6
   24a34:	21 04 00 05 	add_i s1, s1, 1
   24a38:	66 00 00 88 	store_32 s3, (s6)
   24a3c:	20 00 00 88 	store_32 s1, (s0)
   24a40:	63 10 00 a8 	load_32 s3, 4(s3)
   24a44:	c3 00 11 c1 	cmpne_i s6, s3, s2
   24a48:	66 fe ff f5 	bnz s6, -52 <A_BrainAwake+0x48>
   24a4c:	00 00 00 0f 	move s0, 0
   24a50:	20 80 01 0f 	move s1, 96
   24a54:	64 9e 00 f8 	call 162192 <S_StartSound>
   24a58:	fe f3 00 a8 	load_32 ra, 60(sp)
   24a5c:	de 03 01 05 	add_i sp, sp, 64
   24a60:	1f 00 00 f0 	ret

0000000000024a64 A_BrainPain:
   24a64:	de 03 ff 05 	add_i sp, sp, -64
   24a68:	fe f3 00 88 	store_32 ra, 60(sp)
   24a6c:	00 00 00 0f 	move s0, 0
   24a70:	20 84 01 0f 	move s1, 97
   24a74:	5c 9e 00 f8 	call 162160 <S_StartSound>
   24a78:	fe f3 00 a8 	load_32 ra, 60(sp)
   24a7c:	de 03 01 05 	add_i sp, sp, 64
   24a80:	1f 00 00 f0 	ret

0000000000024a84 A_BrainScream:
   24a84:	de 03 ff 05 	add_i sp, sp, -64
   24a88:	1e f3 00 88 	store_32 s24, 60(sp)
   24a8c:	3e e3 00 88 	store_32 s25, 56(sp)
   24a90:	5e d3 00 88 	store_32 s26, 52(sp)
   24a94:	7e c3 00 88 	store_32 s27, 48(sp)
   24a98:	fe b3 00 88 	store_32 ra, 44(sp)
   24a9c:	00 03 f0 c0 	move s24, s0
   24aa0:	20 3c ff 4f 	movehi s1, 522720
   24aa4:	60 3b 01 4f 	movehi s27, 2496
   24aa8:	18 30 00 a8 	load_32 s0, 12(s24)
   24aac:	20 83 50 c0 	add_i s25, s0, s1
   24ab0:	00 c0 fe 4f 	movehi s0, 521728
   24ab4:	1e a0 00 88 	store_32 s0, 40(sp)
   24ab8:	00 84 00 0f 	move s0, 33
   24abc:	1e 90 00 88 	store_32 s0, 36(sp)
   24ac0:	00 7c 0c 0f 	move s0, 799
   24ac4:	1e 80 00 88 	store_32 s0, 32(sp)
   24ac8:	00 04 00 0f 	move s0, 1
   24acc:	1e 60 00 88 	store_32 s0, 24(sp)
   24ad0:	00 08 00 4f 	movehi s0, 64
   24ad4:	1e 70 00 88 	store_32 s0, 28(sp)
   24ad8:	18 40 00 a8 	load_32 s0, 16(s24)
   24adc:	3e a0 00 a8 	load_32 s1, 40(sp)
   24ae0:	40 83 50 c0 	add_i s26, s0, s1
   24ae4:	04 de ff f9 	call -34800 <P_Random>
   24ae8:	00 44 00 0b 	shl s0, s0, 17
   24aec:	40 00 02 00 	or s2, s0, 128
   24af0:	00 80 fc c0 	move s0, s25
   24af4:	20 00 fd c0 	move s1, s26
   24af8:	7e 90 00 a8 	load_32 s3, 36(sp)
   24afc:	f3 37 00 f8 	call 57292 <P_SpawnMobj>
   24b00:	40 03 f0 c0 	move s26, s0
   24b04:	fc dd ff f9 	call -34832 <P_Random>
   24b08:	00 24 00 0b 	shl s0, s0, 9
   24b0c:	1a 40 01 88 	store_32 s0, 80(s26)
   24b10:	00 00 fd c0 	move s0, s26
   24b14:	3e 80 00 a8 	load_32 s1, 32(sp)
   24b18:	c0 34 00 f8 	call 54016 <P_SetMobjState>
   24b1c:	f6 dd ff f9 	call -34856 <P_Random>
   24b20:	3a 80 01 a8 	load_32 s1, 96(s26)
   24b24:	00 1c 00 01 	and s0, s0, 7
   24b28:	01 00 60 c0 	sub_i s0, s1, s0
   24b2c:	20 04 00 12 	cmpgt_i s1, s0, 1
   24b30:	41 00 00 f4 	bnz s1, 8 <A_BrainScream+0xb4>
   24b34:	1e 60 00 a8 	load_32 s0, 24(sp)
   24b38:	1a 80 01 88 	store_32 s0, 96(s26)
   24b3c:	18 30 00 a8 	load_32 s0, 12(s24)
   24b40:	3e 70 00 a8 	load_32 s1, 28(sp)
   24b44:	00 80 5d c0 	add_i s0, s0, s27
   24b48:	19 00 40 c1 	cmplt_i s0, s25, s0
   24b4c:	39 83 50 c0 	add_i s25, s25, s1
   24b50:	40 fc ff f5 	bnz s0, -120 <A_BrainScream+0x54>
   24b54:	00 00 00 0f 	move s0, 0
   24b58:	20 88 01 0f 	move s1, 98
   24b5c:	22 9e 00 f8 	call 161928 <S_StartSound>
   24b60:	fe b3 00 a8 	load_32 ra, 44(sp)
   24b64:	7e c3 00 a8 	load_32 s27, 48(sp)
   24b68:	5e d3 00 a8 	load_32 s26, 52(sp)
   24b6c:	3e e3 00 a8 	load_32 s25, 56(sp)
   24b70:	1e f3 00 a8 	load_32 s24, 60(sp)
   24b74:	de 03 01 05 	add_i sp, sp, 64
   24b78:	1f 00 00 f0 	ret

0000000000024b7c A_BrainExplode:
   24b7c:	de 03 ff 05 	add_i sp, sp, -64
   24b80:	1e f3 00 88 	store_32 s24, 60(sp)
   24b84:	3e e3 00 88 	store_32 s25, 56(sp)
   24b88:	5e d3 00 88 	store_32 s26, 52(sp)
   24b8c:	fe c3 00 88 	store_32 ra, 48(sp)
   24b90:	00 03 f0 c0 	move s24, s0
   24b94:	58 33 00 a8 	load_32 s26, 12(s24)
   24b98:	d7 dd ff f9 	call -34980 <P_Random>
   24b9c:	20 03 f0 c0 	move s25, s0
   24ba0:	d5 dd ff f9 	call -34988 <P_Random>
   24ba4:	19 00 60 c0 	sub_i s0, s25, s0
   24ba8:	18 43 00 a8 	load_32 s24, 16(s24)
   24bac:	00 2c 00 0b 	shl s0, s0, 11
   24bb0:	20 03 5d c0 	add_i s25, s0, s26
   24bb4:	d0 dd ff f9 	call -35008 <P_Random>
   24bb8:	00 44 00 0b 	shl s0, s0, 17
   24bbc:	60 84 00 0f 	move s3, 33
   24bc0:	40 00 02 00 	or s2, s0, 128
   24bc4:	00 80 fc c0 	move s0, s25
   24bc8:	20 00 fc c0 	move s1, s24
   24bcc:	bf 37 00 f8 	call 57084 <P_SpawnMobj>
   24bd0:	00 03 f0 c0 	move s24, s0
   24bd4:	c8 dd ff f9 	call -35040 <P_Random>
   24bd8:	00 24 00 0b 	shl s0, s0, 9
   24bdc:	18 40 01 88 	store_32 s0, 80(s24)
   24be0:	20 7c 0c 0f 	move s1, 799
   24be4:	00 00 fc c0 	move s0, s24
   24be8:	8c 34 00 f8 	call 53808 <P_SetMobjState>
   24bec:	c2 dd ff f9 	call -35064 <P_Random>
   24bf0:	38 80 01 a8 	load_32 s1, 96(s24)
   24bf4:	00 1c 00 01 	and s0, s0, 7
   24bf8:	01 00 60 c0 	sub_i s0, s1, s0
   24bfc:	20 04 00 12 	cmpgt_i s1, s0, 1
   24c00:	41 00 00 f4 	bnz s1, 8 <A_BrainExplode+0x8c>
   24c04:	00 04 00 0f 	move s0, 1
   24c08:	18 80 01 88 	store_32 s0, 96(s24)
   24c0c:	fe c3 00 a8 	load_32 ra, 48(sp)
   24c10:	5e d3 00 a8 	load_32 s26, 52(sp)
   24c14:	3e e3 00 a8 	load_32 s25, 56(sp)
   24c18:	1e f3 00 a8 	load_32 s24, 60(sp)
   24c1c:	de 03 01 05 	add_i sp, sp, 64
   24c20:	1f 00 00 f0 	ret

0000000000024c24 A_BrainDie:
   24c24:	de 03 ff 05 	add_i sp, sp, -64
   24c28:	fe f3 00 88 	store_32 ra, 60(sp)
   24c2c:	14 c9 ff f9 	call -56240 <G_ExitLevel>
   24c30:	fe f3 00 a8 	load_32 ra, 60(sp)
   24c34:	de 03 01 05 	add_i sp, sp, 64
   24c38:	1f 00 00 f0 	ret

0000000000024c3c A_BrainSpit:
   24c3c:	de 03 ff 05 	add_i sp, sp, -64
   24c40:	1e f3 00 88 	store_32 s24, 60(sp)
   24c44:	3e e3 00 88 	store_32 s25, 56(sp)
   24c48:	5e d3 00 88 	store_32 s26, 52(sp)
   24c4c:	fe c3 00 88 	store_32 ra, 48(sp)
   24c50:	20 0c 00 4f 	movehi s1, 96
   24c54:	7a 04 00 4f 	movehi s3, 58
   24c58:	21 f0 26 00 	or s1, s1, 2492
   24c5c:	41 00 00 a8 	load_32 s2, (s1)
   24c60:	00 03 f0 c0 	move s24, s0
   24c64:	03 90 7f 00 	or s0, s3, 8164
   24c68:	42 04 00 03 	xor s2, s2, 1
   24c6c:	41 00 00 88 	store_32 s2, (s1)
   24c70:	00 00 00 a8 	load_32 s0, (s0)
   24c74:	62 00 00 f4 	bnz s2, 12 <A_BrainSpit+0x44>
   24c78:	00 08 00 18 	cmplt_u s0, s0, 2
   24c7c:	20 04 00 f4 	bnz s0, 132 <A_BrainSpit+0xc4>
   24c80:	1b 04 00 4f 	movehi s0, 59
   24c84:	3b 04 00 4f 	movehi s1, 59
   24c88:	7b 04 00 4f 	movehi s3, 59
   24c8c:	40 73 28 00 	or s26, s0, 2588
   24c90:	21 80 28 00 	or s1, s1, 2592
   24c94:	1a 00 00 a8 	load_32 s0, (s26)
   24c98:	40 08 00 0b 	shl s2, s0, 2
   24c9c:	21 00 51 c0 	add_i s1, s1, s2
   24ca0:	43 90 2a 00 	or s2, s3, 2724
   24ca4:	00 04 00 05 	add_i s0, s0, 1
   24ca8:	21 03 00 a8 	load_32 s25, (s1)
   24cac:	22 00 00 a8 	load_32 s1, (s2)
   24cb0:	92 bf 00 f8 	call 196168 <__modsi3>
   24cb4:	1a 00 00 88 	store_32 s0, (s26)
   24cb8:	00 00 fc c0 	move s0, s24
   24cbc:	40 70 00 0f 	move s2, 28
   24cc0:	20 80 fc c0 	move s1, s25
   24cc4:	54 3a 00 f8 	call 59728 <P_SpawnMissile>
   24cc8:	40 03 f0 c0 	move s26, s0
   24ccc:	3a e3 01 88 	store_32 s25, 120(s26)
   24cd0:	19 40 00 a8 	load_32 s0, 16(s25)
   24cd4:	38 40 00 a8 	load_32 s1, 16(s24)
   24cd8:	00 80 60 c0 	sub_i s0, s0, s1
   24cdc:	3a 30 01 a8 	load_32 s1, 76(s26)
   24ce0:	5e bf 00 f8 	call 195960 <__divsi3>
   24ce4:	3a 90 01 a8 	load_32 s1, 100(s26)
   24ce8:	21 20 00 a8 	load_32 s1, 8(s1)
   24cec:	5b bf 00 f8 	call 195948 <__divsi3>
   24cf0:	1a f0 01 88 	store_32 s0, 124(s26)
   24cf4:	00 00 00 0f 	move s0, 0
   24cf8:	20 78 01 0f 	move s1, 94
   24cfc:	ba 9d 00 f8 	call 161512 <S_StartSound>
   24d00:	fe c3 00 a8 	load_32 ra, 48(sp)
   24d04:	5e d3 00 a8 	load_32 s26, 52(sp)
   24d08:	3e e3 00 a8 	load_32 s25, 56(sp)
   24d0c:	1e f3 00 a8 	load_32 s24, 60(sp)
   24d10:	de 03 01 05 	add_i sp, sp, 64
   24d14:	1f 00 00 f0 	ret

0000000000024d18 A_SpawnSound:
   24d18:	de 03 ff 05 	add_i sp, sp, -64
   24d1c:	1e f3 00 88 	store_32 s24, 60(sp)
   24d20:	fe e3 00 88 	store_32 ra, 56(sp)
   24d24:	20 7c 01 0f 	move s1, 95
   24d28:	00 03 f0 c0 	move s24, s0
   24d2c:	ae 9d 00 f8 	call 161464 <S_StartSound>
   24d30:	00 00 fc c0 	move s0, s24
   24d34:	05 00 00 f8 	call 20 <A_SpawnFly>
   24d38:	fe e3 00 a8 	load_32 ra, 56(sp)
   24d3c:	1e f3 00 a8 	load_32 s24, 60(sp)
   24d40:	de 03 01 05 	add_i sp, sp, 64
   24d44:	1f 00 00 f0 	ret

0000000000024d48 A_SpawnFly:
   24d48:	de 03 ff 05 	add_i sp, sp, -64
   24d4c:	1e f3 00 88 	store_32 s24, 60(sp)
   24d50:	3e e3 00 88 	store_32 s25, 56(sp)
   24d54:	5e d3 00 88 	store_32 s26, 52(sp)
   24d58:	7e c3 00 88 	store_32 s27, 48(sp)
   24d5c:	fe b3 00 88 	store_32 ra, 44(sp)
   24d60:	20 f0 01 a8 	load_32 s1, 124(s0)
   24d64:	21 fc ff 05 	add_i s1, s1, -1
   24d68:	20 f0 01 88 	store_32 s1, 124(s0)
   24d6c:	c1 0e 00 f4 	bnz s1, 472 <A_SpawnFly+0x1fc>
   24d70:	1e 80 00 88 	store_32 s0, 32(sp)
   24d74:	60 74 00 0f 	move s3, 29
   24d78:	20 e3 01 a8 	load_32 s25, 120(s0)
   24d7c:	19 30 00 a8 	load_32 s0, 12(s25)
   24d80:	39 40 00 a8 	load_32 s1, 16(s25)
   24d84:	59 50 00 a8 	load_32 s2, 20(s25)
   24d88:	50 37 00 f8 	call 56640 <P_SpawnMobj>
   24d8c:	20 8c 00 0f 	move s1, 35
   24d90:	95 9d 00 f8 	call 161364 <S_StartSound>
   24d94:	58 dd ff f9 	call -35488 <P_Random>
   24d98:	20 c8 00 14 	cmplt_i s1, s0, 50
   24d9c:	41 00 00 f4 	bnz s1, 8 <A_SpawnFly+0x5c>
   24da0:	03 00 00 f6 	b 12 <A_SpawnFly+0x64>
   24da4:	60 2c 00 0f 	move s3, 11
   24da8:	2e 00 00 f6 	b 184 <A_SpawnFly+0x118>
   24dac:	20 68 01 14 	cmplt_i s1, s0, 90
   24db0:	41 00 00 f4 	bnz s1, 8 <A_SpawnFly+0x70>
   24db4:	03 00 00 f6 	b 12 <A_SpawnFly+0x78>
   24db8:	60 30 00 0f 	move s3, 12
   24dbc:	29 00 00 f6 	b 164 <A_SpawnFly+0x118>
   24dc0:	20 e0 01 14 	cmplt_i s1, s0, 120
   24dc4:	41 00 00 f4 	bnz s1, 8 <A_SpawnFly+0x84>
   24dc8:	03 00 00 f6 	b 12 <A_SpawnFly+0x8c>
   24dcc:	60 34 00 0f 	move s3, 13
   24dd0:	24 00 00 f6 	b 144 <A_SpawnFly+0x118>
   24dd4:	20 08 02 14 	cmplt_i s1, s0, 130
   24dd8:	41 00 00 f4 	bnz s1, 8 <A_SpawnFly+0x98>
   24ddc:	03 00 00 f6 	b 12 <A_SpawnFly+0xa0>
   24de0:	60 58 00 0f 	move s3, 22
   24de4:	1f 00 00 f6 	b 124 <A_SpawnFly+0x118>
   24de8:	20 80 02 14 	cmplt_i s1, s0, 160
   24dec:	41 00 00 f4 	bnz s1, 8 <A_SpawnFly+0xac>
   24df0:	03 00 00 f6 	b 12 <A_SpawnFly+0xb4>
   24df4:	60 38 00 0f 	move s3, 14
   24df8:	1a 00 00 f6 	b 104 <A_SpawnFly+0x118>
   24dfc:	20 88 02 14 	cmplt_i s1, s0, 162
   24e00:	41 00 00 f4 	bnz s1, 8 <A_SpawnFly+0xc0>
   24e04:	03 00 00 f6 	b 12 <A_SpawnFly+0xc8>
   24e08:	60 0c 00 0f 	move s3, 3
   24e0c:	15 00 00 f6 	b 84 <A_SpawnFly+0x118>
   24e10:	20 b0 02 14 	cmplt_i s1, s0, 172
   24e14:	41 00 00 f4 	bnz s1, 8 <A_SpawnFly+0xd4>
   24e18:	03 00 00 f6 	b 12 <A_SpawnFly+0xdc>
   24e1c:	60 14 00 0f 	move s3, 5
   24e20:	10 00 00 f6 	b 64 <A_SpawnFly+0x118>
   24e24:	20 00 03 14 	cmplt_i s1, s0, 192
   24e28:	41 00 00 f4 	bnz s1, 8 <A_SpawnFly+0xe8>
   24e2c:	03 00 00 f6 	b 12 <A_SpawnFly+0xf0>
   24e30:	60 50 00 0f 	move s3, 20
   24e34:	0b 00 00 f6 	b 44 <A_SpawnFly+0x118>
   24e38:	20 78 03 14 	cmplt_i s1, s0, 222
   24e3c:	41 00 00 f4 	bnz s1, 8 <A_SpawnFly+0xfc>
   24e40:	03 00 00 f6 	b 12 <A_SpawnFly+0x104>
   24e44:	60 20 00 0f 	move s3, 8
   24e48:	06 00 00 f6 	b 24 <A_SpawnFly+0x118>
   24e4c:	00 d8 03 14 	cmplt_i s0, s0, 246
   24e50:	60 00 00 f4 	bnz s0, 12 <A_SpawnFly+0x114>
   24e54:	60 3c 00 0f 	move s3, 15
   24e58:	02 00 00 f6 	b 8 <A_SpawnFly+0x118>
   24e5c:	60 44 00 0f 	move s3, 17
   24e60:	19 30 00 a8 	load_32 s0, 12(s25)
   24e64:	39 40 00 a8 	load_32 s1, 16(s25)
   24e68:	59 50 00 a8 	load_32 s2, 20(s25)
   24e6c:	17 37 00 f8 	call 56412 <P_SpawnMobj>
   24e70:	20 03 f0 c0 	move s25, s0
   24e74:	5b 04 00 4f 	movehi s2, 59
   24e78:	60 03 00 0f 	move s27, 0
   24e7c:	19 20 02 a8 	load_32 s0, 136(s25)
   24e80:	20 fc ff 05 	add_i s1, s0, -1
   24e84:	21 0c 00 01 	and s1, s1, 3
   24e88:	3e a0 00 88 	store_32 s1, 40(sp)
   24e8c:	3b 04 00 4f 	movehi s1, 59
   24e90:	01 03 02 00 	or s24, s1, 128
   24e94:	22 40 02 00 	or s1, s2, 144
   24e98:	3e 90 00 88 	store_32 s1, 36(sp)
   24e9c:	20 08 00 0b 	shl s1, s0, 2
   24ea0:	38 80 50 c0 	add_i s1, s24, s1
   24ea4:	21 00 00 a8 	load_32 s1, (s1)
   24ea8:	41 00 00 f2 	bz s1, 8 <A_SpawnFly+0x168>
   24eac:	08 00 00 f6 	b 32 <A_SpawnFly+0x184>
   24eb0:	00 04 00 05 	add_i s0, s0, 1
   24eb4:	00 0c 00 01 	and s0, s0, 3
   24eb8:	19 20 02 88 	store_32 s0, 136(s25)
   24ebc:	20 08 00 0b 	shl s1, s0, 2
   24ec0:	38 80 50 c0 	add_i s1, s24, s1
   24ec4:	21 00 00 a8 	load_32 s1, (s1)
   24ec8:	41 ff ff f3 	bz s1, -24 <A_SpawnFly+0x168>
   24ecc:	3e a0 00 a8 	load_32 s1, 40(sp)
   24ed0:	20 80 00 c1 	cmpeq_i s1, s0, s1
   24ed4:	c1 02 00 f4 	bnz s1, 88 <A_SpawnFly+0x1e4>
   24ed8:	3b 08 00 10 	cmpeq_i s1, s27, 2
   24edc:	81 02 00 f4 	bnz s1, 80 <A_SpawnFly+0x1e4>
   24ee0:	5e 90 00 a8 	load_32 s2, 36(sp)
   24ee4:	20 60 04 07 	mull_i s1, s0, 280
   24ee8:	7b 07 00 05 	add_i s27, s27, 1
   24eec:	42 83 50 c0 	add_i s26, s2, s1
   24ef0:	3a 80 00 a8 	load_32 s1, 32(s26)
   24ef4:	21 04 00 14 	cmplt_i s1, s1, 1
   24ef8:	c1 fd ff f5 	bnz s1, -72 <A_SpawnFly+0x168>
   24efc:	3a 00 00 a8 	load_32 s1, (s26)
   24f00:	00 80 fc c0 	move s0, s25
   24f04:	2c 2b 00 f8 	call 44208 <P_CheckSight>
   24f08:	60 00 00 f4 	bnz s0, 12 <A_SpawnFly+0x1cc>
   24f0c:	19 20 02 a8 	load_32 s0, 136(s25)
   24f10:	e8 ff ff f7 	b -96 <A_SpawnFly+0x168>
   24f14:	1a 00 00 a8 	load_32 s0, (s26)
   24f18:	19 e0 01 88 	store_32 s0, 120(s25)
   24f1c:	19 70 01 a8 	load_32 s0, 92(s25)
   24f20:	20 30 00 a8 	load_32 s1, 12(s0)
   24f24:	00 80 fc c0 	move s0, s25
   24f28:	bc 33 00 f8 	call 52976 <P_SetMobjState>
   24f2c:	39 30 00 a8 	load_32 s1, 12(s25)
   24f30:	59 40 00 a8 	load_32 s2, 16(s25)
   24f34:	00 80 fc c0 	move s0, s25
   24f38:	4f 0a 00 f8 	call 10556 <P_TeleportMove>
   24f3c:	1e 80 00 a8 	load_32 s0, 32(sp)
   24f40:	11 34 00 f8 	call 53316 <P_RemoveMobj>
   24f44:	fe b3 00 a8 	load_32 ra, 44(sp)
   24f48:	7e c3 00 a8 	load_32 s27, 48(sp)
   24f4c:	5e d3 00 a8 	load_32 s26, 52(sp)
   24f50:	3e e3 00 a8 	load_32 s25, 56(sp)
   24f54:	1e f3 00 a8 	load_32 s24, 60(sp)
   24f58:	de 03 01 05 	add_i sp, sp, 64
   24f5c:	1f 00 00 f0 	ret

0000000000024f60 A_PlayerScream:
   24f60:	de 03 ff 05 	add_i sp, sp, -64
   24f64:	fe f3 00 88 	store_32 ra, 60(sp)
   24f68:	2b 04 00 4f 	movehi s1, 43
   24f6c:	21 00 40 00 	or s1, s1, 4096
   24f70:	21 00 00 a8 	load_32 s1, (s1)
   24f74:	21 08 00 11 	cmpne_i s1, s1, 2
   24f78:	81 00 00 f4 	bnz s1, 16 <A_PlayerScream+0x28>
   24f7c:	20 b0 01 a8 	load_32 s1, 108(s0)
   24f80:	21 38 ff 14 	cmplt_i s1, s1, -50
   24f84:	c1 00 00 f4 	bnz s1, 24 <A_PlayerScream+0x3c>
   24f88:	20 e4 00 0f 	move s1, 57
   24f8c:	16 9d 00 f8 	call 160856 <S_StartSound>
   24f90:	fe f3 00 a8 	load_32 ra, 60(sp)
   24f94:	de 03 01 05 	add_i sp, sp, 64
   24f98:	1f 00 00 f0 	ret
   24f9c:	20 e8 00 0f 	move s1, 58
   24fa0:	11 9d 00 f8 	call 160836 <S_StartSound>
   24fa4:	fe f3 00 a8 	load_32 ra, 60(sp)
   24fa8:	de 03 01 05 	add_i sp, sp, 64
   24fac:	1f 00 00 f0 	ret

0000000000024fb0 T_MovePlane:
   24fb0:	de 03 ff 05 	add_i sp, sp, -64
   24fb4:	1e f3 00 88 	store_32 s24, 60(sp)
   24fb8:	3e e3 00 88 	store_32 s25, 56(sp)
   24fbc:	5e d3 00 88 	store_32 s26, 52(sp)
   24fc0:	7e c3 00 88 	store_32 s27, 48(sp)
   24fc4:	fe b3 00 88 	store_32 ra, 44(sp)
   24fc8:	20 83 f1 c0 	move s25, s3
   24fcc:	40 03 f0 c0 	move s26, s0
   24fd0:	04 04 00 10 	cmpeq_i s0, s4, 1
   24fd4:	00 03 00 0f 	move s24, 0
   24fd8:	e0 02 00 f4 	bnz s0, 92 <T_MovePlane+0x84>
   24fdc:	24 0a 00 f4 	bnz s4, 324 <T_MovePlane+0x170>
   24fe0:	05 04 00 10 	cmpeq_i s0, s5, 1
   24fe4:	e0 04 00 f4 	bnz s0, 156 <T_MovePlane+0xd0>
   24fe8:	05 fc ff 11 	cmpne_i s0, s5, -1
   24fec:	a0 09 00 f4 	bnz s0, 308 <T_MovePlane+0x170>
   24ff0:	7a 03 00 a8 	load_32 s27, (s26)
   24ff4:	1b 80 60 c0 	sub_i s0, s27, s1
   24ff8:	20 00 31 c1 	cmpge_i s1, s0, s2
   24ffc:	41 00 00 f4 	bnz s1, 8 <T_MovePlane+0x54>
   25000:	24 00 00 f6 	b 144 <T_MovePlane+0xe0>
   25004:	1a 00 00 88 	store_32 s0, (s26)
   25008:	00 00 fd c0 	move s0, s26
   2500c:	20 80 fc c0 	move s1, s25
   25010:	7d 11 00 f8 	call 17908 <P_ChangeSector>
   25014:	00 04 00 11 	cmpne_i s0, s0, 1
   25018:	40 08 00 f4 	bnz s0, 264 <T_MovePlane+0x170>
   2501c:	7a 03 00 88 	store_32 s27, (s26)
   25020:	00 00 fd c0 	move s0, s26
   25024:	20 80 fc c0 	move s1, s25
   25028:	77 11 00 f8 	call 17884 <P_ChangeSector>
   2502c:	00 07 00 0f 	move s24, 1
   25030:	3c 00 00 f6 	b 240 <T_MovePlane+0x170>
   25034:	05 04 00 10 	cmpeq_i s0, s5, 1
   25038:	c0 03 00 f4 	bnz s0, 120 <T_MovePlane+0x100>
   2503c:	05 fc ff 11 	cmpne_i s0, s5, -1
   25040:	00 07 00 f4 	bnz s0, 224 <T_MovePlane+0x170>
   25044:	7a 13 00 a8 	load_32 s27, 4(s26)
   25048:	1b 80 60 c0 	sub_i s0, s27, s1
   2504c:	20 00 31 c1 	cmpge_i s1, s0, s2
   25050:	41 00 00 f4 	bnz s1, 8 <T_MovePlane+0xa8>
   25054:	1b 00 00 f6 	b 108 <T_MovePlane+0x110>
   25058:	1a 10 00 88 	store_32 s0, 4(s26)
   2505c:	00 00 fd c0 	move s0, s26
   25060:	20 80 fc c0 	move s1, s25
   25064:	68 11 00 f8 	call 17824 <P_ChangeSector>
   25068:	00 04 00 11 	cmpne_i s0, s0, 1
   2506c:	a0 05 00 f4 	bnz s0, 180 <T_MovePlane+0x170>
   25070:	19 04 00 10 	cmpeq_i s0, s25, 1
   25074:	00 07 00 0f 	move s24, 1
   25078:	40 05 00 f4 	bnz s0, 168 <T_MovePlane+0x170>
   2507c:	18 00 00 f6 	b 96 <T_MovePlane+0x12c>
   25080:	7a 03 00 a8 	load_32 s27, (s26)
   25084:	1b 80 50 c0 	add_i s0, s27, s1
   25088:	20 00 51 c1 	cmple_i s1, s0, s2
   2508c:	c1 02 00 f4 	bnz s1, 88 <T_MovePlane+0x134>
   25090:	5a 00 00 88 	store_32 s2, (s26)
   25094:	00 00 fd c0 	move s0, s26
   25098:	20 80 fc c0 	move s1, s25
   2509c:	5a 11 00 f8 	call 17768 <P_ChangeSector>
   250a0:	00 04 00 11 	cmpne_i s0, s0, 1
   250a4:	00 0b 00 0f 	move s24, 2
   250a8:	c0 03 00 f4 	bnz s0, 120 <T_MovePlane+0x170>
   250ac:	17 00 00 f6 	b 92 <T_MovePlane+0x158>
   250b0:	7a 13 00 a8 	load_32 s27, 4(s26)
   250b4:	1b 80 50 c0 	add_i s0, s27, s1
   250b8:	20 00 51 c1 	cmple_i s1, s0, s2
   250bc:	a1 02 00 f4 	bnz s1, 84 <T_MovePlane+0x160>
   250c0:	5a 10 00 88 	store_32 s2, 4(s26)
   250c4:	00 00 fd c0 	move s0, s26
   250c8:	20 80 fc c0 	move s1, s25
   250cc:	4e 11 00 f8 	call 17720 <P_ChangeSector>
   250d0:	00 04 00 11 	cmpne_i s0, s0, 1
   250d4:	00 0b 00 0f 	move s24, 2
   250d8:	40 02 00 f4 	bnz s0, 72 <T_MovePlane+0x170>
   250dc:	7a 13 00 88 	store_32 s27, 4(s26)
   250e0:	0d 00 00 f6 	b 52 <T_MovePlane+0x164>
   250e4:	1a 00 00 88 	store_32 s0, (s26)
   250e8:	00 00 fd c0 	move s0, s26
   250ec:	20 80 fc c0 	move s1, s25
   250f0:	45 11 00 f8 	call 17684 <P_ChangeSector>
   250f4:	00 04 00 11 	cmpne_i s0, s0, 1
   250f8:	40 01 00 f4 	bnz s0, 40 <T_MovePlane+0x170>
   250fc:	19 04 00 10 	cmpeq_i s0, s25, 1
   25100:	00 07 00 0f 	move s24, 1
   25104:	e0 00 00 f4 	bnz s0, 28 <T_MovePlane+0x170>
   25108:	7a 03 00 88 	store_32 s27, (s26)
   2510c:	02 00 00 f6 	b 8 <T_MovePlane+0x164>
   25110:	1a 10 00 88 	store_32 s0, 4(s26)
   25114:	00 00 fd c0 	move s0, s26
   25118:	20 80 fc c0 	move s1, s25
   2511c:	3a 11 00 f8 	call 17640 <P_ChangeSector>
   25120:	00 00 fc c0 	move s0, s24
   25124:	fe b3 00 a8 	load_32 ra, 44(sp)
   25128:	7e c3 00 a8 	load_32 s27, 48(sp)
   2512c:	5e d3 00 a8 	load_32 s26, 52(sp)
   25130:	3e e3 00 a8 	load_32 s25, 56(sp)
   25134:	1e f3 00 a8 	load_32 s24, 60(sp)
   25138:	de 03 01 05 	add_i sp, sp, 64
   2513c:	1f 00 00 f0 	ret

0000000000025140 T_MoveFloor:
   25140:	de 03 ff 05 	add_i sp, sp, -64
   25144:	1e f3 00 88 	store_32 s24, 60(sp)
   25148:	3e e3 00 88 	store_32 s25, 56(sp)
   2514c:	5e d3 00 88 	store_32 s26, 52(sp)
   25150:	fe c3 00 88 	store_32 ra, 48(sp)
   25154:	00 03 f0 c0 	move s24, s0
   25158:	20 03 00 0f 	move s25, 0
   2515c:	18 50 00 a8 	load_32 s0, 20(s24)
   25160:	38 a0 00 a8 	load_32 s1, 40(s24)
   25164:	58 90 00 a8 	load_32 s2, 36(s24)
   25168:	78 40 00 a8 	load_32 s3, 16(s24)
   2516c:	b8 60 00 a8 	load_32 s5, 24(s24)
   25170:	80 80 fc c0 	move s4, s25
   25174:	8f ff ff f9 	call -452 <T_MovePlane>
   25178:	3c 04 00 4f 	movehi s1, 60
   2517c:	21 40 02 00 	or s1, s1, 144
   25180:	21 00 00 a0 	load_u8 s1, (s1)
   25184:	40 03 f0 c0 	move s26, s0
   25188:	21 1c 00 01 	and s1, s1, 7
   2518c:	41 00 00 f4 	bnz s1, 8 <T_MoveFloor+0x54>
   25190:	04 00 00 f6 	b 16 <T_MoveFloor+0x60>
   25194:	1a 08 00 11 	cmpne_i s0, s26, 2
   25198:	00 04 00 f4 	bnz s0, 128 <T_MoveFloor+0xd8>
   2519c:	07 00 00 f6 	b 28 <T_MoveFloor+0x78>
   251a0:	18 50 00 a8 	load_32 s0, 20(s24)
   251a4:	20 58 00 0f 	move s1, 22
   251a8:	00 b0 00 05 	add_i s0, s0, 44
   251ac:	8e 9c 00 f8 	call 160312 <S_StartSound>
   251b0:	1a 08 00 11 	cmpne_i s0, s26, 2
   251b4:	20 03 00 f4 	bnz s0, 100 <T_MoveFloor+0xd8>
   251b8:	18 50 00 a8 	load_32 s0, 20(s24)
   251bc:	20 33 01 88 	store_32 s25, 76(s0)
   251c0:	38 60 00 a8 	load_32 s1, 24(s24)
   251c4:	41 fc ff 10 	cmpeq_i s2, s1, -1
   251c8:	e2 00 00 f4 	bnz s2, 28 <T_MoveFloor+0xa4>
   251cc:	21 04 00 11 	cmpne_i s1, s1, 1
   251d0:	81 01 00 f4 	bnz s1, 48 <T_MoveFloor+0xc0>
   251d4:	38 30 00 a8 	load_32 s1, 12(s24)
   251d8:	21 2c 00 11 	cmpne_i s1, s1, 11
   251dc:	21 01 00 f4 	bnz s1, 36 <T_MoveFloor+0xc0>
   251e0:	04 00 00 f6 	b 16 <T_MoveFloor+0xb0>
   251e4:	38 30 00 a8 	load_32 s1, 12(s24)
   251e8:	21 18 00 11 	cmpne_i s1, s1, 6
   251ec:	a1 00 00 f4 	bnz s1, 20 <T_MoveFloor+0xc0>
   251f0:	38 70 00 a8 	load_32 s1, 28(s24)
   251f4:	20 38 00 86 	store_16 s1, 14(s0)
   251f8:	38 80 00 a6 	load_s16 s1, 32(s24)
   251fc:	20 20 00 86 	store_16 s1, 8(s0)
   25200:	00 00 fc c0 	move s0, s24
   25204:	4d 3a 00 f8 	call 59700 <P_RemoveThinker>
   25208:	18 50 00 a8 	load_32 s0, 20(s24)
   2520c:	20 4c 00 0f 	move s1, 19
   25210:	00 b0 00 05 	add_i s0, s0, 44
   25214:	74 9c 00 f8 	call 160208 <S_StartSound>
   25218:	fe c3 00 a8 	load_32 ra, 48(sp)
   2521c:	5e d3 00 a8 	load_32 s26, 52(sp)
   25220:	3e e3 00 a8 	load_32 s25, 56(sp)
   25224:	1e f3 00 a8 	load_32 s24, 60(sp)
   25228:	de 03 01 05 	add_i sp, sp, 64
   2522c:	1f 00 00 f0 	ret

0000000000025230 EV_DoFloor:
   25230:	de 03 fe 05 	add_i sp, sp, -128
   25234:	1e f3 01 88 	store_32 s24, 124(sp)
   25238:	3e e3 01 88 	store_32 s25, 120(sp)
   2523c:	5e d3 01 88 	store_32 s26, 116(sp)
   25240:	7e c3 01 88 	store_32 s27, 112(sp)
   25244:	fe b3 01 88 	store_32 ra, 108(sp)
   25248:	41 24 00 10 	cmpeq_i s2, s1, 9
   2524c:	1e 80 01 88 	store_32 s0, 96(sp)
   25250:	60 b0 00 0f 	move s3, 44
   25254:	60 ff ff 0f 	move s27, -1
   25258:	42 04 00 01 	and s2, s2, 1
   2525c:	02 4c 00 0b 	shl s0, s2, 19
   25260:	1e a0 00 88 	store_32 s0, 40(sp)
   25264:	1b 04 00 4f 	movehi s0, 59
   25268:	7e 50 01 88 	store_32 s3, 84(sp)
   2526c:	60 cc 00 0f 	move s3, 51
   25270:	7e 40 01 88 	store_32 s3, 80(sp)
   25274:	60 04 00 0f 	move s3, 1
   25278:	40 83 4b 00 	or s26, s0, 4832
   2527c:	12 00 00 4f 	movehi s0, 18
   25280:	40 00 00 0f 	move s2, 0
   25284:	00 00 45 00 	or s0, s0, 4416
   25288:	1e 30 01 88 	store_32 s0, 76(sp)
   2528c:	03 00 00 4f 	movehi s0, 3
   25290:	7e a0 01 88 	store_32 s3, 104(sp)
   25294:	3e 70 01 88 	store_32 s1, 92(sp)
   25298:	21 30 00 16 	cmpgt_u s1, s1, 12
   2529c:	3e 20 01 88 	store_32 s1, 72(sp)
   252a0:	3d 04 00 4f 	movehi s1, 61
   252a4:	00 f0 3e 00 	or s0, s0, 4028
   252a8:	1e f0 00 88 	store_32 s0, 60(sp)
   252ac:	08 00 00 4f 	movehi s0, 8
   252b0:	1e d0 00 88 	store_32 s0, 52(sp)
   252b4:	00 04 00 4f 	movehi s0, 32
   252b8:	1e b0 00 88 	store_32 s0, 44(sp)
   252bc:	1f fc 7f 4f 	movehi s0, 262143
   252c0:	60 08 00 4f 	movehi s3, 64
   252c4:	7e 80 00 88 	store_32 s3, 32(sp)
   252c8:	00 fc 7f 00 	or s0, s0, 8191
   252cc:	1e 90 00 88 	store_32 s0, 36(sp)
   252d0:	01 70 48 00 	or s0, s1, 4636
   252d4:	1e e0 00 88 	store_32 s0, 56(sp)
   252d8:	5e 60 01 88 	store_32 s2, 88(sp)
   252dc:	60 00 f1 c0 	move s3, s2
   252e0:	7e c3 00 88 	store_32 s27, 48(sp)
   252e4:	06 00 00 f6 	b 24 <EV_DoFloor+0xcc>
   252e8:	1e a0 00 a8 	load_32 s0, 40(sp)
   252ec:	01 00 60 c0 	sub_i s0, s1, s0
   252f0:	3e 10 01 a8 	load_32 s1, 68(sp)
   252f4:	01 90 00 88 	store_32 s0, 36(s1)
   252f8:	7e a0 01 a8 	load_32 s3, 104(sp)
   252fc:	7e 90 01 88 	store_32 s3, 100(sp)
   25300:	3e 83 01 a8 	load_32 s25, 96(sp)
   25304:	00 80 fc c0 	move s0, s25
   25308:	20 80 fd c0 	move s1, s27
   2530c:	e8 2b 00 f8 	call 44960 <P_FindSectorFromLineTag>
   25310:	60 03 f0 c0 	move s27, s0
   25314:	1b 00 00 14 	cmplt_i s0, s27, 0
   25318:	20 23 00 f4 	bnz s0, 1124 <EV_DoFloor+0x54c>
   2531c:	1a 00 00 a8 	load_32 s0, (s26)
   25320:	3b 60 01 07 	mull_i s1, s27, 88
   25324:	00 83 50 c0 	add_i s24, s0, s1
   25328:	18 30 01 a8 	load_32 s0, 76(s24)
   2532c:	c0 fe ff f5 	bnz s0, -40 <EV_DoFloor+0xd4>
   25330:	18 30 01 05 	add_i s0, s24, 76
   25334:	1e 90 01 88 	store_32 s0, 100(sp)
   25338:	1e 50 01 a8 	load_32 s0, 84(sp)
   2533c:	3e 40 01 a8 	load_32 s1, 80(sp)
   25340:	5e 03 01 88 	store_32 s26, 64(sp)
   25344:	5e 63 01 a8 	load_32 s26, 88(sp)
   25348:	40 00 fd c0 	move s2, s26
   2534c:	63 9d 00 f8 	call 161164 <Z_Malloc>
   25350:	20 03 f0 c0 	move s25, s0
   25354:	f1 39 00 f8 	call 59332 <P_AddThinker>
   25358:	40 80 fc c0 	move s2, s25
   2535c:	1e 90 01 a8 	load_32 s0, 100(sp)
   25360:	40 00 00 88 	store_32 s2, (s0)
   25364:	1e 30 01 a8 	load_32 s0, 76(sp)
   25368:	02 20 00 88 	store_32 s0, 8(s2)
   2536c:	1e 70 01 a8 	load_32 s0, 92(sp)
   25370:	02 30 00 88 	store_32 s0, 12(s2)
   25374:	42 43 00 88 	store_32 s26, 16(s2)
   25378:	5e 03 01 a8 	load_32 s26, 64(sp)
   2537c:	7e a0 01 a8 	load_32 s3, 104(sp)
   25380:	1e 20 01 a8 	load_32 s0, 72(sp)
   25384:	c0 fb ff f5 	bnz s0, -136 <EV_DoFloor+0xcc>
   25388:	1e 70 01 a8 	load_32 s0, 92(sp)
   2538c:	3e f0 00 a8 	load_32 s1, 60(sp)
   25390:	00 08 00 0b 	shl s0, s0, 2
   25394:	00 80 50 c0 	add_i s0, s0, s1
   25398:	00 00 00 a8 	load_32 s0, (s0)
   2539c:	7e a0 01 a8 	load_32 s3, 104(sp)
   253a0:	5e 10 01 88 	store_32 s2, 68(sp)
   253a4:	00 00 00 f0 	b s0
   253a8:	1e c0 00 a8 	load_32 s0, 48(sp)
   253ac:	02 60 00 88 	store_32 s0, 24(s2)
   253b0:	02 53 00 88 	store_32 s24, 20(s2)
   253b4:	1e d0 00 a8 	load_32 s0, 52(sp)
   253b8:	02 a0 00 88 	store_32 s0, 40(s2)
   253bc:	00 00 fc c0 	move s0, s24
   253c0:	00 03 f1 c0 	move s24, s2
   253c4:	19 2b 00 f8 	call 44132 <P_FindHighestFloorSurrounding>
   253c8:	09 00 00 f6 	b 36 <EV_DoFloor+0x1bc>
   253cc:	1e c0 00 a8 	load_32 s0, 48(sp)
   253d0:	02 60 00 88 	store_32 s0, 24(s2)
   253d4:	02 53 00 88 	store_32 s24, 20(s2)
   253d8:	1e d0 00 a8 	load_32 s0, 52(sp)
   253dc:	02 a0 00 88 	store_32 s0, 40(s2)
   253e0:	00 00 fc c0 	move s0, s24
   253e4:	00 03 f1 c0 	move s24, s2
   253e8:	f1 2a 00 f8 	call 43972 <P_FindLowestFloorSurrounding>
   253ec:	18 90 00 88 	store_32 s0, 36(s24)
   253f0:	7e a0 01 a8 	load_32 s3, 104(sp)
   253f4:	c2 ff ff f7 	b -248 <EV_DoFloor+0xcc>
   253f8:	1e c0 00 a8 	load_32 s0, 48(sp)
   253fc:	02 60 00 88 	store_32 s0, 24(s2)
   25400:	02 53 00 88 	store_32 s24, 20(s2)
   25404:	1e b0 00 a8 	load_32 s0, 44(sp)
   25408:	02 a0 00 88 	store_32 s0, 40(s2)
   2540c:	00 00 fc c0 	move s0, s24
   25410:	06 2b 00 f8 	call 44056 <P_FindHighestFloorSurrounding>
   25414:	3e 13 01 a8 	load_32 s25, 68(sp)
   25418:	19 90 00 88 	store_32 s0, 36(s25)
   2541c:	38 00 00 a8 	load_32 s1, (s24)
   25420:	7e a0 01 a8 	load_32 s3, 104(sp)
   25424:	20 80 00 c1 	cmpeq_i s1, s0, s1
   25428:	a1 f6 ff f5 	bnz s1, -300 <EV_DoFloor+0xcc>
   2542c:	3e 80 00 a8 	load_32 s1, 32(sp)
   25430:	00 80 50 c0 	add_i s0, s0, s1
   25434:	19 90 00 88 	store_32 s0, 36(s25)
   25438:	7e a0 01 a8 	load_32 s3, 104(sp)
   2543c:	b0 ff ff f7 	b -320 <EV_DoFloor+0xcc>
   25440:	3e a3 01 a8 	load_32 s25, 104(sp)
   25444:	22 63 00 88 	store_32 s25, 24(s2)
   25448:	02 53 00 88 	store_32 s24, 20(s2)
   2544c:	1e d0 00 a8 	load_32 s0, 52(sp)
   25450:	02 a0 00 88 	store_32 s0, 40(s2)
   25454:	38 00 00 a8 	load_32 s1, (s24)
   25458:	00 00 fc c0 	move s0, s24
   2545c:	00 03 f1 c0 	move s24, s2
   25460:	14 2b 00 f8 	call 44112 <P_FindNextHighestFloor>
   25464:	18 90 00 88 	store_32 s0, 36(s24)
   25468:	60 80 fc c0 	move s3, s25
   2546c:	a4 ff ff f7 	b -368 <EV_DoFloor+0xcc>
   25470:	1e a0 01 a8 	load_32 s0, 104(sp)
   25474:	02 60 00 88 	store_32 s0, 24(s2)
   25478:	02 53 00 88 	store_32 s24, 20(s2)
   2547c:	1e d0 00 a8 	load_32 s0, 52(sp)
   25480:	02 a0 00 88 	store_32 s0, 40(s2)
   25484:	18 40 01 a8 	load_32 s0, 80(s24)
   25488:	00 04 00 14 	cmplt_i s0, s0, 1
   2548c:	40 15 00 f4 	bnz s0, 680 <EV_DoFloor+0x504>
   25490:	18 40 01 05 	add_i s0, s24, 80
   25494:	1e 90 01 88 	store_32 s0, 100(sp)
   25498:	3e 93 00 a8 	load_32 s25, 36(sp)
   2549c:	1e 63 01 a8 	load_32 s24, 88(sp)
   254a0:	00 80 fd c0 	move s0, s27
   254a4:	20 00 fc c0 	move s1, s24
   254a8:	a5 2a 00 f8 	call 43668 <twoSided>
   254ac:	60 04 00 f2 	bz s0, 140 <EV_DoFloor+0x308>
   254b0:	00 80 fd c0 	move s0, s27
   254b4:	20 00 fc c0 	move s1, s24
   254b8:	5e 60 01 a8 	load_32 s2, 88(sp)
   254bc:	7b 2a 00 f8 	call 43500 <getSide>
   254c0:	00 28 00 a6 	load_s16 s0, 10(s0)
   254c4:	20 00 00 14 	cmplt_i s1, s0, 0
   254c8:	41 01 00 f4 	bnz s1, 40 <EV_DoFloor+0x2c0>
   254cc:	3e e0 00 a8 	load_32 s1, 56(sp)
   254d0:	00 08 00 0b 	shl s0, s0, 2
   254d4:	21 00 00 a8 	load_32 s1, (s1)
   254d8:	01 00 50 c0 	add_i s0, s1, s0
   254dc:	00 00 00 a8 	load_32 s0, (s0)
   254e0:	20 80 4c c1 	cmplt_i s1, s0, s25
   254e4:	41 00 00 f4 	bnz s1, 8 <EV_DoFloor+0x2bc>
   254e8:	00 80 fc c0 	move s0, s25
   254ec:	20 03 f0 c0 	move s25, s0
   254f0:	00 80 fd c0 	move s0, s27
   254f4:	20 00 fc c0 	move s1, s24
   254f8:	5e a0 01 a8 	load_32 s2, 104(sp)
   254fc:	6b 2a 00 f8 	call 43436 <getSide>
   25500:	00 28 00 a6 	load_s16 s0, 10(s0)
   25504:	20 00 00 14 	cmplt_i s1, s0, 0
   25508:	81 01 00 f4 	bnz s1, 48 <EV_DoFloor+0x308>
   2550c:	3e e0 00 a8 	load_32 s1, 56(sp)
   25510:	00 08 00 0b 	shl s0, s0, 2
   25514:	21 00 00 a8 	load_32 s1, (s1)
   25518:	01 00 50 c0 	add_i s0, s1, s0
   2551c:	00 00 00 a8 	load_32 s0, (s0)
   25520:	5e 10 01 a8 	load_32 s2, 68(sp)
   25524:	20 80 4c c1 	cmplt_i s1, s0, s25
   25528:	41 00 00 f4 	bnz s1, 8 <EV_DoFloor+0x300>
   2552c:	00 80 fc c0 	move s0, s25
   25530:	20 03 f0 c0 	move s25, s0
   25534:	02 00 00 f6 	b 8 <EV_DoFloor+0x30c>
   25538:	5e 10 01 a8 	load_32 s2, 68(sp)
   2553c:	1e 90 01 a8 	load_32 s0, 100(sp)
   25540:	18 07 00 05 	add_i s24, s24, 1
   25544:	00 00 00 a8 	load_32 s0, (s0)
   25548:	18 00 40 c1 	cmplt_i s0, s24, s0
   2554c:	a0 fa ff f5 	bnz s0, -172 <EV_DoFloor+0x270>
   25550:	02 53 00 a8 	load_32 s24, 20(s2)
   25554:	79 00 00 f6 	b 484 <EV_DoFloor+0x508>
   25558:	1e c0 00 a8 	load_32 s0, 48(sp)
   2555c:	02 60 00 88 	store_32 s0, 24(s2)
   25560:	02 53 00 88 	store_32 s24, 20(s2)
   25564:	1e d0 00 a8 	load_32 s0, 52(sp)
   25568:	02 a0 00 88 	store_32 s0, 40(s2)
   2556c:	00 00 fc c0 	move s0, s24
   25570:	8f 2a 00 f8 	call 43580 <P_FindLowestFloorSurrounding>
   25574:	3e 10 01 a8 	load_32 s1, 68(sp)
   25578:	01 90 00 88 	store_32 s0, 36(s1)
   2557c:	18 20 00 a6 	load_s16 s0, 8(s24)
   25580:	01 80 00 86 	store_16 s0, 32(s1)
   25584:	18 40 01 a8 	load_32 s0, 80(s24)
   25588:	7e a0 01 a8 	load_32 s3, 104(sp)
   2558c:	00 04 00 14 	cmplt_i s0, s0, 1
   25590:	60 eb ff f5 	bnz s0, -660 <EV_DoFloor+0xcc>
   25594:	3e 63 01 a8 	load_32 s25, 88(sp)
   25598:	00 80 fd c0 	move s0, s27
   2559c:	20 80 fc c0 	move s1, s25
   255a0:	67 2a 00 f8 	call 43420 <twoSided>
   255a4:	a0 04 00 f2 	bz s0, 148 <EV_DoFloor+0x408>
   255a8:	00 80 fd c0 	move s0, s27
   255ac:	40 00 00 0f 	move s2, 0
   255b0:	20 80 fc c0 	move s1, s25
   255b4:	3d 2a 00 f8 	call 43252 <getSide>
   255b8:	00 40 00 a8 	load_32 s0, 16(s0)
   255bc:	3a 00 00 a8 	load_32 s1, (s26)
   255c0:	00 80 60 c0 	sub_i s0, s0, s1
   255c4:	34 2c ba 4f 	movehi s1, 381300
   255c8:	00 0c 00 09 	ashr s0, s0, 3
   255cc:	21 8c 2e 00 	or s1, s1, 2979
   255d0:	00 80 70 c0 	mull_i s0, s0, s1
   255d4:	00 80 1d c1 	cmpne_i s0, s0, s27
   255d8:	a0 01 00 f4 	bnz s0, 52 <EV_DoFloor+0x3dc>
   255dc:	20 80 fc c0 	move s1, s25
   255e0:	40 04 00 0f 	move s2, 1
   255e4:	00 80 fd c0 	move s0, s27
   255e8:	5e 90 01 88 	store_32 s2, 100(sp)
   255ec:	41 2a 00 f8 	call 43268 <getSector>
   255f0:	00 03 f0 c0 	move s24, s0
   255f4:	18 00 00 a8 	load_32 s0, (s24)
   255f8:	5e 10 01 a8 	load_32 s2, 68(sp)
   255fc:	22 90 00 a8 	load_32 s1, 36(s2)
   25600:	00 80 10 c1 	cmpne_i s0, s0, s1
   25604:	a0 01 00 f4 	bnz s0, 52 <EV_DoFloor+0x408>
   25608:	51 00 00 f6 	b 324 <EV_DoFloor+0x51c>
   2560c:	00 80 fd c0 	move s0, s27
   25610:	40 00 00 0f 	move s2, 0
   25614:	20 80 fc c0 	move s1, s25
   25618:	36 2a 00 f8 	call 43224 <getSector>
   2561c:	00 03 f0 c0 	move s24, s0
   25620:	18 00 00 a8 	load_32 s0, (s24)
   25624:	5e 10 01 a8 	load_32 s2, 68(sp)
   25628:	22 90 00 a8 	load_32 s1, 36(s2)
   2562c:	00 80 10 c1 	cmpne_i s0, s0, s1
   25630:	40 00 00 f4 	bnz s0, 8 <EV_DoFloor+0x408>
   25634:	4c 00 00 f6 	b 304 <EV_DoFloor+0x534>
   25638:	18 40 01 a8 	load_32 s0, 80(s24)
   2563c:	39 07 00 05 	add_i s25, s25, 1
   25640:	19 00 40 c1 	cmplt_i s0, s25, s0
   25644:	a0 fa ff f5 	bnz s0, -172 <EV_DoFloor+0x368>
   25648:	7e a0 01 a8 	load_32 s3, 104(sp)
   2564c:	2c ff ff f7 	b -848 <EV_DoFloor+0xcc>
   25650:	60 04 00 0f 	move s3, 1
   25654:	62 60 00 88 	store_32 s3, 24(s2)
   25658:	02 53 00 88 	store_32 s24, 20(s2)
   2565c:	20 18 00 4f 	movehi s1, 192
   25660:	2f 00 00 f6 	b 188 <EV_DoFloor+0x4ec>
   25664:	60 04 00 0f 	move s3, 1
   25668:	62 60 00 88 	store_32 s3, 24(s2)
   2566c:	02 53 00 88 	store_32 s24, 20(s2)
   25670:	20 18 00 4f 	movehi s1, 192
   25674:	1e d0 00 a8 	load_32 s0, 52(sp)
   25678:	02 a0 00 88 	store_32 s0, 40(s2)
   2567c:	18 00 00 a8 	load_32 s0, (s24)
   25680:	00 80 50 c0 	add_i s0, s0, s1
   25684:	02 90 00 88 	store_32 s0, 36(s2)
   25688:	1e 80 01 a8 	load_32 s0, 96(sp)
   2568c:	00 c0 00 a8 	load_32 s0, 48(s0)
   25690:	20 20 00 a6 	load_s16 s1, 8(s0)
   25694:	38 20 00 86 	store_16 s1, 8(s24)
   25698:	00 38 00 a6 	load_s16 s0, 14(s0)
   2569c:	18 38 00 86 	store_16 s0, 14(s24)
   256a0:	17 ff ff f7 	b -932 <EV_DoFloor+0xcc>
   256a4:	00 04 00 0f 	move s0, 1
   256a8:	02 40 00 88 	store_32 s0, 16(s2)
   256ac:	1e a0 01 a8 	load_32 s0, 104(sp)
   256b0:	02 60 00 88 	store_32 s0, 24(s2)
   256b4:	02 53 00 88 	store_32 s24, 20(s2)
   256b8:	1e d0 00 a8 	load_32 s0, 52(sp)
   256bc:	02 a0 00 88 	store_32 s0, 40(s2)
   256c0:	00 00 fc c0 	move s0, s24
   256c4:	b5 2a 00 f8 	call 43732 <P_FindLowestCeilingSurrounding>
   256c8:	38 10 00 a8 	load_32 s1, 4(s24)
   256cc:	40 80 20 c1 	cmpgt_i s2, s0, s1
   256d0:	c2 e0 ff f5 	bnz s2, -1000 <EV_DoFloor+0xb8>
   256d4:	20 00 f0 c0 	move s1, s0
   256d8:	04 ff ff f7 	b -1008 <EV_DoFloor+0xb8>
   256dc:	20 07 00 0f 	move s25, 1
   256e0:	22 63 00 88 	store_32 s25, 24(s2)
   256e4:	02 53 00 88 	store_32 s24, 20(s2)
   256e8:	1e b0 00 a8 	load_32 s0, 44(sp)
   256ec:	02 a0 00 88 	store_32 s0, 40(s2)
   256f0:	38 00 00 a8 	load_32 s1, (s24)
   256f4:	00 00 fc c0 	move s0, s24
   256f8:	00 03 f1 c0 	move s24, s2
   256fc:	6d 2a 00 f8 	call 43444 <P_FindNextHighestFloor>
   25700:	60 80 fc c0 	move s3, s25
   25704:	18 90 00 88 	store_32 s0, 36(s24)
   25708:	fd fe ff f7 	b -1036 <EV_DoFloor+0xcc>
   2570c:	60 04 00 0f 	move s3, 1
   25710:	62 60 00 88 	store_32 s3, 24(s2)
   25714:	02 53 00 88 	store_32 s24, 20(s2)
   25718:	20 00 02 4f 	movehi s1, 4096
   2571c:	1e d0 00 a8 	load_32 s0, 52(sp)
   25720:	02 a0 00 88 	store_32 s0, 40(s2)
   25724:	18 00 00 a8 	load_32 s0, (s24)
   25728:	00 80 50 c0 	add_i s0, s0, s1
   2572c:	02 90 00 88 	store_32 s0, 36(s2)
   25730:	f3 fe ff f7 	b -1076 <EV_DoFloor+0xcc>
   25734:	3e 93 00 a8 	load_32 s25, 36(sp)
   25738:	18 00 00 a8 	load_32 s0, (s24)
   2573c:	00 80 5c c0 	add_i s0, s0, s25
   25740:	02 90 00 88 	store_32 s0, 36(s2)
   25744:	7e a0 01 a8 	load_32 s3, 104(sp)
   25748:	ed fe ff f7 	b -1100 <EV_DoFloor+0xcc>
   2574c:	18 20 00 a6 	load_s16 s0, 8(s24)
   25750:	02 80 00 86 	store_16 s0, 32(s2)
   25754:	18 38 00 a6 	load_s16 s0, 14(s24)
   25758:	02 70 00 88 	store_32 s0, 28(s2)
   2575c:	7e 90 01 a8 	load_32 s3, 100(sp)
   25760:	e7 fe ff f7 	b -1124 <EV_DoFloor+0xcc>
   25764:	18 20 00 a6 	load_s16 s0, 8(s24)
   25768:	02 80 00 86 	store_16 s0, 32(s2)
   2576c:	18 38 00 a6 	load_s16 s0, 14(s24)
   25770:	02 70 00 88 	store_32 s0, 28(s2)
   25774:	7e a0 01 a8 	load_32 s3, 104(sp)
   25778:	e1 fe ff f7 	b -1148 <EV_DoFloor+0xcc>
   2577c:	1e 90 01 a8 	load_32 s0, 100(sp)
   25780:	fe b3 01 a8 	load_32 ra, 108(sp)
   25784:	7e c3 01 a8 	load_32 s27, 112(sp)
   25788:	5e d3 01 a8 	load_32 s26, 116(sp)
   2578c:	3e e3 01 a8 	load_32 s25, 120(sp)
   25790:	1e f3 01 a8 	load_32 s24, 124(sp)
   25794:	de 03 02 05 	add_i sp, sp, 128
   25798:	1f 00 00 f0 	ret

000000000002579c EV_BuildStairs:
   2579c:	de 03 fe 05 	add_i sp, sp, -128
   257a0:	1e f3 01 88 	store_32 s24, 124(sp)
   257a4:	3e e3 01 88 	store_32 s25, 120(sp)
   257a8:	5e d3 01 88 	store_32 s26, 116(sp)
   257ac:	7e c3 01 88 	store_32 s27, 112(sp)
   257b0:	fe b3 01 88 	store_32 ra, 108(sp)
   257b4:	1e a0 01 88 	store_32 s0, 104(sp)
   257b8:	1b 04 00 4f 	movehi s0, 59
   257bc:	20 03 00 0f 	move s25, 0
   257c0:	40 ff ff 0f 	move s26, -1
   257c4:	60 83 4b 00 	or s27, s0, 4832
   257c8:	12 00 00 4f 	movehi s0, 18
   257cc:	a1 02 00 f2 	bz s1, 84 <EV_BuildStairs+0x84>
   257d0:	20 b0 00 0f 	move s1, 44
   257d4:	3e 70 01 88 	store_32 s1, 92(sp)
   257d8:	00 00 45 00 	or s0, s0, 4416
   257dc:	20 cc 00 0f 	move s1, 51
   257e0:	3e 60 01 88 	store_32 s1, 88(sp)
   257e4:	1e 50 01 88 	store_32 s0, 84(sp)
   257e8:	00 04 00 0f 	move s0, 1
   257ec:	1e 80 01 88 	store_32 s0, 96(sp)
   257f0:	00 04 00 4f 	movehi s0, 32
   257f4:	1e 40 01 88 	store_32 s0, 80(sp)
   257f8:	14 2c ba 4f 	movehi s0, 381300
   257fc:	27 00 00 4f 	movehi s1, 7
   25800:	c0 10 00 4f 	movehi s6, 128
   25804:	00 8c 2e 00 	or s0, s0, 2979
   25808:	1e 10 01 88 	store_32 s0, 68(sp)
   2580c:	01 fc 7f 00 	or s0, s1, 8191
   25810:	1e 00 01 88 	store_32 s0, 64(sp)
   25814:	3e 93 01 88 	store_32 s25, 100(sp)
   25818:	de 30 01 88 	store_32 s6, 76(sp)
   2581c:	16 00 00 f6 	b 88 <EV_BuildStairs+0xd8>
   25820:	20 b0 00 0f 	move s1, 44
   25824:	3e 70 01 88 	store_32 s1, 92(sp)
   25828:	00 00 45 00 	or s0, s0, 4416
   2582c:	20 cc 00 0f 	move s1, 51
   25830:	3e 60 01 88 	store_32 s1, 88(sp)
   25834:	1e 50 01 88 	store_32 s0, 84(sp)
   25838:	00 04 00 0f 	move s0, 1
   2583c:	1e 80 01 88 	store_32 s0, 96(sp)
   25840:	02 00 00 4f 	movehi s0, 2
   25844:	1e 40 01 88 	store_32 s0, 80(sp)
   25848:	14 2c ba 4f 	movehi s0, 381300
   2584c:	27 00 00 4f 	movehi s1, 7
   25850:	c0 08 00 4f 	movehi s6, 64
   25854:	00 8c 2e 00 	or s0, s0, 2979
   25858:	1e 10 01 88 	store_32 s0, 68(sp)
   2585c:	01 fc 7f 00 	or s0, s1, 8191
   25860:	1e 00 01 88 	store_32 s0, 64(sp)
   25864:	3e 93 01 88 	store_32 s25, 100(sp)
   25868:	de 30 01 88 	store_32 s6, 76(sp)
   2586c:	69 00 00 f6 	b 420 <EV_BuildStairs+0x274>
   25870:	3e 83 01 a8 	load_32 s25, 96(sp)
   25874:	1e a0 01 a8 	load_32 s0, 104(sp)
   25878:	20 00 fd c0 	move s1, s26
   2587c:	8c 2a 00 f8 	call 43568 <P_FindSectorFromLineTag>
   25880:	40 03 f0 c0 	move s26, s0
   25884:	1a 00 00 14 	cmplt_i s0, s26, 0
   25888:	80 17 00 f4 	bnz s0, 752 <EV_BuildStairs+0x3dc>
   2588c:	1b 00 00 a8 	load_32 s0, (s27)
   25890:	3a 60 01 07 	mull_i s1, s26, 88
   25894:	00 83 50 c0 	add_i s24, s0, s1
   25898:	18 30 01 a8 	load_32 s0, 76(s24)
   2589c:	c0 fe ff f5 	bnz s0, -40 <EV_BuildStairs+0xd8>
   258a0:	18 30 01 05 	add_i s0, s24, 76
   258a4:	1e 20 01 88 	store_32 s0, 72(sp)
   258a8:	1e 70 01 a8 	load_32 s0, 92(sp)
   258ac:	3e 60 01 a8 	load_32 s1, 88(sp)
   258b0:	5e 90 01 a8 	load_32 s2, 100(sp)
   258b4:	09 9c 00 f8 	call 159780 <Z_Malloc>
   258b8:	20 03 f0 c0 	move s25, s0
   258bc:	97 38 00 f8 	call 57948 <P_AddThinker>
   258c0:	1e 20 01 a8 	load_32 s0, 72(sp)
   258c4:	20 03 00 88 	store_32 s25, (s0)
   258c8:	1e 50 01 a8 	load_32 s0, 84(sp)
   258cc:	19 20 00 88 	store_32 s0, 8(s25)
   258d0:	5e 80 01 a8 	load_32 s2, 96(sp)
   258d4:	59 60 00 88 	store_32 s2, 24(s25)
   258d8:	19 53 00 88 	store_32 s24, 20(s25)
   258dc:	1e 40 01 a8 	load_32 s0, 80(sp)
   258e0:	19 a0 00 88 	store_32 s0, 40(s25)
   258e4:	18 00 00 a8 	load_32 s0, (s24)
   258e8:	de 30 01 a8 	load_32 s6, 76(sp)
   258ec:	20 01 53 c0 	add_i s9, s0, s6
   258f0:	39 91 00 88 	store_32 s9, 36(s25)
   258f4:	58 21 00 a6 	load_s16 s10, 8(s24)
   258f8:	18 40 01 a8 	load_32 s0, 80(s24)
   258fc:	20 03 f1 c0 	move s25, s2
   25900:	20 04 00 14 	cmplt_i s1, s0, 1
   25904:	81 fb ff f5 	bnz s1, -144 <EV_BuildStairs+0xd8>
   25908:	58 50 01 a8 	load_32 s2, 84(s24)
   2590c:	3b 00 00 a8 	load_32 s1, (s27)
   25910:	7e 90 01 a8 	load_32 s3, 100(sp)
   25914:	fe 10 01 a8 	load_32 s7, 68(sp)
   25918:	1e 01 01 a8 	load_32 s8, 64(sp)
   2591c:	83 08 00 0b 	shl s4, s3, 2
   25920:	82 00 52 c0 	add_i s4, s2, s4
   25924:	84 00 00 a8 	load_32 s4, (s4)
   25928:	a4 40 00 a0 	load_u8 s5, 16(s4)
   2592c:	a5 10 00 01 	and s5, s5, 4
   25930:	05 02 00 f2 	bz s5, 64 <EV_BuildStairs+0x1d4>
   25934:	a4 c0 00 a8 	load_32 s5, 48(s4)
   25938:	a5 80 60 c0 	sub_i s5, s5, s1
   2593c:	a5 0c 00 09 	ashr s5, s5, 3
   25940:	a5 80 73 c0 	mull_i s5, s5, s7
   25944:	ba 80 12 c1 	cmpne_i s5, s26, s5
   25948:	45 01 00 f4 	bnz s5, 40 <EV_BuildStairs+0x1d4>
   2594c:	04 d3 00 a8 	load_32 s24, 52(s4)
   25950:	aa 00 14 c0 	and s5, s10, s8
   25954:	98 20 00 a4 	load_u16 s4, 8(s24)
   25958:	84 80 12 c1 	cmpne_i s4, s4, s5
   2595c:	a4 00 00 f4 	bnz s4, 20 <EV_BuildStairs+0x1d4>
   25960:	98 30 01 a8 	load_32 s4, 76(s24)
   25964:	29 01 53 c0 	add_i s9, s9, s6
   25968:	44 00 00 f4 	bnz s4, 8 <EV_BuildStairs+0x1d4>
   2596c:	05 00 00 f6 	b 20 <EV_BuildStairs+0x1e4>
   25970:	63 04 00 05 	add_i s3, s3, 1
   25974:	83 00 40 c1 	cmplt_i s4, s3, s0
   25978:	24 fd ff f5 	bnz s4, -92 <EV_BuildStairs+0x180>
   2597c:	bd ff ff f7 	b -268 <EV_BuildStairs+0xd4>
   25980:	18 80 60 c0 	sub_i s0, s24, s1
   25984:	00 0c 00 09 	ashr s0, s0, 3
   25988:	40 83 73 c0 	mull_i s26, s0, s7
   2598c:	1e 70 01 a8 	load_32 s0, 92(sp)
   25990:	3e 60 01 a8 	load_32 s1, 88(sp)
   25994:	5e 90 01 a8 	load_32 s2, 100(sp)
   25998:	3e 21 01 88 	store_32 s9, 72(sp)
   2599c:	5e f1 00 88 	store_32 s10, 60(sp)
   259a0:	ce 9b 00 f8 	call 159544 <Z_Malloc>
   259a4:	20 03 f0 c0 	move s25, s0
   259a8:	5c 38 00 f8 	call 57712 <P_AddThinker>
   259ac:	5e f1 00 a8 	load_32 s10, 60(sp)
   259b0:	3e 21 01 a8 	load_32 s9, 72(sp)
   259b4:	de 30 01 a8 	load_32 s6, 76(sp)
   259b8:	38 33 01 88 	store_32 s25, 76(s24)
   259bc:	1e 50 01 a8 	load_32 s0, 84(sp)
   259c0:	19 20 00 88 	store_32 s0, 8(s25)
   259c4:	1e 80 01 a8 	load_32 s0, 96(sp)
   259c8:	19 60 00 88 	store_32 s0, 24(s25)
   259cc:	19 53 00 88 	store_32 s24, 20(s25)
   259d0:	1e 40 01 a8 	load_32 s0, 80(sp)
   259d4:	19 a0 00 88 	store_32 s0, 40(s25)
   259d8:	39 91 00 88 	store_32 s9, 36(s25)
   259dc:	18 40 01 a8 	load_32 s0, 80(s24)
   259e0:	20 00 00 12 	cmpgt_i s1, s0, 0
   259e4:	21 f9 ff f5 	bnz s1, -220 <EV_BuildStairs+0x16c>
   259e8:	3e 83 01 a8 	load_32 s25, 96(sp)
   259ec:	a2 ff ff f7 	b -376 <EV_BuildStairs+0xd8>
   259f0:	3e 83 01 a8 	load_32 s25, 96(sp)
   259f4:	07 00 00 f6 	b 28 <EV_BuildStairs+0x274>
   259f8:	1b 00 00 a8 	load_32 s0, (s27)
   259fc:	3a 60 01 07 	mull_i s1, s26, 88
   25a00:	00 83 50 c0 	add_i s24, s0, s1
   25a04:	18 30 01 a8 	load_32 s0, 76(s24)
   25a08:	40 00 00 f4 	bnz s0, 8 <EV_BuildStairs+0x274>
   25a0c:	08 00 00 f6 	b 32 <EV_BuildStairs+0x290>
   25a10:	1e a0 01 a8 	load_32 s0, 104(sp)
   25a14:	20 00 fd c0 	move s1, s26
   25a18:	25 2a 00 f8 	call 43156 <P_FindSectorFromLineTag>
   25a1c:	40 03 f0 c0 	move s26, s0
   25a20:	1a fc ff 12 	cmpgt_i s0, s26, -1
   25a24:	a0 fe ff f5 	bnz s0, -44 <EV_BuildStairs+0x25c>
   25a28:	54 00 00 f6 	b 336 <EV_BuildStairs+0x3dc>
   25a2c:	18 30 01 05 	add_i s0, s24, 76
   25a30:	1e 20 01 88 	store_32 s0, 72(sp)
   25a34:	1e 70 01 a8 	load_32 s0, 92(sp)
   25a38:	3e 60 01 a8 	load_32 s1, 88(sp)
   25a3c:	5e 90 01 a8 	load_32 s2, 100(sp)
   25a40:	a6 9b 00 f8 	call 159384 <Z_Malloc>
   25a44:	20 03 f0 c0 	move s25, s0
   25a48:	34 38 00 f8 	call 57552 <P_AddThinker>
   25a4c:	1e 20 01 a8 	load_32 s0, 72(sp)
   25a50:	20 03 00 88 	store_32 s25, (s0)
   25a54:	1e 50 01 a8 	load_32 s0, 84(sp)
   25a58:	19 20 00 88 	store_32 s0, 8(s25)
   25a5c:	5e 80 01 a8 	load_32 s2, 96(sp)
   25a60:	59 60 00 88 	store_32 s2, 24(s25)
   25a64:	19 53 00 88 	store_32 s24, 20(s25)
   25a68:	1e 40 01 a8 	load_32 s0, 80(sp)
   25a6c:	19 a0 00 88 	store_32 s0, 40(s25)
   25a70:	18 00 00 a8 	load_32 s0, (s24)
   25a74:	de 30 01 a8 	load_32 s6, 76(sp)
   25a78:	20 01 53 c0 	add_i s9, s0, s6
   25a7c:	39 91 00 88 	store_32 s9, 36(s25)
   25a80:	58 21 00 a6 	load_s16 s10, 8(s24)
   25a84:	18 40 01 a8 	load_32 s0, 80(s24)
   25a88:	20 03 f1 c0 	move s25, s2
   25a8c:	20 04 00 14 	cmplt_i s1, s0, 1
   25a90:	01 fc ff f5 	bnz s1, -128 <EV_BuildStairs+0x274>
   25a94:	58 50 01 a8 	load_32 s2, 84(s24)
   25a98:	3b 00 00 a8 	load_32 s1, (s27)
   25a9c:	7e 90 01 a8 	load_32 s3, 100(sp)
   25aa0:	fe 10 01 a8 	load_32 s7, 68(sp)
   25aa4:	1e 01 01 a8 	load_32 s8, 64(sp)
   25aa8:	83 08 00 0b 	shl s4, s3, 2
   25aac:	82 00 52 c0 	add_i s4, s2, s4
   25ab0:	84 00 00 a8 	load_32 s4, (s4)
   25ab4:	a4 40 00 a0 	load_u8 s5, 16(s4)
   25ab8:	a5 10 00 01 	and s5, s5, 4
   25abc:	05 02 00 f2 	bz s5, 64 <EV_BuildStairs+0x360>
   25ac0:	a4 c0 00 a8 	load_32 s5, 48(s4)
   25ac4:	a5 80 60 c0 	sub_i s5, s5, s1
   25ac8:	a5 0c 00 09 	ashr s5, s5, 3
   25acc:	a5 80 73 c0 	mull_i s5, s5, s7
   25ad0:	ba 80 12 c1 	cmpne_i s5, s26, s5
   25ad4:	45 01 00 f4 	bnz s5, 40 <EV_BuildStairs+0x360>
   25ad8:	04 d3 00 a8 	load_32 s24, 52(s4)
   25adc:	aa 00 14 c0 	and s5, s10, s8
   25ae0:	98 20 00 a4 	load_u16 s4, 8(s24)
   25ae4:	84 80 12 c1 	cmpne_i s4, s4, s5
   25ae8:	a4 00 00 f4 	bnz s4, 20 <EV_BuildStairs+0x360>
   25aec:	98 30 01 a8 	load_32 s4, 76(s24)
   25af0:	29 01 53 c0 	add_i s9, s9, s6
   25af4:	44 00 00 f4 	bnz s4, 8 <EV_BuildStairs+0x360>
   25af8:	05 00 00 f6 	b 20 <EV_BuildStairs+0x370>
   25afc:	63 04 00 05 	add_i s3, s3, 1
   25b00:	83 00 40 c1 	cmplt_i s4, s3, s0
   25b04:	24 fd ff f5 	bnz s4, -92 <EV_BuildStairs+0x30c>
   25b08:	ba ff ff f7 	b -280 <EV_BuildStairs+0x254>
   25b0c:	18 80 60 c0 	sub_i s0, s24, s1
   25b10:	00 0c 00 09 	ashr s0, s0, 3
   25b14:	40 83 73 c0 	mull_i s26, s0, s7
   25b18:	1e 70 01 a8 	load_32 s0, 92(sp)
   25b1c:	3e 60 01 a8 	load_32 s1, 88(sp)
   25b20:	5e 90 01 a8 	load_32 s2, 100(sp)
   25b24:	3e 21 01 88 	store_32 s9, 72(sp)
   25b28:	5e f1 00 88 	store_32 s10, 60(sp)
   25b2c:	6b 9b 00 f8 	call 159148 <Z_Malloc>
   25b30:	20 03 f0 c0 	move s25, s0
   25b34:	f9 37 00 f8 	call 57316 <P_AddThinker>
   25b38:	5e f1 00 a8 	load_32 s10, 60(sp)
   25b3c:	3e 21 01 a8 	load_32 s9, 72(sp)
   25b40:	de 30 01 a8 	load_32 s6, 76(sp)
   25b44:	38 33 01 88 	store_32 s25, 76(s24)
   25b48:	1e 50 01 a8 	load_32 s0, 84(sp)
   25b4c:	19 20 00 88 	store_32 s0, 8(s25)
   25b50:	1e 80 01 a8 	load_32 s0, 96(sp)
   25b54:	19 60 00 88 	store_32 s0, 24(s25)
   25b58:	19 53 00 88 	store_32 s24, 20(s25)
   25b5c:	1e 40 01 a8 	load_32 s0, 80(sp)
   25b60:	19 a0 00 88 	store_32 s0, 40(s25)
   25b64:	39 91 00 88 	store_32 s9, 36(s25)
   25b68:	18 40 01 a8 	load_32 s0, 80(s24)
   25b6c:	20 00 00 12 	cmpgt_i s1, s0, 0
   25b70:	21 f9 ff f5 	bnz s1, -220 <EV_BuildStairs+0x2f8>
   25b74:	9f ff ff f7 	b -388 <EV_BuildStairs+0x254>
   25b78:	00 80 fc c0 	move s0, s25
   25b7c:	fe b3 01 a8 	load_32 ra, 108(sp)
   25b80:	7e c3 01 a8 	load_32 s27, 112(sp)
   25b84:	5e d3 01 a8 	load_32 s26, 116(sp)
   25b88:	3e e3 01 a8 	load_32 s25, 120(sp)
   25b8c:	1e f3 01 a8 	load_32 s24, 124(sp)
   25b90:	de 03 02 05 	add_i sp, sp, 128
   25b94:	1f 00 00 f0 	ret

0000000000025b98 P_GiveAmmo:
   25b98:	de 03 fe 05 	add_i sp, sp, -128
   25b9c:	1e f3 01 88 	store_32 s24, 124(sp)
   25ba0:	3e e3 01 88 	store_32 s25, 120(sp)
   25ba4:	5e d3 01 88 	store_32 s26, 116(sp)
   25ba8:	7e c3 01 88 	store_32 s27, 112(sp)
   25bac:	fe b3 01 88 	store_32 ra, 108(sp)
   25bb0:	60 03 f1 c0 	move s27, s2
   25bb4:	40 83 f0 c0 	move s26, s1
   25bb8:	20 03 f0 c0 	move s25, s0
   25bbc:	00 03 00 0f 	move s24, 0
   25bc0:	1a 14 00 10 	cmpeq_i s0, s26, 5
   25bc4:	00 05 00 f4 	bnz s0, 160 <P_GiveAmmo+0xcc>
   25bc8:	1a 14 00 18 	cmplt_u s0, s26, 5
   25bcc:	c0 00 00 f4 	bnz s0, 24 <P_GiveAmmo+0x4c>
   25bd0:	02 00 00 4f 	movehi s0, 2
   25bd4:	5e 13 00 88 	store_32 s26, 4(sp)
   25bd8:	00 14 42 00 	or s0, s0, 4229
   25bdc:	1e 00 00 88 	store_32 s0, (sp)
   25be0:	49 a1 ff f9 	call -96988 <I_Error>
   25be4:	1a 08 00 0b 	shl s0, s26, 2
   25be8:	79 00 50 c0 	add_i s3, s25, s0
   25bec:	23 70 02 a8 	load_32 s1, 156(s3)
   25bf0:	43 b0 02 a8 	load_32 s2, 172(s3)
   25bf4:	81 00 01 c1 	cmpeq_i s4, s1, s2
   25bf8:	64 03 00 f4 	bnz s4, 108 <P_GiveAmmo+0xcc>
   25bfc:	93 04 00 4f 	movehi s4, 51
   25c00:	84 f0 7b 00 	or s4, s4, 7932
   25c04:	84 00 50 c0 	add_i s4, s4, s0
   25c08:	84 00 00 a8 	load_32 s4, (s4)
   25c0c:	7b 00 00 f2 	bz s27, 12 <P_GiveAmmo+0x80>
   25c10:	84 80 7d c0 	mull_i s4, s4, s27
   25c14:	04 00 00 f6 	b 16 <P_GiveAmmo+0x8c>
   25c18:	a4 7c 00 0a 	shr s5, s4, 31
   25c1c:	84 80 52 c0 	add_i s4, s4, s5
   25c20:	84 04 00 09 	ashr s4, s4, 1
   25c24:	ba 04 00 4f 	movehi s5, 58
   25c28:	63 70 02 05 	add_i s3, s3, 156
   25c2c:	a5 90 7f 00 	or s5, s5, 8164
   25c30:	a5 00 00 a8 	load_32 s5, (s5)
   25c34:	a5 ec ff 01 	and s5, s5, -5
   25c38:	a5 00 00 10 	cmpeq_i s5, s5, 0
   25c3c:	a5 04 00 01 	and s5, s5, 1
   25c40:	84 80 b2 c0 	shl s4, s4, s5
   25c44:	84 80 50 c0 	add_i s4, s4, s1
   25c48:	a4 00 21 c1 	cmpgt_i s5, s4, s2
   25c4c:	45 00 00 f4 	bnz s5, 8 <P_GiveAmmo+0xbc>
   25c50:	40 00 f2 c0 	move s2, s4
   25c54:	00 07 00 0f 	move s24, 1
   25c58:	43 00 00 88 	store_32 s2, (s3)
   25c5c:	41 00 00 f4 	bnz s1, 8 <P_GiveAmmo+0xcc>
   25c60:	09 00 00 f6 	b 36 <P_GiveAmmo+0xec>
   25c64:	00 00 fc c0 	move s0, s24
   25c68:	fe b3 01 a8 	load_32 ra, 108(sp)
   25c6c:	7e c3 01 a8 	load_32 s27, 112(sp)
   25c70:	5e d3 01 a8 	load_32 s26, 116(sp)
   25c74:	3e e3 01 a8 	load_32 s25, 120(sp)
   25c78:	1e f3 01 a8 	load_32 s24, 124(sp)
   25c7c:	de 03 02 05 	add_i sp, sp, 128
   25c80:	1f 00 00 f0 	ret
   25c84:	3a 0c 00 16 	cmpgt_u s1, s26, 3
   25c88:	e1 fe ff f5 	bnz s1, -36 <P_GiveAmmo+0xcc>
   25c8c:	23 00 00 4f 	movehi s1, 3
   25c90:	21 c0 3f 00 	or s1, s1, 4080
   25c94:	00 80 50 c0 	add_i s0, s0, s1
   25c98:	00 00 00 a8 	load_32 s0, (s0)
   25c9c:	00 00 00 f0 	b s0
   25ca0:	19 c0 01 a8 	load_32 s0, 112(s25)
   25ca4:	00 fe ff f5 	bnz s0, -64 <P_GiveAmmo+0xcc>
   25ca8:	19 10 02 a8 	load_32 s0, 132(s25)
   25cac:	00 03 00 f2 	bz s0, 96 <P_GiveAmmo+0x174>
   25cb0:	00 0c 00 0f 	move s0, 3
   25cb4:	14 00 00 f6 	b 80 <P_GiveAmmo+0x16c>
   25cb8:	19 c0 01 a8 	load_32 s0, 112(s25)
   25cbc:	00 04 00 16 	cmpgt_u s0, s0, 1
   25cc0:	20 fd ff f5 	bnz s0, -92 <P_GiveAmmo+0xcc>
   25cc4:	19 00 02 a8 	load_32 s0, 128(s25)
   25cc8:	e0 fc ff f3 	bz s0, -100 <P_GiveAmmo+0xcc>
   25ccc:	00 08 00 0f 	move s0, 2
   25cd0:	0d 00 00 f6 	b 52 <P_GiveAmmo+0x16c>
   25cd4:	19 c0 01 a8 	load_32 s0, 112(s25)
   25cd8:	00 04 00 16 	cmpgt_u s0, s0, 1
   25cdc:	40 fc ff f5 	bnz s0, -120 <P_GiveAmmo+0xcc>
   25ce0:	19 30 02 a8 	load_32 s0, 140(s25)
   25ce4:	00 fc ff f3 	bz s0, -128 <P_GiveAmmo+0xcc>
   25ce8:	00 14 00 0f 	move s0, 5
   25cec:	06 00 00 f6 	b 24 <P_GiveAmmo+0x16c>
   25cf0:	19 c0 01 a8 	load_32 s0, 112(s25)
   25cf4:	80 fb ff f5 	bnz s0, -144 <P_GiveAmmo+0xcc>
   25cf8:	19 20 02 a8 	load_32 s0, 136(s25)
   25cfc:	40 fb ff f3 	bz s0, -152 <P_GiveAmmo+0xcc>
   25d00:	00 10 00 0f 	move s0, 4
   25d04:	19 d0 01 88 	store_32 s0, 116(s25)
   25d08:	d7 ff ff f7 	b -164 <P_GiveAmmo+0xcc>
   25d0c:	00 07 00 0f 	move s24, 1
   25d10:	19 d3 01 88 	store_32 s24, 116(s25)
   25d14:	d4 ff ff f7 	b -176 <P_GiveAmmo+0xcc>

0000000000025d18 P_GiveWeapon:
   25d18:	de 03 ff 05 	add_i sp, sp, -64
   25d1c:	1e f3 00 88 	store_32 s24, 60(sp)
   25d20:	3e e3 00 88 	store_32 s25, 56(sp)
   25d24:	5e d3 00 88 	store_32 s26, 52(sp)
   25d28:	fe c3 00 88 	store_32 ra, 48(sp)
   25d2c:	7b 04 00 4f 	movehi s3, 59
   25d30:	9a 04 00 4f 	movehi s4, 58
   25d34:	20 83 f0 c0 	move s25, s1
   25d38:	a3 c0 01 00 	or s5, s3, 112
   25d3c:	64 60 6e 00 	or s3, s4, 7064
   25d40:	00 03 f0 c0 	move s24, s0
   25d44:	25 00 00 a8 	load_32 s1, (s5)
   25d48:	03 00 00 a8 	load_32 s0, (s3)
   25d4c:	02 03 00 f4 	bnz s2, 96 <P_GiveWeapon+0x94>
   25d50:	e1 02 00 f2 	bz s1, 92 <P_GiveWeapon+0x94>
   25d54:	00 08 00 10 	cmpeq_i s0, s0, 2
   25d58:	a0 02 00 f4 	bnz s0, 84 <P_GiveWeapon+0x94>
   25d5c:	19 08 00 0b 	shl s0, s25, 2
   25d60:	18 00 50 c0 	add_i s0, s24, s0
   25d64:	40 03 00 0f 	move s26, 0
   25d68:	20 e0 01 a8 	load_32 s1, 120(s0)
   25d6c:	61 05 00 f4 	bnz s1, 172 <P_GiveWeapon+0x100>
   25d70:	38 80 03 a8 	load_32 s1, 224(s24)
   25d74:	53 04 00 4f 	movehi s2, 51
   25d78:	00 e0 01 05 	add_i s0, s0, 120
   25d7c:	42 70 45 00 	or s2, s2, 4444
   25d80:	21 18 00 05 	add_i s1, s1, 6
   25d84:	38 80 03 88 	store_32 s1, 224(s24)
   25d88:	20 04 00 0f 	move s1, 1
   25d8c:	20 00 00 88 	store_32 s1, (s0)
   25d90:	19 60 00 07 	mull_i s0, s25, 24
   25d94:	02 00 50 c0 	add_i s0, s2, s0
   25d98:	43 00 00 a8 	load_32 s2, (s3)
   25d9c:	20 00 00 a8 	load_32 s1, (s0)
   25da0:	a2 04 00 f2 	bz s2, 148 <P_GiveWeapon+0x11c>
   25da4:	40 14 00 0f 	move s2, 5
   25da8:	24 00 00 f6 	b 144 <P_GiveWeapon+0x120>
   25dac:	13 04 00 4f 	movehi s0, 51
   25db0:	39 60 00 07 	mull_i s1, s25, 24
   25db4:	40 03 00 0f 	move s26, 0
   25db8:	00 70 45 00 	or s0, s0, 4444
   25dbc:	00 80 50 c0 	add_i s0, s0, s1
   25dc0:	20 00 00 a8 	load_32 s1, (s0)
   25dc4:	00 00 fd c0 	move s0, s26
   25dc8:	61 14 00 10 	cmpeq_i s3, s1, 5
   25dcc:	03 01 00 f4 	bnz s3, 32 <P_GiveWeapon+0xd4>
   25dd0:	02 00 00 11 	cmpne_i s0, s2, 0
   25dd4:	60 00 00 f4 	bnz s0, 12 <P_GiveWeapon+0xc8>
   25dd8:	40 08 00 0f 	move s2, 2
   25ddc:	02 00 00 f6 	b 8 <P_GiveWeapon+0xcc>
   25de0:	40 04 00 0f 	move s2, 1
   25de4:	00 00 fc c0 	move s0, s24
   25de8:	6c ff ff f9 	call -592 <P_GiveAmmo>
   25dec:	39 08 00 0b 	shl s1, s25, 2
   25df0:	38 80 50 c0 	add_i s1, s24, s1
   25df4:	41 e0 01 a8 	load_32 s2, 120(s1)
   25df8:	a2 00 00 f4 	bnz s2, 20 <P_GiveWeapon+0xf4>
   25dfc:	40 07 00 0f 	move s26, 1
   25e00:	21 e0 01 05 	add_i s1, s1, 120
   25e04:	41 03 00 88 	store_32 s26, (s1)
   25e08:	38 d3 01 88 	store_32 s25, 116(s24)
   25e0c:	00 00 00 11 	cmpne_i s0, s0, 0
   25e10:	00 00 0d c0 	or s0, s0, s26
   25e14:	40 07 00 01 	and s26, s0, 1
   25e18:	00 00 fd c0 	move s0, s26
   25e1c:	fe c3 00 a8 	load_32 ra, 48(sp)
   25e20:	5e d3 00 a8 	load_32 s26, 52(sp)
   25e24:	3e e3 00 a8 	load_32 s25, 56(sp)
   25e28:	1e f3 00 a8 	load_32 s24, 60(sp)
   25e2c:	de 03 01 05 	add_i sp, sp, 64
   25e30:	1f 00 00 f0 	ret
   25e34:	40 08 00 0f 	move s2, 2
   25e38:	00 00 fc c0 	move s0, s24
   25e3c:	57 ff ff f9 	call -676 <P_GiveAmmo>
   25e40:	1a 04 00 4f 	movehi s0, 58
   25e44:	38 d3 01 88 	store_32 s25, 116(s24)
   25e48:	3b 04 00 4f 	movehi s1, 59
   25e4c:	00 c0 6d 00 	or s0, s0, 7024
   25e50:	21 40 02 00 	or s1, s1, 144
   25e54:	00 00 00 a8 	load_32 s0, (s0)
   25e58:	00 60 04 07 	mull_i s0, s0, 280
   25e5c:	01 00 50 c0 	add_i s0, s1, s0
   25e60:	00 00 1c c1 	cmpne_i s0, s0, s24
   25e64:	a0 fd ff f5 	bnz s0, -76 <P_GiveWeapon+0x100>
   25e68:	40 03 00 0f 	move s26, 0
   25e6c:	20 84 00 0f 	move s1, 33
   25e70:	00 00 fd c0 	move s0, s26
   25e74:	5c 99 00 f8 	call 157040 <S_StartSound>
   25e78:	e8 ff ff f7 	b -96 <P_GiveWeapon+0x100>

0000000000025e7c P_GiveBody:
   25e7c:	40 80 00 a8 	load_32 s2, 32(s0)
   25e80:	62 8c 01 12 	cmpgt_i s3, s2, 99
   25e84:	43 00 00 f4 	bnz s3, 8 <P_GiveBody+0x10>
   25e88:	03 00 00 f6 	b 12 <P_GiveBody+0x18>
   25e8c:	00 00 00 0f 	move s0, 0
   25e90:	1f 00 00 f0 	ret
   25e94:	22 80 50 c0 	add_i s1, s2, s1
   25e98:	41 90 01 14 	cmplt_i s2, s1, 100
   25e9c:	42 00 00 f4 	bnz s2, 8 <P_GiveBody+0x28>
   25ea0:	20 90 01 0f 	move s1, 100
   25ea4:	20 80 00 88 	store_32 s1, 32(s0)
   25ea8:	00 00 00 a8 	load_32 s0, (s0)
   25eac:	20 b0 01 88 	store_32 s1, 108(s0)
   25eb0:	00 04 00 0f 	move s0, 1
   25eb4:	1f 00 00 f0 	ret

0000000000025eb8 P_GiveArmor:
   25eb8:	60 90 00 a8 	load_32 s3, 36(s0)
   25ebc:	41 90 01 07 	mull_i s2, s1, 100
   25ec0:	63 00 31 c1 	cmpge_i s3, s3, s2
   25ec4:	a3 00 00 f4 	bnz s3, 20 <P_GiveArmor+0x20>
   25ec8:	20 a0 00 88 	store_32 s1, 40(s0)
   25ecc:	40 90 00 88 	store_32 s2, 36(s0)
   25ed0:	00 04 00 0f 	move s0, 1
   25ed4:	1f 00 00 f0 	ret
   25ed8:	00 00 00 0f 	move s0, 0
   25edc:	1f 00 00 f0 	ret

0000000000025ee0 P_GiveCard:
   25ee0:	21 08 00 0b 	shl s1, s1, 2
   25ee4:	20 80 50 c0 	add_i s1, s0, s1
   25ee8:	41 10 01 a8 	load_32 s2, 68(s1)
   25eec:	42 00 00 f4 	bnz s2, 8 <P_GiveCard+0x14>
   25ef0:	02 00 00 f6 	b 8 <P_GiveCard+0x18>
   25ef4:	1f 00 00 f0 	ret
   25ef8:	21 10 01 05 	add_i s1, s1, 68
   25efc:	40 18 00 0f 	move s2, 6
   25f00:	40 80 03 88 	store_32 s2, 224(s0)
   25f04:	00 04 00 0f 	move s0, 1
   25f08:	01 00 00 88 	store_32 s0, (s1)
   25f0c:	1f 00 00 f0 	ret

0000000000025f10 P_GivePower:
   25f10:	41 14 00 16 	cmpgt_u s2, s1, 5
   25f14:	02 05 00 f4 	bnz s2, 160 <P_GivePower+0xa4>
   25f18:	43 00 00 4f 	movehi s2, 3
   25f1c:	61 08 00 0b 	shl s3, s1, 2
   25f20:	42 00 40 00 	or s2, s2, 4096
   25f24:	43 00 51 c0 	add_i s2, s3, s2
   25f28:	42 00 00 a8 	load_32 s2, (s2)
   25f2c:	02 00 00 f0 	b s2
   25f30:	20 68 10 0f 	move s1, 1050
   25f34:	20 b0 00 88 	store_32 s1, 44(s0)
   25f38:	20 04 00 0f 	move s1, 1
   25f3c:	00 80 f0 c0 	move s0, s1
   25f40:	1f 00 00 f0 	ret
   25f44:	20 80 00 a8 	load_32 s1, 32(s0)
   25f48:	41 8c 01 12 	cmpgt_i s2, s1, 99
   25f4c:	e2 00 00 f4 	bnz s2, 28 <P_GivePower+0x58>
   25f50:	41 7c 00 09 	ashr s2, s1, 31
   25f54:	22 80 10 c0 	and s1, s2, s1
   25f58:	21 90 01 05 	add_i s1, s1, 100
   25f5c:	20 80 00 88 	store_32 s1, 32(s0)
   25f60:	40 00 00 a8 	load_32 s2, (s0)
   25f64:	22 b0 01 88 	store_32 s1, 108(s2)
   25f68:	20 04 00 0f 	move s1, 1
   25f6c:	20 c0 00 88 	store_32 s1, 48(s0)
   25f70:	00 80 f0 c0 	move s0, s1
   25f74:	1f 00 00 f0 	ret
   25f78:	20 d0 20 0f 	move s1, 2100
   25f7c:	20 d0 00 88 	store_32 s1, 52(s0)
   25f80:	00 00 00 a8 	load_32 s0, (s0)
   25f84:	40 04 00 4f 	movehi s2, 32
   25f88:	20 a0 01 a8 	load_32 s1, 104(s0)
   25f8c:	21 00 01 c0 	or s1, s1, s2
   25f90:	20 a0 01 88 	store_32 s1, 104(s0)
   25f94:	20 04 00 0f 	move s1, 1
   25f98:	00 80 f0 c0 	move s0, s1
   25f9c:	1f 00 00 f0 	ret
   25fa0:	20 d0 20 0f 	move s1, 2100
   25fa4:	20 e0 00 88 	store_32 s1, 56(s0)
   25fa8:	20 04 00 0f 	move s1, 1
   25fac:	00 80 f0 c0 	move s0, s1
   25fb0:	1f 00 00 f0 	ret
   25fb4:	21 08 00 0b 	shl s1, s1, 2
   25fb8:	00 80 50 c0 	add_i s0, s0, s1
   25fbc:	20 b0 00 a8 	load_32 s1, 44(s0)
   25fc0:	41 00 00 f4 	bnz s1, 8 <P_GivePower+0xb8>
   25fc4:	09 00 00 f6 	b 36 <P_GivePower+0xd8>
   25fc8:	20 00 00 0f 	move s1, 0
   25fcc:	00 80 f0 c0 	move s0, s1
   25fd0:	1f 00 00 f0 	ret
   25fd4:	20 a0 41 0f 	move s1, 4200
   25fd8:	20 00 01 88 	store_32 s1, 64(s0)
   25fdc:	20 04 00 0f 	move s1, 1
   25fe0:	00 80 f0 c0 	move s0, s1
   25fe4:	1f 00 00 f0 	ret
   25fe8:	00 b0 00 05 	add_i s0, s0, 44
   25fec:	20 04 00 0f 	move s1, 1
   25ff0:	20 00 00 88 	store_32 s1, (s0)
   25ff4:	00 80 f0 c0 	move s0, s1
   25ff8:	1f 00 00 f0 	ret

0000000000025ffc P_TouchSpecialThing:
   25ffc:	de 03 fe 05 	add_i sp, sp, -128
   26000:	1e f3 01 88 	store_32 s24, 124(sp)
   26004:	3e e3 01 88 	store_32 s25, 120(sp)
   26008:	5e d3 01 88 	store_32 s26, 116(sp)
   2600c:	fe c3 01 88 	store_32 ra, 112(sp)
   26010:	00 03 f0 c0 	move s24, s0
   26014:	18 50 00 a8 	load_32 s0, 20(s24)
   26018:	41 50 00 a8 	load_32 s2, 20(s1)
   2601c:	61 10 01 a8 	load_32 s3, 68(s1)
   26020:	00 00 61 c0 	sub_i s0, s0, s2
   26024:	40 80 21 c1 	cmpgt_i s2, s0, s3
   26028:	c2 50 00 f4 	bnz s2, 2584 <P_TouchSpecialThing+0xa44>
   2602c:	40 f8 ff 4f 	movehi s2, 524224
   26030:	00 00 41 c1 	cmplt_i s0, s0, s2
   26034:	60 50 00 f4 	bnz s0, 2572 <P_TouchSpecialThing+0xa44>
   26038:	21 13 02 a8 	load_32 s25, 132(s1)
   2603c:	01 b0 01 a8 	load_32 s0, 108(s1)
   26040:	00 04 00 14 	cmplt_i s0, s0, 1
   26044:	e0 4f 00 f4 	bnz s0, 2556 <P_TouchSpecialThing+0xa44>
   26048:	18 90 00 a8 	load_32 s0, 36(s24)
   2604c:	00 24 ff 05 	add_i s0, s0, -55
   26050:	20 98 00 16 	cmpgt_u s1, s0, 38
   26054:	61 03 00 f4 	bnz s1, 108 <P_TouchSpecialThing+0xc4>
   26058:	23 00 00 4f 	movehi s1, 3
   2605c:	00 08 00 0b 	shl s0, s0, 2
   26060:	21 60 40 00 	or s1, s1, 4120
   26064:	00 80 50 c0 	add_i s0, s0, s1
   26068:	00 00 00 a8 	load_32 s0, (s0)
   2606c:	00 00 00 f0 	b s0
   26070:	19 90 00 a8 	load_32 s0, 36(s25)
   26074:	00 8c 01 12 	cmpgt_i s0, s0, 99
   26078:	40 4e 00 f4 	bnz s0, 2504 <P_TouchSpecialThing+0xa44>
   2607c:	00 04 00 0f 	move s0, 1
   26080:	19 a0 00 88 	store_32 s0, 40(s25)
   26084:	02 00 00 4f 	movehi s0, 2
   26088:	20 90 01 0f 	move s1, 100
   2608c:	39 90 00 88 	store_32 s1, 36(s25)
   26090:	00 9c 13 00 	or s0, s0, 1255
   26094:	52 02 00 f6 	b 2376 <P_TouchSpecialThing+0x9e0>
   26098:	19 90 00 a8 	load_32 s0, 36(s25)
   2609c:	00 1c 03 12 	cmpgt_i s0, s0, 199
   260a0:	00 4d 00 f4 	bnz s0, 2464 <P_TouchSpecialThing+0xa44>
   260a4:	00 08 00 0f 	move s0, 2
   260a8:	19 a0 00 88 	store_32 s0, 40(s25)
   260ac:	01 00 00 4f 	movehi s0, 1
   260b0:	20 20 03 0f 	move s1, 200
   260b4:	39 90 00 88 	store_32 s1, 36(s25)
   260b8:	00 4c 2f 00 	or s0, s0, 3027
   260bc:	48 02 00 f6 	b 2336 <P_TouchSpecialThing+0x9e0>
   260c0:	00 00 00 4f 	movehi s0, 0
   260c4:	00 c8 49 00 	or s0, s0, 4722
   260c8:	1e 00 00 88 	store_32 s0, (sp)
   260cc:	0e a0 ff f9 	call -98248 <I_Error>
   260d0:	44 02 00 f6 	b 2320 <P_TouchSpecialThing+0x9e4>
   260d4:	19 80 00 a8 	load_32 s0, 32(s25)
   260d8:	20 1c 03 12 	cmpgt_i s1, s0, 199
   260dc:	a1 41 00 f4 	bnz s1, 2100 <P_TouchSpecialThing+0x914>
   260e0:	00 04 00 05 	add_i s0, s0, 1
   260e4:	0c 02 00 f6 	b 2096 <P_TouchSpecialThing+0x918>
   260e8:	19 90 00 a8 	load_32 s0, 36(s25)
   260ec:	20 1c 03 12 	cmpgt_i s1, s0, 199
   260f0:	e1 41 00 f4 	bnz s1, 2108 <P_TouchSpecialThing+0x930>
   260f4:	00 04 00 05 	add_i s0, s0, 1
   260f8:	19 90 00 88 	store_32 s0, 36(s25)
   260fc:	19 a0 00 a8 	load_32 s0, 40(s25)
   26100:	60 00 00 f4 	bnz s0, 12 <P_TouchSpecialThing+0x110>
   26104:	00 04 00 0f 	move s0, 1
   26108:	19 a0 00 88 	store_32 s0, 40(s25)
   2610c:	02 00 00 4f 	movehi s0, 2
   26110:	00 0c 57 00 	or s0, s0, 5571
   26114:	32 02 00 f6 	b 2248 <P_TouchSpecialThing+0x9e0>
   26118:	19 10 01 a8 	load_32 s0, 68(s25)
   2611c:	40 07 00 f4 	bnz s0, 232 <P_TouchSpecialThing+0x208>
   26120:	00 00 00 4f 	movehi s0, 0
   26124:	00 84 64 00 	or s0, s0, 6433
   26128:	19 60 03 88 	store_32 s0, 216(s25)
   2612c:	00 18 00 0f 	move s0, 6
   26130:	19 80 03 88 	store_32 s0, 224(s25)
   26134:	00 04 00 0f 	move s0, 1
   26138:	19 10 01 88 	store_32 s0, 68(s25)
   2613c:	32 00 00 f6 	b 200 <P_TouchSpecialThing+0x208>
   26140:	19 30 01 a8 	load_32 s0, 76(s25)
   26144:	00 06 00 f4 	bnz s0, 192 <P_TouchSpecialThing+0x208>
   26148:	02 00 00 4f 	movehi s0, 2
   2614c:	00 24 60 00 	or s0, s0, 6153
   26150:	19 60 03 88 	store_32 s0, 216(s25)
   26154:	00 18 00 0f 	move s0, 6
   26158:	19 80 03 88 	store_32 s0, 224(s25)
   2615c:	00 04 00 0f 	move s0, 1
   26160:	19 30 01 88 	store_32 s0, 76(s25)
   26164:	28 00 00 f6 	b 160 <P_TouchSpecialThing+0x208>
   26168:	19 20 01 a8 	load_32 s0, 72(s25)
   2616c:	c0 04 00 f4 	bnz s0, 152 <P_TouchSpecialThing+0x208>
   26170:	00 00 00 4f 	movehi s0, 0
   26174:	00 0c 7b 00 	or s0, s0, 7875
   26178:	19 60 03 88 	store_32 s0, 216(s25)
   2617c:	00 18 00 0f 	move s0, 6
   26180:	19 80 03 88 	store_32 s0, 224(s25)
   26184:	00 04 00 0f 	move s0, 1
   26188:	19 20 01 88 	store_32 s0, 72(s25)
   2618c:	1e 00 00 f6 	b 120 <P_TouchSpecialThing+0x208>
   26190:	19 40 01 a8 	load_32 s0, 80(s25)
   26194:	80 03 00 f4 	bnz s0, 112 <P_TouchSpecialThing+0x208>
   26198:	00 00 00 4f 	movehi s0, 0
   2619c:	00 e8 16 00 	or s0, s0, 1466
   261a0:	19 60 03 88 	store_32 s0, 216(s25)
   261a4:	00 18 00 0f 	move s0, 6
   261a8:	19 80 03 88 	store_32 s0, 224(s25)
   261ac:	00 04 00 0f 	move s0, 1
   261b0:	19 40 01 88 	store_32 s0, 80(s25)
   261b4:	14 00 00 f6 	b 80 <P_TouchSpecialThing+0x208>
   261b8:	19 60 01 a8 	load_32 s0, 88(s25)
   261bc:	40 02 00 f4 	bnz s0, 72 <P_TouchSpecialThing+0x208>
   261c0:	02 00 00 4f 	movehi s0, 2
   261c4:	00 74 42 00 	or s0, s0, 4253
   261c8:	19 60 03 88 	store_32 s0, 216(s25)
   261cc:	00 18 00 0f 	move s0, 6
   261d0:	19 80 03 88 	store_32 s0, 224(s25)
   261d4:	00 04 00 0f 	move s0, 1
   261d8:	19 60 01 88 	store_32 s0, 88(s25)
   261dc:	0a 00 00 f6 	b 40 <P_TouchSpecialThing+0x208>
   261e0:	19 50 01 a8 	load_32 s0, 84(s25)
   261e4:	00 01 00 f4 	bnz s0, 32 <P_TouchSpecialThing+0x208>
   261e8:	02 00 00 4f 	movehi s0, 2
   261ec:	00 f0 13 00 	or s0, s0, 1276
   261f0:	19 60 03 88 	store_32 s0, 216(s25)
   261f4:	00 18 00 0f 	move s0, 6
   261f8:	19 80 03 88 	store_32 s0, 224(s25)
   261fc:	00 04 00 0f 	move s0, 1
   26200:	19 50 01 88 	store_32 s0, 84(s25)
   26204:	1b 04 00 4f 	movehi s0, 59
   26208:	00 c0 01 00 	or s0, s0, 112
   2620c:	00 00 00 a8 	load_32 s0, (s0)
   26210:	80 3e 00 f2 	bz s0, 2000 <P_TouchSpecialThing+0x9e4>
   26214:	0b 02 00 f6 	b 2092 <P_TouchSpecialThing+0xa44>
   26218:	19 80 00 a8 	load_32 s0, 32(s25)
   2621c:	20 8c 01 12 	cmpgt_i s1, s0, 99
   26220:	01 41 00 f4 	bnz s1, 2080 <P_TouchSpecialThing+0xa44>
   26224:	20 68 01 14 	cmplt_i s1, s0, 90
   26228:	41 00 00 f4 	bnz s1, 8 <P_TouchSpecialThing+0x234>
   2622c:	00 68 01 0f 	move s0, 90
   26230:	00 28 00 05 	add_i s0, s0, 10
   26234:	19 80 00 88 	store_32 s0, 32(s25)
   26238:	39 00 00 a8 	load_32 s1, (s25)
   2623c:	41 00 00 4f 	movehi s2, 1
   26240:	01 b0 01 88 	store_32 s0, 108(s1)
   26244:	02 e0 21 00 	or s0, s2, 2168
   26248:	e5 01 00 f6 	b 1940 <P_TouchSpecialThing+0x9e0>
   2624c:	19 80 00 a8 	load_32 s0, 32(s25)
   26250:	20 8c 01 12 	cmpgt_i s1, s0, 99
   26254:	61 3f 00 f4 	bnz s1, 2028 <P_TouchSpecialThing+0xa44>
   26258:	20 2c 01 14 	cmplt_i s1, s0, 75
   2625c:	41 00 00 f4 	bnz s1, 8 <P_TouchSpecialThing+0x268>
   26260:	00 2c 01 0f 	move s0, 75
   26264:	20 64 00 05 	add_i s1, s0, 25
   26268:	39 80 00 88 	store_32 s1, 32(s25)
   2626c:	59 00 00 a8 	load_32 s2, (s25)
   26270:	00 fc ff 12 	cmpgt_i s0, s0, -1
   26274:	22 b0 01 88 	store_32 s1, 108(s2)
   26278:	40 00 00 f4 	bnz s0, 8 <P_TouchSpecialThing+0x284>
   2627c:	cc 01 00 f6 	b 1840 <P_TouchSpecialThing+0x9b0>
   26280:	00 00 00 4f 	movehi s0, 0
   26284:	00 58 17 00 	or s0, s0, 1494
   26288:	d5 01 00 f6 	b 1876 <P_TouchSpecialThing+0x9e0>
   2628c:	19 80 00 a8 	load_32 s0, 32(s25)
   26290:	20 90 01 14 	cmplt_i s1, s0, 100
   26294:	41 00 00 f4 	bnz s1, 8 <P_TouchSpecialThing+0x2a0>
   26298:	00 90 01 0f 	move s0, 100
   2629c:	00 90 01 05 	add_i s0, s0, 100
   262a0:	19 80 00 88 	store_32 s0, 32(s25)
   262a4:	39 00 00 a8 	load_32 s1, (s25)
   262a8:	42 00 00 4f 	movehi s2, 2
   262ac:	01 b0 01 88 	store_32 s0, 108(s1)
   262b0:	02 a8 75 00 	or s0, s2, 7530
   262b4:	49 00 00 f6 	b 292 <P_TouchSpecialThing+0x3dc>
   262b8:	00 00 00 4f 	movehi s0, 0
   262bc:	20 68 10 0f 	move s1, 1050
   262c0:	39 b0 00 88 	store_32 s1, 44(s25)
   262c4:	00 64 2e 00 	or s0, s0, 2969
   262c8:	44 00 00 f6 	b 272 <P_TouchSpecialThing+0x3dc>
   262cc:	19 80 00 a8 	load_32 s0, 32(s25)
   262d0:	20 8c 01 12 	cmpgt_i s1, s0, 99
   262d4:	e1 00 00 f4 	bnz s1, 28 <P_TouchSpecialThing+0x2f4>
   262d8:	20 7c 00 09 	ashr s1, s0, 31
   262dc:	01 00 10 c0 	and s0, s1, s0
   262e0:	00 90 01 05 	add_i s0, s0, 100
   262e4:	19 80 00 88 	store_32 s0, 32(s25)
   262e8:	39 00 00 a8 	load_32 s1, (s25)
   262ec:	01 b0 01 88 	store_32 s0, 108(s1)
   262f0:	01 00 00 4f 	movehi s0, 1
   262f4:	20 04 00 0f 	move s1, 1
   262f8:	39 c0 00 88 	store_32 s1, 48(s25)
   262fc:	40 77 01 0f 	move s26, 93
   26300:	00 38 05 00 	or s0, s0, 334
   26304:	19 60 03 88 	store_32 s0, 216(s25)
   26308:	19 c0 01 a8 	load_32 s0, 112(s25)
   2630c:	c0 36 00 f2 	bz s0, 1752 <P_TouchSpecialThing+0x9e8>
   26310:	00 00 00 0f 	move s0, 0
   26314:	19 d0 01 88 	store_32 s0, 116(s25)
   26318:	18 a8 01 a0 	load_u8 s0, 106(s24)
   2631c:	00 00 02 01 	and s0, s0, 128
   26320:	e0 36 00 f2 	bz s0, 1756 <P_TouchSpecialThing+0xa00>
   26324:	b3 01 00 f6 	b 1740 <P_TouchSpecialThing+0x9f4>
   26328:	00 d0 20 0f 	move s0, 2100
   2632c:	19 d0 00 88 	store_32 s0, 52(s25)
   26330:	19 00 00 a8 	load_32 s0, (s25)
   26334:	61 00 00 4f 	movehi s3, 1
   26338:	40 04 00 4f 	movehi s2, 32
   2633c:	20 a0 01 a8 	load_32 s1, 104(s0)
   26340:	21 00 01 c0 	or s1, s1, s2
   26344:	20 a0 01 88 	store_32 s1, 104(s0)
   26348:	03 5c 05 00 	or s0, s3, 343
   2634c:	23 00 00 f6 	b 140 <P_TouchSpecialThing+0x3dc>
   26350:	0b 04 00 4f 	movehi s0, 43
   26354:	00 00 40 00 	or s0, s0, 4096
   26358:	00 00 00 a8 	load_32 s0, (s0)
   2635c:	00 08 00 11 	cmpne_i s0, s0, 2
   26360:	00 37 00 f4 	bnz s0, 1760 <P_TouchSpecialThing+0xa44>
   26364:	00 20 03 0f 	move s0, 200
   26368:	19 80 00 88 	store_32 s0, 32(s25)
   2636c:	39 00 00 a8 	load_32 s1, (s25)
   26370:	01 b0 01 88 	store_32 s0, 108(s1)
   26374:	39 90 00 a8 	load_32 s1, 36(s25)
   26378:	21 1c 03 12 	cmpgt_i s1, s1, 199
   2637c:	81 00 00 f4 	bnz s1, 16 <P_TouchSpecialThing+0x390>
   26380:	20 08 00 0f 	move s1, 2
   26384:	39 a0 00 88 	store_32 s1, 40(s25)
   26388:	19 90 00 88 	store_32 s0, 36(s25)
   2638c:	02 00 00 4f 	movehi s0, 2
   26390:	00 48 2d 00 	or s0, s0, 2898
   26394:	11 00 00 f6 	b 68 <P_TouchSpecialThing+0x3dc>
   26398:	00 00 00 4f 	movehi s0, 0
   2639c:	20 d0 20 0f 	move s1, 2100
   263a0:	39 e0 00 88 	store_32 s1, 56(s25)
   263a4:	00 7c 7b 00 	or s0, s0, 7903
   263a8:	0c 00 00 f6 	b 48 <P_TouchSpecialThing+0x3dc>
   263ac:	19 f0 00 a8 	load_32 s0, 60(s25)
   263b0:	80 34 00 f4 	bnz s0, 1680 <P_TouchSpecialThing+0xa44>
   263b4:	02 00 00 4f 	movehi s0, 2
   263b8:	20 04 00 0f 	move s1, 1
   263bc:	39 f0 00 88 	store_32 s1, 60(s25)
   263c0:	00 ec 05 00 	or s0, s0, 379
   263c4:	05 00 00 f6 	b 20 <P_TouchSpecialThing+0x3dc>
   263c8:	00 00 00 4f 	movehi s0, 0
   263cc:	20 a0 41 0f 	move s1, 4200
   263d0:	39 00 01 88 	store_32 s1, 64(s25)
   263d4:	00 08 53 00 	or s0, s0, 5314
   263d8:	19 60 03 88 	store_32 s0, 216(s25)
   263dc:	40 77 01 0f 	move s26, 93
   263e0:	18 a8 01 a0 	load_u8 s0, 106(s24)
   263e4:	00 00 02 01 	and s0, s0, 128
   263e8:	a0 30 00 f2 	bz s0, 1556 <P_TouchSpecialThing+0xa00>
   263ec:	81 01 00 f6 	b 1540 <P_TouchSpecialThing+0x9f4>
   263f0:	18 a8 01 a0 	load_u8 s0, 106(s24)
   263f4:	40 08 00 01 	and s2, s0, 2
   263f8:	19 70 02 a8 	load_32 s0, 156(s25)
   263fc:	39 b0 02 a8 	load_32 s1, 172(s25)
   26400:	42 00 00 f2 	bz s2, 8 <P_TouchSpecialThing+0x40c>
   26404:	4f 01 00 f6 	b 1340 <P_TouchSpecialThing+0x944>
   26408:	40 80 00 c1 	cmpeq_i s2, s0, s1
   2640c:	a2 31 00 f4 	bnz s2, 1588 <P_TouchSpecialThing+0xa44>
   26410:	53 04 00 4f 	movehi s2, 51
   26414:	7a 04 00 4f 	movehi s3, 58
   26418:	42 f0 7b 00 	or s2, s2, 7932
   2641c:	63 90 7f 00 	or s3, s3, 8164
   26420:	42 00 00 a8 	load_32 s2, (s2)
   26424:	63 00 00 a8 	load_32 s3, (s3)
   26428:	63 ec ff 01 	and s3, s3, -5
   2642c:	63 00 00 10 	cmpeq_i s3, s3, 0
   26430:	51 01 00 f6 	b 1348 <P_TouchSpecialThing+0x978>
   26434:	19 70 02 a8 	load_32 s0, 156(s25)
   26438:	39 b0 02 a8 	load_32 s1, 172(s25)
   2643c:	40 80 00 c1 	cmpeq_i s2, s0, s1
   26440:	02 30 00 f4 	bnz s2, 1536 <P_TouchSpecialThing+0xa44>
   26444:	53 04 00 4f 	movehi s2, 51
   26448:	7a 04 00 4f 	movehi s3, 58
   2644c:	42 f0 7b 00 	or s2, s2, 7932
   26450:	63 90 7f 00 	or s3, s3, 8164
   26454:	42 00 00 a8 	load_32 s2, (s2)
   26458:	63 00 00 a8 	load_32 s3, (s3)
   2645c:	42 14 00 07 	mull_i s2, s2, 5
   26460:	63 ec ff 01 	and s3, s3, -5
   26464:	63 00 00 10 	cmpeq_i s3, s3, 0
   26468:	63 04 00 01 	and s3, s3, 1
   2646c:	42 80 b1 c0 	shl s2, s2, s3
   26470:	42 00 50 c0 	add_i s2, s2, s0
   26474:	62 80 20 c1 	cmpgt_i s3, s2, s1
   26478:	43 00 00 f4 	bnz s3, 8 <P_TouchSpecialThing+0x484>
   2647c:	20 00 f1 c0 	move s1, s2
   26480:	39 70 02 88 	store_32 s1, 156(s25)
   26484:	e0 29 00 f4 	bnz s0, 1340 <P_TouchSpecialThing+0x9c4>
   26488:	19 c0 01 a8 	load_32 s0, 112(s25)
   2648c:	a0 29 00 f4 	bnz s0, 1332 <P_TouchSpecialThing+0x9c4>
   26490:	19 10 02 a8 	load_32 s0, 132(s25)
   26494:	20 29 00 f2 	bz s0, 1316 <P_TouchSpecialThing+0x9bc>
   26498:	00 0c 00 0f 	move s0, 3
   2649c:	48 01 00 f6 	b 1312 <P_TouchSpecialThing+0x9c0>
   264a0:	19 a0 02 a8 	load_32 s0, 168(s25)
   264a4:	39 e0 02 a8 	load_32 s1, 184(s25)
   264a8:	40 80 00 c1 	cmpeq_i s2, s0, s1
   264ac:	a2 2c 00 f4 	bnz s2, 1428 <P_TouchSpecialThing+0xa44>
   264b0:	53 04 00 4f 	movehi s2, 51
   264b4:	7a 04 00 4f 	movehi s3, 58
   264b8:	42 f0 7b 00 	or s2, s2, 7932
   264bc:	63 90 7f 00 	or s3, s3, 8164
   264c0:	42 30 00 a8 	load_32 s2, 12(s2)
   264c4:	63 00 00 a8 	load_32 s3, (s3)
   264c8:	63 ec ff 01 	and s3, s3, -5
   264cc:	63 00 00 10 	cmpeq_i s3, s3, 0
   264d0:	63 04 00 01 	and s3, s3, 1
   264d4:	42 80 b1 c0 	shl s2, s2, s3
   264d8:	42 00 50 c0 	add_i s2, s2, s0
   264dc:	62 80 20 c1 	cmpgt_i s3, s2, s1
   264e0:	43 00 00 f4 	bnz s3, 8 <P_TouchSpecialThing+0x4ec>
   264e4:	20 00 f1 c0 	move s1, s2
   264e8:	39 a0 02 88 	store_32 s1, 168(s25)
   264ec:	e0 00 00 f4 	bnz s0, 28 <P_TouchSpecialThing+0x50c>
   264f0:	19 c0 01 a8 	load_32 s0, 112(s25)
   264f4:	a0 00 00 f4 	bnz s0, 20 <P_TouchSpecialThing+0x50c>
   264f8:	19 20 02 a8 	load_32 s0, 136(s25)
   264fc:	60 00 00 f2 	bz s0, 12 <P_TouchSpecialThing+0x50c>
   26500:	00 10 00 0f 	move s0, 4
   26504:	19 d0 01 88 	store_32 s0, 116(s25)
   26508:	00 00 00 4f 	movehi s0, 0
   2650c:	00 f8 06 00 	or s0, s0, 446
   26510:	33 01 00 f6 	b 1228 <P_TouchSpecialThing+0x9e0>
   26514:	19 a0 02 a8 	load_32 s0, 168(s25)
   26518:	39 e0 02 a8 	load_32 s1, 184(s25)
   2651c:	40 80 00 c1 	cmpeq_i s2, s0, s1
   26520:	02 29 00 f4 	bnz s2, 1312 <P_TouchSpecialThing+0xa44>
   26524:	53 04 00 4f 	movehi s2, 51
   26528:	7a 04 00 4f 	movehi s3, 58
   2652c:	42 f0 7b 00 	or s2, s2, 7932
   26530:	63 90 7f 00 	or s3, s3, 8164
   26534:	42 30 00 a8 	load_32 s2, 12(s2)
   26538:	63 00 00 a8 	load_32 s3, (s3)
   2653c:	42 14 00 07 	mull_i s2, s2, 5
   26540:	63 ec ff 01 	and s3, s3, -5
   26544:	63 00 00 10 	cmpeq_i s3, s3, 0
   26548:	63 04 00 01 	and s3, s3, 1
   2654c:	42 80 b1 c0 	shl s2, s2, s3
   26550:	42 00 50 c0 	add_i s2, s2, s0
   26554:	62 80 20 c1 	cmpgt_i s3, s2, s1
   26558:	43 00 00 f4 	bnz s3, 8 <P_TouchSpecialThing+0x564>
   2655c:	20 00 f1 c0 	move s1, s2
   26560:	39 a0 02 88 	store_32 s1, 168(s25)
   26564:	e0 00 00 f4 	bnz s0, 28 <P_TouchSpecialThing+0x584>
   26568:	19 c0 01 a8 	load_32 s0, 112(s25)
   2656c:	a0 00 00 f4 	bnz s0, 20 <P_TouchSpecialThing+0x584>
   26570:	19 20 02 a8 	load_32 s0, 136(s25)
   26574:	60 00 00 f2 	bz s0, 12 <P_TouchSpecialThing+0x584>
   26578:	00 10 00 0f 	move s0, 4
   2657c:	19 d0 01 88 	store_32 s0, 116(s25)
   26580:	03 00 00 4f 	movehi s0, 3
   26584:	00 bc 08 00 	or s0, s0, 559
   26588:	15 01 00 f6 	b 1108 <P_TouchSpecialThing+0x9e0>
   2658c:	19 90 02 a8 	load_32 s0, 164(s25)
   26590:	39 d0 02 a8 	load_32 s1, 180(s25)
   26594:	40 80 00 c1 	cmpeq_i s2, s0, s1
   26598:	42 25 00 f4 	bnz s2, 1192 <P_TouchSpecialThing+0xa44>
   2659c:	53 04 00 4f 	movehi s2, 51
   265a0:	7a 04 00 4f 	movehi s3, 58
   265a4:	42 f0 7b 00 	or s2, s2, 7932
   265a8:	63 90 7f 00 	or s3, s3, 8164
   265ac:	42 20 00 a8 	load_32 s2, 8(s2)
   265b0:	63 00 00 a8 	load_32 s3, (s3)
   265b4:	63 ec ff 01 	and s3, s3, -5
   265b8:	63 00 00 10 	cmpeq_i s3, s3, 0
   265bc:	63 04 00 01 	and s3, s3, 1
   265c0:	42 80 b1 c0 	shl s2, s2, s3
   265c4:	42 00 50 c0 	add_i s2, s2, s0
   265c8:	62 80 20 c1 	cmpgt_i s3, s2, s1
   265cc:	43 00 00 f4 	bnz s3, 8 <P_TouchSpecialThing+0x5d8>
   265d0:	20 00 f1 c0 	move s1, s2
   265d4:	39 90 02 88 	store_32 s1, 164(s25)
   265d8:	00 01 00 f4 	bnz s0, 32 <P_TouchSpecialThing+0x5fc>
   265dc:	19 c0 01 a8 	load_32 s0, 112(s25)
   265e0:	00 04 00 16 	cmpgt_u s0, s0, 1
   265e4:	a0 00 00 f4 	bnz s0, 20 <P_TouchSpecialThing+0x5fc>
   265e8:	19 30 02 a8 	load_32 s0, 140(s25)
   265ec:	60 00 00 f2 	bz s0, 12 <P_TouchSpecialThing+0x5fc>
   265f0:	00 14 00 0f 	move s0, 5
   265f4:	19 d0 01 88 	store_32 s0, 116(s25)
   265f8:	02 00 00 4f 	movehi s0, 2
   265fc:	00 04 3a 00 	or s0, s0, 3713
   26600:	f7 00 00 f6 	b 988 <P_TouchSpecialThing+0x9e0>
   26604:	19 90 02 a8 	load_32 s0, 164(s25)
   26608:	39 d0 02 a8 	load_32 s1, 180(s25)
   2660c:	40 80 00 c1 	cmpeq_i s2, s0, s1
   26610:	82 21 00 f4 	bnz s2, 1072 <P_TouchSpecialThing+0xa44>
   26614:	53 04 00 4f 	movehi s2, 51
   26618:	7a 04 00 4f 	movehi s3, 58
   2661c:	42 f0 7b 00 	or s2, s2, 7932
   26620:	63 90 7f 00 	or s3, s3, 8164
   26624:	42 20 00 a8 	load_32 s2, 8(s2)
   26628:	63 00 00 a8 	load_32 s3, (s3)
   2662c:	42 14 00 07 	mull_i s2, s2, 5
   26630:	63 ec ff 01 	and s3, s3, -5
   26634:	63 00 00 10 	cmpeq_i s3, s3, 0
   26638:	63 04 00 01 	and s3, s3, 1
   2663c:	42 80 b1 c0 	shl s2, s2, s3
   26640:	42 00 50 c0 	add_i s2, s2, s0
   26644:	62 80 20 c1 	cmpgt_i s3, s2, s1
   26648:	43 00 00 f4 	bnz s3, 8 <P_TouchSpecialThing+0x654>
   2664c:	20 00 f1 c0 	move s1, s2
   26650:	39 90 02 88 	store_32 s1, 164(s25)
   26654:	00 01 00 f4 	bnz s0, 32 <P_TouchSpecialThing+0x678>
   26658:	19 c0 01 a8 	load_32 s0, 112(s25)
   2665c:	00 04 00 16 	cmpgt_u s0, s0, 1
   26660:	a0 00 00 f4 	bnz s0, 20 <P_TouchSpecialThing+0x678>
   26664:	19 30 02 a8 	load_32 s0, 140(s25)
   26668:	60 00 00 f2 	bz s0, 12 <P_TouchSpecialThing+0x678>
   2666c:	00 14 00 0f 	move s0, 5
   26670:	19 d0 01 88 	store_32 s0, 116(s25)
   26674:	01 00 00 4f 	movehi s0, 1
   26678:	00 d4 7d 00 	or s0, s0, 8053
   2667c:	d8 00 00 f6 	b 864 <P_TouchSpecialThing+0x9e0>
   26680:	19 80 02 a8 	load_32 s0, 160(s25)
   26684:	39 c0 02 a8 	load_32 s1, 176(s25)
   26688:	40 80 00 c1 	cmpeq_i s2, s0, s1
   2668c:	a2 1d 00 f4 	bnz s2, 948 <P_TouchSpecialThing+0xa44>
   26690:	53 04 00 4f 	movehi s2, 51
   26694:	7a 04 00 4f 	movehi s3, 58
   26698:	42 f0 7b 00 	or s2, s2, 7932
   2669c:	63 90 7f 00 	or s3, s3, 8164
   266a0:	42 10 00 a8 	load_32 s2, 4(s2)
   266a4:	63 00 00 a8 	load_32 s3, (s3)
   266a8:	63 ec ff 01 	and s3, s3, -5
   266ac:	63 00 00 10 	cmpeq_i s3, s3, 0
   266b0:	63 04 00 01 	and s3, s3, 1
   266b4:	42 80 b1 c0 	shl s2, s2, s3
   266b8:	42 00 50 c0 	add_i s2, s2, s0
   266bc:	62 80 20 c1 	cmpgt_i s3, s2, s1
   266c0:	43 00 00 f4 	bnz s3, 8 <P_TouchSpecialThing+0x6cc>
   266c4:	20 00 f1 c0 	move s1, s2
   266c8:	39 80 02 88 	store_32 s1, 160(s25)
   266cc:	00 01 00 f4 	bnz s0, 32 <P_TouchSpecialThing+0x6f0>
   266d0:	19 c0 01 a8 	load_32 s0, 112(s25)
   266d4:	00 04 00 16 	cmpgt_u s0, s0, 1
   266d8:	a0 00 00 f4 	bnz s0, 20 <P_TouchSpecialThing+0x6f0>
   266dc:	19 00 02 a8 	load_32 s0, 128(s25)
   266e0:	60 00 00 f2 	bz s0, 12 <P_TouchSpecialThing+0x6f0>
   266e4:	00 08 00 0f 	move s0, 2
   266e8:	19 d0 01 88 	store_32 s0, 116(s25)
   266ec:	01 00 00 4f 	movehi s0, 1
   266f0:	00 68 35 00 	or s0, s0, 3418
   266f4:	ba 00 00 f6 	b 744 <P_TouchSpecialThing+0x9e0>
   266f8:	19 80 02 a8 	load_32 s0, 160(s25)
   266fc:	39 c0 02 a8 	load_32 s1, 176(s25)
   26700:	40 80 00 c1 	cmpeq_i s2, s0, s1
   26704:	e2 19 00 f4 	bnz s2, 828 <P_TouchSpecialThing+0xa44>
   26708:	53 04 00 4f 	movehi s2, 51
   2670c:	7a 04 00 4f 	movehi s3, 58
   26710:	42 f0 7b 00 	or s2, s2, 7932
   26714:	63 90 7f 00 	or s3, s3, 8164
   26718:	42 10 00 a8 	load_32 s2, 4(s2)
   2671c:	63 00 00 a8 	load_32 s3, (s3)
   26720:	42 14 00 07 	mull_i s2, s2, 5
   26724:	63 ec ff 01 	and s3, s3, -5
   26728:	63 00 00 10 	cmpeq_i s3, s3, 0
   2672c:	63 04 00 01 	and s3, s3, 1
   26730:	42 80 b1 c0 	shl s2, s2, s3
   26734:	42 00 50 c0 	add_i s2, s2, s0
   26738:	62 80 20 c1 	cmpgt_i s3, s2, s1
   2673c:	43 00 00 f4 	bnz s3, 8 <P_TouchSpecialThing+0x748>
   26740:	20 00 f1 c0 	move s1, s2
   26744:	39 80 02 88 	store_32 s1, 160(s25)
   26748:	00 01 00 f4 	bnz s0, 32 <P_TouchSpecialThing+0x76c>
   2674c:	19 c0 01 a8 	load_32 s0, 112(s25)
   26750:	00 04 00 16 	cmpgt_u s0, s0, 1
   26754:	a0 00 00 f4 	bnz s0, 20 <P_TouchSpecialThing+0x76c>
   26758:	19 00 02 a8 	load_32 s0, 128(s25)
   2675c:	60 00 00 f2 	bz s0, 12 <P_TouchSpecialThing+0x76c>
   26760:	00 08 00 0f 	move s0, 2
   26764:	19 d0 01 88 	store_32 s0, 116(s25)
   26768:	02 00 00 4f 	movehi s0, 2
   2676c:	00 68 14 00 	or s0, s0, 1306
   26770:	9b 00 00 f6 	b 620 <P_TouchSpecialThing+0x9e0>
   26774:	19 70 01 a8 	load_32 s0, 92(s25)
   26778:	e0 01 00 f4 	bnz s0, 60 <P_TouchSpecialThing+0x7b8>
   2677c:	19 b0 02 a8 	load_32 s0, 172(s25)
   26780:	00 04 00 0b 	shl s0, s0, 1
   26784:	19 b0 02 88 	store_32 s0, 172(s25)
   26788:	19 c0 02 a8 	load_32 s0, 176(s25)
   2678c:	00 04 00 0b 	shl s0, s0, 1
   26790:	19 c0 02 88 	store_32 s0, 176(s25)
   26794:	19 d0 02 a8 	load_32 s0, 180(s25)
   26798:	00 04 00 0b 	shl s0, s0, 1
   2679c:	19 d0 02 88 	store_32 s0, 180(s25)
   267a0:	19 e0 02 a8 	load_32 s0, 184(s25)
   267a4:	00 04 00 0b 	shl s0, s0, 1
   267a8:	19 e0 02 88 	store_32 s0, 184(s25)
   267ac:	00 04 00 0f 	move s0, 1
   267b0:	19 70 01 88 	store_32 s0, 92(s25)
   267b4:	40 07 00 0f 	move s26, 1
   267b8:	00 80 fc c0 	move s0, s25
   267bc:	20 00 00 0f 	move s1, 0
   267c0:	40 00 fd c0 	move s2, s26
   267c4:	f5 fc ff f9 	call -3116 <P_GiveAmmo>
   267c8:	00 80 fc c0 	move s0, s25
   267cc:	20 00 fd c0 	move s1, s26
   267d0:	40 00 fd c0 	move s2, s26
   267d4:	f1 fc ff f9 	call -3132 <P_GiveAmmo>
   267d8:	00 80 fc c0 	move s0, s25
   267dc:	20 08 00 0f 	move s1, 2
   267e0:	40 00 fd c0 	move s2, s26
   267e4:	ed fc ff f9 	call -3148 <P_GiveAmmo>
   267e8:	00 80 fc c0 	move s0, s25
   267ec:	20 0c 00 0f 	move s1, 3
   267f0:	40 00 fd c0 	move s2, s26
   267f4:	e9 fc ff f9 	call -3164 <P_GiveAmmo>
   267f8:	02 00 00 4f 	movehi s0, 2
   267fc:	00 f4 14 00 	or s0, s0, 1341
   26800:	77 00 00 f6 	b 476 <P_TouchSpecialThing+0x9e0>
   26804:	20 18 00 0f 	move s1, 6
   26808:	40 00 00 0f 	move s2, 0
   2680c:	00 80 fc c0 	move s0, s25
   26810:	42 fd ff f9 	call -2808 <P_GiveWeapon>
   26814:	60 11 00 f2 	bz s0, 556 <P_TouchSpecialThing+0xa44>
   26818:	02 00 00 4f 	movehi s0, 2
   2681c:	00 88 60 00 	or s0, s0, 6178
   26820:	36 00 00 f6 	b 216 <P_TouchSpecialThing+0x8fc>
   26824:	18 a0 01 a8 	load_32 s0, 104(s24)
   26828:	30 00 00 4f 	movehi s1, 16
   2682c:	40 80 10 c0 	and s2, s0, s1
   26830:	20 0c 00 0f 	move s1, 3
   26834:	00 80 fc c0 	move s0, s25
   26838:	38 fd ff f9 	call -2848 <P_GiveWeapon>
   2683c:	20 10 00 f2 	bz s0, 516 <P_TouchSpecialThing+0xa44>
   26840:	01 00 00 4f 	movehi s0, 1
   26844:	00 cc 63 00 	or s0, s0, 6387
   26848:	2c 00 00 f6 	b 176 <P_TouchSpecialThing+0x8fc>
   2684c:	20 1c 00 0f 	move s1, 7
   26850:	40 00 00 0f 	move s2, 0
   26854:	00 80 fc c0 	move s0, s25
   26858:	30 fd ff f9 	call -2880 <P_GiveWeapon>
   2685c:	20 0f 00 f2 	bz s0, 484 <P_TouchSpecialThing+0xa44>
   26860:	01 00 00 4f 	movehi s0, 1
   26864:	00 50 0e 00 	or s0, s0, 916
   26868:	24 00 00 f6 	b 144 <P_TouchSpecialThing+0x8fc>
   2686c:	20 10 00 0f 	move s1, 4
   26870:	40 00 00 0f 	move s2, 0
   26874:	00 80 fc c0 	move s0, s25
   26878:	28 fd ff f9 	call -2912 <P_GiveWeapon>
   2687c:	20 0e 00 f2 	bz s0, 452 <P_TouchSpecialThing+0xa44>
   26880:	01 00 00 4f 	movehi s0, 1
   26884:	00 c4 0e 00 	or s0, s0, 945
   26888:	1c 00 00 f6 	b 112 <P_TouchSpecialThing+0x8fc>
   2688c:	20 14 00 0f 	move s1, 5
   26890:	40 00 00 0f 	move s2, 0
   26894:	00 80 fc c0 	move s0, s25
   26898:	20 fd ff f9 	call -2944 <P_GiveWeapon>
   2689c:	20 0d 00 f2 	bz s0, 420 <P_TouchSpecialThing+0xa44>
   268a0:	02 00 00 4f 	movehi s0, 2
   268a4:	00 04 61 00 	or s0, s0, 6209
   268a8:	14 00 00 f6 	b 80 <P_TouchSpecialThing+0x8fc>
   268ac:	18 a0 01 a8 	load_32 s0, 104(s24)
   268b0:	30 00 00 4f 	movehi s1, 16
   268b4:	40 80 10 c0 	and s2, s0, s1
   268b8:	20 08 00 0f 	move s1, 2
   268bc:	00 80 fc c0 	move s0, s25
   268c0:	16 fd ff f9 	call -2984 <P_GiveWeapon>
   268c4:	e0 0b 00 f2 	bz s0, 380 <P_TouchSpecialThing+0xa44>
   268c8:	01 00 00 4f 	movehi s0, 1
   268cc:	00 38 22 00 	or s0, s0, 2190
   268d0:	0a 00 00 f6 	b 40 <P_TouchSpecialThing+0x8fc>
   268d4:	18 a0 01 a8 	load_32 s0, 104(s24)
   268d8:	30 00 00 4f 	movehi s1, 16
   268dc:	40 80 10 c0 	and s2, s0, s1
   268e0:	20 20 00 0f 	move s1, 8
   268e4:	00 80 fc c0 	move s0, s25
   268e8:	0c fd ff f9 	call -3024 <P_GiveWeapon>
   268ec:	a0 0a 00 f2 	bz s0, 340 <P_TouchSpecialThing+0xa44>
   268f0:	02 00 00 4f 	movehi s0, 2
   268f4:	00 74 57 00 	or s0, s0, 5597
   268f8:	19 60 03 88 	store_32 s0, 216(s25)
   268fc:	40 87 00 0f 	move s26, 33
   26900:	18 a8 01 a0 	load_u8 s0, 106(s24)
   26904:	00 00 02 01 	and s0, s0, 128
   26908:	a0 07 00 f2 	bz s0, 244 <P_TouchSpecialThing+0xa00>
   2690c:	39 00 00 f6 	b 228 <P_TouchSpecialThing+0x9f4>
   26910:	00 20 03 0f 	move s0, 200
   26914:	19 80 00 88 	store_32 s0, 32(s25)
   26918:	42 00 00 4f 	movehi s2, 2
   2691c:	39 00 00 a8 	load_32 s1, (s25)
   26920:	01 b0 01 88 	store_32 s0, 108(s1)
   26924:	02 9c 39 00 	or s0, s2, 3687
   26928:	2d 00 00 f6 	b 180 <P_TouchSpecialThing+0x9e0>
   2692c:	00 20 03 0f 	move s0, 200
   26930:	19 90 00 88 	store_32 s0, 36(s25)
   26934:	19 a0 00 a8 	load_32 s0, 40(s25)
   26938:	a0 be ff f5 	bnz s0, -2092 <P_TouchSpecialThing+0x110>
   2693c:	f2 fd ff f7 	b -2104 <P_TouchSpecialThing+0x108>
   26940:	40 80 00 c1 	cmpeq_i s2, s0, s1
   26944:	e2 07 00 f4 	bnz s2, 252 <P_TouchSpecialThing+0xa44>
   26948:	53 04 00 4f 	movehi s2, 51
   2694c:	7a 04 00 4f 	movehi s3, 58
   26950:	42 f0 7b 00 	or s2, s2, 7932
   26954:	63 90 7f 00 	or s3, s3, 8164
   26958:	42 00 00 a8 	load_32 s2, (s2)
   2695c:	63 00 00 a8 	load_32 s3, (s3)
   26960:	82 7c 00 0a 	shr s4, s2, 31
   26964:	63 ec ff 01 	and s3, s3, -5
   26968:	42 00 52 c0 	add_i s2, s2, s4
   2696c:	63 00 00 10 	cmpeq_i s3, s3, 0
   26970:	42 04 00 09 	ashr s2, s2, 1
   26974:	63 04 00 01 	and s3, s3, 1
   26978:	42 80 b1 c0 	shl s2, s2, s3
   2697c:	42 00 50 c0 	add_i s2, s2, s0
   26980:	62 80 20 c1 	cmpgt_i s3, s2, s1
   26984:	43 00 00 f4 	bnz s3, 8 <P_TouchSpecialThing+0x990>
   26988:	20 00 f1 c0 	move s1, s2
   2698c:	39 70 02 88 	store_32 s1, 156(s25)
   26990:	20 02 00 f4 	bnz s0, 68 <P_TouchSpecialThing+0x9d8>
   26994:	19 c0 01 a8 	load_32 s0, 112(s25)
   26998:	e0 01 00 f4 	bnz s0, 60 <P_TouchSpecialThing+0x9d8>
   2699c:	19 10 02 a8 	load_32 s0, 132(s25)
   269a0:	60 01 00 f2 	bz s0, 44 <P_TouchSpecialThing+0x9d0>
   269a4:	00 0c 00 0f 	move s0, 3
   269a8:	0a 00 00 f6 	b 40 <P_TouchSpecialThing+0x9d4>
   269ac:	02 00 00 4f 	movehi s0, 2
   269b0:	00 bc 23 00 	or s0, s0, 2287
   269b4:	0a 00 00 f6 	b 40 <P_TouchSpecialThing+0x9e0>
   269b8:	00 04 00 0f 	move s0, 1
   269bc:	19 d0 01 88 	store_32 s0, 116(s25)
   269c0:	01 00 00 4f 	movehi s0, 1
   269c4:	00 24 77 00 	or s0, s0, 7625
   269c8:	05 00 00 f6 	b 20 <P_TouchSpecialThing+0x9e0>
   269cc:	00 04 00 0f 	move s0, 1
   269d0:	19 d0 01 88 	store_32 s0, 116(s25)
   269d4:	00 00 00 4f 	movehi s0, 0
   269d8:	00 e0 7b 00 	or s0, s0, 7928
   269dc:	19 60 03 88 	store_32 s0, 216(s25)
   269e0:	40 83 00 0f 	move s26, 32
   269e4:	18 a8 01 a0 	load_u8 s0, 106(s24)
   269e8:	00 00 02 01 	and s0, s0, 128
   269ec:	80 00 00 f2 	bz s0, 16 <P_TouchSpecialThing+0xa00>
   269f0:	19 40 03 a8 	load_32 s0, 208(s25)
   269f4:	00 04 00 05 	add_i s0, s0, 1
   269f8:	19 40 03 88 	store_32 s0, 208(s25)
   269fc:	00 00 fc c0 	move s0, s24
   26a00:	61 2d 00 f8 	call 46468 <P_RemoveMobj>
   26a04:	19 80 03 a8 	load_32 s0, 224(s25)
   26a08:	3a 04 00 4f 	movehi s1, 58
   26a0c:	21 c0 6d 00 	or s1, s1, 7024
   26a10:	00 18 00 05 	add_i s0, s0, 6
   26a14:	19 80 03 88 	store_32 s0, 224(s25)
   26a18:	1b 04 00 4f 	movehi s0, 59
   26a1c:	21 00 00 a8 	load_32 s1, (s1)
   26a20:	00 40 02 00 	or s0, s0, 144
   26a24:	21 60 04 07 	mull_i s1, s1, 280
   26a28:	00 80 50 c0 	add_i s0, s0, s1
   26a2c:	19 00 10 c1 	cmpne_i s0, s25, s0
   26a30:	80 00 00 f4 	bnz s0, 16 <P_TouchSpecialThing+0xa44>
   26a34:	00 00 00 0f 	move s0, 0
   26a38:	20 00 fd c0 	move s1, s26
   26a3c:	6a 96 00 f8 	call 154024 <S_StartSound>
   26a40:	fe c3 01 a8 	load_32 ra, 112(sp)
   26a44:	5e d3 01 a8 	load_32 s26, 116(sp)
   26a48:	3e e3 01 a8 	load_32 s25, 120(sp)
   26a4c:	1e f3 01 a8 	load_32 s24, 124(sp)
   26a50:	de 03 02 05 	add_i sp, sp, 128
   26a54:	1f 00 00 f0 	ret

0000000000026a58 P_KillMobj:
   26a58:	de 03 ff 05 	add_i sp, sp, -64
   26a5c:	1e f3 00 88 	store_32 s24, 60(sp)
   26a60:	fe e3 00 88 	store_32 ra, 56(sp)
   26a64:	00 83 f0 c0 	move s24, s1
   26a68:	7d fc fe 4f 	movehi s3, 522237
   26a6c:	58 a0 01 a8 	load_32 s2, 104(s24)
   26a70:	23 ec 7f 00 	or s1, s3, 8187
   26a74:	22 80 10 c0 	and s1, s2, s1
   26a78:	38 a0 01 88 	store_32 s1, 104(s24)
   26a7c:	98 60 01 a8 	load_32 s4, 88(s24)
   26a80:	84 48 00 10 	cmpeq_i s4, s4, 18
   26a84:	84 00 00 f4 	bnz s4, 16 <P_KillMobj+0x3c>
   26a88:	23 ec 77 00 	or s1, s3, 7675
   26a8c:	22 80 10 c0 	and s1, s2, s1
   26a90:	38 a0 01 88 	store_32 s1, 104(s24)
   26a94:	40 10 00 4f 	movehi s2, 128
   26a98:	42 00 10 00 	or s2, s2, 1024
   26a9c:	41 00 01 c0 	or s2, s1, s2
   26aa0:	58 a0 01 88 	store_32 s2, 104(s24)
   26aa4:	58 10 01 a8 	load_32 s2, 68(s24)
   26aa8:	42 08 00 09 	ashr s2, s2, 2
   26aac:	58 10 01 88 	store_32 s2, 68(s24)
   26ab0:	20 03 00 f2 	bz s0, 100 <P_KillMobj+0xbc>
   26ab4:	40 10 02 a8 	load_32 s2, 132(s0)
   26ab8:	e2 02 00 f2 	bz s2, 92 <P_KillMobj+0xbc>
   26abc:	60 40 00 4f 	movehi s3, 512
   26ac0:	21 80 11 c0 	and s1, s1, s3
   26ac4:	81 00 00 f2 	bz s1, 16 <P_KillMobj+0x7c>
   26ac8:	22 30 03 a8 	load_32 s1, 204(s2)
   26acc:	21 04 00 05 	add_i s1, s1, 1
   26ad0:	22 30 03 88 	store_32 s1, 204(s2)
   26ad4:	38 10 02 a8 	load_32 s1, 132(s24)
   26ad8:	61 03 00 f2 	bz s1, 108 <P_KillMobj+0xec>
   26adc:	7b 04 00 4f 	movehi s3, 59
   26ae0:	63 40 02 00 	or s3, s3, 144
   26ae4:	21 80 61 c0 	sub_i s1, s1, s3
   26ae8:	75 e0 2b 4f 	movehi s3, 89877
   26aec:	21 0c 00 09 	ashr s1, s1, 3
   26af0:	63 b0 78 00 	or s3, s3, 7724
   26af4:	21 80 71 c0 	mull_i s1, s1, s3
   26af8:	22 80 50 c0 	add_i s1, s2, s1
   26afc:	41 80 01 a8 	load_32 s2, 96(s1)
   26b00:	42 04 00 05 	add_i s2, s2, 1
   26b04:	41 80 01 88 	store_32 s2, 96(s1)
   26b08:	38 10 02 a8 	load_32 s1, 132(s24)
   26b0c:	41 06 00 f2 	bz s1, 200 <P_KillMobj+0x17c>
   26b10:	0f 00 00 f6 	b 60 <P_KillMobj+0xf4>
   26b14:	5b 04 00 4f 	movehi s2, 59
   26b18:	60 40 00 4f 	movehi s3, 512
   26b1c:	61 80 11 c0 	and s3, s1, s3
   26b20:	42 c0 01 00 	or s2, s2, 112
   26b24:	22 00 00 a8 	load_32 s1, (s2)
   26b28:	e3 00 00 f2 	bz s3, 28 <P_KillMobj+0xec>
   26b2c:	c1 00 00 f4 	bnz s1, 24 <P_KillMobj+0xec>
   26b30:	3b 04 00 4f 	movehi s1, 59
   26b34:	21 40 02 00 	or s1, s1, 144
   26b38:	41 30 03 a8 	load_32 s2, 204(s1)
   26b3c:	42 04 00 05 	add_i s2, s2, 1
   26b40:	41 30 03 88 	store_32 s2, 204(s1)
   26b44:	38 10 02 a8 	load_32 s1, 132(s24)
   26b48:	61 04 00 f2 	bz s1, 140 <P_KillMobj+0x17c>
   26b4c:	80 01 00 f4 	bnz s0, 48 <P_KillMobj+0x124>
   26b50:	1b 04 00 4f 	movehi s0, 59
   26b54:	55 e0 2b 4f 	movehi s2, 89877
   26b58:	00 40 02 00 	or s0, s0, 144
   26b5c:	01 00 60 c0 	sub_i s0, s1, s0
   26b60:	42 b0 78 00 	or s2, s2, 7724
   26b64:	00 0c 00 09 	ashr s0, s0, 3
   26b68:	00 00 71 c0 	mull_i s0, s0, s2
   26b6c:	01 00 50 c0 	add_i s0, s1, s0
   26b70:	40 80 01 a8 	load_32 s2, 96(s0)
   26b74:	42 04 00 05 	add_i s2, s2, 1
   26b78:	40 80 01 88 	store_32 s2, 96(s0)
   26b7c:	18 a0 01 a8 	load_32 s0, 104(s24)
   26b80:	00 f4 ff 01 	and s0, s0, -3
   26b84:	18 a0 01 88 	store_32 s0, 104(s24)
   26b88:	00 04 00 0f 	move s0, 1
   26b8c:	01 10 00 88 	store_32 s0, 4(s1)
   26b90:	00 80 f0 c0 	move s0, s1
   26b94:	c8 15 00 f8 	call 22304 <P_DropWeapon>
   26b98:	1a 04 00 4f 	movehi s0, 58
   26b9c:	38 10 02 a8 	load_32 s1, 132(s24)
   26ba0:	5b 04 00 4f 	movehi s2, 59
   26ba4:	60 0c 00 4f 	movehi s3, 96
   26ba8:	00 c0 6d 00 	or s0, s0, 7024
   26bac:	42 40 02 00 	or s2, s2, 144
   26bb0:	63 d0 21 00 	or s3, s3, 2164
   26bb4:	00 00 00 a8 	load_32 s0, (s0)
   26bb8:	00 60 04 07 	mull_i s0, s0, 280
   26bbc:	02 00 50 c0 	add_i s0, s2, s0
   26bc0:	21 00 10 c1 	cmpne_i s1, s1, s0
   26bc4:	03 00 00 a8 	load_32 s0, (s3)
   26bc8:	61 00 00 f4 	bnz s1, 12 <P_KillMobj+0x17c>
   26bcc:	40 00 00 f2 	bz s0, 8 <P_KillMobj+0x17c>
   26bd0:	cc d9 ff f9 	call -39120 <AM_Stop>
   26bd4:	38 b0 01 a8 	load_32 s1, 108(s24)
   26bd8:	60 00 00 0f 	move s3, 0
   26bdc:	18 70 01 a8 	load_32 s0, 92(s24)
   26be0:	40 20 00 a8 	load_32 s2, 8(s0)
   26be4:	43 00 61 c0 	sub_i s2, s3, s2
   26be8:	21 00 31 c1 	cmpge_i s1, s1, s2
   26bec:	81 00 00 f4 	bnz s1, 16 <P_KillMobj+0x1a4>
   26bf0:	20 d0 00 a8 	load_32 s1, 52(s0)
   26bf4:	41 00 00 f2 	bz s1, 8 <P_KillMobj+0x1a4>
   26bf8:	02 00 00 f6 	b 8 <P_KillMobj+0x1a8>
   26bfc:	20 c0 00 a8 	load_32 s1, 48(s0)
   26c00:	00 00 fc c0 	move s0, s24
   26c04:	85 2c 00 f8 	call 45588 <P_SetMobjState>
   26c08:	bb d5 ff f9 	call -43284 <P_Random>
   26c0c:	38 80 01 a8 	load_32 s1, 96(s24)
   26c10:	00 0c 00 01 	and s0, s0, 3
   26c14:	01 00 60 c0 	sub_i s0, s1, s0
   26c18:	20 04 00 12 	cmpgt_i s1, s0, 1
   26c1c:	41 00 00 f4 	bnz s1, 8 <P_KillMobj+0x1cc>
   26c20:	00 04 00 0f 	move s0, 1
   26c24:	18 80 01 88 	store_32 s0, 96(s24)
   26c28:	18 60 01 a8 	load_32 s0, 88(s24)
   26c2c:	00 fc ff 05 	add_i s0, s0, -1
   26c30:	20 58 00 16 	cmpgt_u s1, s0, 22
   26c34:	61 02 00 f4 	bnz s1, 76 <P_KillMobj+0x228>
   26c38:	23 00 00 4f 	movehi s1, 3
   26c3c:	00 08 00 0b 	shl s0, s0, 2
   26c40:	60 fc 00 0f 	move s3, 63
   26c44:	21 d0 42 00 	or s1, s1, 4276
   26c48:	00 80 50 c0 	add_i s0, s0, s1
   26c4c:	00 00 00 a8 	load_32 s0, (s0)
   26c50:	00 00 00 f0 	b s0
   26c54:	60 34 01 0f 	move s3, 77
   26c58:	02 00 00 f6 	b 8 <P_KillMobj+0x208>
   26c5c:	60 24 01 0f 	move s3, 73
   26c60:	18 30 00 a8 	load_32 s0, 12(s24)
   26c64:	40 00 80 4f 	movehi s2, 262144
   26c68:	38 40 00 a8 	load_32 s1, 16(s24)
   26c6c:	97 2f 00 f8 	call 48732 <P_SpawnMobj>
   26c70:	20 a0 01 a8 	load_32 s1, 104(s0)
   26c74:	50 00 00 4f 	movehi s2, 16
   26c78:	21 00 01 c0 	or s1, s1, s2
   26c7c:	20 a0 01 88 	store_32 s1, 104(s0)
   26c80:	fe e3 00 a8 	load_32 ra, 56(sp)
   26c84:	1e f3 00 a8 	load_32 s24, 60(sp)
   26c88:	de 03 01 05 	add_i sp, sp, 64
   26c8c:	1f 00 00 f0 	ret

0000000000026c90 P_DamageMobj:
   26c90:	de 03 ff 05 	add_i sp, sp, -64
   26c94:	1e f3 00 88 	store_32 s24, 60(sp)
   26c98:	3e e3 00 88 	store_32 s25, 56(sp)
   26c9c:	5e d3 00 88 	store_32 s26, 52(sp)
   26ca0:	7e c3 00 88 	store_32 s27, 48(sp)
   26ca4:	fe b3 00 88 	store_32 ra, 44(sp)
   26ca8:	00 03 f0 c0 	move s24, s0
   26cac:	18 a0 01 a8 	load_32 s0, 104(s24)
   26cb0:	40 83 f1 c0 	move s26, s3
   26cb4:	20 83 f0 c0 	move s25, s1
   26cb8:	80 10 00 01 	and s4, s0, 4
   26cbc:	84 1c 00 f2 	bz s4, 912 <P_DamageMobj+0x3bc>
   26cc0:	38 b0 01 a8 	load_32 s1, 108(s24)
   26cc4:	21 04 00 14 	cmplt_i s1, s1, 1
   26cc8:	21 1c 00 f4 	bnz s1, 900 <P_DamageMobj+0x3bc>
   26ccc:	20 00 01 4f 	movehi s1, 2048
   26cd0:	3e 90 00 88 	store_32 s1, 36(sp)
   26cd4:	20 80 10 c0 	and s1, s0, s1
   26cd8:	a1 00 00 f2 	bz s1, 20 <P_DamageMobj+0x5c>
   26cdc:	20 00 00 0f 	move s1, 0
   26ce0:	38 40 01 88 	store_32 s1, 80(s24)
   26ce4:	38 30 01 88 	store_32 s1, 76(s24)
   26ce8:	38 20 01 88 	store_32 s1, 72(s24)
   26cec:	3a 04 00 4f 	movehi s1, 58
   26cf0:	78 13 02 a8 	load_32 s27, 132(s24)
   26cf4:	21 90 7f 00 	or s1, s1, 8164
   26cf8:	7b 00 00 11 	cmpne_i s3, s27, 0
   26cfc:	21 00 00 a8 	load_32 s1, (s1)
   26d00:	21 00 00 10 	cmpeq_i s1, s1, 0
   26d04:	23 80 10 c0 	and s1, s3, s1
   26d08:	21 04 00 01 	and s1, s1, 1
   26d0c:	7a 80 90 c0 	ashr s3, s26, s1
   26d10:	59 09 00 f2 	bz s25, 296 <P_DamageMobj+0x1a8>
   26d14:	00 00 40 01 	and s0, s0, 4096
   26d18:	00 09 00 f4 	bnz s0, 288 <P_DamageMobj+0x1a8>
   26d1c:	c2 00 00 f2 	bz s2, 24 <P_DamageMobj+0xa4>
   26d20:	02 10 02 a8 	load_32 s0, 132(s2)
   26d24:	80 00 00 f2 	bz s0, 16 <P_DamageMobj+0xa4>
   26d28:	00 c0 01 a8 	load_32 s0, 112(s0)
   26d2c:	00 1c 00 10 	cmpeq_i s0, s0, 7
   26d30:	40 08 00 f4 	bnz s0, 264 <P_DamageMobj+0x1a8>
   26d34:	5e 80 00 88 	store_32 s2, 32(sp)
   26d38:	19 30 00 a8 	load_32 s0, 12(s25)
   26d3c:	39 40 00 a8 	load_32 s1, 16(s25)
   26d40:	58 30 00 a8 	load_32 s2, 12(s24)
   26d44:	7e a0 00 88 	store_32 s3, 40(sp)
   26d48:	78 40 00 a8 	load_32 s3, 16(s24)
   26d4c:	87 49 00 f8 	call 75292 <R_PointToAngle2>
   26d50:	38 70 01 a8 	load_32 s1, 92(s24)
   26d54:	1e 70 00 88 	store_32 s0, 28(sp)
   26d58:	04 0c 00 4f 	movehi s0, 100
   26d5c:	5e a0 00 a8 	load_32 s2, 40(sp)
   26d60:	21 20 01 a8 	load_32 s1, 72(s1)
   26d64:	02 00 70 c0 	mull_i s0, s2, s0
   26d68:	3c b7 00 f8 	call 187632 <__divsi3>
   26d6c:	5e a0 00 a8 	load_32 s2, 40(sp)
   26d70:	60 00 f0 c0 	move s3, s0
   26d74:	22 9c 00 12 	cmpgt_i s1, s2, 39
   26d78:	a1 02 00 f4 	bnz s1, 84 <P_DamageMobj+0x13c>
   26d7c:	18 b0 01 a8 	load_32 s0, 108(s24)
   26d80:	02 00 50 c1 	cmple_i s0, s2, s0
   26d84:	40 02 00 f4 	bnz s0, 72 <P_DamageMobj+0x13c>
   26d88:	18 50 00 a8 	load_32 s0, 20(s24)
   26d8c:	40 40 00 4f 	movehi s2, 512
   26d90:	39 50 00 a8 	load_32 s1, 20(s25)
   26d94:	00 80 60 c0 	sub_i s0, s0, s1
   26d98:	22 04 00 00 	or s1, s2, 1
   26d9c:	00 80 40 c1 	cmplt_i s0, s0, s1
   26da0:	60 01 00 f4 	bnz s0, 44 <P_DamageMobj+0x13c>
   26da4:	20 83 f1 c0 	move s25, s3
   26da8:	53 d5 ff f9 	call -43700 <P_Random>
   26dac:	60 80 fc c0 	move s3, s25
   26db0:	3e 70 00 a8 	load_32 s1, 28(sp)
   26db4:	00 04 00 01 	and s0, s0, 1
   26db8:	c0 00 00 f2 	bz s0, 24 <P_DamageMobj+0x140>
   26dbc:	00 00 80 4f 	movehi s0, 262144
   26dc0:	21 00 30 c0 	xor s1, s1, s0
   26dc4:	63 08 00 0b 	shl s3, s3, 2
   26dc8:	02 00 00 f6 	b 8 <P_DamageMobj+0x140>
   26dcc:	3e 70 00 a8 	load_32 s1, 28(sp)
   26dd0:	14 04 00 4f 	movehi s0, 52
   26dd4:	7e 70 00 88 	store_32 s3, 28(sp)
   26dd8:	43 00 00 4f 	movehi s2, 3
   26ddc:	21 44 00 0a 	shr s1, s1, 17
   26de0:	00 40 19 00 	or s0, s0, 1616
   26de4:	42 f0 7f 00 	or s2, s2, 8188
   26de8:	21 03 11 c0 	and s25, s1, s2
   26dec:	00 00 00 a8 	load_32 s0, (s0)
   26df0:	00 80 5c c0 	add_i s0, s0, s25
   26df4:	20 00 00 a8 	load_32 s1, (s0)
   26df8:	00 80 f1 c0 	move s0, s3
   26dfc:	4e d4 ff f9 	call -44744 <FixedMul>
   26e00:	2d 04 00 4f 	movehi s1, 45
   26e04:	58 20 01 a8 	load_32 s2, 72(s24)
   26e08:	21 90 41 00 	or s1, s1, 4196
   26e0c:	02 00 50 c0 	add_i s0, s2, s0
   26e10:	18 20 01 88 	store_32 s0, 72(s24)
   26e14:	21 80 5c c0 	add_i s1, s1, s25
   26e18:	21 00 00 a8 	load_32 s1, (s1)
   26e1c:	1e 70 00 a8 	load_32 s0, 28(sp)
   26e20:	45 d4 ff f9 	call -44780 <FixedMul>
   26e24:	38 30 01 a8 	load_32 s1, 76(s24)
   26e28:	01 00 50 c0 	add_i s0, s1, s0
   26e2c:	18 30 01 88 	store_32 s0, 76(s24)
   26e30:	5e 80 00 a8 	load_32 s2, 32(sp)
   26e34:	7e a0 00 a8 	load_32 s3, 40(sp)
   26e38:	db 09 00 f2 	bz s27, 312 <P_DamageMobj+0x2e0>
   26e3c:	18 d0 00 a8 	load_32 s0, 52(s24)
   26e40:	00 00 00 a8 	load_32 s0, (s0)
   26e44:	00 38 00 a4 	load_u16 s0, 14(s0)
   26e48:	00 2c 00 11 	cmpne_i s0, s0, 11
   26e4c:	a0 00 00 f4 	bnz s0, 20 <P_DamageMobj+0x1d0>
   26e50:	18 b0 01 a8 	load_32 s0, 108(s24)
   26e54:	23 00 40 c1 	cmplt_i s1, s3, s0
   26e58:	41 00 00 f4 	bnz s1, 8 <P_DamageMobj+0x1d0>
   26e5c:	60 fc ff 05 	add_i s3, s0, -1
   26e60:	03 9c 0f 12 	cmpgt_i s0, s3, 999
   26e64:	c0 00 00 f4 	bnz s0, 24 <P_DamageMobj+0x1ec>
   26e68:	1b 10 03 a0 	load_u8 s0, 196(s27)
   26e6c:	00 08 00 01 	and s0, s0, 2
   26e70:	e0 0e 00 f4 	bnz s0, 476 <P_DamageMobj+0x3bc>
   26e74:	1b b0 00 a8 	load_32 s0, 44(s27)
   26e78:	a0 0e 00 f4 	bnz s0, 468 <P_DamageMobj+0x3bc>
   26e7c:	1b a0 00 a8 	load_32 s0, 40(s27)
   26e80:	e0 00 00 f2 	bz s0, 28 <P_DamageMobj+0x20c>
   26e84:	20 03 f1 c0 	move s25, s2
   26e88:	00 04 00 10 	cmpeq_i s0, s0, 1
   26e8c:	40 00 00 f4 	bnz s0, 8 <P_DamageMobj+0x204>
   26e90:	09 00 00 f6 	b 36 <P_DamageMobj+0x224>
   26e94:	20 0c 00 0f 	move s1, 3
   26e98:	08 00 00 f6 	b 32 <P_DamageMobj+0x228>
   26e9c:	40 83 f1 c0 	move s26, s3
   26ea0:	1b 80 00 a8 	load_32 s0, 32(s27)
   26ea4:	00 00 6d c0 	sub_i s0, s0, s26
   26ea8:	20 00 00 12 	cmpgt_i s1, s0, 0
   26eac:	a1 02 00 f4 	bnz s1, 84 <P_DamageMobj+0x270>
   26eb0:	13 00 00 f6 	b 76 <P_DamageMobj+0x26c>
   26eb4:	20 08 00 0f 	move s1, 2
   26eb8:	40 83 f1 c0 	move s26, s3
   26ebc:	00 80 f1 c0 	move s0, s3
   26ec0:	e6 b6 00 f8 	call 187288 <__divsi3>
   26ec4:	3b 90 00 a8 	load_32 s1, 36(s27)
   26ec8:	41 00 20 c1 	cmpgt_i s2, s1, s0
   26ecc:	82 00 00 f4 	bnz s2, 16 <P_DamageMobj+0x24c>
   26ed0:	00 00 00 0f 	move s0, 0
   26ed4:	1b a0 00 88 	store_32 s0, 40(s27)
   26ed8:	00 80 f0 c0 	move s0, s1
   26edc:	21 00 60 c0 	sub_i s1, s1, s0
   26ee0:	3b 90 00 88 	store_32 s1, 36(s27)
   26ee4:	5a 03 60 c0 	sub_i s26, s26, s0
   26ee8:	40 80 fc c0 	move s2, s25
   26eec:	1b 80 00 a8 	load_32 s0, 32(s27)
   26ef0:	00 00 6d c0 	sub_i s0, s0, s26
   26ef4:	20 00 00 12 	cmpgt_i s1, s0, 0
   26ef8:	41 00 00 f4 	bnz s1, 8 <P_DamageMobj+0x270>
   26efc:	00 00 00 0f 	move s0, 0
   26f00:	1b 80 00 88 	store_32 s0, 32(s27)
   26f04:	5b 90 03 88 	store_32 s2, 228(s27)
   26f08:	1b 70 03 a8 	load_32 s0, 220(s27)
   26f0c:	00 00 5d c0 	add_i s0, s0, s26
   26f10:	20 90 01 14 	cmplt_i s1, s0, 100
   26f14:	41 00 00 f4 	bnz s1, 8 <P_DamageMobj+0x28c>
   26f18:	00 90 01 0f 	move s0, 100
   26f1c:	3a 04 00 4f 	movehi s1, 58
   26f20:	1b 70 03 88 	store_32 s0, 220(s27)
   26f24:	1b 04 00 4f 	movehi s0, 59
   26f28:	21 c0 6d 00 	or s1, s1, 7024
   26f2c:	00 40 02 00 	or s0, s0, 144
   26f30:	21 00 00 a8 	load_32 s1, (s1)
   26f34:	21 60 04 07 	mull_i s1, s1, 280
   26f38:	00 80 50 c0 	add_i s0, s0, s1
   26f3c:	1b 00 10 c1 	cmpne_i s0, s27, s0
   26f40:	80 01 00 f4 	bnz s0, 48 <P_DamageMobj+0x2e0>
   26f44:	20 03 f1 c0 	move s25, s2
   26f48:	3a 90 01 14 	cmplt_i s1, s26, 100
   26f4c:	00 00 fd c0 	move s0, s26
   26f50:	41 00 00 f4 	bnz s1, 8 <P_DamageMobj+0x2c8>
   26f54:	00 90 01 0f 	move s0, 100
   26f58:	00 04 00 0b 	shl s0, s0, 1
   26f5c:	20 28 00 0f 	move s1, 10
   26f60:	40 a0 00 05 	add_i s2, s0, 40
   26f64:	00 a0 00 0f 	move s0, 40
   26f68:	26 9c ff f9 	call -102248 <I_Tactile>
   26f6c:	40 80 fc c0 	move s2, s25
   26f70:	18 b0 01 a8 	load_32 s0, 108(s24)
   26f74:	00 00 6d c0 	sub_i s0, s0, s26
   26f78:	18 b0 01 88 	store_32 s0, 108(s24)
   26f7c:	20 00 00 12 	cmpgt_i s1, s0, 0
   26f80:	41 00 00 f4 	bnz s1, 8 <P_DamageMobj+0x2f8>
   26f84:	2f 00 00 f6 	b 188 <P_DamageMobj+0x3b0>
   26f88:	20 03 f1 c0 	move s25, s2
   26f8c:	da d4 ff f9 	call -44184 <P_Random>
   26f90:	38 70 01 a8 	load_32 s1, 92(s24)
   26f94:	41 80 00 a8 	load_32 s2, 32(s1)
   26f98:	00 00 31 c1 	cmpge_i s0, s0, s2
   26f9c:	40 01 00 f4 	bnz s0, 40 <P_DamageMobj+0x334>
   26fa0:	18 a0 01 a8 	load_32 s0, 104(s24)
   26fa4:	5e 90 00 a8 	load_32 s2, 36(sp)
   26fa8:	40 00 11 c0 	and s2, s0, s2
   26fac:	c2 00 00 f4 	bnz s2, 24 <P_DamageMobj+0x334>
   26fb0:	00 00 01 00 	or s0, s0, 64
   26fb4:	18 a0 01 88 	store_32 s0, 104(s24)
   26fb8:	21 70 00 a8 	load_32 s1, 28(s1)
   26fbc:	00 00 fc c0 	move s0, s24
   26fc0:	96 2b 00 f8 	call 44632 <P_SetMobjState>
   26fc4:	00 00 00 0f 	move s0, 0
   26fc8:	18 f0 01 88 	store_32 s0, 124(s24)
   26fcc:	18 00 02 a8 	load_32 s0, 128(s24)
   26fd0:	40 80 fc c0 	move s2, s25
   26fd4:	a0 04 00 f2 	bz s0, 148 <P_DamageMobj+0x3d8>
   26fd8:	18 60 01 a8 	load_32 s0, 88(s24)
   26fdc:	22 00 0c c1 	cmpeq_i s1, s2, s24
   26fe0:	61 03 00 f4 	bnz s1, 108 <P_DamageMobj+0x3bc>
   26fe4:	42 03 00 f2 	bz s2, 104 <P_DamageMobj+0x3bc>
   26fe8:	00 0c 00 11 	cmpne_i s0, s0, 3
   26fec:	00 03 00 f4 	bnz s0, 96 <P_DamageMobj+0x3bc>
   26ff0:	02 60 01 a8 	load_32 s0, 88(s2)
   26ff4:	00 0c 00 10 	cmpeq_i s0, s0, 3
   26ff8:	a0 02 00 f4 	bnz s0, 84 <P_DamageMobj+0x3bc>
   26ffc:	58 e0 01 88 	store_32 s2, 120(s24)
   27000:	00 90 01 0f 	move s0, 100
   27004:	18 00 02 88 	store_32 s0, 128(s24)
   27008:	54 04 00 4f 	movehi s2, 52
   2700c:	38 90 01 a8 	load_32 s1, 100(s24)
   27010:	18 70 01 a8 	load_32 s0, 92(s24)
   27014:	42 20 5c 00 	or s2, s2, 5896
   27018:	60 10 00 a8 	load_32 s3, 4(s0)
   2701c:	63 70 00 07 	mull_i s3, s3, 28
   27020:	42 80 51 c0 	add_i s2, s2, s3
   27024:	21 00 11 c1 	cmpne_i s1, s1, s2
   27028:	21 01 00 f4 	bnz s1, 36 <P_DamageMobj+0x3bc>
   2702c:	20 30 00 a8 	load_32 s1, 12(s0)
   27030:	e1 00 00 f2 	bz s1, 28 <P_DamageMobj+0x3bc>
   27034:	00 00 fc c0 	move s0, s24
   27038:	78 2b 00 f8 	call 44512 <P_SetMobjState>
   2703c:	04 00 00 f6 	b 16 <P_DamageMobj+0x3bc>
   27040:	00 00 f1 c0 	move s0, s2
   27044:	20 00 fc c0 	move s1, s24
   27048:	84 fe ff f9 	call -1520 <P_KillMobj>
   2704c:	fe b3 00 a8 	load_32 ra, 44(sp)
   27050:	7e c3 00 a8 	load_32 s27, 48(sp)
   27054:	5e d3 00 a8 	load_32 s26, 52(sp)
   27058:	3e e3 00 a8 	load_32 s25, 56(sp)
   2705c:	1e f3 00 a8 	load_32 s24, 60(sp)
   27060:	de 03 01 05 	add_i sp, sp, 64
   27064:	1f 00 00 f0 	ret
   27068:	22 ff ff f3 	bz s2, -28 <P_DamageMobj+0x3bc>
   2706c:	02 00 0c c1 	cmpeq_i s0, s2, s24
   27070:	e0 fe ff f5 	bnz s0, -36 <P_DamageMobj+0x3bc>
   27074:	df ff ff f7 	b -132 <P_DamageMobj+0x360>

0000000000027078 T_FireFlicker:
   27078:	de 03 ff 05 	add_i sp, sp, -64
   2707c:	1e f3 00 88 	store_32 s24, 60(sp)
   27080:	fe e3 00 88 	store_32 ra, 56(sp)
   27084:	00 03 f0 c0 	move s24, s0
   27088:	18 40 00 a8 	load_32 s0, 16(s24)
   2708c:	00 fc ff 05 	add_i s0, s0, -1
   27090:	18 40 00 88 	store_32 s0, 16(s24)
   27094:	40 00 00 f4 	bnz s0, 8 <T_FireFlicker+0x24>
   27098:	05 00 00 f6 	b 20 <T_FireFlicker+0x34>
   2709c:	fe e3 00 a8 	load_32 ra, 56(sp)
   270a0:	1e f3 00 a8 	load_32 s24, 60(sp)
   270a4:	de 03 01 05 	add_i sp, sp, 64
   270a8:	1f 00 00 f0 	ret
   270ac:	92 d4 ff f9 	call -44472 <P_Random>
   270b0:	38 30 00 a8 	load_32 s1, 12(s24)
   270b4:	00 10 00 0b 	shl s0, s0, 4
   270b8:	40 c0 00 01 	and s2, s0, 48
   270bc:	61 30 00 a6 	load_s16 s3, 12(s1)
   270c0:	18 60 00 a8 	load_32 s0, 24(s24)
   270c4:	63 00 61 c0 	sub_i s3, s3, s2
   270c8:	63 00 40 c1 	cmplt_i s3, s3, s0
   270cc:	63 00 00 f4 	bnz s3, 12 <T_FireFlicker+0x60>
   270d0:	18 50 00 a8 	load_32 s0, 20(s24)
   270d4:	00 00 61 c0 	sub_i s0, s0, s2
   270d8:	01 30 00 86 	store_16 s0, 12(s1)
   270dc:	00 10 00 0f 	move s0, 4
   270e0:	18 40 00 88 	store_32 s0, 16(s24)
   270e4:	fe e3 00 a8 	load_32 ra, 56(sp)
   270e8:	1e f3 00 a8 	load_32 s24, 60(sp)
   270ec:	de 03 01 05 	add_i sp, sp, 64
   270f0:	1f 00 00 f0 	ret

00000000000270f4 P_SpawnFireFlicker:
   270f4:	de 03 ff 05 	add_i sp, sp, -64
   270f8:	1e f3 00 88 	store_32 s24, 60(sp)
   270fc:	3e e3 00 88 	store_32 s25, 56(sp)
   27100:	fe d3 00 88 	store_32 ra, 52(sp)
   27104:	00 03 f0 c0 	move s24, s0
   27108:	40 00 00 0f 	move s2, 0
   2710c:	00 70 00 0f 	move s0, 28
   27110:	20 cc 00 0f 	move s1, 51
   27114:	58 38 00 86 	store_16 s2, 14(s24)
   27118:	f0 95 00 f8 	call 153536 <Z_Malloc>
   2711c:	20 03 f0 c0 	move s25, s0
   27120:	7e 32 00 f8 	call 51704 <P_AddThinker>
   27124:	13 00 00 4f 	movehi s0, 19
   27128:	00 e0 41 00 	or s0, s0, 4216
   2712c:	19 20 00 88 	store_32 s0, 8(s25)
   27130:	19 33 00 88 	store_32 s24, 12(s25)
   27134:	38 30 00 a6 	load_s16 s1, 12(s24)
   27138:	39 50 00 88 	store_32 s1, 20(s25)
   2713c:	00 00 fc c0 	move s0, s24
   27140:	70 24 00 f8 	call 37312 <P_FindMinSurroundingLight>
   27144:	00 40 00 05 	add_i s0, s0, 16
   27148:	19 60 00 88 	store_32 s0, 24(s25)
   2714c:	00 10 00 0f 	move s0, 4
   27150:	19 40 00 88 	store_32 s0, 16(s25)
   27154:	fe d3 00 a8 	load_32 ra, 52(sp)
   27158:	3e e3 00 a8 	load_32 s25, 56(sp)
   2715c:	1e f3 00 a8 	load_32 s24, 60(sp)
   27160:	de 03 01 05 	add_i sp, sp, 64
   27164:	1f 00 00 f0 	ret

0000000000027168 T_LightFlash:
   27168:	de 03 ff 05 	add_i sp, sp, -64
   2716c:	1e f3 00 88 	store_32 s24, 60(sp)
   27170:	fe e3 00 88 	store_32 ra, 56(sp)
   27174:	00 03 f0 c0 	move s24, s0
   27178:	18 40 00 a8 	load_32 s0, 16(s24)
   2717c:	00 fc ff 05 	add_i s0, s0, -1
   27180:	18 40 00 88 	store_32 s0, 16(s24)
   27184:	40 00 00 f4 	bnz s0, 8 <T_LightFlash+0x24>
   27188:	05 00 00 f6 	b 20 <T_LightFlash+0x34>
   2718c:	fe e3 00 a8 	load_32 ra, 56(sp)
   27190:	1e f3 00 a8 	load_32 s24, 60(sp)
   27194:	de 03 01 05 	add_i sp, sp, 64
   27198:	1f 00 00 f0 	ret
   2719c:	18 30 00 a8 	load_32 s0, 12(s24)
   271a0:	40 30 00 a6 	load_s16 s2, 12(s0)
   271a4:	38 50 00 a8 	load_32 s1, 20(s24)
   271a8:	41 00 11 c1 	cmpne_i s2, s1, s2
   271ac:	c2 00 00 f4 	bnz s2, 24 <T_LightFlash+0x5c>
   271b0:	38 60 00 a8 	load_32 s1, 24(s24)
   271b4:	20 30 00 86 	store_16 s1, 12(s0)
   271b8:	4f d4 ff f9 	call -44740 <P_Random>
   271bc:	38 80 00 05 	add_i s1, s24, 32
   271c0:	04 00 00 f6 	b 16 <T_LightFlash+0x68>
   271c4:	20 30 00 86 	store_16 s1, 12(s0)
   271c8:	4b d4 ff f9 	call -44756 <P_Random>
   271cc:	38 70 00 05 	add_i s1, s24, 28
   271d0:	21 00 00 a8 	load_32 s1, (s1)
   271d4:	01 00 10 c0 	and s0, s1, s0
   271d8:	00 04 00 05 	add_i s0, s0, 1
   271dc:	18 40 00 88 	store_32 s0, 16(s24)
   271e0:	fe e3 00 a8 	load_32 ra, 56(sp)
   271e4:	1e f3 00 a8 	load_32 s24, 60(sp)
   271e8:	de 03 01 05 	add_i sp, sp, 64
   271ec:	1f 00 00 f0 	ret

00000000000271f0 P_SpawnLightFlash:
   271f0:	de 03 ff 05 	add_i sp, sp, -64
   271f4:	1e f3 00 88 	store_32 s24, 60(sp)
   271f8:	3e e3 00 88 	store_32 s25, 56(sp)
   271fc:	fe d3 00 88 	store_32 ra, 52(sp)
   27200:	00 03 f0 c0 	move s24, s0
   27204:	40 00 00 0f 	move s2, 0
   27208:	00 90 00 0f 	move s0, 36
   2720c:	20 cc 00 0f 	move s1, 51
   27210:	58 38 00 86 	store_16 s2, 14(s24)
   27214:	b1 95 00 f8 	call 153284 <Z_Malloc>
   27218:	20 03 f0 c0 	move s25, s0
   2721c:	3f 32 00 f8 	call 51452 <P_AddThinker>
   27220:	13 00 00 4f 	movehi s0, 19
   27224:	00 a0 45 00 	or s0, s0, 4456
   27228:	19 20 00 88 	store_32 s0, 8(s25)
   2722c:	19 33 00 88 	store_32 s24, 12(s25)
   27230:	38 30 00 a6 	load_s16 s1, 12(s24)
   27234:	39 50 00 88 	store_32 s1, 20(s25)
   27238:	00 00 fc c0 	move s0, s24
   2723c:	31 24 00 f8 	call 37060 <P_FindMinSurroundingLight>
   27240:	19 60 00 88 	store_32 s0, 24(s25)
   27244:	00 00 01 0f 	move s0, 64
   27248:	19 70 00 88 	store_32 s0, 28(s25)
   2724c:	00 1c 00 0f 	move s0, 7
   27250:	19 80 00 88 	store_32 s0, 32(s25)
   27254:	28 d4 ff f9 	call -44896 <P_Random>
   27258:	39 70 00 a8 	load_32 s1, 28(s25)
   2725c:	01 00 10 c0 	and s0, s1, s0
   27260:	00 04 00 05 	add_i s0, s0, 1
   27264:	19 40 00 88 	store_32 s0, 16(s25)
   27268:	fe d3 00 a8 	load_32 ra, 52(sp)
   2726c:	3e e3 00 a8 	load_32 s25, 56(sp)
   27270:	1e f3 00 a8 	load_32 s24, 60(sp)
   27274:	de 03 01 05 	add_i sp, sp, 64
   27278:	1f 00 00 f0 	ret

000000000002727c T_StrobeFlash:
   2727c:	20 40 00 a8 	load_32 s1, 16(s0)
   27280:	21 fc ff 05 	add_i s1, s1, -1
   27284:	20 40 00 88 	store_32 s1, 16(s0)
   27288:	41 00 00 f4 	bnz s1, 8 <T_StrobeFlash+0x14>
   2728c:	02 00 00 f6 	b 8 <T_StrobeFlash+0x18>
   27290:	1f 00 00 f0 	ret
   27294:	20 30 00 a8 	load_32 s1, 12(s0)
   27298:	61 30 00 a6 	load_s16 s3, 12(s1)
   2729c:	40 50 00 a8 	load_32 s2, 20(s0)
   272a0:	62 80 11 c1 	cmpne_i s3, s2, s3
   272a4:	e3 00 00 f4 	bnz s3, 28 <T_StrobeFlash+0x44>
   272a8:	40 60 00 a8 	load_32 s2, 24(s0)
   272ac:	41 30 00 86 	store_16 s2, 12(s1)
   272b0:	20 80 00 05 	add_i s1, s0, 32
   272b4:	21 00 00 a8 	load_32 s1, (s1)
   272b8:	20 40 00 88 	store_32 s1, 16(s0)
   272bc:	1f 00 00 f0 	ret
   272c0:	41 30 00 86 	store_16 s2, 12(s1)
   272c4:	20 70 00 05 	add_i s1, s0, 28
   272c8:	21 00 00 a8 	load_32 s1, (s1)
   272cc:	20 40 00 88 	store_32 s1, 16(s0)
   272d0:	1f 00 00 f0 	ret

00000000000272d4 P_SpawnStrobeFlash:
   272d4:	de 03 ff 05 	add_i sp, sp, -64
   272d8:	1e f3 00 88 	store_32 s24, 60(sp)
   272dc:	3e e3 00 88 	store_32 s25, 56(sp)
   272e0:	5e d3 00 88 	store_32 s26, 52(sp)
   272e4:	7e c3 00 88 	store_32 s27, 48(sp)
   272e8:	fe b3 00 88 	store_32 ra, 44(sp)
   272ec:	60 03 00 0f 	move s27, 0
   272f0:	5e a0 00 88 	store_32 s2, 40(sp)
   272f4:	20 83 f0 c0 	move s25, s1
   272f8:	40 03 f0 c0 	move s26, s0
   272fc:	00 90 00 0f 	move s0, 36
   27300:	20 cc 00 0f 	move s1, 51
   27304:	40 80 fd c0 	move s2, s27
   27308:	74 95 00 f8 	call 153040 <Z_Malloc>
   2730c:	00 03 f0 c0 	move s24, s0
   27310:	02 32 00 f8 	call 51208 <P_AddThinker>
   27314:	13 00 00 4f 	movehi s0, 19
   27318:	58 33 00 88 	store_32 s26, 12(s24)
   2731c:	38 73 00 88 	store_32 s25, 28(s24)
   27320:	20 14 00 0f 	move s1, 5
   27324:	38 80 00 88 	store_32 s1, 32(s24)
   27328:	00 f0 49 00 	or s0, s0, 4732
   2732c:	18 20 00 88 	store_32 s0, 8(s24)
   27330:	3a 30 00 a6 	load_s16 s1, 12(s26)
   27334:	38 60 00 88 	store_32 s1, 24(s24)
   27338:	00 00 fd c0 	move s0, s26
   2733c:	f1 23 00 f8 	call 36804 <P_FindMinSurroundingLight>
   27340:	38 60 00 a8 	load_32 s1, 24(s24)
   27344:	40 80 00 c1 	cmpeq_i s2, s0, s1
   27348:	20 80 fd c0 	move s1, s27
   2734c:	42 00 00 f4 	bnz s2, 8 <P_SpawnStrobeFlash+0x80>
   27350:	20 00 f0 c0 	move s1, s0
   27354:	38 50 00 88 	store_32 s1, 20(s24)
   27358:	7a 3b 00 86 	store_16 s27, 14(s26)
   2735c:	1e a0 00 a8 	load_32 s0, 40(sp)
   27360:	40 00 00 f4 	bnz s0, 8 <P_SpawnStrobeFlash+0x94>
   27364:	03 00 00 f6 	b 12 <P_SpawnStrobeFlash+0x9c>
   27368:	00 04 00 0f 	move s0, 1
   2736c:	04 00 00 f6 	b 16 <P_SpawnStrobeFlash+0xa8>
   27370:	e1 d3 ff f9 	call -45180 <P_Random>
   27374:	00 1c 00 01 	and s0, s0, 7
   27378:	00 04 00 05 	add_i s0, s0, 1
   2737c:	18 40 00 88 	store_32 s0, 16(s24)
   27380:	fe b3 00 a8 	load_32 ra, 44(sp)
   27384:	7e c3 00 a8 	load_32 s27, 48(sp)
   27388:	5e d3 00 a8 	load_32 s26, 52(sp)
   2738c:	3e e3 00 a8 	load_32 s25, 56(sp)
   27390:	1e f3 00 a8 	load_32 s24, 60(sp)
   27394:	de 03 01 05 	add_i sp, sp, 64
   27398:	1f 00 00 f0 	ret

000000000002739c EV_StartLightStrobing:
   2739c:	de 03 ff 05 	add_i sp, sp, -64
   273a0:	1e f3 00 88 	store_32 s24, 60(sp)
   273a4:	3e e3 00 88 	store_32 s25, 56(sp)
   273a8:	5e d3 00 88 	store_32 s26, 52(sp)
   273ac:	7e c3 00 88 	store_32 s27, 48(sp)
   273b0:	fe b3 00 88 	store_32 ra, 44(sp)
   273b4:	20 fc ff 0f 	move s1, -1
   273b8:	00 03 f0 c0 	move s24, s0
   273bc:	bc 23 00 f8 	call 36592 <P_FindSectorFromLineTag>
   273c0:	20 03 f0 c0 	move s25, s0
   273c4:	19 00 00 14 	cmplt_i s0, s25, 0
   273c8:	40 07 00 f4 	bnz s0, 232 <EV_StartLightStrobing+0x114>
   273cc:	1b 04 00 4f 	movehi s0, 59
   273d0:	40 03 00 0f 	move s26, 0
   273d4:	20 8c 00 0f 	move s1, 35
   273d8:	00 80 4b 00 	or s0, s0, 4832
   273dc:	1e a0 00 88 	store_32 s0, 40(sp)
   273e0:	00 90 00 0f 	move s0, 36
   273e4:	1e 80 00 88 	store_32 s0, 32(sp)
   273e8:	00 cc 00 0f 	move s0, 51
   273ec:	1e 70 00 88 	store_32 s0, 28(sp)
   273f0:	13 00 00 4f 	movehi s0, 19
   273f4:	3e 60 00 88 	store_32 s1, 24(sp)
   273f8:	20 14 00 0f 	move s1, 5
   273fc:	3e 50 00 88 	store_32 s1, 20(sp)
   27400:	00 f0 49 00 	or s0, s0, 4732
   27404:	1e 40 00 88 	store_32 s0, 16(sp)
   27408:	1e 93 00 88 	store_32 s24, 36(sp)
   2740c:	1e a0 00 a8 	load_32 s0, 40(sp)
   27410:	39 60 01 07 	mull_i s1, s25, 88
   27414:	00 00 00 a8 	load_32 s0, (s0)
   27418:	60 83 50 c0 	add_i s27, s0, s1
   2741c:	1b 30 01 a8 	load_32 s0, 76(s27)
   27420:	c0 03 00 f4 	bnz s0, 120 <EV_StartLightStrobing+0xfc>
   27424:	1e 80 00 a8 	load_32 s0, 32(sp)
   27428:	3e 70 00 a8 	load_32 s1, 28(sp)
   2742c:	40 00 fd c0 	move s2, s26
   27430:	2a 95 00 f8 	call 152744 <Z_Malloc>
   27434:	00 03 f0 c0 	move s24, s0
   27438:	b8 31 00 f8 	call 50912 <P_AddThinker>
   2743c:	78 33 00 88 	store_32 s27, 12(s24)
   27440:	1e 60 00 a8 	load_32 s0, 24(sp)
   27444:	18 70 00 88 	store_32 s0, 28(s24)
   27448:	1e 50 00 a8 	load_32 s0, 20(sp)
   2744c:	18 80 00 88 	store_32 s0, 32(s24)
   27450:	1e 40 00 a8 	load_32 s0, 16(sp)
   27454:	18 20 00 88 	store_32 s0, 8(s24)
   27458:	3b 30 00 a6 	load_s16 s1, 12(s27)
   2745c:	38 60 00 88 	store_32 s1, 24(s24)
   27460:	00 80 fd c0 	move s0, s27
   27464:	a7 23 00 f8 	call 36508 <P_FindMinSurroundingLight>
   27468:	38 60 00 a8 	load_32 s1, 24(s24)
   2746c:	40 80 00 c1 	cmpeq_i s2, s0, s1
   27470:	20 00 fd c0 	move s1, s26
   27474:	42 00 00 f4 	bnz s2, 8 <EV_StartLightStrobing+0xe0>
   27478:	20 00 f0 c0 	move s1, s0
   2747c:	38 50 00 88 	store_32 s1, 20(s24)
   27480:	5b 3b 00 86 	store_16 s26, 14(s27)
   27484:	9c d3 ff f9 	call -45456 <P_Random>
   27488:	00 1c 00 01 	and s0, s0, 7
   2748c:	00 04 00 05 	add_i s0, s0, 1
   27490:	18 40 00 88 	store_32 s0, 16(s24)
   27494:	1e 93 00 a8 	load_32 s24, 36(sp)
   27498:	00 00 fc c0 	move s0, s24
   2749c:	20 80 fc c0 	move s1, s25
   274a0:	83 23 00 f8 	call 36364 <P_FindSectorFromLineTag>
   274a4:	20 03 f0 c0 	move s25, s0
   274a8:	19 fc ff 12 	cmpgt_i s0, s25, -1
   274ac:	00 fb ff f5 	bnz s0, -160 <EV_StartLightStrobing+0x70>
   274b0:	fe b3 00 a8 	load_32 ra, 44(sp)
   274b4:	7e c3 00 a8 	load_32 s27, 48(sp)
   274b8:	5e d3 00 a8 	load_32 s26, 52(sp)
   274bc:	3e e3 00 a8 	load_32 s25, 56(sp)
   274c0:	1e f3 00 a8 	load_32 s24, 60(sp)
   274c4:	de 03 01 05 	add_i sp, sp, 64
   274c8:	1f 00 00 f0 	ret

00000000000274cc EV_TurnTagLightsOff:
   274cc:	de 03 ff 05 	add_i sp, sp, -64
   274d0:	1e f3 00 88 	store_32 s24, 60(sp)
   274d4:	3e e3 00 88 	store_32 s25, 56(sp)
   274d8:	5e d3 00 88 	store_32 s26, 52(sp)
   274dc:	7e c3 00 88 	store_32 s27, 48(sp)
   274e0:	fe b3 00 88 	store_32 ra, 44(sp)
   274e4:	3b 04 00 4f 	movehi s1, 59
   274e8:	21 80 4a 00 	or s1, s1, 4768
   274ec:	3e a0 00 88 	store_32 s1, 40(sp)
   274f0:	21 00 00 a8 	load_32 s1, (s1)
   274f4:	41 04 00 14 	cmplt_i s2, s1, 1
   274f8:	02 05 00 f4 	bnz s2, 160 <EV_TurnTagLightsOff+0xcc>
   274fc:	5b 04 00 4f 	movehi s2, 59
   27500:	60 03 00 0f 	move s27, 0
   27504:	42 80 4b 00 	or s2, s2, 4832
   27508:	22 03 00 a8 	load_32 s25, (s2)
   2750c:	7e 83 00 88 	store_32 s27, 32(sp)
   27510:	1e 90 00 88 	store_32 s0, 36(sp)
   27514:	79 40 00 a4 	load_u16 s3, 16(s25)
   27518:	40 50 00 a4 	load_u16 s2, 20(s0)
   2751c:	43 00 11 c1 	cmpne_i s2, s3, s2
   27520:	42 03 00 f4 	bnz s2, 104 <EV_TurnTagLightsOff+0xbc>
   27524:	59 33 00 a6 	load_s16 s26, 12(s25)
   27528:	59 40 01 a8 	load_32 s2, 80(s25)
   2752c:	42 04 00 14 	cmplt_i s2, s2, 1
   27530:	a2 02 00 f4 	bnz s2, 84 <EV_TurnTagLightsOff+0xb8>
   27534:	1e 83 00 a8 	load_32 s24, 32(sp)
   27538:	19 50 01 a8 	load_32 s0, 84(s25)
   2753c:	38 08 00 0b 	shl s1, s24, 2
   27540:	00 80 50 c0 	add_i s0, s0, s1
   27544:	00 00 00 a8 	load_32 s0, (s0)
   27548:	20 80 fc c0 	move s1, s25
   2754c:	88 22 00 f8 	call 35360 <getNextSector>
   27550:	c0 00 00 f2 	bz s0, 24 <EV_TurnTagLightsOff+0x9c>
   27554:	00 30 00 a6 	load_s16 s0, 12(s0)
   27558:	3a 00 20 c1 	cmpgt_i s1, s26, s0
   2755c:	41 00 00 f4 	bnz s1, 8 <EV_TurnTagLightsOff+0x98>
   27560:	00 00 fd c0 	move s0, s26
   27564:	40 03 f0 c0 	move s26, s0
   27568:	19 40 01 a8 	load_32 s0, 80(s25)
   2756c:	18 07 00 05 	add_i s24, s24, 1
   27570:	18 00 40 c1 	cmplt_i s0, s24, s0
   27574:	20 fe ff f5 	bnz s0, -60 <EV_TurnTagLightsOff+0x6c>
   27578:	1e a0 00 a8 	load_32 s0, 40(sp)
   2757c:	20 00 00 a8 	load_32 s1, (s0)
   27580:	1e 90 00 a8 	load_32 s0, 36(sp)
   27584:	59 33 00 86 	store_16 s26, 12(s25)
   27588:	7b 07 00 05 	add_i s27, s27, 1
   2758c:	39 63 01 05 	add_i s25, s25, 88
   27590:	5b 80 40 c1 	cmplt_i s2, s27, s1
   27594:	02 fc ff f5 	bnz s2, -128 <EV_TurnTagLightsOff+0x48>
   27598:	fe b3 00 a8 	load_32 ra, 44(sp)
   2759c:	7e c3 00 a8 	load_32 s27, 48(sp)
   275a0:	5e d3 00 a8 	load_32 s26, 52(sp)
   275a4:	3e e3 00 a8 	load_32 s25, 56(sp)
   275a8:	1e f3 00 a8 	load_32 s24, 60(sp)
   275ac:	de 03 01 05 	add_i sp, sp, 64
   275b0:	1f 00 00 f0 	ret

00000000000275b4 EV_LightTurnOn:
   275b4:	de 03 ff 05 	add_i sp, sp, -64
   275b8:	1e f3 00 88 	store_32 s24, 60(sp)
   275bc:	3e e3 00 88 	store_32 s25, 56(sp)
   275c0:	5e d3 00 88 	store_32 s26, 52(sp)
   275c4:	7e c3 00 88 	store_32 s27, 48(sp)
   275c8:	fe b3 00 88 	store_32 ra, 44(sp)
   275cc:	5b 04 00 4f 	movehi s2, 59
   275d0:	42 80 4a 00 	or s2, s2, 4768
   275d4:	5e a0 00 88 	store_32 s2, 40(sp)
   275d8:	42 00 00 a8 	load_32 s2, (s2)
   275dc:	40 83 f0 c0 	move s26, s1
   275e0:	62 04 00 14 	cmplt_i s3, s2, 1
   275e4:	63 05 00 f4 	bnz s3, 172 <EV_LightTurnOn+0xdc>
   275e8:	3b 04 00 4f 	movehi s1, 59
   275ec:	00 03 00 0f 	move s24, 0
   275f0:	21 80 4b 00 	or s1, s1, 4832
   275f4:	21 03 00 a8 	load_32 s25, (s1)
   275f8:	60 03 fc c0 	move s27, s24
   275fc:	1e 90 00 88 	store_32 s0, 36(sp)
   27600:	1e 83 00 88 	store_32 s24, 32(sp)
   27604:	79 40 00 a4 	load_u16 s3, 16(s25)
   27608:	20 50 00 a4 	load_u16 s1, 20(s0)
   2760c:	23 80 10 c1 	cmpne_i s1, s3, s1
   27610:	81 03 00 f4 	bnz s1, 112 <EV_LightTurnOn+0xcc>
   27614:	5a 03 00 f4 	bnz s26, 104 <EV_LightTurnOn+0xc8>
   27618:	39 40 01 a8 	load_32 s1, 80(s25)
   2761c:	40 03 fc c0 	move s26, s24
   27620:	21 04 00 14 	cmplt_i s1, s1, 1
   27624:	c1 02 00 f4 	bnz s1, 88 <EV_LightTurnOn+0xc8>
   27628:	40 03 fc c0 	move s26, s24
   2762c:	19 50 01 a8 	load_32 s0, 84(s25)
   27630:	38 08 00 0b 	shl s1, s24, 2
   27634:	00 80 50 c0 	add_i s0, s0, s1
   27638:	00 00 00 a8 	load_32 s0, (s0)
   2763c:	20 80 fc c0 	move s1, s25
   27640:	4b 22 00 f8 	call 35116 <getNextSector>
   27644:	c0 00 00 f2 	bz s0, 24 <EV_LightTurnOn+0xa8>
   27648:	00 30 00 a6 	load_s16 s0, 12(s0)
   2764c:	3a 00 40 c1 	cmplt_i s1, s26, s0
   27650:	41 00 00 f4 	bnz s1, 8 <EV_LightTurnOn+0xa4>
   27654:	00 00 fd c0 	move s0, s26
   27658:	40 03 f0 c0 	move s26, s0
   2765c:	19 40 01 a8 	load_32 s0, 80(s25)
   27660:	18 07 00 05 	add_i s24, s24, 1
   27664:	18 00 40 c1 	cmplt_i s0, s24, s0
   27668:	20 fe ff f5 	bnz s0, -60 <EV_LightTurnOn+0x78>
   2766c:	1e a0 00 a8 	load_32 s0, 40(sp)
   27670:	40 00 00 a8 	load_32 s2, (s0)
   27674:	1e 90 00 a8 	load_32 s0, 36(sp)
   27678:	1e 83 00 a8 	load_32 s24, 32(sp)
   2767c:	59 33 00 86 	store_16 s26, 12(s25)
   27680:	7b 07 00 05 	add_i s27, s27, 1
   27684:	39 63 01 05 	add_i s25, s25, 88
   27688:	3b 00 41 c1 	cmplt_i s1, s27, s2
   2768c:	c1 fb ff f5 	bnz s1, -136 <EV_LightTurnOn+0x50>
   27690:	fe b3 00 a8 	load_32 ra, 44(sp)
   27694:	7e c3 00 a8 	load_32 s27, 48(sp)
   27698:	5e d3 00 a8 	load_32 s26, 52(sp)
   2769c:	3e e3 00 a8 	load_32 s25, 56(sp)
   276a0:	1e f3 00 a8 	load_32 s24, 60(sp)
   276a4:	de 03 01 05 	add_i sp, sp, 64
   276a8:	1f 00 00 f0 	ret

00000000000276ac T_Glow:
   276ac:	20 60 00 a8 	load_32 s1, 24(s0)
   276b0:	41 04 00 10 	cmpeq_i s2, s1, 1
   276b4:	c2 01 00 f4 	bnz s2, 56 <T_Glow+0x40>
   276b8:	21 fc ff 11 	cmpne_i s1, s1, -1
   276bc:	e1 02 00 f4 	bnz s1, 92 <T_Glow+0x6c>
   276c0:	20 30 00 a8 	load_32 s1, 12(s0)
   276c4:	41 30 00 a6 	load_s16 s2, 12(s1)
   276c8:	62 e0 ff 05 	add_i s3, s2, -8
   276cc:	61 30 00 86 	store_16 s3, 12(s1)
   276d0:	80 40 00 a8 	load_32 s4, 16(s0)
   276d4:	60 80 e1 c1 	sext_16 s3, s3
   276d8:	64 80 41 c1 	cmplt_i s3, s4, s3
   276dc:	e3 01 00 f4 	bnz s3, 60 <T_Glow+0x6c>
   276e0:	41 30 00 86 	store_16 s2, 12(s1)
   276e4:	20 04 00 0f 	move s1, 1
   276e8:	0b 00 00 f6 	b 44 <T_Glow+0x68>
   276ec:	20 30 00 a8 	load_32 s1, 12(s0)
   276f0:	41 30 00 a6 	load_s16 s2, 12(s1)
   276f4:	62 20 00 05 	add_i s3, s2, 8
   276f8:	61 30 00 86 	store_16 s3, 12(s1)
   276fc:	80 50 00 a8 	load_32 s4, 20(s0)
   27700:	60 80 e1 c1 	sext_16 s3, s3
   27704:	64 80 21 c1 	cmpgt_i s3, s4, s3
   27708:	83 00 00 f4 	bnz s3, 16 <T_Glow+0x6c>
   2770c:	41 30 00 86 	store_16 s2, 12(s1)
   27710:	20 fc ff 0f 	move s1, -1
   27714:	20 60 00 88 	store_32 s1, 24(s0)
   27718:	1f 00 00 f0 	ret

000000000002771c P_SpawnGlowingLight:
   2771c:	de 03 ff 05 	add_i sp, sp, -64
   27720:	1e f3 00 88 	store_32 s24, 60(sp)
   27724:	3e e3 00 88 	store_32 s25, 56(sp)
   27728:	5e d3 00 88 	store_32 s26, 52(sp)
   2772c:	fe c3 00 88 	store_32 ra, 48(sp)
   27730:	20 03 00 0f 	move s25, 0
   27734:	00 03 f0 c0 	move s24, s0
   27738:	00 70 00 0f 	move s0, 28
   2773c:	20 cc 00 0f 	move s1, 51
   27740:	40 80 fc c0 	move s2, s25
   27744:	65 94 00 f8 	call 151956 <Z_Malloc>
   27748:	40 03 f0 c0 	move s26, s0
   2774c:	f3 30 00 f8 	call 50124 <P_AddThinker>
   27750:	1a 33 00 88 	store_32 s24, 12(s26)
   27754:	38 30 00 a6 	load_s16 s1, 12(s24)
   27758:	00 00 fc c0 	move s0, s24
   2775c:	e9 22 00 f8 	call 35748 <P_FindMinSurroundingLight>
   27760:	1a 40 00 88 	store_32 s0, 16(s26)
   27764:	13 00 00 4f 	movehi s0, 19
   27768:	38 30 00 a6 	load_s16 s1, 12(s24)
   2776c:	3a 50 00 88 	store_32 s1, 20(s26)
   27770:	00 b0 5a 00 	or s0, s0, 5804
   27774:	1a 20 00 88 	store_32 s0, 8(s26)
   27778:	00 fc ff 0f 	move s0, -1
   2777c:	1a 60 00 88 	store_32 s0, 24(s26)
   27780:	38 3b 00 86 	store_16 s25, 14(s24)
   27784:	fe c3 00 a8 	load_32 ra, 48(sp)
   27788:	5e d3 00 a8 	load_32 s26, 52(sp)
   2778c:	3e e3 00 a8 	load_32 s25, 56(sp)
   27790:	1e f3 00 a8 	load_32 s24, 60(sp)
   27794:	de 03 01 05 	add_i sp, sp, 64
   27798:	1f 00 00 f0 	ret

000000000002779c PIT_StompThing:
   2779c:	de 03 ff 05 	add_i sp, sp, -64
   277a0:	1e f3 00 88 	store_32 s24, 60(sp)
   277a4:	fe e3 00 88 	store_32 ra, 56(sp)
   277a8:	20 a0 01 a0 	load_u8 s1, 104(s0)
   277ac:	00 07 00 0f 	move s24, 1
   277b0:	21 10 00 01 	and s1, s1, 4
   277b4:	61 05 00 f2 	bz s1, 172 <PIT_StompThing+0xc4>
   277b8:	3b 04 00 4f 	movehi s1, 59
   277bc:	40 00 01 a8 	load_32 s2, 64(s0)
   277c0:	7b 04 00 4f 	movehi s3, 59
   277c4:	21 10 2d 00 	or s1, s1, 2884
   277c8:	63 20 2d 00 	or s3, s3, 2888
   277cc:	21 00 00 a8 	load_32 s1, (s1)
   277d0:	81 00 01 a8 	load_32 s4, 64(s1)
   277d4:	a0 30 00 a8 	load_32 s5, 12(s0)
   277d8:	63 00 00 a8 	load_32 s3, (s3)
   277dc:	44 00 51 c0 	add_i s2, s4, s2
   277e0:	65 80 61 c0 	sub_i s3, s5, s3
   277e4:	a3 7c 00 09 	ashr s5, s3, 31
   277e8:	63 80 52 c0 	add_i s3, s3, s5
   277ec:	63 80 32 c0 	xor s3, s3, s5
   277f0:	63 00 31 c1 	cmpge_i s3, s3, s2
   277f4:	63 03 00 f4 	bnz s3, 108 <PIT_StompThing+0xc4>
   277f8:	7b 04 00 4f 	movehi s3, 59
   277fc:	a1 00 00 c1 	cmpeq_i s5, s1, s0
   27800:	83 40 2d 00 	or s4, s3, 2896
   27804:	60 40 00 a8 	load_32 s3, 16(s0)
   27808:	84 00 00 a8 	load_32 s4, (s4)
   2780c:	a5 02 00 f4 	bnz s5, 84 <PIT_StompThing+0xc4>
   27810:	63 00 62 c0 	sub_i s3, s3, s4
   27814:	83 7c 00 09 	ashr s4, s3, 31
   27818:	63 00 52 c0 	add_i s3, s3, s4
   2781c:	63 00 32 c0 	xor s3, s3, s4
   27820:	43 00 31 c1 	cmpge_i s2, s3, s2
   27824:	e2 01 00 f4 	bnz s2, 60 <PIT_StompThing+0xc4>
   27828:	5a 04 00 4f 	movehi s2, 58
   2782c:	61 10 02 a8 	load_32 s3, 132(s1)
   27830:	42 80 7f 00 	or s2, s2, 8160
   27834:	42 00 00 a8 	load_32 s2, (s2)
   27838:	c3 00 00 f4 	bnz s3, 24 <PIT_StompThing+0xb4>
   2783c:	42 78 00 11 	cmpne_i s2, s2, 30
   27840:	42 00 00 f4 	bnz s2, 8 <PIT_StompThing+0xac>
   27844:	03 00 00 f6 	b 12 <PIT_StompThing+0xb4>
   27848:	00 03 00 0f 	move s24, 0
   2784c:	05 00 00 f6 	b 20 <PIT_StompThing+0xc4>
   27850:	41 00 00 4f 	movehi s2, 1
   27854:	62 40 1c 00 	or s3, s2, 1808
   27858:	40 80 f0 c0 	move s2, s1
   2785c:	0d fd ff f9 	call -3020 <P_DamageMobj>
   27860:	00 00 fc c0 	move s0, s24
   27864:	fe e3 00 a8 	load_32 ra, 56(sp)
   27868:	1e f3 00 a8 	load_32 s24, 60(sp)
   2786c:	de 03 01 05 	add_i sp, sp, 64
   27870:	1f 00 00 f0 	ret

0000000000027874 P_TeleportMove:
   27874:	de 03 ff 05 	add_i sp, sp, -64
   27878:	1e f3 00 88 	store_32 s24, 60(sp)
   2787c:	3e e3 00 88 	store_32 s25, 56(sp)
   27880:	5e d3 00 88 	store_32 s26, 52(sp)
   27884:	7e c3 00 88 	store_32 s27, 48(sp)
   27888:	fe b3 00 88 	store_32 ra, 44(sp)
   2788c:	7b 04 00 4f 	movehi s3, 59
   27890:	80 00 f1 c0 	move s4, s2
   27894:	a0 80 f0 c0 	move s5, s1
   27898:	63 10 2d 00 	or s3, s3, 2884
   2789c:	60 03 f0 c0 	move s27, s0
   278a0:	3b 04 00 4f 	movehi s1, 59
   278a4:	63 03 00 88 	store_32 s27, (s3)
   278a8:	5b 04 00 4f 	movehi s2, 59
   278ac:	7b 04 00 4f 	movehi s3, 59
   278b0:	1b a0 01 a8 	load_32 s0, 104(s27)
   278b4:	21 f0 2c 00 	or s1, s1, 2876
   278b8:	42 20 2d 00 	or s2, s2, 2888
   278bc:	63 40 2d 00 	or s3, s3, 2896
   278c0:	01 00 00 88 	store_32 s0, (s1)
   278c4:	1b 04 00 4f 	movehi s0, 59
   278c8:	a2 00 00 88 	store_32 s5, (s2)
   278cc:	83 00 00 88 	store_32 s4, (s3)
   278d0:	3b 00 01 a8 	load_32 s1, 64(s27)
   278d4:	00 93 2c 00 	or s24, s0, 2852
   278d8:	01 00 52 c0 	add_i s0, s1, s4
   278dc:	18 00 00 88 	store_32 s0, (s24)
   278e0:	04 80 60 c0 	sub_i s0, s4, s1
   278e4:	18 10 00 88 	store_32 s0, 4(s24)
   278e8:	01 80 52 c0 	add_i s0, s1, s5
   278ec:	18 30 00 88 	store_32 s0, 12(s24)
   278f0:	05 80 60 c0 	sub_i s0, s5, s1
   278f4:	18 20 00 88 	store_32 s0, 8(s24)
   278f8:	be 90 00 88 	store_32 s5, 36(sp)
   278fc:	00 80 f2 c0 	move s0, s5
   27900:	9e a0 00 88 	store_32 s4, 40(sp)
   27904:	20 00 f2 c0 	move s1, s4
   27908:	69 49 00 f8 	call 75172 <R_PointInSubsector>
   2790c:	3b 04 00 4f 	movehi s1, 59
   27910:	80 00 00 0f 	move s4, 0
   27914:	5b 04 00 4f 	movehi s2, 59
   27918:	21 50 2b 00 	or s1, s1, 2772
   2791c:	a2 00 2d 00 	or s5, s2, 2880
   27920:	81 00 00 88 	store_32 s4, (s1)
   27924:	3b 04 00 4f 	movehi s1, 59
   27928:	00 00 00 a8 	load_32 s0, (s0)
   2792c:	54 04 00 4f 	movehi s2, 52
   27930:	21 e0 2c 00 	or s1, s1, 2872
   27934:	60 00 00 a8 	load_32 s3, (s0)
   27938:	61 00 00 88 	store_32 s3, (s1)
   2793c:	3b 04 00 4f 	movehi s1, 59
   27940:	be 70 00 88 	store_32 s5, 28(sp)
   27944:	65 00 00 88 	store_32 s3, (s5)
   27948:	61 d0 2c 00 	or s3, s1, 2868
   2794c:	00 10 00 a8 	load_32 s0, 4(s0)
   27950:	22 30 19 00 	or s1, s2, 1612
   27954:	7e 60 00 88 	store_32 s3, 24(sp)
   27958:	5b 04 00 4f 	movehi s2, 59
   2795c:	03 00 00 88 	store_32 s0, (s3)
   27960:	7b 04 00 4f 	movehi s3, 59
   27964:	01 00 00 a8 	load_32 s0, (s1)
   27968:	42 b0 2b 00 	or s2, s2, 2796
   2796c:	00 04 00 05 	add_i s0, s0, 1
   27970:	01 00 00 88 	store_32 s0, (s1)
   27974:	9e 80 00 88 	store_32 s4, 32(sp)
   27978:	03 70 48 00 	or s0, s3, 4636
   2797c:	82 00 00 88 	store_32 s4, (s2)
   27980:	20 20 00 4f 	movehi s1, 256
   27984:	58 20 00 a8 	load_32 s2, 8(s24)
   27988:	60 00 00 a8 	load_32 s3, (s0)
   2798c:	00 e0 ff 4f 	movehi s0, 524032
   27990:	98 30 00 a8 	load_32 s4, 12(s24)
   27994:	42 00 50 c0 	add_i s2, s2, s0
   27998:	a1 80 61 c0 	sub_i s5, s1, s3
   2799c:	42 80 61 c0 	sub_i s2, s2, s3
   279a0:	7b 04 00 4f 	movehi s3, 59
   279a4:	85 00 52 c0 	add_i s4, s5, s4
   279a8:	22 5f 00 09 	ashr s25, s2, 23
   279ac:	43 80 48 00 	or s2, s3, 4640
   279b0:	c4 5c 00 09 	ashr s6, s4, 23
   279b4:	98 10 00 a8 	load_32 s4, 4(s24)
   279b8:	b9 00 23 c1 	cmpgt_i s5, s25, s6
   279bc:	42 00 00 a8 	load_32 s2, (s2)
   279c0:	78 00 00 a8 	load_32 s3, (s24)
   279c4:	c5 03 00 f4 	bnz s5, 120 <P_TeleportMove+0x1c8>
   279c8:	04 00 50 c0 	add_i s0, s4, s0
   279cc:	21 00 61 c0 	sub_i s1, s1, s2
   279d0:	00 00 61 c0 	sub_i s0, s0, s2
   279d4:	21 80 51 c0 	add_i s1, s1, s3
   279d8:	40 5c 00 09 	ashr s2, s0, 23
   279dc:	01 5f 00 09 	ashr s24, s1, 23
   279e0:	02 00 2c c1 	cmpgt_i s0, s2, s24
   279e4:	c0 02 00 f4 	bnz s0, 88 <P_TeleportMove+0x1c8>
   279e8:	13 00 00 4f 	movehi s0, 19
   279ec:	7e 53 00 88 	store_32 s27, 20(sp)
   279f0:	de 40 00 88 	store_32 s6, 16(sp)
   279f4:	5e 30 00 88 	store_32 s2, 12(sp)
   279f8:	40 73 5e 00 	or s26, s0, 6044
   279fc:	60 03 f1 c0 	move s27, s2
   27a00:	00 80 fc c0 	move s0, s25
   27a04:	20 80 fd c0 	move s1, s27
   27a08:	40 00 fd c0 	move s2, s26
   27a0c:	92 09 00 f8 	call 9800 <P_BlockThingsIterator>
   27a10:	60 03 00 f2 	bz s0, 108 <P_TeleportMove+0x208>
   27a14:	1b 00 3c c1 	cmpge_i s0, s27, s24
   27a18:	7b 07 00 05 	add_i s27, s27, 1
   27a1c:	40 00 00 f4 	bnz s0, 8 <P_TeleportMove+0x1b0>
   27a20:	f8 ff ff f7 	b -32 <P_TeleportMove+0x18c>
   27a24:	de 40 00 a8 	load_32 s6, 16(sp)
   27a28:	7e 53 00 a8 	load_32 s27, 20(sp)
   27a2c:	5e 30 00 a8 	load_32 s2, 12(sp)
   27a30:	19 00 43 c1 	cmplt_i s0, s25, s6
   27a34:	39 07 00 05 	add_i s25, s25, 1
   27a38:	20 fe ff f5 	bnz s0, -60 <P_TeleportMove+0x188>
   27a3c:	00 80 fd c0 	move s0, s27
   27a40:	ae 08 00 f8 	call 8888 <P_UnsetThingPosition>
   27a44:	1e 70 00 a8 	load_32 s0, 28(sp)
   27a48:	00 00 00 a8 	load_32 s0, (s0)
   27a4c:	1b e0 00 88 	store_32 s0, 56(s27)
   27a50:	1e 60 00 a8 	load_32 s0, 24(sp)
   27a54:	00 00 00 a8 	load_32 s0, (s0)
   27a58:	1b f0 00 88 	store_32 s0, 60(s27)
   27a5c:	1e 90 00 a8 	load_32 s0, 36(sp)
   27a60:	1b 30 00 88 	store_32 s0, 12(s27)
   27a64:	1e a0 00 a8 	load_32 s0, 40(sp)
   27a68:	1b 40 00 88 	store_32 s0, 16(s27)
   27a6c:	00 80 fd c0 	move s0, s27
   27a70:	de 08 00 f8 	call 9080 <P_SetThingPosition>
   27a74:	00 04 00 0f 	move s0, 1
   27a78:	02 00 00 f6 	b 8 <P_TeleportMove+0x20c>
   27a7c:	1e 80 00 a8 	load_32 s0, 32(sp)
   27a80:	fe b3 00 a8 	load_32 ra, 44(sp)
   27a84:	7e c3 00 a8 	load_32 s27, 48(sp)
   27a88:	5e d3 00 a8 	load_32 s26, 52(sp)
   27a8c:	3e e3 00 a8 	load_32 s25, 56(sp)
   27a90:	1e f3 00 a8 	load_32 s24, 60(sp)
   27a94:	de 03 01 05 	add_i sp, sp, 64
   27a98:	1f 00 00 f0 	ret

0000000000027a9c PIT_CheckLine:
   27a9c:	de 03 ff 05 	add_i sp, sp, -64
   27aa0:	1e f3 00 88 	store_32 s24, 60(sp)
   27aa4:	3e e3 00 88 	store_32 s25, 56(sp)
   27aa8:	fe d3 00 88 	store_32 ra, 52(sp)
   27aac:	3b 04 00 4f 	movehi s1, 59
   27ab0:	00 03 f0 c0 	move s24, s0
   27ab4:	20 07 00 0f 	move s25, 1
   27ab8:	21 90 2c 00 	or s1, s1, 2852
   27abc:	01 30 00 a8 	load_32 s0, 12(s1)
   27ac0:	58 90 00 a8 	load_32 s2, 36(s24)
   27ac4:	00 00 51 c1 	cmple_i s0, s0, s2
   27ac8:	60 02 00 f4 	bnz s0, 76 <PIT_CheckLine+0x78>
   27acc:	01 20 00 a8 	load_32 s0, 8(s1)
   27ad0:	58 a0 00 a8 	load_32 s2, 40(s24)
   27ad4:	00 00 31 c1 	cmpge_i s0, s0, s2
   27ad8:	e0 01 00 f4 	bnz s0, 60 <PIT_CheckLine+0x78>
   27adc:	01 00 00 a8 	load_32 s0, (s1)
   27ae0:	58 80 00 a8 	load_32 s2, 32(s24)
   27ae4:	00 00 51 c1 	cmple_i s0, s0, s2
   27ae8:	60 01 00 f4 	bnz s0, 44 <PIT_CheckLine+0x78>
   27aec:	01 10 00 a8 	load_32 s0, 4(s1)
   27af0:	58 70 00 a8 	load_32 s2, 28(s24)
   27af4:	00 00 31 c1 	cmpge_i s0, s0, s2
   27af8:	e0 00 00 f4 	bnz s0, 28 <PIT_CheckLine+0x78>
   27afc:	00 80 f0 c0 	move s0, s1
   27b00:	20 00 fc c0 	move s1, s24
   27b04:	2c 07 00 f8 	call 7344 <P_BoxOnLineSide>
   27b08:	00 fc ff 11 	cmpne_i s0, s0, -1
   27b0c:	40 00 00 f4 	bnz s0, 8 <PIT_CheckLine+0x78>
   27b10:	07 00 00 f6 	b 28 <PIT_CheckLine+0x90>
   27b14:	00 80 fc c0 	move s0, s25
   27b18:	fe d3 00 a8 	load_32 ra, 52(sp)
   27b1c:	3e e3 00 a8 	load_32 s25, 56(sp)
   27b20:	1e f3 00 a8 	load_32 s24, 60(sp)
   27b24:	de 03 01 05 	add_i sp, sp, 64
   27b28:	1f 00 00 f0 	ret
   27b2c:	38 d0 00 a8 	load_32 s1, 52(s24)
   27b30:	00 00 00 0f 	move s0, 0
   27b34:	21 ff ff f3 	bz s1, -28 <PIT_CheckLine+0x7c>
   27b38:	3b 04 00 4f 	movehi s1, 59
   27b3c:	21 10 2d 00 	or s1, s1, 2884
   27b40:	21 00 00 a8 	load_32 s1, (s1)
   27b44:	41 a8 01 a0 	load_u8 s2, 106(s1)
   27b48:	42 04 00 01 	and s2, s2, 1
   27b4c:	02 01 00 f4 	bnz s2, 32 <PIT_CheckLine+0xd0>
   27b50:	58 40 00 a6 	load_s16 s2, 16(s24)
   27b54:	62 04 00 01 	and s3, s2, 1
   27b58:	03 fe ff f5 	bnz s3, -64 <PIT_CheckLine+0x7c>
   27b5c:	21 10 02 a8 	load_32 s1, 132(s1)
   27b60:	42 08 00 01 	and s2, s2, 2
   27b64:	42 00 00 f2 	bz s2, 8 <PIT_CheckLine+0xd0>
   27b68:	81 fd ff f3 	bz s1, -80 <PIT_CheckLine+0x7c>
   27b6c:	00 00 fc c0 	move s0, s24
   27b70:	3b 08 00 f8 	call 8428 <P_LineOpening>
   27b74:	1b 04 00 4f 	movehi s0, 59
   27b78:	3b 04 00 4f 	movehi s1, 59
   27b7c:	40 c0 45 00 	or s2, s0, 4464
   27b80:	01 d0 2c 00 	or s0, s1, 2868
   27b84:	22 00 00 a8 	load_32 s1, (s2)
   27b88:	40 00 00 a8 	load_32 s2, (s0)
   27b8c:	41 00 31 c1 	cmpge_i s2, s1, s2
   27b90:	a2 00 00 f4 	bnz s2, 20 <PIT_CheckLine+0x108>
   27b94:	5b 04 00 4f 	movehi s2, 59
   27b98:	20 00 00 88 	store_32 s1, (s0)
   27b9c:	42 50 2b 00 	or s2, s2, 2772
   27ba0:	02 03 00 88 	store_32 s24, (s2)
   27ba4:	1b 04 00 4f 	movehi s0, 59
   27ba8:	3b 04 00 4f 	movehi s1, 59
   27bac:	40 a0 45 00 	or s2, s0, 4456
   27bb0:	01 00 2d 00 	or s0, s1, 2880
   27bb4:	22 00 00 a8 	load_32 s1, (s2)
   27bb8:	40 00 00 a8 	load_32 s2, (s0)
   27bbc:	41 00 51 c1 	cmple_i s2, s1, s2
   27bc0:	42 00 00 f4 	bnz s2, 8 <PIT_CheckLine+0x12c>
   27bc4:	20 00 00 88 	store_32 s1, (s0)
   27bc8:	1b 04 00 4f 	movehi s0, 59
   27bcc:	3b 04 00 4f 	movehi s1, 59
   27bd0:	40 90 45 00 	or s2, s0, 4452
   27bd4:	01 e0 2c 00 	or s0, s1, 2872
   27bd8:	22 00 00 a8 	load_32 s1, (s2)
   27bdc:	40 00 00 a8 	load_32 s2, (s0)
   27be0:	41 00 31 c1 	cmpge_i s2, s1, s2
   27be4:	42 00 00 f4 	bnz s2, 8 <PIT_CheckLine+0x150>
   27be8:	20 00 00 88 	store_32 s1, (s0)
   27bec:	18 48 00 a4 	load_u16 s0, 18(s24)
   27bf0:	20 f9 ff f3 	bz s0, -220 <PIT_CheckLine+0x78>
   27bf4:	1b 04 00 4f 	movehi s0, 59
   27bf8:	3b 04 00 4f 	movehi s1, 59
   27bfc:	00 b0 2b 00 	or s0, s0, 2796
   27c00:	21 10 2c 00 	or s1, s1, 2820
   27c04:	40 00 00 a8 	load_32 s2, (s0)
   27c08:	62 08 00 0b 	shl s3, s2, 2
   27c0c:	21 80 51 c0 	add_i s1, s1, s3
   27c10:	01 03 00 88 	store_32 s24, (s1)
   27c14:	22 04 00 05 	add_i s1, s2, 1
   27c18:	20 00 00 88 	store_32 s1, (s0)
   27c1c:	be ff ff f7 	b -264 <PIT_CheckLine+0x78>

0000000000027c20 PIT_CheckThing:
   27c20:	de 03 ff 05 	add_i sp, sp, -64
   27c24:	1e f3 00 88 	store_32 s24, 60(sp)
   27c28:	3e e3 00 88 	store_32 s25, 56(sp)
   27c2c:	5e d3 00 88 	store_32 s26, 52(sp)
   27c30:	fe c3 00 88 	store_32 ra, 48(sp)
   27c34:	00 03 f0 c0 	move s24, s0
   27c38:	20 07 00 0f 	move s25, 1
   27c3c:	18 a0 01 a8 	load_32 s0, 104(s24)
   27c40:	20 1c 00 01 	and s1, s0, 7
   27c44:	a1 09 00 f2 	bz s1, 308 <PIT_CheckThing+0x158>
   27c48:	3b 04 00 4f 	movehi s1, 59
   27c4c:	58 00 01 a8 	load_32 s2, 64(s24)
   27c50:	7b 04 00 4f 	movehi s3, 59
   27c54:	41 13 2d 00 	or s26, s1, 2884
   27c58:	63 20 2d 00 	or s3, s3, 2888
   27c5c:	3a 00 00 a8 	load_32 s1, (s26)
   27c60:	81 00 01 a8 	load_32 s4, 64(s1)
   27c64:	b8 30 00 a8 	load_32 s5, 12(s24)
   27c68:	63 00 00 a8 	load_32 s3, (s3)
   27c6c:	44 00 51 c0 	add_i s2, s4, s2
   27c70:	65 80 61 c0 	sub_i s3, s5, s3
   27c74:	a3 7c 00 09 	ashr s5, s3, 31
   27c78:	63 80 52 c0 	add_i s3, s3, s5
   27c7c:	63 80 32 c0 	xor s3, s3, s5
   27c80:	63 00 31 c1 	cmpge_i s3, s3, s2
   27c84:	a3 07 00 f4 	bnz s3, 244 <PIT_CheckThing+0x158>
   27c88:	7b 04 00 4f 	movehi s3, 59
   27c8c:	a1 00 0c c1 	cmpeq_i s5, s1, s24
   27c90:	83 40 2d 00 	or s4, s3, 2896
   27c94:	78 40 00 a8 	load_32 s3, 16(s24)
   27c98:	84 00 00 a8 	load_32 s4, (s4)
   27c9c:	e5 06 00 f4 	bnz s5, 220 <PIT_CheckThing+0x158>
   27ca0:	63 00 62 c0 	sub_i s3, s3, s4
   27ca4:	83 7c 00 09 	ashr s4, s3, 31
   27ca8:	63 00 52 c0 	add_i s3, s3, s4
   27cac:	63 00 32 c0 	xor s3, s3, s4
   27cb0:	43 00 31 c1 	cmpge_i s2, s3, s2
   27cb4:	22 06 00 f4 	bnz s2, 196 <PIT_CheckThing+0x158>
   27cb8:	41 a0 01 a8 	load_32 s2, 104(s1)
   27cbc:	60 00 01 4f 	movehi s3, 2048
   27cc0:	62 80 11 c0 	and s3, s2, s3
   27cc4:	43 00 00 f2 	bz s3, 8 <PIT_CheckThing+0xac>
   27cc8:	11 00 00 f6 	b 68 <PIT_CheckThing+0xec>
   27ccc:	68 00 00 4f 	movehi s3, 8
   27cd0:	42 80 11 c0 	and s2, s2, s3
   27cd4:	42 00 00 f2 	bz s2, 8 <PIT_CheckThing+0xbc>
   27cd8:	2f 00 00 f6 	b 188 <PIT_CheckThing+0x174>
   27cdc:	40 04 00 01 	and s2, s0, 1
   27ce0:	20 0b 00 01 	and s25, s0, 2
   27ce4:	02 01 00 f2 	bz s2, 32 <PIT_CheckThing+0xe4>
   27ce8:	1b 04 00 4f 	movehi s0, 59
   27cec:	00 f0 2c 00 	or s0, s0, 2876
   27cf0:	00 04 00 a0 	load_u8 s0, 1(s0)
   27cf4:	00 20 00 01 	and s0, s0, 8
   27cf8:	60 00 00 f2 	bz s0, 12 <PIT_CheckThing+0xe4>
   27cfc:	00 00 fc c0 	move s0, s24
   27d00:	bf f8 ff f9 	call -7428 <P_TouchSpecialThing>
   27d04:	39 03 00 10 	cmpeq_i s25, s25, 0
   27d08:	1c 00 00 f6 	b 112 <PIT_CheckThing+0x158>
   27d0c:	7a d1 ff f9 	call -47640 <P_Random>
   27d10:	40 7c 00 09 	ashr s2, s0, 31
   27d14:	3a 00 00 a8 	load_32 s1, (s26)
   27d18:	42 74 00 0a 	shr s2, s2, 29
   27d1c:	40 00 51 c0 	add_i s2, s0, s2
   27d20:	61 70 01 a8 	load_32 s3, 92(s1)
   27d24:	42 e0 ff 01 	and s2, s2, -8
   27d28:	00 00 61 c0 	sub_i s0, s0, s2
   27d2c:	43 30 01 a8 	load_32 s2, 76(s3)
   27d30:	00 04 00 05 	add_i s0, s0, 1
   27d34:	62 00 70 c0 	mull_i s3, s2, s0
   27d38:	00 00 fc c0 	move s0, s24
   27d3c:	40 80 f0 c0 	move s2, s1
   27d40:	d4 fb ff f9 	call -4272 <P_DamageMobj>
   27d44:	1a 00 00 a8 	load_32 s0, (s26)
   27d48:	5f fc fe 4f 	movehi s2, 522239
   27d4c:	20 03 00 0f 	move s25, 0
   27d50:	42 fc 7f 00 	or s2, s2, 8191
   27d54:	20 a0 01 a8 	load_32 s1, 104(s0)
   27d58:	21 00 11 c0 	and s1, s1, s2
   27d5c:	20 a0 01 88 	store_32 s1, 104(s0)
   27d60:	20 43 01 88 	store_32 s25, 80(s0)
   27d64:	20 33 01 88 	store_32 s25, 76(s0)
   27d68:	20 23 01 88 	store_32 s25, 72(s0)
   27d6c:	20 70 01 a8 	load_32 s1, 92(s0)
   27d70:	21 10 00 a8 	load_32 s1, 4(s1)
   27d74:	29 28 00 f8 	call 41124 <P_SetMobjState>
   27d78:	fe c3 00 a8 	load_32 ra, 48(sp)
   27d7c:	19 04 00 01 	and s0, s25, 1
   27d80:	5e d3 00 a8 	load_32 s26, 52(sp)
   27d84:	3e e3 00 a8 	load_32 s25, 56(sp)
   27d88:	1e f3 00 a8 	load_32 s24, 60(sp)
   27d8c:	de 03 01 05 	add_i sp, sp, 64
   27d90:	1f 00 00 f0 	ret
   27d94:	41 50 00 a8 	load_32 s2, 20(s1)
   27d98:	78 50 00 a8 	load_32 s3, 20(s24)
   27d9c:	98 10 01 a8 	load_32 s4, 68(s24)
   27da0:	84 80 51 c0 	add_i s4, s4, s3
   27da4:	82 00 22 c1 	cmpgt_i s4, s2, s4
   27da8:	84 fe ff f5 	bnz s4, -48 <PIT_CheckThing+0x158>
   27dac:	81 10 01 a8 	load_32 s4, 68(s1)
   27db0:	44 00 51 c0 	add_i s2, s4, s2
   27db4:	42 80 41 c1 	cmplt_i s2, s2, s3
   27db8:	02 fe ff f5 	bnz s2, -64 <PIT_CheckThing+0x158>
   27dbc:	21 e0 01 a8 	load_32 s1, 120(s1)
   27dc0:	61 02 00 f2 	bz s1, 76 <PIT_CheckThing+0x1ec>
   27dc4:	61 60 01 a8 	load_32 s3, 88(s1)
   27dc8:	58 60 01 a8 	load_32 s2, 88(s24)
   27dcc:	83 00 01 c1 	cmpeq_i s4, s3, s2
   27dd0:	24 01 00 f4 	bnz s4, 36 <PIT_CheckThing+0x1d4>
   27dd4:	83 44 00 11 	cmpne_i s4, s3, 17
   27dd8:	64 00 00 f4 	bnz s4, 12 <PIT_CheckThing+0x1c4>
   27ddc:	82 3c 00 10 	cmpeq_i s4, s2, 15
   27de0:	a4 00 00 f4 	bnz s4, 20 <PIT_CheckThing+0x1d4>
   27de4:	63 3c 00 11 	cmpne_i s3, s3, 15
   27de8:	23 01 00 f4 	bnz s3, 36 <PIT_CheckThing+0x1ec>
   27dec:	62 44 00 11 	cmpne_i s3, s2, 17
   27df0:	e3 00 00 f4 	bnz s3, 28 <PIT_CheckThing+0x1ec>
   27df4:	21 00 0c c1 	cmpeq_i s1, s1, s24
   27df8:	01 fc ff f5 	bnz s1, -128 <PIT_CheckThing+0x158>
   27dfc:	42 00 00 f4 	bnz s2, 8 <PIT_CheckThing+0x1e4>
   27e00:	03 00 00 f6 	b 12 <PIT_CheckThing+0x1ec>
   27e04:	20 03 00 0f 	move s25, 0
   27e08:	dc ff ff f7 	b -144 <PIT_CheckThing+0x158>
   27e0c:	20 10 00 01 	and s1, s0, 4
   27e10:	81 00 00 f4 	bnz s1, 16 <PIT_CheckThing+0x200>
   27e14:	00 08 00 01 	and s0, s0, 2
   27e18:	20 03 00 10 	cmpeq_i s25, s0, 0
   27e1c:	d7 ff ff f7 	b -164 <PIT_CheckThing+0x158>
   27e20:	35 d1 ff f9 	call -47916 <P_Random>
   27e24:	40 7c 00 09 	ashr s2, s0, 31
   27e28:	3a 00 00 a8 	load_32 s1, (s26)
   27e2c:	42 74 00 0a 	shr s2, s2, 29
   27e30:	40 00 51 c0 	add_i s2, s0, s2
   27e34:	61 70 01 a8 	load_32 s3, 92(s1)
   27e38:	42 e0 ff 01 	and s2, s2, -8
   27e3c:	00 00 61 c0 	sub_i s0, s0, s2
   27e40:	43 30 01 a8 	load_32 s2, 76(s3)
   27e44:	00 04 00 05 	add_i s0, s0, 1
   27e48:	62 00 70 c0 	mull_i s3, s2, s0
   27e4c:	41 e0 01 a8 	load_32 s2, 120(s1)
   27e50:	00 00 fc c0 	move s0, s24
   27e54:	8f fb ff f9 	call -4548 <P_DamageMobj>
   27e58:	20 03 00 0f 	move s25, 0
   27e5c:	c7 ff ff f7 	b -228 <PIT_CheckThing+0x158>

0000000000027e60 P_CheckPosition:
   27e60:	de 03 ff 05 	add_i sp, sp, -64
   27e64:	1e f3 00 88 	store_32 s24, 60(sp)
   27e68:	3e e3 00 88 	store_32 s25, 56(sp)
   27e6c:	5e d3 00 88 	store_32 s26, 52(sp)
   27e70:	7e c3 00 88 	store_32 s27, 48(sp)
   27e74:	fe b3 00 88 	store_32 ra, 44(sp)
   27e78:	7b 04 00 4f 	movehi s3, 59
   27e7c:	9b 04 00 4f 	movehi s4, 59
   27e80:	bb 04 00 4f 	movehi s5, 59
   27e84:	db 04 00 4f 	movehi s6, 59
   27e88:	63 10 2d 00 	or s3, s3, 2884
   27e8c:	04 f3 2c 00 	or s24, s4, 2876
   27e90:	85 20 2d 00 	or s4, s5, 2888
   27e94:	a6 40 2d 00 	or s5, s6, 2896
   27e98:	03 00 00 88 	store_32 s0, (s3)
   27e9c:	60 a0 01 a8 	load_32 s3, 104(s0)
   27ea0:	78 00 00 88 	store_32 s3, (s24)
   27ea4:	7b 04 00 4f 	movehi s3, 59
   27ea8:	24 00 00 88 	store_32 s1, (s4)
   27eac:	45 00 00 88 	store_32 s2, (s5)
   27eb0:	00 00 01 a8 	load_32 s0, 64(s0)
   27eb4:	43 93 2c 00 	or s26, s3, 2852
   27eb8:	60 00 51 c0 	add_i s3, s0, s2
   27ebc:	7a 00 00 88 	store_32 s3, (s26)
   27ec0:	62 00 60 c0 	sub_i s3, s2, s0
   27ec4:	7a 10 00 88 	store_32 s3, 4(s26)
   27ec8:	60 80 50 c0 	add_i s3, s0, s1
   27ecc:	7a 30 00 88 	store_32 s3, 12(s26)
   27ed0:	01 00 60 c0 	sub_i s0, s1, s0
   27ed4:	1a 20 00 88 	store_32 s0, 8(s26)
   27ed8:	00 80 f0 c0 	move s0, s1
   27edc:	20 00 f1 c0 	move s1, s2
   27ee0:	f3 47 00 f8 	call 73676 <R_PointInSubsector>
   27ee4:	3b 04 00 4f 	movehi s1, 59
   27ee8:	20 01 00 0f 	move s9, 0
   27eec:	5b 04 00 4f 	movehi s2, 59
   27ef0:	21 50 2b 00 	or s1, s1, 2772
   27ef4:	94 04 00 4f 	movehi s4, 52
   27ef8:	21 01 00 88 	store_32 s9, (s1)
   27efc:	3b 04 00 4f 	movehi s1, 59
   27f00:	00 00 00 a8 	load_32 s0, (s0)
   27f04:	21 e0 2c 00 	or s1, s1, 2872
   27f08:	60 00 00 a8 	load_32 s3, (s0)
   27f0c:	61 00 00 88 	store_32 s3, (s1)
   27f10:	22 00 2d 00 	or s1, s2, 2880
   27f14:	5b 04 00 4f 	movehi s2, 59
   27f18:	61 00 00 88 	store_32 s3, (s1)
   27f1c:	22 d0 2c 00 	or s1, s2, 2868
   27f20:	00 10 00 a8 	load_32 s0, 4(s0)
   27f24:	44 30 19 00 	or s2, s4, 1612
   27f28:	01 00 00 88 	store_32 s0, (s1)
   27f2c:	3b 04 00 4f 	movehi s1, 59
   27f30:	02 00 00 a8 	load_32 s0, (s2)
   27f34:	21 b0 2b 00 	or s1, s1, 2796
   27f38:	00 04 00 05 	add_i s0, s0, 1
   27f3c:	02 00 00 88 	store_32 s0, (s2)
   27f40:	21 01 00 88 	store_32 s9, (s1)
   27f44:	18 04 00 a0 	load_u8 s0, 1(s24)
   27f48:	20 40 00 01 	and s1, s0, 16
   27f4c:	00 04 00 0f 	move s0, 1
   27f50:	41 0c 00 f4 	bnz s1, 392 <P_CheckPosition+0x278>
   27f54:	3b 04 00 4f 	movehi s1, 59
   27f58:	c0 e0 ff 4f 	movehi s6, 524032
   27f5c:	e0 20 00 4f 	movehi s7, 256
   27f60:	61 71 48 00 	or s11, s1, 4636
   27f64:	3a 20 00 a8 	load_32 s1, 8(s26)
   27f68:	bb 04 00 4f 	movehi s5, 59
   27f6c:	4b 01 00 a8 	load_32 s10, (s11)
   27f70:	61 00 53 c0 	add_i s3, s1, s6
   27f74:	5a 30 00 a8 	load_32 s2, 12(s26)
   27f78:	85 81 48 00 	or s12, s5, 4640
   27f7c:	87 00 65 c0 	sub_i s4, s7, s10
   27f80:	63 00 65 c0 	sub_i s3, s3, s10
   27f84:	84 00 51 c0 	add_i s4, s4, s2
   27f88:	23 5f 00 09 	ashr s25, s3, 23
   27f8c:	a4 5d 00 09 	ashr s13, s4, 23
   27f90:	9a 10 00 a8 	load_32 s4, 4(s26)
   27f94:	6c 00 00 a8 	load_32 s3, (s12)
   27f98:	19 81 26 c1 	cmpgt_i s8, s25, s13
   27f9c:	ba 00 00 a8 	load_32 s5, (s26)
   27fa0:	68 05 00 f4 	bnz s8, 172 <P_CheckPosition+0x1ec>
   27fa4:	c4 00 53 c0 	add_i s6, s4, s6
   27fa8:	e7 80 61 c0 	sub_i s7, s7, s3
   27fac:	c6 80 61 c0 	sub_i s6, s6, s3
   27fb0:	e7 80 52 c0 	add_i s7, s7, s5
   27fb4:	66 5f 00 09 	ashr s27, s6, 23
   27fb8:	07 5f 00 09 	ashr s24, s7, 23
   27fbc:	db 00 2c c1 	cmpgt_i s6, s27, s24
   27fc0:	66 04 00 f4 	bnz s6, 140 <P_CheckPosition+0x1ec>
   27fc4:	9e 41 00 88 	store_32 s12, 16(sp)
   27fc8:	7e 51 00 88 	store_32 s11, 20(sp)
   27fcc:	5e 63 00 88 	store_32 s26, 24(sp)
   27fd0:	1e 70 00 88 	store_32 s0, 28(sp)
   27fd4:	13 00 00 4f 	movehi s0, 19
   27fd8:	3e a1 00 88 	store_32 s9, 40(sp)
   27fdc:	be 91 00 88 	store_32 s13, 36(sp)
   27fe0:	40 83 70 00 	or s26, s0, 7200
   27fe4:	7e 83 00 88 	store_32 s27, 32(sp)
   27fe8:	00 80 fc c0 	move s0, s25
   27fec:	20 80 fd c0 	move s1, s27
   27ff0:	40 00 fd c0 	move s2, s26
   27ff4:	18 08 00 f8 	call 8288 <P_BlockThingsIterator>
   27ff8:	e0 06 00 f2 	bz s0, 220 <P_CheckPosition+0x274>
   27ffc:	1b 00 3c c1 	cmpge_i s0, s27, s24
   28000:	7b 07 00 05 	add_i s27, s27, 1
   28004:	40 00 00 f4 	bnz s0, 8 <P_CheckPosition+0x1ac>
   28008:	f8 ff ff f7 	b -32 <P_CheckPosition+0x188>
   2800c:	be 91 00 a8 	load_32 s13, 36(sp)
   28010:	7e 83 00 a8 	load_32 s27, 32(sp)
   28014:	19 80 46 c1 	cmplt_i s0, s25, s13
   28018:	39 07 00 05 	add_i s25, s25, 1
   2801c:	60 fe ff f5 	bnz s0, -52 <P_CheckPosition+0x188>
   28020:	1e 60 00 a8 	load_32 s0, 24(sp)
   28024:	20 20 00 a8 	load_32 s1, 8(s0)
   28028:	5e 50 00 a8 	load_32 s2, 20(sp)
   2802c:	42 01 00 a8 	load_32 s10, (s2)
   28030:	40 30 00 a8 	load_32 s2, 12(s0)
   28034:	80 10 00 a8 	load_32 s4, 4(s0)
   28038:	7e 40 00 a8 	load_32 s3, 16(sp)
   2803c:	63 00 00 a8 	load_32 s3, (s3)
   28040:	a0 00 00 a8 	load_32 s5, (s0)
   28044:	3e a1 00 a8 	load_32 s9, 40(sp)
   28048:	1e 70 00 a8 	load_32 s0, 28(sp)
   2804c:	21 00 65 c0 	sub_i s1, s1, s10
   28050:	42 00 65 c0 	sub_i s2, s2, s10
   28054:	21 5f 00 09 	ashr s25, s1, 23
   28058:	c2 5c 00 09 	ashr s6, s2, 23
   2805c:	39 00 23 c1 	cmpgt_i s1, s25, s6
   28060:	c1 03 00 f4 	bnz s1, 120 <P_CheckPosition+0x278>
   28064:	44 80 61 c0 	sub_i s2, s4, s3
   28068:	25 80 61 c0 	sub_i s1, s5, s3
   2806c:	62 5f 00 09 	ashr s27, s2, 23
   28070:	01 5f 00 09 	ashr s24, s1, 23
   28074:	3b 00 2c c1 	cmpgt_i s1, s27, s24
   28078:	01 03 00 f4 	bnz s1, 96 <P_CheckPosition+0x278>
   2807c:	1e 70 00 88 	store_32 s0, 28(sp)
   28080:	13 00 00 4f 	movehi s0, 19
   28084:	3e a1 00 88 	store_32 s9, 40(sp)
   28088:	de 90 00 88 	store_32 s6, 36(sp)
   2808c:	40 73 6a 00 	or s26, s0, 6812
   28090:	7e 83 00 88 	store_32 s27, 32(sp)
   28094:	00 80 fc c0 	move s0, s25
   28098:	20 80 fd c0 	move s1, s27
   2809c:	40 00 fd c0 	move s2, s26
   280a0:	a3 07 00 f8 	call 7820 <P_BlockLinesIterator>
   280a4:	80 01 00 f2 	bz s0, 48 <P_CheckPosition+0x274>
   280a8:	1b 00 3c c1 	cmpge_i s0, s27, s24
   280ac:	7b 07 00 05 	add_i s27, s27, 1
   280b0:	40 00 00 f4 	bnz s0, 8 <P_CheckPosition+0x258>
   280b4:	f8 ff ff f7 	b -32 <P_CheckPosition+0x234>
   280b8:	de 90 00 a8 	load_32 s6, 36(sp)
   280bc:	7e 83 00 a8 	load_32 s27, 32(sp)
   280c0:	19 00 43 c1 	cmplt_i s0, s25, s6
   280c4:	39 07 00 05 	add_i s25, s25, 1
   280c8:	60 fe ff f5 	bnz s0, -52 <P_CheckPosition+0x234>
   280cc:	1e 70 00 a8 	load_32 s0, 28(sp)
   280d0:	02 00 00 f6 	b 8 <P_CheckPosition+0x278>
   280d4:	1e a0 00 a8 	load_32 s0, 40(sp)
   280d8:	fe b3 00 a8 	load_32 ra, 44(sp)
   280dc:	7e c3 00 a8 	load_32 s27, 48(sp)
   280e0:	5e d3 00 a8 	load_32 s26, 52(sp)
   280e4:	3e e3 00 a8 	load_32 s25, 56(sp)
   280e8:	1e f3 00 a8 	load_32 s24, 60(sp)
   280ec:	de 03 01 05 	add_i sp, sp, 64
   280f0:	1f 00 00 f0 	ret

00000000000280f4 P_TryMove:
   280f4:	de 03 ff 05 	add_i sp, sp, -64
   280f8:	1e f3 00 88 	store_32 s24, 60(sp)
   280fc:	3e e3 00 88 	store_32 s25, 56(sp)
   28100:	5e d3 00 88 	store_32 s26, 52(sp)
   28104:	7e c3 00 88 	store_32 s27, 48(sp)
   28108:	fe b3 00 88 	store_32 ra, 44(sp)
   2810c:	7b 04 00 4f 	movehi s3, 59
   28110:	60 83 f0 c0 	move s27, s1
   28114:	00 03 f0 c0 	move s24, s0
   28118:	23 73 2b 00 	or s25, s3, 2780
   2811c:	40 03 00 0f 	move s26, 0
   28120:	59 03 00 88 	store_32 s26, (s25)
   28124:	5e 90 00 88 	store_32 s2, 36(sp)
   28128:	4e ff ff f9 	call -712 <P_CheckPosition>
   2812c:	00 0d 00 f2 	bz s0, 416 <P_TryMove+0x1d8>
   28130:	18 a0 01 a8 	load_32 s0, 104(s24)
   28134:	20 00 40 01 	and s1, s0, 4096
   28138:	61 04 00 f4 	bnz s1, 140 <P_TryMove+0xd0>
   2813c:	3b 04 00 4f 	movehi s1, 59
   28140:	5b 04 00 4f 	movehi s2, 59
   28144:	21 d0 2c 00 	or s1, s1, 2868
   28148:	62 00 2d 00 	or s3, s2, 2880
   2814c:	41 00 00 a8 	load_32 s2, (s1)
   28150:	23 00 00 a8 	load_32 s1, (s3)
   28154:	78 10 01 a8 	load_32 s3, 68(s24)
   28158:	82 80 60 c0 	sub_i s4, s2, s1
   2815c:	84 80 41 c1 	cmplt_i s4, s4, s3
   28160:	64 0b 00 f4 	bnz s4, 364 <P_TryMove+0x1d8>
   28164:	a4 00 00 4f 	movehi s5, 4
   28168:	a0 80 12 c0 	and s5, s0, s5
   2816c:	80 04 00 0f 	move s4, 1
   28170:	99 00 00 88 	store_32 s4, (s25)
   28174:	25 01 00 f4 	bnz s5, 36 <P_TryMove+0xa4>
   28178:	98 50 00 a8 	load_32 s4, 20(s24)
   2817c:	42 00 62 c0 	sub_i s2, s2, s4
   28180:	42 80 41 c1 	cmplt_i s2, s2, s3
   28184:	42 0a 00 f4 	bnz s2, 328 <P_TryMove+0x1d8>
   28188:	41 00 62 c0 	sub_i s2, s1, s4
   2818c:	60 18 00 4f 	movehi s3, 192
   28190:	42 80 21 c1 	cmpgt_i s2, s2, s3
   28194:	c2 09 00 f4 	bnz s2, 312 <P_TryMove+0x1d8>
   28198:	42 00 00 4f 	movehi s2, 2
   2819c:	42 00 10 00 	or s2, s2, 1024
   281a0:	00 00 11 c0 	and s0, s0, s2
   281a4:	00 01 00 f4 	bnz s0, 32 <P_TryMove+0xd0>
   281a8:	1b 04 00 4f 	movehi s0, 59
   281ac:	00 e0 2c 00 	or s0, s0, 2872
   281b0:	00 00 00 a8 	load_32 s0, (s0)
   281b4:	01 00 60 c0 	sub_i s0, s1, s0
   281b8:	20 18 00 4f 	movehi s1, 192
   281bc:	00 80 20 c1 	cmpgt_i s0, s0, s1
   281c0:	60 08 00 f4 	bnz s0, 268 <P_TryMove+0x1d8>
   281c4:	00 00 fc c0 	move s0, s24
   281c8:	cc 06 00 f8 	call 6960 <P_UnsetThingPosition>
   281cc:	1b 04 00 4f 	movehi s0, 59
   281d0:	38 30 00 a8 	load_32 s1, 12(s24)
   281d4:	3e a0 00 88 	store_32 s1, 40(sp)
   281d8:	3b 04 00 4f 	movehi s1, 59
   281dc:	38 43 00 a8 	load_32 s25, 16(s24)
   281e0:	00 00 2d 00 	or s0, s0, 2880
   281e4:	21 d0 2c 00 	or s1, s1, 2868
   281e8:	00 00 00 a8 	load_32 s0, (s0)
   281ec:	18 e0 00 88 	store_32 s0, 56(s24)
   281f0:	01 00 00 a8 	load_32 s0, (s1)
   281f4:	18 f0 00 88 	store_32 s0, 60(s24)
   281f8:	78 33 00 88 	store_32 s27, 12(s24)
   281fc:	1e 90 00 a8 	load_32 s0, 36(sp)
   28200:	18 40 00 88 	store_32 s0, 16(s24)
   28204:	00 00 fc c0 	move s0, s24
   28208:	f8 06 00 f8 	call 7136 <P_SetThingPosition>
   2820c:	18 a4 01 a0 	load_u8 s0, 105(s24)
   28210:	40 07 00 0f 	move s26, 1
   28214:	00 40 02 01 	and s0, s0, 144
   28218:	a0 05 00 f4 	bnz s0, 180 <P_TryMove+0x1d8>
   2821c:	1e a0 00 a8 	load_32 s0, 40(sp)
   28220:	1b 04 00 4f 	movehi s0, 59
   28224:	3e 93 00 88 	store_32 s25, 36(sp)
   28228:	5e 63 00 88 	store_32 s26, 24(sp)
   2822c:	40 b3 2b 00 	or s26, s0, 2796
   28230:	3a 00 00 a8 	load_32 s1, (s26)
   28234:	01 fc ff 05 	add_i s0, s1, -1
   28238:	1a 00 00 88 	store_32 s0, (s26)
   2823c:	61 04 00 f2 	bz s1, 140 <P_TryMove+0x1d4>
   28240:	3b 04 00 4f 	movehi s1, 59
   28244:	5b 04 00 4f 	movehi s2, 59
   28248:	21 10 2c 00 	or s1, s1, 2820
   2824c:	3e 80 00 88 	store_32 s1, 32(sp)
   28250:	22 40 4a 00 	or s1, s2, 4752
   28254:	3e 70 00 88 	store_32 s1, 28(sp)
   28258:	3e 80 00 a8 	load_32 s1, 32(sp)
   2825c:	00 08 00 0b 	shl s0, s0, 2
   28260:	01 00 50 c0 	add_i s0, s1, s0
   28264:	60 03 00 a8 	load_32 s27, (s0)
   28268:	18 30 00 a8 	load_32 s0, 12(s24)
   2826c:	38 40 00 a8 	load_32 s1, 16(s24)
   28270:	40 80 fd c0 	move s2, s27
   28274:	1f 05 00 f8 	call 5244 <P_PointOnLineSide>
   28278:	20 03 f0 c0 	move s25, s0
   2827c:	1e a0 00 a8 	load_32 s0, 40(sp)
   28280:	3e 90 00 a8 	load_32 s1, 36(sp)
   28284:	40 80 fd c0 	move s2, s27
   28288:	1a 05 00 f8 	call 5224 <P_PointOnLineSide>
   2828c:	20 00 f0 c0 	move s1, s0
   28290:	19 80 00 c1 	cmpeq_i s0, s25, s1
   28294:	20 01 00 f4 	bnz s0, 36 <P_TryMove+0x1c4>
   28298:	1b 48 00 a4 	load_u16 s0, 18(s27)
   2829c:	e0 00 00 f2 	bz s0, 28 <P_TryMove+0x1c4>
   282a0:	1e 70 00 a8 	load_32 s0, 28(sp)
   282a4:	00 00 00 a8 	load_32 s0, (s0)
   282a8:	40 00 fc c0 	move s2, s24
   282ac:	1b 00 60 c0 	sub_i s0, s27, s0
   282b0:	00 18 00 09 	ashr s0, s0, 6
   282b4:	31 20 00 f8 	call 32964 <P_CrossSpecialLine>
   282b8:	3a 00 00 a8 	load_32 s1, (s26)
   282bc:	01 fc ff 05 	add_i s0, s1, -1
   282c0:	1a 00 00 88 	store_32 s0, (s26)
   282c4:	a1 fc ff f5 	bnz s1, -108 <P_TryMove+0x164>
   282c8:	5e 63 00 a8 	load_32 s26, 24(sp)
   282cc:	00 00 fd c0 	move s0, s26
   282d0:	fe b3 00 a8 	load_32 ra, 44(sp)
   282d4:	7e c3 00 a8 	load_32 s27, 48(sp)
   282d8:	5e d3 00 a8 	load_32 s26, 52(sp)
   282dc:	3e e3 00 a8 	load_32 s25, 56(sp)
   282e0:	1e f3 00 a8 	load_32 s24, 60(sp)
   282e4:	de 03 01 05 	add_i sp, sp, 64
   282e8:	1f 00 00 f0 	ret

00000000000282ec P_ThingHeightClip:
   282ec:	de 03 ff 05 	add_i sp, sp, -64
   282f0:	1e f3 00 88 	store_32 s24, 60(sp)
   282f4:	3e e3 00 88 	store_32 s25, 56(sp)
   282f8:	fe d3 00 88 	store_32 ra, 52(sp)
   282fc:	00 03 f0 c0 	move s24, s0
   28300:	18 50 00 a8 	load_32 s0, 20(s24)
   28304:	38 e0 00 a8 	load_32 s1, 56(s24)
   28308:	20 83 10 c1 	cmpne_i s25, s0, s1
   2830c:	38 30 00 a8 	load_32 s1, 12(s24)
   28310:	58 40 00 a8 	load_32 s2, 16(s24)
   28314:	00 00 fc c0 	move s0, s24
   28318:	d2 fe ff f9 	call -1208 <P_CheckPosition>
   2831c:	1b 04 00 4f 	movehi s0, 59
   28320:	3b 04 00 4f 	movehi s1, 59
   28324:	00 00 2d 00 	or s0, s0, 2880
   28328:	21 d0 2c 00 	or s1, s1, 2868
   2832c:	00 00 00 a8 	load_32 s0, (s0)
   28330:	18 e0 00 88 	store_32 s0, 56(s24)
   28334:	21 00 00 a8 	load_32 s1, (s1)
   28338:	38 f0 00 88 	store_32 s1, 60(s24)
   2833c:	99 00 00 f4 	bnz s25, 16 <P_ThingHeightClip+0x60>
   28340:	18 50 00 88 	store_32 s0, 20(s24)
   28344:	58 10 01 a8 	load_32 s2, 68(s24)
   28348:	08 00 00 f6 	b 32 <P_ThingHeightClip+0x7c>
   2834c:	78 50 00 a8 	load_32 s3, 20(s24)
   28350:	58 10 01 a8 	load_32 s2, 68(s24)
   28354:	62 80 51 c0 	add_i s3, s2, s3
   28358:	63 80 50 c1 	cmple_i s3, s3, s1
   2835c:	63 00 00 f4 	bnz s3, 12 <P_ThingHeightClip+0x7c>
   28360:	61 00 61 c0 	sub_i s3, s1, s2
   28364:	78 50 00 88 	store_32 s3, 20(s24)
   28368:	01 00 60 c0 	sub_i s0, s1, s0
   2836c:	fe d3 00 a8 	load_32 ra, 52(sp)
   28370:	3e e3 00 a8 	load_32 s25, 56(sp)
   28374:	1e f3 00 a8 	load_32 s24, 60(sp)
   28378:	00 00 31 c1 	cmpge_i s0, s0, s2
   2837c:	00 04 00 01 	and s0, s0, 1
   28380:	de 03 01 05 	add_i sp, sp, 64
   28384:	1f 00 00 f0 	ret

0000000000028388 P_HitSlideLine:
   28388:	de 03 ff 05 	add_i sp, sp, -64
   2838c:	1e f3 00 88 	store_32 s24, 60(sp)
   28390:	3e e3 00 88 	store_32 s25, 56(sp)
   28394:	5e d3 00 88 	store_32 s26, 52(sp)
   28398:	7e c3 00 88 	store_32 s27, 48(sp)
   2839c:	fe b3 00 88 	store_32 ra, 44(sp)
   283a0:	00 03 f0 c0 	move s24, s0
   283a4:	18 b0 00 a8 	load_32 s0, 44(s24)
   283a8:	20 04 00 10 	cmpeq_i s1, s0, 1
   283ac:	a1 00 00 f4 	bnz s1, 20 <P_HitSlideLine+0x38>
   283b0:	20 01 00 f4 	bnz s0, 36 <P_HitSlideLine+0x4c>
   283b4:	1b 04 00 4f 	movehi s0, 59
   283b8:	00 50 2d 00 	or s0, s0, 2900
   283bc:	03 00 00 f6 	b 12 <P_HitSlideLine+0x40>
   283c0:	1b 04 00 4f 	movehi s0, 59
   283c4:	00 30 2d 00 	or s0, s0, 2892
   283c8:	20 00 00 0f 	move s1, 0
   283cc:	20 00 00 88 	store_32 s1, (s0)
   283d0:	43 00 00 f6 	b 268 <P_HitSlideLine+0x154>
   283d4:	1b 04 00 4f 	movehi s0, 59
   283d8:	00 00 2c 00 	or s0, s0, 2816
   283dc:	20 00 00 a8 	load_32 s1, (s0)
   283e0:	01 30 00 a8 	load_32 s0, 12(s1)
   283e4:	21 40 00 a8 	load_32 s1, 16(s1)
   283e8:	40 00 fc c0 	move s2, s24
   283ec:	c1 04 00 f8 	call 4868 <P_PointOnLineSide>
   283f0:	20 03 00 0f 	move s25, 0
   283f4:	40 03 f0 c0 	move s26, s0
   283f8:	58 20 00 a8 	load_32 s2, 8(s24)
   283fc:	78 30 00 a8 	load_32 s3, 12(s24)
   28400:	00 80 fc c0 	move s0, s25
   28404:	20 80 fc c0 	move s1, s25
   28408:	d8 43 00 f8 	call 69472 <R_PointToAngle2>
   2840c:	00 03 f0 c0 	move s24, s0
   28410:	1a 04 00 10 	cmpeq_i s0, s26, 1
   28414:	40 03 80 4f 	movehi s26, 262144
   28418:	40 00 00 f4 	bnz s0, 8 <P_HitSlideLine+0x98>
   2841c:	02 00 00 f6 	b 8 <P_HitSlideLine+0x9c>
   28420:	18 03 3d c0 	xor s24, s24, s26
   28424:	1b 04 00 4f 	movehi s0, 59
   28428:	3b 04 00 4f 	movehi s1, 59
   2842c:	60 33 2d 00 	or s27, s0, 2892
   28430:	01 50 2d 00 	or s0, s1, 2900
   28434:	5b 00 00 a8 	load_32 s2, (s27)
   28438:	1e a0 00 88 	store_32 s0, 40(sp)
   2843c:	60 00 00 a8 	load_32 s3, (s0)
   28440:	00 80 fc c0 	move s0, s25
   28444:	20 80 fc c0 	move s1, s25
   28448:	c8 43 00 f8 	call 69408 <R_PointToAngle2>
   2844c:	23 00 00 4f 	movehi s1, 3
   28450:	58 44 00 0a 	shr s2, s24, 17
   28454:	00 00 6c c0 	sub_i s0, s0, s24
   28458:	21 f0 7f 00 	or s1, s1, 8188
   2845c:	22 80 10 c0 	and s1, s2, s1
   28460:	3e 90 00 88 	store_32 s1, 36(sp)
   28464:	20 00 6d c1 	cmpgt_u s1, s0, s26
   28468:	00 4f 00 0a 	shr s24, s0, 19
   2846c:	41 00 00 f4 	bnz s1, 8 <P_HitSlideLine+0xec>
   28470:	02 00 00 f6 	b 8 <P_HitSlideLine+0xf0>
   28474:	18 03 40 03 	xor s24, s24, 4096
   28478:	1b 00 00 a8 	load_32 s0, (s27)
   2847c:	3e a3 00 a8 	load_32 s25, 40(sp)
   28480:	39 00 00 a8 	load_32 s1, (s25)
   28484:	8e 04 00 f8 	call 4664 <P_AproxDistance>
   28488:	34 04 00 4f 	movehi s1, 52
   2848c:	58 08 00 0b 	shl s2, s24, 2
   28490:	41 43 19 00 	or s26, s1, 1616
   28494:	3a 00 00 a8 	load_32 s1, (s26)
   28498:	21 00 51 c0 	add_i s1, s1, s2
   2849c:	21 00 00 a8 	load_32 s1, (s1)
   284a0:	a5 ce ff f9 	call -50540 <FixedMul>
   284a4:	3a 00 00 a8 	load_32 s1, (s26)
   284a8:	5e 93 00 a8 	load_32 s26, 36(sp)
   284ac:	00 03 f0 c0 	move s24, s0
   284b0:	21 00 5d c0 	add_i s1, s1, s26
   284b4:	21 00 00 a8 	load_32 s1, (s1)
   284b8:	9f ce ff f9 	call -50564 <FixedMul>
   284bc:	2d 04 00 4f 	movehi s1, 45
   284c0:	1b 00 00 88 	store_32 s0, (s27)
   284c4:	21 90 41 00 	or s1, s1, 4196
   284c8:	21 00 5d c0 	add_i s1, s1, s26
   284cc:	21 00 00 a8 	load_32 s1, (s1)
   284d0:	00 00 fc c0 	move s0, s24
   284d4:	98 ce ff f9 	call -50592 <FixedMul>
   284d8:	19 00 00 88 	store_32 s0, (s25)
   284dc:	fe b3 00 a8 	load_32 ra, 44(sp)
   284e0:	7e c3 00 a8 	load_32 s27, 48(sp)
   284e4:	5e d3 00 a8 	load_32 s26, 52(sp)
   284e8:	3e e3 00 a8 	load_32 s25, 56(sp)
   284ec:	1e f3 00 a8 	load_32 s24, 60(sp)
   284f0:	de 03 01 05 	add_i sp, sp, 64
   284f4:	1f 00 00 f0 	ret

00000000000284f8 PTR_SlideTraverse:
   284f8:	de 03 fe 05 	add_i sp, sp, -128
   284fc:	1e f3 01 88 	store_32 s24, 124(sp)
   28500:	3e e3 01 88 	store_32 s25, 120(sp)
   28504:	fe d3 01 88 	store_32 ra, 116(sp)
   28508:	00 03 f0 c0 	move s24, s0
   2850c:	18 10 00 a8 	load_32 s0, 4(s24)
   28510:	40 00 00 f4 	bnz s0, 8 <PTR_SlideTraverse+0x20>
   28514:	0f 00 00 f6 	b 60 <PTR_SlideTraverse+0x58>
   28518:	38 23 00 a8 	load_32 s25, 8(s24)
   2851c:	19 40 00 a0 	load_u8 s0, 16(s25)
   28520:	00 10 00 01 	and s0, s0, 4
   28524:	80 02 00 f4 	bnz s0, 80 <PTR_SlideTraverse+0x7c>
   28528:	1b 04 00 4f 	movehi s0, 59
   2852c:	00 00 2c 00 	or s0, s0, 2816
   28530:	20 00 00 a8 	load_32 s1, (s0)
   28534:	01 30 00 a8 	load_32 s0, 12(s1)
   28538:	21 40 00 a8 	load_32 s1, 16(s1)
   2853c:	40 80 fc c0 	move s2, s25
   28540:	6c 04 00 f8 	call 4528 <P_PointOnLineSide>
   28544:	c0 04 00 f2 	bz s0, 152 <PTR_SlideTraverse+0xe4>
   28548:	00 04 00 0f 	move s0, 1
   2854c:	37 00 00 f6 	b 220 <PTR_SlideTraverse+0x130>
   28550:	01 00 00 4f 	movehi s0, 1
   28554:	00 8c 22 00 	or s0, s0, 2211
   28558:	1e 00 00 88 	store_32 s0, (sp)
   2855c:	ea 96 ff f9 	call -107608 <I_Error>
   28560:	38 23 00 a8 	load_32 s25, 8(s24)
   28564:	19 40 00 a0 	load_u8 s0, 16(s25)
   28568:	00 10 00 01 	and s0, s0, 4
   2856c:	40 00 00 f4 	bnz s0, 8 <PTR_SlideTraverse+0x7c>
   28570:	ee ff ff f7 	b -72 <PTR_SlideTraverse+0x30>
   28574:	00 80 fc c0 	move s0, s25
   28578:	b9 05 00 f8 	call 5860 <P_LineOpening>
   2857c:	1b 04 00 4f 	movehi s0, 59
   28580:	3b 04 00 4f 	movehi s1, 59
   28584:	00 b0 45 00 	or s0, s0, 4460
   28588:	21 00 2c 00 	or s1, s1, 2816
   2858c:	40 00 00 a8 	load_32 s2, (s0)
   28590:	01 00 00 a8 	load_32 s0, (s1)
   28594:	20 10 01 a8 	load_32 s1, 68(s0)
   28598:	42 80 40 c1 	cmplt_i s2, s2, s1
   2859c:	02 02 00 f4 	bnz s2, 64 <PTR_SlideTraverse+0xe4>
   285a0:	5b 04 00 4f 	movehi s2, 59
   285a4:	42 c0 45 00 	or s2, s2, 4464
   285a8:	42 00 00 a8 	load_32 s2, (s2)
   285ac:	00 50 00 a8 	load_32 s0, 20(s0)
   285b0:	42 00 60 c0 	sub_i s2, s2, s0
   285b4:	22 80 40 c1 	cmplt_i s1, s2, s1
   285b8:	21 01 00 f4 	bnz s1, 36 <PTR_SlideTraverse+0xe4>
   285bc:	3b 04 00 4f 	movehi s1, 59
   285c0:	40 18 00 4f 	movehi s2, 192
   285c4:	21 a0 45 00 	or s1, s1, 4456
   285c8:	21 00 00 a8 	load_32 s1, (s1)
   285cc:	01 00 60 c0 	sub_i s0, s1, s0
   285d0:	22 04 00 00 	or s1, s2, 1
   285d4:	00 80 40 c1 	cmplt_i s0, s0, s1
   285d8:	80 fb ff f5 	bnz s0, -144 <PTR_SlideTraverse+0x50>
   285dc:	1b 04 00 4f 	movehi s0, 59
   285e0:	20 00 2b 00 	or s1, s0, 2752
   285e4:	18 00 00 a8 	load_32 s0, (s24)
   285e8:	41 00 00 a8 	load_32 s2, (s1)
   285ec:	60 00 31 c1 	cmpge_i s3, s0, s2
   285f0:	00 00 00 0f 	move s0, 0
   285f4:	a3 01 00 f4 	bnz s3, 52 <PTR_SlideTraverse+0x130>
   285f8:	7b 04 00 4f 	movehi s3, 59
   285fc:	9b 04 00 4f 	movehi s4, 59
   28600:	bb 04 00 4f 	movehi s5, 59
   28604:	63 c0 2b 00 	or s3, s3, 2800
   28608:	84 10 2b 00 	or s4, s4, 2756
   2860c:	a5 d0 2b 00 	or s5, s5, 2804
   28610:	43 00 00 88 	store_32 s2, (s3)
   28614:	44 00 00 a8 	load_32 s2, (s4)
   28618:	45 00 00 88 	store_32 s2, (s5)
   2861c:	58 00 00 a8 	load_32 s2, (s24)
   28620:	41 00 00 88 	store_32 s2, (s1)
   28624:	24 03 00 88 	store_32 s25, (s4)
   28628:	fe d3 01 a8 	load_32 ra, 116(sp)
   2862c:	3e e3 01 a8 	load_32 s25, 120(sp)
   28630:	1e f3 01 a8 	load_32 s24, 124(sp)
   28634:	de 03 02 05 	add_i sp, sp, 128
   28638:	1f 00 00 f0 	ret

000000000002863c P_SlideMove:
   2863c:	de 03 fe 05 	add_i sp, sp, -128
   28640:	1e f3 01 88 	store_32 s24, 124(sp)
   28644:	3e e3 01 88 	store_32 s25, 120(sp)
   28648:	5e d3 01 88 	store_32 s26, 116(sp)
   2864c:	7e c3 01 88 	store_32 s27, 112(sp)
   28650:	fe b3 01 88 	store_32 ra, 108(sp)
   28654:	3b 04 00 4f 	movehi s1, 59
   28658:	00 03 f0 c0 	move s24, s0
   2865c:	1b 04 00 4f 	movehi s0, 59
   28660:	21 00 2c 00 	or s1, s1, 2816
   28664:	40 03 00 0f 	move s26, 0
   28668:	20 03 2b 00 	or s25, s0, 2752
   2866c:	01 03 00 88 	store_32 s24, (s1)
   28670:	28 00 00 4f 	movehi s1, 8
   28674:	14 00 00 4f 	movehi s0, 20
   28678:	3e 40 01 88 	store_32 s1, 80(sp)
   2867c:	5b 04 00 4f 	movehi s2, 59
   28680:	21 04 00 00 	or s1, s1, 1
   28684:	3e a0 01 88 	store_32 s1, 104(sp)
   28688:	27 00 00 4f 	movehi s1, 7
   2868c:	00 e0 13 00 	or s0, s0, 1272
   28690:	1e 30 01 88 	store_32 s0, 76(sp)
   28694:	00 04 00 0f 	move s0, 1
   28698:	1e 20 01 88 	store_32 s0, 72(sp)
   2869c:	01 00 60 00 	or s0, s1, 6144
   286a0:	1e 10 01 88 	store_32 s0, 68(sp)
   286a4:	1b 04 00 4f 	movehi s0, 59
   286a8:	3b 04 00 4f 	movehi s1, 59
   286ac:	00 30 2d 00 	or s0, s0, 2892
   286b0:	1e 00 01 88 	store_32 s0, 64(sp)
   286b4:	01 50 2d 00 	or s0, s1, 2900
   286b8:	1e f0 00 88 	store_32 s0, 60(sp)
   286bc:	02 10 2b 00 	or s0, s2, 2756
   286c0:	1e e0 00 88 	store_32 s0, 56(sp)
   286c4:	3e 93 01 88 	store_32 s25, 100(sp)
   286c8:	5a 07 00 05 	add_i s26, s26, 1
   286cc:	1a 0c 00 10 	cmpeq_i s0, s26, 3
   286d0:	40 0e 00 f4 	bnz s0, 456 <P_SlideMove+0x25c>
   286d4:	c0 80 fc c0 	move s6, s25
   286d8:	f8 20 01 a8 	load_32 s7, 72(s24)
   286dc:	98 30 00 a8 	load_32 s4, 12(s24)
   286e0:	38 00 01 a8 	load_32 s1, 64(s24)
   286e4:	67 00 00 12 	cmpgt_i s3, s7, 0
   286e8:	44 80 60 c0 	sub_i s2, s4, s1
   286ec:	01 00 52 c0 	add_i s0, s1, s4
   286f0:	80 00 f1 c0 	move s4, s2
   286f4:	43 00 00 f4 	bnz s3, 8 <P_SlideMove+0xc0>
   286f8:	80 00 f0 c0 	move s4, s0
   286fc:	9e 70 01 88 	store_32 s4, 92(sp)
   28700:	5e 83 01 88 	store_32 s26, 96(sp)
   28704:	43 00 00 f4 	bnz s3, 8 <P_SlideMove+0xd0>
   28708:	00 00 f1 c0 	move s0, s2
   2870c:	78 30 01 a8 	load_32 s3, 76(s24)
   28710:	b8 40 00 a8 	load_32 s5, 16(s24)
   28714:	83 00 00 12 	cmpgt_i s4, s3, 0
   28718:	45 80 60 c0 	sub_i s2, s5, s1
   2871c:	45 83 50 c0 	add_i s26, s5, s1
   28720:	20 00 f1 c0 	move s1, s2
   28724:	44 00 00 f4 	bnz s4, 8 <P_SlideMove+0xf0>
   28728:	20 00 fd c0 	move s1, s26
   2872c:	3e 60 01 88 	store_32 s1, 88(sp)
   28730:	44 00 00 f4 	bnz s4, 8 <P_SlideMove+0xfc>
   28734:	40 03 f1 c0 	move s26, s2
   28738:	3e a0 01 a8 	load_32 s1, 104(sp)
   2873c:	40 80 53 c0 	add_i s2, s0, s7
   28740:	26 00 00 88 	store_32 s1, (s6)
   28744:	20 00 fd c0 	move s1, s26
   28748:	7e 23 01 a8 	load_32 s27, 72(sp)
   2874c:	7a 80 51 c0 	add_i s3, s26, s3
   28750:	80 80 fd c0 	move s4, s27
   28754:	3e 33 01 a8 	load_32 s25, 76(sp)
   28758:	a0 80 fc c0 	move s5, s25
   2875c:	1e 50 01 88 	store_32 s0, 84(sp)
   28760:	bd 08 00 f8 	call 8948 <P_PathTraverse>
   28764:	58 20 01 a8 	load_32 s2, 72(s24)
   28768:	38 30 01 a8 	load_32 s1, 76(s24)
   2876c:	1e 70 01 a8 	load_32 s0, 92(sp)
   28770:	61 00 5d c0 	add_i s3, s1, s26
   28774:	20 00 fd c0 	move s1, s26
   28778:	80 80 fd c0 	move s4, s27
   2877c:	42 00 50 c0 	add_i s2, s2, s0
   28780:	a0 80 fc c0 	move s5, s25
   28784:	b4 08 00 f8 	call 8912 <P_PathTraverse>
   28788:	38 20 01 a8 	load_32 s1, 72(s24)
   2878c:	78 30 01 a8 	load_32 s3, 76(s24)
   28790:	1e 50 01 a8 	load_32 s0, 84(sp)
   28794:	41 00 50 c0 	add_i s2, s1, s0
   28798:	3e 60 01 a8 	load_32 s1, 88(sp)
   2879c:	80 80 fd c0 	move s4, s27
   287a0:	7e 93 01 a8 	load_32 s27, 100(sp)
   287a4:	a0 80 fc c0 	move s5, s25
   287a8:	63 80 50 c0 	add_i s3, s3, s1
   287ac:	aa 08 00 f8 	call 8872 <P_PathTraverse>
   287b0:	1b 00 00 a8 	load_32 s0, (s27)
   287b4:	3e a0 01 a8 	load_32 s1, 104(sp)
   287b8:	5e 83 01 a8 	load_32 s26, 96(sp)
   287bc:	20 80 10 c1 	cmpne_i s1, s0, s1
   287c0:	41 00 00 f4 	bnz s1, 8 <P_SlideMove+0x18c>
   287c4:	35 00 00 f6 	b 212 <P_SlideMove+0x25c>
   287c8:	20 00 e0 05 	add_i s1, s0, -2048
   287cc:	3b 00 00 88 	store_32 s1, (s27)
   287d0:	01 04 00 14 	cmplt_i s0, s1, 1
   287d4:	e0 01 00 f4 	bnz s0, 60 <P_SlideMove+0x1d4>
   287d8:	18 20 01 a8 	load_32 s0, 72(s24)
   287dc:	d6 cd ff f9 	call -51368 <FixedMul>
   287e0:	20 03 f0 c0 	move s25, s0
   287e4:	18 30 01 a8 	load_32 s0, 76(s24)
   287e8:	3b 00 00 a8 	load_32 s1, (s27)
   287ec:	d2 cd ff f9 	call -51384 <FixedMul>
   287f0:	38 30 00 a8 	load_32 s1, 12(s24)
   287f4:	58 40 00 a8 	load_32 s2, 16(s24)
   287f8:	21 80 5c c0 	add_i s1, s1, s25
   287fc:	42 00 50 c0 	add_i s2, s2, s0
   28800:	00 00 fc c0 	move s0, s24
   28804:	3c fe ff f9 	call -1808 <P_TryMove>
   28808:	80 04 00 f2 	bz s0, 144 <P_SlideMove+0x25c>
   2880c:	3b 00 00 a8 	load_32 s1, (s27)
   28810:	1e 10 01 a8 	load_32 s0, 68(sp)
   28814:	20 80 60 c0 	sub_i s1, s0, s1
   28818:	1e 40 01 a8 	load_32 s0, 80(sp)
   2881c:	01 00 40 c1 	cmplt_i s0, s1, s0
   28820:	40 00 00 f4 	bnz s0, 8 <P_SlideMove+0x1ec>
   28824:	3e 40 01 a8 	load_32 s1, 80(sp)
   28828:	01 04 00 14 	cmplt_i s0, s1, 1
   2882c:	3b 00 00 88 	store_32 s1, (s27)
   28830:	e0 04 00 f4 	bnz s0, 156 <P_SlideMove+0x290>
   28834:	18 20 01 a8 	load_32 s0, 72(s24)
   28838:	bf cd ff f9 	call -51460 <FixedMul>
   2883c:	3e 03 01 a8 	load_32 s25, 64(sp)
   28840:	19 00 00 88 	store_32 s0, (s25)
   28844:	18 30 01 a8 	load_32 s0, 76(s24)
   28848:	3b 00 00 a8 	load_32 s1, (s27)
   2884c:	ba cd ff f9 	call -51480 <FixedMul>
   28850:	7e f3 00 a8 	load_32 s27, 60(sp)
   28854:	1b 00 00 88 	store_32 s0, (s27)
   28858:	1e e0 00 a8 	load_32 s0, 56(sp)
   2885c:	00 00 00 a8 	load_32 s0, (s0)
   28860:	ca fe ff f9 	call -1240 <P_HitSlideLine>
   28864:	19 00 00 a8 	load_32 s0, (s25)
   28868:	18 20 01 88 	store_32 s0, 72(s24)
   2886c:	5b 00 00 a8 	load_32 s2, (s27)
   28870:	3e 93 01 a8 	load_32 s25, 100(sp)
   28874:	58 30 01 88 	store_32 s2, 76(s24)
   28878:	38 30 00 a8 	load_32 s1, 12(s24)
   2887c:	78 40 00 a8 	load_32 s3, 16(s24)
   28880:	21 00 50 c0 	add_i s1, s1, s0
   28884:	43 00 51 c0 	add_i s2, s3, s2
   28888:	00 00 fc c0 	move s0, s24
   2888c:	1a fe ff f9 	call -1944 <P_TryMove>
   28890:	c0 f1 ff f3 	bz s0, -456 <P_SlideMove+0x8c>
   28894:	0e 00 00 f6 	b 56 <P_SlideMove+0x290>
   28898:	38 30 00 a8 	load_32 s1, 12(s24)
   2889c:	18 40 00 a8 	load_32 s0, 16(s24)
   288a0:	58 30 01 a8 	load_32 s2, 76(s24)
   288a4:	42 00 50 c0 	add_i s2, s2, s0
   288a8:	00 00 fc c0 	move s0, s24
   288ac:	12 fe ff f9 	call -1976 <P_TryMove>
   288b0:	e0 00 00 f4 	bnz s0, 28 <P_SlideMove+0x290>
   288b4:	18 30 00 a8 	load_32 s0, 12(s24)
   288b8:	38 20 01 a8 	load_32 s1, 72(s24)
   288bc:	58 40 00 a8 	load_32 s2, 16(s24)
   288c0:	21 00 50 c0 	add_i s1, s1, s0
   288c4:	00 00 fc c0 	move s0, s24
   288c8:	0b fe ff f9 	call -2004 <P_TryMove>
   288cc:	fe b3 01 a8 	load_32 ra, 108(sp)
   288d0:	7e c3 01 a8 	load_32 s27, 112(sp)
   288d4:	5e d3 01 a8 	load_32 s26, 116(sp)
   288d8:	3e e3 01 a8 	load_32 s25, 120(sp)
   288dc:	1e f3 01 a8 	load_32 s24, 124(sp)
   288e0:	de 03 02 05 	add_i sp, sp, 128
   288e4:	1f 00 00 f0 	ret

00000000000288e8 PTR_AimTraverse:
   288e8:	de 03 ff 05 	add_i sp, sp, -64
   288ec:	1e f3 00 88 	store_32 s24, 60(sp)
   288f0:	3e e3 00 88 	store_32 s25, 56(sp)
   288f4:	5e d3 00 88 	store_32 s26, 52(sp)
   288f8:	7e c3 00 88 	store_32 s27, 48(sp)
   288fc:	fe b3 00 88 	store_32 ra, 44(sp)
   28900:	40 03 f0 c0 	move s26, s0
   28904:	1a 10 00 a8 	load_32 s0, 4(s26)
   28908:	a0 06 00 f2 	bz s0, 212 <PTR_AimTraverse+0xf4>
   2890c:	3a 23 00 a8 	load_32 s25, 8(s26)
   28910:	00 03 00 0f 	move s24, 0
   28914:	19 40 00 a0 	load_u8 s0, 16(s25)
   28918:	00 10 00 01 	and s0, s0, 4
   2891c:	40 10 00 f2 	bz s0, 520 <PTR_AimTraverse+0x23c>
   28920:	00 80 fc c0 	move s0, s25
   28924:	ce 04 00 f8 	call 4920 <P_LineOpening>
   28928:	1b 04 00 4f 	movehi s0, 59
   2892c:	3b 04 00 4f 	movehi s1, 59
   28930:	60 a3 45 00 	or s27, s0, 4456
   28934:	41 c0 45 00 	or s2, s1, 4464
   28938:	1b 00 00 a8 	load_32 s0, (s27)
   2893c:	22 00 00 a8 	load_32 s1, (s2)
   28940:	00 80 30 c1 	cmpge_i s0, s0, s1
   28944:	00 0f 00 f4 	bnz s0, 480 <PTR_AimTraverse+0x23c>
   28948:	1b 04 00 4f 	movehi s0, 59
   2894c:	5e a0 00 88 	store_32 s2, 40(sp)
   28950:	00 f0 2a 00 	or s0, s0, 2748
   28954:	00 00 00 a8 	load_32 s0, (s0)
   28958:	3a 00 00 a8 	load_32 s1, (s26)
   2895c:	76 cd ff f9 	call -51752 <FixedMul>
   28960:	39 c0 00 a8 	load_32 s1, 48(s25)
   28964:	21 00 00 a8 	load_32 s1, (s1)
   28968:	59 d0 00 a8 	load_32 s2, 52(s25)
   2896c:	42 00 00 a8 	load_32 s2, (s2)
   28970:	00 03 f0 c0 	move s24, s0
   28974:	21 00 01 c1 	cmpeq_i s1, s1, s2
   28978:	c1 01 00 f4 	bnz s1, 56 <PTR_AimTraverse+0xc8>
   2897c:	1b 04 00 4f 	movehi s0, 59
   28980:	3b 00 00 a8 	load_32 s1, (s27)
   28984:	00 f0 2b 00 	or s0, s0, 2812
   28988:	00 00 00 a8 	load_32 s0, (s0)
   2898c:	01 00 60 c0 	sub_i s0, s1, s0
   28990:	20 00 fc c0 	move s1, s24
   28994:	6e cd ff f9 	call -51784 <FixedDiv>
   28998:	3b 04 00 4f 	movehi s1, 59
   2899c:	21 d0 4b 00 	or s1, s1, 4852
   289a0:	41 00 00 a8 	load_32 s2, (s1)
   289a4:	40 00 51 c1 	cmple_i s2, s0, s2
   289a8:	42 00 00 f4 	bnz s2, 8 <PTR_AimTraverse+0xc8>
   289ac:	01 00 00 88 	store_32 s0, (s1)
   289b0:	19 c0 00 a8 	load_32 s0, 48(s25)
   289b4:	00 10 00 a8 	load_32 s0, 4(s0)
   289b8:	39 d0 00 a8 	load_32 s1, 52(s25)
   289bc:	21 10 00 a8 	load_32 s1, 4(s1)
   289c0:	00 80 10 c1 	cmpne_i s0, s0, s1
   289c4:	3e a0 00 a8 	load_32 s1, 40(sp)
   289c8:	80 08 00 f4 	bnz s0, 272 <PTR_AimTraverse+0x1f0>
   289cc:	1b 04 00 4f 	movehi s0, 59
   289d0:	00 70 4c 00 	or s0, s0, 4892
   289d4:	20 00 00 a8 	load_32 s1, (s0)
   289d8:	4e 00 00 f6 	b 312 <PTR_AimTraverse+0x228>
   289dc:	1b 04 00 4f 	movehi s0, 59
   289e0:	7a 23 00 a8 	load_32 s27, 8(s26)
   289e4:	00 07 00 0f 	move s24, 1
   289e8:	00 e0 2b 00 	or s0, s0, 2808
   289ec:	00 00 00 a8 	load_32 s0, (s0)
   289f0:	1b 00 00 c1 	cmpeq_i s0, s27, s0
   289f4:	80 09 00 f4 	bnz s0, 304 <PTR_AimTraverse+0x23c>
   289f8:	1b a0 01 a0 	load_u8 s0, 104(s27)
   289fc:	00 10 00 01 	and s0, s0, 4
   28a00:	20 09 00 f2 	bz s0, 292 <PTR_AimTraverse+0x23c>
   28a04:	1b 04 00 4f 	movehi s0, 59
   28a08:	00 f0 2a 00 	or s0, s0, 2748
   28a0c:	00 00 00 a8 	load_32 s0, (s0)
   28a10:	3a 00 00 a8 	load_32 s1, (s26)
   28a14:	48 cd ff f9 	call -51936 <FixedMul>
   28a18:	3b 04 00 4f 	movehi s1, 59
   28a1c:	5b 50 00 a8 	load_32 s2, 20(s27)
   28a20:	7b 10 01 a8 	load_32 s3, 68(s27)
   28a24:	21 f3 2b 00 	or s25, s1, 2812
   28a28:	43 00 51 c0 	add_i s2, s3, s2
   28a2c:	39 00 00 a8 	load_32 s1, (s25)
   28a30:	40 03 f0 c0 	move s26, s0
   28a34:	02 80 60 c0 	sub_i s0, s2, s1
   28a38:	20 00 fd c0 	move s1, s26
   28a3c:	44 cd ff f9 	call -51952 <FixedDiv>
   28a40:	3b 04 00 4f 	movehi s1, 59
   28a44:	41 d0 4b 00 	or s2, s1, 4852
   28a48:	22 00 00 a8 	load_32 s1, (s2)
   28a4c:	20 80 40 c1 	cmplt_i s1, s0, s1
   28a50:	a1 06 00 f4 	bnz s1, 212 <PTR_AimTraverse+0x23c>
   28a54:	1e 90 00 88 	store_32 s0, 36(sp)
   28a58:	5e a0 00 88 	store_32 s2, 40(sp)
   28a5c:	1b 50 00 a8 	load_32 s0, 20(s27)
   28a60:	39 00 00 a8 	load_32 s1, (s25)
   28a64:	00 80 60 c0 	sub_i s0, s0, s1
   28a68:	20 00 fd c0 	move s1, s26
   28a6c:	38 cd ff f9 	call -52000 <FixedDiv>
   28a70:	3b 04 00 4f 	movehi s1, 59
   28a74:	21 70 4c 00 	or s1, s1, 4892
   28a78:	21 00 00 a8 	load_32 s1, (s1)
   28a7c:	40 80 20 c1 	cmpgt_i s2, s0, s1
   28a80:	22 05 00 f4 	bnz s2, 164 <PTR_AimTraverse+0x23c>
   28a84:	7e 90 00 a8 	load_32 s3, 36(sp)
   28a88:	43 80 20 c1 	cmpgt_i s2, s3, s1
   28a8c:	42 00 00 f4 	bnz s2, 8 <PTR_AimTraverse+0x1ac>
   28a90:	20 80 f1 c0 	move s1, s3
   28a94:	5e a0 00 a8 	load_32 s2, 40(sp)
   28a98:	42 00 00 a8 	load_32 s2, (s2)
   28a9c:	60 00 41 c1 	cmplt_i s3, s0, s2
   28aa0:	43 00 00 f4 	bnz s3, 8 <PTR_AimTraverse+0x1c0>
   28aa4:	40 00 f0 c0 	move s2, s0
   28aa8:	02 80 50 c0 	add_i s0, s2, s1
   28aac:	5b 04 00 4f 	movehi s2, 59
   28ab0:	7b 04 00 4f 	movehi s3, 59
   28ab4:	20 7c 00 0a 	shr s1, s0, 31
   28ab8:	00 80 50 c0 	add_i s0, s0, s1
   28abc:	22 e0 2a 00 	or s1, s2, 2744
   28ac0:	00 03 00 0f 	move s24, 0
   28ac4:	43 90 2b 00 	or s2, s3, 2788
   28ac8:	00 04 00 09 	ashr s0, s0, 1
   28acc:	01 00 00 88 	store_32 s0, (s1)
   28ad0:	62 03 00 88 	store_32 s27, (s2)
   28ad4:	14 00 00 f6 	b 80 <PTR_AimTraverse+0x23c>
   28ad8:	1b 04 00 4f 	movehi s0, 59
   28adc:	21 00 00 a8 	load_32 s1, (s1)
   28ae0:	00 f0 2b 00 	or s0, s0, 2812
   28ae4:	00 00 00 a8 	load_32 s0, (s0)
   28ae8:	01 00 60 c0 	sub_i s0, s1, s0
   28aec:	20 00 fc c0 	move s1, s24
   28af0:	17 cd ff f9 	call -52132 <FixedDiv>
   28af4:	3b 04 00 4f 	movehi s1, 59
   28af8:	41 70 4c 00 	or s2, s1, 4892
   28afc:	22 00 00 a8 	load_32 s1, (s2)
   28b00:	60 80 30 c1 	cmpge_i s3, s0, s1
   28b04:	63 00 00 f4 	bnz s3, 12 <PTR_AimTraverse+0x228>
   28b08:	02 00 00 88 	store_32 s0, (s2)
   28b0c:	20 00 f0 c0 	move s1, s0
   28b10:	1b 04 00 4f 	movehi s0, 59
   28b14:	00 d0 4b 00 	or s0, s0, 4852
   28b18:	00 00 00 a8 	load_32 s0, (s0)
   28b1c:	01 00 20 c1 	cmpgt_i s0, s1, s0
   28b20:	00 07 00 01 	and s24, s0, 1
   28b24:	00 00 fc c0 	move s0, s24
   28b28:	fe b3 00 a8 	load_32 ra, 44(sp)
   28b2c:	7e c3 00 a8 	load_32 s27, 48(sp)
   28b30:	5e d3 00 a8 	load_32 s26, 52(sp)
   28b34:	3e e3 00 a8 	load_32 s25, 56(sp)
   28b38:	1e f3 00 a8 	load_32 s24, 60(sp)
   28b3c:	de 03 01 05 	add_i sp, sp, 64
   28b40:	1f 00 00 f0 	ret

0000000000028b44 PTR_ShootTraverse:
   28b44:	de 03 ff 05 	add_i sp, sp, -64
   28b48:	1e f3 00 88 	store_32 s24, 60(sp)
   28b4c:	3e e3 00 88 	store_32 s25, 56(sp)
   28b50:	5e d3 00 88 	store_32 s26, 52(sp)
   28b54:	7e c3 00 88 	store_32 s27, 48(sp)
   28b58:	fe b3 00 88 	store_32 ra, 44(sp)
   28b5c:	00 03 f0 c0 	move s24, s0
   28b60:	18 10 00 a8 	load_32 s0, 4(s24)
   28b64:	c0 09 00 f2 	bz s0, 312 <PTR_ShootTraverse+0x158>
   28b68:	38 23 00 a8 	load_32 s25, 8(s24)
   28b6c:	19 48 00 a4 	load_u16 s0, 18(s25)
   28b70:	c0 00 00 f2 	bz s0, 24 <PTR_ShootTraverse+0x44>
   28b74:	1b 04 00 4f 	movehi s0, 59
   28b78:	00 e0 2b 00 	or s0, s0, 2808
   28b7c:	00 00 00 a8 	load_32 s0, (s0)
   28b80:	20 80 fc c0 	move s1, s25
   28b84:	03 1f 00 f8 	call 31756 <P_ShootSpecialLine>
   28b88:	19 40 00 a0 	load_u8 s0, 16(s25)
   28b8c:	00 10 00 01 	and s0, s0, 4
   28b90:	40 00 00 f2 	bz s0, 8 <PTR_ShootTraverse+0x54>
   28b94:	a1 00 00 f6 	b 644 <PTR_ShootTraverse+0x2d4>
   28b98:	1b 04 00 4f 	movehi s0, 59
   28b9c:	18 03 00 a8 	load_32 s24, (s24)
   28ba0:	60 f3 2a 00 	or s27, s0, 2748
   28ba4:	00 04 00 4f 	movehi s0, 32
   28ba8:	3b 00 00 a8 	load_32 s1, (s27)
   28bac:	e8 cc ff f9 	call -52320 <FixedDiv>
   28bb0:	3b 04 00 4f 	movehi s1, 59
   28bb4:	3e a3 00 88 	store_32 s25, 40(sp)
   28bb8:	58 03 60 c0 	sub_i s26, s24, s0
   28bbc:	21 e3 45 00 	or s25, s1, 4472
   28bc0:	19 00 00 a8 	load_32 s0, (s25)
   28bc4:	1e 90 00 88 	store_32 s0, 36(sp)
   28bc8:	19 20 00 a8 	load_32 s0, 8(s25)
   28bcc:	20 00 fd c0 	move s1, s26
   28bd0:	d9 cc ff f9 	call -52380 <FixedMul>
   28bd4:	1e 80 00 88 	store_32 s0, 32(sp)
   28bd8:	19 10 00 a8 	load_32 s0, 4(s25)
   28bdc:	1e 70 00 88 	store_32 s0, 28(sp)
   28be0:	19 30 00 a8 	load_32 s0, 12(s25)
   28be4:	20 00 fd c0 	move s1, s26
   28be8:	d3 cc ff f9 	call -52404 <FixedMul>
   28bec:	3b 04 00 4f 	movehi s1, 59
   28bf0:	1e 60 00 88 	store_32 s0, 24(sp)
   28bf4:	5b 04 00 4f 	movehi s2, 59
   28bf8:	21 f0 2b 00 	or s1, s1, 2812
   28bfc:	42 e0 2a 00 	or s2, s2, 2744
   28c00:	21 03 00 a8 	load_32 s25, (s1)
   28c04:	02 03 00 a8 	load_32 s24, (s2)
   28c08:	3b 00 00 a8 	load_32 s1, (s27)
   28c0c:	00 00 fd c0 	move s0, s26
   28c10:	c9 cc ff f9 	call -52444 <FixedMul>
   28c14:	20 00 f0 c0 	move s1, s0
   28c18:	00 00 fc c0 	move s0, s24
   28c1c:	c6 cc ff f9 	call -52456 <FixedMul>
   28c20:	5e a0 00 a8 	load_32 s2, 40(sp)
   28c24:	32 08 00 4f 	movehi s1, 82
   28c28:	62 c0 00 a8 	load_32 s3, 48(s2)
   28c2c:	41 70 4b 00 	or s2, s1, 4828
   28c30:	23 28 00 a6 	load_s16 s1, 10(s3)
   28c34:	42 00 00 a8 	load_32 s2, (s2)
   28c38:	be a0 00 a8 	load_32 s5, 40(sp)
   28c3c:	82 80 10 c1 	cmpne_i s4, s2, s1
   28c40:	40 80 5c c0 	add_i s2, s0, s25
   28c44:	a4 01 00 f4 	bnz s4, 52 <PTR_ShootTraverse+0x134>
   28c48:	03 10 00 a8 	load_32 s0, 4(s3)
   28c4c:	40 03 00 0f 	move s26, 0
   28c50:	02 00 20 c1 	cmpgt_i s0, s2, s0
   28c54:	00 16 00 f4 	bnz s0, 704 <PTR_ShootTraverse+0x3d0>
   28c58:	05 d0 00 a8 	load_32 s0, 52(s5)
   28c5c:	e0 00 00 f2 	bz s0, 28 <PTR_ShootTraverse+0x134>
   28c60:	67 00 00 4f 	movehi s3, 7
   28c64:	00 28 00 a4 	load_u16 s0, 10(s0)
   28c68:	63 fc 7f 00 	or s3, s3, 8191
   28c6c:	21 80 11 c0 	and s1, s1, s3
   28c70:	01 00 00 c1 	cmpeq_i s0, s1, s0
   28c74:	00 15 00 f4 	bnz s0, 672 <PTR_ShootTraverse+0x3d0>
   28c78:	1e 90 00 a8 	load_32 s0, 36(sp)
   28c7c:	3e 80 00 a8 	load_32 s1, 32(sp)
   28c80:	01 00 50 c0 	add_i s0, s1, s0
   28c84:	3e 70 00 a8 	load_32 s1, 28(sp)
   28c88:	7e 60 00 a8 	load_32 s3, 24(sp)
   28c8c:	23 80 50 c0 	add_i s1, s3, s1
   28c90:	c2 29 00 f8 	call 42760 <P_SpawnPuff>
   28c94:	40 03 00 0f 	move s26, 0
   28c98:	9f 00 00 f6 	b 636 <PTR_ShootTraverse+0x3d0>
   28c9c:	1b 04 00 4f 	movehi s0, 59
   28ca0:	38 23 00 a8 	load_32 s25, 8(s24)
   28ca4:	40 07 00 0f 	move s26, 1
   28ca8:	20 e0 2b 00 	or s1, s0, 2808
   28cac:	01 00 00 a8 	load_32 s0, (s1)
   28cb0:	19 00 00 c1 	cmpeq_i s0, s25, s0
   28cb4:	00 13 00 f4 	bnz s0, 608 <PTR_ShootTraverse+0x3d0>
   28cb8:	19 a0 01 a0 	load_u8 s0, 104(s25)
   28cbc:	00 10 00 01 	and s0, s0, 4
   28cc0:	a0 12 00 f2 	bz s0, 596 <PTR_ShootTraverse+0x3d0>
   28cc4:	1b 04 00 4f 	movehi s0, 59
   28cc8:	3e 80 00 88 	store_32 s1, 32(sp)
   28ccc:	00 f0 2a 00 	or s0, s0, 2748
   28cd0:	1e 90 00 88 	store_32 s0, 36(sp)
   28cd4:	00 00 00 a8 	load_32 s0, (s0)
   28cd8:	38 00 00 a8 	load_32 s1, (s24)
   28cdc:	96 cc ff f9 	call -52648 <FixedMul>
   28ce0:	3b 04 00 4f 	movehi s1, 59
   28ce4:	59 50 00 a8 	load_32 s2, 20(s25)
   28ce8:	79 10 01 a8 	load_32 s3, 68(s25)
   28cec:	21 f0 2b 00 	or s1, s1, 2812
   28cf0:	3e a0 00 88 	store_32 s1, 40(sp)
   28cf4:	43 00 51 c0 	add_i s2, s3, s2
   28cf8:	21 00 00 a8 	load_32 s1, (s1)
   28cfc:	60 03 f0 c0 	move s27, s0
   28d00:	02 80 60 c0 	sub_i s0, s2, s1
   28d04:	20 80 fd c0 	move s1, s27
   28d08:	91 cc ff f9 	call -52668 <FixedDiv>
   28d0c:	3b 04 00 4f 	movehi s1, 59
   28d10:	41 e0 2a 00 	or s2, s1, 2744
   28d14:	22 00 00 a8 	load_32 s1, (s2)
   28d18:	00 80 40 c1 	cmplt_i s0, s0, s1
   28d1c:	c0 0f 00 f4 	bnz s0, 504 <PTR_ShootTraverse+0x3d0>
   28d20:	19 50 00 a8 	load_32 s0, 20(s25)
   28d24:	3e a0 00 a8 	load_32 s1, 40(sp)
   28d28:	21 00 00 a8 	load_32 s1, (s1)
   28d2c:	00 80 60 c0 	sub_i s0, s0, s1
   28d30:	20 80 fd c0 	move s1, s27
   28d34:	60 03 f1 c0 	move s27, s2
   28d38:	85 cc ff f9 	call -52716 <FixedDiv>
   28d3c:	40 80 fd c0 	move s2, s27
   28d40:	22 00 00 a8 	load_32 s1, (s2)
   28d44:	00 80 20 c1 	cmpgt_i s0, s0, s1
   28d48:	60 0e 00 f4 	bnz s0, 460 <PTR_ShootTraverse+0x3d0>
   28d4c:	58 03 00 a8 	load_32 s26, (s24)
   28d50:	1e 90 00 a8 	load_32 s0, 36(sp)
   28d54:	20 00 00 a8 	load_32 s1, (s0)
   28d58:	10 08 00 4f 	movehi s0, 80
   28d5c:	5e 70 00 88 	store_32 s2, 28(sp)
   28d60:	7b cc ff f9 	call -52756 <FixedDiv>
   28d64:	3b 04 00 4f 	movehi s1, 59
   28d68:	5a 03 60 c0 	sub_i s26, s26, s0
   28d6c:	61 e3 45 00 	or s27, s1, 4472
   28d70:	1b 00 00 a8 	load_32 s0, (s27)
   28d74:	1e 60 00 88 	store_32 s0, 24(sp)
   28d78:	1b 20 00 a8 	load_32 s0, 8(s27)
   28d7c:	20 00 fd c0 	move s1, s26
   28d80:	6d cc ff f9 	call -52812 <FixedMul>
   28d84:	3e 60 00 a8 	load_32 s1, 24(sp)
   28d88:	00 80 50 c0 	add_i s0, s0, s1
   28d8c:	1e 50 00 88 	store_32 s0, 20(sp)
   28d90:	1b 10 00 a8 	load_32 s0, 4(s27)
   28d94:	1e 60 00 88 	store_32 s0, 24(sp)
   28d98:	1b 30 00 a8 	load_32 s0, 12(s27)
   28d9c:	20 00 fd c0 	move s1, s26
   28da0:	65 cc ff f9 	call -52844 <FixedMul>
   28da4:	3e 60 00 a8 	load_32 s1, 24(sp)
   28da8:	00 80 50 c0 	add_i s0, s0, s1
   28dac:	1e 60 00 88 	store_32 s0, 24(sp)
   28db0:	1e a0 00 a8 	load_32 s0, 40(sp)
   28db4:	00 00 00 a8 	load_32 s0, (s0)
   28db8:	1e a0 00 88 	store_32 s0, 40(sp)
   28dbc:	1e 70 00 a8 	load_32 s0, 28(sp)
   28dc0:	60 03 00 a8 	load_32 s27, (s0)
   28dc4:	1e 90 00 a8 	load_32 s0, 36(sp)
   28dc8:	20 00 00 a8 	load_32 s1, (s0)
   28dcc:	00 00 fd c0 	move s0, s26
   28dd0:	59 cc ff f9 	call -52892 <FixedMul>
   28dd4:	20 00 f0 c0 	move s1, s0
   28dd8:	00 80 fd c0 	move s0, s27
   28ddc:	56 cc ff f9 	call -52904 <FixedMul>
   28de0:	38 20 00 a8 	load_32 s1, 8(s24)
   28de4:	21 a8 01 a0 	load_u8 s1, 106(s1)
   28de8:	5e a0 00 a8 	load_32 s2, 40(sp)
   28dec:	21 20 00 01 	and s1, s1, 8
   28df0:	40 00 51 c0 	add_i s2, s0, s2
   28df4:	41 00 00 f2 	bz s1, 8 <PTR_ShootTraverse+0x2b8>
   28df8:	3a 00 00 f6 	b 232 <PTR_ShootTraverse+0x39c>
   28dfc:	1b 04 00 4f 	movehi s0, 59
   28e00:	00 80 2b 00 	or s0, s0, 2784
   28e04:	60 00 00 a8 	load_32 s3, (s0)
   28e08:	1e 50 00 a8 	load_32 s0, 20(sp)
   28e0c:	3e 60 00 a8 	load_32 s1, 24(sp)
   28e10:	90 29 00 f8 	call 42560 <P_SpawnBlood>
   28e14:	36 00 00 f6 	b 216 <PTR_ShootTraverse+0x3a8>
   28e18:	00 80 fc c0 	move s0, s25
   28e1c:	90 03 00 f8 	call 3648 <P_LineOpening>
   28e20:	1b 04 00 4f 	movehi s0, 59
   28e24:	00 f0 2a 00 	or s0, s0, 2748
   28e28:	00 00 00 a8 	load_32 s0, (s0)
   28e2c:	38 00 00 a8 	load_32 s1, (s24)
   28e30:	41 cc ff f9 	call -52988 <FixedMul>
   28e34:	39 c0 00 a8 	load_32 s1, 48(s25)
   28e38:	61 00 00 a8 	load_32 s3, (s1)
   28e3c:	59 d0 00 a8 	load_32 s2, 52(s25)
   28e40:	82 00 00 a8 	load_32 s4, (s2)
   28e44:	60 03 f0 c0 	move s27, s0
   28e48:	63 00 02 c1 	cmpeq_i s3, s3, s4
   28e4c:	23 02 00 f4 	bnz s3, 68 <PTR_ShootTraverse+0x34c>
   28e50:	1b 04 00 4f 	movehi s0, 59
   28e54:	3b 04 00 4f 	movehi s1, 59
   28e58:	00 a0 45 00 	or s0, s0, 4456
   28e5c:	21 f0 2b 00 	or s1, s1, 2812
   28e60:	00 00 00 a8 	load_32 s0, (s0)
   28e64:	21 00 00 a8 	load_32 s1, (s1)
   28e68:	00 80 60 c0 	sub_i s0, s0, s1
   28e6c:	20 80 fd c0 	move s1, s27
   28e70:	37 cc ff f9 	call -53028 <FixedDiv>
   28e74:	3b 04 00 4f 	movehi s1, 59
   28e78:	21 e0 2a 00 	or s1, s1, 2744
   28e7c:	21 00 00 a8 	load_32 s1, (s1)
   28e80:	00 80 20 c1 	cmpgt_i s0, s0, s1
   28e84:	a0 e8 ff f5 	bnz s0, -748 <PTR_ShootTraverse+0x54>
   28e88:	39 c0 00 a8 	load_32 s1, 48(s25)
   28e8c:	59 d0 00 a8 	load_32 s2, 52(s25)
   28e90:	01 10 00 a8 	load_32 s0, 4(s1)
   28e94:	40 07 00 0f 	move s26, 1
   28e98:	22 10 00 a8 	load_32 s1, 4(s2)
   28e9c:	00 80 00 c1 	cmpeq_i s0, s0, s1
   28ea0:	a0 03 00 f4 	bnz s0, 116 <PTR_ShootTraverse+0x3d0>
   28ea4:	1b 04 00 4f 	movehi s0, 59
   28ea8:	3b 04 00 4f 	movehi s1, 59
   28eac:	00 c0 45 00 	or s0, s0, 4464
   28eb0:	21 f0 2b 00 	or s1, s1, 2812
   28eb4:	00 00 00 a8 	load_32 s0, (s0)
   28eb8:	21 00 00 a8 	load_32 s1, (s1)
   28ebc:	00 80 60 c0 	sub_i s0, s0, s1
   28ec0:	20 80 fd c0 	move s1, s27
   28ec4:	22 cc ff f9 	call -53112 <FixedDiv>
   28ec8:	3b 04 00 4f 	movehi s1, 59
   28ecc:	21 e0 2a 00 	or s1, s1, 2744
   28ed0:	21 00 00 a8 	load_32 s1, (s1)
   28ed4:	00 80 30 c1 	cmpge_i s0, s0, s1
   28ed8:	e0 01 00 f4 	bnz s0, 60 <PTR_ShootTraverse+0x3d0>
   28edc:	2f ff ff f7 	b -836 <PTR_ShootTraverse+0x54>
   28ee0:	1e 50 00 a8 	load_32 s0, 20(sp)
   28ee4:	3e 60 00 a8 	load_32 s1, 24(sp)
   28ee8:	2c 29 00 f8 	call 42160 <P_SpawnPuff>
   28eec:	1b 04 00 4f 	movehi s0, 59
   28ef0:	40 03 00 0f 	move s26, 0
   28ef4:	00 80 2b 00 	or s0, s0, 2784
   28ef8:	60 00 00 a8 	load_32 s3, (s0)
   28efc:	c3 00 00 f2 	bz s3, 24 <PTR_ShootTraverse+0x3d0>
   28f00:	1e 80 00 a8 	load_32 s0, 32(sp)
   28f04:	20 00 00 a8 	load_32 s1, (s0)
   28f08:	00 80 fc c0 	move s0, s25
   28f0c:	40 80 f0 c0 	move s2, s1
   28f10:	60 f7 ff f9 	call -8832 <P_DamageMobj>
   28f14:	00 00 fd c0 	move s0, s26
   28f18:	fe b3 00 a8 	load_32 ra, 44(sp)
   28f1c:	7e c3 00 a8 	load_32 s27, 48(sp)
   28f20:	5e d3 00 a8 	load_32 s26, 52(sp)
   28f24:	3e e3 00 a8 	load_32 s25, 56(sp)
   28f28:	1e f3 00 a8 	load_32 s24, 60(sp)
   28f2c:	de 03 01 05 	add_i sp, sp, 64
   28f30:	1f 00 00 f0 	ret

0000000000028f34 P_AimLineAttack:
   28f34:	de 03 ff 05 	add_i sp, sp, -64
   28f38:	1e f3 00 88 	store_32 s24, 60(sp)
   28f3c:	3e e3 00 88 	store_32 s25, 56(sp)
   28f40:	fe d3 00 88 	store_32 ra, 52(sp)
   28f44:	7b 04 00 4f 	movehi s3, 59
   28f48:	94 04 00 4f 	movehi s4, 52
   28f4c:	a3 00 00 4f 	movehi s5, 3
   28f50:	63 e0 2b 00 	or s3, s3, 2808
   28f54:	84 40 19 00 	or s4, s4, 1616
   28f58:	21 44 00 0a 	shr s1, s1, 17
   28f5c:	03 00 00 88 	store_32 s0, (s3)
   28f60:	a5 f0 7f 00 	or s5, s5, 8188
   28f64:	c0 30 00 a8 	load_32 s6, 12(s0)
   28f68:	e2 40 00 09 	ashr s7, s2, 16
   28f6c:	64 00 00 a8 	load_32 s3, (s4)
   28f70:	8d 04 00 4f 	movehi s4, 45
   28f74:	21 80 12 c0 	and s1, s1, s5
   28f78:	1b 05 00 4f 	movehi s8, 59
   28f7c:	84 90 41 00 	or s4, s4, 4196
   28f80:	63 80 50 c0 	add_i s3, s3, s1
   28f84:	00 03 00 0f 	move s24, 0
   28f88:	84 80 50 c0 	add_i s4, s4, s1
   28f8c:	63 00 00 a8 	load_32 s3, (s3)
   28f90:	20 40 00 a8 	load_32 s1, 16(s0)
   28f94:	84 00 00 a8 	load_32 s4, (s4)
   28f98:	a0 50 00 a8 	load_32 s5, 20(s0)
   28f9c:	00 10 01 a8 	load_32 s0, 68(s0)
   28fa0:	63 80 73 c0 	mull_i s3, s3, s7
   28fa4:	84 80 73 c0 	mull_i s4, s4, s7
   28fa8:	e0 08 00 4f 	movehi s7, 64
   28fac:	00 04 00 09 	ashr s0, s0, 1
   28fb0:	05 00 50 c0 	add_i s0, s5, s0
   28fb4:	bb 04 00 4f 	movehi s5, 59
   28fb8:	00 80 53 c0 	add_i s0, s0, s7
   28fbc:	a5 f0 2b 00 	or s5, s5, 2812
   28fc0:	e3 00 53 c0 	add_i s7, s3, s6
   28fc4:	7b 04 00 4f 	movehi s3, 59
   28fc8:	05 00 00 88 	store_32 s0, (s5)
   28fcc:	08 70 4c 00 	or s0, s8, 4892
   28fd0:	a5 00 00 4f 	movehi s5, 5
   28fd4:	a0 00 00 88 	store_32 s5, (s0)
   28fd8:	03 d0 4b 00 	or s0, s3, 4852
   28fdc:	bb 04 00 4f 	movehi s5, 59
   28fe0:	7b fc ff 4f 	movehi s3, 524283
   28fe4:	60 00 00 88 	store_32 s3, (s0)
   28fe8:	1b 04 00 4f 	movehi s0, 59
   28fec:	a5 f0 2a 00 	or s5, s5, 2748
   28ff0:	64 80 50 c0 	add_i s3, s4, s1
   28ff4:	20 93 2b 00 	or s25, s0, 2788
   28ff8:	14 00 00 4f 	movehi s0, 20
   28ffc:	45 00 00 88 	store_32 s2, (s5)
   29000:	80 0c 00 0f 	move s4, 3
   29004:	19 03 00 88 	store_32 s24, (s25)
   29008:	a0 a0 23 00 	or s5, s0, 2280
   2900c:	00 00 f3 c0 	move s0, s6
   29010:	40 80 f3 c0 	move s2, s7
   29014:	90 06 00 f8 	call 6720 <P_PathTraverse>
   29018:	1b 04 00 4f 	movehi s0, 59
   2901c:	39 00 00 a8 	load_32 s1, (s25)
   29020:	00 e0 2a 00 	or s0, s0, 2744
   29024:	21 00 00 10 	cmpeq_i s1, s1, 0
   29028:	00 00 00 a8 	load_32 s0, (s0)
   2902c:	41 00 00 f4 	bnz s1, 8 <P_AimLineAttack+0x100>
   29030:	00 03 f0 c0 	move s24, s0
   29034:	00 00 fc c0 	move s0, s24
   29038:	fe d3 00 a8 	load_32 ra, 52(sp)
   2903c:	3e e3 00 a8 	load_32 s25, 56(sp)
   29040:	1e f3 00 a8 	load_32 s24, 60(sp)
   29044:	de 03 01 05 	add_i sp, sp, 64
   29048:	1f 00 00 f0 	ret

000000000002904c P_LineAttack:
   2904c:	de 03 ff 05 	add_i sp, sp, -64
   29050:	fe f3 00 88 	store_32 ra, 60(sp)
   29054:	bb 04 00 4f 	movehi s5, 59
   29058:	fb 04 00 4f 	movehi s7, 59
   2905c:	14 05 00 4f 	movehi s8, 52
   29060:	a5 e0 2b 00 	or s5, s5, 2808
   29064:	e7 80 2b 00 	or s7, s7, 2784
   29068:	c3 00 00 4f 	movehi s6, 3
   2906c:	05 00 00 88 	store_32 s0, (s5)
   29070:	a8 40 19 00 	or s5, s8, 1616
   29074:	87 00 00 88 	store_32 s4, (s7)
   29078:	21 44 00 0a 	shr s1, s1, 17
   2907c:	00 31 00 a8 	load_32 s8, 12(s0)
   29080:	c6 f0 7f 00 	or s6, s6, 8188
   29084:	85 00 00 a8 	load_32 s4, (s5)
   29088:	ad 04 00 4f 	movehi s5, 45
   2908c:	21 00 13 c0 	and s1, s1, s6
   29090:	fb 04 00 4f 	movehi s7, 59
   29094:	a5 90 41 00 	or s5, s5, 4196
   29098:	84 80 50 c0 	add_i s4, s4, s1
   2909c:	47 f1 2b 00 	or s10, s7, 2812
   290a0:	a5 80 50 c0 	add_i s5, s5, s1
   290a4:	84 00 00 a8 	load_32 s4, (s4)
   290a8:	22 41 00 09 	ashr s9, s2, 16
   290ac:	20 40 00 a8 	load_32 s1, 16(s0)
   290b0:	a5 00 00 a8 	load_32 s5, (s5)
   290b4:	c0 50 00 a8 	load_32 s6, 20(s0)
   290b8:	00 10 01 a8 	load_32 s0, 68(s0)
   290bc:	84 80 74 c0 	mull_i s4, s4, s9
   290c0:	a5 80 74 c0 	mull_i s5, s5, s9
   290c4:	e4 00 54 c0 	add_i s7, s4, s8
   290c8:	00 04 00 09 	ashr s0, s0, 1
   290cc:	06 00 50 c0 	add_i s0, s6, s0
   290d0:	c0 08 00 4f 	movehi s6, 64
   290d4:	9b 04 00 4f 	movehi s4, 59
   290d8:	00 00 53 c0 	add_i s0, s0, s6
   290dc:	0a 00 00 88 	store_32 s0, (s10)
   290e0:	1b 04 00 4f 	movehi s0, 59
   290e4:	84 e0 2a 00 	or s4, s4, 2744
   290e8:	c5 80 50 c0 	add_i s6, s5, s1
   290ec:	00 f0 2a 00 	or s0, s0, 2748
   290f0:	40 00 00 88 	store_32 s2, (s0)
   290f4:	14 00 00 4f 	movehi s0, 20
   290f8:	64 00 00 88 	store_32 s3, (s4)
   290fc:	80 0c 00 0f 	move s4, 3
   29100:	a0 10 2d 00 	or s5, s0, 2884
   29104:	00 00 f4 c0 	move s0, s8
   29108:	40 80 f3 c0 	move s2, s7
   2910c:	60 00 f3 c0 	move s3, s6
   29110:	51 06 00 f8 	call 6468 <P_PathTraverse>
   29114:	fe f3 00 a8 	load_32 ra, 60(sp)
   29118:	de 03 01 05 	add_i sp, sp, 64
   2911c:	1f 00 00 f0 	ret

0000000000029120 PTR_UseTraverse:
   29120:	de 03 ff 05 	add_i sp, sp, -64
   29124:	1e f3 00 88 	store_32 s24, 60(sp)
   29128:	3e e3 00 88 	store_32 s25, 56(sp)
   2912c:	fe d3 00 88 	store_32 ra, 52(sp)
   29130:	00 03 f0 c0 	move s24, s0
   29134:	58 20 00 a8 	load_32 s2, 8(s24)
   29138:	02 48 00 a4 	load_u16 s0, 18(s2)
   2913c:	40 00 00 f4 	bnz s0, 8 <PTR_UseTraverse+0x24>
   29140:	0e 00 00 f6 	b 56 <PTR_UseTraverse+0x58>
   29144:	1b 04 00 4f 	movehi s0, 59
   29148:	20 63 2d 00 	or s25, s0, 2904
   2914c:	39 00 00 a8 	load_32 s1, (s25)
   29150:	01 30 00 a8 	load_32 s0, 12(s1)
   29154:	21 40 00 a8 	load_32 s1, 16(s1)
   29158:	66 01 00 f8 	call 1432 <P_PointOnLineSide>
   2915c:	00 04 00 10 	cmpeq_i s0, s0, 1
   29160:	40 04 00 01 	and s2, s0, 1
   29164:	19 00 00 a8 	load_32 s0, (s25)
   29168:	38 20 00 a8 	load_32 s1, 8(s24)
   2916c:	fe 21 00 f8 	call 34808 <P_UseSpecialLine>
   29170:	00 00 00 0f 	move s0, 0
   29174:	0a 00 00 f6 	b 40 <PTR_UseTraverse+0x7c>
   29178:	00 00 f1 c0 	move s0, s2
   2917c:	b8 02 00 f8 	call 2784 <P_LineOpening>
   29180:	1b 04 00 4f 	movehi s0, 59
   29184:	00 b0 45 00 	or s0, s0, 4460
   29188:	00 00 00 a8 	load_32 s0, (s0)
   2918c:	00 00 00 12 	cmpgt_i s0, s0, 0
   29190:	40 00 00 f4 	bnz s0, 8 <PTR_UseTraverse+0x78>
   29194:	07 00 00 f6 	b 28 <PTR_UseTraverse+0x90>
   29198:	00 04 00 0f 	move s0, 1
   2919c:	fe d3 00 a8 	load_32 ra, 52(sp)
   291a0:	3e e3 00 a8 	load_32 s25, 56(sp)
   291a4:	1e f3 00 a8 	load_32 s24, 60(sp)
   291a8:	de 03 01 05 	add_i sp, sp, 64
   291ac:	1f 00 00 f0 	ret
   291b0:	1b 04 00 4f 	movehi s0, 59
   291b4:	20 44 01 0f 	move s1, 81
   291b8:	00 60 2d 00 	or s0, s0, 2904
   291bc:	00 00 00 a8 	load_32 s0, (s0)
   291c0:	89 8c 00 f8 	call 143908 <S_StartSound>
   291c4:	eb ff ff f7 	b -84 <PTR_UseTraverse+0x50>

00000000000291c8 P_UseLines:
   291c8:	de 03 ff 05 	add_i sp, sp, -64
   291cc:	fe f3 00 88 	store_32 ra, 60(sp)
   291d0:	3b 04 00 4f 	movehi s1, 59
   291d4:	40 00 00 a8 	load_32 s2, (s0)
   291d8:	74 04 00 4f 	movehi s3, 52
   291dc:	ad 04 00 4f 	movehi s5, 45
   291e0:	21 60 2d 00 	or s1, s1, 2904
   291e4:	63 40 19 00 	or s3, s3, 1616
   291e8:	83 00 00 4f 	movehi s4, 3
   291ec:	41 00 00 88 	store_32 s2, (s1)
   291f0:	a5 90 41 00 	or s5, s5, 4196
   291f4:	20 00 00 a8 	load_32 s1, (s0)
   291f8:	84 f0 7f 00 	or s4, s4, 8188
   291fc:	01 80 00 a8 	load_32 s0, 32(s1)
   29200:	40 44 00 0a 	shr s2, s0, 17
   29204:	01 30 00 a8 	load_32 s0, 12(s1)
   29208:	21 40 00 a8 	load_32 s1, 16(s1)
   2920c:	63 00 00 a8 	load_32 s3, (s3)
   29210:	42 00 12 c0 	and s2, s2, s4
   29214:	63 00 51 c0 	add_i s3, s3, s2
   29218:	45 00 51 c0 	add_i s2, s5, s2
   2921c:	63 00 00 a8 	load_32 s3, (s3)
   29220:	42 00 00 a8 	load_32 s2, (s2)
   29224:	63 18 00 0b 	shl s3, s3, 6
   29228:	82 18 00 0b 	shl s4, s2, 6
   2922c:	43 00 50 c0 	add_i s2, s3, s0
   29230:	64 80 50 c0 	add_i s3, s4, s1
   29234:	94 00 00 4f 	movehi s4, 20
   29238:	a4 80 44 00 	or s5, s4, 4384
   2923c:	80 04 00 0f 	move s4, 1
   29240:	05 06 00 f8 	call 6164 <P_PathTraverse>
   29244:	fe f3 00 a8 	load_32 ra, 60(sp)
   29248:	de 03 01 05 	add_i sp, sp, 64
   2924c:	1f 00 00 f0 	ret

0000000000029250 PIT_RadiusAttack:
   29250:	de 03 ff 05 	add_i sp, sp, -64
   29254:	1e f3 00 88 	store_32 s24, 60(sp)
   29258:	3e e3 00 88 	store_32 s25, 56(sp)
   2925c:	5e d3 00 88 	store_32 s26, 52(sp)
   29260:	7e c3 00 88 	store_32 s27, 48(sp)
   29264:	fe b3 00 88 	store_32 ra, 44(sp)
   29268:	00 03 f0 c0 	move s24, s0
   2926c:	18 a0 01 a0 	load_u8 s0, 104(s24)
   29270:	00 10 00 01 	and s0, s0, 4
   29274:	20 06 00 f2 	bz s0, 196 <PIT_RadiusAttack+0xe8>
   29278:	18 60 01 a8 	load_32 s0, 88(s24)
   2927c:	20 4c 00 10 	cmpeq_i s1, s0, 19
   29280:	c1 05 00 f4 	bnz s1, 184 <PIT_RadiusAttack+0xe8>
   29284:	00 54 00 10 	cmpeq_i s0, s0, 21
   29288:	80 05 00 f4 	bnz s0, 176 <PIT_RadiusAttack+0xe8>
   2928c:	1b 04 00 4f 	movehi s0, 59
   29290:	60 08 00 0f 	move s3, 2
   29294:	20 43 2b 00 	or s25, s0, 2768
   29298:	39 00 00 a8 	load_32 s1, (s25)
   2929c:	18 40 00 a8 	load_32 s0, 16(s24)
   292a0:	58 30 00 a8 	load_32 s2, 12(s24)
   292a4:	81 40 00 a8 	load_32 s4, 16(s1)
   292a8:	a1 30 00 a8 	load_32 s5, 12(s1)
   292ac:	00 00 f1 c4 	move v0, s2
   292b0:	00 0c f0 c8 	move_mask v0, s3, s0
   292b4:	20 80 f2 c4 	move v1, s5
   292b8:	20 0c f2 c8 	move_mask v1, s3, s4
   292bc:	00 80 60 d0 	sub_i v0, v0, v1
   292c0:	20 7c 00 29 	ashr v1, v0, 31
   292c4:	00 80 50 d0 	add_i v0, v0, v1
   292c8:	00 80 30 d0 	xor v0, v0, v1
   292cc:	00 00 00 3a 	getlane s0, v0, 0
   292d0:	40 04 00 3a 	getlane s2, v0, 1
   292d4:	60 00 61 c1 	cmpgt_u s3, s0, s2
   292d8:	43 00 00 f4 	bnz s3, 8 <PIT_RadiusAttack+0x90>
   292dc:	00 00 f1 c0 	move s0, s2
   292e0:	58 00 01 a8 	load_32 s2, 64(s24)
   292e4:	00 00 61 c0 	sub_i s0, s0, s2
   292e8:	40 43 00 09 	ashr s26, s0, 16
   292ec:	1a 00 00 12 	cmpgt_i s0, s26, 0
   292f0:	40 00 00 f4 	bnz s0, 8 <PIT_RadiusAttack+0xa8>
   292f4:	40 03 00 0f 	move s26, 0
   292f8:	1b 04 00 4f 	movehi s0, 59
   292fc:	60 23 2b 00 	or s27, s0, 2760
   29300:	1b 00 00 a8 	load_32 s0, (s27)
   29304:	1a 00 30 c1 	cmpge_i s0, s26, s0
   29308:	80 01 00 f4 	bnz s0, 48 <PIT_RadiusAttack+0xe8>
   2930c:	00 00 fc c0 	move s0, s24
   29310:	29 1a 00 f8 	call 26788 <P_CheckSight>
   29314:	20 01 00 f2 	bz s0, 36 <PIT_RadiusAttack+0xe8>
   29318:	1b 04 00 4f 	movehi s0, 59
   2931c:	39 00 00 a8 	load_32 s1, (s25)
   29320:	00 30 2b 00 	or s0, s0, 2764
   29324:	40 00 00 a8 	load_32 s2, (s0)
   29328:	1b 00 00 a8 	load_32 s0, (s27)
   2932c:	60 00 6d c0 	sub_i s3, s0, s26
   29330:	00 00 fc c0 	move s0, s24
   29334:	57 f6 ff f9 	call -9892 <P_DamageMobj>
   29338:	fe b3 00 a8 	load_32 ra, 44(sp)
   2933c:	00 04 00 0f 	move s0, 1
   29340:	7e c3 00 a8 	load_32 s27, 48(sp)
   29344:	5e d3 00 a8 	load_32 s26, 52(sp)
   29348:	3e e3 00 a8 	load_32 s25, 56(sp)
   2934c:	1e f3 00 a8 	load_32 s24, 60(sp)
   29350:	de 03 01 05 	add_i sp, sp, 64
   29354:	1f 00 00 f0 	ret

0000000000029358 P_RadiusAttack:
   29358:	de 03 ff 05 	add_i sp, sp, -64
   2935c:	1e f3 00 88 	store_32 s24, 60(sp)
   29360:	3e e3 00 88 	store_32 s25, 56(sp)
   29364:	5e d3 00 88 	store_32 s26, 52(sp)
   29368:	7e c3 00 88 	store_32 s27, 48(sp)
   2936c:	fe b3 00 88 	store_32 ra, 44(sp)
   29370:	7b 04 00 4f 	movehi s3, 59
   29374:	c0 40 00 a8 	load_32 s6, 16(s0)
   29378:	1b 05 00 4f 	movehi s8, 59
   2937c:	bb 04 00 4f 	movehi s5, 59
   29380:	83 80 48 00 	or s4, s3, 4640
   29384:	62 40 00 0b 	shl s3, s2, 16
   29388:	08 41 2b 00 	or s8, s8, 2768
   2938c:	e4 00 00 a8 	load_32 s7, (s4)
   29390:	86 80 51 c0 	add_i s4, s6, s3
   29394:	24 81 63 c0 	sub_i s9, s4, s7
   29398:	85 70 48 00 	or s4, s5, 4636
   2939c:	a0 30 00 a8 	load_32 s5, 12(s0)
   293a0:	84 00 00 a8 	load_32 s4, (s4)
   293a4:	08 00 00 88 	store_32 s0, (s8)
   293a8:	06 80 61 c0 	sub_i s0, s6, s3
   293ac:	db 04 00 4f 	movehi s6, 59
   293b0:	09 5d 00 09 	ashr s8, s9, 23
   293b4:	00 80 63 c0 	sub_i s0, s0, s7
   293b8:	c6 30 2b 00 	or s6, s6, 2764
   293bc:	fb 04 00 4f 	movehi s7, 59
   293c0:	00 5f 00 09 	ashr s24, s0, 23
   293c4:	26 00 00 88 	store_32 s1, (s6)
   293c8:	07 20 2b 00 	or s0, s7, 2760
   293cc:	1e a1 00 88 	store_32 s8, 40(sp)
   293d0:	38 00 24 c1 	cmpgt_i s1, s24, s8
   293d4:	40 00 00 88 	store_32 s2, (s0)
   293d8:	01 03 00 f4 	bnz s1, 96 <P_RadiusAttack+0xe0>
   293dc:	05 80 61 c0 	sub_i s0, s5, s3
   293e0:	25 80 51 c0 	add_i s1, s5, s3
   293e4:	00 00 62 c0 	sub_i s0, s0, s4
   293e8:	21 00 62 c0 	sub_i s1, s1, s4
   293ec:	00 5c 00 09 	ashr s0, s0, 23
   293f0:	1e 90 00 88 	store_32 s0, 36(sp)
   293f4:	61 5f 00 09 	ashr s27, s1, 23
   293f8:	00 80 2d c1 	cmpgt_i s0, s0, s27
   293fc:	e0 01 00 f4 	bnz s0, 60 <P_RadiusAttack+0xe0>
   29400:	14 00 00 4f 	movehi s0, 20
   29404:	20 43 49 00 	or s25, s0, 4688
   29408:	5e 93 00 a8 	load_32 s26, 36(sp)
   2940c:	00 00 fd c0 	move s0, s26
   29410:	20 00 fc c0 	move s1, s24
   29414:	40 80 fc c0 	move s2, s25
   29418:	0f 03 00 f8 	call 3132 <P_BlockThingsIterator>
   2941c:	1a 80 4d c1 	cmplt_i s0, s26, s27
   29420:	5a 07 00 05 	add_i s26, s26, 1
   29424:	40 ff ff f5 	bnz s0, -24 <P_RadiusAttack+0xb4>
   29428:	1e a0 00 a8 	load_32 s0, 40(sp)
   2942c:	18 00 40 c1 	cmplt_i s0, s24, s0
   29430:	18 07 00 05 	add_i s24, s24, 1
   29434:	a0 fe ff f5 	bnz s0, -44 <P_RadiusAttack+0xb0>
   29438:	fe b3 00 a8 	load_32 ra, 44(sp)
   2943c:	7e c3 00 a8 	load_32 s27, 48(sp)
   29440:	5e d3 00 a8 	load_32 s26, 52(sp)
   29444:	3e e3 00 a8 	load_32 s25, 56(sp)
   29448:	1e f3 00 a8 	load_32 s24, 60(sp)
   2944c:	de 03 01 05 	add_i sp, sp, 64
   29450:	1f 00 00 f0 	ret

0000000000029454 PIT_ChangeSector:
   29454:	de 03 ff 05 	add_i sp, sp, -64
   29458:	1e f3 00 88 	store_32 s24, 60(sp)
   2945c:	3e e3 00 88 	store_32 s25, 56(sp)
   29460:	fe d3 00 88 	store_32 ra, 52(sp)
   29464:	00 03 f0 c0 	move s24, s0
   29468:	18 50 00 a8 	load_32 s0, 20(s24)
   2946c:	38 e0 00 a8 	load_32 s1, 56(s24)
   29470:	20 83 10 c1 	cmpne_i s25, s0, s1
   29474:	38 30 00 a8 	load_32 s1, 12(s24)
   29478:	58 40 00 a8 	load_32 s2, 16(s24)
   2947c:	00 00 fc c0 	move s0, s24
   29480:	78 fa ff f9 	call -5664 <P_CheckPosition>
   29484:	1b 04 00 4f 	movehi s0, 59
   29488:	3b 04 00 4f 	movehi s1, 59
   2948c:	00 00 2d 00 	or s0, s0, 2880
   29490:	21 d0 2c 00 	or s1, s1, 2868
   29494:	00 00 00 a8 	load_32 s0, (s0)
   29498:	18 e0 00 88 	store_32 s0, 56(s24)
   2949c:	21 00 00 a8 	load_32 s1, (s1)
   294a0:	38 f0 00 88 	store_32 s1, 60(s24)
   294a4:	f9 00 00 f4 	bnz s25, 28 <PIT_ChangeSector+0x6c>
   294a8:	18 50 00 88 	store_32 s0, 20(s24)
   294ac:	58 10 01 a8 	load_32 s2, 68(s24)
   294b0:	01 00 60 c0 	sub_i s0, s1, s0
   294b4:	00 00 31 c1 	cmpge_i s0, s0, s2
   294b8:	a0 09 00 f4 	bnz s0, 308 <PIT_ChangeSector+0x198>
   294bc:	0b 00 00 f6 	b 44 <PIT_ChangeSector+0x94>
   294c0:	78 50 00 a8 	load_32 s3, 20(s24)
   294c4:	58 10 01 a8 	load_32 s2, 68(s24)
   294c8:	62 80 51 c0 	add_i s3, s2, s3
   294cc:	63 80 50 c1 	cmple_i s3, s3, s1
   294d0:	63 00 00 f4 	bnz s3, 12 <PIT_ChangeSector+0x88>
   294d4:	61 00 61 c0 	sub_i s3, s1, s2
   294d8:	78 50 00 88 	store_32 s3, 20(s24)
   294dc:	01 00 60 c0 	sub_i s0, s1, s0
   294e0:	00 00 31 c1 	cmpge_i s0, s0, s2
   294e4:	40 08 00 f4 	bnz s0, 264 <PIT_ChangeSector+0x198>
   294e8:	18 b0 01 a8 	load_32 s0, 108(s24)
   294ec:	00 00 00 12 	cmpgt_i s0, s0, 0
   294f0:	40 00 00 f4 	bnz s0, 8 <PIT_ChangeSector+0xa4>
   294f4:	32 00 00 f6 	b 200 <PIT_ChangeSector+0x168>
   294f8:	18 a0 01 a8 	load_32 s0, 104(s24)
   294fc:	30 00 00 4f 	movehi s1, 16
   29500:	20 80 10 c0 	and s1, s0, s1
   29504:	41 00 00 f2 	bz s1, 8 <PIT_ChangeSector+0xb8>
   29508:	37 00 00 f6 	b 220 <PIT_ChangeSector+0x190>
   2950c:	00 10 00 01 	and s0, s0, 4
   29510:	e0 06 00 f2 	bz s0, 220 <PIT_ChangeSector+0x198>
   29514:	1b 04 00 4f 	movehi s0, 59
   29518:	3b 04 00 4f 	movehi s1, 59
   2951c:	40 04 00 0f 	move s2, 1
   29520:	00 a0 2b 00 	or s0, s0, 2792
   29524:	21 60 2b 00 	or s1, s1, 2776
   29528:	40 00 00 88 	store_32 s2, (s0)
   2952c:	01 00 00 a8 	load_32 s0, (s1)
   29530:	e0 05 00 f2 	bz s0, 188 <PIT_ChangeSector+0x198>
   29534:	1c 04 00 4f 	movehi s0, 60
   29538:	00 40 02 00 	or s0, s0, 144
   2953c:	00 00 00 a0 	load_u8 s0, (s0)
   29540:	00 0c 00 01 	and s0, s0, 3
   29544:	40 05 00 f4 	bnz s0, 168 <PIT_ChangeSector+0x198>
   29548:	20 00 00 0f 	move s1, 0
   2954c:	00 00 fc c0 	move s0, s24
   29550:	60 28 00 0f 	move s3, 10
   29554:	40 80 f0 c0 	move s2, s1
   29558:	ce f5 ff f9 	call -10440 <P_DamageMobj>
   2955c:	18 30 00 a8 	load_32 s0, 12(s24)
   29560:	38 40 00 a8 	load_32 s1, 16(s24)
   29564:	58 50 00 a8 	load_32 s2, 20(s24)
   29568:	78 10 01 a8 	load_32 s3, 68(s24)
   2956c:	83 7c 00 0a 	shr s4, s3, 31
   29570:	63 00 52 c0 	add_i s3, s3, s4
   29574:	63 04 00 09 	ashr s3, s3, 1
   29578:	43 00 51 c0 	add_i s2, s3, s2
   2957c:	60 98 00 0f 	move s3, 38
   29580:	52 25 00 f8 	call 38216 <P_SpawnMobj>
   29584:	00 03 f0 c0 	move s24, s0
   29588:	5b cb ff f9 	call -53908 <P_Random>
   2958c:	20 03 f0 c0 	move s25, s0
   29590:	59 cb ff f9 	call -53916 <P_Random>
   29594:	19 00 60 c0 	sub_i s0, s25, s0
   29598:	00 30 00 0b 	shl s0, s0, 12
   2959c:	18 20 01 88 	store_32 s0, 72(s24)
   295a0:	55 cb ff f9 	call -53932 <P_Random>
   295a4:	20 03 f0 c0 	move s25, s0
   295a8:	53 cb ff f9 	call -53940 <P_Random>
   295ac:	19 00 60 c0 	sub_i s0, s25, s0
   295b0:	00 30 00 0b 	shl s0, s0, 12
   295b4:	18 30 01 88 	store_32 s0, 76(s24)
   295b8:	0d 00 00 f6 	b 52 <PIT_ChangeSector+0x198>
   295bc:	20 fc 0d 0f 	move s1, 895
   295c0:	00 00 fc c0 	move s0, s24
   295c4:	15 22 00 f8 	call 34900 <P_SetMobjState>
   295c8:	18 a0 01 a8 	load_32 s0, 104(s24)
   295cc:	00 f4 ff 01 	and s0, s0, -3
   295d0:	18 a0 01 88 	store_32 s0, 104(s24)
   295d4:	00 00 00 0f 	move s0, 0
   295d8:	18 10 01 88 	store_32 s0, 68(s24)
   295dc:	18 00 01 88 	store_32 s0, 64(s24)
   295e0:	03 00 00 f6 	b 12 <PIT_ChangeSector+0x198>
   295e4:	00 00 fc c0 	move s0, s24
   295e8:	67 22 00 f8 	call 35228 <P_RemoveMobj>
   295ec:	fe d3 00 a8 	load_32 ra, 52(sp)
   295f0:	00 04 00 0f 	move s0, 1
   295f4:	3e e3 00 a8 	load_32 s25, 56(sp)
   295f8:	1e f3 00 a8 	load_32 s24, 60(sp)
   295fc:	de 03 01 05 	add_i sp, sp, 64
   29600:	1f 00 00 f0 	ret

0000000000029604 P_ChangeSector:
   29604:	de 03 ff 05 	add_i sp, sp, -64
   29608:	1e f3 00 88 	store_32 s24, 60(sp)
   2960c:	3e e3 00 88 	store_32 s25, 56(sp)
   29610:	5e d3 00 88 	store_32 s26, 52(sp)
   29614:	7e c3 00 88 	store_32 s27, 48(sp)
   29618:	fe b3 00 88 	store_32 ra, 44(sp)
   2961c:	5b 04 00 4f 	movehi s2, 59
   29620:	7b 04 00 4f 	movehi s3, 59
   29624:	00 03 f0 c0 	move s24, s0
   29628:	82 a0 2b 00 	or s4, s2, 2792
   2962c:	43 60 2b 00 	or s2, s3, 2776
   29630:	00 00 00 0f 	move s0, 0
   29634:	04 00 00 88 	store_32 s0, (s4)
   29638:	22 00 00 88 	store_32 s1, (s2)
   2963c:	38 93 00 a8 	load_32 s25, 36(s24)
   29640:	38 a0 00 a8 	load_32 s1, 40(s24)
   29644:	59 80 20 c1 	cmpgt_i s2, s25, s1
   29648:	c2 02 00 f4 	bnz s2, 88 <P_ChangeSector+0x9c>
   2964c:	54 00 00 4f 	movehi s2, 20
   29650:	9e a0 00 88 	store_32 s4, 40(sp)
   29654:	18 70 00 a8 	load_32 s0, 28(s24)
   29658:	42 53 51 00 	or s26, s2, 5204
   2965c:	78 83 00 a8 	load_32 s27, 32(s24)
   29660:	5b 00 20 c1 	cmpgt_i s2, s27, s0
   29664:	42 01 00 f4 	bnz s2, 40 <P_ChangeSector+0x88>
   29668:	00 80 fc c0 	move s0, s25
   2966c:	20 80 fd c0 	move s1, s27
   29670:	40 00 fd c0 	move s2, s26
   29674:	78 02 00 f8 	call 2528 <P_BlockThingsIterator>
   29678:	18 70 00 a8 	load_32 s0, 28(s24)
   2967c:	3b 00 40 c1 	cmplt_i s1, s27, s0
   29680:	7b 07 00 05 	add_i s27, s27, 1
   29684:	21 ff ff f5 	bnz s1, -28 <P_ChangeSector+0x64>
   29688:	38 a0 00 a8 	load_32 s1, 40(s24)
   2968c:	59 80 40 c1 	cmplt_i s2, s25, s1
   29690:	39 07 00 05 	add_i s25, s25, 1
   29694:	42 fe ff f5 	bnz s2, -56 <P_ChangeSector+0x58>
   29698:	1e a0 00 a8 	load_32 s0, 40(sp)
   2969c:	00 00 00 a8 	load_32 s0, (s0)
   296a0:	fe b3 00 a8 	load_32 ra, 44(sp)
   296a4:	7e c3 00 a8 	load_32 s27, 48(sp)
   296a8:	5e d3 00 a8 	load_32 s26, 52(sp)
   296ac:	3e e3 00 a8 	load_32 s25, 56(sp)
   296b0:	1e f3 00 a8 	load_32 s24, 60(sp)
   296b4:	de 03 01 05 	add_i sp, sp, 64
   296b8:	1f 00 00 f0 	ret

00000000000296bc P_AproxDistance:
   296bc:	40 7c 00 09 	ashr s2, s0, 31
   296c0:	61 7c 00 09 	ashr s3, s1, 31
   296c4:	00 00 51 c0 	add_i s0, s0, s2
   296c8:	21 80 51 c0 	add_i s1, s1, s3
   296cc:	00 00 31 c0 	xor s0, s0, s2
   296d0:	41 80 31 c0 	xor s2, s1, s3
   296d4:	60 00 41 c1 	cmplt_i s3, s0, s2
   296d8:	22 00 50 c0 	add_i s1, s2, s0
   296dc:	43 00 00 f4 	bnz s3, 8 <P_AproxDistance+0x28>
   296e0:	00 00 f1 c0 	move s0, s2
   296e4:	00 04 00 0a 	shr s0, s0, 1
   296e8:	01 00 60 c0 	sub_i s0, s1, s0
   296ec:	1f 00 00 f0 	ret

00000000000296f0 P_PointOnLineSide:
   296f0:	de 03 ff 05 	add_i sp, sp, -64
   296f4:	1e f3 00 88 	store_32 s24, 60(sp)
   296f8:	3e e3 00 88 	store_32 s25, 56(sp)
   296fc:	fe d3 00 88 	store_32 ra, 52(sp)
   29700:	00 03 f1 c0 	move s24, s2
   29704:	58 20 00 a8 	load_32 s2, 8(s24)
   29708:	42 00 00 f4 	bnz s2, 8 <P_PointOnLineSide+0x20>
   2970c:	13 00 00 f6 	b 76 <P_PointOnLineSide+0x68>
   29710:	78 30 00 a8 	load_32 s3, 12(s24)
   29714:	98 00 00 a8 	load_32 s4, (s24)
   29718:	43 00 00 f4 	bnz s3, 8 <P_PointOnLineSide+0x30>
   2971c:	17 00 00 f6 	b 92 <P_PointOnLineSide+0x88>
   29720:	44 00 00 a8 	load_32 s2, (s4)
   29724:	84 10 00 a8 	load_32 s4, 4(s4)
   29728:	40 00 61 c0 	sub_i s2, s0, s2
   2972c:	21 03 62 c0 	sub_i s25, s1, s4
   29730:	03 40 00 09 	ashr s0, s3, 16
   29734:	20 00 f1 c0 	move s1, s2
   29738:	ff c9 ff f9 	call -55300 <FixedMul>
   2973c:	38 20 00 a8 	load_32 s1, 8(s24)
   29740:	00 03 f0 c0 	move s24, s0
   29744:	00 80 fc c0 	move s0, s25
   29748:	21 40 00 09 	ashr s1, s1, 16
   2974c:	fa c9 ff f9 	call -55320 <FixedMul>
   29750:	00 00 3c c1 	cmpge_i s0, s0, s24
   29754:	10 00 00 f6 	b 64 <P_PointOnLineSide+0xa4>
   29758:	38 00 00 a8 	load_32 s1, (s24)
   2975c:	21 00 00 a8 	load_32 s1, (s1)
   29760:	21 00 40 c1 	cmplt_i s1, s1, s0
   29764:	18 30 00 a8 	load_32 s0, 12(s24)
   29768:	41 00 00 f4 	bnz s1, 8 <P_PointOnLineSide+0x80>
   2976c:	09 00 00 f6 	b 36 <P_PointOnLineSide+0xa0>
   29770:	00 7c 00 0a 	shr s0, s0, 31
   29774:	09 00 00 f6 	b 36 <P_PointOnLineSide+0xa8>
   29778:	04 10 00 a8 	load_32 s0, 4(s4)
   2977c:	00 80 40 c1 	cmplt_i s0, s0, s1
   29780:	40 00 00 f4 	bnz s0, 8 <P_PointOnLineSide+0x98>
   29784:	0a 00 00 f6 	b 40 <P_PointOnLineSide+0xbc>
   29788:	02 00 00 12 	cmpgt_i s0, s2, 0
   2978c:	02 00 00 f6 	b 8 <P_PointOnLineSide+0xa4>
   29790:	00 00 00 12 	cmpgt_i s0, s0, 0
   29794:	00 04 00 01 	and s0, s0, 1
   29798:	fe d3 00 a8 	load_32 ra, 52(sp)
   2979c:	3e e3 00 a8 	load_32 s25, 56(sp)
   297a0:	1e f3 00 a8 	load_32 s24, 60(sp)
   297a4:	de 03 01 05 	add_i sp, sp, 64
   297a8:	1f 00 00 f0 	ret
   297ac:	02 7c 00 0a 	shr s0, s2, 31
   297b0:	fa ff ff f7 	b -24 <P_PointOnLineSide+0xa8>

00000000000297b4 P_BoxOnLineSide:
   297b4:	de 03 ff 05 	add_i sp, sp, -64
   297b8:	1e f3 00 88 	store_32 s24, 60(sp)
   297bc:	3e e3 00 88 	store_32 s25, 56(sp)
   297c0:	5e d3 00 88 	store_32 s26, 52(sp)
   297c4:	7e c3 00 88 	store_32 s27, 48(sp)
   297c8:	fe b3 00 88 	store_32 ra, 44(sp)
   297cc:	00 83 f0 c0 	move s24, s1
   297d0:	38 b0 00 a8 	load_32 s1, 44(s24)
   297d4:	40 03 f0 c0 	move s26, s0
   297d8:	41 0c 00 16 	cmpgt_u s2, s1, 3
   297dc:	62 02 00 f4 	bnz s2, 76 <P_BoxOnLineSide+0x74>
   297e0:	03 00 00 4f 	movehi s0, 3
   297e4:	21 08 00 0b 	shl s1, s1, 2
   297e8:	00 40 44 00 	or s0, s0, 4368
   297ec:	01 00 50 c0 	add_i s0, s1, s0
   297f0:	00 00 00 a8 	load_32 s0, (s0)
   297f4:	00 00 00 f0 	b s0
   297f8:	1a 00 00 a8 	load_32 s0, (s26)
   297fc:	38 00 00 a8 	load_32 s1, (s24)
   29800:	21 10 00 a8 	load_32 s1, 4(s1)
   29804:	5a 10 00 a8 	load_32 s2, 4(s26)
   29808:	78 20 00 a8 	load_32 s3, 8(s24)
   2980c:	00 80 20 c1 	cmpgt_i s0, s0, s1
   29810:	22 80 20 c1 	cmpgt_i s1, s2, s1
   29814:	20 07 00 01 	and s25, s0, 1
   29818:	43 fc ff 12 	cmpgt_i s2, s3, -1
   2981c:	01 04 00 01 	and s0, s1, 1
   29820:	62 12 00 f4 	bnz s2, 588 <P_BoxOnLineSide+0x2b8>
   29824:	0f 00 00 f6 	b 60 <P_BoxOnLineSide+0xac>
   29828:	19 00 00 c1 	cmpeq_i s0, s25, s0
   2982c:	60 12 00 f4 	bnz s0, 588 <P_BoxOnLineSide+0x2c4>
   29830:	91 00 00 f6 	b 580 <P_BoxOnLineSide+0x2c0>
   29834:	1a 30 00 a8 	load_32 s0, 12(s26)
   29838:	38 00 00 a8 	load_32 s1, (s24)
   2983c:	21 00 00 a8 	load_32 s1, (s1)
   29840:	5a 20 00 a8 	load_32 s2, 8(s26)
   29844:	78 30 00 a8 	load_32 s3, 12(s24)
   29848:	00 80 40 c1 	cmplt_i s0, s0, s1
   2984c:	22 80 40 c1 	cmplt_i s1, s2, s1
   29850:	20 07 00 01 	and s25, s0, 1
   29854:	43 fc ff 12 	cmpgt_i s2, s3, -1
   29858:	01 04 00 01 	and s0, s1, 1
   2985c:	82 10 00 f4 	bnz s2, 528 <P_BoxOnLineSide+0x2b8>
   29860:	39 07 00 03 	xor s25, s25, 1
   29864:	00 04 00 03 	xor s0, s0, 1
   29868:	19 00 00 c1 	cmpeq_i s0, s25, s0
   2986c:	60 10 00 f4 	bnz s0, 524 <P_BoxOnLineSide+0x2c4>
   29870:	81 00 00 f6 	b 516 <P_BoxOnLineSide+0x2c0>
   29874:	3a 20 00 a8 	load_32 s1, 8(s26)
   29878:	5a 00 00 a8 	load_32 s2, (s26)
   2987c:	18 20 00 a8 	load_32 s0, 8(s24)
   29880:	40 00 00 f4 	bnz s0, 8 <P_BoxOnLineSide+0xd4>
   29884:	42 00 00 f6 	b 264 <P_BoxOnLineSide+0x1d8>
   29888:	78 30 00 a8 	load_32 s3, 12(s24)
   2988c:	98 00 00 a8 	load_32 s4, (s24)
   29890:	43 00 00 f4 	bnz s3, 8 <P_BoxOnLineSide+0xe4>
   29894:	50 00 00 f6 	b 320 <P_BoxOnLineSide+0x220>
   29898:	04 00 00 a8 	load_32 s0, (s4)
   2989c:	84 10 00 a8 	load_32 s4, 4(s4)
   298a0:	21 00 60 c0 	sub_i s1, s1, s0
   298a4:	03 40 00 09 	ashr s0, s3, 16
   298a8:	22 03 62 c0 	sub_i s25, s2, s4
   298ac:	a2 c9 ff f9 	call -55672 <FixedMul>
   298b0:	38 20 00 a8 	load_32 s1, 8(s24)
   298b4:	60 03 f0 c0 	move s27, s0
   298b8:	00 80 fc c0 	move s0, s25
   298bc:	21 40 00 09 	ashr s1, s1, 16
   298c0:	9d c9 ff f9 	call -55692 <FixedMul>
   298c4:	20 80 3d c1 	cmpge_i s1, s0, s27
   298c8:	18 20 00 a8 	load_32 s0, 8(s24)
   298cc:	21 07 00 01 	and s25, s1, 1
   298d0:	3a 30 00 a8 	load_32 s1, 12(s26)
   298d4:	40 00 00 f4 	bnz s0, 8 <P_BoxOnLineSide+0x128>
   298d8:	4e 00 00 f6 	b 312 <P_BoxOnLineSide+0x25c>
   298dc:	5a 10 00 a8 	load_32 s2, 4(s26)
   298e0:	78 30 00 a8 	load_32 s3, 12(s24)
   298e4:	98 00 00 a8 	load_32 s4, (s24)
   298e8:	43 00 00 f4 	bnz s3, 8 <P_BoxOnLineSide+0x13c>
   298ec:	5a 00 00 f6 	b 360 <P_BoxOnLineSide+0x2a0>
   298f0:	04 00 00 a8 	load_32 s0, (s4)
   298f4:	84 10 00 a8 	load_32 s4, 4(s4)
   298f8:	21 00 60 c0 	sub_i s1, s1, s0
   298fc:	03 40 00 09 	ashr s0, s3, 16
   29900:	42 03 62 c0 	sub_i s26, s2, s4
   29904:	8c c9 ff f9 	call -55760 <FixedMul>
   29908:	38 20 00 a8 	load_32 s1, 8(s24)
   2990c:	00 03 f0 c0 	move s24, s0
   29910:	00 00 fd c0 	move s0, s26
   29914:	21 40 00 09 	ashr s1, s1, 16
   29918:	87 c9 ff f9 	call -55780 <FixedMul>
   2991c:	00 00 3c c1 	cmpge_i s0, s0, s24
   29920:	52 00 00 f6 	b 328 <P_BoxOnLineSide+0x2b4>
   29924:	3a 30 00 a8 	load_32 s1, 12(s26)
   29928:	5a 00 00 a8 	load_32 s2, (s26)
   2992c:	18 20 00 a8 	load_32 s0, 8(s24)
   29930:	40 00 00 f4 	bnz s0, 8 <P_BoxOnLineSide+0x184>
   29934:	1f 00 00 f6 	b 124 <P_BoxOnLineSide+0x1fc>
   29938:	78 30 00 a8 	load_32 s3, 12(s24)
   2993c:	98 00 00 a8 	load_32 s4, (s24)
   29940:	43 00 00 f4 	bnz s3, 8 <P_BoxOnLineSide+0x194>
   29944:	29 00 00 f6 	b 164 <P_BoxOnLineSide+0x234>
   29948:	04 00 00 a8 	load_32 s0, (s4)
   2994c:	84 10 00 a8 	load_32 s4, 4(s4)
   29950:	21 00 60 c0 	sub_i s1, s1, s0
   29954:	03 40 00 09 	ashr s0, s3, 16
   29958:	22 03 62 c0 	sub_i s25, s2, s4
   2995c:	76 c9 ff f9 	call -55848 <FixedMul>
   29960:	38 20 00 a8 	load_32 s1, 8(s24)
   29964:	60 03 f0 c0 	move s27, s0
   29968:	00 80 fc c0 	move s0, s25
   2996c:	21 40 00 09 	ashr s1, s1, 16
   29970:	71 c9 ff f9 	call -55868 <FixedMul>
   29974:	20 80 3d c1 	cmpge_i s1, s0, s27
   29978:	18 20 00 a8 	load_32 s0, 8(s24)
   2997c:	21 07 00 01 	and s25, s1, 1
   29980:	3a 20 00 a8 	load_32 s1, 8(s26)
   29984:	c0 fa ff f5 	bnz s0, -168 <P_BoxOnLineSide+0x128>
   29988:	22 00 00 f6 	b 136 <P_BoxOnLineSide+0x25c>
   2998c:	18 00 00 a8 	load_32 s0, (s24)
   29990:	00 00 00 a8 	load_32 s0, (s0)
   29994:	20 80 40 c1 	cmplt_i s1, s0, s1
   29998:	18 30 00 a8 	load_32 s0, 12(s24)
   2999c:	01 03 00 f4 	bnz s1, 96 <P_BoxOnLineSide+0x248>
   299a0:	00 00 00 12 	cmpgt_i s0, s0, 0
   299a4:	3a 30 00 a8 	load_32 s1, 12(s26)
   299a8:	20 07 00 01 	and s25, s0, 1
   299ac:	19 00 00 f6 	b 100 <P_BoxOnLineSide+0x25c>
   299b0:	18 00 00 a8 	load_32 s0, (s24)
   299b4:	00 00 00 a8 	load_32 s0, (s0)
   299b8:	20 80 40 c1 	cmplt_i s1, s0, s1
   299bc:	18 30 00 a8 	load_32 s0, 12(s24)
   299c0:	41 02 00 f4 	bnz s1, 72 <P_BoxOnLineSide+0x254>
   299c4:	00 00 00 12 	cmpgt_i s0, s0, 0
   299c8:	3a 20 00 a8 	load_32 s1, 8(s26)
   299cc:	20 07 00 01 	and s25, s0, 1
   299d0:	10 00 00 f6 	b 64 <P_BoxOnLineSide+0x25c>
   299d4:	24 10 00 a8 	load_32 s1, 4(s4)
   299d8:	21 00 41 c1 	cmplt_i s1, s1, s2
   299dc:	e1 02 00 f4 	bnz s1, 92 <P_BoxOnLineSide+0x284>
   299e0:	20 7f 00 0a 	shr s25, s0, 31
   299e4:	17 00 00 f6 	b 92 <P_BoxOnLineSide+0x28c>
   299e8:	24 10 00 a8 	load_32 s1, 4(s4)
   299ec:	21 00 41 c1 	cmplt_i s1, s1, s2
   299f0:	41 05 00 f4 	bnz s1, 168 <P_BoxOnLineSide+0x2e4>
   299f4:	20 7f 00 0a 	shr s25, s0, 31
   299f8:	2a 00 00 f6 	b 168 <P_BoxOnLineSide+0x2ec>
   299fc:	20 7f 00 0a 	shr s25, s0, 31
   29a00:	3a 30 00 a8 	load_32 s1, 12(s26)
   29a04:	03 00 00 f6 	b 12 <P_BoxOnLineSide+0x25c>
   29a08:	20 7f 00 0a 	shr s25, s0, 31
   29a0c:	3a 20 00 a8 	load_32 s1, 8(s26)
   29a10:	18 00 00 a8 	load_32 s0, (s24)
   29a14:	00 00 00 a8 	load_32 s0, (s0)
   29a18:	20 80 40 c1 	cmplt_i s1, s0, s1
   29a1c:	18 30 00 a8 	load_32 s0, 12(s24)
   29a20:	41 00 00 f4 	bnz s1, 8 <P_BoxOnLineSide+0x274>
   29a24:	10 00 00 f6 	b 64 <P_BoxOnLineSide+0x2b0>
   29a28:	00 7c 00 0a 	shr s0, s0, 31
   29a2c:	19 00 00 c1 	cmpeq_i s0, s25, s0
   29a30:	40 02 00 f4 	bnz s0, 72 <P_BoxOnLineSide+0x2c4>
   29a34:	10 00 00 f6 	b 64 <P_BoxOnLineSide+0x2c0>
   29a38:	20 00 00 12 	cmpgt_i s1, s0, 0
   29a3c:	21 07 00 01 	and s25, s1, 1
   29a40:	3a 30 00 a8 	load_32 s1, 12(s26)
   29a44:	5a 10 00 a8 	load_32 s2, 4(s26)
   29a48:	78 30 00 a8 	load_32 s3, 12(s24)
   29a4c:	98 00 00 a8 	load_32 s4, (s24)
   29a50:	03 f5 ff f5 	bnz s3, -352 <P_BoxOnLineSide+0x13c>
   29a54:	24 10 00 a8 	load_32 s1, 4(s4)
   29a58:	21 00 41 c1 	cmplt_i s1, s1, s2
   29a5c:	41 00 00 f4 	bnz s1, 8 <P_BoxOnLineSide+0x2b0>
   29a60:	f2 ff ff f7 	b -56 <P_BoxOnLineSide+0x274>
   29a64:	00 00 00 12 	cmpgt_i s0, s0, 0
   29a68:	00 04 00 01 	and s0, s0, 1
   29a6c:	19 00 00 c1 	cmpeq_i s0, s25, s0
   29a70:	40 00 00 f4 	bnz s0, 8 <P_BoxOnLineSide+0x2c4>
   29a74:	20 ff ff 0f 	move s25, -1
   29a78:	00 80 fc c0 	move s0, s25
   29a7c:	fe b3 00 a8 	load_32 ra, 44(sp)
   29a80:	7e c3 00 a8 	load_32 s27, 48(sp)
   29a84:	5e d3 00 a8 	load_32 s26, 52(sp)
   29a88:	3e e3 00 a8 	load_32 s25, 56(sp)
   29a8c:	1e f3 00 a8 	load_32 s24, 60(sp)
   29a90:	de 03 01 05 	add_i sp, sp, 64
   29a94:	1f 00 00 f0 	ret
   29a98:	20 00 00 12 	cmpgt_i s1, s0, 0
   29a9c:	21 07 00 01 	and s25, s1, 1
   29aa0:	3a 20 00 a8 	load_32 s1, 8(s26)
   29aa4:	5a 10 00 a8 	load_32 s2, 4(s26)
   29aa8:	78 30 00 a8 	load_32 s3, 12(s24)
   29aac:	98 00 00 a8 	load_32 s4, (s24)
   29ab0:	03 f2 ff f5 	bnz s3, -448 <P_BoxOnLineSide+0x13c>
   29ab4:	e8 ff ff f7 	b -96 <P_BoxOnLineSide+0x2a0>

0000000000029ab8 P_PointOnDivlineSide:
   29ab8:	de 03 ff 05 	add_i sp, sp, -64
   29abc:	1e f3 00 88 	store_32 s24, 60(sp)
   29ac0:	3e e3 00 88 	store_32 s25, 56(sp)
   29ac4:	fe d3 00 88 	store_32 ra, 52(sp)
   29ac8:	00 03 f1 c0 	move s24, s2
   29acc:	58 20 00 a8 	load_32 s2, 8(s24)
   29ad0:	42 00 00 f4 	bnz s2, 8 <P_PointOnDivlineSide+0x20>
   29ad4:	18 00 00 f6 	b 96 <P_PointOnDivlineSide+0x7c>
   29ad8:	78 30 00 a8 	load_32 s3, 12(s24)
   29adc:	43 00 00 f4 	bnz s3, 8 <P_PointOnDivlineSide+0x2c>
   29ae0:	1c 00 00 f6 	b 112 <P_PointOnDivlineSide+0x98>
   29ae4:	98 00 00 a8 	load_32 s4, (s24)
   29ae8:	b8 10 00 a8 	load_32 s5, 4(s24)
   29aec:	80 00 62 c0 	sub_i s4, s0, s4
   29af0:	21 83 62 c0 	sub_i s25, s1, s5
   29af4:	04 80 31 c0 	xor s0, s4, s3
   29af8:	40 00 31 c0 	xor s2, s0, s2
   29afc:	22 80 3c c0 	xor s1, s2, s25
   29b00:	21 fc ff 12 	cmpgt_i s1, s1, -1
   29b04:	41 00 00 f4 	bnz s1, 8 <P_PointOnDivlineSide+0x54>
   29b08:	10 00 00 f6 	b 64 <P_PointOnDivlineSide+0x90>
   29b0c:	03 20 00 09 	ashr s0, s3, 8
   29b10:	24 20 00 09 	ashr s1, s4, 8
   29b14:	08 c9 ff f9 	call -56288 <FixedMul>
   29b18:	38 20 00 a8 	load_32 s1, 8(s24)
   29b1c:	00 03 f0 c0 	move s24, s0
   29b20:	19 20 00 09 	ashr s0, s25, 8
   29b24:	21 20 00 09 	ashr s1, s1, 8
   29b28:	03 c9 ff f9 	call -56308 <FixedMul>
   29b2c:	00 00 3c c1 	cmpge_i s0, s0, s24
   29b30:	0f 00 00 f6 	b 60 <P_PointOnDivlineSide+0xb4>
   29b34:	38 00 00 a8 	load_32 s1, (s24)
   29b38:	21 00 40 c1 	cmplt_i s1, s1, s0
   29b3c:	18 30 00 a8 	load_32 s0, 12(s24)
   29b40:	41 00 00 f4 	bnz s1, 8 <P_PointOnDivlineSide+0x90>
   29b44:	09 00 00 f6 	b 36 <P_PointOnDivlineSide+0xb0>
   29b48:	00 7c 00 0a 	shr s0, s0, 31
   29b4c:	09 00 00 f6 	b 36 <P_PointOnDivlineSide+0xb8>
   29b50:	18 10 00 a8 	load_32 s0, 4(s24)
   29b54:	00 80 40 c1 	cmplt_i s0, s0, s1
   29b58:	40 00 00 f4 	bnz s0, 8 <P_PointOnDivlineSide+0xa8>
   29b5c:	0a 00 00 f6 	b 40 <P_PointOnDivlineSide+0xcc>
   29b60:	02 00 00 12 	cmpgt_i s0, s2, 0
   29b64:	02 00 00 f6 	b 8 <P_PointOnDivlineSide+0xb4>
   29b68:	00 00 00 12 	cmpgt_i s0, s0, 0
   29b6c:	00 04 00 01 	and s0, s0, 1
   29b70:	fe d3 00 a8 	load_32 ra, 52(sp)
   29b74:	3e e3 00 a8 	load_32 s25, 56(sp)
   29b78:	1e f3 00 a8 	load_32 s24, 60(sp)
   29b7c:	de 03 01 05 	add_i sp, sp, 64
   29b80:	1f 00 00 f0 	ret
   29b84:	02 7c 00 0a 	shr s0, s2, 31
   29b88:	fa ff ff f7 	b -24 <P_PointOnDivlineSide+0xb8>

0000000000029b8c P_MakeDivline:
   29b8c:	40 00 00 a8 	load_32 s2, (s0)
   29b90:	62 00 00 a8 	load_32 s3, (s2)
   29b94:	61 00 00 88 	store_32 s3, (s1)
   29b98:	42 10 00 a8 	load_32 s2, 4(s2)
   29b9c:	41 10 00 88 	store_32 s2, 4(s1)
   29ba0:	40 20 00 a8 	load_32 s2, 8(s0)
   29ba4:	41 20 00 88 	store_32 s2, 8(s1)
   29ba8:	00 30 00 a8 	load_32 s0, 12(s0)
   29bac:	01 30 00 88 	store_32 s0, 12(s1)
   29bb0:	1f 00 00 f0 	ret

0000000000029bb4 P_InterceptVector:
   29bb4:	de 03 ff 05 	add_i sp, sp, -64
   29bb8:	1e f3 00 88 	store_32 s24, 60(sp)
   29bbc:	3e e3 00 88 	store_32 s25, 56(sp)
   29bc0:	5e d3 00 88 	store_32 s26, 52(sp)
   29bc4:	fe c3 00 88 	store_32 ra, 48(sp)
   29bc8:	00 83 f0 c0 	move s24, s1
   29bcc:	38 30 00 a8 	load_32 s1, 12(s24)
   29bd0:	20 03 f0 c0 	move s25, s0
   29bd4:	01 20 00 09 	ashr s0, s1, 8
   29bd8:	39 20 00 a8 	load_32 s1, 8(s25)
   29bdc:	d6 c8 ff f9 	call -56488 <FixedMul>
   29be0:	38 20 00 a8 	load_32 s1, 8(s24)
   29be4:	40 03 f0 c0 	move s26, s0
   29be8:	01 20 00 09 	ashr s0, s1, 8
   29bec:	39 30 00 a8 	load_32 s1, 12(s25)
   29bf0:	d1 c8 ff f9 	call -56508 <FixedMul>
   29bf4:	5a 03 60 c0 	sub_i s26, s26, s0
   29bf8:	5a 02 00 f2 	bz s26, 72 <P_InterceptVector+0x8c>
   29bfc:	18 00 00 a8 	load_32 s0, (s24)
   29c00:	39 00 00 a8 	load_32 s1, (s25)
   29c04:	00 80 60 c0 	sub_i s0, s0, s1
   29c08:	38 30 00 a8 	load_32 s1, 12(s24)
   29c0c:	00 20 00 09 	ashr s0, s0, 8
   29c10:	c9 c8 ff f9 	call -56540 <FixedMul>
   29c14:	39 10 00 a8 	load_32 s1, 4(s25)
   29c18:	58 10 00 a8 	load_32 s2, 4(s24)
   29c1c:	20 03 f0 c0 	move s25, s0
   29c20:	21 00 61 c0 	sub_i s1, s1, s2
   29c24:	01 20 00 09 	ashr s0, s1, 8
   29c28:	38 20 00 a8 	load_32 s1, 8(s24)
   29c2c:	c2 c8 ff f9 	call -56568 <FixedMul>
   29c30:	00 80 5c c0 	add_i s0, s0, s25
   29c34:	20 00 fd c0 	move s1, s26
   29c38:	c5 c8 ff f9 	call -56556 <FixedDiv>
   29c3c:	02 00 00 f6 	b 8 <P_InterceptVector+0x90>
   29c40:	00 00 00 0f 	move s0, 0
   29c44:	fe c3 00 a8 	load_32 ra, 48(sp)
   29c48:	5e d3 00 a8 	load_32 s26, 52(sp)
   29c4c:	3e e3 00 a8 	load_32 s25, 56(sp)
   29c50:	1e f3 00 a8 	load_32 s24, 60(sp)
   29c54:	de 03 01 05 	add_i sp, sp, 64
   29c58:	1f 00 00 f0 	ret

0000000000029c5c P_LineOpening:
   29c5c:	47 00 00 4f 	movehi s2, 7
   29c60:	20 60 00 a4 	load_u16 s1, 24(s0)
   29c64:	42 fc 7f 00 	or s2, s2, 8191
   29c68:	21 00 01 c1 	cmpeq_i s1, s1, s2
   29c6c:	c1 03 00 f4 	bnz s1, 120 <P_LineOpening+0x88>
   29c70:	40 c0 00 a8 	load_32 s2, 48(s0)
   29c74:	20 d0 00 a8 	load_32 s1, 52(s0)
   29c78:	02 10 00 a8 	load_32 s0, 4(s2)
   29c7c:	61 10 00 a8 	load_32 s3, 4(s1)
   29c80:	80 80 41 c1 	cmplt_i s4, s0, s3
   29c84:	44 00 00 f4 	bnz s4, 8 <P_LineOpening+0x30>
   29c88:	00 80 f1 c0 	move s0, s3
   29c8c:	7b 04 00 4f 	movehi s3, 59
   29c90:	63 c0 45 00 	or s3, s3, 4464
   29c94:	03 00 00 88 	store_32 s0, (s3)
   29c98:	62 00 00 a8 	load_32 s3, (s2)
   29c9c:	a1 00 00 a8 	load_32 s5, (s1)
   29ca0:	83 80 22 c1 	cmpgt_i s4, s3, s5
   29ca4:	44 00 00 f4 	bnz s4, 8 <P_LineOpening+0x50>
   29ca8:	60 80 f2 c0 	move s3, s5
   29cac:	bb 04 00 4f 	movehi s5, 59
   29cb0:	a5 a0 45 00 	or s5, s5, 4456
   29cb4:	65 00 00 88 	store_32 s3, (s5)
   29cb8:	44 00 00 f4 	bnz s4, 8 <P_LineOpening+0x64>
   29cbc:	20 00 f1 c0 	move s1, s2
   29cc0:	5b 04 00 4f 	movehi s2, 59
   29cc4:	21 00 00 a8 	load_32 s1, (s1)
   29cc8:	00 80 61 c0 	sub_i s0, s0, s3
   29ccc:	42 90 45 00 	or s2, s2, 4452
   29cd0:	22 00 00 88 	store_32 s1, (s2)
   29cd4:	3b 04 00 4f 	movehi s1, 59
   29cd8:	21 b0 45 00 	or s1, s1, 4460
   29cdc:	01 00 00 88 	store_32 s0, (s1)
   29ce0:	1f 00 00 f0 	ret
   29ce4:	00 00 00 0f 	move s0, 0
   29ce8:	3b 04 00 4f 	movehi s1, 59
   29cec:	21 b0 45 00 	or s1, s1, 4460
   29cf0:	01 00 00 88 	store_32 s0, (s1)
   29cf4:	1f 00 00 f0 	ret

0000000000029cf8 P_UnsetThingPosition:
   29cf8:	20 a0 01 a8 	load_32 s1, 104(s0)
   29cfc:	41 20 00 01 	and s2, s1, 8
   29d00:	a2 01 00 f4 	bnz s2, 52 <P_UnsetThingPosition+0x3c>
   29d04:	40 60 00 a8 	load_32 s2, 24(s0)
   29d08:	62 00 00 f2 	bz s2, 12 <P_UnsetThingPosition+0x1c>
   29d0c:	60 70 00 a8 	load_32 s3, 28(s0)
   29d10:	62 70 00 88 	store_32 s3, 28(s2)
   29d14:	60 70 00 a8 	load_32 s3, 28(s0)
   29d18:	63 00 00 f2 	bz s3, 12 <P_UnsetThingPosition+0x2c>
   29d1c:	63 60 00 05 	add_i s3, s3, 24
   29d20:	04 00 00 f6 	b 16 <P_UnsetThingPosition+0x38>
   29d24:	60 d0 00 a8 	load_32 s3, 52(s0)
   29d28:	63 00 00 a8 	load_32 s3, (s3)
   29d2c:	63 20 01 05 	add_i s3, s3, 72
   29d30:	43 00 00 88 	store_32 s2, (s3)
   29d34:	21 40 00 01 	and s1, s1, 16
   29d38:	61 05 00 f4 	bnz s1, 172 <P_UnsetThingPosition+0xec>
   29d3c:	20 b0 00 a8 	load_32 s1, 44(s0)
   29d40:	61 00 00 f2 	bz s1, 12 <P_UnsetThingPosition+0x54>
   29d44:	40 c0 00 a8 	load_32 s2, 48(s0)
   29d48:	41 c0 00 88 	store_32 s2, 48(s1)
   29d4c:	40 c0 00 a8 	load_32 s2, 48(s0)
   29d50:	62 00 00 f2 	bz s2, 12 <P_UnsetThingPosition+0x64>
   29d54:	22 b0 00 88 	store_32 s1, 44(s2)
   29d58:	1f 00 00 f0 	ret
   29d5c:	5b 04 00 4f 	movehi s2, 59
   29d60:	60 30 00 a8 	load_32 s3, 12(s0)
   29d64:	9b 04 00 4f 	movehi s4, 59
   29d68:	42 70 48 00 	or s2, s2, 4636
   29d6c:	42 00 00 a8 	load_32 s2, (s2)
   29d70:	00 40 00 a8 	load_32 s0, 16(s0)
   29d74:	43 00 61 c0 	sub_i s2, s3, s2
   29d78:	64 80 48 00 	or s3, s4, 4640
   29d7c:	82 00 00 14 	cmplt_i s4, s2, 0
   29d80:	63 00 00 a8 	load_32 s3, (s3)
   29d84:	04 03 00 f4 	bnz s4, 96 <P_UnsetThingPosition+0xec>
   29d88:	9b 04 00 4f 	movehi s4, 59
   29d8c:	bb 04 00 4f 	movehi s5, 59
   29d90:	60 80 61 c0 	sub_i s3, s0, s3
   29d94:	84 90 48 00 	or s4, s4, 4644
   29d98:	a5 60 48 00 	or s5, s5, 4632
   29d9c:	c3 00 00 14 	cmplt_i s6, s3, 0
   29da0:	04 00 00 a8 	load_32 s0, (s4)
   29da4:	85 00 00 a8 	load_32 s4, (s5)
   29da8:	e6 01 00 f4 	bnz s6, 60 <P_UnsetThingPosition+0xec>
   29dac:	42 5c 00 09 	ashr s2, s2, 23
   29db0:	a2 00 30 c1 	cmpge_i s5, s2, s0
   29db4:	85 01 00 f4 	bnz s5, 48 <P_UnsetThingPosition+0xec>
   29db8:	63 5c 00 09 	ashr s3, s3, 23
   29dbc:	83 00 32 c1 	cmpge_i s4, s3, s4
   29dc0:	24 01 00 f4 	bnz s4, 36 <P_UnsetThingPosition+0xec>
   29dc4:	9b 04 00 4f 	movehi s4, 59
   29dc8:	00 80 71 c0 	mull_i s0, s0, s3
   29dcc:	84 30 48 00 	or s4, s4, 4620
   29dd0:	00 00 51 c0 	add_i s0, s0, s2
   29dd4:	64 00 00 a8 	load_32 s3, (s4)
   29dd8:	00 08 00 0b 	shl s0, s0, 2
   29ddc:	03 00 50 c0 	add_i s0, s3, s0
   29de0:	20 00 00 88 	store_32 s1, (s0)
   29de4:	1f 00 00 f0 	ret

0000000000029de8 P_SetThingPosition:
   29de8:	de 03 ff 05 	add_i sp, sp, -64
   29dec:	1e f3 00 88 	store_32 s24, 60(sp)
   29df0:	fe e3 00 88 	store_32 ra, 56(sp)
   29df4:	00 03 f0 c0 	move s24, s0
   29df8:	18 30 00 a8 	load_32 s0, 12(s24)
   29dfc:	38 40 00 a8 	load_32 s1, 16(s24)
   29e00:	2b 40 00 f8 	call 65708 <R_PointInSubsector>
   29e04:	18 d0 00 88 	store_32 s0, 52(s24)
   29e08:	38 a0 01 a8 	load_32 s1, 104(s24)
   29e0c:	41 20 00 01 	and s2, s1, 8
   29e10:	42 00 00 f4 	bnz s2, 8 <P_SetThingPosition+0x30>
   29e14:	08 00 00 f6 	b 32 <P_SetThingPosition+0x4c>
   29e18:	01 40 00 01 	and s0, s1, 16
   29e1c:	40 00 00 f4 	bnz s0, 8 <P_SetThingPosition+0x3c>
   29e20:	0f 00 00 f6 	b 60 <P_SetThingPosition+0x74>
   29e24:	fe e3 00 a8 	load_32 ra, 56(sp)
   29e28:	1e f3 00 a8 	load_32 s24, 60(sp)
   29e2c:	de 03 01 05 	add_i sp, sp, 64
   29e30:	1f 00 00 f0 	ret
   29e34:	00 00 00 a8 	load_32 s0, (s0)
   29e38:	40 00 00 0f 	move s2, 0
   29e3c:	58 70 00 88 	store_32 s2, 28(s24)
   29e40:	40 20 01 a8 	load_32 s2, 72(s0)
   29e44:	58 60 00 88 	store_32 s2, 24(s24)
   29e48:	42 00 00 f2 	bz s2, 8 <P_SetThingPosition+0x68>
   29e4c:	02 73 00 88 	store_32 s24, 28(s2)
   29e50:	00 23 01 88 	store_32 s24, 72(s0)
   29e54:	01 40 00 01 	and s0, s1, 16
   29e58:	60 fe ff f5 	bnz s0, -52 <P_SetThingPosition+0x3c>
   29e5c:	1b 04 00 4f 	movehi s0, 59
   29e60:	38 30 00 a8 	load_32 s1, 12(s24)
   29e64:	5b 04 00 4f 	movehi s2, 59
   29e68:	00 70 48 00 	or s0, s0, 4636
   29e6c:	42 80 48 00 	or s2, s2, 4640
   29e70:	00 00 00 a8 	load_32 s0, (s0)
   29e74:	21 00 60 c0 	sub_i s1, s1, s0
   29e78:	18 40 00 a8 	load_32 s0, 16(s24)
   29e7c:	42 00 00 a8 	load_32 s2, (s2)
   29e80:	61 00 00 14 	cmplt_i s3, s1, 0
   29e84:	63 04 00 f4 	bnz s3, 140 <P_SetThingPosition+0x128>
   29e88:	7b 04 00 4f 	movehi s3, 59
   29e8c:	9b 04 00 4f 	movehi s4, 59
   29e90:	40 00 61 c0 	sub_i s2, s0, s2
   29e94:	63 90 48 00 	or s3, s3, 4644
   29e98:	84 60 48 00 	or s4, s4, 4632
   29e9c:	a2 00 00 14 	cmplt_i s5, s2, 0
   29ea0:	03 00 00 a8 	load_32 s0, (s3)
   29ea4:	64 00 00 a8 	load_32 s3, (s4)
   29ea8:	45 03 00 f4 	bnz s5, 104 <P_SetThingPosition+0x128>
   29eac:	21 5c 00 09 	ashr s1, s1, 23
   29eb0:	81 00 30 c1 	cmpge_i s4, s1, s0
   29eb4:	e4 02 00 f4 	bnz s4, 92 <P_SetThingPosition+0x128>
   29eb8:	42 5c 00 09 	ashr s2, s2, 23
   29ebc:	62 80 31 c1 	cmpge_i s3, s2, s3
   29ec0:	83 02 00 f4 	bnz s3, 80 <P_SetThingPosition+0x128>
   29ec4:	7b 04 00 4f 	movehi s3, 59
   29ec8:	00 00 71 c0 	mull_i s0, s0, s2
   29ecc:	63 30 48 00 	or s3, s3, 4620
   29ed0:	00 80 50 c0 	add_i s0, s0, s1
   29ed4:	20 00 00 0f 	move s1, 0
   29ed8:	43 00 00 a8 	load_32 s2, (s3)
   29edc:	00 08 00 0b 	shl s0, s0, 2
   29ee0:	38 c0 00 88 	store_32 s1, 48(s24)
   29ee4:	02 00 50 c0 	add_i s0, s2, s0
   29ee8:	20 00 00 a8 	load_32 s1, (s0)
   29eec:	38 b0 00 88 	store_32 s1, 44(s24)
   29ef0:	20 00 00 a8 	load_32 s1, (s0)
   29ef4:	41 00 00 f2 	bz s1, 8 <P_SetThingPosition+0x114>
   29ef8:	01 c3 00 88 	store_32 s24, 48(s1)
   29efc:	00 03 00 88 	store_32 s24, (s0)
   29f00:	fe e3 00 a8 	load_32 ra, 56(sp)
   29f04:	1e f3 00 a8 	load_32 s24, 60(sp)
   29f08:	de 03 01 05 	add_i sp, sp, 64
   29f0c:	1f 00 00 f0 	ret
   29f10:	00 00 00 0f 	move s0, 0
   29f14:	18 c0 00 88 	store_32 s0, 48(s24)
   29f18:	18 b0 00 88 	store_32 s0, 44(s24)
   29f1c:	fe e3 00 a8 	load_32 ra, 56(sp)
   29f20:	1e f3 00 a8 	load_32 s24, 60(sp)
   29f24:	de 03 01 05 	add_i sp, sp, 64
   29f28:	1f 00 00 f0 	ret

0000000000029f2c P_BlockLinesIterator:
   29f2c:	de 03 ff 05 	add_i sp, sp, -64
   29f30:	1e f3 00 88 	store_32 s24, 60(sp)
   29f34:	3e e3 00 88 	store_32 s25, 56(sp)
   29f38:	5e d3 00 88 	store_32 s26, 52(sp)
   29f3c:	7e c3 00 88 	store_32 s27, 48(sp)
   29f40:	fe b3 00 88 	store_32 ra, 44(sp)
   29f44:	61 00 00 c0 	or s3, s1, s0
   29f48:	5e a0 00 88 	store_32 s2, 40(sp)
   29f4c:	a0 04 00 0f 	move s5, 1
   29f50:	43 00 00 14 	cmplt_i s2, s3, 0
   29f54:	02 07 00 f4 	bnz s2, 224 <P_BlockLinesIterator+0x108>
   29f58:	5b 04 00 4f 	movehi s2, 59
   29f5c:	7b 04 00 4f 	movehi s3, 59
   29f60:	42 90 48 00 	or s2, s2, 4644
   29f64:	63 60 48 00 	or s3, s3, 4632
   29f68:	42 00 00 a8 	load_32 s2, (s2)
   29f6c:	63 00 00 a8 	load_32 s3, (s3)
   29f70:	82 00 50 c1 	cmple_i s4, s2, s0
   29f74:	04 06 00 f4 	bnz s4, 192 <P_BlockLinesIterator+0x108>
   29f78:	63 80 50 c1 	cmple_i s3, s3, s1
   29f7c:	c3 05 00 f4 	bnz s3, 184 <P_BlockLinesIterator+0x108>
   29f80:	7b 04 00 4f 	movehi s3, 59
   29f84:	22 80 70 c0 	mull_i s1, s2, s1
   29f88:	43 40 48 00 	or s2, s3, 4624
   29f8c:	01 00 50 c0 	add_i s0, s1, s0
   29f90:	22 00 00 a8 	load_32 s1, (s2)
   29f94:	5b 04 00 4f 	movehi s2, 59
   29f98:	00 04 00 0b 	shl s0, s0, 1
   29f9c:	01 00 50 c0 	add_i s0, s1, s0
   29fa0:	22 50 48 00 	or s1, s2, 4628
   29fa4:	00 00 00 a6 	load_s16 s0, (s0)
   29fa8:	21 00 00 a8 	load_32 s1, (s1)
   29fac:	00 04 00 0b 	shl s0, s0, 1
   29fb0:	41 03 50 c0 	add_i s26, s1, s0
   29fb4:	27 00 00 4f 	movehi s1, 7
   29fb8:	1a 00 00 a4 	load_u16 s0, (s26)
   29fbc:	61 ff 7f 00 	or s27, s1, 8191
   29fc0:	20 80 0d c1 	cmpeq_i s1, s0, s27
   29fc4:	81 03 00 f4 	bnz s1, 112 <P_BlockLinesIterator+0x108>
   29fc8:	3b 04 00 4f 	movehi s1, 59
   29fcc:	be 90 00 88 	store_32 s5, 36(sp)
   29fd0:	54 04 00 4f 	movehi s2, 52
   29fd4:	01 43 4a 00 	or s24, s1, 4752
   29fd8:	22 33 19 00 	or s25, s2, 1612
   29fdc:	20 00 00 0f 	move s1, 0
   29fe0:	3e 80 00 88 	store_32 s1, 32(sp)
   29fe4:	00 00 e0 c1 	sext_16 s0, s0
   29fe8:	38 00 00 a8 	load_32 s1, (s24)
   29fec:	00 18 00 0b 	shl s0, s0, 6
   29ff0:	01 00 50 c0 	add_i s0, s1, s0
   29ff4:	40 e0 00 a8 	load_32 s2, 56(s0)
   29ff8:	39 00 00 a8 	load_32 s1, (s25)
   29ffc:	42 80 00 c1 	cmpeq_i s2, s2, s1
   2a000:	c2 00 00 f4 	bnz s2, 24 <P_BlockLinesIterator+0xec>
   2a004:	40 e0 00 05 	add_i s2, s0, 56
   2a008:	22 00 00 88 	store_32 s1, (s2)
   2a00c:	3e a0 00 a8 	load_32 s1, 40(sp)
   2a010:	21 00 00 fc 	call s1
   2a014:	e0 00 00 f2 	bz s0, 28 <P_BlockLinesIterator+0x104>
   2a018:	1a 08 00 a4 	load_u16 s0, 2(s26)
   2a01c:	5a 0b 00 05 	add_i s26, s26, 2
   2a020:	20 80 1d c1 	cmpne_i s1, s0, s27
   2a024:	01 fe ff f5 	bnz s1, -64 <P_BlockLinesIterator+0xb8>
   2a028:	be 90 00 a8 	load_32 s5, 36(sp)
   2a02c:	02 00 00 f6 	b 8 <P_BlockLinesIterator+0x108>
   2a030:	be 80 00 a8 	load_32 s5, 32(sp)
   2a034:	00 80 f2 c0 	move s0, s5
   2a038:	fe b3 00 a8 	load_32 ra, 44(sp)
   2a03c:	7e c3 00 a8 	load_32 s27, 48(sp)
   2a040:	5e d3 00 a8 	load_32 s26, 52(sp)
   2a044:	3e e3 00 a8 	load_32 s25, 56(sp)
   2a048:	1e f3 00 a8 	load_32 s24, 60(sp)
   2a04c:	de 03 01 05 	add_i sp, sp, 64
   2a050:	1f 00 00 f0 	ret

000000000002a054 P_BlockThingsIterator:
   2a054:	de 03 ff 05 	add_i sp, sp, -64
   2a058:	1e f3 00 88 	store_32 s24, 60(sp)
   2a05c:	3e e3 00 88 	store_32 s25, 56(sp)
   2a060:	5e d3 00 88 	store_32 s26, 52(sp)
   2a064:	7e c3 00 88 	store_32 s27, 48(sp)
   2a068:	fe b3 00 88 	store_32 ra, 44(sp)
   2a06c:	61 00 00 c0 	or s3, s1, s0
   2a070:	20 03 f1 c0 	move s25, s2
   2a074:	00 07 00 0f 	move s24, 1
   2a078:	43 00 00 14 	cmplt_i s2, s3, 0
   2a07c:	a2 03 00 f4 	bnz s2, 116 <P_BlockThingsIterator+0x9c>
   2a080:	5b 04 00 4f 	movehi s2, 59
   2a084:	7b 04 00 4f 	movehi s3, 59
   2a088:	42 90 48 00 	or s2, s2, 4644
   2a08c:	63 60 48 00 	or s3, s3, 4632
   2a090:	42 00 00 a8 	load_32 s2, (s2)
   2a094:	63 00 00 a8 	load_32 s3, (s3)
   2a098:	82 00 50 c1 	cmple_i s4, s2, s0
   2a09c:	a4 02 00 f4 	bnz s4, 84 <P_BlockThingsIterator+0x9c>
   2a0a0:	63 80 50 c1 	cmple_i s3, s3, s1
   2a0a4:	63 02 00 f4 	bnz s3, 76 <P_BlockThingsIterator+0x9c>
   2a0a8:	7b 04 00 4f 	movehi s3, 59
   2a0ac:	22 80 70 c0 	mull_i s1, s2, s1
   2a0b0:	63 30 48 00 	or s3, s3, 4620
   2a0b4:	01 00 50 c0 	add_i s0, s1, s0
   2a0b8:	43 00 00 a8 	load_32 s2, (s3)
   2a0bc:	00 08 00 0b 	shl s0, s0, 2
   2a0c0:	02 00 50 c0 	add_i s0, s2, s0
   2a0c4:	40 03 00 a8 	load_32 s26, (s0)
   2a0c8:	5a 01 00 f2 	bz s26, 40 <P_BlockThingsIterator+0x9c>
   2a0cc:	60 03 00 0f 	move s27, 0
   2a0d0:	00 00 fd c0 	move s0, s26
   2a0d4:	39 03 00 fc 	call s25
   2a0d8:	40 00 00 f4 	bnz s0, 8 <P_BlockThingsIterator+0x8c>
   2a0dc:	04 00 00 f6 	b 16 <P_BlockThingsIterator+0x98>
   2a0e0:	5a b3 00 a8 	load_32 s26, 44(s26)
   2a0e4:	7a 00 00 f2 	bz s26, 12 <P_BlockThingsIterator+0x9c>
   2a0e8:	fa ff ff f7 	b -24 <P_BlockThingsIterator+0x7c>
   2a0ec:	00 83 fd c0 	move s24, s27
   2a0f0:	00 00 fc c0 	move s0, s24
   2a0f4:	fe b3 00 a8 	load_32 ra, 44(sp)
   2a0f8:	7e c3 00 a8 	load_32 s27, 48(sp)
   2a0fc:	5e d3 00 a8 	load_32 s26, 52(sp)
   2a100:	3e e3 00 a8 	load_32 s25, 56(sp)
   2a104:	1e f3 00 a8 	load_32 s24, 60(sp)
   2a108:	de 03 01 05 	add_i sp, sp, 64
   2a10c:	1f 00 00 f0 	ret

000000000002a110 PIT_AddLineIntercepts:
   2a110:	de 03 ff 05 	add_i sp, sp, -64
   2a114:	1e f3 00 88 	store_32 s24, 60(sp)
   2a118:	3e e3 00 88 	store_32 s25, 56(sp)
   2a11c:	5e d3 00 88 	store_32 s26, 52(sp)
   2a120:	7e c3 00 88 	store_32 s27, 48(sp)
   2a124:	fe b3 00 88 	store_32 ra, 44(sp)
   2a128:	3b 04 00 4f 	movehi s1, 59
   2a12c:	40 10 00 4f 	movehi s2, 128
   2a130:	60 20 00 4f 	movehi s3, 256
   2a134:	01 e3 45 00 	or s24, s1, 4472
   2a138:	38 20 00 a8 	load_32 s1, 8(s24)
   2a13c:	60 03 f0 c0 	move s27, s0
   2a140:	18 30 00 a8 	load_32 s0, 12(s24)
   2a144:	1e a3 00 88 	store_32 s24, 40(sp)
   2a148:	81 00 51 c0 	add_i s4, s1, s2
   2a14c:	84 80 61 c1 	cmpgt_u s4, s4, s3
   2a150:	64 07 00 f4 	bnz s4, 236 <PIT_AddLineIntercepts+0x12c>
   2a154:	40 00 51 c0 	add_i s2, s0, s2
   2a158:	63 04 00 00 	or s3, s3, 1
   2a15c:	42 80 81 c1 	cmplt_u s2, s2, s3
   2a160:	42 00 00 f4 	bnz s2, 8 <PIT_AddLineIntercepts+0x58>
   2a164:	36 00 00 f6 	b 216 <PIT_AddLineIntercepts+0x12c>
   2a168:	78 00 00 a8 	load_32 s3, (s24)
   2a16c:	98 10 00 a8 	load_32 s4, 4(s24)
   2a170:	5b 20 00 a8 	load_32 s2, 8(s27)
   2a174:	42 00 00 f4 	bnz s2, 8 <PIT_AddLineIntercepts+0x6c>
   2a178:	5c 00 00 f6 	b 368 <PIT_AddLineIntercepts+0x1d8>
   2a17c:	bb 30 00 a8 	load_32 s5, 12(s27)
   2a180:	db 00 00 a8 	load_32 s6, (s27)
   2a184:	45 00 00 f4 	bnz s5, 8 <PIT_AddLineIntercepts+0x7c>
   2a188:	87 00 00 f6 	b 540 <PIT_AddLineIntercepts+0x294>
   2a18c:	06 00 00 a8 	load_32 s0, (s6)
   2a190:	46 10 00 a8 	load_32 s2, 4(s6)
   2a194:	23 00 60 c0 	sub_i s1, s3, s0
   2a198:	05 40 00 09 	ashr s0, s5, 16
   2a19c:	04 03 61 c0 	sub_i s24, s4, s2
   2a1a0:	65 c7 ff f9 	call -57964 <FixedMul>
   2a1a4:	3b 20 00 a8 	load_32 s1, 8(s27)
   2a1a8:	20 03 f0 c0 	move s25, s0
   2a1ac:	00 00 fc c0 	move s0, s24
   2a1b0:	1e a3 00 a8 	load_32 s24, 40(sp)
   2a1b4:	21 40 00 09 	ashr s1, s1, 16
   2a1b8:	5f c7 ff f9 	call -57988 <FixedMul>
   2a1bc:	98 00 00 a8 	load_32 s4, (s24)
   2a1c0:	20 80 3c c1 	cmpge_i s1, s0, s25
   2a1c4:	b8 20 00 a8 	load_32 s5, 8(s24)
   2a1c8:	18 10 00 a8 	load_32 s0, 4(s24)
   2a1cc:	78 30 00 a8 	load_32 s3, 12(s24)
   2a1d0:	41 07 00 01 	and s26, s1, 1
   2a1d4:	5b 20 00 a8 	load_32 s2, 8(s27)
   2a1d8:	25 00 52 c0 	add_i s1, s5, s4
   2a1dc:	42 00 00 f4 	bnz s2, 8 <PIT_AddLineIntercepts+0xd4>
   2a1e0:	88 00 00 f6 	b 544 <PIT_AddLineIntercepts+0x2f0>
   2a1e4:	03 00 50 c0 	add_i s0, s3, s0
   2a1e8:	7b 30 00 a8 	load_32 s3, 12(s27)
   2a1ec:	9b 00 00 a8 	load_32 s4, (s27)
   2a1f0:	43 00 00 f4 	bnz s3, 8 <PIT_AddLineIntercepts+0xe8>
   2a1f4:	a8 00 00 f6 	b 672 <PIT_AddLineIntercepts+0x384>
   2a1f8:	44 00 00 a8 	load_32 s2, (s4)
   2a1fc:	84 10 00 a8 	load_32 s4, 4(s4)
   2a200:	21 00 61 c0 	sub_i s1, s1, s2
   2a204:	00 03 62 c0 	sub_i s24, s0, s4
   2a208:	03 40 00 09 	ashr s0, s3, 16
   2a20c:	4a c7 ff f9 	call -58072 <FixedMul>
   2a210:	3b 20 00 a8 	load_32 s1, 8(s27)
   2a214:	20 03 f0 c0 	move s25, s0
   2a218:	00 00 fc c0 	move s0, s24
   2a21c:	21 40 00 09 	ashr s1, s1, 16
   2a220:	45 c7 ff f9 	call -58092 <FixedMul>
   2a224:	00 80 3c c1 	cmpge_i s0, s0, s25
   2a228:	00 04 00 01 	and s0, s0, 1
   2a22c:	1a 00 00 c1 	cmpeq_i s0, s26, s0
   2a230:	80 04 00 0f 	move s4, 1
   2a234:	c0 1d 00 f4 	bnz s0, 952 <PIT_AddLineIntercepts+0x4dc>
   2a238:	b0 00 00 f6 	b 704 <PIT_AddLineIntercepts+0x3e8>
   2a23c:	5b 00 00 a8 	load_32 s2, (s27)
   2a240:	62 00 00 a8 	load_32 s3, (s2)
   2a244:	42 10 00 a8 	load_32 s2, 4(s2)
   2a248:	41 00 00 f4 	bnz s1, 8 <PIT_AddLineIntercepts+0x140>
   2a24c:	30 00 00 f6 	b 192 <PIT_AddLineIntercepts+0x1fc>
   2a250:	40 00 00 f4 	bnz s0, 8 <PIT_AddLineIntercepts+0x148>
   2a254:	59 00 00 f6 	b 356 <PIT_AddLineIntercepts+0x2a8>
   2a258:	98 00 00 a8 	load_32 s4, (s24)
   2a25c:	b8 10 00 a8 	load_32 s5, 4(s24)
   2a260:	63 00 62 c0 	sub_i s3, s3, s4
   2a264:	22 83 62 c0 	sub_i s25, s2, s5
   2a268:	83 00 30 c0 	xor s4, s3, s0
   2a26c:	c4 80 30 c0 	xor s6, s4, s1
   2a270:	46 80 3c c0 	xor s2, s6, s25
   2a274:	42 fc ff 12 	cmpgt_i s2, s2, -1
   2a278:	42 00 00 f4 	bnz s2, 8 <PIT_AddLineIntercepts+0x170>
   2a27c:	74 00 00 f6 	b 464 <PIT_AddLineIntercepts+0x33c>
   2a280:	00 20 00 09 	ashr s0, s0, 8
   2a284:	23 20 00 09 	ashr s1, s3, 8
   2a288:	2b c7 ff f9 	call -58196 <FixedMul>
   2a28c:	38 20 00 a8 	load_32 s1, 8(s24)
   2a290:	00 03 f0 c0 	move s24, s0
   2a294:	19 20 00 09 	ashr s0, s25, 8
   2a298:	21 20 00 09 	ashr s1, s1, 8
   2a29c:	26 c7 ff f9 	call -58216 <FixedMul>
   2a2a0:	00 00 3c c1 	cmpge_i s0, s0, s24
   2a2a4:	1e a3 00 a8 	load_32 s24, 40(sp)
   2a2a8:	40 07 00 01 	and s26, s0, 1
   2a2ac:	38 20 00 a8 	load_32 s1, 8(s24)
   2a2b0:	1b 10 00 a8 	load_32 s0, 4(s27)
   2a2b4:	60 00 00 a8 	load_32 s3, (s0)
   2a2b8:	00 10 00 a8 	load_32 s0, 4(s0)
   2a2bc:	e1 03 00 f4 	bnz s1, 124 <PIT_AddLineIntercepts+0x228>
   2a2c0:	18 00 00 a8 	load_32 s0, (s24)
   2a2c4:	20 80 41 c1 	cmplt_i s1, s0, s3
   2a2c8:	18 30 00 a8 	load_32 s0, 12(s24)
   2a2cc:	61 0a 00 f4 	bnz s1, 332 <PIT_AddLineIntercepts+0x308>
   2a2d0:	00 00 00 12 	cmpgt_i s0, s0, 0
   2a2d4:	00 04 00 01 	and s0, s0, 1
   2a2d8:	1a 00 00 c1 	cmpeq_i s0, s26, s0
   2a2dc:	80 04 00 0f 	move s4, 1
   2a2e0:	60 18 00 f4 	bnz s0, 780 <PIT_AddLineIntercepts+0x4dc>
   2a2e4:	85 00 00 f6 	b 532 <PIT_AddLineIntercepts+0x3e8>
   2a2e8:	1b 00 00 a8 	load_32 s0, (s27)
   2a2ec:	00 00 00 a8 	load_32 s0, (s0)
   2a2f0:	40 80 41 c1 	cmplt_i s2, s0, s3
   2a2f4:	1b 30 00 a8 	load_32 s0, 12(s27)
   2a2f8:	02 08 00 f4 	bnz s2, 256 <PIT_AddLineIntercepts+0x2e8>
   2a2fc:	00 00 00 12 	cmpgt_i s0, s0, 0
   2a300:	21 80 51 c0 	add_i s1, s1, s3
   2a304:	40 07 00 01 	and s26, s0, 1
   2a308:	3e 00 00 f6 	b 248 <PIT_AddLineIntercepts+0x2f0>
   2a30c:	38 00 00 a8 	load_32 s1, (s24)
   2a310:	21 80 41 c1 	cmplt_i s1, s1, s3
   2a314:	41 00 00 f4 	bnz s1, 8 <PIT_AddLineIntercepts+0x20c>
   2a318:	45 00 00 f6 	b 276 <PIT_AddLineIntercepts+0x31c>
   2a31c:	40 7f 00 0a 	shr s26, s0, 31
   2a320:	20 00 00 0f 	move s1, 0
   2a324:	1b 10 00 a8 	load_32 s0, 4(s27)
   2a328:	60 00 00 a8 	load_32 s3, (s0)
   2a32c:	00 10 00 a8 	load_32 s0, 4(s0)
   2a330:	41 00 00 f4 	bnz s1, 8 <PIT_AddLineIntercepts+0x228>
   2a334:	e3 ff ff f7 	b -116 <PIT_AddLineIntercepts+0x1b0>
   2a338:	58 30 00 a8 	load_32 s2, 12(s24)
   2a33c:	42 00 00 f4 	bnz s2, 8 <PIT_AddLineIntercepts+0x234>
   2a340:	24 00 00 f6 	b 144 <PIT_AddLineIntercepts+0x2c0>
   2a344:	98 00 00 a8 	load_32 s4, (s24)
   2a348:	b8 10 00 a8 	load_32 s5, 4(s24)
   2a34c:	63 00 62 c0 	sub_i s3, s3, s4
   2a350:	20 83 62 c0 	sub_i s25, s0, s5
   2a354:	83 00 31 c0 	xor s4, s3, s2
   2a358:	24 80 30 c0 	xor s1, s4, s1
   2a35c:	01 80 3c c0 	xor s0, s1, s25
   2a360:	00 fc ff 12 	cmpgt_i s0, s0, -1
   2a364:	40 00 00 f4 	bnz s0, 8 <PIT_AddLineIntercepts+0x25c>
   2a368:	3f 00 00 f6 	b 252 <PIT_AddLineIntercepts+0x354>
   2a36c:	02 20 00 09 	ashr s0, s2, 8
   2a370:	23 20 00 09 	ashr s1, s3, 8
   2a374:	f0 c6 ff f9 	call -58432 <FixedMul>
   2a378:	38 20 00 a8 	load_32 s1, 8(s24)
   2a37c:	00 03 f0 c0 	move s24, s0
   2a380:	19 20 00 09 	ashr s0, s25, 8
   2a384:	21 20 00 09 	ashr s1, s1, 8
   2a388:	eb c6 ff f9 	call -58452 <FixedMul>
   2a38c:	00 00 3c c1 	cmpge_i s0, s0, s24
   2a390:	00 04 00 01 	and s0, s0, 1
   2a394:	1a 00 00 c1 	cmpeq_i s0, s26, s0
   2a398:	80 04 00 0f 	move s4, 1
   2a39c:	80 12 00 f4 	bnz s0, 592 <PIT_AddLineIntercepts+0x4dc>
   2a3a0:	56 00 00 f6 	b 344 <PIT_AddLineIntercepts+0x3e8>
   2a3a4:	a6 10 00 a8 	load_32 s5, 4(s6)
   2a3a8:	a5 00 42 c1 	cmplt_i s5, s5, s4
   2a3ac:	65 06 00 f4 	bnz s5, 204 <PIT_AddLineIntercepts+0x368>
   2a3b0:	42 7f 00 0a 	shr s26, s2, 31
   2a3b4:	33 00 00 f6 	b 204 <PIT_AddLineIntercepts+0x370>
   2a3b8:	18 10 00 a8 	load_32 s0, 4(s24)
   2a3bc:	00 00 41 c1 	cmplt_i s0, s0, s2
   2a3c0:	40 00 00 f4 	bnz s0, 8 <PIT_AddLineIntercepts+0x2b8>
   2a3c4:	3e 00 00 f6 	b 248 <PIT_AddLineIntercepts+0x3ac>
   2a3c8:	01 00 00 12 	cmpgt_i s0, s1, 0
   2a3cc:	1a 00 00 f6 	b 104 <PIT_AddLineIntercepts+0x324>
   2a3d0:	58 10 00 a8 	load_32 s2, 4(s24)
   2a3d4:	02 00 40 c1 	cmplt_i s0, s2, s0
   2a3d8:	40 00 00 f4 	bnz s0, 8 <PIT_AddLineIntercepts+0x2d0>
   2a3dc:	3e 00 00 f6 	b 248 <PIT_AddLineIntercepts+0x3c4>
   2a3e0:	01 00 00 12 	cmpgt_i s0, s1, 0
   2a3e4:	00 04 00 01 	and s0, s0, 1
   2a3e8:	1a 00 00 c1 	cmpeq_i s0, s26, s0
   2a3ec:	80 04 00 0f 	move s4, 1
   2a3f0:	e0 0f 00 f4 	bnz s0, 508 <PIT_AddLineIntercepts+0x4dc>
   2a3f4:	41 00 00 f6 	b 260 <PIT_AddLineIntercepts+0x3e8>
   2a3f8:	40 7f 00 0a 	shr s26, s0, 31
   2a3fc:	21 80 51 c0 	add_i s1, s1, s3
   2a400:	1b 00 00 a8 	load_32 s0, (s27)
   2a404:	00 00 00 a8 	load_32 s0, (s0)
   2a408:	20 80 40 c1 	cmplt_i s1, s0, s1
   2a40c:	1b 30 00 a8 	load_32 s0, 12(s27)
   2a410:	41 00 00 f4 	bnz s1, 8 <PIT_AddLineIntercepts+0x308>
   2a414:	af ff ff f7 	b -324 <PIT_AddLineIntercepts+0x1c0>
   2a418:	00 7c 00 0a 	shr s0, s0, 31
   2a41c:	1a 00 00 c1 	cmpeq_i s0, s26, s0
   2a420:	80 04 00 0f 	move s4, 1
   2a424:	40 0e 00 f4 	bnz s0, 456 <PIT_AddLineIntercepts+0x4dc>
   2a428:	34 00 00 f6 	b 208 <PIT_AddLineIntercepts+0x3e8>
   2a42c:	00 00 00 12 	cmpgt_i s0, s0, 0
   2a430:	20 00 00 0f 	move s1, 0
   2a434:	40 07 00 01 	and s26, s0, 1
   2a438:	1b 10 00 a8 	load_32 s0, 4(s27)
   2a43c:	60 00 00 a8 	load_32 s3, (s0)
   2a440:	00 10 00 a8 	load_32 s0, 4(s0)
   2a444:	a1 f7 ff f5 	bnz s1, -268 <PIT_AddLineIntercepts+0x228>
   2a448:	9e ff ff f7 	b -392 <PIT_AddLineIntercepts+0x1b0>
   2a44c:	44 7f 00 0a 	shr s26, s4, 31
   2a450:	1b 10 00 a8 	load_32 s0, 4(s27)
   2a454:	60 00 00 a8 	load_32 s3, (s0)
   2a458:	00 10 00 a8 	load_32 s0, 4(s0)
   2a45c:	e1 f6 ff f5 	bnz s1, -292 <PIT_AddLineIntercepts+0x228>
   2a460:	98 ff ff f7 	b -416 <PIT_AddLineIntercepts+0x1b0>
   2a464:	04 7c 00 0a 	shr s0, s4, 31
   2a468:	1a 00 00 c1 	cmpeq_i s0, s26, s0
   2a46c:	80 04 00 0f 	move s4, 1
   2a470:	e0 0b 00 f4 	bnz s0, 380 <PIT_AddLineIntercepts+0x4dc>
   2a474:	21 00 00 f6 	b 132 <PIT_AddLineIntercepts+0x3e8>
   2a478:	a2 00 00 12 	cmpgt_i s5, s2, 0
   2a47c:	45 07 00 01 	and s26, s5, 1
   2a480:	21 80 51 c0 	add_i s1, s1, s3
   2a484:	00 00 52 c0 	add_i s0, s0, s4
   2a488:	7b 30 00 a8 	load_32 s3, 12(s27)
   2a48c:	9b 00 00 a8 	load_32 s4, (s27)
   2a490:	43 eb ff f5 	bnz s3, -664 <PIT_AddLineIntercepts+0xe8>
   2a494:	24 10 00 a8 	load_32 s1, 4(s4)
   2a498:	01 00 40 c1 	cmplt_i s0, s1, s0
   2a49c:	40 00 00 f4 	bnz s0, 8 <PIT_AddLineIntercepts+0x394>
   2a4a0:	12 00 00 f6 	b 72 <PIT_AddLineIntercepts+0x3d8>
   2a4a4:	02 00 00 12 	cmpgt_i s0, s2, 0
   2a4a8:	00 04 00 01 	and s0, s0, 1
   2a4ac:	1a 00 00 c1 	cmpeq_i s0, s26, s0
   2a4b0:	80 04 00 0f 	move s4, 1
   2a4b4:	c0 09 00 f4 	bnz s0, 312 <PIT_AddLineIntercepts+0x4dc>
   2a4b8:	10 00 00 f6 	b 64 <PIT_AddLineIntercepts+0x3e8>
   2a4bc:	41 7f 00 0a 	shr s26, s1, 31
   2a4c0:	1b 10 00 a8 	load_32 s0, 4(s27)
   2a4c4:	60 00 00 a8 	load_32 s3, (s0)
   2a4c8:	00 10 00 a8 	load_32 s0, 4(s0)
   2a4cc:	61 f3 ff f5 	bnz s1, -404 <PIT_AddLineIntercepts+0x228>
   2a4d0:	7c ff ff f7 	b -528 <PIT_AddLineIntercepts+0x1b0>
   2a4d4:	01 7c 00 0a 	shr s0, s1, 31
   2a4d8:	1a 00 00 c1 	cmpeq_i s0, s26, s0
   2a4dc:	80 04 00 0f 	move s4, 1
   2a4e0:	60 08 00 f4 	bnz s0, 268 <PIT_AddLineIntercepts+0x4dc>
   2a4e4:	05 00 00 f6 	b 20 <PIT_AddLineIntercepts+0x3e8>
   2a4e8:	02 7c 00 0a 	shr s0, s2, 31
   2a4ec:	1a 00 00 c1 	cmpeq_i s0, s26, s0
   2a4f0:	80 04 00 0f 	move s4, 1
   2a4f4:	c0 07 00 f4 	bnz s0, 248 <PIT_AddLineIntercepts+0x4dc>
   2a4f8:	9e 70 00 88 	store_32 s4, 28(sp)
   2a4fc:	1b 00 00 a8 	load_32 s0, (s27)
   2a500:	20 00 00 a8 	load_32 s1, (s0)
   2a504:	3e 50 00 88 	store_32 s1, 20(sp)
   2a508:	00 10 00 a8 	load_32 s0, 4(s0)
   2a50c:	1e 60 00 88 	store_32 s0, 24(sp)
   2a510:	3b 23 00 a8 	load_32 s25, 8(s27)
   2a514:	7e 93 00 88 	store_32 s27, 36(sp)
   2a518:	7b 33 00 a8 	load_32 s27, 12(s27)
   2a51c:	5e a3 00 a8 	load_32 s26, 40(sp)
   2a520:	1b 20 00 09 	ashr s0, s27, 8
   2a524:	3a 20 00 a8 	load_32 s1, 8(s26)
   2a528:	83 c6 ff f9 	call -58868 <FixedMul>
   2a52c:	00 03 f0 c0 	move s24, s0
   2a530:	3e 83 00 88 	store_32 s25, 32(sp)
   2a534:	3a 30 00 a8 	load_32 s1, 12(s26)
   2a538:	19 20 00 09 	ashr s0, s25, 8
   2a53c:	7e c6 ff f9 	call -58888 <FixedMul>
   2a540:	18 03 60 c0 	sub_i s24, s24, s0
   2a544:	b8 02 00 f2 	bz s24, 84 <PIT_AddLineIntercepts+0x488>
   2a548:	1a 00 00 a8 	load_32 s0, (s26)
   2a54c:	3e 50 00 a8 	load_32 s1, 20(sp)
   2a550:	01 00 60 c0 	sub_i s0, s1, s0
   2a554:	20 80 fd c0 	move s1, s27
   2a558:	00 20 00 09 	ashr s0, s0, 8
   2a55c:	76 c6 ff f9 	call -58920 <FixedMul>
   2a560:	3a 10 00 a8 	load_32 s1, 4(s26)
   2a564:	5e 60 00 a8 	load_32 s2, 24(sp)
   2a568:	60 03 f0 c0 	move s27, s0
   2a56c:	21 00 61 c0 	sub_i s1, s1, s2
   2a570:	01 20 00 09 	ashr s0, s1, 8
   2a574:	3e 80 00 a8 	load_32 s1, 32(sp)
   2a578:	6f c6 ff f9 	call -58948 <FixedMul>
   2a57c:	00 80 5d c0 	add_i s0, s0, s27
   2a580:	20 00 fc c0 	move s1, s24
   2a584:	72 c6 ff f9 	call -58936 <FixedDiv>
   2a588:	9e 70 00 a8 	load_32 s4, 28(sp)
   2a58c:	20 00 00 14 	cmplt_i s1, s0, 0
   2a590:	e1 02 00 f4 	bnz s1, 92 <PIT_AddLineIntercepts+0x4dc>
   2a594:	02 00 00 f6 	b 8 <PIT_AddLineIntercepts+0x48c>
   2a598:	00 00 00 0f 	move s0, 0
   2a59c:	3b 04 00 4f 	movehi s1, 59
   2a5a0:	47 00 00 4f 	movehi s2, 7
   2a5a4:	21 70 2d 00 	or s1, s1, 2908
   2a5a8:	42 fc 7f 00 	or s2, s2, 8191
   2a5ac:	40 00 21 c1 	cmpgt_i s2, s0, s2
   2a5b0:	21 00 00 a8 	load_32 s1, (s1)
   2a5b4:	7e 90 00 a8 	load_32 s3, 36(sp)
   2a5b8:	82 00 00 f4 	bnz s2, 16 <PIT_AddLineIntercepts+0x4b8>
   2a5bc:	61 00 00 f2 	bz s1, 12 <PIT_AddLineIntercepts+0x4b8>
   2a5c0:	23 d0 00 a8 	load_32 s1, 52(s3)
   2a5c4:	41 02 00 f2 	bz s1, 72 <PIT_AddLineIntercepts+0x4fc>
   2a5c8:	3b 04 00 4f 	movehi s1, 59
   2a5cc:	80 04 00 0f 	move s4, 1
   2a5d0:	21 80 2d 00 	or s1, s1, 2912
   2a5d4:	41 00 00 a8 	load_32 s2, (s1)
   2a5d8:	02 00 00 88 	store_32 s0, (s2)
   2a5dc:	02 30 00 05 	add_i s0, s2, 12
   2a5e0:	82 10 00 88 	store_32 s4, 4(s2)
   2a5e4:	62 20 00 88 	store_32 s3, 8(s2)
   2a5e8:	01 00 00 88 	store_32 s0, (s1)
   2a5ec:	00 00 f2 c0 	move s0, s4
   2a5f0:	fe b3 00 a8 	load_32 ra, 44(sp)
   2a5f4:	7e c3 00 a8 	load_32 s27, 48(sp)
   2a5f8:	5e d3 00 a8 	load_32 s26, 52(sp)
   2a5fc:	3e e3 00 a8 	load_32 s25, 56(sp)
   2a600:	1e f3 00 a8 	load_32 s24, 60(sp)
   2a604:	de 03 01 05 	add_i sp, sp, 64
   2a608:	1f 00 00 f0 	ret
   2a60c:	80 00 00 0f 	move s4, 0
   2a610:	f7 ff ff f7 	b -36 <PIT_AddLineIntercepts+0x4dc>

000000000002a614 PIT_AddThingIntercepts:
   2a614:	de 03 ff 05 	add_i sp, sp, -64
   2a618:	1e f3 00 88 	store_32 s24, 60(sp)
   2a61c:	3e e3 00 88 	store_32 s25, 56(sp)
   2a620:	5e d3 00 88 	store_32 s26, 52(sp)
   2a624:	7e c3 00 88 	store_32 s27, 48(sp)
   2a628:	fe b3 00 88 	store_32 ra, 44(sp)
   2a62c:	3b 04 00 4f 	movehi s1, 59
   2a630:	01 e3 45 00 	or s24, s1, 4472
   2a634:	f8 20 00 a8 	load_32 s7, 8(s24)
   2a638:	38 30 00 a8 	load_32 s1, 12(s24)
   2a63c:	40 30 00 a8 	load_32 s2, 12(s0)
   2a640:	60 00 01 a8 	load_32 s3, 64(s0)
   2a644:	c0 40 00 a8 	load_32 s6, 16(s0)
   2a648:	a1 80 33 c0 	xor s5, s1, s7
   2a64c:	86 80 61 c0 	sub_i s4, s6, s3
   2a650:	a5 00 00 12 	cmpgt_i s5, s5, 0
   2a654:	c6 80 51 c0 	add_i s6, s6, s3
   2a658:	20 01 f2 c0 	move s9, s4
   2a65c:	45 00 00 f4 	bnz s5, 8 <PIT_AddThingIntercepts+0x50>
   2a660:	20 01 f3 c0 	move s9, s6
   2a664:	45 00 00 f4 	bnz s5, 8 <PIT_AddThingIntercepts+0x58>
   2a668:	c0 00 f2 c0 	move s6, s4
   2a66c:	02 81 61 c0 	sub_i s8, s2, s3
   2a670:	1e 90 00 88 	store_32 s0, 36(sp)
   2a674:	43 03 51 c0 	add_i s26, s3, s2
   2a678:	de a0 00 88 	store_32 s6, 40(sp)
   2a67c:	47 00 00 f4 	bnz s7, 8 <PIT_AddThingIntercepts+0x70>
   2a680:	3d 00 00 f6 	b 244 <PIT_AddThingIntercepts+0x160>
   2a684:	41 00 00 f4 	bnz s1, 8 <PIT_AddThingIntercepts+0x78>
   2a688:	49 00 00 f6 	b 292 <PIT_AddThingIntercepts+0x198>
   2a68c:	58 00 00 a8 	load_32 s2, (s24)
   2a690:	98 10 00 a8 	load_32 s4, 4(s24)
   2a694:	48 00 61 c0 	sub_i s2, s8, s2
   2a698:	66 03 62 c0 	sub_i s27, s6, s4
   2a69c:	62 80 30 c0 	xor s3, s2, s1
   2a6a0:	a3 80 33 c0 	xor s5, s3, s7
   2a6a4:	85 80 3d c0 	xor s4, s5, s27
   2a6a8:	84 fc ff 12 	cmpgt_i s4, s4, -1
   2a6ac:	44 00 00 f4 	bnz s4, 8 <PIT_AddThingIntercepts+0xa0>
   2a6b0:	5b 00 00 f6 	b 364 <PIT_AddThingIntercepts+0x208>
   2a6b4:	01 20 00 09 	ashr s0, s1, 8
   2a6b8:	1e 81 00 88 	store_32 s8, 32(sp)
   2a6bc:	22 20 00 09 	ashr s1, s2, 8
   2a6c0:	3e 71 00 88 	store_32 s9, 28(sp)
   2a6c4:	1c c6 ff f9 	call -59280 <FixedMul>
   2a6c8:	38 20 00 a8 	load_32 s1, 8(s24)
   2a6cc:	20 03 f0 c0 	move s25, s0
   2a6d0:	1b 20 00 09 	ashr s0, s27, 8
   2a6d4:	21 20 00 09 	ashr s1, s1, 8
   2a6d8:	17 c6 ff f9 	call -59300 <FixedMul>
   2a6dc:	20 80 3c c1 	cmpge_i s1, s0, s25
   2a6e0:	3e 71 00 a8 	load_32 s9, 28(sp)
   2a6e4:	1e 81 00 a8 	load_32 s8, 32(sp)
   2a6e8:	f8 20 00 a8 	load_32 s7, 8(s24)
   2a6ec:	61 07 00 01 	and s27, s1, 1
   2a6f0:	47 00 00 f4 	bnz s7, 8 <PIT_AddThingIntercepts+0xe4>
   2a6f4:	25 00 00 f6 	b 148 <PIT_AddThingIntercepts+0x174>
   2a6f8:	38 30 00 a8 	load_32 s1, 12(s24)
   2a6fc:	41 00 00 f4 	bnz s1, 8 <PIT_AddThingIntercepts+0xf0>
   2a700:	33 00 00 f6 	b 204 <PIT_AddThingIntercepts+0x1b8>
   2a704:	58 00 00 a8 	load_32 s2, (s24)
   2a708:	98 10 00 a8 	load_32 s4, 4(s24)
   2a70c:	5a 00 61 c0 	sub_i s2, s26, s2
   2a710:	29 03 62 c0 	sub_i s25, s9, s4
   2a714:	62 80 30 c0 	xor s3, s2, s1
   2a718:	03 80 33 c0 	xor s0, s3, s7
   2a71c:	00 80 3c c0 	xor s0, s0, s25
   2a720:	00 fc ff 12 	cmpgt_i s0, s0, -1
   2a724:	40 00 00 f4 	bnz s0, 8 <PIT_AddThingIntercepts+0x118>
   2a728:	41 00 00 f6 	b 260 <PIT_AddThingIntercepts+0x218>
   2a72c:	01 20 00 09 	ashr s0, s1, 8
   2a730:	1e 81 00 88 	store_32 s8, 32(sp)
   2a734:	22 20 00 09 	ashr s1, s2, 8
   2a738:	3e 71 00 88 	store_32 s9, 28(sp)
   2a73c:	fe c5 ff f9 	call -59400 <FixedMul>
   2a740:	38 20 00 a8 	load_32 s1, 8(s24)
   2a744:	1e 60 00 88 	store_32 s0, 24(sp)
   2a748:	19 20 00 09 	ashr s0, s25, 8
   2a74c:	21 20 00 09 	ashr s1, s1, 8
   2a750:	f9 c5 ff f9 	call -59420 <FixedMul>
   2a754:	3e 71 00 a8 	load_32 s9, 28(sp)
   2a758:	1e 81 00 a8 	load_32 s8, 32(sp)
   2a75c:	3e 60 00 a8 	load_32 s1, 24(sp)
   2a760:	00 80 30 c1 	cmpge_i s0, s0, s1
   2a764:	00 04 00 01 	and s0, s0, 1
   2a768:	1b 00 00 c1 	cmpeq_i s0, s27, s0
   2a76c:	e0 0c 00 f4 	bnz s0, 412 <PIT_AddThingIntercepts+0x2f4>
   2a770:	3a 00 00 f6 	b 232 <PIT_AddThingIntercepts+0x244>
   2a774:	58 00 00 a8 	load_32 s2, (s24)
   2a778:	42 00 44 c1 	cmplt_i s2, s2, s8
   2a77c:	42 00 00 f4 	bnz s2, 8 <PIT_AddThingIntercepts+0x170>
   2a780:	1c 00 00 f6 	b 112 <PIT_AddThingIntercepts+0x1dc>
   2a784:	61 7f 00 0a 	shr s27, s1, 31
   2a788:	18 00 00 a8 	load_32 s0, (s24)
   2a78c:	20 00 4d c1 	cmplt_i s1, s0, s26
   2a790:	18 30 00 a8 	load_32 s0, 12(s24)
   2a794:	41 00 00 f4 	bnz s1, 8 <PIT_AddThingIntercepts+0x188>
   2a798:	1c 00 00 f6 	b 112 <PIT_AddThingIntercepts+0x1f4>
   2a79c:	00 7c 00 0a 	shr s0, s0, 31
   2a7a0:	1b 00 00 c1 	cmpeq_i s0, s27, s0
   2a7a4:	20 0b 00 f4 	bnz s0, 356 <PIT_AddThingIntercepts+0x2f4>
   2a7a8:	2c 00 00 f6 	b 176 <PIT_AddThingIntercepts+0x244>
   2a7ac:	38 10 00 a8 	load_32 s1, 4(s24)
   2a7b0:	21 00 43 c1 	cmplt_i s1, s1, s6
   2a7b4:	41 00 00 f4 	bnz s1, 8 <PIT_AddThingIntercepts+0x1a8>
   2a7b8:	21 00 00 f6 	b 132 <PIT_AddThingIntercepts+0x228>
   2a7bc:	27 00 00 12 	cmpgt_i s1, s7, 0
   2a7c0:	61 07 00 01 	and s27, s1, 1
   2a7c4:	38 30 00 a8 	load_32 s1, 12(s24)
   2a7c8:	e1 f9 ff f5 	bnz s1, -196 <PIT_AddThingIntercepts+0xf0>
   2a7cc:	38 10 00 a8 	load_32 s1, 4(s24)
   2a7d0:	21 80 44 c1 	cmplt_i s1, s1, s9
   2a7d4:	41 00 00 f4 	bnz s1, 8 <PIT_AddThingIntercepts+0x1c8>
   2a7d8:	1d 00 00 f6 	b 116 <PIT_AddThingIntercepts+0x238>
   2a7dc:	07 00 00 12 	cmpgt_i s0, s7, 0
   2a7e0:	00 04 00 01 	and s0, s0, 1
   2a7e4:	1b 00 00 c1 	cmpeq_i s0, s27, s0
   2a7e8:	00 09 00 f4 	bnz s0, 288 <PIT_AddThingIntercepts+0x2f4>
   2a7ec:	1b 00 00 f6 	b 108 <PIT_AddThingIntercepts+0x244>
   2a7f0:	01 00 00 12 	cmpgt_i s0, s1, 0
   2a7f4:	60 07 00 01 	and s27, s0, 1
   2a7f8:	18 00 00 a8 	load_32 s0, (s24)
   2a7fc:	20 00 4d c1 	cmplt_i s1, s0, s26
   2a800:	18 30 00 a8 	load_32 s0, 12(s24)
   2a804:	c1 fc ff f5 	bnz s1, -104 <PIT_AddThingIntercepts+0x188>
   2a808:	00 00 00 12 	cmpgt_i s0, s0, 0
   2a80c:	00 04 00 01 	and s0, s0, 1
   2a810:	1b 00 00 c1 	cmpeq_i s0, s27, s0
   2a814:	a0 07 00 f4 	bnz s0, 244 <PIT_AddThingIntercepts+0x2f4>
   2a818:	10 00 00 f6 	b 64 <PIT_AddThingIntercepts+0x244>
   2a81c:	63 7f 00 0a 	shr s27, s3, 31
   2a820:	38 30 00 a8 	load_32 s1, 12(s24)
   2a824:	01 f7 ff f5 	bnz s1, -288 <PIT_AddThingIntercepts+0xf0>
   2a828:	e9 ff ff f7 	b -92 <PIT_AddThingIntercepts+0x1b8>
   2a82c:	03 7c 00 0a 	shr s0, s3, 31
   2a830:	1b 00 00 c1 	cmpeq_i s0, s27, s0
   2a834:	a0 06 00 f4 	bnz s0, 212 <PIT_AddThingIntercepts+0x2f4>
   2a838:	08 00 00 f6 	b 32 <PIT_AddThingIntercepts+0x244>
   2a83c:	67 7f 00 0a 	shr s27, s7, 31
   2a840:	38 30 00 a8 	load_32 s1, 12(s24)
   2a844:	01 f6 ff f5 	bnz s1, -320 <PIT_AddThingIntercepts+0xf0>
   2a848:	e1 ff ff f7 	b -124 <PIT_AddThingIntercepts+0x1b8>
   2a84c:	07 7c 00 0a 	shr s0, s7, 31
   2a850:	1b 00 00 c1 	cmpeq_i s0, s27, s0
   2a854:	a0 05 00 f4 	bnz s0, 180 <PIT_AddThingIntercepts+0x2f4>
   2a858:	1e a0 00 a8 	load_32 s0, 40(sp)
   2a85c:	5a 03 64 c0 	sub_i s26, s26, s8
   2a860:	09 00 60 c0 	sub_i s0, s9, s0
   2a864:	1e 70 00 88 	store_32 s0, 28(sp)
   2a868:	38 20 00 a8 	load_32 s1, 8(s24)
   2a86c:	20 03 f4 c0 	move s25, s8
   2a870:	00 20 00 09 	ashr s0, s0, 8
   2a874:	b0 c5 ff f9 	call -59712 <FixedMul>
   2a878:	60 03 f0 c0 	move s27, s0
   2a87c:	5e 83 00 88 	store_32 s26, 32(sp)
   2a880:	38 30 00 a8 	load_32 s1, 12(s24)
   2a884:	1a 20 00 09 	ashr s0, s26, 8
   2a888:	ab c5 ff f9 	call -59732 <FixedMul>
   2a88c:	20 80 fc c0 	move s1, s25
   2a890:	20 03 00 0f 	move s25, 0
   2a894:	7b 03 60 c0 	sub_i s27, s27, s0
   2a898:	00 80 fc c0 	move s0, s25
   2a89c:	5b 02 00 f2 	bz s27, 72 <PIT_AddThingIntercepts+0x2d0>
   2a8a0:	18 00 00 a8 	load_32 s0, (s24)
   2a8a4:	01 00 60 c0 	sub_i s0, s1, s0
   2a8a8:	3e 70 00 a8 	load_32 s1, 28(sp)
   2a8ac:	00 20 00 09 	ashr s0, s0, 8
   2a8b0:	a1 c5 ff f9 	call -59772 <FixedMul>
   2a8b4:	38 10 00 a8 	load_32 s1, 4(s24)
   2a8b8:	5e a0 00 a8 	load_32 s2, 40(sp)
   2a8bc:	40 03 f0 c0 	move s26, s0
   2a8c0:	21 00 61 c0 	sub_i s1, s1, s2
   2a8c4:	01 20 00 09 	ashr s0, s1, 8
   2a8c8:	3e 80 00 a8 	load_32 s1, 32(sp)
   2a8cc:	9a c5 ff f9 	call -59800 <FixedMul>
   2a8d0:	00 00 5d c0 	add_i s0, s0, s26
   2a8d4:	20 80 fd c0 	move s1, s27
   2a8d8:	9d c5 ff f9 	call -59788 <FixedDiv>
   2a8dc:	20 00 00 14 	cmplt_i s1, s0, 0
   2a8e0:	41 01 00 f4 	bnz s1, 40 <PIT_AddThingIntercepts+0x2f4>
   2a8e4:	3b 04 00 4f 	movehi s1, 59
   2a8e8:	21 80 2d 00 	or s1, s1, 2912
   2a8ec:	41 00 00 a8 	load_32 s2, (s1)
   2a8f0:	02 00 00 88 	store_32 s0, (s2)
   2a8f4:	22 13 00 88 	store_32 s25, 4(s2)
   2a8f8:	1e 90 00 a8 	load_32 s0, 36(sp)
   2a8fc:	02 20 00 88 	store_32 s0, 8(s2)
   2a900:	02 30 00 05 	add_i s0, s2, 12
   2a904:	01 00 00 88 	store_32 s0, (s1)
   2a908:	fe b3 00 a8 	load_32 ra, 44(sp)
   2a90c:	00 04 00 0f 	move s0, 1
   2a910:	7e c3 00 a8 	load_32 s27, 48(sp)
   2a914:	5e d3 00 a8 	load_32 s26, 52(sp)
   2a918:	3e e3 00 a8 	load_32 s25, 56(sp)
   2a91c:	1e f3 00 a8 	load_32 s24, 60(sp)
   2a920:	de 03 01 05 	add_i sp, sp, 64
   2a924:	1f 00 00 f0 	ret

000000000002a928 P_TraverseIntercepts:
   2a928:	de 03 ff 05 	add_i sp, sp, -64
   2a92c:	1e f3 00 88 	store_32 s24, 60(sp)
   2a930:	3e e3 00 88 	store_32 s25, 56(sp)
   2a934:	5e d3 00 88 	store_32 s26, 52(sp)
   2a938:	7e c3 00 88 	store_32 s27, 48(sp)
   2a93c:	fe b3 00 88 	store_32 ra, 44(sp)
   2a940:	5b 04 00 4f 	movehi s2, 59
   2a944:	7b 04 00 4f 	movehi s3, 59
   2a948:	42 80 2d 00 	or s2, s2, 2912
   2a94c:	5e 80 00 88 	store_32 s2, 32(sp)
   2a950:	43 93 2d 00 	or s26, s3, 2916
   2a954:	42 00 00 a8 	load_32 s2, (s2)
   2a958:	3e a0 00 88 	store_32 s1, 40(sp)
   2a95c:	1e 90 00 88 	store_32 s0, 36(sp)
   2a960:	00 04 00 0f 	move s0, 1
   2a964:	62 00 6d c0 	sub_i s3, s2, s26
   2a968:	83 06 00 f2 	bz s3, 208 <P_TraverseIntercepts+0x110>
   2a96c:	35 a8 aa 4f 	movehi s1, 349525
   2a970:	1e 70 00 88 	store_32 s0, 28(sp)
   2a974:	03 08 00 09 	ashr s0, s3, 2
   2a978:	7f fc 7f 4f 	movehi s3, 262143
   2a97c:	21 ac 2a 00 	or s1, s1, 2731
   2a980:	20 83 70 c0 	mull_i s25, s0, s1
   2a984:	00 00 00 0f 	move s0, 0
   2a988:	1e 60 00 88 	store_32 s0, 24(sp)
   2a98c:	03 ff 7f 00 	or s24, s3, 8191
   2a990:	22 00 9d c1 	cmple_u s1, s2, s26
   2a994:	21 03 00 f4 	bnz s1, 100 <P_TraverseIntercepts+0xd0>
   2a998:	06 00 00 f6 	b 24 <P_TraverseIntercepts+0x88>
   2a99c:	1e 80 00 a8 	load_32 s0, 32(sp)
   2a9a0:	40 00 00 a8 	load_32 s2, (s0)
   2a9a4:	00 80 fd c0 	move s0, s27
   2a9a8:	22 00 9d c1 	cmple_u s1, s2, s26
   2a9ac:	61 02 00 f4 	bnz s1, 76 <P_TraverseIntercepts+0xd0>
   2a9b0:	20 00 fd c0 	move s1, s26
   2a9b4:	80 00 fc c0 	move s4, s24
   2a9b8:	61 00 00 a8 	load_32 s3, (s1)
   2a9bc:	a3 00 42 c1 	cmplt_i s5, s3, s4
   2a9c0:	45 00 00 f4 	bnz s5, 8 <P_TraverseIntercepts+0xa0>
   2a9c4:	60 00 f2 c0 	move s3, s4
   2a9c8:	60 83 f0 c0 	move s27, s1
   2a9cc:	45 00 00 f4 	bnz s5, 8 <P_TraverseIntercepts+0xac>
   2a9d0:	60 03 f0 c0 	move s27, s0
   2a9d4:	21 30 00 05 	add_i s1, s1, 12
   2a9d8:	00 80 fd c0 	move s0, s27
   2a9dc:	80 80 f1 c0 	move s4, s3
   2a9e0:	a1 00 81 c1 	cmplt_u s5, s1, s2
   2a9e4:	a5 fe ff f5 	bnz s5, -44 <P_TraverseIntercepts+0x90>
   2a9e8:	1e a0 00 a8 	load_32 s0, 40(sp)
   2a9ec:	03 00 20 c1 	cmpgt_i s0, s3, s0
   2a9f0:	e0 01 00 f4 	bnz s0, 60 <P_TraverseIntercepts+0x104>
   2a9f4:	06 00 00 f6 	b 24 <P_TraverseIntercepts+0xe4>
   2a9f8:	60 00 fc c0 	move s3, s24
   2a9fc:	60 03 f0 c0 	move s27, s0
   2aa00:	1e a0 00 a8 	load_32 s0, 40(sp)
   2aa04:	03 00 20 c1 	cmpgt_i s0, s3, s0
   2aa08:	20 01 00 f4 	bnz s0, 36 <P_TraverseIntercepts+0x104>
   2aa0c:	00 80 fd c0 	move s0, s27
   2aa10:	3e 90 00 a8 	load_32 s1, 36(sp)
   2aa14:	21 00 00 fc 	call s1
   2aa18:	e0 00 00 f2 	bz s0, 28 <P_TraverseIntercepts+0x10c>
   2aa1c:	39 ff ff 05 	add_i s25, s25, -1
   2aa20:	1b 03 00 88 	store_32 s24, (s27)
   2aa24:	59 00 00 f2 	bz s25, 8 <P_TraverseIntercepts+0x104>
   2aa28:	dd ff ff f7 	b -140 <P_TraverseIntercepts+0x74>
   2aa2c:	1e 70 00 a8 	load_32 s0, 28(sp)
   2aa30:	02 00 00 f6 	b 8 <P_TraverseIntercepts+0x110>
   2aa34:	1e 60 00 a8 	load_32 s0, 24(sp)
   2aa38:	fe b3 00 a8 	load_32 ra, 44(sp)
   2aa3c:	7e c3 00 a8 	load_32 s27, 48(sp)
   2aa40:	5e d3 00 a8 	load_32 s26, 52(sp)
   2aa44:	3e e3 00 a8 	load_32 s25, 56(sp)
   2aa48:	1e f3 00 a8 	load_32 s24, 60(sp)
   2aa4c:	de 03 01 05 	add_i sp, sp, 64
   2aa50:	1f 00 00 f0 	ret

000000000002aa54 P_PathTraverse:
   2aa54:	de 03 fe 05 	add_i sp, sp, -128
   2aa58:	1e f3 01 88 	store_32 s24, 124(sp)
   2aa5c:	3e e3 01 88 	store_32 s25, 120(sp)
   2aa60:	5e d3 01 88 	store_32 s26, 116(sp)
   2aa64:	7e c3 01 88 	store_32 s27, 112(sp)
   2aa68:	fe b3 01 88 	store_32 ra, 108(sp)
   2aa6c:	db 04 00 4f 	movehi s6, 59
   2aa70:	f4 04 00 4f 	movehi s7, 52
   2aa74:	08 03 00 4f 	movehi s24, 8
   2aa78:	06 71 2d 00 	or s8, s6, 2908
   2aa7c:	e7 30 19 00 	or s7, s7, 1612
   2aa80:	c4 10 00 01 	and s6, s4, 4
   2aa84:	c8 00 00 88 	store_32 s6, (s8)
   2aa88:	1b 05 00 4f 	movehi s8, 59
   2aa8c:	c7 00 00 a8 	load_32 s6, (s7)
   2aa90:	fe 90 01 88 	store_32 s7, 100(sp)
   2aa94:	08 81 2d 00 	or s8, s8, 2912
   2aa98:	c6 04 00 05 	add_i s6, s6, 1
   2aa9c:	c7 00 00 88 	store_32 s6, (s7)
   2aaa0:	db 04 00 4f 	movehi s6, 59
   2aaa4:	1e b1 00 88 	store_32 s8, 44(sp)
   2aaa8:	fb 04 00 4f 	movehi s7, 59
   2aaac:	c6 70 48 00 	or s6, s6, 4636
   2aab0:	27 91 2d 00 	or s9, s7, 2916
   2aab4:	28 01 00 88 	store_32 s9, (s8)
   2aab8:	06 01 00 a8 	load_32 s8, (s6)
   2aabc:	df 7c 00 4f 	movehi s6, 1023
   2aac0:	be 90 00 88 	store_32 s5, 36(sp)
   2aac4:	c6 fc 7f 00 	or s6, s6, 8191
   2aac8:	e0 00 64 c0 	sub_i s7, s0, s8
   2aacc:	e7 00 13 c0 	and s7, s7, s6
   2aad0:	a7 00 00 10 	cmpeq_i s5, s7, 0
   2aad4:	45 00 00 f4 	bnz s5, 8 <P_PathTraverse+0x88>
   2aad8:	02 00 00 f6 	b 8 <P_PathTraverse+0x8c>
   2aadc:	00 00 5c c0 	add_i s0, s0, s24
   2aae0:	bb 04 00 4f 	movehi s5, 59
   2aae4:	a5 80 48 00 	or s5, s5, 4640
   2aae8:	a5 00 00 a8 	load_32 s5, (s5)
   2aaec:	e1 80 62 c0 	sub_i s7, s1, s5
   2aaf0:	c7 00 13 c0 	and s6, s7, s6
   2aaf4:	c6 00 00 10 	cmpeq_i s6, s6, 0
   2aaf8:	46 00 00 f4 	bnz s6, 8 <P_PathTraverse+0xac>
   2aafc:	02 00 00 f6 	b 8 <P_PathTraverse+0xb0>
   2ab00:	21 00 5c c0 	add_i s1, s1, s24
   2ab04:	db 04 00 4f 	movehi s6, 59
   2ab08:	e2 00 60 c0 	sub_i s7, s2, s0
   2ab0c:	61 83 62 c0 	sub_i s27, s1, s5
   2ab10:	c6 e0 45 00 	or s6, s6, 4472
   2ab14:	20 03 64 c0 	sub_i s25, s0, s8
   2ab18:	a3 80 62 c0 	sub_i s5, s3, s5
   2ab1c:	06 00 00 88 	store_32 s0, (s6)
   2ab20:	1b 5c 00 09 	ashr s0, s27, 23
   2ab24:	26 10 00 88 	store_32 s1, 4(s6)
   2ab28:	e6 20 00 88 	store_32 s7, 8(s6)
   2ab2c:	e3 80 60 c0 	sub_i s7, s3, s1
   2ab30:	e6 30 00 88 	store_32 s7, 12(s6)
   2ab34:	c2 00 64 c0 	sub_i s6, s2, s8
   2ab38:	39 5c 00 09 	ashr s1, s25, 23
   2ab3c:	1e 60 01 88 	store_32 s0, 88(sp)
   2ab40:	65 5c 00 09 	ashr s3, s5, 23
   2ab44:	7e 20 01 88 	store_32 s3, 72(sp)
   2ab48:	46 5c 00 09 	ashr s2, s6, 23
   2ab4c:	3e 61 00 88 	store_32 s9, 24(sp)
   2ab50:	3e a0 00 88 	store_32 s1, 40(sp)
   2ab54:	5e 50 01 88 	store_32 s2, 84(sp)
   2ab58:	02 80 50 c1 	cmple_i s0, s2, s1
   2ab5c:	9e a0 01 88 	store_32 s4, 104(sp)
   2ab60:	de 80 01 88 	store_32 s6, 96(sp)
   2ab64:	be 70 01 88 	store_32 s5, 92(sp)
   2ab68:	20 01 00 f4 	bnz s0, 36 <P_PathTraverse+0x138>
   2ab6c:	07 00 00 4f 	movehi s0, 7
   2ab70:	39 1c 00 0a 	shr s1, s25, 7
   2ab74:	48 00 00 4f 	movehi s2, 8
   2ab78:	00 fc 7f 00 	or s0, s0, 8191
   2ab7c:	01 00 10 c0 	and s0, s1, s0
   2ab80:	02 03 60 c0 	sub_i s24, s2, s0
   2ab84:	00 04 00 0f 	move s0, 1
   2ab88:	08 00 00 f6 	b 32 <P_PathTraverse+0x154>
   2ab8c:	02 80 30 c1 	cmpge_i s0, s2, s1
   2ab90:	e0 01 00 f4 	bnz s0, 60 <P_PathTraverse+0x178>
   2ab94:	07 00 00 4f 	movehi s0, 7
   2ab98:	39 1c 00 0a 	shr s1, s25, 7
   2ab9c:	00 fc 7f 00 	or s0, s0, 8191
   2aba0:	01 03 10 c0 	and s24, s1, s0
   2aba4:	00 fc ff 0f 	move s0, -1
   2aba8:	1e 00 01 88 	store_32 s0, 64(sp)
   2abac:	06 80 6c c0 	sub_i s0, s6, s25
   2abb0:	20 7c 00 09 	ashr s1, s0, 31
   2abb4:	40 80 50 c0 	add_i s2, s0, s1
   2abb8:	05 80 6d c0 	sub_i s0, s5, s27
   2abbc:	22 80 30 c0 	xor s1, s2, s1
   2abc0:	e3 c4 ff f9 	call -60532 <FixedDiv>
   2abc4:	20 00 f0 c0 	move s1, s0
   2abc8:	04 00 00 f6 	b 16 <P_PathTraverse+0x184>
   2abcc:	00 00 00 0f 	move s0, 0
   2abd0:	1e 00 01 88 	store_32 s0, 64(sp)
   2abd4:	20 00 01 4f 	movehi s1, 2048
   2abd8:	00 00 fc c0 	move s0, s24
   2abdc:	3e 10 01 88 	store_32 s1, 68(sp)
   2abe0:	5b 1f 00 09 	ashr s26, s27, 7
   2abe4:	d4 c4 ff f9 	call -60592 <FixedMul>
   2abe8:	5e 60 01 a8 	load_32 s2, 88(sp)
   2abec:	7e 20 01 a8 	load_32 s3, 72(sp)
   2abf0:	80 00 f0 c0 	move s4, s0
   2abf4:	23 00 51 c1 	cmple_i s1, s3, s2
   2abf8:	21 01 00 f4 	bnz s1, 36 <P_PathTraverse+0x1c8>
   2abfc:	07 00 00 4f 	movehi s0, 7
   2ac00:	9e 40 01 88 	store_32 s4, 80(sp)
   2ac04:	28 00 00 4f 	movehi s1, 8
   2ac08:	00 fc 7f 00 	or s0, s0, 8191
   2ac0c:	1a 00 10 c0 	and s0, s26, s0
   2ac10:	01 03 60 c0 	sub_i s24, s1, s0
   2ac14:	00 04 00 0f 	move s0, 1
   2ac18:	08 00 00 f6 	b 32 <P_PathTraverse+0x1e4>
   2ac1c:	03 00 31 c1 	cmpge_i s0, s3, s2
   2ac20:	40 02 00 f4 	bnz s0, 72 <P_PathTraverse+0x214>
   2ac24:	07 00 00 4f 	movehi s0, 7
   2ac28:	9e 40 01 88 	store_32 s4, 80(sp)
   2ac2c:	00 fc 7f 00 	or s0, s0, 8191
   2ac30:	1a 03 10 c0 	and s24, s26, s0
   2ac34:	00 fc ff 0f 	move s0, -1
   2ac38:	1e c0 00 88 	store_32 s0, 48(sp)
   2ac3c:	7e 80 01 a8 	load_32 s3, 96(sp)
   2ac40:	1e 70 01 a8 	load_32 s0, 92(sp)
   2ac44:	00 80 6d c0 	sub_i s0, s0, s27
   2ac48:	20 7c 00 09 	ashr s1, s0, 31
   2ac4c:	40 80 50 c0 	add_i s2, s0, s1
   2ac50:	03 80 6c c0 	sub_i s0, s3, s25
   2ac54:	22 80 30 c0 	xor s1, s2, s1
   2ac58:	bd c4 ff f9 	call -60684 <FixedDiv>
   2ac5c:	60 03 f0 c0 	move s27, s0
   2ac60:	9e 40 01 a8 	load_32 s4, 80(sp)
   2ac64:	05 00 00 f6 	b 20 <P_PathTraverse+0x224>
   2ac68:	00 00 00 0f 	move s0, 0
   2ac6c:	1e c0 00 88 	store_32 s0, 48(sp)
   2ac70:	08 03 00 4f 	movehi s24, 8
   2ac74:	60 03 01 4f 	movehi s27, 2048
   2ac78:	04 00 5d c0 	add_i s0, s4, s26
   2ac7c:	1e 70 01 88 	store_32 s0, 92(sp)
   2ac80:	00 00 fc c0 	move s0, s24
   2ac84:	20 80 fd c0 	move s1, s27
   2ac88:	39 1f 00 09 	ashr s25, s25, 7
   2ac8c:	aa c4 ff f9 	call -60760 <FixedMul>
   2ac90:	5e a0 01 a8 	load_32 s2, 104(sp)
   2ac94:	20 80 5c c0 	add_i s1, s0, s25
   2ac98:	40 03 00 0f 	move s26, 0
   2ac9c:	02 04 00 01 	and s0, s2, 1
   2aca0:	42 08 00 01 	and s2, s2, 2
   2aca4:	5e 40 01 88 	store_32 s2, 80(sp)
   2aca8:	7e d3 00 88 	store_32 s27, 52(sp)
   2acac:	3e 30 01 88 	store_32 s1, 76(sp)
   2acb0:	40 00 00 f2 	bz s0, 8 <P_PathTraverse+0x264>
   2acb4:	48 00 00 f6 	b 288 <P_PathTraverse+0x380>
   2acb8:	1b 04 00 4f 	movehi s0, 59
   2acbc:	3b 04 00 4f 	movehi s1, 59
   2acc0:	5b 04 00 4f 	movehi s2, 59
   2acc4:	00 90 48 00 	or s0, s0, 4644
   2acc8:	1e a0 01 88 	store_32 s0, 104(sp)
   2accc:	01 60 48 00 	or s0, s1, 4632
   2acd0:	1e 90 01 88 	store_32 s0, 100(sp)
   2acd4:	02 30 48 00 	or s0, s2, 4620
   2acd8:	1e 80 01 88 	store_32 s0, 96(sp)
   2acdc:	5e f3 00 88 	store_32 s26, 60(sp)
   2ace0:	3e a3 00 a8 	load_32 s25, 40(sp)
   2ace4:	7e 63 01 a8 	load_32 s27, 88(sp)
   2ace8:	1e 40 01 a8 	load_32 s0, 80(sp)
   2acec:	20 03 00 f2 	bz s0, 100 <P_PathTraverse+0x2fc>
   2acf0:	1b 80 0c c0 	or s0, s27, s25
   2acf4:	00 00 00 14 	cmplt_i s0, s0, 0
   2acf8:	c0 02 00 f4 	bnz s0, 88 <P_PathTraverse+0x2fc>
   2acfc:	1e a0 01 a8 	load_32 s0, 104(sp)
   2ad00:	00 00 00 a8 	load_32 s0, (s0)
   2ad04:	3e 90 01 a8 	load_32 s1, 100(sp)
   2ad08:	40 80 5c c1 	cmple_i s2, s0, s25
   2ad0c:	21 00 00 a8 	load_32 s1, (s1)
   2ad10:	02 02 00 f4 	bnz s2, 64 <P_PathTraverse+0x2fc>
   2ad14:	21 80 5d c1 	cmple_i s1, s1, s27
   2ad18:	c1 01 00 f4 	bnz s1, 56 <P_PathTraverse+0x2fc>
   2ad1c:	3e 80 01 a8 	load_32 s1, 96(sp)
   2ad20:	00 80 7d c0 	mull_i s0, s0, s27
   2ad24:	00 80 5c c0 	add_i s0, s0, s25
   2ad28:	21 00 00 a8 	load_32 s1, (s1)
   2ad2c:	00 08 00 0b 	shl s0, s0, 2
   2ad30:	01 00 50 c0 	add_i s0, s1, s0
   2ad34:	00 03 00 a8 	load_32 s24, (s0)
   2ad38:	d8 00 00 f2 	bz s24, 24 <P_PathTraverse+0x2fc>
   2ad3c:	00 00 fc c0 	move s0, s24
   2ad40:	35 fe ff f9 	call -1836 <PIT_AddThingIntercepts>
   2ad44:	c0 1a 00 f2 	bz s0, 856 <P_PathTraverse+0x648>
   2ad48:	18 b3 00 a8 	load_32 s24, 44(s24)
   2ad4c:	98 ff ff f5 	bnz s24, -16 <P_PathTraverse+0x2e8>
   2ad50:	1e 50 01 a8 	load_32 s0, 84(sp)
   2ad54:	19 00 10 c1 	cmpne_i s0, s25, s0
   2ad58:	80 00 00 f4 	bnz s0, 16 <P_PathTraverse+0x314>
   2ad5c:	1e 20 01 a8 	load_32 s0, 72(sp)
   2ad60:	1b 00 00 c1 	cmpeq_i s0, s27, s0
   2ad64:	80 13 00 f4 	bnz s0, 624 <P_PathTraverse+0x580>
   2ad68:	7e 70 01 a8 	load_32 s3, 92(sp)
   2ad6c:	03 40 00 09 	ashr s0, s3, 16
   2ad70:	00 80 0d c1 	cmpeq_i s0, s0, s27
   2ad74:	40 00 00 f4 	bnz s0, 8 <P_PathTraverse+0x328>
   2ad78:	0a 00 00 f6 	b 40 <P_PathTraverse+0x34c>
   2ad7c:	1e 10 01 a8 	load_32 s0, 68(sp)
   2ad80:	63 00 50 c0 	add_i s3, s3, s0
   2ad84:	7e 70 01 88 	store_32 s3, 92(sp)
   2ad88:	1e 00 01 a8 	load_32 s0, 64(sp)
   2ad8c:	39 03 50 c0 	add_i s25, s25, s0
   2ad90:	5a 07 00 05 	add_i s26, s26, 1
   2ad94:	1a 00 01 18 	cmplt_u s0, s26, 64
   2ad98:	80 fa ff f5 	bnz s0, -176 <P_PathTraverse+0x294>
   2ad9c:	8e 00 00 f6 	b 568 <P_PathTraverse+0x580>
   2ada0:	7e 30 01 a8 	load_32 s3, 76(sp)
   2ada4:	03 40 00 09 	ashr s0, s3, 16
   2ada8:	00 80 1c c1 	cmpne_i s0, s0, s25
   2adac:	c0 00 00 f4 	bnz s0, 24 <P_PathTraverse+0x370>
   2adb0:	1e d0 00 a8 	load_32 s0, 52(sp)
   2adb4:	63 00 50 c0 	add_i s3, s3, s0
   2adb8:	7e 30 01 88 	store_32 s3, 76(sp)
   2adbc:	1e c0 00 a8 	load_32 s0, 48(sp)
   2adc0:	7b 03 50 c0 	add_i s27, s27, s0
   2adc4:	5a 07 00 05 	add_i s26, s26, 1
   2adc8:	1a 00 01 18 	cmplt_u s0, s26, 64
   2adcc:	e0 f8 ff f5 	bnz s0, -228 <P_PathTraverse+0x294>
   2add0:	81 00 00 f6 	b 516 <P_PathTraverse+0x580>
   2add4:	1b 04 00 4f 	movehi s0, 59
   2add8:	3b 04 00 4f 	movehi s1, 59
   2addc:	5b 04 00 4f 	movehi s2, 59
   2ade0:	00 90 48 00 	or s0, s0, 4644
   2ade4:	1e f0 00 88 	store_32 s0, 60(sp)
   2ade8:	01 60 48 00 	or s0, s1, 4632
   2adec:	1e e0 00 88 	store_32 s0, 56(sp)
   2adf0:	02 40 48 00 	or s0, s2, 4624
   2adf4:	1e 80 00 88 	store_32 s0, 32(sp)
   2adf8:	1b 04 00 4f 	movehi s0, 59
   2adfc:	27 00 00 4f 	movehi s1, 7
   2ae00:	5b 04 00 4f 	movehi s2, 59
   2ae04:	00 50 48 00 	or s0, s0, 4628
   2ae08:	1e 70 00 88 	store_32 s0, 28(sp)
   2ae0c:	01 fc 7f 00 	or s0, s1, 8191
   2ae10:	1e a0 01 88 	store_32 s0, 104(sp)
   2ae14:	02 40 4a 00 	or s0, s2, 4752
   2ae18:	1e 80 01 88 	store_32 s0, 96(sp)
   2ae1c:	3e a0 00 a8 	load_32 s1, 40(sp)
   2ae20:	3e 63 01 a8 	load_32 s25, 88(sp)
   2ae24:	19 80 00 c0 	or s0, s25, s1
   2ae28:	60 83 f0 c0 	move s27, s1
   2ae2c:	00 03 00 14 	cmplt_i s24, s0, 0
   2ae30:	38 09 00 f4 	bnz s24, 292 <P_PathTraverse+0x500>
   2ae34:	3e 63 01 88 	store_32 s25, 88(sp)
   2ae38:	1e f0 00 a8 	load_32 s0, 60(sp)
   2ae3c:	00 00 00 a8 	load_32 s0, (s0)
   2ae40:	3e e0 00 a8 	load_32 s1, 56(sp)
   2ae44:	40 80 5d c1 	cmple_i s2, s0, s27
   2ae48:	21 00 00 a8 	load_32 s1, (s1)
   2ae4c:	e2 04 00 f4 	bnz s2, 156 <P_PathTraverse+0x494>
   2ae50:	5e 60 01 a8 	load_32 s2, 88(sp)
   2ae54:	21 00 51 c1 	cmple_i s1, s1, s2
   2ae58:	81 04 00 f4 	bnz s1, 144 <P_PathTraverse+0x494>
   2ae5c:	3e 60 01 a8 	load_32 s1, 88(sp)
   2ae60:	00 80 70 c0 	mull_i s0, s0, s1
   2ae64:	3e 80 00 a8 	load_32 s1, 32(sp)
   2ae68:	00 80 5d c0 	add_i s0, s0, s27
   2ae6c:	21 00 00 a8 	load_32 s1, (s1)
   2ae70:	00 04 00 0b 	shl s0, s0, 1
   2ae74:	01 00 50 c0 	add_i s0, s1, s0
   2ae78:	00 00 00 a6 	load_s16 s0, (s0)
   2ae7c:	3e 70 00 a8 	load_32 s1, 28(sp)
   2ae80:	00 04 00 0b 	shl s0, s0, 1
   2ae84:	21 00 00 a8 	load_32 s1, (s1)
   2ae88:	21 03 50 c0 	add_i s25, s1, s0
   2ae8c:	19 00 00 a4 	load_u16 s0, (s25)
   2ae90:	3e a0 01 a8 	load_32 s1, 104(sp)
   2ae94:	20 80 00 c1 	cmpeq_i s1, s0, s1
   2ae98:	81 02 00 f4 	bnz s1, 80 <P_PathTraverse+0x494>
   2ae9c:	3e 80 01 a8 	load_32 s1, 96(sp)
   2aea0:	00 00 e0 c1 	sext_16 s0, s0
   2aea4:	00 18 00 0b 	shl s0, s0, 6
   2aea8:	21 00 00 a8 	load_32 s1, (s1)
   2aeac:	01 00 50 c0 	add_i s0, s1, s0
   2aeb0:	40 e0 00 a8 	load_32 s2, 56(s0)
   2aeb4:	3e 90 01 a8 	load_32 s1, 100(sp)
   2aeb8:	21 00 00 a8 	load_32 s1, (s1)
   2aebc:	42 80 00 c1 	cmpeq_i s2, s2, s1
   2aec0:	a2 00 00 f4 	bnz s2, 20 <P_PathTraverse+0x480>
   2aec4:	40 e0 00 05 	add_i s2, s0, 56
   2aec8:	22 00 00 88 	store_32 s1, (s2)
   2aecc:	91 fc ff f9 	call -3516 <PIT_AddLineIntercepts>
   2aed0:	a0 0e 00 f2 	bz s0, 468 <P_PathTraverse+0x650>
   2aed4:	19 08 00 a4 	load_u16 s0, 2(s25)
   2aed8:	39 0b 00 05 	add_i s25, s25, 2
   2aedc:	3e a0 01 a8 	load_32 s1, 104(sp)
   2aee0:	20 80 10 c1 	cmpne_i s1, s0, s1
   2aee4:	c1 fd ff f5 	bnz s1, -72 <P_PathTraverse+0x448>
   2aee8:	3e 63 01 a8 	load_32 s25, 88(sp)
   2aeec:	1e 40 01 a8 	load_32 s0, 80(sp)
   2aef0:	20 03 00 f2 	bz s0, 100 <P_PathTraverse+0x500>
   2aef4:	18 03 00 f4 	bnz s24, 96 <P_PathTraverse+0x500>
   2aef8:	1e f0 00 a8 	load_32 s0, 60(sp)
   2aefc:	00 00 00 a8 	load_32 s0, (s0)
   2af00:	3e e0 00 a8 	load_32 s1, 56(sp)
   2af04:	40 80 5d c1 	cmple_i s2, s0, s27
   2af08:	21 00 00 a8 	load_32 s1, (s1)
   2af0c:	42 02 00 f4 	bnz s2, 72 <P_PathTraverse+0x500>
   2af10:	21 80 5c c1 	cmple_i s1, s1, s25
   2af14:	01 02 00 f4 	bnz s1, 64 <P_PathTraverse+0x500>
   2af18:	3b 04 00 4f 	movehi s1, 59
   2af1c:	00 80 7c c0 	mull_i s0, s0, s25
   2af20:	21 30 48 00 	or s1, s1, 4620
   2af24:	00 80 5d c0 	add_i s0, s0, s27
   2af28:	21 00 00 a8 	load_32 s1, (s1)
   2af2c:	00 08 00 0b 	shl s0, s0, 2
   2af30:	01 00 50 c0 	add_i s0, s1, s0
   2af34:	00 03 00 a8 	load_32 s24, (s0)
   2af38:	f8 00 00 f2 	bz s24, 28 <P_PathTraverse+0x500>
   2af3c:	00 00 fc c0 	move s0, s24
   2af40:	b5 fd ff f9 	call -2348 <PIT_AddThingIntercepts>
   2af44:	00 0b 00 f2 	bz s0, 352 <P_PathTraverse+0x650>
   2af48:	18 b3 00 a8 	load_32 s24, 44(s24)
   2af4c:	58 00 00 f2 	bz s24, 8 <P_PathTraverse+0x500>
   2af50:	fb ff ff f7 	b -20 <P_PathTraverse+0x4e8>
   2af54:	20 80 fd c0 	move s1, s27
   2af58:	1e 50 01 a8 	load_32 s0, 84(sp)
   2af5c:	01 00 10 c1 	cmpne_i s0, s1, s0
   2af60:	80 00 00 f4 	bnz s0, 16 <P_PathTraverse+0x51c>
   2af64:	1e 20 01 a8 	load_32 s0, 72(sp)
   2af68:	19 00 00 c1 	cmpeq_i s0, s25, s0
   2af6c:	40 03 00 f4 	bnz s0, 104 <P_PathTraverse+0x580>
   2af70:	5e 70 01 a8 	load_32 s2, 92(sp)
   2af74:	02 40 00 09 	ashr s0, s2, 16
   2af78:	00 80 1c c1 	cmpne_i s0, s0, s25
   2af7c:	40 01 00 f4 	bnz s0, 40 <P_PathTraverse+0x550>
   2af80:	1e 10 01 a8 	load_32 s0, 68(sp)
   2af84:	42 00 50 c0 	add_i s2, s2, s0
   2af88:	5e 70 01 88 	store_32 s2, 92(sp)
   2af8c:	1e 00 01 a8 	load_32 s0, 64(sp)
   2af90:	21 00 50 c0 	add_i s1, s1, s0
   2af94:	5a 07 00 05 	add_i s26, s26, 1
   2af98:	1a 00 01 18 	cmplt_u s0, s26, 64
   2af9c:	40 f4 ff f5 	bnz s0, -376 <P_PathTraverse+0x3d0>
   2afa0:	0d 00 00 f6 	b 52 <P_PathTraverse+0x580>
   2afa4:	5e 30 01 a8 	load_32 s2, 76(sp)
   2afa8:	02 40 00 09 	ashr s0, s2, 16
   2afac:	00 80 10 c1 	cmpne_i s0, s0, s1
   2afb0:	c0 00 00 f4 	bnz s0, 24 <P_PathTraverse+0x574>
   2afb4:	1e d0 00 a8 	load_32 s0, 52(sp)
   2afb8:	42 00 50 c0 	add_i s2, s2, s0
   2afbc:	5e 30 01 88 	store_32 s2, 76(sp)
   2afc0:	1e c0 00 a8 	load_32 s0, 48(sp)
   2afc4:	39 03 50 c0 	add_i s25, s25, s0
   2afc8:	5a 07 00 05 	add_i s26, s26, 1
   2afcc:	1a 00 01 18 	cmplt_u s0, s26, 64
   2afd0:	a0 f2 ff f5 	bnz s0, -428 <P_PathTraverse+0x3d0>
   2afd4:	1e b0 00 a8 	load_32 s0, 44(sp)
   2afd8:	c0 00 00 a8 	load_32 s6, (s0)
   2afdc:	00 04 00 0f 	move s0, 1
   2afe0:	9e 60 00 a8 	load_32 s4, 24(sp)
   2afe4:	26 00 62 c0 	sub_i s1, s6, s4
   2afe8:	01 06 00 f2 	bz s1, 192 <P_PathTraverse+0x654>
   2afec:	46 00 92 c1 	cmple_u s2, s6, s4
   2aff0:	c2 05 00 f4 	bnz s2, 184 <P_PathTraverse+0x654>
   2aff4:	55 a8 aa 4f 	movehi s2, 349525
   2aff8:	1e f0 00 88 	store_32 s0, 60(sp)
   2affc:	7f fc 7f 4f 	movehi s3, 262143
   2b000:	21 08 00 09 	ashr s1, s1, 2
   2b004:	42 ac 2a 00 	or s2, s2, 2731
   2b008:	00 03 00 0f 	move s24, 0
   2b00c:	41 03 71 c0 	mull_i s26, s1, s2
   2b010:	63 ff 7f 00 	or s27, s3, 8191
   2b014:	08 00 00 4f 	movehi s0, 8
   2b018:	1e a0 01 88 	store_32 s0, 104(sp)
   2b01c:	1e 93 01 88 	store_32 s24, 100(sp)
   2b020:	40 00 fc c0 	move s2, s24
   2b024:	20 03 f2 c0 	move s25, s4
   2b028:	20 00 f2 c0 	move s1, s4
   2b02c:	80 80 fd c0 	move s4, s27
   2b030:	61 00 00 a8 	load_32 s3, (s1)
   2b034:	a3 00 42 c1 	cmplt_i s5, s3, s4
   2b038:	45 00 00 f4 	bnz s5, 8 <P_PathTraverse+0x5ec>
   2b03c:	60 00 f2 c0 	move s3, s4
   2b040:	00 83 f0 c0 	move s24, s1
   2b044:	45 00 00 f4 	bnz s5, 8 <P_PathTraverse+0x5f8>
   2b048:	00 03 f1 c0 	move s24, s2
   2b04c:	21 30 00 05 	add_i s1, s1, 12
   2b050:	40 00 fc c0 	move s2, s24
   2b054:	80 80 f1 c0 	move s4, s3
   2b058:	a1 00 83 c1 	cmplt_u s5, s1, s6
   2b05c:	a5 fe ff f5 	bnz s5, -44 <P_PathTraverse+0x5dc>
   2b060:	1e a0 01 a8 	load_32 s0, 104(sp)
   2b064:	03 00 20 c1 	cmpgt_i s0, s3, s0
   2b068:	a0 01 00 f4 	bnz s0, 52 <P_PathTraverse+0x648>
   2b06c:	00 00 fc c0 	move s0, s24
   2b070:	3e 90 00 a8 	load_32 s1, 36(sp)
   2b074:	21 00 00 fc 	call s1
   2b078:	60 02 00 f2 	bz s0, 76 <P_PathTraverse+0x670>
   2b07c:	5a ff ff 05 	add_i s26, s26, -1
   2b080:	78 03 00 88 	store_32 s27, (s24)
   2b084:	da 00 00 f2 	bz s26, 24 <P_PathTraverse+0x648>
   2b088:	1e b0 00 a8 	load_32 s0, 44(sp)
   2b08c:	c0 00 00 a8 	load_32 s6, (s0)
   2b090:	80 80 fc c0 	move s4, s25
   2b094:	26 00 62 c1 	cmpgt_u s1, s6, s4
   2b098:	41 fc ff f5 	bnz s1, -120 <P_PathTraverse+0x5cc>
   2b09c:	1e f0 00 a8 	load_32 s0, 60(sp)
   2b0a0:	02 00 00 f6 	b 8 <P_PathTraverse+0x654>
   2b0a4:	00 00 00 0f 	move s0, 0
   2b0a8:	fe b3 01 a8 	load_32 ra, 108(sp)
   2b0ac:	7e c3 01 a8 	load_32 s27, 112(sp)
   2b0b0:	5e d3 01 a8 	load_32 s26, 116(sp)
   2b0b4:	3e e3 01 a8 	load_32 s25, 120(sp)
   2b0b8:	1e f3 01 a8 	load_32 s24, 124(sp)
   2b0bc:	de 03 02 05 	add_i sp, sp, 128
   2b0c0:	1f 00 00 f0 	ret
   2b0c4:	1e 90 01 a8 	load_32 s0, 100(sp)
   2b0c8:	f8 ff ff f7 	b -32 <P_PathTraverse+0x654>

000000000002b0cc T_PlatRaise:
   2b0cc:	de 03 ff 05 	add_i sp, sp, -64
   2b0d0:	1e f3 00 88 	store_32 s24, 60(sp)
   2b0d4:	3e e3 00 88 	store_32 s25, 56(sp)
   2b0d8:	5e d3 00 88 	store_32 s26, 52(sp)
   2b0dc:	fe c3 00 88 	store_32 ra, 48(sp)
   2b0e0:	00 03 f0 c0 	move s24, s0
   2b0e4:	18 90 00 a8 	load_32 s0, 36(s24)
   2b0e8:	20 08 00 10 	cmpeq_i s1, s0, 2
   2b0ec:	c1 06 00 f4 	bnz s1, 216 <T_PlatRaise+0xf8>
   2b0f0:	20 04 00 10 	cmpeq_i s1, s0, 1
   2b0f4:	61 04 00 f4 	bnz s1, 140 <T_PlatRaise+0xb4>
   2b0f8:	60 0a 00 f4 	bnz s0, 332 <T_PlatRaise+0x178>
   2b0fc:	20 07 00 0f 	move s25, 1
   2b100:	18 30 00 a8 	load_32 s0, 12(s24)
   2b104:	38 40 00 a8 	load_32 s1, 16(s24)
   2b108:	80 00 00 0f 	move s4, 0
   2b10c:	58 60 00 a8 	load_32 s2, 24(s24)
   2b110:	78 b0 00 a8 	load_32 s3, 44(s24)
   2b114:	a0 80 fc c0 	move s5, s25
   2b118:	a6 e7 ff f9 	call -24936 <T_MovePlane>
   2b11c:	38 d0 00 a8 	load_32 s1, 52(s24)
   2b120:	40 03 f0 c0 	move s26, s0
   2b124:	21 f8 ff 01 	and s1, s1, -2
   2b128:	21 08 00 11 	cmpne_i s1, s1, 2
   2b12c:	41 01 00 f4 	bnz s1, 40 <T_PlatRaise+0x88>
   2b130:	1c 04 00 4f 	movehi s0, 60
   2b134:	00 40 02 00 	or s0, s0, 144
   2b138:	00 00 00 a0 	load_u8 s0, (s0)
   2b13c:	00 1c 00 01 	and s0, s0, 7
   2b140:	a0 00 00 f4 	bnz s0, 20 <T_PlatRaise+0x88>
   2b144:	18 30 00 a8 	load_32 s0, 12(s24)
   2b148:	20 58 00 0f 	move s1, 22
   2b14c:	00 b0 00 05 	add_i s0, s0, 44
   2b150:	a5 84 00 f8 	call 135828 <S_StartSound>
   2b154:	1a 08 00 10 	cmpeq_i s0, s26, 2
   2b158:	20 05 00 f4 	bnz s0, 164 <T_PlatRaise+0x130>
   2b15c:	1a 04 00 11 	cmpne_i s0, s26, 1
   2b160:	20 07 00 f4 	bnz s0, 228 <T_PlatRaise+0x178>
   2b164:	18 b0 00 a8 	load_32 s0, 44(s24)
   2b168:	e0 06 00 f4 	bnz s0, 220 <T_PlatRaise+0x178>
   2b16c:	18 70 00 a8 	load_32 s0, 28(s24)
   2b170:	18 80 00 88 	store_32 s0, 32(s24)
   2b174:	38 93 00 88 	store_32 s25, 36(s24)
   2b178:	18 30 00 a8 	load_32 s0, 12(s24)
   2b17c:	1c 00 00 f6 	b 112 <T_PlatRaise+0x120>
   2b180:	60 00 00 0f 	move s3, 0
   2b184:	18 30 00 a8 	load_32 s0, 12(s24)
   2b188:	38 40 00 a8 	load_32 s1, 16(s24)
   2b18c:	a0 fc ff 0f 	move s5, -1
   2b190:	58 50 00 a8 	load_32 s2, 20(s24)
   2b194:	80 80 f1 c0 	move s4, s3
   2b198:	86 e7 ff f9 	call -25064 <T_MovePlane>
   2b19c:	00 08 00 11 	cmpne_i s0, s0, 2
   2b1a0:	20 05 00 f4 	bnz s0, 164 <T_PlatRaise+0x178>
   2b1a4:	18 70 00 a8 	load_32 s0, 28(s24)
   2b1a8:	20 4c 00 0f 	move s1, 19
   2b1ac:	18 80 00 88 	store_32 s0, 32(s24)
   2b1b0:	00 08 00 0f 	move s0, 2
   2b1b4:	18 90 00 88 	store_32 s0, 36(s24)
   2b1b8:	18 30 00 a8 	load_32 s0, 12(s24)
   2b1bc:	00 b0 00 05 	add_i s0, s0, 44
   2b1c0:	0d 00 00 f6 	b 52 <T_PlatRaise+0x128>
   2b1c4:	18 80 00 a8 	load_32 s0, 32(s24)
   2b1c8:	00 fc ff 05 	add_i s0, s0, -1
   2b1cc:	18 80 00 88 	store_32 s0, 32(s24)
   2b1d0:	a0 03 00 f4 	bnz s0, 116 <T_PlatRaise+0x178>
   2b1d4:	18 30 00 a8 	load_32 s0, 12(s24)
   2b1d8:	20 00 00 a8 	load_32 s1, (s0)
   2b1dc:	58 50 00 a8 	load_32 s2, 20(s24)
   2b1e0:	21 00 11 c1 	cmpne_i s1, s1, s2
   2b1e4:	21 04 00 01 	and s1, s1, 1
   2b1e8:	38 90 00 88 	store_32 s1, 36(s24)
   2b1ec:	00 b0 00 05 	add_i s0, s0, 44
   2b1f0:	20 48 00 0f 	move s1, 18
   2b1f4:	7c 84 00 f8 	call 135664 <S_StartSound>
   2b1f8:	13 00 00 f6 	b 76 <T_PlatRaise+0x178>
   2b1fc:	18 70 00 a8 	load_32 s0, 28(s24)
   2b200:	20 4c 00 0f 	move s1, 19
   2b204:	18 80 00 88 	store_32 s0, 32(s24)
   2b208:	00 08 00 0f 	move s0, 2
   2b20c:	18 90 00 88 	store_32 s0, 36(s24)
   2b210:	18 30 00 a8 	load_32 s0, 12(s24)
   2b214:	00 b0 00 05 	add_i s0, s0, 44
   2b218:	73 84 00 f8 	call 135628 <S_StartSound>
   2b21c:	18 d0 00 a8 	load_32 s0, 52(s24)
   2b220:	20 f8 ff 05 	add_i s1, s0, -2
   2b224:	21 08 00 18 	cmplt_u s1, s1, 2
   2b228:	a1 00 00 f4 	bnz s1, 20 <T_PlatRaise+0x170>
   2b22c:	20 10 00 10 	cmpeq_i s1, s0, 4
   2b230:	61 00 00 f4 	bnz s1, 12 <T_PlatRaise+0x170>
   2b234:	00 04 00 11 	cmpne_i s0, s0, 1
   2b238:	60 00 00 f4 	bnz s0, 12 <T_PlatRaise+0x178>
   2b23c:	00 00 fc c0 	move s0, s24
   2b240:	07 00 00 f8 	call 28 <P_RemoveActivePlat>
   2b244:	fe c3 00 a8 	load_32 ra, 48(sp)
   2b248:	5e d3 00 a8 	load_32 s26, 52(sp)
   2b24c:	3e e3 00 a8 	load_32 s25, 56(sp)
   2b250:	1e f3 00 a8 	load_32 s24, 60(sp)
   2b254:	de 03 01 05 	add_i sp, sp, 64
   2b258:	1f 00 00 f0 	ret

000000000002b25c P_RemoveActivePlat:
   2b25c:	de 03 fe 05 	add_i sp, sp, -128
   2b260:	1e f3 01 88 	store_32 s24, 124(sp)
   2b264:	3e e3 01 88 	store_32 s25, 120(sp)
   2b268:	fe d3 01 88 	store_32 ra, 116(sp)
   2b26c:	3b 04 00 4f 	movehi s1, 59
   2b270:	01 23 46 00 	or s24, s1, 4488
   2b274:	58 00 00 a8 	load_32 s2, (s24)
   2b278:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b27c:	02 13 00 f4 	bnz s2, 608 <P_RemoveActivePlat+0x280>
   2b280:	21 20 46 00 	or s1, s1, 4488
   2b284:	41 10 00 a8 	load_32 s2, 4(s1)
   2b288:	42 00 10 c1 	cmpne_i s2, s2, s0
   2b28c:	42 00 00 f4 	bnz s2, 8 <P_RemoveActivePlat+0x38>
   2b290:	5a 00 00 f6 	b 360 <P_RemoveActivePlat+0x19c>
   2b294:	41 20 00 a8 	load_32 s2, 8(s1)
   2b298:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b29c:	22 0b 00 f4 	bnz s2, 356 <P_RemoveActivePlat+0x1a4>
   2b2a0:	41 30 00 a8 	load_32 s2, 12(s1)
   2b2a4:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b2a8:	02 0b 00 f4 	bnz s2, 352 <P_RemoveActivePlat+0x1ac>
   2b2ac:	41 40 00 a8 	load_32 s2, 16(s1)
   2b2b0:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b2b4:	e2 0a 00 f4 	bnz s2, 348 <P_RemoveActivePlat+0x1b4>
   2b2b8:	41 50 00 a8 	load_32 s2, 20(s1)
   2b2bc:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b2c0:	c2 0a 00 f4 	bnz s2, 344 <P_RemoveActivePlat+0x1bc>
   2b2c4:	41 60 00 a8 	load_32 s2, 24(s1)
   2b2c8:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b2cc:	a2 0a 00 f4 	bnz s2, 340 <P_RemoveActivePlat+0x1c4>
   2b2d0:	41 70 00 a8 	load_32 s2, 28(s1)
   2b2d4:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b2d8:	82 0a 00 f4 	bnz s2, 336 <P_RemoveActivePlat+0x1cc>
   2b2dc:	41 80 00 a8 	load_32 s2, 32(s1)
   2b2e0:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b2e4:	62 0a 00 f4 	bnz s2, 332 <P_RemoveActivePlat+0x1d4>
   2b2e8:	41 90 00 a8 	load_32 s2, 36(s1)
   2b2ec:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b2f0:	42 0a 00 f4 	bnz s2, 328 <P_RemoveActivePlat+0x1dc>
   2b2f4:	41 a0 00 a8 	load_32 s2, 40(s1)
   2b2f8:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b2fc:	22 0a 00 f4 	bnz s2, 324 <P_RemoveActivePlat+0x1e4>
   2b300:	41 b0 00 a8 	load_32 s2, 44(s1)
   2b304:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b308:	02 0a 00 f4 	bnz s2, 320 <P_RemoveActivePlat+0x1ec>
   2b30c:	41 c0 00 a8 	load_32 s2, 48(s1)
   2b310:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b314:	e2 09 00 f4 	bnz s2, 316 <P_RemoveActivePlat+0x1f4>
   2b318:	41 d0 00 a8 	load_32 s2, 52(s1)
   2b31c:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b320:	c2 09 00 f4 	bnz s2, 312 <P_RemoveActivePlat+0x1fc>
   2b324:	41 e0 00 a8 	load_32 s2, 56(s1)
   2b328:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b32c:	a2 09 00 f4 	bnz s2, 308 <P_RemoveActivePlat+0x204>
   2b330:	41 f0 00 a8 	load_32 s2, 60(s1)
   2b334:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b338:	82 09 00 f4 	bnz s2, 304 <P_RemoveActivePlat+0x20c>
   2b33c:	41 00 01 a8 	load_32 s2, 64(s1)
   2b340:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b344:	62 09 00 f4 	bnz s2, 300 <P_RemoveActivePlat+0x214>
   2b348:	41 10 01 a8 	load_32 s2, 68(s1)
   2b34c:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b350:	42 09 00 f4 	bnz s2, 296 <P_RemoveActivePlat+0x21c>
   2b354:	41 20 01 a8 	load_32 s2, 72(s1)
   2b358:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b35c:	22 09 00 f4 	bnz s2, 292 <P_RemoveActivePlat+0x224>
   2b360:	41 30 01 a8 	load_32 s2, 76(s1)
   2b364:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b368:	02 09 00 f4 	bnz s2, 288 <P_RemoveActivePlat+0x22c>
   2b36c:	41 40 01 a8 	load_32 s2, 80(s1)
   2b370:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b374:	e2 08 00 f4 	bnz s2, 284 <P_RemoveActivePlat+0x234>
   2b378:	41 50 01 a8 	load_32 s2, 84(s1)
   2b37c:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b380:	c2 08 00 f4 	bnz s2, 280 <P_RemoveActivePlat+0x23c>
   2b384:	41 60 01 a8 	load_32 s2, 88(s1)
   2b388:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b38c:	a2 08 00 f4 	bnz s2, 276 <P_RemoveActivePlat+0x244>
   2b390:	41 70 01 a8 	load_32 s2, 92(s1)
   2b394:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b398:	82 08 00 f4 	bnz s2, 272 <P_RemoveActivePlat+0x24c>
   2b39c:	41 80 01 a8 	load_32 s2, 96(s1)
   2b3a0:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b3a4:	62 08 00 f4 	bnz s2, 268 <P_RemoveActivePlat+0x254>
   2b3a8:	41 90 01 a8 	load_32 s2, 100(s1)
   2b3ac:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b3b0:	42 08 00 f4 	bnz s2, 264 <P_RemoveActivePlat+0x25c>
   2b3b4:	41 a0 01 a8 	load_32 s2, 104(s1)
   2b3b8:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b3bc:	22 08 00 f4 	bnz s2, 260 <P_RemoveActivePlat+0x264>
   2b3c0:	41 b0 01 a8 	load_32 s2, 108(s1)
   2b3c4:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b3c8:	02 08 00 f4 	bnz s2, 256 <P_RemoveActivePlat+0x26c>
   2b3cc:	41 c0 01 a8 	load_32 s2, 112(s1)
   2b3d0:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b3d4:	e2 07 00 f4 	bnz s2, 252 <P_RemoveActivePlat+0x274>
   2b3d8:	41 d0 01 a8 	load_32 s2, 116(s1)
   2b3dc:	42 00 00 c1 	cmpeq_i s2, s2, s0
   2b3e0:	c2 07 00 f4 	bnz s2, 248 <P_RemoveActivePlat+0x27c>
   2b3e4:	01 00 00 4f 	movehi s0, 1
   2b3e8:	00 08 23 00 	or s0, s0, 2242
   2b3ec:	1e 00 00 88 	store_32 s0, (sp)
   2b3f0:	45 8b ff f9 	call -119532 <I_Error>
   2b3f4:	40 00 00 f6 	b 256 <P_RemoveActivePlat+0x298>
   2b3f8:	01 13 00 05 	add_i s24, s1, 4
   2b3fc:	38 00 00 f6 	b 224 <P_RemoveActivePlat+0x280>
   2b400:	01 23 00 05 	add_i s24, s1, 8
   2b404:	36 00 00 f6 	b 216 <P_RemoveActivePlat+0x280>
   2b408:	01 33 00 05 	add_i s24, s1, 12
   2b40c:	34 00 00 f6 	b 208 <P_RemoveActivePlat+0x280>
   2b410:	01 43 00 05 	add_i s24, s1, 16
   2b414:	32 00 00 f6 	b 200 <P_RemoveActivePlat+0x280>
   2b418:	01 53 00 05 	add_i s24, s1, 20
   2b41c:	30 00 00 f6 	b 192 <P_RemoveActivePlat+0x280>
   2b420:	01 63 00 05 	add_i s24, s1, 24
   2b424:	2e 00 00 f6 	b 184 <P_RemoveActivePlat+0x280>
   2b428:	01 73 00 05 	add_i s24, s1, 28
   2b42c:	2c 00 00 f6 	b 176 <P_RemoveActivePlat+0x280>
   2b430:	01 83 00 05 	add_i s24, s1, 32
   2b434:	2a 00 00 f6 	b 168 <P_RemoveActivePlat+0x280>
   2b438:	01 93 00 05 	add_i s24, s1, 36
   2b43c:	28 00 00 f6 	b 160 <P_RemoveActivePlat+0x280>
   2b440:	01 a3 00 05 	add_i s24, s1, 40
   2b444:	26 00 00 f6 	b 152 <P_RemoveActivePlat+0x280>
   2b448:	01 b3 00 05 	add_i s24, s1, 44
   2b44c:	24 00 00 f6 	b 144 <P_RemoveActivePlat+0x280>
   2b450:	01 c3 00 05 	add_i s24, s1, 48
   2b454:	22 00 00 f6 	b 136 <P_RemoveActivePlat+0x280>
   2b458:	01 d3 00 05 	add_i s24, s1, 52
   2b45c:	20 00 00 f6 	b 128 <P_RemoveActivePlat+0x280>
   2b460:	01 e3 00 05 	add_i s24, s1, 56
   2b464:	1e 00 00 f6 	b 120 <P_RemoveActivePlat+0x280>
   2b468:	01 f3 00 05 	add_i s24, s1, 60
   2b46c:	1c 00 00 f6 	b 112 <P_RemoveActivePlat+0x280>
   2b470:	01 03 01 05 	add_i s24, s1, 64
   2b474:	1a 00 00 f6 	b 104 <P_RemoveActivePlat+0x280>
   2b478:	01 13 01 05 	add_i s24, s1, 68
   2b47c:	18 00 00 f6 	b 96 <P_RemoveActivePlat+0x280>
   2b480:	01 23 01 05 	add_i s24, s1, 72
   2b484:	16 00 00 f6 	b 88 <P_RemoveActivePlat+0x280>
   2b488:	01 33 01 05 	add_i s24, s1, 76
   2b48c:	14 00 00 f6 	b 80 <P_RemoveActivePlat+0x280>
   2b490:	01 43 01 05 	add_i s24, s1, 80
   2b494:	12 00 00 f6 	b 72 <P_RemoveActivePlat+0x280>
   2b498:	01 53 01 05 	add_i s24, s1, 84
   2b49c:	10 00 00 f6 	b 64 <P_RemoveActivePlat+0x280>
   2b4a0:	01 63 01 05 	add_i s24, s1, 88
   2b4a4:	0e 00 00 f6 	b 56 <P_RemoveActivePlat+0x280>
   2b4a8:	01 73 01 05 	add_i s24, s1, 92
   2b4ac:	0c 00 00 f6 	b 48 <P_RemoveActivePlat+0x280>
   2b4b0:	01 83 01 05 	add_i s24, s1, 96
   2b4b4:	0a 00 00 f6 	b 40 <P_RemoveActivePlat+0x280>
   2b4b8:	01 93 01 05 	add_i s24, s1, 100
   2b4bc:	08 00 00 f6 	b 32 <P_RemoveActivePlat+0x280>
   2b4c0:	01 a3 01 05 	add_i s24, s1, 104
   2b4c4:	06 00 00 f6 	b 24 <P_RemoveActivePlat+0x280>
   2b4c8:	01 b3 01 05 	add_i s24, s1, 108
   2b4cc:	04 00 00 f6 	b 16 <P_RemoveActivePlat+0x280>
   2b4d0:	01 c3 01 05 	add_i s24, s1, 112
   2b4d4:	02 00 00 f6 	b 8 <P_RemoveActivePlat+0x280>
   2b4d8:	01 d3 01 05 	add_i s24, s1, 116
   2b4dc:	00 30 00 a8 	load_32 s0, 12(s0)
   2b4e0:	20 03 00 0f 	move s25, 0
   2b4e4:	20 33 01 88 	store_32 s25, 76(s0)
   2b4e8:	18 00 00 a8 	load_32 s0, (s24)
   2b4ec:	93 21 00 f8 	call 34380 <P_RemoveThinker>
   2b4f0:	38 03 00 88 	store_32 s25, (s24)
   2b4f4:	fe d3 01 a8 	load_32 ra, 116(sp)
   2b4f8:	3e e3 01 a8 	load_32 s25, 120(sp)
   2b4fc:	1e f3 01 a8 	load_32 s24, 124(sp)
   2b500:	de 03 02 05 	add_i sp, sp, 128
   2b504:	1f 00 00 f0 	ret

000000000002b508 EV_DoPlat:
   2b508:	de 03 fe 05 	add_i sp, sp, -128
   2b50c:	1e f3 01 88 	store_32 s24, 124(sp)
   2b510:	3e e3 01 88 	store_32 s25, 120(sp)
   2b514:	5e d3 01 88 	store_32 s26, 116(sp)
   2b518:	7e c3 01 88 	store_32 s27, 112(sp)
   2b51c:	fe b3 01 88 	store_32 ra, 108(sp)
   2b520:	20 03 f0 c0 	move s25, s0
   2b524:	3e 90 01 88 	store_32 s1, 100(sp)
   2b528:	e1 02 00 f4 	bnz s1, 92 <EV_DoPlat+0x7c>
   2b52c:	7b 04 00 4f 	movehi s3, 59
   2b530:	19 50 00 a6 	load_s16 s0, 20(s25)
   2b534:	95 00 00 4f 	movehi s4, 21
   2b538:	20 00 00 0f 	move s1, 0
   2b53c:	63 20 46 00 	or s3, s3, 4488
   2b540:	84 30 43 00 	or s4, s4, 4300
   2b544:	a1 08 00 0b 	shl s5, s1, 2
   2b548:	a3 80 52 c0 	add_i s5, s3, s5
   2b54c:	a5 00 00 a8 	load_32 s5, (s5)
   2b550:	45 01 00 f2 	bz s5, 40 <EV_DoPlat+0x70>
   2b554:	c5 c0 00 a8 	load_32 s6, 48(s5)
   2b558:	c6 00 10 c1 	cmpne_i s6, s6, s0
   2b55c:	e6 00 00 f4 	bnz s6, 28 <EV_DoPlat+0x70>
   2b560:	c5 90 00 a8 	load_32 s6, 36(s5)
   2b564:	c6 0c 00 11 	cmpne_i s6, s6, 3
   2b568:	86 00 00 f4 	bnz s6, 16 <EV_DoPlat+0x70>
   2b56c:	c5 a0 00 a8 	load_32 s6, 40(s5)
   2b570:	c5 90 00 88 	store_32 s6, 36(s5)
   2b574:	85 20 00 88 	store_32 s4, 8(s5)
   2b578:	21 04 00 05 	add_i s1, s1, 1
   2b57c:	a1 78 00 18 	cmplt_u s5, s1, 30
   2b580:	25 fe ff f5 	bnz s5, -60 <EV_DoPlat+0x3c>
   2b584:	02 40 00 0b 	shl s0, s2, 16
   2b588:	1e b0 00 88 	store_32 s0, 44(sp)
   2b58c:	1b 04 00 4f 	movehi s0, 59
   2b590:	20 e0 00 0f 	move s1, 56
   2b594:	3e 60 01 88 	store_32 s1, 88(sp)
   2b598:	20 cc 00 0f 	move s1, 51
   2b59c:	3e 50 01 88 	store_32 s1, 84(sp)
   2b5a0:	00 83 4b 00 	or s24, s0, 4832
   2b5a4:	15 00 00 4f 	movehi s0, 21
   2b5a8:	60 ff ff 0f 	move s27, -1
   2b5ac:	40 00 00 0f 	move s2, 0
   2b5b0:	00 30 43 00 	or s0, s0, 4300
   2b5b4:	1e 40 01 88 	store_32 s0, 80(sp)
   2b5b8:	3e 90 01 a8 	load_32 s1, 100(sp)
   2b5bc:	03 00 00 4f 	movehi s0, 3
   2b5c0:	00 80 44 00 	or s0, s0, 4384
   2b5c4:	21 10 00 16 	cmpgt_u s1, s1, 4
   2b5c8:	3e 30 01 88 	store_32 s1, 76(sp)
   2b5cc:	20 04 00 0f 	move s1, 1
   2b5d0:	3e 70 01 88 	store_32 s1, 92(sp)
   2b5d4:	1e 10 01 88 	store_32 s0, 68(sp)
   2b5d8:	08 00 00 4f 	movehi s0, 8
   2b5dc:	1e 90 00 88 	store_32 s0, 36(sp)
   2b5e0:	00 a4 01 0f 	move s0, 105
   2b5e4:	1e 00 01 88 	store_32 s0, 64(sp)
   2b5e8:	00 48 00 0f 	move s0, 18
   2b5ec:	1e f0 00 88 	store_32 s0, 60(sp)
   2b5f0:	1b 04 00 4f 	movehi s0, 59
   2b5f4:	20 04 00 4f 	movehi s1, 32
   2b5f8:	3e 80 00 88 	store_32 s1, 32(sp)
   2b5fc:	24 00 00 4f 	movehi s1, 4
   2b600:	3e e0 00 88 	store_32 s1, 56(sp)
   2b604:	00 a0 4b 00 	or s0, s0, 4840
   2b608:	1e d0 00 88 	store_32 s0, 52(sp)
   2b60c:	00 58 00 0f 	move s0, 22
   2b610:	1e c0 00 88 	store_32 s0, 48(sp)
   2b614:	00 08 00 4f 	movehi s0, 64
   2b618:	1e a0 00 88 	store_32 s0, 40(sp)
   2b61c:	5e 80 01 88 	store_32 s2, 96(sp)
   2b620:	5e a0 01 88 	store_32 s2, 104(sp)
   2b624:	05 00 00 f6 	b 20 <EV_DoPlat+0x130>
   2b628:	00 00 f1 c0 	move s0, s2
   2b62c:	a5 00 00 f8 	call 660 <P_AddActivePlat>
   2b630:	1e 70 01 a8 	load_32 s0, 92(sp)
   2b634:	1e a0 01 88 	store_32 s0, 104(sp)
   2b638:	00 80 fc c0 	move s0, s25
   2b63c:	20 80 fd c0 	move s1, s27
   2b640:	1b 13 00 f8 	call 19564 <P_FindSectorFromLineTag>
   2b644:	60 03 f0 c0 	move s27, s0
   2b648:	1b 00 00 14 	cmplt_i s0, s27, 0
   2b64c:	e0 0f 00 f4 	bnz s0, 508 <EV_DoPlat+0x340>
   2b650:	18 00 00 a8 	load_32 s0, (s24)
   2b654:	3b 60 01 07 	mull_i s1, s27, 88
   2b658:	40 83 50 c0 	add_i s26, s0, s1
   2b65c:	1a 30 01 a8 	load_32 s0, 76(s26)
   2b660:	c0 fe ff f5 	bnz s0, -40 <EV_DoPlat+0x130>
   2b664:	1a 30 01 05 	add_i s0, s26, 76
   2b668:	1e 20 01 88 	store_32 s0, 72(sp)
   2b66c:	1e 60 01 a8 	load_32 s0, 88(sp)
   2b670:	3e 50 01 a8 	load_32 s1, 84(sp)
   2b674:	5e 80 01 a8 	load_32 s2, 96(sp)
   2b678:	98 84 00 f8 	call 135776 <Z_Malloc>
   2b67c:	1e a0 01 88 	store_32 s0, 104(sp)
   2b680:	26 21 00 f8 	call 33944 <P_AddThinker>
   2b684:	5e a0 01 a8 	load_32 s2, 104(sp)
   2b688:	1e 90 01 a8 	load_32 s0, 100(sp)
   2b68c:	02 d0 00 88 	store_32 s0, 52(s2)
   2b690:	42 33 00 88 	store_32 s26, 12(s2)
   2b694:	1e 20 01 a8 	load_32 s0, 72(sp)
   2b698:	40 00 00 88 	store_32 s2, (s0)
   2b69c:	1e 40 01 a8 	load_32 s0, 80(sp)
   2b6a0:	02 20 00 88 	store_32 s0, 8(s2)
   2b6a4:	1e 80 01 a8 	load_32 s0, 96(sp)
   2b6a8:	02 b0 00 88 	store_32 s0, 44(s2)
   2b6ac:	19 50 00 a6 	load_s16 s0, 20(s25)
   2b6b0:	02 c0 00 88 	store_32 s0, 48(s2)
   2b6b4:	1e 30 01 a8 	load_32 s0, 76(sp)
   2b6b8:	80 fb ff f5 	bnz s0, -144 <EV_DoPlat+0x120>
   2b6bc:	1e 90 01 a8 	load_32 s0, 100(sp)
   2b6c0:	3e 10 01 a8 	load_32 s1, 68(sp)
   2b6c4:	00 08 00 0b 	shl s0, s0, 2
   2b6c8:	00 80 50 c0 	add_i s0, s0, s1
   2b6cc:	00 00 00 a8 	load_32 s0, (s0)
   2b6d0:	00 00 00 f0 	b s0
   2b6d4:	1e 90 00 a8 	load_32 s0, 36(sp)
   2b6d8:	02 40 00 88 	store_32 s0, 16(s2)
   2b6dc:	00 00 fd c0 	move s0, s26
   2b6e0:	33 12 00 f8 	call 18636 <P_FindLowestFloorSurrounding>
   2b6e4:	7e a0 01 a8 	load_32 s3, 104(sp)
   2b6e8:	03 50 00 88 	store_32 s0, 20(s3)
   2b6ec:	3a 00 00 a8 	load_32 s1, (s26)
   2b6f0:	40 80 20 c1 	cmpgt_i s2, s0, s1
   2b6f4:	42 00 00 f4 	bnz s2, 8 <EV_DoPlat+0x1f4>
   2b6f8:	20 00 f0 c0 	move s1, s0
   2b6fc:	23 50 00 88 	store_32 s1, 20(s3)
   2b700:	00 00 fd c0 	move s0, s26
   2b704:	49 12 00 f8 	call 18724 <P_FindHighestFloorSurrounding>
   2b708:	7e a0 01 a8 	load_32 s3, 104(sp)
   2b70c:	03 60 00 88 	store_32 s0, 24(s3)
   2b710:	3a 00 00 a8 	load_32 s1, (s26)
   2b714:	40 80 40 c1 	cmplt_i s2, s0, s1
   2b718:	42 00 00 f4 	bnz s2, 8 <EV_DoPlat+0x218>
   2b71c:	20 00 f0 c0 	move s1, s0
   2b720:	23 60 00 88 	store_32 s1, 24(s3)
   2b724:	1e 00 01 a8 	load_32 s0, 64(sp)
   2b728:	03 70 00 88 	store_32 s0, 28(s3)
   2b72c:	f2 c2 ff f9 	call -62520 <P_Random>
   2b730:	3e a0 01 a8 	load_32 s1, 104(sp)
   2b734:	00 04 00 01 	and s0, s0, 1
   2b738:	01 90 00 88 	store_32 s0, 36(s1)
   2b73c:	3e 00 00 f6 	b 248 <EV_DoPlat+0x32c>
   2b740:	1e e0 00 a8 	load_32 s0, 56(sp)
   2b744:	02 40 00 88 	store_32 s0, 16(s2)
   2b748:	1e d0 00 a8 	load_32 s0, 52(sp)
   2b74c:	00 00 00 a8 	load_32 s0, (s0)
   2b750:	39 58 00 a6 	load_s16 s1, 22(s25)
   2b754:	21 50 00 07 	mull_i s1, s1, 20
   2b758:	00 80 50 c0 	add_i s0, s0, s1
   2b75c:	00 40 00 a8 	load_32 s0, 16(s0)
   2b760:	00 20 00 a6 	load_s16 s0, 8(s0)
   2b764:	1a 20 00 86 	store_16 s0, 8(s26)
   2b768:	1a 00 00 a8 	load_32 s0, (s26)
   2b76c:	3e b0 00 a8 	load_32 s1, 44(sp)
   2b770:	00 80 50 c0 	add_i s0, s0, s1
   2b774:	02 60 00 88 	store_32 s0, 24(s2)
   2b778:	1e 80 01 a8 	load_32 s0, 96(sp)
   2b77c:	02 70 00 88 	store_32 s0, 28(s2)
   2b780:	02 90 00 88 	store_32 s0, 36(s2)
   2b784:	16 00 00 f6 	b 88 <EV_DoPlat+0x2d4>
   2b788:	1e e0 00 a8 	load_32 s0, 56(sp)
   2b78c:	02 40 00 88 	store_32 s0, 16(s2)
   2b790:	1e d0 00 a8 	load_32 s0, 52(sp)
   2b794:	00 00 00 a8 	load_32 s0, (s0)
   2b798:	39 58 00 a6 	load_s16 s1, 22(s25)
   2b79c:	21 50 00 07 	mull_i s1, s1, 20
   2b7a0:	00 80 50 c0 	add_i s0, s0, s1
   2b7a4:	00 40 00 a8 	load_32 s0, 16(s0)
   2b7a8:	00 20 00 a6 	load_s16 s0, 8(s0)
   2b7ac:	1a 20 00 86 	store_16 s0, 8(s26)
   2b7b0:	3a 00 00 a8 	load_32 s1, (s26)
   2b7b4:	00 00 fd c0 	move s0, s26
   2b7b8:	3e 12 00 f8 	call 18680 <P_FindNextHighestFloor>
   2b7bc:	3e a0 01 a8 	load_32 s1, 104(sp)
   2b7c0:	01 60 00 88 	store_32 s0, 24(s1)
   2b7c4:	1e 80 01 a8 	load_32 s0, 96(sp)
   2b7c8:	3e a0 01 a8 	load_32 s1, 104(sp)
   2b7cc:	01 70 00 88 	store_32 s0, 28(s1)
   2b7d0:	3e a0 01 a8 	load_32 s1, 104(sp)
   2b7d4:	01 90 00 88 	store_32 s0, 36(s1)
   2b7d8:	1a 38 00 86 	store_16 s0, 14(s26)
   2b7dc:	1a b0 00 05 	add_i s0, s26, 44
   2b7e0:	3e c0 00 a8 	load_32 s1, 48(sp)
   2b7e4:	16 00 00 f6 	b 88 <EV_DoPlat+0x334>
   2b7e8:	1e a0 00 a8 	load_32 s0, 40(sp)
   2b7ec:	02 00 00 f6 	b 8 <EV_DoPlat+0x2ec>
   2b7f0:	1e 80 00 a8 	load_32 s0, 32(sp)
   2b7f4:	02 40 00 88 	store_32 s0, 16(s2)
   2b7f8:	00 00 fd c0 	move s0, s26
   2b7fc:	ec 11 00 f8 	call 18352 <P_FindLowestFloorSurrounding>
   2b800:	7e a0 01 a8 	load_32 s3, 104(sp)
   2b804:	03 50 00 88 	store_32 s0, 20(s3)
   2b808:	3a 00 00 a8 	load_32 s1, (s26)
   2b80c:	40 80 20 c1 	cmpgt_i s2, s0, s1
   2b810:	42 00 00 f4 	bnz s2, 8 <EV_DoPlat+0x310>
   2b814:	20 00 f0 c0 	move s1, s0
   2b818:	23 50 00 88 	store_32 s1, 20(s3)
   2b81c:	1a 00 00 a8 	load_32 s0, (s26)
   2b820:	03 60 00 88 	store_32 s0, 24(s3)
   2b824:	1e 00 01 a8 	load_32 s0, 64(sp)
   2b828:	03 70 00 88 	store_32 s0, 28(s3)
   2b82c:	1e 70 01 a8 	load_32 s0, 92(sp)
   2b830:	03 90 00 88 	store_32 s0, 36(s3)
   2b834:	3e f0 00 a8 	load_32 s1, 60(sp)
   2b838:	1a b0 00 05 	add_i s0, s26, 44
   2b83c:	ea 82 00 f8 	call 134056 <S_StartSound>
   2b840:	5e a0 01 a8 	load_32 s2, 104(sp)
   2b844:	79 ff ff f7 	b -540 <EV_DoPlat+0x120>
   2b848:	1e a0 01 a8 	load_32 s0, 104(sp)
   2b84c:	fe b3 01 a8 	load_32 ra, 108(sp)
   2b850:	7e c3 01 a8 	load_32 s27, 112(sp)
   2b854:	5e d3 01 a8 	load_32 s26, 116(sp)
   2b858:	3e e3 01 a8 	load_32 s25, 120(sp)
   2b85c:	1e f3 01 a8 	load_32 s24, 124(sp)
   2b860:	de 03 02 05 	add_i sp, sp, 128
   2b864:	1f 00 00 f0 	ret

000000000002b868 P_ActivateInStasis:
   2b868:	5b 04 00 4f 	movehi s2, 59
   2b86c:	75 00 00 4f 	movehi s3, 21
   2b870:	20 00 00 0f 	move s1, 0
   2b874:	42 20 46 00 	or s2, s2, 4488
   2b878:	63 30 43 00 	or s3, s3, 4300
   2b87c:	81 08 00 0b 	shl s4, s1, 2
   2b880:	82 00 52 c0 	add_i s4, s2, s4
   2b884:	84 00 00 a8 	load_32 s4, (s4)
   2b888:	44 01 00 f2 	bz s4, 40 <P_ActivateInStasis+0x48>
   2b88c:	a4 c0 00 a8 	load_32 s5, 48(s4)
   2b890:	a5 00 10 c1 	cmpne_i s5, s5, s0
   2b894:	e5 00 00 f4 	bnz s5, 28 <P_ActivateInStasis+0x48>
   2b898:	a4 90 00 a8 	load_32 s5, 36(s4)
   2b89c:	a5 0c 00 11 	cmpne_i s5, s5, 3
   2b8a0:	85 00 00 f4 	bnz s5, 16 <P_ActivateInStasis+0x48>
   2b8a4:	a4 a0 00 a8 	load_32 s5, 40(s4)
   2b8a8:	a4 90 00 88 	store_32 s5, 36(s4)
   2b8ac:	64 20 00 88 	store_32 s3, 8(s4)
   2b8b0:	21 04 00 05 	add_i s1, s1, 1
   2b8b4:	81 78 00 18 	cmplt_u s4, s1, 30
   2b8b8:	24 fe ff f5 	bnz s4, -60 <P_ActivateInStasis+0x14>
   2b8bc:	1f 00 00 f0 	ret

000000000002b8c0 P_AddActivePlat:
   2b8c0:	de 03 fe 05 	add_i sp, sp, -128
   2b8c4:	fe f3 01 88 	store_32 ra, 124(sp)
   2b8c8:	5b 04 00 4f 	movehi s2, 59
   2b8cc:	22 20 46 00 	or s1, s2, 4488
   2b8d0:	61 00 00 a8 	load_32 s3, (s1)
   2b8d4:	23 1a 00 f2 	bz s3, 836 <P_AddActivePlat+0x358>
   2b8d8:	22 20 46 00 	or s1, s2, 4488
   2b8dc:	41 10 00 a8 	load_32 s2, 4(s1)
   2b8e0:	42 00 00 f4 	bnz s2, 8 <P_AddActivePlat+0x28>
   2b8e4:	40 00 00 f6 	b 256 <P_AddActivePlat+0x124>
   2b8e8:	41 20 00 a8 	load_32 s2, 8(s1)
   2b8ec:	62 08 00 f2 	bz s2, 268 <P_AddActivePlat+0x138>
   2b8f0:	41 30 00 a8 	load_32 s2, 12(s1)
   2b8f4:	c2 08 00 f2 	bz s2, 280 <P_AddActivePlat+0x14c>
   2b8f8:	41 40 00 a8 	load_32 s2, 16(s1)
   2b8fc:	22 09 00 f2 	bz s2, 292 <P_AddActivePlat+0x160>
   2b900:	41 50 00 a8 	load_32 s2, 20(s1)
   2b904:	82 09 00 f2 	bz s2, 304 <P_AddActivePlat+0x174>
   2b908:	41 60 00 a8 	load_32 s2, 24(s1)
   2b90c:	e2 09 00 f2 	bz s2, 316 <P_AddActivePlat+0x188>
   2b910:	41 70 00 a8 	load_32 s2, 28(s1)
   2b914:	42 0a 00 f2 	bz s2, 328 <P_AddActivePlat+0x19c>
   2b918:	41 80 00 a8 	load_32 s2, 32(s1)
   2b91c:	a2 0a 00 f2 	bz s2, 340 <P_AddActivePlat+0x1b0>
   2b920:	41 90 00 a8 	load_32 s2, 36(s1)
   2b924:	02 0b 00 f2 	bz s2, 352 <P_AddActivePlat+0x1c4>
   2b928:	41 a0 00 a8 	load_32 s2, 40(s1)
   2b92c:	62 0b 00 f2 	bz s2, 364 <P_AddActivePlat+0x1d8>
   2b930:	41 b0 00 a8 	load_32 s2, 44(s1)
   2b934:	c2 0b 00 f2 	bz s2, 376 <P_AddActivePlat+0x1ec>
   2b938:	41 c0 00 a8 	load_32 s2, 48(s1)
   2b93c:	22 0c 00 f2 	bz s2, 388 <P_AddActivePlat+0x200>
   2b940:	41 d0 00 a8 	load_32 s2, 52(s1)
   2b944:	82 0c 00 f2 	bz s2, 400 <P_AddActivePlat+0x214>
   2b948:	41 e0 00 a8 	load_32 s2, 56(s1)
   2b94c:	e2 0c 00 f2 	bz s2, 412 <P_AddActivePlat+0x228>
   2b950:	41 f0 00 a8 	load_32 s2, 60(s1)
   2b954:	42 0d 00 f2 	bz s2, 424 <P_AddActivePlat+0x23c>
   2b958:	41 00 01 a8 	load_32 s2, 64(s1)
   2b95c:	a2 0d 00 f2 	bz s2, 436 <P_AddActivePlat+0x250>
   2b960:	41 10 01 a8 	load_32 s2, 68(s1)
   2b964:	02 0e 00 f2 	bz s2, 448 <P_AddActivePlat+0x264>
   2b968:	41 20 01 a8 	load_32 s2, 72(s1)
   2b96c:	62 0e 00 f2 	bz s2, 460 <P_AddActivePlat+0x278>
   2b970:	41 30 01 a8 	load_32 s2, 76(s1)
   2b974:	c2 0e 00 f2 	bz s2, 472 <P_AddActivePlat+0x28c>
   2b978:	41 40 01 a8 	load_32 s2, 80(s1)
   2b97c:	22 0f 00 f2 	bz s2, 484 <P_AddActivePlat+0x2a0>
   2b980:	41 50 01 a8 	load_32 s2, 84(s1)
   2b984:	82 0f 00 f2 	bz s2, 496 <P_AddActivePlat+0x2b4>
   2b988:	41 60 01 a8 	load_32 s2, 88(s1)
   2b98c:	e2 0f 00 f2 	bz s2, 508 <P_AddActivePlat+0x2c8>
   2b990:	41 70 01 a8 	load_32 s2, 92(s1)
   2b994:	42 10 00 f2 	bz s2, 520 <P_AddActivePlat+0x2dc>
   2b998:	41 80 01 a8 	load_32 s2, 96(s1)
   2b99c:	a2 10 00 f2 	bz s2, 532 <P_AddActivePlat+0x2f0>
   2b9a0:	41 90 01 a8 	load_32 s2, 100(s1)
   2b9a4:	02 11 00 f2 	bz s2, 544 <P_AddActivePlat+0x304>
   2b9a8:	41 a0 01 a8 	load_32 s2, 104(s1)
   2b9ac:	62 11 00 f2 	bz s2, 556 <P_AddActivePlat+0x318>
   2b9b0:	41 b0 01 a8 	load_32 s2, 108(s1)
   2b9b4:	c2 11 00 f2 	bz s2, 568 <P_AddActivePlat+0x32c>
   2b9b8:	41 c0 01 a8 	load_32 s2, 112(s1)
   2b9bc:	22 12 00 f2 	bz s2, 580 <P_AddActivePlat+0x340>
   2b9c0:	41 d0 01 a8 	load_32 s2, 116(s1)
   2b9c4:	82 12 00 f2 	bz s2, 592 <P_AddActivePlat+0x354>
   2b9c8:	00 00 00 4f 	movehi s0, 0
   2b9cc:	00 a8 2e 00 	or s0, s0, 2986
   2b9d0:	1e 00 00 88 	store_32 s0, (sp)
   2b9d4:	cc 89 ff f9 	call -121040 <I_Error>
   2b9d8:	fe f3 01 a8 	load_32 ra, 124(sp)
   2b9dc:	de 03 02 05 	add_i sp, sp, 128
   2b9e0:	1f 00 00 f0 	ret
   2b9e4:	21 10 00 05 	add_i s1, s1, 4
   2b9e8:	01 00 00 88 	store_32 s0, (s1)
   2b9ec:	fe f3 01 a8 	load_32 ra, 124(sp)
   2b9f0:	de 03 02 05 	add_i sp, sp, 128
   2b9f4:	1f 00 00 f0 	ret
   2b9f8:	21 20 00 05 	add_i s1, s1, 8
   2b9fc:	01 00 00 88 	store_32 s0, (s1)
   2ba00:	fe f3 01 a8 	load_32 ra, 124(sp)
   2ba04:	de 03 02 05 	add_i sp, sp, 128
   2ba08:	1f 00 00 f0 	ret
   2ba0c:	21 30 00 05 	add_i s1, s1, 12
   2ba10:	01 00 00 88 	store_32 s0, (s1)
   2ba14:	fe f3 01 a8 	load_32 ra, 124(sp)
   2ba18:	de 03 02 05 	add_i sp, sp, 128
   2ba1c:	1f 00 00 f0 	ret
   2ba20:	21 40 00 05 	add_i s1, s1, 16
   2ba24:	01 00 00 88 	store_32 s0, (s1)
   2ba28:	fe f3 01 a8 	load_32 ra, 124(sp)
   2ba2c:	de 03 02 05 	add_i sp, sp, 128
   2ba30:	1f 00 00 f0 	ret
   2ba34:	21 50 00 05 	add_i s1, s1, 20
   2ba38:	01 00 00 88 	store_32 s0, (s1)
   2ba3c:	fe f3 01 a8 	load_32 ra, 124(sp)
   2ba40:	de 03 02 05 	add_i sp, sp, 128
   2ba44:	1f 00 00 f0 	ret
   2ba48:	21 60 00 05 	add_i s1, s1, 24
   2ba4c:	01 00 00 88 	store_32 s0, (s1)
   2ba50:	fe f3 01 a8 	load_32 ra, 124(sp)
   2ba54:	de 03 02 05 	add_i sp, sp, 128
   2ba58:	1f 00 00 f0 	ret
   2ba5c:	21 70 00 05 	add_i s1, s1, 28
   2ba60:	01 00 00 88 	store_32 s0, (s1)
   2ba64:	fe f3 01 a8 	load_32 ra, 124(sp)
   2ba68:	de 03 02 05 	add_i sp, sp, 128
   2ba6c:	1f 00 00 f0 	ret
   2ba70:	21 80 00 05 	add_i s1, s1, 32
   2ba74:	01 00 00 88 	store_32 s0, (s1)
   2ba78:	fe f3 01 a8 	load_32 ra, 124(sp)
   2ba7c:	de 03 02 05 	add_i sp, sp, 128
   2ba80:	1f 00 00 f0 	ret
   2ba84:	21 90 00 05 	add_i s1, s1, 36
   2ba88:	01 00 00 88 	store_32 s0, (s1)
   2ba8c:	fe f3 01 a8 	load_32 ra, 124(sp)
   2ba90:	de 03 02 05 	add_i sp, sp, 128
   2ba94:	1f 00 00 f0 	ret
   2ba98:	21 a0 00 05 	add_i s1, s1, 40
   2ba9c:	01 00 00 88 	store_32 s0, (s1)
   2baa0:	fe f3 01 a8 	load_32 ra, 124(sp)
   2baa4:	de 03 02 05 	add_i sp, sp, 128
   2baa8:	1f 00 00 f0 	ret
   2baac:	21 b0 00 05 	add_i s1, s1, 44
   2bab0:	01 00 00 88 	store_32 s0, (s1)
   2bab4:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bab8:	de 03 02 05 	add_i sp, sp, 128
   2babc:	1f 00 00 f0 	ret
   2bac0:	21 c0 00 05 	add_i s1, s1, 48
   2bac4:	01 00 00 88 	store_32 s0, (s1)
   2bac8:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bacc:	de 03 02 05 	add_i sp, sp, 128
   2bad0:	1f 00 00 f0 	ret
   2bad4:	21 d0 00 05 	add_i s1, s1, 52
   2bad8:	01 00 00 88 	store_32 s0, (s1)
   2badc:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bae0:	de 03 02 05 	add_i sp, sp, 128
   2bae4:	1f 00 00 f0 	ret
   2bae8:	21 e0 00 05 	add_i s1, s1, 56
   2baec:	01 00 00 88 	store_32 s0, (s1)
   2baf0:	fe f3 01 a8 	load_32 ra, 124(sp)
   2baf4:	de 03 02 05 	add_i sp, sp, 128
   2baf8:	1f 00 00 f0 	ret
   2bafc:	21 f0 00 05 	add_i s1, s1, 60
   2bb00:	01 00 00 88 	store_32 s0, (s1)
   2bb04:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bb08:	de 03 02 05 	add_i sp, sp, 128
   2bb0c:	1f 00 00 f0 	ret
   2bb10:	21 00 01 05 	add_i s1, s1, 64
   2bb14:	01 00 00 88 	store_32 s0, (s1)
   2bb18:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bb1c:	de 03 02 05 	add_i sp, sp, 128
   2bb20:	1f 00 00 f0 	ret
   2bb24:	21 10 01 05 	add_i s1, s1, 68
   2bb28:	01 00 00 88 	store_32 s0, (s1)
   2bb2c:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bb30:	de 03 02 05 	add_i sp, sp, 128
   2bb34:	1f 00 00 f0 	ret
   2bb38:	21 20 01 05 	add_i s1, s1, 72
   2bb3c:	01 00 00 88 	store_32 s0, (s1)
   2bb40:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bb44:	de 03 02 05 	add_i sp, sp, 128
   2bb48:	1f 00 00 f0 	ret
   2bb4c:	21 30 01 05 	add_i s1, s1, 76
   2bb50:	01 00 00 88 	store_32 s0, (s1)
   2bb54:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bb58:	de 03 02 05 	add_i sp, sp, 128
   2bb5c:	1f 00 00 f0 	ret
   2bb60:	21 40 01 05 	add_i s1, s1, 80
   2bb64:	01 00 00 88 	store_32 s0, (s1)
   2bb68:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bb6c:	de 03 02 05 	add_i sp, sp, 128
   2bb70:	1f 00 00 f0 	ret
   2bb74:	21 50 01 05 	add_i s1, s1, 84
   2bb78:	01 00 00 88 	store_32 s0, (s1)
   2bb7c:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bb80:	de 03 02 05 	add_i sp, sp, 128
   2bb84:	1f 00 00 f0 	ret
   2bb88:	21 60 01 05 	add_i s1, s1, 88
   2bb8c:	01 00 00 88 	store_32 s0, (s1)
   2bb90:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bb94:	de 03 02 05 	add_i sp, sp, 128
   2bb98:	1f 00 00 f0 	ret
   2bb9c:	21 70 01 05 	add_i s1, s1, 92
   2bba0:	01 00 00 88 	store_32 s0, (s1)
   2bba4:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bba8:	de 03 02 05 	add_i sp, sp, 128
   2bbac:	1f 00 00 f0 	ret
   2bbb0:	21 80 01 05 	add_i s1, s1, 96
   2bbb4:	01 00 00 88 	store_32 s0, (s1)
   2bbb8:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bbbc:	de 03 02 05 	add_i sp, sp, 128
   2bbc0:	1f 00 00 f0 	ret
   2bbc4:	21 90 01 05 	add_i s1, s1, 100
   2bbc8:	01 00 00 88 	store_32 s0, (s1)
   2bbcc:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bbd0:	de 03 02 05 	add_i sp, sp, 128
   2bbd4:	1f 00 00 f0 	ret
   2bbd8:	21 a0 01 05 	add_i s1, s1, 104
   2bbdc:	01 00 00 88 	store_32 s0, (s1)
   2bbe0:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bbe4:	de 03 02 05 	add_i sp, sp, 128
   2bbe8:	1f 00 00 f0 	ret
   2bbec:	21 b0 01 05 	add_i s1, s1, 108
   2bbf0:	01 00 00 88 	store_32 s0, (s1)
   2bbf4:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bbf8:	de 03 02 05 	add_i sp, sp, 128
   2bbfc:	1f 00 00 f0 	ret
   2bc00:	21 c0 01 05 	add_i s1, s1, 112
   2bc04:	01 00 00 88 	store_32 s0, (s1)
   2bc08:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bc0c:	de 03 02 05 	add_i sp, sp, 128
   2bc10:	1f 00 00 f0 	ret
   2bc14:	21 d0 01 05 	add_i s1, s1, 116
   2bc18:	01 00 00 88 	store_32 s0, (s1)
   2bc1c:	fe f3 01 a8 	load_32 ra, 124(sp)
   2bc20:	de 03 02 05 	add_i sp, sp, 128
   2bc24:	1f 00 00 f0 	ret

000000000002bc28 EV_StopPlat:
   2bc28:	5b 04 00 4f 	movehi s2, 59
   2bc2c:	20 00 00 0f 	move s1, 0
   2bc30:	60 0c 00 0f 	move s3, 3
   2bc34:	42 20 46 00 	or s2, s2, 4488
   2bc38:	80 80 f0 c0 	move s4, s1
   2bc3c:	a4 08 00 0b 	shl s5, s4, 2
   2bc40:	a2 80 52 c0 	add_i s5, s2, s5
   2bc44:	a5 00 00 a8 	load_32 s5, (s5)
   2bc48:	65 01 00 f2 	bz s5, 44 <EV_StopPlat+0x4c>
   2bc4c:	c5 90 00 a8 	load_32 s6, 36(s5)
   2bc50:	e6 0c 00 10 	cmpeq_i s7, s6, 3
   2bc54:	07 01 00 f4 	bnz s7, 32 <EV_StopPlat+0x4c>
   2bc58:	e5 c0 00 a8 	load_32 s7, 48(s5)
   2bc5c:	00 51 00 a6 	load_s16 s8, 20(s0)
   2bc60:	e7 00 14 c1 	cmpne_i s7, s7, s8
   2bc64:	87 00 00 f4 	bnz s7, 16 <EV_StopPlat+0x4c>
   2bc68:	c5 a0 00 88 	store_32 s6, 40(s5)
   2bc6c:	65 90 00 88 	store_32 s3, 36(s5)
   2bc70:	25 20 00 88 	store_32 s1, 8(s5)
   2bc74:	84 04 00 05 	add_i s4, s4, 1
   2bc78:	a4 78 00 18 	cmplt_u s5, s4, 30
   2bc7c:	05 fe ff f5 	bnz s5, -64 <EV_StopPlat+0x14>
   2bc80:	1f 00 00 f0 	ret

000000000002bc84 P_SetPsprite:
   2bc84:	de 03 ff 05 	add_i sp, sp, -64
   2bc88:	1e f3 00 88 	store_32 s24, 60(sp)
   2bc8c:	3e e3 00 88 	store_32 s25, 56(sp)
   2bc90:	5e d3 00 88 	store_32 s26, 52(sp)
   2bc94:	7e c3 00 88 	store_32 s27, 48(sp)
   2bc98:	fe b3 00 88 	store_32 ra, 44(sp)
   2bc9c:	00 03 f0 c0 	move s24, s0
   2bca0:	01 10 00 0b 	shl s0, s1, 4
   2bca4:	34 04 00 4f 	movehi s1, 52
   2bca8:	18 00 50 c0 	add_i s0, s24, s0
   2bcac:	61 23 5c 00 	or s27, s1, 5896
   2bcb0:	20 d3 03 05 	add_i s25, s0, 244
   2bcb4:	40 e3 03 05 	add_i s26, s0, 248
   2bcb8:	60 f0 03 05 	add_i s3, s0, 252
   2bcbc:	7e a0 00 88 	store_32 s3, 40(sp)
   2bcc0:	00 00 04 05 	add_i s0, s0, 256
   2bcc4:	1e 90 00 88 	store_32 s0, 36(sp)
   2bcc8:	42 00 00 f4 	bnz s2, 8 <P_SetPsprite+0x4c>
   2bccc:	1c 00 00 f6 	b 112 <P_SetPsprite+0xb8>
   2bcd0:	42 70 00 07 	mull_i s2, s2, 28
   2bcd4:	1b 00 51 c0 	add_i s0, s27, s2
   2bcd8:	19 00 00 88 	store_32 s0, (s25)
   2bcdc:	20 20 00 a8 	load_32 s1, 8(s0)
   2bce0:	3a 00 00 88 	store_32 s1, (s26)
   2bce4:	60 50 00 a8 	load_32 s3, 20(s0)
   2bce8:	23 01 00 f2 	bz s3, 36 <P_SetPsprite+0x88>
   2bcec:	be a0 00 a8 	load_32 s5, 40(sp)
   2bcf0:	9b 00 51 c0 	add_i s4, s27, s2
   2bcf4:	63 40 00 0b 	shl s3, s3, 16
   2bcf8:	65 00 00 88 	store_32 s3, (s5)
   2bcfc:	64 60 00 a8 	load_32 s3, 24(s4)
   2bd00:	9e 90 00 a8 	load_32 s4, 36(sp)
   2bd04:	63 40 00 0b 	shl s3, s3, 16
   2bd08:	64 00 00 88 	store_32 s3, (s4)
   2bd0c:	5b 00 51 c0 	add_i s2, s27, s2
   2bd10:	42 30 00 a8 	load_32 s2, 12(s2)
   2bd14:	e2 00 00 f2 	bz s2, 28 <P_SetPsprite+0xac>
   2bd18:	00 00 fc c0 	move s0, s24
   2bd1c:	20 80 fc c0 	move s1, s25
   2bd20:	42 00 00 fc 	call s2
   2bd24:	19 00 00 a8 	load_32 s0, (s25)
   2bd28:	e0 00 00 f2 	bz s0, 28 <P_SetPsprite+0xc0>
   2bd2c:	3a 00 00 a8 	load_32 s1, (s26)
   2bd30:	40 40 00 a8 	load_32 s2, 16(s0)
   2bd34:	a1 fc ff f3 	bz s1, -108 <P_SetPsprite+0x44>
   2bd38:	03 00 00 f6 	b 12 <P_SetPsprite+0xc0>
   2bd3c:	00 00 00 0f 	move s0, 0
   2bd40:	19 00 00 88 	store_32 s0, (s25)
   2bd44:	fe b3 00 a8 	load_32 ra, 44(sp)
   2bd48:	7e c3 00 a8 	load_32 s27, 48(sp)
   2bd4c:	5e d3 00 a8 	load_32 s26, 52(sp)
   2bd50:	3e e3 00 a8 	load_32 s25, 56(sp)
   2bd54:	1e f3 00 a8 	load_32 s24, 60(sp)
   2bd58:	de 03 01 05 	add_i sp, sp, 64
   2bd5c:	1f 00 00 f0 	ret

000000000002bd60 P_CalcSwing:
   2bd60:	de 03 ff 05 	add_i sp, sp, -64
   2bd64:	1e f3 00 88 	store_32 s24, 60(sp)
   2bd68:	3e e3 00 88 	store_32 s25, 56(sp)
   2bd6c:	fe d3 00 88 	store_32 ra, 52(sp)
   2bd70:	3c 04 00 4f 	movehi s1, 60
   2bd74:	00 70 00 a8 	load_32 s0, 28(s0)
   2bd78:	4d 04 00 4f 	movehi s2, 45
   2bd7c:	01 43 02 00 	or s24, s1, 144
   2bd80:	22 93 41 00 	or s25, s2, 4196
   2bd84:	38 00 00 a8 	load_32 s1, (s24)
   2bd88:	21 d4 01 07 	mull_i s1, s1, 117
   2bd8c:	21 fc 7f 01 	and s1, s1, 8191
   2bd90:	21 08 00 0b 	shl s1, s1, 2
   2bd94:	39 80 50 c0 	add_i s1, s25, s1
   2bd98:	21 00 00 a8 	load_32 s1, (s1)
   2bd9c:	66 c0 ff f9 	call -65128 <FixedMul>
   2bda0:	3b 04 00 4f 	movehi s1, 59
   2bda4:	21 10 48 00 	or s1, s1, 4612
   2bda8:	01 00 00 88 	store_32 s0, (s1)
   2bdac:	38 00 00 a8 	load_32 s1, (s24)
   2bdb0:	21 d4 01 07 	mull_i s1, s1, 117
   2bdb4:	21 00 40 05 	add_i s1, s1, 4096
   2bdb8:	21 fc 7f 01 	and s1, s1, 8191
   2bdbc:	21 08 00 0b 	shl s1, s1, 2
   2bdc0:	39 80 50 c0 	add_i s1, s25, s1
   2bdc4:	21 00 00 a8 	load_32 s1, (s1)
   2bdc8:	5b c0 ff f9 	call -65172 <FixedMul>
   2bdcc:	3b 04 00 4f 	movehi s1, 59
   2bdd0:	40 00 00 0f 	move s2, 0
   2bdd4:	21 20 48 00 	or s1, s1, 4616
   2bdd8:	02 00 60 c0 	sub_i s0, s2, s0
   2bddc:	01 00 00 88 	store_32 s0, (s1)
   2bde0:	fe d3 00 a8 	load_32 ra, 52(sp)
   2bde4:	3e e3 00 a8 	load_32 s25, 56(sp)
   2bde8:	1e f3 00 a8 	load_32 s24, 60(sp)
   2bdec:	de 03 01 05 	add_i sp, sp, 64
   2bdf0:	1f 00 00 f0 	ret

000000000002bdf4 P_BringUpWeapon:
   2bdf4:	de 03 ff 05 	add_i sp, sp, -64
   2bdf8:	1e f3 00 88 	store_32 s24, 60(sp)
   2bdfc:	3e e3 00 88 	store_32 s25, 56(sp)
   2be00:	5e d3 00 88 	store_32 s26, 52(sp)
   2be04:	fe c3 00 88 	store_32 ra, 48(sp)
   2be08:	00 03 f0 c0 	move s24, s0
   2be0c:	18 d0 01 a8 	load_32 s0, 116(s24)
   2be10:	20 28 00 11 	cmpne_i s1, s0, 10
   2be14:	61 00 00 f4 	bnz s1, 12 <P_BringUpWeapon+0x2c>
   2be18:	18 c0 01 a8 	load_32 s0, 112(s24)
   2be1c:	18 d0 01 88 	store_32 s0, 116(s24)
   2be20:	20 1c 00 11 	cmpne_i s1, s0, 7
   2be24:	a1 00 00 f4 	bnz s1, 20 <P_BringUpWeapon+0x44>
   2be28:	18 00 00 a8 	load_32 s0, (s24)
   2be2c:	20 28 00 0f 	move s1, 10
   2be30:	6d 81 00 f8 	call 132532 <S_StartSound>
   2be34:	18 d0 01 a8 	load_32 s0, 116(s24)
   2be38:	33 04 00 4f 	movehi s1, 51
   2be3c:	00 60 00 07 	mull_i s0, s0, 24
   2be40:	38 d3 03 05 	add_i s25, s24, 244
   2be44:	21 70 45 00 	or s1, s1, 4444
   2be48:	40 80 00 4f 	movehi s2, 1024
   2be4c:	01 00 50 c0 	add_i s0, s1, s0
   2be50:	20 28 00 0f 	move s1, 10
   2be54:	00 10 00 a8 	load_32 s0, 4(s0)
   2be58:	38 d0 01 88 	store_32 s1, 116(s24)
   2be5c:	34 04 00 4f 	movehi s1, 52
   2be60:	58 00 04 88 	store_32 s2, 256(s24)
   2be64:	41 23 5c 00 	or s26, s1, 5896
   2be68:	40 00 00 f4 	bnz s0, 8 <P_BringUpWeapon+0x7c>
   2be6c:	1a 00 00 f6 	b 104 <P_BringUpWeapon+0xe0>
   2be70:	40 70 00 07 	mull_i s2, s0, 28
   2be74:	1a 00 51 c0 	add_i s0, s26, s2
   2be78:	18 d0 03 88 	store_32 s0, 244(s24)
   2be7c:	20 20 00 a8 	load_32 s1, 8(s0)
   2be80:	38 e0 03 88 	store_32 s1, 248(s24)
   2be84:	60 50 00 a8 	load_32 s3, 20(s0)
   2be88:	e3 00 00 f2 	bz s3, 28 <P_BringUpWeapon+0xb0>
   2be8c:	9a 00 51 c0 	add_i s4, s26, s2
   2be90:	63 40 00 0b 	shl s3, s3, 16
   2be94:	78 f0 03 88 	store_32 s3, 252(s24)
   2be98:	64 60 00 a8 	load_32 s3, 24(s4)
   2be9c:	63 40 00 0b 	shl s3, s3, 16
   2bea0:	78 00 04 88 	store_32 s3, 256(s24)
   2bea4:	5a 00 51 c0 	add_i s2, s26, s2
   2bea8:	42 30 00 a8 	load_32 s2, 12(s2)
   2beac:	e2 00 00 f2 	bz s2, 28 <P_BringUpWeapon+0xd4>
   2beb0:	00 00 fc c0 	move s0, s24
   2beb4:	20 80 fc c0 	move s1, s25
   2beb8:	42 00 00 fc 	call s2
   2bebc:	18 d0 03 a8 	load_32 s0, 244(s24)
   2bec0:	e0 00 00 f2 	bz s0, 28 <P_BringUpWeapon+0xe8>
   2bec4:	38 e0 03 a8 	load_32 s1, 248(s24)
   2bec8:	00 40 00 a8 	load_32 s0, 16(s0)
   2becc:	e1 fc ff f3 	bz s1, -100 <P_BringUpWeapon+0x74>
   2bed0:	03 00 00 f6 	b 12 <P_BringUpWeapon+0xe8>
   2bed4:	00 00 00 0f 	move s0, 0
   2bed8:	19 00 00 88 	store_32 s0, (s25)
   2bedc:	fe c3 00 a8 	load_32 ra, 48(sp)
   2bee0:	5e d3 00 a8 	load_32 s26, 52(sp)
   2bee4:	3e e3 00 a8 	load_32 s25, 56(sp)
   2bee8:	1e f3 00 a8 	load_32 s24, 60(sp)
   2beec:	de 03 01 05 	add_i sp, sp, 64
   2bef0:	1f 00 00 f0 	ret

000000000002bef4 P_CheckAmmo:
   2bef4:	de 03 ff 05 	add_i sp, sp, -64
   2bef8:	1e f3 00 88 	store_32 s24, 60(sp)
   2befc:	3e e3 00 88 	store_32 s25, 56(sp)
   2bf00:	5e d3 00 88 	store_32 s26, 52(sp)
   2bf04:	7e c3 00 88 	store_32 s27, 48(sp)
   2bf08:	fe b3 00 88 	store_32 ra, 44(sp)
   2bf0c:	00 03 f0 c0 	move s24, s0
   2bf10:	13 04 00 4f 	movehi s0, 51
   2bf14:	58 c0 01 a8 	load_32 s2, 112(s24)
   2bf18:	00 70 45 00 	or s0, s0, 4444
   2bf1c:	22 60 00 07 	mull_i s1, s2, 24
   2bf20:	00 80 50 c0 	add_i s0, s0, s1
   2bf24:	20 00 00 a8 	load_32 s1, (s0)
   2bf28:	61 14 00 10 	cmpeq_i s3, s1, 5
   2bf2c:	43 00 00 f4 	bnz s3, 8 <P_CheckAmmo+0x40>
   2bf30:	03 00 00 f6 	b 12 <P_CheckAmmo+0x48>
   2bf34:	20 07 00 0f 	move s25, 1
   2bf38:	83 00 00 f6 	b 524 <P_CheckAmmo+0x250>
   2bf3c:	62 20 00 10 	cmpeq_i s3, s2, 8
   2bf40:	20 07 00 0f 	move s25, 1
   2bf44:	a3 00 00 f4 	bnz s3, 20 <P_CheckAmmo+0x64>
   2bf48:	60 80 fc c0 	move s3, s25
   2bf4c:	42 18 00 10 	cmpeq_i s2, s2, 6
   2bf50:	c2 00 00 f4 	bnz s2, 24 <P_CheckAmmo+0x74>
   2bf54:	06 00 00 f6 	b 24 <P_CheckAmmo+0x78>
   2bf58:	60 08 00 0f 	move s3, 2
   2bf5c:	42 18 00 10 	cmpeq_i s2, s2, 6
   2bf60:	42 00 00 f4 	bnz s2, 8 <P_CheckAmmo+0x74>
   2bf64:	02 00 00 f6 	b 8 <P_CheckAmmo+0x78>
   2bf68:	60 a0 00 0f 	move s3, 40
   2bf6c:	21 08 00 0b 	shl s1, s1, 2
   2bf70:	38 80 50 c0 	add_i s1, s24, s1
   2bf74:	21 70 02 a8 	load_32 s1, 156(s1)
   2bf78:	21 80 31 c1 	cmpge_i s1, s1, s3
   2bf7c:	41 0e 00 f4 	bnz s1, 456 <P_CheckAmmo+0x250>
   2bf80:	2b 04 00 4f 	movehi s1, 43
   2bf84:	58 30 02 a8 	load_32 s2, 140(s24)
   2bf88:	21 00 40 00 	or s1, s1, 4096
   2bf8c:	21 00 00 a8 	load_32 s1, (s1)
   2bf90:	42 00 00 f4 	bnz s2, 8 <P_CheckAmmo+0xa4>
   2bf94:	07 00 00 f6 	b 28 <P_CheckAmmo+0xbc>
   2bf98:	58 90 02 a8 	load_32 s2, 164(s24)
   2bf9c:	a2 04 00 f2 	bz s2, 148 <P_CheckAmmo+0x13c>
   2bfa0:	41 00 00 f4 	bnz s1, 8 <P_CheckAmmo+0xb4>
   2bfa4:	23 00 00 f6 	b 140 <P_CheckAmmo+0x13c>
   2bfa8:	20 14 00 0f 	move s1, 5
   2bfac:	42 00 00 f6 	b 264 <P_CheckAmmo+0x1c0>
   2bfb0:	58 60 02 a8 	load_32 s2, 152(s24)
   2bfb4:	c2 00 00 f2 	bz s2, 24 <P_CheckAmmo+0xd8>
   2bfb8:	58 80 02 a8 	load_32 s2, 160(s24)
   2bfbc:	42 0c 00 14 	cmplt_i s2, s2, 3
   2bfc0:	62 00 00 f4 	bnz s2, 12 <P_CheckAmmo+0xd8>
   2bfc4:	41 08 00 10 	cmpeq_i s2, s1, 2
   2bfc8:	42 04 00 f4 	bnz s2, 136 <P_CheckAmmo+0x15c>
   2bfcc:	58 10 02 a8 	load_32 s2, 132(s24)
   2bfd0:	62 00 00 f2 	bz s2, 12 <P_CheckAmmo+0xe8>
   2bfd4:	58 70 02 a8 	load_32 s2, 156(s24)
   2bfd8:	a2 04 00 f4 	bnz s2, 148 <P_CheckAmmo+0x178>
   2bfdc:	58 00 02 a8 	load_32 s2, 128(s24)
   2bfe0:	62 00 00 f2 	bz s2, 12 <P_CheckAmmo+0xf8>
   2bfe4:	58 80 02 a8 	load_32 s2, 160(s24)
   2bfe8:	02 05 00 f4 	bnz s2, 160 <P_CheckAmmo+0x194>
   2bfec:	58 70 02 a8 	load_32 s2, 156(s24)
   2bff0:	62 05 00 f4 	bnz s2, 172 <P_CheckAmmo+0x1a8>
   2bff4:	58 50 02 a8 	load_32 s2, 148(s24)
   2bff8:	c2 05 00 f4 	bnz s2, 184 <P_CheckAmmo+0x1bc>
   2bffc:	58 20 02 a8 	load_32 s2, 136(s24)
   2c000:	62 00 00 f2 	bz s2, 12 <P_CheckAmmo+0x118>
   2c004:	58 a0 02 a8 	load_32 s2, 168(s24)
   2c008:	82 0b 00 f4 	bnz s2, 368 <P_CheckAmmo+0x284>
   2c00c:	58 40 02 a8 	load_32 s2, 144(s24)
   2c010:	02 0d 00 f2 	bz s2, 416 <P_CheckAmmo+0x2bc>
   2c014:	58 90 02 a8 	load_32 s2, 164(s24)
   2c018:	42 a4 00 14 	cmplt_i s2, s2, 41
   2c01c:	a2 0c 00 f4 	bnz s2, 404 <P_CheckAmmo+0x2bc>
   2c020:	41 00 00 f4 	bnz s1, 8 <P_CheckAmmo+0x134>
   2c024:	63 00 00 f6 	b 396 <P_CheckAmmo+0x2bc>
   2c028:	20 18 00 0f 	move s1, 6
   2c02c:	22 00 00 f6 	b 136 <P_CheckAmmo+0x1c0>
   2c030:	78 60 02 a8 	load_32 s3, 152(s24)
   2c034:	23 01 00 f2 	bz s3, 36 <P_CheckAmmo+0x164>
   2c038:	78 80 02 a8 	load_32 s3, 160(s24)
   2c03c:	63 0c 00 14 	cmplt_i s3, s3, 3
   2c040:	c3 00 00 f4 	bnz s3, 24 <P_CheckAmmo+0x164>
   2c044:	61 08 00 10 	cmpeq_i s3, s1, 2
   2c048:	43 00 00 f4 	bnz s3, 8 <P_CheckAmmo+0x15c>
   2c04c:	03 00 00 f6 	b 12 <P_CheckAmmo+0x164>
   2c050:	20 20 00 0f 	move s1, 8
   2c054:	18 00 00 f6 	b 96 <P_CheckAmmo+0x1c0>
   2c058:	78 10 02 a8 	load_32 s3, 132(s24)
   2c05c:	c3 00 00 f2 	bz s3, 24 <P_CheckAmmo+0x180>
   2c060:	78 70 02 a8 	load_32 s3, 156(s24)
   2c064:	43 00 00 f4 	bnz s3, 8 <P_CheckAmmo+0x178>
   2c068:	03 00 00 f6 	b 12 <P_CheckAmmo+0x180>
   2c06c:	20 0c 00 0f 	move s1, 3
   2c070:	11 00 00 f6 	b 68 <P_CheckAmmo+0x1c0>
   2c074:	78 00 02 a8 	load_32 s3, 128(s24)
   2c078:	c3 00 00 f2 	bz s3, 24 <P_CheckAmmo+0x19c>
   2c07c:	78 80 02 a8 	load_32 s3, 160(s24)
   2c080:	43 00 00 f4 	bnz s3, 8 <P_CheckAmmo+0x194>
   2c084:	03 00 00 f6 	b 12 <P_CheckAmmo+0x19c>
   2c088:	20 08 00 0f 	move s1, 2
   2c08c:	0a 00 00 f6 	b 40 <P_CheckAmmo+0x1c0>
   2c090:	78 70 02 a8 	load_32 s3, 156(s24)
   2c094:	43 00 00 f4 	bnz s3, 8 <P_CheckAmmo+0x1a8>
   2c098:	03 00 00 f6 	b 12 <P_CheckAmmo+0x1b0>
   2c09c:	20 04 00 0f 	move s1, 1
   2c0a0:	05 00 00 f6 	b 20 <P_CheckAmmo+0x1c0>
   2c0a4:	78 50 02 a8 	load_32 s3, 148(s24)
   2c0a8:	43 00 00 f4 	bnz s3, 8 <P_CheckAmmo+0x1bc>
   2c0ac:	2e 00 00 f6 	b 184 <P_CheckAmmo+0x270>
   2c0b0:	20 1c 00 0f 	move s1, 7
   2c0b4:	38 d0 01 88 	store_32 s1, 116(s24)
   2c0b8:	34 04 00 4f 	movehi s1, 52
   2c0bc:	00 20 00 05 	add_i s0, s0, 8
   2c0c0:	58 d3 03 05 	add_i s26, s24, 244
   2c0c4:	61 23 5c 00 	or s27, s1, 5896
   2c0c8:	20 03 00 0f 	move s25, 0
   2c0cc:	00 00 00 a8 	load_32 s0, (s0)
   2c0d0:	40 00 00 f4 	bnz s0, 8 <P_CheckAmmo+0x1e4>
   2c0d4:	1a 00 00 f6 	b 104 <P_CheckAmmo+0x248>
   2c0d8:	40 70 00 07 	mull_i s2, s0, 28
   2c0dc:	1b 00 51 c0 	add_i s0, s27, s2
   2c0e0:	18 d0 03 88 	store_32 s0, 244(s24)
   2c0e4:	20 20 00 a8 	load_32 s1, 8(s0)
   2c0e8:	38 e0 03 88 	store_32 s1, 248(s24)
   2c0ec:	60 50 00 a8 	load_32 s3, 20(s0)
   2c0f0:	e3 00 00 f2 	bz s3, 28 <P_CheckAmmo+0x218>
   2c0f4:	9b 00 51 c0 	add_i s4, s27, s2
   2c0f8:	63 40 00 0b 	shl s3, s3, 16
   2c0fc:	78 f0 03 88 	store_32 s3, 252(s24)
   2c100:	64 60 00 a8 	load_32 s3, 24(s4)
   2c104:	63 40 00 0b 	shl s3, s3, 16
   2c108:	78 00 04 88 	store_32 s3, 256(s24)
   2c10c:	5b 00 51 c0 	add_i s2, s27, s2
   2c110:	42 30 00 a8 	load_32 s2, 12(s2)
   2c114:	e2 00 00 f2 	bz s2, 28 <P_CheckAmmo+0x23c>
   2c118:	00 00 fc c0 	move s0, s24
   2c11c:	20 00 fd c0 	move s1, s26
   2c120:	42 00 00 fc 	call s2
   2c124:	18 d0 03 a8 	load_32 s0, 244(s24)
   2c128:	e0 00 00 f2 	bz s0, 28 <P_CheckAmmo+0x250>
   2c12c:	38 e0 03 a8 	load_32 s1, 248(s24)
   2c130:	00 40 00 05 	add_i s0, s0, 16
   2c134:	c1 fc ff f3 	bz s1, -104 <P_CheckAmmo+0x1d8>
   2c138:	03 00 00 f6 	b 12 <P_CheckAmmo+0x250>
   2c13c:	20 03 00 0f 	move s25, 0
   2c140:	3a 03 00 88 	store_32 s25, (s26)
   2c144:	00 80 fc c0 	move s0, s25
   2c148:	fe b3 00 a8 	load_32 ra, 44(sp)
   2c14c:	7e c3 00 a8 	load_32 s27, 48(sp)
   2c150:	5e d3 00 a8 	load_32 s26, 52(sp)
   2c154:	3e e3 00 a8 	load_32 s25, 56(sp)
   2c158:	1e f3 00 a8 	load_32 s24, 60(sp)
   2c15c:	de 03 01 05 	add_i sp, sp, 64
   2c160:	1f 00 00 f0 	ret
   2c164:	78 20 02 a8 	load_32 s3, 136(s24)
   2c168:	c3 00 00 f2 	bz s3, 24 <P_CheckAmmo+0x28c>
   2c16c:	78 a0 02 a8 	load_32 s3, 168(s24)
   2c170:	43 00 00 f4 	bnz s3, 8 <P_CheckAmmo+0x284>
   2c174:	03 00 00 f6 	b 12 <P_CheckAmmo+0x28c>
   2c178:	20 10 00 0f 	move s1, 4
   2c17c:	ce ff ff f7 	b -200 <P_CheckAmmo+0x1c0>
   2c180:	98 40 02 a8 	load_32 s4, 144(s24)
   2c184:	21 00 00 11 	cmpne_i s1, s1, 0
   2c188:	60 00 00 0f 	move s3, 0
   2c18c:	61 01 00 f4 	bnz s1, 44 <P_CheckAmmo+0x2c4>
   2c190:	20 80 f1 c0 	move s1, s3
   2c194:	42 a0 00 12 	cmpgt_i s2, s2, 40
   2c198:	42 00 00 f4 	bnz s2, 8 <P_CheckAmmo+0x2ac>
   2c19c:	20 80 f1 c0 	move s1, s3
   2c1a0:	44 00 00 11 	cmpne_i s2, s4, 0
   2c1a4:	82 f8 ff f5 	bnz s2, -240 <P_CheckAmmo+0x1c0>
   2c1a8:	20 80 f1 c0 	move s1, s3
   2c1ac:	c2 ff ff f7 	b -248 <P_CheckAmmo+0x1c0>
   2c1b0:	20 00 00 0f 	move s1, 0
   2c1b4:	c0 ff ff f7 	b -256 <P_CheckAmmo+0x1c0>
   2c1b8:	20 18 00 0f 	move s1, 6
   2c1bc:	42 a0 00 12 	cmpgt_i s2, s2, 40
   2c1c0:	02 ff ff f5 	bnz s2, -32 <P_CheckAmmo+0x2ac>
   2c1c4:	f6 ff ff f7 	b -40 <P_CheckAmmo+0x2a8>

000000000002c1c8 P_FireWeapon:
   2c1c8:	de 03 ff 05 	add_i sp, sp, -64
   2c1cc:	1e f3 00 88 	store_32 s24, 60(sp)
   2c1d0:	3e e3 00 88 	store_32 s25, 56(sp)
   2c1d4:	5e d3 00 88 	store_32 s26, 52(sp)
   2c1d8:	fe c3 00 88 	store_32 ra, 48(sp)
   2c1dc:	00 03 f0 c0 	move s24, s0
   2c1e0:	45 ff ff f9 	call -748 <P_CheckAmmo>
   2c1e4:	c0 05 00 f2 	bz s0, 184 <P_FireWeapon+0xd4>
   2c1e8:	18 00 00 a8 	load_32 s0, (s24)
   2c1ec:	20 68 02 0f 	move s1, 154
   2c1f0:	0a 17 00 f8 	call 23592 <P_SetMobjState>
   2c1f4:	13 04 00 4f 	movehi s0, 51
   2c1f8:	38 c0 01 a8 	load_32 s1, 112(s24)
   2c1fc:	38 d3 03 05 	add_i s25, s24, 244
   2c200:	00 70 45 00 	or s0, s0, 4444
   2c204:	21 60 00 07 	mull_i s1, s1, 24
   2c208:	00 80 50 c0 	add_i s0, s0, s1
   2c20c:	34 04 00 4f 	movehi s1, 52
   2c210:	00 40 00 05 	add_i s0, s0, 16
   2c214:	41 23 5c 00 	or s26, s1, 5896
   2c218:	00 00 00 a8 	load_32 s0, (s0)
   2c21c:	40 00 00 f4 	bnz s0, 8 <P_FireWeapon+0x5c>
   2c220:	1a 00 00 f6 	b 104 <P_FireWeapon+0xc0>
   2c224:	40 70 00 07 	mull_i s2, s0, 28
   2c228:	1a 00 51 c0 	add_i s0, s26, s2
   2c22c:	18 d0 03 88 	store_32 s0, 244(s24)
   2c230:	20 20 00 a8 	load_32 s1, 8(s0)
   2c234:	38 e0 03 88 	store_32 s1, 248(s24)
   2c238:	60 50 00 a8 	load_32 s3, 20(s0)
   2c23c:	e3 00 00 f2 	bz s3, 28 <P_FireWeapon+0x90>
   2c240:	9a 00 51 c0 	add_i s4, s26, s2
   2c244:	63 40 00 0b 	shl s3, s3, 16
   2c248:	78 f0 03 88 	store_32 s3, 252(s24)
   2c24c:	64 60 00 a8 	load_32 s3, 24(s4)
   2c250:	63 40 00 0b 	shl s3, s3, 16
   2c254:	78 00 04 88 	store_32 s3, 256(s24)
   2c258:	5a 00 51 c0 	add_i s2, s26, s2
   2c25c:	42 30 00 a8 	load_32 s2, 12(s2)
   2c260:	e2 00 00 f2 	bz s2, 28 <P_FireWeapon+0xb4>
   2c264:	00 00 fc c0 	move s0, s24
   2c268:	20 80 fc c0 	move s1, s25
   2c26c:	42 00 00 fc 	call s2
   2c270:	18 d0 03 a8 	load_32 s0, 244(s24)
   2c274:	e0 00 00 f2 	bz s0, 28 <P_FireWeapon+0xc8>
   2c278:	38 e0 03 a8 	load_32 s1, 248(s24)
   2c27c:	00 40 00 05 	add_i s0, s0, 16
   2c280:	c1 fc ff f3 	bz s1, -104 <P_FireWeapon+0x50>
   2c284:	03 00 00 f6 	b 12 <P_FireWeapon+0xc8>
   2c288:	00 00 00 0f 	move s0, 0
   2c28c:	19 00 00 88 	store_32 s0, (s25)
   2c290:	18 00 00 a8 	load_32 s0, (s24)
   2c294:	20 00 f0 c0 	move s1, s0
   2c298:	c9 d4 ff f9 	call -44252 <P_NoiseAlert>
   2c29c:	fe c3 00 a8 	load_32 ra, 48(sp)
   2c2a0:	5e d3 00 a8 	load_32 s26, 52(sp)
   2c2a4:	3e e3 00 a8 	load_32 s25, 56(sp)
   2c2a8:	1e f3 00 a8 	load_32 s24, 60(sp)
   2c2ac:	de 03 01 05 	add_i sp, sp, 64
   2c2b0:	1f 00 00 f0 	ret

000000000002c2b4 P_DropWeapon:
   2c2b4:	de 03 ff 05 	add_i sp, sp, -64
   2c2b8:	1e f3 00 88 	store_32 s24, 60(sp)
   2c2bc:	3e e3 00 88 	store_32 s25, 56(sp)
   2c2c0:	5e d3 00 88 	store_32 s26, 52(sp)
   2c2c4:	fe c3 00 88 	store_32 ra, 48(sp)
   2c2c8:	00 03 f0 c0 	move s24, s0
   2c2cc:	13 04 00 4f 	movehi s0, 51
   2c2d0:	38 c0 01 a8 	load_32 s1, 112(s24)
   2c2d4:	38 d3 03 05 	add_i s25, s24, 244
   2c2d8:	00 70 45 00 	or s0, s0, 4444
   2c2dc:	21 60 00 07 	mull_i s1, s1, 24
   2c2e0:	00 80 50 c0 	add_i s0, s0, s1
   2c2e4:	34 04 00 4f 	movehi s1, 52
   2c2e8:	00 20 00 05 	add_i s0, s0, 8
   2c2ec:	41 23 5c 00 	or s26, s1, 5896
   2c2f0:	00 00 00 a8 	load_32 s0, (s0)
   2c2f4:	40 00 00 f4 	bnz s0, 8 <P_DropWeapon+0x48>
   2c2f8:	1a 00 00 f6 	b 104 <P_DropWeapon+0xac>
   2c2fc:	40 70 00 07 	mull_i s2, s0, 28
   2c300:	1a 00 51 c0 	add_i s0, s26, s2
   2c304:	18 d0 03 88 	store_32 s0, 244(s24)
   2c308:	20 20 00 a8 	load_32 s1, 8(s0)
   2c30c:	38 e0 03 88 	store_32 s1, 248(s24)
   2c310:	60 50 00 a8 	load_32 s3, 20(s0)
   2c314:	e3 00 00 f2 	bz s3, 28 <P_DropWeapon+0x7c>
   2c318:	9a 00 51 c0 	add_i s4, s26, s2
   2c31c:	63 40 00 0b 	shl s3, s3, 16
   2c320:	78 f0 03 88 	store_32 s3, 252(s24)
   2c324:	64 60 00 a8 	load_32 s3, 24(s4)
   2c328:	63 40 00 0b 	shl s3, s3, 16
   2c32c:	78 00 04 88 	store_32 s3, 256(s24)
   2c330:	5a 00 51 c0 	add_i s2, s26, s2
   2c334:	42 30 00 a8 	load_32 s2, 12(s2)
   2c338:	e2 00 00 f2 	bz s2, 28 <P_DropWeapon+0xa0>
   2c33c:	00 00 fc c0 	move s0, s24
   2c340:	20 80 fc c0 	move s1, s25
   2c344:	42 00 00 fc 	call s2
   2c348:	18 d0 03 a8 	load_32 s0, 244(s24)
   2c34c:	e0 00 00 f2 	bz s0, 28 <P_DropWeapon+0xb4>
   2c350:	38 e0 03 a8 	load_32 s1, 248(s24)
   2c354:	00 40 00 05 	add_i s0, s0, 16
   2c358:	c1 fc ff f3 	bz s1, -104 <P_DropWeapon+0x3c>
   2c35c:	03 00 00 f6 	b 12 <P_DropWeapon+0xb4>
   2c360:	00 00 00 0f 	move s0, 0
   2c364:	19 00 00 88 	store_32 s0, (s25)
   2c368:	fe c3 00 a8 	load_32 ra, 48(sp)
   2c36c:	5e d3 00 a8 	load_32 s26, 52(sp)
   2c370:	3e e3 00 a8 	load_32 s25, 56(sp)
   2c374:	1e f3 00 a8 	load_32 s24, 60(sp)
   2c378:	de 03 01 05 	add_i sp, sp, 64
   2c37c:	1f 00 00 f0 	ret

000000000002c380 A_WeaponReady:
   2c380:	de 03 ff 05 	add_i sp, sp, -64
   2c384:	1e f3 00 88 	store_32 s24, 60(sp)
   2c388:	3e e3 00 88 	store_32 s25, 56(sp)
   2c38c:	5e d3 00 88 	store_32 s26, 52(sp)
   2c390:	fe c3 00 88 	store_32 ra, 48(sp)
   2c394:	00 03 f0 c0 	move s24, s0
   2c398:	74 04 00 4f 	movehi s3, 52
   2c39c:	18 00 00 a8 	load_32 s0, (s24)
   2c3a0:	43 23 5c 00 	or s26, s3, 5896
   2c3a4:	40 90 01 a8 	load_32 s2, 100(s0)
   2c3a8:	7a 60 43 05 	add_i s3, s26, 4312
   2c3ac:	20 83 f0 c0 	move s25, s1
   2c3b0:	62 80 01 c1 	cmpeq_i s3, s2, s3
   2c3b4:	83 00 00 f4 	bnz s3, 16 <A_WeaponReady+0x44>
   2c3b8:	3a d0 43 05 	add_i s1, s26, 4340
   2c3bc:	22 80 10 c1 	cmpne_i s1, s2, s1
   2c3c0:	61 00 00 f4 	bnz s1, 12 <A_WeaponReady+0x4c>
   2c3c4:	20 54 02 0f 	move s1, 149
   2c3c8:	94 16 00 f8 	call 23120 <P_SetMobjState>
   2c3cc:	18 c0 01 a8 	load_32 s0, 112(s24)
   2c3d0:	00 1c 00 11 	cmpne_i s0, s0, 7
   2c3d4:	c0 00 00 f4 	bnz s0, 24 <A_WeaponReady+0x6c>
   2c3d8:	19 00 00 a8 	load_32 s0, (s25)
   2c3dc:	3a 50 1d 05 	add_i s1, s26, 1876
   2c3e0:	00 80 10 c1 	cmpne_i s0, s0, s1
   2c3e4:	40 00 00 f4 	bnz s0, 8 <A_WeaponReady+0x6c>
   2c3e8:	0e 00 00 f6 	b 56 <A_WeaponReady+0xa0>
   2c3ec:	18 d0 01 a8 	load_32 s0, 116(s24)
   2c3f0:	00 28 00 11 	cmpne_i s0, s0, 10
   2c3f4:	40 02 00 f4 	bnz s0, 72 <A_WeaponReady+0xbc>
   2c3f8:	18 80 00 a8 	load_32 s0, 32(s24)
   2c3fc:	40 00 00 f4 	bnz s0, 8 <A_WeaponReady+0x84>
   2c400:	0f 00 00 f6 	b 60 <A_WeaponReady+0xbc>
   2c404:	18 3c 00 a0 	load_u8 s0, 15(s24)
   2c408:	00 04 00 01 	and s0, s0, 1
   2c40c:	40 00 00 f2 	bz s0, 8 <A_WeaponReady+0x94>
   2c410:	31 00 00 f6 	b 196 <A_WeaponReady+0x154>
   2c414:	00 00 00 0f 	move s0, 0
   2c418:	18 f0 02 88 	store_32 s0, 188(s24)
   2c41c:	35 00 00 f6 	b 212 <A_WeaponReady+0x170>
   2c420:	18 00 00 a8 	load_32 s0, (s24)
   2c424:	20 2c 00 0f 	move s1, 11
   2c428:	ef 7f 00 f8 	call 131004 <S_StartSound>
   2c42c:	18 d0 01 a8 	load_32 s0, 116(s24)
   2c430:	00 28 00 11 	cmpne_i s0, s0, 10
   2c434:	40 00 00 f4 	bnz s0, 8 <A_WeaponReady+0xbc>
   2c438:	f0 ff ff f7 	b -64 <A_WeaponReady+0x78>
   2c43c:	13 04 00 4f 	movehi s0, 51
   2c440:	38 c0 01 a8 	load_32 s1, 112(s24)
   2c444:	38 d3 03 05 	add_i s25, s24, 244
   2c448:	00 70 45 00 	or s0, s0, 4444
   2c44c:	21 60 00 07 	mull_i s1, s1, 24
   2c450:	00 80 50 c0 	add_i s0, s0, s1
   2c454:	00 20 00 05 	add_i s0, s0, 8
   2c458:	00 00 00 a8 	load_32 s0, (s0)
   2c45c:	40 00 00 f4 	bnz s0, 8 <A_WeaponReady+0xe4>
   2c460:	1a 00 00 f6 	b 104 <A_WeaponReady+0x148>
   2c464:	40 70 00 07 	mull_i s2, s0, 28
   2c468:	1a 00 51 c0 	add_i s0, s26, s2
   2c46c:	18 d0 03 88 	store_32 s0, 244(s24)
   2c470:	20 20 00 a8 	load_32 s1, 8(s0)
   2c474:	38 e0 03 88 	store_32 s1, 248(s24)
   2c478:	60 50 00 a8 	load_32 s3, 20(s0)
   2c47c:	e3 00 00 f2 	bz s3, 28 <A_WeaponReady+0x118>
   2c480:	9a 00 51 c0 	add_i s4, s26, s2
   2c484:	63 40 00 0b 	shl s3, s3, 16
   2c488:	78 f0 03 88 	store_32 s3, 252(s24)
   2c48c:	64 60 00 a8 	load_32 s3, 24(s4)
   2c490:	63 40 00 0b 	shl s3, s3, 16
   2c494:	78 00 04 88 	store_32 s3, 256(s24)
   2c498:	5a 00 51 c0 	add_i s2, s26, s2
   2c49c:	42 30 00 a8 	load_32 s2, 12(s2)
   2c4a0:	e2 00 00 f2 	bz s2, 28 <A_WeaponReady+0x13c>
   2c4a4:	00 00 fc c0 	move s0, s24
   2c4a8:	20 80 fc c0 	move s1, s25
   2c4ac:	42 00 00 fc 	call s2
   2c4b0:	18 d0 03 a8 	load_32 s0, 244(s24)
   2c4b4:	20 06 00 f2 	bz s0, 196 <A_WeaponReady+0x1f8>
   2c4b8:	38 e0 03 a8 	load_32 s1, 248(s24)
   2c4bc:	00 40 00 05 	add_i s0, s0, 16
   2c4c0:	c1 fc ff f3 	bz s1, -104 <A_WeaponReady+0xd8>
   2c4c4:	2d 00 00 f6 	b 180 <A_WeaponReady+0x1f8>
   2c4c8:	00 00 00 0f 	move s0, 0
   2c4cc:	19 00 00 88 	store_32 s0, (s25)
   2c4d0:	2a 00 00 f6 	b 168 <A_WeaponReady+0x1f8>
   2c4d4:	18 f0 02 a8 	load_32 s0, 188(s24)
   2c4d8:	80 04 00 f2 	bz s0, 144 <A_WeaponReady+0x1e8>
   2c4dc:	18 c0 01 a8 	load_32 s0, 112(s24)
   2c4e0:	00 08 00 00 	or s0, s0, 2
   2c4e4:	00 18 00 10 	cmpeq_i s0, s0, 6
   2c4e8:	40 00 00 f4 	bnz s0, 8 <A_WeaponReady+0x170>
   2c4ec:	1f 00 00 f6 	b 124 <A_WeaponReady+0x1e8>
   2c4f0:	1c 04 00 4f 	movehi s0, 60
   2c4f4:	34 04 00 4f 	movehi s1, 52
   2c4f8:	43 00 00 4f 	movehi s2, 3
   2c4fc:	00 40 02 00 	or s0, s0, 144
   2c500:	21 40 19 00 	or s1, s1, 1616
   2c504:	42 00 78 00 	or s2, s2, 7680
   2c508:	00 00 00 a8 	load_32 s0, (s0)
   2c50c:	40 27 00 0b 	shl s26, s0, 9
   2c510:	18 70 00 a8 	load_32 s0, 28(s24)
   2c514:	21 00 00 a8 	load_32 s1, (s1)
   2c518:	5a 00 11 c0 	and s2, s26, s2
   2c51c:	21 00 51 c0 	add_i s1, s1, s2
   2c520:	21 00 00 a8 	load_32 s1, (s1)
   2c524:	84 be ff f9 	call -67056 <FixedMul>
   2c528:	4d 04 00 4f 	movehi s2, 45
   2c52c:	61 00 00 4f 	movehi s3, 1
   2c530:	28 00 00 4f 	movehi s1, 8
   2c534:	00 80 50 c0 	add_i s0, s0, s1
   2c538:	19 20 00 88 	store_32 s0, 8(s25)
   2c53c:	22 90 41 00 	or s1, s2, 4196
   2c540:	18 70 00 a8 	load_32 s0, 28(s24)
   2c544:	43 00 78 00 	or s2, s3, 7680
   2c548:	5a 00 11 c0 	and s2, s26, s2
   2c54c:	21 00 51 c0 	add_i s1, s1, s2
   2c550:	21 00 00 a8 	load_32 s1, (s1)
   2c554:	78 be ff f9 	call -67104 <FixedMul>
   2c558:	20 20 00 4f 	movehi s1, 256
   2c55c:	00 80 50 c0 	add_i s0, s0, s1
   2c560:	19 30 00 88 	store_32 s0, 12(s25)
   2c564:	05 00 00 f6 	b 20 <A_WeaponReady+0x1f8>
   2c568:	00 04 00 0f 	move s0, 1
   2c56c:	18 f0 02 88 	store_32 s0, 188(s24)
   2c570:	00 00 fc c0 	move s0, s24
   2c574:	15 ff ff f9 	call -940 <P_FireWeapon>
   2c578:	fe c3 00 a8 	load_32 ra, 48(sp)
   2c57c:	5e d3 00 a8 	load_32 s26, 52(sp)
   2c580:	3e e3 00 a8 	load_32 s25, 56(sp)
   2c584:	1e f3 00 a8 	load_32 s24, 60(sp)
   2c588:	de 03 01 05 	add_i sp, sp, 64
   2c58c:	1f 00 00 f0 	ret

000000000002c590 A_ReFire:
   2c590:	de 03 ff 05 	add_i sp, sp, -64
   2c594:	fe f3 00 88 	store_32 ra, 60(sp)
   2c598:	20 3c 00 a0 	load_u8 s1, 15(s0)
   2c59c:	21 04 00 01 	and s1, s1, 1
   2c5a0:	a1 01 00 f2 	bz s1, 52 <A_ReFire+0x44>
   2c5a4:	20 d0 01 a8 	load_32 s1, 116(s0)
   2c5a8:	21 28 00 11 	cmpne_i s1, s1, 10
   2c5ac:	41 01 00 f4 	bnz s1, 40 <A_ReFire+0x44>
   2c5b0:	20 80 00 a8 	load_32 s1, 32(s0)
   2c5b4:	01 01 00 f2 	bz s1, 32 <A_ReFire+0x44>
   2c5b8:	20 20 03 a8 	load_32 s1, 200(s0)
   2c5bc:	21 04 00 05 	add_i s1, s1, 1
   2c5c0:	20 20 03 88 	store_32 s1, 200(s0)
   2c5c4:	01 ff ff f9 	call -1020 <P_FireWeapon>
   2c5c8:	fe f3 00 a8 	load_32 ra, 60(sp)
   2c5cc:	de 03 01 05 	add_i sp, sp, 64
   2c5d0:	1f 00 00 f0 	ret
   2c5d4:	20 00 00 0f 	move s1, 0
   2c5d8:	20 20 03 88 	store_32 s1, 200(s0)
   2c5dc:	46 fe ff f9 	call -1768 <P_CheckAmmo>
   2c5e0:	fe f3 00 a8 	load_32 ra, 60(sp)
   2c5e4:	de 03 01 05 	add_i sp, sp, 64
   2c5e8:	1f 00 00 f0 	ret

000000000002c5ec A_CheckReload:
   2c5ec:	de 03 ff 05 	add_i sp, sp, -64
   2c5f0:	fe f3 00 88 	store_32 ra, 60(sp)
   2c5f4:	40 fe ff f9 	call -1792 <P_CheckAmmo>
   2c5f8:	fe f3 00 a8 	load_32 ra, 60(sp)
   2c5fc:	de 03 01 05 	add_i sp, sp, 64
   2c600:	1f 00 00 f0 	ret

000000000002c604 A_Lower:
   2c604:	de 03 ff 05 	add_i sp, sp, -64
   2c608:	1e f3 00 88 	store_32 s24, 60(sp)
   2c60c:	3e e3 00 88 	store_32 s25, 56(sp)
   2c610:	5e d3 00 88 	store_32 s26, 52(sp)
   2c614:	fe c3 00 88 	store_32 ra, 48(sp)
   2c618:	41 30 00 a8 	load_32 s2, 12(s1)
   2c61c:	70 04 00 4f 	movehi s3, 48
   2c620:	40 83 00 4f 	movehi s26, 1024
   2c624:	00 03 f0 c0 	move s24, s0
   2c628:	42 80 51 c0 	add_i s2, s2, s3
   2c62c:	41 30 00 88 	store_32 s2, 12(s1)
   2c630:	02 00 4d c1 	cmplt_i s0, s2, s26
   2c634:	80 07 00 f4 	bnz s0, 240 <A_Lower+0x120>
   2c638:	18 10 00 a8 	load_32 s0, 4(s24)
   2c63c:	00 04 00 11 	cmpne_i s0, s0, 1
   2c640:	60 00 00 f4 	bnz s0, 12 <A_Lower+0x48>
   2c644:	41 33 00 88 	store_32 s26, 12(s1)
   2c648:	37 00 00 f6 	b 220 <A_Lower+0x120>
   2c64c:	18 80 00 a8 	load_32 s0, 32(s24)
   2c650:	40 00 00 f4 	bnz s0, 8 <A_Lower+0x54>
   2c654:	2f 00 00 f6 	b 188 <A_Lower+0x10c>
   2c658:	18 d0 01 a8 	load_32 s0, 116(s24)
   2c65c:	18 c0 01 88 	store_32 s0, 112(s24)
   2c660:	20 1c 00 11 	cmpne_i s1, s0, 7
   2c664:	a1 00 00 f4 	bnz s1, 20 <A_Lower+0x74>
   2c668:	18 00 00 a8 	load_32 s0, (s24)
   2c66c:	20 28 00 0f 	move s1, 10
   2c670:	5d 7f 00 f8 	call 130420 <S_StartSound>
   2c674:	18 d0 01 a8 	load_32 s0, 116(s24)
   2c678:	33 04 00 4f 	movehi s1, 51
   2c67c:	00 60 00 07 	mull_i s0, s0, 24
   2c680:	38 d3 03 05 	add_i s25, s24, 244
   2c684:	21 70 45 00 	or s1, s1, 4444
   2c688:	01 00 50 c0 	add_i s0, s1, s0
   2c68c:	20 28 00 0f 	move s1, 10
   2c690:	00 10 00 a8 	load_32 s0, 4(s0)
   2c694:	38 d0 01 88 	store_32 s1, 116(s24)
   2c698:	34 04 00 4f 	movehi s1, 52
   2c69c:	58 03 04 88 	store_32 s26, 256(s24)
   2c6a0:	41 23 5c 00 	or s26, s1, 5896
   2c6a4:	40 00 00 f4 	bnz s0, 8 <A_Lower+0xa8>
   2c6a8:	1d 00 00 f6 	b 116 <A_Lower+0x118>
   2c6ac:	40 70 00 07 	mull_i s2, s0, 28
   2c6b0:	1a 00 51 c0 	add_i s0, s26, s2
   2c6b4:	18 d0 03 88 	store_32 s0, 244(s24)
   2c6b8:	20 20 00 a8 	load_32 s1, 8(s0)
   2c6bc:	38 e0 03 88 	store_32 s1, 248(s24)
   2c6c0:	60 50 00 a8 	load_32 s3, 20(s0)
   2c6c4:	e3 00 00 f2 	bz s3, 28 <A_Lower+0xdc>
   2c6c8:	9a 00 51 c0 	add_i s4, s26, s2
   2c6cc:	63 40 00 0b 	shl s3, s3, 16
   2c6d0:	78 f0 03 88 	store_32 s3, 252(s24)
   2c6d4:	64 60 00 a8 	load_32 s3, 24(s4)
   2c6d8:	63 40 00 0b 	shl s3, s3, 16
   2c6dc:	78 00 04 88 	store_32 s3, 256(s24)
   2c6e0:	5a 00 51 c0 	add_i s2, s26, s2
   2c6e4:	42 30 00 a8 	load_32 s2, 12(s2)
   2c6e8:	e2 00 00 f2 	bz s2, 28 <A_Lower+0x100>
   2c6ec:	00 00 fc c0 	move s0, s24
   2c6f0:	20 80 fc c0 	move s1, s25
   2c6f4:	42 00 00 fc 	call s2
   2c6f8:	18 d0 03 a8 	load_32 s0, 244(s24)
   2c6fc:	40 01 00 f2 	bz s0, 40 <A_Lower+0x120>
   2c700:	38 e0 03 a8 	load_32 s1, 248(s24)
   2c704:	00 40 00 a8 	load_32 s0, 16(s0)
   2c708:	e1 fc ff f3 	bz s1, -100 <A_Lower+0xa0>
   2c70c:	06 00 00 f6 	b 24 <A_Lower+0x120>
   2c710:	00 00 00 0f 	move s0, 0
   2c714:	18 d0 03 88 	store_32 s0, 244(s24)
   2c718:	03 00 00 f6 	b 12 <A_Lower+0x120>
   2c71c:	00 00 00 0f 	move s0, 0
   2c720:	19 00 00 88 	store_32 s0, (s25)
   2c724:	fe c3 00 a8 	load_32 ra, 48(sp)
   2c728:	5e d3 00 a8 	load_32 s26, 52(sp)
   2c72c:	3e e3 00 a8 	load_32 s25, 56(sp)
   2c730:	1e f3 00 a8 	load_32 s24, 60(sp)
   2c734:	de 03 01 05 	add_i sp, sp, 64
   2c738:	1f 00 00 f0 	ret

000000000002c73c A_Raise:
   2c73c:	de 03 ff 05 	add_i sp, sp, -64
   2c740:	1e f3 00 88 	store_32 s24, 60(sp)
   2c744:	3e e3 00 88 	store_32 s25, 56(sp)
   2c748:	5e d3 00 88 	store_32 s26, 52(sp)
   2c74c:	fe c3 00 88 	store_32 ra, 48(sp)
   2c750:	41 30 00 a8 	load_32 s2, 12(s1)
   2c754:	70 f8 ff 4f 	movehi s3, 524240
   2c758:	00 03 f0 c0 	move s24, s0
   2c75c:	00 20 00 4f 	movehi s0, 256
   2c760:	42 80 51 c0 	add_i s2, s2, s3
   2c764:	41 30 00 88 	store_32 s2, 12(s1)
   2c768:	62 00 20 c1 	cmpgt_i s3, s2, s0
   2c76c:	23 05 00 f4 	bnz s3, 164 <A_Raise+0xd4>
   2c770:	01 30 00 88 	store_32 s0, 12(s1)
   2c774:	13 04 00 4f 	movehi s0, 51
   2c778:	38 c0 01 a8 	load_32 s1, 112(s24)
   2c77c:	38 d3 03 05 	add_i s25, s24, 244
   2c780:	00 70 45 00 	or s0, s0, 4444
   2c784:	21 60 00 07 	mull_i s1, s1, 24
   2c788:	00 80 50 c0 	add_i s0, s0, s1
   2c78c:	34 04 00 4f 	movehi s1, 52
   2c790:	00 30 00 05 	add_i s0, s0, 12
   2c794:	41 23 5c 00 	or s26, s1, 5896
   2c798:	00 00 00 a8 	load_32 s0, (s0)
   2c79c:	40 00 00 f4 	bnz s0, 8 <A_Raise+0x68>
   2c7a0:	1a 00 00 f6 	b 104 <A_Raise+0xcc>
   2c7a4:	40 70 00 07 	mull_i s2, s0, 28
   2c7a8:	1a 00 51 c0 	add_i s0, s26, s2
   2c7ac:	18 d0 03 88 	store_32 s0, 244(s24)
   2c7b0:	20 20 00 a8 	load_32 s1, 8(s0)
   2c7b4:	38 e0 03 88 	store_32 s1, 248(s24)
   2c7b8:	60 50 00 a8 	load_32 s3, 20(s0)
   2c7bc:	e3 00 00 f2 	bz s3, 28 <A_Raise+0x9c>
   2c7c0:	9a 00 51 c0 	add_i s4, s26, s2
   2c7c4:	63 40 00 0b 	shl s3, s3, 16
   2c7c8:	78 f0 03 88 	store_32 s3, 252(s24)
   2c7cc:	64 60 00 a8 	load_32 s3, 24(s4)
   2c7d0:	63 40 00 0b 	shl s3, s3, 16
   2c7d4:	78 00 04 88 	store_32 s3, 256(s24)
   2c7d8:	5a 00 51 c0 	add_i s2, s26, s2
   2c7dc:	42 30 00 a8 	load_32 s2, 12(s2)
   2c7e0:	e2 00 00 f2 	bz s2, 28 <A_Raise+0xc0>
   2c7e4:	00 00 fc c0 	move s0, s24
   2c7e8:	20 80 fc c0 	move s1, s25
   2c7ec:	42 00 00 fc 	call s2
   2c7f0:	18 d0 03 a8 	load_32 s0, 244(s24)
   2c7f4:	e0 00 00 f2 	bz s0, 28 <A_Raise+0xd4>
   2c7f8:	38 e0 03 a8 	load_32 s1, 248(s24)
   2c7fc:	00 40 00 05 	add_i s0, s0, 16
   2c800:	c1 fc ff f3 	bz s1, -104 <A_Raise+0x5c>
   2c804:	03 00 00 f6 	b 12 <A_Raise+0xd4>
   2c808:	00 00 00 0f 	move s0, 0
   2c80c:	19 00 00 88 	store_32 s0, (s25)
   2c810:	fe c3 00 a8 	load_32 ra, 48(sp)
   2c814:	5e d3 00 a8 	load_32 s26, 52(sp)
   2c818:	3e e3 00 a8 	load_32 s25, 56(sp)
   2c81c:	1e f3 00 a8 	load_32 s24, 60(sp)
   2c820:	de 03 01 05 	add_i sp, sp, 64
   2c824:	1f 00 00 f0 	ret

000000000002c828 A_GunFlash:
   2c828:	de 03 ff 05 	add_i sp, sp, -64
   2c82c:	1e f3 00 88 	store_32 s24, 60(sp)
   2c830:	3e e3 00 88 	store_32 s25, 56(sp)
   2c834:	5e d3 00 88 	store_32 s26, 52(sp)
   2c838:	fe c3 00 88 	store_32 ra, 48(sp)
   2c83c:	00 03 f0 c0 	move s24, s0
   2c840:	20 6c 02 0f 	move s1, 155
   2c844:	18 00 00 a8 	load_32 s0, (s24)
   2c848:	74 15 00 f8 	call 21968 <P_SetMobjState>
   2c84c:	13 04 00 4f 	movehi s0, 51
   2c850:	38 c0 01 a8 	load_32 s1, 112(s24)
   2c854:	38 13 04 05 	add_i s25, s24, 260
   2c858:	00 70 45 00 	or s0, s0, 4444
   2c85c:	21 60 00 07 	mull_i s1, s1, 24
   2c860:	00 80 50 c0 	add_i s0, s0, s1
   2c864:	34 04 00 4f 	movehi s1, 52
   2c868:	00 50 00 05 	add_i s0, s0, 20
   2c86c:	41 23 5c 00 	or s26, s1, 5896
   2c870:	00 00 00 a8 	load_32 s0, (s0)
   2c874:	40 00 00 f4 	bnz s0, 8 <A_GunFlash+0x54>
   2c878:	1a 00 00 f6 	b 104 <A_GunFlash+0xb8>
   2c87c:	40 70 00 07 	mull_i s2, s0, 28
   2c880:	1a 00 51 c0 	add_i s0, s26, s2
   2c884:	18 10 04 88 	store_32 s0, 260(s24)
   2c888:	20 20 00 a8 	load_32 s1, 8(s0)
   2c88c:	38 20 04 88 	store_32 s1, 264(s24)
   2c890:	60 50 00 a8 	load_32 s3, 20(s0)
   2c894:	e3 00 00 f2 	bz s3, 28 <A_GunFlash+0x88>
   2c898:	9a 00 51 c0 	add_i s4, s26, s2
   2c89c:	63 40 00 0b 	shl s3, s3, 16
   2c8a0:	78 30 04 88 	store_32 s3, 268(s24)
   2c8a4:	64 60 00 a8 	load_32 s3, 24(s4)
   2c8a8:	63 40 00 0b 	shl s3, s3, 16
   2c8ac:	78 40 04 88 	store_32 s3, 272(s24)
   2c8b0:	5a 00 51 c0 	add_i s2, s26, s2
   2c8b4:	42 30 00 a8 	load_32 s2, 12(s2)
   2c8b8:	e2 00 00 f2 	bz s2, 28 <A_GunFlash+0xac>
   2c8bc:	00 00 fc c0 	move s0, s24
   2c8c0:	20 80 fc c0 	move s1, s25
   2c8c4:	42 00 00 fc 	call s2
   2c8c8:	18 10 04 a8 	load_32 s0, 260(s24)
   2c8cc:	e0 00 00 f2 	bz s0, 28 <A_GunFlash+0xc0>
   2c8d0:	38 20 04 a8 	load_32 s1, 264(s24)
   2c8d4:	00 40 00 05 	add_i s0, s0, 16
   2c8d8:	c1 fc ff f3 	bz s1, -104 <A_GunFlash+0x48>
   2c8dc:	03 00 00 f6 	b 12 <A_GunFlash+0xc0>
   2c8e0:	00 00 00 0f 	move s0, 0
   2c8e4:	19 00 00 88 	store_32 s0, (s25)
   2c8e8:	fe c3 00 a8 	load_32 ra, 48(sp)
   2c8ec:	5e d3 00 a8 	load_32 s26, 52(sp)
   2c8f0:	3e e3 00 a8 	load_32 s25, 56(sp)
   2c8f4:	1e f3 00 a8 	load_32 s24, 60(sp)
   2c8f8:	de 03 01 05 	add_i sp, sp, 64
   2c8fc:	1f 00 00 f0 	ret

000000000002c900 A_Punch:
   2c900:	de 03 ff 05 	add_i sp, sp, -64
   2c904:	1e f3 00 88 	store_32 s24, 60(sp)
   2c908:	3e e3 00 88 	store_32 s25, 56(sp)
   2c90c:	5e d3 00 88 	store_32 s26, 52(sp)
   2c910:	7e c3 00 88 	store_32 s27, 48(sp)
   2c914:	fe b3 00 88 	store_32 ra, 44(sp)
   2c918:	00 03 f0 c0 	move s24, s0
   2c91c:	76 be ff f9 	call -67112 <P_Random>
   2c920:	33 64 66 4f 	movehi s1, 209715
   2c924:	21 9c 19 00 	or s1, s1, 1639
   2c928:	20 80 f0 c1 	mulh_i s1, s0, s1
   2c92c:	41 08 00 09 	ashr s2, s1, 2
   2c930:	21 7c 00 0a 	shr s1, s1, 31
   2c934:	22 80 50 c0 	add_i s1, s2, s1
   2c938:	21 28 00 07 	mull_i s1, s1, 10
   2c93c:	00 80 60 c0 	sub_i s0, s0, s1
   2c940:	38 c0 00 a8 	load_32 s1, 48(s24)
   2c944:	00 04 00 0b 	shl s0, s0, 1
   2c948:	21 00 00 10 	cmpeq_i s1, s1, 0
   2c94c:	20 0b 00 05 	add_i s25, s0, 2
   2c950:	41 00 00 f4 	bnz s1, 8 <A_Punch+0x58>
   2c954:	39 2b 00 07 	mull_i s25, s25, 10
   2c958:	18 00 00 a8 	load_32 s0, (s24)
   2c95c:	60 83 00 a8 	load_32 s27, 32(s0)
   2c960:	65 be ff f9 	call -67180 <P_Random>
   2c964:	40 03 f0 c0 	move s26, s0
   2c968:	63 be ff f9 	call -67188 <P_Random>
   2c96c:	1a 00 60 c0 	sub_i s0, s26, s0
   2c970:	00 48 00 0b 	shl s0, s0, 18
   2c974:	40 83 5d c0 	add_i s26, s0, s27
   2c978:	18 00 00 a8 	load_32 s0, (s24)
   2c97c:	60 43 00 4f 	movehi s27, 512
   2c980:	20 00 fd c0 	move s1, s26
   2c984:	40 80 fd c0 	move s2, s27
   2c988:	6b f1 ff f9 	call -14932 <P_AimLineAttack>
   2c98c:	60 00 f0 c0 	move s3, s0
   2c990:	18 00 00 a8 	load_32 s0, (s24)
   2c994:	20 00 fd c0 	move s1, s26
   2c998:	40 80 fd c0 	move s2, s27
   2c99c:	80 80 fc c0 	move s4, s25
   2c9a0:	ab f1 ff f9 	call -14676 <P_LineAttack>
   2c9a4:	1b 04 00 4f 	movehi s0, 59
   2c9a8:	20 93 2b 00 	or s25, s0, 2788
   2c9ac:	19 00 00 a8 	load_32 s0, (s25)
   2c9b0:	a0 01 00 f2 	bz s0, 52 <A_Punch+0xe4>
   2c9b4:	18 00 00 a8 	load_32 s0, (s24)
   2c9b8:	20 4c 01 0f 	move s1, 83
   2c9bc:	8a 7e 00 f8 	call 129576 <S_StartSound>
   2c9c0:	38 00 00 a8 	load_32 s1, (s24)
   2c9c4:	01 30 00 a8 	load_32 s0, 12(s1)
   2c9c8:	21 40 00 a8 	load_32 s1, 16(s1)
   2c9cc:	79 00 00 a8 	load_32 s3, (s25)
   2c9d0:	43 30 00 a8 	load_32 s2, 12(s3)
   2c9d4:	63 40 00 a8 	load_32 s3, 16(s3)
   2c9d8:	64 32 00 f8 	call 51600 <R_PointToAngle2>
   2c9dc:	38 00 00 a8 	load_32 s1, (s24)
   2c9e0:	01 80 00 88 	store_32 s0, 32(s1)
   2c9e4:	fe b3 00 a8 	load_32 ra, 44(sp)
   2c9e8:	7e c3 00 a8 	load_32 s27, 48(sp)
   2c9ec:	5e d3 00 a8 	load_32 s26, 52(sp)
   2c9f0:	3e e3 00 a8 	load_32 s25, 56(sp)
   2c9f4:	1e f3 00 a8 	load_32 s24, 60(sp)
   2c9f8:	de 03 01 05 	add_i sp, sp, 64
   2c9fc:	1f 00 00 f0 	ret

000000000002ca00 A_Saw:
   2ca00:	de 03 ff 05 	add_i sp, sp, -64
   2ca04:	1e f3 00 88 	store_32 s24, 60(sp)
   2ca08:	3e e3 00 88 	store_32 s25, 56(sp)
   2ca0c:	5e d3 00 88 	store_32 s26, 52(sp)
   2ca10:	7e c3 00 88 	store_32 s27, 48(sp)
   2ca14:	fe b3 00 88 	store_32 ra, 44(sp)
   2ca18:	00 03 f0 c0 	move s24, s0
   2ca1c:	36 be ff f9 	call -67368 <P_Random>
   2ca20:	33 64 66 4f 	movehi s1, 209715
   2ca24:	21 9c 19 00 	or s1, s1, 1639
   2ca28:	20 80 f0 c1 	mulh_i s1, s0, s1
   2ca2c:	41 08 00 09 	ashr s2, s1, 2
   2ca30:	21 7c 00 0a 	shr s1, s1, 31
   2ca34:	22 80 50 c0 	add_i s1, s2, s1
   2ca38:	21 28 00 07 	mull_i s1, s1, 10
   2ca3c:	00 80 60 c0 	sub_i s0, s0, s1
   2ca40:	38 00 00 a8 	load_32 s1, (s24)
   2ca44:	00 04 00 0b 	shl s0, s0, 1
   2ca48:	61 83 00 a8 	load_32 s27, 32(s1)
   2ca4c:	20 0b 00 05 	add_i s25, s0, 2
   2ca50:	29 be ff f9 	call -67420 <P_Random>
   2ca54:	40 03 f0 c0 	move s26, s0
   2ca58:	27 be ff f9 	call -67428 <P_Random>
   2ca5c:	1a 00 60 c0 	sub_i s0, s26, s0
   2ca60:	20 40 00 4f 	movehi s1, 512
   2ca64:	00 48 00 0b 	shl s0, s0, 18
   2ca68:	40 83 5d c0 	add_i s26, s0, s27
   2ca6c:	18 00 00 a8 	load_32 s0, (s24)
   2ca70:	61 07 00 00 	or s27, s1, 1
   2ca74:	20 00 fd c0 	move s1, s26
   2ca78:	40 80 fd c0 	move s2, s27
   2ca7c:	2e f1 ff f9 	call -15176 <P_AimLineAttack>
   2ca80:	60 00 f0 c0 	move s3, s0
   2ca84:	18 00 00 a8 	load_32 s0, (s24)
   2ca88:	20 00 fd c0 	move s1, s26
   2ca8c:	40 80 fd c0 	move s2, s27
   2ca90:	80 80 fc c0 	move s4, s25
   2ca94:	6e f1 ff f9 	call -14920 <P_LineAttack>
   2ca98:	1b 04 00 4f 	movehi s0, 59
   2ca9c:	20 93 2b 00 	or s25, s0, 2788
   2caa0:	39 00 00 a8 	load_32 s1, (s25)
   2caa4:	18 00 00 a8 	load_32 s0, (s24)
   2caa8:	41 00 00 f4 	bnz s1, 8 <A_Saw+0xb0>
   2caac:	19 00 00 f6 	b 100 <A_Saw+0x110>
   2cab0:	20 34 00 0f 	move s1, 13
   2cab4:	4c 7e 00 f8 	call 129328 <S_StartSound>
   2cab8:	38 00 00 a8 	load_32 s1, (s24)
   2cabc:	01 30 00 a8 	load_32 s0, 12(s1)
   2cac0:	21 40 00 a8 	load_32 s1, 16(s1)
   2cac4:	79 00 00 a8 	load_32 s3, (s25)
   2cac8:	43 30 00 a8 	load_32 s2, 12(s3)
   2cacc:	63 40 00 a8 	load_32 s3, 16(s3)
   2cad0:	26 32 00 f8 	call 51352 <R_PointToAngle2>
   2cad4:	38 00 00 a8 	load_32 s1, (s24)
   2cad8:	80 00 80 4f 	movehi s4, 262144
   2cadc:	84 04 00 00 	or s4, s4, 1
   2cae0:	41 80 00 a8 	load_32 s2, 32(s1)
   2cae4:	60 00 61 c0 	sub_i s3, s0, s2
   2cae8:	83 00 82 c1 	cmplt_u s4, s3, s4
   2caec:	84 01 00 f4 	bnz s4, 48 <A_Saw+0x11c>
   2caf0:	86 cc fc 4f 	movehi s4, 517734
   2caf4:	a4 30 33 00 	or s5, s4, 3276
   2caf8:	63 80 62 c1 	cmpgt_u s3, s3, s5
   2cafc:	03 02 00 f4 	bnz s3, 64 <A_Saw+0x13c>
   2cb00:	41 0c 03 4f 	movehi s2, 6241
   2cb04:	42 0c 43 00 	or s2, s2, 4291
   2cb08:	00 00 51 c0 	add_i s0, s0, s2
   2cb0c:	10 00 00 f6 	b 64 <A_Saw+0x14c>
   2cb10:	20 30 00 0f 	move s1, 12
   2cb14:	34 7e 00 f8 	call 129232 <S_StartSound>
   2cb18:	11 00 00 f6 	b 68 <A_Saw+0x15c>
   2cb1c:	99 30 03 4f 	movehi s4, 6553
   2cb20:	a4 d0 4c 00 	or s5, s4, 4916
   2cb24:	63 80 82 c1 	cmplt_u s3, s3, s5
   2cb28:	e3 00 00 f4 	bnz s3, 28 <A_Saw+0x144>
   2cb2c:	5e f0 fc 4f 	movehi s2, 518046
   2cb30:	42 f4 3c 00 	or s2, s2, 3901
   2cb34:	00 00 51 c0 	add_i s0, s0, s2
   2cb38:	05 00 00 f6 	b 20 <A_Saw+0x14c>
   2cb3c:	04 34 33 00 	or s0, s4, 3277
   2cb40:	02 00 00 f6 	b 8 <A_Saw+0x148>
   2cb44:	04 cc 4c 00 	or s0, s4, 4915
   2cb48:	02 00 50 c0 	add_i s0, s2, s0
   2cb4c:	01 80 00 88 	store_32 s0, 32(s1)
   2cb50:	01 a0 01 a8 	load_32 s0, 104(s1)
   2cb54:	00 00 02 00 	or s0, s0, 128
   2cb58:	01 a0 01 88 	store_32 s0, 104(s1)
   2cb5c:	fe b3 00 a8 	load_32 ra, 44(sp)
   2cb60:	7e c3 00 a8 	load_32 s27, 48(sp)
   2cb64:	5e d3 00 a8 	load_32 s26, 52(sp)
   2cb68:	3e e3 00 a8 	load_32 s25, 56(sp)
   2cb6c:	1e f3 00 a8 	load_32 s24, 60(sp)
   2cb70:	de 03 01 05 	add_i sp, sp, 64
   2cb74:	1f 00 00 f0 	ret

000000000002cb78 A_FireMissile:
   2cb78:	de 03 ff 05 	add_i sp, sp, -64
   2cb7c:	fe f3 00 88 	store_32 ra, 60(sp)
   2cb80:	33 04 00 4f 	movehi s1, 51
   2cb84:	40 c0 01 a8 	load_32 s2, 112(s0)
   2cb88:	21 70 45 00 	or s1, s1, 4444
   2cb8c:	42 60 00 07 	mull_i s2, s2, 24
   2cb90:	21 00 51 c0 	add_i s1, s1, s2
   2cb94:	21 00 00 a8 	load_32 s1, (s1)
   2cb98:	21 08 00 0b 	shl s1, s1, 2
   2cb9c:	20 80 50 c0 	add_i s1, s0, s1
   2cba0:	41 70 02 a8 	load_32 s2, 156(s1)
   2cba4:	42 fc ff 05 	add_i s2, s2, -1
   2cba8:	41 70 02 88 	store_32 s2, 156(s1)
   2cbac:	00 00 00 a8 	load_32 s0, (s0)
   2cbb0:	20 84 00 0f 	move s1, 33
   2cbb4:	f3 1a 00 f8 	call 27596 <P_SpawnPlayerMissile>
   2cbb8:	fe f3 00 a8 	load_32 ra, 60(sp)
   2cbbc:	de 03 01 05 	add_i sp, sp, 64
   2cbc0:	1f 00 00 f0 	ret

000000000002cbc4 A_FireBFG:
   2cbc4:	de 03 ff 05 	add_i sp, sp, -64
   2cbc8:	fe f3 00 88 	store_32 ra, 60(sp)
   2cbcc:	33 04 00 4f 	movehi s1, 51
   2cbd0:	40 c0 01 a8 	load_32 s2, 112(s0)
   2cbd4:	21 70 45 00 	or s1, s1, 4444
   2cbd8:	42 60 00 07 	mull_i s2, s2, 24
   2cbdc:	21 00 51 c0 	add_i s1, s1, s2
   2cbe0:	21 00 00 a8 	load_32 s1, (s1)
   2cbe4:	21 08 00 0b 	shl s1, s1, 2
   2cbe8:	20 80 50 c0 	add_i s1, s0, s1
   2cbec:	41 70 02 a8 	load_32 s2, 156(s1)
   2cbf0:	42 60 ff 05 	add_i s2, s2, -40
   2cbf4:	41 70 02 88 	store_32 s2, 156(s1)
   2cbf8:	00 00 00 a8 	load_32 s0, (s0)
   2cbfc:	20 8c 00 0f 	move s1, 35
   2cc00:	e0 1a 00 f8 	call 27520 <P_SpawnPlayerMissile>
   2cc04:	fe f3 00 a8 	load_32 ra, 60(sp)
   2cc08:	de 03 01 05 	add_i sp, sp, 64
   2cc0c:	1f 00 00 f0 	ret

000000000002cc10 A_FirePlasma:
   2cc10:	de 03 ff 05 	add_i sp, sp, -64
   2cc14:	1e f3 00 88 	store_32 s24, 60(sp)
   2cc18:	3e e3 00 88 	store_32 s25, 56(sp)
   2cc1c:	5e d3 00 88 	store_32 s26, 52(sp)
   2cc20:	fe c3 00 88 	store_32 ra, 48(sp)
   2cc24:	00 03 f0 c0 	move s24, s0
   2cc28:	13 04 00 4f 	movehi s0, 51
   2cc2c:	38 c0 01 a8 	load_32 s1, 112(s24)
   2cc30:	00 70 45 00 	or s0, s0, 4444
   2cc34:	21 60 00 07 	mull_i s1, s1, 24
   2cc38:	00 80 50 c0 	add_i s0, s0, s1
   2cc3c:	20 00 00 a8 	load_32 s1, (s0)
   2cc40:	21 08 00 0b 	shl s1, s1, 2
   2cc44:	38 80 50 c0 	add_i s1, s24, s1
   2cc48:	41 70 02 a8 	load_32 s2, 156(s1)
   2cc4c:	42 fc ff 05 	add_i s2, s2, -1
   2cc50:	41 70 02 88 	store_32 s2, 156(s1)
   2cc54:	20 53 00 a8 	load_32 s25, 20(s0)
   2cc58:	a7 bd ff f9 	call -67940 <P_Random>
   2cc5c:	00 04 00 01 	and s0, s0, 1
   2cc60:	34 04 00 4f 	movehi s1, 52
   2cc64:	00 80 5c c0 	add_i s0, s0, s25
   2cc68:	38 13 04 05 	add_i s25, s24, 260
   2cc6c:	41 23 5c 00 	or s26, s1, 5896
   2cc70:	40 00 00 f4 	bnz s0, 8 <A_FirePlasma+0x68>
   2cc74:	1a 00 00 f6 	b 104 <A_FirePlasma+0xcc>
   2cc78:	40 70 00 07 	mull_i s2, s0, 28
   2cc7c:	1a 00 51 c0 	add_i s0, s26, s2
   2cc80:	18 10 04 88 	store_32 s0, 260(s24)
   2cc84:	20 20 00 a8 	load_32 s1, 8(s0)
   2cc88:	38 20 04 88 	store_32 s1, 264(s24)
   2cc8c:	60 50 00 a8 	load_32 s3, 20(s0)
   2cc90:	e3 00 00 f2 	bz s3, 28 <A_FirePlasma+0x9c>
   2cc94:	9a 00 51 c0 	add_i s4, s26, s2
   2cc98:	63 40 00 0b 	shl s3, s3, 16
   2cc9c:	78 30 04 88 	store_32 s3, 268(s24)
   2cca0:	64 60 00 a8 	load_32 s3, 24(s4)
   2cca4:	63 40 00 0b 	shl s3, s3, 16
   2cca8:	78 40 04 88 	store_32 s3, 272(s24)
   2ccac:	5a 00 51 c0 	add_i s2, s26, s2
   2ccb0:	42 30 00 a8 	load_32 s2, 12(s2)
   2ccb4:	e2 00 00 f2 	bz s2, 28 <A_FirePlasma+0xc0>
   2ccb8:	00 00 fc c0 	move s0, s24
   2ccbc:	20 80 fc c0 	move s1, s25
   2ccc0:	42 00 00 fc 	call s2
   2ccc4:	18 10 04 a8 	load_32 s0, 260(s24)
   2ccc8:	e0 00 00 f2 	bz s0, 28 <A_FirePlasma+0xd4>
   2cccc:	38 20 04 a8 	load_32 s1, 264(s24)
   2ccd0:	00 40 00 a8 	load_32 s0, 16(s0)
   2ccd4:	e1 fc ff f3 	bz s1, -100 <A_FirePlasma+0x60>
   2ccd8:	03 00 00 f6 	b 12 <A_FirePlasma+0xd4>
   2ccdc:	00 00 00 0f 	move s0, 0
   2cce0:	19 00 00 88 	store_32 s0, (s25)
   2cce4:	18 00 00 a8 	load_32 s0, (s24)
   2cce8:	20 88 00 0f 	move s1, 34
   2ccec:	a5 1a 00 f8 	call 27284 <P_SpawnPlayerMissile>
   2ccf0:	fe c3 00 a8 	load_32 ra, 48(sp)
   2ccf4:	5e d3 00 a8 	load_32 s26, 52(sp)
   2ccf8:	3e e3 00 a8 	load_32 s25, 56(sp)
   2ccfc:	1e f3 00 a8 	load_32 s24, 60(sp)
   2cd00:	de 03 01 05 	add_i sp, sp, 64
   2cd04:	1f 00 00 f0 	ret

000000000002cd08 P_BulletSlope:
   2cd08:	de 03 ff 05 	add_i sp, sp, -64
   2cd0c:	1e f3 00 88 	store_32 s24, 60(sp)
   2cd10:	3e e3 00 88 	store_32 s25, 56(sp)
   2cd14:	5e d3 00 88 	store_32 s26, 52(sp)
   2cd18:	7e c3 00 88 	store_32 s27, 48(sp)
   2cd1c:	fe b3 00 88 	store_32 ra, 44(sp)
   2cd20:	00 03 f0 c0 	move s24, s0
   2cd24:	40 03 04 4f 	movehi s26, 8192
   2cd28:	38 80 00 a8 	load_32 s1, 32(s24)
   2cd2c:	3e a0 00 88 	store_32 s1, 40(sp)
   2cd30:	40 00 fd c0 	move s2, s26
   2cd34:	80 f0 ff f9 	call -15872 <P_AimLineAttack>
   2cd38:	3b 04 00 4f 	movehi s1, 59
   2cd3c:	5b 04 00 4f 	movehi s2, 59
   2cd40:	61 03 48 00 	or s27, s1, 4608
   2cd44:	22 93 2b 00 	or s25, s2, 2788
   2cd48:	1b 00 00 88 	store_32 s0, (s27)
   2cd4c:	19 00 00 a8 	load_32 s0, (s25)
   2cd50:	00 02 00 f4 	bnz s0, 64 <P_BulletSlope+0x88>
   2cd54:	1e a0 00 a8 	load_32 s0, 40(sp)
   2cd58:	20 00 5d c0 	add_i s1, s0, s26
   2cd5c:	00 00 fc c0 	move s0, s24
   2cd60:	40 00 fd c0 	move s2, s26
   2cd64:	74 f0 ff f9 	call -15920 <P_AimLineAttack>
   2cd68:	1b 00 00 88 	store_32 s0, (s27)
   2cd6c:	19 00 00 a8 	load_32 s0, (s25)
   2cd70:	00 01 00 f4 	bnz s0, 32 <P_BulletSlope+0x88>
   2cd74:	3e a0 00 a8 	load_32 s1, 40(sp)
   2cd78:	00 00 fc 4f 	movehi s0, 516096
   2cd7c:	40 00 04 4f 	movehi s2, 8192
   2cd80:	21 00 50 c0 	add_i s1, s1, s0
   2cd84:	00 00 fc c0 	move s0, s24
   2cd88:	6b f0 ff f9 	call -15956 <P_AimLineAttack>
   2cd8c:	1b 00 00 88 	store_32 s0, (s27)
   2cd90:	fe b3 00 a8 	load_32 ra, 44(sp)
   2cd94:	7e c3 00 a8 	load_32 s27, 48(sp)
   2cd98:	5e d3 00 a8 	load_32 s26, 52(sp)
   2cd9c:	3e e3 00 a8 	load_32 s25, 56(sp)
   2cda0:	1e f3 00 a8 	load_32 s24, 60(sp)
   2cda4:	de 03 01 05 	add_i sp, sp, 64
   2cda8:	1f 00 00 f0 	ret

000000000002cdac P_GunShot:
   2cdac:	de 03 ff 05 	add_i sp, sp, -64
   2cdb0:	1e f3 00 88 	store_32 s24, 60(sp)
   2cdb4:	3e e3 00 88 	store_32 s25, 56(sp)
   2cdb8:	5e d3 00 88 	store_32 s26, 52(sp)
   2cdbc:	7e c3 00 88 	store_32 s27, 48(sp)
   2cdc0:	fe b3 00 88 	store_32 ra, 44(sp)
   2cdc4:	60 83 f0 c0 	move s27, s1
   2cdc8:	00 03 f0 c0 	move s24, s0
   2cdcc:	4a bd ff f9 	call -68312 <P_Random>
   2cdd0:	2a 54 55 4f 	movehi s1, 174762
   2cdd4:	58 83 00 a8 	load_32 s26, 32(s24)
   2cdd8:	21 58 55 00 	or s1, s1, 5462
   2cddc:	20 80 f0 c1 	mulh_i s1, s0, s1
   2cde0:	41 7c 00 0a 	shr s2, s1, 31
   2cde4:	21 00 51 c0 	add_i s1, s1, s2
   2cde8:	21 0c 00 07 	mull_i s1, s1, 3
   2cdec:	00 80 60 c0 	sub_i s0, s0, s1
   2cdf0:	00 14 00 07 	mull_i s0, s0, 5
   2cdf4:	20 17 00 05 	add_i s25, s0, 5
   2cdf8:	fb 00 00 f4 	bnz s27, 28 <P_GunShot+0x68>
   2cdfc:	3e bd ff f9 	call -68360 <P_Random>
   2ce00:	60 03 f0 c0 	move s27, s0
   2ce04:	3c bd ff f9 	call -68368 <P_Random>
   2ce08:	1b 00 60 c0 	sub_i s0, s27, s0
   2ce0c:	00 48 00 0b 	shl s0, s0, 18
   2ce10:	40 03 5d c0 	add_i s26, s0, s26
   2ce14:	1b 04 00 4f 	movehi s0, 59
   2ce18:	40 00 08 4f 	movehi s2, 16384
   2ce1c:	00 00 48 00 	or s0, s0, 4608
   2ce20:	60 00 00 a8 	load_32 s3, (s0)
   2ce24:	00 00 fc c0 	move s0, s24
   2ce28:	20 00 fd c0 	move s1, s26
   2ce2c:	80 80 fc c0 	move s4, s25
   2ce30:	87 f0 ff f9 	call -15844 <P_LineAttack>
   2ce34:	fe b3 00 a8 	load_32 ra, 44(sp)
   2ce38:	7e c3 00 a8 	load_32 s27, 48(sp)
   2ce3c:	5e d3 00 a8 	load_32 s26, 52(sp)
   2ce40:	3e e3 00 a8 	load_32 s25, 56(sp)
   2ce44:	1e f3 00 a8 	load_32 s24, 60(sp)
   2ce48:	de 03 01 05 	add_i sp, sp, 64
   2ce4c:	1f 00 00 f0 	ret

000000000002ce50 A_FirePistol:
   2ce50:	de 03 ff 05 	add_i sp, sp, -64
   2ce54:	1e f3 00 88 	store_32 s24, 60(sp)
   2ce58:	3e e3 00 88 	store_32 s25, 56(sp)
   2ce5c:	5e d3 00 88 	store_32 s26, 52(sp)
   2ce60:	7e c3 00 88 	store_32 s27, 48(sp)
   2ce64:	fe b3 00 88 	store_32 ra, 44(sp)
   2ce68:	00 03 f0 c0 	move s24, s0
   2ce6c:	20 04 00 0f 	move s1, 1
   2ce70:	18 00 00 a8 	load_32 s0, (s24)
   2ce74:	5c 7d 00 f8 	call 128368 <S_StartSound>
   2ce78:	18 00 00 a8 	load_32 s0, (s24)
   2ce7c:	20 6c 02 0f 	move s1, 155
   2ce80:	e6 13 00 f8 	call 20376 <P_SetMobjState>
   2ce84:	13 04 00 4f 	movehi s0, 51
   2ce88:	38 c0 01 a8 	load_32 s1, 112(s24)
   2ce8c:	38 13 04 05 	add_i s25, s24, 260
   2ce90:	00 70 45 00 	or s0, s0, 4444
   2ce94:	21 60 00 07 	mull_i s1, s1, 24
   2ce98:	00 80 50 c0 	add_i s0, s0, s1
   2ce9c:	20 00 00 a8 	load_32 s1, (s0)
   2cea0:	00 50 00 05 	add_i s0, s0, 20
   2cea4:	21 08 00 0b 	shl s1, s1, 2
   2cea8:	38 80 50 c0 	add_i s1, s24, s1
   2ceac:	41 70 02 a8 	load_32 s2, 156(s1)
   2ceb0:	42 fc ff 05 	add_i s2, s2, -1
   2ceb4:	41 70 02 88 	store_32 s2, 156(s1)
   2ceb8:	34 04 00 4f 	movehi s1, 52
   2cebc:	41 23 5c 00 	or s26, s1, 5896
   2cec0:	00 00 00 a8 	load_32 s0, (s0)
   2cec4:	40 00 00 f4 	bnz s0, 8 <A_FirePistol+0x7c>
   2cec8:	1a 00 00 f6 	b 104 <A_FirePistol+0xe0>
   2cecc:	40 70 00 07 	mull_i s2, s0, 28
   2ced0:	1a 00 51 c0 	add_i s0, s26, s2
   2ced4:	18 10 04 88 	store_32 s0, 260(s24)
   2ced8:	20 20 00 a8 	load_32 s1, 8(s0)
   2cedc:	38 20 04 88 	store_32 s1, 264(s24)
   2cee0:	60 50 00 a8 	load_32 s3, 20(s0)
   2cee4:	e3 00 00 f2 	bz s3, 28 <A_FirePistol+0xb0>
   2cee8:	9a 00 51 c0 	add_i s4, s26, s2
   2ceec:	63 40 00 0b 	shl s3, s3, 16
   2cef0:	78 30 04 88 	store_32 s3, 268(s24)
   2cef4:	64 60 00 a8 	load_32 s3, 24(s4)
   2cef8:	63 40 00 0b 	shl s3, s3, 16
   2cefc:	78 40 04 88 	store_32 s3, 272(s24)
   2cf00:	5a 00 51 c0 	add_i s2, s26, s2
   2cf04:	42 30 00 a8 	load_32 s2, 12(s2)
   2cf08:	e2 00 00 f2 	bz s2, 28 <A_FirePistol+0xd4>
   2cf0c:	00 00 fc c0 	move s0, s24
   2cf10:	20 80 fc c0 	move s1, s25
   2cf14:	42 00 00 fc 	call s2
   2cf18:	18 10 04 a8 	load_32 s0, 260(s24)
   2cf1c:	e0 00 00 f2 	bz s0, 28 <A_FirePistol+0xe8>
   2cf20:	38 20 04 a8 	load_32 s1, 264(s24)
   2cf24:	00 40 00 05 	add_i s0, s0, 16
   2cf28:	c1 fc ff f3 	bz s1, -104 <A_FirePistol+0x70>
   2cf2c:	03 00 00 f6 	b 12 <A_FirePistol+0xe8>
   2cf30:	00 00 00 0f 	move s0, 0
   2cf34:	19 00 00 88 	store_32 s0, (s25)
   2cf38:	18 00 00 a8 	load_32 s0, (s24)
   2cf3c:	60 03 04 4f 	movehi s27, 8192
   2cf40:	20 80 00 a8 	load_32 s1, 32(s0)
   2cf44:	1e a0 00 88 	store_32 s0, 40(sp)
   2cf48:	3e 90 00 88 	store_32 s1, 36(sp)
   2cf4c:	40 80 fd c0 	move s2, s27
   2cf50:	f9 ef ff f9 	call -16412 <P_AimLineAttack>
   2cf54:	3b 04 00 4f 	movehi s1, 59
   2cf58:	5b 04 00 4f 	movehi s2, 59
   2cf5c:	21 03 48 00 	or s25, s1, 4608
   2cf60:	42 93 2b 00 	or s26, s2, 2788
   2cf64:	19 00 00 88 	store_32 s0, (s25)
   2cf68:	1a 00 00 a8 	load_32 s0, (s26)
   2cf6c:	00 02 00 f4 	bnz s0, 64 <A_FirePistol+0x15c>
   2cf70:	1e 90 00 a8 	load_32 s0, 36(sp)
   2cf74:	20 80 5d c0 	add_i s1, s0, s27
   2cf78:	1e a0 00 a8 	load_32 s0, 40(sp)
   2cf7c:	40 80 fd c0 	move s2, s27
   2cf80:	ed ef ff f9 	call -16460 <P_AimLineAttack>
   2cf84:	19 00 00 88 	store_32 s0, (s25)
   2cf88:	1a 00 00 a8 	load_32 s0, (s26)
   2cf8c:	00 01 00 f4 	bnz s0, 32 <A_FirePistol+0x15c>
   2cf90:	3e 90 00 a8 	load_32 s1, 36(sp)
   2cf94:	00 00 fc 4f 	movehi s0, 516096
   2cf98:	40 00 04 4f 	movehi s2, 8192
   2cf9c:	21 00 50 c0 	add_i s1, s1, s0
   2cfa0:	1e a0 00 a8 	load_32 s0, 40(sp)
   2cfa4:	e4 ef ff f9 	call -16496 <P_AimLineAttack>
   2cfa8:	19 00 00 88 	store_32 s0, (s25)
   2cfac:	3e a3 00 88 	store_32 s25, 40(sp)
   2cfb0:	38 03 00 a8 	load_32 s25, (s24)
   2cfb4:	78 23 03 a8 	load_32 s27, 200(s24)
   2cfb8:	cf bc ff f9 	call -68804 <P_Random>
   2cfbc:	2a 54 55 4f 	movehi s1, 174762
   2cfc0:	59 83 00 a8 	load_32 s26, 32(s25)
   2cfc4:	21 58 55 00 	or s1, s1, 5462
   2cfc8:	20 80 f0 c1 	mulh_i s1, s0, s1
   2cfcc:	41 7c 00 0a 	shr s2, s1, 31
   2cfd0:	21 00 51 c0 	add_i s1, s1, s2
   2cfd4:	21 0c 00 07 	mull_i s1, s1, 3
   2cfd8:	00 80 60 c0 	sub_i s0, s0, s1
   2cfdc:	00 14 00 07 	mull_i s0, s0, 5
   2cfe0:	00 17 00 05 	add_i s24, s0, 5
   2cfe4:	fb 00 00 f2 	bz s27, 28 <A_FirePistol+0x1b0>
   2cfe8:	c3 bc ff f9 	call -68852 <P_Random>
   2cfec:	60 03 f0 c0 	move s27, s0
   2cff0:	c1 bc ff f9 	call -68860 <P_Random>
   2cff4:	1b 00 60 c0 	sub_i s0, s27, s0
   2cff8:	00 48 00 0b 	shl s0, s0, 18
   2cffc:	40 03 5d c0 	add_i s26, s0, s26
   2d000:	1e a0 00 a8 	load_32 s0, 40(sp)
   2d004:	40 00 08 4f 	movehi s2, 16384
   2d008:	60 00 00 a8 	load_32 s3, (s0)
   2d00c:	00 80 fc c0 	move s0, s25
   2d010:	20 00 fd c0 	move s1, s26
   2d014:	80 00 fc c0 	move s4, s24
   2d018:	0d f0 ff f9 	call -16332 <P_LineAttack>
   2d01c:	fe b3 00 a8 	load_32 ra, 44(sp)
   2d020:	7e c3 00 a8 	load_32 s27, 48(sp)
   2d024:	5e d3 00 a8 	load_32 s26, 52(sp)
   2d028:	3e e3 00 a8 	load_32 s25, 56(sp)
   2d02c:	1e f3 00 a8 	load_32 s24, 60(sp)
   2d030:	de 03 01 05 	add_i sp, sp, 64
   2d034:	1f 00 00 f0 	ret

000000000002d038 A_FireShotgun:
   2d038:	de 03 ff 05 	add_i sp, sp, -64
   2d03c:	1e f3 00 88 	store_32 s24, 60(sp)
   2d040:	3e e3 00 88 	store_32 s25, 56(sp)
   2d044:	5e d3 00 88 	store_32 s26, 52(sp)
   2d048:	7e c3 00 88 	store_32 s27, 48(sp)
   2d04c:	fe b3 00 88 	store_32 ra, 44(sp)
   2d050:	00 03 f0 c0 	move s24, s0
   2d054:	20 08 00 0f 	move s1, 2
   2d058:	18 00 00 a8 	load_32 s0, (s24)
   2d05c:	e2 7c 00 f8 	call 127880 <S_StartSound>
   2d060:	18 00 00 a8 	load_32 s0, (s24)
   2d064:	20 6c 02 0f 	move s1, 155
   2d068:	6c 13 00 f8 	call 19888 <P_SetMobjState>
   2d06c:	13 04 00 4f 	movehi s0, 51
   2d070:	38 c0 01 a8 	load_32 s1, 112(s24)
   2d074:	38 13 04 05 	add_i s25, s24, 260
   2d078:	00 70 45 00 	or s0, s0, 4444
   2d07c:	21 60 00 07 	mull_i s1, s1, 24
   2d080:	00 80 50 c0 	add_i s0, s0, s1
   2d084:	20 00 00 a8 	load_32 s1, (s0)
   2d088:	00 50 00 05 	add_i s0, s0, 20
   2d08c:	21 08 00 0b 	shl s1, s1, 2
   2d090:	38 80 50 c0 	add_i s1, s24, s1
   2d094:	41 70 02 a8 	load_32 s2, 156(s1)
   2d098:	42 fc ff 05 	add_i s2, s2, -1
   2d09c:	41 70 02 88 	store_32 s2, 156(s1)
   2d0a0:	34 04 00 4f 	movehi s1, 52
   2d0a4:	41 23 5c 00 	or s26, s1, 5896
   2d0a8:	00 00 00 a8 	load_32 s0, (s0)
   2d0ac:	40 00 00 f4 	bnz s0, 8 <A_FireShotgun+0x7c>
   2d0b0:	1a 00 00 f6 	b 104 <A_FireShotgun+0xe0>
   2d0b4:	40 70 00 07 	mull_i s2, s0, 28
   2d0b8:	1a 00 51 c0 	add_i s0, s26, s2
   2d0bc:	18 10 04 88 	store_32 s0, 260(s24)
   2d0c0:	20 20 00 a8 	load_32 s1, 8(s0)
   2d0c4:	38 20 04 88 	store_32 s1, 264(s24)
   2d0c8:	60 50 00 a8 	load_32 s3, 20(s0)
   2d0cc:	e3 00 00 f2 	bz s3, 28 <A_FireShotgun+0xb0>
   2d0d0:	9a 00 51 c0 	add_i s4, s26, s2
   2d0d4:	63 40 00 0b 	shl s3, s3, 16
   2d0d8:	78 30 04 88 	store_32 s3, 268(s24)
   2d0dc:	64 60 00 a8 	load_32 s3, 24(s4)
   2d0e0:	63 40 00 0b 	shl s3, s3, 16
   2d0e4:	78 40 04 88 	store_32 s3, 272(s24)
   2d0e8:	5a 00 51 c0 	add_i s2, s26, s2
   2d0ec:	42 30 00 a8 	load_32 s2, 12(s2)
   2d0f0:	e2 00 00 f2 	bz s2, 28 <A_FireShotgun+0xd4>
   2d0f4:	00 00 fc c0 	move s0, s24
   2d0f8:	20 80 fc c0 	move s1, s25
   2d0fc:	42 00 00 fc 	call s2
   2d100:	18 10 04 a8 	load_32 s0, 260(s24)
   2d104:	e0 00 00 f2 	bz s0, 28 <A_FireShotgun+0xe8>
   2d108:	38 20 04 a8 	load_32 s1, 264(s24)
   2d10c:	00 40 00 05 	add_i s0, s0, 16
   2d110:	c1 fc ff f3 	bz s1, -104 <A_FireShotgun+0x70>
   2d114:	03 00 00 f6 	b 12 <A_FireShotgun+0xe8>
   2d118:	00 00 00 0f 	move s0, 0
   2d11c:	19 00 00 88 	store_32 s0, (s25)
   2d120:	38 03 00 a8 	load_32 s25, (s24)
   2d124:	60 03 04 4f 	movehi s27, 8192
   2d128:	39 80 00 a8 	load_32 s1, 32(s25)
   2d12c:	00 80 fc c0 	move s0, s25
   2d130:	3e 90 00 88 	store_32 s1, 36(sp)
   2d134:	40 80 fd c0 	move s2, s27
   2d138:	7f ef ff f9 	call -16900 <P_AimLineAttack>
   2d13c:	3b 04 00 4f 	movehi s1, 59
   2d140:	5b 04 00 4f 	movehi s2, 59
   2d144:	21 00 48 00 	or s1, s1, 4608
   2d148:	3e a0 00 88 	store_32 s1, 40(sp)
   2d14c:	42 93 2b 00 	or s26, s2, 2788
   2d150:	01 00 00 88 	store_32 s0, (s1)
   2d154:	1a 00 00 a8 	load_32 s0, (s26)
   2d158:	40 02 00 f4 	bnz s0, 72 <A_FireShotgun+0x168>
   2d15c:	1e 90 00 a8 	load_32 s0, 36(sp)
   2d160:	20 80 5d c0 	add_i s1, s0, s27
   2d164:	00 80 fc c0 	move s0, s25
   2d168:	40 80 fd c0 	move s2, s27
   2d16c:	72 ef ff f9 	call -16952 <P_AimLineAttack>
   2d170:	3e a0 00 a8 	load_32 s1, 40(sp)
   2d174:	01 00 00 88 	store_32 s0, (s1)
   2d178:	1a 00 00 a8 	load_32 s0, (s26)
   2d17c:	20 01 00 f4 	bnz s0, 36 <A_FireShotgun+0x168>
   2d180:	3e 90 00 a8 	load_32 s1, 36(sp)
   2d184:	00 00 fc 4f 	movehi s0, 516096
   2d188:	40 00 04 4f 	movehi s2, 8192
   2d18c:	21 00 50 c0 	add_i s1, s1, s0
   2d190:	00 80 fc c0 	move s0, s25
   2d194:	68 ef ff f9 	call -16992 <P_AimLineAttack>
   2d198:	3e a0 00 a8 	load_32 s1, 40(sp)
   2d19c:	01 00 00 88 	store_32 s0, (s1)
   2d1a0:	58 03 00 a8 	load_32 s26, (s24)
   2d1a4:	54 bc ff f9 	call -69296 <P_Random>
   2d1a8:	2a 54 55 4f 	movehi s1, 174762
   2d1ac:	21 58 55 00 	or s1, s1, 5462
   2d1b0:	3e 80 00 88 	store_32 s1, 32(sp)
   2d1b4:	20 80 f0 c1 	mulh_i s1, s0, s1
   2d1b8:	41 7c 00 0a 	shr s2, s1, 31
   2d1bc:	21 00 51 c0 	add_i s1, s1, s2
   2d1c0:	21 0c 00 07 	mull_i s1, s1, 3
   2d1c4:	00 80 60 c0 	sub_i s0, s0, s1
   2d1c8:	00 14 00 07 	mull_i s0, s0, 5
   2d1cc:	00 14 00 05 	add_i s0, s0, 5
   2d1d0:	1e 70 00 88 	store_32 s0, 28(sp)
   2d1d4:	7a 83 00 a8 	load_32 s27, 32(s26)
   2d1d8:	47 bc ff f9 	call -69348 <P_Random>
   2d1dc:	20 03 f0 c0 	move s25, s0
   2d1e0:	45 bc ff f9 	call -69356 <P_Random>
   2d1e4:	19 00 60 c0 	sub_i s0, s25, s0
   2d1e8:	40 00 08 4f 	movehi s2, 16384
   2d1ec:	00 48 00 0b 	shl s0, s0, 18
   2d1f0:	20 80 5d c0 	add_i s1, s0, s27
   2d1f4:	1e a0 00 a8 	load_32 s0, 40(sp)
   2d1f8:	60 00 00 a8 	load_32 s3, (s0)
   2d1fc:	5e 90 00 88 	store_32 s2, 36(sp)
   2d200:	00 00 fd c0 	move s0, s26
   2d204:	9e 70 00 a8 	load_32 s4, 28(sp)
   2d208:	91 ef ff f9 	call -16828 <P_LineAttack>
   2d20c:	58 03 00 a8 	load_32 s26, (s24)
   2d210:	39 bc ff f9 	call -69404 <P_Random>
   2d214:	7e 83 00 a8 	load_32 s27, 32(sp)
   2d218:	20 80 fd c1 	mulh_i s1, s0, s27
   2d21c:	41 7c 00 0a 	shr s2, s1, 31
   2d220:	21 00 51 c0 	add_i s1, s1, s2
   2d224:	21 0c 00 07 	mull_i s1, s1, 3
   2d228:	00 80 60 c0 	sub_i s0, s0, s1
   2d22c:	00 14 00 07 	mull_i s0, s0, 5
   2d230:	00 14 00 05 	add_i s0, s0, 5
   2d234:	1e 70 00 88 	store_32 s0, 28(sp)
   2d238:	1a 80 00 a8 	load_32 s0, 32(s26)
   2d23c:	1e 60 00 88 	store_32 s0, 24(sp)
   2d240:	2d bc ff f9 	call -69452 <P_Random>
   2d244:	20 03 f0 c0 	move s25, s0
   2d248:	2b bc ff f9 	call -69460 <P_Random>
   2d24c:	19 00 60 c0 	sub_i s0, s25, s0
   2d250:	3e 60 00 a8 	load_32 s1, 24(sp)
   2d254:	00 48 00 0b 	shl s0, s0, 18
   2d258:	20 80 50 c0 	add_i s1, s0, s1
   2d25c:	1e a0 00 a8 	load_32 s0, 40(sp)
   2d260:	60 00 00 a8 	load_32 s3, (s0)
   2d264:	00 00 fd c0 	move s0, s26
   2d268:	5e 90 00 a8 	load_32 s2, 36(sp)
   2d26c:	9e 70 00 a8 	load_32 s4, 28(sp)
   2d270:	77 ef ff f9 	call -16932 <P_LineAttack>
   2d274:	58 03 00 a8 	load_32 s26, (s24)
   2d278:	1f bc ff f9 	call -69508 <P_Random>
   2d27c:	20 80 fd c1 	mulh_i s1, s0, s27
   2d280:	41 7c 00 0a 	shr s2, s1, 31
   2d284:	21 00 51 c0 	add_i s1, s1, s2
   2d288:	21 0c 00 07 	mull_i s1, s1, 3
   2d28c:	00 80 60 c0 	sub_i s0, s0, s1
   2d290:	00 14 00 07 	mull_i s0, s0, 5
   2d294:	00 14 00 05 	add_i s0, s0, 5
   2d298:	1e 70 00 88 	store_32 s0, 28(sp)
   2d29c:	3a 83 00 a8 	load_32 s25, 32(s26)
   2d2a0:	15 bc ff f9 	call -69548 <P_Random>
   2d2a4:	60 03 f0 c0 	move s27, s0
   2d2a8:	13 bc ff f9 	call -69556 <P_Random>
   2d2ac:	1b 00 60 c0 	sub_i s0, s27, s0
   2d2b0:	00 48 00 0b 	shl s0, s0, 18
   2d2b4:	20 80 5c c0 	add_i s1, s0, s25
   2d2b8:	3e a3 00 a8 	load_32 s25, 40(sp)
   2d2bc:	79 00 00 a8 	load_32 s3, (s25)
   2d2c0:	00 00 fd c0 	move s0, s26
   2d2c4:	5e 93 00 a8 	load_32 s26, 36(sp)
   2d2c8:	40 00 fd c0 	move s2, s26
   2d2cc:	9e 70 00 a8 	load_32 s4, 28(sp)
   2d2d0:	5f ef ff f9 	call -17028 <P_LineAttack>
   2d2d4:	78 03 00 a8 	load_32 s27, (s24)
   2d2d8:	7e 63 00 88 	store_32 s27, 24(sp)
   2d2dc:	06 bc ff f9 	call -69608 <P_Random>
   2d2e0:	3e 80 00 a8 	load_32 s1, 32(sp)
   2d2e4:	20 80 f0 c1 	mulh_i s1, s0, s1
   2d2e8:	41 7c 00 0a 	shr s2, s1, 31
   2d2ec:	21 00 51 c0 	add_i s1, s1, s2
   2d2f0:	21 0c 00 07 	mull_i s1, s1, 3
   2d2f4:	00 80 60 c0 	sub_i s0, s0, s1
   2d2f8:	00 14 00 07 	mull_i s0, s0, 5
   2d2fc:	00 14 00 05 	add_i s0, s0, 5
   2d300:	1e 70 00 88 	store_32 s0, 28(sp)
   2d304:	1b 80 00 a8 	load_32 s0, 32(s27)
   2d308:	1e 50 00 88 	store_32 s0, 20(sp)
   2d30c:	fa bb ff f9 	call -69656 <P_Random>
   2d310:	60 03 f0 c0 	move s27, s0
   2d314:	f8 bb ff f9 	call -69664 <P_Random>
   2d318:	1b 00 60 c0 	sub_i s0, s27, s0
   2d31c:	3e 50 00 a8 	load_32 s1, 20(sp)
   2d320:	79 00 00 a8 	load_32 s3, (s25)
   2d324:	00 48 00 0b 	shl s0, s0, 18
   2d328:	20 80 50 c0 	add_i s1, s0, s1
   2d32c:	1e 60 00 a8 	load_32 s0, 24(sp)
   2d330:	40 00 fd c0 	move s2, s26
   2d334:	9e 70 00 a8 	load_32 s4, 28(sp)
   2d338:	45 ef ff f9 	call -17132 <P_LineAttack>
   2d33c:	58 03 00 a8 	load_32 s26, (s24)
   2d340:	5e 63 00 88 	store_32 s26, 24(sp)
   2d344:	ec bb ff f9 	call -69712 <P_Random>
   2d348:	3e 83 00 a8 	load_32 s25, 32(sp)
   2d34c:	20 80 fc c1 	mulh_i s1, s0, s25
   2d350:	41 7c 00 0a 	shr s2, s1, 31
   2d354:	21 00 51 c0 	add_i s1, s1, s2
   2d358:	21 0c 00 07 	mull_i s1, s1, 3
   2d35c:	00 80 60 c0 	sub_i s0, s0, s1
   2d360:	00 14 00 07 	mull_i s0, s0, 5
   2d364:	00 14 00 05 	add_i s0, s0, 5
   2d368:	1e 70 00 88 	store_32 s0, 28(sp)
   2d36c:	5a 83 00 a8 	load_32 s26, 32(s26)
   2d370:	e1 bb ff f9 	call -69756 <P_Random>
   2d374:	60 03 f0 c0 	move s27, s0
   2d378:	df bb ff f9 	call -69764 <P_Random>
   2d37c:	1b 00 60 c0 	sub_i s0, s27, s0
   2d380:	00 48 00 0b 	shl s0, s0, 18
   2d384:	20 00 5d c0 	add_i s1, s0, s26
   2d388:	5e a3 00 a8 	load_32 s26, 40(sp)
   2d38c:	7a 00 00 a8 	load_32 s3, (s26)
   2d390:	1e 60 00 a8 	load_32 s0, 24(sp)
   2d394:	5e 90 00 a8 	load_32 s2, 36(sp)
   2d398:	9e 70 00 a8 	load_32 s4, 28(sp)
   2d39c:	2c ef ff f9 	call -17232 <P_LineAttack>
   2d3a0:	78 03 00 a8 	load_32 s27, (s24)
   2d3a4:	d4 bb ff f9 	call -69808 <P_Random>
   2d3a8:	20 80 fc c1 	mulh_i s1, s0, s25
   2d3ac:	41 7c 00 0a 	shr s2, s1, 31
   2d3b0:	21 00 51 c0 	add_i s1, s1, s2
   2d3b4:	21 0c 00 07 	mull_i s1, s1, 3
   2d3b8:	00 80 60 c0 	sub_i s0, s0, s1
   2d3bc:	00 14 00 07 	mull_i s0, s0, 5
   2d3c0:	00 14 00 05 	add_i s0, s0, 5
   2d3c4:	1e 70 00 88 	store_32 s0, 28(sp)
   2d3c8:	1b 80 00 a8 	load_32 s0, 32(s27)
   2d3cc:	1e 60 00 88 	store_32 s0, 24(sp)
   2d3d0:	20 83 fd c0 	move s25, s27
   2d3d4:	c8 bb ff f9 	call -69856 <P_Random>
   2d3d8:	60 03 f0 c0 	move s27, s0
   2d3dc:	c6 bb ff f9 	call -69864 <P_Random>
   2d3e0:	1b 00 60 c0 	sub_i s0, s27, s0
   2d3e4:	3e 60 00 a8 	load_32 s1, 24(sp)
   2d3e8:	7a 00 00 a8 	load_32 s3, (s26)
   2d3ec:	00 48 00 0b 	shl s0, s0, 18
   2d3f0:	20 80 50 c0 	add_i s1, s0, s1
   2d3f4:	00 80 fc c0 	move s0, s25
   2d3f8:	3e 93 00 a8 	load_32 s25, 36(sp)
   2d3fc:	40 80 fc c0 	move s2, s25
   2d400:	9e 70 00 a8 	load_32 s4, 28(sp)
   2d404:	12 ef ff f9 	call -17336 <P_LineAttack>
   2d408:	18 03 00 a8 	load_32 s24, (s24)
   2d40c:	ba bb ff f9 	call -69912 <P_Random>
   2d410:	3e 80 00 a8 	load_32 s1, 32(sp)
   2d414:	20 80 f0 c1 	mulh_i s1, s0, s1
   2d418:	41 7c 00 0a 	shr s2, s1, 31
   2d41c:	21 00 51 c0 	add_i s1, s1, s2
   2d420:	21 0c 00 07 	mull_i s1, s1, 3
   2d424:	00 80 60 c0 	sub_i s0, s0, s1
   2d428:	00 14 00 07 	mull_i s0, s0, 5
   2d42c:	00 14 00 05 	add_i s0, s0, 5
   2d430:	1e 80 00 88 	store_32 s0, 32(sp)
   2d434:	78 83 00 a8 	load_32 s27, 32(s24)
   2d438:	af bb ff f9 	call -69956 <P_Random>
   2d43c:	40 03 f0 c0 	move s26, s0
   2d440:	ad bb ff f9 	call -69964 <P_Random>
   2d444:	1a 00 60 c0 	sub_i s0, s26, s0
   2d448:	00 48 00 0b 	shl s0, s0, 18
   2d44c:	20 80 5d c0 	add_i s1, s0, s27
   2d450:	1e a0 00 a8 	load_32 s0, 40(sp)
   2d454:	60 00 00 a8 	load_32 s3, (s0)
   2d458:	00 00 fc c0 	move s0, s24
   2d45c:	40 80 fc c0 	move s2, s25
   2d460:	9e 80 00 a8 	load_32 s4, 32(sp)
   2d464:	fa ee ff f9 	call -17432 <P_LineAttack>
   2d468:	fe b3 00 a8 	load_32 ra, 44(sp)
   2d46c:	7e c3 00 a8 	load_32 s27, 48(sp)
   2d470:	5e d3 00 a8 	load_32 s26, 52(sp)
   2d474:	3e e3 00 a8 	load_32 s25, 56(sp)
   2d478:	1e f3 00 a8 	load_32 s24, 60(sp)
   2d47c:	de 03 01 05 	add_i sp, sp, 64
   2d480:	1f 00 00 f0 	ret

000000000002d484 A_FireShotgun2:
   2d484:	de 03 ff 05 	add_i sp, sp, -64
   2d488:	1e f3 00 88 	store_32 s24, 60(sp)
   2d48c:	3e e3 00 88 	store_32 s25, 56(sp)
   2d490:	5e d3 00 88 	store_32 s26, 52(sp)
   2d494:	7e c3 00 88 	store_32 s27, 48(sp)
   2d498:	fe b3 00 88 	store_32 ra, 44(sp)
   2d49c:	40 03 f0 c0 	move s26, s0
   2d4a0:	20 10 00 0f 	move s1, 4
   2d4a4:	1a 00 00 a8 	load_32 s0, (s26)
   2d4a8:	cf 7b 00 f8 	call 126780 <S_StartSound>
   2d4ac:	1a 00 00 a8 	load_32 s0, (s26)
   2d4b0:	20 6c 02 0f 	move s1, 155
   2d4b4:	59 12 00 f8 	call 18788 <P_SetMobjState>
   2d4b8:	13 04 00 4f 	movehi s0, 51
   2d4bc:	3a c0 01 a8 	load_32 s1, 112(s26)
   2d4c0:	3a 13 04 05 	add_i s25, s26, 260
   2d4c4:	00 70 45 00 	or s0, s0, 4444
   2d4c8:	21 60 00 07 	mull_i s1, s1, 24
   2d4cc:	00 80 50 c0 	add_i s0, s0, s1
   2d4d0:	20 00 00 a8 	load_32 s1, (s0)
   2d4d4:	00 50 00 05 	add_i s0, s0, 20
   2d4d8:	21 08 00 0b 	shl s1, s1, 2
   2d4dc:	3a 80 50 c0 	add_i s1, s26, s1
   2d4e0:	41 70 02 a8 	load_32 s2, 156(s1)
   2d4e4:	42 f8 ff 05 	add_i s2, s2, -2
   2d4e8:	41 70 02 88 	store_32 s2, 156(s1)
   2d4ec:	34 04 00 4f 	movehi s1, 52
   2d4f0:	01 23 5c 00 	or s24, s1, 5896
   2d4f4:	00 00 00 a8 	load_32 s0, (s0)
   2d4f8:	40 00 00 f4 	bnz s0, 8 <A_FireShotgun2+0x7c>
   2d4fc:	1a 00 00 f6 	b 104 <A_FireShotgun2+0xe0>
   2d500:	40 70 00 07 	mull_i s2, s0, 28
   2d504:	18 00 51 c0 	add_i s0, s24, s2
   2d508:	1a 10 04 88 	store_32 s0, 260(s26)
   2d50c:	20 20 00 a8 	load_32 s1, 8(s0)
   2d510:	3a 20 04 88 	store_32 s1, 264(s26)
   2d514:	60 50 00 a8 	load_32 s3, 20(s0)
   2d518:	e3 00 00 f2 	bz s3, 28 <A_FireShotgun2+0xb0>
   2d51c:	98 00 51 c0 	add_i s4, s24, s2
   2d520:	63 40 00 0b 	shl s3, s3, 16
   2d524:	7a 30 04 88 	store_32 s3, 268(s26)
   2d528:	64 60 00 a8 	load_32 s3, 24(s4)
   2d52c:	63 40 00 0b 	shl s3, s3, 16
   2d530:	7a 40 04 88 	store_32 s3, 272(s26)
   2d534:	58 00 51 c0 	add_i s2, s24, s2
   2d538:	42 30 00 a8 	load_32 s2, 12(s2)
   2d53c:	e2 00 00 f2 	bz s2, 28 <A_FireShotgun2+0xd4>
   2d540:	00 00 fd c0 	move s0, s26
   2d544:	20 80 fc c0 	move s1, s25
   2d548:	42 00 00 fc 	call s2
   2d54c:	1a 10 04 a8 	load_32 s0, 260(s26)
   2d550:	e0 00 00 f2 	bz s0, 28 <A_FireShotgun2+0xe8>
   2d554:	3a 20 04 a8 	load_32 s1, 264(s26)
   2d558:	00 40 00 05 	add_i s0, s0, 16
   2d55c:	c1 fc ff f3 	bz s1, -104 <A_FireShotgun2+0x70>
   2d560:	03 00 00 f6 	b 12 <A_FireShotgun2+0xe8>
   2d564:	00 00 00 0f 	move s0, 0
   2d568:	19 00 00 88 	store_32 s0, (s25)
   2d56c:	5e 73 00 88 	store_32 s26, 28(sp)
   2d570:	60 03 04 4f 	movehi s27, 8192
   2d574:	3a 03 00 a8 	load_32 s25, (s26)
   2d578:	59 83 00 a8 	load_32 s26, 32(s25)
   2d57c:	00 80 fc c0 	move s0, s25
   2d580:	20 00 fd c0 	move s1, s26
   2d584:	40 80 fd c0 	move s2, s27
   2d588:	6b ee ff f9 	call -18004 <P_AimLineAttack>
   2d58c:	3b 04 00 4f 	movehi s1, 59
   2d590:	5b 04 00 4f 	movehi s2, 59
   2d594:	21 00 48 00 	or s1, s1, 4608
   2d598:	3e 80 00 88 	store_32 s1, 32(sp)
   2d59c:	02 93 2b 00 	or s24, s2, 2788
   2d5a0:	01 00 00 88 	store_32 s0, (s1)
   2d5a4:	18 00 00 a8 	load_32 s0, (s24)
   2d5a8:	00 02 00 f4 	bnz s0, 64 <A_FireShotgun2+0x164>
   2d5ac:	00 80 fc c0 	move s0, s25
   2d5b0:	3a 80 5d c0 	add_i s1, s26, s27
   2d5b4:	40 80 fd c0 	move s2, s27
   2d5b8:	5f ee ff f9 	call -18052 <P_AimLineAttack>
   2d5bc:	3e 80 00 a8 	load_32 s1, 32(sp)
   2d5c0:	01 00 00 88 	store_32 s0, (s1)
   2d5c4:	18 00 00 a8 	load_32 s0, (s24)
   2d5c8:	00 01 00 f4 	bnz s0, 32 <A_FireShotgun2+0x164>
   2d5cc:	00 00 fc 4f 	movehi s0, 516096
   2d5d0:	3a 00 50 c0 	add_i s1, s26, s0
   2d5d4:	40 00 04 4f 	movehi s2, 8192
   2d5d8:	00 80 fc c0 	move s0, s25
   2d5dc:	56 ee ff f9 	call -18088 <P_AimLineAttack>
   2d5e0:	3e 80 00 a8 	load_32 s1, 32(sp)
   2d5e4:	01 00 00 88 	store_32 s0, (s1)
   2d5e8:	0a 54 55 4f 	movehi s0, 174762
   2d5ec:	40 03 00 0f 	move s26, 0
   2d5f0:	00 58 55 00 	or s0, s0, 5462
   2d5f4:	1e 60 00 88 	store_32 s0, 24(sp)
   2d5f8:	00 00 08 4f 	movehi s0, 16384
   2d5fc:	1e 50 00 88 	store_32 s0, 20(sp)
   2d600:	3d bb ff f9 	call -70412 <P_Random>
   2d604:	3e 60 00 a8 	load_32 s1, 24(sp)
   2d608:	3e 73 00 a8 	load_32 s25, 28(sp)
   2d60c:	20 80 f0 c1 	mulh_i s1, s0, s1
   2d610:	41 7c 00 0a 	shr s2, s1, 31
   2d614:	21 00 51 c0 	add_i s1, s1, s2
   2d618:	21 0c 00 07 	mull_i s1, s1, 3
   2d61c:	00 80 60 c0 	sub_i s0, s0, s1
   2d620:	39 00 00 a8 	load_32 s1, (s25)
   2d624:	00 14 00 07 	mull_i s0, s0, 5
   2d628:	00 14 00 05 	add_i s0, s0, 5
   2d62c:	1e a0 00 88 	store_32 s0, 40(sp)
   2d630:	01 83 00 a8 	load_32 s24, 32(s1)
   2d634:	30 bb ff f9 	call -70464 <P_Random>
   2d638:	60 03 f0 c0 	move s27, s0
   2d63c:	2e bb ff f9 	call -70472 <P_Random>
   2d640:	1b 00 60 c0 	sub_i s0, s27, s0
   2d644:	00 4c 00 0b 	shl s0, s0, 19
   2d648:	00 00 5c c0 	add_i s0, s0, s24
   2d64c:	1e 90 00 88 	store_32 s0, 36(sp)
   2d650:	39 03 00 a8 	load_32 s25, (s25)
   2d654:	1e 80 00 a8 	load_32 s0, 32(sp)
   2d658:	60 03 00 a8 	load_32 s27, (s0)
   2d65c:	26 bb ff f9 	call -70504 <P_Random>
   2d660:	00 03 f0 c0 	move s24, s0
   2d664:	24 bb ff f9 	call -70512 <P_Random>
   2d668:	18 00 60 c0 	sub_i s0, s24, s0
   2d66c:	00 14 00 0b 	shl s0, s0, 5
   2d670:	60 80 5d c0 	add_i s3, s0, s27
   2d674:	00 80 fc c0 	move s0, s25
   2d678:	3e 90 00 a8 	load_32 s1, 36(sp)
   2d67c:	5e 50 00 a8 	load_32 s2, 20(sp)
   2d680:	9e a0 00 a8 	load_32 s4, 40(sp)
   2d684:	72 ee ff f9 	call -17976 <P_LineAttack>
   2d688:	5a 07 00 05 	add_i s26, s26, 1
   2d68c:	1a 50 00 18 	cmplt_u s0, s26, 20
   2d690:	80 fb ff f5 	bnz s0, -144 <A_FireShotgun2+0x17c>
   2d694:	fe b3 00 a8 	load_32 ra, 44(sp)
   2d698:	7e c3 00 a8 	load_32 s27, 48(sp)
   2d69c:	5e d3 00 a8 	load_32 s26, 52(sp)
   2d6a0:	3e e3 00 a8 	load_32 s25, 56(sp)
   2d6a4:	1e f3 00 a8 	load_32 s24, 60(sp)
   2d6a8:	de 03 01 05 	add_i sp, sp, 64
   2d6ac:	1f 00 00 f0 	ret

000000000002d6b0 A_FireCGun:
   2d6b0:	de 03 ff 05 	add_i sp, sp, -64
   2d6b4:	1e f3 00 88 	store_32 s24, 60(sp)
   2d6b8:	3e e3 00 88 	store_32 s25, 56(sp)
   2d6bc:	5e d3 00 88 	store_32 s26, 52(sp)
   2d6c0:	7e c3 00 88 	store_32 s27, 48(sp)
   2d6c4:	fe b3 00 88 	store_32 ra, 44(sp)
   2d6c8:	20 83 f0 c0 	move s25, s1
   2d6cc:	00 03 f0 c0 	move s24, s0
   2d6d0:	20 04 00 0f 	move s1, 1
   2d6d4:	18 00 00 a8 	load_32 s0, (s24)
   2d6d8:	43 7b 00 f8 	call 126220 <S_StartSound>
   2d6dc:	13 04 00 4f 	movehi s0, 51
   2d6e0:	38 c0 01 a8 	load_32 s1, 112(s24)
   2d6e4:	40 73 45 00 	or s26, s0, 4444
   2d6e8:	01 60 00 07 	mull_i s0, s1, 24
   2d6ec:	1a 00 50 c0 	add_i s0, s26, s0
   2d6f0:	00 00 00 a8 	load_32 s0, (s0)
   2d6f4:	00 08 00 0b 	shl s0, s0, 2
   2d6f8:	18 00 50 c0 	add_i s0, s24, s0
   2d6fc:	00 70 02 a8 	load_32 s0, 156(s0)
   2d700:	40 0e 00 f2 	bz s0, 456 <A_FireCGun+0x218>
   2d704:	18 00 00 a8 	load_32 s0, (s24)
   2d708:	20 6c 02 0f 	move s1, 155
   2d70c:	c3 11 00 f8 	call 18188 <P_SetMobjState>
   2d710:	18 c0 01 a8 	load_32 s0, 112(s24)
   2d714:	00 60 00 07 	mull_i s0, s0, 24
   2d718:	1a 00 50 c0 	add_i s0, s26, s0
   2d71c:	20 00 00 a8 	load_32 s1, (s0)
   2d720:	21 08 00 0b 	shl s1, s1, 2
   2d724:	38 80 50 c0 	add_i s1, s24, s1
   2d728:	41 70 02 a8 	load_32 s2, 156(s1)
   2d72c:	42 fc ff 05 	add_i s2, s2, -1
   2d730:	41 70 02 88 	store_32 s2, 156(s1)
   2d734:	00 50 00 a8 	load_32 s0, 20(s0)
   2d738:	54 04 00 4f 	movehi s2, 52
   2d73c:	39 00 00 a8 	load_32 s1, (s25)
   2d740:	38 13 04 05 	add_i s25, s24, 260
   2d744:	42 23 5c 00 	or s26, s2, 5896
   2d748:	00 70 00 07 	mull_i s0, s0, 28
   2d74c:	01 00 50 c0 	add_i s0, s1, s0
   2d750:	3a c0 16 05 	add_i s1, s26, 1456
   2d754:	00 80 60 c0 	sub_i s0, s0, s1
   2d758:	3b d8 b6 4f 	movehi s1, 374491
   2d75c:	00 08 00 09 	ashr s0, s0, 2
   2d760:	21 dc 36 00 	or s1, s1, 3511
   2d764:	00 80 70 c0 	mull_i s0, s0, s1
   2d768:	40 00 00 f4 	bnz s0, 8 <A_FireCGun+0xc0>
   2d76c:	1a 00 00 f6 	b 104 <A_FireCGun+0x124>
   2d770:	40 70 00 07 	mull_i s2, s0, 28
   2d774:	1a 00 51 c0 	add_i s0, s26, s2
   2d778:	18 10 04 88 	store_32 s0, 260(s24)
   2d77c:	20 20 00 a8 	load_32 s1, 8(s0)
   2d780:	38 20 04 88 	store_32 s1, 264(s24)
   2d784:	60 50 00 a8 	load_32 s3, 20(s0)
   2d788:	e3 00 00 f2 	bz s3, 28 <A_FireCGun+0xf4>
   2d78c:	9a 00 51 c0 	add_i s4, s26, s2
   2d790:	63 40 00 0b 	shl s3, s3, 16
   2d794:	78 30 04 88 	store_32 s3, 268(s24)
   2d798:	64 60 00 a8 	load_32 s3, 24(s4)
   2d79c:	63 40 00 0b 	shl s3, s3, 16
   2d7a0:	78 40 04 88 	store_32 s3, 272(s24)
   2d7a4:	5a 00 51 c0 	add_i s2, s26, s2
   2d7a8:	42 30 00 a8 	load_32 s2, 12(s2)
   2d7ac:	e2 00 00 f2 	bz s2, 28 <A_FireCGun+0x118>
   2d7b0:	00 00 fc c0 	move s0, s24
   2d7b4:	20 80 fc c0 	move s1, s25
   2d7b8:	42 00 00 fc 	call s2
   2d7bc:	18 10 04 a8 	load_32 s0, 260(s24)
   2d7c0:	e0 00 00 f2 	bz s0, 28 <A_FireCGun+0x12c>
   2d7c4:	38 20 04 a8 	load_32 s1, 264(s24)
   2d7c8:	00 40 00 a8 	load_32 s0, 16(s0)
   2d7cc:	e1 fc ff f3 	bz s1, -100 <A_FireCGun+0xb8>
   2d7d0:	03 00 00 f6 	b 12 <A_FireCGun+0x12c>
   2d7d4:	00 00 00 0f 	move s0, 0
   2d7d8:	19 00 00 88 	store_32 s0, (s25)
   2d7dc:	38 03 00 a8 	load_32 s25, (s24)
   2d7e0:	60 03 04 4f 	movehi s27, 8192
   2d7e4:	39 80 00 a8 	load_32 s1, 32(s25)
   2d7e8:	00 80 fc c0 	move s0, s25
   2d7ec:	3e 90 00 88 	store_32 s1, 36(sp)
   2d7f0:	40 80 fd c0 	move s2, s27
   2d7f4:	d0 ed ff f9 	call -18624 <P_AimLineAttack>
   2d7f8:	3b 04 00 4f 	movehi s1, 59
   2d7fc:	5b 04 00 4f 	movehi s2, 59
   2d800:	21 00 48 00 	or s1, s1, 4608
   2d804:	3e a0 00 88 	store_32 s1, 40(sp)
   2d808:	42 93 2b 00 	or s26, s2, 2788
   2d80c:	01 00 00 88 	store_32 s0, (s1)
   2d810:	1a 00 00 a8 	load_32 s0, (s26)
   2d814:	40 02 00 f4 	bnz s0, 72 <A_FireCGun+0x1ac>
   2d818:	1e 90 00 a8 	load_32 s0, 36(sp)
   2d81c:	20 80 5d c0 	add_i s1, s0, s27
   2d820:	00 80 fc c0 	move s0, s25
   2d824:	40 80 fd c0 	move s2, s27
   2d828:	c3 ed ff f9 	call -18676 <P_AimLineAttack>
   2d82c:	3e a0 00 a8 	load_32 s1, 40(sp)
   2d830:	01 00 00 88 	store_32 s0, (s1)
   2d834:	1a 00 00 a8 	load_32 s0, (s26)
   2d838:	20 01 00 f4 	bnz s0, 36 <A_FireCGun+0x1ac>
   2d83c:	3e 90 00 a8 	load_32 s1, 36(sp)
   2d840:	00 00 fc 4f 	movehi s0, 516096
   2d844:	40 00 04 4f 	movehi s2, 8192
   2d848:	21 00 50 c0 	add_i s1, s1, s0
   2d84c:	00 80 fc c0 	move s0, s25
   2d850:	b9 ed ff f9 	call -18716 <P_AimLineAttack>
   2d854:	3e a0 00 a8 	load_32 s1, 40(sp)
   2d858:	01 00 00 88 	store_32 s0, (s1)
   2d85c:	38 03 00 a8 	load_32 s25, (s24)
   2d860:	78 23 03 a8 	load_32 s27, 200(s24)
   2d864:	a4 ba ff f9 	call -71024 <P_Random>
   2d868:	2a 54 55 4f 	movehi s1, 174762
   2d86c:	59 83 00 a8 	load_32 s26, 32(s25)
   2d870:	21 58 55 00 	or s1, s1, 5462
   2d874:	20 80 f0 c1 	mulh_i s1, s0, s1
   2d878:	41 7c 00 0a 	shr s2, s1, 31
   2d87c:	21 00 51 c0 	add_i s1, s1, s2
   2d880:	21 0c 00 07 	mull_i s1, s1, 3
   2d884:	00 80 60 c0 	sub_i s0, s0, s1
   2d888:	00 14 00 07 	mull_i s0, s0, 5
   2d88c:	00 17 00 05 	add_i s24, s0, 5
   2d890:	fb 00 00 f2 	bz s27, 28 <A_FireCGun+0x1fc>
   2d894:	98 ba ff f9 	call -71072 <P_Random>
   2d898:	60 03 f0 c0 	move s27, s0
   2d89c:	96 ba ff f9 	call -71080 <P_Random>
   2d8a0:	1b 00 60 c0 	sub_i s0, s27, s0
   2d8a4:	00 48 00 0b 	shl s0, s0, 18
   2d8a8:	40 03 5d c0 	add_i s26, s0, s26
   2d8ac:	1e a0 00 a8 	load_32 s0, 40(sp)
   2d8b0:	40 00 08 4f 	movehi s2, 16384
   2d8b4:	60 00 00 a8 	load_32 s3, (s0)
   2d8b8:	00 80 fc c0 	move s0, s25
   2d8bc:	20 00 fd c0 	move s1, s26
   2d8c0:	80 00 fc c0 	move s4, s24
   2d8c4:	e2 ed ff f9 	call -18552 <P_LineAttack>
   2d8c8:	fe b3 00 a8 	load_32 ra, 44(sp)
   2d8cc:	7e c3 00 a8 	load_32 s27, 48(sp)
   2d8d0:	5e d3 00 a8 	load_32 s26, 52(sp)
   2d8d4:	3e e3 00 a8 	load_32 s25, 56(sp)
   2d8d8:	1e f3 00 a8 	load_32 s24, 60(sp)
   2d8dc:	de 03 01 05 	add_i sp, sp, 64
   2d8e0:	1f 00 00 f0 	ret

000000000002d8e4 A_Light0:
   2d8e4:	20 00 00 0f 	move s1, 0
   2d8e8:	20 a0 03 88 	store_32 s1, 232(s0)
   2d8ec:	1f 00 00 f0 	ret

000000000002d8f0 A_Light1:
   2d8f0:	20 04 00 0f 	move s1, 1
   2d8f4:	20 a0 03 88 	store_32 s1, 232(s0)
   2d8f8:	1f 00 00 f0 	ret

000000000002d8fc A_Light2:
   2d8fc:	20 08 00 0f 	move s1, 2
   2d900:	20 a0 03 88 	store_32 s1, 232(s0)
   2d904:	1f 00 00 f0 	ret

000000000002d908 A_BFGSpray:
   2d908:	de 03 ff 05 	add_i sp, sp, -64
   2d90c:	1e f3 00 88 	store_32 s24, 60(sp)
   2d910:	3e e3 00 88 	store_32 s25, 56(sp)
   2d914:	5e d3 00 88 	store_32 s26, 52(sp)
   2d918:	7e c3 00 88 	store_32 s27, 48(sp)
   2d91c:	fe b3 00 88 	store_32 ra, 44(sp)
   2d920:	2c 98 01 4f 	movehi s1, 3276
   2d924:	00 03 f0 c0 	move s24, s0
   2d928:	60 03 00 0f 	move s27, 0
   2d92c:	01 64 66 00 	or s0, s1, 6553
   2d930:	1e a0 00 88 	store_32 s0, 40(sp)
   2d934:	1b 04 00 4f 	movehi s0, 59
   2d938:	20 00 e0 4f 	movehi s1, 458752
   2d93c:	3e 90 00 88 	store_32 s1, 36(sp)
   2d940:	20 00 04 4f 	movehi s1, 8192
   2d944:	3e 80 00 88 	store_32 s1, 32(sp)
   2d948:	40 93 2b 00 	or s26, s0, 2788
   2d94c:	00 a8 00 0f 	move s0, 42
   2d950:	1e 70 00 88 	store_32 s0, 28(sp)
   2d954:	18 80 00 a8 	load_32 s0, 32(s24)
   2d958:	3e a0 00 a8 	load_32 s1, 40(sp)
   2d95c:	3b 80 70 c0 	mull_i s1, s27, s1
   2d960:	01 00 50 c0 	add_i s0, s1, s0
   2d964:	3e 90 00 a8 	load_32 s1, 36(sp)
   2d968:	20 80 50 c0 	add_i s1, s0, s1
   2d96c:	18 e0 01 a8 	load_32 s0, 120(s24)
   2d970:	5e 80 00 a8 	load_32 s2, 32(sp)
   2d974:	70 ed ff f9 	call -19008 <P_AimLineAttack>
   2d978:	5a 00 00 a8 	load_32 s2, (s26)
   2d97c:	42 07 00 f2 	bz s2, 232 <A_BFGSpray+0x15c>
   2d980:	02 30 00 a8 	load_32 s0, 12(s2)
   2d984:	22 40 00 a8 	load_32 s1, 16(s2)
   2d988:	62 50 00 a8 	load_32 s3, 20(s2)
   2d98c:	42 10 01 a8 	load_32 s2, 68(s2)
   2d990:	42 08 00 09 	ashr s2, s2, 2
   2d994:	42 80 51 c0 	add_i s2, s2, s3
   2d998:	7e 70 00 a8 	load_32 s3, 28(sp)
   2d99c:	4b 14 00 f8 	call 20780 <P_SpawnMobj>
   2d9a0:	55 ba ff f9 	call -71340 <P_Random>
   2d9a4:	20 1f 00 01 	and s25, s0, 7
   2d9a8:	53 ba ff f9 	call -71348 <P_Random>
   2d9ac:	00 1c 00 01 	and s0, s0, 7
   2d9b0:	39 03 50 c0 	add_i s25, s25, s0
   2d9b4:	50 ba ff f9 	call -71360 <P_Random>
   2d9b8:	00 1c 00 01 	and s0, s0, 7
   2d9bc:	39 03 50 c0 	add_i s25, s25, s0
   2d9c0:	4d ba ff f9 	call -71372 <P_Random>
   2d9c4:	00 1c 00 01 	and s0, s0, 7
   2d9c8:	39 03 50 c0 	add_i s25, s25, s0
   2d9cc:	4a ba ff f9 	call -71384 <P_Random>
   2d9d0:	00 1c 00 01 	and s0, s0, 7
   2d9d4:	39 03 50 c0 	add_i s25, s25, s0
   2d9d8:	47 ba ff f9 	call -71396 <P_Random>
   2d9dc:	00 1c 00 01 	and s0, s0, 7
   2d9e0:	39 03 50 c0 	add_i s25, s25, s0
   2d9e4:	44 ba ff f9 	call -71408 <P_Random>
   2d9e8:	00 1c 00 01 	and s0, s0, 7
   2d9ec:	39 03 50 c0 	add_i s25, s25, s0
   2d9f0:	41 ba ff f9 	call -71420 <P_Random>
   2d9f4:	00 1c 00 01 	and s0, s0, 7
   2d9f8:	39 03 50 c0 	add_i s25, s25, s0
   2d9fc:	3e ba ff f9 	call -71432 <P_Random>
   2da00:	00 1c 00 01 	and s0, s0, 7
   2da04:	39 03 50 c0 	add_i s25, s25, s0
   2da08:	3b ba ff f9 	call -71444 <P_Random>
   2da0c:	00 1c 00 01 	and s0, s0, 7
   2da10:	39 03 50 c0 	add_i s25, s25, s0
   2da14:	38 ba ff f9 	call -71456 <P_Random>
   2da18:	00 1c 00 01 	and s0, s0, 7
   2da1c:	39 03 50 c0 	add_i s25, s25, s0
   2da20:	35 ba ff f9 	call -71468 <P_Random>
   2da24:	00 1c 00 01 	and s0, s0, 7
   2da28:	39 03 50 c0 	add_i s25, s25, s0
   2da2c:	32 ba ff f9 	call -71480 <P_Random>
   2da30:	00 1c 00 01 	and s0, s0, 7
   2da34:	39 03 50 c0 	add_i s25, s25, s0
   2da38:	2f ba ff f9 	call -71492 <P_Random>
   2da3c:	00 1c 00 01 	and s0, s0, 7
   2da40:	39 03 50 c0 	add_i s25, s25, s0
   2da44:	2c ba ff f9 	call -71504 <P_Random>
   2da48:	00 1c 00 01 	and s0, s0, 7
   2da4c:	19 00 50 c0 	add_i s0, s25, s0
   2da50:	60 3c 00 05 	add_i s3, s0, 15
   2da54:	1a 00 00 a8 	load_32 s0, (s26)
   2da58:	38 e0 01 a8 	load_32 s1, 120(s24)
   2da5c:	40 80 f0 c0 	move s2, s1
   2da60:	8c e4 ff f9 	call -28112 <P_DamageMobj>
   2da64:	7b 07 00 05 	add_i s27, s27, 1
   2da68:	1b a0 00 18 	cmplt_u s0, s27, 40
   2da6c:	40 f7 ff f5 	bnz s0, -280 <A_BFGSpray+0x4c>
   2da70:	fe b3 00 a8 	load_32 ra, 44(sp)
   2da74:	7e c3 00 a8 	load_32 s27, 48(sp)
   2da78:	5e d3 00 a8 	load_32 s26, 52(sp)
   2da7c:	3e e3 00 a8 	load_32 s25, 56(sp)
   2da80:	1e f3 00 a8 	load_32 s24, 60(sp)
   2da84:	de 03 01 05 	add_i sp, sp, 64
   2da88:	1f 00 00 f0 	ret

000000000002da8c A_BFGsound:
   2da8c:	de 03 ff 05 	add_i sp, sp, -64
   2da90:	fe f3 00 88 	store_32 ra, 60(sp)
   2da94:	00 00 00 a8 	load_32 s0, (s0)
   2da98:	20 24 00 0f 	move s1, 9
   2da9c:	52 7a 00 f8 	call 125256 <S_StartSound>
   2daa0:	fe f3 00 a8 	load_32 ra, 60(sp)
   2daa4:	de 03 01 05 	add_i sp, sp, 64
   2daa8:	1f 00 00 f0 	ret

000000000002daac P_SetupPsprites:
   2daac:	de 03 ff 05 	add_i sp, sp, -64
   2dab0:	1e f3 00 88 	store_32 s24, 60(sp)
   2dab4:	3e e3 00 88 	store_32 s25, 56(sp)
   2dab8:	5e d3 00 88 	store_32 s26, 52(sp)
   2dabc:	7e c3 00 88 	store_32 s27, 48(sp)
   2dac0:	fe b3 00 88 	store_32 ra, 44(sp)
   2dac4:	00 03 f0 c0 	move s24, s0
   2dac8:	40 03 00 0f 	move s26, 0
   2dacc:	58 d3 03 88 	store_32 s26, 244(s24)
   2dad0:	58 13 04 88 	store_32 s26, 260(s24)
   2dad4:	18 c0 01 a8 	load_32 s0, 112(s24)
   2dad8:	18 d0 01 88 	store_32 s0, 116(s24)
   2dadc:	20 1c 00 10 	cmpeq_i s1, s0, 7
   2dae0:	c1 00 00 f4 	bnz s1, 24 <P_SetupPsprites+0x4c>
   2dae4:	20 28 00 11 	cmpne_i s1, s0, 10
   2dae8:	01 01 00 f4 	bnz s1, 32 <P_SetupPsprites+0x5c>
   2daec:	00 28 00 0f 	move s0, 10
   2daf0:	18 d0 01 88 	store_32 s0, 116(s24)
   2daf4:	05 00 00 f6 	b 20 <P_SetupPsprites+0x5c>
   2daf8:	18 00 00 a8 	load_32 s0, (s24)
   2dafc:	20 28 00 0f 	move s1, 10
   2db00:	39 7a 00 f8 	call 125156 <S_StartSound>
   2db04:	18 d0 01 a8 	load_32 s0, 116(s24)
   2db08:	33 04 00 4f 	movehi s1, 51
   2db0c:	00 60 00 07 	mull_i s0, s0, 24
   2db10:	38 d3 03 05 	add_i s25, s24, 244
   2db14:	21 70 45 00 	or s1, s1, 4444
   2db18:	40 80 00 4f 	movehi s2, 1024
   2db1c:	01 00 50 c0 	add_i s0, s1, s0
   2db20:	20 28 00 0f 	move s1, 10
   2db24:	00 10 00 a8 	load_32 s0, 4(s0)
   2db28:	38 d0 01 88 	store_32 s1, 116(s24)
   2db2c:	34 04 00 4f 	movehi s1, 52
   2db30:	58 00 04 88 	store_32 s2, 256(s24)
   2db34:	61 23 5c 00 	or s27, s1, 5896
   2db38:	40 00 00 f4 	bnz s0, 8 <P_SetupPsprites+0x94>
   2db3c:	1a 00 00 f6 	b 104 <P_SetupPsprites+0xf8>
   2db40:	40 70 00 07 	mull_i s2, s0, 28
   2db44:	1b 00 51 c0 	add_i s0, s27, s2
   2db48:	18 d0 03 88 	store_32 s0, 244(s24)
   2db4c:	20 20 00 a8 	load_32 s1, 8(s0)
   2db50:	38 e0 03 88 	store_32 s1, 248(s24)
   2db54:	60 50 00 a8 	load_32 s3, 20(s0)
   2db58:	e3 00 00 f2 	bz s3, 28 <P_SetupPsprites+0xc8>
   2db5c:	9b 00 51 c0 	add_i s4, s27, s2
   2db60:	63 40 00 0b 	shl s3, s3, 16
   2db64:	78 f0 03 88 	store_32 s3, 252(s24)
   2db68:	64 60 00 a8 	load_32 s3, 24(s4)
   2db6c:	63 40 00 0b 	shl s3, s3, 16
   2db70:	78 00 04 88 	store_32 s3, 256(s24)
   2db74:	5b 00 51 c0 	add_i s2, s27, s2
   2db78:	42 30 00 a8 	load_32 s2, 12(s2)
   2db7c:	e2 00 00 f2 	bz s2, 28 <P_SetupPsprites+0xec>
   2db80:	00 00 fc c0 	move s0, s24
   2db84:	20 80 fc c0 	move s1, s25
   2db88:	42 00 00 fc 	call s2
   2db8c:	18 d0 03 a8 	load_32 s0, 244(s24)
   2db90:	c0 00 00 f2 	bz s0, 24 <P_SetupPsprites+0xfc>
   2db94:	38 e0 03 a8 	load_32 s1, 248(s24)
   2db98:	00 40 00 a8 	load_32 s0, 16(s0)
   2db9c:	e1 fc ff f3 	bz s1, -100 <P_SetupPsprites+0x8c>
   2dba0:	02 00 00 f6 	b 8 <P_SetupPsprites+0xfc>
   2dba4:	59 03 00 88 	store_32 s26, (s25)
   2dba8:	fe b3 00 a8 	load_32 ra, 44(sp)
   2dbac:	7e c3 00 a8 	load_32 s27, 48(sp)
   2dbb0:	5e d3 00 a8 	load_32 s26, 52(sp)
   2dbb4:	3e e3 00 a8 	load_32 s25, 56(sp)
   2dbb8:	1e f3 00 a8 	load_32 s24, 60(sp)
   2dbbc:	de 03 01 05 	add_i sp, sp, 64
   2dbc0:	1f 00 00 f0 	ret

000000000002dbc4 P_MovePsprites:
   2dbc4:	de 03 ff 05 	add_i sp, sp, -64
   2dbc8:	1e f3 00 88 	store_32 s24, 60(sp)
   2dbcc:	3e e3 00 88 	store_32 s25, 56(sp)
   2dbd0:	5e d3 00 88 	store_32 s26, 52(sp)
   2dbd4:	fe c3 00 88 	store_32 ra, 48(sp)
   2dbd8:	00 03 f0 c0 	move s24, s0
   2dbdc:	18 d0 03 a8 	load_32 s0, 244(s24)
   2dbe0:	e0 04 00 f2 	bz s0, 156 <P_MovePsprites+0xb8>
   2dbe4:	38 e0 03 a8 	load_32 s1, 248(s24)
   2dbe8:	41 fc ff 10 	cmpeq_i s2, s1, -1
   2dbec:	82 04 00 f4 	bnz s2, 144 <P_MovePsprites+0xb8>
   2dbf0:	21 fc ff 05 	add_i s1, s1, -1
   2dbf4:	38 e0 03 88 	store_32 s1, 248(s24)
   2dbf8:	21 04 00 f4 	bnz s1, 132 <P_MovePsprites+0xb8>
   2dbfc:	34 04 00 4f 	movehi s1, 52
   2dc00:	38 d3 03 05 	add_i s25, s24, 244
   2dc04:	41 23 5c 00 	or s26, s1, 5896
   2dc08:	00 40 00 a8 	load_32 s0, 16(s0)
   2dc0c:	40 00 00 f4 	bnz s0, 8 <P_MovePsprites+0x50>
   2dc10:	19 00 00 f6 	b 100 <P_MovePsprites+0xb0>
   2dc14:	40 70 00 07 	mull_i s2, s0, 28
   2dc18:	1a 00 51 c0 	add_i s0, s26, s2
   2dc1c:	18 d0 03 88 	store_32 s0, 244(s24)
   2dc20:	20 20 00 a8 	load_32 s1, 8(s0)
   2dc24:	38 e0 03 88 	store_32 s1, 248(s24)
   2dc28:	60 50 00 a8 	load_32 s3, 20(s0)
   2dc2c:	e3 00 00 f2 	bz s3, 28 <P_MovePsprites+0x84>
   2dc30:	9a 00 51 c0 	add_i s4, s26, s2
   2dc34:	63 40 00 0b 	shl s3, s3, 16
   2dc38:	78 f0 03 88 	store_32 s3, 252(s24)
   2dc3c:	64 60 00 a8 	load_32 s3, 24(s4)
   2dc40:	63 40 00 0b 	shl s3, s3, 16
   2dc44:	78 00 04 88 	store_32 s3, 256(s24)
   2dc48:	5a 00 51 c0 	add_i s2, s26, s2
   2dc4c:	42 30 00 a8 	load_32 s2, 12(s2)
   2dc50:	e2 00 00 f2 	bz s2, 28 <P_MovePsprites+0xa8>
   2dc54:	00 00 fc c0 	move s0, s24
   2dc58:	20 80 fc c0 	move s1, s25
   2dc5c:	42 00 00 fc 	call s2
   2dc60:	18 d0 03 a8 	load_32 s0, 244(s24)
   2dc64:	c0 00 00 f2 	bz s0, 24 <P_MovePsprites+0xb8>
   2dc68:	38 e0 03 a8 	load_32 s1, 248(s24)
   2dc6c:	e1 fc ff f3 	bz s1, -100 <P_MovePsprites+0x44>
   2dc70:	03 00 00 f6 	b 12 <P_MovePsprites+0xb8>
   2dc74:	00 00 00 0f 	move s0, 0
   2dc78:	19 00 00 88 	store_32 s0, (s25)
   2dc7c:	18 10 04 a8 	load_32 s0, 260(s24)
   2dc80:	c0 04 00 f2 	bz s0, 152 <P_MovePsprites+0x154>
   2dc84:	38 20 04 a8 	load_32 s1, 264(s24)
   2dc88:	41 fc ff 10 	cmpeq_i s2, s1, -1
   2dc8c:	62 04 00 f4 	bnz s2, 140 <P_MovePsprites+0x154>
   2dc90:	21 fc ff 05 	add_i s1, s1, -1
   2dc94:	38 20 04 88 	store_32 s1, 264(s24)
   2dc98:	01 04 00 f4 	bnz s1, 128 <P_MovePsprites+0x154>
   2dc9c:	34 04 00 4f 	movehi s1, 52
   2dca0:	38 13 04 05 	add_i s25, s24, 260
   2dca4:	41 23 5c 00 	or s26, s1, 5896
   2dca8:	00 40 00 a8 	load_32 s0, 16(s0)
   2dcac:	20 03 00 f2 	bz s0, 100 <P_MovePsprites+0x14c>
   2dcb0:	40 70 00 07 	mull_i s2, s0, 28
   2dcb4:	1a 00 51 c0 	add_i s0, s26, s2
   2dcb8:	18 10 04 88 	store_32 s0, 260(s24)
   2dcbc:	20 20 00 a8 	load_32 s1, 8(s0)
   2dcc0:	38 20 04 88 	store_32 s1, 264(s24)
   2dcc4:	60 50 00 a8 	load_32 s3, 20(s0)
   2dcc8:	e3 00 00 f2 	bz s3, 28 <P_MovePsprites+0x120>
   2dccc:	9a 00 51 c0 	add_i s4, s26, s2
   2dcd0:	63 40 00 0b 	shl s3, s3, 16
   2dcd4:	78 30 04 88 	store_32 s3, 268(s24)
   2dcd8:	64 60 00 a8 	load_32 s3, 24(s4)
   2dcdc:	63 40 00 0b 	shl s3, s3, 16
   2dce0:	78 40 04 88 	store_32 s3, 272(s24)
   2dce4:	5a 00 51 c0 	add_i s2, s26, s2
   2dce8:	42 30 00 a8 	load_32 s2, 12(s2)
   2dcec:	e2 00 00 f2 	bz s2, 28 <P_MovePsprites+0x144>
   2dcf0:	00 00 fc c0 	move s0, s24
   2dcf4:	20 80 fc c0 	move s1, s25
   2dcf8:	42 00 00 fc 	call s2
   2dcfc:	18 10 04 a8 	load_32 s0, 260(s24)
   2dd00:	c0 00 00 f2 	bz s0, 24 <P_MovePsprites+0x154>
   2dd04:	38 20 04 a8 	load_32 s1, 264(s24)
   2dd08:	01 fd ff f3 	bz s1, -96 <P_MovePsprites+0xe4>
   2dd0c:	03 00 00 f6 	b 12 <P_MovePsprites+0x154>
   2dd10:	00 00 00 0f 	move s0, 0
   2dd14:	19 00 00 88 	store_32 s0, (s25)
   2dd18:	18 f0 03 a8 	load_32 s0, 252(s24)
   2dd1c:	18 30 04 88 	store_32 s0, 268(s24)
   2dd20:	18 00 04 a8 	load_32 s0, 256(s24)
   2dd24:	18 40 04 88 	store_32 s0, 272(s24)
   2dd28:	fe c3 00 a8 	load_32 ra, 48(sp)
   2dd2c:	5e d3 00 a8 	load_32 s26, 52(sp)
   2dd30:	3e e3 00 a8 	load_32 s25, 56(sp)
   2dd34:	1e f3 00 a8 	load_32 s24, 60(sp)
   2dd38:	de 03 01 05 	add_i sp, sp, 64
   2dd3c:	1f 00 00 f0 	ret

000000000002dd40 P_LoadVertexes:
   2dd40:	de 03 ff 05 	add_i sp, sp, -64
   2dd44:	1e f3 00 88 	store_32 s24, 60(sp)
   2dd48:	3e e3 00 88 	store_32 s25, 56(sp)
   2dd4c:	5e d3 00 88 	store_32 s26, 52(sp)
   2dd50:	7e c3 00 88 	store_32 s27, 48(sp)
   2dd54:	fe b3 00 88 	store_32 ra, 44(sp)
   2dd58:	20 03 f0 c0 	move s25, s0
   2dd5c:	cf 43 00 f8 	call 69436 <W_LumpLength>
   2dd60:	3b 04 00 4f 	movehi s1, 59
   2dd64:	00 08 00 0a 	shr s0, s0, 2
   2dd68:	00 03 00 0f 	move s24, 0
   2dd6c:	41 c3 4a 00 	or s26, s1, 4784
   2dd70:	20 c8 00 0f 	move s1, 50
   2dd74:	1a 00 00 88 	store_32 s0, (s26)
   2dd78:	00 0c 00 0b 	shl s0, s0, 3
   2dd7c:	40 00 fc c0 	move s2, s24
   2dd80:	d6 7a 00 f8 	call 125784 <Z_Malloc>
   2dd84:	3b 04 00 4f 	movehi s1, 59
   2dd88:	61 c3 4b 00 	or s27, s1, 4848
   2dd8c:	20 04 00 0f 	move s1, 1
   2dd90:	1b 00 00 88 	store_32 s0, (s27)
   2dd94:	00 80 fc c0 	move s0, s25
   2dd98:	20 44 00 f8 	call 69760 <W_CacheLumpNum>
   2dd9c:	3a 00 00 a8 	load_32 s1, (s26)
   2dda0:	21 04 00 14 	cmplt_i s1, s1, 1
   2dda4:	e1 01 00 f4 	bnz s1, 60 <P_LoadVertexes+0xa0>
   2dda8:	3b 00 00 a8 	load_32 s1, (s27)
   2ddac:	40 00 f0 c0 	move s2, s0
   2ddb0:	62 00 00 a6 	load_s16 s3, (s2)
   2ddb4:	18 07 00 05 	add_i s24, s24, 1
   2ddb8:	63 40 00 0b 	shl s3, s3, 16
   2ddbc:	61 00 00 88 	store_32 s3, (s1)
   2ddc0:	62 08 00 a6 	load_s16 s3, 2(s2)
   2ddc4:	42 10 00 05 	add_i s2, s2, 4
   2ddc8:	63 40 00 0b 	shl s3, s3, 16
   2ddcc:	61 10 00 88 	store_32 s3, 4(s1)
   2ddd0:	7a 00 00 a8 	load_32 s3, (s26)
   2ddd4:	21 20 00 05 	add_i s1, s1, 8
   2ddd8:	78 80 41 c1 	cmplt_i s3, s24, s3
   2dddc:	a3 fe ff f5 	bnz s3, -44 <P_LoadVertexes+0x70>
   2dde0:	75 7a 00 f8 	call 125396 <Z_Free>
   2dde4:	fe b3 00 a8 	load_32 ra, 44(sp)
   2dde8:	7e c3 00 a8 	load_32 s27, 48(sp)
   2ddec:	5e d3 00 a8 	load_32 s26, 52(sp)
   2ddf0:	3e e3 00 a8 	load_32 s25, 56(sp)
   2ddf4:	1e f3 00 a8 	load_32 s24, 60(sp)
   2ddf8:	de 03 01 05 	add_i sp, sp, 64
   2ddfc:	1f 00 00 f0 	ret

000000000002de00 P_LoadSegs:
   2de00:	de 03 ff 05 	add_i sp, sp, -64
   2de04:	1e f3 00 88 	store_32 s24, 60(sp)
   2de08:	3e e3 00 88 	store_32 s25, 56(sp)
   2de0c:	5e d3 00 88 	store_32 s26, 52(sp)
   2de10:	7e c3 00 88 	store_32 s27, 48(sp)
   2de14:	fe b3 00 88 	store_32 ra, 44(sp)
   2de18:	20 03 f0 c0 	move s25, s0
   2de1c:	9f 43 00 f8 	call 69244 <W_LumpLength>
   2de20:	35 a8 aa 4f 	movehi s1, 349525
   2de24:	5b 04 00 4f 	movehi s2, 59
   2de28:	00 03 00 0f 	move s24, 0
   2de2c:	21 ac 2a 00 	or s1, s1, 2731
   2de30:	00 80 80 c0 	mulh_u s0, s0, s1
   2de34:	62 93 4a 00 	or s27, s2, 4772
   2de38:	20 c8 00 0f 	move s1, 50
   2de3c:	00 0c 00 0a 	shr s0, s0, 3
   2de40:	1b 00 00 88 	store_32 s0, (s27)
   2de44:	40 00 fc c0 	move s2, s24
   2de48:	00 14 00 0b 	shl s0, s0, 5
   2de4c:	a3 7a 00 f8 	call 125580 <Z_Malloc>
   2de50:	3b 04 00 4f 	movehi s1, 59
   2de54:	41 93 4b 00 	or s26, s1, 4836
   2de58:	1a 00 00 88 	store_32 s0, (s26)
   2de5c:	3b 00 00 a8 	load_32 s1, (s27)
   2de60:	41 14 00 0b 	shl s2, s1, 5
   2de64:	20 00 fc c0 	move s1, s24
   2de68:	0f 8f 00 f8 	call 146492 <memset>
   2de6c:	20 04 00 0f 	move s1, 1
   2de70:	00 80 fc c0 	move s0, s25
   2de74:	e9 43 00 f8 	call 69540 <W_CacheLumpNum>
   2de78:	3b 00 00 a8 	load_32 s1, (s27)
   2de7c:	41 04 00 14 	cmplt_i s2, s1, 1
   2de80:	42 07 00 f4 	bnz s2, 232 <P_LoadSegs+0x168>
   2de84:	7b 04 00 4f 	movehi s3, 59
   2de88:	5a 00 00 a8 	load_32 s2, (s26)
   2de8c:	9b 04 00 4f 	movehi s4, 59
   2de90:	bb 04 00 4f 	movehi s5, 59
   2de94:	63 c0 4b 00 	or s3, s3, 4848
   2de98:	84 40 4a 00 	or s4, s4, 4752
   2de9c:	a5 a0 4b 00 	or s5, s5, 4840
   2dea0:	c3 00 00 a8 	load_32 s6, (s3)
   2dea4:	e0 00 fc c0 	move s7, s24
   2dea8:	00 01 f0 c0 	move s8, s0
   2deac:	28 01 00 a6 	load_s16 s9, (s8)
   2deb0:	29 0d 00 0b 	shl s9, s9, 3
   2deb4:	c6 80 54 c0 	add_i s6, s6, s9
   2deb8:	c2 00 00 88 	store_32 s6, (s2)
   2debc:	c3 00 00 a8 	load_32 s6, (s3)
   2dec0:	28 09 00 a6 	load_s16 s9, 2(s8)
   2dec4:	29 0d 00 0b 	shl s9, s9, 3
   2dec8:	26 81 54 c0 	add_i s9, s6, s9
   2decc:	22 11 00 88 	store_32 s9, 4(s2)
   2ded0:	28 11 00 a6 	load_s16 s9, 4(s8)
   2ded4:	29 41 00 0b 	shl s9, s9, 16
   2ded8:	22 31 00 88 	store_32 s9, 12(s2)
   2dedc:	28 29 00 a6 	load_s16 s9, 10(s8)
   2dee0:	29 41 00 0b 	shl s9, s9, 16
   2dee4:	22 21 00 88 	store_32 s9, 8(s2)
   2dee8:	28 19 00 a6 	load_s16 s9, 6(s8)
   2deec:	44 01 00 a8 	load_32 s10, (s4)
   2def0:	29 19 00 0b 	shl s9, s9, 6
   2def4:	2a 81 54 c0 	add_i s9, s10, s9
   2def8:	22 51 00 88 	store_32 s9, 20(s2)
   2defc:	68 21 00 a6 	load_s16 s11, 8(s8)
   2df00:	4b 05 00 0b 	shl s10, s11, 1
   2df04:	89 01 55 c0 	add_i s12, s9, s10
   2df08:	45 01 00 a8 	load_32 s10, (s5)
   2df0c:	8c 59 00 a6 	load_s16 s12, 22(s12)
   2df10:	8c 51 00 07 	mull_i s12, s12, 20
   2df14:	8a 01 56 c0 	add_i s12, s10, s12
   2df18:	82 41 00 88 	store_32 s12, 16(s2)
   2df1c:	8c 41 00 a8 	load_32 s12, 16(s12)
   2df20:	82 61 00 88 	store_32 s12, 24(s2)
   2df24:	89 41 00 a0 	load_u8 s12, 16(s9)
   2df28:	ac 11 00 01 	and s13, s12, 4
   2df2c:	80 01 fc c0 	move s12, s24
   2df30:	0d 01 00 f2 	bz s13, 32 <P_LoadSegs+0x150>
   2df34:	6b 05 00 03 	xor s11, s11, 1
   2df38:	6b 05 00 0b 	shl s11, s11, 1
   2df3c:	29 81 55 c0 	add_i s9, s9, s11
   2df40:	29 59 00 a6 	load_s16 s9, 22(s9)
   2df44:	29 51 00 07 	mull_i s9, s9, 20
   2df48:	2a 81 54 c0 	add_i s9, s10, s9
   2df4c:	89 41 00 a8 	load_32 s12, 16(s9)
   2df50:	e7 04 00 05 	add_i s7, s7, 1
   2df54:	82 71 00 88 	store_32 s12, 28(s2)
   2df58:	42 80 00 05 	add_i s2, s2, 32
   2df5c:	08 31 00 05 	add_i s8, s8, 12
   2df60:	27 81 40 c1 	cmplt_i s9, s7, s1
   2df64:	49 fa ff f5 	bnz s9, -184 <P_LoadSegs+0xac>
   2df68:	13 7a 00 f8 	call 125004 <Z_Free>
   2df6c:	fe b3 00 a8 	load_32 ra, 44(sp)
   2df70:	7e c3 00 a8 	load_32 s27, 48(sp)
   2df74:	5e d3 00 a8 	load_32 s26, 52(sp)
   2df78:	3e e3 00 a8 	load_32 s25, 56(sp)
   2df7c:	1e f3 00 a8 	load_32 s24, 60(sp)
   2df80:	de 03 01 05 	add_i sp, sp, 64
   2df84:	1f 00 00 f0 	ret

000000000002df88 P_LoadSubsectors:
   2df88:	de 03 ff 05 	add_i sp, sp, -64
   2df8c:	1e f3 00 88 	store_32 s24, 60(sp)
   2df90:	3e e3 00 88 	store_32 s25, 56(sp)
   2df94:	5e d3 00 88 	store_32 s26, 52(sp)
   2df98:	7e c3 00 88 	store_32 s27, 48(sp)
   2df9c:	fe b3 00 88 	store_32 ra, 44(sp)
   2dfa0:	20 03 f0 c0 	move s25, s0
   2dfa4:	3d 43 00 f8 	call 68852 <W_LumpLength>
   2dfa8:	3b 04 00 4f 	movehi s1, 59
   2dfac:	00 08 00 0a 	shr s0, s0, 2
   2dfb0:	00 03 00 0f 	move s24, 0
   2dfb4:	61 b3 4a 00 	or s27, s1, 4780
   2dfb8:	20 c8 00 0f 	move s1, 50
   2dfbc:	1b 00 00 88 	store_32 s0, (s27)
   2dfc0:	00 0c 00 0b 	shl s0, s0, 3
   2dfc4:	40 00 fc c0 	move s2, s24
   2dfc8:	44 7a 00 f8 	call 125200 <Z_Malloc>
   2dfcc:	3b 04 00 4f 	movehi s1, 59
   2dfd0:	41 b3 4b 00 	or s26, s1, 4844
   2dfd4:	20 04 00 0f 	move s1, 1
   2dfd8:	1a 00 00 88 	store_32 s0, (s26)
   2dfdc:	00 80 fc c0 	move s0, s25
   2dfe0:	8e 43 00 f8 	call 69176 <W_CacheLumpNum>
   2dfe4:	3a 00 00 a8 	load_32 s1, (s26)
   2dfe8:	5b 00 00 a8 	load_32 s2, (s27)
   2dfec:	20 03 f0 c0 	move s25, s0
   2dff0:	00 80 f0 c0 	move s0, s1
   2dff4:	42 0c 00 0b 	shl s2, s2, 3
   2dff8:	20 00 fc c0 	move s1, s24
   2dffc:	aa 8e 00 f8 	call 146088 <memset>
   2e000:	1b 00 00 a8 	load_32 s0, (s27)
   2e004:	20 04 00 14 	cmplt_i s1, s0, 1
   2e008:	81 01 00 f4 	bnz s1, 48 <P_LoadSubsectors+0xb0>
   2e00c:	3a 00 00 a8 	load_32 s1, (s26)
   2e010:	40 80 fc c0 	move s2, s25
   2e014:	62 00 00 a6 	load_s16 s3, (s2)
   2e018:	18 07 00 05 	add_i s24, s24, 1
   2e01c:	61 10 00 86 	store_16 s3, 4(s1)
   2e020:	62 08 00 a6 	load_s16 s3, 2(s2)
   2e024:	42 10 00 05 	add_i s2, s2, 4
   2e028:	61 18 00 86 	store_16 s3, 6(s1)
   2e02c:	21 20 00 05 	add_i s1, s1, 8
   2e030:	78 00 40 c1 	cmplt_i s3, s24, s0
   2e034:	03 ff ff f5 	bnz s3, -32 <P_LoadSubsectors+0x8c>
   2e038:	00 80 fc c0 	move s0, s25
   2e03c:	de 79 00 f8 	call 124792 <Z_Free>
   2e040:	fe b3 00 a8 	load_32 ra, 44(sp)
   2e044:	7e c3 00 a8 	load_32 s27, 48(sp)
   2e048:	5e d3 00 a8 	load_32 s26, 52(sp)
   2e04c:	3e e3 00 a8 	load_32 s25, 56(sp)
   2e050:	1e f3 00 a8 	load_32 s24, 60(sp)
   2e054:	de 03 01 05 	add_i sp, sp, 64
   2e058:	1f 00 00 f0 	ret

000000000002e05c P_LoadSectors:
   2e05c:	de 03 ff 05 	add_i sp, sp, -64
   2e060:	1e f3 00 88 	store_32 s24, 60(sp)
   2e064:	3e e3 00 88 	store_32 s25, 56(sp)
   2e068:	5e d3 00 88 	store_32 s26, 52(sp)
   2e06c:	7e c3 00 88 	store_32 s27, 48(sp)
   2e070:	fe b3 00 88 	store_32 ra, 44(sp)
   2e074:	20 03 f0 c0 	move s25, s0
   2e078:	08 43 00 f8 	call 68640 <W_LumpLength>
   2e07c:	27 c4 4e 4f 	movehi s1, 161319
   2e080:	5b 04 00 4f 	movehi s2, 59
   2e084:	60 03 00 0f 	move s27, 0
   2e088:	21 3c 31 00 	or s1, s1, 3151
   2e08c:	00 80 80 c0 	mulh_u s0, s0, s1
   2e090:	42 83 4a 00 	or s26, s2, 4768
   2e094:	20 c8 00 0f 	move s1, 50
   2e098:	00 0c 00 0a 	shr s0, s0, 3
   2e09c:	1a 00 00 88 	store_32 s0, (s26)
   2e0a0:	40 80 fd c0 	move s2, s27
   2e0a4:	00 60 01 07 	mull_i s0, s0, 88
   2e0a8:	0c 7a 00 f8 	call 124976 <Z_Malloc>
   2e0ac:	3b 04 00 4f 	movehi s1, 59
   2e0b0:	01 83 4b 00 	or s24, s1, 4832
   2e0b4:	18 00 00 88 	store_32 s0, (s24)
   2e0b8:	3a 00 00 a8 	load_32 s1, (s26)
   2e0bc:	7e a3 00 88 	store_32 s27, 40(sp)
   2e0c0:	41 60 01 07 	mull_i s2, s1, 88
   2e0c4:	20 80 fd c0 	move s1, s27
   2e0c8:	77 8e 00 f8 	call 145884 <memset>
   2e0cc:	20 04 00 0f 	move s1, 1
   2e0d0:	00 80 fc c0 	move s0, s25
   2e0d4:	51 43 00 f8 	call 68932 <W_CacheLumpNum>
   2e0d8:	3a 00 00 a8 	load_32 s1, (s26)
   2e0dc:	1e 90 00 88 	store_32 s0, 36(sp)
   2e0e0:	21 04 00 14 	cmplt_i s1, s1, 1
   2e0e4:	c1 03 00 f4 	bnz s1, 120 <P_LoadSectors+0x100>
   2e0e8:	78 03 00 a8 	load_32 s27, (s24)
   2e0ec:	3e 93 00 a8 	load_32 s25, 36(sp)
   2e0f0:	1e a3 00 a8 	load_32 s24, 40(sp)
   2e0f4:	19 00 00 a6 	load_s16 s0, (s25)
   2e0f8:	00 40 00 0b 	shl s0, s0, 16
   2e0fc:	1b 00 00 88 	store_32 s0, (s27)
   2e100:	19 08 00 a6 	load_s16 s0, 2(s25)
   2e104:	00 40 00 0b 	shl s0, s0, 16
   2e108:	1b 10 00 88 	store_32 s0, 4(s27)
   2e10c:	19 10 00 05 	add_i s0, s25, 4
   2e110:	83 25 00 f8 	call 38412 <R_FlatNumForName>
   2e114:	1b 20 00 86 	store_16 s0, 8(s27)
   2e118:	19 30 00 05 	add_i s0, s25, 12
   2e11c:	80 25 00 f8 	call 38400 <R_FlatNumForName>
   2e120:	1b 28 00 86 	store_16 s0, 10(s27)
   2e124:	18 07 00 05 	add_i s24, s24, 1
   2e128:	19 50 00 a6 	load_s16 s0, 20(s25)
   2e12c:	1b 30 00 86 	store_16 s0, 12(s27)
   2e130:	19 58 00 a6 	load_s16 s0, 22(s25)
   2e134:	1b 38 00 86 	store_16 s0, 14(s27)
   2e138:	19 60 00 a6 	load_s16 s0, 24(s25)
   2e13c:	39 6b 00 05 	add_i s25, s25, 26
   2e140:	1b 40 00 86 	store_16 s0, 16(s27)
   2e144:	1e a0 00 a8 	load_32 s0, 40(sp)
   2e148:	1b 20 01 88 	store_32 s0, 72(s27)
   2e14c:	7b 63 01 05 	add_i s27, s27, 88
   2e150:	1a 00 00 a8 	load_32 s0, (s26)
   2e154:	18 00 40 c1 	cmplt_i s0, s24, s0
   2e158:	e0 fc ff f5 	bnz s0, -100 <P_LoadSectors+0x98>
   2e15c:	1e 90 00 a8 	load_32 s0, 36(sp)
   2e160:	95 79 00 f8 	call 124500 <Z_Free>
   2e164:	fe b3 00 a8 	load_32 ra, 44(sp)
   2e168:	7e c3 00 a8 	load_32 s27, 48(sp)
   2e16c:	5e d3 00 a8 	load_32 s26, 52(sp)
   2e170:	3e e3 00 a8 	load_32 s25, 56(sp)
   2e174:	1e f3 00 a8 	load_32 s24, 60(sp)
   2e178:	de 03 01 05 	add_i sp, sp, 64
   2e17c:	1f 00 00 f0 	ret

000000000002e180 P_LoadNodes:
   2e180:	de 03 ff 05 	add_i sp, sp, -64
   2e184:	1e f3 00 88 	store_32 s24, 60(sp)
   2e188:	3e e3 00 88 	store_32 s25, 56(sp)
   2e18c:	5e d3 00 88 	store_32 s26, 52(sp)
   2e190:	7e c3 00 88 	store_32 s27, 48(sp)
   2e194:	fe b3 00 88 	store_32 ra, 44(sp)
   2e198:	20 03 f0 c0 	move s25, s0
   2e19c:	bf 42 00 f8 	call 68348 <W_LumpLength>
   2e1a0:	32 90 24 4f 	movehi s1, 74898
   2e1a4:	5b 04 00 4f 	movehi s2, 59
   2e1a8:	00 08 00 0a 	shr s0, s0, 2
   2e1ac:	21 94 24 00 	or s1, s1, 2341
   2e1b0:	42 73 4a 00 	or s26, s2, 4764
   2e1b4:	00 80 80 c0 	mulh_u s0, s0, s1
   2e1b8:	00 03 00 0f 	move s24, 0
   2e1bc:	1a 00 00 88 	store_32 s0, (s26)
   2e1c0:	20 c8 00 0f 	move s1, 50
   2e1c4:	00 d0 00 07 	mull_i s0, s0, 52
   2e1c8:	40 00 fc c0 	move s2, s24
   2e1cc:	c3 79 00 f8 	call 124684 <Z_Malloc>
   2e1d0:	3b 04 00 4f 	movehi s1, 59
   2e1d4:	61 53 4a 00 	or s27, s1, 4756
   2e1d8:	20 04 00 0f 	move s1, 1
   2e1dc:	1b 00 00 88 	store_32 s0, (s27)
   2e1e0:	00 80 fc c0 	move s0, s25
   2e1e4:	0d 43 00 f8 	call 68660 <W_CacheLumpNum>
   2e1e8:	3a 00 00 a8 	load_32 s1, (s26)
   2e1ec:	21 04 00 14 	cmplt_i s1, s1, 1
   2e1f0:	21 06 00 f4 	bnz s1, 196 <P_LoadNodes+0x134>
   2e1f4:	3b 00 00 a8 	load_32 s1, (s27)
   2e1f8:	40 00 f0 c0 	move s2, s0
   2e1fc:	62 00 00 a6 	load_s16 s3, (s2)
   2e200:	18 07 00 05 	add_i s24, s24, 1
   2e204:	63 40 00 0b 	shl s3, s3, 16
   2e208:	61 00 00 88 	store_32 s3, (s1)
   2e20c:	62 08 00 a6 	load_s16 s3, 2(s2)
   2e210:	63 40 00 0b 	shl s3, s3, 16
   2e214:	61 10 00 88 	store_32 s3, 4(s1)
   2e218:	62 10 00 a6 	load_s16 s3, 4(s2)
   2e21c:	63 40 00 0b 	shl s3, s3, 16
   2e220:	61 20 00 88 	store_32 s3, 8(s1)
   2e224:	62 18 00 a6 	load_s16 s3, 6(s2)
   2e228:	63 40 00 0b 	shl s3, s3, 16
   2e22c:	61 30 00 88 	store_32 s3, 12(s1)
   2e230:	62 60 00 a6 	load_s16 s3, 24(s2)
   2e234:	61 c0 00 86 	store_16 s3, 48(s1)
   2e238:	62 20 00 a6 	load_s16 s3, 8(s2)
   2e23c:	63 40 00 0b 	shl s3, s3, 16
   2e240:	61 40 00 88 	store_32 s3, 16(s1)
   2e244:	62 28 00 a6 	load_s16 s3, 10(s2)
   2e248:	63 40 00 0b 	shl s3, s3, 16
   2e24c:	61 50 00 88 	store_32 s3, 20(s1)
   2e250:	62 30 00 a6 	load_s16 s3, 12(s2)
   2e254:	63 40 00 0b 	shl s3, s3, 16
   2e258:	61 60 00 88 	store_32 s3, 24(s1)
   2e25c:	62 38 00 a6 	load_s16 s3, 14(s2)
   2e260:	63 40 00 0b 	shl s3, s3, 16
   2e264:	61 70 00 88 	store_32 s3, 28(s1)
   2e268:	62 68 00 a6 	load_s16 s3, 26(s2)
   2e26c:	61 c8 00 86 	store_16 s3, 50(s1)
   2e270:	62 40 00 a6 	load_s16 s3, 16(s2)
   2e274:	63 40 00 0b 	shl s3, s3, 16
   2e278:	61 80 00 88 	store_32 s3, 32(s1)
   2e27c:	62 48 00 a6 	load_s16 s3, 18(s2)
   2e280:	63 40 00 0b 	shl s3, s3, 16
   2e284:	61 90 00 88 	store_32 s3, 36(s1)
   2e288:	62 50 00 a6 	load_s16 s3, 20(s2)
   2e28c:	63 40 00 0b 	shl s3, s3, 16
   2e290:	61 a0 00 88 	store_32 s3, 40(s1)
   2e294:	62 58 00 a6 	load_s16 s3, 22(s2)
   2e298:	42 70 00 05 	add_i s2, s2, 28
   2e29c:	63 40 00 0b 	shl s3, s3, 16
   2e2a0:	61 b0 00 88 	store_32 s3, 44(s1)
   2e2a4:	7a 00 00 a8 	load_32 s3, (s26)
   2e2a8:	21 d0 00 05 	add_i s1, s1, 52
   2e2ac:	78 80 41 c1 	cmplt_i s3, s24, s3
   2e2b0:	63 fa ff f5 	bnz s3, -180 <P_LoadNodes+0x7c>
   2e2b4:	40 79 00 f8 	call 124160 <Z_Free>
   2e2b8:	fe b3 00 a8 	load_32 ra, 44(sp)
   2e2bc:	7e c3 00 a8 	load_32 s27, 48(sp)
   2e2c0:	5e d3 00 a8 	load_32 s26, 52(sp)
   2e2c4:	3e e3 00 a8 	load_32 s25, 56(sp)
   2e2c8:	1e f3 00 a8 	load_32 s24, 60(sp)
   2e2cc:	de 03 01 05 	add_i sp, sp, 64
   2e2d0:	1f 00 00 f0 	ret

000000000002e2d4 P_LoadThings:
   2e2d4:	de 03 ff 05 	add_i sp, sp, -64
   2e2d8:	1e f3 00 88 	store_32 s24, 60(sp)
   2e2dc:	3e e3 00 88 	store_32 s25, 56(sp)
   2e2e0:	5e d3 00 88 	store_32 s26, 52(sp)
   2e2e4:	7e c3 00 88 	store_32 s27, 48(sp)
   2e2e8:	fe b3 00 88 	store_32 ra, 44(sp)
   2e2ec:	20 04 00 0f 	move s1, 1
   2e2f0:	40 03 f0 c0 	move s26, s0
   2e2f4:	3e a0 00 88 	store_32 s1, 40(sp)
   2e2f8:	c8 42 00 f8 	call 68384 <W_CacheLumpNum>
   2e2fc:	1e 80 00 88 	store_32 s0, 32(sp)
   2e300:	00 00 fd c0 	move s0, s26
   2e304:	65 42 00 f8 	call 67988 <W_LumpLength>
   2e308:	20 28 00 18 	cmplt_u s1, s0, 10
   2e30c:	c1 03 00 f4 	bnz s1, 120 <P_LoadThings+0xb0>
   2e310:	26 cc cc 4f 	movehi s1, 419430
   2e314:	20 03 00 0f 	move s25, 0
   2e318:	21 34 33 00 	or s1, s1, 3277
   2e31c:	00 80 80 c0 	mulh_u s0, s0, s1
   2e320:	20 10 03 4f 	movehi s1, 6272
   2e324:	60 0f 00 0a 	shr s27, s0, 3
   2e328:	0b 04 00 4f 	movehi s0, 43
   2e32c:	00 03 40 00 	or s24, s0, 4096
   2e330:	01 fc 02 00 	or s0, s1, 191
   2e334:	1e 90 00 88 	store_32 s0, 36(sp)
   2e338:	5e 83 00 a8 	load_32 s26, 32(sp)
   2e33c:	18 00 00 a8 	load_32 s0, (s24)
   2e340:	00 08 00 10 	cmpeq_i s0, s0, 2
   2e344:	40 01 00 f4 	bnz s0, 40 <P_LoadThings+0x98>
   2e348:	1a 18 00 a6 	load_s16 s0, 6(s26)
   2e34c:	00 00 ff 05 	add_i s0, s0, -64
   2e350:	20 64 00 16 	cmpgt_u s1, s0, 25
   2e354:	c1 00 00 f4 	bnz s1, 24 <P_LoadThings+0x98>
   2e358:	3e a0 00 a8 	load_32 s1, 40(sp)
   2e35c:	01 00 b0 c0 	shl s0, s1, s0
   2e360:	3e 90 00 a8 	load_32 s1, 36(sp)
   2e364:	00 80 10 c0 	and s0, s0, s1
   2e368:	e0 00 00 f4 	bnz s0, 28 <P_LoadThings+0xb0>
   2e36c:	00 00 fd c0 	move s0, s26
   2e370:	43 13 00 f8 	call 19724 <P_SpawnMapThing>
   2e374:	39 07 00 05 	add_i s25, s25, 1
   2e378:	5a 2b 00 05 	add_i s26, s26, 10
   2e37c:	19 80 8d c1 	cmplt_u s0, s25, s27
   2e380:	e0 fd ff f5 	bnz s0, -68 <P_LoadThings+0x68>
   2e384:	1e 80 00 a8 	load_32 s0, 32(sp)
   2e388:	0b 79 00 f8 	call 123948 <Z_Free>
   2e38c:	fe b3 00 a8 	load_32 ra, 44(sp)
   2e390:	7e c3 00 a8 	load_32 s27, 48(sp)
   2e394:	5e d3 00 a8 	load_32 s26, 52(sp)
   2e398:	3e e3 00 a8 	load_32 s25, 56(sp)
   2e39c:	1e f3 00 a8 	load_32 s24, 60(sp)
   2e3a0:	de 03 01 05 	add_i sp, sp, 64
   2e3a4:	1f 00 00 f0 	ret

000000000002e3a8 P_LoadLineDefs:
   2e3a8:	de 03 ff 05 	add_i sp, sp, -64
   2e3ac:	1e f3 00 88 	store_32 s24, 60(sp)
   2e3b0:	3e e3 00 88 	store_32 s25, 56(sp)
   2e3b4:	5e d3 00 88 	store_32 s26, 52(sp)
   2e3b8:	7e c3 00 88 	store_32 s27, 48(sp)
   2e3bc:	fe b3 00 88 	store_32 ra, 44(sp)
   2e3c0:	40 03 f0 c0 	move s26, s0
   2e3c4:	35 42 00 f8 	call 67796 <W_LumpLength>
   2e3c8:	29 48 92 4f 	movehi s1, 299593
   2e3cc:	00 04 00 0a 	shr s0, s0, 1
   2e3d0:	5b 04 00 4f 	movehi s2, 59
   2e3d4:	21 4c 12 00 	or s1, s1, 1171
   2e3d8:	00 80 80 c0 	mulh_u s0, s0, s1
   2e3dc:	22 63 4a 00 	or s25, s2, 4760
   2e3e0:	60 03 00 0f 	move s27, 0
   2e3e4:	00 08 00 0a 	shr s0, s0, 2
   2e3e8:	19 00 00 88 	store_32 s0, (s25)
   2e3ec:	20 c8 00 0f 	move s1, 50
   2e3f0:	40 80 fd c0 	move s2, s27
   2e3f4:	00 18 00 0b 	shl s0, s0, 6
   2e3f8:	38 79 00 f8 	call 124128 <Z_Malloc>
   2e3fc:	3b 04 00 4f 	movehi s1, 59
   2e400:	01 43 4a 00 	or s24, s1, 4752
   2e404:	18 00 00 88 	store_32 s0, (s24)
   2e408:	39 00 00 a8 	load_32 s1, (s25)
   2e40c:	41 18 00 0b 	shl s2, s1, 6
   2e410:	20 80 fd c0 	move s1, s27
   2e414:	a4 8d 00 f8 	call 145040 <memset>
   2e418:	20 04 00 0f 	move s1, 1
   2e41c:	00 00 fd c0 	move s0, s26
   2e420:	3e 70 00 88 	store_32 s1, 28(sp)
   2e424:	7d 42 00 f8 	call 68084 <W_CacheLumpNum>
   2e428:	c0 80 fd c0 	move s6, s27
   2e42c:	a0 80 fc c0 	move s5, s25
   2e430:	25 00 00 a8 	load_32 s1, (s5)
   2e434:	1e 20 00 88 	store_32 s0, 8(sp)
   2e438:	21 04 00 14 	cmplt_i s1, s1, 1
   2e43c:	21 0f 00 f4 	bnz s1, 484 <P_LoadLineDefs+0x278>
   2e440:	1b 04 00 4f 	movehi s0, 59
   2e444:	58 03 00 a8 	load_32 s26, (s24)
   2e448:	27 00 00 4f 	movehi s1, 7
   2e44c:	5b 04 00 4f 	movehi s2, 59
   2e450:	e0 c0 4b 00 	or s7, s0, 4848
   2e454:	00 08 00 0f 	move s0, 2
   2e458:	1e 30 00 88 	store_32 s0, 12(sp)
   2e45c:	40 01 f3 c0 	move s10, s6
   2e460:	7e 23 00 a8 	load_32 s27, 8(sp)
   2e464:	01 fd 7f 00 	or s8, s1, 8191
   2e468:	be 90 00 88 	store_32 s5, 36(sp)
   2e46c:	22 a1 4b 00 	or s9, s2, 4840
   2e470:	de 80 00 88 	store_32 s6, 32(sp)
   2e474:	fe 60 00 88 	store_32 s7, 24(sp)
   2e478:	1e 51 00 88 	store_32 s8, 20(sp)
   2e47c:	3e 41 00 88 	store_32 s9, 16(sp)
   2e480:	1b 10 00 a6 	load_s16 s0, 4(s27)
   2e484:	1a 40 00 86 	store_16 s0, 16(s26)
   2e488:	1b 18 00 a6 	load_s16 s0, 6(s27)
   2e48c:	1a 48 00 86 	store_16 s0, 18(s26)
   2e490:	1b 20 00 a6 	load_s16 s0, 8(s27)
   2e494:	1a 50 00 86 	store_16 s0, 20(s26)
   2e498:	07 00 00 a8 	load_32 s0, (s7)
   2e49c:	3b 00 00 a6 	load_s16 s1, (s27)
   2e4a0:	21 0c 00 0b 	shl s1, s1, 3
   2e4a4:	00 83 50 c0 	add_i s24, s0, s1
   2e4a8:	1a 03 00 88 	store_32 s24, (s26)
   2e4ac:	07 00 00 a8 	load_32 s0, (s7)
   2e4b0:	3b 08 00 a6 	load_s16 s1, 2(s27)
   2e4b4:	21 0c 00 0b 	shl s1, s1, 3
   2e4b8:	20 83 50 c0 	add_i s25, s0, s1
   2e4bc:	3a 13 00 88 	store_32 s25, 4(s26)
   2e4c0:	19 00 00 a8 	load_32 s0, (s25)
   2e4c4:	38 00 00 a8 	load_32 s1, (s24)
   2e4c8:	20 80 60 c0 	sub_i s1, s0, s1
   2e4cc:	3a 20 00 88 	store_32 s1, 8(s26)
   2e4d0:	19 10 00 a8 	load_32 s0, 4(s25)
   2e4d4:	58 10 00 a8 	load_32 s2, 4(s24)
   2e4d8:	00 00 61 c0 	sub_i s0, s0, s2
   2e4dc:	1a 30 00 88 	store_32 s0, 12(s26)
   2e4e0:	41 00 00 f4 	bnz s1, 8 <P_LoadLineDefs+0x140>
   2e4e4:	09 00 00 f6 	b 36 <P_LoadLineDefs+0x160>
   2e4e8:	40 00 00 f4 	bnz s0, 8 <P_LoadLineDefs+0x148>
   2e4ec:	0e 00 00 f6 	b 56 <P_LoadLineDefs+0x17c>
   2e4f0:	5e a1 00 88 	store_32 s10, 40(sp)
   2e4f4:	96 b6 ff f9 	call -75176 <FixedDiv>
   2e4f8:	00 04 00 14 	cmplt_i s0, s0, 1
   2e4fc:	00 02 00 f4 	bnz s0, 64 <P_LoadLineDefs+0x194>
   2e500:	1e 30 00 a8 	load_32 s0, 12(sp)
   2e504:	0f 00 00 f6 	b 60 <P_LoadLineDefs+0x198>
   2e508:	1e 70 00 a8 	load_32 s0, 28(sp)
   2e50c:	1a b0 00 88 	store_32 s0, 44(s26)
   2e510:	78 00 00 a8 	load_32 s3, (s24)
   2e514:	19 00 00 a8 	load_32 s0, (s25)
   2e518:	43 00 40 c1 	cmplt_i s2, s3, s0
   2e51c:	a2 02 00 f4 	bnz s2, 84 <P_LoadLineDefs+0x1c8>
   2e520:	13 00 00 f6 	b 76 <P_LoadLineDefs+0x1c4>
   2e524:	da b0 00 88 	store_32 s6, 44(s26)
   2e528:	78 00 00 a8 	load_32 s3, (s24)
   2e52c:	19 00 00 a8 	load_32 s0, (s25)
   2e530:	43 00 40 c1 	cmplt_i s2, s3, s0
   2e534:	e2 01 00 f4 	bnz s2, 60 <P_LoadLineDefs+0x1c8>
   2e538:	0d 00 00 f6 	b 52 <P_LoadLineDefs+0x1c4>
   2e53c:	00 0c 00 0f 	move s0, 3
   2e540:	1a b0 00 88 	store_32 s0, 44(s26)
   2e544:	be 90 00 a8 	load_32 s5, 36(sp)
   2e548:	de 80 00 a8 	load_32 s6, 32(sp)
   2e54c:	fe 60 00 a8 	load_32 s7, 24(sp)
   2e550:	1e 51 00 a8 	load_32 s8, 20(sp)
   2e554:	3e 41 00 a8 	load_32 s9, 16(sp)
   2e558:	5e a1 00 a8 	load_32 s10, 40(sp)
   2e55c:	78 00 00 a8 	load_32 s3, (s24)
   2e560:	19 00 00 a8 	load_32 s0, (s25)
   2e564:	43 00 40 c1 	cmplt_i s2, s3, s0
   2e568:	42 00 00 f4 	bnz s2, 8 <P_LoadLineDefs+0x1c8>
   2e56c:	60 00 f0 c0 	move s3, s0
   2e570:	19 10 00 05 	add_i s0, s25, 4
   2e574:	7a 90 00 88 	store_32 s3, 36(s26)
   2e578:	38 10 00 05 	add_i s1, s24, 4
   2e57c:	42 00 00 f4 	bnz s2, 8 <P_LoadLineDefs+0x1dc>
   2e580:	20 03 fc c0 	move s25, s24
   2e584:	59 00 00 a8 	load_32 s2, (s25)
   2e588:	5a a0 00 88 	store_32 s2, 40(s26)
   2e58c:	61 00 00 a8 	load_32 s3, (s1)
   2e590:	80 00 00 a8 	load_32 s4, (s0)
   2e594:	43 00 42 c1 	cmplt_i s2, s3, s4
   2e598:	42 00 00 f4 	bnz s2, 8 <P_LoadLineDefs+0x1f8>
   2e59c:	60 00 f2 c0 	move s3, s4
   2e5a0:	7a 80 00 88 	store_32 s3, 32(s26)
   2e5a4:	42 00 00 f4 	bnz s2, 8 <P_LoadLineDefs+0x204>
   2e5a8:	00 80 f0 c0 	move s0, s1
   2e5ac:	00 00 00 a8 	load_32 s0, (s0)
   2e5b0:	1a 70 00 88 	store_32 s0, 28(s26)
   2e5b4:	3b 28 00 a4 	load_u16 s1, 10(s27)
   2e5b8:	3a 58 00 86 	store_16 s1, 22(s26)
   2e5bc:	1b 30 00 a6 	load_s16 s0, 12(s27)
   2e5c0:	1a 60 00 86 	store_16 s0, 24(s26)
   2e5c4:	40 00 f3 c0 	move s2, s6
   2e5c8:	61 00 04 c1 	cmpeq_i s3, s1, s8
   2e5cc:	c3 00 00 f4 	bnz s3, 24 <P_LoadLineDefs+0x23c>
   2e5d0:	20 80 e0 c1 	sext_16 s1, s1
   2e5d4:	49 00 00 a8 	load_32 s2, (s9)
   2e5d8:	21 50 00 07 	mull_i s1, s1, 20
   2e5dc:	22 80 50 c0 	add_i s1, s2, s1
   2e5e0:	41 40 00 a8 	load_32 s2, 16(s1)
   2e5e4:	5a c0 00 88 	store_32 s2, 48(s26)
   2e5e8:	60 fc ff 10 	cmpeq_i s3, s0, -1
   2e5ec:	20 00 f3 c0 	move s1, s6
   2e5f0:	a3 00 00 f4 	bnz s3, 20 <P_LoadLineDefs+0x25c>
   2e5f4:	29 00 00 a8 	load_32 s1, (s9)
   2e5f8:	00 50 00 07 	mull_i s0, s0, 20
   2e5fc:	01 00 50 c0 	add_i s0, s1, s0
   2e600:	20 40 00 a8 	load_32 s1, 16(s0)
   2e604:	3a d0 00 88 	store_32 s1, 52(s26)
   2e608:	4a 05 00 05 	add_i s10, s10, 1
   2e60c:	05 00 00 a8 	load_32 s0, (s5)
   2e610:	7b 3b 00 05 	add_i s27, s27, 14
   2e614:	5a 03 01 05 	add_i s26, s26, 64
   2e618:	0a 00 40 c1 	cmplt_i s0, s10, s0
   2e61c:	20 f3 ff f5 	bnz s0, -412 <P_LoadLineDefs+0xd8>
   2e620:	1e 20 00 a8 	load_32 s0, 8(sp)
   2e624:	64 78 00 f8 	call 123280 <Z_Free>
   2e628:	fe b3 00 a8 	load_32 ra, 44(sp)
   2e62c:	7e c3 00 a8 	load_32 s27, 48(sp)
   2e630:	5e d3 00 a8 	load_32 s26, 52(sp)
   2e634:	3e e3 00 a8 	load_32 s25, 56(sp)
   2e638:	1e f3 00 a8 	load_32 s24, 60(sp)
   2e63c:	de 03 01 05 	add_i sp, sp, 64
   2e640:	1f 00 00 f0 	ret

000000000002e644 P_LoadSideDefs:
   2e644:	de 03 ff 05 	add_i sp, sp, -64
   2e648:	1e f3 00 88 	store_32 s24, 60(sp)
   2e64c:	3e e3 00 88 	store_32 s25, 56(sp)
   2e650:	5e d3 00 88 	store_32 s26, 52(sp)
   2e654:	7e c3 00 88 	store_32 s27, 48(sp)
   2e658:	fe b3 00 88 	store_32 ra, 44(sp)
   2e65c:	20 03 f0 c0 	move s25, s0
   2e660:	8e 41 00 f8 	call 67128 <W_LumpLength>
   2e664:	24 88 88 4f 	movehi s1, 279620
   2e668:	5b 04 00 4f 	movehi s2, 59
   2e66c:	00 03 00 0f 	move s24, 0
   2e670:	21 24 22 00 	or s1, s1, 2185
   2e674:	00 80 80 c0 	mulh_u s0, s0, s1
   2e678:	62 a3 4a 00 	or s27, s2, 4776
   2e67c:	20 c8 00 0f 	move s1, 50
   2e680:	00 10 00 0a 	shr s0, s0, 4
   2e684:	1b 00 00 88 	store_32 s0, (s27)
   2e688:	40 00 fc c0 	move s2, s24
   2e68c:	00 50 00 07 	mull_i s0, s0, 20
   2e690:	92 78 00 f8 	call 123464 <Z_Malloc>
   2e694:	3b 04 00 4f 	movehi s1, 59
   2e698:	41 a3 4b 00 	or s26, s1, 4840
   2e69c:	1a 00 00 88 	store_32 s0, (s26)
   2e6a0:	3b 00 00 a8 	load_32 s1, (s27)
   2e6a4:	41 50 00 07 	mull_i s2, s1, 20
   2e6a8:	20 00 fc c0 	move s1, s24
   2e6ac:	fe 8c 00 f8 	call 144376 <memset>
   2e6b0:	20 04 00 0f 	move s1, 1
   2e6b4:	00 80 fc c0 	move s0, s25
   2e6b8:	d8 41 00 f8 	call 67424 <W_CacheLumpNum>
   2e6bc:	20 83 fd c0 	move s25, s27
   2e6c0:	39 00 00 a8 	load_32 s1, (s25)
   2e6c4:	1e 90 00 88 	store_32 s0, 36(sp)
   2e6c8:	21 04 00 14 	cmplt_i s1, s1, 1
   2e6cc:	21 04 00 f4 	bnz s1, 132 <P_LoadSideDefs+0x10c>
   2e6d0:	1b 04 00 4f 	movehi s0, 59
   2e6d4:	7a 03 00 a8 	load_32 s27, (s26)
   2e6d8:	00 80 4b 00 	or s0, s0, 4832
   2e6dc:	1e a0 00 88 	store_32 s0, 40(sp)
   2e6e0:	5e 93 00 a8 	load_32 s26, 36(sp)
   2e6e4:	1a 00 00 a6 	load_s16 s0, (s26)
   2e6e8:	00 40 00 0b 	shl s0, s0, 16
   2e6ec:	1b 00 00 88 	store_32 s0, (s27)
   2e6f0:	1a 08 00 a6 	load_s16 s0, 2(s26)
   2e6f4:	00 40 00 0b 	shl s0, s0, 16
   2e6f8:	1b 10 00 88 	store_32 s0, 4(s27)
   2e6fc:	1a 10 00 05 	add_i s0, s26, 4
   2e700:	66 24 00 f8 	call 37272 <R_TextureNumForName>
   2e704:	1b 20 00 86 	store_16 s0, 8(s27)
   2e708:	1a 30 00 05 	add_i s0, s26, 12
   2e70c:	63 24 00 f8 	call 37260 <R_TextureNumForName>
   2e710:	1b 28 00 86 	store_16 s0, 10(s27)
   2e714:	1a 50 00 05 	add_i s0, s26, 20
   2e718:	60 24 00 f8 	call 37248 <R_TextureNumForName>
   2e71c:	1b 30 00 86 	store_16 s0, 12(s27)
   2e720:	18 07 00 05 	add_i s24, s24, 1
   2e724:	1e a0 00 a8 	load_32 s0, 40(sp)
   2e728:	00 00 00 a8 	load_32 s0, (s0)
   2e72c:	3a 70 00 a6 	load_s16 s1, 28(s26)
   2e730:	5a 7b 00 05 	add_i s26, s26, 30
   2e734:	21 60 01 07 	mull_i s1, s1, 88
   2e738:	00 80 50 c0 	add_i s0, s0, s1
   2e73c:	1b 40 00 88 	store_32 s0, 16(s27)
   2e740:	19 00 00 a8 	load_32 s0, (s25)
   2e744:	7b 53 00 05 	add_i s27, s27, 20
   2e748:	18 00 40 c1 	cmplt_i s0, s24, s0
   2e74c:	c0 fc ff f5 	bnz s0, -104 <P_LoadSideDefs+0xa0>
   2e750:	1e 90 00 a8 	load_32 s0, 36(sp)
   2e754:	18 78 00 f8 	call 122976 <Z_Free>
   2e758:	fe b3 00 a8 	load_32 ra, 44(sp)
   2e75c:	7e c3 00 a8 	load_32 s27, 48(sp)
   2e760:	5e d3 00 a8 	load_32 s26, 52(sp)
   2e764:	3e e3 00 a8 	load_32 s25, 56(sp)
   2e768:	1e f3 00 a8 	load_32 s24, 60(sp)
   2e76c:	de 03 01 05 	add_i sp, sp, 64
   2e770:	1f 00 00 f0 	ret

000000000002e774 P_LoadBlockMap:
   2e774:	de 03 ff 05 	add_i sp, sp, -64
   2e778:	1e f3 00 88 	store_32 s24, 60(sp)
   2e77c:	3e e3 00 88 	store_32 s25, 56(sp)
   2e780:	5e d3 00 88 	store_32 s26, 52(sp)
   2e784:	fe c3 00 88 	store_32 ra, 48(sp)
   2e788:	20 cb 00 0f 	move s25, 50
   2e78c:	00 03 f0 c0 	move s24, s0
   2e790:	20 80 fc c0 	move s1, s25
   2e794:	a1 41 00 f8 	call 67204 <W_CacheLumpNum>
   2e798:	3b 04 00 4f 	movehi s1, 59
   2e79c:	5b 04 00 4f 	movehi s2, 59
   2e7a0:	41 53 48 00 	or s26, s1, 4628
   2e7a4:	22 40 48 00 	or s1, s2, 4624
   2e7a8:	1a 00 00 88 	store_32 s0, (s26)
   2e7ac:	00 20 00 05 	add_i s0, s0, 8
   2e7b0:	01 00 00 88 	store_32 s0, (s1)
   2e7b4:	00 00 fc c0 	move s0, s24
   2e7b8:	38 41 00 f8 	call 66784 <W_LumpLength>
   2e7bc:	1a 00 00 a8 	load_32 s0, (s26)
   2e7c0:	3b 04 00 4f 	movehi s1, 59
   2e7c4:	7b 04 00 4f 	movehi s3, 59
   2e7c8:	40 03 00 0f 	move s26, 0
   2e7cc:	21 70 48 00 	or s1, s1, 4636
   2e7d0:	40 00 00 a6 	load_s16 s2, (s0)
   2e7d4:	63 90 48 00 	or s3, s3, 4644
   2e7d8:	42 40 00 0b 	shl s2, s2, 16
   2e7dc:	41 00 00 88 	store_32 s2, (s1)
   2e7e0:	5b 04 00 4f 	movehi s2, 59
   2e7e4:	20 08 00 a6 	load_s16 s1, 2(s0)
   2e7e8:	42 80 48 00 	or s2, s2, 4640
   2e7ec:	21 40 00 0b 	shl s1, s1, 16
   2e7f0:	22 00 00 88 	store_32 s1, (s2)
   2e7f4:	5b 04 00 4f 	movehi s2, 59
   2e7f8:	20 10 00 a6 	load_s16 s1, 4(s0)
   2e7fc:	23 00 00 88 	store_32 s1, (s3)
   2e800:	00 18 00 a6 	load_s16 s0, 6(s0)
   2e804:	42 60 48 00 	or s2, s2, 4632
   2e808:	02 00 00 88 	store_32 s0, (s2)
   2e80c:	21 00 70 c0 	mull_i s1, s1, s0
   2e810:	01 0b 00 0b 	shl s24, s1, 2
   2e814:	00 00 fc c0 	move s0, s24
   2e818:	20 80 fc c0 	move s1, s25
   2e81c:	40 00 fd c0 	move s2, s26
   2e820:	2e 78 00 f8 	call 123064 <Z_Malloc>
   2e824:	3b 04 00 4f 	movehi s1, 59
   2e828:	21 30 48 00 	or s1, s1, 4620
   2e82c:	01 00 00 88 	store_32 s0, (s1)
   2e830:	20 00 fd c0 	move s1, s26
   2e834:	40 00 fc c0 	move s2, s24
   2e838:	9b 8c 00 f8 	call 143980 <memset>
   2e83c:	fe c3 00 a8 	load_32 ra, 48(sp)
   2e840:	5e d3 00 a8 	load_32 s26, 52(sp)
   2e844:	3e e3 00 a8 	load_32 s25, 56(sp)
   2e848:	1e f3 00 a8 	load_32 s24, 60(sp)
   2e84c:	de 03 01 05 	add_i sp, sp, 64
   2e850:	1f 00 00 f0 	ret

000000000002e854 P_GroupLines:
   2e854:	de 03 fd 05 	add_i sp, sp, -192
   2e858:	1e f3 02 88 	store_32 s24, 188(sp)
   2e85c:	3e e3 02 88 	store_32 s25, 184(sp)
   2e860:	5e d3 02 88 	store_32 s26, 180(sp)
   2e864:	7e c3 02 88 	store_32 s27, 176(sp)
   2e868:	fe b3 02 88 	store_32 ra, 172(sp)
   2e86c:	1b 04 00 4f 	movehi s0, 59
   2e870:	00 b0 4a 00 	or s0, s0, 4780
   2e874:	00 00 00 a8 	load_32 s0, (s0)
   2e878:	20 04 00 14 	cmplt_i s1, s0, 1
   2e87c:	41 02 00 f4 	bnz s1, 72 <P_GroupLines+0x70>
   2e880:	3b 04 00 4f 	movehi s1, 59
   2e884:	7b 04 00 4f 	movehi s3, 59
   2e888:	40 00 00 0f 	move s2, 0
   2e88c:	21 b0 4b 00 	or s1, s1, 4844
   2e890:	63 90 4b 00 	or s3, s3, 4836
   2e894:	21 00 00 a8 	load_32 s1, (s1)
   2e898:	83 00 00 a8 	load_32 s4, (s3)
   2e89c:	42 04 00 05 	add_i s2, s2, 1
   2e8a0:	a1 18 00 a6 	load_s16 s5, 6(s1)
   2e8a4:	a5 14 00 0b 	shl s5, s5, 5
   2e8a8:	84 80 52 c0 	add_i s4, s4, s5
   2e8ac:	84 40 00 a8 	load_32 s4, 16(s4)
   2e8b0:	84 40 00 a8 	load_32 s4, 16(s4)
   2e8b4:	81 00 00 88 	store_32 s4, (s1)
   2e8b8:	82 00 40 c1 	cmplt_i s4, s2, s0
   2e8bc:	21 20 00 05 	add_i s1, s1, 8
   2e8c0:	c4 fe ff f5 	bnz s4, -40 <P_GroupLines+0x44>
   2e8c4:	1b 04 00 4f 	movehi s0, 59
   2e8c8:	00 60 4a 00 	or s0, s0, 4760
   2e8cc:	1e 50 02 88 	store_32 s0, 148(sp)
   2e8d0:	00 00 00 a8 	load_32 s0, (s0)
   2e8d4:	20 04 00 14 	cmplt_i s1, s0, 1
   2e8d8:	21 03 00 f4 	bnz s1, 100 <P_GroupLines+0xe8>
   2e8dc:	3b 04 00 4f 	movehi s1, 59
   2e8e0:	41 40 4a 00 	or s2, s1, 4752
   2e8e4:	20 00 00 0f 	move s1, 0
   2e8e8:	42 00 00 a8 	load_32 s2, (s2)
   2e8ec:	80 80 f0 c0 	move s4, s1
   2e8f0:	c2 c0 00 a8 	load_32 s6, 48(s2)
   2e8f4:	66 40 01 a8 	load_32 s3, 80(s6)
   2e8f8:	63 04 00 05 	add_i s3, s3, 1
   2e8fc:	66 40 01 88 	store_32 s3, 80(s6)
   2e900:	a2 d0 00 a8 	load_32 s5, 52(s2)
   2e904:	64 04 00 05 	add_i s3, s4, 1
   2e908:	e5 00 00 f2 	bz s5, 28 <P_GroupLines+0xd0>
   2e90c:	c5 00 03 c1 	cmpeq_i s6, s5, s6
   2e910:	a6 00 00 f4 	bnz s6, 20 <P_GroupLines+0xd0>
   2e914:	65 40 01 a8 	load_32 s3, 80(s5)
   2e918:	63 04 00 05 	add_i s3, s3, 1
   2e91c:	65 40 01 88 	store_32 s3, 80(s5)
   2e920:	64 08 00 05 	add_i s3, s4, 2
   2e924:	21 04 00 05 	add_i s1, s1, 1
   2e928:	42 00 01 05 	add_i s2, s2, 64
   2e92c:	80 80 f1 c0 	move s4, s3
   2e930:	a1 00 40 c1 	cmplt_i s5, s1, s0
   2e934:	e5 fd ff f5 	bnz s5, -68 <P_GroupLines+0x9c>
   2e938:	02 00 00 f6 	b 8 <P_GroupLines+0xec>
   2e93c:	60 00 00 0f 	move s3, 0
   2e940:	40 00 00 0f 	move s2, 0
   2e944:	5e f0 01 88 	store_32 s2, 124(sp)
   2e948:	03 08 00 0b 	shl s0, s3, 2
   2e94c:	20 c8 00 0f 	move s1, 50
   2e950:	e2 77 00 f8 	call 122760 <Z_Malloc>
   2e954:	3b 04 00 4f 	movehi s1, 59
   2e958:	21 80 4a 00 	or s1, s1, 4768
   2e95c:	3e 20 02 88 	store_32 s1, 136(sp)
   2e960:	21 00 00 a8 	load_32 s1, (s1)
   2e964:	40 03 f0 c0 	move s26, s0
   2e968:	21 04 00 14 	cmplt_i s1, s1, 1
   2e96c:	41 11 00 f4 	bnz s1, 552 <P_GroupLines+0x340>
   2e970:	1b 04 00 4f 	movehi s0, 59
   2e974:	3e 70 02 05 	add_i s1, sp, 156
   2e978:	20 23 00 4f 	movehi s25, 256
   2e97c:	00 80 4b 00 	or s0, s0, 4832
   2e980:	00 03 00 a8 	load_32 s24, (s0)
   2e984:	1b 04 00 4f 	movehi s0, 59
   2e988:	3e 40 02 88 	store_32 s1, 144(sp)
   2e98c:	3b 04 00 4f 	movehi s1, 59
   2e990:	00 40 4a 00 	or s0, s0, 4752
   2e994:	1e e0 01 88 	store_32 s0, 120(sp)
   2e998:	1b 04 00 4f 	movehi s0, 59
   2e99c:	21 80 48 00 	or s1, s1, 4640
   2e9a0:	3e 10 02 88 	store_32 s1, 132(sp)
   2e9a4:	00 60 48 00 	or s0, s0, 4632
   2e9a8:	1e 00 02 88 	store_32 s0, 128(sp)
   2e9ac:	7e f3 01 a8 	load_32 s27, 124(sp)
   2e9b0:	3e d3 01 88 	store_32 s25, 116(sp)
   2e9b4:	1e 40 02 a8 	load_32 s0, 144(sp)
   2e9b8:	41 b5 ff f9 	call -76540 <M_ClearBox>
   2e9bc:	58 53 01 88 	store_32 s26, 84(s24)
   2e9c0:	1e 50 02 a8 	load_32 s0, 148(sp)
   2e9c4:	00 00 00 a8 	load_32 s0, (s0)
   2e9c8:	20 04 00 14 	cmplt_i s1, s0, 1
   2e9cc:	81 05 00 f4 	bnz s1, 176 <P_GroupLines+0x228>
   2e9d0:	7e 33 02 88 	store_32 s27, 140(sp)
   2e9d4:	3e e0 01 a8 	load_32 s1, 120(sp)
   2e9d8:	61 03 00 a8 	load_32 s27, (s1)
   2e9dc:	3e f3 01 a8 	load_32 s25, 124(sp)
   2e9e0:	3b c0 00 a8 	load_32 s1, 48(s27)
   2e9e4:	21 00 0c c1 	cmpeq_i s1, s1, s24
   2e9e8:	41 01 00 f4 	bnz s1, 40 <P_GroupLines+0x1bc>
   2e9ec:	3b d0 00 a8 	load_32 s1, 52(s27)
   2e9f0:	21 00 1c c1 	cmpne_i s1, s1, s24
   2e9f4:	41 00 00 f4 	bnz s1, 8 <P_GroupLines+0x1a8>
   2e9f8:	06 00 00 f6 	b 24 <P_GroupLines+0x1bc>
   2e9fc:	39 07 00 05 	add_i s25, s25, 1
   2ea00:	7b 03 01 05 	add_i s27, s27, 64
   2ea04:	39 00 40 c1 	cmplt_i s1, s25, s0
   2ea08:	c1 fe ff f5 	bnz s1, -40 <P_GroupLines+0x18c>
   2ea0c:	18 00 00 f6 	b 96 <P_GroupLines+0x218>
   2ea10:	7a 03 00 88 	store_32 s27, (s26)
   2ea14:	3a 10 00 05 	add_i s1, s26, 4
   2ea18:	1b 00 00 a8 	load_32 s0, (s27)
   2ea1c:	3e 60 02 88 	store_32 s1, 152(sp)
   2ea20:	20 00 00 a8 	load_32 s1, (s0)
   2ea24:	40 10 00 a8 	load_32 s2, 4(s0)
   2ea28:	40 03 fc c0 	move s26, s24
   2ea2c:	1e 43 02 a8 	load_32 s24, 144(sp)
   2ea30:	00 00 fc c0 	move s0, s24
   2ea34:	2a b5 ff f9 	call -76632 <M_AddToBox>
   2ea38:	1b 10 00 a8 	load_32 s0, 4(s27)
   2ea3c:	20 00 00 a8 	load_32 s1, (s0)
   2ea40:	40 10 00 a8 	load_32 s2, 4(s0)
   2ea44:	00 00 fc c0 	move s0, s24
   2ea48:	00 03 fd c0 	move s24, s26
   2ea4c:	24 b5 ff f9 	call -76656 <M_AddToBox>
   2ea50:	1e 50 02 a8 	load_32 s0, 148(sp)
   2ea54:	00 00 00 a8 	load_32 s0, (s0)
   2ea58:	5e 63 02 a8 	load_32 s26, 152(sp)
   2ea5c:	39 07 00 05 	add_i s25, s25, 1
   2ea60:	7b 03 01 05 	add_i s27, s27, 64
   2ea64:	39 00 40 c1 	cmplt_i s1, s25, s0
   2ea68:	c1 fb ff f5 	bnz s1, -136 <P_GroupLines+0x18c>
   2ea6c:	18 50 01 a8 	load_32 s0, 84(s24)
   2ea70:	3e d3 01 a8 	load_32 s25, 116(sp)
   2ea74:	7e 33 02 a8 	load_32 s27, 140(sp)
   2ea78:	02 00 00 f6 	b 8 <P_GroupLines+0x22c>
   2ea7c:	00 00 fd c0 	move s0, s26
   2ea80:	1a 00 60 c0 	sub_i s0, s26, s0
   2ea84:	38 40 01 a8 	load_32 s1, 80(s24)
   2ea88:	00 08 00 09 	ashr s0, s0, 2
   2ea8c:	00 80 00 c1 	cmpeq_i s0, s0, s1
   2ea90:	a0 00 00 f4 	bnz s0, 20 <P_GroupLines+0x250>
   2ea94:	01 00 00 4f 	movehi s0, 1
   2ea98:	00 b0 05 00 	or s0, s0, 364
   2ea9c:	1e 00 00 88 	store_32 s0, (sp)
   2eaa0:	99 7d ff f9 	call -133532 <I_Error>
   2eaa4:	3e a0 02 a8 	load_32 s1, 168(sp)
   2eaa8:	1e 90 02 a8 	load_32 s0, 164(sp)
   2eaac:	40 80 50 c0 	add_i s2, s0, s1
   2eab0:	62 7c 00 0a 	shr s3, s2, 31
   2eab4:	42 80 51 c0 	add_i s2, s2, s3
   2eab8:	42 04 00 09 	ashr s2, s2, 1
   2eabc:	58 e0 00 88 	store_32 s2, 56(s24)
   2eac0:	7e 70 02 a8 	load_32 s3, 156(sp)
   2eac4:	5e 80 02 a8 	load_32 s2, 160(sp)
   2eac8:	82 80 51 c0 	add_i s4, s2, s3
   2eacc:	63 80 5c c0 	add_i s3, s3, s25
   2ead0:	a4 7c 00 0a 	shr s5, s4, 31
   2ead4:	84 80 52 c0 	add_i s4, s4, s5
   2ead8:	84 04 00 09 	ashr s4, s4, 1
   2eadc:	98 f0 00 88 	store_32 s4, 60(s24)
   2eae0:	9e 10 02 a8 	load_32 s4, 132(sp)
   2eae4:	84 00 00 a8 	load_32 s4, (s4)
   2eae8:	a3 00 62 c0 	sub_i s5, s3, s4
   2eaec:	7e 00 02 a8 	load_32 s3, 128(sp)
   2eaf0:	a5 5c 00 09 	ashr s5, s5, 23
   2eaf4:	63 00 00 a8 	load_32 s3, (s3)
   2eaf8:	c5 80 41 c1 	cmplt_i s6, s5, s3
   2eafc:	46 00 00 f4 	bnz s6, 8 <P_GroupLines+0x2b0>
   2eb00:	a3 fc ff 05 	add_i s5, s3, -1
   2eb04:	60 e0 ff 4f 	movehi s3, 524032
   2eb08:	b8 70 00 88 	store_32 s5, 28(s24)
   2eb0c:	42 80 51 c0 	add_i s2, s2, s3
   2eb10:	42 00 62 c0 	sub_i s2, s2, s4
   2eb14:	82 5c 00 09 	ashr s4, s2, 23
   2eb18:	40 00 00 0f 	move s2, 0
   2eb1c:	a4 00 00 12 	cmpgt_i s5, s4, 0
   2eb20:	45 00 00 f4 	bnz s5, 8 <P_GroupLines+0x2d4>
   2eb24:	80 00 f1 c0 	move s4, s2
   2eb28:	bb 04 00 4f 	movehi s5, 59
   2eb2c:	98 80 00 88 	store_32 s4, 32(s24)
   2eb30:	21 80 5c c0 	add_i s1, s1, s25
   2eb34:	a5 70 48 00 	or s5, s5, 4636
   2eb38:	85 00 00 a8 	load_32 s4, (s5)
   2eb3c:	bb 04 00 4f 	movehi s5, 59
   2eb40:	a5 90 48 00 	or s5, s5, 4644
   2eb44:	21 00 62 c0 	sub_i s1, s1, s4
   2eb48:	a5 00 00 a8 	load_32 s5, (s5)
   2eb4c:	21 5c 00 09 	ashr s1, s1, 23
   2eb50:	c1 80 42 c1 	cmplt_i s6, s1, s5
   2eb54:	46 00 00 f4 	bnz s6, 8 <P_GroupLines+0x308>
   2eb58:	25 fc ff 05 	add_i s1, s5, -1
   2eb5c:	00 80 51 c0 	add_i s0, s0, s3
   2eb60:	38 a0 00 88 	store_32 s1, 40(s24)
   2eb64:	00 00 62 c0 	sub_i s0, s0, s4
   2eb68:	00 5c 00 09 	ashr s0, s0, 23
   2eb6c:	60 00 00 12 	cmpgt_i s3, s0, 0
   2eb70:	43 00 00 f4 	bnz s3, 8 <P_GroupLines+0x324>
   2eb74:	00 00 f1 c0 	move s0, s2
   2eb78:	18 90 00 88 	store_32 s0, 36(s24)
   2eb7c:	7b 07 00 05 	add_i s27, s27, 1
   2eb80:	1e 20 02 a8 	load_32 s0, 136(sp)
   2eb84:	18 63 01 05 	add_i s24, s24, 88
   2eb88:	00 00 00 a8 	load_32 s0, (s0)
   2eb8c:	1b 00 40 c1 	cmplt_i s0, s27, s0
   2eb90:	20 f1 ff f5 	bnz s0, -476 <P_GroupLines+0x160>
   2eb94:	fe b3 02 a8 	load_32 ra, 172(sp)
   2eb98:	7e c3 02 a8 	load_32 s27, 176(sp)
   2eb9c:	5e d3 02 a8 	load_32 s26, 180(sp)
   2eba0:	3e e3 02 a8 	load_32 s25, 184(sp)
   2eba4:	1e f3 02 a8 	load_32 s24, 188(sp)
   2eba8:	de 03 03 05 	add_i sp, sp, 192
   2ebac:	1f 00 00 f0 	ret

000000000002ebb0 P_SetupLevel:
   2ebb0:	de 03 fe 05 	add_i sp, sp, -128
   2ebb4:	1e f3 01 88 	store_32 s24, 124(sp)
   2ebb8:	3e e3 01 88 	store_32 s25, 120(sp)
   2ebbc:	5e d3 01 88 	store_32 s26, 116(sp)
   2ebc0:	7e c3 01 88 	store_32 s27, 112(sp)
   2ebc4:	fe b3 01 88 	store_32 ra, 108(sp)
   2ebc8:	5b 04 00 4f 	movehi s2, 59
   2ebcc:	7b 04 00 4f 	movehi s3, 59
   2ebd0:	9b 04 00 4f 	movehi s4, 59
   2ebd4:	42 40 19 00 	or s2, s2, 1616
   2ebd8:	63 00 19 00 	or s3, s3, 1600
   2ebdc:	bb 04 00 4f 	movehi s5, 59
   2ebe0:	20 03 00 0f 	move s25, 0
   2ebe4:	22 73 00 88 	store_32 s25, 28(s2)
   2ebe8:	23 03 00 88 	store_32 s25, (s3)
   2ebec:	64 e0 18 00 	or s3, s4, 1592
   2ebf0:	85 f0 18 00 	or s4, s5, 1596
   2ebf4:	bb 04 00 4f 	movehi s5, 59
   2ebf8:	23 03 00 88 	store_32 s25, (s3)
   2ebfc:	60 d0 02 0f 	move s3, 180
   2ec00:	24 03 00 88 	store_32 s25, (s4)
   2ec04:	62 80 00 88 	store_32 s3, 32(s2)
   2ec08:	5a 04 00 4f 	movehi s2, 58
   2ec0c:	85 40 02 00 	or s4, s5, 144
   2ec10:	42 c0 6d 00 	or s2, s2, 7024
   2ec14:	24 43 03 88 	store_32 s25, 208(s4)
   2ec18:	24 53 03 88 	store_32 s25, 212(s4)
   2ec1c:	24 33 03 88 	store_32 s25, 204(s4)
   2ec20:	24 a3 07 88 	store_32 s25, 488(s4)
   2ec24:	24 b3 07 88 	store_32 s25, 492(s4)
   2ec28:	24 93 07 88 	store_32 s25, 484(s4)
   2ec2c:	24 03 0c 88 	store_32 s25, 768(s4)
   2ec30:	24 13 0c 88 	store_32 s25, 772(s4)
   2ec34:	24 f3 0b 88 	store_32 s25, 764(s4)
   2ec38:	24 63 10 88 	store_32 s25, 1048(s4)
   2ec3c:	24 73 10 88 	store_32 s25, 1052(s4)
   2ec40:	24 53 10 88 	store_32 s25, 1044(s4)
   2ec44:	42 00 00 a8 	load_32 s2, (s2)
   2ec48:	9e 30 01 88 	store_32 s4, 76(sp)
   2ec4c:	00 83 f0 c0 	move s24, s1
   2ec50:	40 03 f0 c0 	move s26, s0
   2ec54:	00 04 00 0f 	move s0, 1
   2ec58:	42 60 04 07 	mull_i s2, s2, 280
   2ec5c:	44 00 51 c0 	add_i s2, s4, s2
   2ec60:	02 40 00 88 	store_32 s0, 16(s2)
   2ec64:	67 73 00 f8 	call 118172 <S_Start>
   2ec68:	00 c8 00 0f 	move s0, 50
   2ec6c:	20 8c 01 0f 	move s1, 99
   2ec70:	c7 77 00 f8 	call 122652 <Z_FreeTags>
   2ec74:	a4 13 00 f8 	call 20112 <P_InitThinkers>
   2ec78:	f7 3e 00 f8 	call 64476 <W_Reload>
   2ec7c:	0b 04 00 4f 	movehi s0, 43
   2ec80:	00 00 40 00 	or s0, s0, 4096
   2ec84:	1e 70 01 88 	store_32 s0, 92(sp)
   2ec88:	00 00 00 a8 	load_32 s0, (s0)
   2ec8c:	00 08 00 11 	cmpne_i s0, s0, 2
   2ec90:	20 01 00 f4 	bnz s0, 36 <P_SetupLevel+0x104>
   2ec94:	18 24 00 12 	cmpgt_i s0, s24, 9
   2ec98:	20 02 00 f4 	bnz s0, 68 <P_SetupLevel+0x12c>
   2ec9c:	01 00 00 4f 	movehi s0, 1
   2eca0:	1e 23 00 88 	store_32 s24, 8(sp)
   2eca4:	3e 8c 01 05 	add_i s1, sp, 99
   2eca8:	3e 00 00 88 	store_32 s1, (sp)
   2ecac:	00 34 56 00 	or s0, s0, 5517
   2ecb0:	10 00 00 f6 	b 64 <P_SetupLevel+0x140>
   2ecb4:	00 14 01 0f 	move s0, 69
   2ecb8:	1e 8c 01 82 	store_8 s0, 99(sp)
   2ecbc:	1a c0 00 05 	add_i s0, s26, 48
   2ecc0:	1e 90 01 82 	store_8 s0, 100(sp)
   2ecc4:	00 34 01 0f 	move s0, 77
   2ecc8:	1e 94 01 82 	store_8 s0, 101(sp)
   2eccc:	18 c0 00 05 	add_i s0, s24, 48
   2ecd0:	1e 98 01 82 	store_8 s0, 102(sp)
   2ecd4:	3e 9f 01 82 	store_8 s25, 103(sp)
   2ecd8:	08 00 00 f6 	b 32 <P_SetupLevel+0x148>
   2ecdc:	03 00 00 4f 	movehi s0, 3
   2ece0:	1e 23 00 88 	store_32 s24, 8(sp)
   2ece4:	3e 8c 01 05 	add_i s1, sp, 99
   2ece8:	3e 00 00 88 	store_32 s1, (sp)
   2ecec:	00 2c 09 00 	or s0, s0, 587
   2ecf0:	1e 10 00 88 	store_32 s0, 4(sp)
   2ecf4:	45 8c 00 f8 	call 143636 <sprintf>
   2ecf8:	1e 8c 01 05 	add_i s0, sp, 99
   2ecfc:	be 3f 00 f8 	call 65272 <W_GetNumForName>
   2ed00:	3c 04 00 4f 	movehi s1, 60
   2ed04:	1e 60 01 88 	store_32 s0, 88(sp)
   2ed08:	60 2b 00 05 	add_i s27, s0, 10
   2ed0c:	40 cb 00 0f 	move s26, 50
   2ed10:	21 40 02 00 	or s1, s1, 144
   2ed14:	21 03 00 88 	store_32 s25, (s1)
   2ed18:	00 80 fd c0 	move s0, s27
   2ed1c:	20 00 fd c0 	move s1, s26
   2ed20:	3e 40 00 f8 	call 65784 <W_CacheLumpNum>
   2ed24:	3b 04 00 4f 	movehi s1, 59
   2ed28:	5b 04 00 4f 	movehi s2, 59
   2ed2c:	01 53 48 00 	or s24, s1, 4628
   2ed30:	22 40 48 00 	or s1, s2, 4624
   2ed34:	18 00 00 88 	store_32 s0, (s24)
   2ed38:	00 20 00 05 	add_i s0, s0, 8
   2ed3c:	01 00 00 88 	store_32 s0, (s1)
   2ed40:	00 80 fd c0 	move s0, s27
   2ed44:	d5 3f 00 f8 	call 65364 <W_LumpLength>
   2ed48:	18 00 00 a8 	load_32 s0, (s24)
   2ed4c:	3b 04 00 4f 	movehi s1, 59
   2ed50:	7b 04 00 4f 	movehi s3, 59
   2ed54:	21 70 48 00 	or s1, s1, 4636
   2ed58:	40 00 00 a6 	load_s16 s2, (s0)
   2ed5c:	63 90 48 00 	or s3, s3, 4644
   2ed60:	42 40 00 0b 	shl s2, s2, 16
   2ed64:	41 00 00 88 	store_32 s2, (s1)
   2ed68:	5b 04 00 4f 	movehi s2, 59
   2ed6c:	20 08 00 a6 	load_s16 s1, 2(s0)
   2ed70:	42 80 48 00 	or s2, s2, 4640
   2ed74:	21 40 00 0b 	shl s1, s1, 16
   2ed78:	22 00 00 88 	store_32 s1, (s2)
   2ed7c:	5b 04 00 4f 	movehi s2, 59
   2ed80:	20 10 00 a6 	load_s16 s1, 4(s0)
   2ed84:	23 00 00 88 	store_32 s1, (s3)
   2ed88:	00 18 00 a6 	load_s16 s0, 6(s0)
   2ed8c:	42 60 48 00 	or s2, s2, 4632
   2ed90:	02 00 00 88 	store_32 s0, (s2)
   2ed94:	21 00 70 c0 	mull_i s1, s1, s0
   2ed98:	61 0b 00 0b 	shl s27, s1, 2
   2ed9c:	00 80 fd c0 	move s0, s27
   2eda0:	20 00 fd c0 	move s1, s26
   2eda4:	40 80 fc c0 	move s2, s25
   2eda8:	cc 76 00 f8 	call 121648 <Z_Malloc>
   2edac:	3b 04 00 4f 	movehi s1, 59
   2edb0:	21 30 48 00 	or s1, s1, 4620
   2edb4:	01 00 00 88 	store_32 s0, (s1)
   2edb8:	20 80 fc c0 	move s1, s25
   2edbc:	40 80 fd c0 	move s2, s27
   2edc0:	39 8b 00 f8 	call 142564 <memset>
   2edc4:	1e 60 01 a8 	load_32 s0, 88(sp)
   2edc8:	60 13 00 05 	add_i s27, s0, 4
   2edcc:	00 80 fd c0 	move s0, s27
   2edd0:	b2 3f 00 f8 	call 65224 <W_LumpLength>
   2edd4:	3b 04 00 4f 	movehi s1, 59
   2edd8:	00 08 00 0a 	shr s0, s0, 2
   2eddc:	01 c3 4a 00 	or s24, s1, 4784
   2ede0:	18 00 00 88 	store_32 s0, (s24)
   2ede4:	20 00 fd c0 	move s1, s26
   2ede8:	00 0c 00 0b 	shl s0, s0, 3
   2edec:	40 80 fc c0 	move s2, s25
   2edf0:	ba 76 00 f8 	call 121576 <Z_Malloc>
   2edf4:	3b 04 00 4f 	movehi s1, 59
   2edf8:	41 c3 4b 00 	or s26, s1, 4848
   2edfc:	20 04 00 0f 	move s1, 1
   2ee00:	1a 00 00 88 	store_32 s0, (s26)
   2ee04:	00 80 fd c0 	move s0, s27
   2ee08:	04 40 00 f8 	call 65552 <W_CacheLumpNum>
   2ee0c:	38 00 00 a8 	load_32 s1, (s24)
   2ee10:	21 04 00 14 	cmplt_i s1, s1, 1
   2ee14:	e1 01 00 f4 	bnz s1, 60 <P_SetupLevel+0x2a0>
   2ee18:	3a 00 00 a8 	load_32 s1, (s26)
   2ee1c:	40 00 f0 c0 	move s2, s0
   2ee20:	62 00 00 a6 	load_s16 s3, (s2)
   2ee24:	39 07 00 05 	add_i s25, s25, 1
   2ee28:	63 40 00 0b 	shl s3, s3, 16
   2ee2c:	61 00 00 88 	store_32 s3, (s1)
   2ee30:	62 08 00 a6 	load_s16 s3, 2(s2)
   2ee34:	42 10 00 05 	add_i s2, s2, 4
   2ee38:	63 40 00 0b 	shl s3, s3, 16
   2ee3c:	61 10 00 88 	store_32 s3, 4(s1)
   2ee40:	78 00 00 a8 	load_32 s3, (s24)
   2ee44:	21 20 00 05 	add_i s1, s1, 8
   2ee48:	79 80 41 c1 	cmplt_i s3, s25, s3
   2ee4c:	a3 fe ff f5 	bnz s3, -44 <P_SetupLevel+0x270>
   2ee50:	59 76 00 f8 	call 121188 <Z_Free>
   2ee54:	1e 63 01 a8 	load_32 s24, 88(sp)
   2ee58:	18 20 00 05 	add_i s0, s24, 8
   2ee5c:	80 fc ff f9 	call -3584 <P_LoadSectors>
   2ee60:	18 0c 00 05 	add_i s0, s24, 3
   2ee64:	f8 fd ff f9 	call -2080 <P_LoadSideDefs>
   2ee68:	18 08 00 05 	add_i s0, s24, 2
   2ee6c:	4f fd ff f9 	call -2756 <P_LoadLineDefs>
   2ee70:	78 1b 00 05 	add_i s27, s24, 6
   2ee74:	00 80 fd c0 	move s0, s27
   2ee78:	88 3f 00 f8 	call 65056 <W_LumpLength>
   2ee7c:	3b 04 00 4f 	movehi s1, 59
   2ee80:	00 08 00 0a 	shr s0, s0, 2
   2ee84:	40 03 00 0f 	move s26, 0
   2ee88:	21 b3 4a 00 	or s25, s1, 4780
   2ee8c:	20 c8 00 0f 	move s1, 50
   2ee90:	19 00 00 88 	store_32 s0, (s25)
   2ee94:	00 0c 00 0b 	shl s0, s0, 3
   2ee98:	40 00 fd c0 	move s2, s26
   2ee9c:	8f 76 00 f8 	call 121404 <Z_Malloc>
   2eea0:	3b 04 00 4f 	movehi s1, 59
   2eea4:	01 b3 4b 00 	or s24, s1, 4844
   2eea8:	20 04 00 0f 	move s1, 1
   2eeac:	18 00 00 88 	store_32 s0, (s24)
   2eeb0:	00 80 fd c0 	move s0, s27
   2eeb4:	d9 3f 00 f8 	call 65380 <W_CacheLumpNum>
   2eeb8:	38 00 00 a8 	load_32 s1, (s24)
   2eebc:	59 00 00 a8 	load_32 s2, (s25)
   2eec0:	60 03 f0 c0 	move s27, s0
   2eec4:	00 80 f0 c0 	move s0, s1
   2eec8:	5e 53 01 88 	store_32 s26, 84(sp)
   2eecc:	42 0c 00 0b 	shl s2, s2, 3
   2eed0:	20 00 fd c0 	move s1, s26
   2eed4:	f4 8a 00 f8 	call 142288 <memset>
   2eed8:	b9 00 00 a8 	load_32 s5, (s25)
   2eedc:	25 04 00 14 	cmplt_i s1, s5, 1
   2eee0:	a1 01 00 f4 	bnz s1, 52 <P_SetupLevel+0x364>
   2eee4:	38 00 00 a8 	load_32 s1, (s24)
   2eee8:	40 00 00 0f 	move s2, 0
   2eeec:	60 80 fd c0 	move s3, s27
   2eef0:	83 00 00 a6 	load_s16 s4, (s3)
   2eef4:	42 04 00 05 	add_i s2, s2, 1
   2eef8:	81 10 00 86 	store_16 s4, 4(s1)
   2eefc:	83 08 00 a6 	load_s16 s4, 2(s3)
   2ef00:	63 10 00 05 	add_i s3, s3, 4
   2ef04:	81 18 00 86 	store_16 s4, 6(s1)
   2ef08:	21 20 00 05 	add_i s1, s1, 8
   2ef0c:	82 80 42 c1 	cmplt_i s4, s2, s5
   2ef10:	04 ff ff f5 	bnz s4, -32 <P_SetupLevel+0x340>
   2ef14:	00 80 fd c0 	move s0, s27
   2ef18:	27 76 00 f8 	call 120988 <Z_Free>
   2ef1c:	1e 63 01 a8 	load_32 s24, 88(sp)
   2ef20:	18 1c 00 05 	add_i s0, s24, 7
   2ef24:	97 fc ff f9 	call -3492 <P_LoadNodes>
   2ef28:	18 14 00 05 	add_i s0, s24, 5
   2ef2c:	b5 fb ff f9 	call -4396 <P_LoadSegs>
   2ef30:	18 24 00 05 	add_i s0, s24, 9
   2ef34:	20 c8 00 0f 	move s1, 50
   2ef38:	b8 3f 00 f8 	call 65248 <W_CacheLumpNum>
   2ef3c:	3b 04 00 4f 	movehi s1, 59
   2ef40:	21 70 4b 00 	or s1, s1, 4828
   2ef44:	01 00 00 88 	store_32 s0, (s1)
   2ef48:	43 fe ff f9 	call -1780 <P_GroupLines>
   2ef4c:	1a 04 00 4f 	movehi s0, 58
   2ef50:	7e 50 01 a8 	load_32 s3, 84(sp)
   2ef54:	3b 04 00 4f 	movehi s1, 59
   2ef58:	5b 04 00 4f 	movehi s2, 59
   2ef5c:	00 30 6c 00 	or s0, s0, 6924
   2ef60:	78 07 00 05 	add_i s27, s24, 1
   2ef64:	21 a0 48 00 	or s1, s1, 4648
   2ef68:	00 07 00 0f 	move s24, 1
   2ef6c:	60 00 00 88 	store_32 s3, (s0)
   2ef70:	02 b0 48 00 	or s0, s2, 4652
   2ef74:	01 00 00 88 	store_32 s0, (s1)
   2ef78:	00 80 fd c0 	move s0, s27
   2ef7c:	20 00 fc c0 	move s1, s24
   2ef80:	a6 3f 00 f8 	call 65176 <W_CacheLumpNum>
   2ef84:	1e 40 01 88 	store_32 s0, 80(sp)
   2ef88:	00 80 fd c0 	move s0, s27
   2ef8c:	43 3f 00 f8 	call 64780 <W_LumpLength>
   2ef90:	20 28 00 18 	cmplt_u s1, s0, 10
   2ef94:	81 03 00 f4 	bnz s1, 112 <P_SetupLevel+0x454>
   2ef98:	26 cc cc 4f 	movehi s1, 419430
   2ef9c:	21 34 33 00 	or s1, s1, 3277
   2efa0:	00 80 80 c0 	mulh_u s0, s0, s1
   2efa4:	20 10 03 4f 	movehi s1, 6272
   2efa8:	40 0f 00 0a 	shr s26, s0, 3
   2efac:	01 fc 02 00 	or s0, s1, 191
   2efb0:	1e 60 01 88 	store_32 s0, 88(sp)
   2efb4:	3e 53 01 a8 	load_32 s25, 84(sp)
   2efb8:	7e 43 01 a8 	load_32 s27, 80(sp)
   2efbc:	1e 70 01 a8 	load_32 s0, 92(sp)
   2efc0:	00 00 00 a8 	load_32 s0, (s0)
   2efc4:	00 08 00 10 	cmpeq_i s0, s0, 2
   2efc8:	20 01 00 f4 	bnz s0, 36 <P_SetupLevel+0x43c>
   2efcc:	1b 18 00 a6 	load_s16 s0, 6(s27)
   2efd0:	00 00 ff 05 	add_i s0, s0, -64
   2efd4:	20 64 00 16 	cmpgt_u s1, s0, 25
   2efd8:	a1 00 00 f4 	bnz s1, 20 <P_SetupLevel+0x43c>
   2efdc:	3e 60 01 a8 	load_32 s1, 88(sp)
   2efe0:	18 00 b0 c0 	shl s0, s24, s0
   2efe4:	00 80 10 c0 	and s0, s0, s1
   2efe8:	e0 00 00 f4 	bnz s0, 28 <P_SetupLevel+0x454>
   2efec:	00 80 fd c0 	move s0, s27
   2eff0:	23 10 00 f8 	call 16524 <P_SpawnMapThing>
   2eff4:	39 07 00 05 	add_i s25, s25, 1
   2eff8:	7b 2b 00 05 	add_i s27, s27, 10
   2effc:	19 00 8d c1 	cmplt_u s0, s25, s26
   2f000:	e0 fd ff f5 	bnz s0, -68 <P_SetupLevel+0x40c>
   2f004:	1e 40 01 a8 	load_32 s0, 80(sp)
   2f008:	eb 75 00 f8 	call 120748 <Z_Free>
   2f00c:	1a 04 00 4f 	movehi s0, 58
   2f010:	00 60 6e 00 	or s0, s0, 7064
   2f014:	00 00 00 a8 	load_32 s0, (s0)
   2f018:	3e 33 01 a8 	load_32 s25, 76(sp)
   2f01c:	5e 53 01 a8 	load_32 s26, 84(sp)
   2f020:	e0 02 00 f2 	bz s0, 92 <P_SetupLevel+0x4cc>
   2f024:	1b 04 00 4f 	movehi s0, 59
   2f028:	00 03 02 00 	or s24, s0, 128
   2f02c:	18 00 00 a8 	load_32 s0, (s24)
   2f030:	80 00 00 f2 	bz s0, 16 <P_SetupLevel+0x490>
   2f034:	59 03 00 88 	store_32 s26, (s25)
   2f038:	00 00 fd c0 	move s0, s26
   2f03c:	16 9f ff f9 	call -99240 <G_DeathMatchSpawnPlayer>
   2f040:	18 10 00 a8 	load_32 s0, 4(s24)
   2f044:	80 00 00 f2 	bz s0, 16 <P_SetupLevel+0x4a4>
   2f048:	00 04 00 0f 	move s0, 1
   2f04c:	59 63 04 88 	store_32 s26, 280(s25)
   2f050:	11 9f ff f9 	call -99260 <G_DeathMatchSpawnPlayer>
   2f054:	18 20 00 a8 	load_32 s0, 8(s24)
   2f058:	80 00 00 f2 	bz s0, 16 <P_SetupLevel+0x4b8>
   2f05c:	00 08 00 0f 	move s0, 2
   2f060:	59 c3 08 88 	store_32 s26, 560(s25)
   2f064:	0c 9f ff f9 	call -99280 <G_DeathMatchSpawnPlayer>
   2f068:	18 30 00 a8 	load_32 s0, 12(s24)
   2f06c:	80 00 00 f2 	bz s0, 16 <P_SetupLevel+0x4cc>
   2f070:	00 0c 00 0f 	move s0, 3
   2f074:	59 23 0d 88 	store_32 s26, 840(s25)
   2f078:	07 9f ff f9 	call -99300 <G_DeathMatchSpawnPlayer>
   2f07c:	1b 04 00 4f 	movehi s0, 59
   2f080:	3b 04 00 4f 	movehi s1, 59
   2f084:	00 20 66 00 	or s0, s0, 6536
   2f088:	21 10 66 00 	or s1, s1, 6532
   2f08c:	40 03 00 88 	store_32 s26, (s0)
   2f090:	41 03 00 88 	store_32 s26, (s1)
   2f094:	97 07 00 f8 	call 7772 <P_SpawnSpecials>
   2f098:	13 04 00 4f 	movehi s0, 51
   2f09c:	00 d0 48 00 	or s0, s0, 4660
   2f0a0:	00 00 00 a8 	load_32 s0, (s0)
   2f0a4:	40 00 00 f2 	bz s0, 8 <P_SetupLevel+0x4fc>
   2f0a8:	2d 22 00 f8 	call 34996 <R_PrecacheLevel>
   2f0ac:	fe b3 01 a8 	load_32 ra, 108(sp)
   2f0b0:	7e c3 01 a8 	load_32 s27, 112(sp)
   2f0b4:	5e d3 01 a8 	load_32 s26, 116(sp)
   2f0b8:	3e e3 01 a8 	load_32 s25, 120(sp)
   2f0bc:	1e f3 01 a8 	load_32 s24, 124(sp)
   2f0c0:	de 03 02 05 	add_i sp, sp, 128
   2f0c4:	1f 00 00 f0 	ret

000000000002f0c8 P_Init:
   2f0c8:	de 03 ff 05 	add_i sp, sp, -64
   2f0cc:	fe f3 00 88 	store_32 ra, 60(sp)
   2f0d0:	3d 08 00 f8 	call 8436 <P_InitSwitchList>
   2f0d4:	18 03 00 f8 	call 3168 <P_InitPicAnims>
   2f0d8:	14 04 00 4f 	movehi s0, 52
   2f0dc:	00 80 53 00 	or s0, s0, 5344
   2f0e0:	11 37 00 f8 	call 56388 <R_InitSprites>
   2f0e4:	fe f3 00 a8 	load_32 ra, 60(sp)
   2f0e8:	de 03 01 05 	add_i sp, sp, 64
   2f0ec:	1f 00 00 f0 	ret

000000000002f0f0 P_DivlineSide:
   2f0f0:	62 20 00 a8 	load_32 s3, 8(s2)
   2f0f4:	43 00 00 f4 	bnz s3, 8 <P_DivlineSide+0xc>
   2f0f8:	13 00 00 f6 	b 76 <P_DivlineSide+0x54>
   2f0fc:	82 30 00 a8 	load_32 s4, 12(s2)
   2f100:	44 00 00 f4 	bnz s4, 8 <P_DivlineSide+0x18>
   2f104:	16 00 00 f6 	b 88 <P_DivlineSide+0x6c>
   2f108:	a2 00 00 a8 	load_32 s5, (s2)
   2f10c:	42 10 00 a8 	load_32 s2, 4(s2)
   2f110:	00 80 62 c0 	sub_i s0, s0, s5
   2f114:	21 00 61 c0 	sub_i s1, s1, s2
   2f118:	40 40 00 09 	ashr s2, s0, 16
   2f11c:	21 40 00 09 	ashr s1, s1, 16
   2f120:	03 40 00 09 	ashr s0, s3, 16
   2f124:	01 00 70 c0 	mull_i s0, s1, s0
   2f128:	24 40 00 09 	ashr s1, s4, 16
   2f12c:	22 80 70 c0 	mull_i s1, s2, s1
   2f130:	40 80 40 c1 	cmplt_i s2, s0, s1
   2f134:	42 00 00 f4 	bnz s2, 8 <P_DivlineSide+0x4c>
   2f138:	0f 00 00 f6 	b 60 <P_DivlineSide+0x84>
   2f13c:	00 00 00 0f 	move s0, 0
   2f140:	1f 00 00 f0 	ret
   2f144:	22 00 00 a8 	load_32 s1, (s2)
   2f148:	61 00 00 c1 	cmpeq_i s3, s1, s0
   2f14c:	43 00 00 f4 	bnz s3, 8 <P_DivlineSide+0x64>
   2f150:	0d 00 00 f6 	b 52 <P_DivlineSide+0x94>
   2f154:	00 08 00 0f 	move s0, 2
   2f158:	1f 00 00 f0 	ret
   2f15c:	42 10 00 a8 	load_32 s2, 4(s2)
   2f160:	02 00 00 c1 	cmpeq_i s0, s2, s0
   2f164:	40 00 00 f4 	bnz s0, 8 <P_DivlineSide+0x7c>
   2f168:	0d 00 00 f6 	b 52 <P_DivlineSide+0xac>
   2f16c:	00 08 00 0f 	move s0, 2
   2f170:	1f 00 00 f0 	ret
   2f174:	01 00 00 c1 	cmpeq_i s0, s1, s0
   2f178:	e0 01 00 f4 	bnz s0, 60 <P_DivlineSide+0xc4>
   2f17c:	00 04 00 0f 	move s0, 1
   2f180:	1f 00 00 f0 	ret
   2f184:	21 00 40 c1 	cmplt_i s1, s1, s0
   2f188:	02 30 00 a8 	load_32 s0, 12(s2)
   2f18c:	41 00 00 f4 	bnz s1, 8 <P_DivlineSide+0xa4>
   2f190:	0b 00 00 f6 	b 44 <P_DivlineSide+0xcc>
   2f194:	00 7c 00 0a 	shr s0, s0, 31
   2f198:	1f 00 00 f0 	ret
   2f19c:	02 80 40 c1 	cmplt_i s0, s2, s1
   2f1a0:	40 00 00 f4 	bnz s0, 8 <P_DivlineSide+0xb8>
   2f1a4:	09 00 00 f6 	b 36 <P_DivlineSide+0xd8>
   2f1a8:	03 00 00 12 	cmpgt_i s0, s3, 0
   2f1ac:	00 04 00 01 	and s0, s0, 1
   2f1b0:	1f 00 00 f0 	ret
   2f1b4:	00 08 00 0f 	move s0, 2
   2f1b8:	1f 00 00 f0 	ret
   2f1bc:	00 00 00 12 	cmpgt_i s0, s0, 0
   2f1c0:	00 04 00 01 	and s0, s0, 1
   2f1c4:	1f 00 00 f0 	ret
   2f1c8:	03 7c 00 0a 	shr s0, s3, 31
   2f1cc:	1f 00 00 f0 	ret

000000000002f1d0 P_InterceptVector2:
   2f1d0:	de 03 ff 05 	add_i sp, sp, -64
   2f1d4:	1e f3 00 88 	store_32 s24, 60(sp)
   2f1d8:	3e e3 00 88 	store_32 s25, 56(sp)
   2f1dc:	5e d3 00 88 	store_32 s26, 52(sp)
   2f1e0:	fe c3 00 88 	store_32 ra, 48(sp)
   2f1e4:	00 83 f0 c0 	move s24, s1
   2f1e8:	38 30 00 a8 	load_32 s1, 12(s24)
   2f1ec:	20 03 f0 c0 	move s25, s0
   2f1f0:	01 20 00 09 	ashr s0, s1, 8
   2f1f4:	39 20 00 a8 	load_32 s1, 8(s25)
   2f1f8:	4f b3 ff f9 	call -78532 <FixedMul>
   2f1fc:	38 20 00 a8 	load_32 s1, 8(s24)
   2f200:	40 03 f0 c0 	move s26, s0
   2f204:	01 20 00 09 	ashr s0, s1, 8
   2f208:	39 30 00 a8 	load_32 s1, 12(s25)
   2f20c:	4a b3 ff f9 	call -78552 <FixedMul>
   2f210:	5a 03 60 c0 	sub_i s26, s26, s0
   2f214:	5a 02 00 f2 	bz s26, 72 <P_InterceptVector2+0x8c>
   2f218:	18 00 00 a8 	load_32 s0, (s24)
   2f21c:	39 00 00 a8 	load_32 s1, (s25)
   2f220:	00 80 60 c0 	sub_i s0, s0, s1
   2f224:	38 30 00 a8 	load_32 s1, 12(s24)
   2f228:	00 20 00 09 	ashr s0, s0, 8
   2f22c:	42 b3 ff f9 	call -78584 <FixedMul>
   2f230:	39 10 00 a8 	load_32 s1, 4(s25)
   2f234:	58 10 00 a8 	load_32 s2, 4(s24)
   2f238:	20 03 f0 c0 	move s25, s0
   2f23c:	21 00 61 c0 	sub_i s1, s1, s2
   2f240:	01 20 00 09 	ashr s0, s1, 8
   2f244:	38 20 00 a8 	load_32 s1, 8(s24)
   2f248:	3b b3 ff f9 	call -78612 <FixedMul>
   2f24c:	00 80 5c c0 	add_i s0, s0, s25
   2f250:	20 00 fd c0 	move s1, s26
   2f254:	3e b3 ff f9 	call -78600 <FixedDiv>
   2f258:	02 00 00 f6 	b 8 <P_InterceptVector2+0x90>
   2f25c:	00 00 00 0f 	move s0, 0
   2f260:	fe c3 00 a8 	load_32 ra, 48(sp)
   2f264:	5e d3 00 a8 	load_32 s26, 52(sp)
   2f268:	3e e3 00 a8 	load_32 s25, 56(sp)
   2f26c:	1e f3 00 a8 	load_32 s24, 60(sp)
   2f270:	de 03 01 05 	add_i sp, sp, 64
   2f274:	1f 00 00 f0 	ret

000000000002f278 P_CrossSubsector:
   2f278:	de 03 fd 05 	add_i sp, sp, -192
   2f27c:	1e f3 02 88 	store_32 s24, 188(sp)
   2f280:	3e e3 02 88 	store_32 s25, 184(sp)
   2f284:	5e d3 02 88 	store_32 s26, 180(sp)
   2f288:	7e c3 02 88 	store_32 s27, 176(sp)
   2f28c:	fe b3 02 88 	store_32 ra, 172(sp)
   2f290:	3b 04 00 4f 	movehi s1, 59
   2f294:	21 b0 4a 00 	or s1, s1, 4780
   2f298:	21 00 00 a8 	load_32 s1, (s1)
   2f29c:	00 03 f0 c0 	move s24, s0
   2f2a0:	01 00 2c c1 	cmpgt_i s0, s1, s24
   2f2a4:	e0 00 00 f4 	bnz s0, 28 <P_CrossSubsector+0x48>
   2f2a8:	02 00 00 4f 	movehi s0, 2
   2f2ac:	3e 20 00 88 	store_32 s1, 8(sp)
   2f2b0:	1e 13 00 88 	store_32 s24, 4(sp)
   2f2b4:	00 64 61 00 	or s0, s0, 6233
   2f2b8:	1e 00 00 88 	store_32 s0, (sp)
   2f2bc:	92 7b ff f9 	call -135608 <I_Error>
   2f2c0:	1b 04 00 4f 	movehi s0, 59
   2f2c4:	38 0c 00 0b 	shl s1, s24, 3
   2f2c8:	00 b0 4b 00 	or s0, s0, 4844
   2f2cc:	00 00 00 a8 	load_32 s0, (s0)
   2f2d0:	00 80 50 c0 	add_i s0, s0, s1
   2f2d4:	20 04 00 0f 	move s1, 1
   2f2d8:	60 13 00 a6 	load_s16 s27, 4(s0)
   2f2dc:	9b 02 00 f2 	bz s27, 80 <P_CrossSubsector+0xb4>
   2f2e0:	3e e0 01 88 	store_32 s1, 120(sp)
   2f2e4:	3b 04 00 4f 	movehi s1, 59
   2f2e8:	54 04 00 4f 	movehi s2, 52
   2f2ec:	80 09 00 0f 	move s12, 2
   2f2f0:	21 90 4b 00 	or s1, s1, 4836
   2f2f4:	62 31 19 00 	or s11, s2, 1612
   2f2f8:	21 00 00 a8 	load_32 s1, (s1)
   2f2fc:	00 18 00 a6 	load_s16 s0, 6(s0)
   2f300:	7e 51 02 88 	store_32 s11, 148(sp)
   2f304:	9e 41 02 88 	store_32 s12, 144(sp)
   2f308:	00 14 00 0b 	shl s0, s0, 5
   2f30c:	21 03 50 c0 	add_i s25, s1, s0
   2f310:	1b 04 00 4f 	movehi s0, 59
   2f314:	3b 04 00 4f 	movehi s1, 59
   2f318:	00 13 4c 00 	or s24, s0, 4868
   2f31c:	a1 51 4c 00 	or s13, s1, 4884
   2f320:	be 31 02 88 	store_32 s13, 140(sp)
   2f324:	1e 23 02 88 	store_32 s24, 136(sp)
   2f328:	07 00 00 f6 	b 28 <P_CrossSubsector+0xcc>
   2f32c:	00 80 f0 c0 	move s0, s1
   2f330:	75 01 00 f6 	b 1492 <P_CrossSubsector+0x68c>
   2f334:	68 7c 00 0a 	shr s3, s8, 31
   2f338:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f33c:	c2 2d 00 f4 	bnz s2, 1464 <P_CrossSubsector+0x67c>
   2f340:	f4 00 00 f6 	b 976 <P_CrossSubsector+0x498>
   2f344:	19 50 00 a8 	load_32 s0, 20(s25)
   2f348:	40 e0 00 a8 	load_32 s2, 56(s0)
   2f34c:	2b 00 00 a8 	load_32 s1, (s11)
   2f350:	42 80 00 c1 	cmpeq_i s2, s2, s1
   2f354:	02 2d 00 f4 	bnz s2, 1440 <P_CrossSubsector+0x67c>
   2f358:	20 e0 00 88 	store_32 s1, 56(s0)
   2f35c:	20 00 00 a8 	load_32 s1, (s0)
   2f360:	a0 10 00 a8 	load_32 s5, 4(s0)
   2f364:	41 03 00 a8 	load_32 s26, (s1)
   2f368:	c1 11 00 a8 	load_32 s14, 4(s1)
   2f36c:	38 20 00 a8 	load_32 s1, 8(s24)
   2f370:	41 00 00 f4 	bnz s1, 8 <P_CrossSubsector+0x100>
   2f374:	16 00 00 f6 	b 88 <P_CrossSubsector+0x154>
   2f378:	58 30 00 a8 	load_32 s2, 12(s24)
   2f37c:	42 00 00 f4 	bnz s2, 8 <P_CrossSubsector+0x10c>
   2f380:	1d 00 00 f6 	b 116 <P_CrossSubsector+0x17c>
   2f384:	d8 00 00 a8 	load_32 s6, (s24)
   2f388:	e2 40 00 09 	ashr s7, s2, 16
   2f38c:	18 11 00 a8 	load_32 s8, 4(s24)
   2f390:	21 41 00 09 	ashr s9, s1, 16
   2f394:	7a 00 63 c0 	sub_i s3, s26, s6
   2f398:	8e 00 64 c0 	sub_i s4, s14, s8
   2f39c:	63 40 00 09 	ashr s3, s3, 16
   2f3a0:	84 40 00 09 	ashr s4, s4, 16
   2f3a4:	43 80 73 c0 	mull_i s2, s3, s7
   2f3a8:	64 80 74 c0 	mull_i s3, s4, s9
   2f3ac:	82 80 01 c1 	cmpeq_i s4, s2, s3
   2f3b0:	84 03 00 f4 	bnz s4, 112 <P_CrossSubsector+0x1a8>
   2f3b4:	80 04 00 0f 	move s4, 1
   2f3b8:	43 01 41 c1 	cmplt_i s10, s3, s2
   2f3bc:	60 00 00 0f 	move s3, 0
   2f3c0:	40 80 f1 c0 	move s2, s3
   2f3c4:	aa 03 00 f4 	bnz s10, 116 <P_CrossSubsector+0x1c0>
   2f3c8:	1b 00 00 f6 	b 108 <P_CrossSubsector+0x1bc>
   2f3cc:	78 00 00 a8 	load_32 s3, (s24)
   2f3d0:	40 00 f6 c0 	move s2, s12
   2f3d4:	83 00 0d c1 	cmpeq_i s4, s3, s26
   2f3d8:	64 10 00 f4 	bnz s4, 524 <P_CrossSubsector+0x36c>
   2f3dc:	58 30 00 a8 	load_32 s2, 12(s24)
   2f3e0:	83 00 4d c1 	cmplt_i s4, s3, s26
   2f3e4:	44 00 00 f4 	bnz s4, 8 <P_CrossSubsector+0x174>
   2f3e8:	7d 00 00 f6 	b 500 <P_CrossSubsector+0x364>
   2f3ec:	42 7c 00 0a 	shr s2, s2, 31
   2f3f0:	7d 00 00 f6 	b 500 <P_CrossSubsector+0x36c>
   2f3f4:	98 10 00 a8 	load_32 s4, 4(s24)
   2f3f8:	60 08 00 0f 	move s3, 2
   2f3fc:	c0 00 fd c0 	move s6, s26
   2f400:	40 80 f1 c0 	move s2, s3
   2f404:	e4 00 0d c1 	cmpeq_i s7, s4, s26
   2f408:	27 12 00 f4 	bnz s7, 580 <P_CrossSubsector+0x3d4>
   2f40c:	44 00 47 c1 	cmplt_i s2, s4, s14
   2f410:	82 11 00 f4 	bnz s2, 560 <P_CrossSubsector+0x3c8>
   2f414:	41 7c 00 0a 	shr s2, s1, 31
   2f418:	c0 00 f2 c0 	move s6, s4
   2f41c:	8c 00 00 f6 	b 560 <P_CrossSubsector+0x3d4>
   2f420:	80 08 00 0f 	move s4, 2
   2f424:	43 01 41 c1 	cmplt_i s10, s3, s2
   2f428:	60 00 00 0f 	move s3, 0
   2f42c:	40 80 f1 c0 	move s2, s3
   2f430:	4a 00 00 f4 	bnz s10, 8 <P_CrossSubsector+0x1c0>
   2f434:	40 00 f2 c0 	move s2, s4
   2f438:	85 00 00 a8 	load_32 s4, (s5)
   2f43c:	a5 10 00 a8 	load_32 s5, 4(s5)
   2f440:	c4 00 63 c0 	sub_i s6, s4, s6
   2f444:	05 01 64 c0 	sub_i s8, s5, s8
   2f448:	46 41 00 09 	ashr s10, s6, 16
   2f44c:	08 41 00 09 	ashr s8, s8, 16
   2f450:	ea 80 73 c0 	mull_i s7, s10, s7
   2f454:	c8 80 74 c0 	mull_i s6, s8, s9
   2f458:	06 81 43 c1 	cmplt_i s8, s6, s7
   2f45c:	88 00 00 f4 	bnz s8, 16 <P_CrossSubsector+0x1f4>
   2f460:	67 00 03 c1 	cmpeq_i s3, s7, s6
   2f464:	43 08 00 f4 	bnz s3, 264 <P_CrossSubsector+0x2f4>
   2f468:	60 04 00 0f 	move s3, 1
   2f46c:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f470:	22 24 00 f4 	bnz s2, 1156 <P_CrossSubsector+0x67c>
   2f474:	04 01 6d c0 	sub_i s8, s4, s26
   2f478:	78 00 00 a8 	load_32 s3, (s24)
   2f47c:	98 10 00 a8 	load_32 s4, 4(s24)
   2f480:	25 01 67 c0 	sub_i s9, s5, s14
   2f484:	48 00 00 f4 	bnz s8, 8 <P_CrossSubsector+0x214>
   2f488:	13 00 00 f6 	b 76 <P_CrossSubsector+0x25c>
   2f48c:	49 00 00 f4 	bnz s9, 8 <P_CrossSubsector+0x21c>
   2f490:	20 00 00 f6 	b 128 <P_CrossSubsector+0x298>
   2f494:	43 00 6d c0 	sub_i s2, s3, s26
   2f498:	64 00 67 c0 	sub_i s3, s4, s14
   2f49c:	89 40 00 09 	ashr s4, s9, 16
   2f4a0:	42 40 00 09 	ashr s2, s2, 16
   2f4a4:	63 40 00 09 	ashr s3, s3, 16
   2f4a8:	a8 40 00 09 	ashr s5, s8, 16
   2f4ac:	42 00 72 c0 	mull_i s2, s2, s4
   2f4b0:	63 80 72 c0 	mull_i s3, s3, s5
   2f4b4:	c2 80 01 c1 	cmpeq_i s6, s2, s3
   2f4b8:	26 06 00 f4 	bnz s6, 196 <P_CrossSubsector+0x304>
   2f4bc:	c0 04 00 0f 	move s6, 1
   2f4c0:	e3 00 41 c1 	cmplt_i s7, s3, s2
   2f4c4:	60 00 00 0f 	move s3, 0
   2f4c8:	40 80 f1 c0 	move s2, s3
   2f4cc:	47 06 00 f4 	bnz s7, 200 <P_CrossSubsector+0x31c>
   2f4d0:	30 00 00 f6 	b 192 <P_CrossSubsector+0x318>
   2f4d4:	83 00 0d c1 	cmpeq_i s4, s3, s26
   2f4d8:	40 00 f6 c0 	move s2, s12
   2f4dc:	a4 00 00 f4 	bnz s4, 20 <P_CrossSubsector+0x278>
   2f4e0:	43 00 2d c1 	cmpgt_i s2, s3, s26
   2f4e4:	42 00 00 f4 	bnz s2, 8 <P_CrossSubsector+0x274>
   2f4e8:	72 00 00 f6 	b 456 <P_CrossSubsector+0x438>
   2f4ec:	49 7c 00 0a 	shr s2, s9, 31
   2f4f0:	6d 00 00 a8 	load_32 s3, (s13)
   2f4f4:	9a 80 01 c1 	cmpeq_i s4, s26, s3
   2f4f8:	44 00 00 f4 	bnz s4, 8 <P_CrossSubsector+0x288>
   2f4fc:	72 00 00 f6 	b 456 <P_CrossSubsector+0x44c>
   2f500:	60 00 f6 c0 	move s3, s12
   2f504:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f508:	62 1f 00 f4 	bnz s2, 1004 <P_CrossSubsector+0x67c>
   2f50c:	81 00 00 f6 	b 516 <P_CrossSubsector+0x498>
   2f510:	ae 80 01 c1 	cmpeq_i s5, s14, s3
   2f514:	60 08 00 0f 	move s3, 2
   2f518:	40 80 f1 c0 	move s2, s3
   2f51c:	c5 00 00 f4 	bnz s5, 24 <P_CrossSubsector+0x2bc>
   2f520:	44 00 27 c1 	cmpgt_i s2, s4, s14
   2f524:	42 00 00 f4 	bnz s2, 8 <P_CrossSubsector+0x2b4>
   2f528:	73 00 00 f6 	b 460 <P_CrossSubsector+0x47c>
   2f52c:	48 00 00 12 	cmpgt_i s2, s8, 0
   2f530:	42 04 00 01 	and s2, s2, 1
   2f534:	8d 00 00 a8 	load_32 s4, (s13)
   2f538:	8e 00 02 c1 	cmpeq_i s4, s14, s4
   2f53c:	64 0e 00 f4 	bnz s4, 460 <P_CrossSubsector+0x490>
   2f540:	7b 04 00 4f 	movehi s3, 59
   2f544:	63 60 4c 00 	or s3, s3, 4888
   2f548:	63 00 00 a8 	load_32 s3, (s3)
   2f54c:	6e 80 41 c1 	cmplt_i s3, s14, s3
   2f550:	43 00 00 f4 	bnz s3, 8 <P_CrossSubsector+0x2e0>
   2f554:	78 ff ff f7 	b -544 <P_CrossSubsector+0xbc>
   2f558:	68 00 00 12 	cmpgt_i s3, s8, 0
   2f55c:	63 04 00 01 	and s3, s3, 1
   2f560:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f564:	82 1c 00 f4 	bnz s2, 912 <P_CrossSubsector+0x67c>
   2f568:	6a 00 00 f6 	b 424 <P_CrossSubsector+0x498>
   2f56c:	60 08 00 0f 	move s3, 2
   2f570:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f574:	02 1c 00 f4 	bnz s2, 896 <P_CrossSubsector+0x67c>
   2f578:	bf ff ff f7 	b -260 <P_CrossSubsector+0x1fc>
   2f57c:	c0 08 00 0f 	move s6, 2
   2f580:	e3 00 41 c1 	cmplt_i s7, s3, s2
   2f584:	60 00 00 0f 	move s3, 0
   2f588:	40 80 f1 c0 	move s2, s3
   2f58c:	47 00 00 f4 	bnz s7, 8 <P_CrossSubsector+0x31c>
   2f590:	40 00 f3 c0 	move s2, s6
   2f594:	db 04 00 4f 	movehi s6, 59
   2f598:	ed 00 00 a8 	load_32 s7, (s13)
   2f59c:	c6 60 4c 00 	or s6, s6, 4888
   2f5a0:	e7 00 6d c0 	sub_i s7, s7, s26
   2f5a4:	c6 00 00 a8 	load_32 s6, (s6)
   2f5a8:	e7 40 00 09 	ashr s7, s7, 16
   2f5ac:	c6 00 67 c0 	sub_i s6, s6, s14
   2f5b0:	87 00 72 c0 	mull_i s4, s7, s4
   2f5b4:	c6 40 00 09 	ashr s6, s6, 16
   2f5b8:	a6 80 72 c0 	mull_i s5, s6, s5
   2f5bc:	c5 00 42 c1 	cmplt_i s6, s5, s4
   2f5c0:	46 0a 00 f4 	bnz s6, 328 <P_CrossSubsector+0x490>
   2f5c4:	64 80 02 c1 	cmpeq_i s3, s4, s5
   2f5c8:	c3 06 00 f4 	bnz s3, 216 <P_CrossSubsector+0x428>
   2f5cc:	60 04 00 0f 	move s3, 1
   2f5d0:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f5d4:	02 19 00 f4 	bnz s2, 800 <P_CrossSubsector+0x67c>
   2f5d8:	4e 00 00 f6 	b 312 <P_CrossSubsector+0x498>
   2f5dc:	42 00 00 12 	cmpgt_i s2, s2, 0
   2f5e0:	42 04 00 01 	and s2, s2, 1
   2f5e4:	85 00 00 a8 	load_32 s4, (s5)
   2f5e8:	a5 10 00 a8 	load_32 s5, 4(s5)
   2f5ec:	c3 00 02 c1 	cmpeq_i s6, s3, s4
   2f5f0:	46 00 00 f4 	bnz s6, 8 <P_CrossSubsector+0x380>
   2f5f4:	06 00 00 f6 	b 24 <P_CrossSubsector+0x394>
   2f5f8:	80 80 f1 c0 	move s4, s3
   2f5fc:	60 00 f6 c0 	move s3, s12
   2f600:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f604:	82 17 00 f4 	bnz s2, 752 <P_CrossSubsector+0x67c>
   2f608:	9b ff ff f7 	b -404 <P_CrossSubsector+0x1fc>
   2f60c:	c3 00 42 c1 	cmplt_i s6, s3, s4
   2f610:	78 30 00 a8 	load_32 s3, 12(s24)
   2f614:	46 00 00 f4 	bnz s6, 8 <P_CrossSubsector+0x3a4>
   2f618:	05 00 00 f6 	b 20 <P_CrossSubsector+0x3b4>
   2f61c:	63 7c 00 0a 	shr s3, s3, 31
   2f620:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f624:	82 16 00 f4 	bnz s2, 720 <P_CrossSubsector+0x67c>
   2f628:	93 ff ff f7 	b -436 <P_CrossSubsector+0x1fc>
   2f62c:	63 00 00 12 	cmpgt_i s3, s3, 0
   2f630:	63 04 00 01 	and s3, s3, 1
   2f634:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f638:	e2 15 00 f4 	bnz s2, 700 <P_CrossSubsector+0x67c>
   2f63c:	8e ff ff f7 	b -456 <P_CrossSubsector+0x1fc>
   2f640:	41 00 00 12 	cmpgt_i s2, s1, 0
   2f644:	c0 00 f2 c0 	move s6, s4
   2f648:	42 04 00 01 	and s2, s2, 1
   2f64c:	85 00 00 a8 	load_32 s4, (s5)
   2f650:	a5 10 00 a8 	load_32 s5, 4(s5)
   2f654:	e6 00 02 c1 	cmpeq_i s7, s6, s4
   2f658:	47 00 00 f4 	bnz s7, 8 <P_CrossSubsector+0x3e8>
   2f65c:	05 00 00 f6 	b 20 <P_CrossSubsector+0x3f8>
   2f660:	80 00 f3 c0 	move s4, s6
   2f664:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f668:	62 14 00 f4 	bnz s2, 652 <P_CrossSubsector+0x67c>
   2f66c:	82 ff ff f7 	b -504 <P_CrossSubsector+0x1fc>
   2f670:	66 80 42 c1 	cmplt_i s3, s6, s5
   2f674:	43 00 00 f4 	bnz s3, 8 <P_CrossSubsector+0x404>
   2f678:	06 00 00 f6 	b 24 <P_CrossSubsector+0x418>
   2f67c:	61 00 00 12 	cmpgt_i s3, s1, 0
   2f680:	63 04 00 01 	and s3, s3, 1
   2f684:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f688:	62 13 00 f4 	bnz s2, 620 <P_CrossSubsector+0x67c>
   2f68c:	7a ff ff f7 	b -536 <P_CrossSubsector+0x1fc>
   2f690:	61 7c 00 0a 	shr s3, s1, 31
   2f694:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f698:	e2 12 00 f4 	bnz s2, 604 <P_CrossSubsector+0x67c>
   2f69c:	76 ff ff f7 	b -552 <P_CrossSubsector+0x1fc>
   2f6a0:	60 08 00 0f 	move s3, 2
   2f6a4:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f6a8:	62 12 00 f4 	bnz s2, 588 <P_CrossSubsector+0x67c>
   2f6ac:	19 00 00 f6 	b 100 <P_CrossSubsector+0x498>
   2f6b0:	49 00 00 12 	cmpgt_i s2, s9, 0
   2f6b4:	42 04 00 01 	and s2, s2, 1
   2f6b8:	6d 00 00 a8 	load_32 s3, (s13)
   2f6bc:	9a 80 01 c1 	cmpeq_i s4, s26, s3
   2f6c0:	04 f2 ff f5 	bnz s4, -448 <P_CrossSubsector+0x288>
   2f6c4:	7a 80 41 c1 	cmplt_i s3, s26, s3
   2f6c8:	43 00 00 f4 	bnz s3, 8 <P_CrossSubsector+0x458>
   2f6cc:	05 00 00 f6 	b 20 <P_CrossSubsector+0x468>
   2f6d0:	69 7c 00 0a 	shr s3, s9, 31
   2f6d4:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f6d8:	e2 10 00 f4 	bnz s2, 540 <P_CrossSubsector+0x67c>
   2f6dc:	0d 00 00 f6 	b 52 <P_CrossSubsector+0x498>
   2f6e0:	69 00 00 12 	cmpgt_i s3, s9, 0
   2f6e4:	63 04 00 01 	and s3, s3, 1
   2f6e8:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f6ec:	42 10 00 f4 	bnz s2, 520 <P_CrossSubsector+0x67c>
   2f6f0:	08 00 00 f6 	b 32 <P_CrossSubsector+0x498>
   2f6f4:	48 7c 00 0a 	shr s2, s8, 31
   2f6f8:	8d 00 00 a8 	load_32 s4, (s13)
   2f6fc:	8e 00 02 c1 	cmpeq_i s4, s14, s4
   2f700:	44 00 00 f4 	bnz s4, 8 <P_CrossSubsector+0x490>
   2f704:	8f ff ff f7 	b -452 <P_CrossSubsector+0x2c8>
   2f708:	42 80 01 c1 	cmpeq_i s2, s2, s3
   2f70c:	42 0f 00 f4 	bnz s2, 488 <P_CrossSubsector+0x67c>
   2f710:	00 40 00 a0 	load_u8 s0, 16(s0)
   2f714:	40 10 00 01 	and s2, s0, 4
   2f718:	00 00 00 0f 	move s0, 0
   2f71c:	42 0f 00 f2 	bz s2, 488 <P_CrossSubsector+0x68c>
   2f720:	d9 60 00 a8 	load_32 s6, 24(s25)
   2f724:	f9 70 00 a8 	load_32 s7, 28(s25)
   2f728:	46 01 00 a8 	load_32 s10, (s6)
   2f72c:	47 00 00 a8 	load_32 s2, (s7)
   2f730:	a6 10 00 a8 	load_32 s5, 4(s6)
   2f734:	67 10 00 a8 	load_32 s3, 4(s7)
   2f738:	8a 00 11 c1 	cmpne_i s4, s10, s2
   2f73c:	64 00 00 f4 	bnz s4, 12 <P_CrossSubsector+0x4d0>
   2f740:	85 80 01 c1 	cmpeq_i s4, s5, s3
   2f744:	84 0d 00 f4 	bnz s4, 432 <P_CrossSubsector+0x67c>
   2f748:	85 80 41 c1 	cmplt_i s4, s5, s3
   2f74c:	44 00 00 f4 	bnz s4, 8 <P_CrossSubsector+0x4dc>
   2f750:	07 00 00 f6 	b 28 <P_CrossSubsector+0x4f4>
   2f754:	6a 00 21 c1 	cmpgt_i s3, s10, s2
   2f758:	43 00 00 f4 	bnz s3, 8 <P_CrossSubsector+0x4e8>
   2f75c:	07 00 00 f6 	b 28 <P_CrossSubsector+0x500>
   2f760:	4a 80 32 c1 	cmpge_i s2, s10, s5
   2f764:	02 0d 00 f4 	bnz s2, 416 <P_CrossSubsector+0x68c>
   2f768:	07 00 00 f6 	b 28 <P_CrossSubsector+0x50c>
   2f76c:	a0 80 f1 c0 	move s5, s3
   2f770:	6a 00 21 c1 	cmpgt_i s3, s10, s2
   2f774:	63 ff ff f5 	bnz s3, -20 <P_CrossSubsector+0x4e8>
   2f778:	40 01 f1 c0 	move s10, s2
   2f77c:	4a 80 32 c1 	cmpge_i s2, s10, s5
   2f780:	22 0c 00 f4 	bnz s2, 388 <P_CrossSubsector+0x68c>
   2f784:	09 20 00 09 	ashr s0, s9, 8
   2f788:	5e 71 02 88 	store_32 s10, 156(sp)
   2f78c:	fe 90 02 88 	store_32 s7, 164(sp)
   2f790:	de a0 02 88 	store_32 s6, 168(sp)
   2f794:	be 80 02 88 	store_32 s5, 160(sp)
   2f798:	de 11 02 88 	store_32 s14, 132(sp)
   2f79c:	00 03 f4 c0 	move s24, s8
   2f7a0:	3e f1 01 88 	store_32 s9, 124(sp)
   2f7a4:	e4 b1 ff f9 	call -79984 <FixedMul>
   2f7a8:	1e 60 02 88 	store_32 s0, 152(sp)
   2f7ac:	18 20 00 09 	ashr s0, s24, 8
   2f7b0:	1e 03 02 88 	store_32 s24, 128(sp)
   2f7b4:	1e 23 02 a8 	load_32 s24, 136(sp)
   2f7b8:	38 30 00 a8 	load_32 s1, 12(s24)
   2f7bc:	de b1 ff f9 	call -80008 <FixedMul>
   2f7c0:	3e 60 02 a8 	load_32 s1, 152(sp)
   2f7c4:	21 00 60 c0 	sub_i s1, s1, s0
   2f7c8:	81 02 00 f2 	bz s1, 80 <P_CrossSubsector+0x5a0>
   2f7cc:	18 00 00 a8 	load_32 s0, (s24)
   2f7d0:	1a 00 60 c0 	sub_i s0, s26, s0
   2f7d4:	40 83 f0 c0 	move s26, s1
   2f7d8:	3e f0 01 a8 	load_32 s1, 124(sp)
   2f7dc:	00 20 00 09 	ashr s0, s0, 8
   2f7e0:	d5 b1 ff f9 	call -80044 <FixedMul>
   2f7e4:	38 10 00 a8 	load_32 s1, 4(s24)
   2f7e8:	5e 10 02 a8 	load_32 s2, 132(sp)
   2f7ec:	1e 60 02 88 	store_32 s0, 152(sp)
   2f7f0:	21 00 61 c0 	sub_i s1, s1, s2
   2f7f4:	01 20 00 09 	ashr s0, s1, 8
   2f7f8:	3e 00 02 a8 	load_32 s1, 128(sp)
   2f7fc:	ce b1 ff f9 	call -80072 <FixedMul>
   2f800:	3e 60 02 a8 	load_32 s1, 152(sp)
   2f804:	00 80 50 c0 	add_i s0, s0, s1
   2f808:	20 00 fd c0 	move s1, s26
   2f80c:	d0 b1 ff f9 	call -80064 <FixedDiv>
   2f810:	40 03 f0 c0 	move s26, s0
   2f814:	02 00 00 f6 	b 8 <P_CrossSubsector+0x5a4>
   2f818:	40 03 00 0f 	move s26, 0
   2f81c:	7e a0 02 a8 	load_32 s3, 168(sp)
   2f820:	03 00 00 a8 	load_32 s0, (s3)
   2f824:	9e 90 02 a8 	load_32 s4, 164(sp)
   2f828:	24 00 00 a8 	load_32 s1, (s4)
   2f82c:	00 80 00 c1 	cmpeq_i s0, s0, s1
   2f830:	3e 70 02 a8 	load_32 s1, 156(sp)
   2f834:	e0 01 00 f4 	bnz s0, 60 <P_CrossSubsector+0x5f8>
   2f838:	1b 04 00 4f 	movehi s0, 59
   2f83c:	00 00 4c 00 	or s0, s0, 4864
   2f840:	00 00 00 a8 	load_32 s0, (s0)
   2f844:	01 00 60 c0 	sub_i s0, s1, s0
   2f848:	20 00 fd c0 	move s1, s26
   2f84c:	c0 b1 ff f9 	call -80128 <FixedDiv>
   2f850:	3b 04 00 4f 	movehi s1, 59
   2f854:	9e 90 02 a8 	load_32 s4, 164(sp)
   2f858:	7e a0 02 a8 	load_32 s3, 168(sp)
   2f85c:	21 d0 4b 00 	or s1, s1, 4852
   2f860:	41 00 00 a8 	load_32 s2, (s1)
   2f864:	40 00 51 c1 	cmple_i s2, s0, s2
   2f868:	42 00 00 f4 	bnz s2, 8 <P_CrossSubsector+0x5f8>
   2f86c:	01 00 00 88 	store_32 s0, (s1)
   2f870:	03 10 00 a8 	load_32 s0, 4(s3)
   2f874:	24 10 00 a8 	load_32 s1, 4(s4)
   2f878:	00 80 10 c1 	cmpne_i s0, s0, s1
   2f87c:	3e 80 02 a8 	load_32 s1, 160(sp)
   2f880:	00 01 00 f4 	bnz s0, 32 <P_CrossSubsector+0x628>
   2f884:	1b 04 00 4f 	movehi s0, 59
   2f888:	00 70 4c 00 	or s0, s0, 4892
   2f88c:	20 00 00 a8 	load_32 s1, (s0)
   2f890:	7e 51 02 a8 	load_32 s11, 148(sp)
   2f894:	9e 41 02 a8 	load_32 s12, 144(sp)
   2f898:	be 31 02 a8 	load_32 s13, 140(sp)
   2f89c:	11 00 00 f6 	b 68 <P_CrossSubsector+0x668>
   2f8a0:	1b 04 00 4f 	movehi s0, 59
   2f8a4:	00 00 4c 00 	or s0, s0, 4864
   2f8a8:	00 00 00 a8 	load_32 s0, (s0)
   2f8ac:	01 00 60 c0 	sub_i s0, s1, s0
   2f8b0:	20 00 fd c0 	move s1, s26
   2f8b4:	a6 b1 ff f9 	call -80232 <FixedDiv>
   2f8b8:	3b 04 00 4f 	movehi s1, 59
   2f8bc:	41 70 4c 00 	or s2, s1, 4892
   2f8c0:	22 00 00 a8 	load_32 s1, (s2)
   2f8c4:	7e 51 02 a8 	load_32 s11, 148(sp)
   2f8c8:	9e 41 02 a8 	load_32 s12, 144(sp)
   2f8cc:	be 31 02 a8 	load_32 s13, 140(sp)
   2f8d0:	60 80 30 c1 	cmpge_i s3, s0, s1
   2f8d4:	63 00 00 f4 	bnz s3, 12 <P_CrossSubsector+0x668>
   2f8d8:	02 00 00 88 	store_32 s0, (s2)
   2f8dc:	20 00 f0 c0 	move s1, s0
   2f8e0:	1b 04 00 4f 	movehi s0, 59
   2f8e4:	00 d0 4b 00 	or s0, s0, 4852
   2f8e8:	00 00 00 a8 	load_32 s0, (s0)
   2f8ec:	01 00 50 c1 	cmple_i s0, s1, s0
   2f8f0:	80 01 00 f4 	bnz s0, 48 <P_CrossSubsector+0x6a8>
   2f8f4:	7b ff ff 05 	add_i s27, s27, -1
   2f8f8:	39 83 00 05 	add_i s25, s25, 32
   2f8fc:	5b d2 ff f5 	bnz s27, -1464 <P_CrossSubsector+0xcc>
   2f900:	1e e0 01 a8 	load_32 s0, 120(sp)
   2f904:	fe b3 02 a8 	load_32 ra, 172(sp)
   2f908:	7e c3 02 a8 	load_32 s27, 176(sp)
   2f90c:	5e d3 02 a8 	load_32 s26, 180(sp)
   2f910:	3e e3 02 a8 	load_32 s25, 184(sp)
   2f914:	1e f3 02 a8 	load_32 s24, 188(sp)
   2f918:	de 03 03 05 	add_i sp, sp, 192
   2f91c:	1f 00 00 f0 	ret
   2f920:	00 00 00 0f 	move s0, 0
   2f924:	f8 ff ff f7 	b -32 <P_CrossSubsector+0x68c>

000000000002f928 P_CrossBSPNode:
   2f928:	de 03 ff 05 	add_i sp, sp, -64
   2f92c:	1e f3 00 88 	store_32 s24, 60(sp)
   2f930:	3e e3 00 88 	store_32 s25, 56(sp)
   2f934:	5e d3 00 88 	store_32 s26, 52(sp)
   2f938:	7e c3 00 88 	store_32 s27, 48(sp)
   2f93c:	fe b3 00 88 	store_32 ra, 44(sp)
   2f940:	64 00 00 4f 	movehi s3, 4
   2f944:	20 80 11 c0 	and s1, s0, s3
   2f948:	e1 10 00 f4 	bnz s1, 540 <P_CrossBSPNode+0x23c>
   2f94c:	3b 04 00 4f 	movehi s1, 59
   2f950:	5b 04 00 4f 	movehi s2, 59
   2f954:	20 03 00 0f 	move s25, 0
   2f958:	21 50 4a 00 	or s1, s1, 4756
   2f95c:	3e a0 00 88 	store_32 s1, 40(sp)
   2f960:	3b 04 00 4f 	movehi s1, 59
   2f964:	62 13 4c 00 	or s27, s2, 4868
   2f968:	5b 04 00 4f 	movehi s2, 59
   2f96c:	21 50 4c 00 	or s1, s1, 4884
   2f970:	3e 90 00 88 	store_32 s1, 36(sp)
   2f974:	22 60 4c 00 	or s1, s2, 4888
   2f978:	3e 80 00 88 	store_32 s1, 32(sp)
   2f97c:	20 08 00 0f 	move s1, 2
   2f980:	3e 60 00 88 	store_32 s1, 24(sp)
   2f984:	20 04 00 0f 	move s1, 1
   2f988:	3e 50 00 88 	store_32 s1, 20(sp)
   2f98c:	7e 70 00 88 	store_32 s3, 28(sp)
   2f990:	3e a0 00 a8 	load_32 s1, 40(sp)
   2f994:	00 d0 00 07 	mull_i s0, s0, 52
   2f998:	21 00 00 a8 	load_32 s1, (s1)
   2f99c:	41 03 50 c0 	add_i s26, s1, s0
   2f9a0:	3b 00 00 a8 	load_32 s1, (s27)
   2f9a4:	5b 10 00 a8 	load_32 s2, 4(s27)
   2f9a8:	1a 20 00 a8 	load_32 s0, 8(s26)
   2f9ac:	40 00 00 f4 	bnz s0, 8 <P_CrossBSPNode+0x8c>
   2f9b0:	15 00 00 f6 	b 84 <P_CrossBSPNode+0xdc>
   2f9b4:	7a 30 00 a8 	load_32 s3, 12(s26)
   2f9b8:	43 00 00 f4 	bnz s3, 8 <P_CrossBSPNode+0x98>
   2f9bc:	1c 00 00 f6 	b 112 <P_CrossBSPNode+0x104>
   2f9c0:	9a 00 00 a8 	load_32 s4, (s26)
   2f9c4:	00 40 00 09 	ashr s0, s0, 16
   2f9c8:	ba 10 00 a8 	load_32 s5, 4(s26)
   2f9cc:	21 00 62 c0 	sub_i s1, s1, s4
   2f9d0:	42 80 62 c0 	sub_i s2, s2, s5
   2f9d4:	21 40 00 09 	ashr s1, s1, 16
   2f9d8:	42 40 00 09 	ashr s2, s2, 16
   2f9dc:	02 00 70 c0 	mull_i s0, s2, s0
   2f9e0:	43 40 00 09 	ashr s2, s3, 16
   2f9e4:	21 00 71 c0 	mull_i s1, s1, s2
   2f9e8:	40 80 40 c1 	cmplt_i s2, s0, s1
   2f9ec:	82 00 00 f4 	bnz s2, 16 <P_CrossBSPNode+0xd4>
   2f9f0:	01 00 00 c1 	cmpeq_i s0, s1, s0
   2f9f4:	40 00 00 f4 	bnz s0, 8 <P_CrossBSPNode+0xd4>
   2f9f8:	17 00 00 f6 	b 92 <P_CrossBSPNode+0x12c>
   2f9fc:	00 03 00 0f 	move s24, 0
   2fa00:	16 00 00 f6 	b 88 <P_CrossBSPNode+0x130>
   2fa04:	1a 00 00 a8 	load_32 s0, (s26)
   2fa08:	00 83 fc c0 	move s24, s25
   2fa0c:	40 80 00 c1 	cmpeq_i s2, s0, s1
   2fa10:	42 02 00 f4 	bnz s2, 72 <P_CrossBSPNode+0x130>
   2fa14:	20 80 40 c1 	cmplt_i s1, s0, s1
   2fa18:	1a 30 00 a8 	load_32 s0, 12(s26)
   2fa1c:	41 00 00 f4 	bnz s1, 8 <P_CrossBSPNode+0xfc>
   2fa20:	0a 00 00 f6 	b 40 <P_CrossBSPNode+0x120>
   2fa24:	00 7f 00 0a 	shr s24, s0, 31
   2fa28:	0c 00 00 f6 	b 48 <P_CrossBSPNode+0x130>
   2fa2c:	7a 10 00 a8 	load_32 s3, 4(s26)
   2fa30:	00 83 fc c0 	move s24, s25
   2fa34:	23 80 00 c1 	cmpeq_i s1, s3, s1
   2fa38:	01 01 00 f4 	bnz s1, 32 <P_CrossBSPNode+0x130>
   2fa3c:	23 00 41 c1 	cmplt_i s1, s3, s2
   2fa40:	41 00 00 f4 	bnz s1, 8 <P_CrossBSPNode+0x120>
   2fa44:	f8 ff ff f7 	b -32 <P_CrossBSPNode+0xfc>
   2fa48:	00 00 00 12 	cmpgt_i s0, s0, 0
   2fa4c:	00 07 00 01 	and s24, s0, 1
   2fa50:	02 00 00 f6 	b 8 <P_CrossBSPNode+0x130>
   2fa54:	00 07 00 0f 	move s24, 1
   2fa58:	18 04 00 0b 	shl s0, s24, 1
   2fa5c:	1a 00 50 c0 	add_i s0, s26, s0
   2fa60:	00 c0 00 a4 	load_u16 s0, 48(s0)
   2fa64:	b1 ff ff f9 	call -316 <P_CrossBSPNode>
   2fa68:	20 09 00 f2 	bz s0, 292 <P_CrossBSPNode+0x264>
   2fa6c:	3e 90 00 a8 	load_32 s1, 36(sp)
   2fa70:	1a 20 00 05 	add_i s0, s26, 8
   2fa74:	41 00 00 a8 	load_32 s2, (s1)
   2fa78:	3e 80 00 a8 	load_32 s1, 32(sp)
   2fa7c:	61 00 00 a8 	load_32 s3, (s1)
   2fa80:	00 00 00 a8 	load_32 s0, (s0)
   2fa84:	40 00 00 f4 	bnz s0, 8 <P_CrossBSPNode+0x164>
   2fa88:	18 00 00 f6 	b 96 <P_CrossBSPNode+0x1c0>
   2fa8c:	3a 30 00 a8 	load_32 s1, 12(s26)
   2fa90:	41 00 00 f4 	bnz s1, 8 <P_CrossBSPNode+0x170>
   2fa94:	21 00 00 f6 	b 132 <P_CrossBSPNode+0x1f0>
   2fa98:	9a 00 00 a8 	load_32 s4, (s26)
   2fa9c:	00 40 00 09 	ashr s0, s0, 16
   2faa0:	ba 10 00 a8 	load_32 s5, 4(s26)
   2faa4:	21 40 00 09 	ashr s1, s1, 16
   2faa8:	42 00 62 c0 	sub_i s2, s2, s4
   2faac:	63 80 62 c0 	sub_i s3, s3, s5
   2fab0:	42 40 00 09 	ashr s2, s2, 16
   2fab4:	63 40 00 09 	ashr s3, s3, 16
   2fab8:	42 80 70 c0 	mull_i s2, s2, s1
   2fabc:	03 00 70 c0 	mull_i s0, s3, s0
   2fac0:	20 80 fc c0 	move s1, s25
   2fac4:	60 00 41 c1 	cmplt_i s3, s0, s2
   2fac8:	a3 03 00 f4 	bnz s3, 116 <P_CrossBSPNode+0x214>
   2facc:	3e 60 00 a8 	load_32 s1, 24(sp)
   2fad0:	02 00 00 c1 	cmpeq_i s0, s2, s0
   2fad4:	40 03 00 f4 	bnz s0, 104 <P_CrossBSPNode+0x214>
   2fad8:	3e 50 00 a8 	load_32 s1, 20(sp)
   2fadc:	18 80 00 c1 	cmpeq_i s0, s24, s1
   2fae0:	60 06 00 f4 	bnz s0, 204 <P_CrossBSPNode+0x284>
   2fae4:	18 00 00 f6 	b 96 <P_CrossBSPNode+0x21c>
   2fae8:	1a 00 00 a8 	load_32 s0, (s26)
   2faec:	3e 60 00 a8 	load_32 s1, 24(sp)
   2faf0:	60 00 01 c1 	cmpeq_i s3, s0, s2
   2faf4:	43 02 00 f4 	bnz s3, 72 <P_CrossBSPNode+0x214>
   2faf8:	20 00 41 c1 	cmplt_i s1, s0, s2
   2fafc:	1a 30 00 a8 	load_32 s0, 12(s26)
   2fb00:	41 00 00 f4 	bnz s1, 8 <P_CrossBSPNode+0x1e0>
   2fb04:	0c 00 00 f6 	b 48 <P_CrossBSPNode+0x20c>
   2fb08:	20 7c 00 0a 	shr s1, s0, 31
   2fb0c:	18 80 00 c1 	cmpeq_i s0, s24, s1
   2fb10:	e0 04 00 f4 	bnz s0, 156 <P_CrossBSPNode+0x284>
   2fb14:	0c 00 00 f6 	b 48 <P_CrossBSPNode+0x21c>
   2fb18:	9a 10 00 a8 	load_32 s4, 4(s26)
   2fb1c:	3e 60 00 a8 	load_32 s1, 24(sp)
   2fb20:	44 00 01 c1 	cmpeq_i s2, s4, s2
   2fb24:	c2 00 00 f4 	bnz s2, 24 <P_CrossBSPNode+0x214>
   2fb28:	24 80 41 c1 	cmplt_i s1, s4, s3
   2fb2c:	41 00 00 f4 	bnz s1, 8 <P_CrossBSPNode+0x20c>
   2fb30:	f6 ff ff f7 	b -40 <P_CrossBSPNode+0x1e0>
   2fb34:	00 00 00 12 	cmpgt_i s0, s0, 0
   2fb38:	20 04 00 01 	and s1, s0, 1
   2fb3c:	18 80 00 c1 	cmpeq_i s0, s24, s1
   2fb40:	60 03 00 f4 	bnz s0, 108 <P_CrossBSPNode+0x284>
   2fb44:	18 04 00 03 	xor s0, s24, 1
   2fb48:	00 04 00 0b 	shl s0, s0, 1
   2fb4c:	1a 00 50 c0 	add_i s0, s26, s0
   2fb50:	00 c0 00 a4 	load_u16 s0, 48(s0)
   2fb54:	3e 70 00 a8 	load_32 s1, 28(sp)
   2fb58:	20 80 10 c0 	and s1, s0, s1
   2fb5c:	a1 f1 ff f3 	bz s1, -460 <P_CrossBSPNode+0x68>
   2fb60:	04 00 00 f6 	b 16 <P_CrossBSPNode+0x248>
   2fb64:	20 fc ff 11 	cmpne_i s1, s0, -1
   2fb68:	41 00 00 f4 	bnz s1, 8 <P_CrossBSPNode+0x248>
   2fb6c:	05 00 00 f6 	b 20 <P_CrossBSPNode+0x258>
   2fb70:	3b fc ff 4f 	movehi s1, 524283
   2fb74:	21 fc 7f 00 	or s1, s1, 8191
   2fb78:	00 80 10 c0 	and s0, s0, s1
   2fb7c:	02 00 00 f6 	b 8 <P_CrossBSPNode+0x25c>
   2fb80:	00 00 00 0f 	move s0, 0
   2fb84:	bd fd ff f9 	call -2316 <P_CrossSubsector>
   2fb88:	20 03 f0 c0 	move s25, s0
   2fb8c:	00 80 fc c0 	move s0, s25
   2fb90:	fe b3 00 a8 	load_32 ra, 44(sp)
   2fb94:	7e c3 00 a8 	load_32 s27, 48(sp)
   2fb98:	5e d3 00 a8 	load_32 s26, 52(sp)
   2fb9c:	3e e3 00 a8 	load_32 s25, 56(sp)
   2fba0:	1e f3 00 a8 	load_32 s24, 60(sp)
   2fba4:	de 03 01 05 	add_i sp, sp, 64
   2fba8:	1f 00 00 f0 	ret
   2fbac:	3e 53 00 a8 	load_32 s25, 20(sp)
   2fbb0:	f7 ff ff f7 	b -36 <P_CrossBSPNode+0x264>

000000000002fbb4 P_CheckSight:
   2fbb4:	de 03 ff 05 	add_i sp, sp, -64
   2fbb8:	fe f3 00 88 	store_32 ra, 60(sp)
   2fbbc:	5b 04 00 4f 	movehi s2, 59
   2fbc0:	60 d0 00 a8 	load_32 s3, 52(s0)
   2fbc4:	bb 04 00 4f 	movehi s5, 59
   2fbc8:	42 80 4b 00 	or s2, s2, 4832
   2fbcc:	63 00 00 a8 	load_32 s3, (s3)
   2fbd0:	a5 80 4a 00 	or s5, s5, 4768
   2fbd4:	42 00 00 a8 	load_32 s2, (s2)
   2fbd8:	81 d0 00 a8 	load_32 s4, 52(s1)
   2fbdc:	63 00 61 c0 	sub_i s3, s3, s2
   2fbe0:	84 00 00 a8 	load_32 s4, (s4)
   2fbe4:	63 0c 00 09 	ashr s3, s3, 3
   2fbe8:	44 00 61 c0 	sub_i s2, s4, s2
   2fbec:	85 00 00 a8 	load_32 s4, (s5)
   2fbf0:	b4 2c ba 4f 	movehi s5, 381300
   2fbf4:	42 0c 00 09 	ashr s2, s2, 3
   2fbf8:	64 80 71 c0 	mull_i s3, s4, s3
   2fbfc:	9b 04 00 4f 	movehi s4, 59
   2fc00:	a5 8c 2e 00 	or s5, s5, 2979
   2fc04:	63 80 72 c0 	mull_i s3, s3, s5
   2fc08:	84 70 4b 00 	or s4, s4, 4828
   2fc0c:	42 80 72 c0 	mull_i s2, s2, s5
   2fc10:	43 00 51 c0 	add_i s2, s3, s2
   2fc14:	64 00 00 a8 	load_32 s3, (s4)
   2fc18:	82 0c 00 09 	ashr s4, s2, 3
   2fc1c:	42 1c 00 01 	and s2, s2, 7
   2fc20:	63 00 52 c0 	add_i s3, s3, s4
   2fc24:	80 04 00 0f 	move s4, 1
   2fc28:	63 00 00 a0 	load_u8 s3, (s3)
   2fc2c:	44 00 b1 c0 	shl s2, s4, s2
   2fc30:	42 80 11 c0 	and s2, s2, s3
   2fc34:	42 01 00 f2 	bz s2, 40 <P_CheckSight+0xa8>
   2fc38:	1b 04 00 4f 	movehi s0, 59
   2fc3c:	00 e0 4b 00 	or s0, s0, 4856
   2fc40:	20 00 00 a8 	load_32 s1, (s0)
   2fc44:	21 04 00 05 	add_i s1, s1, 1
   2fc48:	20 00 00 88 	store_32 s1, (s0)
   2fc4c:	00 00 00 0f 	move s0, 0
   2fc50:	fe f3 00 a8 	load_32 ra, 60(sp)
   2fc54:	de 03 01 05 	add_i sp, sp, 64
   2fc58:	1f 00 00 f0 	ret
   2fc5c:	5b 04 00 4f 	movehi s2, 59
   2fc60:	94 04 00 4f 	movehi s4, 52
   2fc64:	bb 04 00 4f 	movehi s5, 59
   2fc68:	42 e0 4b 00 	or s2, s2, 4856
   2fc6c:	84 30 19 00 	or s4, s4, 1612
   2fc70:	db 04 00 4f 	movehi s6, 59
   2fc74:	62 10 00 a8 	load_32 s3, 4(s2)
   2fc78:	a5 d0 4b 00 	or s5, s5, 4852
   2fc7c:	63 04 00 05 	add_i s3, s3, 1
   2fc80:	62 10 00 88 	store_32 s3, 4(s2)
   2fc84:	44 00 00 a8 	load_32 s2, (s4)
   2fc88:	42 04 00 05 	add_i s2, s2, 1
   2fc8c:	44 00 00 88 	store_32 s2, (s4)
   2fc90:	40 50 00 a8 	load_32 s2, 20(s0)
   2fc94:	9b 04 00 4f 	movehi s4, 59
   2fc98:	60 10 01 a8 	load_32 s3, 68(s0)
   2fc9c:	84 00 4c 00 	or s4, s4, 4864
   2fca0:	43 00 51 c0 	add_i s2, s3, s2
   2fca4:	63 08 00 09 	ashr s3, s3, 2
   2fca8:	42 80 61 c0 	sub_i s2, s2, s3
   2fcac:	44 00 00 88 	store_32 s2, (s4)
   2fcb0:	61 50 00 a8 	load_32 s3, 20(s1)
   2fcb4:	81 10 01 a8 	load_32 s4, 68(s1)
   2fcb8:	43 00 61 c0 	sub_i s2, s3, s2
   2fcbc:	7b 04 00 4f 	movehi s3, 59
   2fcc0:	82 00 52 c0 	add_i s4, s2, s4
   2fcc4:	63 70 4c 00 	or s3, s3, 4892
   2fcc8:	83 00 00 88 	store_32 s4, (s3)
   2fccc:	66 10 4c 00 	or s3, s6, 4868
   2fcd0:	45 00 00 88 	store_32 s2, (s5)
   2fcd4:	9b 04 00 4f 	movehi s4, 59
   2fcd8:	40 30 00 a8 	load_32 s2, 12(s0)
   2fcdc:	bb 04 00 4f 	movehi s5, 59
   2fce0:	43 00 00 88 	store_32 s2, (s3)
   2fce4:	00 40 00 a8 	load_32 s0, 16(s0)
   2fce8:	84 50 4c 00 	or s4, s4, 4884
   2fcec:	03 10 00 88 	store_32 s0, 4(s3)
   2fcf0:	a5 60 4c 00 	or s5, s5, 4888
   2fcf4:	c1 30 00 a8 	load_32 s6, 12(s1)
   2fcf8:	c4 00 00 88 	store_32 s6, (s4)
   2fcfc:	9b 04 00 4f 	movehi s4, 59
   2fd00:	21 40 00 a8 	load_32 s1, 16(s1)
   2fd04:	25 00 00 88 	store_32 s1, (s5)
   2fd08:	46 00 61 c0 	sub_i s2, s6, s2
   2fd0c:	43 20 00 88 	store_32 s2, 8(s3)
   2fd10:	44 70 4a 00 	or s2, s4, 4764
   2fd14:	01 00 60 c0 	sub_i s0, s1, s0
   2fd18:	03 30 00 88 	store_32 s0, 12(s3)
   2fd1c:	02 00 00 a8 	load_32 s0, (s2)
   2fd20:	00 fc ff 05 	add_i s0, s0, -1
   2fd24:	01 ff ff f9 	call -1020 <P_CrossBSPNode>
   2fd28:	fe f3 00 a8 	load_32 ra, 60(sp)
   2fd2c:	de 03 01 05 	add_i sp, sp, 64
   2fd30:	1f 00 00 f0 	ret

000000000002fd34 P_InitPicAnims:
   2fd34:	de 03 fe 05 	add_i sp, sp, -128
   2fd38:	1e f3 01 88 	store_32 s24, 124(sp)
   2fd3c:	3e e3 01 88 	store_32 s25, 120(sp)
   2fd40:	5e d3 01 88 	store_32 s26, 116(sp)
   2fd44:	7e c3 01 88 	store_32 s27, 112(sp)
   2fd48:	fe b3 01 88 	store_32 ra, 108(sp)
   2fd4c:	1b 04 00 4f 	movehi s0, 59
   2fd50:	33 04 00 4f 	movehi s1, 51
   2fd54:	5b 04 00 4f 	movehi s2, 59
   2fd58:	60 80 56 00 	or s3, s0, 5536
   2fd5c:	7e 80 01 88 	store_32 s3, 96(sp)
   2fd60:	01 33 7c 00 	or s24, s1, 7948
   2fd64:	02 80 4c 00 	or s0, s2, 4896
   2fd68:	03 00 00 88 	store_32 s0, (s3)
   2fd6c:	18 00 00 a8 	load_32 s0, (s24)
   2fd70:	20 fc ff 10 	cmpeq_i s1, s0, -1
   2fd74:	c1 08 00 f4 	bnz s1, 280 <P_InitPicAnims+0x158>
   2fd78:	22 00 00 4f 	movehi s1, 2
   2fd7c:	60 03 00 0f 	move s27, 0
   2fd80:	21 6c 3a 00 	or s1, s1, 3739
   2fd84:	3e 60 01 88 	store_32 s1, 88(sp)
   2fd88:	20 03 fc c0 	move s25, s24
   2fd8c:	1e 73 01 88 	store_32 s24, 92(sp)
   2fd90:	3b 70 00 07 	mull_i s1, s27, 28
   2fd94:	38 80 50 c0 	add_i s1, s24, s1
   2fd98:	3e a0 01 88 	store_32 s1, 104(sp)
   2fd9c:	41 37 00 05 	add_i s26, s1, 13
   2fda0:	e0 01 00 f2 	bz s0, 60 <P_InitPicAnims+0xa8>
   2fda4:	00 00 fd c0 	move s0, s26
   2fda8:	8e 1e 00 f8 	call 31288 <R_CheckTextureNumForName>
   2fdac:	00 fc ff 10 	cmpeq_i s0, s0, -1
   2fdb0:	20 06 00 f4 	bnz s0, 196 <P_InitPicAnims+0x140>
   2fdb4:	1e a0 01 a8 	load_32 s0, 104(sp)
   2fdb8:	00 10 00 05 	add_i s0, s0, 4
   2fdbc:	b7 1e 00 f8 	call 31452 <R_TextureNumForName>
   2fdc0:	1e 83 01 a8 	load_32 s24, 96(sp)
   2fdc4:	38 00 00 a8 	load_32 s1, (s24)
   2fdc8:	01 10 00 88 	store_32 s0, 4(s1)
   2fdcc:	5e 93 01 88 	store_32 s26, 100(sp)
   2fdd0:	00 00 fd c0 	move s0, s26
   2fdd4:	b1 1e 00 f8 	call 31428 <R_TextureNumForName>
   2fdd8:	0e 00 00 f6 	b 56 <P_InitPicAnims+0xdc>
   2fddc:	00 00 fd c0 	move s0, s26
   2fde0:	60 3b 00 f8 	call 60800 <W_CheckNumForName>
   2fde4:	00 fc ff 10 	cmpeq_i s0, s0, -1
   2fde8:	60 04 00 f4 	bnz s0, 140 <P_InitPicAnims+0x140>
   2fdec:	1e a0 01 a8 	load_32 s0, 104(sp)
   2fdf0:	00 10 00 05 	add_i s0, s0, 4
   2fdf4:	4a 1e 00 f8 	call 31016 <R_FlatNumForName>
   2fdf8:	1e 83 01 a8 	load_32 s24, 96(sp)
   2fdfc:	38 00 00 a8 	load_32 s1, (s24)
   2fe00:	01 10 00 88 	store_32 s0, 4(s1)
   2fe04:	5e 93 01 88 	store_32 s26, 100(sp)
   2fe08:	00 00 fd c0 	move s0, s26
   2fe0c:	44 1e 00 f8 	call 30992 <R_FlatNumForName>
   2fe10:	38 00 00 a8 	load_32 s1, (s24)
   2fe14:	01 20 00 88 	store_32 s0, 8(s1)
   2fe18:	59 00 00 a8 	load_32 s2, (s25)
   2fe1c:	41 00 00 88 	store_32 s2, (s1)
   2fe20:	41 10 00 a8 	load_32 s2, 4(s1)
   2fe24:	02 00 60 c0 	sub_i s0, s2, s0
   2fe28:	00 04 00 05 	add_i s0, s0, 1
   2fe2c:	01 30 00 88 	store_32 s0, 12(s1)
   2fe30:	40 04 00 12 	cmpgt_i s2, s0, 1
   2fe34:	42 01 00 f4 	bnz s2, 40 <P_InitPicAnims+0x128>
   2fe38:	1e a0 01 a8 	load_32 s0, 104(sp)
   2fe3c:	3e 90 01 a8 	load_32 s1, 100(sp)
   2fe40:	3e 10 00 88 	store_32 s1, 4(sp)
   2fe44:	3e 60 01 a8 	load_32 s1, 88(sp)
   2fe48:	00 10 00 05 	add_i s0, s0, 4
   2fe4c:	3e 00 00 88 	store_32 s1, (sp)
   2fe50:	1e 20 00 88 	store_32 s0, 8(sp)
   2fe54:	ac 78 ff f9 	call -138576 <I_Error>
   2fe58:	38 00 00 a8 	load_32 s1, (s24)
   2fe5c:	1e a0 01 a8 	load_32 s0, 104(sp)
   2fe60:	00 60 00 a8 	load_32 s0, 24(s0)
   2fe64:	01 40 00 88 	store_32 s0, 16(s1)
   2fe68:	01 50 00 05 	add_i s0, s1, 20
   2fe6c:	18 00 00 88 	store_32 s0, (s24)
   2fe70:	1e 73 01 a8 	load_32 s24, 92(sp)
   2fe74:	7b 07 00 05 	add_i s27, s27, 1
   2fe78:	1b 70 00 07 	mull_i s0, s27, 28
   2fe7c:	38 03 50 c0 	add_i s25, s24, s0
   2fe80:	19 00 00 a8 	load_32 s0, (s25)
   2fe84:	20 fc ff 11 	cmpne_i s1, s0, -1
   2fe88:	41 f8 ff f5 	bnz s1, -248 <P_InitPicAnims+0x5c>
   2fe8c:	fe b3 01 a8 	load_32 ra, 108(sp)
   2fe90:	7e c3 01 a8 	load_32 s27, 112(sp)
   2fe94:	5e d3 01 a8 	load_32 s26, 116(sp)
   2fe98:	3e e3 01 a8 	load_32 s25, 120(sp)
   2fe9c:	1e f3 01 a8 	load_32 s24, 124(sp)
   2fea0:	de 03 02 05 	add_i sp, sp, 128
   2fea4:	1f 00 00 f0 	ret

000000000002fea8 getSide:
   2fea8:	7b 04 00 4f 	movehi s3, 59
   2feac:	9b 04 00 4f 	movehi s4, 59
   2feb0:	00 60 01 07 	mull_i s0, s0, 88
   2feb4:	63 a0 4b 00 	or s3, s3, 4840
   2feb8:	84 80 4b 00 	or s4, s4, 4832
   2febc:	21 08 00 0b 	shl s1, s1, 2
   2fec0:	63 00 00 a8 	load_32 s3, (s3)
   2fec4:	84 00 00 a8 	load_32 s4, (s4)
   2fec8:	04 00 50 c0 	add_i s0, s4, s0
   2fecc:	00 50 01 a8 	load_32 s0, 84(s0)
   2fed0:	00 80 50 c0 	add_i s0, s0, s1
   2fed4:	22 04 00 0b 	shl s1, s2, 1
   2fed8:	00 00 00 a8 	load_32 s0, (s0)
   2fedc:	00 80 50 c0 	add_i s0, s0, s1
   2fee0:	00 58 00 a6 	load_s16 s0, 22(s0)
   2fee4:	00 50 00 07 	mull_i s0, s0, 20
   2fee8:	03 00 50 c0 	add_i s0, s3, s0
   2feec:	1f 00 00 f0 	ret

000000000002fef0 getSector:
   2fef0:	7b 04 00 4f 	movehi s3, 59
   2fef4:	9b 04 00 4f 	movehi s4, 59
   2fef8:	00 60 01 07 	mull_i s0, s0, 88
   2fefc:	63 a0 4b 00 	or s3, s3, 4840
   2ff00:	84 80 4b 00 	or s4, s4, 4832
   2ff04:	21 08 00 0b 	shl s1, s1, 2
   2ff08:	63 00 00 a8 	load_32 s3, (s3)
   2ff0c:	84 00 00 a8 	load_32 s4, (s4)
   2ff10:	04 00 50 c0 	add_i s0, s4, s0
   2ff14:	00 50 01 a8 	load_32 s0, 84(s0)
   2ff18:	00 80 50 c0 	add_i s0, s0, s1
   2ff1c:	22 04 00 0b 	shl s1, s2, 1
   2ff20:	00 00 00 a8 	load_32 s0, (s0)
   2ff24:	00 80 50 c0 	add_i s0, s0, s1
   2ff28:	00 58 00 a6 	load_s16 s0, 22(s0)
   2ff2c:	00 50 00 07 	mull_i s0, s0, 20
   2ff30:	03 00 50 c0 	add_i s0, s3, s0
   2ff34:	00 40 00 a8 	load_32 s0, 16(s0)
   2ff38:	1f 00 00 f0 	ret

000000000002ff3c twoSided:
   2ff3c:	5b 04 00 4f 	movehi s2, 59
   2ff40:	00 60 01 07 	mull_i s0, s0, 88
   2ff44:	21 08 00 0b 	shl s1, s1, 2
   2ff48:	42 80 4b 00 	or s2, s2, 4832
   2ff4c:	42 00 00 a8 	load_32 s2, (s2)
   2ff50:	02 00 50 c0 	add_i s0, s2, s0
   2ff54:	00 50 01 a8 	load_32 s0, 84(s0)
   2ff58:	00 80 50 c0 	add_i s0, s0, s1
   2ff5c:	00 00 00 a8 	load_32 s0, (s0)
   2ff60:	00 40 00 a4 	load_u16 s0, 16(s0)
   2ff64:	00 10 00 01 	and s0, s0, 4
   2ff68:	1f 00 00 f0 	ret

000000000002ff6c getNextSector:
   2ff6c:	40 40 00 a0 	load_u8 s2, 16(s0)
   2ff70:	42 10 00 01 	and s2, s2, 4
   2ff74:	42 00 00 f2 	bz s2, 8 <getNextSector+0x10>
   2ff78:	04 00 00 f6 	b 16 <getNextSector+0x1c>
   2ff7c:	40 00 00 0f 	move s2, 0
   2ff80:	00 00 f1 c0 	move s0, s2
   2ff84:	1f 00 00 f0 	ret
   2ff88:	40 c0 00 a8 	load_32 s2, 48(s0)
   2ff8c:	22 80 10 c1 	cmpne_i s1, s2, s1
   2ff90:	41 00 00 f4 	bnz s1, 8 <getNextSector+0x2c>
   2ff94:	03 00 00 f6 	b 12 <getNextSector+0x34>
   2ff98:	00 00 f1 c0 	move s0, s2
   2ff9c:	1f 00 00 f0 	ret
   2ffa0:	40 d0 00 a8 	load_32 s2, 52(s0)
   2ffa4:	00 00 f1 c0 	move s0, s2
   2ffa8:	1f 00 00 f0 	ret

000000000002ffac P_FindLowestFloorSurrounding:
   2ffac:	20 00 f0 c0 	move s1, s0
   2ffb0:	01 00 00 a8 	load_32 s0, (s1)
   2ffb4:	41 40 01 a8 	load_32 s2, 80(s1)
   2ffb8:	62 04 00 14 	cmplt_i s3, s2, 1
   2ffbc:	43 03 00 f4 	bnz s3, 104 <P_FindLowestFloorSurrounding+0x78>
   2ffc0:	61 50 01 a8 	load_32 s3, 84(s1)
   2ffc4:	80 00 00 0f 	move s4, 0
   2ffc8:	04 00 00 f6 	b 16 <P_FindLowestFloorSurrounding+0x2c>
   2ffcc:	c5 d0 00 a8 	load_32 s6, 52(s5)
   2ffd0:	46 02 00 f2 	bz s6, 72 <P_FindLowestFloorSurrounding+0x6c>
   2ffd4:	0c 00 00 f6 	b 48 <P_FindLowestFloorSurrounding+0x58>
   2ffd8:	a4 08 00 0b 	shl s5, s4, 2
   2ffdc:	a3 80 52 c0 	add_i s5, s3, s5
   2ffe0:	a5 00 00 a8 	load_32 s5, (s5)
   2ffe4:	c5 40 00 a0 	load_u8 s6, 16(s5)
   2ffe8:	c6 10 00 01 	and s6, s6, 4
   2ffec:	66 01 00 f2 	bz s6, 44 <P_FindLowestFloorSurrounding+0x6c>
   2fff0:	c5 c0 00 a8 	load_32 s6, 48(s5)
   2fff4:	e6 80 10 c1 	cmpne_i s7, s6, s1
   2fff8:	47 00 00 f4 	bnz s7, 8 <P_FindLowestFloorSurrounding+0x54>
   2fffc:	f4 ff ff f7 	b -48 <P_FindLowestFloorSurrounding+0x20>
   30000:	c6 00 00 f2 	bz s6, 24 <P_FindLowestFloorSurrounding+0x6c>
   30004:	a6 00 00 a8 	load_32 s5, (s6)
   30008:	c5 00 40 c1 	cmplt_i s6, s5, s0
   3000c:	46 00 00 f4 	bnz s6, 8 <P_FindLowestFloorSurrounding+0x68>
   30010:	a0 00 f0 c0 	move s5, s0
   30014:	00 80 f2 c0 	move s0, s5
   30018:	84 04 00 05 	add_i s4, s4, 1
   3001c:	a4 00 41 c1 	cmplt_i s5, s4, s2
   30020:	c5 fd ff f5 	bnz s5, -72 <P_FindLowestFloorSurrounding+0x2c>
   30024:	1f 00 00 f0 	ret

0000000000030028 P_FindHighestFloorSurrounding:
   30028:	40 40 01 a8 	load_32 s2, 80(s0)
   3002c:	22 04 00 14 	cmplt_i s1, s2, 1
   30030:	a1 03 00 f4 	bnz s1, 116 <P_FindHighestFloorSurrounding+0x7c>
   30034:	60 50 01 a8 	load_32 s3, 84(s0)
   30038:	80 00 00 0f 	move s4, 0
   3003c:	20 0c fe 4f 	movehi s1, 520288
   30040:	04 00 00 f6 	b 16 <P_FindHighestFloorSurrounding+0x28>
   30044:	c5 d0 00 a8 	load_32 s6, 52(s5)
   30048:	46 02 00 f2 	bz s6, 72 <P_FindHighestFloorSurrounding+0x68>
   3004c:	0c 00 00 f6 	b 48 <P_FindHighestFloorSurrounding+0x54>
   30050:	a4 08 00 0b 	shl s5, s4, 2
   30054:	a3 80 52 c0 	add_i s5, s3, s5
   30058:	a5 00 00 a8 	load_32 s5, (s5)
   3005c:	c5 40 00 a0 	load_u8 s6, 16(s5)
   30060:	c6 10 00 01 	and s6, s6, 4
   30064:	66 01 00 f2 	bz s6, 44 <P_FindHighestFloorSurrounding+0x68>
   30068:	c5 c0 00 a8 	load_32 s6, 48(s5)
   3006c:	e6 00 10 c1 	cmpne_i s7, s6, s0
   30070:	47 00 00 f4 	bnz s7, 8 <P_FindHighestFloorSurrounding+0x50>
   30074:	f4 ff ff f7 	b -48 <P_FindHighestFloorSurrounding+0x1c>
   30078:	c6 00 00 f2 	bz s6, 24 <P_FindHighestFloorSurrounding+0x68>
   3007c:	a6 00 00 a8 	load_32 s5, (s6)
   30080:	c5 80 20 c1 	cmpgt_i s6, s5, s1
   30084:	46 00 00 f4 	bnz s6, 8 <P_FindHighestFloorSurrounding+0x64>
   30088:	a0 80 f0 c0 	move s5, s1
   3008c:	20 80 f2 c0 	move s1, s5
   30090:	84 04 00 05 	add_i s4, s4, 1
   30094:	a4 00 41 c1 	cmplt_i s5, s4, s2
   30098:	c5 fd ff f5 	bnz s5, -72 <P_FindHighestFloorSurrounding+0x28>
   3009c:	00 80 f0 c0 	move s0, s1
   300a0:	1f 00 00 f0 	ret
   300a4:	20 0c fe 4f 	movehi s1, 520288
   300a8:	00 80 f0 c0 	move s0, s1
   300ac:	1f 00 00 f0 	ret

00000000000300b0 P_FindNextHighestFloor:
   300b0:	de 03 fe 05 	add_i sp, sp, -128
   300b4:	40 00 f0 c0 	move s2, s0
   300b8:	82 40 01 a8 	load_32 s4, 80(s2)
   300bc:	00 80 f0 c0 	move s0, s1
   300c0:	64 04 00 14 	cmplt_i s3, s4, 1
   300c4:	63 06 00 f4 	bnz s3, 204 <P_FindNextHighestFloor+0xe0>
   300c8:	c0 00 00 0f 	move s6, 0
   300cc:	a2 50 01 a8 	load_32 s5, 84(s2)
   300d0:	3e c0 00 05 	add_i s1, sp, 48
   300d4:	60 00 f3 c0 	move s3, s6
   300d8:	04 00 00 f6 	b 16 <P_FindNextHighestFloor+0x38>
   300dc:	07 d1 00 a8 	load_32 s8, 52(s7)
   300e0:	e8 02 00 f2 	bz s8, 92 <P_FindNextHighestFloor+0x8c>
   300e4:	0c 00 00 f6 	b 48 <P_FindNextHighestFloor+0x64>
   300e8:	e6 08 00 0b 	shl s7, s6, 2
   300ec:	e5 80 53 c0 	add_i s7, s5, s7
   300f0:	e7 00 00 a8 	load_32 s7, (s7)
   300f4:	07 41 00 a0 	load_u8 s8, 16(s7)
   300f8:	08 11 00 01 	and s8, s8, 4
   300fc:	08 02 00 f2 	bz s8, 64 <P_FindNextHighestFloor+0x8c>
   30100:	07 c1 00 a8 	load_32 s8, 48(s7)
   30104:	28 01 11 c1 	cmpne_i s9, s8, s2
   30108:	49 00 00 f4 	bnz s9, 8 <P_FindNextHighestFloor+0x60>
   3010c:	f4 ff ff f7 	b -48 <P_FindNextHighestFloor+0x2c>
   30110:	68 01 00 f2 	bz s8, 44 <P_FindNextHighestFloor+0x8c>
   30114:	e8 00 00 a8 	load_32 s7, (s8)
   30118:	07 01 50 c1 	cmple_i s8, s7, s0
   3011c:	a8 00 00 f4 	bnz s8, 20 <P_FindNextHighestFloor+0x80>
   30120:	03 09 00 0b 	shl s8, s3, 2
   30124:	01 01 54 c0 	add_i s8, s1, s8
   30128:	63 04 00 05 	add_i s3, s3, 1
   3012c:	e8 00 00 88 	store_32 s7, (s8)
   30130:	e3 50 00 14 	cmplt_i s7, s3, 20
   30134:	47 00 00 f4 	bnz s7, 8 <P_FindNextHighestFloor+0x8c>
   30138:	09 00 00 f6 	b 36 <P_FindNextHighestFloor+0xac>
   3013c:	c6 04 00 05 	add_i s6, s6, 1
   30140:	e6 00 42 c1 	cmplt_i s7, s6, s4
   30144:	27 fd ff f5 	bnz s7, -92 <P_FindNextHighestFloor+0x38>
   30148:	43 02 00 f2 	bz s3, 72 <P_FindNextHighestFloor+0xe0>
   3014c:	1e c0 00 a8 	load_32 s0, 48(sp)
   30150:	43 08 00 14 	cmplt_i s2, s3, 2
   30154:	e2 01 00 f4 	bnz s2, 60 <P_FindNextHighestFloor+0xe0>
   30158:	02 00 00 f6 	b 8 <P_FindNextHighestFloor+0xb0>
   3015c:	1e c0 00 a8 	load_32 s0, 48(sp)
   30160:	40 04 00 0f 	move s2, 1
   30164:	80 00 f0 c0 	move s4, s0
   30168:	02 08 00 0b 	shl s0, s2, 2
   3016c:	01 00 50 c0 	add_i s0, s1, s0
   30170:	00 00 00 a8 	load_32 s0, (s0)
   30174:	a0 00 42 c1 	cmplt_i s5, s0, s4
   30178:	45 00 00 f4 	bnz s5, 8 <P_FindNextHighestFloor+0xd0>
   3017c:	00 00 f2 c0 	move s0, s4
   30180:	42 04 00 05 	add_i s2, s2, 1
   30184:	80 00 f0 c0 	move s4, s0
   30188:	a2 80 41 c1 	cmplt_i s5, s2, s3
   3018c:	e5 fe ff f5 	bnz s5, -36 <P_FindNextHighestFloor+0xb8>
   30190:	de 03 02 05 	add_i sp, sp, 128
   30194:	1f 00 00 f0 	ret

0000000000030198 P_FindLowestCeilingSurrounding:
   30198:	40 40 01 a8 	load_32 s2, 80(s0)
   3019c:	3f fc 7f 4f 	movehi s1, 262143
   301a0:	62 04 00 14 	cmplt_i s3, s2, 1
   301a4:	a3 03 00 f4 	bnz s3, 116 <P_FindLowestCeilingSurrounding+0x80>
   301a8:	60 50 01 a8 	load_32 s3, 84(s0)
   301ac:	80 00 00 0f 	move s4, 0
   301b0:	21 fc 7f 00 	or s1, s1, 8191
   301b4:	04 00 00 f6 	b 16 <P_FindLowestCeilingSurrounding+0x2c>
   301b8:	c5 d0 00 a8 	load_32 s6, 52(s5)
   301bc:	46 02 00 f2 	bz s6, 72 <P_FindLowestCeilingSurrounding+0x6c>
   301c0:	0c 00 00 f6 	b 48 <P_FindLowestCeilingSurrounding+0x58>
   301c4:	a4 08 00 0b 	shl s5, s4, 2
   301c8:	a3 80 52 c0 	add_i s5, s3, s5
   301cc:	a5 00 00 a8 	load_32 s5, (s5)
   301d0:	c5 40 00 a0 	load_u8 s6, 16(s5)
   301d4:	c6 10 00 01 	and s6, s6, 4
   301d8:	66 01 00 f2 	bz s6, 44 <P_FindLowestCeilingSurrounding+0x6c>
   301dc:	c5 c0 00 a8 	load_32 s6, 48(s5)
   301e0:	e6 00 10 c1 	cmpne_i s7, s6, s0
   301e4:	47 00 00 f4 	bnz s7, 8 <P_FindLowestCeilingSurrounding+0x54>
   301e8:	f4 ff ff f7 	b -48 <P_FindLowestCeilingSurrounding+0x20>
   301ec:	c6 00 00 f2 	bz s6, 24 <P_FindLowestCeilingSurrounding+0x6c>
   301f0:	a6 10 00 a8 	load_32 s5, 4(s6)
   301f4:	c5 80 40 c1 	cmplt_i s6, s5, s1
   301f8:	46 00 00 f4 	bnz s6, 8 <P_FindLowestCeilingSurrounding+0x68>
   301fc:	a0 80 f0 c0 	move s5, s1
   30200:	20 80 f2 c0 	move s1, s5
   30204:	84 04 00 05 	add_i s4, s4, 1
   30208:	a4 00 41 c1 	cmplt_i s5, s4, s2
   3020c:	c5 fd ff f5 	bnz s5, -72 <P_FindLowestCeilingSurrounding+0x2c>
   30210:	00 80 f0 c0 	move s0, s1
   30214:	1f 00 00 f0 	ret
   30218:	21 fc 7f 00 	or s1, s1, 8191
   3021c:	00 80 f0 c0 	move s0, s1
   30220:	1f 00 00 f0 	ret

0000000000030224 P_FindHighestCeilingSurrounding:
   30224:	40 40 01 a8 	load_32 s2, 80(s0)
   30228:	22 04 00 14 	cmplt_i s1, s2, 1
   3022c:	a1 03 00 f4 	bnz s1, 116 <P_FindHighestCeilingSurrounding+0x7c>
   30230:	20 00 00 0f 	move s1, 0
   30234:	60 50 01 a8 	load_32 s3, 84(s0)
   30238:	80 80 f0 c0 	move s4, s1
   3023c:	04 00 00 f6 	b 16 <P_FindHighestCeilingSurrounding+0x28>
   30240:	c5 d0 00 a8 	load_32 s6, 52(s5)
   30244:	46 02 00 f2 	bz s6, 72 <P_FindHighestCeilingSurrounding+0x68>
   30248:	0c 00 00 f6 	b 48 <P_FindHighestCeilingSurrounding+0x54>
   3024c:	a4 08 00 0b 	shl s5, s4, 2
   30250:	a3 80 52 c0 	add_i s5, s3, s5
   30254:	a5 00 00 a8 	load_32 s5, (s5)
   30258:	c5 40 00 a0 	load_u8 s6, 16(s5)
   3025c:	c6 10 00 01 	and s6, s6, 4
   30260:	66 01 00 f2 	bz s6, 44 <P_FindHighestCeilingSurrounding+0x68>
   30264:	c5 c0 00 a8 	load_32 s6, 48(s5)
   30268:	e6 00 10 c1 	cmpne_i s7, s6, s0
   3026c:	47 00 00 f4 	bnz s7, 8 <P_FindHighestCeilingSurrounding+0x50>
   30270:	f4 ff ff f7 	b -48 <P_FindHighestCeilingSurrounding+0x1c>
   30274:	c6 00 00 f2 	bz s6, 24 <P_FindHighestCeilingSurrounding+0x68>
   30278:	a6 10 00 a8 	load_32 s5, 4(s6)
   3027c:	c5 80 20 c1 	cmpgt_i s6, s5, s1
   30280:	46 00 00 f4 	bnz s6, 8 <P_FindHighestCeilingSurrounding+0x64>
   30284:	a0 80 f0 c0 	move s5, s1
   30288:	20 80 f2 c0 	move s1, s5
   3028c:	84 04 00 05 	add_i s4, s4, 1
   30290:	a4 00 41 c1 	cmplt_i s5, s4, s2
   30294:	c5 fd ff f5 	bnz s5, -72 <P_FindHighestCeilingSurrounding+0x28>
   30298:	00 80 f0 c0 	move s0, s1
   3029c:	1f 00 00 f0 	ret
   302a0:	20 00 00 0f 	move s1, 0
   302a4:	00 80 f0 c0 	move s0, s1
   302a8:	1f 00 00 f0 	ret

00000000000302ac P_FindSectorFromLineTag:
   302ac:	5b 04 00 4f 	movehi s2, 59
   302b0:	7b 04 00 4f 	movehi s3, 59
   302b4:	42 80 4a 00 	or s2, s2, 4768
   302b8:	83 80 4b 00 	or s4, s3, 4832
   302bc:	62 00 00 a8 	load_32 s3, (s2)
   302c0:	40 fc ff 0f 	move s2, -1
   302c4:	84 00 00 a8 	load_32 s4, (s4)
   302c8:	21 04 00 05 	add_i s1, s1, 1
   302cc:	a1 80 31 c1 	cmpge_i s5, s1, s3
   302d0:	25 01 00 f4 	bnz s5, 36 <P_FindSectorFromLineTag+0x48>
   302d4:	a1 60 01 07 	mull_i s5, s1, 88
   302d8:	a4 80 52 c0 	add_i s5, s4, s5
   302dc:	a5 40 00 a4 	load_u16 s5, 16(s5)
   302e0:	c0 50 00 a4 	load_u16 s6, 20(s0)
   302e4:	a5 00 13 c1 	cmpne_i s5, s5, s6
   302e8:	05 ff ff f5 	bnz s5, -32 <P_FindSectorFromLineTag+0x1c>
   302ec:	00 80 f0 c0 	move s0, s1
   302f0:	1f 00 00 f0 	ret
   302f4:	20 00 f1 c0 	move s1, s2
   302f8:	00 80 f0 c0 	move s0, s1
   302fc:	1f 00 00 f0 	ret

0000000000030300 P_FindMinSurroundingLight:
   30300:	40 40 01 a8 	load_32 s2, 80(s0)
   30304:	62 04 00 14 	cmplt_i s3, s2, 1
   30308:	43 03 00 f4 	bnz s3, 104 <P_FindMinSurroundingLight+0x70>
   3030c:	60 50 01 a8 	load_32 s3, 84(s0)
   30310:	80 00 00 0f 	move s4, 0
   30314:	04 00 00 f6 	b 16 <P_FindMinSurroundingLight+0x24>
   30318:	c5 d0 00 a8 	load_32 s6, 52(s5)
   3031c:	46 02 00 f2 	bz s6, 72 <P_FindMinSurroundingLight+0x64>
   30320:	0c 00 00 f6 	b 48 <P_FindMinSurroundingLight+0x50>
   30324:	a4 08 00 0b 	shl s5, s4, 2
   30328:	a3 80 52 c0 	add_i s5, s3, s5
   3032c:	a5 00 00 a8 	load_32 s5, (s5)
   30330:	c5 40 00 a0 	load_u8 s6, 16(s5)
   30334:	c6 10 00 01 	and s6, s6, 4
   30338:	66 01 00 f2 	bz s6, 44 <P_FindMinSurroundingLight+0x64>
   3033c:	c5 c0 00 a8 	load_32 s6, 48(s5)
   30340:	e6 00 10 c1 	cmpne_i s7, s6, s0
   30344:	47 00 00 f4 	bnz s7, 8 <P_FindMinSurroundingLight+0x4c>
   30348:	f4 ff ff f7 	b -48 <P_FindMinSurroundingLight+0x18>
   3034c:	c6 00 00 f2 	bz s6, 24 <P_FindMinSurroundingLight+0x64>
   30350:	a6 30 00 a6 	load_s16 s5, 12(s6)
   30354:	c1 80 22 c1 	cmpgt_i s6, s1, s5
   30358:	46 00 00 f4 	bnz s6, 8 <P_FindMinSurroundingLight+0x60>
   3035c:	a0 80 f0 c0 	move s5, s1
   30360:	20 80 f2 c0 	move s1, s5
   30364:	84 04 00 05 	add_i s4, s4, 1
   30368:	a4 00 41 c1 	cmplt_i s5, s4, s2
   3036c:	c5 fd ff f5 	bnz s5, -72 <P_FindMinSurroundingLight+0x24>
   30370:	00 80 f0 c0 	move s0, s1
   30374:	1f 00 00 f0 	ret

0000000000030378 P_CrossSpecialLine:
   30378:	de 03 ff 05 	add_i sp, sp, -64
   3037c:	1e f3 00 88 	store_32 s24, 60(sp)
   30380:	3e e3 00 88 	store_32 s25, 56(sp)
   30384:	5e d3 00 88 	store_32 s26, 52(sp)
   30388:	fe c3 00 88 	store_32 ra, 48(sp)
   3038c:	7b 04 00 4f 	movehi s3, 59
   30390:	00 18 00 0b 	shl s0, s0, 6
   30394:	63 40 4a 00 	or s3, s3, 4752
   30398:	83 00 00 a8 	load_32 s4, (s3)
   3039c:	62 10 02 a8 	load_32 s3, 132(s2)
   303a0:	04 03 50 c0 	add_i s24, s4, s0
   303a4:	e3 01 00 f2 	bz s3, 60 <P_CrossSpecialLine+0x68>
   303a8:	18 48 00 a6 	load_s16 s0, 18(s24)
   303ac:	00 00 e0 c1 	sext_16 s0, s0
   303b0:	00 f8 ff 05 	add_i s0, s0, -2
   303b4:	80 2c 02 16 	cmpgt_u s4, s0, 139
   303b8:	04 1e 00 f4 	bnz s4, 960 <P_CrossSpecialLine+0x400>
   303bc:	83 00 00 4f 	movehi s4, 3
   303c0:	00 08 00 0b 	shl s0, s0, 2
   303c4:	58 4b 00 05 	add_i s26, s24, 18
   303c8:	84 d0 44 00 	or s4, s4, 4404
   303cc:	00 00 52 c0 	add_i s0, s0, s4
   303d0:	00 00 00 a8 	load_32 s0, (s0)
   303d4:	00 00 00 f0 	b s0
   303d8:	20 0c 00 0f 	move s1, 3
   303dc:	bd 00 00 f6 	b 756 <P_CrossSpecialLine+0x358>
   303e0:	02 60 01 a8 	load_32 s0, 88(s2)
   303e4:	80 84 ff 05 	add_i s4, s0, -31
   303e8:	84 14 00 18 	cmplt_u s4, s4, 5
   303ec:	64 1c 00 f4 	bnz s4, 908 <P_CrossSpecialLine+0x400>
   303f0:	00 40 00 10 	cmpeq_i s0, s0, 16
   303f4:	20 1c 00 f4 	bnz s0, 900 <P_CrossSpecialLine+0x400>
   303f8:	18 48 00 a6 	load_s16 s0, 18(s24)
   303fc:	80 5c 01 12 	cmpgt_i s4, s0, 87
   30400:	44 00 00 f4 	bnz s4, 8 <P_CrossSpecialLine+0x90>
   30404:	0d 00 00 f6 	b 52 <P_CrossSpecialLine+0xc0>
   30408:	80 7c fe 05 	add_i s4, s0, -97
   3040c:	a4 74 00 16 	cmpgt_u s5, s4, 29
   30410:	e5 00 00 f4 	bnz s5, 28 <P_CrossSpecialLine+0xb4>
   30414:	a0 04 00 0f 	move s5, 1
   30418:	c0 00 30 4f 	movehi s6, 98304
   3041c:	85 00 b2 c0 	shl s4, s5, s4
   30420:	a6 04 00 00 	or s5, s6, 1
   30424:	84 80 12 c0 	and s4, s4, s5
   30428:	24 fc ff f5 	bnz s4, -124 <P_CrossSpecialLine+0x34>
   3042c:	80 60 01 10 	cmpeq_i s4, s0, 88
   30430:	e4 fb ff f5 	bnz s4, -132 <P_CrossSpecialLine+0x34>
   30434:	d1 00 00 f6 	b 836 <P_CrossSpecialLine+0x400>
   30438:	80 10 00 10 	cmpeq_i s4, s0, 4
   3043c:	84 fb ff f5 	bnz s4, -144 <P_CrossSpecialLine+0x34>
   30440:	80 28 00 10 	cmpeq_i s4, s0, 10
   30444:	44 fb ff f5 	bnz s4, -152 <P_CrossSpecialLine+0x34>
   30448:	80 9c 00 10 	cmpeq_i s4, s0, 39
   3044c:	04 fb ff f5 	bnz s4, -160 <P_CrossSpecialLine+0x34>
   30450:	ca 00 00 f6 	b 808 <P_CrossSpecialLine+0x400>
   30454:	20 08 00 0f 	move s1, 2
   30458:	9e 00 00 f6 	b 632 <P_CrossSpecialLine+0x358>
   3045c:	20 03 00 0f 	move s25, 0
   30460:	00 00 fc c0 	move s0, s24
   30464:	20 80 fc c0 	move s1, s25
   30468:	03 c2 ff f9 	call -63476 <EV_DoDoor>
   3046c:	3a 03 00 86 	store_16 s25, (s26)
   30470:	c2 00 00 f6 	b 776 <P_CrossSpecialLine+0x400>
   30474:	20 0c 00 0f 	move s1, 3
   30478:	b8 00 00 f6 	b 736 <P_CrossSpecialLine+0x3e0>
   3047c:	20 10 00 0f 	move s1, 4
   30480:	ba 00 00 f6 	b 744 <P_CrossSpecialLine+0x3f0>
   30484:	20 03 00 0f 	move s25, 0
   30488:	00 00 fc c0 	move s0, s24
   3048c:	20 80 fc c0 	move s1, s25
   30490:	c3 d4 ff f9 	call -44276 <EV_BuildStairs>
   30494:	3a 03 00 86 	store_16 s25, (s26)
   30498:	b8 00 00 f6 	b 736 <P_CrossSpecialLine+0x400>
   3049c:	20 04 00 0f 	move s1, 1
   304a0:	97 00 00 f6 	b 604 <P_CrossSpecialLine+0x384>
   304a4:	20 03 00 0f 	move s25, 0
   304a8:	00 00 fc c0 	move s0, s24
   304ac:	20 80 fc c0 	move s1, s25
   304b0:	41 dc ff f9 	call -36604 <EV_LightTurnOn>
   304b4:	3a 03 00 86 	store_16 s25, (s26)
   304b8:	b0 00 00 f6 	b 704 <P_CrossSpecialLine+0x400>
   304bc:	20 fc 03 0f 	move s1, 255
   304c0:	13 00 00 f6 	b 76 <P_CrossSpecialLine+0x194>
   304c4:	20 04 00 0f 	move s1, 1
   304c8:	82 00 00 f6 	b 520 <P_CrossSpecialLine+0x358>
   304cc:	00 00 fc c0 	move s0, s24
   304d0:	b3 db ff f9 	call -37172 <EV_StartLightStrobing>
   304d4:	a7 00 00 f6 	b 668 <P_CrossSpecialLine+0x3f8>
   304d8:	20 03 00 0f 	move s25, 0
   304dc:	00 00 fc c0 	move s0, s24
   304e0:	20 80 fc c0 	move s1, s25
   304e4:	53 d3 ff f9 	call -45748 <EV_DoFloor>
   304e8:	3a 03 00 86 	store_16 s25, (s26)
   304ec:	a3 00 00 f6 	b 652 <P_CrossSpecialLine+0x400>
   304f0:	20 0c 00 0f 	move s1, 3
   304f4:	82 00 00 f6 	b 520 <P_CrossSpecialLine+0x384>
   304f8:	20 0c 00 0f 	move s1, 3
   304fc:	9b 00 00 f6 	b 620 <P_CrossSpecialLine+0x3f0>
   30500:	20 14 00 0f 	move s1, 5
   30504:	95 00 00 f6 	b 596 <P_CrossSpecialLine+0x3e0>
   30508:	20 8c 00 0f 	move s1, 35
   3050c:	00 00 fc c0 	move s0, s24
   30510:	29 dc ff f9 	call -36700 <EV_LightTurnOn>
   30514:	97 00 00 f6 	b 604 <P_CrossSpecialLine+0x3f8>
   30518:	20 08 00 0f 	move s1, 2
   3051c:	8f 00 00 f6 	b 572 <P_CrossSpecialLine+0x3e0>
   30520:	20 18 00 0f 	move s1, 6
   30524:	8d 00 00 f6 	b 564 <P_CrossSpecialLine+0x3e0>
   30528:	20 04 00 0f 	move s1, 1
   3052c:	8b 00 00 f6 	b 556 <P_CrossSpecialLine+0x3e0>
   30530:	20 07 00 0f 	move s25, 1
   30534:	00 00 fc c0 	move s0, s24
   30538:	20 80 fc c0 	move s1, s25
   3053c:	9c bf ff f9 	call -65936 <EV_DoCeiling>
   30540:	00 00 fc c0 	move s0, s24
   30544:	20 80 fc c0 	move s1, s25
   30548:	85 00 00 f6 	b 532 <P_CrossSpecialLine+0x3e4>
   3054c:	20 08 00 0f 	move s1, 2
   30550:	86 00 00 f6 	b 536 <P_CrossSpecialLine+0x3f0>
   30554:	ca 9a ff f9 	call -103640 <G_ExitLevel>
   30558:	88 00 00 f6 	b 544 <P_CrossSpecialLine+0x400>
   3055c:	20 03 00 0f 	move s25, 0
   30560:	00 00 fc c0 	move s0, s24
   30564:	20 80 fc c0 	move s1, s25
   30568:	67 00 00 f6 	b 412 <P_CrossSpecialLine+0x38c>
   3056c:	00 00 fc c0 	move s0, s24
   30570:	ae ed ff f9 	call -18760 <EV_StopPlat>
   30574:	7f 00 00 f6 	b 508 <P_CrossSpecialLine+0x3f8>
   30578:	20 24 00 0f 	move s1, 9
   3057c:	77 00 00 f6 	b 476 <P_CrossSpecialLine+0x3e0>
   30580:	00 00 fc c0 	move s0, s24
   30584:	ef c0 ff f9 	call -64580 <EV_CeilingCrushStop>
   30588:	7a 00 00 f6 	b 488 <P_CrossSpecialLine+0x3f8>
   3058c:	20 1c 00 0f 	move s1, 7
   30590:	72 00 00 f6 	b 456 <P_CrossSpecialLine+0x3e0>
   30594:	20 20 00 0f 	move s1, 8
   30598:	70 00 00 f6 	b 448 <P_CrossSpecialLine+0x3e0>
   3059c:	20 08 00 0f 	move s1, 2
   305a0:	0b 00 00 f6 	b 44 <P_CrossSpecialLine+0x254>
   305a4:	20 0c 00 0f 	move s1, 3
   305a8:	09 00 00 f6 	b 36 <P_CrossSpecialLine+0x254>
   305ac:	00 00 fc c0 	move s0, s24
   305b0:	e4 c0 ff f9 	call -64624 <EV_CeilingCrushStop>
   305b4:	71 00 00 f6 	b 452 <P_CrossSpecialLine+0x400>
   305b8:	20 08 00 0f 	move s1, 2
   305bc:	3d 00 00 f6 	b 244 <P_CrossSpecialLine+0x338>
   305c0:	20 04 00 0f 	move s1, 1
   305c4:	3b 00 00 f6 	b 236 <P_CrossSpecialLine+0x338>
   305c8:	20 10 00 0f 	move s1, 4
   305cc:	00 00 fc c0 	move s0, s24
   305d0:	77 bf ff f9 	call -66084 <EV_DoCeiling>
   305d4:	69 00 00 f6 	b 420 <P_CrossSpecialLine+0x400>
   305d8:	20 8c 00 0f 	move s1, 35
   305dc:	04 00 00 f6 	b 16 <P_CrossSpecialLine+0x274>
   305e0:	20 00 00 0f 	move s1, 0
   305e4:	02 00 00 f6 	b 8 <P_CrossSpecialLine+0x274>
   305e8:	20 fc 03 0f 	move s1, 255
   305ec:	00 00 fc c0 	move s0, s24
   305f0:	f1 db ff f9 	call -36924 <EV_LightTurnOn>
   305f4:	61 00 00 f6 	b 388 <P_CrossSpecialLine+0x400>
   305f8:	20 04 00 0f 	move s1, 1
   305fc:	53 00 00 f6 	b 332 <P_CrossSpecialLine+0x3d0>
   30600:	20 00 00 0f 	move s1, 0
   30604:	51 00 00 f6 	b 324 <P_CrossSpecialLine+0x3d0>
   30608:	20 18 00 0f 	move s1, 6
   3060c:	4f 00 00 f6 	b 316 <P_CrossSpecialLine+0x3d0>
   30610:	20 0c 00 0f 	move s1, 3
   30614:	27 00 00 f6 	b 156 <P_CrossSpecialLine+0x338>
   30618:	20 00 00 0f 	move s1, 0
   3061c:	00 00 fc c0 	move s0, s24
   30620:	40 80 f0 c0 	move s2, s1
   30624:	b9 eb ff f9 	call -20764 <EV_DoPlat>
   30628:	54 00 00 f6 	b 336 <P_CrossSpecialLine+0x400>
   3062c:	20 04 00 0f 	move s1, 1
   30630:	2e 00 00 f6 	b 184 <P_CrossSpecialLine+0x370>
   30634:	00 00 fc c0 	move s0, s24
   30638:	7c ed ff f9 	call -18960 <EV_StopPlat>
   3063c:	4f 00 00 f6 	b 316 <P_CrossSpecialLine+0x400>
   30640:	20 00 00 0f 	move s1, 0
   30644:	1b 00 00 f6 	b 108 <P_CrossSpecialLine+0x338>
   30648:	20 0c 00 0f 	move s1, 3
   3064c:	3f 00 00 f6 	b 252 <P_CrossSpecialLine+0x3d0>
   30650:	20 1c 00 0f 	move s1, 7
   30654:	3d 00 00 f6 	b 244 <P_CrossSpecialLine+0x3d0>
   30658:	20 20 00 0f 	move s1, 8
   3065c:	3b 00 00 f6 	b 236 <P_CrossSpecialLine+0x3d0>
   30660:	20 24 00 0f 	move s1, 9
   30664:	39 00 00 f6 	b 228 <P_CrossSpecialLine+0x3d0>
   30668:	20 0c 00 0f 	move s1, 3
   3066c:	1f 00 00 f6 	b 124 <P_CrossSpecialLine+0x370>
   30670:	20 14 00 0f 	move s1, 5
   30674:	35 00 00 f6 	b 212 <P_CrossSpecialLine+0x3d0>
   30678:	20 08 00 0f 	move s1, 2
   3067c:	33 00 00 f6 	b 204 <P_CrossSpecialLine+0x3d0>
   30680:	20 04 00 0f 	move s1, 1
   30684:	00 00 fc c0 	move s0, s24
   30688:	45 d4 ff f9 	call -44780 <EV_BuildStairs>
   3068c:	39 00 00 f6 	b 228 <P_CrossSpecialLine+0x3f8>
   30690:	00 00 fc c0 	move s0, s24
   30694:	8e db ff f9 	call -37320 <EV_TurnTagLightsOff>
   30698:	36 00 00 f6 	b 216 <P_CrossSpecialLine+0x3f8>
   3069c:	20 14 00 0f 	move s1, 5
   306a0:	04 00 00 f6 	b 16 <P_CrossSpecialLine+0x338>
   306a4:	20 18 00 0f 	move s1, 6
   306a8:	02 00 00 f6 	b 8 <P_CrossSpecialLine+0x338>
   306ac:	20 1c 00 0f 	move s1, 7
   306b0:	00 00 fc c0 	move s0, s24
   306b4:	70 c1 ff f9 	call -64064 <EV_DoDoor>
   306b8:	30 00 00 f6 	b 192 <P_CrossSpecialLine+0x400>
   306bc:	20 14 00 0f 	move s1, 5
   306c0:	04 00 00 f6 	b 16 <P_CrossSpecialLine+0x358>
   306c4:	20 18 00 0f 	move s1, 6
   306c8:	02 00 00 f6 	b 8 <P_CrossSpecialLine+0x358>
   306cc:	20 1c 00 0f 	move s1, 7
   306d0:	00 00 fc c0 	move s0, s24
   306d4:	68 c1 ff f9 	call -64096 <EV_DoDoor>
   306d8:	26 00 00 f6 	b 152 <P_CrossSpecialLine+0x3f8>
   306dc:	20 10 00 0f 	move s1, 4
   306e0:	1e 00 00 f6 	b 120 <P_CrossSpecialLine+0x3e0>
   306e4:	20 10 00 0f 	move s1, 4
   306e8:	40 00 00 0f 	move s2, 0
   306ec:	00 00 fc c0 	move s0, s24
   306f0:	86 eb ff f9 	call -20968 <EV_DoPlat>
   306f4:	21 00 00 f6 	b 132 <P_CrossSpecialLine+0x400>
   306f8:	20 10 00 0f 	move s1, 4
   306fc:	20 03 00 0f 	move s25, 0
   30700:	00 00 fc c0 	move s0, s24
   30704:	40 80 fc c0 	move s2, s25
   30708:	80 eb ff f9 	call -20992 <EV_DoPlat>
   3070c:	3a 03 00 86 	store_16 s25, (s26)
   30710:	1a 00 00 f6 	b 104 <P_CrossSpecialLine+0x400>
   30714:	63 9a ff f9 	call -104052 <G_SecretExitLevel>
   30718:	18 00 00 f6 	b 96 <P_CrossSpecialLine+0x400>
   3071c:	e3 02 00 f4 	bnz s3, 92 <P_CrossSpecialLine+0x400>
   30720:	00 00 fc c0 	move s0, s24
   30724:	72 0c 00 f8 	call 12744 <EV_Teleport>
   30728:	12 00 00 f6 	b 72 <P_CrossSpecialLine+0x3f8>
   3072c:	63 02 00 f4 	bnz s3, 76 <P_CrossSpecialLine+0x400>
   30730:	00 00 fc c0 	move s0, s24
   30734:	6e 0c 00 f8 	call 12728 <EV_Teleport>
   30738:	10 00 00 f6 	b 64 <P_CrossSpecialLine+0x400>
   3073c:	20 10 00 0f 	move s1, 4
   30740:	02 00 00 f6 	b 8 <P_CrossSpecialLine+0x3d0>
   30744:	20 28 00 0f 	move s1, 10
   30748:	00 00 fc c0 	move s0, s24
   3074c:	b9 d2 ff f9 	call -46364 <EV_DoFloor>
   30750:	0a 00 00 f6 	b 40 <P_CrossSpecialLine+0x400>
   30754:	20 28 00 0f 	move s1, 10
   30758:	00 00 fc c0 	move s0, s24
   3075c:	b5 d2 ff f9 	call -46380 <EV_DoFloor>
   30760:	04 00 00 f6 	b 16 <P_CrossSpecialLine+0x3f8>
   30764:	20 14 00 0f 	move s1, 5
   30768:	00 00 fc c0 	move s0, s24
   3076c:	10 bf ff f9 	call -66496 <EV_DoCeiling>
   30770:	00 00 00 0f 	move s0, 0
   30774:	1a 00 00 86 	store_16 s0, (s26)
   30778:	fe c3 00 a8 	load_32 ra, 48(sp)
   3077c:	5e d3 00 a8 	load_32 s26, 52(sp)
   30780:	3e e3 00 a8 	load_32 s25, 56(sp)
   30784:	1e f3 00 a8 	load_32 s24, 60(sp)
   30788:	de 03 01 05 	add_i sp, sp, 64
   3078c:	1f 00 00 f0 	ret

0000000000030790 P_ShootSpecialLine:
   30790:	de 03 ff 05 	add_i sp, sp, -64
   30794:	1e f3 00 88 	store_32 s24, 60(sp)
   30798:	3e e3 00 88 	store_32 s25, 56(sp)
   3079c:	fe d3 00 88 	store_32 ra, 52(sp)
   307a0:	40 10 02 a8 	load_32 s2, 132(s0)
   307a4:	00 83 f0 c0 	move s24, s1
   307a8:	18 48 00 a6 	load_s16 s0, 18(s24)
   307ac:	42 00 00 f4 	bnz s2, 8 <P_ShootSpecialLine+0x24>
   307b0:	0d 00 00 f6 	b 52 <P_ShootSpecialLine+0x54>
   307b4:	20 bc 00 10 	cmpeq_i s1, s0, 47
   307b8:	81 02 00 f4 	bnz s1, 80 <P_ShootSpecialLine+0x78>
   307bc:	20 b8 00 10 	cmpeq_i s1, s0, 46
   307c0:	81 01 00 f4 	bnz s1, 48 <P_ShootSpecialLine+0x60>
   307c4:	00 60 00 11 	cmpne_i s0, s0, 24
   307c8:	00 03 00 f4 	bnz s0, 96 <P_ShootSpecialLine+0x98>
   307cc:	20 0c 00 0f 	move s1, 3
   307d0:	00 00 fc c0 	move s0, s24
   307d4:	97 d2 ff f9 	call -46500 <EV_DoFloor>
   307d8:	20 00 00 0f 	move s1, 0
   307dc:	00 00 fc c0 	move s0, s24
   307e0:	11 00 00 f6 	b 68 <P_ShootSpecialLine+0x94>
   307e4:	00 b8 00 10 	cmpeq_i s0, s0, 46
   307e8:	40 00 00 f4 	bnz s0, 8 <P_ShootSpecialLine+0x60>
   307ec:	0f 00 00 f6 	b 60 <P_ShootSpecialLine+0x98>
   307f0:	20 0c 00 0f 	move s1, 3
   307f4:	00 00 fc c0 	move s0, s24
   307f8:	1f c1 ff f9 	call -64388 <EV_DoDoor>
   307fc:	20 04 00 0f 	move s1, 1
   30800:	00 00 fc c0 	move s0, s24
   30804:	08 00 00 f6 	b 32 <P_ShootSpecialLine+0x94>
   30808:	20 03 00 0f 	move s25, 0
   3080c:	00 00 fc c0 	move s0, s24
   30810:	20 0c 00 0f 	move s1, 3
   30814:	40 80 fc c0 	move s2, s25
   30818:	3c eb ff f9 	call -21264 <EV_DoPlat>
   3081c:	00 00 fc c0 	move s0, s24
   30820:	20 80 fc c0 	move s1, s25
   30824:	da 03 00 f8 	call 3944 <P_ChangeSwitchTexture>
   30828:	fe d3 00 a8 	load_32 ra, 52(sp)
   3082c:	3e e3 00 a8 	load_32 s25, 56(sp)
   30830:	1e f3 00 a8 	load_32 s24, 60(sp)
   30834:	de 03 01 05 	add_i sp, sp, 64
   30838:	1f 00 00 f0 	ret

000000000003083c P_PlayerInSpecialSector:
   3083c:	de 03 fe 05 	add_i sp, sp, -128
   30840:	1e f3 01 88 	store_32 s24, 124(sp)
   30844:	fe e3 01 88 	store_32 ra, 120(sp)
   30848:	00 03 f0 c0 	move s24, s0
   3084c:	18 00 00 a8 	load_32 s0, (s24)
   30850:	20 d0 00 a8 	load_32 s1, 52(s0)
   30854:	21 00 00 a8 	load_32 s1, (s1)
   30858:	40 50 00 a8 	load_32 s2, 20(s0)
   3085c:	61 00 00 a8 	load_32 s3, (s1)
   30860:	42 80 11 c1 	cmpne_i s2, s2, s3
   30864:	82 0a 00 f4 	bnz s2, 336 <P_PlayerInSpecialSector+0x178>
   30868:	41 38 00 a6 	load_s16 s2, 14(s1)
   3086c:	62 f0 ff 05 	add_i s3, s2, -4
   30870:	83 30 00 16 	cmpgt_u s4, s3, 12
   30874:	e4 03 00 f4 	bnz s4, 124 <P_PlayerInSpecialSector+0xb4>
   30878:	83 00 00 4f 	movehi s4, 3
   3087c:	63 08 00 0b 	shl s3, s3, 2
   30880:	84 90 4d 00 	or s4, s4, 4964
   30884:	63 00 52 c0 	add_i s3, s3, s4
   30888:	63 00 00 a8 	load_32 s3, (s3)
   3088c:	03 00 00 f0 	b s3
   30890:	18 e0 00 a8 	load_32 s0, 56(s24)
   30894:	80 00 00 f2 	bz s0, 16 <P_PlayerInSpecialSector+0x68>
   30898:	97 ae ff f9 	call -83364 <P_Random>
   3089c:	00 10 00 12 	cmpgt_i s0, s0, 4
   308a0:	a0 08 00 f4 	bnz s0, 276 <P_PlayerInSpecialSector+0x178>
   308a4:	1c 04 00 4f 	movehi s0, 60
   308a8:	00 40 02 00 	or s0, s0, 144
   308ac:	00 00 00 a0 	load_u8 s0, (s0)
   308b0:	00 7c 00 01 	and s0, s0, 31
   308b4:	00 08 00 f4 	bnz s0, 256 <P_PlayerInSpecialSector+0x178>
   308b8:	18 00 00 a8 	load_32 s0, (s24)
   308bc:	20 00 00 0f 	move s1, 0
   308c0:	60 50 00 0f 	move s3, 20
   308c4:	1d 00 00 f6 	b 116 <P_PlayerInSpecialSector+0xfc>
   308c8:	38 e0 00 a8 	load_32 s1, 56(s24)
   308cc:	41 07 00 f4 	bnz s1, 232 <P_PlayerInSpecialSector+0x178>
   308d0:	3c 04 00 4f 	movehi s1, 60
   308d4:	21 40 02 00 	or s1, s1, 144
   308d8:	21 00 00 a0 	load_u8 s1, (s1)
   308dc:	21 7c 00 01 	and s1, s1, 31
   308e0:	a1 06 00 f4 	bnz s1, 212 <P_PlayerInSpecialSector+0x178>
   308e4:	20 00 00 0f 	move s1, 0
   308e8:	60 28 00 0f 	move s3, 10
   308ec:	13 00 00 f6 	b 76 <P_PlayerInSpecialSector+0xfc>
   308f0:	00 00 00 4f 	movehi s0, 0
   308f4:	5e 10 00 88 	store_32 s2, 4(sp)
   308f8:	00 70 53 00 	or s0, s0, 5340
   308fc:	1e 00 00 88 	store_32 s0, (sp)
   30900:	01 76 ff f9 	call -141308 <I_Error>
   30904:	fe e3 01 a8 	load_32 ra, 120(sp)
   30908:	1e f3 01 a8 	load_32 s24, 124(sp)
   3090c:	de 03 02 05 	add_i sp, sp, 128
   30910:	1f 00 00 f0 	ret
   30914:	38 e0 00 a8 	load_32 s1, 56(s24)
   30918:	e1 04 00 f4 	bnz s1, 156 <P_PlayerInSpecialSector+0x178>
   3091c:	3c 04 00 4f 	movehi s1, 60
   30920:	21 40 02 00 	or s1, s1, 144
   30924:	21 00 00 a0 	load_u8 s1, (s1)
   30928:	21 7c 00 01 	and s1, s1, 31
   3092c:	41 04 00 f4 	bnz s1, 136 <P_PlayerInSpecialSector+0x178>
   30930:	20 00 00 0f 	move s1, 0
   30934:	60 14 00 0f 	move s3, 5
   30938:	40 80 f0 c0 	move s2, s1
   3093c:	d5 d8 ff f9 	call -40108 <P_DamageMobj>
   30940:	fe e3 01 a8 	load_32 ra, 120(sp)
   30944:	1e f3 01 a8 	load_32 s24, 124(sp)
   30948:	de 03 02 05 	add_i sp, sp, 128
   3094c:	1f 00 00 f0 	ret
   30950:	18 50 03 a8 	load_32 s0, 212(s24)
   30954:	00 04 00 05 	add_i s0, s0, 1
   30958:	18 50 03 88 	store_32 s0, 212(s24)
   3095c:	00 00 00 0f 	move s0, 0
   30960:	01 38 00 86 	store_16 s0, 14(s1)
   30964:	fe e3 01 a8 	load_32 ra, 120(sp)
   30968:	1e f3 01 a8 	load_32 s24, 124(sp)
   3096c:	de 03 02 05 	add_i sp, sp, 128
   30970:	1f 00 00 f0 	ret
   30974:	5c 04 00 4f 	movehi s2, 60
   30978:	38 10 03 a8 	load_32 s1, 196(s24)
   3097c:	42 40 02 00 	or s2, s2, 144
   30980:	21 f4 ff 01 	and s1, s1, -3
   30984:	38 10 03 88 	store_32 s1, 196(s24)
   30988:	22 00 00 a0 	load_u8 s1, (s2)
   3098c:	21 7c 00 01 	and s1, s1, 31
   30990:	a1 00 00 f4 	bnz s1, 20 <P_PlayerInSpecialSector+0x168>
   30994:	20 00 00 0f 	move s1, 0
   30998:	60 50 00 0f 	move s3, 20
   3099c:	40 80 f0 c0 	move s2, s1
   309a0:	bc d8 ff f9 	call -40208 <P_DamageMobj>
   309a4:	18 80 00 a8 	load_32 s0, 32(s24)
   309a8:	00 28 00 12 	cmpgt_i s0, s0, 10
   309ac:	40 00 00 f4 	bnz s0, 8 <P_PlayerInSpecialSector+0x178>
   309b0:	b3 99 ff f9 	call -104756 <G_ExitLevel>
   309b4:	fe e3 01 a8 	load_32 ra, 120(sp)
   309b8:	1e f3 01 a8 	load_32 s24, 124(sp)
   309bc:	de 03 02 05 	add_i sp, sp, 128
   309c0:	1f 00 00 f0 	ret

00000000000309c4 P_UpdateSpecials:
   309c4:	de 03 ff 05 	add_i sp, sp, -64
   309c8:	1e f3 00 88 	store_32 s24, 60(sp)
   309cc:	3e e3 00 88 	store_32 s25, 56(sp)
   309d0:	5e d3 00 88 	store_32 s26, 52(sp)
   309d4:	7e c3 00 88 	store_32 s27, 48(sp)
   309d8:	fe b3 00 88 	store_32 ra, 44(sp)
   309dc:	1b 04 00 4f 	movehi s0, 59
   309e0:	00 a0 56 00 	or s0, s0, 5544
   309e4:	00 00 00 a8 	load_32 s0, (s0)
   309e8:	00 04 00 11 	cmpne_i s0, s0, 1
   309ec:	00 01 00 f4 	bnz s0, 32 <P_UpdateSpecials+0x48>
   309f0:	1b 04 00 4f 	movehi s0, 59
   309f4:	00 90 56 00 	or s0, s0, 5540
   309f8:	20 00 00 a8 	load_32 s1, (s0)
   309fc:	21 fc ff 05 	add_i s1, s1, -1
   30a00:	20 00 00 88 	store_32 s1, (s0)
   30a04:	41 00 00 f4 	bnz s1, 8 <P_UpdateSpecials+0x48>
   30a08:	9d 99 ff f9 	call -104844 <G_ExitLevel>
   30a0c:	1b 04 00 4f 	movehi s0, 59
   30a10:	00 80 56 00 	or s0, s0, 5536
   30a14:	20 00 00 a8 	load_32 s1, (s0)
   30a18:	1b 04 00 4f 	movehi s0, 59
   30a1c:	3e 70 00 88 	store_32 s1, 28(sp)
   30a20:	40 83 4c 00 	or s26, s0, 4896
   30a24:	01 00 9d c1 	cmple_u s0, s1, s26
   30a28:	a0 07 00 f4 	bnz s0, 244 <P_UpdateSpecials+0x158>
   30a2c:	1d 04 00 4f 	movehi s0, 61
   30a30:	3d 04 00 4f 	movehi s1, 61
   30a34:	5c 04 00 4f 	movehi s2, 60
   30a38:	00 a0 48 00 	or s0, s0, 4648
   30a3c:	21 70 47 00 	or s1, s1, 4572
   30a40:	00 00 00 a8 	load_32 s0, (s0)
   30a44:	1e 90 00 88 	store_32 s0, 36(sp)
   30a48:	01 00 00 a8 	load_32 s0, (s1)
   30a4c:	22 40 02 00 	or s1, s2, 144
   30a50:	1e 80 00 88 	store_32 s0, 32(sp)
   30a54:	3e a0 00 88 	store_32 s1, 40(sp)
   30a58:	3a 23 00 a8 	load_32 s25, 8(s26)
   30a5c:	1a 33 00 a8 	load_32 s24, 12(s26)
   30a60:	18 04 00 14 	cmplt_i s0, s24, 1
   30a64:	40 05 00 f4 	bnz s0, 168 <P_UpdateSpecials+0x148>
   30a68:	1a 00 00 a8 	load_32 s0, (s26)
   30a6c:	a0 02 00 f2 	bz s0, 84 <P_UpdateSpecials+0xfc>
   30a70:	60 83 fc c0 	move s27, s25
   30a74:	01 00 00 a8 	load_32 s0, (s1)
   30a78:	3a 40 00 a8 	load_32 s1, 16(s26)
   30a7c:	f7 8f 00 f8 	call 147420 <__divsi3>
   30a80:	00 80 5d c0 	add_i s0, s0, s27
   30a84:	20 00 fc c0 	move s1, s24
   30a88:	1c 90 00 f8 	call 147568 <__modsi3>
   30a8c:	5e 90 00 a8 	load_32 s2, 36(sp)
   30a90:	3b 08 00 0b 	shl s1, s27, 2
   30a94:	00 80 5c c0 	add_i s0, s0, s25
   30a98:	7b 07 00 05 	add_i s27, s27, 1
   30a9c:	22 80 50 c0 	add_i s1, s2, s1
   30aa0:	01 00 00 88 	store_32 s0, (s1)
   30aa4:	3e a0 00 a8 	load_32 s1, 40(sp)
   30aa8:	3a 23 00 a8 	load_32 s25, 8(s26)
   30aac:	1a 33 00 a8 	load_32 s24, 12(s26)
   30ab0:	18 80 5c c0 	add_i s0, s24, s25
   30ab4:	1b 00 40 c1 	cmplt_i s0, s27, s0
   30ab8:	e0 fd ff f5 	bnz s0, -68 <P_UpdateSpecials+0xb0>
   30abc:	14 00 00 f6 	b 80 <P_UpdateSpecials+0x148>
   30ac0:	60 83 fc c0 	move s27, s25
   30ac4:	01 00 00 a8 	load_32 s0, (s1)
   30ac8:	3a 40 00 a8 	load_32 s1, 16(s26)
   30acc:	e3 8f 00 f8 	call 147340 <__divsi3>
   30ad0:	00 80 5d c0 	add_i s0, s0, s27
   30ad4:	20 00 fc c0 	move s1, s24
   30ad8:	08 90 00 f8 	call 147488 <__modsi3>
   30adc:	5e 80 00 a8 	load_32 s2, 32(sp)
   30ae0:	3b 08 00 0b 	shl s1, s27, 2
   30ae4:	00 80 5c c0 	add_i s0, s0, s25
   30ae8:	7b 07 00 05 	add_i s27, s27, 1
   30aec:	22 80 50 c0 	add_i s1, s2, s1
   30af0:	01 00 00 88 	store_32 s0, (s1)
   30af4:	3e a0 00 a8 	load_32 s1, 40(sp)
   30af8:	3a 23 00 a8 	load_32 s25, 8(s26)
   30afc:	1a 33 00 a8 	load_32 s24, 12(s26)
   30b00:	18 80 5c c0 	add_i s0, s24, s25
   30b04:	1b 00 40 c1 	cmplt_i s0, s27, s0
   30b08:	e0 fd ff f5 	bnz s0, -68 <P_UpdateSpecials+0x100>
   30b0c:	1e 70 00 a8 	load_32 s0, 28(sp)
   30b10:	5a 53 00 05 	add_i s26, s26, 20
   30b14:	1a 00 80 c1 	cmplt_u s0, s26, s0
   30b18:	00 fa ff f5 	bnz s0, -192 <P_UpdateSpecials+0x94>
   30b1c:	1b 04 00 4f 	movehi s0, 59
   30b20:	00 b0 5a 00 	or s0, s0, 5804
   30b24:	00 00 00 a6 	load_s16 s0, (s0)
   30b28:	20 04 00 14 	cmplt_i s1, s0, 1
   30b2c:	e1 02 00 f4 	bnz s1, 92 <P_UpdateSpecials+0x1c4>
   30b30:	3b 04 00 4f 	movehi s1, 59
   30b34:	7b 04 00 4f 	movehi s3, 59
   30b38:	40 00 00 0f 	move s2, 0
   30b3c:	21 a0 4b 00 	or s1, s1, 4840
   30b40:	63 b0 56 00 	or s3, s3, 5548
   30b44:	88 00 00 4f 	movehi s4, 8
   30b48:	21 00 00 a8 	load_32 s1, (s1)
   30b4c:	a2 08 00 0b 	shl s5, s2, 2
   30b50:	a3 80 52 c0 	add_i s5, s3, s5
   30b54:	a5 00 00 a8 	load_32 s5, (s5)
   30b58:	c5 48 00 a4 	load_u16 s6, 18(s5)
   30b5c:	c6 c0 00 11 	cmpne_i s6, s6, 48
   30b60:	e6 00 00 f4 	bnz s6, 28 <P_UpdateSpecials+0x1b8>
   30b64:	a5 58 00 a6 	load_s16 s5, 22(s5)
   30b68:	a5 50 00 07 	mull_i s5, s5, 20
   30b6c:	a1 80 52 c0 	add_i s5, s1, s5
   30b70:	c5 00 00 a8 	load_32 s6, (s5)
   30b74:	c6 00 52 c0 	add_i s6, s6, s4
   30b78:	c5 00 00 88 	store_32 s6, (s5)
   30b7c:	42 04 00 05 	add_i s2, s2, 1
   30b80:	a2 00 40 c1 	cmplt_i s5, s2, s0
   30b84:	45 fe ff f5 	bnz s5, -56 <P_UpdateSpecials+0x188>
   30b88:	1b 04 00 4f 	movehi s0, 59
   30b8c:	3b 04 00 4f 	movehi s1, 59
   30b90:	60 03 00 0f 	move s27, 0
   30b94:	40 c3 5a 00 	or s26, s0, 5808
   30b98:	01 a0 4b 00 	or s0, s1, 4840
   30b9c:	1e 90 00 88 	store_32 s0, 36(sp)
   30ba0:	00 5c 00 0f 	move s0, 23
   30ba4:	1e a0 00 88 	store_32 s0, 40(sp)
   30ba8:	20 83 fd c0 	move s25, s27
   30bac:	19 50 00 07 	mull_i s0, s25, 20
   30bb0:	1a 03 50 c0 	add_i s24, s26, s0
   30bb4:	18 30 00 a8 	load_32 s0, 12(s24)
   30bb8:	c0 00 00 f2 	bz s0, 24 <P_UpdateSpecials+0x20c>
   30bbc:	00 fc ff 05 	add_i s0, s0, -1
   30bc0:	38 30 00 05 	add_i s1, s24, 12
   30bc4:	01 00 00 88 	store_32 s0, (s1)
   30bc8:	40 00 00 f4 	bnz s0, 8 <P_UpdateSpecials+0x20c>
   30bcc:	05 00 00 f6 	b 20 <P_UpdateSpecials+0x21c>
   30bd0:	39 07 00 05 	add_i s25, s25, 1
   30bd4:	19 40 00 18 	cmplt_u s0, s25, 16
   30bd8:	a0 fe ff f5 	bnz s0, -44 <P_UpdateSpecials+0x1e8>
   30bdc:	2c 00 00 f6 	b 176 <P_UpdateSpecials+0x2c8>
   30be0:	18 10 00 a8 	load_32 s0, 4(s24)
   30be4:	20 08 00 10 	cmpeq_i s1, s0, 2
   30be8:	c1 02 00 f4 	bnz s1, 88 <P_UpdateSpecials+0x27c>
   30bec:	20 04 00 10 	cmpeq_i s1, s0, 1
   30bf0:	61 01 00 f4 	bnz s1, 44 <P_UpdateSpecials+0x258>
   30bf4:	60 03 00 f4 	bnz s0, 108 <P_UpdateSpecials+0x29c>
   30bf8:	18 20 00 a8 	load_32 s0, 8(s24)
   30bfc:	3e 90 00 a8 	load_32 s1, 36(sp)
   30c00:	21 00 00 a8 	load_32 s1, (s1)
   30c04:	58 00 00 a8 	load_32 s2, (s24)
   30c08:	42 58 00 a6 	load_s16 s2, 22(s2)
   30c0c:	42 50 00 07 	mull_i s2, s2, 20
   30c10:	21 00 51 c0 	add_i s1, s1, s2
   30c14:	01 20 00 86 	store_16 s0, 8(s1)
   30c18:	12 00 00 f6 	b 72 <P_UpdateSpecials+0x29c>
   30c1c:	18 20 00 a8 	load_32 s0, 8(s24)
   30c20:	3e 90 00 a8 	load_32 s1, 36(sp)
   30c24:	21 00 00 a8 	load_32 s1, (s1)
   30c28:	58 00 00 a8 	load_32 s2, (s24)
   30c2c:	42 58 00 a6 	load_s16 s2, 22(s2)
   30c30:	42 50 00 07 	mull_i s2, s2, 20
   30c34:	21 00 51 c0 	add_i s1, s1, s2
   30c38:	01 30 00 86 	store_16 s0, 12(s1)
   30c3c:	09 00 00 f6 	b 36 <P_UpdateSpecials+0x29c>
   30c40:	18 20 00 a8 	load_32 s0, 8(s24)
   30c44:	3e 90 00 a8 	load_32 s1, 36(sp)
   30c48:	21 00 00 a8 	load_32 s1, (s1)
   30c4c:	58 00 00 a8 	load_32 s2, (s24)
   30c50:	42 58 00 a6 	load_s16 s2, 22(s2)
   30c54:	42 50 00 07 	mull_i s2, s2, 20
   30c58:	21 00 51 c0 	add_i s1, s1, s2
   30c5c:	01 28 00 86 	store_16 s0, 10(s1)
   30c60:	3e a0 00 a8 	load_32 s1, 40(sp)
   30c64:	18 40 00 05 	add_i s0, s24, 16
   30c68:	df 6d 00 f8 	call 112508 <S_StartSound>
   30c6c:	78 43 00 88 	store_32 s27, 16(s24)
   30c70:	78 33 00 88 	store_32 s27, 12(s24)
   30c74:	78 23 00 88 	store_32 s27, 8(s24)
   30c78:	78 13 00 88 	store_32 s27, 4(s24)
   30c7c:	78 03 00 88 	store_32 s27, (s24)
   30c80:	39 07 00 05 	add_i s25, s25, 1
   30c84:	19 40 00 18 	cmplt_u s0, s25, 16
   30c88:	20 f9 ff f5 	bnz s0, -220 <P_UpdateSpecials+0x1e8>
   30c8c:	fe b3 00 a8 	load_32 ra, 44(sp)
   30c90:	7e c3 00 a8 	load_32 s27, 48(sp)
   30c94:	5e d3 00 a8 	load_32 s26, 52(sp)
   30c98:	3e e3 00 a8 	load_32 s25, 56(sp)
   30c9c:	1e f3 00 a8 	load_32 s24, 60(sp)
   30ca0:	de 03 01 05 	add_i sp, sp, 64
   30ca4:	1f 00 00 f0 	ret

0000000000030ca8 EV_DoDonut:
   30ca8:	de 03 fe 05 	add_i sp, sp, -128
   30cac:	1e f3 01 88 	store_32 s24, 124(sp)
   30cb0:	3e e3 01 88 	store_32 s25, 120(sp)
   30cb4:	5e d3 01 88 	store_32 s26, 116(sp)
   30cb8:	7e c3 01 88 	store_32 s27, 112(sp)
   30cbc:	fe b3 01 88 	store_32 ra, 108(sp)
   30cc0:	00 03 f0 c0 	move s24, s0
   30cc4:	1b 04 00 4f 	movehi s0, 59
   30cc8:	3b 04 00 4f 	movehi s1, 59
   30ccc:	c0 fc ff 0f 	move s6, -1
   30cd0:	00 81 4a 00 	or s8, s0, 4768
   30cd4:	12 00 00 4f 	movehi s0, 18
   30cd8:	40 00 00 0f 	move s2, 0
   30cdc:	21 81 4b 00 	or s9, s1, 4832
   30ce0:	a0 01 45 00 	or s13, s0, 4416
   30ce4:	00 00 f1 c0 	move s0, s2
   30ce8:	40 05 00 0f 	move s10, 1
   30cec:	60 b1 00 0f 	move s11, 44
   30cf0:	20 cc 00 0f 	move s1, 51
   30cf4:	c0 2d 00 0f 	move s14, 11
   30cf8:	e4 01 00 4f 	movehi s15, 4
   30cfc:	60 03 f3 c0 	move s27, s6
   30d00:	3b 00 00 f6 	b 236 <EV_DoDonut+0x144>
   30d04:	00 80 f5 c0 	move s0, s11
   30d08:	5e 70 01 88 	store_32 s2, 92(sp)
   30d0c:	5e 31 01 88 	store_32 s10, 76(sp)
   30d10:	7e 21 01 88 	store_32 s11, 72(sp)
   30d14:	3e 10 01 88 	store_32 s1, 68(sp)
   30d18:	fe f0 00 88 	store_32 s7, 60(sp)
   30d1c:	de 00 01 88 	store_32 s6, 64(sp)
   30d20:	ee 6e 00 f8 	call 113592 <Z_Malloc>
   30d24:	1e e0 00 88 	store_32 s0, 56(sp)
   30d28:	7c 0b 00 f8 	call 11760 <P_AddThinker>
   30d2c:	3e e0 00 a8 	load_32 s1, 56(sp)
   30d30:	5e f0 00 a8 	load_32 s2, 60(sp)
   30d34:	22 30 01 88 	store_32 s1, 76(s2)
   30d38:	1e a0 01 a8 	load_32 s0, 104(sp)
   30d3c:	01 20 00 88 	store_32 s0, 8(s1)
   30d40:	1e 90 01 a8 	load_32 s0, 100(sp)
   30d44:	01 30 00 88 	store_32 s0, 12(s1)
   30d48:	1e 70 01 a8 	load_32 s0, 92(sp)
   30d4c:	01 40 00 88 	store_32 s0, 16(s1)
   30d50:	1e 30 01 a8 	load_32 s0, 76(sp)
   30d54:	01 60 00 88 	store_32 s0, 24(s1)
   30d58:	41 50 00 88 	store_32 s2, 20(s1)
   30d5c:	1e 80 01 a8 	load_32 s0, 96(sp)
   30d60:	01 a0 00 88 	store_32 s0, 40(s1)
   30d64:	1a 20 00 a6 	load_s16 s0, 8(s26)
   30d68:	01 80 00 86 	store_16 s0, 32(s1)
   30d6c:	1e 70 01 a8 	load_32 s0, 92(sp)
   30d70:	01 70 00 88 	store_32 s0, 28(s1)
   30d74:	1a 00 00 a8 	load_32 s0, (s26)
   30d78:	01 90 00 88 	store_32 s0, 36(s1)
   30d7c:	1e 20 01 a8 	load_32 s0, 72(sp)
   30d80:	3e 10 01 a8 	load_32 s1, 68(sp)
   30d84:	5e 70 01 a8 	load_32 s2, 92(sp)
   30d88:	d4 6e 00 f8 	call 113488 <Z_Malloc>
   30d8c:	1e f0 00 88 	store_32 s0, 60(sp)
   30d90:	62 0b 00 f8 	call 11656 <P_AddThinker>
   30d94:	fe 81 01 a8 	load_32 s15, 96(sp)
   30d98:	de 91 01 a8 	load_32 s14, 100(sp)
   30d9c:	be a1 01 a8 	load_32 s13, 104(sp)
   30da0:	3e 10 01 a8 	load_32 s1, 68(sp)
   30da4:	7e 21 01 a8 	load_32 s11, 72(sp)
   30da8:	5e 31 01 a8 	load_32 s10, 76(sp)
   30dac:	5e 70 01 a8 	load_32 s2, 92(sp)
   30db0:	1e 00 01 a8 	load_32 s0, 64(sp)
   30db4:	7e f0 00 a8 	load_32 s3, 60(sp)
   30db8:	60 00 00 88 	store_32 s3, (s0)
   30dbc:	a3 21 00 88 	store_32 s13, 8(s3)
   30dc0:	43 30 00 88 	store_32 s2, 12(s3)
   30dc4:	43 40 00 88 	store_32 s2, 16(s3)
   30dc8:	de 60 01 a8 	load_32 s6, 88(sp)
   30dcc:	c3 60 00 88 	store_32 s6, 24(s3)
   30dd0:	23 53 00 88 	store_32 s25, 20(s3)
   30dd4:	e3 a1 00 88 	store_32 s15, 40(s3)
   30dd8:	1a 00 00 a8 	load_32 s0, (s26)
   30ddc:	03 90 00 88 	store_32 s0, 36(s3)
   30de0:	00 00 f5 c0 	move s0, s10
   30de4:	1e 51 01 a8 	load_32 s8, 84(sp)
   30de8:	3e 41 01 a8 	load_32 s9, 80(sp)
   30dec:	88 01 00 a8 	load_32 s12, (s8)
   30df0:	e9 00 00 a8 	load_32 s7, (s9)
   30df4:	60 80 fd c0 	move s3, s27
   30df8:	63 07 00 05 	add_i s27, s3, 1
   30dfc:	9b 00 36 c1 	cmpge_i s4, s27, s12
   30e00:	a4 06 00 f4 	bnz s4, 212 <EV_DoDonut+0x22c>
   30e04:	9b 60 01 07 	mull_i s4, s27, 88
   30e08:	27 03 52 c0 	add_i s25, s7, s4
   30e0c:	99 40 00 a4 	load_u16 s4, 16(s25)
   30e10:	b8 50 00 a4 	load_u16 s5, 20(s24)
   30e14:	84 80 12 c1 	cmpne_i s4, s4, s5
   30e18:	e4 fe ff f5 	bnz s4, -36 <EV_DoDonut+0x14c>
   30e1c:	63 fc ff 14 	cmplt_i s3, s3, -1
   30e20:	a3 05 00 f4 	bnz s3, 180 <EV_DoDonut+0x22c>
   30e24:	79 30 01 a8 	load_32 s3, 76(s25)
   30e28:	63 fe ff f5 	bnz s3, -52 <EV_DoDonut+0x14c>
   30e2c:	19 50 01 a8 	load_32 s0, 84(s25)
   30e30:	00 00 00 a8 	load_32 s0, (s0)
   30e34:	60 40 00 a0 	load_u8 s3, 16(s0)
   30e38:	e0 00 f1 c0 	move s7, s2
   30e3c:	63 10 00 01 	and s3, s3, 4
   30e40:	a3 00 00 f2 	bz s3, 20 <EV_DoDonut+0x1ac>
   30e44:	e0 c0 00 a8 	load_32 s7, 48(s0)
   30e48:	67 80 1c c1 	cmpne_i s3, s7, s25
   30e4c:	43 00 00 f4 	bnz s3, 8 <EV_DoDonut+0x1ac>
   30e50:	e0 d0 00 a8 	load_32 s7, 52(s0)
   30e54:	a7 40 01 a8 	load_32 s5, 80(s7)
   30e58:	00 00 f5 c0 	move s0, s10
   30e5c:	65 04 00 14 	cmplt_i s3, s5, 1
   30e60:	63 fc ff f5 	bnz s3, -116 <EV_DoDonut+0x144>
   30e64:	fe 81 01 88 	store_32 s15, 96(sp)
   30e68:	de 91 01 88 	store_32 s14, 100(sp)
   30e6c:	be a1 01 88 	store_32 s13, 104(sp)
   30e70:	3e 41 01 88 	store_32 s9, 80(sp)
   30e74:	1e 51 01 88 	store_32 s8, 84(sp)
   30e78:	de 60 01 88 	store_32 s6, 88(sp)
   30e7c:	d9 30 01 05 	add_i s6, s25, 76
   30e80:	07 50 01 a8 	load_32 s0, 84(s7)
   30e84:	80 00 f1 c0 	move s4, s2
   30e88:	64 08 00 0b 	shl s3, s4, 2
   30e8c:	60 80 51 c0 	add_i s3, s0, s3
   30e90:	63 00 00 a8 	load_32 s3, (s3)
   30e94:	43 d3 00 a8 	load_32 s26, 52(s3)
   30e98:	7a 80 0c c1 	cmpeq_i s3, s26, s25
   30e9c:	43 00 00 f4 	bnz s3, 8 <EV_DoDonut+0x1fc>
   30ea0:	99 ff ff f7 	b -412 <EV_DoDonut+0x5c>
   30ea4:	84 04 00 05 	add_i s4, s4, 1
   30ea8:	64 80 32 c1 	cmpge_i s3, s4, s5
   30eac:	43 00 00 f4 	bnz s3, 8 <EV_DoDonut+0x20c>
   30eb0:	f6 ff ff f7 	b -40 <EV_DoDonut+0x1e0>
   30eb4:	00 00 f5 c0 	move s0, s10
   30eb8:	de 60 01 a8 	load_32 s6, 88(sp)
   30ebc:	1e 51 01 a8 	load_32 s8, 84(sp)
   30ec0:	3e 41 01 a8 	load_32 s9, 80(sp)
   30ec4:	be a1 01 a8 	load_32 s13, 104(sp)
   30ec8:	de 91 01 a8 	load_32 s14, 100(sp)
   30ecc:	fe 81 01 a8 	load_32 s15, 96(sp)
   30ed0:	c7 ff ff f7 	b -228 <EV_DoDonut+0x144>
   30ed4:	fe b3 01 a8 	load_32 ra, 108(sp)
   30ed8:	7e c3 01 a8 	load_32 s27, 112(sp)
   30edc:	5e d3 01 a8 	load_32 s26, 116(sp)
   30ee0:	3e e3 01 a8 	load_32 s25, 120(sp)
   30ee4:	1e f3 01 a8 	load_32 s24, 124(sp)
   30ee8:	de 03 02 05 	add_i sp, sp, 128
   30eec:	1f 00 00 f0 	ret

0000000000030ef0 P_SpawnSpecials:
   30ef0:	de 03 ff 05 	add_i sp, sp, -64
   30ef4:	1e f3 00 88 	store_32 s24, 60(sp)
   30ef8:	3e e3 00 88 	store_32 s25, 56(sp)
   30efc:	5e d3 00 88 	store_32 s26, 52(sp)
   30f00:	7e c3 00 88 	store_32 s27, 48(sp)
   30f04:	fe b3 00 88 	store_32 ra, 44(sp)
   30f08:	01 00 00 4f 	movehi s0, 1
   30f0c:	00 b0 2f 00 	or s0, s0, 3052
   30f10:	14 37 00 f8 	call 56400 <W_CheckNumForName>
   30f14:	1b 04 00 4f 	movehi s0, 59
   30f18:	40 03 00 0f 	move s26, 0
   30f1c:	00 a3 56 00 	or s24, s0, 5544
   30f20:	01 00 00 4f 	movehi s0, 1
   30f24:	58 03 00 88 	store_32 s26, (s24)
   30f28:	00 9c 75 00 	or s0, s0, 7527
   30f2c:	e2 ab ff f9 	call -86136 <M_CheckParm>
   30f30:	3a 04 00 4f 	movehi s1, 58
   30f34:	21 63 6e 00 	or s25, s1, 7064
   30f38:	39 00 00 a8 	load_32 s1, (s25)
   30f3c:	20 01 00 f2 	bz s0, 36 <P_SpawnSpecials+0x70>
   30f40:	01 01 00 f2 	bz s1, 32 <P_SpawnSpecials+0x70>
   30f44:	1b 04 00 4f 	movehi s0, 59
   30f48:	45 00 00 4f 	movehi s2, 5
   30f4c:	20 04 00 0f 	move s1, 1
   30f50:	38 00 00 88 	store_32 s1, (s24)
   30f54:	00 90 56 00 	or s0, s0, 5540
   30f58:	22 40 10 00 	or s1, s2, 1040
   30f5c:	20 00 00 88 	store_32 s1, (s0)
   30f60:	01 00 00 4f 	movehi s0, 1
   30f64:	00 f4 33 00 	or s0, s0, 3325
   30f68:	d3 ab ff f9 	call -86196 <M_CheckParm>
   30f6c:	39 00 00 a8 	load_32 s1, (s25)
   30f70:	e0 01 00 f2 	bz s0, 60 <P_SpawnSpecials+0xbc>
   30f74:	c1 01 00 f2 	bz s1, 56 <P_SpawnSpecials+0xbc>
   30f78:	3b 04 00 4f 	movehi s1, 59
   30f7c:	00 08 00 0b 	shl s0, s0, 2
   30f80:	21 80 26 00 	or s1, s1, 2464
   30f84:	21 00 00 a8 	load_32 s1, (s1)
   30f88:	01 00 50 c0 	add_i s0, s1, s0
   30f8c:	00 10 00 a8 	load_32 s0, 4(s0)
   30f90:	fc 82 00 f8 	call 134128 <atoi>
   30f94:	3b 04 00 4f 	movehi s1, 59
   30f98:	40 04 00 0f 	move s2, 1
   30f9c:	58 00 00 88 	store_32 s2, (s24)
   30fa0:	00 d0 20 07 	mull_i s0, s0, 2100
   30fa4:	21 90 56 00 	or s1, s1, 5540
   30fa8:	01 00 00 88 	store_32 s0, (s1)
   30fac:	1b 04 00 4f 	movehi s0, 59
   30fb0:	60 83 4a 00 	or s27, s0, 4768
   30fb4:	1b 00 00 a8 	load_32 s0, (s27)
   30fb8:	00 04 00 14 	cmplt_i s0, s0, 1
   30fbc:	c0 09 00 f4 	bnz s0, 312 <P_SpawnSpecials+0x204>
   30fc0:	1b 04 00 4f 	movehi s0, 59
   30fc4:	23 00 00 4f 	movehi s1, 3
   30fc8:	20 03 00 0f 	move s25, 0
   30fcc:	00 80 4b 00 	or s0, s0, 4832
   30fd0:	00 03 00 a8 	load_32 s24, (s0)
   30fd4:	01 60 4e 00 	or s0, s1, 5016
   30fd8:	1e a0 00 88 	store_32 s0, 40(sp)
   30fdc:	00 3c 00 0f 	move s0, 15
   30fe0:	1e 80 00 88 	store_32 s0, 32(sp)
   30fe4:	1b 04 00 4f 	movehi s0, 59
   30fe8:	20 8c 00 0f 	move s1, 35
   30fec:	3e 70 00 88 	store_32 s1, 28(sp)
   30ff0:	20 10 00 0f 	move s1, 4
   30ff4:	3e 50 00 88 	store_32 s1, 20(sp)
   30ff8:	00 00 19 00 	or s0, s0, 1600
   30ffc:	1e 40 00 88 	store_32 s0, 16(sp)
   31000:	00 04 00 0f 	move s0, 1
   31004:	1e 60 00 88 	store_32 s0, 24(sp)
   31008:	3e 93 00 88 	store_32 s25, 36(sp)
   3100c:	18 38 00 a6 	load_s16 s0, 14(s24)
   31010:	80 06 00 f2 	bz s0, 208 <P_SpawnSpecials+0x1f0>
   31014:	00 fc ff 05 	add_i s0, s0, -1
   31018:	20 40 00 16 	cmpgt_u s1, s0, 16
   3101c:	21 06 00 f4 	bnz s1, 196 <P_SpawnSpecials+0x1f0>
   31020:	3e a0 00 a8 	load_32 s1, 40(sp)
   31024:	00 08 00 0b 	shl s0, s0, 2
   31028:	00 80 50 c0 	add_i s0, s0, s1
   3102c:	00 00 00 a8 	load_32 s0, (s0)
   31030:	00 00 00 f0 	b s0
   31034:	00 00 fc c0 	move s0, s24
   31038:	6e d8 ff f9 	call -40520 <P_SpawnLightFlash>
   3103c:	29 00 00 f6 	b 164 <P_SpawnSpecials+0x1f0>
   31040:	00 00 fc c0 	move s0, s24
   31044:	3e 80 00 a8 	load_32 s1, 32(sp)
   31048:	03 00 00 f6 	b 12 <P_SpawnSpecials+0x164>
   3104c:	00 00 fc c0 	move s0, s24
   31050:	3e 70 00 a8 	load_32 s1, 28(sp)
   31054:	5e 90 00 a8 	load_32 s2, 36(sp)
   31058:	9f d8 ff f9 	call -40324 <P_SpawnStrobeFlash>
   3105c:	21 00 00 f6 	b 132 <P_SpawnSpecials+0x1f0>
   31060:	00 00 fc c0 	move s0, s24
   31064:	3e 80 00 a8 	load_32 s1, 32(sp)
   31068:	5e 90 00 a8 	load_32 s2, 36(sp)
   3106c:	9a d8 ff f9 	call -40344 <P_SpawnStrobeFlash>
   31070:	1e 50 00 a8 	load_32 s0, 20(sp)
   31074:	18 38 00 86 	store_16 s0, 14(s24)
   31078:	1a 00 00 f6 	b 104 <P_SpawnSpecials+0x1f0>
   3107c:	00 00 fc c0 	move s0, s24
   31080:	a7 d9 ff f9 	call -39268 <P_SpawnGlowingLight>
   31084:	17 00 00 f6 	b 92 <P_SpawnSpecials+0x1f0>
   31088:	3e 40 00 a8 	load_32 s1, 16(sp)
   3108c:	01 00 00 a8 	load_32 s0, (s1)
   31090:	00 04 00 05 	add_i s0, s0, 1
   31094:	01 00 00 88 	store_32 s0, (s1)
   31098:	12 00 00 f6 	b 72 <P_SpawnSpecials+0x1f0>
   3109c:	00 00 fc c0 	move s0, s24
   310a0:	78 c0 ff f9 	call -65056 <P_SpawnDoorCloseIn30>
   310a4:	0f 00 00 f6 	b 60 <P_SpawnSpecials+0x1f0>
   310a8:	00 00 fc c0 	move s0, s24
   310ac:	3e 70 00 a8 	load_32 s1, 28(sp)
   310b0:	03 00 00 f6 	b 12 <P_SpawnSpecials+0x1cc>
   310b4:	00 00 fc c0 	move s0, s24
   310b8:	3e 80 00 a8 	load_32 s1, 32(sp)
   310bc:	5e 60 00 a8 	load_32 s2, 24(sp)
   310c0:	85 d8 ff f9 	call -40428 <P_SpawnStrobeFlash>
   310c4:	07 00 00 f6 	b 28 <P_SpawnSpecials+0x1f0>
   310c8:	00 00 fc c0 	move s0, s24
   310cc:	20 80 fc c0 	move s1, s25
   310d0:	8b c0 ff f9 	call -64980 <P_SpawnDoorRaiseIn5Mins>
   310d4:	03 00 00 f6 	b 12 <P_SpawnSpecials+0x1f0>
   310d8:	00 00 fc c0 	move s0, s24
   310dc:	06 d8 ff f9 	call -40936 <P_SpawnFireFlicker>
   310e0:	1b 00 00 a8 	load_32 s0, (s27)
   310e4:	39 07 00 05 	add_i s25, s25, 1
   310e8:	18 63 01 05 	add_i s24, s24, 88
   310ec:	19 00 40 c1 	cmplt_i s0, s25, s0
   310f0:	e0 f8 ff f5 	bnz s0, -228 <P_SpawnSpecials+0x11c>
   310f4:	1b 04 00 4f 	movehi s0, 59
   310f8:	3b 04 00 4f 	movehi s1, 59
   310fc:	00 b0 5a 00 	or s0, s0, 5804
   31100:	21 60 4a 00 	or s1, s1, 4760
   31104:	40 03 00 86 	store_16 s26, (s0)
   31108:	21 00 00 a8 	load_32 s1, (s1)
   3110c:	41 04 00 14 	cmplt_i s2, s1, 1
   31110:	a2 02 00 f4 	bnz s2, 84 <P_SpawnSpecials+0x274>
   31114:	5b 04 00 4f 	movehi s2, 59
   31118:	7b 04 00 4f 	movehi s3, 59
   3111c:	42 40 4a 00 	or s2, s2, 4752
   31120:	63 b0 56 00 	or s3, s3, 5548
   31124:	42 00 00 a8 	load_32 s2, (s2)
   31128:	80 00 fd c0 	move s4, s26
   3112c:	ba 18 00 0b 	shl s5, s26, 6
   31130:	a2 80 52 c0 	add_i s5, s2, s5
   31134:	c5 48 00 a4 	load_u16 s6, 18(s5)
   31138:	c6 c0 00 11 	cmpne_i s6, s6, 48
   3113c:	e6 00 00 f4 	bnz s6, 28 <P_SpawnSpecials+0x268>
   31140:	c0 00 e2 c1 	sext_16 s6, s4
   31144:	84 04 00 05 	add_i s4, s4, 1
   31148:	c6 08 00 0b 	shl s6, s6, 2
   3114c:	c3 00 53 c0 	add_i s6, s3, s6
   31150:	a6 00 00 88 	store_32 s5, (s6)
   31154:	80 00 00 86 	store_16 s4, (s0)
   31158:	5a 07 00 05 	add_i s26, s26, 1
   3115c:	ba 80 40 c1 	cmplt_i s5, s26, s1
   31160:	65 fe ff f5 	bnz s5, -52 <P_SpawnSpecials+0x23c>
   31164:	1b 04 00 4f 	movehi s0, 59
   31168:	00 03 00 0f 	move s24, 0
   3116c:	20 e3 01 0f 	move s25, 120
   31170:	00 90 26 00 	or s0, s0, 2468
   31174:	20 00 fc c0 	move s1, s24
   31178:	40 80 fc c0 	move s2, s25
   3117c:	4a 82 00 f8 	call 133416 <memset>
   31180:	1b 04 00 4f 	movehi s0, 59
   31184:	20 00 fc c0 	move s1, s24
   31188:	40 80 fc c0 	move s2, s25
   3118c:	00 20 46 00 	or s0, s0, 4488
   31190:	45 82 00 f8 	call 133396 <memset>
   31194:	1b 04 00 4f 	movehi s0, 59
   31198:	40 00 05 0f 	move s2, 320
   3119c:	20 00 fc c0 	move s1, s24
   311a0:	00 c0 5a 00 	or s0, s0, 5808
   311a4:	40 82 00 f8 	call 133376 <memset>
   311a8:	fe b3 00 a8 	load_32 ra, 44(sp)
   311ac:	7e c3 00 a8 	load_32 s27, 48(sp)
   311b0:	5e d3 00 a8 	load_32 s26, 52(sp)
   311b4:	3e e3 00 a8 	load_32 s25, 56(sp)
   311b8:	1e f3 00 a8 	load_32 s24, 60(sp)
   311bc:	de 03 01 05 	add_i sp, sp, 64
   311c0:	1f 00 00 f0 	ret

00000000000311c4 P_InitSwitchList:
   311c4:	de 03 ff 05 	add_i sp, sp, -64
   311c8:	1e f3 00 88 	store_32 s24, 60(sp)
   311cc:	3e e3 00 88 	store_32 s25, 56(sp)
   311d0:	5e d3 00 88 	store_32 s26, 52(sp)
   311d4:	7e c3 00 88 	store_32 s27, 48(sp)
   311d8:	fe b3 00 88 	store_32 ra, 44(sp)
   311dc:	0b 04 00 4f 	movehi s0, 43
   311e0:	00 00 40 00 	or s0, s0, 4096
   311e4:	00 00 00 a8 	load_32 s0, (s0)
   311e8:	20 08 00 10 	cmpeq_i s1, s0, 2
   311ec:	a1 00 00 f4 	bnz s1, 20 <P_InitSwitchList+0x3c>
   311f0:	40 04 00 0f 	move s2, 1
   311f4:	00 04 00 10 	cmpeq_i s0, s0, 1
   311f8:	c0 00 00 f4 	bnz s0, 24 <P_InitSwitchList+0x4c>
   311fc:	06 00 00 f6 	b 24 <P_InitSwitchList+0x50>
   31200:	40 0c 00 0f 	move s2, 3
   31204:	00 04 00 10 	cmpeq_i s0, s0, 1
   31208:	40 00 00 f4 	bnz s0, 8 <P_InitSwitchList+0x4c>
   3120c:	02 00 00 f6 	b 8 <P_InitSwitchList+0x50>
   31210:	40 08 00 0f 	move s2, 2
   31214:	14 04 00 4f 	movehi s0, 52
   31218:	3b 04 00 4f 	movehi s1, 59
   3121c:	60 03 00 0f 	move s27, 0
   31220:	60 40 06 00 	or s3, s0, 400
   31224:	01 d0 5f 00 	or s0, s1, 6132
   31228:	1e 90 00 88 	store_32 s0, 36(sp)
   3122c:	7e a3 00 88 	store_32 s27, 40(sp)
   31230:	5e 80 00 88 	store_32 s2, 32(sp)
   31234:	7e 70 00 88 	store_32 s3, 28(sp)
   31238:	1b 50 00 07 	mull_i s0, s27, 20
   3123c:	03 03 50 c0 	add_i s24, s3, s0
   31240:	18 48 00 a6 	load_s16 s0, 18(s24)
   31244:	40 00 00 f4 	bnz s0, 8 <P_InitSwitchList+0x88>
   31248:	15 00 00 f6 	b 84 <P_InitSwitchList+0xd8>
   3124c:	02 00 40 c1 	cmplt_i s0, s2, s0
   31250:	e0 01 00 f4 	bnz s0, 60 <P_InitSwitchList+0xc8>
   31254:	00 00 fc c0 	move s0, s24
   31258:	90 19 00 f8 	call 26176 <R_TextureNumForName>
   3125c:	3e a3 00 a8 	load_32 s25, 40(sp)
   31260:	5e 90 00 a8 	load_32 s2, 36(sp)
   31264:	39 08 00 0b 	shl s1, s25, 2
   31268:	42 83 50 c0 	add_i s26, s2, s1
   3126c:	1a 00 00 88 	store_32 s0, (s26)
   31270:	18 24 00 05 	add_i s0, s24, 9
   31274:	89 19 00 f8 	call 26148 <R_TextureNumForName>
   31278:	7e 70 00 a8 	load_32 s3, 28(sp)
   3127c:	39 0b 00 05 	add_i s25, s25, 2
   31280:	5e 80 00 a8 	load_32 s2, 32(sp)
   31284:	3e a3 00 88 	store_32 s25, 40(sp)
   31288:	1a 10 00 88 	store_32 s0, 4(s26)
   3128c:	7b 07 00 05 	add_i s27, s27, 1
   31290:	1b c8 00 18 	cmplt_u s0, s27, 50
   31294:	20 fd ff f5 	bnz s0, -92 <P_InitSwitchList+0x74>
   31298:	0d 00 00 f6 	b 52 <P_InitSwitchList+0x108>
   3129c:	5e a0 00 a8 	load_32 s2, 40(sp)
   312a0:	3b 04 00 4f 	movehi s1, 59
   312a4:	7e 90 00 a8 	load_32 s3, 36(sp)
   312a8:	21 c0 5f 00 	or s1, s1, 6128
   312ac:	02 7c 00 0a 	shr s0, s2, 31
   312b0:	02 00 50 c0 	add_i s0, s2, s0
   312b4:	42 08 00 0b 	shl s2, s2, 2
   312b8:	43 00 51 c0 	add_i s2, s3, s2
   312bc:	00 04 00 09 	ashr s0, s0, 1
   312c0:	01 00 00 88 	store_32 s0, (s1)
   312c4:	00 fc ff 0f 	move s0, -1
   312c8:	02 00 00 88 	store_32 s0, (s2)
   312cc:	fe b3 00 a8 	load_32 ra, 44(sp)
   312d0:	7e c3 00 a8 	load_32 s27, 48(sp)
   312d4:	5e d3 00 a8 	load_32 s26, 52(sp)
   312d8:	3e e3 00 a8 	load_32 s25, 56(sp)
   312dc:	1e f3 00 a8 	load_32 s24, 60(sp)
   312e0:	de 03 01 05 	add_i sp, sp, 64
   312e4:	1f 00 00 f0 	ret

00000000000312e8 P_StartButton:
   312e8:	de 03 fe 05 	add_i sp, sp, -128
   312ec:	fe f3 01 88 	store_32 ra, 124(sp)
   312f0:	9b 04 00 4f 	movehi s4, 59
   312f4:	84 c0 5a 00 	or s4, s4, 5808
   312f8:	a4 30 00 a8 	load_32 s5, 12(s4)
   312fc:	c4 00 00 a8 	load_32 s6, (s4)
   31300:	c6 00 10 c1 	cmpne_i s6, s6, s0
   31304:	46 00 00 f4 	bnz s6, 8 <P_StartButton+0x24>
   31308:	a5 20 00 f4 	bnz s5, 1044 <P_StartButton+0x434>
   3130c:	e4 80 00 a8 	load_32 s7, 32(s4)
   31310:	c4 50 00 a8 	load_32 s6, 20(s4)
   31314:	c6 00 10 c1 	cmpne_i s6, s6, s0
   31318:	46 00 00 f4 	bnz s6, 8 <P_StartButton+0x38>
   3131c:	07 20 00 f4 	bnz s7, 1024 <P_StartButton+0x434>
   31320:	04 d1 00 a8 	load_32 s8, 52(s4)
   31324:	c4 a0 00 a8 	load_32 s6, 40(s4)
   31328:	c6 00 10 c1 	cmpne_i s6, s6, s0
   3132c:	46 00 00 f4 	bnz s6, 8 <P_StartButton+0x4c>
   31330:	68 1f 00 f4 	bnz s8, 1004 <P_StartButton+0x434>
   31334:	a4 22 01 a8 	load_32 s21, 72(s4)
   31338:	c4 f0 00 a8 	load_32 s6, 60(s4)
   3133c:	c6 00 10 c1 	cmpne_i s6, s6, s0
   31340:	46 00 00 f4 	bnz s6, 8 <P_StartButton+0x60>
   31344:	d5 1e 00 f4 	bnz s21, 984 <P_StartButton+0x434>
   31348:	84 72 01 a8 	load_32 s20, 92(s4)
   3134c:	c4 40 01 a8 	load_32 s6, 80(s4)
   31350:	c6 00 10 c1 	cmpne_i s6, s6, s0
   31354:	46 00 00 f4 	bnz s6, 8 <P_StartButton+0x74>
   31358:	34 1e 00 f4 	bnz s20, 964 <P_StartButton+0x434>
   3135c:	44 c1 01 a8 	load_32 s10, 112(s4)
   31360:	c4 90 01 a8 	load_32 s6, 100(s4)
   31364:	c6 00 10 c1 	cmpne_i s6, s6, s0
   31368:	46 00 00 f4 	bnz s6, 8 <P_StartButton+0x88>
   3136c:	8a 1d 00 f4 	bnz s10, 944 <P_StartButton+0x434>
   31370:	64 11 02 a8 	load_32 s11, 132(s4)
   31374:	c4 e0 01 a8 	load_32 s6, 120(s4)
   31378:	c6 00 10 c1 	cmpne_i s6, s6, s0
   3137c:	46 00 00 f4 	bnz s6, 8 <P_StartButton+0x9c>
   31380:	eb 1c 00 f4 	bnz s11, 924 <P_StartButton+0x434>
   31384:	84 61 02 a8 	load_32 s12, 152(s4)
   31388:	c4 30 02 a8 	load_32 s6, 140(s4)
   3138c:	c6 00 10 c1 	cmpne_i s6, s6, s0
   31390:	46 00 00 f4 	bnz s6, 8 <P_StartButton+0xb0>
   31394:	4c 1c 00 f4 	bnz s12, 904 <P_StartButton+0x434>
   31398:	a4 b1 02 a8 	load_32 s13, 172(s4)
   3139c:	c4 80 02 a8 	load_32 s6, 160(s4)
   313a0:	c6 00 10 c1 	cmpne_i s6, s6, s0
   313a4:	46 00 00 f4 	bnz s6, 8 <P_StartButton+0xc4>
   313a8:	ad 1b 00 f4 	bnz s13, 884 <P_StartButton+0x434>
   313ac:	24 02 03 a8 	load_32 s17, 192(s4)
   313b0:	c4 d0 02 a8 	load_32 s6, 180(s4)
   313b4:	c6 00 10 c1 	cmpne_i s6, s6, s0
   313b8:	46 00 00 f4 	bnz s6, 8 <P_StartButton+0xd8>
   313bc:	11 1b 00 f4 	bnz s17, 864 <P_StartButton+0x434>
   313c0:	64 52 03 a8 	load_32 s19, 212(s4)
   313c4:	c4 20 03 a8 	load_32 s6, 200(s4)
   313c8:	c6 00 10 c1 	cmpne_i s6, s6, s0
   313cc:	46 00 00 f4 	bnz s6, 8 <P_StartButton+0xec>
   313d0:	73 1a 00 f4 	bnz s19, 844 <P_StartButton+0x434>
   313d4:	44 a2 03 a8 	load_32 s18, 232(s4)
   313d8:	c4 70 03 a8 	load_32 s6, 220(s4)
   313dc:	c6 00 10 c1 	cmpne_i s6, s6, s0
   313e0:	46 00 00 f4 	bnz s6, 8 <P_StartButton+0x100>
   313e4:	d2 19 00 f4 	bnz s18, 824 <P_StartButton+0x434>
   313e8:	04 f2 03 a8 	load_32 s16, 252(s4)
   313ec:	c4 c0 03 a8 	load_32 s6, 240(s4)
   313f0:	c6 00 10 c1 	cmpne_i s6, s6, s0
   313f4:	46 00 00 f4 	bnz s6, 8 <P_StartButton+0x114>
   313f8:	30 19 00 f4 	bnz s16, 804 <P_StartButton+0x434>
   313fc:	e4 41 04 a8 	load_32 s15, 272(s4)
   31400:	c4 10 04 a8 	load_32 s6, 260(s4)
   31404:	c6 00 10 c1 	cmpne_i s6, s6, s0
   31408:	46 00 00 f4 	bnz s6, 8 <P_StartButton+0x128>
   3140c:	8f 18 00 f4 	bnz s15, 784 <P_StartButton+0x434>
   31410:	c4 91 04 a8 	load_32 s14, 292(s4)
   31414:	c4 60 04 a8 	load_32 s6, 280(s4)
   31418:	c6 00 10 c1 	cmpne_i s6, s6, s0
   3141c:	46 00 00 f4 	bnz s6, 8 <P_StartButton+0x13c>
   31420:	ee 17 00 f4 	bnz s14, 764 <P_StartButton+0x434>
   31424:	c4 e0 04 a8 	load_32 s6, 312(s4)
   31428:	24 b1 04 a8 	load_32 s9, 300(s4)
   3142c:	29 01 10 c1 	cmpne_i s9, s9, s0
   31430:	49 00 00 f4 	bnz s9, 8 <P_StartButton+0x150>
   31434:	46 17 00 f4 	bnz s6, 744 <P_StartButton+0x434>
   31438:	25 01 00 10 	cmpeq_i s9, s5, 0
   3143c:	e7 00 00 10 	cmpeq_i s7, s7, 0
   31440:	08 01 00 10 	cmpeq_i s8, s8, 0
   31444:	c9 82 03 c0 	or s22, s9, s7
   31448:	b5 02 00 10 	cmpeq_i s21, s21, 0
   3144c:	f6 00 00 11 	cmpne_i s7, s22, 0
   31450:	d6 02 04 c0 	or s22, s22, s8
   31454:	e7 00 00 f4 	bnz s7, 28 <P_StartButton+0x188>
   31458:	a0 08 00 0f 	move s5, 2
   3145c:	f4 02 00 10 	cmpeq_i s23, s20, 0
   31460:	16 01 00 11 	cmpne_i s8, s22, 0
   31464:	b6 82 0a c0 	or s21, s22, s21
   31468:	28 01 00 f4 	bnz s8, 36 <P_StartButton+0x1a4>
   3146c:	07 00 00 f6 	b 28 <P_StartButton+0x1a0>
   31470:	a5 00 00 11 	cmpne_i s5, s5, 0
   31474:	a5 04 00 01 	and s5, s5, 1
   31478:	f4 02 00 10 	cmpeq_i s23, s20, 0
   3147c:	16 01 00 11 	cmpne_i s8, s22, 0
   31480:	b6 82 0a c0 	or s21, s22, s21
   31484:	48 00 00 f4 	bnz s8, 8 <P_StartButton+0x1a4>
   31488:	a0 0c 00 0f 	move s5, 3
   3148c:	8a 02 00 10 	cmpeq_i s20, s10, 0
   31490:	55 01 00 11 	cmpne_i s10, s21, 0
   31494:	d5 82 0b c0 	or s22, s21, s23
   31498:	4a 00 00 f4 	bnz s10, 8 <P_StartButton+0x1b8>
   3149c:	37 00 00 f6 	b 220 <P_StartButton+0x290>
   314a0:	ab 02 00 10 	cmpeq_i s21, s11, 0
   314a4:	76 01 00 11 	cmpne_i s11, s22, 0
   314a8:	d6 02 0a c0 	or s22, s22, s20
   314ac:	4b 00 00 f4 	bnz s11, 8 <P_StartButton+0x1cc>
   314b0:	37 00 00 f6 	b 220 <P_StartButton+0x2a4>
   314b4:	8c 02 00 10 	cmpeq_i s20, s12, 0
   314b8:	96 01 00 11 	cmpne_i s12, s22, 0
   314bc:	d6 82 0a c0 	or s22, s22, s21
   314c0:	4c 00 00 f4 	bnz s12, 8 <P_StartButton+0x1e0>
   314c4:	37 00 00 f6 	b 220 <P_StartButton+0x2b8>
   314c8:	ad 02 00 10 	cmpeq_i s21, s13, 0
   314cc:	b6 01 00 11 	cmpne_i s13, s22, 0
   314d0:	d6 02 0a c0 	or s22, s22, s20
   314d4:	4d 00 00 f4 	bnz s13, 8 <P_StartButton+0x1f4>
   314d8:	37 00 00 f6 	b 220 <P_StartButton+0x2cc>
   314dc:	91 02 00 10 	cmpeq_i s20, s17, 0
   314e0:	36 02 00 11 	cmpne_i s17, s22, 0
   314e4:	d6 82 0a c0 	or s22, s22, s21
   314e8:	51 00 00 f4 	bnz s17, 8 <P_StartButton+0x208>
   314ec:	37 00 00 f6 	b 220 <P_StartButton+0x2e0>
   314f0:	b3 02 00 10 	cmpeq_i s21, s19, 0
   314f4:	76 02 00 11 	cmpne_i s19, s22, 0
   314f8:	d6 02 0a c0 	or s22, s22, s20
   314fc:	53 00 00 f4 	bnz s19, 8 <P_StartButton+0x21c>
   31500:	37 00 00 f6 	b 220 <P_StartButton+0x2f4>
   31504:	92 02 00 10 	cmpeq_i s20, s18, 0
   31508:	56 02 00 11 	cmpne_i s18, s22, 0
   3150c:	d6 82 0a c0 	or s22, s22, s21
   31510:	52 00 00 f4 	bnz s18, 8 <P_StartButton+0x230>
   31514:	37 00 00 f6 	b 220 <P_StartButton+0x308>
   31518:	b0 02 00 10 	cmpeq_i s21, s16, 0
   3151c:	16 02 00 11 	cmpne_i s16, s22, 0
   31520:	d6 02 0a c0 	or s22, s22, s20
   31524:	50 00 00 f4 	bnz s16, 8 <P_StartButton+0x244>
   31528:	37 00 00 f6 	b 220 <P_StartButton+0x31c>
   3152c:	8f 02 00 10 	cmpeq_i s20, s15, 0
   31530:	f6 01 00 11 	cmpne_i s15, s22, 0
   31534:	d6 82 0a c0 	or s22, s22, s21
   31538:	4f 00 00 f4 	bnz s15, 8 <P_StartButton+0x258>
   3153c:	37 00 00 f6 	b 220 <P_StartButton+0x330>
   31540:	ae 02 00 10 	cmpeq_i s21, s14, 0
   31544:	d6 01 00 11 	cmpne_i s14, s22, 0
   31548:	d6 02 0a c0 	or s22, s22, s20
   3154c:	4e 00 00 f4 	bnz s14, 8 <P_StartButton+0x26c>
   31550:	37 00 00 f6 	b 220 <P_StartButton+0x344>
   31554:	96 02 00 11 	cmpne_i s20, s22, 0
   31558:	d6 82 0a c0 	or s22, s22, s21
   3155c:	54 00 00 f4 	bnz s20, 8 <P_StartButton+0x27c>
   31560:	37 00 00 f6 	b 220 <P_StartButton+0x354>
   31564:	b6 02 00 11 	cmpne_i s21, s22, 0
   31568:	55 00 00 f4 	bnz s21, 8 <P_StartButton+0x288>
   3156c:	37 00 00 f6 	b 220 <P_StartButton+0x360>
   31570:	16 08 00 f4 	bnz s22, 256 <P_StartButton+0x388>
   31574:	37 00 00 f6 	b 220 <P_StartButton+0x368>
   31578:	a0 10 00 0f 	move s5, 4
   3157c:	ab 02 00 10 	cmpeq_i s21, s11, 0
   31580:	76 01 00 11 	cmpne_i s11, s22, 0
   31584:	d6 02 0a c0 	or s22, s22, s20
   31588:	6b f9 ff f5 	bnz s11, -212 <P_StartButton+0x1cc>
   3158c:	a0 14 00 0f 	move s5, 5
   31590:	8c 02 00 10 	cmpeq_i s20, s12, 0
   31594:	96 01 00 11 	cmpne_i s12, s22, 0
   31598:	d6 82 0a c0 	or s22, s22, s21
   3159c:	6c f9 ff f5 	bnz s12, -212 <P_StartButton+0x1e0>
   315a0:	a0 18 00 0f 	move s5, 6
   315a4:	ad 02 00 10 	cmpeq_i s21, s13, 0
   315a8:	b6 01 00 11 	cmpne_i s13, s22, 0
   315ac:	d6 02 0a c0 	or s22, s22, s20
   315b0:	6d f9 ff f5 	bnz s13, -212 <P_StartButton+0x1f4>
   315b4:	a0 1c 00 0f 	move s5, 7
   315b8:	91 02 00 10 	cmpeq_i s20, s17, 0
   315bc:	36 02 00 11 	cmpne_i s17, s22, 0
   315c0:	d6 82 0a c0 	or s22, s22, s21
   315c4:	71 f9 ff f5 	bnz s17, -212 <P_StartButton+0x208>
   315c8:	a0 20 00 0f 	move s5, 8
   315cc:	b3 02 00 10 	cmpeq_i s21, s19, 0
   315d0:	76 02 00 11 	cmpne_i s19, s22, 0
   315d4:	d6 02 0a c0 	or s22, s22, s20
   315d8:	73 f9 ff f5 	bnz s19, -212 <P_StartButton+0x21c>
   315dc:	a0 24 00 0f 	move s5, 9
   315e0:	92 02 00 10 	cmpeq_i s20, s18, 0
   315e4:	56 02 00 11 	cmpne_i s18, s22, 0
   315e8:	d6 82 0a c0 	or s22, s22, s21
   315ec:	72 f9 ff f5 	bnz s18, -212 <P_StartButton+0x230>
   315f0:	a0 28 00 0f 	move s5, 10
   315f4:	b0 02 00 10 	cmpeq_i s21, s16, 0
   315f8:	16 02 00 11 	cmpne_i s16, s22, 0
   315fc:	d6 02 0a c0 	or s22, s22, s20
   31600:	70 f9 ff f5 	bnz s16, -212 <P_StartButton+0x244>
   31604:	a0 2c 00 0f 	move s5, 11
   31608:	8f 02 00 10 	cmpeq_i s20, s15, 0
   3160c:	f6 01 00 11 	cmpne_i s15, s22, 0
   31610:	d6 82 0a c0 	or s22, s22, s21
   31614:	6f f9 ff f5 	bnz s15, -212 <P_StartButton+0x258>
   31618:	a0 30 00 0f 	move s5, 12
   3161c:	ae 02 00 10 	cmpeq_i s21, s14, 0
   31620:	d6 01 00 11 	cmpne_i s14, s22, 0
   31624:	d6 02 0a c0 	or s22, s22, s20
   31628:	6e f9 ff f5 	bnz s14, -212 <P_StartButton+0x26c>
   3162c:	a0 34 00 0f 	move s5, 13
   31630:	96 02 00 11 	cmpne_i s20, s22, 0
   31634:	d6 82 0a c0 	or s22, s22, s21
   31638:	74 f9 ff f5 	bnz s20, -212 <P_StartButton+0x27c>
   3163c:	a0 38 00 0f 	move s5, 14
   31640:	b6 02 00 11 	cmpne_i s21, s22, 0
   31644:	75 f9 ff f5 	bnz s21, -212 <P_StartButton+0x288>
   31648:	a0 3c 00 0f 	move s5, 15
   3164c:	36 01 00 f4 	bnz s22, 36 <P_StartButton+0x388>
   31650:	06 01 00 f2 	bz s6, 32 <P_StartButton+0x388>
   31654:	01 00 00 4f 	movehi s0, 1
   31658:	00 38 0f 00 	or s0, s0, 974
   3165c:	1e 00 00 88 	store_32 s0, (sp)
   31660:	a9 72 ff f9 	call -144732 <I_Error>
   31664:	fe f3 01 a8 	load_32 ra, 124(sp)
   31668:	de 03 02 05 	add_i sp, sp, 128
   3166c:	1f 00 00 f0 	ret
   31670:	89 00 00 f4 	bnz s9, 16 <P_StartButton+0x398>
   31674:	c0 80 00 0f 	move s6, 32
   31678:	a7 00 00 f4 	bnz s7, 20 <P_StartButton+0x3a4>
   3167c:	03 00 00 f6 	b 12 <P_StartButton+0x3a0>
   31680:	c0 30 00 0f 	move s6, 12
   31684:	47 00 00 f4 	bnz s7, 8 <P_StartButton+0x3a4>
   31688:	c0 d0 00 0f 	move s6, 52
   3168c:	48 00 00 f4 	bnz s8, 8 <P_StartButton+0x3ac>
   31690:	26 00 00 f6 	b 152 <P_StartButton+0x440>
   31694:	4a 00 00 f4 	bnz s10, 8 <P_StartButton+0x3b4>
   31698:	26 00 00 f6 	b 152 <P_StartButton+0x448>
   3169c:	4b 00 00 f4 	bnz s11, 8 <P_StartButton+0x3bc>
   316a0:	26 00 00 f6 	b 152 <P_StartButton+0x450>
   316a4:	4c 00 00 f4 	bnz s12, 8 <P_StartButton+0x3c4>
   316a8:	26 00 00 f6 	b 152 <P_StartButton+0x458>
   316ac:	4d 00 00 f4 	bnz s13, 8 <P_StartButton+0x3cc>
   316b0:	26 00 00 f6 	b 152 <P_StartButton+0x460>
   316b4:	51 00 00 f4 	bnz s17, 8 <P_StartButton+0x3d4>
   316b8:	26 00 00 f6 	b 152 <P_StartButton+0x468>
   316bc:	53 00 00 f4 	bnz s19, 8 <P_StartButton+0x3dc>
   316c0:	26 00 00 f6 	b 152 <P_StartButton+0x470>
   316c4:	52 00 00 f4 	bnz s18, 8 <P_StartButton+0x3e4>
   316c8:	26 00 00 f6 	b 152 <P_StartButton+0x478>
   316cc:	50 00 00 f4 	bnz s16, 8 <P_StartButton+0x3ec>
   316d0:	26 00 00 f6 	b 152 <P_StartButton+0x480>
   316d4:	4f 00 00 f4 	bnz s15, 8 <P_StartButton+0x3f4>
   316d8:	26 00 00 f6 	b 152 <P_StartButton+0x488>
   316dc:	4e 00 00 f4 	bnz s14, 8 <P_StartButton+0x3fc>
   316e0:	26 00 00 f6 	b 152 <P_StartButton+0x490>
   316e4:	54 00 00 f4 	bnz s20, 8 <P_StartButton+0x404>
   316e8:	26 00 00 f6 	b 152 <P_StartButton+0x498>
   316ec:	55 00 00 f4 	bnz s21, 8 <P_StartButton+0x40c>
   316f0:	c0 e0 04 0f 	move s6, 312
   316f4:	a5 50 00 07 	mull_i s5, s5, 20
   316f8:	a4 80 52 c0 	add_i s5, s4, s5
   316fc:	84 00 53 c0 	add_i s4, s4, s6
   31700:	05 00 00 88 	store_32 s0, (s5)
   31704:	25 10 00 88 	store_32 s1, 4(s5)
   31708:	45 20 00 88 	store_32 s2, 8(s5)
   3170c:	64 00 00 88 	store_32 s3, (s4)
   31710:	00 c0 00 a8 	load_32 s0, 48(s0)
   31714:	00 b0 00 05 	add_i s0, s0, 44
   31718:	05 40 00 88 	store_32 s0, 16(s5)
   3171c:	fe f3 01 a8 	load_32 ra, 124(sp)
   31720:	de 03 02 05 	add_i sp, sp, 128
   31724:	1f 00 00 f0 	ret
   31728:	c0 20 01 0f 	move s6, 72
   3172c:	8a fb ff f5 	bnz s10, -144 <P_StartButton+0x3b4>
   31730:	c0 70 01 0f 	move s6, 92
   31734:	8b fb ff f5 	bnz s11, -144 <P_StartButton+0x3bc>
   31738:	c0 c0 01 0f 	move s6, 112
   3173c:	8c fb ff f5 	bnz s12, -144 <P_StartButton+0x3c4>
   31740:	c0 10 02 0f 	move s6, 132
   31744:	8d fb ff f5 	bnz s13, -144 <P_StartButton+0x3cc>
   31748:	c0 60 02 0f 	move s6, 152
   3174c:	91 fb ff f5 	bnz s17, -144 <P_StartButton+0x3d4>
   31750:	c0 b0 02 0f 	move s6, 172
   31754:	93 fb ff f5 	bnz s19, -144 <P_StartButton+0x3dc>
   31758:	c0 00 03 0f 	move s6, 192
   3175c:	92 fb ff f5 	bnz s18, -144 <P_StartButton+0x3e4>
   31760:	c0 50 03 0f 	move s6, 212
   31764:	90 fb ff f5 	bnz s16, -144 <P_StartButton+0x3ec>
   31768:	c0 a0 03 0f 	move s6, 232
   3176c:	8f fb ff f5 	bnz s15, -144 <P_StartButton+0x3f4>
   31770:	c0 f0 03 0f 	move s6, 252
   31774:	8e fb ff f5 	bnz s14, -144 <P_StartButton+0x3fc>
   31778:	c0 40 04 0f 	move s6, 272
   3177c:	94 fb ff f5 	bnz s20, -144 <P_StartButton+0x404>
   31780:	c0 90 04 0f 	move s6, 292
   31784:	95 fb ff f5 	bnz s21, -144 <P_StartButton+0x40c>
   31788:	da ff ff f7 	b -152 <P_StartButton+0x408>

000000000003178c P_ChangeSwitchTexture:
   3178c:	de 03 ff 05 	add_i sp, sp, -64
   31790:	1e f3 00 88 	store_32 s24, 60(sp)
   31794:	3e e3 00 88 	store_32 s25, 56(sp)
   31798:	5e d3 00 88 	store_32 s26, 52(sp)
   3179c:	7e c3 00 88 	store_32 s27, 48(sp)
   317a0:	fe b3 00 88 	store_32 ra, 44(sp)
   317a4:	3e 90 00 88 	store_32 s1, 36(sp)
   317a8:	e1 00 00 f2 	bz s1, 28 <P_ChangeSwitchTexture+0x38>
   317ac:	20 48 00 a4 	load_u16 s1, 18(s0)
   317b0:	21 2c 00 10 	cmpeq_i s1, s1, 11
   317b4:	41 00 00 f4 	bnz s1, 8 <P_ChangeSwitchTexture+0x30>
   317b8:	05 00 00 f6 	b 20 <P_ChangeSwitchTexture+0x40>
   317bc:	20 60 00 0f 	move s1, 24
   317c0:	04 00 00 f6 	b 16 <P_ChangeSwitchTexture+0x44>
   317c4:	20 00 00 0f 	move s1, 0
   317c8:	20 48 00 86 	store_16 s1, 18(s0)
   317cc:	20 5c 00 0f 	move s1, 23
   317d0:	5b 04 00 4f 	movehi s2, 59
   317d4:	42 a3 4b 00 	or s26, s2, 4840
   317d8:	7a 00 00 a8 	load_32 s3, (s26)
   317dc:	1e a0 00 88 	store_32 s0, 40(sp)
   317e0:	40 58 00 a6 	load_s16 s2, 22(s0)
   317e4:	42 50 00 07 	mull_i s2, s2, 20
   317e8:	63 00 51 c0 	add_i s3, s3, s2
   317ec:	5b 04 00 4f 	movehi s2, 59
   317f0:	03 20 00 a6 	load_s16 s0, 8(s3)
   317f4:	82 c0 5f 00 	or s4, s2, 6128
   317f8:	43 30 00 a6 	load_s16 s2, 12(s3)
   317fc:	63 28 00 a6 	load_s16 s3, 10(s3)
   31800:	84 00 00 a8 	load_32 s4, (s4)
   31804:	a4 04 00 14 	cmplt_i s5, s4, 1
   31808:	05 0a 00 f4 	bnz s5, 320 <P_ChangeSwitchTexture+0x1bc>
   3180c:	bb 04 00 4f 	movehi s5, 59
   31810:	84 04 00 0b 	shl s4, s4, 1
   31814:	00 03 00 0f 	move s24, 0
   31818:	25 d3 5f 00 	or s25, s5, 6132
   3181c:	b8 08 00 0b 	shl s5, s24, 2
   31820:	79 83 52 c0 	add_i s27, s25, s5
   31824:	bb 00 00 a8 	load_32 s5, (s27)
   31828:	c5 00 10 c1 	cmpne_i s6, s5, s0
   3182c:	46 00 00 f4 	bnz s6, 8 <P_ChangeSwitchTexture+0xa8>
   31830:	0b 00 00 f6 	b 44 <P_ChangeSwitchTexture+0xd0>
   31834:	c5 00 11 c1 	cmpne_i s6, s5, s2
   31838:	46 00 00 f4 	bnz s6, 8 <P_ChangeSwitchTexture+0xb4>
   3183c:	1b 00 00 f6 	b 108 <P_ChangeSwitchTexture+0x11c>
   31840:	a5 80 11 c1 	cmpne_i s5, s5, s3
   31844:	45 00 00 f4 	bnz s5, 8 <P_ChangeSwitchTexture+0xc0>
   31848:	2b 00 00 f6 	b 172 <P_ChangeSwitchTexture+0x168>
   3184c:	18 07 00 05 	add_i s24, s24, 1
   31850:	b8 00 42 c1 	cmplt_i s5, s24, s4
   31854:	45 fe ff f5 	bnz s5, -56 <P_ChangeSwitchTexture+0x90>
   31858:	3c 00 00 f6 	b 240 <P_ChangeSwitchTexture+0x1bc>
   3185c:	1b 04 00 4f 	movehi s0, 59
   31860:	00 c0 5a 00 	or s0, s0, 5808
   31864:	00 40 00 a8 	load_32 s0, 16(s0)
   31868:	df 6a 00 f8 	call 109436 <S_StartSound>
   3186c:	18 04 00 03 	xor s0, s24, 1
   31870:	00 08 00 0b 	shl s0, s0, 2
   31874:	19 00 50 c0 	add_i s0, s25, s0
   31878:	00 00 00 a8 	load_32 s0, (s0)
   3187c:	3a 00 00 a8 	load_32 s1, (s26)
   31880:	5e a0 00 a8 	load_32 s2, 40(sp)
   31884:	42 58 00 a6 	load_s16 s2, 22(s2)
   31888:	42 50 00 07 	mull_i s2, s2, 20
   3188c:	21 00 51 c0 	add_i s1, s1, s2
   31890:	01 20 00 86 	store_16 s0, 8(s1)
   31894:	1e 90 00 a8 	load_32 s0, 36(sp)
   31898:	80 05 00 f2 	bz s0, 176 <P_ChangeSwitchTexture+0x1bc>
   3189c:	5b 00 00 a8 	load_32 s2, (s27)
   318a0:	20 00 00 0f 	move s1, 0
   318a4:	26 00 00 f6 	b 152 <P_ChangeSwitchTexture+0x1b0>
   318a8:	1b 04 00 4f 	movehi s0, 59
   318ac:	00 c0 5a 00 	or s0, s0, 5808
   318b0:	00 40 00 a8 	load_32 s0, 16(s0)
   318b4:	cc 6a 00 f8 	call 109360 <S_StartSound>
   318b8:	18 04 00 03 	xor s0, s24, 1
   318bc:	00 08 00 0b 	shl s0, s0, 2
   318c0:	19 00 50 c0 	add_i s0, s25, s0
   318c4:	00 00 00 a8 	load_32 s0, (s0)
   318c8:	3a 00 00 a8 	load_32 s1, (s26)
   318cc:	5e a0 00 a8 	load_32 s2, 40(sp)
   318d0:	42 58 00 a6 	load_s16 s2, 22(s2)
   318d4:	42 50 00 07 	mull_i s2, s2, 20
   318d8:	21 00 51 c0 	add_i s1, s1, s2
   318dc:	01 30 00 86 	store_16 s0, 12(s1)
   318e0:	1e 90 00 a8 	load_32 s0, 36(sp)
   318e4:	20 03 00 f2 	bz s0, 100 <P_ChangeSwitchTexture+0x1bc>
   318e8:	5b 00 00 a8 	load_32 s2, (s27)
   318ec:	20 04 00 0f 	move s1, 1
   318f0:	13 00 00 f6 	b 76 <P_ChangeSwitchTexture+0x1b0>
   318f4:	1b 04 00 4f 	movehi s0, 59
   318f8:	00 c0 5a 00 	or s0, s0, 5808
   318fc:	00 40 00 a8 	load_32 s0, 16(s0)
   31900:	b9 6a 00 f8 	call 109284 <S_StartSound>
   31904:	18 04 00 03 	xor s0, s24, 1
   31908:	00 08 00 0b 	shl s0, s0, 2
   3190c:	19 00 50 c0 	add_i s0, s25, s0
   31910:	00 00 00 a8 	load_32 s0, (s0)
   31914:	3a 00 00 a8 	load_32 s1, (s26)
   31918:	5e a0 00 a8 	load_32 s2, 40(sp)
   3191c:	42 58 00 a6 	load_s16 s2, 22(s2)
   31920:	42 50 00 07 	mull_i s2, s2, 20
   31924:	21 00 51 c0 	add_i s1, s1, s2
   31928:	01 28 00 86 	store_16 s0, 10(s1)
   3192c:	1e 90 00 a8 	load_32 s0, 36(sp)
   31930:	c0 00 00 f2 	bz s0, 24 <P_ChangeSwitchTexture+0x1bc>
   31934:	5b 00 00 a8 	load_32 s2, (s27)
   31938:	20 08 00 0f 	move s1, 2
   3193c:	1e a0 00 a8 	load_32 s0, 40(sp)
   31940:	60 8c 00 0f 	move s3, 35
   31944:	69 fe ff f9 	call -1628 <P_StartButton>
   31948:	fe b3 00 a8 	load_32 ra, 44(sp)
   3194c:	7e c3 00 a8 	load_32 s27, 48(sp)
   31950:	5e d3 00 a8 	load_32 s26, 52(sp)
   31954:	3e e3 00 a8 	load_32 s25, 56(sp)
   31958:	1e f3 00 a8 	load_32 s24, 60(sp)
   3195c:	de 03 01 05 	add_i sp, sp, 64
   31960:	1f 00 00 f0 	ret

0000000000031964 P_UseSpecialLine:
   31964:	de 03 ff 05 	add_i sp, sp, -64
   31968:	1e f3 00 88 	store_32 s24, 60(sp)
   3196c:	3e e3 00 88 	store_32 s25, 56(sp)
   31970:	fe d3 00 88 	store_32 ra, 52(sp)
   31974:	20 83 f0 c0 	move s25, s1
   31978:	60 00 f0 c0 	move s3, s0
   3197c:	82 00 00 f2 	bz s2, 16 <P_UseSpecialLine+0x28>
   31980:	19 48 00 a4 	load_u16 s0, 18(s25)
   31984:	00 f0 01 11 	cmpne_i s0, s0, 124
   31988:	60 02 00 f4 	bnz s0, 76 <P_UseSpecialLine+0x70>
   3198c:	03 10 02 a8 	load_32 s0, 132(s3)
   31990:	60 02 00 f2 	bz s0, 76 <P_UseSpecialLine+0x78>
   31994:	19 48 00 a6 	load_s16 s0, 18(s25)
   31998:	00 00 e0 c1 	sext_16 s0, s0
   3199c:	00 07 00 0f 	move s24, 1
   319a0:	00 fc ff 05 	add_i s0, s0, -1
   319a4:	20 2c 02 16 	cmpgt_u s1, s0, 139
   319a8:	c1 22 00 f4 	bnz s1, 1112 <P_UseSpecialLine+0x49c>
   319ac:	23 00 00 4f 	movehi s1, 3
   319b0:	00 08 00 0b 	shl s0, s0, 2
   319b4:	21 70 4f 00 	or s1, s1, 5084
   319b8:	00 80 50 c0 	add_i s0, s0, s1
   319bc:	00 00 00 a8 	load_32 s0, (s0)
   319c0:	00 00 00 f0 	b s0
   319c4:	00 80 fc c0 	move s0, s25
   319c8:	20 80 f1 c0 	move s1, s3
   319cc:	8e bd ff f9 	call -68040 <EV_VerticalDoor>
   319d0:	0c 01 00 f6 	b 1072 <P_UseSpecialLine+0x49c>
   319d4:	00 03 00 0f 	move s24, 0
   319d8:	0a 01 00 f6 	b 1064 <P_UseSpecialLine+0x49c>
   319dc:	19 40 00 a0 	load_u8 s0, 16(s25)
   319e0:	00 03 00 0f 	move s24, 0
   319e4:	00 80 00 01 	and s0, s0, 32
   319e8:	c0 20 00 f4 	bnz s0, 1048 <P_UseSpecialLine+0x49c>
   319ec:	19 48 00 a6 	load_s16 s0, 18(s25)
   319f0:	20 80 ff 05 	add_i s1, s0, -32
   319f4:	21 0c 00 18 	cmplt_u s1, s1, 3
   319f8:	01 fd ff f5 	bnz s1, -96 <P_UseSpecialLine+0x34>
   319fc:	20 04 00 11 	cmpne_i s1, s0, 1
   31a00:	01 20 00 f4 	bnz s1, 1024 <P_UseSpecialLine+0x49c>
   31a04:	e5 ff ff f7 	b -108 <P_UseSpecialLine+0x34>
   31a08:	00 80 fc c0 	move s0, s25
   31a0c:	20 18 00 0f 	move s1, 6
   31a10:	40 80 f1 c0 	move s2, s3
   31a14:	65 bc ff f9 	call -69228 <EV_DoLockedDoor>
   31a18:	40 1f 00 f2 	bz s0, 1000 <P_UseSpecialLine+0x49c>
   31a1c:	ee 00 00 f6 	b 952 <P_UseSpecialLine+0x470>
   31a20:	00 80 fc c0 	move s0, s25
   31a24:	20 18 00 0f 	move s1, 6
   31a28:	40 80 f1 c0 	move s2, s3
   31a2c:	5f bc ff f9 	call -69252 <EV_DoLockedDoor>
   31a30:	80 1e 00 f2 	bz s0, 976 <P_UseSpecialLine+0x49c>
   31a34:	f0 00 00 f6 	b 960 <P_UseSpecialLine+0x490>
   31a38:	20 00 00 0f 	move s1, 0
   31a3c:	00 80 fc c0 	move s0, s25
   31a40:	57 cf ff f9 	call -49828 <EV_BuildStairs>
   31a44:	e0 1d 00 f2 	bz s0, 956 <P_UseSpecialLine+0x49c>
   31a48:	eb 00 00 f6 	b 940 <P_UseSpecialLine+0x490>
   31a4c:	00 80 fc c0 	move s0, s25
   31a50:	96 fc ff f9 	call -3496 <EV_DoDonut>
   31a54:	60 1d 00 f2 	bz s0, 940 <P_UseSpecialLine+0x49c>
   31a58:	e7 00 00 f6 	b 924 <P_UseSpecialLine+0x490>
   31a5c:	20 00 00 0f 	move s1, 0
   31a60:	00 80 fc c0 	move s0, s25
   31a64:	4a ff ff f9 	call -728 <P_ChangeSwitchTexture>
   31a68:	85 95 ff f9 	call -109036 <G_ExitLevel>
   31a6c:	e5 00 00 f6 	b 916 <P_UseSpecialLine+0x49c>
   31a70:	20 08 00 0f 	move s1, 2
   31a74:	40 80 00 0f 	move s2, 32
   31a78:	00 80 fc c0 	move s0, s25
   31a7c:	a3 e6 ff f9 	call -25972 <EV_DoPlat>
   31a80:	00 1c 00 f2 	bz s0, 896 <P_UseSpecialLine+0x49c>
   31a84:	dc 00 00 f6 	b 880 <P_UseSpecialLine+0x490>
   31a88:	20 08 00 0f 	move s1, 2
   31a8c:	40 60 00 0f 	move s2, 24
   31a90:	00 80 fc c0 	move s0, s25
   31a94:	9d e6 ff f9 	call -25996 <EV_DoPlat>
   31a98:	40 1b 00 f2 	bz s0, 872 <P_UseSpecialLine+0x49c>
   31a9c:	d6 00 00 f6 	b 856 <P_UseSpecialLine+0x490>
   31aa0:	20 10 00 0f 	move s1, 4
   31aa4:	00 80 fc c0 	move s0, s25
   31aa8:	e2 cd ff f9 	call -51320 <EV_DoFloor>
   31aac:	a0 1a 00 f2 	bz s0, 852 <P_UseSpecialLine+0x49c>
   31ab0:	d1 00 00 f6 	b 836 <P_UseSpecialLine+0x490>
   31ab4:	20 0c 00 0f 	move s1, 3
   31ab8:	a7 00 00 f6 	b 668 <P_UseSpecialLine+0x3f0>
   31abc:	00 07 00 0f 	move s24, 1
   31ac0:	00 80 fc c0 	move s0, s25
   31ac4:	40 00 00 0f 	move s2, 0
   31ac8:	20 00 fc c0 	move s1, s24
   31acc:	8f e6 ff f9 	call -26052 <EV_DoPlat>
   31ad0:	80 19 00 f2 	bz s0, 816 <P_UseSpecialLine+0x49c>
   31ad4:	c8 00 00 f6 	b 800 <P_UseSpecialLine+0x490>
   31ad8:	00 07 00 0f 	move s24, 1
   31adc:	00 80 fc c0 	move s0, s25
   31ae0:	20 00 fc c0 	move s1, s24
   31ae4:	d3 cd ff f9 	call -51380 <EV_DoFloor>
   31ae8:	c0 18 00 f2 	bz s0, 792 <P_UseSpecialLine+0x49c>
   31aec:	c2 00 00 f6 	b 776 <P_UseSpecialLine+0x490>
   31af0:	20 00 00 0f 	move s1, 0
   31af4:	00 80 fc c0 	move s0, s25
   31af8:	5f bc ff f9 	call -69252 <EV_DoDoor>
   31afc:	20 18 00 f2 	bz s0, 772 <P_UseSpecialLine+0x49c>
   31b00:	bd 00 00 f6 	b 756 <P_UseSpecialLine+0x490>
   31b04:	20 00 00 0f 	move s1, 0
   31b08:	00 80 fc c0 	move s0, s25
   31b0c:	28 ba ff f9 	call -71520 <EV_DoCeiling>
   31b10:	80 17 00 f2 	bz s0, 752 <P_UseSpecialLine+0x49c>
   31b14:	b8 00 00 f6 	b 736 <P_UseSpecialLine+0x490>
   31b18:	20 08 00 0f 	move s1, 2
   31b1c:	00 80 fc c0 	move s0, s25
   31b20:	55 bc ff f9 	call -69292 <EV_DoDoor>
   31b24:	e0 16 00 f2 	bz s0, 732 <P_UseSpecialLine+0x49c>
   31b28:	ab 00 00 f6 	b 684 <P_UseSpecialLine+0x470>
   31b2c:	20 00 00 0f 	move s1, 0
   31b30:	00 80 fc c0 	move s0, s25
   31b34:	1e ba ff f9 	call -71560 <EV_DoCeiling>
   31b38:	40 16 00 f2 	bz s0, 712 <P_UseSpecialLine+0x49c>
   31b3c:	a6 00 00 f6 	b 664 <P_UseSpecialLine+0x470>
   31b40:	20 00 00 0f 	move s1, 0
   31b44:	00 80 fc c0 	move s0, s25
   31b48:	ba cd ff f9 	call -51480 <EV_DoFloor>
   31b4c:	a0 15 00 f2 	bz s0, 692 <P_UseSpecialLine+0x49c>
   31b50:	a1 00 00 f6 	b 644 <P_UseSpecialLine+0x470>
   31b54:	20 0c 00 0f 	move s1, 3
   31b58:	00 80 fc c0 	move s0, s25
   31b5c:	14 ba ff f9 	call -71600 <EV_DoCeiling>
   31b60:	00 15 00 f2 	bz s0, 672 <P_UseSpecialLine+0x49c>
   31b64:	a4 00 00 f6 	b 656 <P_UseSpecialLine+0x490>
   31b68:	20 08 00 0f 	move s1, 2
   31b6c:	00 80 fc c0 	move s0, s25
   31b70:	41 bc ff f9 	call -69372 <EV_DoDoor>
   31b74:	60 14 00 f2 	bz s0, 652 <P_UseSpecialLine+0x49c>
   31b78:	9f 00 00 f6 	b 636 <P_UseSpecialLine+0x490>
   31b7c:	20 00 00 0f 	move s1, 0
   31b80:	00 80 fc c0 	move s0, s25
   31b84:	02 ff ff f9 	call -1016 <P_ChangeSwitchTexture>
   31b88:	46 95 ff f9 	call -109288 <G_SecretExitLevel>
   31b8c:	9d 00 00 f6 	b 628 <P_UseSpecialLine+0x49c>
   31b90:	20 24 00 0f 	move s1, 9
   31b94:	00 80 fc c0 	move s0, s25
   31b98:	a6 cd ff f9 	call -51560 <EV_DoFloor>
   31b9c:	20 13 00 f2 	bz s0, 612 <P_UseSpecialLine+0x49c>
   31ba0:	95 00 00 f6 	b 596 <P_UseSpecialLine+0x490>
   31ba4:	00 07 00 0f 	move s24, 1
   31ba8:	00 80 fc c0 	move s0, s25
   31bac:	20 00 fc c0 	move s1, s24
   31bb0:	a0 cd ff f9 	call -51584 <EV_DoFloor>
   31bb4:	60 12 00 f2 	bz s0, 588 <P_UseSpecialLine+0x49c>
   31bb8:	87 00 00 f6 	b 540 <P_UseSpecialLine+0x470>
   31bbc:	20 0c 00 0f 	move s1, 3
   31bc0:	00 80 fc c0 	move s0, s25
   31bc4:	2c bc ff f9 	call -69456 <EV_DoDoor>
   31bc8:	c0 11 00 f2 	bz s0, 568 <P_UseSpecialLine+0x49c>
   31bcc:	82 00 00 f6 	b 520 <P_UseSpecialLine+0x470>
   31bd0:	00 07 00 0f 	move s24, 1
   31bd4:	00 80 fc c0 	move s0, s25
   31bd8:	20 00 fc c0 	move s1, s24
   31bdc:	40 00 fc c0 	move s2, s24
   31be0:	4a e6 ff f9 	call -26328 <EV_DoPlat>
   31be4:	e0 10 00 f2 	bz s0, 540 <P_UseSpecialLine+0x49c>
   31be8:	7b 00 00 f6 	b 492 <P_UseSpecialLine+0x470>
   31bec:	20 00 00 0f 	move s1, 0
   31bf0:	00 80 fc c0 	move s0, s25
   31bf4:	20 bc ff f9 	call -69504 <EV_DoDoor>
   31bf8:	40 10 00 f2 	bz s0, 520 <P_UseSpecialLine+0x49c>
   31bfc:	76 00 00 f6 	b 472 <P_UseSpecialLine+0x470>
   31c00:	20 0c 00 0f 	move s1, 3
   31c04:	00 80 fc c0 	move s0, s25
   31c08:	8a cd ff f9 	call -51672 <EV_DoFloor>
   31c0c:	a0 0f 00 f2 	bz s0, 500 <P_UseSpecialLine+0x49c>
   31c10:	71 00 00 f6 	b 452 <P_UseSpecialLine+0x470>
   31c14:	20 24 00 0f 	move s1, 9
   31c18:	00 80 fc c0 	move s0, s25
   31c1c:	85 cd ff f9 	call -51692 <EV_DoFloor>
   31c20:	00 0f 00 f2 	bz s0, 480 <P_UseSpecialLine+0x49c>
   31c24:	6c 00 00 f6 	b 432 <P_UseSpecialLine+0x470>
   31c28:	20 08 00 0f 	move s1, 2
   31c2c:	40 60 00 0f 	move s2, 24
   31c30:	00 80 fc c0 	move s0, s25
   31c34:	35 e6 ff f9 	call -26412 <EV_DoPlat>
   31c38:	40 0e 00 f2 	bz s0, 456 <P_UseSpecialLine+0x49c>
   31c3c:	66 00 00 f6 	b 408 <P_UseSpecialLine+0x470>
   31c40:	20 08 00 0f 	move s1, 2
   31c44:	40 80 00 0f 	move s2, 32
   31c48:	00 80 fc c0 	move s0, s25
   31c4c:	2f e6 ff f9 	call -26436 <EV_DoPlat>
   31c50:	80 0d 00 f2 	bz s0, 432 <P_UseSpecialLine+0x49c>
   31c54:	60 00 00 f6 	b 384 <P_UseSpecialLine+0x470>
   31c58:	20 0c 00 0f 	move s1, 3
   31c5c:	44 00 00 f6 	b 272 <P_UseSpecialLine+0x408>
   31c60:	20 10 00 0f 	move s1, 4
   31c64:	00 80 fc c0 	move s0, s25
   31c68:	72 cd ff f9 	call -51768 <EV_DoFloor>
   31c6c:	a0 0c 00 f2 	bz s0, 404 <P_UseSpecialLine+0x49c>
   31c70:	59 00 00 f6 	b 356 <P_UseSpecialLine+0x470>
   31c74:	20 08 00 0f 	move s1, 2
   31c78:	00 80 fc c0 	move s0, s25
   31c7c:	6d cd ff f9 	call -51788 <EV_DoFloor>
   31c80:	00 0c 00 f2 	bz s0, 384 <P_UseSpecialLine+0x49c>
   31c84:	54 00 00 f6 	b 336 <P_UseSpecialLine+0x470>
   31c88:	20 08 00 0f 	move s1, 2
   31c8c:	00 80 fc c0 	move s0, s25
   31c90:	68 cd ff f9 	call -51808 <EV_DoFloor>
   31c94:	60 0b 00 f2 	bz s0, 364 <P_UseSpecialLine+0x49c>
   31c98:	57 00 00 f6 	b 348 <P_UseSpecialLine+0x490>
   31c9c:	20 0c 00 0f 	move s1, 3
   31ca0:	00 80 fc c0 	move s0, s25
   31ca4:	63 cd ff f9 	call -51828 <EV_DoFloor>
   31ca8:	c0 0a 00 f2 	bz s0, 344 <P_UseSpecialLine+0x49c>
   31cac:	52 00 00 f6 	b 328 <P_UseSpecialLine+0x490>
   31cb0:	20 00 00 0f 	move s1, 0
   31cb4:	00 80 fc c0 	move s0, s25
   31cb8:	5e cd ff f9 	call -51848 <EV_DoFloor>
   31cbc:	20 0a 00 f2 	bz s0, 324 <P_UseSpecialLine+0x49c>
   31cc0:	4d 00 00 f6 	b 308 <P_UseSpecialLine+0x490>
   31cc4:	20 0c 00 0f 	move s1, 3
   31cc8:	00 80 fc c0 	move s0, s25
   31ccc:	ea bb ff f9 	call -69720 <EV_DoDoor>
   31cd0:	80 09 00 f2 	bz s0, 304 <P_UseSpecialLine+0x49c>
   31cd4:	48 00 00 f6 	b 288 <P_UseSpecialLine+0x490>
   31cd8:	20 14 00 0f 	move s1, 5
   31cdc:	00 80 fc c0 	move s0, s25
   31ce0:	e5 bb ff f9 	call -69740 <EV_DoDoor>
   31ce4:	e0 08 00 f2 	bz s0, 284 <P_UseSpecialLine+0x49c>
   31ce8:	43 00 00 f6 	b 268 <P_UseSpecialLine+0x490>
   31cec:	20 18 00 0f 	move s1, 6
   31cf0:	00 80 fc c0 	move s0, s25
   31cf4:	e0 bb ff f9 	call -69760 <EV_DoDoor>
   31cf8:	40 08 00 f2 	bz s0, 264 <P_UseSpecialLine+0x49c>
   31cfc:	3e 00 00 f6 	b 248 <P_UseSpecialLine+0x490>
   31d00:	20 1c 00 0f 	move s1, 7
   31d04:	00 80 fc c0 	move s0, s25
   31d08:	db bb ff f9 	call -69780 <EV_DoDoor>
   31d0c:	a0 07 00 f2 	bz s0, 244 <P_UseSpecialLine+0x49c>
   31d10:	39 00 00 f6 	b 228 <P_UseSpecialLine+0x490>
   31d14:	20 14 00 0f 	move s1, 5
   31d18:	00 80 fc c0 	move s0, s25
   31d1c:	d6 bb ff f9 	call -69800 <EV_DoDoor>
   31d20:	00 07 00 f2 	bz s0, 224 <P_UseSpecialLine+0x49c>
   31d24:	2c 00 00 f6 	b 176 <P_UseSpecialLine+0x470>
   31d28:	20 18 00 0f 	move s1, 6
   31d2c:	00 80 fc c0 	move s0, s25
   31d30:	d1 bb ff f9 	call -69820 <EV_DoDoor>
   31d34:	60 06 00 f2 	bz s0, 204 <P_UseSpecialLine+0x49c>
   31d38:	27 00 00 f6 	b 156 <P_UseSpecialLine+0x470>
   31d3c:	20 1c 00 0f 	move s1, 7
   31d40:	00 80 fc c0 	move s0, s25
   31d44:	cc bb ff f9 	call -69840 <EV_DoDoor>
   31d48:	c0 05 00 f2 	bz s0, 184 <P_UseSpecialLine+0x49c>
   31d4c:	22 00 00 f6 	b 136 <P_UseSpecialLine+0x470>
   31d50:	20 10 00 0f 	move s1, 4
   31d54:	40 00 00 0f 	move s2, 0
   31d58:	00 80 fc c0 	move s0, s25
   31d5c:	eb e5 ff f9 	call -26708 <EV_DoPlat>
   31d60:	00 05 00 f2 	bz s0, 160 <P_UseSpecialLine+0x49c>
   31d64:	24 00 00 f6 	b 144 <P_UseSpecialLine+0x490>
   31d68:	20 10 00 0f 	move s1, 4
   31d6c:	40 00 00 0f 	move s2, 0
   31d70:	00 80 fc c0 	move s0, s25
   31d74:	e5 e5 ff f9 	call -26732 <EV_DoPlat>
   31d78:	40 04 00 f2 	bz s0, 136 <P_UseSpecialLine+0x49c>
   31d7c:	16 00 00 f6 	b 88 <P_UseSpecialLine+0x470>
   31d80:	00 07 00 0f 	move s24, 1
   31d84:	00 80 fc c0 	move s0, s25
   31d88:	20 00 fc c0 	move s1, s24
   31d8c:	84 ce ff f9 	call -50672 <EV_BuildStairs>
   31d90:	80 03 00 f2 	bz s0, 112 <P_UseSpecialLine+0x49c>
   31d94:	18 00 00 f6 	b 96 <P_UseSpecialLine+0x490>
   31d98:	20 28 00 0f 	move s1, 10
   31d9c:	00 80 fc c0 	move s0, s25
   31da0:	24 cd ff f9 	call -52080 <EV_DoFloor>
   31da4:	e0 02 00 f2 	bz s0, 92 <P_UseSpecialLine+0x49c>
   31da8:	13 00 00 f6 	b 76 <P_UseSpecialLine+0x490>
   31dac:	20 28 00 0f 	move s1, 10
   31db0:	00 80 fc c0 	move s0, s25
   31db4:	1f cd ff f9 	call -52100 <EV_DoFloor>
   31db8:	40 02 00 f2 	bz s0, 72 <P_UseSpecialLine+0x49c>
   31dbc:	06 00 00 f6 	b 24 <P_UseSpecialLine+0x470>
   31dc0:	20 fc 03 0f 	move s1, 255
   31dc4:	02 00 00 f6 	b 8 <P_UseSpecialLine+0x468>
   31dc8:	20 8c 00 0f 	move s1, 35
   31dcc:	00 80 fc c0 	move s0, s25
   31dd0:	f9 d5 ff f9 	call -43036 <EV_LightTurnOn>
   31dd4:	00 07 00 0f 	move s24, 1
   31dd8:	00 80 fc c0 	move s0, s25
   31ddc:	20 00 fc c0 	move s1, s24
   31de0:	07 00 00 f6 	b 28 <P_UseSpecialLine+0x498>
   31de4:	20 30 00 0f 	move s1, 12
   31de8:	00 80 fc c0 	move s0, s25
   31dec:	11 cd ff f9 	call -52156 <EV_DoFloor>
   31df0:	80 00 00 f2 	bz s0, 16 <P_UseSpecialLine+0x49c>
   31df4:	20 00 00 0f 	move s1, 0
   31df8:	00 80 fc c0 	move s0, s25
   31dfc:	64 fe ff f9 	call -1648 <P_ChangeSwitchTexture>
   31e00:	00 00 fc c0 	move s0, s24
   31e04:	fe d3 00 a8 	load_32 ra, 52(sp)
   31e08:	3e e3 00 a8 	load_32 s25, 56(sp)
   31e0c:	1e f3 00 a8 	load_32 s24, 60(sp)
   31e10:	de 03 01 05 	add_i sp, sp, 64
   31e14:	1f 00 00 f0 	ret

0000000000031e18 P_SetMobjState:
   31e18:	de 03 ff 05 	add_i sp, sp, -64
   31e1c:	1e f3 00 88 	store_32 s24, 60(sp)
   31e20:	3e e3 00 88 	store_32 s25, 56(sp)
   31e24:	5e d3 00 88 	store_32 s26, 52(sp)
   31e28:	7e c3 00 88 	store_32 s27, 48(sp)
   31e2c:	fe b3 00 88 	store_32 ra, 44(sp)
   31e30:	54 04 00 4f 	movehi s2, 52
   31e34:	20 03 f0 c0 	move s25, s0
   31e38:	00 07 00 0f 	move s24, 1
   31e3c:	42 23 5c 00 	or s26, s2, 5896
   31e40:	41 00 00 f4 	bnz s1, 8 <P_SetMobjState+0x30>
   31e44:	12 00 00 f6 	b 72 <P_SetMobjState+0x74>
   31e48:	01 70 00 07 	mull_i s0, s1, 28
   31e4c:	7a 03 50 c0 	add_i s27, s26, s0
   31e50:	79 93 01 88 	store_32 s27, 100(s25)
   31e54:	1b 20 00 a8 	load_32 s0, 8(s27)
   31e58:	19 80 01 88 	store_32 s0, 96(s25)
   31e5c:	3b 00 00 a8 	load_32 s1, (s27)
   31e60:	39 90 00 88 	store_32 s1, 36(s25)
   31e64:	3b 10 00 a8 	load_32 s1, 4(s27)
   31e68:	39 a0 00 88 	store_32 s1, 40(s25)
   31e6c:	3b 30 00 a8 	load_32 s1, 12(s27)
   31e70:	81 00 00 f2 	bz s1, 16 <P_SetMobjState+0x68>
   31e74:	00 80 fc c0 	move s0, s25
   31e78:	21 00 00 fc 	call s1
   31e7c:	19 80 01 a8 	load_32 s0, 96(s25)
   31e80:	3b 40 00 a8 	load_32 s1, 16(s27)
   31e84:	e0 fd ff f3 	bz s0, -68 <P_SetMobjState+0x28>
   31e88:	37 00 00 f6 	b 220 <P_SetMobjState+0x14c>
   31e8c:	00 03 00 0f 	move s24, 0
   31e90:	19 93 01 88 	store_32 s24, 100(s25)
   31e94:	30 00 00 4f 	movehi s1, 16
   31e98:	19 a0 01 a8 	load_32 s0, 104(s25)
   31e9c:	21 04 00 00 	or s1, s1, 1
   31ea0:	00 80 10 c0 	and s0, s0, s1
   31ea4:	00 04 00 11 	cmpne_i s0, s0, 1
   31ea8:	20 05 00 f4 	bnz s0, 164 <P_SetMobjState+0x134>
   31eac:	19 60 01 a8 	load_32 s0, 88(s25)
   31eb0:	00 08 00 00 	or s0, s0, 2
   31eb4:	00 e8 00 10 	cmpeq_i s0, s0, 58
   31eb8:	a0 04 00 f4 	bnz s0, 148 <P_SetMobjState+0x134>
   31ebc:	1b 04 00 4f 	movehi s0, 59
   31ec0:	3b 04 00 4f 	movehi s1, 59
   31ec4:	bb 04 00 4f 	movehi s5, 59
   31ec8:	40 10 66 00 	or s2, s0, 6532
   31ecc:	21 30 66 00 	or s1, s1, 6540
   31ed0:	02 00 00 a8 	load_32 s0, (s2)
   31ed4:	60 28 00 07 	mull_i s3, s0, 10
   31ed8:	21 80 51 c0 	add_i s1, s1, s3
   31edc:	79 50 02 a6 	load_s16 s3, 148(s25)
   31ee0:	61 20 00 86 	store_16 s3, 8(s1)
   31ee4:	79 48 02 a6 	load_s16 s3, 146(s25)
   31ee8:	61 18 00 86 	store_16 s3, 6(s1)
   31eec:	79 40 02 a6 	load_s16 s3, 144(s25)
   31ef0:	61 10 00 86 	store_16 s3, 4(s1)
   31ef4:	79 38 02 a6 	load_s16 s3, 142(s25)
   31ef8:	61 08 00 86 	store_16 s3, 2(s1)
   31efc:	7c 04 00 4f 	movehi s3, 60
   31f00:	99 30 02 a6 	load_s16 s4, 140(s25)
   31f04:	81 00 00 86 	store_16 s4, (s1)
   31f08:	25 30 7a 00 	or s1, s5, 7820
   31f0c:	63 40 02 00 	or s3, s3, 144
   31f10:	80 08 00 0b 	shl s4, s0, 2
   31f14:	21 00 52 c0 	add_i s1, s1, s4
   31f18:	9b 04 00 4f 	movehi s4, 59
   31f1c:	63 00 00 a8 	load_32 s3, (s3)
   31f20:	a0 04 00 05 	add_i s5, s0, 1
   31f24:	61 00 00 88 	store_32 s3, (s1)
   31f28:	24 20 66 00 	or s1, s4, 6536
   31f2c:	65 fc 01 01 	and s3, s5, 127
   31f30:	62 00 00 88 	store_32 s3, (s2)
   31f34:	41 00 00 a8 	load_32 s2, (s1)
   31f38:	43 00 11 c1 	cmpne_i s2, s3, s2
   31f3c:	82 00 00 f4 	bnz s2, 16 <P_SetMobjState+0x134>
   31f40:	00 08 00 05 	add_i s0, s0, 2
   31f44:	00 fc 01 01 	and s0, s0, 127
   31f48:	01 00 00 88 	store_32 s0, (s1)
   31f4c:	00 80 fc c0 	move s0, s25
   31f50:	6a df ff f9 	call -33368 <P_UnsetThingPosition>
   31f54:	00 80 fc c0 	move s0, s25
   31f58:	7c 68 00 f8 	call 106992 <S_StopSound>
   31f5c:	00 80 fc c0 	move s0, s25
   31f60:	f6 06 00 f8 	call 7128 <P_RemoveThinker>
   31f64:	00 00 fc c0 	move s0, s24
   31f68:	fe b3 00 a8 	load_32 ra, 44(sp)
   31f6c:	7e c3 00 a8 	load_32 s27, 48(sp)
   31f70:	5e d3 00 a8 	load_32 s26, 52(sp)
   31f74:	3e e3 00 a8 	load_32 s25, 56(sp)
   31f78:	1e f3 00 a8 	load_32 s24, 60(sp)
   31f7c:	de 03 01 05 	add_i sp, sp, 64
   31f80:	1f 00 00 f0 	ret

0000000000031f84 P_RemoveMobj:
   31f84:	de 03 ff 05 	add_i sp, sp, -64
   31f88:	1e f3 00 88 	store_32 s24, 60(sp)
   31f8c:	fe e3 00 88 	store_32 ra, 56(sp)
   31f90:	00 03 f0 c0 	move s24, s0
   31f94:	30 00 00 4f 	movehi s1, 16
   31f98:	18 a0 01 a8 	load_32 s0, 104(s24)
   31f9c:	21 04 00 00 	or s1, s1, 1
   31fa0:	00 80 10 c0 	and s0, s0, s1
   31fa4:	00 04 00 11 	cmpne_i s0, s0, 1
   31fa8:	20 05 00 f4 	bnz s0, 164 <P_RemoveMobj+0xc8>
   31fac:	18 60 01 a8 	load_32 s0, 88(s24)
   31fb0:	00 08 00 00 	or s0, s0, 2
   31fb4:	00 e8 00 10 	cmpeq_i s0, s0, 58
   31fb8:	a0 04 00 f4 	bnz s0, 148 <P_RemoveMobj+0xc8>
   31fbc:	1b 04 00 4f 	movehi s0, 59
   31fc0:	3b 04 00 4f 	movehi s1, 59
   31fc4:	bb 04 00 4f 	movehi s5, 59
   31fc8:	40 10 66 00 	or s2, s0, 6532
   31fcc:	21 30 66 00 	or s1, s1, 6540
   31fd0:	02 00 00 a8 	load_32 s0, (s2)
   31fd4:	60 28 00 07 	mull_i s3, s0, 10
   31fd8:	21 80 51 c0 	add_i s1, s1, s3
   31fdc:	78 50 02 a6 	load_s16 s3, 148(s24)
   31fe0:	61 20 00 86 	store_16 s3, 8(s1)
   31fe4:	78 48 02 a6 	load_s16 s3, 146(s24)
   31fe8:	61 18 00 86 	store_16 s3, 6(s1)
   31fec:	78 40 02 a6 	load_s16 s3, 144(s24)
   31ff0:	61 10 00 86 	store_16 s3, 4(s1)
   31ff4:	78 38 02 a6 	load_s16 s3, 142(s24)
   31ff8:	61 08 00 86 	store_16 s3, 2(s1)
   31ffc:	7c 04 00 4f 	movehi s3, 60
   32000:	98 30 02 a6 	load_s16 s4, 140(s24)
   32004:	81 00 00 86 	store_16 s4, (s1)
   32008:	25 30 7a 00 	or s1, s5, 7820
   3200c:	63 40 02 00 	or s3, s3, 144
   32010:	80 08 00 0b 	shl s4, s0, 2
   32014:	21 00 52 c0 	add_i s1, s1, s4
   32018:	9b 04 00 4f 	movehi s4, 59
   3201c:	63 00 00 a8 	load_32 s3, (s3)
   32020:	a0 04 00 05 	add_i s5, s0, 1
   32024:	61 00 00 88 	store_32 s3, (s1)
   32028:	24 20 66 00 	or s1, s4, 6536
   3202c:	65 fc 01 01 	and s3, s5, 127
   32030:	62 00 00 88 	store_32 s3, (s2)
   32034:	41 00 00 a8 	load_32 s2, (s1)
   32038:	43 00 11 c1 	cmpne_i s2, s3, s2
   3203c:	82 00 00 f4 	bnz s2, 16 <P_RemoveMobj+0xc8>
   32040:	00 08 00 05 	add_i s0, s0, 2
   32044:	00 fc 01 01 	and s0, s0, 127
   32048:	01 00 00 88 	store_32 s0, (s1)
   3204c:	00 00 fc c0 	move s0, s24
   32050:	2a df ff f9 	call -33624 <P_UnsetThingPosition>
   32054:	00 00 fc c0 	move s0, s24
   32058:	3c 68 00 f8 	call 106736 <S_StopSound>
   3205c:	00 00 fc c0 	move s0, s24
   32060:	b6 06 00 f8 	call 6872 <P_RemoveThinker>
   32064:	fe e3 00 a8 	load_32 ra, 56(sp)
   32068:	1e f3 00 a8 	load_32 s24, 60(sp)
   3206c:	de 03 01 05 	add_i sp, sp, 64
   32070:	1f 00 00 f0 	ret

0000000000032074 P_ExplodeMissile:
   32074:	de 03 ff 05 	add_i sp, sp, -64
   32078:	1e f3 00 88 	store_32 s24, 60(sp)
   3207c:	fe e3 00 88 	store_32 ra, 56(sp)
   32080:	00 03 f0 c0 	move s24, s0
   32084:	00 00 00 0f 	move s0, 0
   32088:	18 40 01 88 	store_32 s0, 80(s24)
   3208c:	18 30 01 88 	store_32 s0, 76(s24)
   32090:	18 20 01 88 	store_32 s0, 72(s24)
   32094:	18 04 00 4f 	movehi s0, 56
   32098:	38 60 01 a8 	load_32 s1, 88(s24)
   3209c:	00 30 03 00 	or s0, s0, 204
   320a0:	21 70 01 07 	mull_i s1, s1, 92
   320a4:	00 80 50 c0 	add_i s0, s0, s1
   320a8:	20 c0 00 a8 	load_32 s1, 48(s0)
   320ac:	00 00 fc c0 	move s0, s24
   320b0:	5a ff ff f9 	call -664 <P_SetMobjState>
   320b4:	90 a8 ff f9 	call -89536 <P_Random>
   320b8:	38 80 01 a8 	load_32 s1, 96(s24)
   320bc:	00 0c 00 01 	and s0, s0, 3
   320c0:	01 00 60 c0 	sub_i s0, s1, s0
   320c4:	20 04 00 12 	cmpgt_i s1, s0, 1
   320c8:	41 00 00 f4 	bnz s1, 8 <P_ExplodeMissile+0x5c>
   320cc:	00 04 00 0f 	move s0, 1
   320d0:	18 80 01 88 	store_32 s0, 96(s24)
   320d4:	37 fc ff 4f 	movehi s1, 524279
   320d8:	18 a0 01 a8 	load_32 s0, 104(s24)
   320dc:	21 fc 7f 00 	or s1, s1, 8191
   320e0:	00 80 10 c0 	and s0, s0, s1
   320e4:	18 a0 01 88 	store_32 s0, 104(s24)
   320e8:	18 70 01 a8 	load_32 s0, 92(s24)
   320ec:	20 e0 00 a8 	load_32 s1, 56(s0)
   320f0:	61 00 00 f2 	bz s1, 12 <P_ExplodeMissile+0x88>
   320f4:	00 00 fc c0 	move s0, s24
   320f8:	bb 68 00 f8 	call 107244 <S_StartSound>
   320fc:	fe e3 00 a8 	load_32 ra, 56(sp)
   32100:	1e f3 00 a8 	load_32 s24, 60(sp)
   32104:	de 03 01 05 	add_i sp, sp, 64
   32108:	1f 00 00 f0 	ret

000000000003210c P_XYMovement:
   3210c:	de 03 ff 05 	add_i sp, sp, -64
   32110:	1e f3 00 88 	store_32 s24, 60(sp)
   32114:	3e e3 00 88 	store_32 s25, 56(sp)
   32118:	5e d3 00 88 	store_32 s26, 52(sp)
   3211c:	7e c3 00 88 	store_32 s27, 48(sp)
   32120:	fe b3 00 88 	store_32 ra, 44(sp)
   32124:	00 03 f0 c0 	move s24, s0
   32128:	18 20 01 a8 	load_32 s0, 72(s24)
   3212c:	40 00 00 f4 	bnz s0, 8 <P_XYMovement+0x28>
   32130:	1a 00 00 f6 	b 104 <P_XYMovement+0x8c>
   32134:	70 1f 00 4f 	movehi s27, 240
   32138:	38 10 02 05 	add_i s1, s24, 132
   3213c:	3e 80 00 88 	store_32 s1, 32(sp)
   32140:	58 10 02 a8 	load_32 s2, 132(s24)
   32144:	3b 04 00 00 	or s1, s27, 1
   32148:	5e 20 00 88 	store_32 s2, 8(sp)
   3214c:	20 80 40 c1 	cmplt_i s1, s0, s1
   32150:	41 00 00 f4 	bnz s1, 8 <P_XYMovement+0x4c>
   32154:	06 00 00 f6 	b 24 <P_XYMovement+0x60>
   32158:	2f e0 ff 4f 	movehi s1, 524047
   3215c:	21 fc 7f 00 	or s1, s1, 8191
   32160:	20 80 20 c1 	cmpgt_i s1, s0, s1
   32164:	21 03 00 f4 	bnz s1, 100 <P_XYMovement+0xbc>
   32168:	70 e3 ff 4f 	movehi s27, 524048
   3216c:	78 23 01 88 	store_32 s27, 72(s24)
   32170:	38 33 01 a8 	load_32 s25, 76(s24)
   32174:	10 1c 00 4f 	movehi s0, 240
   32178:	39 00 20 c1 	cmpgt_i s1, s25, s0
   3217c:	21 03 00 f4 	bnz s1, 100 <P_XYMovement+0xd4>
   32180:	0f e0 ff 4f 	movehi s0, 524047
   32184:	00 fc 7f 00 	or s0, s0, 8191
   32188:	19 00 20 c1 	cmpgt_i s0, s25, s0
   3218c:	e0 02 00 f4 	bnz s0, 92 <P_XYMovement+0xdc>
   32190:	10 e0 ff 4f 	movehi s0, 524048
   32194:	13 00 00 f6 	b 76 <P_XYMovement+0xd4>
   32198:	18 30 01 a8 	load_32 s0, 76(s24)
   3219c:	20 18 00 f2 	bz s0, 772 <P_XYMovement+0x394>
   321a0:	18 10 02 05 	add_i s0, s24, 132
   321a4:	1e 80 00 88 	store_32 s0, 32(sp)
   321a8:	18 10 02 a8 	load_32 s0, 132(s24)
   321ac:	60 03 00 0f 	move s27, 0
   321b0:	1e 20 00 88 	store_32 s0, 8(sp)
   321b4:	38 33 01 a8 	load_32 s25, 76(s24)
   321b8:	10 1c 00 4f 	movehi s0, 240
   321bc:	39 00 20 c1 	cmpgt_i s1, s25, s0
   321c0:	01 01 00 f4 	bnz s1, 32 <P_XYMovement+0xd4>
   321c4:	ef ff ff f7 	b -68 <P_XYMovement+0x74>
   321c8:	60 03 f0 c0 	move s27, s0
   321cc:	38 33 01 a8 	load_32 s25, 76(s24)
   321d0:	10 1c 00 4f 	movehi s0, 240
   321d4:	39 00 20 c1 	cmpgt_i s1, s25, s0
   321d8:	41 00 00 f4 	bnz s1, 8 <P_XYMovement+0xd4>
   321dc:	e9 ff ff f7 	b -92 <P_XYMovement+0x74>
   321e0:	18 30 01 88 	store_32 s0, 76(s24)
   321e4:	20 03 f0 c0 	move s25, s0
   321e8:	08 00 00 4f 	movehi s0, 8
   321ec:	1e 70 00 88 	store_32 s0, 28(sp)
   321f0:	1b 04 00 4f 	movehi s0, 59
   321f4:	38 04 00 4f 	movehi s1, 56
   321f8:	40 03 00 0f 	move s26, 0
   321fc:	00 50 2b 00 	or s0, s0, 2772
   32200:	1e 60 00 88 	store_32 s0, 24(sp)
   32204:	01 30 03 00 	or s0, s1, 204
   32208:	1e 50 00 88 	store_32 s0, 20(sp)
   3220c:	17 fc ff 4f 	movehi s0, 524279
   32210:	32 08 00 4f 	movehi s1, 82
   32214:	58 0c 00 4f 	movehi s2, 120
   32218:	00 fc 7f 00 	or s0, s0, 8191
   3221c:	60 04 00 0f 	move s3, 1
   32220:	7e 30 00 88 	store_32 s3, 12(sp)
   32224:	1e 40 00 88 	store_32 s0, 16(sp)
   32228:	01 70 4b 00 	or s0, s1, 4828
   3222c:	1e 10 00 88 	store_32 s0, 4(sp)
   32230:	02 04 00 00 	or s0, s2, 1
   32234:	5e a0 00 88 	store_32 s2, 40(sp)
   32238:	1e 90 00 88 	store_32 s0, 36(sp)
   3223c:	1e a0 00 a8 	load_32 s0, 40(sp)
   32240:	3b 00 20 c1 	cmpgt_i s1, s27, s0
   32244:	18 30 00 a8 	load_32 s0, 12(s24)
   32248:	c1 02 00 f4 	bnz s1, 88 <P_XYMovement+0x194>
   3224c:	3e 90 00 a8 	load_32 s1, 36(sp)
   32250:	39 80 40 c1 	cmplt_i s1, s25, s1
   32254:	41 00 00 f4 	bnz s1, 8 <P_XYMovement+0x150>
   32258:	12 00 00 f6 	b 72 <P_XYMovement+0x194>
   3225c:	38 40 00 a8 	load_32 s1, 16(s24)
   32260:	41 80 5c c0 	add_i s2, s1, s25
   32264:	20 80 fd c0 	move s1, s27
   32268:	60 03 fd c0 	move s27, s26
   3226c:	20 03 fd c0 	move s25, s26
   32270:	21 00 50 c0 	add_i s1, s1, s0
   32274:	00 00 fc c0 	move s0, s24
   32278:	9f d7 ff f9 	call -41348 <P_TryMove>
   3227c:	00 03 00 f4 	bnz s0, 96 <P_XYMovement+0x1d0>
   32280:	1e 80 00 a8 	load_32 s0, 32(sp)
   32284:	00 00 00 a8 	load_32 s0, (s0)
   32288:	00 03 00 f2 	bz s0, 96 <P_XYMovement+0x1dc>
   3228c:	00 00 fc c0 	move s0, s24
   32290:	eb d8 ff f9 	call -40020 <P_SlideMove>
   32294:	19 80 0d c0 	or s0, s25, s27
   32298:	20 fd ff f5 	bnz s0, -92 <P_XYMovement+0x130>
   3229c:	45 00 00 f6 	b 276 <P_XYMovement+0x2a4>
   322a0:	79 7c 00 0a 	shr s3, s25, 31
   322a4:	58 40 00 a8 	load_32 s2, 16(s24)
   322a8:	79 80 51 c0 	add_i s3, s25, s3
   322ac:	3b 7c 00 0a 	shr s1, s27, 31
   322b0:	3b 80 50 c0 	add_i s1, s27, s1
   322b4:	63 04 00 09 	ashr s3, s3, 1
   322b8:	42 80 51 c0 	add_i s2, s2, s3
   322bc:	21 04 00 09 	ashr s1, s1, 1
   322c0:	7b 07 00 09 	ashr s27, s27, 1
   322c4:	39 07 00 09 	ashr s25, s25, 1
   322c8:	21 00 50 c0 	add_i s1, s1, s0
   322cc:	00 00 fc c0 	move s0, s24
   322d0:	89 d7 ff f9 	call -41436 <P_TryMove>
   322d4:	40 00 00 f4 	bnz s0, 8 <P_XYMovement+0x1d0>
   322d8:	ea ff ff f7 	b -88 <P_XYMovement+0x174>
   322dc:	19 80 0d c0 	or s0, s25, s27
   322e0:	e0 fa ff f5 	bnz s0, -164 <P_XYMovement+0x130>
   322e4:	33 00 00 f6 	b 204 <P_XYMovement+0x2a4>
   322e8:	18 a0 01 a8 	load_32 s0, 104(s24)
   322ec:	3e 70 00 a8 	load_32 s1, 28(sp)
   322f0:	20 80 10 c0 	and s1, s0, s1
   322f4:	41 00 00 f2 	bz s1, 8 <P_XYMovement+0x1f0>
   322f8:	06 00 00 f6 	b 24 <P_XYMovement+0x204>
   322fc:	58 33 01 88 	store_32 s26, 76(s24)
   32300:	58 23 01 88 	store_32 s26, 72(s24)
   32304:	19 80 0d c0 	or s0, s25, s27
   32308:	a0 f9 ff f5 	bnz s0, -204 <P_XYMovement+0x130>
   3230c:	29 00 00 f6 	b 164 <P_XYMovement+0x2a4>
   32310:	3e 60 00 a8 	load_32 s1, 24(sp)
   32314:	21 00 00 a8 	load_32 s1, (s1)
   32318:	21 01 00 f2 	bz s1, 36 <P_XYMovement+0x230>
   3231c:	21 d0 00 a8 	load_32 s1, 52(s1)
   32320:	e1 00 00 f2 	bz s1, 28 <P_XYMovement+0x230>
   32324:	21 28 00 a6 	load_s16 s1, 10(s1)
   32328:	5e 10 00 a8 	load_32 s2, 4(sp)
   3232c:	42 00 00 a8 	load_32 s2, (s2)
   32330:	22 80 10 c1 	cmpne_i s1, s2, s1
   32334:	41 00 00 f4 	bnz s1, 8 <P_XYMovement+0x230>
   32338:	6b 00 00 f6 	b 428 <P_XYMovement+0x3d8>
   3233c:	58 43 01 88 	store_32 s26, 80(s24)
   32340:	58 33 01 88 	store_32 s26, 76(s24)
   32344:	58 23 01 88 	store_32 s26, 72(s24)
   32348:	18 60 01 a8 	load_32 s0, 88(s24)
   3234c:	3e 50 00 a8 	load_32 s1, 20(sp)
   32350:	00 70 01 07 	mull_i s0, s0, 92
   32354:	01 00 50 c0 	add_i s0, s1, s0
   32358:	20 c0 00 a8 	load_32 s1, 48(s0)
   3235c:	00 00 fc c0 	move s0, s24
   32360:	ae fe ff f9 	call -1352 <P_SetMobjState>
   32364:	e4 a7 ff f9 	call -90224 <P_Random>
   32368:	38 80 01 a8 	load_32 s1, 96(s24)
   3236c:	00 0c 00 01 	and s0, s0, 3
   32370:	01 00 60 c0 	sub_i s0, s1, s0
   32374:	20 04 00 12 	cmpgt_i s1, s0, 1
   32378:	41 00 00 f4 	bnz s1, 8 <P_XYMovement+0x274>
   3237c:	1e 30 00 a8 	load_32 s0, 12(sp)
   32380:	18 80 01 88 	store_32 s0, 96(s24)
   32384:	18 a0 01 a8 	load_32 s0, 104(s24)
   32388:	3e 40 00 a8 	load_32 s1, 16(sp)
   3238c:	00 80 10 c0 	and s0, s0, s1
   32390:	18 a0 01 88 	store_32 s0, 104(s24)
   32394:	18 70 01 a8 	load_32 s0, 92(s24)
   32398:	20 e0 00 a8 	load_32 s1, 56(s0)
   3239c:	01 fa ff f3 	bz s1, -192 <P_XYMovement+0x1d0>
   323a0:	00 00 fc c0 	move s0, s24
   323a4:	10 68 00 f8 	call 106560 <S_StartSound>
   323a8:	19 80 0d c0 	or s0, s25, s27
   323ac:	80 f4 ff f5 	bnz s0, -368 <P_XYMovement+0x130>
   323b0:	be 20 00 a8 	load_32 s5, 8(sp)
   323b4:	a5 00 00 f2 	bz s5, 20 <P_XYMovement+0x2bc>
   323b8:	05 10 03 a0 	load_u8 s0, 196(s5)
   323bc:	00 10 00 01 	and s0, s0, 4
   323c0:	40 00 00 f2 	bz s0, 8 <P_XYMovement+0x2bc>
   323c4:	33 00 00 f6 	b 204 <P_XYMovement+0x384>
   323c8:	18 a0 01 a8 	load_32 s0, 104(s24)
   323cc:	28 00 01 4f 	movehi s1, 2056
   323d0:	20 80 10 c0 	and s1, s0, s1
   323d4:	81 0a 00 f4 	bnz s1, 336 <P_XYMovement+0x418>
   323d8:	58 50 00 a8 	load_32 s2, 20(s24)
   323dc:	38 e0 00 a8 	load_32 s1, 56(s24)
   323e0:	42 80 20 c1 	cmpgt_i s2, s2, s1
   323e4:	02 0a 00 f4 	bnz s2, 320 <P_XYMovement+0x418>
   323e8:	40 10 00 4f 	movehi s2, 128
   323ec:	40 00 11 c0 	and s2, s0, s2
   323f0:	18 20 01 a8 	load_32 s0, 72(s24)
   323f4:	02 02 00 f2 	bz s2, 64 <P_XYMovement+0x328>
   323f8:	42 00 00 4f 	movehi s2, 2
   323fc:	80 00 51 c0 	add_i s4, s0, s2
   32400:	64 00 00 4f 	movehi s3, 4
   32404:	84 80 61 c1 	cmpgt_u s4, s4, s3
   32408:	c4 00 00 f4 	bnz s4, 24 <P_XYMovement+0x314>
   3240c:	98 30 01 a8 	load_32 s4, 76(s24)
   32410:	63 04 00 00 	or s3, s3, 1
   32414:	44 00 51 c0 	add_i s2, s4, s2
   32418:	42 80 81 c1 	cmplt_u s2, s2, s3
   3241c:	c2 00 00 f4 	bnz s2, 24 <P_XYMovement+0x328>
   32420:	58 d0 00 a8 	load_32 s2, 52(s24)
   32424:	42 00 00 a8 	load_32 s2, (s2)
   32428:	42 00 00 a8 	load_32 s2, (s2)
   3242c:	21 00 11 c1 	cmpne_i s1, s1, s2
   32430:	a1 07 00 f4 	bnz s1, 244 <P_XYMovement+0x418>
   32434:	20 fc 3f 05 	add_i s1, s0, 4095
   32438:	21 f8 7f 16 	cmpgt_u s1, s1, 8190
   3243c:	61 01 00 f4 	bnz s1, 44 <P_XYMovement+0x35c>
   32440:	38 30 01 a8 	load_32 s1, 76(s24)
   32444:	21 fc 3f 05 	add_i s1, s1, 4095
   32448:	21 f8 7f 16 	cmpgt_u s1, s1, 8190
   3244c:	e1 00 00 f4 	bnz s1, 28 <P_XYMovement+0x35c>
   32450:	e5 0d 00 f2 	bz s5, 444 <P_XYMovement+0x500>
   32454:	25 20 00 a0 	load_u8 s1, 8(s5)
   32458:	81 00 00 f4 	bnz s1, 16 <P_XYMovement+0x35c>
   3245c:	25 24 00 a0 	load_u8 s1, 9(s5)
   32460:	41 00 00 f4 	bnz s1, 8 <P_XYMovement+0x35c>
   32464:	5c 00 00 f6 	b 368 <P_XYMovement+0x4c8>
   32468:	27 00 00 4f 	movehi s1, 7
   3246c:	21 03 20 00 	or s25, s1, 2048
   32470:	20 80 fc c0 	move s1, s25
   32474:	b0 a6 ff f9 	call -91456 <FixedMul>
   32478:	18 20 01 88 	store_32 s0, 72(s24)
   3247c:	18 30 01 a8 	load_32 s0, 76(s24)
   32480:	20 80 fc c0 	move s1, s25
   32484:	ac a6 ff f9 	call -91472 <FixedMul>
   32488:	18 30 01 88 	store_32 s0, 76(s24)
   3248c:	26 00 00 f6 	b 152 <P_XYMovement+0x418>
   32490:	00 00 00 0f 	move s0, 0
   32494:	18 30 01 88 	store_32 s0, 76(s24)
   32498:	18 20 01 88 	store_32 s0, 72(s24)
   3249c:	22 00 00 f6 	b 136 <P_XYMovement+0x418>
   324a0:	18 a0 01 a8 	load_32 s0, 104(s24)
   324a4:	20 00 01 4f 	movehi s1, 2048
   324a8:	20 80 10 c0 	and s1, s0, s1
   324ac:	c1 03 00 f2 	bz s1, 120 <P_XYMovement+0x418>
   324b0:	3f fc fe 4f 	movehi s1, 522239
   324b4:	21 fc 7f 00 	or s1, s1, 8191
   324b8:	00 80 10 c0 	and s0, s0, s1
   324bc:	18 a0 01 88 	store_32 s0, 104(s24)
   324c0:	00 00 00 0f 	move s0, 0
   324c4:	18 40 01 88 	store_32 s0, 80(s24)
   324c8:	18 30 01 88 	store_32 s0, 76(s24)
   324cc:	18 20 01 88 	store_32 s0, 72(s24)
   324d0:	18 70 01 a8 	load_32 s0, 92(s24)
   324d4:	20 10 00 a8 	load_32 s1, 4(s0)
   324d8:	00 00 fc c0 	move s0, s24
   324dc:	4f fe ff f9 	call -1732 <P_SetMobjState>
   324e0:	11 00 00 f6 	b 68 <P_XYMovement+0x418>
   324e4:	30 00 00 4f 	movehi s1, 16
   324e8:	21 04 00 00 	or s1, s1, 1
   324ec:	00 80 10 c0 	and s0, s0, s1
   324f0:	00 04 00 11 	cmpne_i s0, s0, 1
   324f4:	c0 00 00 f4 	bnz s0, 24 <P_XYMovement+0x400>
   324f8:	18 60 01 a8 	load_32 s0, 88(s24)
   324fc:	00 08 00 00 	or s0, s0, 2
   32500:	00 e8 00 10 	cmpeq_i s0, s0, 58
   32504:	40 00 00 f4 	bnz s0, 8 <P_XYMovement+0x400>
   32508:	0e 00 00 f6 	b 56 <P_XYMovement+0x434>
   3250c:	00 00 fc c0 	move s0, s24
   32510:	fa dd ff f9 	call -34840 <P_UnsetThingPosition>
   32514:	00 00 fc c0 	move s0, s24
   32518:	0c 67 00 f8 	call 105520 <S_StopSound>
   3251c:	00 00 fc c0 	move s0, s24
   32520:	86 05 00 f8 	call 5656 <P_RemoveThinker>
   32524:	fe b3 00 a8 	load_32 ra, 44(sp)
   32528:	7e c3 00 a8 	load_32 s27, 48(sp)
   3252c:	5e d3 00 a8 	load_32 s26, 52(sp)
   32530:	3e e3 00 a8 	load_32 s25, 56(sp)
   32534:	1e f3 00 a8 	load_32 s24, 60(sp)
   32538:	de 03 01 05 	add_i sp, sp, 64
   3253c:	1f 00 00 f0 	ret
   32540:	1b 04 00 4f 	movehi s0, 59
   32544:	3b 04 00 4f 	movehi s1, 59
   32548:	bb 04 00 4f 	movehi s5, 59
   3254c:	40 10 66 00 	or s2, s0, 6532
   32550:	21 30 66 00 	or s1, s1, 6540
   32554:	02 00 00 a8 	load_32 s0, (s2)
   32558:	60 28 00 07 	mull_i s3, s0, 10
   3255c:	21 80 51 c0 	add_i s1, s1, s3
   32560:	78 50 02 a6 	load_s16 s3, 148(s24)
   32564:	61 20 00 86 	store_16 s3, 8(s1)
   32568:	78 48 02 a6 	load_s16 s3, 146(s24)
   3256c:	61 18 00 86 	store_16 s3, 6(s1)
   32570:	78 40 02 a6 	load_s16 s3, 144(s24)
   32574:	61 10 00 86 	store_16 s3, 4(s1)
   32578:	78 38 02 a6 	load_s16 s3, 142(s24)
   3257c:	61 08 00 86 	store_16 s3, 2(s1)
   32580:	7c 04 00 4f 	movehi s3, 60
   32584:	98 30 02 a6 	load_s16 s4, 140(s24)
   32588:	81 00 00 86 	store_16 s4, (s1)
   3258c:	25 30 7a 00 	or s1, s5, 7820
   32590:	63 40 02 00 	or s3, s3, 144
   32594:	80 08 00 0b 	shl s4, s0, 2
   32598:	21 00 52 c0 	add_i s1, s1, s4
   3259c:	9b 04 00 4f 	movehi s4, 59
   325a0:	63 00 00 a8 	load_32 s3, (s3)
   325a4:	a0 04 00 05 	add_i s5, s0, 1
   325a8:	61 00 00 88 	store_32 s3, (s1)
   325ac:	24 20 66 00 	or s1, s4, 6536
   325b0:	65 fc 01 01 	and s3, s5, 127
   325b4:	62 00 00 88 	store_32 s3, (s2)
   325b8:	41 00 00 a8 	load_32 s2, (s1)
   325bc:	43 00 11 c1 	cmpne_i s2, s3, s2
   325c0:	62 fa ff f5 	bnz s2, -180 <P_XYMovement+0x400>
   325c4:	00 08 00 05 	add_i s0, s0, 2
   325c8:	00 fc 01 01 	and s0, s0, 127
   325cc:	01 00 00 88 	store_32 s0, (s1)
   325d0:	cf ff ff f7 	b -196 <P_XYMovement+0x400>
   325d4:	05 00 00 a8 	load_32 s0, (s5)
   325d8:	54 04 00 4f 	movehi s2, 52
   325dc:	42 20 5c 00 	or s2, s2, 5896
   325e0:	20 90 01 a8 	load_32 s1, 100(s0)
   325e4:	21 00 61 c0 	sub_i s1, s1, s2
   325e8:	5b d8 b6 4f 	movehi s2, 374491
   325ec:	21 08 00 09 	ashr s1, s1, 2
   325f0:	42 dc 36 00 	or s2, s2, 3511
   325f4:	21 00 71 c0 	mull_i s1, s1, s2
   325f8:	21 a8 fd 05 	add_i s1, s1, -150
   325fc:	21 0c 00 16 	cmpgt_u s1, s1, 3
   32600:	61 00 00 f4 	bnz s1, 12 <P_XYMovement+0x500>
   32604:	20 54 02 0f 	move s1, 149
   32608:	04 fe ff f9 	call -2032 <P_SetMobjState>
   3260c:	00 00 00 0f 	move s0, 0
   32610:	18 20 01 88 	store_32 s0, 72(s24)
   32614:	9d ff ff f7 	b -396 <P_XYMovement+0x37c>

0000000000032618 P_ZMovement:
   32618:	de 03 ff 05 	add_i sp, sp, -64
   3261c:	1e f3 00 88 	store_32 s24, 60(sp)
   32620:	fe e3 00 88 	store_32 ra, 56(sp)
   32624:	00 03 f0 c0 	move s24, s0
   32628:	38 10 02 a8 	load_32 s1, 132(s24)
   3262c:	18 50 00 a8 	load_32 s0, 20(s24)
   32630:	81 01 00 f2 	bz s1, 48 <P_ZMovement+0x48>
   32634:	58 e0 00 a8 	load_32 s2, 56(s24)
   32638:	60 00 31 c1 	cmpge_i s3, s0, s2
   3263c:	23 01 00 f4 	bnz s3, 36 <P_ZMovement+0x48>
   32640:	61 50 00 a8 	load_32 s3, 20(s1)
   32644:	88 28 00 4f 	movehi s4, 328
   32648:	40 00 61 c0 	sub_i s2, s0, s2
   3264c:	43 00 51 c0 	add_i s2, s3, s2
   32650:	41 50 00 88 	store_32 s2, 20(s1)
   32654:	64 00 61 c0 	sub_i s3, s4, s2
   32658:	43 0c 00 09 	ashr s2, s3, 3
   3265c:	41 60 00 88 	store_32 s2, 24(s1)
   32660:	38 40 01 a8 	load_32 s1, 80(s24)
   32664:	42 00 00 4f 	movehi s2, 2
   32668:	20 80 50 c0 	add_i s1, s0, s1
   3266c:	38 50 00 88 	store_32 s1, 20(s24)
   32670:	18 a0 01 a8 	load_32 s0, 104(s24)
   32674:	40 00 11 c0 	and s2, s0, s2
   32678:	62 04 00 f2 	bz s2, 140 <P_ZMovement+0xec>
   3267c:	40 20 01 4f 	movehi s2, 2304
   32680:	40 00 11 c0 	and s2, s0, s2
   32684:	18 e0 01 a8 	load_32 s0, 120(s24)
   32688:	e2 03 00 f4 	bnz s2, 124 <P_ZMovement+0xec>
   3268c:	c0 03 00 f2 	bz s0, 120 <P_ZMovement+0xec>
   32690:	38 30 00 a8 	load_32 s1, 12(s24)
   32694:	40 30 00 a8 	load_32 s2, 12(s0)
   32698:	78 40 00 a8 	load_32 s3, 16(s24)
   3269c:	80 40 00 a8 	load_32 s4, 16(s0)
   326a0:	01 00 61 c0 	sub_i s0, s1, s2
   326a4:	23 00 62 c0 	sub_i s1, s3, s4
   326a8:	05 dc ff f9 	call -36844 <P_AproxDistance>
   326ac:	38 e0 01 a8 	load_32 s1, 120(s24)
   326b0:	41 50 00 a8 	load_32 s2, 20(s1)
   326b4:	38 10 01 a8 	load_32 s1, 68(s24)
   326b8:	61 04 00 09 	ashr s3, s1, 1
   326bc:	38 50 00 a8 	load_32 s1, 20(s24)
   326c0:	43 00 51 c0 	add_i s2, s3, s2
   326c4:	42 80 60 c0 	sub_i s2, s2, s1
   326c8:	62 fc ff 12 	cmpgt_i s3, s2, -1
   326cc:	c3 00 00 f4 	bnz s3, 24 <P_ZMovement+0xcc>
   326d0:	62 f4 ff 07 	mull_i s3, s2, -3
   326d4:	60 80 31 c1 	cmpge_i s3, s0, s3
   326d8:	63 00 00 f4 	bnz s3, 12 <P_ZMovement+0xcc>
   326dc:	00 fc ff 4f 	movehi s0, 524256
   326e0:	07 00 00 f6 	b 28 <P_ZMovement+0xe4>
   326e4:	62 04 00 14 	cmplt_i s3, s2, 1
   326e8:	e3 00 00 f4 	bnz s3, 28 <P_ZMovement+0xec>
   326ec:	42 0c 00 07 	mull_i s2, s2, 3
   326f0:	00 00 31 c1 	cmpge_i s0, s0, s2
   326f4:	80 00 00 f4 	bnz s0, 16 <P_ZMovement+0xec>
   326f8:	00 04 00 4f 	movehi s0, 32
   326fc:	21 00 50 c0 	add_i s1, s1, s0
   32700:	38 50 00 88 	store_32 s1, 20(s24)
   32704:	58 e0 00 a8 	load_32 s2, 56(s24)
   32708:	18 a0 01 a8 	load_32 s0, 104(s24)
   3270c:	61 00 21 c1 	cmpgt_i s3, s1, s2
   32710:	43 00 00 f4 	bnz s3, 8 <P_ZMovement+0x100>
   32714:	09 00 00 f6 	b 36 <P_ZMovement+0x120>
   32718:	40 00 08 01 	and s2, s0, 512
   3271c:	22 05 00 f4 	bnz s2, 164 <P_ZMovement+0x1a8>
   32720:	58 40 01 a8 	load_32 s2, 80(s24)
   32724:	42 00 00 f4 	bnz s2, 8 <P_ZMovement+0x114>
   32728:	24 00 00 f6 	b 144 <P_ZMovement+0x1a0>
   3272c:	78 fc ff 4f 	movehi s3, 524280
   32730:	42 80 51 c0 	add_i s2, s2, s3
   32734:	22 00 00 f6 	b 136 <P_ZMovement+0x1a4>
   32738:	20 00 01 4f 	movehi s1, 2048
   3273c:	60 80 10 c0 	and s3, s0, s1
   32740:	38 40 01 a8 	load_32 s1, 80(s24)
   32744:	83 00 00 f2 	bz s3, 16 <P_ZMovement+0x13c>
   32748:	60 00 00 0f 	move s3, 0
   3274c:	23 80 60 c0 	sub_i s1, s3, s1
   32750:	38 40 01 88 	store_32 s1, 80(s24)
   32754:	61 fc ff 12 	cmpgt_i s3, s1, -1
   32758:	03 02 00 f4 	bnz s3, 64 <P_ZMovement+0x180>
   3275c:	7f f4 ff 4f 	movehi s3, 524223
   32760:	63 fc 7f 00 	or s3, s3, 8191
   32764:	81 80 21 c1 	cmpgt_i s4, s1, s3
   32768:	78 10 02 a8 	load_32 s3, 132(s24)
   3276c:	24 01 00 f4 	bnz s4, 36 <P_ZMovement+0x178>
   32770:	03 01 00 f2 	bz s3, 32 <P_ZMovement+0x178>
   32774:	01 0c 00 09 	ashr s0, s1, 3
   32778:	03 60 00 88 	store_32 s0, 24(s3)
   3277c:	20 88 00 0f 	move s1, 34
   32780:	00 00 fc c0 	move s0, s24
   32784:	18 67 00 f8 	call 105568 <S_StartSound>
   32788:	58 e0 00 a8 	load_32 s2, 56(s24)
   3278c:	18 a0 01 a8 	load_32 s0, 104(s24)
   32790:	20 00 00 0f 	move s1, 0
   32794:	38 40 01 88 	store_32 s1, 80(s24)
   32798:	28 00 00 4f 	movehi s1, 8
   3279c:	58 50 00 88 	store_32 s2, 20(s24)
   327a0:	61 00 40 00 	or s3, s1, 4096
   327a4:	60 80 11 c0 	and s3, s0, s3
   327a8:	63 80 10 c1 	cmpne_i s3, s3, s1
   327ac:	20 00 f1 c0 	move s1, s2
   327b0:	83 00 00 f4 	bnz s3, 16 <P_ZMovement+0x1a8>
   327b4:	1a 00 00 f6 	b 104 <P_ZMovement+0x204>
   327b8:	50 fc ff 4f 	movehi s2, 524272
   327bc:	58 40 01 88 	store_32 s2, 80(s24)
   327c0:	58 10 01 a8 	load_32 s2, 68(s24)
   327c4:	78 f0 00 a8 	load_32 s3, 60(s24)
   327c8:	22 80 50 c0 	add_i s1, s2, s1
   327cc:	21 80 51 c1 	cmple_i s1, s1, s3
   327d0:	21 06 00 f4 	bnz s1, 196 <P_ZMovement+0x27c>
   327d4:	38 40 01 a8 	load_32 s1, 80(s24)
   327d8:	81 04 00 14 	cmplt_i s4, s1, 1
   327dc:	64 00 00 f4 	bnz s4, 12 <P_ZMovement+0x1d0>
   327e0:	20 00 00 0f 	move s1, 0
   327e4:	38 40 01 88 	store_32 s1, 80(s24)
   327e8:	43 00 61 c0 	sub_i s2, s3, s2
   327ec:	58 50 00 88 	store_32 s2, 20(s24)
   327f0:	60 00 01 4f 	movehi s3, 2048
   327f4:	60 80 11 c0 	and s3, s0, s3
   327f8:	83 00 00 f2 	bz s3, 16 <P_ZMovement+0x1f0>
   327fc:	40 00 00 0f 	move s2, 0
   32800:	22 80 60 c0 	sub_i s1, s2, s1
   32804:	38 40 01 88 	store_32 s1, 80(s24)
   32808:	28 00 00 4f 	movehi s1, 8
   3280c:	41 00 40 00 	or s2, s1, 4096
   32810:	00 00 11 c0 	and s0, s0, s2
   32814:	00 80 10 c1 	cmpne_i s0, s0, s1
   32818:	e0 03 00 f4 	bnz s0, 124 <P_ZMovement+0x27c>
   3281c:	00 00 00 0f 	move s0, 0
   32820:	18 40 01 88 	store_32 s0, 80(s24)
   32824:	18 30 01 88 	store_32 s0, 76(s24)
   32828:	18 20 01 88 	store_32 s0, 72(s24)
   3282c:	18 04 00 4f 	movehi s0, 56
   32830:	38 60 01 a8 	load_32 s1, 88(s24)
   32834:	00 30 03 00 	or s0, s0, 204
   32838:	21 70 01 07 	mull_i s1, s1, 92
   3283c:	00 80 50 c0 	add_i s0, s0, s1
   32840:	20 c0 00 a8 	load_32 s1, 48(s0)
   32844:	00 00 fc c0 	move s0, s24
   32848:	74 fd ff f9 	call -2608 <P_SetMobjState>
   3284c:	aa a6 ff f9 	call -91480 <P_Random>
   32850:	38 80 01 a8 	load_32 s1, 96(s24)
   32854:	00 0c 00 01 	and s0, s0, 3
   32858:	01 00 60 c0 	sub_i s0, s1, s0
   3285c:	20 04 00 12 	cmpgt_i s1, s0, 1
   32860:	41 00 00 f4 	bnz s1, 8 <P_ZMovement+0x250>
   32864:	00 04 00 0f 	move s0, 1
   32868:	18 80 01 88 	store_32 s0, 96(s24)
   3286c:	37 fc ff 4f 	movehi s1, 524279
   32870:	18 a0 01 a8 	load_32 s0, 104(s24)
   32874:	21 fc 7f 00 	or s1, s1, 8191
   32878:	00 80 10 c0 	and s0, s0, s1
   3287c:	18 a0 01 88 	store_32 s0, 104(s24)
   32880:	18 70 01 a8 	load_32 s0, 92(s24)
   32884:	20 e0 00 a8 	load_32 s1, 56(s0)
   32888:	61 00 00 f2 	bz s1, 12 <P_ZMovement+0x27c>
   3288c:	00 00 fc c0 	move s0, s24
   32890:	d5 66 00 f8 	call 105300 <S_StartSound>
   32894:	fe e3 00 a8 	load_32 ra, 56(sp)
   32898:	1e f3 00 a8 	load_32 s24, 60(sp)
   3289c:	de 03 01 05 	add_i sp, sp, 64
   328a0:	1f 00 00 f0 	ret

00000000000328a4 P_NightmareRespawn:
   328a4:	de 03 ff 05 	add_i sp, sp, -64
   328a8:	1e f3 00 88 	store_32 s24, 60(sp)
   328ac:	3e e3 00 88 	store_32 s25, 56(sp)
   328b0:	5e d3 00 88 	store_32 s26, 52(sp)
   328b4:	7e c3 00 88 	store_32 s27, 48(sp)
   328b8:	fe b3 00 88 	store_32 ra, 44(sp)
   328bc:	00 03 f0 c0 	move s24, s0
   328c0:	18 30 02 a6 	load_s16 s0, 140(s24)
   328c4:	38 38 02 a6 	load_s16 s1, 142(s24)
   328c8:	40 43 00 0b 	shl s26, s0, 16
   328cc:	21 43 00 0b 	shl s25, s1, 16
   328d0:	00 00 fc c0 	move s0, s24
   328d4:	20 00 fd c0 	move s1, s26
   328d8:	40 80 fc c0 	move s2, s25
   328dc:	61 d5 ff f9 	call -43644 <P_CheckPosition>
   328e0:	60 0e 00 f2 	bz s0, 460 <P_NightmareRespawn+0x208>
   328e4:	18 30 00 a8 	load_32 s0, 12(s24)
   328e8:	78 30 02 05 	add_i s3, s24, 140
   328ec:	38 40 00 a8 	load_32 s1, 16(s24)
   328f0:	58 d0 00 a8 	load_32 s2, 52(s24)
   328f4:	42 00 00 a8 	load_32 s2, (s2)
   328f8:	7e 90 00 88 	store_32 s3, 36(sp)
   328fc:	60 9c 00 0f 	move s3, 39
   32900:	42 00 00 a8 	load_32 s2, (s2)
   32904:	7e a0 00 88 	store_32 s3, 40(sp)
   32908:	70 00 00 f8 	call 448 <P_SpawnMobj>
   3290c:	60 8f 00 0f 	move s27, 35
   32910:	20 80 fd c0 	move s1, s27
   32914:	b4 66 00 f8 	call 105168 <S_StartSound>
   32918:	00 00 fd c0 	move s0, s26
   3291c:	20 80 fc c0 	move s1, s25
   32920:	63 1d 00 f8 	call 30092 <R_PointInSubsector>
   32924:	00 00 00 a8 	load_32 s0, (s0)
   32928:	40 00 00 a8 	load_32 s2, (s0)
   3292c:	00 00 fd c0 	move s0, s26
   32930:	20 80 fc c0 	move s1, s25
   32934:	7e a0 00 a8 	load_32 s3, 40(sp)
   32938:	64 00 00 f8 	call 400 <P_SpawnMobj>
   3293c:	20 80 fd c0 	move s1, s27
   32940:	a9 66 00 f8 	call 105124 <S_StartSound>
   32944:	18 70 01 a8 	load_32 s0, 92(s24)
   32948:	00 50 01 a8 	load_32 s0, 84(s0)
   3294c:	00 00 04 01 	and s0, s0, 256
   32950:	00 00 00 10 	cmpeq_i s0, s0, 0
   32954:	80 00 00 f4 	bnz s0, 16 <P_NightmareRespawn+0xc0>
   32958:	1f fc 7f 4f 	movehi s0, 262143
   3295c:	40 fc 7f 00 	or s2, s0, 8191
   32960:	02 00 00 f6 	b 8 <P_NightmareRespawn+0xc4>
   32964:	40 00 80 4f 	movehi s2, 262144
   32968:	7e 93 00 a8 	load_32 s27, 36(sp)
   3296c:	78 60 01 a8 	load_32 s3, 88(s24)
   32970:	00 00 fd c0 	move s0, s26
   32974:	20 80 fc c0 	move s1, s25
   32978:	54 00 00 f8 	call 336 <P_SpawnMobj>
   3297c:	3b 00 00 a8 	load_32 s1, (s27)
   32980:	5b 08 b6 4f 	movehi s2, 372827
   32984:	20 30 02 88 	store_32 s1, 140(s0)
   32988:	3b 10 00 a8 	load_32 s1, 4(s27)
   3298c:	20 40 02 88 	store_32 s1, 144(s0)
   32990:	42 dc 02 00 	or s2, s2, 183
   32994:	3b 20 00 a6 	load_s16 s1, 8(s27)
   32998:	20 50 02 86 	store_16 s1, 148(s0)
   3299c:	38 40 02 a6 	load_s16 s1, 144(s24)
   329a0:	41 00 f1 c1 	mulh_i s2, s1, s2
   329a4:	22 80 50 c0 	add_i s1, s2, s1
   329a8:	41 14 00 0a 	shr s2, s1, 5
   329ac:	21 7c 00 0a 	shr s1, s1, 31
   329b0:	22 80 50 c0 	add_i s1, s2, s1
   329b4:	21 74 00 0b 	shl s1, s1, 29
   329b8:	20 80 00 88 	store_32 s1, 32(s0)
   329bc:	38 50 02 a0 	load_u8 s1, 148(s24)
   329c0:	21 20 00 01 	and s1, s1, 8
   329c4:	81 00 00 f2 	bz s1, 16 <P_NightmareRespawn+0x130>
   329c8:	20 a0 01 a8 	load_32 s1, 104(s0)
   329cc:	21 80 00 00 	or s1, s1, 32
   329d0:	20 a0 01 88 	store_32 s1, 104(s0)
   329d4:	20 48 00 0f 	move s1, 18
   329d8:	20 f0 01 88 	store_32 s1, 124(s0)
   329dc:	30 00 00 4f 	movehi s1, 16
   329e0:	18 a0 01 a8 	load_32 s0, 104(s24)
   329e4:	21 04 00 00 	or s1, s1, 1
   329e8:	00 80 10 c0 	and s0, s0, s1
   329ec:	00 04 00 11 	cmpne_i s0, s0, 1
   329f0:	20 05 00 f4 	bnz s0, 164 <P_NightmareRespawn+0x1f0>
   329f4:	18 60 01 a8 	load_32 s0, 88(s24)
   329f8:	00 08 00 00 	or s0, s0, 2
   329fc:	00 e8 00 10 	cmpeq_i s0, s0, 58
   32a00:	a0 04 00 f4 	bnz s0, 148 <P_NightmareRespawn+0x1f0>
   32a04:	1b 04 00 4f 	movehi s0, 59
   32a08:	3b 04 00 4f 	movehi s1, 59
   32a0c:	bb 04 00 4f 	movehi s5, 59
   32a10:	40 10 66 00 	or s2, s0, 6532
   32a14:	21 30 66 00 	or s1, s1, 6540
   32a18:	02 00 00 a8 	load_32 s0, (s2)
   32a1c:	60 28 00 07 	mull_i s3, s0, 10
   32a20:	21 80 51 c0 	add_i s1, s1, s3
   32a24:	7b 20 00 a6 	load_s16 s3, 8(s27)
   32a28:	61 20 00 86 	store_16 s3, 8(s1)
   32a2c:	7b 18 00 a6 	load_s16 s3, 6(s27)
   32a30:	61 18 00 86 	store_16 s3, 6(s1)
   32a34:	7b 10 00 a6 	load_s16 s3, 4(s27)
   32a38:	61 10 00 86 	store_16 s3, 4(s1)
   32a3c:	7b 08 00 a6 	load_s16 s3, 2(s27)
   32a40:	61 08 00 86 	store_16 s3, 2(s1)
   32a44:	7c 04 00 4f 	movehi s3, 60
   32a48:	9b 00 00 a6 	load_s16 s4, (s27)
   32a4c:	81 00 00 86 	store_16 s4, (s1)
   32a50:	25 30 7a 00 	or s1, s5, 7820
   32a54:	63 40 02 00 	or s3, s3, 144
   32a58:	80 08 00 0b 	shl s4, s0, 2
   32a5c:	21 00 52 c0 	add_i s1, s1, s4
   32a60:	9b 04 00 4f 	movehi s4, 59
   32a64:	63 00 00 a8 	load_32 s3, (s3)
   32a68:	a0 04 00 05 	add_i s5, s0, 1
   32a6c:	61 00 00 88 	store_32 s3, (s1)
   32a70:	24 20 66 00 	or s1, s4, 6536
   32a74:	65 fc 01 01 	and s3, s5, 127
   32a78:	62 00 00 88 	store_32 s3, (s2)
   32a7c:	41 00 00 a8 	load_32 s2, (s1)
   32a80:	43 00 11 c1 	cmpne_i s2, s3, s2
   32a84:	82 00 00 f4 	bnz s2, 16 <P_NightmareRespawn+0x1f0>
   32a88:	00 08 00 05 	add_i s0, s0, 2
   32a8c:	00 fc 01 01 	and s0, s0, 127
   32a90:	01 00 00 88 	store_32 s0, (s1)
   32a94:	00 00 fc c0 	move s0, s24
   32a98:	98 dc ff f9 	call -36256 <P_UnsetThingPosition>
   32a9c:	00 00 fc c0 	move s0, s24
   32aa0:	aa 65 00 f8 	call 104104 <S_StopSound>
   32aa4:	00 00 fc c0 	move s0, s24
   32aa8:	24 04 00 f8 	call 4240 <P_RemoveThinker>
   32aac:	fe b3 00 a8 	load_32 ra, 44(sp)
   32ab0:	7e c3 00 a8 	load_32 s27, 48(sp)
   32ab4:	5e d3 00 a8 	load_32 s26, 52(sp)
   32ab8:	3e e3 00 a8 	load_32 s25, 56(sp)
   32abc:	1e f3 00 a8 	load_32 s24, 60(sp)
   32ac0:	de 03 01 05 	add_i sp, sp, 64
   32ac4:	1f 00 00 f0 	ret

0000000000032ac8 P_SpawnMobj:
   32ac8:	de 03 ff 05 	add_i sp, sp, -64
   32acc:	1e f3 00 88 	store_32 s24, 60(sp)
   32ad0:	3e e3 00 88 	store_32 s25, 56(sp)
   32ad4:	5e d3 00 88 	store_32 s26, 52(sp)
   32ad8:	7e c3 00 88 	store_32 s27, 48(sp)
   32adc:	fe b3 00 88 	store_32 ra, 44(sp)
   32ae0:	60 73 02 0f 	move s27, 156
   32ae4:	20 03 00 0f 	move s25, 0
   32ae8:	40 83 f1 c0 	move s26, s3
   32aec:	5e a0 00 88 	store_32 s2, 40(sp)
   32af0:	3e 90 00 88 	store_32 s1, 36(sp)
   32af4:	20 c8 00 0f 	move s1, 50
   32af8:	1e 80 00 88 	store_32 s0, 32(sp)
   32afc:	00 80 fd c0 	move s0, s27
   32b00:	40 80 fc c0 	move s2, s25
   32b04:	75 67 00 f8 	call 105940 <Z_Malloc>
   32b08:	00 03 f0 c0 	move s24, s0
   32b0c:	20 80 fc c0 	move s1, s25
   32b10:	40 80 fd c0 	move s2, s27
   32b14:	e4 7b 00 f8 	call 126864 <memset>
   32b18:	18 04 00 4f 	movehi s0, 56
   32b1c:	58 63 01 88 	store_32 s26, 88(s24)
   32b20:	3a 70 01 07 	mull_i s1, s26, 92
   32b24:	00 30 03 00 	or s0, s0, 204
   32b28:	20 83 50 c0 	add_i s25, s0, s1
   32b2c:	38 73 01 88 	store_32 s25, 92(s24)
   32b30:	1e 80 00 a8 	load_32 s0, 32(sp)
   32b34:	18 30 00 88 	store_32 s0, 12(s24)
   32b38:	1e 90 00 a8 	load_32 s0, 36(sp)
   32b3c:	18 40 00 88 	store_32 s0, 16(s24)
   32b40:	19 00 01 a8 	load_32 s0, 64(s25)
   32b44:	18 00 01 88 	store_32 s0, 64(s24)
   32b48:	19 10 01 a8 	load_32 s0, 68(s25)
   32b4c:	18 10 01 88 	store_32 s0, 68(s24)
   32b50:	1a 04 00 4f 	movehi s0, 58
   32b54:	39 50 01 a8 	load_32 s1, 84(s25)
   32b58:	38 a0 01 88 	store_32 s1, 104(s24)
   32b5c:	00 90 7f 00 	or s0, s0, 8164
   32b60:	39 20 00 a8 	load_32 s1, 8(s25)
   32b64:	38 b0 01 88 	store_32 s1, 108(s24)
   32b68:	00 00 00 a8 	load_32 s0, (s0)
   32b6c:	00 10 00 10 	cmpeq_i s0, s0, 4
   32b70:	60 00 00 f4 	bnz s0, 12 <P_SpawnMobj+0xb4>
   32b74:	19 50 00 a8 	load_32 s0, 20(s25)
   32b78:	18 f0 01 88 	store_32 s0, 124(s24)
   32b7c:	de a5 ff f9 	call -92296 <P_Random>
   32b80:	20 7c 00 09 	ashr s1, s0, 31
   32b84:	21 78 00 0a 	shr s1, s1, 30
   32b88:	20 80 50 c0 	add_i s1, s0, s1
   32b8c:	21 f0 ff 01 	and s1, s1, -4
   32b90:	00 80 60 c0 	sub_i s0, s0, s1
   32b94:	18 20 02 88 	store_32 s0, 136(s24)
   32b98:	14 04 00 4f 	movehi s0, 52
   32b9c:	39 10 00 a8 	load_32 s1, 4(s25)
   32ba0:	00 20 5c 00 	or s0, s0, 5896
   32ba4:	21 70 00 07 	mull_i s1, s1, 28
   32ba8:	00 80 50 c0 	add_i s0, s0, s1
   32bac:	18 90 01 88 	store_32 s0, 100(s24)
   32bb0:	20 20 00 a8 	load_32 s1, 8(s0)
   32bb4:	38 80 01 88 	store_32 s1, 96(s24)
   32bb8:	20 00 00 a8 	load_32 s1, (s0)
   32bbc:	38 90 00 88 	store_32 s1, 36(s24)
   32bc0:	00 10 00 a8 	load_32 s0, 4(s0)
   32bc4:	18 a0 00 88 	store_32 s0, 40(s24)
   32bc8:	00 00 fc c0 	move s0, s24
   32bcc:	87 dc ff f9 	call -36324 <P_SetThingPosition>
   32bd0:	18 d0 00 a8 	load_32 s0, 52(s24)
   32bd4:	40 00 80 4f 	movehi s2, 262144
   32bd8:	20 00 00 a8 	load_32 s1, (s0)
   32bdc:	01 00 00 a8 	load_32 s0, (s1)
   32be0:	18 e0 00 88 	store_32 s0, 56(s24)
   32be4:	21 10 00 a8 	load_32 s1, 4(s1)
   32be8:	7e a0 00 a8 	load_32 s3, 40(sp)
   32bec:	38 f0 00 88 	store_32 s1, 60(s24)
   32bf0:	43 00 01 c1 	cmpeq_i s2, s3, s2
   32bf4:	42 01 00 f4 	bnz s2, 40 <P_SpawnMobj+0x154>
   32bf8:	1f fc 7f 4f 	movehi s0, 262143
   32bfc:	00 fc 7f 00 	or s0, s0, 8191
   32c00:	03 00 10 c1 	cmpne_i s0, s3, s0
   32c04:	a0 00 00 f4 	bnz s0, 20 <P_SpawnMobj+0x150>
   32c08:	18 70 01 a8 	load_32 s0, 92(s24)
   32c0c:	00 10 01 a8 	load_32 s0, 68(s0)
   32c10:	01 00 60 c0 	sub_i s0, s1, s0
   32c14:	02 00 00 f6 	b 8 <P_SpawnMobj+0x154>
   32c18:	00 80 f1 c0 	move s0, s3
   32c1c:	39 00 00 4f 	movehi s1, 25
   32c20:	18 50 00 88 	store_32 s0, 20(s24)
   32c24:	01 50 31 00 	or s0, s1, 3156
   32c28:	18 20 00 88 	store_32 s0, 8(s24)
   32c2c:	00 00 fc c0 	move s0, s24
   32c30:	ba 03 00 f8 	call 3816 <P_AddThinker>
   32c34:	00 00 fc c0 	move s0, s24
   32c38:	fe b3 00 a8 	load_32 ra, 44(sp)
   32c3c:	7e c3 00 a8 	load_32 s27, 48(sp)
   32c40:	5e d3 00 a8 	load_32 s26, 52(sp)
   32c44:	3e e3 00 a8 	load_32 s25, 56(sp)
   32c48:	1e f3 00 a8 	load_32 s24, 60(sp)
   32c4c:	de 03 01 05 	add_i sp, sp, 64
   32c50:	1f 00 00 f0 	ret

0000000000032c54 P_MobjThinker:
   32c54:	de 03 ff 05 	add_i sp, sp, -64
   32c58:	1e f3 00 88 	store_32 s24, 60(sp)
   32c5c:	fe e3 00 88 	store_32 ra, 56(sp)
   32c60:	00 03 f0 c0 	move s24, s0
   32c64:	18 20 01 a8 	load_32 s0, 72(s24)
   32c68:	c0 00 00 f4 	bnz s0, 24 <P_MobjThinker+0x2c>
   32c6c:	18 30 01 a8 	load_32 s0, 76(s24)
   32c70:	80 00 00 f4 	bnz s0, 16 <P_MobjThinker+0x2c>
   32c74:	18 ac 01 a0 	load_u8 s0, 107(s24)
   32c78:	00 04 00 01 	and s0, s0, 1
   32c7c:	c0 00 00 f2 	bz s0, 24 <P_MobjThinker+0x40>
   32c80:	00 00 fc c0 	move s0, s24
   32c84:	22 fd ff f9 	call -2936 <P_XYMovement>
   32c88:	18 20 00 a8 	load_32 s0, 8(s24)
   32c8c:	00 fc ff 10 	cmpeq_i s0, s0, -1
   32c90:	00 06 00 f4 	bnz s0, 192 <P_MobjThinker+0xfc>
   32c94:	18 50 00 a8 	load_32 s0, 20(s24)
   32c98:	38 e0 00 a8 	load_32 s1, 56(s24)
   32c9c:	00 80 10 c1 	cmpne_i s0, s0, s1
   32ca0:	60 00 00 f4 	bnz s0, 12 <P_MobjThinker+0x58>
   32ca4:	18 40 01 a8 	load_32 s0, 80(s24)
   32ca8:	c0 00 00 f2 	bz s0, 24 <P_MobjThinker+0x6c>
   32cac:	00 00 fc c0 	move s0, s24
   32cb0:	5a fe ff f9 	call -1688 <P_ZMovement>
   32cb4:	18 20 00 a8 	load_32 s0, 8(s24)
   32cb8:	00 fc ff 10 	cmpeq_i s0, s0, -1
   32cbc:	a0 04 00 f4 	bnz s0, 148 <P_MobjThinker+0xfc>
   32cc0:	18 80 01 a8 	load_32 s0, 96(s24)
   32cc4:	20 fc ff 10 	cmpeq_i s1, s0, -1
   32cc8:	81 01 00 f4 	bnz s1, 48 <P_MobjThinker+0xa4>
   32ccc:	00 fc ff 05 	add_i s0, s0, -1
   32cd0:	18 80 01 88 	store_32 s0, 96(s24)
   32cd4:	e0 03 00 f4 	bnz s0, 124 <P_MobjThinker+0xfc>
   32cd8:	18 90 01 a8 	load_32 s0, 100(s24)
   32cdc:	20 40 00 a8 	load_32 s1, 16(s0)
   32ce0:	00 00 fc c0 	move s0, s24
   32ce4:	4d fc ff f9 	call -3788 <P_SetMobjState>
   32ce8:	fe e3 00 a8 	load_32 ra, 56(sp)
   32cec:	1e f3 00 a8 	load_32 s24, 60(sp)
   32cf0:	de 03 01 05 	add_i sp, sp, 64
   32cf4:	1f 00 00 f0 	ret
   32cf8:	1b 04 00 4f 	movehi s0, 59
   32cfc:	38 a8 01 a0 	load_u8 s1, 106(s24)
   32d00:	00 c0 13 00 	or s0, s0, 1264
   32d04:	21 00 01 01 	and s1, s1, 64
   32d08:	00 00 00 a8 	load_32 s0, (s0)
   32d0c:	21 02 00 f2 	bz s1, 68 <P_MobjThinker+0xfc>
   32d10:	00 02 00 f2 	bz s0, 64 <P_MobjThinker+0xfc>
   32d14:	18 d0 01 a8 	load_32 s0, 116(s24)
   32d18:	00 04 00 05 	add_i s0, s0, 1
   32d1c:	18 d0 01 88 	store_32 s0, 116(s24)
   32d20:	20 90 06 14 	cmplt_i s1, s0, 420
   32d24:	61 01 00 f4 	bnz s1, 44 <P_MobjThinker+0xfc>
   32d28:	1c 04 00 4f 	movehi s0, 60
   32d2c:	00 40 02 00 	or s0, s0, 144
   32d30:	00 00 00 a0 	load_u8 s0, (s0)
   32d34:	00 7c 00 01 	and s0, s0, 31
   32d38:	c0 00 00 f4 	bnz s0, 24 <P_MobjThinker+0xfc>
   32d3c:	6e a5 ff f9 	call -92744 <P_Random>
   32d40:	00 10 00 12 	cmpgt_i s0, s0, 4
   32d44:	60 00 00 f4 	bnz s0, 12 <P_MobjThinker+0xfc>
   32d48:	00 00 fc c0 	move s0, s24
   32d4c:	d6 fe ff f9 	call -1192 <P_NightmareRespawn>
   32d50:	fe e3 00 a8 	load_32 ra, 56(sp)
   32d54:	1e f3 00 a8 	load_32 s24, 60(sp)
   32d58:	de 03 01 05 	add_i sp, sp, 64
   32d5c:	1f 00 00 f0 	ret

0000000000032d60 P_RespawnSpecials:
   32d60:	de 03 ff 05 	add_i sp, sp, -64
   32d64:	1e f3 00 88 	store_32 s24, 60(sp)
   32d68:	3e e3 00 88 	store_32 s25, 56(sp)
   32d6c:	5e d3 00 88 	store_32 s26, 52(sp)
   32d70:	7e c3 00 88 	store_32 s27, 48(sp)
   32d74:	fe b3 00 88 	store_32 ra, 44(sp)
   32d78:	1a 04 00 4f 	movehi s0, 58
   32d7c:	00 60 6e 00 	or s0, s0, 7064
   32d80:	00 00 00 a8 	load_32 s0, (s0)
   32d84:	00 08 00 11 	cmpne_i s0, s0, 2
   32d88:	00 0b 00 f4 	bnz s0, 352 <P_RespawnSpecials+0x188>
   32d8c:	1b 04 00 4f 	movehi s0, 59
   32d90:	3b 04 00 4f 	movehi s1, 59
   32d94:	00 10 66 00 	or s0, s0, 6532
   32d98:	41 23 66 00 	or s26, s1, 6536
   32d9c:	20 00 00 a8 	load_32 s1, (s0)
   32da0:	1a 00 00 a8 	load_32 s0, (s26)
   32da4:	21 00 00 c1 	cmpeq_i s1, s1, s0
   32da8:	01 0a 00 f4 	bnz s1, 320 <P_RespawnSpecials+0x188>
   32dac:	3b 04 00 4f 	movehi s1, 59
   32db0:	5c 04 00 4f 	movehi s2, 60
   32db4:	60 08 00 0b 	shl s3, s0, 2
   32db8:	21 30 7a 00 	or s1, s1, 7820
   32dbc:	42 40 02 00 	or s2, s2, 144
   32dc0:	21 80 51 c0 	add_i s1, s1, s3
   32dc4:	42 00 00 a8 	load_32 s2, (s2)
   32dc8:	21 00 00 a8 	load_32 s1, (s1)
   32dcc:	22 80 60 c0 	sub_i s1, s2, s1
   32dd0:	21 68 10 14 	cmplt_i s1, s1, 1050
   32dd4:	a1 08 00 f4 	bnz s1, 276 <P_RespawnSpecials+0x188>
   32dd8:	3b 04 00 4f 	movehi s1, 59
   32ddc:	00 28 00 07 	mull_i s0, s0, 10
   32de0:	21 30 66 00 	or s1, s1, 6540
   32de4:	61 03 50 c0 	add_i s27, s1, s0
   32de8:	1b 00 00 a6 	load_s16 s0, (s27)
   32dec:	3b 08 00 a6 	load_s16 s1, 2(s27)
   32df0:	20 43 00 0b 	shl s25, s0, 16
   32df4:	01 43 00 0b 	shl s24, s1, 16
   32df8:	00 80 fc c0 	move s0, s25
   32dfc:	20 00 fc c0 	move s1, s24
   32e00:	2b 1c 00 f8 	call 28844 <R_PointInSubsector>
   32e04:	00 00 00 a8 	load_32 s0, (s0)
   32e08:	60 a0 00 0f 	move s3, 40
   32e0c:	40 00 00 a8 	load_32 s2, (s0)
   32e10:	00 80 fc c0 	move s0, s25
   32e14:	20 00 fc c0 	move s1, s24
   32e18:	2c ff ff f9 	call -848 <P_SpawnMobj>
   32e1c:	20 68 01 0f 	move s1, 90
   32e20:	71 65 00 f8 	call 103876 <S_StartSound>
   32e24:	18 04 00 4f 	movehi s0, 56
   32e28:	3b 18 00 a6 	load_s16 s1, 6(s27)
   32e2c:	60 00 00 0f 	move s3, 0
   32e30:	00 30 03 00 	or s0, s0, 204
   32e34:	43 70 01 07 	mull_i s2, s3, 92
   32e38:	40 00 51 c0 	add_i s2, s0, s2
   32e3c:	42 00 00 a8 	load_32 s2, (s2)
   32e40:	42 80 00 c1 	cmpeq_i s2, s2, s1
   32e44:	82 00 00 f4 	bnz s2, 16 <P_RespawnSpecials+0xf4>
   32e48:	63 04 00 05 	add_i s3, s3, 1
   32e4c:	43 24 02 18 	cmplt_u s2, s3, 137
   32e50:	22 ff ff f5 	bnz s2, -28 <P_RespawnSpecials+0xd4>
   32e54:	23 70 01 07 	mull_i s1, s3, 92
   32e58:	00 80 50 c0 	add_i s0, s0, s1
   32e5c:	00 50 01 a8 	load_32 s0, 84(s0)
   32e60:	00 00 04 01 	and s0, s0, 256
   32e64:	00 00 00 10 	cmpeq_i s0, s0, 0
   32e68:	80 00 00 f4 	bnz s0, 16 <P_RespawnSpecials+0x118>
   32e6c:	1f fc 7f 4f 	movehi s0, 262143
   32e70:	40 fc 7f 00 	or s2, s0, 8191
   32e74:	02 00 00 f6 	b 8 <P_RespawnSpecials+0x11c>
   32e78:	40 00 80 4f 	movehi s2, 262144
   32e7c:	00 80 fc c0 	move s0, s25
   32e80:	20 00 fc c0 	move s1, s24
   32e84:	11 ff ff f9 	call -956 <P_SpawnMobj>
   32e88:	3b 00 00 a6 	load_s16 s1, (s27)
   32e8c:	5b 08 b6 4f 	movehi s2, 372827
   32e90:	20 30 02 86 	store_16 s1, 140(s0)
   32e94:	3b 08 00 a6 	load_s16 s1, 2(s27)
   32e98:	20 38 02 86 	store_16 s1, 142(s0)
   32e9c:	42 dc 02 00 	or s2, s2, 183
   32ea0:	3b 10 00 a6 	load_s16 s1, 4(s27)
   32ea4:	20 40 02 86 	store_16 s1, 144(s0)
   32ea8:	3b 18 00 a6 	load_s16 s1, 6(s27)
   32eac:	20 48 02 86 	store_16 s1, 146(s0)
   32eb0:	3b 20 00 a6 	load_s16 s1, 8(s27)
   32eb4:	20 50 02 86 	store_16 s1, 148(s0)
   32eb8:	3b 10 00 a6 	load_s16 s1, 4(s27)
   32ebc:	41 00 f1 c1 	mulh_i s2, s1, s2
   32ec0:	22 80 50 c0 	add_i s1, s2, s1
   32ec4:	41 14 00 0a 	shr s2, s1, 5
   32ec8:	21 7c 00 0a 	shr s1, s1, 31
   32ecc:	22 80 50 c0 	add_i s1, s2, s1
   32ed0:	21 74 00 0b 	shl s1, s1, 29
   32ed4:	20 80 00 88 	store_32 s1, 32(s0)
   32ed8:	1a 00 00 a8 	load_32 s0, (s26)
   32edc:	00 04 00 05 	add_i s0, s0, 1
   32ee0:	00 fc 01 01 	and s0, s0, 127
   32ee4:	1a 00 00 88 	store_32 s0, (s26)
   32ee8:	fe b3 00 a8 	load_32 ra, 44(sp)
   32eec:	7e c3 00 a8 	load_32 s27, 48(sp)
   32ef0:	5e d3 00 a8 	load_32 s26, 52(sp)
   32ef4:	3e e3 00 a8 	load_32 s25, 56(sp)
   32ef8:	1e f3 00 a8 	load_32 s24, 60(sp)
   32efc:	de 03 01 05 	add_i sp, sp, 64
   32f00:	1f 00 00 f0 	ret

0000000000032f04 P_SpawnPlayer:
   32f04:	de 03 ff 05 	add_i sp, sp, -64
   32f08:	1e f3 00 88 	store_32 s24, 60(sp)
   32f0c:	3e e3 00 88 	store_32 s25, 56(sp)
   32f10:	5e d3 00 88 	store_32 s26, 52(sp)
   32f14:	7e c3 00 88 	store_32 s27, 48(sp)
   32f18:	fe b3 00 88 	store_32 ra, 44(sp)
   32f1c:	00 03 f0 c0 	move s24, s0
   32f20:	3b 04 00 4f 	movehi s1, 59
   32f24:	18 18 00 a6 	load_s16 s0, 6(s24)
   32f28:	21 00 02 00 	or s1, s1, 128
   32f2c:	00 fc ff 05 	add_i s0, s0, -1
   32f30:	40 08 00 0b 	shl s2, s0, 2
   32f34:	21 00 51 c0 	add_i s1, s1, s2
   32f38:	21 00 00 a8 	load_32 s1, (s1)
   32f3c:	21 09 00 f2 	bz s1, 292 <P_SpawnPlayer+0x15c>
   32f40:	3b 04 00 4f 	movehi s1, 59
   32f44:	40 60 04 07 	mull_i s2, s0, 280
   32f48:	21 40 02 00 	or s1, s1, 144
   32f4c:	21 03 51 c0 	add_i s25, s1, s2
   32f50:	39 10 00 a8 	load_32 s1, 4(s25)
   32f54:	21 08 00 11 	cmpne_i s1, s1, 2
   32f58:	41 00 00 f4 	bnz s1, 8 <P_SpawnPlayer+0x5c>
   32f5c:	6d 8e ff f9 	call -116300 <G_PlayerReborn>
   32f60:	18 00 00 a6 	load_s16 s0, (s24)
   32f64:	40 03 00 0f 	move s26, 0
   32f68:	38 08 00 a6 	load_s16 s1, 2(s24)
   32f6c:	40 00 80 4f 	movehi s2, 262144
   32f70:	79 13 00 05 	add_i s27, s25, 4
   32f74:	60 00 fd c0 	move s3, s26
   32f78:	00 40 00 0b 	shl s0, s0, 16
   32f7c:	21 40 00 0b 	shl s1, s1, 16
   32f80:	d2 fe ff f9 	call -1208 <P_SpawnMobj>
   32f84:	38 18 00 a4 	load_u16 s1, 6(s24)
   32f88:	40 80 e0 c1 	sext_16 s2, s1
   32f8c:	42 08 00 14 	cmplt_i s2, s2, 2
   32f90:	e2 00 00 f4 	bnz s2, 28 <P_SpawnPlayer+0xa8>
   32f94:	21 68 00 0b 	shl s1, s1, 26
   32f98:	40 a0 01 a8 	load_32 s2, 104(s0)
   32f9c:	60 00 fc 4f 	movehi s3, 516096
   32fa0:	21 80 51 c0 	add_i s1, s1, s3
   32fa4:	22 80 00 c0 	or s1, s2, s1
   32fa8:	20 a0 01 88 	store_32 s1, 104(s0)
   32fac:	5b 08 b6 4f 	movehi s2, 372827
   32fb0:	38 10 00 a6 	load_s16 s1, 4(s24)
   32fb4:	42 dc 02 00 	or s2, s2, 183
   32fb8:	41 00 f1 c1 	mulh_i s2, s1, s2
   32fbc:	22 80 50 c0 	add_i s1, s2, s1
   32fc0:	41 14 00 0a 	shr s2, s1, 5
   32fc4:	21 7c 00 0a 	shr s1, s1, 31
   32fc8:	22 80 50 c0 	add_i s1, s2, s1
   32fcc:	21 74 00 0b 	shl s1, s1, 29
   32fd0:	20 80 00 88 	store_32 s1, 32(s0)
   32fd4:	20 13 02 88 	store_32 s25, 132(s0)
   32fd8:	39 80 00 a8 	load_32 s1, 32(s25)
   32fdc:	20 b0 01 88 	store_32 s1, 108(s0)
   32fe0:	19 00 00 88 	store_32 s0, (s25)
   32fe4:	08 28 00 4f 	movehi s0, 328
   32fe8:	5b 03 00 88 	store_32 s26, (s27)
   32fec:	59 23 03 88 	store_32 s26, 200(s25)
   32ff0:	59 63 03 88 	store_32 s26, 216(s25)
   32ff4:	59 73 03 88 	store_32 s26, 220(s25)
   32ff8:	59 83 03 88 	store_32 s26, 224(s25)
   32ffc:	59 a3 03 88 	store_32 s26, 232(s25)
   33000:	59 b3 03 88 	store_32 s26, 236(s25)
   33004:	19 50 00 88 	store_32 s0, 20(s25)
   33008:	00 80 fc c0 	move s0, s25
   3300c:	a8 ea ff f9 	call -21856 <P_SetupPsprites>
   33010:	1a 04 00 4f 	movehi s0, 58
   33014:	00 60 6e 00 	or s0, s0, 7064
   33018:	00 00 00 a8 	load_32 s0, (s0)
   3301c:	00 01 00 f2 	bz s0, 32 <P_SpawnPlayer+0x138>
   33020:	00 04 00 0f 	move s0, 1
   33024:	19 10 01 88 	store_32 s0, 68(s25)
   33028:	19 20 01 88 	store_32 s0, 72(s25)
   3302c:	19 30 01 88 	store_32 s0, 76(s25)
   33030:	19 40 01 88 	store_32 s0, 80(s25)
   33034:	19 50 01 88 	store_32 s0, 84(s25)
   33038:	19 60 01 88 	store_32 s0, 88(s25)
   3303c:	1a 04 00 4f 	movehi s0, 58
   33040:	38 18 00 a6 	load_s16 s1, 6(s24)
   33044:	00 c0 6d 00 	or s0, s0, 7024
   33048:	21 fc ff 05 	add_i s1, s1, -1
   3304c:	00 00 00 a8 	load_32 s0, (s0)
   33050:	01 00 10 c1 	cmpne_i s0, s1, s0
   33054:	60 00 00 f4 	bnz s0, 12 <P_SpawnPlayer+0x15c>
   33058:	ea 5a 00 f8 	call 93096 <ST_Start>
   3305c:	90 5b 00 f8 	call 93760 <HU_Start>
   33060:	fe b3 00 a8 	load_32 ra, 44(sp)
   33064:	7e c3 00 a8 	load_32 s27, 48(sp)
   33068:	5e d3 00 a8 	load_32 s26, 52(sp)
   3306c:	3e e3 00 a8 	load_32 s25, 56(sp)
   33070:	1e f3 00 a8 	load_32 s24, 60(sp)
   33074:	de 03 01 05 	add_i sp, sp, 64
   33078:	1f 00 00 f0 	ret

000000000003307c P_SpawnMapThing:
   3307c:	de 03 fe 05 	add_i sp, sp, -128
   33080:	1e f3 01 88 	store_32 s24, 124(sp)
   33084:	3e e3 01 88 	store_32 s25, 120(sp)
   33088:	fe d3 01 88 	store_32 ra, 116(sp)
   3308c:	00 03 f0 c0 	move s24, s0
   33090:	18 18 00 a6 	load_s16 s0, 6(s24)
   33094:	20 2c 00 11 	cmpne_i s1, s0, 11
   33098:	e1 02 00 f4 	bnz s1, 92 <P_SpawnMapThing+0x78>
   3309c:	1b 04 00 4f 	movehi s0, 59
   330a0:	5b 04 00 4f 	movehi s2, 59
   330a4:	00 a0 48 00 	or s0, s0, 4648
   330a8:	42 b0 48 00 	or s2, s2, 4652
   330ac:	20 00 00 a8 	load_32 s1, (s0)
   330b0:	42 90 01 05 	add_i s2, s2, 100
   330b4:	41 00 71 c1 	cmpge_u s2, s1, s2
   330b8:	62 16 00 f4 	bnz s2, 716 <P_SpawnMapThing+0x308>
   330bc:	58 20 00 a6 	load_s16 s2, 8(s24)
   330c0:	41 20 00 86 	store_16 s2, 8(s1)
   330c4:	58 18 00 a6 	load_s16 s2, 6(s24)
   330c8:	41 18 00 86 	store_16 s2, 6(s1)
   330cc:	58 10 00 a6 	load_s16 s2, 4(s24)
   330d0:	41 10 00 86 	store_16 s2, 4(s1)
   330d4:	58 08 00 a6 	load_s16 s2, 2(s24)
   330d8:	41 08 00 86 	store_16 s2, 2(s1)
   330dc:	58 00 00 a6 	load_s16 s2, (s24)
   330e0:	41 00 00 86 	store_16 s2, (s1)
   330e4:	20 00 00 a8 	load_32 s1, (s0)
   330e8:	21 28 00 05 	add_i s1, s1, 10
   330ec:	20 00 00 88 	store_32 s1, (s0)
   330f0:	a5 00 00 f6 	b 660 <P_SpawnMapThing+0x308>
   330f4:	20 10 00 12 	cmpgt_i s1, s0, 4
   330f8:	c1 02 00 f4 	bnz s1, 88 <P_SpawnMapThing+0xd4>
   330fc:	3b 04 00 4f 	movehi s1, 59
   33100:	00 28 00 07 	mull_i s0, s0, 10
   33104:	21 d0 4a 00 	or s1, s1, 4788
   33108:	01 00 50 c0 	add_i s0, s1, s0
   3310c:	38 20 00 a6 	load_s16 s1, 8(s24)
   33110:	20 f8 ff 87 	store_16 s1, -2(s0)
   33114:	38 18 00 a6 	load_s16 s1, 6(s24)
   33118:	20 f0 ff 87 	store_16 s1, -4(s0)
   3311c:	38 10 00 a6 	load_s16 s1, 4(s24)
   33120:	20 e8 ff 87 	store_16 s1, -6(s0)
   33124:	3a 04 00 4f 	movehi s1, 58
   33128:	58 08 00 a6 	load_s16 s2, 2(s24)
   3312c:	40 e0 ff 87 	store_16 s2, -8(s0)
   33130:	21 60 6e 00 	or s1, s1, 7064
   33134:	58 00 00 a6 	load_s16 s2, (s24)
   33138:	40 d8 ff 87 	store_16 s2, -10(s0)
   3313c:	01 00 00 a8 	load_32 s0, (s1)
   33140:	20 12 00 f4 	bnz s0, 580 <P_SpawnMapThing+0x308>
   33144:	00 00 fc c0 	move s0, s24
   33148:	6f ff ff f9 	call -580 <P_SpawnPlayer>
   3314c:	8e 00 00 f6 	b 568 <P_SpawnMapThing+0x308>
   33150:	3b 04 00 4f 	movehi s1, 59
   33154:	21 c0 01 00 	or s1, s1, 112
   33158:	21 00 00 a8 	load_32 s1, (s1)
   3315c:	81 00 00 f4 	bnz s1, 16 <P_SpawnMapThing+0xf0>
   33160:	38 20 00 a0 	load_u8 s1, 8(s24)
   33164:	21 40 00 01 	and s1, s1, 16
   33168:	e1 10 00 f4 	bnz s1, 540 <P_SpawnMapThing+0x308>
   3316c:	3a 04 00 4f 	movehi s1, 58
   33170:	21 90 7f 00 	or s1, s1, 8164
   33174:	21 00 00 a8 	load_32 s1, (s1)
   33178:	01 01 00 f2 	bz s1, 32 <P_SpawnMapThing+0x11c>
   3317c:	41 10 00 11 	cmpne_i s2, s1, 4
   33180:	62 01 00 f4 	bnz s2, 44 <P_SpawnMapThing+0x130>
   33184:	20 10 00 0f 	move s1, 4
   33188:	58 20 00 a6 	load_s16 s2, 8(s24)
   3318c:	21 00 11 c0 	and s1, s1, s2
   33190:	a1 0f 00 f2 	bz s1, 500 <P_SpawnMapThing+0x308>
   33194:	0c 00 00 f6 	b 48 <P_SpawnMapThing+0x148>
   33198:	20 04 00 0f 	move s1, 1
   3319c:	58 20 00 a6 	load_s16 s2, 8(s24)
   331a0:	21 00 11 c0 	and s1, s1, s2
   331a4:	01 0f 00 f2 	bz s1, 480 <P_SpawnMapThing+0x308>
   331a8:	07 00 00 f6 	b 28 <P_SpawnMapThing+0x148>
   331ac:	40 04 00 0f 	move s2, 1
   331b0:	21 fc ff 05 	add_i s1, s1, -1
   331b4:	22 80 b0 c0 	shl s1, s2, s1
   331b8:	58 20 00 a6 	load_s16 s2, 8(s24)
   331bc:	21 00 11 c0 	and s1, s1, s2
   331c0:	21 0e 00 f2 	bz s1, 452 <P_SpawnMapThing+0x308>
   331c4:	38 04 00 4f 	movehi s1, 56
   331c8:	60 00 00 0f 	move s3, 0
   331cc:	21 33 03 00 	or s25, s1, 204
   331d0:	23 70 01 07 	mull_i s1, s3, 92
   331d4:	39 80 50 c0 	add_i s1, s25, s1
   331d8:	21 00 00 a8 	load_32 s1, (s1)
   331dc:	21 00 00 c1 	cmpeq_i s1, s1, s0
   331e0:	01 02 00 f4 	bnz s1, 64 <P_SpawnMapThing+0x1a4>
   331e4:	63 04 00 05 	add_i s3, s3, 1
   331e8:	23 24 02 18 	cmplt_u s1, s3, 137
   331ec:	21 ff ff f5 	bnz s1, -28 <P_SpawnMapThing+0x154>
   331f0:	23 24 02 11 	cmpne_i s1, s3, 137
   331f4:	61 01 00 f4 	bnz s1, 44 <P_SpawnMapThing+0x1a4>
   331f8:	38 00 00 a6 	load_s16 s1, (s24)
   331fc:	58 08 00 a6 	load_s16 s2, 2(s24)
   33200:	5e 30 00 88 	store_32 s2, 12(sp)
   33204:	40 00 00 4f 	movehi s2, 0
   33208:	3e 20 00 88 	store_32 s1, 8(sp)
   3320c:	1e 10 00 88 	store_32 s0, 4(sp)
   33210:	02 ac 17 00 	or s0, s2, 1515
   33214:	1e 00 00 88 	store_32 s0, (sp)
   33218:	bb 6b ff f9 	call -151828 <I_Error>
   3321c:	60 24 02 0f 	move s3, 137
   33220:	1a 04 00 4f 	movehi s0, 58
   33224:	00 60 6e 00 	or s0, s0, 7064
   33228:	00 00 00 a8 	load_32 s0, (s0)
   3322c:	c0 00 00 f2 	bz s0, 24 <P_SpawnMapThing+0x1c8>
   33230:	03 70 01 07 	mull_i s0, s3, 92
   33234:	19 00 50 c0 	add_i s0, s25, s0
   33238:	00 5c 01 a0 	load_u8 s0, 87(s0)
   3323c:	00 08 00 01 	and s0, s0, 2
   33240:	20 0a 00 f4 	bnz s0, 324 <P_SpawnMapThing+0x308>
   33244:	1a 04 00 4f 	movehi s0, 58
   33248:	00 30 48 00 	or s0, s0, 4620
   3324c:	00 00 00 a8 	load_32 s0, (s0)
   33250:	40 00 00 f4 	bnz s0, 8 <P_SpawnMapThing+0x1dc>
   33254:	0a 00 00 f6 	b 40 <P_SpawnMapThing+0x200>
   33258:	03 48 00 10 	cmpeq_i s0, s3, 18
   3325c:	40 09 00 f4 	bnz s0, 296 <P_SpawnMapThing+0x308>
   33260:	03 70 01 07 	mull_i s0, s3, 92
   33264:	19 00 50 c0 	add_i s0, s25, s0
   33268:	20 40 00 4f 	movehi s1, 512
   3326c:	00 50 01 a8 	load_32 s0, 84(s0)
   33270:	20 80 10 c0 	and s1, s0, s1
   33274:	81 08 00 f4 	bnz s1, 272 <P_SpawnMapThing+0x308>
   33278:	04 00 00 f6 	b 16 <P_SpawnMapThing+0x20c>
   3327c:	03 70 01 07 	mull_i s0, s3, 92
   33280:	19 00 50 c0 	add_i s0, s25, s0
   33284:	00 50 01 a8 	load_32 s0, 84(s0)
   33288:	38 00 00 a6 	load_s16 s1, (s24)
   3328c:	80 00 04 01 	and s4, s0, 256
   33290:	58 08 00 a6 	load_s16 s2, 2(s24)
   33294:	84 00 00 10 	cmpeq_i s4, s4, 0
   33298:	01 40 00 0b 	shl s0, s1, 16
   3329c:	22 40 00 0b 	shl s1, s2, 16
   332a0:	84 00 00 f4 	bnz s4, 16 <P_SpawnMapThing+0x234>
   332a4:	5f fc 7f 4f 	movehi s2, 262143
   332a8:	42 fc 7f 00 	or s2, s2, 8191
   332ac:	02 00 00 f6 	b 8 <P_SpawnMapThing+0x238>
   332b0:	40 00 80 4f 	movehi s2, 262144
   332b4:	05 fe ff f9 	call -2028 <P_SpawnMobj>
   332b8:	20 03 f0 c0 	move s25, s0
   332bc:	18 00 00 a6 	load_s16 s0, (s24)
   332c0:	19 30 02 86 	store_16 s0, 140(s25)
   332c4:	18 08 00 a6 	load_s16 s0, 2(s24)
   332c8:	19 38 02 86 	store_16 s0, 142(s25)
   332cc:	18 10 00 a6 	load_s16 s0, 4(s24)
   332d0:	19 40 02 86 	store_16 s0, 144(s25)
   332d4:	18 18 00 a6 	load_s16 s0, 6(s24)
   332d8:	19 48 02 86 	store_16 s0, 146(s25)
   332dc:	18 20 00 a6 	load_s16 s0, 8(s24)
   332e0:	19 50 02 86 	store_16 s0, 148(s25)
   332e4:	19 80 01 a8 	load_32 s0, 96(s25)
   332e8:	00 04 00 14 	cmplt_i s0, s0, 1
   332ec:	c0 00 00 f4 	bnz s0, 24 <P_SpawnMapThing+0x288>
   332f0:	01 a4 ff f9 	call -94204 <P_Random>
   332f4:	39 80 01 a8 	load_32 s1, 96(s25)
   332f8:	00 86 00 f8 	call 137216 <__modsi3>
   332fc:	00 04 00 05 	add_i s0, s0, 1
   33300:	19 80 01 88 	store_32 s0, 96(s25)
   33304:	19 a0 01 a8 	load_32 s0, 104(s25)
   33308:	20 40 00 4f 	movehi s1, 512
   3330c:	20 80 10 c0 	and s1, s0, s1
   33310:	c1 00 00 f2 	bz s1, 24 <P_SpawnMapThing+0x2ac>
   33314:	3b 04 00 4f 	movehi s1, 59
   33318:	21 f0 18 00 	or s1, s1, 1596
   3331c:	41 00 00 a8 	load_32 s2, (s1)
   33320:	42 04 00 05 	add_i s2, s2, 1
   33324:	41 00 00 88 	store_32 s2, (s1)
   33328:	20 80 00 4f 	movehi s1, 1024
   3332c:	20 80 10 c0 	and s1, s0, s1
   33330:	c1 00 00 f2 	bz s1, 24 <P_SpawnMapThing+0x2cc>
   33334:	3b 04 00 4f 	movehi s1, 59
   33338:	21 e0 18 00 	or s1, s1, 1592
   3333c:	41 00 00 a8 	load_32 s2, (s1)
   33340:	42 04 00 05 	add_i s2, s2, 1
   33344:	41 00 00 88 	store_32 s2, (s1)
   33348:	5b 08 b6 4f 	movehi s2, 372827
   3334c:	38 10 00 a6 	load_s16 s1, 4(s24)
   33350:	42 dc 02 00 	or s2, s2, 183
   33354:	41 00 f1 c1 	mulh_i s2, s1, s2
   33358:	22 80 50 c0 	add_i s1, s2, s1
   3335c:	41 14 00 0a 	shr s2, s1, 5
   33360:	21 7c 00 0a 	shr s1, s1, 31
   33364:	22 80 50 c0 	add_i s1, s2, s1
   33368:	21 74 00 0b 	shl s1, s1, 29
   3336c:	39 80 00 88 	store_32 s1, 32(s25)
   33370:	38 20 00 a0 	load_u8 s1, 8(s24)
   33374:	21 20 00 01 	and s1, s1, 8
   33378:	61 00 00 f2 	bz s1, 12 <P_SpawnMapThing+0x308>
   3337c:	00 80 00 00 	or s0, s0, 32
   33380:	19 a0 01 88 	store_32 s0, 104(s25)
   33384:	fe d3 01 a8 	load_32 ra, 116(sp)
   33388:	3e e3 01 a8 	load_32 s25, 120(sp)
   3338c:	1e f3 01 a8 	load_32 s24, 124(sp)
   33390:	de 03 02 05 	add_i sp, sp, 128
   33394:	1f 00 00 f0 	ret

0000000000033398 P_SpawnPuff:
   33398:	de 03 ff 05 	add_i sp, sp, -64
   3339c:	1e f3 00 88 	store_32 s24, 60(sp)
   333a0:	3e e3 00 88 	store_32 s25, 56(sp)
   333a4:	5e d3 00 88 	store_32 s26, 52(sp)
   333a8:	7e c3 00 88 	store_32 s27, 48(sp)
   333ac:	fe b3 00 88 	store_32 ra, 44(sp)
   333b0:	00 03 f1 c0 	move s24, s2
   333b4:	20 83 f0 c0 	move s25, s1
   333b8:	40 03 f0 c0 	move s26, s0
   333bc:	ce a3 ff f9 	call -94408 <P_Random>
   333c0:	60 03 f0 c0 	move s27, s0
   333c4:	cc a3 ff f9 	call -94416 <P_Random>
   333c8:	1b 00 60 c0 	sub_i s0, s27, s0
   333cc:	60 94 00 0f 	move s3, 37
   333d0:	00 28 00 0b 	shl s0, s0, 10
   333d4:	40 00 5c c0 	add_i s2, s0, s24
   333d8:	00 00 fd c0 	move s0, s26
   333dc:	20 80 fc c0 	move s1, s25
   333e0:	ba fd ff f9 	call -2328 <P_SpawnMobj>
   333e4:	00 03 f0 c0 	move s24, s0
   333e8:	08 00 00 4f 	movehi s0, 8
   333ec:	18 40 01 88 	store_32 s0, 80(s24)
   333f0:	c1 a3 ff f9 	call -94460 <P_Random>
   333f4:	38 80 01 a8 	load_32 s1, 96(s24)
   333f8:	00 0c 00 01 	and s0, s0, 3
   333fc:	01 00 60 c0 	sub_i s0, s1, s0
   33400:	20 04 00 12 	cmpgt_i s1, s0, 1
   33404:	41 00 00 f4 	bnz s1, 8 <P_SpawnPuff+0x74>
   33408:	00 04 00 0f 	move s0, 1
   3340c:	3b 04 00 4f 	movehi s1, 59
   33410:	18 80 01 88 	store_32 s0, 96(s24)
   33414:	21 f0 2a 00 	or s1, s1, 2748
   33418:	01 00 00 a8 	load_32 s0, (s1)
   3341c:	20 40 00 4f 	movehi s1, 512
   33420:	00 80 10 c1 	cmpne_i s0, s0, s1
   33424:	80 00 00 f4 	bnz s0, 16 <P_SpawnPuff+0x9c>
   33428:	20 7c 01 0f 	move s1, 95
   3342c:	00 00 fc c0 	move s0, s24
   33430:	7a fa ff f9 	call -5656 <P_SetMobjState>
   33434:	fe b3 00 a8 	load_32 ra, 44(sp)
   33438:	7e c3 00 a8 	load_32 s27, 48(sp)
   3343c:	5e d3 00 a8 	load_32 s26, 52(sp)
   33440:	3e e3 00 a8 	load_32 s25, 56(sp)
   33444:	1e f3 00 a8 	load_32 s24, 60(sp)
   33448:	de 03 01 05 	add_i sp, sp, 64
   3344c:	1f 00 00 f0 	ret

0000000000033450 P_SpawnBlood:
   33450:	de 03 ff 05 	add_i sp, sp, -64
   33454:	1e f3 00 88 	store_32 s24, 60(sp)
   33458:	3e e3 00 88 	store_32 s25, 56(sp)
   3345c:	5e d3 00 88 	store_32 s26, 52(sp)
   33460:	7e c3 00 88 	store_32 s27, 48(sp)
   33464:	fe b3 00 88 	store_32 ra, 44(sp)
   33468:	7e a0 00 88 	store_32 s3, 40(sp)
   3346c:	20 03 f1 c0 	move s25, s2
   33470:	40 83 f0 c0 	move s26, s1
   33474:	60 03 f0 c0 	move s27, s0
   33478:	9f a3 ff f9 	call -94596 <P_Random>
   3347c:	00 03 f0 c0 	move s24, s0
   33480:	9d a3 ff f9 	call -94604 <P_Random>
   33484:	18 00 60 c0 	sub_i s0, s24, s0
   33488:	60 98 00 0f 	move s3, 38
   3348c:	00 28 00 0b 	shl s0, s0, 10
   33490:	40 80 5c c0 	add_i s2, s0, s25
   33494:	00 80 fd c0 	move s0, s27
   33498:	20 00 fd c0 	move s1, s26
   3349c:	8b fd ff f9 	call -2516 <P_SpawnMobj>
   334a0:	20 03 f0 c0 	move s25, s0
   334a4:	10 00 00 4f 	movehi s0, 16
   334a8:	19 40 01 88 	store_32 s0, 80(s25)
   334ac:	92 a3 ff f9 	call -94648 <P_Random>
   334b0:	39 80 01 a8 	load_32 s1, 96(s25)
   334b4:	00 0c 00 01 	and s0, s0, 3
   334b8:	01 00 60 c0 	sub_i s0, s1, s0
   334bc:	20 04 00 12 	cmpgt_i s1, s0, 1
   334c0:	41 00 00 f4 	bnz s1, 8 <P_SpawnBlood+0x78>
   334c4:	00 04 00 0f 	move s0, 1
   334c8:	5e a0 00 a8 	load_32 s2, 40(sp)
   334cc:	19 80 01 88 	store_32 s0, 96(s25)
   334d0:	22 dc ff 05 	add_i s1, s2, -9
   334d4:	21 0c 00 16 	cmpgt_u s1, s1, 3
   334d8:	61 00 00 f4 	bnz s1, 12 <P_SpawnBlood+0x94>
   334dc:	20 6c 01 0f 	move s1, 91
   334e0:	04 00 00 f6 	b 16 <P_SpawnBlood+0xa0>
   334e4:	02 20 00 12 	cmpgt_i s0, s2, 8
   334e8:	80 00 00 f4 	bnz s0, 16 <P_SpawnBlood+0xa8>
   334ec:	20 70 01 0f 	move s1, 92
   334f0:	00 80 fc c0 	move s0, s25
   334f4:	49 fa ff f9 	call -5852 <P_SetMobjState>
   334f8:	fe b3 00 a8 	load_32 ra, 44(sp)
   334fc:	7e c3 00 a8 	load_32 s27, 48(sp)
   33500:	5e d3 00 a8 	load_32 s26, 52(sp)
   33504:	3e e3 00 a8 	load_32 s25, 56(sp)
   33508:	1e f3 00 a8 	load_32 s24, 60(sp)
   3350c:	de 03 01 05 	add_i sp, sp, 64
   33510:	1f 00 00 f0 	ret

0000000000033514 P_CheckMissileSpawn:
   33514:	de 03 ff 05 	add_i sp, sp, -64
   33518:	1e f3 00 88 	store_32 s24, 60(sp)
   3351c:	fe e3 00 88 	store_32 ra, 56(sp)
   33520:	00 03 f0 c0 	move s24, s0
   33524:	74 a3 ff f9 	call -94768 <P_Random>
   33528:	38 80 01 a8 	load_32 s1, 96(s24)
   3352c:	00 0c 00 01 	and s0, s0, 3
   33530:	01 00 60 c0 	sub_i s0, s1, s0
   33534:	20 04 00 12 	cmpgt_i s1, s0, 1
   33538:	41 00 00 f4 	bnz s1, 8 <P_CheckMissileSpawn+0x2c>
   3353c:	00 04 00 0f 	move s0, 1
   33540:	18 80 01 88 	store_32 s0, 96(s24)
   33544:	18 20 01 a8 	load_32 s0, 72(s24)
   33548:	38 30 00 a8 	load_32 s1, 12(s24)
   3354c:	00 04 00 09 	ashr s0, s0, 1
   33550:	21 00 50 c0 	add_i s1, s1, s0
   33554:	38 30 00 88 	store_32 s1, 12(s24)
   33558:	18 30 01 a8 	load_32 s0, 76(s24)
   3355c:	58 40 00 a8 	load_32 s2, 16(s24)
   33560:	00 04 00 09 	ashr s0, s0, 1
   33564:	42 00 50 c0 	add_i s2, s2, s0
   33568:	58 40 00 88 	store_32 s2, 16(s24)
   3356c:	18 40 01 a8 	load_32 s0, 80(s24)
   33570:	78 50 00 a8 	load_32 s3, 20(s24)
   33574:	00 04 00 09 	ashr s0, s0, 1
   33578:	03 00 50 c0 	add_i s0, s3, s0
   3357c:	18 50 00 88 	store_32 s0, 20(s24)
   33580:	00 00 fc c0 	move s0, s24
   33584:	dc d2 ff f9 	call -46224 <P_TryMove>
   33588:	e0 03 00 f4 	bnz s0, 124 <P_CheckMissileSpawn+0xf0>
   3358c:	00 00 00 0f 	move s0, 0
   33590:	18 40 01 88 	store_32 s0, 80(s24)
   33594:	18 30 01 88 	store_32 s0, 76(s24)
   33598:	18 20 01 88 	store_32 s0, 72(s24)
   3359c:	18 04 00 4f 	movehi s0, 56
   335a0:	38 60 01 a8 	load_32 s1, 88(s24)
   335a4:	00 30 03 00 	or s0, s0, 204
   335a8:	21 70 01 07 	mull_i s1, s1, 92
   335ac:	00 80 50 c0 	add_i s0, s0, s1
   335b0:	20 c0 00 a8 	load_32 s1, 48(s0)
   335b4:	00 00 fc c0 	move s0, s24
   335b8:	18 fa ff f9 	call -6048 <P_SetMobjState>
   335bc:	4e a3 ff f9 	call -94920 <P_Random>
   335c0:	38 80 01 a8 	load_32 s1, 96(s24)
   335c4:	00 0c 00 01 	and s0, s0, 3
   335c8:	01 00 60 c0 	sub_i s0, s1, s0
   335cc:	20 04 00 12 	cmpgt_i s1, s0, 1
   335d0:	41 00 00 f4 	bnz s1, 8 <P_CheckMissileSpawn+0xc4>
   335d4:	00 04 00 0f 	move s0, 1
   335d8:	18 80 01 88 	store_32 s0, 96(s24)
   335dc:	37 fc ff 4f 	movehi s1, 524279
   335e0:	18 a0 01 a8 	load_32 s0, 104(s24)
   335e4:	21 fc 7f 00 	or s1, s1, 8191
   335e8:	00 80 10 c0 	and s0, s0, s1
   335ec:	18 a0 01 88 	store_32 s0, 104(s24)
   335f0:	18 70 01 a8 	load_32 s0, 92(s24)
   335f4:	20 e0 00 a8 	load_32 s1, 56(s0)
   335f8:	61 00 00 f2 	bz s1, 12 <P_CheckMissileSpawn+0xf0>
   335fc:	00 00 fc c0 	move s0, s24
   33600:	79 63 00 f8 	call 101860 <S_StartSound>
   33604:	fe e3 00 a8 	load_32 ra, 56(sp)
   33608:	1e f3 00 a8 	load_32 s24, 60(sp)
   3360c:	de 03 01 05 	add_i sp, sp, 64
   33610:	1f 00 00 f0 	ret

0000000000033614 P_SpawnMissile:
   33614:	de 03 ff 05 	add_i sp, sp, -64
   33618:	1e f3 00 88 	store_32 s24, 60(sp)
   3361c:	3e e3 00 88 	store_32 s25, 56(sp)
   33620:	5e d3 00 88 	store_32 s26, 52(sp)
   33624:	7e c3 00 88 	store_32 s27, 48(sp)
   33628:	fe b3 00 88 	store_32 ra, 44(sp)
   3362c:	20 03 f0 c0 	move s25, s0
   33630:	19 30 00 a8 	load_32 s0, 12(s25)
   33634:	79 40 00 a8 	load_32 s3, 16(s25)
   33638:	b9 50 00 a8 	load_32 s5, 20(s25)
   3363c:	80 00 f1 c0 	move s4, s2
   33640:	40 83 f0 c0 	move s26, s1
   33644:	20 20 00 4f 	movehi s1, 256
   33648:	45 80 50 c0 	add_i s2, s5, s1
   3364c:	20 80 f1 c0 	move s1, s3
   33650:	60 00 f2 c0 	move s3, s4
   33654:	1d fd ff f9 	call -2956 <P_SpawnMobj>
   33658:	00 03 f0 c0 	move s24, s0
   3365c:	18 70 01 a8 	load_32 s0, 92(s24)
   33660:	20 40 00 a8 	load_32 s1, 16(s0)
   33664:	61 00 00 f2 	bz s1, 12 <P_SpawnMissile+0x5c>
   33668:	00 00 fc c0 	move s0, s24
   3366c:	5e 63 00 f8 	call 101752 <S_StartSound>
   33670:	38 e3 01 88 	store_32 s25, 120(s24)
   33674:	19 30 00 a8 	load_32 s0, 12(s25)
   33678:	39 40 00 a8 	load_32 s1, 16(s25)
   3367c:	5a 30 00 a8 	load_32 s2, 12(s26)
   33680:	7a 40 00 a8 	load_32 s3, 16(s26)
   33684:	39 17 00 f8 	call 23780 <R_PointToAngle2>
   33688:	3a a8 01 a0 	load_u8 s1, 106(s26)
   3368c:	60 03 f0 c0 	move s27, s0
   33690:	21 10 00 01 	and s1, s1, 4
   33694:	01 01 00 f2 	bz s1, 32 <P_SpawnMissile+0xa0>
   33698:	17 a3 ff f9 	call -95140 <P_Random>
   3369c:	1e a0 00 88 	store_32 s0, 40(sp)
   336a0:	15 a3 ff f9 	call -95148 <P_Random>
   336a4:	3e a0 00 a8 	load_32 s1, 40(sp)
   336a8:	01 00 60 c0 	sub_i s0, s1, s0
   336ac:	00 50 00 0b 	shl s0, s0, 20
   336b0:	60 83 5d c0 	add_i s27, s0, s27
   336b4:	14 04 00 4f 	movehi s0, 52
   336b8:	78 83 00 88 	store_32 s27, 32(s24)
   336bc:	38 70 01 a8 	load_32 s1, 92(s24)
   336c0:	83 00 00 4f 	movehi s4, 3
   336c4:	5b 44 00 0a 	shr s2, s27, 17
   336c8:	60 40 19 00 	or s3, s0, 1616
   336cc:	01 f0 00 a8 	load_32 s0, 60(s1)
   336d0:	23 00 00 a8 	load_32 s1, (s3)
   336d4:	64 f0 7f 00 	or s3, s4, 8188
   336d8:	62 83 11 c0 	and s27, s2, s3
   336dc:	21 80 5d c0 	add_i s1, s1, s27
   336e0:	21 00 00 a8 	load_32 s1, (s1)
   336e4:	14 a2 ff f9 	call -96176 <FixedMul>
   336e8:	2d 04 00 4f 	movehi s1, 45
   336ec:	18 20 01 88 	store_32 s0, 72(s24)
   336f0:	01 90 41 00 	or s0, s1, 4196
   336f4:	38 70 01 a8 	load_32 s1, 92(s24)
   336f8:	40 80 5d c0 	add_i s2, s0, s27
   336fc:	01 f0 00 a8 	load_32 s0, 60(s1)
   33700:	22 00 00 a8 	load_32 s1, (s2)
   33704:	0c a2 ff f9 	call -96208 <FixedMul>
   33708:	18 30 01 88 	store_32 s0, 76(s24)
   3370c:	1a 30 00 a8 	load_32 s0, 12(s26)
   33710:	39 30 00 a8 	load_32 s1, 12(s25)
   33714:	5a 40 00 a8 	load_32 s2, 16(s26)
   33718:	79 40 00 a8 	load_32 s3, 16(s25)
   3371c:	00 80 60 c0 	sub_i s0, s0, s1
   33720:	22 80 61 c0 	sub_i s1, s2, s3
   33724:	e6 d7 ff f9 	call -41064 <P_AproxDistance>
   33728:	38 70 01 a8 	load_32 s1, 92(s24)
   3372c:	21 f0 00 a8 	load_32 s1, 60(s1)
   33730:	ca 84 00 f8 	call 135976 <__divsi3>
   33734:	20 00 f0 c0 	move s1, s0
   33738:	01 04 00 12 	cmpgt_i s0, s1, 1
   3373c:	40 00 00 f4 	bnz s0, 8 <P_SpawnMissile+0x130>
   33740:	20 04 00 0f 	move s1, 1
   33744:	1a 50 00 a8 	load_32 s0, 20(s26)
   33748:	59 50 00 a8 	load_32 s2, 20(s25)
   3374c:	00 00 61 c0 	sub_i s0, s0, s2
   33750:	c2 84 00 f8 	call 135944 <__divsi3>
   33754:	18 40 01 88 	store_32 s0, 80(s24)
   33758:	00 00 fc c0 	move s0, s24
   3375c:	6e ff ff f9 	call -584 <P_CheckMissileSpawn>
   33760:	00 00 fc c0 	move s0, s24
   33764:	fe b3 00 a8 	load_32 ra, 44(sp)
   33768:	7e c3 00 a8 	load_32 s27, 48(sp)
   3376c:	5e d3 00 a8 	load_32 s26, 52(sp)
   33770:	3e e3 00 a8 	load_32 s25, 56(sp)
   33774:	1e f3 00 a8 	load_32 s24, 60(sp)
   33778:	de 03 01 05 	add_i sp, sp, 64
   3377c:	1f 00 00 f0 	ret

0000000000033780 P_SpawnPlayerMissile:
   33780:	de 03 ff 05 	add_i sp, sp, -64
   33784:	1e f3 00 88 	store_32 s24, 60(sp)
   33788:	3e e3 00 88 	store_32 s25, 56(sp)
   3378c:	5e d3 00 88 	store_32 s26, 52(sp)
   33790:	7e c3 00 88 	store_32 s27, 48(sp)
   33794:	fe b3 00 88 	store_32 ra, 44(sp)
   33798:	3e a0 00 88 	store_32 s1, 40(sp)
   3379c:	00 03 f0 c0 	move s24, s0
   337a0:	60 03 04 4f 	movehi s27, 8192
   337a4:	38 83 00 a8 	load_32 s25, 32(s24)
   337a8:	20 80 fc c0 	move s1, s25
   337ac:	40 80 fd c0 	move s2, s27
   337b0:	e1 d5 ff f9 	call -43132 <P_AimLineAttack>
   337b4:	3b 04 00 4f 	movehi s1, 59
   337b8:	41 93 2b 00 	or s26, s1, 2788
   337bc:	3a 00 00 a8 	load_32 s1, (s26)
   337c0:	41 00 00 f4 	bnz s1, 8 <P_SpawnPlayerMissile+0x48>
   337c4:	03 00 00 f6 	b 12 <P_SpawnPlayerMissile+0x50>
   337c8:	40 03 f0 c0 	move s26, s0
   337cc:	0b 00 00 f6 	b 44 <P_SpawnPlayerMissile+0x78>
   337d0:	39 80 5d c0 	add_i s1, s25, s27
   337d4:	00 00 fc c0 	move s0, s24
   337d8:	3e 90 00 88 	store_32 s1, 36(sp)
   337dc:	40 80 fd c0 	move s2, s27
   337e0:	d5 d5 ff f9 	call -43180 <P_AimLineAttack>
   337e4:	3a 00 00 a8 	load_32 s1, (s26)
   337e8:	41 00 00 f4 	bnz s1, 8 <P_SpawnPlayerMissile+0x70>
   337ec:	35 00 00 f6 	b 212 <P_SpawnPlayerMissile+0x140>
   337f0:	40 03 f0 c0 	move s26, s0
   337f4:	3e 93 00 a8 	load_32 s25, 36(sp)
   337f8:	7e a0 00 a8 	load_32 s3, 40(sp)
   337fc:	80 20 00 4f 	movehi s4, 256
   33800:	18 30 00 a8 	load_32 s0, 12(s24)
   33804:	38 40 00 a8 	load_32 s1, 16(s24)
   33808:	58 50 00 a8 	load_32 s2, 20(s24)
   3380c:	42 00 52 c0 	add_i s2, s2, s4
   33810:	ae fc ff f9 	call -3400 <P_SpawnMobj>
   33814:	60 03 f0 c0 	move s27, s0
   33818:	1b 70 01 a8 	load_32 s0, 92(s27)
   3381c:	20 40 00 a8 	load_32 s1, 16(s0)
   33820:	81 00 00 f2 	bz s1, 16 <P_SpawnPlayerMissile+0xb0>
   33824:	00 80 fd c0 	move s0, s27
   33828:	ef 62 00 f8 	call 101308 <S_StartSound>
   3382c:	1b 70 01 a8 	load_32 s0, 92(s27)
   33830:	34 04 00 4f 	movehi s1, 52
   33834:	1b e3 01 88 	store_32 s24, 120(s27)
   33838:	43 00 00 4f 	movehi s2, 3
   3383c:	3b 83 00 88 	store_32 s25, 32(s27)
   33840:	00 f0 00 a8 	load_32 s0, 60(s0)
   33844:	79 44 00 0a 	shr s3, s25, 17
   33848:	21 40 19 00 	or s1, s1, 1616
   3384c:	42 f0 7f 00 	or s2, s2, 8188
   33850:	03 03 11 c0 	and s24, s3, s2
   33854:	21 00 00 a8 	load_32 s1, (s1)
   33858:	21 00 5c c0 	add_i s1, s1, s24
   3385c:	21 00 00 a8 	load_32 s1, (s1)
   33860:	b5 a1 ff f9 	call -96556 <FixedMul>
   33864:	2d 04 00 4f 	movehi s1, 45
   33868:	1b 20 01 88 	store_32 s0, 72(s27)
   3386c:	01 90 41 00 	or s0, s1, 4196
   33870:	3b 70 01 a8 	load_32 s1, 92(s27)
   33874:	40 00 5c c0 	add_i s2, s0, s24
   33878:	01 f0 00 a8 	load_32 s0, 60(s1)
   3387c:	22 00 00 a8 	load_32 s1, (s2)
   33880:	ad a1 ff f9 	call -96588 <FixedMul>
   33884:	1b 30 01 88 	store_32 s0, 76(s27)
   33888:	1b 70 01 a8 	load_32 s0, 92(s27)
   3388c:	00 f0 00 a8 	load_32 s0, 60(s0)
   33890:	20 00 fd c0 	move s1, s26
   33894:	a8 a1 ff f9 	call -96608 <FixedMul>
   33898:	1b 40 01 88 	store_32 s0, 80(s27)
   3389c:	00 80 fd c0 	move s0, s27
   338a0:	1d ff ff f9 	call -908 <P_CheckMissileSpawn>
   338a4:	fe b3 00 a8 	load_32 ra, 44(sp)
   338a8:	7e c3 00 a8 	load_32 s27, 48(sp)
   338ac:	5e d3 00 a8 	load_32 s26, 52(sp)
   338b0:	3e e3 00 a8 	load_32 s25, 56(sp)
   338b4:	1e f3 00 a8 	load_32 s24, 60(sp)
   338b8:	de 03 01 05 	add_i sp, sp, 64
   338bc:	1f 00 00 f0 	ret
   338c0:	00 00 fc 4f 	movehi s0, 516096
   338c4:	39 03 50 c0 	add_i s25, s25, s0
   338c8:	00 00 fc c0 	move s0, s24
   338cc:	40 00 04 4f 	movehi s2, 8192
   338d0:	20 80 fc c0 	move s1, s25
   338d4:	98 d5 ff f9 	call -43424 <P_AimLineAttack>
   338d8:	3a 00 00 a8 	load_32 s1, (s26)
   338dc:	61 f7 ff f5 	bnz s1, -276 <P_SpawnPlayerMissile+0x48>
   338e0:	38 83 00 a8 	load_32 s25, 32(s24)
   338e4:	40 03 00 0f 	move s26, 0
   338e8:	c4 ff ff f7 	b -240 <P_SpawnPlayerMissile+0x78>

00000000000338ec EV_Teleport:
   338ec:	de 03 ff 05 	add_i sp, sp, -64
   338f0:	1e f3 00 88 	store_32 s24, 60(sp)
   338f4:	3e e3 00 88 	store_32 s25, 56(sp)
   338f8:	5e d3 00 88 	store_32 s26, 52(sp)
   338fc:	7e c3 00 88 	store_32 s27, 48(sp)
   33900:	fe b3 00 88 	store_32 ra, 44(sp)
   33904:	00 03 f1 c0 	move s24, s2
   33908:	21 04 00 10 	cmpeq_i s1, s1, 1
   3390c:	20 03 00 0f 	move s25, 0
   33910:	58 a0 01 a8 	load_32 s2, 104(s24)
   33914:	81 0e 00 f4 	bnz s1, 464 <EV_Teleport+0x1f8>
   33918:	28 00 00 4f 	movehi s1, 8
   3391c:	22 80 10 c0 	and s1, s2, s1
   33920:	21 0e 00 f4 	bnz s1, 452 <EV_Teleport+0x1f8>
   33924:	3b 04 00 4f 	movehi s1, 59
   33928:	80 50 00 a6 	load_s16 s4, 20(s0)
   3392c:	21 80 4a 00 	or s1, s1, 4768
   33930:	01 00 00 a8 	load_32 s0, (s1)
   33934:	20 04 00 14 	cmplt_i s1, s0, 1
   33938:	61 0d 00 f4 	bnz s1, 428 <EV_Teleport+0x1f8>
   3393c:	3b 04 00 4f 	movehi s1, 59
   33940:	5c 04 00 4f 	movehi s2, 60
   33944:	61 80 4b 00 	or s3, s1, 4832
   33948:	22 50 02 00 	or s1, s2, 148
   3394c:	43 00 00 a8 	load_32 s2, (s3)
   33950:	61 10 00 a8 	load_32 s3, 4(s1)
   33954:	a3 80 00 c1 	cmpeq_i s5, s3, s1
   33958:	65 0c 00 f4 	bnz s5, 396 <EV_Teleport+0x1f8>
   3395c:	a7 00 00 4f 	movehi s5, 7
   33960:	20 03 00 0f 	move s25, 0
   33964:	d9 00 00 4f 	movehi s6, 25
   33968:	f4 2c ba 4f 	movehi s7, 381300
   3396c:	a5 fc 7f 00 	or s5, s5, 8191
   33970:	84 80 12 c0 	and s4, s4, s5
   33974:	a6 50 31 00 	or s5, s6, 3156
   33978:	c7 8c 2e 00 	or s6, s7, 2979
   3397c:	e0 80 fc c0 	move s7, s25
   33980:	07 61 01 07 	mull_i s8, s7, 88
   33984:	02 01 54 c0 	add_i s8, s2, s8
   33988:	08 41 00 a4 	load_u16 s8, 16(s8)
   3398c:	08 01 12 c1 	cmpne_i s8, s8, s4
   33990:	68 02 00 f4 	bnz s8, 76 <EV_Teleport+0xf0>
   33994:	40 83 f1 c0 	move s26, s3
   33998:	1a 21 00 a8 	load_32 s8, 8(s26)
   3399c:	08 81 12 c1 	cmpne_i s8, s8, s5
   339a0:	88 01 00 f4 	bnz s8, 48 <EV_Teleport+0xe4>
   339a4:	1a 61 01 a8 	load_32 s8, 88(s26)
   339a8:	08 a5 00 11 	cmpne_i s8, s8, 41
   339ac:	28 01 00 f4 	bnz s8, 36 <EV_Teleport+0xe4>
   339b0:	1a d1 00 a8 	load_32 s8, 52(s26)
   339b4:	08 01 00 a8 	load_32 s8, (s8)
   339b8:	08 01 61 c0 	sub_i s8, s8, s2
   339bc:	08 0d 00 09 	ashr s8, s8, 3
   339c0:	08 01 73 c0 	mull_i s8, s8, s6
   339c4:	08 81 13 c1 	cmpne_i s8, s8, s7
   339c8:	48 00 00 f4 	bnz s8, 8 <EV_Teleport+0xe4>
   339cc:	08 00 00 f6 	b 32 <EV_Teleport+0x100>
   339d0:	5a 13 00 a8 	load_32 s26, 4(s26)
   339d4:	1a 81 10 c1 	cmpne_i s8, s26, s1
   339d8:	08 fe ff f5 	bnz s8, -64 <EV_Teleport+0xac>
   339dc:	e7 04 00 05 	add_i s7, s7, 1
   339e0:	07 01 40 c1 	cmplt_i s8, s7, s0
   339e4:	e8 fc ff f5 	bnz s8, -100 <EV_Teleport+0x94>
   339e8:	3f 00 00 f6 	b 252 <EV_Teleport+0x1f8>
   339ec:	18 30 00 a8 	load_32 s0, 12(s24)
   339f0:	1e a0 00 88 	store_32 s0, 40(sp)
   339f4:	78 43 00 a8 	load_32 s27, 16(s24)
   339f8:	18 50 00 a8 	load_32 s0, 20(s24)
   339fc:	1e 90 00 88 	store_32 s0, 36(sp)
   33a00:	3a 30 00 a8 	load_32 s1, 12(s26)
   33a04:	5a 40 00 a8 	load_32 s2, 16(s26)
   33a08:	00 00 fc c0 	move s0, s24
   33a0c:	9a cf ff f9 	call -49560 <P_TeleportMove>
   33a10:	a0 06 00 f2 	bz s0, 212 <EV_Teleport+0x1f8>
   33a14:	18 e0 00 a8 	load_32 s0, 56(s24)
   33a18:	18 50 00 88 	store_32 s0, 20(s24)
   33a1c:	38 10 02 a8 	load_32 s1, 132(s24)
   33a20:	81 00 00 f2 	bz s1, 16 <EV_Teleport+0x144>
   33a24:	41 50 00 a8 	load_32 s2, 20(s1)
   33a28:	02 00 50 c0 	add_i s0, s2, s0
   33a2c:	01 40 00 88 	store_32 s0, 16(s1)
   33a30:	20 9f 00 0f 	move s25, 39
   33a34:	1e a0 00 a8 	load_32 s0, 40(sp)
   33a38:	20 80 fd c0 	move s1, s27
   33a3c:	5e 90 00 a8 	load_32 s2, 36(sp)
   33a40:	60 80 fc c0 	move s3, s25
   33a44:	21 fc ff f9 	call -3964 <P_SpawnMobj>
   33a48:	60 8f 00 0f 	move s27, 35
   33a4c:	20 80 fd c0 	move s1, s27
   33a50:	65 62 00 f8 	call 100756 <S_StartSound>
   33a54:	1a 80 00 a8 	load_32 s0, 32(s26)
   33a58:	34 04 00 4f 	movehi s1, 52
   33a5c:	43 00 00 4f 	movehi s2, 3
   33a60:	7a 30 00 a8 	load_32 s3, 12(s26)
   33a64:	8d 04 00 4f 	movehi s4, 45
   33a68:	21 40 19 00 	or s1, s1, 1616
   33a6c:	00 44 00 0a 	shr s0, s0, 17
   33a70:	42 f0 7f 00 	or s2, s2, 8188
   33a74:	21 00 00 a8 	load_32 s1, (s1)
   33a78:	00 00 11 c0 	and s0, s0, s2
   33a7c:	44 90 41 00 	or s2, s4, 4196
   33a80:	21 00 50 c0 	add_i s1, s1, s0
   33a84:	02 00 50 c0 	add_i s0, s2, s0
   33a88:	21 00 00 a8 	load_32 s1, (s1)
   33a8c:	5a 40 00 a8 	load_32 s2, 16(s26)
   33a90:	00 00 00 a8 	load_32 s0, (s0)
   33a94:	21 50 00 07 	mull_i s1, s1, 20
   33a98:	80 50 00 07 	mull_i s4, s0, 20
   33a9c:	01 80 51 c0 	add_i s0, s1, s3
   33aa0:	24 00 51 c0 	add_i s1, s4, s2
   33aa4:	58 50 00 a8 	load_32 s2, 20(s24)
   33aa8:	60 80 fc c0 	move s3, s25
   33aac:	07 fc ff f9 	call -4068 <P_SpawnMobj>
   33ab0:	20 80 fd c0 	move s1, s27
   33ab4:	4c 62 00 f8 	call 100656 <S_StartSound>
   33ab8:	18 10 02 a8 	load_32 s0, 132(s24)
   33abc:	60 00 00 f2 	bz s0, 12 <EV_Teleport+0x1dc>
   33ac0:	00 48 00 0f 	move s0, 18
   33ac4:	18 f0 01 88 	store_32 s0, 124(s24)
   33ac8:	1a 80 00 a8 	load_32 s0, 32(s26)
   33acc:	20 07 00 0f 	move s25, 1
   33ad0:	18 80 00 88 	store_32 s0, 32(s24)
   33ad4:	00 00 00 0f 	move s0, 0
   33ad8:	18 40 01 88 	store_32 s0, 80(s24)
   33adc:	18 30 01 88 	store_32 s0, 76(s24)
   33ae0:	18 20 01 88 	store_32 s0, 72(s24)
   33ae4:	00 80 fc c0 	move s0, s25
   33ae8:	fe b3 00 a8 	load_32 ra, 44(sp)
   33aec:	7e c3 00 a8 	load_32 s27, 48(sp)
   33af0:	5e d3 00 a8 	load_32 s26, 52(sp)
   33af4:	3e e3 00 a8 	load_32 s25, 56(sp)
   33af8:	1e f3 00 a8 	load_32 s24, 60(sp)
   33afc:	de 03 01 05 	add_i sp, sp, 64
   33b00:	1f 00 00 f0 	ret

0000000000033b04 P_InitThinkers:
   33b04:	1c 04 00 4f 	movehi s0, 60
   33b08:	00 50 02 00 	or s0, s0, 148
   33b0c:	00 10 00 88 	store_32 s0, 4(s0)
   33b10:	00 00 00 88 	store_32 s0, (s0)
   33b14:	1f 00 00 f0 	ret

0000000000033b18 P_AddThinker:
   33b18:	3c 04 00 4f 	movehi s1, 60
   33b1c:	21 50 02 00 	or s1, s1, 148
   33b20:	41 00 00 a8 	load_32 s2, (s1)
   33b24:	02 10 00 88 	store_32 s0, 4(s2)
   33b28:	20 10 00 88 	store_32 s1, 4(s0)
   33b2c:	40 00 00 88 	store_32 s2, (s0)
   33b30:	01 00 00 88 	store_32 s0, (s1)
   33b34:	1f 00 00 f0 	ret

0000000000033b38 P_RemoveThinker:
   33b38:	20 fc ff 0f 	move s1, -1
   33b3c:	20 20 00 88 	store_32 s1, 8(s0)
   33b40:	1f 00 00 f0 	ret

0000000000033b44 P_AllocateThinker:
   33b44:	1f 00 00 f0 	ret

0000000000033b48 P_RunThinkers:
   33b48:	de 03 ff 05 	add_i sp, sp, -64
   33b4c:	1e f3 00 88 	store_32 s24, 60(sp)
   33b50:	3e e3 00 88 	store_32 s25, 56(sp)
   33b54:	fe d3 00 88 	store_32 ra, 52(sp)
   33b58:	1c 04 00 4f 	movehi s0, 60
   33b5c:	20 53 02 00 	or s25, s0, 148
   33b60:	19 13 00 a8 	load_32 s24, 4(s25)
   33b64:	18 80 0c c1 	cmpeq_i s0, s24, s25
   33b68:	a0 02 00 f4 	bnz s0, 84 <P_RunThinkers+0x74>
   33b6c:	38 20 00 a8 	load_32 s1, 8(s24)
   33b70:	41 01 00 f2 	bz s1, 40 <P_RunThinkers+0x50>
   33b74:	01 fc ff 11 	cmpne_i s0, s1, -1
   33b78:	80 01 00 f4 	bnz s0, 48 <P_RunThinkers+0x60>
   33b7c:	18 00 00 a8 	load_32 s0, (s24)
   33b80:	38 10 00 a8 	load_32 s1, 4(s24)
   33b84:	01 00 00 88 	store_32 s0, (s1)
   33b88:	18 00 00 a8 	load_32 s0, (s24)
   33b8c:	20 10 00 88 	store_32 s1, 4(s0)
   33b90:	00 00 fc c0 	move s0, s24
   33b94:	08 63 00 f8 	call 101408 <Z_Free>
   33b98:	18 13 00 a8 	load_32 s24, 4(s24)
   33b9c:	18 80 1c c1 	cmpne_i s0, s24, s25
   33ba0:	60 fe ff f5 	bnz s0, -52 <P_RunThinkers+0x24>
   33ba4:	06 00 00 f6 	b 24 <P_RunThinkers+0x74>
   33ba8:	00 00 fc c0 	move s0, s24
   33bac:	21 00 00 fc 	call s1
   33bb0:	18 13 00 a8 	load_32 s24, 4(s24)
   33bb4:	18 80 1c c1 	cmpne_i s0, s24, s25
   33bb8:	a0 fd ff f5 	bnz s0, -76 <P_RunThinkers+0x24>
   33bbc:	fe d3 00 a8 	load_32 ra, 52(sp)
   33bc0:	3e e3 00 a8 	load_32 s25, 56(sp)
   33bc4:	1e f3 00 a8 	load_32 s24, 60(sp)
   33bc8:	de 03 01 05 	add_i sp, sp, 64
   33bcc:	1f 00 00 f0 	ret

0000000000033bd0 P_Ticker:
   33bd0:	de 03 ff 05 	add_i sp, sp, -64
   33bd4:	1e f3 00 88 	store_32 s24, 60(sp)
   33bd8:	3e e3 00 88 	store_32 s25, 56(sp)
   33bdc:	fe d3 00 88 	store_32 ra, 52(sp)
   33be0:	1b 04 00 4f 	movehi s0, 59
   33be4:	00 f0 01 00 	or s0, s0, 124
   33be8:	00 00 00 a8 	load_32 s0, (s0)
   33bec:	00 0a 00 f4 	bnz s0, 320 <P_Ticker+0x15c>
   33bf0:	1b 04 00 4f 	movehi s0, 59
   33bf4:	3b 04 00 4f 	movehi s1, 59
   33bf8:	5a 04 00 4f 	movehi s2, 58
   33bfc:	00 c0 01 00 	or s0, s0, 112
   33c00:	21 60 1f 00 	or s1, s1, 2008
   33c04:	42 30 6f 00 	or s2, s2, 7116
   33c08:	00 00 00 a8 	load_32 s0, (s0)
   33c0c:	61 00 00 a8 	load_32 s3, (s1)
   33c10:	22 00 00 a8 	load_32 s1, (s2)
   33c14:	a3 01 00 f2 	bz s3, 52 <P_Ticker+0x78>
   33c18:	01 00 00 c0 	or s0, s1, s0
   33c1c:	60 01 00 f4 	bnz s0, 44 <P_Ticker+0x78>
   33c20:	1a 04 00 4f 	movehi s0, 58
   33c24:	3b 04 00 4f 	movehi s1, 59
   33c28:	00 c0 6d 00 	or s0, s0, 7024
   33c2c:	21 40 02 00 	or s1, s1, 144
   33c30:	00 00 00 a8 	load_32 s0, (s0)
   33c34:	00 60 04 07 	mull_i s0, s0, 280
   33c38:	01 00 50 c0 	add_i s0, s1, s0
   33c3c:	00 40 00 a8 	load_32 s0, 16(s0)
   33c40:	00 04 00 11 	cmpne_i s0, s0, 1
   33c44:	40 07 00 f4 	bnz s0, 232 <P_Ticker+0x15c>
   33c48:	1b 04 00 4f 	movehi s0, 59
   33c4c:	00 03 02 00 	or s24, s0, 128
   33c50:	18 00 00 a8 	load_32 s0, (s24)
   33c54:	80 00 00 f2 	bz s0, 16 <P_Ticker+0x94>
   33c58:	1b 04 00 4f 	movehi s0, 59
   33c5c:	00 40 02 00 	or s0, s0, 144
   33c60:	0f 07 00 f8 	call 7228 <P_PlayerThink>
   33c64:	18 10 00 a8 	load_32 s0, 4(s24)
   33c68:	a0 00 00 f2 	bz s0, 20 <P_Ticker+0xac>
   33c6c:	1b 04 00 4f 	movehi s0, 59
   33c70:	00 40 02 00 	or s0, s0, 144
   33c74:	00 60 04 05 	add_i s0, s0, 280
   33c78:	09 07 00 f8 	call 7204 <P_PlayerThink>
   33c7c:	18 20 00 a8 	load_32 s0, 8(s24)
   33c80:	a0 00 00 f2 	bz s0, 20 <P_Ticker+0xc4>
   33c84:	1b 04 00 4f 	movehi s0, 59
   33c88:	00 40 02 00 	or s0, s0, 144
   33c8c:	00 c0 08 05 	add_i s0, s0, 560
   33c90:	03 07 00 f8 	call 7180 <P_PlayerThink>
   33c94:	18 30 00 a8 	load_32 s0, 12(s24)
   33c98:	a0 00 00 f2 	bz s0, 20 <P_Ticker+0xdc>
   33c9c:	1b 04 00 4f 	movehi s0, 59
   33ca0:	00 40 02 00 	or s0, s0, 144
   33ca4:	00 20 0d 05 	add_i s0, s0, 840
   33ca8:	fd 06 00 f8 	call 7156 <P_PlayerThink>
   33cac:	1c 04 00 4f 	movehi s0, 60
   33cb0:	20 53 02 00 	or s25, s0, 148
   33cb4:	19 13 00 a8 	load_32 s24, 4(s25)
   33cb8:	18 80 0c c1 	cmpeq_i s0, s24, s25
   33cbc:	a0 02 00 f4 	bnz s0, 84 <P_Ticker+0x140>
   33cc0:	38 20 00 a8 	load_32 s1, 8(s24)
   33cc4:	41 01 00 f2 	bz s1, 40 <P_Ticker+0x11c>
   33cc8:	01 fc ff 11 	cmpne_i s0, s1, -1
   33ccc:	80 01 00 f4 	bnz s0, 48 <P_Ticker+0x12c>
   33cd0:	18 00 00 a8 	load_32 s0, (s24)
   33cd4:	38 10 00 a8 	load_32 s1, 4(s24)
   33cd8:	01 00 00 88 	store_32 s0, (s1)
   33cdc:	18 00 00 a8 	load_32 s0, (s24)
   33ce0:	20 10 00 88 	store_32 s1, 4(s0)
   33ce4:	00 00 fc c0 	move s0, s24
   33ce8:	b3 62 00 f8 	call 101068 <Z_Free>
   33cec:	18 13 00 a8 	load_32 s24, 4(s24)
   33cf0:	18 80 1c c1 	cmpne_i s0, s24, s25
   33cf4:	60 fe ff f5 	bnz s0, -52 <P_Ticker+0xf0>
   33cf8:	06 00 00 f6 	b 24 <P_Ticker+0x140>
   33cfc:	00 00 fc c0 	move s0, s24
   33d00:	21 00 00 fc 	call s1
   33d04:	18 13 00 a8 	load_32 s24, 4(s24)
   33d08:	18 80 1c c1 	cmpne_i s0, s24, s25
   33d0c:	a0 fd ff f5 	bnz s0, -76 <P_Ticker+0xf0>
   33d10:	2d f3 ff f9 	call -13132 <P_UpdateSpecials>
   33d14:	13 fc ff f9 	call -4020 <P_RespawnSpecials>
   33d18:	1c 04 00 4f 	movehi s0, 60
   33d1c:	00 40 02 00 	or s0, s0, 144
   33d20:	20 00 00 a8 	load_32 s1, (s0)
   33d24:	21 04 00 05 	add_i s1, s1, 1
   33d28:	20 00 00 88 	store_32 s1, (s0)
   33d2c:	fe d3 00 a8 	load_32 ra, 52(sp)
   33d30:	3e e3 00 a8 	load_32 s25, 56(sp)
   33d34:	1e f3 00 a8 	load_32 s24, 60(sp)
   33d38:	de 03 01 05 	add_i sp, sp, 64
   33d3c:	1f 00 00 f0 	ret

0000000000033d40 P_ArchivePlayers:
   33d40:	de 03 ff 05 	add_i sp, sp, -64
   33d44:	1e f3 00 88 	store_32 s24, 60(sp)
   33d48:	3e e3 00 88 	store_32 s25, 56(sp)
   33d4c:	5e d3 00 88 	store_32 s26, 52(sp)
   33d50:	fe c3 00 88 	store_32 ra, 48(sp)
   33d54:	1b 04 00 4f 	movehi s0, 59
   33d58:	20 03 02 00 	or s25, s0, 128
   33d5c:	19 00 00 a8 	load_32 s0, (s25)
   33d60:	c0 04 00 f2 	bz s0, 152 <P_ArchivePlayers+0xb8>
   33d64:	1c 04 00 4f 	movehi s0, 60
   33d68:	20 00 00 0f 	move s1, 0
   33d6c:	40 60 04 0f 	move s2, 280
   33d70:	40 83 02 00 	or s26, s0, 160
   33d74:	1a 00 00 a8 	load_32 s0, (s26)
   33d78:	21 00 60 c0 	sub_i s1, s1, s0
   33d7c:	21 0c 00 01 	and s1, s1, 3
   33d80:	00 83 50 c0 	add_i s24, s0, s1
   33d84:	1a 03 00 88 	store_32 s24, (s26)
   33d88:	1b 04 00 4f 	movehi s0, 59
   33d8c:	20 40 02 00 	or s1, s0, 144
   33d90:	00 00 fc c0 	move s0, s24
   33d94:	dc 77 00 f8 	call 122736 <memcpy>
   33d98:	1a 00 00 a8 	load_32 s0, (s26)
   33d9c:	00 60 04 05 	add_i s0, s0, 280
   33da0:	1a 00 00 88 	store_32 s0, (s26)
   33da4:	18 d0 03 a8 	load_32 s0, 244(s24)
   33da8:	20 01 00 f2 	bz s0, 36 <P_ArchivePlayers+0x8c>
   33dac:	34 04 00 4f 	movehi s1, 52
   33db0:	21 20 5c 00 	or s1, s1, 5896
   33db4:	00 80 60 c0 	sub_i s0, s0, s1
   33db8:	3b d8 b6 4f 	movehi s1, 374491
   33dbc:	00 08 00 09 	ashr s0, s0, 2
   33dc0:	21 dc 36 00 	or s1, s1, 3511
   33dc4:	00 80 70 c0 	mull_i s0, s0, s1
   33dc8:	18 d0 03 88 	store_32 s0, 244(s24)
   33dcc:	18 10 04 a8 	load_32 s0, 260(s24)
   33dd0:	40 00 00 f4 	bnz s0, 8 <P_ArchivePlayers+0x98>
   33dd4:	09 00 00 f6 	b 36 <P_ArchivePlayers+0xb8>
   33dd8:	34 04 00 4f 	movehi s1, 52
   33ddc:	21 20 5c 00 	or s1, s1, 5896
   33de0:	00 80 60 c0 	sub_i s0, s0, s1
   33de4:	3b d8 b6 4f 	movehi s1, 374491
   33de8:	00 08 00 09 	ashr s0, s0, 2
   33dec:	21 dc 36 00 	or s1, s1, 3511
   33df0:	00 80 70 c0 	mull_i s0, s0, s1
   33df4:	18 10 04 88 	store_32 s0, 260(s24)
   33df8:	19 10 00 a8 	load_32 s0, 4(s25)
   33dfc:	c0 04 00 f2 	bz s0, 152 <P_ArchivePlayers+0x154>
   33e00:	1c 04 00 4f 	movehi s0, 60
   33e04:	20 00 00 0f 	move s1, 0
   33e08:	40 60 04 0f 	move s2, 280
   33e0c:	40 83 02 00 	or s26, s0, 160
   33e10:	1a 00 00 a8 	load_32 s0, (s26)
   33e14:	21 00 60 c0 	sub_i s1, s1, s0
   33e18:	21 0c 00 01 	and s1, s1, 3
   33e1c:	00 83 50 c0 	add_i s24, s0, s1
   33e20:	1a 03 00 88 	store_32 s24, (s26)
   33e24:	1b 04 00 4f 	movehi s0, 59
   33e28:	00 40 02 00 	or s0, s0, 144
   33e2c:	20 60 04 05 	add_i s1, s0, 280
   33e30:	00 00 fc c0 	move s0, s24
   33e34:	b4 77 00 f8 	call 122576 <memcpy>
   33e38:	1a 00 00 a8 	load_32 s0, (s26)
   33e3c:	00 60 04 05 	add_i s0, s0, 280
   33e40:	1a 00 00 88 	store_32 s0, (s26)
   33e44:	18 d0 03 a8 	load_32 s0, 244(s24)
   33e48:	20 01 00 f2 	bz s0, 36 <P_ArchivePlayers+0x12c>
   33e4c:	34 04 00 4f 	movehi s1, 52
   33e50:	21 20 5c 00 	or s1, s1, 5896
   33e54:	00 80 60 c0 	sub_i s0, s0, s1
   33e58:	3b d8 b6 4f 	movehi s1, 374491
   33e5c:	00 08 00 09 	ashr s0, s0, 2
   33e60:	21 dc 36 00 	or s1, s1, 3511
   33e64:	00 80 70 c0 	mull_i s0, s0, s1
   33e68:	18 d0 03 88 	store_32 s0, 244(s24)
   33e6c:	18 10 04 a8 	load_32 s0, 260(s24)
   33e70:	20 01 00 f2 	bz s0, 36 <P_ArchivePlayers+0x154>
   33e74:	34 04 00 4f 	movehi s1, 52
   33e78:	21 20 5c 00 	or s1, s1, 5896
   33e7c:	00 80 60 c0 	sub_i s0, s0, s1
   33e80:	3b d8 b6 4f 	movehi s1, 374491
   33e84:	00 08 00 09 	ashr s0, s0, 2
   33e88:	21 dc 36 00 	or s1, s1, 3511
   33e8c:	00 80 70 c0 	mull_i s0, s0, s1
   33e90:	18 10 04 88 	store_32 s0, 260(s24)
   33e94:	19 20 00 a8 	load_32 s0, 8(s25)
   33e98:	c0 04 00 f2 	bz s0, 152 <P_ArchivePlayers+0x1f0>
   33e9c:	1c 04 00 4f 	movehi s0, 60
   33ea0:	20 00 00 0f 	move s1, 0
   33ea4:	40 60 04 0f 	move s2, 280
   33ea8:	40 83 02 00 	or s26, s0, 160
   33eac:	1a 00 00 a8 	load_32 s0, (s26)
   33eb0:	21 00 60 c0 	sub_i s1, s1, s0
   33eb4:	21 0c 00 01 	and s1, s1, 3
   33eb8:	00 83 50 c0 	add_i s24, s0, s1
   33ebc:	1a 03 00 88 	store_32 s24, (s26)
   33ec0:	1b 04 00 4f 	movehi s0, 59
   33ec4:	00 40 02 00 	or s0, s0, 144
   33ec8:	20 c0 08 05 	add_i s1, s0, 560
   33ecc:	00 00 fc c0 	move s0, s24
   33ed0:	8d 77 00 f8 	call 122420 <memcpy>
   33ed4:	1a 00 00 a8 	load_32 s0, (s26)
   33ed8:	00 60 04 05 	add_i s0, s0, 280
   33edc:	1a 00 00 88 	store_32 s0, (s26)
   33ee0:	18 d0 03 a8 	load_32 s0, 244(s24)
   33ee4:	20 01 00 f2 	bz s0, 36 <P_ArchivePlayers+0x1c8>
   33ee8:	34 04 00 4f 	movehi s1, 52
   33eec:	21 20 5c 00 	or s1, s1, 5896
   33ef0:	00 80 60 c0 	sub_i s0, s0, s1
   33ef4:	3b d8 b6 4f 	movehi s1, 374491
   33ef8:	00 08 00 09 	ashr s0, s0, 2
   33efc:	21 dc 36 00 	or s1, s1, 3511
   33f00:	00 80 70 c0 	mull_i s0, s0, s1
   33f04:	18 d0 03 88 	store_32 s0, 244(s24)
   33f08:	18 10 04 a8 	load_32 s0, 260(s24)
   33f0c:	20 01 00 f2 	bz s0, 36 <P_ArchivePlayers+0x1f0>
   33f10:	34 04 00 4f 	movehi s1, 52
   33f14:	21 20 5c 00 	or s1, s1, 5896
   33f18:	00 80 60 c0 	sub_i s0, s0, s1
   33f1c:	3b d8 b6 4f 	movehi s1, 374491
   33f20:	00 08 00 09 	ashr s0, s0, 2
   33f24:	21 dc 36 00 	or s1, s1, 3511
   33f28:	00 80 70 c0 	mull_i s0, s0, s1
   33f2c:	18 10 04 88 	store_32 s0, 260(s24)
   33f30:	19 30 00 a8 	load_32 s0, 12(s25)
   33f34:	c0 04 00 f2 	bz s0, 152 <P_ArchivePlayers+0x28c>
   33f38:	1c 04 00 4f 	movehi s0, 60
   33f3c:	20 00 00 0f 	move s1, 0
   33f40:	40 60 04 0f 	move s2, 280
   33f44:	20 83 02 00 	or s25, s0, 160
   33f48:	19 00 00 a8 	load_32 s0, (s25)
   33f4c:	21 00 60 c0 	sub_i s1, s1, s0
   33f50:	21 0c 00 01 	and s1, s1, 3
   33f54:	00 83 50 c0 	add_i s24, s0, s1
   33f58:	19 03 00 88 	store_32 s24, (s25)
   33f5c:	1b 04 00 4f 	movehi s0, 59
   33f60:	00 40 02 00 	or s0, s0, 144
   33f64:	20 20 0d 05 	add_i s1, s0, 840
   33f68:	00 00 fc c0 	move s0, s24
   33f6c:	66 77 00 f8 	call 122264 <memcpy>
   33f70:	19 00 00 a8 	load_32 s0, (s25)
   33f74:	00 60 04 05 	add_i s0, s0, 280
   33f78:	19 00 00 88 	store_32 s0, (s25)
   33f7c:	18 d0 03 a8 	load_32 s0, 244(s24)
   33f80:	20 01 00 f2 	bz s0, 36 <P_ArchivePlayers+0x264>
   33f84:	34 04 00 4f 	movehi s1, 52
   33f88:	21 20 5c 00 	or s1, s1, 5896
   33f8c:	00 80 60 c0 	sub_i s0, s0, s1
   33f90:	3b d8 b6 4f 	movehi s1, 374491
   33f94:	00 08 00 09 	ashr s0, s0, 2
   33f98:	21 dc 36 00 	or s1, s1, 3511
   33f9c:	00 80 70 c0 	mull_i s0, s0, s1
   33fa0:	18 d0 03 88 	store_32 s0, 244(s24)
   33fa4:	18 10 04 a8 	load_32 s0, 260(s24)
   33fa8:	20 01 00 f2 	bz s0, 36 <P_ArchivePlayers+0x28c>
   33fac:	34 04 00 4f 	movehi s1, 52
   33fb0:	21 20 5c 00 	or s1, s1, 5896
   33fb4:	00 80 60 c0 	sub_i s0, s0, s1
   33fb8:	3b d8 b6 4f 	movehi s1, 374491
   33fbc:	00 08 00 09 	ashr s0, s0, 2
   33fc0:	21 dc 36 00 	or s1, s1, 3511
   33fc4:	00 80 70 c0 	mull_i s0, s0, s1
   33fc8:	18 10 04 88 	store_32 s0, 260(s24)
   33fcc:	fe c3 00 a8 	load_32 ra, 48(sp)
   33fd0:	5e d3 00 a8 	load_32 s26, 52(sp)
   33fd4:	3e e3 00 a8 	load_32 s25, 56(sp)
   33fd8:	1e f3 00 a8 	load_32 s24, 60(sp)
   33fdc:	de 03 01 05 	add_i sp, sp, 64
   33fe0:	1f 00 00 f0 	ret

0000000000033fe4 P_UnArchivePlayers:
   33fe4:	de 03 ff 05 	add_i sp, sp, -64
   33fe8:	1e f3 00 88 	store_32 s24, 60(sp)
   33fec:	3e e3 00 88 	store_32 s25, 56(sp)
   33ff0:	5e d3 00 88 	store_32 s26, 52(sp)
   33ff4:	7e c3 00 88 	store_32 s27, 48(sp)
   33ff8:	fe b3 00 88 	store_32 ra, 44(sp)
   33ffc:	1b 04 00 4f 	movehi s0, 59
   34000:	40 00 02 00 	or s2, s0, 128
   34004:	02 00 00 a8 	load_32 s0, (s2)
   34008:	5e a0 00 88 	store_32 s2, 40(sp)
   3400c:	80 04 00 f2 	bz s0, 144 <P_UnArchivePlayers+0xb8>
   34010:	1c 04 00 4f 	movehi s0, 60
   34014:	40 03 00 0f 	move s26, 0
   34018:	40 60 04 0f 	move s2, 280
   3401c:	60 83 02 00 	or s27, s0, 160
   34020:	1b 00 00 a8 	load_32 s0, (s27)
   34024:	3a 00 60 c0 	sub_i s1, s26, s0
   34028:	21 0c 00 01 	and s1, s1, 3
   3402c:	20 83 50 c0 	add_i s25, s0, s1
   34030:	3b 03 00 88 	store_32 s25, (s27)
   34034:	1b 04 00 4f 	movehi s0, 59
   34038:	00 43 02 00 	or s24, s0, 144
   3403c:	00 00 fc c0 	move s0, s24
   34040:	20 80 fc c0 	move s1, s25
   34044:	30 77 00 f8 	call 122048 <memcpy>
   34048:	19 60 04 05 	add_i s0, s25, 280
   3404c:	1b 00 00 88 	store_32 s0, (s27)
   34050:	58 03 00 88 	store_32 s26, (s24)
   34054:	58 63 03 88 	store_32 s26, 216(s24)
   34058:	58 93 03 88 	store_32 s26, 228(s24)
   3405c:	18 d0 03 a8 	load_32 s0, 244(s24)
   34060:	c0 00 00 f2 	bz s0, 24 <P_UnArchivePlayers+0x94>
   34064:	34 04 00 4f 	movehi s1, 52
   34068:	00 70 00 07 	mull_i s0, s0, 28
   3406c:	21 20 5c 00 	or s1, s1, 5896
   34070:	01 00 50 c0 	add_i s0, s1, s0
   34074:	18 d0 03 88 	store_32 s0, 244(s24)
   34078:	18 10 04 a8 	load_32 s0, 260(s24)
   3407c:	5e a0 00 a8 	load_32 s2, 40(sp)
   34080:	40 00 00 f4 	bnz s0, 8 <P_UnArchivePlayers+0xa4>
   34084:	06 00 00 f6 	b 24 <P_UnArchivePlayers+0xb8>
   34088:	34 04 00 4f 	movehi s1, 52
   3408c:	00 70 00 07 	mull_i s0, s0, 28
   34090:	21 20 5c 00 	or s1, s1, 5896
   34094:	01 00 50 c0 	add_i s0, s1, s0
   34098:	18 10 04 88 	store_32 s0, 260(s24)
   3409c:	02 10 00 a8 	load_32 s0, 4(s2)
   340a0:	60 04 00 f2 	bz s0, 140 <P_UnArchivePlayers+0x148>
   340a4:	1c 04 00 4f 	movehi s0, 60
   340a8:	60 03 00 0f 	move s27, 0
   340ac:	40 60 04 0f 	move s2, 280
   340b0:	40 83 02 00 	or s26, s0, 160
   340b4:	1a 00 00 a8 	load_32 s0, (s26)
   340b8:	3b 00 60 c0 	sub_i s1, s27, s0
   340bc:	21 0c 00 01 	and s1, s1, 3
   340c0:	00 83 50 c0 	add_i s24, s0, s1
   340c4:	1a 03 00 88 	store_32 s24, (s26)
   340c8:	1b 04 00 4f 	movehi s0, 59
   340cc:	20 00 fc c0 	move s1, s24
   340d0:	20 43 02 00 	or s25, s0, 144
   340d4:	19 60 04 05 	add_i s0, s25, 280
   340d8:	0b 77 00 f8 	call 121900 <memcpy>
   340dc:	18 60 04 05 	add_i s0, s24, 280
   340e0:	1a 00 00 88 	store_32 s0, (s26)
   340e4:	79 63 04 88 	store_32 s27, 280(s25)
   340e8:	79 c3 07 88 	store_32 s27, 496(s25)
   340ec:	79 f3 07 88 	store_32 s27, 508(s25)
   340f0:	19 30 08 a8 	load_32 s0, 524(s25)
   340f4:	c0 00 00 f2 	bz s0, 24 <P_UnArchivePlayers+0x128>
   340f8:	34 04 00 4f 	movehi s1, 52
   340fc:	00 70 00 07 	mull_i s0, s0, 28
   34100:	21 20 5c 00 	or s1, s1, 5896
   34104:	01 00 50 c0 	add_i s0, s1, s0
   34108:	19 30 08 88 	store_32 s0, 524(s25)
   3410c:	19 70 08 a8 	load_32 s0, 540(s25)
   34110:	5e a0 00 a8 	load_32 s2, 40(sp)
   34114:	c0 00 00 f2 	bz s0, 24 <P_UnArchivePlayers+0x148>
   34118:	34 04 00 4f 	movehi s1, 52
   3411c:	00 70 00 07 	mull_i s0, s0, 28
   34120:	21 20 5c 00 	or s1, s1, 5896
   34124:	01 00 50 c0 	add_i s0, s1, s0
   34128:	19 70 08 88 	store_32 s0, 540(s25)
   3412c:	02 20 00 a8 	load_32 s0, 8(s2)
   34130:	60 04 00 f2 	bz s0, 140 <P_UnArchivePlayers+0x1d8>
   34134:	1c 04 00 4f 	movehi s0, 60
   34138:	60 03 00 0f 	move s27, 0
   3413c:	40 60 04 0f 	move s2, 280
   34140:	40 83 02 00 	or s26, s0, 160
   34144:	1a 00 00 a8 	load_32 s0, (s26)
   34148:	3b 00 60 c0 	sub_i s1, s27, s0
   3414c:	21 0c 00 01 	and s1, s1, 3
   34150:	00 83 50 c0 	add_i s24, s0, s1
   34154:	1a 03 00 88 	store_32 s24, (s26)
   34158:	1b 04 00 4f 	movehi s0, 59
   3415c:	20 00 fc c0 	move s1, s24
   34160:	20 43 02 00 	or s25, s0, 144
   34164:	19 c0 08 05 	add_i s0, s25, 560
   34168:	e7 76 00 f8 	call 121756 <memcpy>
   3416c:	18 60 04 05 	add_i s0, s24, 280
   34170:	1a 00 00 88 	store_32 s0, (s26)
   34174:	79 c3 08 88 	store_32 s27, 560(s25)
   34178:	79 23 0c 88 	store_32 s27, 776(s25)
   3417c:	79 53 0c 88 	store_32 s27, 788(s25)
   34180:	19 90 0c a8 	load_32 s0, 804(s25)
   34184:	c0 00 00 f2 	bz s0, 24 <P_UnArchivePlayers+0x1b8>
   34188:	34 04 00 4f 	movehi s1, 52
   3418c:	00 70 00 07 	mull_i s0, s0, 28
   34190:	21 20 5c 00 	or s1, s1, 5896
   34194:	01 00 50 c0 	add_i s0, s1, s0
   34198:	19 90 0c 88 	store_32 s0, 804(s25)
   3419c:	19 d0 0c a8 	load_32 s0, 820(s25)
   341a0:	5e a0 00 a8 	load_32 s2, 40(sp)
   341a4:	c0 00 00 f2 	bz s0, 24 <P_UnArchivePlayers+0x1d8>
   341a8:	34 04 00 4f 	movehi s1, 52
   341ac:	00 70 00 07 	mull_i s0, s0, 28
   341b0:	21 20 5c 00 	or s1, s1, 5896
   341b4:	01 00 50 c0 	add_i s0, s1, s0
   341b8:	19 d0 0c 88 	store_32 s0, 820(s25)
   341bc:	02 30 00 a8 	load_32 s0, 12(s2)
   341c0:	40 04 00 f2 	bz s0, 136 <P_UnArchivePlayers+0x264>
   341c4:	1c 04 00 4f 	movehi s0, 60
   341c8:	60 03 00 0f 	move s27, 0
   341cc:	40 60 04 0f 	move s2, 280
   341d0:	40 83 02 00 	or s26, s0, 160
   341d4:	1a 00 00 a8 	load_32 s0, (s26)
   341d8:	3b 00 60 c0 	sub_i s1, s27, s0
   341dc:	21 0c 00 01 	and s1, s1, 3
   341e0:	00 83 50 c0 	add_i s24, s0, s1
   341e4:	1a 03 00 88 	store_32 s24, (s26)
   341e8:	1b 04 00 4f 	movehi s0, 59
   341ec:	20 00 fc c0 	move s1, s24
   341f0:	20 43 02 00 	or s25, s0, 144
   341f4:	19 20 0d 05 	add_i s0, s25, 840
   341f8:	c3 76 00 f8 	call 121612 <memcpy>
   341fc:	18 60 04 05 	add_i s0, s24, 280
   34200:	1a 00 00 88 	store_32 s0, (s26)
   34204:	79 23 0d 88 	store_32 s27, 840(s25)
   34208:	79 83 10 88 	store_32 s27, 1056(s25)
   3420c:	79 b3 10 88 	store_32 s27, 1068(s25)
   34210:	19 f0 10 a8 	load_32 s0, 1084(s25)
   34214:	c0 00 00 f2 	bz s0, 24 <P_UnArchivePlayers+0x248>
   34218:	34 04 00 4f 	movehi s1, 52
   3421c:	00 70 00 07 	mull_i s0, s0, 28
   34220:	21 20 5c 00 	or s1, s1, 5896
   34224:	01 00 50 c0 	add_i s0, s1, s0
   34228:	19 f0 10 88 	store_32 s0, 1084(s25)
   3422c:	19 30 11 a8 	load_32 s0, 1100(s25)
   34230:	c0 00 00 f2 	bz s0, 24 <P_UnArchivePlayers+0x264>
   34234:	34 04 00 4f 	movehi s1, 52
   34238:	00 70 00 07 	mull_i s0, s0, 28
   3423c:	21 20 5c 00 	or s1, s1, 5896
   34240:	01 00 50 c0 	add_i s0, s1, s0
   34244:	19 30 11 88 	store_32 s0, 1100(s25)
   34248:	fe b3 00 a8 	load_32 ra, 44(sp)
   3424c:	7e c3 00 a8 	load_32 s27, 48(sp)
   34250:	5e d3 00 a8 	load_32 s26, 52(sp)
   34254:	3e e3 00 a8 	load_32 s25, 56(sp)
   34258:	1e f3 00 a8 	load_32 s24, 60(sp)
   3425c:	de 03 01 05 	add_i sp, sp, 64
   34260:	1f 00 00 f0 	ret

0000000000034264 P_ArchiveWorld:
   34264:	1c 04 00 4f 	movehi s0, 60
   34268:	3b 04 00 4f 	movehi s1, 59
   3426c:	00 80 02 00 	or s0, s0, 160
   34270:	21 80 4a 00 	or s1, s1, 4768
   34274:	60 00 00 a8 	load_32 s3, (s0)
   34278:	41 00 00 a8 	load_32 s2, (s1)
   3427c:	22 04 00 14 	cmplt_i s1, s2, 1
   34280:	41 03 00 f4 	bnz s1, 104 <P_ArchiveWorld+0x84>
   34284:	3b 04 00 4f 	movehi s1, 59
   34288:	a0 00 00 0f 	move s5, 0
   3428c:	21 80 4b 00 	or s1, s1, 4832
   34290:	81 00 00 a8 	load_32 s4, (s1)
   34294:	24 08 00 a4 	load_u16 s1, 2(s4)
   34298:	a5 04 00 05 	add_i s5, s5, 1
   3429c:	23 00 00 86 	store_16 s1, (s3)
   342a0:	24 18 00 a4 	load_u16 s1, 6(s4)
   342a4:	23 08 00 86 	store_16 s1, 2(s3)
   342a8:	24 20 00 a6 	load_s16 s1, 8(s4)
   342ac:	23 10 00 86 	store_16 s1, 4(s3)
   342b0:	24 28 00 a6 	load_s16 s1, 10(s4)
   342b4:	23 18 00 86 	store_16 s1, 6(s3)
   342b8:	24 30 00 a6 	load_s16 s1, 12(s4)
   342bc:	23 20 00 86 	store_16 s1, 8(s3)
   342c0:	24 38 00 a6 	load_s16 s1, 14(s4)
   342c4:	23 28 00 86 	store_16 s1, 10(s3)
   342c8:	23 38 00 05 	add_i s1, s3, 14
   342cc:	c4 40 00 a6 	load_s16 s6, 16(s4)
   342d0:	84 60 01 05 	add_i s4, s4, 88
   342d4:	c3 30 00 86 	store_16 s6, 12(s3)
   342d8:	c5 00 41 c1 	cmplt_i s6, s5, s2
   342dc:	60 80 f0 c0 	move s3, s1
   342e0:	a6 fd ff f5 	bnz s6, -76 <P_ArchiveWorld+0x30>
   342e4:	02 00 00 f6 	b 8 <P_ArchiveWorld+0x88>
   342e8:	20 80 f1 c0 	move s1, s3
   342ec:	5b 04 00 4f 	movehi s2, 59
   342f0:	42 60 4a 00 	or s2, s2, 4760
   342f4:	42 00 00 a8 	load_32 s2, (s2)
   342f8:	62 04 00 14 	cmplt_i s3, s2, 1
   342fc:	43 07 00 f4 	bnz s3, 232 <P_ArchiveWorld+0x180>
   34300:	7b 04 00 4f 	movehi s3, 59
   34304:	9b 04 00 4f 	movehi s4, 59
   34308:	a0 00 00 0f 	move s5, 0
   3430c:	63 40 4a 00 	or s3, s3, 4752
   34310:	84 a0 4b 00 	or s4, s4, 4840
   34314:	63 00 00 a8 	load_32 s3, (s3)
   34318:	84 00 00 a8 	load_32 s4, (s4)
   3431c:	06 00 00 f6 	b 24 <P_ArchiveWorld+0xd0>
   34320:	21 18 00 05 	add_i s1, s1, 6
   34324:	c3 60 00 a6 	load_s16 s6, 24(s3)
   34328:	e6 fc ff 10 	cmpeq_i s7, s6, -1
   3432c:	47 05 00 f4 	bnz s7, 168 <P_ArchiveWorld+0x170>
   34330:	1b 00 00 f6 	b 108 <P_ArchiveWorld+0x138>
   34334:	c3 40 00 a6 	load_s16 s6, 16(s3)
   34338:	c1 00 00 86 	store_16 s6, (s1)
   3433c:	c3 48 00 a6 	load_s16 s6, 18(s3)
   34340:	c1 08 00 86 	store_16 s6, 2(s1)
   34344:	c3 50 00 a6 	load_s16 s6, 20(s3)
   34348:	c1 10 00 86 	store_16 s6, 4(s1)
   3434c:	c3 58 00 a6 	load_s16 s6, 22(s3)
   34350:	e6 fc ff 10 	cmpeq_i s7, s6, -1
   34354:	67 fe ff f5 	bnz s7, -52 <P_ArchiveWorld+0xbc>
   34358:	c6 50 00 07 	mull_i s6, s6, 20
   3435c:	c4 00 53 c0 	add_i s6, s4, s6
   34360:	e6 08 00 a4 	load_u16 s7, 2(s6)
   34364:	e1 18 00 86 	store_16 s7, 6(s1)
   34368:	e6 18 00 a4 	load_u16 s7, 6(s6)
   3436c:	e1 20 00 86 	store_16 s7, 8(s1)
   34370:	e6 20 00 a6 	load_s16 s7, 8(s6)
   34374:	e1 28 00 86 	store_16 s7, 10(s1)
   34378:	e6 28 00 a6 	load_s16 s7, 10(s6)
   3437c:	e1 30 00 86 	store_16 s7, 12(s1)
   34380:	e1 40 00 05 	add_i s7, s1, 16
   34384:	c6 30 00 a6 	load_s16 s6, 12(s6)
   34388:	c1 38 00 86 	store_16 s6, 14(s1)
   3438c:	20 80 f3 c0 	move s1, s7
   34390:	c3 60 00 a6 	load_s16 s6, 24(s3)
   34394:	e6 fc ff 10 	cmpeq_i s7, s6, -1
   34398:	e7 01 00 f4 	bnz s7, 60 <P_ArchiveWorld+0x170>
   3439c:	c6 50 00 07 	mull_i s6, s6, 20
   343a0:	c4 00 53 c0 	add_i s6, s4, s6
   343a4:	e6 08 00 a4 	load_u16 s7, 2(s6)
   343a8:	e1 00 00 86 	store_16 s7, (s1)
   343ac:	e6 18 00 a4 	load_u16 s7, 6(s6)
   343b0:	e1 08 00 86 	store_16 s7, 2(s1)
   343b4:	e6 20 00 a6 	load_s16 s7, 8(s6)
   343b8:	e1 10 00 86 	store_16 s7, 4(s1)
   343bc:	e6 28 00 a6 	load_s16 s7, 10(s6)
   343c0:	e1 18 00 86 	store_16 s7, 6(s1)
   343c4:	e1 28 00 05 	add_i s7, s1, 10
   343c8:	c6 30 00 a6 	load_s16 s6, 12(s6)
   343cc:	c1 20 00 86 	store_16 s6, 8(s1)
   343d0:	20 80 f3 c0 	move s1, s7
   343d4:	a5 04 00 05 	add_i s5, s5, 1
   343d8:	63 00 01 05 	add_i s3, s3, 64
   343dc:	c5 00 41 c1 	cmplt_i s6, s5, s2
   343e0:	a6 fa ff f5 	bnz s6, -172 <P_ArchiveWorld+0xd0>
   343e4:	20 00 00 88 	store_32 s1, (s0)
   343e8:	1f 00 00 f0 	ret

00000000000343ec P_UnArchiveWorld:
   343ec:	1c 04 00 4f 	movehi s0, 60
   343f0:	3b 04 00 4f 	movehi s1, 59
   343f4:	00 80 02 00 	or s0, s0, 160
   343f8:	41 80 4a 00 	or s2, s1, 4768
   343fc:	60 00 00 a8 	load_32 s3, (s0)
   34400:	22 00 00 a8 	load_32 s1, (s2)
   34404:	21 04 00 14 	cmplt_i s1, s1, 1
   34408:	01 04 00 f4 	bnz s1, 128 <P_UnArchiveWorld+0x9c>
   3440c:	3b 04 00 4f 	movehi s1, 59
   34410:	80 00 00 0f 	move s4, 0
   34414:	21 80 4b 00 	or s1, s1, 4832
   34418:	a1 00 00 a8 	load_32 s5, (s1)
   3441c:	c0 00 f2 c0 	move s6, s4
   34420:	23 00 00 a6 	load_s16 s1, (s3)
   34424:	c6 04 00 05 	add_i s6, s6, 1
   34428:	21 40 00 0b 	shl s1, s1, 16
   3442c:	25 00 00 88 	store_32 s1, (s5)
   34430:	23 08 00 a6 	load_s16 s1, 2(s3)
   34434:	21 40 00 0b 	shl s1, s1, 16
   34438:	25 10 00 88 	store_32 s1, 4(s5)
   3443c:	23 10 00 a6 	load_s16 s1, 4(s3)
   34440:	25 20 00 86 	store_16 s1, 8(s5)
   34444:	23 18 00 a6 	load_s16 s1, 6(s3)
   34448:	25 28 00 86 	store_16 s1, 10(s5)
   3444c:	23 20 00 a6 	load_s16 s1, 8(s3)
   34450:	25 30 00 86 	store_16 s1, 12(s5)
   34454:	23 28 00 a6 	load_s16 s1, 10(s3)
   34458:	25 38 00 86 	store_16 s1, 14(s5)
   3445c:	23 30 00 a6 	load_s16 s1, 12(s3)
   34460:	25 40 00 86 	store_16 s1, 16(s5)
   34464:	23 38 00 05 	add_i s1, s3, 14
   34468:	85 30 01 88 	store_32 s4, 76(s5)
   3446c:	85 60 00 88 	store_32 s4, 24(s5)
   34470:	a5 60 01 05 	add_i s5, s5, 88
   34474:	e2 00 00 a8 	load_32 s7, (s2)
   34478:	60 80 f0 c0 	move s3, s1
   3447c:	e6 80 43 c1 	cmplt_i s7, s6, s7
   34480:	07 fd ff f5 	bnz s7, -96 <P_UnArchiveWorld+0x34>
   34484:	02 00 00 f6 	b 8 <P_UnArchiveWorld+0xa0>
   34488:	20 80 f1 c0 	move s1, s3
   3448c:	5b 04 00 4f 	movehi s2, 59
   34490:	42 60 4a 00 	or s2, s2, 4760
   34494:	62 00 00 a8 	load_32 s3, (s2)
   34498:	63 04 00 14 	cmplt_i s3, s3, 1
   3449c:	a3 07 00 f4 	bnz s3, 244 <P_UnArchiveWorld+0x1a4>
   344a0:	7b 04 00 4f 	movehi s3, 59
   344a4:	9b 04 00 4f 	movehi s4, 59
   344a8:	a0 00 00 0f 	move s5, 0
   344ac:	63 40 4a 00 	or s3, s3, 4752
   344b0:	84 a0 4b 00 	or s4, s4, 4840
   344b4:	63 00 00 a8 	load_32 s3, (s3)
   344b8:	84 00 00 a8 	load_32 s4, (s4)
   344bc:	06 00 00 f6 	b 24 <P_UnArchiveWorld+0xe8>
   344c0:	21 18 00 05 	add_i s1, s1, 6
   344c4:	c3 60 00 a6 	load_s16 s6, 24(s3)
   344c8:	e6 fc ff 10 	cmpeq_i s7, s6, -1
   344cc:	87 05 00 f4 	bnz s7, 176 <P_UnArchiveWorld+0x190>
   344d0:	1c 00 00 f6 	b 112 <P_UnArchiveWorld+0x154>
   344d4:	c1 00 00 a6 	load_s16 s6, (s1)
   344d8:	c3 40 00 86 	store_16 s6, 16(s3)
   344dc:	c1 08 00 a6 	load_s16 s6, 2(s1)
   344e0:	c3 48 00 86 	store_16 s6, 18(s3)
   344e4:	c1 10 00 a6 	load_s16 s6, 4(s1)
   344e8:	c3 50 00 86 	store_16 s6, 20(s3)
   344ec:	c3 58 00 a6 	load_s16 s6, 22(s3)
   344f0:	e6 fc ff 10 	cmpeq_i s7, s6, -1
   344f4:	67 fe ff f5 	bnz s7, -52 <P_UnArchiveWorld+0xd4>
   344f8:	e1 18 00 a6 	load_s16 s7, 6(s1)
   344fc:	c6 50 00 07 	mull_i s6, s6, 20
   34500:	c4 00 53 c0 	add_i s6, s4, s6
   34504:	e7 40 00 0b 	shl s7, s7, 16
   34508:	e6 00 00 88 	store_32 s7, (s6)
   3450c:	e1 20 00 a6 	load_s16 s7, 8(s1)
   34510:	e7 40 00 0b 	shl s7, s7, 16
   34514:	e6 10 00 88 	store_32 s7, 4(s6)
   34518:	e1 28 00 a6 	load_s16 s7, 10(s1)
   3451c:	e6 20 00 86 	store_16 s7, 8(s6)
   34520:	e1 30 00 a6 	load_s16 s7, 12(s1)
   34524:	e6 28 00 86 	store_16 s7, 10(s6)
   34528:	e1 38 00 a6 	load_s16 s7, 14(s1)
   3452c:	21 40 00 05 	add_i s1, s1, 16
   34530:	e6 30 00 86 	store_16 s7, 12(s6)
   34534:	c3 60 00 a6 	load_s16 s6, 24(s3)
   34538:	e6 fc ff 10 	cmpeq_i s7, s6, -1
   3453c:	07 02 00 f4 	bnz s7, 64 <P_UnArchiveWorld+0x190>
   34540:	e1 00 00 a6 	load_s16 s7, (s1)
   34544:	c6 50 00 07 	mull_i s6, s6, 20
   34548:	c4 00 53 c0 	add_i s6, s4, s6
   3454c:	e7 40 00 0b 	shl s7, s7, 16
   34550:	e6 00 00 88 	store_32 s7, (s6)
   34554:	e1 08 00 a6 	load_s16 s7, 2(s1)
   34558:	e7 40 00 0b 	shl s7, s7, 16
   3455c:	e6 10 00 88 	store_32 s7, 4(s6)
   34560:	e1 10 00 a6 	load_s16 s7, 4(s1)
   34564:	e6 20 00 86 	store_16 s7, 8(s6)
   34568:	e1 18 00 a6 	load_s16 s7, 6(s1)
   3456c:	e6 28 00 86 	store_16 s7, 10(s6)
   34570:	e1 20 00 a6 	load_s16 s7, 8(s1)
   34574:	21 28 00 05 	add_i s1, s1, 10
   34578:	e6 30 00 86 	store_16 s7, 12(s6)
   3457c:	c2 00 00 a8 	load_32 s6, (s2)
   34580:	a5 04 00 05 	add_i s5, s5, 1
   34584:	63 00 01 05 	add_i s3, s3, 64
   34588:	c5 00 43 c1 	cmplt_i s6, s5, s6
   3458c:	46 fa ff f5 	bnz s6, -184 <P_UnArchiveWorld+0xe8>
   34590:	20 00 00 88 	store_32 s1, (s0)
   34594:	1f 00 00 f0 	ret

0000000000034598 P_ArchiveThinkers:
   34598:	de 03 ff 05 	add_i sp, sp, -64
   3459c:	1e f3 00 88 	store_32 s24, 60(sp)
   345a0:	3e e3 00 88 	store_32 s25, 56(sp)
   345a4:	5e d3 00 88 	store_32 s26, 52(sp)
   345a8:	7e c3 00 88 	store_32 s27, 48(sp)
   345ac:	fe b3 00 88 	store_32 ra, 44(sp)
   345b0:	1c 04 00 4f 	movehi s0, 60
   345b4:	20 53 02 00 	or s25, s0, 148
   345b8:	19 13 00 a8 	load_32 s24, 4(s25)
   345bc:	18 80 0c c1 	cmpeq_i s0, s24, s25
   345c0:	60 08 00 f4 	bnz s0, 268 <P_ArchiveThinkers+0x134>
   345c4:	19 00 00 4f 	movehi s0, 25
   345c8:	3c 04 00 4f 	movehi s1, 60
   345cc:	45 f8 8a 4f 	movehi s2, 284613
   345d0:	60 50 31 00 	or s3, s0, 3156
   345d4:	01 80 02 00 	or s0, s1, 160
   345d8:	1e a0 00 88 	store_32 s0, 40(sp)
   345dc:	00 04 00 0f 	move s0, 1
   345e0:	1e 80 00 88 	store_32 s0, 32(sp)
   345e4:	14 04 00 4f 	movehi s0, 52
   345e8:	20 00 00 0f 	move s1, 0
   345ec:	3e 70 00 88 	store_32 s1, 28(sp)
   345f0:	20 70 02 0f 	move s1, 156
   345f4:	3e 60 00 88 	store_32 s1, 24(sp)
   345f8:	00 20 5c 00 	or s0, s0, 5896
   345fc:	1e 50 00 88 	store_32 s0, 20(sp)
   34600:	1b d8 b6 4f 	movehi s0, 374491
   34604:	3b 04 00 4f 	movehi s1, 59
   34608:	00 dc 36 00 	or s0, s0, 3511
   3460c:	1e 40 00 88 	store_32 s0, 16(sp)
   34610:	01 40 02 00 	or s0, s1, 144
   34614:	1e 30 00 88 	store_32 s0, 12(sp)
   34618:	02 2c 3e 00 	or s0, s2, 3979
   3461c:	1e 20 00 88 	store_32 s0, 8(sp)
   34620:	7e 90 00 88 	store_32 s3, 36(sp)
   34624:	7e a3 00 a8 	load_32 s27, 40(sp)
   34628:	18 20 00 a8 	load_32 s0, 8(s24)
   3462c:	00 80 11 c1 	cmpne_i s0, s0, s3
   34630:	80 04 00 f4 	bnz s0, 144 <P_ArchiveThinkers+0x128>
   34634:	1b 00 00 a8 	load_32 s0, (s27)
   34638:	20 04 00 05 	add_i s1, s0, 1
   3463c:	3b 00 00 88 	store_32 s1, (s27)
   34640:	3e 80 00 a8 	load_32 s1, 32(sp)
   34644:	20 00 00 82 	store_8 s1, (s0)
   34648:	1b 00 00 a8 	load_32 s0, (s27)
   3464c:	3e 70 00 a8 	load_32 s1, 28(sp)
   34650:	21 00 60 c0 	sub_i s1, s1, s0
   34654:	21 0c 00 01 	and s1, s1, 3
   34658:	40 83 50 c0 	add_i s26, s0, s1
   3465c:	5b 03 00 88 	store_32 s26, (s27)
   34660:	00 00 fd c0 	move s0, s26
   34664:	20 00 fc c0 	move s1, s24
   34668:	5e 60 00 a8 	load_32 s2, 24(sp)
   3466c:	a6 75 00 f8 	call 120472 <memcpy>
   34670:	7e 90 00 a8 	load_32 s3, 36(sp)
   34674:	1b 00 00 a8 	load_32 s0, (s27)
   34678:	00 70 02 05 	add_i s0, s0, 156
   3467c:	1b 00 00 88 	store_32 s0, (s27)
   34680:	1a 90 01 a8 	load_32 s0, 100(s26)
   34684:	3e 50 00 a8 	load_32 s1, 20(sp)
   34688:	00 80 60 c0 	sub_i s0, s0, s1
   3468c:	3e 40 00 a8 	load_32 s1, 16(sp)
   34690:	00 08 00 09 	ashr s0, s0, 2
   34694:	00 80 70 c0 	mull_i s0, s0, s1
   34698:	1a 90 01 88 	store_32 s0, 100(s26)
   3469c:	1a 10 02 a8 	load_32 s0, 132(s26)
   346a0:	00 01 00 f2 	bz s0, 32 <P_ArchiveThinkers+0x128>
   346a4:	3e 30 00 a8 	load_32 s1, 12(sp)
   346a8:	00 80 60 c0 	sub_i s0, s0, s1
   346ac:	3e 20 00 a8 	load_32 s1, 8(sp)
   346b0:	00 0c 00 09 	ashr s0, s0, 3
   346b4:	00 80 70 c0 	mull_i s0, s0, s1
   346b8:	00 04 00 05 	add_i s0, s0, 1
   346bc:	1a 10 02 88 	store_32 s0, 132(s26)
   346c0:	18 13 00 a8 	load_32 s24, 4(s24)
   346c4:	18 80 1c c1 	cmpne_i s0, s24, s25
   346c8:	00 fb ff f5 	bnz s0, -160 <P_ArchiveThinkers+0x90>
   346cc:	1c 04 00 4f 	movehi s0, 60
   346d0:	00 80 02 00 	or s0, s0, 160
   346d4:	20 00 00 a8 	load_32 s1, (s0)
   346d8:	41 04 00 05 	add_i s2, s1, 1
   346dc:	40 00 00 88 	store_32 s2, (s0)
   346e0:	00 00 00 0f 	move s0, 0
   346e4:	01 00 00 82 	store_8 s0, (s1)
   346e8:	fe b3 00 a8 	load_32 ra, 44(sp)
   346ec:	7e c3 00 a8 	load_32 s27, 48(sp)
   346f0:	5e d3 00 a8 	load_32 s26, 52(sp)
   346f4:	3e e3 00 a8 	load_32 s25, 56(sp)
   346f8:	1e f3 00 a8 	load_32 s24, 60(sp)
   346fc:	de 03 01 05 	add_i sp, sp, 64
   34700:	1f 00 00 f0 	ret

0000000000034704 P_UnArchiveThinkers:
   34704:	de 03 fe 05 	add_i sp, sp, -128
   34708:	1e f3 01 88 	store_32 s24, 124(sp)
   3470c:	3e e3 01 88 	store_32 s25, 120(sp)
   34710:	5e d3 01 88 	store_32 s26, 116(sp)
   34714:	7e c3 01 88 	store_32 s27, 112(sp)
   34718:	fe b3 01 88 	store_32 ra, 108(sp)
   3471c:	1c 04 00 4f 	movehi s0, 60
   34720:	00 53 02 00 	or s24, s0, 148
   34724:	18 10 00 a8 	load_32 s0, 4(s24)
   34728:	20 00 0c c1 	cmpeq_i s1, s0, s24
   3472c:	21 02 00 f4 	bnz s1, 68 <P_UnArchiveThinkers+0x6c>
   34730:	39 00 00 4f 	movehi s1, 25
   34734:	21 53 31 00 	or s25, s1, 3156
   34738:	40 13 00 a8 	load_32 s26, 4(s0)
   3473c:	20 20 00 a8 	load_32 s1, 8(s0)
   34740:	21 80 1c c1 	cmpne_i s1, s1, s25
   34744:	41 00 00 f4 	bnz s1, 8 <P_UnArchiveThinkers+0x48>
   34748:	06 00 00 f6 	b 24 <P_UnArchiveThinkers+0x5c>
   3474c:	1a 60 00 f8 	call 98408 <Z_Free>
   34750:	3a 00 1c c1 	cmpne_i s1, s26, s24
   34754:	00 00 fd c0 	move s0, s26
   34758:	01 ff ff f5 	bnz s1, -32 <P_UnArchiveThinkers+0x34>
   3475c:	05 00 00 f6 	b 20 <P_UnArchiveThinkers+0x6c>
   34760:	09 f6 ff f9 	call -10204 <P_RemoveMobj>
   34764:	3a 00 1c c1 	cmpne_i s1, s26, s24
   34768:	00 00 fd c0 	move s0, s26
   3476c:	61 fe ff f5 	bnz s1, -52 <P_UnArchiveThinkers+0x34>
   34770:	e5 fc ff f9 	call -3180 <P_InitThinkers>
   34774:	1c 04 00 4f 	movehi s0, 60
   34778:	38 04 00 4f 	movehi s1, 56
   3477c:	40 c8 00 0f 	move s2, 50
   34780:	5e a0 01 88 	store_32 s2, 104(sp)
   34784:	40 83 02 00 	or s26, s0, 160
   34788:	14 04 00 4f 	movehi s0, 52
   3478c:	00 03 00 0f 	move s24, 0
   34790:	20 73 02 0f 	move s25, 156
   34794:	00 20 5c 00 	or s0, s0, 5896
   34798:	1e 90 01 88 	store_32 s0, 100(sp)
   3479c:	01 30 03 00 	or s0, s1, 204
   347a0:	1e 80 01 88 	store_32 s0, 96(sp)
   347a4:	19 00 00 4f 	movehi s0, 25
   347a8:	3b 04 00 4f 	movehi s1, 59
   347ac:	43 00 00 4f 	movehi s2, 3
   347b0:	00 50 31 00 	or s0, s0, 3156
   347b4:	1e 70 01 88 	store_32 s0, 92(sp)
   347b8:	01 40 02 00 	or s0, s1, 144
   347bc:	1e 50 01 88 	store_32 s0, 84(sp)
   347c0:	02 44 09 00 	or s0, s2, 593
   347c4:	1e 60 01 88 	store_32 s0, 88(sp)
   347c8:	12 00 00 f6 	b 72 <P_UnArchiveThinkers+0x10c>
   347cc:	00 80 fd c0 	move s0, s27
   347d0:	86 d5 ff f9 	call -43496 <P_SetThingPosition>
   347d4:	1b 60 01 a8 	load_32 s0, 88(s27)
   347d8:	3e 80 01 a8 	load_32 s1, 96(sp)
   347dc:	00 70 01 07 	mull_i s0, s0, 92
   347e0:	01 00 50 c0 	add_i s0, s1, s0
   347e4:	1b 70 01 88 	store_32 s0, 92(s27)
   347e8:	1b d0 00 a8 	load_32 s0, 52(s27)
   347ec:	00 00 00 a8 	load_32 s0, (s0)
   347f0:	20 00 00 a8 	load_32 s1, (s0)
   347f4:	3b e0 00 88 	store_32 s1, 56(s27)
   347f8:	00 10 00 a8 	load_32 s0, 4(s0)
   347fc:	1b f0 00 88 	store_32 s0, 60(s27)
   34800:	1e 70 01 a8 	load_32 s0, 92(sp)
   34804:	1b 20 00 88 	store_32 s0, 8(s27)
   34808:	00 80 fd c0 	move s0, s27
   3480c:	c3 fc ff f9 	call -3316 <P_AddThinker>
   34810:	3a 00 00 a8 	load_32 s1, (s26)
   34814:	01 04 00 05 	add_i s0, s1, 1
   34818:	1a 00 00 88 	store_32 s0, (s26)
   3481c:	21 00 00 a0 	load_u8 s1, (s1)
   34820:	41 04 00 10 	cmpeq_i s2, s1, 1
   34824:	02 01 00 f4 	bnz s2, 32 <P_UnArchiveThinkers+0x140>
   34828:	41 00 00 f4 	bnz s1, 8 <P_UnArchiveThinkers+0x12c>
   3482c:	24 00 00 f6 	b 144 <P_UnArchiveThinkers+0x1b8>
   34830:	3e 10 00 88 	store_32 s1, 4(sp)
   34834:	1e 60 01 a8 	load_32 s0, 88(sp)
   34838:	1e 00 00 88 	store_32 s0, (sp)
   3483c:	32 66 ff f9 	call -157496 <I_Error>
   34840:	f4 ff ff f7 	b -48 <P_UnArchiveThinkers+0x10c>
   34844:	38 00 60 c0 	sub_i s1, s24, s0
   34848:	21 0c 00 01 	and s1, s1, 3
   3484c:	00 80 50 c0 	add_i s0, s0, s1
   34850:	1a 00 00 88 	store_32 s0, (s26)
   34854:	00 80 fc c0 	move s0, s25
   34858:	3e a0 01 a8 	load_32 s1, 104(sp)
   3485c:	40 00 fc c0 	move s2, s24
   34860:	1e 60 00 f8 	call 98424 <Z_Malloc>
   34864:	60 03 f0 c0 	move s27, s0
   34868:	3a 00 00 a8 	load_32 s1, (s26)
   3486c:	40 80 fc c0 	move s2, s25
   34870:	25 75 00 f8 	call 119956 <memcpy>
   34874:	1a 00 00 a8 	load_32 s0, (s26)
   34878:	00 70 02 05 	add_i s0, s0, 156
   3487c:	1a 00 00 88 	store_32 s0, (s26)
   34880:	1b 90 01 a8 	load_32 s0, 100(s27)
   34884:	3e 90 01 a8 	load_32 s1, 100(sp)
   34888:	00 70 00 07 	mull_i s0, s0, 28
   3488c:	01 00 50 c0 	add_i s0, s1, s0
   34890:	1b 90 01 88 	store_32 s0, 100(s27)
   34894:	1b e3 01 88 	store_32 s24, 120(s27)
   34898:	1b 10 02 a8 	load_32 s0, 132(s27)
   3489c:	80 f9 ff f3 	bz s0, -208 <P_UnArchiveThinkers+0xc8>
   348a0:	3e 50 01 a8 	load_32 s1, 84(sp)
   348a4:	00 60 04 07 	mull_i s0, s0, 280
   348a8:	01 00 50 c0 	add_i s0, s1, s0
   348ac:	20 a0 fb 05 	add_i s1, s0, -280
   348b0:	3b 10 02 88 	store_32 s1, 132(s27)
   348b4:	60 a3 fb 89 	store_32 s27, -280(s0)
   348b8:	c5 ff ff f7 	b -236 <P_UnArchiveThinkers+0xc8>
   348bc:	fe b3 01 a8 	load_32 ra, 108(sp)
   348c0:	7e c3 01 a8 	load_32 s27, 112(sp)
   348c4:	5e d3 01 a8 	load_32 s26, 116(sp)
   348c8:	3e e3 01 a8 	load_32 s25, 120(sp)
   348cc:	1e f3 01 a8 	load_32 s24, 124(sp)
   348d0:	de 03 02 05 	add_i sp, sp, 128
   348d4:	1f 00 00 f0 	ret

00000000000348d8 P_ArchiveSpecials:
   348d8:	de 03 fe 05 	add_i sp, sp, -128
   348dc:	1e f3 01 88 	store_32 s24, 124(sp)
   348e0:	3e e3 01 88 	store_32 s25, 120(sp)
   348e4:	5e d3 01 88 	store_32 s26, 116(sp)
   348e8:	7e c3 01 88 	store_32 s27, 112(sp)
   348ec:	fe b3 01 88 	store_32 ra, 108(sp)
   348f0:	1c 04 00 4f 	movehi s0, 60
   348f4:	00 50 02 00 	or s0, s0, 148
   348f8:	00 13 00 a8 	load_32 s24, 4(s0)
   348fc:	1e a0 01 88 	store_32 s0, 104(sp)
   34900:	18 00 00 c1 	cmpeq_i s0, s24, s0
   34904:	60 30 00 f4 	bnz s0, 1548 <P_ArchiveSpecials+0x638>
   34908:	1b 04 00 4f 	movehi s0, 59
   3490c:	2f 00 00 4f 	movehi s1, 15
   34910:	5c 04 00 4f 	movehi s2, 60
   34914:	20 93 26 00 	or s25, s0, 2468
   34918:	01 70 7d 00 	or s0, s1, 8028
   3491c:	1e 00 01 88 	store_32 s0, 64(sp)
   34920:	00 00 00 0f 	move s0, 0
   34924:	1e 90 01 88 	store_32 s0, 100(sp)
   34928:	00 c0 00 0f 	move s0, 48
   3492c:	1e d0 00 88 	store_32 s0, 52(sp)
   34930:	1b 04 00 4f 	movehi s0, 59
   34934:	34 2c ba 4f 	movehi s1, 381300
   34938:	42 83 02 00 	or s26, s2, 160
   3493c:	50 00 00 4f 	movehi s2, 16
   34940:	00 80 4b 00 	or s0, s0, 4832
   34944:	1e 80 01 88 	store_32 s0, 96(sp)
   34948:	01 8c 2e 00 	or s0, s1, 2979
   3494c:	1e 70 01 88 	store_32 s0, 92(sp)
   34950:	02 a0 26 00 	or s0, s2, 2472
   34954:	1e f0 00 88 	store_32 s0, 60(sp)
   34958:	12 00 00 4f 	movehi s0, 18
   3495c:	20 04 00 0f 	move s1, 1
   34960:	3e b0 00 88 	store_32 s1, 44(sp)
   34964:	20 a0 00 0f 	move s1, 40
   34968:	3e a0 00 88 	store_32 s1, 40(sp)
   3496c:	00 00 45 00 	or s0, s0, 4416
   34970:	1e e0 00 88 	store_32 s0, 56(sp)
   34974:	15 00 00 4f 	movehi s0, 21
   34978:	20 08 00 0f 	move s1, 2
   3497c:	3e 80 00 88 	store_32 s1, 32(sp)
   34980:	20 b0 00 0f 	move s1, 44
   34984:	3e 70 00 88 	store_32 s1, 28(sp)
   34988:	00 30 43 00 	or s0, s0, 4300
   3498c:	1e c0 00 88 	store_32 s0, 48(sp)
   34990:	13 00 00 4f 	movehi s0, 19
   34994:	20 0c 00 0f 	move s1, 3
   34998:	3e 50 00 88 	store_32 s1, 20(sp)
   3499c:	20 e0 00 0f 	move s1, 56
   349a0:	3e 40 00 88 	store_32 s1, 16(sp)
   349a4:	00 a0 45 00 	or s0, s0, 4456
   349a8:	1e 90 00 88 	store_32 s0, 36(sp)
   349ac:	13 00 00 4f 	movehi s0, 19
   349b0:	20 10 00 0f 	move s1, 4
   349b4:	3e 30 00 88 	store_32 s1, 12(sp)
   349b8:	20 90 00 0f 	move s1, 36
   349bc:	3e 20 00 88 	store_32 s1, 8(sp)
   349c0:	00 f0 49 00 	or s0, s0, 4732
   349c4:	1e 60 00 88 	store_32 s0, 24(sp)
   349c8:	00 14 00 0f 	move s0, 5
   349cc:	1e 10 00 88 	store_32 s0, 4(sp)
   349d0:	18 20 00 a8 	load_32 s0, 8(s24)
   349d4:	40 00 00 f4 	bnz s0, 8 <P_ArchiveSpecials+0x104>
   349d8:	46 00 00 f6 	b 280 <P_ArchiveSpecials+0x218>
   349dc:	3e 00 01 a8 	load_32 s1, 64(sp)
   349e0:	20 80 10 c1 	cmpne_i s1, s0, s1
   349e4:	41 00 00 f4 	bnz s1, 8 <P_ArchiveSpecials+0x114>
   349e8:	ae 00 00 f6 	b 696 <P_ArchiveSpecials+0x3c8>
   349ec:	3e f0 00 a8 	load_32 s1, 60(sp)
   349f0:	20 80 10 c1 	cmpne_i s1, s0, s1
   349f4:	41 00 00 f4 	bnz s1, 8 <P_ArchiveSpecials+0x124>
   349f8:	c9 00 00 f6 	b 804 <P_ArchiveSpecials+0x444>
   349fc:	3e e0 00 a8 	load_32 s1, 56(sp)
   34a00:	20 80 10 c1 	cmpne_i s1, s0, s1
   34a04:	41 00 00 f4 	bnz s1, 8 <P_ArchiveSpecials+0x134>
   34a08:	e4 00 00 f6 	b 912 <P_ArchiveSpecials+0x4c0>
   34a0c:	3e c0 00 a8 	load_32 s1, 48(sp)
   34a10:	20 80 10 c1 	cmpne_i s1, s0, s1
   34a14:	41 00 00 f4 	bnz s1, 8 <P_ArchiveSpecials+0x144>
   34a18:	ff 00 00 f6 	b 1020 <P_ArchiveSpecials+0x53c>
   34a1c:	3e 90 00 a8 	load_32 s1, 36(sp)
   34a20:	20 80 10 c1 	cmpne_i s1, s0, s1
   34a24:	41 00 00 f4 	bnz s1, 8 <P_ArchiveSpecials+0x154>
   34a28:	0d 01 00 f6 	b 1076 <P_ArchiveSpecials+0x584>
   34a2c:	3e 60 00 a8 	load_32 s1, 24(sp)
   34a30:	20 80 10 c1 	cmpne_i s1, s0, s1
   34a34:	41 00 00 f4 	bnz s1, 8 <P_ArchiveSpecials+0x164>
   34a38:	18 01 00 f6 	b 1120 <P_ArchiveSpecials+0x5c0>
   34a3c:	33 00 00 4f 	movehi s1, 19
   34a40:	21 b0 5a 00 	or s1, s1, 5804
   34a44:	00 80 10 c1 	cmpne_i s0, s0, s1
   34a48:	20 12 00 f4 	bnz s0, 580 <P_ArchiveSpecials+0x3b4>
   34a4c:	1a 00 00 a8 	load_32 s0, (s26)
   34a50:	20 04 00 05 	add_i s1, s0, 1
   34a54:	3a 00 00 88 	store_32 s1, (s26)
   34a58:	20 18 00 0f 	move s1, 6
   34a5c:	20 00 00 82 	store_8 s1, (s0)
   34a60:	1a 00 00 a8 	load_32 s0, (s26)
   34a64:	3e 90 01 a8 	load_32 s1, 100(sp)
   34a68:	21 00 60 c0 	sub_i s1, s1, s0
   34a6c:	21 0c 00 01 	and s1, s1, 3
   34a70:	00 80 50 c0 	add_i s0, s0, s1
   34a74:	1a 00 00 88 	store_32 s0, (s26)
   34a78:	38 60 00 a8 	load_32 s1, 24(s24)
   34a7c:	20 60 00 88 	store_32 s1, 24(s0)
   34a80:	38 50 00 a8 	load_32 s1, 20(s24)
   34a84:	20 50 00 88 	store_32 s1, 20(s0)
   34a88:	38 40 00 a8 	load_32 s1, 16(s24)
   34a8c:	20 40 00 88 	store_32 s1, 16(s0)
   34a90:	38 30 00 a8 	load_32 s1, 12(s24)
   34a94:	20 30 00 88 	store_32 s1, 12(s0)
   34a98:	38 20 00 a8 	load_32 s1, 8(s24)
   34a9c:	20 20 00 88 	store_32 s1, 8(s0)
   34aa0:	38 10 00 a8 	load_32 s1, 4(s24)
   34aa4:	20 10 00 88 	store_32 s1, 4(s0)
   34aa8:	38 00 00 a8 	load_32 s1, (s24)
   34aac:	20 00 00 88 	store_32 s1, (s0)
   34ab0:	3a 00 00 a8 	load_32 s1, (s26)
   34ab4:	21 70 00 05 	add_i s1, s1, 28
   34ab8:	3a 00 00 88 	store_32 s1, (s26)
   34abc:	20 30 00 a8 	load_32 s1, 12(s0)
   34ac0:	5e 80 01 a8 	load_32 s2, 96(sp)
   34ac4:	42 00 00 a8 	load_32 s2, (s2)
   34ac8:	21 00 61 c0 	sub_i s1, s1, s2
   34acc:	5e 70 01 a8 	load_32 s2, 92(sp)
   34ad0:	21 0c 00 09 	ashr s1, s1, 3
   34ad4:	21 00 71 c0 	mull_i s1, s1, s2
   34ad8:	20 30 00 88 	store_32 s1, 12(s0)
   34adc:	18 13 00 a8 	load_32 s24, 4(s24)
   34ae0:	1e a0 01 a8 	load_32 s0, 104(sp)
   34ae4:	18 00 10 c1 	cmpne_i s0, s24, s0
   34ae8:	40 f7 ff f5 	bnz s0, -280 <P_ArchiveSpecials+0xf8>
   34aec:	09 01 00 f6 	b 1060 <P_ArchiveSpecials+0x638>
   34af0:	19 00 00 a8 	load_32 s0, (s25)
   34af4:	79 10 00 a8 	load_32 s3, 4(s25)
   34af8:	59 20 00 a8 	load_32 s2, 8(s25)
   34afc:	39 30 00 a8 	load_32 s1, 12(s25)
   34b00:	80 00 0c c1 	cmpeq_i s4, s0, s24
   34b04:	19 40 00 a8 	load_32 s0, 16(s25)
   34b08:	79 53 00 a8 	load_32 s27, 20(s25)
   34b0c:	f9 62 00 a8 	load_32 s23, 24(s25)
   34b10:	d9 72 00 a8 	load_32 s22, 28(s25)
   34b14:	b9 82 00 a8 	load_32 s21, 32(s25)
   34b18:	99 92 00 a8 	load_32 s20, 36(s25)
   34b1c:	79 a2 00 a8 	load_32 s19, 40(s25)
   34b20:	59 b2 00 a8 	load_32 s18, 44(s25)
   34b24:	39 c2 00 a8 	load_32 s17, 48(s25)
   34b28:	19 d2 00 a8 	load_32 s16, 52(s25)
   34b2c:	f9 e1 00 a8 	load_32 s15, 56(s25)
   34b30:	d9 f1 00 a8 	load_32 s14, 60(s25)
   34b34:	b9 01 01 a8 	load_32 s13, 64(s25)
   34b38:	99 11 01 a8 	load_32 s12, 68(s25)
   34b3c:	79 21 01 a8 	load_32 s11, 72(s25)
   34b40:	59 31 01 a8 	load_32 s10, 76(s25)
   34b44:	39 41 01 a8 	load_32 s9, 80(s25)
   34b48:	19 51 01 a8 	load_32 s8, 84(s25)
   34b4c:	f9 60 01 a8 	load_32 s7, 88(s25)
   34b50:	d9 70 01 a8 	load_32 s6, 92(s25)
   34b54:	b9 80 01 a8 	load_32 s5, 96(s25)
   34b58:	be 60 01 88 	store_32 s5, 88(sp)
   34b5c:	b9 90 01 a8 	load_32 s5, 100(s25)
   34b60:	be 50 01 88 	store_32 s5, 84(sp)
   34b64:	b9 a0 01 a8 	load_32 s5, 104(s25)
   34b68:	be 40 01 88 	store_32 s5, 80(sp)
   34b6c:	b9 b0 01 a8 	load_32 s5, 108(s25)
   34b70:	be 30 01 88 	store_32 s5, 76(sp)
   34b74:	b9 c0 01 a8 	load_32 s5, 112(s25)
   34b78:	be 20 01 88 	store_32 s5, 72(sp)
   34b7c:	b9 d0 01 a8 	load_32 s5, 116(s25)
   34b80:	be 10 01 88 	store_32 s5, 68(sp)
   34b84:	a4 0a 00 f4 	bnz s4, 340 <P_ArchiveSpecials+0x400>
   34b88:	63 00 0c c1 	cmpeq_i s3, s3, s24
   34b8c:	63 0a 00 f4 	bnz s3, 332 <P_ArchiveSpecials+0x400>
   34b90:	42 00 0c c1 	cmpeq_i s2, s2, s24
   34b94:	22 0a 00 f4 	bnz s2, 324 <P_ArchiveSpecials+0x400>
   34b98:	21 00 0c c1 	cmpeq_i s1, s1, s24
   34b9c:	e1 09 00 f4 	bnz s1, 316 <P_ArchiveSpecials+0x400>
   34ba0:	00 00 0c c1 	cmpeq_i s0, s0, s24
   34ba4:	a0 09 00 f4 	bnz s0, 308 <P_ArchiveSpecials+0x400>
   34ba8:	1b 00 0c c1 	cmpeq_i s0, s27, s24
   34bac:	60 09 00 f4 	bnz s0, 300 <P_ArchiveSpecials+0x400>
   34bb0:	17 00 0c c1 	cmpeq_i s0, s23, s24
   34bb4:	20 09 00 f4 	bnz s0, 292 <P_ArchiveSpecials+0x400>
   34bb8:	16 00 0c c1 	cmpeq_i s0, s22, s24
   34bbc:	e0 08 00 f4 	bnz s0, 284 <P_ArchiveSpecials+0x400>
   34bc0:	15 00 0c c1 	cmpeq_i s0, s21, s24
   34bc4:	a0 08 00 f4 	bnz s0, 276 <P_ArchiveSpecials+0x400>
   34bc8:	14 00 0c c1 	cmpeq_i s0, s20, s24
   34bcc:	60 08 00 f4 	bnz s0, 268 <P_ArchiveSpecials+0x400>
   34bd0:	13 00 0c c1 	cmpeq_i s0, s19, s24
   34bd4:	20 08 00 f4 	bnz s0, 260 <P_ArchiveSpecials+0x400>
   34bd8:	12 00 0c c1 	cmpeq_i s0, s18, s24
   34bdc:	e0 07 00 f4 	bnz s0, 252 <P_ArchiveSpecials+0x400>
   34be0:	11 00 0c c1 	cmpeq_i s0, s17, s24
   34be4:	a0 07 00 f4 	bnz s0, 244 <P_ArchiveSpecials+0x400>
   34be8:	10 00 0c c1 	cmpeq_i s0, s16, s24
   34bec:	60 07 00 f4 	bnz s0, 236 <P_ArchiveSpecials+0x400>
   34bf0:	0f 00 0c c1 	cmpeq_i s0, s15, s24
   34bf4:	20 07 00 f4 	bnz s0, 228 <P_ArchiveSpecials+0x400>
   34bf8:	0e 00 0c c1 	cmpeq_i s0, s14, s24
   34bfc:	e0 06 00 f4 	bnz s0, 220 <P_ArchiveSpecials+0x400>
   34c00:	0d 00 0c c1 	cmpeq_i s0, s13, s24
   34c04:	a0 06 00 f4 	bnz s0, 212 <P_ArchiveSpecials+0x400>
   34c08:	0c 00 0c c1 	cmpeq_i s0, s12, s24
   34c0c:	60 06 00 f4 	bnz s0, 204 <P_ArchiveSpecials+0x400>
   34c10:	0b 00 0c c1 	cmpeq_i s0, s11, s24
   34c14:	20 06 00 f4 	bnz s0, 196 <P_ArchiveSpecials+0x400>
   34c18:	0a 00 0c c1 	cmpeq_i s0, s10, s24
   34c1c:	e0 05 00 f4 	bnz s0, 188 <P_ArchiveSpecials+0x400>
   34c20:	09 00 0c c1 	cmpeq_i s0, s9, s24
   34c24:	a0 05 00 f4 	bnz s0, 180 <P_ArchiveSpecials+0x400>
   34c28:	08 00 0c c1 	cmpeq_i s0, s8, s24
   34c2c:	60 05 00 f4 	bnz s0, 172 <P_ArchiveSpecials+0x400>
   34c30:	07 00 0c c1 	cmpeq_i s0, s7, s24
   34c34:	20 05 00 f4 	bnz s0, 164 <P_ArchiveSpecials+0x400>
   34c38:	06 00 0c c1 	cmpeq_i s0, s6, s24
   34c3c:	e0 04 00 f4 	bnz s0, 156 <P_ArchiveSpecials+0x400>
   34c40:	1e 60 01 a8 	load_32 s0, 88(sp)
   34c44:	00 00 0c c1 	cmpeq_i s0, s0, s24
   34c48:	80 04 00 f4 	bnz s0, 144 <P_ArchiveSpecials+0x400>
   34c4c:	1e 50 01 a8 	load_32 s0, 84(sp)
   34c50:	00 00 0c c1 	cmpeq_i s0, s0, s24
   34c54:	20 04 00 f4 	bnz s0, 132 <P_ArchiveSpecials+0x400>
   34c58:	1e 40 01 a8 	load_32 s0, 80(sp)
   34c5c:	00 00 0c c1 	cmpeq_i s0, s0, s24
   34c60:	c0 03 00 f4 	bnz s0, 120 <P_ArchiveSpecials+0x400>
   34c64:	1e 30 01 a8 	load_32 s0, 76(sp)
   34c68:	00 00 0c c1 	cmpeq_i s0, s0, s24
   34c6c:	60 03 00 f4 	bnz s0, 108 <P_ArchiveSpecials+0x400>
   34c70:	1e 20 01 a8 	load_32 s0, 72(sp)
   34c74:	00 00 0c c1 	cmpeq_i s0, s0, s24
   34c78:	00 03 00 f4 	bnz s0, 96 <P_ArchiveSpecials+0x400>
   34c7c:	1e 10 01 a8 	load_32 s0, 68(sp)
   34c80:	00 00 1c c1 	cmpne_i s0, s0, s24
   34c84:	40 00 00 f4 	bnz s0, 8 <P_ArchiveSpecials+0x3b4>
   34c88:	14 00 00 f6 	b 80 <P_ArchiveSpecials+0x400>
   34c8c:	18 13 00 a8 	load_32 s24, 4(s24)
   34c90:	1e a0 01 a8 	load_32 s0, 104(sp)
   34c94:	18 00 10 c1 	cmpne_i s0, s24, s0
   34c98:	c0 e9 ff f5 	bnz s0, -712 <P_ArchiveSpecials+0xf8>
   34c9c:	9d 00 00 f6 	b 628 <P_ArchiveSpecials+0x638>
   34ca0:	1a 00 00 a8 	load_32 s0, (s26)
   34ca4:	20 04 00 05 	add_i s1, s0, 1
   34ca8:	3a 00 00 88 	store_32 s1, (s26)
   34cac:	3e 90 01 a8 	load_32 s1, 100(sp)
   34cb0:	20 00 00 82 	store_8 s1, (s0)
   34cb4:	1a 00 00 a8 	load_32 s0, (s26)
   34cb8:	21 00 60 c0 	sub_i s1, s1, s0
   34cbc:	21 0c 00 01 	and s1, s1, 3
   34cc0:	60 83 50 c0 	add_i s27, s0, s1
   34cc4:	7a 03 00 88 	store_32 s27, (s26)
   34cc8:	00 80 fd c0 	move s0, s27
   34ccc:	20 00 fc c0 	move s1, s24
   34cd0:	5e d0 00 a8 	load_32 s2, 52(sp)
   34cd4:	0e 00 00 f6 	b 56 <P_ArchiveSpecials+0x434>
   34cd8:	1a 00 00 a8 	load_32 s0, (s26)
   34cdc:	40 c0 00 0f 	move s2, 48
   34ce0:	20 04 00 05 	add_i s1, s0, 1
   34ce4:	3a 00 00 88 	store_32 s1, (s26)
   34ce8:	3e 90 01 a8 	load_32 s1, 100(sp)
   34cec:	20 00 00 82 	store_8 s1, (s0)
   34cf0:	1a 00 00 a8 	load_32 s0, (s26)
   34cf4:	21 00 60 c0 	sub_i s1, s1, s0
   34cf8:	21 0c 00 01 	and s1, s1, 3
   34cfc:	60 83 50 c0 	add_i s27, s0, s1
   34d00:	7a 03 00 88 	store_32 s27, (s26)
   34d04:	00 80 fd c0 	move s0, s27
   34d08:	20 00 fc c0 	move s1, s24
   34d0c:	fe 73 00 f8 	call 118776 <memcpy>
   34d10:	1a 00 00 a8 	load_32 s0, (s26)
   34d14:	00 c0 00 05 	add_i s0, s0, 48
   34d18:	12 00 00 f6 	b 72 <P_ArchiveSpecials+0x488>
   34d1c:	1a 00 00 a8 	load_32 s0, (s26)
   34d20:	20 04 00 05 	add_i s1, s0, 1
   34d24:	3a 00 00 88 	store_32 s1, (s26)
   34d28:	3e b0 00 a8 	load_32 s1, 44(sp)
   34d2c:	20 00 00 82 	store_8 s1, (s0)
   34d30:	1a 00 00 a8 	load_32 s0, (s26)
   34d34:	3e 90 01 a8 	load_32 s1, 100(sp)
   34d38:	21 00 60 c0 	sub_i s1, s1, s0
   34d3c:	21 0c 00 01 	and s1, s1, 3
   34d40:	60 83 50 c0 	add_i s27, s0, s1
   34d44:	7a 03 00 88 	store_32 s27, (s26)
   34d48:	00 80 fd c0 	move s0, s27
   34d4c:	20 00 fc c0 	move s1, s24
   34d50:	5e a0 00 a8 	load_32 s2, 40(sp)
   34d54:	ec 73 00 f8 	call 118704 <memcpy>
   34d58:	1a 00 00 a8 	load_32 s0, (s26)
   34d5c:	00 a0 00 05 	add_i s0, s0, 40
   34d60:	1a 00 00 88 	store_32 s0, (s26)
   34d64:	1b 40 00 a8 	load_32 s0, 16(s27)
   34d68:	3e 80 01 a8 	load_32 s1, 96(sp)
   34d6c:	21 00 00 a8 	load_32 s1, (s1)
   34d70:	00 80 60 c0 	sub_i s0, s0, s1
   34d74:	3e 70 01 a8 	load_32 s1, 92(sp)
   34d78:	00 0c 00 09 	ashr s0, s0, 3
   34d7c:	00 80 70 c0 	mull_i s0, s0, s1
   34d80:	1b 40 00 88 	store_32 s0, 16(s27)
   34d84:	18 13 00 a8 	load_32 s24, 4(s24)
   34d88:	1e a0 01 a8 	load_32 s0, 104(sp)
   34d8c:	18 00 10 c1 	cmpne_i s0, s24, s0
   34d90:	00 e2 ff f5 	bnz s0, -960 <P_ArchiveSpecials+0xf8>
   34d94:	5f 00 00 f6 	b 380 <P_ArchiveSpecials+0x638>
   34d98:	1a 00 00 a8 	load_32 s0, (s26)
   34d9c:	20 04 00 05 	add_i s1, s0, 1
   34da0:	3a 00 00 88 	store_32 s1, (s26)
   34da4:	3e 80 00 a8 	load_32 s1, 32(sp)
   34da8:	20 00 00 82 	store_8 s1, (s0)
   34dac:	1a 00 00 a8 	load_32 s0, (s26)
   34db0:	3e 90 01 a8 	load_32 s1, 100(sp)
   34db4:	21 00 60 c0 	sub_i s1, s1, s0
   34db8:	21 0c 00 01 	and s1, s1, 3
   34dbc:	60 83 50 c0 	add_i s27, s0, s1
   34dc0:	7a 03 00 88 	store_32 s27, (s26)
   34dc4:	00 80 fd c0 	move s0, s27
   34dc8:	20 00 fc c0 	move s1, s24
   34dcc:	5e 70 00 a8 	load_32 s2, 28(sp)
   34dd0:	cd 73 00 f8 	call 118580 <memcpy>
   34dd4:	1a 00 00 a8 	load_32 s0, (s26)
   34dd8:	00 b0 00 05 	add_i s0, s0, 44
   34ddc:	1a 00 00 88 	store_32 s0, (s26)
   34de0:	1b 50 00 a8 	load_32 s0, 20(s27)
   34de4:	3e 80 01 a8 	load_32 s1, 96(sp)
   34de8:	21 00 00 a8 	load_32 s1, (s1)
   34dec:	00 80 60 c0 	sub_i s0, s0, s1
   34df0:	3e 70 01 a8 	load_32 s1, 92(sp)
   34df4:	00 0c 00 09 	ashr s0, s0, 3
   34df8:	00 80 70 c0 	mull_i s0, s0, s1
   34dfc:	1b 50 00 88 	store_32 s0, 20(s27)
   34e00:	18 13 00 a8 	load_32 s24, 4(s24)
   34e04:	1e a0 01 a8 	load_32 s0, 104(sp)
   34e08:	18 00 10 c1 	cmpne_i s0, s24, s0
   34e0c:	20 de ff f5 	bnz s0, -1084 <P_ArchiveSpecials+0xf8>
   34e10:	40 00 00 f6 	b 256 <P_ArchiveSpecials+0x638>
   34e14:	1a 00 00 a8 	load_32 s0, (s26)
   34e18:	20 04 00 05 	add_i s1, s0, 1
   34e1c:	3a 00 00 88 	store_32 s1, (s26)
   34e20:	3e 50 00 a8 	load_32 s1, 20(sp)
   34e24:	20 00 00 82 	store_8 s1, (s0)
   34e28:	1a 00 00 a8 	load_32 s0, (s26)
   34e2c:	3e 90 01 a8 	load_32 s1, 100(sp)
   34e30:	21 00 60 c0 	sub_i s1, s1, s0
   34e34:	21 0c 00 01 	and s1, s1, 3
   34e38:	60 83 50 c0 	add_i s27, s0, s1
   34e3c:	7a 03 00 88 	store_32 s27, (s26)
   34e40:	00 80 fd c0 	move s0, s27
   34e44:	20 00 fc c0 	move s1, s24
   34e48:	5e 40 00 a8 	load_32 s2, 16(sp)
   34e4c:	ae 73 00 f8 	call 118456 <memcpy>
   34e50:	1a 00 00 a8 	load_32 s0, (s26)
   34e54:	00 e0 00 05 	add_i s0, s0, 56
   34e58:	21 00 00 f6 	b 132 <P_ArchiveSpecials+0x604>
   34e5c:	1a 00 00 a8 	load_32 s0, (s26)
   34e60:	20 04 00 05 	add_i s1, s0, 1
   34e64:	3a 00 00 88 	store_32 s1, (s26)
   34e68:	3e 30 00 a8 	load_32 s1, 12(sp)
   34e6c:	20 00 00 82 	store_8 s1, (s0)
   34e70:	1a 00 00 a8 	load_32 s0, (s26)
   34e74:	3e 90 01 a8 	load_32 s1, 100(sp)
   34e78:	21 00 60 c0 	sub_i s1, s1, s0
   34e7c:	21 0c 00 01 	and s1, s1, 3
   34e80:	60 83 50 c0 	add_i s27, s0, s1
   34e84:	7a 03 00 88 	store_32 s27, (s26)
   34e88:	00 80 fd c0 	move s0, s27
   34e8c:	20 00 fc c0 	move s1, s24
   34e90:	5e 20 00 a8 	load_32 s2, 8(sp)
   34e94:	0f 00 00 f6 	b 60 <P_ArchiveSpecials+0x5f8>
   34e98:	1a 00 00 a8 	load_32 s0, (s26)
   34e9c:	40 90 00 0f 	move s2, 36
   34ea0:	20 04 00 05 	add_i s1, s0, 1
   34ea4:	3a 00 00 88 	store_32 s1, (s26)
   34ea8:	3e 10 00 a8 	load_32 s1, 4(sp)
   34eac:	20 00 00 82 	store_8 s1, (s0)
   34eb0:	1a 00 00 a8 	load_32 s0, (s26)
   34eb4:	3e 90 01 a8 	load_32 s1, 100(sp)
   34eb8:	21 00 60 c0 	sub_i s1, s1, s0
   34ebc:	21 0c 00 01 	and s1, s1, 3
   34ec0:	60 83 50 c0 	add_i s27, s0, s1
   34ec4:	7a 03 00 88 	store_32 s27, (s26)
   34ec8:	00 80 fd c0 	move s0, s27
   34ecc:	20 00 fc c0 	move s1, s24
   34ed0:	8d 73 00 f8 	call 118324 <memcpy>
   34ed4:	1a 00 00 a8 	load_32 s0, (s26)
   34ed8:	00 90 00 05 	add_i s0, s0, 36
   34edc:	1a 00 00 88 	store_32 s0, (s26)
   34ee0:	1b 30 00 a8 	load_32 s0, 12(s27)
   34ee4:	3e 80 01 a8 	load_32 s1, 96(sp)
   34ee8:	21 00 00 a8 	load_32 s1, (s1)
   34eec:	00 80 60 c0 	sub_i s0, s0, s1
   34ef0:	3e 70 01 a8 	load_32 s1, 92(sp)
   34ef4:	00 0c 00 09 	ashr s0, s0, 3
   34ef8:	00 80 70 c0 	mull_i s0, s0, s1
   34efc:	1b 30 00 88 	store_32 s0, 12(s27)
   34f00:	18 13 00 a8 	load_32 s24, 4(s24)
   34f04:	1e a0 01 a8 	load_32 s0, 104(sp)
   34f08:	18 00 10 c1 	cmpne_i s0, s24, s0
   34f0c:	20 d6 ff f5 	bnz s0, -1340 <P_ArchiveSpecials+0xf8>
   34f10:	1c 04 00 4f 	movehi s0, 60
   34f14:	00 80 02 00 	or s0, s0, 160
   34f18:	20 00 00 a8 	load_32 s1, (s0)
   34f1c:	41 04 00 05 	add_i s2, s1, 1
   34f20:	40 00 00 88 	store_32 s2, (s0)
   34f24:	00 1c 00 0f 	move s0, 7
   34f28:	01 00 00 82 	store_8 s0, (s1)
   34f2c:	fe b3 01 a8 	load_32 ra, 108(sp)
   34f30:	7e c3 01 a8 	load_32 s27, 112(sp)
   34f34:	5e d3 01 a8 	load_32 s26, 116(sp)
   34f38:	3e e3 01 a8 	load_32 s25, 120(sp)
   34f3c:	1e f3 01 a8 	load_32 s24, 124(sp)
   34f40:	de 03 02 05 	add_i sp, sp, 128
   34f44:	1f 00 00 f0 	ret

0000000000034f48 P_UnArchiveSpecials:
   34f48:	de 03 fd 05 	add_i sp, sp, -192
   34f4c:	1e f3 02 88 	store_32 s24, 188(sp)
   34f50:	3e e3 02 88 	store_32 s25, 184(sp)
   34f54:	5e d3 02 88 	store_32 s26, 180(sp)
   34f58:	7e c3 02 88 	store_32 s27, 176(sp)
   34f5c:	fe b3 02 88 	store_32 ra, 172(sp)
   34f60:	1c 04 00 4f 	movehi s0, 60
   34f64:	21 00 00 4f 	movehi s1, 1
   34f68:	43 00 00 4f 	movehi s2, 3
   34f6c:	20 83 02 00 	or s25, s0, 160
   34f70:	01 9c 23 00 	or s0, s1, 2279
   34f74:	1e 60 02 88 	store_32 s0, 152(sp)
   34f78:	02 30 58 00 	or s0, s2, 5644
   34f7c:	1e a0 02 88 	store_32 s0, 168(sp)
   34f80:	00 c0 00 0f 	move s0, 48
   34f84:	1e 50 02 88 	store_32 s0, 148(sp)
   34f88:	1b 04 00 4f 	movehi s0, 59
   34f8c:	20 c8 00 0f 	move s1, 50
   34f90:	3e 90 02 88 	store_32 s1, 164(sp)
   34f94:	2f 00 00 4f 	movehi s1, 15
   34f98:	00 80 4b 00 	or s0, s0, 4832
   34f9c:	1e 80 02 88 	store_32 s0, 160(sp)
   34fa0:	10 00 00 4f 	movehi s0, 16
   34fa4:	21 70 7d 00 	or s1, s1, 8028
   34fa8:	3e b0 01 88 	store_32 s1, 108(sp)
   34fac:	20 a0 00 0f 	move s1, 40
   34fb0:	3e 40 02 88 	store_32 s1, 144(sp)
   34fb4:	00 a0 26 00 	or s0, s0, 2472
   34fb8:	1e 30 02 88 	store_32 s0, 140(sp)
   34fbc:	12 00 00 4f 	movehi s0, 18
   34fc0:	20 b0 00 0f 	move s1, 44
   34fc4:	3e 20 02 88 	store_32 s1, 136(sp)
   34fc8:	35 00 00 4f 	movehi s1, 21
   34fcc:	00 00 45 00 	or s0, s0, 4416
   34fd0:	1e 10 02 88 	store_32 s0, 132(sp)
   34fd4:	00 e0 00 0f 	move s0, 56
   34fd8:	1e 00 02 88 	store_32 s0, 128(sp)
   34fdc:	01 30 43 00 	or s0, s1, 4300
   34fe0:	1e a0 01 88 	store_32 s0, 104(sp)
   34fe4:	13 00 00 4f 	movehi s0, 19
   34fe8:	20 90 00 0f 	move s1, 36
   34fec:	3e 70 02 88 	store_32 s1, 156(sp)
   34ff0:	33 00 00 4f 	movehi s1, 19
   34ff4:	00 a0 45 00 	or s0, s0, 4456
   34ff8:	1e f0 01 88 	store_32 s0, 124(sp)
   34ffc:	13 00 00 4f 	movehi s0, 19
   35000:	00 03 00 0f 	move s24, 0
   35004:	21 f0 49 00 	or s1, s1, 4732
   35008:	3e e0 01 88 	store_32 s1, 120(sp)
   3500c:	20 70 00 0f 	move s1, 28
   35010:	3e d0 01 88 	store_32 s1, 116(sp)
   35014:	00 b0 5a 00 	or s0, s0, 5804
   35018:	1e c0 01 88 	store_32 s0, 112(sp)
   3501c:	04 00 00 f6 	b 16 <P_UnArchiveSpecials+0xe4>
   35020:	1b 20 00 88 	store_32 s0, 8(s27)
   35024:	00 80 fd c0 	move s0, s27
   35028:	bc fa ff f9 	call -5392 <P_AddThinker>
   3502c:	39 00 00 a8 	load_32 s1, (s25)
   35030:	01 04 00 05 	add_i s0, s1, 1
   35034:	19 00 00 88 	store_32 s0, (s25)
   35038:	21 00 00 a0 	load_u8 s1, (s1)
   3503c:	41 1c 00 16 	cmpgt_u s2, s1, 7
   35040:	c2 04 00 f4 	bnz s2, 152 <P_UnArchiveSpecials+0x190>
   35044:	5e a0 02 a8 	load_32 s2, 168(sp)
   35048:	21 08 00 0b 	shl s1, s1, 2
   3504c:	21 00 51 c0 	add_i s1, s1, s2
   35050:	21 00 00 a8 	load_32 s1, (s1)
   35054:	01 00 00 f0 	b s1
   35058:	38 00 60 c0 	sub_i s1, s24, s0
   3505c:	21 0c 00 01 	and s1, s1, 3
   35060:	00 80 50 c0 	add_i s0, s0, s1
   35064:	19 00 00 88 	store_32 s0, (s25)
   35068:	5e 53 02 a8 	load_32 s26, 148(sp)
   3506c:	00 00 fd c0 	move s0, s26
   35070:	3e 90 02 a8 	load_32 s1, 164(sp)
   35074:	40 00 fc c0 	move s2, s24
   35078:	18 5e 00 f8 	call 96352 <Z_Malloc>
   3507c:	60 03 f0 c0 	move s27, s0
   35080:	39 00 00 a8 	load_32 s1, (s25)
   35084:	40 00 fd c0 	move s2, s26
   35088:	1f 73 00 f8 	call 117884 <memcpy>
   3508c:	19 00 00 a8 	load_32 s0, (s25)
   35090:	00 c0 00 05 	add_i s0, s0, 48
   35094:	19 00 00 88 	store_32 s0, (s25)
   35098:	1e 80 02 a8 	load_32 s0, 160(sp)
   3509c:	00 00 00 a8 	load_32 s0, (s0)
   350a0:	3b 40 00 a8 	load_32 s1, 16(s27)
   350a4:	21 60 01 07 	mull_i s1, s1, 88
   350a8:	00 80 50 c0 	add_i s0, s0, s1
   350ac:	1b 40 00 88 	store_32 s0, 16(s27)
   350b0:	60 33 01 88 	store_32 s27, 76(s0)
   350b4:	1b 20 00 a8 	load_32 s0, 8(s27)
   350b8:	60 00 00 f2 	bz s0, 12 <P_UnArchiveSpecials+0x17c>
   350bc:	1e b0 01 a8 	load_32 s0, 108(sp)
   350c0:	1b 20 00 88 	store_32 s0, 8(s27)
   350c4:	00 80 fd c0 	move s0, s27
   350c8:	94 fa ff f9 	call -5552 <P_AddThinker>
   350cc:	00 80 fd c0 	move s0, s27
   350d0:	a0 ad ff f9 	call -84352 <P_AddActiveCeiling>
   350d4:	d6 ff ff f7 	b -168 <P_UnArchiveSpecials+0xe4>
   350d8:	3e 10 00 88 	store_32 s1, 4(sp)
   350dc:	1e 60 02 a8 	load_32 s0, 152(sp)
   350e0:	1e 00 00 88 	store_32 s0, (sp)
   350e4:	08 64 ff f9 	call -159712 <I_Error>
   350e8:	d1 ff ff f7 	b -188 <P_UnArchiveSpecials+0xe4>
   350ec:	38 00 60 c0 	sub_i s1, s24, s0
   350f0:	21 0c 00 01 	and s1, s1, 3
   350f4:	00 80 50 c0 	add_i s0, s0, s1
   350f8:	19 00 00 88 	store_32 s0, (s25)
   350fc:	5e 43 02 a8 	load_32 s26, 144(sp)
   35100:	00 00 fd c0 	move s0, s26
   35104:	3e 90 02 a8 	load_32 s1, 164(sp)
   35108:	40 00 fc c0 	move s2, s24
   3510c:	f3 5d 00 f8 	call 96204 <Z_Malloc>
   35110:	60 03 f0 c0 	move s27, s0
   35114:	39 00 00 a8 	load_32 s1, (s25)
   35118:	40 00 fd c0 	move s2, s26
   3511c:	fa 72 00 f8 	call 117736 <memcpy>
   35120:	19 00 00 a8 	load_32 s0, (s25)
   35124:	00 a0 00 05 	add_i s0, s0, 40
   35128:	19 00 00 88 	store_32 s0, (s25)
   3512c:	1e 80 02 a8 	load_32 s0, 160(sp)
   35130:	00 00 00 a8 	load_32 s0, (s0)
   35134:	3b 40 00 a8 	load_32 s1, 16(s27)
   35138:	21 60 01 07 	mull_i s1, s1, 88
   3513c:	00 80 50 c0 	add_i s0, s0, s1
   35140:	1b 40 00 88 	store_32 s0, 16(s27)
   35144:	60 33 01 88 	store_32 s27, 76(s0)
   35148:	1e 30 02 a8 	load_32 s0, 140(sp)
   3514c:	b5 ff ff f7 	b -300 <P_UnArchiveSpecials+0xd8>
   35150:	38 00 60 c0 	sub_i s1, s24, s0
   35154:	21 0c 00 01 	and s1, s1, 3
   35158:	00 80 50 c0 	add_i s0, s0, s1
   3515c:	19 00 00 88 	store_32 s0, (s25)
   35160:	5e 23 02 a8 	load_32 s26, 136(sp)
   35164:	00 00 fd c0 	move s0, s26
   35168:	3e 90 02 a8 	load_32 s1, 164(sp)
   3516c:	40 00 fc c0 	move s2, s24
   35170:	da 5d 00 f8 	call 96104 <Z_Malloc>
   35174:	60 03 f0 c0 	move s27, s0
   35178:	39 00 00 a8 	load_32 s1, (s25)
   3517c:	40 00 fd c0 	move s2, s26
   35180:	e1 72 00 f8 	call 117636 <memcpy>
   35184:	19 00 00 a8 	load_32 s0, (s25)
   35188:	00 b0 00 05 	add_i s0, s0, 44
   3518c:	19 00 00 88 	store_32 s0, (s25)
   35190:	1e 80 02 a8 	load_32 s0, 160(sp)
   35194:	00 00 00 a8 	load_32 s0, (s0)
   35198:	3b 50 00 a8 	load_32 s1, 20(s27)
   3519c:	21 60 01 07 	mull_i s1, s1, 88
   351a0:	00 80 50 c0 	add_i s0, s0, s1
   351a4:	1b 50 00 88 	store_32 s0, 20(s27)
   351a8:	60 33 01 88 	store_32 s27, 76(s0)
   351ac:	1e 10 02 a8 	load_32 s0, 132(sp)
   351b0:	9c ff ff f7 	b -400 <P_UnArchiveSpecials+0xd8>
   351b4:	38 00 60 c0 	sub_i s1, s24, s0
   351b8:	21 0c 00 01 	and s1, s1, 3
   351bc:	00 80 50 c0 	add_i s0, s0, s1
   351c0:	19 00 00 88 	store_32 s0, (s25)
   351c4:	5e 03 02 a8 	load_32 s26, 128(sp)
   351c8:	00 00 fd c0 	move s0, s26
   351cc:	3e 90 02 a8 	load_32 s1, 164(sp)
   351d0:	40 00 fc c0 	move s2, s24
   351d4:	c1 5d 00 f8 	call 96004 <Z_Malloc>
   351d8:	60 03 f0 c0 	move s27, s0
   351dc:	39 00 00 a8 	load_32 s1, (s25)
   351e0:	40 00 fd c0 	move s2, s26
   351e4:	c8 72 00 f8 	call 117536 <memcpy>
   351e8:	19 00 00 a8 	load_32 s0, (s25)
   351ec:	00 e0 00 05 	add_i s0, s0, 56
   351f0:	19 00 00 88 	store_32 s0, (s25)
   351f4:	1e 80 02 a8 	load_32 s0, 160(sp)
   351f8:	00 00 00 a8 	load_32 s0, (s0)
   351fc:	3b 30 00 a8 	load_32 s1, 12(s27)
   35200:	21 60 01 07 	mull_i s1, s1, 88
   35204:	00 80 50 c0 	add_i s0, s0, s1
   35208:	1b 30 00 88 	store_32 s0, 12(s27)
   3520c:	60 33 01 88 	store_32 s27, 76(s0)
   35210:	1b 20 00 a8 	load_32 s0, 8(s27)
   35214:	60 00 00 f2 	bz s0, 12 <P_UnArchiveSpecials+0x2d8>
   35218:	1e a0 01 a8 	load_32 s0, 104(sp)
   3521c:	1b 20 00 88 	store_32 s0, 8(s27)
   35220:	00 80 fd c0 	move s0, s27
   35224:	3d fa ff f9 	call -5900 <P_AddThinker>
   35228:	00 80 fd c0 	move s0, s27
   3522c:	a5 d9 ff f9 	call -39276 <P_AddActivePlat>
   35230:	7f ff ff f7 	b -516 <P_UnArchiveSpecials+0xe4>
   35234:	38 00 60 c0 	sub_i s1, s24, s0
   35238:	21 0c 00 01 	and s1, s1, 3
   3523c:	00 80 50 c0 	add_i s0, s0, s1
   35240:	19 00 00 88 	store_32 s0, (s25)
   35244:	5e 73 02 a8 	load_32 s26, 156(sp)
   35248:	00 00 fd c0 	move s0, s26
   3524c:	3e 90 02 a8 	load_32 s1, 164(sp)
   35250:	40 00 fc c0 	move s2, s24
   35254:	a1 5d 00 f8 	call 95876 <Z_Malloc>
   35258:	60 03 f0 c0 	move s27, s0
   3525c:	39 00 00 a8 	load_32 s1, (s25)
   35260:	40 00 fd c0 	move s2, s26
   35264:	a8 72 00 f8 	call 117408 <memcpy>
   35268:	19 00 00 a8 	load_32 s0, (s25)
   3526c:	00 90 00 05 	add_i s0, s0, 36
   35270:	19 00 00 88 	store_32 s0, (s25)
   35274:	1e 80 02 a8 	load_32 s0, 160(sp)
   35278:	00 00 00 a8 	load_32 s0, (s0)
   3527c:	3b 30 00 a8 	load_32 s1, 12(s27)
   35280:	21 60 01 07 	mull_i s1, s1, 88
   35284:	00 80 50 c0 	add_i s0, s0, s1
   35288:	1b 30 00 88 	store_32 s0, 12(s27)
   3528c:	1e f0 01 a8 	load_32 s0, 124(sp)
   35290:	64 ff ff f7 	b -624 <P_UnArchiveSpecials+0xd8>
   35294:	38 00 60 c0 	sub_i s1, s24, s0
   35298:	21 0c 00 01 	and s1, s1, 3
   3529c:	00 80 50 c0 	add_i s0, s0, s1
   352a0:	19 00 00 88 	store_32 s0, (s25)
   352a4:	5e 73 02 a8 	load_32 s26, 156(sp)
   352a8:	00 00 fd c0 	move s0, s26
   352ac:	3e 90 02 a8 	load_32 s1, 164(sp)
   352b0:	40 00 fc c0 	move s2, s24
   352b4:	89 5d 00 f8 	call 95780 <Z_Malloc>
   352b8:	60 03 f0 c0 	move s27, s0
   352bc:	39 00 00 a8 	load_32 s1, (s25)
   352c0:	40 00 fd c0 	move s2, s26
   352c4:	90 72 00 f8 	call 117312 <memcpy>
   352c8:	19 00 00 a8 	load_32 s0, (s25)
   352cc:	00 90 00 05 	add_i s0, s0, 36
   352d0:	19 00 00 88 	store_32 s0, (s25)
   352d4:	1e 80 02 a8 	load_32 s0, 160(sp)
   352d8:	00 00 00 a8 	load_32 s0, (s0)
   352dc:	3b 30 00 a8 	load_32 s1, 12(s27)
   352e0:	21 60 01 07 	mull_i s1, s1, 88
   352e4:	00 80 50 c0 	add_i s0, s0, s1
   352e8:	1b 30 00 88 	store_32 s0, 12(s27)
   352ec:	1e e0 01 a8 	load_32 s0, 120(sp)
   352f0:	4c ff ff f7 	b -720 <P_UnArchiveSpecials+0xd8>
   352f4:	38 00 60 c0 	sub_i s1, s24, s0
   352f8:	21 0c 00 01 	and s1, s1, 3
   352fc:	00 80 50 c0 	add_i s0, s0, s1
   35300:	19 00 00 88 	store_32 s0, (s25)
   35304:	5e d3 01 a8 	load_32 s26, 116(sp)
   35308:	00 00 fd c0 	move s0, s26
   3530c:	3e 90 02 a8 	load_32 s1, 164(sp)
   35310:	40 00 fc c0 	move s2, s24
   35314:	71 5d 00 f8 	call 95684 <Z_Malloc>
   35318:	60 03 f0 c0 	move s27, s0
   3531c:	39 00 00 a8 	load_32 s1, (s25)
   35320:	40 00 fd c0 	move s2, s26
   35324:	78 72 00 f8 	call 117216 <memcpy>
   35328:	19 00 00 a8 	load_32 s0, (s25)
   3532c:	00 70 00 05 	add_i s0, s0, 28
   35330:	19 00 00 88 	store_32 s0, (s25)
   35334:	1e 80 02 a8 	load_32 s0, 160(sp)
   35338:	00 00 00 a8 	load_32 s0, (s0)
   3533c:	3b 30 00 a8 	load_32 s1, 12(s27)
   35340:	21 60 01 07 	mull_i s1, s1, 88
   35344:	00 80 50 c0 	add_i s0, s0, s1
   35348:	1b 30 00 88 	store_32 s0, 12(s27)
   3534c:	1e c0 01 a8 	load_32 s0, 112(sp)
   35350:	34 ff ff f7 	b -816 <P_UnArchiveSpecials+0xd8>
   35354:	fe b3 02 a8 	load_32 ra, 172(sp)
   35358:	7e c3 02 a8 	load_32 s27, 176(sp)
   3535c:	5e d3 02 a8 	load_32 s26, 180(sp)
   35360:	3e e3 02 a8 	load_32 s25, 184(sp)
   35364:	1e f3 02 a8 	load_32 s24, 188(sp)
   35368:	de 03 03 05 	add_i sp, sp, 192
   3536c:	1f 00 00 f0 	ret

0000000000035370 P_Thrust:
   35370:	de 03 ff 05 	add_i sp, sp, -64
   35374:	1e f3 00 88 	store_32 s24, 60(sp)
   35378:	3e e3 00 88 	store_32 s25, 56(sp)
   3537c:	5e d3 00 88 	store_32 s26, 52(sp)
   35380:	fe c3 00 88 	store_32 ra, 48(sp)
   35384:	74 04 00 4f 	movehi s3, 52
   35388:	83 00 00 4f 	movehi s4, 3
   3538c:	21 44 00 0a 	shr s1, s1, 17
   35390:	63 40 19 00 	or s3, s3, 1616
   35394:	84 f0 7f 00 	or s4, s4, 8188
   35398:	41 03 12 c0 	and s26, s1, s4
   3539c:	63 00 00 a8 	load_32 s3, (s3)
   353a0:	00 03 f1 c0 	move s24, s2
   353a4:	20 03 f0 c0 	move s25, s0
   353a8:	23 00 5d c0 	add_i s1, s3, s26
   353ac:	21 00 00 a8 	load_32 s1, (s1)
   353b0:	00 00 fc c0 	move s0, s24
   353b4:	e0 9a ff f9 	call -103552 <FixedMul>
   353b8:	39 00 00 a8 	load_32 s1, (s25)
   353bc:	4d 04 00 4f 	movehi s2, 45
   353c0:	42 90 41 00 	or s2, s2, 4196
   353c4:	61 20 01 a8 	load_32 s3, 72(s1)
   353c8:	42 00 5d c0 	add_i s2, s2, s26
   353cc:	03 00 50 c0 	add_i s0, s3, s0
   353d0:	01 20 01 88 	store_32 s0, 72(s1)
   353d4:	22 00 00 a8 	load_32 s1, (s2)
   353d8:	00 00 fc c0 	move s0, s24
   353dc:	d6 9a ff f9 	call -103592 <FixedMul>
   353e0:	39 00 00 a8 	load_32 s1, (s25)
   353e4:	41 30 01 a8 	load_32 s2, 76(s1)
   353e8:	02 00 50 c0 	add_i s0, s2, s0
   353ec:	01 30 01 88 	store_32 s0, 76(s1)
   353f0:	fe c3 00 a8 	load_32 ra, 48(sp)
   353f4:	5e d3 00 a8 	load_32 s26, 52(sp)
   353f8:	3e e3 00 a8 	load_32 s25, 56(sp)
   353fc:	1e f3 00 a8 	load_32 s24, 60(sp)
   35400:	de 03 01 05 	add_i sp, sp, 64
   35404:	1f 00 00 f0 	ret

0000000000035408 P_CalcHeight:
   35408:	de 03 ff 05 	add_i sp, sp, -64
   3540c:	1e f3 00 88 	store_32 s24, 60(sp)
   35410:	3e e3 00 88 	store_32 s25, 56(sp)
   35414:	fe d3 00 88 	store_32 ra, 52(sp)
   35418:	00 03 f0 c0 	move s24, s0
   3541c:	18 00 00 a8 	load_32 s0, (s24)
   35420:	00 20 01 a8 	load_32 s0, 72(s0)
   35424:	20 00 f0 c0 	move s1, s0
   35428:	c3 9a ff f9 	call -103668 <FixedMul>
   3542c:	38 00 00 a8 	load_32 s1, (s24)
   35430:	20 03 f0 c0 	move s25, s0
   35434:	01 30 01 a8 	load_32 s0, 76(s1)
   35438:	20 00 f0 c0 	move s1, s0
   3543c:	be 9a ff f9 	call -103688 <FixedMul>
   35440:	20 40 00 4f 	movehi s1, 512
   35444:	00 80 5c c0 	add_i s0, s0, s25
   35448:	21 0c 00 00 	or s1, s1, 3
   3544c:	20 80 20 c1 	cmpgt_i s1, s0, s1
   35450:	61 00 00 f4 	bnz s1, 12 <P_CalcHeight+0x54>
   35454:	00 08 00 09 	ashr s0, s0, 2
   35458:	02 00 00 f6 	b 8 <P_CalcHeight+0x58>
   3545c:	00 10 00 4f 	movehi s0, 128
   35460:	3c 04 00 4f 	movehi s1, 60
   35464:	18 70 00 88 	store_32 s0, 28(s24)
   35468:	58 10 03 a0 	load_u8 s2, 196(s24)
   3546c:	21 a0 02 00 	or s1, s1, 168
   35470:	42 10 00 01 	and s2, s2, 4
   35474:	21 00 00 a8 	load_32 s1, (s1)
   35478:	a2 02 00 f4 	bnz s2, 84 <P_CalcHeight+0xc4>
   3547c:	41 00 00 f4 	bnz s1, 8 <P_CalcHeight+0x7c>
   35480:	13 00 00 f6 	b 76 <P_CalcHeight+0xc4>
   35484:	3c 04 00 4f 	movehi s1, 60
   35488:	4d 04 00 4f 	movehi s2, 45
   3548c:	60 7c 00 0a 	shr s3, s0, 31
   35490:	21 40 02 00 	or s1, s1, 144
   35494:	42 90 41 00 	or s2, s2, 4196
   35498:	00 80 51 c0 	add_i s0, s0, s3
   3549c:	21 00 00 a8 	load_32 s1, (s1)
   354a0:	00 04 00 09 	ashr s0, s0, 1
   354a4:	21 64 06 07 	mull_i s1, s1, 409
   354a8:	21 fc 7f 01 	and s1, s1, 8191
   354ac:	21 08 00 0b 	shl s1, s1, 2
   354b0:	22 80 50 c0 	add_i s1, s2, s1
   354b4:	21 00 00 a8 	load_32 s1, (s1)
   354b8:	9f 9a ff f9 	call -103812 <FixedMul>
   354bc:	38 10 00 a8 	load_32 s1, 4(s24)
   354c0:	21 01 00 f2 	bz s1, 36 <P_CalcHeight+0xdc>
   354c4:	38 50 00 a8 	load_32 s1, 20(s24)
   354c8:	27 00 00 f6 	b 156 <P_CalcHeight+0x15c>
   354cc:	18 00 00 a8 	load_32 s0, (s24)
   354d0:	00 50 00 a8 	load_32 s0, 20(s0)
   354d4:	38 50 00 a8 	load_32 s1, 20(s24)
   354d8:	01 00 50 c0 	add_i s0, s1, s0
   354dc:	18 40 00 88 	store_32 s0, 16(s24)
   354e0:	2d 00 00 f6 	b 180 <P_CalcHeight+0x18c>
   354e4:	58 60 00 a8 	load_32 s2, 24(s24)
   354e8:	68 28 00 4f 	movehi s3, 328
   354ec:	38 50 00 a8 	load_32 s1, 20(s24)
   354f0:	83 04 00 00 	or s4, s3, 1
   354f4:	21 00 51 c0 	add_i s1, s1, s2
   354f8:	38 50 00 88 	store_32 s1, 20(s24)
   354fc:	81 00 42 c1 	cmplt_i s4, s1, s4
   35500:	c4 00 00 f4 	bnz s4, 24 <P_CalcHeight+0x110>
   35504:	20 00 00 0f 	move s1, 0
   35508:	78 50 00 88 	store_32 s3, 20(s24)
   3550c:	38 60 00 88 	store_32 s1, 24(s24)
   35510:	20 80 f1 c0 	move s1, s3
   35514:	14 00 00 f6 	b 80 <P_CalcHeight+0x15c>
   35518:	63 14 00 4f 	movehi s3, 163
   3551c:	63 fc 7f 00 	or s3, s3, 8191
   35520:	61 80 21 c1 	cmpgt_i s3, s1, s3
   35524:	03 01 00 f4 	bnz s3, 32 <P_CalcHeight+0x13c>
   35528:	24 14 00 4f 	movehi s1, 164
   3552c:	38 50 00 88 	store_32 s1, 20(s24)
   35530:	62 00 00 12 	cmpgt_i s3, s2, 0
   35534:	a3 00 00 f4 	bnz s3, 20 <P_CalcHeight+0x140>
   35538:	40 04 00 0f 	move s2, 1
   3553c:	58 60 00 88 	store_32 s2, 24(s24)
   35540:	02 00 00 f6 	b 8 <P_CalcHeight+0x140>
   35544:	02 01 00 f2 	bz s2, 32 <P_CalcHeight+0x15c>
   35548:	62 00 00 4f 	movehi s3, 2
   3554c:	42 80 51 c0 	add_i s2, s2, s3
   35550:	62 00 00 10 	cmpeq_i s3, s2, 0
   35554:	43 00 00 f4 	bnz s3, 8 <P_CalcHeight+0x154>
   35558:	02 00 00 f6 	b 8 <P_CalcHeight+0x158>
   3555c:	40 04 00 0f 	move s2, 1
   35560:	58 60 00 88 	store_32 s2, 24(s24)
   35564:	58 00 00 a8 	load_32 s2, (s24)
   35568:	62 50 00 a8 	load_32 s3, 20(s2)
   3556c:	03 00 50 c0 	add_i s0, s3, s0
   35570:	00 80 50 c0 	add_i s0, s0, s1
   35574:	18 40 00 88 	store_32 s0, 16(s24)
   35578:	22 f0 00 a8 	load_32 s1, 60(s2)
   3557c:	40 fc ff 4f 	movehi s2, 524256
   35580:	21 00 51 c0 	add_i s1, s1, s2
   35584:	40 80 20 c1 	cmpgt_i s2, s0, s1
   35588:	42 00 00 f4 	bnz s2, 8 <P_CalcHeight+0x188>
   3558c:	20 00 f0 c0 	move s1, s0
   35590:	38 40 00 88 	store_32 s1, 16(s24)
   35594:	fe d3 00 a8 	load_32 ra, 52(sp)
   35598:	3e e3 00 a8 	load_32 s25, 56(sp)
   3559c:	1e f3 00 a8 	load_32 s24, 60(sp)
   355a0:	de 03 01 05 	add_i sp, sp, 64
   355a4:	1f 00 00 f0 	ret

00000000000355a8 P_MovePlayer:
   355a8:	de 03 ff 05 	add_i sp, sp, -64
   355ac:	1e f3 00 88 	store_32 s24, 60(sp)
   355b0:	3e e3 00 88 	store_32 s25, 56(sp)
   355b4:	5e d3 00 88 	store_32 s26, 52(sp)
   355b8:	7e c3 00 88 	store_32 s27, 48(sp)
   355bc:	fe b3 00 88 	store_32 ra, 44(sp)
   355c0:	00 03 f0 c0 	move s24, s0
   355c4:	18 28 00 a6 	load_s16 s0, 10(s24)
   355c8:	38 00 00 a8 	load_32 s1, (s24)
   355cc:	00 40 00 0b 	shl s0, s0, 16
   355d0:	41 80 00 a8 	load_32 s2, 32(s1)
   355d4:	02 00 50 c0 	add_i s0, s2, s0
   355d8:	01 80 00 88 	store_32 s0, 32(s1)
   355dc:	01 50 00 a8 	load_32 s0, 20(s1)
   355e0:	5c 04 00 4f 	movehi s2, 60
   355e4:	21 e0 00 a8 	load_32 s1, 56(s1)
   355e8:	42 a3 02 00 	or s26, s2, 168
   355ec:	60 80 50 c1 	cmple_i s3, s0, s1
   355f0:	40 80 20 c1 	cmpgt_i s2, s0, s1
   355f4:	23 04 00 01 	and s1, s3, 1
   355f8:	3a 00 00 88 	store_32 s1, (s26)
   355fc:	18 20 00 a2 	load_s8 s0, 8(s24)
   35600:	e2 03 00 f4 	bnz s2, 124 <P_MovePlayer+0xd4>
   35604:	c0 03 00 f2 	bz s0, 120 <P_MovePlayer+0xd4>
   35608:	38 00 00 a8 	load_32 s1, (s24)
   3560c:	54 04 00 4f 	movehi s2, 52
   35610:	63 00 00 4f 	movehi s3, 3
   35614:	20 2f 00 0b 	shl s25, s0, 11
   35618:	42 40 19 00 	or s2, s2, 1616
   3561c:	21 80 00 a8 	load_32 s1, 32(s1)
   35620:	63 f0 7f 00 	or s3, s3, 8188
   35624:	42 00 00 a8 	load_32 s2, (s2)
   35628:	21 44 00 0a 	shr s1, s1, 17
   3562c:	61 83 11 c0 	and s27, s1, s3
   35630:	22 80 5d c0 	add_i s1, s2, s27
   35634:	21 00 00 a8 	load_32 s1, (s1)
   35638:	00 80 fc c0 	move s0, s25
   3563c:	3e 9a ff f9 	call -104200 <FixedMul>
   35640:	38 00 00 a8 	load_32 s1, (s24)
   35644:	4d 04 00 4f 	movehi s2, 45
   35648:	42 90 41 00 	or s2, s2, 4196
   3564c:	61 20 01 a8 	load_32 s3, 72(s1)
   35650:	42 80 5d c0 	add_i s2, s2, s27
   35654:	03 00 50 c0 	add_i s0, s3, s0
   35658:	01 20 01 88 	store_32 s0, 72(s1)
   3565c:	22 00 00 a8 	load_32 s1, (s2)
   35660:	00 80 fc c0 	move s0, s25
   35664:	34 9a ff f9 	call -104240 <FixedMul>
   35668:	38 00 00 a8 	load_32 s1, (s24)
   3566c:	41 30 01 a8 	load_32 s2, 76(s1)
   35670:	02 00 50 c0 	add_i s0, s2, s0
   35674:	01 30 01 88 	store_32 s0, 76(s1)
   35678:	3a 00 00 a8 	load_32 s1, (s26)
   3567c:	18 24 00 a2 	load_s8 s0, 9(s24)
   35680:	00 04 00 f2 	bz s0, 128 <P_MovePlayer+0x158>
   35684:	e1 03 00 f2 	bz s1, 124 <P_MovePlayer+0x158>
   35688:	38 00 00 a8 	load_32 s1, (s24)
   3568c:	74 04 00 4f 	movehi s3, 52
   35690:	40 00 c0 4f 	movehi s2, 393216
   35694:	20 2f 00 0b 	shl s25, s0, 11
   35698:	21 80 00 a8 	load_32 s1, 32(s1)
   3569c:	21 00 51 c0 	add_i s1, s1, s2
   356a0:	43 40 19 00 	or s2, s3, 1616
   356a4:	63 00 00 4f 	movehi s3, 3
   356a8:	21 44 00 0a 	shr s1, s1, 17
   356ac:	42 00 00 a8 	load_32 s2, (s2)
   356b0:	63 f0 7f 00 	or s3, s3, 8188
   356b4:	41 83 11 c0 	and s26, s1, s3
   356b8:	22 00 5d c0 	add_i s1, s2, s26
   356bc:	21 00 00 a8 	load_32 s1, (s1)
   356c0:	00 80 fc c0 	move s0, s25
   356c4:	1c 9a ff f9 	call -104336 <FixedMul>
   356c8:	38 00 00 a8 	load_32 s1, (s24)
   356cc:	4d 04 00 4f 	movehi s2, 45
   356d0:	42 90 41 00 	or s2, s2, 4196
   356d4:	61 20 01 a8 	load_32 s3, 72(s1)
   356d8:	42 00 5d c0 	add_i s2, s2, s26
   356dc:	03 00 50 c0 	add_i s0, s3, s0
   356e0:	01 20 01 88 	store_32 s0, 72(s1)
   356e4:	22 00 00 a8 	load_32 s1, (s2)
   356e8:	00 80 fc c0 	move s0, s25
   356ec:	12 9a ff f9 	call -104376 <FixedMul>
   356f0:	38 00 00 a8 	load_32 s1, (s24)
   356f4:	41 30 01 a8 	load_32 s2, 76(s1)
   356f8:	02 00 50 c0 	add_i s0, s2, s0
   356fc:	01 30 01 88 	store_32 s0, 76(s1)
   35700:	18 20 00 a0 	load_u8 s0, 8(s24)
   35704:	60 00 00 f4 	bnz s0, 12 <P_MovePlayer+0x168>
   35708:	18 24 00 a0 	load_u8 s0, 9(s24)
   3570c:	40 01 00 f2 	bz s0, 40 <P_MovePlayer+0x18c>
   35710:	18 00 00 a8 	load_32 s0, (s24)
   35714:	34 04 00 4f 	movehi s1, 52
   35718:	21 20 5c 00 	or s1, s1, 5896
   3571c:	40 90 01 a8 	load_32 s2, 100(s0)
   35720:	21 30 41 05 	add_i s1, s1, 4172
   35724:	22 80 10 c1 	cmpne_i s1, s2, s1
   35728:	61 00 00 f4 	bnz s1, 12 <P_MovePlayer+0x18c>
   3572c:	20 58 02 0f 	move s1, 150
   35730:	ba f1 ff f9 	call -14616 <P_SetMobjState>
   35734:	fe b3 00 a8 	load_32 ra, 44(sp)
   35738:	7e c3 00 a8 	load_32 s27, 48(sp)
   3573c:	5e d3 00 a8 	load_32 s26, 52(sp)
   35740:	3e e3 00 a8 	load_32 s25, 56(sp)
   35744:	1e f3 00 a8 	load_32 s24, 60(sp)
   35748:	de 03 01 05 	add_i sp, sp, 64
   3574c:	1f 00 00 f0 	ret

0000000000035750 P_DeathThink:
   35750:	de 03 ff 05 	add_i sp, sp, -64
   35754:	1e f3 00 88 	store_32 s24, 60(sp)
   35758:	fe e3 00 88 	store_32 ra, 56(sp)
   3575c:	00 03 f0 c0 	move s24, s0
   35760:	19 e1 ff f9 	call -31644 <P_MovePsprites>
   35764:	38 50 00 a8 	load_32 s1, 20(s24)
   35768:	10 04 00 4f 	movehi s0, 48
   3576c:	41 00 20 c1 	cmpgt_i s2, s1, s0
   35770:	42 00 00 f4 	bnz s2, 8 <P_DeathThink+0x28>
   35774:	03 00 00 f6 	b 12 <P_DeathThink+0x30>
   35778:	78 fc ff 4f 	movehi s3, 524280
   3577c:	21 80 51 c0 	add_i s1, s1, s3
   35780:	a2 00 00 f4 	bnz s2, 20 <P_DeathThink+0x44>
   35784:	4f 04 00 4f 	movehi s2, 47
   35788:	42 fc 7f 00 	or s2, s2, 8191
   3578c:	41 00 21 c1 	cmpgt_i s2, s1, s2
   35790:	a2 00 00 f4 	bnz s2, 20 <P_DeathThink+0x54>
   35794:	41 00 40 c1 	cmplt_i s2, s1, s0
   35798:	42 00 00 f4 	bnz s2, 8 <P_DeathThink+0x50>
   3579c:	00 80 f0 c0 	move s0, s1
   357a0:	18 50 00 88 	store_32 s0, 20(s24)
   357a4:	00 00 00 0f 	move s0, 0
   357a8:	18 60 00 88 	store_32 s0, 24(s24)
   357ac:	18 00 00 a8 	load_32 s0, (s24)
   357b0:	5c 04 00 4f 	movehi s2, 60
   357b4:	20 50 00 a8 	load_32 s1, 20(s0)
   357b8:	00 e0 00 a8 	load_32 s0, 56(s0)
   357bc:	01 00 50 c1 	cmple_i s0, s1, s0
   357c0:	22 a0 02 00 	or s1, s2, 168
   357c4:	00 04 00 01 	and s0, s0, 1
   357c8:	01 00 00 88 	store_32 s0, (s1)
   357cc:	00 00 fc c0 	move s0, s24
   357d0:	0e ff ff f9 	call -968 <P_CalcHeight>
   357d4:	78 90 03 a8 	load_32 s3, 228(s24)
   357d8:	83 02 00 f2 	bz s3, 80 <P_DeathThink+0xd8>
   357dc:	38 00 00 a8 	load_32 s1, (s24)
   357e0:	03 80 00 c1 	cmpeq_i s0, s3, s1
   357e4:	20 02 00 f4 	bnz s0, 68 <P_DeathThink+0xd8>
   357e8:	01 30 00 a8 	load_32 s0, 12(s1)
   357ec:	21 40 00 a8 	load_32 s1, 16(s1)
   357f0:	43 30 00 a8 	load_32 s2, 12(s3)
   357f4:	63 40 00 a8 	load_32 s3, 16(s3)
   357f8:	dc 0e 00 f8 	call 15216 <R_PointToAngle2>
   357fc:	38 00 00 a8 	load_32 s1, (s24)
   35800:	6e 70 fc 4f 	movehi s3, 517006
   35804:	bc e0 f8 4f 	movehi s5, 509724
   35808:	63 74 1c 00 	or s3, s3, 1821
   3580c:	41 80 00 a8 	load_32 s2, 32(s1)
   35810:	a5 ec 38 00 	or s5, s5, 3643
   35814:	80 00 61 c0 	sub_i s4, s0, s2
   35818:	c4 80 51 c0 	add_i s6, s4, s3
   3581c:	a6 80 82 c1 	cmplt_u s5, s6, s5
   35820:	e5 01 00 f4 	bnz s5, 60 <P_DeathThink+0x10c>
   35824:	01 80 00 88 	store_32 s0, 32(s1)
   35828:	18 70 03 a8 	load_32 s0, 220(s24)
   3582c:	60 00 00 f2 	bz s0, 12 <P_DeathThink+0xe8>
   35830:	00 fc ff 05 	add_i s0, s0, -1
   35834:	18 70 03 88 	store_32 s0, 220(s24)
   35838:	18 3c 00 a0 	load_u8 s0, 15(s24)
   3583c:	00 08 00 01 	and s0, s0, 2
   35840:	60 00 00 f2 	bz s0, 12 <P_DeathThink+0xfc>
   35844:	00 08 00 0f 	move s0, 2
   35848:	18 10 00 88 	store_32 s0, 4(s24)
   3584c:	fe e3 00 a8 	load_32 ra, 56(sp)
   35850:	1e f3 00 a8 	load_32 s24, 60(sp)
   35854:	de 03 01 05 	add_i sp, sp, 64
   35858:	1f 00 00 f0 	ret
   3585c:	04 00 00 14 	cmplt_i s0, s4, 0
   35860:	20 01 00 f4 	bnz s0, 36 <P_DeathThink+0x134>
   35864:	11 8c 03 4f 	movehi s0, 7281
   35868:	00 8c 63 00 	or s0, s0, 6371
   3586c:	02 00 50 c0 	add_i s0, s2, s0
   35870:	01 80 00 88 	store_32 s0, 32(s1)
   35874:	18 3c 00 a0 	load_u8 s0, 15(s24)
   35878:	00 08 00 01 	and s0, s0, 2
   3587c:	80 fe ff f3 	bz s0, -48 <P_DeathThink+0xfc>
   35880:	f1 ff ff f7 	b -60 <P_DeathThink+0xf4>
   35884:	02 80 51 c0 	add_i s0, s2, s3
   35888:	01 80 00 88 	store_32 s0, 32(s1)
   3588c:	18 3c 00 a0 	load_u8 s0, 15(s24)
   35890:	00 08 00 01 	and s0, s0, 2
   35894:	c0 fd ff f3 	bz s0, -72 <P_DeathThink+0xfc>
   35898:	eb ff ff f7 	b -84 <P_DeathThink+0xf4>

000000000003589c P_PlayerThink:
   3589c:	de 03 ff 05 	add_i sp, sp, -64
   358a0:	1e f3 00 88 	store_32 s24, 60(sp)
   358a4:	fe e3 00 88 	store_32 ra, 56(sp)
   358a8:	00 03 f0 c0 	move s24, s0
   358ac:	18 10 03 a8 	load_32 s0, 196(s24)
   358b0:	20 04 00 01 	and s1, s0, 1
   358b4:	18 00 00 a8 	load_32 s0, (s24)
   358b8:	41 00 00 10 	cmpeq_i s2, s1, 0
   358bc:	20 a0 01 a8 	load_32 s1, 104(s0)
   358c0:	c2 00 00 f4 	bnz s2, 24 <P_PlayerThink+0x3c>
   358c4:	21 00 40 00 	or s1, s1, 4096
   358c8:	41 00 02 01 	and s2, s1, 128
   358cc:	20 a0 01 88 	store_32 s1, 104(s0)
   358d0:	82 01 00 f2 	bz s2, 48 <P_PlayerThink+0x64>
   358d4:	05 00 00 f6 	b 20 <P_PlayerThink+0x4c>
   358d8:	21 fc bf 01 	and s1, s1, -4097
   358dc:	41 00 02 01 	and s2, s1, 128
   358e0:	20 a0 01 88 	store_32 s1, 104(s0)
   358e4:	e2 00 00 f2 	bz s2, 28 <P_PlayerThink+0x64>
   358e8:	40 00 00 0f 	move s2, 0
   358ec:	58 28 00 86 	store_16 s2, 10(s24)
   358f0:	40 90 01 0f 	move s2, 100
   358f4:	58 20 00 86 	store_16 s2, 8(s24)
   358f8:	21 fc fd 01 	and s1, s1, -129
   358fc:	20 a0 01 88 	store_32 s1, 104(s0)
   35900:	38 10 00 a8 	load_32 s1, 4(s24)
   35904:	21 04 00 11 	cmpne_i s1, s1, 1
   35908:	e1 00 00 f4 	bnz s1, 28 <P_PlayerThink+0x88>
   3590c:	00 00 fc c0 	move s0, s24
   35910:	90 ff ff f9 	call -448 <P_DeathThink>
   35914:	fe e3 00 a8 	load_32 ra, 56(sp)
   35918:	1e f3 00 a8 	load_32 s24, 60(sp)
   3591c:	de 03 01 05 	add_i sp, sp, 64
   35920:	1f 00 00 f0 	ret
   35924:	20 f0 01 a8 	load_32 s1, 124(s0)
   35928:	81 00 00 f2 	bz s1, 16 <P_PlayerThink+0x9c>
   3592c:	21 fc ff 05 	add_i s1, s1, -1
   35930:	20 f0 01 88 	store_32 s1, 124(s0)
   35934:	03 00 00 f6 	b 12 <P_PlayerThink+0xa4>
   35938:	00 00 fc c0 	move s0, s24
   3593c:	1b ff ff f9 	call -916 <P_MovePlayer>
   35940:	00 00 fc c0 	move s0, s24
   35944:	b1 fe ff f9 	call -1340 <P_CalcHeight>
   35948:	18 00 00 a8 	load_32 s0, (s24)
   3594c:	00 d0 00 a8 	load_32 s0, 52(s0)
   35950:	00 00 00 a8 	load_32 s0, (s0)
   35954:	00 38 00 a4 	load_u16 s0, 14(s0)
   35958:	60 00 00 f2 	bz s0, 12 <P_PlayerThink+0xc8>
   3595c:	00 00 fc c0 	move s0, s24
   35960:	b7 eb ff f9 	call -20772 <P_PlayerInSpecialSector>
   35964:	38 3c 00 a0 	load_u8 s1, 15(s24)
   35968:	00 80 d0 c1 	sext_8 s0, s1
   3596c:	40 fc ff 12 	cmpgt_i s2, s0, -1
   35970:	42 00 00 f4 	bnz s2, 8 <P_PlayerThink+0xdc>
   35974:	1b 00 00 f6 	b 108 <P_PlayerThink+0x144>
   35978:	41 10 00 01 	and s2, s1, 4
   3597c:	02 08 00 f2 	bz s2, 256 <P_PlayerThink+0x1e0>
   35980:	21 0c 00 0a 	shr s1, s1, 3
   35984:	21 1c 00 01 	and s1, s1, 7
   35988:	41 00 00 f4 	bnz s1, 8 <P_PlayerThink+0xf4>
   3598c:	19 00 00 f6 	b 100 <P_PlayerThink+0x154>
   35990:	4b 04 00 4f 	movehi s2, 43
   35994:	61 08 00 11 	cmpne_i s3, s1, 2
   35998:	42 00 40 00 	or s2, s2, 4096
   3599c:	42 00 00 a8 	load_32 s2, (s2)
   359a0:	03 04 00 f4 	bnz s3, 128 <P_PlayerThink+0x184>
   359a4:	62 08 00 11 	cmpne_i s3, s2, 2
   359a8:	c3 03 00 f4 	bnz s3, 120 <P_PlayerThink+0x184>
   359ac:	38 60 02 a8 	load_32 s1, 152(s24)
   359b0:	81 05 00 f2 	bz s1, 176 <P_PlayerThink+0x1c4>
   359b4:	38 c0 01 a8 	load_32 s1, 112(s24)
   359b8:	40 08 00 0f 	move s2, 2
   359bc:	61 20 00 10 	cmpeq_i s3, s1, 8
   359c0:	20 00 f1 c0 	move s1, s2
   359c4:	e3 02 00 f4 	bnz s3, 92 <P_PlayerThink+0x184>
   359c8:	20 20 00 0f 	move s1, 8
   359cc:	61 08 00 0b 	shl s3, s1, 2
   359d0:	78 80 51 c0 	add_i s3, s24, s3
   359d4:	63 e0 01 a8 	load_32 s3, 120(s3)
   359d8:	23 05 00 f2 	bz s3, 164 <P_PlayerThink+0x1e0>
   359dc:	15 00 00 f6 	b 84 <P_PlayerThink+0x194>
   359e0:	00 00 00 0f 	move s0, 0
   359e4:	18 3c 00 82 	store_8 s0, 15(s24)
   359e8:	18 00 03 05 	add_i s0, s24, 192
   359ec:	28 00 00 f6 	b 160 <P_PlayerThink+0x1f0>
   359f0:	58 50 02 a8 	load_32 s2, 148(s24)
   359f4:	20 00 00 0f 	move s1, 0
   359f8:	e2 00 00 f2 	bz s2, 28 <P_PlayerThink+0x178>
   359fc:	58 c0 01 a8 	load_32 s2, 112(s24)
   35a00:	42 1c 00 11 	cmpne_i s2, s2, 7
   35a04:	62 00 00 f4 	bnz s2, 12 <P_PlayerThink+0x174>
   35a08:	58 c0 00 a8 	load_32 s2, 48(s24)
   35a0c:	42 00 00 f4 	bnz s2, 8 <P_PlayerThink+0x178>
   35a10:	20 1c 00 0f 	move s1, 7
   35a14:	4b 04 00 4f 	movehi s2, 43
   35a18:	42 00 40 00 	or s2, s2, 4096
   35a1c:	42 00 00 a8 	load_32 s2, (s2)
   35a20:	61 08 00 0b 	shl s3, s1, 2
   35a24:	78 80 51 c0 	add_i s3, s24, s3
   35a28:	63 e0 01 a8 	load_32 s3, 120(s3)
   35a2c:	83 02 00 f2 	bz s3, 80 <P_PlayerThink+0x1e0>
   35a30:	78 c0 01 a8 	load_32 s3, 112(s24)
   35a34:	61 80 01 c1 	cmpeq_i s3, s1, s3
   35a38:	23 02 00 f4 	bnz s3, 68 <P_PlayerThink+0x1e0>
   35a3c:	82 00 00 f4 	bnz s2, 16 <P_PlayerThink+0x1b0>
   35a40:	41 ec ff 05 	add_i s2, s1, -5
   35a44:	42 08 00 18 	cmplt_u s2, s2, 2
   35a48:	a2 01 00 f4 	bnz s2, 52 <P_PlayerThink+0x1e0>
   35a4c:	38 d0 01 88 	store_32 s1, 116(s24)
   35a50:	20 08 00 01 	and s1, s0, 2
   35a54:	18 00 03 05 	add_i s0, s24, 192
   35a58:	a1 01 00 f2 	bz s1, 52 <P_PlayerThink+0x1f0>
   35a5c:	13 00 00 f6 	b 76 <P_PlayerThink+0x20c>
   35a60:	40 08 00 0f 	move s2, 2
   35a64:	20 00 f1 c0 	move s1, s2
   35a68:	61 08 00 0b 	shl s3, s1, 2
   35a6c:	78 80 51 c0 	add_i s3, s24, s3
   35a70:	63 e0 01 a8 	load_32 s3, 120(s3)
   35a74:	43 00 00 f2 	bz s3, 8 <P_PlayerThink+0x1e0>
   35a78:	ee ff ff f7 	b -72 <P_PlayerThink+0x194>
   35a7c:	20 08 00 01 	and s1, s0, 2
   35a80:	18 00 03 05 	add_i s0, s24, 192
   35a84:	41 00 00 f2 	bz s1, 8 <P_PlayerThink+0x1f0>
   35a88:	08 00 00 f6 	b 32 <P_PlayerThink+0x20c>
   35a8c:	20 00 00 0f 	move s1, 0
   35a90:	20 00 00 88 	store_32 s1, (s0)
   35a94:	00 00 fc c0 	move s0, s24
   35a98:	4b e0 ff f9 	call -32468 <P_MovePsprites>
   35a9c:	18 c0 00 a8 	load_32 s0, 48(s24)
   35aa0:	c0 01 00 f2 	bz s0, 56 <P_PlayerThink+0x23c>
   35aa4:	0b 00 00 f6 	b 44 <P_PlayerThink+0x234>
   35aa8:	00 00 00 a8 	load_32 s0, (s0)
   35aac:	a0 00 00 f4 	bnz s0, 20 <P_PlayerThink+0x224>
   35ab0:	00 00 fc c0 	move s0, s24
   35ab4:	c5 cd ff f9 	call -51436 <P_UseLines>
   35ab8:	00 04 00 0f 	move s0, 1
   35abc:	18 00 03 88 	store_32 s0, 192(s24)
   35ac0:	00 00 fc c0 	move s0, s24
   35ac4:	40 e0 ff f9 	call -32512 <P_MovePsprites>
   35ac8:	18 c0 00 a8 	load_32 s0, 48(s24)
   35acc:	60 00 00 f2 	bz s0, 12 <P_PlayerThink+0x23c>
   35ad0:	00 04 00 05 	add_i s0, s0, 1
   35ad4:	18 c0 00 88 	store_32 s0, 48(s24)
   35ad8:	18 b0 00 a8 	load_32 s0, 44(s24)
   35adc:	60 00 00 f2 	bz s0, 12 <P_PlayerThink+0x24c>
   35ae0:	00 fc ff 05 	add_i s0, s0, -1
   35ae4:	18 b0 00 88 	store_32 s0, 44(s24)
   35ae8:	18 d0 00 a8 	load_32 s0, 52(s24)
   35aec:	a0 00 00 f2 	bz s0, 20 <P_PlayerThink+0x264>
   35af0:	00 fc ff 05 	add_i s0, s0, -1
   35af4:	18 d0 00 88 	store_32 s0, 52(s24)
   35af8:	40 00 00 f4 	bnz s0, 8 <P_PlayerThink+0x264>
   35afc:	25 00 00 f6 	b 148 <P_PlayerThink+0x2f4>
   35b00:	18 00 01 a8 	load_32 s0, 64(s24)
   35b04:	80 05 00 f2 	bz s0, 176 <P_PlayerThink+0x318>
   35b08:	00 fc ff 05 	add_i s0, s0, -1
   35b0c:	18 00 01 88 	store_32 s0, 64(s24)
   35b10:	38 e0 00 a8 	load_32 s1, 56(s24)
   35b14:	61 00 00 f2 	bz s1, 12 <P_PlayerThink+0x284>
   35b18:	21 fc ff 05 	add_i s1, s1, -1
   35b1c:	38 e0 00 88 	store_32 s1, 56(s24)
   35b20:	38 70 03 a8 	load_32 s1, 220(s24)
   35b24:	61 00 00 f2 	bz s1, 12 <P_PlayerThink+0x294>
   35b28:	21 fc ff 05 	add_i s1, s1, -1
   35b2c:	38 70 03 88 	store_32 s1, 220(s24)
   35b30:	38 80 03 a8 	load_32 s1, 224(s24)
   35b34:	61 00 00 f2 	bz s1, 12 <P_PlayerThink+0x2a4>
   35b38:	21 fc ff 05 	add_i s1, s1, -1
   35b3c:	38 80 03 88 	store_32 s1, 224(s24)
   35b40:	38 b0 00 a8 	load_32 s1, 44(s24)
   35b44:	e1 00 00 f2 	bz s1, 28 <P_PlayerThink+0x2c4>
   35b48:	01 00 02 12 	cmpgt_i s0, s1, 128
   35b4c:	60 00 00 f4 	bnz s0, 12 <P_PlayerThink+0x2bc>
   35b50:	01 20 00 01 	and s0, s1, 8
   35b54:	20 01 00 f2 	bz s0, 36 <P_PlayerThink+0x2dc>
   35b58:	00 80 00 0f 	move s0, 32
   35b5c:	08 00 00 f6 	b 32 <P_PlayerThink+0x2e0>
   35b60:	c0 00 00 f2 	bz s0, 24 <P_PlayerThink+0x2dc>
   35b64:	20 00 02 12 	cmpgt_i s1, s0, 128
   35b68:	e1 02 00 f4 	bnz s1, 92 <P_PlayerThink+0x328>
   35b6c:	00 20 00 01 	and s0, s0, 8
   35b70:	40 00 00 f2 	bz s0, 8 <P_PlayerThink+0x2dc>
   35b74:	14 00 00 f6 	b 80 <P_PlayerThink+0x328>
   35b78:	00 00 00 0f 	move s0, 0
   35b7c:	18 b0 03 88 	store_32 s0, 236(s24)
   35b80:	fe e3 00 a8 	load_32 ra, 56(sp)
   35b84:	1e f3 00 a8 	load_32 s24, 60(sp)
   35b88:	de 03 01 05 	add_i sp, sp, 64
   35b8c:	1f 00 00 f0 	ret
   35b90:	18 00 00 a8 	load_32 s0, (s24)
   35b94:	5f f8 ff 4f 	movehi s2, 524255
   35b98:	42 fc 7f 00 	or s2, s2, 8191
   35b9c:	20 a0 01 a8 	load_32 s1, 104(s0)
   35ba0:	21 00 11 c0 	and s1, s1, s2
   35ba4:	20 a0 01 88 	store_32 s1, 104(s0)
   35ba8:	18 00 01 a8 	load_32 s0, 64(s24)
   35bac:	40 00 00 f2 	bz s0, 8 <P_PlayerThink+0x318>
   35bb0:	d6 ff ff f7 	b -168 <P_PlayerThink+0x26c>
   35bb4:	00 00 00 0f 	move s0, 0
   35bb8:	38 e0 00 a8 	load_32 s1, 56(s24)
   35bbc:	21 fb ff f3 	bz s1, -156 <P_PlayerThink+0x284>
   35bc0:	d6 ff ff f7 	b -168 <P_PlayerThink+0x27c>
   35bc4:	00 04 00 0f 	move s0, 1
   35bc8:	ed ff ff f7 	b -76 <P_PlayerThink+0x2e0>

0000000000035bcc R_ClearDrawSegs:
   35bcc:	1d 04 00 4f 	movehi s0, 61
   35bd0:	3c 04 00 4f 	movehi s1, 60
   35bd4:	00 d0 42 00 	or s0, s0, 4276
   35bd8:	21 d0 02 00 	or s1, s1, 180
   35bdc:	20 00 00 88 	store_32 s1, (s0)
   35be0:	1f 00 00 f0 	ret

0000000000035be4 R_ClipSolidWallSegment:
   35be4:	de 03 ff 05 	add_i sp, sp, -64
   35be8:	1e f3 00 88 	store_32 s24, 60(sp)
   35bec:	3e e3 00 88 	store_32 s25, 56(sp)
   35bf0:	5e d3 00 88 	store_32 s26, 52(sp)
   35bf4:	7e c3 00 88 	store_32 s27, 48(sp)
   35bf8:	fe b3 00 88 	store_32 ra, 44(sp)
   35bfc:	5d 04 00 4f 	movehi s2, 61
   35c00:	60 80 f0 c0 	move s3, s1
   35c04:	20 03 f0 c0 	move s25, s0
   35c08:	42 23 43 00 	or s26, s2, 4296
   35c0c:	39 fc ff 05 	add_i s1, s25, -1
   35c10:	60 03 fd c0 	move s27, s26
   35c14:	1b 10 00 a8 	load_32 s0, 4(s27)
   35c18:	5b 23 00 05 	add_i s26, s27, 8
   35c1c:	40 80 40 c1 	cmplt_i s2, s0, s1
   35c20:	82 ff ff f5 	bnz s2, -16 <R_ClipSolidWallSegment+0x2c>
   35c24:	3b 00 00 a8 	load_32 s1, (s27)
   35c28:	7e a0 00 88 	store_32 s3, 40(sp)
   35c2c:	41 80 5c c1 	cmple_i s2, s1, s25
   35c30:	e2 03 00 f4 	bnz s2, 124 <R_ClipSolidWallSegment+0xc8>
   35c34:	21 fc ff 05 	add_i s1, s1, -1
   35c38:	01 80 51 c1 	cmple_i s0, s1, s3
   35c3c:	e0 02 00 f4 	bnz s0, 92 <R_ClipSolidWallSegment+0xb4>
   35c40:	00 80 fc c0 	move s0, s25
   35c44:	20 80 f1 c0 	move s1, s3
   35c48:	15 17 00 f8 	call 23636 <R_StoreWallRange>
   35c4c:	1d 04 00 4f 	movehi s0, 61
   35c50:	20 00 43 00 	or s1, s0, 4288
   35c54:	01 00 00 a8 	load_32 s0, (s1)
   35c58:	60 80 0d c1 	cmpeq_i s3, s0, s27
   35c5c:	40 20 00 05 	add_i s2, s0, 8
   35c60:	41 00 00 88 	store_32 s2, (s1)
   35c64:	23 01 00 f4 	bnz s3, 36 <R_ClipSolidWallSegment+0xa4>
   35c68:	40 e0 ff 05 	add_i s2, s0, -8
   35c6c:	20 e0 ff a9 	load_32 s1, -8(s0)
   35c70:	60 f0 ff a9 	load_32 s3, -4(s0)
   35c74:	60 10 00 88 	store_32 s3, 4(s0)
   35c78:	20 00 00 88 	store_32 s1, (s0)
   35c7c:	62 80 1d c1 	cmpne_i s3, s2, s27
   35c80:	00 00 f1 c0 	move s0, s2
   35c84:	23 ff ff f5 	bnz s3, -28 <R_ClipSolidWallSegment+0x84>
   35c88:	3b 03 00 88 	store_32 s25, (s27)
   35c8c:	1e a0 00 a8 	load_32 s0, 40(sp)
   35c90:	1b 10 00 88 	store_32 s0, 4(s27)
   35c94:	2f 00 00 f6 	b 188 <R_ClipSolidWallSegment+0x16c>
   35c98:	00 80 fc c0 	move s0, s25
   35c9c:	00 17 00 f8 	call 23552 <R_StoreWallRange>
   35ca0:	7e a0 00 a8 	load_32 s3, 40(sp)
   35ca4:	3b 03 00 88 	store_32 s25, (s27)
   35ca8:	1b 10 00 a8 	load_32 s0, 4(s27)
   35cac:	20 80 31 c1 	cmpge_i s1, s0, s3
   35cb0:	01 05 00 f4 	bnz s1, 160 <R_ClipSolidWallSegment+0x16c>
   35cb4:	00 83 fd c0 	move s24, s27
   35cb8:	38 20 00 a8 	load_32 s1, 8(s24)
   35cbc:	00 04 00 05 	add_i s0, s0, 1
   35cc0:	21 fc ff 05 	add_i s1, s1, -1
   35cc4:	41 80 21 c1 	cmpgt_i s2, s1, s3
   35cc8:	82 01 00 f4 	bnz s2, 48 <R_ClipSolidWallSegment+0x114>
   35ccc:	38 23 00 05 	add_i s25, s24, 8
   35cd0:	f3 16 00 f8 	call 23500 <R_StoreWallRange>
   35cd4:	7e a0 00 a8 	load_32 s3, 40(sp)
   35cd8:	18 30 00 a8 	load_32 s0, 12(s24)
   35cdc:	00 83 fc c0 	move s24, s25
   35ce0:	20 80 41 c1 	cmplt_i s1, s0, s3
   35ce4:	a1 fe ff f5 	bnz s1, -44 <R_ClipSolidWallSegment+0xd4>
   35ce8:	39 80 0d c1 	cmpeq_i s1, s25, s27
   35cec:	1b 10 00 88 	store_32 s0, 4(s27)
   35cf0:	01 03 00 f4 	bnz s1, 96 <R_ClipSolidWallSegment+0x16c>
   35cf4:	09 00 00 f6 	b 36 <R_ClipSolidWallSegment+0x134>
   35cf8:	20 80 f1 c0 	move s1, s3
   35cfc:	20 83 f1 c0 	move s25, s3
   35d00:	e7 16 00 f8 	call 23452 <R_StoreWallRange>
   35d04:	00 80 fc c0 	move s0, s25
   35d08:	20 03 fc c0 	move s25, s24
   35d0c:	39 80 0d c1 	cmpeq_i s1, s25, s27
   35d10:	1b 10 00 88 	store_32 s0, 4(s27)
   35d14:	e1 01 00 f4 	bnz s1, 60 <R_ClipSolidWallSegment+0x16c>
   35d18:	1d 04 00 4f 	movehi s0, 61
   35d1c:	00 00 43 00 	or s0, s0, 4288
   35d20:	20 00 00 a8 	load_32 s1, (s0)
   35d24:	59 80 00 c1 	cmpeq_i s2, s25, s1
   35d28:	22 01 00 f4 	bnz s2, 36 <R_ClipSolidWallSegment+0x168>
   35d2c:	59 20 00 a8 	load_32 s2, 8(s25)
   35d30:	79 30 00 a8 	load_32 s3, 12(s25)
   35d34:	39 23 00 05 	add_i s25, s25, 8
   35d38:	7a 10 00 88 	store_32 s3, 4(s26)
   35d3c:	5a 00 00 88 	store_32 s2, (s26)
   35d40:	5a 23 00 05 	add_i s26, s26, 8
   35d44:	59 80 10 c1 	cmpne_i s2, s25, s1
   35d48:	22 ff ff f5 	bnz s2, -28 <R_ClipSolidWallSegment+0x148>
   35d4c:	40 03 00 88 	store_32 s26, (s0)
   35d50:	fe b3 00 a8 	load_32 ra, 44(sp)
   35d54:	7e c3 00 a8 	load_32 s27, 48(sp)
   35d58:	5e d3 00 a8 	load_32 s26, 52(sp)
   35d5c:	3e e3 00 a8 	load_32 s25, 56(sp)
   35d60:	1e f3 00 a8 	load_32 s24, 60(sp)
   35d64:	de 03 01 05 	add_i sp, sp, 64
   35d68:	1f 00 00 f0 	ret

0000000000035d6c R_ClipPassWallSegment:
   35d6c:	de 03 ff 05 	add_i sp, sp, -64
   35d70:	1e f3 00 88 	store_32 s24, 60(sp)
   35d74:	3e e3 00 88 	store_32 s25, 56(sp)
   35d78:	5e d3 00 88 	store_32 s26, 52(sp)
   35d7c:	fe c3 00 88 	store_32 ra, 48(sp)
   35d80:	5d 04 00 4f 	movehi s2, 61
   35d84:	00 83 f0 c0 	move s24, s1
   35d88:	20 fc ff 05 	add_i s1, s0, -1
   35d8c:	62 20 43 00 	or s3, s2, 4296
   35d90:	20 83 f1 c0 	move s25, s3
   35d94:	59 10 00 a8 	load_32 s2, 4(s25)
   35d98:	79 20 00 05 	add_i s3, s25, 8
   35d9c:	82 80 40 c1 	cmplt_i s4, s2, s1
   35da0:	84 ff ff f5 	bnz s4, -16 <R_ClipPassWallSegment+0x24>
   35da4:	39 00 00 a8 	load_32 s1, (s25)
   35da8:	61 00 50 c1 	cmple_i s3, s1, s0
   35dac:	e3 00 00 f4 	bnz s3, 28 <R_ClipPassWallSegment+0x5c>
   35db0:	21 fc ff 05 	add_i s1, s1, -1
   35db4:	41 00 5c c1 	cmple_i s2, s1, s24
   35db8:	42 00 00 f4 	bnz s2, 8 <R_ClipPassWallSegment+0x54>
   35dbc:	11 00 00 f6 	b 68 <R_ClipPassWallSegment+0x94>
   35dc0:	b7 16 00 f8 	call 23260 <R_StoreWallRange>
   35dc4:	59 10 00 a8 	load_32 s2, 4(s25)
   35dc8:	02 00 3c c1 	cmpge_i s0, s2, s24
   35dcc:	e0 01 00 f4 	bnz s0, 60 <R_ClipPassWallSegment+0x9c>
   35dd0:	19 20 00 a8 	load_32 s0, 8(s25)
   35dd4:	20 fc ff 05 	add_i s1, s0, -1
   35dd8:	02 04 00 05 	add_i s0, s2, 1
   35ddc:	61 00 2c c1 	cmpgt_i s3, s1, s24
   35de0:	03 01 00 f4 	bnz s3, 32 <R_ClipPassWallSegment+0x94>
   35de4:	59 23 00 05 	add_i s26, s25, 8
   35de8:	ad 16 00 f8 	call 23220 <R_StoreWallRange>
   35dec:	59 30 00 a8 	load_32 s2, 12(s25)
   35df0:	20 03 fd c0 	move s25, s26
   35df4:	02 00 4c c1 	cmplt_i s0, s2, s24
   35df8:	c0 fe ff f5 	bnz s0, -40 <R_ClipPassWallSegment+0x64>
   35dfc:	03 00 00 f6 	b 12 <R_ClipPassWallSegment+0x9c>
   35e00:	20 00 fc c0 	move s1, s24
   35e04:	a6 16 00 f8 	call 23192 <R_StoreWallRange>
   35e08:	fe c3 00 a8 	load_32 ra, 48(sp)
   35e0c:	5e d3 00 a8 	load_32 s26, 52(sp)
   35e10:	3e e3 00 a8 	load_32 s25, 56(sp)
   35e14:	1e f3 00 a8 	load_32 s24, 60(sp)
   35e18:	de 03 01 05 	add_i sp, sp, 64
   35e1c:	1f 00 00 f0 	ret

0000000000035e20 R_ClearClipSegs:
   35e20:	1d 04 00 4f 	movehi s0, 61
   35e24:	20 00 80 4f 	movehi s1, 262144
   35e28:	5e 04 00 4f 	movehi s2, 62
   35e2c:	00 20 43 00 	or s0, s0, 4296
   35e30:	21 04 00 00 	or s1, s1, 1
   35e34:	7d 04 00 4f 	movehi s3, 61
   35e38:	20 00 00 88 	store_32 s1, (s0)
   35e3c:	22 30 1c 00 	or s1, s2, 1804
   35e40:	40 fc ff 0f 	move s2, -1
   35e44:	40 10 00 88 	store_32 s2, 4(s0)
   35e48:	5f fc 7f 4f 	movehi s2, 262143
   35e4c:	21 00 00 a8 	load_32 s1, (s1)
   35e50:	20 20 00 88 	store_32 s1, 8(s0)
   35e54:	22 fc 7f 00 	or s1, s2, 8191
   35e58:	20 30 00 88 	store_32 s1, 12(s0)
   35e5c:	43 00 43 00 	or s2, s3, 4288
   35e60:	00 40 00 05 	add_i s0, s0, 16
   35e64:	02 00 00 88 	store_32 s0, (s2)
   35e68:	1f 00 00 f0 	ret

0000000000035e6c R_AddLine:
   35e6c:	de 03 ff 05 	add_i sp, sp, -64
   35e70:	1e f3 00 88 	store_32 s24, 60(sp)
   35e74:	3e e3 00 88 	store_32 s25, 56(sp)
   35e78:	5e d3 00 88 	store_32 s26, 52(sp)
   35e7c:	7e c3 00 88 	store_32 s27, 48(sp)
   35e80:	fe b3 00 88 	store_32 ra, 44(sp)
   35e84:	3c 04 00 4f 	movehi s1, 60
   35e88:	00 03 f0 c0 	move s24, s0
   35e8c:	41 c3 02 00 	or s26, s1, 176
   35e90:	1a 03 00 88 	store_32 s24, (s26)
   35e94:	38 00 00 a8 	load_32 s1, (s24)
   35e98:	01 00 00 a8 	load_32 s0, (s1)
   35e9c:	21 10 00 a8 	load_32 s1, 4(s1)
   35ea0:	ac 0c 00 f8 	call 12976 <R_PointToAngle>
   35ea4:	38 10 00 a8 	load_32 s1, 4(s24)
   35ea8:	20 03 f0 c0 	move s25, s0
   35eac:	01 00 00 a8 	load_32 s0, (s1)
   35eb0:	21 10 00 a8 	load_32 s1, 4(s1)
   35eb4:	a7 0c 00 f8 	call 12956 <R_PointToAngle>
   35eb8:	39 00 60 c0 	sub_i s1, s25, s0
   35ebc:	41 00 00 14 	cmplt_i s2, s1, 0
   35ec0:	62 0e 00 f4 	bnz s2, 460 <R_AddLine+0x220>
   35ec4:	52 08 00 4f 	movehi s2, 82
   35ec8:	7f 04 00 4f 	movehi s3, 63
   35ecc:	9e 04 00 4f 	movehi s4, 62
   35ed0:	42 20 4a 00 	or s2, s2, 4744
   35ed4:	63 b0 04 00 	or s3, s3, 300
   35ed8:	22 03 00 88 	store_32 s25, (s2)
   35edc:	44 b0 50 00 	or s2, s4, 5164
   35ee0:	a3 00 00 a8 	load_32 s5, (s3)
   35ee4:	62 00 00 a8 	load_32 s3, (s2)
   35ee8:	59 80 62 c0 	sub_i s2, s25, s5
   35eec:	83 04 00 0b 	shl s4, s3, 1
   35ef0:	c2 80 51 c0 	add_i s6, s2, s3
   35ef4:	e6 00 92 c1 	cmple_u s7, s6, s4
   35ef8:	a7 00 00 f4 	bnz s7, 20 <R_AddLine+0xa0>
   35efc:	46 00 62 c0 	sub_i s2, s6, s4
   35f00:	c2 80 70 c1 	cmpge_u s6, s2, s1
   35f04:	40 80 f1 c0 	move s2, s3
   35f08:	26 0c 00 f4 	bnz s6, 388 <R_AddLine+0x220>
   35f0c:	00 80 62 c0 	sub_i s0, s0, s5
   35f10:	a3 00 60 c0 	sub_i s5, s3, s0
   35f14:	c5 00 92 c1 	cmple_u s6, s5, s4
   35f18:	c6 00 00 f4 	bnz s6, 24 <R_AddLine+0xc4>
   35f1c:	05 00 62 c0 	sub_i s0, s5, s4
   35f20:	00 80 70 c1 	cmpge_u s0, s0, s1
   35f24:	40 0b 00 f4 	bnz s0, 360 <R_AddLine+0x220>
   35f28:	00 00 00 0f 	move s0, 0
   35f2c:	00 80 61 c0 	sub_i s0, s0, s3
   35f30:	20 00 40 4f 	movehi s1, 131072
   35f34:	42 80 50 c0 	add_i s2, s2, s1
   35f38:	00 80 50 c0 	add_i s0, s0, s1
   35f3c:	3f 04 00 4f 	movehi s1, 63
   35f40:	63 00 00 4f 	movehi s3, 3
   35f44:	42 44 00 0a 	shr s2, s2, 17
   35f48:	00 44 00 0a 	shr s0, s0, 17
   35f4c:	21 d0 04 00 	or s1, s1, 308
   35f50:	63 f0 7f 00 	or s3, s3, 8188
   35f54:	42 80 11 c0 	and s2, s2, s3
   35f58:	00 80 11 c0 	and s0, s0, s3
   35f5c:	41 00 51 c0 	add_i s2, s1, s2
   35f60:	21 00 50 c0 	add_i s1, s1, s0
   35f64:	02 00 00 a8 	load_32 s0, (s2)
   35f68:	21 03 00 a8 	load_32 s25, (s1)
   35f6c:	20 80 0c c1 	cmpeq_i s1, s0, s25
   35f70:	e1 08 00 f4 	bnz s1, 284 <R_AddLine+0x220>
   35f74:	3c 04 00 4f 	movehi s1, 60
   35f78:	41 b0 02 00 	or s2, s1, 172
   35f7c:	38 70 00 a8 	load_32 s1, 28(s24)
   35f80:	22 00 00 88 	store_32 s1, (s2)
   35f84:	01 08 00 f2 	bz s1, 256 <R_AddLine+0x218>
   35f88:	5d 04 00 4f 	movehi s2, 61
   35f8c:	61 10 00 a8 	load_32 s3, 4(s1)
   35f90:	42 e0 42 00 	or s2, s2, 4280
   35f94:	42 00 00 a8 	load_32 s2, (s2)
   35f98:	82 00 00 a8 	load_32 s4, (s2)
   35f9c:	a3 00 52 c1 	cmple_i s5, s3, s4
   35fa0:	25 07 00 f4 	bnz s5, 228 <R_AddLine+0x218>
   35fa4:	c1 00 00 a8 	load_32 s6, (s1)
   35fa8:	a2 10 00 a8 	load_32 s5, 4(s2)
   35fac:	e6 80 32 c1 	cmpge_i s7, s6, s5
   35fb0:	a7 06 00 f4 	bnz s7, 212 <R_AddLine+0x218>
   35fb4:	86 00 12 c1 	cmpne_i s4, s6, s4
   35fb8:	64 02 00 f4 	bnz s4, 76 <R_AddLine+0x198>
   35fbc:	63 80 12 c1 	cmpne_i s3, s3, s5
   35fc0:	23 02 00 f4 	bnz s3, 68 <R_AddLine+0x198>
   35fc4:	61 28 00 a4 	load_u16 s3, 10(s1)
   35fc8:	82 28 00 a4 	load_u16 s4, 10(s2)
   35fcc:	63 00 12 c1 	cmpne_i s3, s3, s4
   35fd0:	a3 01 00 f4 	bnz s3, 52 <R_AddLine+0x198>
   35fd4:	61 20 00 a4 	load_u16 s3, 8(s1)
   35fd8:	82 20 00 a4 	load_u16 s4, 8(s2)
   35fdc:	63 00 12 c1 	cmpne_i s3, s3, s4
   35fe0:	23 01 00 f4 	bnz s3, 36 <R_AddLine+0x198>
   35fe4:	21 30 00 a4 	load_u16 s1, 12(s1)
   35fe8:	42 30 00 a4 	load_u16 s2, 12(s2)
   35fec:	21 00 11 c1 	cmpne_i s1, s1, s2
   35ff0:	a1 00 00 f4 	bnz s1, 20 <R_AddLine+0x198>
   35ff4:	3a 00 00 a8 	load_32 s1, (s26)
   35ff8:	21 40 00 a8 	load_32 s1, 16(s1)
   35ffc:	21 30 00 a4 	load_u16 s1, 12(s1)
   36000:	61 04 00 f2 	bz s1, 140 <R_AddLine+0x220>
   36004:	3d 04 00 4f 	movehi s1, 61
   36008:	40 fc ff 05 	add_i s2, s0, -1
   3600c:	61 20 43 00 	or s3, s1, 4296
   36010:	40 83 f1 c0 	move s26, s3
   36014:	3a 10 00 a8 	load_32 s1, 4(s26)
   36018:	7a 20 00 05 	add_i s3, s26, 8
   3601c:	81 00 41 c1 	cmplt_i s4, s1, s2
   36020:	84 ff ff f5 	bnz s4, -16 <R_AddLine+0x1a4>
   36024:	5a 00 00 a8 	load_32 s2, (s26)
   36028:	19 ff ff 05 	add_i s24, s25, -1
   3602c:	62 00 50 c1 	cmple_i s3, s2, s0
   36030:	e3 00 00 f4 	bnz s3, 28 <R_AddLine+0x1e0>
   36034:	22 80 5c c1 	cmple_i s1, s2, s25
   36038:	41 00 00 f4 	bnz s1, 8 <R_AddLine+0x1d4>
   3603c:	1b 00 00 f6 	b 108 <R_AddLine+0x23c>
   36040:	22 fc ff 05 	add_i s1, s2, -1
   36044:	16 16 00 f8 	call 22616 <R_StoreWallRange>
   36048:	3a 10 00 a8 	load_32 s1, 4(s26)
   3604c:	01 00 3c c1 	cmpge_i s0, s1, s24
   36050:	e0 01 00 f4 	bnz s0, 60 <R_AddLine+0x220>
   36054:	5a 20 00 a8 	load_32 s2, 8(s26)
   36058:	01 04 00 05 	add_i s0, s1, 1
   3605c:	62 80 2c c1 	cmpgt_i s3, s2, s25
   36060:	43 02 00 f4 	bnz s3, 72 <R_AddLine+0x23c>
   36064:	22 fc ff 05 	add_i s1, s2, -1
   36068:	7a 23 00 05 	add_i s27, s26, 8
   3606c:	0c 16 00 f8 	call 22576 <R_StoreWallRange>
   36070:	3a 30 00 a8 	load_32 s1, 12(s26)
   36074:	40 83 fd c0 	move s26, s27
   36078:	01 00 4c c1 	cmplt_i s0, s1, s24
   3607c:	c0 fe ff f5 	bnz s0, -40 <R_AddLine+0x1e8>
   36080:	03 00 00 f6 	b 12 <R_AddLine+0x220>
   36084:	39 fc ff 05 	add_i s1, s25, -1
   36088:	d7 fe ff f9 	call -1188 <R_ClipSolidWallSegment>
   3608c:	fe b3 00 a8 	load_32 ra, 44(sp)
   36090:	7e c3 00 a8 	load_32 s27, 48(sp)
   36094:	5e d3 00 a8 	load_32 s26, 52(sp)
   36098:	3e e3 00 a8 	load_32 s25, 56(sp)
   3609c:	1e f3 00 a8 	load_32 s24, 60(sp)
   360a0:	de 03 01 05 	add_i sp, sp, 64
   360a4:	1f 00 00 f0 	ret
   360a8:	20 00 fc c0 	move s1, s24
   360ac:	fc 15 00 f8 	call 22512 <R_StoreWallRange>
   360b0:	f7 ff ff f7 	b -36 <R_AddLine+0x220>

00000000000360b4 R_CheckBBox:
   360b4:	de 03 ff 05 	add_i sp, sp, -64
   360b8:	1e f3 00 88 	store_32 s24, 60(sp)
   360bc:	3e e3 00 88 	store_32 s25, 56(sp)
   360c0:	5e d3 00 88 	store_32 s26, 52(sp)
   360c4:	7e c3 00 88 	store_32 s27, 48(sp)
   360c8:	fe b3 00 88 	store_32 ra, 44(sp)
   360cc:	21 08 00 4f 	movehi s1, 65
   360d0:	21 00 05 00 	or s1, s1, 320
   360d4:	61 00 00 a8 	load_32 s3, (s1)
   360d8:	20 20 00 a8 	load_32 s1, 8(s0)
   360dc:	83 80 50 c1 	cmple_i s4, s3, s1
   360e0:	20 00 00 0f 	move s1, 0
   360e4:	40 80 f0 c0 	move s2, s1
   360e8:	e4 00 00 f4 	bnz s4, 28 <R_CheckBBox+0x50>
   360ec:	40 30 00 a8 	load_32 s2, 12(s0)
   360f0:	43 00 41 c1 	cmplt_i s2, s3, s2
   360f4:	62 00 00 f4 	bnz s2, 12 <R_CheckBBox+0x4c>
   360f8:	40 08 00 0f 	move s2, 2
   360fc:	02 00 00 f6 	b 8 <R_CheckBBox+0x50>
   36100:	40 04 00 0f 	move s2, 1
   36104:	61 08 00 4f 	movehi s3, 65
   36108:	63 10 05 00 	or s3, s3, 324
   3610c:	63 00 00 a8 	load_32 s3, (s3)
   36110:	80 00 00 a8 	load_32 s4, (s0)
   36114:	83 00 32 c1 	cmpge_i s4, s3, s4
   36118:	a4 00 00 f4 	bnz s4, 20 <R_CheckBBox+0x78>
   3611c:	20 10 00 a8 	load_32 s1, 4(s0)
   36120:	23 80 20 c1 	cmpgt_i s1, s3, s1
   36124:	e1 00 00 f4 	bnz s1, 28 <R_CheckBBox+0x8c>
   36128:	20 20 00 0f 	move s1, 8
   3612c:	21 00 01 c0 	or s1, s1, s2
   36130:	00 07 00 0f 	move s24, 1
   36134:	41 14 00 10 	cmpeq_i s2, s1, 5
   36138:	02 0a 00 f4 	bnz s2, 320 <R_CheckBBox+0x1c4>
   3613c:	06 00 00 f6 	b 24 <R_CheckBBox+0xa0>
   36140:	20 10 00 0f 	move s1, 4
   36144:	21 00 01 c0 	or s1, s1, s2
   36148:	00 07 00 0f 	move s24, 1
   3614c:	41 14 00 10 	cmpeq_i s2, s1, 5
   36150:	42 09 00 f4 	bnz s2, 296 <R_CheckBBox+0x1c4>
   36154:	54 04 00 4f 	movehi s2, 52
   36158:	21 10 00 0b 	shl s1, s1, 4
   3615c:	42 10 13 00 	or s2, s2, 1220
   36160:	62 80 50 c0 	add_i s3, s2, s1
   36164:	23 00 00 a8 	load_32 s1, (s3)
   36168:	21 08 00 0b 	shl s1, s1, 2
   3616c:	20 80 50 c0 	add_i s1, s0, s1
   36170:	41 00 00 a8 	load_32 s2, (s1)
   36174:	23 10 00 a8 	load_32 s1, 4(s3)
   36178:	21 08 00 0b 	shl s1, s1, 2
   3617c:	20 80 50 c0 	add_i s1, s0, s1
   36180:	21 00 00 a8 	load_32 s1, (s1)
   36184:	83 20 00 a8 	load_32 s4, 8(s3)
   36188:	84 08 00 0b 	shl s4, s4, 2
   3618c:	80 00 52 c0 	add_i s4, s0, s4
   36190:	84 00 00 a8 	load_32 s4, (s4)
   36194:	9e a0 00 88 	store_32 s4, 40(sp)
   36198:	63 30 00 a8 	load_32 s3, 12(s3)
   3619c:	63 08 00 0b 	shl s3, s3, 2
   361a0:	00 80 51 c0 	add_i s0, s0, s3
   361a4:	40 03 00 a8 	load_32 s26, (s0)
   361a8:	00 00 f1 c0 	move s0, s2
   361ac:	e9 0b 00 f8 	call 12196 <R_PointToAngle>
   361b0:	3f 04 00 4f 	movehi s1, 63
   361b4:	61 b3 04 00 	or s27, s1, 300
   361b8:	3b 00 00 a8 	load_32 s1, (s27)
   361bc:	20 83 60 c0 	sub_i s25, s0, s1
   361c0:	1e a0 00 a8 	load_32 s0, 40(sp)
   361c4:	20 00 fd c0 	move s1, s26
   361c8:	e2 0b 00 f8 	call 12168 <R_PointToAngle>
   361cc:	3b 00 00 a8 	load_32 s1, (s27)
   361d0:	00 80 60 c0 	sub_i s0, s0, s1
   361d4:	39 00 60 c0 	sub_i s1, s25, s0
   361d8:	41 00 00 14 	cmplt_i s2, s1, 0
   361dc:	e2 04 00 f4 	bnz s2, 156 <R_CheckBBox+0x1c4>
   361e0:	5e 04 00 4f 	movehi s2, 62
   361e4:	42 b0 50 00 	or s2, s2, 5164
   361e8:	42 00 00 a8 	load_32 s2, (s2)
   361ec:	82 80 5c c0 	add_i s4, s2, s25
   361f0:	62 04 00 0b 	shl s3, s2, 1
   361f4:	a4 80 91 c1 	cmple_u s5, s4, s3
   361f8:	a5 00 00 f4 	bnz s5, 20 <R_CheckBBox+0x158>
   361fc:	84 80 61 c0 	sub_i s4, s4, s3
   36200:	20 03 f1 c0 	move s25, s2
   36204:	84 80 70 c1 	cmpge_u s4, s4, s1
   36208:	64 03 00 f4 	bnz s4, 108 <R_CheckBBox+0x1c0>
   3620c:	82 00 60 c0 	sub_i s4, s2, s0
   36210:	a4 80 91 c1 	cmple_u s5, s4, s3
   36214:	c5 00 00 f4 	bnz s5, 24 <R_CheckBBox+0x178>
   36218:	04 80 61 c0 	sub_i s0, s4, s3
   3621c:	00 80 70 c1 	cmpge_u s0, s0, s1
   36220:	a0 02 00 f4 	bnz s0, 84 <R_CheckBBox+0x1c0>
   36224:	00 00 00 0f 	move s0, 0
   36228:	00 00 61 c0 	sub_i s0, s0, s2
   3622c:	20 00 40 4f 	movehi s1, 131072
   36230:	59 80 50 c0 	add_i s2, s25, s1
   36234:	00 80 50 c0 	add_i s0, s0, s1
   36238:	3f 04 00 4f 	movehi s1, 63
   3623c:	63 00 00 4f 	movehi s3, 3
   36240:	42 44 00 0a 	shr s2, s2, 17
   36244:	00 44 00 0a 	shr s0, s0, 17
   36248:	21 d0 04 00 	or s1, s1, 308
   3624c:	63 f0 7f 00 	or s3, s3, 8188
   36250:	42 80 11 c0 	and s2, s2, s3
   36254:	00 80 11 c0 	and s0, s0, s3
   36258:	41 00 51 c0 	add_i s2, s1, s2
   3625c:	21 00 50 c0 	add_i s1, s1, s0
   36260:	02 00 00 a8 	load_32 s0, (s2)
   36264:	21 00 00 a8 	load_32 s1, (s1)
   36268:	40 80 00 c1 	cmpeq_i s2, s0, s1
   3626c:	42 00 00 f4 	bnz s2, 8 <R_CheckBBox+0x1c0>
   36270:	0a 00 00 f6 	b 40 <R_CheckBBox+0x1e4>
   36274:	00 03 00 0f 	move s24, 0
   36278:	00 00 fc c0 	move s0, s24
   3627c:	fe b3 00 a8 	load_32 ra, 44(sp)
   36280:	7e c3 00 a8 	load_32 s27, 48(sp)
   36284:	5e d3 00 a8 	load_32 s26, 52(sp)
   36288:	3e e3 00 a8 	load_32 s25, 56(sp)
   3628c:	1e f3 00 a8 	load_32 s24, 60(sp)
   36290:	de 03 01 05 	add_i sp, sp, 64
   36294:	1f 00 00 f0 	ret
   36298:	5d 04 00 4f 	movehi s2, 61
   3629c:	21 fc ff 05 	add_i s1, s1, -1
   362a0:	62 20 43 00 	or s3, s2, 4296
   362a4:	40 80 f1 c0 	move s2, s3
   362a8:	62 10 00 a8 	load_32 s3, 4(s2)
   362ac:	83 80 40 c1 	cmplt_i s4, s3, s1
   362b0:	62 20 00 05 	add_i s3, s2, 8
   362b4:	84 ff ff f5 	bnz s4, -16 <R_CheckBBox+0x1f0>
   362b8:	22 00 00 a8 	load_32 s1, (s2)
   362bc:	00 80 40 c1 	cmplt_i s0, s0, s1
   362c0:	00 04 00 01 	and s0, s0, 1
   362c4:	ee ff ff f7 	b -72 <R_CheckBBox+0x1c8>

00000000000362c8 R_Subsector:
   362c8:	de 03 fe 05 	add_i sp, sp, -128
   362cc:	1e f3 01 88 	store_32 s24, 124(sp)
   362d0:	3e e3 01 88 	store_32 s25, 120(sp)
   362d4:	5e d3 01 88 	store_32 s26, 116(sp)
   362d8:	7e c3 01 88 	store_32 s27, 112(sp)
   362dc:	fe b3 01 88 	store_32 ra, 108(sp)
   362e0:	3b 04 00 4f 	movehi s1, 59
   362e4:	21 b0 4a 00 	or s1, s1, 4780
   362e8:	21 00 00 a8 	load_32 s1, (s1)
   362ec:	00 03 f0 c0 	move s24, s0
   362f0:	01 00 2c c1 	cmpgt_i s0, s1, s24
   362f4:	e0 00 00 f4 	bnz s0, 28 <R_Subsector+0x48>
   362f8:	00 00 00 4f 	movehi s0, 0
   362fc:	3e 20 00 88 	store_32 s1, 8(sp)
   36300:	1e 13 00 88 	store_32 s24, 4(sp)
   36304:	00 20 54 00 	or s0, s0, 5384
   36308:	1e 00 00 88 	store_32 s0, (sp)
   3630c:	7e 5f ff f9 	call -164360 <I_Error>
   36310:	1f 04 00 4f 	movehi s0, 63
   36314:	5b 04 00 4f 	movehi s2, 59
   36318:	61 08 00 4f 	movehi s3, 65
   3631c:	00 90 04 00 	or s0, s0, 292
   36320:	42 b0 4b 00 	or s2, s2, 4844
   36324:	63 23 05 00 	or s27, s3, 328
   36328:	20 00 00 a8 	load_32 s1, (s0)
   3632c:	21 04 00 05 	add_i s1, s1, 1
   36330:	20 00 00 88 	store_32 s1, (s0)
   36334:	02 00 00 a8 	load_32 s0, (s2)
   36338:	3d 04 00 4f 	movehi s1, 61
   3633c:	58 0c 00 0b 	shl s2, s24, 3
   36340:	00 03 00 0f 	move s24, 0
   36344:	41 e3 42 00 	or s26, s1, 4280
   36348:	3b 04 00 4f 	movehi s1, 59
   3634c:	40 00 51 c0 	add_i s2, s0, s2
   36350:	21 90 4b 00 	or s1, s1, 4836
   36354:	02 00 00 a8 	load_32 s0, (s2)
   36358:	1a 00 00 88 	store_32 s0, (s26)
   3635c:	22 13 00 a6 	load_s16 s25, 4(s2)
   36360:	21 00 00 a8 	load_32 s1, (s1)
   36364:	3e a0 01 88 	store_32 s1, 104(sp)
   36368:	22 18 00 a6 	load_s16 s1, 6(s2)
   3636c:	3e 90 01 88 	store_32 s1, 100(sp)
   36370:	60 00 00 a8 	load_32 s3, (s0)
   36374:	5b 00 00 a8 	load_32 s2, (s27)
   36378:	23 00 31 c1 	cmpge_i s1, s3, s2
   3637c:	21 01 00 f4 	bnz s1, 36 <R_Subsector+0xd8>
   36380:	20 20 00 a6 	load_s16 s1, 8(s0)
   36384:	40 30 00 a6 	load_s16 s2, 12(s0)
   36388:	00 80 f1 c0 	move s0, s3
   3638c:	c3 10 00 f8 	call 17164 <R_FindPlane>
   36390:	20 00 f0 c0 	move s1, s0
   36394:	1a 00 00 a8 	load_32 s0, (s26)
   36398:	5b 00 00 a8 	load_32 s2, (s27)
   3639c:	02 00 00 f6 	b 8 <R_Subsector+0xdc>
   363a0:	20 00 fc c0 	move s1, s24
   363a4:	62 08 00 4f 	movehi s3, 66
   363a8:	63 90 73 00 	or s3, s3, 7396
   363ac:	23 00 00 88 	store_32 s1, (s3)
   363b0:	32 08 00 4f 	movehi s1, 82
   363b4:	60 10 00 a8 	load_32 s3, 4(s0)
   363b8:	81 70 4b 00 	or s4, s1, 4828
   363bc:	20 28 00 a6 	load_s16 s1, 10(s0)
   363c0:	a3 00 21 c1 	cmpgt_i s5, s3, s2
   363c4:	44 00 00 a8 	load_32 s2, (s4)
   363c8:	65 00 00 f4 	bnz s5, 12 <R_Subsector+0x10c>
   363cc:	42 80 10 c1 	cmpne_i s2, s2, s1
   363d0:	c2 00 00 f4 	bnz s2, 24 <R_Subsector+0x120>
   363d4:	40 30 00 a6 	load_s16 s2, 12(s0)
   363d8:	00 80 f1 c0 	move s0, s3
   363dc:	af 10 00 f8 	call 17084 <R_FindPlane>
   363e0:	00 03 f0 c0 	move s24, s0
   363e4:	1a 00 00 a8 	load_32 s0, (s26)
   363e8:	22 08 00 4f 	movehi s1, 66
   363ec:	21 70 55 00 	or s1, s1, 5468
   363f0:	01 03 00 88 	store_32 s24, (s1)
   363f4:	c9 1c 00 f8 	call 29476 <R_AddSprites>
   363f8:	59 01 00 f2 	bz s25, 40 <R_Subsector+0x158>
   363fc:	1e 90 01 a8 	load_32 s0, 100(sp)
   36400:	3e a0 01 a8 	load_32 s1, 104(sp)
   36404:	00 14 00 0b 	shl s0, s0, 5
   36408:	01 03 50 c0 	add_i s24, s1, s0
   3640c:	00 00 fc c0 	move s0, s24
   36410:	39 ff ff 05 	add_i s25, s25, -1
   36414:	96 fe ff f9 	call -1448 <R_AddLine>
   36418:	18 83 00 05 	add_i s24, s24, 32
   3641c:	99 ff ff f5 	bnz s25, -16 <R_Subsector+0x144>
   36420:	fe b3 01 a8 	load_32 ra, 108(sp)
   36424:	7e c3 01 a8 	load_32 s27, 112(sp)
   36428:	5e d3 01 a8 	load_32 s26, 116(sp)
   3642c:	3e e3 01 a8 	load_32 s25, 120(sp)
   36430:	1e f3 01 a8 	load_32 s24, 124(sp)
   36434:	de 03 02 05 	add_i sp, sp, 128
   36438:	1f 00 00 f0 	ret

000000000003643c R_RenderBSPNode:
   3643c:	de 03 ff 05 	add_i sp, sp, -64
   36440:	1e f3 00 88 	store_32 s24, 60(sp)
   36444:	3e e3 00 88 	store_32 s25, 56(sp)
   36448:	5e d3 00 88 	store_32 s26, 52(sp)
   3644c:	7e c3 00 88 	store_32 s27, 48(sp)
   36450:	fe b3 00 88 	store_32 ra, 44(sp)
   36454:	44 03 00 4f 	movehi s26, 4
   36458:	20 00 1d c0 	and s1, s0, s26
   3645c:	61 04 00 f4 	bnz s1, 140 <R_RenderBSPNode+0xac>
   36460:	61 08 00 4f 	movehi s3, 65
   36464:	3b 04 00 4f 	movehi s1, 59
   36468:	41 08 00 4f 	movehi s2, 65
   3646c:	63 13 05 00 	or s27, s3, 324
   36470:	21 50 4a 00 	or s1, s1, 4756
   36474:	3e a0 00 88 	store_32 s1, 40(sp)
   36478:	22 00 05 00 	or s1, s2, 320
   3647c:	3e 90 00 88 	store_32 s1, 36(sp)
   36480:	3e a0 00 a8 	load_32 s1, 40(sp)
   36484:	00 d0 00 07 	mull_i s0, s0, 52
   36488:	21 00 00 a8 	load_32 s1, (s1)
   3648c:	01 03 50 c0 	add_i s24, s1, s0
   36490:	1e 90 00 a8 	load_32 s0, 36(sp)
   36494:	00 00 00 a8 	load_32 s0, (s0)
   36498:	3b 00 00 a8 	load_32 s1, (s27)
   3649c:	40 00 fc c0 	move s2, s24
   364a0:	bf 0a 00 f8 	call 11004 <R_PointOnSide>
   364a4:	20 03 f0 c0 	move s25, s0
   364a8:	19 04 00 0b 	shl s0, s25, 1
   364ac:	18 00 50 c0 	add_i s0, s24, s0
   364b0:	00 c0 00 a4 	load_u16 s0, 48(s0)
   364b4:	e2 ff ff f9 	call -120 <R_RenderBSPNode>
   364b8:	39 07 00 03 	xor s25, s25, 1
   364bc:	19 10 00 0b 	shl s0, s25, 4
   364c0:	18 00 50 c0 	add_i s0, s24, s0
   364c4:	00 40 00 05 	add_i s0, s0, 16
   364c8:	fb fe ff f9 	call -1044 <R_CheckBBox>
   364cc:	00 02 00 f2 	bz s0, 64 <R_RenderBSPNode+0xd0>
   364d0:	19 04 00 0b 	shl s0, s25, 1
   364d4:	18 00 50 c0 	add_i s0, s24, s0
   364d8:	00 c0 00 a4 	load_u16 s0, 48(s0)
   364dc:	20 00 1d c0 	and s1, s0, s26
   364e0:	01 fd ff f3 	bz s1, -96 <R_RenderBSPNode+0x44>
   364e4:	04 00 00 f6 	b 16 <R_RenderBSPNode+0xb8>
   364e8:	20 fc ff 11 	cmpne_i s1, s0, -1
   364ec:	41 00 00 f4 	bnz s1, 8 <R_RenderBSPNode+0xb8>
   364f0:	05 00 00 f6 	b 20 <R_RenderBSPNode+0xc8>
   364f4:	3b fc ff 4f 	movehi s1, 524283
   364f8:	21 fc 7f 00 	or s1, s1, 8191
   364fc:	00 80 10 c0 	and s0, s0, s1
   36500:	02 00 00 f6 	b 8 <R_RenderBSPNode+0xcc>
   36504:	00 00 00 0f 	move s0, 0
   36508:	70 ff ff f9 	call -576 <R_Subsector>
   3650c:	fe b3 00 a8 	load_32 ra, 44(sp)
   36510:	7e c3 00 a8 	load_32 s27, 48(sp)
   36514:	5e d3 00 a8 	load_32 s26, 52(sp)
   36518:	3e e3 00 a8 	load_32 s25, 56(sp)
   3651c:	1e f3 00 a8 	load_32 s24, 60(sp)
   36520:	de 03 01 05 	add_i sp, sp, 64
   36524:	1f 00 00 f0 	ret

0000000000036528 R_DrawColumnInCache:
   36528:	de 03 ff 05 	add_i sp, sp, -64
   3652c:	1e f3 00 88 	store_32 s24, 60(sp)
   36530:	3e e3 00 88 	store_32 s25, 56(sp)
   36534:	5e d3 00 88 	store_32 s26, 52(sp)
   36538:	7e c3 00 88 	store_32 s27, 48(sp)
   3653c:	fe b3 00 88 	store_32 ra, 44(sp)
   36540:	60 03 f0 c0 	move s27, s0
   36544:	1b 00 00 a0 	load_u8 s0, (s27)
   36548:	00 83 f1 c0 	move s24, s3
   3654c:	20 03 f1 c0 	move s25, s2
   36550:	3e a0 00 88 	store_32 s1, 40(sp)
   36554:	80 fc 03 10 	cmpeq_i s4, s0, 255
   36558:	a4 03 00 f4 	bnz s4, 116 <R_DrawColumnInCache+0xa4>
   3655c:	40 03 00 0f 	move s26, 0
   36560:	00 fc 03 01 	and s0, s0, 255
   36564:	20 80 5c c0 	add_i s1, s0, s25
   36568:	1b 04 00 a0 	load_u8 s0, 1(s27)
   3656c:	60 00 fd c0 	move s3, s26
   36570:	41 00 00 14 	cmplt_i s2, s1, 0
   36574:	42 00 00 f4 	bnz s2, 8 <R_DrawColumnInCache+0x54>
   36578:	60 80 f0 c0 	move s3, s1
   3657c:	41 7c 00 09 	ashr s2, s1, 31
   36580:	22 80 10 c0 	and s1, s2, s1
   36584:	41 00 50 c0 	add_i s2, s1, s0
   36588:	22 80 51 c0 	add_i s1, s2, s3
   3658c:	21 00 2c c1 	cmpgt_i s1, s1, s24
   36590:	41 00 00 f4 	bnz s1, 8 <R_DrawColumnInCache+0x70>
   36594:	02 00 00 f6 	b 8 <R_DrawColumnInCache+0x74>
   36598:	58 80 61 c0 	sub_i s2, s24, s3
   3659c:	22 04 00 14 	cmplt_i s1, s2, 1
   365a0:	c1 00 00 f4 	bnz s1, 24 <R_DrawColumnInCache+0x90>
   365a4:	1e a0 00 a8 	load_32 s0, 40(sp)
   365a8:	3b 0c 00 05 	add_i s1, s27, 3
   365ac:	00 80 51 c0 	add_i s0, s0, s3
   365b0:	d5 6d 00 f8 	call 112468 <memcpy>
   365b4:	1b 04 00 a0 	load_u8 s0, 1(s27)
   365b8:	3b 00 50 c0 	add_i s1, s27, s0
   365bc:	01 10 00 a0 	load_u8 s0, 4(s1)
   365c0:	61 13 00 05 	add_i s27, s1, 4
   365c4:	40 fc 03 11 	cmpne_i s2, s0, 255
   365c8:	c2 fc ff f5 	bnz s2, -104 <R_DrawColumnInCache+0x38>
   365cc:	fe b3 00 a8 	load_32 ra, 44(sp)
   365d0:	7e c3 00 a8 	load_32 s27, 48(sp)
   365d4:	5e d3 00 a8 	load_32 s26, 52(sp)
   365d8:	3e e3 00 a8 	load_32 s25, 56(sp)
   365dc:	1e f3 00 a8 	load_32 s24, 60(sp)
   365e0:	de 03 01 05 	add_i sp, sp, 64
   365e4:	1f 00 00 f0 	ret

00000000000365e8 R_GenerateComposite:
   365e8:	de 03 fd 05 	add_i sp, sp, -192
   365ec:	1e f3 02 88 	store_32 s24, 188(sp)
   365f0:	3e e3 02 88 	store_32 s25, 184(sp)
   365f4:	5e d3 02 88 	store_32 s26, 180(sp)
   365f8:	7e c3 02 88 	store_32 s27, 176(sp)
   365fc:	fe b3 02 88 	store_32 ra, 172(sp)
   36600:	3d 04 00 4f 	movehi s1, 61
   36604:	5d 04 00 4f 	movehi s2, 61
   36608:	00 0b 00 0b 	shl s24, s0, 2
   3660c:	21 90 48 00 	or s1, s1, 4644
   36610:	21 00 00 a8 	load_32 s1, (s1)
   36614:	01 00 5c c0 	add_i s0, s1, s24
   36618:	22 60 48 00 	or s1, s2, 4632
   3661c:	20 03 00 a8 	load_32 s25, (s0)
   36620:	01 00 00 a8 	load_32 s0, (s1)
   36624:	3d 04 00 4f 	movehi s1, 61
   36628:	21 50 48 00 	or s1, s1, 4628
   3662c:	00 00 5c c0 	add_i s0, s0, s24
   36630:	00 00 00 a8 	load_32 s0, (s0)
   36634:	21 00 00 a8 	load_32 s1, (s1)
   36638:	41 00 5c c0 	add_i s2, s1, s24
   3663c:	20 04 00 0f 	move s1, 1
   36640:	a6 58 00 f8 	call 90776 <Z_Malloc>
   36644:	3d 04 00 4f 	movehi s1, 61
   36648:	5d 04 00 4f 	movehi s2, 61
   3664c:	21 30 48 00 	or s1, s1, 4620
   36650:	42 40 48 00 	or s2, s2, 4624
   36654:	21 00 00 a8 	load_32 s1, (s1)
   36658:	21 00 5c c0 	add_i s1, s1, s24
   3665c:	21 00 00 a8 	load_32 s1, (s1)
   36660:	3e 70 02 88 	store_32 s1, 156(sp)
   36664:	22 00 00 a8 	load_32 s1, (s2)
   36668:	21 00 5c c0 	add_i s1, s1, s24
   3666c:	21 00 00 a8 	load_32 s1, (s1)
   36670:	3e 10 02 88 	store_32 s1, 132(sp)
   36674:	3e 63 02 88 	store_32 s25, 152(sp)
   36678:	39 30 00 a6 	load_s16 s1, 12(s25)
   3667c:	1e 00 02 88 	store_32 s0, 128(sp)
   36680:	21 04 00 14 	cmplt_i s1, s1, 1
   36684:	41 0c 00 f4 	bnz s1, 392 <R_GenerateComposite+0x224>
   36688:	1e 60 02 a8 	load_32 s0, 152(sp)
   3668c:	20 94 01 0f 	move s1, 101
   36690:	3e e0 01 88 	store_32 s1, 120(sp)
   36694:	00 43 00 05 	add_i s24, s0, 16
   36698:	00 00 00 0f 	move s0, 0
   3669c:	1e a0 02 88 	store_32 s0, 168(sp)
   366a0:	20 00 f0 c0 	move s1, s0
   366a4:	3e f0 01 88 	store_32 s1, 124(sp)
   366a8:	18 20 00 a8 	load_32 s0, 8(s24)
   366ac:	3e e0 01 a8 	load_32 s1, 120(sp)
   366b0:	da 21 00 f8 	call 34664 <W_CacheLumpNum>
   366b4:	58 03 00 a8 	load_32 s26, (s24)
   366b8:	1e 40 02 88 	store_32 s0, 144(sp)
   366bc:	00 00 00 a6 	load_s16 s0, (s0)
   366c0:	5e 33 02 88 	store_32 s26, 140(sp)
   366c4:	3a 00 00 12 	cmpgt_i s1, s26, 0
   366c8:	1a 00 50 c0 	add_i s0, s26, s0
   366cc:	41 00 00 f4 	bnz s1, 8 <R_GenerateComposite+0xec>
   366d0:	5e a3 02 a8 	load_32 s26, 168(sp)
   366d4:	1e 53 02 88 	store_32 s24, 148(sp)
   366d8:	3e 60 02 a8 	load_32 s1, 152(sp)
   366dc:	41 20 00 a6 	load_s16 s2, 8(s1)
   366e0:	20 00 21 c1 	cmpgt_i s1, s0, s2
   366e4:	41 00 00 f4 	bnz s1, 8 <R_GenerateComposite+0x104>
   366e8:	40 00 f0 c0 	move s2, s0
   366ec:	1a 00 31 c1 	cmpge_i s0, s26, s2
   366f0:	e0 07 00 f4 	bnz s0, 252 <R_GenerateComposite+0x204>
   366f4:	1e 40 02 a8 	load_32 s0, 144(sp)
   366f8:	00 20 00 05 	add_i s0, s0, 8
   366fc:	1e 20 02 88 	store_32 s0, 136(sp)
   36700:	5e 80 02 88 	store_32 s2, 160(sp)
   36704:	3e 70 02 a8 	load_32 s1, 156(sp)
   36708:	1a 04 00 0b 	shl s0, s26, 1
   3670c:	21 00 50 c0 	add_i s1, s1, s0
   36710:	21 00 00 a6 	load_s16 s1, (s1)
   36714:	21 fc ff 12 	cmpgt_i s1, s1, -1
   36718:	21 06 00 f4 	bnz s1, 196 <R_GenerateComposite+0x1f4>
   3671c:	3e 30 02 a8 	load_32 s1, 140(sp)
   36720:	5e 20 02 a8 	load_32 s2, 136(sp)
   36724:	3a 80 60 c0 	sub_i s1, s26, s1
   36728:	21 08 00 0b 	shl s1, s1, 2
   3672c:	22 80 50 c0 	add_i s1, s2, s1
   36730:	21 00 00 a8 	load_32 s1, (s1)
   36734:	5e 10 02 a8 	load_32 s2, 132(sp)
   36738:	02 00 50 c0 	add_i s0, s2, s0
   3673c:	5e 40 02 a8 	load_32 s2, 144(sp)
   36740:	62 83 50 c0 	add_i s27, s2, s1
   36744:	20 00 00 a4 	load_u16 s1, (s0)
   36748:	1e 50 02 a8 	load_32 s0, 148(sp)
   3674c:	20 13 00 a8 	load_32 s25, 4(s0)
   36750:	1e 60 02 a8 	load_32 s0, 152(sp)
   36754:	00 2b 00 a6 	load_s16 s24, 10(s0)
   36758:	1b 00 00 a0 	load_u8 s0, (s27)
   3675c:	40 fc 03 10 	cmpeq_i s2, s0, 255
   36760:	e2 03 00 f4 	bnz s2, 124 <R_GenerateComposite+0x1f4>
   36764:	5e 00 02 a8 	load_32 s2, 128(sp)
   36768:	22 80 50 c0 	add_i s1, s2, s1
   3676c:	3e 90 02 88 	store_32 s1, 164(sp)
   36770:	00 fc 03 01 	and s0, s0, 255
   36774:	39 00 50 c0 	add_i s1, s25, s0
   36778:	1b 04 00 a0 	load_u8 s0, 1(s27)
   3677c:	7e a0 02 a8 	load_32 s3, 168(sp)
   36780:	41 00 00 14 	cmplt_i s2, s1, 0
   36784:	42 00 00 f4 	bnz s2, 8 <R_GenerateComposite+0x1a4>
   36788:	60 80 f0 c0 	move s3, s1
   3678c:	41 7c 00 09 	ashr s2, s1, 31
   36790:	22 80 10 c0 	and s1, s2, s1
   36794:	41 00 50 c0 	add_i s2, s1, s0
   36798:	22 80 51 c0 	add_i s1, s2, s3
   3679c:	21 00 2c c1 	cmpgt_i s1, s1, s24
   367a0:	41 00 00 f4 	bnz s1, 8 <R_GenerateComposite+0x1c0>
   367a4:	02 00 00 f6 	b 8 <R_GenerateComposite+0x1c4>
   367a8:	58 80 61 c0 	sub_i s2, s24, s3
   367ac:	22 04 00 14 	cmplt_i s1, s2, 1
   367b0:	c1 00 00 f4 	bnz s1, 24 <R_GenerateComposite+0x1e0>
   367b4:	1e 90 02 a8 	load_32 s0, 164(sp)
   367b8:	3b 0c 00 05 	add_i s1, s27, 3
   367bc:	00 80 51 c0 	add_i s0, s0, s3
   367c0:	51 6d 00 f8 	call 111940 <memcpy>
   367c4:	1b 04 00 a0 	load_u8 s0, 1(s27)
   367c8:	3b 00 50 c0 	add_i s1, s27, s0
   367cc:	01 10 00 a0 	load_u8 s0, 4(s1)
   367d0:	61 13 00 05 	add_i s27, s1, 4
   367d4:	40 fc 03 11 	cmpne_i s2, s0, 255
   367d8:	c2 fc ff f5 	bnz s2, -104 <R_GenerateComposite+0x188>
   367dc:	5e 80 02 a8 	load_32 s2, 160(sp)
   367e0:	5a 07 00 05 	add_i s26, s26, 1
   367e4:	1a 00 41 c1 	cmplt_i s0, s26, s2
   367e8:	e0 f8 ff f5 	bnz s0, -228 <R_GenerateComposite+0x11c>
   367ec:	1e 60 02 a8 	load_32 s0, 152(sp)
   367f0:	00 30 00 a6 	load_s16 s0, 12(s0)
   367f4:	3e f0 01 a8 	load_32 s1, 124(sp)
   367f8:	1e 53 02 a8 	load_32 s24, 148(sp)
   367fc:	21 04 00 05 	add_i s1, s1, 1
   36800:	18 33 00 05 	add_i s24, s24, 12
   36804:	01 00 40 c1 	cmplt_i s0, s1, s0
   36808:	e0 f4 ff f5 	bnz s0, -356 <R_GenerateComposite+0xbc>
   3680c:	1e 00 02 a8 	load_32 s0, 128(sp)
   36810:	2a 1c 00 4f 	movehi s1, 234
   36814:	21 44 28 00 	or s1, s1, 2577
   36818:	00 d0 ff a9 	load_32 s0, -12(s0)
   3681c:	00 80 00 c1 	cmpeq_i s0, s0, s1
   36820:	e0 00 00 f4 	bnz s0, 28 <R_GenerateComposite+0x254>
   36824:	02 00 00 4f 	movehi s0, 2
   36828:	20 84 04 0f 	move s1, 289
   3682c:	3e 10 00 88 	store_32 s1, 4(sp)
   36830:	00 64 24 00 	or s0, s0, 2329
   36834:	1e 00 00 88 	store_32 s0, (sp)
   36838:	33 5e ff f9 	call -165684 <I_Error>
   3683c:	1e 00 02 a8 	load_32 s0, 128(sp)
   36840:	20 94 01 0f 	move s1, 101
   36844:	3f 5a 00 f8 	call 92412 <Z_ChangeTag2>
   36848:	fe b3 02 a8 	load_32 ra, 172(sp)
   3684c:	7e c3 02 a8 	load_32 s27, 176(sp)
   36850:	5e d3 02 a8 	load_32 s26, 180(sp)
   36854:	3e e3 02 a8 	load_32 s25, 184(sp)
   36858:	1e f3 02 a8 	load_32 s24, 188(sp)
   3685c:	de 03 03 05 	add_i sp, sp, 192
   36860:	1f 00 00 f0 	ret

0000000000036864 R_GenerateLookup:
   36864:	de 03 ff 05 	add_i sp, sp, -64
   36868:	1e f3 00 88 	store_32 s24, 60(sp)
   3686c:	3e e3 00 88 	store_32 s25, 56(sp)
   36870:	5e d3 00 88 	store_32 s26, 52(sp)
   36874:	7e c3 00 88 	store_32 s27, 48(sp)
   36878:	be b3 00 88 	store_32 fp, 44(sp)
   3687c:	fe a3 00 88 	store_32 ra, 40(sp)
   36880:	a0 03 ff c0 	move fp, sp
   36884:	3d 04 00 4f 	movehi s1, 61
   36888:	5d 04 00 4f 	movehi s2, 61
   3688c:	60 08 00 0b 	shl s3, s0, 2
   36890:	21 90 48 00 	or s1, s1, 4644
   36894:	21 00 00 a8 	load_32 s1, (s1)
   36898:	1d 30 00 88 	store_32 s0, 12(fp)
   3689c:	02 50 48 00 	or s0, s2, 4628
   368a0:	21 80 51 c0 	add_i s1, s1, s3
   368a4:	81 00 00 a8 	load_32 s4, (s1)
   368a8:	3d 04 00 4f 	movehi s1, 61
   368ac:	9d 80 00 88 	store_32 s4, 32(fp)
   368b0:	00 00 00 a8 	load_32 s0, (s0)
   368b4:	41 60 48 00 	or s2, s1, 4632
   368b8:	20 00 00 0f 	move s1, 0
   368bc:	00 80 51 c0 	add_i s0, s0, s3
   368c0:	20 00 00 88 	store_32 s1, (s0)
   368c4:	5d 40 00 88 	store_32 s2, 16(fp)
   368c8:	02 00 00 a8 	load_32 s0, (s2)
   368cc:	5d 04 00 4f 	movehi s2, 61
   368d0:	42 30 48 00 	or s2, s2, 4620
   368d4:	00 80 51 c0 	add_i s0, s0, s3
   368d8:	20 00 00 88 	store_32 s1, (s0)
   368dc:	02 00 00 a8 	load_32 s0, (s2)
   368e0:	5d 04 00 4f 	movehi s2, 61
   368e4:	42 40 48 00 	or s2, s2, 4624
   368e8:	00 80 51 c0 	add_i s0, s0, s3
   368ec:	60 03 00 a8 	load_32 s27, (s0)
   368f0:	02 00 00 a8 	load_32 s0, (s2)
   368f4:	7d 50 00 88 	store_32 s3, 20(fp)
   368f8:	00 80 51 c0 	add_i s0, s0, s3
   368fc:	00 03 00 a8 	load_32 s24, (s0)
   36900:	24 23 00 a6 	load_s16 s25, 8(s4)
   36904:	19 fc 00 05 	add_i s0, s25, 63
   36908:	00 00 ff 01 	and s0, s0, -64
   3690c:	5e 03 60 c0 	sub_i s26, sp, s0
   36910:	c0 03 fd c0 	move sp, s26
   36914:	00 00 fd c0 	move s0, s26
   36918:	3d 20 00 88 	store_32 s1, 8(fp)
   3691c:	40 80 fc c0 	move s2, s25
   36920:	61 6c 00 f8 	call 110980 <memset>
   36924:	1d 81 00 a8 	load_32 s8, 32(fp)
   36928:	08 30 00 a6 	load_s16 s0, 12(s8)
   3692c:	00 04 00 14 	cmplt_i s0, s0, 1
   36930:	80 07 00 f4 	bnz s0, 240 <R_GenerateLookup+0x1bc>
   36934:	00 00 00 0f 	move s0, 0
   36938:	20 94 01 0f 	move s1, 101
   3693c:	3d 70 00 88 	store_32 s1, 28(fp)
   36940:	1d 60 00 88 	store_32 s0, 24(fp)
   36944:	28 43 00 05 	add_i s25, s8, 16
   36948:	20 00 f0 c0 	move s1, s0
   3694c:	3d 90 00 88 	store_32 s1, 36(fp)
   36950:	19 20 00 a8 	load_32 s0, 8(s25)
   36954:	3d 70 00 a8 	load_32 s1, 28(fp)
   36958:	30 21 00 f8 	call 33984 <W_CacheLumpNum>
   3695c:	39 00 00 a8 	load_32 s1, (s25)
   36960:	40 00 00 a6 	load_s16 s2, (s0)
   36964:	61 00 00 12 	cmpgt_i s3, s1, 0
   36968:	81 00 51 c0 	add_i s4, s1, s2
   3696c:	40 80 f0 c0 	move s2, s1
   36970:	43 00 00 f4 	bnz s3, 8 <R_GenerateLookup+0x114>
   36974:	09 00 00 f6 	b 36 <R_GenerateLookup+0x134>
   36978:	1d 81 00 a8 	load_32 s8, 32(fp)
   3697c:	68 20 00 a6 	load_s16 s3, 8(s8)
   36980:	a4 80 21 c1 	cmpgt_i s5, s4, s3
   36984:	45 00 00 f4 	bnz s5, 8 <R_GenerateLookup+0x128>
   36988:	09 00 00 f6 	b 36 <R_GenerateLookup+0x148>
   3698c:	82 80 31 c1 	cmpge_i s4, s2, s3
   36990:	a4 03 00 f4 	bnz s4, 116 <R_GenerateLookup+0x1a0>
   36994:	09 00 00 f6 	b 36 <R_GenerateLookup+0x154>
   36998:	5d 60 00 a8 	load_32 s2, 24(fp)
   3699c:	1d 81 00 a8 	load_32 s8, 32(fp)
   369a0:	68 20 00 a6 	load_s16 s3, 8(s8)
   369a4:	a4 80 21 c1 	cmpgt_i s5, s4, s3
   369a8:	25 ff ff f5 	bnz s5, -28 <R_GenerateLookup+0x128>
   369ac:	60 00 f2 c0 	move s3, s4
   369b0:	82 80 31 c1 	cmpge_i s4, s2, s3
   369b4:	84 02 00 f4 	bnz s4, 80 <R_GenerateLookup+0x1a0>
   369b8:	00 20 00 05 	add_i s0, s0, 8
   369bc:	9a 00 51 c0 	add_i s4, s26, s2
   369c0:	a4 00 00 a0 	load_u8 s5, (s4)
   369c4:	a5 04 00 05 	add_i s5, s5, 1
   369c8:	a4 00 00 82 	store_8 s5, (s4)
   369cc:	82 80 60 c0 	sub_i s4, s2, s1
   369d0:	f9 20 00 a8 	load_32 s7, 8(s25)
   369d4:	a2 04 00 0b 	shl s5, s2, 1
   369d8:	db 80 52 c0 	add_i s6, s27, s5
   369dc:	84 08 00 0b 	shl s4, s4, 2
   369e0:	80 00 52 c0 	add_i s4, s0, s4
   369e4:	42 04 00 05 	add_i s2, s2, 1
   369e8:	e6 00 00 86 	store_16 s7, (s6)
   369ec:	b8 80 52 c0 	add_i s5, s24, s5
   369f0:	84 00 00 a6 	load_s16 s4, (s4)
   369f4:	c2 80 41 c1 	cmplt_i s6, s2, s3
   369f8:	84 0c 00 05 	add_i s4, s4, 3
   369fc:	85 00 00 86 	store_16 s4, (s5)
   36a00:	e6 fd ff f5 	bnz s6, -68 <R_GenerateLookup+0x158>
   36a04:	08 30 00 a6 	load_s16 s0, 12(s8)
   36a08:	39 33 00 05 	add_i s25, s25, 12
   36a0c:	3d 90 00 a8 	load_32 s1, 36(fp)
   36a10:	21 04 00 05 	add_i s1, s1, 1
   36a14:	01 00 40 c1 	cmplt_i s0, s1, s0
   36a18:	a0 f9 ff f5 	bnz s0, -204 <R_GenerateLookup+0xe8>
   36a1c:	28 23 00 a6 	load_s16 s25, 8(s8)
   36a20:	00 80 ec c1 	sext_16 s0, s25
   36a24:	9d 50 00 a8 	load_32 s4, 20(fp)
   36a28:	bd 40 00 a8 	load_32 s5, 16(fp)
   36a2c:	dd 20 00 a8 	load_32 s6, 8(fp)
   36a30:	00 04 00 14 	cmplt_i s0, s0, 1
   36a34:	a0 07 00 f4 	bnz s0, 244 <R_GenerateLookup+0x2c4>
   36a38:	07 00 00 4f 	movehi s0, 7
   36a3c:	23 00 00 4f 	movehi s1, 3
   36a40:	28 01 00 4f 	movehi s9, 8
   36a44:	e0 fc 7f 00 	or s7, s0, 8191
   36a48:	01 bc 09 00 	or s0, s1, 623
   36a4c:	1d 60 00 88 	store_32 s0, 24(fp)
   36a50:	fd 90 00 88 	store_32 s7, 36(fp)
   36a54:	3d 71 00 88 	store_32 s9, 28(fp)
   36a58:	1a 00 53 c0 	add_i s0, s26, s6
   36a5c:	00 00 00 a0 	load_u8 s0, (s0)
   36a60:	20 04 00 10 	cmpeq_i s1, s0, 1
   36a64:	a1 04 00 f4 	bnz s1, 148 <R_GenerateLookup+0x294>
   36a68:	40 00 00 f4 	bnz s0, 8 <R_GenerateLookup+0x20c>
   36a6c:	28 00 00 f6 	b 160 <R_GenerateLookup+0x2a8>
   36a70:	26 04 00 0b 	shl s1, s6, 1
   36a74:	1b 80 50 c0 	add_i s0, s27, s1
   36a78:	38 80 50 c0 	add_i s1, s24, s1
   36a7c:	e0 00 00 86 	store_16 s7, (s0)
   36a80:	05 00 00 a8 	load_32 s0, (s5)
   36a84:	40 00 52 c0 	add_i s2, s0, s4
   36a88:	42 00 00 a8 	load_32 s2, (s2)
   36a8c:	41 00 00 86 	store_16 s2, (s1)
   36a90:	28 28 00 a6 	load_s16 s1, 10(s8)
   36a94:	69 80 60 c0 	sub_i s3, s9, s1
   36a98:	62 80 51 c1 	cmple_i s3, s2, s3
   36a9c:	63 02 00 f4 	bnz s3, 76 <R_GenerateLookup+0x284>
   36aa0:	de 03 ff 05 	add_i sp, sp, -64
   36aa4:	1d 30 00 a8 	load_32 s0, 12(fp)
   36aa8:	1e 10 00 88 	store_32 s0, 4(sp)
   36aac:	1d 60 00 a8 	load_32 s0, 24(fp)
   36ab0:	1e 00 00 88 	store_32 s0, (sp)
   36ab4:	20 03 f3 c0 	move s25, s6
   36ab8:	93 5d ff f9 	call -166324 <I_Error>
   36abc:	3d 71 00 a8 	load_32 s9, 28(fp)
   36ac0:	fd 90 00 a8 	load_32 s7, 36(fp)
   36ac4:	c0 80 fc c0 	move s6, s25
   36ac8:	bd 40 00 a8 	load_32 s5, 16(fp)
   36acc:	9d 50 00 a8 	load_32 s4, 20(fp)
   36ad0:	1d 81 00 a8 	load_32 s8, 32(fp)
   36ad4:	de 03 01 05 	add_i sp, sp, 64
   36ad8:	28 28 00 a6 	load_s16 s1, 10(s8)
   36adc:	05 00 00 a8 	load_32 s0, (s5)
   36ae0:	40 00 52 c0 	add_i s2, s0, s4
   36ae4:	42 00 00 a8 	load_32 s2, (s2)
   36ae8:	00 00 52 c0 	add_i s0, s0, s4
   36aec:	22 80 50 c0 	add_i s1, s2, s1
   36af0:	20 00 00 88 	store_32 s1, (s0)
   36af4:	28 23 00 a6 	load_s16 s25, 8(s8)
   36af8:	c6 04 00 05 	add_i s6, s6, 1
   36afc:	00 80 ec c1 	sext_16 s0, s25
   36b00:	06 00 40 c1 	cmplt_i s0, s6, s0
   36b04:	a0 fa ff f5 	bnz s0, -172 <R_GenerateLookup+0x1f4>
   36b08:	08 00 00 f6 	b 32 <R_GenerateLookup+0x2c4>
   36b0c:	de 03 ff 05 	add_i sp, sp, -64
   36b10:	02 00 00 4f 	movehi s0, 2
   36b14:	1e 11 00 88 	store_32 s8, 4(sp)
   36b18:	00 34 06 00 	or s0, s0, 397
   36b1c:	1e 00 00 88 	store_32 s0, (sp)
   36b20:	ad 6c 00 f8 	call 111284 <printf>
   36b24:	de 03 01 05 	add_i sp, sp, 64
   36b28:	c0 83 fe c0 	move sp, fp
   36b2c:	fe a3 00 a8 	load_32 ra, 40(sp)
   36b30:	be b3 00 a8 	load_32 fp, 44(sp)
   36b34:	7e c3 00 a8 	load_32 s27, 48(sp)
   36b38:	5e d3 00 a8 	load_32 s26, 52(sp)
   36b3c:	3e e3 00 a8 	load_32 s25, 56(sp)
   36b40:	1e f3 00 a8 	load_32 s24, 60(sp)
   36b44:	de 03 01 05 	add_i sp, sp, 64
   36b48:	1f 00 00 f0 	ret

0000000000036b4c R_GetColumn:
   36b4c:	de 03 ff 05 	add_i sp, sp, -64
   36b50:	1e f3 00 88 	store_32 s24, 60(sp)
   36b54:	3e e3 00 88 	store_32 s25, 56(sp)
   36b58:	5e d3 00 88 	store_32 s26, 52(sp)
   36b5c:	fe c3 00 88 	store_32 ra, 48(sp)
   36b60:	5d 04 00 4f 	movehi s2, 61
   36b64:	7d 04 00 4f 	movehi s3, 61
   36b68:	20 0b 00 0b 	shl s25, s0, 2
   36b6c:	42 b0 48 00 	or s2, s2, 4652
   36b70:	63 30 48 00 	or s3, s3, 4620
   36b74:	42 00 00 a8 	load_32 s2, (s2)
   36b78:	42 80 5c c0 	add_i s2, s2, s25
   36b7c:	42 00 00 a8 	load_32 s2, (s2)
   36b80:	63 00 00 a8 	load_32 s3, (s3)
   36b84:	22 80 10 c0 	and s1, s2, s1
   36b88:	63 80 5c c0 	add_i s3, s3, s25
   36b8c:	21 04 00 0b 	shl s1, s1, 1
   36b90:	43 00 00 a8 	load_32 s2, (s3)
   36b94:	7d 04 00 4f 	movehi s3, 61
   36b98:	63 40 48 00 	or s3, s3, 4624
   36b9c:	42 80 50 c0 	add_i s2, s2, s1
   36ba0:	42 00 00 a6 	load_s16 s2, (s2)
   36ba4:	63 00 00 a8 	load_32 s3, (s3)
   36ba8:	63 80 5c c0 	add_i s3, s3, s25
   36bac:	63 00 00 a8 	load_32 s3, (s3)
   36bb0:	23 80 50 c0 	add_i s1, s3, s1
   36bb4:	62 04 00 14 	cmplt_i s3, s2, 1
   36bb8:	01 03 00 a4 	load_u16 s24, (s1)
   36bbc:	c3 00 00 f4 	bnz s3, 24 <R_GetColumn+0x88>
   36bc0:	20 94 01 0f 	move s1, 101
   36bc4:	00 00 f1 c0 	move s0, s2
   36bc8:	94 20 00 f8 	call 33360 <W_CacheLumpNum>
   36bcc:	20 00 f0 c0 	move s1, s0
   36bd0:	0b 00 00 f6 	b 44 <R_GetColumn+0xb0>
   36bd4:	3d 04 00 4f 	movehi s1, 61
   36bd8:	41 53 48 00 	or s26, s1, 4628
   36bdc:	3a 00 00 a8 	load_32 s1, (s26)
   36be0:	21 80 5c c0 	add_i s1, s1, s25
   36be4:	21 00 00 a8 	load_32 s1, (s1)
   36be8:	a1 00 00 f4 	bnz s1, 20 <R_GetColumn+0xb0>
   36bec:	7f fe ff f9 	call -1540 <R_GenerateComposite>
   36bf0:	1a 00 00 a8 	load_32 s0, (s26)
   36bf4:	00 80 5c c0 	add_i s0, s0, s25
   36bf8:	20 00 00 a8 	load_32 s1, (s0)
   36bfc:	fe c3 00 a8 	load_32 ra, 48(sp)
   36c00:	01 00 5c c0 	add_i s0, s1, s24
   36c04:	5e d3 00 a8 	load_32 s26, 52(sp)
   36c08:	3e e3 00 a8 	load_32 s25, 56(sp)
   36c0c:	1e f3 00 a8 	load_32 s24, 60(sp)
   36c10:	de 03 01 05 	add_i sp, sp, 64
   36c14:	1f 00 00 f0 	ret

0000000000036c18 R_InitTextures:
   36c18:	de 03 fd 05 	add_i sp, sp, -192
   36c1c:	1e f3 02 88 	store_32 s24, 188(sp)
   36c20:	3e e3 02 88 	store_32 s25, 184(sp)
   36c24:	5e d3 02 88 	store_32 s26, 180(sp)
   36c28:	7e c3 02 88 	store_32 s27, 176(sp)
   36c2c:	be b3 02 88 	store_32 fp, 172(sp)
   36c30:	fe a3 02 88 	store_32 ra, 168(sp)
   36c34:	a0 03 ff c0 	move fp, sp
   36c38:	00 00 00 0f 	move s0, 0
   36c3c:	1d 90 01 88 	store_32 s0, 100(fp)
   36c40:	1d 9c 02 82 	store_8 s0, 167(fp)
   36c44:	00 00 00 4f 	movehi s0, 0
   36c48:	20 04 00 0f 	move s1, 1
   36c4c:	00 60 18 00 	or s0, s0, 1560
   36c50:	be 20 00 f8 	call 33528 <W_CacheLumpName>
   36c54:	1d 40 02 88 	store_32 s0, 144(fp)
   36c58:	00 03 00 a8 	load_32 s24, (s0)
   36c5c:	18 08 00 0b 	shl s0, s24, 2
   36c60:	00 fc 00 05 	add_i s0, s0, 63
   36c64:	00 00 ff 01 	and s0, s0, -64
   36c68:	5e 03 60 c0 	sub_i s26, sp, s0
   36c6c:	c0 03 fd c0 	move sp, s26
   36c70:	18 04 00 14 	cmplt_i s0, s24, 1
   36c74:	c0 02 00 f4 	bnz s0, 88 <R_InitTextures+0xb4>
   36c78:	1d 40 02 a8 	load_32 s0, 144(fp)
   36c7c:	60 03 00 0f 	move s27, 0
   36c80:	3d 7f 02 05 	add_i s25, fp, 159
   36c84:	00 10 00 05 	add_i s0, s0, 4
   36c88:	1d 60 02 88 	store_32 s0, 152(fp)
   36c8c:	00 20 00 0f 	move s0, 8
   36c90:	1d 50 02 88 	store_32 s0, 148(fp)
   36c94:	3d 60 02 a8 	load_32 s1, 152(fp)
   36c98:	1b 0c 00 0b 	shl s0, s27, 3
   36c9c:	21 00 50 c0 	add_i s1, s1, s0
   36ca0:	00 80 fc c0 	move s0, s25
   36ca4:	5d 50 02 a8 	load_32 s2, 148(fp)
   36ca8:	d6 6e 00 f8 	call 113496 <strncpy>
   36cac:	00 80 fc c0 	move s0, s25
   36cb0:	ac 1f 00 f8 	call 32432 <W_CheckNumForName>
   36cb4:	3b 08 00 0b 	shl s1, s27, 2
   36cb8:	7b 07 00 05 	add_i s27, s27, 1
   36cbc:	3a 80 50 c0 	add_i s1, s26, s1
   36cc0:	5b 00 4c c1 	cmplt_i s2, s27, s24
   36cc4:	01 00 00 88 	store_32 s0, (s1)
   36cc8:	62 fe ff f5 	bnz s2, -52 <R_InitTextures+0x7c>
   36ccc:	5d 53 02 88 	store_32 s26, 148(fp)
   36cd0:	1d 40 02 a8 	load_32 s0, 144(fp)
   36cd4:	b8 56 00 f8 	call 88800 <Z_Free>
   36cd8:	02 00 00 4f 	movehi s0, 2
   36cdc:	20 04 00 0f 	move s1, 1
   36ce0:	00 7b 2d 00 	or s24, s0, 2910
   36ce4:	00 00 fc c0 	move s0, s24
   36ce8:	98 20 00 f8 	call 33376 <W_CacheLumpName>
   36cec:	1d e0 00 88 	store_32 s0, 56(fp)
   36cf0:	00 00 00 a8 	load_32 s0, (s0)
   36cf4:	1d 70 01 88 	store_32 s0, 92(fp)
   36cf8:	00 00 fc c0 	move s0, s24
   36cfc:	be 1f 00 f8 	call 32504 <W_GetNumForName>
   36d00:	e6 1f 00 f8 	call 32664 <W_LumpLength>
   36d04:	00 03 f0 c0 	move s24, s0
   36d08:	02 00 00 4f 	movehi s0, 2
   36d0c:	20 fb 7c 00 	or s25, s0, 7998
   36d10:	00 80 fc c0 	move s0, s25
   36d14:	93 1f 00 f8 	call 32332 <W_CheckNumForName>
   36d18:	00 fc ff 10 	cmpeq_i s0, s0, -1
   36d1c:	60 01 00 f4 	bnz s0, 44 <R_InitTextures+0x130>
   36d20:	20 04 00 0f 	move s1, 1
   36d24:	00 80 fc c0 	move s0, s25
   36d28:	88 20 00 f8 	call 33312 <W_CacheLumpName>
   36d2c:	1d a0 01 88 	store_32 s0, 104(fp)
   36d30:	40 03 00 a8 	load_32 s26, (s0)
   36d34:	00 80 fc c0 	move s0, s25
   36d38:	af 1f 00 f8 	call 32444 <W_GetNumForName>
   36d3c:	d7 1f 00 f8 	call 32604 <W_LumpLength>
   36d40:	1d 90 01 88 	store_32 s0, 100(fp)
   36d44:	03 00 00 f6 	b 12 <R_InitTextures+0x138>
   36d48:	5d 93 01 a8 	load_32 s26, 100(fp)
   36d4c:	5d a3 01 88 	store_32 s26, 104(fp)
   36d50:	1d 04 00 4f 	movehi s0, 61
   36d54:	60 07 00 0f 	move s27, 1
   36d58:	20 e3 47 00 	or s25, s0, 4600
   36d5c:	1d 70 01 a8 	load_32 s0, 92(fp)
   36d60:	1a 00 50 c0 	add_i s0, s26, s0
   36d64:	19 00 00 88 	store_32 s0, (s25)
   36d68:	40 03 00 0f 	move s26, 0
   36d6c:	20 80 fd c0 	move s1, s27
   36d70:	00 08 00 0b 	shl s0, s0, 2
   36d74:	40 00 fd c0 	move s2, s26
   36d78:	d8 56 00 f8 	call 88928 <Z_Malloc>
   36d7c:	3d 04 00 4f 	movehi s1, 61
   36d80:	21 90 48 00 	or s1, s1, 4644
   36d84:	3d 60 01 88 	store_32 s1, 88(fp)
   36d88:	01 00 00 88 	store_32 s0, (s1)
   36d8c:	19 00 00 a8 	load_32 s0, (s25)
   36d90:	20 80 fd c0 	move s1, s27
   36d94:	40 00 fd c0 	move s2, s26
   36d98:	00 08 00 0b 	shl s0, s0, 2
   36d9c:	cf 56 00 f8 	call 88892 <Z_Malloc>
   36da0:	3d 04 00 4f 	movehi s1, 61
   36da4:	21 30 48 00 	or s1, s1, 4620
   36da8:	3d 50 01 88 	store_32 s1, 84(fp)
   36dac:	01 00 00 88 	store_32 s0, (s1)
   36db0:	19 00 00 a8 	load_32 s0, (s25)
   36db4:	20 80 fd c0 	move s1, s27
   36db8:	40 00 fd c0 	move s2, s26
   36dbc:	00 08 00 0b 	shl s0, s0, 2
   36dc0:	c6 56 00 f8 	call 88856 <Z_Malloc>
   36dc4:	3d 04 00 4f 	movehi s1, 61
   36dc8:	21 40 48 00 	or s1, s1, 4624
   36dcc:	3d 40 01 88 	store_32 s1, 80(fp)
   36dd0:	01 00 00 88 	store_32 s0, (s1)
   36dd4:	19 00 00 a8 	load_32 s0, (s25)
   36dd8:	20 80 fd c0 	move s1, s27
   36ddc:	40 00 fd c0 	move s2, s26
   36de0:	00 08 00 0b 	shl s0, s0, 2
   36de4:	bd 56 00 f8 	call 88820 <Z_Malloc>
   36de8:	3d 04 00 4f 	movehi s1, 61
   36dec:	21 50 48 00 	or s1, s1, 4628
   36df0:	01 00 00 88 	store_32 s0, (s1)
   36df4:	19 00 00 a8 	load_32 s0, (s25)
   36df8:	20 80 fd c0 	move s1, s27
   36dfc:	40 00 fd c0 	move s2, s26
   36e00:	00 08 00 0b 	shl s0, s0, 2
   36e04:	b5 56 00 f8 	call 88788 <Z_Malloc>
   36e08:	3d 04 00 4f 	movehi s1, 61
   36e0c:	21 60 48 00 	or s1, s1, 4632
   36e10:	01 00 00 88 	store_32 s0, (s1)
   36e14:	19 00 00 a8 	load_32 s0, (s25)
   36e18:	20 80 fd c0 	move s1, s27
   36e1c:	40 00 fd c0 	move s2, s26
   36e20:	00 08 00 0b 	shl s0, s0, 2
   36e24:	ad 56 00 f8 	call 88756 <Z_Malloc>
   36e28:	3d 04 00 4f 	movehi s1, 61
   36e2c:	21 b0 48 00 	or s1, s1, 4652
   36e30:	3d 30 01 88 	store_32 s1, 76(fp)
   36e34:	01 00 00 88 	store_32 s0, (s1)
   36e38:	19 00 00 a8 	load_32 s0, (s25)
   36e3c:	7d 23 02 88 	store_32 s27, 136(fp)
   36e40:	20 80 fd c0 	move s1, s27
   36e44:	5d d3 00 88 	store_32 s26, 52(fp)
   36e48:	40 00 fd c0 	move s2, s26
   36e4c:	00 08 00 0b 	shl s0, s0, 2
   36e50:	a2 56 00 f8 	call 88712 <Z_Malloc>
   36e54:	3d 04 00 4f 	movehi s1, 61
   36e58:	21 70 48 00 	or s1, s1, 4636
   36e5c:	3d 20 01 88 	store_32 s1, 72(fp)
   36e60:	01 00 00 88 	store_32 s0, (s1)
   36e64:	00 00 00 4f 	movehi s0, 0
   36e68:	00 18 6b 00 	or s0, s0, 6854
   36e6c:	62 1f 00 f8 	call 32136 <W_GetNumForName>
   36e70:	40 03 f0 c0 	move s26, s0
   36e74:	00 00 00 4f 	movehi s0, 0
   36e78:	00 28 2f 00 	or s0, s0, 3018
   36e7c:	5e 1f 00 f8 	call 32120 <W_GetNumForName>
   36e80:	3d 83 01 88 	store_32 s25, 96(fp)
   36e84:	20 f8 00 0f 	move s1, 62
   36e88:	59 00 00 a8 	load_32 s2, (s25)
   36e8c:	21 00 6d c0 	sub_i s1, s1, s26
   36e90:	42 fc 00 05 	add_i s2, s2, 63
   36e94:	01 00 50 c0 	add_i s0, s1, s0
   36e98:	22 7c 00 09 	ashr s1, s2, 31
   36e9c:	60 7c 00 09 	ashr s3, s0, 31
   36ea0:	21 68 00 0a 	shr s1, s1, 26
   36ea4:	22 80 50 c0 	add_i s1, s2, s1
   36ea8:	43 68 00 0a 	shr s2, s3, 26
   36eac:	00 00 51 c0 	add_i s0, s0, s2
   36eb0:	21 18 00 09 	ashr s1, s1, 6
   36eb4:	00 18 00 09 	ashr s0, s0, 6
   36eb8:	21 03 50 c0 	add_i s25, s1, s0
   36ebc:	00 6c 01 0f 	move s0, 91
   36ec0:	96 6c 00 f8 	call 111192 <putchar>
   36ec4:	19 04 00 14 	cmplt_i s0, s25, 1
   36ec8:	20 03 00 f4 	bnz s0, 100 <R_InitTextures+0x314>
   36ecc:	60 03 00 0f 	move s27, 0
   36ed0:	1d 60 02 88 	store_32 s0, 152(fp)
   36ed4:	40 83 00 0f 	move s26, 32
   36ed8:	00 00 fd c0 	move s0, s26
   36edc:	8f 6c 00 f8 	call 111164 <putchar>
   36ee0:	7b 07 00 05 	add_i s27, s27, 1
   36ee4:	1b 80 4c c1 	cmplt_i s0, s27, s25
   36ee8:	80 ff ff f5 	bnz s0, -16 <R_InitTextures+0x2c0>
   36eec:	de 03 ff 05 	add_i sp, sp, -64
   36ef0:	00 00 00 4f 	movehi s0, 0
   36ef4:	00 e8 38 00 	or s0, s0, 3642
   36ef8:	1e 00 00 88 	store_32 s0, (sp)
   36efc:	b6 6b 00 f8 	call 110296 <printf>
   36f00:	de 03 01 05 	add_i sp, sp, 64
   36f04:	1d 60 02 a8 	load_32 s0, 152(fp)
   36f08:	e0 01 00 f4 	bnz s0, 60 <R_InitTextures+0x32c>
   36f0c:	60 03 00 0f 	move s27, 0
   36f10:	40 23 00 0f 	move s26, 8
   36f14:	00 00 fd c0 	move s0, s26
   36f18:	80 6c 00 f8 	call 111104 <putchar>
   36f1c:	7b 07 00 05 	add_i s27, s27, 1
   36f20:	1b 80 4c c1 	cmplt_i s0, s27, s25
   36f24:	80 ff ff f5 	bnz s0, -16 <R_InitTextures+0x2fc>
   36f28:	07 00 00 f6 	b 28 <R_InitTextures+0x32c>
   36f2c:	de 03 ff 05 	add_i sp, sp, -64
   36f30:	00 00 00 4f 	movehi s0, 0
   36f34:	00 e8 38 00 	or s0, s0, 3642
   36f38:	1e 00 00 88 	store_32 s0, (sp)
   36f3c:	a6 6b 00 f8 	call 110232 <printf>
   36f40:	de 03 01 05 	add_i sp, sp, 64
   36f44:	de 03 ff 05 	add_i sp, sp, -64
   36f48:	01 00 00 4f 	movehi s0, 1
   36f4c:	00 50 56 00 	or s0, s0, 5524
   36f50:	1e 00 00 88 	store_32 s0, (sp)
   36f54:	a0 6b 00 f8 	call 110208 <printf>
   36f58:	de 03 01 05 	add_i sp, sp, 64
   36f5c:	7d 83 01 a8 	load_32 s27, 96(fp)
   36f60:	1b 00 00 a8 	load_32 s0, (s27)
   36f64:	00 04 00 14 	cmplt_i s0, s0, 1
   36f68:	c0 18 00 f4 	bnz s0, 792 <R_InitTextures+0x668>
   36f6c:	5d e3 00 a8 	load_32 s26, 56(fp)
   36f70:	40 00 00 0f 	move s2, 0
   36f74:	1d a0 01 a8 	load_32 s0, 104(fp)
   36f78:	22 00 00 4f 	movehi s1, 2
   36f7c:	60 b8 00 0f 	move s3, 46
   36f80:	3a 13 00 05 	add_i s25, s26, 4
   36f84:	00 10 00 05 	add_i s0, s0, 4
   36f88:	1d 10 01 88 	store_32 s0, 68(fp)
   36f8c:	00 00 00 4f 	movehi s0, 0
   36f90:	7d f0 00 88 	store_32 s3, 60(fp)
   36f94:	00 38 6b 00 	or s0, s0, 6862
   36f98:	1d 00 01 88 	store_32 s0, 64(fp)
   36f9c:	01 0c 3b 00 	or s0, s1, 3779
   36fa0:	1d 40 02 88 	store_32 s0, 144(fp)
   36fa4:	5d b0 01 88 	store_32 s2, 108(fp)
   36fa8:	0f 00 00 f6 	b 60 <R_InitTextures+0x3cc>
   36fac:	1d f0 00 a8 	load_32 s0, 60(fp)
   36fb0:	5a 6c 00 f8 	call 110952 <putchar>
   36fb4:	5d 30 02 a8 	load_32 s2, 140(fp)
   36fb8:	1d 70 01 a8 	load_32 s0, 92(fp)
   36fbc:	7d a3 01 a8 	load_32 s27, 104(fp)
   36fc0:	02 00 00 c1 	cmpeq_i s0, s2, s0
   36fc4:	20 02 00 f4 	bnz s0, 68 <R_InitTextures+0x3f0>
   36fc8:	60 03 fd c0 	move s27, s26
   36fcc:	3d 90 01 a8 	load_32 s1, 100(fp)
   36fd0:	20 02 00 f4 	bnz s0, 68 <R_InitTextures+0x3fc>
   36fd4:	20 00 fc c0 	move s1, s24
   36fd8:	5d 10 01 a8 	load_32 s2, 68(fp)
   36fdc:	20 02 00 f4 	bnz s0, 68 <R_InitTextures+0x408>
   36fe0:	0f 00 00 f6 	b 60 <R_InitTextures+0x404>
   36fe4:	02 fc 00 01 	and s0, s2, 63
   36fe8:	5d 30 02 88 	store_32 s2, 140(fp)
   36fec:	40 00 00 f4 	bnz s0, 8 <R_InitTextures+0x3dc>
   36ff0:	ef ff ff f7 	b -68 <R_InitTextures+0x394>
   36ff4:	1d 70 01 a8 	load_32 s0, 92(fp)
   36ff8:	7d a3 01 a8 	load_32 s27, 104(fp)
   36ffc:	02 00 00 c1 	cmpeq_i s0, s2, s0
   37000:	40 00 00 f4 	bnz s0, 8 <R_InitTextures+0x3f0>
   37004:	f1 ff ff f7 	b -60 <R_InitTextures+0x3b0>
   37008:	3d 90 01 a8 	load_32 s1, 100(fp)
   3700c:	40 00 00 f4 	bnz s0, 8 <R_InitTextures+0x3fc>
   37010:	f1 ff ff f7 	b -60 <R_InitTextures+0x3bc>
   37014:	5d 10 01 a8 	load_32 s2, 68(fp)
   37018:	40 00 00 f4 	bnz s0, 8 <R_InitTextures+0x408>
   3701c:	40 80 fc c0 	move s2, s25
   37020:	5d f0 01 88 	store_32 s2, 124(fp)
   37024:	02 03 00 a8 	load_32 s24, (s2)
   37028:	3d 00 02 88 	store_32 s1, 128(fp)
   3702c:	18 80 50 c1 	cmple_i s0, s24, s1
   37030:	c0 00 00 f4 	bnz s0, 24 <R_InitTextures+0x430>
   37034:	de 03 ff 05 	add_i sp, sp, -64
   37038:	1d 00 01 a8 	load_32 s0, 64(fp)
   3703c:	1e 00 00 88 	store_32 s0, (sp)
   37040:	31 5c ff f9 	call -167740 <I_Error>
   37044:	de 03 01 05 	add_i sp, sp, 64
   37048:	3b 03 5c c0 	add_i s25, s27, s24
   3704c:	7d 13 02 88 	store_32 s27, 132(fp)
   37050:	19 00 00 a0 	load_u8 s0, (s25)
   37054:	39 04 00 a0 	load_u8 s1, 1(s25)
   37058:	59 08 00 a0 	load_u8 s2, 2(s25)
   3705c:	79 0c 00 a0 	load_u8 s3, 3(s25)
   37060:	99 10 00 a0 	load_u8 s4, 4(s25)
   37064:	b9 14 00 a0 	load_u8 s5, 5(s25)
   37068:	21 20 00 0b 	shl s1, s1, 8
   3706c:	d9 18 00 a0 	load_u8 s6, 6(s25)
   37070:	63 20 00 0b 	shl s3, s3, 8
   37074:	f9 1c 00 a0 	load_u8 s7, 7(s25)
   37078:	01 00 00 c0 	or s0, s1, s0
   3707c:	43 00 01 c0 	or s2, s3, s2
   37080:	67 20 00 0b 	shl s3, s7, 8
   37084:	22 40 00 0b 	shl s1, s2, 16
   37088:	43 00 03 c0 	or s2, s3, s6
   3708c:	79 30 00 a0 	load_u8 s3, 12(s25)
   37090:	d9 34 00 a0 	load_u8 s6, 13(s25)
   37094:	01 00 00 c0 	or s0, s1, s0
   37098:	f9 38 00 a0 	load_u8 s7, 14(s25)
   3709c:	19 3d 00 a0 	load_u8 s8, 15(s25)
   370a0:	22 40 00 0b 	shl s1, s2, 16
   370a4:	39 51 00 a0 	load_u8 s9, 20(s25)
   370a8:	59 55 00 a2 	load_s8 s10, 21(s25)
   370ac:	1d 60 02 88 	store_32 s0, 152(fp)
   370b0:	05 20 00 0b 	shl s0, s5, 8
   370b4:	00 00 02 c0 	or s0, s0, s4
   370b8:	01 00 00 c0 	or s0, s1, s0
   370bc:	1d d0 01 88 	store_32 s0, 116(fp)
   370c0:	4a 20 00 0b 	shl s2, s10, 8
   370c4:	06 20 00 0b 	shl s0, s6, 8
   370c8:	28 20 00 0b 	shl s1, s8, 8
   370cc:	62 83 04 c0 	or s27, s2, s9
   370d0:	00 83 01 c0 	or s24, s0, s3
   370d4:	01 80 03 c0 	or s0, s1, s7
   370d8:	1d c0 01 88 	store_32 s0, 112(fp)
   370dc:	3d 20 02 a8 	load_32 s1, 136(fp)
   370e0:	5b 30 00 07 	mull_i s2, s27, 12
   370e4:	5d b3 01 a8 	load_32 s26, 108(fp)
   370e8:	02 40 00 05 	add_i s0, s2, 16
   370ec:	40 00 fd c0 	move s2, s26
   370f0:	fa 55 00 f8 	call 88040 <Z_Malloc>
   370f4:	3d 60 01 a8 	load_32 s1, 88(fp)
   370f8:	21 00 00 a8 	load_32 s1, (s1)
   370fc:	5d 30 02 a8 	load_32 s2, 140(fp)
   37100:	42 08 00 0b 	shl s2, s2, 2
   37104:	5d e0 01 88 	store_32 s2, 120(fp)
   37108:	21 00 51 c0 	add_i s1, s1, s2
   3710c:	40 00 fd c0 	move s2, s26
   37110:	01 00 00 88 	store_32 s0, (s1)
   37114:	00 23 00 86 	store_16 s24, 8(s0)
   37118:	3d c0 01 a8 	load_32 s1, 112(fp)
   3711c:	20 28 00 86 	store_16 s1, 10(s0)
   37120:	40 03 f0 c0 	move s26, s0
   37124:	7a 33 00 86 	store_16 s27, 12(s26)
   37128:	1d d0 01 a8 	load_32 s0, 116(fp)
   3712c:	1a 10 00 88 	store_32 s0, 4(s26)
   37130:	1b 04 00 14 	cmplt_i s0, s27, 1
   37134:	3d 60 02 a8 	load_32 s1, 152(fp)
   37138:	3a 00 00 88 	store_32 s1, (s26)
   3713c:	60 04 00 f4 	bnz s0, 140 <R_InitTextures+0x5b0>
   37140:	5d 63 02 88 	store_32 s26, 152(fp)
   37144:	00 03 f1 c0 	move s24, s2
   37148:	5d 50 02 a8 	load_32 s2, 148(fp)
   3714c:	5a 43 00 05 	add_i s26, s26, 16
   37150:	39 5b 00 05 	add_i s25, s25, 22
   37154:	19 00 00 a6 	load_s16 s0, (s25)
   37158:	1a 00 00 88 	store_32 s0, (s26)
   3715c:	19 08 00 a6 	load_s16 s0, 2(s25)
   37160:	1a 10 00 88 	store_32 s0, 4(s26)
   37164:	19 10 00 a6 	load_s16 s0, 4(s25)
   37168:	00 08 00 0b 	shl s0, s0, 2
   3716c:	02 00 50 c0 	add_i s0, s2, s0
   37170:	00 00 00 a8 	load_32 s0, (s0)
   37174:	1a 20 00 88 	store_32 s0, 8(s26)
   37178:	20 fc ff 11 	cmpne_i s1, s0, -1
   3717c:	41 01 00 f4 	bnz s1, 40 <R_InitTextures+0x58c>
   37180:	de 03 ff 05 	add_i sp, sp, -64
   37184:	7d 63 02 a8 	load_32 s27, 152(fp)
   37188:	7e 13 00 88 	store_32 s27, 4(sp)
   3718c:	1d 40 02 a8 	load_32 s0, 144(fp)
   37190:	1e 00 00 88 	store_32 s0, (sp)
   37194:	dc 5b ff f9 	call -168080 <I_Error>
   37198:	5d 50 02 a8 	load_32 s2, 148(fp)
   3719c:	de 03 01 05 	add_i sp, sp, 64
   371a0:	7b 33 00 a6 	load_s16 s27, 12(s27)
   371a4:	18 07 00 05 	add_i s24, s24, 1
   371a8:	00 80 ed c1 	sext_16 s0, s27
   371ac:	39 2b 00 05 	add_i s25, s25, 10
   371b0:	18 00 40 c1 	cmplt_i s0, s24, s0
   371b4:	5a 33 00 05 	add_i s26, s26, 12
   371b8:	e0 fc ff f5 	bnz s0, -100 <R_InitTextures+0x53c>
   371bc:	5d 63 02 a8 	load_32 s26, 152(fp)
   371c0:	1a 23 00 a6 	load_s16 s24, 8(s26)
   371c4:	5d b0 01 a8 	load_32 s2, 108(fp)
   371c8:	00 00 ec c1 	sext_16 s0, s24
   371cc:	1d 23 02 a8 	load_32 s24, 136(fp)
   371d0:	00 04 00 0b 	shl s0, s0, 1
   371d4:	20 00 fc c0 	move s1, s24
   371d8:	60 03 f1 c0 	move s27, s2
   371dc:	bf 55 00 f8 	call 87804 <Z_Malloc>
   371e0:	3d 50 01 a8 	load_32 s1, 84(fp)
   371e4:	21 00 00 a8 	load_32 s1, (s1)
   371e8:	3d e3 01 a8 	load_32 s25, 120(fp)
   371ec:	21 80 5c c0 	add_i s1, s1, s25
   371f0:	01 00 00 88 	store_32 s0, (s1)
   371f4:	1a 20 00 a6 	load_s16 s0, 8(s26)
   371f8:	20 00 fc c0 	move s1, s24
   371fc:	40 80 fd c0 	move s2, s27
   37200:	00 04 00 0b 	shl s0, s0, 1
   37204:	b5 55 00 f8 	call 87764 <Z_Malloc>
   37208:	3d 40 01 a8 	load_32 s1, 80(fp)
   3720c:	21 00 00 a8 	load_32 s1, (s1)
   37210:	21 80 5c c0 	add_i s1, s1, s25
   37214:	01 00 00 88 	store_32 s0, (s1)
   37218:	3a 20 00 a6 	load_s16 s1, 8(s26)
   3721c:	00 00 fc c0 	move s0, s24
   37220:	00 07 00 0b 	shl s24, s0, 1
   37224:	78 80 50 c1 	cmple_i s3, s24, s1
   37228:	a3 ff ff f5 	bnz s3, -12 <R_InitTextures+0x604>
   3722c:	3d 30 01 a8 	load_32 s1, 76(fp)
   37230:	00 fc ff 05 	add_i s0, s0, -1
   37234:	21 00 00 a8 	load_32 s1, (s1)
   37238:	21 80 5c c0 	add_i s1, s1, s25
   3723c:	01 00 00 88 	store_32 s0, (s1)
   37240:	1a 28 00 a6 	load_s16 s0, 10(s26)
   37244:	3d 20 01 a8 	load_32 s1, 72(fp)
   37248:	00 40 00 0b 	shl s0, s0, 16
   3724c:	21 00 00 a8 	load_32 s1, (s1)
   37250:	21 80 5c c0 	add_i s1, s1, s25
   37254:	01 00 00 88 	store_32 s0, (s1)
   37258:	7d 83 01 a8 	load_32 s27, 96(fp)
   3725c:	1b 00 00 a8 	load_32 s0, (s27)
   37260:	5d 30 02 a8 	load_32 s2, 140(fp)
   37264:	3d f0 01 a8 	load_32 s1, 124(fp)
   37268:	1d 03 02 a8 	load_32 s24, 128(fp)
   3726c:	5d 13 02 a8 	load_32 s26, 132(fp)
   37270:	42 04 00 05 	add_i s2, s2, 1
   37274:	21 13 00 05 	add_i s25, s1, 4
   37278:	02 00 40 c1 	cmplt_i s0, s2, s0
   3727c:	40 eb ff f5 	bnz s0, -664 <R_InitTextures+0x3cc>
   37280:	1d e0 00 a8 	load_32 s0, 56(fp)
   37284:	4c 55 00 f8 	call 87344 <Z_Free>
   37288:	1d a0 01 a8 	load_32 s0, 104(fp)
   3728c:	40 00 00 f2 	bz s0, 8 <R_InitTextures+0x67c>
   37290:	49 55 00 f8 	call 87332 <Z_Free>
   37294:	1b 00 00 a8 	load_32 s0, (s27)
   37298:	1d d3 00 a8 	load_32 s24, 52(fp)
   3729c:	20 04 00 14 	cmplt_i s1, s0, 1
   372a0:	e1 00 00 f4 	bnz s1, 28 <R_InitTextures+0x6a4>
   372a4:	00 00 fc c0 	move s0, s24
   372a8:	6f fd ff f9 	call -2628 <R_GenerateLookup>
   372ac:	1b 00 00 a8 	load_32 s0, (s27)
   372b0:	18 07 00 05 	add_i s24, s24, 1
   372b4:	38 00 40 c1 	cmplt_i s1, s24, s0
   372b8:	61 ff ff f5 	bnz s1, -20 <R_InitTextures+0x68c>
   372bc:	00 08 00 0b 	shl s0, s0, 2
   372c0:	00 03 00 0f 	move s24, 0
   372c4:	20 04 00 0f 	move s1, 1
   372c8:	00 10 00 05 	add_i s0, s0, 4
   372cc:	40 00 fc c0 	move s2, s24
   372d0:	82 55 00 f8 	call 87560 <Z_Malloc>
   372d4:	3d 04 00 4f 	movehi s1, 61
   372d8:	21 a0 48 00 	or s1, s1, 4648
   372dc:	01 00 00 88 	store_32 s0, (s1)
   372e0:	3b 00 00 a8 	load_32 s1, (s27)
   372e4:	21 04 00 14 	cmplt_i s1, s1, 1
   372e8:	01 01 00 f4 	bnz s1, 32 <R_InitTextures+0x6f0>
   372ec:	38 08 00 0b 	shl s1, s24, 2
   372f0:	20 80 50 c0 	add_i s1, s0, s1
   372f4:	01 03 00 88 	store_32 s24, (s1)
   372f8:	18 07 00 05 	add_i s24, s24, 1
   372fc:	3b 00 00 a8 	load_32 s1, (s27)
   37300:	38 80 40 c1 	cmplt_i s1, s24, s1
   37304:	41 ff ff f5 	bnz s1, -24 <R_InitTextures+0x6d4>
   37308:	c0 83 fe c0 	move sp, fp
   3730c:	fe a3 02 a8 	load_32 ra, 168(sp)
   37310:	be b3 02 a8 	load_32 fp, 172(sp)
   37314:	7e c3 02 a8 	load_32 s27, 176(sp)
   37318:	5e d3 02 a8 	load_32 s26, 180(sp)
   3731c:	3e e3 02 a8 	load_32 s25, 184(sp)
   37320:	1e f3 02 a8 	load_32 s24, 188(sp)
   37324:	de 03 03 05 	add_i sp, sp, 192
   37328:	1f 00 00 f0 	ret

000000000003732c R_InitFlats:
   3732c:	de 03 ff 05 	add_i sp, sp, -64
   37330:	1e f3 00 88 	store_32 s24, 60(sp)
   37334:	3e e3 00 88 	store_32 s25, 56(sp)
   37338:	fe d3 00 88 	store_32 ra, 52(sp)
   3733c:	01 00 00 4f 	movehi s0, 1
   37340:	00 94 77 00 	or s0, s0, 7653
   37344:	2c 1e 00 f8 	call 30896 <W_GetNumForName>
   37348:	3d 04 00 4f 	movehi s1, 61
   3734c:	00 04 00 05 	add_i s0, s0, 1
   37350:	01 33 47 00 	or s24, s1, 4556
   37354:	18 00 00 88 	store_32 s0, (s24)
   37358:	02 00 00 4f 	movehi s0, 2
   3735c:	00 80 15 00 	or s0, s0, 1376
   37360:	25 1e 00 f8 	call 30868 <W_GetNumForName>
   37364:	3d 04 00 4f 	movehi s1, 61
   37368:	00 fc ff 05 	add_i s0, s0, -1
   3736c:	5d 04 00 4f 	movehi s2, 61
   37370:	21 80 47 00 	or s1, s1, 4576
   37374:	22 b3 47 00 	or s25, s2, 4588
   37378:	01 00 00 88 	store_32 s0, (s1)
   3737c:	38 00 00 a8 	load_32 s1, (s24)
   37380:	00 03 00 0f 	move s24, 0
   37384:	00 80 60 c0 	sub_i s0, s0, s1
   37388:	20 08 00 0b 	shl s1, s0, 2
   3738c:	00 04 00 05 	add_i s0, s0, 1
   37390:	19 00 00 88 	store_32 s0, (s25)
   37394:	40 00 fc c0 	move s2, s24
   37398:	01 20 00 05 	add_i s0, s1, 8
   3739c:	20 04 00 0f 	move s1, 1
   373a0:	4e 55 00 f8 	call 87352 <Z_Malloc>
   373a4:	3d 04 00 4f 	movehi s1, 61
   373a8:	21 70 47 00 	or s1, s1, 4572
   373ac:	01 00 00 88 	store_32 s0, (s1)
   373b0:	39 00 00 a8 	load_32 s1, (s25)
   373b4:	21 04 00 14 	cmplt_i s1, s1, 1
   373b8:	01 01 00 f4 	bnz s1, 32 <R_InitFlats+0xac>
   373bc:	38 08 00 0b 	shl s1, s24, 2
   373c0:	20 80 50 c0 	add_i s1, s0, s1
   373c4:	01 03 00 88 	store_32 s24, (s1)
   373c8:	18 07 00 05 	add_i s24, s24, 1
   373cc:	39 00 00 a8 	load_32 s1, (s25)
   373d0:	38 80 40 c1 	cmplt_i s1, s24, s1
   373d4:	41 ff ff f5 	bnz s1, -24 <R_InitFlats+0x90>
   373d8:	fe d3 00 a8 	load_32 ra, 52(sp)
   373dc:	3e e3 00 a8 	load_32 s25, 56(sp)
   373e0:	1e f3 00 a8 	load_32 s24, 60(sp)
   373e4:	de 03 01 05 	add_i sp, sp, 64
   373e8:	1f 00 00 f0 	ret

00000000000373ec R_InitSpriteLumps:
   373ec:	de 03 ff 05 	add_i sp, sp, -64
   373f0:	1e f3 00 88 	store_32 s24, 60(sp)
   373f4:	3e e3 00 88 	store_32 s25, 56(sp)
   373f8:	5e d3 00 88 	store_32 s26, 52(sp)
   373fc:	7e c3 00 88 	store_32 s27, 48(sp)
   37400:	fe b3 00 88 	store_32 ra, 44(sp)
   37404:	00 00 00 4f 	movehi s0, 0
   37408:	00 18 6b 00 	or s0, s0, 6854
   3740c:	fa 1d 00 f8 	call 30696 <W_GetNumForName>
   37410:	3d 04 00 4f 	movehi s1, 61
   37414:	00 04 00 05 	add_i s0, s0, 1
   37418:	01 53 47 00 	or s24, s1, 4564
   3741c:	18 00 00 88 	store_32 s0, (s24)
   37420:	00 00 00 4f 	movehi s0, 0
   37424:	00 28 2f 00 	or s0, s0, 3018
   37428:	f3 1d 00 f8 	call 30668 <W_GetNumForName>
   3742c:	3d 04 00 4f 	movehi s1, 61
   37430:	00 fc ff 05 	add_i s0, s0, -1
   37434:	5d 04 00 4f 	movehi s2, 61
   37438:	21 a0 47 00 	or s1, s1, 4584
   3743c:	20 07 00 0f 	move s25, 1
   37440:	42 d3 47 00 	or s26, s2, 4596
   37444:	01 00 00 88 	store_32 s0, (s1)
   37448:	1e a3 00 88 	store_32 s24, 40(sp)
   3744c:	38 00 00 a8 	load_32 s1, (s24)
   37450:	00 03 00 0f 	move s24, 0
   37454:	00 80 60 c0 	sub_i s0, s0, s1
   37458:	00 04 00 05 	add_i s0, s0, 1
   3745c:	1a 00 00 88 	store_32 s0, (s26)
   37460:	20 80 fc c0 	move s1, s25
   37464:	40 00 fc c0 	move s2, s24
   37468:	00 08 00 0b 	shl s0, s0, 2
   3746c:	1b 55 00 f8 	call 87148 <Z_Malloc>
   37470:	3d 04 00 4f 	movehi s1, 61
   37474:	21 20 48 00 	or s1, s1, 4616
   37478:	3e 90 00 88 	store_32 s1, 36(sp)
   3747c:	01 00 00 88 	store_32 s0, (s1)
   37480:	1a 00 00 a8 	load_32 s0, (s26)
   37484:	20 80 fc c0 	move s1, s25
   37488:	40 00 fc c0 	move s2, s24
   3748c:	00 08 00 0b 	shl s0, s0, 2
   37490:	12 55 00 f8 	call 87112 <Z_Malloc>
   37494:	3d 04 00 4f 	movehi s1, 61
   37498:	21 00 48 00 	or s1, s1, 4608
   3749c:	3e 80 00 88 	store_32 s1, 32(sp)
   374a0:	01 00 00 88 	store_32 s0, (s1)
   374a4:	1a 00 00 a8 	load_32 s0, (s26)
   374a8:	20 80 fc c0 	move s1, s25
   374ac:	40 00 fc c0 	move s2, s24
   374b0:	00 08 00 0b 	shl s0, s0, 2
   374b4:	09 55 00 f8 	call 87076 <Z_Malloc>
   374b8:	3d 04 00 4f 	movehi s1, 61
   374bc:	61 13 48 00 	or s27, s1, 4612
   374c0:	1b 00 00 88 	store_32 s0, (s27)
   374c4:	20 03 fd c0 	move s25, s26
   374c8:	1a 00 00 a8 	load_32 s0, (s26)
   374cc:	00 04 00 14 	cmplt_i s0, s0, 1
   374d0:	60 04 00 f4 	bnz s0, 140 <R_InitSpriteLumps+0x170>
   374d4:	40 97 01 0f 	move s26, 101
   374d8:	00 b8 00 0f 	move s0, 46
   374dc:	1e 70 00 88 	store_32 s0, 28(sp)
   374e0:	18 fc 00 01 	and s0, s24, 63
   374e4:	60 00 00 f4 	bnz s0, 12 <R_InitSpriteLumps+0x104>
   374e8:	1e 70 00 a8 	load_32 s0, 28(sp)
   374ec:	0b 6b 00 f8 	call 109612 <putchar>
   374f0:	1e a0 00 a8 	load_32 s0, 40(sp)
   374f4:	00 00 00 a8 	load_32 s0, (s0)
   374f8:	20 00 fd c0 	move s1, s26
   374fc:	00 00 5c c0 	add_i s0, s0, s24
   37500:	46 1e 00 f8 	call 31000 <W_CacheLumpNum>
   37504:	20 00 00 a6 	load_s16 s1, (s0)
   37508:	78 08 00 0b 	shl s3, s24, 2
   3750c:	5e 90 00 a8 	load_32 s2, 36(sp)
   37510:	18 07 00 05 	add_i s24, s24, 1
   37514:	21 40 00 0b 	shl s1, s1, 16
   37518:	42 00 00 a8 	load_32 s2, (s2)
   3751c:	42 80 51 c0 	add_i s2, s2, s3
   37520:	22 00 00 88 	store_32 s1, (s2)
   37524:	20 10 00 a6 	load_s16 s1, 4(s0)
   37528:	5e 80 00 a8 	load_32 s2, 32(sp)
   3752c:	21 40 00 0b 	shl s1, s1, 16
   37530:	42 00 00 a8 	load_32 s2, (s2)
   37534:	42 80 51 c0 	add_i s2, s2, s3
   37538:	22 00 00 88 	store_32 s1, (s2)
   3753c:	00 18 00 a6 	load_s16 s0, 6(s0)
   37540:	3b 00 00 a8 	load_32 s1, (s27)
   37544:	00 40 00 0b 	shl s0, s0, 16
   37548:	21 80 51 c0 	add_i s1, s1, s3
   3754c:	01 00 00 88 	store_32 s0, (s1)
   37550:	19 00 00 a8 	load_32 s0, (s25)
   37554:	18 00 40 c1 	cmplt_i s0, s24, s0
   37558:	40 fc ff f5 	bnz s0, -120 <R_InitSpriteLumps+0xf4>
   3755c:	fe b3 00 a8 	load_32 ra, 44(sp)
   37560:	7e c3 00 a8 	load_32 s27, 48(sp)
   37564:	5e d3 00 a8 	load_32 s26, 52(sp)
   37568:	3e e3 00 a8 	load_32 s25, 56(sp)
   3756c:	1e f3 00 a8 	load_32 s24, 60(sp)
   37570:	de 03 01 05 	add_i sp, sp, 64
   37574:	1f 00 00 f0 	ret

0000000000037578 R_InitColormaps:
   37578:	de 03 ff 05 	add_i sp, sp, -64
   3757c:	1e f3 00 88 	store_32 s24, 60(sp)
   37580:	fe e3 00 88 	store_32 ra, 56(sp)
   37584:	02 00 00 4f 	movehi s0, 2
   37588:	00 98 15 00 	or s0, s0, 1382
   3758c:	9a 1d 00 f8 	call 30312 <W_GetNumForName>
   37590:	00 03 f0 c0 	move s24, s0
   37594:	c1 1d 00 f8 	call 30468 <W_LumpLength>
   37598:	00 fc 03 05 	add_i s0, s0, 255
   3759c:	20 04 00 0f 	move s1, 1
   375a0:	40 00 00 0f 	move s2, 0
   375a4:	cd 54 00 f8 	call 86836 <Z_Malloc>
   375a8:	3d 04 00 4f 	movehi s1, 61
   375ac:	00 fc 03 05 	add_i s0, s0, 255
   375b0:	41 20 47 00 	or s2, s1, 4552
   375b4:	20 00 fc 01 	and s1, s0, -256
   375b8:	22 00 00 88 	store_32 s1, (s2)
   375bc:	00 00 fc c0 	move s0, s24
   375c0:	ce 1d 00 f8 	call 30520 <W_ReadLump>
   375c4:	fe e3 00 a8 	load_32 ra, 56(sp)
   375c8:	1e f3 00 a8 	load_32 s24, 60(sp)
   375cc:	de 03 01 05 	add_i sp, sp, 64
   375d0:	1f 00 00 f0 	ret

00000000000375d4 R_InitData:
   375d4:	de 03 fe 05 	add_i sp, sp, -128
   375d8:	1e f3 01 88 	store_32 s24, 124(sp)
   375dc:	3e e3 01 88 	store_32 s25, 120(sp)
   375e0:	fe d3 01 88 	store_32 ra, 116(sp)
   375e4:	8d fd ff f9 	call -2508 <R_InitTextures>
   375e8:	01 00 00 4f 	movehi s0, 1
   375ec:	00 50 7e 00 	or s0, s0, 8084
   375f0:	1e 00 00 88 	store_32 s0, (sp)
   375f4:	f8 69 00 f8 	call 108512 <printf>
   375f8:	01 00 00 4f 	movehi s0, 1
   375fc:	00 94 77 00 	or s0, s0, 7653
   37600:	7d 1d 00 f8 	call 30196 <W_GetNumForName>
   37604:	3d 04 00 4f 	movehi s1, 61
   37608:	00 04 00 05 	add_i s0, s0, 1
   3760c:	01 33 47 00 	or s24, s1, 4556
   37610:	18 00 00 88 	store_32 s0, (s24)
   37614:	02 00 00 4f 	movehi s0, 2
   37618:	00 80 15 00 	or s0, s0, 1376
   3761c:	76 1d 00 f8 	call 30168 <W_GetNumForName>
   37620:	3d 04 00 4f 	movehi s1, 61
   37624:	00 fc ff 05 	add_i s0, s0, -1
   37628:	5d 04 00 4f 	movehi s2, 61
   3762c:	21 80 47 00 	or s1, s1, 4576
   37630:	22 b3 47 00 	or s25, s2, 4588
   37634:	01 00 00 88 	store_32 s0, (s1)
   37638:	38 00 00 a8 	load_32 s1, (s24)
   3763c:	00 03 00 0f 	move s24, 0
   37640:	00 80 60 c0 	sub_i s0, s0, s1
   37644:	20 08 00 0b 	shl s1, s0, 2
   37648:	00 04 00 05 	add_i s0, s0, 1
   3764c:	19 00 00 88 	store_32 s0, (s25)
   37650:	40 00 fc c0 	move s2, s24
   37654:	01 20 00 05 	add_i s0, s1, 8
   37658:	20 04 00 0f 	move s1, 1
   3765c:	9f 54 00 f8 	call 86652 <Z_Malloc>
   37660:	3d 04 00 4f 	movehi s1, 61
   37664:	21 70 47 00 	or s1, s1, 4572
   37668:	01 00 00 88 	store_32 s0, (s1)
   3766c:	39 00 00 a8 	load_32 s1, (s25)
   37670:	21 04 00 14 	cmplt_i s1, s1, 1
   37674:	01 01 00 f4 	bnz s1, 32 <R_InitData+0xc0>
   37678:	38 08 00 0b 	shl s1, s24, 2
   3767c:	20 80 50 c0 	add_i s1, s0, s1
   37680:	01 03 00 88 	store_32 s24, (s1)
   37684:	18 07 00 05 	add_i s24, s24, 1
   37688:	39 00 00 a8 	load_32 s1, (s25)
   3768c:	38 80 40 c1 	cmplt_i s1, s24, s1
   37690:	41 ff ff f5 	bnz s1, -24 <R_InitData+0xa4>
   37694:	00 00 00 4f 	movehi s0, 0
   37698:	00 7c 18 00 	or s0, s0, 1567
   3769c:	1e 00 00 88 	store_32 s0, (sp)
   376a0:	cd 69 00 f8 	call 108340 <printf>
   376a4:	52 ff ff f9 	call -696 <R_InitSpriteLumps>
   376a8:	00 00 00 4f 	movehi s0, 0
   376ac:	00 48 07 00 	or s0, s0, 466
   376b0:	1e 00 00 88 	store_32 s0, (sp)
   376b4:	c8 69 00 f8 	call 108320 <printf>
   376b8:	02 00 00 4f 	movehi s0, 2
   376bc:	00 98 15 00 	or s0, s0, 1382
   376c0:	4d 1d 00 f8 	call 30004 <W_GetNumForName>
   376c4:	00 03 f0 c0 	move s24, s0
   376c8:	74 1d 00 f8 	call 30160 <W_LumpLength>
   376cc:	00 fc 03 05 	add_i s0, s0, 255
   376d0:	20 04 00 0f 	move s1, 1
   376d4:	40 00 00 0f 	move s2, 0
   376d8:	80 54 00 f8 	call 86528 <Z_Malloc>
   376dc:	3d 04 00 4f 	movehi s1, 61
   376e0:	00 fc 03 05 	add_i s0, s0, 255
   376e4:	41 20 47 00 	or s2, s1, 4552
   376e8:	20 00 fc 01 	and s1, s0, -256
   376ec:	22 00 00 88 	store_32 s1, (s2)
   376f0:	00 00 fc c0 	move s0, s24
   376f4:	81 1d 00 f8 	call 30212 <W_ReadLump>
   376f8:	01 00 00 4f 	movehi s0, 1
   376fc:	00 d8 35 00 	or s0, s0, 3446
   37700:	1e 00 00 88 	store_32 s0, (sp)
   37704:	b4 69 00 f8 	call 108240 <printf>
   37708:	fe d3 01 a8 	load_32 ra, 116(sp)
   3770c:	3e e3 01 a8 	load_32 s25, 120(sp)
   37710:	1e f3 01 a8 	load_32 s24, 124(sp)
   37714:	de 03 02 05 	add_i sp, sp, 128
   37718:	1f 00 00 f0 	ret

000000000003771c R_FlatNumForName:
   3771c:	de 03 fe 05 	add_i sp, sp, -128
   37720:	1e f3 01 88 	store_32 s24, 124(sp)
   37724:	3e e3 01 88 	store_32 s25, 120(sp)
   37728:	fe d3 01 88 	store_32 ra, 116(sp)
   3772c:	20 03 f0 c0 	move s25, s0
   37730:	0c 1d 00 f8 	call 29744 <W_CheckNumForName>
   37734:	00 03 f0 c0 	move s24, s0
   37738:	18 fc ff 11 	cmpne_i s0, s24, -1
   3773c:	00 04 00 f4 	bnz s0, 128 <R_FlatNumForName+0xa0>
   37740:	00 00 00 0f 	move s0, 0
   37744:	1e c0 01 82 	store_8 s0, 112(sp)
   37748:	19 00 00 a0 	load_u8 s0, (s25)
   3774c:	39 04 00 a0 	load_u8 s1, 1(s25)
   37750:	59 08 00 a0 	load_u8 s2, 2(s25)
   37754:	79 0c 00 a0 	load_u8 s3, 3(s25)
   37758:	21 20 00 0b 	shl s1, s1, 8
   3775c:	63 20 00 0b 	shl s3, s3, 8
   37760:	01 00 00 c0 	or s0, s1, s0
   37764:	43 00 01 c0 	or s2, s3, s2
   37768:	79 10 00 a0 	load_u8 s3, 4(s25)
   3776c:	99 14 00 a0 	load_u8 s4, 5(s25)
   37770:	b9 18 00 a0 	load_u8 s5, 6(s25)
   37774:	d9 1c 00 a0 	load_u8 s6, 7(s25)
   37778:	42 40 00 0b 	shl s2, s2, 16
   3777c:	84 20 00 0b 	shl s4, s4, 8
   37780:	02 00 00 c0 	or s0, s2, s0
   37784:	c6 20 00 0b 	shl s6, s6, 8
   37788:	5e a0 01 05 	add_i s2, sp, 104
   3778c:	64 80 01 c0 	or s3, s4, s3
   37790:	26 80 02 c0 	or s1, s6, s5
   37794:	a2 10 00 00 	or s5, s2, 4
   37798:	21 40 00 0b 	shl s1, s1, 16
   3779c:	21 80 01 c0 	or s1, s1, s3
   377a0:	25 00 00 88 	store_32 s1, (s5)
   377a4:	1e a0 01 88 	store_32 s0, 104(sp)
   377a8:	01 00 00 4f 	movehi s0, 1
   377ac:	5e 10 00 88 	store_32 s2, 4(sp)
   377b0:	00 b4 77 00 	or s0, s0, 7661
   377b4:	1e 00 00 88 	store_32 s0, (sp)
   377b8:	53 5a ff f9 	call -169652 <I_Error>
   377bc:	1d 04 00 4f 	movehi s0, 61
   377c0:	00 30 47 00 	or s0, s0, 4556
   377c4:	00 00 00 a8 	load_32 s0, (s0)
   377c8:	fe d3 01 a8 	load_32 ra, 116(sp)
   377cc:	3e e3 01 a8 	load_32 s25, 120(sp)
   377d0:	18 00 60 c0 	sub_i s0, s24, s0
   377d4:	1e f3 01 a8 	load_32 s24, 124(sp)
   377d8:	de 03 02 05 	add_i sp, sp, 128
   377dc:	1f 00 00 f0 	ret

00000000000377e0 R_CheckTextureNumForName:
   377e0:	de 03 ff 05 	add_i sp, sp, -64
   377e4:	1e f3 00 88 	store_32 s24, 60(sp)
   377e8:	3e e3 00 88 	store_32 s25, 56(sp)
   377ec:	5e d3 00 88 	store_32 s26, 52(sp)
   377f0:	7e c3 00 88 	store_32 s27, 48(sp)
   377f4:	fe b3 00 88 	store_32 ra, 44(sp)
   377f8:	20 03 f0 c0 	move s25, s0
   377fc:	19 00 00 a0 	load_u8 s0, (s25)
   37800:	00 b4 00 10 	cmpeq_i s0, s0, 45
   37804:	40 00 00 f4 	bnz s0, 8 <R_CheckTextureNumForName+0x2c>
   37808:	03 00 00 f6 	b 12 <R_CheckTextureNumForName+0x34>
   3780c:	00 03 00 0f 	move s24, 0
   37810:	1a 00 00 f6 	b 104 <R_CheckTextureNumForName+0x98>
   37814:	1d 04 00 4f 	movehi s0, 61
   37818:	00 ff ff 0f 	move s24, -1
   3781c:	00 e0 47 00 	or s0, s0, 4600
   37820:	00 00 00 a8 	load_32 s0, (s0)
   37824:	1e a0 00 88 	store_32 s0, 40(sp)
   37828:	00 04 00 14 	cmplt_i s0, s0, 1
   3782c:	60 02 00 f4 	bnz s0, 76 <R_CheckTextureNumForName+0x98>
   37830:	1d 04 00 4f 	movehi s0, 61
   37834:	1e 93 00 88 	store_32 s24, 36(sp)
   37838:	00 03 00 0f 	move s24, 0
   3783c:	40 23 00 0f 	move s26, 8
   37840:	00 90 48 00 	or s0, s0, 4644
   37844:	60 03 00 a8 	load_32 s27, (s0)
   37848:	18 08 00 0b 	shl s0, s24, 2
   3784c:	1b 00 50 c0 	add_i s0, s27, s0
   37850:	00 00 00 a8 	load_32 s0, (s0)
   37854:	20 80 fc c0 	move s1, s25
   37858:	40 00 fd c0 	move s2, s26
   3785c:	a8 6b 00 f8 	call 110240 <strncasecmp>
   37860:	c0 00 00 f2 	bz s0, 24 <R_CheckTextureNumForName+0x98>
   37864:	1e a0 00 a8 	load_32 s0, 40(sp)
   37868:	18 07 00 05 	add_i s24, s24, 1
   3786c:	18 00 40 c1 	cmplt_i s0, s24, s0
   37870:	c0 fe ff f5 	bnz s0, -40 <R_CheckTextureNumForName+0x68>
   37874:	1e 93 00 a8 	load_32 s24, 36(sp)
   37878:	00 00 fc c0 	move s0, s24
   3787c:	fe b3 00 a8 	load_32 ra, 44(sp)
   37880:	7e c3 00 a8 	load_32 s27, 48(sp)
   37884:	5e d3 00 a8 	load_32 s26, 52(sp)
   37888:	3e e3 00 a8 	load_32 s25, 56(sp)
   3788c:	1e f3 00 a8 	load_32 s24, 60(sp)
   37890:	de 03 01 05 	add_i sp, sp, 64
   37894:	1f 00 00 f0 	ret

0000000000037898 R_TextureNumForName:
   37898:	de 03 fe 05 	add_i sp, sp, -128
   3789c:	1e f3 01 88 	store_32 s24, 124(sp)
   378a0:	3e e3 01 88 	store_32 s25, 120(sp)
   378a4:	5e d3 01 88 	store_32 s26, 116(sp)
   378a8:	7e c3 01 88 	store_32 s27, 112(sp)
   378ac:	fe b3 01 88 	store_32 ra, 108(sp)
   378b0:	00 03 f0 c0 	move s24, s0
   378b4:	18 00 00 a0 	load_u8 s0, (s24)
   378b8:	00 b4 00 10 	cmpeq_i s0, s0, 45
   378bc:	40 00 00 f4 	bnz s0, 8 <R_TextureNumForName+0x2c>
   378c0:	03 00 00 f6 	b 12 <R_TextureNumForName+0x34>
   378c4:	20 03 00 0f 	move s25, 0
   378c8:	1d 00 00 f6 	b 116 <R_TextureNumForName+0xa4>
   378cc:	1d 04 00 4f 	movehi s0, 61
   378d0:	00 e0 47 00 	or s0, s0, 4600
   378d4:	00 00 00 a8 	load_32 s0, (s0)
   378d8:	1e a0 01 88 	store_32 s0, 104(sp)
   378dc:	00 04 00 14 	cmplt_i s0, s0, 1
   378e0:	20 02 00 f4 	bnz s0, 68 <R_TextureNumForName+0x8c>
   378e4:	1d 04 00 4f 	movehi s0, 61
   378e8:	20 03 00 0f 	move s25, 0
   378ec:	40 23 00 0f 	move s26, 8
   378f0:	00 90 48 00 	or s0, s0, 4644
   378f4:	60 03 00 a8 	load_32 s27, (s0)
   378f8:	19 08 00 0b 	shl s0, s25, 2
   378fc:	1b 00 50 c0 	add_i s0, s27, s0
   37900:	00 00 00 a8 	load_32 s0, (s0)
   37904:	20 00 fc c0 	move s1, s24
   37908:	40 00 fd c0 	move s2, s26
   3790c:	7c 6b 00 f8 	call 110064 <strncasecmp>
   37910:	60 01 00 f2 	bz s0, 44 <R_TextureNumForName+0xa4>
   37914:	1e a0 01 a8 	load_32 s0, 104(sp)
   37918:	39 07 00 05 	add_i s25, s25, 1
   3791c:	19 00 40 c1 	cmplt_i s0, s25, s0
   37920:	c0 fe ff f5 	bnz s0, -40 <R_TextureNumForName+0x60>
   37924:	00 00 00 4f 	movehi s0, 0
   37928:	1e 13 00 88 	store_32 s24, 4(sp)
   3792c:	00 fc 38 00 	or s0, s0, 3647
   37930:	1e 00 00 88 	store_32 s0, (sp)
   37934:	f4 59 ff f9 	call -170032 <I_Error>
   37938:	20 ff ff 0f 	move s25, -1
   3793c:	00 80 fc c0 	move s0, s25
   37940:	fe b3 01 a8 	load_32 ra, 108(sp)
   37944:	7e c3 01 a8 	load_32 s27, 112(sp)
   37948:	5e d3 01 a8 	load_32 s26, 116(sp)
   3794c:	3e e3 01 a8 	load_32 s25, 120(sp)
   37950:	1e f3 01 a8 	load_32 s24, 124(sp)
   37954:	de 03 02 05 	add_i sp, sp, 128
   37958:	1f 00 00 f0 	ret

000000000003795c R_PrecacheLevel:
   3795c:	de 03 fe 05 	add_i sp, sp, -128
   37960:	1e f3 01 88 	store_32 s24, 124(sp)
   37964:	3e e3 01 88 	store_32 s25, 120(sp)
   37968:	5e d3 01 88 	store_32 s26, 116(sp)
   3796c:	7e c3 01 88 	store_32 s27, 112(sp)
   37970:	be b3 01 88 	store_32 fp, 108(sp)
   37974:	fe a3 01 88 	store_32 ra, 104(sp)
   37978:	a0 03 ff c0 	move fp, sp
   3797c:	1a 04 00 4f 	movehi s0, 58
   37980:	00 30 6f 00 	or s0, s0, 7116
   37984:	00 00 00 a8 	load_32 s0, (s0)
   37988:	20 2e 00 f4 	bnz s0, 1476 <R_PrecacheLevel+0x5f0>
   3798c:	1d 04 00 4f 	movehi s0, 61
   37990:	00 b0 47 00 	or s0, s0, 4588
   37994:	1d 90 01 88 	store_32 s0, 100(fp)
   37998:	40 03 00 a8 	load_32 s26, (s0)
   3799c:	1a fc 00 05 	add_i s0, s26, 63
   379a0:	00 00 ff 01 	and s0, s0, -64
   379a4:	1e 03 60 c0 	sub_i s24, sp, s0
   379a8:	c0 03 fc c0 	move sp, s24
   379ac:	20 03 00 0f 	move s25, 0
   379b0:	00 00 fc c0 	move s0, s24
   379b4:	20 80 fc c0 	move s1, s25
   379b8:	40 00 fd c0 	move s2, s26
   379bc:	3a 68 00 f8 	call 106728 <memset>
   379c0:	1b 04 00 4f 	movehi s0, 59
   379c4:	00 80 4a 00 	or s0, s0, 4768
   379c8:	00 00 00 a8 	load_32 s0, (s0)
   379cc:	20 04 00 14 	cmplt_i s1, s0, 1
   379d0:	21 02 00 f4 	bnz s1, 68 <R_PrecacheLevel+0xb8>
   379d4:	3b 04 00 4f 	movehi s1, 59
   379d8:	40 00 00 0f 	move s2, 0
   379dc:	60 04 00 0f 	move s3, 1
   379e0:	21 80 4b 00 	or s1, s1, 4832
   379e4:	21 00 00 a8 	load_32 s1, (s1)
   379e8:	82 60 01 07 	mull_i s4, s2, 88
   379ec:	81 00 52 c0 	add_i s4, s1, s4
   379f0:	42 04 00 05 	add_i s2, s2, 1
   379f4:	a4 20 00 a6 	load_s16 s5, 8(s4)
   379f8:	b8 80 52 c0 	add_i s5, s24, s5
   379fc:	65 00 00 82 	store_8 s3, (s5)
   37a00:	a2 00 40 c1 	cmplt_i s5, s2, s0
   37a04:	84 28 00 a6 	load_s16 s4, 10(s4)
   37a08:	98 00 52 c0 	add_i s4, s24, s4
   37a0c:	64 00 00 82 	store_8 s3, (s4)
   37a10:	c5 fe ff f5 	bnz s5, -40 <R_PrecacheLevel+0x8c>
   37a14:	1d 04 00 4f 	movehi s0, 61
   37a18:	60 63 47 00 	or s27, s0, 4568
   37a1c:	1a 04 00 14 	cmplt_i s0, s26, 1
   37a20:	3b 03 00 88 	store_32 s25, (s27)
   37a24:	c0 03 00 f4 	bnz s0, 120 <R_PrecacheLevel+0x140>
   37a28:	1d 04 00 4f 	movehi s0, 61
   37a2c:	20 0c 00 4f 	movehi s1, 96
   37a30:	00 30 47 00 	or s0, s0, 4556
   37a34:	1d 80 01 88 	store_32 s0, 96(fp)
   37a38:	01 90 01 00 	or s0, s1, 100
   37a3c:	1d 70 01 88 	store_32 s0, 92(fp)
   37a40:	00 94 01 0f 	move s0, 101
   37a44:	1d 60 01 88 	store_32 s0, 88(fp)
   37a48:	18 80 5c c0 	add_i s0, s24, s25
   37a4c:	00 00 00 a0 	load_u8 s0, (s0)
   37a50:	00 02 00 f2 	bz s0, 64 <R_PrecacheLevel+0x134>
   37a54:	1d 80 01 a8 	load_32 s0, 96(fp)
   37a58:	00 00 00 a8 	load_32 s0, (s0)
   37a5c:	3d 70 01 a8 	load_32 s1, 92(fp)
   37a60:	00 80 5c c0 	add_i s0, s0, s25
   37a64:	21 00 00 a8 	load_32 s1, (s1)
   37a68:	40 50 00 07 	mull_i s2, s0, 20
   37a6c:	21 00 51 c0 	add_i s1, s1, s2
   37a70:	21 40 00 a8 	load_32 s1, 16(s1)
   37a74:	5b 00 00 a8 	load_32 s2, (s27)
   37a78:	22 80 50 c0 	add_i s1, s2, s1
   37a7c:	3b 00 00 88 	store_32 s1, (s27)
   37a80:	3d 60 01 a8 	load_32 s1, 88(fp)
   37a84:	e5 1c 00 f8 	call 29588 <W_CacheLumpNum>
   37a88:	1d 90 01 a8 	load_32 s0, 100(fp)
   37a8c:	40 03 00 a8 	load_32 s26, (s0)
   37a90:	39 07 00 05 	add_i s25, s25, 1
   37a94:	19 00 4d c1 	cmplt_i s0, s25, s26
   37a98:	80 fd ff f5 	bnz s0, -80 <R_PrecacheLevel+0xec>
   37a9c:	1d 04 00 4f 	movehi s0, 61
   37aa0:	00 e0 47 00 	or s0, s0, 4600
   37aa4:	1d 50 01 88 	store_32 s0, 84(fp)
   37aa8:	40 00 00 a8 	load_32 s2, (s0)
   37aac:	02 fc 00 05 	add_i s0, s2, 63
   37ab0:	00 00 ff 01 	and s0, s0, -64
   37ab4:	5e 03 60 c0 	sub_i s26, sp, s0
   37ab8:	c0 03 fd c0 	move sp, s26
   37abc:	20 00 00 0f 	move s1, 0
   37ac0:	00 00 fd c0 	move s0, s26
   37ac4:	3d 60 01 88 	store_32 s1, 88(fp)
   37ac8:	00 03 f1 c0 	move s24, s2
   37acc:	f6 67 00 f8 	call 106456 <memset>
   37ad0:	1b 04 00 4f 	movehi s0, 59
   37ad4:	00 a0 4a 00 	or s0, s0, 4776
   37ad8:	00 00 00 a8 	load_32 s0, (s0)
   37adc:	20 04 00 14 	cmplt_i s1, s0, 1
   37ae0:	81 02 00 f4 	bnz s1, 80 <R_PrecacheLevel+0x1d4>
   37ae4:	3b 04 00 4f 	movehi s1, 59
   37ae8:	40 00 00 0f 	move s2, 0
   37aec:	60 04 00 0f 	move s3, 1
   37af0:	21 a0 4b 00 	or s1, s1, 4840
   37af4:	21 00 00 a8 	load_32 s1, (s1)
   37af8:	82 50 00 07 	mull_i s4, s2, 20
   37afc:	81 00 52 c0 	add_i s4, s1, s4
   37b00:	42 04 00 05 	add_i s2, s2, 1
   37b04:	a4 20 00 a6 	load_s16 s5, 8(s4)
   37b08:	ba 80 52 c0 	add_i s5, s26, s5
   37b0c:	65 00 00 82 	store_8 s3, (s5)
   37b10:	a4 30 00 a6 	load_s16 s5, 12(s4)
   37b14:	ba 80 52 c0 	add_i s5, s26, s5
   37b18:	65 00 00 82 	store_8 s3, (s5)
   37b1c:	a2 00 40 c1 	cmplt_i s5, s2, s0
   37b20:	84 28 00 a6 	load_s16 s4, 10(s4)
   37b24:	9a 00 52 c0 	add_i s4, s26, s4
   37b28:	64 00 00 82 	store_8 s3, (s4)
   37b2c:	65 fe ff f5 	bnz s5, -52 <R_PrecacheLevel+0x19c>
   37b30:	12 08 00 4f 	movehi s0, 82
   37b34:	40 04 00 0f 	move s2, 1
   37b38:	3d 04 00 4f 	movehi s1, 61
   37b3c:	00 80 4b 00 	or s0, s0, 4832
   37b40:	a1 80 48 00 	or s5, s1, 4640
   37b44:	00 00 00 a8 	load_32 s0, (s0)
   37b48:	5d 30 01 88 	store_32 s2, 76(fp)
   37b4c:	1a 00 50 c0 	add_i s0, s26, s0
   37b50:	40 00 00 82 	store_8 s2, (s0)
   37b54:	40 00 fc c0 	move s2, s24
   37b58:	3d 60 01 a8 	load_32 s1, 88(fp)
   37b5c:	25 00 00 88 	store_32 s1, (s5)
   37b60:	02 04 00 14 	cmplt_i s0, s2, 1
   37b64:	20 06 00 f4 	bnz s0, 196 <R_PrecacheLevel+0x2cc>
   37b68:	1d 04 00 4f 	movehi s0, 61
   37b6c:	20 0c 00 4f 	movehi s1, 96
   37b70:	20 97 01 0f 	move s25, 101
   37b74:	00 90 48 00 	or s0, s0, 4644
   37b78:	1d 70 01 88 	store_32 s0, 92(fp)
   37b7c:	dd 60 01 a8 	load_32 s6, 88(fp)
   37b80:	61 93 01 00 	or s27, s1, 100
   37b84:	5d 43 01 88 	store_32 s26, 80(fp)
   37b88:	1a 00 53 c0 	add_i s0, s26, s6
   37b8c:	00 00 00 a0 	load_u8 s0, (s0)
   37b90:	60 04 00 f2 	bz s0, 140 <R_PrecacheLevel+0x2c0>
   37b94:	1d 70 01 a8 	load_32 s0, 92(fp)
   37b98:	86 08 00 0b 	shl s4, s6, 2
   37b9c:	00 00 00 a8 	load_32 s0, (s0)
   37ba0:	00 00 52 c0 	add_i s0, s0, s4
   37ba4:	80 00 00 a8 	load_32 s4, (s0)
   37ba8:	04 30 00 a6 	load_s16 s0, 12(s4)
   37bac:	00 04 00 14 	cmplt_i s0, s0, 1
   37bb0:	60 03 00 f4 	bnz s0, 108 <R_PrecacheLevel+0x2c0>
   37bb4:	dd 80 01 88 	store_32 s6, 96(fp)
   37bb8:	5d 63 01 a8 	load_32 s26, 88(fp)
   37bbc:	9d 90 01 88 	store_32 s4, 100(fp)
   37bc0:	1a 30 00 07 	mull_i s0, s26, 12
   37bc4:	04 00 50 c0 	add_i s0, s4, s0
   37bc8:	00 60 00 a8 	load_32 s0, 24(s0)
   37bcc:	9b 00 00 a8 	load_32 s4, (s27)
   37bd0:	40 50 00 07 	mull_i s2, s0, 20
   37bd4:	44 00 51 c0 	add_i s2, s4, s2
   37bd8:	82 40 00 a8 	load_32 s4, 16(s2)
   37bdc:	45 00 00 a8 	load_32 s2, (s5)
   37be0:	42 00 52 c0 	add_i s2, s2, s4
   37be4:	45 00 00 88 	store_32 s2, (s5)
   37be8:	20 80 fc c0 	move s1, s25
   37bec:	00 83 f2 c0 	move s24, s5
   37bf0:	8a 1c 00 f8 	call 29224 <W_CacheLumpNum>
   37bf4:	9d 90 01 a8 	load_32 s4, 100(fp)
   37bf8:	a0 00 fc c0 	move s5, s24
   37bfc:	5a 07 00 05 	add_i s26, s26, 1
   37c00:	04 30 00 a6 	load_s16 s0, 12(s4)
   37c04:	1a 00 40 c1 	cmplt_i s0, s26, s0
   37c08:	c0 fd ff f5 	bnz s0, -72 <R_PrecacheLevel+0x264>
   37c0c:	1d 50 01 a8 	load_32 s0, 84(fp)
   37c10:	40 00 00 a8 	load_32 s2, (s0)
   37c14:	5d 43 01 a8 	load_32 s26, 80(fp)
   37c18:	dd 80 01 a8 	load_32 s6, 96(fp)
   37c1c:	c6 04 00 05 	add_i s6, s6, 1
   37c20:	06 00 41 c1 	cmplt_i s0, s6, s2
   37c24:	20 fb ff f5 	bnz s0, -156 <R_PrecacheLevel+0x22c>
   37c28:	12 08 00 4f 	movehi s0, 82
   37c2c:	00 e0 55 00 	or s0, s0, 5496
   37c30:	1d 00 01 88 	store_32 s0, 64(fp)
   37c34:	60 03 00 a8 	load_32 s27, (s0)
   37c38:	1b fc 00 05 	add_i s0, s27, 63
   37c3c:	00 00 ff 01 	and s0, s0, -64
   37c40:	1e 03 60 c0 	sub_i s24, sp, s0
   37c44:	c0 03 fc c0 	move sp, s24
   37c48:	20 00 00 0f 	move s1, 0
   37c4c:	00 00 fc c0 	move s0, s24
   37c50:	3d 10 01 88 	store_32 s1, 68(fp)
   37c54:	40 80 fd c0 	move s2, s27
   37c58:	93 67 00 f8 	call 106060 <memset>
   37c5c:	1c 04 00 4f 	movehi s0, 60
   37c60:	00 50 02 00 	or s0, s0, 148
   37c64:	20 10 00 a8 	load_32 s1, 4(s0)
   37c68:	9d 30 01 a8 	load_32 s4, 76(fp)
   37c6c:	41 00 00 c1 	cmpeq_i s2, s1, s0
   37c70:	22 02 00 f4 	bnz s2, 68 <R_PrecacheLevel+0x358>
   37c74:	59 00 00 4f 	movehi s2, 25
   37c78:	42 50 31 00 	or s2, s2, 3156
   37c7c:	61 20 00 a8 	load_32 s3, 8(s1)
   37c80:	63 00 11 c1 	cmpne_i s3, s3, s2
   37c84:	43 00 00 f4 	bnz s3, 8 <R_PrecacheLevel+0x330>
   37c88:	05 00 00 f6 	b 20 <R_PrecacheLevel+0x340>
   37c8c:	21 10 00 a8 	load_32 s1, 4(s1)
   37c90:	61 00 10 c1 	cmpne_i s3, s1, s0
   37c94:	43 ff ff f5 	bnz s3, -24 <R_PrecacheLevel+0x320>
   37c98:	07 00 00 f6 	b 28 <R_PrecacheLevel+0x358>
   37c9c:	61 90 00 a8 	load_32 s3, 36(s1)
   37ca0:	78 80 51 c0 	add_i s3, s24, s3
   37ca4:	83 00 00 82 	store_8 s4, (s3)
   37ca8:	21 10 00 a8 	load_32 s1, 4(s1)
   37cac:	61 00 10 c1 	cmpne_i s3, s1, s0
   37cb0:	63 fe ff f5 	bnz s3, -52 <R_PrecacheLevel+0x320>
   37cb4:	1d 04 00 4f 	movehi s0, 61
   37cb8:	3d 10 01 a8 	load_32 s1, 68(fp)
   37cbc:	20 f3 47 00 	or s25, s0, 4604
   37cc0:	1b 04 00 14 	cmplt_i s0, s27, 1
   37cc4:	39 00 00 88 	store_32 s1, (s25)
   37cc8:	20 14 00 f4 	bnz s0, 644 <R_PrecacheLevel+0x5f0>
   37ccc:	12 08 00 4f 	movehi s0, 82
   37cd0:	bd 10 01 a8 	load_32 s5, 68(fp)
   37cd4:	40 0c 00 4f 	movehi s2, 96
   37cd8:	1d f3 00 88 	store_32 s24, 60(fp)
   37cdc:	3d 04 00 4f 	movehi s1, 61
   37ce0:	60 20 61 00 	or s3, s0, 6216
   37ce4:	7d 30 01 88 	store_32 s3, 76(fp)
   37ce8:	42 90 01 00 	or s2, s2, 100
   37cec:	5d 50 01 88 	store_32 s2, 84(fp)
   37cf0:	41 53 47 00 	or s26, s1, 4564
   37cf4:	5d 73 01 88 	store_32 s26, 92(fp)
   37cf8:	80 94 01 0f 	move s4, 101
   37cfc:	9d 80 01 88 	store_32 s4, 96(fp)
   37d00:	18 80 52 c0 	add_i s0, s24, s5
   37d04:	00 00 00 a0 	load_u8 s0, (s0)
   37d08:	c0 11 00 f2 	bz s0, 568 <R_PrecacheLevel+0x5e4>
   37d0c:	03 00 00 a8 	load_32 s0, (s3)
   37d10:	c5 0c 00 0b 	shl s6, s5, 3
   37d14:	20 00 53 c0 	add_i s1, s0, s6
   37d18:	21 00 00 a8 	load_32 s1, (s1)
   37d1c:	21 04 00 14 	cmplt_i s1, s1, 1
   37d20:	01 11 00 f4 	bnz s1, 544 <R_PrecacheLevel+0x5e4>
   37d24:	bd 20 01 88 	store_32 s5, 72(fp)
   37d28:	5d 10 01 a8 	load_32 s2, 68(fp)
   37d2c:	dd 40 01 88 	store_32 s6, 80(fp)
   37d30:	00 00 53 c0 	add_i s0, s0, s6
   37d34:	5d 60 01 88 	store_32 s2, 88(fp)
   37d38:	22 70 00 07 	mull_i s1, s2, 28
   37d3c:	00 10 00 a8 	load_32 s0, 4(s0)
   37d40:	40 80 50 c0 	add_i s2, s0, s1
   37d44:	5d 90 01 88 	store_32 s2, 100(fp)
   37d48:	3d 70 01 a8 	load_32 s1, 92(fp)
   37d4c:	01 00 00 a8 	load_32 s0, (s1)
   37d50:	00 83 f0 c0 	move s24, s1
   37d54:	22 10 00 a6 	load_s16 s1, 4(s2)
   37d58:	5d 50 01 a8 	load_32 s2, 84(fp)
   37d5c:	00 80 50 c0 	add_i s0, s0, s1
   37d60:	22 00 00 a8 	load_32 s1, (s2)
   37d64:	60 03 f1 c0 	move s27, s2
   37d68:	40 50 00 07 	mull_i s2, s0, 20
   37d6c:	21 00 51 c0 	add_i s1, s1, s2
   37d70:	21 40 00 a8 	load_32 s1, 16(s1)
   37d74:	59 00 00 a8 	load_32 s2, (s25)
   37d78:	22 80 50 c0 	add_i s1, s2, s1
   37d7c:	39 00 00 88 	store_32 s1, (s25)
   37d80:	3d 80 01 a8 	load_32 s1, 96(fp)
   37d84:	25 1c 00 f8 	call 28820 <W_CacheLumpNum>
   37d88:	18 00 00 a8 	load_32 s0, (s24)
   37d8c:	40 03 fc c0 	move s26, s24
   37d90:	1d 93 01 a8 	load_32 s24, 100(fp)
   37d94:	38 18 00 a6 	load_s16 s1, 6(s24)
   37d98:	00 80 50 c0 	add_i s0, s0, s1
   37d9c:	3b 00 00 a8 	load_32 s1, (s27)
   37da0:	40 50 00 07 	mull_i s2, s0, 20
   37da4:	21 00 51 c0 	add_i s1, s1, s2
   37da8:	21 40 00 a8 	load_32 s1, 16(s1)
   37dac:	59 00 00 a8 	load_32 s2, (s25)
   37db0:	22 80 50 c0 	add_i s1, s2, s1
   37db4:	39 00 00 88 	store_32 s1, (s25)
   37db8:	3d 80 01 a8 	load_32 s1, 96(fp)
   37dbc:	17 1c 00 f8 	call 28764 <W_CacheLumpNum>
   37dc0:	1a 00 00 a8 	load_32 s0, (s26)
   37dc4:	38 20 00 a6 	load_s16 s1, 8(s24)
   37dc8:	00 80 50 c0 	add_i s0, s0, s1
   37dcc:	3b 00 00 a8 	load_32 s1, (s27)
   37dd0:	40 50 00 07 	mull_i s2, s0, 20
   37dd4:	21 00 51 c0 	add_i s1, s1, s2
   37dd8:	21 40 00 a8 	load_32 s1, 16(s1)
   37ddc:	59 00 00 a8 	load_32 s2, (s25)
   37de0:	22 80 50 c0 	add_i s1, s2, s1
   37de4:	39 00 00 88 	store_32 s1, (s25)
   37de8:	1d 83 01 a8 	load_32 s24, 96(fp)
   37dec:	20 00 fc c0 	move s1, s24
   37df0:	0a 1c 00 f8 	call 28712 <W_CacheLumpNum>
   37df4:	1a 00 00 a8 	load_32 s0, (s26)
   37df8:	3d 90 01 a8 	load_32 s1, 100(fp)
   37dfc:	21 28 00 a6 	load_s16 s1, 10(s1)
   37e00:	00 80 50 c0 	add_i s0, s0, s1
   37e04:	3b 00 00 a8 	load_32 s1, (s27)
   37e08:	40 50 00 07 	mull_i s2, s0, 20
   37e0c:	21 00 51 c0 	add_i s1, s1, s2
   37e10:	21 40 00 a8 	load_32 s1, 16(s1)
   37e14:	59 00 00 a8 	load_32 s2, (s25)
   37e18:	22 80 50 c0 	add_i s1, s2, s1
   37e1c:	39 00 00 88 	store_32 s1, (s25)
   37e20:	20 00 fc c0 	move s1, s24
   37e24:	fd 1b 00 f8 	call 28660 <W_CacheLumpNum>
   37e28:	1a 00 00 a8 	load_32 s0, (s26)
   37e2c:	1d 93 01 a8 	load_32 s24, 100(fp)
   37e30:	38 30 00 a6 	load_s16 s1, 12(s24)
   37e34:	00 80 50 c0 	add_i s0, s0, s1
   37e38:	3b 00 00 a8 	load_32 s1, (s27)
   37e3c:	40 50 00 07 	mull_i s2, s0, 20
   37e40:	21 00 51 c0 	add_i s1, s1, s2
   37e44:	21 40 00 a8 	load_32 s1, 16(s1)
   37e48:	59 00 00 a8 	load_32 s2, (s25)
   37e4c:	22 80 50 c0 	add_i s1, s2, s1
   37e50:	39 00 00 88 	store_32 s1, (s25)
   37e54:	3d 80 01 a8 	load_32 s1, 96(fp)
   37e58:	f0 1b 00 f8 	call 28608 <W_CacheLumpNum>
   37e5c:	1a 00 00 a8 	load_32 s0, (s26)
   37e60:	38 38 00 a6 	load_s16 s1, 14(s24)
   37e64:	00 80 50 c0 	add_i s0, s0, s1
   37e68:	3b 00 00 a8 	load_32 s1, (s27)
   37e6c:	40 83 fd c0 	move s26, s27
   37e70:	40 50 00 07 	mull_i s2, s0, 20
   37e74:	21 00 51 c0 	add_i s1, s1, s2
   37e78:	21 40 00 a8 	load_32 s1, 16(s1)
   37e7c:	59 00 00 a8 	load_32 s2, (s25)
   37e80:	22 80 50 c0 	add_i s1, s2, s1
   37e84:	39 00 00 88 	store_32 s1, (s25)
   37e88:	7d 83 01 a8 	load_32 s27, 96(fp)
   37e8c:	20 80 fd c0 	move s1, s27
   37e90:	e2 1b 00 f8 	call 28552 <W_CacheLumpNum>
   37e94:	1d 73 01 a8 	load_32 s24, 92(fp)
   37e98:	18 00 00 a8 	load_32 s0, (s24)
   37e9c:	3d 90 01 a8 	load_32 s1, 100(fp)
   37ea0:	21 40 00 a6 	load_s16 s1, 16(s1)
   37ea4:	00 80 50 c0 	add_i s0, s0, s1
   37ea8:	3a 00 00 a8 	load_32 s1, (s26)
   37eac:	40 50 00 07 	mull_i s2, s0, 20
   37eb0:	21 00 51 c0 	add_i s1, s1, s2
   37eb4:	21 40 00 a8 	load_32 s1, 16(s1)
   37eb8:	59 00 00 a8 	load_32 s2, (s25)
   37ebc:	22 80 50 c0 	add_i s1, s2, s1
   37ec0:	39 00 00 88 	store_32 s1, (s25)
   37ec4:	20 80 fd c0 	move s1, s27
   37ec8:	d4 1b 00 f8 	call 28496 <W_CacheLumpNum>
   37ecc:	18 00 00 a8 	load_32 s0, (s24)
   37ed0:	3d 90 01 a8 	load_32 s1, 100(fp)
   37ed4:	21 48 00 a6 	load_s16 s1, 18(s1)
   37ed8:	00 80 50 c0 	add_i s0, s0, s1
   37edc:	3a 00 00 a8 	load_32 s1, (s26)
   37ee0:	40 50 00 07 	mull_i s2, s0, 20
   37ee4:	21 00 51 c0 	add_i s1, s1, s2
   37ee8:	21 40 00 a8 	load_32 s1, 16(s1)
   37eec:	59 00 00 a8 	load_32 s2, (s25)
   37ef0:	22 80 50 c0 	add_i s1, s2, s1
   37ef4:	39 00 00 88 	store_32 s1, (s25)
   37ef8:	20 80 fd c0 	move s1, s27
   37efc:	c7 1b 00 f8 	call 28444 <W_CacheLumpNum>
   37f00:	5d 60 01 a8 	load_32 s2, 88(fp)
   37f04:	dd 40 01 a8 	load_32 s6, 80(fp)
   37f08:	7d 30 01 a8 	load_32 s3, 76(fp)
   37f0c:	42 04 00 05 	add_i s2, s2, 1
   37f10:	03 00 00 a8 	load_32 s0, (s3)
   37f14:	20 00 53 c0 	add_i s1, s0, s6
   37f18:	21 00 00 a8 	load_32 s1, (s1)
   37f1c:	22 80 40 c1 	cmplt_i s1, s2, s1
   37f20:	81 f0 ff f5 	bnz s1, -496 <R_PrecacheLevel+0x3d4>
   37f24:	1d 00 01 a8 	load_32 s0, 64(fp)
   37f28:	60 03 00 a8 	load_32 s27, (s0)
   37f2c:	1d f3 00 a8 	load_32 s24, 60(fp)
   37f30:	5d 73 01 a8 	load_32 s26, 92(fp)
   37f34:	5d 50 01 a8 	load_32 s2, 84(fp)
   37f38:	9d 80 01 a8 	load_32 s4, 96(fp)
   37f3c:	bd 20 01 a8 	load_32 s5, 72(fp)
   37f40:	a5 04 00 05 	add_i s5, s5, 1
   37f44:	05 80 4d c1 	cmplt_i s0, s5, s27
   37f48:	c0 ed ff f5 	bnz s0, -584 <R_PrecacheLevel+0x3a4>
   37f4c:	c0 83 fe c0 	move sp, fp
   37f50:	fe a3 01 a8 	load_32 ra, 104(sp)
   37f54:	be b3 01 a8 	load_32 fp, 108(sp)
   37f58:	7e c3 01 a8 	load_32 s27, 112(sp)
   37f5c:	5e d3 01 a8 	load_32 s26, 116(sp)
   37f60:	3e e3 01 a8 	load_32 s25, 120(sp)
   37f64:	1e f3 01 a8 	load_32 s24, 124(sp)
   37f68:	de 03 02 05 	add_i sp, sp, 128
   37f6c:	1f 00 00 f0 	ret

0000000000037f70 R_DrawColumn:
   37f70:	de 03 fe 05 	add_i sp, sp, -128
   37f74:	1e f3 01 88 	store_32 s24, 124(sp)
   37f78:	3e e3 01 88 	store_32 s25, 120(sp)
   37f7c:	5e d3 01 88 	store_32 s26, 116(sp)
   37f80:	fe c3 01 88 	store_32 ra, 112(sp)
   37f84:	1e 04 00 4f 	movehi s0, 62
   37f88:	3e 04 00 4f 	movehi s1, 62
   37f8c:	00 20 0f 00 	or s0, s0, 968
   37f90:	21 33 0f 00 	or s25, s1, 972
   37f94:	40 00 00 a8 	load_32 s2, (s0)
   37f98:	19 00 00 a8 	load_32 s0, (s25)
   37f9c:	02 03 60 c0 	sub_i s24, s2, s0
   37fa0:	38 00 00 14 	cmplt_i s1, s24, 0
   37fa4:	81 07 00 f4 	bnz s1, 240 <R_DrawColumn+0x124>
   37fa8:	3e 04 00 4f 	movehi s1, 62
   37fac:	62 1c 03 12 	cmpgt_i s3, s2, 199
   37fb0:	41 13 0f 00 	or s26, s1, 964
   37fb4:	3a 00 00 a8 	load_32 s1, (s26)
   37fb8:	a3 00 00 f4 	bnz s3, 20 <R_DrawColumn+0x5c>
   37fbc:	60 00 00 14 	cmplt_i s3, s0, 0
   37fc0:	63 00 00 f4 	bnz s3, 12 <R_DrawColumn+0x5c>
   37fc4:	61 00 05 18 	cmplt_u s3, s1, 320
   37fc8:	43 01 00 f4 	bnz s3, 40 <R_DrawColumn+0x80>
   37fcc:	3e 30 00 88 	store_32 s1, 12(sp)
   37fd0:	22 00 00 4f 	movehi s1, 2
   37fd4:	5e 20 00 88 	store_32 s2, 8(sp)
   37fd8:	1e 10 00 88 	store_32 s0, 4(sp)
   37fdc:	01 bc 3b 00 	or s0, s1, 3823
   37fe0:	1e 00 00 88 	store_32 s0, (sp)
   37fe4:	48 58 ff f9 	call -171744 <I_Error>
   37fe8:	19 00 00 a8 	load_32 s0, (s25)
   37fec:	3a 00 00 a8 	load_32 s1, (s26)
   37ff0:	5e 04 00 4f 	movehi s2, 62
   37ff4:	7d 04 00 4f 	movehi s3, 61
   37ff8:	80 08 00 0b 	shl s4, s0, 2
   37ffc:	42 60 1c 00 	or s2, s2, 1816
   38000:	63 c0 48 00 	or s3, s3, 4656
   38004:	21 08 00 0b 	shl s1, s1, 2
   38008:	42 00 52 c0 	add_i s2, s2, s4
   3800c:	23 80 50 c0 	add_i s1, s3, s1
   38010:	9e 04 00 4f 	movehi s4, 62
   38014:	be 04 00 4f 	movehi s5, 62
   38018:	42 00 00 a8 	load_32 s2, (s2)
   3801c:	61 00 00 a8 	load_32 s3, (s1)
   38020:	3e 04 00 4f 	movehi s1, 62
   38024:	84 f0 0e 00 	or s4, s4, 956
   38028:	a5 90 50 00 	or s5, s5, 5156
   3802c:	21 d0 0e 00 	or s1, s1, 948
   38030:	21 00 00 a8 	load_32 s1, (s1)
   38034:	84 00 00 a8 	load_32 s4, (s4)
   38038:	a5 00 00 a8 	load_32 s5, (s5)
   3803c:	a0 80 62 c0 	sub_i s5, s0, s5
   38040:	02 80 51 c0 	add_i s0, s2, s3
   38044:	7e 04 00 4f 	movehi s3, 62
   38048:	45 80 70 c0 	mull_i s2, s5, s1
   3804c:	be 04 00 4f 	movehi s5, 62
   38050:	63 c0 0e 00 	or s3, s3, 944
   38054:	42 00 52 c0 	add_i s2, s2, s4
   38058:	85 e0 0e 00 	or s4, s5, 952
   3805c:	e2 40 00 0a 	shr s7, s2, 16
   38060:	a3 00 00 a8 	load_32 s5, (s3)
   38064:	c4 00 00 a8 	load_32 s6, (s4)
   38068:	42 80 50 c0 	add_i s2, s2, s1
   3806c:	e7 fc 01 01 	and s7, s7, 127
   38070:	c6 80 53 c0 	add_i s6, s6, s7
   38074:	c6 00 00 a0 	load_u8 s6, (s6)
   38078:	a5 00 53 c0 	add_i s5, s5, s6
   3807c:	c0 00 fc c0 	move s6, s24
   38080:	a5 00 00 a0 	load_u8 s5, (s5)
   38084:	a0 00 00 82 	store_8 s5, (s0)
   38088:	00 00 05 05 	add_i s0, s0, 320
   3808c:	06 ff ff 05 	add_i s24, s6, -1
   38090:	66 fe ff f5 	bnz s6, -52 <R_DrawColumn+0xec>
   38094:	fe c3 01 a8 	load_32 ra, 112(sp)
   38098:	5e d3 01 a8 	load_32 s26, 116(sp)
   3809c:	3e e3 01 a8 	load_32 s25, 120(sp)
   380a0:	1e f3 01 a8 	load_32 s24, 124(sp)
   380a4:	de 03 02 05 	add_i sp, sp, 128
   380a8:	1f 00 00 f0 	ret

00000000000380ac R_DrawColumnLow:
   380ac:	de 03 fe 05 	add_i sp, sp, -128
   380b0:	1e f3 01 88 	store_32 s24, 124(sp)
   380b4:	3e e3 01 88 	store_32 s25, 120(sp)
   380b8:	5e d3 01 88 	store_32 s26, 116(sp)
   380bc:	fe c3 01 88 	store_32 ra, 112(sp)
   380c0:	1e 04 00 4f 	movehi s0, 62
   380c4:	3e 04 00 4f 	movehi s1, 62
   380c8:	00 20 0f 00 	or s0, s0, 968
   380cc:	41 33 0f 00 	or s26, s1, 972
   380d0:	40 00 00 a8 	load_32 s2, (s0)
   380d4:	1a 00 00 a8 	load_32 s0, (s26)
   380d8:	02 03 60 c0 	sub_i s24, s2, s0
   380dc:	38 00 00 14 	cmplt_i s1, s24, 0
   380e0:	81 08 00 f4 	bnz s1, 272 <R_DrawColumnLow+0x144>
   380e4:	3e 04 00 4f 	movehi s1, 62
   380e8:	62 1c 03 12 	cmpgt_i s3, s2, 199
   380ec:	21 13 0f 00 	or s25, s1, 964
   380f0:	39 00 00 a8 	load_32 s1, (s25)
   380f4:	a3 00 00 f4 	bnz s3, 20 <R_DrawColumnLow+0x5c>
   380f8:	60 00 00 14 	cmplt_i s3, s0, 0
   380fc:	63 00 00 f4 	bnz s3, 12 <R_DrawColumnLow+0x5c>
   38100:	61 00 05 18 	cmplt_u s3, s1, 320
   38104:	43 01 00 f4 	bnz s3, 40 <R_DrawColumnLow+0x80>
   38108:	3e 30 00 88 	store_32 s1, 12(sp)
   3810c:	23 00 00 4f 	movehi s1, 3
   38110:	5e 20 00 88 	store_32 s2, 8(sp)
   38114:	1e 10 00 88 	store_32 s0, 4(sp)
   38118:	01 50 0a 00 	or s0, s1, 660
   3811c:	1e 00 00 88 	store_32 s0, (sp)
   38120:	f9 57 ff f9 	call -172060 <I_Error>
   38124:	39 00 00 a8 	load_32 s1, (s25)
   38128:	1a 00 00 a8 	load_32 s0, (s26)
   3812c:	41 04 00 0b 	shl s2, s1, 1
   38130:	59 00 00 88 	store_32 s2, (s25)
   38134:	5e 04 00 4f 	movehi s2, 62
   38138:	7d 04 00 4f 	movehi s3, 61
   3813c:	21 0c 00 0b 	shl s1, s1, 3
   38140:	42 60 1c 00 	or s2, s2, 1816
   38144:	63 c0 48 00 	or s3, s3, 4656
   38148:	80 08 00 0b 	shl s4, s0, 2
   3814c:	42 00 52 c0 	add_i s2, s2, s4
   38150:	83 80 50 c0 	add_i s4, s3, s1
   38154:	21 10 00 00 	or s1, s1, 4
   38158:	23 80 50 c0 	add_i s1, s3, s1
   3815c:	42 00 00 a8 	load_32 s2, (s2)
   38160:	64 00 00 a8 	load_32 s3, (s4)
   38164:	be 04 00 4f 	movehi s5, 62
   38168:	de 04 00 4f 	movehi s6, 62
   3816c:	81 00 00 a8 	load_32 s4, (s1)
   38170:	3e 04 00 4f 	movehi s1, 62
   38174:	a5 f0 0e 00 	or s5, s5, 956
   38178:	c6 90 50 00 	or s6, s6, 5156
   3817c:	21 d0 0e 00 	or s1, s1, 948
   38180:	21 00 00 a8 	load_32 s1, (s1)
   38184:	a5 00 00 a8 	load_32 s5, (s5)
   38188:	c6 00 00 a8 	load_32 s6, (s6)
   3818c:	c0 00 63 c0 	sub_i s6, s0, s6
   38190:	02 80 51 c0 	add_i s0, s2, s3
   38194:	42 00 52 c0 	add_i s2, s2, s4
   38198:	66 80 70 c0 	mull_i s3, s6, s1
   3819c:	9e 04 00 4f 	movehi s4, 62
   381a0:	de 04 00 4f 	movehi s6, 62
   381a4:	63 80 52 c0 	add_i s3, s3, s5
   381a8:	84 c0 0e 00 	or s4, s4, 944
   381ac:	a6 e0 0e 00 	or s5, s6, 952
   381b0:	03 41 00 0a 	shr s8, s3, 16
   381b4:	c4 00 00 a8 	load_32 s6, (s4)
   381b8:	e5 00 00 a8 	load_32 s7, (s5)
   381bc:	63 80 50 c0 	add_i s3, s3, s1
   381c0:	08 fd 01 01 	and s8, s8, 127
   381c4:	e7 00 54 c0 	add_i s7, s7, s8
   381c8:	e7 00 00 a0 	load_u8 s7, (s7)
   381cc:	c6 80 53 c0 	add_i s6, s6, s7
   381d0:	e0 00 fc c0 	move s7, s24
   381d4:	c6 00 00 a0 	load_u8 s6, (s6)
   381d8:	c0 00 00 82 	store_8 s6, (s0)
   381dc:	00 00 05 05 	add_i s0, s0, 320
   381e0:	c2 00 00 82 	store_8 s6, (s2)
   381e4:	42 00 05 05 	add_i s2, s2, 320
   381e8:	07 ff ff 05 	add_i s24, s7, -1
   381ec:	27 fe ff f5 	bnz s7, -60 <R_DrawColumnLow+0x104>
   381f0:	fe c3 01 a8 	load_32 ra, 112(sp)
   381f4:	5e d3 01 a8 	load_32 s26, 116(sp)
   381f8:	3e e3 01 a8 	load_32 s25, 120(sp)
   381fc:	1e f3 01 a8 	load_32 s24, 124(sp)
   38200:	de 03 02 05 	add_i sp, sp, 128
   38204:	1f 00 00 f0 	ret

0000000000038208 R_DrawFuzzColumn:
   38208:	de 03 fe 05 	add_i sp, sp, -128
   3820c:	1e f3 01 88 	store_32 s24, 124(sp)
   38210:	3e e3 01 88 	store_32 s25, 120(sp)
   38214:	5e d3 01 88 	store_32 s26, 116(sp)
   38218:	fe c3 01 88 	store_32 ra, 112(sp)
   3821c:	1e 04 00 4f 	movehi s0, 62
   38220:	20 33 0f 00 	or s25, s0, 972
   38224:	19 00 00 a8 	load_32 s0, (s25)
   38228:	60 00 00 f4 	bnz s0, 12 <R_DrawFuzzColumn+0x2c>
   3822c:	00 04 00 0f 	move s0, 1
   38230:	19 00 00 88 	store_32 s0, (s25)
   38234:	7e 04 00 4f 	movehi s3, 62
   38238:	3e 04 00 4f 	movehi s1, 62
   3823c:	63 10 1c 00 	or s3, s3, 1796
   38240:	41 20 0f 00 	or s2, s1, 968
   38244:	22 00 00 a8 	load_32 s1, (s2)
   38248:	63 00 00 a8 	load_32 s3, (s3)
   3824c:	83 fc ff 05 	add_i s4, s3, -1
   38250:	81 00 12 c1 	cmpne_i s4, s1, s4
   38254:	64 00 00 f4 	bnz s4, 12 <R_DrawFuzzColumn+0x58>
   38258:	23 f8 ff 05 	add_i s1, s3, -2
   3825c:	22 00 00 88 	store_32 s1, (s2)
   38260:	01 03 60 c0 	sub_i s24, s1, s0
   38264:	58 00 00 14 	cmplt_i s2, s24, 0
   38268:	62 07 00 f4 	bnz s2, 236 <R_DrawFuzzColumn+0x14c>
   3826c:	5e 04 00 4f 	movehi s2, 62
   38270:	61 1c 03 12 	cmpgt_i s3, s1, 199
   38274:	42 13 0f 00 	or s26, s2, 964
   38278:	5a 00 00 a8 	load_32 s2, (s26)
   3827c:	a3 00 00 f4 	bnz s3, 20 <R_DrawFuzzColumn+0x88>
   38280:	60 00 00 14 	cmplt_i s3, s0, 0
   38284:	63 00 00 f4 	bnz s3, 12 <R_DrawFuzzColumn+0x88>
   38288:	62 00 05 18 	cmplt_u s3, s2, 320
   3828c:	43 01 00 f4 	bnz s3, 40 <R_DrawFuzzColumn+0xac>
   38290:	5e 30 00 88 	store_32 s2, 12(sp)
   38294:	43 00 00 4f 	movehi s2, 3
   38298:	3e 20 00 88 	store_32 s1, 8(sp)
   3829c:	1e 10 00 88 	store_32 s0, 4(sp)
   382a0:	02 d4 0a 00 	or s0, s2, 693
   382a4:	1e 00 00 88 	store_32 s0, (sp)
   382a8:	97 57 ff f9 	call -172452 <I_Error>
   382ac:	19 00 00 a8 	load_32 s0, (s25)
   382b0:	5a 00 00 a8 	load_32 s2, (s26)
   382b4:	3e 04 00 4f 	movehi s1, 62
   382b8:	7d 04 00 4f 	movehi s3, 61
   382bc:	00 08 00 0b 	shl s0, s0, 2
   382c0:	21 60 1c 00 	or s1, s1, 1816
   382c4:	63 c0 48 00 	or s3, s3, 4656
   382c8:	80 00 00 0f 	move s4, 0
   382cc:	01 00 50 c0 	add_i s0, s1, s0
   382d0:	22 08 00 0b 	shl s1, s2, 2
   382d4:	23 80 50 c0 	add_i s1, s3, s1
   382d8:	00 00 00 a8 	load_32 s0, (s0)
   382dc:	40 0c 00 4f 	movehi s2, 96
   382e0:	74 04 00 4f 	movehi s3, 52
   382e4:	21 00 00 a8 	load_32 s1, (s1)
   382e8:	63 10 16 00 	or s3, s3, 1412
   382ec:	00 80 50 c0 	add_i s0, s0, s1
   382f0:	22 00 27 00 	or s1, s2, 2496
   382f4:	5d 04 00 4f 	movehi s2, 61
   382f8:	a1 00 00 a8 	load_32 s5, (s1)
   382fc:	42 20 47 00 	or s2, s2, 4552
   38300:	a5 08 00 0b 	shl s5, s5, 2
   38304:	c2 00 00 a8 	load_32 s6, (s2)
   38308:	a3 80 52 c0 	add_i s5, s3, s5
   3830c:	a5 00 00 a8 	load_32 s5, (s5)
   38310:	a0 80 52 c0 	add_i s5, s0, s5
   38314:	a5 00 00 a0 	load_u8 s5, (s5)
   38318:	a5 00 18 00 	or s5, s5, 1536
   3831c:	a6 80 52 c0 	add_i s5, s6, s5
   38320:	a5 00 00 a0 	load_u8 s5, (s5)
   38324:	a0 00 00 82 	store_8 s5, (s0)
   38328:	a1 00 00 a8 	load_32 s5, (s1)
   3832c:	c0 00 fc c0 	move s6, s24
   38330:	e5 04 00 05 	add_i s7, s5, 1
   38334:	a0 00 f2 c0 	move s5, s4
   38338:	07 c9 00 10 	cmpeq_i s8, s7, 50
   3833c:	48 00 00 f4 	bnz s8, 8 <R_DrawFuzzColumn+0x13c>
   38340:	a0 80 f3 c0 	move s5, s7
   38344:	00 00 05 05 	add_i s0, s0, 320
   38348:	a1 00 00 88 	store_32 s5, (s1)
   3834c:	06 ff ff 05 	add_i s24, s6, -1
   38350:	86 fd ff f5 	bnz s6, -80 <R_DrawFuzzColumn+0xf8>
   38354:	fe c3 01 a8 	load_32 ra, 112(sp)
   38358:	5e d3 01 a8 	load_32 s26, 116(sp)
   3835c:	3e e3 01 a8 	load_32 s25, 120(sp)
   38360:	1e f3 01 a8 	load_32 s24, 124(sp)
   38364:	de 03 02 05 	add_i sp, sp, 128
   38368:	1f 00 00 f0 	ret

000000000003836c R_DrawTranslatedColumn:
   3836c:	de 03 fe 05 	add_i sp, sp, -128
   38370:	1e f3 01 88 	store_32 s24, 124(sp)
   38374:	3e e3 01 88 	store_32 s25, 120(sp)
   38378:	5e d3 01 88 	store_32 s26, 116(sp)
   3837c:	fe c3 01 88 	store_32 ra, 112(sp)
   38380:	1e 04 00 4f 	movehi s0, 62
   38384:	3e 04 00 4f 	movehi s1, 62
   38388:	00 20 0f 00 	or s0, s0, 968
   3838c:	21 33 0f 00 	or s25, s1, 972
   38390:	40 00 00 a8 	load_32 s2, (s0)
   38394:	19 00 00 a8 	load_32 s0, (s25)
   38398:	02 03 60 c0 	sub_i s24, s2, s0
   3839c:	38 00 00 14 	cmplt_i s1, s24, 0
   383a0:	01 08 00 f4 	bnz s1, 256 <R_DrawTranslatedColumn+0x134>
   383a4:	3e 04 00 4f 	movehi s1, 62
   383a8:	62 1c 03 12 	cmpgt_i s3, s2, 199
   383ac:	41 13 0f 00 	or s26, s1, 964
   383b0:	3a 00 00 a8 	load_32 s1, (s26)
   383b4:	a3 00 00 f4 	bnz s3, 20 <R_DrawTranslatedColumn+0x5c>
   383b8:	60 00 00 14 	cmplt_i s3, s0, 0
   383bc:	63 00 00 f4 	bnz s3, 12 <R_DrawTranslatedColumn+0x5c>
   383c0:	61 00 05 18 	cmplt_u s3, s1, 320
   383c4:	43 01 00 f4 	bnz s3, 40 <R_DrawTranslatedColumn+0x80>
   383c8:	3e 30 00 88 	store_32 s1, 12(sp)
   383cc:	22 00 00 4f 	movehi s1, 2
   383d0:	5e 20 00 88 	store_32 s2, 8(sp)
   383d4:	1e 10 00 88 	store_32 s0, 4(sp)
   383d8:	01 bc 3b 00 	or s0, s1, 3823
   383dc:	1e 00 00 88 	store_32 s0, (sp)
   383e0:	49 57 ff f9 	call -172764 <I_Error>
   383e4:	19 00 00 a8 	load_32 s0, (s25)
   383e8:	3a 00 00 a8 	load_32 s1, (s26)
   383ec:	5e 04 00 4f 	movehi s2, 62
   383f0:	7d 04 00 4f 	movehi s3, 61
   383f4:	80 08 00 0b 	shl s4, s0, 2
   383f8:	42 60 1c 00 	or s2, s2, 1816
   383fc:	63 c0 48 00 	or s3, s3, 4656
   38400:	21 08 00 0b 	shl s1, s1, 2
   38404:	42 00 52 c0 	add_i s2, s2, s4
   38408:	23 80 50 c0 	add_i s1, s3, s1
   3840c:	9e 04 00 4f 	movehi s4, 62
   38410:	be 04 00 4f 	movehi s5, 62
   38414:	42 00 00 a8 	load_32 s2, (s2)
   38418:	61 00 00 a8 	load_32 s3, (s1)
   3841c:	3e 04 00 4f 	movehi s1, 62
   38420:	84 f0 0e 00 	or s4, s4, 956
   38424:	a5 90 50 00 	or s5, s5, 5156
   38428:	21 d0 0e 00 	or s1, s1, 948
   3842c:	21 00 00 a8 	load_32 s1, (s1)
   38430:	84 00 00 a8 	load_32 s4, (s4)
   38434:	a5 00 00 a8 	load_32 s5, (s5)
   38438:	00 80 62 c0 	sub_i s0, s0, s5
   3843c:	a0 80 70 c0 	mull_i s5, s0, s1
   38440:	02 80 51 c0 	add_i s0, s2, s3
   38444:	7e 04 00 4f 	movehi s3, 62
   38448:	45 00 52 c0 	add_i s2, s5, s4
   3844c:	9e 04 00 4f 	movehi s4, 62
   38450:	be 04 00 4f 	movehi s5, 62
   38454:	63 c0 0e 00 	or s3, s3, 944
   38458:	84 00 0f 00 	or s4, s4, 960
   3845c:	a5 e0 0e 00 	or s5, s5, 952
   38460:	c3 00 00 a8 	load_32 s6, (s3)
   38464:	22 41 00 09 	ashr s9, s2, 16
   38468:	e4 00 00 a8 	load_32 s7, (s4)
   3846c:	42 80 50 c0 	add_i s2, s2, s1
   38470:	05 01 00 a8 	load_32 s8, (s5)
   38474:	08 81 54 c0 	add_i s8, s8, s9
   38478:	08 01 00 a0 	load_u8 s8, (s8)
   3847c:	e7 00 54 c0 	add_i s7, s7, s8
   38480:	e7 00 00 a0 	load_u8 s7, (s7)
   38484:	c6 80 53 c0 	add_i s6, s6, s7
   38488:	e0 00 fc c0 	move s7, s24
   3848c:	c6 00 00 a0 	load_u8 s6, (s6)
   38490:	c0 00 00 82 	store_8 s6, (s0)
   38494:	00 00 05 05 	add_i s0, s0, 320
   38498:	07 ff ff 05 	add_i s24, s7, -1
   3849c:	27 fe ff f5 	bnz s7, -60 <R_DrawTranslatedColumn+0xf4>
   384a0:	fe c3 01 a8 	load_32 ra, 112(sp)
   384a4:	5e d3 01 a8 	load_32 s26, 116(sp)
   384a8:	3e e3 01 a8 	load_32 s25, 120(sp)
   384ac:	1e f3 01 a8 	load_32 s24, 124(sp)
   384b0:	de 03 02 05 	add_i sp, sp, 128
   384b4:	1f 00 00 f0 	ret

00000000000384b8 R_InitTranslationTables:
   384b8:	de 03 ff 05 	add_i sp, sp, -64
   384bc:	1e f3 00 88 	store_32 s24, 60(sp)
   384c0:	fe e3 00 88 	store_32 ra, 56(sp)
   384c4:	00 03 00 0f 	move s24, 0
   384c8:	00 fc 0f 0f 	move s0, 1023
   384cc:	20 04 00 0f 	move s1, 1
   384d0:	40 00 fc c0 	move s2, s24
   384d4:	01 51 00 f8 	call 82948 <Z_Malloc>
   384d8:	3e 04 00 4f 	movehi s1, 62
   384dc:	40 fc 03 05 	add_i s2, s0, 255
   384e0:	01 00 1c 00 	or s0, s1, 1792
   384e4:	3f fc 7f 4f 	movehi s1, 262143
   384e8:	42 00 fc 01 	and s2, s2, -256
   384ec:	40 00 00 88 	store_32 s2, (s0)
   384f0:	21 c0 7f 00 	or s1, s1, 8176
   384f4:	58 80 10 c0 	and s2, s24, s1
   384f8:	42 c0 01 11 	cmpne_i s2, s2, 112
   384fc:	62 02 00 f4 	bnz s2, 76 <R_InitTranslationTables+0x90>
   38500:	40 00 00 a8 	load_32 s2, (s0)
   38504:	78 3c 00 01 	and s3, s24, 15
   38508:	83 80 01 00 	or s4, s3, 96
   3850c:	42 00 5c c0 	add_i s2, s2, s24
   38510:	82 00 00 82 	store_8 s4, (s2)
   38514:	83 00 01 00 	or s4, s3, 64
   38518:	40 00 00 a8 	load_32 s2, (s0)
   3851c:	63 80 00 00 	or s3, s3, 32
   38520:	42 00 5c c0 	add_i s2, s2, s24
   38524:	82 00 04 82 	store_8 s4, 256(s2)
   38528:	40 00 00 a8 	load_32 s2, (s0)
   3852c:	42 00 5c c0 	add_i s2, s2, s24
   38530:	42 00 08 05 	add_i s2, s2, 512
   38534:	18 07 00 05 	add_i s24, s24, 1
   38538:	62 00 00 82 	store_8 s3, (s2)
   3853c:	98 00 04 18 	cmplt_u s4, s24, 256
   38540:	a4 fd ff f5 	bnz s4, -76 <R_InitTranslationTables+0x3c>
   38544:	0e 00 00 f6 	b 56 <R_InitTranslationTables+0xc4>
   38548:	40 00 00 a8 	load_32 s2, (s0)
   3854c:	42 00 5c c0 	add_i s2, s2, s24
   38550:	02 03 08 82 	store_8 s24, 512(s2)
   38554:	40 00 00 a8 	load_32 s2, (s0)
   38558:	42 00 5c c0 	add_i s2, s2, s24
   3855c:	02 03 04 82 	store_8 s24, 256(s2)
   38560:	40 00 00 a8 	load_32 s2, (s0)
   38564:	60 00 fc c0 	move s3, s24
   38568:	42 00 5c c0 	add_i s2, s2, s24
   3856c:	18 07 00 05 	add_i s24, s24, 1
   38570:	62 00 00 82 	store_8 s3, (s2)
   38574:	98 00 04 18 	cmplt_u s4, s24, 256
   38578:	e4 fb ff f5 	bnz s4, -132 <R_InitTranslationTables+0x3c>
   3857c:	fe e3 00 a8 	load_32 ra, 56(sp)
   38580:	1e f3 00 a8 	load_32 s24, 60(sp)
   38584:	de 03 01 05 	add_i sp, sp, 64
   38588:	1f 00 00 f0 	ret

000000000003858c R_DrawSpan:
   3858c:	de 03 fe 05 	add_i sp, sp, -128
   38590:	1e f3 01 88 	store_32 s24, 124(sp)
   38594:	3e e3 01 88 	store_32 s25, 120(sp)
   38598:	5e d3 01 88 	store_32 s26, 116(sp)
   3859c:	fe c3 01 88 	store_32 ra, 112(sp)
   385a0:	1e 04 00 4f 	movehi s0, 62
   385a4:	3e 04 00 4f 	movehi s1, 62
   385a8:	5e 04 00 4f 	movehi s2, 62
   385ac:	00 83 0f 00 	or s24, s0, 992
   385b0:	21 73 0f 00 	or s25, s1, 988
   385b4:	42 b3 0f 00 	or s26, s2, 1004
   385b8:	58 00 00 a8 	load_32 s2, (s24)
   385bc:	39 00 00 a8 	load_32 s1, (s25)
   385c0:	7a 00 00 a8 	load_32 s3, (s26)
   385c4:	03 20 03 16 	cmpgt_u s0, s3, 200
   385c8:	e0 00 00 f4 	bnz s0, 28 <R_DrawSpan+0x58>
   385cc:	02 fc 04 12 	cmpgt_i s0, s2, 319
   385d0:	a0 00 00 f4 	bnz s0, 20 <R_DrawSpan+0x58>
   385d4:	02 80 40 c1 	cmplt_i s0, s2, s1
   385d8:	60 00 00 f4 	bnz s0, 12 <R_DrawSpan+0x58>
   385dc:	01 fc ff 12 	cmpgt_i s0, s1, -1
   385e0:	60 01 00 f4 	bnz s0, 44 <R_DrawSpan+0x80>
   385e4:	00 00 00 4f 	movehi s0, 0
   385e8:	7e 30 00 88 	store_32 s3, 12(sp)
   385ec:	5e 20 00 88 	store_32 s2, 8(sp)
   385f0:	3e 10 00 88 	store_32 s1, 4(sp)
   385f4:	00 7c 07 00 	or s0, s0, 479
   385f8:	1e 00 00 88 	store_32 s0, (sp)
   385fc:	c2 56 ff f9 	call -173304 <I_Error>
   38600:	7a 00 00 a8 	load_32 s3, (s26)
   38604:	39 00 00 a8 	load_32 s1, (s25)
   38608:	58 00 00 a8 	load_32 s2, (s24)
   3860c:	be 04 00 4f 	movehi s5, 62
   38610:	dd 04 00 4f 	movehi s6, 61
   38614:	1e 04 00 4f 	movehi s0, 62
   38618:	a5 60 1c 00 	or s5, s5, 1816
   3861c:	9e 04 00 4f 	movehi s4, 62
   38620:	c6 c0 48 00 	or s6, s6, 4656
   38624:	63 08 00 0b 	shl s3, s3, 2
   38628:	a5 80 51 c0 	add_i s5, s5, s3
   3862c:	61 08 00 0b 	shl s3, s1, 2
   38630:	00 90 0f 00 	or s0, s0, 996
   38634:	84 c0 0f 00 	or s4, s4, 1008
   38638:	c6 80 51 c0 	add_i s6, s6, s3
   3863c:	00 00 00 a8 	load_32 s0, (s0)
   38640:	fe 04 00 4f 	movehi s7, 62
   38644:	64 00 00 a8 	load_32 s3, (s4)
   38648:	42 80 60 c0 	sub_i s2, s2, s1
   3864c:	85 00 00 a8 	load_32 s4, (s5)
   38650:	a6 00 00 a8 	load_32 s5, (s6)
   38654:	de 04 00 4f 	movehi s6, 62
   38658:	e7 d0 0f 00 	or s7, s7, 1012
   3865c:	26 50 0f 00 	or s1, s6, 980
   38660:	de 04 00 4f 	movehi s6, 62
   38664:	84 80 52 c0 	add_i s4, s4, s5
   38668:	be 04 00 4f 	movehi s5, 62
   3866c:	c6 a0 0f 00 	or s6, s6, 1000
   38670:	a5 60 0f 00 	or s5, s5, 984
   38674:	00 41 00 0a 	shr s8, s0, 16
   38678:	41 01 00 a8 	load_32 s10, (s1)
   3867c:	23 29 00 0a 	shr s9, s3, 10
   38680:	65 01 00 a8 	load_32 s11, (s5)
   38684:	08 fd 00 01 	and s8, s8, 63
   38688:	29 01 3f 01 	and s9, s9, 4032
   3868c:	08 81 04 c0 	or s8, s8, s9
   38690:	0b 01 54 c0 	add_i s8, s11, s8
   38694:	08 01 00 a0 	load_u8 s8, (s8)
   38698:	0a 01 54 c0 	add_i s8, s10, s8
   3869c:	08 01 00 a0 	load_u8 s8, (s8)
   386a0:	04 01 00 82 	store_8 s8, (s4)
   386a4:	84 04 00 05 	add_i s4, s4, 1
   386a8:	06 01 00 a8 	load_32 s8, (s6)
   386ac:	27 01 00 a8 	load_32 s9, (s7)
   386b0:	40 01 f1 c0 	move s10, s2
   386b4:	08 00 50 c0 	add_i s0, s8, s0
   386b8:	69 80 51 c0 	add_i s3, s9, s3
   386bc:	4a fc ff 05 	add_i s2, s10, -1
   386c0:	aa fd ff f5 	bnz s10, -76 <R_DrawSpan+0xe8>
   386c4:	fe c3 01 a8 	load_32 ra, 112(sp)
   386c8:	5e d3 01 a8 	load_32 s26, 116(sp)
   386cc:	3e e3 01 a8 	load_32 s25, 120(sp)
   386d0:	1e f3 01 a8 	load_32 s24, 124(sp)
   386d4:	de 03 02 05 	add_i sp, sp, 128
   386d8:	1f 00 00 f0 	ret

00000000000386dc R_DrawSpanLow:
   386dc:	de 03 fe 05 	add_i sp, sp, -128
   386e0:	1e f3 01 88 	store_32 s24, 124(sp)
   386e4:	3e e3 01 88 	store_32 s25, 120(sp)
   386e8:	5e d3 01 88 	store_32 s26, 116(sp)
   386ec:	fe c3 01 88 	store_32 ra, 112(sp)
   386f0:	1e 04 00 4f 	movehi s0, 62
   386f4:	3e 04 00 4f 	movehi s1, 62
   386f8:	5e 04 00 4f 	movehi s2, 62
   386fc:	00 83 0f 00 	or s24, s0, 992
   38700:	21 73 0f 00 	or s25, s1, 988
   38704:	42 b3 0f 00 	or s26, s2, 1004
   38708:	78 00 00 a8 	load_32 s3, (s24)
   3870c:	59 00 00 a8 	load_32 s2, (s25)
   38710:	9a 00 00 a8 	load_32 s4, (s26)
   38714:	04 20 03 16 	cmpgt_u s0, s4, 200
   38718:	e0 00 00 f4 	bnz s0, 28 <R_DrawSpanLow+0x58>
   3871c:	03 fc 04 12 	cmpgt_i s0, s3, 319
   38720:	a0 00 00 f4 	bnz s0, 20 <R_DrawSpanLow+0x58>
   38724:	03 00 41 c1 	cmplt_i s0, s3, s2
   38728:	60 00 00 f4 	bnz s0, 12 <R_DrawSpanLow+0x58>
   3872c:	02 fc ff 12 	cmpgt_i s0, s2, -1
   38730:	60 01 00 f4 	bnz s0, 44 <R_DrawSpanLow+0x80>
   38734:	00 00 00 4f 	movehi s0, 0
   38738:	9e 30 00 88 	store_32 s4, 12(sp)
   3873c:	7e 20 00 88 	store_32 s3, 8(sp)
   38740:	5e 10 00 88 	store_32 s2, 4(sp)
   38744:	00 7c 07 00 	or s0, s0, 479
   38748:	1e 00 00 88 	store_32 s0, (sp)
   3874c:	6e 56 ff f9 	call -173640 <I_Error>
   38750:	59 00 00 a8 	load_32 s2, (s25)
   38754:	78 00 00 a8 	load_32 s3, (s24)
   38758:	9a 00 00 a8 	load_32 s4, (s26)
   3875c:	be 04 00 4f 	movehi s5, 62
   38760:	fd 04 00 4f 	movehi s7, 61
   38764:	1e 04 00 4f 	movehi s0, 62
   38768:	a5 60 1c 00 	or s5, s5, 1816
   3876c:	3e 04 00 4f 	movehi s1, 62
   38770:	84 08 00 0b 	shl s4, s4, 2
   38774:	85 00 52 c0 	add_i s4, s5, s4
   38778:	a7 c0 48 00 	or s5, s7, 4656
   3877c:	00 90 0f 00 	or s0, s0, 996
   38780:	c2 04 00 0b 	shl s6, s2, 1
   38784:	42 0c 00 0b 	shl s2, s2, 3
   38788:	21 c0 0f 00 	or s1, s1, 1008
   3878c:	00 00 00 a8 	load_32 s0, (s0)
   38790:	45 00 51 c0 	add_i s2, s5, s2
   38794:	63 04 00 0b 	shl s3, s3, 1
   38798:	21 00 00 a8 	load_32 s1, (s1)
   3879c:	be 04 00 4f 	movehi s5, 62
   387a0:	d9 00 00 88 	store_32 s6, (s25)
   387a4:	fe 04 00 4f 	movehi s7, 62
   387a8:	78 00 00 88 	store_32 s3, (s24)
   387ac:	63 00 63 c0 	sub_i s3, s3, s6
   387b0:	84 00 00 a8 	load_32 s4, (s4)
   387b4:	de 04 00 4f 	movehi s6, 62
   387b8:	42 00 00 a8 	load_32 s2, (s2)
   387bc:	e7 d0 0f 00 	or s7, s7, 1012
   387c0:	c6 a0 0f 00 	or s6, s6, 1000
   387c4:	84 00 51 c0 	add_i s4, s4, s2
   387c8:	45 50 0f 00 	or s2, s5, 980
   387cc:	be 04 00 4f 	movehi s5, 62
   387d0:	a5 60 0f 00 	or s5, s5, 984
   387d4:	00 41 00 0a 	shr s8, s0, 16
   387d8:	42 01 00 a8 	load_32 s10, (s2)
   387dc:	21 29 00 0a 	shr s9, s1, 10
   387e0:	65 01 00 a8 	load_32 s11, (s5)
   387e4:	08 fd 00 01 	and s8, s8, 63
   387e8:	29 01 3f 01 	and s9, s9, 4032
   387ec:	08 81 04 c0 	or s8, s8, s9
   387f0:	2b 01 54 c0 	add_i s9, s11, s8
   387f4:	29 01 00 a0 	load_u8 s9, (s9)
   387f8:	2a 81 54 c0 	add_i s9, s10, s9
   387fc:	29 01 00 a0 	load_u8 s9, (s9)
   38800:	24 01 00 82 	store_8 s9, (s4)
   38804:	22 01 00 a8 	load_32 s9, (s2)
   38808:	45 01 00 a8 	load_32 s10, (s5)
   3880c:	0a 01 54 c0 	add_i s8, s10, s8
   38810:	08 01 00 a0 	load_u8 s8, (s8)
   38814:	09 01 54 c0 	add_i s8, s9, s8
   38818:	08 01 00 a0 	load_u8 s8, (s8)
   3881c:	04 05 00 82 	store_8 s8, 1(s4)
   38820:	84 08 00 05 	add_i s4, s4, 2
   38824:	06 01 00 a8 	load_32 s8, (s6)
   38828:	27 01 00 a8 	load_32 s9, (s7)
   3882c:	40 81 f1 c0 	move s10, s3
   38830:	08 00 50 c0 	add_i s0, s8, s0
   38834:	29 80 50 c0 	add_i s1, s9, s1
   38838:	6a fc ff 05 	add_i s3, s10, -1
   3883c:	ca fc ff f5 	bnz s10, -104 <R_DrawSpanLow+0xf8>
   38840:	fe c3 01 a8 	load_32 ra, 112(sp)
   38844:	5e d3 01 a8 	load_32 s26, 116(sp)
   38848:	3e e3 01 a8 	load_32 s25, 120(sp)
   3884c:	1e f3 01 a8 	load_32 s24, 124(sp)
   38850:	de 03 02 05 	add_i sp, sp, 128
   38854:	1f 00 00 f0 	ret

0000000000038858 R_InitBuffer:
   38858:	40 00 05 0f 	move s2, 320
   3885c:	7e 04 00 4f 	movehi s3, 62
   38860:	80 04 00 14 	cmplt_i s4, s0, 1
   38864:	42 00 60 c0 	sub_i s2, s2, s0
   38868:	63 40 1c 00 	or s3, s3, 1808
   3886c:	42 04 00 09 	ashr s2, s2, 1
   38870:	43 00 00 88 	store_32 s2, (s3)
   38874:	64 01 00 f4 	bnz s4, 44 <R_InitBuffer+0x48>
   38878:	9d 04 00 4f 	movehi s4, 61
   3887c:	60 00 00 0f 	move s3, 0
   38880:	84 c0 48 00 	or s4, s4, 4656
   38884:	c3 08 00 0b 	shl s6, s3, 2
   38888:	a3 00 51 c0 	add_i s5, s3, s2
   3888c:	63 04 00 05 	add_i s3, s3, 1
   38890:	c4 00 53 c0 	add_i s6, s4, s6
   38894:	e3 00 40 c1 	cmplt_i s7, s3, s0
   38898:	a6 00 00 88 	store_32 s5, (s6)
   3889c:	47 ff ff f5 	bnz s7, -24 <R_InitBuffer+0x2c>
   388a0:	00 00 05 10 	cmpeq_i s0, s0, 320
   388a4:	a0 00 00 f4 	bnz s0, 20 <R_InitBuffer+0x60>
   388a8:	00 a0 02 0f 	move s0, 168
   388ac:	00 80 60 c0 	sub_i s0, s0, s1
   388b0:	00 04 00 09 	ashr s0, s0, 1
   388b4:	02 00 00 f6 	b 8 <R_InitBuffer+0x64>
   388b8:	00 00 00 0f 	move s0, 0
   388bc:	5e 04 00 4f 	movehi s2, 62
   388c0:	61 04 00 14 	cmplt_i s3, s1, 1
   388c4:	42 50 1c 00 	or s2, s2, 1812
   388c8:	02 00 00 88 	store_32 s0, (s2)
   388cc:	03 02 00 f4 	bnz s3, 64 <R_InitBuffer+0xb4>
   388d0:	40 0c 00 4f 	movehi s2, 96
   388d4:	9e 04 00 4f 	movehi s4, 62
   388d8:	60 00 00 0f 	move s3, 0
   388dc:	42 20 02 00 	or s2, s2, 136
   388e0:	84 60 1c 00 	or s4, s4, 1816
   388e4:	42 00 00 a8 	load_32 s2, (s2)
   388e8:	a3 00 50 c0 	add_i s5, s3, s0
   388ec:	c3 08 00 0b 	shl s6, s3, 2
   388f0:	63 04 00 05 	add_i s3, s3, 1
   388f4:	c4 00 53 c0 	add_i s6, s4, s6
   388f8:	a5 00 05 07 	mull_i s5, s5, 320
   388fc:	e3 80 40 c1 	cmplt_i s7, s3, s1
   38900:	a2 80 52 c0 	add_i s5, s2, s5
   38904:	a6 00 00 88 	store_32 s5, (s6)
   38908:	07 ff ff f5 	bnz s7, -32 <R_InitBuffer+0x90>
   3890c:	1f 00 00 f0 	ret

0000000000038910 R_FillBackScreen:
   38910:	de 03 fe 05 	add_i sp, sp, -128
   38914:	1e f3 01 88 	store_32 s24, 124(sp)
   38918:	3e e3 01 88 	store_32 s25, 120(sp)
   3891c:	5e d3 01 88 	store_32 s26, 116(sp)
   38920:	7e c3 01 88 	store_32 s27, 112(sp)
   38924:	fe b3 01 88 	store_32 ra, 108(sp)
   38928:	02 00 00 4f 	movehi s0, 2
   3892c:	00 e0 42 00 	or s0, s0, 4280
   38930:	20 20 00 a0 	load_u8 s1, 8(s0)
   38934:	3e a0 01 82 	store_8 s1, 104(sp)
   38938:	20 10 00 a0 	load_u8 s1, 4(s0)
   3893c:	40 14 00 a0 	load_u8 s2, 5(s0)
   38940:	60 18 00 a0 	load_u8 s3, 6(s0)
   38944:	80 1c 00 a0 	load_u8 s4, 7(s0)
   38948:	42 20 00 0b 	shl s2, s2, 8
   3894c:	84 20 00 0b 	shl s4, s4, 8
   38950:	22 80 00 c0 	or s1, s2, s1
   38954:	64 80 01 c0 	or s3, s4, s3
   38958:	92 4c 52 4f 	movehi s4, 168562
   3895c:	63 40 00 0b 	shl s3, s3, 16
   38960:	23 80 00 c0 	or s1, s3, s1
   38964:	3e 90 01 88 	store_32 s1, 100(sp)
   38968:	20 00 00 a0 	load_u8 s1, (s0)
   3896c:	40 04 00 a0 	load_u8 s2, 1(s0)
   38970:	60 08 00 a0 	load_u8 s3, 2(s0)
   38974:	00 0c 00 a0 	load_u8 s0, 3(s0)
   38978:	42 20 00 0b 	shl s2, s2, 8
   3897c:	00 20 00 0b 	shl s0, s0, 8
   38980:	22 80 00 c0 	or s1, s2, s1
   38984:	5a 48 00 4f 	movehi s2, 602
   38988:	00 80 01 c0 	or s0, s0, s3
   3898c:	7e 04 00 4f 	movehi s3, 62
   38990:	42 3c 0d 00 	or s2, s2, 847
   38994:	00 40 00 0b 	shl s0, s0, 16
   38998:	20 80 00 c0 	or s1, s0, s1
   3899c:	3e 80 01 88 	store_32 s1, 96(sp)
   389a0:	1e 60 01 05 	add_i s0, sp, 88
   389a4:	20 10 00 00 	or s1, s0, 4
   389a8:	41 00 00 88 	store_32 s2, (s1)
   389ac:	43 f0 0f 00 	or s2, s3, 1020
   389b0:	24 1c 49 00 	or s1, s4, 4679
   389b4:	3e 60 01 88 	store_32 s1, 88(sp)
   389b8:	22 00 00 a8 	load_32 s1, (s2)
   389bc:	21 00 05 10 	cmpeq_i s1, s1, 320
   389c0:	81 1e 00 f4 	bnz s1, 976 <R_FillBackScreen+0x480>
   389c4:	2b 04 00 4f 	movehi s1, 43
   389c8:	5e 50 01 88 	store_32 s2, 84(sp)
   389cc:	21 00 40 00 	or s1, s1, 4096
   389d0:	21 00 00 a8 	load_32 s1, (s1)
   389d4:	21 08 00 10 	cmpeq_i s1, s1, 2
   389d8:	41 00 00 f4 	bnz s1, 8 <R_FillBackScreen+0xd0>
   389dc:	1e 80 01 05 	add_i s0, sp, 96
   389e0:	20 94 01 0f 	move s1, 101
   389e4:	59 19 00 f8 	call 25956 <W_CacheLumpName>
   389e8:	20 0c 00 4f 	movehi s1, 96
   389ec:	1e 40 01 88 	store_32 s0, 80(sp)
   389f0:	00 03 00 0f 	move s24, 0
   389f4:	40 03 01 0f 	move s26, 64
   389f8:	21 20 02 00 	or s1, s1, 136
   389fc:	21 13 00 a8 	load_32 s25, 4(s1)
   38a00:	18 18 00 0b 	shl s0, s24, 6
   38a04:	3e 40 01 a8 	load_32 s1, 80(sp)
   38a08:	00 00 3f 01 	and s0, s0, 4032
   38a0c:	61 03 50 c0 	add_i s27, s1, s0
   38a10:	00 80 fc c0 	move s0, s25
   38a14:	20 80 fd c0 	move s1, s27
   38a18:	40 00 fd c0 	move s2, s26
   38a1c:	ba 64 00 f8 	call 103144 <memcpy>
   38a20:	20 80 fd c0 	move s1, s27
   38a24:	19 00 01 05 	add_i s0, s25, 64
   38a28:	40 00 fd c0 	move s2, s26
   38a2c:	b6 64 00 f8 	call 103128 <memcpy>
   38a30:	20 80 fd c0 	move s1, s27
   38a34:	19 00 02 05 	add_i s0, s25, 128
   38a38:	40 00 fd c0 	move s2, s26
   38a3c:	b2 64 00 f8 	call 103112 <memcpy>
   38a40:	20 80 fd c0 	move s1, s27
   38a44:	19 00 03 05 	add_i s0, s25, 192
   38a48:	40 00 fd c0 	move s2, s26
   38a4c:	ae 64 00 f8 	call 103096 <memcpy>
   38a50:	20 80 fd c0 	move s1, s27
   38a54:	19 00 04 05 	add_i s0, s25, 256
   38a58:	40 00 fd c0 	move s2, s26
   38a5c:	aa 64 00 f8 	call 103080 <memcpy>
   38a60:	18 07 00 05 	add_i s24, s24, 1
   38a64:	39 03 05 05 	add_i s25, s25, 320
   38a68:	18 a0 02 18 	cmplt_u s0, s24, 168
   38a6c:	a0 fc ff f5 	bnz s0, -108 <R_FillBackScreen+0xf0>
   38a70:	02 00 00 4f 	movehi s0, 2
   38a74:	20 94 01 0f 	move s1, 101
   38a78:	00 e0 57 00 	or s0, s0, 5624
   38a7c:	33 19 00 f8 	call 25804 <W_CacheLumpName>
   38a80:	3e 50 01 a8 	load_32 s1, 84(sp)
   38a84:	21 00 00 a8 	load_32 s1, (s1)
   38a88:	60 03 f0 c0 	move s27, s0
   38a8c:	21 04 00 14 	cmplt_i s1, s1, 1
   38a90:	a1 02 00 f4 	bnz s1, 84 <R_FillBackScreen+0x1d4>
   38a94:	3e 04 00 4f 	movehi s1, 62
   38a98:	1e 04 00 4f 	movehi s0, 62
   38a9c:	40 03 00 0f 	move s26, 0
   38aa0:	01 53 1c 00 	or s24, s1, 1812
   38aa4:	20 07 00 0f 	move s25, 1
   38aa8:	00 40 1c 00 	or s0, s0, 1808
   38aac:	1e 40 01 88 	store_32 s0, 80(sp)
   38ab0:	1e 40 01 a8 	load_32 s0, 80(sp)
   38ab4:	00 00 00 a8 	load_32 s0, (s0)
   38ab8:	38 00 00 a8 	load_32 s1, (s24)
   38abc:	40 80 fc c0 	move s2, s25
   38ac0:	60 80 fd c0 	move s3, s27
   38ac4:	00 00 5d c0 	add_i s0, s0, s26
   38ac8:	21 e0 ff 05 	add_i s1, s1, -8
   38acc:	7f 35 00 f8 	call 54780 <V_DrawPatch>
   38ad0:	1e 50 01 a8 	load_32 s0, 84(sp)
   38ad4:	5a 23 00 05 	add_i s26, s26, 8
   38ad8:	00 00 00 a8 	load_32 s0, (s0)
   38adc:	1a 00 40 c1 	cmplt_i s0, s26, s0
   38ae0:	80 fe ff f5 	bnz s0, -48 <R_FillBackScreen+0x1a0>
   38ae4:	00 00 00 4f 	movehi s0, 0
   38ae8:	20 94 01 0f 	move s1, 101
   38aec:	00 40 2f 00 	or s0, s0, 3024
   38af0:	16 19 00 f8 	call 25688 <W_CacheLumpName>
   38af4:	1e 53 01 a8 	load_32 s24, 84(sp)
   38af8:	38 00 00 a8 	load_32 s1, (s24)
   38afc:	60 03 f0 c0 	move s27, s0
   38b00:	21 04 00 14 	cmplt_i s1, s1, 1
   38b04:	61 03 00 f4 	bnz s1, 108 <R_FillBackScreen+0x260>
   38b08:	1e 04 00 4f 	movehi s0, 62
   38b0c:	3e 04 00 4f 	movehi s1, 62
   38b10:	40 03 00 0f 	move s26, 0
   38b14:	20 07 00 0f 	move s25, 1
   38b18:	5e 04 00 4f 	movehi s2, 62
   38b1c:	00 40 1c 00 	or s0, s0, 1808
   38b20:	1e 40 01 88 	store_32 s0, 80(sp)
   38b24:	01 50 1c 00 	or s0, s1, 1812
   38b28:	1e 30 01 88 	store_32 s0, 76(sp)
   38b2c:	02 10 1c 00 	or s0, s2, 1796
   38b30:	1e 20 01 88 	store_32 s0, 72(sp)
   38b34:	1e 40 01 a8 	load_32 s0, 80(sp)
   38b38:	00 00 00 a8 	load_32 s0, (s0)
   38b3c:	3e 30 01 a8 	load_32 s1, 76(sp)
   38b40:	00 00 5d c0 	add_i s0, s0, s26
   38b44:	21 00 00 a8 	load_32 s1, (s1)
   38b48:	5e 20 01 a8 	load_32 s2, 72(sp)
   38b4c:	42 00 00 a8 	load_32 s2, (s2)
   38b50:	22 80 50 c0 	add_i s1, s2, s1
   38b54:	40 80 fc c0 	move s2, s25
   38b58:	60 80 fd c0 	move s3, s27
   38b5c:	5b 35 00 f8 	call 54636 <V_DrawPatch>
   38b60:	18 00 00 a8 	load_32 s0, (s24)
   38b64:	5a 23 00 05 	add_i s26, s26, 8
   38b68:	1a 00 40 c1 	cmplt_i s0, s26, s0
   38b6c:	40 fe ff f5 	bnz s0, -56 <R_FillBackScreen+0x224>
   38b70:	02 00 00 4f 	movehi s0, 2
   38b74:	20 94 01 0f 	move s1, 101
   38b78:	00 30 3c 00 	or s0, s0, 3852
   38b7c:	f3 18 00 f8 	call 25548 <W_CacheLumpName>
   38b80:	3e 04 00 4f 	movehi s1, 62
   38b84:	21 10 1c 00 	or s1, s1, 1796
   38b88:	3e 40 01 88 	store_32 s1, 80(sp)
   38b8c:	21 00 00 a8 	load_32 s1, (s1)
   38b90:	60 03 f0 c0 	move s27, s0
   38b94:	21 04 00 14 	cmplt_i s1, s1, 1
   38b98:	a1 02 00 f4 	bnz s1, 84 <R_FillBackScreen+0x2dc>
   38b9c:	3e 04 00 4f 	movehi s1, 62
   38ba0:	1e 04 00 4f 	movehi s0, 62
   38ba4:	40 03 00 0f 	move s26, 0
   38ba8:	01 53 1c 00 	or s24, s1, 1812
   38bac:	20 07 00 0f 	move s25, 1
   38bb0:	00 40 1c 00 	or s0, s0, 1808
   38bb4:	1e 30 01 88 	store_32 s0, 76(sp)
   38bb8:	1e 30 01 a8 	load_32 s0, 76(sp)
   38bbc:	00 00 00 a8 	load_32 s0, (s0)
   38bc0:	38 00 00 a8 	load_32 s1, (s24)
   38bc4:	40 80 fc c0 	move s2, s25
   38bc8:	60 80 fd c0 	move s3, s27
   38bcc:	00 e0 ff 05 	add_i s0, s0, -8
   38bd0:	21 00 5d c0 	add_i s1, s1, s26
   38bd4:	3d 35 00 f8 	call 54516 <V_DrawPatch>
   38bd8:	1e 40 01 a8 	load_32 s0, 80(sp)
   38bdc:	5a 23 00 05 	add_i s26, s26, 8
   38be0:	00 00 00 a8 	load_32 s0, (s0)
   38be4:	1a 00 40 c1 	cmplt_i s0, s26, s0
   38be8:	80 fe ff f5 	bnz s0, -48 <R_FillBackScreen+0x2a8>
   38bec:	00 00 00 4f 	movehi s0, 0
   38bf0:	20 94 01 0f 	move s1, 101
   38bf4:	00 80 41 00 	or s0, s0, 4192
   38bf8:	d4 18 00 f8 	call 25424 <W_CacheLumpName>
   38bfc:	5e 40 01 a8 	load_32 s2, 80(sp)
   38c00:	3e 04 00 4f 	movehi s1, 62
   38c04:	61 40 1c 00 	or s3, s1, 1808
   38c08:	42 00 00 a8 	load_32 s2, (s2)
   38c0c:	00 03 f0 c0 	move s24, s0
   38c10:	03 00 00 a8 	load_32 s0, (s3)
   38c14:	7e 30 01 88 	store_32 s3, 76(sp)
   38c18:	22 04 00 14 	cmplt_i s1, s2, 1
   38c1c:	81 02 00 f4 	bnz s1, 80 <R_FillBackScreen+0x35c>
   38c20:	3e 04 00 4f 	movehi s1, 62
   38c24:	60 03 00 0f 	move s27, 0
   38c28:	20 07 00 0f 	move s25, 1
   38c2c:	41 53 1c 00 	or s26, s1, 1812
   38c30:	3e 50 01 a8 	load_32 s1, 84(sp)
   38c34:	21 00 00 a8 	load_32 s1, (s1)
   38c38:	5a 00 00 a8 	load_32 s2, (s26)
   38c3c:	01 00 50 c0 	add_i s0, s1, s0
   38c40:	22 80 5d c0 	add_i s1, s2, s27
   38c44:	40 80 fc c0 	move s2, s25
   38c48:	60 00 fc c0 	move s3, s24
   38c4c:	1f 35 00 f8 	call 54396 <V_DrawPatch>
   38c50:	1e 40 01 a8 	load_32 s0, 80(sp)
   38c54:	7b 23 00 05 	add_i s27, s27, 8
   38c58:	00 00 00 a8 	load_32 s0, (s0)
   38c5c:	3b 00 40 c1 	cmplt_i s1, s27, s0
   38c60:	1e 30 01 a8 	load_32 s0, 76(sp)
   38c64:	00 00 00 a8 	load_32 s0, (s0)
   38c68:	41 fe ff f5 	bnz s1, -56 <R_FillBackScreen+0x320>
   38c6c:	3e 04 00 4f 	movehi s1, 62
   38c70:	00 e3 ff 05 	add_i s24, s0, -8
   38c74:	01 00 00 4f 	movehi s0, 1
   38c78:	41 50 1c 00 	or s2, s1, 1812
   38c7c:	60 97 01 0f 	move s27, 101
   38c80:	00 88 7e 00 	or s0, s0, 8098
   38c84:	22 00 00 a8 	load_32 s1, (s2)
   38c88:	40 03 f1 c0 	move s26, s2
   38c8c:	21 e3 ff 05 	add_i s25, s1, -8
   38c90:	20 80 fd c0 	move s1, s27
   38c94:	7e 03 01 88 	store_32 s27, 64(sp)
   38c98:	ac 18 00 f8 	call 25264 <W_CacheLumpName>
   38c9c:	60 00 f0 c0 	move s3, s0
   38ca0:	40 04 00 0f 	move s2, 1
   38ca4:	5e 20 01 88 	store_32 s2, 72(sp)
   38ca8:	00 00 fc c0 	move s0, s24
   38cac:	20 80 fc c0 	move s1, s25
   38cb0:	06 35 00 f8 	call 54296 <V_DrawPatch>
   38cb4:	3e 33 01 a8 	load_32 s25, 76(sp)
   38cb8:	19 00 00 a8 	load_32 s0, (s25)
   38cbc:	3e 50 01 a8 	load_32 s1, 84(sp)
   38cc0:	21 00 00 a8 	load_32 s1, (s1)
   38cc4:	00 03 fd c0 	move s24, s26
   38cc8:	1e 13 01 88 	store_32 s24, 68(sp)
   38ccc:	58 00 00 a8 	load_32 s2, (s24)
   38cd0:	41 03 50 c0 	add_i s26, s1, s0
   38cd4:	02 e0 ff 05 	add_i s0, s2, -8
   38cd8:	1e f0 00 88 	store_32 s0, 60(sp)
   38cdc:	01 00 00 4f 	movehi s0, 1
   38ce0:	20 80 fd c0 	move s1, s27
   38ce4:	00 cc 0f 00 	or s0, s0, 1011
   38ce8:	98 18 00 f8 	call 25184 <W_CacheLumpName>
   38cec:	60 00 f0 c0 	move s3, s0
   38cf0:	00 00 fd c0 	move s0, s26
   38cf4:	3e f0 00 a8 	load_32 s1, 60(sp)
   38cf8:	5e 23 01 a8 	load_32 s26, 72(sp)
   38cfc:	40 00 fd c0 	move s2, s26
   38d00:	f2 34 00 f8 	call 54216 <V_DrawPatch>
   38d04:	19 00 00 a8 	load_32 s0, (s25)
   38d08:	38 00 00 a8 	load_32 s1, (s24)
   38d0c:	7e 43 01 a8 	load_32 s27, 80(sp)
   38d10:	00 e0 ff 05 	add_i s0, s0, -8
   38d14:	5b 00 00 a8 	load_32 s2, (s27)
   38d18:	1e e0 00 88 	store_32 s0, 56(sp)
   38d1c:	02 80 50 c0 	add_i s0, s2, s1
   38d20:	1e f0 00 88 	store_32 s0, 60(sp)
   38d24:	1e 03 01 a8 	load_32 s24, 64(sp)
   38d28:	00 00 00 4f 	movehi s0, 0
   38d2c:	00 84 39 00 	or s0, s0, 3681
   38d30:	20 00 fc c0 	move s1, s24
   38d34:	85 18 00 f8 	call 25108 <W_CacheLumpName>
   38d38:	60 00 f0 c0 	move s3, s0
   38d3c:	1e e0 00 a8 	load_32 s0, 56(sp)
   38d40:	3e f0 00 a8 	load_32 s1, 60(sp)
   38d44:	40 00 fd c0 	move s2, s26
   38d48:	e0 34 00 f8 	call 54144 <V_DrawPatch>
   38d4c:	19 00 00 a8 	load_32 s0, (s25)
   38d50:	3e 50 01 a8 	load_32 s1, 84(sp)
   38d54:	21 00 00 a8 	load_32 s1, (s1)
   38d58:	5e 10 01 a8 	load_32 s2, 68(sp)
   38d5c:	21 03 50 c0 	add_i s25, s1, s0
   38d60:	00 00 00 4f 	movehi s0, 0
   38d64:	42 00 00 a8 	load_32 s2, (s2)
   38d68:	7b 00 00 a8 	load_32 s3, (s27)
   38d6c:	20 00 fc c0 	move s1, s24
   38d70:	00 9c 41 00 	or s0, s0, 4199
   38d74:	43 03 51 c0 	add_i s26, s3, s2
   38d78:	74 18 00 f8 	call 25040 <W_CacheLumpName>
   38d7c:	60 00 f0 c0 	move s3, s0
   38d80:	00 80 fc c0 	move s0, s25
   38d84:	20 00 fd c0 	move s1, s26
   38d88:	5e 20 01 a8 	load_32 s2, 72(sp)
   38d8c:	cf 34 00 f8 	call 54076 <V_DrawPatch>
   38d90:	fe b3 01 a8 	load_32 ra, 108(sp)
   38d94:	7e c3 01 a8 	load_32 s27, 112(sp)
   38d98:	5e d3 01 a8 	load_32 s26, 116(sp)
   38d9c:	3e e3 01 a8 	load_32 s25, 120(sp)
   38da0:	1e f3 01 a8 	load_32 s24, 124(sp)
   38da4:	de 03 02 05 	add_i sp, sp, 128
   38da8:	1f 00 00 f0 	ret

0000000000038dac R_VideoErase:
   38dac:	de 03 ff 05 	add_i sp, sp, -64
   38db0:	fe f3 00 88 	store_32 ra, 60(sp)
   38db4:	40 0c 00 4f 	movehi s2, 96
   38db8:	42 20 02 00 	or s2, s2, 136
   38dbc:	62 00 00 a8 	load_32 s3, (s2)
   38dc0:	82 10 00 a8 	load_32 s4, 4(s2)
   38dc4:	40 80 f0 c0 	move s2, s1
   38dc8:	63 00 50 c0 	add_i s3, s3, s0
   38dcc:	24 00 50 c0 	add_i s1, s4, s0
   38dd0:	00 80 f1 c0 	move s0, s3
   38dd4:	cc 63 00 f8 	call 102192 <memcpy>
   38dd8:	fe f3 00 a8 	load_32 ra, 60(sp)
   38ddc:	de 03 01 05 	add_i sp, sp, 64
   38de0:	1f 00 00 f0 	ret

0000000000038de4 R_DrawViewBorder:
   38de4:	de 03 ff 05 	add_i sp, sp, -64
   38de8:	1e f3 00 88 	store_32 s24, 60(sp)
   38dec:	3e e3 00 88 	store_32 s25, 56(sp)
   38df0:	5e d3 00 88 	store_32 s26, 52(sp)
   38df4:	7e c3 00 88 	store_32 s27, 48(sp)
   38df8:	fe b3 00 88 	store_32 ra, 44(sp)
   38dfc:	1e 04 00 4f 	movehi s0, 62
   38e00:	00 f0 0f 00 	or s0, s0, 1020
   38e04:	00 00 00 a8 	load_32 s0, (s0)
   38e08:	20 00 05 10 	cmpeq_i s1, s0, 320
   38e0c:	c1 07 00 f4 	bnz s1, 248 <R_DrawViewBorder+0x120>
   38e10:	3e 04 00 4f 	movehi s1, 62
   38e14:	40 a0 02 0f 	move s2, 168
   38e18:	60 00 05 0f 	move s3, 320
   38e1c:	01 13 1c 00 	or s24, s1, 1796
   38e20:	03 00 60 c0 	sub_i s0, s3, s0
   38e24:	38 00 00 a8 	load_32 s1, (s24)
   38e28:	7e 90 00 88 	store_32 s3, 36(sp)
   38e2c:	22 80 60 c0 	sub_i s1, s2, s1
   38e30:	41 7c 00 0a 	shr s2, s1, 31
   38e34:	21 00 51 c0 	add_i s1, s1, s2
   38e38:	40 0c 00 4f 	movehi s2, 96
   38e3c:	61 07 00 09 	ashr s27, s1, 1
   38e40:	20 7c 00 0a 	shr s1, s0, 31
   38e44:	20 80 50 c0 	add_i s1, s0, s1
   38e48:	3e 70 00 88 	store_32 s1, 28(sp)
   38e4c:	1b 00 05 07 	mull_i s0, s27, 320
   38e50:	1e 80 00 88 	store_32 s0, 32(sp)
   38e54:	42 23 02 00 	or s26, s2, 136
   38e58:	21 07 00 09 	ashr s25, s1, 1
   38e5c:	40 80 5c c0 	add_i s2, s0, s25
   38e60:	5e a0 00 88 	store_32 s2, 40(sp)
   38e64:	1a 00 00 a8 	load_32 s0, (s26)
   38e68:	3a 10 00 a8 	load_32 s1, 4(s26)
   38e6c:	a6 63 00 f8 	call 102040 <memcpy>
   38e70:	18 00 00 a8 	load_32 s0, (s24)
   38e74:	3a 00 00 a8 	load_32 s1, (s26)
   38e78:	5a 10 00 a8 	load_32 s2, 4(s26)
   38e7c:	00 80 5d c0 	add_i s0, s0, s27
   38e80:	00 00 05 07 	mull_i s0, s0, 320
   38e84:	60 80 6c c0 	sub_i s3, s0, s25
   38e88:	01 80 51 c0 	add_i s0, s1, s3
   38e8c:	22 80 51 c0 	add_i s1, s2, s3
   38e90:	5e a0 00 a8 	load_32 s2, 40(sp)
   38e94:	9c 63 00 f8 	call 102000 <memcpy>
   38e98:	18 00 00 a8 	load_32 s0, (s24)
   38e9c:	00 08 00 14 	cmplt_i s0, s0, 2
   38ea0:	80 02 00 f4 	bnz s0, 80 <R_DrawViewBorder+0x10c>
   38ea4:	1e 90 00 a8 	load_32 s0, 36(sp)
   38ea8:	5e 70 00 a8 	load_32 s2, 28(sp)
   38eac:	00 80 6c c0 	sub_i s0, s0, s25
   38eb0:	42 f8 ff 01 	and s2, s2, -2
   38eb4:	5e a0 00 88 	store_32 s2, 40(sp)
   38eb8:	5e 80 00 a8 	load_32 s2, 32(sp)
   38ebc:	20 07 00 0f 	move s25, 1
   38ec0:	60 03 51 c0 	add_i s27, s0, s2
   38ec4:	1a 00 00 a8 	load_32 s0, (s26)
   38ec8:	3a 10 00 a8 	load_32 s1, 4(s26)
   38ecc:	5e a0 00 a8 	load_32 s2, 40(sp)
   38ed0:	00 80 5d c0 	add_i s0, s0, s27
   38ed4:	21 80 5d c0 	add_i s1, s1, s27
   38ed8:	8b 63 00 f8 	call 101932 <memcpy>
   38edc:	18 00 00 a8 	load_32 s0, (s24)
   38ee0:	39 07 00 05 	add_i s25, s25, 1
   38ee4:	7b 03 05 05 	add_i s27, s27, 320
   38ee8:	19 00 40 c1 	cmplt_i s0, s25, s0
   38eec:	c0 fe ff f5 	bnz s0, -40 <R_DrawViewBorder+0xe0>
   38ef0:	00 00 00 0f 	move s0, 0
   38ef4:	40 00 05 0f 	move s2, 320
   38ef8:	60 a0 02 0f 	move s3, 168
   38efc:	20 00 f0 c0 	move s1, s0
   38f00:	ec 33 00 f8 	call 53168 <V_MarkRect>
   38f04:	fe b3 00 a8 	load_32 ra, 44(sp)
   38f08:	7e c3 00 a8 	load_32 s27, 48(sp)
   38f0c:	5e d3 00 a8 	load_32 s26, 52(sp)
   38f10:	3e e3 00 a8 	load_32 s25, 56(sp)
   38f14:	1e f3 00 a8 	load_32 s24, 60(sp)
   38f18:	de 03 01 05 	add_i sp, sp, 64
   38f1c:	1f 00 00 f0 	ret

0000000000038f20 R_AddPointToBox:
   38f20:	62 20 00 a8 	load_32 s3, 8(s2)
   38f24:	63 00 50 c1 	cmple_i s3, s3, s0
   38f28:	43 00 00 f4 	bnz s3, 8 <R_AddPointToBox+0x10>
   38f2c:	0e 00 00 f6 	b 56 <R_AddPointToBox+0x44>
   38f30:	62 30 00 a8 	load_32 s3, 12(s2)
   38f34:	63 00 30 c1 	cmpge_i s3, s3, s0
   38f38:	43 00 00 f4 	bnz s3, 8 <R_AddPointToBox+0x20>
   38f3c:	0e 00 00 f6 	b 56 <R_AddPointToBox+0x54>
   38f40:	02 10 00 a8 	load_32 s0, 4(s2)
   38f44:	00 80 50 c1 	cmple_i s0, s0, s1
   38f48:	40 00 00 f4 	bnz s0, 8 <R_AddPointToBox+0x30>
   38f4c:	0e 00 00 f6 	b 56 <R_AddPointToBox+0x64>
   38f50:	02 00 00 a8 	load_32 s0, (s2)
   38f54:	00 80 30 c1 	cmpge_i s0, s0, s1
   38f58:	40 00 00 f4 	bnz s0, 8 <R_AddPointToBox+0x40>
   38f5c:	0e 00 00 f6 	b 56 <R_AddPointToBox+0x74>
   38f60:	1f 00 00 f0 	ret
   38f64:	02 20 00 88 	store_32 s0, 8(s2)
   38f68:	62 30 00 a8 	load_32 s3, 12(s2)
   38f6c:	63 00 30 c1 	cmpge_i s3, s3, s0
   38f70:	83 fe ff f5 	bnz s3, -48 <R_AddPointToBox+0x20>
   38f74:	02 30 00 88 	store_32 s0, 12(s2)
   38f78:	02 10 00 a8 	load_32 s0, 4(s2)
   38f7c:	00 80 50 c1 	cmple_i s0, s0, s1
   38f80:	80 fe ff f5 	bnz s0, -48 <R_AddPointToBox+0x30>
   38f84:	22 10 00 88 	store_32 s1, 4(s2)
   38f88:	02 00 00 a8 	load_32 s0, (s2)
   38f8c:	00 80 30 c1 	cmpge_i s0, s0, s1
   38f90:	80 fe ff f5 	bnz s0, -48 <R_AddPointToBox+0x40>
   38f94:	22 00 00 88 	store_32 s1, (s2)
   38f98:	1f 00 00 f0 	ret

0000000000038f9c R_PointOnSide:
   38f9c:	de 03 ff 05 	add_i sp, sp, -64
   38fa0:	1e f3 00 88 	store_32 s24, 60(sp)
   38fa4:	3e e3 00 88 	store_32 s25, 56(sp)
   38fa8:	fe d3 00 88 	store_32 ra, 52(sp)
   38fac:	00 03 f1 c0 	move s24, s2
   38fb0:	78 20 00 a8 	load_32 s3, 8(s24)
   38fb4:	43 00 00 f4 	bnz s3, 8 <R_PointOnSide+0x20>
   38fb8:	18 00 00 f6 	b 96 <R_PointOnSide+0x7c>
   38fbc:	98 30 00 a8 	load_32 s4, 12(s24)
   38fc0:	44 00 00 f4 	bnz s4, 8 <R_PointOnSide+0x2c>
   38fc4:	1c 00 00 f6 	b 112 <R_PointOnSide+0x98>
   38fc8:	58 00 00 a8 	load_32 s2, (s24)
   38fcc:	b8 10 00 a8 	load_32 s5, 4(s24)
   38fd0:	40 00 61 c0 	sub_i s2, s0, s2
   38fd4:	21 83 62 c0 	sub_i s25, s1, s5
   38fd8:	02 00 32 c0 	xor s0, s2, s4
   38fdc:	60 80 31 c0 	xor s3, s0, s3
   38fe0:	23 80 3c c0 	xor s1, s3, s25
   38fe4:	21 fc ff 12 	cmpgt_i s1, s1, -1
   38fe8:	41 00 00 f4 	bnz s1, 8 <R_PointOnSide+0x54>
   38fec:	10 00 00 f6 	b 64 <R_PointOnSide+0x90>
   38ff0:	04 40 00 09 	ashr s0, s4, 16
   38ff4:	20 00 f1 c0 	move s1, s2
   38ff8:	cf 8b ff f9 	call -118980 <FixedMul>
   38ffc:	38 20 00 a8 	load_32 s1, 8(s24)
   39000:	00 03 f0 c0 	move s24, s0
   39004:	00 80 fc c0 	move s0, s25
   39008:	21 40 00 09 	ashr s1, s1, 16
   3900c:	ca 8b ff f9 	call -119000 <FixedMul>
   39010:	00 00 3c c1 	cmpge_i s0, s0, s24
   39014:	0f 00 00 f6 	b 60 <R_PointOnSide+0xb4>
   39018:	38 00 00 a8 	load_32 s1, (s24)
   3901c:	21 00 40 c1 	cmplt_i s1, s1, s0
   39020:	18 30 00 a8 	load_32 s0, 12(s24)
   39024:	41 00 00 f4 	bnz s1, 8 <R_PointOnSide+0x90>
   39028:	09 00 00 f6 	b 36 <R_PointOnSide+0xb0>
   3902c:	00 7c 00 0a 	shr s0, s0, 31
   39030:	09 00 00 f6 	b 36 <R_PointOnSide+0xb8>
   39034:	18 10 00 a8 	load_32 s0, 4(s24)
   39038:	00 80 40 c1 	cmplt_i s0, s0, s1
   3903c:	40 00 00 f4 	bnz s0, 8 <R_PointOnSide+0xa8>
   39040:	0a 00 00 f6 	b 40 <R_PointOnSide+0xcc>
   39044:	03 00 00 12 	cmpgt_i s0, s3, 0
   39048:	02 00 00 f6 	b 8 <R_PointOnSide+0xb4>
   3904c:	00 00 00 12 	cmpgt_i s0, s0, 0
   39050:	00 04 00 01 	and s0, s0, 1
   39054:	fe d3 00 a8 	load_32 ra, 52(sp)
   39058:	3e e3 00 a8 	load_32 s25, 56(sp)
   3905c:	1e f3 00 a8 	load_32 s24, 60(sp)
   39060:	de 03 01 05 	add_i sp, sp, 64
   39064:	1f 00 00 f0 	ret
   39068:	03 7c 00 0a 	shr s0, s3, 31
   3906c:	fa ff ff f7 	b -24 <R_PointOnSide+0xb8>

0000000000039070 R_PointOnSegSide:
   39070:	de 03 ff 05 	add_i sp, sp, -64
   39074:	1e f3 00 88 	store_32 s24, 60(sp)
   39078:	3e e3 00 88 	store_32 s25, 56(sp)
   3907c:	5e d3 00 88 	store_32 s26, 52(sp)
   39080:	fe c3 00 88 	store_32 ra, 48(sp)
   39084:	62 00 00 a8 	load_32 s3, (s2)
   39088:	a3 00 00 a8 	load_32 s5, (s3)
   3908c:	83 10 00 a8 	load_32 s4, 4(s3)
   39090:	42 10 00 a8 	load_32 s2, 4(s2)
   39094:	62 00 00 a8 	load_32 s3, (s2)
   39098:	c2 10 00 a8 	load_32 s6, 4(s2)
   3909c:	40 80 f0 c0 	move s2, s1
   390a0:	43 83 62 c0 	sub_i s26, s3, s5
   390a4:	66 00 62 c0 	sub_i s3, s6, s4
   390a8:	5a 00 00 f4 	bnz s26, 8 <R_PointOnSegSide+0x40>
   390ac:	13 00 00 f6 	b 76 <R_PointOnSegSide+0x88>
   390b0:	43 00 00 f4 	bnz s3, 8 <R_PointOnSegSide+0x48>
   390b4:	16 00 00 f6 	b 88 <R_PointOnSegSide+0x9c>
   390b8:	20 80 62 c0 	sub_i s1, s0, s5
   390bc:	03 80 30 c0 	xor s0, s3, s1
   390c0:	02 03 62 c0 	sub_i s24, s2, s4
   390c4:	40 00 3c c0 	xor s2, s0, s24
   390c8:	42 00 3d c0 	xor s2, s2, s26
   390cc:	42 fc ff 12 	cmpgt_i s2, s2, -1
   390d0:	42 00 00 f4 	bnz s2, 8 <R_PointOnSegSide+0x68>
   390d4:	16 00 00 f6 	b 88 <R_PointOnSegSide+0xbc>
   390d8:	03 40 00 09 	ashr s0, s3, 16
   390dc:	96 8b ff f9 	call -119208 <FixedMul>
   390e0:	20 03 f0 c0 	move s25, s0
   390e4:	3a 40 00 09 	ashr s1, s26, 16
   390e8:	00 00 fc c0 	move s0, s24
   390ec:	92 8b ff f9 	call -119224 <FixedMul>
   390f0:	00 80 3c c1 	cmpge_i s0, s0, s25
   390f4:	0c 00 00 f6 	b 48 <R_PointOnSegSide+0xb4>
   390f8:	05 00 40 c1 	cmplt_i s0, s5, s0
   390fc:	40 00 00 f4 	bnz s0, 8 <R_PointOnSegSide+0x94>
   39100:	08 00 00 f6 	b 32 <R_PointOnSegSide+0xb0>
   39104:	03 7c 00 0a 	shr s0, s3, 31
   39108:	0c 00 00 f6 	b 48 <R_PointOnSegSide+0xc8>
   3910c:	04 00 41 c1 	cmplt_i s0, s4, s2
   39110:	40 00 00 f4 	bnz s0, 8 <R_PointOnSegSide+0xa8>
   39114:	08 00 00 f6 	b 32 <R_PointOnSegSide+0xc4>
   39118:	1a 00 00 12 	cmpgt_i s0, s26, 0
   3911c:	02 00 00 f6 	b 8 <R_PointOnSegSide+0xb4>
   39120:	03 00 00 12 	cmpgt_i s0, s3, 0
   39124:	00 04 00 01 	and s0, s0, 1
   39128:	04 00 00 f6 	b 16 <R_PointOnSegSide+0xc8>
   3912c:	00 7c 00 0a 	shr s0, s0, 31
   39130:	02 00 00 f6 	b 8 <R_PointOnSegSide+0xc8>
   39134:	1a 7c 00 0a 	shr s0, s26, 31
   39138:	fe c3 00 a8 	load_32 ra, 48(sp)
   3913c:	5e d3 00 a8 	load_32 s26, 52(sp)
   39140:	3e e3 00 a8 	load_32 s25, 56(sp)
   39144:	1e f3 00 a8 	load_32 s24, 60(sp)
   39148:	de 03 01 05 	add_i sp, sp, 64
   3914c:	1f 00 00 f0 	ret

0000000000039150 R_PointToAngle:
   39150:	de 03 ff 05 	add_i sp, sp, -64
   39154:	1e f3 00 88 	store_32 s24, 60(sp)
   39158:	fe e3 00 88 	store_32 ra, 56(sp)
   3915c:	41 08 00 4f 	movehi s2, 65
   39160:	61 08 00 4f 	movehi s3, 65
   39164:	42 00 05 00 	or s2, s2, 320
   39168:	63 10 05 00 	or s3, s3, 324
   3916c:	42 00 00 a8 	load_32 s2, (s2)
   39170:	63 00 00 a8 	load_32 s3, (s3)
   39174:	40 00 61 c0 	sub_i s2, s0, s2
   39178:	61 80 61 c0 	sub_i s3, s1, s3
   3917c:	03 00 01 c0 	or s0, s3, s2
   39180:	60 02 00 f2 	bz s0, 76 <R_PointToAngle+0x7c>
   39184:	02 00 00 14 	cmplt_i s0, s2, 0
   39188:	c0 02 00 f4 	bnz s0, 88 <R_PointToAngle+0x90>
   3918c:	03 00 00 14 	cmplt_i s0, s3, 0
   39190:	40 04 00 f4 	bnz s0, 136 <R_PointToAngle+0xc8>
   39194:	02 80 51 c1 	cmple_i s0, s2, s3
   39198:	20 06 00 f4 	bnz s0, 196 <R_PointToAngle+0x10c>
   3919c:	00 80 f1 c0 	move s0, s3
   391a0:	20 00 f1 c0 	move s1, s2
   391a4:	60 55 ff f9 	call -174720 <SlopeDiv>
   391a8:	32 04 00 4f 	movehi s1, 50
   391ac:	00 08 00 0b 	shl s0, s0, 2
   391b0:	21 90 41 00 	or s1, s1, 4196
   391b4:	01 00 50 c0 	add_i s0, s1, s0
   391b8:	00 00 00 a8 	load_32 s0, (s0)
   391bc:	fe e3 00 a8 	load_32 ra, 56(sp)
   391c0:	1e f3 00 a8 	load_32 s24, 60(sp)
   391c4:	de 03 01 05 	add_i sp, sp, 64
   391c8:	1f 00 00 f0 	ret
   391cc:	00 00 00 0f 	move s0, 0
   391d0:	fe e3 00 a8 	load_32 ra, 56(sp)
   391d4:	1e f3 00 a8 	load_32 s24, 60(sp)
   391d8:	de 03 01 05 	add_i sp, sp, 64
   391dc:	1f 00 00 f0 	ret
   391e0:	00 00 00 0f 	move s0, 0
   391e4:	83 00 00 14 	cmplt_i s4, s3, 0
   391e8:	20 00 61 c0 	sub_i s1, s0, s2
   391ec:	a4 04 00 f4 	bnz s4, 148 <R_PointToAngle+0x130>
   391f0:	03 80 30 c1 	cmpge_i s0, s3, s1
   391f4:	60 06 00 f4 	bnz s0, 204 <R_PointToAngle+0x170>
   391f8:	00 80 f1 c0 	move s0, s3
   391fc:	4a 55 ff f9 	call -174808 <SlopeDiv>
   39200:	32 04 00 4f 	movehi s1, 50
   39204:	00 08 00 0b 	shl s0, s0, 2
   39208:	21 90 41 00 	or s1, s1, 4196
   3920c:	01 00 50 c0 	add_i s0, s1, s0
   39210:	3f fc 7f 4f 	movehi s1, 262143
   39214:	4e 00 00 f6 	b 312 <R_PointToAngle+0x1fc>
   39218:	00 03 00 0f 	move s24, 0
   3921c:	38 80 61 c0 	sub_i s1, s24, s3
   39220:	02 80 50 c1 	cmple_i s0, s2, s1
   39224:	a0 06 00 f4 	bnz s0, 212 <R_PointToAngle+0x1a8>
   39228:	00 80 f0 c0 	move s0, s1
   3922c:	20 00 f1 c0 	move s1, s2
   39230:	3d 55 ff f9 	call -174860 <SlopeDiv>
   39234:	32 04 00 4f 	movehi s1, 50
   39238:	00 08 00 0b 	shl s0, s0, 2
   3923c:	21 90 41 00 	or s1, s1, 4196
   39240:	01 00 50 c0 	add_i s0, s1, s0
   39244:	00 00 00 a8 	load_32 s0, (s0)
   39248:	18 00 60 c0 	sub_i s0, s24, s0
   3924c:	fe e3 00 a8 	load_32 ra, 56(sp)
   39250:	1e f3 00 a8 	load_32 s24, 60(sp)
   39254:	de 03 01 05 	add_i sp, sp, 64
   39258:	1f 00 00 f0 	ret
   3925c:	00 00 f1 c0 	move s0, s2
   39260:	20 80 f1 c0 	move s1, s3
   39264:	30 55 ff f9 	call -174912 <SlopeDiv>
   39268:	32 04 00 4f 	movehi s1, 50
   3926c:	00 08 00 0b 	shl s0, s0, 2
   39270:	21 90 41 00 	or s1, s1, 4196
   39274:	01 00 50 c0 	add_i s0, s1, s0
   39278:	3f fc 3f 4f 	movehi s1, 131071
   3927c:	34 00 00 f6 	b 208 <R_PointToAngle+0x1fc>
   39280:	40 80 61 c0 	sub_i s2, s0, s3
   39284:	01 00 51 c1 	cmple_i s0, s1, s2
   39288:	20 05 00 f4 	bnz s0, 164 <R_PointToAngle+0x1dc>
   3928c:	00 00 f1 c0 	move s0, s2
   39290:	25 55 ff f9 	call -174956 <SlopeDiv>
   39294:	32 04 00 4f 	movehi s1, 50
   39298:	00 08 00 0b 	shl s0, s0, 2
   3929c:	21 90 41 00 	or s1, s1, 4196
   392a0:	01 00 50 c0 	add_i s0, s1, s0
   392a4:	20 00 80 4f 	movehi s1, 262144
   392a8:	00 00 00 a8 	load_32 s0, (s0)
   392ac:	00 80 30 c0 	xor s0, s0, s1
   392b0:	fe e3 00 a8 	load_32 ra, 56(sp)
   392b4:	1e f3 00 a8 	load_32 s24, 60(sp)
   392b8:	de 03 01 05 	add_i sp, sp, 64
   392bc:	1f 00 00 f0 	ret
   392c0:	00 80 f0 c0 	move s0, s1
   392c4:	20 80 f1 c0 	move s1, s3
   392c8:	17 55 ff f9 	call -175012 <SlopeDiv>
   392cc:	32 04 00 4f 	movehi s1, 50
   392d0:	00 08 00 0b 	shl s0, s0, 2
   392d4:	21 90 41 00 	or s1, s1, 4196
   392d8:	01 00 50 c0 	add_i s0, s1, s0
   392dc:	20 00 40 4f 	movehi s1, 131072
   392e0:	00 00 00 a8 	load_32 s0, (s0)
   392e4:	00 80 50 c0 	add_i s0, s0, s1
   392e8:	fe e3 00 a8 	load_32 ra, 56(sp)
   392ec:	1e f3 00 a8 	load_32 s24, 60(sp)
   392f0:	de 03 01 05 	add_i sp, sp, 64
   392f4:	1f 00 00 f0 	ret
   392f8:	00 00 f1 c0 	move s0, s2
   392fc:	0a 55 ff f9 	call -175064 <SlopeDiv>
   39300:	32 04 00 4f 	movehi s1, 50
   39304:	00 08 00 0b 	shl s0, s0, 2
   39308:	21 90 41 00 	or s1, s1, 4196
   3930c:	01 00 50 c0 	add_i s0, s1, s0
   39310:	20 00 c0 4f 	movehi s1, 393216
   39314:	00 00 00 a8 	load_32 s0, (s0)
   39318:	00 80 50 c0 	add_i s0, s0, s1
   3931c:	fe e3 00 a8 	load_32 ra, 56(sp)
   39320:	1e f3 00 a8 	load_32 s24, 60(sp)
   39324:	de 03 01 05 	add_i sp, sp, 64
   39328:	1f 00 00 f0 	ret
   3932c:	00 80 f0 c0 	move s0, s1
   39330:	20 00 f1 c0 	move s1, s2
   39334:	fc 54 ff f9 	call -175120 <SlopeDiv>
   39338:	32 04 00 4f 	movehi s1, 50
   3933c:	00 08 00 0b 	shl s0, s0, 2
   39340:	21 90 41 00 	or s1, s1, 4196
   39344:	01 00 50 c0 	add_i s0, s1, s0
   39348:	3f fc bf 4f 	movehi s1, 393215
   3934c:	00 00 00 a8 	load_32 s0, (s0)
   39350:	21 fc 7f 00 	or s1, s1, 8191
   39354:	01 00 60 c0 	sub_i s0, s1, s0
   39358:	fe e3 00 a8 	load_32 ra, 56(sp)
   3935c:	1e f3 00 a8 	load_32 s24, 60(sp)
   39360:	de 03 01 05 	add_i sp, sp, 64
   39364:	1f 00 00 f0 	ret

0000000000039368 R_PointToAngle2:
   39368:	de 03 ff 05 	add_i sp, sp, -64
   3936c:	fe f3 00 88 	store_32 ra, 60(sp)
   39370:	81 08 00 4f 	movehi s4, 65
   39374:	a1 08 00 4f 	movehi s5, 65
   39378:	84 00 05 00 	or s4, s4, 320
   3937c:	a5 10 05 00 	or s5, s5, 324
   39380:	04 00 00 88 	store_32 s0, (s4)
   39384:	25 00 00 88 	store_32 s1, (s5)
   39388:	00 00 f1 c0 	move s0, s2
   3938c:	20 80 f1 c0 	move s1, s3
   39390:	70 ff ff f9 	call -576 <R_PointToAngle>
   39394:	fe f3 00 a8 	load_32 ra, 60(sp)
   39398:	de 03 01 05 	add_i sp, sp, 64
   3939c:	1f 00 00 f0 	ret

00000000000393a0 R_PointToDist:
   393a0:	de 03 ff 05 	add_i sp, sp, -64
   393a4:	1e f3 00 88 	store_32 s24, 60(sp)
   393a8:	fe e3 00 88 	store_32 ra, 56(sp)
   393ac:	41 08 00 4f 	movehi s2, 65
   393b0:	61 08 00 4f 	movehi s3, 65
   393b4:	42 00 05 00 	or s2, s2, 320
   393b8:	63 10 05 00 	or s3, s3, 324
   393bc:	42 00 00 a8 	load_32 s2, (s2)
   393c0:	63 00 00 a8 	load_32 s3, (s3)
   393c4:	00 00 61 c0 	sub_i s0, s0, s2
   393c8:	21 80 61 c0 	sub_i s1, s1, s3
   393cc:	60 7c 00 09 	ashr s3, s0, 31
   393d0:	41 7c 00 09 	ashr s2, s1, 31
   393d4:	21 00 51 c0 	add_i s1, s1, s2
   393d8:	00 80 51 c0 	add_i s0, s0, s3
   393dc:	01 03 31 c0 	xor s24, s1, s2
   393e0:	20 80 31 c0 	xor s1, s0, s3
   393e4:	58 80 20 c1 	cmpgt_i s2, s24, s1
   393e8:	00 80 f0 c0 	move s0, s1
   393ec:	42 00 00 f4 	bnz s2, 8 <R_PointToDist+0x54>
   393f0:	00 00 fc c0 	move s0, s24
   393f4:	42 00 00 f4 	bnz s2, 8 <R_PointToDist+0x5c>
   393f8:	00 83 f0 c0 	move s24, s1
   393fc:	20 00 fc c0 	move s1, s24
   39400:	d3 8a ff f9 	call -119988 <FixedDiv>
   39404:	32 04 00 4f 	movehi s1, 50
   39408:	00 14 00 09 	ashr s0, s0, 5
   3940c:	43 00 00 4f 	movehi s2, 3
   39410:	21 90 41 00 	or s1, s1, 4196
   39414:	00 08 00 0b 	shl s0, s0, 2
   39418:	42 f0 7f 00 	or s2, s2, 8188
   3941c:	01 00 50 c0 	add_i s0, s1, s0
   39420:	20 00 40 4f 	movehi s1, 131072
   39424:	00 00 00 a8 	load_32 s0, (s0)
   39428:	00 80 50 c0 	add_i s0, s0, s1
   3942c:	2d 04 00 4f 	movehi s1, 45
   39430:	00 44 00 0a 	shr s0, s0, 17
   39434:	21 90 41 00 	or s1, s1, 4196
   39438:	00 00 11 c0 	and s0, s0, s2
   3943c:	01 00 50 c0 	add_i s0, s1, s0
   39440:	20 00 00 a8 	load_32 s1, (s0)
   39444:	00 00 fc c0 	move s0, s24
   39448:	c1 8a ff f9 	call -120060 <FixedDiv>
   3944c:	fe e3 00 a8 	load_32 ra, 56(sp)
   39450:	1e f3 00 a8 	load_32 s24, 60(sp)
   39454:	de 03 01 05 	add_i sp, sp, 64
   39458:	1f 00 00 f0 	ret

000000000003945c R_InitPointToAngle:
   3945c:	1f 00 00 f0 	ret

0000000000039460 R_ScaleFromGlobalAngle:
   39460:	de 03 ff 05 	add_i sp, sp, -64
   39464:	1e f3 00 88 	store_32 s24, 60(sp)
   39468:	3e e3 00 88 	store_32 s25, 56(sp)
   3946c:	fe d3 00 88 	store_32 ra, 52(sp)
   39470:	3f 04 00 4f 	movehi s1, 63
   39474:	52 08 00 4f 	movehi s2, 82
   39478:	60 00 40 4f 	movehi s3, 131072
   3947c:	21 b0 04 00 	or s1, s1, 300
   39480:	42 70 4a 00 	or s2, s2, 4764
   39484:	00 80 51 c0 	add_i s0, s0, s3
   39488:	21 00 00 a8 	load_32 s1, (s1)
   3948c:	6d 04 00 4f 	movehi s3, 45
   39490:	42 00 00 a8 	load_32 s2, (s2)
   39494:	20 80 60 c0 	sub_i s1, s0, s1
   39498:	00 00 61 c0 	sub_i s0, s0, s2
   3949c:	43 90 41 00 	or s2, s3, 4196
   394a0:	21 4c 00 09 	ashr s1, s1, 19
   394a4:	00 4c 00 09 	ashr s0, s0, 19
   394a8:	7e 04 00 4f 	movehi s3, 62
   394ac:	21 08 00 0b 	shl s1, s1, 2
   394b0:	00 08 00 0b 	shl s0, s0, 2
   394b4:	22 80 50 c0 	add_i s1, s2, s1
   394b8:	02 00 50 c0 	add_i s0, s2, s0
   394bc:	43 40 51 00 	or s2, s3, 5200
   394c0:	21 03 00 a8 	load_32 s25, (s1)
   394c4:	20 00 00 a8 	load_32 s1, (s0)
   394c8:	02 00 00 a8 	load_32 s0, (s2)
   394cc:	9a 8a ff f9 	call -120216 <FixedMul>
   394d0:	3e 04 00 4f 	movehi s1, 62
   394d4:	52 08 00 4f 	movehi s2, 82
   394d8:	21 d0 50 00 	or s1, s1, 5172
   394dc:	42 50 4a 00 	or s2, s2, 4756
   394e0:	21 00 00 a8 	load_32 s1, (s1)
   394e4:	00 83 b0 c0 	shl s24, s0, s1
   394e8:	02 00 00 a8 	load_32 s0, (s2)
   394ec:	20 80 fc c0 	move s1, s25
   394f0:	91 8a ff f9 	call -120252 <FixedMul>
   394f4:	20 00 f0 c0 	move s1, s0
   394f8:	18 40 00 09 	ashr s0, s24, 16
   394fc:	01 00 50 c1 	cmple_i s0, s1, s0
   39500:	e0 00 00 f4 	bnz s0, 28 <R_ScaleFromGlobalAngle+0xbc>
   39504:	00 00 fc c0 	move s0, s24
   39508:	91 8a ff f9 	call -120252 <FixedDiv>
   3950c:	20 40 00 4f 	movehi s1, 512
   39510:	20 80 20 c1 	cmpgt_i s1, s0, s1
   39514:	41 00 00 f4 	bnz s1, 8 <R_ScaleFromGlobalAngle+0xbc>
   39518:	07 00 00 f6 	b 28 <R_ScaleFromGlobalAngle+0xd4>
   3951c:	00 40 00 4f 	movehi s0, 512
   39520:	fe d3 00 a8 	load_32 ra, 52(sp)
   39524:	3e e3 00 a8 	load_32 s25, 56(sp)
   39528:	1e f3 00 a8 	load_32 s24, 60(sp)
   3952c:	de 03 01 05 	add_i sp, sp, 64
   39530:	1f 00 00 f0 	ret
   39534:	20 00 04 12 	cmpgt_i s1, s0, 256
   39538:	41 ff ff f5 	bnz s1, -24 <R_ScaleFromGlobalAngle+0xc0>
   3953c:	00 00 04 0f 	move s0, 256
   39540:	f8 ff ff f7 	b -32 <R_ScaleFromGlobalAngle+0xc0>

0000000000039544 R_InitTables:
   39544:	1f 00 00 f0 	ret

0000000000039548 R_InitTextureMapping:
   39548:	de 03 ff 05 	add_i sp, sp, -64
   3954c:	1e f3 00 88 	store_32 s24, 60(sp)
   39550:	3e e3 00 88 	store_32 s25, 56(sp)
   39554:	5e d3 00 88 	store_32 s26, 52(sp)
   39558:	7e c3 00 88 	store_32 s27, 48(sp)
   3955c:	fe b3 00 88 	store_32 ra, 44(sp)
   39560:	0b 04 00 4f 	movehi s0, 43
   39564:	41 00 00 4f 	movehi s2, 1
   39568:	3e 04 00 4f 	movehi s1, 62
   3956c:	60 90 41 00 	or s3, s0, 4196
   39570:	7e a0 00 88 	store_32 s3, 40(sp)
   39574:	02 00 40 00 	or s0, s2, 4096
   39578:	81 80 50 00 	or s4, s1, 5152
   3957c:	9e 70 00 88 	store_32 s4, 28(sp)
   39580:	23 00 50 c0 	add_i s1, s3, s0
   39584:	04 00 00 a8 	load_32 s0, (s4)
   39588:	21 00 00 a8 	load_32 s1, (s1)
   3958c:	70 8a ff f9 	call -120384 <FixedDiv>
   39590:	1e 90 00 88 	store_32 s0, 36(sp)
   39594:	1f 04 00 4f 	movehi s0, 63
   39598:	3e 04 00 4f 	movehi s1, 62
   3959c:	47 00 00 4f 	movehi s2, 7
   395a0:	40 d3 04 00 	or s26, s0, 308
   395a4:	0f fc ff 4f 	movehi s0, 524271
   395a8:	60 03 00 0f 	move s27, 0
   395ac:	70 00 00 4f 	movehi s3, 16
   395b0:	a0 fc 7f 00 	or s5, s0, 8191
   395b4:	00 ff ff 0f 	move s24, -1
   395b8:	01 30 1c 00 	or s0, s1, 1804
   395bc:	1e 80 00 88 	store_32 s0, 32(sp)
   395c0:	02 fc 7f 00 	or s0, s2, 8191
   395c4:	1e 40 00 88 	store_32 s0, 16(sp)
   395c8:	18 fc ff 4f 	movehi s0, 524280
   395cc:	1e 30 00 88 	store_32 s0, 12(sp)
   395d0:	7e 60 00 88 	store_32 s3, 24(sp)
   395d4:	be 50 00 88 	store_32 s5, 20(sp)
   395d8:	1e a0 00 a8 	load_32 s0, 40(sp)
   395dc:	3b 0b 00 0b 	shl s25, s27, 2
   395e0:	00 80 5c c0 	add_i s0, s0, s25
   395e4:	00 00 00 a8 	load_32 s0, (s0)
   395e8:	20 00 fc c0 	move s1, s24
   395ec:	40 80 21 c1 	cmpgt_i s2, s0, s3
   395f0:	62 03 00 f4 	bnz s2, 108 <R_InitTextureMapping+0x114>
   395f4:	20 80 22 c1 	cmpgt_i s1, s0, s5
   395f8:	a1 00 00 f4 	bnz s1, 20 <R_InitTextureMapping+0xc4>
   395fc:	1e 80 00 a8 	load_32 s0, 32(sp)
   39600:	00 00 00 a8 	load_32 s0, (s0)
   39604:	20 04 00 05 	add_i s1, s0, 1
   39608:	15 00 00 f6 	b 84 <R_InitTextureMapping+0x114>
   3960c:	3e 90 00 a8 	load_32 s1, 36(sp)
   39610:	49 8a ff f9 	call -120540 <FixedMul>
   39614:	be 50 00 a8 	load_32 s5, 20(sp)
   39618:	7e 60 00 a8 	load_32 s3, 24(sp)
   3961c:	3e 70 00 a8 	load_32 s1, 28(sp)
   39620:	21 00 00 a8 	load_32 s1, (s1)
   39624:	01 00 60 c0 	sub_i s0, s1, s0
   39628:	3e 40 00 a8 	load_32 s1, 16(sp)
   3962c:	00 80 50 c0 	add_i s0, s0, s1
   39630:	3e 30 00 a8 	load_32 s1, 12(sp)
   39634:	40 80 40 c1 	cmplt_i s2, s0, s1
   39638:	20 00 fc c0 	move s1, s24
   3963c:	02 01 00 f4 	bnz s2, 32 <R_InitTextureMapping+0x114>
   39640:	3e 80 00 a8 	load_32 s1, 32(sp)
   39644:	00 40 00 09 	ashr s0, s0, 16
   39648:	21 00 00 a8 	load_32 s1, (s1)
   3964c:	21 04 00 05 	add_i s1, s1, 1
   39650:	40 80 20 c1 	cmpgt_i s2, s0, s1
   39654:	42 00 00 f4 	bnz s2, 8 <R_InitTextureMapping+0x114>
   39658:	20 00 f0 c0 	move s1, s0
   3965c:	7b 07 00 05 	add_i s27, s27, 1
   39660:	1a 80 5c c0 	add_i s0, s26, s25
   39664:	5b 00 40 18 	cmplt_u s2, s27, 4096
   39668:	20 00 00 88 	store_32 s1, (s0)
   3966c:	62 fb ff f5 	bnz s2, -148 <R_InitTextureMapping+0x90>
   39670:	1e 80 00 a8 	load_32 s0, 32(sp)
   39674:	00 00 00 a8 	load_32 s0, (s0)
   39678:	20 00 00 14 	cmplt_i s1, s0, 0
   3967c:	c1 02 00 f4 	bnz s1, 88 <R_InitTextureMapping+0x18c>
   39680:	61 08 00 4f 	movehi s3, 65
   39684:	20 00 00 0f 	move s1, 0
   39688:	40 00 c0 4f 	movehi s2, 393216
   3968c:	63 30 05 00 	or s3, s3, 332
   39690:	80 80 f0 c0 	move s4, s1
   39694:	c0 80 f0 c0 	move s6, s1
   39698:	a0 00 f3 c0 	move s5, s6
   3969c:	c5 08 00 0b 	shl s6, s5, 2
   396a0:	da 00 53 c0 	add_i s6, s26, s6
   396a4:	c6 00 00 a8 	load_32 s6, (s6)
   396a8:	e6 00 22 c1 	cmpgt_i s7, s6, s4
   396ac:	c5 04 00 05 	add_i s6, s5, 1
   396b0:	47 ff ff f5 	bnz s7, -24 <R_InitTextureMapping+0x150>
   396b4:	c4 08 00 0b 	shl s6, s4, 2
   396b8:	a5 4c 00 0b 	shl s5, s5, 19
   396bc:	e4 00 40 c1 	cmplt_i s7, s4, s0
   396c0:	84 04 00 05 	add_i s4, s4, 1
   396c4:	c3 00 53 c0 	add_i s6, s3, s6
   396c8:	a5 00 51 c0 	add_i s5, s5, s2
   396cc:	a6 00 00 88 	store_32 s5, (s6)
   396d0:	27 fe ff f5 	bnz s7, -60 <R_InitTextureMapping+0x14c>
   396d4:	00 03 00 0f 	move s24, 0
   396d8:	20 03 fc c0 	move s25, s24
   396dc:	1e a0 00 a8 	load_32 s0, 40(sp)
   396e0:	79 0b 00 0b 	shl s27, s25, 2
   396e4:	00 80 5d c0 	add_i s0, s0, s27
   396e8:	00 00 00 a8 	load_32 s0, (s0)
   396ec:	3e 90 00 a8 	load_32 s1, 36(sp)
   396f0:	11 8a ff f9 	call -120764 <FixedMul>
   396f4:	1a 80 5d c0 	add_i s0, s26, s27
   396f8:	40 00 00 a8 	load_32 s2, (s0)
   396fc:	20 00 fc c0 	move s1, s24
   39700:	62 fc ff 10 	cmpeq_i s3, s2, -1
   39704:	c3 00 00 f4 	bnz s3, 24 <R_InitTextureMapping+0x1d4>
   39708:	3e 80 00 a8 	load_32 s1, 32(sp)
   3970c:	21 00 00 a8 	load_32 s1, (s1)
   39710:	61 04 00 05 	add_i s3, s1, 1
   39714:	42 80 11 c1 	cmpne_i s2, s2, s3
   39718:	42 00 00 f4 	bnz s2, 8 <R_InitTextureMapping+0x1d8>
   3971c:	20 00 00 88 	store_32 s1, (s0)
   39720:	39 07 00 05 	add_i s25, s25, 1
   39724:	19 00 40 18 	cmplt_u s0, s25, 4096
   39728:	a0 fd ff f5 	bnz s0, -76 <R_InitTextureMapping+0x194>
   3972c:	01 08 00 4f 	movehi s0, 65
   39730:	3e 04 00 4f 	movehi s1, 62
   39734:	00 30 05 00 	or s0, s0, 332
   39738:	21 b0 50 00 	or s1, s1, 5164
   3973c:	00 00 00 a8 	load_32 s0, (s0)
   39740:	01 00 00 88 	store_32 s0, (s1)
   39744:	fe b3 00 a8 	load_32 ra, 44(sp)
   39748:	7e c3 00 a8 	load_32 s27, 48(sp)
   3974c:	5e d3 00 a8 	load_32 s26, 52(sp)
   39750:	3e e3 00 a8 	load_32 s25, 56(sp)
   39754:	1e f3 00 a8 	load_32 s24, 60(sp)
   39758:	de 03 01 05 	add_i sp, sp, 64
   3975c:	1f 00 00 f0 	ret

0000000000039760 R_InitLightTables:
   39760:	de 03 ff 05 	add_i sp, sp, -64
   39764:	1e f3 00 88 	store_32 s24, 60(sp)
   39768:	3e e3 00 88 	store_32 s25, 56(sp)
   3976c:	5e d3 00 88 	store_32 s26, 52(sp)
   39770:	7e c3 00 88 	store_32 s27, 48(sp)
   39774:	fe b3 00 88 	store_32 ra, 44(sp)
   39778:	00 00 0f 0f 	move s0, 960
   3977c:	1e 50 00 88 	store_32 s0, 20(sp)
   39780:	00 a0 00 4f 	movehi s0, 1280
   39784:	1e a0 00 88 	store_32 s0, 40(sp)
   39788:	1d 04 00 4f 	movehi s0, 61
   3978c:	60 03 00 0f 	move s27, 0
   39790:	21 08 00 4f 	movehi s1, 65
   39794:	00 20 47 00 	or s0, s0, 4552
   39798:	40 7c 00 0f 	move s2, 31
   3979c:	5e 60 00 88 	store_32 s2, 24(sp)
   397a0:	1e 90 00 88 	store_32 s0, 36(sp)
   397a4:	01 40 19 00 	or s0, s1, 1616
   397a8:	1e 80 00 88 	store_32 s0, 32(sp)
   397ac:	7e 73 00 88 	store_32 s27, 28(sp)
   397b0:	3e 50 00 a8 	load_32 s1, 20(sp)
   397b4:	1b 18 00 0b 	shl s0, s27, 6
   397b8:	5e 73 00 a8 	load_32 s26, 28(sp)
   397bc:	01 00 60 c0 	sub_i s0, s1, s0
   397c0:	00 13 00 0a 	shr s24, s0, 4
   397c4:	3a 07 00 05 	add_i s25, s26, 1
   397c8:	1e a0 00 a8 	load_32 s0, 40(sp)
   397cc:	39 50 00 0b 	shl s1, s25, 20
   397d0:	df 89 ff f9 	call -120964 <FixedDiv>
   397d4:	20 30 00 09 	ashr s1, s0, 12
   397d8:	00 7c 00 0a 	shr s0, s0, 31
   397dc:	01 00 50 c0 	add_i s0, s1, s0
   397e0:	00 04 00 09 	ashr s0, s0, 1
   397e4:	18 00 60 c0 	sub_i s0, s24, s0
   397e8:	20 00 00 12 	cmpgt_i s1, s0, 0
   397ec:	41 00 00 f4 	bnz s1, 8 <R_InitLightTables+0x94>
   397f0:	1e 70 00 a8 	load_32 s0, 28(sp)
   397f4:	20 7c 00 14 	cmplt_i s1, s0, 31
   397f8:	41 00 00 f4 	bnz s1, 8 <R_InitLightTables+0xa0>
   397fc:	1e 60 00 a8 	load_32 s0, 24(sp)
   39800:	3e 90 00 a8 	load_32 s1, 36(sp)
   39804:	5b 24 00 0b 	shl s2, s27, 9
   39808:	00 20 00 0b 	shl s0, s0, 8
   3980c:	21 00 00 a8 	load_32 s1, (s1)
   39810:	7e 80 00 a8 	load_32 s3, 32(sp)
   39814:	01 00 50 c0 	add_i s0, s1, s0
   39818:	43 00 51 c0 	add_i s2, s3, s2
   3981c:	7a 08 00 0b 	shl s3, s26, 2
   39820:	39 00 02 18 	cmplt_u s1, s25, 128
   39824:	42 80 51 c0 	add_i s2, s2, s3
   39828:	02 00 00 88 	store_32 s0, (s2)
   3982c:	40 83 fc c0 	move s26, s25
   39830:	a1 fc ff f5 	bnz s1, -108 <R_InitLightTables+0x64>
   39834:	7b 07 00 05 	add_i s27, s27, 1
   39838:	1b 40 00 18 	cmplt_u s0, s27, 16
   3983c:	a0 fb ff f5 	bnz s0, -140 <R_InitLightTables+0x50>
   39840:	fe b3 00 a8 	load_32 ra, 44(sp)
   39844:	7e c3 00 a8 	load_32 s27, 48(sp)
   39848:	5e d3 00 a8 	load_32 s26, 52(sp)
   3984c:	3e e3 00 a8 	load_32 s25, 56(sp)
   39850:	1e f3 00 a8 	load_32 s24, 60(sp)
   39854:	de 03 01 05 	add_i sp, sp, 64
   39858:	1f 00 00 f0 	ret

000000000003985c R_SetViewSize:
   3985c:	5f 04 00 4f 	movehi s2, 63
   39860:	7f 04 00 4f 	movehi s3, 63
   39864:	9f 04 00 4f 	movehi s4, 63
   39868:	42 70 04 00 	or s2, s2, 284
   3986c:	63 50 04 00 	or s3, s3, 276
   39870:	84 60 04 00 	or s4, s4, 280
   39874:	a0 04 00 0f 	move s5, 1
   39878:	a2 00 00 88 	store_32 s5, (s2)
   3987c:	03 00 00 88 	store_32 s0, (s3)
   39880:	24 00 00 88 	store_32 s1, (s4)
   39884:	1f 00 00 f0 	ret

0000000000039888 R_ExecuteSetViewSize:
   39888:	de 03 ff 05 	add_i sp, sp, -64
   3988c:	1e f3 00 88 	store_32 s24, 60(sp)
   39890:	3e e3 00 88 	store_32 s25, 56(sp)
   39894:	5e d3 00 88 	store_32 s26, 52(sp)
   39898:	7e c3 00 88 	store_32 s27, 48(sp)
   3989c:	fe b3 00 88 	store_32 ra, 44(sp)
   398a0:	1f 04 00 4f 	movehi s0, 63
   398a4:	3f 04 00 4f 	movehi s1, 63
   398a8:	40 00 00 0f 	move s2, 0
   398ac:	5e 80 00 88 	store_32 s2, 32(sp)
   398b0:	00 70 04 00 	or s0, s0, 284
   398b4:	21 50 04 00 	or s1, s1, 276
   398b8:	40 00 00 88 	store_32 s2, (s0)
   398bc:	01 00 00 a8 	load_32 s0, (s1)
   398c0:	20 2c 00 11 	cmpne_i s1, s0, 11
   398c4:	e1 00 00 f4 	bnz s1, 28 <R_ExecuteSetViewSize+0x58>
   398c8:	1e 04 00 4f 	movehi s0, 62
   398cc:	20 f0 0f 00 	or s1, s0, 1020
   398d0:	00 00 05 0f 	move s0, 320
   398d4:	01 00 00 88 	store_32 s0, (s1)
   398d8:	20 20 03 0f 	move s1, 200
   398dc:	0d 00 00 f6 	b 52 <R_ExecuteSetViewSize+0x88>
   398e0:	33 64 66 4f 	movehi s1, 209715
   398e4:	40 a0 02 07 	mull_i s2, s0, 168
   398e8:	00 14 00 0b 	shl s0, s0, 5
   398ec:	21 9c 19 00 	or s1, s1, 1639
   398f0:	22 80 f0 c1 	mulh_i s1, s2, s1
   398f4:	5e 04 00 4f 	movehi s2, 62
   398f8:	61 08 00 09 	ashr s3, s1, 2
   398fc:	21 7c 00 0a 	shr s1, s1, 31
   39900:	42 f0 0f 00 	or s2, s2, 1020
   39904:	23 80 50 c0 	add_i s1, s3, s1
   39908:	02 00 00 88 	store_32 s0, (s2)
   3990c:	21 e0 ff 01 	and s1, s1, -8
   39910:	5e 04 00 4f 	movehi s2, 62
   39914:	7f 04 00 4f 	movehi s3, 63
   39918:	a1 7c 00 0a 	shr s5, s1, 31
   3991c:	22 13 1c 00 	or s25, s2, 1796
   39920:	43 60 04 00 	or s2, s3, 280
   39924:	7e 04 00 4f 	movehi s3, 62
   39928:	39 00 00 88 	store_32 s1, (s25)
   3992c:	a1 80 52 c0 	add_i s5, s1, s5
   39930:	42 00 00 a8 	load_32 s2, (s2)
   39934:	c0 7c 00 0a 	shr s6, s0, 31
   39938:	03 d1 50 00 	or s8, s3, 5172
   3993c:	7e 04 00 4f 	movehi s3, 62
   39940:	a5 04 00 09 	ashr s5, s5, 1
   39944:	48 00 00 88 	store_32 s2, (s8)
   39948:	80 00 91 c0 	ashr s4, s0, s2
   3994c:	03 33 1c 00 	or s24, s3, 1804
   39950:	7e 04 00 4f 	movehi s3, 62
   39954:	98 00 00 88 	store_32 s4, (s24)
   39958:	84 00 53 c0 	add_i s4, s4, s6
   3995c:	63 90 50 00 	or s3, s3, 5156
   39960:	de 04 00 4f 	movehi s6, 62
   39964:	84 04 00 09 	ashr s4, s4, 1
   39968:	a3 00 00 88 	store_32 s5, (s3)
   3996c:	7e 04 00 4f 	movehi s3, 62
   39970:	a5 40 00 0b 	shl s5, s5, 16
   39974:	63 70 50 00 	or s3, s3, 5148
   39978:	83 00 00 88 	store_32 s4, (s3)
   3997c:	66 80 50 00 	or s3, s6, 5152
   39980:	de 04 00 4f 	movehi s6, 62
   39984:	84 40 00 0b 	shl s4, s4, 16
   39988:	83 00 00 88 	store_32 s4, (s3)
   3998c:	7e 04 00 4f 	movehi s3, 62
   39990:	c6 a0 50 00 	or s6, s6, 5160
   39994:	e3 40 51 00 	or s7, s3, 5200
   39998:	62 00 00 10 	cmpeq_i s3, s2, 0
   3999c:	a6 00 00 88 	store_32 s5, (s6)
   399a0:	87 00 00 88 	store_32 s4, (s7)
   399a4:	23 01 00 f4 	bnz s3, 36 <R_ExecuteSetViewSize+0x140>
   399a8:	5c 00 00 4f 	movehi s2, 28
   399ac:	42 b0 02 00 	or s2, s2, 172
   399b0:	1e 51 00 88 	store_32 s8, 20(sp)
   399b4:	43 00 00 f4 	bnz s3, 8 <R_ExecuteSetViewSize+0x134>
   399b8:	08 00 00 f6 	b 32 <R_ExecuteSetViewSize+0x150>
   399bc:	7c 00 00 4f 	movehi s3, 28
   399c0:	63 30 16 00 	or s3, s3, 1420
   399c4:	07 00 00 f6 	b 28 <R_ExecuteSetViewSize+0x158>
   399c8:	5b 00 00 4f 	movehi s2, 27
   399cc:	42 c0 7d 00 	or s2, s2, 8048
   399d0:	1e 51 00 88 	store_32 s8, 20(sp)
   399d4:	43 ff ff f5 	bnz s3, -24 <R_ExecuteSetViewSize+0x134>
   399d8:	7c 00 00 4f 	movehi s3, 28
   399dc:	63 70 1b 00 	or s3, s3, 1756
   399e0:	9e 04 00 4f 	movehi s4, 62
   399e4:	be 04 00 4f 	movehi s5, 62
   399e8:	dc 00 00 4f 	movehi s6, 28
   399ec:	84 60 50 00 	or s4, s4, 5144
   399f0:	a5 c0 50 00 	or s5, s5, 5168
   399f4:	44 00 00 88 	store_32 s2, (s4)
   399f8:	9e 04 00 4f 	movehi s4, 62
   399fc:	45 00 00 88 	store_32 s2, (s5)
   39a00:	46 20 08 00 	or s2, s6, 520
   39a04:	bc 00 00 4f 	movehi s5, 28
   39a08:	84 10 51 00 	or s4, s4, 5188
   39a0c:	a5 b0 0d 00 	or s5, s5, 876
   39a10:	44 00 00 88 	store_32 s2, (s4)
   39a14:	5f 04 00 4f 	movehi s2, 63
   39a18:	9f 04 00 4f 	movehi s4, 63
   39a1c:	42 a0 04 00 	or s2, s2, 296
   39a20:	84 80 04 00 	or s4, s4, 288
   39a24:	a2 00 00 88 	store_32 s5, (s2)
   39a28:	64 00 00 88 	store_32 s3, (s4)
   39a2c:	8b fb ff f9 	call -4564 <R_InitBuffer>
   39a30:	c6 fe ff f9 	call -1256 <R_InitTextureMapping>
   39a34:	1e 63 00 88 	store_32 s24, 24(sp)
   39a38:	13 64 66 4f 	movehi s0, 209715
   39a3c:	18 03 00 a8 	load_32 s24, (s24)
   39a40:	00 9c 19 00 	or s0, s0, 1639
   39a44:	38 40 00 0b 	shl s1, s24, 16
   39a48:	01 00 f0 c1 	mulh_i s0, s1, s0
   39a4c:	32 08 00 4f 	movehi s1, 82
   39a50:	40 1c 00 09 	ashr s2, s0, 7
   39a54:	21 f0 56 00 	or s1, s1, 5564
   39a58:	00 7c 00 0a 	shr s0, s0, 31
   39a5c:	02 00 50 c0 	add_i s0, s2, s0
   39a60:	01 00 00 88 	store_32 s0, (s1)
   39a64:	00 40 01 4f 	movehi s0, 2560
   39a68:	20 00 fc c0 	move s1, s24
   39a6c:	fb 6b 00 f8 	call 110572 <__divsi3>
   39a70:	32 08 00 4f 	movehi s1, 82
   39a74:	21 e0 56 00 	or s1, s1, 5560
   39a78:	01 00 00 88 	store_32 s0, (s1)
   39a7c:	38 04 00 14 	cmplt_i s1, s24, 1
   39a80:	19 00 00 a8 	load_32 s0, (s25)
   39a84:	41 01 00 f4 	bnz s1, 40 <R_ExecuteSetViewSize+0x224>
   39a88:	52 08 00 4f 	movehi s2, 82
   39a8c:	20 00 00 0f 	move s1, 0
   39a90:	42 00 57 00 	or s2, s2, 5568
   39a94:	61 04 00 0b 	shl s3, s1, 1
   39a98:	21 04 00 05 	add_i s1, s1, 1
   39a9c:	62 80 51 c0 	add_i s3, s2, s3
   39aa0:	81 00 4c c1 	cmplt_i s4, s1, s24
   39aa4:	03 00 00 86 	store_16 s0, (s3)
   39aa8:	64 ff ff f5 	bnz s4, -20 <R_ExecuteSetViewSize+0x20c>
   39aac:	20 04 00 14 	cmplt_i s1, s0, 1
   39ab0:	61 05 00 f4 	bnz s1, 172 <R_ExecuteSetViewSize+0x2d4>
   39ab4:	32 08 00 4f 	movehi s1, 82
   39ab8:	44 00 00 4f 	movehi s2, 4
   39abc:	5e a0 00 88 	store_32 s2, 40(sp)
   39ac0:	58 fc ff 4f 	movehi s2, 524280
   39ac4:	5e 90 00 88 	store_32 s2, 36(sp)
   39ac8:	21 e0 3c 00 	or s1, s1, 3896
   39acc:	3e 70 00 88 	store_32 s1, 28(sp)
   39ad0:	7e 53 00 a8 	load_32 s27, 20(sp)
   39ad4:	40 03 00 0f 	move s26, 0
   39ad8:	5e 60 00 a8 	load_32 s2, 24(sp)
   39adc:	20 7c 00 0a 	shr s1, s0, 31
   39ae0:	00 80 50 c0 	add_i s0, s0, s1
   39ae4:	3b 00 00 a8 	load_32 s1, (s27)
   39ae8:	7e a0 00 a8 	load_32 s3, 40(sp)
   39aec:	00 04 00 0a 	shr s0, s0, 1
   39af0:	1a 00 60 c0 	sub_i s0, s26, s0
   39af4:	38 80 b0 c0 	shl s1, s24, s1
   39af8:	00 03 f1 c0 	move s24, s2
   39afc:	00 40 00 0b 	shl s0, s0, 16
   39b00:	41 7c 00 0a 	shr s2, s1, 31
   39b04:	21 00 51 c0 	add_i s1, s1, s2
   39b08:	00 80 01 c0 	or s0, s0, s3
   39b0c:	61 3c 00 0b 	shl s3, s1, 15
   39b10:	40 7c 00 09 	ashr s2, s0, 31
   39b14:	00 00 51 c0 	add_i s0, s0, s2
   39b18:	20 00 31 c0 	xor s1, s0, s2
   39b1c:	1e 90 00 a8 	load_32 s0, 36(sp)
   39b20:	03 00 10 c0 	and s0, s3, s0
   39b24:	0a 89 ff f9 	call -121816 <FixedDiv>
   39b28:	40 00 fc c0 	move s2, s24
   39b2c:	7e 70 00 a8 	load_32 s3, 28(sp)
   39b30:	3a 08 00 0b 	shl s1, s26, 2
   39b34:	5a 07 00 05 	add_i s26, s26, 1
   39b38:	23 80 50 c0 	add_i s1, s3, s1
   39b3c:	01 00 00 88 	store_32 s0, (s1)
   39b40:	19 00 00 a8 	load_32 s0, (s25)
   39b44:	02 03 00 a8 	load_32 s24, (s2)
   39b48:	3a 00 40 c1 	cmplt_i s1, s26, s0
   39b4c:	81 fc ff f5 	bnz s1, -112 <R_ExecuteSetViewSize+0x254>
   39b50:	18 04 00 14 	cmplt_i s0, s24, 1
   39b54:	a0 05 00 f4 	bnz s0, 180 <R_ExecuteSetViewSize+0x380>
   39b58:	05 00 00 f6 	b 20 <R_ExecuteSetViewSize+0x2e4>
   39b5c:	7e 53 00 a8 	load_32 s27, 20(sp)
   39b60:	5e 60 00 a8 	load_32 s2, 24(sp)
   39b64:	18 04 00 14 	cmplt_i s0, s24, 1
   39b68:	00 05 00 f4 	bnz s0, 160 <R_ExecuteSetViewSize+0x380>
   39b6c:	14 04 00 4f 	movehi s0, 52
   39b70:	21 08 00 4f 	movehi s1, 65
   39b74:	40 03 00 0f 	move s26, 0
   39b78:	00 40 19 00 	or s0, s0, 1616
   39b7c:	1e a0 00 88 	store_32 s0, 40(sp)
   39b80:	03 00 00 4f 	movehi s0, 3
   39b84:	21 30 05 00 	or s1, s1, 332
   39b88:	3e 90 00 88 	store_32 s1, 36(sp)
   39b8c:	28 03 00 4f 	movehi s25, 8
   39b90:	22 08 00 4f 	movehi s1, 66
   39b94:	00 f0 7f 00 	or s0, s0, 8188
   39b98:	1e 70 00 88 	store_32 s0, 28(sp)
   39b9c:	01 80 55 00 	or s0, s1, 5472
   39ba0:	1e 60 00 88 	store_32 s0, 24(sp)
   39ba4:	1e 90 00 a8 	load_32 s0, 36(sp)
   39ba8:	1a 0b 00 0b 	shl s24, s26, 2
   39bac:	3e a0 00 a8 	load_32 s1, 40(sp)
   39bb0:	00 00 5c c0 	add_i s0, s0, s24
   39bb4:	21 00 00 a8 	load_32 s1, (s1)
   39bb8:	00 00 00 a8 	load_32 s0, (s0)
   39bbc:	7e 70 00 a8 	load_32 s3, 28(sp)
   39bc0:	00 44 00 0a 	shr s0, s0, 17
   39bc4:	00 80 11 c0 	and s0, s0, s3
   39bc8:	01 00 50 c0 	add_i s0, s1, s0
   39bcc:	00 00 00 a8 	load_32 s0, (s0)
   39bd0:	20 7c 00 09 	ashr s1, s0, 31
   39bd4:	00 80 50 c0 	add_i s0, s0, s1
   39bd8:	20 80 30 c0 	xor s1, s0, s1
   39bdc:	00 80 fc c0 	move s0, s25
   39be0:	60 03 f1 c0 	move s27, s2
   39be4:	da 88 ff f9 	call -122008 <FixedDiv>
   39be8:	40 80 fd c0 	move s2, s27
   39bec:	3e 60 00 a8 	load_32 s1, 24(sp)
   39bf0:	5a 07 00 05 	add_i s26, s26, 1
   39bf4:	21 00 5c c0 	add_i s1, s1, s24
   39bf8:	01 00 00 88 	store_32 s0, (s1)
   39bfc:	02 03 00 a8 	load_32 s24, (s2)
   39c00:	1a 00 4c c1 	cmplt_i s0, s26, s24
   39c04:	00 fd ff f5 	bnz s0, -96 <R_ExecuteSetViewSize+0x31c>
   39c08:	3e 50 00 a8 	load_32 s1, 20(sp)
   39c0c:	1d 04 00 4f 	movehi s0, 61
   39c10:	00 20 47 00 	or s0, s0, 4552
   39c14:	21 00 00 a8 	load_32 s1, (s1)
   39c18:	38 80 b0 c0 	shl s1, s24, s1
   39c1c:	3e a0 00 88 	store_32 s1, 40(sp)
   39c20:	00 00 00 a8 	load_32 s0, (s0)
   39c24:	20 00 0f 0f 	move s1, 960
   39c28:	1e 90 00 88 	store_32 s0, 36(sp)
   39c2c:	1e 04 00 4f 	movehi s0, 62
   39c30:	3e 60 00 88 	store_32 s1, 24(sp)
   39c34:	20 7c 00 0f 	move s1, 31
   39c38:	3e 70 00 88 	store_32 s1, 28(sp)
   39c3c:	7e 83 00 a8 	load_32 s27, 32(sp)
   39c40:	40 53 51 00 	or s26, s0, 5204
   39c44:	3e 60 00 a8 	load_32 s1, 24(sp)
   39c48:	1b 18 00 0b 	shl s0, s27, 6
   39c4c:	1e 83 00 a8 	load_32 s24, 32(sp)
   39c50:	01 00 60 c0 	sub_i s0, s1, s0
   39c54:	20 13 00 0a 	shr s25, s0, 4
   39c58:	3e a0 00 a8 	load_32 s1, 40(sp)
   39c5c:	18 00 05 07 	mull_i s0, s24, 320
   39c60:	7e 6b 00 f8 	call 110072 <__divsi3>
   39c64:	20 7c 00 0a 	shr s1, s0, 31
   39c68:	00 80 50 c0 	add_i s0, s0, s1
   39c6c:	00 04 00 09 	ashr s0, s0, 1
   39c70:	19 00 60 c0 	sub_i s0, s25, s0
   39c74:	20 00 00 12 	cmpgt_i s1, s0, 0
   39c78:	41 00 00 f4 	bnz s1, 8 <R_ExecuteSetViewSize+0x3f8>
   39c7c:	1e 80 00 a8 	load_32 s0, 32(sp)
   39c80:	20 7c 00 14 	cmplt_i s1, s0, 31
   39c84:	41 00 00 f4 	bnz s1, 8 <R_ExecuteSetViewSize+0x404>
   39c88:	1e 70 00 a8 	load_32 s0, 28(sp)
   39c8c:	3b 00 03 07 	mull_i s1, s27, 192
   39c90:	3a 80 50 c0 	add_i s1, s26, s1
   39c94:	58 08 00 0b 	shl s2, s24, 2
   39c98:	18 07 00 05 	add_i s24, s24, 1
   39c9c:	21 00 51 c0 	add_i s1, s1, s2
   39ca0:	5e 90 00 a8 	load_32 s2, 36(sp)
   39ca4:	00 20 00 0b 	shl s0, s0, 8
   39ca8:	02 00 50 c0 	add_i s0, s2, s0
   39cac:	01 00 00 88 	store_32 s0, (s1)
   39cb0:	58 c0 00 18 	cmplt_u s2, s24, 48
   39cb4:	22 fd ff f5 	bnz s2, -92 <R_ExecuteSetViewSize+0x3d0>
   39cb8:	7b 07 00 05 	add_i s27, s27, 1
   39cbc:	1b 40 00 18 	cmplt_u s0, s27, 16
   39cc0:	20 fc ff f5 	bnz s0, -124 <R_ExecuteSetViewSize+0x3bc>
   39cc4:	fe b3 00 a8 	load_32 ra, 44(sp)
   39cc8:	7e c3 00 a8 	load_32 s27, 48(sp)
   39ccc:	5e d3 00 a8 	load_32 s26, 52(sp)
   39cd0:	3e e3 00 a8 	load_32 s25, 56(sp)
   39cd4:	1e f3 00 a8 	load_32 s24, 60(sp)
   39cd8:	de 03 01 05 	add_i sp, sp, 64
   39cdc:	1f 00 00 f0 	ret

0000000000039ce0 R_Init:
   39ce0:	de 03 fe 05 	add_i sp, sp, -128
   39ce4:	1e f3 01 88 	store_32 s24, 124(sp)
   39ce8:	3e e3 01 88 	store_32 s25, 120(sp)
   39cec:	5e d3 01 88 	store_32 s26, 116(sp)
   39cf0:	7e c3 01 88 	store_32 s27, 112(sp)
   39cf4:	fe b3 01 88 	store_32 ra, 108(sp)
   39cf8:	37 f6 ff f9 	call -10020 <R_InitData>
   39cfc:	00 00 00 4f 	movehi s0, 0
   39d00:	00 74 21 00 	or s0, s0, 2141
   39d04:	1e 00 00 88 	store_32 s0, (sp)
   39d08:	33 60 00 f8 	call 98508 <printf>
   39d0c:	00 00 00 4f 	movehi s0, 0
   39d10:	00 5c 2f 00 	or s0, s0, 3031
   39d14:	1e 00 00 88 	store_32 s0, (sp)
   39d18:	2f 60 00 f8 	call 98492 <printf>
   39d1c:	00 00 00 4f 	movehi s0, 0
   39d20:	00 a4 21 00 	or s0, s0, 2153
   39d24:	1e 00 00 88 	store_32 s0, (sp)
   39d28:	2b 60 00 f8 	call 98476 <printf>
   39d2c:	1b 04 00 4f 	movehi s0, 59
   39d30:	3b 04 00 4f 	movehi s1, 59
   39d34:	5f 04 00 4f 	movehi s2, 63
   39d38:	7f 04 00 4f 	movehi s3, 63
   39d3c:	9f 04 00 4f 	movehi s4, 63
   39d40:	00 a0 24 00 	or s0, s0, 2344
   39d44:	21 70 1c 00 	or s1, s1, 1820
   39d48:	42 70 04 00 	or s2, s2, 284
   39d4c:	63 50 04 00 	or s3, s3, 276
   39d50:	00 00 00 a8 	load_32 s0, (s0)
   39d54:	84 60 04 00 	or s4, s4, 280
   39d58:	21 00 00 a8 	load_32 s1, (s1)
   39d5c:	a0 04 00 0f 	move s5, 1
   39d60:	a2 00 00 88 	store_32 s5, (s2)
   39d64:	03 00 00 88 	store_32 s0, (s3)
   39d68:	24 00 00 88 	store_32 s1, (s4)
   39d6c:	43 01 00 f8 	call 1292 <R_InitPlanes>
   39d70:	00 00 00 4f 	movehi s0, 0
   39d74:	00 e8 07 00 	or s0, s0, 506
   39d78:	1e 00 00 88 	store_32 s0, (sp)
   39d7c:	16 60 00 f8 	call 98392 <printf>
   39d80:	00 00 0f 0f 	move s0, 960
   39d84:	1e 50 01 88 	store_32 s0, 84(sp)
   39d88:	00 a0 00 4f 	movehi s0, 1280
   39d8c:	1e a0 01 88 	store_32 s0, 104(sp)
   39d90:	1d 04 00 4f 	movehi s0, 61
   39d94:	60 03 00 0f 	move s27, 0
   39d98:	21 08 00 4f 	movehi s1, 65
   39d9c:	00 20 47 00 	or s0, s0, 4552
   39da0:	40 7c 00 0f 	move s2, 31
   39da4:	5e 60 01 88 	store_32 s2, 88(sp)
   39da8:	1e 90 01 88 	store_32 s0, 100(sp)
   39dac:	01 40 19 00 	or s0, s1, 1616
   39db0:	1e 80 01 88 	store_32 s0, 96(sp)
   39db4:	7e 73 01 88 	store_32 s27, 92(sp)
   39db8:	3e 50 01 a8 	load_32 s1, 84(sp)
   39dbc:	1b 18 00 0b 	shl s0, s27, 6
   39dc0:	5e 73 01 a8 	load_32 s26, 92(sp)
   39dc4:	01 00 60 c0 	sub_i s0, s1, s0
   39dc8:	00 13 00 0a 	shr s24, s0, 4
   39dcc:	3a 07 00 05 	add_i s25, s26, 1
   39dd0:	1e a0 01 a8 	load_32 s0, 104(sp)
   39dd4:	39 50 00 0b 	shl s1, s25, 20
   39dd8:	5d 88 ff f9 	call -122508 <FixedDiv>
   39ddc:	20 30 00 09 	ashr s1, s0, 12
   39de0:	00 7c 00 0a 	shr s0, s0, 31
   39de4:	01 00 50 c0 	add_i s0, s1, s0
   39de8:	00 04 00 09 	ashr s0, s0, 1
   39dec:	18 00 60 c0 	sub_i s0, s24, s0
   39df0:	20 00 00 12 	cmpgt_i s1, s0, 0
   39df4:	41 00 00 f4 	bnz s1, 8 <R_Init+0x11c>
   39df8:	1e 70 01 a8 	load_32 s0, 92(sp)
   39dfc:	20 7c 00 14 	cmplt_i s1, s0, 31
   39e00:	41 00 00 f4 	bnz s1, 8 <R_Init+0x128>
   39e04:	1e 60 01 a8 	load_32 s0, 88(sp)
   39e08:	3e 90 01 a8 	load_32 s1, 100(sp)
   39e0c:	5b 24 00 0b 	shl s2, s27, 9
   39e10:	00 20 00 0b 	shl s0, s0, 8
   39e14:	21 00 00 a8 	load_32 s1, (s1)
   39e18:	7e 80 01 a8 	load_32 s3, 96(sp)
   39e1c:	01 00 50 c0 	add_i s0, s1, s0
   39e20:	43 00 51 c0 	add_i s2, s3, s2
   39e24:	7a 08 00 0b 	shl s3, s26, 2
   39e28:	39 00 02 18 	cmplt_u s1, s25, 128
   39e2c:	42 80 51 c0 	add_i s2, s2, s3
   39e30:	02 00 00 88 	store_32 s0, (s2)
   39e34:	40 83 fc c0 	move s26, s25
   39e38:	a1 fc ff f5 	bnz s1, -108 <R_Init+0xec>
   39e3c:	7b 07 00 05 	add_i s27, s27, 1
   39e40:	1b 40 00 18 	cmplt_u s0, s27, 16
   39e44:	a0 fb ff f5 	bnz s0, -140 <R_Init+0xd8>
   39e48:	00 00 00 4f 	movehi s0, 0
   39e4c:	00 20 08 00 	or s0, s0, 520
   39e50:	1e 00 00 88 	store_32 s0, (sp)
   39e54:	e0 5f 00 f8 	call 98176 <printf>
   39e58:	d1 09 00 f8 	call 10052 <R_InitSkyMap>
   39e5c:	01 00 00 4f 	movehi s0, 1
   39e60:	00 ec 0f 00 	or s0, s0, 1019
   39e64:	1e 00 00 88 	store_32 s0, (sp)
   39e68:	db 5f 00 f8 	call 98156 <printf>
   39e6c:	93 f9 ff f9 	call -6580 <R_InitTranslationTables>
   39e70:	01 00 00 4f 	movehi s0, 1
   39e74:	00 14 36 00 	or s0, s0, 3461
   39e78:	1e 00 00 88 	store_32 s0, (sp)
   39e7c:	d6 5f 00 f8 	call 98136 <printf>
   39e80:	1e 04 00 4f 	movehi s0, 62
   39e84:	20 00 00 0f 	move s1, 0
   39e88:	00 00 51 00 	or s0, s0, 5184
   39e8c:	20 00 00 88 	store_32 s1, (s0)
   39e90:	fe b3 01 a8 	load_32 ra, 108(sp)
   39e94:	7e c3 01 a8 	load_32 s27, 112(sp)
   39e98:	5e d3 01 a8 	load_32 s26, 116(sp)
   39e9c:	3e e3 01 a8 	load_32 s25, 120(sp)
   39ea0:	1e f3 01 a8 	load_32 s24, 124(sp)
   39ea4:	de 03 02 05 	add_i sp, sp, 128
   39ea8:	1f 00 00 f0 	ret

0000000000039eac R_PointInSubsector:
   39eac:	de 03 ff 05 	add_i sp, sp, -64
   39eb0:	1e f3 00 88 	store_32 s24, 60(sp)
   39eb4:	3e e3 00 88 	store_32 s25, 56(sp)
   39eb8:	5e d3 00 88 	store_32 s26, 52(sp)
   39ebc:	7e c3 00 88 	store_32 s27, 48(sp)
   39ec0:	fe b3 00 88 	store_32 ra, 44(sp)
   39ec4:	5b 04 00 4f 	movehi s2, 59
   39ec8:	42 70 4a 00 	or s2, s2, 4764
   39ecc:	42 00 00 a8 	load_32 s2, (s2)
   39ed0:	a0 80 f0 c0 	move s5, s1
   39ed4:	c0 00 f0 c0 	move s6, s0
   39ed8:	42 00 00 f4 	bnz s2, 8 <R_PointInSubsector+0x34>
   39edc:	47 00 00 f6 	b 284 <R_PointInSubsector+0x14c>
   39ee0:	02 fc ff 05 	add_i s0, s2, -1
   39ee4:	e4 00 00 4f 	movehi s7, 4
   39ee8:	20 80 13 c0 	and s1, s0, s7
   39eec:	41 07 00 f4 	bnz s1, 232 <R_PointInSubsector+0x128>
   39ef0:	3b 04 00 4f 	movehi s1, 59
   39ef4:	be a0 00 88 	store_32 s5, 40(sp)
   39ef8:	de 90 00 88 	store_32 s6, 36(sp)
   39efc:	fe 80 00 88 	store_32 s7, 32(sp)
   39f00:	01 53 4a 00 	or s24, s1, 4756
   39f04:	38 00 00 a8 	load_32 s1, (s24)
   39f08:	00 d0 00 07 	mull_i s0, s0, 52
   39f0c:	21 03 50 c0 	add_i s25, s1, s0
   39f10:	19 20 00 a8 	load_32 s0, 8(s25)
   39f14:	40 00 00 f4 	bnz s0, 8 <R_PointInSubsector+0x70>
   39f18:	1b 00 00 f6 	b 108 <R_PointInSubsector+0xd8>
   39f1c:	59 30 00 a8 	load_32 s2, 12(s25)
   39f20:	42 00 00 f4 	bnz s2, 8 <R_PointInSubsector+0x7c>
   39f24:	1f 00 00 f6 	b 124 <R_PointInSubsector+0xf4>
   39f28:	39 00 00 a8 	load_32 s1, (s25)
   39f2c:	99 10 00 a8 	load_32 s4, 4(s25)
   39f30:	26 80 60 c0 	sub_i s1, s6, s1
   39f34:	45 03 62 c0 	sub_i s26, s5, s4
   39f38:	61 00 31 c0 	xor s3, s1, s2
   39f3c:	03 00 30 c0 	xor s0, s3, s0
   39f40:	00 00 3d c0 	xor s0, s0, s26
   39f44:	00 fc ff 12 	cmpgt_i s0, s0, -1
   39f48:	40 00 00 f4 	bnz s0, 8 <R_PointInSubsector+0xa4>
   39f4c:	1c 00 00 f6 	b 112 <R_PointInSubsector+0x110>
   39f50:	02 40 00 09 	ashr s0, s2, 16
   39f54:	79 23 00 05 	add_i s27, s25, 8
   39f58:	f7 87 ff f9 	call -122916 <FixedMul>
   39f5c:	3b 00 00 a8 	load_32 s1, (s27)
   39f60:	60 03 f0 c0 	move s27, s0
   39f64:	00 00 fd c0 	move s0, s26
   39f68:	21 40 00 09 	ashr s1, s1, 16
   39f6c:	f2 87 ff f9 	call -122936 <FixedMul>
   39f70:	fe 80 00 a8 	load_32 s7, 32(sp)
   39f74:	00 80 3d c1 	cmpge_i s0, s0, s27
   39f78:	de 90 00 a8 	load_32 s6, 36(sp)
   39f7c:	be a0 00 a8 	load_32 s5, 40(sp)
   39f80:	0d 00 00 f6 	b 52 <R_PointInSubsector+0x108>
   39f84:	19 00 00 a8 	load_32 s0, (s25)
   39f88:	20 00 43 c1 	cmplt_i s1, s0, s6
   39f8c:	19 30 00 a8 	load_32 s0, 12(s25)
   39f90:	41 00 00 f4 	bnz s1, 8 <R_PointInSubsector+0xec>
   39f94:	07 00 00 f6 	b 28 <R_PointInSubsector+0x104>
   39f98:	00 7c 00 0a 	shr s0, s0, 31
   39f9c:	09 00 00 f6 	b 36 <R_PointInSubsector+0x114>
   39fa0:	39 10 00 a8 	load_32 s1, 4(s25)
   39fa4:	21 80 42 c1 	cmplt_i s1, s1, s5
   39fa8:	41 00 00 f4 	bnz s1, 8 <R_PointInSubsector+0x104>
   39fac:	fb ff ff f7 	b -20 <R_PointInSubsector+0xec>
   39fb0:	00 00 00 12 	cmpgt_i s0, s0, 0
   39fb4:	00 04 00 01 	and s0, s0, 1
   39fb8:	02 00 00 f6 	b 8 <R_PointInSubsector+0x114>
   39fbc:	03 7c 00 0a 	shr s0, s3, 31
   39fc0:	00 04 00 0b 	shl s0, s0, 1
   39fc4:	19 00 50 c0 	add_i s0, s25, s0
   39fc8:	00 c0 00 a4 	load_u16 s0, 48(s0)
   39fcc:	20 80 13 c0 	and s1, s0, s7
   39fd0:	a1 f9 ff f3 	bz s1, -204 <R_PointInSubsector+0x58>
   39fd4:	3b 04 00 4f 	movehi s1, 59
   39fd8:	5b fc 1f 4f 	movehi s2, 65531
   39fdc:	21 b0 4b 00 	or s1, s1, 4844
   39fe0:	42 fc 7f 00 	or s2, s2, 8191
   39fe4:	00 00 11 c0 	and s0, s0, s2
   39fe8:	21 00 00 a8 	load_32 s1, (s1)
   39fec:	00 0c 00 0b 	shl s0, s0, 3
   39ff0:	01 00 50 c0 	add_i s0, s1, s0
   39ff4:	04 00 00 f6 	b 16 <R_PointInSubsector+0x158>
   39ff8:	1b 04 00 4f 	movehi s0, 59
   39ffc:	00 b0 4b 00 	or s0, s0, 4844
   3a000:	00 00 00 a8 	load_32 s0, (s0)
   3a004:	fe b3 00 a8 	load_32 ra, 44(sp)
   3a008:	7e c3 00 a8 	load_32 s27, 48(sp)
   3a00c:	5e d3 00 a8 	load_32 s26, 52(sp)
   3a010:	3e e3 00 a8 	load_32 s25, 56(sp)
   3a014:	1e f3 00 a8 	load_32 s24, 60(sp)
   3a018:	de 03 01 05 	add_i sp, sp, 64
   3a01c:	1f 00 00 f0 	ret

000000000003a020 R_SetupFrame:
   3a020:	21 08 00 4f 	movehi s1, 65
   3a024:	41 08 00 4f 	movehi s2, 65
   3a028:	81 08 00 4f 	movehi s4, 65
   3a02c:	21 e0 04 00 	or s1, s1, 312
   3a030:	42 00 05 00 	or s2, s2, 320
   3a034:	01 00 00 88 	store_32 s0, (s1)
   3a038:	20 00 00 a8 	load_32 s1, (s0)
   3a03c:	61 30 00 a8 	load_32 s3, 12(s1)
   3a040:	62 00 00 88 	store_32 s3, (s2)
   3a044:	5f 04 00 4f 	movehi s2, 63
   3a048:	64 10 05 00 	or s3, s4, 324
   3a04c:	81 40 00 a8 	load_32 s4, 16(s1)
   3a050:	42 c0 04 00 	or s2, s2, 304
   3a054:	83 00 00 88 	store_32 s4, (s3)
   3a058:	7f 04 00 4f 	movehi s3, 63
   3a05c:	21 80 00 a8 	load_32 s1, 32(s1)
   3a060:	42 00 00 a8 	load_32 s2, (s2)
   3a064:	63 b0 04 00 	or s3, s3, 300
   3a068:	22 80 50 c0 	add_i s1, s2, s1
   3a06c:	23 00 00 88 	store_32 s1, (s3)
   3a070:	5e 04 00 4f 	movehi s2, 62
   3a074:	80 a0 03 a8 	load_32 s4, 232(s0)
   3a078:	61 08 00 4f 	movehi s3, 65
   3a07c:	21 44 00 0a 	shr s1, s1, 17
   3a080:	42 e0 50 00 	or s2, s2, 5176
   3a084:	63 20 05 00 	or s3, s3, 328
   3a088:	82 00 00 88 	store_32 s4, (s2)
   3a08c:	94 04 00 4f 	movehi s4, 52
   3a090:	40 40 00 a8 	load_32 s2, 16(s0)
   3a094:	43 00 00 88 	store_32 s2, (s3)
   3a098:	43 00 00 4f 	movehi s2, 3
   3a09c:	6d 04 00 4f 	movehi s3, 45
   3a0a0:	84 40 19 00 	or s4, s4, 1616
   3a0a4:	42 f0 7f 00 	or s2, s2, 8188
   3a0a8:	21 00 11 c0 	and s1, s1, s2
   3a0ac:	43 90 41 00 	or s2, s3, 4196
   3a0b0:	61 08 00 4f 	movehi s3, 65
   3a0b4:	42 80 50 c0 	add_i s2, s2, s1
   3a0b8:	63 f0 04 00 	or s3, s3, 316
   3a0bc:	42 00 00 a8 	load_32 s2, (s2)
   3a0c0:	43 00 00 88 	store_32 s2, (s3)
   3a0c4:	61 08 00 4f 	movehi s3, 65
   3a0c8:	44 00 00 a8 	load_32 s2, (s4)
   3a0cc:	63 d0 04 00 	or s3, s3, 308
   3a0d0:	22 80 50 c0 	add_i s1, s2, s1
   3a0d4:	5f 04 00 4f 	movehi s2, 63
   3a0d8:	21 00 00 a8 	load_32 s1, (s1)
   3a0dc:	42 90 04 00 	or s2, s2, 292
   3a0e0:	23 00 00 88 	store_32 s1, (s3)
   3a0e4:	20 00 00 0f 	move s1, 0
   3a0e8:	22 00 00 88 	store_32 s1, (s2)
   3a0ec:	00 b0 03 a8 	load_32 s0, 236(s0)
   3a0f0:	e0 07 00 f2 	bz s0, 252 <R_SetupFrame+0x1cc>
   3a0f4:	3d 04 00 4f 	movehi s1, 61
   3a0f8:	00 20 00 0b 	shl s0, s0, 8
   3a0fc:	52 08 00 4f 	movehi s2, 82
   3a100:	21 20 47 00 	or s1, s1, 4552
   3a104:	7f 04 00 4f 	movehi s3, 63
   3a108:	42 20 4b 00 	or s2, s2, 4808
   3a10c:	21 00 00 a8 	load_32 s1, (s1)
   3a110:	63 50 01 00 	or s3, s3, 84
   3a114:	01 00 50 c0 	add_i s0, s1, s0
   3a118:	3e 04 00 4f 	movehi s1, 62
   3a11c:	21 f0 50 00 	or s1, s1, 5180
   3a120:	01 00 00 88 	store_32 s0, (s1)
   3a124:	62 00 00 88 	store_32 s3, (s2)
   3a128:	03 00 00 88 	store_32 s0, (s3)
   3a12c:	03 10 00 88 	store_32 s0, 4(s3)
   3a130:	03 20 00 88 	store_32 s0, 8(s3)
   3a134:	03 30 00 88 	store_32 s0, 12(s3)
   3a138:	03 40 00 88 	store_32 s0, 16(s3)
   3a13c:	03 50 00 88 	store_32 s0, 20(s3)
   3a140:	03 60 00 88 	store_32 s0, 24(s3)
   3a144:	03 70 00 88 	store_32 s0, 28(s3)
   3a148:	03 80 00 88 	store_32 s0, 32(s3)
   3a14c:	03 90 00 88 	store_32 s0, 36(s3)
   3a150:	03 a0 00 88 	store_32 s0, 40(s3)
   3a154:	03 b0 00 88 	store_32 s0, 44(s3)
   3a158:	03 c0 00 88 	store_32 s0, 48(s3)
   3a15c:	03 d0 00 88 	store_32 s0, 52(s3)
   3a160:	03 e0 00 88 	store_32 s0, 56(s3)
   3a164:	03 f0 00 88 	store_32 s0, 60(s3)
   3a168:	03 00 01 88 	store_32 s0, 64(s3)
   3a16c:	03 10 01 88 	store_32 s0, 68(s3)
   3a170:	03 20 01 88 	store_32 s0, 72(s3)
   3a174:	03 30 01 88 	store_32 s0, 76(s3)
   3a178:	03 40 01 88 	store_32 s0, 80(s3)
   3a17c:	03 50 01 88 	store_32 s0, 84(s3)
   3a180:	03 60 01 88 	store_32 s0, 88(s3)
   3a184:	03 70 01 88 	store_32 s0, 92(s3)
   3a188:	03 80 01 88 	store_32 s0, 96(s3)
   3a18c:	03 90 01 88 	store_32 s0, 100(s3)
   3a190:	03 a0 01 88 	store_32 s0, 104(s3)
   3a194:	03 b0 01 88 	store_32 s0, 108(s3)
   3a198:	03 c0 01 88 	store_32 s0, 112(s3)
   3a19c:	03 d0 01 88 	store_32 s0, 116(s3)
   3a1a0:	03 e0 01 88 	store_32 s0, 120(s3)
   3a1a4:	03 f0 01 88 	store_32 s0, 124(s3)
   3a1a8:	03 00 02 88 	store_32 s0, 128(s3)
   3a1ac:	03 10 02 88 	store_32 s0, 132(s3)
   3a1b0:	03 20 02 88 	store_32 s0, 136(s3)
   3a1b4:	03 30 02 88 	store_32 s0, 140(s3)
   3a1b8:	03 40 02 88 	store_32 s0, 144(s3)
   3a1bc:	03 50 02 88 	store_32 s0, 148(s3)
   3a1c0:	03 60 02 88 	store_32 s0, 152(s3)
   3a1c4:	03 70 02 88 	store_32 s0, 156(s3)
   3a1c8:	03 80 02 88 	store_32 s0, 160(s3)
   3a1cc:	03 90 02 88 	store_32 s0, 164(s3)
   3a1d0:	03 a0 02 88 	store_32 s0, 168(s3)
   3a1d4:	03 b0 02 88 	store_32 s0, 172(s3)
   3a1d8:	03 c0 02 88 	store_32 s0, 176(s3)
   3a1dc:	03 d0 02 88 	store_32 s0, 180(s3)
   3a1e0:	03 e0 02 88 	store_32 s0, 184(s3)
   3a1e4:	03 f0 02 88 	store_32 s0, 188(s3)
   3a1e8:	04 00 00 f6 	b 16 <R_SetupFrame+0x1d8>
   3a1ec:	1e 04 00 4f 	movehi s0, 62
   3a1f0:	00 f0 50 00 	or s0, s0, 5180
   3a1f4:	20 00 00 88 	store_32 s1, (s0)
   3a1f8:	1e 04 00 4f 	movehi s0, 62
   3a1fc:	54 04 00 4f 	movehi s2, 52
   3a200:	00 00 51 00 	or s0, s0, 5184
   3a204:	42 30 19 00 	or s2, s2, 1612
   3a208:	20 00 00 a8 	load_32 s1, (s0)
   3a20c:	21 04 00 05 	add_i s1, s1, 1
   3a210:	20 00 00 88 	store_32 s1, (s0)
   3a214:	02 00 00 a8 	load_32 s0, (s2)
   3a218:	00 04 00 05 	add_i s0, s0, 1
   3a21c:	02 00 00 88 	store_32 s0, (s2)
   3a220:	1f 00 00 f0 	ret

000000000003a224 R_RenderPlayerView:
   3a224:	de 03 ff 05 	add_i sp, sp, -64
   3a228:	fe f3 00 88 	store_32 ra, 60(sp)
   3a22c:	7d ff ff f9 	call -524 <R_SetupFrame>
   3a230:	fc ee ff f9 	call -17424 <R_ClearClipSegs>
   3a234:	66 ee ff f9 	call -18024 <R_ClearDrawSegs>
   3a238:	c8 00 00 f8 	call 800 <R_ClearPlanes>
   3a23c:	c9 0a 00 f8 	call 11044 <R_ClearSprites>
   3a240:	0f 63 ff f9 	call -160708 <NetUpdate>
   3a244:	1b 04 00 4f 	movehi s0, 59
   3a248:	00 70 4a 00 	or s0, s0, 4764
   3a24c:	00 00 00 a8 	load_32 s0, (s0)
   3a250:	00 fc ff 05 	add_i s0, s0, -1
   3a254:	7a f0 ff f9 	call -15896 <R_RenderBSPNode>
   3a258:	09 63 ff f9 	call -160732 <NetUpdate>
   3a25c:	11 02 00 f8 	call 2116 <R_DrawPlanes>
   3a260:	07 63 ff f9 	call -160740 <NetUpdate>
   3a264:	90 0f 00 f8 	call 15936 <R_DrawMasked>
   3a268:	05 63 ff f9 	call -160748 <NetUpdate>
   3a26c:	fe f3 00 a8 	load_32 ra, 60(sp)
   3a270:	de 03 01 05 	add_i sp, sp, 64
   3a274:	1f 00 00 f0 	ret

000000000003a278 R_InitPlanes:
   3a278:	1f 00 00 f0 	ret

000000000003a27c R_MapPlane:
   3a27c:	de 03 fe 05 	add_i sp, sp, -128
   3a280:	1e f3 01 88 	store_32 s24, 124(sp)
   3a284:	3e e3 01 88 	store_32 s25, 120(sp)
   3a288:	5e d3 01 88 	store_32 s26, 116(sp)
   3a28c:	7e c3 01 88 	store_32 s27, 112(sp)
   3a290:	fe b3 01 88 	store_32 ra, 108(sp)
   3a294:	7e 04 00 4f 	movehi s3, 62
   3a298:	9e 04 00 4f 	movehi s4, 62
   3a29c:	63 30 1c 00 	or s3, s3, 1804
   3a2a0:	84 10 1c 00 	or s4, s4, 1796
   3a2a4:	63 00 00 a8 	load_32 s3, (s3)
   3a2a8:	84 00 00 a8 	load_32 s4, (s4)
   3a2ac:	40 03 f0 c0 	move s26, s0
   3a2b0:	00 03 f1 c0 	move s24, s2
   3a2b4:	60 83 f0 c0 	move s27, s1
   3a2b8:	04 00 8d c1 	cmplt_u s0, s4, s26
   3a2bc:	e0 00 00 f4 	bnz s0, 28 <R_MapPlane+0x5c>
   3a2c0:	1b 00 00 14 	cmplt_i s0, s27, 0
   3a2c4:	a0 00 00 f4 	bnz s0, 20 <R_MapPlane+0x5c>
   3a2c8:	18 80 4d c1 	cmplt_i s0, s24, s27
   3a2cc:	60 00 00 f4 	bnz s0, 12 <R_MapPlane+0x5c>
   3a2d0:	03 00 2c c1 	cmpgt_i s0, s3, s24
   3a2d4:	00 01 00 f4 	bnz s0, 32 <R_MapPlane+0x78>
   3a2d8:	01 00 00 4f 	movehi s0, 1
   3a2dc:	5e 33 00 88 	store_32 s26, 12(sp)
   3a2e0:	1e 23 00 88 	store_32 s24, 8(sp)
   3a2e4:	7e 13 00 88 	store_32 s27, 4(sp)
   3a2e8:	00 30 78 00 	or s0, s0, 7692
   3a2ec:	1e 00 00 88 	store_32 s0, (sp)
   3a2f0:	85 4f ff f9 	call -180716 <I_Error>
   3a2f4:	02 08 00 4f 	movehi s0, 66
   3a2f8:	1e a3 01 88 	store_32 s24, 104(sp)
   3a2fc:	27 08 00 4f 	movehi s1, 71
   3a300:	1a 0b 00 0b 	shl s24, s26, 2
   3a304:	00 e0 25 00 	or s0, s0, 2424
   3a308:	41 c0 73 00 	or s2, s1, 7408
   3a30c:	20 00 5c c0 	add_i s1, s0, s24
   3a310:	02 00 00 a8 	load_32 s0, (s2)
   3a314:	41 00 00 a8 	load_32 s2, (s1)
   3a318:	5e 93 01 88 	store_32 s26, 100(sp)
   3a31c:	40 00 01 c1 	cmpeq_i s2, s0, s2
   3a320:	42 00 00 f4 	bnz s2, 8 <R_MapPlane+0xac>
   3a324:	11 00 00 f6 	b 68 <R_MapPlane+0xec>
   3a328:	02 08 00 4f 	movehi s0, 66
   3a32c:	22 08 00 4f 	movehi s1, 66
   3a330:	42 08 00 4f 	movehi s2, 66
   3a334:	00 60 19 00 	or s0, s0, 1624
   3a338:	21 60 32 00 	or s1, s1, 3224
   3a33c:	7e 04 00 4f 	movehi s3, 62
   3a340:	42 e0 3e 00 	or s2, s2, 4024
   3a344:	00 00 5c c0 	add_i s0, s0, s24
   3a348:	21 00 5c c0 	add_i s1, s1, s24
   3a34c:	63 a0 0f 00 	or s3, s3, 1000
   3a350:	42 00 5c c0 	add_i s2, s2, s24
   3a354:	40 03 00 a8 	load_32 s26, (s0)
   3a358:	01 00 00 a8 	load_32 s0, (s1)
   3a35c:	03 00 00 88 	store_32 s0, (s3)
   3a360:	02 00 00 a8 	load_32 s0, (s2)
   3a364:	20 00 00 f6 	b 128 <R_MapPlane+0x168>
   3a368:	52 08 00 4f 	movehi s2, 82
   3a36c:	01 00 00 88 	store_32 s0, (s1)
   3a370:	42 e0 3c 00 	or s2, s2, 3896
   3a374:	42 00 5c c0 	add_i s2, s2, s24
   3a378:	22 00 00 a8 	load_32 s1, (s2)
   3a37c:	ee 86 ff f9 	call -123976 <FixedMul>
   3a380:	22 08 00 4f 	movehi s1, 66
   3a384:	42 08 00 4f 	movehi s2, 66
   3a388:	40 03 f0 c0 	move s26, s0
   3a38c:	21 60 19 00 	or s1, s1, 1624
   3a390:	42 40 19 00 	or s2, s2, 1616
   3a394:	21 00 5c c0 	add_i s1, s1, s24
   3a398:	41 03 00 88 	store_32 s26, (s1)
   3a39c:	22 00 00 a8 	load_32 s1, (s2)
   3a3a0:	e5 86 ff f9 	call -124012 <FixedMul>
   3a3a4:	22 08 00 4f 	movehi s1, 66
   3a3a8:	5e 04 00 4f 	movehi s2, 62
   3a3ac:	62 08 00 4f 	movehi s3, 66
   3a3b0:	21 60 32 00 	or s1, s1, 3224
   3a3b4:	42 a0 0f 00 	or s2, s2, 1000
   3a3b8:	63 50 19 00 	or s3, s3, 1620
   3a3bc:	21 00 5c c0 	add_i s1, s1, s24
   3a3c0:	01 00 00 88 	store_32 s0, (s1)
   3a3c4:	02 00 00 88 	store_32 s0, (s2)
   3a3c8:	23 00 00 a8 	load_32 s1, (s3)
   3a3cc:	00 00 fd c0 	move s0, s26
   3a3d0:	d9 86 ff f9 	call -124060 <FixedMul>
   3a3d4:	22 08 00 4f 	movehi s1, 66
   3a3d8:	21 e0 3e 00 	or s1, s1, 4024
   3a3dc:	21 00 5c c0 	add_i s1, s1, s24
   3a3e0:	01 00 00 88 	store_32 s0, (s1)
   3a3e4:	22 08 00 4f 	movehi s1, 66
   3a3e8:	5e 04 00 4f 	movehi s2, 62
   3a3ec:	1b 0b 00 0b 	shl s24, s27, 2
   3a3f0:	21 80 55 00 	or s1, s1, 5472
   3a3f4:	42 d0 0f 00 	or s2, s2, 1012
   3a3f8:	21 00 5c c0 	add_i s1, s1, s24
   3a3fc:	02 00 00 88 	store_32 s0, (s2)
   3a400:	21 00 00 a8 	load_32 s1, (s1)
   3a404:	5e 83 01 88 	store_32 s26, 96(sp)
   3a408:	00 00 fd c0 	move s0, s26
   3a40c:	ca 86 ff f9 	call -124120 <FixedMul>
   3a410:	21 08 00 4f 	movehi s1, 65
   3a414:	5f 04 00 4f 	movehi s2, 63
   3a418:	74 04 00 4f 	movehi s3, 52
   3a41c:	21 30 05 00 	or s1, s1, 332
   3a420:	42 b0 04 00 	or s2, s2, 300
   3a424:	63 40 19 00 	or s3, s3, 1616
   3a428:	21 00 5c c0 	add_i s1, s1, s24
   3a42c:	42 00 00 a8 	load_32 s2, (s2)
   3a430:	83 00 00 4f 	movehi s4, 3
   3a434:	21 00 00 a8 	load_32 s1, (s1)
   3a438:	21 00 51 c0 	add_i s1, s1, s2
   3a43c:	41 08 00 4f 	movehi s2, 65
   3a440:	21 44 00 0a 	shr s1, s1, 17
   3a444:	42 00 05 00 	or s2, s2, 320
   3a448:	42 03 00 a8 	load_32 s26, (s2)
   3a44c:	43 00 00 a8 	load_32 s2, (s3)
   3a450:	64 f0 7f 00 	or s3, s4, 8188
   3a454:	21 83 11 c0 	and s25, s1, s3
   3a458:	00 03 f0 c0 	move s24, s0
   3a45c:	22 80 5c c0 	add_i s1, s2, s25
   3a460:	01 00 00 a8 	load_32 s0, (s1)
   3a464:	20 00 fc c0 	move s1, s24
   3a468:	b3 86 ff f9 	call -124212 <FixedMul>
   3a46c:	2d 04 00 4f 	movehi s1, 45
   3a470:	5e 04 00 4f 	movehi s2, 62
   3a474:	61 08 00 4f 	movehi s3, 65
   3a478:	21 90 41 00 	or s1, s1, 4196
   3a47c:	42 90 0f 00 	or s2, s2, 996
   3a480:	63 10 05 00 	or s3, s3, 324
   3a484:	21 80 5c c0 	add_i s1, s1, s25
   3a488:	00 00 5d c0 	add_i s0, s0, s26
   3a48c:	02 00 00 88 	store_32 s0, (s2)
   3a490:	23 03 00 a8 	load_32 s25, (s3)
   3a494:	01 00 00 a8 	load_32 s0, (s1)
   3a498:	20 00 fc c0 	move s1, s24
   3a49c:	a6 86 ff f9 	call -124264 <FixedMul>
   3a4a0:	3e 04 00 4f 	movehi s1, 62
   3a4a4:	5e 04 00 4f 	movehi s2, 62
   3a4a8:	60 00 00 0f 	move s3, 0
   3a4ac:	21 c0 0f 00 	or s1, s1, 1008
   3a4b0:	42 f0 50 00 	or s2, s2, 5180
   3a4b4:	00 80 5c c0 	add_i s0, s0, s25
   3a4b8:	03 00 60 c0 	sub_i s0, s3, s0
   3a4bc:	01 00 00 88 	store_32 s0, (s1)
   3a4c0:	02 00 00 a8 	load_32 s0, (s2)
   3a4c4:	7e a0 01 a8 	load_32 s3, 104(sp)
   3a4c8:	9e 90 01 a8 	load_32 s4, 100(sp)
   3a4cc:	80 01 00 f4 	bnz s0, 48 <R_MapPlane+0x280>
   3a4d0:	1e 80 01 a8 	load_32 s0, 96(sp)
   3a4d4:	00 50 00 09 	ashr s0, s0, 20
   3a4d8:	20 fc 01 18 	cmplt_u s1, s0, 127
   3a4dc:	41 00 00 f4 	bnz s1, 8 <R_MapPlane+0x268>
   3a4e0:	00 fc 01 0f 	move s0, 127
   3a4e4:	27 08 00 4f 	movehi s1, 71
   3a4e8:	00 08 00 0b 	shl s0, s0, 2
   3a4ec:	21 d0 73 00 	or s1, s1, 7412
   3a4f0:	21 00 00 a8 	load_32 s1, (s1)
   3a4f4:	01 00 50 c0 	add_i s0, s1, s0
   3a4f8:	00 00 00 a8 	load_32 s0, (s0)
   3a4fc:	3e 04 00 4f 	movehi s1, 62
   3a500:	5e 04 00 4f 	movehi s2, 62
   3a504:	21 50 0f 00 	or s1, s1, 980
   3a508:	42 b0 0f 00 	or s2, s2, 1004
   3a50c:	01 00 00 88 	store_32 s0, (s1)
   3a510:	1e 04 00 4f 	movehi s0, 62
   3a514:	3e 04 00 4f 	movehi s1, 62
   3a518:	82 00 00 88 	store_32 s4, (s2)
   3a51c:	5f 04 00 4f 	movehi s2, 63
   3a520:	00 70 0f 00 	or s0, s0, 988
   3a524:	21 80 0f 00 	or s1, s1, 992
   3a528:	42 80 04 00 	or s2, s2, 288
   3a52c:	60 03 00 88 	store_32 s27, (s0)
   3a530:	61 00 00 88 	store_32 s3, (s1)
   3a534:	02 00 00 a8 	load_32 s0, (s2)
   3a538:	00 00 00 fc 	call s0
   3a53c:	fe b3 01 a8 	load_32 ra, 108(sp)
   3a540:	7e c3 01 a8 	load_32 s27, 112(sp)
   3a544:	5e d3 01 a8 	load_32 s26, 116(sp)
   3a548:	3e e3 01 a8 	load_32 s25, 120(sp)
   3a54c:	1e f3 01 a8 	load_32 s24, 124(sp)
   3a550:	de 03 02 05 	add_i sp, sp, 128
   3a554:	1f 00 00 f0 	ret

000000000003a558 R_ClearPlanes:
   3a558:	de 03 ff 05 	add_i sp, sp, -64
   3a55c:	1e f3 00 88 	store_32 s24, 60(sp)
   3a560:	3e e3 00 88 	store_32 s25, 56(sp)
   3a564:	5e d3 00 88 	store_32 s26, 52(sp)
   3a568:	fe c3 00 88 	store_32 ra, 48(sp)
   3a56c:	1e 04 00 4f 	movehi s0, 62
   3a570:	00 30 1c 00 	or s0, s0, 1804
   3a574:	00 03 00 a8 	load_32 s24, (s0)
   3a578:	18 04 00 14 	cmplt_i s0, s24, 1
   3a57c:	40 02 00 f4 	bnz s0, 72 <R_ClearPlanes+0x6c>
   3a580:	1e 04 00 4f 	movehi s0, 62
   3a584:	58 04 00 0b 	shl s2, s24, 1
   3a588:	20 fc 03 0f 	move s1, 255
   3a58c:	00 10 1c 00 	or s0, s0, 1796
   3a590:	20 03 00 a8 	load_32 s25, (s0)
   3a594:	02 08 00 4f 	movehi s0, 66
   3a598:	00 60 4b 00 	or s0, s0, 4824
   3a59c:	42 5d 00 f8 	call 95496 <memset>
   3a5a0:	22 08 00 4f 	movehi s1, 66
   3a5a4:	00 00 00 0f 	move s0, 0
   3a5a8:	21 80 69 00 	or s1, s1, 6752
   3a5ac:	40 04 00 0b 	shl s2, s0, 1
   3a5b0:	00 04 00 05 	add_i s0, s0, 1
   3a5b4:	41 00 51 c0 	add_i s2, s1, s2
   3a5b8:	60 00 4c c1 	cmplt_i s3, s0, s24
   3a5bc:	22 03 00 86 	store_16 s25, (s2)
   3a5c0:	63 ff ff f5 	bnz s3, -20 <R_ClearPlanes+0x54>
   3a5c4:	02 08 00 4f 	movehi s0, 66
   3a5c8:	42 08 00 4f 	movehi s2, 66
   3a5cc:	28 08 00 4f 	movehi s1, 72
   3a5d0:	00 b0 73 00 	or s0, s0, 7404
   3a5d4:	62 08 00 4f 	movehi s3, 66
   3a5d8:	42 a0 73 00 	or s2, s2, 7400
   3a5dc:	21 e0 0c 00 	or s1, s1, 824
   3a5e0:	20 00 00 88 	store_32 s1, (s0)
   3a5e4:	03 c0 73 00 	or s0, s3, 7408
   3a5e8:	02 00 00 88 	store_32 s0, (s2)
   3a5ec:	02 08 00 4f 	movehi s0, 66
   3a5f0:	00 03 00 0f 	move s24, 0
   3a5f4:	40 80 0c 0f 	move s2, 800
   3a5f8:	00 e0 25 00 	or s0, s0, 2424
   3a5fc:	20 00 fc c0 	move s1, s24
   3a600:	29 5d 00 f8 	call 95396 <memset>
   3a604:	1f 04 00 4f 	movehi s0, 63
   3a608:	34 04 00 4f 	movehi s1, 52
   3a60c:	40 00 c0 4f 	movehi s2, 393216
   3a610:	00 b0 04 00 	or s0, s0, 300
   3a614:	21 40 19 00 	or s1, s1, 1616
   3a618:	7e 04 00 4f 	movehi s3, 62
   3a61c:	00 00 00 a8 	load_32 s0, (s0)
   3a620:	21 00 00 a8 	load_32 s1, (s1)
   3a624:	43 83 50 00 	or s26, s3, 5152
   3a628:	00 00 51 c0 	add_i s0, s0, s2
   3a62c:	43 00 00 4f 	movehi s2, 3
   3a630:	00 44 00 0a 	shr s0, s0, 17
   3a634:	42 f0 7f 00 	or s2, s2, 8188
   3a638:	20 03 11 c0 	and s25, s0, s2
   3a63c:	01 80 5c c0 	add_i s0, s1, s25
   3a640:	00 00 00 a8 	load_32 s0, (s0)
   3a644:	3a 00 00 a8 	load_32 s1, (s26)
   3a648:	41 86 ff f9 	call -124668 <FixedDiv>
   3a64c:	2d 04 00 4f 	movehi s1, 45
   3a650:	42 08 00 4f 	movehi s2, 66
   3a654:	21 90 41 00 	or s1, s1, 4196
   3a658:	42 40 19 00 	or s2, s2, 1616
   3a65c:	21 80 5c c0 	add_i s1, s1, s25
   3a660:	02 00 00 88 	store_32 s0, (s2)
   3a664:	01 00 00 a8 	load_32 s0, (s1)
   3a668:	3a 00 00 a8 	load_32 s1, (s26)
   3a66c:	38 86 ff f9 	call -124704 <FixedDiv>
   3a670:	22 08 00 4f 	movehi s1, 66
   3a674:	18 00 60 c0 	sub_i s0, s24, s0
   3a678:	21 50 19 00 	or s1, s1, 1620
   3a67c:	01 00 00 88 	store_32 s0, (s1)
   3a680:	fe c3 00 a8 	load_32 ra, 48(sp)
   3a684:	5e d3 00 a8 	load_32 s26, 52(sp)
   3a688:	3e e3 00 a8 	load_32 s25, 56(sp)
   3a68c:	1e f3 00 a8 	load_32 s24, 60(sp)
   3a690:	de 03 01 05 	add_i sp, sp, 64
   3a694:	1f 00 00 f0 	ret

000000000003a698 R_FindPlane:
   3a698:	de 03 fe 05 	add_i sp, sp, -128
   3a69c:	1e f3 01 88 	store_32 s24, 124(sp)
   3a6a0:	3e e3 01 88 	store_32 s25, 120(sp)
   3a6a4:	5e d3 01 88 	store_32 s26, 116(sp)
   3a6a8:	7e c3 01 88 	store_32 s27, 112(sp)
   3a6ac:	fe b3 01 88 	store_32 ra, 108(sp)
   3a6b0:	72 08 00 4f 	movehi s3, 82
   3a6b4:	40 03 00 0f 	move s26, 0
   3a6b8:	63 70 4b 00 	or s3, s3, 4828
   3a6bc:	63 00 00 a8 	load_32 s3, (s3)
   3a6c0:	00 83 f0 c0 	move s24, s1
   3a6c4:	60 03 fd c0 	move s27, s26
   3a6c8:	23 00 0c c1 	cmpeq_i s1, s3, s24
   3a6cc:	41 00 00 f4 	bnz s1, 8 <R_FindPlane+0x3c>
   3a6d0:	60 03 f0 c0 	move s27, s0
   3a6d4:	41 00 00 f4 	bnz s1, 8 <R_FindPlane+0x44>
   3a6d8:	40 03 f1 c0 	move s26, s2
   3a6dc:	02 08 00 4f 	movehi s0, 66
   3a6e0:	48 08 00 4f 	movehi s2, 72
   3a6e4:	80 b0 73 00 	or s4, s0, 7404
   3a6e8:	22 e0 0c 00 	or s1, s2, 824
   3a6ec:	04 00 00 a8 	load_32 s0, (s4)
   3a6f0:	20 83 f0 c0 	move s25, s1
   3a6f4:	60 80 90 c1 	cmple_u s3, s0, s1
   3a6f8:	c3 01 00 f4 	bnz s3, 56 <R_FindPlane+0x98>
   3a6fc:	22 e3 0c 00 	or s25, s2, 824
   3a700:	59 00 00 a8 	load_32 s2, (s25)
   3a704:	5b 00 11 c1 	cmpne_i s2, s27, s2
   3a708:	e2 00 00 f4 	bnz s2, 28 <R_FindPlane+0x8c>
   3a70c:	59 10 00 a8 	load_32 s2, 4(s25)
   3a710:	42 00 1c c1 	cmpne_i s2, s2, s24
   3a714:	82 00 00 f4 	bnz s2, 16 <R_FindPlane+0x8c>
   3a718:	59 20 00 a8 	load_32 s2, 8(s25)
   3a71c:	5a 00 01 c1 	cmpeq_i s2, s26, s2
   3a720:	82 03 00 f4 	bnz s2, 112 <R_FindPlane+0xf8>
   3a724:	39 63 0a 05 	add_i s25, s25, 664
   3a728:	59 00 80 c1 	cmplt_u s2, s25, s0
   3a72c:	a2 fe ff f5 	bnz s2, -44 <R_FindPlane+0x68>
   3a730:	4a 00 00 4f 	movehi s2, 10
   3a734:	20 80 60 c0 	sub_i s1, s0, s1
   3a738:	42 00 30 00 	or s2, s2, 3072
   3a73c:	21 00 11 c1 	cmpne_i s1, s1, s2
   3a740:	01 01 00 f4 	bnz s1, 32 <R_FindPlane+0xc8>
   3a744:	02 00 00 4f 	movehi s0, 2
   3a748:	00 f0 06 00 	or s0, s0, 444
   3a74c:	1e 00 00 88 	store_32 s0, (sp)
   3a750:	9e a0 01 88 	store_32 s4, 104(sp)
   3a754:	6c 4e ff f9 	call -181840 <I_Error>
   3a758:	9e a0 01 a8 	load_32 s4, 104(sp)
   3a75c:	04 00 00 a8 	load_32 s0, (s4)
   3a760:	00 60 0a 05 	add_i s0, s0, 664
   3a764:	04 00 00 88 	store_32 s0, (s4)
   3a768:	00 fc ff 0f 	move s0, -1
   3a76c:	79 03 00 88 	store_32 s27, (s25)
   3a770:	19 13 00 88 	store_32 s24, 4(s25)
   3a774:	40 00 05 0f 	move s2, 320
   3a778:	59 23 00 88 	store_32 s26, 8(s25)
   3a77c:	20 fc 03 0f 	move s1, 255
   3a780:	59 30 00 88 	store_32 s2, 12(s25)
   3a784:	19 40 00 88 	store_32 s0, 16(s25)
   3a788:	19 54 00 05 	add_i s0, s25, 21
   3a78c:	c6 5c 00 f8 	call 95000 <memset>
   3a790:	00 80 fc c0 	move s0, s25
   3a794:	fe b3 01 a8 	load_32 ra, 108(sp)
   3a798:	7e c3 01 a8 	load_32 s27, 112(sp)
   3a79c:	5e d3 01 a8 	load_32 s26, 116(sp)
   3a7a0:	3e e3 01 a8 	load_32 s25, 120(sp)
   3a7a4:	1e f3 01 a8 	load_32 s24, 124(sp)
   3a7a8:	de 03 02 05 	add_i sp, sp, 128
   3a7ac:	1f 00 00 f0 	ret

000000000003a7b0 R_CheckPlane:
   3a7b0:	de 03 ff 05 	add_i sp, sp, -64
   3a7b4:	1e f3 00 88 	store_32 s24, 60(sp)
   3a7b8:	fe e3 00 88 	store_32 ra, 56(sp)
   3a7bc:	a0 30 00 a8 	load_32 s5, 12(s0)
   3a7c0:	c5 80 20 c1 	cmpgt_i s6, s5, s1
   3a7c4:	60 80 f2 c0 	move s3, s5
   3a7c8:	46 00 00 f4 	bnz s6, 8 <R_CheckPlane+0x20>
   3a7cc:	15 00 00 f6 	b 84 <R_CheckPlane+0x70>
   3a7d0:	80 80 f0 c0 	move s4, s1
   3a7d4:	46 00 00 f4 	bnz s6, 8 <R_CheckPlane+0x2c>
   3a7d8:	15 00 00 f6 	b 84 <R_CheckPlane+0x7c>
   3a7dc:	e0 40 00 a8 	load_32 s7, 16(s0)
   3a7e0:	07 01 41 c1 	cmplt_i s8, s7, s2
   3a7e4:	a0 80 f3 c0 	move s5, s7
   3a7e8:	48 00 00 f4 	bnz s8, 8 <R_CheckPlane+0x40>
   3a7ec:	15 00 00 f6 	b 84 <R_CheckPlane+0x90>
   3a7f0:	c0 00 f1 c0 	move s6, s2
   3a7f4:	48 00 00 f4 	bnz s8, 8 <R_CheckPlane+0x4c>
   3a7f8:	15 00 00 f6 	b 84 <R_CheckPlane+0x9c>
   3a7fc:	e3 80 22 c1 	cmpgt_i s7, s3, s5
   3a800:	47 00 00 f4 	bnz s7, 8 <R_CheckPlane+0x58>
   3a804:	15 00 00 f6 	b 84 <R_CheckPlane+0xa8>
   3a808:	80 30 00 88 	store_32 s4, 12(s0)
   3a80c:	c0 40 00 88 	store_32 s6, 16(s0)
   3a810:	fe e3 00 a8 	load_32 ra, 56(sp)
   3a814:	1e f3 00 a8 	load_32 s24, 60(sp)
   3a818:	de 03 01 05 	add_i sp, sp, 64
   3a81c:	1f 00 00 f0 	ret
   3a820:	60 80 f0 c0 	move s3, s1
   3a824:	80 80 f0 c0 	move s4, s1
   3a828:	a6 fd ff f5 	bnz s6, -76 <R_CheckPlane+0x2c>
   3a82c:	80 80 f2 c0 	move s4, s5
   3a830:	e0 40 00 a8 	load_32 s7, 16(s0)
   3a834:	07 01 41 c1 	cmplt_i s8, s7, s2
   3a838:	a0 80 f3 c0 	move s5, s7
   3a83c:	a8 fd ff f5 	bnz s8, -76 <R_CheckPlane+0x40>
   3a840:	a0 00 f1 c0 	move s5, s2
   3a844:	c0 00 f1 c0 	move s6, s2
   3a848:	a8 fd ff f5 	bnz s8, -76 <R_CheckPlane+0x4c>
   3a84c:	c0 80 f3 c0 	move s6, s7
   3a850:	e3 80 22 c1 	cmpgt_i s7, s3, s5
   3a854:	a7 fd ff f5 	bnz s7, -76 <R_CheckPlane+0x58>
   3a858:	e0 80 51 c0 	add_i s7, s0, s3
   3a85c:	e7 54 00 a0 	load_u8 s7, 21(s7)
   3a860:	e7 fc 03 10 	cmpeq_i s7, s7, 255
   3a864:	47 00 00 f4 	bnz s7, 8 <R_CheckPlane+0xbc>
   3a868:	05 00 00 f6 	b 20 <R_CheckPlane+0xcc>
   3a86c:	e3 80 32 c1 	cmpge_i s7, s3, s5
   3a870:	63 04 00 05 	add_i s3, s3, 1
   3a874:	a7 fc ff f5 	bnz s7, -108 <R_CheckPlane+0x58>
   3a878:	f8 ff ff f7 	b -32 <R_CheckPlane+0xa8>
   3a87c:	62 08 00 4f 	movehi s3, 66
   3a880:	80 00 00 a8 	load_32 s4, (s0)
   3a884:	63 b0 73 00 	or s3, s3, 7404
   3a888:	03 03 00 a8 	load_32 s24, (s3)
   3a88c:	98 00 00 88 	store_32 s4, (s24)
   3a890:	80 10 00 a8 	load_32 s4, 4(s0)
   3a894:	98 10 00 88 	store_32 s4, 4(s24)
   3a898:	00 20 00 a8 	load_32 s0, 8(s0)
   3a89c:	18 20 00 88 	store_32 s0, 8(s24)
   3a8a0:	18 60 0a 05 	add_i s0, s24, 664
   3a8a4:	03 00 00 88 	store_32 s0, (s3)
   3a8a8:	18 54 00 05 	add_i s0, s24, 21
   3a8ac:	38 30 00 88 	store_32 s1, 12(s24)
   3a8b0:	20 fc 03 0f 	move s1, 255
   3a8b4:	58 40 00 88 	store_32 s2, 16(s24)
   3a8b8:	40 00 05 0f 	move s2, 320
   3a8bc:	7a 5c 00 f8 	call 94696 <memset>
   3a8c0:	00 00 fc c0 	move s0, s24
   3a8c4:	fe e3 00 a8 	load_32 ra, 56(sp)
   3a8c8:	1e f3 00 a8 	load_32 s24, 60(sp)
   3a8cc:	de 03 01 05 	add_i sp, sp, 64
   3a8d0:	1f 00 00 f0 	ret

000000000003a8d4 R_MakeSpans:
   3a8d4:	de 03 ff 05 	add_i sp, sp, -64
   3a8d8:	1e f3 00 88 	store_32 s24, 60(sp)
   3a8dc:	3e e3 00 88 	store_32 s25, 56(sp)
   3a8e0:	5e d3 00 88 	store_32 s26, 52(sp)
   3a8e4:	7e c3 00 88 	store_32 s27, 48(sp)
   3a8e8:	fe b3 00 88 	store_32 ra, 44(sp)
   3a8ec:	40 83 f1 c0 	move s26, s3
   3a8f0:	00 83 f0 c0 	move s24, s1
   3a8f4:	9e a0 00 88 	store_32 s4, 40(sp)
   3a8f8:	60 03 f1 c0 	move s27, s2
   3a8fc:	1e 70 00 88 	store_32 s0, 28(sp)
   3a900:	38 00 3d c1 	cmpge_i s1, s24, s26
   3a904:	c1 02 00 f4 	bnz s1, 88 <R_MakeSpans+0x88>
   3a908:	38 80 2d c1 	cmpgt_i s1, s24, s27
   3a90c:	81 02 00 f4 	bnz s1, 80 <R_MakeSpans+0x88>
   3a910:	27 08 00 4f 	movehi s1, 71
   3a914:	00 fc ff 05 	add_i s0, s0, -1
   3a918:	1e 90 00 88 	store_32 s0, 36(sp)
   3a91c:	01 e0 73 00 	or s0, s1, 7416
   3a920:	1e 80 00 88 	store_32 s0, 32(sp)
   3a924:	3e 80 00 a8 	load_32 s1, 32(sp)
   3a928:	18 08 00 0b 	shl s0, s24, 2
   3a92c:	01 00 50 c0 	add_i s0, s1, s0
   3a930:	20 00 00 a8 	load_32 s1, (s0)
   3a934:	00 00 fc c0 	move s0, s24
   3a938:	5e 90 00 a8 	load_32 s2, 36(sp)
   3a93c:	50 fe ff f9 	call -1728 <R_MapPlane>
   3a940:	38 07 00 05 	add_i s25, s24, 1
   3a944:	19 00 3d c1 	cmpge_i s0, s25, s26
   3a948:	c0 00 00 f4 	bnz s0, 24 <R_MakeSpans+0x8c>
   3a94c:	18 80 3d c1 	cmpge_i s0, s24, s27
   3a950:	00 83 fc c0 	move s24, s25
   3a954:	60 00 00 f4 	bnz s0, 12 <R_MakeSpans+0x8c>
   3a958:	f3 ff ff f7 	b -52 <R_MakeSpans+0x50>
   3a95c:	20 03 fc c0 	move s25, s24
   3a960:	1e a0 00 a8 	load_32 s0, 40(sp)
   3a964:	1b 00 50 c1 	cmple_i s0, s27, s0
   3a968:	00 07 00 f4 	bnz s0, 224 <R_MakeSpans+0x174>
   3a96c:	19 80 2d c1 	cmpgt_i s0, s25, s27
   3a970:	c0 06 00 f4 	bnz s0, 216 <R_MakeSpans+0x174>
   3a974:	07 08 00 4f 	movehi s0, 71
   3a978:	3e 70 00 a8 	load_32 s1, 28(sp)
   3a97c:	00 e3 73 00 	or s24, s0, 7416
   3a980:	21 fc ff 05 	add_i s1, s1, -1
   3a984:	3e 90 00 88 	store_32 s1, 36(sp)
   3a988:	1b 08 00 0b 	shl s0, s27, 2
   3a98c:	18 00 50 c0 	add_i s0, s24, s0
   3a990:	20 00 00 a8 	load_32 s1, (s0)
   3a994:	00 80 fd c0 	move s0, s27
   3a998:	5e 90 00 a8 	load_32 s2, 36(sp)
   3a99c:	38 fe ff f9 	call -1824 <R_MapPlane>
   3a9a0:	3e a0 00 a8 	load_32 s1, 40(sp)
   3a9a4:	1b fc ff 05 	add_i s0, s27, -1
   3a9a8:	20 80 50 c1 	cmple_i s1, s0, s1
   3a9ac:	a1 00 00 f4 	bnz s1, 20 <R_MakeSpans+0xec>
   3a9b0:	3b 80 5c c1 	cmple_i s1, s27, s25
   3a9b4:	60 03 f0 c0 	move s27, s0
   3a9b8:	41 00 00 f4 	bnz s1, 8 <R_MakeSpans+0xec>
   3a9bc:	f3 ff ff f7 	b -52 <R_MakeSpans+0xb4>
   3a9c0:	39 00 5d c1 	cmple_i s1, s25, s26
   3a9c4:	a1 04 00 f4 	bnz s1, 148 <R_MakeSpans+0x184>
   3a9c8:	fe a0 00 a8 	load_32 s7, 40(sp)
   3a9cc:	3a 80 23 c1 	cmpgt_i s1, s26, s7
   3a9d0:	01 05 00 f4 	bnz s1, 160 <R_MakeSpans+0x19c>
   3a9d4:	27 08 00 4f 	movehi s1, 71
   3a9d8:	de 70 00 a8 	load_32 s6, 28(sp)
   3a9dc:	41 e0 73 00 	or s2, s1, 7416
   3a9e0:	3a 04 00 05 	add_i s1, s26, 1
   3a9e4:	7a 08 00 0b 	shl s3, s26, 2
   3a9e8:	62 80 51 c0 	add_i s3, s2, s3
   3a9ec:	81 80 3c c1 	cmpge_i s4, s1, s25
   3a9f0:	c3 00 00 88 	store_32 s6, (s3)
   3a9f4:	a4 00 00 f4 	bnz s4, 20 <R_MakeSpans+0x134>
   3a9f8:	7a 80 33 c1 	cmpge_i s3, s26, s7
   3a9fc:	40 83 f0 c0 	move s26, s1
   3aa00:	43 00 00 f4 	bnz s3, 8 <R_MakeSpans+0x134>
   3aa04:	f7 ff ff f7 	b -36 <R_MakeSpans+0x10c>
   3aa08:	40 80 33 c1 	cmpge_i s2, s0, s7
   3aa0c:	c2 03 00 f4 	bnz s2, 120 <R_MakeSpans+0x1b0>
   3aa10:	41 80 23 c1 	cmpgt_i s2, s1, s7
   3aa14:	82 03 00 f4 	bnz s2, 112 <R_MakeSpans+0x1b0>
   3aa18:	47 08 00 4f 	movehi s2, 71
   3aa1c:	42 e0 73 00 	or s2, s2, 7416
   3aa20:	67 fc ff 05 	add_i s3, s7, -1
   3aa24:	87 08 00 0b 	shl s4, s7, 2
   3aa28:	82 00 52 c0 	add_i s4, s2, s4
   3aa2c:	a3 00 50 c1 	cmple_i s5, s3, s0
   3aa30:	c4 00 00 88 	store_32 s6, (s4)
   3aa34:	85 02 00 f4 	bnz s5, 80 <R_MakeSpans+0x1b0>
   3aa38:	87 80 20 c1 	cmpgt_i s4, s7, s1
   3aa3c:	e0 80 f1 c0 	move s7, s3
   3aa40:	04 ff ff f5 	bnz s4, -32 <R_MakeSpans+0x14c>
   3aa44:	10 00 00 f6 	b 64 <R_MakeSpans+0x1b0>
   3aa48:	00 80 fd c0 	move s0, s27
   3aa4c:	39 00 5d c1 	cmple_i s1, s25, s26
   3aa50:	41 00 00 f4 	bnz s1, 8 <R_MakeSpans+0x184>
   3aa54:	dd ff ff f7 	b -140 <R_MakeSpans+0xf4>
   3aa58:	20 00 fd c0 	move s1, s26
   3aa5c:	de 70 00 a8 	load_32 s6, 28(sp)
   3aa60:	fe a0 00 a8 	load_32 s7, 40(sp)
   3aa64:	40 80 33 c1 	cmpge_i s2, s0, s7
   3aa68:	e2 00 00 f4 	bnz s2, 28 <R_MakeSpans+0x1b0>
   3aa6c:	e9 ff ff f7 	b -92 <R_MakeSpans+0x13c>
   3aa70:	20 00 fd c0 	move s1, s26
   3aa74:	de 70 00 a8 	load_32 s6, 28(sp)
   3aa78:	40 80 33 c1 	cmpge_i s2, s0, s7
   3aa7c:	42 00 00 f4 	bnz s2, 8 <R_MakeSpans+0x1b0>
   3aa80:	e4 ff ff f7 	b -112 <R_MakeSpans+0x13c>
   3aa84:	fe b3 00 a8 	load_32 ra, 44(sp)
   3aa88:	7e c3 00 a8 	load_32 s27, 48(sp)
   3aa8c:	5e d3 00 a8 	load_32 s26, 52(sp)
   3aa90:	3e e3 00 a8 	load_32 s25, 56(sp)
   3aa94:	1e f3 00 a8 	load_32 s24, 60(sp)
   3aa98:	de 03 01 05 	add_i sp, sp, 64
   3aa9c:	1f 00 00 f0 	ret

000000000003aaa0 R_DrawPlanes:
   3aaa0:	de 03 fd 05 	add_i sp, sp, -192
   3aaa4:	1e f3 02 88 	store_32 s24, 188(sp)
   3aaa8:	3e e3 02 88 	store_32 s25, 184(sp)
   3aaac:	5e d3 02 88 	store_32 s26, 180(sp)
   3aab0:	7e c3 02 88 	store_32 s27, 176(sp)
   3aab4:	fe b3 02 88 	store_32 ra, 172(sp)
   3aab8:	1d 04 00 4f 	movehi s0, 61
   3aabc:	3c 04 00 4f 	movehi s1, 60
   3aac0:	41 00 00 4f 	movehi s2, 1
   3aac4:	00 d0 42 00 	or s0, s0, 4276
   3aac8:	21 d0 02 00 	or s1, s1, 180
   3aacc:	00 00 00 a8 	load_32 s0, (s0)
   3aad0:	00 80 60 c0 	sub_i s0, s0, s1
   3aad4:	22 04 40 00 	or s1, s2, 4097
   3aad8:	20 80 40 c1 	cmplt_i s1, s0, s1
   3aadc:	41 01 00 f4 	bnz s1, 40 <R_DrawPlanes+0x64>
   3aae0:	35 a8 aa 4f 	movehi s1, 349525
   3aae4:	21 ac 2a 00 	or s1, s1, 2731
   3aae8:	00 80 80 c0 	mulh_u s0, s0, s1
   3aaec:	21 00 00 4f 	movehi s1, 1
   3aaf0:	00 14 00 0a 	shr s0, s0, 5
   3aaf4:	21 64 24 00 	or s1, s1, 2329
   3aaf8:	3e 00 00 88 	store_32 s1, (sp)
   3aafc:	1e 10 00 88 	store_32 s0, 4(sp)
   3ab00:	81 4d ff f9 	call -182780 <I_Error>
   3ab04:	02 08 00 4f 	movehi s0, 66
   3ab08:	4a 00 00 4f 	movehi s2, 10
   3ab0c:	00 b3 73 00 	or s24, s0, 7404
   3ab10:	08 08 00 4f 	movehi s0, 72
   3ab14:	38 00 00 a8 	load_32 s1, (s24)
   3ab18:	60 e3 0c 00 	or s27, s0, 824
   3ab1c:	01 80 6d c0 	sub_i s0, s1, s27
   3ab20:	22 04 30 00 	or s1, s2, 3073
   3ab24:	20 80 40 c1 	cmplt_i s1, s0, s1
   3ab28:	41 01 00 f4 	bnz s1, 40 <R_DrawPlanes+0xb0>
   3ab2c:	2b 58 31 4f 	movehi s1, 101067
   3ab30:	21 7c 48 00 	or s1, s1, 4639
   3ab34:	00 80 80 c0 	mulh_u s0, s0, s1
   3ab38:	21 00 00 4f 	movehi s1, 1
   3ab3c:	00 1c 00 0a 	shr s0, s0, 7
   3ab40:	21 14 06 00 	or s1, s1, 389
   3ab44:	3e 00 00 88 	store_32 s1, (sp)
   3ab48:	1e 10 00 88 	store_32 s0, 4(sp)
   3ab4c:	6e 4d ff f9 	call -182856 <I_Error>
   3ab50:	02 08 00 4f 	movehi s0, 66
   3ab54:	22 08 00 4f 	movehi s1, 66
   3ab58:	45 00 00 4f 	movehi s2, 5
   3ab5c:	00 a0 73 00 	or s0, s0, 7400
   3ab60:	21 c0 73 00 	or s1, s1, 7408
   3ab64:	00 00 00 a8 	load_32 s0, (s0)
   3ab68:	00 80 60 c0 	sub_i s0, s0, s1
   3ab6c:	22 04 00 00 	or s1, s2, 1
   3ab70:	20 80 40 c1 	cmplt_i s1, s0, s1
   3ab74:	e1 00 00 f4 	bnz s1, 28 <R_DrawPlanes+0xf0>
   3ab78:	21 00 00 4f 	movehi s1, 1
   3ab7c:	00 04 00 0a 	shr s0, s0, 1
   3ab80:	1e 10 00 88 	store_32 s0, 4(sp)
   3ab84:	01 7c 36 00 	or s0, s1, 3487
   3ab88:	1e 00 00 88 	store_32 s0, (sp)
   3ab8c:	5e 4d ff f9 	call -182920 <I_Error>
   3ab90:	18 00 00 a8 	load_32 s0, (s24)
   3ab94:	00 80 9d c1 	cmple_u s0, s0, s27
   3ab98:	20 1c 00 f4 	bnz s0, 900 <R_DrawPlanes+0x47c>
   3ab9c:	12 08 00 4f 	movehi s0, 82
   3aba0:	32 08 00 4f 	movehi s1, 82
   3aba4:	5e 04 00 4f 	movehi s2, 62
   3aba8:	40 73 4b 00 	or s26, s0, 4828
   3abac:	1e 04 00 4f 	movehi s0, 62
   3abb0:	21 e0 56 00 	or s1, s1, 5560
   3abb4:	3e f0 01 88 	store_32 s1, 124(sp)
   3abb8:	3e 04 00 4f 	movehi s1, 62
   3abbc:	00 d0 50 00 	or s0, s0, 5172
   3abc0:	1e e0 01 88 	store_32 s0, 120(sp)
   3abc4:	1d 04 00 4f 	movehi s0, 61
   3abc8:	21 d0 0e 00 	or s1, s1, 948
   3abcc:	3e d0 01 88 	store_32 s1, 116(sp)
   3abd0:	3e 04 00 4f 	movehi s1, 62
   3abd4:	00 20 47 00 	or s0, s0, 4552
   3abd8:	1e c0 01 88 	store_32 s0, 112(sp)
   3abdc:	12 08 00 4f 	movehi s0, 82
   3abe0:	21 c0 0e 00 	or s1, s1, 944
   3abe4:	3e b0 01 88 	store_32 s1, 108(sp)
   3abe8:	3e 04 00 4f 	movehi s1, 62
   3abec:	00 90 4b 00 	or s0, s0, 4836
   3abf0:	1e a0 01 88 	store_32 s0, 104(sp)
   3abf4:	1e 04 00 4f 	movehi s0, 62
   3abf8:	21 f0 0e 00 	or s1, s1, 956
   3abfc:	3e 90 01 88 	store_32 s1, 100(sp)
   3ac00:	3e 04 00 4f 	movehi s1, 62
   3ac04:	00 30 0f 00 	or s0, s0, 972
   3ac08:	1e a0 02 88 	store_32 s0, 168(sp)
   3ac0c:	1f 04 00 4f 	movehi s0, 63
   3ac10:	21 20 0f 00 	or s1, s1, 968
   3ac14:	3e 90 02 88 	store_32 s1, 164(sp)
   3ac18:	21 08 00 4f 	movehi s1, 65
   3ac1c:	00 b0 04 00 	or s0, s0, 300
   3ac20:	1e 80 02 88 	store_32 s0, 160(sp)
   3ac24:	1e 04 00 4f 	movehi s0, 62
   3ac28:	21 30 05 00 	or s1, s1, 332
   3ac2c:	3e 70 02 88 	store_32 s1, 156(sp)
   3ac30:	32 08 00 4f 	movehi s1, 82
   3ac34:	00 10 0f 00 	or s0, s0, 964
   3ac38:	1e 60 02 88 	store_32 s0, 152(sp)
   3ac3c:	1e 04 00 4f 	movehi s0, 62
   3ac40:	21 80 4b 00 	or s1, s1, 4832
   3ac44:	3e 50 02 88 	store_32 s1, 148(sp)
   3ac48:	3e 04 00 4f 	movehi s1, 62
   3ac4c:	00 e0 0e 00 	or s0, s0, 952
   3ac50:	1e 40 02 88 	store_32 s0, 144(sp)
   3ac54:	1d 04 00 4f 	movehi s0, 61
   3ac58:	21 c0 50 00 	or s1, s1, 5168
   3ac5c:	3e 30 02 88 	store_32 s1, 140(sp)
   3ac60:	3d 04 00 4f 	movehi s1, 61
   3ac64:	00 30 47 00 	or s0, s0, 4556
   3ac68:	1e 80 01 88 	store_32 s0, 96(sp)
   3ac6c:	1e 04 00 4f 	movehi s0, 62
   3ac70:	21 70 47 00 	or s1, s1, 4572
   3ac74:	3e 70 01 88 	store_32 s1, 92(sp)
   3ac78:	20 04 00 0f 	move s1, 1
   3ac7c:	3e 60 01 88 	store_32 s1, 88(sp)
   3ac80:	00 60 0f 00 	or s0, s0, 984
   3ac84:	1e 20 02 88 	store_32 s0, 136(sp)
   3ac88:	01 08 00 4f 	movehi s0, 65
   3ac8c:	27 08 00 4f 	movehi s1, 71
   3ac90:	00 20 05 00 	or s0, s0, 328
   3ac94:	1e 50 01 88 	store_32 s0, 84(sp)
   3ac98:	01 c0 73 00 	or s0, s1, 7408
   3ac9c:	1e 40 01 88 	store_32 s0, 80(sp)
   3aca0:	02 e0 50 00 	or s0, s2, 5176
   3aca4:	1e 30 01 88 	store_32 s0, 76(sp)
   3aca8:	01 08 00 4f 	movehi s0, 65
   3acac:	20 3c 00 0f 	move s1, 15
   3acb0:	3e 10 01 88 	store_32 s1, 68(sp)
   3acb4:	20 00 00 0f 	move s1, 0
   3acb8:	3e 00 01 88 	store_32 s1, 64(sp)
   3acbc:	00 40 19 00 	or s0, s0, 1616
   3acc0:	1e 20 01 88 	store_32 s0, 72(sp)
   3acc4:	1e 13 02 88 	store_32 s24, 132(sp)
   3acc8:	5e 03 02 88 	store_32 s26, 128(sp)
   3accc:	3b 33 00 a8 	load_32 s25, 12(s27)
   3acd0:	1b 40 00 a8 	load_32 s0, 16(s27)
   3acd4:	39 00 20 c1 	cmpgt_i s1, s25, s0
   3acd8:	61 06 00 f4 	bnz s1, 204 <R_DrawPlanes+0x304>
   3acdc:	3b 10 00 a8 	load_32 s1, 4(s27)
   3ace0:	5a 00 00 a8 	load_32 s2, (s26)
   3ace4:	41 00 11 c1 	cmpne_i s2, s1, s2
   3ace8:	82 06 00 f4 	bnz s2, 208 <R_DrawPlanes+0x318>
   3acec:	3e f0 01 a8 	load_32 s1, 124(sp)
   3acf0:	21 00 00 a8 	load_32 s1, (s1)
   3acf4:	5e e0 01 a8 	load_32 s2, 120(sp)
   3acf8:	42 00 00 a8 	load_32 s2, (s2)
   3acfc:	21 00 91 c0 	ashr s1, s1, s2
   3ad00:	5e d0 01 a8 	load_32 s2, 116(sp)
   3ad04:	22 00 00 88 	store_32 s1, (s2)
   3ad08:	3e c0 01 a8 	load_32 s1, 112(sp)
   3ad0c:	21 00 00 a8 	load_32 s1, (s1)
   3ad10:	5e b0 01 a8 	load_32 s2, 108(sp)
   3ad14:	22 00 00 88 	store_32 s1, (s2)
   3ad18:	3e a0 01 a8 	load_32 s1, 104(sp)
   3ad1c:	21 00 00 a8 	load_32 s1, (s1)
   3ad20:	5e 90 01 a8 	load_32 s2, 100(sp)
   3ad24:	22 00 00 88 	store_32 s1, (s2)
   3ad28:	3b 80 5c c0 	add_i s1, s27, s25
   3ad2c:	41 54 00 a0 	load_u8 s2, 21(s1)
   3ad30:	7e a0 02 a8 	load_32 s3, 168(sp)
   3ad34:	43 00 00 88 	store_32 s2, (s3)
   3ad38:	21 5c 05 a0 	load_u8 s1, 343(s1)
   3ad3c:	7e 90 02 a8 	load_32 s3, 164(sp)
   3ad40:	42 80 60 c1 	cmpgt_u s2, s2, s1
   3ad44:	23 00 00 88 	store_32 s1, (s3)
   3ad48:	82 02 00 f4 	bnz s2, 80 <R_DrawPlanes+0x2f8>
   3ad4c:	3e 70 02 a8 	load_32 s1, 156(sp)
   3ad50:	19 08 00 0b 	shl s0, s25, 2
   3ad54:	01 00 50 c0 	add_i s0, s1, s0
   3ad58:	3e 80 02 a8 	load_32 s1, 160(sp)
   3ad5c:	21 00 00 a8 	load_32 s1, (s1)
   3ad60:	00 00 00 a8 	load_32 s0, (s0)
   3ad64:	00 80 50 c0 	add_i s0, s0, s1
   3ad68:	20 58 00 0a 	shr s1, s0, 22
   3ad6c:	1e 60 02 a8 	load_32 s0, 152(sp)
   3ad70:	20 03 00 88 	store_32 s25, (s0)
   3ad74:	1e 50 02 a8 	load_32 s0, 148(sp)
   3ad78:	00 00 00 a8 	load_32 s0, (s0)
   3ad7c:	74 ef ff f9 	call -16944 <R_GetColumn>
   3ad80:	3e 40 02 a8 	load_32 s1, 144(sp)
   3ad84:	01 00 00 88 	store_32 s0, (s1)
   3ad88:	1e 30 02 a8 	load_32 s0, 140(sp)
   3ad8c:	00 00 00 a8 	load_32 s0, (s0)
   3ad90:	00 00 00 fc 	call s0
   3ad94:	1b 40 00 a8 	load_32 s0, 16(s27)
   3ad98:	39 00 40 c1 	cmplt_i s1, s25, s0
   3ad9c:	39 07 00 05 	add_i s25, s25, 1
   3ada0:	41 fc ff f5 	bnz s1, -120 <R_DrawPlanes+0x288>
   3ada4:	18 00 00 a8 	load_32 s0, (s24)
   3ada8:	7b 63 0a 05 	add_i s27, s27, 664
   3adac:	1b 00 80 c1 	cmplt_u s0, s27, s0
   3adb0:	e0 f8 ff f5 	bnz s0, -228 <R_DrawPlanes+0x22c>
   3adb4:	5a 00 00 f6 	b 360 <R_DrawPlanes+0x47c>
   3adb8:	1e 80 01 a8 	load_32 s0, 96(sp)
   3adbc:	21 08 00 0b 	shl s1, s1, 2
   3adc0:	00 00 00 a8 	load_32 s0, (s0)
   3adc4:	5e 70 01 a8 	load_32 s2, 92(sp)
   3adc8:	42 00 00 a8 	load_32 s2, (s2)
   3adcc:	22 80 50 c0 	add_i s1, s2, s1
   3add0:	21 00 00 a8 	load_32 s1, (s1)
   3add4:	01 00 50 c0 	add_i s0, s1, s0
   3add8:	3e 60 01 a8 	load_32 s1, 88(sp)
   3addc:	0f 10 00 f8 	call 16444 <W_CacheLumpNum>
   3ade0:	3e 20 02 a8 	load_32 s1, 136(sp)
   3ade4:	01 00 00 88 	store_32 s0, (s1)
   3ade8:	1b 00 00 a8 	load_32 s0, (s27)
   3adec:	3e 50 01 a8 	load_32 s1, 84(sp)
   3adf0:	21 00 00 a8 	load_32 s1, (s1)
   3adf4:	00 80 60 c0 	sub_i s0, s0, s1
   3adf8:	20 7c 00 09 	ashr s1, s0, 31
   3adfc:	00 80 50 c0 	add_i s0, s0, s1
   3ae00:	00 80 30 c0 	xor s0, s0, s1
   3ae04:	3e 40 01 a8 	load_32 s1, 80(sp)
   3ae08:	01 00 00 88 	store_32 s0, (s1)
   3ae0c:	1b 20 00 a8 	load_32 s0, 8(s27)
   3ae10:	3e 30 01 a8 	load_32 s1, 76(sp)
   3ae14:	00 10 00 09 	ashr s0, s0, 4
   3ae18:	21 00 00 a8 	load_32 s1, (s1)
   3ae1c:	00 80 50 c0 	add_i s0, s0, s1
   3ae20:	20 3c 00 14 	cmplt_i s1, s0, 15
   3ae24:	41 00 00 f4 	bnz s1, 8 <R_DrawPlanes+0x38c>
   3ae28:	1e 10 01 a8 	load_32 s0, 68(sp)
   3ae2c:	20 00 00 12 	cmpgt_i s1, s0, 0
   3ae30:	41 00 00 f4 	bnz s1, 8 <R_DrawPlanes+0x398>
   3ae34:	1e 00 01 a8 	load_32 s0, 64(sp)
   3ae38:	27 08 00 4f 	movehi s1, 71
   3ae3c:	5e 20 01 a8 	load_32 s2, 72(sp)
   3ae40:	00 24 00 0b 	shl s0, s0, 9
   3ae44:	1b 57 00 05 	add_i s24, s27, 21
   3ae48:	21 d0 73 00 	or s1, s1, 7412
   3ae4c:	02 00 50 c0 	add_i s0, s2, s0
   3ae50:	01 00 00 88 	store_32 s0, (s1)
   3ae54:	20 fc 03 0f 	move s1, 255
   3ae58:	1b 40 00 a8 	load_32 s0, 16(s27)
   3ae5c:	18 00 50 c0 	add_i s0, s24, s0
   3ae60:	20 04 00 82 	store_8 s1, 1(s0)
   3ae64:	1b 30 00 a8 	load_32 s0, 12(s27)
   3ae68:	18 00 50 c0 	add_i s0, s24, s0
   3ae6c:	20 fc ff 83 	store_8 s1, -1(s0)
   3ae70:	5b 43 00 a8 	load_32 s26, 16(s27)
   3ae74:	3b 33 00 a8 	load_32 s25, 12(s27)
   3ae78:	1a 04 00 05 	add_i s0, s26, 1
   3ae7c:	19 00 20 c1 	cmpgt_i s0, s25, s0
   3ae80:	00 02 00 f4 	bnz s0, 64 <R_DrawPlanes+0x420>
   3ae84:	5b 5c 05 05 	add_i s2, s27, 343
   3ae88:	19 fc ff 05 	add_i s0, s25, -1
   3ae8c:	38 00 50 c0 	add_i s1, s24, s0
   3ae90:	02 00 50 c0 	add_i s0, s2, s0
   3ae94:	78 80 5c c0 	add_i s3, s24, s25
   3ae98:	82 80 5c c0 	add_i s4, s2, s25
   3ae9c:	21 00 00 a0 	load_u8 s1, (s1)
   3aea0:	40 00 00 a0 	load_u8 s2, (s0)
   3aea4:	63 00 00 a0 	load_u8 s3, (s3)
   3aea8:	84 00 00 a0 	load_u8 s4, (s4)
   3aeac:	00 80 fc c0 	move s0, s25
   3aeb0:	89 fe ff f9 	call -1500 <R_MakeSpans>
   3aeb4:	19 00 5d c1 	cmple_i s0, s25, s26
   3aeb8:	39 07 00 05 	add_i s25, s25, 1
   3aebc:	40 fe ff f5 	bnz s0, -56 <R_DrawPlanes+0x3e4>
   3aec0:	1e 20 02 a8 	load_32 s0, 136(sp)
   3aec4:	4a 1c 00 4f 	movehi s2, 234
   3aec8:	42 44 28 00 	or s2, s2, 2577
   3aecc:	00 00 00 a8 	load_32 s0, (s0)
   3aed0:	20 d0 ff a9 	load_32 s1, -12(s0)
   3aed4:	21 00 01 c1 	cmpeq_i s1, s1, s2
   3aed8:	21 01 00 f4 	bnz s1, 36 <R_DrawPlanes+0x45c>
   3aedc:	01 00 00 4f 	movehi s0, 1
   3aee0:	20 0c 07 0f 	move s1, 451
   3aee4:	3e 10 00 88 	store_32 s1, 4(sp)
   3aee8:	00 a8 7e 00 	or s0, s0, 8106
   3aeec:	1e 00 00 88 	store_32 s0, (sp)
   3aef0:	85 4c ff f9 	call -183788 <I_Error>
   3aef4:	1e 20 02 a8 	load_32 s0, 136(sp)
   3aef8:	00 00 00 a8 	load_32 s0, (s0)
   3aefc:	20 94 01 0f 	move s1, 101
   3af00:	90 48 00 f8 	call 74304 <Z_ChangeTag2>
   3af04:	1e 13 02 a8 	load_32 s24, 132(sp)
   3af08:	5e 03 02 a8 	load_32 s26, 128(sp)
   3af0c:	18 00 00 a8 	load_32 s0, (s24)
   3af10:	7b 63 0a 05 	add_i s27, s27, 664
   3af14:	1b 00 80 c1 	cmplt_u s0, s27, s0
   3af18:	a0 ed ff f5 	bnz s0, -588 <R_DrawPlanes+0x22c>
   3af1c:	fe b3 02 a8 	load_32 ra, 172(sp)
   3af20:	7e c3 02 a8 	load_32 s27, 176(sp)
   3af24:	5e d3 02 a8 	load_32 s26, 180(sp)
   3af28:	3e e3 02 a8 	load_32 s25, 184(sp)
   3af2c:	1e f3 02 a8 	load_32 s24, 188(sp)
   3af30:	de 03 03 05 	add_i sp, sp, 192
   3af34:	1f 00 00 f0 	ret

000000000003af38 R_RenderMaskedSegRange:
   3af38:	de 03 fe 05 	add_i sp, sp, -128
   3af3c:	1e f3 01 88 	store_32 s24, 124(sp)
   3af40:	3e e3 01 88 	store_32 s25, 120(sp)
   3af44:	5e d3 01 88 	store_32 s26, 116(sp)
   3af48:	7e c3 01 88 	store_32 s27, 112(sp)
   3af4c:	fe b3 01 88 	store_32 ra, 108(sp)
   3af50:	7c 04 00 4f 	movehi s3, 60
   3af54:	e0 00 00 a8 	load_32 s7, (s0)
   3af58:	9d 04 00 4f 	movehi s4, 61
   3af5c:	bd 04 00 4f 	movehi s5, 61
   3af60:	63 c0 02 00 	or s3, s3, 176
   3af64:	3e 05 00 4f 	movehi s9, 62
   3af68:	e3 00 00 88 	store_32 s7, (s3)
   3af6c:	64 e0 42 00 	or s3, s4, 4280
   3af70:	9c 04 00 4f 	movehi s4, 60
   3af74:	c7 60 00 a8 	load_32 s6, 24(s7)
   3af78:	c3 00 00 88 	store_32 s6, (s3)
   3af7c:	64 b0 02 00 	or s3, s4, 172
   3af80:	07 71 00 a8 	load_32 s8, 28(s7)
   3af84:	85 a0 48 00 	or s4, s5, 4648
   3af88:	03 01 00 88 	store_32 s8, (s3)
   3af8c:	64 00 00 a8 	load_32 s3, (s4)
   3af90:	a7 40 00 a8 	load_32 s5, 16(s7)
   3af94:	85 30 00 a6 	load_s16 s4, 12(s5)
   3af98:	84 08 00 0b 	shl s4, s4, 2
   3af9c:	63 00 52 c0 	add_i s3, s3, s4
   3afa0:	89 e0 50 00 	or s4, s9, 5176
   3afa4:	63 00 00 a8 	load_32 s3, (s3)
   3afa8:	7e a0 01 88 	store_32 s3, 104(sp)
   3afac:	26 31 00 a6 	load_s16 s9, 12(s6)
   3afb0:	44 01 00 a8 	load_32 s10, (s4)
   3afb4:	67 00 00 a8 	load_32 s3, (s7)
   3afb8:	29 11 00 09 	ashr s9, s9, 4
   3afbc:	2a 81 54 c0 	add_i s9, s10, s9
   3afc0:	63 11 00 a8 	load_32 s11, 4(s3)
   3afc4:	87 10 00 a8 	load_32 s4, 4(s7)
   3afc8:	84 11 00 a8 	load_32 s12, 4(s4)
   3afcc:	6b 01 06 c1 	cmpeq_i s11, s11, s12
   3afd0:	4b 00 00 f4 	bnz s11, 8 <R_RenderMaskedSegRange+0xa0>
   3afd4:	03 00 00 f6 	b 12 <R_RenderMaskedSegRange+0xa8>
   3afd8:	60 fc ff 0f 	move s3, -1
   3afdc:	05 00 00 f6 	b 20 <R_RenderMaskedSegRange+0xb8>
   3afe0:	63 00 00 a8 	load_32 s3, (s3)
   3afe4:	84 00 00 a8 	load_32 s4, (s4)
   3afe8:	63 00 02 c1 	cmpeq_i s3, s3, s4
   3afec:	63 04 00 01 	and s3, s3, 1
   3aff0:	29 81 51 c0 	add_i s9, s9, s3
   3aff4:	7e 04 00 4f 	movehi s3, 62
   3aff8:	89 00 00 14 	cmplt_i s4, s9, 0
   3affc:	e4 00 00 f4 	bnz s4, 28 <R_RenderMaskedSegRange+0xe0>
   3b000:	89 3c 00 12 	cmpgt_i s4, s9, 15
   3b004:	63 50 51 00 	or s3, s3, 5204
   3b008:	44 00 00 f4 	bnz s4, 8 <R_RenderMaskedSegRange+0xd8>
   3b00c:	05 00 00 f6 	b 20 <R_RenderMaskedSegRange+0xe8>
   3b010:	83 00 2d 05 	add_i s4, s3, 2880
   3b014:	05 00 00 f6 	b 20 <R_RenderMaskedSegRange+0xf0>
   3b018:	83 50 51 00 	or s4, s3, 5204
   3b01c:	03 00 00 f6 	b 12 <R_RenderMaskedSegRange+0xf0>
   3b020:	89 00 03 07 	mull_i s4, s9, 192
   3b024:	83 00 52 c0 	add_i s4, s3, s4
   3b028:	72 08 00 4f 	movehi s3, 82
   3b02c:	23 21 4b 00 	or s9, s3, 4808
   3b030:	3e 01 01 88 	store_32 s9, 64(sp)
   3b034:	72 08 00 4f 	movehi s3, 82
   3b038:	89 00 00 88 	store_32 s4, (s9)
   3b03c:	92 08 00 4f 	movehi s4, 82
   3b040:	23 c1 49 00 	or s9, s3, 4720
   3b044:	60 b0 00 a8 	load_32 s3, 44(s0)
   3b048:	3e 91 01 88 	store_32 s9, 100(sp)
   3b04c:	44 a1 4a 00 	or s10, s4, 4776
   3b050:	69 00 00 88 	store_32 s3, (s9)
   3b054:	80 50 00 a8 	load_32 s4, 20(s0)
   3b058:	5e 81 01 88 	store_32 s10, 96(sp)
   3b05c:	8a 00 00 88 	store_32 s4, (s10)
   3b060:	52 09 00 4f 	movehi s10, 82
   3b064:	60 31 00 a8 	load_32 s11, 12(s0)
   3b068:	20 11 00 a8 	load_32 s9, 4(s0)
   3b06c:	4a f3 6d 00 	or s26, s10, 7036
   3b070:	52 09 00 4f 	movehi s10, 82
   3b074:	21 81 64 c0 	sub_i s9, s1, s9
   3b078:	4a b1 4b 00 	or s10, s10, 4844
   3b07c:	29 01 72 c0 	mull_i s9, s9, s4
   3b080:	89 81 55 c0 	add_i s12, s9, s11
   3b084:	9a 01 00 88 	store_32 s12, (s26)
   3b088:	32 09 00 4f 	movehi s9, 82
   3b08c:	60 a1 00 a8 	load_32 s11, 40(s0)
   3b090:	29 c1 4b 00 	or s9, s9, 4848
   3b094:	69 01 00 88 	store_32 s11, (s9)
   3b098:	00 90 00 a8 	load_32 s0, 36(s0)
   3b09c:	0a 00 00 88 	store_32 s0, (s10)
   3b0a0:	07 50 00 a8 	load_32 s0, 20(s7)
   3b0a4:	00 40 00 a0 	load_u8 s0, 16(s0)
   3b0a8:	00 40 00 01 	and s0, s0, 16
   3b0ac:	40 00 00 f2 	bz s0, 8 <R_RenderMaskedSegRange+0x17c>
   3b0b0:	0a 00 00 f6 	b 40 <R_RenderMaskedSegRange+0x1a0>
   3b0b4:	06 10 00 a8 	load_32 s0, 4(s6)
   3b0b8:	c8 10 00 a8 	load_32 s6, 4(s8)
   3b0bc:	e0 00 43 c1 	cmplt_i s7, s0, s6
   3b0c0:	47 00 00 f4 	bnz s7, 8 <R_RenderMaskedSegRange+0x190>
   3b0c4:	00 00 f3 c0 	move s0, s6
   3b0c8:	de 04 00 4f 	movehi s6, 62
   3b0cc:	c6 f0 0e 00 	or s6, s6, 956
   3b0d0:	06 00 00 88 	store_32 s0, (s6)
   3b0d4:	11 00 00 f6 	b 68 <R_RenderMaskedSegRange+0x1e0>
   3b0d8:	06 00 00 a8 	load_32 s0, (s6)
   3b0dc:	c8 00 00 a8 	load_32 s6, (s8)
   3b0e0:	e0 00 23 c1 	cmpgt_i s7, s0, s6
   3b0e4:	47 00 00 f4 	bnz s7, 8 <R_RenderMaskedSegRange+0x1b4>
   3b0e8:	00 00 f3 c0 	move s0, s6
   3b0ec:	de 04 00 4f 	movehi s6, 62
   3b0f0:	fd 04 00 4f 	movehi s7, 61
   3b0f4:	c6 f0 0e 00 	or s6, s6, 956
   3b0f8:	e7 70 48 00 	or s7, s7, 4636
   3b0fc:	06 00 00 88 	store_32 s0, (s6)
   3b100:	c7 00 00 a8 	load_32 s6, (s7)
   3b104:	fe a0 01 a8 	load_32 s7, 104(sp)
   3b108:	e7 08 00 0b 	shl s7, s7, 2
   3b10c:	c6 80 53 c0 	add_i s6, s6, s7
   3b110:	c6 00 00 a8 	load_32 s6, (s6)
   3b114:	06 00 50 c0 	add_i s0, s6, s0
   3b118:	c1 08 00 4f 	movehi s6, 65
   3b11c:	fe 04 00 4f 	movehi s7, 62
   3b120:	1e 05 00 4f 	movehi s8, 62
   3b124:	c6 20 05 00 	or s6, s6, 328
   3b128:	c6 00 00 a8 	load_32 s6, (s6)
   3b12c:	a5 10 00 a8 	load_32 s5, 4(s5)
   3b130:	00 00 63 c0 	sub_i s0, s0, s6
   3b134:	c7 f0 0e 00 	or s6, s7, 956
   3b138:	de 70 01 88 	store_32 s6, 92(sp)
   3b13c:	e8 f0 50 00 	or s7, s8, 5180
   3b140:	05 00 50 c0 	add_i s0, s5, s0
   3b144:	06 00 00 88 	store_32 s0, (s6)
   3b148:	fe 60 01 88 	store_32 s7, 88(sp)
   3b14c:	07 00 00 a8 	load_32 s0, (s7)
   3b150:	80 00 00 f2 	bz s0, 16 <R_RenderMaskedSegRange+0x228>
   3b154:	be 04 00 4f 	movehi s5, 62
   3b158:	a5 c0 0e 00 	or s5, s5, 944
   3b15c:	05 00 00 88 	store_32 s0, (s5)
   3b160:	1e 04 00 4f 	movehi s0, 62
   3b164:	20 13 0f 00 	or s25, s0, 964
   3b168:	01 00 21 c1 	cmpgt_i s0, s1, s2
   3b16c:	39 00 00 88 	store_32 s1, (s25)
   3b170:	c0 09 00 f4 	bnz s0, 312 <R_RenderMaskedSegRange+0x370>
   3b174:	03 00 00 4f 	movehi s0, 3
   3b178:	a0 bc 00 0f 	move s5, 47
   3b17c:	be e0 00 88 	store_32 s5, 56(sp)
   3b180:	be 04 00 4f 	movehi s5, 62
   3b184:	00 ff 7f 00 	or s24, s0, 8191
   3b188:	1e 04 00 4f 	movehi s0, 62
   3b18c:	a5 a0 50 00 	or s5, s5, 5160
   3b190:	00 c0 0e 00 	or s0, s0, 944
   3b194:	1e f0 00 88 	store_32 s0, 60(sp)
   3b198:	12 08 00 4f 	movehi s0, 82
   3b19c:	be 40 01 88 	store_32 s5, 80(sp)
   3b1a0:	be 04 00 4f 	movehi s5, 62
   3b1a4:	00 e0 6d 00 	or s0, s0, 7032
   3b1a8:	1e 30 01 88 	store_32 s0, 76(sp)
   3b1ac:	00 fc ff 0f 	move s0, -1
   3b1b0:	1e 20 01 88 	store_32 s0, 72(sp)
   3b1b4:	05 d0 0e 00 	or s0, s5, 948
   3b1b8:	1e 10 01 88 	store_32 s0, 68(sp)
   3b1bc:	5e 50 01 88 	store_32 s2, 84(sp)
   3b1c0:	01 04 00 0b 	shl s0, s1, 1
   3b1c4:	03 00 50 c0 	add_i s0, s3, s0
   3b1c8:	00 00 00 a4 	load_u16 s0, (s0)
   3b1cc:	00 00 0c c1 	cmpeq_i s0, s0, s24
   3b1d0:	00 06 00 f4 	bnz s0, 192 <R_RenderMaskedSegRange+0x358>
   3b1d4:	1e 60 01 a8 	load_32 s0, 88(sp)
   3b1d8:	00 00 00 a8 	load_32 s0, (s0)
   3b1dc:	80 01 00 f4 	bnz s0, 48 <R_RenderMaskedSegRange+0x2d4>
   3b1e0:	0c 30 00 09 	ashr s0, s12, 12
   3b1e4:	20 bc 00 18 	cmplt_u s1, s0, 47
   3b1e8:	41 00 00 f4 	bnz s1, 8 <R_RenderMaskedSegRange+0x2b8>
   3b1ec:	1e e0 00 a8 	load_32 s0, 56(sp)
   3b1f0:	3e 00 01 a8 	load_32 s1, 64(sp)
   3b1f4:	00 08 00 0b 	shl s0, s0, 2
   3b1f8:	21 00 00 a8 	load_32 s1, (s1)
   3b1fc:	01 00 50 c0 	add_i s0, s1, s0
   3b200:	00 00 00 a8 	load_32 s0, (s0)
   3b204:	3e f0 00 a8 	load_32 s1, 60(sp)
   3b208:	01 00 00 88 	store_32 s0, (s1)
   3b20c:	1e 40 01 a8 	load_32 s0, 80(sp)
   3b210:	60 03 00 a8 	load_32 s27, (s0)
   3b214:	1e 70 01 a8 	load_32 s0, 92(sp)
   3b218:	00 00 00 a8 	load_32 s0, (s0)
   3b21c:	20 00 f6 c0 	move s1, s12
   3b220:	45 83 ff f9 	call -127724 <FixedMul>
   3b224:	3e 30 01 a8 	load_32 s1, 76(sp)
   3b228:	1b 00 60 c0 	sub_i s0, s27, s0
   3b22c:	01 00 00 88 	store_32 s0, (s1)
   3b230:	3a 00 00 a8 	load_32 s1, (s26)
   3b234:	1e 20 01 a8 	load_32 s0, 72(sp)
   3b238:	33 69 00 f8 	call 107724 <__udivsi3>
   3b23c:	3e 10 01 a8 	load_32 s1, 68(sp)
   3b240:	01 00 00 88 	store_32 s0, (s1)
   3b244:	7e 93 01 a8 	load_32 s27, 100(sp)
   3b248:	1b 00 00 a8 	load_32 s0, (s27)
   3b24c:	39 00 00 a8 	load_32 s1, (s25)
   3b250:	21 04 00 0b 	shl s1, s1, 1
   3b254:	00 80 50 c0 	add_i s0, s0, s1
   3b258:	20 00 00 a6 	load_s16 s1, (s0)
   3b25c:	1e a0 01 a8 	load_32 s0, 104(sp)
   3b260:	3b ee ff f9 	call -18196 <R_GetColumn>
   3b264:	00 f4 ff 05 	add_i s0, s0, -3
   3b268:	d2 06 00 f8 	call 6984 <R_DrawMaskedColumn>
   3b26c:	7b 00 00 a8 	load_32 s3, (s27)
   3b270:	39 00 00 a8 	load_32 s1, (s25)
   3b274:	01 04 00 0b 	shl s0, s1, 1
   3b278:	03 00 50 c0 	add_i s0, s3, s0
   3b27c:	00 03 00 86 	store_16 s24, (s0)
   3b280:	1e 80 01 a8 	load_32 s0, 96(sp)
   3b284:	80 00 00 a8 	load_32 s4, (s0)
   3b288:	9a 01 00 a8 	load_32 s12, (s26)
   3b28c:	5e 50 01 a8 	load_32 s2, 84(sp)
   3b290:	8c 01 52 c0 	add_i s12, s12, s4
   3b294:	9a 01 00 88 	store_32 s12, (s26)
   3b298:	01 00 41 c1 	cmplt_i s0, s1, s2
   3b29c:	21 04 00 05 	add_i s1, s1, 1
   3b2a0:	39 00 00 88 	store_32 s1, (s25)
   3b2a4:	e0 f8 ff f5 	bnz s0, -228 <R_RenderMaskedSegRange+0x288>
   3b2a8:	fe b3 01 a8 	load_32 ra, 108(sp)
   3b2ac:	7e c3 01 a8 	load_32 s27, 112(sp)
   3b2b0:	5e d3 01 a8 	load_32 s26, 116(sp)
   3b2b4:	3e e3 01 a8 	load_32 s25, 120(sp)
   3b2b8:	1e f3 01 a8 	load_32 s24, 124(sp)
   3b2bc:	de 03 02 05 	add_i sp, sp, 128
   3b2c0:	1f 00 00 f0 	ret

000000000003b2c4 R_RenderSegLoop:
   3b2c4:	de 03 fe 05 	add_i sp, sp, -128
   3b2c8:	1e f3 01 88 	store_32 s24, 124(sp)
   3b2cc:	3e e3 01 88 	store_32 s25, 120(sp)
   3b2d0:	5e d3 01 88 	store_32 s26, 116(sp)
   3b2d4:	7e c3 01 88 	store_32 s27, 112(sp)
   3b2d8:	fe b3 01 88 	store_32 ra, 108(sp)
   3b2dc:	12 08 00 4f 	movehi s0, 82
   3b2e0:	32 08 00 4f 	movehi s1, 82
   3b2e4:	20 d3 4a 00 	or s25, s0, 4788
   3b2e8:	21 b0 4a 00 	or s1, s1, 4780
   3b2ec:	19 00 00 a8 	load_32 s0, (s25)
   3b2f0:	3e 50 01 88 	store_32 s1, 84(sp)
   3b2f4:	21 00 00 a8 	load_32 s1, (s1)
   3b2f8:	20 80 30 c1 	cmpge_i s1, s0, s1
   3b2fc:	21 2c 00 f4 	bnz s1, 1412 <R_RenderSegLoop+0x5bc>
   3b300:	42 08 00 4f 	movehi s2, 66
   3b304:	32 08 00 4f 	movehi s1, 82
   3b308:	82 08 00 4f 	movehi s4, 66
   3b30c:	a2 60 4b 00 	or s5, s2, 4824
   3b310:	52 08 00 4f 	movehi s2, 82
   3b314:	21 f0 4a 00 	or s1, s1, 4796
   3b318:	3e 40 01 88 	store_32 s1, 80(sp)
   3b31c:	72 08 00 4f 	movehi s3, 82
   3b320:	42 90 49 00 	or s2, s2, 4708
   3b324:	21 00 00 a8 	load_32 s1, (s1)
   3b328:	5e 80 01 88 	store_32 s2, 96(sp)
   3b32c:	44 80 69 00 	or s2, s4, 6752
   3b330:	5e a0 01 88 	store_32 s2, 104(sp)
   3b334:	52 08 00 4f 	movehi s2, 82
   3b338:	c3 60 49 00 	or s6, s3, 4696
   3b33c:	72 08 00 4f 	movehi s3, 82
   3b340:	92 08 00 4f 	movehi s4, 82
   3b344:	42 a0 49 00 	or s2, s2, 4712
   3b348:	5e 70 01 88 	store_32 s2, 92(sp)
   3b34c:	43 e0 4a 00 	or s2, s3, 4792
   3b350:	5e 30 01 88 	store_32 s2, 76(sp)
   3b354:	44 d0 49 00 	or s2, s4, 4724
   3b358:	5e 20 01 88 	store_32 s2, 72(sp)
   3b35c:	52 08 00 4f 	movehi s2, 82
   3b360:	72 08 00 4f 	movehi s3, 82
   3b364:	92 08 00 4f 	movehi s4, 82
   3b368:	42 10 4b 00 	or s2, s2, 4804
   3b36c:	5e 00 01 88 	store_32 s2, 64(sp)
   3b370:	43 80 49 00 	or s2, s3, 4704
   3b374:	5e f0 00 88 	store_32 s2, 60(sp)
   3b378:	44 b0 49 00 	or s2, s4, 4716
   3b37c:	5e e0 00 88 	store_32 s2, 56(sp)
   3b380:	52 08 00 4f 	movehi s2, 82
   3b384:	72 08 00 4f 	movehi s3, 82
   3b388:	92 08 00 4f 	movehi s4, 82
   3b38c:	42 c0 49 00 	or s2, s2, 4720
   3b390:	5e d0 00 88 	store_32 s2, 52(sp)
   3b394:	43 00 4a 00 	or s2, s3, 4736
   3b398:	5e c0 00 88 	store_32 s2, 48(sp)
   3b39c:	44 10 4a 00 	or s2, s4, 4740
   3b3a0:	5e b0 00 88 	store_32 s2, 44(sp)
   3b3a4:	be 60 01 88 	store_32 s5, 88(sp)
   3b3a8:	de 10 01 88 	store_32 s6, 68(sp)
   3b3ac:	40 04 00 0b 	shl s2, s0, 1
   3b3b0:	65 00 51 c0 	add_i s3, s5, s2
   3b3b4:	81 fc 3f 05 	add_i s4, s1, 4095
   3b3b8:	23 00 00 a6 	load_s16 s1, (s3)
   3b3bc:	64 33 00 09 	ashr s27, s4, 12
   3b3c0:	7b 80 20 c1 	cmpgt_i s3, s27, s1
   3b3c4:	43 00 00 f4 	bnz s3, 8 <R_RenderSegLoop+0x108>
   3b3c8:	61 07 00 05 	add_i s27, s1, 1
   3b3cc:	7e 80 01 a8 	load_32 s3, 96(sp)
   3b3d0:	63 00 00 a8 	load_32 s3, (s3)
   3b3d4:	a3 02 00 f2 	bz s3, 84 <R_RenderSegLoop+0x164>
   3b3d8:	7e a0 01 a8 	load_32 s3, 104(sp)
   3b3dc:	43 00 51 c0 	add_i s2, s3, s2
   3b3e0:	42 00 00 a6 	load_s16 s2, (s2)
   3b3e4:	7b 00 21 c1 	cmpgt_i s3, s27, s2
   3b3e8:	43 00 00 f4 	bnz s3, 8 <R_RenderSegLoop+0x12c>
   3b3ec:	40 80 fd c0 	move s2, s27
   3b3f0:	42 fc ff 05 	add_i s2, s2, -1
   3b3f4:	62 80 50 c1 	cmple_i s3, s2, s1
   3b3f8:	83 01 00 f4 	bnz s3, 48 <R_RenderSegLoop+0x164>
   3b3fc:	62 08 00 4f 	movehi s3, 66
   3b400:	21 04 00 05 	add_i s1, s1, 1
   3b404:	63 70 55 00 	or s3, s3, 5468
   3b408:	83 00 00 a8 	load_32 s4, (s3)
   3b40c:	04 00 50 c0 	add_i s0, s4, s0
   3b410:	20 54 00 82 	store_8 s1, 21(s0)
   3b414:	03 00 00 a8 	load_32 s0, (s3)
   3b418:	39 00 00 a8 	load_32 s1, (s25)
   3b41c:	00 80 50 c0 	add_i s0, s0, s1
   3b420:	40 5c 05 82 	store_8 s2, 343(s0)
   3b424:	19 00 00 a8 	load_32 s0, (s25)
   3b428:	26 00 00 a8 	load_32 s1, (s6)
   3b42c:	40 04 00 0b 	shl s2, s0, 1
   3b430:	7e a0 01 a8 	load_32 s3, 104(sp)
   3b434:	41 33 00 09 	ashr s26, s1, 12
   3b438:	63 00 51 c0 	add_i s3, s3, s2
   3b43c:	63 00 00 a6 	load_s16 s3, (s3)
   3b440:	9a 80 41 c1 	cmplt_i s4, s26, s3
   3b444:	23 fc ff 05 	add_i s1, s3, -1
   3b448:	44 00 00 f4 	bnz s4, 8 <R_RenderSegLoop+0x18c>
   3b44c:	40 83 f0 c0 	move s26, s1
   3b450:	7e 70 01 a8 	load_32 s3, 92(sp)
   3b454:	63 00 00 a8 	load_32 s3, (s3)
   3b458:	43 02 00 f2 	bz s3, 72 <R_RenderSegLoop+0x1dc>
   3b45c:	45 00 51 c0 	add_i s2, s5, s2
   3b460:	42 00 00 a6 	load_s16 s2, (s2)
   3b464:	7a 00 41 c1 	cmplt_i s3, s26, s2
   3b468:	43 00 00 f4 	bnz s3, 8 <R_RenderSegLoop+0x1ac>
   3b46c:	40 00 fd c0 	move s2, s26
   3b470:	62 80 30 c1 	cmpge_i s3, s2, s1
   3b474:	63 01 00 f4 	bnz s3, 44 <R_RenderSegLoop+0x1dc>
   3b478:	62 08 00 4f 	movehi s3, 66
   3b47c:	42 04 00 05 	add_i s2, s2, 1
   3b480:	63 90 73 00 	or s3, s3, 7396
   3b484:	83 00 00 a8 	load_32 s4, (s3)
   3b488:	04 00 50 c0 	add_i s0, s4, s0
   3b48c:	40 54 00 82 	store_8 s2, 21(s0)
   3b490:	03 00 00 a8 	load_32 s0, (s3)
   3b494:	59 00 00 a8 	load_32 s2, (s25)
   3b498:	00 00 51 c0 	add_i s0, s0, s2
   3b49c:	20 5c 05 82 	store_8 s1, 343(s0)
   3b4a0:	1e 30 01 a8 	load_32 s0, 76(sp)
   3b4a4:	00 00 00 a8 	load_32 s0, (s0)
   3b4a8:	c0 06 00 f2 	bz s0, 216 <R_RenderSegLoop+0x2bc>
   3b4ac:	12 08 00 4f 	movehi s0, 82
   3b4b0:	21 08 00 4f 	movehi s1, 65
   3b4b4:	72 08 00 4f 	movehi s3, 82
   3b4b8:	00 40 4a 00 	or s0, s0, 4752
   3b4bc:	21 30 05 00 	or s1, s1, 332
   3b4c0:	00 00 00 a8 	load_32 s0, (s0)
   3b4c4:	59 00 00 a8 	load_32 s2, (s25)
   3b4c8:	42 08 00 0b 	shl s2, s2, 2
   3b4cc:	21 00 51 c0 	add_i s1, s1, s2
   3b4d0:	4b 04 00 4f 	movehi s2, 43
   3b4d4:	21 00 00 a8 	load_32 s1, (s1)
   3b4d8:	42 90 41 00 	or s2, s2, 4196
   3b4dc:	01 00 50 c0 	add_i s0, s1, s0
   3b4e0:	23 00 00 4f 	movehi s1, 3
   3b4e4:	00 44 00 0a 	shr s0, s0, 17
   3b4e8:	21 f0 7f 00 	or s1, s1, 8188
   3b4ec:	00 80 10 c0 	and s0, s0, s1
   3b4f0:	32 08 00 4f 	movehi s1, 82
   3b4f4:	02 00 50 c0 	add_i s0, s2, s0
   3b4f8:	43 50 4a 00 	or s2, s3, 4756
   3b4fc:	21 80 4a 00 	or s1, s1, 4768
   3b500:	01 03 00 a8 	load_32 s24, (s1)
   3b504:	00 00 00 a8 	load_32 s0, (s0)
   3b508:	22 00 00 a8 	load_32 s1, (s2)
   3b50c:	8a 82 ff f9 	call -128472 <FixedMul>
   3b510:	32 08 00 4f 	movehi s1, 82
   3b514:	18 00 60 c0 	sub_i s0, s24, s0
   3b518:	21 90 4a 00 	or s1, s1, 4772
   3b51c:	21 00 00 a8 	load_32 s1, (s1)
   3b520:	41 30 00 09 	ashr s2, s1, 12
   3b524:	62 bc 00 18 	cmplt_u s3, s2, 47
   3b528:	43 00 00 f4 	bnz s3, 8 <R_RenderSegLoop+0x26c>
   3b52c:	40 bc 00 0f 	move s2, 47
   3b530:	72 08 00 4f 	movehi s3, 82
   3b534:	00 40 00 09 	ashr s0, s0, 16
   3b538:	63 20 4b 00 	or s3, s3, 4808
   3b53c:	63 00 00 a8 	load_32 s3, (s3)
   3b540:	1e 90 01 88 	store_32 s0, 100(sp)
   3b544:	02 08 00 0b 	shl s0, s2, 2
   3b548:	5e 04 00 4f 	movehi s2, 62
   3b54c:	03 00 50 c0 	add_i s0, s3, s0
   3b550:	7e 04 00 4f 	movehi s3, 62
   3b554:	42 c0 0e 00 	or s2, s2, 944
   3b558:	00 00 00 a8 	load_32 s0, (s0)
   3b55c:	63 10 0f 00 	or s3, s3, 964
   3b560:	02 00 00 88 	store_32 s0, (s2)
   3b564:	19 00 00 a8 	load_32 s0, (s25)
   3b568:	03 00 00 88 	store_32 s0, (s3)
   3b56c:	00 fc ff 0f 	move s0, -1
   3b570:	65 68 00 f8 	call 106900 <__udivsi3>
   3b574:	3e 04 00 4f 	movehi s1, 62
   3b578:	21 d0 0e 00 	or s1, s1, 948
   3b57c:	01 00 00 88 	store_32 s0, (s1)
   3b580:	1e 20 01 a8 	load_32 s0, 72(sp)
   3b584:	00 00 00 a8 	load_32 s0, (s0)
   3b588:	80 04 00 f2 	bz s0, 144 <R_RenderSegLoop+0x354>
   3b58c:	3e 04 00 4f 	movehi s1, 62
   3b590:	52 08 00 4f 	movehi s2, 82
   3b594:	7e 04 00 4f 	movehi s3, 62
   3b598:	21 30 0f 00 	or s1, s1, 972
   3b59c:	42 60 4a 00 	or s2, s2, 4760
   3b5a0:	63 f0 0e 00 	or s3, s3, 956
   3b5a4:	61 03 00 88 	store_32 s27, (s1)
   3b5a8:	3e 04 00 4f 	movehi s1, 62
   3b5ac:	21 20 0f 00 	or s1, s1, 968
   3b5b0:	41 03 00 88 	store_32 s26, (s1)
   3b5b4:	22 00 00 a8 	load_32 s1, (s2)
   3b5b8:	23 00 00 88 	store_32 s1, (s3)
   3b5bc:	3e 90 01 a8 	load_32 s1, 100(sp)
   3b5c0:	63 ed ff f9 	call -19060 <R_GetColumn>
   3b5c4:	3e 04 00 4f 	movehi s1, 62
   3b5c8:	5e 04 00 4f 	movehi s2, 62
   3b5cc:	21 e0 0e 00 	or s1, s1, 952
   3b5d0:	42 c0 50 00 	or s2, s2, 5168
   3b5d4:	01 00 00 88 	store_32 s0, (s1)
   3b5d8:	02 00 00 a8 	load_32 s0, (s2)
   3b5dc:	00 00 00 fc 	call s0
   3b5e0:	1e 04 00 4f 	movehi s0, 62
   3b5e4:	87 00 00 4f 	movehi s4, 7
   3b5e8:	00 10 1c 00 	or s0, s0, 1796
   3b5ec:	20 00 00 a8 	load_32 s1, (s0)
   3b5f0:	19 00 00 a8 	load_32 s0, (s25)
   3b5f4:	be 60 01 a8 	load_32 s5, 88(sp)
   3b5f8:	de a0 01 a8 	load_32 s6, 104(sp)
   3b5fc:	40 04 00 0b 	shl s2, s0, 1
   3b600:	65 00 51 c0 	add_i s3, s5, s2
   3b604:	46 00 51 c0 	add_i s2, s6, s2
   3b608:	23 00 00 86 	store_16 s1, (s3)
   3b60c:	24 fc 7f 00 	or s1, s4, 8191
   3b610:	22 00 00 86 	store_16 s1, (s2)
   3b614:	7f 00 00 f6 	b 508 <R_RenderSegLoop+0x54c>
   3b618:	1e 00 01 a8 	load_32 s0, 64(sp)
   3b61c:	00 00 00 a8 	load_32 s0, (s0)
   3b620:	e0 02 00 f2 	bz s0, 92 <R_RenderSegLoop+0x3b8>
   3b624:	32 08 00 4f 	movehi s1, 82
   3b628:	52 08 00 4f 	movehi s2, 82
   3b62c:	21 e0 49 00 	or s1, s1, 4728
   3b630:	42 f0 49 00 	or s2, s2, 4732
   3b634:	61 00 00 a8 	load_32 s3, (s1)
   3b638:	42 00 00 a8 	load_32 s2, (s2)
   3b63c:	03 33 00 09 	ashr s24, s3, 12
   3b640:	42 80 51 c0 	add_i s2, s2, s3
   3b644:	41 00 00 88 	store_32 s2, (s1)
   3b648:	39 00 00 a8 	load_32 s1, (s25)
   3b64c:	9e a0 01 a8 	load_32 s4, 104(sp)
   3b650:	41 04 00 0b 	shl s2, s1, 1
   3b654:	44 00 51 c0 	add_i s2, s4, s2
   3b658:	42 00 00 a6 	load_s16 s2, (s2)
   3b65c:	78 00 41 c1 	cmplt_i s3, s24, s2
   3b660:	43 00 00 f4 	bnz s3, 8 <R_RenderSegLoop+0x3a4>
   3b664:	02 ff ff 05 	add_i s24, s2, -1
   3b668:	58 80 4d c1 	cmplt_i s2, s24, s27
   3b66c:	42 00 00 f4 	bnz s2, 8 <R_RenderSegLoop+0x3b0>
   3b670:	0a 00 00 f6 	b 40 <R_RenderSegLoop+0x3d4>
   3b674:	1b ff ff 05 	add_i s24, s27, -1
   3b678:	1e 00 00 f6 	b 120 <R_RenderSegLoop+0x42c>
   3b67c:	1e 80 01 a8 	load_32 s0, 96(sp)
   3b680:	00 00 00 a8 	load_32 s0, (s0)
   3b684:	be 60 01 a8 	load_32 s5, 88(sp)
   3b688:	c0 03 00 f2 	bz s0, 120 <R_RenderSegLoop+0x43c>
   3b68c:	39 00 00 a8 	load_32 s1, (s25)
   3b690:	1b ff ff 05 	add_i s24, s27, -1
   3b694:	18 00 00 f6 	b 96 <R_RenderSegLoop+0x430>
   3b698:	3e 04 00 4f 	movehi s1, 62
   3b69c:	52 08 00 4f 	movehi s2, 82
   3b6a0:	7e 04 00 4f 	movehi s3, 62
   3b6a4:	21 30 0f 00 	or s1, s1, 972
   3b6a8:	42 c0 4a 00 	or s2, s2, 4784
   3b6ac:	63 f0 0e 00 	or s3, s3, 956
   3b6b0:	61 03 00 88 	store_32 s27, (s1)
   3b6b4:	3e 04 00 4f 	movehi s1, 62
   3b6b8:	21 20 0f 00 	or s1, s1, 968
   3b6bc:	01 03 00 88 	store_32 s24, (s1)
   3b6c0:	22 00 00 a8 	load_32 s1, (s2)
   3b6c4:	23 00 00 88 	store_32 s1, (s3)
   3b6c8:	3e 90 01 a8 	load_32 s1, 100(sp)
   3b6cc:	20 ed ff f9 	call -19328 <R_GetColumn>
   3b6d0:	3e 04 00 4f 	movehi s1, 62
   3b6d4:	5e 04 00 4f 	movehi s2, 62
   3b6d8:	21 e0 0e 00 	or s1, s1, 952
   3b6dc:	42 c0 50 00 	or s2, s2, 5168
   3b6e0:	01 00 00 88 	store_32 s0, (s1)
   3b6e4:	02 00 00 a8 	load_32 s0, (s2)
   3b6e8:	00 00 00 fc 	call s0
   3b6ec:	39 00 00 a8 	load_32 s1, (s25)
   3b6f0:	be 60 01 a8 	load_32 s5, 88(sp)
   3b6f4:	01 04 00 0b 	shl s0, s1, 1
   3b6f8:	05 00 50 c0 	add_i s0, s5, s0
   3b6fc:	00 03 00 86 	store_16 s24, (s0)
   3b700:	1e f0 00 a8 	load_32 s0, 60(sp)
   3b704:	00 00 00 a8 	load_32 s0, (s0)
   3b708:	a0 02 00 f2 	bz s0, 84 <R_RenderSegLoop+0x498>
   3b70c:	7e c0 00 a8 	load_32 s3, 48(sp)
   3b710:	43 00 00 a8 	load_32 s2, (s3)
   3b714:	3e b0 00 a8 	load_32 s1, 44(sp)
   3b718:	82 fc 3f 05 	add_i s4, s2, 4095
   3b71c:	21 00 00 a8 	load_32 s1, (s1)
   3b720:	04 33 00 09 	ashr s24, s4, 12
   3b724:	21 00 51 c0 	add_i s1, s1, s2
   3b728:	23 00 00 88 	store_32 s1, (s3)
   3b72c:	39 00 00 a8 	load_32 s1, (s25)
   3b730:	61 04 00 0b 	shl s3, s1, 1
   3b734:	65 80 51 c0 	add_i s3, s5, s3
   3b738:	43 00 00 a6 	load_s16 s2, (s3)
   3b73c:	78 00 21 c1 	cmpgt_i s3, s24, s2
   3b740:	43 00 00 f4 	bnz s3, 8 <R_RenderSegLoop+0x484>
   3b744:	02 07 00 05 	add_i s24, s2, 1
   3b748:	58 00 2d c1 	cmpgt_i s2, s24, s26
   3b74c:	42 00 00 f4 	bnz s2, 8 <R_RenderSegLoop+0x490>
   3b750:	08 00 00 f6 	b 32 <R_RenderSegLoop+0x4ac>
   3b754:	1a 07 00 05 	add_i s24, s26, 1
   3b758:	1d 00 00 f6 	b 116 <R_RenderSegLoop+0x508>
   3b75c:	1e 70 01 a8 	load_32 s0, 92(sp)
   3b760:	00 00 00 a8 	load_32 s0, (s0)
   3b764:	c0 03 00 f2 	bz s0, 120 <R_RenderSegLoop+0x518>
   3b768:	1a 07 00 05 	add_i s24, s26, 1
   3b76c:	17 00 00 f6 	b 92 <R_RenderSegLoop+0x504>
   3b770:	3e 04 00 4f 	movehi s1, 62
   3b774:	52 08 00 4f 	movehi s2, 82
   3b778:	7e 04 00 4f 	movehi s3, 62
   3b77c:	21 30 0f 00 	or s1, s1, 972
   3b780:	42 30 4a 00 	or s2, s2, 4748
   3b784:	63 f0 0e 00 	or s3, s3, 956
   3b788:	01 03 00 88 	store_32 s24, (s1)
   3b78c:	3e 04 00 4f 	movehi s1, 62
   3b790:	21 20 0f 00 	or s1, s1, 968
   3b794:	41 03 00 88 	store_32 s26, (s1)
   3b798:	22 00 00 a8 	load_32 s1, (s2)
   3b79c:	23 00 00 88 	store_32 s1, (s3)
   3b7a0:	3e 90 01 a8 	load_32 s1, 100(sp)
   3b7a4:	ea ec ff f9 	call -19544 <R_GetColumn>
   3b7a8:	3e 04 00 4f 	movehi s1, 62
   3b7ac:	5e 04 00 4f 	movehi s2, 62
   3b7b0:	21 e0 0e 00 	or s1, s1, 952
   3b7b4:	42 c0 50 00 	or s2, s2, 5168
   3b7b8:	01 00 00 88 	store_32 s0, (s1)
   3b7bc:	02 00 00 a8 	load_32 s0, (s2)
   3b7c0:	00 00 00 fc 	call s0
   3b7c4:	be 60 01 a8 	load_32 s5, 88(sp)
   3b7c8:	39 00 00 a8 	load_32 s1, (s25)
   3b7cc:	01 04 00 0b 	shl s0, s1, 1
   3b7d0:	3e a0 01 a8 	load_32 s1, 104(sp)
   3b7d4:	01 00 50 c0 	add_i s0, s1, s0
   3b7d8:	00 03 00 86 	store_16 s24, (s0)
   3b7dc:	1e e0 00 a8 	load_32 s0, 56(sp)
   3b7e0:	00 00 00 a8 	load_32 s0, (s0)
   3b7e4:	40 00 00 f4 	bnz s0, 8 <R_RenderSegLoop+0x528>
   3b7e8:	09 00 00 f6 	b 36 <R_RenderSegLoop+0x548>
   3b7ec:	1e d0 00 a8 	load_32 s0, 52(sp)
   3b7f0:	20 00 00 a8 	load_32 s1, (s0)
   3b7f4:	19 00 00 a8 	load_32 s0, (s25)
   3b7f8:	40 04 00 0b 	shl s2, s0, 1
   3b7fc:	21 00 51 c0 	add_i s1, s1, s2
   3b800:	5e 90 01 a8 	load_32 s2, 100(sp)
   3b804:	41 00 00 86 	store_16 s2, (s1)
   3b808:	02 00 00 f6 	b 8 <R_RenderSegLoop+0x54c>
   3b80c:	19 00 00 a8 	load_32 s0, (s25)
   3b810:	32 08 00 4f 	movehi s1, 82
   3b814:	de 10 01 a8 	load_32 s6, 68(sp)
   3b818:	52 08 00 4f 	movehi s2, 82
   3b81c:	92 08 00 4f 	movehi s4, 82
   3b820:	21 a0 4a 00 	or s1, s1, 4776
   3b824:	42 90 4a 00 	or s2, s2, 4772
   3b828:	84 00 4b 00 	or s4, s4, 4800
   3b82c:	21 00 00 a8 	load_32 s1, (s1)
   3b830:	00 04 00 05 	add_i s0, s0, 1
   3b834:	62 00 00 a8 	load_32 s3, (s2)
   3b838:	23 80 50 c0 	add_i s1, s3, s1
   3b83c:	22 00 00 88 	store_32 s1, (s2)
   3b840:	24 00 00 a8 	load_32 s1, (s4)
   3b844:	72 08 00 4f 	movehi s3, 82
   3b848:	9e 40 01 a8 	load_32 s4, 80(sp)
   3b84c:	63 70 49 00 	or s3, s3, 4700
   3b850:	44 00 00 a8 	load_32 s2, (s4)
   3b854:	22 80 50 c0 	add_i s1, s2, s1
   3b858:	24 00 00 88 	store_32 s1, (s4)
   3b85c:	43 00 00 a8 	load_32 s2, (s3)
   3b860:	66 00 00 a8 	load_32 s3, (s6)
   3b864:	43 00 51 c0 	add_i s2, s3, s2
   3b868:	46 00 00 88 	store_32 s2, (s6)
   3b86c:	19 00 00 88 	store_32 s0, (s25)
   3b870:	5e 50 01 a8 	load_32 s2, 84(sp)
   3b874:	42 00 00 a8 	load_32 s2, (s2)
   3b878:	40 00 41 c1 	cmplt_i s2, s0, s2
   3b87c:	82 d9 ff f5 	bnz s2, -1232 <R_RenderSegLoop+0xe8>
   3b880:	fe b3 01 a8 	load_32 ra, 108(sp)
   3b884:	7e c3 01 a8 	load_32 s27, 112(sp)
   3b888:	5e d3 01 a8 	load_32 s26, 116(sp)
   3b88c:	3e e3 01 a8 	load_32 s25, 120(sp)
   3b890:	1e f3 01 a8 	load_32 s24, 124(sp)
   3b894:	de 03 02 05 	add_i sp, sp, 128
   3b898:	1f 00 00 f0 	ret

000000000003b89c R_StoreWallRange:
   3b89c:	de 03 fd 05 	add_i sp, sp, -192
   3b8a0:	1e f3 02 88 	store_32 s24, 188(sp)
   3b8a4:	3e e3 02 88 	store_32 s25, 184(sp)
   3b8a8:	5e d3 02 88 	store_32 s26, 180(sp)
   3b8ac:	7e c3 02 88 	store_32 s27, 176(sp)
   3b8b0:	fe b3 02 88 	store_32 ra, 172(sp)
   3b8b4:	5d 04 00 4f 	movehi s2, 61
   3b8b8:	81 00 00 4f 	movehi s4, 1
   3b8bc:	22 d3 42 00 	or s25, s2, 4276
   3b8c0:	5c 04 00 4f 	movehi s2, 60
   3b8c4:	84 00 40 00 	or s4, s4, 4096
   3b8c8:	79 00 00 a8 	load_32 s3, (s25)
   3b8cc:	40 83 f0 c0 	move s26, s1
   3b8d0:	42 d0 02 00 	or s2, s2, 180
   3b8d4:	60 03 f0 c0 	move s27, s0
   3b8d8:	42 00 52 c0 	add_i s2, s2, s4
   3b8dc:	43 00 01 c1 	cmpeq_i s2, s3, s2
   3b8e0:	82 5d 00 f4 	bnz s2, 2992 <R_StoreWallRange+0xbf4>
   3b8e4:	1e 04 00 4f 	movehi s0, 62
   3b8e8:	3a 80 4d c1 	cmplt_i s1, s26, s27
   3b8ec:	00 30 1c 00 	or s0, s0, 1804
   3b8f0:	00 00 00 a8 	load_32 s0, (s0)
   3b8f4:	61 00 00 f4 	bnz s1, 12 <R_StoreWallRange+0x64>
   3b8f8:	00 80 2d c1 	cmpgt_i s0, s0, s27
   3b8fc:	e0 00 00 f4 	bnz s0, 28 <R_StoreWallRange+0x7c>
   3b900:	01 00 00 4f 	movehi s0, 1
   3b904:	5e 23 00 88 	store_32 s26, 8(sp)
   3b908:	7e 13 00 88 	store_32 s27, 4(sp)
   3b90c:	00 d4 2f 00 	or s0, s0, 3061
   3b910:	1e 00 00 88 	store_32 s0, (sp)
   3b914:	fc 49 ff f9 	call -186384 <I_Error>
   3b918:	1c 04 00 4f 	movehi s0, 60
   3b91c:	3d 04 00 4f 	movehi s1, 61
   3b920:	5d 04 00 4f 	movehi s2, 61
   3b924:	00 c0 02 00 	or s0, s0, 176
   3b928:	1e 30 02 88 	store_32 s0, 140(sp)
   3b92c:	61 10 43 00 	or s3, s1, 4292
   3b930:	42 f0 42 00 	or s2, s2, 4284
   3b934:	00 00 00 a8 	load_32 s0, (s0)
   3b938:	92 08 00 4f 	movehi s4, 82
   3b93c:	20 40 00 a8 	load_32 s1, 16(s0)
   3b940:	7e 90 02 88 	store_32 s3, 164(sp)
   3b944:	23 00 00 88 	store_32 s1, (s3)
   3b948:	72 08 00 4f 	movehi s3, 82
   3b94c:	20 50 00 a8 	load_32 s1, 20(s0)
   3b950:	5e e0 01 88 	store_32 s2, 120(sp)
   3b954:	22 00 00 88 	store_32 s1, (s2)
   3b958:	a3 70 4a 00 	or s5, s3, 4764
   3b95c:	64 20 4a 00 	or s3, s4, 4744
   3b960:	41 40 00 a6 	load_s16 s2, 16(s1)
   3b964:	42 00 04 00 	or s2, s2, 256
   3b968:	41 40 00 86 	store_16 s2, 16(s1)
   3b96c:	40 30 00 a8 	load_32 s2, 12(s0)
   3b970:	20 00 40 4f 	movehi s1, 131072
   3b974:	be 10 02 88 	store_32 s5, 132(sp)
   3b978:	42 80 50 c0 	add_i s2, s2, s1
   3b97c:	45 00 00 88 	store_32 s2, (s5)
   3b980:	7e 20 02 88 	store_32 s3, 136(sp)
   3b984:	63 00 00 a8 	load_32 s3, (s3)
   3b988:	42 80 61 c0 	sub_i s2, s2, s3
   3b98c:	62 7c 00 09 	ashr s3, s2, 31
   3b990:	42 80 51 c0 	add_i s2, s2, s3
   3b994:	42 80 31 c0 	xor s2, s2, s3
   3b998:	62 80 80 c1 	cmplt_u s3, s2, s1
   3b99c:	43 00 00 f4 	bnz s3, 8 <R_StoreWallRange+0x108>
   3b9a0:	40 80 f0 c0 	move s2, s1
   3b9a4:	60 00 00 a8 	load_32 s3, (s0)
   3b9a8:	01 03 61 c0 	sub_i s24, s1, s2
   3b9ac:	03 00 00 a8 	load_32 s0, (s3)
   3b9b0:	23 10 00 a8 	load_32 s1, 4(s3)
   3b9b4:	7b f6 ff f9 	call -9748 <R_PointToDist>
   3b9b8:	2d 04 00 4f 	movehi s1, 45
   3b9bc:	43 00 00 4f 	movehi s2, 3
   3b9c0:	78 44 00 0a 	shr s3, s24, 17
   3b9c4:	81 90 41 00 	or s4, s1, 4196
   3b9c8:	22 f0 7f 00 	or s1, s2, 8188
   3b9cc:	3e b0 01 88 	store_32 s1, 108(sp)
   3b9d0:	23 80 10 c0 	and s1, s3, s1
   3b9d4:	9e c0 01 88 	store_32 s4, 112(sp)
   3b9d8:	24 80 50 c0 	add_i s1, s4, s1
   3b9dc:	21 00 00 a8 	load_32 s1, (s1)
   3b9e0:	1e d0 01 88 	store_32 s0, 116(sp)
   3b9e4:	54 81 ff f9 	call -129712 <FixedMul>
   3b9e8:	32 08 00 4f 	movehi s1, 82
   3b9ec:	52 08 00 4f 	movehi s2, 82
   3b9f0:	7f 04 00 4f 	movehi s3, 63
   3b9f4:	21 50 4a 00 	or s1, s1, 4756
   3b9f8:	42 d0 4a 00 	or s2, s2, 4788
   3b9fc:	03 b3 04 00 	or s24, s3, 300
   3ba00:	01 00 00 88 	store_32 s0, (s1)
   3ba04:	5e 60 02 88 	store_32 s2, 152(sp)
   3ba08:	62 03 00 88 	store_32 s27, (s2)
   3ba0c:	41 08 00 4f 	movehi s2, 65
   3ba10:	19 00 00 a8 	load_32 s0, (s25)
   3ba14:	42 30 05 00 	or s2, s2, 332
   3ba18:	60 13 00 88 	store_32 s27, 4(s0)
   3ba1c:	40 23 00 88 	store_32 s26, 8(s0)
   3ba20:	3e 30 02 a8 	load_32 s1, 140(sp)
   3ba24:	21 00 00 a8 	load_32 s1, (s1)
   3ba28:	20 00 00 88 	store_32 s1, (s0)
   3ba2c:	32 08 00 4f 	movehi s1, 82
   3ba30:	1a 04 00 05 	add_i s0, s26, 1
   3ba34:	5e 70 02 88 	store_32 s2, 156(sp)
   3ba38:	81 b0 4a 00 	or s4, s1, 4780
   3ba3c:	9e 80 02 88 	store_32 s4, 160(sp)
   3ba40:	3b 08 00 0b 	shl s1, s27, 2
   3ba44:	22 80 50 c0 	add_i s1, s2, s1
   3ba48:	04 00 00 88 	store_32 s0, (s4)
   3ba4c:	18 00 00 a8 	load_32 s0, (s24)
   3ba50:	21 00 00 a8 	load_32 s1, (s1)
   3ba54:	01 00 50 c0 	add_i s0, s1, s0
   3ba58:	82 f6 ff f9 	call -9720 <R_ScaleFromGlobalAngle>
   3ba5c:	32 08 00 4f 	movehi s1, 82
   3ba60:	41 90 4a 00 	or s2, s1, 4772
   3ba64:	3a 80 5d c1 	cmple_i s1, s26, s27
   3ba68:	02 00 00 88 	store_32 s0, (s2)
   3ba6c:	79 02 00 a8 	load_32 s19, (s25)
   3ba70:	60 00 fd c0 	move s3, s26
   3ba74:	13 30 00 88 	store_32 s0, 12(s19)
   3ba78:	7e 53 02 88 	store_32 s27, 148(sp)
   3ba7c:	5e 40 02 88 	store_32 s2, 144(sp)
   3ba80:	3e a3 02 88 	store_32 s25, 168(sp)
   3ba84:	1e a3 01 88 	store_32 s24, 104(sp)
   3ba88:	c1 02 00 f4 	bnz s1, 88 <R_StoreWallRange+0x244>
   3ba8c:	40 83 f1 c0 	move s26, s3
   3ba90:	3e 70 02 a8 	load_32 s1, 156(sp)
   3ba94:	1a 08 00 0b 	shl s0, s26, 2
   3ba98:	01 00 50 c0 	add_i s0, s1, s0
   3ba9c:	38 00 00 a8 	load_32 s1, (s24)
   3baa0:	00 00 00 a8 	load_32 s0, (s0)
   3baa4:	00 03 f1 c0 	move s24, s2
   3baa8:	00 80 50 c0 	add_i s0, s0, s1
   3baac:	6d f6 ff f9 	call -9804 <R_ScaleFromGlobalAngle>
   3bab0:	39 03 00 a8 	load_32 s25, (s25)
   3bab4:	19 40 00 88 	store_32 s0, 16(s25)
   3bab8:	38 00 00 a8 	load_32 s1, (s24)
   3babc:	00 80 60 c0 	sub_i s0, s0, s1
   3bac0:	3a 80 6d c0 	sub_i s1, s26, s27
   3bac4:	e5 63 00 f8 	call 102292 <__divsi3>
   3bac8:	32 08 00 4f 	movehi s1, 82
   3bacc:	60 82 fc c0 	move s19, s25
   3bad0:	21 a0 4a 00 	or s1, s1, 4776
   3bad4:	01 00 00 88 	store_32 s0, (s1)
   3bad8:	13 50 00 88 	store_32 s0, 20(s19)
   3badc:	02 00 00 f6 	b 8 <R_StoreWallRange+0x248>
   3bae0:	13 40 00 88 	store_32 s0, 16(s19)
   3bae4:	1d 04 00 4f 	movehi s0, 61
   3bae8:	3e 93 02 a8 	load_32 s25, 164(sp)
   3baec:	21 08 00 4f 	movehi s1, 65
   3baf0:	72 08 00 4f 	movehi s3, 82
   3baf4:	60 e3 42 00 	or s27, s0, 4280
   3baf8:	41 23 05 00 	or s26, s1, 328
   3bafc:	32 08 00 4f 	movehi s1, 82
   3bb00:	1b 00 00 a8 	load_32 s0, (s27)
   3bb04:	a3 30 4b 00 	or s5, s3, 4812
   3bb08:	20 01 00 0f 	move s9, 0
   3bb0c:	81 62 4b 00 	or s20, s1, 4824
   3bb10:	5c 05 00 4f 	movehi s10, 60
   3bb14:	80 10 00 a8 	load_32 s4, 4(s0)
   3bb18:	fa 00 00 a8 	load_32 s7, (s26)
   3bb1c:	ea b1 02 00 	or s15, s10, 172
   3bb20:	24 80 63 c0 	sub_i s1, s4, s7
   3bb24:	34 00 00 88 	store_32 s1, (s20)
   3bb28:	40 00 00 a8 	load_32 s2, (s0)
   3bb2c:	be 90 02 88 	store_32 s5, 164(sp)
   3bb30:	62 80 63 c0 	sub_i s3, s2, s7
   3bb34:	65 00 00 88 	store_32 s3, (s5)
   3bb38:	52 08 00 4f 	movehi s2, 82
   3bb3c:	b2 08 00 4f 	movehi s5, 82
   3bb40:	c2 b0 49 00 	or s6, s2, 4716
   3bb44:	de 70 02 88 	store_32 s6, 156(sp)
   3bb48:	45 80 49 00 	or s2, s5, 4704
   3bb4c:	b2 08 00 4f 	movehi s5, 82
   3bb50:	26 01 00 88 	store_32 s9, (s6)
   3bb54:	d2 08 00 4f 	movehi s6, 82
   3bb58:	22 01 00 88 	store_32 s9, (s2)
   3bb5c:	a5 10 4b 00 	or s5, s5, 4804
   3bb60:	06 d1 49 00 	or s8, s6, 4724
   3bb64:	25 01 00 88 	store_32 s9, (s5)
   3bb68:	28 01 00 88 	store_32 s9, (s8)
   3bb6c:	33 b1 00 88 	store_32 s9, 44(s19)
   3bb70:	cf 00 00 a8 	load_32 s6, (s15)
   3bb74:	fe f1 01 88 	store_32 s15, 124(sp)
   3bb78:	46 00 00 f4 	bnz s6, 8 <R_StoreWallRange+0x2e4>
   3bb7c:	1a 00 00 f6 	b 104 <R_StoreWallRange+0x348>
   3bb80:	33 a1 00 88 	store_32 s9, 40(s19)
   3bb84:	33 91 00 88 	store_32 s9, 36(s19)
   3bb88:	33 61 00 88 	store_32 s9, 24(s19)
   3bb8c:	60 01 00 a8 	load_32 s11, (s0)
   3bb90:	46 01 00 a8 	load_32 s10, (s6)
   3bb94:	00 81 f5 c0 	move s8, s11
   3bb98:	8b 01 25 c1 	cmpgt_i s12, s11, s10
   3bb9c:	ac 00 00 f4 	bnz s12, 20 <R_StoreWallRange+0x314>
   3bba0:	0a 81 53 c1 	cmple_i s8, s10, s7
   3bba4:	c8 00 00 f4 	bnz s8, 24 <R_StoreWallRange+0x320>
   3bba8:	1f fd 7f 4f 	movehi s8, 262143
   3bbac:	08 fd 7f 00 	or s8, s8, 8191
   3bbb0:	20 05 00 0f 	move s9, 1
   3bbb4:	33 61 00 88 	store_32 s9, 24(s19)
   3bbb8:	13 71 00 88 	store_32 s8, 28(s19)
   3bbbc:	06 11 00 a8 	load_32 s8, 4(s6)
   3bbc0:	84 01 34 c1 	cmpge_i s12, s4, s8
   3bbc4:	6c 07 00 f4 	bnz s12, 236 <R_StoreWallRange+0x414>
   3bbc8:	29 09 00 00 	or s9, s9, 2
   3bbcc:	80 01 f2 c0 	move s12, s4
   3bbd0:	33 61 00 88 	store_32 s9, 24(s19)
   3bbd4:	93 81 00 88 	store_32 s12, 32(s19)
   3bbd8:	68 81 25 c1 	cmpgt_i s11, s8, s11
   3bbdc:	6b 07 00 f4 	bnz s11, 236 <R_StoreWallRange+0x42c>
   3bbe0:	c2 00 00 f6 	b 776 <R_StoreWallRange+0x64c>
   3bbe4:	5d 04 00 4f 	movehi s2, 61
   3bbe8:	b2 08 00 4f 	movehi s5, 82
   3bbec:	d2 08 00 4f 	movehi s6, 82
   3bbf0:	42 a0 48 00 	or s2, s2, 4648
   3bbf4:	a5 90 49 00 	or s5, s5, 4708
   3bbf8:	c6 a0 49 00 	or s6, s6, 4712
   3bbfc:	42 00 00 a8 	load_32 s2, (s2)
   3bc00:	79 00 00 a8 	load_32 s3, (s25)
   3bc04:	83 30 00 a6 	load_s16 s4, 12(s3)
   3bc08:	84 08 00 0b 	shl s4, s4, 2
   3bc0c:	42 00 52 c0 	add_i s2, s2, s4
   3bc10:	42 00 00 a8 	load_32 s2, (s2)
   3bc14:	48 00 00 88 	store_32 s2, (s8)
   3bc18:	00 05 00 0f 	move s8, 1
   3bc1c:	05 01 00 88 	store_32 s8, (s5)
   3bc20:	06 01 00 88 	store_32 s8, (s6)
   3bc24:	be e0 01 a8 	load_32 s5, 120(sp)
   3bc28:	a5 00 00 a8 	load_32 s5, (s5)
   3bc2c:	a5 40 00 a0 	load_u8 s5, 16(s5)
   3bc30:	a5 40 00 01 	and s5, s5, 16
   3bc34:	25 01 00 f2 	bz s5, 36 <R_StoreWallRange+0x3bc>
   3bc38:	3d 04 00 4f 	movehi s1, 61
   3bc3c:	a0 00 00 a8 	load_32 s5, (s0)
   3bc40:	21 70 48 00 	or s1, s1, 4636
   3bc44:	21 00 00 a8 	load_32 s1, (s1)
   3bc48:	21 00 52 c0 	add_i s1, s1, s4
   3bc4c:	85 80 63 c0 	sub_i s4, s5, s7
   3bc50:	21 00 00 a8 	load_32 s1, (s1)
   3bc54:	24 80 50 c0 	add_i s1, s4, s1
   3bc58:	92 08 00 4f 	movehi s4, 82
   3bc5c:	63 10 00 a8 	load_32 s3, 4(s3)
   3bc60:	84 60 4a 00 	or s4, s4, 4760
   3bc64:	23 80 50 c0 	add_i s1, s3, s1
   3bc68:	60 0c 00 0f 	move s3, 3
   3bc6c:	24 00 00 88 	store_32 s1, (s4)
   3bc70:	32 08 00 4f 	movehi s1, 82
   3bc74:	73 60 00 88 	store_32 s3, 24(s19)
   3bc78:	72 08 00 4f 	movehi s3, 82
   3bc7c:	21 00 57 00 	or s1, s1, 5568
   3bc80:	33 90 00 88 	store_32 s1, 36(s19)
   3bc84:	3f fc 7f 4f 	movehi s1, 262143
   3bc88:	63 d0 4b 00 	or s3, s3, 4852
   3bc8c:	73 a0 00 88 	store_32 s3, 40(s19)
   3bc90:	60 00 80 4f 	movehi s3, 262144
   3bc94:	21 fc 7f 00 	or s1, s1, 8191
   3bc98:	33 70 00 88 	store_32 s1, 28(s19)
   3bc9c:	20 00 00 0f 	move s1, 0
   3bca0:	73 80 00 88 	store_32 s3, 32(s19)
   3bca4:	60 80 f0 c0 	move s3, s1
   3bca8:	80 80 f0 c0 	move s4, s1
   3bcac:	c0 00 00 f6 	b 768 <R_StoreWallRange+0x710>
   3bcb0:	88 81 33 c1 	cmpge_i s12, s8, s7
   3bcb4:	4c 00 00 f4 	bnz s12, 8 <R_StoreWallRange+0x420>
   3bcb8:	86 00 00 f6 	b 536 <R_StoreWallRange+0x634>
   3bcbc:	68 81 25 c1 	cmpgt_i s11, s8, s11
   3bcc0:	4b 00 00 f4 	bnz s11, 8 <R_StoreWallRange+0x42c>
   3bcc4:	89 00 00 f6 	b 548 <R_StoreWallRange+0x64c>
   3bcc8:	4a 01 42 c1 	cmplt_i s10, s10, s4
   3bccc:	0a 01 00 f4 	bnz s10, 32 <R_StoreWallRange+0x450>
   3bcd0:	52 09 00 4f 	movehi s10, 82
   3bcd4:	29 09 00 00 	or s9, s9, 2
   3bcd8:	4a 01 57 00 	or s10, s10, 5568
   3bcdc:	53 91 00 88 	store_32 s10, 36(s19)
   3bce0:	40 01 80 4f 	movehi s10, 262144
   3bce4:	53 81 00 88 	store_32 s10, 32(s19)
   3bce8:	33 61 00 88 	store_32 s9, 24(s19)
   3bcec:	32 09 00 4f 	movehi s9, 82
   3bcf0:	72 09 00 4f 	movehi s11, 82
   3bcf4:	92 09 00 4f 	movehi s12, 82
   3bcf8:	49 41 4b 00 	or s10, s9, 4816
   3bcfc:	28 81 63 c0 	sub_i s9, s8, s7
   3bd00:	6b 51 4b 00 	or s11, s11, 4820
   3bd04:	2a 01 00 88 	store_32 s9, (s10)
   3bd08:	8c 71 4b 00 	or s12, s12, 4828
   3bd0c:	46 01 00 a8 	load_32 s10, (s6)
   3bd10:	ea 80 63 c0 	sub_i s7, s10, s7
   3bd14:	eb 00 00 88 	store_32 s7, (s11)
   3bd18:	40 29 00 a6 	load_s16 s10, 10(s0)
   3bd1c:	6c 01 00 a8 	load_32 s11, (s12)
   3bd20:	6b 01 15 c1 	cmpne_i s11, s11, s10
   3bd24:	2b 01 00 f4 	bnz s11, 36 <R_StoreWallRange+0x4ac>
   3bd28:	67 01 00 4f 	movehi s11, 7
   3bd2c:	86 29 00 a4 	load_u16 s12, 10(s6)
   3bd30:	6b fd 7f 00 	or s11, s11, 8191
   3bd34:	6a 81 15 c0 	and s11, s10, s11
   3bd38:	6b 01 16 c1 	cmpne_i s11, s11, s12
   3bd3c:	6b 00 00 f4 	bnz s11, 12 <R_StoreWallRange+0x4ac>
   3bd40:	34 01 00 88 	store_32 s9, (s20)
   3bd44:	20 80 f4 c0 	move s1, s9
   3bd48:	60 05 00 0f 	move s11, 1
   3bd4c:	87 81 11 c1 	cmpne_i s12, s7, s3
   3bd50:	a0 81 f5 c0 	move s13, s11
   3bd54:	4c 01 00 f4 	bnz s12, 40 <R_StoreWallRange+0x4e0>
   3bd58:	86 21 00 a4 	load_u16 s12, 8(s6)
   3bd5c:	a0 21 00 a4 	load_u16 s13, 8(s0)
   3bd60:	8c 81 16 c1 	cmpne_i s12, s12, s13
   3bd64:	a0 81 f5 c0 	move s13, s11
   3bd68:	ac 00 00 f4 	bnz s12, 20 <R_StoreWallRange+0x4e0>
   3bd6c:	86 31 00 a4 	load_u16 s12, 12(s6)
   3bd70:	a0 31 00 a4 	load_u16 s13, 12(s0)
   3bd74:	8c 81 16 c1 	cmpne_i s12, s12, s13
   3bd78:	ac 05 00 01 	and s13, s12, 1
   3bd7c:	92 09 00 4f 	movehi s12, 82
   3bd80:	c9 81 10 c1 	cmpne_i s14, s9, s1
   3bd84:	8c a1 49 00 	or s12, s12, 4712
   3bd88:	ac 01 00 88 	store_32 s13, (s12)
   3bd8c:	6e 01 00 f4 	bnz s14, 44 <R_StoreWallRange+0x51c>
   3bd90:	a7 01 00 4f 	movehi s13, 7
   3bd94:	c6 29 00 a4 	load_u16 s14, 10(s6)
   3bd98:	ad fd 7f 00 	or s13, s13, 8191
   3bd9c:	4a 81 16 c0 	and s10, s10, s13
   3bda0:	4e 01 15 c1 	cmpne_i s10, s14, s10
   3bda4:	aa 00 00 f4 	bnz s10, 20 <R_StoreWallRange+0x51c>
   3bda8:	46 31 00 a4 	load_u16 s10, 12(s6)
   3bdac:	60 31 00 a4 	load_u16 s11, 12(s0)
   3bdb0:	4a 81 15 c1 	cmpne_i s10, s10, s11
   3bdb4:	6a 05 00 01 	and s11, s10, 1
   3bdb8:	52 09 00 4f 	movehi s10, 82
   3bdbc:	4a 91 49 00 	or s10, s10, 4708
   3bdc0:	6a 01 00 88 	store_32 s11, (s10)
   3bdc4:	60 01 00 a8 	load_32 s11, (s0)
   3bdc8:	08 81 55 c1 	cmple_i s8, s8, s11
   3bdcc:	88 00 00 f4 	bnz s8, 16 <R_StoreWallRange+0x540>
   3bdd0:	c6 00 00 a8 	load_32 s6, (s6)
   3bdd4:	86 00 42 c1 	cmplt_i s4, s6, s4
   3bdd8:	84 00 00 f4 	bnz s4, 16 <R_StoreWallRange+0x54c>
   3bddc:	80 04 00 0f 	move s4, 1
   3bde0:	8c 00 00 88 	store_32 s4, (s12)
   3bde4:	8a 00 00 88 	store_32 s4, (s10)
   3bde8:	89 80 30 c1 	cmpge_i s4, s9, s1
   3bdec:	24 04 00 f4 	bnz s4, 132 <R_StoreWallRange+0x5d4>
   3bdf0:	9d 04 00 4f 	movehi s4, 61
   3bdf4:	84 a0 48 00 	or s4, s4, 4648
   3bdf8:	84 00 00 a8 	load_32 s4, (s4)
   3bdfc:	d9 00 00 a8 	load_32 s6, (s25)
   3be00:	c6 20 00 a6 	load_s16 s6, 8(s6)
   3be04:	c6 08 00 0b 	shl s6, s6, 2
   3be08:	84 00 53 c0 	add_i s4, s4, s6
   3be0c:	84 00 00 a8 	load_32 s4, (s4)
   3be10:	85 00 00 88 	store_32 s4, (s5)
   3be14:	be e0 01 a8 	load_32 s5, 120(sp)
   3be18:	a5 00 00 a8 	load_32 s5, (s5)
   3be1c:	a5 40 00 a0 	load_u8 s5, 16(s5)
   3be20:	05 21 00 01 	and s8, s5, 8
   3be24:	a0 80 f0 c0 	move s5, s1
   3be28:	e8 00 00 f4 	bnz s8, 28 <R_StoreWallRange+0x5a8>
   3be2c:	bd 04 00 4f 	movehi s5, 61
   3be30:	a5 70 48 00 	or s5, s5, 4636
   3be34:	a5 00 00 a8 	load_32 s5, (s5)
   3be38:	a5 00 53 c0 	add_i s5, s5, s6
   3be3c:	a5 00 00 a8 	load_32 s5, (s5)
   3be40:	a9 80 52 c0 	add_i s5, s9, s5
   3be44:	d2 08 00 4f 	movehi s6, 82
   3be48:	c6 c0 4a 00 	or s6, s6, 4784
   3be4c:	a6 00 00 88 	store_32 s5, (s6)
   3be50:	67 80 21 c1 	cmpgt_i s3, s7, s3
   3be54:	63 01 00 f4 	bnz s3, 44 <R_StoreWallRange+0x5e4>
   3be58:	32 08 00 4f 	movehi s1, 82
   3be5c:	b9 00 00 a8 	load_32 s5, (s25)
   3be60:	60 00 00 0f 	move s3, 0
   3be64:	21 30 4a 00 	or s1, s1, 4748
   3be68:	21 00 00 a8 	load_32 s1, (s1)
   3be6c:	2d 00 00 f6 	b 180 <R_StoreWallRange+0x684>
   3be70:	80 00 00 0f 	move s4, 0
   3be74:	67 80 21 c1 	cmpgt_i s3, s7, s3
   3be78:	43 00 00 f4 	bnz s3, 8 <R_StoreWallRange+0x5e4>
   3be7c:	f7 ff ff f7 	b -36 <R_StoreWallRange+0x5bc>
   3be80:	7d 04 00 4f 	movehi s3, 61
   3be84:	63 a0 48 00 	or s3, s3, 4648
   3be88:	63 00 00 a8 	load_32 s3, (s3)
   3be8c:	b9 00 00 a8 	load_32 s5, (s25)
   3be90:	c5 28 00 a6 	load_s16 s6, 10(s5)
   3be94:	c6 08 00 0b 	shl s6, s6, 2
   3be98:	63 00 53 c0 	add_i s3, s3, s6
   3be9c:	63 00 00 a8 	load_32 s3, (s3)
   3bea0:	62 00 00 88 	store_32 s3, (s2)
   3bea4:	5e e0 01 a8 	load_32 s2, 120(sp)
   3bea8:	42 00 00 a8 	load_32 s2, (s2)
   3beac:	42 40 00 a0 	load_u8 s2, 16(s2)
   3beb0:	42 40 00 01 	and s2, s2, 16
   3beb4:	42 00 00 f2 	bz s2, 8 <R_StoreWallRange+0x620>
   3beb8:	17 00 00 f6 	b 92 <R_StoreWallRange+0x678>
   3bebc:	32 08 00 4f 	movehi s1, 82
   3bec0:	21 30 4a 00 	or s1, s1, 4748
   3bec4:	e1 00 00 88 	store_32 s7, (s1)
   3bec8:	20 80 f3 c0 	move s1, s7
   3becc:	15 00 00 f6 	b 84 <R_StoreWallRange+0x684>
   3bed0:	29 09 00 00 	or s9, s9, 2
   3bed4:	80 01 80 4f 	movehi s12, 262144
   3bed8:	33 61 00 88 	store_32 s9, 24(s19)
   3bedc:	93 81 00 88 	store_32 s12, 32(s19)
   3bee0:	68 81 25 c1 	cmpgt_i s11, s8, s11
   3bee4:	2b ef ff f5 	bnz s11, -540 <R_StoreWallRange+0x42c>
   3bee8:	72 09 00 4f 	movehi s11, 82
   3beec:	29 05 00 00 	or s9, s9, 1
   3bef0:	9f fd 7f 4f 	movehi s12, 262143
   3bef4:	6b d1 4b 00 	or s11, s11, 4852
   3bef8:	73 a1 00 88 	store_32 s11, 40(s19)
   3befc:	6c fd 7f 00 	or s11, s12, 8191
   3bf00:	73 71 00 88 	store_32 s11, 28(s19)
   3bf04:	33 61 00 88 	store_32 s9, 24(s19)
   3bf08:	4a 01 42 c1 	cmplt_i s10, s10, s4
   3bf0c:	0a ef ff f5 	bnz s10, -544 <R_StoreWallRange+0x450>
   3bf10:	70 ff ff f7 	b -576 <R_StoreWallRange+0x434>
   3bf14:	52 08 00 4f 	movehi s2, 82
   3bf18:	42 30 4a 00 	or s2, s2, 4748
   3bf1c:	22 00 00 88 	store_32 s1, (s2)
   3bf20:	52 08 00 4f 	movehi s2, 82
   3bf24:	c5 10 00 a8 	load_32 s6, 4(s5)
   3bf28:	12 09 00 4f 	movehi s8, 82
   3bf2c:	42 c0 4a 00 	or s2, s2, 4784
   3bf30:	08 31 4a 00 	or s8, s8, 4748
   3bf34:	21 00 53 c0 	add_i s1, s1, s6
   3bf38:	e2 00 00 a8 	load_32 s7, (s2)
   3bf3c:	e7 00 53 c0 	add_i s7, s7, s6
   3bf40:	e2 00 00 88 	store_32 s7, (s2)
   3bf44:	28 00 00 88 	store_32 s1, (s8)
   3bf48:	40 00 00 0f 	move s2, 0
   3bf4c:	25 30 00 a4 	load_u16 s1, 12(s5)
   3bf50:	c1 02 00 f2 	bz s1, 88 <R_StoreWallRange+0x70c>
   3bf54:	22 08 00 4f 	movehi s1, 66
   3bf58:	de 70 02 a8 	load_32 s6, 156(sp)
   3bf5c:	12 09 00 4f 	movehi s8, 82
   3bf60:	a1 a0 73 00 	or s5, s1, 7400
   3bf64:	20 04 00 0f 	move s1, 1
   3bf68:	26 00 00 88 	store_32 s1, (s6)
   3bf6c:	08 c1 49 00 	or s8, s8, 4720
   3bf70:	c5 00 00 a8 	load_32 s6, (s5)
   3bf74:	fe 60 02 a8 	load_32 s7, 152(sp)
   3bf78:	e7 00 00 a8 	load_32 s7, (s7)
   3bf7c:	27 05 00 0b 	shl s9, s7, 1
   3bf80:	26 81 64 c0 	sub_i s9, s6, s9
   3bf84:	28 01 00 88 	store_32 s9, (s8)
   3bf88:	33 b1 00 88 	store_32 s9, 44(s19)
   3bf8c:	1e 81 02 a8 	load_32 s8, 160(sp)
   3bf90:	08 01 00 a8 	load_32 s8, (s8)
   3bf94:	e8 80 63 c0 	sub_i s7, s8, s7
   3bf98:	e7 04 00 0b 	shl s7, s7, 1
   3bf9c:	c6 80 53 c0 	add_i s6, s6, s7
   3bfa0:	c5 00 00 88 	store_32 s6, (s5)
   3bfa4:	02 00 00 f6 	b 8 <R_StoreWallRange+0x710>
   3bfa8:	20 00 f1 c0 	move s1, s2
   3bfac:	44 00 01 c0 	or s2, s4, s2
   3bfb0:	be a0 02 a8 	load_32 s5, 168(sp)
   3bfb4:	92 08 00 4f 	movehi s4, 82
   3bfb8:	42 80 01 c0 	or s2, s2, s3
   3bfbc:	64 e0 4a 00 	or s3, s4, 4792
   3bfc0:	22 80 00 c0 	or s1, s2, s1
   3bfc4:	23 00 00 88 	store_32 s1, (s3)
   3bfc8:	9e 02 02 88 	store_32 s20, 128(sp)
   3bfcc:	81 07 00 f2 	bz s1, 240 <R_StoreWallRange+0x820>
   3bfd0:	1e 10 02 a8 	load_32 s0, 132(sp)
   3bfd4:	00 03 00 0f 	move s24, 0
   3bfd8:	00 00 00 a8 	load_32 s0, (s0)
   3bfdc:	3e 20 02 a8 	load_32 s1, 136(sp)
   3bfe0:	21 00 00 a8 	load_32 s1, (s1)
   3bfe4:	00 80 60 c0 	sub_i s0, s0, s1
   3bfe8:	20 00 80 4f 	movehi s1, 262144
   3bfec:	20 80 60 c1 	cmpgt_u s1, s0, s1
   3bff0:	41 00 00 f4 	bnz s1, 8 <R_StoreWallRange+0x75c>
   3bff4:	02 00 00 f6 	b 8 <R_StoreWallRange+0x760>
   3bff8:	18 00 60 c0 	sub_i s0, s24, s0
   3bffc:	20 00 40 4f 	movehi s1, 131072
   3c000:	40 80 80 c1 	cmplt_u s2, s0, s1
   3c004:	42 00 00 f4 	bnz s2, 8 <R_StoreWallRange+0x770>
   3c008:	00 80 f0 c0 	move s0, s1
   3c00c:	3e b0 01 a8 	load_32 s1, 108(sp)
   3c010:	00 44 00 0a 	shr s0, s0, 17
   3c014:	00 80 10 c0 	and s0, s0, s1
   3c018:	3e c0 01 a8 	load_32 s1, 112(sp)
   3c01c:	01 00 50 c0 	add_i s0, s1, s0
   3c020:	20 00 00 a8 	load_32 s1, (s0)
   3c024:	1e d0 01 a8 	load_32 s0, 116(sp)
   3c028:	c3 7f ff f9 	call -131316 <FixedMul>
   3c02c:	32 08 00 4f 	movehi s1, 82
   3c030:	61 80 4a 00 	or s3, s1, 4768
   3c034:	03 00 00 88 	store_32 s0, (s3)
   3c038:	3e 10 02 a8 	load_32 s1, 132(sp)
   3c03c:	21 00 00 a8 	load_32 s1, (s1)
   3c040:	5e 20 02 a8 	load_32 s2, 136(sp)
   3c044:	42 00 00 a8 	load_32 s2, (s2)
   3c048:	41 00 61 c0 	sub_i s2, s1, s2
   3c04c:	42 00 00 14 	cmplt_i s2, s2, 0
   3c050:	62 00 00 f4 	bnz s2, 12 <R_StoreWallRange+0x7c0>
   3c054:	18 00 60 c0 	sub_i s0, s24, s0
   3c058:	03 00 00 88 	store_32 s0, (s3)
   3c05c:	be 30 02 a8 	load_32 s5, 140(sp)
   3c060:	de a0 01 a8 	load_32 s6, 104(sp)
   3c064:	59 00 00 a8 	load_32 s2, (s25)
   3c068:	82 00 00 a8 	load_32 s4, (s2)
   3c06c:	45 00 00 a8 	load_32 s2, (s5)
   3c070:	a2 20 00 a8 	load_32 s5, 8(s2)
   3c074:	85 00 52 c0 	add_i s4, s5, s4
   3c078:	be 04 00 4f 	movehi s5, 62
   3c07c:	04 00 50 c0 	add_i s0, s4, s0
   3c080:	03 00 00 88 	store_32 s0, (s3)
   3c084:	60 00 40 4f 	movehi s3, 131072
   3c088:	06 00 00 a8 	load_32 s0, (s6)
   3c08c:	92 08 00 4f 	movehi s4, 82
   3c090:	23 80 60 c0 	sub_i s1, s3, s1
   3c094:	64 40 4a 00 	or s3, s4, 4752
   3c098:	85 f0 50 00 	or s4, s5, 5180
   3c09c:	01 00 50 c0 	add_i s0, s1, s0
   3c0a0:	03 00 00 88 	store_32 s0, (s3)
   3c0a4:	24 00 00 a8 	load_32 s1, (s4)
   3c0a8:	1b 00 00 a8 	load_32 s0, (s27)
   3c0ac:	41 00 00 f4 	bnz s1, 8 <R_StoreWallRange+0x818>
   3c0b0:	ff 00 00 f6 	b 1020 <R_StoreWallRange+0xc10>
   3c0b4:	9e 02 02 a8 	load_32 s20, 128(sp)
   3c0b8:	be a0 02 a8 	load_32 s5, 168(sp)
   3c0bc:	40 00 00 a8 	load_32 s2, (s0)
   3c0c0:	3a 00 00 a8 	load_32 s1, (s26)
   3c0c4:	42 80 40 c1 	cmplt_i s2, s2, s1
   3c0c8:	a2 00 00 f4 	bnz s2, 20 <R_StoreWallRange+0x840>
   3c0cc:	52 08 00 4f 	movehi s2, 82
   3c0d0:	60 00 00 0f 	move s3, 0
   3c0d4:	42 a0 49 00 	or s2, s2, 4712
   3c0d8:	62 00 00 88 	store_32 s3, (s2)
   3c0dc:	40 10 00 a8 	load_32 s2, 4(s0)
   3c0e0:	22 80 20 c1 	cmpgt_i s1, s2, s1
   3c0e4:	61 01 00 f4 	bnz s1, 44 <R_StoreWallRange+0x874>
   3c0e8:	32 08 00 4f 	movehi s1, 82
   3c0ec:	00 28 00 a6 	load_s16 s0, 10(s0)
   3c0f0:	21 70 4b 00 	or s1, s1, 4828
   3c0f4:	21 00 00 a8 	load_32 s1, (s1)
   3c0f8:	01 00 00 c1 	cmpeq_i s0, s1, s0
   3c0fc:	a0 00 00 f4 	bnz s0, 20 <R_StoreWallRange+0x874>
   3c100:	12 08 00 4f 	movehi s0, 82
   3c104:	20 00 00 0f 	move s1, 0
   3c108:	00 90 49 00 	or s0, s0, 4708
   3c10c:	20 00 00 88 	store_32 s1, (s0)
   3c110:	14 00 00 a8 	load_32 s0, (s20)
   3c114:	52 08 00 4f 	movehi s2, 82
   3c118:	42 a3 4a 00 	or s26, s2, 4776
   3c11c:	20 10 00 09 	ashr s1, s0, 4
   3c120:	34 00 00 88 	store_32 s1, (s20)
   3c124:	7e 90 02 a8 	load_32 s3, 164(sp)
   3c128:	03 00 00 a8 	load_32 s0, (s3)
   3c12c:	00 10 00 09 	ashr s0, s0, 4
   3c130:	03 00 00 88 	store_32 s0, (s3)
   3c134:	1a 00 00 a8 	load_32 s0, (s26)
   3c138:	20 03 fa c0 	move s25, s20
   3c13c:	7e 7f ff f9 	call -131592 <FixedMul>
   3c140:	32 08 00 4f 	movehi s1, 82
   3c144:	5e 04 00 4f 	movehi s2, 62
   3c148:	00 03 00 0f 	move s24, 0
   3c14c:	21 00 4b 00 	or s1, s1, 4800
   3c150:	62 a3 50 00 	or s27, s2, 5160
   3c154:	18 00 60 c0 	sub_i s0, s24, s0
   3c158:	01 00 00 88 	store_32 s0, (s1)
   3c15c:	1b 00 00 a8 	load_32 s0, (s27)
   3c160:	00 10 00 09 	ashr s0, s0, 4
   3c164:	1e 30 02 88 	store_32 s0, 140(sp)
   3c168:	19 00 00 a8 	load_32 s0, (s25)
   3c16c:	3e 43 02 a8 	load_32 s25, 144(sp)
   3c170:	39 00 00 a8 	load_32 s1, (s25)
   3c174:	70 7f ff f9 	call -131648 <FixedMul>
   3c178:	32 08 00 4f 	movehi s1, 82
   3c17c:	5e 30 02 a8 	load_32 s2, 140(sp)
   3c180:	21 f0 4a 00 	or s1, s1, 4796
   3c184:	02 00 60 c0 	sub_i s0, s2, s0
   3c188:	01 00 00 88 	store_32 s0, (s1)
   3c18c:	5e 33 02 88 	store_32 s26, 140(sp)
   3c190:	1a 00 00 a8 	load_32 s0, (s26)
   3c194:	40 83 fd c0 	move s26, s27
   3c198:	7e 93 02 a8 	load_32 s27, 164(sp)
   3c19c:	3b 00 00 a8 	load_32 s1, (s27)
   3c1a0:	65 7f ff f9 	call -131692 <FixedMul>
   3c1a4:	32 08 00 4f 	movehi s1, 82
   3c1a8:	1e 23 02 88 	store_32 s24, 136(sp)
   3c1ac:	18 00 60 c0 	sub_i s0, s24, s0
   3c1b0:	21 70 49 00 	or s1, s1, 4700
   3c1b4:	01 00 00 88 	store_32 s0, (s1)
   3c1b8:	1a 00 00 a8 	load_32 s0, (s26)
   3c1bc:	00 13 00 09 	ashr s24, s0, 4
   3c1c0:	1b 00 00 a8 	load_32 s0, (s27)
   3c1c4:	39 00 00 a8 	load_32 s1, (s25)
   3c1c8:	5b 7f ff f9 	call -131732 <FixedMul>
   3c1cc:	32 08 00 4f 	movehi s1, 82
   3c1d0:	18 00 60 c0 	sub_i s0, s24, s0
   3c1d4:	21 60 49 00 	or s1, s1, 4696
   3c1d8:	01 00 00 88 	store_32 s0, (s1)
   3c1dc:	1e f0 01 a8 	load_32 s0, 124(sp)
   3c1e0:	00 00 00 a8 	load_32 s0, (s0)
   3c1e4:	7e 53 02 a8 	load_32 s27, 148(sp)
   3c1e8:	40 07 00 f2 	bz s0, 232 <R_StoreWallRange+0xa34>
   3c1ec:	12 08 00 4f 	movehi s0, 82
   3c1f0:	32 08 00 4f 	movehi s1, 82
   3c1f4:	60 43 4b 00 	or s27, s0, 4816
   3c1f8:	01 53 4b 00 	or s24, s1, 4820
   3c1fc:	1b 00 00 a8 	load_32 s0, (s27)
   3c200:	40 10 00 09 	ashr s2, s0, 4
   3c204:	5b 00 00 88 	store_32 s2, (s27)
   3c208:	18 00 00 a8 	load_32 s0, (s24)
   3c20c:	00 10 00 09 	ashr s0, s0, 4
   3c210:	18 00 00 88 	store_32 s0, (s24)
   3c214:	3e 00 02 a8 	load_32 s1, 128(sp)
   3c218:	21 00 00 a8 	load_32 s1, (s1)
   3c21c:	22 80 30 c1 	cmpge_i s1, s2, s1
   3c220:	a1 02 00 f4 	bnz s1, 84 <R_StoreWallRange+0x9d8>
   3c224:	1a 00 00 a8 	load_32 s0, (s26)
   3c228:	20 13 00 09 	ashr s25, s0, 4
   3c22c:	1e 40 02 a8 	load_32 s0, 144(sp)
   3c230:	20 00 00 a8 	load_32 s1, (s0)
   3c234:	00 00 f1 c0 	move s0, s2
   3c238:	3f 7f ff f9 	call -131844 <FixedMul>
   3c23c:	32 08 00 4f 	movehi s1, 82
   3c240:	19 00 60 c0 	sub_i s0, s25, s0
   3c244:	21 e0 49 00 	or s1, s1, 4728
   3c248:	01 00 00 88 	store_32 s0, (s1)
   3c24c:	1e 30 02 a8 	load_32 s0, 140(sp)
   3c250:	00 00 00 a8 	load_32 s0, (s0)
   3c254:	3b 00 00 a8 	load_32 s1, (s27)
   3c258:	37 7f ff f9 	call -131876 <FixedMul>
   3c25c:	32 08 00 4f 	movehi s1, 82
   3c260:	5e 20 02 a8 	load_32 s2, 136(sp)
   3c264:	21 f0 49 00 	or s1, s1, 4732
   3c268:	02 00 60 c0 	sub_i s0, s2, s0
   3c26c:	01 00 00 88 	store_32 s0, (s1)
   3c270:	18 00 00 a8 	load_32 s0, (s24)
   3c274:	3e 90 02 a8 	load_32 s1, 164(sp)
   3c278:	21 00 00 a8 	load_32 s1, (s1)
   3c27c:	7e 53 02 a8 	load_32 s27, 148(sp)
   3c280:	20 80 50 c1 	cmple_i s1, s0, s1
   3c284:	61 02 00 f4 	bnz s1, 76 <R_StoreWallRange+0xa34>
   3c288:	3a 00 00 a8 	load_32 s1, (s26)
   3c28c:	41 13 00 09 	ashr s26, s1, 4
   3c290:	3e 40 02 a8 	load_32 s1, 144(sp)
   3c294:	21 00 00 a8 	load_32 s1, (s1)
   3c298:	27 7f ff f9 	call -131940 <FixedMul>
   3c29c:	32 08 00 4f 	movehi s1, 82
   3c2a0:	1a 00 60 c0 	sub_i s0, s26, s0
   3c2a4:	21 00 4a 00 	or s1, s1, 4736
   3c2a8:	01 00 00 88 	store_32 s0, (s1)
   3c2ac:	1e 30 02 a8 	load_32 s0, 140(sp)
   3c2b0:	00 00 00 a8 	load_32 s0, (s0)
   3c2b4:	38 00 00 a8 	load_32 s1, (s24)
   3c2b8:	1f 7f ff f9 	call -131972 <FixedMul>
   3c2bc:	32 08 00 4f 	movehi s1, 82
   3c2c0:	5e 20 02 a8 	load_32 s2, 136(sp)
   3c2c4:	21 10 4a 00 	or s1, s1, 4740
   3c2c8:	02 00 60 c0 	sub_i s0, s2, s0
   3c2cc:	01 00 00 88 	store_32 s0, (s1)
   3c2d0:	12 08 00 4f 	movehi s0, 82
   3c2d4:	00 90 49 00 	or s0, s0, 4708
   3c2d8:	00 00 00 a8 	load_32 s0, (s0)
   3c2dc:	60 01 00 f2 	bz s0, 44 <R_StoreWallRange+0xa6c>
   3c2e0:	02 08 00 4f 	movehi s0, 66
   3c2e4:	00 73 55 00 	or s24, s0, 5468
   3c2e8:	18 00 00 a8 	load_32 s0, (s24)
   3c2ec:	3e 60 02 a8 	load_32 s1, 152(sp)
   3c2f0:	21 00 00 a8 	load_32 s1, (s1)
   3c2f4:	5e 80 02 a8 	load_32 s2, 160(sp)
   3c2f8:	42 00 00 a8 	load_32 s2, (s2)
   3c2fc:	42 fc ff 05 	add_i s2, s2, -1
   3c300:	2c f9 ff f9 	call -6992 <R_CheckPlane>
   3c304:	18 00 00 88 	store_32 s0, (s24)
   3c308:	12 08 00 4f 	movehi s0, 82
   3c30c:	00 a0 49 00 	or s0, s0, 4712
   3c310:	00 00 00 a8 	load_32 s0, (s0)
   3c314:	3e a3 02 a8 	load_32 s25, 168(sp)
   3c318:	60 01 00 f2 	bz s0, 44 <R_StoreWallRange+0xaa8>
   3c31c:	02 08 00 4f 	movehi s0, 66
   3c320:	00 93 73 00 	or s24, s0, 7396
   3c324:	18 00 00 a8 	load_32 s0, (s24)
   3c328:	3e 60 02 a8 	load_32 s1, 152(sp)
   3c32c:	21 00 00 a8 	load_32 s1, (s1)
   3c330:	5e 80 02 a8 	load_32 s2, 160(sp)
   3c334:	42 00 00 a8 	load_32 s2, (s2)
   3c338:	42 fc ff 05 	add_i s2, s2, -1
   3c33c:	1d f9 ff f9 	call -7052 <R_CheckPlane>
   3c340:	18 00 00 88 	store_32 s0, (s24)
   3c344:	e0 fb ff f9 	call -4224 <R_RenderSegLoop>
   3c348:	19 00 00 a8 	load_32 s0, (s25)
   3c34c:	40 60 00 a8 	load_32 s2, 24(s0)
   3c350:	3e 70 02 a8 	load_32 s1, 156(sp)
   3c354:	62 08 00 01 	and s3, s2, 2
   3c358:	21 00 00 a8 	load_32 s1, (s1)
   3c35c:	63 80 00 c0 	or s3, s3, s1
   3c360:	a3 03 00 f2 	bz s3, 116 <R_StoreWallRange+0xb38>
   3c364:	60 90 00 a8 	load_32 s3, 36(s0)
   3c368:	63 03 00 f4 	bnz s3, 108 <R_StoreWallRange+0xb38>
   3c36c:	02 08 00 4f 	movehi s0, 66
   3c370:	22 08 00 4f 	movehi s1, 66
   3c374:	3b 07 00 0b 	shl s25, s27, 1
   3c378:	00 a3 73 00 	or s24, s0, 7400
   3c37c:	21 60 4b 00 	or s1, s1, 4824
   3c380:	18 00 00 a8 	load_32 s0, (s24)
   3c384:	5e 83 02 a8 	load_32 s26, 160(sp)
   3c388:	21 80 5c c0 	add_i s1, s1, s25
   3c38c:	5a 00 00 a8 	load_32 s2, (s26)
   3c390:	42 80 6d c0 	sub_i s2, s2, s27
   3c394:	42 04 00 0b 	shl s2, s2, 1
   3c398:	5b 56 00 f8 	call 88428 <memcpy>
   3c39c:	38 00 00 a8 	load_32 s1, (s24)
   3c3a0:	1e a0 02 a8 	load_32 s0, 168(sp)
   3c3a4:	41 80 6c c0 	sub_i s2, s1, s25
   3c3a8:	00 00 00 a8 	load_32 s0, (s0)
   3c3ac:	3e a3 02 a8 	load_32 s25, 168(sp)
   3c3b0:	40 90 00 88 	store_32 s2, 36(s0)
   3c3b4:	5a 00 00 a8 	load_32 s2, (s26)
   3c3b8:	42 80 6d c0 	sub_i s2, s2, s27
   3c3bc:	42 04 00 0b 	shl s2, s2, 1
   3c3c0:	21 00 51 c0 	add_i s1, s1, s2
   3c3c4:	38 00 00 88 	store_32 s1, (s24)
   3c3c8:	40 60 00 a8 	load_32 s2, 24(s0)
   3c3cc:	3e 70 02 a8 	load_32 s1, 156(sp)
   3c3d0:	21 00 00 a8 	load_32 s1, (s1)
   3c3d4:	42 04 00 01 	and s2, s2, 1
   3c3d8:	42 80 00 c0 	or s2, s2, s1
   3c3dc:	82 03 00 f2 	bz s2, 112 <R_StoreWallRange+0xbb0>
   3c3e0:	40 a0 00 a8 	load_32 s2, 40(s0)
   3c3e4:	42 03 00 f4 	bnz s2, 104 <R_StoreWallRange+0xbb0>
   3c3e8:	02 08 00 4f 	movehi s0, 66
   3c3ec:	22 08 00 4f 	movehi s1, 66
   3c3f0:	3b 07 00 0b 	shl s25, s27, 1
   3c3f4:	00 a3 73 00 	or s24, s0, 7400
   3c3f8:	21 80 69 00 	or s1, s1, 6752
   3c3fc:	18 00 00 a8 	load_32 s0, (s24)
   3c400:	5e 83 02 a8 	load_32 s26, 160(sp)
   3c404:	21 80 5c c0 	add_i s1, s1, s25
   3c408:	5a 00 00 a8 	load_32 s2, (s26)
   3c40c:	42 80 6d c0 	sub_i s2, s2, s27
   3c410:	42 04 00 0b 	shl s2, s2, 1
   3c414:	3c 56 00 f8 	call 88304 <memcpy>
   3c418:	38 00 00 a8 	load_32 s1, (s24)
   3c41c:	1e a0 02 a8 	load_32 s0, 168(sp)
   3c420:	41 80 6c c0 	sub_i s2, s1, s25
   3c424:	00 00 00 a8 	load_32 s0, (s0)
   3c428:	3e a3 02 a8 	load_32 s25, 168(sp)
   3c42c:	40 a0 00 88 	store_32 s2, 40(s0)
   3c430:	5a 00 00 a8 	load_32 s2, (s26)
   3c434:	42 80 6d c0 	sub_i s2, s2, s27
   3c438:	42 04 00 0b 	shl s2, s2, 1
   3c43c:	21 00 51 c0 	add_i s1, s1, s2
   3c440:	38 00 00 88 	store_32 s1, (s24)
   3c444:	3e 70 02 a8 	load_32 s1, 156(sp)
   3c448:	21 00 00 a8 	load_32 s1, (s1)
   3c44c:	e1 01 00 f2 	bz s1, 60 <R_StoreWallRange+0xbec>
   3c450:	20 60 00 a8 	load_32 s1, 24(s0)
   3c454:	41 08 00 01 	and s2, s1, 2
   3c458:	a2 00 00 f4 	bnz s2, 20 <R_StoreWallRange+0xbd0>
   3c45c:	21 08 00 00 	or s1, s1, 2
   3c460:	20 60 00 88 	store_32 s1, 24(s0)
   3c464:	40 00 80 4f 	movehi s2, 262144
   3c468:	40 80 00 88 	store_32 s2, 32(s0)
   3c46c:	41 04 00 01 	and s2, s1, 1
   3c470:	c2 00 00 f4 	bnz s2, 24 <R_StoreWallRange+0xbec>
   3c474:	5f fc 7f 4f 	movehi s2, 262143
   3c478:	21 04 00 00 	or s1, s1, 1
   3c47c:	20 60 00 88 	store_32 s1, 24(s0)
   3c480:	22 fc 7f 00 	or s1, s2, 8191
   3c484:	20 70 00 88 	store_32 s1, 28(s0)
   3c488:	00 c0 00 05 	add_i s0, s0, 48
   3c48c:	19 00 00 88 	store_32 s0, (s25)
   3c490:	fe b3 02 a8 	load_32 ra, 172(sp)
   3c494:	7e c3 02 a8 	load_32 s27, 176(sp)
   3c498:	5e d3 02 a8 	load_32 s26, 180(sp)
   3c49c:	3e e3 02 a8 	load_32 s25, 184(sp)
   3c4a0:	1e f3 02 a8 	load_32 s24, 188(sp)
   3c4a4:	de 03 03 05 	add_i sp, sp, 192
   3c4a8:	1f 00 00 f0 	ret
   3c4ac:	3e 04 00 4f 	movehi s1, 62
   3c4b0:	80 30 00 a6 	load_s16 s4, 12(s0)
   3c4b4:	21 e0 50 00 	or s1, s1, 5176
   3c4b8:	84 10 00 09 	ashr s4, s4, 4
   3c4bc:	21 00 00 a8 	load_32 s1, (s1)
   3c4c0:	62 00 00 a8 	load_32 s3, (s2)
   3c4c4:	21 00 52 c0 	add_i s1, s1, s4
   3c4c8:	a3 10 00 a8 	load_32 s5, 4(s3)
   3c4cc:	42 10 00 a8 	load_32 s2, 4(s2)
   3c4d0:	c2 10 00 a8 	load_32 s6, 4(s2)
   3c4d4:	a5 00 03 c1 	cmpeq_i s5, s5, s6
   3c4d8:	45 00 00 f4 	bnz s5, 8 <R_StoreWallRange+0xc44>
   3c4dc:	03 00 00 f6 	b 12 <R_StoreWallRange+0xc4c>
   3c4e0:	40 fc ff 0f 	move s2, -1
   3c4e4:	05 00 00 f6 	b 20 <R_StoreWallRange+0xc5c>
   3c4e8:	63 00 00 a8 	load_32 s3, (s3)
   3c4ec:	42 00 00 a8 	load_32 s2, (s2)
   3c4f0:	43 00 01 c1 	cmpeq_i s2, s3, s2
   3c4f4:	42 04 00 01 	and s2, s2, 1
   3c4f8:	21 00 51 c0 	add_i s1, s1, s2
   3c4fc:	9e 02 02 a8 	load_32 s20, 128(sp)
   3c500:	be a0 02 a8 	load_32 s5, 168(sp)
   3c504:	41 fc ff 12 	cmpgt_i s2, s1, -1
   3c508:	42 00 00 f4 	bnz s2, 8 <R_StoreWallRange+0xc74>
   3c50c:	0e 00 00 f6 	b 56 <R_StoreWallRange+0xca8>
   3c510:	41 40 00 14 	cmplt_i s2, s1, 16
   3c514:	c2 02 00 f4 	bnz s2, 88 <R_StoreWallRange+0xcd0>
   3c518:	3e 04 00 4f 	movehi s1, 62
   3c51c:	52 08 00 4f 	movehi s2, 82
   3c520:	21 50 51 00 	or s1, s1, 5204
   3c524:	42 20 4b 00 	or s2, s2, 4808
   3c528:	21 00 2d 05 	add_i s1, s1, 2880
   3c52c:	22 00 00 88 	store_32 s1, (s2)
   3c530:	40 00 00 a8 	load_32 s2, (s0)
   3c534:	3a 00 00 a8 	load_32 s1, (s26)
   3c538:	42 80 40 c1 	cmplt_i s2, s2, s1
   3c53c:	02 dd ff f5 	bnz s2, -1120 <R_StoreWallRange+0x840>
   3c540:	e3 fe ff f7 	b -1140 <R_StoreWallRange+0x830>
   3c544:	32 08 00 4f 	movehi s1, 82
   3c548:	5e 04 00 4f 	movehi s2, 62
   3c54c:	21 20 4b 00 	or s1, s1, 4808
   3c550:	42 50 51 00 	or s2, s2, 5204
   3c554:	41 00 00 88 	store_32 s2, (s1)
   3c558:	40 00 00 a8 	load_32 s2, (s0)
   3c55c:	3a 00 00 a8 	load_32 s1, (s26)
   3c560:	42 80 40 c1 	cmplt_i s2, s2, s1
   3c564:	c2 db ff f5 	bnz s2, -1160 <R_StoreWallRange+0x840>
   3c568:	d9 fe ff f7 	b -1180 <R_StoreWallRange+0x830>
   3c56c:	5e 04 00 4f 	movehi s2, 62
   3c570:	72 08 00 4f 	movehi s3, 82
   3c574:	21 00 03 07 	mull_i s1, s1, 192
   3c578:	42 50 51 00 	or s2, s2, 5204
   3c57c:	63 20 4b 00 	or s3, s3, 4808
   3c580:	22 80 50 c0 	add_i s1, s2, s1
   3c584:	23 00 00 88 	store_32 s1, (s3)
   3c588:	40 00 00 a8 	load_32 s2, (s0)
   3c58c:	3a 00 00 a8 	load_32 s1, (s26)
   3c590:	42 80 40 c1 	cmplt_i s2, s2, s1
   3c594:	42 da ff f5 	bnz s2, -1208 <R_StoreWallRange+0x840>
   3c598:	cd fe ff f7 	b -1228 <R_StoreWallRange+0x830>

000000000003c59c R_InitSkyMap:
   3c59c:	12 08 00 4f 	movehi s0, 82
   3c5a0:	20 64 00 4f 	movehi s1, 800
   3c5a4:	00 90 4b 00 	or s0, s0, 4836
   3c5a8:	20 00 00 88 	store_32 s1, (s0)
   3c5ac:	1f 00 00 f0 	ret

000000000003c5b0 R_InstallSpriteLump:
   3c5b0:	de 03 fe 05 	add_i sp, sp, -128
   3c5b4:	1e f3 01 88 	store_32 s24, 124(sp)
   3c5b8:	3e e3 01 88 	store_32 s25, 120(sp)
   3c5bc:	5e d3 01 88 	store_32 s26, 116(sp)
   3c5c0:	7e c3 01 88 	store_32 s27, 112(sp)
   3c5c4:	fe b3 01 88 	store_32 ra, 108(sp)
   3c5c8:	40 83 f0 c0 	move s26, s1
   3c5cc:	00 83 f1 c0 	move s24, s3
   3c5d0:	60 03 f1 c0 	move s27, s2
   3c5d4:	3a 70 00 16 	cmpgt_u s1, s26, 28
   3c5d8:	20 03 f0 c0 	move s25, s0
   3c5dc:	61 00 00 f4 	bnz s1, 12 <R_InstallSpriteLump+0x38>
   3c5e0:	1b 24 00 18 	cmplt_u s0, s27, 9
   3c5e4:	c0 00 00 f4 	bnz s0, 24 <R_InstallSpriteLump+0x4c>
   3c5e8:	01 00 00 4f 	movehi s0, 1
   3c5ec:	3e 13 00 88 	store_32 s25, 4(sp)
   3c5f0:	00 f8 24 00 	or s0, s0, 2366
   3c5f4:	1e 00 00 88 	store_32 s0, (sp)
   3c5f8:	c3 46 ff f9 	call -189684 <I_Error>
   3c5fc:	12 08 00 4f 	movehi s0, 82
   3c600:	3e a3 01 88 	store_32 s25, 104(sp)
   3c604:	00 a0 4b 00 	or s0, s0, 4840
   3c608:	20 00 00 a8 	load_32 s1, (s0)
   3c60c:	21 00 3d c1 	cmpge_i s1, s1, s26
   3c610:	41 00 00 f4 	bnz s1, 8 <R_InstallSpriteLump+0x68>
   3c614:	40 03 00 88 	store_32 s26, (s0)
   3c618:	12 08 00 4f 	movehi s0, 82
   3c61c:	3a 70 00 07 	mull_i s1, s26, 28
   3c620:	00 30 61 00 	or s0, s0, 6220
   3c624:	20 83 50 c0 	add_i s25, s0, s1
   3c628:	19 00 00 a8 	load_32 s0, (s25)
   3c62c:	5b 00 00 f4 	bnz s27, 8 <R_InstallSpriteLump+0x84>
   3c630:	30 00 00 f6 	b 192 <R_InstallSpriteLump+0x140>
   3c634:	1e 93 01 88 	store_32 s24, 100(sp)
   3c638:	60 01 00 f4 	bnz s0, 44 <R_InstallSpriteLump+0xb4>
   3c63c:	12 08 00 4f 	movehi s0, 82
   3c640:	40 00 00 4f 	movehi s2, 0
   3c644:	3a 04 01 05 	add_i s1, s26, 65
   3c648:	00 10 61 00 	or s0, s0, 6212
   3c64c:	00 00 00 a8 	load_32 s0, (s0)
   3c650:	3e 20 00 88 	store_32 s1, 8(sp)
   3c654:	1e 10 00 88 	store_32 s0, 4(sp)
   3c658:	02 a8 18 00 	or s0, s2, 1578
   3c65c:	1e 00 00 88 	store_32 s0, (sp)
   3c660:	a9 46 ff f9 	call -189788 <I_Error>
   3c664:	1b ff ff 05 	add_i s24, s27, -1
   3c668:	20 04 00 0f 	move s1, 1
   3c66c:	39 00 00 88 	store_32 s1, (s25)
   3c670:	47 00 00 4f 	movehi s2, 7
   3c674:	18 04 00 0b 	shl s0, s24, 1
   3c678:	19 00 50 c0 	add_i s0, s25, s0
   3c67c:	42 fc 7f 00 	or s2, s2, 8191
   3c680:	20 10 00 a4 	load_u16 s1, 4(s0)
   3c684:	60 10 00 05 	add_i s3, s0, 4
   3c688:	21 00 01 c1 	cmpeq_i s1, s1, s2
   3c68c:	e1 01 00 f4 	bnz s1, 60 <R_InstallSpriteLump+0x118>
   3c690:	12 08 00 4f 	movehi s0, 82
   3c694:	5b c0 00 05 	add_i s2, s27, 48
   3c698:	3a 04 01 05 	add_i s1, s26, 65
   3c69c:	00 10 61 00 	or s0, s0, 6212
   3c6a0:	00 00 00 a8 	load_32 s0, (s0)
   3c6a4:	5e 30 00 88 	store_32 s2, 12(sp)
   3c6a8:	40 00 00 4f 	movehi s2, 0
   3c6ac:	3e 20 00 88 	store_32 s1, 8(sp)
   3c6b0:	1e 10 00 88 	store_32 s0, 4(sp)
   3c6b4:	02 ac 54 00 	or s0, s2, 5419
   3c6b8:	1e 00 00 88 	store_32 s0, (sp)
   3c6bc:	40 83 f1 c0 	move s26, s3
   3c6c0:	91 46 ff f9 	call -189884 <I_Error>
   3c6c4:	60 00 fd c0 	move s3, s26
   3c6c8:	1d 04 00 4f 	movehi s0, 61
   3c6cc:	39 00 5c c0 	add_i s1, s25, s24
   3c6d0:	00 50 47 00 	or s0, s0, 4564
   3c6d4:	00 00 00 a8 	load_32 s0, (s0)
   3c6d8:	5e a0 01 a8 	load_32 s2, 104(sp)
   3c6dc:	02 00 60 c0 	sub_i s0, s2, s0
   3c6e0:	03 00 00 86 	store_16 s0, (s3)
   3c6e4:	1e 90 01 a8 	load_32 s0, 100(sp)
   3c6e8:	01 50 00 82 	store_8 s0, 20(s1)
   3c6ec:	26 00 00 f6 	b 152 <R_InstallSpriteLump+0x1d4>
   3c6f0:	40 00 00 f4 	bnz s0, 8 <R_InstallSpriteLump+0x148>
   3c6f4:	2b 00 00 f6 	b 172 <R_InstallSpriteLump+0x1f0>
   3c6f8:	00 04 00 11 	cmpne_i s0, s0, 1
   3c6fc:	60 01 00 f4 	bnz s0, 44 <R_InstallSpriteLump+0x178>
   3c700:	12 08 00 4f 	movehi s0, 82
   3c704:	40 00 00 4f 	movehi s2, 0
   3c708:	3a 04 01 05 	add_i s1, s26, 65
   3c70c:	00 10 61 00 	or s0, s0, 6212
   3c710:	00 00 00 a8 	load_32 s0, (s0)
   3c714:	3e 20 00 88 	store_32 s1, 8(sp)
   3c718:	1e 10 00 88 	store_32 s0, 4(sp)
   3c71c:	02 a8 18 00 	or s0, s2, 1578
   3c720:	1e 00 00 88 	store_32 s0, (sp)
   3c724:	78 46 ff f9 	call -189984 <I_Error>
   3c728:	1d 04 00 4f 	movehi s0, 61
   3c72c:	20 00 00 0f 	move s1, 0
   3c730:	39 00 00 88 	store_32 s1, (s25)
   3c734:	00 50 47 00 	or s0, s0, 4564
   3c738:	00 00 00 a8 	load_32 s0, (s0)
   3c73c:	3e a0 01 a8 	load_32 s1, 104(sp)
   3c740:	01 00 60 c0 	sub_i s0, s1, s0
   3c744:	19 10 00 86 	store_16 s0, 4(s25)
   3c748:	19 53 00 82 	store_8 s24, 20(s25)
   3c74c:	19 18 00 86 	store_16 s0, 6(s25)
   3c750:	19 57 00 82 	store_8 s24, 21(s25)
   3c754:	19 20 00 86 	store_16 s0, 8(s25)
   3c758:	19 5b 00 82 	store_8 s24, 22(s25)
   3c75c:	19 28 00 86 	store_16 s0, 10(s25)
   3c760:	19 5f 00 82 	store_8 s24, 23(s25)
   3c764:	19 30 00 86 	store_16 s0, 12(s25)
   3c768:	19 63 00 82 	store_8 s24, 24(s25)
   3c76c:	19 38 00 86 	store_16 s0, 14(s25)
   3c770:	19 67 00 82 	store_8 s24, 25(s25)
   3c774:	19 40 00 86 	store_16 s0, 16(s25)
   3c778:	19 6b 00 82 	store_8 s24, 26(s25)
   3c77c:	19 48 00 86 	store_16 s0, 18(s25)
   3c780:	19 6f 00 82 	store_8 s24, 27(s25)
   3c784:	fe b3 01 a8 	load_32 ra, 108(sp)
   3c788:	7e c3 01 a8 	load_32 s27, 112(sp)
   3c78c:	5e d3 01 a8 	load_32 s26, 116(sp)
   3c790:	3e e3 01 a8 	load_32 s25, 120(sp)
   3c794:	1e f3 01 a8 	load_32 s24, 124(sp)
   3c798:	de 03 02 05 	add_i sp, sp, 128
   3c79c:	1f 00 00 f0 	ret
   3c7a0:	12 08 00 4f 	movehi s0, 82
   3c7a4:	43 00 00 4f 	movehi s2, 3
   3c7a8:	3a 04 01 05 	add_i s1, s26, 65
   3c7ac:	00 10 61 00 	or s0, s0, 6212
   3c7b0:	00 00 00 a8 	load_32 s0, (s0)
   3c7b4:	3e 20 00 88 	store_32 s1, 8(sp)
   3c7b8:	1e 10 00 88 	store_32 s0, 4(sp)
   3c7bc:	02 58 0b 00 	or s0, s2, 726
   3c7c0:	1e 00 00 88 	store_32 s0, (sp)
   3c7c4:	50 46 ff f9 	call -190144 <I_Error>
   3c7c8:	19 00 00 a8 	load_32 s0, (s25)
   3c7cc:	00 04 00 11 	cmpne_i s0, s0, 1
   3c7d0:	c0 fa ff f5 	bnz s0, -168 <R_InstallSpriteLump+0x178>
   3c7d4:	cb ff ff f7 	b -212 <R_InstallSpriteLump+0x150>

000000000003c7d8 R_InitSpriteDefs:
   3c7d8:	de 03 fd 05 	add_i sp, sp, -192
   3c7dc:	1e f3 02 88 	store_32 s24, 188(sp)
   3c7e0:	3e e3 02 88 	store_32 s25, 184(sp)
   3c7e4:	5e d3 02 88 	store_32 s26, 180(sp)
   3c7e8:	7e c3 02 88 	store_32 s27, 176(sp)
   3c7ec:	fe b3 02 88 	store_32 ra, 172(sp)
   3c7f0:	20 03 f0 c0 	move s25, s0
   3c7f4:	20 80 fc c0 	move s1, s25
   3c7f8:	00 80 f0 c0 	move s0, s1
   3c7fc:	40 00 00 a8 	load_32 s2, (s0)
   3c800:	20 10 00 05 	add_i s1, s0, 4
   3c804:	a2 ff ff f5 	bnz s2, -12 <R_InitSpriteDefs+0x20>
   3c808:	32 08 00 4f 	movehi s1, 82
   3c80c:	00 80 6c c0 	sub_i s0, s0, s25
   3c810:	41 e0 55 00 	or s2, s1, 5496
   3c814:	5e d0 01 88 	store_32 s2, 116(sp)
   3c818:	20 08 00 09 	ashr s1, s0, 2
   3c81c:	22 00 00 88 	store_32 s1, (s2)
   3c820:	40 27 00 f2 	bz s0, 1256 <R_InitSpriteDefs+0x530>
   3c824:	40 00 00 0f 	move s2, 0
   3c828:	5e 80 02 88 	store_32 s2, 160(sp)
   3c82c:	00 04 00 0b 	shl s0, s0, 1
   3c830:	20 04 00 0f 	move s1, 1
   3c834:	29 40 00 f8 	call 65700 <Z_Malloc>
   3c838:	32 08 00 4f 	movehi s1, 82
   3c83c:	5d 04 00 4f 	movehi s2, 61
   3c840:	7d 04 00 4f 	movehi s3, 61
   3c844:	81 20 61 00 	or s4, s1, 6216
   3c848:	9e c0 01 88 	store_32 s4, 112(sp)
   3c84c:	22 50 47 00 	or s1, s2, 4564
   3c850:	43 a0 47 00 	or s2, s3, 4584
   3c854:	04 00 00 88 	store_32 s0, (s4)
   3c858:	01 00 00 a8 	load_32 s0, (s1)
   3c85c:	1e 50 01 88 	store_32 s0, 84(sp)
   3c860:	02 00 00 a8 	load_32 s0, (s2)
   3c864:	1e a0 02 88 	store_32 s0, 168(sp)
   3c868:	1e d0 01 a8 	load_32 s0, 116(sp)
   3c86c:	00 00 00 a8 	load_32 s0, (s0)
   3c870:	00 04 00 14 	cmplt_i s0, s0, 1
   3c874:	a0 24 00 f4 	bnz s0, 1172 <R_InitSpriteDefs+0x530>
   3c878:	12 08 00 4f 	movehi s0, 82
   3c87c:	5e 50 01 a8 	load_32 s2, 84(sp)
   3c880:	7e a0 02 a8 	load_32 s3, 168(sp)
   3c884:	32 08 00 4f 	movehi s1, 82
   3c888:	00 10 61 00 	or s0, s0, 6212
   3c88c:	42 80 21 c1 	cmpgt_i s2, s2, s3
   3c890:	5e b0 01 88 	store_32 s2, 108(sp)
   3c894:	1e a0 01 88 	store_32 s0, 104(sp)
   3c898:	01 30 61 00 	or s0, s1, 6220
   3c89c:	1e 20 02 88 	store_32 s0, 136(sp)
   3c8a0:	12 08 00 4f 	movehi s0, 82
   3c8a4:	20 fc 03 0f 	move s1, 255
   3c8a8:	3e 90 01 88 	store_32 s1, 100(sp)
   3c8ac:	20 b0 0c 0f 	move s1, 812
   3c8b0:	3e 80 01 88 	store_32 s1, 96(sp)
   3c8b4:	00 a0 4b 00 	or s0, s0, 4840
   3c8b8:	1e 50 02 88 	store_32 s0, 148(sp)
   3c8bc:	00 0c 00 4f 	movehi s0, 96
   3c8c0:	3a 04 00 4f 	movehi s1, 58
   3c8c4:	40 fc ff 0f 	move s2, -1
   3c8c8:	5e 70 01 88 	store_32 s2, 92(sp)
   3c8cc:	40 93 01 00 	or s26, s0, 100
   3c8d0:	01 c0 16 00 	or s0, s1, 1456
   3c8d4:	1e 30 02 88 	store_32 s0, 140(sp)
   3c8d8:	00 04 00 0f 	move s0, 1
   3c8dc:	1e 00 02 88 	store_32 s0, 128(sp)
   3c8e0:	00 00 00 4f 	movehi s0, 0
   3c8e4:	40 00 00 4f 	movehi s2, 0
   3c8e8:	27 00 00 4f 	movehi s1, 7
   3c8ec:	00 bc 41 00 	or s0, s0, 4207
   3c8f0:	1e f0 01 88 	store_32 s0, 124(sp)
   3c8f4:	02 a4 39 00 	or s0, s2, 3689
   3c8f8:	1e 10 02 88 	store_32 s0, 132(sp)
   3c8fc:	1e 83 02 a8 	load_32 s24, 160(sp)
   3c900:	21 fc 7f 00 	or s1, s1, 8191
   3c904:	5e 43 02 88 	store_32 s26, 144(sp)
   3c908:	3e 63 01 88 	store_32 s25, 88(sp)
   3c90c:	3e 70 02 88 	store_32 s1, 156(sp)
   3c910:	18 08 00 0b 	shl s0, s24, 2
   3c914:	79 03 50 c0 	add_i s27, s25, s0
   3c918:	1b 00 00 a8 	load_32 s0, (s27)
   3c91c:	3e a0 01 a8 	load_32 s1, 104(sp)
   3c920:	01 00 00 88 	store_32 s0, (s1)
   3c924:	1e 20 02 a8 	load_32 s0, 136(sp)
   3c928:	3e 90 01 a8 	load_32 s1, 100(sp)
   3c92c:	5e 80 01 a8 	load_32 s2, 96(sp)
   3c930:	5d 54 00 f8 	call 86388 <memset>
   3c934:	1e 50 02 a8 	load_32 s0, 148(sp)
   3c938:	3e 70 01 a8 	load_32 s1, 92(sp)
   3c93c:	20 00 00 88 	store_32 s1, (s0)
   3c940:	7e 93 02 88 	store_32 s27, 164(sp)
   3c944:	7b 00 00 a8 	load_32 s3, (s27)
   3c948:	03 00 00 a0 	load_u8 s0, (s3)
   3c94c:	23 04 00 a0 	load_u8 s1, 1(s3)
   3c950:	43 08 00 a0 	load_u8 s2, 2(s3)
   3c954:	63 0c 00 a0 	load_u8 s3, 3(s3)
   3c958:	9e b0 01 a8 	load_32 s4, 108(sp)
   3c95c:	e4 1b 00 f4 	bnz s4, 892 <R_InitSpriteDefs+0x500>
   3c960:	63 20 00 0b 	shl s3, s3, 8
   3c964:	1e e3 01 88 	store_32 s24, 120(sp)
   3c968:	21 20 00 0b 	shl s1, s1, 8
   3c96c:	1e 53 01 a8 	load_32 s24, 84(sp)
   3c970:	43 00 01 c0 	or s2, s3, s2
   3c974:	01 00 00 c0 	or s0, s1, s0
   3c978:	42 40 00 0b 	shl s2, s2, 16
   3c97c:	62 03 00 c0 	or s27, s2, s0
   3c980:	7e 63 02 88 	store_32 s27, 152(sp)
   3c984:	1a 00 00 a8 	load_32 s0, (s26)
   3c988:	38 53 00 07 	mull_i s25, s24, 20
   3c98c:	00 80 5c c0 	add_i s0, s0, s25
   3c990:	20 00 00 a8 	load_32 s1, (s0)
   3c994:	21 80 1d c1 	cmpne_i s1, s1, s27
   3c998:	81 03 00 f4 	bnz s1, 112 <R_InitSpriteDefs+0x230>
   3c99c:	20 10 00 a2 	load_s8 s1, 4(s0)
   3c9a0:	40 14 00 a2 	load_s8 s2, 5(s0)
   3c9a4:	7e 30 02 a8 	load_32 s3, 140(sp)
   3c9a8:	41 ff fe 05 	add_i s26, s1, -65
   3c9ac:	62 43 ff 05 	add_i s27, s2, -48
   3c9b0:	63 00 00 a8 	load_32 s3, (s3)
   3c9b4:	20 00 fc c0 	move s1, s24
   3c9b8:	63 00 00 f2 	bz s3, 12 <R_InitSpriteDefs+0x1ec>
   3c9bc:	8e 08 00 f8 	call 8760 <W_GetNumForName>
   3c9c0:	20 00 f0 c0 	move s1, s0
   3c9c4:	00 80 f0 c0 	move s0, s1
   3c9c8:	20 00 fd c0 	move s1, s26
   3c9cc:	40 80 fd c0 	move s2, s27
   3c9d0:	7e 80 02 a8 	load_32 s3, 160(sp)
   3c9d4:	f7 fe ff f9 	call -1060 <R_InstallSpriteLump>
   3c9d8:	5e 43 02 a8 	load_32 s26, 144(sp)
   3c9dc:	1a 00 00 a8 	load_32 s0, (s26)
   3c9e0:	00 80 5c c0 	add_i s0, s0, s25
   3c9e4:	20 18 00 a2 	load_s8 s1, 6(s0)
   3c9e8:	7e 63 02 a8 	load_32 s27, 152(sp)
   3c9ec:	e1 00 00 f2 	bz s1, 28 <R_InitSpriteDefs+0x230>
   3c9f0:	00 1c 00 a2 	load_s8 s0, 7(s0)
   3c9f4:	21 fc fe 05 	add_i s1, s1, -65
   3c9f8:	40 40 ff 05 	add_i s2, s0, -48
   3c9fc:	00 00 fc c0 	move s0, s24
   3ca00:	7e 00 02 a8 	load_32 s3, 128(sp)
   3ca04:	eb fe ff f9 	call -1108 <R_InstallSpriteLump>
   3ca08:	1e a0 02 a8 	load_32 s0, 168(sp)
   3ca0c:	18 00 40 c1 	cmplt_i s0, s24, s0
   3ca10:	18 07 00 05 	add_i s24, s24, 1
   3ca14:	80 fb ff f5 	bnz s0, -144 <R_InitSpriteDefs+0x1ac>
   3ca18:	1e 50 02 a8 	load_32 s0, 148(sp)
   3ca1c:	20 00 00 a8 	load_32 s1, (s0)
   3ca20:	3e 63 01 a8 	load_32 s25, 88(sp)
   3ca24:	1e e3 01 a8 	load_32 s24, 120(sp)
   3ca28:	01 fc ff 11 	cmpne_i s0, s1, -1
   3ca2c:	40 00 00 f4 	bnz s0, 8 <R_InitSpriteDefs+0x25c>
   3ca30:	aa 00 00 f6 	b 680 <R_InitSpriteDefs+0x500>
   3ca34:	5e 50 02 a8 	load_32 s2, 148(sp)
   3ca38:	01 04 00 05 	add_i s0, s1, 1
   3ca3c:	21 00 00 14 	cmplt_i s1, s1, 0
   3ca40:	02 00 00 88 	store_32 s0, (s2)
   3ca44:	61 11 00 f4 	bnz s1, 556 <R_InitSpriteDefs+0x498>
   3ca48:	1e 83 02 a8 	load_32 s24, 160(sp)
   3ca4c:	3e 20 02 a8 	load_32 s1, 136(sp)
   3ca50:	18 70 00 07 	mull_i s0, s24, 28
   3ca54:	41 03 50 c0 	add_i s26, s1, s0
   3ca58:	1a 00 00 a8 	load_32 s0, (s26)
   3ca5c:	20 fc ff 10 	cmpeq_i s1, s0, -1
   3ca60:	61 04 00 f4 	bnz s1, 140 <R_InitSpriteDefs+0x314>
   3ca64:	00 04 00 11 	cmpne_i s0, s0, 1
   3ca68:	a0 0f 00 f4 	bnz s0, 500 <R_InitSpriteDefs+0x484>
   3ca6c:	1a 10 00 a4 	load_u16 s0, 4(s26)
   3ca70:	78 07 01 05 	add_i s27, s24, 65
   3ca74:	3e 70 02 a8 	load_32 s1, 156(sp)
   3ca78:	00 80 00 c1 	cmpeq_i s0, s0, s1
   3ca7c:	60 04 00 f4 	bnz s0, 140 <R_InitSpriteDefs+0x330>
   3ca80:	1a 18 00 a4 	load_u16 s0, 6(s26)
   3ca84:	00 80 00 c1 	cmpeq_i s0, s0, s1
   3ca88:	80 05 00 f4 	bnz s0, 176 <R_InitSpriteDefs+0x360>
   3ca8c:	1a 20 00 a4 	load_u16 s0, 8(s26)
   3ca90:	00 80 10 c1 	cmpne_i s0, s0, s1
   3ca94:	40 00 00 f4 	bnz s0, 8 <R_InitSpriteDefs+0x2c4>
   3ca98:	33 00 00 f6 	b 204 <R_InitSpriteDefs+0x38c>
   3ca9c:	1a 28 00 a4 	load_u16 s0, 10(s26)
   3caa0:	00 80 10 c1 	cmpne_i s0, s0, s1
   3caa4:	40 00 00 f4 	bnz s0, 8 <R_InitSpriteDefs+0x2d4>
   3caa8:	3a 00 00 f6 	b 232 <R_InitSpriteDefs+0x3b8>
   3caac:	1a 30 00 a4 	load_u16 s0, 12(s26)
   3cab0:	00 80 10 c1 	cmpne_i s0, s0, s1
   3cab4:	40 00 00 f4 	bnz s0, 8 <R_InitSpriteDefs+0x2e4>
   3cab8:	41 00 00 f6 	b 260 <R_InitSpriteDefs+0x3e4>
   3cabc:	1a 38 00 a4 	load_u16 s0, 14(s26)
   3cac0:	00 80 10 c1 	cmpne_i s0, s0, s1
   3cac4:	40 00 00 f4 	bnz s0, 8 <R_InitSpriteDefs+0x2f4>
   3cac8:	48 00 00 f6 	b 288 <R_InitSpriteDefs+0x410>
   3cacc:	1a 40 00 a4 	load_u16 s0, 16(s26)
   3cad0:	00 80 10 c1 	cmpne_i s0, s0, s1
   3cad4:	40 00 00 f4 	bnz s0, 8 <R_InitSpriteDefs+0x304>
   3cad8:	4f 00 00 f6 	b 316 <R_InitSpriteDefs+0x43c>
   3cadc:	1a 48 00 a4 	load_u16 s0, 18(s26)
   3cae0:	00 80 10 c1 	cmpne_i s0, s0, s1
   3cae4:	c0 0b 00 f4 	bnz s0, 376 <R_InitSpriteDefs+0x484>
   3cae8:	56 00 00 f6 	b 344 <R_InitSpriteDefs+0x468>
   3caec:	1e 90 02 a8 	load_32 s0, 164(sp)
   3caf0:	38 04 01 05 	add_i s1, s24, 65
   3caf4:	00 00 00 a8 	load_32 s0, (s0)
   3caf8:	3e 20 00 88 	store_32 s1, 8(sp)
   3cafc:	1e 10 00 88 	store_32 s0, 4(sp)
   3cb00:	1e f0 01 a8 	load_32 s0, 124(sp)
   3cb04:	54 00 00 f6 	b 336 <R_InitSpriteDefs+0x47c>
   3cb08:	1e 90 02 a8 	load_32 s0, 164(sp)
   3cb0c:	00 00 00 a8 	load_32 s0, (s0)
   3cb10:	7e 23 00 88 	store_32 s27, 8(sp)
   3cb14:	1e 10 00 88 	store_32 s0, 4(sp)
   3cb18:	1e 10 02 a8 	load_32 s0, 132(sp)
   3cb1c:	1e 00 00 88 	store_32 s0, (sp)
   3cb20:	79 45 ff f9 	call -191004 <I_Error>
   3cb24:	3e 70 02 a8 	load_32 s1, 156(sp)
   3cb28:	1a 18 00 a4 	load_u16 s0, 6(s26)
   3cb2c:	00 80 00 c1 	cmpeq_i s0, s0, s1
   3cb30:	40 00 00 f4 	bnz s0, 8 <R_InitSpriteDefs+0x360>
   3cb34:	d6 ff ff f7 	b -168 <R_InitSpriteDefs+0x2b4>
   3cb38:	1e 90 02 a8 	load_32 s0, 164(sp)
   3cb3c:	00 00 00 a8 	load_32 s0, (s0)
   3cb40:	7e 23 00 88 	store_32 s27, 8(sp)
   3cb44:	1e 10 00 88 	store_32 s0, 4(sp)
   3cb48:	1e 10 02 a8 	load_32 s0, 132(sp)
   3cb4c:	1e 00 00 88 	store_32 s0, (sp)
   3cb50:	6d 45 ff f9 	call -191052 <I_Error>
   3cb54:	3e 70 02 a8 	load_32 s1, 156(sp)
   3cb58:	1a 20 00 a4 	load_u16 s0, 8(s26)
   3cb5c:	00 80 10 c1 	cmpne_i s0, s0, s1
   3cb60:	e0 f9 ff f5 	bnz s0, -196 <R_InitSpriteDefs+0x2c4>
   3cb64:	1e 90 02 a8 	load_32 s0, 164(sp)
   3cb68:	00 00 00 a8 	load_32 s0, (s0)
   3cb6c:	7e 23 00 88 	store_32 s27, 8(sp)
   3cb70:	1e 10 00 88 	store_32 s0, 4(sp)
   3cb74:	1e 10 02 a8 	load_32 s0, 132(sp)
   3cb78:	1e 00 00 88 	store_32 s0, (sp)
   3cb7c:	62 45 ff f9 	call -191096 <I_Error>
   3cb80:	3e 70 02 a8 	load_32 s1, 156(sp)
   3cb84:	1a 28 00 a4 	load_u16 s0, 10(s26)
   3cb88:	00 80 10 c1 	cmpne_i s0, s0, s1
   3cb8c:	00 f9 ff f5 	bnz s0, -224 <R_InitSpriteDefs+0x2d4>
   3cb90:	1e 90 02 a8 	load_32 s0, 164(sp)
   3cb94:	00 00 00 a8 	load_32 s0, (s0)
   3cb98:	7e 23 00 88 	store_32 s27, 8(sp)
   3cb9c:	1e 10 00 88 	store_32 s0, 4(sp)
   3cba0:	1e 10 02 a8 	load_32 s0, 132(sp)
   3cba4:	1e 00 00 88 	store_32 s0, (sp)
   3cba8:	57 45 ff f9 	call -191140 <I_Error>
   3cbac:	3e 70 02 a8 	load_32 s1, 156(sp)
   3cbb0:	1a 30 00 a4 	load_u16 s0, 12(s26)
   3cbb4:	00 80 10 c1 	cmpne_i s0, s0, s1
   3cbb8:	20 f8 ff f5 	bnz s0, -252 <R_InitSpriteDefs+0x2e4>
   3cbbc:	1e 90 02 a8 	load_32 s0, 164(sp)
   3cbc0:	00 00 00 a8 	load_32 s0, (s0)
   3cbc4:	7e 23 00 88 	store_32 s27, 8(sp)
   3cbc8:	1e 10 00 88 	store_32 s0, 4(sp)
   3cbcc:	1e 10 02 a8 	load_32 s0, 132(sp)
   3cbd0:	1e 00 00 88 	store_32 s0, (sp)
   3cbd4:	4c 45 ff f9 	call -191184 <I_Error>
   3cbd8:	3e 70 02 a8 	load_32 s1, 156(sp)
   3cbdc:	1a 38 00 a4 	load_u16 s0, 14(s26)
   3cbe0:	00 80 10 c1 	cmpne_i s0, s0, s1
   3cbe4:	40 f7 ff f5 	bnz s0, -280 <R_InitSpriteDefs+0x2f4>
   3cbe8:	1e 90 02 a8 	load_32 s0, 164(sp)
   3cbec:	00 00 00 a8 	load_32 s0, (s0)
   3cbf0:	7e 23 00 88 	store_32 s27, 8(sp)
   3cbf4:	1e 10 00 88 	store_32 s0, 4(sp)
   3cbf8:	1e 10 02 a8 	load_32 s0, 132(sp)
   3cbfc:	1e 00 00 88 	store_32 s0, (sp)
   3cc00:	41 45 ff f9 	call -191228 <I_Error>
   3cc04:	3e 70 02 a8 	load_32 s1, 156(sp)
   3cc08:	1a 40 00 a4 	load_u16 s0, 16(s26)
   3cc0c:	00 80 10 c1 	cmpne_i s0, s0, s1
   3cc10:	60 f6 ff f5 	bnz s0, -308 <R_InitSpriteDefs+0x304>
   3cc14:	1e 90 02 a8 	load_32 s0, 164(sp)
   3cc18:	00 00 00 a8 	load_32 s0, (s0)
   3cc1c:	7e 23 00 88 	store_32 s27, 8(sp)
   3cc20:	1e 10 00 88 	store_32 s0, 4(sp)
   3cc24:	1e 10 02 a8 	load_32 s0, 132(sp)
   3cc28:	1e 00 00 88 	store_32 s0, (sp)
   3cc2c:	36 45 ff f9 	call -191272 <I_Error>
   3cc30:	3e 70 02 a8 	load_32 s1, 156(sp)
   3cc34:	1a 48 00 a4 	load_u16 s0, 18(s26)
   3cc38:	00 80 10 c1 	cmpne_i s0, s0, s1
   3cc3c:	00 01 00 f4 	bnz s0, 32 <R_InitSpriteDefs+0x484>
   3cc40:	1e 90 02 a8 	load_32 s0, 164(sp)
   3cc44:	00 00 00 a8 	load_32 s0, (s0)
   3cc48:	7e 23 00 88 	store_32 s27, 8(sp)
   3cc4c:	1e 10 00 88 	store_32 s0, 4(sp)
   3cc50:	1e 10 02 a8 	load_32 s0, 132(sp)
   3cc54:	1e 00 00 88 	store_32 s0, (sp)
   3cc58:	2b 45 ff f9 	call -191316 <I_Error>
   3cc5c:	1e 50 02 a8 	load_32 s0, 148(sp)
   3cc60:	18 07 00 05 	add_i s24, s24, 1
   3cc64:	00 00 00 a8 	load_32 s0, (s0)
   3cc68:	38 00 40 c1 	cmplt_i s1, s24, s0
   3cc6c:	01 ef ff f5 	bnz s1, -544 <R_InitSpriteDefs+0x274>
   3cc70:	5e c3 01 a8 	load_32 s26, 112(sp)
   3cc74:	3a 00 00 a8 	load_32 s1, (s26)
   3cc78:	3e e3 01 a8 	load_32 s25, 120(sp)
   3cc7c:	19 0f 00 0b 	shl s24, s25, 3
   3cc80:	21 00 5c c0 	add_i s1, s1, s24
   3cc84:	01 00 00 88 	store_32 s0, (s1)
   3cc88:	7e 53 02 a8 	load_32 s27, 148(sp)
   3cc8c:	1b 00 00 a8 	load_32 s0, (s27)
   3cc90:	3e 00 02 a8 	load_32 s1, 128(sp)
   3cc94:	5e 80 02 a8 	load_32 s2, 160(sp)
   3cc98:	00 70 00 07 	mull_i s0, s0, 28
   3cc9c:	0f 3f 00 f8 	call 64572 <Z_Malloc>
   3cca0:	3a 00 00 a8 	load_32 s1, (s26)
   3cca4:	21 00 5c c0 	add_i s1, s1, s24
   3cca8:	01 10 00 88 	store_32 s0, 4(s1)
   3ccac:	1a 00 00 a8 	load_32 s0, (s26)
   3ccb0:	00 00 5c c0 	add_i s0, s0, s24
   3ccb4:	00 83 fc c0 	move s24, s25
   3ccb8:	3e 63 01 a8 	load_32 s25, 88(sp)
   3ccbc:	00 10 00 a8 	load_32 s0, 4(s0)
   3ccc0:	3b 00 00 a8 	load_32 s1, (s27)
   3ccc4:	41 70 00 07 	mull_i s2, s1, 28
   3ccc8:	3e 20 02 a8 	load_32 s1, 136(sp)
   3cccc:	0e 54 00 f8 	call 86072 <memcpy>
   3ccd0:	5e 43 02 a8 	load_32 s26, 144(sp)
   3ccd4:	07 00 00 f6 	b 28 <R_InitSpriteDefs+0x518>
   3ccd8:	1e c0 01 a8 	load_32 s0, 112(sp)
   3ccdc:	38 0c 00 0b 	shl s1, s24, 3
   3cce0:	00 00 00 a8 	load_32 s0, (s0)
   3cce4:	00 80 50 c0 	add_i s0, s0, s1
   3cce8:	3e 80 02 a8 	load_32 s1, 160(sp)
   3ccec:	20 00 00 88 	store_32 s1, (s0)
   3ccf0:	3e 70 02 a8 	load_32 s1, 156(sp)
   3ccf4:	18 07 00 05 	add_i s24, s24, 1
   3ccf8:	1e d0 01 a8 	load_32 s0, 116(sp)
   3ccfc:	00 00 00 a8 	load_32 s0, (s0)
   3cd00:	18 00 40 c1 	cmplt_i s0, s24, s0
   3cd04:	60 e0 ff f5 	bnz s0, -1012 <R_InitSpriteDefs+0x138>
   3cd08:	fe b3 02 a8 	load_32 ra, 172(sp)
   3cd0c:	7e c3 02 a8 	load_32 s27, 176(sp)
   3cd10:	5e d3 02 a8 	load_32 s26, 180(sp)
   3cd14:	3e e3 02 a8 	load_32 s25, 184(sp)
   3cd18:	1e f3 02 a8 	load_32 s24, 188(sp)
   3cd1c:	de 03 03 05 	add_i sp, sp, 192
   3cd20:	1f 00 00 f0 	ret

000000000003cd24 R_InitSprites:
   3cd24:	de 03 ff 05 	add_i sp, sp, -64
   3cd28:	1e f3 00 88 	store_32 s24, 60(sp)
   3cd2c:	fe e3 00 88 	store_32 ra, 56(sp)
   3cd30:	00 03 f0 c0 	move s24, s0
   3cd34:	12 08 00 4f 	movehi s0, 82
   3cd38:	20 fc 03 0f 	move s1, 255
   3cd3c:	40 00 0a 0f 	move s2, 640
   3cd40:	00 d0 4b 00 	or s0, s0, 4852
   3cd44:	58 53 00 f8 	call 85344 <memset>
   3cd48:	00 00 fc c0 	move s0, s24
   3cd4c:	a3 fe ff f9 	call -1396 <R_InitSpriteDefs>
   3cd50:	fe e3 00 a8 	load_32 ra, 56(sp)
   3cd54:	1e f3 00 a8 	load_32 s24, 60(sp)
   3cd58:	de 03 01 05 	add_i sp, sp, 64
   3cd5c:	1f 00 00 f0 	ret

000000000003cd60 R_ClearSprites:
   3cd60:	12 08 00 4f 	movehi s0, 82
   3cd64:	32 08 00 4f 	movehi s1, 82
   3cd68:	00 00 6e 00 	or s0, s0, 7040
   3cd6c:	21 10 6e 00 	or s1, s1, 7044
   3cd70:	20 00 00 88 	store_32 s1, (s0)
   3cd74:	1f 00 00 f0 	ret

000000000003cd78 R_NewVisSprite:
   3cd78:	12 08 00 4f 	movehi s0, 82
   3cd7c:	52 08 00 4f 	movehi s2, 82
   3cd80:	20 00 6e 00 	or s1, s0, 7040
   3cd84:	42 10 6e 00 	or s2, s2, 7044
   3cd88:	01 00 00 a8 	load_32 s0, (s1)
   3cd8c:	42 00 78 05 	add_i s2, s2, 7680
   3cd90:	40 00 01 c1 	cmpeq_i s2, s0, s2
   3cd94:	82 00 00 f4 	bnz s2, 16 <R_NewVisSprite+0x2c>
   3cd98:	40 f0 00 05 	add_i s2, s0, 60
   3cd9c:	41 00 00 88 	store_32 s2, (s1)
   3cda0:	1f 00 00 f0 	ret
   3cda4:	12 08 00 4f 	movehi s0, 82
   3cda8:	00 f0 55 00 	or s0, s0, 5500
   3cdac:	1f 00 00 f0 	ret

000000000003cdb0 R_DrawMaskedColumn:
   3cdb0:	de 03 ff 05 	add_i sp, sp, -64
   3cdb4:	1e f3 00 88 	store_32 s24, 60(sp)
   3cdb8:	3e e3 00 88 	store_32 s25, 56(sp)
   3cdbc:	5e d3 00 88 	store_32 s26, 52(sp)
   3cdc0:	7e c3 00 88 	store_32 s27, 48(sp)
   3cdc4:	fe b3 00 88 	store_32 ra, 44(sp)
   3cdc8:	3e 04 00 4f 	movehi s1, 62
   3cdcc:	00 03 f0 c0 	move s24, s0
   3cdd0:	21 f0 0e 00 	or s1, s1, 956
   3cdd4:	3e a0 00 88 	store_32 s1, 40(sp)
   3cdd8:	01 00 00 a8 	load_32 s0, (s1)
   3cddc:	1e 90 00 88 	store_32 s0, 36(sp)
   3cde0:	18 00 00 a0 	load_u8 s0, (s24)
   3cde4:	20 fc 03 10 	cmpeq_i s1, s0, 255
   3cde8:	41 0a 00 f4 	bnz s1, 328 <R_DrawMaskedColumn+0x180>
   3cdec:	32 08 00 4f 	movehi s1, 82
   3cdf0:	47 00 00 4f 	movehi s2, 7
   3cdf4:	7e 04 00 4f 	movehi s3, 62
   3cdf8:	e1 e0 6d 00 	or s7, s1, 7032
   3cdfc:	32 08 00 4f 	movehi s1, 82
   3ce00:	22 fd 7f 00 	or s9, s2, 8191
   3ce04:	52 08 00 4f 	movehi s2, 82
   3ce08:	61 f3 6d 00 	or s27, s1, 7036
   3ce0c:	3e 04 00 4f 	movehi s1, 62
   3ce10:	23 33 0f 00 	or s25, s3, 972
   3ce14:	7e 04 00 4f 	movehi s3, 62
   3ce18:	61 21 0f 00 	or s11, s1, 968
   3ce1c:	32 08 00 4f 	movehi s1, 82
   3ce20:	42 c3 4b 00 	or s26, s2, 4848
   3ce24:	5e 04 00 4f 	movehi s2, 62
   3ce28:	a3 11 0f 00 	or s13, s3, 964
   3ce2c:	c1 b1 4b 00 	or s14, s1, 4844
   3ce30:	7e 04 00 4f 	movehi s3, 62
   3ce34:	22 e0 0e 00 	or s1, s2, 952
   3ce38:	3e 30 00 88 	store_32 s1, 12(sp)
   3ce3c:	23 c0 50 00 	or s1, s3, 5168
   3ce40:	3e 20 00 88 	store_32 s1, 8(sp)
   3ce44:	fe 80 00 88 	store_32 s7, 32(sp)
   3ce48:	7e 71 00 88 	store_32 s11, 28(sp)
   3ce4c:	3e 61 00 88 	store_32 s9, 24(sp)
   3ce50:	be 51 00 88 	store_32 s13, 20(sp)
   3ce54:	de 41 00 88 	store_32 s14, 16(sp)
   3ce58:	47 00 00 a8 	load_32 s2, (s7)
   3ce5c:	00 fc 03 01 	and s0, s0, 255
   3ce60:	7b 00 00 a8 	load_32 s3, (s27)
   3ce64:	38 04 00 a0 	load_u8 s1, 1(s24)
   3ce68:	83 00 70 c0 	mull_i s4, s3, s0
   3ce6c:	63 80 70 c0 	mull_i s3, s3, s1
   3ce70:	44 00 51 c0 	add_i s2, s4, s2
   3ce74:	62 80 51 c0 	add_i s3, s2, s3
   3ce78:	42 80 54 c0 	add_i s2, s2, s9
   3ce7c:	63 fc ff 05 	add_i s3, s3, -1
   3ce80:	42 40 00 09 	ashr s2, s2, 16
   3ce84:	59 00 00 88 	store_32 s2, (s25)
   3ce88:	63 40 00 09 	ashr s3, s3, 16
   3ce8c:	6b 00 00 88 	store_32 s3, (s11)
   3ce90:	ba 00 00 a8 	load_32 s5, (s26)
   3ce94:	8d 00 00 a8 	load_32 s4, (s13)
   3ce98:	84 04 00 0b 	shl s4, s4, 1
   3ce9c:	a5 00 52 c0 	add_i s5, s5, s4
   3cea0:	a5 00 00 a6 	load_s16 s5, (s5)
   3cea4:	c3 80 42 c1 	cmplt_i s6, s3, s5
   3cea8:	66 00 00 f4 	bnz s6, 12 <R_DrawMaskedColumn+0x104>
   3ceac:	65 fc ff 05 	add_i s3, s5, -1
   3ceb0:	6b 00 00 88 	store_32 s3, (s11)
   3ceb4:	ae 00 00 a8 	load_32 s5, (s14)
   3ceb8:	85 00 52 c0 	add_i s4, s5, s4
   3cebc:	84 00 00 a6 	load_s16 s4, (s4)
   3cec0:	a2 00 22 c1 	cmpgt_i s5, s2, s4
   3cec4:	65 00 00 f4 	bnz s5, 12 <R_DrawMaskedColumn+0x120>
   3cec8:	44 04 00 05 	add_i s2, s4, 1
   3cecc:	59 00 00 88 	store_32 s2, (s25)
   3ced0:	42 80 21 c1 	cmpgt_i s2, s2, s3
   3ced4:	42 02 00 f4 	bnz s2, 72 <R_DrawMaskedColumn+0x16c>
   3ced8:	5e 30 00 a8 	load_32 s2, 12(sp)
   3cedc:	38 0c 00 05 	add_i s1, s24, 3
   3cee0:	00 40 00 0b 	shl s0, s0, 16
   3cee4:	22 00 00 88 	store_32 s1, (s2)
   3cee8:	3e 90 00 a8 	load_32 s1, 36(sp)
   3ceec:	01 00 60 c0 	sub_i s0, s1, s0
   3cef0:	3e a0 00 a8 	load_32 s1, 40(sp)
   3cef4:	01 00 00 88 	store_32 s0, (s1)
   3cef8:	1e 20 00 a8 	load_32 s0, 8(sp)
   3cefc:	00 00 00 a8 	load_32 s0, (s0)
   3cf00:	00 00 00 fc 	call s0
   3cf04:	de 41 00 a8 	load_32 s14, 16(sp)
   3cf08:	be 51 00 a8 	load_32 s13, 20(sp)
   3cf0c:	7e 71 00 a8 	load_32 s11, 28(sp)
   3cf10:	3e 61 00 a8 	load_32 s9, 24(sp)
   3cf14:	fe 80 00 a8 	load_32 s7, 32(sp)
   3cf18:	38 04 00 a0 	load_u8 s1, 1(s24)
   3cf1c:	38 80 50 c0 	add_i s1, s24, s1
   3cf20:	01 10 00 a0 	load_u8 s0, 4(s1)
   3cf24:	01 13 00 05 	add_i s24, s1, 4
   3cf28:	40 fc 03 11 	cmpne_i s2, s0, 255
   3cf2c:	62 f9 ff f5 	bnz s2, -212 <R_DrawMaskedColumn+0xa8>
   3cf30:	1e a0 00 a8 	load_32 s0, 40(sp)
   3cf34:	3e 90 00 a8 	load_32 s1, 36(sp)
   3cf38:	20 00 00 88 	store_32 s1, (s0)
   3cf3c:	fe b3 00 a8 	load_32 ra, 44(sp)
   3cf40:	7e c3 00 a8 	load_32 s27, 48(sp)
   3cf44:	5e d3 00 a8 	load_32 s26, 52(sp)
   3cf48:	3e e3 00 a8 	load_32 s25, 56(sp)
   3cf4c:	1e f3 00 a8 	load_32 s24, 60(sp)
   3cf50:	de 03 01 05 	add_i sp, sp, 64
   3cf54:	1f 00 00 f0 	ret

000000000003cf58 R_DrawVisSprite:
   3cf58:	de 03 fd 05 	add_i sp, sp, -192
   3cf5c:	1e f3 02 88 	store_32 s24, 188(sp)
   3cf60:	3e e3 02 88 	store_32 s25, 184(sp)
   3cf64:	5e d3 02 88 	store_32 s26, 180(sp)
   3cf68:	7e c3 02 88 	store_32 s27, 176(sp)
   3cf6c:	fe b3 02 88 	store_32 ra, 172(sp)
   3cf70:	3d 04 00 4f 	movehi s1, 61
   3cf74:	40 03 f0 c0 	move s26, s0
   3cf78:	21 50 47 00 	or s1, s1, 4564
   3cf7c:	1a c0 00 a8 	load_32 s0, 48(s26)
   3cf80:	21 00 00 a8 	load_32 s1, (s1)
   3cf84:	01 00 50 c0 	add_i s0, s1, s0
   3cf88:	20 94 01 0f 	move s1, 101
   3cf8c:	a3 07 00 f8 	call 7820 <W_CacheLumpNum>
   3cf90:	3e 04 00 4f 	movehi s1, 62
   3cf94:	5a d0 00 a8 	load_32 s2, 52(s26)
   3cf98:	1e 00 02 88 	store_32 s0, 128(sp)
   3cf9c:	21 c0 0e 00 	or s1, s1, 944
   3cfa0:	41 00 00 88 	store_32 s2, (s1)
   3cfa4:	42 00 00 f4 	bnz s2, 8 <R_DrawVisSprite+0x54>
   3cfa8:	14 00 00 f6 	b 80 <R_DrawVisSprite+0xa0>
   3cfac:	1a e0 00 a8 	load_32 s0, 56(s26)
   3cfb0:	20 00 0c 4f 	movehi s1, 24576
   3cfb4:	20 80 10 c0 	and s1, s0, s1
   3cfb8:	c1 02 00 f2 	bz s1, 88 <R_DrawVisSprite+0xb8>
   3cfbc:	3e 04 00 4f 	movehi s1, 62
   3cfc0:	5e 04 00 4f 	movehi s2, 62
   3cfc4:	7c 00 00 4f 	movehi s3, 28
   3cfc8:	21 c0 50 00 	or s1, s1, 5168
   3cfcc:	42 00 1c 00 	or s2, s2, 1792
   3cfd0:	63 b0 0d 00 	or s3, s3, 876
   3cfd4:	61 00 00 88 	store_32 s3, (s1)
   3cfd8:	00 48 00 0a 	shr s0, s0, 18
   3cfdc:	22 00 00 a8 	load_32 s1, (s2)
   3cfe0:	5e 04 00 4f 	movehi s2, 62
   3cfe4:	00 00 0c 01 	and s0, s0, 768
   3cfe8:	01 00 50 c0 	add_i s0, s1, s0
   3cfec:	22 00 0f 00 	or s1, s2, 960
   3cff0:	00 00 fc 05 	add_i s0, s0, -256
   3cff4:	06 00 00 f6 	b 24 <R_DrawVisSprite+0xb4>
   3cff8:	1e 04 00 4f 	movehi s0, 62
   3cffc:	3e 04 00 4f 	movehi s1, 62
   3d000:	00 10 51 00 	or s0, s0, 5188
   3d004:	21 c0 50 00 	or s1, s1, 5168
   3d008:	00 00 00 a8 	load_32 s0, (s0)
   3d00c:	01 00 00 88 	store_32 s0, (s1)
   3d010:	1a a0 00 a8 	load_32 s0, 40(s26)
   3d014:	3e 04 00 4f 	movehi s1, 62
   3d018:	7e 04 00 4f 	movehi s3, 62
   3d01c:	21 d0 50 00 	or s1, s1, 5172
   3d020:	40 7c 00 09 	ashr s2, s0, 31
   3d024:	00 00 51 c0 	add_i s0, s0, s2
   3d028:	21 00 00 a8 	load_32 s1, (s1)
   3d02c:	63 d0 0e 00 	or s3, s3, 948
   3d030:	00 00 31 c0 	xor s0, s0, s2
   3d034:	5e 04 00 4f 	movehi s2, 62
   3d038:	00 80 a0 c0 	shr s0, s0, s1
   3d03c:	03 00 00 88 	store_32 s0, (s3)
   3d040:	22 f0 0e 00 	or s1, s2, 956
   3d044:	1a b0 00 a8 	load_32 s0, 44(s26)
   3d048:	3e 50 02 88 	store_32 s1, 148(sp)
   3d04c:	5e 04 00 4f 	movehi s2, 62
   3d050:	01 00 00 88 	store_32 s0, (s1)
   3d054:	32 08 00 4f 	movehi s1, 82
   3d058:	3a 83 00 a8 	load_32 s25, 32(s26)
   3d05c:	42 a0 50 00 	or s2, s2, 5160
   3d060:	61 f0 6d 00 	or s3, s1, 7036
   3d064:	3a 90 00 a8 	load_32 s1, 36(s26)
   3d068:	7e 90 02 88 	store_32 s3, 164(sp)
   3d06c:	23 00 00 88 	store_32 s1, (s3)
   3d070:	02 03 00 a8 	load_32 s24, (s2)
   3d074:	b0 7b ff f9 	call -135488 <FixedMul>
   3d078:	32 08 00 4f 	movehi s1, 82
   3d07c:	5e 04 00 4f 	movehi s2, 62
   3d080:	60 80 fc c0 	move s3, s25
   3d084:	21 e0 6d 00 	or s1, s1, 7032
   3d088:	3e 80 02 88 	store_32 s1, 160(sp)
   3d08c:	42 10 0f 00 	or s2, s2, 964
   3d090:	18 00 60 c0 	sub_i s0, s24, s0
   3d094:	01 00 00 88 	store_32 s0, (s1)
   3d098:	1a 20 00 a8 	load_32 s0, 8(s26)
   3d09c:	5e a0 02 88 	store_32 s2, 168(sp)
   3d0a0:	02 00 00 88 	store_32 s0, (s2)
   3d0a4:	3a 30 00 a8 	load_32 s1, 12(s26)
   3d0a8:	00 80 20 c1 	cmpgt_i s0, s0, s1
   3d0ac:	c0 0e 00 f4 	bnz s0, 472 <R_DrawVisSprite+0x32c>
   3d0b0:	01 00 00 4f 	movehi s0, 1
   3d0b4:	5e 00 02 a8 	load_32 s2, 128(sp)
   3d0b8:	27 00 00 4f 	movehi s1, 7
   3d0bc:	00 94 78 00 	or s0, s0, 7717
   3d0c0:	42 20 00 05 	add_i s2, s2, 8
   3d0c4:	5e e0 01 88 	store_32 s2, 120(sp)
   3d0c8:	1e d0 01 88 	store_32 s0, 116(sp)
   3d0cc:	01 fc 7f 00 	or s0, s1, 8191
   3d0d0:	1e 70 02 88 	store_32 s0, 156(sp)
   3d0d4:	1e 04 00 4f 	movehi s0, 62
   3d0d8:	52 08 00 4f 	movehi s2, 82
   3d0dc:	3e 04 00 4f 	movehi s1, 62
   3d0e0:	20 33 0f 00 	or s25, s0, 972
   3d0e4:	02 c0 4b 00 	or s0, s2, 4848
   3d0e8:	1e 60 02 88 	store_32 s0, 152(sp)
   3d0ec:	12 08 00 4f 	movehi s0, 82
   3d0f0:	01 23 0f 00 	or s24, s1, 968
   3d0f4:	3e 04 00 4f 	movehi s1, 62
   3d0f8:	60 b3 4b 00 	or s27, s0, 4844
   3d0fc:	5e 04 00 4f 	movehi s2, 62
   3d100:	01 e0 0e 00 	or s0, s1, 952
   3d104:	1e 30 02 88 	store_32 s0, 140(sp)
   3d108:	02 c0 50 00 	or s0, s2, 5168
   3d10c:	1e 20 02 88 	store_32 s0, 136(sp)
   3d110:	5e f3 01 88 	store_32 s26, 124(sp)
   3d114:	03 00 00 14 	cmplt_i s0, s3, 0
   3d118:	7e 10 02 88 	store_32 s3, 132(sp)
   3d11c:	43 43 00 09 	ashr s26, s3, 16
   3d120:	a0 00 00 f4 	bnz s0, 20 <R_DrawVisSprite+0x1dc>
   3d124:	1e 00 02 a8 	load_32 s0, 128(sp)
   3d128:	00 00 00 a6 	load_s16 s0, (s0)
   3d12c:	1a 00 40 c1 	cmplt_i s0, s26, s0
   3d130:	a0 00 00 f4 	bnz s0, 20 <R_DrawVisSprite+0x1ec>
   3d134:	5e 13 00 88 	store_32 s26, 4(sp)
   3d138:	1e d0 01 a8 	load_32 s0, 116(sp)
   3d13c:	1e 00 00 88 	store_32 s0, (sp)
   3d140:	f1 43 ff f9 	call -192572 <I_Error>
   3d144:	3e e0 01 a8 	load_32 s1, 120(sp)
   3d148:	1a 08 00 0b 	shl s0, s26, 2
   3d14c:	01 00 50 c0 	add_i s0, s1, s0
   3d150:	00 00 00 a8 	load_32 s0, (s0)
   3d154:	3e 00 02 a8 	load_32 s1, 128(sp)
   3d158:	41 03 50 c0 	add_i s26, s1, s0
   3d15c:	1e 50 02 a8 	load_32 s0, 148(sp)
   3d160:	00 00 00 a8 	load_32 s0, (s0)
   3d164:	1e 40 02 88 	store_32 s0, 144(sp)
   3d168:	1a 00 00 a0 	load_u8 s0, (s26)
   3d16c:	20 fc 03 10 	cmpeq_i s1, s0, 255
   3d170:	e1 06 00 f4 	bnz s1, 220 <R_DrawVisSprite+0x2f4>
   3d174:	3e 80 02 a8 	load_32 s1, 160(sp)
   3d178:	00 fc 03 01 	and s0, s0, 255
   3d17c:	41 00 00 a8 	load_32 s2, (s1)
   3d180:	3e 90 02 a8 	load_32 s1, 164(sp)
   3d184:	61 00 00 a8 	load_32 s3, (s1)
   3d188:	3a 04 00 a0 	load_u8 s1, 1(s26)
   3d18c:	83 00 70 c0 	mull_i s4, s3, s0
   3d190:	63 80 70 c0 	mull_i s3, s3, s1
   3d194:	44 00 51 c0 	add_i s2, s4, s2
   3d198:	9e 70 02 a8 	load_32 s4, 156(sp)
   3d19c:	62 80 51 c0 	add_i s3, s2, s3
   3d1a0:	42 00 52 c0 	add_i s2, s2, s4
   3d1a4:	63 fc ff 05 	add_i s3, s3, -1
   3d1a8:	42 40 00 09 	ashr s2, s2, 16
   3d1ac:	59 00 00 88 	store_32 s2, (s25)
   3d1b0:	63 40 00 09 	ashr s3, s3, 16
   3d1b4:	78 00 00 88 	store_32 s3, (s24)
   3d1b8:	9e 60 02 a8 	load_32 s4, 152(sp)
   3d1bc:	a4 00 00 a8 	load_32 s5, (s4)
   3d1c0:	9e a0 02 a8 	load_32 s4, 168(sp)
   3d1c4:	84 00 00 a8 	load_32 s4, (s4)
   3d1c8:	84 04 00 0b 	shl s4, s4, 1
   3d1cc:	a5 00 52 c0 	add_i s5, s5, s4
   3d1d0:	a5 00 00 a6 	load_s16 s5, (s5)
   3d1d4:	c3 80 42 c1 	cmplt_i s6, s3, s5
   3d1d8:	66 00 00 f4 	bnz s6, 12 <R_DrawVisSprite+0x28c>
   3d1dc:	65 fc ff 05 	add_i s3, s5, -1
   3d1e0:	78 00 00 88 	store_32 s3, (s24)
   3d1e4:	bb 00 00 a8 	load_32 s5, (s27)
   3d1e8:	85 00 52 c0 	add_i s4, s5, s4
   3d1ec:	84 00 00 a6 	load_s16 s4, (s4)
   3d1f0:	a2 00 22 c1 	cmpgt_i s5, s2, s4
   3d1f4:	65 00 00 f4 	bnz s5, 12 <R_DrawVisSprite+0x2a8>
   3d1f8:	44 04 00 05 	add_i s2, s4, 1
   3d1fc:	59 00 00 88 	store_32 s2, (s25)
   3d200:	42 80 21 c1 	cmpgt_i s2, s2, s3
   3d204:	a2 01 00 f4 	bnz s2, 52 <R_DrawVisSprite+0x2e0>
   3d208:	5e 30 02 a8 	load_32 s2, 140(sp)
   3d20c:	3a 0c 00 05 	add_i s1, s26, 3
   3d210:	00 40 00 0b 	shl s0, s0, 16
   3d214:	22 00 00 88 	store_32 s1, (s2)
   3d218:	3e 40 02 a8 	load_32 s1, 144(sp)
   3d21c:	01 00 60 c0 	sub_i s0, s1, s0
   3d220:	3e 50 02 a8 	load_32 s1, 148(sp)
   3d224:	01 00 00 88 	store_32 s0, (s1)
   3d228:	1e 20 02 a8 	load_32 s0, 136(sp)
   3d22c:	00 00 00 a8 	load_32 s0, (s0)
   3d230:	00 00 00 fc 	call s0
   3d234:	3a 04 00 a0 	load_u8 s1, 1(s26)
   3d238:	3a 80 50 c0 	add_i s1, s26, s1
   3d23c:	01 10 00 a0 	load_u8 s0, 4(s1)
   3d240:	41 13 00 05 	add_i s26, s1, 4
   3d244:	40 fc 03 11 	cmpne_i s2, s0, 255
   3d248:	62 f9 ff f5 	bnz s2, -212 <R_DrawVisSprite+0x21c>
   3d24c:	1e 50 02 a8 	load_32 s0, 148(sp)
   3d250:	3e 40 02 a8 	load_32 s1, 144(sp)
   3d254:	20 00 00 88 	store_32 s1, (s0)
   3d258:	5e a0 02 a8 	load_32 s2, 168(sp)
   3d25c:	02 00 00 a8 	load_32 s0, (s2)
   3d260:	20 04 00 05 	add_i s1, s0, 1
   3d264:	22 00 00 88 	store_32 s1, (s2)
   3d268:	5e f3 01 a8 	load_32 s26, 124(sp)
   3d26c:	3a a0 00 a8 	load_32 s1, 40(s26)
   3d270:	5a 30 00 a8 	load_32 s2, 12(s26)
   3d274:	7e 10 02 a8 	load_32 s3, 132(sp)
   3d278:	00 00 41 c1 	cmplt_i s0, s0, s2
   3d27c:	61 80 51 c0 	add_i s3, s1, s3
   3d280:	a0 f4 ff f5 	bnz s0, -364 <R_DrawVisSprite+0x1bc>
   3d284:	1e 04 00 4f 	movehi s0, 62
   3d288:	3e 04 00 4f 	movehi s1, 62
   3d28c:	00 60 50 00 	or s0, s0, 5144
   3d290:	21 c0 50 00 	or s1, s1, 5168
   3d294:	00 00 00 a8 	load_32 s0, (s0)
   3d298:	01 00 00 88 	store_32 s0, (s1)
   3d29c:	fe b3 02 a8 	load_32 ra, 172(sp)
   3d2a0:	7e c3 02 a8 	load_32 s27, 176(sp)
   3d2a4:	5e d3 02 a8 	load_32 s26, 180(sp)
   3d2a8:	3e e3 02 a8 	load_32 s25, 184(sp)
   3d2ac:	1e f3 02 a8 	load_32 s24, 188(sp)
   3d2b0:	de 03 03 05 	add_i sp, sp, 192
   3d2b4:	1f 00 00 f0 	ret

000000000003d2b8 R_ProjectSprite:
   3d2b8:	de 03 fe 05 	add_i sp, sp, -128
   3d2bc:	1e f3 01 88 	store_32 s24, 124(sp)
   3d2c0:	3e e3 01 88 	store_32 s25, 120(sp)
   3d2c4:	5e d3 01 88 	store_32 s26, 116(sp)
   3d2c8:	7e c3 01 88 	store_32 s27, 112(sp)
   3d2cc:	fe b3 01 88 	store_32 ra, 108(sp)
   3d2d0:	21 08 00 4f 	movehi s1, 65
   3d2d4:	40 30 00 a8 	load_32 s2, 12(s0)
   3d2d8:	81 08 00 4f 	movehi s4, 65
   3d2dc:	61 00 05 00 	or s3, s1, 320
   3d2e0:	21 08 00 4f 	movehi s1, 65
   3d2e4:	a3 00 00 a8 	load_32 s5, (s3)
   3d2e8:	21 10 05 00 	or s1, s1, 324
   3d2ec:	1e 80 01 88 	store_32 s0, 96(sp)
   3d2f0:	60 40 00 a8 	load_32 s3, 16(s0)
   3d2f4:	04 d0 04 00 	or s0, s4, 308
   3d2f8:	21 00 00 a8 	load_32 s1, (s1)
   3d2fc:	62 83 62 c0 	sub_i s27, s2, s5
   3d300:	1e 90 01 88 	store_32 s0, 100(sp)
   3d304:	03 83 60 c0 	sub_i s24, s3, s1
   3d308:	20 00 00 a8 	load_32 s1, (s0)
   3d30c:	00 80 fd c0 	move s0, s27
   3d310:	09 7b ff f9 	call -136156 <FixedMul>
   3d314:	21 08 00 4f 	movehi s1, 65
   3d318:	20 03 f0 c0 	move s25, s0
   3d31c:	41 f3 04 00 	or s26, s1, 316
   3d320:	3a 00 00 a8 	load_32 s1, (s26)
   3d324:	1e a3 01 88 	store_32 s24, 104(sp)
   3d328:	00 00 fc c0 	move s0, s24
   3d32c:	02 7b ff f9 	call -136184 <FixedMul>
   3d330:	20 83 5c c0 	add_i s25, s0, s25
   3d334:	00 04 00 4f 	movehi s0, 32
   3d338:	19 00 40 c1 	cmplt_i s0, s25, s0
   3d33c:	00 1e 00 f4 	bnz s0, 960 <R_ProjectSprite+0x444>
   3d340:	1e 04 00 4f 	movehi s0, 62
   3d344:	00 40 51 00 	or s0, s0, 5200
   3d348:	00 00 00 a8 	load_32 s0, (s0)
   3d34c:	20 80 fc c0 	move s1, s25
   3d350:	ff 7a ff f9 	call -136196 <FixedDiv>
   3d354:	00 03 f0 c0 	move s24, s0
   3d358:	3a 00 00 a8 	load_32 s1, (s26)
   3d35c:	00 80 fd c0 	move s0, s27
   3d360:	f5 7a ff f9 	call -136236 <FixedMul>
   3d364:	60 03 f0 c0 	move s27, s0
   3d368:	1e 90 01 a8 	load_32 s0, 100(sp)
   3d36c:	20 00 00 a8 	load_32 s1, (s0)
   3d370:	1e a0 01 a8 	load_32 s0, 104(sp)
   3d374:	f0 7a ff f9 	call -136256 <FixedMul>
   3d378:	7b 03 60 c0 	sub_i s27, s27, s0
   3d37c:	1b 7c 00 09 	ashr s0, s27, 31
   3d380:	3b 00 50 c0 	add_i s1, s27, s0
   3d384:	01 00 30 c0 	xor s0, s1, s0
   3d388:	39 08 00 0b 	shl s1, s25, 2
   3d38c:	00 80 20 c1 	cmpgt_i s0, s0, s1
   3d390:	60 1b 00 f4 	bnz s0, 876 <R_ProjectSprite+0x444>
   3d394:	12 08 00 4f 	movehi s0, 82
   3d398:	1e a3 01 88 	store_32 s24, 104(sp)
   3d39c:	5e 83 01 a8 	load_32 s26, 96(sp)
   3d3a0:	20 e0 55 00 	or s1, s0, 5496
   3d3a4:	1a 90 00 a8 	load_32 s0, 36(s26)
   3d3a8:	21 00 00 a8 	load_32 s1, (s1)
   3d3ac:	20 80 80 c1 	cmplt_u s1, s0, s1
   3d3b0:	e1 00 00 f4 	bnz s1, 28 <R_ProjectSprite+0x114>
   3d3b4:	22 00 00 4f 	movehi s1, 2
   3d3b8:	1e 10 00 88 	store_32 s0, 4(sp)
   3d3bc:	01 1c 7d 00 	or s0, s1, 8007
   3d3c0:	1e 00 00 88 	store_32 s0, (sp)
   3d3c4:	50 43 ff f9 	call -193216 <I_Error>
   3d3c8:	1a 90 00 a8 	load_32 s0, 36(s26)
   3d3cc:	32 08 00 4f 	movehi s1, 82
   3d3d0:	80 0c 00 0b 	shl s4, s0, 3
   3d3d4:	63 00 00 4f 	movehi s3, 3
   3d3d8:	21 20 61 00 	or s1, s1, 6216
   3d3dc:	23 ff 7f 00 	or s25, s3, 8191
   3d3e0:	41 00 00 a8 	load_32 s2, (s1)
   3d3e4:	3a a0 00 a8 	load_32 s1, 40(s26)
   3d3e8:	02 03 52 c0 	add_i s24, s2, s4
   3d3ec:	41 80 1c c0 	and s2, s1, s25
   3d3f0:	78 00 00 a8 	load_32 s3, (s24)
   3d3f4:	62 80 41 c1 	cmplt_i s3, s2, s3
   3d3f8:	23 01 00 f4 	bnz s3, 36 <R_ProjectSprite+0x164>
   3d3fc:	42 00 00 4f 	movehi s2, 2
   3d400:	3e 20 00 88 	store_32 s1, 8(sp)
   3d404:	1e 10 00 88 	store_32 s0, 4(sp)
   3d408:	02 04 62 00 	or s0, s2, 6273
   3d40c:	1e 00 00 88 	store_32 s0, (sp)
   3d410:	3d 43 ff f9 	call -193292 <I_Error>
   3d414:	1a a0 00 a8 	load_32 s0, 40(s26)
   3d418:	40 80 1c c0 	and s2, s0, s25
   3d41c:	18 10 00 a8 	load_32 s0, 4(s24)
   3d420:	22 70 00 07 	mull_i s1, s2, 28
   3d424:	00 83 50 c0 	add_i s24, s0, s1
   3d428:	18 00 00 a8 	load_32 s0, (s24)
   3d42c:	e0 01 00 f2 	bz s0, 60 <R_ProjectSprite+0x1b0>
   3d430:	1a 30 00 a8 	load_32 s0, 12(s26)
   3d434:	3a 40 00 a8 	load_32 s1, 16(s26)
   3d438:	46 ef ff f9 	call -17128 <R_PointToAngle>
   3d43c:	40 00 90 4f 	movehi s2, 294912
   3d440:	3a 80 00 a8 	load_32 s1, 32(s26)
   3d444:	00 00 51 c0 	add_i s0, s0, s2
   3d448:	00 80 60 c0 	sub_i s0, s0, s1
   3d44c:	00 74 00 0a 	shr s0, s0, 29
   3d450:	58 00 50 c0 	add_i s2, s24, s0
   3d454:	20 04 00 0b 	shl s1, s0, 1
   3d458:	38 80 50 c0 	add_i s1, s24, s1
   3d45c:	01 10 00 05 	add_i s0, s1, 4
   3d460:	22 50 00 05 	add_i s1, s2, 20
   3d464:	03 00 00 f6 	b 12 <R_ProjectSprite+0x1b8>
   3d468:	18 10 00 05 	add_i s0, s24, 4
   3d46c:	38 50 00 05 	add_i s1, s24, 20
   3d470:	5d 04 00 4f 	movehi s2, 61
   3d474:	60 00 00 a6 	load_s16 s3, (s0)
   3d478:	01 00 00 a0 	load_u8 s0, (s1)
   3d47c:	1e 70 01 88 	store_32 s0, 92(sp)
   3d480:	42 00 48 00 	or s2, s2, 4608
   3d484:	23 08 00 0b 	shl s1, s3, 2
   3d488:	02 00 00 a8 	load_32 s0, (s2)
   3d48c:	7e 60 01 88 	store_32 s3, 88(sp)
   3d490:	3e 90 01 88 	store_32 s1, 100(sp)
   3d494:	00 80 50 c0 	add_i s0, s0, s1
   3d498:	3e 04 00 4f 	movehi s1, 62
   3d49c:	00 00 00 a8 	load_32 s0, (s0)
   3d4a0:	01 83 50 00 	or s24, s1, 5152
   3d4a4:	3b 03 60 c0 	sub_i s25, s27, s0
   3d4a8:	58 03 00 a8 	load_32 s26, (s24)
   3d4ac:	00 80 fc c0 	move s0, s25
   3d4b0:	7e a3 01 a8 	load_32 s27, 104(sp)
   3d4b4:	20 80 fd c0 	move s1, s27
   3d4b8:	9f 7a ff f9 	call -136580 <FixedMul>
   3d4bc:	3e 04 00 4f 	movehi s1, 62
   3d4c0:	00 00 5d c0 	add_i s0, s0, s26
   3d4c4:	41 30 1c 00 	or s2, s1, 1804
   3d4c8:	00 40 00 09 	ashr s0, s0, 16
   3d4cc:	22 00 00 a8 	load_32 s1, (s2)
   3d4d0:	1e 50 01 88 	store_32 s0, 84(sp)
   3d4d4:	00 80 20 c1 	cmpgt_i s0, s0, s1
   3d4d8:	20 11 00 f4 	bnz s0, 548 <R_ProjectSprite+0x444>
   3d4dc:	1d 04 00 4f 	movehi s0, 61
   3d4e0:	40 23 48 00 	or s26, s0, 4616
   3d4e4:	1a 00 00 a8 	load_32 s0, (s26)
   3d4e8:	3e 90 01 a8 	load_32 s1, 100(sp)
   3d4ec:	00 80 50 c0 	add_i s0, s0, s1
   3d4f0:	00 00 00 a8 	load_32 s0, (s0)
   3d4f4:	18 03 00 a8 	load_32 s24, (s24)
   3d4f8:	20 80 fd c0 	move s1, s27
   3d4fc:	00 80 5c c0 	add_i s0, s0, s25
   3d500:	20 03 f1 c0 	move s25, s2
   3d504:	8c 7a ff f9 	call -136656 <FixedMul>
   3d508:	00 00 5c c0 	add_i s0, s0, s24
   3d50c:	28 00 00 4f 	movehi s1, 8
   3d510:	a0 80 fc c0 	move s5, s25
   3d514:	20 80 40 c1 	cmplt_i s1, s0, s1
   3d518:	21 0f 00 f4 	bnz s1, 484 <R_ProjectSprite+0x444>
   3d51c:	32 08 00 4f 	movehi s1, 82
   3d520:	5e 43 01 88 	store_32 s26, 80(sp)
   3d524:	52 08 00 4f 	movehi s2, 82
   3d528:	7e 90 01 a8 	load_32 s3, 100(sp)
   3d52c:	21 00 6e 00 	or s1, s1, 7040
   3d530:	42 10 6e 00 	or s2, s2, 7044
   3d534:	21 03 00 a8 	load_32 s25, (s1)
   3d538:	42 00 78 05 	add_i s2, s2, 7680
   3d53c:	59 00 01 c1 	cmpeq_i s2, s25, s2
   3d540:	82 00 00 f4 	bnz s2, 16 <R_ProjectSprite+0x298>
   3d544:	59 f0 00 05 	add_i s2, s25, 60
   3d548:	41 00 00 88 	store_32 s2, (s1)
   3d54c:	03 00 00 f6 	b 12 <R_ProjectSprite+0x2a0>
   3d550:	32 08 00 4f 	movehi s1, 82
   3d554:	21 f3 55 00 	or s25, s1, 5500
   3d558:	1e 83 01 a8 	load_32 s24, 96(sp)
   3d55c:	3e 04 00 4f 	movehi s1, 62
   3d560:	9e a0 01 a8 	load_32 s4, 104(sp)
   3d564:	00 40 00 09 	ashr s0, s0, 16
   3d568:	7e 53 01 a8 	load_32 s27, 84(sp)
   3d56c:	41 d0 50 00 	or s2, s1, 5172
   3d570:	38 a0 01 a8 	load_32 s1, 104(s24)
   3d574:	39 e0 00 88 	store_32 s1, 56(s25)
   3d578:	5e 80 01 88 	store_32 s2, 96(sp)
   3d57c:	22 00 00 a8 	load_32 s1, (s2)
   3d580:	24 80 b0 c0 	shl s1, s4, s1
   3d584:	39 90 00 88 	store_32 s1, 36(s25)
   3d588:	38 30 00 a8 	load_32 s1, 12(s24)
   3d58c:	39 40 00 88 	store_32 s1, 16(s25)
   3d590:	3d 04 00 4f 	movehi s1, 61
   3d594:	58 40 00 a8 	load_32 s2, 16(s24)
   3d598:	59 50 00 88 	store_32 s2, 20(s25)
   3d59c:	21 10 48 00 	or s1, s1, 4612
   3d5a0:	58 50 00 a8 	load_32 s2, 20(s24)
   3d5a4:	59 60 00 88 	store_32 s2, 24(s25)
   3d5a8:	21 00 00 a8 	load_32 s1, (s1)
   3d5ac:	21 80 51 c0 	add_i s1, s1, s3
   3d5b0:	61 08 00 4f 	movehi s3, 65
   3d5b4:	21 00 00 a8 	load_32 s1, (s1)
   3d5b8:	63 20 05 00 	or s3, s3, 328
   3d5bc:	21 00 51 c0 	add_i s1, s1, s2
   3d5c0:	39 70 00 88 	store_32 s1, 28(s25)
   3d5c4:	43 00 00 a8 	load_32 s2, (s3)
   3d5c8:	60 00 00 0f 	move s3, 0
   3d5cc:	21 00 61 c0 	sub_i s1, s1, s2
   3d5d0:	39 b0 00 88 	store_32 s1, 44(s25)
   3d5d4:	5b 00 00 12 	cmpgt_i s2, s27, 0
   3d5d8:	20 80 fd c0 	move s1, s27
   3d5dc:	42 00 00 f4 	bnz s2, 8 <R_ProjectSprite+0x32c>
   3d5e0:	20 80 f1 c0 	move s1, s3
   3d5e4:	7e a0 01 88 	store_32 s3, 104(sp)
   3d5e8:	39 20 00 88 	store_32 s1, 8(s25)
   3d5ec:	25 00 00 a8 	load_32 s1, (s5)
   3d5f0:	40 80 20 c1 	cmpgt_i s2, s0, s1
   3d5f4:	42 00 00 f4 	bnz s2, 8 <R_ProjectSprite+0x344>
   3d5f8:	20 00 f0 c0 	move s1, s0
   3d5fc:	01 fc ff 05 	add_i s0, s1, -1
   3d600:	19 30 00 88 	store_32 s0, 12(s25)
   3d604:	40 03 f2 c0 	move s26, s4
   3d608:	08 00 00 4f 	movehi s0, 8
   3d60c:	20 00 f2 c0 	move s1, s4
   3d610:	4f 7a ff f9 	call -136900 <FixedDiv>
   3d614:	3e 70 01 a8 	load_32 s1, 92(sp)
   3d618:	21 fc 03 01 	and s1, s1, 255
   3d61c:	61 01 00 f2 	bz s1, 44 <R_ProjectSprite+0x390>
   3d620:	3e 40 01 a8 	load_32 s1, 80(sp)
   3d624:	21 00 00 a8 	load_32 s1, (s1)
   3d628:	5e 90 01 a8 	load_32 s2, 100(sp)
   3d62c:	21 00 51 c0 	add_i s1, s1, s2
   3d630:	40 00 00 0f 	move s2, 0
   3d634:	21 00 00 a8 	load_32 s1, (s1)
   3d638:	7e 60 01 a8 	load_32 s3, 88(sp)
   3d63c:	02 00 60 c0 	sub_i s0, s2, s0
   3d640:	a1 fc ff 05 	add_i s5, s1, -1
   3d644:	03 00 00 f6 	b 12 <R_ProjectSprite+0x398>
   3d648:	7e 60 01 a8 	load_32 s3, 88(sp)
   3d64c:	be a0 01 a8 	load_32 s5, 104(sp)
   3d650:	b9 80 00 88 	store_32 s5, 32(s25)
   3d654:	19 a0 00 88 	store_32 s0, 40(s25)
   3d658:	39 20 00 a8 	load_32 s1, 8(s25)
   3d65c:	41 80 5d c1 	cmple_i s2, s1, s27
   3d660:	a2 00 00 f4 	bnz s2, 20 <R_ProjectSprite+0x3bc>
   3d664:	21 80 6d c0 	sub_i s1, s1, s27
   3d668:	00 80 70 c0 	mull_i s0, s0, s1
   3d66c:	05 00 50 c0 	add_i s0, s5, s0
   3d670:	19 80 00 88 	store_32 s0, 32(s25)
   3d674:	79 c0 00 88 	store_32 s3, 48(s25)
   3d678:	18 a8 01 a0 	load_u8 s0, 106(s24)
   3d67c:	00 10 00 01 	and s0, s0, 4
   3d680:	40 00 00 f2 	bz s0, 8 <R_ProjectSprite+0x3d0>
   3d684:	18 00 00 f6 	b 96 <R_ProjectSprite+0x42c>
   3d688:	1e 04 00 4f 	movehi s0, 62
   3d68c:	00 f0 50 00 	or s0, s0, 5180
   3d690:	00 00 00 a8 	load_32 s0, (s0)
   3d694:	40 00 00 f2 	bz s0, 8 <R_ProjectSprite+0x3e4>
   3d698:	18 00 00 f6 	b 96 <R_ProjectSprite+0x440>
   3d69c:	18 a4 00 a0 	load_u8 s0, 41(s24)
   3d6a0:	00 00 02 01 	and s0, s0, 128
   3d6a4:	40 00 00 f2 	bz s0, 8 <R_ProjectSprite+0x3f4>
   3d6a8:	11 00 00 f6 	b 68 <R_ProjectSprite+0x434>
   3d6ac:	1e 80 01 a8 	load_32 s0, 96(sp)
   3d6b0:	20 30 00 0f 	move s1, 12
   3d6b4:	00 00 00 a8 	load_32 s0, (s0)
   3d6b8:	01 00 60 c0 	sub_i s0, s1, s0
   3d6bc:	1a 00 90 c0 	ashr s0, s26, s0
   3d6c0:	20 bc 00 14 	cmplt_i s1, s0, 47
   3d6c4:	41 00 00 f4 	bnz s1, 8 <R_ProjectSprite+0x414>
   3d6c8:	00 bc 00 0f 	move s0, 47
   3d6cc:	32 08 00 4f 	movehi s1, 82
   3d6d0:	00 08 00 0b 	shl s0, s0, 2
   3d6d4:	21 00 61 00 	or s1, s1, 6208
   3d6d8:	21 00 00 a8 	load_32 s1, (s1)
   3d6dc:	01 00 50 c0 	add_i s0, s1, s0
   3d6e0:	05 00 00 f6 	b 20 <R_ProjectSprite+0x43c>
   3d6e4:	00 00 00 0f 	move s0, 0
   3d6e8:	04 00 00 f6 	b 16 <R_ProjectSprite+0x440>
   3d6ec:	1d 04 00 4f 	movehi s0, 61
   3d6f0:	00 20 47 00 	or s0, s0, 4552
   3d6f4:	00 00 00 a8 	load_32 s0, (s0)
   3d6f8:	19 d0 00 88 	store_32 s0, 52(s25)
   3d6fc:	fe b3 01 a8 	load_32 ra, 108(sp)
   3d700:	7e c3 01 a8 	load_32 s27, 112(sp)
   3d704:	5e d3 01 a8 	load_32 s26, 116(sp)
   3d708:	3e e3 01 a8 	load_32 s25, 120(sp)
   3d70c:	1e f3 01 a8 	load_32 s24, 124(sp)
   3d710:	de 03 02 05 	add_i sp, sp, 128
   3d714:	1f 00 00 f0 	ret

000000000003d718 R_AddSprites:
   3d718:	de 03 ff 05 	add_i sp, sp, -64
   3d71c:	1e f3 00 88 	store_32 s24, 60(sp)
   3d720:	fe e3 00 88 	store_32 ra, 56(sp)
   3d724:	34 04 00 4f 	movehi s1, 52
   3d728:	40 10 01 a8 	load_32 s2, 68(s0)
   3d72c:	21 30 19 00 	or s1, s1, 1612
   3d730:	21 00 00 a8 	load_32 s1, (s1)
   3d734:	42 80 00 c1 	cmpeq_i s2, s2, s1
   3d738:	c2 03 00 f4 	bnz s2, 120 <R_AddSprites+0x98>
   3d73c:	5e 04 00 4f 	movehi s2, 62
   3d740:	20 10 01 88 	store_32 s1, 68(s0)
   3d744:	20 30 00 a6 	load_s16 s1, 12(s0)
   3d748:	42 e0 50 00 	or s2, s2, 5176
   3d74c:	21 10 00 09 	ashr s1, s1, 4
   3d750:	42 00 00 a8 	load_32 s2, (s2)
   3d754:	22 80 50 c0 	add_i s1, s2, s1
   3d758:	5e 04 00 4f 	movehi s2, 62
   3d75c:	61 00 00 14 	cmplt_i s3, s1, 0
   3d760:	e3 00 00 f4 	bnz s3, 28 <R_AddSprites+0x64>
   3d764:	61 3c 00 12 	cmpgt_i s3, s1, 15
   3d768:	42 50 51 00 	or s2, s2, 5204
   3d76c:	43 00 00 f4 	bnz s3, 8 <R_AddSprites+0x5c>
   3d770:	05 00 00 f6 	b 20 <R_AddSprites+0x6c>
   3d774:	22 00 2d 05 	add_i s1, s2, 2880
   3d778:	05 00 00 f6 	b 20 <R_AddSprites+0x74>
   3d77c:	22 50 51 00 	or s1, s2, 5204
   3d780:	03 00 00 f6 	b 12 <R_AddSprites+0x74>
   3d784:	21 00 03 07 	mull_i s1, s1, 192
   3d788:	22 80 50 c0 	add_i s1, s2, s1
   3d78c:	52 08 00 4f 	movehi s2, 82
   3d790:	42 00 61 00 	or s2, s2, 6208
   3d794:	22 00 00 88 	store_32 s1, (s2)
   3d798:	00 23 01 a8 	load_32 s24, 72(s0)
   3d79c:	b8 00 00 f2 	bz s24, 20 <R_AddSprites+0x98>
   3d7a0:	00 00 fc c0 	move s0, s24
   3d7a4:	c5 fe ff f9 	call -1260 <R_ProjectSprite>
   3d7a8:	18 63 00 a8 	load_32 s24, 24(s24)
   3d7ac:	b8 ff ff f5 	bnz s24, -12 <R_AddSprites+0x88>
   3d7b0:	fe e3 00 a8 	load_32 ra, 56(sp)
   3d7b4:	1e f3 00 a8 	load_32 s24, 60(sp)
   3d7b8:	de 03 01 05 	add_i sp, sp, 64
   3d7bc:	1f 00 00 f0 	ret

000000000003d7c0 R_DrawPSprite:
   3d7c0:	de 03 fd 05 	add_i sp, sp, -192
   3d7c4:	1e f3 02 88 	store_32 s24, 188(sp)
   3d7c8:	3e e3 02 88 	store_32 s25, 184(sp)
   3d7cc:	5e d3 02 88 	store_32 s26, 180(sp)
   3d7d0:	7e c3 02 88 	store_32 s27, 176(sp)
   3d7d4:	fe b3 02 88 	store_32 ra, 172(sp)
   3d7d8:	40 03 f0 c0 	move s26, s0
   3d7dc:	12 08 00 4f 	movehi s0, 82
   3d7e0:	3a 00 00 a8 	load_32 s1, (s26)
   3d7e4:	40 e0 55 00 	or s2, s0, 5496
   3d7e8:	01 00 00 a8 	load_32 s0, (s1)
   3d7ec:	42 00 00 a8 	load_32 s2, (s2)
   3d7f0:	40 00 81 c1 	cmplt_u s2, s0, s2
   3d7f4:	02 01 00 f4 	bnz s2, 32 <R_DrawPSprite+0x54>
   3d7f8:	22 00 00 4f 	movehi s1, 2
   3d7fc:	1e 10 00 88 	store_32 s0, 4(sp)
   3d800:	01 1c 7d 00 	or s0, s1, 8007
   3d804:	1e 00 00 88 	store_32 s0, (sp)
   3d808:	3f 42 ff f9 	call -194308 <I_Error>
   3d80c:	3a 00 00 a8 	load_32 s1, (s26)
   3d810:	01 00 00 a8 	load_32 s0, (s1)
   3d814:	52 08 00 4f 	movehi s2, 82
   3d818:	80 0c 00 0b 	shl s4, s0, 3
   3d81c:	63 00 00 4f 	movehi s3, 3
   3d820:	42 20 61 00 	or s2, s2, 6216
   3d824:	23 ff 7f 00 	or s25, s3, 8191
   3d828:	42 00 00 a8 	load_32 s2, (s2)
   3d82c:	21 10 00 a8 	load_32 s1, 4(s1)
   3d830:	02 03 52 c0 	add_i s24, s2, s4
   3d834:	41 80 1c c0 	and s2, s1, s25
   3d838:	78 00 00 a8 	load_32 s3, (s24)
   3d83c:	62 80 41 c1 	cmplt_i s3, s2, s3
   3d840:	43 01 00 f4 	bnz s3, 40 <R_DrawPSprite+0xa8>
   3d844:	42 00 00 4f 	movehi s2, 2
   3d848:	3e 20 00 88 	store_32 s1, 8(sp)
   3d84c:	1e 10 00 88 	store_32 s0, 4(sp)
   3d850:	02 04 62 00 	or s0, s2, 6273
   3d854:	1e 00 00 88 	store_32 s0, (sp)
   3d858:	2b 42 ff f9 	call -194388 <I_Error>
   3d85c:	1a 00 00 a8 	load_32 s0, (s26)
   3d860:	00 10 00 a8 	load_32 s0, 4(s0)
   3d864:	40 80 1c c0 	and s2, s0, s25
   3d868:	18 10 00 a8 	load_32 s0, 4(s24)
   3d86c:	22 70 00 07 	mull_i s1, s2, 28
   3d870:	7e 04 00 4f 	movehi s3, 62
   3d874:	92 08 00 4f 	movehi s4, 82
   3d878:	00 80 50 c0 	add_i s0, s0, s1
   3d87c:	3d 04 00 4f 	movehi s1, 61
   3d880:	63 83 50 00 	or s27, s3, 5152
   3d884:	40 10 00 a6 	load_s16 s2, 4(s0)
   3d888:	21 00 48 00 	or s1, s1, 4608
   3d88c:	00 50 00 a0 	load_u8 s0, 20(s0)
   3d890:	1e 80 01 88 	store_32 s0, 96(sp)
   3d894:	5e a3 01 88 	store_32 s26, 104(sp)
   3d898:	1a 20 00 a8 	load_32 s0, 8(s26)
   3d89c:	44 f3 56 00 	or s26, s4, 5564
   3d8a0:	21 00 00 a8 	load_32 s1, (s1)
   3d8a4:	5e 90 01 88 	store_32 s2, 100(sp)
   3d8a8:	42 08 00 0b 	shl s2, s2, 2
   3d8ac:	5e b0 01 88 	store_32 s2, 108(sp)
   3d8b0:	21 00 51 c0 	add_i s1, s1, s2
   3d8b4:	40 60 ff 4f 	movehi s2, 523008
   3d8b8:	00 00 51 c0 	add_i s0, s0, s2
   3d8bc:	21 00 00 a8 	load_32 s1, (s1)
   3d8c0:	1b 03 00 a8 	load_32 s24, (s27)
   3d8c4:	20 83 60 c0 	sub_i s25, s0, s1
   3d8c8:	3a 00 00 a8 	load_32 s1, (s26)
   3d8cc:	00 80 fc c0 	move s0, s25
   3d8d0:	99 79 ff f9 	call -137628 <FixedMul>
   3d8d4:	3e 04 00 4f 	movehi s1, 62
   3d8d8:	60 00 5c c0 	add_i s3, s0, s24
   3d8dc:	81 30 1c 00 	or s4, s1, 1804
   3d8e0:	43 40 00 09 	ashr s2, s3, 16
   3d8e4:	04 00 00 a8 	load_32 s0, (s4)
   3d8e8:	02 00 20 c1 	cmpgt_i s0, s2, s0
   3d8ec:	60 0d 00 f4 	bnz s0, 428 <R_DrawPSprite+0x2d8>
   3d8f0:	1d 04 00 4f 	movehi s0, 61
   3d8f4:	00 20 48 00 	or s0, s0, 4616
   3d8f8:	1e 60 01 88 	store_32 s0, 88(sp)
   3d8fc:	00 00 00 a8 	load_32 s0, (s0)
   3d900:	3e b0 01 a8 	load_32 s1, 108(sp)
   3d904:	00 80 50 c0 	add_i s0, s0, s1
   3d908:	00 00 00 a8 	load_32 s0, (s0)
   3d90c:	3b 00 00 a8 	load_32 s1, (s27)
   3d910:	3e 70 01 88 	store_32 s1, 92(sp)
   3d914:	3a 00 00 a8 	load_32 s1, (s26)
   3d918:	00 80 5c c0 	add_i s0, s0, s25
   3d91c:	20 03 f1 c0 	move s25, s2
   3d920:	60 83 f1 c0 	move s27, s3
   3d924:	00 03 f2 c0 	move s24, s4
   3d928:	83 79 ff f9 	call -137716 <FixedMul>
   3d92c:	00 81 fd c0 	move s8, s27
   3d930:	e0 80 fc c0 	move s7, s25
   3d934:	3e 70 01 a8 	load_32 s1, 92(sp)
   3d938:	20 80 50 c0 	add_i s1, s0, s1
   3d93c:	08 00 00 4f 	movehi s0, 8
   3d940:	01 00 40 c1 	cmplt_i s0, s1, s0
   3d944:	a0 0a 00 f4 	bnz s0, 340 <R_DrawPSprite+0x2d8>
   3d948:	5d 04 00 4f 	movehi s2, 61
   3d94c:	20 01 fd c0 	move s9, s26
   3d950:	00 00 00 0f 	move s0, 0
   3d954:	1e a0 02 88 	store_32 s0, 168(sp)
   3d958:	de a0 01 a8 	load_32 s6, 104(sp)
   3d95c:	42 10 48 00 	or s2, s2, 4612
   3d960:	84 64 00 4f 	movehi s4, 804
   3d964:	66 30 00 a8 	load_32 s3, 12(s6)
   3d968:	42 00 00 a8 	load_32 s2, (s2)
   3d96c:	5e b3 01 a8 	load_32 s26, 108(sp)
   3d970:	64 80 61 c0 	sub_i s3, s4, s3
   3d974:	42 00 5d c0 	add_i s2, s2, s26
   3d978:	a2 00 00 a8 	load_32 s5, (s2)
   3d97c:	41 40 00 09 	ashr s2, s1, 16
   3d980:	23 80 52 c0 	add_i s1, s3, s5
   3d984:	3e 70 02 88 	store_32 s1, 156(sp)
   3d988:	67 00 00 12 	cmpgt_i s3, s7, 0
   3d98c:	20 80 f3 c0 	move s1, s7
   3d990:	43 00 00 f4 	bnz s3, 8 <R_DrawPSprite+0x1d8>
   3d994:	20 00 f0 c0 	move s1, s0
   3d998:	3e e0 01 88 	store_32 s1, 120(sp)
   3d99c:	78 00 00 a8 	load_32 s3, (s24)
   3d9a0:	82 80 21 c1 	cmpgt_i s4, s2, s3
   3d9a4:	44 00 00 f4 	bnz s4, 8 <R_DrawPSprite+0x1ec>
   3d9a8:	60 00 f1 c0 	move s3, s2
   3d9ac:	5e 04 00 4f 	movehi s2, 62
   3d9b0:	63 fc ff 05 	add_i s3, s3, -1
   3d9b4:	7e f0 01 88 	store_32 s3, 124(sp)
   3d9b8:	69 00 00 a8 	load_32 s3, (s9)
   3d9bc:	92 08 00 4f 	movehi s4, 82
   3d9c0:	42 d0 50 00 	or s2, s2, 5172
   3d9c4:	42 00 00 a8 	load_32 s2, (s2)
   3d9c8:	43 00 b1 c0 	shl s2, s3, s2
   3d9cc:	5e 50 02 88 	store_32 s2, 148(sp)
   3d9d0:	5e 80 01 a8 	load_32 s2, 96(sp)
   3d9d4:	64 e0 56 00 	or s3, s4, 5560
   3d9d8:	82 fc 03 01 	and s4, s2, 255
   3d9dc:	43 00 00 a8 	load_32 s2, (s3)
   3d9e0:	04 01 00 f2 	bz s4, 32 <R_DrawPSprite+0x240>
   3d9e4:	1e 60 01 a8 	load_32 s0, 88(sp)
   3d9e8:	60 00 00 0f 	move s3, 0
   3d9ec:	43 00 61 c0 	sub_i s2, s3, s2
   3d9f0:	00 00 00 a8 	load_32 s0, (s0)
   3d9f4:	00 00 5d c0 	add_i s0, s0, s26
   3d9f8:	00 00 00 a8 	load_32 s0, (s0)
   3d9fc:	00 fc ff 05 	add_i s0, s0, -1
   3da00:	68 fc ff 12 	cmpgt_i s3, s8, -1
   3da04:	5e 60 02 88 	store_32 s2, 152(sp)
   3da08:	83 00 00 f4 	bnz s3, 16 <R_DrawPSprite+0x258>
   3da0c:	21 80 63 c0 	sub_i s1, s1, s7
   3da10:	22 80 70 c0 	mull_i s1, s2, s1
   3da14:	00 80 50 c0 	add_i s0, s0, s1
   3da18:	21 08 00 4f 	movehi s1, 65
   3da1c:	1e 40 02 88 	store_32 s0, 144(sp)
   3da20:	1e 90 01 a8 	load_32 s0, 100(sp)
   3da24:	1e 80 02 88 	store_32 s0, 160(sp)
   3da28:	21 e0 04 00 	or s1, s1, 312
   3da2c:	01 00 00 a8 	load_32 s0, (s1)
   3da30:	20 d0 00 a8 	load_32 s1, 52(s0)
   3da34:	00 00 00 0f 	move s0, 0
   3da38:	41 00 02 12 	cmpgt_i s2, s1, 128
   3da3c:	82 02 00 f4 	bnz s2, 80 <R_DrawPSprite+0x2cc>
   3da40:	21 20 00 01 	and s1, s1, 8
   3da44:	41 02 00 f4 	bnz s1, 72 <R_DrawPSprite+0x2cc>
   3da48:	1e 04 00 4f 	movehi s0, 62
   3da4c:	00 f0 50 00 	or s0, s0, 5180
   3da50:	00 00 00 a8 	load_32 s0, (s0)
   3da54:	c0 01 00 f4 	bnz s0, 56 <R_DrawPSprite+0x2cc>
   3da58:	06 00 00 a8 	load_32 s0, (s6)
   3da5c:	00 14 00 a0 	load_u8 s0, 5(s0)
   3da60:	00 00 02 01 	and s0, s0, 128
   3da64:	40 00 00 f2 	bz s0, 8 <R_DrawPSprite+0x2ac>
   3da68:	06 00 00 f6 	b 24 <R_DrawPSprite+0x2c0>
   3da6c:	12 08 00 4f 	movehi s0, 82
   3da70:	00 00 61 00 	or s0, s0, 6208
   3da74:	00 00 00 a8 	load_32 s0, (s0)
   3da78:	00 f0 02 a8 	load_32 s0, 188(s0)
   3da7c:	04 00 00 f6 	b 16 <R_DrawPSprite+0x2cc>
   3da80:	1d 04 00 4f 	movehi s0, 61
   3da84:	00 20 47 00 	or s0, s0, 4552
   3da88:	00 00 00 a8 	load_32 s0, (s0)
   3da8c:	1e 90 02 88 	store_32 s0, 164(sp)
   3da90:	1e c0 01 05 	add_i s0, sp, 112
   3da94:	31 fd ff f9 	call -2876 <R_DrawVisSprite>
   3da98:	fe b3 02 a8 	load_32 ra, 172(sp)
   3da9c:	7e c3 02 a8 	load_32 s27, 176(sp)
   3daa0:	5e d3 02 a8 	load_32 s26, 180(sp)
   3daa4:	3e e3 02 a8 	load_32 s25, 184(sp)
   3daa8:	1e f3 02 a8 	load_32 s24, 188(sp)
   3daac:	de 03 03 05 	add_i sp, sp, 192
   3dab0:	1f 00 00 f0 	ret

000000000003dab4 R_DrawPlayerSprites:
   3dab4:	de 03 ff 05 	add_i sp, sp, -64
   3dab8:	1e f3 00 88 	store_32 s24, 60(sp)
   3dabc:	fe e3 00 88 	store_32 ra, 56(sp)
   3dac0:	01 08 00 4f 	movehi s0, 65
   3dac4:	3e 04 00 4f 	movehi s1, 62
   3dac8:	00 e0 04 00 	or s0, s0, 312
   3dacc:	21 e0 50 00 	or s1, s1, 5176
   3dad0:	00 03 00 a8 	load_32 s24, (s0)
   3dad4:	18 00 00 a8 	load_32 s0, (s24)
   3dad8:	00 d0 00 a8 	load_32 s0, 52(s0)
   3dadc:	00 00 00 a8 	load_32 s0, (s0)
   3dae0:	00 30 00 a6 	load_s16 s0, 12(s0)
   3dae4:	21 00 00 a8 	load_32 s1, (s1)
   3dae8:	00 10 00 09 	ashr s0, s0, 4
   3daec:	01 00 50 c0 	add_i s0, s1, s0
   3daf0:	3e 04 00 4f 	movehi s1, 62
   3daf4:	40 00 00 14 	cmplt_i s2, s0, 0
   3daf8:	e2 00 00 f4 	bnz s2, 28 <R_DrawPlayerSprites+0x60>
   3dafc:	40 3c 00 12 	cmpgt_i s2, s0, 15
   3db00:	21 50 51 00 	or s1, s1, 5204
   3db04:	42 00 00 f4 	bnz s2, 8 <R_DrawPlayerSprites+0x58>
   3db08:	05 00 00 f6 	b 20 <R_DrawPlayerSprites+0x68>
   3db0c:	01 00 2d 05 	add_i s0, s1, 2880
   3db10:	05 00 00 f6 	b 20 <R_DrawPlayerSprites+0x70>
   3db14:	01 50 51 00 	or s0, s1, 5204
   3db18:	03 00 00 f6 	b 12 <R_DrawPlayerSprites+0x70>
   3db1c:	00 00 03 07 	mull_i s0, s0, 192
   3db20:	01 00 50 c0 	add_i s0, s1, s0
   3db24:	32 08 00 4f 	movehi s1, 82
   3db28:	52 08 00 4f 	movehi s2, 82
   3db2c:	72 08 00 4f 	movehi s3, 82
   3db30:	21 00 61 00 	or s1, s1, 6208
   3db34:	01 00 00 88 	store_32 s0, (s1)
   3db38:	22 c0 4b 00 	or s1, s2, 4848
   3db3c:	52 08 00 4f 	movehi s2, 82
   3db40:	12 08 00 4f 	movehi s0, 82
   3db44:	42 b0 4b 00 	or s2, s2, 4844
   3db48:	00 00 57 00 	or s0, s0, 5568
   3db4c:	01 00 00 88 	store_32 s0, (s1)
   3db50:	03 d0 4b 00 	or s0, s3, 4852
   3db54:	02 00 00 88 	store_32 s0, (s2)
   3db58:	18 d0 03 a8 	load_32 s0, 244(s24)
   3db5c:	60 00 00 f2 	bz s0, 12 <R_DrawPlayerSprites+0xb4>
   3db60:	18 d0 03 05 	add_i s0, s24, 244
   3db64:	17 ff ff f9 	call -932 <R_DrawPSprite>
   3db68:	18 10 04 a8 	load_32 s0, 260(s24)
   3db6c:	60 00 00 f2 	bz s0, 12 <R_DrawPlayerSprites+0xc4>
   3db70:	18 10 04 05 	add_i s0, s24, 260
   3db74:	13 ff ff f9 	call -948 <R_DrawPSprite>
   3db78:	fe e3 00 a8 	load_32 ra, 56(sp)
   3db7c:	1e f3 00 a8 	load_32 s24, 60(sp)
   3db80:	de 03 01 05 	add_i sp, sp, 64
   3db84:	1f 00 00 f0 	ret

000000000003db88 R_SortVisSprites:
   3db88:	de 03 ff 05 	add_i sp, sp, -64
   3db8c:	12 08 00 4f 	movehi s0, 82
   3db90:	32 08 00 4f 	movehi s1, 82
   3db94:	40 00 6e 00 	or s2, s0, 7040
   3db98:	1e 00 00 05 	add_i s0, sp, 0
   3db9c:	a1 10 6e 00 	or s5, s1, 7044
   3dba0:	82 00 00 a8 	load_32 s4, (s2)
   3dba4:	20 10 00 00 	or s1, s0, 4
   3dba8:	1e 00 00 88 	store_32 s0, (sp)
   3dbac:	64 80 62 c0 	sub_i s3, s4, s5
   3dbb0:	01 00 00 88 	store_32 s0, (s1)
   3dbb4:	e3 07 00 f2 	bz s3, 252 <R_SortVisSprites+0x128>
   3dbb8:	c4 80 92 c1 	cmple_u s6, s4, s5
   3dbbc:	26 01 00 f4 	bnz s6, 36 <R_SortVisSprites+0x58>
   3dbc0:	c0 80 f2 c0 	move s6, s5
   3dbc4:	e6 f0 00 05 	add_i s7, s6, 60
   3dbc8:	e6 10 00 88 	store_32 s7, 4(s6)
   3dbcc:	06 11 ff 05 	add_i s8, s6, -60
   3dbd0:	06 01 00 88 	store_32 s8, (s6)
   3dbd4:	27 01 82 c1 	cmplt_u s9, s7, s4
   3dbd8:	c0 80 f3 c0 	move s6, s7
   3dbdc:	49 ff ff f5 	bnz s9, -24 <R_SortVisSprites+0x3c>
   3dbe0:	05 00 00 88 	store_32 s0, (s5)
   3dbe4:	a1 00 00 88 	store_32 s5, (s1)
   3dbe8:	04 20 ff 89 	store_32 s0, -56(s4)
   3dbec:	82 00 00 a8 	load_32 s4, (s2)
   3dbf0:	53 08 00 4f 	movehi s2, 83
   3dbf4:	42 10 66 00 	or s2, s2, 6532
   3dbf8:	84 10 ff 05 	add_i s4, s4, -60
   3dbfc:	9e 00 00 88 	store_32 s4, (sp)
   3dc00:	83 04 00 14 	cmplt_i s4, s3, 1
   3dc04:	42 00 00 88 	store_32 s2, (s2)
   3dc08:	42 10 00 88 	store_32 s2, 4(s2)
   3dc0c:	24 05 00 f4 	bnz s4, 164 <R_SortVisSprites+0x128>
   3dc10:	97 ec ee 4f 	movehi s4, 489335
   3dc14:	bf fc 7f 4f 	movehi s5, 262143
   3dc18:	63 08 00 09 	ashr s3, s3, 2
   3dc1c:	84 bc 3b 00 	or s4, s4, 3823
   3dc20:	a5 fc 7f 00 	or s5, s5, 8191
   3dc24:	63 00 72 c0 	mull_i s3, s3, s4
   3dc28:	80 00 00 0f 	move s4, 0
   3dc2c:	e1 00 00 a8 	load_32 s7, (s1)
   3dc30:	c7 00 00 c1 	cmpeq_i s6, s7, s0
   3dc34:	e6 01 00 f4 	bnz s6, 60 <R_SortVisSprites+0xe8>
   3dc38:	20 81 f2 c0 	move s9, s5
   3dc3c:	47 91 00 a8 	load_32 s10, 36(s7)
   3dc40:	c0 80 f3 c0 	move s6, s7
   3dc44:	6a 81 44 c1 	cmplt_i s11, s10, s9
   3dc48:	4b 00 00 f4 	bnz s11, 8 <R_SortVisSprites+0xc8>
   3dc4c:	c0 00 f4 c0 	move s6, s8
   3dc50:	4b 00 00 f4 	bnz s11, 8 <R_SortVisSprites+0xd0>
   3dc54:	40 81 f4 c0 	move s10, s9
   3dc58:	e7 10 00 a8 	load_32 s7, 4(s7)
   3dc5c:	20 01 f5 c0 	move s9, s10
   3dc60:	00 01 f3 c0 	move s8, s6
   3dc64:	67 01 10 c1 	cmpne_i s11, s7, s0
   3dc68:	ab fe ff f5 	bnz s11, -44 <R_SortVisSprites+0xb4>
   3dc6c:	02 00 00 f6 	b 8 <R_SortVisSprites+0xec>
   3dc70:	c0 00 f4 c0 	move s6, s8
   3dc74:	e6 00 00 a8 	load_32 s7, (s6)
   3dc78:	84 04 00 05 	add_i s4, s4, 1
   3dc7c:	06 11 00 a8 	load_32 s8, 4(s6)
   3dc80:	e8 00 00 88 	store_32 s7, (s8)
   3dc84:	e6 00 00 a8 	load_32 s7, (s6)
   3dc88:	07 11 00 88 	store_32 s8, 4(s7)
   3dc8c:	46 10 00 88 	store_32 s2, 4(s6)
   3dc90:	e2 00 00 a8 	load_32 s7, (s2)
   3dc94:	e6 00 00 88 	store_32 s7, (s6)
   3dc98:	e2 00 00 a8 	load_32 s7, (s2)
   3dc9c:	c7 10 00 88 	store_32 s6, 4(s7)
   3dca0:	e4 80 41 c1 	cmplt_i s7, s4, s3
   3dca4:	c2 00 00 88 	store_32 s6, (s2)
   3dca8:	00 01 f3 c0 	move s8, s6
   3dcac:	07 fc ff f5 	bnz s7, -128 <R_SortVisSprites+0xa4>
   3dcb0:	de 03 01 05 	add_i sp, sp, 64
   3dcb4:	1f 00 00 f0 	ret

000000000003dcb8 R_DrawSprite:
   3dcb8:	de 03 eb 05 	add_i sp, sp, -1344
   3dcbc:	1e f3 14 88 	store_32 s24, 1340(sp)
   3dcc0:	3e e3 14 88 	store_32 s25, 1336(sp)
   3dcc4:	5e d3 14 88 	store_32 s26, 1332(sp)
   3dcc8:	7e c3 14 88 	store_32 s27, 1328(sp)
   3dccc:	fe b3 14 88 	store_32 ra, 1324(sp)
   3dcd0:	20 01 f0 c0 	move s9, s0
   3dcd4:	09 20 00 a8 	load_32 s0, 8(s9)
   3dcd8:	29 33 00 a8 	load_32 s25, 12(s9)
   3dcdc:	20 80 2c c1 	cmpgt_i s1, s0, s25
   3dce0:	c1 01 00 f4 	bnz s1, 56 <R_DrawSprite+0x60>
   3dce4:	47 00 00 4f 	movehi s2, 7
   3dce8:	3e b0 00 05 	add_i s1, sp, 44
   3dcec:	7e b0 0a 05 	add_i s3, sp, 684
   3dcf0:	42 f8 7f 00 	or s2, s2, 8190
   3dcf4:	80 00 f0 c0 	move s4, s0
   3dcf8:	a4 04 00 0b 	shl s5, s4, 1
   3dcfc:	c1 80 52 c0 	add_i s6, s1, s5
   3dd00:	a3 80 52 c0 	add_i s5, s3, s5
   3dd04:	46 00 00 86 	store_16 s2, (s6)
   3dd08:	c4 80 4c c1 	cmplt_i s6, s4, s25
   3dd0c:	84 04 00 05 	add_i s4, s4, 1
   3dd10:	45 00 00 86 	store_16 s2, (s5)
   3dd14:	26 ff ff f5 	bnz s6, -28 <R_DrawSprite+0x40>
   3dd18:	3d 04 00 4f 	movehi s1, 61
   3dd1c:	5c 04 00 4f 	movehi s2, 60
   3dd20:	21 d0 42 00 	or s1, s1, 4276
   3dd24:	c2 d0 02 00 	or s6, s2, 180
   3dd28:	41 03 00 a8 	load_32 s26, (s1)
   3dd2c:	3a 40 ff 05 	add_i s1, s26, -48
   3dd30:	41 00 83 c1 	cmplt_u s2, s1, s6
   3dd34:	22 15 00 f4 	bnz s2, 676 <R_DrawSprite+0x320>
   3dd38:	07 00 00 4f 	movehi s0, 7
   3dd3c:	3e a1 00 88 	store_32 s9, 40(sp)
   3dd40:	fe b0 0a 05 	add_i s7, sp, 684
   3dd44:	de 90 00 88 	store_32 s6, 36(sp)
   3dd48:	5e b1 00 05 	add_i s10, sp, 44
   3dd4c:	fe 80 00 88 	store_32 s7, 32(sp)
   3dd50:	00 f9 7f 00 	or s8, s0, 8190
   3dd54:	1e 71 00 88 	store_32 s8, 28(sp)
   3dd58:	5e 61 00 88 	store_32 s10, 24(sp)
   3dd5c:	5a 50 ff a9 	load_32 s2, -44(s26)
   3dd60:	00 83 f0 c0 	move s24, s1
   3dd64:	02 80 2c c1 	cmpgt_i s0, s2, s25
   3dd68:	e0 0d 00 f4 	bnz s0, 444 <R_DrawSprite+0x26c>
   3dd6c:	07 00 00 f6 	b 28 <R_DrawSprite+0xd0>
   3dd70:	29 33 00 a8 	load_32 s25, 12(s9)
   3dd74:	40 03 fc c0 	move s26, s24
   3dd78:	5a 50 ff a9 	load_32 s2, -44(s26)
   3dd7c:	00 83 f0 c0 	move s24, s1
   3dd80:	02 80 2c c1 	cmpgt_i s0, s2, s25
   3dd84:	00 0d 00 f4 	bnz s0, 416 <R_DrawSprite+0x26c>
   3dd88:	3a 60 ff a9 	load_32 s1, -40(s26)
   3dd8c:	69 23 00 a8 	load_32 s27, 8(s9)
   3dd90:	01 80 4d c1 	cmplt_i s0, s1, s27
   3dd94:	80 0c 00 f4 	bnz s0, 400 <R_DrawSprite+0x26c>
   3dd98:	1a a0 ff a9 	load_32 s0, -24(s26)
   3dd9c:	60 00 00 f4 	bnz s0, 12 <R_DrawSprite+0xf0>
   3dda0:	7a f0 ff a9 	load_32 s3, -4(s26)
   3dda4:	03 0c 00 f2 	bz s3, 384 <R_DrawSprite+0x26c>
   3dda8:	62 80 4d c1 	cmplt_i s3, s2, s27
   3ddac:	43 00 00 f4 	bnz s3, 8 <R_DrawSprite+0xfc>
   3ddb0:	60 03 f1 c0 	move s27, s2
   3ddb4:	41 80 2c c1 	cmpgt_i s2, s1, s25
   3ddb8:	42 00 00 f4 	bnz s2, 8 <R_DrawSprite+0x108>
   3ddbc:	20 83 f0 c0 	move s25, s1
   3ddc0:	5a 70 ff a9 	load_32 s2, -36(s26)
   3ddc4:	3a 80 ff a9 	load_32 s1, -32(s26)
   3ddc8:	a0 00 f1 c0 	move s5, s2
   3ddcc:	62 80 20 c1 	cmpgt_i s3, s2, s1
   3ddd0:	43 00 00 f4 	bnz s3, 8 <R_DrawSprite+0x120>
   3ddd4:	44 00 00 f6 	b 272 <R_DrawSprite+0x22c>
   3ddd8:	89 90 00 a8 	load_32 s4, 36(s9)
   3dddc:	a5 00 42 c1 	cmplt_i s5, s5, s4
   3dde0:	c5 08 00 f4 	bnz s5, 280 <R_DrawSprite+0x240>
   3dde4:	43 00 00 f4 	bnz s3, 8 <R_DrawSprite+0x134>
   3dde8:	20 00 f1 c0 	move s1, s2
   3ddec:	21 00 32 c1 	cmpge_i s1, s1, s4
   3ddf0:	81 01 00 f4 	bnz s1, 48 <R_DrawSprite+0x168>
   3ddf4:	09 40 00 a8 	load_32 s0, 16(s9)
   3ddf8:	29 50 00 a8 	load_32 s1, 20(s9)
   3ddfc:	58 00 00 a8 	load_32 s2, (s24)
   3de00:	9c ec ff f9 	call -19856 <R_PointOnSegSide>
   3de04:	5e 61 00 a8 	load_32 s10, 24(sp)
   3de08:	1e 71 00 a8 	load_32 s8, 28(sp)
   3de0c:	fe 80 00 a8 	load_32 s7, 32(sp)
   3de10:	de 90 00 a8 	load_32 s6, 36(sp)
   3de14:	3e a1 00 a8 	load_32 s9, 40(sp)
   3de18:	00 07 00 f2 	bz s0, 224 <R_DrawSprite+0x240>
   3de1c:	1a a0 ff a9 	load_32 s0, -24(s26)
   3de20:	29 60 00 a8 	load_32 s1, 24(s9)
   3de24:	5a b0 ff a9 	load_32 s2, -20(s26)
   3de28:	21 00 41 c1 	cmplt_i s1, s1, s2
   3de2c:	41 00 00 f4 	bnz s1, 8 <R_DrawSprite+0x17c>
   3de30:	41 00 00 f6 	b 260 <R_DrawSprite+0x27c>
   3de34:	29 70 00 a8 	load_32 s1, 28(s9)
   3de38:	5a c0 ff a9 	load_32 s2, -16(s26)
   3de3c:	21 00 21 c1 	cmpgt_i s1, s1, s2
   3de40:	41 00 00 f4 	bnz s1, 8 <R_DrawSprite+0x190>
   3de44:	41 00 00 f6 	b 260 <R_DrawSprite+0x290>
   3de48:	20 04 00 10 	cmpeq_i s1, s0, 1
   3de4c:	61 08 00 f4 	bnz s1, 268 <R_DrawSprite+0x2a0>
   3de50:	20 08 00 10 	cmpeq_i s1, s0, 2
   3de54:	01 0a 00 f4 	bnz s1, 320 <R_DrawSprite+0x2dc>
   3de58:	00 0c 00 11 	cmpne_i s0, s0, 3
   3de5c:	40 06 00 f4 	bnz s0, 200 <R_DrawSprite+0x26c>
   3de60:	1b 80 2c c1 	cmpgt_i s0, s27, s25
   3de64:	00 06 00 f4 	bnz s0, 192 <R_DrawSprite+0x26c>
   3de68:	1b 04 00 0b 	shl s0, s27, 1
   3de6c:	27 00 50 c0 	add_i s1, s7, s0
   3de70:	41 00 00 a4 	load_u16 s2, (s1)
   3de74:	42 00 14 c1 	cmpne_i s2, s2, s8
   3de78:	42 00 00 f4 	bnz s2, 8 <R_DrawSprite+0x1c8>
   3de7c:	0a 00 00 f6 	b 40 <R_DrawSprite+0x1ec>
   3de80:	2a 00 50 c0 	add_i s1, s10, s0
   3de84:	41 00 00 a4 	load_u16 s2, (s1)
   3de88:	42 00 14 c1 	cmpne_i s2, s2, s8
   3de8c:	42 00 00 f4 	bnz s2, 8 <R_DrawSprite+0x1dc>
   3de90:	0d 00 00 f6 	b 52 <R_DrawSprite+0x20c>
   3de94:	1b 80 4c c1 	cmplt_i s0, s27, s25
   3de98:	7b 07 00 05 	add_i s27, s27, 1
   3de9c:	60 fe ff f5 	bnz s0, -52 <R_DrawSprite+0x1b0>
   3dea0:	21 00 00 f6 	b 132 <R_DrawSprite+0x26c>
   3dea4:	5a e0 ff a9 	load_32 s2, -8(s26)
   3dea8:	42 00 50 c0 	add_i s2, s2, s0
   3deac:	42 00 00 a6 	load_s16 s2, (s2)
   3deb0:	41 00 00 86 	store_16 s2, (s1)
   3deb4:	2a 00 50 c0 	add_i s1, s10, s0
   3deb8:	41 00 00 a4 	load_u16 s2, (s1)
   3debc:	42 00 14 c1 	cmpne_i s2, s2, s8
   3dec0:	a2 fe ff f5 	bnz s2, -44 <R_DrawSprite+0x1dc>
   3dec4:	5a d0 ff a9 	load_32 s2, -12(s26)
   3dec8:	02 00 50 c0 	add_i s0, s2, s0
   3decc:	00 00 00 a6 	load_s16 s0, (s0)
   3ded0:	01 00 00 86 	store_16 s0, (s1)
   3ded4:	1b 80 4c c1 	cmplt_i s0, s27, s25
   3ded8:	7b 07 00 05 	add_i s27, s27, 1
   3dedc:	60 fc ff f5 	bnz s0, -116 <R_DrawSprite+0x1b0>
   3dee0:	11 00 00 f6 	b 68 <R_DrawSprite+0x26c>
   3dee4:	a0 80 f0 c0 	move s5, s1
   3dee8:	89 90 00 a8 	load_32 s4, 36(s9)
   3deec:	a5 00 42 c1 	cmplt_i s5, s5, s4
   3def0:	45 00 00 f4 	bnz s5, 8 <R_DrawSprite+0x240>
   3def4:	bc ff ff f7 	b -272 <R_DrawSprite+0x12c>
   3def8:	1a f0 ff a9 	load_32 s0, -4(s26)
   3defc:	40 01 00 f2 	bz s0, 40 <R_DrawSprite+0x26c>
   3df00:	00 00 fc c0 	move s0, s24
   3df04:	20 80 fd c0 	move s1, s27
   3df08:	40 80 fc c0 	move s2, s25
   3df0c:	0b f4 ff f9 	call -12244 <R_RenderMaskedSegRange>
   3df10:	5e 61 00 a8 	load_32 s10, 24(sp)
   3df14:	1e 71 00 a8 	load_32 s8, 28(sp)
   3df18:	fe 80 00 a8 	load_32 s7, 32(sp)
   3df1c:	de 90 00 a8 	load_32 s6, 36(sp)
   3df20:	3e a1 00 a8 	load_32 s9, 40(sp)
   3df24:	38 40 ff 05 	add_i s1, s24, -48
   3df28:	01 00 83 c1 	cmplt_u s0, s1, s6
   3df2c:	20 05 00 f4 	bnz s0, 164 <R_DrawSprite+0x318>
   3df30:	90 ff ff f7 	b -448 <R_DrawSprite+0xb8>
   3df34:	00 f8 ff 01 	and s0, s0, -2
   3df38:	29 70 00 a8 	load_32 s1, 28(s9)
   3df3c:	5a c0 ff a9 	load_32 s2, -16(s26)
   3df40:	21 00 21 c1 	cmpgt_i s1, s1, s2
   3df44:	21 f8 ff f5 	bnz s1, -252 <R_DrawSprite+0x190>
   3df48:	00 f4 ff 01 	and s0, s0, -3
   3df4c:	20 04 00 10 	cmpeq_i s1, s0, 1
   3df50:	41 00 00 f4 	bnz s1, 8 <R_DrawSprite+0x2a0>
   3df54:	bf ff ff f7 	b -260 <R_DrawSprite+0x198>
   3df58:	1b 80 2c c1 	cmpgt_i s0, s27, s25
   3df5c:	40 fe ff f5 	bnz s0, -56 <R_DrawSprite+0x26c>
   3df60:	3b 04 00 0b 	shl s1, s27, 1
   3df64:	07 80 50 c0 	add_i s0, s7, s1
   3df68:	40 00 00 a4 	load_u16 s2, (s0)
   3df6c:	42 00 14 c1 	cmpne_i s2, s2, s8
   3df70:	a2 00 00 f4 	bnz s2, 20 <R_DrawSprite+0x2cc>
   3df74:	5a e0 ff a9 	load_32 s2, -8(s26)
   3df78:	22 80 50 c0 	add_i s1, s2, s1
   3df7c:	21 00 00 a6 	load_s16 s1, (s1)
   3df80:	20 00 00 86 	store_16 s1, (s0)
   3df84:	1b 80 4c c1 	cmplt_i s0, s27, s25
   3df88:	7b 07 00 05 	add_i s27, s27, 1
   3df8c:	a0 fe ff f5 	bnz s0, -44 <R_DrawSprite+0x2a8>
   3df90:	e5 ff ff f7 	b -108 <R_DrawSprite+0x26c>
   3df94:	1b 80 2c c1 	cmpgt_i s0, s27, s25
   3df98:	60 fc ff f5 	bnz s0, -116 <R_DrawSprite+0x26c>
   3df9c:	3b 04 00 0b 	shl s1, s27, 1
   3dfa0:	0a 80 50 c0 	add_i s0, s10, s1
   3dfa4:	40 00 00 a4 	load_u16 s2, (s0)
   3dfa8:	42 00 14 c1 	cmpne_i s2, s2, s8
   3dfac:	a2 00 00 f4 	bnz s2, 20 <R_DrawSprite+0x308>
   3dfb0:	5a d0 ff a9 	load_32 s2, -12(s26)
   3dfb4:	22 80 50 c0 	add_i s1, s2, s1
   3dfb8:	21 00 00 a6 	load_s16 s1, (s1)
   3dfbc:	20 00 00 86 	store_16 s1, (s0)
   3dfc0:	1b 80 4c c1 	cmplt_i s0, s27, s25
   3dfc4:	7b 07 00 05 	add_i s27, s27, 1
   3dfc8:	a0 fe ff f5 	bnz s0, -44 <R_DrawSprite+0x2e4>
   3dfcc:	d6 ff ff f7 	b -168 <R_DrawSprite+0x26c>
   3dfd0:	09 20 00 a8 	load_32 s0, 8(s9)
   3dfd4:	29 33 00 a8 	load_32 s25, 12(s9)
   3dfd8:	20 80 2c c1 	cmpgt_i s1, s0, s25
   3dfdc:	21 04 00 f4 	bnz s1, 132 <R_DrawSprite+0x3a8>
   3dfe0:	3e 04 00 4f 	movehi s1, 62
   3dfe4:	a7 00 00 4f 	movehi s5, 7
   3dfe8:	5e b0 0a 05 	add_i s2, sp, 684
   3dfec:	21 10 1c 00 	or s1, s1, 1796
   3dff0:	65 f8 7f 00 	or s3, s5, 8190
   3dff4:	9e b0 00 05 	add_i s4, sp, 44
   3dff8:	21 00 00 a8 	load_32 s1, (s1)
   3dffc:	a5 fc 7f 00 	or s5, s5, 8191
   3e000:	c0 04 00 0b 	shl s6, s0, 1
   3e004:	e2 00 53 c0 	add_i s7, s2, s6
   3e008:	07 01 00 a4 	load_u16 s8, (s7)
   3e00c:	08 81 11 c1 	cmpne_i s8, s8, s3
   3e010:	48 00 00 f4 	bnz s8, 8 <R_DrawSprite+0x360>
   3e014:	0a 00 00 f6 	b 40 <R_DrawSprite+0x384>
   3e018:	c4 00 53 c0 	add_i s6, s4, s6
   3e01c:	e6 00 00 a4 	load_u16 s7, (s6)
   3e020:	e7 80 11 c1 	cmpne_i s7, s7, s3
   3e024:	47 00 00 f4 	bnz s7, 8 <R_DrawSprite+0x374>
   3e028:	0a 00 00 f6 	b 40 <R_DrawSprite+0x398>
   3e02c:	c0 80 4c c1 	cmplt_i s6, s0, s25
   3e030:	00 04 00 05 	add_i s0, s0, 1
   3e034:	66 fe ff f5 	bnz s6, -52 <R_DrawSprite+0x348>
   3e038:	0a 00 00 f6 	b 40 <R_DrawSprite+0x3a8>
   3e03c:	27 00 00 86 	store_16 s1, (s7)
   3e040:	c4 00 53 c0 	add_i s6, s4, s6
   3e044:	e6 00 00 a4 	load_u16 s7, (s6)
   3e048:	e7 80 11 c1 	cmpne_i s7, s7, s3
   3e04c:	07 ff ff f5 	bnz s7, -32 <R_DrawSprite+0x374>
   3e050:	a6 00 00 86 	store_16 s5, (s6)
   3e054:	c0 80 4c c1 	cmplt_i s6, s0, s25
   3e058:	00 04 00 05 	add_i s0, s0, 1
   3e05c:	26 fd ff f5 	bnz s6, -92 <R_DrawSprite+0x348>
   3e060:	12 08 00 4f 	movehi s0, 82
   3e064:	32 08 00 4f 	movehi s1, 82
   3e068:	5e b0 0a 05 	add_i s2, sp, 684
   3e06c:	00 c0 4b 00 	or s0, s0, 4848
   3e070:	21 b0 4b 00 	or s1, s1, 4844
   3e074:	40 00 00 88 	store_32 s2, (s0)
   3e078:	1e b0 00 05 	add_i s0, sp, 44
   3e07c:	01 00 00 88 	store_32 s0, (s1)
   3e080:	00 80 f4 c0 	move s0, s9
   3e084:	b5 fb ff f9 	call -4396 <R_DrawVisSprite>
   3e088:	fe b3 14 a8 	load_32 ra, 1324(sp)
   3e08c:	7e c3 14 a8 	load_32 s27, 1328(sp)
   3e090:	5e d3 14 a8 	load_32 s26, 1332(sp)
   3e094:	3e e3 14 a8 	load_32 s25, 1336(sp)
   3e098:	1e f3 14 a8 	load_32 s24, 1340(sp)
   3e09c:	de 03 15 05 	add_i sp, sp, 1344
   3e0a0:	1f 00 00 f0 	ret

000000000003e0a4 R_DrawMasked:
   3e0a4:	de 03 fe 05 	add_i sp, sp, -128
   3e0a8:	1e f3 01 88 	store_32 s24, 124(sp)
   3e0ac:	3e e3 01 88 	store_32 s25, 120(sp)
   3e0b0:	fe d3 01 88 	store_32 ra, 116(sp)
   3e0b4:	12 08 00 4f 	movehi s0, 82
   3e0b8:	5e e0 00 05 	add_i s2, sp, 56
   3e0bc:	20 00 6e 00 	or s1, s0, 7040
   3e0c0:	12 08 00 4f 	movehi s0, 82
   3e0c4:	62 10 00 00 	or s3, s2, 4
   3e0c8:	a1 00 00 a8 	load_32 s5, (s1)
   3e0cc:	80 10 6e 00 	or s4, s0, 7044
   3e0d0:	5e e0 00 88 	store_32 s2, 56(sp)
   3e0d4:	43 00 00 88 	store_32 s2, (s3)
   3e0d8:	c5 00 62 c0 	sub_i s6, s5, s4
   3e0dc:	06 08 00 f2 	bz s6, 256 <R_DrawMasked+0x138>
   3e0e0:	e5 00 92 c1 	cmple_u s7, s5, s4
   3e0e4:	27 01 00 f4 	bnz s7, 36 <R_DrawMasked+0x64>
   3e0e8:	e0 00 f2 c0 	move s7, s4
   3e0ec:	07 f1 00 05 	add_i s8, s7, 60
   3e0f0:	07 11 00 88 	store_32 s8, 4(s7)
   3e0f4:	27 11 ff 05 	add_i s9, s7, -60
   3e0f8:	27 01 00 88 	store_32 s9, (s7)
   3e0fc:	48 81 82 c1 	cmplt_u s10, s8, s5
   3e100:	e0 00 f4 c0 	move s7, s8
   3e104:	4a ff ff f5 	bnz s10, -24 <R_DrawMasked+0x48>
   3e108:	44 00 00 88 	store_32 s2, (s4)
   3e10c:	83 00 00 88 	store_32 s4, (s3)
   3e110:	93 08 00 4f 	movehi s4, 83
   3e114:	45 20 ff 89 	store_32 s2, -56(s5)
   3e118:	a1 00 00 a8 	load_32 s5, (s1)
   3e11c:	84 10 66 00 	or s4, s4, 6532
   3e120:	e5 10 ff 05 	add_i s7, s5, -60
   3e124:	fe e0 00 88 	store_32 s7, 56(sp)
   3e128:	e6 04 00 14 	cmplt_i s7, s6, 1
   3e12c:	84 00 00 88 	store_32 s4, (s4)
   3e130:	84 10 00 88 	store_32 s4, 4(s4)
   3e134:	47 05 00 f4 	bnz s7, 168 <R_DrawMasked+0x138>
   3e138:	b7 ec ee 4f 	movehi s5, 489335
   3e13c:	ff fc 7f 4f 	movehi s7, 262143
   3e140:	c6 08 00 09 	ashr s6, s6, 2
   3e144:	a5 bc 3b 00 	or s5, s5, 3823
   3e148:	e7 fc 7f 00 	or s7, s7, 8191
   3e14c:	a6 80 72 c0 	mull_i s5, s6, s5
   3e150:	c0 00 00 0f 	move s6, 0
   3e154:	23 01 00 a8 	load_32 s9, (s3)
   3e158:	09 01 01 c1 	cmpeq_i s8, s9, s2
   3e15c:	e8 01 00 f4 	bnz s8, 60 <R_DrawMasked+0xf4>
   3e160:	60 81 f3 c0 	move s11, s7
   3e164:	89 91 00 a8 	load_32 s12, 36(s9)
   3e168:	00 81 f4 c0 	move s8, s9
   3e16c:	ac 81 45 c1 	cmplt_i s13, s12, s11
   3e170:	4d 00 00 f4 	bnz s13, 8 <R_DrawMasked+0xd4>
   3e174:	00 01 f5 c0 	move s8, s10
   3e178:	4d 00 00 f4 	bnz s13, 8 <R_DrawMasked+0xdc>
   3e17c:	80 81 f5 c0 	move s12, s11
   3e180:	29 11 00 a8 	load_32 s9, 4(s9)
   3e184:	60 01 f6 c0 	move s11, s12
   3e188:	40 01 f4 c0 	move s10, s8
   3e18c:	a9 01 11 c1 	cmpne_i s13, s9, s2
   3e190:	ad fe ff f5 	bnz s13, -44 <R_DrawMasked+0xc0>
   3e194:	02 00 00 f6 	b 8 <R_DrawMasked+0xf8>
   3e198:	00 01 f5 c0 	move s8, s10
   3e19c:	28 01 00 a8 	load_32 s9, (s8)
   3e1a0:	c6 04 00 05 	add_i s6, s6, 1
   3e1a4:	48 11 00 a8 	load_32 s10, 4(s8)
   3e1a8:	2a 01 00 88 	store_32 s9, (s10)
   3e1ac:	28 01 00 a8 	load_32 s9, (s8)
   3e1b0:	49 11 00 88 	store_32 s10, 4(s9)
   3e1b4:	88 10 00 88 	store_32 s4, 4(s8)
   3e1b8:	24 01 00 a8 	load_32 s9, (s4)
   3e1bc:	28 01 00 88 	store_32 s9, (s8)
   3e1c0:	24 01 00 a8 	load_32 s9, (s4)
   3e1c4:	09 11 00 88 	store_32 s8, 4(s9)
   3e1c8:	26 81 42 c1 	cmplt_i s9, s6, s5
   3e1cc:	04 01 00 88 	store_32 s8, (s4)
   3e1d0:	40 01 f4 c0 	move s10, s8
   3e1d4:	09 fc ff f5 	bnz s9, -128 <R_DrawMasked+0xb0>
   3e1d8:	a1 00 00 a8 	load_32 s5, (s1)
   3e1dc:	00 10 6e 00 	or s0, s0, 7044
   3e1e0:	05 00 90 c1 	cmple_u s0, s5, s0
   3e1e4:	60 01 00 f4 	bnz s0, 44 <R_DrawMasked+0x16c>
   3e1e8:	13 08 00 4f 	movehi s0, 83
   3e1ec:	20 13 66 00 	or s25, s0, 6532
   3e1f0:	19 13 00 a8 	load_32 s24, 4(s25)
   3e1f4:	18 80 0c c1 	cmpeq_i s0, s24, s25
   3e1f8:	c0 00 00 f4 	bnz s0, 24 <R_DrawMasked+0x16c>
   3e1fc:	00 00 fc c0 	move s0, s24
   3e200:	ae fe ff f9 	call -1352 <R_DrawSprite>
   3e204:	18 13 00 a8 	load_32 s24, 4(s24)
   3e208:	18 80 1c c1 	cmpne_i s0, s24, s25
   3e20c:	80 ff ff f5 	bnz s0, -16 <R_DrawMasked+0x158>
   3e210:	1d 04 00 4f 	movehi s0, 61
   3e214:	5c 04 00 4f 	movehi s2, 60
   3e218:	00 d0 42 00 	or s0, s0, 4276
   3e21c:	22 d3 02 00 	or s25, s2, 180
   3e220:	00 00 00 a8 	load_32 s0, (s0)
   3e224:	20 40 ff 05 	add_i s1, s0, -48
   3e228:	41 80 8c c1 	cmplt_u s2, s1, s25
   3e22c:	82 01 00 f4 	bnz s2, 48 <R_DrawMasked+0x1b8>
   3e230:	40 f0 ff a9 	load_32 s2, -4(s0)
   3e234:	00 83 f0 c0 	move s24, s1
   3e238:	a2 00 00 f2 	bz s2, 20 <R_DrawMasked+0x1a8>
   3e23c:	20 50 ff a9 	load_32 s1, -44(s0)
   3e240:	40 60 ff a9 	load_32 s2, -40(s0)
   3e244:	00 00 fc c0 	move s0, s24
   3e248:	3c f3 ff f9 	call -13072 <R_RenderMaskedSegRange>
   3e24c:	38 40 ff 05 	add_i s1, s24, -48
   3e250:	00 00 fc c0 	move s0, s24
   3e254:	41 80 7c c1 	cmpge_u s2, s1, s25
   3e258:	c2 fe ff f5 	bnz s2, -40 <R_DrawMasked+0x18c>
   3e25c:	1f 04 00 4f 	movehi s0, 63
   3e260:	00 c0 04 00 	or s0, s0, 304
   3e264:	00 00 00 a8 	load_32 s0, (s0)
   3e268:	e0 05 00 f4 	bnz s0, 188 <R_DrawMasked+0x280>
   3e26c:	01 08 00 4f 	movehi s0, 65
   3e270:	3e 04 00 4f 	movehi s1, 62
   3e274:	00 e0 04 00 	or s0, s0, 312
   3e278:	21 e0 50 00 	or s1, s1, 5176
   3e27c:	00 03 00 a8 	load_32 s24, (s0)
   3e280:	18 00 00 a8 	load_32 s0, (s24)
   3e284:	00 d0 00 a8 	load_32 s0, 52(s0)
   3e288:	00 00 00 a8 	load_32 s0, (s0)
   3e28c:	00 30 00 a6 	load_s16 s0, 12(s0)
   3e290:	21 00 00 a8 	load_32 s1, (s1)
   3e294:	00 10 00 09 	ashr s0, s0, 4
   3e298:	01 00 50 c0 	add_i s0, s1, s0
   3e29c:	3e 04 00 4f 	movehi s1, 62
   3e2a0:	40 00 00 14 	cmplt_i s2, s0, 0
   3e2a4:	e2 00 00 f4 	bnz s2, 28 <R_DrawMasked+0x21c>
   3e2a8:	40 3c 00 12 	cmpgt_i s2, s0, 15
   3e2ac:	21 50 51 00 	or s1, s1, 5204
   3e2b0:	42 00 00 f4 	bnz s2, 8 <R_DrawMasked+0x214>
   3e2b4:	05 00 00 f6 	b 20 <R_DrawMasked+0x224>
   3e2b8:	01 00 2d 05 	add_i s0, s1, 2880
   3e2bc:	05 00 00 f6 	b 20 <R_DrawMasked+0x22c>
   3e2c0:	01 50 51 00 	or s0, s1, 5204
   3e2c4:	03 00 00 f6 	b 12 <R_DrawMasked+0x22c>
   3e2c8:	00 00 03 07 	mull_i s0, s0, 192
   3e2cc:	01 00 50 c0 	add_i s0, s1, s0
   3e2d0:	32 08 00 4f 	movehi s1, 82
   3e2d4:	52 08 00 4f 	movehi s2, 82
   3e2d8:	72 08 00 4f 	movehi s3, 82
   3e2dc:	21 00 61 00 	or s1, s1, 6208
   3e2e0:	01 00 00 88 	store_32 s0, (s1)
   3e2e4:	22 c0 4b 00 	or s1, s2, 4848
   3e2e8:	52 08 00 4f 	movehi s2, 82
   3e2ec:	12 08 00 4f 	movehi s0, 82
   3e2f0:	42 b0 4b 00 	or s2, s2, 4844
   3e2f4:	00 00 57 00 	or s0, s0, 5568
   3e2f8:	01 00 00 88 	store_32 s0, (s1)
   3e2fc:	03 d0 4b 00 	or s0, s3, 4852
   3e300:	02 00 00 88 	store_32 s0, (s2)
   3e304:	18 d0 03 a8 	load_32 s0, 244(s24)
   3e308:	60 00 00 f2 	bz s0, 12 <R_DrawMasked+0x270>
   3e30c:	18 d0 03 05 	add_i s0, s24, 244
   3e310:	2c fd ff f9 	call -2896 <R_DrawPSprite>
   3e314:	18 10 04 a8 	load_32 s0, 260(s24)
   3e318:	60 00 00 f2 	bz s0, 12 <R_DrawMasked+0x280>
   3e31c:	18 10 04 05 	add_i s0, s24, 260
   3e320:	28 fd ff f9 	call -2912 <R_DrawPSprite>
   3e324:	fe d3 01 a8 	load_32 ra, 116(sp)
   3e328:	3e e3 01 a8 	load_32 s25, 120(sp)
   3e32c:	1e f3 01 a8 	load_32 s24, 124(sp)
   3e330:	de 03 02 05 	add_i sp, sp, 128
   3e334:	1f 00 00 f0 	ret

000000000003e338 strupr:
   3e338:	de 03 ff 05 	add_i sp, sp, -64
   3e33c:	1e f3 00 88 	store_32 s24, 60(sp)
   3e340:	fe e3 00 88 	store_32 ra, 56(sp)
   3e344:	00 03 f0 c0 	move s24, s0
   3e348:	18 00 00 a0 	load_u8 s0, (s24)
   3e34c:	e0 00 00 f2 	bz s0, 28 <strupr+0x30>
   3e350:	00 00 d0 c1 	sext_8 s0, s0
   3e354:	e4 50 00 f8 	call 82832 <toupper>
   3e358:	18 00 00 82 	store_8 s0, (s24)
   3e35c:	18 04 00 a0 	load_u8 s0, 1(s24)
   3e360:	18 07 00 05 	add_i s24, s24, 1
   3e364:	60 ff ff f5 	bnz s0, -20 <strupr+0x18>
   3e368:	fe e3 00 a8 	load_32 ra, 56(sp)
   3e36c:	1e f3 00 a8 	load_32 s24, 60(sp)
   3e370:	de 03 01 05 	add_i sp, sp, 64
   3e374:	1f 00 00 f0 	ret

000000000003e378 filelength:
   3e378:	de 03 fe 05 	add_i sp, sp, -128
   3e37c:	fe f3 01 88 	store_32 ra, 124(sp)
   3e380:	3e e0 01 05 	add_i s1, sp, 120
   3e384:	57 56 00 f8 	call 88412 <fstat>
   3e388:	00 fc ff 11 	cmpne_i s0, s0, -1
   3e38c:	40 00 00 f4 	bnz s0, 8 <filelength+0x1c>
   3e390:	05 00 00 f6 	b 20 <filelength+0x2c>
   3e394:	1e e0 01 a8 	load_32 s0, 120(sp)
   3e398:	fe f3 01 a8 	load_32 ra, 124(sp)
   3e39c:	de 03 02 05 	add_i sp, sp, 128
   3e3a0:	1f 00 00 f0 	ret
   3e3a4:	02 00 00 4f 	movehi s0, 2
   3e3a8:	00 c0 62 00 	or s0, s0, 6320
   3e3ac:	1e 00 00 88 	store_32 s0, (sp)
   3e3b0:	55 3f ff f9 	call -197292 <I_Error>
   3e3b4:	1e e0 01 a8 	load_32 s0, 120(sp)
   3e3b8:	fe f3 01 a8 	load_32 ra, 124(sp)
   3e3bc:	de 03 02 05 	add_i sp, sp, 128
   3e3c0:	1f 00 00 f0 	ret

000000000003e3c4 ExtractFileBase:
   3e3c4:	de 03 fe 05 	add_i sp, sp, -128
   3e3c8:	1e f3 01 88 	store_32 s24, 124(sp)
   3e3cc:	3e e3 01 88 	store_32 s25, 120(sp)
   3e3d0:	5e d3 01 88 	store_32 s26, 116(sp)
   3e3d4:	7e c3 01 88 	store_32 s27, 112(sp)
   3e3d8:	fe b3 01 88 	store_32 ra, 108(sp)
   3e3dc:	20 83 f0 c0 	move s25, s1
   3e3e0:	00 03 f0 c0 	move s24, s0
   3e3e4:	ef 50 00 f8 	call 82876 <strlen>
   3e3e8:	18 00 50 c0 	add_i s0, s24, s0
   3e3ec:	00 fc ff 05 	add_i s0, s0, -1
   3e3f0:	40 03 f0 c0 	move s26, s0
   3e3f4:	1a 00 0c c1 	cmpeq_i s0, s26, s24
   3e3f8:	00 01 00 f4 	bnz s0, 32 <ExtractFileBase+0x54>
   3e3fc:	1a fc ff a1 	load_u8 s0, -1(s26)
   3e400:	20 70 01 10 	cmpeq_i s1, s0, 92
   3e404:	c1 00 00 f4 	bnz s1, 24 <ExtractFileBase+0x58>
   3e408:	20 bc 00 11 	cmpne_i s1, s0, 47
   3e40c:	1a fc ff 05 	add_i s0, s26, -1
   3e410:	01 ff ff f5 	bnz s1, -32 <ExtractFileBase+0x2c>
   3e414:	02 00 00 f6 	b 8 <ExtractFileBase+0x58>
   3e418:	40 03 fc c0 	move s26, s24
   3e41c:	60 03 00 0f 	move s27, 0
   3e420:	79 1f 00 82 	store_8 s27, 7(s25)
   3e424:	00 00 00 4f 	movehi s0, 0
   3e428:	79 1b 00 82 	store_8 s27, 6(s25)
   3e42c:	79 17 00 82 	store_8 s27, 5(s25)
   3e430:	79 13 00 82 	store_8 s27, 4(s25)
   3e434:	79 0f 00 82 	store_8 s27, 3(s25)
   3e438:	00 28 7c 00 	or s0, s0, 7946
   3e43c:	79 0b 00 82 	store_8 s27, 2(s25)
   3e440:	79 07 00 82 	store_8 s27, 1(s25)
   3e444:	79 03 00 82 	store_8 s27, (s25)
   3e448:	1e a0 01 88 	store_32 s0, 104(sp)
   3e44c:	1a 00 00 a0 	load_u8 s0, (s26)
   3e450:	a0 02 00 f2 	bz s0, 84 <ExtractFileBase+0xe0>
   3e454:	09 00 00 f6 	b 36 <ExtractFileBase+0xb4>
   3e458:	00 00 d0 c1 	sext_8 s0, s0
   3e45c:	5a 07 00 05 	add_i s26, s26, 1
   3e460:	a1 50 00 f8 	call 82564 <toupper>
   3e464:	39 04 00 05 	add_i s1, s25, 1
   3e468:	19 00 00 82 	store_8 s0, (s25)
   3e46c:	20 83 f0 c0 	move s25, s1
   3e470:	1a 00 00 a0 	load_u8 s0, (s26)
   3e474:	80 01 00 f2 	bz s0, 48 <ExtractFileBase+0xe0>
   3e478:	20 b8 00 10 	cmpeq_i s1, s0, 46
   3e47c:	41 01 00 f4 	bnz s1, 40 <ExtractFileBase+0xe0>
   3e480:	7b 07 00 05 	add_i s27, s27, 1
   3e484:	3b 24 00 11 	cmpne_i s1, s27, 9
   3e488:	81 fe ff f5 	bnz s1, -48 <ExtractFileBase+0x94>
   3e48c:	1e 13 00 88 	store_32 s24, 4(sp)
   3e490:	1e a0 01 a8 	load_32 s0, 104(sp)
   3e494:	1e 00 00 88 	store_32 s0, (sp)
   3e498:	1b 3f ff f9 	call -197524 <I_Error>
   3e49c:	1a 00 00 a0 	load_u8 s0, (s26)
   3e4a0:	ee ff ff f7 	b -72 <ExtractFileBase+0x94>
   3e4a4:	fe b3 01 a8 	load_32 ra, 108(sp)
   3e4a8:	7e c3 01 a8 	load_32 s27, 112(sp)
   3e4ac:	5e d3 01 a8 	load_32 s26, 116(sp)
   3e4b0:	3e e3 01 a8 	load_32 s25, 120(sp)
   3e4b4:	1e f3 01 a8 	load_32 s24, 124(sp)
   3e4b8:	de 03 02 05 	add_i sp, sp, 128
   3e4bc:	1f 00 00 f0 	ret

000000000003e4c0 W_AddFile:
   3e4c0:	de 03 fe 05 	add_i sp, sp, -128
   3e4c4:	1e f3 01 88 	store_32 s24, 124(sp)
   3e4c8:	3e e3 01 88 	store_32 s25, 120(sp)
   3e4cc:	5e d3 01 88 	store_32 s26, 116(sp)
   3e4d0:	7e c3 01 88 	store_32 s27, 112(sp)
   3e4d4:	be b3 01 88 	store_32 fp, 108(sp)
   3e4d8:	fe a3 01 88 	store_32 ra, 104(sp)
   3e4dc:	a0 03 ff c0 	move fp, sp
   3e4e0:	00 03 f0 c0 	move s24, s0
   3e4e4:	18 00 00 a0 	load_u8 s0, (s24)
   3e4e8:	00 f8 01 11 	cmpne_i s0, s0, 126
   3e4ec:	60 01 00 f4 	bnz s0, 44 <W_AddFile+0x58>
   3e4f0:	00 0c 00 4f 	movehi s0, 96
   3e4f4:	20 0c 00 4f 	movehi s1, 96
   3e4f8:	40 0c 00 4f 	movehi s2, 96
   3e4fc:	00 d0 01 00 	or s0, s0, 116
   3e500:	21 a0 01 00 	or s1, s1, 104
   3e504:	18 07 00 05 	add_i s24, s24, 1
   3e508:	42 c0 01 00 	or s2, s2, 112
   3e50c:	00 03 00 88 	store_32 s24, (s0)
   3e510:	01 00 00 a8 	load_32 s0, (s1)
   3e514:	02 00 00 88 	store_32 s0, (s2)
   3e518:	20 0c 00 0f 	move s1, 3
   3e51c:	00 00 fc c0 	move s0, s24
   3e520:	d1 53 00 f8 	call 85828 <open>
   3e524:	60 03 f0 c0 	move s27, s0
   3e528:	de 03 ff 05 	add_i sp, sp, -64
   3e52c:	1b fc ff 11 	cmpne_i s0, s27, -1
   3e530:	40 00 00 f4 	bnz s0, 8 <W_AddFile+0x78>
   3e534:	37 00 00 f6 	b 220 <W_AddFile+0x150>
   3e538:	00 00 00 4f 	movehi s0, 0
   3e53c:	1e 13 00 88 	store_32 s24, 4(sp)
   3e540:	00 a4 55 00 	or s0, s0, 5481
   3e544:	1e 00 00 88 	store_32 s0, (sp)
   3e548:	23 4e 00 f8 	call 80012 <printf>
   3e54c:	de 03 01 05 	add_i sp, sp, 64
   3e550:	00 0c 00 4f 	movehi s0, 96
   3e554:	00 a0 01 00 	or s0, s0, 104
   3e558:	1d 20 01 88 	store_32 s0, 72(fp)
   3e55c:	00 00 00 a8 	load_32 s0, (s0)
   3e560:	1d f0 00 88 	store_32 s0, 60(fp)
   3e564:	00 00 fc c0 	move s0, s24
   3e568:	8e 50 00 f8 	call 82488 <strlen>
   3e56c:	18 00 50 c0 	add_i s0, s24, s0
   3e570:	21 00 00 4f 	movehi s1, 1
   3e574:	00 f4 ff 05 	add_i s0, s0, -3
   3e578:	21 70 43 00 	or s1, s1, 4316
   3e57c:	35 50 00 f8 	call 82132 <strcasecmp>
   3e580:	7d 03 01 88 	store_32 s27, 64(fp)
   3e584:	40 05 00 f2 	bz s0, 168 <W_AddFile+0x16c>
   3e588:	00 80 fd c0 	move s0, s27
   3e58c:	3d 80 01 05 	add_i s1, fp, 96
   3e590:	60 03 00 0f 	move s27, 0
   3e594:	7d 43 01 88 	store_32 s27, 80(fp)
   3e598:	d2 55 00 f8 	call 87880 <fstat>
   3e59c:	00 fc ff 11 	cmpne_i s0, s0, -1
   3e5a0:	e0 00 00 f4 	bnz s0, 28 <W_AddFile+0xfc>
   3e5a4:	de 03 ff 05 	add_i sp, sp, -64
   3e5a8:	02 00 00 4f 	movehi s0, 2
   3e5ac:	00 c0 62 00 	or s0, s0, 6320
   3e5b0:	1e 00 00 88 	store_32 s0, (sp)
   3e5b4:	d4 3e ff f9 	call -197808 <I_Error>
   3e5b8:	de 03 01 05 	add_i sp, sp, 64
   3e5bc:	5d 43 01 05 	add_i s26, fp, 80
   3e5c0:	3d 80 01 a8 	load_32 s1, 96(fp)
   3e5c4:	1a 10 00 00 	or s0, s26, 4
   3e5c8:	3a 23 00 05 	add_i s25, s26, 8
   3e5cc:	20 00 00 88 	store_32 s1, (s0)
   3e5d0:	00 00 fc c0 	move s0, s24
   3e5d4:	73 50 00 f8 	call 82380 <strlen>
   3e5d8:	18 00 50 c0 	add_i s0, s24, s0
   3e5dc:	1d 33 01 88 	store_32 s24, 76(fp)
   3e5e0:	00 fc ff 05 	add_i s0, s0, -1
   3e5e4:	00 03 f0 c0 	move s24, s0
   3e5e8:	1d 30 01 a8 	load_32 s0, 76(fp)
   3e5ec:	18 00 00 c1 	cmpeq_i s0, s24, s0
   3e5f0:	80 06 00 f4 	bnz s0, 208 <W_AddFile+0x200>
   3e5f4:	18 fc ff a1 	load_u8 s0, -1(s24)
   3e5f8:	20 70 01 10 	cmpeq_i s1, s0, 92
   3e5fc:	41 06 00 f4 	bnz s1, 200 <W_AddFile+0x204>
   3e600:	20 bc 00 11 	cmpne_i s1, s0, 47
   3e604:	18 fc ff 05 	add_i s0, s24, -1
   3e608:	e1 fe ff f5 	bnz s1, -36 <W_AddFile+0x124>
   3e60c:	2e 00 00 f6 	b 184 <W_AddFile+0x204>
   3e610:	02 00 00 4f 	movehi s0, 2
   3e614:	1e 13 00 88 	store_32 s24, 4(sp)
   3e618:	00 04 43 00 	or s0, s0, 4289
   3e61c:	1e 00 00 88 	store_32 s0, (sp)
   3e620:	ed 4d 00 f8 	call 79796 <printf>
   3e624:	de 03 01 05 	add_i sp, sp, 64
   3e628:	82 00 00 f6 	b 520 <W_AddFile+0x370>
   3e62c:	5d 43 01 05 	add_i s26, fp, 80
   3e630:	00 80 fd c0 	move s0, s27
   3e634:	40 30 00 0f 	move s2, 12
   3e638:	20 00 fd c0 	move s1, s26
   3e63c:	c7 54 00 f8 	call 86812 <read>
   3e640:	0a 40 44 4f 	movehi s0, 139786
   3e644:	3d 40 01 a8 	load_32 s1, 80(fp)
   3e648:	40 24 5d 00 	or s2, s0, 5961
   3e64c:	21 00 01 c1 	cmpeq_i s1, s1, s2
   3e650:	81 01 00 f4 	bnz s1, 48 <W_AddFile+0x1c0>
   3e654:	3d 40 01 a8 	load_32 s1, 80(fp)
   3e658:	00 40 5d 00 	or s0, s0, 5968
   3e65c:	01 00 00 c1 	cmpeq_i s0, s1, s0
   3e660:	00 01 00 f4 	bnz s0, 32 <W_AddFile+0x1c0>
   3e664:	de 03 ff 05 	add_i sp, sp, -64
   3e668:	02 00 00 4f 	movehi s0, 2
   3e66c:	1e 13 00 88 	store_32 s24, 4(sp)
   3e670:	00 dc 75 00 	or s0, s0, 7543
   3e674:	1e 00 00 88 	store_32 s0, (sp)
   3e678:	a3 3e ff f9 	call -198004 <I_Error>
   3e67c:	de 03 01 05 	add_i sp, sp, 64
   3e680:	1a 10 00 00 	or s0, s26, 4
   3e684:	00 03 00 a8 	load_32 s24, (s0)
   3e688:	3d 60 01 a8 	load_32 s1, 88(fp)
   3e68c:	38 13 00 0b 	shl s25, s24, 4
   3e690:	19 fc 00 05 	add_i s0, s25, 63
   3e694:	00 00 ff 01 	and s0, s0, -64
   3e698:	5e 03 60 c0 	sub_i s26, sp, s0
   3e69c:	c0 03 fd c0 	move sp, s26
   3e6a0:	40 00 00 0f 	move s2, 0
   3e6a4:	00 80 fd c0 	move s0, s27
   3e6a8:	38 55 00 f8 	call 87264 <lseek>
   3e6ac:	00 80 fd c0 	move s0, s27
   3e6b0:	20 00 fd c0 	move s1, s26
   3e6b4:	40 80 fc c0 	move s2, s25
   3e6b8:	a8 54 00 f8 	call 86688 <read>
   3e6bc:	22 00 00 f6 	b 136 <W_AddFile+0x284>
   3e6c0:	1d 33 01 a8 	load_32 s24, 76(fp)
   3e6c4:	00 00 00 4f 	movehi s0, 0
   3e6c8:	7d 73 01 88 	store_32 s27, 92(fp)
   3e6cc:	7d 63 01 88 	store_32 s27, 88(fp)
   3e6d0:	00 28 7c 00 	or s0, s0, 7946
   3e6d4:	1d 10 01 88 	store_32 s0, 68(fp)
   3e6d8:	18 00 00 a0 	load_u8 s0, (s24)
   3e6dc:	00 03 00 f2 	bz s0, 96 <W_AddFile+0x27c>
   3e6e0:	09 00 00 f6 	b 36 <W_AddFile+0x244>
   3e6e4:	00 00 d0 c1 	sext_8 s0, s0
   3e6e8:	18 07 00 05 	add_i s24, s24, 1
   3e6ec:	fe 4f 00 f8 	call 81912 <toupper>
   3e6f0:	39 04 00 05 	add_i s1, s25, 1
   3e6f4:	19 00 00 82 	store_8 s0, (s25)
   3e6f8:	20 83 f0 c0 	move s25, s1
   3e6fc:	18 00 00 a0 	load_u8 s0, (s24)
   3e700:	e0 01 00 f2 	bz s0, 60 <W_AddFile+0x27c>
   3e704:	20 b8 00 10 	cmpeq_i s1, s0, 46
   3e708:	a1 01 00 f4 	bnz s1, 52 <W_AddFile+0x27c>
   3e70c:	7b 07 00 05 	add_i s27, s27, 1
   3e710:	3b 24 00 11 	cmpne_i s1, s27, 9
   3e714:	81 fe ff f5 	bnz s1, -48 <W_AddFile+0x224>
   3e718:	de 03 ff 05 	add_i sp, sp, -64
   3e71c:	1d 30 01 a8 	load_32 s0, 76(fp)
   3e720:	1e 10 00 88 	store_32 s0, 4(sp)
   3e724:	1d 10 01 a8 	load_32 s0, 68(fp)
   3e728:	1e 00 00 88 	store_32 s0, (sp)
   3e72c:	76 3e ff f9 	call -198184 <I_Error>
   3e730:	de 03 01 05 	add_i sp, sp, 64
   3e734:	18 00 00 a0 	load_u8 s0, (s24)
   3e738:	eb ff ff f7 	b -84 <W_AddFile+0x224>
   3e73c:	7d 03 01 a8 	load_32 s27, 64(fp)
   3e740:	00 07 00 0f 	move s24, 1
   3e744:	5d 20 01 a8 	load_32 s2, 72(fp)
   3e748:	20 0c 00 4f 	movehi s1, 96
   3e74c:	21 93 01 00 	or s25, s1, 100
   3e750:	02 00 00 a8 	load_32 s0, (s2)
   3e754:	20 00 5c c0 	add_i s1, s0, s24
   3e758:	22 00 00 88 	store_32 s1, (s2)
   3e75c:	19 00 00 a8 	load_32 s0, (s25)
   3e760:	21 50 00 07 	mull_i s1, s1, 20
   3e764:	3b 45 00 f8 	call 70892 <realloc>
   3e768:	19 00 00 88 	store_32 s0, (s25)
   3e76c:	00 01 00 f4 	bnz s0, 32 <W_AddFile+0x2cc>
   3e770:	de 03 ff 05 	add_i sp, sp, -64
   3e774:	01 00 00 4f 	movehi s0, 1
   3e778:	00 90 56 00 	or s0, s0, 5540
   3e77c:	1e 00 00 88 	store_32 s0, (sp)
   3e780:	61 3e ff f9 	call -198268 <I_Error>
   3e784:	de 03 01 05 	add_i sp, sp, 64
   3e788:	19 00 00 a8 	load_32 s0, (s25)
   3e78c:	20 0c 00 4f 	movehi s1, 96
   3e790:	81 d0 01 00 	or s4, s1, 116
   3e794:	24 00 00 a8 	load_32 s1, (s4)
   3e798:	00 83 fd c0 	move s24, s27
   3e79c:	41 00 00 10 	cmpeq_i s2, s1, 0
   3e7a0:	42 00 00 f4 	bnz s2, 8 <W_AddFile+0x2e8>
   3e7a4:	00 ff ff 0f 	move s24, -1
   3e7a8:	5d 20 01 a8 	load_32 s2, 72(fp)
   3e7ac:	42 00 00 a8 	load_32 s2, (s2)
   3e7b0:	7d f0 00 a8 	load_32 s3, 60(fp)
   3e7b4:	43 00 71 c1 	cmpge_u s2, s3, s2
   3e7b8:	62 03 00 f4 	bnz s2, 108 <W_AddFile+0x364>
   3e7bc:	23 50 00 07 	mull_i s1, s3, 20
   3e7c0:	9d 10 01 88 	store_32 s4, 68(fp)
   3e7c4:	20 83 50 c0 	add_i s25, s0, s1
   3e7c8:	00 20 00 0f 	move s0, 8
   3e7cc:	1d 30 01 88 	store_32 s0, 76(fp)
   3e7d0:	19 23 00 88 	store_32 s24, 8(s25)
   3e7d4:	3a 20 00 05 	add_i s1, s26, 8
   3e7d8:	1a 00 00 a8 	load_32 s0, (s26)
   3e7dc:	19 30 00 88 	store_32 s0, 12(s25)
   3e7e0:	1a 10 00 a8 	load_32 s0, 4(s26)
   3e7e4:	19 40 00 88 	store_32 s0, 16(s25)
   3e7e8:	00 80 fc c0 	move s0, s25
   3e7ec:	5d 30 01 a8 	load_32 s2, 76(fp)
   3e7f0:	60 83 f1 c0 	move s27, s3
   3e7f4:	03 50 00 f8 	call 81932 <strncpy>
   3e7f8:	60 80 fd c0 	move s3, s27
   3e7fc:	1d 20 01 a8 	load_32 s0, 72(fp)
   3e800:	39 53 00 05 	add_i s25, s25, 20
   3e804:	5a 43 00 05 	add_i s26, s26, 16
   3e808:	63 04 00 05 	add_i s3, s3, 1
   3e80c:	00 00 00 a8 	load_32 s0, (s0)
   3e810:	03 00 80 c1 	cmplt_u s0, s3, s0
   3e814:	e0 fd ff f5 	bnz s0, -68 <W_AddFile+0x310>
   3e818:	1d 10 01 a8 	load_32 s0, 68(fp)
   3e81c:	20 00 00 a8 	load_32 s1, (s0)
   3e820:	7d 03 01 a8 	load_32 s27, 64(fp)
   3e824:	61 00 00 f2 	bz s1, 12 <W_AddFile+0x370>
   3e828:	00 80 fd c0 	move s0, s27
   3e82c:	37 54 00 f8 	call 86236 <close>
   3e830:	c0 83 fe c0 	move sp, fp
   3e834:	fe a3 01 a8 	load_32 ra, 104(sp)
   3e838:	be b3 01 a8 	load_32 fp, 108(sp)
   3e83c:	7e c3 01 a8 	load_32 s27, 112(sp)
   3e840:	5e d3 01 a8 	load_32 s26, 116(sp)
   3e844:	3e e3 01 a8 	load_32 s25, 120(sp)
   3e848:	1e f3 01 a8 	load_32 s24, 124(sp)
   3e84c:	de 03 02 05 	add_i sp, sp, 128
   3e850:	1f 00 00 f0 	ret

000000000003e854 W_Reload:
   3e854:	de 03 ff 05 	add_i sp, sp, -64
   3e858:	1e f3 00 88 	store_32 s24, 60(sp)
   3e85c:	3e e3 00 88 	store_32 s25, 56(sp)
   3e860:	5e d3 00 88 	store_32 s26, 52(sp)
   3e864:	7e c3 00 88 	store_32 s27, 48(sp)
   3e868:	be b3 00 88 	store_32 fp, 44(sp)
   3e86c:	fe a3 00 88 	store_32 ra, 40(sp)
   3e870:	a0 03 ff c0 	move fp, sp
   3e874:	00 0c 00 4f 	movehi s0, 96
   3e878:	00 d3 01 00 	or s24, s0, 116
   3e87c:	18 00 00 a8 	load_32 s0, (s24)
   3e880:	00 09 00 f2 	bz s0, 288 <W_Reload+0x14c>
   3e884:	20 0c 00 0f 	move s1, 3
   3e888:	f7 52 00 f8 	call 84956 <open>
   3e88c:	60 03 f0 c0 	move s27, s0
   3e890:	1b fc ff 11 	cmpne_i s0, s27, -1
   3e894:	20 01 00 f4 	bnz s0, 36 <W_Reload+0x64>
   3e898:	18 00 00 a8 	load_32 s0, (s24)
   3e89c:	de 03 ff 05 	add_i sp, sp, -64
   3e8a0:	21 00 00 4f 	movehi s1, 1
   3e8a4:	1e 10 00 88 	store_32 s0, 4(sp)
   3e8a8:	01 24 64 00 	or s0, s1, 6409
   3e8ac:	1e 00 00 88 	store_32 s0, (sp)
   3e8b0:	15 3e ff f9 	call -198572 <I_Error>
   3e8b4:	de 03 01 05 	add_i sp, sp, 64
   3e8b8:	3d 63 00 05 	add_i s25, fp, 24
   3e8bc:	00 80 fd c0 	move s0, s27
   3e8c0:	40 30 00 0f 	move s2, 12
   3e8c4:	20 80 fc c0 	move s1, s25
   3e8c8:	24 54 00 f8 	call 86160 <read>
   3e8cc:	19 10 00 00 	or s0, s25, 4
   3e8d0:	00 03 00 a8 	load_32 s24, (s0)
   3e8d4:	3d 80 00 a8 	load_32 s1, 32(fp)
   3e8d8:	58 13 00 0b 	shl s26, s24, 4
   3e8dc:	1a fc 00 05 	add_i s0, s26, 63
   3e8e0:	00 00 ff 01 	and s0, s0, -64
   3e8e4:	3e 03 60 c0 	sub_i s25, sp, s0
   3e8e8:	c0 83 fc c0 	move sp, s25
   3e8ec:	40 00 00 0f 	move s2, 0
   3e8f0:	00 80 fd c0 	move s0, s27
   3e8f4:	a5 54 00 f8 	call 86676 <lseek>
   3e8f8:	7d 33 00 88 	store_32 s27, 12(fp)
   3e8fc:	00 80 fd c0 	move s0, s27
   3e900:	20 80 fc c0 	move s1, s25
   3e904:	40 00 fd c0 	move s2, s26
   3e908:	14 54 00 f8 	call 86096 <read>
   3e90c:	00 0c 00 4f 	movehi s0, 96
   3e910:	00 c0 01 00 	or s0, s0, 112
   3e914:	1d 40 00 88 	store_32 s0, 16(fp)
   3e918:	20 00 00 a8 	load_32 s1, (s0)
   3e91c:	1d 53 00 88 	store_32 s24, 20(fp)
   3e920:	01 00 5c c0 	add_i s0, s1, s24
   3e924:	01 00 70 c1 	cmpge_u s0, s1, s0
   3e928:	80 03 00 f4 	bnz s0, 112 <W_Reload+0x144>
   3e92c:	00 0c 00 4f 	movehi s0, 96
   3e930:	40 0c 00 4f 	movehi s2, 96
   3e934:	61 50 00 07 	mull_i s3, s1, 20
   3e938:	00 90 01 00 	or s0, s0, 100
   3e93c:	42 83 01 00 	or s26, s2, 96
   3e940:	00 00 00 a8 	load_32 s0, (s0)
   3e944:	60 83 f0 c0 	move s27, s1
   3e948:	00 83 51 c0 	add_i s24, s0, s3
   3e94c:	1a 00 00 a8 	load_32 s0, (s26)
   3e950:	5b 08 00 0b 	shl s2, s27, 2
   3e954:	00 00 51 c0 	add_i s0, s0, s2
   3e958:	00 00 00 a8 	load_32 s0, (s0)
   3e95c:	80 00 00 f2 	bz s0, 16 <W_Reload+0x118>
   3e960:	95 37 00 f8 	call 56916 <Z_Free>
   3e964:	1d 40 00 a8 	load_32 s0, 16(fp)
   3e968:	20 00 00 a8 	load_32 s1, (s0)
   3e96c:	19 00 00 a8 	load_32 s0, (s25)
   3e970:	7b 07 00 05 	add_i s27, s27, 1
   3e974:	18 30 00 88 	store_32 s0, 12(s24)
   3e978:	19 10 00 a8 	load_32 s0, 4(s25)
   3e97c:	39 43 00 05 	add_i s25, s25, 16
   3e980:	18 40 00 88 	store_32 s0, 16(s24)
   3e984:	18 53 00 05 	add_i s24, s24, 20
   3e988:	1d 50 00 a8 	load_32 s0, 20(fp)
   3e98c:	01 00 50 c0 	add_i s0, s1, s0
   3e990:	1b 00 80 c1 	cmplt_u s0, s27, s0
   3e994:	c0 fd ff f5 	bnz s0, -72 <W_Reload+0xf8>
   3e998:	1d 30 00 a8 	load_32 s0, 12(fp)
   3e99c:	db 53 00 f8 	call 85868 <close>
   3e9a0:	c0 83 fe c0 	move sp, fp
   3e9a4:	fe a3 00 a8 	load_32 ra, 40(sp)
   3e9a8:	be b3 00 a8 	load_32 fp, 44(sp)
   3e9ac:	7e c3 00 a8 	load_32 s27, 48(sp)
   3e9b0:	5e d3 00 a8 	load_32 s26, 52(sp)
   3e9b4:	3e e3 00 a8 	load_32 s25, 56(sp)
   3e9b8:	1e f3 00 a8 	load_32 s24, 60(sp)
   3e9bc:	de 03 01 05 	add_i sp, sp, 64
   3e9c0:	1f 00 00 f0 	ret

000000000003e9c4 W_InitMultipleFiles:
   3e9c4:	de 03 fe 05 	add_i sp, sp, -128
   3e9c8:	1e f3 01 88 	store_32 s24, 124(sp)
   3e9cc:	3e e3 01 88 	store_32 s25, 120(sp)
   3e9d0:	fe d3 01 88 	store_32 ra, 116(sp)
   3e9d4:	20 0c 00 4f 	movehi s1, 96
   3e9d8:	00 03 f0 c0 	move s24, s0
   3e9dc:	00 00 00 0f 	move s0, 0
   3e9e0:	21 a3 01 00 	or s25, s1, 104
   3e9e4:	19 00 00 88 	store_32 s0, (s25)
   3e9e8:	00 04 00 0f 	move s0, 1
   3e9ec:	15 3a 00 f8 	call 59476 <malloc>
   3e9f0:	20 0c 00 4f 	movehi s1, 96
   3e9f4:	21 90 01 00 	or s1, s1, 100
   3e9f8:	01 00 00 88 	store_32 s0, (s1)
   3e9fc:	18 00 00 a8 	load_32 s0, (s24)
   3ea00:	e0 00 00 f2 	bz s0, 28 <W_InitMultipleFiles+0x58>
   3ea04:	af fe ff f9 	call -1348 <W_AddFile>
   3ea08:	18 10 00 a8 	load_32 s0, 4(s24)
   3ea0c:	18 13 00 05 	add_i s24, s24, 4
   3ea10:	a0 ff ff f5 	bnz s0, -12 <W_InitMultipleFiles+0x40>
   3ea14:	19 00 00 a8 	load_32 s0, (s25)
   3ea18:	c0 00 00 f4 	bnz s0, 24 <W_InitMultipleFiles+0x6c>
   3ea1c:	01 00 00 4f 	movehi s0, 1
   3ea20:	00 cc 25 00 	or s0, s0, 2419
   3ea24:	1e 00 00 88 	store_32 s0, (sp)
   3ea28:	b7 3d ff f9 	call -198948 <I_Error>
   3ea2c:	19 00 00 a8 	load_32 s0, (s25)
   3ea30:	00 0b 00 0b 	shl s24, s0, 2
   3ea34:	00 00 fc c0 	move s0, s24
   3ea38:	02 3a 00 f8 	call 59400 <malloc>
   3ea3c:	20 0c 00 4f 	movehi s1, 96
   3ea40:	21 83 01 00 	or s25, s1, 96
   3ea44:	19 00 00 88 	store_32 s0, (s25)
   3ea48:	c0 00 00 f4 	bnz s0, 24 <W_InitMultipleFiles+0x9c>
   3ea4c:	01 00 00 4f 	movehi s0, 1
   3ea50:	00 3c 26 00 	or s0, s0, 2447
   3ea54:	1e 00 00 88 	store_32 s0, (sp)
   3ea58:	ab 3d ff f9 	call -198996 <I_Error>
   3ea5c:	19 00 00 a8 	load_32 s0, (s25)
   3ea60:	20 00 00 0f 	move s1, 0
   3ea64:	40 00 fc c0 	move s2, s24
   3ea68:	0f 4c 00 f8 	call 77884 <memset>
   3ea6c:	fe d3 01 a8 	load_32 ra, 116(sp)
   3ea70:	3e e3 01 a8 	load_32 s25, 120(sp)
   3ea74:	1e f3 01 a8 	load_32 s24, 124(sp)
   3ea78:	de 03 02 05 	add_i sp, sp, 128
   3ea7c:	1f 00 00 f0 	ret

000000000003ea80 W_InitFile:
   3ea80:	de 03 fe 05 	add_i sp, sp, -128
   3ea84:	1e f3 01 88 	store_32 s24, 124(sp)
   3ea88:	3e e3 01 88 	store_32 s25, 120(sp)
   3ea8c:	5e d3 01 88 	store_32 s26, 116(sp)
   3ea90:	fe c3 01 88 	store_32 ra, 112(sp)
   3ea94:	20 0c 00 4f 	movehi s1, 96
   3ea98:	00 03 f0 c0 	move s24, s0
   3ea9c:	1e a3 01 88 	store_32 s24, 104(sp)
   3eaa0:	00 00 00 0f 	move s0, 0
   3eaa4:	1e b0 01 88 	store_32 s0, 108(sp)
   3eaa8:	21 a3 01 00 	or s25, s1, 104
   3eaac:	19 00 00 88 	store_32 s0, (s25)
   3eab0:	00 04 00 0f 	move s0, 1
   3eab4:	e3 39 00 f8 	call 59276 <malloc>
   3eab8:	20 0c 00 4f 	movehi s1, 96
   3eabc:	21 90 01 00 	or s1, s1, 100
   3eac0:	01 00 00 88 	store_32 s0, (s1)
   3eac4:	38 01 00 f2 	bz s24, 36 <W_InitFile+0x68>
   3eac8:	5e a3 01 05 	add_i s26, sp, 104
   3eacc:	00 00 fc c0 	move s0, s24
   3ead0:	7c fe ff f9 	call -1552 <W_AddFile>
   3ead4:	1a 13 00 a8 	load_32 s24, 4(s26)
   3ead8:	5a 13 00 05 	add_i s26, s26, 4
   3eadc:	98 ff ff f5 	bnz s24, -16 <W_InitFile+0x4c>
   3eae0:	19 00 00 a8 	load_32 s0, (s25)
   3eae4:	c0 00 00 f4 	bnz s0, 24 <W_InitFile+0x7c>
   3eae8:	01 00 00 4f 	movehi s0, 1
   3eaec:	00 cc 25 00 	or s0, s0, 2419
   3eaf0:	1e 00 00 88 	store_32 s0, (sp)
   3eaf4:	84 3d ff f9 	call -199152 <I_Error>
   3eaf8:	19 00 00 a8 	load_32 s0, (s25)
   3eafc:	00 0b 00 0b 	shl s24, s0, 2
   3eb00:	00 00 fc c0 	move s0, s24
   3eb04:	cf 39 00 f8 	call 59196 <malloc>
   3eb08:	20 0c 00 4f 	movehi s1, 96
   3eb0c:	21 83 01 00 	or s25, s1, 96
   3eb10:	19 00 00 88 	store_32 s0, (s25)
   3eb14:	c0 00 00 f4 	bnz s0, 24 <W_InitFile+0xac>
   3eb18:	01 00 00 4f 	movehi s0, 1
   3eb1c:	00 3c 26 00 	or s0, s0, 2447
   3eb20:	1e 00 00 88 	store_32 s0, (sp)
   3eb24:	78 3d ff f9 	call -199200 <I_Error>
   3eb28:	19 00 00 a8 	load_32 s0, (s25)
   3eb2c:	20 00 00 0f 	move s1, 0
   3eb30:	40 00 fc c0 	move s2, s24
   3eb34:	dc 4b 00 f8 	call 77680 <memset>
   3eb38:	fe c3 01 a8 	load_32 ra, 112(sp)
   3eb3c:	5e d3 01 a8 	load_32 s26, 116(sp)
   3eb40:	3e e3 01 a8 	load_32 s25, 120(sp)
   3eb44:	1e f3 01 a8 	load_32 s24, 124(sp)
   3eb48:	de 03 02 05 	add_i sp, sp, 128
   3eb4c:	1f 00 00 f0 	ret

000000000003eb50 W_NumLumps:
   3eb50:	00 0c 00 4f 	movehi s0, 96
   3eb54:	00 a0 01 00 	or s0, s0, 104
   3eb58:	00 00 00 a8 	load_32 s0, (s0)
   3eb5c:	1f 00 00 f0 	ret

000000000003eb60 W_CheckNumForName:
   3eb60:	de 03 ff 05 	add_i sp, sp, -64
   3eb64:	1e f3 00 88 	store_32 s24, 60(sp)
   3eb68:	3e e3 00 88 	store_32 s25, 56(sp)
   3eb6c:	5e d3 00 88 	store_32 s26, 52(sp)
   3eb70:	7e c3 00 88 	store_32 s27, 48(sp)
   3eb74:	fe b3 00 88 	store_32 ra, 44(sp)
   3eb78:	20 0c 00 4f 	movehi s1, 96
   3eb7c:	00 ff ff 0f 	move s24, -1
   3eb80:	21 a0 01 00 	or s1, s1, 104
   3eb84:	61 03 00 a8 	load_32 s27, (s1)
   3eb88:	1e a0 00 88 	store_32 s0, 40(sp)
   3eb8c:	1b 04 00 14 	cmplt_i s0, s27, 1
   3eb90:	20 02 00 f4 	bnz s0, 68 <W_CheckNumForName+0x74>
   3eb94:	00 0c 00 4f 	movehi s0, 96
   3eb98:	1e 93 00 88 	store_32 s24, 36(sp)
   3eb9c:	00 03 00 0f 	move s24, 0
   3eba0:	40 23 00 0f 	move s26, 8
   3eba4:	00 90 01 00 	or s0, s0, 100
   3eba8:	20 03 00 a8 	load_32 s25, (s0)
   3ebac:	18 50 00 07 	mull_i s0, s24, 20
   3ebb0:	3e a0 00 a8 	load_32 s1, 40(sp)
   3ebb4:	19 00 50 c0 	add_i s0, s25, s0
   3ebb8:	40 00 fd c0 	move s2, s26
   3ebbc:	d0 4e 00 f8 	call 80704 <strncasecmp>
   3ebc0:	a0 00 00 f2 	bz s0, 20 <W_CheckNumForName+0x74>
   3ebc4:	18 07 00 05 	add_i s24, s24, 1
   3ebc8:	18 80 4d c1 	cmplt_i s0, s24, s27
   3ebcc:	00 ff ff f5 	bnz s0, -32 <W_CheckNumForName+0x4c>
   3ebd0:	1e 93 00 a8 	load_32 s24, 36(sp)
   3ebd4:	00 00 fc c0 	move s0, s24
   3ebd8:	fe b3 00 a8 	load_32 ra, 44(sp)
   3ebdc:	7e c3 00 a8 	load_32 s27, 48(sp)
   3ebe0:	5e d3 00 a8 	load_32 s26, 52(sp)
   3ebe4:	3e e3 00 a8 	load_32 s25, 56(sp)
   3ebe8:	1e f3 00 a8 	load_32 s24, 60(sp)
   3ebec:	de 03 01 05 	add_i sp, sp, 64
   3ebf0:	1f 00 00 f0 	ret

000000000003ebf4 W_GetNumForName:
   3ebf4:	de 03 fe 05 	add_i sp, sp, -128
   3ebf8:	1e f3 01 88 	store_32 s24, 124(sp)
   3ebfc:	3e e3 01 88 	store_32 s25, 120(sp)
   3ec00:	5e d3 01 88 	store_32 s26, 116(sp)
   3ec04:	7e c3 01 88 	store_32 s27, 112(sp)
   3ec08:	fe b3 01 88 	store_32 ra, 108(sp)
   3ec0c:	20 0c 00 4f 	movehi s1, 96
   3ec10:	21 a0 01 00 	or s1, s1, 104
   3ec14:	61 03 00 a8 	load_32 s27, (s1)
   3ec18:	1e a0 01 88 	store_32 s0, 104(sp)
   3ec1c:	3b 04 00 14 	cmplt_i s1, s27, 1
   3ec20:	e1 01 00 f4 	bnz s1, 60 <W_GetNumForName+0x68>
   3ec24:	00 0c 00 4f 	movehi s0, 96
   3ec28:	20 03 00 0f 	move s25, 0
   3ec2c:	40 23 00 0f 	move s26, 8
   3ec30:	00 90 01 00 	or s0, s0, 100
   3ec34:	00 03 00 a8 	load_32 s24, (s0)
   3ec38:	19 50 00 07 	mull_i s0, s25, 20
   3ec3c:	3e a0 01 a8 	load_32 s1, 104(sp)
   3ec40:	18 00 50 c0 	add_i s0, s24, s0
   3ec44:	40 00 fd c0 	move s2, s26
   3ec48:	ad 4e 00 f8 	call 80564 <strncasecmp>
   3ec4c:	60 01 00 f2 	bz s0, 44 <W_GetNumForName+0x84>
   3ec50:	39 07 00 05 	add_i s25, s25, 1
   3ec54:	19 80 4d c1 	cmplt_i s0, s25, s27
   3ec58:	00 ff ff f5 	bnz s0, -32 <W_GetNumForName+0x44>
   3ec5c:	00 00 00 4f 	movehi s0, 0
   3ec60:	3e a0 01 a8 	load_32 s1, 104(sp)
   3ec64:	3e 10 00 88 	store_32 s1, 4(sp)
   3ec68:	00 9c 7c 00 	or s0, s0, 7975
   3ec6c:	1e 00 00 88 	store_32 s0, (sp)
   3ec70:	25 3d ff f9 	call -199532 <I_Error>
   3ec74:	20 ff ff 0f 	move s25, -1
   3ec78:	00 80 fc c0 	move s0, s25
   3ec7c:	fe b3 01 a8 	load_32 ra, 108(sp)
   3ec80:	7e c3 01 a8 	load_32 s27, 112(sp)
   3ec84:	5e d3 01 a8 	load_32 s26, 116(sp)
   3ec88:	3e e3 01 a8 	load_32 s25, 120(sp)
   3ec8c:	1e f3 01 a8 	load_32 s24, 124(sp)
   3ec90:	de 03 02 05 	add_i sp, sp, 128
   3ec94:	1f 00 00 f0 	ret

000000000003ec98 W_LumpLength:
   3ec98:	de 03 fe 05 	add_i sp, sp, -128
   3ec9c:	1e f3 01 88 	store_32 s24, 124(sp)
   3eca0:	fe e3 01 88 	store_32 ra, 120(sp)
   3eca4:	20 0c 00 4f 	movehi s1, 96
   3eca8:	21 a0 01 00 	or s1, s1, 104
   3ecac:	21 00 00 a8 	load_32 s1, (s1)
   3ecb0:	00 03 f0 c0 	move s24, s0
   3ecb4:	01 00 2c c1 	cmpgt_i s0, s1, s24
   3ecb8:	c0 00 00 f4 	bnz s0, 24 <W_LumpLength+0x38>
   3ecbc:	00 00 00 4f 	movehi s0, 0
   3ecc0:	1e 13 00 88 	store_32 s24, 4(sp)
   3ecc4:	00 d4 55 00 	or s0, s0, 5493
   3ecc8:	1e 00 00 88 	store_32 s0, (sp)
   3eccc:	0e 3d ff f9 	call -199624 <I_Error>
   3ecd0:	00 0c 00 4f 	movehi s0, 96
   3ecd4:	38 50 00 07 	mull_i s1, s24, 20
   3ecd8:	00 90 01 00 	or s0, s0, 100
   3ecdc:	00 00 00 a8 	load_32 s0, (s0)
   3ece0:	00 80 50 c0 	add_i s0, s0, s1
   3ece4:	00 40 00 a8 	load_32 s0, 16(s0)
   3ece8:	fe e3 01 a8 	load_32 ra, 120(sp)
   3ecec:	1e f3 01 a8 	load_32 s24, 124(sp)
   3ecf0:	de 03 02 05 	add_i sp, sp, 128
   3ecf4:	1f 00 00 f0 	ret

000000000003ecf8 W_ReadLump:
   3ecf8:	de 03 fe 05 	add_i sp, sp, -128
   3ecfc:	1e f3 01 88 	store_32 s24, 124(sp)
   3ed00:	3e e3 01 88 	store_32 s25, 120(sp)
   3ed04:	5e d3 01 88 	store_32 s26, 116(sp)
   3ed08:	7e c3 01 88 	store_32 s27, 112(sp)
   3ed0c:	fe b3 01 88 	store_32 ra, 108(sp)
   3ed10:	40 0c 00 4f 	movehi s2, 96
   3ed14:	42 a0 01 00 	or s2, s2, 104
   3ed18:	42 00 00 a8 	load_32 s2, (s2)
   3ed1c:	00 03 f0 c0 	move s24, s0
   3ed20:	3e a0 01 88 	store_32 s1, 104(sp)
   3ed24:	02 00 2c c1 	cmpgt_i s0, s2, s24
   3ed28:	c0 00 00 f4 	bnz s0, 24 <W_ReadLump+0x48>
   3ed2c:	02 00 00 4f 	movehi s0, 2
   3ed30:	1e 13 00 88 	store_32 s24, 4(sp)
   3ed34:	00 c8 7d 00 	or s0, s0, 8050
   3ed38:	1e 00 00 88 	store_32 s0, (sp)
   3ed3c:	f2 3c ff f9 	call -199736 <I_Error>
   3ed40:	00 0c 00 4f 	movehi s0, 96
   3ed44:	38 50 00 07 	mull_i s1, s24, 20
   3ed48:	00 90 01 00 	or s0, s0, 100
   3ed4c:	00 00 00 a8 	load_32 s0, (s0)
   3ed50:	60 83 50 c0 	add_i s27, s0, s1
   3ed54:	5b 23 00 a8 	load_32 s26, 8(s27)
   3ed58:	1a fc ff 11 	cmpne_i s0, s26, -1
   3ed5c:	00 02 00 f4 	bnz s0, 64 <W_ReadLump+0xa4>
   3ed60:	00 0c 00 4f 	movehi s0, 96
   3ed64:	20 0c 00 0f 	move s1, 3
   3ed68:	20 d3 01 00 	or s25, s0, 116
   3ed6c:	19 00 00 a8 	load_32 s0, (s25)
   3ed70:	bd 51 00 f8 	call 83700 <open>
   3ed74:	40 03 f0 c0 	move s26, s0
   3ed78:	1a fc ff 11 	cmpne_i s0, s26, -1
   3ed7c:	00 01 00 f4 	bnz s0, 32 <W_ReadLump+0xa4>
   3ed80:	21 00 00 4f 	movehi s1, 1
   3ed84:	19 00 00 a8 	load_32 s0, (s25)
   3ed88:	1e 10 00 88 	store_32 s0, 4(sp)
   3ed8c:	01 90 64 00 	or s0, s1, 6436
   3ed90:	1e 00 00 88 	store_32 s0, (sp)
   3ed94:	dc 3c ff f9 	call -199824 <I_Error>
   3ed98:	40 ff ff 0f 	move s26, -1
   3ed9c:	3b 30 00 a8 	load_32 s1, 12(s27)
   3eda0:	40 00 00 0f 	move s2, 0
   3eda4:	00 00 fd c0 	move s0, s26
   3eda8:	3b 23 00 05 	add_i s25, s27, 8
   3edac:	77 53 00 f8 	call 85468 <lseek>
   3edb0:	5b 40 00 a8 	load_32 s2, 16(s27)
   3edb4:	00 00 fd c0 	move s0, s26
   3edb8:	3e a0 01 a8 	load_32 s1, 104(sp)
   3edbc:	e7 52 00 f8 	call 84892 <read>
   3edc0:	3b 40 00 a8 	load_32 s1, 16(s27)
   3edc4:	40 80 30 c1 	cmpge_i s2, s0, s1
   3edc8:	02 01 00 f4 	bnz s2, 32 <W_ReadLump+0xf0>
   3edcc:	40 00 00 4f 	movehi s2, 0
   3edd0:	1e 33 00 88 	store_32 s24, 12(sp)
   3edd4:	3e 20 00 88 	store_32 s1, 8(sp)
   3edd8:	1e 10 00 88 	store_32 s0, 4(sp)
   3eddc:	02 18 7d 00 	or s0, s2, 8006
   3ede0:	1e 00 00 88 	store_32 s0, (sp)
   3ede4:	c8 3c ff f9 	call -199904 <I_Error>
   3ede8:	19 00 00 a8 	load_32 s0, (s25)
   3edec:	00 fc ff 11 	cmpne_i s0, s0, -1
   3edf0:	60 00 00 f4 	bnz s0, 12 <W_ReadLump+0x104>
   3edf4:	00 00 fd c0 	move s0, s26
   3edf8:	c4 52 00 f8 	call 84752 <close>
   3edfc:	fe b3 01 a8 	load_32 ra, 108(sp)
   3ee00:	7e c3 01 a8 	load_32 s27, 112(sp)
   3ee04:	5e d3 01 a8 	load_32 s26, 116(sp)
   3ee08:	3e e3 01 a8 	load_32 s25, 120(sp)
   3ee0c:	1e f3 01 a8 	load_32 s24, 124(sp)
   3ee10:	de 03 02 05 	add_i sp, sp, 128
   3ee14:	1f 00 00 f0 	ret

000000000003ee18 W_CacheLumpNum:
   3ee18:	de 03 fe 05 	add_i sp, sp, -128
   3ee1c:	1e f3 01 88 	store_32 s24, 124(sp)
   3ee20:	3e e3 01 88 	store_32 s25, 120(sp)
   3ee24:	5e d3 01 88 	store_32 s26, 116(sp)
   3ee28:	7e c3 01 88 	store_32 s27, 112(sp)
   3ee2c:	fe b3 01 88 	store_32 ra, 108(sp)
   3ee30:	40 0c 00 4f 	movehi s2, 96
   3ee34:	02 a3 01 00 	or s24, s2, 104
   3ee38:	58 00 00 a8 	load_32 s2, (s24)
   3ee3c:	20 03 f0 c0 	move s25, s0
   3ee40:	3e a0 01 88 	store_32 s1, 104(sp)
   3ee44:	02 80 6c c1 	cmpgt_u s0, s2, s25
   3ee48:	c0 00 00 f4 	bnz s0, 24 <W_CacheLumpNum+0x48>
   3ee4c:	01 00 00 4f 	movehi s0, 1
   3ee50:	3e 13 00 88 	store_32 s25, 4(sp)
   3ee54:	00 80 43 00 	or s0, s0, 4320
   3ee58:	1e 00 00 88 	store_32 s0, (sp)
   3ee5c:	aa 3c ff f9 	call -200024 <I_Error>
   3ee60:	00 0c 00 4f 	movehi s0, 96
   3ee64:	79 0b 00 0b 	shl s27, s25, 2
   3ee68:	40 83 01 00 	or s26, s0, 96
   3ee6c:	3a 00 00 a8 	load_32 s1, (s26)
   3ee70:	01 80 5d c0 	add_i s0, s1, s27
   3ee74:	00 00 00 a8 	load_32 s0, (s0)
   3ee78:	40 00 00 f4 	bnz s0, 8 <W_CacheLumpNum+0x68>
   3ee7c:	12 00 00 f6 	b 72 <W_CacheLumpNum+0xac>
   3ee80:	4a 1c 00 4f 	movehi s2, 234
   3ee84:	20 d0 ff a9 	load_32 s1, -12(s0)
   3ee88:	42 44 28 00 	or s2, s2, 2577
   3ee8c:	21 00 01 c1 	cmpeq_i s1, s1, s2
   3ee90:	41 01 00 f4 	bnz s1, 40 <W_CacheLumpNum+0xa0>
   3ee94:	01 00 00 4f 	movehi s0, 1
   3ee98:	20 d0 07 0f 	move s1, 500
   3ee9c:	3e 10 00 88 	store_32 s1, 4(sp)
   3eea0:	00 ac 26 00 	or s0, s0, 2475
   3eea4:	1e 00 00 88 	store_32 s0, (sp)
   3eea8:	97 3c ff f9 	call -200100 <I_Error>
   3eeac:	1a 00 00 a8 	load_32 s0, (s26)
   3eeb0:	00 80 5d c0 	add_i s0, s0, s27
   3eeb4:	00 00 00 a8 	load_32 s0, (s0)
   3eeb8:	3e a0 01 a8 	load_32 s1, 104(sp)
   3eebc:	a1 38 00 f8 	call 57988 <Z_ChangeTag2>
   3eec0:	18 00 00 f6 	b 96 <W_CacheLumpNum+0x108>
   3eec4:	18 00 00 a8 	load_32 s0, (s24)
   3eec8:	00 80 2c c1 	cmpgt_i s0, s0, s25
   3eecc:	e0 00 00 f4 	bnz s0, 28 <W_CacheLumpNum+0xd0>
   3eed0:	00 00 00 4f 	movehi s0, 0
   3eed4:	3e 13 00 88 	store_32 s25, 4(sp)
   3eed8:	00 d4 55 00 	or s0, s0, 5493
   3eedc:	1e 00 00 88 	store_32 s0, (sp)
   3eee0:	89 3c ff f9 	call -200156 <I_Error>
   3eee4:	3a 00 00 a8 	load_32 s1, (s26)
   3eee8:	00 0c 00 4f 	movehi s0, 96
   3eeec:	59 50 00 07 	mull_i s2, s25, 20
   3eef0:	00 90 01 00 	or s0, s0, 100
   3eef4:	00 00 00 a8 	load_32 s0, (s0)
   3eef8:	00 00 51 c0 	add_i s0, s0, s2
   3eefc:	41 80 5d c0 	add_i s2, s1, s27
   3ef00:	00 40 00 a8 	load_32 s0, 16(s0)
   3ef04:	3e a0 01 a8 	load_32 s1, 104(sp)
   3ef08:	74 36 00 f8 	call 55760 <Z_Malloc>
   3ef0c:	1a 00 00 a8 	load_32 s0, (s26)
   3ef10:	00 80 5d c0 	add_i s0, s0, s27
   3ef14:	20 00 00 a8 	load_32 s1, (s0)
   3ef18:	00 80 fc c0 	move s0, s25
   3ef1c:	77 ff ff f9 	call -548 <W_ReadLump>
   3ef20:	1a 00 00 a8 	load_32 s0, (s26)
   3ef24:	00 80 5d c0 	add_i s0, s0, s27
   3ef28:	00 00 00 a8 	load_32 s0, (s0)
   3ef2c:	fe b3 01 a8 	load_32 ra, 108(sp)
   3ef30:	7e c3 01 a8 	load_32 s27, 112(sp)
   3ef34:	5e d3 01 a8 	load_32 s26, 116(sp)
   3ef38:	3e e3 01 a8 	load_32 s25, 120(sp)
   3ef3c:	1e f3 01 a8 	load_32 s24, 124(sp)
   3ef40:	de 03 02 05 	add_i sp, sp, 128
   3ef44:	1f 00 00 f0 	ret

000000000003ef48 W_CacheLumpName:
   3ef48:	de 03 fe 05 	add_i sp, sp, -128
   3ef4c:	1e f3 01 88 	store_32 s24, 124(sp)
   3ef50:	3e e3 01 88 	store_32 s25, 120(sp)
   3ef54:	5e d3 01 88 	store_32 s26, 116(sp)
   3ef58:	7e c3 01 88 	store_32 s27, 112(sp)
   3ef5c:	fe b3 01 88 	store_32 ra, 108(sp)
   3ef60:	40 0c 00 4f 	movehi s2, 96
   3ef64:	42 a0 01 00 	or s2, s2, 104
   3ef68:	02 03 00 a8 	load_32 s24, (s2)
   3ef6c:	3e 90 01 88 	store_32 s1, 100(sp)
   3ef70:	1e a0 01 88 	store_32 s0, 104(sp)
   3ef74:	58 04 00 14 	cmplt_i s2, s24, 1
   3ef78:	e2 01 00 f4 	bnz s2, 60 <W_CacheLumpName+0x6c>
   3ef7c:	00 0c 00 4f 	movehi s0, 96
   3ef80:	40 03 00 0f 	move s26, 0
   3ef84:	60 23 00 0f 	move s27, 8
   3ef88:	00 90 01 00 	or s0, s0, 100
   3ef8c:	20 03 00 a8 	load_32 s25, (s0)
   3ef90:	1a 50 00 07 	mull_i s0, s26, 20
   3ef94:	3e a0 01 a8 	load_32 s1, 104(sp)
   3ef98:	19 00 50 c0 	add_i s0, s25, s0
   3ef9c:	40 80 fd c0 	move s2, s27
   3efa0:	d7 4d 00 f8 	call 79708 <strncasecmp>
   3efa4:	60 01 00 f2 	bz s0, 44 <W_CacheLumpName+0x88>
   3efa8:	5a 07 00 05 	add_i s26, s26, 1
   3efac:	1a 00 4c c1 	cmplt_i s0, s26, s24
   3efb0:	00 ff ff f5 	bnz s0, -32 <W_CacheLumpName+0x48>
   3efb4:	00 00 00 4f 	movehi s0, 0
   3efb8:	3e a0 01 a8 	load_32 s1, 104(sp)
   3efbc:	3e 10 00 88 	store_32 s1, 4(sp)
   3efc0:	00 9c 7c 00 	or s0, s0, 7975
   3efc4:	1e 00 00 88 	store_32 s0, (sp)
   3efc8:	4f 3c ff f9 	call -200388 <I_Error>
   3efcc:	40 ff ff 0f 	move s26, -1
   3efd0:	00 00 fd c0 	move s0, s26
   3efd4:	3e 90 01 a8 	load_32 s1, 100(sp)
   3efd8:	90 ff ff f9 	call -448 <W_CacheLumpNum>
   3efdc:	fe b3 01 a8 	load_32 ra, 108(sp)
   3efe0:	7e c3 01 a8 	load_32 s27, 112(sp)
   3efe4:	5e d3 01 a8 	load_32 s26, 116(sp)
   3efe8:	3e e3 01 a8 	load_32 s25, 120(sp)
   3efec:	1e f3 01 a8 	load_32 s24, 124(sp)
   3eff0:	de 03 02 05 	add_i sp, sp, 128
   3eff4:	1f 00 00 f0 	ret

000000000003eff8 W_Profile:
   3eff8:	de 03 fc 05 	add_i sp, sp, -256
   3effc:	1e f3 03 88 	store_32 s24, 252(sp)
   3f000:	3e e3 03 88 	store_32 s25, 248(sp)
   3f004:	5e d3 03 88 	store_32 s26, 244(sp)
   3f008:	7e c3 03 88 	store_32 s27, 240(sp)
   3f00c:	fe b3 03 88 	store_32 ra, 236(sp)
   3f010:	00 0c 00 4f 	movehi s0, 96
   3f014:	00 a0 01 00 	or s0, s0, 104
   3f018:	1e 30 03 88 	store_32 s0, 204(sp)
   3f01c:	00 00 00 a8 	load_32 s0, (s0)
   3f020:	20 04 00 14 	cmplt_i s1, s0, 1
   3f024:	a1 03 00 f4 	bnz s1, 116 <W_Profile+0xa0>
   3f028:	20 0c 00 4f 	movehi s1, 96
   3f02c:	a0 0c 00 4f 	movehi s5, 96
   3f030:	d3 08 00 4f 	movehi s6, 83
   3f034:	21 80 01 00 	or s1, s1, 96
   3f038:	40 00 00 0f 	move s2, 0
   3f03c:	60 40 01 0f 	move s3, 80
   3f040:	21 00 00 a8 	load_32 s1, (s1)
   3f044:	80 4c 01 0f 	move s4, 83
   3f048:	a5 b0 01 00 	or s5, s5, 108
   3f04c:	c6 00 67 00 	or s6, s6, 6592
   3f050:	e2 08 00 0b 	shl s7, s2, 2
   3f054:	e1 80 53 c0 	add_i s7, s1, s7
   3f058:	e7 00 00 a8 	load_32 s7, (s7)
   3f05c:	87 01 00 f2 	bz s7, 48 <W_Profile+0x94>
   3f060:	e7 c0 ff a9 	load_32 s7, -16(s7)
   3f064:	07 91 01 14 	cmplt_i s8, s7, 100
   3f068:	e0 00 f2 c0 	move s7, s4
   3f06c:	48 00 00 f4 	bnz s8, 8 <W_Profile+0x7c>
   3f070:	e0 80 f1 c0 	move s7, s3
   3f074:	05 01 00 a8 	load_32 s8, (s5)
   3f078:	22 a1 00 07 	mull_i s9, s2, 40
   3f07c:	26 81 54 c0 	add_i s9, s6, s9
   3f080:	08 09 00 0b 	shl s8, s8, 2
   3f084:	09 01 54 c0 	add_i s8, s9, s8
   3f088:	e8 00 00 88 	store_32 s7, (s8)
   3f08c:	42 04 00 05 	add_i s2, s2, 1
   3f090:	e2 00 40 c1 	cmplt_i s7, s2, s0
   3f094:	e7 fd ff f5 	bnz s7, -68 <W_Profile+0x58>
   3f098:	00 0c 00 4f 	movehi s0, 96
   3f09c:	21 00 00 4f 	movehi s1, 1
   3f0a0:	20 b3 01 00 	or s25, s0, 108
   3f0a4:	21 4c 2c 00 	or s1, s1, 2835
   3f0a8:	19 00 00 a8 	load_32 s0, (s25)
   3f0ac:	00 04 00 05 	add_i s0, s0, 1
   3f0b0:	19 00 00 88 	store_32 s0, (s25)
   3f0b4:	00 00 00 4f 	movehi s0, 0
   3f0b8:	00 c0 7d 00 	or s0, s0, 8048
   3f0bc:	99 4c 00 f8 	call 78436 <fopen>
   3f0c0:	20 00 00 0f 	move s1, 0
   3f0c4:	3e 40 03 88 	store_32 s1, 208(sp)
   3f0c8:	3e a0 03 82 	store_8 s1, 232(sp)
   3f0cc:	3e 30 03 a8 	load_32 s1, 204(sp)
   3f0d0:	21 00 00 a8 	load_32 s1, (s1)
   3f0d4:	1e 70 03 88 	store_32 s0, 220(sp)
   3f0d8:	21 04 00 14 	cmplt_i s1, s1, 1
   3f0dc:	a1 10 00 f4 	bnz s1, 532 <W_Profile+0x2f8>
   3f0e0:	00 0c 00 4f 	movehi s0, 96
   3f0e4:	1e 83 03 05 	add_i s24, sp, 224
   3f0e8:	20 80 00 0f 	move s1, 32
   3f0ec:	00 90 01 00 	or s0, s0, 100
   3f0f0:	1e 10 03 88 	store_32 s0, 196(sp)
   3f0f4:	18 10 00 00 	or s0, s24, 4
   3f0f8:	1e 00 03 88 	store_32 s0, 192(sp)
   3f0fc:	00 20 00 0f 	move s0, 8
   3f100:	1e b0 02 88 	store_32 s0, 172(sp)
   3f104:	03 00 00 4f 	movehi s0, 3
   3f108:	3e a0 02 88 	store_32 s1, 168(sp)
   3f10c:	33 08 00 4f 	movehi s1, 83
   3f110:	00 38 0c 00 	or s0, s0, 782
   3f114:	1e f0 02 88 	store_32 s0, 188(sp)
   3f118:	00 00 00 4f 	movehi s0, 0
   3f11c:	21 00 67 00 	or s1, s1, 6592
   3f120:	3e e0 02 88 	store_32 s1, 184(sp)
   3f124:	27 00 00 4f 	movehi s1, 7
   3f128:	00 80 3a 00 	or s0, s0, 3744
   3f12c:	1e d0 02 88 	store_32 s0, 180(sp)
   3f130:	00 28 00 0f 	move s0, 10
   3f134:	1e c0 02 88 	store_32 s0, 176(sp)
   3f138:	01 00 7c 00 	or s0, s1, 7936
   3f13c:	1e 90 02 88 	store_32 s0, 164(sp)
   3f140:	00 04 00 0f 	move s0, 1
   3f144:	1e 80 02 88 	store_32 s0, 160(sp)
   3f148:	18 fc 00 4f 	movehi s0, 2040
   3f14c:	1e 70 02 88 	store_32 s0, 156(sp)
   3f150:	00 08 00 0f 	move s0, 2
   3f154:	1e 60 02 88 	store_32 s0, 152(sp)
   3f158:	00 00 ff 4f 	movehi s0, 522240
   3f15c:	1e 50 02 88 	store_32 s0, 148(sp)
   3f160:	00 0c 00 0f 	move s0, 3
   3f164:	1e 40 02 88 	store_32 s0, 144(sp)
   3f168:	00 10 00 0f 	move s0, 4
   3f16c:	1e 30 02 88 	store_32 s0, 140(sp)
   3f170:	00 14 00 0f 	move s0, 5
   3f174:	1e 20 02 88 	store_32 s0, 136(sp)
   3f178:	00 18 00 0f 	move s0, 6
   3f17c:	1e 10 02 88 	store_32 s0, 132(sp)
   3f180:	00 00 01 4f 	movehi s0, 2048
   3f184:	1e 00 02 88 	store_32 s0, 128(sp)
   3f188:	00 1c 00 0f 	move s0, 7
   3f18c:	1e f0 01 88 	store_32 s0, 124(sp)
   3f190:	5e 43 03 a8 	load_32 s26, 208(sp)
   3f194:	1e 23 03 88 	store_32 s24, 200(sp)
   3f198:	3e 63 03 88 	store_32 s25, 216(sp)
   3f19c:	7e e3 02 a8 	load_32 s27, 184(sp)
   3f1a0:	1e 10 03 a8 	load_32 s0, 196(sp)
   3f1a4:	3a 50 00 07 	mull_i s1, s26, 20
   3f1a8:	00 00 00 a8 	load_32 s0, (s0)
   3f1ac:	5e 53 03 88 	store_32 s26, 212(sp)
   3f1b0:	00 80 50 c0 	add_i s0, s0, s1
   3f1b4:	40 00 00 a8 	load_32 s2, (s0)
   3f1b8:	00 10 00 a8 	load_32 s0, 4(s0)
   3f1bc:	3e 00 03 a8 	load_32 s1, 192(sp)
   3f1c0:	62 fc 03 01 	and s3, s2, 255
   3f1c4:	01 00 00 88 	store_32 s0, (s1)
   3f1c8:	5e 80 03 88 	store_32 s2, 224(sp)
   3f1cc:	3e 40 03 a8 	load_32 s1, 208(sp)
   3f1d0:	c3 03 00 f2 	bz s3, 120 <W_Profile+0x250>
   3f1d4:	3e 90 02 a8 	load_32 s1, 164(sp)
   3f1d8:	62 80 10 c0 	and s3, s2, s1
   3f1dc:	3e 80 02 a8 	load_32 s1, 160(sp)
   3f1e0:	43 00 00 f4 	bnz s3, 8 <W_Profile+0x1f0>
   3f1e4:	19 00 00 f6 	b 100 <W_Profile+0x250>
   3f1e8:	3e 70 02 a8 	load_32 s1, 156(sp)
   3f1ec:	62 80 10 c0 	and s3, s2, s1
   3f1f0:	3e 60 02 a8 	load_32 s1, 152(sp)
   3f1f4:	a3 02 00 f2 	bz s3, 84 <W_Profile+0x250>
   3f1f8:	3e 50 02 a8 	load_32 s1, 148(sp)
   3f1fc:	42 80 10 c0 	and s2, s2, s1
   3f200:	3e 40 02 a8 	load_32 s1, 144(sp)
   3f204:	22 02 00 f2 	bz s2, 68 <W_Profile+0x250>
   3f208:	3e 30 02 a8 	load_32 s1, 140(sp)
   3f20c:	40 fc 03 01 	and s2, s0, 255
   3f210:	c2 01 00 f2 	bz s2, 56 <W_Profile+0x250>
   3f214:	3e 90 02 a8 	load_32 s1, 164(sp)
   3f218:	40 80 10 c0 	and s2, s0, s1
   3f21c:	3e 20 02 a8 	load_32 s1, 136(sp)
   3f220:	42 01 00 f2 	bz s2, 40 <W_Profile+0x250>
   3f224:	3e 70 02 a8 	load_32 s1, 156(sp)
   3f228:	40 80 10 c0 	and s2, s0, s1
   3f22c:	3e 10 02 a8 	load_32 s1, 132(sp)
   3f230:	c2 00 00 f2 	bz s2, 24 <W_Profile+0x250>
   3f234:	3e 00 02 a8 	load_32 s1, 128(sp)
   3f238:	00 80 80 c1 	cmplt_u s0, s0, s1
   3f23c:	3e f0 01 a8 	load_32 s1, 124(sp)
   3f240:	40 00 00 f4 	bnz s0, 8 <W_Profile+0x250>
   3f244:	06 00 00 f6 	b 24 <W_Profile+0x264>
   3f248:	5e b0 02 a8 	load_32 s2, 172(sp)
   3f24c:	18 80 00 c0 	or s0, s24, s1
   3f250:	42 80 60 c0 	sub_i s2, s2, s1
   3f254:	3e a0 02 a8 	load_32 s1, 168(sp)
   3f258:	13 4a 00 f8 	call 75852 <memset>
   3f25c:	1e 23 00 88 	store_32 s24, 8(sp)
   3f260:	1e 70 03 a8 	load_32 s0, 220(sp)
   3f264:	1e 00 00 88 	store_32 s0, (sp)
   3f268:	1e f0 02 a8 	load_32 s0, 188(sp)
   3f26c:	1e 10 00 88 	store_32 s0, 4(sp)
   3f270:	b3 4c 00 f8 	call 78540 <fprintf>
   3f274:	19 00 00 a8 	load_32 s0, (s25)
   3f278:	1e d3 02 a8 	load_32 s24, 180(sp)
   3f27c:	5e 53 03 a8 	load_32 s26, 212(sp)
   3f280:	00 04 00 14 	cmplt_i s0, s0, 1
   3f284:	20 02 00 f4 	bnz s0, 68 <W_Profile+0x2d0>
   3f288:	3e 43 03 a8 	load_32 s25, 208(sp)
   3f28c:	1a a0 00 07 	mull_i s0, s26, 40
   3f290:	1b 00 50 c0 	add_i s0, s27, s0
   3f294:	39 08 00 0b 	shl s1, s25, 2
   3f298:	00 80 50 c0 	add_i s0, s0, s1
   3f29c:	00 00 00 a8 	load_32 s0, (s0)
   3f2a0:	1e 20 00 88 	store_32 s0, 8(sp)
   3f2a4:	1e 13 00 88 	store_32 s24, 4(sp)
   3f2a8:	1e 70 03 a8 	load_32 s0, 220(sp)
   3f2ac:	1e 00 00 88 	store_32 s0, (sp)
   3f2b0:	a3 4c 00 f8 	call 78476 <fprintf>
   3f2b4:	1e 60 03 a8 	load_32 s0, 216(sp)
   3f2b8:	39 07 00 05 	add_i s25, s25, 1
   3f2bc:	00 00 00 a8 	load_32 s0, (s0)
   3f2c0:	19 00 40 c1 	cmplt_i s0, s25, s0
   3f2c4:	40 fe ff f5 	bnz s0, -56 <W_Profile+0x294>
   3f2c8:	1e c0 02 a8 	load_32 s0, 176(sp)
   3f2cc:	3e 70 03 a8 	load_32 s1, 220(sp)
   3f2d0:	04 4b 00 f8 	call 76816 <fputc>
   3f2d4:	1e 30 03 a8 	load_32 s0, 204(sp)
   3f2d8:	5a 07 00 05 	add_i s26, s26, 1
   3f2dc:	00 00 00 a8 	load_32 s0, (s0)
   3f2e0:	3e 63 03 a8 	load_32 s25, 216(sp)
   3f2e4:	1e 23 03 a8 	load_32 s24, 200(sp)
   3f2e8:	1a 00 40 c1 	cmplt_i s0, s26, s0
   3f2ec:	a0 f5 ff f5 	bnz s0, -332 <W_Profile+0x1a8>
   3f2f0:	1e 70 03 a8 	load_32 s0, 220(sp)
   3f2f4:	72 4c 00 f8 	call 78280 <fclose>
   3f2f8:	fe b3 03 a8 	load_32 ra, 236(sp)
   3f2fc:	7e c3 03 a8 	load_32 s27, 240(sp)
   3f300:	5e d3 03 a8 	load_32 s26, 244(sp)
   3f304:	3e e3 03 a8 	load_32 s25, 248(sp)
   3f308:	1e f3 03 a8 	load_32 s24, 252(sp)
   3f30c:	de 03 04 05 	add_i sp, sp, 256
   3f310:	1f 00 00 f0 	ret

000000000003f314 WI_slamBackground:
   3f314:	de 03 ff 05 	add_i sp, sp, -64
   3f318:	fe f3 00 88 	store_32 ra, 60(sp)
   3f31c:	00 0c 00 4f 	movehi s0, 96
   3f320:	47 00 00 4f 	movehi s2, 7
   3f324:	20 20 02 00 	or s1, s0, 136
   3f328:	42 00 68 00 	or s2, s2, 6656
   3f32c:	01 00 00 a8 	load_32 s0, (s1)
   3f330:	21 10 00 a8 	load_32 s1, 4(s1)
   3f334:	74 4a 00 f8 	call 76240 <memcpy>
   3f338:	00 00 00 0f 	move s0, 0
   3f33c:	40 00 05 0f 	move s2, 320
   3f340:	60 20 03 0f 	move s3, 200
   3f344:	20 00 f0 c0 	move s1, s0
   3f348:	da 1a 00 f8 	call 27496 <V_MarkRect>
   3f34c:	fe f3 00 a8 	load_32 ra, 60(sp)
   3f350:	de 03 01 05 	add_i sp, sp, 64
   3f354:	1f 00 00 f0 	ret

000000000003f358 WI_Responder:
   3f358:	00 00 00 0f 	move s0, 0
   3f35c:	1f 00 00 f0 	ret

000000000003f360 WI_drawLF:
   3f360:	de 03 ff 05 	add_i sp, sp, -64
   3f364:	1e f3 00 88 	store_32 s24, 60(sp)
   3f368:	3e e3 00 88 	store_32 s25, 56(sp)
   3f36c:	5e d3 00 88 	store_32 s26, 52(sp)
   3f370:	7e c3 00 88 	store_32 s27, 48(sp)
   3f374:	fe b3 00 88 	store_32 ra, 44(sp)
   3f378:	00 0c 00 4f 	movehi s0, 96
   3f37c:	20 0c 00 4f 	movehi s1, 96
   3f380:	60 03 05 0f 	move s27, 320
   3f384:	20 13 27 00 	or s25, s0, 2500
   3f388:	41 23 27 00 	or s26, s1, 2504
   3f38c:	00 03 00 0f 	move s24, 0
   3f390:	19 00 00 a8 	load_32 s0, (s25)
   3f394:	3a 00 00 a8 	load_32 s1, (s26)
   3f398:	21 20 00 a8 	load_32 s1, 8(s1)
   3f39c:	21 08 00 0b 	shl s1, s1, 2
   3f3a0:	00 80 50 c0 	add_i s0, s0, s1
   3f3a4:	60 00 00 a8 	load_32 s3, (s0)
   3f3a8:	03 00 00 a6 	load_s16 s0, (s3)
   3f3ac:	40 00 fc c0 	move s2, s24
   3f3b0:	1b 00 60 c0 	sub_i s0, s27, s0
   3f3b4:	20 7c 00 0a 	shr s1, s0, 31
   3f3b8:	00 80 50 c0 	add_i s0, s0, s1
   3f3bc:	20 08 00 0f 	move s1, 2
   3f3c0:	00 04 00 09 	ashr s0, s0, 1
   3f3c4:	41 1b 00 f8 	call 27908 <V_DrawPatch>
   3f3c8:	19 00 00 a8 	load_32 s0, (s25)
   3f3cc:	3a 00 00 a8 	load_32 s1, (s26)
   3f3d0:	21 20 00 a8 	load_32 s1, 8(s1)
   3f3d4:	21 08 00 0b 	shl s1, s1, 2
   3f3d8:	00 80 50 c0 	add_i s0, s0, s1
   3f3dc:	20 0c 00 4f 	movehi s1, 96
   3f3e0:	00 00 00 a8 	load_32 s0, (s0)
   3f3e4:	21 30 27 00 	or s1, s1, 2508
   3f3e8:	00 08 00 a6 	load_s16 s0, 2(s0)
   3f3ec:	61 00 00 a8 	load_32 s3, (s1)
   3f3f0:	00 14 00 07 	mull_i s0, s0, 5
   3f3f4:	43 00 00 a6 	load_s16 s2, (s3)
   3f3f8:	20 7c 00 09 	ashr s1, s0, 31
   3f3fc:	21 78 00 0a 	shr s1, s1, 30
   3f400:	00 80 50 c0 	add_i s0, s0, s1
   3f404:	3b 00 61 c0 	sub_i s1, s27, s2
   3f408:	00 08 00 09 	ashr s0, s0, 2
   3f40c:	41 7c 00 0a 	shr s2, s1, 31
   3f410:	41 00 51 c0 	add_i s2, s1, s2
   3f414:	20 08 00 05 	add_i s1, s0, 2
   3f418:	02 04 00 09 	ashr s0, s2, 1
   3f41c:	40 00 fc c0 	move s2, s24
   3f420:	2a 1b 00 f8 	call 27816 <V_DrawPatch>
   3f424:	fe b3 00 a8 	load_32 ra, 44(sp)
   3f428:	7e c3 00 a8 	load_32 s27, 48(sp)
   3f42c:	5e d3 00 a8 	load_32 s26, 52(sp)
   3f430:	3e e3 00 a8 	load_32 s25, 56(sp)
   3f434:	1e f3 00 a8 	load_32 s24, 60(sp)
   3f438:	de 03 01 05 	add_i sp, sp, 64
   3f43c:	1f 00 00 f0 	ret

000000000003f440 WI_drawEL:
   3f440:	de 03 ff 05 	add_i sp, sp, -64
   3f444:	1e f3 00 88 	store_32 s24, 60(sp)
   3f448:	3e e3 00 88 	store_32 s25, 56(sp)
   3f44c:	fe d3 00 88 	store_32 ra, 52(sp)
   3f450:	00 0c 00 4f 	movehi s0, 96
   3f454:	20 03 05 0f 	move s25, 320
   3f458:	00 03 00 0f 	move s24, 0
   3f45c:	00 40 27 00 	or s0, s0, 2512
   3f460:	60 00 00 a8 	load_32 s3, (s0)
   3f464:	03 00 00 a6 	load_s16 s0, (s3)
   3f468:	40 00 fc c0 	move s2, s24
   3f46c:	19 00 60 c0 	sub_i s0, s25, s0
   3f470:	20 7c 00 0a 	shr s1, s0, 31
   3f474:	00 80 50 c0 	add_i s0, s0, s1
   3f478:	20 08 00 0f 	move s1, 2
   3f47c:	00 04 00 09 	ashr s0, s0, 1
   3f480:	12 1b 00 f8 	call 27720 <V_DrawPatch>
   3f484:	00 0c 00 4f 	movehi s0, 96
   3f488:	20 0c 00 4f 	movehi s1, 96
   3f48c:	00 10 27 00 	or s0, s0, 2500
   3f490:	21 20 27 00 	or s1, s1, 2504
   3f494:	00 00 00 a8 	load_32 s0, (s0)
   3f498:	21 00 00 a8 	load_32 s1, (s1)
   3f49c:	21 30 00 a8 	load_32 s1, 12(s1)
   3f4a0:	21 08 00 0b 	shl s1, s1, 2
   3f4a4:	00 80 50 c0 	add_i s0, s0, s1
   3f4a8:	60 00 00 a8 	load_32 s3, (s0)
   3f4ac:	03 08 00 a6 	load_s16 s0, 2(s3)
   3f4b0:	43 00 00 a6 	load_s16 s2, (s3)
   3f4b4:	00 14 00 07 	mull_i s0, s0, 5
   3f4b8:	20 7c 00 09 	ashr s1, s0, 31
   3f4bc:	21 78 00 0a 	shr s1, s1, 30
   3f4c0:	00 80 50 c0 	add_i s0, s0, s1
   3f4c4:	39 00 61 c0 	sub_i s1, s25, s2
   3f4c8:	00 08 00 09 	ashr s0, s0, 2
   3f4cc:	41 7c 00 0a 	shr s2, s1, 31
   3f4d0:	41 00 51 c0 	add_i s2, s1, s2
   3f4d4:	20 08 00 05 	add_i s1, s0, 2
   3f4d8:	02 04 00 09 	ashr s0, s2, 1
   3f4dc:	40 00 fc c0 	move s2, s24
   3f4e0:	fa 1a 00 f8 	call 27624 <V_DrawPatch>
   3f4e4:	fe d3 00 a8 	load_32 ra, 52(sp)
   3f4e8:	3e e3 00 a8 	load_32 s25, 56(sp)
   3f4ec:	1e f3 00 a8 	load_32 s24, 60(sp)
   3f4f0:	de 03 01 05 	add_i sp, sp, 64
   3f4f4:	1f 00 00 f0 	ret

000000000003f4f8 WI_drawOnLnode:
   3f4f8:	de 03 fe 05 	add_i sp, sp, -128
   3f4fc:	fe f3 01 88 	store_32 ra, 124(sp)
   3f500:	40 0c 00 4f 	movehi s2, 96
   3f504:	63 00 00 4f 	movehi s3, 3
   3f508:	a0 04 00 0f 	move s5, 1
   3f50c:	42 20 27 00 	or s2, s2, 2504
   3f510:	63 d0 59 00 	or s3, s3, 5748
   3f514:	42 00 00 a8 	load_32 s2, (s2)
   3f518:	42 00 00 a8 	load_32 s2, (s2)
   3f51c:	42 20 01 07 	mull_i s2, s2, 72
   3f520:	63 00 51 c0 	add_i s3, s3, s2
   3f524:	40 00 f0 c0 	move s2, s0
   3f528:	02 0c 00 0b 	shl s0, s2, 3
   3f52c:	83 00 50 c0 	add_i s4, s3, s0
   3f530:	60 80 f0 c0 	move s3, s1
   3f534:	04 00 00 a8 	load_32 s0, (s4)
   3f538:	24 10 00 a8 	load_32 s1, 4(s4)
   3f53c:	80 00 00 0f 	move s4, 0
   3f540:	c0 00 f2 c0 	move s6, s4
   3f544:	e4 08 00 0b 	shl s7, s4, 2
   3f548:	e3 80 53 c0 	add_i s7, s3, s7
   3f54c:	e7 00 00 a8 	load_32 s7, (s7)
   3f550:	07 11 00 a6 	load_s16 s8, 4(s7)
   3f554:	27 19 00 a6 	load_s16 s9, 6(s7)
   3f558:	47 01 00 a6 	load_s16 s10, (s7)
   3f55c:	e7 08 00 a6 	load_s16 s7, 2(s7)
   3f560:	00 01 64 c0 	sub_i s8, s0, s8
   3f564:	21 81 64 c0 	sub_i s9, s1, s9
   3f568:	69 01 04 c0 	or s11, s9, s8
   3f56c:	08 01 55 c0 	add_i s8, s8, s10
   3f570:	e9 80 53 c0 	add_i s7, s9, s7
   3f574:	4b fd ff 12 	cmpgt_i s10, s11, -1
   3f578:	08 01 05 14 	cmplt_i s8, s8, 320
   3f57c:	e7 20 03 14 	cmplt_i s7, s7, 200
   3f580:	0a 01 14 c0 	and s8, s10, s8
   3f584:	e8 80 13 c0 	and s7, s8, s7
   3f588:	07 fd ff 03 	xor s8, s7, -1
   3f58c:	27 01 00 11 	cmpne_i s9, s7, 0
   3f590:	e0 80 f2 c0 	move s7, s5
   3f594:	08 05 00 01 	and s8, s8, 1
   3f598:	84 00 54 c0 	add_i s4, s4, s8
   3f59c:	49 00 00 f4 	bnz s9, 8 <WI_drawOnLnode+0xac>
   3f5a0:	e0 00 f3 c0 	move s7, s6
   3f5a4:	c4 08 00 10 	cmpeq_i s6, s4, 2
   3f5a8:	66 00 00 f4 	bnz s6, 12 <WI_drawOnLnode+0xbc>
   3f5ac:	c0 80 f3 c0 	move s6, s7
   3f5b0:	a7 fc ff f3 	bz s7, -108 <WI_drawOnLnode+0x4c>
   3f5b4:	67 01 00 f2 	bz s7, 44 <WI_drawOnLnode+0xe8>
   3f5b8:	a4 04 00 16 	cmpgt_u s5, s4, 1
   3f5bc:	25 01 00 f4 	bnz s5, 36 <WI_drawOnLnode+0xe8>
   3f5c0:	44 08 00 0b 	shl s2, s4, 2
   3f5c4:	43 00 51 c0 	add_i s2, s3, s2
   3f5c8:	62 00 00 a8 	load_32 s3, (s2)
   3f5cc:	40 00 00 0f 	move s2, 0
   3f5d0:	be 1a 00 f8 	call 27384 <V_DrawPatch>
   3f5d4:	fe f3 01 a8 	load_32 ra, 124(sp)
   3f5d8:	de 03 02 05 	add_i sp, sp, 128
   3f5dc:	1f 00 00 f0 	ret
   3f5e0:	22 00 00 4f 	movehi s1, 2
   3f5e4:	02 04 00 05 	add_i s0, s2, 1
   3f5e8:	1e 10 00 88 	store_32 s0, 4(sp)
   3f5ec:	01 34 7e 00 	or s0, s1, 8077
   3f5f0:	1e 00 00 88 	store_32 s0, (sp)
   3f5f4:	f8 49 00 f8 	call 75744 <printf>
   3f5f8:	fe f3 01 a8 	load_32 ra, 124(sp)
   3f5fc:	de 03 02 05 	add_i sp, sp, 128
   3f600:	1f 00 00 f0 	ret

000000000003f604 WI_initAnimatedBack:
   3f604:	de 03 ff 05 	add_i sp, sp, -64
   3f608:	1e f3 00 88 	store_32 s24, 60(sp)
   3f60c:	3e e3 00 88 	store_32 s25, 56(sp)
   3f610:	5e d3 00 88 	store_32 s26, 52(sp)
   3f614:	7e c3 00 88 	store_32 s27, 48(sp)
   3f618:	fe b3 00 88 	store_32 ra, 44(sp)
   3f61c:	0b 04 00 4f 	movehi s0, 43
   3f620:	00 00 40 00 	or s0, s0, 4096
   3f624:	00 00 00 a8 	load_32 s0, (s0)
   3f628:	00 08 00 10 	cmpeq_i s0, s0, 2
   3f62c:	80 07 00 f4 	bnz s0, 240 <WI_initAnimatedBack+0x118>
   3f630:	00 0c 00 4f 	movehi s0, 96
   3f634:	60 20 27 00 	or s3, s0, 2504
   3f638:	03 00 00 a8 	load_32 s0, (s3)
   3f63c:	00 00 00 a8 	load_32 s0, (s0)
   3f640:	20 08 00 12 	cmpgt_i s1, s0, 2
   3f644:	c1 06 00 f4 	bnz s1, 216 <WI_initAnimatedBack+0x118>
   3f648:	23 00 00 4f 	movehi s1, 3
   3f64c:	43 00 00 4f 	movehi s2, 3
   3f650:	20 03 00 0f 	move s25, 0
   3f654:	81 50 5e 00 	or s4, s1, 6036
   3f658:	20 0c 00 4f 	movehi s1, 96
   3f65c:	a0 fc ff 0f 	move s5, -1
   3f660:	42 93 5e 00 	or s26, s2, 6052
   3f664:	21 50 27 00 	or s1, s1, 2516
   3f668:	3e a0 00 88 	store_32 s1, 40(sp)
   3f66c:	7e 90 00 88 	store_32 s3, 36(sp)
   3f670:	9e 80 00 88 	store_32 s4, 32(sp)
   3f674:	be 70 00 88 	store_32 s5, 28(sp)
   3f678:	00 08 00 0b 	shl s0, s0, 2
   3f67c:	04 00 50 c0 	add_i s0, s4, s0
   3f680:	39 e0 00 07 	mull_i s1, s25, 56
   3f684:	00 00 00 a8 	load_32 s0, (s0)
   3f688:	00 83 50 c0 	add_i s24, s0, s1
   3f68c:	b8 c0 00 88 	store_32 s5, 48(s24)
   3f690:	18 00 00 a8 	load_32 s0, (s24)
   3f694:	20 08 00 10 	cmpeq_i s1, s0, 2
   3f698:	a1 02 00 f4 	bnz s1, 84 <WI_initAnimatedBack+0xe8>
   3f69c:	20 04 00 10 	cmpeq_i s1, s0, 1
   3f6a0:	e1 00 00 f4 	bnz s1, 28 <WI_initAnimatedBack+0xb8>
   3f6a4:	c0 02 00 f4 	bnz s0, 88 <WI_initAnimatedBack+0xf8>
   3f6a8:	1e a0 00 a8 	load_32 s0, 40(sp)
   3f6ac:	60 03 00 a8 	load_32 s27, (s0)
   3f6b0:	1c 73 ff f9 	call -144272 <M_Random>
   3f6b4:	38 10 00 a8 	load_32 s1, 4(s24)
   3f6b8:	07 00 00 f6 	b 28 <WI_initAnimatedBack+0xd0>
   3f6bc:	1e a0 00 a8 	load_32 s0, 40(sp)
   3f6c0:	00 00 00 a8 	load_32 s0, (s0)
   3f6c4:	38 60 00 a8 	load_32 s1, 24(s24)
   3f6c8:	60 83 50 c0 	add_i s27, s0, s1
   3f6cc:	15 73 ff f9 	call -144300 <M_Random>
   3f6d0:	38 50 00 a8 	load_32 s1, 20(s24)
   3f6d4:	09 55 00 f8 	call 87076 <__modsi3>
   3f6d8:	be 70 00 a8 	load_32 s5, 28(sp)
   3f6dc:	1b 00 50 c0 	add_i s0, s27, s0
   3f6e0:	9e 80 00 a8 	load_32 s4, 32(sp)
   3f6e4:	7e 90 00 a8 	load_32 s3, 36(sp)
   3f6e8:	03 00 00 f6 	b 12 <WI_initAnimatedBack+0xf0>
   3f6ec:	1e a0 00 a8 	load_32 s0, 40(sp)
   3f6f0:	00 00 00 a8 	load_32 s0, (s0)
   3f6f4:	00 04 00 05 	add_i s0, s0, 1
   3f6f8:	18 a0 00 88 	store_32 s0, 40(s24)
   3f6fc:	03 00 00 a8 	load_32 s0, (s3)
   3f700:	39 07 00 05 	add_i s25, s25, 1
   3f704:	00 00 00 a8 	load_32 s0, (s0)
   3f708:	20 08 00 0b 	shl s1, s0, 2
   3f70c:	3a 80 50 c0 	add_i s1, s26, s1
   3f710:	21 00 00 a8 	load_32 s1, (s1)
   3f714:	39 80 40 c1 	cmplt_i s1, s25, s1
   3f718:	01 fb ff f5 	bnz s1, -160 <WI_initAnimatedBack+0x74>
   3f71c:	fe b3 00 a8 	load_32 ra, 44(sp)
   3f720:	7e c3 00 a8 	load_32 s27, 48(sp)
   3f724:	5e d3 00 a8 	load_32 s26, 52(sp)
   3f728:	3e e3 00 a8 	load_32 s25, 56(sp)
   3f72c:	1e f3 00 a8 	load_32 s24, 60(sp)
   3f730:	de 03 01 05 	add_i sp, sp, 64
   3f734:	1f 00 00 f0 	ret

000000000003f738 WI_updateAnimatedBack:
   3f738:	de 03 ff 05 	add_i sp, sp, -64
   3f73c:	1e f3 00 88 	store_32 s24, 60(sp)
   3f740:	3e e3 00 88 	store_32 s25, 56(sp)
   3f744:	5e d3 00 88 	store_32 s26, 52(sp)
   3f748:	7e c3 00 88 	store_32 s27, 48(sp)
   3f74c:	fe b3 00 88 	store_32 ra, 44(sp)
   3f750:	0b 04 00 4f 	movehi s0, 43
   3f754:	00 00 40 00 	or s0, s0, 4096
   3f758:	00 00 00 a8 	load_32 s0, (s0)
   3f75c:	00 08 00 10 	cmpeq_i s0, s0, 2
   3f760:	e0 0b 00 f4 	bnz s0, 380 <WI_updateAnimatedBack+0x1a4>
   3f764:	00 0c 00 4f 	movehi s0, 96
   3f768:	00 20 27 00 	or s0, s0, 2504
   3f76c:	1e 90 00 88 	store_32 s0, 36(sp)
   3f770:	00 00 00 a8 	load_32 s0, (s0)
   3f774:	20 00 00 a8 	load_32 s1, (s0)
   3f778:	41 08 00 12 	cmpgt_i s2, s1, 2
   3f77c:	02 0b 00 f4 	bnz s2, 352 <WI_updateAnimatedBack+0x1a4>
   3f780:	43 00 00 4f 	movehi s2, 3
   3f784:	60 0c 00 4f 	movehi s3, 96
   3f788:	00 03 00 0f 	move s24, 0
   3f78c:	a2 50 5e 00 	or s5, s2, 6036
   3f790:	40 0c 00 4f 	movehi s2, 96
   3f794:	c3 50 27 00 	or s6, s3, 2516
   3f798:	63 00 00 4f 	movehi s3, 3
   3f79c:	e2 60 27 00 	or s7, s2, 2520
   3f7a0:	40 fc ff 0f 	move s2, -1
   3f7a4:	5e 50 00 88 	store_32 s2, 20(sp)
   3f7a8:	23 93 5e 00 	or s25, s3, 6052
   3f7ac:	1e 43 00 88 	store_32 s24, 16(sp)
   3f7b0:	be 80 00 88 	store_32 s5, 32(sp)
   3f7b4:	de 70 00 88 	store_32 s6, 28(sp)
   3f7b8:	fe 60 00 88 	store_32 s7, 24(sp)
   3f7bc:	21 08 00 0b 	shl s1, s1, 2
   3f7c0:	25 80 50 c0 	add_i s1, s5, s1
   3f7c4:	58 e0 00 07 	mull_i s2, s24, 56
   3f7c8:	21 00 00 a8 	load_32 s1, (s1)
   3f7cc:	61 03 51 c0 	add_i s27, s1, s2
   3f7d0:	26 00 00 a8 	load_32 s1, (s6)
   3f7d4:	5b a0 00 a8 	load_32 s2, 40(s27)
   3f7d8:	41 00 11 c1 	cmpne_i s2, s1, s2
   3f7dc:	22 07 00 f4 	bnz s2, 228 <WI_updateAnimatedBack+0x188>
   3f7e0:	5b 00 00 a8 	load_32 s2, (s27)
   3f7e4:	5b a3 00 05 	add_i s26, s27, 40
   3f7e8:	62 08 00 10 	cmpeq_i s3, s2, 2
   3f7ec:	63 04 00 f4 	bnz s3, 140 <WI_updateAnimatedBack+0x140>
   3f7f0:	62 04 00 10 	cmpeq_i s3, s2, 1
   3f7f4:	23 01 00 f4 	bnz s3, 36 <WI_updateAnimatedBack+0xe0>
   3f7f8:	42 06 00 f4 	bnz s2, 200 <WI_updateAnimatedBack+0x188>
   3f7fc:	5b c0 00 a8 	load_32 s2, 48(s27)
   3f800:	7b 20 00 a8 	load_32 s3, 8(s27)
   3f804:	42 04 00 05 	add_i s2, s2, 1
   3f808:	62 80 41 c1 	cmplt_i s3, s2, s3
   3f80c:	23 05 00 f4 	bnz s3, 164 <WI_updateAnimatedBack+0x178>
   3f810:	5e 40 00 a8 	load_32 s2, 16(sp)
   3f814:	27 00 00 f6 	b 156 <WI_updateAnimatedBack+0x178>
   3f818:	5b c0 00 a8 	load_32 s2, 48(s27)
   3f81c:	42 04 00 05 	add_i s2, s2, 1
   3f820:	5b c0 00 88 	store_32 s2, 48(s27)
   3f824:	7b 20 00 a8 	load_32 s3, 8(s27)
   3f828:	42 80 11 c1 	cmpne_i s2, s2, s3
   3f82c:	42 04 00 f4 	bnz s2, 136 <WI_updateAnimatedBack+0x17c>
   3f830:	1b c0 00 05 	add_i s0, s27, 48
   3f834:	5e 50 00 a8 	load_32 s2, 20(sp)
   3f838:	40 00 00 88 	store_32 s2, (s0)
   3f83c:	1b 60 00 a8 	load_32 s0, 24(s27)
   3f840:	00 80 50 c0 	add_i s0, s0, s1
   3f844:	1e a0 00 88 	store_32 s0, 40(sp)
   3f848:	b6 72 ff f9 	call -144680 <M_Random>
   3f84c:	3b 50 00 a8 	load_32 s1, 20(s27)
   3f850:	aa 54 00 f8 	call 86696 <__modsi3>
   3f854:	fe 60 00 a8 	load_32 s7, 24(sp)
   3f858:	de 70 00 a8 	load_32 s6, 28(sp)
   3f85c:	be 80 00 a8 	load_32 s5, 32(sp)
   3f860:	3e a0 00 a8 	load_32 s1, 40(sp)
   3f864:	01 00 50 c0 	add_i s0, s1, s0
   3f868:	1a 00 00 88 	store_32 s0, (s26)
   3f86c:	1e 90 00 a8 	load_32 s0, 36(sp)
   3f870:	00 00 00 a8 	load_32 s0, (s0)
   3f874:	13 00 00 f6 	b 76 <WI_updateAnimatedBack+0x188>
   3f878:	47 00 00 a8 	load_32 s2, (s7)
   3f87c:	78 1c 00 11 	cmpne_i s3, s24, 7
   3f880:	43 00 00 f4 	bnz s3, 8 <WI_updateAnimatedBack+0x150>
   3f884:	e2 01 00 f2 	bz s2, 60 <WI_updateAnimatedBack+0x188>
   3f888:	40 30 00 a8 	load_32 s2, 12(s0)
   3f88c:	7b 50 00 a8 	load_32 s3, 20(s27)
   3f890:	42 80 11 c1 	cmpne_i s2, s2, s3
   3f894:	62 01 00 f4 	bnz s2, 44 <WI_updateAnimatedBack+0x188>
   3f898:	5b c0 00 a8 	load_32 s2, 48(s27)
   3f89c:	9b 20 00 a8 	load_32 s4, 8(s27)
   3f8a0:	62 04 00 05 	add_i s3, s2, 1
   3f8a4:	83 00 02 c1 	cmpeq_i s4, s3, s4
   3f8a8:	44 00 00 f4 	bnz s4, 8 <WI_updateAnimatedBack+0x178>
   3f8ac:	40 80 f1 c0 	move s2, s3
   3f8b0:	5b c0 00 88 	store_32 s2, 48(s27)
   3f8b4:	5b 10 00 a8 	load_32 s2, 4(s27)
   3f8b8:	22 80 50 c0 	add_i s1, s2, s1
   3f8bc:	3a 00 00 88 	store_32 s1, (s26)
   3f8c0:	20 00 00 a8 	load_32 s1, (s0)
   3f8c4:	18 07 00 05 	add_i s24, s24, 1
   3f8c8:	41 08 00 0b 	shl s2, s1, 2
   3f8cc:	59 00 51 c0 	add_i s2, s25, s2
   3f8d0:	42 00 00 a8 	load_32 s2, (s2)
   3f8d4:	58 00 41 c1 	cmplt_i s2, s24, s2
   3f8d8:	22 f7 ff f5 	bnz s2, -284 <WI_updateAnimatedBack+0x84>
   3f8dc:	fe b3 00 a8 	load_32 ra, 44(sp)
   3f8e0:	7e c3 00 a8 	load_32 s27, 48(sp)
   3f8e4:	5e d3 00 a8 	load_32 s26, 52(sp)
   3f8e8:	3e e3 00 a8 	load_32 s25, 56(sp)
   3f8ec:	1e f3 00 a8 	load_32 s24, 60(sp)
   3f8f0:	de 03 01 05 	add_i sp, sp, 64
   3f8f4:	1f 00 00 f0 	ret

000000000003f8f8 WI_drawAnimatedBack:
   3f8f8:	1f 00 00 f0 	ret

000000000003f8fc WI_drawNum:
   3f8fc:	de 03 ff 05 	add_i sp, sp, -64
   3f900:	1e f3 00 88 	store_32 s24, 60(sp)
   3f904:	3e e3 00 88 	store_32 s25, 56(sp)
   3f908:	5e d3 00 88 	store_32 s26, 52(sp)
   3f90c:	7e c3 00 88 	store_32 s27, 48(sp)
   3f910:	fe b3 00 88 	store_32 ra, 44(sp)
   3f914:	80 0c 00 4f 	movehi s4, 96
   3f918:	c4 70 27 00 	or s6, s4, 2524
   3f91c:	86 00 00 a8 	load_32 s4, (s6)
   3f920:	60 83 f1 c0 	move s27, s3
   3f924:	40 83 f0 c0 	move s26, s1
   3f928:	00 03 f0 c0 	move s24, s0
   3f92c:	1b fc ff 12 	cmpgt_i s0, s27, -1
   3f930:	24 03 00 a6 	load_s16 s25, (s4)
   3f934:	20 02 00 f4 	bnz s0, 68 <WI_drawNum+0x7c>
   3f938:	e2 01 00 f2 	bz s2, 60 <WI_drawNum+0x78>
   3f93c:	13 64 66 4f 	movehi s0, 209715
   3f940:	60 03 00 0f 	move s27, 0
   3f944:	80 00 f1 c0 	move s4, s2
   3f948:	00 9c 19 00 	or s0, s0, 1639
   3f94c:	a4 00 f0 c1 	mulh_i s5, s4, s0
   3f950:	84 24 00 05 	add_i s4, s4, 9
   3f954:	7b 07 00 05 	add_i s27, s27, 1
   3f958:	65 08 00 09 	ashr s3, s5, 2
   3f95c:	a5 7c 00 0a 	shr s5, s5, 31
   3f960:	a3 80 52 c0 	add_i s5, s3, s5
   3f964:	64 48 00 16 	cmpgt_u s3, s4, 18
   3f968:	80 80 f2 c0 	move s4, s5
   3f96c:	03 ff ff f5 	bnz s3, -32 <WI_drawNum+0x50>
   3f970:	02 00 00 f6 	b 8 <WI_drawNum+0x7c>
   3f974:	60 07 00 0f 	move s27, 1
   3f978:	02 7c 00 09 	ashr s0, s2, 31
   3f97c:	62 00 50 c0 	add_i s3, s2, s0
   3f980:	03 00 30 c0 	xor s0, s3, s0
   3f984:	60 28 1f 10 	cmpeq_i s3, s0, 1994
   3f988:	43 00 00 f4 	bnz s3, 8 <WI_drawNum+0x94>
   3f98c:	03 00 00 f6 	b 12 <WI_drawNum+0x9c>
   3f990:	00 03 00 0f 	move s24, 0
   3f994:	2a 00 00 f6 	b 168 <WI_drawNum+0x140>
   3f998:	5e 60 00 88 	store_32 s2, 24(sp)
   3f99c:	bb 03 00 f2 	bz s27, 116 <WI_drawNum+0x114>
   3f9a0:	53 64 66 4f 	movehi s2, 209715
   3f9a4:	42 9c 19 00 	or s2, s2, 1639
   3f9a8:	5e 80 00 88 	store_32 s2, 32(sp)
   3f9ac:	40 00 00 0f 	move s2, 0
   3f9b0:	5e 70 00 88 	store_32 s2, 28(sp)
   3f9b4:	5e 80 00 a8 	load_32 s2, 32(sp)
   3f9b8:	18 83 6c c0 	sub_i s24, s24, s25
   3f9bc:	7b ff ff 05 	add_i s27, s27, -1
   3f9c0:	60 00 f1 c1 	mulh_i s3, s0, s2
   3f9c4:	43 08 00 09 	ashr s2, s3, 2
   3f9c8:	63 7c 00 0a 	shr s3, s3, 31
   3f9cc:	42 80 51 c0 	add_i s2, s2, s3
   3f9d0:	5e 90 00 88 	store_32 s2, 36(sp)
   3f9d4:	1e a3 00 88 	store_32 s24, 40(sp)
   3f9d8:	42 28 00 07 	mull_i s2, s2, 10
   3f9dc:	00 00 61 c0 	sub_i s0, s0, s2
   3f9e0:	00 08 00 0b 	shl s0, s0, 2
   3f9e4:	06 00 50 c0 	add_i s0, s6, s0
   3f9e8:	60 00 00 a8 	load_32 s3, (s0)
   3f9ec:	00 00 fc c0 	move s0, s24
   3f9f0:	20 00 fd c0 	move s1, s26
   3f9f4:	5e 70 00 a8 	load_32 s2, 28(sp)
   3f9f8:	00 03 f3 c0 	move s24, s6
   3f9fc:	b3 19 00 f8 	call 26316 <V_DrawPatch>
   3fa00:	c0 00 fc c0 	move s6, s24
   3fa04:	1e a3 00 a8 	load_32 s24, 40(sp)
   3fa08:	1e 90 00 a8 	load_32 s0, 36(sp)
   3fa0c:	5b fd ff f5 	bnz s27, -88 <WI_drawNum+0xb8>
   3fa10:	1e 60 00 a8 	load_32 s0, 24(sp)
   3fa14:	00 fc ff 12 	cmpgt_i s0, s0, -1
   3fa18:	20 01 00 f4 	bnz s0, 36 <WI_drawNum+0x140>
   3fa1c:	00 0c 00 4f 	movehi s0, 96
   3fa20:	18 e3 ff 05 	add_i s24, s24, -8
   3fa24:	40 00 00 0f 	move s2, 0
   3fa28:	00 10 28 00 	or s0, s0, 2564
   3fa2c:	60 00 00 a8 	load_32 s3, (s0)
   3fa30:	00 00 fc c0 	move s0, s24
   3fa34:	20 00 fd c0 	move s1, s26
   3fa38:	a4 19 00 f8 	call 26256 <V_DrawPatch>
   3fa3c:	00 00 fc c0 	move s0, s24
   3fa40:	fe b3 00 a8 	load_32 ra, 44(sp)
   3fa44:	7e c3 00 a8 	load_32 s27, 48(sp)
   3fa48:	5e d3 00 a8 	load_32 s26, 52(sp)
   3fa4c:	3e e3 00 a8 	load_32 s25, 56(sp)
   3fa50:	1e f3 00 a8 	load_32 s24, 60(sp)
   3fa54:	de 03 01 05 	add_i sp, sp, 64
   3fa58:	1f 00 00 f0 	ret

000000000003fa5c WI_drawPercent:
   3fa5c:	de 03 ff 05 	add_i sp, sp, -64
   3fa60:	1e f3 00 88 	store_32 s24, 60(sp)
   3fa64:	3e e3 00 88 	store_32 s25, 56(sp)
   3fa68:	5e d3 00 88 	store_32 s26, 52(sp)
   3fa6c:	7e c3 00 88 	store_32 s27, 48(sp)
   3fa70:	fe b3 00 88 	store_32 ra, 44(sp)
   3fa74:	00 03 f1 c0 	move s24, s2
   3fa78:	20 03 f0 c0 	move s25, s0
   3fa7c:	58 00 00 14 	cmplt_i s2, s24, 0
   3fa80:	a2 07 00 f4 	bnz s2, 244 <WI_drawPercent+0x118>
   3fa84:	00 0c 00 4f 	movehi s0, 96
   3fa88:	40 03 00 0f 	move s26, 0
   3fa8c:	00 20 28 00 	or s0, s0, 2568
   3fa90:	60 00 00 a8 	load_32 s3, (s0)
   3fa94:	00 80 fc c0 	move s0, s25
   3fa98:	3e 90 00 88 	store_32 s1, 36(sp)
   3fa9c:	40 00 fd c0 	move s2, s26
   3faa0:	8a 19 00 f8 	call 26152 <V_DrawPatch>
   3faa4:	00 0c 00 4f 	movehi s0, 96
   3faa8:	80 70 27 00 	or s4, s0, 2524
   3faac:	04 00 00 a8 	load_32 s0, (s4)
   3fab0:	a0 00 00 a6 	load_s16 s5, (s0)
   3fab4:	38 02 00 f2 	bz s24, 68 <WI_drawPercent+0x9c>
   3fab8:	13 64 66 4f 	movehi s0, 209715
   3fabc:	20 00 fc c0 	move s1, s24
   3fac0:	00 9c 19 00 	or s0, s0, 1639
   3fac4:	41 00 f0 c1 	mulh_i s2, s1, s0
   3fac8:	21 24 00 05 	add_i s1, s1, 9
   3facc:	5a 07 00 05 	add_i s26, s26, 1
   3fad0:	62 08 00 09 	ashr s3, s2, 2
   3fad4:	42 7c 00 0a 	shr s2, s2, 31
   3fad8:	43 00 51 c0 	add_i s2, s3, s2
   3fadc:	61 48 00 16 	cmpgt_u s3, s1, 18
   3fae0:	20 00 f1 c0 	move s1, s2
   3fae4:	03 ff ff f5 	bnz s3, -32 <WI_drawPercent+0x68>
   3fae8:	3e 90 00 a8 	load_32 s1, 36(sp)
   3faec:	18 28 1f 10 	cmpeq_i s0, s24, 1994
   3faf0:	20 04 00 f4 	bnz s0, 132 <WI_drawPercent+0x118>
   3faf4:	03 00 00 f6 	b 12 <WI_drawPercent+0xa4>
   3faf8:	40 07 00 0f 	move s26, 1
   3fafc:	3e 90 00 a8 	load_32 s1, 36(sp)
   3fb00:	13 64 66 4f 	movehi s0, 209715
   3fb04:	00 9c 19 00 	or s0, s0, 1639
   3fb08:	1e 80 00 88 	store_32 s0, 32(sp)
   3fb0c:	00 00 00 0f 	move s0, 0
   3fb10:	1e 70 00 88 	store_32 s0, 28(sp)
   3fb14:	1e 80 00 a8 	load_32 s0, 32(sp)
   3fb18:	39 83 62 c0 	sub_i s25, s25, s5
   3fb1c:	3e a3 00 88 	store_32 s25, 40(sp)
   3fb20:	5a ff ff 05 	add_i s26, s26, -1
   3fb24:	18 00 f0 c1 	mulh_i s0, s24, s0
   3fb28:	40 08 00 09 	ashr s2, s0, 2
   3fb2c:	00 7c 00 0a 	shr s0, s0, 31
   3fb30:	62 03 50 c0 	add_i s27, s2, s0
   3fb34:	1b 28 00 07 	mull_i s0, s27, 10
   3fb38:	18 00 60 c0 	sub_i s0, s24, s0
   3fb3c:	00 08 00 0b 	shl s0, s0, 2
   3fb40:	04 00 50 c0 	add_i s0, s4, s0
   3fb44:	60 00 00 a8 	load_32 s3, (s0)
   3fb48:	00 80 fc c0 	move s0, s25
   3fb4c:	5e 70 00 a8 	load_32 s2, 28(sp)
   3fb50:	00 03 f2 c0 	move s24, s4
   3fb54:	20 83 f2 c0 	move s25, s5
   3fb58:	5c 19 00 f8 	call 25968 <V_DrawPatch>
   3fb5c:	a0 80 fc c0 	move s5, s25
   3fb60:	3e a3 00 a8 	load_32 s25, 40(sp)
   3fb64:	80 00 fc c0 	move s4, s24
   3fb68:	3e 90 00 a8 	load_32 s1, 36(sp)
   3fb6c:	00 83 fd c0 	move s24, s27
   3fb70:	3a fd ff f5 	bnz s26, -92 <WI_drawPercent+0xb8>
   3fb74:	fe b3 00 a8 	load_32 ra, 44(sp)
   3fb78:	7e c3 00 a8 	load_32 s27, 48(sp)
   3fb7c:	5e d3 00 a8 	load_32 s26, 52(sp)
   3fb80:	3e e3 00 a8 	load_32 s25, 56(sp)
   3fb84:	1e f3 00 a8 	load_32 s24, 60(sp)
   3fb88:	de 03 01 05 	add_i sp, sp, 64
   3fb8c:	1f 00 00 f0 	ret

000000000003fb90 WI_drawTime:
   3fb90:	de 03 ff 05 	add_i sp, sp, -64
   3fb94:	1e f3 00 88 	store_32 s24, 60(sp)
   3fb98:	3e e3 00 88 	store_32 s25, 56(sp)
   3fb9c:	5e d3 00 88 	store_32 s26, 52(sp)
   3fba0:	7e c3 00 88 	store_32 s27, 48(sp)
   3fba4:	fe b3 00 88 	store_32 ra, 44(sp)
   3fba8:	3e 80 00 88 	store_32 s1, 32(sp)
   3fbac:	62 00 00 14 	cmplt_i s3, s2, 0
   3fbb0:	00 03 f0 c0 	move s24, s0
   3fbb4:	43 0f 00 f4 	bnz s3, 488 <WI_drawTime+0x20c>
   3fbb8:	02 3c 38 12 	cmpgt_i s0, s2, 3599
   3fbbc:	00 0e 00 f4 	bnz s0, 448 <WI_drawTime+0x1ec>
   3fbc0:	04 88 88 4f 	movehi s0, 279620
   3fbc4:	20 0c 00 4f 	movehi s1, 96
   3fbc8:	60 07 00 0f 	move s27, 1
   3fbcc:	00 24 22 00 	or s0, s0, 2185
   3fbd0:	1e 60 00 88 	store_32 s0, 24(sp)
   3fbd4:	01 70 27 00 	or s0, s1, 2524
   3fbd8:	1e 90 00 88 	store_32 s0, 36(sp)
   3fbdc:	00 00 00 0f 	move s0, 0
   3fbe0:	1e a0 00 88 	store_32 s0, 40(sp)
   3fbe4:	00 0c 00 4f 	movehi s0, 96
   3fbe8:	26 cc cc 4f 	movehi s1, 419430
   3fbec:	40 03 f1 c0 	move s26, s2
   3fbf0:	40 0c 00 4f 	movehi s2, 96
   3fbf4:	00 30 28 00 	or s0, s0, 2572
   3fbf8:	1e 50 00 88 	store_32 s0, 20(sp)
   3fbfc:	01 34 33 00 	or s0, s1, 3277
   3fc00:	1e 40 00 88 	store_32 s0, 16(sp)
   3fc04:	02 10 28 00 	or s0, s2, 2564
   3fc08:	1e 00 00 88 	store_32 s0, (sp)
   3fc0c:	5e 73 00 88 	store_32 s26, 28(sp)
   3fc10:	00 00 fd c0 	move s0, s26
   3fc14:	20 80 fd c0 	move s1, s27
   3fc18:	90 53 00 f8 	call 85568 <__divsi3>
   3fc1c:	3e 60 00 a8 	load_32 s1, 24(sp)
   3fc20:	7e 90 00 a8 	load_32 s3, 36(sp)
   3fc24:	20 80 f0 c1 	mulh_i s1, s0, s1
   3fc28:	63 00 00 a8 	load_32 s3, (s3)
   3fc2c:	21 00 50 c0 	add_i s1, s1, s0
   3fc30:	83 00 00 a6 	load_s16 s4, (s3)
   3fc34:	41 14 00 09 	ashr s2, s1, 5
   3fc38:	7e a0 00 a8 	load_32 s3, 40(sp)
   3fc3c:	21 7c 00 0a 	shr s1, s1, 31
   3fc40:	40 83 fd c0 	move s26, s27
   3fc44:	22 80 50 c0 	add_i s1, s2, s1
   3fc48:	21 f0 00 07 	mull_i s1, s1, 60
   3fc4c:	00 80 60 c0 	sub_i s0, s0, s1
   3fc50:	20 7c 00 09 	ashr s1, s0, 31
   3fc54:	40 80 50 c0 	add_i s2, s0, s1
   3fc58:	22 80 30 c0 	xor s1, s2, s1
   3fc5c:	41 28 1f 10 	cmpeq_i s2, s1, 1994
   3fc60:	c2 05 00 f4 	bnz s2, 184 <WI_drawTime+0x188>
   3fc64:	5e 40 00 a8 	load_32 s2, 16(sp)
   3fc68:	00 fc ff 12 	cmpgt_i s0, s0, -1
   3fc6c:	41 00 81 c0 	mulh_u s2, s1, s2
   3fc70:	62 0f 00 0a 	shr s27, s2, 3
   3fc74:	5b 28 00 07 	mull_i s2, s27, 10
   3fc78:	21 00 61 c0 	sub_i s1, s1, s2
   3fc7c:	5e 90 00 a8 	load_32 s2, 36(sp)
   3fc80:	1e 30 00 88 	store_32 s0, 12(sp)
   3fc84:	18 00 62 c0 	sub_i s0, s24, s4
   3fc88:	1e 20 00 88 	store_32 s0, 8(sp)
   3fc8c:	21 08 00 0b 	shl s1, s1, 2
   3fc90:	22 80 50 c0 	add_i s1, s2, s1
   3fc94:	61 00 00 a8 	load_32 s3, (s1)
   3fc98:	1e 83 00 a8 	load_32 s24, 32(sp)
   3fc9c:	20 00 fc c0 	move s1, s24
   3fca0:	3e a3 00 a8 	load_32 s25, 40(sp)
   3fca4:	40 80 fc c0 	move s2, s25
   3fca8:	9e 10 00 88 	store_32 s4, 4(sp)
   3fcac:	07 19 00 f8 	call 25628 <V_DrawPatch>
   3fcb0:	1e 40 00 a8 	load_32 s0, 16(sp)
   3fcb4:	3e 90 00 a8 	load_32 s1, 36(sp)
   3fcb8:	1b 00 80 c0 	mulh_u s0, s27, s0
   3fcbc:	00 0c 00 0a 	shr s0, s0, 3
   3fcc0:	00 28 00 07 	mull_i s0, s0, 10
   3fcc4:	1b 00 60 c0 	sub_i s0, s27, s0
   3fcc8:	00 08 00 0b 	shl s0, s0, 2
   3fccc:	01 00 50 c0 	add_i s0, s1, s0
   3fcd0:	3e 20 00 a8 	load_32 s1, 8(sp)
   3fcd4:	5e 10 00 a8 	load_32 s2, 4(sp)
   3fcd8:	60 00 00 a8 	load_32 s3, (s0)
   3fcdc:	61 03 61 c0 	sub_i s27, s1, s2
   3fce0:	00 80 fd c0 	move s0, s27
   3fce4:	20 00 fc c0 	move s1, s24
   3fce8:	40 80 fc c0 	move s2, s25
   3fcec:	f7 18 00 f8 	call 25564 <V_DrawPatch>
   3fcf0:	1e 30 00 a8 	load_32 s0, 12(sp)
   3fcf4:	00 01 00 f4 	bnz s0, 32 <WI_drawTime+0x184>
   3fcf8:	1e 00 00 a8 	load_32 s0, (sp)
   3fcfc:	7b e3 ff 05 	add_i s27, s27, -8
   3fd00:	60 00 00 a8 	load_32 s3, (s0)
   3fd04:	00 80 fd c0 	move s0, s27
   3fd08:	20 00 fc c0 	move s1, s24
   3fd0c:	40 80 fc c0 	move s2, s25
   3fd10:	ee 18 00 f8 	call 25528 <V_DrawPatch>
   3fd14:	60 80 fd c0 	move s3, s27
   3fd18:	1e 50 00 a8 	load_32 s0, 20(sp)
   3fd1c:	5a f3 00 07 	mull_i s26, s26, 60
   3fd20:	20 03 00 a8 	load_32 s25, (s0)
   3fd24:	1a f0 00 10 	cmpeq_i s0, s26, 60
   3fd28:	19 03 00 a6 	load_s16 s24, (s25)
   3fd2c:	60 03 fd c0 	move s27, s26
   3fd30:	5e 73 00 a8 	load_32 s26, 28(sp)
   3fd34:	e0 00 00 f4 	bnz s0, 28 <WI_drawTime+0x1c0>
   3fd38:	00 00 fd c0 	move s0, s26
   3fd3c:	20 80 fd c0 	move s1, s27
   3fd40:	7e 30 00 88 	store_32 s3, 12(sp)
   3fd44:	45 53 00 f8 	call 85268 <__divsi3>
   3fd48:	7e 30 00 a8 	load_32 s3, 12(sp)
   3fd4c:	80 02 00 f2 	bz s0, 80 <WI_drawTime+0x20c>
   3fd50:	03 03 6c c0 	sub_i s24, s3, s24
   3fd54:	00 00 fc c0 	move s0, s24
   3fd58:	3e 80 00 a8 	load_32 s1, 32(sp)
   3fd5c:	5e a0 00 a8 	load_32 s2, 40(sp)
   3fd60:	60 80 fc c0 	move s3, s25
   3fd64:	d9 18 00 f8 	call 25444 <V_DrawPatch>
   3fd68:	00 00 fd c0 	move s0, s26
   3fd6c:	20 80 fd c0 	move s1, s27
   3fd70:	3a 53 00 f8 	call 85224 <__divsi3>
   3fd74:	40 01 00 f2 	bz s0, 40 <WI_drawTime+0x20c>
   3fd78:	a6 ff ff f7 	b -360 <WI_drawTime+0x80>
   3fd7c:	00 0c 00 4f 	movehi s0, 96
   3fd80:	40 00 00 0f 	move s2, 0
   3fd84:	00 40 28 00 	or s0, s0, 2576
   3fd88:	60 00 00 a8 	load_32 s3, (s0)
   3fd8c:	03 00 00 a6 	load_s16 s0, (s3)
   3fd90:	3e 80 00 a8 	load_32 s1, 32(sp)
   3fd94:	18 00 60 c0 	sub_i s0, s24, s0
   3fd98:	cc 18 00 f8 	call 25392 <V_DrawPatch>
   3fd9c:	fe b3 00 a8 	load_32 ra, 44(sp)
   3fda0:	7e c3 00 a8 	load_32 s27, 48(sp)
   3fda4:	5e d3 00 a8 	load_32 s26, 52(sp)
   3fda8:	3e e3 00 a8 	load_32 s25, 56(sp)
   3fdac:	1e f3 00 a8 	load_32 s24, 60(sp)
   3fdb0:	de 03 01 05 	add_i sp, sp, 64
   3fdb4:	1f 00 00 f0 	ret

000000000003fdb8 WI_End:
   3fdb8:	de 03 ff 05 	add_i sp, sp, -64
   3fdbc:	fe f3 00 88 	store_32 ra, 60(sp)
   3fdc0:	04 00 00 f8 	call 16 <WI_unloadData>
   3fdc4:	fe f3 00 a8 	load_32 ra, 60(sp)
   3fdc8:	de 03 01 05 	add_i sp, sp, 64
   3fdcc:	1f 00 00 f0 	ret

000000000003fdd0 WI_unloadData:
   3fdd0:	de 03 fe 05 	add_i sp, sp, -128
   3fdd4:	1e f3 01 88 	store_32 s24, 124(sp)
   3fdd8:	3e e3 01 88 	store_32 s25, 120(sp)
   3fddc:	5e d3 01 88 	store_32 s26, 116(sp)
   3fde0:	7e c3 01 88 	store_32 s27, 112(sp)
   3fde4:	fe b3 01 88 	store_32 ra, 108(sp)
   3fde8:	00 0c 00 4f 	movehi s0, 96
   3fdec:	4a 1c 00 4f 	movehi s2, 234
   3fdf0:	00 13 28 00 	or s24, s0, 2564
   3fdf4:	42 44 28 00 	or s2, s2, 2577
   3fdf8:	18 00 00 a8 	load_32 s0, (s24)
   3fdfc:	20 d0 ff a9 	load_32 s1, -12(s0)
   3fe00:	5e a0 01 88 	store_32 s2, 104(sp)
   3fe04:	21 00 01 c1 	cmpeq_i s1, s1, s2
   3fe08:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x58>
   3fe0c:	00 00 00 4f 	movehi s0, 0
   3fe10:	20 d0 1a 0f 	move s1, 1716
   3fe14:	3e 10 00 88 	store_32 s1, 4(sp)
   3fe18:	00 14 7e 00 	or s0, s0, 8069
   3fe1c:	1e 00 00 88 	store_32 s0, (sp)
   3fe20:	b9 38 ff f9 	call -204060 <I_Error>
   3fe24:	18 00 00 a8 	load_32 s0, (s24)
   3fe28:	20 94 01 0f 	move s1, 101
   3fe2c:	c5 34 00 f8 	call 54036 <Z_ChangeTag2>
   3fe30:	00 0c 00 4f 	movehi s0, 96
   3fe34:	00 73 27 00 	or s24, s0, 2524
   3fe38:	18 00 00 a8 	load_32 s0, (s24)
   3fe3c:	20 d0 ff a9 	load_32 s1, -12(s0)
   3fe40:	5e a0 01 a8 	load_32 s2, 104(sp)
   3fe44:	21 00 01 c1 	cmpeq_i s1, s1, s2
   3fe48:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x98>
   3fe4c:	00 00 00 4f 	movehi s0, 0
   3fe50:	20 dc 1a 0f 	move s1, 1719
   3fe54:	3e 10 00 88 	store_32 s1, 4(sp)
   3fe58:	00 14 7e 00 	or s0, s0, 8069
   3fe5c:	1e 00 00 88 	store_32 s0, (sp)
   3fe60:	a9 38 ff f9 	call -204124 <I_Error>
   3fe64:	18 00 00 a8 	load_32 s0, (s24)
   3fe68:	20 94 01 0f 	move s1, 101
   3fe6c:	b5 34 00 f8 	call 53972 <Z_ChangeTag2>
   3fe70:	18 10 00 a8 	load_32 s0, 4(s24)
   3fe74:	20 d0 ff a9 	load_32 s1, -12(s0)
   3fe78:	5e a0 01 a8 	load_32 s2, 104(sp)
   3fe7c:	21 00 01 c1 	cmpeq_i s1, s1, s2
   3fe80:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0xd0>
   3fe84:	00 00 00 4f 	movehi s0, 0
   3fe88:	20 dc 1a 0f 	move s1, 1719
   3fe8c:	3e 10 00 88 	store_32 s1, 4(sp)
   3fe90:	00 14 7e 00 	or s0, s0, 8069
   3fe94:	1e 00 00 88 	store_32 s0, (sp)
   3fe98:	9b 38 ff f9 	call -204180 <I_Error>
   3fe9c:	18 10 00 a8 	load_32 s0, 4(s24)
   3fea0:	20 94 01 0f 	move s1, 101
   3fea4:	a7 34 00 f8 	call 53916 <Z_ChangeTag2>
   3fea8:	18 20 00 a8 	load_32 s0, 8(s24)
   3feac:	20 d0 ff a9 	load_32 s1, -12(s0)
   3feb0:	5e a0 01 a8 	load_32 s2, 104(sp)
   3feb4:	21 00 01 c1 	cmpeq_i s1, s1, s2
   3feb8:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x108>
   3febc:	00 00 00 4f 	movehi s0, 0
   3fec0:	20 dc 1a 0f 	move s1, 1719
   3fec4:	3e 10 00 88 	store_32 s1, 4(sp)
   3fec8:	00 14 7e 00 	or s0, s0, 8069
   3fecc:	1e 00 00 88 	store_32 s0, (sp)
   3fed0:	8d 38 ff f9 	call -204236 <I_Error>
   3fed4:	18 20 00 a8 	load_32 s0, 8(s24)
   3fed8:	20 94 01 0f 	move s1, 101
   3fedc:	99 34 00 f8 	call 53860 <Z_ChangeTag2>
   3fee0:	18 30 00 a8 	load_32 s0, 12(s24)
   3fee4:	20 d0 ff a9 	load_32 s1, -12(s0)
   3fee8:	5e a0 01 a8 	load_32 s2, 104(sp)
   3feec:	21 00 01 c1 	cmpeq_i s1, s1, s2
   3fef0:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x140>
   3fef4:	00 00 00 4f 	movehi s0, 0
   3fef8:	20 dc 1a 0f 	move s1, 1719
   3fefc:	3e 10 00 88 	store_32 s1, 4(sp)
   3ff00:	00 14 7e 00 	or s0, s0, 8069
   3ff04:	1e 00 00 88 	store_32 s0, (sp)
   3ff08:	7f 38 ff f9 	call -204292 <I_Error>
   3ff0c:	18 30 00 a8 	load_32 s0, 12(s24)
   3ff10:	20 94 01 0f 	move s1, 101
   3ff14:	8b 34 00 f8 	call 53804 <Z_ChangeTag2>
   3ff18:	18 40 00 a8 	load_32 s0, 16(s24)
   3ff1c:	20 d0 ff a9 	load_32 s1, -12(s0)
   3ff20:	5e a0 01 a8 	load_32 s2, 104(sp)
   3ff24:	21 00 01 c1 	cmpeq_i s1, s1, s2
   3ff28:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x178>
   3ff2c:	00 00 00 4f 	movehi s0, 0
   3ff30:	20 dc 1a 0f 	move s1, 1719
   3ff34:	3e 10 00 88 	store_32 s1, 4(sp)
   3ff38:	00 14 7e 00 	or s0, s0, 8069
   3ff3c:	1e 00 00 88 	store_32 s0, (sp)
   3ff40:	71 38 ff f9 	call -204348 <I_Error>
   3ff44:	18 40 00 a8 	load_32 s0, 16(s24)
   3ff48:	20 94 01 0f 	move s1, 101
   3ff4c:	7d 34 00 f8 	call 53748 <Z_ChangeTag2>
   3ff50:	18 50 00 a8 	load_32 s0, 20(s24)
   3ff54:	20 d0 ff a9 	load_32 s1, -12(s0)
   3ff58:	5e a0 01 a8 	load_32 s2, 104(sp)
   3ff5c:	21 00 01 c1 	cmpeq_i s1, s1, s2
   3ff60:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x1b0>
   3ff64:	00 00 00 4f 	movehi s0, 0
   3ff68:	20 dc 1a 0f 	move s1, 1719
   3ff6c:	3e 10 00 88 	store_32 s1, 4(sp)
   3ff70:	00 14 7e 00 	or s0, s0, 8069
   3ff74:	1e 00 00 88 	store_32 s0, (sp)
   3ff78:	63 38 ff f9 	call -204404 <I_Error>
   3ff7c:	18 50 00 a8 	load_32 s0, 20(s24)
   3ff80:	20 94 01 0f 	move s1, 101
   3ff84:	6f 34 00 f8 	call 53692 <Z_ChangeTag2>
   3ff88:	18 60 00 a8 	load_32 s0, 24(s24)
   3ff8c:	20 d0 ff a9 	load_32 s1, -12(s0)
   3ff90:	5e a0 01 a8 	load_32 s2, 104(sp)
   3ff94:	21 00 01 c1 	cmpeq_i s1, s1, s2
   3ff98:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x1e8>
   3ff9c:	00 00 00 4f 	movehi s0, 0
   3ffa0:	20 dc 1a 0f 	move s1, 1719
   3ffa4:	3e 10 00 88 	store_32 s1, 4(sp)
   3ffa8:	00 14 7e 00 	or s0, s0, 8069
   3ffac:	1e 00 00 88 	store_32 s0, (sp)
   3ffb0:	55 38 ff f9 	call -204460 <I_Error>
   3ffb4:	18 60 00 a8 	load_32 s0, 24(s24)
   3ffb8:	20 94 01 0f 	move s1, 101
   3ffbc:	61 34 00 f8 	call 53636 <Z_ChangeTag2>
   3ffc0:	18 70 00 a8 	load_32 s0, 28(s24)
   3ffc4:	20 d0 ff a9 	load_32 s1, -12(s0)
   3ffc8:	5e a0 01 a8 	load_32 s2, 104(sp)
   3ffcc:	21 00 01 c1 	cmpeq_i s1, s1, s2
   3ffd0:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x220>
   3ffd4:	00 00 00 4f 	movehi s0, 0
   3ffd8:	20 dc 1a 0f 	move s1, 1719
   3ffdc:	3e 10 00 88 	store_32 s1, 4(sp)
   3ffe0:	00 14 7e 00 	or s0, s0, 8069
   3ffe4:	1e 00 00 88 	store_32 s0, (sp)
   3ffe8:	47 38 ff f9 	call -204516 <I_Error>
   3ffec:	18 70 00 a8 	load_32 s0, 28(s24)
   3fff0:	20 94 01 0f 	move s1, 101
   3fff4:	53 34 00 f8 	call 53580 <Z_ChangeTag2>
   3fff8:	18 80 00 a8 	load_32 s0, 32(s24)
   3fffc:	20 d0 ff a9 	load_32 s1, -12(s0)
   40000:	5e a0 01 a8 	load_32 s2, 104(sp)
   40004:	21 00 01 c1 	cmpeq_i s1, s1, s2
   40008:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x258>
   4000c:	00 00 00 4f 	movehi s0, 0
   40010:	20 dc 1a 0f 	move s1, 1719
   40014:	3e 10 00 88 	store_32 s1, 4(sp)
   40018:	00 14 7e 00 	or s0, s0, 8069
   4001c:	1e 00 00 88 	store_32 s0, (sp)
   40020:	39 38 ff f9 	call -204572 <I_Error>
   40024:	18 80 00 a8 	load_32 s0, 32(s24)
   40028:	20 94 01 0f 	move s1, 101
   4002c:	45 34 00 f8 	call 53524 <Z_ChangeTag2>
   40030:	18 90 00 a8 	load_32 s0, 36(s24)
   40034:	20 d0 ff a9 	load_32 s1, -12(s0)
   40038:	5e a0 01 a8 	load_32 s2, 104(sp)
   4003c:	21 00 01 c1 	cmpeq_i s1, s1, s2
   40040:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x290>
   40044:	00 00 00 4f 	movehi s0, 0
   40048:	20 dc 1a 0f 	move s1, 1719
   4004c:	3e 10 00 88 	store_32 s1, 4(sp)
   40050:	00 14 7e 00 	or s0, s0, 8069
   40054:	1e 00 00 88 	store_32 s0, (sp)
   40058:	2b 38 ff f9 	call -204628 <I_Error>
   4005c:	18 90 00 a8 	load_32 s0, 36(s24)
   40060:	20 94 01 0f 	move s1, 101
   40064:	37 34 00 f8 	call 53468 <Z_ChangeTag2>
   40068:	0b 04 00 4f 	movehi s0, 43
   4006c:	00 00 40 00 	or s0, s0, 4096
   40070:	00 00 00 a8 	load_32 s0, (s0)
   40074:	00 08 00 10 	cmpeq_i s0, s0, 2
   40078:	40 00 00 f4 	bnz s0, 8 <WI_unloadData+0x2b0>
   4007c:	2f 00 00 f6 	b 188 <WI_unloadData+0x368>
   40080:	00 0c 00 4f 	movehi s0, 96
   40084:	00 90 2c 00 	or s0, s0, 2852
   40088:	1e 90 01 88 	store_32 s0, 100(sp)
   4008c:	00 00 00 a0 	load_u8 s0, (s0)
   40090:	00 04 00 11 	cmpne_i s0, s0, 1
   40094:	00 27 00 f4 	bnz s0, 1248 <WI_unloadData+0x7a4>
   40098:	00 0c 00 4f 	movehi s0, 96
   4009c:	20 03 00 0f 	move s25, 0
   400a0:	40 83 00 0f 	move s26, 32
   400a4:	60 13 27 00 	or s27, s0, 2500
   400a8:	00 94 01 0f 	move s0, 101
   400ac:	1e 80 01 88 	store_32 s0, 96(sp)
   400b0:	00 00 00 4f 	movehi s0, 0
   400b4:	20 f0 1a 0f 	move s1, 1724
   400b8:	3e 60 01 88 	store_32 s1, 88(sp)
   400bc:	00 14 7e 00 	or s0, s0, 8069
   400c0:	1e 50 01 88 	store_32 s0, 84(sp)
   400c4:	3e 73 01 88 	store_32 s25, 92(sp)
   400c8:	1b 00 00 a8 	load_32 s0, (s27)
   400cc:	19 0b 00 0b 	shl s24, s25, 2
   400d0:	00 00 5c c0 	add_i s0, s0, s24
   400d4:	00 00 00 a8 	load_32 s0, (s0)
   400d8:	20 d0 ff a9 	load_32 s1, -12(s0)
   400dc:	5e a0 01 a8 	load_32 s2, 104(sp)
   400e0:	21 00 01 c1 	cmpeq_i s1, s1, s2
   400e4:	21 01 00 f4 	bnz s1, 36 <WI_unloadData+0x338>
   400e8:	1e 60 01 a8 	load_32 s0, 88(sp)
   400ec:	1e 10 00 88 	store_32 s0, 4(sp)
   400f0:	1e 50 01 a8 	load_32 s0, 84(sp)
   400f4:	1e 00 00 88 	store_32 s0, (sp)
   400f8:	03 38 ff f9 	call -204788 <I_Error>
   400fc:	1b 00 00 a8 	load_32 s0, (s27)
   40100:	00 00 5c c0 	add_i s0, s0, s24
   40104:	00 00 00 a8 	load_32 s0, (s0)
   40108:	3e 80 01 a8 	load_32 s1, 96(sp)
   4010c:	0d 34 00 f8 	call 53300 <Z_ChangeTag2>
   40110:	1e 90 01 a8 	load_32 s0, 100(sp)
   40114:	39 07 00 05 	add_i s25, s25, 1
   40118:	00 00 00 a0 	load_u8 s0, (s0)
   4011c:	20 00 00 11 	cmpne_i s1, s0, 0
   40120:	00 00 fd c0 	move s0, s26
   40124:	41 00 00 f4 	bnz s1, 8 <WI_unloadData+0x35c>
   40128:	1e 70 01 a8 	load_32 s0, 92(sp)
   4012c:	19 00 80 c1 	cmplt_u s0, s25, s0
   40130:	c0 fc ff f5 	bnz s0, -104 <WI_unloadData+0x2f8>
   40134:	10 01 00 f6 	b 1088 <WI_unloadData+0x7a4>
   40138:	00 0c 00 4f 	movehi s0, 96
   4013c:	00 93 28 00 	or s24, s0, 2596
   40140:	18 00 00 a8 	load_32 s0, (s24)
   40144:	20 d0 ff a9 	load_32 s1, -12(s0)
   40148:	5e a0 01 a8 	load_32 s2, 104(sp)
   4014c:	21 00 01 c1 	cmpeq_i s1, s1, s2
   40150:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x3a0>
   40154:	00 00 00 4f 	movehi s0, 0
   40158:	20 00 1b 0f 	move s1, 1728
   4015c:	3e 10 00 88 	store_32 s1, 4(sp)
   40160:	00 14 7e 00 	or s0, s0, 8069
   40164:	1e 00 00 88 	store_32 s0, (sp)
   40168:	e7 37 ff f9 	call -204900 <I_Error>
   4016c:	18 00 00 a8 	load_32 s0, (s24)
   40170:	20 94 01 0f 	move s1, 101
   40174:	f3 33 00 f8 	call 53196 <Z_ChangeTag2>
   40178:	18 10 00 a8 	load_32 s0, 4(s24)
   4017c:	20 d0 ff a9 	load_32 s1, -12(s0)
   40180:	5e a0 01 a8 	load_32 s2, 104(sp)
   40184:	21 00 01 c1 	cmpeq_i s1, s1, s2
   40188:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x3d8>
   4018c:	00 00 00 4f 	movehi s0, 0
   40190:	20 04 1b 0f 	move s1, 1729
   40194:	3e 10 00 88 	store_32 s1, 4(sp)
   40198:	00 14 7e 00 	or s0, s0, 8069
   4019c:	1e 00 00 88 	store_32 s0, (sp)
   401a0:	d9 37 ff f9 	call -204956 <I_Error>
   401a4:	18 10 00 a8 	load_32 s0, 4(s24)
   401a8:	20 94 01 0f 	move s1, 101
   401ac:	e5 33 00 f8 	call 53140 <Z_ChangeTag2>
   401b0:	00 0c 00 4f 	movehi s0, 96
   401b4:	00 83 28 00 	or s24, s0, 2592
   401b8:	18 00 00 a8 	load_32 s0, (s24)
   401bc:	20 d0 ff a9 	load_32 s1, -12(s0)
   401c0:	5e a0 01 a8 	load_32 s2, 104(sp)
   401c4:	21 00 01 c1 	cmpeq_i s1, s1, s2
   401c8:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x418>
   401cc:	00 00 00 4f 	movehi s0, 0
   401d0:	20 0c 1b 0f 	move s1, 1731
   401d4:	3e 10 00 88 	store_32 s1, 4(sp)
   401d8:	00 14 7e 00 	or s0, s0, 8069
   401dc:	1e 00 00 88 	store_32 s0, (sp)
   401e0:	c9 37 ff f9 	call -205020 <I_Error>
   401e4:	18 00 00 a8 	load_32 s0, (s24)
   401e8:	20 94 01 0f 	move s1, 101
   401ec:	d5 33 00 f8 	call 53076 <Z_ChangeTag2>
   401f0:	00 0c 00 4f 	movehi s0, 96
   401f4:	00 13 27 00 	or s24, s0, 2500
   401f8:	18 00 00 a8 	load_32 s0, (s24)
   401fc:	00 00 00 a8 	load_32 s0, (s0)
   40200:	20 d0 ff a9 	load_32 s1, -12(s0)
   40204:	5e a0 01 a8 	load_32 s2, 104(sp)
   40208:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4020c:	21 01 00 f4 	bnz s1, 36 <WI_unloadData+0x460>
   40210:	00 00 00 4f 	movehi s0, 0
   40214:	20 18 1b 0f 	move s1, 1734
   40218:	3e 10 00 88 	store_32 s1, 4(sp)
   4021c:	00 14 7e 00 	or s0, s0, 8069
   40220:	1e 00 00 88 	store_32 s0, (sp)
   40224:	b8 37 ff f9 	call -205088 <I_Error>
   40228:	18 00 00 a8 	load_32 s0, (s24)
   4022c:	00 00 00 a8 	load_32 s0, (s0)
   40230:	20 94 01 0f 	move s1, 101
   40234:	c3 33 00 f8 	call 53004 <Z_ChangeTag2>
   40238:	18 00 00 a8 	load_32 s0, (s24)
   4023c:	00 10 00 a8 	load_32 s0, 4(s0)
   40240:	20 d0 ff a9 	load_32 s1, -12(s0)
   40244:	5e a0 01 a8 	load_32 s2, 104(sp)
   40248:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4024c:	21 01 00 f4 	bnz s1, 36 <WI_unloadData+0x4a0>
   40250:	00 00 00 4f 	movehi s0, 0
   40254:	20 18 1b 0f 	move s1, 1734
   40258:	3e 10 00 88 	store_32 s1, 4(sp)
   4025c:	00 14 7e 00 	or s0, s0, 8069
   40260:	1e 00 00 88 	store_32 s0, (sp)
   40264:	a8 37 ff f9 	call -205152 <I_Error>
   40268:	18 00 00 a8 	load_32 s0, (s24)
   4026c:	00 10 00 a8 	load_32 s0, 4(s0)
   40270:	20 94 01 0f 	move s1, 101
   40274:	b3 33 00 f8 	call 52940 <Z_ChangeTag2>
   40278:	18 00 00 a8 	load_32 s0, (s24)
   4027c:	00 20 00 a8 	load_32 s0, 8(s0)
   40280:	20 d0 ff a9 	load_32 s1, -12(s0)
   40284:	5e a0 01 a8 	load_32 s2, 104(sp)
   40288:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4028c:	21 01 00 f4 	bnz s1, 36 <WI_unloadData+0x4e0>
   40290:	00 00 00 4f 	movehi s0, 0
   40294:	20 18 1b 0f 	move s1, 1734
   40298:	3e 10 00 88 	store_32 s1, 4(sp)
   4029c:	00 14 7e 00 	or s0, s0, 8069
   402a0:	1e 00 00 88 	store_32 s0, (sp)
   402a4:	98 37 ff f9 	call -205216 <I_Error>
   402a8:	18 00 00 a8 	load_32 s0, (s24)
   402ac:	00 20 00 a8 	load_32 s0, 8(s0)
   402b0:	20 94 01 0f 	move s1, 101
   402b4:	a3 33 00 f8 	call 52876 <Z_ChangeTag2>
   402b8:	18 00 00 a8 	load_32 s0, (s24)
   402bc:	00 30 00 a8 	load_32 s0, 12(s0)
   402c0:	20 d0 ff a9 	load_32 s1, -12(s0)
   402c4:	5e a0 01 a8 	load_32 s2, 104(sp)
   402c8:	21 00 01 c1 	cmpeq_i s1, s1, s2
   402cc:	21 01 00 f4 	bnz s1, 36 <WI_unloadData+0x520>
   402d0:	00 00 00 4f 	movehi s0, 0
   402d4:	20 18 1b 0f 	move s1, 1734
   402d8:	3e 10 00 88 	store_32 s1, 4(sp)
   402dc:	00 14 7e 00 	or s0, s0, 8069
   402e0:	1e 00 00 88 	store_32 s0, (sp)
   402e4:	88 37 ff f9 	call -205280 <I_Error>
   402e8:	18 00 00 a8 	load_32 s0, (s24)
   402ec:	00 30 00 a8 	load_32 s0, 12(s0)
   402f0:	20 94 01 0f 	move s1, 101
   402f4:	93 33 00 f8 	call 52812 <Z_ChangeTag2>
   402f8:	18 00 00 a8 	load_32 s0, (s24)
   402fc:	00 40 00 a8 	load_32 s0, 16(s0)
   40300:	20 d0 ff a9 	load_32 s1, -12(s0)
   40304:	5e a0 01 a8 	load_32 s2, 104(sp)
   40308:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4030c:	21 01 00 f4 	bnz s1, 36 <WI_unloadData+0x560>
   40310:	00 00 00 4f 	movehi s0, 0
   40314:	20 18 1b 0f 	move s1, 1734
   40318:	3e 10 00 88 	store_32 s1, 4(sp)
   4031c:	00 14 7e 00 	or s0, s0, 8069
   40320:	1e 00 00 88 	store_32 s0, (sp)
   40324:	78 37 ff f9 	call -205344 <I_Error>
   40328:	18 00 00 a8 	load_32 s0, (s24)
   4032c:	00 40 00 a8 	load_32 s0, 16(s0)
   40330:	20 94 01 0f 	move s1, 101
   40334:	83 33 00 f8 	call 52748 <Z_ChangeTag2>
   40338:	18 00 00 a8 	load_32 s0, (s24)
   4033c:	00 50 00 a8 	load_32 s0, 20(s0)
   40340:	20 d0 ff a9 	load_32 s1, -12(s0)
   40344:	5e a0 01 a8 	load_32 s2, 104(sp)
   40348:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4034c:	21 01 00 f4 	bnz s1, 36 <WI_unloadData+0x5a0>
   40350:	00 00 00 4f 	movehi s0, 0
   40354:	20 18 1b 0f 	move s1, 1734
   40358:	3e 10 00 88 	store_32 s1, 4(sp)
   4035c:	00 14 7e 00 	or s0, s0, 8069
   40360:	1e 00 00 88 	store_32 s0, (sp)
   40364:	68 37 ff f9 	call -205408 <I_Error>
   40368:	18 00 00 a8 	load_32 s0, (s24)
   4036c:	00 50 00 a8 	load_32 s0, 20(s0)
   40370:	20 94 01 0f 	move s1, 101
   40374:	73 33 00 f8 	call 52684 <Z_ChangeTag2>
   40378:	18 00 00 a8 	load_32 s0, (s24)
   4037c:	00 60 00 a8 	load_32 s0, 24(s0)
   40380:	20 d0 ff a9 	load_32 s1, -12(s0)
   40384:	5e a0 01 a8 	load_32 s2, 104(sp)
   40388:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4038c:	21 01 00 f4 	bnz s1, 36 <WI_unloadData+0x5e0>
   40390:	00 00 00 4f 	movehi s0, 0
   40394:	20 18 1b 0f 	move s1, 1734
   40398:	3e 10 00 88 	store_32 s1, 4(sp)
   4039c:	00 14 7e 00 	or s0, s0, 8069
   403a0:	1e 00 00 88 	store_32 s0, (sp)
   403a4:	58 37 ff f9 	call -205472 <I_Error>
   403a8:	18 00 00 a8 	load_32 s0, (s24)
   403ac:	00 60 00 a8 	load_32 s0, 24(s0)
   403b0:	20 94 01 0f 	move s1, 101
   403b4:	63 33 00 f8 	call 52620 <Z_ChangeTag2>
   403b8:	18 00 00 a8 	load_32 s0, (s24)
   403bc:	00 70 00 a8 	load_32 s0, 28(s0)
   403c0:	20 d0 ff a9 	load_32 s1, -12(s0)
   403c4:	5e a0 01 a8 	load_32 s2, 104(sp)
   403c8:	21 00 01 c1 	cmpeq_i s1, s1, s2
   403cc:	21 01 00 f4 	bnz s1, 36 <WI_unloadData+0x620>
   403d0:	00 00 00 4f 	movehi s0, 0
   403d4:	20 18 1b 0f 	move s1, 1734
   403d8:	3e 10 00 88 	store_32 s1, 4(sp)
   403dc:	00 14 7e 00 	or s0, s0, 8069
   403e0:	1e 00 00 88 	store_32 s0, (sp)
   403e4:	48 37 ff f9 	call -205536 <I_Error>
   403e8:	18 00 00 a8 	load_32 s0, (s24)
   403ec:	00 70 00 a8 	load_32 s0, 28(s0)
   403f0:	20 94 01 0f 	move s1, 101
   403f4:	53 33 00 f8 	call 52556 <Z_ChangeTag2>
   403f8:	18 00 00 a8 	load_32 s0, (s24)
   403fc:	00 80 00 a8 	load_32 s0, 32(s0)
   40400:	20 d0 ff a9 	load_32 s1, -12(s0)
   40404:	5e a0 01 a8 	load_32 s2, 104(sp)
   40408:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4040c:	21 01 00 f4 	bnz s1, 36 <WI_unloadData+0x660>
   40410:	00 00 00 4f 	movehi s0, 0
   40414:	20 18 1b 0f 	move s1, 1734
   40418:	3e 10 00 88 	store_32 s1, 4(sp)
   4041c:	00 14 7e 00 	or s0, s0, 8069
   40420:	1e 00 00 88 	store_32 s0, (sp)
   40424:	38 37 ff f9 	call -205600 <I_Error>
   40428:	18 00 00 a8 	load_32 s0, (s24)
   4042c:	00 80 00 a8 	load_32 s0, 32(s0)
   40430:	20 94 01 0f 	move s1, 101
   40434:	43 33 00 f8 	call 52492 <Z_ChangeTag2>
   40438:	00 0c 00 4f 	movehi s0, 96
   4043c:	00 20 27 00 	or s0, s0, 2504
   40440:	1e 90 01 88 	store_32 s0, 100(sp)
   40444:	00 00 00 a8 	load_32 s0, (s0)
   40448:	20 00 00 a8 	load_32 s1, (s0)
   4044c:	41 08 00 12 	cmpgt_i s2, s1, 2
   40450:	22 09 00 f4 	bnz s2, 292 <WI_unloadData+0x7a4>
   40454:	43 00 00 4f 	movehi s2, 3
   40458:	80 00 00 0f 	move s4, 0
   4045c:	63 00 00 4f 	movehi s3, 3
   40460:	62 53 5e 00 	or s27, s2, 6036
   40464:	40 94 01 0f 	move s2, 101
   40468:	5e 80 01 88 	store_32 s2, 96(sp)
   4046c:	40 00 00 4f 	movehi s2, 0
   40470:	a0 38 1b 0f 	move s5, 1742
   40474:	be 70 01 88 	store_32 s5, 92(sp)
   40478:	42 14 7e 00 	or s2, s2, 8069
   4047c:	5e 60 01 88 	store_32 s2, 88(sp)
   40480:	43 90 5e 00 	or s2, s3, 6052
   40484:	5e 40 01 88 	store_32 s2, 80(sp)
   40488:	9e 30 01 88 	store_32 s4, 76(sp)
   4048c:	44 20 00 11 	cmpne_i s2, s4, 8
   40490:	9e 50 01 88 	store_32 s4, 84(sp)
   40494:	62 00 00 f4 	bnz s2, 12 <WI_unloadData+0x6d0>
   40498:	41 04 00 10 	cmpeq_i s2, s1, 1
   4049c:	a2 05 00 f4 	bnz s2, 180 <WI_unloadData+0x780>
   404a0:	21 08 00 0b 	shl s1, s1, 2
   404a4:	3b 80 50 c0 	add_i s1, s27, s1
   404a8:	24 e3 00 07 	mull_i s25, s4, 56
   404ac:	21 00 00 a8 	load_32 s1, (s1)
   404b0:	41 80 5c c0 	add_i s2, s1, s25
   404b4:	42 20 00 a8 	load_32 s2, 8(s2)
   404b8:	42 04 00 14 	cmplt_i s2, s2, 1
   404bc:	a2 04 00 f4 	bnz s2, 148 <WI_unloadData+0x780>
   404c0:	1e 33 01 a8 	load_32 s24, 76(sp)
   404c4:	21 80 5c c0 	add_i s1, s1, s25
   404c8:	58 0b 00 0b 	shl s26, s24, 2
   404cc:	21 00 5d c0 	add_i s1, s1, s26
   404d0:	21 70 00 a8 	load_32 s1, 28(s1)
   404d4:	21 d0 ff a9 	load_32 s1, -12(s1)
   404d8:	5e a0 01 a8 	load_32 s2, 104(sp)
   404dc:	21 00 01 c1 	cmpeq_i s1, s1, s2
   404e0:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x730>
   404e4:	1e 70 01 a8 	load_32 s0, 92(sp)
   404e8:	1e 10 00 88 	store_32 s0, 4(sp)
   404ec:	1e 60 01 a8 	load_32 s0, 88(sp)
   404f0:	1e 00 00 88 	store_32 s0, (sp)
   404f4:	04 37 ff f9 	call -205808 <I_Error>
   404f8:	1e 90 01 a8 	load_32 s0, 100(sp)
   404fc:	00 00 00 a8 	load_32 s0, (s0)
   40500:	00 00 00 a8 	load_32 s0, (s0)
   40504:	00 08 00 0b 	shl s0, s0, 2
   40508:	1b 00 50 c0 	add_i s0, s27, s0
   4050c:	00 00 00 a8 	load_32 s0, (s0)
   40510:	00 80 5c c0 	add_i s0, s0, s25
   40514:	00 00 5d c0 	add_i s0, s0, s26
   40518:	00 70 00 a8 	load_32 s0, 28(s0)
   4051c:	3e 80 01 a8 	load_32 s1, 96(sp)
   40520:	08 33 00 f8 	call 52256 <Z_ChangeTag2>
   40524:	1e 90 01 a8 	load_32 s0, 100(sp)
   40528:	18 07 00 05 	add_i s24, s24, 1
   4052c:	00 00 00 a8 	load_32 s0, (s0)
   40530:	20 00 00 a8 	load_32 s1, (s0)
   40534:	21 08 00 0b 	shl s1, s1, 2
   40538:	3b 80 50 c0 	add_i s1, s27, s1
   4053c:	21 00 00 a8 	load_32 s1, (s1)
   40540:	41 80 5c c0 	add_i s2, s1, s25
   40544:	42 20 00 a8 	load_32 s2, 8(s2)
   40548:	58 00 41 c1 	cmplt_i s2, s24, s2
   4054c:	c2 fb ff f5 	bnz s2, -136 <WI_unloadData+0x6f4>
   40550:	20 00 00 a8 	load_32 s1, (s0)
   40554:	7e 40 01 a8 	load_32 s3, 80(sp)
   40558:	41 08 00 0b 	shl s2, s1, 2
   4055c:	43 00 51 c0 	add_i s2, s3, s2
   40560:	42 00 00 a8 	load_32 s2, (s2)
   40564:	9e 50 01 a8 	load_32 s4, 84(sp)
   40568:	84 04 00 05 	add_i s4, s4, 1
   4056c:	44 00 41 c1 	cmplt_i s2, s4, s2
   40570:	e2 f8 ff f5 	bnz s2, -228 <WI_unloadData+0x6bc>
   40574:	00 0c 00 4f 	movehi s0, 96
   40578:	00 10 27 00 	or s0, s0, 2500
   4057c:	00 00 00 a8 	load_32 s0, (s0)
   40580:	8d 30 00 f8 	call 49716 <Z_Free>
   40584:	00 0c 00 4f 	movehi s0, 96
   40588:	00 23 28 00 	or s24, s0, 2568
   4058c:	18 00 00 a8 	load_32 s0, (s24)
   40590:	20 d0 ff a9 	load_32 s1, -12(s0)
   40594:	5e a0 01 a8 	load_32 s2, 104(sp)
   40598:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4059c:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x7ec>
   405a0:	00 00 00 4f 	movehi s0, 0
   405a4:	20 54 1b 0f 	move s1, 1749
   405a8:	3e 10 00 88 	store_32 s1, 4(sp)
   405ac:	00 14 7e 00 	or s0, s0, 8069
   405b0:	1e 00 00 88 	store_32 s0, (sp)
   405b4:	d4 36 ff f9 	call -206000 <I_Error>
   405b8:	18 00 00 a8 	load_32 s0, (s24)
   405bc:	20 94 01 0f 	move s1, 101
   405c0:	e0 32 00 f8 	call 52096 <Z_ChangeTag2>
   405c4:	00 0c 00 4f 	movehi s0, 96
   405c8:	00 33 28 00 	or s24, s0, 2572
   405cc:	18 00 00 a8 	load_32 s0, (s24)
   405d0:	20 d0 ff a9 	load_32 s1, -12(s0)
   405d4:	5e a0 01 a8 	load_32 s2, 104(sp)
   405d8:	21 00 01 c1 	cmpeq_i s1, s1, s2
   405dc:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x82c>
   405e0:	00 00 00 4f 	movehi s0, 0
   405e4:	20 58 1b 0f 	move s1, 1750
   405e8:	3e 10 00 88 	store_32 s1, 4(sp)
   405ec:	00 14 7e 00 	or s0, s0, 8069
   405f0:	1e 00 00 88 	store_32 s0, (sp)
   405f4:	c4 36 ff f9 	call -206064 <I_Error>
   405f8:	18 00 00 a8 	load_32 s0, (s24)
   405fc:	20 94 01 0f 	move s1, 101
   40600:	d0 32 00 f8 	call 52032 <Z_ChangeTag2>
   40604:	00 0c 00 4f 	movehi s0, 96
   40608:	00 33 27 00 	or s24, s0, 2508
   4060c:	18 00 00 a8 	load_32 s0, (s24)
   40610:	20 d0 ff a9 	load_32 s1, -12(s0)
   40614:	5e a0 01 a8 	load_32 s2, 104(sp)
   40618:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4061c:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x86c>
   40620:	00 00 00 4f 	movehi s0, 0
   40624:	20 5c 1b 0f 	move s1, 1751
   40628:	3e 10 00 88 	store_32 s1, 4(sp)
   4062c:	00 14 7e 00 	or s0, s0, 8069
   40630:	1e 00 00 88 	store_32 s0, (sp)
   40634:	b4 36 ff f9 	call -206128 <I_Error>
   40638:	18 00 00 a8 	load_32 s0, (s24)
   4063c:	20 94 01 0f 	move s1, 101
   40640:	c0 32 00 f8 	call 51968 <Z_ChangeTag2>
   40644:	00 0c 00 4f 	movehi s0, 96
   40648:	00 43 27 00 	or s24, s0, 2512
   4064c:	18 00 00 a8 	load_32 s0, (s24)
   40650:	20 d0 ff a9 	load_32 s1, -12(s0)
   40654:	5e a0 01 a8 	load_32 s2, 104(sp)
   40658:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4065c:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x8ac>
   40660:	00 00 00 4f 	movehi s0, 0
   40664:	20 60 1b 0f 	move s1, 1752
   40668:	3e 10 00 88 	store_32 s1, 4(sp)
   4066c:	00 14 7e 00 	or s0, s0, 8069
   40670:	1e 00 00 88 	store_32 s0, (sp)
   40674:	a4 36 ff f9 	call -206192 <I_Error>
   40678:	18 00 00 a8 	load_32 s0, (s24)
   4067c:	20 94 01 0f 	move s1, 101
   40680:	b0 32 00 f8 	call 51904 <Z_ChangeTag2>
   40684:	00 0c 00 4f 	movehi s0, 96
   40688:	00 e3 2b 00 	or s24, s0, 2808
   4068c:	18 00 00 a8 	load_32 s0, (s24)
   40690:	20 d0 ff a9 	load_32 s1, -12(s0)
   40694:	5e a0 01 a8 	load_32 s2, 104(sp)
   40698:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4069c:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x8ec>
   406a0:	00 00 00 4f 	movehi s0, 0
   406a4:	20 64 1b 0f 	move s1, 1753
   406a8:	3e 10 00 88 	store_32 s1, 4(sp)
   406ac:	00 14 7e 00 	or s0, s0, 8069
   406b0:	1e 00 00 88 	store_32 s0, (sp)
   406b4:	94 36 ff f9 	call -206256 <I_Error>
   406b8:	18 00 00 a8 	load_32 s0, (s24)
   406bc:	20 94 01 0f 	move s1, 101
   406c0:	a0 32 00 f8 	call 51840 <Z_ChangeTag2>
   406c4:	00 0c 00 4f 	movehi s0, 96
   406c8:	00 03 2c 00 	or s24, s0, 2816
   406cc:	18 00 00 a8 	load_32 s0, (s24)
   406d0:	20 d0 ff a9 	load_32 s1, -12(s0)
   406d4:	5e a0 01 a8 	load_32 s2, 104(sp)
   406d8:	21 00 01 c1 	cmpeq_i s1, s1, s2
   406dc:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x92c>
   406e0:	00 00 00 4f 	movehi s0, 0
   406e4:	20 68 1b 0f 	move s1, 1754
   406e8:	3e 10 00 88 	store_32 s1, 4(sp)
   406ec:	00 14 7e 00 	or s0, s0, 8069
   406f0:	1e 00 00 88 	store_32 s0, (sp)
   406f4:	84 36 ff f9 	call -206320 <I_Error>
   406f8:	18 00 00 a8 	load_32 s0, (s24)
   406fc:	20 94 01 0f 	move s1, 101
   40700:	90 32 00 f8 	call 51776 <Z_ChangeTag2>
   40704:	00 0c 00 4f 	movehi s0, 96
   40708:	00 53 2c 00 	or s24, s0, 2836
   4070c:	18 00 00 a8 	load_32 s0, (s24)
   40710:	20 d0 ff a9 	load_32 s1, -12(s0)
   40714:	5e a0 01 a8 	load_32 s2, 104(sp)
   40718:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4071c:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x96c>
   40720:	00 00 00 4f 	movehi s0, 0
   40724:	20 6c 1b 0f 	move s1, 1755
   40728:	3e 10 00 88 	store_32 s1, 4(sp)
   4072c:	00 14 7e 00 	or s0, s0, 8069
   40730:	1e 00 00 88 	store_32 s0, (sp)
   40734:	74 36 ff f9 	call -206384 <I_Error>
   40738:	18 00 00 a8 	load_32 s0, (s24)
   4073c:	20 94 01 0f 	move s1, 101
   40740:	80 32 00 f8 	call 51712 <Z_ChangeTag2>
   40744:	00 0c 00 4f 	movehi s0, 96
   40748:	00 f3 2b 00 	or s24, s0, 2812
   4074c:	18 00 00 a8 	load_32 s0, (s24)
   40750:	20 d0 ff a9 	load_32 s1, -12(s0)
   40754:	5e a0 01 a8 	load_32 s2, 104(sp)
   40758:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4075c:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x9ac>
   40760:	00 00 00 4f 	movehi s0, 0
   40764:	20 70 1b 0f 	move s1, 1756
   40768:	3e 10 00 88 	store_32 s1, 4(sp)
   4076c:	00 14 7e 00 	or s0, s0, 8069
   40770:	1e 00 00 88 	store_32 s0, (sp)
   40774:	64 36 ff f9 	call -206448 <I_Error>
   40778:	18 00 00 a8 	load_32 s0, (s24)
   4077c:	20 94 01 0f 	move s1, 101
   40780:	70 32 00 f8 	call 51648 <Z_ChangeTag2>
   40784:	00 0c 00 4f 	movehi s0, 96
   40788:	00 13 2c 00 	or s24, s0, 2820
   4078c:	18 00 00 a8 	load_32 s0, (s24)
   40790:	20 d0 ff a9 	load_32 s1, -12(s0)
   40794:	5e a0 01 a8 	load_32 s2, 104(sp)
   40798:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4079c:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0x9ec>
   407a0:	00 00 00 4f 	movehi s0, 0
   407a4:	20 74 1b 0f 	move s1, 1757
   407a8:	3e 10 00 88 	store_32 s1, 4(sp)
   407ac:	00 14 7e 00 	or s0, s0, 8069
   407b0:	1e 00 00 88 	store_32 s0, (sp)
   407b4:	54 36 ff f9 	call -206512 <I_Error>
   407b8:	18 00 00 a8 	load_32 s0, (s24)
   407bc:	20 94 01 0f 	move s1, 101
   407c0:	60 32 00 f8 	call 51584 <Z_ChangeTag2>
   407c4:	00 0c 00 4f 	movehi s0, 96
   407c8:	00 63 2c 00 	or s24, s0, 2840
   407cc:	18 00 00 a8 	load_32 s0, (s24)
   407d0:	20 d0 ff a9 	load_32 s1, -12(s0)
   407d4:	5e a0 01 a8 	load_32 s2, 104(sp)
   407d8:	21 00 01 c1 	cmpeq_i s1, s1, s2
   407dc:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0xa2c>
   407e0:	00 00 00 4f 	movehi s0, 0
   407e4:	20 78 1b 0f 	move s1, 1758
   407e8:	3e 10 00 88 	store_32 s1, 4(sp)
   407ec:	00 14 7e 00 	or s0, s0, 8069
   407f0:	1e 00 00 88 	store_32 s0, (sp)
   407f4:	44 36 ff f9 	call -206576 <I_Error>
   407f8:	18 00 00 a8 	load_32 s0, (s24)
   407fc:	20 94 01 0f 	move s1, 101
   40800:	50 32 00 f8 	call 51520 <Z_ChangeTag2>
   40804:	00 0c 00 4f 	movehi s0, 96
   40808:	00 43 28 00 	or s24, s0, 2576
   4080c:	18 00 00 a8 	load_32 s0, (s24)
   40810:	20 d0 ff a9 	load_32 s1, -12(s0)
   40814:	5e a0 01 a8 	load_32 s2, 104(sp)
   40818:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4081c:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0xa6c>
   40820:	00 00 00 4f 	movehi s0, 0
   40824:	20 7c 1b 0f 	move s1, 1759
   40828:	3e 10 00 88 	store_32 s1, 4(sp)
   4082c:	00 14 7e 00 	or s0, s0, 8069
   40830:	1e 00 00 88 	store_32 s0, (sp)
   40834:	34 36 ff f9 	call -206640 <I_Error>
   40838:	18 00 00 a8 	load_32 s0, (s24)
   4083c:	20 94 01 0f 	move s1, 101
   40840:	40 32 00 f8 	call 51456 <Z_ChangeTag2>
   40844:	00 0c 00 4f 	movehi s0, 96
   40848:	00 73 2c 00 	or s24, s0, 2844
   4084c:	18 00 00 a8 	load_32 s0, (s24)
   40850:	20 d0 ff a9 	load_32 s1, -12(s0)
   40854:	5e a0 01 a8 	load_32 s2, 104(sp)
   40858:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4085c:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0xaac>
   40860:	00 00 00 4f 	movehi s0, 0
   40864:	20 80 1b 0f 	move s1, 1760
   40868:	3e 10 00 88 	store_32 s1, 4(sp)
   4086c:	00 14 7e 00 	or s0, s0, 8069
   40870:	1e 00 00 88 	store_32 s0, (sp)
   40874:	24 36 ff f9 	call -206704 <I_Error>
   40878:	18 00 00 a8 	load_32 s0, (s24)
   4087c:	20 94 01 0f 	move s1, 101
   40880:	30 32 00 f8 	call 51392 <Z_ChangeTag2>
   40884:	00 0c 00 4f 	movehi s0, 96
   40888:	00 43 2a 00 	or s24, s0, 2704
   4088c:	18 00 00 a8 	load_32 s0, (s24)
   40890:	20 d0 ff a9 	load_32 s1, -12(s0)
   40894:	5e a0 01 a8 	load_32 s2, 104(sp)
   40898:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4089c:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0xaec>
   408a0:	00 00 00 4f 	movehi s0, 0
   408a4:	20 88 1b 0f 	move s1, 1762
   408a8:	3e 10 00 88 	store_32 s1, 4(sp)
   408ac:	00 14 7e 00 	or s0, s0, 8069
   408b0:	1e 00 00 88 	store_32 s0, (sp)
   408b4:	14 36 ff f9 	call -206768 <I_Error>
   408b8:	18 00 00 a8 	load_32 s0, (s24)
   408bc:	20 94 01 0f 	move s1, 101
   408c0:	20 32 00 f8 	call 51328 <Z_ChangeTag2>
   408c4:	00 0c 00 4f 	movehi s0, 96
   408c8:	00 33 2a 00 	or s24, s0, 2700
   408cc:	18 00 00 a8 	load_32 s0, (s24)
   408d0:	20 d0 ff a9 	load_32 s1, -12(s0)
   408d4:	5e a0 01 a8 	load_32 s2, 104(sp)
   408d8:	21 00 01 c1 	cmpeq_i s1, s1, s2
   408dc:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0xb2c>
   408e0:	00 00 00 4f 	movehi s0, 0
   408e4:	20 8c 1b 0f 	move s1, 1763
   408e8:	3e 10 00 88 	store_32 s1, 4(sp)
   408ec:	00 14 7e 00 	or s0, s0, 8069
   408f0:	1e 00 00 88 	store_32 s0, (sp)
   408f4:	04 36 ff f9 	call -206832 <I_Error>
   408f8:	18 00 00 a8 	load_32 s0, (s24)
   408fc:	20 94 01 0f 	move s1, 101
   40900:	10 32 00 f8 	call 51264 <Z_ChangeTag2>
   40904:	00 0c 00 4f 	movehi s0, 96
   40908:	00 23 2a 00 	or s24, s0, 2696
   4090c:	18 00 00 a8 	load_32 s0, (s24)
   40910:	20 d0 ff a9 	load_32 s1, -12(s0)
   40914:	5e a0 01 a8 	load_32 s2, 104(sp)
   40918:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4091c:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0xb6c>
   40920:	00 00 00 4f 	movehi s0, 0
   40924:	20 90 1b 0f 	move s1, 1764
   40928:	3e 10 00 88 	store_32 s1, 4(sp)
   4092c:	00 14 7e 00 	or s0, s0, 8069
   40930:	1e 00 00 88 	store_32 s0, (sp)
   40934:	f4 35 ff f9 	call -206896 <I_Error>
   40938:	18 00 00 a8 	load_32 s0, (s24)
   4093c:	20 94 01 0f 	move s1, 101
   40940:	00 32 00 f8 	call 51200 <Z_ChangeTag2>
   40944:	00 0c 00 4f 	movehi s0, 96
   40948:	00 53 2a 00 	or s24, s0, 2708
   4094c:	18 00 00 a8 	load_32 s0, (s24)
   40950:	20 d0 ff a9 	load_32 s1, -12(s0)
   40954:	5e a0 01 a8 	load_32 s2, 104(sp)
   40958:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4095c:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0xbac>
   40960:	00 00 00 4f 	movehi s0, 0
   40964:	20 a4 1b 0f 	move s1, 1769
   40968:	3e 10 00 88 	store_32 s1, 4(sp)
   4096c:	00 14 7e 00 	or s0, s0, 8069
   40970:	1e 00 00 88 	store_32 s0, (sp)
   40974:	e4 35 ff f9 	call -206960 <I_Error>
   40978:	18 00 00 a8 	load_32 s0, (s24)
   4097c:	20 94 01 0f 	move s1, 101
   40980:	f0 31 00 f8 	call 51136 <Z_ChangeTag2>
   40984:	18 10 00 a8 	load_32 s0, 4(s24)
   40988:	20 d0 ff a9 	load_32 s1, -12(s0)
   4098c:	5e a0 01 a8 	load_32 s2, 104(sp)
   40990:	21 00 01 c1 	cmpeq_i s1, s1, s2
   40994:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0xbe4>
   40998:	00 00 00 4f 	movehi s0, 0
   4099c:	20 a4 1b 0f 	move s1, 1769
   409a0:	3e 10 00 88 	store_32 s1, 4(sp)
   409a4:	00 14 7e 00 	or s0, s0, 8069
   409a8:	1e 00 00 88 	store_32 s0, (sp)
   409ac:	d6 35 ff f9 	call -207016 <I_Error>
   409b0:	18 10 00 a8 	load_32 s0, 4(s24)
   409b4:	20 94 01 0f 	move s1, 101
   409b8:	e2 31 00 f8 	call 51080 <Z_ChangeTag2>
   409bc:	18 20 00 a8 	load_32 s0, 8(s24)
   409c0:	20 d0 ff a9 	load_32 s1, -12(s0)
   409c4:	5e a0 01 a8 	load_32 s2, 104(sp)
   409c8:	21 00 01 c1 	cmpeq_i s1, s1, s2
   409cc:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0xc1c>
   409d0:	00 00 00 4f 	movehi s0, 0
   409d4:	20 a4 1b 0f 	move s1, 1769
   409d8:	3e 10 00 88 	store_32 s1, 4(sp)
   409dc:	00 14 7e 00 	or s0, s0, 8069
   409e0:	1e 00 00 88 	store_32 s0, (sp)
   409e4:	c8 35 ff f9 	call -207072 <I_Error>
   409e8:	18 20 00 a8 	load_32 s0, 8(s24)
   409ec:	20 94 01 0f 	move s1, 101
   409f0:	d4 31 00 f8 	call 51024 <Z_ChangeTag2>
   409f4:	18 30 00 a8 	load_32 s0, 12(s24)
   409f8:	20 d0 ff a9 	load_32 s1, -12(s0)
   409fc:	5e a0 01 a8 	load_32 s2, 104(sp)
   40a00:	21 00 01 c1 	cmpeq_i s1, s1, s2
   40a04:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0xc54>
   40a08:	00 00 00 4f 	movehi s0, 0
   40a0c:	20 a4 1b 0f 	move s1, 1769
   40a10:	3e 10 00 88 	store_32 s1, 4(sp)
   40a14:	00 14 7e 00 	or s0, s0, 8069
   40a18:	1e 00 00 88 	store_32 s0, (sp)
   40a1c:	ba 35 ff f9 	call -207128 <I_Error>
   40a20:	18 30 00 a8 	load_32 s0, 12(s24)
   40a24:	20 94 01 0f 	move s1, 101
   40a28:	c6 31 00 f8 	call 50968 <Z_ChangeTag2>
   40a2c:	00 0c 00 4f 	movehi s0, 96
   40a30:	00 a3 2c 00 	or s24, s0, 2856
   40a34:	18 00 00 a8 	load_32 s0, (s24)
   40a38:	20 d0 ff a9 	load_32 s1, -12(s0)
   40a3c:	5e a0 01 a8 	load_32 s2, 104(sp)
   40a40:	21 00 01 c1 	cmpeq_i s1, s1, s2
   40a44:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0xc94>
   40a48:	00 00 00 4f 	movehi s0, 0
   40a4c:	20 b0 1b 0f 	move s1, 1772
   40a50:	3e 10 00 88 	store_32 s1, 4(sp)
   40a54:	00 14 7e 00 	or s0, s0, 8069
   40a58:	1e 00 00 88 	store_32 s0, (sp)
   40a5c:	aa 35 ff f9 	call -207192 <I_Error>
   40a60:	18 00 00 a8 	load_32 s0, (s24)
   40a64:	20 94 01 0f 	move s1, 101
   40a68:	b6 31 00 f8 	call 50904 <Z_ChangeTag2>
   40a6c:	18 10 00 a8 	load_32 s0, 4(s24)
   40a70:	20 d0 ff a9 	load_32 s1, -12(s0)
   40a74:	5e a0 01 a8 	load_32 s2, 104(sp)
   40a78:	21 00 01 c1 	cmpeq_i s1, s1, s2
   40a7c:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0xccc>
   40a80:	00 00 00 4f 	movehi s0, 0
   40a84:	20 b0 1b 0f 	move s1, 1772
   40a88:	3e 10 00 88 	store_32 s1, 4(sp)
   40a8c:	00 14 7e 00 	or s0, s0, 8069
   40a90:	1e 00 00 88 	store_32 s0, (sp)
   40a94:	9c 35 ff f9 	call -207248 <I_Error>
   40a98:	18 10 00 a8 	load_32 s0, 4(s24)
   40a9c:	20 94 01 0f 	move s1, 101
   40aa0:	a8 31 00 f8 	call 50848 <Z_ChangeTag2>
   40aa4:	18 20 00 a8 	load_32 s0, 8(s24)
   40aa8:	20 d0 ff a9 	load_32 s1, -12(s0)
   40aac:	5e a0 01 a8 	load_32 s2, 104(sp)
   40ab0:	21 00 01 c1 	cmpeq_i s1, s1, s2
   40ab4:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0xd04>
   40ab8:	00 00 00 4f 	movehi s0, 0
   40abc:	20 b0 1b 0f 	move s1, 1772
   40ac0:	3e 10 00 88 	store_32 s1, 4(sp)
   40ac4:	00 14 7e 00 	or s0, s0, 8069
   40ac8:	1e 00 00 88 	store_32 s0, (sp)
   40acc:	8e 35 ff f9 	call -207304 <I_Error>
   40ad0:	18 20 00 a8 	load_32 s0, 8(s24)
   40ad4:	20 94 01 0f 	move s1, 101
   40ad8:	9a 31 00 f8 	call 50792 <Z_ChangeTag2>
   40adc:	18 30 00 a8 	load_32 s0, 12(s24)
   40ae0:	20 d0 ff a9 	load_32 s1, -12(s0)
   40ae4:	5e a0 01 a8 	load_32 s2, 104(sp)
   40ae8:	21 00 01 c1 	cmpeq_i s1, s1, s2
   40aec:	01 01 00 f4 	bnz s1, 32 <WI_unloadData+0xd3c>
   40af0:	00 00 00 4f 	movehi s0, 0
   40af4:	20 b0 1b 0f 	move s1, 1772
   40af8:	3e 10 00 88 	store_32 s1, 4(sp)
   40afc:	00 14 7e 00 	or s0, s0, 8069
   40b00:	1e 00 00 88 	store_32 s0, (sp)
   40b04:	80 35 ff f9 	call -207360 <I_Error>
   40b08:	18 30 00 a8 	load_32 s0, 12(s24)
   40b0c:	20 94 01 0f 	move s1, 101
   40b10:	8c 31 00 f8 	call 50736 <Z_ChangeTag2>
   40b14:	fe b3 01 a8 	load_32 ra, 108(sp)
   40b18:	7e c3 01 a8 	load_32 s27, 112(sp)
   40b1c:	5e d3 01 a8 	load_32 s26, 116(sp)
   40b20:	3e e3 01 a8 	load_32 s25, 120(sp)
   40b24:	1e f3 01 a8 	load_32 s24, 124(sp)
   40b28:	de 03 02 05 	add_i sp, sp, 128
   40b2c:	1f 00 00 f0 	ret

0000000000040b30 WI_initNoState:
   40b30:	00 0c 00 4f 	movehi s0, 96
   40b34:	20 fc ff 0f 	move s1, -1
   40b38:	40 0c 00 4f 	movehi s2, 96
   40b3c:	00 60 27 00 	or s0, s0, 2520
   40b40:	20 00 00 88 	store_32 s1, (s0)
   40b44:	00 0c 00 4f 	movehi s0, 96
   40b48:	22 50 28 00 	or s1, s2, 2580
   40b4c:	40 00 00 0f 	move s2, 0
   40b50:	00 60 28 00 	or s0, s0, 2584
   40b54:	41 00 00 82 	store_8 s2, (s1)
   40b58:	20 28 00 0f 	move s1, 10
   40b5c:	20 00 00 88 	store_32 s1, (s0)
   40b60:	1f 00 00 f0 	ret

0000000000040b64 WI_updateNoState:
   40b64:	de 03 ff 05 	add_i sp, sp, -64
   40b68:	fe f3 00 88 	store_32 ra, 60(sp)
   40b6c:	f3 fa ff f9 	call -5172 <WI_updateAnimatedBack>
   40b70:	00 0c 00 4f 	movehi s0, 96
   40b74:	00 60 28 00 	or s0, s0, 2584
   40b78:	20 00 00 a8 	load_32 s1, (s0)
   40b7c:	21 fc ff 05 	add_i s1, s1, -1
   40b80:	20 00 00 88 	store_32 s1, (s0)
   40b84:	41 00 00 f4 	bnz s1, 8 <WI_updateNoState+0x28>
   40b88:	04 00 00 f6 	b 16 <WI_updateNoState+0x34>
   40b8c:	fe f3 00 a8 	load_32 ra, 60(sp)
   40b90:	de 03 01 05 	add_i sp, sp, 64
   40b94:	1f 00 00 f0 	ret
   40b98:	8e fc ff f9 	call -3528 <WI_unloadData>
   40b9c:	5a 59 ff f9 	call -170648 <G_WorldDone>
   40ba0:	fe f3 00 a8 	load_32 ra, 60(sp)
   40ba4:	de 03 01 05 	add_i sp, sp, 64
   40ba8:	1f 00 00 f0 	ret

0000000000040bac WI_initShowNextLoc:
   40bac:	de 03 ff 05 	add_i sp, sp, -64
   40bb0:	fe f3 00 88 	store_32 ra, 60(sp)
   40bb4:	00 0c 00 4f 	movehi s0, 96
   40bb8:	20 04 00 0f 	move s1, 1
   40bbc:	40 0c 00 4f 	movehi s2, 96
   40bc0:	00 60 27 00 	or s0, s0, 2520
   40bc4:	20 00 00 88 	store_32 s1, (s0)
   40bc8:	00 0c 00 4f 	movehi s0, 96
   40bcc:	22 50 28 00 	or s1, s2, 2580
   40bd0:	40 00 00 0f 	move s2, 0
   40bd4:	00 60 28 00 	or s0, s0, 2584
   40bd8:	41 00 00 82 	store_8 s2, (s1)
   40bdc:	20 30 02 0f 	move s1, 140
   40be0:	20 00 00 88 	store_32 s1, (s0)
   40be4:	88 fa ff f9 	call -5600 <WI_initAnimatedBack>
   40be8:	fe f3 00 a8 	load_32 ra, 60(sp)
   40bec:	de 03 01 05 	add_i sp, sp, 64
   40bf0:	1f 00 00 f0 	ret

0000000000040bf4 WI_updateShowNextLoc:
   40bf4:	de 03 ff 05 	add_i sp, sp, -64
   40bf8:	fe f3 00 88 	store_32 ra, 60(sp)
   40bfc:	cf fa ff f9 	call -5316 <WI_updateAnimatedBack>
   40c00:	00 0c 00 4f 	movehi s0, 96
   40c04:	20 0c 00 4f 	movehi s1, 96
   40c08:	00 60 28 00 	or s0, s0, 2584
   40c0c:	21 50 28 00 	or s1, s1, 2580
   40c10:	40 00 00 a8 	load_32 s2, (s0)
   40c14:	42 fc ff 05 	add_i s2, s2, -1
   40c18:	40 00 00 88 	store_32 s2, (s0)
   40c1c:	61 00 00 a0 	load_u8 s3, (s1)
   40c20:	a2 01 00 f2 	bz s2, 52 <WI_updateShowNextLoc+0x60>
   40c24:	63 04 00 01 	and s3, s3, 1
   40c28:	43 00 00 f2 	bz s3, 8 <WI_updateShowNextLoc+0x3c>
   40c2c:	0a 00 00 f6 	b 40 <WI_updateShowNextLoc+0x60>
   40c30:	02 70 00 01 	and s0, s2, 28
   40c34:	20 0c 00 4f 	movehi s1, 96
   40c38:	00 50 00 18 	cmplt_u s0, s0, 20
   40c3c:	21 70 28 00 	or s1, s1, 2588
   40c40:	00 04 00 01 	and s0, s0, 1
   40c44:	01 00 00 88 	store_32 s0, (s1)
   40c48:	fe f3 00 a8 	load_32 ra, 60(sp)
   40c4c:	de 03 01 05 	add_i sp, sp, 64
   40c50:	1f 00 00 f0 	ret
   40c54:	40 0c 00 4f 	movehi s2, 96
   40c58:	60 fc ff 0f 	move s3, -1
   40c5c:	42 60 27 00 	or s2, s2, 2520
   40c60:	62 00 00 88 	store_32 s3, (s2)
   40c64:	40 00 00 0f 	move s2, 0
   40c68:	41 00 00 82 	store_8 s2, (s1)
   40c6c:	20 28 00 0f 	move s1, 10
   40c70:	20 00 00 88 	store_32 s1, (s0)
   40c74:	fe f3 00 a8 	load_32 ra, 60(sp)
   40c78:	de 03 01 05 	add_i sp, sp, 64
   40c7c:	1f 00 00 f0 	ret

0000000000040c80 WI_drawShowNextLoc:
   40c80:	de 03 fe 05 	add_i sp, sp, -128
   40c84:	1e f3 01 88 	store_32 s24, 124(sp)
   40c88:	3e e3 01 88 	store_32 s25, 120(sp)
   40c8c:	5e d3 01 88 	store_32 s26, 116(sp)
   40c90:	7e c3 01 88 	store_32 s27, 112(sp)
   40c94:	fe b3 01 88 	store_32 ra, 108(sp)
   40c98:	00 0c 00 4f 	movehi s0, 96
   40c9c:	47 00 00 4f 	movehi s2, 7
   40ca0:	20 20 02 00 	or s1, s0, 136
   40ca4:	42 00 68 00 	or s2, s2, 6656
   40ca8:	01 00 00 a8 	load_32 s0, (s1)
   40cac:	21 10 00 a8 	load_32 s1, 4(s1)
   40cb0:	15 44 00 f8 	call 69716 <memcpy>
   40cb4:	00 00 00 0f 	move s0, 0
   40cb8:	1e a0 01 88 	store_32 s0, 104(sp)
   40cbc:	00 03 05 0f 	move s24, 320
   40cc0:	60 20 03 0f 	move s3, 200
   40cc4:	20 00 f0 c0 	move s1, s0
   40cc8:	40 00 fc c0 	move s2, s24
   40ccc:	79 14 00 f8 	call 20964 <V_MarkRect>
   40cd0:	0b 04 00 4f 	movehi s0, 43
   40cd4:	20 03 40 00 	or s25, s0, 4096
   40cd8:	19 00 00 a8 	load_32 s0, (s25)
   40cdc:	00 08 00 10 	cmpeq_i s0, s0, 2
   40ce0:	40 00 00 f4 	bnz s0, 8 <WI_drawShowNextLoc+0x68>
   40ce4:	08 00 00 f6 	b 32 <WI_drawShowNextLoc+0x84>
   40ce8:	00 0c 00 4f 	movehi s0, 96
   40cec:	00 20 27 00 	or s0, s0, 2504
   40cf0:	00 00 00 a8 	load_32 s0, (s0)
   40cf4:	00 30 00 a8 	load_32 s0, 12(s0)
   40cf8:	00 78 00 10 	cmpeq_i s0, s0, 30
   40cfc:	40 23 00 f4 	bnz s0, 1128 <WI_drawShowNextLoc+0x4e4>
   40d00:	f5 00 00 f6 	b 980 <WI_drawShowNextLoc+0x454>
   40d04:	00 0c 00 4f 	movehi s0, 96
   40d08:	40 23 27 00 	or s26, s0, 2504
   40d0c:	3a 00 00 a8 	load_32 s1, (s26)
   40d10:	01 00 00 a8 	load_32 s0, (s1)
   40d14:	40 0c 00 14 	cmplt_i s2, s0, 3
   40d18:	42 02 00 f4 	bnz s2, 72 <WI_drawShowNextLoc+0xe0>
   40d1c:	00 0c 00 4f 	movehi s0, 96
   40d20:	20 03 00 0f 	move s25, 0
   40d24:	00 40 27 00 	or s0, s0, 2512
   40d28:	60 00 00 a8 	load_32 s3, (s0)
   40d2c:	03 00 00 a6 	load_s16 s0, (s3)
   40d30:	40 80 fc c0 	move s2, s25
   40d34:	18 00 60 c0 	sub_i s0, s24, s0
   40d38:	20 7c 00 0a 	shr s1, s0, 31
   40d3c:	00 80 50 c0 	add_i s0, s0, s1
   40d40:	20 08 00 0f 	move s1, 2
   40d44:	00 04 00 09 	ashr s0, s0, 1
   40d48:	e0 14 00 f8 	call 21376 <V_DrawPatch>
   40d4c:	00 0c 00 4f 	movehi s0, 96
   40d50:	00 10 27 00 	or s0, s0, 2500
   40d54:	00 00 00 a8 	load_32 s0, (s0)
   40d58:	3a 00 00 a8 	load_32 s1, (s26)
   40d5c:	f0 00 00 f6 	b 960 <WI_drawShowNextLoc+0x49c>
   40d60:	61 20 00 a8 	load_32 s3, 8(s1)
   40d64:	43 20 00 11 	cmpne_i s2, s3, 8
   40d68:	62 00 00 f4 	bnz s2, 12 <WI_drawShowNextLoc+0xf4>
   40d6c:	41 30 00 a8 	load_32 s2, 12(s1)
   40d70:	62 fc ff 05 	add_i s3, s2, -1
   40d74:	43 00 00 14 	cmplt_i s2, s3, 0
   40d78:	02 0a 00 f4 	bnz s2, 320 <WI_drawShowNextLoc+0x238>
   40d7c:	23 00 00 4f 	movehi s1, 3
   40d80:	5e 93 01 88 	store_32 s26, 100(sp)
   40d84:	3e 43 01 88 	store_32 s25, 80(sp)
   40d88:	40 0c 00 4f 	movehi s2, 96
   40d8c:	1e 53 01 88 	store_32 s24, 84(sp)
   40d90:	40 07 00 0f 	move s26, 1
   40d94:	21 d0 59 00 	or s1, s1, 5748
   40d98:	3e 80 01 88 	store_32 s1, 96(sp)
   40d9c:	22 00 00 4f 	movehi s1, 2
   40da0:	62 83 28 00 	or s27, s2, 2592
   40da4:	21 34 7e 00 	or s1, s1, 8077
   40da8:	3e 60 01 88 	store_32 s1, 88(sp)
   40dac:	1e a3 01 a8 	load_32 s24, 104(sp)
   40db0:	7e 70 01 88 	store_32 s3, 92(sp)
   40db4:	03 00 00 f6 	b 12 <WI_drawShowNextLoc+0x140>
   40db8:	01 00 00 a8 	load_32 s0, (s1)
   40dbc:	00 83 fc c0 	move s24, s25
   40dc0:	3e 80 01 a8 	load_32 s1, 96(sp)
   40dc4:	00 20 01 07 	mull_i s0, s0, 72
   40dc8:	01 00 50 c0 	add_i s0, s1, s0
   40dcc:	38 0c 00 0b 	shl s1, s24, 3
   40dd0:	20 80 50 c0 	add_i s1, s0, s1
   40dd4:	01 00 00 a8 	load_32 s0, (s1)
   40dd8:	21 10 00 a8 	load_32 s1, 4(s1)
   40ddc:	7e a0 01 a8 	load_32 s3, 104(sp)
   40de0:	40 80 f1 c0 	move s2, s3
   40de4:	82 08 00 0b 	shl s4, s2, 2
   40de8:	9b 00 52 c0 	add_i s4, s27, s4
   40dec:	84 00 00 a8 	load_32 s4, (s4)
   40df0:	a4 10 00 a6 	load_s16 s5, 4(s4)
   40df4:	c4 18 00 a6 	load_s16 s6, 6(s4)
   40df8:	e4 00 00 a6 	load_s16 s7, (s4)
   40dfc:	84 08 00 a6 	load_s16 s4, 2(s4)
   40e00:	a0 80 62 c0 	sub_i s5, s0, s5
   40e04:	c1 00 63 c0 	sub_i s6, s1, s6
   40e08:	06 81 02 c0 	or s8, s6, s5
   40e0c:	a5 80 53 c0 	add_i s5, s5, s7
   40e10:	86 00 52 c0 	add_i s4, s6, s4
   40e14:	e8 fc ff 12 	cmpgt_i s7, s8, -1
   40e18:	a5 00 05 14 	cmplt_i s5, s5, 320
   40e1c:	84 20 03 14 	cmplt_i s4, s4, 200
   40e20:	a7 80 12 c0 	and s5, s7, s5
   40e24:	85 00 12 c0 	and s4, s5, s4
   40e28:	a4 fc ff 03 	xor s5, s4, -1
   40e2c:	c4 00 00 11 	cmpne_i s6, s4, 0
   40e30:	80 00 fd c0 	move s4, s26
   40e34:	a5 04 00 01 	and s5, s5, 1
   40e38:	42 80 52 c0 	add_i s2, s2, s5
   40e3c:	46 00 00 f4 	bnz s6, 8 <WI_drawShowNextLoc+0x1c4>
   40e40:	80 80 f1 c0 	move s4, s3
   40e44:	62 08 00 10 	cmpeq_i s3, s2, 2
   40e48:	63 00 00 f4 	bnz s3, 12 <WI_drawShowNextLoc+0x1d4>
   40e4c:	60 00 f2 c0 	move s3, s4
   40e50:	a4 fc ff f3 	bz s4, -108 <WI_drawShowNextLoc+0x164>
   40e54:	64 01 00 f2 	bz s4, 44 <WI_drawShowNextLoc+0x200>
   40e58:	62 04 00 16 	cmpgt_u s3, s2, 1
   40e5c:	23 01 00 f4 	bnz s3, 36 <WI_drawShowNextLoc+0x200>
   40e60:	42 08 00 0b 	shl s2, s2, 2
   40e64:	5b 00 51 c0 	add_i s2, s27, s2
   40e68:	62 00 00 a8 	load_32 s3, (s2)
   40e6c:	5e a0 01 a8 	load_32 s2, 104(sp)
   40e70:	96 14 00 f8 	call 21080 <V_DrawPatch>
   40e74:	1e 70 01 a8 	load_32 s0, 92(sp)
   40e78:	38 07 00 05 	add_i s25, s24, 1
   40e7c:	07 00 00 f6 	b 28 <WI_drawShowNextLoc+0x218>
   40e80:	38 07 00 05 	add_i s25, s24, 1
   40e84:	3e 13 00 88 	store_32 s25, 4(sp)
   40e88:	1e 60 01 a8 	load_32 s0, 88(sp)
   40e8c:	1e 00 00 88 	store_32 s0, (sp)
   40e90:	d1 43 00 f8 	call 69444 <printf>
   40e94:	1e 70 01 a8 	load_32 s0, 92(sp)
   40e98:	3e 90 01 a8 	load_32 s1, 100(sp)
   40e9c:	18 00 30 c1 	cmpge_i s0, s24, s0
   40ea0:	21 00 00 a8 	load_32 s1, (s1)
   40ea4:	40 00 00 f4 	bnz s0, 8 <WI_drawShowNextLoc+0x22c>
   40ea8:	c4 ff ff f7 	b -240 <WI_drawShowNextLoc+0x138>
   40eac:	1e 53 01 a8 	load_32 s24, 84(sp)
   40eb0:	3e 43 01 a8 	load_32 s25, 80(sp)
   40eb4:	5e 93 01 a8 	load_32 s26, 100(sp)
   40eb8:	01 10 00 a8 	load_32 s0, 4(s1)
   40ebc:	20 06 00 f2 	bz s0, 196 <WI_drawShowNextLoc+0x300>
   40ec0:	03 00 00 4f 	movehi s0, 3
   40ec4:	21 00 00 a8 	load_32 s1, (s1)
   40ec8:	40 0c 00 4f 	movehi s2, 96
   40ecc:	60 00 00 0f 	move s3, 0
   40ed0:	00 d0 59 00 	or s0, s0, 5748
   40ed4:	21 20 01 07 	mull_i s1, s1, 72
   40ed8:	42 80 28 00 	or s2, s2, 2592
   40edc:	20 80 50 c0 	add_i s1, s0, s1
   40ee0:	80 04 00 0f 	move s4, 1
   40ee4:	01 00 01 a8 	load_32 s0, 64(s1)
   40ee8:	21 10 01 a8 	load_32 s1, 68(s1)
   40eec:	a0 80 f1 c0 	move s5, s3
   40ef0:	c3 08 00 0b 	shl s6, s3, 2
   40ef4:	c2 00 53 c0 	add_i s6, s2, s6
   40ef8:	c6 00 00 a8 	load_32 s6, (s6)
   40efc:	e6 10 00 a6 	load_s16 s7, 4(s6)
   40f00:	06 19 00 a6 	load_s16 s8, 6(s6)
   40f04:	26 01 00 a6 	load_s16 s9, (s6)
   40f08:	c6 08 00 a6 	load_s16 s6, 2(s6)
   40f0c:	e0 80 63 c0 	sub_i s7, s0, s7
   40f10:	01 01 64 c0 	sub_i s8, s1, s8
   40f14:	48 81 03 c0 	or s10, s8, s7
   40f18:	e7 80 54 c0 	add_i s7, s7, s9
   40f1c:	c8 00 53 c0 	add_i s6, s8, s6
   40f20:	2a fd ff 12 	cmpgt_i s9, s10, -1
   40f24:	e7 00 05 14 	cmplt_i s7, s7, 320
   40f28:	c6 20 03 14 	cmplt_i s6, s6, 200
   40f2c:	e9 80 13 c0 	and s7, s9, s7
   40f30:	c7 00 13 c0 	and s6, s7, s6
   40f34:	e6 fc ff 03 	xor s7, s6, -1
   40f38:	06 01 00 11 	cmpne_i s8, s6, 0
   40f3c:	c0 00 f2 c0 	move s6, s4
   40f40:	e7 04 00 01 	and s7, s7, 1
   40f44:	63 80 53 c0 	add_i s3, s3, s7
   40f48:	48 00 00 f4 	bnz s8, 8 <WI_drawShowNextLoc+0x2d0>
   40f4c:	c0 80 f2 c0 	move s6, s5
   40f50:	a3 08 00 10 	cmpeq_i s5, s3, 2
   40f54:	65 00 00 f4 	bnz s5, 12 <WI_drawShowNextLoc+0x2e0>
   40f58:	a0 00 f3 c0 	move s5, s6
   40f5c:	a6 fc ff f3 	bz s6, -108 <WI_drawShowNextLoc+0x270>
   40f60:	26 02 00 f2 	bz s6, 68 <WI_drawShowNextLoc+0x324>
   40f64:	83 04 00 16 	cmpgt_u s4, s3, 1
   40f68:	e4 01 00 f4 	bnz s4, 60 <WI_drawShowNextLoc+0x324>
   40f6c:	63 08 00 0b 	shl s3, s3, 2
   40f70:	42 80 51 c0 	add_i s2, s2, s3
   40f74:	62 00 00 a8 	load_32 s3, (s2)
   40f78:	40 00 00 0f 	move s2, 0
   40f7c:	53 14 00 f8 	call 20812 <V_DrawPatch>
   40f80:	00 0c 00 4f 	movehi s0, 96
   40f84:	00 70 28 00 	or s0, s0, 2588
   40f88:	00 00 00 a8 	load_32 s0, (s0)
   40f8c:	40 00 00 f2 	bz s0, 8 <WI_drawShowNextLoc+0x314>
   40f90:	0f 00 00 f6 	b 60 <WI_drawShowNextLoc+0x34c>
   40f94:	19 00 00 a8 	load_32 s0, (s25)
   40f98:	00 08 00 11 	cmpne_i s0, s0, 2
   40f9c:	c0 09 00 f4 	bnz s0, 312 <WI_drawShowNextLoc+0x454>
   40fa0:	52 ff ff f7 	b -696 <WI_drawShowNextLoc+0x68>
   40fa4:	02 00 00 4f 	movehi s0, 2
   40fa8:	20 24 00 0f 	move s1, 9
   40fac:	3e 10 00 88 	store_32 s1, 4(sp)
   40fb0:	00 34 7e 00 	or s0, s0, 8077
   40fb4:	1e 00 00 88 	store_32 s0, (sp)
   40fb8:	87 43 00 f8 	call 69148 <printf>
   40fbc:	00 0c 00 4f 	movehi s0, 96
   40fc0:	00 70 28 00 	or s0, s0, 2588
   40fc4:	00 00 00 a8 	load_32 s0, (s0)
   40fc8:	60 fe ff f3 	bz s0, -52 <WI_drawShowNextLoc+0x314>
   40fcc:	1a 00 00 a8 	load_32 s0, (s26)
   40fd0:	23 00 00 4f 	movehi s1, 3
   40fd4:	60 0c 00 4f 	movehi s3, 96
   40fd8:	80 00 00 0f 	move s4, 0
   40fdc:	21 d0 59 00 	or s1, s1, 5748
   40fe0:	40 30 00 a8 	load_32 s2, 12(s0)
   40fe4:	63 90 28 00 	or s3, s3, 2596
   40fe8:	00 00 00 a8 	load_32 s0, (s0)
   40fec:	a0 04 00 0f 	move s5, 1
   40ff0:	00 20 01 07 	mull_i s0, s0, 72
   40ff4:	01 00 50 c0 	add_i s0, s1, s0
   40ff8:	22 0c 00 0b 	shl s1, s2, 3
   40ffc:	20 80 50 c0 	add_i s1, s0, s1
   41000:	01 00 00 a8 	load_32 s0, (s1)
   41004:	21 10 00 a8 	load_32 s1, 4(s1)
   41008:	c0 00 f2 c0 	move s6, s4
   4100c:	e4 08 00 0b 	shl s7, s4, 2
   41010:	e3 80 53 c0 	add_i s7, s3, s7
   41014:	e7 00 00 a8 	load_32 s7, (s7)
   41018:	07 11 00 a6 	load_s16 s8, 4(s7)
   4101c:	27 19 00 a6 	load_s16 s9, 6(s7)
   41020:	47 01 00 a6 	load_s16 s10, (s7)
   41024:	e7 08 00 a6 	load_s16 s7, 2(s7)
   41028:	00 01 64 c0 	sub_i s8, s0, s8
   4102c:	21 81 64 c0 	sub_i s9, s1, s9
   41030:	69 01 04 c0 	or s11, s9, s8
   41034:	08 01 55 c0 	add_i s8, s8, s10
   41038:	e9 80 53 c0 	add_i s7, s9, s7
   4103c:	4b fd ff 12 	cmpgt_i s10, s11, -1
   41040:	08 01 05 14 	cmplt_i s8, s8, 320
   41044:	e7 20 03 14 	cmplt_i s7, s7, 200
   41048:	0a 01 14 c0 	and s8, s10, s8
   4104c:	e8 80 13 c0 	and s7, s8, s7
   41050:	07 fd ff 03 	xor s8, s7, -1
   41054:	27 01 00 11 	cmpne_i s9, s7, 0
   41058:	e0 80 f2 c0 	move s7, s5
   4105c:	08 05 00 01 	and s8, s8, 1
   41060:	84 00 54 c0 	add_i s4, s4, s8
   41064:	49 00 00 f4 	bnz s9, 8 <WI_drawShowNextLoc+0x3ec>
   41068:	e0 00 f3 c0 	move s7, s6
   4106c:	c4 08 00 10 	cmpeq_i s6, s4, 2
   41070:	66 00 00 f4 	bnz s6, 12 <WI_drawShowNextLoc+0x3fc>
   41074:	c0 80 f3 c0 	move s6, s7
   41078:	a7 fc ff f3 	bz s7, -108 <WI_drawShowNextLoc+0x38c>
   4107c:	87 01 00 f2 	bz s7, 48 <WI_drawShowNextLoc+0x42c>
   41080:	a4 04 00 16 	cmpgt_u s5, s4, 1
   41084:	45 01 00 f4 	bnz s5, 40 <WI_drawShowNextLoc+0x42c>
   41088:	44 08 00 0b 	shl s2, s4, 2
   4108c:	43 00 51 c0 	add_i s2, s3, s2
   41090:	62 00 00 a8 	load_32 s3, (s2)
   41094:	40 00 00 0f 	move s2, 0
   41098:	0c 14 00 f8 	call 20528 <V_DrawPatch>
   4109c:	19 00 00 a8 	load_32 s0, (s25)
   410a0:	00 08 00 11 	cmpne_i s0, s0, 2
   410a4:	80 01 00 f4 	bnz s0, 48 <WI_drawShowNextLoc+0x454>
   410a8:	10 ff ff f7 	b -960 <WI_drawShowNextLoc+0x68>
   410ac:	22 00 00 4f 	movehi s1, 2
   410b0:	02 04 00 05 	add_i s0, s2, 1
   410b4:	1e 10 00 88 	store_32 s0, 4(sp)
   410b8:	01 34 7e 00 	or s0, s1, 8077
   410bc:	1e 00 00 88 	store_32 s0, (sp)
   410c0:	45 43 00 f8 	call 68884 <printf>
   410c4:	19 00 00 a8 	load_32 s0, (s25)
   410c8:	00 08 00 11 	cmpne_i s0, s0, 2
   410cc:	40 00 00 f4 	bnz s0, 8 <WI_drawShowNextLoc+0x454>
   410d0:	06 ff ff f7 	b -1000 <WI_drawShowNextLoc+0x68>
   410d4:	00 0c 00 4f 	movehi s0, 96
   410d8:	20 03 00 0f 	move s25, 0
   410dc:	00 40 27 00 	or s0, s0, 2512
   410e0:	60 00 00 a8 	load_32 s3, (s0)
   410e4:	03 00 00 a6 	load_s16 s0, (s3)
   410e8:	40 80 fc c0 	move s2, s25
   410ec:	18 00 60 c0 	sub_i s0, s24, s0
   410f0:	20 7c 00 0a 	shr s1, s0, 31
   410f4:	00 80 50 c0 	add_i s0, s0, s1
   410f8:	20 08 00 0f 	move s1, 2
   410fc:	00 04 00 09 	ashr s0, s0, 1
   41100:	f2 13 00 f8 	call 20424 <V_DrawPatch>
   41104:	00 0c 00 4f 	movehi s0, 96
   41108:	20 0c 00 4f 	movehi s1, 96
   4110c:	00 10 27 00 	or s0, s0, 2500
   41110:	21 20 27 00 	or s1, s1, 2504
   41114:	00 00 00 a8 	load_32 s0, (s0)
   41118:	21 00 00 a8 	load_32 s1, (s1)
   4111c:	21 30 00 a8 	load_32 s1, 12(s1)
   41120:	21 08 00 0b 	shl s1, s1, 2
   41124:	00 80 50 c0 	add_i s0, s0, s1
   41128:	60 00 00 a8 	load_32 s3, (s0)
   4112c:	03 08 00 a6 	load_s16 s0, 2(s3)
   41130:	43 00 00 a6 	load_s16 s2, (s3)
   41134:	00 14 00 07 	mull_i s0, s0, 5
   41138:	20 7c 00 09 	ashr s1, s0, 31
   4113c:	21 78 00 0a 	shr s1, s1, 30
   41140:	00 80 50 c0 	add_i s0, s0, s1
   41144:	38 00 61 c0 	sub_i s1, s24, s2
   41148:	00 08 00 09 	ashr s0, s0, 2
   4114c:	41 7c 00 0a 	shr s2, s1, 31
   41150:	41 00 51 c0 	add_i s2, s1, s2
   41154:	20 08 00 05 	add_i s1, s0, 2
   41158:	02 04 00 09 	ashr s0, s2, 1
   4115c:	40 80 fc c0 	move s2, s25
   41160:	da 13 00 f8 	call 20328 <V_DrawPatch>
   41164:	fe b3 01 a8 	load_32 ra, 108(sp)
   41168:	7e c3 01 a8 	load_32 s27, 112(sp)
   4116c:	5e d3 01 a8 	load_32 s26, 116(sp)
   41170:	3e e3 01 a8 	load_32 s25, 120(sp)
   41174:	1e f3 01 a8 	load_32 s24, 124(sp)
   41178:	de 03 02 05 	add_i sp, sp, 128
   4117c:	1f 00 00 f0 	ret

0000000000041180 WI_drawNoState:
   41180:	de 03 ff 05 	add_i sp, sp, -64
   41184:	fe f3 00 88 	store_32 ra, 60(sp)
   41188:	00 0c 00 4f 	movehi s0, 96
   4118c:	20 04 00 0f 	move s1, 1
   41190:	00 70 28 00 	or s0, s0, 2588
   41194:	20 00 00 88 	store_32 s1, (s0)
   41198:	ba fe ff f9 	call -1304 <WI_drawShowNextLoc>
   4119c:	fe f3 00 a8 	load_32 ra, 60(sp)
   411a0:	de 03 01 05 	add_i sp, sp, 64
   411a4:	1f 00 00 f0 	ret

00000000000411a8 WI_fragSum:
   411a8:	20 0c 00 4f 	movehi s1, 96
   411ac:	5b 04 00 4f 	movehi s2, 59
   411b0:	21 b0 28 00 	or s1, s1, 2604
   411b4:	62 00 02 00 	or s3, s2, 128
   411b8:	40 00 00 0f 	move s2, 0
   411bc:	21 00 00 a8 	load_32 s1, (s1)
   411c0:	83 00 00 a8 	load_32 s4, (s3)
   411c4:	a0 00 00 f2 	bz s0, 20 <WI_fragSum+0x30>
   411c8:	84 00 00 f2 	bz s4, 16 <WI_fragSum+0x30>
   411cc:	40 a0 00 07 	mull_i s2, s0, 40
   411d0:	41 00 51 c0 	add_i s2, s1, s2
   411d4:	42 50 00 a8 	load_32 s2, 20(s2)
   411d8:	83 10 00 a8 	load_32 s4, 4(s3)
   411dc:	a0 04 00 10 	cmpeq_i s5, s0, 1
   411e0:	c5 00 00 f4 	bnz s5, 24 <WI_fragSum+0x50>
   411e4:	a4 00 00 f2 	bz s4, 20 <WI_fragSum+0x50>
   411e8:	80 a0 00 07 	mull_i s4, s0, 40
   411ec:	81 00 52 c0 	add_i s4, s1, s4
   411f0:	84 60 00 a8 	load_32 s4, 24(s4)
   411f4:	44 00 51 c0 	add_i s2, s4, s2
   411f8:	83 20 00 a8 	load_32 s4, 8(s3)
   411fc:	a0 08 00 10 	cmpeq_i s5, s0, 2
   41200:	c5 00 00 f4 	bnz s5, 24 <WI_fragSum+0x70>
   41204:	a4 00 00 f2 	bz s4, 20 <WI_fragSum+0x70>
   41208:	80 a0 00 07 	mull_i s4, s0, 40
   4120c:	81 00 52 c0 	add_i s4, s1, s4
   41210:	84 70 00 a8 	load_32 s4, 28(s4)
   41214:	44 00 51 c0 	add_i s2, s4, s2
   41218:	63 30 00 a8 	load_32 s3, 12(s3)
   4121c:	80 0c 00 10 	cmpeq_i s4, s0, 3
   41220:	c4 00 00 f4 	bnz s4, 24 <WI_fragSum+0x90>
   41224:	a3 00 00 f2 	bz s3, 20 <WI_fragSum+0x90>
   41228:	60 a0 00 07 	mull_i s3, s0, 40
   4122c:	61 80 51 c0 	add_i s3, s1, s3
   41230:	63 80 00 a8 	load_32 s3, 32(s3)
   41234:	43 00 51 c0 	add_i s2, s3, s2
   41238:	60 a0 00 07 	mull_i s3, s0, 40
   4123c:	21 80 51 c0 	add_i s1, s1, s3
   41240:	00 08 00 0b 	shl s0, s0, 2
   41244:	01 00 50 c0 	add_i s0, s1, s0
   41248:	00 50 00 a8 	load_32 s0, 20(s0)
   4124c:	02 00 60 c0 	sub_i s0, s2, s0
   41250:	1f 00 00 f0 	ret

0000000000041254 WI_initDeathmatchStats:
   41254:	de 03 ff 05 	add_i sp, sp, -64
   41258:	fe f3 00 88 	store_32 ra, 60(sp)
   4125c:	20 0c 00 4f 	movehi s1, 96
   41260:	00 0c 00 4f 	movehi s0, 96
   41264:	60 0c 00 4f 	movehi s3, 96
   41268:	21 50 28 00 	or s1, s1, 2580
   4126c:	40 60 27 00 	or s2, s0, 2520
   41270:	00 00 00 0f 	move s0, 0
   41274:	9b 04 00 4f 	movehi s4, 59
   41278:	02 00 00 88 	store_32 s0, (s2)
   4127c:	40 04 00 0f 	move s2, 1
   41280:	01 00 00 82 	store_8 s0, (s1)
   41284:	23 c0 28 00 	or s1, s3, 2608
   41288:	60 0c 00 4f 	movehi s3, 96
   4128c:	41 00 00 88 	store_32 s2, (s1)
   41290:	40 8c 00 0f 	move s2, 35
   41294:	23 d0 28 00 	or s1, s3, 2612
   41298:	64 00 02 00 	or s3, s4, 128
   4129c:	41 00 00 88 	store_32 s2, (s1)
   412a0:	23 00 00 a8 	load_32 s1, (s3)
   412a4:	41 00 00 f4 	bnz s1, 8 <WI_initDeathmatchStats+0x58>
   412a8:	4c 00 00 f6 	b 304 <WI_initDeathmatchStats+0x184>
   412ac:	40 0c 00 4f 	movehi s2, 96
   412b0:	82 e0 28 00 	or s4, s2, 2616
   412b4:	04 00 00 88 	store_32 s0, (s4)
   412b8:	43 10 00 a8 	load_32 s2, 4(s3)
   412bc:	42 00 00 f2 	bz s2, 8 <WI_initDeathmatchStats+0x70>
   412c0:	04 10 00 88 	store_32 s0, 4(s4)
   412c4:	a3 20 00 a8 	load_32 s5, 8(s3)
   412c8:	45 00 00 f2 	bz s5, 8 <WI_initDeathmatchStats+0x7c>
   412cc:	04 20 00 88 	store_32 s0, 8(s4)
   412d0:	a3 30 00 a8 	load_32 s5, 12(s3)
   412d4:	45 00 00 f2 	bz s5, 8 <WI_initDeathmatchStats+0x88>
   412d8:	04 30 00 88 	store_32 s0, 12(s4)
   412dc:	80 0c 00 4f 	movehi s4, 96
   412e0:	84 e0 29 00 	or s4, s4, 2680
   412e4:	04 00 00 88 	store_32 s0, (s4)
   412e8:	42 00 00 f4 	bnz s2, 8 <WI_initDeathmatchStats+0x9c>
   412ec:	3d 00 00 f6 	b 244 <WI_initDeathmatchStats+0x18c>
   412f0:	81 00 00 f2 	bz s1, 16 <WI_initDeathmatchStats+0xac>
   412f4:	80 0c 00 4f 	movehi s4, 96
   412f8:	84 e0 28 00 	or s4, s4, 2616
   412fc:	04 40 00 88 	store_32 s0, 16(s4)
   41300:	80 0c 00 4f 	movehi s4, 96
   41304:	a4 e0 28 00 	or s5, s4, 2616
   41308:	05 50 00 88 	store_32 s0, 20(s5)
   4130c:	83 20 00 a8 	load_32 s4, 8(s3)
   41310:	44 00 00 f2 	bz s4, 8 <WI_initDeathmatchStats+0xc4>
   41314:	05 60 00 88 	store_32 s0, 24(s5)
   41318:	c3 30 00 a8 	load_32 s6, 12(s3)
   4131c:	46 00 00 f2 	bz s6, 8 <WI_initDeathmatchStats+0xd0>
   41320:	05 70 00 88 	store_32 s0, 28(s5)
   41324:	a0 0c 00 4f 	movehi s5, 96
   41328:	a5 e0 29 00 	or s5, s5, 2680
   4132c:	05 10 00 88 	store_32 s0, 4(s5)
   41330:	44 00 00 f4 	bnz s4, 8 <WI_initDeathmatchStats+0xe4>
   41334:	2d 00 00 f6 	b 180 <WI_initDeathmatchStats+0x194>
   41338:	81 00 00 f2 	bz s1, 16 <WI_initDeathmatchStats+0xf4>
   4133c:	a0 0c 00 4f 	movehi s5, 96
   41340:	a5 e0 28 00 	or s5, s5, 2616
   41344:	05 80 00 88 	store_32 s0, 32(s5)
   41348:	82 00 00 f2 	bz s2, 16 <WI_initDeathmatchStats+0x104>
   4134c:	a0 0c 00 4f 	movehi s5, 96
   41350:	a5 e0 28 00 	or s5, s5, 2616
   41354:	05 90 00 88 	store_32 s0, 36(s5)
   41358:	a0 0c 00 4f 	movehi s5, 96
   4135c:	a5 e0 28 00 	or s5, s5, 2616
   41360:	05 a0 00 88 	store_32 s0, 40(s5)
   41364:	63 30 00 a8 	load_32 s3, 12(s3)
   41368:	43 00 00 f2 	bz s3, 8 <WI_initDeathmatchStats+0x11c>
   4136c:	05 b0 00 88 	store_32 s0, 44(s5)
   41370:	a0 0c 00 4f 	movehi s5, 96
   41374:	a5 e0 29 00 	or s5, s5, 2680
   41378:	05 20 00 88 	store_32 s0, 8(s5)
   4137c:	c3 03 00 f2 	bz s3, 120 <WI_initDeathmatchStats+0x1a0>
   41380:	81 00 00 f2 	bz s1, 16 <WI_initDeathmatchStats+0x13c>
   41384:	20 0c 00 4f 	movehi s1, 96
   41388:	21 e0 28 00 	or s1, s1, 2616
   4138c:	01 c0 00 88 	store_32 s0, 48(s1)
   41390:	82 00 00 f2 	bz s2, 16 <WI_initDeathmatchStats+0x14c>
   41394:	20 0c 00 4f 	movehi s1, 96
   41398:	21 e0 28 00 	or s1, s1, 2616
   4139c:	01 d0 00 88 	store_32 s0, 52(s1)
   413a0:	84 00 00 f2 	bz s4, 16 <WI_initDeathmatchStats+0x15c>
   413a4:	20 0c 00 4f 	movehi s1, 96
   413a8:	21 e0 28 00 	or s1, s1, 2616
   413ac:	01 e0 00 88 	store_32 s0, 56(s1)
   413b0:	20 0c 00 4f 	movehi s1, 96
   413b4:	40 0c 00 4f 	movehi s2, 96
   413b8:	21 e0 28 00 	or s1, s1, 2616
   413bc:	42 e0 29 00 	or s2, s2, 2680
   413c0:	01 f0 00 88 	store_32 s0, 60(s1)
   413c4:	02 30 00 88 	store_32 s0, 12(s2)
   413c8:	8f f8 ff f9 	call -7620 <WI_initAnimatedBack>
   413cc:	fe f3 00 a8 	load_32 ra, 60(sp)
   413d0:	de 03 01 05 	add_i sp, sp, 64
   413d4:	1f 00 00 f0 	ret
   413d8:	43 10 00 a8 	load_32 s2, 4(s3)
   413dc:	a2 f8 ff f5 	bnz s2, -236 <WI_initDeathmatchStats+0x9c>
   413e0:	83 20 00 a8 	load_32 s4, 8(s3)
   413e4:	a4 fa ff f5 	bnz s4, -172 <WI_initDeathmatchStats+0xe4>
   413e8:	63 30 00 a8 	load_32 s3, 12(s3)
   413ec:	43 00 00 f2 	bz s3, 8 <WI_initDeathmatchStats+0x1a0>
   413f0:	e4 ff ff f7 	b -112 <WI_initDeathmatchStats+0x12c>
   413f4:	84 f8 ff f9 	call -7664 <WI_initAnimatedBack>
   413f8:	fe f3 00 a8 	load_32 ra, 60(sp)
   413fc:	de 03 01 05 	add_i sp, sp, 64
   41400:	1f 00 00 f0 	ret

0000000000041404 WI_updateDeathmatchStats:
   41404:	de 03 ff 05 	add_i sp, sp, -64
   41408:	1e f3 00 88 	store_32 s24, 60(sp)
   4140c:	3e e3 00 88 	store_32 s25, 56(sp)
   41410:	fe d3 00 88 	store_32 ra, 52(sp)
   41414:	c9 f8 ff f9 	call -7388 <WI_updateAnimatedBack>
   41418:	00 0c 00 4f 	movehi s0, 96
   4141c:	20 53 28 00 	or s25, s0, 2580
   41420:	00 0c 00 4f 	movehi s0, 96
   41424:	39 00 00 a0 	load_u8 s1, (s25)
   41428:	00 c3 28 00 	or s24, s0, 2608
   4142c:	18 00 00 a8 	load_32 s0, (s24)
   41430:	41 04 00 11 	cmpne_i s2, s1, 1
   41434:	42 0d 00 f4 	bnz s2, 424 <WI_updateDeathmatchStats+0x1d8>
   41438:	40 10 00 10 	cmpeq_i s2, s0, 4
   4143c:	02 0d 00 f4 	bnz s2, 416 <WI_updateDeathmatchStats+0x1d8>
   41440:	00 0c 00 4f 	movehi s0, 96
   41444:	3b 04 00 4f 	movehi s1, 59
   41448:	c0 00 00 0f 	move s6, 0
   4144c:	d9 00 00 82 	store_8 s6, (s25)
   41450:	00 b0 28 00 	or s0, s0, 2604
   41454:	61 00 02 00 	or s3, s1, 128
   41458:	00 00 00 a8 	load_32 s0, (s0)
   4145c:	83 00 00 a8 	load_32 s4, (s3)
   41460:	43 10 00 a8 	load_32 s2, 4(s3)
   41464:	23 20 00 a8 	load_32 s1, 8(s3)
   41468:	63 30 00 a8 	load_32 s3, 12(s3)
   4146c:	44 00 00 f4 	bnz s4, 8 <WI_updateDeathmatchStats+0x70>
   41470:	03 01 00 f6 	b 1036 <WI_updateDeathmatchStats+0x478>
   41474:	80 0c 00 4f 	movehi s4, 96
   41478:	a0 50 00 a8 	load_32 s5, 20(s0)
   4147c:	84 e0 28 00 	or s4, s4, 2616
   41480:	a4 00 00 88 	store_32 s5, (s4)
   41484:	62 00 00 f2 	bz s2, 12 <WI_updateDeathmatchStats+0x8c>
   41488:	a0 60 00 a8 	load_32 s5, 24(s0)
   4148c:	a4 10 00 88 	store_32 s5, 4(s4)
   41490:	61 00 00 f2 	bz s1, 12 <WI_updateDeathmatchStats+0x98>
   41494:	a0 70 00 a8 	load_32 s5, 28(s0)
   41498:	a4 20 00 88 	store_32 s5, 8(s4)
   4149c:	63 00 00 f2 	bz s3, 12 <WI_updateDeathmatchStats+0xa4>
   414a0:	a0 80 00 a8 	load_32 s5, 32(s0)
   414a4:	a4 30 00 88 	store_32 s5, 12(s4)
   414a8:	42 00 00 f2 	bz s2, 8 <WI_updateDeathmatchStats+0xac>
   414ac:	c0 60 00 a8 	load_32 s6, 24(s0)
   414b0:	61 00 00 f2 	bz s1, 12 <WI_updateDeathmatchStats+0xb8>
   414b4:	a0 70 00 a8 	load_32 s5, 28(s0)
   414b8:	c5 00 53 c0 	add_i s6, s5, s6
   414bc:	63 00 00 f2 	bz s3, 12 <WI_updateDeathmatchStats+0xc4>
   414c0:	a0 80 00 a8 	load_32 s5, 32(s0)
   414c4:	c5 00 53 c0 	add_i s6, s5, s6
   414c8:	a0 0c 00 4f 	movehi s5, 96
   414cc:	e0 50 00 a8 	load_32 s7, 20(s0)
   414d0:	a5 e0 29 00 	or s5, s5, 2680
   414d4:	c6 80 63 c0 	sub_i s6, s6, s7
   414d8:	c5 00 00 88 	store_32 s6, (s5)
   414dc:	a2 02 00 f2 	bz s2, 84 <WI_updateDeathmatchStats+0x12c>
   414e0:	c0 f0 00 a8 	load_32 s6, 60(s0)
   414e4:	c4 40 00 88 	store_32 s6, 16(s4)
   414e8:	c0 00 01 a8 	load_32 s6, 64(s0)
   414ec:	c4 50 00 88 	store_32 s6, 20(s4)
   414f0:	61 00 00 f2 	bz s1, 12 <WI_updateDeathmatchStats+0xf8>
   414f4:	c0 10 01 a8 	load_32 s6, 68(s0)
   414f8:	c4 60 00 88 	store_32 s6, 24(s4)
   414fc:	63 00 00 f2 	bz s3, 12 <WI_updateDeathmatchStats+0x104>
   41500:	c0 20 01 a8 	load_32 s6, 72(s0)
   41504:	c4 70 00 88 	store_32 s6, 28(s4)
   41508:	c0 f0 00 a8 	load_32 s6, 60(s0)
   4150c:	61 00 00 f2 	bz s1, 12 <WI_updateDeathmatchStats+0x114>
   41510:	e0 10 01 a8 	load_32 s7, 68(s0)
   41514:	c7 00 53 c0 	add_i s6, s7, s6
   41518:	63 00 00 f2 	bz s3, 12 <WI_updateDeathmatchStats+0x120>
   4151c:	e0 20 01 a8 	load_32 s7, 72(s0)
   41520:	c7 00 53 c0 	add_i s6, s7, s6
   41524:	e0 00 01 a8 	load_32 s7, 64(s0)
   41528:	c6 80 63 c0 	sub_i s6, s6, s7
   4152c:	c5 10 00 88 	store_32 s6, 4(s5)
   41530:	a1 02 00 f2 	bz s1, 84 <WI_updateDeathmatchStats+0x180>
   41534:	c0 90 01 a8 	load_32 s6, 100(s0)
   41538:	c4 80 00 88 	store_32 s6, 32(s4)
   4153c:	62 00 00 f2 	bz s2, 12 <WI_updateDeathmatchStats+0x144>
   41540:	c0 a0 01 a8 	load_32 s6, 104(s0)
   41544:	c4 90 00 88 	store_32 s6, 36(s4)
   41548:	c0 b0 01 a8 	load_32 s6, 108(s0)
   4154c:	c4 a0 00 88 	store_32 s6, 40(s4)
   41550:	63 00 00 f2 	bz s3, 12 <WI_updateDeathmatchStats+0x158>
   41554:	c0 c0 01 a8 	load_32 s6, 112(s0)
   41558:	c4 b0 00 88 	store_32 s6, 44(s4)
   4155c:	c0 90 01 a8 	load_32 s6, 100(s0)
   41560:	62 00 00 f2 	bz s2, 12 <WI_updateDeathmatchStats+0x168>
   41564:	e0 a0 01 a8 	load_32 s7, 104(s0)
   41568:	c7 00 53 c0 	add_i s6, s7, s6
   4156c:	63 00 00 f2 	bz s3, 12 <WI_updateDeathmatchStats+0x174>
   41570:	e0 c0 01 a8 	load_32 s7, 112(s0)
   41574:	c7 00 53 c0 	add_i s6, s7, s6
   41578:	e0 b0 01 a8 	load_32 s7, 108(s0)
   4157c:	c6 80 63 c0 	sub_i s6, s6, s7
   41580:	c5 20 00 88 	store_32 s6, 8(s5)
   41584:	63 20 00 f2 	bz s3, 1036 <WI_updateDeathmatchStats+0x58c>
   41588:	60 30 02 a8 	load_32 s3, 140(s0)
   4158c:	64 c0 00 88 	store_32 s3, 48(s4)
   41590:	62 00 00 f2 	bz s2, 12 <WI_updateDeathmatchStats+0x198>
   41594:	60 40 02 a8 	load_32 s3, 144(s0)
   41598:	64 d0 00 88 	store_32 s3, 52(s4)
   4159c:	61 00 00 f2 	bz s1, 12 <WI_updateDeathmatchStats+0x1a4>
   415a0:	60 50 02 a8 	load_32 s3, 148(s0)
   415a4:	64 e0 00 88 	store_32 s3, 56(s4)
   415a8:	60 60 02 a8 	load_32 s3, 152(s0)
   415ac:	64 f0 00 88 	store_32 s3, 60(s4)
   415b0:	60 30 02 a8 	load_32 s3, 140(s0)
   415b4:	62 00 00 f2 	bz s2, 12 <WI_updateDeathmatchStats+0x1bc>
   415b8:	40 40 02 a8 	load_32 s2, 144(s0)
   415bc:	62 80 51 c0 	add_i s3, s2, s3
   415c0:	61 00 00 f2 	bz s1, 12 <WI_updateDeathmatchStats+0x1c8>
   415c4:	20 50 02 a8 	load_32 s1, 148(s0)
   415c8:	61 80 51 c0 	add_i s3, s1, s3
   415cc:	00 60 02 a8 	load_32 s0, 152(s0)
   415d0:	03 00 60 c0 	sub_i s0, s3, s0
   415d4:	05 30 00 88 	store_32 s0, 12(s5)
   415d8:	ee 00 00 f6 	b 952 <WI_updateDeathmatchStats+0x58c>
   415dc:	40 10 00 10 	cmpeq_i s2, s0, 4
   415e0:	82 1e 00 f4 	bnz s2, 976 <WI_updateDeathmatchStats+0x5ac>
   415e4:	20 08 00 11 	cmpne_i s1, s0, 2
   415e8:	c1 20 00 f4 	bnz s1, 1048 <WI_updateDeathmatchStats+0x5fc>
   415ec:	00 0c 00 4f 	movehi s0, 96
   415f0:	00 50 27 00 	or s0, s0, 2516
   415f4:	00 00 00 a0 	load_u8 s0, (s0)
   415f8:	00 0c 00 01 	and s0, s0, 3
   415fc:	80 00 00 f4 	bnz s0, 16 <WI_updateDeathmatchStats+0x208>
   41600:	00 00 00 0f 	move s0, 0
   41604:	20 04 00 0f 	move s1, 1
   41608:	77 2b 00 f8 	call 44508 <S_StartSound>
   4160c:	00 0c 00 4f 	movehi s0, 96
   41610:	3b 04 00 4f 	movehi s1, 59
   41614:	40 b0 28 00 	or s2, s0, 2604
   41618:	01 00 02 00 	or s0, s1, 128
   4161c:	22 00 00 a8 	load_32 s1, (s2)
   41620:	80 01 00 a8 	load_32 s12, (s0)
   41624:	40 10 00 a8 	load_32 s2, 4(s0)
   41628:	60 20 00 a8 	load_32 s3, 8(s0)
   4162c:	80 30 00 a8 	load_32 s4, 12(s0)
   41630:	8c 21 00 f2 	bz s12, 1072 <WI_updateDeathmatchStats+0x65c>
   41634:	00 0d 00 4f 	movehi s8, 96
   41638:	a0 0c 00 4f 	movehi s5, 96
   4163c:	c0 00 00 0f 	move s6, 0
   41640:	08 e1 29 00 	or s8, s8, 2680
   41644:	e5 e0 28 00 	or s7, s5, 2616
   41648:	a0 00 f3 c0 	move s5, s6
   4164c:	20 8d 01 0f 	move s9, 99
   41650:	40 75 fe 0f 	move s10, -99
   41654:	60 01 f3 c0 	move s11, s6
   41658:	ac 10 00 f2 	bz s12, 532 <WI_updateDeathmatchStats+0x468>
   4165c:	8b 11 00 0b 	shl s12, s11, 4
   41660:	a7 01 56 c0 	add_i s13, s7, s12
   41664:	8b a1 00 07 	mull_i s12, s11, 40
   41668:	81 01 56 c0 	add_i s12, s1, s12
   4166c:	cd 01 00 a8 	load_32 s14, (s13)
   41670:	ec 51 00 a8 	load_32 s15, 20(s12)
   41674:	0e 82 07 c1 	cmpeq_i s16, s14, s15
   41678:	50 02 00 f4 	bnz s16, 72 <WI_updateDeathmatchStats+0x2bc>
   4167c:	ef 01 00 14 	cmplt_i s15, s15, 0
   41680:	a0 04 00 0f 	move s5, 1
   41684:	cf 00 00 f4 	bnz s15, 24 <WI_updateDeathmatchStats+0x298>
   41688:	e0 81 f2 c0 	move s15, s5
   4168c:	cf 01 57 c0 	add_i s14, s15, s14
   41690:	ee 8d 01 14 	cmplt_i s15, s14, 99
   41694:	ef 00 00 f4 	bnz s15, 28 <WI_updateDeathmatchStats+0x2ac>
   41698:	05 00 00 f6 	b 20 <WI_updateDeathmatchStats+0x2a8>
   4169c:	e0 fd ff 0f 	move s15, -1
   416a0:	cf 01 57 c0 	add_i s14, s15, s14
   416a4:	ee 8d 01 14 	cmplt_i s15, s14, 99
   416a8:	4f 00 00 f4 	bnz s15, 8 <WI_updateDeathmatchStats+0x2ac>
   416ac:	c0 8d 01 0f 	move s14, 99
   416b0:	ee 75 fe 12 	cmpgt_i s15, s14, -99
   416b4:	4f 00 00 f4 	bnz s15, 8 <WI_updateDeathmatchStats+0x2b8>
   416b8:	c0 75 fe 0f 	move s14, -99
   416bc:	cd 01 00 88 	store_32 s14, (s13)
   416c0:	e2 02 00 f2 	bz s2, 92 <WI_updateDeathmatchStats+0x318>
   416c4:	cd 11 00 a8 	load_32 s14, 4(s13)
   416c8:	ec 61 00 a8 	load_32 s15, 24(s12)
   416cc:	0e 82 07 c1 	cmpeq_i s16, s14, s15
   416d0:	70 02 00 f4 	bnz s16, 76 <WI_updateDeathmatchStats+0x318>
   416d4:	ef 01 00 14 	cmplt_i s15, s15, 0
   416d8:	a0 04 00 0f 	move s5, 1
   416dc:	cf 00 00 f4 	bnz s15, 24 <WI_updateDeathmatchStats+0x2f0>
   416e0:	e0 81 f2 c0 	move s15, s5
   416e4:	cf 01 57 c0 	add_i s14, s15, s14
   416e8:	ee 8d 01 14 	cmplt_i s15, s14, 99
   416ec:	ef 00 00 f4 	bnz s15, 28 <WI_updateDeathmatchStats+0x304>
   416f0:	05 00 00 f6 	b 20 <WI_updateDeathmatchStats+0x300>
   416f4:	e0 fd ff 0f 	move s15, -1
   416f8:	cf 01 57 c0 	add_i s14, s15, s14
   416fc:	ee 8d 01 14 	cmplt_i s15, s14, 99
   41700:	4f 00 00 f4 	bnz s15, 8 <WI_updateDeathmatchStats+0x304>
   41704:	c0 8d 01 0f 	move s14, 99
   41708:	0e 76 fe 12 	cmpgt_i s16, s14, -99
   4170c:	ed 11 00 05 	add_i s15, s13, 4
   41710:	50 00 00 f4 	bnz s16, 8 <WI_updateDeathmatchStats+0x314>
   41714:	c0 75 fe 0f 	move s14, -99
   41718:	cf 01 00 88 	store_32 s14, (s15)
   4171c:	e3 02 00 f2 	bz s3, 92 <WI_updateDeathmatchStats+0x374>
   41720:	cd 21 00 a8 	load_32 s14, 8(s13)
   41724:	ec 71 00 a8 	load_32 s15, 28(s12)
   41728:	0e 82 07 c1 	cmpeq_i s16, s14, s15
   4172c:	70 02 00 f4 	bnz s16, 76 <WI_updateDeathmatchStats+0x374>
   41730:	ef 01 00 14 	cmplt_i s15, s15, 0
   41734:	a0 04 00 0f 	move s5, 1
   41738:	cf 00 00 f4 	bnz s15, 24 <WI_updateDeathmatchStats+0x34c>
   4173c:	e0 81 f2 c0 	move s15, s5
   41740:	cf 01 57 c0 	add_i s14, s15, s14
   41744:	ee 8d 01 14 	cmplt_i s15, s14, 99
   41748:	ef 00 00 f4 	bnz s15, 28 <WI_updateDeathmatchStats+0x360>
   4174c:	05 00 00 f6 	b 20 <WI_updateDeathmatchStats+0x35c>
   41750:	e0 fd ff 0f 	move s15, -1
   41754:	cf 01 57 c0 	add_i s14, s15, s14
   41758:	ee 8d 01 14 	cmplt_i s15, s14, 99
   4175c:	4f 00 00 f4 	bnz s15, 8 <WI_updateDeathmatchStats+0x360>
   41760:	c0 8d 01 0f 	move s14, 99
   41764:	0e 76 fe 12 	cmpgt_i s16, s14, -99
   41768:	ed 21 00 05 	add_i s15, s13, 8
   4176c:	50 00 00 f4 	bnz s16, 8 <WI_updateDeathmatchStats+0x370>
   41770:	c0 75 fe 0f 	move s14, -99
   41774:	cf 01 00 88 	store_32 s14, (s15)
   41778:	e4 02 00 f2 	bz s4, 92 <WI_updateDeathmatchStats+0x3d0>
   4177c:	cd 31 00 a8 	load_32 s14, 12(s13)
   41780:	ec 81 00 a8 	load_32 s15, 32(s12)
   41784:	0e 82 07 c1 	cmpeq_i s16, s14, s15
   41788:	70 02 00 f4 	bnz s16, 76 <WI_updateDeathmatchStats+0x3d0>
   4178c:	ef 01 00 14 	cmplt_i s15, s15, 0
   41790:	a0 04 00 0f 	move s5, 1
   41794:	cf 00 00 f4 	bnz s15, 24 <WI_updateDeathmatchStats+0x3a8>
   41798:	e0 81 f2 c0 	move s15, s5
   4179c:	cf 01 57 c0 	add_i s14, s15, s14
   417a0:	ee 8d 01 14 	cmplt_i s15, s14, 99
   417a4:	ef 00 00 f4 	bnz s15, 28 <WI_updateDeathmatchStats+0x3bc>
   417a8:	05 00 00 f6 	b 20 <WI_updateDeathmatchStats+0x3b8>
   417ac:	e0 fd ff 0f 	move s15, -1
   417b0:	cf 01 57 c0 	add_i s14, s15, s14
   417b4:	ee 8d 01 14 	cmplt_i s15, s14, 99
   417b8:	4f 00 00 f4 	bnz s15, 8 <WI_updateDeathmatchStats+0x3bc>
   417bc:	c0 8d 01 0f 	move s14, 99
   417c0:	ee 75 fe 12 	cmpgt_i s15, s14, -99
   417c4:	ad 31 00 05 	add_i s13, s13, 12
   417c8:	4f 00 00 f4 	bnz s15, 8 <WI_updateDeathmatchStats+0x3cc>
   417cc:	c0 75 fe 0f 	move s14, -99
   417d0:	cd 01 00 88 	store_32 s14, (s13)
   417d4:	a0 01 f3 c0 	move s13, s6
   417d8:	4b 00 00 f2 	bz s11, 8 <WI_updateDeathmatchStats+0x3dc>
   417dc:	ac 51 00 a8 	load_32 s13, 20(s12)
   417e0:	cb 05 00 10 	cmpeq_i s14, s11, 1
   417e4:	8e 00 00 f4 	bnz s14, 16 <WI_updateDeathmatchStats+0x3f0>
   417e8:	62 00 00 f2 	bz s2, 12 <WI_updateDeathmatchStats+0x3f0>
   417ec:	cc 61 00 a8 	load_32 s14, 24(s12)
   417f0:	ae 81 56 c0 	add_i s13, s14, s13
   417f4:	cb 09 00 10 	cmpeq_i s14, s11, 2
   417f8:	8e 00 00 f4 	bnz s14, 16 <WI_updateDeathmatchStats+0x404>
   417fc:	63 00 00 f2 	bz s3, 12 <WI_updateDeathmatchStats+0x404>
   41800:	cc 71 00 a8 	load_32 s14, 28(s12)
   41804:	ae 81 56 c0 	add_i s13, s14, s13
   41808:	cb 0d 00 10 	cmpeq_i s14, s11, 3
   4180c:	8e 00 00 f4 	bnz s14, 16 <WI_updateDeathmatchStats+0x418>
   41810:	64 00 00 f2 	bz s4, 12 <WI_updateDeathmatchStats+0x418>
   41814:	cc 81 00 a8 	load_32 s14, 32(s12)
   41818:	ae 81 56 c0 	add_i s13, s14, s13
   4181c:	cb 09 00 0b 	shl s14, s11, 2
   41820:	8c 01 57 c0 	add_i s12, s12, s14
   41824:	8c 51 00 a8 	load_32 s12, 20(s12)
   41828:	8d 01 66 c0 	sub_i s12, s13, s12
   4182c:	ac 8d 01 14 	cmplt_i s13, s12, 99
   41830:	4d 00 00 f4 	bnz s13, 8 <WI_updateDeathmatchStats+0x434>
   41834:	80 81 f4 c0 	move s12, s9
   41838:	ec 75 fe 12 	cmpgt_i s15, s12, -99
   4183c:	a8 01 57 c0 	add_i s13, s8, s14
   41840:	4f 00 00 f4 	bnz s15, 8 <WI_updateDeathmatchStats+0x444>
   41844:	80 01 f5 c0 	move s12, s10
   41848:	8d 01 00 88 	store_32 s12, (s13)
   4184c:	6b 05 00 05 	add_i s11, s11, 1
   41850:	8b 0d 00 16 	cmpgt_u s12, s11, 3
   41854:	cc 21 00 f4 	bnz s12, 1080 <WI_updateDeathmatchStats+0x888>
   41858:	8b 09 00 0b 	shl s12, s11, 2
   4185c:	80 01 56 c0 	add_i s12, s0, s12
   41860:	8c 01 00 a8 	load_32 s12, (s12)
   41864:	4c 00 00 f2 	bz s12, 8 <WI_updateDeathmatchStats+0x468>
   41868:	7d ff ff f7 	b -524 <WI_updateDeathmatchStats+0x258>
   4186c:	6b 05 00 05 	add_i s11, s11, 1
   41870:	8b 0d 00 16 	cmpgt_u s12, s11, 3
   41874:	cc 20 00 f4 	bnz s12, 1048 <WI_updateDeathmatchStats+0x888>
   41878:	f8 ff ff f7 	b -32 <WI_updateDeathmatchStats+0x454>
   4187c:	a2 02 00 f2 	bz s2, 84 <WI_updateDeathmatchStats+0x4cc>
   41880:	80 0c 00 4f 	movehi s4, 96
   41884:	a0 00 01 a8 	load_32 s5, 64(s0)
   41888:	84 e0 28 00 	or s4, s4, 2616
   4188c:	a4 50 00 88 	store_32 s5, 20(s4)
   41890:	61 00 00 f2 	bz s1, 12 <WI_updateDeathmatchStats+0x498>
   41894:	a0 10 01 a8 	load_32 s5, 68(s0)
   41898:	a4 60 00 88 	store_32 s5, 24(s4)
   4189c:	63 00 00 f2 	bz s3, 12 <WI_updateDeathmatchStats+0x4a4>
   418a0:	a0 20 01 a8 	load_32 s5, 72(s0)
   418a4:	a4 70 00 88 	store_32 s5, 28(s4)
   418a8:	a1 20 00 f2 	bz s1, 1044 <WI_updateDeathmatchStats+0x8b8>
   418ac:	80 10 01 a8 	load_32 s4, 68(s0)
   418b0:	63 00 00 f2 	bz s3, 12 <WI_updateDeathmatchStats+0x4b8>
   418b4:	a0 20 01 a8 	load_32 s5, 72(s0)
   418b8:	85 00 52 c0 	add_i s4, s5, s4
   418bc:	a0 0c 00 4f 	movehi s5, 96
   418c0:	c0 00 01 a8 	load_32 s6, 64(s0)
   418c4:	a5 e0 29 00 	or s5, s5, 2680
   418c8:	84 00 63 c0 	sub_i s4, s4, s6
   418cc:	85 10 00 88 	store_32 s4, 4(s5)
   418d0:	e1 02 00 f2 	bz s1, 92 <WI_updateDeathmatchStats+0x528>
   418d4:	a2 00 00 f2 	bz s2, 20 <WI_updateDeathmatchStats+0x4e4>
   418d8:	80 0c 00 4f 	movehi s4, 96
   418dc:	a0 a0 01 a8 	load_32 s5, 104(s0)
   418e0:	84 e0 28 00 	or s4, s4, 2616
   418e4:	a4 90 00 88 	store_32 s5, 36(s4)
   418e8:	80 0c 00 4f 	movehi s4, 96
   418ec:	a0 b0 01 a8 	load_32 s5, 108(s0)
   418f0:	84 e0 28 00 	or s4, s4, 2616
   418f4:	a4 a0 00 88 	store_32 s5, 40(s4)
   418f8:	63 00 00 f2 	bz s3, 12 <WI_updateDeathmatchStats+0x500>
   418fc:	a0 c0 01 a8 	load_32 s5, 112(s0)
   41900:	a4 b0 00 88 	store_32 s5, 44(s4)
   41904:	22 1e 00 f2 	bz s2, 964 <WI_updateDeathmatchStats+0x8c4>
   41908:	80 a0 01 a8 	load_32 s4, 104(s0)
   4190c:	63 00 00 f2 	bz s3, 12 <WI_updateDeathmatchStats+0x514>
   41910:	a0 c0 01 a8 	load_32 s5, 112(s0)
   41914:	85 00 52 c0 	add_i s4, s5, s4
   41918:	a0 0c 00 4f 	movehi s5, 96
   4191c:	c0 b0 01 a8 	load_32 s6, 108(s0)
   41920:	a5 e0 29 00 	or s5, s5, 2680
   41924:	84 00 63 c0 	sub_i s4, s4, s6
   41928:	85 20 00 88 	store_32 s4, 8(s5)
   4192c:	23 03 00 f2 	bz s3, 100 <WI_updateDeathmatchStats+0x58c>
   41930:	a2 00 00 f2 	bz s2, 20 <WI_updateDeathmatchStats+0x540>
   41934:	60 0c 00 4f 	movehi s3, 96
   41938:	80 40 02 a8 	load_32 s4, 144(s0)
   4193c:	63 e0 28 00 	or s3, s3, 2616
   41940:	83 d0 00 88 	store_32 s4, 52(s3)
   41944:	a1 00 00 f2 	bz s1, 20 <WI_updateDeathmatchStats+0x554>
   41948:	60 0c 00 4f 	movehi s3, 96
   4194c:	80 50 02 a8 	load_32 s4, 148(s0)
   41950:	63 e0 28 00 	or s3, s3, 2616
   41954:	83 e0 00 88 	store_32 s4, 56(s3)
   41958:	60 0c 00 4f 	movehi s3, 96
   4195c:	80 60 02 a8 	load_32 s4, 152(s0)
   41960:	63 e0 28 00 	or s3, s3, 2616
   41964:	83 f0 00 88 	store_32 s4, 60(s3)
   41968:	62 1b 00 f2 	bz s2, 876 <WI_updateDeathmatchStats+0x8d0>
   4196c:	40 40 02 a8 	load_32 s2, 144(s0)
   41970:	61 00 00 f2 	bz s1, 12 <WI_updateDeathmatchStats+0x578>
   41974:	20 50 02 a8 	load_32 s1, 148(s0)
   41978:	41 00 51 c0 	add_i s2, s1, s2
   4197c:	20 0c 00 4f 	movehi s1, 96
   41980:	00 60 02 a8 	load_32 s0, 152(s0)
   41984:	21 e0 29 00 	or s1, s1, 2680
   41988:	02 00 60 c0 	sub_i s0, s2, s0
   4198c:	01 30 00 88 	store_32 s0, 12(s1)
   41990:	00 00 00 0f 	move s0, 0
   41994:	20 48 01 0f 	move s1, 82
   41998:	93 2a 00 f8 	call 43596 <S_StartSound>
   4199c:	00 10 00 0f 	move s0, 4
   419a0:	18 00 00 88 	store_32 s0, (s24)
   419a4:	19 00 00 a0 	load_u8 s0, (s25)
   419a8:	60 00 00 f4 	bnz s0, 12 <WI_updateDeathmatchStats+0x5b0>
   419ac:	bf 00 00 f6 	b 764 <WI_updateDeathmatchStats+0x8a4>
   419b0:	c1 17 00 f2 	bz s1, 760 <WI_updateDeathmatchStats+0x8a4>
   419b4:	00 03 00 0f 	move s24, 0
   419b8:	20 7c 00 0f 	move s1, 31
   419bc:	00 00 fc c0 	move s0, s24
   419c0:	89 2a 00 f8 	call 43556 <S_StartSound>
   419c4:	0b 04 00 4f 	movehi s0, 43
   419c8:	00 00 40 00 	or s0, s0, 4096
   419cc:	00 00 00 a8 	load_32 s0, (s0)
   419d0:	00 08 00 11 	cmpne_i s0, s0, 2
   419d4:	00 03 00 f4 	bnz s0, 96 <WI_updateDeathmatchStats+0x630>
   419d8:	00 0c 00 4f 	movehi s0, 96
   419dc:	20 0c 00 4f 	movehi s1, 96
   419e0:	40 fc ff 0f 	move s2, -1
   419e4:	00 60 27 00 	or s0, s0, 2520
   419e8:	40 00 00 88 	store_32 s2, (s0)
   419ec:	01 60 28 00 	or s0, s1, 2584
   419f0:	19 03 00 82 	store_8 s24, (s25)
   419f4:	20 28 00 0f 	move s1, 10
   419f8:	20 00 00 88 	store_32 s1, (s0)
   419fc:	ab 00 00 f6 	b 684 <WI_updateDeathmatchStats+0x8a4>
   41a00:	20 04 00 01 	and s1, s0, 1
   41a04:	21 15 00 f2 	bz s1, 676 <WI_updateDeathmatchStats+0x8a4>
   41a08:	20 0c 00 4f 	movehi s1, 96
   41a0c:	21 d0 28 00 	or s1, s1, 2612
   41a10:	41 00 00 a8 	load_32 s2, (s1)
   41a14:	42 fc ff 05 	add_i s2, s2, -1
   41a18:	41 00 00 88 	store_32 s2, (s1)
   41a1c:	62 14 00 f4 	bnz s2, 652 <WI_updateDeathmatchStats+0x8a4>
   41a20:	00 04 00 05 	add_i s0, s0, 1
   41a24:	18 00 00 88 	store_32 s0, (s24)
   41a28:	00 8c 00 0f 	move s0, 35
   41a2c:	01 00 00 88 	store_32 s0, (s1)
   41a30:	9e 00 00 f6 	b 632 <WI_updateDeathmatchStats+0x8a4>
   41a34:	00 0c 00 4f 	movehi s0, 96
   41a38:	20 0c 00 4f 	movehi s1, 96
   41a3c:	40 04 00 0f 	move s2, 1
   41a40:	00 60 27 00 	or s0, s0, 2520
   41a44:	40 00 00 88 	store_32 s2, (s0)
   41a48:	01 60 28 00 	or s0, s1, 2584
   41a4c:	19 03 00 82 	store_8 s24, (s25)
   41a50:	20 30 02 0f 	move s1, 140
   41a54:	20 00 00 88 	store_32 s1, (s0)
   41a58:	eb f6 ff f9 	call -9300 <WI_initAnimatedBack>
   41a5c:	93 00 00 f6 	b 588 <WI_updateDeathmatchStats+0x8a4>
   41a60:	c0 00 00 0f 	move s6, 0
   41a64:	e0 00 f3 c0 	move s7, s6
   41a68:	a0 00 f3 c0 	move s5, s6
   41a6c:	86 0f 00 f2 	bz s6, 496 <WI_updateDeathmatchStats+0x858>
   41a70:	a2 03 00 f2 	bz s2, 116 <WI_updateDeathmatchStats+0x6e0>
   41a74:	00 0d 00 4f 	movehi s8, 96
   41a78:	27 11 00 0b 	shl s9, s7, 4
   41a7c:	08 e1 28 00 	or s8, s8, 2616
   41a80:	08 81 54 c0 	add_i s8, s8, s9
   41a84:	27 a1 00 07 	mull_i s9, s7, 40
   41a88:	41 81 54 c0 	add_i s10, s1, s9
   41a8c:	28 11 00 a8 	load_32 s9, 4(s8)
   41a90:	4a 61 00 a8 	load_32 s10, 24(s10)
   41a94:	69 01 05 c1 	cmpeq_i s11, s9, s10
   41a98:	6b 02 00 f4 	bnz s11, 76 <WI_updateDeathmatchStats+0x6e0>
   41a9c:	4a 01 00 14 	cmplt_i s10, s10, 0
   41aa0:	a0 04 00 0f 	move s5, 1
   41aa4:	ca 00 00 f4 	bnz s10, 24 <WI_updateDeathmatchStats+0x6b8>
   41aa8:	40 81 f2 c0 	move s10, s5
   41aac:	2a 81 54 c0 	add_i s9, s10, s9
   41ab0:	49 8d 01 14 	cmplt_i s10, s9, 99
   41ab4:	ea 00 00 f4 	bnz s10, 28 <WI_updateDeathmatchStats+0x6cc>
   41ab8:	05 00 00 f6 	b 20 <WI_updateDeathmatchStats+0x6c8>
   41abc:	40 fd ff 0f 	move s10, -1
   41ac0:	2a 81 54 c0 	add_i s9, s10, s9
   41ac4:	49 8d 01 14 	cmplt_i s10, s9, 99
   41ac8:	4a 00 00 f4 	bnz s10, 8 <WI_updateDeathmatchStats+0x6cc>
   41acc:	20 8d 01 0f 	move s9, 99
   41ad0:	49 75 fe 12 	cmpgt_i s10, s9, -99
   41ad4:	08 11 00 05 	add_i s8, s8, 4
   41ad8:	4a 00 00 f4 	bnz s10, 8 <WI_updateDeathmatchStats+0x6dc>
   41adc:	20 75 fe 0f 	move s9, -99
   41ae0:	28 01 00 88 	store_32 s9, (s8)
   41ae4:	a3 03 00 f2 	bz s3, 116 <WI_updateDeathmatchStats+0x754>
   41ae8:	00 0d 00 4f 	movehi s8, 96
   41aec:	27 11 00 0b 	shl s9, s7, 4
   41af0:	08 e1 28 00 	or s8, s8, 2616
   41af4:	08 81 54 c0 	add_i s8, s8, s9
   41af8:	27 a1 00 07 	mull_i s9, s7, 40
   41afc:	41 81 54 c0 	add_i s10, s1, s9
   41b00:	28 21 00 a8 	load_32 s9, 8(s8)
   41b04:	4a 71 00 a8 	load_32 s10, 28(s10)
   41b08:	69 01 05 c1 	cmpeq_i s11, s9, s10
   41b0c:	6b 02 00 f4 	bnz s11, 76 <WI_updateDeathmatchStats+0x754>
   41b10:	4a 01 00 14 	cmplt_i s10, s10, 0
   41b14:	a0 04 00 0f 	move s5, 1
   41b18:	ca 00 00 f4 	bnz s10, 24 <WI_updateDeathmatchStats+0x72c>
   41b1c:	40 81 f2 c0 	move s10, s5
   41b20:	2a 81 54 c0 	add_i s9, s10, s9
   41b24:	49 8d 01 14 	cmplt_i s10, s9, 99
   41b28:	ea 00 00 f4 	bnz s10, 28 <WI_updateDeathmatchStats+0x740>
   41b2c:	05 00 00 f6 	b 20 <WI_updateDeathmatchStats+0x73c>
   41b30:	40 fd ff 0f 	move s10, -1
   41b34:	2a 81 54 c0 	add_i s9, s10, s9
   41b38:	49 8d 01 14 	cmplt_i s10, s9, 99
   41b3c:	4a 00 00 f4 	bnz s10, 8 <WI_updateDeathmatchStats+0x740>
   41b40:	20 8d 01 0f 	move s9, 99
   41b44:	49 75 fe 12 	cmpgt_i s10, s9, -99
   41b48:	08 21 00 05 	add_i s8, s8, 8
   41b4c:	4a 00 00 f4 	bnz s10, 8 <WI_updateDeathmatchStats+0x750>
   41b50:	20 75 fe 0f 	move s9, -99
   41b54:	28 01 00 88 	store_32 s9, (s8)
   41b58:	a4 03 00 f2 	bz s4, 116 <WI_updateDeathmatchStats+0x7c8>
   41b5c:	00 0d 00 4f 	movehi s8, 96
   41b60:	27 11 00 0b 	shl s9, s7, 4
   41b64:	08 e1 28 00 	or s8, s8, 2616
   41b68:	08 81 54 c0 	add_i s8, s8, s9
   41b6c:	27 a1 00 07 	mull_i s9, s7, 40
   41b70:	41 81 54 c0 	add_i s10, s1, s9
   41b74:	28 31 00 a8 	load_32 s9, 12(s8)
   41b78:	4a 81 00 a8 	load_32 s10, 32(s10)
   41b7c:	69 01 05 c1 	cmpeq_i s11, s9, s10
   41b80:	6b 02 00 f4 	bnz s11, 76 <WI_updateDeathmatchStats+0x7c8>
   41b84:	4a 01 00 14 	cmplt_i s10, s10, 0
   41b88:	a0 04 00 0f 	move s5, 1
   41b8c:	ca 00 00 f4 	bnz s10, 24 <WI_updateDeathmatchStats+0x7a0>
   41b90:	40 81 f2 c0 	move s10, s5
   41b94:	2a 81 54 c0 	add_i s9, s10, s9
   41b98:	49 8d 01 14 	cmplt_i s10, s9, 99
   41b9c:	ea 00 00 f4 	bnz s10, 28 <WI_updateDeathmatchStats+0x7b4>
   41ba0:	05 00 00 f6 	b 20 <WI_updateDeathmatchStats+0x7b0>
   41ba4:	40 fd ff 0f 	move s10, -1
   41ba8:	2a 81 54 c0 	add_i s9, s10, s9
   41bac:	49 8d 01 14 	cmplt_i s10, s9, 99
   41bb0:	4a 00 00 f4 	bnz s10, 8 <WI_updateDeathmatchStats+0x7b4>
   41bb4:	20 8d 01 0f 	move s9, 99
   41bb8:	49 75 fe 12 	cmpgt_i s10, s9, -99
   41bbc:	08 31 00 05 	add_i s8, s8, 12
   41bc0:	4a 00 00 f4 	bnz s10, 8 <WI_updateDeathmatchStats+0x7c4>
   41bc4:	20 75 fe 0f 	move s9, -99
   41bc8:	28 01 00 88 	store_32 s9, (s8)
   41bcc:	07 05 00 10 	cmpeq_i s8, s7, 1
   41bd0:	68 05 00 f4 	bnz s8, 172 <WI_updateDeathmatchStats+0x878>
   41bd4:	42 05 00 f2 	bz s2, 168 <WI_updateDeathmatchStats+0x878>
   41bd8:	07 a1 00 07 	mull_i s8, s7, 40
   41bdc:	01 01 54 c0 	add_i s8, s1, s8
   41be0:	08 61 00 a8 	load_32 s8, 24(s8)
   41be4:	27 09 00 10 	cmpeq_i s9, s7, 2
   41be8:	c9 00 00 f4 	bnz s9, 24 <WI_updateDeathmatchStats+0x7fc>
   41bec:	a3 00 00 f2 	bz s3, 20 <WI_updateDeathmatchStats+0x7fc>
   41bf0:	27 a1 00 07 	mull_i s9, s7, 40
   41bf4:	21 81 54 c0 	add_i s9, s1, s9
   41bf8:	29 71 00 a8 	load_32 s9, 28(s9)
   41bfc:	09 01 54 c0 	add_i s8, s9, s8
   41c00:	27 0d 00 10 	cmpeq_i s9, s7, 3
   41c04:	c9 00 00 f4 	bnz s9, 24 <WI_updateDeathmatchStats+0x818>
   41c08:	a4 00 00 f2 	bz s4, 20 <WI_updateDeathmatchStats+0x818>
   41c0c:	27 a1 00 07 	mull_i s9, s7, 40
   41c10:	21 81 54 c0 	add_i s9, s1, s9
   41c14:	29 81 00 a8 	load_32 s9, 32(s9)
   41c18:	09 01 54 c0 	add_i s8, s9, s8
   41c1c:	27 a1 00 07 	mull_i s9, s7, 40
   41c20:	41 81 54 c0 	add_i s10, s1, s9
   41c24:	27 09 00 0b 	shl s9, s7, 2
   41c28:	4a 81 54 c0 	add_i s10, s10, s9
   41c2c:	4a 51 00 a8 	load_32 s10, 20(s10)
   41c30:	08 01 65 c0 	sub_i s8, s8, s10
   41c34:	40 0d 00 4f 	movehi s10, 96
   41c38:	68 8d 01 14 	cmplt_i s11, s8, 99
   41c3c:	4a e1 29 00 	or s10, s10, 2680
   41c40:	4b 00 00 f4 	bnz s11, 8 <WI_updateDeathmatchStats+0x844>
   41c44:	00 8d 01 0f 	move s8, 99
   41c48:	68 75 fe 12 	cmpgt_i s11, s8, -99
   41c4c:	2a 81 54 c0 	add_i s9, s10, s9
   41c50:	4b 00 00 f4 	bnz s11, 8 <WI_updateDeathmatchStats+0x854>
   41c54:	00 75 fe 0f 	move s8, -99
   41c58:	09 01 00 88 	store_32 s8, (s9)
   41c5c:	e7 04 00 05 	add_i s7, s7, 1
   41c60:	07 0d 00 16 	cmpgt_u s8, s7, 3
   41c64:	48 01 00 f4 	bnz s8, 40 <WI_updateDeathmatchStats+0x888>
   41c68:	07 09 00 0b 	shl s8, s7, 2
   41c6c:	00 01 54 c0 	add_i s8, s0, s8
   41c70:	08 01 00 a8 	load_32 s8, (s8)
   41c74:	48 ff ff f3 	bz s8, -24 <WI_updateDeathmatchStats+0x858>
   41c78:	7e ff ff f7 	b -520 <WI_updateDeathmatchStats+0x66c>
   41c7c:	00 01 f3 c0 	move s8, s6
   41c80:	27 09 00 10 	cmpeq_i s9, s7, 2
   41c84:	e9 fb ff f5 	bnz s9, -132 <WI_updateDeathmatchStats+0x7fc>
   41c88:	d9 ff ff f7 	b -156 <WI_updateDeathmatchStats+0x7e8>
   41c8c:	e5 00 00 f4 	bnz s5, 28 <WI_updateDeathmatchStats+0x8a4>
   41c90:	00 00 00 0f 	move s0, 0
   41c94:	20 48 01 0f 	move s1, 82
   41c98:	d3 29 00 f8 	call 42828 <S_StartSound>
   41c9c:	18 00 00 a8 	load_32 s0, (s24)
   41ca0:	00 04 00 05 	add_i s0, s0, 1
   41ca4:	18 00 00 88 	store_32 s0, (s24)
   41ca8:	fe d3 00 a8 	load_32 ra, 52(sp)
   41cac:	3e e3 00 a8 	load_32 s25, 56(sp)
   41cb0:	1e f3 00 a8 	load_32 s24, 60(sp)
   41cb4:	de 03 01 05 	add_i sp, sp, 64
   41cb8:	1f 00 00 f0 	ret
   41cbc:	80 00 00 0f 	move s4, 0
   41cc0:	e3 df ff f3 	bz s3, -1028 <WI_updateDeathmatchStats+0x4b8>
   41cc4:	fc fe ff f7 	b -1040 <WI_updateDeathmatchStats+0x4b0>
   41cc8:	80 00 00 0f 	move s4, 0
   41ccc:	63 e2 ff f3 	bz s3, -948 <WI_updateDeathmatchStats+0x514>
   41cd0:	10 ff ff f7 	b -960 <WI_updateDeathmatchStats+0x50c>
   41cd4:	40 00 00 0f 	move s2, 0
   41cd8:	21 e5 ff f3 	bz s1, -860 <WI_updateDeathmatchStats+0x578>
   41cdc:	26 ff ff f7 	b -872 <WI_updateDeathmatchStats+0x570>

0000000000041ce0 WI_drawDeathmatchStats:
   41ce0:	de 03 fe 05 	add_i sp, sp, -128
   41ce4:	1e f3 01 88 	store_32 s24, 124(sp)
   41ce8:	3e e3 01 88 	store_32 s25, 120(sp)
   41cec:	5e d3 01 88 	store_32 s26, 116(sp)
   41cf0:	7e c3 01 88 	store_32 s27, 112(sp)
   41cf4:	fe b3 01 88 	store_32 ra, 108(sp)
   41cf8:	00 0c 00 4f 	movehi s0, 96
   41cfc:	47 00 00 4f 	movehi s2, 7
   41d00:	20 20 02 00 	or s1, s0, 136
   41d04:	42 00 68 00 	or s2, s2, 6656
   41d08:	01 00 00 a8 	load_32 s0, (s1)
   41d0c:	21 10 00 a8 	load_32 s1, 4(s1)
   41d10:	fd 3f 00 f8 	call 65524 <memcpy>
   41d14:	60 03 00 0f 	move s27, 0
   41d18:	20 03 05 0f 	move s25, 320
   41d1c:	60 20 03 0f 	move s3, 200
   41d20:	00 80 fd c0 	move s0, s27
   41d24:	20 80 fd c0 	move s1, s27
   41d28:	40 80 fc c0 	move s2, s25
   41d2c:	61 10 00 f8 	call 16772 <V_MarkRect>
   41d30:	00 0c 00 4f 	movehi s0, 96
   41d34:	20 0c 00 4f 	movehi s1, 96
   41d38:	00 13 27 00 	or s24, s0, 2500
   41d3c:	41 23 27 00 	or s26, s1, 2504
   41d40:	18 00 00 a8 	load_32 s0, (s24)
   41d44:	3a 00 00 a8 	load_32 s1, (s26)
   41d48:	21 20 00 a8 	load_32 s1, 8(s1)
   41d4c:	21 08 00 0b 	shl s1, s1, 2
   41d50:	00 80 50 c0 	add_i s0, s0, s1
   41d54:	60 00 00 a8 	load_32 s3, (s0)
   41d58:	03 00 00 a6 	load_s16 s0, (s3)
   41d5c:	40 80 fd c0 	move s2, s27
   41d60:	19 00 60 c0 	sub_i s0, s25, s0
   41d64:	20 7c 00 0a 	shr s1, s0, 31
   41d68:	00 80 50 c0 	add_i s0, s0, s1
   41d6c:	20 08 00 0f 	move s1, 2
   41d70:	00 04 00 09 	ashr s0, s0, 1
   41d74:	d5 10 00 f8 	call 17236 <V_DrawPatch>
   41d78:	18 00 00 a8 	load_32 s0, (s24)
   41d7c:	3a 00 00 a8 	load_32 s1, (s26)
   41d80:	21 20 00 a8 	load_32 s1, 8(s1)
   41d84:	21 08 00 0b 	shl s1, s1, 2
   41d88:	00 80 50 c0 	add_i s0, s0, s1
   41d8c:	20 0c 00 4f 	movehi s1, 96
   41d90:	00 00 00 a8 	load_32 s0, (s0)
   41d94:	21 30 27 00 	or s1, s1, 2508
   41d98:	00 08 00 a6 	load_s16 s0, 2(s0)
   41d9c:	61 00 00 a8 	load_32 s3, (s1)
   41da0:	00 14 00 07 	mull_i s0, s0, 5
   41da4:	43 00 00 a6 	load_s16 s2, (s3)
   41da8:	20 7c 00 09 	ashr s1, s0, 31
   41dac:	21 78 00 0a 	shr s1, s1, 30
   41db0:	00 80 50 c0 	add_i s0, s0, s1
   41db4:	39 00 61 c0 	sub_i s1, s25, s2
   41db8:	00 08 00 09 	ashr s0, s0, 2
   41dbc:	41 7c 00 0a 	shr s2, s1, 31
   41dc0:	41 00 51 c0 	add_i s2, s1, s2
   41dc4:	20 08 00 05 	add_i s1, s0, 2
   41dc8:	02 04 00 09 	ashr s0, s2, 1
   41dcc:	40 80 fd c0 	move s2, s27
   41dd0:	be 10 00 f8 	call 17144 <V_DrawPatch>
   41dd4:	00 0c 00 4f 	movehi s0, 96
   41dd8:	00 20 2a 00 	or s0, s0, 2696
   41ddc:	60 00 00 a8 	load_32 s3, (s0)
   41de0:	03 00 00 a4 	load_u16 s0, (s3)
   41de4:	40 80 fd c0 	move s2, s27
   41de8:	20 3c 00 0a 	shr s1, s0, 15
   41dec:	00 80 50 c0 	add_i s0, s0, s1
   41df0:	20 34 04 0f 	move s1, 269
   41df4:	00 00 e0 c1 	sext_16 s0, s0
   41df8:	00 04 00 09 	ashr s0, s0, 1
   41dfc:	01 00 60 c0 	sub_i s0, s1, s0
   41e00:	20 b4 00 0f 	move s1, 45
   41e04:	b1 10 00 f8 	call 17092 <V_DrawPatch>
   41e08:	00 0c 00 4f 	movehi s0, 96
   41e0c:	20 90 01 0f 	move s1, 100
   41e10:	00 30 2a 00 	or s0, s0, 2700
   41e14:	60 00 00 a8 	load_32 s3, (s0)
   41e18:	00 28 00 0f 	move s0, 10
   41e1c:	40 80 fd c0 	move s2, s27
   41e20:	aa 10 00 f8 	call 17064 <V_DrawPatch>
   41e24:	00 0c 00 4f 	movehi s0, 96
   41e28:	20 c8 00 0f 	move s1, 50
   41e2c:	00 40 2a 00 	or s0, s0, 2704
   41e30:	60 00 00 a8 	load_32 s3, (s0)
   41e34:	00 14 00 0f 	move s0, 5
   41e38:	7e 83 01 88 	store_32 s27, 96(sp)
   41e3c:	40 80 fd c0 	move s2, s27
   41e40:	a2 10 00 f8 	call 17032 <V_DrawPatch>
   41e44:	1b 04 00 4f 	movehi s0, 59
   41e48:	80 00 02 00 	or s4, s0, 128
   41e4c:	04 00 00 a8 	load_32 s0, (s4)
   41e50:	9e 70 01 88 	store_32 s4, 92(sp)
   41e54:	00 04 00 f2 	bz s0, 128 <WI_drawDeathmatchStats+0x1f4>
   41e58:	00 0c 00 4f 	movehi s0, 96
   41e5c:	60 4b 01 0f 	move s27, 82
   41e60:	20 03 00 0f 	move s25, 0
   41e64:	00 53 2a 00 	or s24, s0, 2708
   41e68:	78 00 00 a8 	load_32 s3, (s24)
   41e6c:	03 00 00 a4 	load_u16 s0, (s3)
   41e70:	40 80 fc c0 	move s2, s25
   41e74:	20 3c 00 0a 	shr s1, s0, 15
   41e78:	00 80 50 c0 	add_i s0, s0, s1
   41e7c:	20 8c 00 0f 	move s1, 35
   41e80:	00 00 e0 c1 	sext_16 s0, s0
   41e84:	00 04 00 09 	ashr s0, s0, 1
   41e88:	1b 00 60 c0 	sub_i s0, s27, s0
   41e8c:	8f 10 00 f8 	call 16956 <V_DrawPatch>
   41e90:	78 00 00 a8 	load_32 s3, (s24)
   41e94:	40 ab 00 0f 	move s26, 42
   41e98:	03 00 00 a4 	load_u16 s0, (s3)
   41e9c:	40 80 fc c0 	move s2, s25
   41ea0:	20 3c 00 0a 	shr s1, s0, 15
   41ea4:	00 80 50 c0 	add_i s0, s0, s1
   41ea8:	20 10 01 0f 	move s1, 68
   41eac:	00 00 e0 c1 	sext_16 s0, s0
   41eb0:	00 04 00 09 	ashr s0, s0, 1
   41eb4:	1a 00 60 c0 	sub_i s0, s26, s0
   41eb8:	84 10 00 f8 	call 16912 <V_DrawPatch>
   41ebc:	00 0c 00 4f 	movehi s0, 96
   41ec0:	9e 70 01 a8 	load_32 s4, 92(sp)
   41ec4:	00 90 2a 00 	or s0, s0, 2724
   41ec8:	00 00 00 a8 	load_32 s0, (s0)
   41ecc:	40 00 00 f4 	bnz s0, 8 <WI_drawDeathmatchStats+0x1f4>
   41ed0:	41 00 00 f6 	b 260 <WI_drawDeathmatchStats+0x2f4>
   41ed4:	04 10 00 a8 	load_32 s0, 4(s4)
   41ed8:	c0 0b 00 f2 	bz s0, 376 <WI_drawDeathmatchStats+0x370>
   41edc:	00 0c 00 4f 	movehi s0, 96
   41ee0:	60 eb 01 0f 	move s27, 122
   41ee4:	20 03 00 0f 	move s25, 0
   41ee8:	00 53 2a 00 	or s24, s0, 2708
   41eec:	78 10 00 a8 	load_32 s3, 4(s24)
   41ef0:	03 00 00 a4 	load_u16 s0, (s3)
   41ef4:	40 80 fc c0 	move s2, s25
   41ef8:	20 3c 00 0a 	shr s1, s0, 15
   41efc:	00 80 50 c0 	add_i s0, s0, s1
   41f00:	20 8c 00 0f 	move s1, 35
   41f04:	00 00 e0 c1 	sext_16 s0, s0
   41f08:	00 04 00 09 	ashr s0, s0, 1
   41f0c:	1b 00 60 c0 	sub_i s0, s27, s0
   41f10:	6e 10 00 f8 	call 16824 <V_DrawPatch>
   41f14:	78 10 00 a8 	load_32 s3, 4(s24)
   41f18:	40 ab 00 0f 	move s26, 42
   41f1c:	03 00 00 a4 	load_u16 s0, (s3)
   41f20:	40 80 fc c0 	move s2, s25
   41f24:	20 3c 00 0a 	shr s1, s0, 15
   41f28:	00 80 50 c0 	add_i s0, s0, s1
   41f2c:	20 94 01 0f 	move s1, 101
   41f30:	00 00 e0 c1 	sext_16 s0, s0
   41f34:	00 04 00 09 	ashr s0, s0, 1
   41f38:	1a 00 60 c0 	sub_i s0, s26, s0
   41f3c:	63 10 00 f8 	call 16780 <V_DrawPatch>
   41f40:	00 0c 00 4f 	movehi s0, 96
   41f44:	9e 70 01 a8 	load_32 s4, 92(sp)
   41f48:	00 90 2a 00 	or s0, s0, 2724
   41f4c:	00 00 00 a8 	load_32 s0, (s0)
   41f50:	00 04 00 11 	cmpne_i s0, s0, 1
   41f54:	e0 07 00 f4 	bnz s0, 252 <WI_drawDeathmatchStats+0x370>
   41f58:	18 10 00 a8 	load_32 s0, 4(s24)
   41f5c:	20 03 00 0f 	move s25, 0
   41f60:	00 00 00 a4 	load_u16 s0, (s0)
   41f64:	20 3c 00 0a 	shr s1, s0, 15
   41f68:	00 80 50 c0 	add_i s0, s0, s1
   41f6c:	20 0c 00 4f 	movehi s1, 96
   41f70:	00 00 e0 c1 	sext_16 s0, s0
   41f74:	21 a0 2a 00 	or s1, s1, 2728
   41f78:	00 04 00 09 	ashr s0, s0, 1
   41f7c:	61 00 00 a8 	load_32 s3, (s1)
   41f80:	1b 00 60 c0 	sub_i s0, s27, s0
   41f84:	20 8c 00 0f 	move s1, 35
   41f88:	40 80 fc c0 	move s2, s25
   41f8c:	4f 10 00 f8 	call 16700 <V_DrawPatch>
   41f90:	18 10 00 a8 	load_32 s0, 4(s24)
   41f94:	00 00 00 a4 	load_u16 s0, (s0)
   41f98:	20 3c 00 0a 	shr s1, s0, 15
   41f9c:	00 80 50 c0 	add_i s0, s0, s1
   41fa0:	20 0c 00 4f 	movehi s1, 96
   41fa4:	00 00 e0 c1 	sext_16 s0, s0
   41fa8:	21 b0 2a 00 	or s1, s1, 2732
   41fac:	00 04 00 09 	ashr s0, s0, 1
   41fb0:	61 00 00 a8 	load_32 s3, (s1)
   41fb4:	1a 00 60 c0 	sub_i s0, s26, s0
   41fb8:	20 94 01 0f 	move s1, 101
   41fbc:	40 80 fc c0 	move s2, s25
   41fc0:	42 10 00 f8 	call 16648 <V_DrawPatch>
   41fc4:	9e 70 01 a8 	load_32 s4, 92(sp)
   41fc8:	04 20 00 a8 	load_32 s0, 8(s4)
   41fcc:	c0 0b 00 f2 	bz s0, 376 <WI_drawDeathmatchStats+0x464>
   41fd0:	22 00 00 f6 	b 136 <WI_drawDeathmatchStats+0x378>
   41fd4:	18 00 00 a8 	load_32 s0, (s24)
   41fd8:	20 03 00 0f 	move s25, 0
   41fdc:	00 00 00 a4 	load_u16 s0, (s0)
   41fe0:	20 3c 00 0a 	shr s1, s0, 15
   41fe4:	00 80 50 c0 	add_i s0, s0, s1
   41fe8:	20 0c 00 4f 	movehi s1, 96
   41fec:	00 00 e0 c1 	sext_16 s0, s0
   41ff0:	21 a0 2a 00 	or s1, s1, 2728
   41ff4:	00 04 00 09 	ashr s0, s0, 1
   41ff8:	61 00 00 a8 	load_32 s3, (s1)
   41ffc:	1b 00 60 c0 	sub_i s0, s27, s0
   42000:	20 8c 00 0f 	move s1, 35
   42004:	40 80 fc c0 	move s2, s25
   42008:	30 10 00 f8 	call 16576 <V_DrawPatch>
   4200c:	18 00 00 a8 	load_32 s0, (s24)
   42010:	00 00 00 a4 	load_u16 s0, (s0)
   42014:	20 3c 00 0a 	shr s1, s0, 15
   42018:	00 80 50 c0 	add_i s0, s0, s1
   4201c:	20 0c 00 4f 	movehi s1, 96
   42020:	00 00 e0 c1 	sext_16 s0, s0
   42024:	21 b0 2a 00 	or s1, s1, 2732
   42028:	00 04 00 09 	ashr s0, s0, 1
   4202c:	61 00 00 a8 	load_32 s3, (s1)
   42030:	1a 00 60 c0 	sub_i s0, s26, s0
   42034:	20 10 01 0f 	move s1, 68
   42038:	40 80 fc c0 	move s2, s25
   4203c:	23 10 00 f8 	call 16524 <V_DrawPatch>
   42040:	9e 70 01 a8 	load_32 s4, 92(sp)
   42044:	04 10 00 a8 	load_32 s0, 4(s4)
   42048:	40 00 00 f2 	bz s0, 8 <WI_drawDeathmatchStats+0x370>
   4204c:	a4 ff ff f7 	b -368 <WI_drawDeathmatchStats+0x1fc>
   42050:	04 20 00 a8 	load_32 s0, 8(s4)
   42054:	80 07 00 f2 	bz s0, 240 <WI_drawDeathmatchStats+0x464>
   42058:	00 0c 00 4f 	movehi s0, 96
   4205c:	60 8b 02 0f 	move s27, 162
   42060:	20 03 00 0f 	move s25, 0
   42064:	00 53 2a 00 	or s24, s0, 2708
   42068:	78 20 00 a8 	load_32 s3, 8(s24)
   4206c:	03 00 00 a4 	load_u16 s0, (s3)
   42070:	40 80 fc c0 	move s2, s25
   42074:	20 3c 00 0a 	shr s1, s0, 15
   42078:	00 80 50 c0 	add_i s0, s0, s1
   4207c:	20 8c 00 0f 	move s1, 35
   42080:	00 00 e0 c1 	sext_16 s0, s0
   42084:	00 04 00 09 	ashr s0, s0, 1
   42088:	1b 00 60 c0 	sub_i s0, s27, s0
   4208c:	0f 10 00 f8 	call 16444 <V_DrawPatch>
   42090:	78 20 00 a8 	load_32 s3, 8(s24)
   42094:	40 ab 00 0f 	move s26, 42
   42098:	03 00 00 a4 	load_u16 s0, (s3)
   4209c:	40 80 fc c0 	move s2, s25
   420a0:	20 3c 00 0a 	shr s1, s0, 15
   420a4:	00 80 50 c0 	add_i s0, s0, s1
   420a8:	20 18 02 0f 	move s1, 134
   420ac:	00 00 e0 c1 	sext_16 s0, s0
   420b0:	00 04 00 09 	ashr s0, s0, 1
   420b4:	1a 00 60 c0 	sub_i s0, s26, s0
   420b8:	04 10 00 f8 	call 16400 <V_DrawPatch>
   420bc:	00 0c 00 4f 	movehi s0, 96
   420c0:	9e 70 01 a8 	load_32 s4, 92(sp)
   420c4:	00 90 2a 00 	or s0, s0, 2724
   420c8:	00 00 00 a8 	load_32 s0, (s0)
   420cc:	00 08 00 11 	cmpne_i s0, s0, 2
   420d0:	a0 03 00 f4 	bnz s0, 116 <WI_drawDeathmatchStats+0x464>
   420d4:	18 20 00 a8 	load_32 s0, 8(s24)
   420d8:	20 03 00 0f 	move s25, 0
   420dc:	00 00 00 a4 	load_u16 s0, (s0)
   420e0:	20 3c 00 0a 	shr s1, s0, 15
   420e4:	00 80 50 c0 	add_i s0, s0, s1
   420e8:	20 0c 00 4f 	movehi s1, 96
   420ec:	00 00 e0 c1 	sext_16 s0, s0
   420f0:	21 a0 2a 00 	or s1, s1, 2728
   420f4:	00 04 00 09 	ashr s0, s0, 1
   420f8:	61 00 00 a8 	load_32 s3, (s1)
   420fc:	1b 00 60 c0 	sub_i s0, s27, s0
   42100:	20 8c 00 0f 	move s1, 35
   42104:	40 80 fc c0 	move s2, s25
   42108:	f0 0f 00 f8 	call 16320 <V_DrawPatch>
   4210c:	18 20 00 a8 	load_32 s0, 8(s24)
   42110:	00 00 00 a4 	load_u16 s0, (s0)
   42114:	20 3c 00 0a 	shr s1, s0, 15
   42118:	00 80 50 c0 	add_i s0, s0, s1
   4211c:	20 0c 00 4f 	movehi s1, 96
   42120:	00 00 e0 c1 	sext_16 s0, s0
   42124:	21 b0 2a 00 	or s1, s1, 2732
   42128:	00 04 00 09 	ashr s0, s0, 1
   4212c:	61 00 00 a8 	load_32 s3, (s1)
   42130:	1a 00 60 c0 	sub_i s0, s26, s0
   42134:	20 18 02 0f 	move s1, 134
   42138:	40 80 fc c0 	move s2, s25
   4213c:	e3 0f 00 f8 	call 16268 <V_DrawPatch>
   42140:	9e 70 01 a8 	load_32 s4, 92(sp)
   42144:	04 30 00 a8 	load_32 s0, 12(s4)
   42148:	80 07 00 f2 	bz s0, 240 <WI_drawDeathmatchStats+0x558>
   4214c:	00 0c 00 4f 	movehi s0, 96
   42150:	60 2b 03 0f 	move s27, 202
   42154:	20 03 00 0f 	move s25, 0
   42158:	00 53 2a 00 	or s24, s0, 2708
   4215c:	78 30 00 a8 	load_32 s3, 12(s24)
   42160:	03 00 00 a4 	load_u16 s0, (s3)
   42164:	40 80 fc c0 	move s2, s25
   42168:	20 3c 00 0a 	shr s1, s0, 15
   4216c:	00 80 50 c0 	add_i s0, s0, s1
   42170:	20 8c 00 0f 	move s1, 35
   42174:	00 00 e0 c1 	sext_16 s0, s0
   42178:	00 04 00 09 	ashr s0, s0, 1
   4217c:	1b 00 60 c0 	sub_i s0, s27, s0
   42180:	d2 0f 00 f8 	call 16200 <V_DrawPatch>
   42184:	78 30 00 a8 	load_32 s3, 12(s24)
   42188:	40 ab 00 0f 	move s26, 42
   4218c:	03 00 00 a4 	load_u16 s0, (s3)
   42190:	40 80 fc c0 	move s2, s25
   42194:	20 3c 00 0a 	shr s1, s0, 15
   42198:	00 80 50 c0 	add_i s0, s0, s1
   4219c:	20 9c 02 0f 	move s1, 167
   421a0:	00 00 e0 c1 	sext_16 s0, s0
   421a4:	00 04 00 09 	ashr s0, s0, 1
   421a8:	1a 00 60 c0 	sub_i s0, s26, s0
   421ac:	c7 0f 00 f8 	call 16156 <V_DrawPatch>
   421b0:	00 0c 00 4f 	movehi s0, 96
   421b4:	9e 70 01 a8 	load_32 s4, 92(sp)
   421b8:	00 90 2a 00 	or s0, s0, 2724
   421bc:	00 00 00 a8 	load_32 s0, (s0)
   421c0:	00 0c 00 11 	cmpne_i s0, s0, 3
   421c4:	a0 03 00 f4 	bnz s0, 116 <WI_drawDeathmatchStats+0x558>
   421c8:	18 30 00 a8 	load_32 s0, 12(s24)
   421cc:	20 03 00 0f 	move s25, 0
   421d0:	00 00 00 a4 	load_u16 s0, (s0)
   421d4:	20 3c 00 0a 	shr s1, s0, 15
   421d8:	00 80 50 c0 	add_i s0, s0, s1
   421dc:	20 0c 00 4f 	movehi s1, 96
   421e0:	00 00 e0 c1 	sext_16 s0, s0
   421e4:	21 a0 2a 00 	or s1, s1, 2728
   421e8:	00 04 00 09 	ashr s0, s0, 1
   421ec:	61 00 00 a8 	load_32 s3, (s1)
   421f0:	1b 00 60 c0 	sub_i s0, s27, s0
   421f4:	20 8c 00 0f 	move s1, 35
   421f8:	40 80 fc c0 	move s2, s25
   421fc:	b3 0f 00 f8 	call 16076 <V_DrawPatch>
   42200:	18 30 00 a8 	load_32 s0, 12(s24)
   42204:	00 00 00 a4 	load_u16 s0, (s0)
   42208:	20 3c 00 0a 	shr s1, s0, 15
   4220c:	00 80 50 c0 	add_i s0, s0, s1
   42210:	20 0c 00 4f 	movehi s1, 96
   42214:	00 00 e0 c1 	sext_16 s0, s0
   42218:	21 b0 2a 00 	or s1, s1, 2732
   4221c:	00 04 00 09 	ashr s0, s0, 1
   42220:	61 00 00 a8 	load_32 s3, (s1)
   42224:	1a 00 60 c0 	sub_i s0, s26, s0
   42228:	20 9c 02 0f 	move s1, 167
   4222c:	40 80 fc c0 	move s2, s25
   42230:	a6 0f 00 f8 	call 16024 <V_DrawPatch>
   42234:	9e 70 01 a8 	load_32 s4, 92(sp)
   42238:	00 0c 00 4f 	movehi s0, 96
   4223c:	40 0c 00 4f 	movehi s2, 96
   42240:	20 3b 01 0f 	move s25, 78
   42244:	a0 70 27 00 	or s5, s0, 2524
   42248:	05 00 00 a8 	load_32 s0, (s5)
   4224c:	00 00 00 a6 	load_s16 s0, (s0)
   42250:	20 34 04 05 	add_i s1, s0, 269
   42254:	3e f0 00 88 	store_32 s1, 60(sp)
   42258:	20 48 01 05 	add_i s1, s0, 82
   4225c:	3e e0 00 88 	store_32 s1, 56(sp)
   42260:	20 e8 01 05 	add_i s1, s0, 122
   42264:	3e d0 00 88 	store_32 s1, 52(sp)
   42268:	20 88 02 05 	add_i s1, s0, 162
   4226c:	3e c0 00 88 	store_32 s1, 48(sp)
   42270:	20 0c 00 4f 	movehi s1, 96
   42274:	00 28 03 05 	add_i s0, s0, 202
   42278:	1e b0 00 88 	store_32 s0, 44(sp)
   4227c:	01 e0 29 00 	or s0, s1, 2680
   42280:	1e 40 01 88 	store_32 s0, 80(sp)
   42284:	06 cc cc 4f 	movehi s0, 419430
   42288:	20 0c 00 4f 	movehi s1, 96
   4228c:	00 34 33 00 	or s0, s0, 3277
   42290:	1e 90 01 88 	store_32 s0, 100(sp)
   42294:	01 10 28 00 	or s0, s1, 2564
   42298:	1e 20 01 88 	store_32 s0, 72(sp)
   4229c:	02 e0 28 00 	or s0, s2, 2616
   422a0:	1e 60 01 88 	store_32 s0, 88(sp)
   422a4:	1e 83 01 a8 	load_32 s24, 96(sp)
   422a8:	be a0 01 88 	store_32 s5, 104(sp)
   422ac:	38 08 00 0b 	shl s1, s24, 2
   422b0:	04 80 50 c0 	add_i s0, s4, s1
   422b4:	00 00 00 a8 	load_32 s0, (s0)
   422b8:	e0 23 00 f2 	bz s0, 1148 <WI_drawDeathmatchStats+0xa54>
   422bc:	3e 50 01 88 	store_32 s1, 84(sp)
   422c0:	04 00 00 a8 	load_32 s0, (s4)
   422c4:	20 06 00 f2 	bz s0, 196 <WI_drawDeathmatchStats+0x6a8>
   422c8:	3e 60 01 a8 	load_32 s1, 88(sp)
   422cc:	18 10 00 0b 	shl s0, s24, 4
   422d0:	01 00 50 c0 	add_i s0, s1, s0
   422d4:	00 00 00 a8 	load_32 s0, (s0)
   422d8:	65 00 00 a8 	load_32 s3, (s5)
   422dc:	20 7c 00 09 	ashr s1, s0, 31
   422e0:	40 80 50 c0 	add_i s2, s0, s1
   422e4:	63 03 00 a6 	load_s16 s27, (s3)
   422e8:	22 80 30 c0 	xor s1, s2, s1
   422ec:	41 28 1f 10 	cmpeq_i s2, s1, 1994
   422f0:	c2 04 00 f4 	bnz s2, 152 <WI_drawDeathmatchStats+0x6a8>
   422f4:	5e 90 01 a8 	load_32 s2, 100(sp)
   422f8:	00 fc ff 12 	cmpgt_i s0, s0, -1
   422fc:	1e 30 01 88 	store_32 s0, 76(sp)
   42300:	1e e0 00 a8 	load_32 s0, 56(sp)
   42304:	41 00 81 c0 	mulh_u s2, s1, s2
   42308:	00 80 6d c0 	sub_i s0, s0, s27
   4230c:	1e 00 01 88 	store_32 s0, 64(sp)
   42310:	42 0f 00 0a 	shr s26, s2, 3
   42314:	5a 28 00 07 	mull_i s2, s26, 10
   42318:	21 00 61 c0 	sub_i s1, s1, s2
   4231c:	40 00 00 0f 	move s2, 0
   42320:	21 08 00 0b 	shl s1, s1, 2
   42324:	25 80 50 c0 	add_i s1, s5, s1
   42328:	61 00 00 a8 	load_32 s3, (s1)
   4232c:	5e 10 01 88 	store_32 s2, 68(sp)
   42330:	20 80 fc c0 	move s1, s25
   42334:	65 0f 00 f8 	call 15764 <V_DrawPatch>
   42338:	1e 90 01 a8 	load_32 s0, 100(sp)
   4233c:	3e a0 01 a8 	load_32 s1, 104(sp)
   42340:	1a 00 80 c0 	mulh_u s0, s26, s0
   42344:	00 0c 00 0a 	shr s0, s0, 3
   42348:	00 28 00 07 	mull_i s0, s0, 10
   4234c:	1a 00 60 c0 	sub_i s0, s26, s0
   42350:	00 08 00 0b 	shl s0, s0, 2
   42354:	01 00 50 c0 	add_i s0, s1, s0
   42358:	3e 00 01 a8 	load_32 s1, 64(sp)
   4235c:	60 00 00 a8 	load_32 s3, (s0)
   42360:	41 83 6d c0 	sub_i s26, s1, s27
   42364:	00 00 fd c0 	move s0, s26
   42368:	20 80 fc c0 	move s1, s25
   4236c:	5e 10 01 a8 	load_32 s2, 68(sp)
   42370:	56 0f 00 f8 	call 15704 <V_DrawPatch>
   42374:	be a0 01 a8 	load_32 s5, 104(sp)
   42378:	9e 70 01 a8 	load_32 s4, 92(sp)
   4237c:	1e 30 01 a8 	load_32 s0, 76(sp)
   42380:	40 00 00 f4 	bnz s0, 8 <WI_drawDeathmatchStats+0x6a8>
   42384:	3d 00 00 f6 	b 244 <WI_drawDeathmatchStats+0x798>
   42388:	04 10 00 a8 	load_32 s0, 4(s4)
   4238c:	c0 08 00 f2 	bz s0, 280 <WI_drawDeathmatchStats+0x7c4>
   42390:	3e 60 01 a8 	load_32 s1, 88(sp)
   42394:	18 10 00 0b 	shl s0, s24, 4
   42398:	01 00 50 c0 	add_i s0, s1, s0
   4239c:	00 10 00 a8 	load_32 s0, 4(s0)
   423a0:	65 00 00 a8 	load_32 s3, (s5)
   423a4:	20 7c 00 09 	ashr s1, s0, 31
   423a8:	40 80 50 c0 	add_i s2, s0, s1
   423ac:	63 03 00 a6 	load_s16 s27, (s3)
   423b0:	22 80 30 c0 	xor s1, s2, s1
   423b4:	41 28 1f 10 	cmpeq_i s2, s1, 1994
   423b8:	62 07 00 f4 	bnz s2, 236 <WI_drawDeathmatchStats+0x7c4>
   423bc:	5e 90 01 a8 	load_32 s2, 100(sp)
   423c0:	00 fc ff 12 	cmpgt_i s0, s0, -1
   423c4:	1e 30 01 88 	store_32 s0, 76(sp)
   423c8:	1e d0 00 a8 	load_32 s0, 52(sp)
   423cc:	41 00 81 c0 	mulh_u s2, s1, s2
   423d0:	00 80 6d c0 	sub_i s0, s0, s27
   423d4:	1e 00 01 88 	store_32 s0, 64(sp)
   423d8:	42 0f 00 0a 	shr s26, s2, 3
   423dc:	5a 28 00 07 	mull_i s2, s26, 10
   423e0:	21 00 61 c0 	sub_i s1, s1, s2
   423e4:	40 00 00 0f 	move s2, 0
   423e8:	21 08 00 0b 	shl s1, s1, 2
   423ec:	25 80 50 c0 	add_i s1, s5, s1
   423f0:	61 00 00 a8 	load_32 s3, (s1)
   423f4:	5e 10 01 88 	store_32 s2, 68(sp)
   423f8:	20 80 fc c0 	move s1, s25
   423fc:	33 0f 00 f8 	call 15564 <V_DrawPatch>
   42400:	1e 90 01 a8 	load_32 s0, 100(sp)
   42404:	3e a0 01 a8 	load_32 s1, 104(sp)
   42408:	1a 00 80 c0 	mulh_u s0, s26, s0
   4240c:	00 0c 00 0a 	shr s0, s0, 3
   42410:	00 28 00 07 	mull_i s0, s0, 10
   42414:	1a 00 60 c0 	sub_i s0, s26, s0
   42418:	00 08 00 0b 	shl s0, s0, 2
   4241c:	01 00 50 c0 	add_i s0, s1, s0
   42420:	3e 00 01 a8 	load_32 s1, 64(sp)
   42424:	60 00 00 a8 	load_32 s3, (s0)
   42428:	41 83 6d c0 	sub_i s26, s1, s27
   4242c:	00 00 fd c0 	move s0, s26
   42430:	20 80 fc c0 	move s1, s25
   42434:	5e 10 01 a8 	load_32 s2, 68(sp)
   42438:	24 0f 00 f8 	call 15504 <V_DrawPatch>
   4243c:	be a0 01 a8 	load_32 s5, 104(sp)
   42440:	9e 70 01 a8 	load_32 s4, 92(sp)
   42444:	1e 30 01 a8 	load_32 s0, 76(sp)
   42448:	e0 02 00 f4 	bnz s0, 92 <WI_drawDeathmatchStats+0x7c4>
   4244c:	3e 20 01 a8 	load_32 s1, 72(sp)
   42450:	1a e0 ff 05 	add_i s0, s26, -8
   42454:	40 00 00 0f 	move s2, 0
   42458:	61 00 00 a8 	load_32 s3, (s1)
   4245c:	20 80 fc c0 	move s1, s25
   42460:	1a 0f 00 f8 	call 15464 <V_DrawPatch>
   42464:	be a0 01 a8 	load_32 s5, 104(sp)
   42468:	9e 70 01 a8 	load_32 s4, 92(sp)
   4246c:	04 20 00 a8 	load_32 s0, 8(s4)
   42470:	c0 07 00 f2 	bz s0, 248 <WI_drawDeathmatchStats+0x888>
   42474:	0e 00 00 f6 	b 56 <WI_drawDeathmatchStats+0x7cc>
   42478:	3e 20 01 a8 	load_32 s1, 72(sp)
   4247c:	1a e0 ff 05 	add_i s0, s26, -8
   42480:	40 00 00 0f 	move s2, 0
   42484:	61 00 00 a8 	load_32 s3, (s1)
   42488:	20 80 fc c0 	move s1, s25
   4248c:	0f 0f 00 f8 	call 15420 <V_DrawPatch>
   42490:	be a0 01 a8 	load_32 s5, 104(sp)
   42494:	9e 70 01 a8 	load_32 s4, 92(sp)
   42498:	04 10 00 a8 	load_32 s0, 4(s4)
   4249c:	40 00 00 f2 	bz s0, 8 <WI_drawDeathmatchStats+0x7c4>
   424a0:	bc ff ff f7 	b -272 <WI_drawDeathmatchStats+0x6b0>
   424a4:	04 20 00 a8 	load_32 s0, 8(s4)
   424a8:	00 06 00 f2 	bz s0, 192 <WI_drawDeathmatchStats+0x888>
   424ac:	3e 60 01 a8 	load_32 s1, 88(sp)
   424b0:	18 10 00 0b 	shl s0, s24, 4
   424b4:	01 00 50 c0 	add_i s0, s1, s0
   424b8:	00 20 00 a8 	load_32 s0, 8(s0)
   424bc:	65 00 00 a8 	load_32 s3, (s5)
   424c0:	20 7c 00 09 	ashr s1, s0, 31
   424c4:	40 80 50 c0 	add_i s2, s0, s1
   424c8:	63 03 00 a6 	load_s16 s27, (s3)
   424cc:	22 80 30 c0 	xor s1, s2, s1
   424d0:	41 28 1f 10 	cmpeq_i s2, s1, 1994
   424d4:	a2 04 00 f4 	bnz s2, 148 <WI_drawDeathmatchStats+0x888>
   424d8:	5e 90 01 a8 	load_32 s2, 100(sp)
   424dc:	00 fc ff 12 	cmpgt_i s0, s0, -1
   424e0:	1e 30 01 88 	store_32 s0, 76(sp)
   424e4:	1e c0 00 a8 	load_32 s0, 48(sp)
   424e8:	41 00 81 c0 	mulh_u s2, s1, s2
   424ec:	00 80 6d c0 	sub_i s0, s0, s27
   424f0:	1e 10 01 88 	store_32 s0, 68(sp)
   424f4:	42 0f 00 0a 	shr s26, s2, 3
   424f8:	5a 28 00 07 	mull_i s2, s26, 10
   424fc:	21 00 61 c0 	sub_i s1, s1, s2
   42500:	21 08 00 0b 	shl s1, s1, 2
   42504:	25 80 50 c0 	add_i s1, s5, s1
   42508:	61 00 00 a8 	load_32 s3, (s1)
   4250c:	20 80 fc c0 	move s1, s25
   42510:	5e 80 01 a8 	load_32 s2, 96(sp)
   42514:	ed 0e 00 f8 	call 15284 <V_DrawPatch>
   42518:	1e 90 01 a8 	load_32 s0, 100(sp)
   4251c:	3e a0 01 a8 	load_32 s1, 104(sp)
   42520:	1a 00 80 c0 	mulh_u s0, s26, s0
   42524:	00 0c 00 0a 	shr s0, s0, 3
   42528:	00 28 00 07 	mull_i s0, s0, 10
   4252c:	1a 00 60 c0 	sub_i s0, s26, s0
   42530:	00 08 00 0b 	shl s0, s0, 2
   42534:	01 00 50 c0 	add_i s0, s1, s0
   42538:	3e 10 01 a8 	load_32 s1, 68(sp)
   4253c:	60 00 00 a8 	load_32 s3, (s0)
   42540:	41 83 6d c0 	sub_i s26, s1, s27
   42544:	00 00 fd c0 	move s0, s26
   42548:	20 80 fc c0 	move s1, s25
   4254c:	5e 80 01 a8 	load_32 s2, 96(sp)
   42550:	de 0e 00 f8 	call 15224 <V_DrawPatch>
   42554:	be a0 01 a8 	load_32 s5, 104(sp)
   42558:	9e 70 01 a8 	load_32 s4, 92(sp)
   4255c:	1e 30 01 a8 	load_32 s0, 76(sp)
   42560:	40 00 00 f4 	bnz s0, 8 <WI_drawDeathmatchStats+0x888>
   42564:	3a 00 00 f6 	b 232 <WI_drawDeathmatchStats+0x96c>
   42568:	04 30 00 a8 	load_32 s0, 12(s4)
   4256c:	60 08 00 f2 	bz s0, 268 <WI_drawDeathmatchStats+0x998>
   42570:	3e 60 01 a8 	load_32 s1, 88(sp)
   42574:	18 10 00 0b 	shl s0, s24, 4
   42578:	01 00 50 c0 	add_i s0, s1, s0
   4257c:	00 30 00 a8 	load_32 s0, 12(s0)
   42580:	65 00 00 a8 	load_32 s3, (s5)
   42584:	20 7c 00 09 	ashr s1, s0, 31
   42588:	40 80 50 c0 	add_i s2, s0, s1
   4258c:	63 03 00 a6 	load_s16 s27, (s3)
   42590:	22 80 30 c0 	xor s1, s2, s1
   42594:	41 28 1f 10 	cmpeq_i s2, s1, 1994
   42598:	02 07 00 f4 	bnz s2, 224 <WI_drawDeathmatchStats+0x998>
   4259c:	5e 90 01 a8 	load_32 s2, 100(sp)
   425a0:	00 fc ff 12 	cmpgt_i s0, s0, -1
   425a4:	1e 30 01 88 	store_32 s0, 76(sp)
   425a8:	1e b0 00 a8 	load_32 s0, 44(sp)
   425ac:	41 00 81 c0 	mulh_u s2, s1, s2
   425b0:	00 80 6d c0 	sub_i s0, s0, s27
   425b4:	1e 10 01 88 	store_32 s0, 68(sp)
   425b8:	42 0f 00 0a 	shr s26, s2, 3
   425bc:	5a 28 00 07 	mull_i s2, s26, 10
   425c0:	21 00 61 c0 	sub_i s1, s1, s2
   425c4:	21 08 00 0b 	shl s1, s1, 2
   425c8:	25 80 50 c0 	add_i s1, s5, s1
   425cc:	61 00 00 a8 	load_32 s3, (s1)
   425d0:	20 80 fc c0 	move s1, s25
   425d4:	5e 80 01 a8 	load_32 s2, 96(sp)
   425d8:	bc 0e 00 f8 	call 15088 <V_DrawPatch>
   425dc:	1e 90 01 a8 	load_32 s0, 100(sp)
   425e0:	3e a0 01 a8 	load_32 s1, 104(sp)
   425e4:	1a 00 80 c0 	mulh_u s0, s26, s0
   425e8:	00 0c 00 0a 	shr s0, s0, 3
   425ec:	00 28 00 07 	mull_i s0, s0, 10
   425f0:	1a 00 60 c0 	sub_i s0, s26, s0
   425f4:	00 08 00 0b 	shl s0, s0, 2
   425f8:	01 00 50 c0 	add_i s0, s1, s0
   425fc:	3e 10 01 a8 	load_32 s1, 68(sp)
   42600:	60 00 00 a8 	load_32 s3, (s0)
   42604:	41 83 6d c0 	sub_i s26, s1, s27
   42608:	00 00 fd c0 	move s0, s26
   4260c:	20 80 fc c0 	move s1, s25
   42610:	5e 80 01 a8 	load_32 s2, 96(sp)
   42614:	ad 0e 00 f8 	call 15028 <V_DrawPatch>
   42618:	be a0 01 a8 	load_32 s5, 104(sp)
   4261c:	9e 70 01 a8 	load_32 s4, 92(sp)
   42620:	1e 30 01 a8 	load_32 s0, 76(sp)
   42624:	a0 02 00 f4 	bnz s0, 84 <WI_drawDeathmatchStats+0x998>
   42628:	3e 20 01 a8 	load_32 s1, 72(sp)
   4262c:	1a e0 ff 05 	add_i s0, s26, -8
   42630:	61 00 00 a8 	load_32 s3, (s1)
   42634:	20 80 fc c0 	move s1, s25
   42638:	5e 80 01 a8 	load_32 s2, 96(sp)
   4263c:	a3 0e 00 f8 	call 14988 <V_DrawPatch>
   42640:	be a0 01 a8 	load_32 s5, 104(sp)
   42644:	9e 70 01 a8 	load_32 s4, 92(sp)
   42648:	0c 00 00 f6 	b 48 <WI_drawDeathmatchStats+0x998>
   4264c:	3e 20 01 a8 	load_32 s1, 72(sp)
   42650:	1a e0 ff 05 	add_i s0, s26, -8
   42654:	61 00 00 a8 	load_32 s3, (s1)
   42658:	20 80 fc c0 	move s1, s25
   4265c:	5e 80 01 a8 	load_32 s2, 96(sp)
   42660:	9a 0e 00 f8 	call 14952 <V_DrawPatch>
   42664:	be a0 01 a8 	load_32 s5, 104(sp)
   42668:	9e 70 01 a8 	load_32 s4, 92(sp)
   4266c:	04 30 00 a8 	load_32 s0, 12(s4)
   42670:	40 00 00 f2 	bz s0, 8 <WI_drawDeathmatchStats+0x998>
   42674:	bf ff ff f7 	b -260 <WI_drawDeathmatchStats+0x890>
   42678:	1e 40 01 a8 	load_32 s0, 80(sp)
   4267c:	3e 50 01 a8 	load_32 s1, 84(sp)
   42680:	00 80 50 c0 	add_i s0, s0, s1
   42684:	00 00 00 a8 	load_32 s0, (s0)
   42688:	65 00 00 a8 	load_32 s3, (s5)
   4268c:	20 7c 00 09 	ashr s1, s0, 31
   42690:	40 80 50 c0 	add_i s2, s0, s1
   42694:	63 03 00 a6 	load_s16 s27, (s3)
   42698:	22 80 30 c0 	xor s1, s2, s1
   4269c:	41 28 1f 10 	cmpeq_i s2, s1, 1994
   426a0:	a2 04 00 f4 	bnz s2, 148 <WI_drawDeathmatchStats+0xa54>
   426a4:	5e 90 01 a8 	load_32 s2, 100(sp)
   426a8:	00 fc ff 12 	cmpgt_i s0, s0, -1
   426ac:	1e 50 01 88 	store_32 s0, 84(sp)
   426b0:	1e f0 00 a8 	load_32 s0, 60(sp)
   426b4:	41 00 81 c0 	mulh_u s2, s1, s2
   426b8:	00 80 6d c0 	sub_i s0, s0, s27
   426bc:	1e 30 01 88 	store_32 s0, 76(sp)
   426c0:	42 0f 00 0a 	shr s26, s2, 3
   426c4:	5a 28 00 07 	mull_i s2, s26, 10
   426c8:	21 00 61 c0 	sub_i s1, s1, s2
   426cc:	21 08 00 0b 	shl s1, s1, 2
   426d0:	25 80 50 c0 	add_i s1, s5, s1
   426d4:	61 00 00 a8 	load_32 s3, (s1)
   426d8:	20 80 fc c0 	move s1, s25
   426dc:	5e 80 01 a8 	load_32 s2, 96(sp)
   426e0:	7a 0e 00 f8 	call 14824 <V_DrawPatch>
   426e4:	1e 90 01 a8 	load_32 s0, 100(sp)
   426e8:	3e a0 01 a8 	load_32 s1, 104(sp)
   426ec:	1a 00 80 c0 	mulh_u s0, s26, s0
   426f0:	00 0c 00 0a 	shr s0, s0, 3
   426f4:	00 28 00 07 	mull_i s0, s0, 10
   426f8:	1a 00 60 c0 	sub_i s0, s26, s0
   426fc:	00 08 00 0b 	shl s0, s0, 2
   42700:	01 00 50 c0 	add_i s0, s1, s0
   42704:	3e 30 01 a8 	load_32 s1, 76(sp)
   42708:	60 00 00 a8 	load_32 s3, (s0)
   4270c:	41 83 6d c0 	sub_i s26, s1, s27
   42710:	00 00 fd c0 	move s0, s26
   42714:	20 80 fc c0 	move s1, s25
   42718:	5e 80 01 a8 	load_32 s2, 96(sp)
   4271c:	6b 0e 00 f8 	call 14764 <V_DrawPatch>
   42720:	be a0 01 a8 	load_32 s5, 104(sp)
   42724:	9e 70 01 a8 	load_32 s4, 92(sp)
   42728:	1e 50 01 a8 	load_32 s0, 84(sp)
   4272c:	40 00 00 f4 	bnz s0, 8 <WI_drawDeathmatchStats+0xa54>
   42730:	06 00 00 f6 	b 24 <WI_drawDeathmatchStats+0xa68>
   42734:	18 07 00 05 	add_i s24, s24, 1
   42738:	39 87 00 05 	add_i s25, s25, 33
   4273c:	18 10 00 18 	cmplt_u s0, s24, 4
   42740:	60 db ff f5 	bnz s0, -1172 <WI_drawDeathmatchStats+0x5cc>
   42744:	0d 00 00 f6 	b 52 <WI_drawDeathmatchStats+0xa98>
   42748:	3e 20 01 a8 	load_32 s1, 72(sp)
   4274c:	1a e0 ff 05 	add_i s0, s26, -8
   42750:	61 00 00 a8 	load_32 s3, (s1)
   42754:	20 80 fc c0 	move s1, s25
   42758:	5e 80 01 a8 	load_32 s2, 96(sp)
   4275c:	5b 0e 00 f8 	call 14700 <V_DrawPatch>
   42760:	be a0 01 a8 	load_32 s5, 104(sp)
   42764:	9e 70 01 a8 	load_32 s4, 92(sp)
   42768:	18 07 00 05 	add_i s24, s24, 1
   4276c:	39 87 00 05 	add_i s25, s25, 33
   42770:	18 10 00 18 	cmplt_u s0, s24, 4
   42774:	c0 d9 ff f5 	bnz s0, -1224 <WI_drawDeathmatchStats+0x5cc>
   42778:	fe b3 01 a8 	load_32 ra, 108(sp)
   4277c:	7e c3 01 a8 	load_32 s27, 112(sp)
   42780:	5e d3 01 a8 	load_32 s26, 116(sp)
   42784:	3e e3 01 a8 	load_32 s25, 120(sp)
   42788:	1e f3 01 a8 	load_32 s24, 124(sp)
   4278c:	de 03 02 05 	add_i sp, sp, 128
   42790:	1f 00 00 f0 	ret

0000000000042794 WI_initNetgameStats:
   42794:	de 03 ff 05 	add_i sp, sp, -64
   42798:	fe f3 00 88 	store_32 ra, 60(sp)
   4279c:	00 0c 00 4f 	movehi s0, 96
   427a0:	20 0c 00 4f 	movehi s1, 96
   427a4:	40 0c 00 4f 	movehi s2, 96
   427a8:	00 60 27 00 	or s0, s0, 2520
   427ac:	21 50 28 00 	or s1, s1, 2580
   427b0:	e0 00 00 0f 	move s7, 0
   427b4:	e0 00 00 88 	store_32 s7, (s0)
   427b8:	02 c0 2a 00 	or s0, s2, 2736
   427bc:	e1 00 00 82 	store_8 s7, (s1)
   427c0:	20 0c 00 4f 	movehi s1, 96
   427c4:	40 04 00 0f 	move s2, 1
   427c8:	40 00 00 88 	store_32 s2, (s0)
   427cc:	5b 04 00 4f 	movehi s2, 59
   427d0:	01 d0 28 00 	or s0, s1, 2612
   427d4:	20 0c 00 4f 	movehi s1, 96
   427d8:	42 00 02 00 	or s2, s2, 128
   427dc:	60 8c 00 0f 	move s3, 35
   427e0:	60 00 00 88 	store_32 s3, (s0)
   427e4:	21 b0 28 00 	or s1, s1, 2604
   427e8:	01 00 00 a8 	load_32 s0, (s1)
   427ec:	62 00 00 a8 	load_32 s3, (s2)
   427f0:	02 11 00 a8 	load_32 s8, 4(s2)
   427f4:	22 20 00 a8 	load_32 s1, 8(s2)
   427f8:	42 30 00 a8 	load_32 s2, 12(s2)
   427fc:	43 00 00 f4 	bnz s3, 8 <WI_initNetgameStats+0x70>
   42800:	4e 00 00 f6 	b 312 <WI_initNetgameStats+0x1a4>
   42804:	60 0c 00 4f 	movehi s3, 96
   42808:	a0 0c 00 4f 	movehi s5, 96
   4280c:	80 0c 00 4f 	movehi s4, 96
   42810:	20 0d 00 4f 	movehi s9, 96
   42814:	63 d0 2a 00 	or s3, s3, 2740
   42818:	c4 10 2b 00 	or s6, s4, 2756
   4281c:	a5 50 2b 00 	or s5, s5, 2772
   42820:	89 90 2b 00 	or s4, s9, 2788
   42824:	e3 00 00 88 	store_32 s7, (s3)
   42828:	e6 00 00 88 	store_32 s7, (s6)
   4282c:	e5 00 00 88 	store_32 s7, (s5)
   42830:	e4 00 00 88 	store_32 s7, (s4)
   42834:	48 00 00 f4 	bnz s8, 8 <WI_initNetgameStats+0xa8>
   42838:	8f 00 00 f6 	b 572 <WI_initNetgameStats+0x2e0>
   4283c:	20 61 00 a8 	load_32 s9, 24(s0)
   42840:	61 00 00 f2 	bz s1, 12 <WI_initNetgameStats+0xb8>
   42844:	00 71 00 a8 	load_32 s8, 28(s0)
   42848:	28 81 54 c0 	add_i s9, s8, s9
   4284c:	62 00 00 f2 	bz s2, 12 <WI_initNetgameStats+0xc4>
   42850:	00 81 00 a8 	load_32 s8, 32(s0)
   42854:	28 81 54 c0 	add_i s9, s8, s9
   42858:	00 0d 00 4f 	movehi s8, 96
   4285c:	40 51 00 a8 	load_32 s10, 20(s0)
   42860:	08 d1 2b 00 	or s8, s8, 2804
   42864:	29 01 65 c0 	sub_i s9, s9, s10
   42868:	68 01 00 a8 	load_32 s11, (s8)
   4286c:	29 81 55 c0 	add_i s9, s9, s11
   42870:	28 01 00 88 	store_32 s9, (s8)
   42874:	e3 10 00 88 	store_32 s7, 4(s3)
   42878:	e6 10 00 88 	store_32 s7, 4(s6)
   4287c:	e5 10 00 88 	store_32 s7, 4(s5)
   42880:	e4 10 00 88 	store_32 s7, 4(s4)
   42884:	20 f1 00 a8 	load_32 s9, 60(s0)
   42888:	61 00 00 f2 	bz s1, 12 <WI_initNetgameStats+0x100>
   4288c:	40 11 01 a8 	load_32 s10, 68(s0)
   42890:	2a 81 54 c0 	add_i s9, s10, s9
   42894:	62 00 00 f2 	bz s2, 12 <WI_initNetgameStats+0x10c>
   42898:	40 21 01 a8 	load_32 s10, 72(s0)
   4289c:	2a 81 54 c0 	add_i s9, s10, s9
   428a0:	40 01 01 a8 	load_32 s10, 64(s0)
   428a4:	68 01 00 a8 	load_32 s11, (s8)
   428a8:	29 01 65 c0 	sub_i s9, s9, s10
   428ac:	29 81 55 c0 	add_i s9, s9, s11
   428b0:	28 01 00 88 	store_32 s9, (s8)
   428b4:	01 02 00 f2 	bz s1, 64 <WI_initNetgameStats+0x160>
   428b8:	e3 20 00 88 	store_32 s7, 8(s3)
   428bc:	e6 20 00 88 	store_32 s7, 8(s6)
   428c0:	e5 20 00 88 	store_32 s7, 8(s5)
   428c4:	e4 20 00 88 	store_32 s7, 8(s4)
   428c8:	20 91 01 a8 	load_32 s9, 100(s0)
   428cc:	40 a1 01 a8 	load_32 s10, 104(s0)
   428d0:	2a 81 54 c0 	add_i s9, s10, s9
   428d4:	62 00 00 f2 	bz s2, 12 <WI_initNetgameStats+0x14c>
   428d8:	40 c1 01 a8 	load_32 s10, 112(s0)
   428dc:	2a 81 54 c0 	add_i s9, s10, s9
   428e0:	40 b1 01 a8 	load_32 s10, 108(s0)
   428e4:	68 01 00 a8 	load_32 s11, (s8)
   428e8:	29 01 65 c0 	sub_i s9, s9, s10
   428ec:	29 81 55 c0 	add_i s9, s9, s11
   428f0:	28 01 00 88 	store_32 s9, (s8)
   428f4:	82 10 00 f2 	bz s2, 528 <WI_initNetgameStats+0x370>
   428f8:	e3 30 00 88 	store_32 s7, 12(s3)
   428fc:	e6 30 00 88 	store_32 s7, 12(s6)
   42900:	e5 30 00 88 	store_32 s7, 12(s5)
   42904:	e4 30 00 88 	store_32 s7, 12(s4)
   42908:	40 30 02 a8 	load_32 s2, 140(s0)
   4290c:	60 40 02 a8 	load_32 s3, 144(s0)
   42910:	43 00 51 c0 	add_i s2, s3, s2
   42914:	61 00 00 f2 	bz s1, 12 <WI_initNetgameStats+0x18c>
   42918:	20 50 02 a8 	load_32 s1, 148(s0)
   4291c:	41 00 51 c0 	add_i s2, s1, s2
   42920:	00 60 02 a8 	load_32 s0, 152(s0)
   42924:	28 00 00 a8 	load_32 s1, (s8)
   42928:	02 00 60 c0 	sub_i s0, s2, s0
   4292c:	00 80 50 c0 	add_i s0, s0, s1
   42930:	08 00 00 88 	store_32 s0, (s8)
   42934:	74 00 00 f6 	b 464 <WI_initNetgameStats+0x370>
   42938:	48 03 00 f2 	bz s8, 104 <WI_initNetgameStats+0x20c>
   4293c:	60 0c 00 4f 	movehi s3, 96
   42940:	a0 0c 00 4f 	movehi s5, 96
   42944:	c0 0c 00 4f 	movehi s6, 96
   42948:	83 d0 2a 00 	or s4, s3, 2740
   4294c:	60 00 00 0f 	move s3, 0
   42950:	a5 50 2b 00 	or s5, s5, 2772
   42954:	64 10 00 88 	store_32 s3, 4(s4)
   42958:	80 0c 00 4f 	movehi s4, 96
   4295c:	c6 90 2b 00 	or s6, s6, 2788
   42960:	84 10 2b 00 	or s4, s4, 2756
   42964:	64 10 00 88 	store_32 s3, 4(s4)
   42968:	65 10 00 88 	store_32 s3, 4(s5)
   4296c:	66 10 00 88 	store_32 s3, 4(s6)
   42970:	41 00 00 f2 	bz s1, 8 <WI_initNetgameStats+0x1e4>
   42974:	60 10 01 a8 	load_32 s3, 68(s0)
   42978:	62 00 00 f2 	bz s2, 12 <WI_initNetgameStats+0x1f0>
   4297c:	80 20 01 a8 	load_32 s4, 72(s0)
   42980:	64 80 51 c0 	add_i s3, s4, s3
   42984:	80 0c 00 4f 	movehi s4, 96
   42988:	a0 00 01 a8 	load_32 s5, 64(s0)
   4298c:	84 d0 2b 00 	or s4, s4, 2804
   42990:	63 80 62 c0 	sub_i s3, s3, s5
   42994:	c4 00 00 a8 	load_32 s6, (s4)
   42998:	63 00 53 c0 	add_i s3, s3, s6
   4299c:	64 00 00 88 	store_32 s3, (s4)
   429a0:	41 03 00 f2 	bz s1, 104 <WI_initNetgameStats+0x274>
   429a4:	60 0c 00 4f 	movehi s3, 96
   429a8:	a0 0c 00 4f 	movehi s5, 96
   429ac:	c0 0c 00 4f 	movehi s6, 96
   429b0:	83 d0 2a 00 	or s4, s3, 2740
   429b4:	60 00 00 0f 	move s3, 0
   429b8:	a5 50 2b 00 	or s5, s5, 2772
   429bc:	64 20 00 88 	store_32 s3, 8(s4)
   429c0:	80 0c 00 4f 	movehi s4, 96
   429c4:	c6 90 2b 00 	or s6, s6, 2788
   429c8:	84 10 2b 00 	or s4, s4, 2756
   429cc:	64 20 00 88 	store_32 s3, 8(s4)
   429d0:	65 20 00 88 	store_32 s3, 8(s5)
   429d4:	66 20 00 88 	store_32 s3, 8(s6)
   429d8:	48 00 00 f2 	bz s8, 8 <WI_initNetgameStats+0x24c>
   429dc:	60 a0 01 a8 	load_32 s3, 104(s0)
   429e0:	62 00 00 f2 	bz s2, 12 <WI_initNetgameStats+0x258>
   429e4:	80 c0 01 a8 	load_32 s4, 112(s0)
   429e8:	64 80 51 c0 	add_i s3, s4, s3
   429ec:	80 0c 00 4f 	movehi s4, 96
   429f0:	a0 b0 01 a8 	load_32 s5, 108(s0)
   429f4:	84 d0 2b 00 	or s4, s4, 2804
   429f8:	63 80 62 c0 	sub_i s3, s3, s5
   429fc:	c4 00 00 a8 	load_32 s6, (s4)
   42a00:	63 00 53 c0 	add_i s3, s3, s6
   42a04:	64 00 00 88 	store_32 s3, (s4)
   42a08:	e2 07 00 f2 	bz s2, 252 <WI_initNetgameStats+0x370>
   42a0c:	40 0c 00 4f 	movehi s2, 96
   42a10:	80 0c 00 4f 	movehi s4, 96
   42a14:	a0 0c 00 4f 	movehi s5, 96
   42a18:	62 d0 2a 00 	or s3, s2, 2740
   42a1c:	40 00 00 0f 	move s2, 0
   42a20:	84 50 2b 00 	or s4, s4, 2772
   42a24:	43 30 00 88 	store_32 s2, 12(s3)
   42a28:	60 0c 00 4f 	movehi s3, 96
   42a2c:	a5 90 2b 00 	or s5, s5, 2788
   42a30:	63 10 2b 00 	or s3, s3, 2756
   42a34:	43 30 00 88 	store_32 s2, 12(s3)
   42a38:	44 30 00 88 	store_32 s2, 12(s4)
   42a3c:	45 30 00 88 	store_32 s2, 12(s5)
   42a40:	48 00 00 f2 	bz s8, 8 <WI_initNetgameStats+0x2b4>
   42a44:	40 40 02 a8 	load_32 s2, 144(s0)
   42a48:	61 00 00 f2 	bz s1, 12 <WI_initNetgameStats+0x2c0>
   42a4c:	20 50 02 a8 	load_32 s1, 148(s0)
   42a50:	41 00 51 c0 	add_i s2, s1, s2
   42a54:	20 0c 00 4f 	movehi s1, 96
   42a58:	00 60 02 a8 	load_32 s0, 152(s0)
   42a5c:	21 d0 2b 00 	or s1, s1, 2804
   42a60:	02 00 60 c0 	sub_i s0, s2, s0
   42a64:	61 00 00 a8 	load_32 s3, (s1)
   42a68:	00 80 51 c0 	add_i s0, s0, s3
   42a6c:	01 00 00 88 	store_32 s0, (s1)
   42a70:	25 00 00 f6 	b 148 <WI_initNetgameStats+0x370>
   42a74:	41 00 00 f2 	bz s1, 8 <WI_initNetgameStats+0x2e8>
   42a78:	e0 70 00 a8 	load_32 s7, 28(s0)
   42a7c:	62 00 00 f2 	bz s2, 12 <WI_initNetgameStats+0x2f4>
   42a80:	00 81 00 a8 	load_32 s8, 32(s0)
   42a84:	e8 80 53 c0 	add_i s7, s8, s7
   42a88:	00 0d 00 4f 	movehi s8, 96
   42a8c:	20 51 00 a8 	load_32 s9, 20(s0)
   42a90:	08 d1 2b 00 	or s8, s8, 2804
   42a94:	e7 80 64 c0 	sub_i s7, s7, s9
   42a98:	48 01 00 a8 	load_32 s10, (s8)
   42a9c:	e7 00 55 c0 	add_i s7, s7, s10
   42aa0:	e8 00 00 88 	store_32 s7, (s8)
   42aa4:	e1 01 00 f2 	bz s1, 60 <WI_initNetgameStats+0x34c>
   42aa8:	e0 00 00 0f 	move s7, 0
   42aac:	e3 20 00 88 	store_32 s7, 8(s3)
   42ab0:	e6 20 00 88 	store_32 s7, 8(s6)
   42ab4:	e5 20 00 88 	store_32 s7, 8(s5)
   42ab8:	e4 20 00 88 	store_32 s7, 8(s4)
   42abc:	e0 90 01 a8 	load_32 s7, 100(s0)
   42ac0:	62 00 00 f2 	bz s2, 12 <WI_initNetgameStats+0x338>
   42ac4:	20 c1 01 a8 	load_32 s9, 112(s0)
   42ac8:	e9 80 53 c0 	add_i s7, s9, s7
   42acc:	20 b1 01 a8 	load_32 s9, 108(s0)
   42ad0:	48 01 00 a8 	load_32 s10, (s8)
   42ad4:	e7 80 64 c0 	sub_i s7, s7, s9
   42ad8:	e7 00 55 c0 	add_i s7, s7, s10
   42adc:	e8 00 00 88 	store_32 s7, (s8)
   42ae0:	22 01 00 f2 	bz s2, 36 <WI_initNetgameStats+0x370>
   42ae4:	40 00 00 0f 	move s2, 0
   42ae8:	43 30 00 88 	store_32 s2, 12(s3)
   42aec:	46 30 00 88 	store_32 s2, 12(s6)
   42af0:	45 30 00 88 	store_32 s2, 12(s5)
   42af4:	44 30 00 88 	store_32 s2, 12(s4)
   42af8:	40 30 02 a8 	load_32 s2, 140(s0)
   42afc:	21 f1 ff f3 	bz s1, -476 <WI_initNetgameStats+0x18c>
   42b00:	86 ff ff f7 	b -488 <WI_initNetgameStats+0x184>
   42b04:	00 0c 00 4f 	movehi s0, 96
   42b08:	00 d0 2b 00 	or s0, s0, 2804
   42b0c:	20 00 00 a8 	load_32 s1, (s0)
   42b10:	21 00 00 11 	cmpne_i s1, s1, 0
   42b14:	21 04 00 01 	and s1, s1, 1
   42b18:	20 00 00 88 	store_32 s1, (s0)
   42b1c:	ba f2 ff f9 	call -13592 <WI_initAnimatedBack>
   42b20:	fe f3 00 a8 	load_32 ra, 60(sp)
   42b24:	de 03 01 05 	add_i sp, sp, 64
   42b28:	1f 00 00 f0 	ret

0000000000042b2c WI_updateNetgameStats:
   42b2c:	de 03 ff 05 	add_i sp, sp, -64
   42b30:	1e f3 00 88 	store_32 s24, 60(sp)
   42b34:	3e e3 00 88 	store_32 s25, 56(sp)
   42b38:	5e d3 00 88 	store_32 s26, 52(sp)
   42b3c:	7e c3 00 88 	store_32 s27, 48(sp)
   42b40:	fe b3 00 88 	store_32 ra, 44(sp)
   42b44:	fd f2 ff f9 	call -13324 <WI_updateAnimatedBack>
   42b48:	00 0c 00 4f 	movehi s0, 96
   42b4c:	40 53 28 00 	or s26, s0, 2580
   42b50:	00 0c 00 4f 	movehi s0, 96
   42b54:	3a 00 00 a0 	load_u8 s1, (s26)
   42b58:	00 c3 2a 00 	or s24, s0, 2736
   42b5c:	18 00 00 a8 	load_32 s0, (s24)
   42b60:	41 04 00 11 	cmpne_i s2, s1, 1
   42b64:	e2 16 00 f4 	bnz s2, 732 <WI_updateNetgameStats+0x314>
   42b68:	40 28 00 10 	cmpeq_i s2, s0, 10
   42b6c:	a2 16 00 f4 	bnz s2, 724 <WI_updateNetgameStats+0x314>
   42b70:	00 0c 00 4f 	movehi s0, 96
   42b74:	1e 83 00 88 	store_32 s24, 32(sp)
   42b78:	00 03 00 0f 	move s24, 0
   42b7c:	5e 73 00 88 	store_32 s26, 28(sp)
   42b80:	1a 03 00 82 	store_8 s24, (s26)
   42b84:	20 0c 00 4f 	movehi s1, 96
   42b88:	00 b0 28 00 	or s0, s0, 2604
   42b8c:	5b 04 00 4f 	movehi s2, 59
   42b90:	21 d0 2b 00 	or s1, s1, 2804
   42b94:	40 03 00 a8 	load_32 s26, (s0)
   42b98:	00 0c 00 4f 	movehi s0, 96
   42b9c:	42 00 02 00 	or s2, s2, 128
   42ba0:	00 20 27 00 	or s0, s0, 2504
   42ba4:	60 03 00 a8 	load_32 s27, (s0)
   42ba8:	01 00 00 a8 	load_32 s0, (s1)
   42bac:	62 00 00 a8 	load_32 s3, (s2)
   42bb0:	22 10 00 a8 	load_32 s1, 4(s2)
   42bb4:	3e 90 00 88 	store_32 s1, 36(sp)
   42bb8:	22 23 00 a8 	load_32 s25, 8(s2)
   42bbc:	22 30 00 a8 	load_32 s1, 12(s2)
   42bc0:	3e a0 00 88 	store_32 s1, 40(sp)
   42bc4:	a0 19 00 f2 	bz s0, 820 <WI_updateNetgameStats+0x3cc>
   42bc8:	7e 60 00 88 	store_32 s3, 24(sp)
   42bcc:	c3 04 00 f2 	bz s3, 152 <WI_updateNetgameStats+0x138>
   42bd0:	1a 10 00 a8 	load_32 s0, 4(s26)
   42bd4:	3b 40 00 a8 	load_32 s1, 16(s27)
   42bd8:	00 90 01 07 	mull_i s0, s0, 100
   42bdc:	9f 47 00 f8 	call 73340 <__divsi3>
   42be0:	20 0c 00 4f 	movehi s1, 96
   42be4:	21 90 2b 00 	or s1, s1, 2788
   42be8:	01 00 00 88 	store_32 s0, (s1)
   42bec:	1a 20 00 a8 	load_32 s0, 8(s26)
   42bf0:	3b 50 00 a8 	load_32 s1, 20(s27)
   42bf4:	00 90 01 07 	mull_i s0, s0, 100
   42bf8:	98 47 00 f8 	call 73312 <__divsi3>
   42bfc:	20 0c 00 4f 	movehi s1, 96
   42c00:	21 50 2b 00 	or s1, s1, 2772
   42c04:	01 00 00 88 	store_32 s0, (s1)
   42c08:	1a 30 00 a8 	load_32 s0, 12(s26)
   42c0c:	3b 60 00 a8 	load_32 s1, 24(s27)
   42c10:	00 90 01 07 	mull_i s0, s0, 100
   42c14:	91 47 00 f8 	call 73284 <__divsi3>
   42c18:	20 0c 00 4f 	movehi s1, 96
   42c1c:	21 10 2b 00 	or s1, s1, 2756
   42c20:	01 00 00 88 	store_32 s0, (s1)
   42c24:	1e 90 00 a8 	load_32 s0, 36(sp)
   42c28:	40 00 00 f2 	bz s0, 8 <WI_updateNetgameStats+0x104>
   42c2c:	1a 63 00 a8 	load_32 s24, 24(s26)
   42c30:	79 00 00 f2 	bz s25, 12 <WI_updateNetgameStats+0x110>
   42c34:	1a 70 00 a8 	load_32 s0, 28(s26)
   42c38:	00 03 5c c0 	add_i s24, s0, s24
   42c3c:	7e 60 00 a8 	load_32 s3, 24(sp)
   42c40:	1e a0 00 a8 	load_32 s0, 40(sp)
   42c44:	60 00 00 f2 	bz s0, 12 <WI_updateNetgameStats+0x124>
   42c48:	1a 80 00 a8 	load_32 s0, 32(s26)
   42c4c:	00 03 5c c0 	add_i s24, s0, s24
   42c50:	00 0c 00 4f 	movehi s0, 96
   42c54:	3a 50 00 a8 	load_32 s1, 20(s26)
   42c58:	00 d0 2a 00 	or s0, s0, 2740
   42c5c:	38 80 60 c0 	sub_i s1, s24, s1
   42c60:	20 00 00 88 	store_32 s1, (s0)
   42c64:	1e 83 00 a8 	load_32 s24, 32(sp)
   42c68:	1e 90 00 a8 	load_32 s0, 36(sp)
   42c6c:	a0 04 00 f2 	bz s0, 148 <WI_updateNetgameStats+0x1d4>
   42c70:	1a b0 00 a8 	load_32 s0, 44(s26)
   42c74:	3b 40 00 a8 	load_32 s1, 16(s27)
   42c78:	00 90 01 07 	mull_i s0, s0, 100
   42c7c:	77 47 00 f8 	call 73180 <__divsi3>
   42c80:	20 0c 00 4f 	movehi s1, 96
   42c84:	21 90 2b 00 	or s1, s1, 2788
   42c88:	01 10 00 88 	store_32 s0, 4(s1)
   42c8c:	1a c0 00 a8 	load_32 s0, 48(s26)
   42c90:	3b 50 00 a8 	load_32 s1, 20(s27)
   42c94:	00 90 01 07 	mull_i s0, s0, 100
   42c98:	70 47 00 f8 	call 73152 <__divsi3>
   42c9c:	20 0c 00 4f 	movehi s1, 96
   42ca0:	21 50 2b 00 	or s1, s1, 2772
   42ca4:	01 10 00 88 	store_32 s0, 4(s1)
   42ca8:	1a d0 00 a8 	load_32 s0, 52(s26)
   42cac:	3b 60 00 a8 	load_32 s1, 24(s27)
   42cb0:	00 90 01 07 	mull_i s0, s0, 100
   42cb4:	69 47 00 f8 	call 73124 <__divsi3>
   42cb8:	20 0c 00 4f 	movehi s1, 96
   42cbc:	7e 60 00 a8 	load_32 s3, 24(sp)
   42cc0:	21 10 2b 00 	or s1, s1, 2756
   42cc4:	01 10 00 88 	store_32 s0, 4(s1)
   42cc8:	e3 31 00 f2 	bz s3, 1596 <WI_updateNetgameStats+0x7d8>
   42ccc:	1a f0 00 a8 	load_32 s0, 60(s26)
   42cd0:	79 00 00 f2 	bz s25, 12 <WI_updateNetgameStats+0x1b0>
   42cd4:	3a 10 01 a8 	load_32 s1, 68(s26)
   42cd8:	01 00 50 c0 	add_i s0, s1, s0
   42cdc:	3e a0 00 a8 	load_32 s1, 40(sp)
   42ce0:	61 00 00 f2 	bz s1, 12 <WI_updateNetgameStats+0x1c0>
   42ce4:	3a 20 01 a8 	load_32 s1, 72(s26)
   42ce8:	01 00 50 c0 	add_i s0, s1, s0
   42cec:	20 0c 00 4f 	movehi s1, 96
   42cf0:	5a 00 01 a8 	load_32 s2, 64(s26)
   42cf4:	21 d0 2a 00 	or s1, s1, 2740
   42cf8:	00 00 61 c0 	sub_i s0, s0, s2
   42cfc:	01 10 00 88 	store_32 s0, 4(s1)
   42d00:	d9 04 00 f2 	bz s25, 152 <WI_updateNetgameStats+0x26c>
   42d04:	1a 50 01 a8 	load_32 s0, 84(s26)
   42d08:	3b 40 00 a8 	load_32 s1, 16(s27)
   42d0c:	00 90 01 07 	mull_i s0, s0, 100
   42d10:	52 47 00 f8 	call 73032 <__divsi3>
   42d14:	20 0c 00 4f 	movehi s1, 96
   42d18:	21 90 2b 00 	or s1, s1, 2788
   42d1c:	01 20 00 88 	store_32 s0, 8(s1)
   42d20:	1a 60 01 a8 	load_32 s0, 88(s26)
   42d24:	3b 50 00 a8 	load_32 s1, 20(s27)
   42d28:	00 90 01 07 	mull_i s0, s0, 100
   42d2c:	4b 47 00 f8 	call 73004 <__divsi3>
   42d30:	20 0c 00 4f 	movehi s1, 96
   42d34:	21 50 2b 00 	or s1, s1, 2772
   42d38:	01 20 00 88 	store_32 s0, 8(s1)
   42d3c:	1a 70 01 a8 	load_32 s0, 92(s26)
   42d40:	3b 60 00 a8 	load_32 s1, 24(s27)
   42d44:	00 90 01 07 	mull_i s0, s0, 100
   42d48:	44 47 00 f8 	call 72976 <__divsi3>
   42d4c:	20 0c 00 4f 	movehi s1, 96
   42d50:	7e 60 00 a8 	load_32 s3, 24(sp)
   42d54:	21 10 2b 00 	or s1, s1, 2756
   42d58:	01 20 00 88 	store_32 s0, 8(s1)
   42d5c:	a3 2d 00 f2 	bz s3, 1460 <WI_updateNetgameStats+0x7e4>
   42d60:	1a 90 01 a8 	load_32 s0, 100(s26)
   42d64:	3e 90 00 a8 	load_32 s1, 36(sp)
   42d68:	61 00 00 f2 	bz s1, 12 <WI_updateNetgameStats+0x248>
   42d6c:	3a a0 01 a8 	load_32 s1, 104(s26)
   42d70:	01 00 50 c0 	add_i s0, s1, s0
   42d74:	3e a0 00 a8 	load_32 s1, 40(sp)
   42d78:	61 00 00 f2 	bz s1, 12 <WI_updateNetgameStats+0x258>
   42d7c:	3a c0 01 a8 	load_32 s1, 112(s26)
   42d80:	01 00 50 c0 	add_i s0, s1, s0
   42d84:	20 0c 00 4f 	movehi s1, 96
   42d88:	5a b0 01 a8 	load_32 s2, 108(s26)
   42d8c:	21 d0 2a 00 	or s1, s1, 2740
   42d90:	00 00 61 c0 	sub_i s0, s0, s2
   42d94:	01 20 00 88 	store_32 s0, 8(s1)
   42d98:	1e a0 00 a8 	load_32 s0, 40(sp)
   42d9c:	40 16 00 f2 	bz s0, 712 <WI_updateNetgameStats+0x538>
   42da0:	3e a3 00 88 	store_32 s25, 40(sp)
   42da4:	20 03 fc c0 	move s25, s24
   42da8:	1a f0 01 a8 	load_32 s0, 124(s26)
   42dac:	3b 40 00 a8 	load_32 s1, 16(s27)
   42db0:	00 83 f1 c0 	move s24, s3
   42db4:	00 90 01 07 	mull_i s0, s0, 100
   42db8:	28 47 00 f8 	call 72864 <__divsi3>
   42dbc:	20 0c 00 4f 	movehi s1, 96
   42dc0:	21 90 2b 00 	or s1, s1, 2788
   42dc4:	01 30 00 88 	store_32 s0, 12(s1)
   42dc8:	1a 00 02 a8 	load_32 s0, 128(s26)
   42dcc:	3b 50 00 a8 	load_32 s1, 20(s27)
   42dd0:	00 90 01 07 	mull_i s0, s0, 100
   42dd4:	21 47 00 f8 	call 72836 <__divsi3>
   42dd8:	20 0c 00 4f 	movehi s1, 96
   42ddc:	21 50 2b 00 	or s1, s1, 2772
   42de0:	01 30 00 88 	store_32 s0, 12(s1)
   42de4:	1a 10 02 a8 	load_32 s0, 132(s26)
   42de8:	3b 60 00 a8 	load_32 s1, 24(s27)
   42dec:	00 90 01 07 	mull_i s0, s0, 100
   42df0:	1a 47 00 f8 	call 72808 <__divsi3>
   42df4:	20 0c 00 4f 	movehi s1, 96
   42df8:	21 10 2b 00 	or s1, s1, 2756
   42dfc:	01 30 00 88 	store_32 s0, 12(s1)
   42e00:	18 29 00 f2 	bz s24, 1312 <WI_updateNetgameStats+0x7f4>
   42e04:	1a 30 02 a8 	load_32 s0, 140(s26)
   42e08:	3e 90 00 a8 	load_32 s1, 36(sp)
   42e0c:	00 83 fc c0 	move s24, s25
   42e10:	61 00 00 f2 	bz s1, 12 <WI_updateNetgameStats+0x2f0>
   42e14:	3a 40 02 a8 	load_32 s1, 144(s26)
   42e18:	01 00 50 c0 	add_i s0, s1, s0
   42e1c:	3e a0 00 a8 	load_32 s1, 40(sp)
   42e20:	61 00 00 f2 	bz s1, 12 <WI_updateNetgameStats+0x300>
   42e24:	3a 50 02 a8 	load_32 s1, 148(s26)
   42e28:	01 00 50 c0 	add_i s0, s1, s0
   42e2c:	5a 60 02 a8 	load_32 s2, 152(s26)
   42e30:	20 0c 00 4f 	movehi s1, 96
   42e34:	21 d0 2a 00 	or s1, s1, 2740
   42e38:	00 00 61 c0 	sub_i s0, s0, s2
   42e3c:	89 00 00 f6 	b 548 <WI_updateNetgameStats+0x534>
   42e40:	40 f8 ff 05 	add_i s2, s0, -2
   42e44:	62 20 00 16 	cmpgt_u s3, s2, 8
   42e48:	c3 15 00 f4 	bnz s3, 696 <WI_updateNetgameStats+0x5d4>
   42e4c:	63 00 00 4f 	movehi s3, 3
   42e50:	42 08 00 0b 	shl s2, s2, 2
   42e54:	63 b0 58 00 	or s3, s3, 5676
   42e58:	42 80 51 c0 	add_i s2, s2, s3
   42e5c:	42 00 00 a8 	load_32 s2, (s2)
   42e60:	02 00 00 f0 	b s2
   42e64:	00 0c 00 4f 	movehi s0, 96
   42e68:	00 50 27 00 	or s0, s0, 2516
   42e6c:	00 00 00 a0 	load_u8 s0, (s0)
   42e70:	00 0c 00 01 	and s0, s0, 3
   42e74:	80 00 00 f4 	bnz s0, 16 <WI_updateNetgameStats+0x358>
   42e78:	00 00 00 0f 	move s0, 0
   42e7c:	20 04 00 0f 	move s1, 1
   42e80:	59 25 00 f8 	call 38244 <S_StartSound>
   42e84:	00 0c 00 4f 	movehi s0, 96
   42e88:	1e 83 00 88 	store_32 s24, 32(sp)
   42e8c:	20 0c 00 4f 	movehi s1, 96
   42e90:	5b 04 00 4f 	movehi s2, 59
   42e94:	00 b0 28 00 	or s0, s0, 2604
   42e98:	21 20 27 00 	or s1, s1, 2504
   42e9c:	42 03 02 00 	or s26, s2, 128
   42ea0:	20 03 00 a8 	load_32 s25, (s0)
   42ea4:	41 00 00 a8 	load_32 s2, (s1)
   42ea8:	1a 00 00 a8 	load_32 s0, (s26)
   42eac:	5e a0 00 88 	store_32 s2, 40(sp)
   42eb0:	20 24 00 f2 	bz s0, 1156 <WI_updateNetgameStats+0x808>
   42eb4:	00 0c 00 4f 	movehi s0, 96
   42eb8:	60 93 2b 00 	or s27, s0, 2788
   42ebc:	1b 00 00 a8 	load_32 s0, (s27)
   42ec0:	39 10 00 a8 	load_32 s1, 4(s25)
   42ec4:	00 0b 00 05 	add_i s24, s0, 2
   42ec8:	01 90 01 07 	mull_i s0, s1, 100
   42ecc:	22 40 00 a8 	load_32 s1, 16(s2)
   42ed0:	e2 46 00 f8 	call 72584 <__divsi3>
   42ed4:	38 00 40 c1 	cmplt_i s1, s24, s0
   42ed8:	41 00 00 f4 	bnz s1, 8 <WI_updateNetgameStats+0x3b4>
   42edc:	00 03 f0 c0 	move s24, s0
   42ee0:	1b 03 00 88 	store_32 s24, (s27)
   42ee4:	61 07 00 01 	and s27, s1, 1
   42ee8:	5e a0 00 a8 	load_32 s2, 40(sp)
   42eec:	1a 10 00 a8 	load_32 s0, 4(s26)
   42ef0:	80 30 00 f2 	bz s0, 1552 <WI_updateNetgameStats+0x9d4>
   42ef4:	13 01 00 f6 	b 1100 <WI_updateNetgameStats+0x814>
   42ef8:	c3 02 00 f2 	bz s3, 88 <WI_updateNetgameStats+0x424>
   42efc:	1a 10 00 a8 	load_32 s0, 4(s26)
   42f00:	3b 40 00 a8 	load_32 s1, 16(s27)
   42f04:	00 90 01 07 	mull_i s0, s0, 100
   42f08:	d4 46 00 f8 	call 72528 <__divsi3>
   42f0c:	20 0c 00 4f 	movehi s1, 96
   42f10:	21 90 2b 00 	or s1, s1, 2788
   42f14:	01 00 00 88 	store_32 s0, (s1)
   42f18:	1a 20 00 a8 	load_32 s0, 8(s26)
   42f1c:	3b 50 00 a8 	load_32 s1, 20(s27)
   42f20:	00 90 01 07 	mull_i s0, s0, 100
   42f24:	cd 46 00 f8 	call 72500 <__divsi3>
   42f28:	20 0c 00 4f 	movehi s1, 96
   42f2c:	21 50 2b 00 	or s1, s1, 2772
   42f30:	01 00 00 88 	store_32 s0, (s1)
   42f34:	1a 30 00 a8 	load_32 s0, 12(s26)
   42f38:	3b 60 00 a8 	load_32 s1, 24(s27)
   42f3c:	00 90 01 07 	mull_i s0, s0, 100
   42f40:	c6 46 00 f8 	call 72472 <__divsi3>
   42f44:	20 0c 00 4f 	movehi s1, 96
   42f48:	21 10 2b 00 	or s1, s1, 2756
   42f4c:	01 00 00 88 	store_32 s0, (s1)
   42f50:	1e 83 00 a8 	load_32 s24, 32(sp)
   42f54:	1e 90 00 a8 	load_32 s0, 36(sp)
   42f58:	c0 02 00 f2 	bz s0, 88 <WI_updateNetgameStats+0x484>
   42f5c:	1a b0 00 a8 	load_32 s0, 44(s26)
   42f60:	3b 40 00 a8 	load_32 s1, 16(s27)
   42f64:	00 90 01 07 	mull_i s0, s0, 100
   42f68:	bc 46 00 f8 	call 72432 <__divsi3>
   42f6c:	20 0c 00 4f 	movehi s1, 96
   42f70:	21 90 2b 00 	or s1, s1, 2788
   42f74:	01 10 00 88 	store_32 s0, 4(s1)
   42f78:	1a c0 00 a8 	load_32 s0, 48(s26)
   42f7c:	3b 50 00 a8 	load_32 s1, 20(s27)
   42f80:	00 90 01 07 	mull_i s0, s0, 100
   42f84:	b5 46 00 f8 	call 72404 <__divsi3>
   42f88:	20 0c 00 4f 	movehi s1, 96
   42f8c:	21 50 2b 00 	or s1, s1, 2772
   42f90:	01 10 00 88 	store_32 s0, 4(s1)
   42f94:	1a d0 00 a8 	load_32 s0, 52(s26)
   42f98:	3b 60 00 a8 	load_32 s1, 24(s27)
   42f9c:	00 90 01 07 	mull_i s0, s0, 100
   42fa0:	ae 46 00 f8 	call 72376 <__divsi3>
   42fa4:	20 0c 00 4f 	movehi s1, 96
   42fa8:	21 10 2b 00 	or s1, s1, 2756
   42fac:	01 10 00 88 	store_32 s0, 4(s1)
   42fb0:	d9 02 00 f2 	bz s25, 88 <WI_updateNetgameStats+0x4dc>
   42fb4:	1a 50 01 a8 	load_32 s0, 84(s26)
   42fb8:	3b 40 00 a8 	load_32 s1, 16(s27)
   42fbc:	00 90 01 07 	mull_i s0, s0, 100
   42fc0:	a6 46 00 f8 	call 72344 <__divsi3>
   42fc4:	20 0c 00 4f 	movehi s1, 96
   42fc8:	21 90 2b 00 	or s1, s1, 2788
   42fcc:	01 20 00 88 	store_32 s0, 8(s1)
   42fd0:	1a 60 01 a8 	load_32 s0, 88(s26)
   42fd4:	3b 50 00 a8 	load_32 s1, 20(s27)
   42fd8:	00 90 01 07 	mull_i s0, s0, 100
   42fdc:	9f 46 00 f8 	call 72316 <__divsi3>
   42fe0:	20 0c 00 4f 	movehi s1, 96
   42fe4:	21 50 2b 00 	or s1, s1, 2772
   42fe8:	01 20 00 88 	store_32 s0, 8(s1)
   42fec:	1a 70 01 a8 	load_32 s0, 92(s26)
   42ff0:	3b 60 00 a8 	load_32 s1, 24(s27)
   42ff4:	00 90 01 07 	mull_i s0, s0, 100
   42ff8:	98 46 00 f8 	call 72288 <__divsi3>
   42ffc:	20 0c 00 4f 	movehi s1, 96
   43000:	21 10 2b 00 	or s1, s1, 2756
   43004:	01 20 00 88 	store_32 s0, 8(s1)
   43008:	1e a0 00 a8 	load_32 s0, 40(sp)
   4300c:	c0 02 00 f2 	bz s0, 88 <WI_updateNetgameStats+0x538>
   43010:	1a f0 01 a8 	load_32 s0, 124(s26)
   43014:	3b 40 00 a8 	load_32 s1, 16(s27)
   43018:	00 90 01 07 	mull_i s0, s0, 100
   4301c:	8f 46 00 f8 	call 72252 <__divsi3>
   43020:	20 0c 00 4f 	movehi s1, 96
   43024:	21 90 2b 00 	or s1, s1, 2788
   43028:	01 30 00 88 	store_32 s0, 12(s1)
   4302c:	1a 00 02 a8 	load_32 s0, 128(s26)
   43030:	3b 50 00 a8 	load_32 s1, 20(s27)
   43034:	00 90 01 07 	mull_i s0, s0, 100
   43038:	88 46 00 f8 	call 72224 <__divsi3>
   4303c:	20 0c 00 4f 	movehi s1, 96
   43040:	21 50 2b 00 	or s1, s1, 2772
   43044:	01 30 00 88 	store_32 s0, 12(s1)
   43048:	1a 10 02 a8 	load_32 s0, 132(s26)
   4304c:	3b 60 00 a8 	load_32 s1, 24(s27)
   43050:	00 90 01 07 	mull_i s0, s0, 100
   43054:	81 46 00 f8 	call 72196 <__divsi3>
   43058:	20 0c 00 4f 	movehi s1, 96
   4305c:	21 10 2b 00 	or s1, s1, 2756
   43060:	01 30 00 88 	store_32 s0, 12(s1)
   43064:	00 00 00 0f 	move s0, 0
   43068:	20 48 01 0f 	move s1, 82
   4306c:	de 24 00 f8 	call 37752 <S_StartSound>
   43070:	00 28 00 0f 	move s0, 10
   43074:	18 00 00 88 	store_32 s0, (s24)
   43078:	5e 73 00 a8 	load_32 s26, 28(sp)
   4307c:	1a 00 00 a0 	load_u8 s0, (s26)
   43080:	40 00 00 f4 	bnz s0, 8 <WI_updateNetgameStats+0x55c>
   43084:	47 02 00 f6 	b 2332 <WI_updateNetgameStats+0xe74>
   43088:	00 03 00 0f 	move s24, 0
   4308c:	20 0c 00 0f 	move s1, 3
   43090:	00 00 fc c0 	move s0, s24
   43094:	d4 24 00 f8 	call 37712 <S_StartSound>
   43098:	0b 04 00 4f 	movehi s0, 43
   4309c:	00 00 40 00 	or s0, s0, 4096
   430a0:	00 00 00 a8 	load_32 s0, (s0)
   430a4:	00 08 00 11 	cmpne_i s0, s0, 2
   430a8:	60 01 00 f4 	bnz s0, 44 <WI_updateNetgameStats+0x5a8>
   430ac:	00 0c 00 4f 	movehi s0, 96
   430b0:	20 0c 00 4f 	movehi s1, 96
   430b4:	40 fc ff 0f 	move s2, -1
   430b8:	00 60 27 00 	or s0, s0, 2520
   430bc:	40 00 00 88 	store_32 s2, (s0)
   430c0:	01 60 28 00 	or s0, s1, 2584
   430c4:	1a 03 00 82 	store_8 s24, (s26)
   430c8:	20 28 00 0f 	move s1, 10
   430cc:	20 00 00 88 	store_32 s1, (s0)
   430d0:	34 02 00 f6 	b 2256 <WI_updateNetgameStats+0xe74>
   430d4:	00 0c 00 4f 	movehi s0, 96
   430d8:	20 0c 00 4f 	movehi s1, 96
   430dc:	40 04 00 0f 	move s2, 1
   430e0:	00 60 27 00 	or s0, s0, 2520
   430e4:	40 00 00 88 	store_32 s2, (s0)
   430e8:	01 60 28 00 	or s0, s1, 2584
   430ec:	1a 03 00 82 	store_8 s24, (s26)
   430f0:	20 30 02 0f 	move s1, 140
   430f4:	20 00 00 88 	store_32 s1, (s0)
   430f8:	43 f1 ff f9 	call -15092 <WI_initAnimatedBack>
   430fc:	29 02 00 f6 	b 2212 <WI_updateNetgameStats+0xe74>
   43100:	20 04 00 01 	and s1, s0, 1
   43104:	e1 44 00 f2 	bz s1, 2204 <WI_updateNetgameStats+0xe74>
   43108:	20 0c 00 4f 	movehi s1, 96
   4310c:	21 d0 28 00 	or s1, s1, 2612
   43110:	41 00 00 a8 	load_32 s2, (s1)
   43114:	42 fc ff 05 	add_i s2, s2, -1
   43118:	41 00 00 88 	store_32 s2, (s1)
   4311c:	22 44 00 f4 	bnz s2, 2180 <WI_updateNetgameStats+0xe74>
   43120:	00 04 00 05 	add_i s0, s0, 1
   43124:	18 00 00 88 	store_32 s0, (s24)
   43128:	00 8c 00 0f 	move s0, 35
   4312c:	01 00 00 88 	store_32 s0, (s1)
   43130:	1c 02 00 f6 	b 2160 <WI_updateNetgameStats+0xe74>
   43134:	00 0c 00 4f 	movehi s0, 96
   43138:	00 50 27 00 	or s0, s0, 2516
   4313c:	00 00 00 a0 	load_u8 s0, (s0)
   43140:	00 0c 00 01 	and s0, s0, 3
   43144:	80 00 00 f4 	bnz s0, 16 <WI_updateNetgameStats+0x628>
   43148:	00 00 00 0f 	move s0, 0
   4314c:	20 04 00 0f 	move s1, 1
   43150:	a5 24 00 f8 	call 37524 <S_StartSound>
   43154:	00 0c 00 4f 	movehi s0, 96
   43158:	1e 83 00 88 	store_32 s24, 32(sp)
   4315c:	20 0c 00 4f 	movehi s1, 96
   43160:	5b 04 00 4f 	movehi s2, 59
   43164:	00 b0 28 00 	or s0, s0, 2604
   43168:	21 20 27 00 	or s1, s1, 2504
   4316c:	42 03 02 00 	or s26, s2, 128
   43170:	20 03 00 a8 	load_32 s25, (s0)
   43174:	41 00 00 a8 	load_32 s2, (s1)
   43178:	1a 00 00 a8 	load_32 s0, (s26)
   4317c:	5e a0 00 88 	store_32 s2, 40(sp)
   43180:	e0 10 00 f2 	bz s0, 540 <WI_updateNetgameStats+0x870>
   43184:	00 0c 00 4f 	movehi s0, 96
   43188:	60 53 2b 00 	or s27, s0, 2772
   4318c:	1b 00 00 a8 	load_32 s0, (s27)
   43190:	39 20 00 a8 	load_32 s1, 8(s25)
   43194:	00 0b 00 05 	add_i s24, s0, 2
   43198:	01 90 01 07 	mull_i s0, s1, 100
   4319c:	22 50 00 a8 	load_32 s1, 20(s2)
   431a0:	2e 46 00 f8 	call 71864 <__divsi3>
   431a4:	38 00 40 c1 	cmplt_i s1, s24, s0
   431a8:	41 00 00 f4 	bnz s1, 8 <WI_updateNetgameStats+0x684>
   431ac:	00 03 f0 c0 	move s24, s0
   431b0:	1b 03 00 88 	store_32 s24, (s27)
   431b4:	61 07 00 01 	and s27, s1, 1
   431b8:	5e a0 00 a8 	load_32 s2, 40(sp)
   431bc:	1a 10 00 a8 	load_32 s0, 4(s26)
   431c0:	00 1d 00 f2 	bz s0, 928 <WI_updateNetgameStats+0xa34>
   431c4:	79 00 00 f6 	b 484 <WI_updateNetgameStats+0x87c>
   431c8:	00 0c 00 4f 	movehi s0, 96
   431cc:	00 50 27 00 	or s0, s0, 2516
   431d0:	00 00 00 a0 	load_u8 s0, (s0)
   431d4:	00 0c 00 01 	and s0, s0, 3
   431d8:	80 00 00 f4 	bnz s0, 16 <WI_updateNetgameStats+0x6bc>
   431dc:	00 00 00 0f 	move s0, 0
   431e0:	20 04 00 0f 	move s1, 1
   431e4:	80 24 00 f8 	call 37376 <S_StartSound>
   431e8:	00 0c 00 4f 	movehi s0, 96
   431ec:	1e 83 00 88 	store_32 s24, 32(sp)
   431f0:	20 0c 00 4f 	movehi s1, 96
   431f4:	5b 04 00 4f 	movehi s2, 59
   431f8:	00 b0 28 00 	or s0, s0, 2604
   431fc:	21 20 27 00 	or s1, s1, 2504
   43200:	42 03 02 00 	or s26, s2, 128
   43204:	20 03 00 a8 	load_32 s25, (s0)
   43208:	41 00 00 a8 	load_32 s2, (s1)
   4320c:	1a 00 00 a8 	load_32 s0, (s26)
   43210:	5e a0 00 88 	store_32 s2, 40(sp)
   43214:	80 0f 00 f2 	bz s0, 496 <WI_updateNetgameStats+0x8d8>
   43218:	00 0c 00 4f 	movehi s0, 96
   4321c:	60 13 2b 00 	or s27, s0, 2756
   43220:	1b 00 00 a8 	load_32 s0, (s27)
   43224:	39 30 00 a8 	load_32 s1, 12(s25)
   43228:	00 0b 00 05 	add_i s24, s0, 2
   4322c:	01 90 01 07 	mull_i s0, s1, 100
   43230:	22 60 00 a8 	load_32 s1, 24(s2)
   43234:	09 46 00 f8 	call 71716 <__divsi3>
   43238:	38 00 40 c1 	cmplt_i s1, s24, s0
   4323c:	41 00 00 f4 	bnz s1, 8 <WI_updateNetgameStats+0x718>
   43240:	00 03 f0 c0 	move s24, s0
   43244:	1b 03 00 88 	store_32 s24, (s27)
   43248:	61 07 00 01 	and s27, s1, 1
   4324c:	5e a0 00 a8 	load_32 s2, 40(sp)
   43250:	1a 10 00 a8 	load_32 s0, 4(s26)
   43254:	60 1b 00 f2 	bz s0, 876 <WI_updateNetgameStats+0xa94>
   43258:	6e 00 00 f6 	b 440 <WI_updateNetgameStats+0x8e4>
   4325c:	00 0c 00 4f 	movehi s0, 96
   43260:	00 50 27 00 	or s0, s0, 2516
   43264:	00 00 00 a0 	load_u8 s0, (s0)
   43268:	00 0c 00 01 	and s0, s0, 3
   4326c:	80 00 00 f4 	bnz s0, 16 <WI_updateNetgameStats+0x750>
   43270:	00 00 00 0f 	move s0, 0
   43274:	20 04 00 0f 	move s1, 1
   43278:	5b 24 00 f8 	call 37228 <S_StartSound>
   4327c:	00 0c 00 4f 	movehi s0, 96
   43280:	3b 04 00 4f 	movehi s1, 59
   43284:	00 b0 28 00 	or s0, s0, 2604
   43288:	41 00 02 00 	or s2, s1, 128
   4328c:	00 00 00 a8 	load_32 s0, (s0)
   43290:	62 00 00 a8 	load_32 s3, (s2)
   43294:	a2 10 00 a8 	load_32 s5, 4(s2)
   43298:	22 20 00 a8 	load_32 s1, 8(s2)
   4329c:	42 30 00 a8 	load_32 s2, 12(s2)
   432a0:	43 00 00 f4 	bnz s3, 8 <WI_updateNetgameStats+0x77c>
   432a4:	82 00 00 f6 	b 520 <WI_updateNetgameStats+0x980>
   432a8:	60 0c 00 4f 	movehi s3, 96
   432ac:	83 d0 2a 00 	or s4, s3, 2740
   432b0:	64 00 00 a8 	load_32 s3, (s4)
   432b4:	63 04 00 05 	add_i s3, s3, 1
   432b8:	64 00 00 88 	store_32 s3, (s4)
   432bc:	45 00 00 f4 	bnz s5, 8 <WI_updateNetgameStats+0x798>
   432c0:	17 01 00 f6 	b 1116 <WI_updateNetgameStats+0xbf0>
   432c4:	a0 60 00 a8 	load_32 s5, 24(s0)
   432c8:	61 00 00 f2 	bz s1, 12 <WI_updateNetgameStats+0x7a8>
   432cc:	c0 70 00 a8 	load_32 s6, 28(s0)
   432d0:	a6 80 52 c0 	add_i s5, s6, s5
   432d4:	62 00 00 f2 	bz s2, 12 <WI_updateNetgameStats+0x7b4>
   432d8:	c0 80 00 a8 	load_32 s6, 32(s0)
   432dc:	a6 80 52 c0 	add_i s5, s6, s5
   432e0:	c0 50 00 a8 	load_32 s6, 20(s0)
   432e4:	a5 00 63 c0 	sub_i s5, s5, s6
   432e8:	63 80 42 c1 	cmplt_i s3, s3, s5
   432ec:	43 00 00 f4 	bnz s3, 8 <WI_updateNetgameStats+0x7c8>
   432f0:	18 01 00 f6 	b 1120 <WI_updateNetgameStats+0xc24>
   432f4:	60 04 00 0f 	move s3, 1
   432f8:	18 01 00 f6 	b 1120 <WI_updateNetgameStats+0xc2c>
   432fc:	21 35 00 f2 	bz s1, 1700 <WI_updateNetgameStats+0xe74>
   43300:	62 ff ff f7 	b -632 <WI_updateNetgameStats+0x55c>
   43304:	00 00 00 0f 	move s0, 0
   43308:	b9 ce ff f3 	bz s25, -1580 <WI_updateNetgameStats+0x1b0>
   4330c:	72 fe ff f7 	b -1592 <WI_updateNetgameStats+0x1a8>
   43310:	00 00 00 0f 	move s0, 0
   43314:	3e 90 00 a8 	load_32 s1, 36(sp)
   43318:	e1 d2 ff f3 	bz s1, -1444 <WI_updateNetgameStats+0x248>
   4331c:	94 fe ff f7 	b -1456 <WI_updateNetgameStats+0x240>
   43320:	00 00 00 0f 	move s0, 0
   43324:	3e 90 00 a8 	load_32 s1, 36(sp)
   43328:	00 83 fc c0 	move s24, s25
   4332c:	81 d7 ff f3 	bz s1, -1296 <WI_updateNetgameStats+0x2f0>
   43330:	b9 fe ff f7 	b -1308 <WI_updateNetgameStats+0x2e8>
   43334:	60 03 00 0f 	move s27, 0
   43338:	1a 10 00 a8 	load_32 s0, 4(s26)
   4333c:	20 0e 00 f2 	bz s0, 452 <WI_updateNetgameStats+0x9d4>
   43340:	00 0c 00 4f 	movehi s0, 96
   43344:	7e 93 00 88 	store_32 s27, 36(sp)
   43348:	60 93 2b 00 	or s27, s0, 2788
   4334c:	1b 10 00 a8 	load_32 s0, 4(s27)
   43350:	39 b0 00 a8 	load_32 s1, 44(s25)
   43354:	00 0b 00 05 	add_i s24, s0, 2
   43358:	01 90 01 07 	mull_i s0, s1, 100
   4335c:	22 40 00 a8 	load_32 s1, 16(s2)
   43360:	be 45 00 f8 	call 71416 <__divsi3>
   43364:	38 00 40 c1 	cmplt_i s1, s24, s0
   43368:	41 00 00 f4 	bnz s1, 8 <WI_updateNetgameStats+0x844>
   4336c:	00 03 f0 c0 	move s24, s0
   43370:	1b 13 00 88 	store_32 s24, 4(s27)
   43374:	21 0c 00 f4 	bnz s1, 388 <WI_updateNetgameStats+0x9cc>
   43378:	5e a0 00 a8 	load_32 s2, 40(sp)
   4337c:	7e 93 00 a8 	load_32 s27, 36(sp)
   43380:	1a 20 00 a8 	load_32 s0, 8(s26)
   43384:	40 00 00 f2 	bz s0, 8 <WI_updateNetgameStats+0x860>
   43388:	60 00 00 f6 	b 384 <WI_updateNetgameStats+0x9dc>
   4338c:	1e 83 00 a8 	load_32 s24, 32(sp)
   43390:	1a 30 00 a8 	load_32 s0, 12(s26)
   43394:	00 19 00 f2 	bz s0, 800 <WI_updateNetgameStats+0xb88>
   43398:	a5 00 00 f6 	b 660 <WI_updateNetgameStats+0xb00>
   4339c:	60 03 00 0f 	move s27, 0
   433a0:	1a 10 00 a8 	load_32 s0, 4(s26)
   433a4:	e0 0d 00 f2 	bz s0, 444 <WI_updateNetgameStats+0xa34>
   433a8:	00 0c 00 4f 	movehi s0, 96
   433ac:	7e 93 00 88 	store_32 s27, 36(sp)
   433b0:	60 53 2b 00 	or s27, s0, 2772
   433b4:	1b 10 00 a8 	load_32 s0, 4(s27)
   433b8:	39 c0 00 a8 	load_32 s1, 48(s25)
   433bc:	00 0b 00 05 	add_i s24, s0, 2
   433c0:	01 90 01 07 	mull_i s0, s1, 100
   433c4:	22 50 00 a8 	load_32 s1, 20(s2)
   433c8:	a4 45 00 f8 	call 71312 <__divsi3>
   433cc:	38 00 40 c1 	cmplt_i s1, s24, s0
   433d0:	41 00 00 f4 	bnz s1, 8 <WI_updateNetgameStats+0x8ac>
   433d4:	00 03 f0 c0 	move s24, s0
   433d8:	1b 13 00 88 	store_32 s24, 4(s27)
   433dc:	e1 0b 00 f4 	bnz s1, 380 <WI_updateNetgameStats+0xa2c>
   433e0:	5e a0 00 a8 	load_32 s2, 40(sp)
   433e4:	7e 93 00 a8 	load_32 s27, 36(sp)
   433e8:	1a 20 00 a8 	load_32 s0, 8(s26)
   433ec:	40 00 00 f2 	bz s0, 8 <WI_updateNetgameStats+0x8c8>
   433f0:	5e 00 00 f6 	b 376 <WI_updateNetgameStats+0xa3c>
   433f4:	1e 83 00 a8 	load_32 s24, 32(sp)
   433f8:	1a 30 00 a8 	load_32 s0, 12(s26)
   433fc:	c0 15 00 f2 	bz s0, 696 <WI_updateNetgameStats+0xb88>
   43400:	9c 00 00 f6 	b 624 <WI_updateNetgameStats+0xb44>
   43404:	60 03 00 0f 	move s27, 0
   43408:	1a 10 00 a8 	load_32 s0, 4(s26)
   4340c:	a0 0d 00 f2 	bz s0, 436 <WI_updateNetgameStats+0xa94>
   43410:	00 0c 00 4f 	movehi s0, 96
   43414:	7e 93 00 88 	store_32 s27, 36(sp)
   43418:	60 13 2b 00 	or s27, s0, 2756
   4341c:	1b 10 00 a8 	load_32 s0, 4(s27)
   43420:	39 d0 00 a8 	load_32 s1, 52(s25)
   43424:	00 0b 00 05 	add_i s24, s0, 2
   43428:	01 90 01 07 	mull_i s0, s1, 100
   4342c:	22 60 00 a8 	load_32 s1, 24(s2)
   43430:	8a 45 00 f8 	call 71208 <__divsi3>
   43434:	38 00 40 c1 	cmplt_i s1, s24, s0
   43438:	41 00 00 f4 	bnz s1, 8 <WI_updateNetgameStats+0x914>
   4343c:	00 03 f0 c0 	move s24, s0
   43440:	1b 13 00 88 	store_32 s24, 4(s27)
   43444:	a1 0b 00 f4 	bnz s1, 372 <WI_updateNetgameStats+0xa8c>
   43448:	5e a0 00 a8 	load_32 s2, 40(sp)
   4344c:	7e 93 00 a8 	load_32 s27, 36(sp)
   43450:	1a 20 00 a8 	load_32 s0, 8(s26)
   43454:	40 00 00 f2 	bz s0, 8 <WI_updateNetgameStats+0x930>
   43458:	5c 00 00 f6 	b 368 <WI_updateNetgameStats+0xa9c>
   4345c:	1e 83 00 a8 	load_32 s24, 32(sp)
   43460:	1a 30 00 a8 	load_32 s0, 12(s26)
   43464:	e0 13 00 f2 	bz s0, 636 <WI_updateNetgameStats+0xbb4>
   43468:	00 0c 00 4f 	movehi s0, 96
   4346c:	40 13 2b 00 	or s26, s0, 2756
   43470:	1a 30 00 a8 	load_32 s0, 12(s26)
   43474:	39 10 02 a8 	load_32 s1, 132(s25)
   43478:	20 0b 00 05 	add_i s25, s0, 2
   4347c:	01 90 01 07 	mull_i s0, s1, 100
   43480:	22 60 00 a8 	load_32 s1, 24(s2)
   43484:	75 45 00 f8 	call 71124 <__divsi3>
   43488:	59 00 40 c1 	cmplt_i s2, s25, s0
   4348c:	20 80 fc c0 	move s1, s25
   43490:	42 00 00 f4 	bnz s2, 8 <WI_updateNetgameStats+0x96c>
   43494:	20 00 f0 c0 	move s1, s0
   43498:	3a 30 00 88 	store_32 s1, 12(s26)
   4349c:	3b 28 00 f4 	bnz s27, 1284 <WI_updateNetgameStats+0xe74>
   434a0:	19 00 30 c1 	cmpge_i s0, s25, s0
   434a4:	20 12 00 f4 	bnz s0, 580 <WI_updateNetgameStats+0xbbc>
   434a8:	3e 01 00 f6 	b 1272 <WI_updateNetgameStats+0xe74>
   434ac:	65 1c 00 f2 	bz s5, 908 <WI_updateNetgameStats+0xd0c>
   434b0:	60 0c 00 4f 	movehi s3, 96
   434b4:	63 d0 2a 00 	or s3, s3, 2740
   434b8:	83 10 00 a8 	load_32 s4, 4(s3)
   434bc:	84 04 00 05 	add_i s4, s4, 1
   434c0:	83 10 00 88 	store_32 s4, 4(s3)
   434c4:	c1 22 00 f2 	bz s1, 1112 <WI_updateNetgameStats+0xdf0>
   434c8:	c0 10 01 a8 	load_32 s6, 68(s0)
   434cc:	62 00 00 f2 	bz s2, 12 <WI_updateNetgameStats+0x9ac>
   434d0:	e0 20 01 a8 	load_32 s7, 72(s0)
   434d4:	c7 00 53 c0 	add_i s6, s7, s6
   434d8:	e0 00 01 a8 	load_32 s7, 64(s0)
   434dc:	c6 80 63 c0 	sub_i s6, s6, s7
   434e0:	84 00 43 c1 	cmplt_i s4, s4, s6
   434e4:	44 00 00 f4 	bnz s4, 8 <WI_updateNetgameStats+0x9c0>
   434e8:	d3 00 00 f6 	b 844 <WI_updateNetgameStats+0xd08>
   434ec:	60 04 00 0f 	move s3, 1
   434f0:	21 1f 00 f2 	bz s1, 996 <WI_updateNetgameStats+0xda8>
   434f4:	d3 00 00 f6 	b 844 <WI_updateNetgameStats+0xd14>
   434f8:	60 07 00 0f 	move s27, 1
   434fc:	5e a0 00 a8 	load_32 s2, 40(sp)
   43500:	1a 20 00 a8 	load_32 s0, 8(s26)
   43504:	40 f4 ff f3 	bz s0, -376 <WI_updateNetgameStats+0x860>
   43508:	00 0c 00 4f 	movehi s0, 96
   4350c:	7e 93 00 88 	store_32 s27, 36(sp)
   43510:	60 93 2b 00 	or s27, s0, 2788
   43514:	1b 20 00 a8 	load_32 s0, 8(s27)
   43518:	39 50 01 a8 	load_32 s1, 84(s25)
   4351c:	00 0b 00 05 	add_i s24, s0, 2
   43520:	01 90 01 07 	mull_i s0, s1, 100
   43524:	22 40 00 a8 	load_32 s1, 16(s2)
   43528:	4c 45 00 f8 	call 70960 <__divsi3>
   4352c:	38 00 40 c1 	cmplt_i s1, s24, s0
   43530:	41 00 00 f4 	bnz s1, 8 <WI_updateNetgameStats+0xa0c>
   43534:	00 03 f0 c0 	move s24, s0
   43538:	1b 23 00 88 	store_32 s24, 8(s27)
   4353c:	e1 06 00 f4 	bnz s1, 220 <WI_updateNetgameStats+0xaec>
   43540:	1e 83 00 a8 	load_32 s24, 32(sp)
   43544:	5e a0 00 a8 	load_32 s2, 40(sp)
   43548:	7e 93 00 a8 	load_32 s27, 36(sp)
   4354c:	1a 30 00 a8 	load_32 s0, 12(s26)
   43550:	20 0b 00 f2 	bz s0, 356 <WI_updateNetgameStats+0xb88>
   43554:	36 00 00 f6 	b 216 <WI_updateNetgameStats+0xb00>
   43558:	60 07 00 0f 	move s27, 1
   4355c:	5e a0 00 a8 	load_32 s2, 40(sp)
   43560:	1a 20 00 a8 	load_32 s0, 8(s26)
   43564:	80 f4 ff f3 	bz s0, -368 <WI_updateNetgameStats+0x8c8>
   43568:	00 0c 00 4f 	movehi s0, 96
   4356c:	7e 93 00 88 	store_32 s27, 36(sp)
   43570:	60 53 2b 00 	or s27, s0, 2772
   43574:	1b 20 00 a8 	load_32 s0, 8(s27)
   43578:	39 60 01 a8 	load_32 s1, 88(s25)
   4357c:	00 0b 00 05 	add_i s24, s0, 2
   43580:	01 90 01 07 	mull_i s0, s1, 100
   43584:	22 50 00 a8 	load_32 s1, 20(s2)
   43588:	34 45 00 f8 	call 70864 <__divsi3>
   4358c:	38 00 40 c1 	cmplt_i s1, s24, s0
   43590:	41 00 00 f4 	bnz s1, 8 <WI_updateNetgameStats+0xa6c>
   43594:	00 03 f0 c0 	move s24, s0
   43598:	1b 23 00 88 	store_32 s24, 8(s27)
   4359c:	01 06 00 f4 	bnz s1, 192 <WI_updateNetgameStats+0xb30>
   435a0:	1e 83 00 a8 	load_32 s24, 32(sp)
   435a4:	5e a0 00 a8 	load_32 s2, 40(sp)
   435a8:	7e 93 00 a8 	load_32 s27, 36(sp)
   435ac:	1a 30 00 a8 	load_32 s0, 12(s26)
   435b0:	20 08 00 f2 	bz s0, 260 <WI_updateNetgameStats+0xb88>
   435b4:	2f 00 00 f6 	b 188 <WI_updateNetgameStats+0xb44>
   435b8:	60 07 00 0f 	move s27, 1
   435bc:	5e a0 00 a8 	load_32 s2, 40(sp)
   435c0:	1a 20 00 a8 	load_32 s0, 8(s26)
   435c4:	c0 f4 ff f3 	bz s0, -360 <WI_updateNetgameStats+0x930>
   435c8:	00 0c 00 4f 	movehi s0, 96
   435cc:	7e 93 00 88 	store_32 s27, 36(sp)
   435d0:	60 13 2b 00 	or s27, s0, 2756
   435d4:	1b 20 00 a8 	load_32 s0, 8(s27)
   435d8:	39 70 01 a8 	load_32 s1, 92(s25)
   435dc:	00 0b 00 05 	add_i s24, s0, 2
   435e0:	01 90 01 07 	mull_i s0, s1, 100
   435e4:	22 60 00 a8 	load_32 s1, 24(s2)
   435e8:	1c 45 00 f8 	call 70768 <__divsi3>
   435ec:	38 00 40 c1 	cmplt_i s1, s24, s0
   435f0:	41 00 00 f4 	bnz s1, 8 <WI_updateNetgameStats+0xacc>
   435f4:	00 03 f0 c0 	move s24, s0
   435f8:	1b 23 00 88 	store_32 s24, 8(s27)
   435fc:	61 06 00 f4 	bnz s1, 204 <WI_updateNetgameStats+0xb9c>
   43600:	1e 83 00 a8 	load_32 s24, 32(sp)
   43604:	5e a0 00 a8 	load_32 s2, 40(sp)
   43608:	7e 93 00 a8 	load_32 s27, 36(sp)
   4360c:	1a 30 00 a8 	load_32 s0, 12(s26)
   43610:	80 06 00 f2 	bz s0, 208 <WI_updateNetgameStats+0xbb4>
   43614:	95 ff ff f7 	b -428 <WI_updateNetgameStats+0x93c>
   43618:	1e 83 00 a8 	load_32 s24, 32(sp)
   4361c:	60 07 00 0f 	move s27, 1
   43620:	5e a0 00 a8 	load_32 s2, 40(sp)
   43624:	1a 30 00 a8 	load_32 s0, 12(s26)
   43628:	60 04 00 f2 	bz s0, 140 <WI_updateNetgameStats+0xb88>
   4362c:	00 0c 00 4f 	movehi s0, 96
   43630:	40 93 2b 00 	or s26, s0, 2788
   43634:	1a 30 00 a8 	load_32 s0, 12(s26)
   43638:	39 f0 01 a8 	load_32 s1, 124(s25)
   4363c:	20 0b 00 05 	add_i s25, s0, 2
   43640:	01 90 01 07 	mull_i s0, s1, 100
   43644:	22 40 00 a8 	load_32 s1, 16(s2)
   43648:	04 45 00 f8 	call 70672 <__divsi3>
   4364c:	59 00 40 c1 	cmplt_i s2, s25, s0
   43650:	20 80 fc c0 	move s1, s25
   43654:	62 02 00 f4 	bnz s2, 76 <WI_updateNetgameStats+0xb74>
   43658:	11 00 00 f6 	b 68 <WI_updateNetgameStats+0xb70>
   4365c:	1e 83 00 a8 	load_32 s24, 32(sp)
   43660:	60 07 00 0f 	move s27, 1
   43664:	5e a0 00 a8 	load_32 s2, 40(sp)
   43668:	1a 30 00 a8 	load_32 s0, 12(s26)
   4366c:	40 02 00 f2 	bz s0, 72 <WI_updateNetgameStats+0xb88>
   43670:	00 0c 00 4f 	movehi s0, 96
   43674:	40 53 2b 00 	or s26, s0, 2772
   43678:	1a 30 00 a8 	load_32 s0, 12(s26)
   4367c:	39 00 02 a8 	load_32 s1, 128(s25)
   43680:	20 0b 00 05 	add_i s25, s0, 2
   43684:	01 90 01 07 	mull_i s0, s1, 100
   43688:	22 50 00 a8 	load_32 s1, 20(s2)
   4368c:	f3 44 00 f8 	call 70604 <__divsi3>
   43690:	59 00 40 c1 	cmplt_i s2, s25, s0
   43694:	20 80 fc c0 	move s1, s25
   43698:	42 00 00 f4 	bnz s2, 8 <WI_updateNetgameStats+0xb74>
   4369c:	20 00 f0 c0 	move s1, s0
   436a0:	3a 30 00 88 	store_32 s1, 12(s26)
   436a4:	fb 17 00 f4 	bnz s27, 764 <WI_updateNetgameStats+0xe74>
   436a8:	19 00 30 c1 	cmpge_i s0, s25, s0
   436ac:	80 00 00 f4 	bnz s0, 16 <WI_updateNetgameStats+0xb90>
   436b0:	bc 00 00 f6 	b 752 <WI_updateNetgameStats+0xe74>
   436b4:	5b 00 00 f2 	bz s27, 8 <WI_updateNetgameStats+0xb90>
   436b8:	ba 00 00 f6 	b 744 <WI_updateNetgameStats+0xe74>
   436bc:	00 00 00 0f 	move s0, 0
   436c0:	20 48 01 0f 	move s1, 82
   436c4:	b3 00 00 f6 	b 716 <WI_updateNetgameStats+0xe64>
   436c8:	1e 83 00 a8 	load_32 s24, 32(sp)
   436cc:	60 07 00 0f 	move s27, 1
   436d0:	5e a0 00 a8 	load_32 s2, 40(sp)
   436d4:	1a 30 00 a8 	load_32 s0, 12(s26)
   436d8:	40 00 00 f2 	bz s0, 8 <WI_updateNetgameStats+0xbb4>
   436dc:	63 ff ff f7 	b -628 <WI_updateNetgameStats+0x93c>
   436e0:	5b 00 00 f2 	bz s27, 8 <WI_updateNetgameStats+0xbbc>
   436e4:	af 00 00 f6 	b 700 <WI_updateNetgameStats+0xe74>
   436e8:	00 00 00 0f 	move s0, 0
   436ec:	20 48 01 0f 	move s1, 82
   436f0:	3d 23 00 f8 	call 36084 <S_StartSound>
   436f4:	00 0c 00 4f 	movehi s0, 96
   436f8:	00 d0 2b 00 	or s0, s0, 2804
   436fc:	00 00 00 a8 	load_32 s0, (s0)
   43700:	38 00 00 a8 	load_32 s1, (s24)
   43704:	00 00 00 10 	cmpeq_i s0, s0, 0
   43708:	00 04 00 01 	and s0, s0, 1
   4370c:	00 04 00 0b 	shl s0, s0, 1
   43710:	00 04 00 00 	or s0, s0, 1
   43714:	00 80 50 c0 	add_i s0, s0, s1
   43718:	a1 00 00 f6 	b 644 <WI_updateNetgameStats+0xe70>
   4371c:	61 10 00 f2 	bz s1, 524 <WI_updateNetgameStats+0xdfc>
   43720:	a0 70 00 a8 	load_32 s5, 28(s0)
   43724:	62 00 00 f2 	bz s2, 12 <WI_updateNetgameStats+0xc04>
   43728:	c0 80 00 a8 	load_32 s6, 32(s0)
   4372c:	a6 80 52 c0 	add_i s5, s6, s5
   43730:	c0 50 00 a8 	load_32 s6, 20(s0)
   43734:	a5 00 63 c0 	sub_i s5, s5, s6
   43738:	63 80 42 c1 	cmplt_i s3, s3, s5
   4373c:	43 00 00 f4 	bnz s3, 8 <WI_updateNetgameStats+0xc18>
   43740:	52 00 00 f6 	b 328 <WI_updateNetgameStats+0xd5c>
   43744:	60 04 00 0f 	move s3, 1
   43748:	41 10 00 f2 	bz s1, 520 <WI_updateNetgameStats+0xe24>
   4374c:	52 00 00 f6 	b 328 <WI_updateNetgameStats+0xd68>
   43750:	60 00 00 0f 	move s3, 0
   43754:	a4 00 00 88 	store_32 s5, (s4)
   43758:	a4 10 00 a8 	load_32 s5, 4(s4)
   4375c:	a5 04 00 05 	add_i s5, s5, 1
   43760:	a4 10 00 88 	store_32 s5, 4(s4)
   43764:	c0 f0 00 a8 	load_32 s6, 60(s0)
   43768:	61 00 00 f2 	bz s1, 12 <WI_updateNetgameStats+0xc48>
   4376c:	e0 10 01 a8 	load_32 s7, 68(s0)
   43770:	c7 00 53 c0 	add_i s6, s7, s6
   43774:	62 00 00 f2 	bz s2, 12 <WI_updateNetgameStats+0xc54>
   43778:	e0 20 01 a8 	load_32 s7, 72(s0)
   4377c:	c7 00 53 c0 	add_i s6, s7, s6
   43780:	e0 00 01 a8 	load_32 s7, 64(s0)
   43784:	c6 80 63 c0 	sub_i s6, s6, s7
   43788:	a5 00 43 c1 	cmplt_i s5, s5, s6
   4378c:	45 00 00 f4 	bnz s5, 8 <WI_updateNetgameStats+0xc68>
   43790:	04 00 00 f6 	b 16 <WI_updateNetgameStats+0xc74>
   43794:	60 04 00 0f 	move s3, 1
   43798:	c1 02 00 f2 	bz s1, 88 <WI_updateNetgameStats+0xcc4>
   4379c:	03 00 00 f6 	b 12 <WI_updateNetgameStats+0xc7c>
   437a0:	c4 10 00 88 	store_32 s6, 4(s4)
   437a4:	61 02 00 f2 	bz s1, 76 <WI_updateNetgameStats+0xcc4>
   437a8:	a4 20 00 a8 	load_32 s5, 8(s4)
   437ac:	a5 04 00 05 	add_i s5, s5, 1
   437b0:	a4 20 00 88 	store_32 s5, 8(s4)
   437b4:	c0 90 01 a8 	load_32 s6, 100(s0)
   437b8:	e0 a0 01 a8 	load_32 s7, 104(s0)
   437bc:	c7 00 53 c0 	add_i s6, s7, s6
   437c0:	62 00 00 f2 	bz s2, 12 <WI_updateNetgameStats+0xca0>
   437c4:	e0 c0 01 a8 	load_32 s7, 112(s0)
   437c8:	c7 00 53 c0 	add_i s6, s7, s6
   437cc:	e0 b0 01 a8 	load_32 s7, 108(s0)
   437d0:	c6 80 63 c0 	sub_i s6, s6, s7
   437d4:	a5 00 43 c1 	cmplt_i s5, s5, s6
   437d8:	45 00 00 f4 	bnz s5, 8 <WI_updateNetgameStats+0xcb4>
   437dc:	04 00 00 f6 	b 16 <WI_updateNetgameStats+0xcc0>
   437e0:	60 04 00 0f 	move s3, 1
   437e4:	02 0d 00 f2 	bz s2, 416 <WI_updateNetgameStats+0xe58>
   437e8:	03 00 00 f6 	b 12 <WI_updateNetgameStats+0xcc8>
   437ec:	c4 20 00 88 	store_32 s6, 8(s4)
   437f0:	a2 0c 00 f2 	bz s2, 404 <WI_updateNetgameStats+0xe58>
   437f4:	44 30 00 a8 	load_32 s2, 12(s4)
   437f8:	42 04 00 05 	add_i s2, s2, 1
   437fc:	44 30 00 88 	store_32 s2, 12(s4)
   43800:	a0 30 02 a8 	load_32 s5, 140(s0)
   43804:	c0 40 02 a8 	load_32 s6, 144(s0)
   43808:	a6 80 52 c0 	add_i s5, s6, s5
   4380c:	61 00 00 f2 	bz s1, 12 <WI_updateNetgameStats+0xcec>
   43810:	20 50 02 a8 	load_32 s1, 148(s0)
   43814:	a1 80 52 c0 	add_i s5, s1, s5
   43818:	00 60 02 a8 	load_32 s0, 152(s0)
   4381c:	05 00 60 c0 	sub_i s0, s5, s0
   43820:	22 00 40 c1 	cmplt_i s1, s2, s0
   43824:	e1 0b 00 f4 	bnz s1, 380 <WI_updateNetgameStats+0xe74>
   43828:	04 30 00 88 	store_32 s0, 12(s4)
   4382c:	a3 0b 00 f4 	bnz s3, 372 <WI_updateNetgameStats+0xe74>
   43830:	56 00 00 f6 	b 344 <WI_updateNetgameStats+0xe5c>
   43834:	c3 10 00 88 	store_32 s6, 4(s3)
   43838:	60 00 00 0f 	move s3, 0
   4383c:	c1 04 00 f2 	bz s1, 152 <WI_updateNetgameStats+0xda8>
   43840:	80 0c 00 4f 	movehi s4, 96
   43844:	84 d0 2a 00 	or s4, s4, 2740
   43848:	c4 20 00 a8 	load_32 s6, 8(s4)
   4384c:	c6 04 00 05 	add_i s6, s6, 1
   43850:	c4 20 00 88 	store_32 s6, 8(s4)
   43854:	05 07 00 f2 	bz s5, 224 <WI_updateNetgameStats+0xe08>
   43858:	e0 a0 01 a8 	load_32 s7, 104(s0)
   4385c:	62 00 00 f2 	bz s2, 12 <WI_updateNetgameStats+0xd3c>
   43860:	00 c1 01 a8 	load_32 s8, 112(s0)
   43864:	e8 80 53 c0 	add_i s7, s8, s7
   43868:	00 b1 01 a8 	load_32 s8, 108(s0)
   4386c:	e7 00 64 c0 	sub_i s7, s7, s8
   43870:	c6 80 43 c1 	cmplt_i s6, s6, s7
   43874:	46 00 00 f4 	bnz s6, 8 <WI_updateNetgameStats+0xd50>
   43878:	16 00 00 f6 	b 88 <WI_updateNetgameStats+0xda4>
   4387c:	60 04 00 0f 	move s3, 1
   43880:	22 08 00 f2 	bz s2, 260 <WI_updateNetgameStats+0xe58>
   43884:	15 00 00 f6 	b 84 <WI_updateNetgameStats+0xdac>
   43888:	60 00 00 0f 	move s3, 0
   4388c:	a4 00 00 88 	store_32 s5, (s4)
   43890:	01 06 00 f2 	bz s1, 192 <WI_updateNetgameStats+0xe24>
   43894:	a4 20 00 a8 	load_32 s5, 8(s4)
   43898:	a5 04 00 05 	add_i s5, s5, 1
   4389c:	a4 20 00 88 	store_32 s5, 8(s4)
   438a0:	c0 90 01 a8 	load_32 s6, 100(s0)
   438a4:	62 00 00 f2 	bz s2, 12 <WI_updateNetgameStats+0xd84>
   438a8:	e0 c0 01 a8 	load_32 s7, 112(s0)
   438ac:	c7 00 53 c0 	add_i s6, s7, s6
   438b0:	e0 b0 01 a8 	load_32 s7, 108(s0)
   438b4:	c6 80 63 c0 	sub_i s6, s6, s7
   438b8:	a5 00 43 c1 	cmplt_i s5, s5, s6
   438bc:	45 00 00 f4 	bnz s5, 8 <WI_updateNetgameStats+0xd98>
   438c0:	23 00 00 f6 	b 140 <WI_updateNetgameStats+0xe20>
   438c4:	60 04 00 0f 	move s3, 1
   438c8:	e2 05 00 f2 	bz s2, 188 <WI_updateNetgameStats+0xe58>
   438cc:	22 00 00 f6 	b 136 <WI_updateNetgameStats+0xe28>
   438d0:	e4 20 00 88 	store_32 s7, 8(s4)
   438d4:	82 05 00 f2 	bz s2, 176 <WI_updateNetgameStats+0xe58>
   438d8:	40 0c 00 4f 	movehi s2, 96
   438dc:	42 d0 2a 00 	or s2, s2, 2740
   438e0:	82 30 00 a8 	load_32 s4, 12(s2)
   438e4:	84 04 00 05 	add_i s4, s4, 1
   438e8:	82 30 00 88 	store_32 s4, 12(s2)
   438ec:	a5 02 00 f2 	bz s5, 84 <WI_updateNetgameStats+0xe14>
   438f0:	a0 40 02 a8 	load_32 s5, 144(s0)
   438f4:	61 00 00 f2 	bz s1, 12 <WI_updateNetgameStats+0xdd4>
   438f8:	20 50 02 a8 	load_32 s1, 148(s0)
   438fc:	a1 80 52 c0 	add_i s5, s1, s5
   43900:	00 60 02 a8 	load_32 s0, 152(s0)
   43904:	05 00 60 c0 	sub_i s0, s5, s0
   43908:	24 00 40 c1 	cmplt_i s1, s4, s0
   4390c:	a1 04 00 f4 	bnz s1, 148 <WI_updateNetgameStats+0xe74>
   43910:	02 30 00 88 	store_32 s0, 12(s2)
   43914:	63 04 00 f4 	bnz s3, 140 <WI_updateNetgameStats+0xe74>
   43918:	1c 00 00 f6 	b 112 <WI_updateNetgameStats+0xe5c>
   4391c:	c0 00 00 0f 	move s6, 0
   43920:	c2 dd ff f3 	bz s2, -1096 <WI_updateNetgameStats+0x9ac>
   43924:	eb fe ff f7 	b -1108 <WI_updateNetgameStats+0x9a4>
   43928:	a0 00 00 0f 	move s5, 0
   4392c:	22 f0 ff f3 	bz s2, -508 <WI_updateNetgameStats+0xc04>
   43930:	7e ff ff f7 	b -520 <WI_updateNetgameStats+0xbfc>
   43934:	e0 00 00 0f 	move s7, 0
   43938:	82 f9 ff f3 	bz s2, -208 <WI_updateNetgameStats+0xd3c>
   4393c:	c9 ff ff f7 	b -220 <WI_updateNetgameStats+0xd34>
   43940:	a0 00 00 0f 	move s5, 0
   43944:	e1 fd ff f3 	bz s1, -68 <WI_updateNetgameStats+0xdd4>
   43948:	ec ff ff f7 	b -80 <WI_updateNetgameStats+0xdcc>
   4394c:	c4 20 00 88 	store_32 s6, 8(s4)
   43950:	a2 01 00 f2 	bz s2, 52 <WI_updateNetgameStats+0xe58>
   43954:	44 30 00 a8 	load_32 s2, 12(s4)
   43958:	42 04 00 05 	add_i s2, s2, 1
   4395c:	44 30 00 88 	store_32 s2, 12(s4)
   43960:	a0 30 02 a8 	load_32 s5, 140(s0)
   43964:	61 00 00 f2 	bz s1, 12 <WI_updateNetgameStats+0xe44>
   43968:	20 50 02 a8 	load_32 s1, 148(s0)
   4396c:	a1 80 52 c0 	add_i s5, s1, s5
   43970:	00 60 02 a8 	load_32 s0, 152(s0)
   43974:	05 00 60 c0 	sub_i s0, s5, s0
   43978:	22 00 40 c1 	cmplt_i s1, s2, s0
   4397c:	21 01 00 f4 	bnz s1, 36 <WI_updateNetgameStats+0xe74>
   43980:	04 30 00 88 	store_32 s0, 12(s4)
   43984:	e3 00 00 f4 	bnz s3, 28 <WI_updateNetgameStats+0xe74>
   43988:	00 00 00 0f 	move s0, 0
   4398c:	20 e4 00 0f 	move s1, 57
   43990:	95 22 00 f8 	call 35412 <S_StartSound>
   43994:	18 00 00 a8 	load_32 s0, (s24)
   43998:	00 04 00 05 	add_i s0, s0, 1
   4399c:	18 00 00 88 	store_32 s0, (s24)
   439a0:	fe b3 00 a8 	load_32 ra, 44(sp)
   439a4:	7e c3 00 a8 	load_32 s27, 48(sp)
   439a8:	5e d3 00 a8 	load_32 s26, 52(sp)
   439ac:	3e e3 00 a8 	load_32 s25, 56(sp)
   439b0:	1e f3 00 a8 	load_32 s24, 60(sp)
   439b4:	de 03 01 05 	add_i sp, sp, 64
   439b8:	1f 00 00 f0 	ret

00000000000439bc WI_drawNetgameStats:
   439bc:	de 03 fe 05 	add_i sp, sp, -128
   439c0:	1e f3 01 88 	store_32 s24, 124(sp)
   439c4:	3e e3 01 88 	store_32 s25, 120(sp)
   439c8:	5e d3 01 88 	store_32 s26, 116(sp)
   439cc:	7e c3 01 88 	store_32 s27, 112(sp)
   439d0:	fe b3 01 88 	store_32 ra, 108(sp)
   439d4:	00 0c 00 4f 	movehi s0, 96
   439d8:	20 20 28 00 	or s1, s0, 2568
   439dc:	3e 10 01 88 	store_32 s1, 68(sp)
   439e0:	00 0c 00 4f 	movehi s0, 96
   439e4:	21 00 00 a8 	load_32 s1, (s1)
   439e8:	40 20 02 00 	or s2, s0, 136
   439ec:	01 00 00 a6 	load_s16 s0, (s1)
   439f0:	1e a0 01 88 	store_32 s0, 104(sp)
   439f4:	02 00 00 a8 	load_32 s0, (s2)
   439f8:	22 10 00 a8 	load_32 s1, 4(s2)
   439fc:	47 00 00 4f 	movehi s2, 7
   43a00:	42 00 68 00 	or s2, s2, 6656
   43a04:	c0 38 00 f8 	call 58112 <memcpy>
   43a08:	00 03 00 0f 	move s24, 0
   43a0c:	20 03 05 0f 	move s25, 320
   43a10:	60 20 03 0f 	move s3, 200
   43a14:	00 00 fc c0 	move s0, s24
   43a18:	20 00 fc c0 	move s1, s24
   43a1c:	40 80 fc c0 	move s2, s25
   43a20:	24 09 00 f8 	call 9360 <V_MarkRect>
   43a24:	00 0c 00 4f 	movehi s0, 96
   43a28:	20 0c 00 4f 	movehi s1, 96
   43a2c:	40 13 27 00 	or s26, s0, 2500
   43a30:	61 23 27 00 	or s27, s1, 2504
   43a34:	1a 00 00 a8 	load_32 s0, (s26)
   43a38:	3b 00 00 a8 	load_32 s1, (s27)
   43a3c:	21 20 00 a8 	load_32 s1, 8(s1)
   43a40:	21 08 00 0b 	shl s1, s1, 2
   43a44:	00 80 50 c0 	add_i s0, s0, s1
   43a48:	60 00 00 a8 	load_32 s3, (s0)
   43a4c:	03 00 00 a6 	load_s16 s0, (s3)
   43a50:	40 00 fc c0 	move s2, s24
   43a54:	19 00 60 c0 	sub_i s0, s25, s0
   43a58:	20 7c 00 0a 	shr s1, s0, 31
   43a5c:	00 80 50 c0 	add_i s0, s0, s1
   43a60:	20 08 00 0f 	move s1, 2
   43a64:	00 04 00 09 	ashr s0, s0, 1
   43a68:	98 09 00 f8 	call 9824 <V_DrawPatch>
   43a6c:	1a 00 00 a8 	load_32 s0, (s26)
   43a70:	3b 00 00 a8 	load_32 s1, (s27)
   43a74:	21 20 00 a8 	load_32 s1, 8(s1)
   43a78:	21 08 00 0b 	shl s1, s1, 2
   43a7c:	00 80 50 c0 	add_i s0, s0, s1
   43a80:	20 0c 00 4f 	movehi s1, 96
   43a84:	00 00 00 a8 	load_32 s0, (s0)
   43a88:	21 30 27 00 	or s1, s1, 2508
   43a8c:	00 08 00 a6 	load_s16 s0, 2(s0)
   43a90:	61 00 00 a8 	load_32 s3, (s1)
   43a94:	00 14 00 07 	mull_i s0, s0, 5
   43a98:	43 00 00 a6 	load_s16 s2, (s3)
   43a9c:	20 7c 00 09 	ashr s1, s0, 31
   43aa0:	21 78 00 0a 	shr s1, s1, 30
   43aa4:	00 80 50 c0 	add_i s0, s0, s1
   43aa8:	39 00 61 c0 	sub_i s1, s25, s2
   43aac:	00 08 00 09 	ashr s0, s0, 2
   43ab0:	41 7c 00 0a 	shr s2, s1, 31
   43ab4:	41 00 51 c0 	add_i s2, s1, s2
   43ab8:	20 08 00 05 	add_i s1, s0, 2
   43abc:	02 04 00 09 	ashr s0, s2, 1
   43ac0:	40 00 fc c0 	move s2, s24
   43ac4:	81 09 00 f8 	call 9732 <V_DrawPatch>
   43ac8:	00 0c 00 4f 	movehi s0, 96
   43acc:	60 0c 00 4f 	movehi s3, 96
   43ad0:	20 cb 00 0f 	move s25, 50
   43ad4:	60 b3 2a 00 	or s27, s0, 2732
   43ad8:	00 0c 00 4f 	movehi s0, 96
   43adc:	3b 00 00 a8 	load_32 s1, (s27)
   43ae0:	40 d3 2b 00 	or s26, s0, 2804
   43ae4:	01 00 00 a4 	load_u16 s0, (s1)
   43ae8:	3a 00 00 a8 	load_32 s1, (s26)
   43aec:	40 3c 00 0a 	shr s2, s0, 15
   43af0:	21 00 00 10 	cmpeq_i s1, s1, 0
   43af4:	00 00 51 c0 	add_i s0, s0, s2
   43af8:	43 e0 2b 00 	or s2, s3, 2808
   43afc:	5e 90 01 88 	store_32 s2, 100(sp)
   43b00:	21 04 00 01 	and s1, s1, 1
   43b04:	00 00 e0 c1 	sext_16 s0, s0
   43b08:	62 00 00 a8 	load_32 s3, (s2)
   43b0c:	21 14 00 0b 	shl s1, s1, 5
   43b10:	00 04 00 09 	ashr s0, s0, 1
   43b14:	01 00 50 c0 	add_i s0, s1, s0
   43b18:	23 00 00 a6 	load_s16 s1, (s3)
   43b1c:	00 80 01 05 	add_i s0, s0, 96
   43b20:	00 80 60 c0 	sub_i s0, s0, s1
   43b24:	20 80 fc c0 	move s1, s25
   43b28:	40 00 fc c0 	move s2, s24
   43b2c:	67 09 00 f8 	call 9628 <V_DrawPatch>
   43b30:	1b 00 00 a8 	load_32 s0, (s27)
   43b34:	60 0c 00 4f 	movehi s3, 96
   43b38:	00 00 00 a4 	load_u16 s0, (s0)
   43b3c:	3a 00 00 a8 	load_32 s1, (s26)
   43b40:	40 3c 00 0a 	shr s2, s0, 15
   43b44:	21 00 00 10 	cmpeq_i s1, s1, 0
   43b48:	00 00 51 c0 	add_i s0, s0, s2
   43b4c:	43 f0 2b 00 	or s2, s3, 2812
   43b50:	21 04 00 01 	and s1, s1, 1
   43b54:	00 00 e0 c1 	sext_16 s0, s0
   43b58:	62 00 00 a8 	load_32 s3, (s2)
   43b5c:	21 14 00 0b 	shl s1, s1, 5
   43b60:	00 04 00 09 	ashr s0, s0, 1
   43b64:	01 00 50 c0 	add_i s0, s1, s0
   43b68:	23 00 00 a6 	load_s16 s1, (s3)
   43b6c:	00 80 02 05 	add_i s0, s0, 160
   43b70:	00 80 60 c0 	sub_i s0, s0, s1
   43b74:	20 80 fc c0 	move s1, s25
   43b78:	40 00 fc c0 	move s2, s24
   43b7c:	53 09 00 f8 	call 9548 <V_DrawPatch>
   43b80:	1b 00 00 a8 	load_32 s0, (s27)
   43b84:	60 0c 00 4f 	movehi s3, 96
   43b88:	00 00 00 a4 	load_u16 s0, (s0)
   43b8c:	3a 00 00 a8 	load_32 s1, (s26)
   43b90:	40 3c 00 0a 	shr s2, s0, 15
   43b94:	21 00 00 10 	cmpeq_i s1, s1, 0
   43b98:	00 00 51 c0 	add_i s0, s0, s2
   43b9c:	43 00 2c 00 	or s2, s3, 2816
   43ba0:	21 04 00 01 	and s1, s1, 1
   43ba4:	00 00 e0 c1 	sext_16 s0, s0
   43ba8:	62 00 00 a8 	load_32 s3, (s2)
   43bac:	21 14 00 0b 	shl s1, s1, 5
   43bb0:	00 04 00 09 	ashr s0, s0, 1
   43bb4:	01 00 50 c0 	add_i s0, s1, s0
   43bb8:	23 00 00 a6 	load_s16 s1, (s3)
   43bbc:	00 80 03 05 	add_i s0, s0, 224
   43bc0:	00 80 60 c0 	sub_i s0, s0, s1
   43bc4:	20 80 fc c0 	move s1, s25
   43bc8:	1e 73 01 88 	store_32 s24, 92(sp)
   43bcc:	40 00 fc c0 	move s2, s24
   43bd0:	3e 09 00 f8 	call 9464 <V_DrawPatch>
   43bd4:	5e 33 01 88 	store_32 s26, 76(sp)
   43bd8:	1a 00 00 a8 	load_32 s0, (s26)
   43bdc:	00 02 00 f2 	bz s0, 64 <WI_drawNetgameStats+0x260>
   43be0:	1b 00 00 a8 	load_32 s0, (s27)
   43be4:	20 0c 00 4f 	movehi s1, 96
   43be8:	21 10 2c 00 	or s1, s1, 2820
   43bec:	00 00 00 a4 	load_u16 s0, (s0)
   43bf0:	61 00 00 a8 	load_32 s3, (s1)
   43bf4:	40 3c 00 0a 	shr s2, s0, 15
   43bf8:	00 00 51 c0 	add_i s0, s0, s2
   43bfc:	23 00 00 a6 	load_s16 s1, (s3)
   43c00:	40 00 00 0f 	move s2, 0
   43c04:	00 00 e0 c1 	sext_16 s0, s0
   43c08:	00 04 00 09 	ashr s0, s0, 1
   43c0c:	00 80 04 05 	add_i s0, s0, 288
   43c10:	00 80 60 c0 	sub_i s0, s0, s1
   43c14:	20 c8 00 0f 	move s1, 50
   43c18:	2c 09 00 f8 	call 9392 <V_DrawPatch>
   43c1c:	1e 90 01 a8 	load_32 s0, 100(sp)
   43c20:	20 00 01 0f 	move s1, 64
   43c24:	40 00 02 0f 	move s2, 128
   43c28:	00 00 00 a8 	load_32 s0, (s0)
   43c2c:	00 08 00 a6 	load_s16 s0, 2(s0)
   43c30:	7e a0 01 a8 	load_32 s3, 104(sp)
   43c34:	00 cb 00 05 	add_i s24, s0, 50
   43c38:	01 80 61 c0 	sub_i s0, s1, s3
   43c3c:	1e 90 00 88 	store_32 s0, 36(sp)
   43c40:	02 80 61 c0 	sub_i s0, s2, s3
   43c44:	1e 80 00 88 	store_32 s0, 32(sp)
   43c48:	00 00 03 0f 	move s0, 192
   43c4c:	3b 04 00 4f 	movehi s1, 59
   43c50:	40 0c 00 4f 	movehi s2, 96
   43c54:	00 80 61 c0 	sub_i s0, s0, s3
   43c58:	1e 70 00 88 	store_32 s0, 28(sp)
   43c5c:	01 00 02 00 	or s0, s1, 128
   43c60:	1e 00 01 88 	store_32 s0, 64(sp)
   43c64:	02 50 2a 00 	or s0, s2, 2708
   43c68:	1e e0 00 88 	store_32 s0, 56(sp)
   43c6c:	00 0c 00 4f 	movehi s0, 96
   43c70:	20 0c 00 4f 	movehi s1, 96
   43c74:	40 0c 00 4f 	movehi s2, 96
   43c78:	00 90 2a 00 	or s0, s0, 2724
   43c7c:	1e d0 00 88 	store_32 s0, 52(sp)
   43c80:	01 90 2b 00 	or s0, s1, 2788
   43c84:	1e c0 00 88 	store_32 s0, 48(sp)
   43c88:	02 50 2b 00 	or s0, s2, 2772
   43c8c:	1e b0 00 88 	store_32 s0, 44(sp)
   43c90:	00 0c 00 4f 	movehi s0, 96
   43c94:	20 0c 00 4f 	movehi s1, 96
   43c98:	40 0c 00 4f 	movehi s2, 96
   43c9c:	00 10 2b 00 	or s0, s0, 2756
   43ca0:	1e a0 00 88 	store_32 s0, 40(sp)
   43ca4:	01 d0 2a 00 	or s0, s1, 2740
   43ca8:	1e 60 00 88 	store_32 s0, 24(sp)
   43cac:	02 70 27 00 	or s0, s2, 2524
   43cb0:	1e 80 01 88 	store_32 s0, 96(sp)
   43cb4:	13 64 66 4f 	movehi s0, 209715
   43cb8:	20 0c 00 4f 	movehi s1, 96
   43cbc:	40 04 00 0f 	move s2, 1
   43cc0:	5e 50 00 88 	store_32 s2, 20(sp)
   43cc4:	60 9c 19 00 	or s3, s0, 1639
   43cc8:	01 10 28 00 	or s0, s1, 2564
   43ccc:	1e 40 00 88 	store_32 s0, 16(sp)
   43cd0:	be 70 01 a8 	load_32 s5, 92(sp)
   43cd4:	20 80 f2 c0 	move s1, s5
   43cd8:	7e f3 00 88 	store_32 s27, 60(sp)
   43cdc:	7e a0 01 88 	store_32 s3, 104(sp)
   43ce0:	1e 00 01 a8 	load_32 s0, 64(sp)
   43ce4:	81 08 00 0b 	shl s4, s1, 2
   43ce8:	00 00 52 c0 	add_i s0, s0, s4
   43cec:	00 00 00 a8 	load_32 s0, (s0)
   43cf0:	40 26 00 f2 	bz s0, 1224 <WI_drawNetgameStats+0x7fc>
   43cf4:	1b 00 00 a8 	load_32 s0, (s27)
   43cf8:	00 00 00 a4 	load_u16 s0, (s0)
   43cfc:	40 83 fd c0 	move s26, s27
   43d00:	60 83 f0 c0 	move s27, s1
   43d04:	3e 30 01 a8 	load_32 s1, 76(sp)
   43d08:	40 3c 00 0a 	shr s2, s0, 15
   43d0c:	21 00 00 a8 	load_32 s1, (s1)
   43d10:	00 00 51 c0 	add_i s0, s0, s2
   43d14:	5e e0 00 a8 	load_32 s2, 56(sp)
   43d18:	00 00 e0 c1 	sext_16 s0, s0
   43d1c:	21 00 00 10 	cmpeq_i s1, s1, 0
   43d20:	42 00 52 c0 	add_i s2, s2, s4
   43d24:	5e 90 01 88 	store_32 s2, 100(sp)
   43d28:	00 04 00 09 	ashr s0, s0, 1
   43d2c:	21 04 00 01 	and s1, s1, 1
   43d30:	62 00 00 a8 	load_32 s3, (s2)
   43d34:	21 14 00 0b 	shl s1, s1, 5
   43d38:	01 00 50 c0 	add_i s0, s1, s0
   43d3c:	23 00 00 a6 	load_s16 s1, (s3)
   43d40:	00 80 00 05 	add_i s0, s0, 32
   43d44:	1e 60 01 88 	store_32 s0, 88(sp)
   43d48:	00 80 60 c0 	sub_i s0, s0, s1
   43d4c:	20 00 fc c0 	move s1, s24
   43d50:	40 80 f2 c0 	move s2, s5
   43d54:	20 03 fc c0 	move s25, s24
   43d58:	00 03 f2 c0 	move s24, s4
   43d5c:	db 08 00 f8 	call 9068 <V_DrawPatch>
   43d60:	1e d0 00 a8 	load_32 s0, 52(sp)
   43d64:	00 00 00 a8 	load_32 s0, (s0)
   43d68:	7e 23 01 88 	store_32 s27, 72(sp)
   43d6c:	1b 00 10 c1 	cmpne_i s0, s27, s0
   43d70:	40 01 00 f4 	bnz s0, 40 <WI_drawNetgameStats+0x3dc>
   43d74:	1e 90 01 a8 	load_32 s0, 100(sp)
   43d78:	00 00 00 a8 	load_32 s0, (s0)
   43d7c:	00 00 00 a6 	load_s16 s0, (s0)
   43d80:	3e 60 01 a8 	load_32 s1, 88(sp)
   43d84:	7a 00 00 a8 	load_32 s3, (s26)
   43d88:	01 00 60 c0 	sub_i s0, s1, s0
   43d8c:	20 80 fc c0 	move s1, s25
   43d90:	5e 70 01 a8 	load_32 s2, 92(sp)
   43d94:	cd 08 00 f8 	call 9012 <V_DrawPatch>
   43d98:	1e c0 00 a8 	load_32 s0, 48(sp)
   43d9c:	99 28 00 05 	add_i s4, s25, 10
   43da0:	1e 53 01 88 	store_32 s24, 84(sp)
   43da4:	00 00 5c c0 	add_i s0, s0, s24
   43da8:	00 03 00 a8 	load_32 s24, (s0)
   43dac:	3e 43 01 88 	store_32 s25, 80(sp)
   43db0:	5e 80 01 a8 	load_32 s2, 96(sp)
   43db4:	7e a0 01 a8 	load_32 s3, 104(sp)
   43db8:	18 00 00 14 	cmplt_i s0, s24, 0
   43dbc:	9e 90 01 88 	store_32 s4, 100(sp)
   43dc0:	40 07 00 f4 	bnz s0, 232 <WI_drawNetgameStats+0x4ec>
   43dc4:	1e 90 00 a8 	load_32 s0, 36(sp)
   43dc8:	20 03 00 0f 	move s25, 0
   43dcc:	3e 60 01 a8 	load_32 s1, 88(sp)
   43dd0:	60 83 50 c0 	add_i s27, s0, s1
   43dd4:	1e 10 01 a8 	load_32 s0, 68(sp)
   43dd8:	60 00 00 a8 	load_32 s3, (s0)
   43ddc:	00 80 fd c0 	move s0, s27
   43de0:	20 00 f2 c0 	move s1, s4
   43de4:	40 03 f1 c0 	move s26, s2
   43de8:	40 80 fc c0 	move s2, s25
   43dec:	b7 08 00 f8 	call 8924 <V_DrawPatch>
   43df0:	1a 00 00 a8 	load_32 s0, (s26)
   43df4:	a0 00 00 a6 	load_s16 s5, (s0)
   43df8:	00 00 fd c0 	move s0, s26
   43dfc:	38 02 00 f2 	bz s24, 68 <WI_drawNetgameStats+0x484>
   43e00:	00 00 fc c0 	move s0, s24
   43e04:	7e a0 01 a8 	load_32 s3, 104(sp)
   43e08:	20 80 f1 c1 	mulh_i s1, s0, s3
   43e0c:	00 24 00 05 	add_i s0, s0, 9
   43e10:	39 07 00 05 	add_i s25, s25, 1
   43e14:	41 08 00 09 	ashr s2, s1, 2
   43e18:	21 7c 00 0a 	shr s1, s1, 31
   43e1c:	22 80 50 c0 	add_i s1, s2, s1
   43e20:	40 48 00 16 	cmpgt_u s2, s0, 18
   43e24:	00 80 f0 c0 	move s0, s1
   43e28:	02 ff ff f5 	bnz s2, -32 <WI_drawNetgameStats+0x44c>
   43e2c:	5e 80 01 a8 	load_32 s2, 96(sp)
   43e30:	18 28 1f 10 	cmpeq_i s0, s24, 1994
   43e34:	9e 90 01 a8 	load_32 s4, 100(sp)
   43e38:	80 03 00 f4 	bnz s0, 112 <WI_drawNetgameStats+0x4ec>
   43e3c:	05 00 00 f6 	b 20 <WI_drawNetgameStats+0x494>
   43e40:	40 00 f0 c0 	move s2, s0
   43e44:	7e a0 01 a8 	load_32 s3, 104(sp)
   43e48:	20 07 00 0f 	move s25, 1
   43e4c:	9e 90 01 a8 	load_32 s4, 100(sp)
   43e50:	18 80 f1 c1 	mulh_i s0, s24, s3
   43e54:	7b 83 62 c0 	sub_i s27, s27, s5
   43e58:	39 ff ff 05 	add_i s25, s25, -1
   43e5c:	20 08 00 09 	ashr s1, s0, 2
   43e60:	00 7c 00 0a 	shr s0, s0, 31
   43e64:	41 03 50 c0 	add_i s26, s1, s0
   43e68:	1a 28 00 07 	mull_i s0, s26, 10
   43e6c:	18 00 60 c0 	sub_i s0, s24, s0
   43e70:	00 08 00 0b 	shl s0, s0, 2
   43e74:	02 00 50 c0 	add_i s0, s2, s0
   43e78:	40 00 00 0f 	move s2, 0
   43e7c:	60 00 00 a8 	load_32 s3, (s0)
   43e80:	00 80 fd c0 	move s0, s27
   43e84:	20 00 f2 c0 	move s1, s4
   43e88:	00 83 f2 c0 	move s24, s5
   43e8c:	8f 08 00 f8 	call 8764 <V_DrawPatch>
   43e90:	a0 00 fc c0 	move s5, s24
   43e94:	5e 80 01 a8 	load_32 s2, 96(sp)
   43e98:	9e 90 01 a8 	load_32 s4, 100(sp)
   43e9c:	7e a0 01 a8 	load_32 s3, 104(sp)
   43ea0:	00 03 fd c0 	move s24, s26
   43ea4:	79 fd ff f5 	bnz s25, -84 <WI_drawNetgameStats+0x494>
   43ea8:	1e b0 00 a8 	load_32 s0, 44(sp)
   43eac:	3e 50 01 a8 	load_32 s1, 84(sp)
   43eb0:	00 80 50 c0 	add_i s0, s0, s1
   43eb4:	40 03 00 a8 	load_32 s26, (s0)
   43eb8:	1a 00 00 14 	cmplt_i s0, s26, 0
   43ebc:	40 07 00 f4 	bnz s0, 232 <WI_drawNetgameStats+0x5e8>
   43ec0:	1e 80 00 a8 	load_32 s0, 32(sp)
   43ec4:	20 03 00 0f 	move s25, 0
   43ec8:	3e 60 01 a8 	load_32 s1, 88(sp)
   43ecc:	60 83 50 c0 	add_i s27, s0, s1
   43ed0:	1e 10 01 a8 	load_32 s0, 68(sp)
   43ed4:	60 00 00 a8 	load_32 s3, (s0)
   43ed8:	00 80 fd c0 	move s0, s27
   43edc:	20 00 f2 c0 	move s1, s4
   43ee0:	00 03 f1 c0 	move s24, s2
   43ee4:	40 80 fc c0 	move s2, s25
   43ee8:	78 08 00 f8 	call 8672 <V_DrawPatch>
   43eec:	18 00 00 a8 	load_32 s0, (s24)
   43ef0:	a0 00 00 a6 	load_s16 s5, (s0)
   43ef4:	00 00 fc c0 	move s0, s24
   43ef8:	3a 02 00 f2 	bz s26, 68 <WI_drawNetgameStats+0x580>
   43efc:	00 00 fd c0 	move s0, s26
   43f00:	7e a0 01 a8 	load_32 s3, 104(sp)
   43f04:	20 80 f1 c1 	mulh_i s1, s0, s3
   43f08:	00 24 00 05 	add_i s0, s0, 9
   43f0c:	39 07 00 05 	add_i s25, s25, 1
   43f10:	41 08 00 09 	ashr s2, s1, 2
   43f14:	21 7c 00 0a 	shr s1, s1, 31
   43f18:	22 80 50 c0 	add_i s1, s2, s1
   43f1c:	40 48 00 16 	cmpgt_u s2, s0, 18
   43f20:	00 80 f0 c0 	move s0, s1
   43f24:	02 ff ff f5 	bnz s2, -32 <WI_drawNetgameStats+0x548>
   43f28:	5e 80 01 a8 	load_32 s2, 96(sp)
   43f2c:	1a 28 1f 10 	cmpeq_i s0, s26, 1994
   43f30:	9e 90 01 a8 	load_32 s4, 100(sp)
   43f34:	80 03 00 f4 	bnz s0, 112 <WI_drawNetgameStats+0x5e8>
   43f38:	05 00 00 f6 	b 20 <WI_drawNetgameStats+0x590>
   43f3c:	40 00 f0 c0 	move s2, s0
   43f40:	7e a0 01 a8 	load_32 s3, 104(sp)
   43f44:	20 07 00 0f 	move s25, 1
   43f48:	9e 90 01 a8 	load_32 s4, 100(sp)
   43f4c:	1a 80 f1 c1 	mulh_i s0, s26, s3
   43f50:	7b 83 62 c0 	sub_i s27, s27, s5
   43f54:	39 ff ff 05 	add_i s25, s25, -1
   43f58:	20 08 00 09 	ashr s1, s0, 2
   43f5c:	00 7c 00 0a 	shr s0, s0, 31
   43f60:	01 03 50 c0 	add_i s24, s1, s0
   43f64:	18 28 00 07 	mull_i s0, s24, 10
   43f68:	1a 00 60 c0 	sub_i s0, s26, s0
   43f6c:	00 08 00 0b 	shl s0, s0, 2
   43f70:	02 00 50 c0 	add_i s0, s2, s0
   43f74:	40 00 00 0f 	move s2, 0
   43f78:	60 00 00 a8 	load_32 s3, (s0)
   43f7c:	00 80 fd c0 	move s0, s27
   43f80:	20 00 f2 c0 	move s1, s4
   43f84:	40 83 f2 c0 	move s26, s5
   43f88:	50 08 00 f8 	call 8512 <V_DrawPatch>
   43f8c:	a0 00 fd c0 	move s5, s26
   43f90:	5e 80 01 a8 	load_32 s2, 96(sp)
   43f94:	9e 90 01 a8 	load_32 s4, 100(sp)
   43f98:	7e a0 01 a8 	load_32 s3, 104(sp)
   43f9c:	40 03 fc c0 	move s26, s24
   43fa0:	79 fd ff f5 	bnz s25, -84 <WI_drawNetgameStats+0x590>
   43fa4:	1e a0 00 a8 	load_32 s0, 40(sp)
   43fa8:	3e 50 01 a8 	load_32 s1, 84(sp)
   43fac:	00 80 50 c0 	add_i s0, s0, s1
   43fb0:	40 03 00 a8 	load_32 s26, (s0)
   43fb4:	1a 00 00 14 	cmplt_i s0, s26, 0
   43fb8:	40 07 00 f4 	bnz s0, 232 <WI_drawNetgameStats+0x6e4>
   43fbc:	1e 70 00 a8 	load_32 s0, 28(sp)
   43fc0:	20 03 00 0f 	move s25, 0
   43fc4:	3e 60 01 a8 	load_32 s1, 88(sp)
   43fc8:	60 83 50 c0 	add_i s27, s0, s1
   43fcc:	1e 10 01 a8 	load_32 s0, 68(sp)
   43fd0:	60 00 00 a8 	load_32 s3, (s0)
   43fd4:	00 80 fd c0 	move s0, s27
   43fd8:	20 00 f2 c0 	move s1, s4
   43fdc:	00 03 f1 c0 	move s24, s2
   43fe0:	40 80 fc c0 	move s2, s25
   43fe4:	39 08 00 f8 	call 8420 <V_DrawPatch>
   43fe8:	18 00 00 a8 	load_32 s0, (s24)
   43fec:	a0 00 00 a6 	load_s16 s5, (s0)
   43ff0:	00 00 fc c0 	move s0, s24
   43ff4:	3a 02 00 f2 	bz s26, 68 <WI_drawNetgameStats+0x67c>
   43ff8:	00 00 fd c0 	move s0, s26
   43ffc:	7e a0 01 a8 	load_32 s3, 104(sp)
   44000:	20 80 f1 c1 	mulh_i s1, s0, s3
   44004:	00 24 00 05 	add_i s0, s0, 9
   44008:	39 07 00 05 	add_i s25, s25, 1
   4400c:	41 08 00 09 	ashr s2, s1, 2
   44010:	21 7c 00 0a 	shr s1, s1, 31
   44014:	22 80 50 c0 	add_i s1, s2, s1
   44018:	40 48 00 16 	cmpgt_u s2, s0, 18
   4401c:	00 80 f0 c0 	move s0, s1
   44020:	02 ff ff f5 	bnz s2, -32 <WI_drawNetgameStats+0x644>
   44024:	5e 80 01 a8 	load_32 s2, 96(sp)
   44028:	1a 28 1f 10 	cmpeq_i s0, s26, 1994
   4402c:	9e 90 01 a8 	load_32 s4, 100(sp)
   44030:	80 03 00 f4 	bnz s0, 112 <WI_drawNetgameStats+0x6e4>
   44034:	05 00 00 f6 	b 20 <WI_drawNetgameStats+0x68c>
   44038:	40 00 f0 c0 	move s2, s0
   4403c:	7e a0 01 a8 	load_32 s3, 104(sp)
   44040:	20 07 00 0f 	move s25, 1
   44044:	9e 90 01 a8 	load_32 s4, 100(sp)
   44048:	1a 80 f1 c1 	mulh_i s0, s26, s3
   4404c:	7b 83 62 c0 	sub_i s27, s27, s5
   44050:	39 ff ff 05 	add_i s25, s25, -1
   44054:	20 08 00 09 	ashr s1, s0, 2
   44058:	00 7c 00 0a 	shr s0, s0, 31
   4405c:	01 03 50 c0 	add_i s24, s1, s0
   44060:	18 28 00 07 	mull_i s0, s24, 10
   44064:	1a 00 60 c0 	sub_i s0, s26, s0
   44068:	00 08 00 0b 	shl s0, s0, 2
   4406c:	02 00 50 c0 	add_i s0, s2, s0
   44070:	40 00 00 0f 	move s2, 0
   44074:	60 00 00 a8 	load_32 s3, (s0)
   44078:	00 80 fd c0 	move s0, s27
   4407c:	20 00 f2 c0 	move s1, s4
   44080:	40 83 f2 c0 	move s26, s5
   44084:	11 08 00 f8 	call 8260 <V_DrawPatch>
   44088:	5e 80 01 a8 	load_32 s2, 96(sp)
   4408c:	a0 00 fd c0 	move s5, s26
   44090:	9e 90 01 a8 	load_32 s4, 100(sp)
   44094:	7e a0 01 a8 	load_32 s3, 104(sp)
   44098:	40 03 fc c0 	move s26, s24
   4409c:	79 fd ff f5 	bnz s25, -84 <WI_drawNetgameStats+0x68c>
   440a0:	1e 30 01 a8 	load_32 s0, 76(sp)
   440a4:	00 00 00 a8 	load_32 s0, (s0)
   440a8:	be 70 01 a8 	load_32 s5, 92(sp)
   440ac:	1e 43 01 a8 	load_32 s24, 80(sp)
   440b0:	e0 07 00 f2 	bz s0, 252 <WI_drawNetgameStats+0x7f0>
   440b4:	1e 60 00 a8 	load_32 s0, 24(sp)
   440b8:	3e 50 01 a8 	load_32 s1, 84(sp)
   440bc:	00 80 50 c0 	add_i s0, s0, s1
   440c0:	c0 00 00 a8 	load_32 s6, (s0)
   440c4:	1e 80 01 a8 	load_32 s0, 96(sp)
   440c8:	00 00 00 a8 	load_32 s0, (s0)
   440cc:	40 03 00 a6 	load_s16 s26, (s0)
   440d0:	7e 53 00 a8 	load_32 s27, 20(sp)
   440d4:	86 01 00 f2 	bz s6, 48 <WI_drawNetgameStats+0x748>
   440d8:	00 00 f3 c0 	move s0, s6
   440dc:	60 83 f2 c0 	move s27, s5
   440e0:	20 80 f1 c1 	mulh_i s1, s0, s3
   440e4:	00 24 00 05 	add_i s0, s0, 9
   440e8:	7b 07 00 05 	add_i s27, s27, 1
   440ec:	41 08 00 09 	ashr s2, s1, 2
   440f0:	21 7c 00 0a 	shr s1, s1, 31
   440f4:	22 80 50 c0 	add_i s1, s2, s1
   440f8:	40 48 00 16 	cmpgt_u s2, s0, 18
   440fc:	00 80 f0 c0 	move s0, s1
   44100:	02 ff ff f5 	bnz s2, -32 <WI_drawNetgameStats+0x724>
   44104:	06 7c 00 09 	ashr s0, s6, 31
   44108:	26 00 50 c0 	add_i s1, s6, s0
   4410c:	01 00 30 c0 	xor s0, s1, s0
   44110:	20 28 1f 10 	cmpeq_i s1, s0, 1994
   44114:	c1 04 00 f4 	bnz s1, 152 <WI_drawNetgameStats+0x7f0>
   44118:	de 50 01 88 	store_32 s6, 84(sp)
   4411c:	3e 60 01 a8 	load_32 s1, 88(sp)
   44120:	21 03 04 05 	add_i s25, s1, 256
   44124:	20 80 f1 c1 	mulh_i s1, s0, s3
   44128:	39 03 6d c0 	sub_i s25, s25, s26
   4412c:	7b ff ff 05 	add_i s27, s27, -1
   44130:	41 08 00 09 	ashr s2, s1, 2
   44134:	21 7c 00 0a 	shr s1, s1, 31
   44138:	02 83 50 c0 	add_i s24, s2, s1
   4413c:	38 28 00 07 	mull_i s1, s24, 10
   44140:	00 80 60 c0 	sub_i s0, s0, s1
   44144:	3e 80 01 a8 	load_32 s1, 96(sp)
   44148:	00 08 00 0b 	shl s0, s0, 2
   4414c:	01 00 50 c0 	add_i s0, s1, s0
   44150:	60 00 00 a8 	load_32 s3, (s0)
   44154:	00 80 fc c0 	move s0, s25
   44158:	20 00 f2 c0 	move s1, s4
   4415c:	5e 70 01 a8 	load_32 s2, 92(sp)
   44160:	da 07 00 f8 	call 8040 <V_DrawPatch>
   44164:	9e 90 01 a8 	load_32 s4, 100(sp)
   44168:	7e a0 01 a8 	load_32 s3, 104(sp)
   4416c:	00 00 fc c0 	move s0, s24
   44170:	bb fd ff f5 	bnz s27, -76 <WI_drawNetgameStats+0x768>
   44174:	1e 50 01 a8 	load_32 s0, 84(sp)
   44178:	be 70 01 a8 	load_32 s5, 92(sp)
   4417c:	1e 43 01 a8 	load_32 s24, 80(sp)
   44180:	00 fc ff 12 	cmpgt_i s0, s0, -1
   44184:	40 01 00 f4 	bnz s0, 40 <WI_drawNetgameStats+0x7f0>
   44188:	3e 40 00 a8 	load_32 s1, 16(sp)
   4418c:	19 e0 ff 05 	add_i s0, s25, -8
   44190:	61 00 00 a8 	load_32 s3, (s1)
   44194:	20 00 f2 c0 	move s1, s4
   44198:	40 80 f2 c0 	move s2, s5
   4419c:	20 83 f2 c0 	move s25, s5
   441a0:	ca 07 00 f8 	call 7976 <V_DrawPatch>
   441a4:	a0 80 fc c0 	move s5, s25
   441a8:	7e a0 01 a8 	load_32 s3, 104(sp)
   441ac:	7e f3 00 a8 	load_32 s27, 60(sp)
   441b0:	18 87 00 05 	add_i s24, s24, 33
   441b4:	3e 20 01 a8 	load_32 s1, 72(sp)
   441b8:	21 04 00 05 	add_i s1, s1, 1
   441bc:	01 10 00 18 	cmplt_u s0, s1, 4
   441c0:	00 d9 ff f5 	bnz s0, -1248 <WI_drawNetgameStats+0x324>
   441c4:	fe b3 01 a8 	load_32 ra, 108(sp)
   441c8:	7e c3 01 a8 	load_32 s27, 112(sp)
   441cc:	5e d3 01 a8 	load_32 s26, 116(sp)
   441d0:	3e e3 01 a8 	load_32 s25, 120(sp)
   441d4:	1e f3 01 a8 	load_32 s24, 124(sp)
   441d8:	de 03 02 05 	add_i sp, sp, 128
   441dc:	1f 00 00 f0 	ret

00000000000441e0 WI_initStats:
   441e0:	de 03 ff 05 	add_i sp, sp, -64
   441e4:	fe f3 00 88 	store_32 ra, 60(sp)
   441e8:	00 0c 00 4f 	movehi s0, 96
   441ec:	20 0c 00 4f 	movehi s1, 96
   441f0:	60 0c 00 4f 	movehi s3, 96
   441f4:	00 60 27 00 	or s0, s0, 2520
   441f8:	21 50 28 00 	or s1, s1, 2580
   441fc:	40 00 00 0f 	move s2, 0
   44200:	40 00 00 88 	store_32 s2, (s0)
   44204:	03 20 2c 00 	or s0, s3, 2824
   44208:	41 00 00 82 	store_8 s2, (s1)
   4420c:	20 0c 00 4f 	movehi s1, 96
   44210:	40 04 00 0f 	move s2, 1
   44214:	40 00 00 88 	store_32 s2, (s0)
   44218:	60 0c 00 4f 	movehi s3, 96
   4421c:	01 10 2b 00 	or s0, s1, 2756
   44220:	20 0c 00 4f 	movehi s1, 96
   44224:	40 fc ff 0f 	move s2, -1
   44228:	40 00 00 88 	store_32 s2, (s0)
   4422c:	03 90 2b 00 	or s0, s3, 2788
   44230:	21 50 2b 00 	or s1, s1, 2772
   44234:	60 0c 00 4f 	movehi s3, 96
   44238:	41 00 00 88 	store_32 s2, (s1)
   4423c:	20 0c 00 4f 	movehi s1, 96
   44240:	40 00 00 88 	store_32 s2, (s0)
   44244:	00 0c 00 4f 	movehi s0, 96
   44248:	21 30 2c 00 	or s1, s1, 2828
   4424c:	00 40 2c 00 	or s0, s0, 2832
   44250:	41 00 00 88 	store_32 s2, (s1)
   44254:	23 d0 28 00 	or s1, s3, 2612
   44258:	40 00 00 88 	store_32 s2, (s0)
   4425c:	00 8c 00 0f 	move s0, 35
   44260:	01 00 00 88 	store_32 s0, (s1)
   44264:	e8 ec ff f9 	call -19552 <WI_initAnimatedBack>
   44268:	fe f3 00 a8 	load_32 ra, 60(sp)
   4426c:	de 03 01 05 	add_i sp, sp, 64
   44270:	1f 00 00 f0 	ret

0000000000044274 WI_updateStats:
   44274:	de 03 ff 05 	add_i sp, sp, -64
   44278:	1e f3 00 88 	store_32 s24, 60(sp)
   4427c:	3e e3 00 88 	store_32 s25, 56(sp)
   44280:	5e d3 00 88 	store_32 s26, 52(sp)
   44284:	7e c3 00 88 	store_32 s27, 48(sp)
   44288:	fe b3 00 88 	store_32 ra, 44(sp)
   4428c:	2b ed ff f9 	call -19284 <WI_updateAnimatedBack>
   44290:	00 0c 00 4f 	movehi s0, 96
   44294:	40 53 28 00 	or s26, s0, 2580
   44298:	00 0c 00 4f 	movehi s0, 96
   4429c:	3a 00 00 a0 	load_u8 s1, (s26)
   442a0:	20 23 2c 00 	or s25, s0, 2824
   442a4:	19 00 00 a8 	load_32 s0, (s25)
   442a8:	41 04 00 11 	cmpne_i s2, s1, 1
   442ac:	c2 0a 00 f4 	bnz s2, 344 <WI_updateStats+0x190>
   442b0:	40 28 00 10 	cmpeq_i s2, s0, 10
   442b4:	82 0a 00 f4 	bnz s2, 336 <WI_updateStats+0x190>
   442b8:	00 0c 00 4f 	movehi s0, 96
   442bc:	20 0c 00 4f 	movehi s1, 96
   442c0:	00 03 00 0f 	move s24, 0
   442c4:	1a 03 00 82 	store_8 s24, (s26)
   442c8:	00 b0 28 00 	or s0, s0, 2604
   442cc:	21 90 2a 00 	or s1, s1, 2724
   442d0:	40 0c 00 4f 	movehi s2, 96
   442d4:	00 00 00 a8 	load_32 s0, (s0)
   442d8:	21 00 00 a8 	load_32 s1, (s1)
   442dc:	21 a0 00 07 	mull_i s1, s1, 40
   442e0:	60 83 50 c0 	add_i s27, s0, s1
   442e4:	02 20 27 00 	or s0, s2, 2504
   442e8:	3b 10 00 a8 	load_32 s1, 4(s27)
   442ec:	3e a3 00 88 	store_32 s25, 40(sp)
   442f0:	20 03 00 a8 	load_32 s25, (s0)
   442f4:	01 90 01 07 	mull_i s0, s1, 100
   442f8:	39 40 00 a8 	load_32 s1, 16(s25)
   442fc:	d7 41 00 f8 	call 67420 <__divsi3>
   44300:	20 0c 00 4f 	movehi s1, 96
   44304:	21 90 2b 00 	or s1, s1, 2788
   44308:	01 00 00 88 	store_32 s0, (s1)
   4430c:	1b 20 00 a8 	load_32 s0, 8(s27)
   44310:	39 50 00 a8 	load_32 s1, 20(s25)
   44314:	00 90 01 07 	mull_i s0, s0, 100
   44318:	d0 41 00 f8 	call 67392 <__divsi3>
   4431c:	20 0c 00 4f 	movehi s1, 96
   44320:	21 50 2b 00 	or s1, s1, 2772
   44324:	01 00 00 88 	store_32 s0, (s1)
   44328:	1b 30 00 a8 	load_32 s0, 12(s27)
   4432c:	39 60 00 a8 	load_32 s1, 24(s25)
   44330:	00 90 01 07 	mull_i s0, s0, 100
   44334:	c9 41 00 f8 	call 67364 <__divsi3>
   44338:	20 0c 00 4f 	movehi s1, 96
   4433c:	21 10 2b 00 	or s1, s1, 2756
   44340:	01 00 00 88 	store_32 s0, (s1)
   44344:	35 0c ea 4f 	movehi s1, 479349
   44348:	1b 40 00 a8 	load_32 s0, 16(s27)
   4434c:	21 ac 03 00 	or s1, s1, 235
   44350:	40 80 f0 c1 	mulh_i s2, s0, s1
   44354:	02 00 50 c0 	add_i s0, s2, s0
   44358:	40 0c 00 4f 	movehi s2, 96
   4435c:	60 14 00 09 	ashr s3, s0, 5
   44360:	42 40 2c 00 	or s2, s2, 2832
   44364:	00 7c 00 0a 	shr s0, s0, 31
   44368:	03 00 50 c0 	add_i s0, s3, s0
   4436c:	02 00 00 88 	store_32 s0, (s2)
   44370:	19 80 00 a8 	load_32 s0, 32(s25)
   44374:	20 80 f0 c1 	mulh_i s1, s0, s1
   44378:	01 00 50 c0 	add_i s0, s1, s0
   4437c:	20 0c 00 4f 	movehi s1, 96
   44380:	40 14 00 09 	ashr s2, s0, 5
   44384:	21 30 2c 00 	or s1, s1, 2828
   44388:	00 7c 00 0a 	shr s0, s0, 31
   4438c:	02 00 50 c0 	add_i s0, s2, s0
   44390:	01 00 00 88 	store_32 s0, (s1)
   44394:	20 48 01 0f 	move s1, 82
   44398:	00 00 fc c0 	move s0, s24
   4439c:	12 20 00 f8 	call 32840 <S_StartSound>
   443a0:	3e a0 00 a8 	load_32 s1, 40(sp)
   443a4:	00 28 00 0f 	move s0, 10
   443a8:	01 00 00 88 	store_32 s0, (s1)
   443ac:	1a 00 00 a0 	load_u8 s0, (s26)
   443b0:	40 00 00 f4 	bnz s0, 8 <WI_updateStats+0x144>
   443b4:	d1 00 00 f6 	b 836 <WI_updateStats+0x484>
   443b8:	00 03 00 0f 	move s24, 0
   443bc:	20 0c 00 0f 	move s1, 3
   443c0:	00 00 fc c0 	move s0, s24
   443c4:	08 20 00 f8 	call 32800 <S_StartSound>
   443c8:	0b 04 00 4f 	movehi s0, 43
   443cc:	00 00 40 00 	or s0, s0, 4096
   443d0:	00 00 00 a8 	load_32 s0, (s0)
   443d4:	00 08 00 11 	cmpne_i s0, s0, 2
   443d8:	80 06 00 f4 	bnz s0, 208 <WI_updateStats+0x234>
   443dc:	00 0c 00 4f 	movehi s0, 96
   443e0:	20 0c 00 4f 	movehi s1, 96
   443e4:	40 fc ff 0f 	move s2, -1
   443e8:	00 60 27 00 	or s0, s0, 2520
   443ec:	40 00 00 88 	store_32 s2, (s0)
   443f0:	01 60 28 00 	or s0, s1, 2584
   443f4:	1a 03 00 82 	store_8 s24, (s26)
   443f8:	20 28 00 0f 	move s1, 10
   443fc:	20 00 00 88 	store_32 s1, (s0)
   44400:	be 00 00 f6 	b 760 <WI_updateStats+0x484>
   44404:	40 f8 ff 05 	add_i s2, s0, -2
   44408:	62 20 00 16 	cmpgt_u s3, s2, 8
   4440c:	43 06 00 f4 	bnz s3, 200 <WI_updateStats+0x260>
   44410:	63 00 00 4f 	movehi s3, 3
   44414:	42 08 00 0b 	shl s2, s2, 2
   44418:	63 40 59 00 	or s3, s3, 5712
   4441c:	42 80 51 c0 	add_i s2, s2, s3
   44420:	42 00 00 a8 	load_32 s2, (s2)
   44424:	02 00 00 f0 	b s2
   44428:	00 0c 00 4f 	movehi s0, 96
   4442c:	20 0c 00 4f 	movehi s1, 96
   44430:	00 93 2b 00 	or s24, s0, 2788
   44434:	21 50 27 00 	or s1, s1, 2516
   44438:	18 00 00 a8 	load_32 s0, (s24)
   4443c:	40 0b 00 05 	add_i s26, s0, 2
   44440:	58 03 00 88 	store_32 s26, (s24)
   44444:	01 00 00 a0 	load_u8 s0, (s1)
   44448:	00 0c 00 01 	and s0, s0, 3
   4444c:	a0 00 00 f4 	bnz s0, 20 <WI_updateStats+0x1ec>
   44450:	00 00 00 0f 	move s0, 0
   44454:	20 04 00 0f 	move s1, 1
   44458:	e3 1f 00 f8 	call 32652 <S_StartSound>
   4445c:	58 03 00 a8 	load_32 s26, (s24)
   44460:	00 0c 00 4f 	movehi s0, 96
   44464:	20 0c 00 4f 	movehi s1, 96
   44468:	40 0c 00 4f 	movehi s2, 96
   4446c:	00 b0 28 00 	or s0, s0, 2604
   44470:	21 90 2a 00 	or s1, s1, 2724
   44474:	00 00 00 a8 	load_32 s0, (s0)
   44478:	21 00 00 a8 	load_32 s1, (s1)
   4447c:	21 a0 00 07 	mull_i s1, s1, 40
   44480:	00 80 50 c0 	add_i s0, s0, s1
   44484:	22 20 27 00 	or s1, s2, 2504
   44488:	00 10 00 a8 	load_32 s0, 4(s0)
   4448c:	21 00 00 a8 	load_32 s1, (s1)
   44490:	00 90 01 07 	mull_i s0, s0, 100
   44494:	21 40 00 a8 	load_32 s1, 16(s1)
   44498:	70 41 00 f8 	call 67008 <__divsi3>
   4449c:	3a 00 40 c1 	cmplt_i s1, s26, s0
   444a0:	c1 12 00 f4 	bnz s1, 600 <WI_updateStats+0x484>
   444a4:	58 00 00 f6 	b 352 <WI_updateStats+0x390>
   444a8:	00 0c 00 4f 	movehi s0, 96
   444ac:	20 0c 00 4f 	movehi s1, 96
   444b0:	40 04 00 0f 	move s2, 1
   444b4:	00 60 27 00 	or s0, s0, 2520
   444b8:	40 00 00 88 	store_32 s2, (s0)
   444bc:	01 60 28 00 	or s0, s1, 2584
   444c0:	1a 03 00 82 	store_8 s24, (s26)
   444c4:	20 30 02 0f 	move s1, 140
   444c8:	20 00 00 88 	store_32 s1, (s0)
   444cc:	4e ec ff f9 	call -20168 <WI_initAnimatedBack>
   444d0:	8a 00 00 f6 	b 552 <WI_updateStats+0x484>
   444d4:	20 04 00 01 	and s1, s0, 1
   444d8:	01 11 00 f2 	bz s1, 544 <WI_updateStats+0x484>
   444dc:	20 0c 00 4f 	movehi s1, 96
   444e0:	21 d0 28 00 	or s1, s1, 2612
   444e4:	41 00 00 a8 	load_32 s2, (s1)
   444e8:	42 fc ff 05 	add_i s2, s2, -1
   444ec:	41 00 00 88 	store_32 s2, (s1)
   444f0:	42 10 00 f4 	bnz s2, 520 <WI_updateStats+0x484>
   444f4:	00 04 00 05 	add_i s0, s0, 1
   444f8:	19 00 00 88 	store_32 s0, (s25)
   444fc:	00 8c 00 0f 	move s0, 35
   44500:	01 00 00 88 	store_32 s0, (s1)
   44504:	7d 00 00 f6 	b 500 <WI_updateStats+0x484>
   44508:	00 0c 00 4f 	movehi s0, 96
   4450c:	20 0c 00 4f 	movehi s1, 96
   44510:	00 53 2b 00 	or s24, s0, 2772
   44514:	21 50 27 00 	or s1, s1, 2516
   44518:	18 00 00 a8 	load_32 s0, (s24)
   4451c:	40 0b 00 05 	add_i s26, s0, 2
   44520:	58 03 00 88 	store_32 s26, (s24)
   44524:	01 00 00 a0 	load_u8 s0, (s1)
   44528:	00 0c 00 01 	and s0, s0, 3
   4452c:	a0 00 00 f4 	bnz s0, 20 <WI_updateStats+0x2cc>
   44530:	00 00 00 0f 	move s0, 0
   44534:	20 04 00 0f 	move s1, 1
   44538:	ab 1f 00 f8 	call 32428 <S_StartSound>
   4453c:	58 03 00 a8 	load_32 s26, (s24)
   44540:	00 0c 00 4f 	movehi s0, 96
   44544:	20 0c 00 4f 	movehi s1, 96
   44548:	40 0c 00 4f 	movehi s2, 96
   4454c:	00 b0 28 00 	or s0, s0, 2604
   44550:	21 90 2a 00 	or s1, s1, 2724
   44554:	00 00 00 a8 	load_32 s0, (s0)
   44558:	21 00 00 a8 	load_32 s1, (s1)
   4455c:	21 a0 00 07 	mull_i s1, s1, 40
   44560:	00 80 50 c0 	add_i s0, s0, s1
   44564:	22 20 27 00 	or s1, s2, 2504
   44568:	00 20 00 a8 	load_32 s0, 8(s0)
   4456c:	21 00 00 a8 	load_32 s1, (s1)
   44570:	00 90 01 07 	mull_i s0, s0, 100
   44574:	21 50 00 a8 	load_32 s1, 20(s1)
   44578:	38 41 00 f8 	call 66784 <__divsi3>
   4457c:	3a 00 40 c1 	cmplt_i s1, s26, s0
   44580:	c1 0b 00 f4 	bnz s1, 376 <WI_updateStats+0x484>
   44584:	20 00 00 f6 	b 128 <WI_updateStats+0x390>
   44588:	00 0c 00 4f 	movehi s0, 96
   4458c:	20 0c 00 4f 	movehi s1, 96
   44590:	00 13 2b 00 	or s24, s0, 2756
   44594:	21 50 27 00 	or s1, s1, 2516
   44598:	18 00 00 a8 	load_32 s0, (s24)
   4459c:	40 0b 00 05 	add_i s26, s0, 2
   445a0:	58 03 00 88 	store_32 s26, (s24)
   445a4:	01 00 00 a0 	load_u8 s0, (s1)
   445a8:	00 0c 00 01 	and s0, s0, 3
   445ac:	a0 00 00 f4 	bnz s0, 20 <WI_updateStats+0x34c>
   445b0:	00 00 00 0f 	move s0, 0
   445b4:	20 04 00 0f 	move s1, 1
   445b8:	8b 1f 00 f8 	call 32300 <S_StartSound>
   445bc:	58 03 00 a8 	load_32 s26, (s24)
   445c0:	00 0c 00 4f 	movehi s0, 96
   445c4:	20 0c 00 4f 	movehi s1, 96
   445c8:	40 0c 00 4f 	movehi s2, 96
   445cc:	00 b0 28 00 	or s0, s0, 2604
   445d0:	21 90 2a 00 	or s1, s1, 2724
   445d4:	00 00 00 a8 	load_32 s0, (s0)
   445d8:	21 00 00 a8 	load_32 s1, (s1)
   445dc:	21 a0 00 07 	mull_i s1, s1, 40
   445e0:	00 80 50 c0 	add_i s0, s0, s1
   445e4:	22 20 27 00 	or s1, s2, 2504
   445e8:	00 30 00 a8 	load_32 s0, 12(s0)
   445ec:	21 00 00 a8 	load_32 s1, (s1)
   445f0:	00 90 01 07 	mull_i s0, s0, 100
   445f4:	21 60 00 a8 	load_32 s1, 24(s1)
   445f8:	18 41 00 f8 	call 66656 <__divsi3>
   445fc:	3a 00 40 c1 	cmplt_i s1, s26, s0
   44600:	c1 07 00 f4 	bnz s1, 248 <WI_updateStats+0x484>
   44604:	18 00 00 88 	store_32 s0, (s24)
   44608:	00 00 00 0f 	move s0, 0
   4460c:	20 48 01 0f 	move s1, 82
   44610:	75 1f 00 f8 	call 32212 <S_StartSound>
   44614:	19 00 00 a8 	load_32 s0, (s25)
   44618:	00 04 00 05 	add_i s0, s0, 1
   4461c:	19 00 00 88 	store_32 s0, (s25)
   44620:	36 00 00 f6 	b 216 <WI_updateStats+0x484>
   44624:	00 0c 00 4f 	movehi s0, 96
   44628:	00 50 27 00 	or s0, s0, 2516
   4462c:	00 00 00 a0 	load_u8 s0, (s0)
   44630:	00 0c 00 01 	and s0, s0, 3
   44634:	80 00 00 f4 	bnz s0, 16 <WI_updateStats+0x3d0>
   44638:	00 00 00 0f 	move s0, 0
   4463c:	20 04 00 0f 	move s1, 1
   44640:	69 1f 00 f8 	call 32164 <S_StartSound>
   44644:	00 0c 00 4f 	movehi s0, 96
   44648:	20 0c 00 4f 	movehi s1, 96
   4464c:	60 0c 00 4f 	movehi s3, 96
   44650:	40 40 2c 00 	or s2, s0, 2832
   44654:	01 b0 28 00 	or s0, s1, 2604
   44658:	23 90 2a 00 	or s1, s3, 2724
   4465c:	62 00 00 a8 	load_32 s3, (s2)
   44660:	00 00 00 a8 	load_32 s0, (s0)
   44664:	21 00 00 a8 	load_32 s1, (s1)
   44668:	21 a0 00 07 	mull_i s1, s1, 40
   4466c:	00 80 50 c0 	add_i s0, s0, s1
   44670:	35 0c ea 4f 	movehi s1, 479349
   44674:	00 40 00 a8 	load_32 s0, 16(s0)
   44678:	21 ac 03 00 	or s1, s1, 235
   4467c:	80 80 f0 c1 	mulh_i s4, s0, s1
   44680:	04 00 50 c0 	add_i s0, s4, s0
   44684:	83 0c 00 05 	add_i s4, s3, 3
   44688:	a0 14 00 09 	ashr s5, s0, 5
   4468c:	00 7c 00 0a 	shr s0, s0, 31
   44690:	65 00 50 c0 	add_i s3, s5, s0
   44694:	04 80 41 c1 	cmplt_i s0, s4, s3
   44698:	40 00 00 f4 	bnz s0, 8 <WI_updateStats+0x42c>
   4469c:	80 80 f1 c0 	move s4, s3
   446a0:	60 0c 00 4f 	movehi s3, 96
   446a4:	82 00 00 88 	store_32 s4, (s2)
   446a8:	80 0c 00 4f 	movehi s4, 96
   446ac:	63 30 2c 00 	or s3, s3, 2828
   446b0:	84 20 27 00 	or s4, s4, 2504
   446b4:	43 00 00 a8 	load_32 s2, (s3)
   446b8:	42 0c 00 05 	add_i s2, s2, 3
   446bc:	43 00 00 88 	store_32 s2, (s3)
   446c0:	84 00 00 a8 	load_32 s4, (s4)
   446c4:	84 80 00 a8 	load_32 s4, 32(s4)
   446c8:	24 80 f0 c1 	mulh_i s1, s4, s1
   446cc:	21 00 52 c0 	add_i s1, s1, s4
   446d0:	81 14 00 09 	ashr s4, s1, 5
   446d4:	21 7c 00 0a 	shr s1, s1, 31
   446d8:	24 80 50 c0 	add_i s1, s4, s1
   446dc:	42 80 40 c1 	cmplt_i s2, s2, s1
   446e0:	c2 00 00 f4 	bnz s2, 24 <WI_updateStats+0x484>
   446e4:	23 00 00 88 	store_32 s1, (s3)
   446e8:	80 00 00 f4 	bnz s0, 16 <WI_updateStats+0x484>
   446ec:	c7 ff ff f7 	b -228 <WI_updateStats+0x394>
   446f0:	41 00 00 f2 	bz s1, 8 <WI_updateStats+0x484>
   446f4:	31 ff ff f7 	b -828 <WI_updateStats+0x144>
   446f8:	fe b3 00 a8 	load_32 ra, 44(sp)
   446fc:	7e c3 00 a8 	load_32 s27, 48(sp)
   44700:	5e d3 00 a8 	load_32 s26, 52(sp)
   44704:	3e e3 00 a8 	load_32 s25, 56(sp)
   44708:	1e f3 00 a8 	load_32 s24, 60(sp)
   4470c:	de 03 01 05 	add_i sp, sp, 64
   44710:	1f 00 00 f0 	ret

0000000000044714 WI_drawStats:
   44714:	de 03 ff 05 	add_i sp, sp, -64
   44718:	1e f3 00 88 	store_32 s24, 60(sp)
   4471c:	3e e3 00 88 	store_32 s25, 56(sp)
   44720:	5e d3 00 88 	store_32 s26, 52(sp)
   44724:	7e c3 00 88 	store_32 s27, 48(sp)
   44728:	fe b3 00 88 	store_32 ra, 44(sp)
   4472c:	00 0c 00 4f 	movehi s0, 96
   44730:	20 0c 00 4f 	movehi s1, 96
   44734:	00 70 27 00 	or s0, s0, 2524
   44738:	1e a0 00 88 	store_32 s0, 40(sp)
   4473c:	21 20 02 00 	or s1, s1, 136
   44740:	00 00 00 a8 	load_32 s0, (s0)
   44744:	00 08 00 a6 	load_s16 s0, 2(s0)
   44748:	00 0c 00 07 	mull_i s0, s0, 3
   4474c:	40 7c 00 0a 	shr s2, s0, 31
   44750:	00 00 51 c0 	add_i s0, s0, s2
   44754:	47 00 00 4f 	movehi s2, 7
   44758:	00 04 00 09 	ashr s0, s0, 1
   4475c:	1e 60 00 88 	store_32 s0, 24(sp)
   44760:	01 00 00 a8 	load_32 s0, (s1)
   44764:	42 00 68 00 	or s2, s2, 6656
   44768:	21 10 00 a8 	load_32 s1, 4(s1)
   4476c:	66 35 00 f8 	call 54680 <memcpy>
   44770:	00 03 00 0f 	move s24, 0
   44774:	20 03 05 0f 	move s25, 320
   44778:	60 20 03 0f 	move s3, 200
   4477c:	00 00 fc c0 	move s0, s24
   44780:	20 00 fc c0 	move s1, s24
   44784:	40 80 fc c0 	move s2, s25
   44788:	ca 05 00 f8 	call 5928 <V_MarkRect>
   4478c:	00 0c 00 4f 	movehi s0, 96
   44790:	20 0c 00 4f 	movehi s1, 96
   44794:	40 13 27 00 	or s26, s0, 2500
   44798:	61 23 27 00 	or s27, s1, 2504
   4479c:	1a 00 00 a8 	load_32 s0, (s26)
   447a0:	3b 00 00 a8 	load_32 s1, (s27)
   447a4:	21 20 00 a8 	load_32 s1, 8(s1)
   447a8:	21 08 00 0b 	shl s1, s1, 2
   447ac:	00 80 50 c0 	add_i s0, s0, s1
   447b0:	60 00 00 a8 	load_32 s3, (s0)
   447b4:	03 00 00 a6 	load_s16 s0, (s3)
   447b8:	40 00 fc c0 	move s2, s24
   447bc:	19 00 60 c0 	sub_i s0, s25, s0
   447c0:	20 7c 00 0a 	shr s1, s0, 31
   447c4:	00 80 50 c0 	add_i s0, s0, s1
   447c8:	20 08 00 0f 	move s1, 2
   447cc:	00 04 00 09 	ashr s0, s0, 1
   447d0:	3e 06 00 f8 	call 6392 <V_DrawPatch>
   447d4:	1a 00 00 a8 	load_32 s0, (s26)
   447d8:	7e 53 00 88 	store_32 s27, 20(sp)
   447dc:	3b 00 00 a8 	load_32 s1, (s27)
   447e0:	21 20 00 a8 	load_32 s1, 8(s1)
   447e4:	21 08 00 0b 	shl s1, s1, 2
   447e8:	00 80 50 c0 	add_i s0, s0, s1
   447ec:	20 0c 00 4f 	movehi s1, 96
   447f0:	00 00 00 a8 	load_32 s0, (s0)
   447f4:	21 30 27 00 	or s1, s1, 2508
   447f8:	00 08 00 a6 	load_s16 s0, 2(s0)
   447fc:	61 00 00 a8 	load_32 s3, (s1)
   44800:	00 14 00 07 	mull_i s0, s0, 5
   44804:	43 00 00 a6 	load_s16 s2, (s3)
   44808:	20 7c 00 09 	ashr s1, s0, 31
   4480c:	21 78 00 0a 	shr s1, s1, 30
   44810:	00 80 50 c0 	add_i s0, s0, s1
   44814:	39 00 61 c0 	sub_i s1, s25, s2
   44818:	00 08 00 09 	ashr s0, s0, 2
   4481c:	41 7c 00 0a 	shr s2, s1, 31
   44820:	41 00 51 c0 	add_i s2, s1, s2
   44824:	20 08 00 05 	add_i s1, s0, 2
   44828:	02 04 00 09 	ashr s0, s2, 1
   4482c:	40 00 fc c0 	move s2, s24
   44830:	26 06 00 f8 	call 6296 <V_DrawPatch>
   44834:	00 0c 00 4f 	movehi s0, 96
   44838:	00 e0 2b 00 	or s0, s0, 2808
   4483c:	60 00 00 a8 	load_32 s3, (s0)
   44840:	00 c8 00 0f 	move s0, 50
   44844:	20 00 f0 c0 	move s1, s0
   44848:	40 00 fc c0 	move s2, s24
   4484c:	1f 06 00 f8 	call 6268 <V_DrawPatch>
   44850:	00 0c 00 4f 	movehi s0, 96
   44854:	00 90 2b 00 	or s0, s0, 2788
   44858:	60 03 00 a8 	load_32 s27, (s0)
   4485c:	1b 00 00 14 	cmplt_i s0, s27, 0
   44860:	40 07 00 f4 	bnz s0, 232 <WI_drawStats+0x234>
   44864:	00 0c 00 4f 	movehi s0, 96
   44868:	00 3b 04 0f 	move s24, 270
   4486c:	20 03 00 0f 	move s25, 0
   44870:	00 20 28 00 	or s0, s0, 2568
   44874:	20 c8 00 0f 	move s1, 50
   44878:	60 00 00 a8 	load_32 s3, (s0)
   4487c:	00 00 fc c0 	move s0, s24
   44880:	40 80 fc c0 	move s2, s25
   44884:	11 06 00 f8 	call 6212 <V_DrawPatch>
   44888:	1e a0 00 a8 	load_32 s0, 40(sp)
   4488c:	00 00 00 a8 	load_32 s0, (s0)
   44890:	80 00 00 a6 	load_s16 s4, (s0)
   44894:	1b 02 00 f2 	bz s27, 64 <WI_drawStats+0x1c0>
   44898:	13 64 66 4f 	movehi s0, 209715
   4489c:	20 80 fd c0 	move s1, s27
   448a0:	00 9c 19 00 	or s0, s0, 1639
   448a4:	41 00 f0 c1 	mulh_i s2, s1, s0
   448a8:	21 24 00 05 	add_i s1, s1, 9
   448ac:	39 07 00 05 	add_i s25, s25, 1
   448b0:	62 08 00 09 	ashr s3, s2, 2
   448b4:	42 7c 00 0a 	shr s2, s2, 31
   448b8:	43 00 51 c0 	add_i s2, s3, s2
   448bc:	61 48 00 16 	cmpgt_u s3, s1, 18
   448c0:	20 00 f1 c0 	move s1, s2
   448c4:	03 ff ff f5 	bnz s3, -32 <WI_drawStats+0x190>
   448c8:	1b 28 1f 10 	cmpeq_i s0, s27, 1994
   448cc:	e0 03 00 f4 	bnz s0, 124 <WI_drawStats+0x234>
   448d0:	02 00 00 f6 	b 8 <WI_drawStats+0x1c4>
   448d4:	20 07 00 0f 	move s25, 1
   448d8:	13 64 66 4f 	movehi s0, 209715
   448dc:	00 9c 19 00 	or s0, s0, 1639
   448e0:	1e 90 00 88 	store_32 s0, 36(sp)
   448e4:	00 c8 00 0f 	move s0, 50
   448e8:	1e 80 00 88 	store_32 s0, 32(sp)
   448ec:	00 00 00 0f 	move s0, 0
   448f0:	1e 70 00 88 	store_32 s0, 28(sp)
   448f4:	1e 90 00 a8 	load_32 s0, 36(sp)
   448f8:	18 03 62 c0 	sub_i s24, s24, s4
   448fc:	39 ff ff 05 	add_i s25, s25, -1
   44900:	1b 00 f0 c1 	mulh_i s0, s27, s0
   44904:	20 08 00 09 	ashr s1, s0, 2
   44908:	00 7c 00 0a 	shr s0, s0, 31
   4490c:	41 03 50 c0 	add_i s26, s1, s0
   44910:	3e a0 00 a8 	load_32 s1, 40(sp)
   44914:	1a 28 00 07 	mull_i s0, s26, 10
   44918:	1b 00 60 c0 	sub_i s0, s27, s0
   4491c:	00 08 00 0b 	shl s0, s0, 2
   44920:	01 00 50 c0 	add_i s0, s1, s0
   44924:	60 00 00 a8 	load_32 s3, (s0)
   44928:	00 00 fc c0 	move s0, s24
   4492c:	3e 80 00 a8 	load_32 s1, 32(sp)
   44930:	5e 70 00 a8 	load_32 s2, 28(sp)
   44934:	60 03 f2 c0 	move s27, s4
   44938:	e4 05 00 f8 	call 6032 <V_DrawPatch>
   4493c:	80 80 fd c0 	move s4, s27
   44940:	60 03 fd c0 	move s27, s26
   44944:	99 fd ff f5 	bnz s25, -80 <WI_drawStats+0x1e0>
   44948:	00 0c 00 4f 	movehi s0, 96
   4494c:	3e 60 00 a8 	load_32 s1, 24(sp)
   44950:	40 00 00 0f 	move s2, 0
   44954:	00 f0 2b 00 	or s0, s0, 2812
   44958:	01 cb 00 05 	add_i s24, s1, 50
   4495c:	60 00 00 a8 	load_32 s3, (s0)
   44960:	00 c8 00 0f 	move s0, 50
   44964:	20 00 fc c0 	move s1, s24
   44968:	d8 05 00 f8 	call 5984 <V_DrawPatch>
   4496c:	00 0c 00 4f 	movehi s0, 96
   44970:	00 50 2b 00 	or s0, s0, 2772
   44974:	60 03 00 a8 	load_32 s27, (s0)
   44978:	1b 00 00 14 	cmplt_i s0, s27, 0
   4497c:	c0 07 00 f4 	bnz s0, 248 <WI_drawStats+0x360>
   44980:	00 0c 00 4f 	movehi s0, 96
   44984:	20 3b 04 0f 	move s25, 270
   44988:	40 03 00 0f 	move s26, 0
   4498c:	00 20 28 00 	or s0, s0, 2568
   44990:	60 00 00 a8 	load_32 s3, (s0)
   44994:	00 80 fc c0 	move s0, s25
   44998:	20 00 fc c0 	move s1, s24
   4499c:	40 00 fd c0 	move s2, s26
   449a0:	ca 05 00 f8 	call 5928 <V_DrawPatch>
   449a4:	1e a0 00 a8 	load_32 s0, 40(sp)
   449a8:	00 00 00 a8 	load_32 s0, (s0)
   449ac:	a0 00 00 a6 	load_s16 s5, (s0)
   449b0:	3b 02 00 f2 	bz s27, 68 <WI_drawStats+0x2e0>
   449b4:	13 64 66 4f 	movehi s0, 209715
   449b8:	20 80 fd c0 	move s1, s27
   449bc:	00 9c 19 00 	or s0, s0, 1639
   449c0:	41 00 f0 c1 	mulh_i s2, s1, s0
   449c4:	21 24 00 05 	add_i s1, s1, 9
   449c8:	5a 07 00 05 	add_i s26, s26, 1
   449cc:	62 08 00 09 	ashr s3, s2, 2
   449d0:	42 7c 00 0a 	shr s2, s2, 31
   449d4:	43 00 51 c0 	add_i s2, s3, s2
   449d8:	61 48 00 16 	cmpgt_u s3, s1, 18
   449dc:	20 00 f1 c0 	move s1, s2
   449e0:	03 ff ff f5 	bnz s3, -32 <WI_drawStats+0x2ac>
   449e4:	1b 28 1f 10 	cmpeq_i s0, s27, 1994
   449e8:	80 00 fc c0 	move s4, s24
   449ec:	40 04 00 f4 	bnz s0, 136 <WI_drawStats+0x360>
   449f0:	03 00 00 f6 	b 12 <WI_drawStats+0x2e8>
   449f4:	40 07 00 0f 	move s26, 1
   449f8:	80 00 fc c0 	move s4, s24
   449fc:	13 64 66 4f 	movehi s0, 209715
   44a00:	00 9c 19 00 	or s0, s0, 1639
   44a04:	1e 80 00 88 	store_32 s0, 32(sp)
   44a08:	00 00 00 0f 	move s0, 0
   44a0c:	1e 70 00 88 	store_32 s0, 28(sp)
   44a10:	1e 80 00 a8 	load_32 s0, 32(sp)
   44a14:	39 83 62 c0 	sub_i s25, s25, s5
   44a18:	5a ff ff 05 	add_i s26, s26, -1
   44a1c:	1b 00 f0 c1 	mulh_i s0, s27, s0
   44a20:	20 08 00 09 	ashr s1, s0, 2
   44a24:	00 7c 00 0a 	shr s0, s0, 31
   44a28:	01 03 50 c0 	add_i s24, s1, s0
   44a2c:	3e a0 00 a8 	load_32 s1, 40(sp)
   44a30:	3e 93 00 88 	store_32 s25, 36(sp)
   44a34:	18 28 00 07 	mull_i s0, s24, 10
   44a38:	1b 00 60 c0 	sub_i s0, s27, s0
   44a3c:	00 08 00 0b 	shl s0, s0, 2
   44a40:	01 00 50 c0 	add_i s0, s1, s0
   44a44:	60 00 00 a8 	load_32 s3, (s0)
   44a48:	00 80 fc c0 	move s0, s25
   44a4c:	20 00 f2 c0 	move s1, s4
   44a50:	5e 70 00 a8 	load_32 s2, 28(sp)
   44a54:	60 83 f2 c0 	move s27, s5
   44a58:	20 03 f2 c0 	move s25, s4
   44a5c:	9b 05 00 f8 	call 5740 <V_DrawPatch>
   44a60:	80 80 fc c0 	move s4, s25
   44a64:	3e 93 00 a8 	load_32 s25, 36(sp)
   44a68:	a0 80 fd c0 	move s5, s27
   44a6c:	60 03 fc c0 	move s27, s24
   44a70:	1a fd ff f5 	bnz s26, -96 <WI_drawStats+0x2fc>
   44a74:	3e 60 00 a8 	load_32 s1, 24(sp)
   44a78:	00 0c 00 4f 	movehi s0, 96
   44a7c:	40 00 00 0f 	move s2, 0
   44a80:	00 50 2c 00 	or s0, s0, 2836
   44a84:	21 04 00 0b 	shl s1, s1, 1
   44a88:	60 00 00 a8 	load_32 s3, (s0)
   44a8c:	00 c8 00 0f 	move s0, 50
   44a90:	01 cb 00 05 	add_i s24, s1, 50
   44a94:	20 00 fc c0 	move s1, s24
   44a98:	8c 05 00 f8 	call 5680 <V_DrawPatch>
   44a9c:	00 0c 00 4f 	movehi s0, 96
   44aa0:	00 10 2b 00 	or s0, s0, 2756
   44aa4:	60 03 00 a8 	load_32 s27, (s0)
   44aa8:	1b 00 00 14 	cmplt_i s0, s27, 0
   44aac:	c0 07 00 f4 	bnz s0, 248 <WI_drawStats+0x490>
   44ab0:	00 0c 00 4f 	movehi s0, 96
   44ab4:	20 3b 04 0f 	move s25, 270
   44ab8:	40 03 00 0f 	move s26, 0
   44abc:	00 20 28 00 	or s0, s0, 2568
   44ac0:	60 00 00 a8 	load_32 s3, (s0)
   44ac4:	00 80 fc c0 	move s0, s25
   44ac8:	1e 93 00 88 	store_32 s24, 36(sp)
   44acc:	20 00 fc c0 	move s1, s24
   44ad0:	40 00 fd c0 	move s2, s26
   44ad4:	7d 05 00 f8 	call 5620 <V_DrawPatch>
   44ad8:	9e a0 00 a8 	load_32 s4, 40(sp)
   44adc:	04 00 00 a8 	load_32 s0, (s4)
   44ae0:	a0 00 00 a6 	load_s16 s5, (s0)
   44ae4:	3b 02 00 f2 	bz s27, 68 <WI_drawStats+0x414>
   44ae8:	13 64 66 4f 	movehi s0, 209715
   44aec:	20 80 fd c0 	move s1, s27
   44af0:	00 9c 19 00 	or s0, s0, 1639
   44af4:	41 00 f0 c1 	mulh_i s2, s1, s0
   44af8:	21 24 00 05 	add_i s1, s1, 9
   44afc:	5a 07 00 05 	add_i s26, s26, 1
   44b00:	62 08 00 09 	ashr s3, s2, 2
   44b04:	42 7c 00 0a 	shr s2, s2, 31
   44b08:	43 00 51 c0 	add_i s2, s3, s2
   44b0c:	61 48 00 16 	cmpgt_u s3, s1, 18
   44b10:	20 00 f1 c0 	move s1, s2
   44b14:	03 ff ff f5 	bnz s3, -32 <WI_drawStats+0x3e0>
   44b18:	3e 90 00 a8 	load_32 s1, 36(sp)
   44b1c:	1b 28 1f 10 	cmpeq_i s0, s27, 1994
   44b20:	20 04 00 f4 	bnz s0, 132 <WI_drawStats+0x490>
   44b24:	03 00 00 f6 	b 12 <WI_drawStats+0x41c>
   44b28:	40 07 00 0f 	move s26, 1
   44b2c:	3e 90 00 a8 	load_32 s1, 36(sp)
   44b30:	13 64 66 4f 	movehi s0, 209715
   44b34:	00 9c 19 00 	or s0, s0, 1639
   44b38:	1e 80 00 88 	store_32 s0, 32(sp)
   44b3c:	00 00 00 0f 	move s0, 0
   44b40:	1e 70 00 88 	store_32 s0, 28(sp)
   44b44:	1e 80 00 a8 	load_32 s0, 32(sp)
   44b48:	39 83 62 c0 	sub_i s25, s25, s5
   44b4c:	3e a3 00 88 	store_32 s25, 40(sp)
   44b50:	5a ff ff 05 	add_i s26, s26, -1
   44b54:	1b 00 f0 c1 	mulh_i s0, s27, s0
   44b58:	40 08 00 09 	ashr s2, s0, 2
   44b5c:	00 7c 00 0a 	shr s0, s0, 31
   44b60:	02 03 50 c0 	add_i s24, s2, s0
   44b64:	18 28 00 07 	mull_i s0, s24, 10
   44b68:	1b 00 60 c0 	sub_i s0, s27, s0
   44b6c:	00 08 00 0b 	shl s0, s0, 2
   44b70:	04 00 50 c0 	add_i s0, s4, s0
   44b74:	60 00 00 a8 	load_32 s3, (s0)
   44b78:	00 80 fc c0 	move s0, s25
   44b7c:	5e 70 00 a8 	load_32 s2, 28(sp)
   44b80:	60 83 f2 c0 	move s27, s5
   44b84:	20 03 f2 c0 	move s25, s4
   44b88:	50 05 00 f8 	call 5440 <V_DrawPatch>
   44b8c:	3e 90 00 a8 	load_32 s1, 36(sp)
   44b90:	80 80 fc c0 	move s4, s25
   44b94:	3e a3 00 a8 	load_32 s25, 40(sp)
   44b98:	a0 80 fd c0 	move s5, s27
   44b9c:	60 03 fc c0 	move s27, s24
   44ba0:	3a fd ff f5 	bnz s26, -92 <WI_drawStats+0x430>
   44ba4:	00 0c 00 4f 	movehi s0, 96
   44ba8:	00 a3 02 0f 	move s24, 168
   44bac:	40 00 00 0f 	move s2, 0
   44bb0:	00 60 2c 00 	or s0, s0, 2840
   44bb4:	60 00 00 a8 	load_32 s3, (s0)
   44bb8:	00 40 00 0f 	move s0, 16
   44bbc:	20 00 fc c0 	move s1, s24
   44bc0:	42 05 00 f8 	call 5384 <V_DrawPatch>
   44bc4:	00 0c 00 4f 	movehi s0, 96
   44bc8:	00 40 2c 00 	or s0, s0, 2832
   44bcc:	40 00 00 a8 	load_32 s2, (s0)
   44bd0:	00 40 02 0f 	move s0, 144
   44bd4:	20 00 fc c0 	move s1, s24
   44bd8:	ee eb ff f9 	call -20552 <WI_drawTime>
   44bdc:	1e 50 00 a8 	load_32 s0, 20(sp)
   44be0:	00 00 00 a8 	load_32 s0, (s0)
   44be4:	00 00 00 a8 	load_32 s0, (s0)
   44be8:	00 08 00 12 	cmpgt_i s0, s0, 2
   44bec:	e0 01 00 f4 	bnz s0, 60 <WI_drawStats+0x514>
   44bf0:	00 0c 00 4f 	movehi s0, 96
   44bf4:	00 a3 02 0f 	move s24, 168
   44bf8:	40 00 00 0f 	move s2, 0
   44bfc:	00 70 2c 00 	or s0, s0, 2844
   44c00:	60 00 00 a8 	load_32 s3, (s0)
   44c04:	00 c0 02 0f 	move s0, 176
   44c08:	20 00 fc c0 	move s1, s24
   44c0c:	2f 05 00 f8 	call 5308 <V_DrawPatch>
   44c10:	00 0c 00 4f 	movehi s0, 96
   44c14:	00 30 2c 00 	or s0, s0, 2828
   44c18:	40 00 00 a8 	load_32 s2, (s0)
   44c1c:	00 c0 04 0f 	move s0, 304
   44c20:	20 00 fc c0 	move s1, s24
   44c24:	db eb ff f9 	call -20628 <WI_drawTime>
   44c28:	fe b3 00 a8 	load_32 ra, 44(sp)
   44c2c:	7e c3 00 a8 	load_32 s27, 48(sp)
   44c30:	5e d3 00 a8 	load_32 s26, 52(sp)
   44c34:	3e e3 00 a8 	load_32 s25, 56(sp)
   44c38:	1e f3 00 a8 	load_32 s24, 60(sp)
   44c3c:	de 03 01 05 	add_i sp, sp, 64
   44c40:	1f 00 00 f0 	ret

0000000000044c44 WI_checkForAccelerate:
   44c44:	1b 04 00 4f 	movehi s0, 59
   44c48:	00 00 02 00 	or s0, s0, 128
   44c4c:	20 00 00 a8 	load_32 s1, (s0)
   44c50:	21 04 00 f2 	bz s1, 132 <WI_checkForAccelerate+0x90>
   44c54:	3b 04 00 4f 	movehi s1, 59
   44c58:	40 00 00 0f 	move s2, 0
   44c5c:	21 40 02 00 	or s1, s1, 144
   44c60:	61 3c 00 a0 	load_u8 s3, 15(s1)
   44c64:	80 00 f1 c0 	move s4, s2
   44c68:	a3 04 00 01 	and s5, s3, 1
   44c6c:	a5 00 00 f2 	bz s5, 20 <WI_checkForAccelerate+0x3c>
   44c70:	81 f0 02 a8 	load_32 s4, 188(s1)
   44c74:	44 00 00 f4 	bnz s4, 8 <WI_checkForAccelerate+0x38>
   44c78:	0a 00 00 f6 	b 40 <WI_checkForAccelerate+0x5c>
   44c7c:	80 04 00 0f 	move s4, 1
   44c80:	63 08 00 01 	and s3, s3, 2
   44c84:	81 f0 02 88 	store_32 s4, 188(s1)
   44c88:	43 02 00 f2 	bz s3, 72 <WI_checkForAccelerate+0x8c>
   44c8c:	41 00 03 a8 	load_32 s2, 192(s1)
   44c90:	42 00 00 f4 	bnz s2, 8 <WI_checkForAccelerate+0x54>
   44c94:	0b 00 00 f6 	b 44 <WI_checkForAccelerate+0x7c>
   44c98:	40 04 00 0f 	move s2, 1
   44c9c:	0d 00 00 f6 	b 52 <WI_checkForAccelerate+0x8c>
   44ca0:	80 0c 00 4f 	movehi s4, 96
   44ca4:	a4 50 28 00 	or s5, s4, 2580
   44ca8:	80 04 00 0f 	move s4, 1
   44cac:	85 00 00 82 	store_8 s4, (s5)
   44cb0:	63 08 00 01 	and s3, s3, 2
   44cb4:	81 f0 02 88 	store_32 s4, 188(s1)
   44cb8:	c3 00 00 f2 	bz s3, 24 <WI_checkForAccelerate+0x8c>
   44cbc:	f4 ff ff f7 	b -48 <WI_checkForAccelerate+0x48>
   44cc0:	40 0c 00 4f 	movehi s2, 96
   44cc4:	62 50 28 00 	or s3, s2, 2580
   44cc8:	40 04 00 0f 	move s2, 1
   44ccc:	43 00 00 82 	store_8 s2, (s3)
   44cd0:	41 00 03 88 	store_32 s2, 192(s1)
   44cd4:	20 10 00 a8 	load_32 s1, 4(s0)
   44cd8:	21 04 00 f2 	bz s1, 132 <WI_checkForAccelerate+0x118>
   44cdc:	3b 04 00 4f 	movehi s1, 59
   44ce0:	40 00 00 0f 	move s2, 0
   44ce4:	21 40 02 00 	or s1, s1, 144
   44ce8:	61 9c 04 a0 	load_u8 s3, 295(s1)
   44cec:	80 00 f1 c0 	move s4, s2
   44cf0:	a3 04 00 01 	and s5, s3, 1
   44cf4:	a5 00 00 f2 	bz s5, 20 <WI_checkForAccelerate+0xc4>
   44cf8:	81 50 07 a8 	load_32 s4, 468(s1)
   44cfc:	44 00 00 f4 	bnz s4, 8 <WI_checkForAccelerate+0xc0>
   44d00:	0a 00 00 f6 	b 40 <WI_checkForAccelerate+0xe4>
   44d04:	80 04 00 0f 	move s4, 1
   44d08:	63 08 00 01 	and s3, s3, 2
   44d0c:	81 50 07 88 	store_32 s4, 468(s1)
   44d10:	43 02 00 f2 	bz s3, 72 <WI_checkForAccelerate+0x114>
   44d14:	41 60 07 a8 	load_32 s2, 472(s1)
   44d18:	42 00 00 f4 	bnz s2, 8 <WI_checkForAccelerate+0xdc>
   44d1c:	0b 00 00 f6 	b 44 <WI_checkForAccelerate+0x104>
   44d20:	40 04 00 0f 	move s2, 1
   44d24:	0d 00 00 f6 	b 52 <WI_checkForAccelerate+0x114>
   44d28:	80 0c 00 4f 	movehi s4, 96
   44d2c:	a4 50 28 00 	or s5, s4, 2580
   44d30:	80 04 00 0f 	move s4, 1
   44d34:	85 00 00 82 	store_8 s4, (s5)
   44d38:	63 08 00 01 	and s3, s3, 2
   44d3c:	81 50 07 88 	store_32 s4, 468(s1)
   44d40:	c3 00 00 f2 	bz s3, 24 <WI_checkForAccelerate+0x114>
   44d44:	f4 ff ff f7 	b -48 <WI_checkForAccelerate+0xd0>
   44d48:	40 0c 00 4f 	movehi s2, 96
   44d4c:	62 50 28 00 	or s3, s2, 2580
   44d50:	40 04 00 0f 	move s2, 1
   44d54:	43 00 00 82 	store_8 s2, (s3)
   44d58:	41 60 07 88 	store_32 s2, 472(s1)
   44d5c:	20 20 00 a8 	load_32 s1, 8(s0)
   44d60:	21 04 00 f2 	bz s1, 132 <WI_checkForAccelerate+0x1a0>
   44d64:	3b 04 00 4f 	movehi s1, 59
   44d68:	40 00 00 0f 	move s2, 0
   44d6c:	21 40 02 00 	or s1, s1, 144
   44d70:	61 fc 08 a0 	load_u8 s3, 575(s1)
   44d74:	80 00 f1 c0 	move s4, s2
   44d78:	a3 04 00 01 	and s5, s3, 1
   44d7c:	a5 00 00 f2 	bz s5, 20 <WI_checkForAccelerate+0x14c>
   44d80:	81 b0 0b a8 	load_32 s4, 748(s1)
   44d84:	44 00 00 f4 	bnz s4, 8 <WI_checkForAccelerate+0x148>
   44d88:	0a 00 00 f6 	b 40 <WI_checkForAccelerate+0x16c>
   44d8c:	80 04 00 0f 	move s4, 1
   44d90:	63 08 00 01 	and s3, s3, 2
   44d94:	81 b0 0b 88 	store_32 s4, 748(s1)
   44d98:	43 02 00 f2 	bz s3, 72 <WI_checkForAccelerate+0x19c>
   44d9c:	41 c0 0b a8 	load_32 s2, 752(s1)
   44da0:	42 00 00 f4 	bnz s2, 8 <WI_checkForAccelerate+0x164>
   44da4:	0b 00 00 f6 	b 44 <WI_checkForAccelerate+0x18c>
   44da8:	40 04 00 0f 	move s2, 1
   44dac:	0d 00 00 f6 	b 52 <WI_checkForAccelerate+0x19c>
   44db0:	80 0c 00 4f 	movehi s4, 96
   44db4:	a4 50 28 00 	or s5, s4, 2580
   44db8:	80 04 00 0f 	move s4, 1
   44dbc:	85 00 00 82 	store_8 s4, (s5)
   44dc0:	63 08 00 01 	and s3, s3, 2
   44dc4:	81 b0 0b 88 	store_32 s4, 748(s1)
   44dc8:	c3 00 00 f2 	bz s3, 24 <WI_checkForAccelerate+0x19c>
   44dcc:	f4 ff ff f7 	b -48 <WI_checkForAccelerate+0x158>
   44dd0:	40 0c 00 4f 	movehi s2, 96
   44dd4:	62 50 28 00 	or s3, s2, 2580
   44dd8:	40 04 00 0f 	move s2, 1
   44ddc:	43 00 00 82 	store_8 s2, (s3)
   44de0:	41 c0 0b 88 	store_32 s2, 752(s1)
   44de4:	00 30 00 a8 	load_32 s0, 12(s0)
   44de8:	20 04 00 f2 	bz s0, 132 <WI_checkForAccelerate+0x228>
   44dec:	1b 04 00 4f 	movehi s0, 59
   44df0:	20 00 00 0f 	move s1, 0
   44df4:	00 40 02 00 	or s0, s0, 144
   44df8:	40 5c 0d a0 	load_u8 s2, 855(s0)
   44dfc:	60 80 f0 c0 	move s3, s1
   44e00:	82 04 00 01 	and s4, s2, 1
   44e04:	a4 00 00 f2 	bz s4, 20 <WI_checkForAccelerate+0x1d4>
   44e08:	60 10 10 a8 	load_32 s3, 1028(s0)
   44e0c:	43 00 00 f4 	bnz s3, 8 <WI_checkForAccelerate+0x1d0>
   44e10:	0a 00 00 f6 	b 40 <WI_checkForAccelerate+0x1f4>
   44e14:	60 04 00 0f 	move s3, 1
   44e18:	42 08 00 01 	and s2, s2, 2
   44e1c:	60 10 10 88 	store_32 s3, 1028(s0)
   44e20:	42 02 00 f2 	bz s2, 72 <WI_checkForAccelerate+0x224>
   44e24:	20 20 10 a8 	load_32 s1, 1032(s0)
   44e28:	41 00 00 f4 	bnz s1, 8 <WI_checkForAccelerate+0x1ec>
   44e2c:	0b 00 00 f6 	b 44 <WI_checkForAccelerate+0x214>
   44e30:	20 04 00 0f 	move s1, 1
   44e34:	0d 00 00 f6 	b 52 <WI_checkForAccelerate+0x224>
   44e38:	60 0c 00 4f 	movehi s3, 96
   44e3c:	83 50 28 00 	or s4, s3, 2580
   44e40:	60 04 00 0f 	move s3, 1
   44e44:	64 00 00 82 	store_8 s3, (s4)
   44e48:	42 08 00 01 	and s2, s2, 2
   44e4c:	60 10 10 88 	store_32 s3, 1028(s0)
   44e50:	c2 00 00 f2 	bz s2, 24 <WI_checkForAccelerate+0x224>
   44e54:	f4 ff ff f7 	b -48 <WI_checkForAccelerate+0x1e0>
   44e58:	20 0c 00 4f 	movehi s1, 96
   44e5c:	41 50 28 00 	or s2, s1, 2580
   44e60:	20 04 00 0f 	move s1, 1
   44e64:	22 00 00 82 	store_8 s1, (s2)
   44e68:	20 20 10 88 	store_32 s1, 1032(s0)
   44e6c:	1f 00 00 f0 	ret

0000000000044e70 WI_Ticker:
   44e70:	de 03 ff 05 	add_i sp, sp, -64
   44e74:	1e f3 00 88 	store_32 s24, 60(sp)
   44e78:	fe e3 00 88 	store_32 ra, 56(sp)
   44e7c:	00 0c 00 4f 	movehi s0, 96
   44e80:	00 50 27 00 	or s0, s0, 2516
   44e84:	20 00 00 a8 	load_32 s1, (s0)
   44e88:	41 04 00 05 	add_i s2, s1, 1
   44e8c:	40 00 00 88 	store_32 s2, (s0)
   44e90:	61 01 00 f4 	bnz s1, 44 <WI_Ticker+0x4c>
   44e94:	0b 04 00 4f 	movehi s0, 43
   44e98:	00 00 40 00 	or s0, s0, 4096
   44e9c:	00 00 00 a8 	load_32 s0, (s0)
   44ea0:	00 08 00 11 	cmpne_i s0, s0, 2
   44ea4:	60 00 00 f4 	bnz s0, 12 <WI_Ticker+0x40>
   44ea8:	00 0c 01 0f 	move s0, 67
   44eac:	02 00 00 f6 	b 8 <WI_Ticker+0x44>
   44eb0:	00 70 00 0f 	move s0, 28
   44eb4:	20 04 00 0f 	move s1, 1
   44eb8:	3c 1b 00 f8 	call 27888 <S_ChangeMusic>
   44ebc:	62 ff ff f9 	call -632 <WI_checkForAccelerate>
   44ec0:	00 0c 00 4f 	movehi s0, 96
   44ec4:	00 63 27 00 	or s24, s0, 2520
   44ec8:	18 00 00 a8 	load_32 s0, (s24)
   44ecc:	20 fc ff 10 	cmpeq_i s1, s0, -1
   44ed0:	a1 01 00 f4 	bnz s1, 52 <WI_Ticker+0x94>
   44ed4:	20 04 00 10 	cmpeq_i s1, s0, 1
   44ed8:	e1 02 00 f4 	bnz s1, 92 <WI_Ticker+0xc4>
   44edc:	40 02 00 f4 	bnz s0, 72 <WI_Ticker+0xb4>
   44ee0:	1a 04 00 4f 	movehi s0, 58
   44ee4:	00 60 6e 00 	or s0, s0, 7064
   44ee8:	00 00 00 a8 	load_32 s0, (s0)
   44eec:	60 06 00 f2 	bz s0, 204 <WI_Ticker+0x148>
   44ef0:	45 f1 ff f9 	call -15084 <WI_updateDeathmatchStats>
   44ef4:	fe e3 00 a8 	load_32 ra, 56(sp)
   44ef8:	1e f3 00 a8 	load_32 s24, 60(sp)
   44efc:	de 03 01 05 	add_i sp, sp, 64
   44f00:	1f 00 00 f0 	ret
   44f04:	0d ea ff f9 	call -22476 <WI_updateAnimatedBack>
   44f08:	00 0c 00 4f 	movehi s0, 96
   44f0c:	00 60 28 00 	or s0, s0, 2584
   44f10:	20 00 00 a8 	load_32 s1, (s0)
   44f14:	21 fc ff 05 	add_i s1, s1, -1
   44f18:	20 00 00 88 	store_32 s1, (s0)
   44f1c:	41 00 00 f4 	bnz s1, 8 <WI_Ticker+0xb4>
   44f20:	2f 00 00 f6 	b 188 <WI_Ticker+0x16c>
   44f24:	fe e3 00 a8 	load_32 ra, 56(sp)
   44f28:	1e f3 00 a8 	load_32 s24, 60(sp)
   44f2c:	de 03 01 05 	add_i sp, sp, 64
   44f30:	1f 00 00 f0 	ret
   44f34:	01 ea ff f9 	call -22524 <WI_updateAnimatedBack>
   44f38:	00 0c 00 4f 	movehi s0, 96
   44f3c:	20 0c 00 4f 	movehi s1, 96
   44f40:	00 60 28 00 	or s0, s0, 2584
   44f44:	21 50 28 00 	or s1, s1, 2580
   44f48:	40 00 00 a8 	load_32 s2, (s0)
   44f4c:	42 fc ff 05 	add_i s2, s2, -1
   44f50:	40 00 00 88 	store_32 s2, (s0)
   44f54:	61 00 00 a0 	load_u8 s3, (s1)
   44f58:	c2 01 00 f2 	bz s2, 56 <WI_Ticker+0x120>
   44f5c:	63 04 00 01 	and s3, s3, 1
   44f60:	43 00 00 f2 	bz s3, 8 <WI_Ticker+0xf8>
   44f64:	0b 00 00 f6 	b 44 <WI_Ticker+0x120>
   44f68:	02 70 00 01 	and s0, s2, 28
   44f6c:	20 0c 00 4f 	movehi s1, 96
   44f70:	00 50 00 18 	cmplt_u s0, s0, 20
   44f74:	21 70 28 00 	or s1, s1, 2588
   44f78:	00 04 00 01 	and s0, s0, 1
   44f7c:	01 00 00 88 	store_32 s0, (s1)
   44f80:	fe e3 00 a8 	load_32 ra, 56(sp)
   44f84:	1e f3 00 a8 	load_32 s24, 60(sp)
   44f88:	de 03 01 05 	add_i sp, sp, 64
   44f8c:	1f 00 00 f0 	ret
   44f90:	40 fc ff 0f 	move s2, -1
   44f94:	58 00 00 88 	store_32 s2, (s24)
   44f98:	40 00 00 0f 	move s2, 0
   44f9c:	41 00 00 82 	store_8 s2, (s1)
   44fa0:	20 28 00 0f 	move s1, 10
   44fa4:	20 00 00 88 	store_32 s1, (s0)
   44fa8:	fe e3 00 a8 	load_32 ra, 56(sp)
   44fac:	1e f3 00 a8 	load_32 s24, 60(sp)
   44fb0:	de 03 01 05 	add_i sp, sp, 64
   44fb4:	1f 00 00 f0 	ret
   44fb8:	1b 04 00 4f 	movehi s0, 59
   44fbc:	00 c0 01 00 	or s0, s0, 112
   44fc0:	00 00 00 a8 	load_32 s0, (s0)
   44fc4:	80 01 00 f2 	bz s0, 48 <WI_Ticker+0x184>
   44fc8:	d9 f6 ff f9 	call -9372 <WI_updateNetgameStats>
   44fcc:	fe e3 00 a8 	load_32 ra, 56(sp)
   44fd0:	1e f3 00 a8 	load_32 s24, 60(sp)
   44fd4:	de 03 01 05 	add_i sp, sp, 64
   44fd8:	1f 00 00 f0 	ret
   44fdc:	7d eb ff f9 	call -21004 <WI_unloadData>
   44fe0:	49 48 ff f9 	call -188124 <G_WorldDone>
   44fe4:	fe e3 00 a8 	load_32 ra, 56(sp)
   44fe8:	1e f3 00 a8 	load_32 s24, 60(sp)
   44fec:	de 03 01 05 	add_i sp, sp, 64
   44ff0:	1f 00 00 f0 	ret
   44ff4:	a0 fc ff f9 	call -3456 <WI_updateStats>
   44ff8:	fe e3 00 a8 	load_32 ra, 56(sp)
   44ffc:	1e f3 00 a8 	load_32 s24, 60(sp)
   45000:	de 03 01 05 	add_i sp, sp, 64
   45004:	1f 00 00 f0 	ret

0000000000045008 WI_loadData:
   45008:	de 03 fd 05 	add_i sp, sp, -192
   4500c:	1e f3 02 88 	store_32 s24, 188(sp)
   45010:	3e e3 02 88 	store_32 s25, 184(sp)
   45014:	5e d3 02 88 	store_32 s26, 180(sp)
   45018:	7e c3 02 88 	store_32 s27, 176(sp)
   4501c:	fe b3 02 88 	store_32 ra, 172(sp)
   45020:	0b 04 00 4f 	movehi s0, 43
   45024:	00 03 40 00 	or s24, s0, 4096
   45028:	18 00 00 a8 	load_32 s0, (s24)
   4502c:	00 08 00 11 	cmpne_i s0, s0, 2
   45030:	40 00 00 f4 	bnz s0, 8 <WI_loadData+0x30>
   45034:	13 00 00 f6 	b 76 <WI_loadData+0x78>
   45038:	00 0c 00 4f 	movehi s0, 96
   4503c:	22 00 00 4f 	movehi s1, 2
   45040:	20 23 27 00 	or s25, s0, 2504
   45044:	19 00 00 a8 	load_32 s0, (s25)
   45048:	00 00 00 a8 	load_32 s0, (s0)
   4504c:	1e 20 00 88 	store_32 s0, 8(sp)
   45050:	01 9c 2d 00 	or s0, s1, 2919
   45054:	1e 10 00 88 	store_32 s0, 4(sp)
   45058:	1e 80 02 05 	add_i s0, sp, 160
   4505c:	1e 00 00 88 	store_32 s0, (sp)
   45060:	6a 33 00 f8 	call 52648 <sprintf>
   45064:	18 00 00 a8 	load_32 s0, (s24)
   45068:	00 0c 00 11 	cmpne_i s0, s0, 3
   4506c:	e0 03 00 f4 	bnz s0, 124 <WI_loadData+0xe0>
   45070:	19 00 00 a8 	load_32 s0, (s25)
   45074:	00 00 00 a8 	load_32 s0, (s0)
   45078:	00 0c 00 11 	cmpne_i s0, s0, 3
   4507c:	60 03 00 f4 	bnz s0, 108 <WI_loadData+0xe0>
   45080:	01 00 00 4f 	movehi s0, 1
   45084:	00 54 30 00 	or s0, s0, 3093
   45088:	20 20 00 a0 	load_u8 s1, 8(s0)
   4508c:	3e a0 02 82 	store_8 s1, 168(sp)
   45090:	20 10 00 a0 	load_u8 s1, 4(s0)
   45094:	40 14 00 a0 	load_u8 s2, 5(s0)
   45098:	60 18 00 a0 	load_u8 s3, 6(s0)
   4509c:	80 1c 00 a0 	load_u8 s4, 7(s0)
   450a0:	42 20 00 0b 	shl s2, s2, 8
   450a4:	84 20 00 0b 	shl s4, s4, 8
   450a8:	22 80 00 c0 	or s1, s2, s1
   450ac:	64 80 01 c0 	or s3, s4, s3
   450b0:	63 40 00 0b 	shl s3, s3, 16
   450b4:	23 80 00 c0 	or s1, s3, s1
   450b8:	3e 90 02 88 	store_32 s1, 164(sp)
   450bc:	20 00 00 a0 	load_u8 s1, (s0)
   450c0:	40 04 00 a0 	load_u8 s2, 1(s0)
   450c4:	60 08 00 a0 	load_u8 s3, 2(s0)
   450c8:	00 0c 00 a0 	load_u8 s0, 3(s0)
   450cc:	42 20 00 0b 	shl s2, s2, 8
   450d0:	00 20 00 0b 	shl s0, s0, 8
   450d4:	22 80 00 c0 	or s1, s2, s1
   450d8:	00 80 01 c0 	or s0, s0, s3
   450dc:	00 40 00 0b 	shl s0, s0, 16
   450e0:	00 80 00 c0 	or s0, s0, s1
   450e4:	1e 80 02 88 	store_32 s0, 160(sp)
   450e8:	3e 83 02 05 	add_i s25, sp, 160
   450ec:	20 94 01 0f 	move s1, 101
   450f0:	00 80 fc c0 	move s0, s25
   450f4:	95 e7 ff f9 	call -25004 <W_CacheLumpName>
   450f8:	20 0c 00 4f 	movehi s1, 96
   450fc:	40 03 00 0f 	move s26, 0
   45100:	60 07 00 0f 	move s27, 1
   45104:	21 80 2c 00 	or s1, s1, 2848
   45108:	60 00 f0 c0 	move s3, s0
   4510c:	61 00 00 88 	store_32 s3, (s1)
   45110:	00 00 fd c0 	move s0, s26
   45114:	20 00 fd c0 	move s1, s26
   45118:	40 80 fd c0 	move s2, s27
   4511c:	eb 03 00 f8 	call 4012 <V_DrawPatch>
   45120:	18 00 00 a8 	load_32 s0, (s24)
   45124:	3e 73 02 88 	store_32 s25, 156(sp)
   45128:	00 08 00 11 	cmpne_i s0, s0, 2
   4512c:	e0 05 00 f4 	bnz s0, 188 <WI_loadData+0x1e0>
   45130:	00 0c 00 4f 	movehi s0, 96
   45134:	20 04 00 0f 	move s1, 1
   45138:	40 00 00 0f 	move s2, 0
   4513c:	00 93 2c 00 	or s24, s0, 2852
   45140:	00 00 02 0f 	move s0, 128
   45144:	38 00 00 82 	store_8 s1, (s24)
   45148:	5e 30 02 88 	store_32 s2, 140(sp)
   4514c:	e3 1d 00 f8 	call 30604 <Z_Malloc>
   45150:	20 0c 00 4f 	movehi s1, 96
   45154:	21 10 27 00 	or s1, s1, 2500
   45158:	3e 50 02 88 	store_32 s1, 148(sp)
   4515c:	01 00 00 88 	store_32 s0, (s1)
   45160:	1e 63 02 88 	store_32 s24, 152(sp)
   45164:	18 00 00 a0 	load_u8 s0, (s24)
   45168:	00 04 00 11 	cmpne_i s0, s0, 1
   4516c:	80 28 00 f4 	bnz s0, 1296 <WI_loadData+0x674>
   45170:	02 00 00 4f 	movehi s0, 2
   45174:	40 07 00 0f 	move s26, 1
   45178:	00 83 00 0f 	move s24, 32
   4517c:	00 bc 15 00 	or s0, s0, 1391
   45180:	1e 40 02 88 	store_32 s0, 144(sp)
   45184:	7e 33 02 a8 	load_32 s27, 140(sp)
   45188:	3e 73 02 a8 	load_32 s25, 156(sp)
   4518c:	7e 23 00 88 	store_32 s27, 8(sp)
   45190:	3e 03 00 88 	store_32 s25, (sp)
   45194:	1e 40 02 a8 	load_32 s0, 144(sp)
   45198:	1e 10 00 88 	store_32 s0, 4(sp)
   4519c:	1b 33 00 f8 	call 52332 <sprintf>
   451a0:	00 80 fc c0 	move s0, s25
   451a4:	20 00 fd c0 	move s1, s26
   451a8:	68 e7 ff f9 	call -25184 <W_CacheLumpName>
   451ac:	3e 50 02 a8 	load_32 s1, 148(sp)
   451b0:	5b 08 00 0b 	shl s2, s27, 2
   451b4:	7b 07 00 05 	add_i s27, s27, 1
   451b8:	21 00 00 a8 	load_32 s1, (s1)
   451bc:	21 00 51 c0 	add_i s1, s1, s2
   451c0:	01 00 00 88 	store_32 s0, (s1)
   451c4:	1e 60 02 a8 	load_32 s0, 152(sp)
   451c8:	00 00 00 a0 	load_u8 s0, (s0)
   451cc:	20 00 00 11 	cmpne_i s1, s0, 0
   451d0:	00 00 fc c0 	move s0, s24
   451d4:	41 00 00 f4 	bnz s1, 8 <WI_loadData+0x1d4>
   451d8:	1e 30 02 a8 	load_32 s0, 140(sp)
   451dc:	1b 00 80 c1 	cmplt_u s0, s27, s0
   451e0:	60 fd ff f5 	bnz s0, -84 <WI_loadData+0x184>
   451e4:	26 01 00 f6 	b 1176 <WI_loadData+0x674>
   451e8:	20 80 fd c0 	move s1, s27
   451ec:	00 90 00 0f 	move s0, 36
   451f0:	40 00 fd c0 	move s2, s26
   451f4:	b9 1d 00 f8 	call 30436 <Z_Malloc>
   451f8:	20 0c 00 4f 	movehi s1, 96
   451fc:	40 0c 00 4f 	movehi s2, 96
   45200:	01 13 27 00 	or s24, s1, 2500
   45204:	22 20 27 00 	or s1, s2, 2504
   45208:	3e d0 01 88 	store_32 s1, 116(sp)
   4520c:	18 00 00 88 	store_32 s0, (s24)
   45210:	01 00 00 a8 	load_32 s0, (s1)
   45214:	20 00 00 4f 	movehi s1, 0
   45218:	00 00 00 a8 	load_32 s0, (s0)
   4521c:	5e e3 01 88 	store_32 s26, 120(sp)
   45220:	5e 33 00 88 	store_32 s26, 12(sp)
   45224:	1e 20 00 88 	store_32 s0, 8(sp)
   45228:	01 f0 7d 00 	or s0, s1, 8060
   4522c:	1e 60 02 88 	store_32 s0, 152(sp)
   45230:	1e 10 00 88 	store_32 s0, 4(sp)
   45234:	3e 03 00 88 	store_32 s25, (sp)
   45238:	f4 32 00 f8 	call 52176 <sprintf>
   4523c:	00 80 fc c0 	move s0, s25
   45240:	20 80 fd c0 	move s1, s27
   45244:	41 e7 ff f9 	call -25340 <W_CacheLumpName>
   45248:	40 03 fc c0 	move s26, s24
   4524c:	3a 00 00 a8 	load_32 s1, (s26)
   45250:	01 00 00 88 	store_32 s0, (s1)
   45254:	1e d3 01 a8 	load_32 s24, 116(sp)
   45258:	18 00 00 a8 	load_32 s0, (s24)
   4525c:	00 00 00 a8 	load_32 s0, (s0)
   45260:	7e 33 00 88 	store_32 s27, 12(sp)
   45264:	1e 20 00 88 	store_32 s0, 8(sp)
   45268:	7e 43 02 88 	store_32 s27, 144(sp)
   4526c:	7e 63 02 a8 	load_32 s27, 152(sp)
   45270:	7e 13 00 88 	store_32 s27, 4(sp)
   45274:	3e 03 00 88 	store_32 s25, (sp)
   45278:	e4 32 00 f8 	call 52112 <sprintf>
   4527c:	00 80 fc c0 	move s0, s25
   45280:	3e 40 02 a8 	load_32 s1, 144(sp)
   45284:	31 e7 ff f9 	call -25404 <W_CacheLumpName>
   45288:	3a 00 00 a8 	load_32 s1, (s26)
   4528c:	5e 53 02 88 	store_32 s26, 148(sp)
   45290:	01 10 00 88 	store_32 s0, 4(s1)
   45294:	20 08 00 0f 	move s1, 2
   45298:	18 00 00 a8 	load_32 s0, (s24)
   4529c:	00 00 00 a8 	load_32 s0, (s0)
   452a0:	3e 30 00 88 	store_32 s1, 12(sp)
   452a4:	1e 20 00 88 	store_32 s0, 8(sp)
   452a8:	7e 13 00 88 	store_32 s27, 4(sp)
   452ac:	3e 03 00 88 	store_32 s25, (sp)
   452b0:	d6 32 00 f8 	call 52056 <sprintf>
   452b4:	00 80 fc c0 	move s0, s25
   452b8:	7e 43 02 a8 	load_32 s27, 144(sp)
   452bc:	20 80 fd c0 	move s1, s27
   452c0:	22 e7 ff f9 	call -25464 <W_CacheLumpName>
   452c4:	3a 00 00 a8 	load_32 s1, (s26)
   452c8:	01 20 00 88 	store_32 s0, 8(s1)
   452cc:	20 0c 00 0f 	move s1, 3
   452d0:	18 00 00 a8 	load_32 s0, (s24)
   452d4:	40 03 fc c0 	move s26, s24
   452d8:	00 00 00 a8 	load_32 s0, (s0)
   452dc:	3e 30 00 88 	store_32 s1, 12(sp)
   452e0:	1e 20 00 88 	store_32 s0, 8(sp)
   452e4:	1e 60 02 a8 	load_32 s0, 152(sp)
   452e8:	1e 10 00 88 	store_32 s0, 4(sp)
   452ec:	3e 03 00 88 	store_32 s25, (sp)
   452f0:	c6 32 00 f8 	call 51992 <sprintf>
   452f4:	00 80 fc c0 	move s0, s25
   452f8:	20 80 fd c0 	move s1, s27
   452fc:	13 e7 ff f9 	call -25524 <W_CacheLumpName>
   45300:	1e 53 02 a8 	load_32 s24, 148(sp)
   45304:	38 00 00 a8 	load_32 s1, (s24)
   45308:	01 30 00 88 	store_32 s0, 12(s1)
   4530c:	20 10 00 0f 	move s1, 4
   45310:	1a 00 00 a8 	load_32 s0, (s26)
   45314:	00 00 00 a8 	load_32 s0, (s0)
   45318:	3e 30 00 88 	store_32 s1, 12(sp)
   4531c:	1e 20 00 88 	store_32 s0, 8(sp)
   45320:	5e 63 02 a8 	load_32 s26, 152(sp)
   45324:	5e 13 00 88 	store_32 s26, 4(sp)
   45328:	3e 03 00 88 	store_32 s25, (sp)
   4532c:	b7 32 00 f8 	call 51932 <sprintf>
   45330:	00 80 fc c0 	move s0, s25
   45334:	20 80 fd c0 	move s1, s27
   45338:	04 e7 ff f9 	call -25584 <W_CacheLumpName>
   4533c:	38 00 00 a8 	load_32 s1, (s24)
   45340:	01 40 00 88 	store_32 s0, 16(s1)
   45344:	20 14 00 0f 	move s1, 5
   45348:	1e d3 01 a8 	load_32 s24, 116(sp)
   4534c:	18 00 00 a8 	load_32 s0, (s24)
   45350:	00 00 00 a8 	load_32 s0, (s0)
   45354:	3e 30 00 88 	store_32 s1, 12(sp)
   45358:	1e 20 00 88 	store_32 s0, 8(sp)
   4535c:	5e 13 00 88 	store_32 s26, 4(sp)
   45360:	3e 03 00 88 	store_32 s25, (sp)
   45364:	a9 32 00 f8 	call 51876 <sprintf>
   45368:	00 80 fc c0 	move s0, s25
   4536c:	20 80 fd c0 	move s1, s27
   45370:	f6 e6 ff f9 	call -25640 <W_CacheLumpName>
   45374:	5e 53 02 a8 	load_32 s26, 148(sp)
   45378:	3a 00 00 a8 	load_32 s1, (s26)
   4537c:	01 50 00 88 	store_32 s0, 20(s1)
   45380:	20 18 00 0f 	move s1, 6
   45384:	18 00 00 a8 	load_32 s0, (s24)
   45388:	00 00 00 a8 	load_32 s0, (s0)
   4538c:	3e 30 00 88 	store_32 s1, 12(sp)
   45390:	1e 20 00 88 	store_32 s0, 8(sp)
   45394:	7e 63 02 a8 	load_32 s27, 152(sp)
   45398:	7e 13 00 88 	store_32 s27, 4(sp)
   4539c:	3e 03 00 88 	store_32 s25, (sp)
   453a0:	9a 32 00 f8 	call 51816 <sprintf>
   453a4:	00 80 fc c0 	move s0, s25
   453a8:	3e 40 02 a8 	load_32 s1, 144(sp)
   453ac:	e7 e6 ff f9 	call -25700 <W_CacheLumpName>
   453b0:	3a 00 00 a8 	load_32 s1, (s26)
   453b4:	01 60 00 88 	store_32 s0, 24(s1)
   453b8:	20 1c 00 0f 	move s1, 7
   453bc:	18 00 00 a8 	load_32 s0, (s24)
   453c0:	00 00 00 a8 	load_32 s0, (s0)
   453c4:	3e 30 00 88 	store_32 s1, 12(sp)
   453c8:	1e 20 00 88 	store_32 s0, 8(sp)
   453cc:	7e 13 00 88 	store_32 s27, 4(sp)
   453d0:	3e 03 00 88 	store_32 s25, (sp)
   453d4:	8d 32 00 f8 	call 51764 <sprintf>
   453d8:	00 80 fc c0 	move s0, s25
   453dc:	7e 43 02 a8 	load_32 s27, 144(sp)
   453e0:	20 80 fd c0 	move s1, s27
   453e4:	d9 e6 ff f9 	call -25756 <W_CacheLumpName>
   453e8:	3a 00 00 a8 	load_32 s1, (s26)
   453ec:	01 70 00 88 	store_32 s0, 28(s1)
   453f0:	20 20 00 0f 	move s1, 8
   453f4:	18 00 00 a8 	load_32 s0, (s24)
   453f8:	00 00 00 a8 	load_32 s0, (s0)
   453fc:	3e 20 02 88 	store_32 s1, 136(sp)
   45400:	3e 30 00 88 	store_32 s1, 12(sp)
   45404:	1e 20 00 88 	store_32 s0, 8(sp)
   45408:	1e 60 02 a8 	load_32 s0, 152(sp)
   4540c:	1e 10 00 88 	store_32 s0, 4(sp)
   45410:	3e 03 00 88 	store_32 s25, (sp)
   45414:	7d 32 00 f8 	call 51700 <sprintf>
   45418:	00 80 fc c0 	move s0, s25
   4541c:	20 80 fd c0 	move s1, s27
   45420:	ca e6 ff f9 	call -25816 <W_CacheLumpName>
   45424:	3a 00 00 a8 	load_32 s1, (s26)
   45428:	01 80 00 88 	store_32 s0, 32(s1)
   4542c:	01 00 00 4f 	movehi s0, 1
   45430:	20 80 fd c0 	move s1, s27
   45434:	00 fc 43 00 	or s0, s0, 4351
   45438:	c4 e6 ff f9 	call -25840 <W_CacheLumpName>
   4543c:	20 0c 00 4f 	movehi s1, 96
   45440:	01 93 28 00 	or s24, s1, 2596
   45444:	18 00 00 88 	store_32 s0, (s24)
   45448:	01 00 00 4f 	movehi s0, 1
   4544c:	20 80 fd c0 	move s1, s27
   45450:	00 34 79 00 	or s0, s0, 7757
   45454:	bd e6 ff f9 	call -25868 <W_CacheLumpName>
   45458:	18 10 00 88 	store_32 s0, 4(s24)
   4545c:	02 00 00 4f 	movehi s0, 2
   45460:	20 80 fd c0 	move s1, s27
   45464:	00 4c 3c 00 	or s0, s0, 3859
   45468:	b8 e6 ff f9 	call -25888 <W_CacheLumpName>
   4546c:	20 0c 00 4f 	movehi s1, 96
   45470:	21 80 28 00 	or s1, s1, 2592
   45474:	01 00 00 88 	store_32 s0, (s1)
   45478:	1e d0 01 a8 	load_32 s0, 116(sp)
   4547c:	20 03 f0 c0 	move s25, s0
   45480:	00 00 00 a8 	load_32 s0, (s0)
   45484:	20 00 00 a8 	load_32 s1, (s0)
   45488:	00 83 fd c0 	move s24, s27
   4548c:	41 08 00 12 	cmpgt_i s2, s1, 2
   45490:	62 0f 00 f4 	bnz s2, 492 <WI_loadData+0x674>
   45494:	43 00 00 4f 	movehi s2, 3
   45498:	61 00 00 4f 	movehi s3, 1
   4549c:	83 00 00 4f 	movehi s4, 3
   454a0:	42 50 5e 00 	or s2, s2, 6036
   454a4:	5e 00 02 88 	store_32 s2, 128(sp)
   454a8:	54 04 00 4f 	movehi s2, 52
   454ac:	42 10 22 00 	or s2, s2, 2180
   454b0:	5e 10 02 88 	store_32 s2, 132(sp)
   454b4:	43 50 79 00 	or s2, s3, 7764
   454b8:	5e 50 02 88 	store_32 s2, 148(sp)
   454bc:	44 90 5e 00 	or s2, s4, 6052
   454c0:	5e f0 01 88 	store_32 s2, 124(sp)
   454c4:	7e e0 01 a8 	load_32 s3, 120(sp)
   454c8:	5e 00 02 a8 	load_32 s2, 128(sp)
   454cc:	21 08 00 0b 	shl s1, s1, 2
   454d0:	22 80 50 c0 	add_i s1, s2, s1
   454d4:	61 03 00 a8 	load_32 s27, (s1)
   454d8:	23 e0 00 07 	mull_i s1, s3, 56
   454dc:	7e 30 02 88 	store_32 s3, 140(sp)
   454e0:	5b 83 50 c0 	add_i s26, s27, s1
   454e4:	3a 20 00 a8 	load_32 s1, 8(s26)
   454e8:	41 04 00 14 	cmplt_i s2, s1, 1
   454ec:	42 0b 00 f4 	bnz s2, 360 <WI_loadData+0x64c>
   454f0:	7e 30 02 a8 	load_32 s3, 140(sp)
   454f4:	9a 20 00 05 	add_i s4, s26, 8
   454f8:	9e 60 02 88 	store_32 s4, 152(sp)
   454fc:	43 20 00 11 	cmpne_i s2, s3, 8
   45500:	62 05 00 f4 	bnz s2, 172 <WI_loadData+0x5a4>
   45504:	5e e3 01 a8 	load_32 s26, 120(sp)
   45508:	00 00 00 a8 	load_32 s0, (s0)
   4550c:	40 04 00 10 	cmpeq_i s2, s0, 1
   45510:	e2 00 00 f4 	bnz s2, 28 <WI_loadData+0x524>
   45514:	10 00 00 f6 	b 64 <WI_loadData+0x54c>
   45518:	19 00 00 a8 	load_32 s0, (s25)
   4551c:	00 00 00 a8 	load_32 s0, (s0)
   45520:	40 04 00 10 	cmpeq_i s2, s0, 1
   45524:	42 00 00 f4 	bnz s2, 8 <WI_loadData+0x524>
   45528:	0b 00 00 f6 	b 44 <WI_loadData+0x54c>
   4552c:	5e 10 02 a8 	load_32 s2, 132(sp)
   45530:	1a 08 00 0b 	shl s0, s26, 2
   45534:	42 00 50 c0 	add_i s2, s2, s0
   45538:	1b 00 50 c0 	add_i s0, s27, s0
   4553c:	42 f0 03 a8 	load_32 s2, 252(s2)
   45540:	40 70 07 88 	store_32 s2, 476(s0)
   45544:	5a 07 00 05 	add_i s26, s26, 1
   45548:	1a 80 30 c1 	cmpge_i s0, s26, s1
   4554c:	40 08 00 f4 	bnz s0, 264 <WI_loadData+0x64c>
   45550:	f2 ff ff f7 	b -56 <WI_loadData+0x510>
   45554:	5e 43 00 88 	store_32 s26, 16(sp)
   45558:	3e 20 02 a8 	load_32 s1, 136(sp)
   4555c:	3e 30 00 88 	store_32 s1, 12(sp)
   45560:	1e 20 00 88 	store_32 s0, 8(sp)
   45564:	1e 73 02 a8 	load_32 s24, 156(sp)
   45568:	1e 03 00 88 	store_32 s24, (sp)
   4556c:	1e 50 02 a8 	load_32 s0, 148(sp)
   45570:	1e 10 00 88 	store_32 s0, 4(sp)
   45574:	25 32 00 f8 	call 51348 <sprintf>
   45578:	00 00 fc c0 	move s0, s24
   4557c:	1e 43 02 a8 	load_32 s24, 144(sp)
   45580:	20 00 fc c0 	move s1, s24
   45584:	71 e6 ff f9 	call -26172 <W_CacheLumpName>
   45588:	3a 08 00 0b 	shl s1, s26, 2
   4558c:	3b 80 50 c0 	add_i s1, s27, s1
   45590:	01 70 07 88 	store_32 s0, 476(s1)
   45594:	1e 60 02 a8 	load_32 s0, 152(sp)
   45598:	20 00 00 a8 	load_32 s1, (s0)
   4559c:	5a 07 00 05 	add_i s26, s26, 1
   455a0:	1a 80 30 c1 	cmpge_i s0, s26, s1
   455a4:	80 05 00 f4 	bnz s0, 176 <WI_loadData+0x64c>
   455a8:	dc ff ff f7 	b -144 <WI_loadData+0x510>
   455ac:	00 00 00 a8 	load_32 s0, (s0)
   455b0:	3e e0 01 a8 	load_32 s1, 120(sp)
   455b4:	3e 40 00 88 	store_32 s1, 16(sp)
   455b8:	7e 30 00 88 	store_32 s3, 12(sp)
   455bc:	1e 20 00 88 	store_32 s0, 8(sp)
   455c0:	1e 50 02 a8 	load_32 s0, 148(sp)
   455c4:	1e 10 00 88 	store_32 s0, 4(sp)
   455c8:	7e 73 02 a8 	load_32 s27, 156(sp)
   455cc:	7e 03 00 88 	store_32 s27, (sp)
   455d0:	0e 32 00 f8 	call 51256 <sprintf>
   455d4:	00 80 fd c0 	move s0, s27
   455d8:	20 00 fc c0 	move s1, s24
   455dc:	5b e6 ff f9 	call -26260 <W_CacheLumpName>
   455e0:	1a 70 00 88 	store_32 s0, 28(s26)
   455e4:	1e 60 02 a8 	load_32 s0, 152(sp)
   455e8:	00 00 00 a8 	load_32 s0, (s0)
   455ec:	00 08 00 14 	cmplt_i s0, s0, 2
   455f0:	20 03 00 f4 	bnz s0, 100 <WI_loadData+0x64c>
   455f4:	60 03 fc c0 	move s27, s24
   455f8:	19 00 00 a8 	load_32 s0, (s25)
   455fc:	00 00 00 a8 	load_32 s0, (s0)
   45600:	7e 43 00 88 	store_32 s27, 16(sp)
   45604:	3e 30 02 a8 	load_32 s1, 140(sp)
   45608:	3e 30 00 88 	store_32 s1, 12(sp)
   4560c:	1e 20 00 88 	store_32 s0, 8(sp)
   45610:	1e 50 02 a8 	load_32 s0, 148(sp)
   45614:	1e 10 00 88 	store_32 s0, 4(sp)
   45618:	1e 73 02 a8 	load_32 s24, 156(sp)
   4561c:	1e 03 00 88 	store_32 s24, (sp)
   45620:	fa 31 00 f8 	call 51176 <sprintf>
   45624:	00 00 fc c0 	move s0, s24
   45628:	1e 43 02 a8 	load_32 s24, 144(sp)
   4562c:	20 00 fc c0 	move s1, s24
   45630:	46 e6 ff f9 	call -26344 <W_CacheLumpName>
   45634:	3b 08 00 0b 	shl s1, s27, 2
   45638:	3a 80 50 c0 	add_i s1, s26, s1
   4563c:	7b 07 00 05 	add_i s27, s27, 1
   45640:	01 70 00 88 	store_32 s0, 28(s1)
   45644:	1e 60 02 a8 	load_32 s0, 152(sp)
   45648:	00 00 00 a8 	load_32 s0, (s0)
   4564c:	1b 00 40 c1 	cmplt_i s0, s27, s0
   45650:	40 fd ff f5 	bnz s0, -88 <WI_loadData+0x5f0>
   45654:	19 00 00 a8 	load_32 s0, (s25)
   45658:	20 00 00 a8 	load_32 s1, (s0)
   4565c:	7e f0 01 a8 	load_32 s3, 124(sp)
   45660:	41 08 00 0b 	shl s2, s1, 2
   45664:	43 00 51 c0 	add_i s2, s3, s2
   45668:	42 00 00 a8 	load_32 s2, (s2)
   4566c:	7e 30 02 a8 	load_32 s3, 140(sp)
   45670:	63 04 00 05 	add_i s3, s3, 1
   45674:	43 00 41 c1 	cmplt_i s2, s3, s2
   45678:	82 f2 ff f5 	bnz s2, -432 <WI_loadData+0x4c0>
   4567c:	01 00 00 4f 	movehi s0, 1
   45680:	20 07 00 0f 	move s25, 1
   45684:	00 f8 56 00 	or s0, s0, 5566
   45688:	20 80 fc c0 	move s1, s25
   4568c:	2f e6 ff f9 	call -26436 <W_CacheLumpName>
   45690:	20 0c 00 4f 	movehi s1, 96
   45694:	21 10 28 00 	or s1, s1, 2564
   45698:	01 00 00 88 	store_32 s0, (s1)
   4569c:	02 00 00 4f 	movehi s0, 2
   456a0:	20 00 00 0f 	move s1, 0
   456a4:	3e 60 02 88 	store_32 s1, 152(sp)
   456a8:	3e 20 00 88 	store_32 s1, 8(sp)
   456ac:	40 83 25 00 	or s26, s0, 2400
   456b0:	5e 13 00 88 	store_32 s26, 4(sp)
   456b4:	1e 73 02 a8 	load_32 s24, 156(sp)
   456b8:	1e 03 00 88 	store_32 s24, (sp)
   456bc:	d3 31 00 f8 	call 51020 <sprintf>
   456c0:	00 00 fc c0 	move s0, s24
   456c4:	20 80 fc c0 	move s1, s25
   456c8:	20 e6 ff f9 	call -26496 <W_CacheLumpName>
   456cc:	20 0c 00 4f 	movehi s1, 96
   456d0:	61 73 27 00 	or s27, s1, 2524
   456d4:	1b 00 00 88 	store_32 s0, (s27)
   456d8:	3e 23 00 88 	store_32 s25, 8(sp)
   456dc:	5e 13 00 88 	store_32 s26, 4(sp)
   456e0:	1e 03 00 88 	store_32 s24, (sp)
   456e4:	c9 31 00 f8 	call 50980 <sprintf>
   456e8:	00 00 fc c0 	move s0, s24
   456ec:	20 80 fc c0 	move s1, s25
   456f0:	16 e6 ff f9 	call -26536 <W_CacheLumpName>
   456f4:	1b 10 00 88 	store_32 s0, 4(s27)
   456f8:	00 08 00 0f 	move s0, 2
   456fc:	1e 00 02 88 	store_32 s0, 128(sp)
   45700:	1e 20 00 88 	store_32 s0, 8(sp)
   45704:	5e 13 00 88 	store_32 s26, 4(sp)
   45708:	1e 03 00 88 	store_32 s24, (sp)
   4570c:	bf 31 00 f8 	call 50940 <sprintf>
   45710:	00 00 fc c0 	move s0, s24
   45714:	20 80 fc c0 	move s1, s25
   45718:	0c e6 ff f9 	call -26576 <W_CacheLumpName>
   4571c:	1b 20 00 88 	store_32 s0, 8(s27)
   45720:	00 0c 00 0f 	move s0, 3
   45724:	1e 20 02 88 	store_32 s0, 136(sp)
   45728:	1e 20 00 88 	store_32 s0, 8(sp)
   4572c:	5e 13 00 88 	store_32 s26, 4(sp)
   45730:	1e 03 00 88 	store_32 s24, (sp)
   45734:	b5 31 00 f8 	call 50900 <sprintf>
   45738:	00 00 fc c0 	move s0, s24
   4573c:	20 80 fc c0 	move s1, s25
   45740:	02 e6 ff f9 	call -26616 <W_CacheLumpName>
   45744:	1b 30 00 88 	store_32 s0, 12(s27)
   45748:	00 10 00 0f 	move s0, 4
   4574c:	1e 10 02 88 	store_32 s0, 132(sp)
   45750:	1e 20 00 88 	store_32 s0, 8(sp)
   45754:	5e 13 00 88 	store_32 s26, 4(sp)
   45758:	1e 03 00 88 	store_32 s24, (sp)
   4575c:	ab 31 00 f8 	call 50860 <sprintf>
   45760:	00 00 fc c0 	move s0, s24
   45764:	20 80 fc c0 	move s1, s25
   45768:	f8 e5 ff f9 	call -26656 <W_CacheLumpName>
   4576c:	1b 40 00 88 	store_32 s0, 16(s27)
   45770:	00 14 00 0f 	move s0, 5
   45774:	1e 20 00 88 	store_32 s0, 8(sp)
   45778:	5e 13 00 88 	store_32 s26, 4(sp)
   4577c:	1e 03 00 88 	store_32 s24, (sp)
   45780:	a2 31 00 f8 	call 50824 <sprintf>
   45784:	00 00 fc c0 	move s0, s24
   45788:	20 80 fc c0 	move s1, s25
   4578c:	ef e5 ff f9 	call -26692 <W_CacheLumpName>
   45790:	1b 50 00 88 	store_32 s0, 20(s27)
   45794:	00 18 00 0f 	move s0, 6
   45798:	1e 20 00 88 	store_32 s0, 8(sp)
   4579c:	5e 13 00 88 	store_32 s26, 4(sp)
   457a0:	1e 03 00 88 	store_32 s24, (sp)
   457a4:	99 31 00 f8 	call 50788 <sprintf>
   457a8:	00 00 fc c0 	move s0, s24
   457ac:	20 80 fc c0 	move s1, s25
   457b0:	e6 e5 ff f9 	call -26728 <W_CacheLumpName>
   457b4:	1b 60 00 88 	store_32 s0, 24(s27)
   457b8:	00 1c 00 0f 	move s0, 7
   457bc:	1e 20 00 88 	store_32 s0, 8(sp)
   457c0:	5e 13 00 88 	store_32 s26, 4(sp)
   457c4:	1e 03 00 88 	store_32 s24, (sp)
   457c8:	90 31 00 f8 	call 50752 <sprintf>
   457cc:	00 00 fc c0 	move s0, s24
   457d0:	20 80 fc c0 	move s1, s25
   457d4:	dd e5 ff f9 	call -26764 <W_CacheLumpName>
   457d8:	1b 70 00 88 	store_32 s0, 28(s27)
   457dc:	00 20 00 0f 	move s0, 8
   457e0:	1e 20 00 88 	store_32 s0, 8(sp)
   457e4:	5e 13 00 88 	store_32 s26, 4(sp)
   457e8:	1e 03 00 88 	store_32 s24, (sp)
   457ec:	87 31 00 f8 	call 50716 <sprintf>
   457f0:	00 00 fc c0 	move s0, s24
   457f4:	20 80 fc c0 	move s1, s25
   457f8:	d4 e5 ff f9 	call -26800 <W_CacheLumpName>
   457fc:	1b 80 00 88 	store_32 s0, 32(s27)
   45800:	00 24 00 0f 	move s0, 9
   45804:	1e 20 00 88 	store_32 s0, 8(sp)
   45808:	5e 13 00 88 	store_32 s26, 4(sp)
   4580c:	1e 03 00 88 	store_32 s24, (sp)
   45810:	7e 31 00 f8 	call 50680 <sprintf>
   45814:	00 00 fc c0 	move s0, s24
   45818:	20 80 fc c0 	move s1, s25
   4581c:	cb e5 ff f9 	call -26836 <W_CacheLumpName>
   45820:	1b 90 00 88 	store_32 s0, 36(s27)
   45824:	02 00 00 4f 	movehi s0, 2
   45828:	20 80 fc c0 	move s1, s25
   4582c:	00 bc 2d 00 	or s0, s0, 2927
   45830:	c6 e5 ff f9 	call -26856 <W_CacheLumpName>
   45834:	20 0c 00 4f 	movehi s1, 96
   45838:	21 20 28 00 	or s1, s1, 2568
   4583c:	01 00 00 88 	store_32 s0, (s1)
   45840:	00 00 00 4f 	movehi s0, 0
   45844:	20 80 fc c0 	move s1, s25
   45848:	00 6c 08 00 	or s0, s0, 539
   4584c:	bf e5 ff f9 	call -26884 <W_CacheLumpName>
   45850:	20 0c 00 4f 	movehi s1, 96
   45854:	21 30 27 00 	or s1, s1, 2508
   45858:	01 00 00 88 	store_32 s0, (s1)
   4585c:	01 00 00 4f 	movehi s0, 1
   45860:	20 80 fc c0 	move s1, s25
   45864:	00 c8 7f 00 	or s0, s0, 8178
   45868:	b8 e5 ff f9 	call -26912 <W_CacheLumpName>
   4586c:	20 0c 00 4f 	movehi s1, 96
   45870:	21 40 27 00 	or s1, s1, 2512
   45874:	01 00 00 88 	store_32 s0, (s1)
   45878:	01 00 00 4f 	movehi s0, 1
   4587c:	20 80 fc c0 	move s1, s25
   45880:	00 18 44 00 	or s0, s0, 4358
   45884:	b1 e5 ff f9 	call -26940 <W_CacheLumpName>
   45888:	20 0c 00 4f 	movehi s1, 96
   4588c:	21 e0 2b 00 	or s1, s1, 2808
   45890:	01 00 00 88 	store_32 s0, (s1)
   45894:	01 00 00 4f 	movehi s0, 1
   45898:	20 80 fc c0 	move s1, s25
   4589c:	00 04 65 00 	or s0, s0, 6465
   458a0:	aa e5 ff f9 	call -26968 <W_CacheLumpName>
   458a4:	20 0c 00 4f 	movehi s1, 96
   458a8:	21 00 2c 00 	or s1, s1, 2816
   458ac:	01 00 00 88 	store_32 s0, (s1)
   458b0:	00 00 00 4f 	movehi s0, 0
   458b4:	20 80 fc c0 	move s1, s25
   458b8:	00 48 56 00 	or s0, s0, 5522
   458bc:	a3 e5 ff f9 	call -26996 <W_CacheLumpName>
   458c0:	20 0c 00 4f 	movehi s1, 96
   458c4:	5b 04 00 4f 	movehi s2, 59
   458c8:	7a 04 00 4f 	movehi s3, 58
   458cc:	21 50 2c 00 	or s1, s1, 2836
   458d0:	42 c0 01 00 	or s2, s2, 112
   458d4:	63 60 6e 00 	or s3, s3, 7064
   458d8:	01 00 00 88 	store_32 s0, (s1)
   458dc:	02 00 00 4f 	movehi s0, 2
   458e0:	22 00 00 a8 	load_32 s1, (s2)
   458e4:	43 00 00 a8 	load_32 s2, (s3)
   458e8:	00 d8 2d 00 	or s0, s0, 2934
   458ec:	62 00 00 11 	cmpne_i s3, s2, 0
   458f0:	40 00 f0 c0 	move s2, s0
   458f4:	63 00 00 f4 	bnz s3, 12 <WI_loadData+0x8f8>
   458f8:	40 00 00 4f 	movehi s2, 0
   458fc:	42 d0 6b 00 	or s2, s2, 6900
   45900:	21 00 00 10 	cmpeq_i s1, s1, 0
   45904:	41 00 00 f4 	bnz s1, 8 <WI_loadData+0x904>
   45908:	00 00 f1 c0 	move s0, s2
   4590c:	20 80 fc c0 	move s1, s25
   45910:	8e e5 ff f9 	call -27080 <W_CacheLumpName>
   45914:	20 0c 00 4f 	movehi s1, 96
   45918:	21 f0 2b 00 	or s1, s1, 2812
   4591c:	01 00 00 88 	store_32 s0, (s1)
   45920:	00 00 00 4f 	movehi s0, 0
   45924:	20 80 fc c0 	move s1, s25
   45928:	00 c0 19 00 	or s0, s0, 1648
   4592c:	87 e5 ff f9 	call -27108 <W_CacheLumpName>
   45930:	20 0c 00 4f 	movehi s1, 96
   45934:	21 10 2c 00 	or s1, s1, 2820
   45938:	01 00 00 88 	store_32 s0, (s1)
   4593c:	01 00 00 4f 	movehi s0, 1
   45940:	20 80 fc c0 	move s1, s25
   45944:	00 88 79 00 	or s0, s0, 7778
   45948:	80 e5 ff f9 	call -27136 <W_CacheLumpName>
   4594c:	20 0c 00 4f 	movehi s1, 96
   45950:	21 30 28 00 	or s1, s1, 2572
   45954:	01 00 00 88 	store_32 s0, (s1)
   45958:	02 00 00 4f 	movehi s0, 2
   4595c:	20 80 fc c0 	move s1, s25
   45960:	00 bc 7e 00 	or s0, s0, 8111
   45964:	79 e5 ff f9 	call -27164 <W_CacheLumpName>
   45968:	20 0c 00 4f 	movehi s1, 96
   4596c:	21 60 2c 00 	or s1, s1, 2840
   45970:	01 00 00 88 	store_32 s0, (s1)
   45974:	02 00 00 4f 	movehi s0, 2
   45978:	20 80 fc c0 	move s1, s25
   4597c:	00 fc 57 00 	or s0, s0, 5631
   45980:	72 e5 ff f9 	call -27192 <W_CacheLumpName>
   45984:	20 0c 00 4f 	movehi s1, 96
   45988:	21 40 28 00 	or s1, s1, 2576
   4598c:	01 00 00 88 	store_32 s0, (s1)
   45990:	03 00 00 4f 	movehi s0, 3
   45994:	20 80 fc c0 	move s1, s25
   45998:	00 48 0c 00 	or s0, s0, 786
   4599c:	6b e5 ff f9 	call -27220 <W_CacheLumpName>
   459a0:	20 0c 00 4f 	movehi s1, 96
   459a4:	21 70 2c 00 	or s1, s1, 2844
   459a8:	01 00 00 88 	store_32 s0, (s1)
   459ac:	02 00 00 4f 	movehi s0, 2
   459b0:	20 80 fc c0 	move s1, s25
   459b4:	00 84 76 00 	or s0, s0, 7585
   459b8:	64 e5 ff f9 	call -27248 <W_CacheLumpName>
   459bc:	20 0c 00 4f 	movehi s1, 96
   459c0:	21 30 2a 00 	or s1, s1, 2700
   459c4:	01 00 00 88 	store_32 s0, (s1)
   459c8:	01 00 00 4f 	movehi s0, 1
   459cc:	20 80 fc c0 	move s1, s25
   459d0:	00 a8 06 00 	or s0, s0, 426
   459d4:	5d e5 ff f9 	call -27276 <W_CacheLumpName>
   459d8:	20 0c 00 4f 	movehi s1, 96
   459dc:	21 40 2a 00 	or s1, s1, 2704
   459e0:	01 00 00 88 	store_32 s0, (s1)
   459e4:	02 00 00 4f 	movehi s0, 2
   459e8:	20 80 fc c0 	move s1, s25
   459ec:	00 fc 62 00 	or s0, s0, 6335
   459f0:	56 e5 ff f9 	call -27304 <W_CacheLumpName>
   459f4:	20 0c 00 4f 	movehi s1, 96
   459f8:	21 20 2a 00 	or s1, s1, 2696
   459fc:	01 00 00 88 	store_32 s0, (s1)
   45a00:	02 00 00 4f 	movehi s0, 2
   45a04:	20 80 fc c0 	move s1, s25
   45a08:	00 6c 07 00 	or s0, s0, 475
   45a0c:	4f e5 ff f9 	call -27332 <W_CacheLumpName>
   45a10:	20 0c 00 4f 	movehi s1, 96
   45a14:	21 b0 2a 00 	or s1, s1, 2732
   45a18:	01 00 00 88 	store_32 s0, (s1)
   45a1c:	02 00 00 4f 	movehi s0, 2
   45a20:	20 80 fc c0 	move s1, s25
   45a24:	00 e8 15 00 	or s0, s0, 1402
   45a28:	48 e5 ff f9 	call -27360 <W_CacheLumpName>
   45a2c:	20 0c 00 4f 	movehi s1, 96
   45a30:	21 a0 2a 00 	or s1, s1, 2728
   45a34:	01 00 00 88 	store_32 s0, (s1)
   45a38:	00 00 00 4f 	movehi s0, 0
   45a3c:	3e 60 02 a8 	load_32 s1, 152(sp)
   45a40:	3e 20 00 88 	store_32 s1, 8(sp)
   45a44:	00 ac 2f 00 	or s0, s0, 3051
   45a48:	1e 10 00 88 	store_32 s0, 4(sp)
   45a4c:	60 03 f0 c0 	move s27, s0
   45a50:	7e 63 02 88 	store_32 s27, 152(sp)
   45a54:	1e 03 00 88 	store_32 s24, (sp)
   45a58:	ec 30 00 f8 	call 50096 <sprintf>
   45a5c:	00 00 fc c0 	move s0, s24
   45a60:	20 80 fc c0 	move s1, s25
   45a64:	39 e5 ff f9 	call -27420 <W_CacheLumpName>
   45a68:	20 0c 00 4f 	movehi s1, 96
   45a6c:	41 53 2a 00 	or s26, s1, 2708
   45a70:	1a 00 00 88 	store_32 s0, (s26)
   45a74:	01 00 00 4f 	movehi s0, 1
   45a78:	5e 53 02 88 	store_32 s26, 148(sp)
   45a7c:	3e 23 00 88 	store_32 s25, 8(sp)
   45a80:	00 24 10 00 	or s0, s0, 1033
   45a84:	1e 30 02 88 	store_32 s0, 140(sp)
   45a88:	1e 10 00 88 	store_32 s0, 4(sp)
   45a8c:	1e 03 00 88 	store_32 s24, (sp)
   45a90:	de 30 00 f8 	call 50040 <sprintf>
   45a94:	00 00 fc c0 	move s0, s24
   45a98:	20 80 fc c0 	move s1, s25
   45a9c:	2b e5 ff f9 	call -27476 <W_CacheLumpName>
   45aa0:	20 0c 00 4f 	movehi s1, 96
   45aa4:	21 a0 2c 00 	or s1, s1, 2856
   45aa8:	3e 40 02 88 	store_32 s1, 144(sp)
   45aac:	01 00 00 88 	store_32 s0, (s1)
   45ab0:	3e 23 00 88 	store_32 s25, 8(sp)
   45ab4:	7e 13 00 88 	store_32 s27, 4(sp)
   45ab8:	1e 03 00 88 	store_32 s24, (sp)
   45abc:	d3 30 00 f8 	call 49996 <sprintf>
   45ac0:	00 00 fc c0 	move s0, s24
   45ac4:	20 80 fc c0 	move s1, s25
   45ac8:	20 e5 ff f9 	call -27520 <W_CacheLumpName>
   45acc:	1a 10 00 88 	store_32 s0, 4(s26)
   45ad0:	7e 03 02 a8 	load_32 s27, 128(sp)
   45ad4:	7e 23 00 88 	store_32 s27, 8(sp)
   45ad8:	5e 33 02 a8 	load_32 s26, 140(sp)
   45adc:	5e 13 00 88 	store_32 s26, 4(sp)
   45ae0:	1e 03 00 88 	store_32 s24, (sp)
   45ae4:	c9 30 00 f8 	call 49956 <sprintf>
   45ae8:	00 00 fc c0 	move s0, s24
   45aec:	20 80 fc c0 	move s1, s25
   45af0:	16 e5 ff f9 	call -27560 <W_CacheLumpName>
   45af4:	3e 40 02 a8 	load_32 s1, 144(sp)
   45af8:	01 10 00 88 	store_32 s0, 4(s1)
   45afc:	7e 23 00 88 	store_32 s27, 8(sp)
   45b00:	1e 60 02 a8 	load_32 s0, 152(sp)
   45b04:	1e 10 00 88 	store_32 s0, 4(sp)
   45b08:	1e 03 00 88 	store_32 s24, (sp)
   45b0c:	bf 30 00 f8 	call 49916 <sprintf>
   45b10:	00 00 fc c0 	move s0, s24
   45b14:	20 80 fc c0 	move s1, s25
   45b18:	0c e5 ff f9 	call -27600 <W_CacheLumpName>
   45b1c:	3e 50 02 a8 	load_32 s1, 148(sp)
   45b20:	01 20 00 88 	store_32 s0, 8(s1)
   45b24:	7e 23 02 a8 	load_32 s27, 136(sp)
   45b28:	7e 23 00 88 	store_32 s27, 8(sp)
   45b2c:	5e 13 00 88 	store_32 s26, 4(sp)
   45b30:	1e 03 00 88 	store_32 s24, (sp)
   45b34:	b5 30 00 f8 	call 49876 <sprintf>
   45b38:	00 00 fc c0 	move s0, s24
   45b3c:	20 80 fc c0 	move s1, s25
   45b40:	02 e5 ff f9 	call -27640 <W_CacheLumpName>
   45b44:	5e 43 02 a8 	load_32 s26, 144(sp)
   45b48:	1a 20 00 88 	store_32 s0, 8(s26)
   45b4c:	7e 23 00 88 	store_32 s27, 8(sp)
   45b50:	1e 60 02 a8 	load_32 s0, 152(sp)
   45b54:	1e 10 00 88 	store_32 s0, 4(sp)
   45b58:	1e 03 00 88 	store_32 s24, (sp)
   45b5c:	ab 30 00 f8 	call 49836 <sprintf>
   45b60:	00 00 fc c0 	move s0, s24
   45b64:	20 80 fc c0 	move s1, s25
   45b68:	f8 e4 ff f9 	call -27680 <W_CacheLumpName>
   45b6c:	3e 50 02 a8 	load_32 s1, 148(sp)
   45b70:	01 30 00 88 	store_32 s0, 12(s1)
   45b74:	1e 10 02 a8 	load_32 s0, 132(sp)
   45b78:	1e 20 00 88 	store_32 s0, 8(sp)
   45b7c:	1e 30 02 a8 	load_32 s0, 140(sp)
   45b80:	1e 10 00 88 	store_32 s0, 4(sp)
   45b84:	1e 03 00 88 	store_32 s24, (sp)
   45b88:	a0 30 00 f8 	call 49792 <sprintf>
   45b8c:	00 00 fc c0 	move s0, s24
   45b90:	20 80 fc c0 	move s1, s25
   45b94:	ed e4 ff f9 	call -27724 <W_CacheLumpName>
   45b98:	1a 30 00 88 	store_32 s0, 12(s26)
   45b9c:	fe b3 02 a8 	load_32 ra, 172(sp)
   45ba0:	7e c3 02 a8 	load_32 s27, 176(sp)
   45ba4:	5e d3 02 a8 	load_32 s26, 180(sp)
   45ba8:	3e e3 02 a8 	load_32 s25, 184(sp)
   45bac:	1e f3 02 a8 	load_32 s24, 188(sp)
   45bb0:	de 03 03 05 	add_i sp, sp, 192
   45bb4:	1f 00 00 f0 	ret

0000000000045bb8 WI_Drawer:
   45bb8:	de 03 ff 05 	add_i sp, sp, -64
   45bbc:	fe f3 00 88 	store_32 ra, 60(sp)
   45bc0:	00 0c 00 4f 	movehi s0, 96
   45bc4:	00 60 27 00 	or s0, s0, 2520
   45bc8:	00 00 00 a8 	load_32 s0, (s0)
   45bcc:	20 fc ff 10 	cmpeq_i s1, s0, -1
   45bd0:	81 01 00 f4 	bnz s1, 48 <WI_Drawer+0x48>
   45bd4:	20 04 00 10 	cmpeq_i s1, s0, 1
   45bd8:	c1 01 00 f4 	bnz s1, 56 <WI_Drawer+0x58>
   45bdc:	c0 00 00 f4 	bnz s0, 24 <WI_Drawer+0x3c>
   45be0:	1a 04 00 4f 	movehi s0, 58
   45be4:	00 60 6e 00 	or s0, s0, 7064
   45be8:	00 00 00 a8 	load_32 s0, (s0)
   45bec:	a0 01 00 f2 	bz s0, 52 <WI_Drawer+0x68>
   45bf0:	3c f0 ff f9 	call -16144 <WI_drawDeathmatchStats>
   45bf4:	fe f3 00 a8 	load_32 ra, 60(sp)
   45bf8:	de 03 01 05 	add_i sp, sp, 64
   45bfc:	1f 00 00 f0 	ret
   45c00:	00 0c 00 4f 	movehi s0, 96
   45c04:	20 04 00 0f 	move s1, 1
   45c08:	00 70 28 00 	or s0, s0, 2588
   45c0c:	20 00 00 88 	store_32 s1, (s0)
   45c10:	1c ec ff f9 	call -20368 <WI_drawShowNextLoc>
   45c14:	fe f3 00 a8 	load_32 ra, 60(sp)
   45c18:	de 03 01 05 	add_i sp, sp, 64
   45c1c:	1f 00 00 f0 	ret
   45c20:	1b 04 00 4f 	movehi s0, 59
   45c24:	00 c0 01 00 	or s0, s0, 112
   45c28:	00 00 00 a8 	load_32 s0, (s0)
   45c2c:	a0 00 00 f2 	bz s0, 20 <WI_Drawer+0x88>
   45c30:	63 f7 ff f9 	call -8820 <WI_drawNetgameStats>
   45c34:	fe f3 00 a8 	load_32 ra, 60(sp)
   45c38:	de 03 01 05 	add_i sp, sp, 64
   45c3c:	1f 00 00 f0 	ret
   45c40:	b5 fa ff f9 	call -5420 <WI_drawStats>
   45c44:	fe f3 00 a8 	load_32 ra, 60(sp)
   45c48:	de 03 01 05 	add_i sp, sp, 64
   45c4c:	1f 00 00 f0 	ret

0000000000045c50 WI_initVariables:
   45c50:	20 0c 00 4f 	movehi s1, 96
   45c54:	40 0c 00 4f 	movehi s2, 96
   45c58:	80 0c 00 4f 	movehi s4, 96
   45c5c:	21 20 27 00 	or s1, s1, 2504
   45c60:	60 00 00 0f 	move s3, 0
   45c64:	01 00 00 88 	store_32 s0, (s1)
   45c68:	22 50 28 00 	or s1, s2, 2580
   45c6c:	40 0c 00 4f 	movehi s2, 96
   45c70:	61 00 00 82 	store_8 s3, (s1)
   45c74:	24 60 28 00 	or s1, s4, 2584
   45c78:	42 50 27 00 	or s2, s2, 2516
   45c7c:	62 00 00 88 	store_32 s3, (s2)
   45c80:	40 0c 00 4f 	movehi s2, 96
   45c84:	61 00 00 88 	store_32 s3, (s1)
   45c88:	20 0c 00 4f 	movehi s1, 96
   45c8c:	60 90 00 a8 	load_32 s3, 36(s0)
   45c90:	42 90 2a 00 	or s2, s2, 2724
   45c94:	21 b0 28 00 	or s1, s1, 2604
   45c98:	62 00 00 88 	store_32 s3, (s2)
   45c9c:	40 a0 00 05 	add_i s2, s0, 40
   45ca0:	41 00 00 88 	store_32 s2, (s1)
   45ca4:	20 40 00 a8 	load_32 s1, 16(s0)
   45ca8:	41 00 00 f4 	bnz s1, 8 <WI_initVariables+0x60>
   45cac:	13 00 00 f6 	b 76 <WI_initVariables+0xa8>
   45cb0:	20 50 00 a8 	load_32 s1, 20(s0)
   45cb4:	41 00 00 f4 	bnz s1, 8 <WI_initVariables+0x6c>
   45cb8:	14 00 00 f6 	b 80 <WI_initVariables+0xb8>
   45cbc:	20 60 00 a8 	load_32 s1, 24(s0)
   45cc0:	61 00 00 f4 	bnz s1, 12 <WI_initVariables+0x7c>
   45cc4:	20 04 00 0f 	move s1, 1
   45cc8:	20 60 00 88 	store_32 s1, 24(s0)
   45ccc:	2b 04 00 4f 	movehi s1, 43
   45cd0:	21 00 40 00 	or s1, s1, 4096
   45cd4:	21 00 00 a8 	load_32 s1, (s1)
   45cd8:	21 0c 00 10 	cmpeq_i s1, s1, 3
   45cdc:	c1 00 00 f4 	bnz s1, 24 <WI_initVariables+0xa4>
   45ce0:	20 00 00 a8 	load_32 s1, (s0)
   45ce4:	41 0c 00 14 	cmplt_i s2, s1, 3
   45ce8:	62 00 00 f4 	bnz s2, 12 <WI_initVariables+0xa4>
   45cec:	21 f4 ff 05 	add_i s1, s1, -3
   45cf0:	20 00 00 88 	store_32 s1, (s0)
   45cf4:	1f 00 00 f0 	ret
   45cf8:	20 04 00 0f 	move s1, 1
   45cfc:	20 40 00 88 	store_32 s1, 16(s0)
   45d00:	20 50 00 a8 	load_32 s1, 20(s0)
   45d04:	c1 fd ff f5 	bnz s1, -72 <WI_initVariables+0x6c>
   45d08:	20 04 00 0f 	move s1, 1
   45d0c:	20 50 00 88 	store_32 s1, 20(s0)
   45d10:	20 60 00 a8 	load_32 s1, 24(s0)
   45d14:	c1 fd ff f5 	bnz s1, -72 <WI_initVariables+0x7c>
   45d18:	eb ff ff f7 	b -84 <WI_initVariables+0x74>

0000000000045d1c WI_Start:
   45d1c:	de 03 ff 05 	add_i sp, sp, -64
   45d20:	1e f3 00 88 	store_32 s24, 60(sp)
   45d24:	3e e3 00 88 	store_32 s25, 56(sp)
   45d28:	fe d3 00 88 	store_32 ra, 52(sp)
   45d2c:	20 0c 00 4f 	movehi s1, 96
   45d30:	40 0c 00 4f 	movehi s2, 96
   45d34:	20 03 00 0f 	move s25, 0
   45d38:	21 20 27 00 	or s1, s1, 2504
   45d3c:	02 53 28 00 	or s24, s2, 2580
   45d40:	40 0c 00 4f 	movehi s2, 96
   45d44:	01 00 00 88 	store_32 s0, (s1)
   45d48:	20 0c 00 4f 	movehi s1, 96
   45d4c:	38 03 00 82 	store_8 s25, (s24)
   45d50:	42 60 28 00 	or s2, s2, 2584
   45d54:	21 50 27 00 	or s1, s1, 2516
   45d58:	21 03 00 88 	store_32 s25, (s1)
   45d5c:	20 0c 00 4f 	movehi s1, 96
   45d60:	22 03 00 88 	store_32 s25, (s2)
   45d64:	40 0c 00 4f 	movehi s2, 96
   45d68:	60 90 00 a8 	load_32 s3, 36(s0)
   45d6c:	21 90 2a 00 	or s1, s1, 2724
   45d70:	42 b0 28 00 	or s2, s2, 2604
   45d74:	61 00 00 88 	store_32 s3, (s1)
   45d78:	20 a0 00 05 	add_i s1, s0, 40
   45d7c:	22 00 00 88 	store_32 s1, (s2)
   45d80:	20 40 00 a8 	load_32 s1, 16(s0)
   45d84:	41 00 00 f4 	bnz s1, 8 <WI_Start+0x70>
   45d88:	19 00 00 f6 	b 100 <WI_Start+0xd0>
   45d8c:	20 50 00 a8 	load_32 s1, 20(s0)
   45d90:	41 00 00 f4 	bnz s1, 8 <WI_Start+0x7c>
   45d94:	1a 00 00 f6 	b 104 <WI_Start+0xe0>
   45d98:	20 60 00 a8 	load_32 s1, 24(s0)
   45d9c:	61 00 00 f4 	bnz s1, 12 <WI_Start+0x8c>
   45da0:	20 04 00 0f 	move s1, 1
   45da4:	20 60 00 88 	store_32 s1, 24(s0)
   45da8:	2b 04 00 4f 	movehi s1, 43
   45dac:	21 00 40 00 	or s1, s1, 4096
   45db0:	21 00 00 a8 	load_32 s1, (s1)
   45db4:	21 0c 00 10 	cmpeq_i s1, s1, 3
   45db8:	c1 00 00 f4 	bnz s1, 24 <WI_Start+0xb4>
   45dbc:	20 00 00 a8 	load_32 s1, (s0)
   45dc0:	41 0c 00 14 	cmplt_i s2, s1, 3
   45dc4:	62 00 00 f4 	bnz s2, 12 <WI_Start+0xb4>
   45dc8:	21 f4 ff 05 	add_i s1, s1, -3
   45dcc:	20 00 00 88 	store_32 s1, (s0)
   45dd0:	8e fc ff f9 	call -3528 <WI_loadData>
   45dd4:	1a 04 00 4f 	movehi s0, 58
   45dd8:	00 60 6e 00 	or s0, s0, 7064
   45ddc:	00 00 00 a8 	load_32 s0, (s0)
   45de0:	80 01 00 f2 	bz s0, 48 <WI_Start+0xf4>
   45de4:	1c ed ff f9 	call -19344 <WI_initDeathmatchStats>
   45de8:	2d 00 00 f6 	b 180 <WI_Start+0x180>
   45dec:	20 04 00 0f 	move s1, 1
   45df0:	20 40 00 88 	store_32 s1, 16(s0)
   45df4:	20 50 00 a8 	load_32 s1, 20(s0)
   45df8:	01 fd ff f5 	bnz s1, -96 <WI_Start+0x7c>
   45dfc:	20 04 00 0f 	move s1, 1
   45e00:	20 50 00 88 	store_32 s1, 20(s0)
   45e04:	20 60 00 a8 	load_32 s1, 24(s0)
   45e08:	01 fd ff f5 	bnz s1, -96 <WI_Start+0x8c>
   45e0c:	e5 ff ff f7 	b -108 <WI_Start+0x84>
   45e10:	1b 04 00 4f 	movehi s0, 59
   45e14:	00 c0 01 00 	or s0, s0, 112
   45e18:	00 00 00 a8 	load_32 s0, (s0)
   45e1c:	60 00 00 f2 	bz s0, 12 <WI_Start+0x10c>
   45e20:	5d f2 ff f9 	call -13964 <WI_initNetgameStats>
   45e24:	1e 00 00 f6 	b 120 <WI_Start+0x180>
   45e28:	00 0c 00 4f 	movehi s0, 96
   45e2c:	20 0c 00 4f 	movehi s1, 96
   45e30:	40 04 00 0f 	move s2, 1
   45e34:	00 60 27 00 	or s0, s0, 2520
   45e38:	60 0c 00 4f 	movehi s3, 96
   45e3c:	20 03 00 88 	store_32 s25, (s0)
   45e40:	01 20 2c 00 	or s0, s1, 2824
   45e44:	20 0c 00 4f 	movehi s1, 96
   45e48:	38 03 00 82 	store_8 s25, (s24)
   45e4c:	40 00 00 88 	store_32 s2, (s0)
   45e50:	40 fc ff 0f 	move s2, -1
   45e54:	01 10 2b 00 	or s0, s1, 2756
   45e58:	20 0c 00 4f 	movehi s1, 96
   45e5c:	40 00 00 88 	store_32 s2, (s0)
   45e60:	03 90 2b 00 	or s0, s3, 2788
   45e64:	21 50 2b 00 	or s1, s1, 2772
   45e68:	60 0c 00 4f 	movehi s3, 96
   45e6c:	41 00 00 88 	store_32 s2, (s1)
   45e70:	20 0c 00 4f 	movehi s1, 96
   45e74:	40 00 00 88 	store_32 s2, (s0)
   45e78:	00 0c 00 4f 	movehi s0, 96
   45e7c:	21 30 2c 00 	or s1, s1, 2828
   45e80:	00 40 2c 00 	or s0, s0, 2832
   45e84:	41 00 00 88 	store_32 s2, (s1)
   45e88:	23 d0 28 00 	or s1, s3, 2612
   45e8c:	40 00 00 88 	store_32 s2, (s0)
   45e90:	00 8c 00 0f 	move s0, 35
   45e94:	01 00 00 88 	store_32 s0, (s1)
   45e98:	db e5 ff f9 	call -26772 <WI_initAnimatedBack>
   45e9c:	fe d3 00 a8 	load_32 ra, 52(sp)
   45ea0:	3e e3 00 a8 	load_32 s25, 56(sp)
   45ea4:	1e f3 00 a8 	load_32 s24, 60(sp)
   45ea8:	de 03 01 05 	add_i sp, sp, 64
   45eac:	1f 00 00 f0 	ret

0000000000045eb0 V_MarkRect:
   45eb0:	de 03 ff 05 	add_i sp, sp, -64
   45eb4:	1e f3 00 88 	store_32 s24, 60(sp)
   45eb8:	3e e3 00 88 	store_32 s25, 56(sp)
   45ebc:	5e d3 00 88 	store_32 s26, 52(sp)
   45ec0:	7e c3 00 88 	store_32 s27, 48(sp)
   45ec4:	fe b3 00 88 	store_32 ra, 44(sp)
   45ec8:	7e a0 00 88 	store_32 s3, 40(sp)
   45ecc:	20 03 f1 c0 	move s25, s2
   45ed0:	40 83 f0 c0 	move s26, s1
   45ed4:	60 03 f0 c0 	move s27, s0
   45ed8:	00 0c 00 4f 	movehi s0, 96
   45edc:	00 e3 01 00 	or s24, s0, 120
   45ee0:	00 00 fc c0 	move s0, s24
   45ee4:	20 80 fd c0 	move s1, s27
   45ee8:	40 00 fd c0 	move s2, s26
   45eec:	fc 57 ff f9 	call -172048 <M_AddToBox>
   45ef0:	3e a0 00 a8 	load_32 s1, 40(sp)
   45ef4:	1b 80 5c c0 	add_i s0, s27, s25
   45ef8:	5a 80 50 c0 	add_i s2, s26, s1
   45efc:	20 fc ff 05 	add_i s1, s0, -1
   45f00:	00 00 fc c0 	move s0, s24
   45f04:	42 fc ff 05 	add_i s2, s2, -1
   45f08:	f5 57 ff f9 	call -172076 <M_AddToBox>
   45f0c:	fe b3 00 a8 	load_32 ra, 44(sp)
   45f10:	7e c3 00 a8 	load_32 s27, 48(sp)
   45f14:	5e d3 00 a8 	load_32 s26, 52(sp)
   45f18:	3e e3 00 a8 	load_32 s25, 56(sp)
   45f1c:	1e f3 00 a8 	load_32 s24, 60(sp)
   45f20:	de 03 01 05 	add_i sp, sp, 64
   45f24:	1f 00 00 f0 	ret

0000000000045f28 V_CopyRect:
   45f28:	de 03 fe 05 	add_i sp, sp, -128
   45f2c:	1e f3 01 88 	store_32 s24, 124(sp)
   45f30:	3e e3 01 88 	store_32 s25, 120(sp)
   45f34:	5e d3 01 88 	store_32 s26, 116(sp)
   45f38:	7e c3 01 88 	store_32 s27, 112(sp)
   45f3c:	fe b3 01 88 	store_32 ra, 108(sp)
   45f40:	00 01 f0 c0 	move s8, s0
   45f44:	fe 70 01 88 	store_32 s7, 92(sp)
   45f48:	00 03 f2 c0 	move s24, s4
   45f4c:	20 83 f1 c0 	move s25, s3
   45f50:	5e 60 01 88 	store_32 s2, 88(sp)
   45f54:	08 00 00 14 	cmplt_i s0, s8, 0
   45f58:	3e 90 01 88 	store_32 s1, 100(sp)
   45f5c:	1e a1 01 88 	store_32 s8, 104(sp)
   45f60:	60 03 00 f4 	bnz s0, 108 <V_CopyRect+0xa4>
   45f64:	1e 90 01 a8 	load_32 s0, 100(sp)
   45f68:	00 00 00 14 	cmplt_i s0, s0, 0
   45f6c:	00 03 00 f4 	bnz s0, 96 <V_CopyRect+0xa4>
   45f70:	19 00 54 c0 	add_i s0, s25, s8
   45f74:	00 00 05 12 	cmpgt_i s0, s0, 320
   45f78:	a0 02 00 f4 	bnz s0, 84 <V_CopyRect+0xa4>
   45f7c:	1e 90 01 a8 	load_32 s0, 100(sp)
   45f80:	18 00 50 c0 	add_i s0, s24, s0
   45f84:	00 20 03 12 	cmpgt_i s0, s0, 200
   45f88:	20 02 00 f4 	bnz s0, 68 <V_CopyRect+0xa4>
   45f8c:	05 00 00 14 	cmplt_i s0, s5, 0
   45f90:	e0 01 00 f4 	bnz s0, 60 <V_CopyRect+0xa4>
   45f94:	65 83 5c c0 	add_i s27, s5, s25
   45f98:	1b 00 05 12 	cmpgt_i s0, s27, 320
   45f9c:	80 01 00 f4 	bnz s0, 48 <V_CopyRect+0xa4>
   45fa0:	06 00 00 14 	cmplt_i s0, s6, 0
   45fa4:	40 01 00 f4 	bnz s0, 40 <V_CopyRect+0xa4>
   45fa8:	1e 70 01 a8 	load_32 s0, 92(sp)
   45fac:	00 10 00 16 	cmpgt_u s0, s0, 4
   45fb0:	e0 00 00 f4 	bnz s0, 28 <V_CopyRect+0xa4>
   45fb4:	1e 60 01 a8 	load_32 s0, 88(sp)
   45fb8:	00 10 00 16 	cmpgt_u s0, s0, 4
   45fbc:	80 00 00 f4 	bnz s0, 16 <V_CopyRect+0xa4>
   45fc0:	46 00 5c c0 	add_i s2, s6, s24
   45fc4:	02 24 03 14 	cmplt_i s0, s2, 201
   45fc8:	80 01 00 f4 	bnz s0, 48 <V_CopyRect+0xd0>
   45fcc:	01 00 00 4f 	movehi s0, 1
   45fd0:	00 40 10 00 	or s0, s0, 1040
   45fd4:	1e 00 00 88 	store_32 s0, (sp)
   45fd8:	60 83 f2 c0 	move s27, s5
   45fdc:	40 03 f3 c0 	move s26, s6
   45fe0:	49 20 ff f9 	call -229084 <I_Error>
   45fe4:	1e a1 01 a8 	load_32 s8, 104(sp)
   45fe8:	c0 00 fd c0 	move s6, s26
   45fec:	a0 80 fd c0 	move s5, s27
   45ff0:	46 00 5c c0 	add_i s2, s6, s24
   45ff4:	65 83 5c c0 	add_i s27, s5, s25
   45ff8:	00 0c 00 4f 	movehi s0, 96
   45ffc:	5e 80 01 88 	store_32 s2, 96(sp)
   46000:	de 40 01 88 	store_32 s6, 80(sp)
   46004:	be 50 01 88 	store_32 s5, 84(sp)
   46008:	40 e3 01 00 	or s26, s0, 120
   4600c:	00 00 fd c0 	move s0, s26
   46010:	20 80 f2 c0 	move s1, s5
   46014:	40 00 f3 c0 	move s2, s6
   46018:	b1 57 ff f9 	call -172348 <M_AddToBox>
   4601c:	1e 80 01 a8 	load_32 s0, 96(sp)
   46020:	3b fc ff 05 	add_i s1, s27, -1
   46024:	40 fc ff 05 	add_i s2, s0, -1
   46028:	00 00 fd c0 	move s0, s26
   4602c:	ac 57 ff f9 	call -172368 <M_AddToBox>
   46030:	18 04 00 14 	cmplt_i s0, s24, 1
   46034:	c0 03 00 f4 	bnz s0, 120 <V_CopyRect+0x184>
   46038:	00 0c 00 4f 	movehi s0, 96
   4603c:	3e 70 01 a8 	load_32 s1, 92(sp)
   46040:	5e 60 01 a8 	load_32 s2, 88(sp)
   46044:	00 20 02 00 	or s0, s0, 136
   46048:	21 08 00 0b 	shl s1, s1, 2
   4604c:	42 08 00 0b 	shl s2, s2, 2
   46050:	20 80 50 c0 	add_i s1, s0, s1
   46054:	00 00 51 c0 	add_i s0, s0, s2
   46058:	21 00 00 a8 	load_32 s1, (s1)
   4605c:	00 00 00 a8 	load_32 s0, (s0)
   46060:	5e 40 01 a8 	load_32 s2, 80(sp)
   46064:	42 00 05 07 	mull_i s2, s2, 320
   46068:	21 00 51 c0 	add_i s1, s1, s2
   4606c:	5e 90 01 a8 	load_32 s2, 100(sp)
   46070:	42 00 05 07 	mull_i s2, s2, 320
   46074:	00 00 51 c0 	add_i s0, s0, s2
   46078:	5e 50 01 a8 	load_32 s2, 84(sp)
   4607c:	41 03 51 c0 	add_i s26, s1, s2
   46080:	3e a0 01 a8 	load_32 s1, 104(sp)
   46084:	60 83 50 c0 	add_i s27, s0, s1
   46088:	00 00 fd c0 	move s0, s26
   4608c:	20 80 fd c0 	move s1, s27
   46090:	40 80 fc c0 	move s2, s25
   46094:	1c 2f 00 f8 	call 48240 <memcpy>
   46098:	18 ff ff 05 	add_i s24, s24, -1
   4609c:	7b 03 05 05 	add_i s27, s27, 320
   460a0:	5a 03 05 05 	add_i s26, s26, 320
   460a4:	18 00 00 12 	cmpgt_i s0, s24, 0
   460a8:	00 ff ff f5 	bnz s0, -32 <V_CopyRect+0x160>
   460ac:	fe b3 01 a8 	load_32 ra, 108(sp)
   460b0:	7e c3 01 a8 	load_32 s27, 112(sp)
   460b4:	5e d3 01 a8 	load_32 s26, 116(sp)
   460b8:	3e e3 01 a8 	load_32 s25, 120(sp)
   460bc:	1e f3 01 a8 	load_32 s24, 124(sp)
   460c0:	de 03 02 05 	add_i sp, sp, 128
   460c4:	1f 00 00 f0 	ret

00000000000460c8 V_DrawPatch:
   460c8:	de 03 fe 05 	add_i sp, sp, -128
   460cc:	1e f3 01 88 	store_32 s24, 124(sp)
   460d0:	3e e3 01 88 	store_32 s25, 120(sp)
   460d4:	5e d3 01 88 	store_32 s26, 116(sp)
   460d8:	7e c3 01 88 	store_32 s27, 112(sp)
   460dc:	fe b3 01 88 	store_32 ra, 108(sp)
   460e0:	00 83 f1 c0 	move s24, s3
   460e4:	78 18 00 a6 	load_s16 s3, 6(s24)
   460e8:	98 10 00 a6 	load_s16 s4, 4(s24)
   460ec:	41 83 61 c0 	sub_i s26, s1, s3
   460f0:	20 03 62 c0 	sub_i s25, s0, s4
   460f4:	80 00 f1 c0 	move s4, s2
   460f8:	19 00 00 14 	cmplt_i s0, s25, 0
   460fc:	c0 09 00 f4 	bnz s0, 312 <V_DrawPatch+0x16c>
   46100:	18 00 00 a6 	load_s16 s0, (s24)
   46104:	3a 00 00 14 	cmplt_i s1, s26, 0
   46108:	61 09 00 f4 	bnz s1, 300 <V_DrawPatch+0x16c>
   4610c:	79 00 50 c0 	add_i s3, s25, s0
   46110:	23 00 05 12 	cmpgt_i s1, s3, 320
   46114:	01 09 00 f4 	bnz s1, 288 <V_DrawPatch+0x16c>
   46118:	38 08 00 a6 	load_s16 s1, 2(s24)
   4611c:	44 10 00 16 	cmpgt_u s2, s4, 4
   46120:	a2 08 00 f4 	bnz s2, 276 <V_DrawPatch+0x16c>
   46124:	7a 83 50 c0 	add_i s27, s26, s1
   46128:	3b 24 03 14 	cmplt_i s1, s27, 201
   4612c:	41 00 00 f4 	bnz s1, 8 <V_DrawPatch+0x6c>
   46130:	41 00 00 f6 	b 260 <V_DrawPatch+0x16c>
   46134:	44 00 00 f4 	bnz s4, 8 <V_DrawPatch+0x74>
   46138:	04 00 00 f6 	b 16 <V_DrawPatch+0x80>
   4613c:	20 04 00 14 	cmplt_i s1, s0, 1
   46140:	a1 09 00 f4 	bnz s1, 308 <V_DrawPatch+0x1ac>
   46144:	12 00 00 f6 	b 72 <V_DrawPatch+0xc4>
   46148:	00 0c 00 4f 	movehi s0, 96
   4614c:	00 e0 01 00 	or s0, s0, 120
   46150:	1e 90 01 88 	store_32 s0, 100(sp)
   46154:	20 80 fc c0 	move s1, s25
   46158:	40 00 fd c0 	move s2, s26
   4615c:	9e a0 01 88 	store_32 s4, 104(sp)
   46160:	7e 80 01 88 	store_32 s3, 96(sp)
   46164:	5e 57 ff f9 	call -172680 <M_AddToBox>
   46168:	1e 80 01 a8 	load_32 s0, 96(sp)
   4616c:	5b fc ff 05 	add_i s2, s27, -1
   46170:	20 fc ff 05 	add_i s1, s0, -1
   46174:	1e 90 01 a8 	load_32 s0, 100(sp)
   46178:	59 57 ff f9 	call -172700 <M_AddToBox>
   4617c:	9e a0 01 a8 	load_32 s4, 104(sp)
   46180:	18 00 00 a6 	load_s16 s0, (s24)
   46184:	20 04 00 14 	cmplt_i s1, s0, 1
   46188:	61 07 00 f4 	bnz s1, 236 <V_DrawPatch+0x1ac>
   4618c:	20 0c 00 4f 	movehi s1, 96
   46190:	44 08 00 0b 	shl s2, s4, 2
   46194:	21 20 02 00 	or s1, s1, 136
   46198:	21 00 51 c0 	add_i s1, s1, s2
   4619c:	5a 00 05 07 	mull_i s2, s26, 320
   461a0:	21 00 00 a8 	load_32 s1, (s1)
   461a4:	41 00 51 c0 	add_i s2, s1, s2
   461a8:	20 00 00 0f 	move s1, 0
   461ac:	42 80 5c c0 	add_i s2, s2, s25
   461b0:	60 80 f0 c0 	move s3, s1
   461b4:	83 08 00 0b 	shl s4, s3, 2
   461b8:	98 00 52 c0 	add_i s4, s24, s4
   461bc:	84 20 00 a8 	load_32 s4, 8(s4)
   461c0:	98 00 52 c0 	add_i s4, s24, s4
   461c4:	c4 00 00 a0 	load_u8 s6, (s4)
   461c8:	a6 fc 03 10 	cmpeq_i s5, s6, 255
   461cc:	a5 02 00 f4 	bnz s5, 84 <V_DrawPatch+0x158>
   461d0:	a4 04 00 a0 	load_u8 s5, 1(s4)
   461d4:	e0 80 f0 c0 	move s7, s1
   461d8:	85 01 00 f2 	bz s5, 48 <V_DrawPatch+0x140>
   461dc:	c6 fc 03 01 	and s6, s6, 255
   461e0:	e4 0c 00 05 	add_i s7, s4, 3
   461e4:	c6 00 05 07 	mull_i s6, s6, 320
   461e8:	c2 00 53 c0 	add_i s6, s2, s6
   461ec:	07 01 00 a0 	load_u8 s8, (s7)
   461f0:	a5 fc ff 05 	add_i s5, s5, -1
   461f4:	06 01 00 82 	store_8 s8, (s6)
   461f8:	e7 04 00 05 	add_i s7, s7, 1
   461fc:	c6 00 05 05 	add_i s6, s6, 320
   46200:	65 ff ff f5 	bnz s5, -20 <V_DrawPatch+0x124>
   46204:	e4 04 00 a0 	load_u8 s7, 1(s4)
   46208:	a7 fc 03 01 	and s5, s7, 255
   4620c:	84 80 52 c0 	add_i s4, s4, s5
   46210:	c4 10 00 a0 	load_u8 s6, 4(s4)
   46214:	84 10 00 05 	add_i s4, s4, 4
   46218:	a6 fc 03 11 	cmpne_i s5, s6, 255
   4621c:	a5 fd ff f5 	bnz s5, -76 <V_DrawPatch+0x108>
   46220:	63 04 00 05 	add_i s3, s3, 1
   46224:	42 04 00 05 	add_i s2, s2, 1
   46228:	83 00 40 c1 	cmplt_i s4, s3, s0
   4622c:	44 fc ff f5 	bnz s4, -120 <V_DrawPatch+0xec>
   46230:	11 00 00 f6 	b 68 <V_DrawPatch+0x1ac>
   46234:	1a 04 00 4f 	movehi s0, 58
   46238:	21 00 00 4f 	movehi s1, 1
   4623c:	00 93 16 00 	or s24, s0, 1444
   46240:	21 18 57 00 	or s1, s1, 5574
   46244:	18 00 00 a8 	load_32 s0, (s24)
   46248:	5e 33 00 88 	store_32 s26, 12(sp)
   4624c:	3e 23 00 88 	store_32 s25, 8(sp)
   46250:	3e 10 00 88 	store_32 s1, 4(sp)
   46254:	1e 00 00 88 	store_32 s0, (sp)
   46258:	b9 30 00 f8 	call 49892 <fprintf>
   4625c:	03 00 00 4f 	movehi s0, 3
   46260:	78 00 00 a8 	load_32 s3, (s24)
   46264:	20 84 00 0f 	move s1, 33
   46268:	40 04 00 0f 	move s2, 1
   4626c:	00 60 0c 00 	or s0, s0, 792
   46270:	42 30 00 f8 	call 49416 <fwrite>
   46274:	fe b3 01 a8 	load_32 ra, 108(sp)
   46278:	7e c3 01 a8 	load_32 s27, 112(sp)
   4627c:	5e d3 01 a8 	load_32 s26, 116(sp)
   46280:	3e e3 01 a8 	load_32 s25, 120(sp)
   46284:	1e f3 01 a8 	load_32 s24, 124(sp)
   46288:	de 03 02 05 	add_i sp, sp, 128
   4628c:	1f 00 00 f0 	ret

0000000000046290 V_DrawPatchFlipped:
   46290:	de 03 fe 05 	add_i sp, sp, -128
   46294:	1e f3 01 88 	store_32 s24, 124(sp)
   46298:	3e e3 01 88 	store_32 s25, 120(sp)
   4629c:	5e d3 01 88 	store_32 s26, 116(sp)
   462a0:	7e c3 01 88 	store_32 s27, 112(sp)
   462a4:	fe b3 01 88 	store_32 ra, 108(sp)
   462a8:	00 83 f1 c0 	move s24, s3
   462ac:	78 18 00 a6 	load_s16 s3, 6(s24)
   462b0:	98 10 00 a6 	load_s16 s4, 4(s24)
   462b4:	60 03 f1 c0 	move s27, s2
   462b8:	41 83 61 c0 	sub_i s26, s1, s3
   462bc:	20 03 62 c0 	sub_i s25, s0, s4
   462c0:	19 00 00 14 	cmplt_i s0, s25, 0
   462c4:	80 02 00 f4 	bnz s0, 80 <V_DrawPatchFlipped+0x84>
   462c8:	18 00 00 a6 	load_s16 s0, (s24)
   462cc:	3a 00 00 14 	cmplt_i s1, s26, 0
   462d0:	21 02 00 f4 	bnz s1, 68 <V_DrawPatchFlipped+0x84>
   462d4:	19 00 50 c0 	add_i s0, s25, s0
   462d8:	00 00 05 12 	cmpgt_i s0, s0, 320
   462dc:	c0 01 00 f4 	bnz s0, 56 <V_DrawPatchFlipped+0x84>
   462e0:	18 08 00 a6 	load_s16 s0, 2(s24)
   462e4:	3b 10 00 16 	cmpgt_u s1, s27, 4
   462e8:	61 01 00 f4 	bnz s1, 44 <V_DrawPatchFlipped+0x84>
   462ec:	1a 00 50 c0 	add_i s0, s26, s0
   462f0:	00 24 03 14 	cmplt_i s0, s0, 201
   462f4:	40 00 00 f4 	bnz s0, 8 <V_DrawPatchFlipped+0x6c>
   462f8:	07 00 00 f6 	b 28 <V_DrawPatchFlipped+0x84>
   462fc:	5b 00 00 f4 	bnz s27, 8 <V_DrawPatchFlipped+0x74>
   46300:	14 00 00 f6 	b 80 <V_DrawPatchFlipped+0xc0>
   46304:	18 00 00 a6 	load_s16 s0, (s24)
   46308:	20 04 00 14 	cmplt_i s1, s0, 1
   4630c:	21 0a 00 f4 	bnz s1, 324 <V_DrawPatchFlipped+0x1c0>
   46310:	25 00 00 f6 	b 148 <V_DrawPatchFlipped+0x114>
   46314:	1a 04 00 4f 	movehi s0, 58
   46318:	20 00 00 4f 	movehi s1, 0
   4631c:	00 90 16 00 	or s0, s0, 1444
   46320:	21 68 56 00 	or s1, s1, 5530
   46324:	00 00 00 a8 	load_32 s0, (s0)
   46328:	5e 33 00 88 	store_32 s26, 12(sp)
   4632c:	3e 23 00 88 	store_32 s25, 8(sp)
   46330:	3e 10 00 88 	store_32 s1, 4(sp)
   46334:	1e 00 00 88 	store_32 s0, (sp)
   46338:	81 30 00 f8 	call 49668 <fprintf>
   4633c:	01 00 00 4f 	movehi s0, 1
   46340:	00 88 57 00 	or s0, s0, 5602
   46344:	1e 00 00 88 	store_32 s0, (sp)
   46348:	6f 1f ff f9 	call -229956 <I_Error>
   4634c:	db fd ff f5 	bnz s27, -72 <V_DrawPatchFlipped+0x74>
   46350:	18 00 00 a6 	load_s16 s0, (s24)
   46354:	1e 90 01 88 	store_32 s0, 100(sp)
   46358:	18 08 00 a6 	load_s16 s0, 2(s24)
   4635c:	1e a0 01 88 	store_32 s0, 104(sp)
   46360:	00 0c 00 4f 	movehi s0, 96
   46364:	00 e0 01 00 	or s0, s0, 120
   46368:	1e 80 01 88 	store_32 s0, 96(sp)
   4636c:	20 80 fc c0 	move s1, s25
   46370:	40 00 fd c0 	move s2, s26
   46374:	da 56 ff f9 	call -173208 <M_AddToBox>
   46378:	1e 90 01 a8 	load_32 s0, 100(sp)
   4637c:	3e a0 01 a8 	load_32 s1, 104(sp)
   46380:	19 00 50 c0 	add_i s0, s25, s0
   46384:	5a 80 50 c0 	add_i s2, s26, s1
   46388:	20 fc ff 05 	add_i s1, s0, -1
   4638c:	1e 80 01 a8 	load_32 s0, 96(sp)
   46390:	42 fc ff 05 	add_i s2, s2, -1
   46394:	d2 56 ff f9 	call -173240 <M_AddToBox>
   46398:	18 00 00 a6 	load_s16 s0, (s24)
   4639c:	20 04 00 14 	cmplt_i s1, s0, 1
   463a0:	81 05 00 f4 	bnz s1, 176 <V_DrawPatchFlipped+0x1c0>
   463a4:	20 0c 00 4f 	movehi s1, 96
   463a8:	5b 08 00 0b 	shl s2, s27, 2
   463ac:	21 20 02 00 	or s1, s1, 136
   463b0:	21 00 51 c0 	add_i s1, s1, s2
   463b4:	5a 00 05 07 	mull_i s2, s26, 320
   463b8:	21 00 00 a8 	load_32 s1, (s1)
   463bc:	41 00 51 c0 	add_i s2, s1, s2
   463c0:	20 00 00 0f 	move s1, 0
   463c4:	42 80 5c c0 	add_i s2, s2, s25
   463c8:	60 80 f0 c0 	move s3, s1
   463cc:	83 fc ff 03 	xor s4, s3, -1
   463d0:	84 00 50 c0 	add_i s4, s4, s0
   463d4:	84 08 00 0b 	shl s4, s4, 2
   463d8:	98 00 52 c0 	add_i s4, s24, s4
   463dc:	84 20 00 a8 	load_32 s4, 8(s4)
   463e0:	98 00 52 c0 	add_i s4, s24, s4
   463e4:	c4 00 00 a0 	load_u8 s6, (s4)
   463e8:	a6 fc 03 10 	cmpeq_i s5, s6, 255
   463ec:	a5 02 00 f4 	bnz s5, 84 <V_DrawPatchFlipped+0x1b0>
   463f0:	a4 04 00 a0 	load_u8 s5, 1(s4)
   463f4:	e0 80 f0 c0 	move s7, s1
   463f8:	85 01 00 f2 	bz s5, 48 <V_DrawPatchFlipped+0x198>
   463fc:	c6 fc 03 01 	and s6, s6, 255
   46400:	e4 0c 00 05 	add_i s7, s4, 3
   46404:	c6 00 05 07 	mull_i s6, s6, 320
   46408:	c2 00 53 c0 	add_i s6, s2, s6
   4640c:	07 01 00 a0 	load_u8 s8, (s7)
   46410:	a5 fc ff 05 	add_i s5, s5, -1
   46414:	06 01 00 82 	store_8 s8, (s6)
   46418:	e7 04 00 05 	add_i s7, s7, 1
   4641c:	c6 00 05 05 	add_i s6, s6, 320
   46420:	65 ff ff f5 	bnz s5, -20 <V_DrawPatchFlipped+0x17c>
   46424:	e4 04 00 a0 	load_u8 s7, 1(s4)
   46428:	a7 fc 03 01 	and s5, s7, 255
   4642c:	84 80 52 c0 	add_i s4, s4, s5
   46430:	c4 10 00 a0 	load_u8 s6, 4(s4)
   46434:	84 10 00 05 	add_i s4, s4, 4
   46438:	a6 fc 03 11 	cmpne_i s5, s6, 255
   4643c:	a5 fd ff f5 	bnz s5, -76 <V_DrawPatchFlipped+0x160>
   46440:	63 04 00 05 	add_i s3, s3, 1
   46444:	42 04 00 05 	add_i s2, s2, 1
   46448:	83 00 40 c1 	cmplt_i s4, s3, s0
   4644c:	04 fc ff f5 	bnz s4, -128 <V_DrawPatchFlipped+0x13c>
   46450:	fe b3 01 a8 	load_32 ra, 108(sp)
   46454:	7e c3 01 a8 	load_32 s27, 112(sp)
   46458:	5e d3 01 a8 	load_32 s26, 116(sp)
   4645c:	3e e3 01 a8 	load_32 s25, 120(sp)
   46460:	1e f3 01 a8 	load_32 s24, 124(sp)
   46464:	de 03 02 05 	add_i sp, sp, 128
   46468:	1f 00 00 f0 	ret

000000000004646c V_DrawPatchDirect:
   4646c:	de 03 ff 05 	add_i sp, sp, -64
   46470:	fe f3 00 88 	store_32 ra, 60(sp)
   46474:	15 ff ff f9 	call -940 <V_DrawPatch>
   46478:	fe f3 00 a8 	load_32 ra, 60(sp)
   4647c:	de 03 01 05 	add_i sp, sp, 64
   46480:	1f 00 00 f0 	ret

0000000000046484 V_DrawBlock:
   46484:	de 03 fe 05 	add_i sp, sp, -128
   46488:	1e f3 01 88 	store_32 s24, 124(sp)
   4648c:	3e e3 01 88 	store_32 s25, 120(sp)
   46490:	5e d3 01 88 	store_32 s26, 116(sp)
   46494:	7e c3 01 88 	store_32 s27, 112(sp)
   46498:	fe b3 01 88 	store_32 ra, 108(sp)
   4649c:	00 83 f2 c0 	move s24, s5
   464a0:	20 03 f2 c0 	move s25, s4
   464a4:	40 83 f1 c0 	move s26, s3
   464a8:	5e 70 01 88 	store_32 s2, 92(sp)
   464ac:	40 80 f0 c0 	move s2, s1
   464b0:	20 00 f0 c0 	move s1, s0
   464b4:	7a 80 50 c0 	add_i s3, s26, s1
   464b8:	7e a0 01 88 	store_32 s3, 104(sp)
   464bc:	3e 90 01 88 	store_32 s1, 100(sp)
   464c0:	01 00 00 14 	cmplt_i s0, s1, 0
   464c4:	80 01 00 f4 	bnz s0, 48 <V_DrawBlock+0x70>
   464c8:	02 00 00 14 	cmplt_i s0, s2, 0
   464cc:	40 01 00 f4 	bnz s0, 40 <V_DrawBlock+0x70>
   464d0:	1e a0 01 a8 	load_32 s0, 104(sp)
   464d4:	00 00 05 12 	cmpgt_i s0, s0, 320
   464d8:	e0 00 00 f4 	bnz s0, 28 <V_DrawBlock+0x70>
   464dc:	1e 70 01 a8 	load_32 s0, 92(sp)
   464e0:	00 10 00 16 	cmpgt_u s0, s0, 4
   464e4:	80 00 00 f4 	bnz s0, 16 <V_DrawBlock+0x70>
   464e8:	79 00 51 c0 	add_i s3, s25, s2
   464ec:	03 24 03 14 	cmplt_i s0, s3, 201
   464f0:	20 01 00 f4 	bnz s0, 36 <V_DrawBlock+0x90>
   464f4:	02 00 00 4f 	movehi s0, 2
   464f8:	00 a0 25 00 	or s0, s0, 2408
   464fc:	1e 00 00 88 	store_32 s0, (sp)
   46500:	60 03 f1 c0 	move s27, s2
   46504:	00 1f ff f9 	call -230400 <I_Error>
   46508:	40 80 fd c0 	move s2, s27
   4650c:	3e 90 01 a8 	load_32 s1, 100(sp)
   46510:	79 00 51 c0 	add_i s3, s25, s2
   46514:	00 0c 00 4f 	movehi s0, 96
   46518:	7e 80 01 88 	store_32 s3, 96(sp)
   4651c:	60 e3 01 00 	or s27, s0, 120
   46520:	00 80 fd c0 	move s0, s27
   46524:	5e 60 01 88 	store_32 s2, 88(sp)
   46528:	6d 56 ff f9 	call -173644 <M_AddToBox>
   4652c:	1e a0 01 a8 	load_32 s0, 104(sp)
   46530:	20 fc ff 05 	add_i s1, s0, -1
   46534:	1e 80 01 a8 	load_32 s0, 96(sp)
   46538:	40 fc ff 05 	add_i s2, s0, -1
   4653c:	00 80 fd c0 	move s0, s27
   46540:	67 56 ff f9 	call -173668 <M_AddToBox>
   46544:	99 02 00 f2 	bz s25, 80 <V_DrawBlock+0x110>
   46548:	00 0c 00 4f 	movehi s0, 96
   4654c:	3e 70 01 a8 	load_32 s1, 92(sp)
   46550:	00 20 02 00 	or s0, s0, 136
   46554:	21 08 00 0b 	shl s1, s1, 2
   46558:	00 80 50 c0 	add_i s0, s0, s1
   4655c:	00 00 00 a8 	load_32 s0, (s0)
   46560:	3e 60 01 a8 	load_32 s1, 88(sp)
   46564:	21 00 05 07 	mull_i s1, s1, 320
   46568:	00 80 50 c0 	add_i s0, s0, s1
   4656c:	3e 90 01 a8 	load_32 s1, 100(sp)
   46570:	60 83 50 c0 	add_i s27, s0, s1
   46574:	00 80 fd c0 	move s0, s27
   46578:	20 00 fc c0 	move s1, s24
   4657c:	40 00 fd c0 	move s2, s26
   46580:	39 ff ff 05 	add_i s25, s25, -1
   46584:	e0 2d 00 f8 	call 46976 <memcpy>
   46588:	18 03 5d c0 	add_i s24, s24, s26
   4658c:	7b 03 05 05 	add_i s27, s27, 320
   46590:	39 ff ff f5 	bnz s25, -28 <V_DrawBlock+0xf0>
   46594:	fe b3 01 a8 	load_32 ra, 108(sp)
   46598:	7e c3 01 a8 	load_32 s27, 112(sp)
   4659c:	5e d3 01 a8 	load_32 s26, 116(sp)
   465a0:	3e e3 01 a8 	load_32 s25, 120(sp)
   465a4:	1e f3 01 a8 	load_32 s24, 124(sp)
   465a8:	de 03 02 05 	add_i sp, sp, 128
   465ac:	1f 00 00 f0 	ret

00000000000465b0 V_GetBlock:
   465b0:	de 03 fe 05 	add_i sp, sp, -128
   465b4:	1e f3 01 88 	store_32 s24, 124(sp)
   465b8:	3e e3 01 88 	store_32 s25, 120(sp)
   465bc:	5e d3 01 88 	store_32 s26, 116(sp)
   465c0:	7e c3 01 88 	store_32 s27, 112(sp)
   465c4:	fe b3 01 88 	store_32 ra, 108(sp)
   465c8:	60 03 f0 c0 	move s27, s0
   465cc:	00 83 f2 c0 	move s24, s5
   465d0:	20 03 f2 c0 	move s25, s4
   465d4:	1b 00 00 14 	cmplt_i s0, s27, 0
   465d8:	40 83 f1 c0 	move s26, s3
   465dc:	60 01 00 f4 	bnz s0, 44 <V_GetBlock+0x58>
   465e0:	01 00 00 14 	cmplt_i s0, s1, 0
   465e4:	20 01 00 f4 	bnz s0, 36 <V_GetBlock+0x58>
   465e8:	1a 80 5d c0 	add_i s0, s26, s27
   465ec:	00 00 05 12 	cmpgt_i s0, s0, 320
   465f0:	c0 00 00 f4 	bnz s0, 24 <V_GetBlock+0x58>
   465f4:	02 10 00 16 	cmpgt_u s0, s2, 4
   465f8:	80 00 00 f4 	bnz s0, 16 <V_GetBlock+0x58>
   465fc:	19 80 50 c0 	add_i s0, s25, s1
   46600:	00 24 03 14 	cmplt_i s0, s0, 201
   46604:	20 01 00 f4 	bnz s0, 36 <V_GetBlock+0x78>
   46608:	02 00 00 4f 	movehi s0, 2
   4660c:	00 a0 25 00 	or s0, s0, 2408
   46610:	1e 00 00 88 	store_32 s0, (sp)
   46614:	3e a0 01 88 	store_32 s1, 104(sp)
   46618:	5e 90 01 88 	store_32 s2, 100(sp)
   4661c:	ba 1e ff f9 	call -230680 <I_Error>
   46620:	5e 90 01 a8 	load_32 s2, 100(sp)
   46624:	3e a0 01 a8 	load_32 s1, 104(sp)
   46628:	39 02 00 f2 	bz s25, 68 <V_GetBlock+0xbc>
   4662c:	00 0c 00 4f 	movehi s0, 96
   46630:	42 08 00 0b 	shl s2, s2, 2
   46634:	21 00 05 07 	mull_i s1, s1, 320
   46638:	00 20 02 00 	or s0, s0, 136
   4663c:	00 00 51 c0 	add_i s0, s0, s2
   46640:	00 00 00 a8 	load_32 s0, (s0)
   46644:	00 80 50 c0 	add_i s0, s0, s1
   46648:	60 83 5d c0 	add_i s27, s0, s27
   4664c:	00 00 fc c0 	move s0, s24
   46650:	20 80 fd c0 	move s1, s27
   46654:	40 00 fd c0 	move s2, s26
   46658:	39 ff ff 05 	add_i s25, s25, -1
   4665c:	aa 2d 00 f8 	call 46760 <memcpy>
   46660:	7b 03 05 05 	add_i s27, s27, 320
   46664:	18 03 5d c0 	add_i s24, s24, s26
   46668:	39 ff ff f5 	bnz s25, -28 <V_GetBlock+0x9c>
   4666c:	fe b3 01 a8 	load_32 ra, 108(sp)
   46670:	7e c3 01 a8 	load_32 s27, 112(sp)
   46674:	5e d3 01 a8 	load_32 s26, 116(sp)
   46678:	3e e3 01 a8 	load_32 s25, 120(sp)
   4667c:	1e f3 01 a8 	load_32 s24, 124(sp)
   46680:	de 03 02 05 	add_i sp, sp, 128
   46684:	1f 00 00 f0 	ret

0000000000046688 V_Init:
   46688:	de 03 ff 05 	add_i sp, sp, -64
   4668c:	fe f3 00 88 	store_32 ra, 60(sp)
   46690:	1f 00 00 4f 	movehi s0, 31
   46694:	00 00 20 00 	or s0, s0, 2048
   46698:	8b 1e ff f9 	call -230868 <I_AllocLow>
   4669c:	20 0c 00 4f 	movehi s1, 96
   466a0:	47 00 00 4f 	movehi s2, 7
   466a4:	6f 00 00 4f 	movehi s3, 15
   466a8:	21 20 02 00 	or s1, s1, 136
   466ac:	42 00 68 00 	or s2, s2, 6656
   466b0:	40 00 51 c0 	add_i s2, s0, s2
   466b4:	01 00 00 88 	store_32 s0, (s1)
   466b8:	41 10 00 88 	store_32 s2, 4(s1)
   466bc:	43 00 50 00 	or s2, s3, 5120
   466c0:	77 00 00 4f 	movehi s3, 23
   466c4:	40 00 51 c0 	add_i s2, s0, s2
   466c8:	41 20 00 88 	store_32 s2, 8(s1)
   466cc:	43 00 38 00 	or s2, s3, 3584
   466d0:	00 00 51 c0 	add_i s0, s0, s2
   466d4:	01 30 00 88 	store_32 s0, 12(s1)
   466d8:	fe f3 00 a8 	load_32 ra, 60(sp)
   466dc:	de 03 01 05 	add_i sp, sp, 64
   466e0:	1f 00 00 f0 	ret

00000000000466e4 STlib_init:
   466e4:	de 03 ff 05 	add_i sp, sp, -64
   466e8:	fe f3 00 88 	store_32 ra, 60(sp)
   466ec:	02 00 00 4f 	movehi s0, 2
   466f0:	20 04 00 0f 	move s1, 1
   466f4:	00 18 63 00 	or s0, s0, 6342
   466f8:	14 e2 ff f9 	call -30640 <W_CacheLumpName>
   466fc:	20 0c 00 4f 	movehi s1, 96
   46700:	21 80 02 00 	or s1, s1, 160
   46704:	01 00 00 88 	store_32 s0, (s1)
   46708:	fe f3 00 a8 	load_32 ra, 60(sp)
   4670c:	de 03 01 05 	add_i sp, sp, 64
   46710:	1f 00 00 f0 	ret

0000000000046714 STlib_initNum:
   46714:	20 00 00 88 	store_32 s1, (s0)
   46718:	20 00 00 0f 	move s1, 0
   4671c:	40 10 00 88 	store_32 s2, 4(s0)
   46720:	20 30 00 88 	store_32 s1, 12(s0)
   46724:	c0 20 00 88 	store_32 s6, 8(s0)
   46728:	80 40 00 88 	store_32 s4, 16(s0)
   4672c:	a0 50 00 88 	store_32 s5, 20(s0)
   46730:	60 60 00 88 	store_32 s3, 24(s0)
   46734:	1f 00 00 f0 	ret

0000000000046738 STlib_drawNum:
   46738:	de 03 fe 05 	add_i sp, sp, -128
   4673c:	1e f3 01 88 	store_32 s24, 124(sp)
   46740:	3e e3 01 88 	store_32 s25, 120(sp)
   46744:	5e d3 01 88 	store_32 s26, 116(sp)
   46748:	7e c3 01 88 	store_32 s27, 112(sp)
   4674c:	fe b3 01 88 	store_32 ra, 108(sp)
   46750:	40 03 f0 c0 	move s26, s0
   46754:	7a 23 00 a8 	load_32 s27, 8(s26)
   46758:	1a 40 00 a8 	load_32 s0, 16(s26)
   4675c:	00 03 00 a8 	load_32 s24, (s0)
   46760:	1a 60 00 a8 	load_32 s0, 24(s26)
   46764:	58 fc ff 12 	cmpgt_i s2, s24, -1
   46768:	00 00 00 a8 	load_32 s0, (s0)
   4676c:	20 00 00 a6 	load_s16 s1, (s0)
   46770:	3e a0 01 88 	store_32 s1, 104(sp)
   46774:	80 08 00 a6 	load_s16 s4, 2(s0)
   46778:	1a 33 00 88 	store_32 s24, 12(s26)
   4677c:	5e 60 01 88 	store_32 s2, 88(sp)
   46780:	82 02 00 f4 	bnz s2, 80 <STlib_drawNum+0x98>
   46784:	1b 08 00 11 	cmpne_i s0, s27, 2
   46788:	c0 00 00 f4 	bnz s0, 24 <STlib_drawNum+0x68>
   4678c:	18 dc ff 14 	cmplt_i s0, s24, -9
   46790:	40 00 00 f4 	bnz s0, 8 <STlib_drawNum+0x60>
   46794:	03 00 00 f6 	b 12 <STlib_drawNum+0x68>
   46798:	00 27 00 0f 	move s24, 9
   4679c:	0d 00 00 f6 	b 52 <STlib_drawNum+0x98>
   467a0:	00 00 00 0f 	move s0, 0
   467a4:	38 74 fe 14 	cmplt_i s1, s24, -99
   467a8:	00 00 6c c0 	sub_i s0, s0, s24
   467ac:	a1 00 00 f4 	bnz s1, 20 <STlib_drawNum+0x88>
   467b0:	00 03 f0 c0 	move s24, s0
   467b4:	3b 0c 00 10 	cmpeq_i s1, s27, 3
   467b8:	c1 00 00 f4 	bnz s1, 24 <STlib_drawNum+0x98>
   467bc:	04 00 00 f6 	b 16 <STlib_drawNum+0x94>
   467c0:	00 8f 01 0f 	move s24, 99
   467c4:	3b 0c 00 10 	cmpeq_i s1, s27, 3
   467c8:	41 00 00 f4 	bnz s1, 8 <STlib_drawNum+0x98>
   467cc:	00 03 f0 c0 	move s24, s0
   467d0:	1a 00 00 a8 	load_32 s0, (s26)
   467d4:	da 10 00 a8 	load_32 s6, 4(s26)
   467d8:	3e a0 01 a8 	load_32 s1, 104(sp)
   467dc:	3b 83 70 c0 	mull_i s25, s27, s1
   467e0:	26 9c 02 12 	cmpgt_i s1, s6, 167
   467e4:	a0 80 6c c0 	sub_i s5, s0, s25
   467e8:	41 01 00 f4 	bnz s1, 40 <STlib_drawNum+0xd8>
   467ec:	01 00 00 4f 	movehi s0, 1
   467f0:	00 20 65 00 	or s0, s0, 6472
   467f4:	1e 00 00 88 	store_32 s0, (sp)
   467f8:	9e 90 01 88 	store_32 s4, 100(sp)
   467fc:	be 80 01 88 	store_32 s5, 96(sp)
   46800:	41 1e ff f9 	call -231164 <I_Error>
   46804:	be 80 01 a8 	load_32 s5, 96(sp)
   46808:	9e 90 01 a8 	load_32 s4, 100(sp)
   4680c:	da 10 00 a8 	load_32 s6, 4(s26)
   46810:	00 80 f2 c0 	move s0, s5
   46814:	26 60 fd 05 	add_i s1, s6, -168
   46818:	40 10 00 0f 	move s2, 4
   4681c:	e0 00 00 0f 	move s7, 0
   46820:	60 80 fc c0 	move s3, s25
   46824:	c1 fd ff f9 	call -2300 <V_CopyRect>
   46828:	18 28 1f 10 	cmpeq_i s0, s24, 1994
   4682c:	c0 06 00 f4 	bnz s0, 216 <STlib_drawNum+0x1cc>
   46830:	3a 03 00 a8 	load_32 s25, (s26)
   46834:	5e 93 01 88 	store_32 s26, 100(sp)
   46838:	58 00 00 f4 	bnz s24, 8 <STlib_drawNum+0x108>
   4683c:	21 00 00 f6 	b 132 <STlib_drawNum+0x188>
   46840:	f8 04 00 f2 	bz s24, 156 <STlib_drawNum+0x1a4>
   46844:	db 04 00 f2 	bz s27, 152 <STlib_drawNum+0x1a4>
   46848:	13 64 66 4f 	movehi s0, 209715
   4684c:	00 9c 19 00 	or s0, s0, 1639
   46850:	1e 80 01 88 	store_32 s0, 96(sp)
   46854:	00 00 00 0f 	move s0, 0
   46858:	1e 70 01 88 	store_32 s0, 92(sp)
   4685c:	40 03 fc c0 	move s26, s24
   46860:	1e 80 01 a8 	load_32 s0, 96(sp)
   46864:	1a 00 f0 c1 	mulh_i s0, s26, s0
   46868:	20 08 00 09 	ashr s1, s0, 2
   4686c:	00 7c 00 0a 	shr s0, s0, 31
   46870:	01 03 50 c0 	add_i s24, s1, s0
   46874:	1e 90 01 a8 	load_32 s0, 100(sp)
   46878:	58 28 00 07 	mull_i s2, s24, 10
   4687c:	20 10 00 a8 	load_32 s1, 4(s0)
   46880:	5a 00 61 c0 	sub_i s2, s26, s2
   46884:	00 60 00 a8 	load_32 s0, 24(s0)
   46888:	42 08 00 0b 	shl s2, s2, 2
   4688c:	00 00 51 c0 	add_i s0, s0, s2
   46890:	5e a0 01 a8 	load_32 s2, 104(sp)
   46894:	60 00 00 a8 	load_32 s3, (s0)
   46898:	39 03 61 c0 	sub_i s25, s25, s2
   4689c:	00 80 fc c0 	move s0, s25
   468a0:	5e 70 01 a8 	load_32 s2, 92(sp)
   468a4:	09 fe ff f9 	call -2012 <V_DrawPatch>
   468a8:	1a 24 00 05 	add_i s0, s26, 9
   468ac:	00 4c 00 18 	cmplt_u s0, s0, 19
   468b0:	60 01 00 f4 	bnz s0, 44 <STlib_drawNum+0x1a4>
   468b4:	7b ff ff 05 	add_i s27, s27, -1
   468b8:	3b fd ff f5 	bnz s27, -92 <STlib_drawNum+0x124>
   468bc:	08 00 00 f6 	b 32 <STlib_drawNum+0x1a4>
   468c0:	3a 10 00 a8 	load_32 s1, 4(s26)
   468c4:	5a 60 00 a8 	load_32 s2, 24(s26)
   468c8:	1e a0 01 a8 	load_32 s0, 104(sp)
   468cc:	62 00 00 a8 	load_32 s3, (s2)
   468d0:	40 00 00 0f 	move s2, 0
   468d4:	19 00 60 c0 	sub_i s0, s25, s0
   468d8:	fc fd ff f9 	call -2064 <V_DrawPatch>
   468dc:	3e 90 01 a8 	load_32 s1, 100(sp)
   468e0:	1e 60 01 a8 	load_32 s0, 88(sp)
   468e4:	00 01 00 f4 	bnz s0, 32 <STlib_drawNum+0x1cc>
   468e8:	00 0c 00 4f 	movehi s0, 96
   468ec:	21 10 00 a8 	load_32 s1, 4(s1)
   468f0:	40 80 02 00 	or s2, s0, 160
   468f4:	19 e0 ff 05 	add_i s0, s25, -8
   468f8:	62 00 00 a8 	load_32 s3, (s2)
   468fc:	40 00 00 0f 	move s2, 0
   46900:	f2 fd ff f9 	call -2104 <V_DrawPatch>
   46904:	fe b3 01 a8 	load_32 ra, 108(sp)
   46908:	7e c3 01 a8 	load_32 s27, 112(sp)
   4690c:	5e d3 01 a8 	load_32 s26, 116(sp)
   46910:	3e e3 01 a8 	load_32 s25, 120(sp)
   46914:	1e f3 01 a8 	load_32 s24, 124(sp)
   46918:	de 03 02 05 	add_i sp, sp, 128
   4691c:	1f 00 00 f0 	ret

0000000000046920 STlib_updateNum:
   46920:	de 03 ff 05 	add_i sp, sp, -64
   46924:	fe f3 00 88 	store_32 ra, 60(sp)
   46928:	20 50 00 a8 	load_32 s1, 20(s0)
   4692c:	21 00 00 a8 	load_32 s1, (s1)
   46930:	41 00 00 f2 	bz s1, 8 <STlib_updateNum+0x18>
   46934:	81 ff ff f9 	call -508 <STlib_drawNum>
   46938:	fe f3 00 a8 	load_32 ra, 60(sp)
   4693c:	de 03 01 05 	add_i sp, sp, 64
   46940:	1f 00 00 f0 	ret

0000000000046944 STlib_initPercent:
   46944:	20 00 00 88 	store_32 s1, (s0)
   46948:	20 00 00 0f 	move s1, 0
   4694c:	40 10 00 88 	store_32 s2, 4(s0)
   46950:	20 30 00 88 	store_32 s1, 12(s0)
   46954:	20 0c 00 0f 	move s1, 3
   46958:	20 20 00 88 	store_32 s1, 8(s0)
   4695c:	80 40 00 88 	store_32 s4, 16(s0)
   46960:	a0 50 00 88 	store_32 s5, 20(s0)
   46964:	60 60 00 88 	store_32 s3, 24(s0)
   46968:	c0 80 00 88 	store_32 s6, 32(s0)
   4696c:	1f 00 00 f0 	ret

0000000000046970 STlib_updatePercent:
   46970:	de 03 ff 05 	add_i sp, sp, -64
   46974:	1e f3 00 88 	store_32 s24, 60(sp)
   46978:	fe e3 00 88 	store_32 ra, 56(sp)
   4697c:	00 03 f0 c0 	move s24, s0
   46980:	21 01 00 f2 	bz s1, 36 <STlib_updatePercent+0x34>
   46984:	18 50 00 a8 	load_32 s0, 20(s24)
   46988:	00 00 00 a8 	load_32 s0, (s0)
   4698c:	c0 00 00 f2 	bz s0, 24 <STlib_updatePercent+0x34>
   46990:	18 00 00 a8 	load_32 s0, (s24)
   46994:	40 00 00 0f 	move s2, 0
   46998:	38 10 00 a8 	load_32 s1, 4(s24)
   4699c:	78 80 00 a8 	load_32 s3, 32(s24)
   469a0:	ca fd ff f9 	call -2264 <V_DrawPatch>
   469a4:	18 50 00 a8 	load_32 s0, 20(s24)
   469a8:	00 00 00 a8 	load_32 s0, (s0)
   469ac:	60 00 00 f2 	bz s0, 12 <STlib_updatePercent+0x48>
   469b0:	00 00 fc c0 	move s0, s24
   469b4:	61 ff ff f9 	call -636 <STlib_drawNum>
   469b8:	fe e3 00 a8 	load_32 ra, 56(sp)
   469bc:	1e f3 00 a8 	load_32 s24, 60(sp)
   469c0:	de 03 01 05 	add_i sp, sp, 64
   469c4:	1f 00 00 f0 	ret

00000000000469c8 STlib_initMultIcon:
   469c8:	20 00 00 88 	store_32 s1, (s0)
   469cc:	20 fc ff 0f 	move s1, -1
   469d0:	40 10 00 88 	store_32 s2, 4(s0)
   469d4:	20 20 00 88 	store_32 s1, 8(s0)
   469d8:	80 30 00 88 	store_32 s4, 12(s0)
   469dc:	a0 40 00 88 	store_32 s5, 16(s0)
   469e0:	60 50 00 88 	store_32 s3, 20(s0)
   469e4:	1f 00 00 f0 	ret

00000000000469e8 STlib_updateMultIcon:
   469e8:	de 03 fe 05 	add_i sp, sp, -128
   469ec:	1e f3 01 88 	store_32 s24, 124(sp)
   469f0:	3e e3 01 88 	store_32 s25, 120(sp)
   469f4:	5e d3 01 88 	store_32 s26, 116(sp)
   469f8:	7e c3 01 88 	store_32 s27, 112(sp)
   469fc:	fe b3 01 88 	store_32 ra, 108(sp)
   46a00:	00 03 f0 c0 	move s24, s0
   46a04:	18 40 00 a8 	load_32 s0, 16(s24)
   46a08:	00 00 00 a8 	load_32 s0, (s0)
   46a0c:	e0 06 00 f2 	bz s0, 220 <STlib_updateMultIcon+0x100>
   46a10:	18 20 00 a8 	load_32 s0, 8(s24)
   46a14:	58 30 00 a8 	load_32 s2, 12(s24)
   46a18:	42 00 00 a8 	load_32 s2, (s2)
   46a1c:	62 fc ff 10 	cmpeq_i s3, s2, -1
   46a20:	43 06 00 f4 	bnz s3, 200 <STlib_updateMultIcon+0x100>
   46a24:	21 00 00 10 	cmpeq_i s1, s1, 0
   46a28:	60 00 01 c1 	cmpeq_i s3, s0, s2
   46a2c:	21 80 11 c0 	and s1, s1, s3
   46a30:	c1 05 00 f4 	bnz s1, 184 <STlib_updateMultIcon+0x100>
   46a34:	20 fc ff 10 	cmpeq_i s1, s0, -1
   46a38:	21 04 00 f4 	bnz s1, 132 <STlib_updateMultIcon+0xd4>
   46a3c:	38 00 00 a8 	load_32 s1, (s24)
   46a40:	00 08 00 0b 	shl s0, s0, 2
   46a44:	58 50 00 a8 	load_32 s2, 20(s24)
   46a48:	02 00 50 c0 	add_i s0, s2, s0
   46a4c:	00 00 00 a8 	load_32 s0, (s0)
   46a50:	40 10 00 a6 	load_s16 s2, 4(s0)
   46a54:	78 10 00 a8 	load_32 s3, 4(s24)
   46a58:	80 18 00 a6 	load_s16 s4, 6(s0)
   46a5c:	41 03 61 c0 	sub_i s26, s1, s2
   46a60:	23 03 62 c0 	sub_i s25, s3, s4
   46a64:	60 00 00 a6 	load_s16 s3, (s0)
   46a68:	80 08 00 a6 	load_s16 s4, 2(s0)
   46a6c:	79 63 fd 05 	add_i s27, s25, -168
   46a70:	3b fc ff 12 	cmpgt_i s1, s27, -1
   46a74:	21 01 00 f4 	bnz s1, 36 <STlib_updateMultIcon+0xb0>
   46a78:	02 00 00 4f 	movehi s0, 2
   46a7c:	00 a4 76 00 	or s0, s0, 7593
   46a80:	1e 00 00 88 	store_32 s0, (sp)
   46a84:	7e a0 01 88 	store_32 s3, 104(sp)
   46a88:	9e 90 01 88 	store_32 s4, 100(sp)
   46a8c:	9e 1d ff f9 	call -231816 <I_Error>
   46a90:	9e 90 01 a8 	load_32 s4, 100(sp)
   46a94:	7e a0 01 a8 	load_32 s3, 104(sp)
   46a98:	00 00 fd c0 	move s0, s26
   46a9c:	20 80 fd c0 	move s1, s27
   46aa0:	a0 00 fd c0 	move s5, s26
   46aa4:	40 10 00 0f 	move s2, 4
   46aa8:	e0 00 00 0f 	move s7, 0
   46aac:	c0 80 fc c0 	move s6, s25
   46ab0:	1e fd ff f9 	call -2952 <V_CopyRect>
   46ab4:	18 30 00 a8 	load_32 s0, 12(s24)
   46ab8:	40 00 00 a8 	load_32 s2, (s0)
   46abc:	18 00 00 a8 	load_32 s0, (s24)
   46ac0:	42 08 00 0b 	shl s2, s2, 2
   46ac4:	38 10 00 a8 	load_32 s1, 4(s24)
   46ac8:	78 50 00 a8 	load_32 s3, 20(s24)
   46acc:	43 00 51 c0 	add_i s2, s3, s2
   46ad0:	62 00 00 a8 	load_32 s3, (s2)
   46ad4:	40 00 00 0f 	move s2, 0
   46ad8:	7c fd ff f9 	call -2576 <V_DrawPatch>
   46adc:	18 30 00 a8 	load_32 s0, 12(s24)
   46ae0:	00 00 00 a8 	load_32 s0, (s0)
   46ae4:	18 20 00 88 	store_32 s0, 8(s24)
   46ae8:	fe b3 01 a8 	load_32 ra, 108(sp)
   46aec:	7e c3 01 a8 	load_32 s27, 112(sp)
   46af0:	5e d3 01 a8 	load_32 s26, 116(sp)
   46af4:	3e e3 01 a8 	load_32 s25, 120(sp)
   46af8:	1e f3 01 a8 	load_32 s24, 124(sp)
   46afc:	de 03 02 05 	add_i sp, sp, 128
   46b00:	1f 00 00 f0 	ret

0000000000046b04 STlib_initBinIcon:
   46b04:	20 00 00 88 	store_32 s1, (s0)
   46b08:	20 00 00 0f 	move s1, 0
   46b0c:	40 10 00 88 	store_32 s2, 4(s0)
   46b10:	20 20 00 88 	store_32 s1, 8(s0)
   46b14:	80 30 00 88 	store_32 s4, 12(s0)
   46b18:	a0 40 00 88 	store_32 s5, 16(s0)
   46b1c:	60 50 00 88 	store_32 s3, 20(s0)
   46b20:	1f 00 00 f0 	ret

0000000000046b24 STlib_updateBinIcon:
   46b24:	de 03 fe 05 	add_i sp, sp, -128
   46b28:	1e f3 01 88 	store_32 s24, 124(sp)
   46b2c:	3e e3 01 88 	store_32 s25, 120(sp)
   46b30:	5e d3 01 88 	store_32 s26, 116(sp)
   46b34:	7e c3 01 88 	store_32 s27, 112(sp)
   46b38:	fe b3 01 88 	store_32 ra, 108(sp)
   46b3c:	00 03 f0 c0 	move s24, s0
   46b40:	18 40 00 a8 	load_32 s0, 16(s24)
   46b44:	00 00 00 a8 	load_32 s0, (s0)
   46b48:	60 06 00 f2 	bz s0, 204 <STlib_updateBinIcon+0xf0>
   46b4c:	58 20 00 a8 	load_32 s2, 8(s24)
   46b50:	18 30 00 a8 	load_32 s0, 12(s24)
   46b54:	00 00 00 a8 	load_32 s0, (s0)
   46b58:	61 00 00 f4 	bnz s1, 12 <STlib_updateBinIcon+0x40>
   46b5c:	22 00 00 c1 	cmpeq_i s1, s2, s0
   46b60:	a1 05 00 f4 	bnz s1, 180 <STlib_updateBinIcon+0xf0>
   46b64:	b8 00 00 a8 	load_32 s5, (s24)
   46b68:	38 50 00 a8 	load_32 s1, 20(s24)
   46b6c:	c1 10 00 a6 	load_s16 s6, 4(s1)
   46b70:	58 10 00 a8 	load_32 s2, 4(s24)
   46b74:	61 18 00 a6 	load_s16 s3, 6(s1)
   46b78:	61 03 00 a6 	load_s16 s27, (s1)
   46b7c:	81 08 00 a6 	load_s16 s4, 2(s1)
   46b80:	22 83 61 c0 	sub_i s25, s2, s3
   46b84:	59 63 fd 05 	add_i s26, s25, -168
   46b88:	5a fc ff 12 	cmpgt_i s2, s26, -1
   46b8c:	42 00 00 f4 	bnz s2, 8 <STlib_updateBinIcon+0x70>
   46b90:	08 00 00 f6 	b 32 <STlib_updateBinIcon+0x8c>
   46b94:	a0 02 00 f2 	bz s0, 84 <STlib_updateBinIcon+0xc4>
   46b98:	18 00 00 a8 	load_32 s0, (s24)
   46b9c:	40 00 00 0f 	move s2, 0
   46ba0:	38 10 00 a8 	load_32 s1, 4(s24)
   46ba4:	78 50 00 a8 	load_32 s3, 20(s24)
   46ba8:	48 fd ff f9 	call -2784 <V_DrawPatch>
   46bac:	17 00 00 f6 	b 92 <STlib_updateBinIcon+0xe4>
   46bb0:	02 00 00 4f 	movehi s0, 2
   46bb4:	00 8c 07 00 	or s0, s0, 483
   46bb8:	1e 00 00 88 	store_32 s0, (sp)
   46bbc:	be a0 01 88 	store_32 s5, 104(sp)
   46bc0:	9e 90 01 88 	store_32 s4, 100(sp)
   46bc4:	de 80 01 88 	store_32 s6, 96(sp)
   46bc8:	4f 1d ff f9 	call -232132 <I_Error>
   46bcc:	de 80 01 a8 	load_32 s6, 96(sp)
   46bd0:	9e 90 01 a8 	load_32 s4, 100(sp)
   46bd4:	be a0 01 a8 	load_32 s5, 104(sp)
   46bd8:	18 30 00 a8 	load_32 s0, 12(s24)
   46bdc:	00 00 00 a8 	load_32 s0, (s0)
   46be0:	40 00 00 f2 	bz s0, 8 <STlib_updateBinIcon+0xc4>
   46be4:	ed ff ff f7 	b -76 <STlib_updateBinIcon+0x74>
   46be8:	05 00 63 c0 	sub_i s0, s5, s6
   46bec:	20 00 fd c0 	move s1, s26
   46bf0:	60 80 fd c0 	move s3, s27
   46bf4:	a0 00 f0 c0 	move s5, s0
   46bf8:	40 10 00 0f 	move s2, 4
   46bfc:	e0 00 00 0f 	move s7, 0
   46c00:	c0 80 fc c0 	move s6, s25
   46c04:	c9 fc ff f9 	call -3292 <V_CopyRect>
   46c08:	18 30 00 a8 	load_32 s0, 12(s24)
   46c0c:	00 00 00 a8 	load_32 s0, (s0)
   46c10:	18 20 00 88 	store_32 s0, 8(s24)
   46c14:	fe b3 01 a8 	load_32 ra, 108(sp)
   46c18:	7e c3 01 a8 	load_32 s27, 112(sp)
   46c1c:	5e d3 01 a8 	load_32 s26, 116(sp)
   46c20:	3e e3 01 a8 	load_32 s25, 120(sp)
   46c24:	1e f3 01 a8 	load_32 s24, 124(sp)
   46c28:	de 03 02 05 	add_i sp, sp, 128
   46c2c:	1f 00 00 f0 	ret

0000000000046c30 ST_refreshBackground:
   46c30:	de 03 ff 05 	add_i sp, sp, -64
   46c34:	fe f3 00 88 	store_32 ra, 60(sp)
   46c38:	00 0c 00 4f 	movehi s0, 96
   46c3c:	00 e0 2c 00 	or s0, s0, 2872
   46c40:	00 00 00 a8 	load_32 s0, (s0)
   46c44:	80 03 00 f2 	bz s0, 112 <ST_refreshBackground+0x84>
   46c48:	00 0c 00 4f 	movehi s0, 96
   46c4c:	40 10 00 0f 	move s2, 4
   46c50:	00 f0 2c 00 	or s0, s0, 2876
   46c54:	60 00 00 a8 	load_32 s3, (s0)
   46c58:	00 00 00 0f 	move s0, 0
   46c5c:	20 00 f0 c0 	move s1, s0
   46c60:	1a fd ff f9 	call -2968 <V_DrawPatch>
   46c64:	1b 04 00 4f 	movehi s0, 59
   46c68:	00 c0 01 00 	or s0, s0, 112
   46c6c:	00 00 00 a8 	load_32 s0, (s0)
   46c70:	00 01 00 f2 	bz s0, 32 <ST_refreshBackground+0x60>
   46c74:	00 0c 00 4f 	movehi s0, 96
   46c78:	20 00 00 0f 	move s1, 0
   46c7c:	40 10 00 0f 	move s2, 4
   46c80:	00 00 2d 00 	or s0, s0, 2880
   46c84:	60 00 00 a8 	load_32 s3, (s0)
   46c88:	00 3c 02 0f 	move s0, 143
   46c8c:	0f fd ff f9 	call -3012 <V_DrawPatch>
   46c90:	00 00 00 0f 	move s0, 0
   46c94:	40 10 00 0f 	move s2, 4
   46c98:	60 00 05 0f 	move s3, 320
   46c9c:	20 00 f0 c0 	move s1, s0
   46ca0:	a0 00 f0 c0 	move s5, s0
   46ca4:	80 80 00 0f 	move s4, 32
   46ca8:	c0 a0 02 0f 	move s6, 168
   46cac:	e0 00 f0 c0 	move s7, s0
   46cb0:	9e fc ff f9 	call -3464 <V_CopyRect>
   46cb4:	fe f3 00 a8 	load_32 ra, 60(sp)
   46cb8:	de 03 01 05 	add_i sp, sp, 64
   46cbc:	1f 00 00 f0 	ret

0000000000046cc0 ST_Responder:
   46cc0:	de 03 fe 05 	add_i sp, sp, -128
   46cc4:	1e f3 01 88 	store_32 s24, 124(sp)
   46cc8:	3e e3 01 88 	store_32 s25, 120(sp)
   46ccc:	5e d3 01 88 	store_32 s26, 116(sp)
   46cd0:	fe c3 01 88 	store_32 ra, 112(sp)
   46cd4:	00 03 f0 c0 	move s24, s0
   46cd8:	18 00 00 a8 	load_32 s0, (s24)
   46cdc:	a0 01 00 f2 	bz s0, 52 <ST_Responder+0x50>
   46ce0:	00 04 00 11 	cmpne_i s0, s0, 1
   46ce4:	e0 28 00 f4 	bnz s0, 1308 <ST_Responder+0x540>
   46ce8:	2b 6c 61 4f 	movehi s1, 199531
   46cec:	18 10 00 a8 	load_32 s0, 4(s24)
   46cf0:	21 00 14 00 	or s1, s1, 1280
   46cf4:	00 80 10 c1 	cmpne_i s0, s0, s1
   46cf8:	40 28 00 f4 	bnz s0, 1288 <ST_Responder+0x540>
   46cfc:	00 0c 00 4f 	movehi s0, 96
   46d00:	20 04 00 0f 	move s1, 1
   46d04:	00 10 2d 00 	or s0, s0, 2884
   46d08:	20 00 00 88 	store_32 s1, (s0)
   46d0c:	3d 01 00 f6 	b 1268 <ST_Responder+0x540>
   46d10:	1b 04 00 4f 	movehi s0, 59
   46d14:	00 c0 01 00 	or s0, s0, 112
   46d18:	00 00 00 a8 	load_32 s0, (s0)
   46d1c:	40 21 00 f4 	bnz s0, 1064 <ST_Responder+0x484>
   46d20:	14 04 00 4f 	movehi s0, 52
   46d24:	38 10 00 a2 	load_s8 s1, 4(s24)
   46d28:	00 90 45 00 	or s0, s0, 4452
   46d2c:	06 55 ff f9 	call -175080 <cht_CheckCheat>
   46d30:	a0 01 00 f2 	bz s0, 52 <ST_Responder+0xa4>
   46d34:	00 0c 00 4f 	movehi s0, 96
   46d38:	00 20 2d 00 	or s0, s0, 2888
   46d3c:	00 00 00 a8 	load_32 s0, (s0)
   46d40:	20 10 03 a8 	load_32 s1, 196(s0)
   46d44:	21 08 00 03 	xor s1, s1, 2
   46d48:	20 10 03 88 	store_32 s1, 196(s0)
   46d4c:	41 08 00 01 	and s2, s1, 2
   46d50:	42 00 00 f2 	bz s2, 8 <ST_Responder+0x98>
   46d54:	25 00 00 f6 	b 148 <ST_Responder+0x128>
   46d58:	20 00 00 4f 	movehi s1, 0
   46d5c:	21 64 4a 00 	or s1, s1, 4761
   46d60:	51 00 00 f6 	b 324 <ST_Responder+0x1e4>
   46d64:	14 04 00 4f 	movehi s0, 52
   46d68:	38 10 00 a2 	load_s8 s1, 4(s24)
   46d6c:	00 d0 45 00 	or s0, s0, 4468
   46d70:	f5 54 ff f9 	call -175148 <cht_CheckCheat>
   46d74:	c0 04 00 f2 	bz s0, 152 <ST_Responder+0x14c>
   46d78:	00 0c 00 4f 	movehi s0, 96
   46d7c:	20 20 03 0f 	move s1, 200
   46d80:	00 20 2d 00 	or s0, s0, 2888
   46d84:	00 00 00 a8 	load_32 s0, (s0)
   46d88:	20 90 00 88 	store_32 s1, 36(s0)
   46d8c:	20 08 00 0f 	move s1, 2
   46d90:	20 a0 00 88 	store_32 s1, 40(s0)
   46d94:	20 04 00 0f 	move s1, 1
   46d98:	20 e0 01 88 	store_32 s1, 120(s0)
   46d9c:	20 f0 01 88 	store_32 s1, 124(s0)
   46da0:	20 00 02 88 	store_32 s1, 128(s0)
   46da4:	20 10 02 88 	store_32 s1, 132(s0)
   46da8:	20 20 02 88 	store_32 s1, 136(s0)
   46dac:	20 30 02 88 	store_32 s1, 140(s0)
   46db0:	20 40 02 88 	store_32 s1, 144(s0)
   46db4:	20 50 02 88 	store_32 s1, 148(s0)
   46db8:	20 60 02 88 	store_32 s1, 152(s0)
   46dbc:	20 b0 02 a8 	load_32 s1, 172(s0)
   46dc0:	20 70 02 88 	store_32 s1, 156(s0)
   46dc4:	20 c0 02 a8 	load_32 s1, 176(s0)
   46dc8:	20 80 02 88 	store_32 s1, 160(s0)
   46dcc:	20 d0 02 a8 	load_32 s1, 180(s0)
   46dd0:	20 90 02 88 	store_32 s1, 164(s0)
   46dd4:	21 00 00 4f 	movehi s1, 1
   46dd8:	40 e0 02 a8 	load_32 s2, 184(s0)
   46ddc:	40 a0 02 88 	store_32 s2, 168(s0)
   46de0:	21 c8 06 00 	or s1, s1, 434
   46de4:	30 00 00 f6 	b 192 <ST_Responder+0x1e4>
   46de8:	20 00 00 a8 	load_32 s1, (s0)
   46dec:	61 00 00 f2 	bz s1, 12 <ST_Responder+0x138>
   46df0:	40 90 01 0f 	move s2, 100
   46df4:	41 b0 01 88 	store_32 s2, 108(s1)
   46df8:	21 00 00 4f 	movehi s1, 1
   46dfc:	40 90 01 0f 	move s2, 100
   46e00:	40 80 00 88 	store_32 s2, 32(s0)
   46e04:	21 34 44 00 	or s1, s1, 4365
   46e08:	27 00 00 f6 	b 156 <ST_Responder+0x1e4>
   46e0c:	14 04 00 4f 	movehi s0, 52
   46e10:	38 10 00 a2 	load_s8 s1, 4(s24)
   46e14:	00 b0 45 00 	or s0, s0, 4460
   46e18:	cb 54 ff f9 	call -175316 <cht_CheckCheat>
   46e1c:	00 20 00 f2 	bz s0, 1024 <ST_Responder+0x55c>
   46e20:	00 0c 00 4f 	movehi s0, 96
   46e24:	20 20 03 0f 	move s1, 200
   46e28:	00 20 2d 00 	or s0, s0, 2888
   46e2c:	00 00 00 a8 	load_32 s0, (s0)
   46e30:	20 90 00 88 	store_32 s1, 36(s0)
   46e34:	20 08 00 0f 	move s1, 2
   46e38:	20 a0 00 88 	store_32 s1, 40(s0)
   46e3c:	20 04 00 0f 	move s1, 1
   46e40:	20 e0 01 88 	store_32 s1, 120(s0)
   46e44:	20 f0 01 88 	store_32 s1, 124(s0)
   46e48:	20 00 02 88 	store_32 s1, 128(s0)
   46e4c:	20 10 02 88 	store_32 s1, 132(s0)
   46e50:	20 20 02 88 	store_32 s1, 136(s0)
   46e54:	20 30 02 88 	store_32 s1, 140(s0)
   46e58:	20 40 02 88 	store_32 s1, 144(s0)
   46e5c:	20 50 02 88 	store_32 s1, 148(s0)
   46e60:	20 60 02 88 	store_32 s1, 152(s0)
   46e64:	40 b0 02 a8 	load_32 s2, 172(s0)
   46e68:	40 70 02 88 	store_32 s2, 156(s0)
   46e6c:	40 c0 02 a8 	load_32 s2, 176(s0)
   46e70:	40 80 02 88 	store_32 s2, 160(s0)
   46e74:	40 d0 02 a8 	load_32 s2, 180(s0)
   46e78:	40 90 02 88 	store_32 s2, 164(s0)
   46e7c:	40 e0 02 a8 	load_32 s2, 184(s0)
   46e80:	40 a0 02 88 	store_32 s2, 168(s0)
   46e84:	42 00 00 4f 	movehi s2, 2
   46e88:	20 10 01 88 	store_32 s1, 68(s0)
   46e8c:	20 20 01 88 	store_32 s1, 72(s0)
   46e90:	20 30 01 88 	store_32 s1, 76(s0)
   46e94:	20 40 01 88 	store_32 s1, 80(s0)
   46e98:	20 50 01 88 	store_32 s1, 84(s0)
   46e9c:	20 60 01 88 	store_32 s1, 88(s0)
   46ea0:	22 50 43 00 	or s1, s2, 4308
   46ea4:	20 60 03 88 	store_32 s1, 216(s0)
   46ea8:	14 04 00 4f 	movehi s0, 52
   46eac:	38 10 00 a2 	load_s8 s1, 4(s24)
   46eb0:	20 33 46 00 	or s25, s0, 4492
   46eb4:	00 80 fc c0 	move s0, s25
   46eb8:	a3 54 ff f9 	call -175476 <cht_CheckCheat>
   46ebc:	00 02 00 f2 	bz s0, 64 <ST_Responder+0x23c>
   46ec0:	00 0c 00 4f 	movehi s0, 96
   46ec4:	40 23 2d 00 	or s26, s0, 2888
   46ec8:	1a 00 00 a8 	load_32 s0, (s26)
   46ecc:	20 b0 00 a8 	load_32 s1, 44(s0)
   46ed0:	41 00 00 f4 	bnz s1, 8 <ST_Responder+0x218>
   46ed4:	04 00 00 f6 	b 16 <ST_Responder+0x224>
   46ed8:	20 04 00 0f 	move s1, 1
   46edc:	20 b0 00 88 	store_32 s1, 44(s0)
   46ee0:	04 00 00 f6 	b 16 <ST_Responder+0x230>
   46ee4:	20 00 00 0f 	move s1, 0
   46ee8:	0a 7c ff f9 	call -135128 <P_GivePower>
   46eec:	1a 00 00 a8 	load_32 s0, (s26)
   46ef0:	22 00 00 4f 	movehi s1, 2
   46ef4:	21 f4 2d 00 	or s1, s1, 2941
   46ef8:	20 60 03 88 	store_32 s1, 216(s0)
   46efc:	38 10 00 a2 	load_s8 s1, 4(s24)
   46f00:	19 20 00 05 	add_i s0, s25, 8
   46f04:	90 54 ff f9 	call -175552 <cht_CheckCheat>
   46f08:	e0 01 00 f2 	bz s0, 60 <ST_Responder+0x284>
   46f0c:	00 0c 00 4f 	movehi s0, 96
   46f10:	40 23 2d 00 	or s26, s0, 2888
   46f14:	1a 00 00 a8 	load_32 s0, (s26)
   46f18:	20 c0 00 a8 	load_32 s1, 48(s0)
   46f1c:	81 00 00 f2 	bz s1, 16 <ST_Responder+0x26c>
   46f20:	20 00 00 0f 	move s1, 0
   46f24:	20 c0 00 88 	store_32 s1, 48(s0)
   46f28:	04 00 00 f6 	b 16 <ST_Responder+0x278>
   46f2c:	20 04 00 0f 	move s1, 1
   46f30:	f8 7b ff f9 	call -135200 <P_GivePower>
   46f34:	1a 00 00 a8 	load_32 s0, (s26)
   46f38:	22 00 00 4f 	movehi s1, 2
   46f3c:	21 f4 2d 00 	or s1, s1, 2941
   46f40:	20 60 03 88 	store_32 s1, 216(s0)
   46f44:	38 10 00 a2 	load_s8 s1, 4(s24)
   46f48:	19 40 00 05 	add_i s0, s25, 16
   46f4c:	7e 54 ff f9 	call -175624 <cht_CheckCheat>
   46f50:	e0 01 00 f2 	bz s0, 60 <ST_Responder+0x2cc>
   46f54:	00 0c 00 4f 	movehi s0, 96
   46f58:	40 23 2d 00 	or s26, s0, 2888
   46f5c:	1a 00 00 a8 	load_32 s0, (s26)
   46f60:	20 d0 00 a8 	load_32 s1, 52(s0)
   46f64:	81 00 00 f2 	bz s1, 16 <ST_Responder+0x2b4>
   46f68:	20 04 00 0f 	move s1, 1
   46f6c:	20 d0 00 88 	store_32 s1, 52(s0)
   46f70:	04 00 00 f6 	b 16 <ST_Responder+0x2c0>
   46f74:	20 08 00 0f 	move s1, 2
   46f78:	e6 7b ff f9 	call -135272 <P_GivePower>
   46f7c:	1a 00 00 a8 	load_32 s0, (s26)
   46f80:	22 00 00 4f 	movehi s1, 2
   46f84:	21 f4 2d 00 	or s1, s1, 2941
   46f88:	20 60 03 88 	store_32 s1, 216(s0)
   46f8c:	38 10 00 a2 	load_s8 s1, 4(s24)
   46f90:	19 60 00 05 	add_i s0, s25, 24
   46f94:	6c 54 ff f9 	call -175696 <cht_CheckCheat>
   46f98:	e0 01 00 f2 	bz s0, 60 <ST_Responder+0x314>
   46f9c:	00 0c 00 4f 	movehi s0, 96
   46fa0:	40 23 2d 00 	or s26, s0, 2888
   46fa4:	1a 00 00 a8 	load_32 s0, (s26)
   46fa8:	20 e0 00 a8 	load_32 s1, 56(s0)
   46fac:	81 00 00 f2 	bz s1, 16 <ST_Responder+0x2fc>
   46fb0:	20 04 00 0f 	move s1, 1
   46fb4:	20 e0 00 88 	store_32 s1, 56(s0)
   46fb8:	04 00 00 f6 	b 16 <ST_Responder+0x308>
   46fbc:	20 0c 00 0f 	move s1, 3
   46fc0:	d4 7b ff f9 	call -135344 <P_GivePower>
   46fc4:	1a 00 00 a8 	load_32 s0, (s26)
   46fc8:	22 00 00 4f 	movehi s1, 2
   46fcc:	21 f4 2d 00 	or s1, s1, 2941
   46fd0:	20 60 03 88 	store_32 s1, 216(s0)
   46fd4:	38 10 00 a2 	load_s8 s1, 4(s24)
   46fd8:	19 80 00 05 	add_i s0, s25, 32
   46fdc:	5a 54 ff f9 	call -175768 <cht_CheckCheat>
   46fe0:	e0 01 00 f2 	bz s0, 60 <ST_Responder+0x35c>
   46fe4:	00 0c 00 4f 	movehi s0, 96
   46fe8:	40 23 2d 00 	or s26, s0, 2888
   46fec:	1a 00 00 a8 	load_32 s0, (s26)
   46ff0:	20 f0 00 a8 	load_32 s1, 60(s0)
   46ff4:	81 00 00 f2 	bz s1, 16 <ST_Responder+0x344>
   46ff8:	20 04 00 0f 	move s1, 1
   46ffc:	20 f0 00 88 	store_32 s1, 60(s0)
   47000:	04 00 00 f6 	b 16 <ST_Responder+0x350>
   47004:	20 10 00 0f 	move s1, 4
   47008:	c2 7b ff f9 	call -135416 <P_GivePower>
   4700c:	1a 00 00 a8 	load_32 s0, (s26)
   47010:	22 00 00 4f 	movehi s1, 2
   47014:	21 f4 2d 00 	or s1, s1, 2941
   47018:	20 60 03 88 	store_32 s1, 216(s0)
   4701c:	38 10 00 a2 	load_s8 s1, 4(s24)
   47020:	19 a0 00 05 	add_i s0, s25, 40
   47024:	48 54 ff f9 	call -175840 <cht_CheckCheat>
   47028:	e0 01 00 f2 	bz s0, 60 <ST_Responder+0x3a4>
   4702c:	00 0c 00 4f 	movehi s0, 96
   47030:	40 23 2d 00 	or s26, s0, 2888
   47034:	1a 00 00 a8 	load_32 s0, (s26)
   47038:	20 00 01 a8 	load_32 s1, 64(s0)
   4703c:	81 00 00 f2 	bz s1, 16 <ST_Responder+0x38c>
   47040:	20 04 00 0f 	move s1, 1
   47044:	20 00 01 88 	store_32 s1, 64(s0)
   47048:	04 00 00 f6 	b 16 <ST_Responder+0x398>
   4704c:	20 14 00 0f 	move s1, 5
   47050:	b0 7b ff f9 	call -135488 <P_GivePower>
   47054:	1a 00 00 a8 	load_32 s0, (s26)
   47058:	22 00 00 4f 	movehi s1, 2
   4705c:	21 f4 2d 00 	or s1, s1, 2941
   47060:	20 60 03 88 	store_32 s1, 216(s0)
   47064:	38 10 00 a2 	load_s8 s1, 4(s24)
   47068:	19 c0 00 05 	add_i s0, s25, 48
   4706c:	36 54 ff f9 	call -175912 <cht_CheckCheat>
   47070:	00 01 00 f2 	bz s0, 32 <ST_Responder+0x3d0>
   47074:	00 0c 00 4f 	movehi s0, 96
   47078:	21 00 00 4f 	movehi s1, 1
   4707c:	00 20 2d 00 	or s0, s0, 2888
   47080:	21 84 65 00 	or s1, s1, 6497
   47084:	00 00 00 a8 	load_32 s0, (s0)
   47088:	20 60 03 88 	store_32 s1, 216(s0)
   4708c:	2e 00 00 f6 	b 184 <ST_Responder+0x484>
   47090:	14 04 00 4f 	movehi s0, 52
   47094:	38 10 00 a2 	load_s8 s1, 4(s24)
   47098:	00 10 47 00 	or s0, s0, 4548
   4709c:	2a 54 ff f9 	call -175960 <cht_CheckCheat>
   470a0:	60 01 00 f2 	bz s0, 44 <ST_Responder+0x40c>
   470a4:	00 0c 00 4f 	movehi s0, 96
   470a8:	41 00 00 4f 	movehi s2, 1
   470ac:	20 04 00 0f 	move s1, 1
   470b0:	00 20 2d 00 	or s0, s0, 2888
   470b4:	00 00 00 a8 	load_32 s0, (s0)
   470b8:	20 50 02 88 	store_32 s1, 148(s0)
   470bc:	20 b0 00 88 	store_32 s1, 44(s0)
   470c0:	22 78 30 00 	or s1, s2, 3102
   470c4:	20 60 03 88 	store_32 s1, 216(s0)
   470c8:	1f 00 00 f6 	b 124 <ST_Responder+0x484>
   470cc:	14 04 00 4f 	movehi s0, 52
   470d0:	38 10 00 a2 	load_s8 s1, 4(s24)
   470d4:	00 50 47 00 	or s0, s0, 4564
   470d8:	1b 54 ff f9 	call -176020 <cht_CheckCheat>
   470dc:	40 03 00 f2 	bz s0, 104 <ST_Responder+0x484>
   470e0:	1a 04 00 4f 	movehi s0, 58
   470e4:	3b 04 00 4f 	movehi s1, 59
   470e8:	00 c0 6d 00 	or s0, s0, 7024
   470ec:	21 40 02 00 	or s1, s1, 144
   470f0:	00 00 00 a8 	load_32 s0, (s0)
   470f4:	00 60 04 07 	mull_i s0, s0, 280
   470f8:	01 00 50 c0 	add_i s0, s1, s0
   470fc:	00 00 00 a8 	load_32 s0, (s0)
   47100:	20 80 00 a8 	load_32 s1, 32(s0)
   47104:	40 30 00 a8 	load_32 s2, 12(s0)
   47108:	00 40 00 a8 	load_32 s0, 16(s0)
   4710c:	1e 40 00 88 	store_32 s0, 16(sp)
   47110:	00 00 00 4f 	movehi s0, 0
   47114:	5e 30 00 88 	store_32 s2, 12(sp)
   47118:	3e 20 00 88 	store_32 s1, 8(sp)
   4711c:	20 0c 00 4f 	movehi s1, 96
   47120:	00 ec 64 00 	or s0, s0, 6459
   47124:	1e 10 00 88 	store_32 s0, 4(sp)
   47128:	21 33 2d 00 	or s25, s1, 2892
   4712c:	3e 03 00 88 	store_32 s25, (sp)
   47130:	36 2b 00 f8 	call 44248 <sprintf>
   47134:	00 0c 00 4f 	movehi s0, 96
   47138:	00 20 2d 00 	or s0, s0, 2888
   4713c:	00 00 00 a8 	load_32 s0, (s0)
   47140:	20 63 03 88 	store_32 s25, 216(s0)
   47144:	14 04 00 4f 	movehi s0, 52
   47148:	38 10 00 a2 	load_s8 s1, 4(s24)
   4714c:	00 33 47 00 	or s24, s0, 4556
   47150:	00 00 fc c0 	move s0, s24
   47154:	fc 53 ff f9 	call -176144 <cht_CheckCheat>
   47158:	40 05 00 f2 	bz s0, 168 <ST_Responder+0x540>
   4715c:	3e a8 01 05 	add_i s1, sp, 106
   47160:	00 00 fc c0 	move s0, s24
   47164:	4b 54 ff f9 	call -175828 <cht_GetParam>
   47168:	0b 04 00 4f 	movehi s0, 43
   4716c:	00 00 40 00 	or s0, s0, 4096
   47170:	00 00 00 a8 	load_32 s0, (s0)
   47174:	20 08 00 10 	cmpeq_i s1, s0, 2
   47178:	41 04 00 f4 	bnz s1, 136 <ST_Responder+0x540>
   4717c:	3e a8 01 a2 	load_s8 s1, 106(sp)
   47180:	5e ac 01 a2 	load_s8 s2, 107(sp)
   47184:	21 40 ff 05 	add_i s1, s1, -48
   47188:	61 04 00 14 	cmplt_i s3, s1, 1
   4718c:	a3 03 00 f4 	bnz s3, 116 <ST_Responder+0x540>
   47190:	42 40 ff 05 	add_i s2, s2, -48
   47194:	62 04 00 14 	cmplt_i s3, s2, 1
   47198:	43 03 00 f4 	bnz s3, 104 <ST_Responder+0x540>
   4719c:	00 01 00 f2 	bz s0, 32 <ST_Responder+0x4fc>
   471a0:	60 04 00 10 	cmpeq_i s3, s0, 1
   471a4:	23 01 00 f4 	bnz s3, 36 <ST_Responder+0x508>
   471a8:	00 0c 00 11 	cmpne_i s0, s0, 3
   471ac:	60 01 00 f4 	bnz s0, 44 <ST_Responder+0x518>
   471b0:	01 10 00 12 	cmpgt_i s0, s1, 4
   471b4:	60 02 00 f4 	bnz s0, 76 <ST_Responder+0x540>
   471b8:	06 00 00 f6 	b 24 <ST_Responder+0x510>
   471bc:	01 04 00 12 	cmpgt_i s0, s1, 1
   471c0:	00 02 00 f4 	bnz s0, 64 <ST_Responder+0x540>
   471c4:	03 00 00 f6 	b 12 <ST_Responder+0x510>
   471c8:	01 0c 00 12 	cmpgt_i s0, s1, 3
   471cc:	a0 01 00 f4 	bnz s0, 52 <ST_Responder+0x540>
   471d0:	02 24 00 12 	cmpgt_i s0, s2, 9
   471d4:	60 01 00 f4 	bnz s0, 44 <ST_Responder+0x540>
   471d8:	00 0c 00 4f 	movehi s0, 96
   471dc:	7a 04 00 4f 	movehi s3, 58
   471e0:	80 00 00 4f 	movehi s4, 0
   471e4:	00 20 2d 00 	or s0, s0, 2888
   471e8:	63 90 7f 00 	or s3, s3, 8164
   471ec:	84 dc 19 00 	or s4, s4, 1655
   471f0:	00 00 00 a8 	load_32 s0, (s0)
   471f4:	80 60 03 88 	store_32 s4, 216(s0)
   471f8:	03 00 00 a8 	load_32 s0, (s3)
   471fc:	4c 41 ff f9 	call -195280 <G_DeferedInitNew>
   47200:	fe c3 01 a8 	load_32 ra, 112(sp)
   47204:	00 00 00 0f 	move s0, 0
   47208:	5e d3 01 a8 	load_32 s26, 116(sp)
   4720c:	3e e3 01 a8 	load_32 s25, 120(sp)
   47210:	1e f3 01 a8 	load_32 s24, 124(sp)
   47214:	de 03 02 05 	add_i sp, sp, 128
   47218:	1f 00 00 f0 	ret
   4721c:	14 04 00 4f 	movehi s0, 52
   47220:	38 10 00 a2 	load_s8 s1, 4(s24)
   47224:	20 73 45 00 	or s25, s0, 4444
   47228:	00 80 fc c0 	move s0, s25
   4722c:	c6 53 ff f9 	call -176360 <cht_CheckCheat>
   47230:	00 03 00 f2 	bz s0, 96 <ST_Responder+0x5d0>
   47234:	00 0c 00 4f 	movehi s0, 96
   47238:	22 00 00 4f 	movehi s1, 2
   4723c:	40 23 2d 00 	or s26, s0, 2888
   47240:	21 0c 16 00 	or s1, s1, 1411
   47244:	1a 00 00 a8 	load_32 s0, (s26)
   47248:	20 60 03 88 	store_32 s1, 216(s0)
   4724c:	3e b4 01 05 	add_i s1, sp, 109
   47250:	00 80 fc c0 	move s0, s25
   47254:	0f 54 ff f9 	call -176068 <cht_GetParam>
   47258:	0b 04 00 4f 	movehi s0, 43
   4725c:	00 00 40 00 	or s0, s0, 4096
   47260:	00 00 00 a8 	load_32 s0, (s0)
   47264:	20 08 00 11 	cmpne_i s1, s0, 2
   47268:	1e b4 01 a2 	load_s8 s0, 109(sp)
   4726c:	e1 03 00 f4 	bnz s1, 124 <ST_Responder+0x628>
   47270:	3e b8 01 a2 	load_s8 s1, 110(sp)
   47274:	00 28 00 07 	mull_i s0, s0, 10
   47278:	00 80 50 c0 	add_i s0, s0, s1
   4727c:	20 d0 08 14 	cmplt_i s1, s0, 564
   47280:	41 00 00 f4 	bnz s1, 8 <ST_Responder+0x5c8>
   47284:	1e 00 00 f6 	b 120 <ST_Responder+0x63c>
   47288:	00 40 f8 05 	add_i s0, s0, -496
   4728c:	24 00 00 f6 	b 144 <ST_Responder+0x65c>
   47290:	14 04 00 4f 	movehi s0, 52
   47294:	38 10 00 a2 	load_s8 s1, 4(s24)
   47298:	00 f0 45 00 	or s0, s0, 4476
   4729c:	aa 53 ff f9 	call -176472 <cht_CheckCheat>
   472a0:	c0 00 00 f4 	bnz s0, 24 <ST_Responder+0x5f8>
   472a4:	14 04 00 4f 	movehi s0, 52
   472a8:	38 10 00 a2 	load_s8 s1, 4(s24)
   472ac:	00 10 46 00 	or s0, s0, 4484
   472b0:	a5 53 ff f9 	call -176492 <cht_CheckCheat>
   472b4:	a0 df ff f3 	bz s0, -1036 <ST_Responder+0x1e8>
   472b8:	00 0c 00 4f 	movehi s0, 96
   472bc:	00 20 2d 00 	or s0, s0, 2888
   472c0:	00 00 00 a8 	load_32 s0, (s0)
   472c4:	20 10 03 a8 	load_32 s1, 196(s0)
   472c8:	41 04 00 03 	xor s2, s1, 1
   472cc:	40 10 03 88 	store_32 s2, 196(s0)
   472d0:	21 04 00 01 	and s1, s1, 1
   472d4:	41 00 00 f4 	bnz s1, 8 <ST_Responder+0x61c>
   472d8:	0d 00 00 f6 	b 52 <ST_Responder+0x64c>
   472dc:	22 00 00 4f 	movehi s1, 2
   472e0:	21 d8 7e 00 	or s1, s1, 8118
   472e4:	f0 fe ff f7 	b -1088 <ST_Responder+0x1e4>
   472e8:	3e b8 01 a2 	load_s8 s1, 110(sp)
   472ec:	00 24 00 07 	mull_i s0, s0, 9
   472f0:	00 80 50 c0 	add_i s0, s0, s1
   472f4:	20 28 08 14 	cmplt_i s1, s0, 522
   472f8:	01 01 00 f4 	bnz s1, 32 <ST_Responder+0x658>
   472fc:	22 00 00 4f 	movehi s1, 2
   47300:	1a 00 00 a8 	load_32 s0, (s26)
   47304:	21 6c 3c 00 	or s1, s1, 3867
   47308:	e7 fe ff f7 	b -1124 <ST_Responder+0x1e4>
   4730c:	22 00 00 4f 	movehi s1, 2
   47310:	21 40 16 00 	or s1, s1, 1424
   47314:	e4 fe ff f7 	b -1136 <ST_Responder+0x1e4>
   47318:	00 5c f8 05 	add_i s0, s0, -489
   4731c:	20 04 00 0f 	move s1, 1
   47320:	22 12 00 f8 	call 18568 <S_ChangeMusic>
   47324:	e1 fe ff f7 	b -1148 <ST_Responder+0x1e8>

0000000000047328 ST_calcPainOffset:
   47328:	00 0c 00 4f 	movehi s0, 96
   4732c:	00 20 2d 00 	or s0, s0, 2888
   47330:	00 00 00 a8 	load_32 s0, (s0)
   47334:	20 80 00 a8 	load_32 s1, 32(s0)
   47338:	01 90 01 14 	cmplt_i s0, s1, 100
   4733c:	40 00 00 f4 	bnz s0, 8 <ST_calcPainOffset+0x1c>
   47340:	20 90 01 0f 	move s1, 100
   47344:	14 04 00 4f 	movehi s0, 52
   47348:	40 70 47 00 	or s2, s0, 4572
   4734c:	02 00 00 a8 	load_32 s0, (s2)
   47350:	01 00 10 c1 	cmpne_i s0, s1, s0
   47354:	a0 00 00 f4 	bnz s0, 20 <ST_calcPainOffset+0x40>
   47358:	00 0c 00 4f 	movehi s0, 96
   4735c:	00 00 2e 00 	or s0, s0, 2944
   47360:	00 00 00 a8 	load_32 s0, (s0)
   47364:	1f 00 00 f0 	ret
   47368:	00 90 01 0f 	move s0, 100
   4736c:	6f 8c 28 4f 	movehi s3, 83055
   47370:	80 0c 00 4f 	movehi s4, 96
   47374:	00 80 60 c0 	sub_i s0, s0, s1
   47378:	63 2c 43 00 	or s3, s3, 4299
   4737c:	00 14 00 07 	mull_i s0, s0, 5
   47380:	00 80 f1 c1 	mulh_i s0, s0, s3
   47384:	60 10 00 09 	ashr s3, s0, 4
   47388:	00 7c 00 0a 	shr s0, s0, 31
   4738c:	03 00 50 c0 	add_i s0, s3, s0
   47390:	64 00 2e 00 	or s3, s4, 2944
   47394:	00 0c 00 0b 	shl s0, s0, 3
   47398:	03 00 00 88 	store_32 s0, (s3)
   4739c:	22 00 00 88 	store_32 s1, (s2)
   473a0:	1f 00 00 f0 	ret

00000000000473a4 ST_updateFaceWidget:
   473a4:	de 03 ff 05 	add_i sp, sp, -64
   473a8:	1e f3 00 88 	store_32 s24, 60(sp)
   473ac:	3e e3 00 88 	store_32 s25, 56(sp)
   473b0:	fe d3 00 88 	store_32 ra, 52(sp)
   473b4:	00 0c 00 4f 	movehi s0, 96
   473b8:	00 13 2e 00 	or s24, s0, 2948
   473bc:	58 00 00 a8 	load_32 s2, (s24)
   473c0:	02 24 00 12 	cmpgt_i s0, s2, 9
   473c4:	60 17 00 f4 	bnz s0, 748 <ST_updateFaceWidget+0x30c>
   473c8:	00 0c 00 4f 	movehi s0, 96
   473cc:	20 23 2d 00 	or s25, s0, 2888
   473d0:	39 00 00 a8 	load_32 s1, (s25)
   473d4:	01 80 00 a8 	load_32 s0, 32(s1)
   473d8:	40 00 00 f4 	bnz s0, 8 <ST_updateFaceWidget+0x3c>
   473dc:	12 00 00 f6 	b 72 <ST_updateFaceWidget+0x80>
   473e0:	62 20 00 12 	cmpgt_i s3, s2, 8
   473e4:	63 16 00 f4 	bnz s3, 716 <ST_updateFaceWidget+0x30c>
   473e8:	61 80 03 a8 	load_32 s3, 224(s1)
   473ec:	c3 08 00 f2 	bz s3, 280 <ST_updateFaceWidget+0x160>
   473f0:	60 0c 00 4f 	movehi s3, 96
   473f4:	63 40 2e 00 	or s3, s3, 2960
   473f8:	a3 00 00 a8 	load_32 s5, (s3)
   473fc:	81 e0 01 a8 	load_32 s4, 120(s1)
   47400:	a5 00 02 c1 	cmpeq_i s5, s5, s4
   47404:	45 00 00 f4 	bnz s5, 8 <ST_updateFaceWidget+0x68>
   47408:	12 00 00 f6 	b 72 <ST_updateFaceWidget+0xac>
   4740c:	80 00 00 0f 	move s4, 0
   47410:	c3 10 00 a8 	load_32 s6, 4(s3)
   47414:	a1 f0 01 a8 	load_32 s5, 124(s1)
   47418:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   4741c:	a6 02 00 f4 	bnz s6, 84 <ST_updateFaceWidget+0xcc>
   47420:	12 00 00 f6 	b 72 <ST_updateFaceWidget+0xc4>
   47424:	20 0c 00 4f 	movehi s1, 96
   47428:	00 24 00 0f 	move s0, 9
   4742c:	18 00 00 88 	store_32 s0, (s24)
   47430:	00 0c 00 4f 	movehi s0, 96
   47434:	21 20 2e 00 	or s1, s1, 2952
   47438:	40 a4 00 0f 	move s2, 41
   4743c:	00 30 2e 00 	or s0, s0, 2956
   47440:	41 00 00 88 	store_32 s2, (s1)
   47444:	20 04 00 0f 	move s1, 1
   47448:	20 00 00 88 	store_32 s1, (s0)
   4744c:	cd 00 00 f6 	b 820 <ST_updateFaceWidget+0x3dc>
   47450:	83 00 00 88 	store_32 s4, (s3)
   47454:	80 04 00 0f 	move s4, 1
   47458:	c3 10 00 a8 	load_32 s6, 4(s3)
   4745c:	a1 f0 01 a8 	load_32 s5, 124(s1)
   47460:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   47464:	66 00 00 f4 	bnz s6, 12 <ST_updateFaceWidget+0xcc>
   47468:	80 04 00 0f 	move s4, 1
   4746c:	a3 10 00 88 	store_32 s5, 4(s3)
   47470:	c3 20 00 a8 	load_32 s6, 8(s3)
   47474:	a1 00 02 a8 	load_32 s5, 128(s1)
   47478:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   4747c:	46 00 00 f4 	bnz s6, 8 <ST_updateFaceWidget+0xe0>
   47480:	43 00 00 f6 	b 268 <ST_updateFaceWidget+0x1e8>
   47484:	c3 30 00 a8 	load_32 s6, 12(s3)
   47488:	a1 10 02 a8 	load_32 s5, 132(s1)
   4748c:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   47490:	46 00 00 f4 	bnz s6, 8 <ST_updateFaceWidget+0xf4>
   47494:	44 00 00 f6 	b 272 <ST_updateFaceWidget+0x200>
   47498:	c3 40 00 a8 	load_32 s6, 16(s3)
   4749c:	a1 20 02 a8 	load_32 s5, 136(s1)
   474a0:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   474a4:	46 00 00 f4 	bnz s6, 8 <ST_updateFaceWidget+0x108>
   474a8:	45 00 00 f6 	b 276 <ST_updateFaceWidget+0x218>
   474ac:	c3 50 00 a8 	load_32 s6, 20(s3)
   474b0:	a1 30 02 a8 	load_32 s5, 140(s1)
   474b4:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   474b8:	46 00 00 f4 	bnz s6, 8 <ST_updateFaceWidget+0x11c>
   474bc:	46 00 00 f6 	b 280 <ST_updateFaceWidget+0x230>
   474c0:	c3 60 00 a8 	load_32 s6, 24(s3)
   474c4:	a1 40 02 a8 	load_32 s5, 144(s1)
   474c8:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   474cc:	46 00 00 f4 	bnz s6, 8 <ST_updateFaceWidget+0x130>
   474d0:	47 00 00 f6 	b 284 <ST_updateFaceWidget+0x248>
   474d4:	c3 70 00 a8 	load_32 s6, 28(s3)
   474d8:	a1 50 02 a8 	load_32 s5, 148(s1)
   474dc:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   474e0:	46 00 00 f4 	bnz s6, 8 <ST_updateFaceWidget+0x144>
   474e4:	48 00 00 f6 	b 288 <ST_updateFaceWidget+0x260>
   474e8:	c3 80 00 a8 	load_32 s6, 32(s3)
   474ec:	a1 60 02 a8 	load_32 s5, 152(s1)
   474f0:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   474f4:	46 00 00 f4 	bnz s6, 8 <ST_updateFaceWidget+0x158>
   474f8:	49 00 00 f6 	b 292 <ST_updateFaceWidget+0x278>
   474fc:	44 00 00 f2 	bz s4, 8 <ST_updateFaceWidget+0x160>
   47500:	48 00 00 f6 	b 288 <ST_updateFaceWidget+0x27c>
   47504:	42 1c 00 12 	cmpgt_i s2, s2, 7
   47508:	42 0d 00 f4 	bnz s2, 424 <ST_updateFaceWidget+0x30c>
   4750c:	41 70 03 a8 	load_32 s2, 220(s1)
   47510:	c2 1f 00 f2 	bz s2, 1016 <ST_updateFaceWidget+0x564>
   47514:	61 90 03 a8 	load_32 s3, 228(s1)
   47518:	83 1f 00 f2 	bz s3, 1008 <ST_updateFaceWidget+0x564>
   4751c:	41 00 00 a8 	load_32 s2, (s1)
   47520:	83 00 01 c1 	cmpeq_i s4, s3, s2
   47524:	24 1f 00 f4 	bnz s4, 996 <ST_updateFaceWidget+0x564>
   47528:	94 04 00 4f 	movehi s4, 52
   4752c:	a0 1c 00 0f 	move s5, 7
   47530:	b8 00 00 88 	store_32 s5, (s24)
   47534:	84 90 47 00 	or s4, s4, 4580
   47538:	84 00 00 a8 	load_32 s4, (s4)
   4753c:	80 00 62 c0 	sub_i s4, s0, s4
   47540:	84 54 00 14 	cmplt_i s4, s4, 21
   47544:	04 13 00 f4 	bnz s4, 608 <ST_updateFaceWidget+0x400>
   47548:	40 0c 00 4f 	movehi s2, 96
   4754c:	60 8c 00 0f 	move s3, 35
   47550:	80 90 01 14 	cmplt_i s4, s0, 100
   47554:	42 30 2e 00 	or s2, s2, 2956
   47558:	62 00 00 88 	store_32 s3, (s2)
   4755c:	40 00 f0 c0 	move s2, s0
   47560:	44 00 00 f4 	bnz s4, 8 <ST_updateFaceWidget+0x1c4>
   47564:	40 90 01 0f 	move s2, 100
   47568:	74 04 00 4f 	movehi s3, 52
   4756c:	63 70 47 00 	or s3, s3, 4572
   47570:	83 00 00 a8 	load_32 s4, (s3)
   47574:	82 00 12 c1 	cmpne_i s4, s2, s4
   47578:	c4 15 00 f4 	bnz s4, 696 <ST_updateFaceWidget+0x48c>
   4757c:	40 0c 00 4f 	movehi s2, 96
   47580:	42 00 2e 00 	or s2, s2, 2944
   47584:	82 00 00 a8 	load_32 s4, (s2)
   47588:	b8 00 00 f6 	b 736 <ST_updateFaceWidget+0x4c4>
   4758c:	80 04 00 0f 	move s4, 1
   47590:	a3 20 00 88 	store_32 s5, 8(s3)
   47594:	c3 30 00 a8 	load_32 s6, 12(s3)
   47598:	a1 10 02 a8 	load_32 s5, 132(s1)
   4759c:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   475a0:	c6 f7 ff f5 	bnz s6, -264 <ST_updateFaceWidget+0xf4>
   475a4:	80 04 00 0f 	move s4, 1
   475a8:	a3 30 00 88 	store_32 s5, 12(s3)
   475ac:	c3 40 00 a8 	load_32 s6, 16(s3)
   475b0:	a1 20 02 a8 	load_32 s5, 136(s1)
   475b4:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   475b8:	a6 f7 ff f5 	bnz s6, -268 <ST_updateFaceWidget+0x108>
   475bc:	80 04 00 0f 	move s4, 1
   475c0:	a3 40 00 88 	store_32 s5, 16(s3)
   475c4:	c3 50 00 a8 	load_32 s6, 20(s3)
   475c8:	a1 30 02 a8 	load_32 s5, 140(s1)
   475cc:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   475d0:	86 f7 ff f5 	bnz s6, -272 <ST_updateFaceWidget+0x11c>
   475d4:	80 04 00 0f 	move s4, 1
   475d8:	a3 50 00 88 	store_32 s5, 20(s3)
   475dc:	c3 60 00 a8 	load_32 s6, 24(s3)
   475e0:	a1 40 02 a8 	load_32 s5, 144(s1)
   475e4:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   475e8:	66 f7 ff f5 	bnz s6, -276 <ST_updateFaceWidget+0x130>
   475ec:	80 04 00 0f 	move s4, 1
   475f0:	a3 60 00 88 	store_32 s5, 24(s3)
   475f4:	c3 70 00 a8 	load_32 s6, 28(s3)
   475f8:	a1 50 02 a8 	load_32 s5, 148(s1)
   475fc:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   47600:	46 f7 ff f5 	bnz s6, -280 <ST_updateFaceWidget+0x144>
   47604:	80 04 00 0f 	move s4, 1
   47608:	a3 70 00 88 	store_32 s5, 28(s3)
   4760c:	c3 80 00 a8 	load_32 s6, 32(s3)
   47610:	a1 60 02 a8 	load_32 s5, 152(s1)
   47614:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   47618:	26 f7 ff f5 	bnz s6, -284 <ST_updateFaceWidget+0x158>
   4761c:	a3 80 00 88 	store_32 s5, 32(s3)
   47620:	20 0c 00 4f 	movehi s1, 96
   47624:	60 90 01 14 	cmplt_i s3, s0, 100
   47628:	40 20 00 0f 	move s2, 8
   4762c:	58 00 00 88 	store_32 s2, (s24)
   47630:	21 30 2e 00 	or s1, s1, 2956
   47634:	40 18 01 0f 	move s2, 70
   47638:	41 00 00 88 	store_32 s2, (s1)
   4763c:	43 00 00 f4 	bnz s3, 8 <ST_updateFaceWidget+0x2a0>
   47640:	00 90 01 0f 	move s0, 100
   47644:	34 04 00 4f 	movehi s1, 52
   47648:	21 70 47 00 	or s1, s1, 4572
   4764c:	41 00 00 a8 	load_32 s2, (s1)
   47650:	40 00 11 c1 	cmpne_i s2, s0, s2
   47654:	a2 00 00 f4 	bnz s2, 20 <ST_updateFaceWidget+0x2c4>
   47658:	00 0c 00 4f 	movehi s0, 96
   4765c:	00 00 2e 00 	or s0, s0, 2944
   47660:	40 00 00 a8 	load_32 s2, (s0)
   47664:	0f 00 00 f6 	b 60 <ST_updateFaceWidget+0x2fc>
   47668:	40 90 01 0f 	move s2, 100
   4766c:	6f 8c 28 4f 	movehi s3, 83055
   47670:	80 0c 00 4f 	movehi s4, 96
   47674:	42 00 60 c0 	sub_i s2, s2, s0
   47678:	63 2c 43 00 	or s3, s3, 4299
   4767c:	42 14 00 07 	mull_i s2, s2, 5
   47680:	42 80 f1 c1 	mulh_i s2, s2, s3
   47684:	62 10 00 09 	ashr s3, s2, 4
   47688:	42 7c 00 0a 	shr s2, s2, 31
   4768c:	43 00 51 c0 	add_i s2, s3, s2
   47690:	64 00 2e 00 	or s3, s4, 2944
   47694:	42 0c 00 0b 	shl s2, s2, 3
   47698:	43 00 00 88 	store_32 s2, (s3)
   4769c:	01 00 00 88 	store_32 s0, (s1)
   476a0:	00 0c 00 4f 	movehi s0, 96
   476a4:	22 18 00 05 	add_i s1, s2, 6
   476a8:	00 20 2e 00 	or s0, s0, 2952
   476ac:	20 00 00 88 	store_32 s1, (s0)
   476b0:	00 0c 00 4f 	movehi s0, 96
   476b4:	00 30 2e 00 	or s0, s0, 2956
   476b8:	20 00 00 a8 	load_32 s1, (s0)
   476bc:	21 06 00 f4 	bnz s1, 196 <ST_updateFaceWidget+0x3dc>
   476c0:	20 0c 00 4f 	movehi s1, 96
   476c4:	21 20 2d 00 	or s1, s1, 2888
   476c8:	21 00 00 a8 	load_32 s1, (s1)
   476cc:	21 80 00 a8 	load_32 s1, 32(s1)
   476d0:	41 90 01 14 	cmplt_i s2, s1, 100
   476d4:	42 00 00 f4 	bnz s2, 8 <ST_updateFaceWidget+0x338>
   476d8:	20 90 01 0f 	move s1, 100
   476dc:	54 04 00 4f 	movehi s2, 52
   476e0:	62 70 47 00 	or s3, s2, 4572
   476e4:	43 00 00 a8 	load_32 s2, (s3)
   476e8:	41 00 11 c1 	cmpne_i s2, s1, s2
   476ec:	a2 00 00 f4 	bnz s2, 20 <ST_updateFaceWidget+0x35c>
   476f0:	20 0c 00 4f 	movehi s1, 96
   476f4:	21 00 2e 00 	or s1, s1, 2944
   476f8:	41 00 00 a8 	load_32 s2, (s1)
   476fc:	0f 00 00 f6 	b 60 <ST_updateFaceWidget+0x394>
   47700:	40 90 01 0f 	move s2, 100
   47704:	8f 8c 28 4f 	movehi s4, 83055
   47708:	a0 0c 00 4f 	movehi s5, 96
   4770c:	42 80 60 c0 	sub_i s2, s2, s1
   47710:	84 2c 43 00 	or s4, s4, 4299
   47714:	42 14 00 07 	mull_i s2, s2, 5
   47718:	42 00 f2 c1 	mulh_i s2, s2, s4
   4771c:	82 10 00 09 	ashr s4, s2, 4
   47720:	42 7c 00 0a 	shr s2, s2, 31
   47724:	44 00 51 c0 	add_i s2, s4, s2
   47728:	85 00 2e 00 	or s4, s5, 2944
   4772c:	42 0c 00 0b 	shl s2, s2, 3
   47730:	44 00 00 88 	store_32 s2, (s4)
   47734:	23 00 00 88 	store_32 s1, (s3)
   47738:	20 0c 00 4f 	movehi s1, 96
   4773c:	6a 54 55 4f 	movehi s3, 174762
   47740:	21 d0 2e 00 	or s1, s1, 2996
   47744:	63 58 55 00 	or s3, s3, 5462
   47748:	21 00 00 a8 	load_32 s1, (s1)
   4774c:	61 80 f1 c1 	mulh_i s3, s1, s3
   47750:	83 7c 00 0a 	shr s4, s3, 31
   47754:	63 00 52 c0 	add_i s3, s3, s4
   47758:	80 0c 00 4f 	movehi s4, 96
   4775c:	63 0c 00 07 	mull_i s3, s3, 3
   47760:	21 80 61 c0 	sub_i s1, s1, s3
   47764:	64 20 2e 00 	or s3, s4, 2952
   47768:	21 00 51 c0 	add_i s1, s1, s2
   4776c:	23 00 00 88 	store_32 s1, (s3)
   47770:	20 44 00 0f 	move s1, 17
   47774:	20 00 00 88 	store_32 s1, (s0)
   47778:	00 00 00 0f 	move s0, 0
   4777c:	18 00 00 88 	store_32 s0, (s24)
   47780:	00 0c 00 4f 	movehi s0, 96
   47784:	21 fc ff 05 	add_i s1, s1, -1
   47788:	00 30 2e 00 	or s0, s0, 2956
   4778c:	20 00 00 88 	store_32 s1, (s0)
   47790:	fe d3 00 a8 	load_32 ra, 52(sp)
   47794:	3e e3 00 a8 	load_32 s25, 56(sp)
   47798:	1e f3 00 a8 	load_32 s24, 60(sp)
   4779c:	de 03 01 05 	add_i sp, sp, 64
   477a0:	1f 00 00 f0 	ret
   477a4:	02 30 00 a8 	load_32 s0, 12(s2)
   477a8:	22 40 00 a8 	load_32 s1, 16(s2)
   477ac:	43 30 00 a8 	load_32 s2, 12(s3)
   477b0:	63 40 00 a8 	load_32 s3, 16(s3)
   477b4:	ed c6 ff f9 	call -58444 <R_PointToAngle2>
   477b8:	39 00 00 a8 	load_32 s1, (s25)
   477bc:	60 00 80 4f 	movehi s3, 262144
   477c0:	41 00 00 a8 	load_32 s2, (s1)
   477c4:	a2 80 00 a8 	load_32 s5, 32(s2)
   477c8:	40 80 62 c0 	sub_i s2, s0, s5
   477cc:	80 80 62 c1 	cmpgt_u s4, s0, s5
   477d0:	05 00 60 c0 	sub_i s0, s5, s0
   477d4:	a4 05 00 f4 	bnz s4, 180 <ST_updateFaceWidget+0x4e4>
   477d8:	63 04 00 00 	or s3, s3, 1
   477dc:	60 80 81 c1 	cmplt_u s3, s0, s3
   477e0:	44 00 00 f4 	bnz s4, 8 <ST_updateFaceWidget+0x444>
   477e4:	40 00 f0 c0 	move s2, s0
   477e8:	00 0c 00 4f 	movehi s0, 96
   477ec:	80 8c 00 0f 	move s4, 35
   477f0:	00 30 2e 00 	or s0, s0, 2956
   477f4:	80 00 00 88 	store_32 s4, (s0)
   477f8:	01 80 00 a8 	load_32 s0, 32(s1)
   477fc:	a0 90 01 14 	cmplt_i s5, s0, 100
   47800:	80 00 f0 c0 	move s4, s0
   47804:	45 00 00 f4 	bnz s5, 8 <ST_updateFaceWidget+0x468>
   47808:	80 90 01 0f 	move s4, 100
   4780c:	b4 04 00 4f 	movehi s5, 52
   47810:	c5 70 47 00 	or s6, s5, 4572
   47814:	a6 00 00 a8 	load_32 s5, (s6)
   47818:	a4 80 12 c1 	cmpne_i s5, s4, s5
   4781c:	c5 03 00 f4 	bnz s5, 120 <ST_updateFaceWidget+0x4f0>
   47820:	80 0c 00 4f 	movehi s4, 96
   47824:	84 00 2e 00 	or s4, s4, 2944
   47828:	a4 00 00 a8 	load_32 s5, (s4)
   4782c:	28 00 00 f6 	b 160 <ST_updateFaceWidget+0x528>
   47830:	80 90 01 0f 	move s4, 100
   47834:	af 8c 28 4f 	movehi s5, 83055
   47838:	c0 0c 00 4f 	movehi s6, 96
   4783c:	84 00 61 c0 	sub_i s4, s4, s2
   47840:	a5 2c 43 00 	or s5, s5, 4299
   47844:	84 14 00 07 	mull_i s4, s4, 5
   47848:	84 80 f2 c1 	mulh_i s4, s4, s5
   4784c:	a4 10 00 09 	ashr s5, s4, 4
   47850:	84 7c 00 0a 	shr s4, s4, 31
   47854:	85 00 52 c0 	add_i s4, s5, s4
   47858:	a6 00 2e 00 	or s5, s6, 2944
   4785c:	84 0c 00 0b 	shl s4, s4, 3
   47860:	85 00 00 88 	store_32 s4, (s5)
   47864:	43 00 00 88 	store_32 s2, (s3)
   47868:	40 0c 00 4f 	movehi s2, 96
   4786c:	64 14 00 05 	add_i s3, s4, 5
   47870:	42 20 2e 00 	or s2, s2, 2952
   47874:	62 00 00 88 	store_32 s3, (s2)
   47878:	78 00 00 a8 	load_32 s3, (s24)
   4787c:	43 18 00 12 	cmpgt_i s2, s3, 6
   47880:	82 f1 ff f5 	bnz s2, -464 <ST_updateFaceWidget+0x30c>
   47884:	24 00 00 f6 	b 144 <ST_updateFaceWidget+0x570>
   47888:	62 80 61 c1 	cmpgt_u s3, s2, s3
   4788c:	e4 fa ff f5 	bnz s4, -164 <ST_updateFaceWidget+0x444>
   47890:	d5 ff ff f7 	b -172 <ST_updateFaceWidget+0x440>
   47894:	a0 90 01 0f 	move s5, 100
   47898:	ef 8c 28 4f 	movehi s7, 83055
   4789c:	00 0d 00 4f 	movehi s8, 96
   478a0:	a5 00 62 c0 	sub_i s5, s5, s4
   478a4:	e7 2c 43 00 	or s7, s7, 4299
   478a8:	a5 14 00 07 	mull_i s5, s5, 5
   478ac:	a5 80 f3 c1 	mulh_i s5, s5, s7
   478b0:	e5 10 00 09 	ashr s7, s5, 4
   478b4:	a5 7c 00 0a 	shr s5, s5, 31
   478b8:	a7 80 52 c0 	add_i s5, s7, s5
   478bc:	e8 00 2e 00 	or s7, s8, 2944
   478c0:	a5 0c 00 0b 	shl s5, s5, 3
   478c4:	a7 00 00 88 	store_32 s5, (s7)
   478c8:	86 00 00 88 	store_32 s4, (s6)
   478cc:	df fc 1f 4f 	movehi s6, 65535
   478d0:	80 0c 00 4f 	movehi s4, 96
   478d4:	c6 fc 7f 00 	or s6, s6, 8191
   478d8:	84 20 2e 00 	or s4, s4, 2952
   478dc:	42 00 63 c1 	cmpgt_u s2, s2, s6
   478e0:	a4 00 00 88 	store_32 s5, (s4)
   478e4:	62 00 00 f4 	bnz s2, 12 <ST_updateFaceWidget+0x54c>
   478e8:	45 1c 00 05 	add_i s2, s5, 7
   478ec:	06 00 00 f6 	b 24 <ST_updateFaceWidget+0x560>
   478f0:	43 04 00 01 	and s2, s3, 1
   478f4:	62 00 00 f2 	bz s2, 12 <ST_updateFaceWidget+0x55c>
   478f8:	45 0c 00 05 	add_i s2, s5, 3
   478fc:	02 00 00 f6 	b 8 <ST_updateFaceWidget+0x560>
   47900:	45 10 00 05 	add_i s2, s5, 4
   47904:	44 00 00 88 	store_32 s2, (s4)
   47908:	78 00 00 a8 	load_32 s3, (s24)
   4790c:	43 18 00 12 	cmpgt_i s2, s3, 6
   47910:	02 ed ff f5 	bnz s2, -608 <ST_updateFaceWidget+0x30c>
   47914:	41 70 03 a8 	load_32 s2, 220(s1)
   47918:	22 03 00 f2 	bz s2, 100 <ST_updateFaceWidget+0x5d8>
   4791c:	34 04 00 4f 	movehi s1, 52
   47920:	21 90 47 00 	or s1, s1, 4580
   47924:	21 00 00 a8 	load_32 s1, (s1)
   47928:	20 80 60 c0 	sub_i s1, s0, s1
   4792c:	21 54 00 14 	cmplt_i s1, s1, 21
   47930:	a1 05 00 f4 	bnz s1, 180 <ST_updateFaceWidget+0x640>
   47934:	20 0c 00 4f 	movehi s1, 96
   47938:	60 90 01 14 	cmplt_i s3, s0, 100
   4793c:	40 1c 00 0f 	move s2, 7
   47940:	58 00 00 88 	store_32 s2, (s24)
   47944:	21 30 2e 00 	or s1, s1, 2956
   47948:	40 8c 00 0f 	move s2, 35
   4794c:	41 00 00 88 	store_32 s2, (s1)
   47950:	43 00 00 f4 	bnz s3, 8 <ST_updateFaceWidget+0x5b4>
   47954:	00 90 01 0f 	move s0, 100
   47958:	34 04 00 4f 	movehi s1, 52
   4795c:	21 70 47 00 	or s1, s1, 4572
   47960:	41 00 00 a8 	load_32 s2, (s1)
   47964:	40 00 11 c1 	cmpne_i s2, s0, s2
   47968:	22 06 00 f4 	bnz s2, 196 <ST_updateFaceWidget+0x688>
   4796c:	00 0c 00 4f 	movehi s0, 96
   47970:	00 00 2e 00 	or s0, s0, 2944
   47974:	40 00 00 a8 	load_32 s2, (s0)
   47978:	3b 00 00 f6 	b 236 <ST_updateFaceWidget+0x6c0>
   4797c:	43 14 00 12 	cmpgt_i s2, s3, 5
   47980:	82 e9 ff f5 	bnz s2, -720 <ST_updateFaceWidget+0x30c>
   47984:	41 f0 02 a8 	load_32 s2, 188(s1)
   47988:	62 09 00 f2 	bz s2, 300 <ST_updateFaceWidget+0x710>
   4798c:	54 04 00 4f 	movehi s2, 52
   47990:	42 80 47 00 	or s2, s2, 4576
   47994:	82 00 00 a8 	load_32 s4, (s2)
   47998:	a4 fc ff 10 	cmpeq_i s5, s4, -1
   4799c:	05 09 00 f4 	bnz s5, 288 <ST_updateFaceWidget+0x718>
   479a0:	84 fc ff 05 	add_i s4, s4, -1
   479a4:	82 00 00 88 	store_32 s4, (s2)
   479a8:	24 09 00 f4 	bnz s4, 292 <ST_updateFaceWidget+0x728>
   479ac:	60 90 01 14 	cmplt_i s3, s0, 100
   479b0:	20 14 00 0f 	move s1, 5
   479b4:	38 00 00 88 	store_32 s1, (s24)
   479b8:	43 00 00 f4 	bnz s3, 8 <ST_updateFaceWidget+0x61c>
   479bc:	00 90 01 0f 	move s0, 100
   479c0:	34 04 00 4f 	movehi s1, 52
   479c4:	21 70 47 00 	or s1, s1, 4572
   479c8:	61 00 00 a8 	load_32 s3, (s1)
   479cc:	60 80 11 c1 	cmpne_i s3, s0, s3
   479d0:	a3 09 00 f4 	bnz s3, 308 <ST_updateFaceWidget+0x760>
   479d4:	00 0c 00 4f 	movehi s0, 96
   479d8:	00 00 2e 00 	or s0, s0, 2944
   479dc:	60 00 00 a8 	load_32 s3, (s0)
   479e0:	57 00 00 f6 	b 348 <ST_updateFaceWidget+0x798>
   479e4:	20 0c 00 4f 	movehi s1, 96
   479e8:	60 90 01 14 	cmplt_i s3, s0, 100
   479ec:	40 18 00 0f 	move s2, 6
   479f0:	58 00 00 88 	store_32 s2, (s24)
   479f4:	21 30 2e 00 	or s1, s1, 2956
   479f8:	40 8c 00 0f 	move s2, 35
   479fc:	41 00 00 88 	store_32 s2, (s1)
   47a00:	43 00 00 f4 	bnz s3, 8 <ST_updateFaceWidget+0x664>
   47a04:	00 90 01 0f 	move s0, 100
   47a08:	34 04 00 4f 	movehi s1, 52
   47a0c:	21 70 47 00 	or s1, s1, 4572
   47a10:	41 00 00 a8 	load_32 s2, (s1)
   47a14:	40 00 11 c1 	cmpne_i s2, s0, s2
   47a18:	c2 02 00 f4 	bnz s2, 88 <ST_updateFaceWidget+0x6cc>
   47a1c:	00 0c 00 4f 	movehi s0, 96
   47a20:	00 00 2e 00 	or s0, s0, 2944
   47a24:	40 00 00 a8 	load_32 s2, (s0)
   47a28:	20 00 00 f6 	b 128 <ST_updateFaceWidget+0x704>
   47a2c:	40 90 01 0f 	move s2, 100
   47a30:	6f 8c 28 4f 	movehi s3, 83055
   47a34:	80 0c 00 4f 	movehi s4, 96
   47a38:	42 00 60 c0 	sub_i s2, s2, s0
   47a3c:	63 2c 43 00 	or s3, s3, 4299
   47a40:	42 14 00 07 	mull_i s2, s2, 5
   47a44:	42 80 f1 c1 	mulh_i s2, s2, s3
   47a48:	62 10 00 09 	ashr s3, s2, 4
   47a4c:	42 7c 00 0a 	shr s2, s2, 31
   47a50:	43 00 51 c0 	add_i s2, s3, s2
   47a54:	64 00 2e 00 	or s3, s4, 2944
   47a58:	42 0c 00 0b 	shl s2, s2, 3
   47a5c:	43 00 00 88 	store_32 s2, (s3)
   47a60:	01 00 00 88 	store_32 s0, (s1)
   47a64:	00 0c 00 4f 	movehi s0, 96
   47a68:	22 14 00 05 	add_i s1, s2, 5
   47a6c:	0f ff ff f7 	b -964 <ST_updateFaceWidget+0x304>
   47a70:	40 90 01 0f 	move s2, 100
   47a74:	6f 8c 28 4f 	movehi s3, 83055
   47a78:	80 0c 00 4f 	movehi s4, 96
   47a7c:	42 00 60 c0 	sub_i s2, s2, s0
   47a80:	63 2c 43 00 	or s3, s3, 4299
   47a84:	42 14 00 07 	mull_i s2, s2, 5
   47a88:	42 80 f1 c1 	mulh_i s2, s2, s3
   47a8c:	62 10 00 09 	ashr s3, s2, 4
   47a90:	42 7c 00 0a 	shr s2, s2, 31
   47a94:	43 00 51 c0 	add_i s2, s3, s2
   47a98:	64 00 2e 00 	or s3, s4, 2944
   47a9c:	42 0c 00 0b 	shl s2, s2, 3
   47aa0:	43 00 00 88 	store_32 s2, (s3)
   47aa4:	01 00 00 88 	store_32 s0, (s1)
   47aa8:	00 0c 00 4f 	movehi s0, 96
   47aac:	22 1c 00 05 	add_i s1, s2, 7
   47ab0:	fe fe ff f7 	b -1032 <ST_updateFaceWidget+0x304>
   47ab4:	00 fc ff 0f 	move s0, -1
   47ab8:	02 00 00 f6 	b 8 <ST_updateFaceWidget+0x71c>
   47abc:	00 18 01 0f 	move s0, 70
   47ac0:	54 04 00 4f 	movehi s2, 52
   47ac4:	42 80 47 00 	or s2, s2, 4576
   47ac8:	02 00 00 88 	store_32 s0, (s2)
   47acc:	03 10 00 12 	cmpgt_i s0, s3, 4
   47ad0:	00 df ff f5 	bnz s0, -1056 <ST_updateFaceWidget+0x30c>
   47ad4:	01 10 03 a0 	load_u8 s0, 196(s1)
   47ad8:	00 08 00 01 	and s0, s0, 2
   47adc:	60 00 00 f4 	bnz s0, 12 <ST_updateFaceWidget+0x744>
   47ae0:	01 b0 00 a8 	load_32 s0, 44(s1)
   47ae4:	60 de ff f3 	bz s0, -1076 <ST_updateFaceWidget+0x30c>
   47ae8:	20 0c 00 4f 	movehi s1, 96
   47aec:	00 10 00 0f 	move s0, 4
   47af0:	18 00 00 88 	store_32 s0, (s24)
   47af4:	00 0c 00 4f 	movehi s0, 96
   47af8:	21 20 2e 00 	or s1, s1, 2952
   47afc:	40 a0 00 0f 	move s2, 40
   47b00:	4f fe ff f7 	b -1732 <ST_updateFaceWidget+0x98>
   47b04:	60 90 01 0f 	move s3, 100
   47b08:	8f 8c 28 4f 	movehi s4, 83055
   47b0c:	a0 0c 00 4f 	movehi s5, 96
   47b10:	63 00 60 c0 	sub_i s3, s3, s0
   47b14:	84 2c 43 00 	or s4, s4, 4299
   47b18:	63 14 00 07 	mull_i s3, s3, 5
   47b1c:	63 00 f2 c1 	mulh_i s3, s3, s4
   47b20:	83 10 00 09 	ashr s4, s3, 4
   47b24:	63 7c 00 0a 	shr s3, s3, 31
   47b28:	64 80 51 c0 	add_i s3, s4, s3
   47b2c:	85 00 2e 00 	or s4, s5, 2944
   47b30:	63 0c 00 0b 	shl s3, s3, 3
   47b34:	64 00 00 88 	store_32 s3, (s4)
   47b38:	01 00 00 88 	store_32 s0, (s1)
   47b3c:	00 0c 00 4f 	movehi s0, 96
   47b40:	20 0c 00 4f 	movehi s1, 96
   47b44:	63 1c 00 05 	add_i s3, s3, 7
   47b48:	00 20 2e 00 	or s0, s0, 2952
   47b4c:	81 30 2e 00 	or s4, s1, 2956
   47b50:	20 04 00 0f 	move s1, 1
   47b54:	60 00 00 88 	store_32 s3, (s0)
   47b58:	24 00 00 88 	store_32 s1, (s4)
   47b5c:	22 00 00 88 	store_32 s1, (s2)
   47b60:	08 ff ff f7 	b -992 <ST_updateFaceWidget+0x3dc>

0000000000047b64 ST_updateWidgets:
   47b64:	de 03 ff 05 	add_i sp, sp, -64
   47b68:	1e f3 00 88 	store_32 s24, 60(sp)
   47b6c:	3e e3 00 88 	store_32 s25, 56(sp)
   47b70:	fe d3 00 88 	store_32 ra, 52(sp)
   47b74:	00 0c 00 4f 	movehi s0, 96
   47b78:	53 04 00 4f 	movehi s2, 51
   47b7c:	20 23 2d 00 	or s25, s0, 2888
   47b80:	42 70 45 00 	or s2, s2, 4444
   47b84:	19 00 00 a8 	load_32 s0, (s25)
   47b88:	20 c0 01 a8 	load_32 s1, 112(s0)
   47b8c:	61 60 00 07 	mull_i s3, s1, 24
   47b90:	42 80 51 c0 	add_i s2, s2, s3
   47b94:	42 00 00 a8 	load_32 s2, (s2)
   47b98:	62 14 00 10 	cmpeq_i s3, s2, 5
   47b9c:	a3 00 00 f4 	bnz s3, 20 <ST_updateWidgets+0x4c>
   47ba0:	42 08 00 0b 	shl s2, s2, 2
   47ba4:	40 00 51 c0 	add_i s2, s0, s2
   47ba8:	42 70 02 05 	add_i s2, s2, 156
   47bac:	03 00 00 f6 	b 12 <ST_updateWidgets+0x54>
   47bb0:	54 04 00 4f 	movehi s2, 52
   47bb4:	42 a0 47 00 	or s2, s2, 4584
   47bb8:	60 0c 00 4f 	movehi s3, 96
   47bbc:	00 03 00 0f 	move s24, 0
   47bc0:	63 e0 2e 00 	or s3, s3, 3000
   47bc4:	43 40 00 88 	store_32 s2, 16(s3)
   47bc8:	23 70 00 88 	store_32 s1, 28(s3)
   47bcc:	20 10 01 a8 	load_32 s1, 68(s0)
   47bd0:	41 00 00 10 	cmpeq_i s2, s1, 0
   47bd4:	20 fc ff 0f 	move s1, -1
   47bd8:	60 80 f0 c0 	move s3, s1
   47bdc:	42 00 00 f4 	bnz s2, 8 <ST_updateWidgets+0x80>
   47be0:	60 00 fc c0 	move s3, s24
   47be4:	40 40 01 a8 	load_32 s2, 80(s0)
   47be8:	42 00 00 10 	cmpeq_i s2, s2, 0
   47bec:	42 00 00 f4 	bnz s2, 8 <ST_updateWidgets+0x90>
   47bf0:	60 0c 00 0f 	move s3, 3
   47bf4:	40 0c 00 4f 	movehi s2, 96
   47bf8:	42 60 2f 00 	or s2, s2, 3032
   47bfc:	62 00 00 88 	store_32 s3, (s2)
   47c00:	60 20 01 a8 	load_32 s3, 72(s0)
   47c04:	83 00 00 10 	cmpeq_i s4, s3, 0
   47c08:	60 80 f0 c0 	move s3, s1
   47c0c:	44 00 00 f4 	bnz s4, 8 <ST_updateWidgets+0xb0>
   47c10:	4f 00 00 f6 	b 316 <ST_updateWidgets+0x1e8>
   47c14:	80 50 01 a8 	load_32 s4, 84(s0)
   47c18:	84 00 00 10 	cmpeq_i s4, s4, 0
   47c1c:	44 00 00 f4 	bnz s4, 8 <ST_updateWidgets+0xc0>
   47c20:	4f 00 00 f6 	b 316 <ST_updateWidgets+0x1f8>
   47c24:	62 10 00 88 	store_32 s3, 4(s2)
   47c28:	60 30 01 a8 	load_32 s3, 76(s0)
   47c2c:	63 00 00 10 	cmpeq_i s3, s3, 0
   47c30:	43 00 00 f4 	bnz s3, 8 <ST_updateWidgets+0xd4>
   47c34:	4f 00 00 f6 	b 316 <ST_updateWidgets+0x20c>
   47c38:	00 60 01 a8 	load_32 s0, 88(s0)
   47c3c:	00 00 00 10 	cmpeq_i s0, s0, 0
   47c40:	40 00 00 f4 	bnz s0, 8 <ST_updateWidgets+0xe4>
   47c44:	20 14 00 0f 	move s1, 5
   47c48:	22 20 00 88 	store_32 s1, 8(s2)
   47c4c:	d6 fd ff f9 	call -2216 <ST_updateFaceWidget>
   47c50:	1a 04 00 4f 	movehi s0, 58
   47c54:	20 0c 00 4f 	movehi s1, 96
   47c58:	40 0c 00 4f 	movehi s2, 96
   47c5c:	00 60 6e 00 	or s0, s0, 7064
   47c60:	21 90 2f 00 	or s1, s1, 3044
   47c64:	42 e0 2c 00 	or s2, s2, 2872
   47c68:	00 00 00 a8 	load_32 s0, (s0)
   47c6c:	60 00 00 10 	cmpeq_i s3, s0, 0
   47c70:	00 00 00 11 	cmpne_i s0, s0, 0
   47c74:	83 04 00 01 	and s4, s3, 1
   47c78:	81 00 00 88 	store_32 s4, (s1)
   47c7c:	22 00 00 a8 	load_32 s1, (s2)
   47c80:	40 0c 00 4f 	movehi s2, 96
   47c84:	42 a0 2f 00 	or s2, s2, 3048
   47c88:	21 00 00 11 	cmpne_i s1, s1, 0
   47c8c:	63 80 10 c0 	and s3, s3, s1
   47c90:	00 80 10 c0 	and s0, s0, s1
   47c94:	3a 04 00 4f 	movehi s1, 58
   47c98:	63 04 00 01 	and s3, s3, 1
   47c9c:	62 00 00 88 	store_32 s3, (s2)
   47ca0:	40 0c 00 4f 	movehi s2, 96
   47ca4:	21 c0 6d 00 	or s1, s1, 7024
   47ca8:	00 04 00 01 	and s0, s0, 1
   47cac:	42 b0 2f 00 	or s2, s2, 3052
   47cb0:	02 00 00 88 	store_32 s0, (s2)
   47cb4:	19 00 00 a8 	load_32 s0, (s25)
   47cb8:	21 00 00 a8 	load_32 s1, (s1)
   47cbc:	40 80 01 a8 	load_32 s2, 96(s0)
   47cc0:	61 00 00 10 	cmpeq_i s3, s1, 0
   47cc4:	43 00 00 f4 	bnz s3, 8 <ST_updateWidgets+0x168>
   47cc8:	02 00 00 f6 	b 8 <ST_updateWidgets+0x16c>
   47ccc:	58 00 61 c0 	sub_i s2, s24, s2
   47cd0:	60 90 01 a8 	load_32 s3, 100(s0)
   47cd4:	81 04 00 10 	cmpeq_i s4, s1, 1
   47cd8:	44 00 00 f4 	bnz s4, 8 <ST_updateWidgets+0x17c>
   47cdc:	02 00 00 f6 	b 8 <ST_updateWidgets+0x180>
   47ce0:	78 80 61 c0 	sub_i s3, s24, s3
   47ce4:	42 80 51 c0 	add_i s2, s2, s3
   47ce8:	60 a0 01 a8 	load_32 s3, 104(s0)
   47cec:	81 08 00 10 	cmpeq_i s4, s1, 2
   47cf0:	44 00 00 f4 	bnz s4, 8 <ST_updateWidgets+0x194>
   47cf4:	02 00 00 f6 	b 8 <ST_updateWidgets+0x198>
   47cf8:	78 80 61 c0 	sub_i s3, s24, s3
   47cfc:	00 b0 01 a8 	load_32 s0, 108(s0)
   47d00:	42 80 51 c0 	add_i s2, s2, s3
   47d04:	21 0c 00 10 	cmpeq_i s1, s1, 3
   47d08:	41 00 00 f4 	bnz s1, 8 <ST_updateWidgets+0x1ac>
   47d0c:	02 00 00 f6 	b 8 <ST_updateWidgets+0x1b0>
   47d10:	18 00 60 c0 	sub_i s0, s24, s0
   47d14:	20 0c 00 4f 	movehi s1, 96
   47d18:	60 0c 00 4f 	movehi s3, 96
   47d1c:	02 00 50 c0 	add_i s0, s2, s0
   47d20:	21 c0 2f 00 	or s1, s1, 3056
   47d24:	63 d0 2f 00 	or s3, s3, 3060
   47d28:	01 00 00 88 	store_32 s0, (s1)
   47d2c:	03 00 00 a8 	load_32 s0, (s3)
   47d30:	00 fc ff 05 	add_i s0, s0, -1
   47d34:	03 00 00 88 	store_32 s0, (s3)
   47d38:	fe d3 00 a8 	load_32 ra, 52(sp)
   47d3c:	3e e3 00 a8 	load_32 s25, 56(sp)
   47d40:	1e f3 00 a8 	load_32 s24, 60(sp)
   47d44:	de 03 01 05 	add_i sp, sp, 64
   47d48:	1f 00 00 f0 	ret
   47d4c:	60 04 00 0f 	move s3, 1
   47d50:	80 50 01 a8 	load_32 s4, 84(s0)
   47d54:	84 00 00 10 	cmpeq_i s4, s4, 0
   47d58:	64 f6 ff f5 	bnz s4, -308 <ST_updateWidgets+0xc0>
   47d5c:	60 10 00 0f 	move s3, 4
   47d60:	62 10 00 88 	store_32 s3, 4(s2)
   47d64:	60 30 01 a8 	load_32 s3, 76(s0)
   47d68:	63 00 00 10 	cmpeq_i s3, s3, 0
   47d6c:	63 f6 ff f5 	bnz s3, -308 <ST_updateWidgets+0xd4>
   47d70:	20 08 00 0f 	move s1, 2
   47d74:	00 60 01 a8 	load_32 s0, 88(s0)
   47d78:	00 00 00 10 	cmpeq_i s0, s0, 0
   47d7c:	60 f6 ff f5 	bnz s0, -308 <ST_updateWidgets+0xe4>
   47d80:	b1 ff ff f7 	b -316 <ST_updateWidgets+0xe0>

0000000000047d84 ST_Ticker:
   47d84:	de 03 ff 05 	add_i sp, sp, -64
   47d88:	1e f3 00 88 	store_32 s24, 60(sp)
   47d8c:	3e e3 00 88 	store_32 s25, 56(sp)
   47d90:	fe d3 00 88 	store_32 ra, 52(sp)
   47d94:	00 0c 00 4f 	movehi s0, 96
   47d98:	00 e0 2f 00 	or s0, s0, 3064
   47d9c:	20 00 00 a8 	load_32 s1, (s0)
   47da0:	21 04 00 05 	add_i s1, s1, 1
   47da4:	20 00 00 88 	store_32 s1, (s0)
   47da8:	5e 51 ff f9 	call -178824 <M_Random>
   47dac:	20 0c 00 4f 	movehi s1, 96
   47db0:	40 0c 00 4f 	movehi s2, 96
   47db4:	21 d0 2e 00 	or s1, s1, 2996
   47db8:	22 23 2d 00 	or s25, s2, 2888
   47dbc:	53 04 00 4f 	movehi s2, 51
   47dc0:	01 00 00 88 	store_32 s0, (s1)
   47dc4:	19 00 00 a8 	load_32 s0, (s25)
   47dc8:	42 70 45 00 	or s2, s2, 4444
   47dcc:	20 c0 01 a8 	load_32 s1, 112(s0)
   47dd0:	61 60 00 07 	mull_i s3, s1, 24
   47dd4:	42 80 51 c0 	add_i s2, s2, s3
   47dd8:	42 00 00 a8 	load_32 s2, (s2)
   47ddc:	62 14 00 10 	cmpeq_i s3, s2, 5
   47de0:	a3 00 00 f4 	bnz s3, 20 <ST_Ticker+0x70>
   47de4:	42 08 00 0b 	shl s2, s2, 2
   47de8:	40 00 51 c0 	add_i s2, s0, s2
   47dec:	42 70 02 05 	add_i s2, s2, 156
   47df0:	03 00 00 f6 	b 12 <ST_Ticker+0x78>
   47df4:	54 04 00 4f 	movehi s2, 52
   47df8:	42 a0 47 00 	or s2, s2, 4584
   47dfc:	60 0c 00 4f 	movehi s3, 96
   47e00:	00 03 00 0f 	move s24, 0
   47e04:	63 e0 2e 00 	or s3, s3, 3000
   47e08:	43 40 00 88 	store_32 s2, 16(s3)
   47e0c:	23 70 00 88 	store_32 s1, 28(s3)
   47e10:	20 10 01 a8 	load_32 s1, 68(s0)
   47e14:	41 00 00 10 	cmpeq_i s2, s1, 0
   47e18:	20 fc ff 0f 	move s1, -1
   47e1c:	60 80 f0 c0 	move s3, s1
   47e20:	42 00 00 f4 	bnz s2, 8 <ST_Ticker+0xa4>
   47e24:	60 00 fc c0 	move s3, s24
   47e28:	40 40 01 a8 	load_32 s2, 80(s0)
   47e2c:	42 00 00 10 	cmpeq_i s2, s2, 0
   47e30:	42 00 00 f4 	bnz s2, 8 <ST_Ticker+0xb4>
   47e34:	60 0c 00 0f 	move s3, 3
   47e38:	40 0c 00 4f 	movehi s2, 96
   47e3c:	42 60 2f 00 	or s2, s2, 3032
   47e40:	62 00 00 88 	store_32 s3, (s2)
   47e44:	60 20 01 a8 	load_32 s3, 72(s0)
   47e48:	83 00 00 10 	cmpeq_i s4, s3, 0
   47e4c:	60 80 f0 c0 	move s3, s1
   47e50:	44 00 00 f4 	bnz s4, 8 <ST_Ticker+0xd4>
   47e54:	53 00 00 f6 	b 332 <ST_Ticker+0x21c>
   47e58:	80 50 01 a8 	load_32 s4, 84(s0)
   47e5c:	84 00 00 10 	cmpeq_i s4, s4, 0
   47e60:	44 00 00 f4 	bnz s4, 8 <ST_Ticker+0xe4>
   47e64:	53 00 00 f6 	b 332 <ST_Ticker+0x22c>
   47e68:	62 10 00 88 	store_32 s3, 4(s2)
   47e6c:	60 30 01 a8 	load_32 s3, 76(s0)
   47e70:	63 00 00 10 	cmpeq_i s3, s3, 0
   47e74:	43 00 00 f4 	bnz s3, 8 <ST_Ticker+0xf8>
   47e78:	53 00 00 f6 	b 332 <ST_Ticker+0x240>
   47e7c:	00 60 01 a8 	load_32 s0, 88(s0)
   47e80:	00 00 00 10 	cmpeq_i s0, s0, 0
   47e84:	40 00 00 f4 	bnz s0, 8 <ST_Ticker+0x108>
   47e88:	20 14 00 0f 	move s1, 5
   47e8c:	22 20 00 88 	store_32 s1, 8(s2)
   47e90:	45 fd ff f9 	call -2796 <ST_updateFaceWidget>
   47e94:	1a 04 00 4f 	movehi s0, 58
   47e98:	20 0c 00 4f 	movehi s1, 96
   47e9c:	40 0c 00 4f 	movehi s2, 96
   47ea0:	00 60 6e 00 	or s0, s0, 7064
   47ea4:	21 90 2f 00 	or s1, s1, 3044
   47ea8:	42 e0 2c 00 	or s2, s2, 2872
   47eac:	00 00 00 a8 	load_32 s0, (s0)
   47eb0:	60 00 00 10 	cmpeq_i s3, s0, 0
   47eb4:	00 00 00 11 	cmpne_i s0, s0, 0
   47eb8:	83 04 00 01 	and s4, s3, 1
   47ebc:	81 00 00 88 	store_32 s4, (s1)
   47ec0:	22 00 00 a8 	load_32 s1, (s2)
   47ec4:	40 0c 00 4f 	movehi s2, 96
   47ec8:	42 a0 2f 00 	or s2, s2, 3048
   47ecc:	21 00 00 11 	cmpne_i s1, s1, 0
   47ed0:	63 80 10 c0 	and s3, s3, s1
   47ed4:	00 80 10 c0 	and s0, s0, s1
   47ed8:	3a 04 00 4f 	movehi s1, 58
   47edc:	63 04 00 01 	and s3, s3, 1
   47ee0:	62 00 00 88 	store_32 s3, (s2)
   47ee4:	40 0c 00 4f 	movehi s2, 96
   47ee8:	21 c0 6d 00 	or s1, s1, 7024
   47eec:	00 04 00 01 	and s0, s0, 1
   47ef0:	42 b0 2f 00 	or s2, s2, 3052
   47ef4:	02 00 00 88 	store_32 s0, (s2)
   47ef8:	19 00 00 a8 	load_32 s0, (s25)
   47efc:	21 00 00 a8 	load_32 s1, (s1)
   47f00:	40 80 01 a8 	load_32 s2, 96(s0)
   47f04:	61 00 00 10 	cmpeq_i s3, s1, 0
   47f08:	43 00 00 f4 	bnz s3, 8 <ST_Ticker+0x18c>
   47f0c:	02 00 00 f6 	b 8 <ST_Ticker+0x190>
   47f10:	58 00 61 c0 	sub_i s2, s24, s2
   47f14:	60 90 01 a8 	load_32 s3, 100(s0)
   47f18:	81 04 00 10 	cmpeq_i s4, s1, 1
   47f1c:	44 00 00 f4 	bnz s4, 8 <ST_Ticker+0x1a0>
   47f20:	02 00 00 f6 	b 8 <ST_Ticker+0x1a4>
   47f24:	78 80 61 c0 	sub_i s3, s24, s3
   47f28:	43 00 51 c0 	add_i s2, s3, s2
   47f2c:	60 a0 01 a8 	load_32 s3, 104(s0)
   47f30:	81 08 00 10 	cmpeq_i s4, s1, 2
   47f34:	44 00 00 f4 	bnz s4, 8 <ST_Ticker+0x1b8>
   47f38:	02 00 00 f6 	b 8 <ST_Ticker+0x1bc>
   47f3c:	78 80 61 c0 	sub_i s3, s24, s3
   47f40:	42 80 51 c0 	add_i s2, s2, s3
   47f44:	61 0c 00 10 	cmpeq_i s3, s1, 3
   47f48:	20 b0 01 a8 	load_32 s1, 108(s0)
   47f4c:	43 00 00 f4 	bnz s3, 8 <ST_Ticker+0x1d0>
   47f50:	02 00 00 f6 	b 8 <ST_Ticker+0x1d4>
   47f54:	38 80 60 c0 	sub_i s1, s24, s1
   47f58:	60 0c 00 4f 	movehi s3, 96
   47f5c:	80 0c 00 4f 	movehi s4, 96
   47f60:	22 80 50 c0 	add_i s1, s2, s1
   47f64:	63 c0 2f 00 	or s3, s3, 3056
   47f68:	84 d0 2f 00 	or s4, s4, 3060
   47f6c:	54 04 00 4f 	movehi s2, 52
   47f70:	23 00 00 88 	store_32 s1, (s3)
   47f74:	24 00 00 a8 	load_32 s1, (s4)
   47f78:	42 90 47 00 	or s2, s2, 4580
   47f7c:	21 fc ff 05 	add_i s1, s1, -1
   47f80:	24 00 00 88 	store_32 s1, (s4)
   47f84:	00 80 00 a8 	load_32 s0, 32(s0)
   47f88:	02 00 00 88 	store_32 s0, (s2)
   47f8c:	fe d3 00 a8 	load_32 ra, 52(sp)
   47f90:	3e e3 00 a8 	load_32 s25, 56(sp)
   47f94:	1e f3 00 a8 	load_32 s24, 60(sp)
   47f98:	de 03 01 05 	add_i sp, sp, 64
   47f9c:	1f 00 00 f0 	ret
   47fa0:	60 04 00 0f 	move s3, 1
   47fa4:	80 50 01 a8 	load_32 s4, 84(s0)
   47fa8:	84 00 00 10 	cmpeq_i s4, s4, 0
   47fac:	e4 f5 ff f5 	bnz s4, -324 <ST_Ticker+0xe4>
   47fb0:	60 10 00 0f 	move s3, 4
   47fb4:	62 10 00 88 	store_32 s3, 4(s2)
   47fb8:	60 30 01 a8 	load_32 s3, 76(s0)
   47fbc:	63 00 00 10 	cmpeq_i s3, s3, 0
   47fc0:	e3 f5 ff f5 	bnz s3, -324 <ST_Ticker+0xf8>
   47fc4:	20 08 00 0f 	move s1, 2
   47fc8:	00 60 01 a8 	load_32 s0, 88(s0)
   47fcc:	00 00 00 10 	cmpeq_i s0, s0, 0
   47fd0:	e0 f5 ff f5 	bnz s0, -324 <ST_Ticker+0x108>
   47fd4:	ad ff ff f7 	b -332 <ST_Ticker+0x104>

0000000000047fd8 ST_doPaletteStuff:
   47fd8:	de 03 ff 05 	add_i sp, sp, -64
   47fdc:	1e f3 00 88 	store_32 s24, 60(sp)
   47fe0:	fe e3 00 88 	store_32 ra, 56(sp)
   47fe4:	00 0c 00 4f 	movehi s0, 96
   47fe8:	00 20 2d 00 	or s0, s0, 2888
   47fec:	00 00 00 a8 	load_32 s0, (s0)
   47ff0:	20 70 03 a8 	load_32 s1, 220(s0)
   47ff4:	40 c0 00 a8 	load_32 s2, 48(s0)
   47ff8:	02 01 00 f2 	bz s2, 32 <ST_doPaletteStuff+0x40>
   47ffc:	60 30 00 0f 	move s3, 12
   48000:	42 18 00 09 	ashr s2, s2, 6
   48004:	43 00 61 c0 	sub_i s2, s3, s2
   48008:	62 80 20 c1 	cmpgt_i s3, s2, s1
   4800c:	43 00 00 f4 	bnz s3, 8 <ST_doPaletteStuff+0x3c>
   48010:	40 80 f0 c0 	move s2, s1
   48014:	20 00 f1 c0 	move s1, s2
   48018:	01 01 00 f2 	bz s1, 32 <ST_doPaletteStuff+0x60>
   4801c:	01 1c 00 05 	add_i s0, s1, 7
   48020:	00 0c 00 09 	ashr s0, s0, 3
   48024:	20 1c 00 14 	cmplt_i s1, s0, 7
   48028:	41 00 00 f4 	bnz s1, 8 <ST_doPaletteStuff+0x58>
   4802c:	00 1c 00 0f 	move s0, 7
   48030:	00 07 00 05 	add_i s24, s0, 1
   48034:	12 00 00 f6 	b 72 <ST_doPaletteStuff+0xa4>
   48038:	20 80 03 a8 	load_32 s1, 224(s0)
   4803c:	01 01 00 f2 	bz s1, 32 <ST_doPaletteStuff+0x84>
   48040:	01 1c 00 05 	add_i s0, s1, 7
   48044:	00 0c 00 09 	ashr s0, s0, 3
   48048:	20 0c 00 14 	cmplt_i s1, s0, 3
   4804c:	41 00 00 f4 	bnz s1, 8 <ST_doPaletteStuff+0x7c>
   48050:	00 0c 00 0f 	move s0, 3
   48054:	00 27 00 05 	add_i s24, s0, 9
   48058:	09 00 00 f6 	b 36 <ST_doPaletteStuff+0xa4>
   4805c:	00 e0 00 a8 	load_32 s0, 56(s0)
   48060:	20 04 02 14 	cmplt_i s1, s0, 129
   48064:	61 00 00 f4 	bnz s1, 12 <ST_doPaletteStuff+0x98>
   48068:	00 37 00 0f 	move s24, 13
   4806c:	04 00 00 f6 	b 16 <ST_doPaletteStuff+0xa4>
   48070:	00 70 00 0b 	shl s0, s0, 28
   48074:	00 7c 00 09 	ashr s0, s0, 31
   48078:	00 37 00 01 	and s24, s0, 13
   4807c:	00 0c 00 4f 	movehi s0, 96
   48080:	00 f0 2f 00 	or s0, s0, 3068
   48084:	20 00 00 a8 	load_32 s1, (s0)
   48088:	38 80 00 c1 	cmpeq_i s1, s24, s1
   4808c:	41 01 00 f4 	bnz s1, 40 <ST_doPaletteStuff+0xdc>
   48090:	20 0c 00 4f 	movehi s1, 96
   48094:	00 03 00 88 	store_32 s24, (s0)
   48098:	21 00 30 00 	or s1, s1, 3072
   4809c:	01 00 00 a8 	load_32 s0, (s1)
   480a0:	20 94 01 0f 	move s1, 101
   480a4:	5d db ff f9 	call -37516 <W_CacheLumpNum>
   480a8:	38 00 0c 07 	mull_i s1, s24, 768
   480ac:	00 80 50 c0 	add_i s0, s0, s1
   480b0:	52 19 ff f9 	call -236216 <I_SetPalette>
   480b4:	fe e3 00 a8 	load_32 ra, 56(sp)
   480b8:	1e f3 00 a8 	load_32 s24, 60(sp)
   480bc:	de 03 01 05 	add_i sp, sp, 64
   480c0:	1f 00 00 f0 	ret

00000000000480c4 ST_drawWidgets:
   480c4:	de 03 ff 05 	add_i sp, sp, -64
   480c8:	1e f3 00 88 	store_32 s24, 60(sp)
   480cc:	3e e3 00 88 	store_32 s25, 56(sp)
   480d0:	5e d3 00 88 	store_32 s26, 52(sp)
   480d4:	fe c3 00 88 	store_32 ra, 48(sp)
   480d8:	20 0c 00 4f 	movehi s1, 96
   480dc:	5a 04 00 4f 	movehi s2, 58
   480e0:	60 0c 00 4f 	movehi s3, 96
   480e4:	21 e0 2c 00 	or s1, s1, 2872
   480e8:	42 60 6e 00 	or s2, s2, 7064
   480ec:	63 a0 2f 00 	or s3, s3, 3048
   480f0:	21 00 00 a8 	load_32 s1, (s1)
   480f4:	42 00 00 a8 	load_32 s2, (s2)
   480f8:	00 03 f0 c0 	move s24, s0
   480fc:	21 00 00 11 	cmpne_i s1, s1, 0
   48100:	02 00 00 10 	cmpeq_i s0, s2, 0
   48104:	42 00 00 11 	cmpne_i s2, s2, 0
   48108:	01 00 10 c0 	and s0, s1, s0
   4810c:	21 00 11 c0 	and s1, s1, s2
   48110:	40 0c 00 4f 	movehi s2, 96
   48114:	00 04 00 01 	and s0, s0, 1
   48118:	03 00 00 88 	store_32 s0, (s3)
   4811c:	01 04 00 01 	and s0, s1, 1
   48120:	42 b0 2f 00 	or s2, s2, 3052
   48124:	02 00 00 88 	store_32 s0, (s2)
   48128:	00 0c 00 4f 	movehi s0, 96
   4812c:	20 00 fc c0 	move s1, s24
   48130:	00 e0 2e 00 	or s0, s0, 3000
   48134:	fb f9 ff f9 	call -6164 <STlib_updateNum>
   48138:	00 0c 00 4f 	movehi s0, 96
   4813c:	20 13 30 00 	or s25, s0, 3076
   48140:	00 80 fc c0 	move s0, s25
   48144:	20 00 fc c0 	move s1, s24
   48148:	f6 f9 ff f9 	call -6184 <STlib_updateNum>
   4814c:	00 0c 00 4f 	movehi s0, 96
   48150:	40 13 32 00 	or s26, s0, 3204
   48154:	00 00 fd c0 	move s0, s26
   48158:	20 00 fc c0 	move s1, s24
   4815c:	f1 f9 ff f9 	call -6204 <STlib_updateNum>
   48160:	19 80 00 05 	add_i s0, s25, 32
   48164:	20 00 fc c0 	move s1, s24
   48168:	ee f9 ff f9 	call -6216 <STlib_updateNum>
   4816c:	1a 80 00 05 	add_i s0, s26, 32
   48170:	20 00 fc c0 	move s1, s24
   48174:	eb f9 ff f9 	call -6228 <STlib_updateNum>
   48178:	19 00 01 05 	add_i s0, s25, 64
   4817c:	20 00 fc c0 	move s1, s24
   48180:	e8 f9 ff f9 	call -6240 <STlib_updateNum>
   48184:	1a 00 01 05 	add_i s0, s26, 64
   48188:	20 00 fc c0 	move s1, s24
   4818c:	e5 f9 ff f9 	call -6252 <STlib_updateNum>
   48190:	19 80 01 05 	add_i s0, s25, 96
   48194:	20 00 fc c0 	move s1, s24
   48198:	e2 f9 ff f9 	call -6264 <STlib_updateNum>
   4819c:	1a 80 01 05 	add_i s0, s26, 96
   481a0:	20 00 fc c0 	move s1, s24
   481a4:	df f9 ff f9 	call -6276 <STlib_updateNum>
   481a8:	00 0c 00 4f 	movehi s0, 96
   481ac:	20 00 fc c0 	move s1, s24
   481b0:	00 10 34 00 	or s0, s0, 3332
   481b4:	ef f9 ff f9 	call -6212 <STlib_updatePercent>
   481b8:	00 0c 00 4f 	movehi s0, 96
   481bc:	20 00 fc c0 	move s1, s24
   481c0:	00 a0 34 00 	or s0, s0, 3368
   481c4:	eb f9 ff f9 	call -6228 <STlib_updatePercent>
   481c8:	00 0c 00 4f 	movehi s0, 96
   481cc:	20 00 fc c0 	move s1, s24
   481d0:	00 30 35 00 	or s0, s0, 3404
   481d4:	54 fa ff f9 	call -5808 <STlib_updateBinIcon>
   481d8:	00 0c 00 4f 	movehi s0, 96
   481dc:	20 a3 35 00 	or s25, s0, 3432
   481e0:	00 80 fc c0 	move s0, s25
   481e4:	20 00 fc c0 	move s1, s24
   481e8:	00 fa ff f9 	call -6144 <STlib_updateMultIcon>
   481ec:	19 70 00 05 	add_i s0, s25, 28
   481f0:	20 00 fc c0 	move s1, s24
   481f4:	fd f9 ff f9 	call -6156 <STlib_updateMultIcon>
   481f8:	19 e0 00 05 	add_i s0, s25, 56
   481fc:	20 00 fc c0 	move s1, s24
   48200:	fa f9 ff f9 	call -6168 <STlib_updateMultIcon>
   48204:	19 50 01 05 	add_i s0, s25, 84
   48208:	20 00 fc c0 	move s1, s24
   4820c:	f7 f9 ff f9 	call -6180 <STlib_updateMultIcon>
   48210:	19 c0 01 05 	add_i s0, s25, 112
   48214:	20 00 fc c0 	move s1, s24
   48218:	f4 f9 ff f9 	call -6192 <STlib_updateMultIcon>
   4821c:	19 30 02 05 	add_i s0, s25, 140
   48220:	20 00 fc c0 	move s1, s24
   48224:	f1 f9 ff f9 	call -6204 <STlib_updateMultIcon>
   48228:	00 0c 00 4f 	movehi s0, 96
   4822c:	20 00 fc c0 	move s1, s24
   48230:	00 40 38 00 	or s0, s0, 3600
   48234:	ed f9 ff f9 	call -6220 <STlib_updateMultIcon>
   48238:	00 0c 00 4f 	movehi s0, 96
   4823c:	20 b3 38 00 	or s25, s0, 3628
   48240:	00 80 fc c0 	move s0, s25
   48244:	20 00 fc c0 	move s1, s24
   48248:	e8 f9 ff f9 	call -6240 <STlib_updateMultIcon>
   4824c:	19 70 00 05 	add_i s0, s25, 28
   48250:	20 00 fc c0 	move s1, s24
   48254:	e5 f9 ff f9 	call -6252 <STlib_updateMultIcon>
   48258:	19 e0 00 05 	add_i s0, s25, 56
   4825c:	20 00 fc c0 	move s1, s24
   48260:	e2 f9 ff f9 	call -6264 <STlib_updateMultIcon>
   48264:	00 0c 00 4f 	movehi s0, 96
   48268:	20 00 fc c0 	move s1, s24
   4826c:	00 00 3a 00 	or s0, s0, 3712
   48270:	ac f9 ff f9 	call -6480 <STlib_updateNum>
   48274:	fe c3 00 a8 	load_32 ra, 48(sp)
   48278:	5e d3 00 a8 	load_32 s26, 52(sp)
   4827c:	3e e3 00 a8 	load_32 s25, 56(sp)
   48280:	1e f3 00 a8 	load_32 s24, 60(sp)
   48284:	de 03 01 05 	add_i sp, sp, 64
   48288:	1f 00 00 f0 	ret

000000000004828c ST_doRefresh:
   4828c:	de 03 ff 05 	add_i sp, sp, -64
   48290:	fe f3 00 88 	store_32 ra, 60(sp)
   48294:	00 0c 00 4f 	movehi s0, 96
   48298:	20 0c 00 4f 	movehi s1, 96
   4829c:	40 00 00 0f 	move s2, 0
   482a0:	00 10 2d 00 	or s0, s0, 2884
   482a4:	21 e0 2c 00 	or s1, s1, 2872
   482a8:	40 00 00 88 	store_32 s2, (s0)
   482ac:	01 00 00 a8 	load_32 s0, (s1)
   482b0:	80 03 00 f2 	bz s0, 112 <ST_doRefresh+0x94>
   482b4:	00 0c 00 4f 	movehi s0, 96
   482b8:	40 10 00 0f 	move s2, 4
   482bc:	00 f0 2c 00 	or s0, s0, 2876
   482c0:	60 00 00 a8 	load_32 s3, (s0)
   482c4:	00 00 00 0f 	move s0, 0
   482c8:	20 00 f0 c0 	move s1, s0
   482cc:	7f f7 ff f9 	call -8708 <V_DrawPatch>
   482d0:	1b 04 00 4f 	movehi s0, 59
   482d4:	00 c0 01 00 	or s0, s0, 112
   482d8:	00 00 00 a8 	load_32 s0, (s0)
   482dc:	00 01 00 f2 	bz s0, 32 <ST_doRefresh+0x70>
   482e0:	00 0c 00 4f 	movehi s0, 96
   482e4:	20 00 00 0f 	move s1, 0
   482e8:	40 10 00 0f 	move s2, 4
   482ec:	00 00 2d 00 	or s0, s0, 2880
   482f0:	60 00 00 a8 	load_32 s3, (s0)
   482f4:	00 3c 02 0f 	move s0, 143
   482f8:	74 f7 ff f9 	call -8752 <V_DrawPatch>
   482fc:	00 00 00 0f 	move s0, 0
   48300:	40 10 00 0f 	move s2, 4
   48304:	60 00 05 0f 	move s3, 320
   48308:	20 00 f0 c0 	move s1, s0
   4830c:	a0 00 f0 c0 	move s5, s0
   48310:	80 80 00 0f 	move s4, 32
   48314:	c0 a0 02 0f 	move s6, 168
   48318:	e0 00 f0 c0 	move s7, s0
   4831c:	03 f7 ff f9 	call -9204 <V_CopyRect>
   48320:	00 04 00 0f 	move s0, 1
   48324:	68 ff ff f9 	call -608 <ST_drawWidgets>
   48328:	fe f3 00 a8 	load_32 ra, 60(sp)
   4832c:	de 03 01 05 	add_i sp, sp, 64
   48330:	1f 00 00 f0 	ret

0000000000048334 ST_diffDraw:
   48334:	de 03 ff 05 	add_i sp, sp, -64
   48338:	fe f3 00 88 	store_32 ra, 60(sp)
   4833c:	00 00 00 0f 	move s0, 0
   48340:	61 ff ff f9 	call -636 <ST_drawWidgets>
   48344:	fe f3 00 a8 	load_32 ra, 60(sp)
   48348:	de 03 01 05 	add_i sp, sp, 64
   4834c:	1f 00 00 f0 	ret

0000000000048350 ST_Drawer:
   48350:	de 03 ff 05 	add_i sp, sp, -64
   48354:	1e f3 00 88 	store_32 s24, 60(sp)
   48358:	3e e3 00 88 	store_32 s25, 56(sp)
   4835c:	5e d3 00 88 	store_32 s26, 52(sp)
   48360:	fe c3 00 88 	store_32 ra, 48(sp)
   48364:	40 0c 00 4f 	movehi s2, 96
   48368:	60 0c 00 4f 	movehi s3, 96
   4836c:	00 00 00 10 	cmpeq_i s0, s0, 0
   48370:	42 d0 21 00 	or s2, s2, 2164
   48374:	80 0c 00 4f 	movehi s4, 96
   48378:	03 e3 2c 00 	or s24, s3, 2872
   4837c:	42 00 00 a8 	load_32 s2, (s2)
   48380:	24 13 2d 00 	or s25, s4, 2884
   48384:	42 00 00 11 	cmpne_i s2, s2, 0
   48388:	00 00 01 c0 	or s0, s0, s2
   4838c:	00 04 00 01 	and s0, s0, 1
   48390:	18 00 00 88 	store_32 s0, (s24)
   48394:	19 00 00 a8 	load_32 s0, (s25)
   48398:	00 80 00 c0 	or s0, s0, s1
   4839c:	20 0c 00 4f 	movehi s1, 96
   483a0:	00 00 00 11 	cmpne_i s0, s0, 0
   483a4:	21 20 2d 00 	or s1, s1, 2888
   483a8:	00 04 00 01 	and s0, s0, 1
   483ac:	19 00 00 88 	store_32 s0, (s25)
   483b0:	21 00 00 a8 	load_32 s1, (s1)
   483b4:	41 70 03 a8 	load_32 s2, 220(s1)
   483b8:	61 c0 00 a8 	load_32 s3, 48(s1)
   483bc:	03 01 00 f2 	bz s3, 32 <ST_Drawer+0x8c>
   483c0:	80 30 00 0f 	move s4, 12
   483c4:	63 18 00 09 	ashr s3, s3, 6
   483c8:	64 80 61 c0 	sub_i s3, s4, s3
   483cc:	83 00 21 c1 	cmpgt_i s4, s3, s2
   483d0:	44 00 00 f4 	bnz s4, 8 <ST_Drawer+0x88>
   483d4:	60 00 f1 c0 	move s3, s2
   483d8:	40 80 f1 c0 	move s2, s3
   483dc:	02 01 00 f2 	bz s2, 32 <ST_Drawer+0xac>
   483e0:	22 1c 00 05 	add_i s1, s2, 7
   483e4:	21 0c 00 09 	ashr s1, s1, 3
   483e8:	41 1c 00 14 	cmplt_i s2, s1, 7
   483ec:	42 00 00 f4 	bnz s2, 8 <ST_Drawer+0xa4>
   483f0:	20 1c 00 0f 	move s1, 7
   483f4:	41 07 00 05 	add_i s26, s1, 1
   483f8:	12 00 00 f6 	b 72 <ST_Drawer+0xf0>
   483fc:	41 80 03 a8 	load_32 s2, 224(s1)
   48400:	02 01 00 f2 	bz s2, 32 <ST_Drawer+0xd0>
   48404:	22 1c 00 05 	add_i s1, s2, 7
   48408:	21 0c 00 09 	ashr s1, s1, 3
   4840c:	41 0c 00 14 	cmplt_i s2, s1, 3
   48410:	42 00 00 f4 	bnz s2, 8 <ST_Drawer+0xc8>
   48414:	20 0c 00 0f 	move s1, 3
   48418:	41 27 00 05 	add_i s26, s1, 9
   4841c:	09 00 00 f6 	b 36 <ST_Drawer+0xf0>
   48420:	21 e0 00 a8 	load_32 s1, 56(s1)
   48424:	41 04 02 14 	cmplt_i s2, s1, 129
   48428:	62 00 00 f4 	bnz s2, 12 <ST_Drawer+0xe4>
   4842c:	40 37 00 0f 	move s26, 13
   48430:	04 00 00 f6 	b 16 <ST_Drawer+0xf0>
   48434:	21 70 00 0b 	shl s1, s1, 28
   48438:	21 7c 00 09 	ashr s1, s1, 31
   4843c:	41 37 00 01 	and s26, s1, 13
   48440:	20 0c 00 4f 	movehi s1, 96
   48444:	21 f0 2f 00 	or s1, s1, 3068
   48448:	41 00 00 a8 	load_32 s2, (s1)
   4844c:	5a 00 01 c1 	cmpeq_i s2, s26, s2
   48450:	62 01 00 f4 	bnz s2, 44 <ST_Drawer+0x12c>
   48454:	00 0c 00 4f 	movehi s0, 96
   48458:	41 03 00 88 	store_32 s26, (s1)
   4845c:	20 94 01 0f 	move s1, 101
   48460:	00 00 30 00 	or s0, s0, 3072
   48464:	00 00 00 a8 	load_32 s0, (s0)
   48468:	6c da ff f9 	call -38480 <W_CacheLumpNum>
   4846c:	3a 00 0c 07 	mull_i s1, s26, 768
   48470:	00 80 50 c0 	add_i s0, s0, s1
   48474:	61 18 ff f9 	call -237180 <I_SetPalette>
   48478:	19 00 00 a8 	load_32 s0, (s25)
   4847c:	40 04 00 f2 	bz s0, 136 <ST_Drawer+0x1b4>
   48480:	00 00 00 0f 	move s0, 0
   48484:	19 00 00 88 	store_32 s0, (s25)
   48488:	18 00 00 a8 	load_32 s0, (s24)
   4848c:	80 03 00 f2 	bz s0, 112 <ST_Drawer+0x1ac>
   48490:	00 0c 00 4f 	movehi s0, 96
   48494:	40 10 00 0f 	move s2, 4
   48498:	00 f0 2c 00 	or s0, s0, 2876
   4849c:	60 00 00 a8 	load_32 s3, (s0)
   484a0:	00 00 00 0f 	move s0, 0
   484a4:	20 00 f0 c0 	move s1, s0
   484a8:	08 f7 ff f9 	call -9184 <V_DrawPatch>
   484ac:	1b 04 00 4f 	movehi s0, 59
   484b0:	00 c0 01 00 	or s0, s0, 112
   484b4:	00 00 00 a8 	load_32 s0, (s0)
   484b8:	00 01 00 f2 	bz s0, 32 <ST_Drawer+0x188>
   484bc:	00 0c 00 4f 	movehi s0, 96
   484c0:	20 00 00 0f 	move s1, 0
   484c4:	40 10 00 0f 	move s2, 4
   484c8:	00 00 2d 00 	or s0, s0, 2880
   484cc:	60 00 00 a8 	load_32 s3, (s0)
   484d0:	00 3c 02 0f 	move s0, 143
   484d4:	fd f6 ff f9 	call -9228 <V_DrawPatch>
   484d8:	00 00 00 0f 	move s0, 0
   484dc:	40 10 00 0f 	move s2, 4
   484e0:	60 00 05 0f 	move s3, 320
   484e4:	20 00 f0 c0 	move s1, s0
   484e8:	a0 00 f0 c0 	move s5, s0
   484ec:	80 80 00 0f 	move s4, 32
   484f0:	c0 a0 02 0f 	move s6, 168
   484f4:	e0 00 f0 c0 	move s7, s0
   484f8:	8c f6 ff f9 	call -9680 <V_CopyRect>
   484fc:	00 04 00 0f 	move s0, 1
   48500:	02 00 00 f6 	b 8 <ST_Drawer+0x1b8>
   48504:	00 00 00 0f 	move s0, 0
   48508:	ef fe ff f9 	call -1092 <ST_drawWidgets>
   4850c:	fe c3 00 a8 	load_32 ra, 48(sp)
   48510:	5e d3 00 a8 	load_32 s26, 52(sp)
   48514:	3e e3 00 a8 	load_32 s25, 56(sp)
   48518:	1e f3 00 a8 	load_32 s24, 60(sp)
   4851c:	de 03 01 05 	add_i sp, sp, 64
   48520:	1f 00 00 f0 	ret

0000000000048524 ST_loadGraphics:
   48524:	de 03 fd 05 	add_i sp, sp, -192
   48528:	1e f3 02 88 	store_32 s24, 188(sp)
   4852c:	3e e3 02 88 	store_32 s25, 184(sp)
   48530:	5e d3 02 88 	store_32 s26, 180(sp)
   48534:	7e c3 02 88 	store_32 s27, 176(sp)
   48538:	fe b3 02 88 	store_32 ra, 172(sp)
   4853c:	01 00 00 4f 	movehi s0, 1
   48540:	20 00 00 0f 	move s1, 0
   48544:	3e 20 00 88 	store_32 s1, 8(sp)
   48548:	5e 8f 02 05 	add_i s26, sp, 163
   4854c:	00 0c 37 00 	or s0, s0, 3523
   48550:	00 83 f0 c0 	move s24, s1
   48554:	1e 23 02 88 	store_32 s24, 136(sp)
   48558:	1e 70 02 88 	store_32 s0, 156(sp)
   4855c:	1e 10 00 88 	store_32 s0, 4(sp)
   48560:	5e 03 00 88 	store_32 s26, (sp)
   48564:	29 26 00 f8 	call 39076 <sprintf>
   48568:	60 07 00 0f 	move s27, 1
   4856c:	00 00 fd c0 	move s0, s26
   48570:	20 80 fd c0 	move s1, s27
   48574:	75 da ff f9 	call -38444 <W_CacheLumpName>
   48578:	20 0c 00 4f 	movehi s1, 96
   4857c:	21 80 3a 00 	or s1, s1, 3744
   48580:	3e 40 02 88 	store_32 s1, 144(sp)
   48584:	01 00 00 88 	store_32 s0, (s1)
   48588:	02 00 00 4f 	movehi s0, 2
   4858c:	1e 23 00 88 	store_32 s24, 8(sp)
   48590:	00 18 77 00 	or s0, s0, 7622
   48594:	1e 50 02 88 	store_32 s0, 148(sp)
   48598:	1e 10 00 88 	store_32 s0, 4(sp)
   4859c:	5e 03 00 88 	store_32 s26, (sp)
   485a0:	1a 26 00 f8 	call 39016 <sprintf>
   485a4:	00 00 fd c0 	move s0, s26
   485a8:	20 80 fd c0 	move s1, s27
   485ac:	67 da ff f9 	call -38500 <W_CacheLumpName>
   485b0:	20 0c 00 4f 	movehi s1, 96
   485b4:	21 23 3b 00 	or s25, s1, 3784
   485b8:	19 00 00 88 	store_32 s0, (s25)
   485bc:	3e 63 02 88 	store_32 s25, 152(sp)
   485c0:	7e 23 00 88 	store_32 s27, 8(sp)
   485c4:	1e 70 02 a8 	load_32 s0, 156(sp)
   485c8:	1e 10 00 88 	store_32 s0, 4(sp)
   485cc:	5e 03 00 88 	store_32 s26, (sp)
   485d0:	0e 26 00 f8 	call 38968 <sprintf>
   485d4:	00 00 fd c0 	move s0, s26
   485d8:	20 80 fd c0 	move s1, s27
   485dc:	5b da ff f9 	call -38548 <W_CacheLumpName>
   485e0:	1e 43 02 a8 	load_32 s24, 144(sp)
   485e4:	18 10 00 88 	store_32 s0, 4(s24)
   485e8:	7e 23 00 88 	store_32 s27, 8(sp)
   485ec:	1e 50 02 a8 	load_32 s0, 148(sp)
   485f0:	1e 10 00 88 	store_32 s0, 4(sp)
   485f4:	5e 03 00 88 	store_32 s26, (sp)
   485f8:	04 26 00 f8 	call 38928 <sprintf>
   485fc:	00 00 fd c0 	move s0, s26
   48600:	20 80 fd c0 	move s1, s27
   48604:	7e 13 02 88 	store_32 s27, 132(sp)
   48608:	50 da ff f9 	call -38592 <W_CacheLumpName>
   4860c:	19 10 00 88 	store_32 s0, 4(s25)
   48610:	20 0b 00 0f 	move s25, 2
   48614:	3e 23 00 88 	store_32 s25, 8(sp)
   48618:	3e 03 02 88 	store_32 s25, 128(sp)
   4861c:	1e 70 02 a8 	load_32 s0, 156(sp)
   48620:	1e 10 00 88 	store_32 s0, 4(sp)
   48624:	5e 03 00 88 	store_32 s26, (sp)
   48628:	f8 25 00 f8 	call 38880 <sprintf>
   4862c:	00 00 fd c0 	move s0, s26
   48630:	20 80 fd c0 	move s1, s27
   48634:	45 da ff f9 	call -38636 <W_CacheLumpName>
   48638:	18 20 00 88 	store_32 s0, 8(s24)
   4863c:	3e 23 00 88 	store_32 s25, 8(sp)
   48640:	1e 50 02 a8 	load_32 s0, 148(sp)
   48644:	1e 10 00 88 	store_32 s0, 4(sp)
   48648:	5e 03 00 88 	store_32 s26, (sp)
   4864c:	ef 25 00 f8 	call 38844 <sprintf>
   48650:	00 00 fd c0 	move s0, s26
   48654:	20 80 fd c0 	move s1, s27
   48658:	3c da ff f9 	call -38672 <W_CacheLumpName>
   4865c:	3e 60 02 a8 	load_32 s1, 152(sp)
   48660:	01 20 00 88 	store_32 s0, 8(s1)
   48664:	00 0c 00 0f 	move s0, 3
   48668:	1e 20 00 88 	store_32 s0, 8(sp)
   4866c:	20 03 f0 c0 	move s25, s0
   48670:	3e 33 02 88 	store_32 s25, 140(sp)
   48674:	1e 73 02 a8 	load_32 s24, 156(sp)
   48678:	1e 13 00 88 	store_32 s24, 4(sp)
   4867c:	5e 03 00 88 	store_32 s26, (sp)
   48680:	e2 25 00 f8 	call 38792 <sprintf>
   48684:	00 00 fd c0 	move s0, s26
   48688:	20 80 fd c0 	move s1, s27
   4868c:	2f da ff f9 	call -38724 <W_CacheLumpName>
   48690:	3e 40 02 a8 	load_32 s1, 144(sp)
   48694:	01 30 00 88 	store_32 s0, 12(s1)
   48698:	3e 23 00 88 	store_32 s25, 8(sp)
   4869c:	1e 50 02 a8 	load_32 s0, 148(sp)
   486a0:	1e 10 00 88 	store_32 s0, 4(sp)
   486a4:	5e 03 00 88 	store_32 s26, (sp)
   486a8:	d8 25 00 f8 	call 38752 <sprintf>
   486ac:	00 00 fd c0 	move s0, s26
   486b0:	20 80 fd c0 	move s1, s27
   486b4:	25 da ff f9 	call -38764 <W_CacheLumpName>
   486b8:	3e 60 02 a8 	load_32 s1, 152(sp)
   486bc:	01 30 00 88 	store_32 s0, 12(s1)
   486c0:	00 10 00 0f 	move s0, 4
   486c4:	1e 20 00 88 	store_32 s0, 8(sp)
   486c8:	20 03 f0 c0 	move s25, s0
   486cc:	3e f3 01 88 	store_32 s25, 124(sp)
   486d0:	1e 13 00 88 	store_32 s24, 4(sp)
   486d4:	5e 03 00 88 	store_32 s26, (sp)
   486d8:	cc 25 00 f8 	call 38704 <sprintf>
   486dc:	00 00 fd c0 	move s0, s26
   486e0:	20 80 fd c0 	move s1, s27
   486e4:	19 da ff f9 	call -38812 <W_CacheLumpName>
   486e8:	3e 40 02 a8 	load_32 s1, 144(sp)
   486ec:	01 40 00 88 	store_32 s0, 16(s1)
   486f0:	3e 23 00 88 	store_32 s25, 8(sp)
   486f4:	1e 53 02 a8 	load_32 s24, 148(sp)
   486f8:	1e 13 00 88 	store_32 s24, 4(sp)
   486fc:	5e 03 00 88 	store_32 s26, (sp)
   48700:	c2 25 00 f8 	call 38664 <sprintf>
   48704:	00 00 fd c0 	move s0, s26
   48708:	20 80 fd c0 	move s1, s27
   4870c:	0f da ff f9 	call -38852 <W_CacheLumpName>
   48710:	3e 60 02 a8 	load_32 s1, 152(sp)
   48714:	01 40 00 88 	store_32 s0, 16(s1)
   48718:	00 14 00 0f 	move s0, 5
   4871c:	1e 20 00 88 	store_32 s0, 8(sp)
   48720:	20 03 f0 c0 	move s25, s0
   48724:	3e e3 01 88 	store_32 s25, 120(sp)
   48728:	1e 70 02 a8 	load_32 s0, 156(sp)
   4872c:	1e 10 00 88 	store_32 s0, 4(sp)
   48730:	5e 03 00 88 	store_32 s26, (sp)
   48734:	b5 25 00 f8 	call 38612 <sprintf>
   48738:	00 00 fd c0 	move s0, s26
   4873c:	20 80 fd c0 	move s1, s27
   48740:	02 da ff f9 	call -38904 <W_CacheLumpName>
   48744:	3e 40 02 a8 	load_32 s1, 144(sp)
   48748:	01 50 00 88 	store_32 s0, 20(s1)
   4874c:	3e 23 00 88 	store_32 s25, 8(sp)
   48750:	1e 13 00 88 	store_32 s24, 4(sp)
   48754:	5e 03 00 88 	store_32 s26, (sp)
   48758:	ac 25 00 f8 	call 38576 <sprintf>
   4875c:	00 00 fd c0 	move s0, s26
   48760:	20 80 fd c0 	move s1, s27
   48764:	f9 d9 ff f9 	call -38940 <W_CacheLumpName>
   48768:	3e 60 02 a8 	load_32 s1, 152(sp)
   4876c:	01 50 00 88 	store_32 s0, 20(s1)
   48770:	00 18 00 0f 	move s0, 6
   48774:	1e 20 00 88 	store_32 s0, 8(sp)
   48778:	20 03 f0 c0 	move s25, s0
   4877c:	3e d3 01 88 	store_32 s25, 116(sp)
   48780:	1e 70 02 a8 	load_32 s0, 156(sp)
   48784:	1e 10 00 88 	store_32 s0, 4(sp)
   48788:	5e 03 00 88 	store_32 s26, (sp)
   4878c:	9f 25 00 f8 	call 38524 <sprintf>
   48790:	00 00 fd c0 	move s0, s26
   48794:	20 80 fd c0 	move s1, s27
   48798:	ec d9 ff f9 	call -38992 <W_CacheLumpName>
   4879c:	1e 43 02 a8 	load_32 s24, 144(sp)
   487a0:	18 60 00 88 	store_32 s0, 24(s24)
   487a4:	3e 23 00 88 	store_32 s25, 8(sp)
   487a8:	1e 50 02 a8 	load_32 s0, 148(sp)
   487ac:	1e 10 00 88 	store_32 s0, 4(sp)
   487b0:	5e 03 00 88 	store_32 s26, (sp)
   487b4:	95 25 00 f8 	call 38484 <sprintf>
   487b8:	00 00 fd c0 	move s0, s26
   487bc:	20 80 fd c0 	move s1, s27
   487c0:	e2 d9 ff f9 	call -39032 <W_CacheLumpName>
   487c4:	3e 60 02 a8 	load_32 s1, 152(sp)
   487c8:	01 60 00 88 	store_32 s0, 24(s1)
   487cc:	00 1c 00 0f 	move s0, 7
   487d0:	1e 20 00 88 	store_32 s0, 8(sp)
   487d4:	20 03 f0 c0 	move s25, s0
   487d8:	3e c3 01 88 	store_32 s25, 112(sp)
   487dc:	1e 70 02 a8 	load_32 s0, 156(sp)
   487e0:	1e 10 00 88 	store_32 s0, 4(sp)
   487e4:	5e 03 00 88 	store_32 s26, (sp)
   487e8:	88 25 00 f8 	call 38432 <sprintf>
   487ec:	00 00 fd c0 	move s0, s26
   487f0:	20 80 fd c0 	move s1, s27
   487f4:	d5 d9 ff f9 	call -39084 <W_CacheLumpName>
   487f8:	18 70 00 88 	store_32 s0, 28(s24)
   487fc:	3e 23 00 88 	store_32 s25, 8(sp)
   48800:	3e 53 02 a8 	load_32 s25, 148(sp)
   48804:	3e 13 00 88 	store_32 s25, 4(sp)
   48808:	5e 03 00 88 	store_32 s26, (sp)
   4880c:	7f 25 00 f8 	call 38396 <sprintf>
   48810:	00 00 fd c0 	move s0, s26
   48814:	20 80 fd c0 	move s1, s27
   48818:	cc d9 ff f9 	call -39120 <W_CacheLumpName>
   4881c:	3e 60 02 a8 	load_32 s1, 152(sp)
   48820:	00 23 00 0f 	move s24, 8
   48824:	01 70 00 88 	store_32 s0, 28(s1)
   48828:	1e 23 00 88 	store_32 s24, 8(sp)
   4882c:	1e 70 02 a8 	load_32 s0, 156(sp)
   48830:	1e 10 00 88 	store_32 s0, 4(sp)
   48834:	5e 03 00 88 	store_32 s26, (sp)
   48838:	74 25 00 f8 	call 38352 <sprintf>
   4883c:	00 00 fd c0 	move s0, s26
   48840:	20 80 fd c0 	move s1, s27
   48844:	c1 d9 ff f9 	call -39164 <W_CacheLumpName>
   48848:	3e 40 02 a8 	load_32 s1, 144(sp)
   4884c:	01 80 00 88 	store_32 s0, 32(s1)
   48850:	1e 23 00 88 	store_32 s24, 8(sp)
   48854:	3e 13 00 88 	store_32 s25, 4(sp)
   48858:	5e 03 00 88 	store_32 s26, (sp)
   4885c:	6b 25 00 f8 	call 38316 <sprintf>
   48860:	00 00 fd c0 	move s0, s26
   48864:	20 80 fd c0 	move s1, s27
   48868:	b8 d9 ff f9 	call -39200 <W_CacheLumpName>
   4886c:	3e 63 02 a8 	load_32 s25, 152(sp)
   48870:	00 27 00 0f 	move s24, 9
   48874:	19 80 00 88 	store_32 s0, 32(s25)
   48878:	1e 23 00 88 	store_32 s24, 8(sp)
   4887c:	1e 70 02 a8 	load_32 s0, 156(sp)
   48880:	1e 10 00 88 	store_32 s0, 4(sp)
   48884:	5e 03 00 88 	store_32 s26, (sp)
   48888:	60 25 00 f8 	call 38272 <sprintf>
   4888c:	00 00 fd c0 	move s0, s26
   48890:	20 80 fd c0 	move s1, s27
   48894:	ad d9 ff f9 	call -39244 <W_CacheLumpName>
   48898:	3e 40 02 a8 	load_32 s1, 144(sp)
   4889c:	01 90 00 88 	store_32 s0, 36(s1)
   488a0:	1e 23 00 88 	store_32 s24, 8(sp)
   488a4:	1e 50 02 a8 	load_32 s0, 148(sp)
   488a8:	1e 10 00 88 	store_32 s0, 4(sp)
   488ac:	5e 03 00 88 	store_32 s26, (sp)
   488b0:	56 25 00 f8 	call 38232 <sprintf>
   488b4:	00 00 fd c0 	move s0, s26
   488b8:	20 80 fd c0 	move s1, s27
   488bc:	a3 d9 ff f9 	call -39284 <W_CacheLumpName>
   488c0:	19 90 00 88 	store_32 s0, 36(s25)
   488c4:	00 00 00 4f 	movehi s0, 0
   488c8:	20 80 fd c0 	move s1, s27
   488cc:	00 e8 6b 00 	or s0, s0, 6906
   488d0:	9e d9 ff f9 	call -39304 <W_CacheLumpName>
   488d4:	20 0c 00 4f 	movehi s1, 96
   488d8:	21 c0 3b 00 	or s1, s1, 3824
   488dc:	01 00 00 88 	store_32 s0, (s1)
   488e0:	01 00 00 4f 	movehi s0, 1
   488e4:	3e 20 02 a8 	load_32 s1, 136(sp)
   488e8:	3e 20 00 88 	store_32 s1, 8(sp)
   488ec:	00 1f 07 00 	or s24, s0, 455
   488f0:	1e 13 00 88 	store_32 s24, 4(sp)
   488f4:	5e 03 00 88 	store_32 s26, (sp)
   488f8:	44 25 00 f8 	call 38160 <sprintf>
   488fc:	00 00 fd c0 	move s0, s26
   48900:	20 80 fd c0 	move s1, s27
   48904:	91 d9 ff f9 	call -39356 <W_CacheLumpName>
   48908:	20 0c 00 4f 	movehi s1, 96
   4890c:	21 d3 3b 00 	or s25, s1, 3828
   48910:	19 00 00 88 	store_32 s0, (s25)
   48914:	7e 23 00 88 	store_32 s27, 8(sp)
   48918:	1e 13 00 88 	store_32 s24, 4(sp)
   4891c:	5e 03 00 88 	store_32 s26, (sp)
   48920:	3a 25 00 f8 	call 38120 <sprintf>
   48924:	00 00 fd c0 	move s0, s26
   48928:	20 80 fd c0 	move s1, s27
   4892c:	87 d9 ff f9 	call -39396 <W_CacheLumpName>
   48930:	19 10 00 88 	store_32 s0, 4(s25)
   48934:	1e 00 02 a8 	load_32 s0, 128(sp)
   48938:	1e 20 00 88 	store_32 s0, 8(sp)
   4893c:	1e 13 00 88 	store_32 s24, 4(sp)
   48940:	5e 03 00 88 	store_32 s26, (sp)
   48944:	31 25 00 f8 	call 38084 <sprintf>
   48948:	00 00 fd c0 	move s0, s26
   4894c:	20 80 fd c0 	move s1, s27
   48950:	7e d9 ff f9 	call -39432 <W_CacheLumpName>
   48954:	19 20 00 88 	store_32 s0, 8(s25)
   48958:	1e 30 02 a8 	load_32 s0, 140(sp)
   4895c:	1e 20 00 88 	store_32 s0, 8(sp)
   48960:	1e 13 00 88 	store_32 s24, 4(sp)
   48964:	5e 03 00 88 	store_32 s26, (sp)
   48968:	28 25 00 f8 	call 38048 <sprintf>
   4896c:	00 00 fd c0 	move s0, s26
   48970:	20 80 fd c0 	move s1, s27
   48974:	75 d9 ff f9 	call -39468 <W_CacheLumpName>
   48978:	19 30 00 88 	store_32 s0, 12(s25)
   4897c:	1e f0 01 a8 	load_32 s0, 124(sp)
   48980:	1e 20 00 88 	store_32 s0, 8(sp)
   48984:	1e 13 00 88 	store_32 s24, 4(sp)
   48988:	5e 03 00 88 	store_32 s26, (sp)
   4898c:	1f 25 00 f8 	call 38012 <sprintf>
   48990:	00 00 fd c0 	move s0, s26
   48994:	20 80 fd c0 	move s1, s27
   48998:	6c d9 ff f9 	call -39504 <W_CacheLumpName>
   4899c:	19 40 00 88 	store_32 s0, 16(s25)
   489a0:	1e e0 01 a8 	load_32 s0, 120(sp)
   489a4:	1e 20 00 88 	store_32 s0, 8(sp)
   489a8:	1e 13 00 88 	store_32 s24, 4(sp)
   489ac:	5e 03 00 88 	store_32 s26, (sp)
   489b0:	16 25 00 f8 	call 37976 <sprintf>
   489b4:	00 00 fd c0 	move s0, s26
   489b8:	20 80 fd c0 	move s1, s27
   489bc:	63 d9 ff f9 	call -39540 <W_CacheLumpName>
   489c0:	19 50 00 88 	store_32 s0, 20(s25)
   489c4:	02 00 00 4f 	movehi s0, 2
   489c8:	20 80 fd c0 	move s1, s27
   489cc:	00 1c 58 00 	or s0, s0, 5639
   489d0:	5e d9 ff f9 	call -39560 <W_CacheLumpName>
   489d4:	20 0c 00 4f 	movehi s1, 96
   489d8:	21 30 3c 00 	or s1, s1, 3852
   489dc:	01 00 00 88 	store_32 s0, (s1)
   489e0:	02 00 00 4f 	movehi s0, 2
   489e4:	3e 00 02 a8 	load_32 s1, 128(sp)
   489e8:	3e 20 00 88 	store_32 s1, 8(sp)
   489ec:	00 38 2e 00 	or s0, s0, 2958
   489f0:	1e 70 02 88 	store_32 s0, 156(sp)
   489f4:	1e 10 00 88 	store_32 s0, 4(sp)
   489f8:	5e 03 00 88 	store_32 s26, (sp)
   489fc:	03 25 00 f8 	call 37900 <sprintf>
   48a00:	00 00 fd c0 	move s0, s26
   48a04:	20 80 fd c0 	move s1, s27
   48a08:	50 d9 ff f9 	call -39616 <W_CacheLumpName>
   48a0c:	20 0c 00 4f 	movehi s1, 96
   48a10:	01 43 3c 00 	or s24, s1, 3856
   48a14:	18 00 00 88 	store_32 s0, (s24)
   48a18:	3e 63 02 a8 	load_32 s25, 152(sp)
   48a1c:	19 20 00 a8 	load_32 s0, 8(s25)
   48a20:	18 10 00 88 	store_32 s0, 4(s24)
   48a24:	1e 30 02 a8 	load_32 s0, 140(sp)
   48a28:	1e 20 00 88 	store_32 s0, 8(sp)
   48a2c:	1e 70 02 a8 	load_32 s0, 156(sp)
   48a30:	1e 10 00 88 	store_32 s0, 4(sp)
   48a34:	5e 03 00 88 	store_32 s26, (sp)
   48a38:	f4 24 00 f8 	call 37840 <sprintf>
   48a3c:	00 00 fd c0 	move s0, s26
   48a40:	20 80 fd c0 	move s1, s27
   48a44:	41 d9 ff f9 	call -39676 <W_CacheLumpName>
   48a48:	18 20 00 88 	store_32 s0, 8(s24)
   48a4c:	19 30 00 a8 	load_32 s0, 12(s25)
   48a50:	18 30 00 88 	store_32 s0, 12(s24)
   48a54:	1e f0 01 a8 	load_32 s0, 124(sp)
   48a58:	1e 20 00 88 	store_32 s0, 8(sp)
   48a5c:	7e 73 02 a8 	load_32 s27, 156(sp)
   48a60:	7e 13 00 88 	store_32 s27, 4(sp)
   48a64:	5e 03 00 88 	store_32 s26, (sp)
   48a68:	e8 24 00 f8 	call 37792 <sprintf>
   48a6c:	00 00 fd c0 	move s0, s26
   48a70:	3e 10 02 a8 	load_32 s1, 132(sp)
   48a74:	35 d9 ff f9 	call -39724 <W_CacheLumpName>
   48a78:	18 40 00 88 	store_32 s0, 16(s24)
   48a7c:	19 40 00 a8 	load_32 s0, 16(s25)
   48a80:	18 50 00 88 	store_32 s0, 20(s24)
   48a84:	1e e0 01 a8 	load_32 s0, 120(sp)
   48a88:	1e 20 00 88 	store_32 s0, 8(sp)
   48a8c:	7e 13 00 88 	store_32 s27, 4(sp)
   48a90:	5e 03 00 88 	store_32 s26, (sp)
   48a94:	dd 24 00 f8 	call 37748 <sprintf>
   48a98:	00 00 fd c0 	move s0, s26
   48a9c:	7e 13 02 a8 	load_32 s27, 132(sp)
   48aa0:	20 80 fd c0 	move s1, s27
   48aa4:	29 d9 ff f9 	call -39772 <W_CacheLumpName>
   48aa8:	18 60 00 88 	store_32 s0, 24(s24)
   48aac:	19 50 00 a8 	load_32 s0, 20(s25)
   48ab0:	18 70 00 88 	store_32 s0, 28(s24)
   48ab4:	1e d0 01 a8 	load_32 s0, 116(sp)
   48ab8:	1e 20 00 88 	store_32 s0, 8(sp)
   48abc:	1e 70 02 a8 	load_32 s0, 156(sp)
   48ac0:	1e 10 00 88 	store_32 s0, 4(sp)
   48ac4:	5e 03 00 88 	store_32 s26, (sp)
   48ac8:	d0 24 00 f8 	call 37696 <sprintf>
   48acc:	00 00 fd c0 	move s0, s26
   48ad0:	20 80 fd c0 	move s1, s27
   48ad4:	1d d9 ff f9 	call -39820 <W_CacheLumpName>
   48ad8:	18 80 00 88 	store_32 s0, 32(s24)
   48adc:	19 60 00 a8 	load_32 s0, 24(s25)
   48ae0:	18 90 00 88 	store_32 s0, 36(s24)
   48ae4:	1e c0 01 a8 	load_32 s0, 112(sp)
   48ae8:	1e 20 00 88 	store_32 s0, 8(sp)
   48aec:	1e 70 02 a8 	load_32 s0, 156(sp)
   48af0:	1e 10 00 88 	store_32 s0, 4(sp)
   48af4:	5e 03 00 88 	store_32 s26, (sp)
   48af8:	c4 24 00 f8 	call 37648 <sprintf>
   48afc:	00 00 fd c0 	move s0, s26
   48b00:	20 80 fd c0 	move s1, s27
   48b04:	11 d9 ff f9 	call -39868 <W_CacheLumpName>
   48b08:	3a 04 00 4f 	movehi s1, 58
   48b0c:	18 a0 00 88 	store_32 s0, 40(s24)
   48b10:	01 c0 6d 00 	or s0, s1, 7024
   48b14:	39 70 00 a8 	load_32 s1, 28(s25)
   48b18:	38 b0 00 88 	store_32 s1, 44(s24)
   48b1c:	20 00 00 4f 	movehi s1, 0
   48b20:	00 00 00 a8 	load_32 s0, (s0)
   48b24:	1e 20 00 88 	store_32 s0, 8(sp)
   48b28:	01 24 1a 00 	or s0, s1, 1673
   48b2c:	1e 10 00 88 	store_32 s0, 4(sp)
   48b30:	5e 03 00 88 	store_32 s26, (sp)
   48b34:	b5 24 00 f8 	call 37588 <sprintf>
   48b38:	5e f3 01 88 	store_32 s26, 124(sp)
   48b3c:	00 00 fd c0 	move s0, s26
   48b40:	20 80 fd c0 	move s1, s27
   48b44:	01 d9 ff f9 	call -39932 <W_CacheLumpName>
   48b48:	20 0c 00 4f 	movehi s1, 96
   48b4c:	21 00 2d 00 	or s1, s1, 2880
   48b50:	01 00 00 88 	store_32 s0, (s1)
   48b54:	01 00 00 4f 	movehi s0, 1
   48b58:	20 80 fd c0 	move s1, s27
   48b5c:	00 90 44 00 	or s0, s0, 4388
   48b60:	fa d8 ff f9 	call -39960 <W_CacheLumpName>
   48b64:	20 0c 00 4f 	movehi s1, 96
   48b68:	42 00 00 4f 	movehi s2, 2
   48b6c:	21 f0 2c 00 	or s1, s1, 2876
   48b70:	01 00 00 88 	store_32 s0, (s1)
   48b74:	02 40 77 00 	or s0, s2, 7632
   48b78:	1e 60 02 88 	store_32 s0, 152(sp)
   48b7c:	00 0c 00 4f 	movehi s0, 96
   48b80:	20 00 00 4f 	movehi s1, 0
   48b84:	40 00 00 4f 	movehi s2, 0
   48b88:	00 00 3d 00 	or s0, s0, 3904
   48b8c:	1e 50 02 88 	store_32 s0, 148(sp)
   48b90:	01 c4 4a 00 	or s0, s1, 4785
   48b94:	1e e0 01 88 	store_32 s0, 120(sp)
   48b98:	02 dc 21 00 	or s0, s2, 2167
   48b9c:	1e d0 01 88 	store_32 s0, 116(sp)
   48ba0:	00 00 00 4f 	movehi s0, 0
   48ba4:	21 00 00 4f 	movehi s1, 1
   48ba8:	42 00 00 4f 	movehi s2, 2
   48bac:	00 38 7f 00 	or s0, s0, 8142
   48bb0:	1e c0 01 88 	store_32 s0, 112(sp)
   48bb4:	01 d0 30 00 	or s0, s1, 3124
   48bb8:	1e b0 01 88 	store_32 s0, 108(sp)
   48bbc:	02 a8 43 00 	or s0, s2, 4330
   48bc0:	1e a0 01 88 	store_32 s0, 104(sp)
   48bc4:	7e 23 02 a8 	load_32 s27, 136(sp)
   48bc8:	00 83 fd c0 	move s24, s27
   48bcc:	5e f3 01 a8 	load_32 s26, 124(sp)
   48bd0:	7e 73 02 88 	store_32 s27, 156(sp)
   48bd4:	1e 20 02 a8 	load_32 s0, 136(sp)
   48bd8:	1e 30 00 88 	store_32 s0, 12(sp)
   48bdc:	7e 23 00 88 	store_32 s27, 8(sp)
   48be0:	5e 03 00 88 	store_32 s26, (sp)
   48be4:	1e 60 02 a8 	load_32 s0, 152(sp)
   48be8:	1e 10 00 88 	store_32 s0, 4(sp)
   48bec:	87 24 00 f8 	call 37404 <sprintf>
   48bf0:	00 00 fd c0 	move s0, s26
   48bf4:	3e 13 02 a8 	load_32 s25, 132(sp)
   48bf8:	20 80 fc c0 	move s1, s25
   48bfc:	d3 d8 ff f9 	call -40116 <W_CacheLumpName>
   48c00:	1e 43 02 88 	store_32 s24, 144(sp)
   48c04:	38 08 00 0b 	shl s1, s24, 2
   48c08:	3e 30 02 88 	store_32 s1, 140(sp)
   48c0c:	7e 53 02 a8 	load_32 s27, 148(sp)
   48c10:	3b 80 50 c0 	add_i s1, s27, s1
   48c14:	01 00 00 88 	store_32 s0, (s1)
   48c18:	3e 33 00 88 	store_32 s25, 12(sp)
   48c1c:	1e 70 02 a8 	load_32 s0, 156(sp)
   48c20:	1e 20 00 88 	store_32 s0, 8(sp)
   48c24:	1e 60 02 a8 	load_32 s0, 152(sp)
   48c28:	1e 10 00 88 	store_32 s0, 4(sp)
   48c2c:	5e 03 00 88 	store_32 s26, (sp)
   48c30:	76 24 00 f8 	call 37336 <sprintf>
   48c34:	00 00 fd c0 	move s0, s26
   48c38:	20 80 fc c0 	move s1, s25
   48c3c:	c3 d8 ff f9 	call -40180 <W_CacheLumpName>
   48c40:	1e 33 02 a8 	load_32 s24, 140(sp)
   48c44:	38 10 00 00 	or s1, s24, 4
   48c48:	3b 80 50 c0 	add_i s1, s27, s1
   48c4c:	01 00 00 88 	store_32 s0, (s1)
   48c50:	1e 00 02 a8 	load_32 s0, 128(sp)
   48c54:	1e 30 00 88 	store_32 s0, 12(sp)
   48c58:	1e 70 02 a8 	load_32 s0, 156(sp)
   48c5c:	1e 20 00 88 	store_32 s0, 8(sp)
   48c60:	1e 60 02 a8 	load_32 s0, 152(sp)
   48c64:	1e 10 00 88 	store_32 s0, 4(sp)
   48c68:	5e 03 00 88 	store_32 s26, (sp)
   48c6c:	67 24 00 f8 	call 37276 <sprintf>
   48c70:	00 00 fd c0 	move s0, s26
   48c74:	20 80 fc c0 	move s1, s25
   48c78:	60 83 fc c0 	move s27, s25
   48c7c:	b3 d8 ff f9 	call -40244 <W_CacheLumpName>
   48c80:	3e 53 02 a8 	load_32 s25, 148(sp)
   48c84:	38 20 00 00 	or s1, s24, 8
   48c88:	39 80 50 c0 	add_i s1, s25, s1
   48c8c:	01 00 00 88 	store_32 s0, (s1)
   48c90:	1e 70 02 a8 	load_32 s0, 156(sp)
   48c94:	1e 20 00 88 	store_32 s0, 8(sp)
   48c98:	1e e0 01 a8 	load_32 s0, 120(sp)
   48c9c:	1e 10 00 88 	store_32 s0, 4(sp)
   48ca0:	5e 03 00 88 	store_32 s26, (sp)
   48ca4:	59 24 00 f8 	call 37220 <sprintf>
   48ca8:	00 00 fd c0 	move s0, s26
   48cac:	20 80 fd c0 	move s1, s27
   48cb0:	a6 d8 ff f9 	call -40296 <W_CacheLumpName>
   48cb4:	38 30 00 00 	or s1, s24, 12
   48cb8:	39 80 50 c0 	add_i s1, s25, s1
   48cbc:	01 00 00 88 	store_32 s0, (s1)
   48cc0:	1e 70 02 a8 	load_32 s0, 156(sp)
   48cc4:	1e 20 00 88 	store_32 s0, 8(sp)
   48cc8:	1e d0 01 a8 	load_32 s0, 116(sp)
   48ccc:	1e 10 00 88 	store_32 s0, 4(sp)
   48cd0:	5e 03 00 88 	store_32 s26, (sp)
   48cd4:	4d 24 00 f8 	call 37172 <sprintf>
   48cd8:	00 00 fd c0 	move s0, s26
   48cdc:	20 80 fd c0 	move s1, s27
   48ce0:	9a d8 ff f9 	call -40344 <W_CacheLumpName>
   48ce4:	38 40 00 00 	or s1, s24, 16
   48ce8:	39 80 50 c0 	add_i s1, s25, s1
   48cec:	01 00 00 88 	store_32 s0, (s1)
   48cf0:	1e 70 02 a8 	load_32 s0, 156(sp)
   48cf4:	1e 20 00 88 	store_32 s0, 8(sp)
   48cf8:	1e c0 01 a8 	load_32 s0, 112(sp)
   48cfc:	1e 10 00 88 	store_32 s0, 4(sp)
   48d00:	5e 03 00 88 	store_32 s26, (sp)
   48d04:	41 24 00 f8 	call 37124 <sprintf>
   48d08:	00 00 fd c0 	move s0, s26
   48d0c:	20 80 fd c0 	move s1, s27
   48d10:	8e d8 ff f9 	call -40392 <W_CacheLumpName>
   48d14:	38 50 00 00 	or s1, s24, 20
   48d18:	39 80 50 c0 	add_i s1, s25, s1
   48d1c:	01 00 00 88 	store_32 s0, (s1)
   48d20:	1e 70 02 a8 	load_32 s0, 156(sp)
   48d24:	1e 20 00 88 	store_32 s0, 8(sp)
   48d28:	1e b0 01 a8 	load_32 s0, 108(sp)
   48d2c:	1e 10 00 88 	store_32 s0, 4(sp)
   48d30:	5e 03 00 88 	store_32 s26, (sp)
   48d34:	35 24 00 f8 	call 37076 <sprintf>
   48d38:	00 00 fd c0 	move s0, s26
   48d3c:	20 80 fd c0 	move s1, s27
   48d40:	82 d8 ff f9 	call -40440 <W_CacheLumpName>
   48d44:	38 60 00 00 	or s1, s24, 24
   48d48:	39 80 50 c0 	add_i s1, s25, s1
   48d4c:	01 00 00 88 	store_32 s0, (s1)
   48d50:	1e 70 02 a8 	load_32 s0, 156(sp)
   48d54:	1e 20 00 88 	store_32 s0, 8(sp)
   48d58:	1e a0 01 a8 	load_32 s0, 104(sp)
   48d5c:	1e 10 00 88 	store_32 s0, 4(sp)
   48d60:	5e 03 00 88 	store_32 s26, (sp)
   48d64:	29 24 00 f8 	call 37028 <sprintf>
   48d68:	00 00 fd c0 	move s0, s26
   48d6c:	20 80 fd c0 	move s1, s27
   48d70:	76 d8 ff f9 	call -40488 <W_CacheLumpName>
   48d74:	7e 73 02 a8 	load_32 s27, 156(sp)
   48d78:	38 70 00 00 	or s1, s24, 28
   48d7c:	1e 43 02 a8 	load_32 s24, 144(sp)
   48d80:	39 80 50 c0 	add_i s1, s25, s1
   48d84:	7b 07 00 05 	add_i s27, s27, 1
   48d88:	01 00 00 88 	store_32 s0, (s1)
   48d8c:	18 23 00 05 	add_i s24, s24, 8
   48d90:	5b 14 00 18 	cmplt_u s2, s27, 5
   48d94:	e2 f1 ff f5 	bnz s2, -452 <ST_loadGraphics+0x6ac>
   48d98:	01 00 00 4f 	movehi s0, 1
   48d9c:	00 07 00 0f 	move s24, 1
   48da0:	00 c4 27 00 	or s0, s0, 2545
   48da4:	20 00 fc c0 	move s1, s24
   48da8:	68 d8 ff f9 	call -40544 <W_CacheLumpName>
   48dac:	3e 53 02 a8 	load_32 s25, 148(sp)
   48db0:	19 80 02 88 	store_32 s0, 160(s25)
   48db4:	02 00 00 4f 	movehi s0, 2
   48db8:	20 00 fc c0 	move s1, s24
   48dbc:	00 e8 15 00 	or s0, s0, 1402
   48dc0:	62 d8 ff f9 	call -40568 <W_CacheLumpName>
   48dc4:	19 90 02 88 	store_32 s0, 164(s25)
   48dc8:	fe b3 02 a8 	load_32 ra, 172(sp)
   48dcc:	7e c3 02 a8 	load_32 s27, 176(sp)
   48dd0:	5e d3 02 a8 	load_32 s26, 180(sp)
   48dd4:	3e e3 02 a8 	load_32 s25, 184(sp)
   48dd8:	1e f3 02 a8 	load_32 s24, 188(sp)
   48ddc:	de 03 03 05 	add_i sp, sp, 192
   48de0:	1f 00 00 f0 	ret

0000000000048de4 ST_loadData:
   48de4:	de 03 ff 05 	add_i sp, sp, -64
   48de8:	fe f3 00 88 	store_32 ra, 60(sp)
   48dec:	02 00 00 4f 	movehi s0, 2
   48df0:	00 5c 6e 00 	or s0, s0, 7063
   48df4:	80 d7 ff f9 	call -41472 <W_GetNumForName>
   48df8:	20 0c 00 4f 	movehi s1, 96
   48dfc:	21 00 30 00 	or s1, s1, 3072
   48e00:	01 00 00 88 	store_32 s0, (s1)
   48e04:	c8 fd ff f9 	call -2272 <ST_loadGraphics>
   48e08:	fe f3 00 a8 	load_32 ra, 60(sp)
   48e0c:	de 03 01 05 	add_i sp, sp, 64
   48e10:	1f 00 00 f0 	ret

0000000000048e14 ST_unloadGraphics:
   48e14:	de 03 fe 05 	add_i sp, sp, -128
   48e18:	1e f3 01 88 	store_32 s24, 124(sp)
   48e1c:	3e e3 01 88 	store_32 s25, 120(sp)
   48e20:	5e d3 01 88 	store_32 s26, 116(sp)
   48e24:	7e c3 01 88 	store_32 s27, 112(sp)
   48e28:	fe b3 01 88 	store_32 ra, 108(sp)
   48e2c:	00 0c 00 4f 	movehi s0, 96
   48e30:	4a 1c 00 4f 	movehi s2, 234
   48e34:	00 83 3a 00 	or s24, s0, 3744
   48e38:	22 47 28 00 	or s25, s2, 2577
   48e3c:	18 00 00 a8 	load_32 s0, (s24)
   48e40:	20 d0 ff a9 	load_32 s1, -12(s0)
   48e44:	21 80 0c c1 	cmpeq_i s1, s1, s25
   48e48:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x54>
   48e4c:	01 00 00 4f 	movehi s0, 1
   48e50:	20 fc 12 0f 	move s1, 1215
   48e54:	3e 10 00 88 	store_32 s1, 4(sp)
   48e58:	00 7c 10 00 	or s0, s0, 1055
   48e5c:	1e 00 00 88 	store_32 s0, (sp)
   48e60:	a9 14 ff f9 	call -240988 <I_Error>
   48e64:	18 00 00 a8 	load_32 s0, (s24)
   48e68:	20 94 01 0f 	move s1, 101
   48e6c:	b5 10 00 f8 	call 17108 <Z_ChangeTag2>
   48e70:	00 0c 00 4f 	movehi s0, 96
   48e74:	40 23 3b 00 	or s26, s0, 3784
   48e78:	1a 00 00 a8 	load_32 s0, (s26)
   48e7c:	20 d0 ff a9 	load_32 s1, -12(s0)
   48e80:	21 80 0c c1 	cmpeq_i s1, s1, s25
   48e84:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x90>
   48e88:	01 00 00 4f 	movehi s0, 1
   48e8c:	20 00 13 0f 	move s1, 1216
   48e90:	3e 10 00 88 	store_32 s1, 4(sp)
   48e94:	00 7c 10 00 	or s0, s0, 1055
   48e98:	1e 00 00 88 	store_32 s0, (sp)
   48e9c:	9a 14 ff f9 	call -241048 <I_Error>
   48ea0:	1a 00 00 a8 	load_32 s0, (s26)
   48ea4:	20 94 01 0f 	move s1, 101
   48ea8:	a6 10 00 f8 	call 17048 <Z_ChangeTag2>
   48eac:	18 10 00 a8 	load_32 s0, 4(s24)
   48eb0:	20 d0 ff a9 	load_32 s1, -12(s0)
   48eb4:	21 80 0c c1 	cmpeq_i s1, s1, s25
   48eb8:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0xc4>
   48ebc:	01 00 00 4f 	movehi s0, 1
   48ec0:	20 fc 12 0f 	move s1, 1215
   48ec4:	3e 10 00 88 	store_32 s1, 4(sp)
   48ec8:	00 7c 10 00 	or s0, s0, 1055
   48ecc:	1e 00 00 88 	store_32 s0, (sp)
   48ed0:	8d 14 ff f9 	call -241100 <I_Error>
   48ed4:	18 10 00 a8 	load_32 s0, 4(s24)
   48ed8:	20 94 01 0f 	move s1, 101
   48edc:	99 10 00 f8 	call 16996 <Z_ChangeTag2>
   48ee0:	1a 10 00 a8 	load_32 s0, 4(s26)
   48ee4:	20 d0 ff a9 	load_32 s1, -12(s0)
   48ee8:	21 80 0c c1 	cmpeq_i s1, s1, s25
   48eec:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0xf8>
   48ef0:	01 00 00 4f 	movehi s0, 1
   48ef4:	20 00 13 0f 	move s1, 1216
   48ef8:	3e 10 00 88 	store_32 s1, 4(sp)
   48efc:	00 7c 10 00 	or s0, s0, 1055
   48f00:	1e 00 00 88 	store_32 s0, (sp)
   48f04:	80 14 ff f9 	call -241152 <I_Error>
   48f08:	1a 10 00 a8 	load_32 s0, 4(s26)
   48f0c:	20 94 01 0f 	move s1, 101
   48f10:	8c 10 00 f8 	call 16944 <Z_ChangeTag2>
   48f14:	18 20 00 a8 	load_32 s0, 8(s24)
   48f18:	20 d0 ff a9 	load_32 s1, -12(s0)
   48f1c:	21 80 0c c1 	cmpeq_i s1, s1, s25
   48f20:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x12c>
   48f24:	01 00 00 4f 	movehi s0, 1
   48f28:	20 fc 12 0f 	move s1, 1215
   48f2c:	3e 10 00 88 	store_32 s1, 4(sp)
   48f30:	00 7c 10 00 	or s0, s0, 1055
   48f34:	1e 00 00 88 	store_32 s0, (sp)
   48f38:	73 14 ff f9 	call -241204 <I_Error>
   48f3c:	18 20 00 a8 	load_32 s0, 8(s24)
   48f40:	20 94 01 0f 	move s1, 101
   48f44:	7f 10 00 f8 	call 16892 <Z_ChangeTag2>
   48f48:	1a 20 00 a8 	load_32 s0, 8(s26)
   48f4c:	20 d0 ff a9 	load_32 s1, -12(s0)
   48f50:	21 80 0c c1 	cmpeq_i s1, s1, s25
   48f54:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x160>
   48f58:	01 00 00 4f 	movehi s0, 1
   48f5c:	20 00 13 0f 	move s1, 1216
   48f60:	3e 10 00 88 	store_32 s1, 4(sp)
   48f64:	00 7c 10 00 	or s0, s0, 1055
   48f68:	1e 00 00 88 	store_32 s0, (sp)
   48f6c:	66 14 ff f9 	call -241256 <I_Error>
   48f70:	1a 20 00 a8 	load_32 s0, 8(s26)
   48f74:	20 94 01 0f 	move s1, 101
   48f78:	72 10 00 f8 	call 16840 <Z_ChangeTag2>
   48f7c:	18 30 00 a8 	load_32 s0, 12(s24)
   48f80:	20 d0 ff a9 	load_32 s1, -12(s0)
   48f84:	21 80 0c c1 	cmpeq_i s1, s1, s25
   48f88:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x194>
   48f8c:	01 00 00 4f 	movehi s0, 1
   48f90:	20 fc 12 0f 	move s1, 1215
   48f94:	3e 10 00 88 	store_32 s1, 4(sp)
   48f98:	00 7c 10 00 	or s0, s0, 1055
   48f9c:	1e 00 00 88 	store_32 s0, (sp)
   48fa0:	59 14 ff f9 	call -241308 <I_Error>
   48fa4:	18 30 00 a8 	load_32 s0, 12(s24)
   48fa8:	20 94 01 0f 	move s1, 101
   48fac:	65 10 00 f8 	call 16788 <Z_ChangeTag2>
   48fb0:	1a 30 00 a8 	load_32 s0, 12(s26)
   48fb4:	20 d0 ff a9 	load_32 s1, -12(s0)
   48fb8:	21 80 0c c1 	cmpeq_i s1, s1, s25
   48fbc:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x1c8>
   48fc0:	01 00 00 4f 	movehi s0, 1
   48fc4:	20 00 13 0f 	move s1, 1216
   48fc8:	3e 10 00 88 	store_32 s1, 4(sp)
   48fcc:	00 7c 10 00 	or s0, s0, 1055
   48fd0:	1e 00 00 88 	store_32 s0, (sp)
   48fd4:	4c 14 ff f9 	call -241360 <I_Error>
   48fd8:	1a 30 00 a8 	load_32 s0, 12(s26)
   48fdc:	20 94 01 0f 	move s1, 101
   48fe0:	58 10 00 f8 	call 16736 <Z_ChangeTag2>
   48fe4:	18 40 00 a8 	load_32 s0, 16(s24)
   48fe8:	20 d0 ff a9 	load_32 s1, -12(s0)
   48fec:	21 80 0c c1 	cmpeq_i s1, s1, s25
   48ff0:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x1fc>
   48ff4:	01 00 00 4f 	movehi s0, 1
   48ff8:	20 fc 12 0f 	move s1, 1215
   48ffc:	3e 10 00 88 	store_32 s1, 4(sp)
   49000:	00 7c 10 00 	or s0, s0, 1055
   49004:	1e 00 00 88 	store_32 s0, (sp)
   49008:	3f 14 ff f9 	call -241412 <I_Error>
   4900c:	18 40 00 a8 	load_32 s0, 16(s24)
   49010:	20 94 01 0f 	move s1, 101
   49014:	4b 10 00 f8 	call 16684 <Z_ChangeTag2>
   49018:	1a 40 00 a8 	load_32 s0, 16(s26)
   4901c:	20 d0 ff a9 	load_32 s1, -12(s0)
   49020:	21 80 0c c1 	cmpeq_i s1, s1, s25
   49024:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x230>
   49028:	01 00 00 4f 	movehi s0, 1
   4902c:	20 00 13 0f 	move s1, 1216
   49030:	3e 10 00 88 	store_32 s1, 4(sp)
   49034:	00 7c 10 00 	or s0, s0, 1055
   49038:	1e 00 00 88 	store_32 s0, (sp)
   4903c:	32 14 ff f9 	call -241464 <I_Error>
   49040:	1a 40 00 a8 	load_32 s0, 16(s26)
   49044:	20 94 01 0f 	move s1, 101
   49048:	3e 10 00 f8 	call 16632 <Z_ChangeTag2>
   4904c:	18 50 00 a8 	load_32 s0, 20(s24)
   49050:	20 d0 ff a9 	load_32 s1, -12(s0)
   49054:	21 80 0c c1 	cmpeq_i s1, s1, s25
   49058:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x264>
   4905c:	01 00 00 4f 	movehi s0, 1
   49060:	20 fc 12 0f 	move s1, 1215
   49064:	3e 10 00 88 	store_32 s1, 4(sp)
   49068:	00 7c 10 00 	or s0, s0, 1055
   4906c:	1e 00 00 88 	store_32 s0, (sp)
   49070:	25 14 ff f9 	call -241516 <I_Error>
   49074:	18 50 00 a8 	load_32 s0, 20(s24)
   49078:	20 94 01 0f 	move s1, 101
   4907c:	31 10 00 f8 	call 16580 <Z_ChangeTag2>
   49080:	1a 50 00 a8 	load_32 s0, 20(s26)
   49084:	20 d0 ff a9 	load_32 s1, -12(s0)
   49088:	21 80 0c c1 	cmpeq_i s1, s1, s25
   4908c:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x298>
   49090:	01 00 00 4f 	movehi s0, 1
   49094:	20 00 13 0f 	move s1, 1216
   49098:	3e 10 00 88 	store_32 s1, 4(sp)
   4909c:	00 7c 10 00 	or s0, s0, 1055
   490a0:	1e 00 00 88 	store_32 s0, (sp)
   490a4:	18 14 ff f9 	call -241568 <I_Error>
   490a8:	1a 50 00 a8 	load_32 s0, 20(s26)
   490ac:	20 94 01 0f 	move s1, 101
   490b0:	24 10 00 f8 	call 16528 <Z_ChangeTag2>
   490b4:	18 60 00 a8 	load_32 s0, 24(s24)
   490b8:	20 d0 ff a9 	load_32 s1, -12(s0)
   490bc:	21 80 0c c1 	cmpeq_i s1, s1, s25
   490c0:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x2cc>
   490c4:	01 00 00 4f 	movehi s0, 1
   490c8:	20 fc 12 0f 	move s1, 1215
   490cc:	3e 10 00 88 	store_32 s1, 4(sp)
   490d0:	00 7c 10 00 	or s0, s0, 1055
   490d4:	1e 00 00 88 	store_32 s0, (sp)
   490d8:	0b 14 ff f9 	call -241620 <I_Error>
   490dc:	18 60 00 a8 	load_32 s0, 24(s24)
   490e0:	20 94 01 0f 	move s1, 101
   490e4:	17 10 00 f8 	call 16476 <Z_ChangeTag2>
   490e8:	1a 60 00 a8 	load_32 s0, 24(s26)
   490ec:	20 d0 ff a9 	load_32 s1, -12(s0)
   490f0:	21 80 0c c1 	cmpeq_i s1, s1, s25
   490f4:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x300>
   490f8:	01 00 00 4f 	movehi s0, 1
   490fc:	20 00 13 0f 	move s1, 1216
   49100:	3e 10 00 88 	store_32 s1, 4(sp)
   49104:	00 7c 10 00 	or s0, s0, 1055
   49108:	1e 00 00 88 	store_32 s0, (sp)
   4910c:	fe 13 ff f9 	call -241672 <I_Error>
   49110:	1a 60 00 a8 	load_32 s0, 24(s26)
   49114:	20 94 01 0f 	move s1, 101
   49118:	0a 10 00 f8 	call 16424 <Z_ChangeTag2>
   4911c:	18 70 00 a8 	load_32 s0, 28(s24)
   49120:	20 d0 ff a9 	load_32 s1, -12(s0)
   49124:	21 80 0c c1 	cmpeq_i s1, s1, s25
   49128:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x334>
   4912c:	01 00 00 4f 	movehi s0, 1
   49130:	20 fc 12 0f 	move s1, 1215
   49134:	3e 10 00 88 	store_32 s1, 4(sp)
   49138:	00 7c 10 00 	or s0, s0, 1055
   4913c:	1e 00 00 88 	store_32 s0, (sp)
   49140:	f1 13 ff f9 	call -241724 <I_Error>
   49144:	18 70 00 a8 	load_32 s0, 28(s24)
   49148:	20 94 01 0f 	move s1, 101
   4914c:	fd 0f 00 f8 	call 16372 <Z_ChangeTag2>
   49150:	1a 70 00 a8 	load_32 s0, 28(s26)
   49154:	20 d0 ff a9 	load_32 s1, -12(s0)
   49158:	21 80 0c c1 	cmpeq_i s1, s1, s25
   4915c:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x368>
   49160:	01 00 00 4f 	movehi s0, 1
   49164:	20 00 13 0f 	move s1, 1216
   49168:	3e 10 00 88 	store_32 s1, 4(sp)
   4916c:	00 7c 10 00 	or s0, s0, 1055
   49170:	1e 00 00 88 	store_32 s0, (sp)
   49174:	e4 13 ff f9 	call -241776 <I_Error>
   49178:	1a 70 00 a8 	load_32 s0, 28(s26)
   4917c:	20 94 01 0f 	move s1, 101
   49180:	f0 0f 00 f8 	call 16320 <Z_ChangeTag2>
   49184:	18 80 00 a8 	load_32 s0, 32(s24)
   49188:	20 d0 ff a9 	load_32 s1, -12(s0)
   4918c:	21 80 0c c1 	cmpeq_i s1, s1, s25
   49190:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x39c>
   49194:	01 00 00 4f 	movehi s0, 1
   49198:	20 fc 12 0f 	move s1, 1215
   4919c:	3e 10 00 88 	store_32 s1, 4(sp)
   491a0:	00 7c 10 00 	or s0, s0, 1055
   491a4:	1e 00 00 88 	store_32 s0, (sp)
   491a8:	d7 13 ff f9 	call -241828 <I_Error>
   491ac:	18 80 00 a8 	load_32 s0, 32(s24)
   491b0:	20 94 01 0f 	move s1, 101
   491b4:	e3 0f 00 f8 	call 16268 <Z_ChangeTag2>
   491b8:	1a 80 00 a8 	load_32 s0, 32(s26)
   491bc:	20 d0 ff a9 	load_32 s1, -12(s0)
   491c0:	21 80 0c c1 	cmpeq_i s1, s1, s25
   491c4:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x3d0>
   491c8:	01 00 00 4f 	movehi s0, 1
   491cc:	20 00 13 0f 	move s1, 1216
   491d0:	3e 10 00 88 	store_32 s1, 4(sp)
   491d4:	00 7c 10 00 	or s0, s0, 1055
   491d8:	1e 00 00 88 	store_32 s0, (sp)
   491dc:	ca 13 ff f9 	call -241880 <I_Error>
   491e0:	1a 80 00 a8 	load_32 s0, 32(s26)
   491e4:	20 94 01 0f 	move s1, 101
   491e8:	d6 0f 00 f8 	call 16216 <Z_ChangeTag2>
   491ec:	18 90 00 a8 	load_32 s0, 36(s24)
   491f0:	20 d0 ff a9 	load_32 s1, -12(s0)
   491f4:	21 80 0c c1 	cmpeq_i s1, s1, s25
   491f8:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x404>
   491fc:	01 00 00 4f 	movehi s0, 1
   49200:	20 fc 12 0f 	move s1, 1215
   49204:	3e 10 00 88 	store_32 s1, 4(sp)
   49208:	00 7c 10 00 	or s0, s0, 1055
   4920c:	1e 00 00 88 	store_32 s0, (sp)
   49210:	bd 13 ff f9 	call -241932 <I_Error>
   49214:	18 90 00 a8 	load_32 s0, 36(s24)
   49218:	20 94 01 0f 	move s1, 101
   4921c:	c9 0f 00 f8 	call 16164 <Z_ChangeTag2>
   49220:	1a 90 00 a8 	load_32 s0, 36(s26)
   49224:	20 d0 ff a9 	load_32 s1, -12(s0)
   49228:	21 80 0c c1 	cmpeq_i s1, s1, s25
   4922c:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x438>
   49230:	01 00 00 4f 	movehi s0, 1
   49234:	20 00 13 0f 	move s1, 1216
   49238:	3e 10 00 88 	store_32 s1, 4(sp)
   4923c:	00 7c 10 00 	or s0, s0, 1055
   49240:	1e 00 00 88 	store_32 s0, (sp)
   49244:	b0 13 ff f9 	call -241984 <I_Error>
   49248:	1a 90 00 a8 	load_32 s0, 36(s26)
   4924c:	20 94 01 0f 	move s1, 101
   49250:	bc 0f 00 f8 	call 16112 <Z_ChangeTag2>
   49254:	00 0c 00 4f 	movehi s0, 96
   49258:	00 c3 3b 00 	or s24, s0, 3824
   4925c:	18 00 00 a8 	load_32 s0, (s24)
   49260:	20 d0 ff a9 	load_32 s1, -12(s0)
   49264:	21 80 0c c1 	cmpeq_i s1, s1, s25
   49268:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x474>
   4926c:	01 00 00 4f 	movehi s0, 1
   49270:	20 0c 13 0f 	move s1, 1219
   49274:	3e 10 00 88 	store_32 s1, 4(sp)
   49278:	00 7c 10 00 	or s0, s0, 1055
   4927c:	1e 00 00 88 	store_32 s0, (sp)
   49280:	a1 13 ff f9 	call -242044 <I_Error>
   49284:	18 00 00 a8 	load_32 s0, (s24)
   49288:	20 94 01 0f 	move s1, 101
   4928c:	ad 0f 00 f8 	call 16052 <Z_ChangeTag2>
   49290:	00 0c 00 4f 	movehi s0, 96
   49294:	00 33 3c 00 	or s24, s0, 3852
   49298:	18 00 00 a8 	load_32 s0, (s24)
   4929c:	20 d0 ff a9 	load_32 s1, -12(s0)
   492a0:	21 80 0c c1 	cmpeq_i s1, s1, s25
   492a4:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x4b0>
   492a8:	01 00 00 4f 	movehi s0, 1
   492ac:	20 18 13 0f 	move s1, 1222
   492b0:	3e 10 00 88 	store_32 s1, 4(sp)
   492b4:	00 7c 10 00 	or s0, s0, 1055
   492b8:	1e 00 00 88 	store_32 s0, (sp)
   492bc:	92 13 ff f9 	call -242104 <I_Error>
   492c0:	18 00 00 a8 	load_32 s0, (s24)
   492c4:	20 94 01 0f 	move s1, 101
   492c8:	9e 0f 00 f8 	call 15992 <Z_ChangeTag2>
   492cc:	00 0c 00 4f 	movehi s0, 96
   492d0:	00 43 3c 00 	or s24, s0, 3856
   492d4:	18 00 00 a8 	load_32 s0, (s24)
   492d8:	20 d0 ff a9 	load_32 s1, -12(s0)
   492dc:	21 80 0c c1 	cmpeq_i s1, s1, s25
   492e0:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x4ec>
   492e4:	01 00 00 4f 	movehi s0, 1
   492e8:	20 28 13 0f 	move s1, 1226
   492ec:	3e 10 00 88 	store_32 s1, 4(sp)
   492f0:	00 7c 10 00 	or s0, s0, 1055
   492f4:	1e 00 00 88 	store_32 s0, (sp)
   492f8:	83 13 ff f9 	call -242164 <I_Error>
   492fc:	18 00 00 a8 	load_32 s0, (s24)
   49300:	20 94 01 0f 	move s1, 101
   49304:	8f 0f 00 f8 	call 15932 <Z_ChangeTag2>
   49308:	18 20 00 a8 	load_32 s0, 8(s24)
   4930c:	20 d0 ff a9 	load_32 s1, -12(s0)
   49310:	21 80 0c c1 	cmpeq_i s1, s1, s25
   49314:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x520>
   49318:	01 00 00 4f 	movehi s0, 1
   4931c:	20 28 13 0f 	move s1, 1226
   49320:	3e 10 00 88 	store_32 s1, 4(sp)
   49324:	00 7c 10 00 	or s0, s0, 1055
   49328:	1e 00 00 88 	store_32 s0, (sp)
   4932c:	76 13 ff f9 	call -242216 <I_Error>
   49330:	18 20 00 a8 	load_32 s0, 8(s24)
   49334:	20 94 01 0f 	move s1, 101
   49338:	82 0f 00 f8 	call 15880 <Z_ChangeTag2>
   4933c:	18 40 00 a8 	load_32 s0, 16(s24)
   49340:	20 d0 ff a9 	load_32 s1, -12(s0)
   49344:	21 80 0c c1 	cmpeq_i s1, s1, s25
   49348:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x554>
   4934c:	01 00 00 4f 	movehi s0, 1
   49350:	20 28 13 0f 	move s1, 1226
   49354:	3e 10 00 88 	store_32 s1, 4(sp)
   49358:	00 7c 10 00 	or s0, s0, 1055
   4935c:	1e 00 00 88 	store_32 s0, (sp)
   49360:	69 13 ff f9 	call -242268 <I_Error>
   49364:	18 40 00 a8 	load_32 s0, 16(s24)
   49368:	20 94 01 0f 	move s1, 101
   4936c:	75 0f 00 f8 	call 15828 <Z_ChangeTag2>
   49370:	18 60 00 a8 	load_32 s0, 24(s24)
   49374:	20 d0 ff a9 	load_32 s1, -12(s0)
   49378:	21 80 0c c1 	cmpeq_i s1, s1, s25
   4937c:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x588>
   49380:	01 00 00 4f 	movehi s0, 1
   49384:	20 28 13 0f 	move s1, 1226
   49388:	3e 10 00 88 	store_32 s1, 4(sp)
   4938c:	00 7c 10 00 	or s0, s0, 1055
   49390:	1e 00 00 88 	store_32 s0, (sp)
   49394:	5c 13 ff f9 	call -242320 <I_Error>
   49398:	18 60 00 a8 	load_32 s0, 24(s24)
   4939c:	20 94 01 0f 	move s1, 101
   493a0:	68 0f 00 f8 	call 15776 <Z_ChangeTag2>
   493a4:	18 80 00 a8 	load_32 s0, 32(s24)
   493a8:	20 d0 ff a9 	load_32 s1, -12(s0)
   493ac:	21 80 0c c1 	cmpeq_i s1, s1, s25
   493b0:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x5bc>
   493b4:	01 00 00 4f 	movehi s0, 1
   493b8:	20 28 13 0f 	move s1, 1226
   493bc:	3e 10 00 88 	store_32 s1, 4(sp)
   493c0:	00 7c 10 00 	or s0, s0, 1055
   493c4:	1e 00 00 88 	store_32 s0, (sp)
   493c8:	4f 13 ff f9 	call -242372 <I_Error>
   493cc:	18 80 00 a8 	load_32 s0, 32(s24)
   493d0:	20 94 01 0f 	move s1, 101
   493d4:	5b 0f 00 f8 	call 15724 <Z_ChangeTag2>
   493d8:	18 a0 00 a8 	load_32 s0, 40(s24)
   493dc:	20 d0 ff a9 	load_32 s1, -12(s0)
   493e0:	21 80 0c c1 	cmpeq_i s1, s1, s25
   493e4:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x5f0>
   493e8:	01 00 00 4f 	movehi s0, 1
   493ec:	20 28 13 0f 	move s1, 1226
   493f0:	3e 10 00 88 	store_32 s1, 4(sp)
   493f4:	00 7c 10 00 	or s0, s0, 1055
   493f8:	1e 00 00 88 	store_32 s0, (sp)
   493fc:	42 13 ff f9 	call -242424 <I_Error>
   49400:	18 a0 00 a8 	load_32 s0, 40(s24)
   49404:	20 94 01 0f 	move s1, 101
   49408:	4e 0f 00 f8 	call 15672 <Z_ChangeTag2>
   4940c:	00 0c 00 4f 	movehi s0, 96
   49410:	00 d3 3b 00 	or s24, s0, 3828
   49414:	18 00 00 a8 	load_32 s0, (s24)
   49418:	20 d0 ff a9 	load_32 s1, -12(s0)
   4941c:	21 80 0c c1 	cmpeq_i s1, s1, s25
   49420:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x62c>
   49424:	01 00 00 4f 	movehi s0, 1
   49428:	20 38 13 0f 	move s1, 1230
   4942c:	3e 10 00 88 	store_32 s1, 4(sp)
   49430:	00 7c 10 00 	or s0, s0, 1055
   49434:	1e 00 00 88 	store_32 s0, (sp)
   49438:	33 13 ff f9 	call -242484 <I_Error>
   4943c:	18 00 00 a8 	load_32 s0, (s24)
   49440:	20 94 01 0f 	move s1, 101
   49444:	3f 0f 00 f8 	call 15612 <Z_ChangeTag2>
   49448:	18 10 00 a8 	load_32 s0, 4(s24)
   4944c:	20 d0 ff a9 	load_32 s1, -12(s0)
   49450:	21 80 0c c1 	cmpeq_i s1, s1, s25
   49454:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x660>
   49458:	01 00 00 4f 	movehi s0, 1
   4945c:	20 38 13 0f 	move s1, 1230
   49460:	3e 10 00 88 	store_32 s1, 4(sp)
   49464:	00 7c 10 00 	or s0, s0, 1055
   49468:	1e 00 00 88 	store_32 s0, (sp)
   4946c:	26 13 ff f9 	call -242536 <I_Error>
   49470:	18 10 00 a8 	load_32 s0, 4(s24)
   49474:	20 94 01 0f 	move s1, 101
   49478:	32 0f 00 f8 	call 15560 <Z_ChangeTag2>
   4947c:	18 20 00 a8 	load_32 s0, 8(s24)
   49480:	20 d0 ff a9 	load_32 s1, -12(s0)
   49484:	21 80 0c c1 	cmpeq_i s1, s1, s25
   49488:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x694>
   4948c:	01 00 00 4f 	movehi s0, 1
   49490:	20 38 13 0f 	move s1, 1230
   49494:	3e 10 00 88 	store_32 s1, 4(sp)
   49498:	00 7c 10 00 	or s0, s0, 1055
   4949c:	1e 00 00 88 	store_32 s0, (sp)
   494a0:	19 13 ff f9 	call -242588 <I_Error>
   494a4:	18 20 00 a8 	load_32 s0, 8(s24)
   494a8:	20 94 01 0f 	move s1, 101
   494ac:	25 0f 00 f8 	call 15508 <Z_ChangeTag2>
   494b0:	18 30 00 a8 	load_32 s0, 12(s24)
   494b4:	20 d0 ff a9 	load_32 s1, -12(s0)
   494b8:	21 80 0c c1 	cmpeq_i s1, s1, s25
   494bc:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x6c8>
   494c0:	01 00 00 4f 	movehi s0, 1
   494c4:	20 38 13 0f 	move s1, 1230
   494c8:	3e 10 00 88 	store_32 s1, 4(sp)
   494cc:	00 7c 10 00 	or s0, s0, 1055
   494d0:	1e 00 00 88 	store_32 s0, (sp)
   494d4:	0c 13 ff f9 	call -242640 <I_Error>
   494d8:	18 30 00 a8 	load_32 s0, 12(s24)
   494dc:	20 94 01 0f 	move s1, 101
   494e0:	18 0f 00 f8 	call 15456 <Z_ChangeTag2>
   494e4:	18 40 00 a8 	load_32 s0, 16(s24)
   494e8:	20 d0 ff a9 	load_32 s1, -12(s0)
   494ec:	21 80 0c c1 	cmpeq_i s1, s1, s25
   494f0:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x6fc>
   494f4:	01 00 00 4f 	movehi s0, 1
   494f8:	20 38 13 0f 	move s1, 1230
   494fc:	3e 10 00 88 	store_32 s1, 4(sp)
   49500:	00 7c 10 00 	or s0, s0, 1055
   49504:	1e 00 00 88 	store_32 s0, (sp)
   49508:	ff 12 ff f9 	call -242692 <I_Error>
   4950c:	18 40 00 a8 	load_32 s0, 16(s24)
   49510:	20 94 01 0f 	move s1, 101
   49514:	0b 0f 00 f8 	call 15404 <Z_ChangeTag2>
   49518:	18 50 00 a8 	load_32 s0, 20(s24)
   4951c:	20 d0 ff a9 	load_32 s1, -12(s0)
   49520:	21 80 0c c1 	cmpeq_i s1, s1, s25
   49524:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x730>
   49528:	01 00 00 4f 	movehi s0, 1
   4952c:	20 38 13 0f 	move s1, 1230
   49530:	3e 10 00 88 	store_32 s1, 4(sp)
   49534:	00 7c 10 00 	or s0, s0, 1055
   49538:	1e 00 00 88 	store_32 s0, (sp)
   4953c:	f2 12 ff f9 	call -242744 <I_Error>
   49540:	18 50 00 a8 	load_32 s0, 20(s24)
   49544:	20 94 01 0f 	move s1, 101
   49548:	fe 0e 00 f8 	call 15352 <Z_ChangeTag2>
   4954c:	00 0c 00 4f 	movehi s0, 96
   49550:	00 f3 2c 00 	or s24, s0, 2876
   49554:	18 00 00 a8 	load_32 s0, (s24)
   49558:	20 d0 ff a9 	load_32 s1, -12(s0)
   4955c:	21 80 0c c1 	cmpeq_i s1, s1, s25
   49560:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x76c>
   49564:	01 00 00 4f 	movehi s0, 1
   49568:	20 40 13 0f 	move s1, 1232
   4956c:	3e 10 00 88 	store_32 s1, 4(sp)
   49570:	00 7c 10 00 	or s0, s0, 1055
   49574:	1e 00 00 88 	store_32 s0, (sp)
   49578:	e3 12 ff f9 	call -242804 <I_Error>
   4957c:	18 00 00 a8 	load_32 s0, (s24)
   49580:	20 94 01 0f 	move s1, 101
   49584:	ef 0e 00 f8 	call 15292 <Z_ChangeTag2>
   49588:	00 0c 00 4f 	movehi s0, 96
   4958c:	00 03 2d 00 	or s24, s0, 2880
   49590:	18 00 00 a8 	load_32 s0, (s24)
   49594:	20 d0 ff a9 	load_32 s1, -12(s0)
   49598:	3e a3 01 88 	store_32 s25, 104(sp)
   4959c:	21 80 0c c1 	cmpeq_i s1, s1, s25
   495a0:	01 01 00 f4 	bnz s1, 32 <ST_unloadGraphics+0x7ac>
   495a4:	01 00 00 4f 	movehi s0, 1
   495a8:	20 44 13 0f 	move s1, 1233
   495ac:	3e 10 00 88 	store_32 s1, 4(sp)
   495b0:	00 7c 10 00 	or s0, s0, 1055
   495b4:	1e 00 00 88 	store_32 s0, (sp)
   495b8:	d3 12 ff f9 	call -242868 <I_Error>
   495bc:	18 00 00 a8 	load_32 s0, (s24)
   495c0:	00 97 01 0f 	move s24, 101
   495c4:	20 00 fc c0 	move s1, s24
   495c8:	de 0e 00 f8 	call 15224 <Z_ChangeTag2>
   495cc:	00 0c 00 4f 	movehi s0, 96
   495d0:	40 03 00 0f 	move s26, 0
   495d4:	21 00 00 4f 	movehi s1, 1
   495d8:	60 03 3d 00 	or s27, s0, 3904
   495dc:	00 50 13 0f 	move s0, 1236
   495e0:	1e 90 01 88 	store_32 s0, 100(sp)
   495e4:	01 7c 10 00 	or s0, s1, 1055
   495e8:	1e 80 01 88 	store_32 s0, 96(sp)
   495ec:	1a 08 00 0b 	shl s0, s26, 2
   495f0:	3b 03 50 c0 	add_i s25, s27, s0
   495f4:	19 00 00 a8 	load_32 s0, (s25)
   495f8:	20 d0 ff a9 	load_32 s1, -12(s0)
   495fc:	5e a0 01 a8 	load_32 s2, 104(sp)
   49600:	21 00 01 c1 	cmpeq_i s1, s1, s2
   49604:	e1 00 00 f4 	bnz s1, 28 <ST_unloadGraphics+0x80c>
   49608:	1e 90 01 a8 	load_32 s0, 100(sp)
   4960c:	1e 10 00 88 	store_32 s0, 4(sp)
   49610:	1e 80 01 a8 	load_32 s0, 96(sp)
   49614:	1e 00 00 88 	store_32 s0, (sp)
   49618:	bb 12 ff f9 	call -242964 <I_Error>
   4961c:	19 00 00 a8 	load_32 s0, (s25)
   49620:	20 00 fc c0 	move s1, s24
   49624:	c7 0e 00 f8 	call 15132 <Z_ChangeTag2>
   49628:	5a 07 00 05 	add_i s26, s26, 1
   4962c:	1a a8 00 18 	cmplt_u s0, s26, 42
   49630:	e0 fd ff f5 	bnz s0, -68 <ST_unloadGraphics+0x7d8>
   49634:	fe b3 01 a8 	load_32 ra, 108(sp)
   49638:	7e c3 01 a8 	load_32 s27, 112(sp)
   4963c:	5e d3 01 a8 	load_32 s26, 116(sp)
   49640:	3e e3 01 a8 	load_32 s25, 120(sp)
   49644:	1e f3 01 a8 	load_32 s24, 124(sp)
   49648:	de 03 02 05 	add_i sp, sp, 128
   4964c:	1f 00 00 f0 	ret

0000000000049650 ST_unloadData:
   49650:	de 03 ff 05 	add_i sp, sp, -64
   49654:	fe f3 00 88 	store_32 ra, 60(sp)
   49658:	ef fd ff f9 	call -2116 <ST_unloadGraphics>
   4965c:	fe f3 00 a8 	load_32 ra, 60(sp)
   49660:	de 03 01 05 	add_i sp, sp, 64
   49664:	1f 00 00 f0 	ret

0000000000049668 ST_initData:
   49668:	de 03 ff 05 	add_i sp, sp, -64
   4966c:	1e f3 00 88 	store_32 s24, 60(sp)
   49670:	fe e3 00 88 	store_32 ra, 56(sp)
   49674:	00 0c 00 4f 	movehi s0, 96
   49678:	3a 04 00 4f 	movehi s1, 58
   4967c:	40 04 00 0f 	move s2, 1
   49680:	00 10 2d 00 	or s0, s0, 2884
   49684:	21 c0 6d 00 	or s1, s1, 7024
   49688:	60 0c 00 4f 	movehi s3, 96
   4968c:	40 00 00 88 	store_32 s2, (s0)
   49690:	a0 0c 00 4f 	movehi s5, 96
   49694:	01 00 00 a8 	load_32 s0, (s1)
   49698:	3b 04 00 4f 	movehi s1, 59
   4969c:	63 20 2d 00 	or s3, s3, 2888
   496a0:	80 00 00 0f 	move s4, 0
   496a4:	21 40 02 00 	or s1, s1, 144
   496a8:	00 60 04 07 	mull_i s0, s0, 280
   496ac:	00 ff ff 0f 	move s24, -1
   496b0:	01 00 50 c0 	add_i s0, s1, s0
   496b4:	03 00 00 88 	store_32 s0, (s3)
   496b8:	20 0c 00 4f 	movehi s1, 96
   496bc:	60 0c 00 4f 	movehi s3, 96
   496c0:	21 e0 2f 00 	or s1, s1, 3064
   496c4:	63 e0 2c 00 	or s3, s3, 2872
   496c8:	81 00 00 88 	store_32 s4, (s1)
   496cc:	25 20 2e 00 	or s1, s5, 2952
   496d0:	43 00 00 88 	store_32 s2, (s3)
   496d4:	40 0c 00 4f 	movehi s2, 96
   496d8:	74 04 00 4f 	movehi s3, 52
   496dc:	81 00 00 88 	store_32 s4, (s1)
   496e0:	22 f0 2f 00 	or s1, s2, 3068
   496e4:	43 90 47 00 	or s2, s3, 4580
   496e8:	01 03 00 88 	store_32 s24, (s1)
   496ec:	20 e0 01 05 	add_i s1, s0, 120
   496f0:	00 0c 00 4f 	movehi s0, 96
   496f4:	02 03 00 88 	store_32 s24, (s2)
   496f8:	40 90 00 0f 	move s2, 36
   496fc:	00 40 2e 00 	or s0, s0, 2960
   49700:	81 21 00 f8 	call 34308 <memcpy>
   49704:	00 0c 00 4f 	movehi s0, 96
   49708:	00 60 2f 00 	or s0, s0, 3032
   4970c:	00 03 00 88 	store_32 s24, (s0)
   49710:	00 13 00 88 	store_32 s24, 4(s0)
   49714:	00 23 00 88 	store_32 s24, 8(s0)
   49718:	f3 f3 ff f9 	call -12340 <STlib_init>
   4971c:	fe e3 00 a8 	load_32 ra, 56(sp)
   49720:	1e f3 00 a8 	load_32 s24, 60(sp)
   49724:	de 03 01 05 	add_i sp, sp, 64
   49728:	1f 00 00 f0 	ret

000000000004972c ST_createWidgets:
   4972c:	de 03 fe 05 	add_i sp, sp, -128
   49730:	1e f3 01 88 	store_32 s24, 124(sp)
   49734:	3e e3 01 88 	store_32 s25, 120(sp)
   49738:	5e d3 01 88 	store_32 s26, 116(sp)
   4973c:	7e c3 01 88 	store_32 s27, 112(sp)
   49740:	fe b3 01 88 	store_32 ra, 108(sp)
   49744:	00 0c 00 4f 	movehi s0, 96
   49748:	60 af 02 0f 	move s27, 171
   4974c:	c0 0c 00 0f 	move s6, 3
   49750:	20 20 2d 00 	or s1, s0, 2888
   49754:	01 00 00 a8 	load_32 s0, (s1)
   49758:	00 83 f0 c0 	move s24, s1
   4975c:	33 04 00 4f 	movehi s1, 51
   49760:	40 c0 01 a8 	load_32 s2, 112(s0)
   49764:	21 70 45 00 	or s1, s1, 4444
   49768:	42 60 00 07 	mull_i s2, s2, 24
   4976c:	21 00 51 c0 	add_i s1, s1, s2
   49770:	40 0c 00 4f 	movehi s2, 96
   49774:	21 00 00 a8 	load_32 s1, (s1)
   49778:	a2 e0 2c 00 	or s5, s2, 2872
   4977c:	be a0 01 88 	store_32 s5, 104(sp)
   49780:	de 90 01 88 	store_32 s6, 100(sp)
   49784:	21 08 00 0b 	shl s1, s1, 2
   49788:	00 80 50 c0 	add_i s0, s0, s1
   4978c:	20 0c 00 4f 	movehi s1, 96
   49790:	80 70 02 05 	add_i s4, s0, 156
   49794:	00 0c 00 4f 	movehi s0, 96
   49798:	41 83 3a 00 	or s26, s1, 3744
   4979c:	20 b0 00 0f 	move s1, 44
   497a0:	20 e3 2e 00 	or s25, s0, 3000
   497a4:	00 80 fc c0 	move s0, s25
   497a8:	40 80 fd c0 	move s2, s27
   497ac:	7e 33 01 88 	store_32 s27, 76(sp)
   497b0:	60 00 fd c0 	move s3, s26
   497b4:	5e 43 01 88 	store_32 s26, 80(sp)
   497b8:	d7 f3 ff f9 	call -12452 <STlib_initNum>
   497bc:	18 00 00 a8 	load_32 s0, (s24)
   497c0:	20 0c 00 4f 	movehi s1, 96
   497c4:	21 c0 3b 00 	or s1, s1, 3824
   497c8:	40 c0 01 a8 	load_32 s2, 112(s0)
   497cc:	80 80 00 05 	add_i s4, s0, 32
   497d0:	3e 50 01 88 	store_32 s1, 84(sp)
   497d4:	00 0c 00 4f 	movehi s0, 96
   497d8:	59 70 00 88 	store_32 s2, 28(s25)
   497dc:	c1 00 00 a8 	load_32 s6, (s1)
   497e0:	40 80 fd c0 	move s2, s27
   497e4:	60 00 fd c0 	move s3, s26
   497e8:	3e a3 01 a8 	load_32 s25, 104(sp)
   497ec:	00 10 34 00 	or s0, s0, 3332
   497f0:	20 68 01 0f 	move s1, 90
   497f4:	a0 80 fc c0 	move s5, s25
   497f8:	53 f4 ff f9 	call -11956 <STlib_initPercent>
   497fc:	00 0c 00 4f 	movehi s0, 96
   49800:	20 0c 00 4f 	movehi s1, 96
   49804:	40 a0 02 0f 	move s2, 168
   49808:	00 30 3c 00 	or s0, s0, 3852
   4980c:	81 90 2f 00 	or s4, s1, 3044
   49810:	20 a0 01 0f 	move s1, 104
   49814:	60 00 00 a8 	load_32 s3, (s0)
   49818:	00 0c 00 4f 	movehi s0, 96
   4981c:	5e 20 01 88 	store_32 s2, 72(sp)
   49820:	a0 80 fc c0 	move s5, s25
   49824:	00 30 35 00 	or s0, s0, 3404
   49828:	b7 f4 ff f9 	call -11556 <STlib_initBinIcon>
   4982c:	18 00 00 a8 	load_32 s0, (s24)
   49830:	20 0c 00 4f 	movehi s1, 96
   49834:	60 03 fc c0 	move s27, s24
   49838:	40 0c 00 4f 	movehi s2, 96
   4983c:	01 43 3c 00 	or s24, s1, 3856
   49840:	80 f0 01 05 	add_i s4, s0, 124
   49844:	00 0c 00 4f 	movehi s0, 96
   49848:	a2 a0 2f 00 	or s5, s2, 3048
   4984c:	be e0 00 88 	store_32 s5, 56(sp)
   49850:	20 bc 01 0f 	move s1, 111
   49854:	3e 10 01 88 	store_32 s1, 68(sp)
   49858:	00 a0 35 00 	or s0, s0, 3432
   4985c:	40 b0 02 0f 	move s2, 172
   49860:	5e 70 01 88 	store_32 s2, 92(sp)
   49864:	20 03 f0 c0 	move s25, s0
   49868:	60 00 fc c0 	move s3, s24
   4986c:	57 f4 ff f9 	call -11940 <STlib_initMultIcon>
   49870:	1b 00 00 a8 	load_32 s0, (s27)
   49874:	40 03 fc c0 	move s26, s24
   49878:	5e 63 01 88 	store_32 s26, 88(sp)
   4987c:	20 ec 01 0f 	move s1, 123
   49880:	3e 00 01 88 	store_32 s1, 64(sp)
   49884:	78 20 00 05 	add_i s3, s24, 8
   49888:	5e 70 01 a8 	load_32 s2, 92(sp)
   4988c:	1e e3 00 a8 	load_32 s24, 56(sp)
   49890:	80 00 02 05 	add_i s4, s0, 128
   49894:	19 70 00 05 	add_i s0, s25, 28
   49898:	a0 00 fc c0 	move s5, s24
   4989c:	4b f4 ff f9 	call -11988 <STlib_initMultIcon>
   498a0:	1b 00 00 a8 	load_32 s0, (s27)
   498a4:	20 1c 02 0f 	move s1, 135
   498a8:	3e f0 00 88 	store_32 s1, 60(sp)
   498ac:	7a 40 00 05 	add_i s3, s26, 16
   498b0:	5e 70 01 a8 	load_32 s2, 92(sp)
   498b4:	a0 00 fc c0 	move s5, s24
   498b8:	40 03 fc c0 	move s26, s24
   498bc:	80 10 02 05 	add_i s4, s0, 132
   498c0:	19 e0 00 05 	add_i s0, s25, 56
   498c4:	41 f4 ff f9 	call -12028 <STlib_initMultIcon>
   498c8:	1b 00 00 a8 	load_32 s0, (s27)
   498cc:	00 83 fc c0 	move s24, s25
   498d0:	40 d8 02 0f 	move s2, 182
   498d4:	80 20 02 05 	add_i s4, s0, 136
   498d8:	19 50 01 05 	add_i s0, s25, 84
   498dc:	3e 63 01 a8 	load_32 s25, 88(sp)
   498e0:	5e 70 01 88 	store_32 s2, 92(sp)
   498e4:	3e 10 01 a8 	load_32 s1, 68(sp)
   498e8:	a0 00 fd c0 	move s5, s26
   498ec:	79 60 00 05 	add_i s3, s25, 24
   498f0:	36 f4 ff f9 	call -12072 <STlib_initMultIcon>
   498f4:	1b 00 00 a8 	load_32 s0, (s27)
   498f8:	79 80 00 05 	add_i s3, s25, 32
   498fc:	3e 00 01 a8 	load_32 s1, 64(sp)
   49900:	3e 73 01 a8 	load_32 s25, 92(sp)
   49904:	80 30 02 05 	add_i s4, s0, 140
   49908:	18 c0 01 05 	add_i s0, s24, 112
   4990c:	40 80 fc c0 	move s2, s25
   49910:	a0 00 fd c0 	move s5, s26
   49914:	2d f4 ff f9 	call -12108 <STlib_initMultIcon>
   49918:	1b 00 00 a8 	load_32 s0, (s27)
   4991c:	7e 83 01 88 	store_32 s27, 96(sp)
   49920:	3e 60 01 a8 	load_32 s1, 88(sp)
   49924:	80 40 02 05 	add_i s4, s0, 144
   49928:	18 30 02 05 	add_i s0, s24, 140
   4992c:	61 a0 00 05 	add_i s3, s1, 40
   49930:	3e f0 00 a8 	load_32 s1, 60(sp)
   49934:	40 80 fc c0 	move s2, s25
   49938:	a0 00 fd c0 	move s5, s26
   4993c:	23 f4 ff f9 	call -12148 <STlib_initMultIcon>
   49940:	3e 33 01 a8 	load_32 s25, 76(sp)
   49944:	40 0c 00 4f 	movehi s2, 96
   49948:	00 0c 00 4f 	movehi s0, 96
   4994c:	20 0c 00 4f 	movehi s1, 96
   49950:	a2 b0 2f 00 	or s5, s2, 3052
   49954:	40 80 fc c0 	move s2, s25
   49958:	5e 43 01 a8 	load_32 s26, 80(sp)
   4995c:	81 c0 2f 00 	or s4, s1, 3056
   49960:	00 00 3a 00 	or s0, s0, 3712
   49964:	20 28 02 0f 	move s1, 138
   49968:	c0 08 00 0f 	move s6, 2
   4996c:	60 00 fd c0 	move s3, s26
   49970:	69 f3 ff f9 	call -12892 <STlib_initNum>
   49974:	40 0c 00 4f 	movehi s2, 96
   49978:	00 0c 00 4f 	movehi s0, 96
   4997c:	20 0c 00 4f 	movehi s1, 96
   49980:	82 20 2e 00 	or s4, s2, 2952
   49984:	5e 20 01 a8 	load_32 s2, 72(sp)
   49988:	1e a3 01 a8 	load_32 s24, 104(sp)
   4998c:	00 40 38 00 	or s0, s0, 3600
   49990:	61 00 3d 00 	or s3, s1, 3904
   49994:	20 3c 02 0f 	move s1, 143
   49998:	a0 00 fc c0 	move s5, s24
   4999c:	0b f4 ff f9 	call -12244 <STlib_initMultIcon>
   499a0:	1b 00 00 a8 	load_32 s0, (s27)
   499a4:	20 74 03 0f 	move s1, 221
   499a8:	80 90 00 05 	add_i s4, s0, 36
   499ac:	1e 50 01 a8 	load_32 s0, 84(sp)
   499b0:	c0 00 00 a8 	load_32 s6, (s0)
   499b4:	00 0c 00 4f 	movehi s0, 96
   499b8:	40 80 fc c0 	move s2, s25
   499bc:	60 00 fd c0 	move s3, s26
   499c0:	00 a0 34 00 	or s0, s0, 3368
   499c4:	a0 00 fc c0 	move s5, s24
   499c8:	df f3 ff f9 	call -12420 <STlib_initPercent>
   499cc:	00 0c 00 4f 	movehi s0, 96
   499d0:	40 0c 00 4f 	movehi s2, 96
   499d4:	20 0c 00 4f 	movehi s1, 96
   499d8:	00 b3 38 00 	or s24, s0, 3628
   499dc:	42 63 2f 00 	or s26, s2, 3032
   499e0:	60 bf 03 0f 	move s27, 239
   499e4:	61 d0 3b 00 	or s3, s1, 3828
   499e8:	7e 70 01 88 	store_32 s3, 92(sp)
   499ec:	00 00 fc c0 	move s0, s24
   499f0:	20 80 fd c0 	move s1, s27
   499f4:	40 80 fc c0 	move s2, s25
   499f8:	80 00 fd c0 	move s4, s26
   499fc:	3e a3 01 a8 	load_32 s25, 104(sp)
   49a00:	a0 80 fc c0 	move s5, s25
   49a04:	f1 f3 ff f9 	call -12348 <STlib_initMultIcon>
   49a08:	20 80 fd c0 	move s1, s27
   49a0c:	7e 70 01 a8 	load_32 s3, 92(sp)
   49a10:	18 70 00 05 	add_i s0, s24, 28
   49a14:	9a 10 00 05 	add_i s4, s26, 4
   49a18:	40 d4 02 0f 	move s2, 181
   49a1c:	a0 80 fc c0 	move s5, s25
   49a20:	ea f3 ff f9 	call -12376 <STlib_initMultIcon>
   49a24:	40 fc 02 0f 	move s2, 191
   49a28:	5e 60 01 88 	store_32 s2, 88(sp)
   49a2c:	20 80 fd c0 	move s1, s27
   49a30:	7e 70 01 a8 	load_32 s3, 92(sp)
   49a34:	60 83 fc c0 	move s27, s25
   49a38:	18 e0 00 05 	add_i s0, s24, 56
   49a3c:	9a 20 00 05 	add_i s4, s26, 8
   49a40:	a0 80 fd c0 	move s5, s27
   49a44:	e1 f3 ff f9 	call -12412 <STlib_initMultIcon>
   49a48:	5e 83 01 a8 	load_32 s26, 96(sp)
   49a4c:	20 0c 00 4f 	movehi s1, 96
   49a50:	20 83 04 0f 	move s25, 288
   49a54:	40 b4 02 0f 	move s2, 173
   49a58:	61 20 3b 00 	or s3, s1, 3784
   49a5c:	1a 00 00 a8 	load_32 s0, (s26)
   49a60:	7e 70 01 88 	store_32 s3, 92(sp)
   49a64:	5e 40 01 88 	store_32 s2, 80(sp)
   49a68:	80 70 02 05 	add_i s4, s0, 156
   49a6c:	00 0c 00 4f 	movehi s0, 96
   49a70:	00 10 30 00 	or s0, s0, 3076
   49a74:	00 03 f0 c0 	move s24, s0
   49a78:	1e 53 01 88 	store_32 s24, 84(sp)
   49a7c:	20 80 fc c0 	move s1, s25
   49a80:	a0 80 fd c0 	move s5, s27
   49a84:	7e 93 01 a8 	load_32 s27, 100(sp)
   49a88:	c0 80 fd c0 	move s6, s27
   49a8c:	22 f3 ff f9 	call -13176 <STlib_initNum>
   49a90:	1a 00 00 a8 	load_32 s0, (s26)
   49a94:	40 cc 02 0f 	move s2, 179
   49a98:	5e 30 01 88 	store_32 s2, 76(sp)
   49a9c:	20 80 fc c0 	move s1, s25
   49aa0:	80 80 02 05 	add_i s4, s0, 160
   49aa4:	18 80 00 05 	add_i s0, s24, 32
   49aa8:	00 83 fc c0 	move s24, s25
   49aac:	7e 70 01 a8 	load_32 s3, 92(sp)
   49ab0:	5e a3 01 a8 	load_32 s26, 104(sp)
   49ab4:	a0 00 fd c0 	move s5, s26
   49ab8:	c0 80 fd c0 	move s6, s27
   49abc:	16 f3 ff f9 	call -13224 <STlib_initNum>
   49ac0:	3e 83 01 a8 	load_32 s25, 96(sp)
   49ac4:	19 00 00 a8 	load_32 s0, (s25)
   49ac8:	80 90 02 05 	add_i s4, s0, 164
   49acc:	1e 50 01 a8 	load_32 s0, 84(sp)
   49ad0:	20 00 fc c0 	move s1, s24
   49ad4:	5e 60 01 a8 	load_32 s2, 88(sp)
   49ad8:	7e 73 01 a8 	load_32 s27, 92(sp)
   49adc:	00 00 01 05 	add_i s0, s0, 64
   49ae0:	60 80 fd c0 	move s3, s27
   49ae4:	a0 00 fd c0 	move s5, s26
   49ae8:	5e 93 01 a8 	load_32 s26, 100(sp)
   49aec:	c0 00 fd c0 	move s6, s26
   49af0:	09 f3 ff f9 	call -13276 <STlib_initNum>
   49af4:	19 00 00 a8 	load_32 s0, (s25)
   49af8:	40 e4 02 0f 	move s2, 185
   49afc:	80 a0 02 05 	add_i s4, s0, 168
   49b00:	1e 50 01 a8 	load_32 s0, 84(sp)
   49b04:	5e 20 01 88 	store_32 s2, 72(sp)
   49b08:	20 00 fc c0 	move s1, s24
   49b0c:	60 80 fd c0 	move s3, s27
   49b10:	7e a3 01 a8 	load_32 s27, 104(sp)
   49b14:	00 80 01 05 	add_i s0, s0, 96
   49b18:	a0 80 fd c0 	move s5, s27
   49b1c:	c0 00 fd c0 	move s6, s26
   49b20:	fd f2 ff f9 	call -13324 <STlib_initNum>
   49b24:	00 83 fc c0 	move s24, s25
   49b28:	20 e8 04 0f 	move s1, 314
   49b2c:	18 00 00 a8 	load_32 s0, (s24)
   49b30:	3e 10 01 88 	store_32 s1, 68(sp)
   49b34:	80 b0 02 05 	add_i s4, s0, 172
   49b38:	00 0c 00 4f 	movehi s0, 96
   49b3c:	20 13 32 00 	or s25, s0, 3204
   49b40:	00 80 fc c0 	move s0, s25
   49b44:	3e 53 01 88 	store_32 s25, 84(sp)
   49b48:	5e 40 01 a8 	load_32 s2, 80(sp)
   49b4c:	5e 73 01 a8 	load_32 s26, 92(sp)
   49b50:	60 00 fd c0 	move s3, s26
   49b54:	a0 80 fd c0 	move s5, s27
   49b58:	de 90 01 a8 	load_32 s6, 100(sp)
   49b5c:	ee f2 ff f9 	call -13384 <STlib_initNum>
   49b60:	18 00 00 a8 	load_32 s0, (s24)
   49b64:	1e 13 01 a8 	load_32 s24, 68(sp)
   49b68:	80 c0 02 05 	add_i s4, s0, 176
   49b6c:	20 00 fc c0 	move s1, s24
   49b70:	5e 30 01 a8 	load_32 s2, 76(sp)
   49b74:	60 00 fd c0 	move s3, s26
   49b78:	19 80 00 05 	add_i s0, s25, 32
   49b7c:	a0 80 fd c0 	move s5, s27
   49b80:	3e 93 01 a8 	load_32 s25, 100(sp)
   49b84:	c0 80 fc c0 	move s6, s25
   49b88:	e3 f2 ff f9 	call -13428 <STlib_initNum>
   49b8c:	1e 80 01 a8 	load_32 s0, 96(sp)
   49b90:	00 00 00 a8 	load_32 s0, (s0)
   49b94:	80 d0 02 05 	add_i s4, s0, 180
   49b98:	1e 50 01 a8 	load_32 s0, 84(sp)
   49b9c:	20 00 fc c0 	move s1, s24
   49ba0:	5e 60 01 a8 	load_32 s2, 88(sp)
   49ba4:	60 00 fd c0 	move s3, s26
   49ba8:	a0 80 fd c0 	move s5, s27
   49bac:	00 00 01 05 	add_i s0, s0, 64
   49bb0:	c0 80 fc c0 	move s6, s25
   49bb4:	d8 f2 ff f9 	call -13472 <STlib_initNum>
   49bb8:	1e 80 01 a8 	load_32 s0, 96(sp)
   49bbc:	00 00 00 a8 	load_32 s0, (s0)
   49bc0:	80 e0 02 05 	add_i s4, s0, 184
   49bc4:	1e 50 01 a8 	load_32 s0, 84(sp)
   49bc8:	20 00 fc c0 	move s1, s24
   49bcc:	5e 20 01 a8 	load_32 s2, 72(sp)
   49bd0:	60 00 fd c0 	move s3, s26
   49bd4:	a0 80 fd c0 	move s5, s27
   49bd8:	00 80 01 05 	add_i s0, s0, 96
   49bdc:	c0 80 fc c0 	move s6, s25
   49be0:	cd f2 ff f9 	call -13516 <STlib_initNum>
   49be4:	fe b3 01 a8 	load_32 ra, 108(sp)
   49be8:	7e c3 01 a8 	load_32 s27, 112(sp)
   49bec:	5e d3 01 a8 	load_32 s26, 116(sp)
   49bf0:	3e e3 01 a8 	load_32 s25, 120(sp)
   49bf4:	1e f3 01 a8 	load_32 s24, 124(sp)
   49bf8:	de 03 02 05 	add_i sp, sp, 128
   49bfc:	1f 00 00 f0 	ret

0000000000049c00 ST_Start:
   49c00:	de 03 ff 05 	add_i sp, sp, -64
   49c04:	1e f3 00 88 	store_32 s24, 60(sp)
   49c08:	3e e3 00 88 	store_32 s25, 56(sp)
   49c0c:	5e d3 00 88 	store_32 s26, 52(sp)
   49c10:	fe c3 00 88 	store_32 ra, 48(sp)
   49c14:	00 0c 00 4f 	movehi s0, 96
   49c18:	00 a3 3f 00 	or s24, s0, 4072
   49c1c:	18 00 00 a0 	load_u8 s0, (s24)
   49c20:	00 04 00 11 	cmpne_i s0, s0, 1
   49c24:	20 01 00 f4 	bnz s0, 36 <ST_Start+0x48>
   49c28:	00 0c 00 4f 	movehi s0, 96
   49c2c:	20 94 01 0f 	move s1, 101
   49c30:	00 00 30 00 	or s0, s0, 3072
   49c34:	00 00 00 a8 	load_32 s0, (s0)
   49c38:	78 d4 ff f9 	call -44576 <W_CacheLumpNum>
   49c3c:	6f 12 ff f9 	call -243268 <I_SetPalette>
   49c40:	00 00 00 0f 	move s0, 0
   49c44:	18 00 00 82 	store_8 s0, (s24)
   49c48:	00 0c 00 4f 	movehi s0, 96
   49c4c:	3a 04 00 4f 	movehi s1, 58
   49c50:	20 07 00 0f 	move s25, 1
   49c54:	00 10 2d 00 	or s0, s0, 2884
   49c58:	21 c0 6d 00 	or s1, s1, 7024
   49c5c:	40 0c 00 4f 	movehi s2, 96
   49c60:	20 03 00 88 	store_32 s25, (s0)
   49c64:	80 0c 00 4f 	movehi s4, 96
   49c68:	01 00 00 a8 	load_32 s0, (s1)
   49c6c:	3b 04 00 4f 	movehi s1, 59
   49c70:	42 20 2d 00 	or s2, s2, 2888
   49c74:	60 00 00 0f 	move s3, 0
   49c78:	21 40 02 00 	or s1, s1, 144
   49c7c:	00 60 04 07 	mull_i s0, s0, 280
   49c80:	40 ff ff 0f 	move s26, -1
   49c84:	01 00 50 c0 	add_i s0, s1, s0
   49c88:	02 00 00 88 	store_32 s0, (s2)
   49c8c:	20 0c 00 4f 	movehi s1, 96
   49c90:	40 0c 00 4f 	movehi s2, 96
   49c94:	21 e0 2f 00 	or s1, s1, 3064
   49c98:	42 e0 2c 00 	or s2, s2, 2872
   49c9c:	61 00 00 88 	store_32 s3, (s1)
   49ca0:	24 20 2e 00 	or s1, s4, 2952
   49ca4:	22 03 00 88 	store_32 s25, (s2)
   49ca8:	40 0c 00 4f 	movehi s2, 96
   49cac:	94 04 00 4f 	movehi s4, 52
   49cb0:	61 00 00 88 	store_32 s3, (s1)
   49cb4:	22 f0 2f 00 	or s1, s2, 3068
   49cb8:	44 90 47 00 	or s2, s4, 4580
   49cbc:	41 03 00 88 	store_32 s26, (s1)
   49cc0:	20 e0 01 05 	add_i s1, s0, 120
   49cc4:	00 0c 00 4f 	movehi s0, 96
   49cc8:	42 03 00 88 	store_32 s26, (s2)
   49ccc:	40 90 00 0f 	move s2, 36
   49cd0:	00 40 2e 00 	or s0, s0, 2960
   49cd4:	0c 20 00 f8 	call 32816 <memcpy>
   49cd8:	00 0c 00 4f 	movehi s0, 96
   49cdc:	00 60 2f 00 	or s0, s0, 3032
   49ce0:	40 03 00 88 	store_32 s26, (s0)
   49ce4:	40 13 00 88 	store_32 s26, 4(s0)
   49ce8:	40 23 00 88 	store_32 s26, 8(s0)
   49cec:	7e f2 ff f9 	call -13832 <STlib_init>
   49cf0:	8f fe ff f9 	call -1476 <ST_createWidgets>
   49cf4:	38 03 00 82 	store_8 s25, (s24)
   49cf8:	fe c3 00 a8 	load_32 ra, 48(sp)
   49cfc:	5e d3 00 a8 	load_32 s26, 52(sp)
   49d00:	3e e3 00 a8 	load_32 s25, 56(sp)
   49d04:	1e f3 00 a8 	load_32 s24, 60(sp)
   49d08:	de 03 01 05 	add_i sp, sp, 64
   49d0c:	1f 00 00 f0 	ret

0000000000049d10 ST_Stop:
   49d10:	de 03 ff 05 	add_i sp, sp, -64
   49d14:	1e f3 00 88 	store_32 s24, 60(sp)
   49d18:	fe e3 00 88 	store_32 ra, 56(sp)
   49d1c:	00 0c 00 4f 	movehi s0, 96
   49d20:	00 a3 3f 00 	or s24, s0, 4072
   49d24:	18 00 00 a0 	load_u8 s0, (s24)
   49d28:	00 04 00 11 	cmpne_i s0, s0, 1
   49d2c:	20 01 00 f4 	bnz s0, 36 <ST_Stop+0x40>
   49d30:	00 0c 00 4f 	movehi s0, 96
   49d34:	20 94 01 0f 	move s1, 101
   49d38:	00 00 30 00 	or s0, s0, 3072
   49d3c:	00 00 00 a8 	load_32 s0, (s0)
   49d40:	36 d4 ff f9 	call -44840 <W_CacheLumpNum>
   49d44:	2d 12 ff f9 	call -243532 <I_SetPalette>
   49d48:	00 00 00 0f 	move s0, 0
   49d4c:	18 00 00 82 	store_8 s0, (s24)
   49d50:	fe e3 00 a8 	load_32 ra, 56(sp)
   49d54:	1e f3 00 a8 	load_32 s24, 60(sp)
   49d58:	de 03 01 05 	add_i sp, sp, 64
   49d5c:	1f 00 00 f0 	ret

0000000000049d60 ST_Init:
   49d60:	de 03 ff 05 	add_i sp, sp, -64
   49d64:	fe f3 00 88 	store_32 ra, 60(sp)
   49d68:	02 00 00 4f 	movehi s0, 2
   49d6c:	00 5c 6e 00 	or s0, s0, 7063
   49d70:	a1 d3 ff f9 	call -45436 <W_GetNumForName>
   49d74:	20 0c 00 4f 	movehi s1, 96
   49d78:	21 00 30 00 	or s1, s1, 3072
   49d7c:	01 00 00 88 	store_32 s0, (s1)
   49d80:	e9 f9 ff f9 	call -6236 <ST_loadGraphics>
   49d84:	01 00 00 4f 	movehi s0, 1
   49d88:	20 04 00 0f 	move s1, 1
   49d8c:	40 00 00 0f 	move s2, 0
   49d90:	00 00 20 00 	or s0, s0, 2048
   49d94:	d1 0a 00 f8 	call 11076 <Z_Malloc>
   49d98:	20 0c 00 4f 	movehi s1, 96
   49d9c:	21 20 02 00 	or s1, s1, 136
   49da0:	01 40 00 88 	store_32 s0, 16(s1)
   49da4:	fe f3 00 a8 	load_32 ra, 60(sp)
   49da8:	de 03 01 05 	add_i sp, sp, 64
   49dac:	1f 00 00 f0 	ret

0000000000049db0 ForeignTranslation:
   49db0:	20 00 d0 c1 	sext_8 s1, s0
   49db4:	21 00 00 14 	cmplt_i s1, s1, 0
   49db8:	a1 00 00 f4 	bnz s1, 20 <ForeignTranslation+0x1c>
   49dbc:	34 04 00 4f 	movehi s1, 52
   49dc0:	21 60 51 00 	or s1, s1, 5208
   49dc4:	01 00 50 c0 	add_i s0, s1, s0
   49dc8:	00 00 00 a0 	load_u8 s0, (s0)
   49dcc:	00 00 d0 c1 	sext_8 s0, s0
   49dd0:	1f 00 00 f0 	ret

0000000000049dd4 HU_Init:
   49dd4:	de 03 fe 05 	add_i sp, sp, -128
   49dd8:	1e f3 01 88 	store_32 s24, 124(sp)
   49ddc:	3e e3 01 88 	store_32 s25, 120(sp)
   49de0:	5e d3 01 88 	store_32 s26, 116(sp)
   49de4:	7e c3 01 88 	store_32 s27, 112(sp)
   49de8:	fe b3 01 88 	store_32 ra, 108(sp)
   49dec:	00 0c 00 4f 	movehi s0, 96
   49df0:	23 00 00 4f 	movehi s1, 3
   49df4:	40 03 00 0f 	move s26, 0
   49df8:	00 b0 06 00 	or s0, s0, 428
   49dfc:	21 e0 5f 00 	or s1, s1, 6136
   49e00:	1e 8f 01 05 	add_i s24, sp, 99
   49e04:	20 00 00 88 	store_32 s1, (s0)
   49e08:	22 00 00 4f 	movehi s1, 2
   49e0c:	00 84 00 0f 	move s0, 33
   49e10:	20 07 00 0f 	move s25, 1
   49e14:	40 0c 00 4f 	movehi s2, 96
   49e18:	21 40 79 00 	or s1, s1, 7760
   49e1c:	3e 70 01 88 	store_32 s1, 92(sp)
   49e20:	22 b0 02 00 	or s1, s2, 172
   49e24:	3e 60 01 88 	store_32 s1, 88(sp)
   49e28:	1e 20 00 88 	store_32 s0, 8(sp)
   49e2c:	60 07 00 05 	add_i s27, s0, 1
   49e30:	1e 03 00 88 	store_32 s24, (sp)
   49e34:	1e 70 01 a8 	load_32 s0, 92(sp)
   49e38:	1e 10 00 88 	store_32 s0, 4(sp)
   49e3c:	f3 1f 00 f8 	call 32716 <sprintf>
   49e40:	00 00 fc c0 	move s0, s24
   49e44:	20 80 fc c0 	move s1, s25
   49e48:	40 d4 ff f9 	call -44800 <W_CacheLumpName>
   49e4c:	5e 60 01 a8 	load_32 s2, 88(sp)
   49e50:	3a 08 00 0b 	shl s1, s26, 2
   49e54:	5a 07 00 05 	add_i s26, s26, 1
   49e58:	22 80 50 c0 	add_i s1, s2, s1
   49e5c:	5a fc 00 18 	cmplt_u s2, s26, 63
   49e60:	01 00 00 88 	store_32 s0, (s1)
   49e64:	00 80 fd c0 	move s0, s27
   49e68:	02 fe ff f5 	bnz s2, -64 <HU_Init+0x54>
   49e6c:	fe b3 01 a8 	load_32 ra, 108(sp)
   49e70:	7e c3 01 a8 	load_32 s27, 112(sp)
   49e74:	5e d3 01 a8 	load_32 s26, 116(sp)
   49e78:	3e e3 01 a8 	load_32 s25, 120(sp)
   49e7c:	1e f3 01 a8 	load_32 s24, 124(sp)
   49e80:	de 03 02 05 	add_i sp, sp, 128
   49e84:	1f 00 00 f0 	ret

0000000000049e88 HU_Stop:
   49e88:	00 0c 00 4f 	movehi s0, 96
   49e8c:	20 00 00 0f 	move s1, 0
   49e90:	00 b0 3f 00 	or s0, s0, 4076
   49e94:	20 00 00 82 	store_8 s1, (s0)
   49e98:	1f 00 00 f0 	ret

0000000000049e9c HU_Start:
   49e9c:	de 03 ff 05 	add_i sp, sp, -64
   49ea0:	1e f3 00 88 	store_32 s24, 60(sp)
   49ea4:	3e e3 00 88 	store_32 s25, 56(sp)
   49ea8:	5e d3 00 88 	store_32 s26, 52(sp)
   49eac:	7e c3 00 88 	store_32 s27, 48(sp)
   49eb0:	fe b3 00 88 	store_32 ra, 44(sp)
   49eb4:	00 0c 00 4f 	movehi s0, 96
   49eb8:	20 b0 3f 00 	or s1, s0, 4076
   49ebc:	01 00 00 a0 	load_u8 s0, (s1)
   49ec0:	00 04 00 11 	cmpne_i s0, s0, 1
   49ec4:	60 00 00 f4 	bnz s0, 12 <HU_Start+0x34>
   49ec8:	00 00 00 0f 	move s0, 0
   49ecc:	01 00 00 82 	store_8 s0, (s1)
   49ed0:	1a 04 00 4f 	movehi s0, 58
   49ed4:	3e a0 00 88 	store_32 s1, 40(sp)
   49ed8:	3b 04 00 4f 	movehi s1, 59
   49edc:	40 0c 00 4f 	movehi s2, 96
   49ee0:	00 c0 6d 00 	or s0, s0, 7024
   49ee4:	21 40 02 00 	or s1, s1, 144
   49ee8:	42 c0 3f 00 	or s2, s2, 4080
   49eec:	00 00 00 a8 	load_32 s0, (s0)
   49ef0:	60 0c 00 4f 	movehi s3, 96
   49ef4:	00 03 00 0f 	move s24, 0
   49ef8:	20 87 00 0f 	move s25, 33
   49efc:	c3 d0 3f 00 	or s6, s3, 4084
   49f00:	00 60 04 07 	mull_i s0, s0, 280
   49f04:	01 00 50 c0 	add_i s0, s1, s0
   49f08:	02 00 00 88 	store_32 s0, (s2)
   49f0c:	00 0c 00 4f 	movehi s0, 96
   49f10:	06 03 00 88 	store_32 s24, (s6)
   49f14:	20 0c 00 4f 	movehi s1, 96
   49f18:	40 0c 00 4f 	movehi s2, 96
   49f1c:	00 a0 06 00 	or s0, s0, 424
   49f20:	21 e0 3f 00 	or s1, s1, 4088
   49f24:	42 a0 02 00 	or s2, s2, 168
   49f28:	00 03 00 88 	store_32 s24, (s0)
   49f2c:	00 0c 00 4f 	movehi s0, 96
   49f30:	01 03 00 88 	store_32 s24, (s1)
   49f34:	20 0c 00 4f 	movehi s1, 96
   49f38:	5e 80 00 88 	store_32 s2, 32(sp)
   49f3c:	60 04 00 0f 	move s3, 1
   49f40:	02 03 00 88 	store_32 s24, (s2)
   49f44:	00 f0 3f 00 	or s0, s0, 4092
   49f48:	41 b3 02 00 	or s26, s1, 172
   49f4c:	20 00 fc c0 	move s1, s24
   49f50:	40 00 fc c0 	move s2, s24
   49f54:	7e 90 00 88 	store_32 s3, 36(sp)
   49f58:	80 00 fd c0 	move s4, s26
   49f5c:	a0 80 fc c0 	move s5, s25
   49f60:	aa 04 00 f8 	call 4776 <HUlib_initSText>
   49f64:	1a 00 00 a8 	load_32 s0, (s26)
   49f68:	20 9c 02 0f 	move s1, 167
   49f6c:	00 08 00 a6 	load_s16 s0, 2(s0)
   49f70:	41 00 60 c0 	sub_i s2, s1, s0
   49f74:	00 0c 00 4f 	movehi s0, 96
   49f78:	60 f3 46 00 	or s27, s0, 4540
   49f7c:	00 80 fd c0 	move s0, s27
   49f80:	20 00 fc c0 	move s1, s24
   49f84:	60 00 fd c0 	move s3, s26
   49f88:	80 80 fc c0 	move s4, s25
   49f8c:	d6 03 00 f8 	call 3928 <HUlib_initTextLine>
   49f90:	0b 04 00 4f 	movehi s0, 43
   49f94:	00 00 40 00 	or s0, s0, 4096
   49f98:	00 00 00 a8 	load_32 s0, (s0)
   49f9c:	20 0c 00 16 	cmpgt_u s1, s0, 3
   49fa0:	01 0a 00 f4 	bnz s1, 320 <HU_Start+0x244>
   49fa4:	00 08 00 11 	cmpne_i s0, s0, 2
   49fa8:	40 00 00 f4 	bnz s0, 8 <HU_Start+0x114>
   49fac:	4d 00 00 f6 	b 308 <HU_Start+0x244>
   49fb0:	1a 04 00 4f 	movehi s0, 58
   49fb4:	3a 04 00 4f 	movehi s1, 58
   49fb8:	54 04 00 4f 	movehi s2, 52
   49fbc:	00 70 6f 00 	or s0, s0, 7132
   49fc0:	21 80 7f 00 	or s1, s1, 8160
   49fc4:	00 00 00 a8 	load_32 s0, (s0)
   49fc8:	21 00 00 a8 	load_32 s1, (s1)
   49fcc:	00 24 00 07 	mull_i s0, s0, 9
   49fd0:	00 80 50 c0 	add_i s0, s0, s1
   49fd4:	22 90 48 00 	or s1, s2, 4644
   49fd8:	00 08 00 0b 	shl s0, s0, 2
   49fdc:	01 00 50 c0 	add_i s0, s1, s0
   49fe0:	00 60 ff 05 	add_i s0, s0, -40
   49fe4:	00 03 00 a8 	load_32 s24, (s0)
   49fe8:	18 00 00 a0 	load_u8 s0, (s24)
   49fec:	00 01 00 f2 	bz s0, 32 <HU_Start+0x170>
   49ff0:	20 00 d0 c1 	sext_8 s1, s0
   49ff4:	00 80 fd c0 	move s0, s27
   49ff8:	38 07 00 05 	add_i s25, s24, 1
   49ffc:	c4 03 00 f8 	call 3856 <HUlib_addCharToTextLine>
   4a000:	18 04 00 a0 	load_u8 s0, 1(s24)
   4a004:	00 83 fc c0 	move s24, s25
   4a008:	40 ff ff f5 	bnz s0, -24 <HU_Start+0x154>
   4a00c:	1a 00 00 a8 	load_32 s0, (s26)
   4a010:	00 03 00 0f 	move s24, 0
   4a014:	80 84 00 0f 	move s4, 33
   4a018:	00 08 00 a6 	load_s16 s0, 2(s0)
   4a01c:	20 00 fc c0 	move s1, s24
   4a020:	60 00 fd c0 	move s3, s26
   4a024:	be 80 00 a8 	load_32 s5, 32(sp)
   4a028:	40 04 00 05 	add_i s2, s0, 1
   4a02c:	00 0c 00 4f 	movehi s0, 96
   4a030:	00 a0 48 00 	or s0, s0, 4648
   4a034:	77 05 00 f8 	call 5596 <HUlib_initIText>
   4a038:	00 0c 00 4f 	movehi s0, 96
   4a03c:	20 0c 00 4f 	movehi s1, 96
   4a040:	20 83 4a 00 	or s25, s0, 4768
   4a044:	41 03 52 00 	or s26, s1, 5248
   4a048:	00 80 fc c0 	move s0, s25
   4a04c:	20 00 fc c0 	move s1, s24
   4a050:	40 00 fc c0 	move s2, s24
   4a054:	60 00 fc c0 	move s3, s24
   4a058:	80 00 fc c0 	move s4, s24
   4a05c:	a0 00 fd c0 	move s5, s26
   4a060:	6c 05 00 f8 	call 5552 <HUlib_initIText>
   4a064:	20 00 fc c0 	move s1, s24
   4a068:	40 00 fc c0 	move s2, s24
   4a06c:	60 00 fc c0 	move s3, s24
   4a070:	80 00 fc c0 	move s4, s24
   4a074:	19 e0 01 05 	add_i s0, s25, 120
   4a078:	a0 00 fd c0 	move s5, s26
   4a07c:	65 05 00 f8 	call 5524 <HUlib_initIText>
   4a080:	20 00 fc c0 	move s1, s24
   4a084:	40 00 fc c0 	move s2, s24
   4a088:	60 00 fc c0 	move s3, s24
   4a08c:	80 00 fc c0 	move s4, s24
   4a090:	19 c0 03 05 	add_i s0, s25, 240
   4a094:	a0 00 fd c0 	move s5, s26
   4a098:	5e 05 00 f8 	call 5496 <HUlib_initIText>
   4a09c:	20 00 fc c0 	move s1, s24
   4a0a0:	40 00 fc c0 	move s2, s24
   4a0a4:	60 00 fc c0 	move s3, s24
   4a0a8:	80 00 fc c0 	move s4, s24
   4a0ac:	19 a0 05 05 	add_i s0, s25, 360
   4a0b0:	a0 00 fd c0 	move s5, s26
   4a0b4:	57 05 00 f8 	call 5468 <HUlib_initIText>
   4a0b8:	1e a0 00 a8 	load_32 s0, 40(sp)
   4a0bc:	3e 90 00 a8 	load_32 s1, 36(sp)
   4a0c0:	20 00 00 82 	store_8 s1, (s0)
   4a0c4:	fe b3 00 a8 	load_32 ra, 44(sp)
   4a0c8:	7e c3 00 a8 	load_32 s27, 48(sp)
   4a0cc:	5e d3 00 a8 	load_32 s26, 52(sp)
   4a0d0:	3e e3 00 a8 	load_32 s25, 56(sp)
   4a0d4:	1e f3 00 a8 	load_32 s24, 60(sp)
   4a0d8:	de 03 01 05 	add_i sp, sp, 64
   4a0dc:	1f 00 00 f0 	ret
   4a0e0:	1a 04 00 4f 	movehi s0, 58
   4a0e4:	34 04 00 4f 	movehi s1, 52
   4a0e8:	00 80 7f 00 	or s0, s0, 8160
   4a0ec:	21 60 4b 00 	or s1, s1, 4824
   4a0f0:	00 00 00 a8 	load_32 s0, (s0)
   4a0f4:	00 08 00 0b 	shl s0, s0, 2
   4a0f8:	01 00 50 c0 	add_i s0, s1, s0
   4a0fc:	00 f0 ff 05 	add_i s0, s0, -4
   4a100:	00 03 00 a8 	load_32 s24, (s0)
   4a104:	18 00 00 a0 	load_u8 s0, (s24)
   4a108:	20 f8 ff f3 	bz s0, -252 <HU_Start+0x170>
   4a10c:	b9 ff ff f7 	b -284 <HU_Start+0x154>

000000000004a110 HU_Drawer:
   4a110:	de 03 ff 05 	add_i sp, sp, -64
   4a114:	fe f3 00 88 	store_32 ra, 60(sp)
   4a118:	00 0c 00 4f 	movehi s0, 96
   4a11c:	00 f0 3f 00 	or s0, s0, 4092
   4a120:	ba 04 00 f8 	call 4840 <HUlib_drawSText>
   4a124:	00 0c 00 4f 	movehi s0, 96
   4a128:	00 a0 48 00 	or s0, s0, 4648
   4a12c:	a6 05 00 f8 	call 5784 <HUlib_drawIText>
   4a130:	00 0c 00 4f 	movehi s0, 96
   4a134:	00 d0 21 00 	or s0, s0, 2164
   4a138:	00 00 00 a8 	load_32 s0, (s0)
   4a13c:	a0 00 00 f2 	bz s0, 20 <HU_Drawer+0x40>
   4a140:	00 0c 00 4f 	movehi s0, 96
   4a144:	20 00 00 0f 	move s1, 0
   4a148:	00 f0 46 00 	or s0, s0, 4540
   4a14c:	90 03 00 f8 	call 3648 <HUlib_drawTextLine>
   4a150:	fe f3 00 a8 	load_32 ra, 60(sp)
   4a154:	de 03 01 05 	add_i sp, sp, 64
   4a158:	1f 00 00 f0 	ret

000000000004a15c HU_Erase:
   4a15c:	de 03 ff 05 	add_i sp, sp, -64
   4a160:	fe f3 00 88 	store_32 ra, 60(sp)
   4a164:	00 0c 00 4f 	movehi s0, 96
   4a168:	00 f0 3f 00 	or s0, s0, 4092
   4a16c:	06 05 00 f8 	call 5144 <HUlib_eraseSText>
   4a170:	00 0c 00 4f 	movehi s0, 96
   4a174:	00 a0 48 00 	or s0, s0, 4648
   4a178:	9d 05 00 f8 	call 5748 <HUlib_eraseIText>
   4a17c:	00 0c 00 4f 	movehi s0, 96
   4a180:	00 f0 46 00 	or s0, s0, 4540
   4a184:	d0 03 00 f8 	call 3904 <HUlib_eraseTextLine>
   4a188:	fe f3 00 a8 	load_32 ra, 60(sp)
   4a18c:	de 03 01 05 	add_i sp, sp, 64
   4a190:	1f 00 00 f0 	ret

000000000004a194 HU_Ticker:
   4a194:	de 03 ff 05 	add_i sp, sp, -64
   4a198:	1e f3 00 88 	store_32 s24, 60(sp)
   4a19c:	3e e3 00 88 	store_32 s25, 56(sp)
   4a1a0:	5e d3 00 88 	store_32 s26, 52(sp)
   4a1a4:	7e c3 00 88 	store_32 s27, 48(sp)
   4a1a8:	fe b3 00 88 	store_32 ra, 44(sp)
   4a1ac:	00 0c 00 4f 	movehi s0, 96
   4a1b0:	60 10 52 00 	or s3, s0, 5252
   4a1b4:	03 00 00 a8 	load_32 s0, (s3)
   4a1b8:	60 01 00 f2 	bz s0, 44 <HU_Ticker+0x50>
   4a1bc:	00 fc ff 05 	add_i s0, s0, -1
   4a1c0:	03 00 00 88 	store_32 s0, (s3)
   4a1c4:	00 01 00 f4 	bnz s0, 32 <HU_Ticker+0x50>
   4a1c8:	00 0c 00 4f 	movehi s0, 96
   4a1cc:	20 0c 00 4f 	movehi s1, 96
   4a1d0:	40 00 00 0f 	move s2, 0
   4a1d4:	00 d0 3f 00 	or s0, s0, 4084
   4a1d8:	21 e0 3f 00 	or s1, s1, 4088
   4a1dc:	40 00 00 88 	store_32 s2, (s0)
   4a1e0:	41 00 00 88 	store_32 s2, (s1)
   4a1e4:	1b 04 00 4f 	movehi s0, 59
   4a1e8:	20 0c 00 4f 	movehi s1, 96
   4a1ec:	00 b0 24 00 	or s0, s0, 2348
   4a1f0:	21 a3 06 00 	or s25, s1, 424
   4a1f4:	20 00 00 a8 	load_32 s1, (s0)
   4a1f8:	19 00 00 a8 	load_32 s0, (s25)
   4a1fc:	20 80 00 c0 	or s1, s0, s1
   4a200:	e1 03 00 f2 	bz s1, 124 <HU_Ticker+0xe8>
   4a204:	20 0c 00 4f 	movehi s1, 96
   4a208:	00 00 00 10 	cmpeq_i s0, s0, 0
   4a20c:	41 c3 3f 00 	or s26, s1, 4080
   4a210:	20 0c 00 4f 	movehi s1, 96
   4a214:	5a 00 00 a8 	load_32 s2, (s26)
   4a218:	61 e3 3f 00 	or s27, s1, 4088
   4a21c:	42 60 03 a8 	load_32 s2, 216(s2)
   4a220:	3b 00 00 a8 	load_32 s1, (s27)
   4a224:	21 00 00 11 	cmpne_i s1, s1, 0
   4a228:	00 80 10 c0 	and s0, s0, s1
   4a22c:	80 02 00 f4 	bnz s0, 80 <HU_Ticker+0xe8>
   4a230:	62 02 00 f2 	bz s2, 76 <HU_Ticker+0xe8>
   4a234:	00 0c 00 4f 	movehi s0, 96
   4a238:	00 03 00 0f 	move s24, 0
   4a23c:	00 f0 3f 00 	or s0, s0, 4092
   4a240:	20 00 fc c0 	move s1, s24
   4a244:	7e a0 00 88 	store_32 s3, 40(sp)
   4a248:	26 04 00 f8 	call 4248 <HUlib_addMessageToSText>
   4a24c:	20 0c 00 4f 	movehi s1, 96
   4a250:	7e a0 00 a8 	load_32 s3, 40(sp)
   4a254:	1a 00 00 a8 	load_32 s0, (s26)
   4a258:	21 d0 3f 00 	or s1, s1, 4084
   4a25c:	00 63 03 88 	store_32 s24, 216(s0)
   4a260:	00 04 00 0f 	move s0, 1
   4a264:	01 00 00 88 	store_32 s0, (s1)
   4a268:	00 30 02 0f 	move s0, 140
   4a26c:	03 00 00 88 	store_32 s0, (s3)
   4a270:	19 00 00 a8 	load_32 s0, (s25)
   4a274:	1b 00 00 88 	store_32 s0, (s27)
   4a278:	19 03 00 88 	store_32 s24, (s25)
   4a27c:	1b 04 00 4f 	movehi s0, 59
   4a280:	00 c0 01 00 	or s0, s0, 112
   4a284:	00 00 00 a8 	load_32 s0, (s0)
   4a288:	e0 2a 00 f2 	bz s0, 1372 <HU_Ticker+0x650>
   4a28c:	1b 04 00 4f 	movehi s0, 59
   4a290:	3a 04 00 4f 	movehi s1, 58
   4a294:	00 03 02 00 	or s24, s0, 128
   4a298:	21 c3 6d 00 	or s25, s1, 7024
   4a29c:	38 00 00 a8 	load_32 s1, (s24)
   4a2a0:	19 00 00 a8 	load_32 s0, (s25)
   4a2a4:	21 0a 00 f2 	bz s1, 324 <HU_Ticker+0x254>
   4a2a8:	00 0a 00 f2 	bz s0, 320 <HU_Ticker+0x254>
   4a2ac:	3b 04 00 4f 	movehi s1, 59
   4a2b0:	61 43 02 00 	or s27, s1, 144
   4a2b4:	3b 38 00 a0 	load_u8 s1, 14(s27)
   4a2b8:	81 09 00 f2 	bz s1, 304 <HU_Ticker+0x254>
   4a2bc:	80 80 d0 c1 	sext_8 s4, s1
   4a2c0:	44 14 00 12 	cmpgt_i s2, s4, 5
   4a2c4:	a2 00 00 f4 	bnz s2, 20 <HU_Ticker+0x144>
   4a2c8:	20 0c 00 4f 	movehi s1, 96
   4a2cc:	21 c0 55 00 	or s1, s1, 5488
   4a2d0:	81 00 00 82 	store_8 s4, (s1)
   4a2d4:	42 00 00 f6 	b 264 <HU_Ticker+0x248>
   4a2d8:	44 7c fe 05 	add_i s2, s4, -97
   4a2dc:	40 83 fc c0 	move s26, s25
   4a2e0:	7e a0 00 88 	store_32 s3, 40(sp)
   4a2e4:	42 fc 03 01 	and s2, s2, 255
   4a2e8:	42 64 00 16 	cmpgt_u s2, s2, 25
   4a2ec:	c2 00 00 f4 	bnz s2, 24 <HU_Ticker+0x170>
   4a2f0:	00 0c 00 4f 	movehi s0, 96
   4a2f4:	00 b0 06 00 	or s0, s0, 428
   4a2f8:	00 00 00 a8 	load_32 s0, (s0)
   4a2fc:	00 80 50 c0 	add_i s0, s0, s1
   4a300:	80 00 00 a0 	load_u8 s4, (s0)
   4a304:	20 0c 00 4f 	movehi s1, 96
   4a308:	24 ff 03 01 	and s25, s4, 255
   4a30c:	01 80 4a 00 	or s0, s1, 4768
   4a310:	1e 90 00 88 	store_32 s0, 36(sp)
   4a314:	20 80 fc c0 	move s1, s25
   4a318:	06 05 00 f8 	call 5144 <HUlib_keyInIText>
   4a31c:	7e a0 00 a8 	load_32 s3, 40(sp)
   4a320:	39 34 00 11 	cmpne_i s1, s25, 13
   4a324:	20 03 fd c0 	move s25, s26
   4a328:	a1 05 00 f4 	bnz s1, 180 <HU_Ticker+0x248>
   4a32c:	80 05 00 f2 	bz s0, 176 <HU_Ticker+0x248>
   4a330:	5e 93 00 a8 	load_32 s26, 36(sp)
   4a334:	1a 90 01 a8 	load_32 s0, 100(s26)
   4a338:	c0 04 00 f2 	bz s0, 152 <HU_Ticker+0x23c>
   4a33c:	00 0c 00 4f 	movehi s0, 96
   4a340:	00 c0 55 00 	or s0, s0, 5488
   4a344:	00 00 00 a2 	load_s8 s0, (s0)
   4a348:	39 00 00 a8 	load_32 s1, (s25)
   4a34c:	40 14 00 10 	cmpeq_i s2, s0, 5
   4a350:	82 00 00 f4 	bnz s2, 16 <HU_Ticker+0x1cc>
   4a354:	21 04 00 05 	add_i s1, s1, 1
   4a358:	01 00 10 c1 	cmpne_i s0, s1, s0
   4a35c:	a0 03 00 f4 	bnz s0, 116 <HU_Ticker+0x23c>
   4a360:	14 04 00 4f 	movehi s0, 52
   4a364:	5a 40 00 05 	add_i s2, s26, 16
   4a368:	00 50 48 00 	or s0, s0, 4628
   4a36c:	20 00 00 a8 	load_32 s1, (s0)
   4a370:	00 0c 00 4f 	movehi s0, 96
   4a374:	00 f0 3f 00 	or s0, s0, 4092
   4a378:	da 03 00 f8 	call 3944 <HUlib_addMessageToSText>
   4a37c:	00 0c 00 4f 	movehi s0, 96
   4a380:	20 0c 00 4f 	movehi s1, 96
   4a384:	40 04 00 0f 	move s2, 1
   4a388:	00 e0 3f 00 	or s0, s0, 4088
   4a38c:	21 d0 3f 00 	or s1, s1, 4084
   4a390:	6b 04 00 4f 	movehi s3, 43
   4a394:	40 00 00 88 	store_32 s2, (s0)
   4a398:	41 00 00 88 	store_32 s2, (s1)
   4a39c:	20 30 02 0f 	move s1, 140
   4a3a0:	5e a0 00 a8 	load_32 s2, 40(sp)
   4a3a4:	03 00 40 00 	or s0, s3, 4096
   4a3a8:	22 00 00 88 	store_32 s1, (s2)
   4a3ac:	00 00 00 a8 	load_32 s0, (s0)
   4a3b0:	00 08 00 11 	cmpne_i s0, s0, 2
   4a3b4:	80 00 00 f4 	bnz s0, 16 <HU_Ticker+0x230>
   4a3b8:	00 00 00 0f 	move s0, 0
   4a3bc:	20 b0 01 0f 	move s1, 108
   4a3c0:	03 00 00 f6 	b 12 <HU_Ticker+0x238>
   4a3c4:	00 00 00 0f 	move s0, 0
   4a3c8:	20 5c 01 0f 	move s1, 87
   4a3cc:	06 08 00 f8 	call 8216 <S_StartSound>
   4a3d0:	00 00 fd c0 	move s0, s26
   4a3d4:	ba 04 00 f8 	call 4840 <HUlib_resetIText>
   4a3d8:	7e a0 00 a8 	load_32 s3, 40(sp)
   4a3dc:	00 00 00 0f 	move s0, 0
   4a3e0:	1b 38 00 82 	store_8 s0, 14(s27)
   4a3e4:	19 00 00 a8 	load_32 s0, (s25)
   4a3e8:	38 10 00 a8 	load_32 s1, 4(s24)
   4a3ec:	c1 0a 00 f2 	bz s1, 344 <HU_Ticker+0x3b0>
   4a3f0:	20 04 00 10 	cmpeq_i s1, s0, 1
   4a3f4:	81 0a 00 f4 	bnz s1, 336 <HU_Ticker+0x3b0>
   4a3f8:	3b 04 00 4f 	movehi s1, 59
   4a3fc:	61 43 02 00 	or s27, s1, 144
   4a400:	3b 98 04 a0 	load_u8 s1, 294(s27)
   4a404:	01 0a 00 f2 	bz s1, 320 <HU_Ticker+0x3b0>
   4a408:	00 80 d0 c1 	sext_8 s0, s1
   4a40c:	40 18 00 14 	cmplt_i s2, s0, 6
   4a410:	42 00 00 f4 	bnz s2, 8 <HU_Ticker+0x284>
   4a414:	05 00 00 f6 	b 20 <HU_Ticker+0x294>
   4a418:	20 0c 00 4f 	movehi s1, 96
   4a41c:	21 c4 55 00 	or s1, s1, 5489
   4a420:	01 00 00 82 	store_8 s0, (s1)
   4a424:	45 00 00 f6 	b 276 <HU_Ticker+0x3a4>
   4a428:	40 7c fe 05 	add_i s2, s0, -97
   4a42c:	40 83 fc c0 	move s26, s25
   4a430:	7e a0 00 88 	store_32 s3, 40(sp)
   4a434:	42 fc 03 01 	and s2, s2, 255
   4a438:	42 64 00 16 	cmpgt_u s2, s2, 25
   4a43c:	c2 00 00 f4 	bnz s2, 24 <HU_Ticker+0x2c0>
   4a440:	00 0c 00 4f 	movehi s0, 96
   4a444:	00 b0 06 00 	or s0, s0, 428
   4a448:	00 00 00 a8 	load_32 s0, (s0)
   4a44c:	00 80 50 c0 	add_i s0, s0, s1
   4a450:	00 00 00 a0 	load_u8 s0, (s0)
   4a454:	20 0c 00 4f 	movehi s1, 96
   4a458:	20 ff 03 01 	and s25, s0, 255
   4a45c:	21 80 4a 00 	or s1, s1, 4768
   4a460:	3e 80 00 88 	store_32 s1, 32(sp)
   4a464:	01 e0 01 05 	add_i s0, s1, 120
   4a468:	1e 90 00 88 	store_32 s0, 36(sp)
   4a46c:	20 80 fc c0 	move s1, s25
   4a470:	b0 04 00 f8 	call 4800 <HUlib_keyInIText>
   4a474:	7e a0 00 a8 	load_32 s3, 40(sp)
   4a478:	39 34 00 11 	cmpne_i s1, s25, 13
   4a47c:	20 03 fd c0 	move s25, s26
   4a480:	c1 05 00 f4 	bnz s1, 184 <HU_Ticker+0x3a4>
   4a484:	a0 05 00 f2 	bz s0, 180 <HU_Ticker+0x3a4>
   4a488:	7e 80 00 a8 	load_32 s3, 32(sp)
   4a48c:	03 70 03 a8 	load_32 s0, 220(s3)
   4a490:	e0 04 00 f2 	bz s0, 156 <HU_Ticker+0x398>
   4a494:	00 0c 00 4f 	movehi s0, 96
   4a498:	00 c4 55 00 	or s0, s0, 5489
   4a49c:	00 00 00 a2 	load_s8 s0, (s0)
   4a4a0:	39 00 00 a8 	load_32 s1, (s25)
   4a4a4:	40 14 00 10 	cmpeq_i s2, s0, 5
   4a4a8:	82 00 00 f4 	bnz s2, 16 <HU_Ticker+0x324>
   4a4ac:	21 04 00 05 	add_i s1, s1, 1
   4a4b0:	01 00 10 c1 	cmpne_i s0, s1, s0
   4a4b4:	c0 03 00 f4 	bnz s0, 120 <HU_Ticker+0x398>
   4a4b8:	14 04 00 4f 	movehi s0, 52
   4a4bc:	43 20 02 05 	add_i s2, s3, 136
   4a4c0:	00 50 48 00 	or s0, s0, 4628
   4a4c4:	20 10 00 a8 	load_32 s1, 4(s0)
   4a4c8:	00 0c 00 4f 	movehi s0, 96
   4a4cc:	00 f0 3f 00 	or s0, s0, 4092
   4a4d0:	84 03 00 f8 	call 3600 <HUlib_addMessageToSText>
   4a4d4:	00 0c 00 4f 	movehi s0, 96
   4a4d8:	20 0c 00 4f 	movehi s1, 96
   4a4dc:	40 04 00 0f 	move s2, 1
   4a4e0:	00 e0 3f 00 	or s0, s0, 4088
   4a4e4:	21 d0 3f 00 	or s1, s1, 4084
   4a4e8:	6b 04 00 4f 	movehi s3, 43
   4a4ec:	40 00 00 88 	store_32 s2, (s0)
   4a4f0:	41 00 00 88 	store_32 s2, (s1)
   4a4f4:	20 30 02 0f 	move s1, 140
   4a4f8:	5e a0 00 a8 	load_32 s2, 40(sp)
   4a4fc:	03 00 40 00 	or s0, s3, 4096
   4a500:	22 00 00 88 	store_32 s1, (s2)
   4a504:	00 00 00 a8 	load_32 s0, (s0)
   4a508:	00 08 00 10 	cmpeq_i s0, s0, 2
   4a50c:	40 00 00 f4 	bnz s0, 8 <HU_Ticker+0x380>
   4a510:	04 00 00 f6 	b 16 <HU_Ticker+0x38c>
   4a514:	00 00 00 0f 	move s0, 0
   4a518:	20 b0 01 0f 	move s1, 108
   4a51c:	03 00 00 f6 	b 12 <HU_Ticker+0x394>
   4a520:	00 00 00 0f 	move s0, 0
   4a524:	20 5c 01 0f 	move s1, 87
   4a528:	af 07 00 f8 	call 7868 <S_StartSound>
   4a52c:	1e 90 00 a8 	load_32 s0, 36(sp)
   4a530:	63 04 00 f8 	call 4492 <HUlib_resetIText>
   4a534:	7e a0 00 a8 	load_32 s3, 40(sp)
   4a538:	00 00 00 0f 	move s0, 0
   4a53c:	1b 98 04 82 	store_8 s0, 294(s27)
   4a540:	19 00 00 a8 	load_32 s0, (s25)
   4a544:	38 20 00 a8 	load_32 s1, 8(s24)
   4a548:	c1 0a 00 f2 	bz s1, 344 <HU_Ticker+0x50c>
   4a54c:	20 08 00 10 	cmpeq_i s1, s0, 2
   4a550:	81 0a 00 f4 	bnz s1, 336 <HU_Ticker+0x50c>
   4a554:	3b 04 00 4f 	movehi s1, 59
   4a558:	61 43 02 00 	or s27, s1, 144
   4a55c:	3b f8 08 a0 	load_u8 s1, 574(s27)
   4a560:	01 0a 00 f2 	bz s1, 320 <HU_Ticker+0x50c>
   4a564:	00 80 d0 c1 	sext_8 s0, s1
   4a568:	40 18 00 14 	cmplt_i s2, s0, 6
   4a56c:	42 00 00 f4 	bnz s2, 8 <HU_Ticker+0x3e0>
   4a570:	05 00 00 f6 	b 20 <HU_Ticker+0x3f0>
   4a574:	20 0c 00 4f 	movehi s1, 96
   4a578:	21 c8 55 00 	or s1, s1, 5490
   4a57c:	01 00 00 82 	store_8 s0, (s1)
   4a580:	45 00 00 f6 	b 276 <HU_Ticker+0x500>
   4a584:	40 7c fe 05 	add_i s2, s0, -97
   4a588:	40 83 fc c0 	move s26, s25
   4a58c:	7e a0 00 88 	store_32 s3, 40(sp)
   4a590:	42 fc 03 01 	and s2, s2, 255
   4a594:	42 64 00 16 	cmpgt_u s2, s2, 25
   4a598:	c2 00 00 f4 	bnz s2, 24 <HU_Ticker+0x41c>
   4a59c:	00 0c 00 4f 	movehi s0, 96
   4a5a0:	00 b0 06 00 	or s0, s0, 428
   4a5a4:	00 00 00 a8 	load_32 s0, (s0)
   4a5a8:	00 80 50 c0 	add_i s0, s0, s1
   4a5ac:	00 00 00 a0 	load_u8 s0, (s0)
   4a5b0:	20 0c 00 4f 	movehi s1, 96
   4a5b4:	20 ff 03 01 	and s25, s0, 255
   4a5b8:	21 80 4a 00 	or s1, s1, 4768
   4a5bc:	3e 80 00 88 	store_32 s1, 32(sp)
   4a5c0:	01 c0 03 05 	add_i s0, s1, 240
   4a5c4:	1e 90 00 88 	store_32 s0, 36(sp)
   4a5c8:	20 80 fc c0 	move s1, s25
   4a5cc:	59 04 00 f8 	call 4452 <HUlib_keyInIText>
   4a5d0:	7e a0 00 a8 	load_32 s3, 40(sp)
   4a5d4:	39 34 00 11 	cmpne_i s1, s25, 13
   4a5d8:	20 03 fd c0 	move s25, s26
   4a5dc:	c1 05 00 f4 	bnz s1, 184 <HU_Ticker+0x500>
   4a5e0:	a0 05 00 f2 	bz s0, 180 <HU_Ticker+0x500>
   4a5e4:	7e 80 00 a8 	load_32 s3, 32(sp)
   4a5e8:	03 50 05 a8 	load_32 s0, 340(s3)
   4a5ec:	e0 04 00 f2 	bz s0, 156 <HU_Ticker+0x4f4>
   4a5f0:	00 0c 00 4f 	movehi s0, 96
   4a5f4:	00 c8 55 00 	or s0, s0, 5490
   4a5f8:	00 00 00 a2 	load_s8 s0, (s0)
   4a5fc:	39 00 00 a8 	load_32 s1, (s25)
   4a600:	40 14 00 10 	cmpeq_i s2, s0, 5
   4a604:	82 00 00 f4 	bnz s2, 16 <HU_Ticker+0x480>
   4a608:	21 04 00 05 	add_i s1, s1, 1
   4a60c:	01 00 10 c1 	cmpne_i s0, s1, s0
   4a610:	c0 03 00 f4 	bnz s0, 120 <HU_Ticker+0x4f4>
   4a614:	14 04 00 4f 	movehi s0, 52
   4a618:	43 00 04 05 	add_i s2, s3, 256
   4a61c:	00 50 48 00 	or s0, s0, 4628
   4a620:	20 20 00 a8 	load_32 s1, 8(s0)
   4a624:	00 0c 00 4f 	movehi s0, 96
   4a628:	00 f0 3f 00 	or s0, s0, 4092
   4a62c:	2d 03 00 f8 	call 3252 <HUlib_addMessageToSText>
   4a630:	00 0c 00 4f 	movehi s0, 96
   4a634:	20 0c 00 4f 	movehi s1, 96
   4a638:	40 04 00 0f 	move s2, 1
   4a63c:	00 e0 3f 00 	or s0, s0, 4088
   4a640:	21 d0 3f 00 	or s1, s1, 4084
   4a644:	6b 04 00 4f 	movehi s3, 43
   4a648:	40 00 00 88 	store_32 s2, (s0)
   4a64c:	41 00 00 88 	store_32 s2, (s1)
   4a650:	20 30 02 0f 	move s1, 140
   4a654:	5e a0 00 a8 	load_32 s2, 40(sp)
   4a658:	03 00 40 00 	or s0, s3, 4096
   4a65c:	22 00 00 88 	store_32 s1, (s2)
   4a660:	00 00 00 a8 	load_32 s0, (s0)
   4a664:	00 08 00 10 	cmpeq_i s0, s0, 2
   4a668:	40 00 00 f4 	bnz s0, 8 <HU_Ticker+0x4dc>
   4a66c:	04 00 00 f6 	b 16 <HU_Ticker+0x4e8>
   4a670:	00 00 00 0f 	move s0, 0
   4a674:	20 b0 01 0f 	move s1, 108
   4a678:	03 00 00 f6 	b 12 <HU_Ticker+0x4f0>
   4a67c:	00 00 00 0f 	move s0, 0
   4a680:	20 5c 01 0f 	move s1, 87
   4a684:	58 07 00 f8 	call 7520 <S_StartSound>
   4a688:	1e 90 00 a8 	load_32 s0, 36(sp)
   4a68c:	0c 04 00 f8 	call 4144 <HUlib_resetIText>
   4a690:	7e a0 00 a8 	load_32 s3, 40(sp)
   4a694:	00 00 00 0f 	move s0, 0
   4a698:	1b f8 08 82 	store_8 s0, 574(s27)
   4a69c:	19 00 00 a8 	load_32 s0, (s25)
   4a6a0:	38 30 00 a8 	load_32 s1, 12(s24)
   4a6a4:	01 0a 00 f2 	bz s1, 320 <HU_Ticker+0x650>
   4a6a8:	00 0c 00 10 	cmpeq_i s0, s0, 3
   4a6ac:	c0 09 00 f4 	bnz s0, 312 <HU_Ticker+0x650>
   4a6b0:	1b 04 00 4f 	movehi s0, 59
   4a6b4:	60 43 02 00 	or s27, s0, 144
   4a6b8:	3b 58 0d a0 	load_u8 s1, 854(s27)
   4a6bc:	41 09 00 f2 	bz s1, 296 <HU_Ticker+0x650>
   4a6c0:	00 80 d0 c1 	sext_8 s0, s1
   4a6c4:	40 18 00 14 	cmplt_i s2, s0, 6
   4a6c8:	42 00 00 f4 	bnz s2, 8 <HU_Ticker+0x53c>
   4a6cc:	05 00 00 f6 	b 20 <HU_Ticker+0x54c>
   4a6d0:	20 0c 00 4f 	movehi s1, 96
   4a6d4:	21 cc 55 00 	or s1, s1, 5491
   4a6d8:	01 00 00 82 	store_8 s0, (s1)
   4a6dc:	40 00 00 f6 	b 256 <HU_Ticker+0x648>
   4a6e0:	40 7c fe 05 	add_i s2, s0, -97
   4a6e4:	40 83 fc c0 	move s26, s25
   4a6e8:	7e a0 00 88 	store_32 s3, 40(sp)
   4a6ec:	42 fc 03 01 	and s2, s2, 255
   4a6f0:	42 64 00 16 	cmpgt_u s2, s2, 25
   4a6f4:	c2 00 00 f4 	bnz s2, 24 <HU_Ticker+0x578>
   4a6f8:	00 0c 00 4f 	movehi s0, 96
   4a6fc:	00 b0 06 00 	or s0, s0, 428
   4a700:	00 00 00 a8 	load_32 s0, (s0)
   4a704:	00 80 50 c0 	add_i s0, s0, s1
   4a708:	00 00 00 a0 	load_u8 s0, (s0)
   4a70c:	20 0c 00 4f 	movehi s1, 96
   4a710:	20 ff 03 01 	and s25, s0, 255
   4a714:	01 83 4a 00 	or s24, s1, 4768
   4a718:	18 a0 05 05 	add_i s0, s24, 360
   4a71c:	1e 90 00 88 	store_32 s0, 36(sp)
   4a720:	20 80 fc c0 	move s1, s25
   4a724:	03 04 00 f8 	call 4108 <HUlib_keyInIText>
   4a728:	39 34 00 11 	cmpne_i s1, s25, 13
   4a72c:	81 05 00 f4 	bnz s1, 176 <HU_Ticker+0x648>
   4a730:	60 05 00 f2 	bz s0, 172 <HU_Ticker+0x648>
   4a734:	18 30 07 a8 	load_32 s0, 460(s24)
   4a738:	e0 04 00 f2 	bz s0, 156 <HU_Ticker+0x640>
   4a73c:	00 0c 00 4f 	movehi s0, 96
   4a740:	00 cc 55 00 	or s0, s0, 5491
   4a744:	00 00 00 a2 	load_s8 s0, (s0)
   4a748:	3a 00 00 a8 	load_32 s1, (s26)
   4a74c:	40 14 00 10 	cmpeq_i s2, s0, 5
   4a750:	82 00 00 f4 	bnz s2, 16 <HU_Ticker+0x5cc>
   4a754:	21 04 00 05 	add_i s1, s1, 1
   4a758:	01 00 10 c1 	cmpne_i s0, s1, s0
   4a75c:	c0 03 00 f4 	bnz s0, 120 <HU_Ticker+0x640>
   4a760:	14 04 00 4f 	movehi s0, 52
   4a764:	58 e0 05 05 	add_i s2, s24, 376
   4a768:	00 50 48 00 	or s0, s0, 4628
   4a76c:	20 30 00 a8 	load_32 s1, 12(s0)
   4a770:	00 0c 00 4f 	movehi s0, 96
   4a774:	00 f0 3f 00 	or s0, s0, 4092
   4a778:	da 02 00 f8 	call 2920 <HUlib_addMessageToSText>
   4a77c:	00 0c 00 4f 	movehi s0, 96
   4a780:	20 0c 00 4f 	movehi s1, 96
   4a784:	40 04 00 0f 	move s2, 1
   4a788:	00 e0 3f 00 	or s0, s0, 4088
   4a78c:	21 d0 3f 00 	or s1, s1, 4084
   4a790:	6b 04 00 4f 	movehi s3, 43
   4a794:	40 00 00 88 	store_32 s2, (s0)
   4a798:	41 00 00 88 	store_32 s2, (s1)
   4a79c:	20 30 02 0f 	move s1, 140
   4a7a0:	5e a0 00 a8 	load_32 s2, 40(sp)
   4a7a4:	03 00 40 00 	or s0, s3, 4096
   4a7a8:	22 00 00 88 	store_32 s1, (s2)
   4a7ac:	00 00 00 a8 	load_32 s0, (s0)
   4a7b0:	00 08 00 10 	cmpeq_i s0, s0, 2
   4a7b4:	40 00 00 f4 	bnz s0, 8 <HU_Ticker+0x628>
   4a7b8:	04 00 00 f6 	b 16 <HU_Ticker+0x634>
   4a7bc:	00 00 00 0f 	move s0, 0
   4a7c0:	20 b0 01 0f 	move s1, 108
   4a7c4:	03 00 00 f6 	b 12 <HU_Ticker+0x63c>
   4a7c8:	00 00 00 0f 	move s0, 0
   4a7cc:	20 5c 01 0f 	move s1, 87
   4a7d0:	05 07 00 f8 	call 7188 <S_StartSound>
   4a7d4:	1e 90 00 a8 	load_32 s0, 36(sp)
   4a7d8:	b9 03 00 f8 	call 3812 <HUlib_resetIText>
   4a7dc:	00 00 00 0f 	move s0, 0
   4a7e0:	1b 58 0d 82 	store_8 s0, 854(s27)
   4a7e4:	fe b3 00 a8 	load_32 ra, 44(sp)
   4a7e8:	7e c3 00 a8 	load_32 s27, 48(sp)
   4a7ec:	5e d3 00 a8 	load_32 s26, 52(sp)
   4a7f0:	3e e3 00 a8 	load_32 s25, 56(sp)
   4a7f4:	1e f3 00 a8 	load_32 s24, 60(sp)
   4a7f8:	de 03 01 05 	add_i sp, sp, 64
   4a7fc:	1f 00 00 f0 	ret

000000000004a800 HU_queueChatChar:
   4a800:	20 0c 00 4f 	movehi s1, 96
   4a804:	60 0c 00 4f 	movehi s3, 96
   4a808:	21 20 52 00 	or s1, s1, 5256
   4a80c:	63 30 52 00 	or s3, s3, 5260
   4a810:	41 00 00 a8 	load_32 s2, (s1)
   4a814:	a3 00 00 a8 	load_32 s5, (s3)
   4a818:	82 04 00 05 	add_i s4, s2, 1
   4a81c:	64 fc 01 01 	and s3, s4, 127
   4a820:	83 80 12 c1 	cmpne_i s4, s3, s5
   4a824:	04 01 00 f4 	bnz s4, 32 <HU_queueChatChar+0x44>
   4a828:	00 0c 00 4f 	movehi s0, 96
   4a82c:	22 00 00 4f 	movehi s1, 2
   4a830:	00 c0 3f 00 	or s0, s0, 4080
   4a834:	21 d0 17 00 	or s1, s1, 1524
   4a838:	00 00 00 a8 	load_32 s0, (s0)
   4a83c:	20 60 03 88 	store_32 s1, 216(s0)
   4a840:	1f 00 00 f0 	ret
   4a844:	80 0c 00 4f 	movehi s4, 96
   4a848:	84 40 52 00 	or s4, s4, 5264
   4a84c:	44 00 51 c0 	add_i s2, s4, s2
   4a850:	02 00 00 82 	store_8 s0, (s2)
   4a854:	61 00 00 88 	store_32 s3, (s1)
   4a858:	1f 00 00 f0 	ret

000000000004a85c HU_dequeueChatChar:
   4a85c:	00 0c 00 4f 	movehi s0, 96
   4a860:	20 0c 00 4f 	movehi s1, 96
   4a864:	40 20 52 00 	or s2, s0, 5256
   4a868:	01 30 52 00 	or s0, s1, 5260
   4a86c:	42 00 00 a8 	load_32 s2, (s2)
   4a870:	20 00 00 a8 	load_32 s1, (s0)
   4a874:	42 80 00 c1 	cmpeq_i s2, s2, s1
   4a878:	42 00 00 f4 	bnz s2, 8 <HU_dequeueChatChar+0x24>
   4a87c:	04 00 00 f6 	b 16 <HU_dequeueChatChar+0x30>
   4a880:	20 00 00 0f 	move s1, 0
   4a884:	00 80 d0 c1 	sext_8 s0, s1
   4a888:	1f 00 00 f0 	ret
   4a88c:	40 0c 00 4f 	movehi s2, 96
   4a890:	61 04 00 05 	add_i s3, s1, 1
   4a894:	42 40 52 00 	or s2, s2, 5264
   4a898:	42 80 50 c0 	add_i s2, s2, s1
   4a89c:	22 00 00 a0 	load_u8 s1, (s2)
   4a8a0:	43 fc 01 01 	and s2, s3, 127
   4a8a4:	40 00 00 88 	store_32 s2, (s0)
   4a8a8:	00 80 d0 c1 	sext_8 s0, s1
   4a8ac:	1f 00 00 f0 	ret

000000000004a8b0 HU_Responder:
   4a8b0:	de 03 ff 05 	add_i sp, sp, -64
   4a8b4:	1e f3 00 88 	store_32 s24, 60(sp)
   4a8b8:	3e e3 00 88 	store_32 s25, 56(sp)
   4a8bc:	5e d3 00 88 	store_32 s26, 52(sp)
   4a8c0:	7e c3 00 88 	store_32 s27, 48(sp)
   4a8c4:	fe b3 00 88 	store_32 ra, 44(sp)
   4a8c8:	3b 04 00 4f 	movehi s1, 59
   4a8cc:	41 00 02 00 	or s2, s1, 128
   4a8d0:	22 00 00 a8 	load_32 s1, (s2)
   4a8d4:	62 10 00 a8 	load_32 s3, 4(s2)
   4a8d8:	82 20 00 a8 	load_32 s4, 8(s2)
   4a8dc:	a2 30 00 a8 	load_32 s5, 12(s2)
   4a8e0:	40 10 00 a8 	load_32 s2, 4(s0)
   4a8e4:	c2 e0 02 10 	cmpeq_i s6, s2, 184
   4a8e8:	e6 00 00 f4 	bnz s6, 28 <HU_Responder+0x54>
   4a8ec:	c2 d8 02 11 	cmpne_i s6, s2, 182
   4a8f0:	a6 01 00 f4 	bnz s6, 52 <HU_Responder+0x74>
   4a8f4:	00 00 00 a8 	load_32 s0, (s0)
   4a8f8:	20 0c 00 4f 	movehi s1, 96
   4a8fc:	21 90 55 00 	or s1, s1, 5476
   4a900:	04 00 00 f6 	b 16 <HU_Responder+0x60>
   4a904:	00 00 00 a8 	load_32 s0, (s0)
   4a908:	20 0c 00 4f 	movehi s1, 96
   4a90c:	21 a0 55 00 	or s1, s1, 5480
   4a910:	00 00 00 10 	cmpeq_i s0, s0, 0
   4a914:	00 04 00 01 	and s0, s0, 1
   4a918:	01 00 00 88 	store_32 s0, (s1)
   4a91c:	00 03 00 0f 	move s24, 0
   4a920:	05 00 00 f6 	b 20 <HU_Responder+0x84>
   4a924:	00 00 00 a8 	load_32 s0, (s0)
   4a928:	00 03 00 0f 	move s24, 0
   4a92c:	40 00 00 f4 	bnz s0, 8 <HU_Responder+0x84>
   4a930:	09 00 00 f6 	b 36 <HU_Responder+0xa4>
   4a934:	00 00 fc c0 	move s0, s24
   4a938:	fe b3 00 a8 	load_32 ra, 44(sp)
   4a93c:	7e c3 00 a8 	load_32 s27, 48(sp)
   4a940:	5e d3 00 a8 	load_32 s26, 52(sp)
   4a944:	3e e3 00 a8 	load_32 s25, 56(sp)
   4a948:	1e f3 00 a8 	load_32 s24, 60(sp)
   4a94c:	de 03 01 05 	add_i sp, sp, 64
   4a950:	1f 00 00 f0 	ret
   4a954:	00 0c 00 4f 	movehi s0, 96
   4a958:	60 a1 02 00 	or s11, s0, 168
   4a95c:	0b 00 00 a8 	load_32 s0, (s11)
   4a960:	40 00 00 f4 	bnz s0, 8 <HU_Responder+0xb8>
   4a964:	21 00 00 f6 	b 132 <HU_Responder+0x138>
   4a968:	00 0c 00 4f 	movehi s0, 96
   4a96c:	00 a0 55 00 	or s0, s0, 5480
   4a970:	00 00 00 a8 	load_32 s0, (s0)
   4a974:	e0 04 00 f2 	bz s0, 156 <HU_Responder+0x160>
   4a978:	02 40 ff 05 	add_i s0, s2, -48
   4a97c:	00 fc 03 01 	and s0, s0, 255
   4a980:	20 24 00 16 	cmpgt_u s1, s0, 9
   4a984:	81 fd ff f5 	bnz s1, -80 <HU_Responder+0x84>
   4a988:	34 04 00 4f 	movehi s1, 52
   4a98c:	40 0c 00 4f 	movehi s2, 96
   4a990:	00 08 00 0b 	shl s0, s0, 2
   4a994:	21 b0 47 00 	or s1, s1, 4588
   4a998:	60 0c 00 4f 	movehi s3, 96
   4a99c:	01 00 50 c0 	add_i s0, s1, s0
   4a9a0:	22 20 52 00 	or s1, s2, 5256
   4a9a4:	63 30 52 00 	or s3, s3, 5260
   4a9a8:	80 00 00 a8 	load_32 s4, (s0)
   4a9ac:	41 00 00 a8 	load_32 s2, (s1)
   4a9b0:	63 00 00 a8 	load_32 s3, (s3)
   4a9b4:	a2 04 00 05 	add_i s5, s2, 1
   4a9b8:	a5 fc 01 01 	and s5, s5, 127
   4a9bc:	c5 80 11 c1 	cmpne_i s6, s5, s3
   4a9c0:	c6 0c 00 f4 	bnz s6, 408 <HU_Responder+0x2a8>
   4a9c4:	a0 0c 00 4f 	movehi s5, 96
   4a9c8:	c2 00 00 4f 	movehi s6, 2
   4a9cc:	a5 c0 3f 00 	or s5, s5, 4080
   4a9d0:	c6 d0 17 00 	or s6, s6, 1524
   4a9d4:	a5 00 00 a8 	load_32 s5, (s5)
   4a9d8:	c5 60 03 88 	store_32 s6, 216(s5)
   4a9dc:	a4 00 00 a0 	load_u8 s5, (s4)
   4a9e0:	a5 0f 00 f2 	bz s5, 500 <HU_Responder+0x324>
   4a9e4:	66 00 00 f6 	b 408 <HU_Responder+0x2cc>
   4a9e8:	02 34 00 11 	cmpne_i s0, s2, 13
   4a9ec:	e0 07 00 f4 	bnz s0, 252 <HU_Responder+0x238>
   4a9f0:	00 0c 00 4f 	movehi s0, 96
   4a9f4:	20 0c 00 4f 	movehi s1, 96
   4a9f8:	00 07 00 0f 	move s24, 1
   4a9fc:	00 d0 3f 00 	or s0, s0, 4084
   4aa00:	21 10 52 00 	or s1, s1, 5252
   4aa04:	00 03 00 88 	store_32 s24, (s0)
   4aa08:	00 30 02 0f 	move s0, 140
   4aa0c:	35 00 00 f6 	b 212 <HU_Responder+0x230>
   4aa10:	60 03 d1 c1 	sext_8 s27, s2
   4aa14:	1b 00 00 14 	cmplt_i s0, s27, 0
   4aa18:	c0 00 00 f4 	bnz s0, 24 <HU_Responder+0x180>
   4aa1c:	14 04 00 4f 	movehi s0, 52
   4aa20:	22 fc 03 01 	and s1, s2, 255
   4aa24:	00 60 51 00 	or s0, s0, 5208
   4aa28:	00 80 50 c0 	add_i s0, s0, s1
   4aa2c:	60 03 00 a0 	load_u8 s27, (s0)
   4aa30:	00 0c 00 4f 	movehi s0, 96
   4aa34:	00 90 55 00 	or s0, s0, 5476
   4aa38:	00 00 00 a8 	load_32 s0, (s0)
   4aa3c:	7e a1 00 88 	store_32 s11, 40(sp)
   4aa40:	a0 00 00 f4 	bnz s0, 20 <HU_Responder+0x1a4>
   4aa44:	1b 7c fe 05 	add_i s0, s27, -97
   4aa48:	00 fc 03 01 	and s0, s0, 255
   4aa4c:	00 64 00 16 	cmpgt_u s0, s0, 25
   4aa50:	e0 00 00 f4 	bnz s0, 28 <HU_Responder+0x1bc>
   4aa54:	00 0c 00 4f 	movehi s0, 96
   4aa58:	3b fc 03 01 	and s1, s27, 255
   4aa5c:	00 b0 06 00 	or s0, s0, 428
   4aa60:	00 00 00 a8 	load_32 s0, (s0)
   4aa64:	00 80 50 c0 	add_i s0, s0, s1
   4aa68:	60 03 00 a0 	load_u8 s27, (s0)
   4aa6c:	00 0c 00 4f 	movehi s0, 96
   4aa70:	5b ff 03 01 	and s26, s27, 255
   4aa74:	20 a3 48 00 	or s25, s0, 4648
   4aa78:	00 80 fc c0 	move s0, s25
   4aa7c:	20 00 fd c0 	move s1, s26
   4aa80:	2c 03 00 f8 	call 3248 <HUlib_keyInIText>
   4aa84:	00 03 f0 c0 	move s24, s0
   4aa88:	38 12 00 f2 	bz s24, 580 <HU_Responder+0x41c>
   4aa8c:	00 0c 00 4f 	movehi s0, 96
   4aa90:	40 0c 00 4f 	movehi s2, 96
   4aa94:	00 20 52 00 	or s0, s0, 5256
   4aa98:	42 30 52 00 	or s2, s2, 5260
   4aa9c:	20 00 00 a8 	load_32 s1, (s0)
   4aaa0:	82 00 00 a8 	load_32 s4, (s2)
   4aaa4:	61 04 00 05 	add_i s3, s1, 1
   4aaa8:	43 fc 01 01 	and s2, s3, 127
   4aaac:	62 00 12 c1 	cmpne_i s3, s2, s4
   4aab0:	43 10 00 f4 	bnz s3, 520 <HU_Responder+0x408>
   4aab4:	00 0c 00 4f 	movehi s0, 96
   4aab8:	22 00 00 4f 	movehi s1, 2
   4aabc:	00 c0 3f 00 	or s0, s0, 4080
   4aac0:	21 d0 17 00 	or s1, s1, 1524
   4aac4:	00 00 00 a8 	load_32 s0, (s0)
   4aac8:	20 60 03 88 	store_32 s1, 216(s0)
   4aacc:	1a 6c 00 10 	cmpeq_i s0, s26, 27
   4aad0:	40 00 00 f4 	bnz s0, 8 <HU_Responder+0x228>
   4aad4:	80 00 00 f6 	b 512 <HU_Responder+0x424>
   4aad8:	3e a0 00 a8 	load_32 s1, 40(sp)
   4aadc:	00 00 00 0f 	move s0, 0
   4aae0:	01 00 00 88 	store_32 s0, (s1)
   4aae4:	94 ff ff f7 	b -432 <HU_Responder+0x84>
   4aae8:	1b 04 00 4f 	movehi s0, 59
   4aaec:	c2 d0 01 11 	cmpne_i s6, s2, 116
   4aaf0:	00 c0 01 00 	or s0, s0, 112
   4aaf4:	00 00 00 a8 	load_32 s0, (s0)
   4aaf8:	a6 0a 00 f4 	bnz s6, 340 <HU_Responder+0x39c>
   4aafc:	80 0a 00 f2 	bz s0, 336 <HU_Responder+0x39c>
   4ab00:	00 0c 00 4f 	movehi s0, 96
   4ab04:	00 07 00 0f 	move s24, 1
   4ab08:	0b 03 00 88 	store_32 s24, (s11)
   4ab0c:	00 a0 48 00 	or s0, s0, 4648
   4ab10:	eb 02 00 f8 	call 2988 <HUlib_resetIText>
   4ab14:	00 0c 00 4f 	movehi s0, 96
   4ab18:	40 0c 00 4f 	movehi s2, 96
   4ab1c:	00 20 52 00 	or s0, s0, 5256
   4ab20:	42 30 52 00 	or s2, s2, 5260
   4ab24:	20 00 00 a8 	load_32 s1, (s0)
   4ab28:	82 00 00 a8 	load_32 s4, (s2)
   4ab2c:	61 04 00 05 	add_i s3, s1, 1
   4ab30:	43 fc 01 01 	and s2, s3, 127
   4ab34:	62 00 12 c1 	cmpne_i s3, s2, s4
   4ab38:	03 0f 00 f4 	bnz s3, 480 <HU_Responder+0x468>
   4ab3c:	00 0c 00 4f 	movehi s0, 96
   4ab40:	00 c0 3f 00 	or s0, s0, 4080
   4ab44:	00 00 00 a8 	load_32 s0, (s0)
   4ab48:	22 00 00 4f 	movehi s1, 2
   4ab4c:	21 d0 17 00 	or s1, s1, 1524
   4ab50:	20 60 03 88 	store_32 s1, 216(s0)
   4ab54:	78 ff ff f7 	b -544 <HU_Responder+0x84>
   4ab58:	c0 0c 00 4f 	movehi s6, 96
   4ab5c:	c6 40 52 00 	or s6, s6, 5264
   4ab60:	46 00 51 c0 	add_i s2, s6, s2
   4ab64:	c0 34 00 0f 	move s6, 13
   4ab68:	c2 00 00 82 	store_8 s6, (s2)
   4ab6c:	a1 00 00 88 	store_32 s5, (s1)
   4ab70:	40 80 f2 c0 	move s2, s5
   4ab74:	a4 00 00 a0 	load_u8 s5, (s4)
   4ab78:	e5 02 00 f2 	bz s5, 92 <HU_Responder+0x324>
   4ab7c:	c0 0c 00 4f 	movehi s6, 96
   4ab80:	e2 00 00 4f 	movehi s7, 2
   4ab84:	00 0d 00 4f 	movehi s8, 96
   4ab88:	c6 c0 3f 00 	or s6, s6, 4080
   4ab8c:	e7 d0 17 00 	or s7, s7, 1524
   4ab90:	08 41 52 00 	or s8, s8, 5264
   4ab94:	c6 00 00 a8 	load_32 s6, (s6)
   4ab98:	22 05 00 05 	add_i s9, s2, 1
   4ab9c:	84 04 00 05 	add_i s4, s4, 1
   4aba0:	29 fd 01 01 	and s9, s9, 127
   4aba4:	49 81 11 c1 	cmpne_i s10, s9, s3
   4aba8:	aa 00 00 f4 	bnz s10, 20 <HU_Responder+0x30c>
   4abac:	e6 60 03 88 	store_32 s7, 216(s6)
   4abb0:	a4 00 00 a0 	load_u8 s5, (s4)
   4abb4:	25 ff ff f5 	bnz s5, -28 <HU_Responder+0x2e8>
   4abb8:	07 00 00 f6 	b 28 <HU_Responder+0x324>
   4abbc:	48 00 51 c0 	add_i s2, s8, s2
   4abc0:	a2 00 00 82 	store_8 s5, (s2)
   4abc4:	21 01 00 88 	store_32 s9, (s1)
   4abc8:	40 80 f4 c0 	move s2, s9
   4abcc:	a4 00 00 a0 	load_u8 s5, (s4)
   4abd0:	45 fe ff f5 	bnz s5, -56 <HU_Responder+0x2e8>
   4abd4:	82 04 00 05 	add_i s4, s2, 1
   4abd8:	84 fc 01 01 	and s4, s4, 127
   4abdc:	64 80 11 c1 	cmpne_i s3, s4, s3
   4abe0:	03 01 00 f4 	bnz s3, 32 <HU_Responder+0x350>
   4abe4:	20 0c 00 4f 	movehi s1, 96
   4abe8:	42 00 00 4f 	movehi s2, 2
   4abec:	21 c0 3f 00 	or s1, s1, 4080
   4abf0:	42 d0 17 00 	or s2, s2, 1524
   4abf4:	21 00 00 a8 	load_32 s1, (s1)
   4abf8:	41 60 03 88 	store_32 s2, 216(s1)
   4abfc:	07 00 00 f6 	b 28 <HU_Responder+0x368>
   4ac00:	60 0c 00 4f 	movehi s3, 96
   4ac04:	63 40 52 00 	or s3, s3, 5264
   4ac08:	43 00 51 c0 	add_i s2, s3, s2
   4ac0c:	60 34 00 0f 	move s3, 13
   4ac10:	62 00 00 82 	store_8 s3, (s2)
   4ac14:	81 00 00 88 	store_32 s4, (s1)
   4ac18:	20 00 00 0f 	move s1, 0
   4ac1c:	2b 00 00 88 	store_32 s1, (s11)
   4ac20:	20 00 00 a8 	load_32 s1, (s0)
   4ac24:	00 0c 00 4f 	movehi s0, 96
   4ac28:	00 43 54 00 	or s24, s0, 5392
   4ac2c:	00 00 fc c0 	move s0, s24
   4ac30:	e7 1e 00 f8 	call 31644 <strcpy>
   4ac34:	00 0c 00 4f 	movehi s0, 96
   4ac38:	00 c0 3f 00 	or s0, s0, 4080
   4ac3c:	00 00 00 a8 	load_32 s0, (s0)
   4ac40:	00 63 03 88 	store_32 s24, 216(s0)
   4ac44:	00 07 00 0f 	move s24, 1
   4ac48:	3b ff ff f7 	b -788 <HU_Responder+0x84>
   4ac4c:	c3 80 50 c0 	add_i s6, s3, s1
   4ac50:	c4 00 53 c0 	add_i s6, s4, s6
   4ac54:	c5 00 53 c0 	add_i s6, s5, s6
   4ac58:	c6 0c 00 14 	cmplt_i s6, s6, 3
   4ac5c:	c6 e6 ff f5 	bnz s6, -808 <HU_Responder+0x84>
   4ac60:	a0 e6 ff f3 	bz s0, -812 <HU_Responder+0x84>
   4ac64:	1a 04 00 4f 	movehi s0, 58
   4ac68:	e0 0c 00 4f 	movehi s7, 96
   4ac6c:	c2 78 fe 05 	add_i s6, s2, -98
   4ac70:	00 c0 6d 00 	or s0, s0, 7024
   4ac74:	27 c3 3f 00 	or s25, s7, 4080
   4ac78:	e6 40 00 16 	cmpgt_u s7, s6, 16
   4ac7c:	40 00 00 a8 	load_32 s2, (s0)
   4ac80:	19 00 00 a8 	load_32 s0, (s25)
   4ac84:	87 e5 ff f5 	bnz s7, -848 <HU_Responder+0x84>
   4ac88:	e3 00 00 4f 	movehi s7, 3
   4ac8c:	c6 08 00 0b 	shl s6, s6, 2
   4ac90:	e7 d0 5e 00 	or s7, s7, 6068
   4ac94:	c6 80 53 c0 	add_i s6, s6, s7
   4ac98:	c6 00 00 a8 	load_32 s6, (s6)
   4ac9c:	06 00 00 f0 	b s6
   4aca0:	64 09 00 f2 	bz s4, 300 <HU_Responder+0x51c>
   4aca4:	22 08 00 11 	cmpne_i s1, s2, 2
   4aca8:	41 00 00 f4 	bnz s1, 8 <HU_Responder+0x400>
   4acac:	48 00 00 f6 	b 288 <HU_Responder+0x51c>
   4acb0:	40 0f 00 0f 	move s26, 3
   4acb4:	2f 00 00 f6 	b 188 <HU_Responder+0x4c0>
   4acb8:	60 0c 00 4f 	movehi s3, 96
   4acbc:	63 40 52 00 	or s3, s3, 5264
   4acc0:	23 80 50 c0 	add_i s1, s3, s1
   4acc4:	61 03 00 82 	store_8 s27, (s1)
   4acc8:	40 00 00 88 	store_32 s2, (s0)
   4accc:	1a 6c 00 10 	cmpeq_i s0, s26, 27
   4acd0:	40 f0 ff f5 	bnz s0, -504 <HU_Responder+0x228>
   4acd4:	1a 34 00 11 	cmpne_i s0, s26, 13
   4acd8:	e0 e2 ff f5 	bnz s0, -932 <HU_Responder+0x84>
   4acdc:	3e a0 00 a8 	load_32 s1, 40(sp)
   4ace0:	00 00 00 0f 	move s0, 0
   4ace4:	01 00 00 88 	store_32 s0, (s1)
   4ace8:	19 90 01 a8 	load_32 s0, 100(s25)
   4acec:	40 e2 ff f3 	bz s0, -952 <HU_Responder+0x84>
   4acf0:	00 0c 00 4f 	movehi s0, 96
   4acf4:	39 40 00 05 	add_i s1, s25, 16
   4acf8:	40 43 54 00 	or s26, s0, 5392
   4acfc:	00 00 fd c0 	move s0, s26
   4ad00:	b3 1e 00 f8 	call 31436 <strcpy>
   4ad04:	00 0c 00 4f 	movehi s0, 96
   4ad08:	00 c0 3f 00 	or s0, s0, 4080
   4ad0c:	00 00 00 a8 	load_32 s0, (s0)
   4ad10:	40 63 03 88 	store_32 s26, 216(s0)
   4ad14:	08 ff ff f7 	b -992 <HU_Responder+0x84>
   4ad18:	60 0c 00 4f 	movehi s3, 96
   4ad1c:	63 40 52 00 	or s3, s3, 5264
   4ad20:	23 80 50 c0 	add_i s1, s3, s1
   4ad24:	60 14 00 0f 	move s3, 5
   4ad28:	61 00 00 82 	store_8 s3, (s1)
   4ad2c:	40 00 00 88 	store_32 s2, (s0)
   4ad30:	01 ff ff f7 	b -1020 <HU_Responder+0x84>
   4ad34:	21 05 00 f2 	bz s1, 164 <HU_Responder+0x528>
   4ad38:	02 05 00 f2 	bz s2, 160 <HU_Responder+0x528>
   4ad3c:	40 07 00 0f 	move s26, 1
   4ad40:	0c 00 00 f6 	b 48 <HU_Responder+0x4c0>
   4ad44:	63 07 00 f2 	bz s3, 236 <HU_Responder+0x580>
   4ad48:	22 04 00 11 	cmpne_i s1, s2, 1
   4ad4c:	41 00 00 f4 	bnz s1, 8 <HU_Responder+0x4a4>
   4ad50:	38 00 00 f6 	b 224 <HU_Responder+0x580>
   4ad54:	40 0b 00 0f 	move s26, 2
   4ad58:	06 00 00 f6 	b 24 <HU_Responder+0x4c0>
   4ad5c:	05 07 00 f2 	bz s5, 224 <HU_Responder+0x58c>
   4ad60:	22 0c 00 11 	cmpne_i s1, s2, 3
   4ad64:	41 00 00 f4 	bnz s1, 8 <HU_Responder+0x4bc>
   4ad68:	35 00 00 f6 	b 212 <HU_Responder+0x58c>
   4ad6c:	40 13 00 0f 	move s26, 4
   4ad70:	00 0c 00 4f 	movehi s0, 96
   4ad74:	00 07 00 0f 	move s24, 1
   4ad78:	0b 03 00 88 	store_32 s24, (s11)
   4ad7c:	00 a0 48 00 	or s0, s0, 4648
   4ad80:	4f 02 00 f8 	call 2364 <HUlib_resetIText>
   4ad84:	00 0c 00 4f 	movehi s0, 96
   4ad88:	40 0c 00 4f 	movehi s2, 96
   4ad8c:	00 20 52 00 	or s0, s0, 5256
   4ad90:	42 30 52 00 	or s2, s2, 5260
   4ad94:	20 00 00 a8 	load_32 s1, (s0)
   4ad98:	82 00 00 a8 	load_32 s4, (s2)
   4ad9c:	61 04 00 05 	add_i s3, s1, 1
   4ada0:	43 fc 01 01 	and s2, s3, 127
   4ada4:	62 00 12 c1 	cmpne_i s3, s2, s4
   4ada8:	63 00 00 f4 	bnz s3, 12 <HU_Responder+0x504>
   4adac:	19 00 00 a8 	load_32 s0, (s25)
   4adb0:	66 ff ff f7 	b -616 <HU_Responder+0x298>
   4adb4:	60 0c 00 4f 	movehi s3, 96
   4adb8:	63 40 52 00 	or s3, s3, 5264
   4adbc:	23 80 50 c0 	add_i s1, s3, s1
   4adc0:	41 03 00 82 	store_8 s26, (s1)
   4adc4:	40 00 00 88 	store_32 s2, (s0)
   4adc8:	db fe ff f7 	b -1172 <HU_Responder+0x84>
   4adcc:	22 08 00 11 	cmpne_i s1, s2, 2
   4add0:	21 db ff f5 	bnz s1, -1180 <HU_Responder+0x84>
   4add4:	1c 00 00 f6 	b 112 <HU_Responder+0x594>
   4add8:	e2 da ff f5 	bnz s2, -1188 <HU_Responder+0x84>
   4addc:	20 0c 00 4f 	movehi s1, 96
   4ade0:	41 b0 55 00 	or s2, s1, 5484
   4ade4:	22 00 00 a8 	load_32 s1, (s2)
   4ade8:	21 04 00 05 	add_i s1, s1, 1
   4adec:	22 00 00 88 	store_32 s1, (s2)
   4adf0:	61 08 00 12 	cmpgt_i s3, s1, 2
   4adf4:	43 00 00 f4 	bnz s3, 8 <HU_Responder+0x54c>
   4adf8:	1b 00 00 f6 	b 108 <HU_Responder+0x5b4>
   4adfc:	41 14 00 12 	cmpgt_i s2, s1, 5
   4ae00:	42 00 00 f4 	bnz s2, 8 <HU_Responder+0x558>
   4ae04:	1f 00 00 f6 	b 124 <HU_Responder+0x5d0>
   4ae08:	41 20 00 12 	cmpgt_i s2, s1, 8
   4ae0c:	42 00 00 f4 	bnz s2, 8 <HU_Responder+0x564>
   4ae10:	23 00 00 f6 	b 140 <HU_Responder+0x5ec>
   4ae14:	21 7c 00 12 	cmpgt_i s1, s1, 31
   4ae18:	41 00 00 f4 	bnz s1, 8 <HU_Responder+0x570>
   4ae1c:	27 00 00 f6 	b 156 <HU_Responder+0x608>
   4ae20:	22 00 00 4f 	movehi s1, 2
   4ae24:	21 40 01 00 	or s1, s1, 80
   4ae28:	20 60 03 88 	store_32 s1, 216(s0)
   4ae2c:	c2 fe ff f7 	b -1272 <HU_Responder+0x84>
   4ae30:	22 04 00 11 	cmpne_i s1, s2, 1
   4ae34:	01 d8 ff f5 	bnz s1, -1280 <HU_Responder+0x84>
   4ae38:	03 00 00 f6 	b 12 <HU_Responder+0x594>
   4ae3c:	22 0c 00 11 	cmpne_i s1, s2, 3
   4ae40:	a1 d7 ff f5 	bnz s1, -1292 <HU_Responder+0x84>
   4ae44:	20 0c 00 4f 	movehi s1, 96
   4ae48:	41 b0 55 00 	or s2, s1, 5484
   4ae4c:	22 00 00 a8 	load_32 s1, (s2)
   4ae50:	21 04 00 05 	add_i s1, s1, 1
   4ae54:	22 00 00 88 	store_32 s1, (s2)
   4ae58:	61 0c 00 14 	cmplt_i s3, s1, 3
   4ae5c:	43 00 00 f4 	bnz s3, 8 <HU_Responder+0x5b4>
   4ae60:	05 00 00 f6 	b 20 <HU_Responder+0x5c4>
   4ae64:	20 00 00 4f 	movehi s1, 0
   4ae68:	21 90 09 00 	or s1, s1, 612
   4ae6c:	20 60 03 88 	store_32 s1, 216(s0)
   4ae70:	b1 fe ff f7 	b -1340 <HU_Responder+0x84>
   4ae74:	41 18 00 14 	cmplt_i s2, s1, 6
   4ae78:	42 00 00 f4 	bnz s2, 8 <HU_Responder+0x5d0>
   4ae7c:	05 00 00 f6 	b 20 <HU_Responder+0x5e0>
   4ae80:	21 00 00 4f 	movehi s1, 1
   4ae84:	21 c4 37 00 	or s1, s1, 3569
   4ae88:	20 60 03 88 	store_32 s1, 216(s0)
   4ae8c:	aa fe ff f7 	b -1368 <HU_Responder+0x84>
   4ae90:	41 24 00 14 	cmplt_i s2, s1, 9
   4ae94:	42 00 00 f4 	bnz s2, 8 <HU_Responder+0x5ec>
   4ae98:	05 00 00 f6 	b 20 <HU_Responder+0x5fc>
   4ae9c:	21 00 00 4f 	movehi s1, 1
   4aea0:	21 18 00 00 	or s1, s1, 6
   4aea4:	20 60 03 88 	store_32 s1, 216(s0)
   4aea8:	a3 fe ff f7 	b -1396 <HU_Responder+0x84>
   4aeac:	21 80 00 14 	cmplt_i s1, s1, 32
   4aeb0:	41 00 00 f4 	bnz s1, 8 <HU_Responder+0x608>
   4aeb4:	db ff ff f7 	b -148 <HU_Responder+0x570>
   4aeb8:	20 00 00 4f 	movehi s1, 0
   4aebc:	21 84 58 00 	or s1, s1, 5665
   4aec0:	20 60 03 88 	store_32 s1, 216(s0)
   4aec4:	9c fe ff f7 	b -1424 <HU_Responder+0x84>

000000000004aec8 HUlib_init:
   4aec8:	1f 00 00 f0 	ret

000000000004aecc HUlib_clearTextLine:
   4aecc:	20 00 00 0f 	move s1, 0
   4aed0:	20 90 01 88 	store_32 s1, 100(s0)
   4aed4:	20 40 00 82 	store_8 s1, 16(s0)
   4aed8:	20 04 00 0f 	move s1, 1
   4aedc:	20 a0 01 88 	store_32 s1, 104(s0)
   4aee0:	1f 00 00 f0 	ret

000000000004aee4 HUlib_initTextLine:
   4aee4:	20 00 00 88 	store_32 s1, (s0)
   4aee8:	20 00 00 0f 	move s1, 0
   4aeec:	40 10 00 88 	store_32 s2, 4(s0)
   4aef0:	60 20 00 88 	store_32 s3, 8(s0)
   4aef4:	80 30 00 88 	store_32 s4, 12(s0)
   4aef8:	20 90 01 88 	store_32 s1, 100(s0)
   4aefc:	20 40 00 82 	store_8 s1, 16(s0)
   4af00:	20 04 00 0f 	move s1, 1
   4af04:	20 a0 01 88 	store_32 s1, 104(s0)
   4af08:	1f 00 00 f0 	ret

000000000004af0c HUlib_addCharToTextLine:
   4af0c:	40 90 01 a8 	load_32 s2, 100(s0)
   4af10:	62 40 01 10 	cmpeq_i s3, s2, 80
   4af14:	43 00 00 f4 	bnz s3, 8 <HUlib_addCharToTextLine+0x10>
   4af18:	03 00 00 f6 	b 12 <HUlib_addCharToTextLine+0x18>
   4af1c:	00 00 00 0f 	move s0, 0
   4af20:	1f 00 00 f0 	ret
   4af24:	60 40 00 05 	add_i s3, s0, 16
   4af28:	83 00 51 c0 	add_i s4, s3, s2
   4af2c:	42 04 00 05 	add_i s2, s2, 1
   4af30:	40 90 01 88 	store_32 s2, 100(s0)
   4af34:	40 00 00 0f 	move s2, 0
   4af38:	24 00 00 82 	store_8 s1, (s4)
   4af3c:	20 90 01 a8 	load_32 s1, 100(s0)
   4af40:	23 80 50 c0 	add_i s1, s3, s1
   4af44:	41 00 00 82 	store_8 s2, (s1)
   4af48:	20 10 00 0f 	move s1, 4
   4af4c:	20 a0 01 88 	store_32 s1, 104(s0)
   4af50:	00 04 00 0f 	move s0, 1
   4af54:	1f 00 00 f0 	ret

000000000004af58 HUlib_delCharFromTextLine:
   4af58:	20 90 01 a8 	load_32 s1, 100(s0)
   4af5c:	41 01 00 f2 	bz s1, 40 <HUlib_delCharFromTextLine+0x2c>
   4af60:	21 fc ff 05 	add_i s1, s1, -1
   4af64:	20 90 01 88 	store_32 s1, 100(s0)
   4af68:	40 80 50 c0 	add_i s2, s0, s1
   4af6c:	20 00 00 0f 	move s1, 0
   4af70:	22 40 00 82 	store_8 s1, 16(s2)
   4af74:	20 10 00 0f 	move s1, 4
   4af78:	20 a0 01 88 	store_32 s1, 104(s0)
   4af7c:	00 04 00 0f 	move s0, 1
   4af80:	1f 00 00 f0 	ret
   4af84:	00 00 00 0f 	move s0, 0
   4af88:	1f 00 00 f0 	ret

000000000004af8c HUlib_drawTextLine:
   4af8c:	de 03 ff 05 	add_i sp, sp, -64
   4af90:	1e f3 00 88 	store_32 s24, 60(sp)
   4af94:	3e e3 00 88 	store_32 s25, 56(sp)
   4af98:	5e d3 00 88 	store_32 s26, 52(sp)
   4af9c:	7e c3 00 88 	store_32 s27, 48(sp)
   4afa0:	fe b3 00 88 	store_32 ra, 44(sp)
   4afa4:	00 03 f0 c0 	move s24, s0
   4afa8:	38 03 00 a8 	load_32 s25, (s24)
   4afac:	18 90 01 a8 	load_32 s0, 100(s24)
   4afb0:	1e a0 00 88 	store_32 s0, 40(sp)
   4afb4:	3e 80 00 88 	store_32 s1, 32(sp)
   4afb8:	00 04 00 14 	cmplt_i s0, s0, 1
   4afbc:	20 05 00 f4 	bnz s0, 164 <HUlib_drawTextLine+0xd4>
   4afc0:	40 03 00 0f 	move s26, 0
   4afc4:	5e 93 00 88 	store_32 s26, 36(sp)
   4afc8:	18 00 5d c0 	add_i s0, s24, s26
   4afcc:	00 40 00 a2 	load_s8 s0, 16(s0)
   4afd0:	c5 1d 00 f8 	call 30484 <toupper>
   4afd4:	00 fc 03 01 	and s0, s0, 255
   4afd8:	20 80 00 10 	cmpeq_i s1, s0, 32
   4afdc:	c1 02 00 f4 	bnz s1, 88 <HUlib_drawTextLine+0xa8>
   4afe0:	38 30 00 a8 	load_32 s1, 12(s24)
   4afe4:	40 7c 01 16 	cmpgt_u s2, s0, 95
   4afe8:	62 02 00 f4 	bnz s2, 76 <HUlib_drawTextLine+0xa8>
   4afec:	40 80 40 c1 	cmplt_i s2, s0, s1
   4aff0:	22 02 00 f4 	bnz s2, 68 <HUlib_drawTextLine+0xa8>
   4aff4:	00 80 60 c0 	sub_i s0, s0, s1
   4aff8:	58 20 00 a8 	load_32 s2, 8(s24)
   4affc:	00 08 00 0b 	shl s0, s0, 2
   4b000:	02 00 50 c0 	add_i s0, s2, s0
   4b004:	60 00 00 a8 	load_32 s3, (s0)
   4b008:	03 00 00 a6 	load_s16 s0, (s3)
   4b00c:	79 03 50 c0 	add_i s27, s25, s0
   4b010:	1b 00 05 12 	cmpgt_i s0, s27, 320
   4b014:	60 02 00 f4 	bnz s0, 76 <HUlib_drawTextLine+0xd4>
   4b018:	38 10 00 a8 	load_32 s1, 4(s24)
   4b01c:	00 80 fc c0 	move s0, s25
   4b020:	5e 90 00 a8 	load_32 s2, 36(sp)
   4b024:	12 ed ff f9 	call -19384 <V_DrawPatchDirect>
   4b028:	18 90 01 a8 	load_32 s0, 100(s24)
   4b02c:	1e a0 00 88 	store_32 s0, 40(sp)
   4b030:	04 00 00 f6 	b 16 <HUlib_drawTextLine+0xb4>
   4b034:	79 13 00 05 	add_i s27, s25, 4
   4b038:	1b fc 04 12 	cmpgt_i s0, s27, 319
   4b03c:	c0 00 00 f4 	bnz s0, 24 <HUlib_drawTextLine+0xc8>
   4b040:	1e a0 00 a8 	load_32 s0, 40(sp)
   4b044:	5a 07 00 05 	add_i s26, s26, 1
   4b048:	20 83 fd c0 	move s25, s27
   4b04c:	1a 00 40 c1 	cmplt_i s0, s26, s0
   4b050:	c0 fb ff f5 	bnz s0, -136 <HUlib_drawTextLine+0x3c>
   4b054:	1e 80 00 a8 	load_32 s0, 32(sp)
   4b058:	80 02 00 f2 	bz s0, 80 <HUlib_drawTextLine+0x11c>
   4b05c:	04 00 00 f6 	b 16 <HUlib_drawTextLine+0xe0>
   4b060:	60 83 fc c0 	move s27, s25
   4b064:	1e 80 00 a8 	load_32 s0, 32(sp)
   4b068:	00 02 00 f2 	bz s0, 64 <HUlib_drawTextLine+0x11c>
   4b06c:	18 20 00 a8 	load_32 s0, 8(s24)
   4b070:	40 7c 01 0f 	move s2, 95
   4b074:	38 30 00 a8 	load_32 s1, 12(s24)
   4b078:	22 80 60 c0 	sub_i s1, s2, s1
   4b07c:	21 08 00 0b 	shl s1, s1, 2
   4b080:	00 80 50 c0 	add_i s0, s0, s1
   4b084:	60 00 00 a8 	load_32 s3, (s0)
   4b088:	03 00 00 a6 	load_s16 s0, (s3)
   4b08c:	1b 00 50 c0 	add_i s0, s27, s0
   4b090:	00 00 05 12 	cmpgt_i s0, s0, 320
   4b094:	a0 00 00 f4 	bnz s0, 20 <HUlib_drawTextLine+0x11c>
   4b098:	38 10 00 a8 	load_32 s1, 4(s24)
   4b09c:	40 00 00 0f 	move s2, 0
   4b0a0:	00 80 fd c0 	move s0, s27
   4b0a4:	f2 ec ff f9 	call -19512 <V_DrawPatchDirect>
   4b0a8:	fe b3 00 a8 	load_32 ra, 44(sp)
   4b0ac:	7e c3 00 a8 	load_32 s27, 48(sp)
   4b0b0:	5e d3 00 a8 	load_32 s26, 52(sp)
   4b0b4:	3e e3 00 a8 	load_32 s25, 56(sp)
   4b0b8:	1e f3 00 a8 	load_32 s24, 60(sp)
   4b0bc:	de 03 01 05 	add_i sp, sp, 64
   4b0c0:	1f 00 00 f0 	ret

000000000004b0c4 HUlib_eraseTextLine:
   4b0c4:	de 03 ff 05 	add_i sp, sp, -64
   4b0c8:	1e f3 00 88 	store_32 s24, 60(sp)
   4b0cc:	3e e3 00 88 	store_32 s25, 56(sp)
   4b0d0:	5e d3 00 88 	store_32 s26, 52(sp)
   4b0d4:	7e c3 00 88 	store_32 s27, 48(sp)
   4b0d8:	fe b3 00 88 	store_32 ra, 44(sp)
   4b0dc:	20 0c 00 4f 	movehi s1, 96
   4b0e0:	5e 04 00 4f 	movehi s2, 62
   4b0e4:	21 d0 21 00 	or s1, s1, 2164
   4b0e8:	42 40 1c 00 	or s2, s2, 1808
   4b0ec:	21 00 00 a8 	load_32 s1, (s1)
   4b0f0:	00 03 f0 c0 	move s24, s0
   4b0f4:	5e 70 00 88 	store_32 s2, 28(sp)
   4b0f8:	02 00 00 a8 	load_32 s0, (s2)
   4b0fc:	01 07 00 f4 	bnz s1, 224 <HUlib_eraseTextLine+0x118>
   4b100:	e0 06 00 f2 	bz s0, 220 <HUlib_eraseTextLine+0x118>
   4b104:	18 a0 01 a8 	load_32 s0, 104(s24)
   4b108:	a0 06 00 f2 	bz s0, 212 <HUlib_eraseTextLine+0x118>
   4b10c:	18 20 00 a8 	load_32 s0, 8(s24)
   4b110:	00 00 00 a8 	load_32 s0, (s0)
   4b114:	00 08 00 a6 	load_s16 s0, 2(s0)
   4b118:	78 13 00 a8 	load_32 s27, 4(s24)
   4b11c:	20 00 00 14 	cmplt_i s1, s0, 0
   4b120:	e1 05 00 f4 	bnz s1, 188 <HUlib_eraseTextLine+0x118>
   4b124:	3e 04 00 4f 	movehi s1, 62
   4b128:	40 07 00 05 	add_i s26, s0, 1
   4b12c:	3b 03 05 07 	mull_i s25, s27, 320
   4b130:	01 50 1c 00 	or s0, s1, 1812
   4b134:	1e a0 00 88 	store_32 s0, 40(sp)
   4b138:	1e 04 00 4f 	movehi s0, 62
   4b13c:	3e 04 00 4f 	movehi s1, 62
   4b140:	40 00 05 0f 	move s2, 320
   4b144:	5e 90 00 88 	store_32 s2, 36(sp)
   4b148:	00 10 1c 00 	or s0, s0, 1796
   4b14c:	1e 80 00 88 	store_32 s0, 32(sp)
   4b150:	01 30 1c 00 	or s0, s1, 1804
   4b154:	1e 50 00 88 	store_32 s0, 20(sp)
   4b158:	1e 63 00 88 	store_32 s24, 24(sp)
   4b15c:	1e a0 00 a8 	load_32 s0, 40(sp)
   4b160:	00 00 00 a8 	load_32 s0, (s0)
   4b164:	3b 00 40 c1 	cmplt_i s1, s27, s0
   4b168:	81 02 00 f4 	bnz s1, 80 <HUlib_eraseTextLine+0xf4>
   4b16c:	3e 80 00 a8 	load_32 s1, 32(sp)
   4b170:	21 00 00 a8 	load_32 s1, (s1)
   4b174:	01 00 50 c0 	add_i s0, s1, s0
   4b178:	1b 00 40 c1 	cmplt_i s0, s27, s0
   4b17c:	40 00 00 f4 	bnz s0, 8 <HUlib_eraseTextLine+0xc0>
   4b180:	0e 00 00 f6 	b 56 <HUlib_eraseTextLine+0xf4>
   4b184:	00 03 fd c0 	move s24, s26
   4b188:	5e 73 00 a8 	load_32 s26, 28(sp)
   4b18c:	3a 00 00 a8 	load_32 s1, (s26)
   4b190:	00 80 fc c0 	move s0, s25
   4b194:	06 b7 ff f9 	call -74728 <R_VideoErase>
   4b198:	3a 00 00 a8 	load_32 s1, (s26)
   4b19c:	40 03 fc c0 	move s26, s24
   4b1a0:	1e 63 00 a8 	load_32 s24, 24(sp)
   4b1a4:	1e 50 00 a8 	load_32 s0, 20(sp)
   4b1a8:	41 80 5c c0 	add_i s2, s1, s25
   4b1ac:	00 00 00 a8 	load_32 s0, (s0)
   4b1b0:	02 00 50 c0 	add_i s0, s2, s0
   4b1b4:	03 00 00 f6 	b 12 <HUlib_eraseTextLine+0xfc>
   4b1b8:	00 80 fc c0 	move s0, s25
   4b1bc:	3e 90 00 a8 	load_32 s1, 36(sp)
   4b1c0:	fb b6 ff f9 	call -74772 <R_VideoErase>
   4b1c4:	18 10 00 a8 	load_32 s0, 4(s24)
   4b1c8:	7b 07 00 05 	add_i s27, s27, 1
   4b1cc:	39 03 05 05 	add_i s25, s25, 320
   4b1d0:	1a 00 50 c0 	add_i s0, s26, s0
   4b1d4:	1b 00 40 c1 	cmplt_i s0, s27, s0
   4b1d8:	20 fc ff f5 	bnz s0, -124 <HUlib_eraseTextLine+0x98>
   4b1dc:	18 a0 01 a8 	load_32 s0, 104(s24)
   4b1e0:	60 00 00 f2 	bz s0, 12 <HUlib_eraseTextLine+0x128>
   4b1e4:	00 fc ff 05 	add_i s0, s0, -1
   4b1e8:	18 a0 01 88 	store_32 s0, 104(s24)
   4b1ec:	fe b3 00 a8 	load_32 ra, 44(sp)
   4b1f0:	7e c3 00 a8 	load_32 s27, 48(sp)
   4b1f4:	5e d3 00 a8 	load_32 s26, 52(sp)
   4b1f8:	3e e3 00 a8 	load_32 s25, 56(sp)
   4b1fc:	1e f3 00 a8 	load_32 s24, 60(sp)
   4b200:	de 03 01 05 	add_i sp, sp, 64
   4b204:	1f 00 00 f0 	ret

000000000004b208 HUlib_initSText:
   4b208:	60 c0 06 88 	store_32 s3, 432(s0)
   4b20c:	e0 00 00 0f 	move s7, 0
   4b210:	c0 e0 06 88 	store_32 s6, 440(s0)
   4b214:	c0 04 00 0f 	move s6, 1
   4b218:	03 05 00 14 	cmplt_i s8, s3, 1
   4b21c:	c0 f0 06 88 	store_32 s6, 444(s0)
   4b220:	e0 d0 06 88 	store_32 s7, 436(s0)
   4b224:	68 02 00 f4 	bnz s8, 76 <HUlib_initSText+0x68>
   4b228:	00 81 f3 c0 	move s8, s7
   4b22c:	24 01 00 a8 	load_32 s9, (s4)
   4b230:	48 b1 01 07 	mull_i s10, s8, 108
   4b234:	40 01 55 c0 	add_i s10, s0, s10
   4b238:	29 09 00 a6 	load_s16 s9, 2(s9)
   4b23c:	2a 00 00 88 	store_32 s1, (s10)
   4b240:	29 05 00 05 	add_i s9, s9, 1
   4b244:	29 01 74 c0 	mull_i s9, s9, s8
   4b248:	08 05 00 05 	add_i s8, s8, 1
   4b24c:	22 81 64 c0 	sub_i s9, s2, s9
   4b250:	2a 11 00 88 	store_32 s9, 4(s10)
   4b254:	8a 20 00 88 	store_32 s4, 8(s10)
   4b258:	28 81 41 c1 	cmplt_i s9, s8, s3
   4b25c:	aa 30 00 88 	store_32 s5, 12(s10)
   4b260:	ea 90 01 88 	store_32 s7, 100(s10)
   4b264:	ea 40 00 82 	store_8 s7, 16(s10)
   4b268:	ca a0 01 88 	store_32 s6, 104(s10)
   4b26c:	09 fe ff f5 	bnz s9, -64 <HUlib_initSText+0x24>
   4b270:	1f 00 00 f0 	ret

000000000004b274 HUlib_addLineToSText:
   4b274:	20 d0 06 a8 	load_32 s1, 436(s0)
   4b278:	40 c0 06 a8 	load_32 s2, 432(s0)
   4b27c:	61 04 00 05 	add_i s3, s1, 1
   4b280:	20 00 00 0f 	move s1, 0
   4b284:	83 00 01 c1 	cmpeq_i s4, s3, s2
   4b288:	40 80 f0 c0 	move s2, s1
   4b28c:	44 00 00 f4 	bnz s4, 8 <HUlib_addLineToSText+0x20>
   4b290:	40 80 f1 c0 	move s2, s3
   4b294:	62 b0 01 07 	mull_i s3, s2, 108
   4b298:	40 d0 06 88 	store_32 s2, 436(s0)
   4b29c:	60 80 51 c0 	add_i s3, s0, s3
   4b2a0:	23 90 01 88 	store_32 s1, 100(s3)
   4b2a4:	23 40 00 82 	store_8 s1, 16(s3)
   4b2a8:	20 04 00 0f 	move s1, 1
   4b2ac:	23 a0 01 88 	store_32 s1, 104(s3)
   4b2b0:	20 c0 06 a8 	load_32 s1, 432(s0)
   4b2b4:	41 04 00 14 	cmplt_i s2, s1, 1
   4b2b8:	22 01 00 f4 	bnz s2, 36 <HUlib_addLineToSText+0x68>
   4b2bc:	40 00 00 0f 	move s2, 0
   4b2c0:	60 10 00 0f 	move s3, 4
   4b2c4:	82 b0 01 07 	mull_i s4, s2, 108
   4b2c8:	42 04 00 05 	add_i s2, s2, 1
   4b2cc:	80 00 52 c0 	add_i s4, s0, s4
   4b2d0:	a2 80 40 c1 	cmplt_i s5, s2, s1
   4b2d4:	64 a0 01 88 	store_32 s3, 104(s4)
   4b2d8:	65 ff ff f5 	bnz s5, -20 <HUlib_addLineToSText+0x50>
   4b2dc:	1f 00 00 f0 	ret

000000000004b2e0 HUlib_addMessageToSText:
   4b2e0:	60 d0 06 a8 	load_32 s3, 436(s0)
   4b2e4:	80 c0 06 a8 	load_32 s4, 432(s0)
   4b2e8:	a3 04 00 05 	add_i s5, s3, 1
   4b2ec:	60 00 00 0f 	move s3, 0
   4b2f0:	c5 00 02 c1 	cmpeq_i s6, s5, s4
   4b2f4:	80 80 f1 c0 	move s4, s3
   4b2f8:	46 00 00 f4 	bnz s6, 8 <HUlib_addMessageToSText+0x20>
   4b2fc:	80 80 f2 c0 	move s4, s5
   4b300:	a4 b0 01 07 	mull_i s5, s4, 108
   4b304:	80 d0 06 88 	store_32 s4, 436(s0)
   4b308:	a0 80 52 c0 	add_i s5, s0, s5
   4b30c:	65 90 01 88 	store_32 s3, 100(s5)
   4b310:	65 40 00 82 	store_8 s3, 16(s5)
   4b314:	60 04 00 0f 	move s3, 1
   4b318:	65 a0 01 88 	store_32 s3, 104(s5)
   4b31c:	60 c0 06 a8 	load_32 s3, 432(s0)
   4b320:	83 04 00 14 	cmplt_i s4, s3, 1
   4b324:	24 01 00 f4 	bnz s4, 36 <HUlib_addMessageToSText+0x68>
   4b328:	80 00 00 0f 	move s4, 0
   4b32c:	a0 10 00 0f 	move s5, 4
   4b330:	c4 b0 01 07 	mull_i s6, s4, 108
   4b334:	84 04 00 05 	add_i s4, s4, 1
   4b338:	c0 00 53 c0 	add_i s6, s0, s6
   4b33c:	e4 80 41 c1 	cmplt_i s7, s4, s3
   4b340:	a6 a0 01 88 	store_32 s5, 104(s6)
   4b344:	67 ff ff f5 	bnz s7, -20 <HUlib_addMessageToSText+0x50>
   4b348:	01 03 00 f2 	bz s1, 96 <HUlib_addMessageToSText+0xc8>
   4b34c:	a1 00 00 a0 	load_u8 s5, (s1)
   4b350:	c5 02 00 f2 	bz s5, 88 <HUlib_addMessageToSText+0xc8>
   4b354:	60 00 00 0f 	move s3, 0
   4b358:	80 10 00 0f 	move s4, 4
   4b35c:	c0 d0 06 a8 	load_32 s6, 436(s0)
   4b360:	21 04 00 05 	add_i s1, s1, 1
   4b364:	c6 b0 01 07 	mull_i s6, s6, 108
   4b368:	c0 00 53 c0 	add_i s6, s0, s6
   4b36c:	e6 90 01 a8 	load_32 s7, 100(s6)
   4b370:	07 41 01 10 	cmpeq_i s8, s7, 80
   4b374:	68 01 00 f4 	bnz s8, 44 <HUlib_addMessageToSText+0xc0>
   4b378:	06 41 00 05 	add_i s8, s6, 16
   4b37c:	26 91 01 05 	add_i s9, s6, 100
   4b380:	48 81 53 c0 	add_i s10, s8, s7
   4b384:	e7 04 00 05 	add_i s7, s7, 1
   4b388:	e9 00 00 88 	store_32 s7, (s9)
   4b38c:	aa 00 00 82 	store_8 s5, (s10)
   4b390:	a9 00 00 a8 	load_32 s5, (s9)
   4b394:	a8 80 52 c0 	add_i s5, s8, s5
   4b398:	65 00 00 82 	store_8 s3, (s5)
   4b39c:	86 a0 01 88 	store_32 s4, 104(s6)
   4b3a0:	a1 00 00 a0 	load_u8 s5, (s1)
   4b3a4:	c5 fd ff f5 	bnz s5, -72 <HUlib_addMessageToSText+0x7c>
   4b3a8:	82 00 00 a0 	load_u8 s4, (s2)
   4b3ac:	c4 02 00 f2 	bz s4, 88 <HUlib_addMessageToSText+0x124>
   4b3b0:	20 00 00 0f 	move s1, 0
   4b3b4:	60 10 00 0f 	move s3, 4
   4b3b8:	a0 d0 06 a8 	load_32 s5, 436(s0)
   4b3bc:	42 04 00 05 	add_i s2, s2, 1
   4b3c0:	a5 b0 01 07 	mull_i s5, s5, 108
   4b3c4:	a0 80 52 c0 	add_i s5, s0, s5
   4b3c8:	c5 90 01 a8 	load_32 s6, 100(s5)
   4b3cc:	e6 40 01 10 	cmpeq_i s7, s6, 80
   4b3d0:	67 01 00 f4 	bnz s7, 44 <HUlib_addMessageToSText+0x11c>
   4b3d4:	e5 40 00 05 	add_i s7, s5, 16
   4b3d8:	05 91 01 05 	add_i s8, s5, 100
   4b3dc:	27 01 53 c0 	add_i s9, s7, s6
   4b3e0:	c6 04 00 05 	add_i s6, s6, 1
   4b3e4:	c8 00 00 88 	store_32 s6, (s8)
   4b3e8:	89 00 00 82 	store_8 s4, (s9)
   4b3ec:	88 00 00 a8 	load_32 s4, (s8)
   4b3f0:	87 00 52 c0 	add_i s4, s7, s4
   4b3f4:	24 00 00 82 	store_8 s1, (s4)
   4b3f8:	65 a0 01 88 	store_32 s3, 104(s5)
   4b3fc:	82 00 00 a0 	load_u8 s4, (s2)
   4b400:	c4 fd ff f5 	bnz s4, -72 <HUlib_addMessageToSText+0xd8>
   4b404:	1f 00 00 f0 	ret

000000000004b408 HUlib_drawSText:
   4b408:	de 03 ff 05 	add_i sp, sp, -64
   4b40c:	1e f3 00 88 	store_32 s24, 60(sp)
   4b410:	3e e3 00 88 	store_32 s25, 56(sp)
   4b414:	5e d3 00 88 	store_32 s26, 52(sp)
   4b418:	7e c3 00 88 	store_32 s27, 48(sp)
   4b41c:	fe b3 00 88 	store_32 ra, 44(sp)
   4b420:	20 e0 06 a8 	load_32 s1, 440(s0)
   4b424:	21 00 00 a8 	load_32 s1, (s1)
   4b428:	01 0a 00 f2 	bz s1, 320 <HUlib_drawSText+0x160>
   4b42c:	60 c0 06 a8 	load_32 s3, 432(s0)
   4b430:	23 04 00 14 	cmplt_i s1, s3, 1
   4b434:	a1 09 00 f4 	bnz s1, 308 <HUlib_drawSText+0x160>
   4b438:	20 00 00 0f 	move s1, 0
   4b43c:	3e 70 00 88 	store_32 s1, 28(sp)
   4b440:	40 80 f0 c0 	move s2, s1
   4b444:	1e 30 00 88 	store_32 s0, 12(sp)
   4b448:	20 d0 06 a8 	load_32 s1, 436(s0)
   4b44c:	5e 40 00 88 	store_32 s2, 16(sp)
   4b450:	21 00 61 c0 	sub_i s1, s1, s2
   4b454:	41 7c 00 09 	ashr s2, s1, 31
   4b458:	42 80 11 c0 	and s2, s2, s3
   4b45c:	22 80 50 c0 	add_i s1, s2, s1
   4b460:	21 b0 01 07 	mull_i s1, s1, 108
   4b464:	00 80 50 c0 	add_i s0, s0, s1
   4b468:	1e a0 00 88 	store_32 s0, 40(sp)
   4b46c:	60 93 01 a8 	load_32 s27, 100(s0)
   4b470:	1b 04 00 14 	cmplt_i s0, s27, 1
   4b474:	e0 06 00 f4 	bnz s0, 220 <HUlib_drawSText+0x148>
   4b478:	1e a0 00 a8 	load_32 s0, 40(sp)
   4b47c:	20 20 00 05 	add_i s1, s0, 8
   4b480:	3e 80 00 88 	store_32 s1, 32(sp)
   4b484:	20 90 01 05 	add_i s1, s0, 100
   4b488:	3e 60 00 88 	store_32 s1, 24(sp)
   4b48c:	00 03 00 a8 	load_32 s24, (s0)
   4b490:	20 30 00 05 	add_i s1, s0, 12
   4b494:	3e 90 00 88 	store_32 s1, 36(sp)
   4b498:	00 10 00 05 	add_i s0, s0, 4
   4b49c:	1e 50 00 88 	store_32 s0, 20(sp)
   4b4a0:	3e 73 00 a8 	load_32 s25, 28(sp)
   4b4a4:	1e a0 00 a8 	load_32 s0, 40(sp)
   4b4a8:	00 80 5c c0 	add_i s0, s0, s25
   4b4ac:	00 40 00 a2 	load_s8 s0, 16(s0)
   4b4b0:	8d 1c 00 f8 	call 29236 <toupper>
   4b4b4:	00 fc 03 01 	and s0, s0, 255
   4b4b8:	20 80 00 10 	cmpeq_i s1, s0, 32
   4b4bc:	41 00 00 f4 	bnz s1, 8 <HUlib_drawSText+0xbc>
   4b4c0:	09 00 00 f6 	b 36 <HUlib_drawSText+0xdc>
   4b4c4:	58 13 00 05 	add_i s26, s24, 4
   4b4c8:	1a fc 04 12 	cmpgt_i s0, s26, 319
   4b4cc:	20 04 00 f4 	bnz s0, 132 <HUlib_drawSText+0x148>
   4b4d0:	39 07 00 05 	add_i s25, s25, 1
   4b4d4:	00 03 fd c0 	move s24, s26
   4b4d8:	19 80 4d c1 	cmplt_i s0, s25, s27
   4b4dc:	40 fe ff f5 	bnz s0, -56 <HUlib_drawSText+0x9c>
   4b4e0:	1c 00 00 f6 	b 112 <HUlib_drawSText+0x148>
   4b4e4:	3e 90 00 a8 	load_32 s1, 36(sp)
   4b4e8:	40 7c 01 16 	cmpgt_u s2, s0, 95
   4b4ec:	21 00 00 a8 	load_32 s1, (s1)
   4b4f0:	a2 fe ff f5 	bnz s2, -44 <HUlib_drawSText+0xbc>
   4b4f4:	40 80 40 c1 	cmplt_i s2, s0, s1
   4b4f8:	62 fe ff f5 	bnz s2, -52 <HUlib_drawSText+0xbc>
   4b4fc:	5e 80 00 a8 	load_32 s2, 32(sp)
   4b500:	00 80 60 c0 	sub_i s0, s0, s1
   4b504:	00 08 00 0b 	shl s0, s0, 2
   4b508:	42 00 00 a8 	load_32 s2, (s2)
   4b50c:	02 00 50 c0 	add_i s0, s2, s0
   4b510:	60 00 00 a8 	load_32 s3, (s0)
   4b514:	03 00 00 a6 	load_s16 s0, (s3)
   4b518:	58 03 50 c0 	add_i s26, s24, s0
   4b51c:	1a 00 05 12 	cmpgt_i s0, s26, 320
   4b520:	80 01 00 f4 	bnz s0, 48 <HUlib_drawSText+0x148>
   4b524:	1e 50 00 a8 	load_32 s0, 20(sp)
   4b528:	20 00 00 a8 	load_32 s1, (s0)
   4b52c:	00 00 fc c0 	move s0, s24
   4b530:	5e 70 00 a8 	load_32 s2, 28(sp)
   4b534:	ce eb ff f9 	call -20680 <V_DrawPatchDirect>
   4b538:	1e 60 00 a8 	load_32 s0, 24(sp)
   4b53c:	60 03 00 a8 	load_32 s27, (s0)
   4b540:	39 07 00 05 	add_i s25, s25, 1
   4b544:	00 03 fd c0 	move s24, s26
   4b548:	19 80 4d c1 	cmplt_i s0, s25, s27
   4b54c:	c0 fa ff f5 	bnz s0, -168 <HUlib_drawSText+0x9c>
   4b550:	1e 30 00 a8 	load_32 s0, 12(sp)
   4b554:	60 c0 06 a8 	load_32 s3, 432(s0)
   4b558:	5e 40 00 a8 	load_32 s2, 16(sp)
   4b55c:	42 04 00 05 	add_i s2, s2, 1
   4b560:	22 80 41 c1 	cmplt_i s1, s2, s3
   4b564:	21 f7 ff f5 	bnz s1, -284 <HUlib_drawSText+0x40>
   4b568:	fe b3 00 a8 	load_32 ra, 44(sp)
   4b56c:	7e c3 00 a8 	load_32 s27, 48(sp)
   4b570:	5e d3 00 a8 	load_32 s26, 52(sp)
   4b574:	3e e3 00 a8 	load_32 s25, 56(sp)
   4b578:	1e f3 00 a8 	load_32 s24, 60(sp)
   4b57c:	de 03 01 05 	add_i sp, sp, 64
   4b580:	1f 00 00 f0 	ret

000000000004b584 HUlib_eraseSText:
   4b584:	de 03 ff 05 	add_i sp, sp, -64
   4b588:	1e f3 00 88 	store_32 s24, 60(sp)
   4b58c:	3e e3 00 88 	store_32 s25, 56(sp)
   4b590:	5e d3 00 88 	store_32 s26, 52(sp)
   4b594:	fe c3 00 88 	store_32 ra, 48(sp)
   4b598:	00 03 f0 c0 	move s24, s0
   4b59c:	18 c0 06 a8 	load_32 s0, 432(s24)
   4b5a0:	00 04 00 14 	cmplt_i s0, s0, 1
   4b5a4:	40 02 00 f4 	bnz s0, 72 <HUlib_eraseSText+0x68>
   4b5a8:	20 03 00 0f 	move s25, 0
   4b5ac:	40 13 00 0f 	move s26, 4
   4b5b0:	18 f0 06 a8 	load_32 s0, 444(s24)
   4b5b4:	e0 00 00 f2 	bz s0, 28 <HUlib_eraseSText+0x4c>
   4b5b8:	18 e0 06 a8 	load_32 s0, 440(s24)
   4b5bc:	00 00 00 a8 	load_32 s0, (s0)
   4b5c0:	80 00 00 f4 	bnz s0, 16 <HUlib_eraseSText+0x4c>
   4b5c4:	19 b0 01 07 	mull_i s0, s25, 108
   4b5c8:	18 00 50 c0 	add_i s0, s24, s0
   4b5cc:	40 a3 01 88 	store_32 s26, 104(s0)
   4b5d0:	19 b0 01 07 	mull_i s0, s25, 108
   4b5d4:	18 00 50 c0 	add_i s0, s24, s0
   4b5d8:	bb fe ff f9 	call -1300 <HUlib_eraseTextLine>
   4b5dc:	18 c0 06 a8 	load_32 s0, 432(s24)
   4b5e0:	39 07 00 05 	add_i s25, s25, 1
   4b5e4:	19 00 40 c1 	cmplt_i s0, s25, s0
   4b5e8:	40 fe ff f5 	bnz s0, -56 <HUlib_eraseSText+0x2c>
   4b5ec:	18 e0 06 a8 	load_32 s0, 440(s24)
   4b5f0:	00 00 00 a8 	load_32 s0, (s0)
   4b5f4:	18 f0 06 88 	store_32 s0, 444(s24)
   4b5f8:	fe c3 00 a8 	load_32 ra, 48(sp)
   4b5fc:	5e d3 00 a8 	load_32 s26, 52(sp)
   4b600:	3e e3 00 a8 	load_32 s25, 56(sp)
   4b604:	1e f3 00 a8 	load_32 s24, 60(sp)
   4b608:	de 03 01 05 	add_i sp, sp, 64
   4b60c:	1f 00 00 f0 	ret

000000000004b610 HUlib_initIText:
   4b610:	c0 00 00 0f 	move s6, 0
   4b614:	c0 b0 01 88 	store_32 s6, 108(s0)
   4b618:	a0 c0 01 88 	store_32 s5, 112(s0)
   4b61c:	a0 04 00 0f 	move s5, 1
   4b620:	a0 d0 01 88 	store_32 s5, 116(s0)
   4b624:	20 00 00 88 	store_32 s1, (s0)
   4b628:	40 10 00 88 	store_32 s2, 4(s0)
   4b62c:	60 20 00 88 	store_32 s3, 8(s0)
   4b630:	80 30 00 88 	store_32 s4, 12(s0)
   4b634:	c0 90 01 88 	store_32 s6, 100(s0)
   4b638:	c0 40 00 82 	store_8 s6, 16(s0)
   4b63c:	a0 a0 01 88 	store_32 s5, 104(s0)
   4b640:	1f 00 00 f0 	ret

000000000004b644 HUlib_delCharFromIText:
   4b644:	20 90 01 a8 	load_32 s1, 100(s0)
   4b648:	40 b0 01 a8 	load_32 s2, 108(s0)
   4b64c:	41 00 01 c1 	cmpeq_i s2, s1, s2
   4b650:	22 01 00 f4 	bnz s2, 36 <HUlib_delCharFromIText+0x30>
   4b654:	01 01 00 f2 	bz s1, 32 <HUlib_delCharFromIText+0x30>
   4b658:	21 fc ff 05 	add_i s1, s1, -1
   4b65c:	20 90 01 88 	store_32 s1, 100(s0)
   4b660:	40 80 50 c0 	add_i s2, s0, s1
   4b664:	20 00 00 0f 	move s1, 0
   4b668:	22 40 00 82 	store_8 s1, 16(s2)
   4b66c:	20 10 00 0f 	move s1, 4
   4b670:	20 a0 01 88 	store_32 s1, 104(s0)
   4b674:	1f 00 00 f0 	ret

000000000004b678 HUlib_eraseLineFromIText:
   4b678:	40 b0 01 a8 	load_32 s2, 108(s0)
   4b67c:	80 90 01 a8 	load_32 s4, 100(s0)
   4b680:	22 00 02 c1 	cmpeq_i s1, s2, s4
   4b684:	a1 01 00 f4 	bnz s1, 52 <HUlib_eraseLineFromIText+0x40>
   4b688:	20 00 00 0f 	move s1, 0
   4b68c:	60 10 00 0f 	move s3, 4
   4b690:	04 01 00 f2 	bz s4, 32 <HUlib_eraseLineFromIText+0x38>
   4b694:	44 fc ff 05 	add_i s2, s4, -1
   4b698:	40 90 01 88 	store_32 s2, 100(s0)
   4b69c:	80 00 51 c0 	add_i s4, s0, s2
   4b6a0:	24 40 00 82 	store_8 s1, 16(s4)
   4b6a4:	60 a0 01 88 	store_32 s3, 104(s0)
   4b6a8:	40 b0 01 a8 	load_32 s2, 108(s0)
   4b6ac:	80 90 01 a8 	load_32 s4, 100(s0)
   4b6b0:	a2 00 12 c1 	cmpne_i s5, s2, s4
   4b6b4:	e5 fe ff f5 	bnz s5, -36 <HUlib_eraseLineFromIText+0x18>
   4b6b8:	1f 00 00 f0 	ret

000000000004b6bc HUlib_resetIText:
   4b6bc:	20 00 00 0f 	move s1, 0
   4b6c0:	20 b0 01 88 	store_32 s1, 108(s0)
   4b6c4:	20 90 01 88 	store_32 s1, 100(s0)
   4b6c8:	20 40 00 82 	store_8 s1, 16(s0)
   4b6cc:	20 04 00 0f 	move s1, 1
   4b6d0:	20 a0 01 88 	store_32 s1, 104(s0)
   4b6d4:	1f 00 00 f0 	ret

000000000004b6d8 HUlib_addPrefixToIText:
   4b6d8:	a1 00 00 a0 	load_u8 s5, (s1)
   4b6dc:	45 02 00 f2 	bz s5, 72 <HUlib_addPrefixToIText+0x4c>
   4b6e0:	40 40 00 05 	add_i s2, s0, 16
   4b6e4:	60 00 00 0f 	move s3, 0
   4b6e8:	80 10 00 0f 	move s4, 4
   4b6ec:	c0 90 01 a8 	load_32 s6, 100(s0)
   4b6f0:	21 04 00 05 	add_i s1, s1, 1
   4b6f4:	e6 40 01 10 	cmpeq_i s7, s6, 80
   4b6f8:	27 01 00 f4 	bnz s7, 36 <HUlib_addPrefixToIText+0x44>
   4b6fc:	e2 00 53 c0 	add_i s7, s2, s6
   4b700:	c6 04 00 05 	add_i s6, s6, 1
   4b704:	c0 90 01 88 	store_32 s6, 100(s0)
   4b708:	a7 00 00 82 	store_8 s5, (s7)
   4b70c:	a0 90 01 a8 	load_32 s5, 100(s0)
   4b710:	a2 80 52 c0 	add_i s5, s2, s5
   4b714:	65 00 00 82 	store_8 s3, (s5)
   4b718:	80 a0 01 88 	store_32 s4, 104(s0)
   4b71c:	a1 00 00 a0 	load_u8 s5, (s1)
   4b720:	65 fe ff f5 	bnz s5, -52 <HUlib_addPrefixToIText+0x14>
   4b724:	20 90 01 a8 	load_32 s1, 100(s0)
   4b728:	20 b0 01 88 	store_32 s1, 108(s0)
   4b72c:	1f 00 00 f0 	ret

000000000004b730 HUlib_keyInIText:
   4b730:	41 80 ff 05 	add_i s2, s1, -32
   4b734:	42 fc 03 01 	and s2, s2, 255
   4b738:	42 fc 00 16 	cmpgt_u s2, s2, 63
   4b73c:	c2 01 00 f4 	bnz s2, 56 <HUlib_keyInIText+0x44>
   4b740:	40 90 01 a8 	load_32 s2, 100(s0)
   4b744:	62 40 01 10 	cmpeq_i s3, s2, 80
   4b748:	63 03 00 f4 	bnz s3, 108 <HUlib_keyInIText+0x84>
   4b74c:	60 40 00 05 	add_i s3, s0, 16
   4b750:	83 00 51 c0 	add_i s4, s3, s2
   4b754:	42 04 00 05 	add_i s2, s2, 1
   4b758:	40 90 01 88 	store_32 s2, 100(s0)
   4b75c:	40 00 00 0f 	move s2, 0
   4b760:	24 00 00 82 	store_8 s1, (s4)
   4b764:	20 90 01 a8 	load_32 s1, 100(s0)
   4b768:	23 80 50 c0 	add_i s1, s3, s1
   4b76c:	41 00 00 82 	store_8 s2, (s1)
   4b770:	0f 00 00 f6 	b 60 <HUlib_keyInIText+0x7c>
   4b774:	41 34 00 10 	cmpeq_i s2, s1, 13
   4b778:	e2 01 00 f4 	bnz s2, 60 <HUlib_keyInIText+0x84>
   4b77c:	21 fc 01 11 	cmpne_i s1, s1, 127
   4b780:	e1 01 00 f4 	bnz s1, 60 <HUlib_keyInIText+0x8c>
   4b784:	20 90 01 a8 	load_32 s1, 100(s0)
   4b788:	40 b0 01 a8 	load_32 s2, 108(s0)
   4b78c:	41 01 00 f2 	bz s1, 40 <HUlib_keyInIText+0x84>
   4b790:	41 00 01 c1 	cmpeq_i s2, s1, s2
   4b794:	02 01 00 f4 	bnz s2, 32 <HUlib_keyInIText+0x84>
   4b798:	21 fc ff 05 	add_i s1, s1, -1
   4b79c:	20 90 01 88 	store_32 s1, 100(s0)
   4b7a0:	40 80 50 c0 	add_i s2, s0, s1
   4b7a4:	20 00 00 0f 	move s1, 0
   4b7a8:	22 40 00 82 	store_8 s1, 16(s2)
   4b7ac:	20 10 00 0f 	move s1, 4
   4b7b0:	20 a0 01 88 	store_32 s1, 104(s0)
   4b7b4:	00 04 00 0f 	move s0, 1
   4b7b8:	1f 00 00 f0 	ret
   4b7bc:	00 00 00 0f 	move s0, 0
   4b7c0:	1f 00 00 f0 	ret

000000000004b7c4 HUlib_drawIText:
   4b7c4:	de 03 ff 05 	add_i sp, sp, -64
   4b7c8:	fe f3 00 88 	store_32 ra, 60(sp)
   4b7cc:	20 c0 01 a8 	load_32 s1, 112(s0)
   4b7d0:	21 00 00 a8 	load_32 s1, (s1)
   4b7d4:	61 00 00 f2 	bz s1, 12 <HUlib_drawIText+0x1c>
   4b7d8:	20 04 00 0f 	move s1, 1
   4b7dc:	ec fd ff f9 	call -2128 <HUlib_drawTextLine>
   4b7e0:	fe f3 00 a8 	load_32 ra, 60(sp)
   4b7e4:	de 03 01 05 	add_i sp, sp, 64
   4b7e8:	1f 00 00 f0 	ret

000000000004b7ec HUlib_eraseIText:
   4b7ec:	de 03 ff 05 	add_i sp, sp, -64
   4b7f0:	1e f3 00 88 	store_32 s24, 60(sp)
   4b7f4:	fe e3 00 88 	store_32 ra, 56(sp)
   4b7f8:	00 03 f0 c0 	move s24, s0
   4b7fc:	18 d0 01 a8 	load_32 s0, 116(s24)
   4b800:	c0 00 00 f2 	bz s0, 24 <HUlib_eraseIText+0x2c>
   4b804:	18 c0 01 a8 	load_32 s0, 112(s24)
   4b808:	00 00 00 a8 	load_32 s0, (s0)
   4b80c:	60 00 00 f4 	bnz s0, 12 <HUlib_eraseIText+0x2c>
   4b810:	00 10 00 0f 	move s0, 4
   4b814:	18 a0 01 88 	store_32 s0, 104(s24)
   4b818:	00 00 fc c0 	move s0, s24
   4b81c:	2a fe ff f9 	call -1880 <HUlib_eraseTextLine>
   4b820:	18 c0 01 a8 	load_32 s0, 112(s24)
   4b824:	00 00 00 a8 	load_32 s0, (s0)
   4b828:	18 d0 01 88 	store_32 s0, 116(s24)
   4b82c:	fe e3 00 a8 	load_32 ra, 56(sp)
   4b830:	1e f3 00 a8 	load_32 s24, 60(sp)
   4b834:	de 03 01 05 	add_i sp, sp, 64
   4b838:	1f 00 00 f0 	ret

000000000004b83c S_Init:
   4b83c:	de 03 fe 05 	add_i sp, sp, -128
   4b840:	1e f3 01 88 	store_32 s24, 124(sp)
   4b844:	3e e3 01 88 	store_32 s25, 120(sp)
   4b848:	5e d3 01 88 	store_32 s26, 116(sp)
   4b84c:	fe c3 01 88 	store_32 ra, 112(sp)
   4b850:	00 83 f0 c0 	move s24, s1
   4b854:	20 03 f0 c0 	move s25, s0
   4b858:	4a 0a ff f9 	call -251608 <I_SetChannels>
   4b85c:	19 00 02 18 	cmplt_u s0, s25, 128
   4b860:	c0 00 00 f4 	bnz s0, 24 <S_Init+0x3c>
   4b864:	00 00 00 4f 	movehi s0, 0
   4b868:	3e 13 00 88 	store_32 s25, 4(sp)
   4b86c:	00 f4 23 00 	or s0, s0, 2301
   4b870:	1e 00 00 88 	store_32 s0, (sp)
   4b874:	24 0a ff f9 	call -251760 <I_Error>
   4b878:	14 04 00 4f 	movehi s0, 52
   4b87c:	38 00 02 18 	cmplt_u s1, s24, 128
   4b880:	00 60 53 00 	or s0, s0, 5336
   4b884:	20 03 00 88 	store_32 s25, (s0)
   4b888:	c1 00 00 f4 	bnz s1, 24 <S_Init+0x64>
   4b88c:	00 00 00 4f 	movehi s0, 0
   4b890:	1e 13 00 88 	store_32 s24, 4(sp)
   4b894:	00 cc 58 00 	or s0, s0, 5683
   4b898:	1e 00 00 88 	store_32 s0, (sp)
   4b89c:	1a 0a ff f9 	call -251800 <I_Error>
   4b8a0:	00 fc 01 0f 	move s0, 127
   4b8a4:	39 0a ff f9 	call -251676 <I_SetMusicVolume>
   4b8a8:	00 00 fc c0 	move s0, s24
   4b8ac:	37 0a ff f9 	call -251684 <I_SetMusicVolume>
   4b8b0:	14 04 00 4f 	movehi s0, 52
   4b8b4:	20 0c 00 4f 	movehi s1, 96
   4b8b8:	20 03 00 0f 	move s25, 0
   4b8bc:	00 70 53 00 	or s0, s0, 5340
   4b8c0:	41 c3 06 00 	or s26, s1, 432
   4b8c4:	00 03 00 88 	store_32 s24, (s0)
   4b8c8:	00 07 00 0f 	move s24, 1
   4b8cc:	1a 00 00 a8 	load_32 s0, (s26)
   4b8d0:	20 00 fc c0 	move s1, s24
   4b8d4:	40 80 fc c0 	move s2, s25
   4b8d8:	00 30 00 07 	mull_i s0, s0, 12
   4b8dc:	ff 03 00 f8 	call 4092 <Z_Malloc>
   4b8e0:	20 0c 00 4f 	movehi s1, 96
   4b8e4:	21 d0 55 00 	or s1, s1, 5492
   4b8e8:	01 00 00 88 	store_32 s0, (s1)
   4b8ec:	3a 00 00 a8 	load_32 s1, (s26)
   4b8f0:	41 04 00 14 	cmplt_i s2, s1, 1
   4b8f4:	02 01 00 f4 	bnz s2, 32 <S_Init+0xd8>
   4b8f8:	40 80 fc c0 	move s2, s25
   4b8fc:	62 30 00 07 	mull_i s3, s2, 12
   4b900:	42 04 00 05 	add_i s2, s2, 1
   4b904:	60 80 51 c0 	add_i s3, s0, s3
   4b908:	82 80 40 c1 	cmplt_i s4, s2, s1
   4b90c:	23 03 00 88 	store_32 s25, (s3)
   4b910:	64 ff ff f5 	bnz s4, -20 <S_Init+0xc0>
   4b914:	00 0c 00 4f 	movehi s0, 96
   4b918:	39 04 00 4f 	movehi s1, 57
   4b91c:	00 e0 55 00 	or s0, s0, 5496
   4b920:	20 03 00 82 	store_8 s25, (s0)
   4b924:	01 20 59 00 	or s0, s1, 5704
   4b928:	20 fc ff 0f 	move s1, -1
   4b92c:	58 90 00 07 	mull_i s2, s24, 36
   4b930:	18 07 00 05 	add_i s24, s24, 1
   4b934:	40 00 51 c0 	add_i s2, s0, s2
   4b938:	78 b4 01 18 	cmplt_u s3, s24, 109
   4b93c:	22 70 00 88 	store_32 s1, 28(s2)
   4b940:	22 80 00 88 	store_32 s1, 32(s2)
   4b944:	43 ff ff f5 	bnz s3, -24 <S_Init+0xf0>
   4b948:	fe c3 01 a8 	load_32 ra, 112(sp)
   4b94c:	5e d3 01 a8 	load_32 s26, 116(sp)
   4b950:	3e e3 01 a8 	load_32 s25, 120(sp)
   4b954:	1e f3 01 a8 	load_32 s24, 124(sp)
   4b958:	de 03 02 05 	add_i sp, sp, 128
   4b95c:	1f 00 00 f0 	ret

000000000004b960 S_SetSfxVolume:
   4b960:	de 03 fe 05 	add_i sp, sp, -128
   4b964:	1e f3 01 88 	store_32 s24, 124(sp)
   4b968:	fe e3 01 88 	store_32 ra, 120(sp)
   4b96c:	00 03 f0 c0 	move s24, s0
   4b970:	18 00 02 18 	cmplt_u s0, s24, 128
   4b974:	c0 00 00 f4 	bnz s0, 24 <S_SetSfxVolume+0x2c>
   4b978:	00 00 00 4f 	movehi s0, 0
   4b97c:	1e 13 00 88 	store_32 s24, 4(sp)
   4b980:	00 f4 23 00 	or s0, s0, 2301
   4b984:	1e 00 00 88 	store_32 s0, (sp)
   4b988:	df 09 ff f9 	call -252036 <I_Error>
   4b98c:	14 04 00 4f 	movehi s0, 52
   4b990:	00 60 53 00 	or s0, s0, 5336
   4b994:	00 03 00 88 	store_32 s24, (s0)
   4b998:	fe e3 01 a8 	load_32 ra, 120(sp)
   4b99c:	1e f3 01 a8 	load_32 s24, 124(sp)
   4b9a0:	de 03 02 05 	add_i sp, sp, 128
   4b9a4:	1f 00 00 f0 	ret

000000000004b9a8 S_SetMusicVolume:
   4b9a8:	de 03 fe 05 	add_i sp, sp, -128
   4b9ac:	1e f3 01 88 	store_32 s24, 124(sp)
   4b9b0:	fe e3 01 88 	store_32 ra, 120(sp)
   4b9b4:	00 03 f0 c0 	move s24, s0
   4b9b8:	18 00 02 18 	cmplt_u s0, s24, 128
   4b9bc:	c0 00 00 f4 	bnz s0, 24 <S_SetMusicVolume+0x2c>
   4b9c0:	00 00 00 4f 	movehi s0, 0
   4b9c4:	1e 13 00 88 	store_32 s24, 4(sp)
   4b9c8:	00 cc 58 00 	or s0, s0, 5683
   4b9cc:	1e 00 00 88 	store_32 s0, (sp)
   4b9d0:	cd 09 ff f9 	call -252108 <I_Error>
   4b9d4:	00 fc 01 0f 	move s0, 127
   4b9d8:	ec 09 ff f9 	call -251984 <I_SetMusicVolume>
   4b9dc:	00 00 fc c0 	move s0, s24
   4b9e0:	ea 09 ff f9 	call -251992 <I_SetMusicVolume>
   4b9e4:	14 04 00 4f 	movehi s0, 52
   4b9e8:	00 70 53 00 	or s0, s0, 5340
   4b9ec:	00 03 00 88 	store_32 s24, (s0)
   4b9f0:	fe e3 01 a8 	load_32 ra, 120(sp)
   4b9f4:	1e f3 01 a8 	load_32 s24, 124(sp)
   4b9f8:	de 03 02 05 	add_i sp, sp, 128
   4b9fc:	1f 00 00 f0 	ret

000000000004ba00 S_Start:
   4ba00:	de 03 ff 05 	add_i sp, sp, -64
   4ba04:	1e f3 00 88 	store_32 s24, 60(sp)
   4ba08:	3e e3 00 88 	store_32 s25, 56(sp)
   4ba0c:	5e d3 00 88 	store_32 s26, 52(sp)
   4ba10:	7e c3 00 88 	store_32 s27, 48(sp)
   4ba14:	fe b3 00 88 	store_32 ra, 44(sp)
   4ba18:	00 0c 00 4f 	movehi s0, 96
   4ba1c:	00 c0 06 00 	or s0, s0, 432
   4ba20:	1e a0 00 88 	store_32 s0, 40(sp)
   4ba24:	00 00 00 a8 	load_32 s0, (s0)
   4ba28:	20 04 00 14 	cmplt_i s1, s0, 1
   4ba2c:	41 03 00 f4 	bnz s1, 104 <S_Start+0x94>
   4ba30:	20 0c 00 4f 	movehi s1, 96
   4ba34:	20 03 00 0f 	move s25, 0
   4ba38:	41 d3 55 00 	or s26, s1, 5492
   4ba3c:	60 83 fc c0 	move s27, s25
   4ba40:	3a 00 00 a8 	load_32 s1, (s26)
   4ba44:	5b 30 00 07 	mull_i s2, s27, 12
   4ba48:	01 03 51 c0 	add_i s24, s1, s2
   4ba4c:	38 00 00 a8 	load_32 s1, (s24)
   4ba50:	c1 01 00 f2 	bz s1, 56 <S_Start+0x88>
   4ba54:	18 20 00 a8 	load_32 s0, 8(s24)
   4ba58:	d2 09 ff f9 	call -252088 <I_SoundIsPlaying>
   4ba5c:	80 00 00 f2 	bz s0, 16 <S_Start+0x6c>
   4ba60:	18 20 00 05 	add_i s0, s24, 8
   4ba64:	00 00 00 a8 	load_32 s0, (s0)
   4ba68:	cd 09 ff f9 	call -252108 <I_StopSound>
   4ba6c:	18 00 00 a8 	load_32 s0, (s24)
   4ba70:	20 70 00 a8 	load_32 s1, 28(s0)
   4ba74:	21 fc ff 05 	add_i s1, s1, -1
   4ba78:	20 70 00 88 	store_32 s1, 28(s0)
   4ba7c:	38 03 00 88 	store_32 s25, (s24)
   4ba80:	1e a0 00 a8 	load_32 s0, 40(sp)
   4ba84:	00 00 00 a8 	load_32 s0, (s0)
   4ba88:	7b 07 00 05 	add_i s27, s27, 1
   4ba8c:	3b 00 40 c1 	cmplt_i s1, s27, s0
   4ba90:	81 fd ff f5 	bnz s1, -80 <S_Start+0x40>
   4ba94:	00 0c 00 4f 	movehi s0, 96
   4ba98:	2b 04 00 4f 	movehi s1, 43
   4ba9c:	40 00 00 0f 	move s2, 0
   4baa0:	00 e0 55 00 	or s0, s0, 5496
   4baa4:	21 00 40 00 	or s1, s1, 4096
   4baa8:	40 00 00 82 	store_8 s2, (s0)
   4baac:	01 00 00 a8 	load_32 s0, (s1)
   4bab0:	00 08 00 11 	cmpne_i s0, s0, 2
   4bab4:	c0 00 00 f4 	bnz s0, 24 <S_Start+0xcc>
   4bab8:	1a 04 00 4f 	movehi s0, 58
   4babc:	00 80 7f 00 	or s0, s0, 8160
   4bac0:	00 00 00 a8 	load_32 s0, (s0)
   4bac4:	00 80 00 05 	add_i s0, s0, 32
   4bac8:	15 00 00 f6 	b 84 <S_Start+0x11c>
   4bacc:	1a 04 00 4f 	movehi s0, 58
   4bad0:	00 70 6f 00 	or s0, s0, 7132
   4bad4:	00 00 00 a8 	load_32 s0, (s0)
   4bad8:	20 0c 00 12 	cmpgt_i s1, s0, 3
   4badc:	01 01 00 f4 	bnz s1, 32 <S_Start+0xfc>
   4bae0:	3a 04 00 4f 	movehi s1, 58
   4bae4:	00 24 00 07 	mull_i s0, s0, 9
   4bae8:	21 80 7f 00 	or s1, s1, 8160
   4baec:	21 00 00 a8 	load_32 s1, (s1)
   4baf0:	00 80 50 c0 	add_i s0, s0, s1
   4baf4:	00 dc ff 05 	add_i s0, s0, -9
   4baf8:	09 00 00 f6 	b 36 <S_Start+0x11c>
   4bafc:	1a 04 00 4f 	movehi s0, 58
   4bb00:	23 00 00 4f 	movehi s1, 3
   4bb04:	00 80 7f 00 	or s0, s0, 8160
   4bb08:	21 10 64 00 	or s1, s1, 6404
   4bb0c:	00 00 00 a8 	load_32 s0, (s0)
   4bb10:	00 08 00 0b 	shl s0, s0, 2
   4bb14:	01 00 50 c0 	add_i s0, s1, s0
   4bb18:	00 f0 ff a9 	load_32 s0, -4(s0)
   4bb1c:	20 04 00 0f 	move s1, 1
   4bb20:	22 00 00 f8 	call 136 <S_ChangeMusic>
   4bb24:	fe b3 00 a8 	load_32 ra, 44(sp)
   4bb28:	7e c3 00 a8 	load_32 s27, 48(sp)
   4bb2c:	5e d3 00 a8 	load_32 s26, 52(sp)
   4bb30:	3e e3 00 a8 	load_32 s25, 56(sp)
   4bb34:	1e f3 00 a8 	load_32 s24, 60(sp)
   4bb38:	de 03 01 05 	add_i sp, sp, 64
   4bb3c:	1f 00 00 f0 	ret

000000000004bb40 S_StopChannel:
   4bb40:	de 03 ff 05 	add_i sp, sp, -64
   4bb44:	1e f3 00 88 	store_32 s24, 60(sp)
   4bb48:	fe e3 00 88 	store_32 ra, 56(sp)
   4bb4c:	20 0c 00 4f 	movehi s1, 96
   4bb50:	00 30 00 07 	mull_i s0, s0, 12
   4bb54:	21 d0 55 00 	or s1, s1, 5492
   4bb58:	21 00 00 a8 	load_32 s1, (s1)
   4bb5c:	01 03 50 c0 	add_i s24, s1, s0
   4bb60:	18 00 00 a8 	load_32 s0, (s24)
   4bb64:	a0 01 00 f2 	bz s0, 52 <S_StopChannel+0x58>
   4bb68:	18 20 00 a8 	load_32 s0, 8(s24)
   4bb6c:	8d 09 ff f9 	call -252364 <I_SoundIsPlaying>
   4bb70:	80 00 00 f2 	bz s0, 16 <S_StopChannel+0x40>
   4bb74:	18 20 00 05 	add_i s0, s24, 8
   4bb78:	00 00 00 a8 	load_32 s0, (s0)
   4bb7c:	88 09 ff f9 	call -252384 <I_StopSound>
   4bb80:	18 00 00 a8 	load_32 s0, (s24)
   4bb84:	20 70 00 a8 	load_32 s1, 28(s0)
   4bb88:	21 fc ff 05 	add_i s1, s1, -1
   4bb8c:	20 70 00 88 	store_32 s1, 28(s0)
   4bb90:	00 00 00 0f 	move s0, 0
   4bb94:	18 00 00 88 	store_32 s0, (s24)
   4bb98:	fe e3 00 a8 	load_32 ra, 56(sp)
   4bb9c:	1e f3 00 a8 	load_32 s24, 60(sp)
   4bba0:	de 03 01 05 	add_i sp, sp, 64
   4bba4:	1f 00 00 f0 	ret

000000000004bba8 S_ChangeMusic:
   4bba8:	de 03 fe 05 	add_i sp, sp, -128
   4bbac:	1e f3 01 88 	store_32 s24, 124(sp)
   4bbb0:	3e e3 01 88 	store_32 s25, 120(sp)
   4bbb4:	5e d3 01 88 	store_32 s26, 116(sp)
   4bbb8:	fe c3 01 88 	store_32 ra, 112(sp)
   4bbbc:	40 fc ff 05 	add_i s2, s0, -1
   4bbc0:	00 83 f0 c0 	move s24, s1
   4bbc4:	42 0c 01 18 	cmplt_u s2, s2, 67
   4bbc8:	42 01 00 f4 	bnz s2, 40 <S_ChangeMusic+0x48>
   4bbcc:	20 00 00 4f 	movehi s1, 0
   4bbd0:	1e 10 00 88 	store_32 s0, 4(sp)
   4bbd4:	01 98 6d 00 	or s0, s1, 7014
   4bbd8:	1e 00 00 88 	store_32 s0, (sp)
   4bbdc:	4a 09 ff f9 	call -252632 <I_Error>
   4bbe0:	9e 02 00 f8 	call 2680 <S_StopMusic>
   4bbe4:	1a 10 00 a8 	load_32 s0, 4(s26)
   4bbe8:	20 03 00 f4 	bnz s0, 100 <S_ChangeMusic+0xa4>
   4bbec:	0d 00 00 f6 	b 52 <S_ChangeMusic+0x78>
   4bbf0:	20 0c 00 4f 	movehi s1, 96
   4bbf4:	59 04 00 4f 	movehi s2, 57
   4bbf8:	00 10 00 0b 	shl s0, s0, 4
   4bbfc:	21 f0 55 00 	or s1, s1, 5500
   4bc00:	42 20 48 00 	or s2, s2, 4616
   4bc04:	21 00 00 a8 	load_32 s1, (s1)
   4bc08:	42 03 50 c0 	add_i s26, s2, s0
   4bc0c:	01 00 0d c1 	cmpeq_i s0, s1, s26
   4bc10:	20 03 00 f4 	bnz s0, 100 <S_ChangeMusic+0xcc>
   4bc14:	91 02 00 f8 	call 2628 <S_StopMusic>
   4bc18:	1a 10 00 a8 	load_32 s0, 4(s26)
   4bc1c:	80 01 00 f4 	bnz s0, 48 <S_ChangeMusic+0xa4>
   4bc20:	21 00 00 4f 	movehi s1, 1
   4bc24:	1a 00 00 a8 	load_32 s0, (s26)
   4bc28:	1e 20 00 88 	store_32 s0, 8(sp)
   4bc2c:	3e 9f 01 05 	add_i s25, sp, 103
   4bc30:	01 dc 08 00 	or s0, s1, 567
   4bc34:	1e 10 00 88 	store_32 s0, 4(sp)
   4bc38:	3e 03 00 88 	store_32 s25, (sp)
   4bc3c:	73 18 00 f8 	call 25036 <sprintf>
   4bc40:	00 80 fc c0 	move s0, s25
   4bc44:	ec cb ff f9 	call -53328 <W_GetNumForName>
   4bc48:	1a 10 00 88 	store_32 s0, 4(s26)
   4bc4c:	20 0c 00 0f 	move s1, 3
   4bc50:	72 cc ff f9 	call -52792 <W_CacheLumpNum>
   4bc54:	1a 20 00 88 	store_32 s0, 8(s26)
   4bc58:	60 09 ff f9 	call -252544 <I_RegisterSong>
   4bc5c:	1a 30 00 88 	store_32 s0, 12(s26)
   4bc60:	20 00 fc c0 	move s1, s24
   4bc64:	58 09 ff f9 	call -252576 <I_PlaySong>
   4bc68:	00 0c 00 4f 	movehi s0, 96
   4bc6c:	00 f0 55 00 	or s0, s0, 5500
   4bc70:	40 03 00 88 	store_32 s26, (s0)
   4bc74:	fe c3 01 a8 	load_32 ra, 112(sp)
   4bc78:	5e d3 01 a8 	load_32 s26, 116(sp)
   4bc7c:	3e e3 01 a8 	load_32 s25, 120(sp)
   4bc80:	1e f3 01 a8 	load_32 s24, 124(sp)
   4bc84:	de 03 02 05 	add_i sp, sp, 128
   4bc88:	1f 00 00 f0 	ret

000000000004bc8c S_StartSoundAtVolume:
   4bc8c:	de 03 fe 05 	add_i sp, sp, -128
   4bc90:	1e f3 01 88 	store_32 s24, 124(sp)
   4bc94:	3e e3 01 88 	store_32 s25, 120(sp)
   4bc98:	5e d3 01 88 	store_32 s26, 116(sp)
   4bc9c:	7e c3 01 88 	store_32 s27, 112(sp)
   4bca0:	fe b3 01 88 	store_32 ra, 108(sp)
   4bca4:	00 83 f0 c0 	move s24, s1
   4bca8:	60 03 f1 c0 	move s27, s2
   4bcac:	20 03 f0 c0 	move s25, s0
   4bcb0:	7e a3 01 88 	store_32 s27, 104(sp)
   4bcb4:	38 fc ff 05 	add_i s1, s24, -1
   4bcb8:	01 b4 01 18 	cmplt_u s0, s1, 109
   4bcbc:	c0 00 00 f4 	bnz s0, 24 <S_StartSoundAtVolume+0x48>
   4bcc0:	00 00 00 4f 	movehi s0, 0
   4bcc4:	1e 13 00 88 	store_32 s24, 4(sp)
   4bcc8:	00 c0 4c 00 	or s0, s0, 4912
   4bccc:	1e 00 00 88 	store_32 s0, (sp)
   4bcd0:	0d 09 ff f9 	call -252876 <I_Error>
   4bcd4:	19 04 00 4f 	movehi s0, 57
   4bcd8:	38 90 00 07 	mull_i s1, s24, 36
   4bcdc:	00 20 59 00 	or s0, s0, 5704
   4bce0:	40 83 50 c0 	add_i s26, s0, s1
   4bce4:	1a 30 00 a8 	load_32 s0, 12(s26)
   4bce8:	60 02 00 f2 	bz s0, 76 <S_StartSoundAtVolume+0xa8>
   4bcec:	1a 40 00 a8 	load_32 s0, 16(s26)
   4bcf0:	1e 80 01 88 	store_32 s0, 96(sp)
   4bcf4:	1a 20 00 a8 	load_32 s0, 8(s26)
   4bcf8:	1e 60 01 88 	store_32 s0, 88(sp)
   4bcfc:	1a 50 00 a8 	load_32 s0, 20(s26)
   4bd00:	00 80 5d c0 	add_i s0, s0, s27
   4bd04:	1e a0 01 88 	store_32 s0, 104(sp)
   4bd08:	20 04 00 14 	cmplt_i s1, s0, 1
   4bd0c:	e1 12 00 f4 	bnz s1, 604 <S_StartSoundAtVolume+0x2dc>
   4bd10:	34 04 00 4f 	movehi s1, 52
   4bd14:	21 60 53 00 	or s1, s1, 5336
   4bd18:	21 00 00 a8 	load_32 s1, (s1)
   4bd1c:	1e 73 01 88 	store_32 s24, 92(sp)
   4bd20:	00 80 50 c1 	cmple_i s0, s0, s1
   4bd24:	40 00 00 f4 	bnz s0, 8 <S_StartSoundAtVolume+0xa0>
   4bd28:	3e a0 01 88 	store_32 s1, 104(sp)
   4bd2c:	b9 05 00 f2 	bz s25, 180 <S_StartSoundAtVolume+0x154>
   4bd30:	07 00 00 f6 	b 28 <S_StartSoundAtVolume+0xc0>
   4bd34:	00 00 01 0f 	move s0, 64
   4bd38:	1e 73 01 88 	store_32 s24, 92(sp)
   4bd3c:	1e 60 01 88 	store_32 s0, 88(sp)
   4bd40:	00 00 02 0f 	move s0, 128
   4bd44:	1e 80 01 88 	store_32 s0, 96(sp)
   4bd48:	d9 04 00 f2 	bz s25, 152 <S_StartSoundAtVolume+0x154>
   4bd4c:	1a 04 00 4f 	movehi s0, 58
   4bd50:	60 c3 6d 00 	or s27, s0, 7024
   4bd54:	1b 04 00 4f 	movehi s0, 59
   4bd58:	3b 00 00 a8 	load_32 s1, (s27)
   4bd5c:	00 43 02 00 	or s24, s0, 144
   4bd60:	01 60 04 07 	mull_i s0, s1, 280
   4bd64:	18 00 50 c0 	add_i s0, s24, s0
   4bd68:	00 00 00 a8 	load_32 s0, (s0)
   4bd6c:	20 80 0c c1 	cmpeq_i s1, s0, s25
   4bd70:	81 03 00 f4 	bnz s1, 112 <S_StartSoundAtVolume+0x154>
   4bd74:	5e a0 01 05 	add_i s2, sp, 104
   4bd78:	7e 90 01 05 	add_i s3, sp, 100
   4bd7c:	20 80 fc c0 	move s1, s25
   4bd80:	81 00 00 f8 	call 516 <S_AdjustSoundParams>
   4bd84:	59 30 00 a8 	load_32 s2, 12(s25)
   4bd88:	3b 00 00 a8 	load_32 s1, (s27)
   4bd8c:	21 60 04 07 	mull_i s1, s1, 280
   4bd90:	38 80 50 c0 	add_i s1, s24, s1
   4bd94:	21 00 00 a8 	load_32 s1, (s1)
   4bd98:	61 30 00 a8 	load_32 s3, 12(s1)
   4bd9c:	42 80 11 c1 	cmpne_i s2, s2, s3
   4bda0:	e2 00 00 f4 	bnz s2, 28 <S_StartSoundAtVolume+0x130>
   4bda4:	59 40 00 a8 	load_32 s2, 16(s25)
   4bda8:	21 40 00 a8 	load_32 s1, 16(s1)
   4bdac:	22 80 10 c1 	cmpne_i s1, s2, s1
   4bdb0:	61 00 00 f4 	bnz s1, 12 <S_StartSoundAtVolume+0x130>
   4bdb4:	20 00 02 0f 	move s1, 128
   4bdb8:	3e 90 01 88 	store_32 s1, 100(sp)
   4bdbc:	1e 73 01 a8 	load_32 s24, 92(sp)
   4bdc0:	40 0d 00 f2 	bz s0, 424 <S_StartSoundAtVolume+0x2dc>
   4bdc4:	18 d8 ff 05 	add_i s0, s24, -10
   4bdc8:	00 0c 00 16 	cmpgt_u s0, s0, 3
   4bdcc:	80 01 00 f4 	bnz s0, 48 <S_StartSoundAtVolume+0x170>
   4bdd0:	54 41 ff f9 	call -195248 <M_Random>
   4bdd4:	20 20 00 0f 	move s1, 8
   4bdd8:	00 3c 00 01 	and s0, s0, 15
   4bddc:	0f 00 00 f6 	b 60 <S_StartSoundAtVolume+0x18c>
   4bde0:	00 00 02 0f 	move s0, 128
   4bde4:	1e 90 01 88 	store_32 s0, 100(sp)
   4bde8:	1e 73 01 a8 	load_32 s24, 92(sp)
   4bdec:	18 d8 ff 05 	add_i s0, s24, -10
   4bdf0:	00 0c 00 16 	cmpgt_u s0, s0, 3
   4bdf4:	40 00 00 f4 	bnz s0, 8 <S_StartSoundAtVolume+0x170>
   4bdf8:	f6 ff ff f7 	b -40 <S_StartSoundAtVolume+0x144>
   4bdfc:	18 80 00 10 	cmpeq_i s0, s24, 32
   4be00:	40 02 00 f4 	bnz s0, 72 <S_StartSoundAtVolume+0x1bc>
   4be04:	18 5c 01 10 	cmpeq_i s0, s24, 87
   4be08:	00 02 00 f4 	bnz s0, 64 <S_StartSoundAtVolume+0x1bc>
   4be0c:	45 41 ff f9 	call -195308 <M_Random>
   4be10:	20 40 00 0f 	move s1, 16
   4be14:	00 7c 00 01 	and s0, s0, 31
   4be18:	01 00 60 c0 	sub_i s0, s1, s0
   4be1c:	3e 80 01 a8 	load_32 s1, 96(sp)
   4be20:	20 80 50 c0 	add_i s1, s0, s1
   4be24:	01 00 00 14 	cmplt_i s0, s1, 0
   4be28:	c0 00 00 f4 	bnz s0, 24 <S_StartSoundAtVolume+0x1b4>
   4be2c:	01 fc 03 14 	cmplt_i s0, s1, 255
   4be30:	40 00 00 f4 	bnz s0, 8 <S_StartSoundAtVolume+0x1ac>
   4be34:	20 fc 03 0f 	move s1, 255
   4be38:	3e 80 01 88 	store_32 s1, 96(sp)
   4be3c:	03 00 00 f6 	b 12 <S_StartSoundAtVolume+0x1bc>
   4be40:	00 00 00 0f 	move s0, 0
   4be44:	1e 80 01 88 	store_32 s0, 96(sp)
   4be48:	00 0c 00 4f 	movehi s0, 96
   4be4c:	00 c0 06 00 	or s0, s0, 432
   4be50:	00 00 00 a8 	load_32 s0, (s0)
   4be54:	20 04 00 14 	cmplt_i s1, s0, 1
   4be58:	a1 03 00 f4 	bnz s1, 116 <S_StartSoundAtVolume+0x240>
   4be5c:	20 0c 00 4f 	movehi s1, 96
   4be60:	40 00 00 0f 	move s2, 0
   4be64:	21 d0 55 00 	or s1, s1, 5492
   4be68:	21 00 00 a8 	load_32 s1, (s1)
   4be6c:	62 30 00 07 	mull_i s3, s2, 12
   4be70:	61 83 51 c0 	add_i s27, s1, s3
   4be74:	7b 00 00 a8 	load_32 s3, (s27)
   4be78:	a3 00 00 f2 	bz s3, 20 <S_StartSoundAtVolume+0x200>
   4be7c:	7b 10 00 a8 	load_32 s3, 4(s27)
   4be80:	63 80 1c c1 	cmpne_i s3, s3, s25
   4be84:	43 00 00 f4 	bnz s3, 8 <S_StartSoundAtVolume+0x200>
   4be88:	05 00 00 f6 	b 20 <S_StartSoundAtVolume+0x210>
   4be8c:	42 04 00 05 	add_i s2, s2, 1
   4be90:	62 00 40 c1 	cmplt_i s3, s2, s0
   4be94:	c3 fe ff f5 	bnz s3, -40 <S_StartSoundAtVolume+0x1e0>
   4be98:	0d 00 00 f6 	b 52 <S_StartSoundAtVolume+0x240>
   4be9c:	1b 20 00 a8 	load_32 s0, 8(s27)
   4bea0:	c0 08 ff f9 	call -253184 <I_SoundIsPlaying>
   4bea4:	80 00 00 f2 	bz s0, 16 <S_StartSoundAtVolume+0x228>
   4bea8:	1b 20 00 05 	add_i s0, s27, 8
   4beac:	00 00 00 a8 	load_32 s0, (s0)
   4beb0:	bb 08 ff f9 	call -253204 <I_StopSound>
   4beb4:	1b 00 00 a8 	load_32 s0, (s27)
   4beb8:	20 70 00 a8 	load_32 s1, 28(s0)
   4bebc:	21 fc ff 05 	add_i s1, s1, -1
   4bec0:	20 70 00 88 	store_32 s1, 28(s0)
   4bec4:	00 00 00 0f 	move s0, 0
   4bec8:	1b 00 00 88 	store_32 s0, (s27)
   4becc:	00 80 fc c0 	move s0, s25
   4bed0:	20 00 fd c0 	move s1, s26
   4bed4:	c8 00 00 f8 	call 800 <S_getChannel>
   4bed8:	20 03 f0 c0 	move s25, s0
   4bedc:	19 00 00 14 	cmplt_i s0, s25, 0
   4bee0:	40 04 00 f4 	bnz s0, 136 <S_StartSoundAtVolume+0x2dc>
   4bee4:	1a 80 00 a8 	load_32 s0, 32(s26)
   4bee8:	00 fc ff 12 	cmpgt_i s0, s0, -1
   4beec:	40 00 00 f4 	bnz s0, 8 <S_StartSoundAtVolume+0x268>
   4bef0:	06 00 00 f6 	b 24 <S_StartSoundAtVolume+0x27c>
   4bef4:	1a 70 00 a8 	load_32 s0, 28(s26)
   4bef8:	20 00 00 14 	cmplt_i s1, s0, 0
   4befc:	a1 01 00 f4 	bnz s1, 52 <S_StartSoundAtVolume+0x2a4>
   4bf00:	00 04 00 05 	add_i s0, s0, 1
   4bf04:	0c 00 00 f6 	b 48 <S_StartSoundAtVolume+0x2a8>
   4bf08:	60 03 fc c0 	move s27, s24
   4bf0c:	00 00 fd c0 	move s0, s26
   4bf10:	1a 83 00 05 	add_i s24, s26, 32
   4bf14:	9e 08 ff f9 	call -253320 <I_GetSfxLumpNum>
   4bf18:	18 00 00 88 	store_32 s0, (s24)
   4bf1c:	00 83 fd c0 	move s24, s27
   4bf20:	1a 70 00 a8 	load_32 s0, 28(s26)
   4bf24:	20 00 00 14 	cmplt_i s1, s0, 0
   4bf28:	41 00 00 f4 	bnz s1, 8 <S_StartSoundAtVolume+0x2a4>
   4bf2c:	f5 ff ff f7 	b -44 <S_StartSoundAtVolume+0x274>
   4bf30:	00 04 00 0f 	move s0, 1
   4bf34:	1a 70 00 88 	store_32 s0, 28(s26)
   4bf38:	3e a0 01 a8 	load_32 s1, 104(sp)
   4bf3c:	5e 90 01 a8 	load_32 s2, 100(sp)
   4bf40:	00 00 fc c0 	move s0, s24
   4bf44:	7e 80 01 a8 	load_32 s3, 96(sp)
   4bf48:	9e 60 01 a8 	load_32 s4, 88(sp)
   4bf4c:	92 08 ff f9 	call -253368 <I_StartSound>
   4bf50:	20 0c 00 4f 	movehi s1, 96
   4bf54:	59 30 00 07 	mull_i s2, s25, 12
   4bf58:	21 d0 55 00 	or s1, s1, 5492
   4bf5c:	21 00 00 a8 	load_32 s1, (s1)
   4bf60:	21 00 51 c0 	add_i s1, s1, s2
   4bf64:	01 20 00 88 	store_32 s0, 8(s1)
   4bf68:	fe b3 01 a8 	load_32 ra, 108(sp)
   4bf6c:	7e c3 01 a8 	load_32 s27, 112(sp)
   4bf70:	5e d3 01 a8 	load_32 s26, 116(sp)
   4bf74:	3e e3 01 a8 	load_32 s25, 120(sp)
   4bf78:	1e f3 01 a8 	load_32 s24, 124(sp)
   4bf7c:	de 03 02 05 	add_i sp, sp, 128
   4bf80:	1f 00 00 f0 	ret

000000000004bf84 S_AdjustSoundParams:
   4bf84:	de 03 ff 05 	add_i sp, sp, -64
   4bf88:	1e f3 00 88 	store_32 s24, 60(sp)
   4bf8c:	3e e3 00 88 	store_32 s25, 56(sp)
   4bf90:	5e d3 00 88 	store_32 s26, 52(sp)
   4bf94:	7e c3 00 88 	store_32 s27, 48(sp)
   4bf98:	fe b3 00 88 	store_32 ra, 44(sp)
   4bf9c:	a0 80 f0 c0 	move s5, s1
   4bfa0:	40 03 f0 c0 	move s26, s0
   4bfa4:	1a 30 00 a8 	load_32 s0, 12(s26)
   4bfa8:	85 30 00 a8 	load_32 s4, 12(s5)
   4bfac:	3a 40 00 a8 	load_32 s1, 16(s26)
   4bfb0:	a5 40 00 a8 	load_32 s5, 16(s5)
   4bfb4:	20 83 f1 c0 	move s25, s3
   4bfb8:	c0 00 62 c0 	sub_i s6, s0, s4
   4bfbc:	e1 80 62 c0 	sub_i s7, s1, s5
   4bfc0:	06 7d 00 09 	ashr s8, s6, 31
   4bfc4:	c6 00 54 c0 	add_i s6, s6, s8
   4bfc8:	27 7d 00 09 	ashr s9, s7, 31
   4bfcc:	e7 80 54 c0 	add_i s7, s7, s9
   4bfd0:	c6 00 34 c0 	xor s6, s6, s8
   4bfd4:	e7 80 34 c0 	xor s7, s7, s9
   4bfd8:	66 80 43 c1 	cmplt_i s3, s6, s7
   4bfdc:	07 01 53 c0 	add_i s8, s7, s6
   4bfe0:	43 00 00 f4 	bnz s3, 8 <S_AdjustSoundParams+0x64>
   4bfe4:	c0 80 f3 c0 	move s6, s7
   4bfe8:	7a 04 00 4f 	movehi s3, 58
   4bfec:	c6 04 00 0a 	shr s6, s6, 1
   4bff0:	68 03 63 c0 	sub_i s27, s8, s6
   4bff4:	03 83 7f 00 	or s24, s3, 8160
   4bff8:	78 00 00 a8 	load_32 s3, (s24)
   4bffc:	63 20 00 10 	cmpeq_i s3, s3, 8
   4c000:	e3 00 00 f4 	bnz s3, 28 <S_AdjustSoundParams+0x98>
   4c004:	60 b0 04 4f 	movehi s3, 9600
   4c008:	7b 80 21 c1 	cmpgt_i s3, s27, s3
   4c00c:	43 00 00 f4 	bnz s3, 8 <S_AdjustSoundParams+0x90>
   4c010:	03 00 00 f6 	b 12 <S_AdjustSoundParams+0x98>
   4c014:	00 00 00 0f 	move s0, 0
   4c018:	45 00 00 f6 	b 276 <S_AdjustSoundParams+0x1a8>
   4c01c:	5e a0 00 88 	store_32 s2, 40(sp)
   4c020:	40 00 f2 c0 	move s2, s4
   4c024:	60 80 f2 c0 	move s3, s5
   4c028:	d0 b4 ff f9 	call -76992 <R_PointToAngle2>
   4c02c:	3a 80 00 a8 	load_32 s1, 32(s26)
   4c030:	40 03 00 0f 	move s26, 0
   4c034:	40 80 60 c1 	cmpgt_u s2, s0, s1
   4c038:	62 00 00 f4 	bnz s2, 12 <S_AdjustSoundParams+0xc0>
   4c03c:	21 fc ff 03 	xor s1, s1, -1
   4c040:	02 00 00 f6 	b 8 <S_AdjustSoundParams+0xc4>
   4c044:	3a 80 60 c0 	sub_i s1, s26, s1
   4c048:	01 00 50 c0 	add_i s0, s1, s0
   4c04c:	2d 04 00 4f 	movehi s1, 45
   4c050:	43 00 00 4f 	movehi s2, 3
   4c054:	00 44 00 0a 	shr s0, s0, 17
   4c058:	21 90 41 00 	or s1, s1, 4196
   4c05c:	42 f0 7f 00 	or s2, s2, 8188
   4c060:	00 00 11 c0 	and s0, s0, s2
   4c064:	01 00 50 c0 	add_i s0, s1, s0
   4c068:	20 00 00 a8 	load_32 s1, (s0)
   4c06c:	00 60 00 4f 	movehi s0, 768
   4c070:	b1 3f ff f9 	call -196924 <FixedMul>
   4c074:	20 00 02 0f 	move s1, 128
   4c078:	5f 9c 00 4f 	movehi s2, 1279
   4c07c:	00 40 00 09 	ashr s0, s0, 16
   4c080:	01 00 60 c0 	sub_i s0, s1, s0
   4c084:	19 00 00 88 	store_32 s0, (s25)
   4c088:	22 fc 7f 00 	or s1, s2, 8191
   4c08c:	3b 80 20 c1 	cmpgt_i s1, s27, s1
   4c090:	14 04 00 4f 	movehi s0, 52
   4c094:	81 00 00 f4 	bnz s1, 16 <S_AdjustSoundParams+0x120>
   4c098:	00 60 53 00 	or s0, s0, 5336
   4c09c:	00 00 00 a8 	load_32 s0, (s0)
   4c0a0:	1f 00 00 f6 	b 124 <S_AdjustSoundParams+0x198>
   4c0a4:	38 00 00 a8 	load_32 s1, (s24)
   4c0a8:	00 60 53 00 	or s0, s0, 5336
   4c0ac:	00 00 00 a8 	load_32 s0, (s0)
   4c0b0:	21 20 00 11 	cmpne_i s1, s1, 8
   4c0b4:	01 02 00 f4 	bnz s1, 64 <S_AdjustSoundParams+0x170>
   4c0b8:	20 b0 04 4f 	movehi s1, 9600
   4c0bc:	5b 80 20 c1 	cmpgt_i s2, s27, s1
   4c0c0:	00 c4 ff 05 	add_i s0, s0, -15
   4c0c4:	62 00 00 f4 	bnz s2, 12 <S_AdjustSoundParams+0x14c>
   4c0c8:	21 80 6d c0 	sub_i s1, s1, s27
   4c0cc:	41 43 00 09 	ashr s26, s1, 16
   4c0d0:	3f 04 7e 4f 	movehi s1, 258111
   4c0d4:	00 00 7d c0 	mull_i s0, s0, s26
   4c0d8:	21 fc 01 00 	or s1, s1, 127
   4c0dc:	00 80 f0 c1 	mulh_i s0, s0, s1
   4c0e0:	20 24 00 09 	ashr s1, s0, 9
   4c0e4:	00 7c 00 0a 	shr s0, s0, 31
   4c0e8:	01 00 50 c0 	add_i s0, s1, s0
   4c0ec:	00 3c 00 05 	add_i s0, s0, 15
   4c0f0:	0b 00 00 f6 	b 44 <S_AdjustSoundParams+0x198>
   4c0f4:	20 b0 04 4f 	movehi s1, 9600
   4c0f8:	5f 04 7e 4f 	movehi s2, 258111
   4c0fc:	21 80 6d c0 	sub_i s1, s1, s27
   4c100:	21 40 00 09 	ashr s1, s1, 16
   4c104:	00 80 70 c0 	mull_i s0, s0, s1
   4c108:	22 fc 01 00 	or s1, s2, 127
   4c10c:	00 80 f0 c1 	mulh_i s0, s0, s1
   4c110:	20 24 00 09 	ashr s1, s0, 9
   4c114:	00 7c 00 0a 	shr s0, s0, 31
   4c118:	01 00 50 c0 	add_i s0, s1, s0
   4c11c:	5e a0 00 a8 	load_32 s2, 40(sp)
   4c120:	20 00 00 12 	cmpgt_i s1, s0, 0
   4c124:	02 00 00 88 	store_32 s0, (s2)
   4c128:	01 04 00 01 	and s0, s1, 1
   4c12c:	fe b3 00 a8 	load_32 ra, 44(sp)
   4c130:	7e c3 00 a8 	load_32 s27, 48(sp)
   4c134:	5e d3 00 a8 	load_32 s26, 52(sp)
   4c138:	3e e3 00 a8 	load_32 s25, 56(sp)
   4c13c:	1e f3 00 a8 	load_32 s24, 60(sp)
   4c140:	de 03 01 05 	add_i sp, sp, 64
   4c144:	1f 00 00 f0 	ret

000000000004c148 S_StopSound:
   4c148:	de 03 ff 05 	add_i sp, sp, -64
   4c14c:	1e f3 00 88 	store_32 s24, 60(sp)
   4c150:	fe e3 00 88 	store_32 ra, 56(sp)
   4c154:	20 0c 00 4f 	movehi s1, 96
   4c158:	21 c0 06 00 	or s1, s1, 432
   4c15c:	21 00 00 a8 	load_32 s1, (s1)
   4c160:	41 04 00 14 	cmplt_i s2, s1, 1
   4c164:	02 02 00 f4 	bnz s2, 64 <S_StopSound+0x5c>
   4c168:	40 0c 00 4f 	movehi s2, 96
   4c16c:	60 00 00 0f 	move s3, 0
   4c170:	42 d0 55 00 	or s2, s2, 5492
   4c174:	42 00 00 a8 	load_32 s2, (s2)
   4c178:	83 30 00 07 	mull_i s4, s3, 12
   4c17c:	02 03 52 c0 	add_i s24, s2, s4
   4c180:	98 00 00 a8 	load_32 s4, (s24)
   4c184:	a4 00 00 f2 	bz s4, 20 <S_StopSound+0x50>
   4c188:	98 10 00 a8 	load_32 s4, 4(s24)
   4c18c:	84 00 10 c1 	cmpne_i s4, s4, s0
   4c190:	44 00 00 f4 	bnz s4, 8 <S_StopSound+0x50>
   4c194:	08 00 00 f6 	b 32 <S_StopSound+0x6c>
   4c198:	63 04 00 05 	add_i s3, s3, 1
   4c19c:	83 80 40 c1 	cmplt_i s4, s3, s1
   4c1a0:	c4 fe ff f5 	bnz s4, -40 <S_StopSound+0x30>
   4c1a4:	fe e3 00 a8 	load_32 ra, 56(sp)
   4c1a8:	1e f3 00 a8 	load_32 s24, 60(sp)
   4c1ac:	de 03 01 05 	add_i sp, sp, 64
   4c1b0:	1f 00 00 f0 	ret
   4c1b4:	18 20 00 a8 	load_32 s0, 8(s24)
   4c1b8:	fa 07 ff f9 	call -253976 <I_SoundIsPlaying>
   4c1bc:	80 00 00 f2 	bz s0, 16 <S_StopSound+0x84>
   4c1c0:	18 20 00 05 	add_i s0, s24, 8
   4c1c4:	00 00 00 a8 	load_32 s0, (s0)
   4c1c8:	f5 07 ff f9 	call -253996 <I_StopSound>
   4c1cc:	18 00 00 a8 	load_32 s0, (s24)
   4c1d0:	20 70 00 a8 	load_32 s1, 28(s0)
   4c1d4:	21 fc ff 05 	add_i s1, s1, -1
   4c1d8:	20 70 00 88 	store_32 s1, 28(s0)
   4c1dc:	00 00 00 0f 	move s0, 0
   4c1e0:	18 00 00 88 	store_32 s0, (s24)
   4c1e4:	fe e3 00 a8 	load_32 ra, 56(sp)
   4c1e8:	1e f3 00 a8 	load_32 s24, 60(sp)
   4c1ec:	de 03 01 05 	add_i sp, sp, 64
   4c1f0:	1f 00 00 f0 	ret

000000000004c1f4 S_getChannel:
   4c1f4:	de 03 ff 05 	add_i sp, sp, -64
   4c1f8:	1e f3 00 88 	store_32 s24, 60(sp)
   4c1fc:	3e e3 00 88 	store_32 s25, 56(sp)
   4c200:	5e d3 00 88 	store_32 s26, 52(sp)
   4c204:	7e c3 00 88 	store_32 s27, 48(sp)
   4c208:	fe b3 00 88 	store_32 ra, 44(sp)
   4c20c:	40 0c 00 4f 	movehi s2, 96
   4c210:	62 c3 06 00 	or s27, s2, 432
   4c214:	5b 00 00 a8 	load_32 s2, (s27)
   4c218:	80 80 f0 c0 	move s4, s1
   4c21c:	00 03 f0 c0 	move s24, s0
   4c220:	62 04 00 14 	cmplt_i s3, s2, 1
   4c224:	43 06 00 f4 	bnz s3, 200 <S_getChannel+0xf8>
   4c228:	00 0c 00 4f 	movehi s0, 96
   4c22c:	40 03 00 0f 	move s26, 0
   4c230:	00 d0 55 00 	or s0, s0, 5492
   4c234:	00 00 00 a8 	load_32 s0, (s0)
   4c238:	38 02 00 f2 	bz s24, 68 <S_getChannel+0x88>
   4c23c:	3a 30 00 07 	mull_i s1, s26, 12
   4c240:	20 83 50 c0 	add_i s25, s0, s1
   4c244:	39 00 00 a8 	load_32 s1, (s25)
   4c248:	41 02 00 f2 	bz s1, 72 <S_getChannel+0x9c>
   4c24c:	39 10 00 a8 	load_32 s1, 4(s25)
   4c250:	21 00 1c c1 	cmpne_i s1, s1, s24
   4c254:	41 00 00 f4 	bnz s1, 8 <S_getChannel+0x68>
   4c258:	42 00 00 f6 	b 264 <S_getChannel+0x16c>
   4c25c:	5a 07 00 05 	add_i s26, s26, 1
   4c260:	3a 00 41 c1 	cmplt_i s1, s26, s2
   4c264:	c1 fe ff f5 	bnz s1, -40 <S_getChannel+0x48>
   4c268:	0a 00 00 f6 	b 40 <S_getChannel+0x9c>
   4c26c:	5a 07 00 05 	add_i s26, s26, 1
   4c270:	3a 00 41 c1 	cmplt_i s1, s26, s2
   4c274:	41 00 00 f4 	bnz s1, 8 <S_getChannel+0x88>
   4c278:	06 00 00 f6 	b 24 <S_getChannel+0x9c>
   4c27c:	3a 30 00 07 	mull_i s1, s26, 12
   4c280:	20 80 50 c0 	add_i s1, s0, s1
   4c284:	21 00 00 a8 	load_32 s1, (s1)
   4c288:	41 00 00 f2 	bz s1, 8 <S_getChannel+0x9c>
   4c28c:	f8 ff ff f7 	b -32 <S_getChannel+0x78>
   4c290:	1a 00 11 c1 	cmpne_i s0, s26, s2
   4c294:	a0 08 00 f4 	bnz s0, 276 <S_getChannel+0x1b4>
   4c298:	02 04 00 14 	cmplt_i s0, s2, 1
   4c29c:	00 03 00 f4 	bnz s0, 96 <S_getChannel+0x108>
   4c2a0:	00 0c 00 4f 	movehi s0, 96
   4c2a4:	40 03 00 0f 	move s26, 0
   4c2a8:	00 d0 55 00 	or s0, s0, 5492
   4c2ac:	00 00 00 a8 	load_32 s0, (s0)
   4c2b0:	24 20 00 a8 	load_32 s1, 8(s4)
   4c2b4:	7a 30 00 07 	mull_i s3, s26, 12
   4c2b8:	60 80 51 c0 	add_i s3, s0, s3
   4c2bc:	63 00 00 a8 	load_32 s3, (s3)
   4c2c0:	63 20 00 a8 	load_32 s3, 8(s3)
   4c2c4:	63 80 30 c1 	cmpge_i s3, s3, s1
   4c2c8:	83 00 00 f4 	bnz s3, 16 <S_getChannel+0xe4>
   4c2cc:	5a 07 00 05 	add_i s26, s26, 1
   4c2d0:	7a 00 41 c1 	cmplt_i s3, s26, s2
   4c2d4:	03 ff ff f5 	bnz s3, -32 <S_getChannel+0xc0>
   4c2d8:	1a 00 01 c1 	cmpeq_i s0, s26, s2
   4c2dc:	40 00 00 f4 	bnz s0, 8 <S_getChannel+0xf0>
   4c2e0:	0a 00 00 f6 	b 40 <S_getChannel+0x114>
   4c2e4:	40 ff ff 0f 	move s26, -1
   4c2e8:	37 00 00 f6 	b 220 <S_getChannel+0x1d0>
   4c2ec:	40 03 00 0f 	move s26, 0
   4c2f0:	1a 00 11 c1 	cmpne_i s0, s26, s2
   4c2f4:	a0 05 00 f4 	bnz s0, 180 <S_getChannel+0x1b4>
   4c2f8:	e8 ff ff f7 	b -96 <S_getChannel+0xa4>
   4c2fc:	40 03 00 0f 	move s26, 0
   4c300:	1a 00 01 c1 	cmpeq_i s0, s26, s2
   4c304:	00 ff ff f5 	bnz s0, -32 <S_getChannel+0xf0>
   4c308:	00 0c 00 4f 	movehi s0, 96
   4c30c:	3a 30 00 07 	mull_i s1, s26, 12
   4c310:	00 d0 55 00 	or s0, s0, 5492
   4c314:	00 00 00 a8 	load_32 s0, (s0)
   4c318:	20 83 50 c0 	add_i s25, s0, s1
   4c31c:	19 00 00 a8 	load_32 s0, (s25)
   4c320:	40 04 00 f2 	bz s0, 136 <S_getChannel+0x1b4>
   4c324:	60 03 f2 c0 	move s27, s4
   4c328:	19 20 00 a8 	load_32 s0, 8(s25)
   4c32c:	9d 07 ff f9 	call -254348 <I_SoundIsPlaying>
   4c330:	80 00 00 f2 	bz s0, 16 <S_getChannel+0x14c>
   4c334:	19 20 00 05 	add_i s0, s25, 8
   4c338:	00 00 00 a8 	load_32 s0, (s0)
   4c33c:	98 07 ff f9 	call -254368 <I_StopSound>
   4c340:	19 00 00 a8 	load_32 s0, (s25)
   4c344:	20 70 00 a8 	load_32 s1, 28(s0)
   4c348:	21 fc ff 05 	add_i s1, s1, -1
   4c34c:	20 70 00 88 	store_32 s1, 28(s0)
   4c350:	00 00 00 0f 	move s0, 0
   4c354:	19 00 00 88 	store_32 s0, (s25)
   4c358:	80 80 fd c0 	move s4, s27
   4c35c:	13 00 00 f6 	b 76 <S_getChannel+0x1b4>
   4c360:	9e a0 00 88 	store_32 s4, 40(sp)
   4c364:	19 20 00 a8 	load_32 s0, 8(s25)
   4c368:	8e 07 ff f9 	call -254408 <I_SoundIsPlaying>
   4c36c:	80 00 00 f2 	bz s0, 16 <S_getChannel+0x188>
   4c370:	19 20 00 05 	add_i s0, s25, 8
   4c374:	00 00 00 a8 	load_32 s0, (s0)
   4c378:	89 07 ff f9 	call -254428 <I_StopSound>
   4c37c:	19 00 00 a8 	load_32 s0, (s25)
   4c380:	20 70 00 a8 	load_32 s1, 28(s0)
   4c384:	21 fc ff 05 	add_i s1, s1, -1
   4c388:	20 70 00 88 	store_32 s1, 28(s0)
   4c38c:	00 00 00 0f 	move s0, 0
   4c390:	19 00 00 88 	store_32 s0, (s25)
   4c394:	5b 00 00 a8 	load_32 s2, (s27)
   4c398:	9e a0 00 a8 	load_32 s4, 40(sp)
   4c39c:	1a 00 11 c1 	cmpne_i s0, s26, s2
   4c3a0:	40 00 00 f4 	bnz s0, 8 <S_getChannel+0x1b4>
   4c3a4:	bd ff ff f7 	b -268 <S_getChannel+0xa4>
   4c3a8:	00 0c 00 4f 	movehi s0, 96
   4c3ac:	3a 30 00 07 	mull_i s1, s26, 12
   4c3b0:	00 d0 55 00 	or s0, s0, 5492
   4c3b4:	00 00 00 a8 	load_32 s0, (s0)
   4c3b8:	00 80 50 c0 	add_i s0, s0, s1
   4c3bc:	80 00 00 88 	store_32 s4, (s0)
   4c3c0:	00 13 00 88 	store_32 s24, 4(s0)
   4c3c4:	00 00 fd c0 	move s0, s26
   4c3c8:	fe b3 00 a8 	load_32 ra, 44(sp)
   4c3cc:	7e c3 00 a8 	load_32 s27, 48(sp)
   4c3d0:	5e d3 00 a8 	load_32 s26, 52(sp)
   4c3d4:	3e e3 00 a8 	load_32 s25, 56(sp)
   4c3d8:	1e f3 00 a8 	load_32 s24, 60(sp)
   4c3dc:	de 03 01 05 	add_i sp, sp, 64
   4c3e0:	1f 00 00 f0 	ret

000000000004c3e4 S_StartSound:
   4c3e4:	de 03 ff 05 	add_i sp, sp, -64
   4c3e8:	fe f3 00 88 	store_32 ra, 60(sp)
   4c3ec:	54 04 00 4f 	movehi s2, 52
   4c3f0:	42 60 53 00 	or s2, s2, 5336
   4c3f4:	42 00 00 a8 	load_32 s2, (s2)
   4c3f8:	25 fe ff f9 	call -1900 <S_StartSoundAtVolume>
   4c3fc:	fe f3 00 a8 	load_32 ra, 60(sp)
   4c400:	de 03 01 05 	add_i sp, sp, 64
   4c404:	1f 00 00 f0 	ret

000000000004c408 S_PauseSound:
   4c408:	de 03 ff 05 	add_i sp, sp, -64
   4c40c:	1e f3 00 88 	store_32 s24, 60(sp)
   4c410:	fe e3 00 88 	store_32 ra, 56(sp)
   4c414:	00 0c 00 4f 	movehi s0, 96
   4c418:	20 0c 00 4f 	movehi s1, 96
   4c41c:	00 f0 55 00 	or s0, s0, 5500
   4c420:	01 e3 55 00 	or s24, s1, 5496
   4c424:	00 00 00 a8 	load_32 s0, (s0)
   4c428:	38 00 00 a0 	load_u8 s1, (s24)
   4c42c:	c0 00 00 f2 	bz s0, 24 <S_PauseSound+0x3c>
   4c430:	a1 00 00 f4 	bnz s1, 20 <S_PauseSound+0x3c>
   4c434:	00 30 00 a8 	load_32 s0, 12(s0)
   4c438:	64 07 ff f9 	call -254576 <I_PauseSong>
   4c43c:	00 04 00 0f 	move s0, 1
   4c440:	18 00 00 82 	store_8 s0, (s24)
   4c444:	fe e3 00 a8 	load_32 ra, 56(sp)
   4c448:	1e f3 00 a8 	load_32 s24, 60(sp)
   4c44c:	de 03 01 05 	add_i sp, sp, 64
   4c450:	1f 00 00 f0 	ret

000000000004c454 S_ResumeSound:
   4c454:	de 03 ff 05 	add_i sp, sp, -64
   4c458:	1e f3 00 88 	store_32 s24, 60(sp)
   4c45c:	fe e3 00 88 	store_32 ra, 56(sp)
   4c460:	00 0c 00 4f 	movehi s0, 96
   4c464:	20 0c 00 4f 	movehi s1, 96
   4c468:	00 f0 55 00 	or s0, s0, 5500
   4c46c:	01 e3 55 00 	or s24, s1, 5496
   4c470:	00 00 00 a8 	load_32 s0, (s0)
   4c474:	38 00 00 a0 	load_u8 s1, (s24)
   4c478:	e0 00 00 f2 	bz s0, 28 <S_ResumeSound+0x40>
   4c47c:	21 04 00 01 	and s1, s1, 1
   4c480:	a1 00 00 f2 	bz s1, 20 <S_ResumeSound+0x40>
   4c484:	00 30 00 a8 	load_32 s0, 12(s0)
   4c488:	51 07 ff f9 	call -254652 <I_ResumeSong>
   4c48c:	00 00 00 0f 	move s0, 0
   4c490:	18 00 00 82 	store_8 s0, (s24)
   4c494:	fe e3 00 a8 	load_32 ra, 56(sp)
   4c498:	1e f3 00 a8 	load_32 s24, 60(sp)
   4c49c:	de 03 01 05 	add_i sp, sp, 64
   4c4a0:	1f 00 00 f0 	ret

000000000004c4a4 S_UpdateSounds:
   4c4a4:	de 03 ff 05 	add_i sp, sp, -64
   4c4a8:	1e f3 00 88 	store_32 s24, 60(sp)
   4c4ac:	3e e3 00 88 	store_32 s25, 56(sp)
   4c4b0:	5e d3 00 88 	store_32 s26, 52(sp)
   4c4b4:	7e c3 00 88 	store_32 s27, 48(sp)
   4c4b8:	fe b3 00 88 	store_32 ra, 44(sp)
   4c4bc:	20 0c 00 4f 	movehi s1, 96
   4c4c0:	21 c0 06 00 	or s1, s1, 432
   4c4c4:	3e 70 00 88 	store_32 s1, 28(sp)
   4c4c8:	21 00 00 a8 	load_32 s1, (s1)
   4c4cc:	1e 60 00 88 	store_32 s0, 24(sp)
   4c4d0:	21 04 00 14 	cmplt_i s1, s1, 1
   4c4d4:	61 0a 00 f4 	bnz s1, 332 <S_UpdateSounds+0x17c>
   4c4d8:	00 0c 00 4f 	movehi s0, 96
   4c4dc:	34 04 00 4f 	movehi s1, 52
   4c4e0:	00 03 00 0f 	move s24, 0
   4c4e4:	00 d0 55 00 	or s0, s0, 5492
   4c4e8:	1e 80 00 88 	store_32 s0, 32(sp)
   4c4ec:	01 60 53 00 	or s0, s1, 5336
   4c4f0:	1e 50 00 88 	store_32 s0, 20(sp)
   4c4f4:	00 00 02 0f 	move s0, 128
   4c4f8:	1e 40 00 88 	store_32 s0, 16(sp)
   4c4fc:	1e a0 00 05 	add_i s0, sp, 40
   4c500:	1e 20 00 88 	store_32 s0, 8(sp)
   4c504:	1e 90 00 05 	add_i s0, sp, 36
   4c508:	1e 10 00 88 	store_32 s0, 4(sp)
   4c50c:	1e 33 00 88 	store_32 s24, 12(sp)
   4c510:	1e 80 00 a8 	load_32 s0, 32(sp)
   4c514:	38 33 00 07 	mull_i s25, s24, 12
   4c518:	00 00 00 a8 	load_32 s0, (s0)
   4c51c:	40 83 5c c0 	add_i s26, s0, s25
   4c520:	7a 03 00 a8 	load_32 s27, (s26)
   4c524:	5b 07 00 f2 	bz s27, 232 <S_UpdateSounds+0x168>
   4c528:	1a 20 00 a8 	load_32 s0, 8(s26)
   4c52c:	1d 07 ff f9 	call -254860 <I_SoundIsPlaying>
   4c530:	c0 04 00 f2 	bz s0, 152 <S_UpdateSounds+0x124>
   4c534:	1e 50 00 a8 	load_32 s0, 20(sp)
   4c538:	00 00 00 a8 	load_32 s0, (s0)
   4c53c:	1e a0 00 88 	store_32 s0, 40(sp)
   4c540:	5e 40 00 a8 	load_32 s2, 16(sp)
   4c544:	5e 90 00 88 	store_32 s2, 36(sp)
   4c548:	3b 30 00 a8 	load_32 s1, 12(s27)
   4c54c:	80 00 f1 c0 	move s4, s2
   4c550:	61 01 00 f2 	bz s1, 44 <S_UpdateSounds+0xd8>
   4c554:	9b 40 00 a8 	load_32 s4, 16(s27)
   4c558:	3b 50 00 a8 	load_32 s1, 20(s27)
   4c55c:	41 00 50 c0 	add_i s2, s1, s0
   4c560:	5e a0 00 88 	store_32 s2, 40(sp)
   4c564:	62 00 00 12 	cmpgt_i s3, s2, 0
   4c568:	43 00 00 f4 	bnz s3, 8 <S_UpdateSounds+0xcc>
   4c56c:	17 00 00 f6 	b 92 <S_UpdateSounds+0x124>
   4c570:	21 04 00 14 	cmplt_i s1, s1, 1
   4c574:	41 00 00 f4 	bnz s1, 8 <S_UpdateSounds+0xd8>
   4c578:	1e a0 00 88 	store_32 s0, 40(sp)
   4c57c:	3a 10 00 a8 	load_32 s1, 4(s26)
   4c580:	61 04 00 f2 	bz s1, 140 <S_UpdateSounds+0x168>
   4c584:	1e 60 00 a8 	load_32 s0, 24(sp)
   4c588:	01 00 00 c1 	cmpeq_i s0, s1, s0
   4c58c:	00 04 00 f4 	bnz s0, 128 <S_UpdateSounds+0x168>
   4c590:	60 03 f2 c0 	move s27, s4
   4c594:	1e 60 00 a8 	load_32 s0, 24(sp)
   4c598:	5e 20 00 a8 	load_32 s2, 8(sp)
   4c59c:	7e 10 00 a8 	load_32 s3, 4(sp)
   4c5a0:	79 fe ff f9 	call -1564 <S_AdjustSoundParams>
   4c5a4:	40 00 00 f4 	bnz s0, 8 <S_UpdateSounds+0x108>
   4c5a8:	08 00 00 f6 	b 32 <S_UpdateSounds+0x124>
   4c5ac:	1a 20 00 05 	add_i s0, s26, 8
   4c5b0:	00 00 00 a8 	load_32 s0, (s0)
   4c5b4:	3e a0 00 a8 	load_32 s1, 40(sp)
   4c5b8:	5e 90 00 a8 	load_32 s2, 36(sp)
   4c5bc:	60 80 fd c0 	move s3, s27
   4c5c0:	fc 06 ff f9 	call -254992 <I_UpdateSoundParams>
   4c5c4:	12 00 00 f6 	b 72 <S_UpdateSounds+0x168>
   4c5c8:	1e 80 00 a8 	load_32 s0, 32(sp)
   4c5cc:	00 00 00 a8 	load_32 s0, (s0)
   4c5d0:	20 83 5c c0 	add_i s25, s0, s25
   4c5d4:	19 00 00 a8 	load_32 s0, (s25)
   4c5d8:	a0 01 00 f2 	bz s0, 52 <S_UpdateSounds+0x168>
   4c5dc:	19 20 00 a8 	load_32 s0, 8(s25)
   4c5e0:	f0 06 ff f9 	call -255040 <I_SoundIsPlaying>
   4c5e4:	80 00 00 f2 	bz s0, 16 <S_UpdateSounds+0x150>
   4c5e8:	19 20 00 05 	add_i s0, s25, 8
   4c5ec:	00 00 00 a8 	load_32 s0, (s0)
   4c5f0:	eb 06 ff f9 	call -255060 <I_StopSound>
   4c5f4:	19 00 00 a8 	load_32 s0, (s25)
   4c5f8:	20 70 00 a8 	load_32 s1, 28(s0)
   4c5fc:	21 fc ff 05 	add_i s1, s1, -1
   4c600:	20 70 00 88 	store_32 s1, 28(s0)
   4c604:	1e 30 00 a8 	load_32 s0, 12(sp)
   4c608:	19 00 00 88 	store_32 s0, (s25)
   4c60c:	1e 70 00 a8 	load_32 s0, 28(sp)
   4c610:	18 07 00 05 	add_i s24, s24, 1
   4c614:	00 00 00 a8 	load_32 s0, (s0)
   4c618:	18 00 40 c1 	cmplt_i s0, s24, s0
   4c61c:	a0 f7 ff f5 	bnz s0, -268 <S_UpdateSounds+0x6c>
   4c620:	fe b3 00 a8 	load_32 ra, 44(sp)
   4c624:	7e c3 00 a8 	load_32 s27, 48(sp)
   4c628:	5e d3 00 a8 	load_32 s26, 52(sp)
   4c62c:	3e e3 00 a8 	load_32 s25, 56(sp)
   4c630:	1e f3 00 a8 	load_32 s24, 60(sp)
   4c634:	de 03 01 05 	add_i sp, sp, 64
   4c638:	1f 00 00 f0 	ret

000000000004c63c S_StartMusic:
   4c63c:	de 03 ff 05 	add_i sp, sp, -64
   4c640:	fe f3 00 88 	store_32 ra, 60(sp)
   4c644:	20 00 00 0f 	move s1, 0
   4c648:	58 fd ff f9 	call -2720 <S_ChangeMusic>
   4c64c:	fe f3 00 a8 	load_32 ra, 60(sp)
   4c650:	de 03 01 05 	add_i sp, sp, 64
   4c654:	1f 00 00 f0 	ret

000000000004c658 S_StopMusic:
   4c658:	de 03 fe 05 	add_i sp, sp, -128
   4c65c:	1e f3 01 88 	store_32 s24, 124(sp)
   4c660:	fe e3 01 88 	store_32 ra, 120(sp)
   4c664:	00 0c 00 4f 	movehi s0, 96
   4c668:	00 f3 55 00 	or s24, s0, 5500
   4c66c:	18 00 00 a8 	load_32 s0, (s24)
   4c670:	60 04 00 f2 	bz s0, 140 <S_StopMusic+0xa4>
   4c674:	20 0c 00 4f 	movehi s1, 96
   4c678:	21 e0 55 00 	or s1, s1, 5496
   4c67c:	21 00 00 a0 	load_u8 s1, (s1)
   4c680:	21 04 00 11 	cmpne_i s1, s1, 1
   4c684:	81 00 00 f4 	bnz s1, 16 <S_StopMusic+0x3c>
   4c688:	00 30 00 a8 	load_32 s0, 12(s0)
   4c68c:	d0 06 ff f9 	call -255168 <I_ResumeSong>
   4c690:	18 00 00 a8 	load_32 s0, (s24)
   4c694:	00 30 00 a8 	load_32 s0, 12(s0)
   4c698:	ce 06 ff f9 	call -255176 <I_StopSong>
   4c69c:	18 00 00 a8 	load_32 s0, (s24)
   4c6a0:	00 30 00 a8 	load_32 s0, 12(s0)
   4c6a4:	cc 06 ff f9 	call -255184 <I_UnRegisterSong>
   4c6a8:	18 00 00 a8 	load_32 s0, (s24)
   4c6ac:	4a 1c 00 4f 	movehi s2, 234
   4c6b0:	42 44 28 00 	or s2, s2, 2577
   4c6b4:	00 20 00 a8 	load_32 s0, 8(s0)
   4c6b8:	20 d0 ff a9 	load_32 s1, -12(s0)
   4c6bc:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4c6c0:	21 01 00 f4 	bnz s1, 36 <S_StopMusic+0x8c>
   4c6c4:	02 00 00 4f 	movehi s0, 2
   4c6c8:	20 e0 09 0f 	move s1, 632
   4c6cc:	3e 10 00 88 	store_32 s1, 4(sp)
   4c6d0:	00 78 09 00 	or s0, s0, 606
   4c6d4:	1e 00 00 88 	store_32 s0, (sp)
   4c6d8:	8b 06 ff f9 	call -255444 <I_Error>
   4c6dc:	18 00 00 a8 	load_32 s0, (s24)
   4c6e0:	00 20 00 a8 	load_32 s0, 8(s0)
   4c6e4:	20 94 01 0f 	move s1, 101
   4c6e8:	96 02 00 f8 	call 2648 <Z_ChangeTag2>
   4c6ec:	18 00 00 a8 	load_32 s0, (s24)
   4c6f0:	20 00 00 0f 	move s1, 0
   4c6f4:	20 20 00 88 	store_32 s1, 8(s0)
   4c6f8:	38 00 00 88 	store_32 s1, (s24)
   4c6fc:	fe e3 01 a8 	load_32 ra, 120(sp)
   4c700:	1e f3 01 a8 	load_32 s24, 124(sp)
   4c704:	de 03 02 05 	add_i sp, sp, 128
   4c708:	1f 00 00 f0 	ret

000000000004c70c Z_ClearZone:
   4c70c:	20 80 00 05 	add_i s1, s0, 32
   4c710:	20 60 00 88 	store_32 s1, 24(s0)
   4c714:	20 50 00 88 	store_32 s1, 20(s0)
   4c718:	40 10 00 05 	add_i s2, s0, 4
   4c71c:	00 20 00 88 	store_32 s0, 8(s0)
   4c720:	60 04 00 0f 	move s3, 1
   4c724:	60 30 00 88 	store_32 s3, 12(s0)
   4c728:	20 70 00 88 	store_32 s1, 28(s0)
   4c72c:	20 00 00 0f 	move s1, 0
   4c730:	40 c0 00 88 	store_32 s2, 48(s0)
   4c734:	40 d0 00 88 	store_32 s2, 52(s0)
   4c738:	20 90 00 88 	store_32 s1, 36(s0)
   4c73c:	20 00 00 a8 	load_32 s1, (s0)
   4c740:	21 80 ff 05 	add_i s1, s1, -32
   4c744:	20 80 00 88 	store_32 s1, 32(s0)
   4c748:	1f 00 00 f0 	ret

000000000004c74c Z_Init:
   4c74c:	de 03 ff 05 	add_i sp, sp, -64
   4c750:	fe f3 00 88 	store_32 ra, 60(sp)
   4c754:	1e e0 00 05 	add_i s0, sp, 56
   4c758:	33 06 ff f9 	call -255796 <I_ZoneBase>
   4c75c:	20 0c 00 4f 	movehi s1, 96
   4c760:	40 80 00 05 	add_i s2, s0, 32
   4c764:	60 04 00 0f 	move s3, 1
   4c768:	21 d0 06 00 	or s1, s1, 436
   4c76c:	01 00 00 88 	store_32 s0, (s1)
   4c770:	3e e0 00 a8 	load_32 s1, 56(sp)
   4c774:	20 00 00 88 	store_32 s1, (s0)
   4c778:	40 60 00 88 	store_32 s2, 24(s0)
   4c77c:	40 50 00 88 	store_32 s2, 20(s0)
   4c780:	00 20 00 88 	store_32 s0, 8(s0)
   4c784:	21 80 ff 05 	add_i s1, s1, -32
   4c788:	60 30 00 88 	store_32 s3, 12(s0)
   4c78c:	40 70 00 88 	store_32 s2, 28(s0)
   4c790:	40 10 00 05 	add_i s2, s0, 4
   4c794:	40 c0 00 88 	store_32 s2, 48(s0)
   4c798:	40 d0 00 88 	store_32 s2, 52(s0)
   4c79c:	40 00 00 0f 	move s2, 0
   4c7a0:	40 90 00 88 	store_32 s2, 36(s0)
   4c7a4:	20 80 00 88 	store_32 s1, 32(s0)
   4c7a8:	fe f3 00 a8 	load_32 ra, 60(sp)
   4c7ac:	de 03 01 05 	add_i sp, sp, 64
   4c7b0:	1f 00 00 f0 	ret

000000000004c7b4 Z_Free:
   4c7b4:	de 03 fe 05 	add_i sp, sp, -128
   4c7b8:	1e f3 01 88 	store_32 s24, 124(sp)
   4c7bc:	fe e3 01 88 	store_32 ra, 120(sp)
   4c7c0:	00 03 f0 c0 	move s24, s0
   4c7c4:	2a 1c 00 4f 	movehi s1, 234
   4c7c8:	18 d0 ff a9 	load_32 s0, -12(s24)
   4c7cc:	21 44 28 00 	or s1, s1, 2577
   4c7d0:	00 80 00 c1 	cmpeq_i s0, s0, s1
   4c7d4:	a0 00 00 f4 	bnz s0, 20 <Z_Free+0x34>
   4c7d8:	00 00 00 4f 	movehi s0, 0
   4c7dc:	00 28 43 00 	or s0, s0, 4298
   4c7e0:	1e 00 00 88 	store_32 s0, (sp)
   4c7e4:	48 06 ff f9 	call -255712 <I_Error>
   4c7e8:	18 b0 ff a9 	load_32 s0, -20(s24)
   4c7ec:	20 04 04 18 	cmplt_u s1, s0, 257
   4c7f0:	61 00 00 f4 	bnz s1, 12 <Z_Free+0x48>
   4c7f4:	20 00 00 0f 	move s1, 0
   4c7f8:	20 00 00 88 	store_32 s1, (s0)
   4c7fc:	00 00 00 0f 	move s0, 0
   4c800:	18 b0 ff 89 	store_32 s0, -20(s24)
   4c804:	18 c0 ff 89 	store_32 s0, -16(s24)
   4c808:	58 a0 ff 05 	add_i s2, s24, -24
   4c80c:	18 d0 ff 89 	store_32 s0, -12(s24)
   4c810:	18 f0 ff a9 	load_32 s0, -4(s24)
   4c814:	20 10 00 a8 	load_32 s1, 4(s0)
   4c818:	c1 00 00 f2 	bz s1, 24 <Z_Free+0x7c>
   4c81c:	38 e0 ff a9 	load_32 s1, -8(s24)
   4c820:	00 00 f1 c0 	move s0, s2
   4c824:	41 10 00 a8 	load_32 s2, 4(s1)
   4c828:	02 05 00 f4 	bnz s2, 160 <Z_Free+0x114>
   4c82c:	11 00 00 f6 	b 68 <Z_Free+0xbc>
   4c830:	38 a0 ff a9 	load_32 s1, -24(s24)
   4c834:	60 00 00 a8 	load_32 s3, (s0)
   4c838:	23 80 50 c0 	add_i s1, s3, s1
   4c83c:	20 00 00 88 	store_32 s1, (s0)
   4c840:	60 0c 00 4f 	movehi s3, 96
   4c844:	38 e0 ff a9 	load_32 s1, -8(s24)
   4c848:	20 40 00 88 	store_32 s1, 16(s0)
   4c84c:	63 d0 06 00 	or s3, s3, 436
   4c850:	01 50 00 88 	store_32 s0, 20(s1)
   4c854:	63 00 00 a8 	load_32 s3, (s3)
   4c858:	83 70 00 a8 	load_32 s4, 28(s3)
   4c85c:	44 00 11 c1 	cmpne_i s2, s4, s2
   4c860:	42 00 00 f4 	bnz s2, 8 <Z_Free+0xb4>
   4c864:	15 00 00 f6 	b 84 <Z_Free+0x104>
   4c868:	41 10 00 a8 	load_32 s2, 4(s1)
   4c86c:	e2 02 00 f4 	bnz s2, 92 <Z_Free+0x114>
   4c870:	41 00 00 a8 	load_32 s2, (s1)
   4c874:	60 00 00 a8 	load_32 s3, (s0)
   4c878:	43 00 51 c0 	add_i s2, s3, s2
   4c87c:	40 00 00 88 	store_32 s2, (s0)
   4c880:	40 0c 00 4f 	movehi s2, 96
   4c884:	61 40 00 a8 	load_32 s3, 16(s1)
   4c888:	60 40 00 88 	store_32 s3, 16(s0)
   4c88c:	42 d0 06 00 	or s2, s2, 436
   4c890:	03 50 00 88 	store_32 s0, 20(s3)
   4c894:	42 00 00 a8 	load_32 s2, (s2)
   4c898:	62 70 00 a8 	load_32 s3, 28(s2)
   4c89c:	21 80 11 c1 	cmpne_i s1, s1, s3
   4c8a0:	41 01 00 f4 	bnz s1, 40 <Z_Free+0x114>
   4c8a4:	02 70 00 88 	store_32 s0, 28(s2)
   4c8a8:	fe e3 01 a8 	load_32 ra, 120(sp)
   4c8ac:	1e f3 01 a8 	load_32 s24, 124(sp)
   4c8b0:	de 03 02 05 	add_i sp, sp, 128
   4c8b4:	1f 00 00 f0 	ret
   4c8b8:	03 70 00 88 	store_32 s0, 28(s3)
   4c8bc:	41 10 00 a8 	load_32 s2, 4(s1)
   4c8c0:	42 00 00 f4 	bnz s2, 8 <Z_Free+0x114>
   4c8c4:	eb ff ff f7 	b -84 <Z_Free+0xbc>
   4c8c8:	fe e3 01 a8 	load_32 ra, 120(sp)
   4c8cc:	1e f3 01 a8 	load_32 s24, 124(sp)
   4c8d0:	de 03 02 05 	add_i sp, sp, 128
   4c8d4:	1f 00 00 f0 	ret

000000000004c8d8 Z_Malloc:
   4c8d8:	de 03 fe 05 	add_i sp, sp, -128
   4c8dc:	1e f3 01 88 	store_32 s24, 124(sp)
   4c8e0:	3e e3 01 88 	store_32 s25, 120(sp)
   4c8e4:	5e d3 01 88 	store_32 s26, 116(sp)
   4c8e8:	7e c3 01 88 	store_32 s27, 112(sp)
   4c8ec:	fe b3 01 88 	store_32 ra, 108(sp)
   4c8f0:	60 0c 00 4f 	movehi s3, 96
   4c8f4:	00 6c 00 05 	add_i s0, s0, 27
   4c8f8:	63 d0 06 00 	or s3, s3, 436
   4c8fc:	7e 70 01 88 	store_32 s3, 92(sp)
   4c900:	63 00 00 a8 	load_32 s3, (s3)
   4c904:	63 70 00 a8 	load_32 s3, 28(s3)
   4c908:	63 53 00 a8 	load_32 s27, 20(s3)
   4c90c:	9b 10 00 a8 	load_32 s4, 4(s27)
   4c910:	5e 50 01 88 	store_32 s2, 84(sp)
   4c914:	3e 40 01 88 	store_32 s1, 80(sp)
   4c918:	24 00 00 10 	cmpeq_i s1, s4, 0
   4c91c:	41 00 00 f4 	bnz s1, 8 <Z_Malloc+0x4c>
   4c920:	60 83 f1 c0 	move s27, s3
   4c924:	80 f0 ff 01 	and s4, s0, -4
   4c928:	5b 53 00 a8 	load_32 s26, 20(s27)
   4c92c:	03 00 00 4f 	movehi s0, 3
   4c930:	2a 1c 00 4f 	movehi s1, 234
   4c934:	20 03 00 0f 	move s25, 0
   4c938:	00 40 00 00 	or s0, s0, 16
   4c93c:	1e 90 01 88 	store_32 s0, 100(sp)
   4c940:	00 00 00 4f 	movehi s0, 0
   4c944:	21 44 28 00 	or s1, s1, 2577
   4c948:	3e 80 01 88 	store_32 s1, 96(sp)
   4c94c:	00 28 43 00 	or s0, s0, 4298
   4c950:	1e 60 01 88 	store_32 s0, 88(sp)
   4c954:	00 83 fd c0 	move s24, s27
   4c958:	9e a0 01 88 	store_32 s4, 104(sp)
   4c95c:	51 00 00 f6 	b 324 <Z_Malloc+0x1c8>
   4c960:	9e 10 00 88 	store_32 s4, 4(sp)
   4c964:	1e 90 01 a8 	load_32 s0, 100(sp)
   4c968:	1e 00 00 88 	store_32 s0, (sp)
   4c96c:	e6 05 ff f9 	call -256104 <I_Error>
   4c970:	9e a0 01 a8 	load_32 s4, 104(sp)
   4c974:	1b 10 00 a8 	load_32 s0, 4(s27)
   4c978:	40 00 00 f2 	bz s0, 8 <Z_Malloc+0xa8>
   4c97c:	4e 00 00 f6 	b 312 <Z_Malloc+0x1dc>
   4c980:	7b 43 00 a8 	load_32 s27, 16(s27)
   4c984:	18 10 00 a8 	load_32 s0, 4(s24)
   4c988:	c0 08 00 f4 	bnz s0, 280 <Z_Malloc+0x1c8>
   4c98c:	51 00 00 f6 	b 324 <Z_Malloc+0x1f8>
   4c990:	18 53 00 a8 	load_32 s24, 20(s24)
   4c994:	3b 30 00 a8 	load_32 s1, 12(s27)
   4c998:	5e 80 01 a8 	load_32 s2, 96(sp)
   4c99c:	21 00 01 c1 	cmpeq_i s1, s1, s2
   4c9a0:	c1 00 00 f4 	bnz s1, 24 <Z_Malloc+0xe0>
   4c9a4:	1e 60 01 a8 	load_32 s0, 88(sp)
   4c9a8:	1e 00 00 88 	store_32 s0, (sp)
   4c9ac:	d6 05 ff f9 	call -256168 <I_Error>
   4c9b0:	9e a0 01 a8 	load_32 s4, 104(sp)
   4c9b4:	1b 10 00 a8 	load_32 s0, 4(s27)
   4c9b8:	20 04 04 18 	cmplt_u s1, s0, 257
   4c9bc:	41 00 00 f4 	bnz s1, 8 <Z_Malloc+0xec>
   4c9c0:	20 03 00 88 	store_32 s25, (s0)
   4c9c4:	3b 13 00 88 	store_32 s25, 4(s27)
   4c9c8:	3b 23 00 88 	store_32 s25, 8(s27)
   4c9cc:	3b 33 00 88 	store_32 s25, 12(s27)
   4c9d0:	3b 50 00 a8 	load_32 s1, 20(s27)
   4c9d4:	01 10 00 a8 	load_32 s0, 4(s1)
   4c9d8:	a0 00 00 f2 	bz s0, 20 <Z_Malloc+0x114>
   4c9dc:	1b 40 00 a8 	load_32 s0, 16(s27)
   4c9e0:	20 10 00 a8 	load_32 s1, 4(s0)
   4c9e4:	81 04 00 f4 	bnz s1, 144 <Z_Malloc+0x19c>
   4c9e8:	16 00 00 f6 	b 88 <Z_Malloc+0x168>
   4c9ec:	1b 00 00 a8 	load_32 s0, (s27)
   4c9f0:	41 00 00 a8 	load_32 s2, (s1)
   4c9f4:	02 00 50 c0 	add_i s0, s2, s0
   4c9f8:	01 00 00 88 	store_32 s0, (s1)
   4c9fc:	1b 40 00 a8 	load_32 s0, 16(s27)
   4ca00:	01 40 00 88 	store_32 s0, 16(s1)
   4ca04:	20 50 00 88 	store_32 s1, 20(s0)
   4ca08:	5e 70 01 a8 	load_32 s2, 92(sp)
   4ca0c:	42 00 00 a8 	load_32 s2, (s2)
   4ca10:	62 70 00 a8 	load_32 s3, 28(s2)
   4ca14:	63 80 1d c1 	cmpne_i s3, s3, s27
   4ca18:	43 00 00 f4 	bnz s3, 8 <Z_Malloc+0x148>
   4ca1c:	05 00 00 f6 	b 20 <Z_Malloc+0x158>
   4ca20:	60 83 f0 c0 	move s27, s1
   4ca24:	20 10 00 a8 	load_32 s1, 4(s0)
   4ca28:	61 02 00 f4 	bnz s1, 76 <Z_Malloc+0x19c>
   4ca2c:	05 00 00 f6 	b 20 <Z_Malloc+0x168>
   4ca30:	22 70 00 88 	store_32 s1, 28(s2)
   4ca34:	60 83 f0 c0 	move s27, s1
   4ca38:	20 10 00 a8 	load_32 s1, 4(s0)
   4ca3c:	c1 01 00 f4 	bnz s1, 56 <Z_Malloc+0x19c>
   4ca40:	20 00 00 a8 	load_32 s1, (s0)
   4ca44:	5b 00 00 a8 	load_32 s2, (s27)
   4ca48:	22 80 50 c0 	add_i s1, s2, s1
   4ca4c:	3b 00 00 88 	store_32 s1, (s27)
   4ca50:	20 40 00 a8 	load_32 s1, 16(s0)
   4ca54:	3b 40 00 88 	store_32 s1, 16(s27)
   4ca58:	61 53 00 88 	store_32 s27, 20(s1)
   4ca5c:	3e 70 01 a8 	load_32 s1, 92(sp)
   4ca60:	21 00 00 a8 	load_32 s1, (s1)
   4ca64:	41 70 00 a8 	load_32 s2, 28(s1)
   4ca68:	00 00 11 c1 	cmpne_i s0, s0, s2
   4ca6c:	40 00 00 f4 	bnz s0, 8 <Z_Malloc+0x19c>
   4ca70:	06 00 00 f6 	b 24 <Z_Malloc+0x1b0>
   4ca74:	18 43 00 a8 	load_32 s24, 16(s24)
   4ca78:	78 43 00 a8 	load_32 s27, 16(s24)
   4ca7c:	18 10 00 a8 	load_32 s0, 4(s24)
   4ca80:	00 01 00 f4 	bnz s0, 32 <Z_Malloc+0x1c8>
   4ca84:	13 00 00 f6 	b 76 <Z_Malloc+0x1f8>
   4ca88:	61 73 00 88 	store_32 s27, 28(s1)
   4ca8c:	18 43 00 a8 	load_32 s24, 16(s24)
   4ca90:	78 43 00 a8 	load_32 s27, 16(s24)
   4ca94:	18 10 00 a8 	load_32 s0, 4(s24)
   4ca98:	40 00 00 f4 	bnz s0, 8 <Z_Malloc+0x1c8>
   4ca9c:	0d 00 00 f6 	b 52 <Z_Malloc+0x1f8>
   4caa0:	1b 00 1d c1 	cmpne_i s0, s27, s26
   4caa4:	40 00 00 f4 	bnz s0, 8 <Z_Malloc+0x1d4>
   4caa8:	ae ff ff f7 	b -328 <Z_Malloc+0x88>
   4caac:	1b 10 00 a8 	load_32 s0, 4(s27)
   4cab0:	80 f6 ff f3 	bz s0, -304 <Z_Malloc+0xa8>
   4cab4:	3b 20 00 a8 	load_32 s1, 8(s27)
   4cab8:	21 8c 01 12 	cmpgt_i s1, s1, 99
   4cabc:	a1 f6 ff f5 	bnz s1, -300 <Z_Malloc+0xb8>
   4cac0:	7b 43 00 a8 	load_32 s27, 16(s27)
   4cac4:	00 83 fd c0 	move s24, s27
   4cac8:	18 10 00 a8 	load_32 s0, 4(s24)
   4cacc:	a0 fe ff f5 	bnz s0, -44 <Z_Malloc+0x1c8>
   4cad0:	18 00 00 a8 	load_32 s0, (s24)
   4cad4:	20 00 42 c1 	cmplt_i s1, s0, s4
   4cad8:	41 fe ff f5 	bnz s1, -56 <Z_Malloc+0x1c8>
   4cadc:	00 00 62 c0 	sub_i s0, s0, s4
   4cae0:	20 04 01 14 	cmplt_i s1, s0, 65
   4cae4:	61 01 00 f4 	bnz s1, 44 <Z_Malloc+0x238>
   4cae8:	38 00 52 c0 	add_i s1, s24, s4
   4caec:	01 00 00 88 	store_32 s0, (s1)
   4caf0:	21 13 00 88 	store_32 s25, 4(s1)
   4caf4:	21 23 00 88 	store_32 s25, 8(s1)
   4caf8:	01 53 00 88 	store_32 s24, 20(s1)
   4cafc:	18 40 00 a8 	load_32 s0, 16(s24)
   4cb00:	01 40 00 88 	store_32 s0, 16(s1)
   4cb04:	20 50 00 88 	store_32 s1, 20(s0)
   4cb08:	38 40 00 88 	store_32 s1, 16(s24)
   4cb0c:	98 00 00 88 	store_32 s4, (s24)
   4cb10:	3e 50 01 a8 	load_32 s1, 84(sp)
   4cb14:	c1 00 00 f2 	bz s1, 24 <Z_Malloc+0x254>
   4cb18:	38 10 00 88 	store_32 s1, 4(s24)
   4cb1c:	18 60 00 05 	add_i s0, s24, 24
   4cb20:	01 00 00 88 	store_32 s0, (s1)
   4cb24:	3e 43 01 a8 	load_32 s25, 80(sp)
   4cb28:	0a 00 00 f6 	b 40 <Z_Malloc+0x278>
   4cb2c:	3e 43 01 a8 	load_32 s25, 80(sp)
   4cb30:	19 90 01 14 	cmplt_i s0, s25, 100
   4cb34:	a0 00 00 f4 	bnz s0, 20 <Z_Malloc+0x270>
   4cb38:	02 00 00 4f 	movehi s0, 2
   4cb3c:	00 14 18 00 	or s0, s0, 1541
   4cb40:	1e 00 00 88 	store_32 s0, (sp)
   4cb44:	70 05 ff f9 	call -256576 <I_Error>
   4cb48:	00 08 00 0f 	move s0, 2
   4cb4c:	18 10 00 88 	store_32 s0, 4(s24)
   4cb50:	38 23 00 88 	store_32 s25, 8(s24)
   4cb54:	18 40 00 a8 	load_32 s0, 16(s24)
   4cb58:	3e 70 01 a8 	load_32 s1, 92(sp)
   4cb5c:	21 00 00 a8 	load_32 s1, (s1)
   4cb60:	01 70 00 88 	store_32 s0, 28(s1)
   4cb64:	18 60 00 05 	add_i s0, s24, 24
   4cb68:	3e 80 01 a8 	load_32 s1, 96(sp)
   4cb6c:	38 30 00 88 	store_32 s1, 12(s24)
   4cb70:	fe b3 01 a8 	load_32 ra, 108(sp)
   4cb74:	7e c3 01 a8 	load_32 s27, 112(sp)
   4cb78:	5e d3 01 a8 	load_32 s26, 116(sp)
   4cb7c:	3e e3 01 a8 	load_32 s25, 120(sp)
   4cb80:	1e f3 01 a8 	load_32 s24, 124(sp)
   4cb84:	de 03 02 05 	add_i sp, sp, 128
   4cb88:	1f 00 00 f0 	ret

000000000004cb8c Z_FreeTags:
   4cb8c:	de 03 fe 05 	add_i sp, sp, -128
   4cb90:	1e f3 01 88 	store_32 s24, 124(sp)
   4cb94:	3e e3 01 88 	store_32 s25, 120(sp)
   4cb98:	5e d3 01 88 	store_32 s26, 116(sp)
   4cb9c:	7e c3 01 88 	store_32 s27, 112(sp)
   4cba0:	fe b3 01 88 	store_32 ra, 108(sp)
   4cba4:	40 0c 00 4f 	movehi s2, 96
   4cba8:	82 d0 06 00 	or s4, s2, 436
   4cbac:	44 00 00 a8 	load_32 s2, (s4)
   4cbb0:	02 53 00 a8 	load_32 s24, 20(s2)
   4cbb4:	62 10 00 05 	add_i s3, s2, 4
   4cbb8:	40 83 f0 c0 	move s26, s1
   4cbbc:	78 80 01 c1 	cmpeq_i s3, s24, s3
   4cbc0:	e3 0a 00 f4 	bnz s3, 348 <Z_FreeTags+0x190>
   4cbc4:	6a 1c 00 4f 	movehi s3, 234
   4cbc8:	20 00 00 4f 	movehi s1, 0
   4cbcc:	00 01 00 0f 	move s8, 0
   4cbd0:	23 47 28 00 	or s25, s3, 2577
   4cbd4:	21 28 43 00 	or s1, s1, 4298
   4cbd8:	3e 70 01 88 	store_32 s1, 92(sp)
   4cbdc:	1e a0 01 88 	store_32 s0, 104(sp)
   4cbe0:	9e 90 01 88 	store_32 s4, 100(sp)
   4cbe4:	1e 81 01 88 	store_32 s8, 96(sp)
   4cbe8:	60 03 fc c0 	move s27, s24
   4cbec:	1b 43 00 a8 	load_32 s24, 16(s27)
   4cbf0:	db 10 00 a8 	load_32 s6, 4(s27)
   4cbf4:	a6 07 00 f2 	bz s6, 244 <Z_FreeTags+0x15c>
   4cbf8:	3b 20 00 a8 	load_32 s1, 8(s27)
   4cbfc:	61 00 40 c1 	cmplt_i s3, s1, s0
   4cc00:	43 07 00 f4 	bnz s3, 232 <Z_FreeTags+0x15c>
   4cc04:	21 00 2d c1 	cmpgt_i s1, s1, s26
   4cc08:	01 07 00 f4 	bnz s1, 224 <Z_FreeTags+0x15c>
   4cc0c:	3b 30 00 a8 	load_32 s1, 12(s27)
   4cc10:	21 80 0c c1 	cmpeq_i s1, s1, s25
   4cc14:	01 01 00 f4 	bnz s1, 32 <Z_FreeTags+0xa8>
   4cc18:	3e 70 01 a8 	load_32 s1, 92(sp)
   4cc1c:	3e 00 00 88 	store_32 s1, (sp)
   4cc20:	39 05 ff f9 	call -256796 <I_Error>
   4cc24:	1e 81 01 a8 	load_32 s8, 96(sp)
   4cc28:	1e a0 01 a8 	load_32 s0, 104(sp)
   4cc2c:	9e 90 01 a8 	load_32 s4, 100(sp)
   4cc30:	db 10 00 a8 	load_32 s6, 4(s27)
   4cc34:	26 04 04 18 	cmplt_u s1, s6, 257
   4cc38:	41 00 00 f4 	bnz s1, 8 <Z_FreeTags+0xb4>
   4cc3c:	06 01 00 88 	store_32 s8, (s6)
   4cc40:	1b 11 00 88 	store_32 s8, 4(s27)
   4cc44:	1b 21 00 88 	store_32 s8, 8(s27)
   4cc48:	1b 31 00 88 	store_32 s8, 12(s27)
   4cc4c:	3b 50 00 a8 	load_32 s1, 20(s27)
   4cc50:	41 10 00 a8 	load_32 s2, 4(s1)
   4cc54:	22 01 00 f2 	bz s2, 36 <Z_FreeTags+0xec>
   4cc58:	db 40 00 a8 	load_32 s6, 16(s27)
   4cc5c:	26 10 00 a8 	load_32 s1, 4(s6)
   4cc60:	c1 02 00 f2 	bz s1, 88 <Z_FreeTags+0x12c>
   4cc64:	44 00 00 a8 	load_32 s2, (s4)
   4cc68:	22 10 00 05 	add_i s1, s2, 4
   4cc6c:	38 80 10 c1 	cmpne_i s1, s24, s1
   4cc70:	c1 fb ff f5 	bnz s1, -136 <Z_FreeTags+0x5c>
   4cc74:	2a 00 00 f6 	b 168 <Z_FreeTags+0x190>
   4cc78:	7b 00 00 a8 	load_32 s3, (s27)
   4cc7c:	41 00 00 a8 	load_32 s2, (s1)
   4cc80:	42 80 51 c0 	add_i s2, s2, s3
   4cc84:	41 00 00 88 	store_32 s2, (s1)
   4cc88:	db 40 00 a8 	load_32 s6, 16(s27)
   4cc8c:	c1 40 00 88 	store_32 s6, 16(s1)
   4cc90:	26 50 00 88 	store_32 s1, 20(s6)
   4cc94:	44 00 00 a8 	load_32 s2, (s4)
   4cc98:	62 70 00 a8 	load_32 s3, 28(s2)
   4cc9c:	63 80 1d c1 	cmpne_i s3, s3, s27
   4cca0:	43 00 00 f4 	bnz s3, 8 <Z_FreeTags+0x11c>
   4cca4:	15 00 00 f6 	b 84 <Z_FreeTags+0x16c>
   4cca8:	60 83 f0 c0 	move s27, s1
   4ccac:	26 10 00 a8 	load_32 s1, 4(s6)
   4ccb0:	41 00 00 f2 	bz s1, 8 <Z_FreeTags+0x12c>
   4ccb4:	ec ff ff f7 	b -80 <Z_FreeTags+0xd8>
   4ccb8:	26 00 00 a8 	load_32 s1, (s6)
   4ccbc:	5b 00 00 a8 	load_32 s2, (s27)
   4ccc0:	22 80 50 c0 	add_i s1, s2, s1
   4ccc4:	3b 00 00 88 	store_32 s1, (s27)
   4ccc8:	26 40 00 a8 	load_32 s1, 16(s6)
   4cccc:	3b 40 00 88 	store_32 s1, 16(s27)
   4ccd0:	61 53 00 88 	store_32 s27, 20(s1)
   4ccd4:	44 00 00 a8 	load_32 s2, (s4)
   4ccd8:	22 70 00 a8 	load_32 s1, 28(s2)
   4ccdc:	26 80 10 c1 	cmpne_i s1, s6, s1
   4cce0:	41 00 00 f4 	bnz s1, 8 <Z_FreeTags+0x15c>
   4cce4:	0a 00 00 f6 	b 40 <Z_FreeTags+0x180>
   4cce8:	22 10 00 05 	add_i s1, s2, 4
   4ccec:	38 80 10 c1 	cmpne_i s1, s24, s1
   4ccf0:	c1 f7 ff f5 	bnz s1, -264 <Z_FreeTags+0x5c>
   4ccf4:	0a 00 00 f6 	b 40 <Z_FreeTags+0x190>
   4ccf8:	22 70 00 88 	store_32 s1, 28(s2)
   4ccfc:	60 83 f0 c0 	move s27, s1
   4cd00:	26 10 00 a8 	load_32 s1, 4(s6)
   4cd04:	a1 fd ff f3 	bz s1, -76 <Z_FreeTags+0x12c>
   4cd08:	d7 ff ff f7 	b -164 <Z_FreeTags+0xd8>
   4cd0c:	62 73 00 88 	store_32 s27, 28(s2)
   4cd10:	22 10 00 05 	add_i s1, s2, 4
   4cd14:	38 80 10 c1 	cmpne_i s1, s24, s1
   4cd18:	81 f6 ff f5 	bnz s1, -304 <Z_FreeTags+0x5c>
   4cd1c:	fe b3 01 a8 	load_32 ra, 108(sp)
   4cd20:	7e c3 01 a8 	load_32 s27, 112(sp)
   4cd24:	5e d3 01 a8 	load_32 s26, 116(sp)
   4cd28:	3e e3 01 a8 	load_32 s25, 120(sp)
   4cd2c:	1e f3 01 a8 	load_32 s24, 124(sp)
   4cd30:	de 03 02 05 	add_i sp, sp, 128
   4cd34:	1f 00 00 f0 	ret

000000000004cd38 Z_DumpHeap:
   4cd38:	de 03 fe 05 	add_i sp, sp, -128
   4cd3c:	1e f3 01 88 	store_32 s24, 124(sp)
   4cd40:	3e e3 01 88 	store_32 s25, 120(sp)
   4cd44:	5e d3 01 88 	store_32 s26, 116(sp)
   4cd48:	7e c3 01 88 	store_32 s27, 112(sp)
   4cd4c:	fe b3 01 88 	store_32 ra, 108(sp)
   4cd50:	40 0c 00 4f 	movehi s2, 96
   4cd54:	62 d3 06 00 	or s27, s2, 436
   4cd58:	5b 00 00 a8 	load_32 s2, (s27)
   4cd5c:	00 83 f0 c0 	move s24, s1
   4cd60:	20 00 00 4f 	movehi s1, 0
   4cd64:	20 03 f0 c0 	move s25, s0
   4cd68:	02 00 00 a8 	load_32 s0, (s2)
   4cd6c:	5e 20 00 88 	store_32 s2, 8(sp)
   4cd70:	1e 10 00 88 	store_32 s0, 4(sp)
   4cd74:	01 94 1c 00 	or s0, s1, 1829
   4cd78:	1e 00 00 88 	store_32 s0, (sp)
   4cd7c:	16 14 00 f8 	call 20568 <printf>
   4cd80:	02 00 00 4f 	movehi s0, 2
   4cd84:	1e a3 01 88 	store_32 s24, 104(sp)
   4cd88:	1e 23 00 88 	store_32 s24, 8(sp)
   4cd8c:	3e 13 00 88 	store_32 s25, 4(sp)
   4cd90:	00 00 65 00 	or s0, s0, 6464
   4cd94:	1e 00 00 88 	store_32 s0, (sp)
   4cd98:	0f 14 00 f8 	call 20540 <printf>
   4cd9c:	1b 00 00 a8 	load_32 s0, (s27)
   4cda0:	22 00 00 4f 	movehi s1, 2
   4cda4:	40 00 00 4f 	movehi s2, 0
   4cda8:	00 53 00 05 	add_i s24, s0, 20
   4cdac:	01 60 45 00 	or s0, s1, 4440
   4cdb0:	1e 60 01 88 	store_32 s0, 88(sp)
   4cdb4:	01 00 00 4f 	movehi s0, 1
   4cdb8:	20 00 00 4f 	movehi s1, 0
   4cdbc:	00 cc 12 00 	or s0, s0, 1203
   4cdc0:	1e 90 01 88 	store_32 s0, 100(sp)
   4cdc4:	01 80 0a 00 	or s0, s1, 672
   4cdc8:	1e 80 01 88 	store_32 s0, 96(sp)
   4cdcc:	02 ec 09 00 	or s0, s2, 635
   4cdd0:	1e 70 01 88 	store_32 s0, 92(sp)
   4cdd4:	15 00 00 f6 	b 84 <Z_DumpHeap+0xf0>
   4cdd8:	3a 00 00 a8 	load_32 s1, (s26)
   4cddc:	1a 43 00 05 	add_i s24, s26, 16
   4cde0:	3a 80 50 c0 	add_i s1, s26, s1
   4cde4:	21 00 00 c1 	cmpeq_i s1, s1, s0
   4cde8:	81 00 00 f4 	bnz s1, 16 <Z_DumpHeap+0xc0>
   4cdec:	1e 80 01 a8 	load_32 s0, 96(sp)
   4cdf0:	d7 14 00 f8 	call 21340 <puts>
   4cdf4:	18 00 00 a8 	load_32 s0, (s24)
   4cdf8:	00 50 00 a8 	load_32 s0, 20(s0)
   4cdfc:	00 00 0d c1 	cmpeq_i s0, s0, s26
   4ce00:	60 00 00 f4 	bnz s0, 12 <Z_DumpHeap+0xd4>
   4ce04:	1e 90 01 a8 	load_32 s0, 100(sp)
   4ce08:	d1 14 00 f8 	call 21316 <puts>
   4ce0c:	1a 10 00 a8 	load_32 s0, 4(s26)
   4ce10:	c0 00 00 f4 	bnz s0, 24 <Z_DumpHeap+0xf0>
   4ce14:	18 00 00 a8 	load_32 s0, (s24)
   4ce18:	00 10 00 a8 	load_32 s0, 4(s0)
   4ce1c:	60 00 00 f4 	bnz s0, 12 <Z_DumpHeap+0xf0>
   4ce20:	1e 60 01 a8 	load_32 s0, 88(sp)
   4ce24:	ca 14 00 f8 	call 21288 <puts>
   4ce28:	58 03 00 a8 	load_32 s26, (s24)
   4ce2c:	1a 20 00 a8 	load_32 s0, 8(s26)
   4ce30:	20 80 4c c1 	cmplt_i s1, s0, s25
   4ce34:	a1 01 00 f4 	bnz s1, 52 <Z_DumpHeap+0x130>
   4ce38:	3e a0 01 a8 	load_32 s1, 104(sp)
   4ce3c:	20 80 20 c1 	cmpgt_i s1, s0, s1
   4ce40:	41 01 00 f4 	bnz s1, 40 <Z_DumpHeap+0x130>
   4ce44:	3a 00 00 a8 	load_32 s1, (s26)
   4ce48:	5a 10 00 a8 	load_32 s2, 4(s26)
   4ce4c:	1e 40 00 88 	store_32 s0, 16(sp)
   4ce50:	5e 30 00 88 	store_32 s2, 12(sp)
   4ce54:	3e 20 00 88 	store_32 s1, 8(sp)
   4ce58:	5e 13 00 88 	store_32 s26, 4(sp)
   4ce5c:	1e 70 01 a8 	load_32 s0, 92(sp)
   4ce60:	1e 00 00 88 	store_32 s0, (sp)
   4ce64:	dc 13 00 f8 	call 20336 <printf>
   4ce68:	1a 40 00 a8 	load_32 s0, 16(s26)
   4ce6c:	3b 00 00 a8 	load_32 s1, (s27)
   4ce70:	21 10 00 05 	add_i s1, s1, 4
   4ce74:	20 80 00 c1 	cmpeq_i s1, s0, s1
   4ce78:	41 00 00 f4 	bnz s1, 8 <Z_DumpHeap+0x148>
   4ce7c:	d7 ff ff f7 	b -164 <Z_DumpHeap+0xa0>
   4ce80:	fe b3 01 a8 	load_32 ra, 108(sp)
   4ce84:	7e c3 01 a8 	load_32 s27, 112(sp)
   4ce88:	5e d3 01 a8 	load_32 s26, 116(sp)
   4ce8c:	3e e3 01 a8 	load_32 s25, 120(sp)
   4ce90:	1e f3 01 a8 	load_32 s24, 124(sp)
   4ce94:	de 03 02 05 	add_i sp, sp, 128
   4ce98:	1f 00 00 f0 	ret

000000000004ce9c Z_FileDumpHeap:
   4ce9c:	de 03 fe 05 	add_i sp, sp, -128
   4cea0:	1e f3 01 88 	store_32 s24, 124(sp)
   4cea4:	3e e3 01 88 	store_32 s25, 120(sp)
   4cea8:	5e d3 01 88 	store_32 s26, 116(sp)
   4ceac:	7e c3 01 88 	store_32 s27, 112(sp)
   4ceb0:	fe b3 01 88 	store_32 ra, 108(sp)
   4ceb4:	20 0c 00 4f 	movehi s1, 96
   4ceb8:	42 00 00 4f 	movehi s2, 2
   4cebc:	41 d3 06 00 	or s26, s1, 436
   4cec0:	3a 00 00 a8 	load_32 s1, (s26)
   4cec4:	00 03 f0 c0 	move s24, s0
   4cec8:	01 00 00 a8 	load_32 s0, (s1)
   4cecc:	3e 30 00 88 	store_32 s1, 12(sp)
   4ced0:	1e 20 00 88 	store_32 s0, 8(sp)
   4ced4:	02 34 26 00 	or s0, s2, 2445
   4ced8:	1e 10 00 88 	store_32 s0, 4(sp)
   4cedc:	1e 03 00 88 	store_32 s24, (sp)
   4cee0:	97 15 00 f8 	call 22108 <fprintf>
   4cee4:	1a 00 00 a8 	load_32 s0, (s26)
   4cee8:	20 53 00 a8 	load_32 s25, 20(s0)
   4ceec:	19 00 00 a8 	load_32 s0, (s25)
   4cef0:	39 10 00 a8 	load_32 s1, 4(s25)
   4cef4:	59 20 00 a8 	load_32 s2, 8(s25)
   4cef8:	5e 50 00 88 	store_32 s2, 20(sp)
   4cefc:	3e 40 00 88 	store_32 s1, 16(sp)
   4cf00:	22 00 00 4f 	movehi s1, 2
   4cf04:	1e 30 00 88 	store_32 s0, 12(sp)
   4cf08:	3e 23 00 88 	store_32 s25, 8(sp)
   4cf0c:	01 e0 18 00 	or s0, s1, 1592
   4cf10:	1e 70 01 88 	store_32 s0, 92(sp)
   4cf14:	1e 10 00 88 	store_32 s0, 4(sp)
   4cf18:	1e 03 00 88 	store_32 s24, (sp)
   4cf1c:	88 15 00 f8 	call 22048 <fprintf>
   4cf20:	19 40 00 a8 	load_32 s0, 16(s25)
   4cf24:	5e 83 01 88 	store_32 s26, 96(sp)
   4cf28:	3a 00 00 a8 	load_32 s1, (s26)
   4cf2c:	21 10 00 05 	add_i s1, s1, 4
   4cf30:	20 80 00 c1 	cmpeq_i s1, s0, s1
   4cf34:	41 08 00 f4 	bnz s1, 264 <Z_FileDumpHeap+0x1a0>
   4cf38:	22 00 00 4f 	movehi s1, 2
   4cf3c:	40 04 00 0f 	move s2, 1
   4cf40:	79 13 00 05 	add_i s27, s25, 4
   4cf44:	21 d0 44 00 	or s1, s1, 4404
   4cf48:	3e 40 01 88 	store_32 s1, 80(sp)
   4cf4c:	20 8c 00 0f 	move s1, 35
   4cf50:	3e 30 01 88 	store_32 s1, 76(sp)
   4cf54:	20 00 00 4f 	movehi s1, 0
   4cf58:	5e a0 01 88 	store_32 s2, 104(sp)
   4cf5c:	59 43 00 05 	add_i s26, s25, 16
   4cf60:	40 00 00 4f 	movehi s2, 0
   4cf64:	21 18 31 00 	or s1, s1, 3142
   4cf68:	3e 60 01 88 	store_32 s1, 88(sp)
   4cf6c:	20 c0 00 0f 	move s1, 48
   4cf70:	3e 90 01 88 	store_32 s1, 100(sp)
   4cf74:	22 c4 43 00 	or s1, s2, 4337
   4cf78:	3e 50 01 88 	store_32 s1, 84(sp)
   4cf7c:	39 00 00 a8 	load_32 s1, (s25)
   4cf80:	39 80 50 c0 	add_i s1, s25, s1
   4cf84:	21 00 00 c1 	cmpeq_i s1, s1, s0
   4cf88:	e1 00 00 f4 	bnz s1, 28 <Z_FileDumpHeap+0x108>
   4cf8c:	1e 50 01 a8 	load_32 s0, 84(sp)
   4cf90:	3e 90 01 a8 	load_32 s1, 100(sp)
   4cf94:	5e a0 01 a8 	load_32 s2, 104(sp)
   4cf98:	60 00 fc c0 	move s3, s24
   4cf9c:	f7 14 00 f8 	call 21468 <fwrite>
   4cfa0:	1a 00 00 a8 	load_32 s0, (s26)
   4cfa4:	00 50 00 a8 	load_32 s0, 20(s0)
   4cfa8:	00 80 0c c1 	cmpeq_i s0, s0, s25
   4cfac:	c0 00 00 f4 	bnz s0, 24 <Z_FileDumpHeap+0x128>
   4cfb0:	1e 60 01 a8 	load_32 s0, 88(sp)
   4cfb4:	3e 90 01 a8 	load_32 s1, 100(sp)
   4cfb8:	5e a0 01 a8 	load_32 s2, 104(sp)
   4cfbc:	60 00 fc c0 	move s3, s24
   4cfc0:	ee 14 00 f8 	call 21432 <fwrite>
   4cfc4:	1b 00 00 a8 	load_32 s0, (s27)
   4cfc8:	20 01 00 f4 	bnz s0, 36 <Z_FileDumpHeap+0x150>
   4cfcc:	1a 00 00 a8 	load_32 s0, (s26)
   4cfd0:	00 10 00 a8 	load_32 s0, 4(s0)
   4cfd4:	c0 00 00 f4 	bnz s0, 24 <Z_FileDumpHeap+0x150>
   4cfd8:	1e 40 01 a8 	load_32 s0, 80(sp)
   4cfdc:	3e 30 01 a8 	load_32 s1, 76(sp)
   4cfe0:	5e a0 01 a8 	load_32 s2, 104(sp)
   4cfe4:	60 00 fc c0 	move s3, s24
   4cfe8:	e4 14 00 f8 	call 21392 <fwrite>
   4cfec:	3a 03 00 a8 	load_32 s25, (s26)
   4cff0:	19 00 00 a8 	load_32 s0, (s25)
   4cff4:	79 13 00 05 	add_i s27, s25, 4
   4cff8:	39 10 00 a8 	load_32 s1, 4(s25)
   4cffc:	59 20 00 a8 	load_32 s2, 8(s25)
   4d000:	5e 50 00 88 	store_32 s2, 20(sp)
   4d004:	3e 40 00 88 	store_32 s1, 16(sp)
   4d008:	1e 30 00 88 	store_32 s0, 12(sp)
   4d00c:	3e 23 00 88 	store_32 s25, 8(sp)
   4d010:	1e 70 01 a8 	load_32 s0, 92(sp)
   4d014:	1e 10 00 88 	store_32 s0, 4(sp)
   4d018:	1e 03 00 88 	store_32 s24, (sp)
   4d01c:	48 15 00 f8 	call 21792 <fprintf>
   4d020:	19 40 00 a8 	load_32 s0, 16(s25)
   4d024:	59 43 00 05 	add_i s26, s25, 16
   4d028:	3e 80 01 a8 	load_32 s1, 96(sp)
   4d02c:	21 00 00 a8 	load_32 s1, (s1)
   4d030:	21 10 00 05 	add_i s1, s1, 4
   4d034:	20 80 10 c1 	cmpne_i s1, s0, s1
   4d038:	21 fa ff f5 	bnz s1, -188 <Z_FileDumpHeap+0xe0>
   4d03c:	fe b3 01 a8 	load_32 ra, 108(sp)
   4d040:	7e c3 01 a8 	load_32 s27, 112(sp)
   4d044:	5e d3 01 a8 	load_32 s26, 116(sp)
   4d048:	3e e3 01 a8 	load_32 s25, 120(sp)
   4d04c:	1e f3 01 a8 	load_32 s24, 124(sp)
   4d050:	de 03 02 05 	add_i sp, sp, 128
   4d054:	1f 00 00 f0 	ret

000000000004d058 Z_CheckHeap:
   4d058:	de 03 fe 05 	add_i sp, sp, -128
   4d05c:	1e f3 01 88 	store_32 s24, 124(sp)
   4d060:	3e e3 01 88 	store_32 s25, 120(sp)
   4d064:	5e d3 01 88 	store_32 s26, 116(sp)
   4d068:	7e c3 01 88 	store_32 s27, 112(sp)
   4d06c:	fe b3 01 88 	store_32 ra, 108(sp)
   4d070:	00 0c 00 4f 	movehi s0, 96
   4d074:	00 d3 06 00 	or s24, s0, 436
   4d078:	38 00 00 a8 	load_32 s1, (s24)
   4d07c:	41 53 00 a8 	load_32 s26, 20(s1)
   4d080:	21 10 00 05 	add_i s1, s1, 4
   4d084:	1a 40 00 a8 	load_32 s0, 16(s26)
   4d088:	20 80 00 c1 	cmpeq_i s1, s0, s1
   4d08c:	c1 04 00 f4 	bnz s1, 152 <Z_CheckHeap+0xcc>
   4d090:	61 00 00 4f 	movehi s3, 1
   4d094:	20 00 00 4f 	movehi s1, 0
   4d098:	7a 43 00 05 	add_i s27, s26, 16
   4d09c:	23 db 28 00 	or s25, s3, 2614
   4d0a0:	40 00 00 4f 	movehi s2, 0
   4d0a4:	21 9c 3b 00 	or s1, s1, 3815
   4d0a8:	3e 90 01 88 	store_32 s1, 100(sp)
   4d0ac:	22 f8 4c 00 	or s1, s2, 4926
   4d0b0:	3e a0 01 88 	store_32 s1, 104(sp)
   4d0b4:	3a 00 00 a8 	load_32 s1, (s26)
   4d0b8:	3a 80 50 c0 	add_i s1, s26, s1
   4d0bc:	21 00 00 c1 	cmpeq_i s1, s1, s0
   4d0c0:	81 00 00 f4 	bnz s1, 16 <Z_CheckHeap+0x78>
   4d0c4:	3e 03 00 88 	store_32 s25, (sp)
   4d0c8:	0f 04 ff f9 	call -257988 <I_Error>
   4d0cc:	1b 00 00 a8 	load_32 s0, (s27)
   4d0d0:	00 50 00 a8 	load_32 s0, 20(s0)
   4d0d4:	00 00 0d c1 	cmpeq_i s0, s0, s26
   4d0d8:	80 00 00 f4 	bnz s0, 16 <Z_CheckHeap+0x90>
   4d0dc:	1e a0 01 a8 	load_32 s0, 104(sp)
   4d0e0:	1e 00 00 88 	store_32 s0, (sp)
   4d0e4:	08 04 ff f9 	call -258016 <I_Error>
   4d0e8:	1a 10 00 a8 	load_32 s0, 4(s26)
   4d0ec:	e0 00 00 f4 	bnz s0, 28 <Z_CheckHeap+0xb0>
   4d0f0:	1b 00 00 a8 	load_32 s0, (s27)
   4d0f4:	00 10 00 a8 	load_32 s0, 4(s0)
   4d0f8:	80 00 00 f4 	bnz s0, 16 <Z_CheckHeap+0xb0>
   4d0fc:	1e 90 01 a8 	load_32 s0, 100(sp)
   4d100:	1e 00 00 88 	store_32 s0, (sp)
   4d104:	00 04 ff f9 	call -258048 <I_Error>
   4d108:	5b 03 00 a8 	load_32 s26, (s27)
   4d10c:	1a 40 00 a8 	load_32 s0, 16(s26)
   4d110:	7a 43 00 05 	add_i s27, s26, 16
   4d114:	38 00 00 a8 	load_32 s1, (s24)
   4d118:	21 10 00 05 	add_i s1, s1, 4
   4d11c:	20 80 10 c1 	cmpne_i s1, s0, s1
   4d120:	a1 fc ff f5 	bnz s1, -108 <Z_CheckHeap+0x5c>
   4d124:	fe b3 01 a8 	load_32 ra, 108(sp)
   4d128:	7e c3 01 a8 	load_32 s27, 112(sp)
   4d12c:	5e d3 01 a8 	load_32 s26, 116(sp)
   4d130:	3e e3 01 a8 	load_32 s25, 120(sp)
   4d134:	1e f3 01 a8 	load_32 s24, 124(sp)
   4d138:	de 03 02 05 	add_i sp, sp, 128
   4d13c:	1f 00 00 f0 	ret

000000000004d140 Z_ChangeTag2:
   4d140:	de 03 fe 05 	add_i sp, sp, -128
   4d144:	1e f3 01 88 	store_32 s24, 124(sp)
   4d148:	3e e3 01 88 	store_32 s25, 120(sp)
   4d14c:	fe d3 01 88 	store_32 ra, 116(sp)
   4d150:	00 03 f0 c0 	move s24, s0
   4d154:	4a 1c 00 4f 	movehi s2, 234
   4d158:	18 d0 ff a9 	load_32 s0, -12(s24)
   4d15c:	20 83 f0 c0 	move s25, s1
   4d160:	42 44 28 00 	or s2, s2, 2577
   4d164:	00 00 01 c1 	cmpeq_i s0, s0, s2
   4d168:	a0 00 00 f4 	bnz s0, 20 <Z_ChangeTag2+0x3c>
   4d16c:	01 00 00 4f 	movehi s0, 1
   4d170:	00 64 00 00 	or s0, s0, 25
   4d174:	1e 00 00 88 	store_32 s0, (sp)
   4d178:	e3 03 ff f9 	call -258164 <I_Error>
   4d17c:	19 90 01 14 	cmplt_i s0, s25, 100
   4d180:	00 01 00 f4 	bnz s0, 32 <Z_ChangeTag2+0x60>
   4d184:	18 b0 ff a9 	load_32 s0, -20(s24)
   4d188:	00 fc 03 16 	cmpgt_u s0, s0, 255
   4d18c:	a0 00 00 f4 	bnz s0, 20 <Z_ChangeTag2+0x60>
   4d190:	03 00 00 4f 	movehi s0, 3
   4d194:	00 24 0f 00 	or s0, s0, 969
   4d198:	1e 00 00 88 	store_32 s0, (sp)
   4d19c:	da 03 ff f9 	call -258200 <I_Error>
   4d1a0:	38 c3 ff 89 	store_32 s25, -16(s24)
   4d1a4:	fe d3 01 a8 	load_32 ra, 116(sp)
   4d1a8:	3e e3 01 a8 	load_32 s25, 120(sp)
   4d1ac:	1e f3 01 a8 	load_32 s24, 124(sp)
   4d1b0:	de 03 02 05 	add_i sp, sp, 128
   4d1b4:	1f 00 00 f0 	ret

000000000004d1b8 Z_FreeMemory:
   4d1b8:	00 0c 00 4f 	movehi s0, 96
   4d1bc:	00 d0 06 00 	or s0, s0, 436
   4d1c0:	00 00 00 a8 	load_32 s0, (s0)
   4d1c4:	20 50 00 a8 	load_32 s1, 20(s0)
   4d1c8:	40 10 00 05 	add_i s2, s0, 4
   4d1cc:	01 00 01 c1 	cmpeq_i s0, s1, s2
   4d1d0:	a0 01 00 f4 	bnz s0, 52 <Z_FreeMemory+0x4c>
   4d1d4:	00 00 00 0f 	move s0, 0
   4d1d8:	61 10 00 a8 	load_32 s3, 4(s1)
   4d1dc:	83 00 00 f2 	bz s3, 16 <Z_FreeMemory+0x34>
   4d1e0:	61 20 00 a8 	load_32 s3, 8(s1)
   4d1e4:	63 90 01 14 	cmplt_i s3, s3, 100
   4d1e8:	63 00 00 f4 	bnz s3, 12 <Z_FreeMemory+0x3c>
   4d1ec:	61 00 00 a8 	load_32 s3, (s1)
   4d1f0:	03 00 50 c0 	add_i s0, s3, s0
   4d1f4:	21 40 00 a8 	load_32 s1, 16(s1)
   4d1f8:	61 00 11 c1 	cmpne_i s3, s1, s2
   4d1fc:	e3 fe ff f5 	bnz s3, -36 <Z_FreeMemory+0x20>
   4d200:	1f 00 00 f0 	ret
   4d204:	00 00 00 0f 	move s0, 0
   4d208:	1f 00 00 f0 	ret

000000000004d20c main:
   4d20c:	de 03 ff 05 	add_i sp, sp, -64
   4d210:	fe f3 00 88 	store_32 ra, 60(sp)
   4d214:	5b 04 00 4f 	movehi s2, 59
   4d218:	7b 04 00 4f 	movehi s3, 59
   4d21c:	42 70 26 00 	or s2, s2, 2460
   4d220:	63 80 26 00 	or s3, s3, 2464
   4d224:	02 00 00 88 	store_32 s0, (s2)
   4d228:	23 00 00 88 	store_32 s1, (s3)
   4d22c:	29 10 ff f9 	call -245596 <D_DoomMain>
   4d230:	00 00 00 0f 	move s0, 0
   4d234:	fe f3 00 a8 	load_32 ra, 60(sp)
   4d238:	de 03 01 05 	add_i sp, sp, 64
   4d23c:	1f 00 00 f0 	ret

000000000004d240 malloc:
   4d240:	de 03 ff 05 	add_i sp, sp, -64
   4d244:	1e f3 00 88 	store_32 s24, 60(sp)
   4d248:	3e e3 00 88 	store_32 s25, 56(sp)
   4d24c:	5e d3 00 88 	store_32 s26, 52(sp)
   4d250:	7e c3 00 88 	store_32 s27, 48(sp)
   4d254:	fe b3 00 88 	store_32 ra, 44(sp)
   4d258:	20 0c 00 4f 	movehi s1, 96
   4d25c:	21 03 56 00 	or s25, s1, 5504
   4d260:	39 00 00 a8 	load_32 s1, (s25)
   4d264:	61 05 00 f4 	bnz s1, 172 <malloc+0xd0>
   4d268:	20 0c 00 4f 	movehi s1, 96
   4d26c:	40 04 00 0f 	move s2, 1
   4d270:	21 d0 5d 00 	or s1, s1, 6004
   4d274:	61 00 00 aa 	load_sync s3, (s1)
   4d278:	80 00 f1 c0 	move s4, s2
   4d27c:	81 00 00 8a 	store_sync s4, (s1)  
   4d280:	a4 ff ff f3 	bz s4, -12 <malloc+0x34>
   4d284:	03 01 00 f2 	bz s3, 32 <malloc+0x64>
   4d288:	61 00 00 a8 	load_32 s3, (s1)
   4d28c:	e3 ff ff f5 	bnz s3, -4 <malloc+0x48>
   4d290:	61 00 00 aa 	load_sync s3, (s1)
   4d294:	80 00 f1 c0 	move s4, s2
   4d298:	81 00 00 8a 	store_sync s4, (s1)  
   4d29c:	a4 ff ff f3 	bz s4, -12 <malloc+0x50>
   4d2a0:	43 ff ff f5 	bnz s3, -24 <malloc+0x48>
   4d2a4:	59 00 00 a8 	load_32 s2, (s25)
   4d2a8:	a2 02 00 f4 	bnz s2, 84 <malloc+0xbc>
   4d2ac:	40 00 40 0f 	move s2, 4096
   4d2b0:	59 20 00 88 	store_32 s2, 8(s25)
   4d2b4:	59 10 00 88 	store_32 s2, 4(s25)
   4d2b8:	40 fc ff 0f 	move s2, -1
   4d2bc:	59 30 00 88 	store_32 s2, 12(s25)
   4d2c0:	40 0c 00 4f 	movehi s2, 96
   4d2c4:	60 20 00 4f 	movehi s3, 256
   4d2c8:	79 40 00 88 	store_32 s3, 16(s25)
   4d2cc:	60 08 00 0f 	move s3, 2
   4d2d0:	79 50 00 88 	store_32 s3, 20(s25)
   4d2d4:	42 60 56 00 	or s2, s2, 5528
   4d2d8:	aa 54 55 4f 	movehi s5, 174762
   4d2dc:	80 00 00 0f 	move s4, 0
   4d2e0:	62 f0 06 88 	store_32 s3, 444(s2)
   4d2e4:	7e 90 00 05 	add_i s3, sp, 36
   4d2e8:	82 00 07 88 	store_32 s4, 448(s2)
   4d2ec:	45 60 55 00 	or s2, s5, 5464
   4d2f0:	63 c0 ff 01 	and s3, s3, -16
   4d2f4:	43 00 31 c0 	xor s2, s3, s2
   4d2f8:	59 00 00 88 	store_32 s2, (s25)
   4d2fc:	40 00 00 0f 	move s2, 0
   4d300:	61 00 00 aa 	load_sync s3, (s1)
   4d304:	60 00 f1 c0 	move s3, s2
   4d308:	61 00 00 8a 	store_sync s3, (s1)  
   4d30c:	a3 ff ff f3 	bz s3, -12 <malloc+0xc0>
   4d310:	20 0c 00 4f 	movehi s1, 96
   4d314:	01 63 56 00 	or s24, s1, 5528
   4d318:	38 f0 06 a0 	load_u8 s1, 444(s24)
   4d31c:	21 08 00 01 	and s1, s1, 2
   4d320:	e1 01 00 f2 	bz s1, 60 <malloc+0x11c>
   4d324:	38 00 07 05 	add_i s1, s24, 448
   4d328:	40 04 00 0f 	move s2, 1
   4d32c:	61 00 00 aa 	load_sync s3, (s1)
   4d330:	80 00 f1 c0 	move s4, s2
   4d334:	81 00 00 8a 	store_sync s4, (s1)  
   4d338:	a4 ff ff f3 	bz s4, -12 <malloc+0xec>
   4d33c:	03 01 00 f2 	bz s3, 32 <malloc+0x11c>
   4d340:	78 00 07 a8 	load_32 s3, 448(s24)
   4d344:	e3 ff ff f5 	bnz s3, -4 <malloc+0x100>
   4d348:	61 00 00 aa 	load_sync s3, (s1)
   4d34c:	80 00 f1 c0 	move s4, s2
   4d350:	81 00 00 8a 	store_sync s4, (s1)  
   4d354:	a4 ff ff f3 	bz s4, -12 <malloc+0x108>
   4d358:	43 ff ff f5 	bnz s3, -24 <malloc+0x100>
   4d35c:	20 d0 03 16 	cmpgt_u s1, s0, 244
   4d360:	c1 00 00 f4 	bnz s1, 24 <malloc+0x138>
   4d364:	20 2c 00 18 	cmplt_u s1, s0, 11
   4d368:	21 01 00 f4 	bnz s1, 36 <malloc+0x14c>
   4d36c:	00 2c 00 05 	add_i s0, s0, 11
   4d370:	40 e3 ff 01 	and s26, s0, -8
   4d374:	07 00 00 f6 	b 28 <malloc+0x150>
   4d378:	20 fc fe 16 	cmpgt_u s1, s0, -65
   4d37c:	41 00 00 f4 	bnz s1, 8 <malloc+0x144>
   4d380:	1d 00 00 f6 	b 116 <malloc+0x1b4>
   4d384:	40 ff ff 0f 	move s26, -1
   4d388:	6e 01 00 f6 	b 1464 <malloc+0x700>
   4d38c:	40 43 00 0f 	move s26, 16
   4d390:	18 00 00 a8 	load_32 s0, (s24)
   4d394:	5a 0c 00 0a 	shr s2, s26, 3
   4d398:	60 00 a1 c0 	shr s3, s0, s2
   4d39c:	23 0c 00 01 	and s1, s3, 3
   4d3a0:	81 04 00 f2 	bz s1, 144 <malloc+0x1f0>
   4d3a4:	23 fc ff 03 	xor s1, s3, -1
   4d3a8:	21 04 00 01 	and s1, s1, 1
   4d3ac:	a1 00 51 c0 	add_i s5, s1, s2
   4d3b0:	25 0c 00 0b 	shl s1, s5, 3
   4d3b4:	98 80 50 c0 	add_i s4, s24, s1
   4d3b8:	44 c0 00 a8 	load_32 s2, 48(s4)
   4d3bc:	84 a0 00 05 	add_i s4, s4, 40
   4d3c0:	62 20 00 a8 	load_32 s3, 8(s2)
   4d3c4:	c3 00 12 c1 	cmpne_i s6, s3, s4
   4d3c8:	46 00 00 f4 	bnz s6, 8 <malloc+0x190>
   4d3cc:	4c 00 00 f6 	b 304 <malloc+0x2bc>
   4d3d0:	18 40 00 a8 	load_32 s0, 16(s24)
   4d3d4:	00 80 61 c1 	cmpgt_u s0, s0, s3
   4d3d8:	60 e4 00 f4 	bnz s0, 7308 <malloc+0x1e24>
   4d3dc:	03 30 00 a8 	load_32 s0, 12(s3)
   4d3e0:	00 00 11 c1 	cmpne_i s0, s0, s2
   4d3e4:	00 e4 00 f4 	bnz s0, 7296 <malloc+0x1e24>
   4d3e8:	83 30 00 88 	store_32 s4, 12(s3)
   4d3ec:	64 20 00 88 	store_32 s3, 8(s4)
   4d3f0:	48 00 00 f6 	b 288 <malloc+0x2d0>
   4d3f4:	00 2c 00 05 	add_i s0, s0, 11
   4d3f8:	38 10 00 a8 	load_32 s1, 4(s24)
   4d3fc:	40 e3 ff 01 	and s26, s0, -8
   4d400:	01 2a 00 f2 	bz s1, 1344 <malloc+0x700>
   4d404:	60 00 00 0f 	move s3, 0
   4d408:	00 20 00 0a 	shr s0, s0, 8
   4d40c:	a0 80 f1 c0 	move s5, s3
   4d410:	e0 0c 00 f2 	bz s0, 412 <malloc+0x36c>
   4d414:	5f fc 00 4f 	movehi s2, 2047
   4d418:	42 fc 7f 00 	or s2, s2, 8191
   4d41c:	5a 00 61 c1 	cmpgt_u s2, s26, s2
   4d420:	42 00 00 f4 	bnz s2, 8 <malloc+0x1e8>
   4d424:	46 00 00 f6 	b 280 <malloc+0x2fc>
   4d428:	a0 7c 00 0f 	move s5, 31
   4d42c:	60 00 00 f6 	b 384 <malloc+0x36c>
   4d430:	38 20 00 a8 	load_32 s1, 8(s24)
   4d434:	9a 80 90 c1 	cmple_u s4, s26, s1
   4d438:	44 28 00 f4 	bnz s4, 1288 <malloc+0x700>
   4d43c:	03 17 00 f2 	bz s3, 736 <malloc+0x4dc>
   4d440:	80 08 00 0f 	move s4, 2
   4d444:	a0 00 00 0f 	move s5, 0
   4d448:	84 00 b1 c0 	shl s4, s4, s2
   4d44c:	43 00 b1 c0 	shl s2, s3, s2
   4d450:	65 00 62 c0 	sub_i s3, s5, s4
   4d454:	64 80 01 c0 	or s3, s4, s3
   4d458:	42 80 11 c0 	and s2, s2, s3
   4d45c:	65 00 61 c0 	sub_i s3, s5, s2
   4d460:	42 80 11 c0 	and s2, s2, s3
   4d464:	42 fc ff 05 	add_i s2, s2, -1
   4d468:	62 30 00 0a 	shr s3, s2, 12
   4d46c:	63 40 00 01 	and s3, s3, 16
   4d470:	42 80 a1 c0 	shr s2, s2, s3
   4d474:	82 14 00 0a 	shr s4, s2, 5
   4d478:	84 20 00 01 	and s4, s4, 8
   4d47c:	42 00 a2 c0 	shr s2, s2, s4
   4d480:	64 80 01 c0 	or s3, s4, s3
   4d484:	a2 08 00 0a 	shr s5, s2, 2
   4d488:	a5 10 00 01 	and s5, s5, 4
   4d48c:	42 80 a2 c0 	shr s2, s2, s5
   4d490:	63 80 02 c0 	or s3, s3, s5
   4d494:	c2 04 00 0a 	shr s6, s2, 1
   4d498:	86 08 00 01 	and s4, s6, 2
   4d49c:	42 00 a2 c0 	shr s2, s2, s4
   4d4a0:	63 00 02 c0 	or s3, s3, s4
   4d4a4:	a2 04 00 0a 	shr s5, s2, 1
   4d4a8:	85 04 00 01 	and s4, s5, 1
   4d4ac:	63 00 02 c0 	or s3, s3, s4
   4d4b0:	42 00 a2 c0 	shr s2, s2, s4
   4d4b4:	c3 00 51 c0 	add_i s6, s3, s2
   4d4b8:	a6 0c 00 0b 	shl s5, s6, 3
   4d4bc:	98 80 52 c0 	add_i s4, s24, s5
   4d4c0:	44 c0 00 a8 	load_32 s2, 48(s4)
   4d4c4:	84 a0 00 05 	add_i s4, s4, 40
   4d4c8:	62 20 00 a8 	load_32 s3, 8(s2)
   4d4cc:	e3 00 12 c1 	cmpne_i s7, s3, s4
   4d4d0:	47 00 00 f4 	bnz s7, 8 <malloc+0x298>
   4d4d4:	a2 01 00 f6 	b 1672 <malloc+0x91c>
   4d4d8:	d8 40 00 a8 	load_32 s6, 16(s24)
   4d4dc:	c6 80 61 c1 	cmpgt_u s6, s6, s3
   4d4e0:	26 dc 00 f4 	bnz s6, 7044 <malloc+0x1e24>
   4d4e4:	c3 30 00 a8 	load_32 s6, 12(s3)
   4d4e8:	c6 00 11 c1 	cmpne_i s6, s6, s2
   4d4ec:	c6 db 00 f4 	bnz s6, 7032 <malloc+0x1e24>
   4d4f0:	83 30 00 88 	store_32 s4, 12(s3)
   4d4f4:	64 20 00 88 	store_32 s3, 8(s4)
   4d4f8:	9e 01 00 f6 	b 1656 <malloc+0x930>
   4d4fc:	60 04 00 0f 	move s3, 1
   4d500:	63 80 b2 c0 	shl s3, s3, s5
   4d504:	63 fc ff 03 	xor s3, s3, -1
   4d508:	00 80 11 c0 	and s0, s0, s3
   4d50c:	18 00 00 88 	store_32 s0, (s24)
   4d510:	02 80 50 c0 	add_i s0, s2, s1
   4d514:	21 0c 00 00 	or s1, s1, 3
   4d518:	22 10 00 88 	store_32 s1, 4(s2)
   4d51c:	62 23 00 05 	add_i s27, s2, 8
   4d520:	20 10 00 a8 	load_32 s1, 4(s0)
   4d524:	21 04 00 00 	or s1, s1, 1
   4d528:	20 10 00 88 	store_32 s1, 4(s0)
   4d52c:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4d530:	00 08 00 01 	and s0, s0, 2
   4d534:	e0 37 00 f2 	bz s0, 1788 <malloc+0x9f0>
   4d538:	b8 01 00 f6 	b 1760 <malloc+0x9d8>
   4d53c:	5f 0c 00 4f 	movehi s2, 127
   4d540:	9f 04 00 4f 	movehi s4, 63
   4d544:	be 00 00 4f 	movehi s5, 30
   4d548:	42 00 7c 00 	or s2, s2, 7936
   4d54c:	40 00 51 c0 	add_i s2, s0, s2
   4d550:	84 00 40 00 	or s4, s4, 4096
   4d554:	42 40 00 0a 	shr s2, s2, 16
   4d558:	42 20 00 01 	and s2, s2, 8
   4d55c:	00 00 b1 c0 	shl s0, s0, s2
   4d560:	80 00 52 c0 	add_i s4, s0, s4
   4d564:	84 40 00 0a 	shr s4, s4, 16
   4d568:	84 10 00 01 	and s4, s4, 4
   4d56c:	00 00 b2 c0 	shl s0, s0, s4
   4d570:	44 00 01 c0 	or s2, s4, s2
   4d574:	a0 80 52 c0 	add_i s5, s0, s5
   4d578:	a5 40 00 0a 	shr s5, s5, 16
   4d57c:	85 08 00 01 	and s4, s5, 2
   4d580:	a0 38 00 0f 	move s5, 14
   4d584:	42 00 02 c0 	or s2, s2, s4
   4d588:	00 00 b2 c0 	shl s0, s0, s4
   4d58c:	45 00 61 c0 	sub_i s2, s5, s2
   4d590:	00 3c 00 0a 	shr s0, s0, 15
   4d594:	02 00 50 c0 	add_i s0, s2, s0
   4d598:	40 1c 00 05 	add_i s2, s0, 7
   4d59c:	5a 00 a1 c0 	shr s2, s26, s2
   4d5a0:	00 04 00 0b 	shl s0, s0, 1
   4d5a4:	42 04 00 01 	and s2, s2, 1
   4d5a8:	a2 00 00 c0 	or s5, s2, s0
   4d5ac:	05 08 00 0b 	shl s0, s5, 2
   4d5b0:	18 00 50 c0 	add_i s0, s24, s0
   4d5b4:	43 00 6d c0 	sub_i s2, s3, s26
   4d5b8:	80 c0 04 a8 	load_32 s4, 304(s0)
   4d5bc:	24 0a 00 f2 	bz s4, 324 <malloc+0x4c0>
   4d5c0:	c0 00 00 0f 	move s6, 0
   4d5c4:	65 7c 00 10 	cmpeq_i s3, s5, 31
   4d5c8:	00 00 f3 c0 	move s0, s6
   4d5cc:	83 00 00 f4 	bnz s3, 16 <malloc+0x39c>
   4d5d0:	00 64 00 0f 	move s0, 25
   4d5d4:	65 04 00 0a 	shr s3, s5, 1
   4d5d8:	00 80 61 c0 	sub_i s0, s0, s3
   4d5dc:	fa 00 b0 c0 	shl s7, s26, s0
   4d5e0:	60 00 f3 c0 	move s3, s6
   4d5e4:	00 00 f3 c0 	move s0, s6
   4d5e8:	04 11 00 a8 	load_32 s8, 4(s4)
   4d5ec:	08 e1 ff 01 	and s8, s8, -8
   4d5f0:	08 01 6d c0 	sub_i s8, s8, s26
   4d5f4:	28 01 71 c1 	cmpge_u s9, s8, s2
   4d5f8:	89 00 00 f4 	bnz s9, 16 <malloc+0x3c8>
   4d5fc:	40 00 f4 c0 	move s2, s8
   4d600:	00 00 f2 c0 	move s0, s4
   4d604:	88 12 00 f2 	bz s8, 592 <malloc+0x614>
   4d608:	07 75 00 0a 	shr s8, s7, 29
   4d60c:	08 11 00 01 	and s8, s8, 4
   4d610:	24 01 54 c0 	add_i s9, s4, s8
   4d614:	04 51 00 a8 	load_32 s8, 20(s4)
   4d618:	89 40 00 a8 	load_32 s4, 16(s9)
   4d61c:	20 81 f1 c0 	move s9, s3
   4d620:	48 01 02 c1 	cmpeq_i s10, s8, s4
   4d624:	4a 01 00 f4 	bnz s10, 40 <malloc+0x40c>
   4d628:	20 01 f4 c0 	move s9, s8
   4d62c:	08 01 00 10 	cmpeq_i s8, s8, 0
   4d630:	48 00 00 f4 	bnz s8, 8 <malloc+0x3f8>
   4d634:	08 00 00 f6 	b 32 <malloc+0x414>
   4d638:	04 01 00 11 	cmpne_i s8, s4, 0
   4d63c:	08 05 00 01 	and s8, s8, 1
   4d640:	e7 00 b4 c0 	shl s7, s7, s8
   4d644:	24 fd ff f5 	bnz s4, -92 <malloc+0x3a8>
   4d648:	08 00 00 f6 	b 32 <malloc+0x428>
   4d64c:	08 01 00 10 	cmpeq_i s8, s8, 0
   4d650:	48 ff ff f5 	bnz s8, -24 <malloc+0x3f8>
   4d654:	60 80 f4 c0 	move s3, s9
   4d658:	04 01 00 11 	cmpne_i s8, s4, 0
   4d65c:	08 05 00 01 	and s8, s8, 1
   4d660:	e7 00 b4 c0 	shl s7, s7, s8
   4d664:	24 fc ff f5 	bnz s4, -124 <malloc+0x3a8>
   4d668:	83 00 00 c0 	or s4, s3, s0
   4d66c:	24 05 00 f4 	bnz s4, 164 <malloc+0x4d0>
   4d670:	80 08 00 0f 	move s4, 2
   4d674:	60 00 00 0f 	move s3, 0
   4d678:	84 80 b2 c0 	shl s4, s4, s5
   4d67c:	a3 00 62 c0 	sub_i s5, s3, s4
   4d680:	84 80 02 c0 	or s4, s4, s5
   4d684:	84 80 10 c0 	and s4, s4, s1
   4d688:	c4 15 00 f2 	bz s4, 696 <malloc+0x700>
   4d68c:	63 00 62 c0 	sub_i s3, s3, s4
   4d690:	64 80 11 c0 	and s3, s4, s3
   4d694:	63 fc ff 05 	add_i s3, s3, -1
   4d698:	83 30 00 0a 	shr s4, s3, 12
   4d69c:	84 40 00 01 	and s4, s4, 16
   4d6a0:	63 00 a2 c0 	shr s3, s3, s4
   4d6a4:	a3 14 00 0a 	shr s5, s3, 5
   4d6a8:	a5 20 00 01 	and s5, s5, 8
   4d6ac:	63 80 a2 c0 	shr s3, s3, s5
   4d6b0:	85 00 02 c0 	or s4, s5, s4
   4d6b4:	c3 08 00 0a 	shr s6, s3, 2
   4d6b8:	c6 10 00 01 	and s6, s6, 4
   4d6bc:	63 00 a3 c0 	shr s3, s3, s6
   4d6c0:	84 00 03 c0 	or s4, s4, s6
   4d6c4:	e3 04 00 0a 	shr s7, s3, 1
   4d6c8:	a7 08 00 01 	and s5, s7, 2
   4d6cc:	63 80 a2 c0 	shr s3, s3, s5
   4d6d0:	84 80 02 c0 	or s4, s4, s5
   4d6d4:	c3 04 00 0a 	shr s6, s3, 1
   4d6d8:	a6 04 00 01 	and s5, s6, 1
   4d6dc:	84 80 02 c0 	or s4, s4, s5
   4d6e0:	63 80 a2 c0 	shr s3, s3, s5
   4d6e4:	64 80 51 c0 	add_i s3, s4, s3
   4d6e8:	63 08 00 0b 	shl s3, s3, 2
   4d6ec:	78 80 51 c0 	add_i s3, s24, s3
   4d6f0:	63 c0 04 a8 	load_32 s3, 304(s3)
   4d6f4:	80 80 f1 c0 	move s4, s3
   4d6f8:	c3 0e 00 f2 	bz s3, 472 <malloc+0x690>
   4d6fc:	58 00 00 f6 	b 352 <malloc+0x61c>
   4d700:	00 80 f1 c0 	move s0, s3
   4d704:	83 00 00 c0 	or s4, s3, s0
   4d708:	44 00 00 f4 	bnz s4, 8 <malloc+0x4d0>
   4d70c:	d9 ff ff f7 	b -156 <malloc+0x430>
   4d710:	80 80 f1 c0 	move s4, s3
   4d714:	e3 0d 00 f2 	bz s3, 444 <malloc+0x690>
   4d718:	51 00 00 f6 	b 324 <malloc+0x61c>
   4d71c:	b8 10 00 a8 	load_32 s5, 4(s24)
   4d720:	05 11 00 f2 	bz s5, 544 <malloc+0x700>
   4d724:	c0 00 00 0f 	move s6, 0
   4d728:	46 80 62 c0 	sub_i s2, s6, s5
   4d72c:	45 00 11 c0 	and s2, s5, s2
   4d730:	42 fc ff 05 	add_i s2, s2, -1
   4d734:	62 30 00 0a 	shr s3, s2, 12
   4d738:	63 40 00 01 	and s3, s3, 16
   4d73c:	42 80 a1 c0 	shr s2, s2, s3
   4d740:	82 14 00 0a 	shr s4, s2, 5
   4d744:	84 20 00 01 	and s4, s4, 8
   4d748:	42 00 a2 c0 	shr s2, s2, s4
   4d74c:	64 80 01 c0 	or s3, s4, s3
   4d750:	e2 08 00 0a 	shr s7, s2, 2
   4d754:	e7 10 00 01 	and s7, s7, 4
   4d758:	42 80 a3 c0 	shr s2, s2, s7
   4d75c:	63 80 03 c0 	or s3, s3, s7
   4d760:	02 05 00 0a 	shr s8, s2, 1
   4d764:	88 08 00 01 	and s4, s8, 2
   4d768:	42 00 a2 c0 	shr s2, s2, s4
   4d76c:	63 00 02 c0 	or s3, s3, s4
   4d770:	e2 04 00 0a 	shr s7, s2, 1
   4d774:	87 04 00 01 	and s4, s7, 1
   4d778:	63 00 02 c0 	or s3, s3, s4
   4d77c:	42 00 a2 c0 	shr s2, s2, s4
   4d780:	43 00 51 c0 	add_i s2, s3, s2
   4d784:	42 08 00 0b 	shl s2, s2, 2
   4d788:	58 00 51 c0 	add_i s2, s24, s2
   4d78c:	42 c0 04 a8 	load_32 s2, 304(s2)
   4d790:	62 10 00 a8 	load_32 s3, 4(s2)
   4d794:	e0 00 f1 c0 	move s7, s2
   4d798:	63 e0 ff 01 	and s3, s3, -8
   4d79c:	63 00 6d c0 	sub_i s3, s3, s26
   4d7a0:	87 40 00 a8 	load_32 s4, 16(s7)
   4d7a4:	04 01 00 f4 	bnz s4, 32 <malloc+0x584>
   4d7a8:	11 00 00 f6 	b 68 <malloc+0x5ac>
   4d7ac:	60 80 f3 c0 	move s3, s7
   4d7b0:	40 80 f4 c0 	move s2, s9
   4d7b4:	e0 00 f2 c0 	move s7, s4
   4d7b8:	87 40 00 a8 	load_32 s4, 16(s7)
   4d7bc:	44 00 00 f4 	bnz s4, 8 <malloc+0x584>
   4d7c0:	0b 00 00 f6 	b 44 <malloc+0x5ac>
   4d7c4:	e4 10 00 a8 	load_32 s7, 4(s4)
   4d7c8:	e7 e0 ff 01 	and s7, s7, -8
   4d7cc:	e7 00 6d c0 	sub_i s7, s7, s26
   4d7d0:	07 81 81 c1 	cmplt_u s8, s7, s3
   4d7d4:	48 00 00 f4 	bnz s8, 8 <malloc+0x59c>
   4d7d8:	e0 80 f1 c0 	move s7, s3
   4d7dc:	20 01 f2 c0 	move s9, s4
   4d7e0:	68 fe ff f5 	bnz s8, -52 <malloc+0x56c>
   4d7e4:	20 01 f1 c0 	move s9, s2
   4d7e8:	f1 ff ff f7 	b -60 <malloc+0x56c>
   4d7ec:	87 50 00 a8 	load_32 s4, 20(s7)
   4d7f0:	44 00 00 f2 	bz s4, 8 <malloc+0x5b8>
   4d7f4:	f4 ff ff f7 	b -48 <malloc+0x584>
   4d7f8:	38 41 00 a8 	load_32 s9, 16(s24)
   4d7fc:	89 00 61 c1 	cmpgt_u s4, s9, s2
   4d800:	24 c3 00 f4 	bnz s4, 6244 <malloc+0x1e24>
   4d804:	82 00 5d c0 	add_i s4, s2, s26
   4d808:	e4 00 91 c1 	cmple_u s7, s4, s2
   4d80c:	c7 c2 00 f4 	bnz s7, 6232 <malloc+0x1e24>
   4d810:	e2 60 00 a8 	load_32 s7, 24(s2)
   4d814:	02 31 00 a8 	load_32 s8, 12(s2)
   4d818:	48 01 01 c1 	cmpeq_i s10, s8, s2
   4d81c:	aa 21 00 f4 	bnz s10, 1076 <malloc+0xa10>
   4d820:	c2 20 00 a8 	load_32 s6, 8(s2)
   4d824:	29 01 63 c1 	cmpgt_u s9, s9, s6
   4d828:	e9 c1 00 f4 	bnz s9, 6204 <malloc+0x1e24>
   4d82c:	26 31 00 a8 	load_32 s9, 12(s6)
   4d830:	29 01 11 c1 	cmpne_i s9, s9, s2
   4d834:	89 c1 00 f4 	bnz s9, 6192 <malloc+0x1e24>
   4d838:	28 21 00 a8 	load_32 s9, 8(s8)
   4d83c:	29 01 11 c1 	cmpne_i s9, s9, s2
   4d840:	29 c1 00 f4 	bnz s9, 6180 <malloc+0x1e24>
   4d844:	06 31 00 88 	store_32 s8, 12(s6)
   4d848:	c8 20 00 88 	store_32 s6, 8(s8)
   4d84c:	47 56 00 f2 	bz s7, 2760 <malloc+0x10d4>
   4d850:	69 02 00 f6 	b 2468 <malloc+0xfb4>
   4d854:	00 00 f2 c0 	move s0, s4
   4d858:	40 00 f3 c0 	move s2, s6
   4d85c:	60 00 f0 c0 	move s3, s0
   4d860:	a0 00 f1 c0 	move s5, s2
   4d864:	04 10 00 a8 	load_32 s0, 4(s4)
   4d868:	00 e0 ff 01 	and s0, s0, -8
   4d86c:	40 00 6d c0 	sub_i s2, s0, s26
   4d870:	c2 80 82 c1 	cmplt_u s6, s2, s5
   4d874:	a6 01 00 f4 	bnz s6, 52 <malloc+0x668>
   4d878:	40 80 f2 c0 	move s2, s5
   4d87c:	00 00 f2 c0 	move s0, s4
   4d880:	46 00 00 f4 	bnz s6, 8 <malloc+0x648>
   4d884:	0b 00 00 f6 	b 44 <malloc+0x670>
   4d888:	c4 40 00 a8 	load_32 s6, 16(s4)
   4d88c:	46 00 00 f4 	bnz s6, 8 <malloc+0x654>
   4d890:	0b 00 00 f6 	b 44 <malloc+0x67c>
   4d894:	60 00 f0 c0 	move s3, s0
   4d898:	a0 00 f1 c0 	move s5, s2
   4d89c:	80 00 f3 c0 	move s4, s6
   4d8a0:	26 fe ff f5 	bnz s6, -60 <malloc+0x624>
   4d8a4:	0b 00 00 f6 	b 44 <malloc+0x690>
   4d8a8:	00 00 f2 c0 	move s0, s4
   4d8ac:	e6 fe ff f5 	bnz s6, -36 <malloc+0x648>
   4d8b0:	00 80 f1 c0 	move s0, s3
   4d8b4:	c4 40 00 a8 	load_32 s6, 16(s4)
   4d8b8:	e6 fe ff f5 	bnz s6, -36 <malloc+0x654>
   4d8bc:	c4 50 00 a8 	load_32 s6, 20(s4)
   4d8c0:	60 00 f0 c0 	move s3, s0
   4d8c4:	a0 00 f1 c0 	move s5, s2
   4d8c8:	80 00 f3 c0 	move s4, s6
   4d8cc:	c6 fc ff f5 	bnz s6, -104 <malloc+0x624>
   4d8d0:	80 03 00 f2 	bz s0, 112 <malloc+0x700>
   4d8d4:	78 20 00 a8 	load_32 s3, 8(s24)
   4d8d8:	63 00 6d c0 	sub_i s3, s3, s26
   4d8dc:	62 80 71 c1 	cmpge_u s3, s2, s3
   4d8e0:	03 03 00 f4 	bnz s3, 96 <malloc+0x700>
   4d8e4:	d8 40 00 a8 	load_32 s6, 16(s24)
   4d8e8:	66 00 60 c1 	cmpgt_u s3, s6, s0
   4d8ec:	c3 bb 00 f4 	bnz s3, 6008 <malloc+0x1e24>
   4d8f0:	60 00 5d c0 	add_i s3, s0, s26
   4d8f4:	83 00 90 c1 	cmple_u s4, s3, s0
   4d8f8:	64 bb 00 f4 	bnz s4, 5996 <malloc+0x1e24>
   4d8fc:	80 60 00 a8 	load_32 s4, 24(s0)
   4d900:	a0 30 00 a8 	load_32 s5, 12(s0)
   4d904:	e5 00 00 c1 	cmpeq_i s7, s5, s0
   4d908:	47 16 00 f4 	bnz s7, 712 <malloc+0x990>
   4d90c:	e0 20 00 a8 	load_32 s7, 8(s0)
   4d910:	c6 80 63 c1 	cmpgt_u s6, s6, s7
   4d914:	86 ba 00 f4 	bnz s6, 5968 <malloc+0x1e24>
   4d918:	c7 30 00 a8 	load_32 s6, 12(s7)
   4d91c:	c6 00 10 c1 	cmpne_i s6, s6, s0
   4d920:	26 ba 00 f4 	bnz s6, 5956 <malloc+0x1e24>
   4d924:	c5 20 00 a8 	load_32 s6, 8(s5)
   4d928:	c6 00 10 c1 	cmpne_i s6, s6, s0
   4d92c:	c6 b9 00 f4 	bnz s6, 5944 <malloc+0x1e24>
   4d930:	a7 30 00 88 	store_32 s5, 12(s7)
   4d934:	e5 20 00 88 	store_32 s7, 8(s5)
   4d938:	e4 25 00 f2 	bz s4, 1212 <malloc+0xbb4>
   4d93c:	da 00 00 f6 	b 872 <malloc+0xa64>
   4d940:	38 20 00 a8 	load_32 s1, 8(s24)
   4d944:	01 00 8d c1 	cmplt_u s0, s1, s26
   4d948:	40 00 00 f4 	bnz s0, 8 <malloc+0x710>
   4d94c:	12 00 00 f6 	b 72 <malloc+0x754>
   4d950:	18 30 00 a8 	load_32 s0, 12(s24)
   4d954:	20 00 9d c1 	cmple_u s1, s0, s26
   4d958:	21 04 00 f4 	bnz s1, 132 <malloc+0x79c>
   4d95c:	00 00 6d c0 	sub_i s0, s0, s26
   4d960:	18 30 00 88 	store_32 s0, 12(s24)
   4d964:	38 60 00 a8 	load_32 s1, 24(s24)
   4d968:	00 04 00 00 	or s0, s0, 1
   4d96c:	41 00 5d c0 	add_i s2, s1, s26
   4d970:	58 60 00 88 	store_32 s2, 24(s24)
   4d974:	61 23 00 05 	add_i s27, s1, 8
   4d978:	02 10 00 88 	store_32 s0, 4(s2)
   4d97c:	1a 0c 00 00 	or s0, s26, 3
   4d980:	01 10 00 88 	store_32 s0, 4(s1)
   4d984:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4d988:	00 08 00 01 	and s0, s0, 2
   4d98c:	20 15 00 f2 	bz s0, 676 <malloc+0x9f0>
   4d990:	a2 00 00 f6 	b 648 <malloc+0x9d8>
   4d994:	41 00 6d c0 	sub_i s2, s1, s26
   4d998:	18 50 00 a8 	load_32 s0, 20(s24)
   4d99c:	62 40 00 18 	cmplt_u s3, s2, 16
   4d9a0:	43 0b 00 f4 	bnz s3, 360 <malloc+0x8c8>
   4d9a4:	60 00 5d c0 	add_i s3, s0, s26
   4d9a8:	78 50 00 88 	store_32 s3, 20(s24)
   4d9ac:	20 80 50 c0 	add_i s1, s0, s1
   4d9b0:	58 20 00 88 	store_32 s2, 8(s24)
   4d9b4:	82 04 00 00 	or s4, s2, 1
   4d9b8:	83 10 00 88 	store_32 s4, 4(s3)
   4d9bc:	60 23 00 05 	add_i s27, s0, 8
   4d9c0:	41 00 00 88 	store_32 s2, (s1)
   4d9c4:	3a 0c 00 00 	or s1, s26, 3
   4d9c8:	20 10 00 88 	store_32 s1, 4(s0)
   4d9cc:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4d9d0:	00 08 00 01 	and s0, s0, 2
   4d9d4:	e0 12 00 f2 	bz s0, 604 <malloc+0x9f0>
   4d9d8:	90 00 00 f6 	b 576 <malloc+0x9d8>
   4d9dc:	19 00 00 a8 	load_32 s0, (s25)
   4d9e0:	20 05 00 f4 	bnz s0, 164 <malloc+0x844>
   4d9e4:	00 0c 00 4f 	movehi s0, 96
   4d9e8:	20 04 00 0f 	move s1, 1
   4d9ec:	00 d0 5d 00 	or s0, s0, 6004
   4d9f0:	40 00 00 aa 	load_sync s2, (s0)
   4d9f4:	60 80 f0 c0 	move s3, s1
   4d9f8:	60 00 00 8a 	store_sync s3, (s0)  
   4d9fc:	a3 ff ff f3 	bz s3, -12 <malloc+0x7b0>
   4da00:	02 01 00 f2 	bz s2, 32 <malloc+0x7e0>
   4da04:	40 00 00 a8 	load_32 s2, (s0)
   4da08:	e2 ff ff f5 	bnz s2, -4 <malloc+0x7c4>
   4da0c:	40 00 00 aa 	load_sync s2, (s0)
   4da10:	60 80 f0 c0 	move s3, s1
   4da14:	60 00 00 8a 	store_sync s3, (s0)  
   4da18:	a3 ff ff f3 	bz s3, -12 <malloc+0x7cc>
   4da1c:	42 ff ff f5 	bnz s2, -24 <malloc+0x7c4>
   4da20:	39 00 00 a8 	load_32 s1, (s25)
   4da24:	61 02 00 f4 	bnz s1, 76 <malloc+0x830>
   4da28:	20 00 40 0f 	move s1, 4096
   4da2c:	39 20 00 88 	store_32 s1, 8(s25)
   4da30:	39 10 00 88 	store_32 s1, 4(s25)
   4da34:	20 fc ff 0f 	move s1, -1
   4da38:	39 30 00 88 	store_32 s1, 12(s25)
   4da3c:	20 20 00 4f 	movehi s1, 256
   4da40:	39 40 00 88 	store_32 s1, 16(s25)
   4da44:	20 08 00 0f 	move s1, 2
   4da48:	39 50 00 88 	store_32 s1, 20(s25)
   4da4c:	6a 54 55 4f 	movehi s3, 174762
   4da50:	38 f0 06 88 	store_32 s1, 444(s24)
   4da54:	3e a0 00 05 	add_i s1, sp, 40
   4da58:	40 00 00 0f 	move s2, 0
   4da5c:	58 00 07 88 	store_32 s2, 448(s24)
   4da60:	43 60 55 00 	or s2, s3, 5464
   4da64:	21 c0 ff 01 	and s1, s1, -16
   4da68:	21 00 31 c0 	xor s1, s1, s2
   4da6c:	39 00 00 88 	store_32 s1, (s25)
   4da70:	20 00 00 0f 	move s1, 0
   4da74:	40 00 00 aa 	load_sync s2, (s0)
   4da78:	40 80 f0 c0 	move s2, s1
   4da7c:	40 00 00 8a 	store_sync s2, (s0)  
   4da80:	a2 ff ff f3 	bz s2, -12 <malloc+0x834>
   4da84:	19 20 00 a8 	load_32 s0, 8(s25)
   4da88:	ba bc 00 05 	add_i s5, s26, 47
   4da8c:	60 03 00 0f 	move s27, 0
   4da90:	20 80 52 c0 	add_i s1, s0, s5
   4da94:	1b 00 60 c0 	sub_i s0, s27, s0
   4da98:	81 00 10 c0 	and s4, s1, s0
   4da9c:	04 00 9d c1 	cmple_u s0, s4, s26
   4daa0:	60 0b 00 f4 	bnz s0, 364 <malloc+0x9cc>
   4daa4:	18 e0 06 a8 	load_32 s0, 440(s24)
   4daa8:	e0 00 00 f2 	bz s0, 28 <malloc+0x884>
   4daac:	58 c0 06 a8 	load_32 s2, 432(s24)
   4dab0:	22 00 52 c0 	add_i s1, s2, s4
   4dab4:	41 00 91 c1 	cmple_u s2, s1, s2
   4dab8:	a2 0a 00 f4 	bnz s2, 340 <malloc+0x9cc>
   4dabc:	01 00 60 c1 	cmpgt_u s0, s1, s0
   4dac0:	60 0a 00 f4 	bnz s0, 332 <malloc+0x9cc>
   4dac4:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4dac8:	00 10 00 01 	and s0, s0, 4
   4dacc:	a0 03 00 f4 	bnz s0, 116 <malloc+0x900>
   4dad0:	18 60 00 a8 	load_32 s0, 24(s24)
   4dad4:	e0 00 00 0f 	move s7, 0
   4dad8:	80 19 00 f2 	bz s0, 816 <malloc+0xbc8>
   4dadc:	38 10 07 05 	add_i s1, s24, 452
   4dae0:	41 00 00 a8 	load_32 s2, (s1)
   4dae4:	62 00 60 c1 	cmpgt_u s3, s2, s0
   4dae8:	a3 00 00 f4 	bnz s3, 20 <malloc+0x8bc>
   4daec:	61 10 00 a8 	load_32 s3, 4(s1)
   4daf0:	42 80 51 c0 	add_i s2, s2, s3
   4daf4:	42 00 60 c1 	cmpgt_u s2, s2, s0
   4daf8:	62 18 00 f4 	bnz s2, 780 <malloc+0xbc4>
   4dafc:	21 20 00 a8 	load_32 s1, 8(s1)
   4db00:	01 ff ff f5 	bnz s1, -32 <malloc+0x8a0>
   4db04:	c1 00 00 f6 	b 772 <malloc+0xbc8>
   4db08:	40 00 00 0f 	move s2, 0
   4db0c:	58 20 00 88 	store_32 s2, 8(s24)
   4db10:	58 50 00 88 	store_32 s2, 20(s24)
   4db14:	40 80 50 c0 	add_i s2, s0, s1
   4db18:	21 0c 00 00 	or s1, s1, 3
   4db1c:	20 10 00 88 	store_32 s1, 4(s0)
   4db20:	60 23 00 05 	add_i s27, s0, 8
   4db24:	22 10 00 a8 	load_32 s1, 4(s2)
   4db28:	21 04 00 00 	or s1, s1, 1
   4db2c:	22 10 00 88 	store_32 s1, 4(s2)
   4db30:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4db34:	00 08 00 01 	and s0, s0, 2
   4db38:	c0 07 00 f2 	bz s0, 248 <malloc+0x9f0>
   4db3c:	37 00 00 f6 	b 220 <malloc+0x9d8>
   4db40:	40 fd ff 0f 	move s10, -1
   4db44:	20 01 00 0f 	move s9, 0
   4db48:	1f fc 7f 4f 	movehi s0, 262143
   4db4c:	00 f8 7f 00 	or s0, s0, 8190
   4db50:	04 00 60 c1 	cmpgt_u s0, s4, s0
   4db54:	20 4b 00 f4 	bnz s0, 2404 <malloc+0x1278>
   4db58:	2f 02 00 f6 	b 2236 <malloc+0x11d4>
   4db5c:	60 04 00 0f 	move s3, 1
   4db60:	63 00 b3 c0 	shl s3, s3, s6
   4db64:	63 fc ff 03 	xor s3, s3, -1
   4db68:	00 80 11 c0 	and s0, s0, s3
   4db6c:	18 00 00 88 	store_32 s0, (s24)
   4db70:	9a 0c 00 00 	or s4, s26, 3
   4db74:	82 10 00 88 	store_32 s4, 4(s2)
   4db78:	65 00 6d c0 	sub_i s3, s5, s26
   4db7c:	82 00 5d c0 	add_i s4, s2, s26
   4db80:	a2 80 52 c0 	add_i s5, s2, s5
   4db84:	c3 04 00 00 	or s6, s3, 1
   4db88:	c4 10 00 88 	store_32 s6, 4(s4)
   4db8c:	65 00 00 88 	store_32 s3, (s5)
   4db90:	81 03 00 f2 	bz s1, 112 <malloc+0x9c0>
   4db94:	a1 0c 00 0a 	shr s5, s1, 3
   4db98:	38 50 00 a8 	load_32 s1, 20(s24)
   4db9c:	c0 04 00 0f 	move s6, 1
   4dba0:	e5 0c 00 0b 	shl s7, s5, 3
   4dba4:	f8 80 53 c0 	add_i s7, s24, s7
   4dba8:	c6 80 b2 c0 	shl s6, s6, s5
   4dbac:	00 01 13 c0 	and s8, s0, s6
   4dbb0:	a7 a0 00 05 	add_i s5, s7, 40
   4dbb4:	48 00 00 f4 	bnz s8, 8 <malloc+0x97c>
   4dbb8:	0b 00 00 f6 	b 44 <malloc+0x9a4>
   4dbbc:	05 20 00 a8 	load_32 s0, 8(s5)
   4dbc0:	d8 40 00 a8 	load_32 s6, 16(s24)
   4dbc4:	c6 00 90 c1 	cmple_u s6, s6, s0
   4dbc8:	46 01 00 f4 	bnz s6, 40 <malloc+0x9b0>
   4dbcc:	26 05 00 f6 	b 5272 <malloc+0x1e24>
   4dbd0:	e0 50 00 a8 	load_32 s7, 20(s0)
   4dbd4:	47 00 00 f4 	bnz s7, 8 <malloc+0x99c>
   4dbd8:	23 00 00 f6 	b 140 <malloc+0xa24>
   4dbdc:	00 51 00 05 	add_i s8, s0, 20
   4dbe0:	24 00 00 f6 	b 144 <malloc+0xa30>
   4dbe4:	00 00 03 c0 	or s0, s0, s6
   4dbe8:	18 00 00 88 	store_32 s0, (s24)
   4dbec:	00 80 f2 c0 	move s0, s5
   4dbf0:	25 20 00 88 	store_32 s1, 8(s5)
   4dbf4:	20 30 00 88 	store_32 s1, 12(s0)
   4dbf8:	01 20 00 88 	store_32 s0, 8(s1)
   4dbfc:	a1 30 00 88 	store_32 s5, 12(s1)
   4dc00:	78 20 00 88 	store_32 s3, 8(s24)
   4dc04:	62 23 00 05 	add_i s27, s2, 8
   4dc08:	98 50 00 88 	store_32 s4, 20(s24)
   4dc0c:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4dc10:	00 08 00 01 	and s0, s0, 2
   4dc14:	e0 00 00 f2 	bz s0, 28 <malloc+0x9f0>
   4dc18:	18 00 07 05 	add_i s0, s24, 448
   4dc1c:	20 00 00 0f 	move s1, 0
   4dc20:	40 00 00 aa 	load_sync s2, (s0)
   4dc24:	40 80 f0 c0 	move s2, s1
   4dc28:	40 00 00 8a 	store_sync s2, (s0)  
   4dc2c:	a2 ff ff f3 	bz s2, -12 <malloc+0x9e0>
   4dc30:	00 80 fd c0 	move s0, s27
   4dc34:	fe b3 00 a8 	load_32 ra, 44(sp)
   4dc38:	7e c3 00 a8 	load_32 s27, 48(sp)
   4dc3c:	5e d3 00 a8 	load_32 s26, 52(sp)
   4dc40:	3e e3 00 a8 	load_32 s25, 56(sp)
   4dc44:	1e f3 00 a8 	load_32 s24, 60(sp)
   4dc48:	de 03 01 05 	add_i sp, sp, 64
   4dc4c:	1f 00 00 f0 	ret
   4dc50:	42 51 00 a8 	load_32 s10, 20(s2)
   4dc54:	4a 00 00 f4 	bnz s10, 8 <malloc+0xa1c>
   4dc58:	58 01 00 f6 	b 1376 <malloc+0xf78>
   4dc5c:	62 51 00 05 	add_i s11, s2, 20
   4dc60:	59 01 00 f6 	b 1380 <malloc+0xf84>
   4dc64:	e0 40 00 a8 	load_32 s7, 16(s0)
   4dc68:	47 39 00 f2 	bz s7, 1832 <malloc+0x1150>
   4dc6c:	00 41 00 05 	add_i s8, s0, 16
   4dc70:	a0 80 f3 c0 	move s5, s7
   4dc74:	e5 50 00 a8 	load_32 s7, 20(s5)
   4dc78:	20 01 f4 c0 	move s9, s8
   4dc7c:	05 51 00 05 	add_i s8, s5, 20
   4dc80:	87 ff ff f5 	bnz s7, -16 <malloc+0xa30>
   4dc84:	e5 40 00 a8 	load_32 s7, 16(s5)
   4dc88:	05 41 00 05 	add_i s8, s5, 16
   4dc8c:	27 ff ff f5 	bnz s7, -28 <malloc+0xa30>
   4dc90:	c6 80 64 c1 	cmpgt_u s6, s6, s9
   4dc94:	86 9e 00 f4 	bnz s6, 5072 <malloc+0x1e24>
   4dc98:	c0 00 00 0f 	move s6, 0
   4dc9c:	c9 00 00 88 	store_32 s6, (s9)
   4dca0:	a4 0a 00 f2 	bz s4, 340 <malloc+0xbb4>
   4dca4:	c0 70 00 a8 	load_32 s6, 28(s0)
   4dca8:	e6 08 00 0b 	shl s7, s6, 2
   4dcac:	f8 80 53 c0 	add_i s7, s24, s7
   4dcb0:	07 c1 04 a8 	load_32 s8, 304(s7)
   4dcb4:	00 01 14 c1 	cmpne_i s8, s0, s8
   4dcb8:	48 00 00 f4 	bnz s8, 8 <malloc+0xa80>
   4dcbc:	0c 00 00 f6 	b 48 <malloc+0xaac>
   4dcc0:	d8 40 00 a8 	load_32 s6, 16(s24)
   4dcc4:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   4dcc8:	e6 9c 00 f4 	bnz s6, 5020 <malloc+0x1e24>
   4dccc:	c4 40 00 a8 	load_32 s6, 16(s4)
   4dcd0:	c6 00 00 c1 	cmpeq_i s6, s6, s0
   4dcd4:	66 06 00 f4 	bnz s6, 204 <malloc+0xb60>
   4dcd8:	c0 50 00 0f 	move s6, 20
   4dcdc:	c4 00 53 c0 	add_i s6, s4, s6
   4dce0:	a6 00 00 88 	store_32 s5, (s6)
   4dce4:	85 08 00 f2 	bz s5, 272 <malloc+0xbb4>
   4dce8:	32 00 00 f6 	b 200 <malloc+0xb70>
   4dcec:	e7 c0 04 05 	add_i s7, s7, 304
   4dcf0:	a7 00 00 88 	store_32 s5, (s7)
   4dcf4:	e5 05 00 f4 	bnz s5, 188 <malloc+0xb70>
   4dcf8:	80 04 00 0f 	move s4, 1
   4dcfc:	84 00 b3 c0 	shl s4, s4, s6
   4dd00:	84 fc ff 03 	xor s4, s4, -1
   4dd04:	21 00 12 c0 	and s1, s1, s4
   4dd08:	38 10 00 88 	store_32 s1, 4(s24)
   4dd0c:	82 3c 00 16 	cmpgt_u s4, s2, 15
   4dd10:	44 00 00 f4 	bnz s4, 8 <malloc+0xad8>
   4dd14:	3a 00 00 f6 	b 232 <malloc+0xbbc>
   4dd18:	9a 0c 00 00 	or s4, s26, 3
   4dd1c:	80 10 00 88 	store_32 s4, 4(s0)
   4dd20:	82 04 00 00 	or s4, s2, 1
   4dd24:	83 10 00 88 	store_32 s4, 4(s3)
   4dd28:	a3 00 51 c0 	add_i s5, s3, s2
   4dd2c:	82 fc 03 16 	cmpgt_u s4, s2, 255
   4dd30:	45 00 00 88 	store_32 s2, (s5)
   4dd34:	04 02 00 f4 	bnz s4, 64 <malloc+0xb34>
   4dd38:	22 0c 00 0a 	shr s1, s2, 3
   4dd3c:	58 00 00 a8 	load_32 s2, (s24)
   4dd40:	80 04 00 0f 	move s4, 1
   4dd44:	a1 0c 00 0b 	shl s5, s1, 3
   4dd48:	b8 80 52 c0 	add_i s5, s24, s5
   4dd4c:	84 80 b0 c0 	shl s4, s4, s1
   4dd50:	c2 00 12 c0 	and s6, s2, s4
   4dd54:	25 a0 00 05 	add_i s1, s5, 40
   4dd58:	46 00 00 f4 	bnz s6, 8 <malloc+0xb20>
   4dd5c:	aa 00 00 f6 	b 680 <malloc+0xdc4>
   4dd60:	41 20 00 a8 	load_32 s2, 8(s1)
   4dd64:	98 40 00 a8 	load_32 s4, 16(s24)
   4dd68:	84 00 91 c1 	cmple_u s4, s4, s2
   4dd6c:	24 15 00 f4 	bnz s4, 676 <malloc+0xdd0>
   4dd70:	bd 04 00 f6 	b 4852 <malloc+0x1e24>
   4dd74:	80 00 00 0f 	move s4, 0
   4dd78:	c2 20 00 0a 	shr s6, s2, 8
   4dd7c:	a0 00 f2 c0 	move s5, s4
   4dd80:	86 19 00 f2 	bz s6, 816 <malloc+0xe70>
   4dd84:	bf fc 00 4f 	movehi s5, 2047
   4dd88:	a5 fc 7f 00 	or s5, s5, 8191
   4dd8c:	a2 80 62 c1 	cmpgt_u s5, s2, s5
   4dd90:	45 00 00 f4 	bnz s5, 8 <malloc+0xb58>
   4dd94:	ab 00 00 f6 	b 684 <malloc+0xe00>
   4dd98:	a0 7c 00 0f 	move s5, 31
   4dd9c:	c5 00 00 f6 	b 788 <malloc+0xe70>
   4dda0:	c0 40 00 0f 	move s6, 16
   4dda4:	c4 00 53 c0 	add_i s6, s4, s6
   4dda8:	a6 00 00 88 	store_32 s5, (s6)
   4ddac:	45 02 00 f2 	bz s5, 72 <malloc+0xbb4>
   4ddb0:	d8 40 00 a8 	load_32 s6, 16(s24)
   4ddb4:	e6 80 62 c1 	cmpgt_u s7, s6, s5
   4ddb8:	67 95 00 f4 	bnz s7, 4780 <malloc+0x1e24>
   4ddbc:	85 60 00 88 	store_32 s4, 24(s5)
   4ddc0:	80 40 00 a8 	load_32 s4, 16(s0)
   4ddc4:	a4 00 00 f2 	bz s4, 20 <malloc+0xb98>
   4ddc8:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   4ddcc:	c6 94 00 f4 	bnz s6, 4760 <malloc+0x1e24>
   4ddd0:	85 40 00 88 	store_32 s4, 16(s5)
   4ddd4:	a4 60 00 88 	store_32 s5, 24(s4)
   4ddd8:	80 50 00 a8 	load_32 s4, 20(s0)
   4dddc:	c4 00 00 f2 	bz s4, 24 <malloc+0xbb4>
   4dde0:	d8 40 00 a8 	load_32 s6, 16(s24)
   4dde4:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   4dde8:	e6 93 00 f4 	bnz s6, 4732 <malloc+0x1e24>
   4ddec:	85 50 00 88 	store_32 s4, 20(s5)
   4ddf0:	a4 60 00 88 	store_32 s5, 24(s4)
   4ddf4:	82 3c 00 16 	cmpgt_u s4, s2, 15
   4ddf8:	04 f9 ff f5 	bnz s4, -224 <malloc+0xad8>
   4ddfc:	22 00 5d c0 	add_i s1, s2, s26
   4de00:	45 ff ff f7 	b -748 <malloc+0x8d4>
   4de04:	e0 80 f0 c0 	move s7, s1
   4de08:	00 0c 00 4f 	movehi s0, 96
   4de0c:	3a c0 00 05 	add_i s1, s26, 48
   4de10:	3e 80 00 88 	store_32 s1, 32(sp)
   4de14:	60 d3 5d 00 	or s27, s0, 6004
   4de18:	00 04 00 0f 	move s0, 1
   4de1c:	3b 00 00 aa 	load_sync s1, (s27)
   4de20:	40 00 f0 c0 	move s2, s0
   4de24:	5b 00 00 8a 	store_sync s2, (s27)  
   4de28:	a2 ff ff f3 	bz s2, -12 <malloc+0xbdc>
   4de2c:	01 01 00 f2 	bz s1, 32 <malloc+0xc0c>
   4de30:	3b 00 00 a8 	load_32 s1, (s27)
   4de34:	e1 ff ff f5 	bnz s1, -4 <malloc+0xbf0>
   4de38:	3b 00 00 aa 	load_sync s1, (s27)
   4de3c:	40 00 f0 c0 	move s2, s0
   4de40:	5b 00 00 8a 	store_sync s2, (s27)  
   4de44:	a2 ff ff f3 	bz s2, -12 <malloc+0xbf8>
   4de48:	41 ff ff f5 	bnz s1, -24 <malloc+0xbf0>
   4de4c:	47 00 00 f4 	bnz s7, 8 <malloc+0xc14>
   4de50:	1e 00 00 f6 	b 120 <malloc+0xc88>
   4de54:	18 30 00 a8 	load_32 s0, 12(s24)
   4de58:	c0 00 00 0f 	move s6, 0
   4de5c:	39 20 00 a8 	load_32 s1, 8(s25)
   4de60:	5f fc 7f 4f 	movehi s2, 262143
   4de64:	05 00 60 c0 	sub_i s0, s5, s0
   4de68:	00 80 50 c0 	add_i s0, s0, s1
   4de6c:	26 80 60 c0 	sub_i s1, s6, s1
   4de70:	00 80 10 c0 	and s0, s0, s1
   4de74:	22 f8 7f 00 	or s1, s2, 8190
   4de78:	20 80 60 c1 	cmpgt_u s1, s0, s1
   4de7c:	01 2b 00 f4 	bnz s1, 1376 <malloc+0x119c>
   4de80:	be 30 00 88 	store_32 s5, 12(sp)
   4de84:	9e 70 00 88 	store_32 s4, 28(sp)
   4de88:	1e 50 00 88 	store_32 s0, 20(sp)
   4de8c:	fe 60 00 88 	store_32 s7, 24(sp)
   4de90:	1a 15 00 f8 	call 21608 <sbrk>
   4de94:	5e 60 00 a8 	load_32 s2, 24(sp)
   4de98:	22 00 00 a8 	load_32 s1, (s2)
   4de9c:	42 10 00 a8 	load_32 s2, 4(s2)
   4dea0:	40 01 f0 c0 	move s10, s0
   4dea4:	01 00 51 c0 	add_i s0, s1, s2
   4dea8:	0a 00 10 c1 	cmpne_i s0, s10, s0
   4deac:	40 06 00 f4 	bnz s0, 200 <malloc+0xd34>
   4deb0:	3e 51 00 a8 	load_32 s9, 20(sp)
   4deb4:	0a fc ff 10 	cmpeq_i s0, s10, -1
   4deb8:	c0 80 f4 c0 	move s6, s9
   4debc:	9e 70 00 a8 	load_32 s4, 28(sp)
   4dec0:	e0 28 00 f4 	bnz s0, 1308 <malloc+0x119c>
   4dec4:	4b 01 00 f6 	b 1324 <malloc+0x11b0>
   4dec8:	00 00 00 0f 	move s0, 0
   4decc:	be 30 00 88 	store_32 s5, 12(sp)
   4ded0:	9e 70 00 88 	store_32 s4, 28(sp)
   4ded4:	1e 40 00 88 	store_32 s0, 16(sp)
   4ded8:	08 15 00 f8 	call 21536 <sbrk>
   4dedc:	a0 00 f0 c0 	move s5, s0
   4dee0:	05 fc ff 10 	cmpeq_i s0, s5, -1
   4dee4:	80 0a 00 f4 	bnz s0, 336 <malloc+0xdf4>
   4dee8:	99 10 00 a8 	load_32 s4, 4(s25)
   4deec:	7e 70 00 a8 	load_32 s3, 28(sp)
   4def0:	24 fc ff 05 	add_i s1, s4, -1
   4def4:	00 80 f1 c0 	move s0, s3
   4def8:	41 80 12 c0 	and s2, s1, s5
   4defc:	e2 00 00 f2 	bz s2, 28 <malloc+0xcd8>
   4df00:	40 00 00 0f 	move s2, 0
   4df04:	21 80 52 c0 	add_i s1, s1, s5
   4df08:	63 80 62 c0 	sub_i s3, s3, s5
   4df0c:	02 00 62 c0 	sub_i s0, s2, s4
   4df10:	01 00 10 c0 	and s0, s1, s0
   4df14:	03 00 50 c0 	add_i s0, s3, s0
   4df18:	78 c0 06 a8 	load_32 s3, 432(s24)
   4df1c:	20 00 9d c1 	cmple_u s1, s0, s26
   4df20:	de 40 00 a8 	load_32 s6, 16(sp)
   4df24:	a1 25 00 f4 	bnz s1, 1204 <malloc+0x1198>
   4df28:	3f fc 7f 4f 	movehi s1, 262143
   4df2c:	9e 70 00 a8 	load_32 s4, 28(sp)
   4df30:	21 f8 7f 00 	or s1, s1, 8190
   4df34:	20 80 60 c1 	cmpgt_u s1, s0, s1
   4df38:	21 25 00 f4 	bnz s1, 1188 <malloc+0x119c>
   4df3c:	38 e0 06 a8 	load_32 s1, 440(s24)
   4df40:	c1 00 00 f2 	bz s1, 24 <malloc+0xd18>
   4df44:	43 00 50 c0 	add_i s2, s3, s0
   4df48:	62 80 91 c1 	cmple_u s3, s2, s3
   4df4c:	83 24 00 f4 	bnz s3, 1168 <malloc+0x119c>
   4df50:	22 80 60 c1 	cmpgt_u s1, s2, s1
   4df54:	41 24 00 f4 	bnz s1, 1160 <malloc+0x119c>
   4df58:	1e 50 00 88 	store_32 s0, 20(sp)
   4df5c:	be 60 00 88 	store_32 s5, 24(sp)
   4df60:	e6 14 00 f8 	call 21400 <sbrk>
   4df64:	3e 60 00 a8 	load_32 s1, 24(sp)
   4df68:	40 01 f0 c0 	move s10, s0
   4df6c:	0a 80 00 c1 	cmpeq_i s0, s10, s1
   4df70:	00 22 00 f4 	bnz s0, 1088 <malloc+0x1170>
   4df74:	9e 70 00 a8 	load_32 s4, 28(sp)
   4df78:	c0 00 00 0f 	move s6, 0
   4df7c:	3e 51 00 a8 	load_32 s9, 20(sp)
   4df80:	1e 80 00 a8 	load_32 s0, 32(sp)
   4df84:	00 80 94 c1 	cmple_u s0, s0, s9
   4df88:	20 1e 00 f4 	bnz s0, 964 <malloc+0x110c>
   4df8c:	1f fc 7f 4f 	movehi s0, 262143
   4df90:	60 f8 7f 00 	or s3, s0, 8190
   4df94:	29 80 61 c1 	cmpgt_u s1, s9, s3
   4df98:	a1 1d 00 f4 	bnz s1, 948 <malloc+0x110c>
   4df9c:	2a fc ff 10 	cmpeq_i s1, s10, -1
   4dfa0:	61 1d 00 f4 	bnz s1, 940 <malloc+0x110c>
   4dfa4:	3e 63 00 88 	store_32 s25, 24(sp)
   4dfa8:	39 20 00 a8 	load_32 s1, 8(s25)
   4dfac:	20 03 00 0f 	move s25, 0
   4dfb0:	5e 30 00 a8 	load_32 s2, 12(sp)
   4dfb4:	42 80 64 c0 	sub_i s2, s2, s9
   4dfb8:	42 80 50 c0 	add_i s2, s2, s1
   4dfbc:	39 80 60 c0 	sub_i s1, s25, s1
   4dfc0:	02 80 10 c0 	and s0, s2, s1
   4dfc4:	20 80 61 c1 	cmpgt_u s1, s0, s3
   4dfc8:	a1 1e 00 f4 	bnz s1, 980 <malloc+0x115c>
   4dfcc:	de 40 00 88 	store_32 s6, 16(sp)
   4dfd0:	9e 70 00 88 	store_32 s4, 28(sp)
   4dfd4:	5e 81 00 88 	store_32 s10, 32(sp)
   4dfd8:	1e 30 00 88 	store_32 s0, 12(sp)
   4dfdc:	c7 14 00 f8 	call 21276 <sbrk>
   4dfe0:	00 fc ff 10 	cmpeq_i s0, s0, -1
   4dfe4:	e0 1e 00 f4 	bnz s0, 988 <malloc+0x1180>
   4dfe8:	3e 51 00 a8 	load_32 s9, 20(sp)
   4dfec:	1e 30 00 a8 	load_32 s0, 12(sp)
   4dff0:	3e 63 00 a8 	load_32 s25, 24(sp)
   4dff4:	5e 81 00 a8 	load_32 s10, 32(sp)
   4dff8:	9e 70 00 a8 	load_32 s4, 28(sp)
   4dffc:	20 81 54 c0 	add_i s9, s0, s9
   4e000:	fc 00 00 f6 	b 1008 <malloc+0x11b0>
   4e004:	42 00 02 c0 	or s2, s2, s4
   4e008:	58 00 00 88 	store_32 s2, (s24)
   4e00c:	40 80 f0 c0 	move s2, s1
   4e010:	61 20 00 88 	store_32 s3, 8(s1)
   4e014:	60 23 00 05 	add_i s27, s0, 8
   4e018:	62 30 00 88 	store_32 s3, 12(s2)
   4e01c:	43 20 00 88 	store_32 s2, 8(s3)
   4e020:	23 30 00 88 	store_32 s1, 12(s3)
   4e024:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4e028:	00 08 00 01 	and s0, s0, 2
   4e02c:	20 e0 ff f3 	bz s0, -1020 <malloc+0x9f0>
   4e030:	fa fe ff f7 	b -1048 <malloc+0x9d8>
   4e034:	9e 70 00 a8 	load_32 s4, 28(sp)
   4e038:	de 40 00 a8 	load_32 s6, 16(sp)
   4e03c:	e8 00 00 f6 	b 928 <malloc+0x119c>
   4e040:	bf 0c 00 4f 	movehi s5, 127
   4e044:	ff 04 00 4f 	movehi s7, 63
   4e048:	1e 01 00 4f 	movehi s8, 30
   4e04c:	a5 00 7c 00 	or s5, s5, 7936
   4e050:	a6 80 52 c0 	add_i s5, s6, s5
   4e054:	e7 00 40 00 	or s7, s7, 4096
   4e058:	a5 40 00 0a 	shr s5, s5, 16
   4e05c:	a5 20 00 01 	and s5, s5, 8
   4e060:	c6 80 b2 c0 	shl s6, s6, s5
   4e064:	e6 80 53 c0 	add_i s7, s6, s7
   4e068:	e7 40 00 0a 	shr s7, s7, 16
   4e06c:	e7 10 00 01 	and s7, s7, 4
   4e070:	c6 80 b3 c0 	shl s6, s6, s7
   4e074:	a7 80 02 c0 	or s5, s7, s5
   4e078:	06 01 54 c0 	add_i s8, s6, s8
   4e07c:	08 41 00 0a 	shr s8, s8, 16
   4e080:	e8 08 00 01 	and s7, s8, 2
   4e084:	00 39 00 0f 	move s8, 14
   4e088:	a5 80 03 c0 	or s5, s5, s7
   4e08c:	c6 80 b3 c0 	shl s6, s6, s7
   4e090:	a8 80 62 c0 	sub_i s5, s8, s5
   4e094:	c6 3c 00 0a 	shr s6, s6, 15
   4e098:	a5 00 53 c0 	add_i s5, s5, s6
   4e09c:	c5 1c 00 05 	add_i s6, s5, 7
   4e0a0:	c2 00 a3 c0 	shr s6, s2, s6
   4e0a4:	a5 04 00 0b 	shl s5, s5, 1
   4e0a8:	c6 04 00 01 	and s6, s6, 1
   4e0ac:	a6 80 02 c0 	or s5, s6, s5
   4e0b0:	c5 08 00 0b 	shl s6, s5, 2
   4e0b4:	a3 70 00 88 	store_32 s5, 28(s3)
   4e0b8:	e0 04 00 0f 	move s7, 1
   4e0bc:	83 50 00 88 	store_32 s4, 20(s3)
   4e0c0:	d8 00 53 c0 	add_i s6, s24, s6
   4e0c4:	83 40 00 88 	store_32 s4, 16(s3)
   4e0c8:	e7 80 b2 c0 	shl s7, s7, s5
   4e0cc:	c6 c0 04 05 	add_i s6, s6, 304
   4e0d0:	01 81 13 c0 	and s8, s1, s7
   4e0d4:	48 00 00 f4 	bnz s8, 8 <malloc+0xe9c>
   4e0d8:	08 00 00 f6 	b 32 <malloc+0xeb8>
   4e0dc:	86 00 00 a8 	load_32 s4, (s6)
   4e0e0:	25 7c 00 10 	cmpeq_i s1, s5, 31
   4e0e4:	41 01 00 f4 	bnz s1, 40 <malloc+0xecc>
   4e0e8:	20 64 00 0f 	move s1, 25
   4e0ec:	a5 04 00 0a 	shr s5, s5, 1
   4e0f0:	21 80 62 c0 	sub_i s1, s1, s5
   4e0f4:	07 00 00 f6 	b 28 <malloc+0xed0>
   4e0f8:	21 80 03 c0 	or s1, s1, s7
   4e0fc:	38 10 00 88 	store_32 s1, 4(s24)
   4e100:	66 00 00 88 	store_32 s3, (s6)
   4e104:	c3 60 00 88 	store_32 s6, 24(s3)
   4e108:	14 00 00 f6 	b 80 <malloc+0xf18>
   4e10c:	20 00 00 0f 	move s1, 0
   4e110:	a2 80 b0 c0 	shl s5, s2, s1
   4e114:	20 00 f2 c0 	move s1, s4
   4e118:	81 10 00 a8 	load_32 s4, 4(s1)
   4e11c:	84 e0 ff 01 	and s4, s4, -8
   4e120:	84 00 01 c1 	cmpeq_i s4, s4, s2
   4e124:	84 02 00 f4 	bnz s4, 80 <malloc+0xf34>
   4e128:	85 74 00 0a 	shr s4, s5, 29
   4e12c:	a5 04 00 0b 	shl s5, s5, 1
   4e130:	84 10 00 01 	and s4, s4, 4
   4e134:	c1 00 52 c0 	add_i s6, s1, s4
   4e138:	86 40 00 a8 	load_32 s4, 16(s6)
   4e13c:	c4 fe ff f5 	bnz s4, -40 <malloc+0xed4>
   4e140:	98 40 00 a8 	load_32 s4, 16(s24)
   4e144:	46 40 00 05 	add_i s2, s6, 16
   4e148:	84 00 61 c1 	cmpgt_u s4, s4, s2
   4e14c:	c4 78 00 f4 	bnz s4, 3864 <malloc+0x1e24>
   4e150:	62 00 00 88 	store_32 s3, (s2)
   4e154:	23 60 00 88 	store_32 s1, 24(s3)
   4e158:	63 30 00 88 	store_32 s3, 12(s3)
   4e15c:	60 23 00 05 	add_i s27, s0, 8
   4e160:	63 20 00 88 	store_32 s3, 8(s3)
   4e164:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4e168:	00 08 00 01 	and s0, s0, 2
   4e16c:	20 d6 ff f3 	bz s0, -1340 <malloc+0x9f0>
   4e170:	aa fe ff f7 	b -1368 <malloc+0x9d8>
   4e174:	41 20 00 a8 	load_32 s2, 8(s1)
   4e178:	98 40 00 a8 	load_32 s4, 16(s24)
   4e17c:	a4 00 61 c1 	cmpgt_u s5, s4, s2
   4e180:	25 77 00 f4 	bnz s5, 3812 <malloc+0x1e24>
   4e184:	84 80 60 c1 	cmpgt_u s4, s4, s1
   4e188:	e4 76 00 f4 	bnz s4, 3804 <malloc+0x1e24>
   4e18c:	62 30 00 88 	store_32 s3, 12(s2)
   4e190:	60 23 00 05 	add_i s27, s0, 8
   4e194:	61 20 00 88 	store_32 s3, 8(s1)
   4e198:	43 20 00 88 	store_32 s2, 8(s3)
   4e19c:	23 30 00 88 	store_32 s1, 12(s3)
   4e1a0:	20 00 00 0f 	move s1, 0
   4e1a4:	23 60 00 88 	store_32 s1, 24(s3)
   4e1a8:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4e1ac:	00 08 00 01 	and s0, s0, 2
   4e1b0:	00 d4 ff f3 	bz s0, -1408 <malloc+0x9f0>
   4e1b4:	99 fe ff f7 	b -1436 <malloc+0x9d8>
   4e1b8:	42 41 00 a8 	load_32 s10, 16(s2)
   4e1bc:	4a 0f 00 f2 	bz s10, 488 <malloc+0x1164>
   4e1c0:	62 41 00 05 	add_i s11, s2, 16
   4e1c4:	00 01 f5 c0 	move s8, s10
   4e1c8:	48 51 00 a8 	load_32 s10, 20(s8)
   4e1cc:	80 81 f5 c0 	move s12, s11
   4e1d0:	68 51 00 05 	add_i s11, s8, 20
   4e1d4:	8a ff ff f5 	bnz s10, -16 <malloc+0xf84>
   4e1d8:	48 41 00 a8 	load_32 s10, 16(s8)
   4e1dc:	68 41 00 05 	add_i s11, s8, 16
   4e1e0:	2a ff ff f5 	bnz s10, -28 <malloc+0xf84>
   4e1e4:	29 01 66 c1 	cmpgt_u s9, s9, s12
   4e1e8:	e9 73 00 f4 	bnz s9, 3708 <malloc+0x1e24>
   4e1ec:	cc 00 00 88 	store_32 s6, (s12)
   4e1f0:	27 09 00 f2 	bz s7, 292 <malloc+0x10d4>
   4e1f4:	c2 70 00 a8 	load_32 s6, 28(s2)
   4e1f8:	26 09 00 0b 	shl s9, s6, 2
   4e1fc:	38 81 54 c0 	add_i s9, s24, s9
   4e200:	49 c1 04 a8 	load_32 s10, 304(s9)
   4e204:	42 01 15 c1 	cmpne_i s10, s2, s10
   4e208:	4a 00 00 f4 	bnz s10, 8 <malloc+0xfd0>
   4e20c:	0c 00 00 f6 	b 48 <malloc+0xffc>
   4e210:	b8 40 00 a8 	load_32 s5, 16(s24)
   4e214:	a5 80 63 c1 	cmpgt_u s5, s5, s7
   4e218:	65 72 00 f4 	bnz s5, 3660 <malloc+0x1e24>
   4e21c:	a7 40 00 a8 	load_32 s5, 16(s7)
   4e220:	a5 00 01 c1 	cmpeq_i s5, s5, s2
   4e224:	e5 04 00 f4 	bnz s5, 156 <malloc+0x1080>
   4e228:	a0 50 00 0f 	move s5, 20
   4e22c:	a7 80 52 c0 	add_i s5, s7, s5
   4e230:	05 01 00 88 	store_32 s8, (s5)
   4e234:	08 07 00 f2 	bz s8, 224 <malloc+0x10d4>
   4e238:	26 00 00 f6 	b 152 <malloc+0x1090>
   4e23c:	29 c1 04 05 	add_i s9, s9, 304
   4e240:	09 01 00 88 	store_32 s8, (s9)
   4e244:	68 04 00 f4 	bnz s8, 140 <malloc+0x1090>
   4e248:	e0 04 00 0f 	move s7, 1
   4e24c:	c7 00 b3 c0 	shl s6, s7, s6
   4e250:	c6 fc ff 03 	xor s6, s6, -1
   4e254:	a5 00 13 c0 	and s5, s5, s6
   4e258:	b8 10 00 88 	store_32 s5, 4(s24)
   4e25c:	a3 3c 00 16 	cmpgt_u s5, s3, 15
   4e260:	45 00 00 f4 	bnz s5, 8 <malloc+0x1028>
   4e264:	2e 00 00 f6 	b 184 <malloc+0x10dc>
   4e268:	ba 0c 00 00 	or s5, s26, 3
   4e26c:	a2 10 00 88 	store_32 s5, 4(s2)
   4e270:	a4 80 51 c0 	add_i s5, s4, s3
   4e274:	c3 04 00 00 	or s6, s3, 1
   4e278:	c4 10 00 88 	store_32 s6, 4(s4)
   4e27c:	65 00 00 88 	store_32 s3, (s5)
   4e280:	a1 07 00 f2 	bz s1, 244 <malloc+0x1134>
   4e284:	21 0c 00 0a 	shr s1, s1, 3
   4e288:	a0 04 00 0f 	move s5, 1
   4e28c:	e1 0c 00 0b 	shl s7, s1, 3
   4e290:	c5 80 b0 c0 	shl s6, s5, s1
   4e294:	38 50 00 a8 	load_32 s1, 20(s24)
   4e298:	b8 80 53 c0 	add_i s5, s24, s7
   4e29c:	e6 00 10 c0 	and s7, s6, s0
   4e2a0:	a5 a0 00 05 	add_i s5, s5, 40
   4e2a4:	47 00 00 f4 	bnz s7, 8 <malloc+0x106c>
   4e2a8:	2c 00 00 f6 	b 176 <malloc+0x1118>
   4e2ac:	05 20 00 a8 	load_32 s0, 8(s5)
   4e2b0:	d8 40 00 a8 	load_32 s6, 16(s24)
   4e2b4:	c6 00 90 c1 	cmple_u s6, s6, s0
   4e2b8:	66 05 00 f4 	bnz s6, 172 <malloc+0x1124>
   4e2bc:	6a 03 00 f6 	b 3496 <malloc+0x1e24>
   4e2c0:	a0 40 00 0f 	move s5, 16
   4e2c4:	a7 80 52 c0 	add_i s5, s7, s5
   4e2c8:	05 01 00 88 	store_32 s8, (s5)
   4e2cc:	48 02 00 f2 	bz s8, 72 <malloc+0x10d4>
   4e2d0:	b8 40 00 a8 	load_32 s5, 16(s24)
   4e2d4:	c5 00 64 c1 	cmpgt_u s6, s5, s8
   4e2d8:	66 6c 00 f4 	bnz s6, 3468 <malloc+0x1e24>
   4e2dc:	e8 60 00 88 	store_32 s7, 24(s8)
   4e2e0:	c2 40 00 a8 	load_32 s6, 16(s2)
   4e2e4:	a6 00 00 f2 	bz s6, 20 <malloc+0x10b8>
   4e2e8:	a5 00 63 c1 	cmpgt_u s5, s5, s6
   4e2ec:	c5 6b 00 f4 	bnz s5, 3448 <malloc+0x1e24>
   4e2f0:	c8 40 00 88 	store_32 s6, 16(s8)
   4e2f4:	06 61 00 88 	store_32 s8, 24(s6)
   4e2f8:	a2 50 00 a8 	load_32 s5, 20(s2)
   4e2fc:	c5 00 00 f2 	bz s5, 24 <malloc+0x10d4>
   4e300:	d8 40 00 a8 	load_32 s6, 16(s24)
   4e304:	c6 80 62 c1 	cmpgt_u s6, s6, s5
   4e308:	e6 6a 00 f4 	bnz s6, 3420 <malloc+0x1e24>
   4e30c:	a8 50 00 88 	store_32 s5, 20(s8)
   4e310:	05 61 00 88 	store_32 s8, 24(s5)
   4e314:	a3 3c 00 16 	cmpgt_u s5, s3, 15
   4e318:	85 fa ff f5 	bnz s5, -176 <malloc+0x1028>
   4e31c:	03 00 5d c0 	add_i s0, s3, s26
   4e320:	22 00 50 c0 	add_i s1, s2, s0
   4e324:	62 23 00 05 	add_i s27, s2, 8
   4e328:	00 0c 00 00 	or s0, s0, 3
   4e32c:	02 10 00 88 	store_32 s0, 4(s2)
   4e330:	01 10 00 a8 	load_32 s0, 4(s1)
   4e334:	00 04 00 00 	or s0, s0, 1
   4e338:	01 10 00 88 	store_32 s0, 4(s1)
   4e33c:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4e340:	00 08 00 01 	and s0, s0, 2
   4e344:	60 c7 ff f3 	bz s0, -1812 <malloc+0x9f0>
   4e348:	34 fe ff f7 	b -1840 <malloc+0x9d8>
   4e34c:	0a fc ff 11 	cmpne_i s0, s10, -1
   4e350:	00 05 00 f4 	bnz s0, 160 <malloc+0x11b0>
   4e354:	22 00 00 f6 	b 136 <malloc+0x119c>
   4e358:	06 00 00 c0 	or s0, s6, s0
   4e35c:	18 00 00 88 	store_32 s0, (s24)
   4e360:	00 80 f2 c0 	move s0, s5
   4e364:	25 20 00 88 	store_32 s1, 8(s5)
   4e368:	20 30 00 88 	store_32 s1, 12(s0)
   4e36c:	01 20 00 88 	store_32 s0, 8(s1)
   4e370:	a1 30 00 88 	store_32 s5, 12(s1)
   4e374:	78 20 00 88 	store_32 s3, 8(s24)
   4e378:	62 23 00 05 	add_i s27, s2, 8
   4e37c:	98 50 00 88 	store_32 s4, 20(s24)
   4e380:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4e384:	00 08 00 01 	and s0, s0, 2
   4e388:	40 c5 ff f3 	bz s0, -1880 <malloc+0x9f0>
   4e38c:	23 fe ff f7 	b -1908 <malloc+0x9d8>
   4e390:	a0 00 00 0f 	move s5, 0
   4e394:	04 d3 ff f3 	bz s4, -1440 <malloc+0xbb4>
   4e398:	43 fe ff f7 	b -1780 <malloc+0xa64>
   4e39c:	3e 63 00 a8 	load_32 s25, 24(sp)
   4e3a0:	14 00 00 f6 	b 80 <malloc+0x11b0>
   4e3a4:	00 01 f3 c0 	move s8, s6
   4e3a8:	67 fb ff f3 	bz s7, -148 <malloc+0x10d4>
   4e3ac:	92 ff ff f7 	b -440 <malloc+0xfb4>
   4e3b0:	40 81 f0 c0 	move s10, s1
   4e3b4:	3e 51 00 a8 	load_32 s9, 20(sp)
   4e3b8:	9e 70 00 a8 	load_32 s4, 28(sp)
   4e3bc:	0d 00 00 f6 	b 52 <malloc+0x11b0>
   4e3c0:	1e 50 00 a8 	load_32 s0, 20(sp)
   4e3c4:	3e 40 00 a8 	load_32 s1, 16(sp)
   4e3c8:	01 00 60 c0 	sub_i s0, s1, s0
   4e3cc:	cb 13 00 f8 	call 20268 <sbrk>
   4e3d0:	c0 80 fc c0 	move s6, s25
   4e3d4:	3e 63 00 a8 	load_32 s25, 24(sp)
   4e3d8:	9e 70 00 a8 	load_32 s4, 28(sp)
   4e3dc:	18 f0 06 a8 	load_32 s0, 444(s24)
   4e3e0:	40 fd ff 0f 	move s10, -1
   4e3e4:	00 10 00 00 	or s0, s0, 4
   4e3e8:	18 f0 06 88 	store_32 s0, 444(s24)
   4e3ec:	20 01 f3 c0 	move s9, s6
   4e3f0:	00 00 00 0f 	move s0, 0
   4e3f4:	3b 00 00 aa 	load_sync s1, (s27)
   4e3f8:	20 00 f0 c0 	move s1, s0
   4e3fc:	3b 00 00 8a 	store_sync s1, (s27)  
   4e400:	a1 ff ff f3 	bz s1, -12 <malloc+0x11b4>
   4e404:	1f fc 7f 4f 	movehi s0, 262143
   4e408:	00 f8 7f 00 	or s0, s0, 8190
   4e40c:	04 00 60 c1 	cmpgt_u s0, s4, s0
   4e410:	40 05 00 f4 	bnz s0, 168 <malloc+0x1278>
   4e414:	0a fc ff 11 	cmpne_i s0, s10, -1
   4e418:	00 05 00 f4 	bnz s0, 160 <malloc+0x1278>
   4e41c:	00 0c 00 4f 	movehi s0, 96
   4e420:	3e 63 00 88 	store_32 s25, 24(sp)
   4e424:	20 d3 5d 00 	or s25, s0, 6004
   4e428:	00 04 00 0f 	move s0, 1
   4e42c:	39 00 00 aa 	load_sync s1, (s25)
   4e430:	40 00 f0 c0 	move s2, s0
   4e434:	59 00 00 8a 	store_sync s2, (s25)  
   4e438:	a2 ff ff f3 	bz s2, -12 <malloc+0x11ec>
   4e43c:	01 01 00 f2 	bz s1, 32 <malloc+0x121c>
   4e440:	39 00 00 a8 	load_32 s1, (s25)
   4e444:	e1 ff ff f5 	bnz s1, -4 <malloc+0x1200>
   4e448:	39 00 00 aa 	load_sync s1, (s25)
   4e44c:	40 00 f0 c0 	move s2, s0
   4e450:	59 00 00 8a 	store_sync s2, (s25)  
   4e454:	a2 ff ff f3 	bz s2, -12 <malloc+0x1208>
   4e458:	41 ff ff f5 	bnz s1, -24 <malloc+0x1200>
   4e45c:	00 00 f2 c0 	move s0, s4
   4e460:	a6 13 00 f8 	call 20120 <sbrk>
   4e464:	60 03 00 0f 	move s27, 0
   4e468:	1e 80 00 88 	store_32 s0, 32(sp)
   4e46c:	00 80 fd c0 	move s0, s27
   4e470:	a2 13 00 f8 	call 20104 <sbrk>
   4e474:	39 00 00 aa 	load_sync s1, (s25)
   4e478:	20 80 fd c0 	move s1, s27
   4e47c:	39 00 00 8a 	store_sync s1, (s25)  
   4e480:	a1 ff ff f3 	bz s1, -12 <malloc+0x1234>
   4e484:	5e 81 00 a8 	load_32 s10, 32(sp)
   4e488:	2a 00 70 c1 	cmpge_u s1, s10, s0
   4e48c:	01 bc ff f5 	bnz s1, -2176 <malloc+0x9cc>
   4e490:	2a fc ff 10 	cmpeq_i s1, s10, -1
   4e494:	c1 bb ff f5 	bnz s1, -2184 <malloc+0x9cc>
   4e498:	20 fc ff 10 	cmpeq_i s1, s0, -1
   4e49c:	81 bb ff f5 	bnz s1, -2192 <malloc+0x9cc>
   4e4a0:	20 01 65 c0 	sub_i s9, s0, s10
   4e4a4:	3e 63 00 a8 	load_32 s25, 24(sp)
   4e4a8:	1a a0 00 05 	add_i s0, s26, 40
   4e4ac:	09 00 60 c1 	cmpgt_u s0, s9, s0
   4e4b0:	80 00 00 f4 	bnz s0, 16 <malloc+0x1280>
   4e4b4:	d6 fd ff f7 	b -2216 <malloc+0x9cc>
   4e4b8:	0a fc ff 10 	cmpeq_i s0, s10, -1
   4e4bc:	80 3b 00 f4 	bnz s0, 1904 <malloc+0x19ec>
   4e4c0:	18 c0 06 a8 	load_32 s0, 432(s24)
   4e4c4:	00 80 54 c0 	add_i s0, s0, s9
   4e4c8:	18 c0 06 88 	store_32 s0, 432(s24)
   4e4cc:	38 d0 06 a8 	load_32 s1, 436(s24)
   4e4d0:	20 80 90 c1 	cmple_u s1, s0, s1
   4e4d4:	41 00 00 f4 	bnz s1, 8 <malloc+0x129c>
   4e4d8:	18 d0 06 88 	store_32 s0, 436(s24)
   4e4dc:	58 60 00 a8 	load_32 s2, 24(s24)
   4e4e0:	42 01 00 f2 	bz s2, 40 <malloc+0x12c8>
   4e4e4:	18 10 07 05 	add_i s0, s24, 452
   4e4e8:	60 00 00 a8 	load_32 s3, (s0)
   4e4ec:	20 10 00 a8 	load_32 s1, 4(s0)
   4e4f0:	83 80 50 c0 	add_i s4, s3, s1
   4e4f4:	8a 00 02 c1 	cmpeq_i s4, s10, s4
   4e4f8:	04 11 00 f4 	bnz s4, 544 <malloc+0x14d8>
   4e4fc:	00 20 00 a8 	load_32 s0, 8(s0)
   4e500:	20 13 00 f2 	bz s0, 612 <malloc+0x1524>
   4e504:	f9 ff ff f7 	b -28 <malloc+0x12a8>
   4e508:	18 40 00 a8 	load_32 s0, 16(s24)
   4e50c:	60 00 00 f2 	bz s0, 12 <malloc+0x12d8>
   4e510:	0a 00 70 c1 	cmpge_u s0, s10, s0
   4e514:	40 00 00 f4 	bnz s0, 8 <malloc+0x12dc>
   4e518:	58 41 00 88 	store_32 s10, 16(s24)
   4e51c:	58 11 07 88 	store_32 s10, 452(s24)
   4e520:	00 00 00 0f 	move s0, 0
   4e524:	38 21 07 88 	store_32 s9, 456(s24)
   4e528:	4a 20 00 05 	add_i s2, s10, 8
   4e52c:	18 40 07 88 	store_32 s0, 464(s24)
   4e530:	39 00 00 a8 	load_32 s1, (s25)
   4e534:	38 90 00 88 	store_32 s1, 36(s24)
   4e538:	20 fc ff 0f 	move s1, -1
   4e53c:	38 80 00 88 	store_32 s1, 32(s24)
   4e540:	38 a0 00 05 	add_i s1, s24, 40
   4e544:	38 d0 00 88 	store_32 s1, 52(s24)
   4e548:	42 1c 00 01 	and s2, s2, 7
   4e54c:	38 c0 00 88 	store_32 s1, 48(s24)
   4e550:	38 c0 00 05 	add_i s1, s24, 48
   4e554:	38 f0 00 88 	store_32 s1, 60(s24)
   4e558:	38 e0 00 88 	store_32 s1, 56(s24)
   4e55c:	38 e0 00 05 	add_i s1, s24, 56
   4e560:	38 10 01 88 	store_32 s1, 68(s24)
   4e564:	42 00 00 10 	cmpeq_i s2, s2, 0
   4e568:	38 00 01 88 	store_32 s1, 64(s24)
   4e56c:	38 00 01 05 	add_i s1, s24, 64
   4e570:	38 30 01 88 	store_32 s1, 76(s24)
   4e574:	38 20 01 88 	store_32 s1, 72(s24)
   4e578:	38 20 01 05 	add_i s1, s24, 72
   4e57c:	38 50 01 88 	store_32 s1, 84(s24)
   4e580:	38 40 01 88 	store_32 s1, 80(s24)
   4e584:	38 40 01 05 	add_i s1, s24, 80
   4e588:	38 70 01 88 	store_32 s1, 92(s24)
   4e58c:	38 60 01 88 	store_32 s1, 88(s24)
   4e590:	38 60 01 05 	add_i s1, s24, 88
   4e594:	38 90 01 88 	store_32 s1, 100(s24)
   4e598:	38 80 01 88 	store_32 s1, 96(s24)
   4e59c:	38 80 01 05 	add_i s1, s24, 96
   4e5a0:	38 b0 01 88 	store_32 s1, 108(s24)
   4e5a4:	38 a0 01 88 	store_32 s1, 104(s24)
   4e5a8:	38 a0 01 05 	add_i s1, s24, 104
   4e5ac:	38 d0 01 88 	store_32 s1, 116(s24)
   4e5b0:	38 c0 01 88 	store_32 s1, 112(s24)
   4e5b4:	38 c0 01 05 	add_i s1, s24, 112
   4e5b8:	38 f0 01 88 	store_32 s1, 124(s24)
   4e5bc:	38 e0 01 88 	store_32 s1, 120(s24)
   4e5c0:	38 e0 01 05 	add_i s1, s24, 120
   4e5c4:	38 10 02 88 	store_32 s1, 132(s24)
   4e5c8:	38 00 02 88 	store_32 s1, 128(s24)
   4e5cc:	38 00 02 05 	add_i s1, s24, 128
   4e5d0:	38 30 02 88 	store_32 s1, 140(s24)
   4e5d4:	38 20 02 88 	store_32 s1, 136(s24)
   4e5d8:	38 20 02 05 	add_i s1, s24, 136
   4e5dc:	38 50 02 88 	store_32 s1, 148(s24)
   4e5e0:	38 40 02 88 	store_32 s1, 144(s24)
   4e5e4:	38 40 02 05 	add_i s1, s24, 144
   4e5e8:	38 70 02 88 	store_32 s1, 156(s24)
   4e5ec:	38 60 02 88 	store_32 s1, 152(s24)
   4e5f0:	38 60 02 05 	add_i s1, s24, 152
   4e5f4:	38 90 02 88 	store_32 s1, 164(s24)
   4e5f8:	38 80 02 88 	store_32 s1, 160(s24)
   4e5fc:	38 80 02 05 	add_i s1, s24, 160
   4e600:	38 b0 02 88 	store_32 s1, 172(s24)
   4e604:	38 a0 02 88 	store_32 s1, 168(s24)
   4e608:	38 a0 02 05 	add_i s1, s24, 168
   4e60c:	38 d0 02 88 	store_32 s1, 180(s24)
   4e610:	38 c0 02 88 	store_32 s1, 176(s24)
   4e614:	38 c0 02 05 	add_i s1, s24, 176
   4e618:	38 f0 02 88 	store_32 s1, 188(s24)
   4e61c:	38 e0 02 88 	store_32 s1, 184(s24)
   4e620:	38 e0 02 05 	add_i s1, s24, 184
   4e624:	38 10 03 88 	store_32 s1, 196(s24)
   4e628:	38 00 03 88 	store_32 s1, 192(s24)
   4e62c:	38 00 03 05 	add_i s1, s24, 192
   4e630:	38 30 03 88 	store_32 s1, 204(s24)
   4e634:	38 20 03 88 	store_32 s1, 200(s24)
   4e638:	38 20 03 05 	add_i s1, s24, 200
   4e63c:	38 50 03 88 	store_32 s1, 212(s24)
   4e640:	38 40 03 88 	store_32 s1, 208(s24)
   4e644:	38 40 03 05 	add_i s1, s24, 208
   4e648:	38 70 03 88 	store_32 s1, 220(s24)
   4e64c:	38 60 03 88 	store_32 s1, 216(s24)
   4e650:	38 60 03 05 	add_i s1, s24, 216
   4e654:	38 90 03 88 	store_32 s1, 228(s24)
   4e658:	38 80 03 88 	store_32 s1, 224(s24)
   4e65c:	38 80 03 05 	add_i s1, s24, 224
   4e660:	38 b0 03 88 	store_32 s1, 236(s24)
   4e664:	38 a0 03 88 	store_32 s1, 232(s24)
   4e668:	38 a0 03 05 	add_i s1, s24, 232
   4e66c:	38 d0 03 88 	store_32 s1, 244(s24)
   4e670:	38 c0 03 88 	store_32 s1, 240(s24)
   4e674:	38 c0 03 05 	add_i s1, s24, 240
   4e678:	38 f0 03 88 	store_32 s1, 252(s24)
   4e67c:	38 e0 03 88 	store_32 s1, 248(s24)
   4e680:	38 e0 03 05 	add_i s1, s24, 248
   4e684:	38 10 04 88 	store_32 s1, 260(s24)
   4e688:	38 00 04 88 	store_32 s1, 256(s24)
   4e68c:	38 00 04 05 	add_i s1, s24, 256
   4e690:	38 30 04 88 	store_32 s1, 268(s24)
   4e694:	38 20 04 88 	store_32 s1, 264(s24)
   4e698:	38 20 04 05 	add_i s1, s24, 264
   4e69c:	38 50 04 88 	store_32 s1, 276(s24)
   4e6a0:	38 40 04 88 	store_32 s1, 272(s24)
   4e6a4:	38 40 04 05 	add_i s1, s24, 272
   4e6a8:	38 70 04 88 	store_32 s1, 284(s24)
   4e6ac:	38 60 04 88 	store_32 s1, 280(s24)
   4e6b0:	38 60 04 05 	add_i s1, s24, 280
   4e6b4:	38 90 04 88 	store_32 s1, 292(s24)
   4e6b8:	38 80 04 88 	store_32 s1, 288(s24)
   4e6bc:	38 80 04 05 	add_i s1, s24, 288
   4e6c0:	38 b0 04 88 	store_32 s1, 300(s24)
   4e6c4:	38 a0 04 88 	store_32 s1, 296(s24)
   4e6c8:	29 60 ff 05 	add_i s1, s9, -40
   4e6cc:	82 00 00 f4 	bnz s2, 16 <malloc+0x149c>
   4e6d0:	00 e0 ff 0f 	move s0, -8
   4e6d4:	00 00 65 c0 	sub_i s0, s0, s10
   4e6d8:	00 1c 00 01 	and s0, s0, 7
   4e6dc:	4a 00 50 c0 	add_i s2, s10, s0
   4e6e0:	58 60 00 88 	store_32 s2, 24(s24)
   4e6e4:	01 00 60 c0 	sub_i s0, s1, s0
   4e6e8:	18 30 00 88 	store_32 s0, 12(s24)
   4e6ec:	2a 80 50 c0 	add_i s1, s10, s1
   4e6f0:	00 04 00 00 	or s0, s0, 1
   4e6f4:	02 10 00 88 	store_32 s0, 4(s2)
   4e6f8:	00 a0 00 0f 	move s0, 40
   4e6fc:	01 10 00 88 	store_32 s0, 4(s1)
   4e700:	19 40 00 a8 	load_32 s0, 16(s25)
   4e704:	18 70 00 88 	store_32 s0, 28(s24)
   4e708:	18 30 00 a8 	load_32 s0, 12(s24)
   4e70c:	20 00 9d c1 	cmple_u s1, s0, s26
   4e710:	e1 28 00 f4 	bnz s1, 1308 <malloc+0x19ec>
   4e714:	92 fc ff f7 	b -3512 <malloc+0x71c>
   4e718:	80 30 00 a0 	load_u8 s4, 12(s0)
   4e71c:	84 20 00 01 	and s4, s4, 8
   4e720:	24 02 00 f4 	bnz s4, 68 <malloc+0x1524>
   4e724:	8a 00 91 c1 	cmple_u s4, s10, s2
   4e728:	e4 01 00 f4 	bnz s4, 60 <malloc+0x1524>
   4e72c:	63 00 61 c1 	cmpgt_u s3, s3, s2
   4e730:	a3 01 00 f4 	bnz s3, 52 <malloc+0x1524>
   4e734:	62 20 00 05 	add_i s3, s2, 8
   4e738:	21 80 54 c0 	add_i s1, s1, s9
   4e73c:	20 10 00 88 	store_32 s1, 4(s0)
   4e740:	18 30 00 a8 	load_32 s0, 12(s24)
   4e744:	23 1c 00 01 	and s1, s3, 7
   4e748:	21 00 00 10 	cmpeq_i s1, s1, 0
   4e74c:	00 80 54 c0 	add_i s0, s0, s9
   4e750:	81 27 00 f4 	bnz s1, 1264 <malloc+0x1a00>
   4e754:	20 e0 ff 0f 	move s1, -8
   4e758:	21 00 61 c0 	sub_i s1, s1, s2
   4e75c:	21 1c 00 01 	and s1, s1, 7
   4e760:	39 01 00 f6 	b 1252 <malloc+0x1a04>
   4e764:	b8 40 00 a8 	load_32 s5, 16(s24)
   4e768:	0a 80 72 c1 	cmpge_u s0, s10, s5
   4e76c:	60 00 00 f4 	bnz s0, 12 <malloc+0x1538>
   4e770:	58 41 00 88 	store_32 s10, 16(s24)
   4e774:	a0 00 f5 c0 	move s5, s10
   4e778:	2a 80 54 c0 	add_i s1, s10, s9
   4e77c:	18 10 07 05 	add_i s0, s24, 452
   4e780:	60 00 00 a8 	load_32 s3, (s0)
   4e784:	63 80 00 c1 	cmpeq_i s3, s3, s1
   4e788:	83 00 00 f4 	bnz s3, 16 <malloc+0x1558>
   4e78c:	00 20 00 a8 	load_32 s0, 8(s0)
   4e790:	e0 08 00 f2 	bz s0, 284 <malloc+0x166c>
   4e794:	fb ff ff f7 	b -20 <malloc+0x1540>
   4e798:	60 30 00 a0 	load_u8 s3, 12(s0)
   4e79c:	63 20 00 01 	and s3, s3, 8
   4e7a0:	43 00 00 f2 	bz s3, 8 <malloc+0x1568>
   4e7a4:	42 00 00 f6 	b 264 <malloc+0x166c>
   4e7a8:	40 01 00 88 	store_32 s10, (s0)
   4e7ac:	8a 20 00 05 	add_i s4, s10, 8
   4e7b0:	60 10 00 a8 	load_32 s3, 4(s0)
   4e7b4:	84 1c 00 01 	and s4, s4, 7
   4e7b8:	63 80 54 c0 	add_i s3, s3, s9
   4e7bc:	60 10 00 88 	store_32 s3, 4(s0)
   4e7c0:	60 00 00 0f 	move s3, 0
   4e7c4:	c4 00 00 10 	cmpeq_i s6, s4, 0
   4e7c8:	80 e0 ff 0f 	move s4, -8
   4e7cc:	00 80 f1 c0 	move s0, s3
   4e7d0:	66 00 00 f4 	bnz s6, 12 <malloc+0x159c>
   4e7d4:	04 00 65 c0 	sub_i s0, s4, s10
   4e7d8:	00 1c 00 01 	and s0, s0, 7
   4e7dc:	c1 20 00 05 	add_i s6, s1, 8
   4e7e0:	0a 00 50 c0 	add_i s0, s10, s0
   4e7e4:	c6 1c 00 01 	and s6, s6, 7
   4e7e8:	c6 00 00 10 	cmpeq_i s6, s6, 0
   4e7ec:	66 00 00 f4 	bnz s6, 12 <malloc+0x15b8>
   4e7f0:	64 80 60 c0 	sub_i s3, s4, s1
   4e7f4:	63 1c 00 01 	and s3, s3, 7
   4e7f8:	81 80 51 c0 	add_i s4, s1, s3
   4e7fc:	20 00 5d c0 	add_i s1, s0, s26
   4e800:	42 00 12 c1 	cmpne_i s2, s2, s4
   4e804:	64 00 60 c0 	sub_i s3, s4, s0
   4e808:	da 0c 00 00 	or s6, s26, 3
   4e80c:	c0 10 00 88 	store_32 s6, 4(s0)
   4e810:	63 00 6d c0 	sub_i s3, s3, s26
   4e814:	42 00 00 f4 	bnz s2, 8 <malloc+0x15dc>
   4e818:	93 00 00 f6 	b 588 <malloc+0x1824>
   4e81c:	58 50 00 a8 	load_32 s2, 20(s24)
   4e820:	42 00 12 c1 	cmpne_i s2, s2, s4
   4e824:	42 00 00 f4 	bnz s2, 8 <malloc+0x15ec>
   4e828:	11 01 00 f6 	b 1092 <malloc+0x1a2c>
   4e82c:	44 10 00 a8 	load_32 s2, 4(s4)
   4e830:	c2 0c 00 01 	and s6, s2, 3
   4e834:	c6 04 00 11 	cmpne_i s6, s6, 1
   4e838:	66 2f 00 f4 	bnz s6, 1516 <malloc+0x1be4>
   4e83c:	c2 fc 03 16 	cmpgt_u s6, s2, 255
   4e840:	06 23 00 f4 	bnz s6, 1120 <malloc+0x1a60>
   4e844:	02 0d 00 0a 	shr s8, s2, 3
   4e848:	c4 20 00 a8 	load_32 s6, 8(s4)
   4e84c:	e8 0c 00 0b 	shl s7, s8, 3
   4e850:	f8 80 53 c0 	add_i s7, s24, s7
   4e854:	27 a1 00 05 	add_i s9, s7, 40
   4e858:	e4 30 00 a8 	load_32 s7, 12(s4)
   4e85c:	46 81 04 c1 	cmpeq_i s10, s6, s9
   4e860:	ca 00 00 f4 	bnz s10, 24 <malloc+0x1638>
   4e864:	45 01 63 c1 	cmpgt_u s10, s5, s6
   4e868:	ea 3f 00 f4 	bnz s10, 2044 <malloc+0x1e24>
   4e86c:	46 31 00 a8 	load_32 s10, 12(s6)
   4e870:	4a 01 12 c1 	cmpne_i s10, s10, s4
   4e874:	8a 3f 00 f4 	bnz s10, 2032 <malloc+0x1e24>
   4e878:	47 01 13 c1 	cmpne_i s10, s7, s6
   4e87c:	4a 00 00 f4 	bnz s10, 8 <malloc+0x1644>
   4e880:	19 01 00 f6 	b 1124 <malloc+0x1aa4>
   4e884:	07 81 04 c1 	cmpeq_i s8, s7, s9
   4e888:	c8 00 00 f4 	bnz s8, 24 <malloc+0x1660>
   4e88c:	a5 80 63 c1 	cmpgt_u s5, s5, s7
   4e890:	a5 3e 00 f4 	bnz s5, 2004 <malloc+0x1e24>
   4e894:	a7 20 00 a8 	load_32 s5, 8(s7)
   4e898:	a5 00 12 c1 	cmpne_i s5, s5, s4
   4e89c:	45 3e 00 f4 	bnz s5, 1992 <malloc+0x1e24>
   4e8a0:	e6 30 00 88 	store_32 s7, 12(s6)
   4e8a4:	c7 20 00 88 	store_32 s6, 8(s7)
   4e8a8:	5c 01 00 f6 	b 1392 <malloc+0x1bd8>
   4e8ac:	38 10 07 05 	add_i s1, s24, 452
   4e8b0:	01 00 00 a8 	load_32 s0, (s1)
   4e8b4:	60 00 61 c1 	cmpgt_u s3, s0, s2
   4e8b8:	43 00 00 f4 	bnz s3, 8 <malloc+0x1680>
   4e8bc:	05 00 00 f6 	b 20 <malloc+0x1690>
   4e8c0:	21 20 00 a8 	load_32 s1, 8(s1)
   4e8c4:	01 00 00 a8 	load_32 s0, (s1)
   4e8c8:	60 00 61 c1 	cmpgt_u s3, s0, s2
   4e8cc:	a3 ff ff f5 	bnz s3, -12 <malloc+0x1680>
   4e8d0:	61 10 00 a8 	load_32 s3, 4(s1)
   4e8d4:	00 80 51 c0 	add_i s0, s0, s3
   4e8d8:	60 00 61 c1 	cmpgt_u s3, s0, s2
   4e8dc:	43 00 00 f4 	bnz s3, 8 <malloc+0x16a4>
   4e8e0:	f8 ff ff f7 	b -32 <malloc+0x1680>
   4e8e4:	20 64 ff 05 	add_i s1, s0, -39
   4e8e8:	60 00 00 0f 	move s3, 0
   4e8ec:	21 1c 00 01 	and s1, s1, 7
   4e8f0:	81 00 00 10 	cmpeq_i s4, s1, 0
   4e8f4:	20 80 f1 c0 	move s1, s3
   4e8f8:	84 00 00 f4 	bnz s4, 16 <malloc+0x16c8>
   4e8fc:	20 9c 00 0f 	move s1, 39
   4e900:	21 00 60 c0 	sub_i s1, s1, s0
   4e904:	21 1c 00 01 	and s1, s1, 7
   4e908:	20 80 50 c0 	add_i s1, s0, s1
   4e90c:	81 44 ff 05 	add_i s4, s1, -47
   4e910:	22 40 00 05 	add_i s1, s2, 16
   4e914:	a4 80 80 c1 	cmplt_u s5, s4, s1
   4e918:	20 00 f1 c0 	move s1, s2
   4e91c:	45 00 00 f4 	bnz s5, 8 <malloc+0x16e4>
   4e920:	20 00 f2 c0 	move s1, s4
   4e924:	8a 20 00 05 	add_i s4, s10, 8
   4e928:	a1 20 00 05 	add_i s5, s1, 8
   4e92c:	c9 60 ff 05 	add_i s6, s9, -40
   4e930:	84 1c 00 01 	and s4, s4, 7
   4e934:	e0 80 f1 c0 	move s7, s3
   4e938:	84 00 00 10 	cmpeq_i s4, s4, 0
   4e93c:	84 00 00 f4 	bnz s4, 16 <malloc+0x170c>
   4e940:	80 e0 ff 0f 	move s4, -8
   4e944:	84 00 65 c0 	sub_i s4, s4, s10
   4e948:	e4 1c 00 01 	and s7, s4, 7
   4e94c:	0a 81 53 c0 	add_i s8, s10, s7
   4e950:	18 61 00 88 	store_32 s8, 24(s24)
   4e954:	e6 80 63 c0 	sub_i s7, s6, s7
   4e958:	f8 30 00 88 	store_32 s7, 12(s24)
   4e95c:	ca 00 53 c0 	add_i s6, s10, s6
   4e960:	81 60 00 05 	add_i s4, s1, 24
   4e964:	e7 04 00 00 	or s7, s7, 1
   4e968:	e8 10 00 88 	store_32 s7, 4(s8)
   4e96c:	e0 a0 00 0f 	move s7, 40
   4e970:	e6 10 00 88 	store_32 s7, 4(s6)
   4e974:	d9 40 00 a8 	load_32 s6, 16(s25)
   4e978:	d8 70 00 88 	store_32 s6, 28(s24)
   4e97c:	c0 6c 00 0f 	move s6, 27
   4e980:	c1 10 00 88 	store_32 s6, 4(s1)
   4e984:	d8 40 07 a8 	load_32 s6, 464(s24)
   4e988:	c1 50 00 88 	store_32 s6, 20(s1)
   4e98c:	d8 30 07 a8 	load_32 s6, 460(s24)
   4e990:	c1 40 00 88 	store_32 s6, 16(s1)
   4e994:	d8 20 07 a8 	load_32 s6, 456(s24)
   4e998:	c1 30 00 88 	store_32 s6, 12(s1)
   4e99c:	d8 10 07 a8 	load_32 s6, 452(s24)
   4e9a0:	c1 20 00 88 	store_32 s6, 8(s1)
   4e9a4:	58 11 07 88 	store_32 s10, 452(s24)
   4e9a8:	38 21 07 88 	store_32 s9, 456(s24)
   4e9ac:	78 40 07 88 	store_32 s3, 464(s24)
   4e9b0:	60 1c 00 0f 	move s3, 7
   4e9b4:	b8 30 07 88 	store_32 s5, 460(s24)
   4e9b8:	a4 20 00 05 	add_i s5, s4, 8
   4e9bc:	64 10 00 88 	store_32 s3, 4(s4)
   4e9c0:	c4 10 00 05 	add_i s6, s4, 4
   4e9c4:	a5 00 80 c1 	cmplt_u s5, s5, s0
   4e9c8:	80 00 f3 c0 	move s4, s6
   4e9cc:	65 ff ff f5 	bnz s5, -20 <malloc+0x1778>
   4e9d0:	01 00 01 c1 	cmpeq_i s0, s1, s2
   4e9d4:	40 12 00 f4 	bnz s0, 584 <malloc+0x19dc>
   4e9d8:	61 10 00 a8 	load_32 s3, 4(s1)
   4e9dc:	01 00 61 c0 	sub_i s0, s1, s2
   4e9e0:	63 f8 ff 01 	and s3, s3, -2
   4e9e4:	61 10 00 88 	store_32 s3, 4(s1)
   4e9e8:	60 04 00 00 	or s3, s0, 1
   4e9ec:	62 10 00 88 	store_32 s3, 4(s2)
   4e9f0:	60 fc 03 16 	cmpgt_u s3, s0, 255
   4e9f4:	01 00 00 88 	store_32 s0, (s1)
   4e9f8:	03 02 00 f4 	bnz s3, 64 <malloc+0x17f8>
   4e9fc:	00 0c 00 0a 	shr s0, s0, 3
   4ea00:	38 00 00 a8 	load_32 s1, (s24)
   4ea04:	60 04 00 0f 	move s3, 1
   4ea08:	80 0c 00 0b 	shl s4, s0, 3
   4ea0c:	98 00 52 c0 	add_i s4, s24, s4
   4ea10:	63 00 b0 c0 	shl s3, s3, s0
   4ea14:	a1 80 11 c0 	and s5, s1, s3
   4ea18:	04 a0 00 05 	add_i s0, s4, 40
   4ea1c:	45 00 00 f4 	bnz s5, 8 <malloc+0x17e4>
   4ea20:	1c 00 00 f6 	b 112 <malloc+0x1850>
   4ea24:	20 20 00 a8 	load_32 s1, 8(s0)
   4ea28:	78 40 00 a8 	load_32 s3, 16(s24)
   4ea2c:	63 80 90 c1 	cmple_u s3, s3, s1
   4ea30:	63 03 00 f4 	bnz s3, 108 <malloc+0x185c>
   4ea34:	8c 01 00 f6 	b 1584 <malloc+0x1e24>
   4ea38:	20 00 00 0f 	move s1, 0
   4ea3c:	80 20 00 0a 	shr s4, s0, 8
   4ea40:	60 80 f0 c0 	move s3, s1
   4ea44:	44 07 00 f2 	bz s4, 232 <malloc+0x18ec>
   4ea48:	7f fc 00 4f 	movehi s3, 2047
   4ea4c:	63 fc 7f 00 	or s3, s3, 8191
   4ea50:	60 80 61 c1 	cmpgt_u s3, s0, s3
   4ea54:	43 00 00 f4 	bnz s3, 8 <malloc+0x181c>
   4ea58:	19 00 00 f6 	b 100 <malloc+0x187c>
   4ea5c:	60 7c 00 0f 	move s3, 31
   4ea60:	33 00 00 f6 	b 204 <malloc+0x18ec>
   4ea64:	58 30 00 a8 	load_32 s2, 12(s24)
   4ea68:	60 23 00 05 	add_i s27, s0, 8
   4ea6c:	42 80 51 c0 	add_i s2, s2, s3
   4ea70:	58 30 00 88 	store_32 s2, 12(s24)
   4ea74:	38 60 00 88 	store_32 s1, 24(s24)
   4ea78:	42 04 00 00 	or s2, s2, 1
   4ea7c:	41 10 00 88 	store_32 s2, 4(s1)
   4ea80:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4ea84:	00 08 00 01 	and s0, s0, 2
   4ea88:	40 8d ff f3 	bz s0, -3672 <malloc+0x9f0>
   4ea8c:	63 fc ff f7 	b -3700 <malloc+0x9d8>
   4ea90:	21 80 01 c0 	or s1, s1, s3
   4ea94:	38 00 00 88 	store_32 s1, (s24)
   4ea98:	20 00 f0 c0 	move s1, s0
   4ea9c:	40 20 00 88 	store_32 s2, 8(s0)
   4eaa0:	41 30 00 88 	store_32 s2, 12(s1)
   4eaa4:	22 20 00 88 	store_32 s1, 8(s2)
   4eaa8:	02 30 00 88 	store_32 s0, 12(s2)
   4eaac:	18 30 00 a8 	load_32 s0, 12(s24)
   4eab0:	20 00 9d c1 	cmple_u s1, s0, s26
   4eab4:	c1 0b 00 f4 	bnz s1, 376 <malloc+0x19ec>
   4eab8:	a9 fb ff f7 	b -4444 <malloc+0x71c>
   4eabc:	7f 0c 00 4f 	movehi s3, 127
   4eac0:	bf 04 00 4f 	movehi s5, 63
   4eac4:	de 00 00 4f 	movehi s6, 30
   4eac8:	63 00 7c 00 	or s3, s3, 7936
   4eacc:	64 80 51 c0 	add_i s3, s4, s3
   4ead0:	a5 00 40 00 	or s5, s5, 4096
   4ead4:	63 40 00 0a 	shr s3, s3, 16
   4ead8:	63 20 00 01 	and s3, s3, 8
   4eadc:	84 80 b1 c0 	shl s4, s4, s3
   4eae0:	a4 80 52 c0 	add_i s5, s4, s5
   4eae4:	a5 40 00 0a 	shr s5, s5, 16
   4eae8:	a5 10 00 01 	and s5, s5, 4
   4eaec:	84 80 b2 c0 	shl s4, s4, s5
   4eaf0:	65 80 01 c0 	or s3, s5, s3
   4eaf4:	c4 00 53 c0 	add_i s6, s4, s6
   4eaf8:	c6 40 00 0a 	shr s6, s6, 16
   4eafc:	a6 08 00 01 	and s5, s6, 2
   4eb00:	c0 38 00 0f 	move s6, 14
   4eb04:	63 80 02 c0 	or s3, s3, s5
   4eb08:	84 80 b2 c0 	shl s4, s4, s5
   4eb0c:	66 80 61 c0 	sub_i s3, s6, s3
   4eb10:	84 3c 00 0a 	shr s4, s4, 15
   4eb14:	63 00 52 c0 	add_i s3, s3, s4
   4eb18:	83 1c 00 05 	add_i s4, s3, 7
   4eb1c:	80 00 a2 c0 	shr s4, s0, s4
   4eb20:	63 04 00 0b 	shl s3, s3, 1
   4eb24:	84 04 00 01 	and s4, s4, 1
   4eb28:	64 80 01 c0 	or s3, s4, s3
   4eb2c:	62 70 00 88 	store_32 s3, 28(s2)
   4eb30:	a3 08 00 0b 	shl s5, s3, 2
   4eb34:	22 50 00 88 	store_32 s1, 20(s2)
   4eb38:	d8 80 52 c0 	add_i s6, s24, s5
   4eb3c:	22 40 00 88 	store_32 s1, 16(s2)
   4eb40:	20 04 00 0f 	move s1, 1
   4eb44:	98 10 00 a8 	load_32 s4, 4(s24)
   4eb48:	a1 80 b1 c0 	shl s5, s1, s3
   4eb4c:	26 c0 04 05 	add_i s1, s6, 304
   4eb50:	e4 80 12 c0 	and s7, s4, s5
   4eb54:	47 00 00 f4 	bnz s7, 8 <malloc+0x191c>
   4eb58:	08 00 00 f6 	b 32 <malloc+0x1938>
   4eb5c:	81 00 00 a8 	load_32 s4, (s1)
   4eb60:	a3 7c 00 10 	cmpeq_i s5, s3, 31
   4eb64:	25 01 00 f4 	bnz s5, 36 <malloc+0x1948>
   4eb68:	20 64 00 0f 	move s1, 25
   4eb6c:	63 04 00 0a 	shr s3, s3, 1
   4eb70:	21 80 61 c0 	sub_i s1, s1, s3
   4eb74:	06 00 00 f6 	b 24 <malloc+0x194c>
   4eb78:	04 80 02 c0 	or s0, s4, s5
   4eb7c:	18 10 00 88 	store_32 s0, 4(s24)
   4eb80:	41 00 00 88 	store_32 s2, (s1)
   4eb84:	13 00 00 f6 	b 76 <malloc+0x1990>
   4eb88:	20 00 00 0f 	move s1, 0
   4eb8c:	60 80 b0 c0 	shl s3, s0, s1
   4eb90:	20 00 f2 c0 	move s1, s4
   4eb94:	81 10 00 a8 	load_32 s4, 4(s1)
   4eb98:	84 e0 ff 01 	and s4, s4, -8
   4eb9c:	84 00 00 c1 	cmpeq_i s4, s4, s0
   4eba0:	64 02 00 f4 	bnz s4, 76 <malloc+0x19ac>
   4eba4:	83 74 00 0a 	shr s4, s3, 29
   4eba8:	63 04 00 0b 	shl s3, s3, 1
   4ebac:	84 10 00 01 	and s4, s4, 4
   4ebb0:	a1 00 52 c0 	add_i s5, s1, s4
   4ebb4:	85 40 00 a8 	load_32 s4, 16(s5)
   4ebb8:	c4 fe ff f5 	bnz s4, -40 <malloc+0x1950>
   4ebbc:	78 40 00 a8 	load_32 s3, 16(s24)
   4ebc0:	05 40 00 05 	add_i s0, s5, 16
   4ebc4:	63 00 60 c1 	cmpgt_u s3, s3, s0
   4ebc8:	e3 24 00 f4 	bnz s3, 1180 <malloc+0x1e24>
   4ebcc:	40 00 00 88 	store_32 s2, (s0)
   4ebd0:	22 60 00 88 	store_32 s1, 24(s2)
   4ebd4:	42 30 00 88 	store_32 s2, 12(s2)
   4ebd8:	42 20 00 88 	store_32 s2, 8(s2)
   4ebdc:	18 30 00 a8 	load_32 s0, 12(s24)
   4ebe0:	20 00 9d c1 	cmple_u s1, s0, s26
   4ebe4:	41 02 00 f4 	bnz s1, 72 <malloc+0x19ec>
   4ebe8:	5d fb ff f7 	b -4748 <malloc+0x71c>
   4ebec:	01 20 00 a8 	load_32 s0, 8(s1)
   4ebf0:	78 40 00 a8 	load_32 s3, 16(s24)
   4ebf4:	83 00 60 c1 	cmpgt_u s4, s3, s0
   4ebf8:	64 23 00 f4 	bnz s4, 1132 <malloc+0x1e24>
   4ebfc:	63 80 60 c1 	cmpgt_u s3, s3, s1
   4ec00:	23 23 00 f4 	bnz s3, 1124 <malloc+0x1e24>
   4ec04:	40 30 00 88 	store_32 s2, 12(s0)
   4ec08:	41 20 00 88 	store_32 s2, 8(s1)
   4ec0c:	02 20 00 88 	store_32 s0, 8(s2)
   4ec10:	00 00 00 0f 	move s0, 0
   4ec14:	22 30 00 88 	store_32 s1, 12(s2)
   4ec18:	02 60 00 88 	store_32 s0, 24(s2)
   4ec1c:	18 30 00 a8 	load_32 s0, 12(s24)
   4ec20:	20 00 9d c1 	cmple_u s1, s0, s26
   4ec24:	41 00 00 f4 	bnz s1, 8 <malloc+0x19ec>
   4ec28:	4d fb ff f7 	b -4812 <malloc+0x71c>
   4ec2c:	60 03 00 0f 	move s27, 0
   4ec30:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4ec34:	00 08 00 01 	and s0, s0, 2
   4ec38:	c0 7f ff f3 	bz s0, -4104 <malloc+0x9f0>
   4ec3c:	f7 fb ff f7 	b -4132 <malloc+0x9d8>
   4ec40:	20 00 00 0f 	move s1, 0
   4ec44:	62 80 50 c0 	add_i s3, s2, s1
   4ec48:	78 60 00 88 	store_32 s3, 24(s24)
   4ec4c:	20 80 60 c0 	sub_i s1, s0, s1
   4ec50:	38 30 00 88 	store_32 s1, 12(s24)
   4ec54:	02 00 50 c0 	add_i s0, s2, s0
   4ec58:	21 04 00 00 	or s1, s1, 1
   4ec5c:	23 10 00 88 	store_32 s1, 4(s3)
   4ec60:	20 a0 00 0f 	move s1, 40
   4ec64:	20 10 00 88 	store_32 s1, 4(s0)
   4ec68:	a6 fe ff f7 	b -1384 <malloc+0x14c0>
   4ec6c:	58 20 00 a8 	load_32 s2, 8(s24)
   4ec70:	60 23 00 05 	add_i s27, s0, 8
   4ec74:	42 80 51 c0 	add_i s2, s2, s3
   4ec78:	58 20 00 88 	store_32 s2, 8(s24)
   4ec7c:	61 00 51 c0 	add_i s3, s1, s2
   4ec80:	38 50 00 88 	store_32 s1, 20(s24)
   4ec84:	82 04 00 00 	or s4, s2, 1
   4ec88:	81 10 00 88 	store_32 s4, 4(s1)
   4ec8c:	43 00 00 88 	store_32 s2, (s3)
   4ec90:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4ec94:	00 08 00 01 	and s0, s0, 2
   4ec98:	c0 7c ff f3 	bz s0, -4200 <malloc+0x9f0>
   4ec9c:	df fb ff f7 	b -4228 <malloc+0x9d8>
   4eca0:	c4 60 00 a8 	load_32 s6, 24(s4)
   4eca4:	e4 30 00 a8 	load_32 s7, 12(s4)
   4eca8:	07 01 02 c1 	cmpeq_i s8, s7, s4
   4ecac:	a8 02 00 f4 	bnz s8, 84 <malloc+0x1ac0>
   4ecb0:	04 21 00 a8 	load_32 s8, 8(s4)
   4ecb4:	a5 00 64 c1 	cmpgt_u s5, s5, s8
   4ecb8:	65 1d 00 f4 	bnz s5, 940 <malloc+0x1e24>
   4ecbc:	a8 30 00 a8 	load_32 s5, 12(s8)
   4ecc0:	a5 00 12 c1 	cmpne_i s5, s5, s4
   4ecc4:	05 1d 00 f4 	bnz s5, 928 <malloc+0x1e24>
   4ecc8:	a7 20 00 a8 	load_32 s5, 8(s7)
   4eccc:	a5 00 12 c1 	cmpne_i s5, s5, s4
   4ecd0:	a5 1c 00 f4 	bnz s5, 916 <malloc+0x1e24>
   4ecd4:	e8 30 00 88 	store_32 s7, 12(s8)
   4ecd8:	07 21 00 88 	store_32 s8, 8(s7)
   4ecdc:	e6 09 00 f2 	bz s6, 316 <malloc+0x1bd8>
   4ece0:	1d 00 00 f6 	b 116 <malloc+0x1b14>
   4ece4:	a0 04 00 0f 	move s5, 1
   4ece8:	d8 00 00 a8 	load_32 s6, (s24)
   4ecec:	a5 00 b4 c0 	shl s5, s5, s8
   4ecf0:	a5 fc ff 03 	xor s5, s5, -1
   4ecf4:	a6 80 12 c0 	and s5, s6, s5
   4ecf8:	b8 00 00 88 	store_32 s5, (s24)
   4ecfc:	47 00 00 f6 	b 284 <malloc+0x1bd8>
   4ed00:	24 51 00 a8 	load_32 s9, 20(s4)
   4ed04:	49 00 00 f4 	bnz s9, 8 <malloc+0x1acc>
   4ed08:	03 00 00 f6 	b 12 <malloc+0x1ad4>
   4ed0c:	04 51 00 05 	add_i s8, s4, 20
   4ed10:	04 00 00 f6 	b 16 <malloc+0x1ae0>
   4ed14:	04 41 00 05 	add_i s8, s4, 16
   4ed18:	28 01 00 a8 	load_32 s9, (s8)
   4ed1c:	e9 19 00 f2 	bz s9, 828 <malloc+0x1e18>
   4ed20:	e0 80 f4 c0 	move s7, s9
   4ed24:	27 51 00 a8 	load_32 s9, 20(s7)
   4ed28:	40 01 f4 c0 	move s10, s8
   4ed2c:	07 51 00 05 	add_i s8, s7, 20
   4ed30:	89 ff ff f5 	bnz s9, -16 <malloc+0x1ae0>
   4ed34:	27 41 00 a8 	load_32 s9, 16(s7)
   4ed38:	07 41 00 05 	add_i s8, s7, 16
   4ed3c:	29 ff ff f5 	bnz s9, -28 <malloc+0x1ae0>
   4ed40:	a5 00 65 c1 	cmpgt_u s5, s5, s10
   4ed44:	05 19 00 f4 	bnz s5, 800 <malloc+0x1e24>
   4ed48:	a0 00 00 0f 	move s5, 0
   4ed4c:	aa 00 00 88 	store_32 s5, (s10)
   4ed50:	46 06 00 f2 	bz s6, 200 <malloc+0x1bd8>
   4ed54:	a4 70 00 a8 	load_32 s5, 28(s4)
   4ed58:	05 09 00 0b 	shl s8, s5, 2
   4ed5c:	18 01 54 c0 	add_i s8, s24, s8
   4ed60:	28 c1 04 a8 	load_32 s9, 304(s8)
   4ed64:	29 01 12 c1 	cmpne_i s9, s9, s4
   4ed68:	49 00 00 f4 	bnz s9, 8 <malloc+0x1b30>
   4ed6c:	0c 00 00 f6 	b 48 <malloc+0x1b5c>
   4ed70:	b8 40 00 a8 	load_32 s5, 16(s24)
   4ed74:	a5 00 63 c1 	cmpgt_u s5, s5, s6
   4ed78:	65 17 00 f4 	bnz s5, 748 <malloc+0x1e24>
   4ed7c:	a6 40 00 a8 	load_32 s5, 16(s6)
   4ed80:	a5 00 02 c1 	cmpeq_i s5, s5, s4
   4ed84:	05 02 00 f4 	bnz s5, 64 <malloc+0x1b84>
   4ed88:	a0 50 00 0f 	move s5, 20
   4ed8c:	a6 80 52 c0 	add_i s5, s6, s5
   4ed90:	e5 00 00 88 	store_32 s7, (s5)
   4ed94:	27 04 00 f2 	bz s7, 132 <malloc+0x1bd8>
   4ed98:	0f 00 00 f6 	b 60 <malloc+0x1b94>
   4ed9c:	08 c1 04 05 	add_i s8, s8, 304
   4eda0:	e8 00 00 88 	store_32 s7, (s8)
   4eda4:	87 01 00 f4 	bnz s7, 48 <malloc+0x1b94>
   4eda8:	c0 04 00 0f 	move s6, 1
   4edac:	a6 80 b2 c0 	shl s5, s6, s5
   4edb0:	d8 10 00 a8 	load_32 s6, 4(s24)
   4edb4:	a5 fc ff 03 	xor s5, s5, -1
   4edb8:	a6 80 12 c0 	and s5, s6, s5
   4edbc:	b8 10 00 88 	store_32 s5, 4(s24)
   4edc0:	16 00 00 f6 	b 88 <malloc+0x1bd8>
   4edc4:	a0 40 00 0f 	move s5, 16
   4edc8:	a6 80 52 c0 	add_i s5, s6, s5
   4edcc:	e5 00 00 88 	store_32 s7, (s5)
   4edd0:	47 02 00 f2 	bz s7, 72 <malloc+0x1bd8>
   4edd4:	b8 40 00 a8 	load_32 s5, 16(s24)
   4edd8:	05 81 63 c1 	cmpgt_u s8, s5, s7
   4eddc:	48 14 00 f4 	bnz s8, 648 <malloc+0x1e24>
   4ede0:	c7 60 00 88 	store_32 s6, 24(s7)
   4ede4:	c4 40 00 a8 	load_32 s6, 16(s4)
   4ede8:	a6 00 00 f2 	bz s6, 20 <malloc+0x1bbc>
   4edec:	a5 00 63 c1 	cmpgt_u s5, s5, s6
   4edf0:	a5 13 00 f4 	bnz s5, 628 <malloc+0x1e24>
   4edf4:	c7 40 00 88 	store_32 s6, 16(s7)
   4edf8:	e6 60 00 88 	store_32 s7, 24(s6)
   4edfc:	a4 50 00 a8 	load_32 s5, 20(s4)
   4ee00:	c5 00 00 f2 	bz s5, 24 <malloc+0x1bd8>
   4ee04:	d8 40 00 a8 	load_32 s6, 16(s24)
   4ee08:	c6 80 62 c1 	cmpgt_u s6, s6, s5
   4ee0c:	c6 12 00 f4 	bnz s6, 600 <malloc+0x1e24>
   4ee10:	a7 50 00 88 	store_32 s5, 20(s7)
   4ee14:	e5 60 00 88 	store_32 s7, 24(s5)
   4ee18:	42 e0 ff 01 	and s2, s2, -8
   4ee1c:	84 00 51 c0 	add_i s4, s4, s2
   4ee20:	62 80 51 c0 	add_i s3, s2, s3
   4ee24:	44 10 00 a8 	load_32 s2, 4(s4)
   4ee28:	42 f8 ff 01 	and s2, s2, -2
   4ee2c:	44 10 00 88 	store_32 s2, 4(s4)
   4ee30:	43 04 00 00 	or s2, s3, 1
   4ee34:	41 10 00 88 	store_32 s2, 4(s1)
   4ee38:	81 80 51 c0 	add_i s4, s1, s3
   4ee3c:	43 fc 03 16 	cmpgt_u s2, s3, 255
   4ee40:	64 00 00 88 	store_32 s3, (s4)
   4ee44:	02 02 00 f4 	bnz s2, 64 <malloc+0x1c44>
   4ee48:	43 0c 00 0a 	shr s2, s3, 3
   4ee4c:	78 00 00 a8 	load_32 s3, (s24)
   4ee50:	80 04 00 0f 	move s4, 1
   4ee54:	a2 0c 00 0b 	shl s5, s2, 3
   4ee58:	b8 80 52 c0 	add_i s5, s24, s5
   4ee5c:	84 00 b1 c0 	shl s4, s4, s2
   4ee60:	c3 00 12 c0 	and s6, s3, s4
   4ee64:	45 a0 00 05 	add_i s2, s5, 40
   4ee68:	46 00 00 f4 	bnz s6, 8 <malloc+0x1c30>
   4ee6c:	11 00 00 f6 	b 68 <malloc+0x1c70>
   4ee70:	62 20 00 a8 	load_32 s3, 8(s2)
   4ee74:	98 40 00 a8 	load_32 s4, 16(s24)
   4ee78:	84 80 91 c1 	cmple_u s4, s4, s3
   4ee7c:	04 02 00 f4 	bnz s4, 64 <malloc+0x1c7c>
   4ee80:	79 00 00 f6 	b 484 <malloc+0x1e24>
   4ee84:	40 00 00 0f 	move s2, 0
   4ee88:	a3 20 00 0a 	shr s5, s3, 8
   4ee8c:	80 00 f1 c0 	move s4, s2
   4ee90:	05 06 00 f2 	bz s5, 192 <malloc+0x1d10>
   4ee94:	9f fc 00 4f 	movehi s4, 2047
   4ee98:	84 fc 7f 00 	or s4, s4, 8191
   4ee9c:	83 00 62 c1 	cmpgt_u s4, s3, s4
   4eea0:	44 00 00 f4 	bnz s4, 8 <malloc+0x1c68>
   4eea4:	0f 00 00 f6 	b 60 <malloc+0x1ca0>
   4eea8:	80 7c 00 0f 	move s4, 31
   4eeac:	29 00 00 f6 	b 164 <malloc+0x1d10>
   4eeb0:	63 00 02 c0 	or s3, s3, s4
   4eeb4:	78 00 00 88 	store_32 s3, (s24)
   4eeb8:	60 00 f1 c0 	move s3, s2
   4eebc:	22 20 00 88 	store_32 s1, 8(s2)
   4eec0:	60 23 00 05 	add_i s27, s0, 8
   4eec4:	23 30 00 88 	store_32 s1, 12(s3)
   4eec8:	61 20 00 88 	store_32 s3, 8(s1)
   4eecc:	41 30 00 88 	store_32 s2, 12(s1)
   4eed0:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4eed4:	00 08 00 01 	and s0, s0, 2
   4eed8:	c0 6a ff f3 	bz s0, -4776 <malloc+0x9f0>
   4eedc:	4f fb ff f7 	b -4804 <malloc+0x9d8>
   4eee0:	9f 0c 00 4f 	movehi s4, 127
   4eee4:	df 04 00 4f 	movehi s6, 63
   4eee8:	fe 00 00 4f 	movehi s7, 30
   4eeec:	84 00 7c 00 	or s4, s4, 7936
   4eef0:	85 00 52 c0 	add_i s4, s5, s4
   4eef4:	c6 00 40 00 	or s6, s6, 4096
   4eef8:	84 40 00 0a 	shr s4, s4, 16
   4eefc:	84 20 00 01 	and s4, s4, 8
   4ef00:	a5 00 b2 c0 	shl s5, s5, s4
   4ef04:	c5 00 53 c0 	add_i s6, s5, s6
   4ef08:	c6 40 00 0a 	shr s6, s6, 16
   4ef0c:	c6 10 00 01 	and s6, s6, 4
   4ef10:	a5 00 b3 c0 	shl s5, s5, s6
   4ef14:	86 00 02 c0 	or s4, s6, s4
   4ef18:	e5 80 53 c0 	add_i s7, s5, s7
   4ef1c:	e7 40 00 0a 	shr s7, s7, 16
   4ef20:	c7 08 00 01 	and s6, s7, 2
   4ef24:	e0 38 00 0f 	move s7, 14
   4ef28:	84 00 03 c0 	or s4, s4, s6
   4ef2c:	a5 00 b3 c0 	shl s5, s5, s6
   4ef30:	87 00 62 c0 	sub_i s4, s7, s4
   4ef34:	a5 3c 00 0a 	shr s5, s5, 15
   4ef38:	84 80 52 c0 	add_i s4, s4, s5
   4ef3c:	a4 1c 00 05 	add_i s5, s4, 7
   4ef40:	a3 80 a2 c0 	shr s5, s3, s5
   4ef44:	84 04 00 0b 	shl s4, s4, 1
   4ef48:	a5 04 00 01 	and s5, s5, 1
   4ef4c:	85 00 02 c0 	or s4, s5, s4
   4ef50:	81 70 00 88 	store_32 s4, 28(s1)
   4ef54:	c4 08 00 0b 	shl s6, s4, 2
   4ef58:	41 50 00 88 	store_32 s2, 20(s1)
   4ef5c:	f8 00 53 c0 	add_i s7, s24, s6
   4ef60:	41 40 00 88 	store_32 s2, 16(s1)
   4ef64:	40 04 00 0f 	move s2, 1
   4ef68:	b8 10 00 a8 	load_32 s5, 4(s24)
   4ef6c:	c2 00 b2 c0 	shl s6, s2, s4
   4ef70:	47 c0 04 05 	add_i s2, s7, 304
   4ef74:	05 01 13 c0 	and s8, s5, s6
   4ef78:	48 00 00 f4 	bnz s8, 8 <malloc+0x1d40>
   4ef7c:	08 00 00 f6 	b 32 <malloc+0x1d5c>
   4ef80:	a2 00 00 a8 	load_32 s5, (s2)
   4ef84:	c4 7c 00 10 	cmpeq_i s6, s4, 31
   4ef88:	26 01 00 f4 	bnz s6, 36 <malloc+0x1d6c>
   4ef8c:	40 64 00 0f 	move s2, 25
   4ef90:	84 04 00 0a 	shr s4, s4, 1
   4ef94:	42 00 62 c0 	sub_i s2, s2, s4
   4ef98:	06 00 00 f6 	b 24 <malloc+0x1d70>
   4ef9c:	65 00 03 c0 	or s3, s5, s6
   4efa0:	78 10 00 88 	store_32 s3, 4(s24)
   4efa4:	22 00 00 88 	store_32 s1, (s2)
   4efa8:	13 00 00 f6 	b 76 <malloc+0x1db4>
   4efac:	40 00 00 0f 	move s2, 0
   4efb0:	83 00 b1 c0 	shl s4, s3, s2
   4efb4:	40 80 f2 c0 	move s2, s5
   4efb8:	a2 10 00 a8 	load_32 s5, 4(s2)
   4efbc:	a5 e0 ff 01 	and s5, s5, -8
   4efc0:	a5 80 01 c1 	cmpeq_i s5, s5, s3
   4efc4:	85 02 00 f4 	bnz s5, 80 <malloc+0x1dd4>
   4efc8:	a4 74 00 0a 	shr s5, s4, 29
   4efcc:	84 04 00 0b 	shl s4, s4, 1
   4efd0:	a5 10 00 01 	and s5, s5, 4
   4efd4:	c2 80 52 c0 	add_i s6, s2, s5
   4efd8:	a6 40 00 a8 	load_32 s5, 16(s6)
   4efdc:	c5 fe ff f5 	bnz s5, -40 <malloc+0x1d74>
   4efe0:	98 40 00 a8 	load_32 s4, 16(s24)
   4efe4:	66 40 00 05 	add_i s3, s6, 16
   4efe8:	84 80 61 c1 	cmpgt_u s4, s4, s3
   4efec:	c4 03 00 f4 	bnz s4, 120 <malloc+0x1e24>
   4eff0:	23 00 00 88 	store_32 s1, (s3)
   4eff4:	41 60 00 88 	store_32 s2, 24(s1)
   4eff8:	60 23 00 05 	add_i s27, s0, 8
   4effc:	21 30 00 88 	store_32 s1, 12(s1)
   4f000:	21 20 00 88 	store_32 s1, 8(s1)
   4f004:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4f008:	00 08 00 01 	and s0, s0, 2
   4f00c:	20 61 ff f3 	bz s0, -5084 <malloc+0x9f0>
   4f010:	02 fb ff f7 	b -5112 <malloc+0x9d8>
   4f014:	62 20 00 a8 	load_32 s3, 8(s2)
   4f018:	98 40 00 a8 	load_32 s4, 16(s24)
   4f01c:	a4 80 61 c1 	cmpgt_u s5, s4, s3
   4f020:	25 02 00 f4 	bnz s5, 68 <malloc+0x1e24>
   4f024:	84 00 61 c1 	cmpgt_u s4, s4, s2
   4f028:	e4 01 00 f4 	bnz s4, 60 <malloc+0x1e24>
   4f02c:	23 30 00 88 	store_32 s1, 12(s3)
   4f030:	60 23 00 05 	add_i s27, s0, 8
   4f034:	22 20 00 88 	store_32 s1, 8(s2)
   4f038:	61 20 00 88 	store_32 s3, 8(s1)
   4f03c:	41 30 00 88 	store_32 s2, 12(s1)
   4f040:	40 00 00 0f 	move s2, 0
   4f044:	41 60 00 88 	store_32 s2, 24(s1)
   4f048:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4f04c:	00 08 00 01 	and s0, s0, 2
   4f050:	00 5f ff f3 	bz s0, -5152 <malloc+0x9f0>
   4f054:	f1 fa ff f7 	b -5180 <malloc+0x9d8>
   4f058:	e0 00 00 0f 	move s7, 0
   4f05c:	e6 ed ff f3 	bz s6, -580 <malloc+0x1bd8>
   4f060:	3d ff ff f7 	b -780 <malloc+0x1b14>
   4f064:	bd 0a 00 f8 	call 10996 <abort>

000000000004f068 free:
   4f068:	de 03 ff 05 	add_i sp, sp, -64
   4f06c:	1e f3 00 88 	store_32 s24, 60(sp)
   4f070:	fe e3 00 88 	store_32 ra, 56(sp)
   4f074:	80 32 00 f2 	bz s0, 1616 <free+0x65c>
   4f078:	20 0c 00 4f 	movehi s1, 96
   4f07c:	01 63 56 00 	or s24, s1, 5528
   4f080:	38 f0 06 a0 	load_u8 s1, 444(s24)
   4f084:	41 08 00 01 	and s2, s1, 2
   4f088:	20 e0 ff 05 	add_i s1, s0, -8
   4f08c:	e2 01 00 f2 	bz s2, 60 <free+0x60>
   4f090:	58 00 07 05 	add_i s2, s24, 448
   4f094:	60 04 00 0f 	move s3, 1
   4f098:	82 00 00 aa 	load_sync s4, (s2)
   4f09c:	a0 80 f1 c0 	move s5, s3
   4f0a0:	a2 00 00 8a 	store_sync s5, (s2)  
   4f0a4:	a5 ff ff f3 	bz s5, -12 <free+0x30>
   4f0a8:	04 01 00 f2 	bz s4, 32 <free+0x60>
   4f0ac:	98 00 07 a8 	load_32 s4, 448(s24)
   4f0b0:	e4 ff ff f5 	bnz s4, -4 <free+0x44>
   4f0b4:	82 00 00 aa 	load_sync s4, (s2)
   4f0b8:	a0 80 f1 c0 	move s5, s3
   4f0bc:	a2 00 00 8a 	store_sync s5, (s2)  
   4f0c0:	a5 ff ff f3 	bz s5, -12 <free+0x4c>
   4f0c4:	44 ff ff f5 	bnz s4, -24 <free+0x44>
   4f0c8:	b8 40 00 a8 	load_32 s5, 16(s24)
   4f0cc:	41 80 82 c1 	cmplt_u s2, s1, s5
   4f0d0:	a2 3f 00 f4 	bnz s2, 2036 <free+0x85c>
   4f0d4:	40 f0 ff a9 	load_32 s2, -4(s0)
   4f0d8:	82 0c 00 01 	and s4, s2, 3
   4f0dc:	04 04 00 10 	cmpeq_i s0, s4, 1
   4f0e0:	20 3f 00 f4 	bnz s0, 2020 <free+0x85c>
   4f0e4:	02 e0 ff 01 	and s0, s2, -8
   4f0e8:	62 04 00 01 	and s3, s2, 1
   4f0ec:	41 00 50 c0 	add_i s2, s1, s0
   4f0f0:	43 12 00 f4 	bnz s3, 584 <free+0x2d0>
   4f0f4:	61 00 00 a8 	load_32 s3, (s1)
   4f0f8:	44 2d 00 f2 	bz s4, 1448 <free+0x638>
   4f0fc:	21 80 61 c0 	sub_i s1, s1, s3
   4f100:	81 80 82 c1 	cmplt_u s4, s1, s5
   4f104:	04 3e 00 f4 	bnz s4, 1984 <free+0x85c>
   4f108:	98 50 00 a8 	load_32 s4, 20(s24)
   4f10c:	03 00 50 c0 	add_i s0, s3, s0
   4f110:	84 80 00 c1 	cmpeq_i s4, s4, s1
   4f114:	e4 03 00 f4 	bnz s4, 124 <free+0x128>
   4f118:	83 fc 03 16 	cmpgt_u s4, s3, 255
   4f11c:	a4 04 00 f4 	bnz s4, 148 <free+0x148>
   4f120:	c3 0c 00 0a 	shr s6, s3, 3
   4f124:	61 20 00 a8 	load_32 s3, 8(s1)
   4f128:	86 0c 00 0b 	shl s4, s6, 3
   4f12c:	98 00 52 c0 	add_i s4, s24, s4
   4f130:	e4 a0 00 05 	add_i s7, s4, 40
   4f134:	81 30 00 a8 	load_32 s4, 12(s1)
   4f138:	03 81 03 c1 	cmpeq_i s8, s3, s7
   4f13c:	c8 00 00 f4 	bnz s8, 24 <free+0xec>
   4f140:	05 81 61 c1 	cmpgt_u s8, s5, s3
   4f144:	08 3c 00 f4 	bnz s8, 1920 <free+0x85c>
   4f148:	03 31 00 a8 	load_32 s8, 12(s3)
   4f14c:	08 81 10 c1 	cmpne_i s8, s8, s1
   4f150:	a8 3b 00 f4 	bnz s8, 1908 <free+0x85c>
   4f154:	04 81 11 c1 	cmpne_i s8, s4, s3
   4f158:	48 00 00 f4 	bnz s8, 8 <free+0xf8>
   4f15c:	26 00 00 f6 	b 152 <free+0x18c>
   4f160:	c4 80 03 c1 	cmpeq_i s6, s4, s7
   4f164:	c6 00 00 f4 	bnz s6, 24 <free+0x114>
   4f168:	a5 00 62 c1 	cmpgt_u s5, s5, s4
   4f16c:	c5 3a 00 f4 	bnz s5, 1880 <free+0x85c>
   4f170:	a4 20 00 a8 	load_32 s5, 8(s4)
   4f174:	a5 80 10 c1 	cmpne_i s5, s5, s1
   4f178:	65 3a 00 f4 	bnz s5, 1868 <free+0x85c>
   4f17c:	83 30 00 88 	store_32 s4, 12(s3)
   4f180:	64 20 00 88 	store_32 s3, 8(s4)
   4f184:	62 80 90 c1 	cmple_u s3, s2, s1
   4f188:	e3 39 00 f4 	bnz s3, 1852 <free+0x85c>
   4f18c:	6d 00 00 f6 	b 436 <free+0x2d8>
   4f190:	62 10 00 a8 	load_32 s3, 4(s2)
   4f194:	83 0c 00 01 	and s4, s3, 3
   4f198:	84 0c 00 11 	cmpne_i s4, s4, 3
   4f19c:	e4 0c 00 f4 	bnz s4, 412 <free+0x2d0>
   4f1a0:	18 20 00 88 	store_32 s0, 8(s24)
   4f1a4:	63 f8 ff 01 	and s3, s3, -2
   4f1a8:	62 10 00 88 	store_32 s3, 4(s2)
   4f1ac:	cb 00 00 f6 	b 812 <free+0x470>
   4f1b0:	61 60 00 a8 	load_32 s3, 24(s1)
   4f1b4:	81 30 00 a8 	load_32 s4, 12(s1)
   4f1b8:	c4 80 00 c1 	cmpeq_i s6, s4, s1
   4f1bc:	e6 02 00 f4 	bnz s6, 92 <free+0x1b0>
   4f1c0:	c1 20 00 a8 	load_32 s6, 8(s1)
   4f1c4:	a5 00 63 c1 	cmpgt_u s5, s5, s6
   4f1c8:	e5 37 00 f4 	bnz s5, 1788 <free+0x85c>
   4f1cc:	a6 30 00 a8 	load_32 s5, 12(s6)
   4f1d0:	a5 80 10 c1 	cmpne_i s5, s5, s1
   4f1d4:	85 37 00 f4 	bnz s5, 1776 <free+0x85c>
   4f1d8:	a4 20 00 a8 	load_32 s5, 8(s4)
   4f1dc:	a5 80 10 c1 	cmpne_i s5, s5, s1
   4f1e0:	25 37 00 f4 	bnz s5, 1764 <free+0x85c>
   4f1e4:	86 30 00 88 	store_32 s4, 12(s6)
   4f1e8:	c4 20 00 88 	store_32 s6, 8(s4)
   4f1ec:	63 0a 00 f2 	bz s3, 332 <free+0x2d0>
   4f1f0:	1f 00 00 f6 	b 124 <free+0x204>
   4f1f4:	60 04 00 0f 	move s3, 1
   4f1f8:	98 00 00 a8 	load_32 s4, (s24)
   4f1fc:	63 00 b3 c0 	shl s3, s3, s6
   4f200:	63 fc ff 03 	xor s3, s3, -1
   4f204:	64 80 11 c0 	and s3, s4, s3
   4f208:	78 00 00 88 	store_32 s3, (s24)
   4f20c:	62 80 90 c1 	cmple_u s3, s2, s1
   4f210:	a3 35 00 f4 	bnz s3, 1716 <free+0x85c>
   4f214:	4b 00 00 f6 	b 300 <free+0x2d8>
   4f218:	e1 50 00 a8 	load_32 s7, 20(s1)
   4f21c:	47 00 00 f4 	bnz s7, 8 <free+0x1bc>
   4f220:	03 00 00 f6 	b 12 <free+0x1c4>
   4f224:	c1 50 00 05 	add_i s6, s1, 20
   4f228:	04 00 00 f6 	b 16 <free+0x1d0>
   4f22c:	c1 40 00 05 	add_i s6, s1, 16
   4f230:	e6 00 00 a8 	load_32 s7, (s6)
   4f234:	c7 33 00 f2 	bz s7, 1656 <free+0x844>
   4f238:	80 80 f3 c0 	move s4, s7
   4f23c:	e4 50 00 a8 	load_32 s7, 20(s4)
   4f240:	00 01 f3 c0 	move s8, s6
   4f244:	c4 50 00 05 	add_i s6, s4, 20
   4f248:	87 ff ff f5 	bnz s7, -16 <free+0x1d0>
   4f24c:	e4 40 00 a8 	load_32 s7, 16(s4)
   4f250:	c4 40 00 05 	add_i s6, s4, 16
   4f254:	27 ff ff f5 	bnz s7, -28 <free+0x1d0>
   4f258:	a5 00 64 c1 	cmpgt_u s5, s5, s8
   4f25c:	45 33 00 f4 	bnz s5, 1640 <free+0x85c>
   4f260:	a0 00 00 0f 	move s5, 0
   4f264:	a8 00 00 88 	store_32 s5, (s8)
   4f268:	83 06 00 f2 	bz s3, 208 <free+0x2d0>
   4f26c:	a1 70 00 a8 	load_32 s5, 28(s1)
   4f270:	c5 08 00 0b 	shl s6, s5, 2
   4f274:	d8 00 53 c0 	add_i s6, s24, s6
   4f278:	e6 c0 04 a8 	load_32 s7, 304(s6)
   4f27c:	e7 80 10 c1 	cmpne_i s7, s7, s1
   4f280:	47 00 00 f4 	bnz s7, 8 <free+0x220>
   4f284:	0c 00 00 f6 	b 48 <free+0x24c>
   4f288:	b8 40 00 a8 	load_32 s5, 16(s24)
   4f28c:	a5 80 61 c1 	cmpgt_u s5, s5, s3
   4f290:	a5 31 00 f4 	bnz s5, 1588 <free+0x85c>
   4f294:	a3 40 00 a8 	load_32 s5, 16(s3)
   4f298:	a5 80 00 c1 	cmpeq_i s5, s5, s1
   4f29c:	45 02 00 f4 	bnz s5, 72 <free+0x27c>
   4f2a0:	a0 50 00 0f 	move s5, 20
   4f2a4:	a3 80 52 c0 	add_i s5, s3, s5
   4f2a8:	85 00 00 88 	store_32 s4, (s5)
   4f2ac:	64 04 00 f2 	bz s4, 140 <free+0x2d0>
   4f2b0:	11 00 00 f6 	b 68 <free+0x28c>
   4f2b4:	c6 c0 04 05 	add_i s6, s6, 304
   4f2b8:	86 00 00 88 	store_32 s4, (s6)
   4f2bc:	c4 01 00 f4 	bnz s4, 56 <free+0x28c>
   4f2c0:	60 04 00 0f 	move s3, 1
   4f2c4:	98 10 00 a8 	load_32 s4, 4(s24)
   4f2c8:	63 80 b2 c0 	shl s3, s3, s5
   4f2cc:	63 fc ff 03 	xor s3, s3, -1
   4f2d0:	64 80 11 c0 	and s3, s4, s3
   4f2d4:	78 10 00 88 	store_32 s3, 4(s24)
   4f2d8:	62 80 90 c1 	cmple_u s3, s2, s1
   4f2dc:	43 2f 00 f4 	bnz s3, 1512 <free+0x85c>
   4f2e0:	18 00 00 f6 	b 96 <free+0x2d8>
   4f2e4:	a0 40 00 0f 	move s5, 16
   4f2e8:	a3 80 52 c0 	add_i s5, s3, s5
   4f2ec:	85 00 00 88 	store_32 s4, (s5)
   4f2f0:	44 02 00 f2 	bz s4, 72 <free+0x2d0>
   4f2f4:	b8 40 00 a8 	load_32 s5, 16(s24)
   4f2f8:	c5 00 62 c1 	cmpgt_u s6, s5, s4
   4f2fc:	46 2e 00 f4 	bnz s6, 1480 <free+0x85c>
   4f300:	64 60 00 88 	store_32 s3, 24(s4)
   4f304:	61 40 00 a8 	load_32 s3, 16(s1)
   4f308:	a3 00 00 f2 	bz s3, 20 <free+0x2b4>
   4f30c:	a5 80 61 c1 	cmpgt_u s5, s5, s3
   4f310:	a5 2d 00 f4 	bnz s5, 1460 <free+0x85c>
   4f314:	64 40 00 88 	store_32 s3, 16(s4)
   4f318:	83 60 00 88 	store_32 s4, 24(s3)
   4f31c:	61 50 00 a8 	load_32 s3, 20(s1)
   4f320:	c3 00 00 f2 	bz s3, 24 <free+0x2d0>
   4f324:	b8 40 00 a8 	load_32 s5, 16(s24)
   4f328:	a5 80 61 c1 	cmpgt_u s5, s5, s3
   4f32c:	c5 2c 00 f4 	bnz s5, 1432 <free+0x85c>
   4f330:	64 50 00 88 	store_32 s3, 20(s4)
   4f334:	83 60 00 88 	store_32 s4, 24(s3)
   4f338:	62 80 90 c1 	cmple_u s3, s2, s1
   4f33c:	43 2c 00 f4 	bnz s3, 1416 <free+0x85c>
   4f340:	62 10 00 a8 	load_32 s3, 4(s2)
   4f344:	83 04 00 01 	and s4, s3, 1
   4f348:	e4 2b 00 f2 	bz s4, 1404 <free+0x85c>
   4f34c:	83 08 00 01 	and s4, s3, 2
   4f350:	e4 04 00 f4 	bnz s4, 156 <free+0x384>
   4f354:	98 60 00 a8 	load_32 s4, 24(s24)
   4f358:	84 00 11 c1 	cmpne_i s4, s4, s2
   4f35c:	44 00 00 f4 	bnz s4, 8 <free+0x2fc>
   4f360:	45 00 00 f6 	b 276 <free+0x40c>
   4f364:	98 50 00 a8 	load_32 s4, 20(s24)
   4f368:	84 00 11 c1 	cmpne_i s4, s4, s2
   4f36c:	44 00 00 f4 	bnz s4, 8 <free+0x30c>
   4f370:	56 00 00 f6 	b 344 <free+0x460>
   4f374:	83 fc 03 16 	cmpgt_u s4, s3, 255
   4f378:	64 0d 00 f4 	bnz s4, 428 <free+0x4bc>
   4f37c:	c3 0c 00 0a 	shr s6, s3, 3
   4f380:	82 20 00 a8 	load_32 s4, 8(s2)
   4f384:	a6 0c 00 0b 	shl s5, s6, 3
   4f388:	b8 80 52 c0 	add_i s5, s24, s5
   4f38c:	e5 a0 00 05 	add_i s7, s5, 40
   4f390:	a2 30 00 a8 	load_32 s5, 12(s2)
   4f394:	04 81 03 c1 	cmpeq_i s8, s4, s7
   4f398:	e8 00 00 f4 	bnz s8, 28 <free+0x34c>
   4f39c:	18 41 00 a8 	load_32 s8, 16(s24)
   4f3a0:	08 01 62 c1 	cmpgt_u s8, s8, s4
   4f3a4:	08 29 00 f4 	bnz s8, 1312 <free+0x85c>
   4f3a8:	04 31 00 a8 	load_32 s8, 12(s4)
   4f3ac:	08 01 11 c1 	cmpne_i s8, s8, s2
   4f3b0:	a8 28 00 f4 	bnz s8, 1300 <free+0x85c>
   4f3b4:	05 01 12 c1 	cmpne_i s8, s5, s4
   4f3b8:	48 00 00 f4 	bnz s8, 8 <free+0x358>
   4f3bc:	e0 00 00 f6 	b 896 <free+0x6d4>
   4f3c0:	c5 80 03 c1 	cmpeq_i s6, s5, s7
   4f3c4:	e6 00 00 f4 	bnz s6, 28 <free+0x378>
   4f3c8:	d8 40 00 a8 	load_32 s6, 16(s24)
   4f3cc:	c6 80 62 c1 	cmpgt_u s6, s6, s5
   4f3d0:	a6 27 00 f4 	bnz s6, 1268 <free+0x85c>
   4f3d4:	c5 20 00 a8 	load_32 s6, 8(s5)
   4f3d8:	46 00 11 c1 	cmpne_i s2, s6, s2
   4f3dc:	42 27 00 f4 	bnz s2, 1256 <free+0x85c>
   4f3e0:	a4 30 00 88 	store_32 s5, 12(s4)
   4f3e4:	85 20 00 88 	store_32 s4, 8(s5)
   4f3e8:	23 01 00 f6 	b 1164 <free+0x80c>
   4f3ec:	63 f8 ff 01 	and s3, s3, -2
   4f3f0:	62 10 00 88 	store_32 s3, 4(s2)
   4f3f4:	41 00 50 c0 	add_i s2, s1, s0
   4f3f8:	60 04 00 00 	or s3, s0, 1
   4f3fc:	61 10 00 88 	store_32 s3, 4(s1)
   4f400:	02 00 00 88 	store_32 s0, (s2)
   4f404:	40 fc 03 16 	cmpgt_u s2, s0, 255
   4f408:	02 02 00 f4 	bnz s2, 64 <free+0x3e0>
   4f40c:	00 0c 00 0a 	shr s0, s0, 3
   4f410:	58 00 00 a8 	load_32 s2, (s24)
   4f414:	60 04 00 0f 	move s3, 1
   4f418:	80 0c 00 0b 	shl s4, s0, 3
   4f41c:	98 00 52 c0 	add_i s4, s24, s4
   4f420:	63 00 b0 c0 	shl s3, s3, s0
   4f424:	a2 80 11 c0 	and s5, s2, s3
   4f428:	04 a0 00 05 	add_i s0, s4, 40
   4f42c:	45 00 00 f4 	bnz s5, 8 <free+0x3cc>
   4f430:	32 00 00 f6 	b 200 <free+0x490>
   4f434:	40 20 00 a8 	load_32 s2, 8(s0)
   4f438:	78 40 00 a8 	load_32 s3, 16(s24)
   4f43c:	63 00 91 c1 	cmple_u s3, s3, s2
   4f440:	23 06 00 f4 	bnz s3, 196 <free+0x49c>
   4f444:	20 01 00 f6 	b 1152 <free+0x85c>
   4f448:	40 00 00 0f 	move s2, 0
   4f44c:	80 20 00 0a 	shr s4, s0, 8
   4f450:	60 00 f1 c0 	move s3, s2
   4f454:	44 0c 00 f2 	bz s4, 392 <free+0x574>
   4f458:	7f fc 00 4f 	movehi s3, 2047
   4f45c:	63 fc 7f 00 	or s3, s3, 8191
   4f460:	60 80 61 c1 	cmpgt_u s3, s0, s3
   4f464:	43 00 00 f4 	bnz s3, 8 <free+0x404>
   4f468:	41 00 00 f6 	b 260 <free+0x504>
   4f46c:	60 7c 00 0f 	move s3, 31
   4f470:	5b 00 00 f6 	b 364 <free+0x574>
   4f474:	58 30 00 a8 	load_32 s2, 12(s24)
   4f478:	02 00 50 c0 	add_i s0, s2, s0
   4f47c:	18 30 00 88 	store_32 s0, 12(s24)
   4f480:	38 60 00 88 	store_32 s1, 24(s24)
   4f484:	40 04 00 00 	or s2, s0, 1
   4f488:	41 10 00 88 	store_32 s2, 4(s1)
   4f48c:	58 50 00 a8 	load_32 s2, 20(s24)
   4f490:	21 00 11 c1 	cmpne_i s1, s1, s2
   4f494:	81 00 00 f4 	bnz s1, 16 <free+0x43c>
   4f498:	20 00 00 0f 	move s1, 0
   4f49c:	38 50 00 88 	store_32 s1, 20(s24)
   4f4a0:	38 20 00 88 	store_32 s1, 8(s24)
   4f4a4:	38 70 00 a8 	load_32 s1, 28(s24)
   4f4a8:	00 80 90 c1 	cmple_u s0, s0, s1
   4f4ac:	a0 0f 00 f4 	bnz s0, 500 <free+0x638>
   4f4b0:	00 00 00 0f 	move s0, 0
   4f4b4:	05 01 00 f8 	call 1044 <sys_trim>
   4f4b8:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4f4bc:	00 08 00 01 	and s0, s0, 2
   4f4c0:	20 10 00 f2 	bz s0, 516 <free+0x65c>
   4f4c4:	7a 00 00 f6 	b 488 <free+0x644>
   4f4c8:	58 20 00 a8 	load_32 s2, 8(s24)
   4f4cc:	02 00 50 c0 	add_i s0, s2, s0
   4f4d0:	18 20 00 88 	store_32 s0, 8(s24)
   4f4d4:	38 50 00 88 	store_32 s1, 20(s24)
   4f4d8:	41 00 50 c0 	add_i s2, s1, s0
   4f4dc:	60 04 00 00 	or s3, s0, 1
   4f4e0:	61 10 00 88 	store_32 s3, 4(s1)
   4f4e4:	02 00 00 88 	store_32 s0, (s2)
   4f4e8:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4f4ec:	00 08 00 01 	and s0, s0, 2
   4f4f0:	a0 0e 00 f2 	bz s0, 468 <free+0x65c>
   4f4f4:	6e 00 00 f6 	b 440 <free+0x644>
   4f4f8:	42 80 01 c0 	or s2, s2, s3
   4f4fc:	58 00 00 88 	store_32 s2, (s24)
   4f500:	40 00 f0 c0 	move s2, s0
   4f504:	20 20 00 88 	store_32 s1, 8(s0)
   4f508:	22 30 00 88 	store_32 s1, 12(s2)
   4f50c:	41 20 00 88 	store_32 s2, 8(s1)
   4f510:	01 30 00 88 	store_32 s0, 12(s1)
   4f514:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4f518:	00 08 00 01 	and s0, s0, 2
   4f51c:	40 0d 00 f2 	bz s0, 424 <free+0x65c>
   4f520:	63 00 00 f6 	b 396 <free+0x644>
   4f524:	82 60 00 a8 	load_32 s4, 24(s2)
   4f528:	a2 30 00 a8 	load_32 s5, 12(s2)
   4f52c:	c5 00 01 c1 	cmpeq_i s6, s5, s2
   4f530:	46 11 00 f4 	bnz s6, 552 <free+0x6f0>
   4f534:	c2 20 00 a8 	load_32 s6, 8(s2)
   4f538:	f8 40 00 a8 	load_32 s7, 16(s24)
   4f53c:	e7 00 63 c1 	cmpgt_u s7, s7, s6
   4f540:	27 1c 00 f4 	bnz s7, 900 <free+0x85c>
   4f544:	e6 30 00 a8 	load_32 s7, 12(s6)
   4f548:	e7 00 11 c1 	cmpne_i s7, s7, s2
   4f54c:	c7 1b 00 f4 	bnz s7, 888 <free+0x85c>
   4f550:	e5 20 00 a8 	load_32 s7, 8(s5)
   4f554:	e7 00 11 c1 	cmpne_i s7, s7, s2
   4f558:	67 1b 00 f4 	bnz s7, 876 <free+0x85c>
   4f55c:	a6 30 00 88 	store_32 s5, 12(s6)
   4f560:	c5 20 00 88 	store_32 s6, 8(s5)
   4f564:	84 18 00 f2 	bz s4, 784 <free+0x80c>
   4f568:	92 00 00 f6 	b 584 <free+0x748>
   4f56c:	7f 0c 00 4f 	movehi s3, 127
   4f570:	bf 04 00 4f 	movehi s5, 63
   4f574:	de 00 00 4f 	movehi s6, 30
   4f578:	63 00 7c 00 	or s3, s3, 7936
   4f57c:	64 80 51 c0 	add_i s3, s4, s3
   4f580:	a5 00 40 00 	or s5, s5, 4096
   4f584:	63 40 00 0a 	shr s3, s3, 16
   4f588:	63 20 00 01 	and s3, s3, 8
   4f58c:	84 80 b1 c0 	shl s4, s4, s3
   4f590:	a4 80 52 c0 	add_i s5, s4, s5
   4f594:	a5 40 00 0a 	shr s5, s5, 16
   4f598:	a5 10 00 01 	and s5, s5, 4
   4f59c:	84 80 b2 c0 	shl s4, s4, s5
   4f5a0:	65 80 01 c0 	or s3, s5, s3
   4f5a4:	c4 00 53 c0 	add_i s6, s4, s6
   4f5a8:	c6 40 00 0a 	shr s6, s6, 16
   4f5ac:	a6 08 00 01 	and s5, s6, 2
   4f5b0:	c0 38 00 0f 	move s6, 14
   4f5b4:	63 80 02 c0 	or s3, s3, s5
   4f5b8:	84 80 b2 c0 	shl s4, s4, s5
   4f5bc:	66 80 61 c0 	sub_i s3, s6, s3
   4f5c0:	84 3c 00 0a 	shr s4, s4, 15
   4f5c4:	63 00 52 c0 	add_i s3, s3, s4
   4f5c8:	83 1c 00 05 	add_i s4, s3, 7
   4f5cc:	80 00 a2 c0 	shr s4, s0, s4
   4f5d0:	63 04 00 0b 	shl s3, s3, 1
   4f5d4:	84 04 00 01 	and s4, s4, 1
   4f5d8:	64 80 01 c0 	or s3, s4, s3
   4f5dc:	61 70 00 88 	store_32 s3, 28(s1)
   4f5e0:	a3 08 00 0b 	shl s5, s3, 2
   4f5e4:	41 50 00 88 	store_32 s2, 20(s1)
   4f5e8:	d8 80 52 c0 	add_i s6, s24, s5
   4f5ec:	41 40 00 88 	store_32 s2, 16(s1)
   4f5f0:	40 04 00 0f 	move s2, 1
   4f5f4:	98 10 00 a8 	load_32 s4, 4(s24)
   4f5f8:	a2 80 b1 c0 	shl s5, s2, s3
   4f5fc:	46 c0 04 05 	add_i s2, s6, 304
   4f600:	e4 80 12 c0 	and s7, s4, s5
   4f604:	47 00 00 f4 	bnz s7, 8 <free+0x5a4>
   4f608:	08 00 00 f6 	b 32 <free+0x5c0>
   4f60c:	82 00 00 a8 	load_32 s4, (s2)
   4f610:	a3 7c 00 10 	cmpeq_i s5, s3, 31
   4f614:	25 01 00 f4 	bnz s5, 36 <free+0x5d0>
   4f618:	40 64 00 0f 	move s2, 25
   4f61c:	63 04 00 0a 	shr s3, s3, 1
   4f620:	42 80 61 c0 	sub_i s2, s2, s3
   4f624:	06 00 00 f6 	b 24 <free+0x5d4>
   4f628:	04 80 02 c0 	or s0, s4, s5
   4f62c:	18 10 00 88 	store_32 s0, 4(s24)
   4f630:	22 00 00 88 	store_32 s1, (s2)
   4f634:	13 00 00 f6 	b 76 <free+0x618>
   4f638:	40 00 00 0f 	move s2, 0
   4f63c:	60 00 b1 c0 	shl s3, s0, s2
   4f640:	40 00 f2 c0 	move s2, s4
   4f644:	82 10 00 a8 	load_32 s4, 4(s2)
   4f648:	84 e0 ff 01 	and s4, s4, -8
   4f64c:	84 00 00 c1 	cmpeq_i s4, s4, s0
   4f650:	24 04 00 f4 	bnz s4, 132 <free+0x66c>
   4f654:	83 74 00 0a 	shr s4, s3, 29
   4f658:	63 04 00 0b 	shl s3, s3, 1
   4f65c:	84 10 00 01 	and s4, s4, 4
   4f660:	a2 00 52 c0 	add_i s5, s2, s4
   4f664:	85 40 00 a8 	load_32 s4, 16(s5)
   4f668:	c4 fe ff f5 	bnz s4, -40 <free+0x5d8>
   4f66c:	78 40 00 a8 	load_32 s3, 16(s24)
   4f670:	05 40 00 05 	add_i s0, s5, 16
   4f674:	63 00 60 c1 	cmpgt_u s3, s3, s0
   4f678:	63 12 00 f4 	bnz s3, 588 <free+0x85c>
   4f67c:	20 00 00 88 	store_32 s1, (s0)
   4f680:	41 60 00 88 	store_32 s2, 24(s1)
   4f684:	21 30 00 88 	store_32 s1, 12(s1)
   4f688:	21 20 00 88 	store_32 s1, 8(s1)
   4f68c:	18 80 00 a8 	load_32 s0, 32(s24)
   4f690:	00 fc ff 05 	add_i s0, s0, -1
   4f694:	18 80 00 88 	store_32 s0, 32(s24)
   4f698:	40 00 00 f4 	bnz s0, 8 <free+0x638>
   4f69c:	1e 00 00 f6 	b 120 <free+0x6ac>
   4f6a0:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4f6a4:	00 08 00 01 	and s0, s0, 2
   4f6a8:	e0 00 00 f2 	bz s0, 28 <free+0x65c>
   4f6ac:	18 00 07 05 	add_i s0, s24, 448
   4f6b0:	20 00 00 0f 	move s1, 0
   4f6b4:	40 00 00 aa 	load_sync s2, (s0)
   4f6b8:	40 80 f0 c0 	move s2, s1
   4f6bc:	40 00 00 8a 	store_sync s2, (s0)  
   4f6c0:	a2 ff ff f3 	bz s2, -12 <free+0x64c>
   4f6c4:	fe e3 00 a8 	load_32 ra, 56(sp)
   4f6c8:	1e f3 00 a8 	load_32 s24, 60(sp)
   4f6cc:	de 03 01 05 	add_i sp, sp, 64
   4f6d0:	1f 00 00 f0 	ret
   4f6d4:	02 20 00 a8 	load_32 s0, 8(s2)
   4f6d8:	78 40 00 a8 	load_32 s3, 16(s24)
   4f6dc:	83 00 60 c1 	cmpgt_u s4, s3, s0
   4f6e0:	24 0f 00 f4 	bnz s4, 484 <free+0x85c>
   4f6e4:	63 00 61 c1 	cmpgt_u s3, s3, s2
   4f6e8:	e3 0e 00 f4 	bnz s3, 476 <free+0x85c>
   4f6ec:	20 30 00 88 	store_32 s1, 12(s0)
   4f6f0:	22 20 00 88 	store_32 s1, 8(s2)
   4f6f4:	01 20 00 88 	store_32 s0, 8(s1)
   4f6f8:	00 00 00 0f 	move s0, 0
   4f6fc:	41 30 00 88 	store_32 s2, 12(s1)
   4f700:	01 60 00 88 	store_32 s0, 24(s1)
   4f704:	18 80 00 a8 	load_32 s0, 32(s24)
   4f708:	00 fc ff 05 	add_i s0, s0, -1
   4f70c:	18 80 00 88 	store_32 s0, 32(s24)
   4f710:	80 fc ff f5 	bnz s0, -112 <free+0x638>
   4f714:	18 30 07 05 	add_i s0, s24, 460
   4f718:	20 00 00 a8 	load_32 s1, (s0)
   4f71c:	01 20 00 05 	add_i s0, s1, 8
   4f720:	c1 ff ff f5 	bnz s1, -8 <free+0x6b0>
   4f724:	00 fc ff 0f 	move s0, -1
   4f728:	18 80 00 88 	store_32 s0, 32(s24)
   4f72c:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4f730:	00 08 00 01 	and s0, s0, 2
   4f734:	80 fc ff f3 	bz s0, -112 <free+0x65c>
   4f738:	dd ff ff f7 	b -140 <free+0x644>
   4f73c:	40 04 00 0f 	move s2, 1
   4f740:	98 00 00 a8 	load_32 s4, (s24)
   4f744:	42 00 b3 c0 	shl s2, s2, s6
   4f748:	42 fc ff 03 	xor s2, s2, -1
   4f74c:	44 00 11 c0 	and s2, s4, s2
   4f750:	58 00 00 88 	store_32 s2, (s24)
   4f754:	48 00 00 f6 	b 288 <free+0x80c>
   4f758:	e2 50 00 a8 	load_32 s7, 20(s2)
   4f75c:	47 00 00 f4 	bnz s7, 8 <free+0x6fc>
   4f760:	03 00 00 f6 	b 12 <free+0x704>
   4f764:	c2 50 00 05 	add_i s6, s2, 20
   4f768:	04 00 00 f6 	b 16 <free+0x710>
   4f76c:	c2 40 00 05 	add_i s6, s2, 16
   4f770:	e6 00 00 a8 	load_32 s7, (s6)
   4f774:	27 0a 00 f2 	bz s7, 324 <free+0x850>
   4f778:	a0 80 f3 c0 	move s5, s7
   4f77c:	e5 50 00 a8 	load_32 s7, 20(s5)
   4f780:	00 01 f3 c0 	move s8, s6
   4f784:	c5 50 00 05 	add_i s6, s5, 20
   4f788:	87 ff ff f5 	bnz s7, -16 <free+0x710>
   4f78c:	e5 40 00 a8 	load_32 s7, 16(s5)
   4f790:	c5 40 00 05 	add_i s6, s5, 16
   4f794:	27 ff ff f5 	bnz s7, -28 <free+0x710>
   4f798:	d8 40 00 a8 	load_32 s6, 16(s24)
   4f79c:	c6 00 64 c1 	cmpgt_u s6, s6, s8
   4f7a0:	26 09 00 f4 	bnz s6, 292 <free+0x85c>
   4f7a4:	c0 00 00 0f 	move s6, 0
   4f7a8:	c8 00 00 88 	store_32 s6, (s8)
   4f7ac:	44 06 00 f2 	bz s4, 200 <free+0x80c>
   4f7b0:	c2 70 00 a8 	load_32 s6, 28(s2)
   4f7b4:	e6 08 00 0b 	shl s7, s6, 2
   4f7b8:	f8 80 53 c0 	add_i s7, s24, s7
   4f7bc:	07 c1 04 a8 	load_32 s8, 304(s7)
   4f7c0:	08 01 11 c1 	cmpne_i s8, s8, s2
   4f7c4:	48 00 00 f4 	bnz s8, 8 <free+0x764>
   4f7c8:	0c 00 00 f6 	b 48 <free+0x790>
   4f7cc:	d8 40 00 a8 	load_32 s6, 16(s24)
   4f7d0:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   4f7d4:	86 07 00 f4 	bnz s6, 240 <free+0x85c>
   4f7d8:	c4 40 00 a8 	load_32 s6, 16(s4)
   4f7dc:	c6 00 01 c1 	cmpeq_i s6, s6, s2
   4f7e0:	06 02 00 f4 	bnz s6, 64 <free+0x7b8>
   4f7e4:	c0 50 00 0f 	move s6, 20
   4f7e8:	c4 00 53 c0 	add_i s6, s4, s6
   4f7ec:	a6 00 00 88 	store_32 s5, (s6)
   4f7f0:	25 04 00 f2 	bz s5, 132 <free+0x80c>
   4f7f4:	0f 00 00 f6 	b 60 <free+0x7c8>
   4f7f8:	e7 c0 04 05 	add_i s7, s7, 304
   4f7fc:	a7 00 00 88 	store_32 s5, (s7)
   4f800:	85 01 00 f4 	bnz s5, 48 <free+0x7c8>
   4f804:	40 04 00 0f 	move s2, 1
   4f808:	98 10 00 a8 	load_32 s4, 4(s24)
   4f80c:	42 00 b3 c0 	shl s2, s2, s6
   4f810:	42 fc ff 03 	xor s2, s2, -1
   4f814:	44 00 11 c0 	and s2, s4, s2
   4f818:	58 10 00 88 	store_32 s2, 4(s24)
   4f81c:	16 00 00 f6 	b 88 <free+0x80c>
   4f820:	c0 40 00 0f 	move s6, 16
   4f824:	c4 00 53 c0 	add_i s6, s4, s6
   4f828:	a6 00 00 88 	store_32 s5, (s6)
   4f82c:	45 02 00 f2 	bz s5, 72 <free+0x80c>
   4f830:	d8 40 00 a8 	load_32 s6, 16(s24)
   4f834:	e6 80 62 c1 	cmpgt_u s7, s6, s5
   4f838:	67 04 00 f4 	bnz s7, 140 <free+0x85c>
   4f83c:	85 60 00 88 	store_32 s4, 24(s5)
   4f840:	82 40 00 a8 	load_32 s4, 16(s2)
   4f844:	a4 00 00 f2 	bz s4, 20 <free+0x7f0>
   4f848:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   4f84c:	c6 03 00 f4 	bnz s6, 120 <free+0x85c>
   4f850:	85 40 00 88 	store_32 s4, 16(s5)
   4f854:	a4 60 00 88 	store_32 s5, 24(s4)
   4f858:	42 50 00 a8 	load_32 s2, 20(s2)
   4f85c:	c2 00 00 f2 	bz s2, 24 <free+0x80c>
   4f860:	98 40 00 a8 	load_32 s4, 16(s24)
   4f864:	84 00 61 c1 	cmpgt_u s4, s4, s2
   4f868:	e4 02 00 f4 	bnz s4, 92 <free+0x85c>
   4f86c:	45 50 00 88 	store_32 s2, 20(s5)
   4f870:	a2 60 00 88 	store_32 s5, 24(s2)
   4f874:	43 e0 ff 01 	and s2, s3, -8
   4f878:	02 00 50 c0 	add_i s0, s2, s0
   4f87c:	41 00 50 c0 	add_i s2, s1, s0
   4f880:	60 04 00 00 	or s3, s0, 1
   4f884:	61 10 00 88 	store_32 s3, 4(s1)
   4f888:	02 00 00 88 	store_32 s0, (s2)
   4f88c:	58 50 00 a8 	load_32 s2, 20(s24)
   4f890:	41 00 11 c1 	cmpne_i s2, s1, s2
   4f894:	82 db ff f5 	bnz s2, -1168 <free+0x39c>
   4f898:	18 20 00 88 	store_32 s0, 8(s24)
   4f89c:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4f8a0:	00 08 00 01 	and s0, s0, 2
   4f8a4:	00 f1 ff f3 	bz s0, -480 <free+0x65c>
   4f8a8:	81 ff ff f7 	b -508 <free+0x644>
   4f8ac:	80 00 00 0f 	move s4, 0
   4f8b0:	43 d4 ff f3 	bz s3, -1400 <free+0x2d0>
   4f8b4:	6e fe ff f7 	b -1608 <free+0x204>
   4f8b8:	a0 00 00 0f 	move s5, 0
   4f8bc:	c4 fd ff f3 	bz s4, -72 <free+0x80c>
   4f8c0:	bc ff ff f7 	b -272 <free+0x748>
   4f8c4:	a5 08 00 f8 	call 8852 <abort>

000000000004f8c8 sys_trim:
   4f8c8:	de 03 ff 05 	add_i sp, sp, -64
   4f8cc:	1e f3 00 88 	store_32 s24, 60(sp)
   4f8d0:	3e e3 00 88 	store_32 s25, 56(sp)
   4f8d4:	5e d3 00 88 	store_32 s26, 52(sp)
   4f8d8:	7e c3 00 88 	store_32 s27, 48(sp)
   4f8dc:	fe b3 00 88 	store_32 ra, 44(sp)
   4f8e0:	20 0c 00 4f 	movehi s1, 96
   4f8e4:	61 03 56 00 	or s27, s1, 5504
   4f8e8:	3b 00 00 a8 	load_32 s1, (s27)
   4f8ec:	61 05 00 f4 	bnz s1, 172 <sys_trim+0xd0>
   4f8f0:	20 0c 00 4f 	movehi s1, 96
   4f8f4:	40 04 00 0f 	move s2, 1
   4f8f8:	21 d0 5d 00 	or s1, s1, 6004
   4f8fc:	61 00 00 aa 	load_sync s3, (s1)
   4f900:	80 00 f1 c0 	move s4, s2
   4f904:	81 00 00 8a 	store_sync s4, (s1)  
   4f908:	a4 ff ff f3 	bz s4, -12 <sys_trim+0x34>
   4f90c:	03 01 00 f2 	bz s3, 32 <sys_trim+0x64>
   4f910:	61 00 00 a8 	load_32 s3, (s1)
   4f914:	e3 ff ff f5 	bnz s3, -4 <sys_trim+0x48>
   4f918:	61 00 00 aa 	load_sync s3, (s1)
   4f91c:	80 00 f1 c0 	move s4, s2
   4f920:	81 00 00 8a 	store_sync s4, (s1)  
   4f924:	a4 ff ff f3 	bz s4, -12 <sys_trim+0x50>
   4f928:	43 ff ff f5 	bnz s3, -24 <sys_trim+0x48>
   4f92c:	5b 00 00 a8 	load_32 s2, (s27)
   4f930:	a2 02 00 f4 	bnz s2, 84 <sys_trim+0xbc>
   4f934:	40 00 40 0f 	move s2, 4096
   4f938:	5b 20 00 88 	store_32 s2, 8(s27)
   4f93c:	5b 10 00 88 	store_32 s2, 4(s27)
   4f940:	40 fc ff 0f 	move s2, -1
   4f944:	5b 30 00 88 	store_32 s2, 12(s27)
   4f948:	40 0c 00 4f 	movehi s2, 96
   4f94c:	60 20 00 4f 	movehi s3, 256
   4f950:	7b 40 00 88 	store_32 s3, 16(s27)
   4f954:	60 08 00 0f 	move s3, 2
   4f958:	7b 50 00 88 	store_32 s3, 20(s27)
   4f95c:	42 60 56 00 	or s2, s2, 5528
   4f960:	aa 54 55 4f 	movehi s5, 174762
   4f964:	80 00 00 0f 	move s4, 0
   4f968:	62 f0 06 88 	store_32 s3, 444(s2)
   4f96c:	7e a0 00 05 	add_i s3, sp, 40
   4f970:	82 00 07 88 	store_32 s4, 448(s2)
   4f974:	45 60 55 00 	or s2, s5, 5464
   4f978:	63 c0 ff 01 	and s3, s3, -16
   4f97c:	43 00 31 c0 	xor s2, s3, s2
   4f980:	5b 00 00 88 	store_32 s2, (s27)
   4f984:	40 00 00 0f 	move s2, 0
   4f988:	61 00 00 aa 	load_sync s3, (s1)
   4f98c:	60 00 f1 c0 	move s3, s2
   4f990:	61 00 00 8a 	store_sync s3, (s1)  
   4f994:	a3 ff ff f3 	bz s3, -12 <sys_trim+0xc0>
   4f998:	20 fc fe 16 	cmpgt_u s1, s0, -65
   4f99c:	60 00 00 0f 	move s3, 0
   4f9a0:	a1 0a 00 f4 	bnz s1, 340 <sys_trim+0x22c>
   4f9a4:	20 0c 00 4f 	movehi s1, 96
   4f9a8:	81 60 56 00 	or s4, s1, 5528
   4f9ac:	44 63 00 a8 	load_32 s26, 24(s4)
   4f9b0:	3a 0a 00 f2 	bz s26, 324 <sys_trim+0x22c>
   4f9b4:	24 30 00 a8 	load_32 s1, 12(s4)
   4f9b8:	40 a0 00 05 	add_i s2, s0, 40
   4f9bc:	41 00 91 c1 	cmple_u s2, s1, s2
   4f9c0:	e2 08 00 f4 	bnz s2, 284 <sys_trim+0x214>
   4f9c4:	40 5c ff 0f 	move s2, -41
   4f9c8:	7e 80 00 88 	store_32 s3, 32(sp)
   4f9cc:	1b 23 00 a8 	load_32 s24, 8(s27)
   4f9d0:	02 00 60 c0 	sub_i s0, s2, s0
   4f9d4:	00 80 50 c0 	add_i s0, s0, s1
   4f9d8:	20 00 fc c0 	move s1, s24
   4f9dc:	9e 90 00 88 	store_32 s4, 36(sp)
   4f9e0:	00 00 5c c0 	add_i s0, s0, s24
   4f9e4:	48 17 00 f8 	call 23840 <__udivsi3>
   4f9e8:	9e 90 00 a8 	load_32 s4, 36(sp)
   4f9ec:	00 fc ff 05 	add_i s0, s0, -1
   4f9f0:	24 13 07 05 	add_i s25, s4, 452
   4f9f4:	39 00 00 a8 	load_32 s1, (s25)
   4f9f8:	41 00 6d c1 	cmpgt_u s2, s1, s26
   4f9fc:	42 00 00 f4 	bnz s2, 8 <sys_trim+0x13c>
   4fa00:	05 00 00 f6 	b 20 <sys_trim+0x14c>
   4fa04:	39 23 00 a8 	load_32 s25, 8(s25)
   4fa08:	39 00 00 a8 	load_32 s1, (s25)
   4fa0c:	41 00 6d c1 	cmpgt_u s2, s1, s26
   4fa10:	a2 ff ff f5 	bnz s2, -12 <sys_trim+0x13c>
   4fa14:	59 10 00 a8 	load_32 s2, 4(s25)
   4fa18:	21 00 51 c0 	add_i s1, s1, s2
   4fa1c:	21 00 6d c1 	cmpgt_u s1, s1, s26
   4fa20:	41 00 00 f4 	bnz s1, 8 <sys_trim+0x160>
   4fa24:	f8 ff ff f7 	b -32 <sys_trim+0x13c>
   4fa28:	39 30 00 a0 	load_u8 s1, 12(s25)
   4fa2c:	7e 80 00 a8 	load_32 s3, 32(sp)
   4fa30:	21 20 00 01 	and s1, s1, 8
   4fa34:	41 05 00 f4 	bnz s1, 168 <sys_trim+0x214>
   4fa38:	3f fc 7f 4f 	movehi s1, 262143
   4fa3c:	40 00 7c c0 	mull_i s2, s0, s24
   4fa40:	01 f8 7f 00 	or s0, s1, 8190
   4fa44:	02 00 60 c1 	cmpgt_u s0, s2, s0
   4fa48:	40 00 00 f4 	bnz s0, 8 <sys_trim+0x188>
   4fa4c:	03 00 00 f6 	b 12 <sys_trim+0x190>
   4fa50:	00 00 80 4f 	movehi s0, 262144
   4fa54:	40 00 6c c0 	sub_i s2, s0, s24
   4fa58:	00 0c 00 4f 	movehi s0, 96
   4fa5c:	00 07 00 0f 	move s24, 1
   4fa60:	40 d3 5d 00 	or s26, s0, 6004
   4fa64:	1a 00 00 aa 	load_sync s0, (s26)
   4fa68:	20 00 fc c0 	move s1, s24
   4fa6c:	3a 00 00 8a 	store_sync s1, (s26)  
   4fa70:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x19c>
   4fa74:	5e 60 00 88 	store_32 s2, 24(sp)
   4fa78:	00 01 00 f2 	bz s0, 32 <sys_trim+0x1d0>
   4fa7c:	1a 00 00 a8 	load_32 s0, (s26)
   4fa80:	e0 ff ff f5 	bnz s0, -4 <sys_trim+0x1b4>
   4fa84:	1a 00 00 aa 	load_sync s0, (s26)
   4fa88:	20 00 fc c0 	move s1, s24
   4fa8c:	3a 00 00 8a 	store_sync s1, (s26)  
   4fa90:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x1bc>
   4fa94:	40 ff ff f5 	bnz s0, -24 <sys_trim+0x1b4>
   4fa98:	00 00 00 0f 	move s0, 0
   4fa9c:	1e 70 00 88 	store_32 s0, 28(sp)
   4faa0:	16 0e 00 f8 	call 14424 <sbrk>
   4faa4:	39 00 00 a8 	load_32 s1, (s25)
   4faa8:	59 10 00 a8 	load_32 s2, 4(s25)
   4faac:	60 00 f0 c0 	move s3, s0
   4fab0:	01 00 51 c0 	add_i s0, s1, s2
   4fab4:	03 00 10 c1 	cmpne_i s0, s3, s0
   4fab8:	40 00 00 f4 	bnz s0, 8 <sys_trim+0x1f8>
   4fabc:	17 00 00 f6 	b 92 <sys_trim+0x250>
   4fac0:	9e 90 00 a8 	load_32 s4, 36(sp)
   4fac4:	7e 80 00 a8 	load_32 s3, 32(sp)
   4fac8:	3e 70 00 a8 	load_32 s1, 28(sp)
   4facc:	1a 00 00 aa 	load_sync s0, (s26)
   4fad0:	00 80 f0 c0 	move s0, s1
   4fad4:	1a 00 00 8a 	store_sync s0, (s26)  
   4fad8:	a0 ff ff f3 	bz s0, -12 <sys_trim+0x204>
   4fadc:	04 30 00 a8 	load_32 s0, 12(s4)
   4fae0:	24 70 00 a8 	load_32 s1, 28(s4)
   4fae4:	00 80 90 c1 	cmple_u s0, s0, s1
   4fae8:	60 00 00 f4 	bnz s0, 12 <sys_trim+0x22c>
   4faec:	00 fc ff 0f 	move s0, -1
   4faf0:	04 70 00 88 	store_32 s0, 28(s4)
   4faf4:	00 83 f1 c0 	move s24, s3
   4faf8:	00 00 fc c0 	move s0, s24
   4fafc:	fe b3 00 a8 	load_32 ra, 44(sp)
   4fb00:	7e c3 00 a8 	load_32 s27, 48(sp)
   4fb04:	5e d3 00 a8 	load_32 s26, 52(sp)
   4fb08:	3e e3 00 a8 	load_32 s25, 56(sp)
   4fb0c:	1e f3 00 a8 	load_32 s24, 60(sp)
   4fb10:	de 03 01 05 	add_i sp, sp, 64
   4fb14:	1f 00 00 f0 	ret
   4fb18:	1e 60 00 a8 	load_32 s0, 24(sp)
   4fb1c:	3e 70 00 a8 	load_32 s1, 28(sp)
   4fb20:	7e 60 00 88 	store_32 s3, 24(sp)
   4fb24:	01 00 60 c0 	sub_i s0, s1, s0
   4fb28:	f4 0d 00 f8 	call 14288 <sbrk>
   4fb2c:	1e 50 00 88 	store_32 s0, 20(sp)
   4fb30:	1e 70 00 a8 	load_32 s0, 28(sp)
   4fb34:	f1 0d 00 f8 	call 14276 <sbrk>
   4fb38:	5e 60 00 a8 	load_32 s2, 24(sp)
   4fb3c:	3e 50 00 a8 	load_32 s1, 20(sp)
   4fb40:	21 fc ff 10 	cmpeq_i s1, s1, -1
   4fb44:	e1 fb ff f5 	bnz s1, -132 <sys_trim+0x1f8>
   4fb48:	20 00 81 c1 	cmplt_u s1, s0, s2
   4fb4c:	41 00 00 f4 	bnz s1, 8 <sys_trim+0x28c>
   4fb50:	dc ff ff f7 	b -144 <sys_trim+0x1f8>
   4fb54:	be 70 00 a8 	load_32 s5, 28(sp)
   4fb58:	02 00 60 c0 	sub_i s0, s2, s0
   4fb5c:	3a 00 00 aa 	load_sync s1, (s26)
   4fb60:	20 80 f2 c0 	move s1, s5
   4fb64:	3a 00 00 8a 	store_sync s1, (s26)  
   4fb68:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x294>
   4fb6c:	9e 90 00 a8 	load_32 s4, 36(sp)
   4fb70:	7e 80 00 a8 	load_32 s3, 32(sp)
   4fb74:	40 fb ff f3 	bz s0, -152 <sys_trim+0x214>
   4fb78:	39 10 00 a8 	load_32 s1, 4(s25)
   4fb7c:	21 00 60 c0 	sub_i s1, s1, s0
   4fb80:	39 10 00 88 	store_32 s1, 4(s25)
   4fb84:	24 c0 06 a8 	load_32 s1, 432(s4)
   4fb88:	21 00 60 c0 	sub_i s1, s1, s0
   4fb8c:	24 c0 06 88 	store_32 s1, 432(s4)
   4fb90:	24 60 00 a8 	load_32 s1, 24(s4)
   4fb94:	64 30 00 a8 	load_32 s3, 12(s4)
   4fb98:	41 20 00 05 	add_i s2, s1, 8
   4fb9c:	03 00 60 c0 	sub_i s0, s3, s0
   4fba0:	42 1c 00 01 	and s2, s2, 7
   4fba4:	42 00 00 10 	cmpeq_i s2, s2, 0
   4fba8:	82 00 00 f4 	bnz s2, 16 <sys_trim+0x2f0>
   4fbac:	40 e0 ff 0f 	move s2, -8
   4fbb0:	42 80 60 c0 	sub_i s2, s2, s1
   4fbb4:	a2 1c 00 01 	and s5, s2, 7
   4fbb8:	41 80 52 c0 	add_i s2, s1, s5
   4fbbc:	44 60 00 88 	store_32 s2, 24(s4)
   4fbc0:	60 80 62 c0 	sub_i s3, s0, s5
   4fbc4:	64 30 00 88 	store_32 s3, 12(s4)
   4fbc8:	01 00 50 c0 	add_i s0, s1, s0
   4fbcc:	20 a0 00 0f 	move s1, 40
   4fbd0:	63 04 00 00 	or s3, s3, 1
   4fbd4:	62 10 00 88 	store_32 s3, 4(s2)
   4fbd8:	20 10 00 88 	store_32 s1, 4(s0)
   4fbdc:	1b 40 00 a8 	load_32 s0, 16(s27)
   4fbe0:	04 70 00 88 	store_32 s0, 28(s4)
   4fbe4:	c5 ff ff f7 	b -236 <sys_trim+0x230>

000000000004fbe8 calloc:
   4fbe8:	de 03 ff 05 	add_i sp, sp, -64
   4fbec:	1e f3 00 88 	store_32 s24, 60(sp)
   4fbf0:	3e e3 00 88 	store_32 s25, 56(sp)
   4fbf4:	fe d3 00 88 	store_32 ra, 52(sp)
   4fbf8:	20 83 f0 c0 	move s25, s1
   4fbfc:	20 00 f0 c0 	move s1, s0
   4fc00:	81 01 00 f2 	bz s1, 48 <calloc+0x48>
   4fc04:	19 80 00 c0 	or s0, s25, s1
   4fc08:	48 00 00 4f 	movehi s2, 8
   4fc0c:	19 83 70 c0 	mull_i s24, s25, s1
   4fc10:	00 00 81 c1 	cmplt_u s0, s0, s2
   4fc14:	00 01 00 f4 	bnz s0, 32 <calloc+0x4c>
   4fc18:	00 00 fc c0 	move s0, s24
   4fc1c:	ba 16 00 f8 	call 23272 <__udivsi3>
   4fc20:	00 80 0c c1 	cmpeq_i s0, s0, s25
   4fc24:	80 00 00 f4 	bnz s0, 16 <calloc+0x4c>
   4fc28:	00 ff ff 0f 	move s24, -1
   4fc2c:	02 00 00 f6 	b 8 <calloc+0x4c>
   4fc30:	00 03 00 0f 	move s24, 0
   4fc34:	00 00 fc c0 	move s0, s24
   4fc38:	82 f5 ff f9 	call -10744 <malloc>
   4fc3c:	fe d3 00 a8 	load_32 ra, 52(sp)
   4fc40:	3e e3 00 a8 	load_32 s25, 56(sp)
   4fc44:	1e f3 00 a8 	load_32 s24, 60(sp)
   4fc48:	de 03 01 05 	add_i sp, sp, 64
   4fc4c:	1f 00 00 f0 	ret

000000000004fc50 realloc:
   4fc50:	de 03 ff 05 	add_i sp, sp, -64
   4fc54:	1e f3 00 88 	store_32 s24, 60(sp)
   4fc58:	3e e3 00 88 	store_32 s25, 56(sp)
   4fc5c:	5e d3 00 88 	store_32 s26, 52(sp)
   4fc60:	7e c3 00 88 	store_32 s27, 48(sp)
   4fc64:	fe b3 00 88 	store_32 ra, 44(sp)
   4fc68:	20 83 f0 c0 	move s25, s1
   4fc6c:	00 03 f0 c0 	move s24, s0
   4fc70:	58 00 00 f4 	bnz s24, 8 <realloc+0x28>
   4fc74:	09 00 00 f6 	b 36 <realloc+0x48>
   4fc78:	19 fc fe 16 	cmpgt_u s0, s25, -65
   4fc7c:	40 03 00 0f 	move s26, 0
   4fc80:	a0 08 00 f4 	bnz s0, 276 <realloc+0x144>
   4fc84:	19 2c 00 18 	cmplt_u s0, s25, 11
   4fc88:	00 01 00 f4 	bnz s0, 32 <realloc+0x58>
   4fc8c:	19 2c 00 05 	add_i s0, s25, 11
   4fc90:	20 e0 ff 01 	and s1, s0, -8
   4fc94:	06 00 00 f6 	b 24 <realloc+0x5c>
   4fc98:	00 80 fc c0 	move s0, s25
   4fc9c:	69 f5 ff f9 	call -10844 <malloc>
   4fca0:	40 03 f0 c0 	move s26, s0
   4fca4:	3c 00 00 f6 	b 240 <realloc+0x144>
   4fca8:	20 40 00 0f 	move s1, 16
   4fcac:	00 0c 00 4f 	movehi s0, 96
   4fcb0:	60 63 56 00 	or s27, s0, 5528
   4fcb4:	1b f0 06 a0 	load_u8 s0, 444(s27)
   4fcb8:	40 08 00 01 	and s2, s0, 2
   4fcbc:	18 e0 ff 05 	add_i s0, s24, -8
   4fcc0:	e2 01 00 f2 	bz s2, 60 <realloc+0xac>
   4fcc4:	5b 00 07 05 	add_i s2, s27, 448
   4fcc8:	60 04 00 0f 	move s3, 1
   4fccc:	82 00 00 aa 	load_sync s4, (s2)
   4fcd0:	a0 80 f1 c0 	move s5, s3
   4fcd4:	a2 00 00 8a 	store_sync s5, (s2)  
   4fcd8:	a5 ff ff f3 	bz s5, -12 <realloc+0x7c>
   4fcdc:	04 01 00 f2 	bz s4, 32 <realloc+0xac>
   4fce0:	9b 00 07 a8 	load_32 s4, 448(s27)
   4fce4:	e4 ff ff f5 	bnz s4, -4 <realloc+0x90>
   4fce8:	82 00 00 aa 	load_sync s4, (s2)
   4fcec:	a0 80 f1 c0 	move s5, s3
   4fcf0:	a2 00 00 8a 	store_sync s5, (s2)  
   4fcf4:	a5 ff ff f3 	bz s5, -12 <realloc+0x98>
   4fcf8:	44 ff ff f5 	bnz s4, -24 <realloc+0x90>
   4fcfc:	2e 00 00 f8 	call 184 <try_realloc_chunk>
   4fd00:	3b f0 06 a0 	load_u8 s1, 444(s27)
   4fd04:	21 08 00 01 	and s1, s1, 2
   4fd08:	e1 00 00 f2 	bz s1, 28 <realloc+0xd4>
   4fd0c:	3b 00 07 05 	add_i s1, s27, 448
   4fd10:	40 00 00 0f 	move s2, 0
   4fd14:	61 00 00 aa 	load_sync s3, (s1)
   4fd18:	60 00 f1 c0 	move s3, s2
   4fd1c:	61 00 00 8a 	store_sync s3, (s1)  
   4fd20:	a3 ff ff f3 	bz s3, -12 <realloc+0xc4>
   4fd24:	60 00 00 f2 	bz s0, 12 <realloc+0xe0>
   4fd28:	40 23 00 05 	add_i s26, s0, 8
   4fd2c:	1a 00 00 f6 	b 104 <realloc+0x144>
   4fd30:	00 80 fc c0 	move s0, s25
   4fd34:	43 f5 ff f9 	call -10996 <malloc>
   4fd38:	60 03 f0 c0 	move s27, s0
   4fd3c:	db 02 00 f2 	bz s27, 88 <realloc+0x144>
   4fd40:	18 f0 ff a9 	load_32 s0, -4(s24)
   4fd44:	20 0c 00 01 	and s1, s0, 3
   4fd48:	00 e0 ff 01 	and s0, s0, -8
   4fd4c:	21 00 00 10 	cmpeq_i s1, s1, 0
   4fd50:	c1 00 00 f4 	bnz s1, 24 <realloc+0x118>
   4fd54:	20 10 00 0f 	move s1, 4
   4fd58:	40 80 60 c0 	sub_i s2, s0, s1
   4fd5c:	02 80 8c c1 	cmplt_u s0, s2, s25
   4fd60:	e0 00 00 f4 	bnz s0, 28 <realloc+0x12c>
   4fd64:	05 00 00 f6 	b 20 <realloc+0x128>
   4fd68:	20 20 00 0f 	move s1, 8
   4fd6c:	40 80 60 c0 	sub_i s2, s0, s1
   4fd70:	02 80 8c c1 	cmplt_u s0, s2, s25
   4fd74:	40 00 00 f4 	bnz s0, 8 <realloc+0x12c>
   4fd78:	40 80 fc c0 	move s2, s25
   4fd7c:	00 80 fd c0 	move s0, s27
   4fd80:	20 00 fc c0 	move s1, s24
   4fd84:	e0 07 00 f8 	call 8064 <memcpy>
   4fd88:	00 00 fc c0 	move s0, s24
   4fd8c:	b7 fc ff f9 	call -3364 <free>
   4fd90:	40 83 fd c0 	move s26, s27
   4fd94:	00 00 fd c0 	move s0, s26
   4fd98:	fe b3 00 a8 	load_32 ra, 44(sp)
   4fd9c:	7e c3 00 a8 	load_32 s27, 48(sp)
   4fda0:	5e d3 00 a8 	load_32 s26, 52(sp)
   4fda4:	3e e3 00 a8 	load_32 s25, 56(sp)
   4fda8:	1e f3 00 a8 	load_32 s24, 60(sp)
   4fdac:	de 03 01 05 	add_i sp, sp, 64
   4fdb0:	1f 00 00 f0 	ret

000000000004fdb4 try_realloc_chunk:
   4fdb4:	de 03 ff 05 	add_i sp, sp, -64
   4fdb8:	1e f3 00 88 	store_32 s24, 60(sp)
   4fdbc:	fe e3 00 88 	store_32 ra, 56(sp)
   4fdc0:	00 03 f0 c0 	move s24, s0
   4fdc4:	40 0c 00 4f 	movehi s2, 96
   4fdc8:	78 10 00 a8 	load_32 s3, 4(s24)
   4fdcc:	42 60 56 00 	or s2, s2, 5528
   4fdd0:	03 0c 00 01 	and s0, s3, 3
   4fdd4:	c2 40 00 a8 	load_32 s6, 16(s2)
   4fdd8:	80 04 00 10 	cmpeq_i s4, s0, 1
   4fddc:	84 24 00 f4 	bnz s4, 1168 <try_realloc_chunk+0x4b8>
   4fde0:	86 00 6c c1 	cmpgt_u s4, s6, s24
   4fde4:	44 24 00 f4 	bnz s4, 1160 <try_realloc_chunk+0x4b8>
   4fde8:	83 e0 ff 01 	and s4, s3, -8
   4fdec:	b8 00 52 c0 	add_i s5, s24, s4
   4fdf0:	e5 00 9c c1 	cmple_u s7, s5, s24
   4fdf4:	c7 23 00 f4 	bnz s7, 1144 <try_realloc_chunk+0x4b8>
   4fdf8:	e5 10 00 a8 	load_32 s7, 4(s5)
   4fdfc:	07 05 00 01 	and s8, s7, 1
   4fe00:	68 23 00 f2 	bz s8, 1132 <try_realloc_chunk+0x4b8>
   4fe04:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x58>
   4fe08:	32 00 00 f6 	b 200 <try_realloc_chunk+0x11c>
   4fe0c:	04 80 80 c1 	cmplt_u s0, s4, s1
   4fe10:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x64>
   4fe14:	38 00 00 f6 	b 224 <try_realloc_chunk+0x140>
   4fe18:	02 60 00 a8 	load_32 s0, 24(s2)
   4fe1c:	00 80 12 c1 	cmpne_i s0, s0, s5
   4fe20:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x74>
   4fe24:	54 00 00 f6 	b 336 <try_realloc_chunk+0x1c0>
   4fe28:	02 50 00 a8 	load_32 s0, 20(s2)
   4fe2c:	00 80 12 c1 	cmpne_i s0, s0, s5
   4fe30:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x84>
   4fe34:	5f 00 00 f6 	b 380 <try_realloc_chunk+0x1fc>
   4fe38:	07 09 00 01 	and s8, s7, 2
   4fe3c:	00 00 00 0f 	move s0, 0
   4fe40:	28 09 00 f4 	bnz s8, 292 <try_realloc_chunk+0x1b0>
   4fe44:	07 e1 ff 01 	and s8, s7, -8
   4fe48:	88 00 52 c0 	add_i s4, s8, s4
   4fe4c:	04 81 80 c1 	cmplt_u s8, s4, s1
   4fe50:	a8 08 00 f4 	bnz s8, 276 <try_realloc_chunk+0x1b0>
   4fe54:	07 fc 03 16 	cmpgt_u s0, s7, 255
   4fe58:	40 10 00 f4 	bnz s0, 520 <try_realloc_chunk+0x2ac>
   4fe5c:	07 0d 00 0a 	shr s8, s7, 3
   4fe60:	05 20 00 a8 	load_32 s0, 8(s5)
   4fe64:	e8 0c 00 0b 	shl s7, s8, 3
   4fe68:	e2 80 53 c0 	add_i s7, s2, s7
   4fe6c:	27 a1 00 05 	add_i s9, s7, 40
   4fe70:	e5 30 00 a8 	load_32 s7, 12(s5)
   4fe74:	40 81 04 c1 	cmpeq_i s10, s0, s9
   4fe78:	ca 00 00 f4 	bnz s10, 24 <try_realloc_chunk+0xdc>
   4fe7c:	46 01 60 c1 	cmpgt_u s10, s6, s0
   4fe80:	6a 1f 00 f4 	bnz s10, 1004 <try_realloc_chunk+0x4b8>
   4fe84:	40 31 00 a8 	load_32 s10, 12(s0)
   4fe88:	4a 81 12 c1 	cmpne_i s10, s10, s5
   4fe8c:	0a 1f 00 f4 	bnz s10, 992 <try_realloc_chunk+0x4b8>
   4fe90:	47 01 10 c1 	cmpne_i s10, s7, s0
   4fe94:	4a 00 00 f4 	bnz s10, 8 <try_realloc_chunk+0xe8>
   4fe98:	83 00 00 f6 	b 524 <try_realloc_chunk+0x2f0>
   4fe9c:	47 80 04 c1 	cmpeq_i s2, s7, s9
   4fea0:	c2 00 00 f4 	bnz s2, 24 <try_realloc_chunk+0x104>
   4fea4:	46 80 63 c1 	cmpgt_u s2, s6, s7
   4fea8:	22 1e 00 f4 	bnz s2, 964 <try_realloc_chunk+0x4b8>
   4feac:	47 20 00 a8 	load_32 s2, 8(s7)
   4feb0:	42 80 12 c1 	cmpne_i s2, s2, s5
   4feb4:	c2 1d 00 f4 	bnz s2, 952 <try_realloc_chunk+0x4b8>
   4feb8:	e0 30 00 88 	store_32 s7, 12(s0)
   4febc:	07 20 00 88 	store_32 s0, 8(s7)
   4fec0:	44 80 60 c0 	sub_i s2, s4, s1
   4fec4:	02 3c 00 16 	cmpgt_u s0, s2, 15
   4fec8:	40 1b 00 f4 	bnz s0, 872 <try_realloc_chunk+0x47c>
   4fecc:	cc 00 00 f6 	b 816 <try_realloc_chunk+0x448>
   4fed0:	01 00 04 18 	cmplt_u s0, s1, 256
   4fed4:	40 00 00 0f 	move s2, 0
   4fed8:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x12c>
   4fedc:	16 00 00 f6 	b 88 <try_realloc_chunk+0x180>
   4fee0:	00 00 f1 c0 	move s0, s2
   4fee4:	fe e3 00 a8 	load_32 ra, 56(sp)
   4fee8:	1e f3 00 a8 	load_32 s24, 60(sp)
   4feec:	de 03 01 05 	add_i sp, sp, 64
   4fef0:	1f 00 00 f0 	ret
   4fef4:	44 80 60 c0 	sub_i s2, s4, s1
   4fef8:	02 40 00 18 	cmplt_u s0, s2, 16
   4fefc:	00 19 00 f4 	bnz s0, 800 <try_realloc_chunk+0x468>
   4ff00:	03 04 00 01 	and s0, s3, 1
   4ff04:	60 80 00 c0 	or s3, s0, s1
   4ff08:	18 80 50 c0 	add_i s0, s24, s1
   4ff0c:	23 08 00 00 	or s1, s3, 2
   4ff10:	38 10 00 88 	store_32 s1, 4(s24)
   4ff14:	22 0c 00 00 	or s1, s2, 3
   4ff18:	20 10 00 88 	store_32 s1, 4(s0)
   4ff1c:	25 10 00 a8 	load_32 s1, 4(s5)
   4ff20:	21 04 00 00 	or s1, s1, 1
   4ff24:	25 10 00 88 	store_32 s1, 4(s5)
   4ff28:	20 00 f1 c0 	move s1, s2
   4ff2c:	07 05 00 f8 	call 5148 <dispose_chunk>
   4ff30:	bb 00 00 f6 	b 748 <try_realloc_chunk+0x468>
   4ff34:	01 10 00 05 	add_i s0, s1, 4
   4ff38:	04 00 80 c1 	cmplt_u s0, s4, s0
   4ff3c:	20 01 00 f4 	bnz s0, 36 <try_realloc_chunk+0x1ac>
   4ff40:	00 0c 00 4f 	movehi s0, 96
   4ff44:	24 80 60 c0 	sub_i s1, s4, s1
   4ff48:	00 00 56 00 	or s0, s0, 5504
   4ff4c:	00 20 00 a8 	load_32 s0, 8(s0)
   4ff50:	00 04 00 0b 	shl s0, s0, 1
   4ff54:	21 00 90 c1 	cmple_u s1, s1, s0
   4ff58:	00 00 fc c0 	move s0, s24
   4ff5c:	41 00 00 f4 	bnz s1, 8 <try_realloc_chunk+0x1b0>
   4ff60:	00 00 f1 c0 	move s0, s2
   4ff64:	fe e3 00 a8 	load_32 ra, 56(sp)
   4ff68:	1e f3 00 a8 	load_32 s24, 60(sp)
   4ff6c:	de 03 01 05 	add_i sp, sp, 64
   4ff70:	1f 00 00 f0 	ret
   4ff74:	02 30 00 a8 	load_32 s0, 12(s2)
   4ff78:	00 00 52 c0 	add_i s0, s0, s4
   4ff7c:	80 80 90 c1 	cmple_u s4, s0, s1
   4ff80:	c4 02 00 f4 	bnz s4, 88 <try_realloc_chunk+0x224>
   4ff84:	63 04 00 01 	and s3, s3, 1
   4ff88:	00 80 60 c0 	sub_i s0, s0, s1
   4ff8c:	63 80 00 c0 	or s3, s3, s1
   4ff90:	38 80 50 c0 	add_i s1, s24, s1
   4ff94:	63 08 00 00 	or s3, s3, 2
   4ff98:	78 10 00 88 	store_32 s3, 4(s24)
   4ff9c:	60 04 00 00 	or s3, s0, 1
   4ffa0:	61 10 00 88 	store_32 s3, 4(s1)
   4ffa4:	22 60 00 88 	store_32 s1, 24(s2)
   4ffa8:	02 30 00 88 	store_32 s0, 12(s2)
   4ffac:	9c 00 00 f6 	b 624 <try_realloc_chunk+0x468>
   4ffb0:	02 20 00 a8 	load_32 s0, 8(s2)
   4ffb4:	80 00 52 c0 	add_i s4, s0, s4
   4ffb8:	04 80 80 c1 	cmplt_u s0, s4, s1
   4ffbc:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x210>
   4ffc0:	0b 00 00 f6 	b 44 <try_realloc_chunk+0x238>
   4ffc4:	00 00 00 0f 	move s0, 0
   4ffc8:	fe e3 00 a8 	load_32 ra, 56(sp)
   4ffcc:	1e f3 00 a8 	load_32 s24, 60(sp)
   4ffd0:	de 03 01 05 	add_i sp, sp, 64
   4ffd4:	1f 00 00 f0 	ret
   4ffd8:	00 00 00 0f 	move s0, 0
   4ffdc:	fe e3 00 a8 	load_32 ra, 56(sp)
   4ffe0:	1e f3 00 a8 	load_32 s24, 60(sp)
   4ffe4:	de 03 01 05 	add_i sp, sp, 64
   4ffe8:	1f 00 00 f0 	ret
   4ffec:	04 80 60 c0 	sub_i s0, s4, s1
   4fff0:	a0 40 00 18 	cmplt_u s5, s0, 16
   4fff4:	c5 01 00 f4 	bnz s5, 56 <try_realloc_chunk+0x278>
   4fff8:	63 04 00 01 	and s3, s3, 1
   4fffc:	98 00 52 c0 	add_i s4, s24, s4
   50000:	63 80 00 c0 	or s3, s3, s1
   50004:	38 80 50 c0 	add_i s1, s24, s1
   50008:	63 08 00 00 	or s3, s3, 2
   5000c:	78 10 00 88 	store_32 s3, 4(s24)
   50010:	60 04 00 00 	or s3, s0, 1
   50014:	61 10 00 88 	store_32 s3, 4(s1)
   50018:	04 00 00 88 	store_32 s0, (s4)
   5001c:	64 10 00 a8 	load_32 s3, 4(s4)
   50020:	63 f8 ff 01 	and s3, s3, -2
   50024:	64 10 00 88 	store_32 s3, 4(s4)
   50028:	0b 00 00 f6 	b 44 <try_realloc_chunk+0x2a0>
   5002c:	03 04 00 01 	and s0, s3, 1
   50030:	38 00 52 c0 	add_i s1, s24, s4
   50034:	00 00 02 c0 	or s0, s0, s4
   50038:	00 08 00 00 	or s0, s0, 2
   5003c:	18 10 00 88 	store_32 s0, 4(s24)
   50040:	01 10 00 a8 	load_32 s0, 4(s1)
   50044:	60 04 00 00 	or s3, s0, 1
   50048:	61 10 00 88 	store_32 s3, 4(s1)
   5004c:	00 00 00 0f 	move s0, 0
   50050:	20 00 f0 c0 	move s1, s0
   50054:	02 20 00 88 	store_32 s0, 8(s2)
   50058:	22 50 00 88 	store_32 s1, 20(s2)
   5005c:	70 00 00 f6 	b 448 <try_realloc_chunk+0x468>
   50060:	05 60 00 a8 	load_32 s0, 24(s5)
   50064:	e5 30 00 a8 	load_32 s7, 12(s5)
   50068:	07 81 02 c1 	cmpeq_i s8, s7, s5
   5006c:	08 03 00 f4 	bnz s8, 96 <try_realloc_chunk+0x318>
   50070:	05 21 00 a8 	load_32 s8, 8(s5)
   50074:	c6 00 64 c1 	cmpgt_u s6, s6, s8
   50078:	a6 0f 00 f4 	bnz s6, 500 <try_realloc_chunk+0x4b8>
   5007c:	c8 30 00 a8 	load_32 s6, 12(s8)
   50080:	c6 80 12 c1 	cmpne_i s6, s6, s5
   50084:	46 0f 00 f4 	bnz s6, 488 <try_realloc_chunk+0x4b8>
   50088:	c7 20 00 a8 	load_32 s6, 8(s7)
   5008c:	c6 80 12 c1 	cmpne_i s6, s6, s5
   50090:	e6 0e 00 f4 	bnz s6, 476 <try_realloc_chunk+0x4b8>
   50094:	e8 30 00 88 	store_32 s7, 12(s8)
   50098:	07 21 00 88 	store_32 s8, 8(s7)
   5009c:	a0 0a 00 f2 	bz s0, 340 <try_realloc_chunk+0x43c>
   500a0:	20 00 00 f6 	b 128 <try_realloc_chunk+0x36c>
   500a4:	00 04 00 0f 	move s0, 1
   500a8:	a2 00 00 a8 	load_32 s5, (s2)
   500ac:	00 00 b4 c0 	shl s0, s0, s8
   500b0:	00 fc ff 03 	xor s0, s0, -1
   500b4:	05 00 10 c0 	and s0, s5, s0
   500b8:	02 00 00 88 	store_32 s0, (s2)
   500bc:	44 80 60 c0 	sub_i s2, s4, s1
   500c0:	02 3c 00 16 	cmpgt_u s0, s2, 15
   500c4:	60 0b 00 f4 	bnz s0, 364 <try_realloc_chunk+0x47c>
   500c8:	4d 00 00 f6 	b 308 <try_realloc_chunk+0x448>
   500cc:	25 51 00 a8 	load_32 s9, 20(s5)
   500d0:	49 00 00 f4 	bnz s9, 8 <try_realloc_chunk+0x324>
   500d4:	03 00 00 f6 	b 12 <try_realloc_chunk+0x32c>
   500d8:	05 51 00 05 	add_i s8, s5, 20
   500dc:	04 00 00 f6 	b 16 <try_realloc_chunk+0x338>
   500e0:	05 41 00 05 	add_i s8, s5, 16
   500e4:	28 01 00 a8 	load_32 s9, (s8)
   500e8:	c9 0b 00 f2 	bz s9, 376 <try_realloc_chunk+0x4ac>
   500ec:	e0 80 f4 c0 	move s7, s9
   500f0:	27 51 00 a8 	load_32 s9, 20(s7)
   500f4:	40 01 f4 c0 	move s10, s8
   500f8:	07 51 00 05 	add_i s8, s7, 20
   500fc:	89 ff ff f5 	bnz s9, -16 <try_realloc_chunk+0x338>
   50100:	27 41 00 a8 	load_32 s9, 16(s7)
   50104:	07 41 00 05 	add_i s8, s7, 16
   50108:	29 ff ff f5 	bnz s9, -28 <try_realloc_chunk+0x338>
   5010c:	c6 00 65 c1 	cmpgt_u s6, s6, s10
   50110:	e6 0a 00 f4 	bnz s6, 348 <try_realloc_chunk+0x4b8>
   50114:	c0 00 00 0f 	move s6, 0
   50118:	ca 00 00 88 	store_32 s6, (s10)
   5011c:	a0 06 00 f2 	bz s0, 212 <try_realloc_chunk+0x43c>
   50120:	c5 70 00 a8 	load_32 s6, 28(s5)
   50124:	06 09 00 0b 	shl s8, s6, 2
   50128:	02 01 54 c0 	add_i s8, s2, s8
   5012c:	28 c1 04 a8 	load_32 s9, 304(s8)
   50130:	29 81 12 c1 	cmpne_i s9, s9, s5
   50134:	49 00 00 f4 	bnz s9, 8 <try_realloc_chunk+0x388>
   50138:	0c 00 00 f6 	b 48 <try_realloc_chunk+0x3b4>
   5013c:	c2 40 00 a8 	load_32 s6, 16(s2)
   50140:	c6 00 60 c1 	cmpgt_u s6, s6, s0
   50144:	46 09 00 f4 	bnz s6, 296 <try_realloc_chunk+0x4b8>
   50148:	c0 40 00 a8 	load_32 s6, 16(s0)
   5014c:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   50150:	66 02 00 f4 	bnz s6, 76 <try_realloc_chunk+0x3e8>
   50154:	c0 50 00 0f 	move s6, 20
   50158:	c0 00 53 c0 	add_i s6, s0, s6
   5015c:	e6 00 00 88 	store_32 s7, (s6)
   50160:	87 04 00 f2 	bz s7, 144 <try_realloc_chunk+0x43c>
   50164:	12 00 00 f6 	b 72 <try_realloc_chunk+0x3f8>
   50168:	08 c1 04 05 	add_i s8, s8, 304
   5016c:	e8 00 00 88 	store_32 s7, (s8)
   50170:	e7 01 00 f4 	bnz s7, 60 <try_realloc_chunk+0x3f8>
   50174:	00 04 00 0f 	move s0, 1
   50178:	a2 10 00 a8 	load_32 s5, 4(s2)
   5017c:	00 00 b3 c0 	shl s0, s0, s6
   50180:	00 fc ff 03 	xor s0, s0, -1
   50184:	05 00 10 c0 	and s0, s5, s0
   50188:	02 10 00 88 	store_32 s0, 4(s2)
   5018c:	44 80 60 c0 	sub_i s2, s4, s1
   50190:	02 3c 00 16 	cmpgt_u s0, s2, 15
   50194:	e0 04 00 f4 	bnz s0, 156 <try_realloc_chunk+0x47c>
   50198:	19 00 00 f6 	b 100 <try_realloc_chunk+0x448>
   5019c:	c0 40 00 0f 	move s6, 16
   501a0:	c0 00 53 c0 	add_i s6, s0, s6
   501a4:	e6 00 00 88 	store_32 s7, (s6)
   501a8:	47 02 00 f2 	bz s7, 72 <try_realloc_chunk+0x43c>
   501ac:	c2 40 00 a8 	load_32 s6, 16(s2)
   501b0:	06 81 63 c1 	cmpgt_u s8, s6, s7
   501b4:	c8 05 00 f4 	bnz s8, 184 <try_realloc_chunk+0x4b8>
   501b8:	07 60 00 88 	store_32 s0, 24(s7)
   501bc:	05 40 00 a8 	load_32 s0, 16(s5)
   501c0:	a0 00 00 f2 	bz s0, 20 <try_realloc_chunk+0x420>
   501c4:	c6 00 60 c1 	cmpgt_u s6, s6, s0
   501c8:	26 05 00 f4 	bnz s6, 164 <try_realloc_chunk+0x4b8>
   501cc:	07 40 00 88 	store_32 s0, 16(s7)
   501d0:	e0 60 00 88 	store_32 s7, 24(s0)
   501d4:	05 50 00 a8 	load_32 s0, 20(s5)
   501d8:	c0 00 00 f2 	bz s0, 24 <try_realloc_chunk+0x43c>
   501dc:	42 40 00 a8 	load_32 s2, 16(s2)
   501e0:	42 00 60 c1 	cmpgt_u s2, s2, s0
   501e4:	42 04 00 f4 	bnz s2, 136 <try_realloc_chunk+0x4b8>
   501e8:	07 50 00 88 	store_32 s0, 20(s7)
   501ec:	e0 60 00 88 	store_32 s7, 24(s0)
   501f0:	44 80 60 c0 	sub_i s2, s4, s1
   501f4:	02 3c 00 16 	cmpgt_u s0, s2, 15
   501f8:	c0 01 00 f4 	bnz s0, 56 <try_realloc_chunk+0x47c>
   501fc:	03 04 00 01 	and s0, s3, 1
   50200:	38 00 52 c0 	add_i s1, s24, s4
   50204:	00 00 02 c0 	or s0, s0, s4
   50208:	00 08 00 00 	or s0, s0, 2
   5020c:	18 10 00 88 	store_32 s0, 4(s24)
   50210:	01 10 00 a8 	load_32 s0, 4(s1)
   50214:	00 04 00 00 	or s0, s0, 1
   50218:	01 10 00 88 	store_32 s0, 4(s1)
   5021c:	00 00 fc c0 	move s0, s24
   50220:	fe e3 00 a8 	load_32 ra, 56(sp)
   50224:	1e f3 00 a8 	load_32 s24, 60(sp)
   50228:	de 03 01 05 	add_i sp, sp, 64
   5022c:	1f 00 00 f0 	ret
   50230:	03 04 00 01 	and s0, s3, 1
   50234:	60 80 00 c0 	or s3, s0, s1
   50238:	18 80 50 c0 	add_i s0, s24, s1
   5023c:	23 08 00 00 	or s1, s3, 2
   50240:	38 10 00 88 	store_32 s1, 4(s24)
   50244:	38 00 52 c0 	add_i s1, s24, s4
   50248:	62 0c 00 00 	or s3, s2, 3
   5024c:	60 10 00 88 	store_32 s3, 4(s0)
   50250:	61 10 00 a8 	load_32 s3, 4(s1)
   50254:	63 04 00 00 	or s3, s3, 1
   50258:	61 10 00 88 	store_32 s3, 4(s1)
   5025c:	33 ff ff f7 	b -820 <try_realloc_chunk+0x174>
   50260:	e0 00 00 0f 	move s7, 0
   50264:	60 fc ff f3 	bz s0, -116 <try_realloc_chunk+0x43c>
   50268:	ae ff ff f7 	b -328 <try_realloc_chunk+0x36c>
   5026c:	3b 06 00 f8 	call 6380 <abort>

0000000000050270 realloc_in_place:
   50270:	de 03 ff 05 	add_i sp, sp, -64
   50274:	1e f3 00 88 	store_32 s24, 60(sp)
   50278:	3e e3 00 88 	store_32 s25, 56(sp)
   5027c:	5e d3 00 88 	store_32 s26, 52(sp)
   50280:	fe c3 00 88 	store_32 ra, 48(sp)
   50284:	00 03 f0 c0 	move s24, s0
   50288:	00 00 00 0f 	move s0, 0
   5028c:	98 05 00 f2 	bz s24, 176 <realloc_in_place+0xcc>
   50290:	41 fc fe 16 	cmpgt_u s2, s1, -65
   50294:	42 05 00 f4 	bnz s2, 168 <realloc_in_place+0xcc>
   50298:	01 2c 00 18 	cmplt_u s0, s1, 11
   5029c:	80 00 00 f4 	bnz s0, 16 <realloc_in_place+0x3c>
   502a0:	01 2c 00 05 	add_i s0, s1, 11
   502a4:	20 e0 ff 01 	and s1, s0, -8
   502a8:	02 00 00 f6 	b 8 <realloc_in_place+0x40>
   502ac:	20 40 00 0f 	move s1, 16
   502b0:	00 0c 00 4f 	movehi s0, 96
   502b4:	38 e3 ff 05 	add_i s25, s24, -8
   502b8:	40 63 56 00 	or s26, s0, 5528
   502bc:	1a f0 06 a0 	load_u8 s0, 444(s26)
   502c0:	00 08 00 01 	and s0, s0, 2
   502c4:	e0 01 00 f2 	bz s0, 60 <realloc_in_place+0x90>
   502c8:	1a 00 07 05 	add_i s0, s26, 448
   502cc:	40 04 00 0f 	move s2, 1
   502d0:	60 00 00 aa 	load_sync s3, (s0)
   502d4:	80 00 f1 c0 	move s4, s2
   502d8:	80 00 00 8a 	store_sync s4, (s0)  
   502dc:	a4 ff ff f3 	bz s4, -12 <realloc_in_place+0x60>
   502e0:	03 01 00 f2 	bz s3, 32 <realloc_in_place+0x90>
   502e4:	7a 00 07 a8 	load_32 s3, 448(s26)
   502e8:	e3 ff ff f5 	bnz s3, -4 <realloc_in_place+0x74>
   502ec:	60 00 00 aa 	load_sync s3, (s0)
   502f0:	80 00 f1 c0 	move s4, s2
   502f4:	80 00 00 8a 	store_sync s4, (s0)  
   502f8:	a4 ff ff f3 	bz s4, -12 <realloc_in_place+0x7c>
   502fc:	43 ff ff f5 	bnz s3, -24 <realloc_in_place+0x74>
   50300:	00 80 fc c0 	move s0, s25
   50304:	ac fe ff f9 	call -1360 <try_realloc_chunk>
   50308:	3a f0 06 a0 	load_u8 s1, 444(s26)
   5030c:	21 08 00 01 	and s1, s1, 2
   50310:	e1 00 00 f2 	bz s1, 28 <realloc_in_place+0xbc>
   50314:	3a 00 07 05 	add_i s1, s26, 448
   50318:	40 00 00 0f 	move s2, 0
   5031c:	61 00 00 aa 	load_sync s3, (s1)
   50320:	60 00 f1 c0 	move s3, s2
   50324:	61 00 00 8a 	store_sync s3, (s1)  
   50328:	a3 ff ff f3 	bz s3, -12 <realloc_in_place+0xac>
   5032c:	00 80 0c c1 	cmpeq_i s0, s0, s25
   50330:	40 00 00 f4 	bnz s0, 8 <realloc_in_place+0xc8>
   50334:	00 03 00 0f 	move s24, 0
   50338:	00 00 fc c0 	move s0, s24
   5033c:	fe c3 00 a8 	load_32 ra, 48(sp)
   50340:	5e d3 00 a8 	load_32 s26, 52(sp)
   50344:	3e e3 00 a8 	load_32 s25, 56(sp)
   50348:	1e f3 00 a8 	load_32 s24, 60(sp)
   5034c:	de 03 01 05 	add_i sp, sp, 64
   50350:	1f 00 00 f0 	ret

0000000000050354 memalign:
   50354:	de 03 ff 05 	add_i sp, sp, -64
   50358:	fe f3 00 88 	store_32 ra, 60(sp)
   5035c:	40 20 00 16 	cmpgt_u s2, s0, 8
   50360:	c2 00 00 f4 	bnz s2, 24 <memalign+0x24>
   50364:	00 80 f0 c0 	move s0, s1
   50368:	b6 f3 ff f9 	call -12584 <malloc>
   5036c:	fe f3 00 a8 	load_32 ra, 60(sp)
   50370:	de 03 01 05 	add_i sp, sp, 64
   50374:	1f 00 00 f0 	ret
   50378:	04 00 00 f8 	call 16 <internal_memalign>
   5037c:	fe f3 00 a8 	load_32 ra, 60(sp)
   50380:	de 03 01 05 	add_i sp, sp, 64
   50384:	1f 00 00 f0 	ret

0000000000050388 internal_memalign:
   50388:	de 03 ff 05 	add_i sp, sp, -64
   5038c:	1e f3 00 88 	store_32 s24, 60(sp)
   50390:	3e e3 00 88 	store_32 s25, 56(sp)
   50394:	5e d3 00 88 	store_32 s26, 52(sp)
   50398:	7e c3 00 88 	store_32 s27, 48(sp)
   5039c:	fe b3 00 88 	store_32 ra, 44(sp)
   503a0:	40 40 00 16 	cmpgt_u s2, s0, 16
   503a4:	42 00 00 f4 	bnz s2, 8 <internal_memalign+0x24>
   503a8:	00 40 00 0f 	move s0, 16
   503ac:	40 fc ff 05 	add_i s2, s0, -1
   503b0:	42 00 10 c0 	and s2, s2, s0
   503b4:	e2 00 00 f2 	bz s2, 28 <internal_memalign+0x48>
   503b8:	40 40 00 0f 	move s2, 16
   503bc:	60 03 f1 c0 	move s27, s2
   503c0:	7b 00 80 c1 	cmplt_u s3, s27, s0
   503c4:	5b 04 00 0b 	shl s2, s27, 1
   503c8:	a3 ff ff f5 	bnz s3, -12 <internal_memalign+0x34>
   503cc:	02 00 00 f6 	b 8 <internal_memalign+0x4c>
   503d0:	60 03 f0 c0 	move s27, s0
   503d4:	00 00 ff 0f 	move s0, -64
   503d8:	00 03 00 0f 	move s24, 0
   503dc:	00 80 6d c0 	sub_i s0, s0, s27
   503e0:	00 80 90 c1 	cmple_u s0, s0, s1
   503e4:	20 0e 00 f4 	bnz s0, 452 <internal_memalign+0x220>
   503e8:	01 2c 00 18 	cmplt_u s0, s1, 11
   503ec:	00 01 00 f4 	bnz s0, 32 <internal_memalign+0x84>
   503f0:	01 2c 00 05 	add_i s0, s1, 11
   503f4:	20 e3 ff 01 	and s25, s0, -8
   503f8:	19 80 5d c0 	add_i s0, s25, s27
   503fc:	00 30 00 05 	add_i s0, s0, 12
   50400:	90 f3 ff f9 	call -12736 <malloc>
   50404:	20 0d 00 f2 	bz s0, 420 <internal_memalign+0x220>
   50408:	06 00 00 f6 	b 24 <internal_memalign+0x98>
   5040c:	20 43 00 0f 	move s25, 16
   50410:	19 80 5d c0 	add_i s0, s25, s27
   50414:	00 30 00 05 	add_i s0, s0, 12
   50418:	8a f3 ff f9 	call -12760 <malloc>
   5041c:	60 0c 00 f2 	bz s0, 396 <internal_memalign+0x220>
   50420:	20 0c 00 4f 	movehi s1, 96
   50424:	3e a3 00 88 	store_32 s25, 40(sp)
   50428:	21 63 56 00 	or s25, s1, 5528
   5042c:	39 f0 06 a0 	load_u8 s1, 444(s25)
   50430:	21 08 00 01 	and s1, s1, 2
   50434:	e1 01 00 f2 	bz s1, 60 <internal_memalign+0xe8>
   50438:	39 00 07 05 	add_i s1, s25, 448
   5043c:	40 04 00 0f 	move s2, 1
   50440:	61 00 00 aa 	load_sync s3, (s1)
   50444:	80 00 f1 c0 	move s4, s2
   50448:	81 00 00 8a 	store_sync s4, (s1)  
   5044c:	a4 ff ff f3 	bz s4, -12 <internal_memalign+0xb8>
   50450:	03 01 00 f2 	bz s3, 32 <internal_memalign+0xe8>
   50454:	79 00 07 a8 	load_32 s3, 448(s25)
   50458:	e3 ff ff f5 	bnz s3, -4 <internal_memalign+0xcc>
   5045c:	61 00 00 aa 	load_sync s3, (s1)
   50460:	80 00 f1 c0 	move s4, s2
   50464:	81 00 00 8a 	store_sync s4, (s1)  
   50468:	a4 ff ff f3 	bz s4, -12 <internal_memalign+0xd4>
   5046c:	43 ff ff f5 	bnz s3, -24 <internal_memalign+0xcc>
   50470:	3b fc ff 05 	add_i s1, s27, -1
   50474:	40 e3 ff 05 	add_i s26, s0, -8
   50478:	21 00 10 c0 	and s1, s1, s0
   5047c:	61 05 00 f2 	bz s1, 172 <internal_memalign+0x1a0>
   50480:	20 80 5d c0 	add_i s1, s0, s27
   50484:	40 00 00 0f 	move s2, 0
   50488:	21 fc ff 05 	add_i s1, s1, -1
   5048c:	42 80 6d c0 	sub_i s2, s2, s27
   50490:	21 00 11 c0 	and s1, s1, s2
   50494:	01 e3 ff 05 	add_i s24, s1, -8
   50498:	38 00 6d c0 	sub_i s1, s24, s26
   5049c:	21 3c 00 16 	cmpgt_u s1, s1, 15
   504a0:	41 00 00 f4 	bnz s1, 8 <internal_memalign+0x120>
   504a4:	18 83 5d c0 	add_i s24, s24, s27
   504a8:	40 f0 ff a9 	load_32 s2, -4(s0)
   504ac:	38 00 6d c0 	sub_i s1, s24, s26
   504b0:	62 e0 ff 01 	and s3, s2, -8
   504b4:	82 0c 00 01 	and s4, s2, 3
   504b8:	43 80 60 c0 	sub_i s2, s3, s1
   504bc:	44 00 00 f4 	bnz s4, 8 <internal_memalign+0x13c>
   504c0:	15 00 00 f6 	b 84 <internal_memalign+0x18c>
   504c4:	78 10 00 a8 	load_32 s3, 4(s24)
   504c8:	63 04 00 01 	and s3, s3, 1
   504cc:	62 80 01 c0 	or s3, s2, s3
   504d0:	58 00 51 c0 	add_i s2, s24, s2
   504d4:	63 08 00 00 	or s3, s3, 2
   504d8:	78 10 00 88 	store_32 s3, 4(s24)
   504dc:	62 10 00 a8 	load_32 s3, 4(s2)
   504e0:	63 04 00 00 	or s3, s3, 1
   504e4:	62 10 00 88 	store_32 s3, 4(s2)
   504e8:	40 f0 ff a9 	load_32 s2, -4(s0)
   504ec:	42 04 00 01 	and s2, s2, 1
   504f0:	41 00 01 c0 	or s2, s1, s2
   504f4:	42 08 00 00 	or s2, s2, 2
   504f8:	40 f0 ff 89 	store_32 s2, -4(s0)
   504fc:	18 10 00 a8 	load_32 s0, 4(s24)
   50500:	00 04 00 00 	or s0, s0, 1
   50504:	18 10 00 88 	store_32 s0, 4(s24)
   50508:	00 00 fd c0 	move s0, s26
   5050c:	8f 03 00 f8 	call 3644 <dispose_chunk>
   50510:	05 00 00 f6 	b 20 <internal_memalign+0x19c>
   50514:	1a 00 00 a8 	load_32 s0, (s26)
   50518:	00 80 50 c0 	add_i s0, s0, s1
   5051c:	18 00 00 88 	store_32 s0, (s24)
   50520:	58 10 00 88 	store_32 s2, 4(s24)
   50524:	40 03 fc c0 	move s26, s24
   50528:	1a 10 00 a8 	load_32 s0, 4(s26)
   5052c:	20 0c 00 01 	and s1, s0, 3
   50530:	81 02 00 f2 	bz s1, 80 <internal_memalign+0x1f8>
   50534:	3e a0 00 a8 	load_32 s1, 40(sp)
   50538:	40 e0 ff 01 	and s2, s0, -8
   5053c:	21 40 00 05 	add_i s1, s1, 16
   50540:	22 80 90 c1 	cmple_u s1, s2, s1
   50544:	e1 01 00 f4 	bnz s1, 60 <internal_memalign+0x1f8>
   50548:	9e a0 00 a8 	load_32 s4, 40(sp)
   5054c:	00 04 00 01 	and s0, s0, 1
   50550:	64 00 00 c0 	or s3, s4, s0
   50554:	22 00 62 c0 	sub_i s1, s2, s4
   50558:	1a 00 52 c0 	add_i s0, s26, s4
   5055c:	5a 00 51 c0 	add_i s2, s26, s2
   50560:	63 08 00 00 	or s3, s3, 2
   50564:	7a 10 00 88 	store_32 s3, 4(s26)
   50568:	61 0c 00 00 	or s3, s1, 3
   5056c:	60 10 00 88 	store_32 s3, 4(s0)
   50570:	62 10 00 a8 	load_32 s3, 4(s2)
   50574:	63 04 00 00 	or s3, s3, 1
   50578:	62 10 00 88 	store_32 s3, 4(s2)
   5057c:	73 03 00 f8 	call 3532 <dispose_chunk>
   50580:	19 f0 06 a0 	load_u8 s0, 444(s25)
   50584:	1a 23 00 05 	add_i s24, s26, 8
   50588:	00 08 00 01 	and s0, s0, 2
   5058c:	e0 00 00 f2 	bz s0, 28 <internal_memalign+0x220>
   50590:	19 00 07 05 	add_i s0, s25, 448
   50594:	20 00 00 0f 	move s1, 0
   50598:	40 00 00 aa 	load_sync s2, (s0)
   5059c:	40 80 f0 c0 	move s2, s1
   505a0:	40 00 00 8a 	store_sync s2, (s0)  
   505a4:	a2 ff ff f3 	bz s2, -12 <internal_memalign+0x210>
   505a8:	00 00 fc c0 	move s0, s24
   505ac:	fe b3 00 a8 	load_32 ra, 44(sp)
   505b0:	7e c3 00 a8 	load_32 s27, 48(sp)
   505b4:	5e d3 00 a8 	load_32 s26, 52(sp)
   505b8:	3e e3 00 a8 	load_32 s25, 56(sp)
   505bc:	1e f3 00 a8 	load_32 s24, 60(sp)
   505c0:	de 03 01 05 	add_i sp, sp, 64
   505c4:	1f 00 00 f0 	ret

00000000000505c8 posix_memalign:
   505c8:	de 03 ff 05 	add_i sp, sp, -64
   505cc:	1e f3 00 88 	store_32 s24, 60(sp)
   505d0:	fe e3 00 88 	store_32 ra, 56(sp)
   505d4:	61 20 00 11 	cmpne_i s3, s1, 8
   505d8:	00 03 f0 c0 	move s24, s0
   505dc:	43 01 00 f4 	bnz s3, 40 <posix_memalign+0x3c>
   505e0:	00 00 f1 c0 	move s0, s2
   505e4:	17 f3 ff f9 	call -13220 <malloc>
   505e8:	c0 04 00 f2 	bz s0, 152 <posix_memalign+0xb8>
   505ec:	18 00 00 88 	store_32 s0, (s24)
   505f0:	00 00 00 0f 	move s0, 0
   505f4:	fe e3 00 a8 	load_32 ra, 56(sp)
   505f8:	1e f3 00 a8 	load_32 s24, 60(sp)
   505fc:	de 03 01 05 	add_i sp, sp, 64
   50600:	1f 00 00 f0 	ret
   50604:	61 0c 00 01 	and s3, s1, 3
   50608:	00 58 00 0f 	move s0, 22
   5060c:	e3 00 00 f4 	bnz s3, 28 <posix_memalign+0x60>
   50610:	61 08 00 0a 	shr s3, s1, 2
   50614:	a3 00 00 f2 	bz s3, 20 <posix_memalign+0x60>
   50618:	83 fc ff 05 	add_i s4, s3, -1
   5061c:	64 80 11 c0 	and s3, s4, s3
   50620:	43 00 00 f4 	bnz s3, 8 <posix_memalign+0x60>
   50624:	05 00 00 f6 	b 20 <posix_memalign+0x70>
   50628:	fe e3 00 a8 	load_32 ra, 56(sp)
   5062c:	1e f3 00 a8 	load_32 s24, 60(sp)
   50630:	de 03 01 05 	add_i sp, sp, 64
   50634:	1f 00 00 f0 	ret
   50638:	00 00 ff 0f 	move s0, -64
   5063c:	00 80 60 c0 	sub_i s0, s0, s1
   50640:	00 00 81 c1 	cmplt_u s0, s0, s2
   50644:	40 00 00 f4 	bnz s0, 8 <posix_memalign+0x84>
   50648:	06 00 00 f6 	b 24 <posix_memalign+0x98>
   5064c:	00 30 00 0f 	move s0, 12
   50650:	fe e3 00 a8 	load_32 ra, 56(sp)
   50654:	1e f3 00 a8 	load_32 s24, 60(sp)
   50658:	de 03 01 05 	add_i sp, sp, 64
   5065c:	1f 00 00 f0 	ret
   50660:	01 40 00 16 	cmpgt_u s0, s1, 16
   50664:	40 00 00 f4 	bnz s0, 8 <posix_memalign+0xa4>
   50668:	20 40 00 0f 	move s1, 16
   5066c:	00 80 f0 c0 	move s0, s1
   50670:	20 00 f1 c0 	move s1, s2
   50674:	45 ff ff f9 	call -748 <internal_memalign>
   50678:	40 00 00 f2 	bz s0, 8 <posix_memalign+0xb8>
   5067c:	dc ff ff f7 	b -144 <posix_memalign+0x24>
   50680:	00 30 00 0f 	move s0, 12
   50684:	fe e3 00 a8 	load_32 ra, 56(sp)
   50688:	1e f3 00 a8 	load_32 s24, 60(sp)
   5068c:	de 03 01 05 	add_i sp, sp, 64
   50690:	1f 00 00 f0 	ret

0000000000050694 valloc:
   50694:	de 03 ff 05 	add_i sp, sp, -64
   50698:	fe f3 00 88 	store_32 ra, 60(sp)
   5069c:	20 0c 00 4f 	movehi s1, 96
   506a0:	41 00 56 00 	or s2, s1, 5504
   506a4:	62 00 00 a8 	load_32 s3, (s2)
   506a8:	20 00 f0 c0 	move s1, s0
   506ac:	63 05 00 f4 	bnz s3, 172 <valloc+0xc4>
   506b0:	00 0c 00 4f 	movehi s0, 96
   506b4:	60 04 00 0f 	move s3, 1
   506b8:	00 d0 5d 00 	or s0, s0, 6004
   506bc:	80 00 00 aa 	load_sync s4, (s0)
   506c0:	a0 80 f1 c0 	move s5, s3
   506c4:	a0 00 00 8a 	store_sync s5, (s0)  
   506c8:	a5 ff ff f3 	bz s5, -12 <valloc+0x28>
   506cc:	04 01 00 f2 	bz s4, 32 <valloc+0x58>
   506d0:	80 00 00 a8 	load_32 s4, (s0)
   506d4:	e4 ff ff f5 	bnz s4, -4 <valloc+0x3c>
   506d8:	80 00 00 aa 	load_sync s4, (s0)
   506dc:	a0 80 f1 c0 	move s5, s3
   506e0:	a0 00 00 8a 	store_sync s5, (s0)  
   506e4:	a5 ff ff f3 	bz s5, -12 <valloc+0x44>
   506e8:	44 ff ff f5 	bnz s4, -24 <valloc+0x3c>
   506ec:	62 00 00 a8 	load_32 s3, (s2)
   506f0:	a3 02 00 f4 	bnz s3, 84 <valloc+0xb0>
   506f4:	60 00 40 0f 	move s3, 4096
   506f8:	62 20 00 88 	store_32 s3, 8(s2)
   506fc:	62 10 00 88 	store_32 s3, 4(s2)
   50700:	60 fc ff 0f 	move s3, -1
   50704:	62 30 00 88 	store_32 s3, 12(s2)
   50708:	60 0c 00 4f 	movehi s3, 96
   5070c:	80 20 00 4f 	movehi s4, 256
   50710:	82 40 00 88 	store_32 s4, 16(s2)
   50714:	80 08 00 0f 	move s4, 2
   50718:	82 50 00 88 	store_32 s4, 20(s2)
   5071c:	63 60 56 00 	or s3, s3, 5528
   50720:	ca 54 55 4f 	movehi s6, 174762
   50724:	a0 00 00 0f 	move s5, 0
   50728:	83 f0 06 88 	store_32 s4, 444(s3)
   5072c:	9e e0 00 05 	add_i s4, sp, 56
   50730:	a3 00 07 88 	store_32 s5, 448(s3)
   50734:	66 60 55 00 	or s3, s6, 5464
   50738:	84 c0 ff 01 	and s4, s4, -16
   5073c:	64 80 31 c0 	xor s3, s4, s3
   50740:	62 00 00 88 	store_32 s3, (s2)
   50744:	60 00 00 0f 	move s3, 0
   50748:	80 00 00 aa 	load_sync s4, (s0)
   5074c:	80 80 f1 c0 	move s4, s3
   50750:	80 00 00 8a 	store_sync s4, (s0)  
   50754:	a4 ff ff f3 	bz s4, -12 <valloc+0xb4>
   50758:	02 10 00 a8 	load_32 s0, 4(s2)
   5075c:	40 20 00 16 	cmpgt_u s2, s0, 8
   50760:	c2 00 00 f4 	bnz s2, 24 <valloc+0xe4>
   50764:	00 80 f0 c0 	move s0, s1
   50768:	b6 f2 ff f9 	call -13608 <malloc>
   5076c:	fe f3 00 a8 	load_32 ra, 60(sp)
   50770:	de 03 01 05 	add_i sp, sp, 64
   50774:	1f 00 00 f0 	ret
   50778:	04 ff ff f9 	call -1008 <internal_memalign>
   5077c:	fe f3 00 a8 	load_32 ra, 60(sp)
   50780:	de 03 01 05 	add_i sp, sp, 64
   50784:	1f 00 00 f0 	ret

0000000000050788 pvalloc:
   50788:	de 03 ff 05 	add_i sp, sp, -64
   5078c:	fe f3 00 88 	store_32 ra, 60(sp)
   50790:	20 0c 00 4f 	movehi s1, 96
   50794:	21 00 56 00 	or s1, s1, 5504
   50798:	41 00 00 a8 	load_32 s2, (s1)
   5079c:	62 05 00 f4 	bnz s2, 172 <pvalloc+0xc0>
   507a0:	40 0c 00 4f 	movehi s2, 96
   507a4:	60 04 00 0f 	move s3, 1
   507a8:	42 d0 5d 00 	or s2, s2, 6004
   507ac:	82 00 00 aa 	load_sync s4, (s2)
   507b0:	a0 80 f1 c0 	move s5, s3
   507b4:	a2 00 00 8a 	store_sync s5, (s2)  
   507b8:	a5 ff ff f3 	bz s5, -12 <pvalloc+0x24>
   507bc:	04 01 00 f2 	bz s4, 32 <pvalloc+0x54>
   507c0:	82 00 00 a8 	load_32 s4, (s2)
   507c4:	e4 ff ff f5 	bnz s4, -4 <pvalloc+0x38>
   507c8:	82 00 00 aa 	load_sync s4, (s2)
   507cc:	a0 80 f1 c0 	move s5, s3
   507d0:	a2 00 00 8a 	store_sync s5, (s2)  
   507d4:	a5 ff ff f3 	bz s5, -12 <pvalloc+0x40>
   507d8:	44 ff ff f5 	bnz s4, -24 <pvalloc+0x38>
   507dc:	61 00 00 a8 	load_32 s3, (s1)
   507e0:	a3 02 00 f4 	bnz s3, 84 <pvalloc+0xac>
   507e4:	60 00 40 0f 	move s3, 4096
   507e8:	61 20 00 88 	store_32 s3, 8(s1)
   507ec:	61 10 00 88 	store_32 s3, 4(s1)
   507f0:	60 fc ff 0f 	move s3, -1
   507f4:	61 30 00 88 	store_32 s3, 12(s1)
   507f8:	60 0c 00 4f 	movehi s3, 96
   507fc:	80 20 00 4f 	movehi s4, 256
   50800:	81 40 00 88 	store_32 s4, 16(s1)
   50804:	80 08 00 0f 	move s4, 2
   50808:	81 50 00 88 	store_32 s4, 20(s1)
   5080c:	63 60 56 00 	or s3, s3, 5528
   50810:	ca 54 55 4f 	movehi s6, 174762
   50814:	a0 00 00 0f 	move s5, 0
   50818:	83 f0 06 88 	store_32 s4, 444(s3)
   5081c:	9e e0 00 05 	add_i s4, sp, 56
   50820:	a3 00 07 88 	store_32 s5, 448(s3)
   50824:	66 60 55 00 	or s3, s6, 5464
   50828:	84 c0 ff 01 	and s4, s4, -16
   5082c:	64 80 31 c0 	xor s3, s4, s3
   50830:	61 00 00 88 	store_32 s3, (s1)
   50834:	60 00 00 0f 	move s3, 0
   50838:	82 00 00 aa 	load_sync s4, (s2)
   5083c:	80 80 f1 c0 	move s4, s3
   50840:	82 00 00 8a 	store_sync s4, (s2)  
   50844:	a4 ff ff f3 	bz s4, -12 <pvalloc+0xb0>
   50848:	21 10 00 a8 	load_32 s1, 4(s1)
   5084c:	40 00 00 0f 	move s2, 0
   50850:	00 80 50 c0 	add_i s0, s0, s1
   50854:	42 80 60 c0 	sub_i s2, s2, s1
   50858:	61 20 00 16 	cmpgt_u s3, s1, 8
   5085c:	00 fc ff 05 	add_i s0, s0, -1
   50860:	40 00 11 c0 	and s2, s0, s2
   50864:	c3 00 00 f4 	bnz s3, 24 <pvalloc+0xf4>
   50868:	00 00 f1 c0 	move s0, s2
   5086c:	75 f2 ff f9 	call -13868 <malloc>
   50870:	fe f3 00 a8 	load_32 ra, 60(sp)
   50874:	de 03 01 05 	add_i sp, sp, 64
   50878:	1f 00 00 f0 	ret
   5087c:	00 80 f0 c0 	move s0, s1
   50880:	20 00 f1 c0 	move s1, s2
   50884:	c1 fe ff f9 	call -1276 <internal_memalign>
   50888:	fe f3 00 a8 	load_32 ra, 60(sp)
   5088c:	de 03 01 05 	add_i sp, sp, 64
   50890:	1f 00 00 f0 	ret

0000000000050894 independent_calloc:
   50894:	de 03 ff 05 	add_i sp, sp, -64
   50898:	fe f3 00 88 	store_32 ra, 60(sp)
   5089c:	60 00 f1 c0 	move s3, s2
   508a0:	3e e0 00 88 	store_32 s1, 56(sp)
   508a4:	3e e0 00 05 	add_i s1, sp, 56
   508a8:	40 0c 00 0f 	move s2, 3
   508ac:	04 00 00 f8 	call 16 <ialloc>
   508b0:	fe f3 00 a8 	load_32 ra, 60(sp)
   508b4:	de 03 01 05 	add_i sp, sp, 64
   508b8:	1f 00 00 f0 	ret

00000000000508bc ialloc:
   508bc:	de 03 ff 05 	add_i sp, sp, -64
   508c0:	1e f3 00 88 	store_32 s24, 60(sp)
   508c4:	3e e3 00 88 	store_32 s25, 56(sp)
   508c8:	5e d3 00 88 	store_32 s26, 52(sp)
   508cc:	7e c3 00 88 	store_32 s27, 48(sp)
   508d0:	fe b3 00 88 	store_32 ra, 44(sp)
   508d4:	80 0c 00 4f 	movehi s4, 96
   508d8:	84 00 56 00 	or s4, s4, 5504
   508dc:	a4 00 00 a8 	load_32 s5, (s4)
   508e0:	00 81 f1 c0 	move s8, s3
   508e4:	00 03 f1 c0 	move s24, s2
   508e8:	20 83 f0 c0 	move s25, s1
   508ec:	40 03 f0 c0 	move s26, s0
   508f0:	65 05 00 f4 	bnz s5, 172 <ialloc+0xe0>
   508f4:	00 0c 00 4f 	movehi s0, 96
   508f8:	20 04 00 0f 	move s1, 1
   508fc:	00 d0 5d 00 	or s0, s0, 6004
   50900:	40 00 00 aa 	load_sync s2, (s0)
   50904:	60 80 f0 c0 	move s3, s1
   50908:	60 00 00 8a 	store_sync s3, (s0)  
   5090c:	a3 ff ff f3 	bz s3, -12 <ialloc+0x44>
   50910:	02 01 00 f2 	bz s2, 32 <ialloc+0x74>
   50914:	40 00 00 a8 	load_32 s2, (s0)
   50918:	e2 ff ff f5 	bnz s2, -4 <ialloc+0x58>
   5091c:	40 00 00 aa 	load_sync s2, (s0)
   50920:	60 80 f0 c0 	move s3, s1
   50924:	60 00 00 8a 	store_sync s3, (s0)  
   50928:	a3 ff ff f3 	bz s3, -12 <ialloc+0x60>
   5092c:	42 ff ff f5 	bnz s2, -24 <ialloc+0x58>
   50930:	24 00 00 a8 	load_32 s1, (s4)
   50934:	a1 02 00 f4 	bnz s1, 84 <ialloc+0xcc>
   50938:	20 00 40 0f 	move s1, 4096
   5093c:	24 20 00 88 	store_32 s1, 8(s4)
   50940:	24 10 00 88 	store_32 s1, 4(s4)
   50944:	20 fc ff 0f 	move s1, -1
   50948:	24 30 00 88 	store_32 s1, 12(s4)
   5094c:	20 0c 00 4f 	movehi s1, 96
   50950:	40 20 00 4f 	movehi s2, 256
   50954:	44 40 00 88 	store_32 s2, 16(s4)
   50958:	40 08 00 0f 	move s2, 2
   5095c:	44 50 00 88 	store_32 s2, 20(s4)
   50960:	21 60 56 00 	or s1, s1, 5528
   50964:	aa 54 55 4f 	movehi s5, 174762
   50968:	60 00 00 0f 	move s3, 0
   5096c:	41 f0 06 88 	store_32 s2, 444(s1)
   50970:	5e a0 00 05 	add_i s2, sp, 40
   50974:	61 00 07 88 	store_32 s3, 448(s1)
   50978:	25 60 55 00 	or s1, s5, 5464
   5097c:	42 c0 ff 01 	and s2, s2, -16
   50980:	22 80 30 c0 	xor s1, s2, s1
   50984:	24 00 00 88 	store_32 s1, (s4)
   50988:	20 00 00 0f 	move s1, 0
   5098c:	40 00 00 aa 	load_sync s2, (s0)
   50990:	40 80 f0 c0 	move s2, s1
   50994:	40 00 00 8a 	store_sync s2, (s0)  
   50998:	a2 ff ff f3 	bz s2, -12 <ialloc+0xd0>
   5099c:	08 03 00 f2 	bz s8, 96 <ialloc+0x140>
   509a0:	9a 14 00 f2 	bz s26, 656 <ialloc+0x374>
   509a4:	c0 00 00 0f 	move s6, 0
   509a8:	18 04 00 01 	and s0, s24, 1
   509ac:	1e 91 00 88 	store_32 s8, 36(sp)
   509b0:	c0 03 00 f4 	bnz s0, 120 <ialloc+0x16c>
   509b4:	a0 00 00 0f 	move s5, 0
   509b8:	00 40 00 0f 	move s0, 16
   509bc:	20 80 f2 c0 	move s1, s5
   509c0:	60 83 f2 c0 	move s27, s5
   509c4:	41 08 00 0b 	shl s2, s1, 2
   509c8:	59 00 51 c0 	add_i s2, s25, s2
   509cc:	62 00 00 a8 	load_32 s3, (s2)
   509d0:	40 00 f0 c0 	move s2, s0
   509d4:	83 2c 00 18 	cmplt_u s4, s3, 11
   509d8:	64 00 00 f4 	bnz s4, 12 <ialloc+0x128>
   509dc:	43 2c 00 05 	add_i s2, s3, 11
   509e0:	42 e0 ff 01 	and s2, s2, -8
   509e4:	21 04 00 05 	add_i s1, s1, 1
   509e8:	62 83 5d c0 	add_i s27, s2, s27
   509ec:	61 00 1d c1 	cmpne_i s3, s1, s26
   509f0:	a3 fe ff f5 	bnz s3, -44 <ialloc+0x108>
   509f4:	be 80 00 88 	store_32 s5, 32(sp)
   509f8:	15 00 00 f6 	b 84 <ialloc+0x190>
   509fc:	5a 00 00 f4 	bnz s26, 8 <ialloc+0x148>
   50a00:	59 00 00 f6 	b 356 <ialloc+0x2a8>
   50a04:	1a 08 00 0b 	shl s0, s26, 2
   50a08:	20 2c 00 18 	cmplt_u s1, s0, 11
   50a0c:	61 0c 00 f4 	bnz s1, 396 <ialloc+0x2dc>
   50a10:	00 2c 00 05 	add_i s0, s0, 11
   50a14:	c0 e0 ff 01 	and s6, s0, -8
   50a18:	18 04 00 01 	and s0, s24, 1
   50a1c:	1e 91 00 88 	store_32 s8, 36(sp)
   50a20:	40 00 00 f4 	bnz s0, 8 <ialloc+0x16c>
   50a24:	e4 ff ff f7 	b -112 <ialloc+0xf8>
   50a28:	19 00 00 a8 	load_32 s0, (s25)
   50a2c:	20 2c 00 18 	cmplt_u s1, s0, 11
   50a30:	81 00 00 f4 	bnz s1, 16 <ialloc+0x184>
   50a34:	00 2c 00 05 	add_i s0, s0, 11
   50a38:	00 e0 ff 01 	and s0, s0, -8
   50a3c:	02 00 00 f6 	b 8 <ialloc+0x188>
   50a40:	00 40 00 0f 	move s0, 16
   50a44:	60 03 7d c0 	mull_i s27, s0, s26
   50a48:	1e 80 00 88 	store_32 s0, 32(sp)
   50a4c:	06 80 5d c0 	add_i s0, s6, s27
   50a50:	de 70 00 88 	store_32 s6, 28(sp)
   50a54:	00 f0 ff 05 	add_i s0, s0, -4
   50a58:	fa f1 ff f9 	call -14360 <malloc>
   50a5c:	00 08 00 f2 	bz s0, 256 <ialloc+0x2a0>
   50a60:	20 0c 00 4f 	movehi s1, 96
   50a64:	80 00 fc c0 	move s4, s24
   50a68:	01 63 56 00 	or s24, s1, 5528
   50a6c:	38 f0 06 a0 	load_u8 s1, 444(s24)
   50a70:	1e 91 00 a8 	load_32 s8, 36(sp)
   50a74:	3e 81 00 a8 	load_32 s9, 32(sp)
   50a78:	21 08 00 01 	and s1, s1, 2
   50a7c:	e1 01 00 f2 	bz s1, 60 <ialloc+0x1fc>
   50a80:	b8 00 07 05 	add_i s5, s24, 448
   50a84:	20 04 00 0f 	move s1, 1
   50a88:	45 00 00 aa 	load_sync s2, (s5)
   50a8c:	60 80 f0 c0 	move s3, s1
   50a90:	65 00 00 8a 	store_sync s3, (s5)  
   50a94:	a3 ff ff f3 	bz s3, -12 <ialloc+0x1cc>
   50a98:	02 01 00 f2 	bz s2, 32 <ialloc+0x1fc>
   50a9c:	58 00 07 a8 	load_32 s2, 448(s24)
   50aa0:	e2 ff ff f5 	bnz s2, -4 <ialloc+0x1e0>
   50aa4:	45 00 00 aa 	load_sync s2, (s5)
   50aa8:	60 80 f0 c0 	move s3, s1
   50aac:	65 00 00 8a 	store_sync s3, (s5)  
   50ab0:	a3 ff ff f3 	bz s3, -12 <ialloc+0x1e8>
   50ab4:	42 ff ff f5 	bnz s2, -24 <ialloc+0x1e0>
   50ab8:	40 f0 ff a9 	load_32 s2, -4(s0)
   50abc:	24 08 00 01 	and s1, s4, 2
   50ac0:	62 e0 ff 01 	and s3, s2, -8
   50ac4:	a1 01 00 f2 	bz s1, 52 <ialloc+0x23c>
   50ac8:	3e 70 00 a8 	load_32 s1, 28(sp)
   50acc:	40 f0 ff 0f 	move s2, -4
   50ad0:	1e 70 00 88 	store_32 s0, 28(sp)
   50ad4:	7e 60 00 88 	store_32 s3, 24(sp)
   50ad8:	22 80 60 c0 	sub_i s1, s2, s1
   50adc:	41 80 51 c0 	add_i s2, s1, s3
   50ae0:	20 00 00 0f 	move s1, 0
   50ae4:	f0 03 00 f8 	call 4032 <memset>
   50ae8:	7e 60 00 a8 	load_32 s3, 24(sp)
   50aec:	1e 70 00 a8 	load_32 s0, 28(sp)
   50af0:	3e 81 00 a8 	load_32 s9, 32(sp)
   50af4:	1e 91 00 a8 	load_32 s8, 36(sp)
   50af8:	40 e1 ff 05 	add_i s10, s0, -8
   50afc:	48 00 00 f4 	bnz s8, 8 <ialloc+0x248>
   50b00:	1d 00 00 f6 	b 116 <ialloc+0x2b8>
   50b04:	60 83 f1 c0 	move s27, s3
   50b08:	3a fc ff 05 	add_i s1, s26, -1
   50b0c:	08 00 00 88 	store_32 s0, (s8)
   50b10:	a1 07 00 f2 	bz s1, 244 <ialloc+0x348>
   50b14:	49 00 00 f4 	bnz s9, 8 <ialloc+0x260>
   50b18:	25 00 00 f6 	b 148 <ialloc+0x2f0>
   50b1c:	40 04 00 0f 	move s2, 1
   50b20:	69 0c 00 00 	or s3, s9, 3
   50b24:	80 00 00 0f 	move s4, 0
   50b28:	42 00 6d c0 	sub_i s2, s2, s26
   50b2c:	49 00 71 c0 	mull_i s2, s9, s2
   50b30:	84 04 00 05 	add_i s4, s4, 1
   50b34:	6a 10 00 88 	store_32 s3, 4(s10)
   50b38:	4a 81 54 c0 	add_i s10, s10, s9
   50b3c:	a4 08 00 0b 	shl s5, s4, 2
   50b40:	e4 80 10 c1 	cmpne_i s7, s4, s1
   50b44:	a8 80 52 c0 	add_i s5, s8, s5
   50b48:	ca 20 00 05 	add_i s6, s10, 8
   50b4c:	c5 00 00 88 	store_32 s6, (s5)
   50b50:	07 ff ff f5 	bnz s7, -32 <ialloc+0x274>
   50b54:	7b 03 51 c0 	add_i s27, s27, s2
   50b58:	2b 00 00 f6 	b 172 <ialloc+0x348>
   50b5c:	00 01 00 0f 	move s8, 0
   50b60:	34 00 00 f6 	b 208 <ialloc+0x374>
   50b64:	00 00 00 0f 	move s0, 0
   50b68:	b6 f1 ff f9 	call -14632 <malloc>
   50b6c:	00 01 f0 c0 	move s8, s0
   50b70:	30 00 00 f6 	b 192 <ialloc+0x374>
   50b74:	2a 80 5d c0 	add_i s1, s10, s27
   50b78:	43 80 6d c0 	sub_i s2, s3, s27
   50b7c:	01 21 00 05 	add_i s8, s1, 8
   50b80:	42 0c 00 00 	or s2, s2, 3
   50b84:	41 10 00 88 	store_32 s2, 4(s1)
   50b88:	3a fc ff 05 	add_i s1, s26, -1
   50b8c:	08 00 00 88 	store_32 s0, (s8)
   50b90:	a1 03 00 f2 	bz s1, 116 <ialloc+0x348>
   50b94:	e0 ff ff f7 	b -128 <ialloc+0x258>
   50b98:	c0 40 00 0f 	move s6, 16
   50b9c:	18 04 00 01 	and s0, s24, 1
   50ba0:	1e 91 00 88 	store_32 s8, 36(sp)
   50ba4:	20 f4 ff f5 	bnz s0, -380 <ialloc+0x16c>
   50ba8:	83 ff ff f7 	b -500 <ialloc+0xf8>
   50bac:	40 00 00 0f 	move s2, 0
   50bb0:	60 40 00 0f 	move s3, 16
   50bb4:	82 08 00 0b 	shl s4, s2, 2
   50bb8:	99 00 52 c0 	add_i s4, s25, s4
   50bbc:	a4 00 00 a8 	load_32 s5, (s4)
   50bc0:	80 80 f1 c0 	move s4, s3
   50bc4:	c5 2c 00 18 	cmplt_u s6, s5, 11
   50bc8:	66 00 00 f4 	bnz s6, 12 <ialloc+0x318>
   50bcc:	85 2c 00 05 	add_i s4, s5, 11
   50bd0:	84 e0 ff 01 	and s4, s4, -8
   50bd4:	42 04 00 05 	add_i s2, s2, 1
   50bd8:	a4 0c 00 00 	or s5, s4, 3
   50bdc:	aa 10 00 88 	store_32 s5, 4(s10)
   50be0:	4a 01 52 c0 	add_i s10, s10, s4
   50be4:	7b 03 62 c0 	sub_i s27, s27, s4
   50be8:	82 08 00 0b 	shl s4, s2, 2
   50bec:	c2 80 00 c1 	cmpeq_i s6, s2, s1
   50bf0:	88 00 52 c0 	add_i s4, s8, s4
   50bf4:	aa 20 00 05 	add_i s5, s10, 8
   50bf8:	a4 00 00 88 	store_32 s5, (s4)
   50bfc:	46 00 00 f4 	bnz s6, 8 <ialloc+0x348>
   50c00:	ed ff ff f7 	b -76 <ialloc+0x2f8>
   50c04:	3b 0c 00 00 	or s1, s27, 3
   50c08:	2a 10 00 88 	store_32 s1, 4(s10)
   50c0c:	18 f0 06 a0 	load_u8 s0, 444(s24)
   50c10:	00 08 00 01 	and s0, s0, 2
   50c14:	e0 00 00 f2 	bz s0, 28 <ialloc+0x374>
   50c18:	18 00 07 05 	add_i s0, s24, 448
   50c1c:	20 00 00 0f 	move s1, 0
   50c20:	40 00 00 aa 	load_sync s2, (s0)
   50c24:	40 80 f0 c0 	move s2, s1
   50c28:	40 00 00 8a 	store_sync s2, (s0)  
   50c2c:	a2 ff ff f3 	bz s2, -12 <ialloc+0x364>
   50c30:	00 00 f4 c0 	move s0, s8
   50c34:	fe b3 00 a8 	load_32 ra, 44(sp)
   50c38:	7e c3 00 a8 	load_32 s27, 48(sp)
   50c3c:	5e d3 00 a8 	load_32 s26, 52(sp)
   50c40:	3e e3 00 a8 	load_32 s25, 56(sp)
   50c44:	1e f3 00 a8 	load_32 s24, 60(sp)
   50c48:	de 03 01 05 	add_i sp, sp, 64
   50c4c:	1f 00 00 f0 	ret

0000000000050c50 independent_comalloc:
   50c50:	de 03 ff 05 	add_i sp, sp, -64
   50c54:	fe f3 00 88 	store_32 ra, 60(sp)
   50c58:	60 00 f1 c0 	move s3, s2
   50c5c:	40 00 00 0f 	move s2, 0
   50c60:	17 ff ff f9 	call -932 <ialloc>
   50c64:	fe f3 00 a8 	load_32 ra, 60(sp)
   50c68:	de 03 01 05 	add_i sp, sp, 64
   50c6c:	1f 00 00 f0 	ret

0000000000050c70 bulk_free:
   50c70:	de 03 ff 05 	add_i sp, sp, -64
   50c74:	1e f3 00 88 	store_32 s24, 60(sp)
   50c78:	3e e3 00 88 	store_32 s25, 56(sp)
   50c7c:	5e d3 00 88 	store_32 s26, 52(sp)
   50c80:	7e c3 00 88 	store_32 s27, 48(sp)
   50c84:	fe b3 00 88 	store_32 ra, 44(sp)
   50c88:	40 0c 00 4f 	movehi s2, 96
   50c8c:	22 63 56 00 	or s25, s2, 5528
   50c90:	59 f0 06 a0 	load_u8 s2, 444(s25)
   50c94:	00 03 f0 c0 	move s24, s0
   50c98:	42 08 00 01 	and s2, s2, 2
   50c9c:	e2 01 00 f2 	bz s2, 60 <bulk_free+0x68>
   50ca0:	19 00 07 05 	add_i s0, s25, 448
   50ca4:	40 04 00 0f 	move s2, 1
   50ca8:	60 00 00 aa 	load_sync s3, (s0)
   50cac:	80 00 f1 c0 	move s4, s2
   50cb0:	80 00 00 8a 	store_sync s4, (s0)  
   50cb4:	a4 ff ff f3 	bz s4, -12 <bulk_free+0x38>
   50cb8:	03 01 00 f2 	bz s3, 32 <bulk_free+0x68>
   50cbc:	79 00 07 a8 	load_32 s3, 448(s25)
   50cc0:	e3 ff ff f5 	bnz s3, -4 <bulk_free+0x4c>
   50cc4:	60 00 00 aa 	load_sync s3, (s0)
   50cc8:	80 00 f1 c0 	move s4, s2
   50ccc:	80 00 00 8a 	store_sync s4, (s0)  
   50cd0:	a4 ff ff f3 	bz s4, -12 <bulk_free+0x54>
   50cd4:	43 ff ff f5 	bnz s3, -24 <bulk_free+0x4c>
   50cd8:	c1 05 00 f2 	bz s1, 184 <bulk_free+0x120>
   50cdc:	01 08 00 0b 	shl s0, s1, 2
   50ce0:	58 03 50 c0 	add_i s26, s24, s0
   50ce4:	60 03 00 0f 	move s27, 0
   50ce8:	58 00 00 a8 	load_32 s2, (s24)
   50cec:	a2 02 00 f2 	bz s2, 84 <bulk_free+0xd0>
   50cf0:	62 f0 ff a9 	load_32 s3, -4(s2)
   50cf4:	78 03 00 88 	store_32 s27, (s24)
   50cf8:	39 40 00 a8 	load_32 s1, 16(s25)
   50cfc:	03 0c 00 01 	and s0, s3, 3
   50d00:	00 04 00 10 	cmpeq_i s0, s0, 1
   50d04:	40 07 00 f4 	bnz s0, 232 <bulk_free+0x17c>
   50d08:	02 e0 ff 05 	add_i s0, s2, -8
   50d0c:	20 80 80 c1 	cmplt_u s1, s0, s1
   50d10:	e1 06 00 f4 	bnz s1, 220 <bulk_free+0x17c>
   50d14:	98 10 00 05 	add_i s4, s24, 4
   50d18:	23 e0 ff 01 	and s1, s3, -8
   50d1c:	a4 00 0d c1 	cmpeq_i s5, s4, s26
   50d20:	e5 00 00 f4 	bnz s5, 28 <bulk_free+0xcc>
   50d24:	a0 80 50 c0 	add_i s5, s0, s1
   50d28:	c4 00 00 a8 	load_32 s6, (s4)
   50d2c:	e5 20 00 05 	add_i s7, s5, 8
   50d30:	c6 80 13 c1 	cmpne_i s6, s6, s7
   50d34:	46 00 00 f4 	bnz s6, 8 <bulk_free+0xcc>
   50d38:	06 00 00 f6 	b 24 <bulk_free+0xe0>
   50d3c:	83 01 00 f8 	call 1548 <dispose_chunk>
   50d40:	18 13 00 05 	add_i s24, s24, 4
   50d44:	18 00 1d c1 	cmpne_i s0, s24, s26
   50d48:	00 fd ff f5 	bnz s0, -96 <bulk_free+0x78>
   50d4c:	11 00 00 f6 	b 68 <bulk_free+0x120>
   50d50:	05 10 00 a8 	load_32 s0, 4(s5)
   50d54:	63 04 00 01 	and s3, s3, 1
   50d58:	a2 f0 ff 05 	add_i s5, s2, -4
   50d5c:	00 e0 ff 01 	and s0, s0, -8
   50d60:	00 80 50 c0 	add_i s0, s0, s1
   50d64:	23 00 00 c0 	or s1, s3, s0
   50d68:	05 00 50 c0 	add_i s0, s5, s0
   50d6c:	21 08 00 00 	or s1, s1, 2
   50d70:	22 f0 ff 89 	store_32 s1, -4(s2)
   50d74:	20 00 00 a8 	load_32 s1, (s0)
   50d78:	21 04 00 00 	or s1, s1, 1
   50d7c:	20 00 00 88 	store_32 s1, (s0)
   50d80:	44 00 00 88 	store_32 s2, (s4)
   50d84:	18 13 00 05 	add_i s24, s24, 4
   50d88:	18 00 1d c1 	cmpne_i s0, s24, s26
   50d8c:	e0 fa ff f5 	bnz s0, -164 <bulk_free+0x78>
   50d90:	19 30 00 a8 	load_32 s0, 12(s25)
   50d94:	39 70 00 a8 	load_32 s1, 28(s25)
   50d98:	00 80 90 c1 	cmple_u s0, s0, s1
   50d9c:	60 00 00 f4 	bnz s0, 12 <bulk_free+0x138>
   50da0:	00 00 00 0f 	move s0, 0
   50da4:	c9 fa ff f9 	call -5340 <sys_trim>
   50da8:	19 f0 06 a0 	load_u8 s0, 444(s25)
   50dac:	00 08 00 01 	and s0, s0, 2
   50db0:	e0 00 00 f2 	bz s0, 28 <bulk_free+0x15c>
   50db4:	19 00 07 05 	add_i s0, s25, 448
   50db8:	20 00 00 0f 	move s1, 0
   50dbc:	40 00 00 aa 	load_sync s2, (s0)
   50dc0:	40 80 f0 c0 	move s2, s1
   50dc4:	40 00 00 8a 	store_sync s2, (s0)  
   50dc8:	a2 ff ff f3 	bz s2, -12 <bulk_free+0x14c>
   50dcc:	fe b3 00 a8 	load_32 ra, 44(sp)
   50dd0:	00 00 00 0f 	move s0, 0
   50dd4:	7e c3 00 a8 	load_32 s27, 48(sp)
   50dd8:	5e d3 00 a8 	load_32 s26, 52(sp)
   50ddc:	3e e3 00 a8 	load_32 s25, 56(sp)
   50de0:	1e f3 00 a8 	load_32 s24, 60(sp)
   50de4:	de 03 01 05 	add_i sp, sp, 64
   50de8:	1f 00 00 f0 	ret
   50dec:	5b 03 00 f8 	call 3436 <abort>

0000000000050df0 malloc_trim:
   50df0:	de 03 ff 05 	add_i sp, sp, -64
   50df4:	1e f3 00 88 	store_32 s24, 60(sp)
   50df8:	fe e3 00 88 	store_32 ra, 56(sp)
   50dfc:	20 0c 00 4f 	movehi s1, 96
   50e00:	41 00 56 00 	or s2, s1, 5504
   50e04:	22 00 00 a8 	load_32 s1, (s2)
   50e08:	61 05 00 f4 	bnz s1, 172 <malloc_trim+0xc4>
   50e0c:	20 0c 00 4f 	movehi s1, 96
   50e10:	60 04 00 0f 	move s3, 1
   50e14:	21 d0 5d 00 	or s1, s1, 6004
   50e18:	81 00 00 aa 	load_sync s4, (s1)
   50e1c:	a0 80 f1 c0 	move s5, s3
   50e20:	a1 00 00 8a 	store_sync s5, (s1)  
   50e24:	a5 ff ff f3 	bz s5, -12 <malloc_trim+0x28>
   50e28:	04 01 00 f2 	bz s4, 32 <malloc_trim+0x58>
   50e2c:	81 00 00 a8 	load_32 s4, (s1)
   50e30:	e4 ff ff f5 	bnz s4, -4 <malloc_trim+0x3c>
   50e34:	81 00 00 aa 	load_sync s4, (s1)
   50e38:	a0 80 f1 c0 	move s5, s3
   50e3c:	a1 00 00 8a 	store_sync s5, (s1)  
   50e40:	a5 ff ff f3 	bz s5, -12 <malloc_trim+0x44>
   50e44:	44 ff ff f5 	bnz s4, -24 <malloc_trim+0x3c>
   50e48:	62 00 00 a8 	load_32 s3, (s2)
   50e4c:	a3 02 00 f4 	bnz s3, 84 <malloc_trim+0xb0>
   50e50:	60 00 40 0f 	move s3, 4096
   50e54:	62 20 00 88 	store_32 s3, 8(s2)
   50e58:	62 10 00 88 	store_32 s3, 4(s2)
   50e5c:	60 fc ff 0f 	move s3, -1
   50e60:	62 30 00 88 	store_32 s3, 12(s2)
   50e64:	60 0c 00 4f 	movehi s3, 96
   50e68:	80 20 00 4f 	movehi s4, 256
   50e6c:	82 40 00 88 	store_32 s4, 16(s2)
   50e70:	80 08 00 0f 	move s4, 2
   50e74:	82 50 00 88 	store_32 s4, 20(s2)
   50e78:	63 60 56 00 	or s3, s3, 5528
   50e7c:	ca 54 55 4f 	movehi s6, 174762
   50e80:	a0 00 00 0f 	move s5, 0
   50e84:	83 f0 06 88 	store_32 s4, 444(s3)
   50e88:	9e d0 00 05 	add_i s4, sp, 52
   50e8c:	a3 00 07 88 	store_32 s5, 448(s3)
   50e90:	66 60 55 00 	or s3, s6, 5464
   50e94:	84 c0 ff 01 	and s4, s4, -16
   50e98:	64 80 31 c0 	xor s3, s4, s3
   50e9c:	62 00 00 88 	store_32 s3, (s2)
   50ea0:	40 00 00 0f 	move s2, 0
   50ea4:	61 00 00 aa 	load_sync s3, (s1)
   50ea8:	60 00 f1 c0 	move s3, s2
   50eac:	61 00 00 8a 	store_sync s3, (s1)  
   50eb0:	a3 ff ff f3 	bz s3, -12 <malloc_trim+0xb4>
   50eb4:	20 0c 00 4f 	movehi s1, 96
   50eb8:	01 63 56 00 	or s24, s1, 5528
   50ebc:	38 f0 06 a0 	load_u8 s1, 444(s24)
   50ec0:	21 08 00 01 	and s1, s1, 2
   50ec4:	e1 01 00 f2 	bz s1, 60 <malloc_trim+0x110>
   50ec8:	38 00 07 05 	add_i s1, s24, 448
   50ecc:	40 04 00 0f 	move s2, 1
   50ed0:	61 00 00 aa 	load_sync s3, (s1)
   50ed4:	80 00 f1 c0 	move s4, s2
   50ed8:	81 00 00 8a 	store_sync s4, (s1)  
   50edc:	a4 ff ff f3 	bz s4, -12 <malloc_trim+0xe0>
   50ee0:	03 01 00 f2 	bz s3, 32 <malloc_trim+0x110>
   50ee4:	78 00 07 a8 	load_32 s3, 448(s24)
   50ee8:	e3 ff ff f5 	bnz s3, -4 <malloc_trim+0xf4>
   50eec:	61 00 00 aa 	load_sync s3, (s1)
   50ef0:	80 00 f1 c0 	move s4, s2
   50ef4:	81 00 00 8a 	store_sync s4, (s1)  
   50ef8:	a4 ff ff f3 	bz s4, -12 <malloc_trim+0xfc>
   50efc:	43 ff ff f5 	bnz s3, -24 <malloc_trim+0xf4>
   50f00:	72 fa ff f9 	call -5688 <sys_trim>
   50f04:	38 f0 06 a0 	load_u8 s1, 444(s24)
   50f08:	21 08 00 01 	and s1, s1, 2
   50f0c:	e1 00 00 f2 	bz s1, 28 <malloc_trim+0x138>
   50f10:	38 00 07 05 	add_i s1, s24, 448
   50f14:	40 00 00 0f 	move s2, 0
   50f18:	61 00 00 aa 	load_sync s3, (s1)
   50f1c:	60 00 f1 c0 	move s3, s2
   50f20:	61 00 00 8a 	store_sync s3, (s1)  
   50f24:	a3 ff ff f3 	bz s3, -12 <malloc_trim+0x128>
   50f28:	fe e3 00 a8 	load_32 ra, 56(sp)
   50f2c:	1e f3 00 a8 	load_32 s24, 60(sp)
   50f30:	de 03 01 05 	add_i sp, sp, 64
   50f34:	1f 00 00 f0 	ret

0000000000050f38 malloc_footprint:
   50f38:	00 0c 00 4f 	movehi s0, 96
   50f3c:	00 60 56 00 	or s0, s0, 5528
   50f40:	00 c0 06 a8 	load_32 s0, 432(s0)
   50f44:	1f 00 00 f0 	ret

0000000000050f48 malloc_max_footprint:
   50f48:	00 0c 00 4f 	movehi s0, 96
   50f4c:	00 60 56 00 	or s0, s0, 5528
   50f50:	00 d0 06 a8 	load_32 s0, 436(s0)
   50f54:	1f 00 00 f0 	ret

0000000000050f58 malloc_footprint_limit:
   50f58:	00 0c 00 4f 	movehi s0, 96
   50f5c:	00 60 56 00 	or s0, s0, 5528
   50f60:	00 e0 06 a8 	load_32 s0, 440(s0)
   50f64:	20 00 00 10 	cmpeq_i s1, s0, 0
   50f68:	41 00 00 f4 	bnz s1, 8 <malloc_footprint_limit+0x18>
   50f6c:	02 00 00 f6 	b 8 <malloc_footprint_limit+0x1c>
   50f70:	00 fc ff 0f 	move s0, -1
   50f74:	1f 00 00 f0 	ret

0000000000050f78 malloc_set_footprint_limit:
   50f78:	20 fc ff 10 	cmpeq_i s1, s0, -1
   50f7c:	a1 01 00 f4 	bnz s1, 52 <malloc_set_footprint_limit+0x38>
   50f80:	20 0c 00 4f 	movehi s1, 96
   50f84:	40 00 00 0f 	move s2, 0
   50f88:	21 00 56 00 	or s1, s1, 5504
   50f8c:	21 20 00 a8 	load_32 s1, 8(s1)
   50f90:	00 80 50 c0 	add_i s0, s0, s1
   50f94:	22 80 60 c0 	sub_i s1, s2, s1
   50f98:	00 fc ff 05 	add_i s0, s0, -1
   50f9c:	00 80 10 c0 	and s0, s0, s1
   50fa0:	20 0c 00 4f 	movehi s1, 96
   50fa4:	21 60 56 00 	or s1, s1, 5528
   50fa8:	01 e0 06 88 	store_32 s0, 440(s1)
   50fac:	1f 00 00 f0 	ret
   50fb0:	00 00 00 0f 	move s0, 0
   50fb4:	20 0c 00 4f 	movehi s1, 96
   50fb8:	21 60 56 00 	or s1, s1, 5528
   50fbc:	01 e0 06 88 	store_32 s0, 440(s1)
   50fc0:	1f 00 00 f0 	ret

0000000000050fc4 mallinfo:
   50fc4:	de 03 ff 05 	add_i sp, sp, -64
   50fc8:	1e f3 00 88 	store_32 s24, 60(sp)
   50fcc:	3e e3 00 88 	store_32 s25, 56(sp)
   50fd0:	fe d3 00 88 	store_32 ra, 52(sp)
   50fd4:	20 03 00 0f 	move s25, 0
   50fd8:	00 03 f0 c0 	move s24, s0
   50fdc:	40 a0 00 0f 	move s2, 40
   50fe0:	20 80 fc c0 	move s1, s25
   50fe4:	b0 02 00 f8 	call 2752 <memset>
   50fe8:	00 0c 00 4f 	movehi s0, 96
   50fec:	20 00 56 00 	or s1, s0, 5504
   50ff0:	01 00 00 a8 	load_32 s0, (s1)
   50ff4:	60 05 00 f4 	bnz s0, 172 <mallinfo+0xdc>
   50ff8:	00 0c 00 4f 	movehi s0, 96
   50ffc:	40 04 00 0f 	move s2, 1
   51000:	00 d0 5d 00 	or s0, s0, 6004
   51004:	60 00 00 aa 	load_sync s3, (s0)
   51008:	80 00 f1 c0 	move s4, s2
   5100c:	80 00 00 8a 	store_sync s4, (s0)  
   51010:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x40>
   51014:	03 01 00 f2 	bz s3, 32 <mallinfo+0x70>
   51018:	60 00 00 a8 	load_32 s3, (s0)
   5101c:	e3 ff ff f5 	bnz s3, -4 <mallinfo+0x54>
   51020:	60 00 00 aa 	load_sync s3, (s0)
   51024:	80 00 f1 c0 	move s4, s2
   51028:	80 00 00 8a 	store_sync s4, (s0)  
   5102c:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x5c>
   51030:	43 ff ff f5 	bnz s3, -24 <mallinfo+0x54>
   51034:	41 00 00 a8 	load_32 s2, (s1)
   51038:	a2 02 00 f4 	bnz s2, 84 <mallinfo+0xc8>
   5103c:	40 00 40 0f 	move s2, 4096
   51040:	41 20 00 88 	store_32 s2, 8(s1)
   51044:	41 10 00 88 	store_32 s2, 4(s1)
   51048:	40 fc ff 0f 	move s2, -1
   5104c:	41 30 00 88 	store_32 s2, 12(s1)
   51050:	40 0c 00 4f 	movehi s2, 96
   51054:	60 20 00 4f 	movehi s3, 256
   51058:	61 40 00 88 	store_32 s3, 16(s1)
   5105c:	60 08 00 0f 	move s3, 2
   51060:	61 50 00 88 	store_32 s3, 20(s1)
   51064:	42 60 56 00 	or s2, s2, 5528
   51068:	aa 54 55 4f 	movehi s5, 174762
   5106c:	80 00 00 0f 	move s4, 0
   51070:	62 f0 06 88 	store_32 s3, 444(s2)
   51074:	7e c0 00 05 	add_i s3, sp, 48
   51078:	82 00 07 88 	store_32 s4, 448(s2)
   5107c:	45 60 55 00 	or s2, s5, 5464
   51080:	63 c0 ff 01 	and s3, s3, -16
   51084:	43 00 31 c0 	xor s2, s3, s2
   51088:	41 00 00 88 	store_32 s2, (s1)
   5108c:	20 00 00 0f 	move s1, 0
   51090:	40 00 00 aa 	load_sync s2, (s0)
   51094:	40 80 f0 c0 	move s2, s1
   51098:	40 00 00 8a 	store_sync s2, (s0)  
   5109c:	a2 ff ff f3 	bz s2, -12 <mallinfo+0xcc>
   510a0:	00 0c 00 4f 	movehi s0, 96
   510a4:	00 60 56 00 	or s0, s0, 5528
   510a8:	20 f0 06 a0 	load_u8 s1, 444(s0)
   510ac:	21 08 00 01 	and s1, s1, 2
   510b0:	e1 01 00 f2 	bz s1, 60 <mallinfo+0x128>
   510b4:	20 00 07 05 	add_i s1, s0, 448
   510b8:	40 04 00 0f 	move s2, 1
   510bc:	61 00 00 aa 	load_sync s3, (s1)
   510c0:	80 00 f1 c0 	move s4, s2
   510c4:	81 00 00 8a 	store_sync s4, (s1)  
   510c8:	a4 ff ff f3 	bz s4, -12 <mallinfo+0xf8>
   510cc:	03 01 00 f2 	bz s3, 32 <mallinfo+0x128>
   510d0:	60 00 07 a8 	load_32 s3, 448(s0)
   510d4:	e3 ff ff f5 	bnz s3, -4 <mallinfo+0x10c>
   510d8:	61 00 00 aa 	load_sync s3, (s1)
   510dc:	80 00 f1 c0 	move s4, s2
   510e0:	81 00 00 8a 	store_sync s4, (s1)  
   510e4:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x114>
   510e8:	43 ff ff f5 	bnz s3, -24 <mallinfo+0x10c>
   510ec:	40 60 00 a8 	load_32 s2, 24(s0)
   510f0:	62 06 00 f2 	bz s2, 204 <mallinfo+0x1f8>
   510f4:	20 30 00 a8 	load_32 s1, 12(s0)
   510f8:	c0 10 07 05 	add_i s6, s0, 452
   510fc:	a0 04 00 0f 	move s5, 1
   51100:	e0 e0 ff 0f 	move s7, -8
   51104:	61 a0 00 05 	add_i s3, s1, 40
   51108:	80 80 f1 c0 	move s4, s3
   5110c:	06 01 00 a8 	load_32 s8, (s6)
   51110:	28 21 00 05 	add_i s9, s8, 8
   51114:	29 1d 00 01 	and s9, s9, 7
   51118:	49 01 00 10 	cmpeq_i s10, s9, 0
   5111c:	20 81 fc c0 	move s9, s25
   51120:	6a 00 00 f4 	bnz s10, 12 <mallinfo+0x168>
   51124:	27 01 64 c0 	sub_i s9, s7, s8
   51128:	29 1d 00 01 	and s9, s9, 7
   5112c:	46 11 00 a8 	load_32 s10, 4(s6)
   51130:	28 81 54 c0 	add_i s9, s8, s9
   51134:	48 01 55 c0 	add_i s10, s8, s10
   51138:	69 01 75 c1 	cmpge_u s11, s9, s10
   5113c:	6b 02 00 f4 	bnz s11, 76 <mallinfo+0x1c4>
   51140:	62 81 04 c1 	cmpeq_i s11, s2, s9
   51144:	2b 02 00 f4 	bnz s11, 68 <mallinfo+0x1c4>
   51148:	69 11 00 a8 	load_32 s11, 4(s9)
   5114c:	8b 1d 00 10 	cmpeq_i s12, s11, 7
   51150:	cc 01 00 f4 	bnz s12, 56 <mallinfo+0x1c4>
   51154:	8b 0d 00 01 	and s12, s11, 3
   51158:	6b e1 ff 01 	and s11, s11, -8
   5115c:	8c 05 00 10 	cmpeq_i s12, s12, 1
   51160:	a0 81 f5 c0 	move s13, s11
   51164:	4c 00 00 f4 	bnz s12, 8 <mallinfo+0x1a8>
   51168:	a0 81 fc c0 	move s13, s25
   5116c:	29 81 55 c0 	add_i s9, s9, s11
   51170:	6b 80 51 c0 	add_i s3, s11, s3
   51174:	6c 05 00 01 	and s11, s12, 1
   51178:	8d 00 52 c0 	add_i s4, s13, s4
   5117c:	89 01 74 c1 	cmpge_u s12, s9, s8
   51180:	a5 80 55 c0 	add_i s5, s5, s11
   51184:	ac fd ff f5 	bnz s12, -76 <mallinfo+0x174>
   51188:	c6 20 00 a8 	load_32 s6, 8(s6)
   5118c:	06 fc ff f5 	bnz s6, -128 <mallinfo+0x148>
   51190:	78 00 00 88 	store_32 s3, (s24)
   51194:	b8 10 00 88 	store_32 s5, 4(s24)
   51198:	40 c0 06 a8 	load_32 s2, 432(s0)
   5119c:	62 80 61 c0 	sub_i s3, s2, s3
   511a0:	78 40 00 88 	store_32 s3, 16(s24)
   511a4:	60 d0 06 a8 	load_32 s3, 436(s0)
   511a8:	42 00 62 c0 	sub_i s2, s2, s4
   511ac:	78 50 00 88 	store_32 s3, 20(s24)
   511b0:	58 70 00 88 	store_32 s2, 28(s24)
   511b4:	98 80 00 88 	store_32 s4, 32(s24)
   511b8:	38 90 00 88 	store_32 s1, 36(s24)
   511bc:	20 f0 06 a0 	load_u8 s1, 444(s0)
   511c0:	21 08 00 01 	and s1, s1, 2
   511c4:	e1 00 00 f2 	bz s1, 28 <mallinfo+0x21c>
   511c8:	00 00 07 05 	add_i s0, s0, 448
   511cc:	20 00 00 0f 	move s1, 0
   511d0:	40 00 00 aa 	load_sync s2, (s0)
   511d4:	40 80 f0 c0 	move s2, s1
   511d8:	40 00 00 8a 	store_sync s2, (s0)  
   511dc:	a2 ff ff f3 	bz s2, -12 <mallinfo+0x20c>
   511e0:	00 00 fc c0 	move s0, s24
   511e4:	fe d3 00 a8 	load_32 ra, 52(sp)
   511e8:	3e e3 00 a8 	load_32 s25, 56(sp)
   511ec:	1e f3 00 a8 	load_32 s24, 60(sp)
   511f0:	de 03 01 05 	add_i sp, sp, 64
   511f4:	1f 00 00 f0 	ret

00000000000511f8 mallopt:
   511f8:	de 03 ff 05 	add_i sp, sp, -64
   511fc:	40 0c 00 4f 	movehi s2, 96
   51200:	62 00 56 00 	or s3, s2, 5504
   51204:	43 00 00 a8 	load_32 s2, (s3)
   51208:	62 05 00 f4 	bnz s2, 172 <mallopt+0xbc>
   5120c:	40 0c 00 4f 	movehi s2, 96
   51210:	80 04 00 0f 	move s4, 1
   51214:	42 d0 5d 00 	or s2, s2, 6004
   51218:	a2 00 00 aa 	load_sync s5, (s2)
   5121c:	c0 00 f2 c0 	move s6, s4
   51220:	c2 00 00 8a 	store_sync s6, (s2)  
   51224:	a6 ff ff f3 	bz s6, -12 <mallopt+0x20>
   51228:	05 01 00 f2 	bz s5, 32 <mallopt+0x50>
   5122c:	a2 00 00 a8 	load_32 s5, (s2)
   51230:	e5 ff ff f5 	bnz s5, -4 <mallopt+0x34>
   51234:	a2 00 00 aa 	load_sync s5, (s2)
   51238:	c0 00 f2 c0 	move s6, s4
   5123c:	c2 00 00 8a 	store_sync s6, (s2)  
   51240:	a6 ff ff f3 	bz s6, -12 <mallopt+0x3c>
   51244:	45 ff ff f5 	bnz s5, -24 <mallopt+0x34>
   51248:	83 00 00 a8 	load_32 s4, (s3)
   5124c:	a4 02 00 f4 	bnz s4, 84 <mallopt+0xa8>
   51250:	80 00 40 0f 	move s4, 4096
   51254:	83 20 00 88 	store_32 s4, 8(s3)
   51258:	83 10 00 88 	store_32 s4, 4(s3)
   5125c:	80 fc ff 0f 	move s4, -1
   51260:	83 30 00 88 	store_32 s4, 12(s3)
   51264:	80 0c 00 4f 	movehi s4, 96
   51268:	a0 20 00 4f 	movehi s5, 256
   5126c:	a3 40 00 88 	store_32 s5, 16(s3)
   51270:	a0 08 00 0f 	move s5, 2
   51274:	a3 50 00 88 	store_32 s5, 20(s3)
   51278:	84 60 56 00 	or s4, s4, 5528
   5127c:	ea 54 55 4f 	movehi s7, 174762
   51280:	c0 00 00 0f 	move s6, 0
   51284:	a4 f0 06 88 	store_32 s5, 444(s4)
   51288:	be f0 00 05 	add_i s5, sp, 60
   5128c:	c4 00 07 88 	store_32 s6, 448(s4)
   51290:	87 60 55 00 	or s4, s7, 5464
   51294:	a5 c0 ff 01 	and s5, s5, -16
   51298:	85 00 32 c0 	xor s4, s5, s4
   5129c:	83 00 00 88 	store_32 s4, (s3)
   512a0:	80 00 00 0f 	move s4, 0
   512a4:	a2 00 00 aa 	load_sync s5, (s2)
   512a8:	a0 00 f2 c0 	move s5, s4
   512ac:	a2 00 00 8a 	store_sync s5, (s2)  
   512b0:	a5 ff ff f3 	bz s5, -12 <mallopt+0xac>
   512b4:	40 f4 ff 10 	cmpeq_i s2, s0, -3
   512b8:	02 01 00 f4 	bnz s2, 32 <mallopt+0xe0>
   512bc:	80 f8 ff 10 	cmpeq_i s4, s0, -2
   512c0:	40 00 00 0f 	move s2, 0
   512c4:	44 01 00 f4 	bnz s4, 40 <mallopt+0xf4>
   512c8:	00 fc ff 11 	cmpne_i s0, s0, -1
   512cc:	a0 00 00 f4 	bnz s0, 20 <mallopt+0xe8>
   512d0:	23 40 00 88 	store_32 s1, 16(s3)
   512d4:	02 00 00 f6 	b 8 <mallopt+0xe4>
   512d8:	23 30 00 88 	store_32 s1, 12(s3)
   512dc:	40 04 00 0f 	move s2, 1
   512e0:	00 00 f1 c0 	move s0, s2
   512e4:	de 03 01 05 	add_i sp, sp, 64
   512e8:	1f 00 00 f0 	ret
   512ec:	03 10 00 a8 	load_32 s0, 4(s3)
   512f0:	00 80 60 c1 	cmpgt_u s0, s0, s1
   512f4:	60 ff ff f5 	bnz s0, -20 <mallopt+0xe8>
   512f8:	01 fc ff 05 	add_i s0, s1, -1
   512fc:	00 80 10 c0 	and s0, s0, s1
   51300:	00 ff ff f5 	bnz s0, -32 <mallopt+0xe8>
   51304:	23 20 00 88 	store_32 s1, 8(s3)
   51308:	f5 ff ff f7 	b -44 <mallopt+0xe4>

000000000005130c malloc_usable_size:
   5130c:	20 00 f0 c0 	move s1, s0
   51310:	00 00 00 0f 	move s0, 0
   51314:	81 01 00 f2 	bz s1, 48 <malloc_usable_size+0x38>
   51318:	21 f0 ff a9 	load_32 s1, -4(s1)
   5131c:	41 0c 00 01 	and s2, s1, 3
   51320:	62 04 00 10 	cmpeq_i s3, s2, 1
   51324:	03 01 00 f4 	bnz s3, 32 <malloc_usable_size+0x38>
   51328:	42 00 00 10 	cmpeq_i s2, s2, 0
   5132c:	01 e0 ff 01 	and s0, s1, -8
   51330:	62 00 00 f4 	bnz s2, 12 <malloc_usable_size+0x30>
   51334:	20 10 00 0f 	move s1, 4
   51338:	02 00 00 f6 	b 8 <malloc_usable_size+0x34>
   5133c:	20 20 00 0f 	move s1, 8
   51340:	00 80 60 c0 	sub_i s0, s0, s1
   51344:	1f 00 00 f0 	ret

0000000000051348 dispose_chunk:
   51348:	de 03 ff 05 	add_i sp, sp, -64
   5134c:	fe f3 00 88 	store_32 ra, 60(sp)
   51350:	60 10 00 a8 	load_32 s3, 4(s0)
   51354:	40 80 50 c0 	add_i s2, s0, s1
   51358:	83 04 00 01 	and s4, s3, 1
   5135c:	04 12 00 f4 	bnz s4, 576 <dispose_chunk+0x254>
   51360:	80 00 00 a8 	load_32 s4, (s0)
   51364:	63 0c 00 01 	and s3, s3, 3
   51368:	a3 1c 00 f2 	bz s3, 916 <dispose_chunk+0x3b4>
   5136c:	60 0c 00 4f 	movehi s3, 96
   51370:	00 00 62 c0 	sub_i s0, s0, s4
   51374:	63 60 56 00 	or s3, s3, 5528
   51378:	c3 40 00 a8 	load_32 s6, 16(s3)
   5137c:	a0 00 83 c1 	cmplt_u s5, s0, s6
   51380:	05 39 00 f4 	bnz s5, 1824 <dispose_chunk+0x758>
   51384:	a3 50 00 a8 	load_32 s5, 20(s3)
   51388:	24 80 50 c0 	add_i s1, s4, s1
   5138c:	a5 00 00 c1 	cmpeq_i s5, s5, s0
   51390:	a5 03 00 f4 	bnz s5, 116 <dispose_chunk+0xbc>
   51394:	a4 fc 03 16 	cmpgt_u s5, s4, 255
   51398:	65 04 00 f4 	bnz s5, 140 <dispose_chunk+0xdc>
   5139c:	e4 0c 00 0a 	shr s7, s4, 3
   513a0:	80 20 00 a8 	load_32 s4, 8(s0)
   513a4:	a7 0c 00 0b 	shl s5, s7, 3
   513a8:	a3 80 52 c0 	add_i s5, s3, s5
   513ac:	05 a1 00 05 	add_i s8, s5, 40
   513b0:	a0 30 00 a8 	load_32 s5, 12(s0)
   513b4:	24 01 04 c1 	cmpeq_i s9, s4, s8
   513b8:	c9 00 00 f4 	bnz s9, 24 <dispose_chunk+0x88>
   513bc:	26 01 62 c1 	cmpgt_u s9, s6, s4
   513c0:	09 37 00 f4 	bnz s9, 1760 <dispose_chunk+0x758>
   513c4:	24 31 00 a8 	load_32 s9, 12(s4)
   513c8:	29 01 10 c1 	cmpne_i s9, s9, s0
   513cc:	a9 36 00 f4 	bnz s9, 1748 <dispose_chunk+0x758>
   513d0:	25 01 12 c1 	cmpne_i s9, s5, s4
   513d4:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x94>
   513d8:	29 00 00 f6 	b 164 <dispose_chunk+0x134>
   513dc:	65 00 04 c1 	cmpeq_i s3, s5, s8
   513e0:	c3 00 00 f4 	bnz s3, 24 <dispose_chunk+0xb0>
   513e4:	66 80 62 c1 	cmpgt_u s3, s6, s5
   513e8:	c3 35 00 f4 	bnz s3, 1720 <dispose_chunk+0x758>
   513ec:	65 20 00 a8 	load_32 s3, 8(s5)
   513f0:	63 00 10 c1 	cmpne_i s3, s3, s0
   513f4:	63 35 00 f4 	bnz s3, 1708 <dispose_chunk+0x758>
   513f8:	a4 30 00 88 	store_32 s5, 12(s4)
   513fc:	85 20 00 88 	store_32 s4, 8(s5)
   51400:	67 00 00 f6 	b 412 <dispose_chunk+0x254>
   51404:	82 10 00 a8 	load_32 s4, 4(s2)
   51408:	a4 0c 00 01 	and s5, s4, 3
   5140c:	a5 0c 00 11 	cmpne_i s5, s5, 3
   51410:	65 0c 00 f4 	bnz s5, 396 <dispose_chunk+0x254>
   51414:	23 20 00 88 	store_32 s1, 8(s3)
   51418:	64 f8 ff 01 	and s3, s4, -2
   5141c:	62 10 00 88 	store_32 s3, 4(s2)
   51420:	bf 00 00 f6 	b 764 <dispose_chunk+0x3d4>
   51424:	80 60 00 a8 	load_32 s4, 24(s0)
   51428:	a0 30 00 a8 	load_32 s5, 12(s0)
   5142c:	e5 00 00 c1 	cmpeq_i s7, s5, s0
   51430:	c7 01 00 f4 	bnz s7, 56 <dispose_chunk+0x120>
   51434:	e0 20 00 a8 	load_32 s7, 8(s0)
   51438:	c6 80 63 c1 	cmpgt_u s6, s6, s7
   5143c:	26 33 00 f4 	bnz s6, 1636 <dispose_chunk+0x758>
   51440:	c7 30 00 a8 	load_32 s6, 12(s7)
   51444:	c6 00 10 c1 	cmpne_i s6, s6, s0
   51448:	c6 32 00 f4 	bnz s6, 1624 <dispose_chunk+0x758>
   5144c:	c5 20 00 a8 	load_32 s6, 8(s5)
   51450:	c6 00 10 c1 	cmpne_i s6, s6, s0
   51454:	66 32 00 f4 	bnz s6, 1612 <dispose_chunk+0x758>
   51458:	a7 30 00 88 	store_32 s5, 12(s7)
   5145c:	e5 20 00 88 	store_32 s7, 8(s5)
   51460:	e4 09 00 f2 	bz s4, 316 <dispose_chunk+0x254>
   51464:	1d 00 00 f6 	b 116 <dispose_chunk+0x190>
   51468:	00 51 00 a8 	load_32 s8, 20(s0)
   5146c:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x12c>
   51470:	0a 00 00 f6 	b 40 <dispose_chunk+0x150>
   51474:	e0 50 00 05 	add_i s7, s0, 20
   51478:	0b 00 00 f6 	b 44 <dispose_chunk+0x15c>
   5147c:	80 04 00 0f 	move s4, 1
   51480:	a3 00 00 a8 	load_32 s5, (s3)
   51484:	84 80 b3 c0 	shl s4, s4, s7
   51488:	84 fc ff 03 	xor s4, s4, -1
   5148c:	85 00 12 c0 	and s4, s5, s4
   51490:	83 00 00 88 	store_32 s4, (s3)
   51494:	42 00 00 f6 	b 264 <dispose_chunk+0x254>
   51498:	e0 40 00 05 	add_i s7, s0, 16
   5149c:	07 01 00 a8 	load_32 s8, (s7)
   514a0:	48 2f 00 f2 	bz s8, 1512 <dispose_chunk+0x740>
   514a4:	a0 00 f4 c0 	move s5, s8
   514a8:	05 51 00 a8 	load_32 s8, 20(s5)
   514ac:	20 81 f3 c0 	move s9, s7
   514b0:	e5 50 00 05 	add_i s7, s5, 20
   514b4:	88 ff ff f5 	bnz s8, -16 <dispose_chunk+0x15c>
   514b8:	05 41 00 a8 	load_32 s8, 16(s5)
   514bc:	e5 40 00 05 	add_i s7, s5, 16
   514c0:	28 ff ff f5 	bnz s8, -28 <dispose_chunk+0x15c>
   514c4:	c6 80 64 c1 	cmpgt_u s6, s6, s9
   514c8:	c6 2e 00 f4 	bnz s6, 1496 <dispose_chunk+0x758>
   514cc:	c0 00 00 0f 	move s6, 0
   514d0:	c9 00 00 88 	store_32 s6, (s9)
   514d4:	44 06 00 f2 	bz s4, 200 <dispose_chunk+0x254>
   514d8:	c0 70 00 a8 	load_32 s6, 28(s0)
   514dc:	e6 08 00 0b 	shl s7, s6, 2
   514e0:	e3 80 53 c0 	add_i s7, s3, s7
   514e4:	07 c1 04 a8 	load_32 s8, 304(s7)
   514e8:	08 01 10 c1 	cmpne_i s8, s8, s0
   514ec:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x1ac>
   514f0:	0c 00 00 f6 	b 48 <dispose_chunk+0x1d8>
   514f4:	c3 40 00 a8 	load_32 s6, 16(s3)
   514f8:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   514fc:	26 2d 00 f4 	bnz s6, 1444 <dispose_chunk+0x758>
   51500:	c4 40 00 a8 	load_32 s6, 16(s4)
   51504:	c6 00 00 c1 	cmpeq_i s6, s6, s0
   51508:	06 02 00 f4 	bnz s6, 64 <dispose_chunk+0x200>
   5150c:	c0 50 00 0f 	move s6, 20
   51510:	c4 00 53 c0 	add_i s6, s4, s6
   51514:	a6 00 00 88 	store_32 s5, (s6)
   51518:	25 04 00 f2 	bz s5, 132 <dispose_chunk+0x254>
   5151c:	0f 00 00 f6 	b 60 <dispose_chunk+0x210>
   51520:	e7 c0 04 05 	add_i s7, s7, 304
   51524:	a7 00 00 88 	store_32 s5, (s7)
   51528:	85 01 00 f4 	bnz s5, 48 <dispose_chunk+0x210>
   5152c:	80 04 00 0f 	move s4, 1
   51530:	a3 10 00 a8 	load_32 s5, 4(s3)
   51534:	84 00 b3 c0 	shl s4, s4, s6
   51538:	84 fc ff 03 	xor s4, s4, -1
   5153c:	85 00 12 c0 	and s4, s5, s4
   51540:	83 10 00 88 	store_32 s4, 4(s3)
   51544:	16 00 00 f6 	b 88 <dispose_chunk+0x254>
   51548:	c0 40 00 0f 	move s6, 16
   5154c:	c4 00 53 c0 	add_i s6, s4, s6
   51550:	a6 00 00 88 	store_32 s5, (s6)
   51554:	45 02 00 f2 	bz s5, 72 <dispose_chunk+0x254>
   51558:	c3 40 00 a8 	load_32 s6, 16(s3)
   5155c:	e6 80 62 c1 	cmpgt_u s7, s6, s5
   51560:	07 2a 00 f4 	bnz s7, 1344 <dispose_chunk+0x758>
   51564:	85 60 00 88 	store_32 s4, 24(s5)
   51568:	80 40 00 a8 	load_32 s4, 16(s0)
   5156c:	a4 00 00 f2 	bz s4, 20 <dispose_chunk+0x238>
   51570:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   51574:	66 29 00 f4 	bnz s6, 1324 <dispose_chunk+0x758>
   51578:	85 40 00 88 	store_32 s4, 16(s5)
   5157c:	a4 60 00 88 	store_32 s5, 24(s4)
   51580:	80 50 00 a8 	load_32 s4, 20(s0)
   51584:	c4 00 00 f2 	bz s4, 24 <dispose_chunk+0x254>
   51588:	63 40 00 a8 	load_32 s3, 16(s3)
   5158c:	63 00 62 c1 	cmpgt_u s3, s3, s4
   51590:	83 28 00 f4 	bnz s3, 1296 <dispose_chunk+0x758>
   51594:	85 50 00 88 	store_32 s4, 20(s5)
   51598:	a4 60 00 88 	store_32 s5, 24(s4)
   5159c:	60 0c 00 4f 	movehi s3, 96
   515a0:	63 60 56 00 	or s3, s3, 5528
   515a4:	e3 40 00 a8 	load_32 s7, 16(s3)
   515a8:	82 80 83 c1 	cmplt_u s4, s2, s7
   515ac:	a4 27 00 f4 	bnz s4, 1268 <dispose_chunk+0x758>
   515b0:	82 10 00 a8 	load_32 s4, 4(s2)
   515b4:	a4 08 00 01 	and s5, s4, 2
   515b8:	a5 04 00 f4 	bnz s5, 148 <dispose_chunk+0x304>
   515bc:	a3 60 00 a8 	load_32 s5, 24(s3)
   515c0:	a5 00 11 c1 	cmpne_i s5, s5, s2
   515c4:	45 00 00 f4 	bnz s5, 8 <dispose_chunk+0x284>
   515c8:	43 00 00 f6 	b 268 <dispose_chunk+0x38c>
   515cc:	a3 50 00 a8 	load_32 s5, 20(s3)
   515d0:	a5 00 11 c1 	cmpne_i s5, s5, s2
   515d4:	45 00 00 f4 	bnz s5, 8 <dispose_chunk+0x294>
   515d8:	4c 00 00 f6 	b 304 <dispose_chunk+0x3c0>
   515dc:	a4 fc 03 16 	cmpgt_u s5, s4, 255
   515e0:	e5 0b 00 f4 	bnz s5, 380 <dispose_chunk+0x414>
   515e4:	04 0d 00 0a 	shr s8, s4, 3
   515e8:	a2 20 00 a8 	load_32 s5, 8(s2)
   515ec:	c8 0c 00 0b 	shl s6, s8, 3
   515f0:	c3 00 53 c0 	add_i s6, s3, s6
   515f4:	26 a1 00 05 	add_i s9, s6, 40
   515f8:	c2 30 00 a8 	load_32 s6, 12(s2)
   515fc:	45 81 04 c1 	cmpeq_i s10, s5, s9
   51600:	ca 00 00 f4 	bnz s10, 24 <dispose_chunk+0x2d0>
   51604:	47 81 62 c1 	cmpgt_u s10, s7, s5
   51608:	ca 24 00 f4 	bnz s10, 1176 <dispose_chunk+0x758>
   5160c:	45 31 00 a8 	load_32 s10, 12(s5)
   51610:	4a 01 11 c1 	cmpne_i s10, s10, s2
   51614:	6a 24 00 f4 	bnz s10, 1164 <dispose_chunk+0x758>
   51618:	46 81 12 c1 	cmpne_i s10, s6, s5
   5161c:	4a 00 00 f4 	bnz s10, 8 <dispose_chunk+0x2dc>
   51620:	c5 00 00 f6 	b 788 <dispose_chunk+0x5ec>
   51624:	06 81 04 c1 	cmpeq_i s8, s6, s9
   51628:	c8 00 00 f4 	bnz s8, 24 <dispose_chunk+0x2f8>
   5162c:	e7 00 63 c1 	cmpgt_u s7, s7, s6
   51630:	87 23 00 f4 	bnz s7, 1136 <dispose_chunk+0x758>
   51634:	e6 20 00 a8 	load_32 s7, 8(s6)
   51638:	47 00 11 c1 	cmpne_i s2, s7, s2
   5163c:	22 23 00 f4 	bnz s2, 1124 <dispose_chunk+0x758>
   51640:	c5 30 00 88 	store_32 s6, 12(s5)
   51644:	a6 20 00 88 	store_32 s5, 8(s6)
   51648:	03 01 00 f6 	b 1036 <dispose_chunk+0x70c>
   5164c:	84 f8 ff 01 	and s4, s4, -2
   51650:	82 10 00 88 	store_32 s4, 4(s2)
   51654:	40 80 50 c0 	add_i s2, s0, s1
   51658:	81 04 00 00 	or s4, s1, 1
   5165c:	80 10 00 88 	store_32 s4, 4(s0)
   51660:	22 00 00 88 	store_32 s1, (s2)
   51664:	41 fc 03 16 	cmpgt_u s2, s1, 255
   51668:	02 02 00 f4 	bnz s2, 64 <dispose_chunk+0x360>
   5166c:	21 0c 00 0a 	shr s1, s1, 3
   51670:	43 00 00 a8 	load_32 s2, (s3)
   51674:	80 04 00 0f 	move s4, 1
   51678:	a1 0c 00 0b 	shl s5, s1, 3
   5167c:	a3 80 52 c0 	add_i s5, s3, s5
   51680:	84 80 b0 c0 	shl s4, s4, s1
   51684:	c2 00 12 c0 	and s6, s2, s4
   51688:	25 a0 00 05 	add_i s1, s5, 40
   5168c:	46 00 00 f4 	bnz s6, 8 <dispose_chunk+0x34c>
   51690:	29 00 00 f6 	b 164 <dispose_chunk+0x3ec>
   51694:	41 20 00 a8 	load_32 s2, 8(s1)
   51698:	63 40 00 a8 	load_32 s3, 16(s3)
   5169c:	63 00 91 c1 	cmple_u s3, s3, s2
   516a0:	03 05 00 f4 	bnz s3, 160 <dispose_chunk+0x3f8>
   516a4:	ff 00 00 f6 	b 1020 <dispose_chunk+0x758>
   516a8:	40 00 00 0f 	move s2, 0
   516ac:	a1 20 00 0a 	shr s5, s1, 8
   516b0:	80 00 f1 c0 	move s4, s2
   516b4:	e5 0a 00 f2 	bz s5, 348 <dispose_chunk+0x4c8>
   516b8:	9f fc 00 4f 	movehi s4, 2047
   516bc:	84 fc 7f 00 	or s4, s4, 8191
   516c0:	81 00 62 c1 	cmpgt_u s4, s1, s4
   516c4:	44 00 00 f4 	bnz s4, 8 <dispose_chunk+0x384>
   516c8:	36 00 00 f6 	b 216 <dispose_chunk+0x458>
   516cc:	80 7c 00 0f 	move s4, 31
   516d0:	50 00 00 f6 	b 320 <dispose_chunk+0x4c8>
   516d4:	43 30 00 a8 	load_32 s2, 12(s3)
   516d8:	22 80 50 c0 	add_i s1, s2, s1
   516dc:	23 30 00 88 	store_32 s1, 12(s3)
   516e0:	03 60 00 88 	store_32 s0, 24(s3)
   516e4:	21 04 00 00 	or s1, s1, 1
   516e8:	20 10 00 88 	store_32 s1, 4(s0)
   516ec:	23 50 00 a8 	load_32 s1, 20(s3)
   516f0:	00 80 10 c1 	cmpne_i s0, s0, s1
   516f4:	40 00 00 f4 	bnz s0, 8 <dispose_chunk+0x3b4>
   516f8:	84 00 00 f6 	b 528 <dispose_chunk+0x5c0>
   516fc:	fe f3 00 a8 	load_32 ra, 60(sp)
   51700:	de 03 01 05 	add_i sp, sp, 64
   51704:	1f 00 00 f0 	ret
   51708:	43 20 00 a8 	load_32 s2, 8(s3)
   5170c:	22 80 50 c0 	add_i s1, s2, s1
   51710:	23 20 00 88 	store_32 s1, 8(s3)
   51714:	03 50 00 88 	store_32 s0, 20(s3)
   51718:	40 80 50 c0 	add_i s2, s0, s1
   5171c:	61 04 00 00 	or s3, s1, 1
   51720:	60 10 00 88 	store_32 s3, 4(s0)
   51724:	22 00 00 88 	store_32 s1, (s2)
   51728:	fe f3 00 a8 	load_32 ra, 60(sp)
   5172c:	de 03 01 05 	add_i sp, sp, 64
   51730:	1f 00 00 f0 	ret
   51734:	42 00 02 c0 	or s2, s2, s4
   51738:	43 00 00 88 	store_32 s2, (s3)
   5173c:	40 80 f0 c0 	move s2, s1
   51740:	01 20 00 88 	store_32 s0, 8(s1)
   51744:	02 30 00 88 	store_32 s0, 12(s2)
   51748:	40 20 00 88 	store_32 s2, 8(s0)
   5174c:	20 30 00 88 	store_32 s1, 12(s0)
   51750:	fe f3 00 a8 	load_32 ra, 60(sp)
   51754:	de 03 01 05 	add_i sp, sp, 64
   51758:	1f 00 00 f0 	ret
   5175c:	a2 60 00 a8 	load_32 s5, 24(s2)
   51760:	c2 30 00 a8 	load_32 s6, 12(s2)
   51764:	06 01 01 c1 	cmpeq_i s8, s6, s2
   51768:	c8 0d 00 f4 	bnz s8, 440 <dispose_chunk+0x5d8>
   5176c:	02 21 00 a8 	load_32 s8, 8(s2)
   51770:	e7 00 64 c1 	cmpgt_u s7, s7, s8
   51774:	67 19 00 f4 	bnz s7, 812 <dispose_chunk+0x758>
   51778:	e8 30 00 a8 	load_32 s7, 12(s8)
   5177c:	e7 00 11 c1 	cmpne_i s7, s7, s2
   51780:	07 19 00 f4 	bnz s7, 800 <dispose_chunk+0x758>
   51784:	e6 20 00 a8 	load_32 s7, 8(s6)
   51788:	e7 00 11 c1 	cmpne_i s7, s7, s2
   5178c:	a7 18 00 f4 	bnz s7, 788 <dispose_chunk+0x758>
   51790:	c8 30 00 88 	store_32 s6, 12(s8)
   51794:	06 21 00 88 	store_32 s8, 8(s6)
   51798:	e5 15 00 f2 	bz s5, 700 <dispose_chunk+0x70c>
   5179c:	7d 00 00 f6 	b 500 <dispose_chunk+0x648>
   517a0:	9f 0c 00 4f 	movehi s4, 127
   517a4:	df 04 00 4f 	movehi s6, 63
   517a8:	fe 00 00 4f 	movehi s7, 30
   517ac:	84 00 7c 00 	or s4, s4, 7936
   517b0:	85 00 52 c0 	add_i s4, s5, s4
   517b4:	c6 00 40 00 	or s6, s6, 4096
   517b8:	84 40 00 0a 	shr s4, s4, 16
   517bc:	84 20 00 01 	and s4, s4, 8
   517c0:	a5 00 b2 c0 	shl s5, s5, s4
   517c4:	c5 00 53 c0 	add_i s6, s5, s6
   517c8:	c6 40 00 0a 	shr s6, s6, 16
   517cc:	c6 10 00 01 	and s6, s6, 4
   517d0:	a5 00 b3 c0 	shl s5, s5, s6
   517d4:	86 00 02 c0 	or s4, s6, s4
   517d8:	e5 80 53 c0 	add_i s7, s5, s7
   517dc:	e7 40 00 0a 	shr s7, s7, 16
   517e0:	c7 08 00 01 	and s6, s7, 2
   517e4:	e0 38 00 0f 	move s7, 14
   517e8:	84 00 03 c0 	or s4, s4, s6
   517ec:	a5 00 b3 c0 	shl s5, s5, s6
   517f0:	87 00 62 c0 	sub_i s4, s7, s4
   517f4:	a5 3c 00 0a 	shr s5, s5, 15
   517f8:	84 80 52 c0 	add_i s4, s4, s5
   517fc:	a4 1c 00 05 	add_i s5, s4, 7
   51800:	a1 80 a2 c0 	shr s5, s1, s5
   51804:	84 04 00 0b 	shl s4, s4, 1
   51808:	a5 04 00 01 	and s5, s5, 1
   5180c:	85 00 02 c0 	or s4, s5, s4
   51810:	80 70 00 88 	store_32 s4, 28(s0)
   51814:	c4 08 00 0b 	shl s6, s4, 2
   51818:	40 50 00 88 	store_32 s2, 20(s0)
   5181c:	e3 00 53 c0 	add_i s7, s3, s6
   51820:	40 40 00 88 	store_32 s2, 16(s0)
   51824:	40 04 00 0f 	move s2, 1
   51828:	a3 10 00 a8 	load_32 s5, 4(s3)
   5182c:	c2 00 b2 c0 	shl s6, s2, s4
   51830:	47 c0 04 05 	add_i s2, s7, 304
   51834:	05 01 13 c0 	and s8, s5, s6
   51838:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x4f8>
   5183c:	08 00 00 f6 	b 32 <dispose_chunk+0x514>
   51840:	a2 00 00 a8 	load_32 s5, (s2)
   51844:	c4 7c 00 10 	cmpeq_i s6, s4, 31
   51848:	26 01 00 f4 	bnz s6, 36 <dispose_chunk+0x524>
   5184c:	40 64 00 0f 	move s2, 25
   51850:	84 04 00 0a 	shr s4, s4, 1
   51854:	42 00 62 c0 	sub_i s2, s2, s4
   51858:	06 00 00 f6 	b 24 <dispose_chunk+0x528>
   5185c:	25 00 03 c0 	or s1, s5, s6
   51860:	23 10 00 88 	store_32 s1, 4(s3)
   51864:	02 00 00 88 	store_32 s0, (s2)
   51868:	13 00 00 f6 	b 76 <dispose_chunk+0x56c>
   5186c:	40 00 00 0f 	move s2, 0
   51870:	81 00 b1 c0 	shl s4, s1, s2
   51874:	40 80 f2 c0 	move s2, s5
   51878:	a2 10 00 a8 	load_32 s5, 4(s2)
   5187c:	a5 e0 ff 01 	and s5, s5, -8
   51880:	a5 80 00 c1 	cmpeq_i s5, s5, s1
   51884:	45 02 00 f4 	bnz s5, 72 <dispose_chunk+0x584>
   51888:	a4 74 00 0a 	shr s5, s4, 29
   5188c:	84 04 00 0b 	shl s4, s4, 1
   51890:	a5 10 00 01 	and s5, s5, 4
   51894:	c2 80 52 c0 	add_i s6, s2, s5
   51898:	a6 40 00 a8 	load_32 s5, 16(s6)
   5189c:	c5 fe ff f5 	bnz s5, -40 <dispose_chunk+0x52c>
   518a0:	63 40 00 a8 	load_32 s3, 16(s3)
   518a4:	26 40 00 05 	add_i s1, s6, 16
   518a8:	63 80 60 c1 	cmpgt_u s3, s3, s1
   518ac:	a3 0f 00 f4 	bnz s3, 500 <dispose_chunk+0x758>
   518b0:	01 00 00 88 	store_32 s0, (s1)
   518b4:	40 60 00 88 	store_32 s2, 24(s0)
   518b8:	00 30 00 88 	store_32 s0, 12(s0)
   518bc:	00 20 00 88 	store_32 s0, 8(s0)
   518c0:	fe f3 00 a8 	load_32 ra, 60(sp)
   518c4:	de 03 01 05 	add_i sp, sp, 64
   518c8:	1f 00 00 f0 	ret
   518cc:	22 20 00 a8 	load_32 s1, 8(s2)
   518d0:	63 40 00 a8 	load_32 s3, 16(s3)
   518d4:	83 80 60 c1 	cmpgt_u s4, s3, s1
   518d8:	44 0e 00 f4 	bnz s4, 456 <dispose_chunk+0x758>
   518dc:	63 00 61 c1 	cmpgt_u s3, s3, s2
   518e0:	03 0e 00 f4 	bnz s3, 448 <dispose_chunk+0x758>
   518e4:	01 30 00 88 	store_32 s0, 12(s1)
   518e8:	02 20 00 88 	store_32 s0, 8(s2)
   518ec:	20 20 00 88 	store_32 s1, 8(s0)
   518f0:	20 00 00 0f 	move s1, 0
   518f4:	40 30 00 88 	store_32 s2, 12(s0)
   518f8:	20 60 00 88 	store_32 s1, 24(s0)
   518fc:	fe f3 00 a8 	load_32 ra, 60(sp)
   51900:	de 03 01 05 	add_i sp, sp, 64
   51904:	1f 00 00 f0 	ret
   51908:	00 00 00 0f 	move s0, 0
   5190c:	03 50 00 88 	store_32 s0, 20(s3)
   51910:	03 20 00 88 	store_32 s0, 8(s3)
   51914:	fe f3 00 a8 	load_32 ra, 60(sp)
   51918:	de 03 01 05 	add_i sp, sp, 64
   5191c:	1f 00 00 f0 	ret
   51920:	22 51 00 a8 	load_32 s9, 20(s2)
   51924:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x5e4>
   51928:	0a 00 00 f6 	b 40 <dispose_chunk+0x608>
   5192c:	02 51 00 05 	add_i s8, s2, 20
   51930:	0b 00 00 f6 	b 44 <dispose_chunk+0x614>
   51934:	40 04 00 0f 	move s2, 1
   51938:	a3 00 00 a8 	load_32 s5, (s3)
   5193c:	42 00 b4 c0 	shl s2, s2, s8
   51940:	42 fc ff 03 	xor s2, s2, -1
   51944:	45 00 11 c0 	and s2, s5, s2
   51948:	43 00 00 88 	store_32 s2, (s3)
   5194c:	42 00 00 f6 	b 264 <dispose_chunk+0x70c>
   51950:	02 41 00 05 	add_i s8, s2, 16
   51954:	28 01 00 a8 	load_32 s9, (s8)
   51958:	e9 09 00 f2 	bz s9, 316 <dispose_chunk+0x74c>
   5195c:	c0 80 f4 c0 	move s6, s9
   51960:	26 51 00 a8 	load_32 s9, 20(s6)
   51964:	40 01 f4 c0 	move s10, s8
   51968:	06 51 00 05 	add_i s8, s6, 20
   5196c:	89 ff ff f5 	bnz s9, -16 <dispose_chunk+0x614>
   51970:	26 41 00 a8 	load_32 s9, 16(s6)
   51974:	06 41 00 05 	add_i s8, s6, 16
   51978:	29 ff ff f5 	bnz s9, -28 <dispose_chunk+0x614>
   5197c:	e7 00 65 c1 	cmpgt_u s7, s7, s10
   51980:	07 09 00 f4 	bnz s7, 288 <dispose_chunk+0x758>
   51984:	e0 00 00 0f 	move s7, 0
   51988:	ea 00 00 88 	store_32 s7, (s10)
   5198c:	45 06 00 f2 	bz s5, 200 <dispose_chunk+0x70c>
   51990:	e2 70 00 a8 	load_32 s7, 28(s2)
   51994:	07 09 00 0b 	shl s8, s7, 2
   51998:	03 01 54 c0 	add_i s8, s3, s8
   5199c:	28 c1 04 a8 	load_32 s9, 304(s8)
   519a0:	29 01 11 c1 	cmpne_i s9, s9, s2
   519a4:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x664>
   519a8:	0c 00 00 f6 	b 48 <dispose_chunk+0x690>
   519ac:	e3 40 00 a8 	load_32 s7, 16(s3)
   519b0:	e7 80 62 c1 	cmpgt_u s7, s7, s5
   519b4:	67 07 00 f4 	bnz s7, 236 <dispose_chunk+0x758>
   519b8:	e5 40 00 a8 	load_32 s7, 16(s5)
   519bc:	e7 00 01 c1 	cmpeq_i s7, s7, s2
   519c0:	07 02 00 f4 	bnz s7, 64 <dispose_chunk+0x6b8>
   519c4:	e0 50 00 0f 	move s7, 20
   519c8:	e5 80 53 c0 	add_i s7, s5, s7
   519cc:	c7 00 00 88 	store_32 s6, (s7)
   519d0:	26 04 00 f2 	bz s6, 132 <dispose_chunk+0x70c>
   519d4:	0f 00 00 f6 	b 60 <dispose_chunk+0x6c8>
   519d8:	08 c1 04 05 	add_i s8, s8, 304
   519dc:	c8 00 00 88 	store_32 s6, (s8)
   519e0:	86 01 00 f4 	bnz s6, 48 <dispose_chunk+0x6c8>
   519e4:	40 04 00 0f 	move s2, 1
   519e8:	a3 10 00 a8 	load_32 s5, 4(s3)
   519ec:	42 80 b3 c0 	shl s2, s2, s7
   519f0:	42 fc ff 03 	xor s2, s2, -1
   519f4:	45 00 11 c0 	and s2, s5, s2
   519f8:	43 10 00 88 	store_32 s2, 4(s3)
   519fc:	16 00 00 f6 	b 88 <dispose_chunk+0x70c>
   51a00:	e0 40 00 0f 	move s7, 16
   51a04:	e5 80 53 c0 	add_i s7, s5, s7
   51a08:	c7 00 00 88 	store_32 s6, (s7)
   51a0c:	46 02 00 f2 	bz s6, 72 <dispose_chunk+0x70c>
   51a10:	e3 40 00 a8 	load_32 s7, 16(s3)
   51a14:	07 01 63 c1 	cmpgt_u s8, s7, s6
   51a18:	48 04 00 f4 	bnz s8, 136 <dispose_chunk+0x758>
   51a1c:	a6 60 00 88 	store_32 s5, 24(s6)
   51a20:	a2 40 00 a8 	load_32 s5, 16(s2)
   51a24:	a5 00 00 f2 	bz s5, 20 <dispose_chunk+0x6f0>
   51a28:	e7 80 62 c1 	cmpgt_u s7, s7, s5
   51a2c:	a7 03 00 f4 	bnz s7, 116 <dispose_chunk+0x758>
   51a30:	a6 40 00 88 	store_32 s5, 16(s6)
   51a34:	c5 60 00 88 	store_32 s6, 24(s5)
   51a38:	42 50 00 a8 	load_32 s2, 20(s2)
   51a3c:	c2 00 00 f2 	bz s2, 24 <dispose_chunk+0x70c>
   51a40:	a3 40 00 a8 	load_32 s5, 16(s3)
   51a44:	a5 00 61 c1 	cmpgt_u s5, s5, s2
   51a48:	c5 02 00 f4 	bnz s5, 88 <dispose_chunk+0x758>
   51a4c:	46 50 00 88 	store_32 s2, 20(s6)
   51a50:	c2 60 00 88 	store_32 s6, 24(s2)
   51a54:	44 e0 ff 01 	and s2, s4, -8
   51a58:	22 80 50 c0 	add_i s1, s2, s1
   51a5c:	40 80 50 c0 	add_i s2, s0, s1
   51a60:	81 04 00 00 	or s4, s1, 1
   51a64:	80 10 00 88 	store_32 s4, 4(s0)
   51a68:	22 00 00 88 	store_32 s1, (s2)
   51a6c:	43 50 00 a8 	load_32 s2, 20(s3)
   51a70:	40 00 11 c1 	cmpne_i s2, s0, s2
   51a74:	82 df ff f5 	bnz s2, -1040 <dispose_chunk+0x31c>
   51a78:	23 20 00 88 	store_32 s1, 8(s3)
   51a7c:	fe f3 00 a8 	load_32 ra, 60(sp)
   51a80:	de 03 01 05 	add_i sp, sp, 64
   51a84:	1f 00 00 f0 	ret
   51a88:	a0 00 00 0f 	move s5, 0
   51a8c:	84 d8 ff f3 	bz s4, -1264 <dispose_chunk+0x254>
   51a90:	92 fe ff f7 	b -1464 <dispose_chunk+0x190>
   51a94:	c0 00 00 0f 	move s6, 0
   51a98:	e5 fd ff f3 	bz s5, -68 <dispose_chunk+0x70c>
   51a9c:	bd ff ff f7 	b -268 <dispose_chunk+0x648>
   51aa0:	2e 00 00 f8 	call 184 <abort>

0000000000051aa4 memset:
   51aa4:	60 fc 00 01 	and s3, s0, 63
   51aa8:	81 fc 03 01 	and s4, s1, 255
   51aac:	03 04 00 f4 	bnz s3, 128 <memset+0x88>
   51ab0:	62 04 01 18 	cmplt_u s3, s2, 65
   51ab4:	c3 03 00 f4 	bnz s3, 120 <memset+0x88>
   51ab8:	61 60 00 0b 	shl s3, s1, 24
   51abc:	a4 20 00 0b 	shl s5, s4, 8
   51ac0:	63 00 02 c0 	or s3, s3, s4
   51ac4:	63 80 02 c0 	or s3, s3, s5
   51ac8:	a4 40 00 0b 	shl s5, s4, 16
   51acc:	63 80 02 c0 	or s3, s3, s5
   51ad0:	00 80 f1 c4 	move v0, s3
   51ad4:	60 00 f0 c0 	move s3, s0
   51ad8:	42 00 ff 05 	add_i s2, s2, -64
   51adc:	03 00 00 8e 	store_v v0, (s3)
   51ae0:	63 00 01 05 	add_i s3, s3, 64
   51ae4:	a2 00 01 16 	cmpgt_u s5, s2, 64
   51ae8:	85 ff ff f5 	bnz s5, -16 <memset+0x34>
   51aec:	a3 0c 00 01 	and s5, s3, 3
   51af0:	65 02 00 f4 	bnz s5, 76 <memset+0x98>
   51af4:	a2 14 00 18 	cmplt_u s5, s2, 5
   51af8:	25 02 00 f4 	bnz s5, 68 <memset+0x98>
   51afc:	a1 60 00 0b 	shl s5, s1, 24
   51b00:	c4 20 00 0b 	shl s6, s4, 8
   51b04:	a5 00 02 c0 	or s5, s5, s4
   51b08:	84 40 00 0b 	shl s4, s4, 16
   51b0c:	a5 00 03 c0 	or s5, s5, s6
   51b10:	85 00 02 c0 	or s4, s5, s4
   51b14:	42 f0 ff 05 	add_i s2, s2, -4
   51b18:	83 00 00 88 	store_32 s4, (s3)
   51b1c:	63 10 00 05 	add_i s3, s3, 4
   51b20:	a2 10 00 16 	cmpgt_u s5, s2, 4
   51b24:	85 ff ff f5 	bnz s5, -16 <memset+0x70>
   51b28:	06 00 00 f6 	b 24 <memset+0x9c>
   51b2c:	60 00 f0 c0 	move s3, s0
   51b30:	a3 0c 00 01 	and s5, s3, 3
   51b34:	45 00 00 f4 	bnz s5, 8 <memset+0x98>
   51b38:	ef ff ff f7 	b -68 <memset+0x50>
   51b3c:	c2 00 00 f2 	bz s2, 24 <memset+0xb0>
   51b40:	83 04 00 05 	add_i s4, s3, 1
   51b44:	23 00 00 82 	store_8 s1, (s3)
   51b48:	42 fc ff 05 	add_i s2, s2, -1
   51b4c:	60 00 f2 c0 	move s3, s4
   51b50:	82 ff ff f5 	bnz s2, -16 <memset+0x9c>
   51b54:	1f 00 00 f0 	ret

0000000000051b58 abort:
   51b58:	de 03 ff 05 	add_i sp, sp, -64
   51b5c:	fe f3 00 88 	store_32 ra, 60(sp)
   51b60:	01 00 00 4f 	movehi s0, 1
   51b64:	00 c4 7b 00 	or s0, s0, 7921
   51b68:	79 01 00 f8 	call 1508 <puts>
   51b6c:	00 00 e0 c3 	break

0000000000051b70 abs:
   51b70:	20 7c 00 09 	ashr s1, s0, 31
   51b74:	00 80 50 c0 	add_i s0, s0, s1
   51b78:	00 80 30 c0 	xor s0, s0, s1
   51b7c:	1f 00 00 f0 	ret

0000000000051b80 atoi:
   51b80:	20 00 f0 c0 	move s1, s0
   51b84:	00 00 00 0f 	move s0, 0
   51b88:	41 00 00 a2 	load_s8 s2, (s1)
   51b8c:	c2 01 00 f2 	bz s2, 56 <atoi+0x44>
   51b90:	62 40 ff 05 	add_i s3, s2, -48
   51b94:	63 24 00 16 	cmpgt_u s3, s3, 9
   51b98:	63 01 00 f4 	bnz s3, 44 <atoi+0x44>
   51b9c:	00 00 00 0f 	move s0, 0
   51ba0:	00 28 00 07 	mull_i s0, s0, 10
   51ba4:	02 00 50 c0 	add_i s0, s2, s0
   51ba8:	41 04 00 a2 	load_s8 s2, 1(s1)
   51bac:	00 40 ff 05 	add_i s0, s0, -48
   51bb0:	a2 00 00 f2 	bz s2, 20 <atoi+0x44>
   51bb4:	62 40 ff 05 	add_i s3, s2, -48
   51bb8:	21 04 00 05 	add_i s1, s1, 1
   51bbc:	63 28 00 18 	cmplt_u s3, s3, 10
   51bc0:	03 ff ff f5 	bnz s3, -32 <atoi+0x20>
   51bc4:	1f 00 00 f0 	ret

0000000000051bc8 rand:
   51bc8:	1a 04 00 4f 	movehi s0, 58
   51bcc:	52 c4 41 4f 	movehi s2, 134706
   51bd0:	61 00 00 4f 	movehi s3, 1
   51bd4:	20 70 16 00 	or s1, s0, 1436
   51bd8:	42 b4 39 00 	or s2, s2, 3693
   51bdc:	01 00 00 a8 	load_32 s0, (s1)
   51be0:	00 00 71 c0 	mull_i s0, s0, s2
   51be4:	43 e4 40 00 	or s2, s3, 4153
   51be8:	7f fc 7f 4f 	movehi s3, 262143
   51bec:	40 00 51 c0 	add_i s2, s0, s2
   51bf0:	41 00 00 88 	store_32 s2, (s1)
   51bf4:	03 fc 7f 00 	or s0, s3, 8191
   51bf8:	02 00 10 c0 	and s0, s2, s0
   51bfc:	1f 00 00 f0 	ret

0000000000051c00 srand:
   51c00:	3a 04 00 4f 	movehi s1, 58
   51c04:	21 70 16 00 	or s1, s1, 1436
   51c08:	01 00 00 88 	store_32 s0, (s1)
   51c0c:	1f 00 00 f0 	ret

0000000000051c10 bsearch:
   51c10:	de 03 ff 05 	add_i sp, sp, -64
   51c14:	1e f3 00 88 	store_32 s24, 60(sp)
   51c18:	3e e3 00 88 	store_32 s25, 56(sp)
   51c1c:	5e d3 00 88 	store_32 s26, 52(sp)
   51c20:	7e c3 00 88 	store_32 s27, 48(sp)
   51c24:	fe b3 00 88 	store_32 ra, 44(sp)
   51c28:	22 ff ff 05 	add_i s25, s2, -1
   51c2c:	9e a0 00 88 	store_32 s4, 40(sp)
   51c30:	7e 90 00 88 	store_32 s3, 36(sp)
   51c34:	3e 80 00 88 	store_32 s1, 32(sp)
   51c38:	59 00 00 14 	cmplt_i s2, s25, 0
   51c3c:	1e 70 00 88 	store_32 s0, 28(sp)
   51c40:	c2 03 00 f4 	bnz s2, 120 <bsearch+0xa8>
   51c44:	40 03 00 0f 	move s26, 0
   51c48:	5e 63 00 88 	store_32 s26, 24(sp)
   51c4c:	1a 80 5c c0 	add_i s0, s26, s25
   51c50:	20 7c 00 0a 	shr s1, s0, 31
   51c54:	00 80 50 c0 	add_i s0, s0, s1
   51c58:	60 07 00 09 	ashr s27, s0, 1
   51c5c:	1e 90 00 a8 	load_32 s0, 36(sp)
   51c60:	3e 80 00 a8 	load_32 s1, 32(sp)
   51c64:	1b 00 70 c0 	mull_i s0, s27, s0
   51c68:	01 03 50 c0 	add_i s24, s1, s0
   51c6c:	1e 70 00 a8 	load_32 s0, 28(sp)
   51c70:	20 00 fc c0 	move s1, s24
   51c74:	5e a0 00 a8 	load_32 s2, 40(sp)
   51c78:	42 00 00 fc 	call s2
   51c7c:	00 02 00 f2 	bz s0, 64 <bsearch+0xac>
   51c80:	00 00 00 14 	cmplt_i s0, s0, 0
   51c84:	c0 00 00 f4 	bnz s0, 24 <bsearch+0x8c>
   51c88:	40 00 00 f4 	bnz s0, 8 <bsearch+0x80>
   51c8c:	06 00 00 f6 	b 24 <bsearch+0x94>
   51c90:	1a 80 5c c1 	cmple_i s0, s26, s25
   51c94:	c0 fd ff f5 	bnz s0, -72 <bsearch+0x3c>
   51c98:	06 00 00 f6 	b 24 <bsearch+0xa0>
   51c9c:	3b ff ff 05 	add_i s25, s27, -1
   51ca0:	80 ff ff f5 	bnz s0, -16 <bsearch+0x80>
   51ca4:	5b 07 00 05 	add_i s26, s27, 1
   51ca8:	1a 80 5c c1 	cmple_i s0, s26, s25
   51cac:	00 fd ff f5 	bnz s0, -96 <bsearch+0x3c>
   51cb0:	1e 63 00 a8 	load_32 s24, 24(sp)
   51cb4:	02 00 00 f6 	b 8 <bsearch+0xac>
   51cb8:	00 03 00 0f 	move s24, 0
   51cbc:	00 00 fc c0 	move s0, s24
   51cc0:	fe b3 00 a8 	load_32 ra, 44(sp)
   51cc4:	7e c3 00 a8 	load_32 s27, 48(sp)
   51cc8:	5e d3 00 a8 	load_32 s26, 52(sp)
   51ccc:	3e e3 00 a8 	load_32 s25, 56(sp)
   51cd0:	1e f3 00 a8 	load_32 s24, 60(sp)
   51cd4:	de 03 01 05 	add_i sp, sp, 64
   51cd8:	1f 00 00 f0 	ret

0000000000051cdc clock:
   51cdc:	de 03 ff 05 	add_i sp, sp, -64
   51ce0:	fe f3 00 88 	store_32 ra, 60(sp)
   51ce4:	48 08 00 f8 	call 8480 <get_cycle_count>
   51ce8:	3c e8 51 4f 	movehi s1, 167772
   51cec:	fe f3 00 a8 	load_32 ra, 60(sp)
   51cf0:	21 7c 14 00 	or s1, s1, 1311
   51cf4:	00 80 80 c0 	mulh_u s0, s0, s1
   51cf8:	00 10 00 0a 	shr s0, s0, 4
   51cfc:	de 03 01 05 	add_i sp, sp, 64
   51d00:	1f 00 00 f0 	ret

0000000000051d04 memcpy:
   51d04:	c0 00 f0 c0 	move s6, s0
   51d08:	60 fc 00 01 	and s3, s0, 63
   51d0c:	81 fc 00 01 	and s4, s1, 63
   51d10:	a3 00 02 c1 	cmpeq_i s5, s3, s4
   51d14:	45 02 00 f2 	bz s5, 72 <copy_word_check>

0000000000051d18 copy_vector_lead_in:
   51d18:	80 fc 00 01 	and s4, s0, 63
   51d1c:	04 01 00 f2 	bz s4, 32 <copy_vector>
   51d20:	62 05 00 f2 	bz s2, 172 <copy_done>
   51d24:	81 00 00 a0 	load_u8 s4, (s1)
   51d28:	80 00 00 82 	store_8 s4, (s0)
   51d2c:	00 04 00 05 	add_i s0, s0, 1
   51d30:	21 04 00 05 	add_i s1, s1, 1
   51d34:	42 04 00 06 	sub_i s2, s2, 1
   51d38:	f8 ff ff f7 	b -32 <copy_vector_lead_in>

0000000000051d3c copy_vector:
   51d3c:	82 00 01 18 	cmplt_u s4, s2, 64
   51d40:	84 02 00 f4 	bnz s4, 80 <copy_words>
   51d44:	01 00 00 ae 	load_v v0, (s1)
   51d48:	00 00 00 8e 	store_v v0, (s0)
   51d4c:	00 00 01 05 	add_i s0, s0, 64
   51d50:	21 00 01 05 	add_i s1, s1, 64
   51d54:	42 00 01 06 	sub_i s2, s2, 64
   51d58:	f9 ff ff f7 	b -28 <copy_vector>

0000000000051d5c copy_word_check:
   51d5c:	60 0c 00 01 	and s3, s0, 3
   51d60:	81 0c 00 01 	and s4, s1, 3
   51d64:	a3 00 02 c1 	cmpeq_i s5, s3, s4
   51d68:	45 02 00 f2 	bz s5, 72 <copy_remain_bytes>

0000000000051d6c copy_word_lead_in:
   51d6c:	80 0c 00 01 	and s4, s0, 3
   51d70:	04 01 00 f2 	bz s4, 32 <copy_words>
   51d74:	c2 02 00 f2 	bz s2, 88 <copy_done>
   51d78:	81 00 00 a0 	load_u8 s4, (s1)
   51d7c:	80 00 00 82 	store_8 s4, (s0)
   51d80:	00 04 00 05 	add_i s0, s0, 1
   51d84:	21 04 00 05 	add_i s1, s1, 1
   51d88:	42 04 00 06 	sub_i s2, s2, 1
   51d8c:	f8 ff ff f7 	b -32 <copy_word_lead_in>

0000000000051d90 copy_words:
   51d90:	82 10 00 18 	cmplt_u s4, s2, 4
   51d94:	e4 00 00 f4 	bnz s4, 28 <copy_remain_bytes>
   51d98:	81 00 00 a8 	load_32 s4, (s1)
   51d9c:	80 00 00 88 	store_32 s4, (s0)
   51da0:	00 10 00 05 	add_i s0, s0, 4
   51da4:	21 10 00 05 	add_i s1, s1, 4
   51da8:	42 10 00 06 	sub_i s2, s2, 4
   51dac:	f9 ff ff f7 	b -28 <copy_words>

0000000000051db0 copy_remain_bytes:
   51db0:	e2 00 00 f2 	bz s2, 28 <copy_done>
   51db4:	81 00 00 a0 	load_u8 s4, (s1)
   51db8:	80 00 00 82 	store_8 s4, (s0)
   51dbc:	00 04 00 05 	add_i s0, s0, 1
   51dc0:	21 04 00 05 	add_i s1, s1, 1
   51dc4:	42 04 00 06 	sub_i s2, s2, 1
   51dc8:	fa ff ff f7 	b -24 <copy_remain_bytes>

0000000000051dcc copy_done:
   51dcc:	00 00 f3 c0 	move s0, s6
   51dd0:	1f 00 00 f0 	ret

0000000000051dd4 printf:
   51dd4:	de 03 ff 05 	add_i sp, sp, -64
   51dd8:	fe f3 00 88 	store_32 ra, 60(sp)
   51ddc:	1a 04 00 4f 	movehi s0, 58
   51de0:	3e 00 01 a8 	load_32 s1, 64(sp)
   51de4:	5e 10 01 05 	add_i s2, sp, 68
   51de8:	5e e0 00 88 	store_32 s2, 56(sp)
   51dec:	00 80 16 00 	or s0, s0, 1440
   51df0:	00 00 00 a8 	load_32 s0, (s0)
   51df4:	d5 02 00 f8 	call 2900 <vfprintf>
   51df8:	00 00 00 0f 	move s0, 0
   51dfc:	fe f3 00 a8 	load_32 ra, 60(sp)
   51e00:	de 03 01 05 	add_i sp, sp, 64
   51e04:	1f 00 00 f0 	ret

0000000000051e08 sprintf:
   51e08:	de 03 ff 05 	add_i sp, sp, -64
   51e0c:	1e f3 00 88 	store_32 s24, 60(sp)
   51e10:	3e e3 00 88 	store_32 s25, 56(sp)
   51e14:	5e d3 00 88 	store_32 s26, 52(sp)
   51e18:	fe c3 00 88 	store_32 ra, 48(sp)
   51e1c:	1e 43 00 05 	add_i s24, sp, 16
   51e20:	3e 10 01 a8 	load_32 s1, 68(sp)
   51e24:	1e 00 01 a8 	load_32 s0, 64(sp)
   51e28:	40 03 00 0f 	move s26, 0
   51e2c:	1e 40 00 88 	store_32 s0, 16(sp)
   51e30:	1f fc 7f 4f 	movehi s0, 262143
   51e34:	38 13 00 00 	or s25, s24, 4
   51e38:	5e 20 01 05 	add_i s2, sp, 72
   51e3c:	00 fc 7f 00 	or s0, s0, 8191
   51e40:	59 03 00 88 	store_32 s26, (s25)
   51e44:	1e 60 00 88 	store_32 s0, 24(sp)
   51e48:	5e 73 00 88 	store_32 s26, 28(sp)
   51e4c:	5e 90 00 88 	store_32 s2, 36(sp)
   51e50:	00 00 fc c0 	move s0, s24
   51e54:	bd 02 00 f8 	call 2804 <vfprintf>
   51e58:	1a 04 00 4f 	movehi s0, 58
   51e5c:	5e b3 00 88 	store_32 s26, 44(sp)
   51e60:	00 80 16 00 	or s0, s0, 1440
   51e64:	00 00 00 a8 	load_32 s0, (s0)
   51e68:	00 00 1c c1 	cmpne_i s0, s0, s24
   51e6c:	40 00 00 f4 	bnz s0, 8 <sprintf+0x6c>
   51e70:	0c 00 00 f6 	b 48 <sprintf+0x98>
   51e74:	1e 40 00 a8 	load_32 s0, 16(sp)
   51e78:	e0 01 00 f2 	bz s0, 60 <sprintf+0xac>
   51e7c:	39 00 00 a8 	load_32 s1, (s25)
   51e80:	5e 60 00 a8 	load_32 s2, 24(sp)
   51e84:	41 00 31 c1 	cmpge_i s2, s1, s2
   51e88:	e2 01 00 f4 	bnz s2, 60 <sprintf+0xbc>
   51e8c:	00 80 50 c0 	add_i s0, s0, s1
   51e90:	21 04 00 05 	add_i s1, s1, 1
   51e94:	39 00 00 88 	store_32 s1, (s25)
   51e98:	40 03 00 82 	store_8 s26, (s0)
   51e9c:	0a 00 00 f6 	b 40 <sprintf+0xbc>
   51ea0:	1e ac 00 05 	add_i s0, sp, 43
   51ea4:	5e af 00 82 	store_8 s26, 43(sp)
   51ea8:	20 04 00 0f 	move s1, 1
   51eac:	45 05 00 f8 	call 5396 <write_console>
   51eb0:	05 00 00 f6 	b 20 <sprintf+0xbc>
   51eb4:	1e 70 00 a8 	load_32 s0, 28(sp)
   51eb8:	3e b0 00 05 	add_i s1, sp, 44
   51ebc:	40 04 00 0f 	move s2, 1
   51ec0:	28 07 00 f8 	call 7328 <write>
   51ec4:	19 00 00 a8 	load_32 s0, (s25)
   51ec8:	fe c3 00 a8 	load_32 ra, 48(sp)
   51ecc:	5e d3 00 a8 	load_32 s26, 52(sp)
   51ed0:	3e e3 00 a8 	load_32 s25, 56(sp)
   51ed4:	1e f3 00 a8 	load_32 s24, 60(sp)
   51ed8:	de 03 01 05 	add_i sp, sp, 64
   51edc:	1f 00 00 f0 	ret

0000000000051ee0 fputc:
   51ee0:	de 03 ff 05 	add_i sp, sp, -64
   51ee4:	fe f3 00 88 	store_32 ra, 60(sp)
   51ee8:	5a 04 00 4f 	movehi s2, 58
   51eec:	1e e0 00 88 	store_32 s0, 56(sp)
   51ef0:	42 80 16 00 	or s2, s2, 1440
   51ef4:	42 00 00 a8 	load_32 s2, (s2)
   51ef8:	42 80 10 c1 	cmpne_i s2, s2, s1
   51efc:	42 00 00 f4 	bnz s2, 8 <fputc+0x24>
   51f00:	0f 00 00 f6 	b 60 <fputc+0x5c>
   51f04:	41 00 00 a8 	load_32 s2, (s1)
   51f08:	a2 02 00 f2 	bz s2, 84 <fputc+0x7c>
   51f0c:	61 10 00 a8 	load_32 s3, 4(s1)
   51f10:	81 20 00 a8 	load_32 s4, 8(s1)
   51f14:	83 00 32 c1 	cmpge_i s4, s3, s4
   51f18:	a4 00 00 f4 	bnz s4, 20 <fputc+0x4c>
   51f1c:	42 80 51 c0 	add_i s2, s2, s3
   51f20:	63 04 00 05 	add_i s3, s3, 1
   51f24:	61 10 00 88 	store_32 s3, 4(s1)
   51f28:	02 00 00 82 	store_8 s0, (s2)
   51f2c:	00 04 00 0f 	move s0, 1
   51f30:	fe f3 00 a8 	load_32 ra, 60(sp)
   51f34:	de 03 01 05 	add_i sp, sp, 64
   51f38:	1f 00 00 f0 	ret
   51f3c:	1e dc 00 82 	store_8 s0, 55(sp)
   51f40:	1e dc 00 05 	add_i s0, sp, 55
   51f44:	20 04 00 0f 	move s1, 1
   51f48:	1e 05 00 f8 	call 5240 <write_console>
   51f4c:	00 04 00 0f 	move s0, 1
   51f50:	fe f3 00 a8 	load_32 ra, 60(sp)
   51f54:	de 03 01 05 	add_i sp, sp, 64
   51f58:	1f 00 00 f0 	ret
   51f5c:	01 30 00 a8 	load_32 s0, 12(s1)
   51f60:	3e e0 00 05 	add_i s1, sp, 56
   51f64:	40 04 00 0f 	move s2, 1
   51f68:	fe 06 00 f8 	call 7160 <write>
   51f6c:	00 04 00 0f 	move s0, 1
   51f70:	fe f3 00 a8 	load_32 ra, 60(sp)
   51f74:	de 03 01 05 	add_i sp, sp, 64
   51f78:	1f 00 00 f0 	ret

0000000000051f7c snprintf:
   51f7c:	de 03 ff 05 	add_i sp, sp, -64
   51f80:	1e f3 00 88 	store_32 s24, 60(sp)
   51f84:	3e e3 00 88 	store_32 s25, 56(sp)
   51f88:	5e d3 00 88 	store_32 s26, 52(sp)
   51f8c:	fe c3 00 88 	store_32 ra, 48(sp)
   51f90:	1e 43 00 05 	add_i s24, sp, 16
   51f94:	3e 20 01 a8 	load_32 s1, 72(sp)
   51f98:	1e 10 01 a8 	load_32 s0, 68(sp)
   51f9c:	40 03 00 0f 	move s26, 0
   51fa0:	5e 00 01 a8 	load_32 s2, 64(sp)
   51fa4:	38 13 00 00 	or s25, s24, 4
   51fa8:	5e 40 00 88 	store_32 s2, 16(sp)
   51fac:	5e 30 01 05 	add_i s2, sp, 76
   51fb0:	59 03 00 88 	store_32 s26, (s25)
   51fb4:	1e 60 00 88 	store_32 s0, 24(sp)
   51fb8:	5e 73 00 88 	store_32 s26, 28(sp)
   51fbc:	5e 90 00 88 	store_32 s2, 36(sp)
   51fc0:	00 00 fc c0 	move s0, s24
   51fc4:	61 02 00 f8 	call 2436 <vfprintf>
   51fc8:	1a 04 00 4f 	movehi s0, 58
   51fcc:	5e b3 00 88 	store_32 s26, 44(sp)
   51fd0:	00 80 16 00 	or s0, s0, 1440
   51fd4:	00 00 00 a8 	load_32 s0, (s0)
   51fd8:	00 00 1c c1 	cmpne_i s0, s0, s24
   51fdc:	40 00 00 f4 	bnz s0, 8 <snprintf+0x68>
   51fe0:	0c 00 00 f6 	b 48 <snprintf+0x94>
   51fe4:	1e 40 00 a8 	load_32 s0, 16(sp)
   51fe8:	e0 01 00 f2 	bz s0, 60 <snprintf+0xa8>
   51fec:	39 00 00 a8 	load_32 s1, (s25)
   51ff0:	5e 60 00 a8 	load_32 s2, 24(sp)
   51ff4:	41 00 31 c1 	cmpge_i s2, s1, s2
   51ff8:	e2 01 00 f4 	bnz s2, 60 <snprintf+0xb8>
   51ffc:	00 80 50 c0 	add_i s0, s0, s1
   52000:	21 04 00 05 	add_i s1, s1, 1
   52004:	39 00 00 88 	store_32 s1, (s25)
   52008:	40 03 00 82 	store_8 s26, (s0)
   5200c:	0a 00 00 f6 	b 40 <snprintf+0xb8>
   52010:	1e ac 00 05 	add_i s0, sp, 43
   52014:	5e af 00 82 	store_8 s26, 43(sp)
   52018:	20 04 00 0f 	move s1, 1
   5201c:	e9 04 00 f8 	call 5028 <write_console>
   52020:	05 00 00 f6 	b 20 <snprintf+0xb8>
   52024:	1e 70 00 a8 	load_32 s0, 28(sp)
   52028:	3e b0 00 05 	add_i s1, sp, 44
   5202c:	40 04 00 0f 	move s2, 1
   52030:	cc 06 00 f8 	call 6960 <write>
   52034:	19 00 00 a8 	load_32 s0, (s25)
   52038:	fe c3 00 a8 	load_32 ra, 48(sp)
   5203c:	5e d3 00 a8 	load_32 s26, 52(sp)
   52040:	3e e3 00 a8 	load_32 s25, 56(sp)
   52044:	1e f3 00 a8 	load_32 s24, 60(sp)
   52048:	de 03 01 05 	add_i sp, sp, 64
   5204c:	1f 00 00 f0 	ret

0000000000052050 vsnprintf:
   52050:	de 03 ff 05 	add_i sp, sp, -64
   52054:	1e f3 00 88 	store_32 s24, 60(sp)
   52058:	3e e3 00 88 	store_32 s25, 56(sp)
   5205c:	5e d3 00 88 	store_32 s26, 52(sp)
   52060:	fe c3 00 88 	store_32 ra, 48(sp)
   52064:	1e 63 00 05 	add_i s24, sp, 24
   52068:	1e 60 00 88 	store_32 s0, 24(sp)
   5206c:	40 03 00 0f 	move s26, 0
   52070:	38 13 00 00 	or s25, s24, 4
   52074:	59 03 00 88 	store_32 s26, (s25)
   52078:	3e 80 00 88 	store_32 s1, 32(sp)
   5207c:	5e 93 00 88 	store_32 s26, 36(sp)
   52080:	00 00 fc c0 	move s0, s24
   52084:	20 00 f1 c0 	move s1, s2
   52088:	40 80 f1 c0 	move s2, s3
   5208c:	2f 02 00 f8 	call 2236 <vfprintf>
   52090:	1a 04 00 4f 	movehi s0, 58
   52094:	5e b3 00 88 	store_32 s26, 44(sp)
   52098:	00 80 16 00 	or s0, s0, 1440
   5209c:	00 00 00 a8 	load_32 s0, (s0)
   520a0:	00 00 1c c1 	cmpne_i s0, s0, s24
   520a4:	40 00 00 f4 	bnz s0, 8 <vsnprintf+0x5c>
   520a8:	0c 00 00 f6 	b 48 <vsnprintf+0x88>
   520ac:	1e 60 00 a8 	load_32 s0, 24(sp)
   520b0:	e0 01 00 f2 	bz s0, 60 <vsnprintf+0x9c>
   520b4:	39 00 00 a8 	load_32 s1, (s25)
   520b8:	5e 80 00 a8 	load_32 s2, 32(sp)
   520bc:	41 00 31 c1 	cmpge_i s2, s1, s2
   520c0:	e2 01 00 f4 	bnz s2, 60 <vsnprintf+0xac>
   520c4:	00 80 50 c0 	add_i s0, s0, s1
   520c8:	21 04 00 05 	add_i s1, s1, 1
   520cc:	39 00 00 88 	store_32 s1, (s25)
   520d0:	40 03 00 82 	store_8 s26, (s0)
   520d4:	0a 00 00 f6 	b 40 <vsnprintf+0xac>
   520d8:	1e ac 00 05 	add_i s0, sp, 43
   520dc:	5e af 00 82 	store_8 s26, 43(sp)
   520e0:	20 04 00 0f 	move s1, 1
   520e4:	b7 04 00 f8 	call 4828 <write_console>
   520e8:	05 00 00 f6 	b 20 <vsnprintf+0xac>
   520ec:	1e 90 00 a8 	load_32 s0, 36(sp)
   520f0:	3e b0 00 05 	add_i s1, sp, 44
   520f4:	40 04 00 0f 	move s2, 1
   520f8:	9a 06 00 f8 	call 6760 <write>
   520fc:	19 00 00 a8 	load_32 s0, (s25)
   52100:	fe c3 00 a8 	load_32 ra, 48(sp)
   52104:	5e d3 00 a8 	load_32 s26, 52(sp)
   52108:	3e e3 00 a8 	load_32 s25, 56(sp)
   5210c:	1e f3 00 a8 	load_32 s24, 60(sp)
   52110:	de 03 01 05 	add_i sp, sp, 64
   52114:	1f 00 00 f0 	ret

0000000000052118 putchar:
   52118:	de 03 ff 05 	add_i sp, sp, -64
   5211c:	1e f3 00 88 	store_32 s24, 60(sp)
   52120:	fe e3 00 88 	store_32 ra, 56(sp)
   52124:	00 07 00 0f 	move s24, 1
   52128:	1e dc 00 82 	store_8 s0, 55(sp)
   5212c:	1e dc 00 05 	add_i s0, sp, 55
   52130:	20 00 fc c0 	move s1, s24
   52134:	a3 04 00 f8 	call 4748 <write_console>
   52138:	00 00 fc c0 	move s0, s24
   5213c:	fe e3 00 a8 	load_32 ra, 56(sp)
   52140:	1e f3 00 a8 	load_32 s24, 60(sp)
   52144:	de 03 01 05 	add_i sp, sp, 64
   52148:	1f 00 00 f0 	ret

000000000005214c puts:
   5214c:	de 03 ff 05 	add_i sp, sp, -64
   52150:	1e f3 00 88 	store_32 s24, 60(sp)
   52154:	3e e3 00 88 	store_32 s25, 56(sp)
   52158:	5e d3 00 88 	store_32 s26, 52(sp)
   5215c:	7e c3 00 88 	store_32 s27, 48(sp)
   52160:	fe b3 00 88 	store_32 ra, 44(sp)
   52164:	00 03 f0 c0 	move s24, s0
   52168:	18 00 00 a0 	load_u8 s0, (s24)
   5216c:	1e 93 00 88 	store_32 s24, 36(sp)
   52170:	80 01 00 f2 	bz s0, 48 <puts+0x54>
   52174:	7e 93 00 a8 	load_32 s27, 36(sp)
   52178:	3e ab 00 05 	add_i s25, sp, 42
   5217c:	40 07 00 0f 	move s26, 1
   52180:	1e a8 00 82 	store_8 s0, 42(sp)
   52184:	00 80 fc c0 	move s0, s25
   52188:	20 00 fd c0 	move s1, s26
   5218c:	8d 04 00 f8 	call 4660 <write_console>
   52190:	1b 07 00 05 	add_i s24, s27, 1
   52194:	1b 04 00 a0 	load_u8 s0, 1(s27)
   52198:	60 03 fc c0 	move s27, s24
   5219c:	20 ff ff f5 	bnz s0, -28 <puts+0x34>
   521a0:	20 07 00 0f 	move s25, 1
   521a4:	00 28 00 0f 	move s0, 10
   521a8:	1e ac 00 82 	store_8 s0, 43(sp)
   521ac:	1e ac 00 05 	add_i s0, sp, 43
   521b0:	20 80 fc c0 	move s1, s25
   521b4:	83 04 00 f8 	call 4620 <write_console>
   521b8:	1e 90 00 a8 	load_32 s0, 36(sp)
   521bc:	fe b3 00 a8 	load_32 ra, 44(sp)
   521c0:	7e c3 00 a8 	load_32 s27, 48(sp)
   521c4:	5e d3 00 a8 	load_32 s26, 52(sp)
   521c8:	19 00 60 c0 	sub_i s0, s25, s0
   521cc:	3e e3 00 a8 	load_32 s25, 56(sp)
   521d0:	00 00 5c c0 	add_i s0, s0, s24
   521d4:	1e f3 00 a8 	load_32 s24, 60(sp)
   521d8:	de 03 01 05 	add_i sp, sp, 64
   521dc:	1f 00 00 f0 	ret

00000000000521e0 fputs:
   521e0:	de 03 ff 05 	add_i sp, sp, -64
   521e4:	1e f3 00 88 	store_32 s24, 60(sp)
   521e8:	3e e3 00 88 	store_32 s25, 56(sp)
   521ec:	5e d3 00 88 	store_32 s26, 52(sp)
   521f0:	7e c3 00 88 	store_32 s27, 48(sp)
   521f4:	fe b3 00 88 	store_32 ra, 44(sp)
   521f8:	80 00 00 a0 	load_u8 s4, (s0)
   521fc:	20 83 f0 c0 	move s25, s1
   52200:	1e 60 00 88 	store_32 s0, 24(sp)
   52204:	20 00 f0 c0 	move s1, s0
   52208:	e4 05 00 f2 	bz s4, 188 <fputs+0xe4>
   5220c:	3a 04 00 4f 	movehi s1, 58
   52210:	1e 9c 00 05 	add_i s0, sp, 39
   52214:	1e 80 00 88 	store_32 s0, 32(sp)
   52218:	1e a0 00 05 	add_i s0, sp, 40
   5221c:	1e 70 00 88 	store_32 s0, 28(sp)
   52220:	5e 63 00 a8 	load_32 s26, 24(sp)
   52224:	01 83 16 00 	or s24, s1, 1440
   52228:	60 07 00 0f 	move s27, 1
   5222c:	20 00 d2 c1 	sext_8 s1, s4
   52230:	3e a0 00 88 	store_32 s1, 40(sp)
   52234:	38 00 00 a8 	load_32 s1, (s24)
   52238:	21 80 1c c1 	cmpne_i s1, s1, s25
   5223c:	41 00 00 f4 	bnz s1, 8 <fputs+0x64>
   52240:	10 00 00 f6 	b 64 <fputs+0xa0>
   52244:	39 00 00 a8 	load_32 s1, (s25)
   52248:	e1 02 00 f2 	bz s1, 92 <fputs+0xc4>
   5224c:	59 10 00 a8 	load_32 s2, 4(s25)
   52250:	79 20 00 a8 	load_32 s3, 8(s25)
   52254:	62 80 31 c1 	cmpge_i s3, s2, s3
   52258:	a3 00 00 f4 	bnz s3, 20 <fputs+0x8c>
   5225c:	21 00 51 c0 	add_i s1, s1, s2
   52260:	42 04 00 05 	add_i s2, s2, 1
   52264:	59 10 00 88 	store_32 s2, 4(s25)
   52268:	81 00 00 82 	store_8 s4, (s1)
   5226c:	3a 04 00 05 	add_i s1, s26, 1
   52270:	9a 04 00 a0 	load_u8 s4, 1(s26)
   52274:	40 83 f0 c0 	move s26, s1
   52278:	a4 fd ff f5 	bnz s4, -76 <fputs+0x4c>
   5227c:	12 00 00 f6 	b 72 <fputs+0xe4>
   52280:	9e 9c 00 82 	store_8 s4, 39(sp)
   52284:	1e 80 00 a8 	load_32 s0, 32(sp)
   52288:	20 80 fd c0 	move s1, s27
   5228c:	4d 04 00 f8 	call 4404 <write_console>
   52290:	3a 04 00 05 	add_i s1, s26, 1
   52294:	9a 04 00 a0 	load_u8 s4, 1(s26)
   52298:	40 83 f0 c0 	move s26, s1
   5229c:	84 fc ff f5 	bnz s4, -112 <fputs+0x4c>
   522a0:	09 00 00 f6 	b 36 <fputs+0xe4>
   522a4:	19 30 00 a8 	load_32 s0, 12(s25)
   522a8:	3e 70 00 a8 	load_32 s1, 28(sp)
   522ac:	40 80 fd c0 	move s2, s27
   522b0:	2c 06 00 f8 	call 6320 <write>
   522b4:	3a 04 00 05 	add_i s1, s26, 1
   522b8:	9a 04 00 a0 	load_u8 s4, 1(s26)
   522bc:	40 83 f0 c0 	move s26, s1
   522c0:	64 fb ff f5 	bnz s4, -148 <fputs+0x4c>
   522c4:	1e 60 00 a8 	load_32 s0, 24(sp)
   522c8:	fe b3 00 a8 	load_32 ra, 44(sp)
   522cc:	7e c3 00 a8 	load_32 s27, 48(sp)
   522d0:	5e d3 00 a8 	load_32 s26, 52(sp)
   522d4:	3e e3 00 a8 	load_32 s25, 56(sp)
   522d8:	01 00 60 c0 	sub_i s0, s1, s0
   522dc:	1e f3 00 a8 	load_32 s24, 60(sp)
   522e0:	de 03 01 05 	add_i sp, sp, 64
   522e4:	1f 00 00 f0 	ret

00000000000522e8 fgetc:
   522e8:	de 03 ff 05 	add_i sp, sp, -64
   522ec:	fe f3 00 88 	store_32 ra, 60(sp)
   522f0:	00 30 00 a8 	load_32 s0, 12(s0)
   522f4:	3e ec 00 05 	add_i s1, sp, 59
   522f8:	40 04 00 0f 	move s2, 1
   522fc:	97 05 00 f8 	call 5724 <read>
   52300:	20 00 00 14 	cmplt_i s1, s0, 0
   52304:	1e ec 00 a0 	load_u8 s0, 59(sp)
   52308:	41 00 00 f4 	bnz s1, 8 <fgetc+0x28>
   5230c:	02 00 00 f6 	b 8 <fgetc+0x2c>
   52310:	00 fc ff 0f 	move s0, -1
   52314:	fe f3 00 a8 	load_32 ra, 60(sp)
   52318:	de 03 01 05 	add_i sp, sp, 64
   5231c:	1f 00 00 f0 	ret

0000000000052320 fopen:
   52320:	de 03 ff 05 	add_i sp, sp, -64
   52324:	1e f3 00 88 	store_32 s24, 60(sp)
   52328:	3e e3 00 88 	store_32 s25, 56(sp)
   5232c:	fe d3 00 88 	store_32 ra, 52(sp)
   52330:	00 03 00 0f 	move s24, 0
   52334:	20 00 fc c0 	move s1, s24
   52338:	4b 04 00 f8 	call 4396 <open>
   5233c:	20 03 f0 c0 	move s25, s0
   52340:	19 00 00 14 	cmplt_i s0, s25, 0
   52344:	e0 00 00 f4 	bnz s0, 28 <fopen+0x40>
   52348:	00 40 00 0f 	move s0, 16
   5234c:	bd eb ff f9 	call -20748 <malloc>
   52350:	00 03 f0 c0 	move s24, s0
   52354:	00 00 00 0f 	move s0, 0
   52358:	18 00 00 88 	store_32 s0, (s24)
   5235c:	38 33 00 88 	store_32 s25, 12(s24)
   52360:	00 00 fc c0 	move s0, s24
   52364:	fe d3 00 a8 	load_32 ra, 52(sp)
   52368:	3e e3 00 a8 	load_32 s25, 56(sp)
   5236c:	1e f3 00 a8 	load_32 s24, 60(sp)
   52370:	de 03 01 05 	add_i sp, sp, 64
   52374:	1f 00 00 f0 	ret

0000000000052378 fwrite:
   52378:	de 03 ff 05 	add_i sp, sp, -64
   5237c:	1e f3 00 88 	store_32 s24, 60(sp)
   52380:	3e e3 00 88 	store_32 s25, 56(sp)
   52384:	5e d3 00 88 	store_32 s26, 52(sp)
   52388:	7e c3 00 88 	store_32 s27, 48(sp)
   5238c:	fe b3 00 88 	store_32 ra, 44(sp)
   52390:	5e 50 00 88 	store_32 s2, 20(sp)
   52394:	20 83 f1 c0 	move s25, s3
   52398:	62 83 70 c0 	mull_i s27, s2, s1
   5239c:	40 03 f0 c0 	move s26, s0
   523a0:	5b 05 00 f2 	bz s27, 168 <fwrite+0xd0>
   523a4:	1a 04 00 4f 	movehi s0, 58
   523a8:	00 83 16 00 	or s24, s0, 1440
   523ac:	1e 9c 00 05 	add_i s0, sp, 39
   523b0:	1e 70 00 88 	store_32 s0, 28(sp)
   523b4:	00 04 00 0f 	move s0, 1
   523b8:	1e 80 00 88 	store_32 s0, 32(sp)
   523bc:	1e a0 00 05 	add_i s0, sp, 40
   523c0:	1e 60 00 88 	store_32 s0, 24(sp)
   523c4:	1a 00 00 a2 	load_s8 s0, (s26)
   523c8:	7b ff ff 05 	add_i s27, s27, -1
   523cc:	1e a0 00 88 	store_32 s0, 40(sp)
   523d0:	38 00 00 a8 	load_32 s1, (s24)
   523d4:	21 80 1c c1 	cmpne_i s1, s1, s25
   523d8:	41 00 00 f4 	bnz s1, 8 <fwrite+0x68>
   523dc:	0e 00 00 f6 	b 56 <fwrite+0x9c>
   523e0:	39 00 00 a8 	load_32 s1, (s25)
   523e4:	61 02 00 f2 	bz s1, 76 <fwrite+0xb8>
   523e8:	59 10 00 a8 	load_32 s2, 4(s25)
   523ec:	79 20 00 a8 	load_32 s3, 8(s25)
   523f0:	62 80 31 c1 	cmpge_i s3, s2, s3
   523f4:	a3 00 00 f4 	bnz s3, 20 <fwrite+0x90>
   523f8:	21 00 51 c0 	add_i s1, s1, s2
   523fc:	42 04 00 05 	add_i s2, s2, 1
   52400:	59 10 00 88 	store_32 s2, 4(s25)
   52404:	01 00 00 82 	store_8 s0, (s1)
   52408:	5a 07 00 05 	add_i s26, s26, 1
   5240c:	db fd ff f5 	bnz s27, -72 <fwrite+0x4c>
   52410:	0e 00 00 f6 	b 56 <fwrite+0xd0>
   52414:	1e 9c 00 82 	store_8 s0, 39(sp)
   52418:	1e 70 00 a8 	load_32 s0, 28(sp)
   5241c:	3e 80 00 a8 	load_32 s1, 32(sp)
   52420:	e8 03 00 f8 	call 4000 <write_console>
   52424:	5a 07 00 05 	add_i s26, s26, 1
   52428:	fb fc ff f5 	bnz s27, -100 <fwrite+0x4c>
   5242c:	07 00 00 f6 	b 28 <fwrite+0xd0>
   52430:	19 30 00 a8 	load_32 s0, 12(s25)
   52434:	3e 60 00 a8 	load_32 s1, 24(sp)
   52438:	5e 80 00 a8 	load_32 s2, 32(sp)
   5243c:	c9 05 00 f8 	call 5924 <write>
   52440:	5a 07 00 05 	add_i s26, s26, 1
   52444:	1b fc ff f5 	bnz s27, -128 <fwrite+0x4c>
   52448:	1e 50 00 a8 	load_32 s0, 20(sp)
   5244c:	fe b3 00 a8 	load_32 ra, 44(sp)
   52450:	7e c3 00 a8 	load_32 s27, 48(sp)
   52454:	5e d3 00 a8 	load_32 s26, 52(sp)
   52458:	3e e3 00 a8 	load_32 s25, 56(sp)
   5245c:	1e f3 00 a8 	load_32 s24, 60(sp)
   52460:	de 03 01 05 	add_i sp, sp, 64
   52464:	1f 00 00 f0 	ret

0000000000052468 fread:
   52468:	de 03 ff 05 	add_i sp, sp, -64
   5246c:	1e f3 00 88 	store_32 s24, 60(sp)
   52470:	fe e3 00 88 	store_32 ra, 56(sp)
   52474:	00 83 f0 c0 	move s24, s1
   52478:	20 00 f0 c0 	move s1, s0
   5247c:	03 30 00 a8 	load_32 s0, 12(s3)
   52480:	42 00 7c c0 	mull_i s2, s2, s24
   52484:	35 05 00 f8 	call 5332 <read>
   52488:	20 00 00 14 	cmplt_i s1, s0, 0
   5248c:	e1 00 00 f4 	bnz s1, 28 <fread+0x40>
   52490:	20 00 fc c0 	move s1, s24
   52494:	9c 0c 00 f8 	call 12912 <__udivsi3>
   52498:	fe e3 00 a8 	load_32 ra, 56(sp)
   5249c:	1e f3 00 a8 	load_32 s24, 60(sp)
   524a0:	de 03 01 05 	add_i sp, sp, 64
   524a4:	1f 00 00 f0 	ret
   524a8:	00 00 00 0f 	move s0, 0
   524ac:	fe e3 00 a8 	load_32 ra, 56(sp)
   524b0:	1e f3 00 a8 	load_32 s24, 60(sp)
   524b4:	de 03 01 05 	add_i sp, sp, 64
   524b8:	1f 00 00 f0 	ret

00000000000524bc fclose:
   524bc:	de 03 ff 05 	add_i sp, sp, -64
   524c0:	1e f3 00 88 	store_32 s24, 60(sp)
   524c4:	3e e3 00 88 	store_32 s25, 56(sp)
   524c8:	fe d3 00 88 	store_32 ra, 52(sp)
   524cc:	00 03 f0 c0 	move s24, s0
   524d0:	18 30 00 a8 	load_32 s0, 12(s24)
   524d4:	0d 05 00 f8 	call 5172 <close>
   524d8:	20 03 f0 c0 	move s25, s0
   524dc:	00 00 fc c0 	move s0, s24
   524e0:	e2 f2 ff f9 	call -13432 <free>
   524e4:	00 80 fc c0 	move s0, s25
   524e8:	fe d3 00 a8 	load_32 ra, 52(sp)
   524ec:	3e e3 00 a8 	load_32 s25, 56(sp)
   524f0:	1e f3 00 a8 	load_32 s24, 60(sp)
   524f4:	de 03 01 05 	add_i sp, sp, 64
   524f8:	1f 00 00 f0 	ret

00000000000524fc fseek:
   524fc:	de 03 ff 05 	add_i sp, sp, -64
   52500:	fe f3 00 88 	store_32 ra, 60(sp)
   52504:	00 30 00 a8 	load_32 s0, 12(s0)
   52508:	a0 05 00 f8 	call 5760 <lseek>
   5250c:	fe f3 00 a8 	load_32 ra, 60(sp)
   52510:	de 03 01 05 	add_i sp, sp, 64
   52514:	1f 00 00 f0 	ret

0000000000052518 ftell:
   52518:	de 03 ff 05 	add_i sp, sp, -64
   5251c:	fe f3 00 88 	store_32 ra, 60(sp)
   52520:	00 30 00 a8 	load_32 s0, 12(s0)
   52524:	20 00 00 0f 	move s1, 0
   52528:	40 04 00 0f 	move s2, 1
   5252c:	97 05 00 f8 	call 5724 <lseek>
   52530:	fe f3 00 a8 	load_32 ra, 60(sp)
   52534:	de 03 01 05 	add_i sp, sp, 64
   52538:	1f 00 00 f0 	ret

000000000005253c fprintf:
   5253c:	de 03 ff 05 	add_i sp, sp, -64
   52540:	fe f3 00 88 	store_32 ra, 60(sp)
   52544:	1e 00 01 a8 	load_32 s0, 64(sp)
   52548:	5e 20 01 05 	add_i s2, sp, 72
   5254c:	3e 10 01 a8 	load_32 s1, 68(sp)
   52550:	5e e0 00 88 	store_32 s2, 56(sp)
   52554:	fd 00 00 f8 	call 1012 <vfprintf>
   52558:	00 00 00 0f 	move s0, 0
   5255c:	fe f3 00 a8 	load_32 ra, 60(sp)
   52560:	de 03 01 05 	add_i sp, sp, 64
   52564:	1f 00 00 f0 	ret

0000000000052568 fflush:
   52568:	00 00 00 0f 	move s0, 0
   5256c:	1f 00 00 f0 	ret

0000000000052570 ferror:
   52570:	00 00 00 0f 	move s0, 0
   52574:	1f 00 00 f0 	ret

0000000000052578 ungetc:
   52578:	de 03 ff 05 	add_i sp, sp, -64
   5257c:	1e f3 00 88 	store_32 s24, 60(sp)
   52580:	fe e3 00 88 	store_32 ra, 56(sp)
   52584:	00 03 f0 c0 	move s24, s0
   52588:	01 30 00 a8 	load_32 s0, 12(s1)
   5258c:	20 fc ff 0f 	move s1, -1
   52590:	40 04 00 0f 	move s2, 1
   52594:	7d 05 00 f8 	call 5620 <lseek>
   52598:	00 00 fc c0 	move s0, s24
   5259c:	fe e3 00 a8 	load_32 ra, 56(sp)
   525a0:	1e f3 00 a8 	load_32 s24, 60(sp)
   525a4:	de 03 01 05 	add_i sp, sp, 64
   525a8:	1f 00 00 f0 	ret

00000000000525ac strcmp:
   525ac:	60 00 00 a0 	load_u8 s3, (s0)
   525b0:	40 00 00 0f 	move s2, 0
   525b4:	23 01 00 f2 	bz s3, 36 <strcmp+0x2c>
   525b8:	81 00 00 a0 	load_u8 s4, (s1)
   525bc:	a3 fc 03 01 	and s5, s3, 255
   525c0:	85 00 12 c1 	cmpne_i s4, s5, s4
   525c4:	24 01 00 f4 	bnz s4, 36 <strcmp+0x3c>
   525c8:	60 04 00 a0 	load_u8 s3, 1(s0)
   525cc:	00 04 00 05 	add_i s0, s0, 1
   525d0:	21 04 00 05 	add_i s1, s1, 1
   525d4:	23 ff ff f5 	bnz s3, -28 <strcmp+0xc>
   525d8:	01 00 00 a2 	load_s8 s0, (s1)
   525dc:	20 00 d1 c1 	sext_8 s1, s2
   525e0:	01 00 60 c0 	sub_i s0, s1, s0
   525e4:	1f 00 00 f0 	ret
   525e8:	40 80 f1 c0 	move s2, s3
   525ec:	01 00 00 a2 	load_s8 s0, (s1)
   525f0:	20 00 d1 c1 	sext_8 s1, s2
   525f4:	01 00 60 c0 	sub_i s0, s1, s0
   525f8:	1f 00 00 f0 	ret

00000000000525fc strncmp:
   525fc:	62 02 00 f2 	bz s2, 76 <strncmp+0x4c>
   52600:	60 00 00 a0 	load_u8 s3, (s0)
   52604:	a3 01 00 f2 	bz s3, 52 <strncmp+0x3c>
   52608:	42 fc ff 05 	add_i s2, s2, -1
   5260c:	62 01 00 f2 	bz s2, 44 <strncmp+0x3c>
   52610:	81 00 00 a0 	load_u8 s4, (s1)
   52614:	a3 fc 03 01 	and s5, s3, 255
   52618:	85 00 12 c1 	cmpne_i s4, s5, s4
   5261c:	e4 00 00 f4 	bnz s4, 28 <strncmp+0x3c>
   52620:	60 04 00 a0 	load_u8 s3, 1(s0)
   52624:	21 04 00 05 	add_i s1, s1, 1
   52628:	83 00 00 f2 	bz s3, 16 <strncmp+0x3c>
   5262c:	42 fc ff 05 	add_i s2, s2, -1
   52630:	00 04 00 05 	add_i s0, s0, 1
   52634:	e2 fe ff f5 	bnz s2, -36 <strncmp+0x14>
   52638:	01 00 00 a2 	load_s8 s0, (s1)
   5263c:	20 80 d1 c1 	sext_8 s1, s3
   52640:	01 00 60 c0 	sub_i s0, s1, s0
   52644:	1f 00 00 f0 	ret
   52648:	00 00 00 0f 	move s0, 0
   5264c:	1f 00 00 f0 	ret

0000000000052650 strcasecmp:
   52650:	60 00 00 a0 	load_u8 s3, (s0)
   52654:	40 00 00 0f 	move s2, 0
   52658:	a3 02 00 f2 	bz s3, 84 <strcasecmp+0x5c>
   5265c:	80 80 d1 c1 	sext_8 s4, s3
   52660:	a4 7c fe 05 	add_i s5, s4, -97
   52664:	a5 68 00 18 	cmplt_u s5, s5, 26
   52668:	45 00 00 f4 	bnz s5, 8 <strcasecmp+0x20>
   5266c:	02 00 00 f6 	b 8 <strcasecmp+0x24>
   52670:	84 80 ff 05 	add_i s4, s4, -32
   52674:	a1 00 00 a2 	load_s8 s5, (s1)
   52678:	c5 7c fe 05 	add_i s6, s5, -97
   5267c:	c6 68 00 18 	cmplt_u s6, s6, 26
   52680:	46 00 00 f4 	bnz s6, 8 <strcasecmp+0x38>
   52684:	02 00 00 f6 	b 8 <strcasecmp+0x3c>
   52688:	a5 80 ff 05 	add_i s5, s5, -32
   5268c:	84 80 12 c1 	cmpne_i s4, s4, s5
   52690:	c4 00 00 f4 	bnz s4, 24 <strcasecmp+0x58>
   52694:	60 04 00 a0 	load_u8 s3, 1(s0)
   52698:	00 04 00 05 	add_i s0, s0, 1
   5269c:	21 04 00 05 	add_i s1, s1, 1
   526a0:	e3 fd ff f5 	bnz s3, -68 <strcasecmp+0xc>
   526a4:	02 00 00 f6 	b 8 <strcasecmp+0x5c>
   526a8:	40 80 f1 c0 	move s2, s3
   526ac:	00 00 d1 c1 	sext_8 s0, s2
   526b0:	40 7c fe 05 	add_i s2, s0, -97
   526b4:	42 68 00 18 	cmplt_u s2, s2, 26
   526b8:	42 00 00 f4 	bnz s2, 8 <strcasecmp+0x70>
   526bc:	02 00 00 f6 	b 8 <strcasecmp+0x74>
   526c0:	00 80 ff 05 	add_i s0, s0, -32
   526c4:	21 00 00 a2 	load_s8 s1, (s1)
   526c8:	41 7c fe 05 	add_i s2, s1, -97
   526cc:	42 68 00 18 	cmplt_u s2, s2, 26
   526d0:	42 00 00 f4 	bnz s2, 8 <strcasecmp+0x88>
   526d4:	02 00 00 f6 	b 8 <strcasecmp+0x8c>
   526d8:	21 80 ff 05 	add_i s1, s1, -32
   526dc:	00 80 60 c0 	sub_i s0, s0, s1
   526e0:	1f 00 00 f0 	ret

00000000000526e4 toupper:
   526e4:	20 7c fe 05 	add_i s1, s0, -97
   526e8:	21 68 00 18 	cmplt_u s1, s1, 26
   526ec:	41 00 00 f4 	bnz s1, 8 <toupper+0x10>
   526f0:	02 00 00 f6 	b 8 <toupper+0x14>
   526f4:	00 80 ff 05 	add_i s0, s0, -32
   526f8:	1f 00 00 f0 	ret

00000000000526fc strncasecmp:
   526fc:	e2 04 00 f2 	bz s2, 156 <strncasecmp+0x9c>
   52700:	60 00 00 a0 	load_u8 s3, (s0)
   52704:	e3 02 00 f2 	bz s3, 92 <strncasecmp+0x64>
   52708:	42 fc ff 05 	add_i s2, s2, -1
   5270c:	a2 02 00 f2 	bz s2, 84 <strncasecmp+0x64>
   52710:	80 80 d1 c1 	sext_8 s4, s3
   52714:	a4 7c fe 05 	add_i s5, s4, -97
   52718:	a5 68 00 18 	cmplt_u s5, s5, 26
   5271c:	45 00 00 f4 	bnz s5, 8 <strncasecmp+0x28>
   52720:	02 00 00 f6 	b 8 <strncasecmp+0x2c>
   52724:	84 80 ff 05 	add_i s4, s4, -32
   52728:	a1 00 00 a2 	load_s8 s5, (s1)
   5272c:	c5 7c fe 05 	add_i s6, s5, -97
   52730:	c6 68 00 18 	cmplt_u s6, s6, 26
   52734:	46 00 00 f4 	bnz s6, 8 <strncasecmp+0x40>
   52738:	02 00 00 f6 	b 8 <strncasecmp+0x44>
   5273c:	a5 80 ff 05 	add_i s5, s5, -32
   52740:	84 80 12 c1 	cmpne_i s4, s4, s5
   52744:	e4 00 00 f4 	bnz s4, 28 <strncasecmp+0x64>
   52748:	60 04 00 a0 	load_u8 s3, 1(s0)
   5274c:	21 04 00 05 	add_i s1, s1, 1
   52750:	83 00 00 f2 	bz s3, 16 <strncasecmp+0x64>
   52754:	42 fc ff 05 	add_i s2, s2, -1
   52758:	00 04 00 05 	add_i s0, s0, 1
   5275c:	a2 fd ff f5 	bnz s2, -76 <strncasecmp+0x14>
   52760:	00 80 d1 c1 	sext_8 s0, s3
   52764:	40 7c fe 05 	add_i s2, s0, -97
   52768:	42 68 00 18 	cmplt_u s2, s2, 26
   5276c:	42 00 00 f4 	bnz s2, 8 <strncasecmp+0x78>
   52770:	02 00 00 f6 	b 8 <strncasecmp+0x7c>
   52774:	00 80 ff 05 	add_i s0, s0, -32
   52778:	21 00 00 a2 	load_s8 s1, (s1)
   5277c:	41 7c fe 05 	add_i s2, s1, -97
   52780:	42 68 00 18 	cmplt_u s2, s2, 26
   52784:	42 00 00 f4 	bnz s2, 8 <strncasecmp+0x90>
   52788:	02 00 00 f6 	b 8 <strncasecmp+0x94>
   5278c:	21 80 ff 05 	add_i s1, s1, -32
   52790:	00 80 60 c0 	sub_i s0, s0, s1
   52794:	1f 00 00 f0 	ret
   52798:	00 00 00 0f 	move s0, 0
   5279c:	1f 00 00 f0 	ret

00000000000527a0 strlen:
   527a0:	20 00 f0 c0 	move s1, s0
   527a4:	01 00 00 a0 	load_u8 s0, (s1)
   527a8:	e0 00 00 f2 	bz s0, 28 <strlen+0x24>
   527ac:	00 00 00 0f 	move s0, 0
   527b0:	41 04 00 a0 	load_u8 s2, 1(s1)
   527b4:	21 04 00 05 	add_i s1, s1, 1
   527b8:	00 04 00 05 	add_i s0, s0, 1
   527bc:	a2 ff ff f5 	bnz s2, -12 <strlen+0x10>
   527c0:	1f 00 00 f0 	ret
   527c4:	00 00 00 0f 	move s0, 0
   527c8:	1f 00 00 f0 	ret

00000000000527cc strcpy:
   527cc:	41 00 00 a0 	load_u8 s2, (s1)
   527d0:	80 00 f0 c0 	move s4, s0
   527d4:	02 01 00 f2 	bz s2, 32 <strcpy+0x28>
   527d8:	60 00 f0 c0 	move s3, s0
   527dc:	83 04 00 05 	add_i s4, s3, 1
   527e0:	43 00 00 82 	store_8 s2, (s3)
   527e4:	41 04 00 a0 	load_u8 s2, 1(s1)
   527e8:	21 04 00 05 	add_i s1, s1, 1
   527ec:	60 00 f2 c0 	move s3, s4
   527f0:	62 ff ff f5 	bnz s2, -20 <strcpy+0x10>
   527f4:	20 00 00 0f 	move s1, 0
   527f8:	24 00 00 82 	store_8 s1, (s4)
   527fc:	1f 00 00 f0 	ret

0000000000052800 strncpy:
   52800:	81 00 00 a0 	load_u8 s4, (s1)
   52804:	a2 00 00 11 	cmpne_i s5, s2, 0
   52808:	62 02 00 f2 	bz s2, 76 <strncpy+0x54>
   5280c:	c4 fc 03 01 	and s6, s4, 255
   52810:	60 00 f0 c0 	move s3, s0
   52814:	66 01 00 f2 	bz s6, 44 <strncpy+0x40>
   52818:	60 00 f0 c0 	move s3, s0
   5281c:	42 fc ff 05 	add_i s2, s2, -1
   52820:	83 00 00 82 	store_8 s4, (s3)
   52824:	81 04 00 a0 	load_u8 s4, 1(s1)
   52828:	63 04 00 05 	add_i s3, s3, 1
   5282c:	a2 00 00 11 	cmpne_i s5, s2, 0
   52830:	82 00 00 f2 	bz s2, 16 <strncpy+0x40>
   52834:	c4 fc 03 01 	and s6, s4, 255
   52838:	21 04 00 05 	add_i s1, s1, 1
   5283c:	06 ff ff f5 	bnz s6, -32 <strncpy+0x1c>
   52840:	25 04 00 01 	and s1, s5, 1
   52844:	61 00 00 f2 	bz s1, 12 <strncpy+0x50>
   52848:	20 00 00 0f 	move s1, 0
   5284c:	23 00 00 82 	store_8 s1, (s3)
   52850:	1f 00 00 f0 	ret
   52854:	60 00 f0 c0 	move s3, s0
   52858:	25 04 00 01 	and s1, s5, 1
   5285c:	a1 ff ff f3 	bz s1, -12 <strncpy+0x50>
   52860:	fa ff ff f7 	b -24 <strncpy+0x48>

0000000000052864 strchr:
   52864:	40 00 f0 c0 	move s2, s0
   52868:	00 00 00 0f 	move s0, 0
   5286c:	62 00 00 a0 	load_u8 s3, (s2)
   52870:	e3 00 00 f2 	bz s3, 28 <strchr+0x28>
   52874:	60 80 d1 c1 	sext_8 s3, s3
   52878:	63 80 00 c1 	cmpeq_i s3, s3, s1
   5287c:	a3 00 00 f4 	bnz s3, 20 <strchr+0x2c>
   52880:	62 04 00 a0 	load_u8 s3, 1(s2)
   52884:	42 04 00 05 	add_i s2, s2, 1
   52888:	63 ff ff f5 	bnz s3, -20 <strchr+0x10>
   5288c:	1f 00 00 f0 	ret
   52890:	00 00 f1 c0 	move s0, s2
   52894:	1f 00 00 f0 	ret

0000000000052898 memchr:
   52898:	e2 01 00 f2 	bz s2, 60 <memchr+0x3c>
   5289c:	80 00 00 0f 	move s4, 0
   528a0:	a0 00 f2 c0 	move s5, s4
   528a4:	60 80 52 c0 	add_i s3, s0, s5
   528a8:	c3 00 00 a2 	load_s8 s6, (s3)
   528ac:	c6 80 10 c1 	cmpne_i s6, s6, s1
   528b0:	46 00 00 f4 	bnz s6, 8 <memchr+0x20>
   528b4:	0b 00 00 f6 	b 44 <memchr+0x48>
   528b8:	a5 04 00 05 	add_i s5, s5, 1
   528bc:	65 00 71 c1 	cmpge_u s3, s5, s2
   528c0:	43 00 00 f4 	bnz s3, 8 <memchr+0x30>
   528c4:	f8 ff ff f7 	b -32 <memchr+0xc>
   528c8:	60 00 f2 c0 	move s3, s4
   528cc:	00 80 f1 c0 	move s0, s3
   528d0:	1f 00 00 f0 	ret
   528d4:	60 00 00 0f 	move s3, 0
   528d8:	00 80 f1 c0 	move s0, s3
   528dc:	1f 00 00 f0 	ret
   528e0:	00 80 f1 c0 	move s0, s3
   528e4:	1f 00 00 f0 	ret

00000000000528e8 strcat:
   528e8:	60 00 f0 c0 	move s3, s0
   528ec:	40 80 f1 c0 	move s2, s3
   528f0:	82 00 00 a0 	load_u8 s4, (s2)
   528f4:	62 04 00 05 	add_i s3, s2, 1
   528f8:	a4 ff ff f5 	bnz s4, -12 <strcat+0x4>
   528fc:	61 00 00 a0 	load_u8 s3, (s1)
   52900:	43 01 00 f2 	bz s3, 40 <strcat+0x40>
   52904:	82 04 00 05 	add_i s4, s2, 1
   52908:	62 00 00 82 	store_8 s3, (s2)
   5290c:	61 04 00 a0 	load_u8 s3, 1(s1)
   52910:	21 04 00 05 	add_i s1, s1, 1
   52914:	40 00 f2 c0 	move s2, s4
   52918:	63 ff ff f5 	bnz s3, -20 <strcat+0x1c>
   5291c:	20 00 00 0f 	move s1, 0
   52920:	24 00 00 82 	store_8 s1, (s4)
   52924:	1f 00 00 f0 	ret
   52928:	80 00 f1 c0 	move s4, s2
   5292c:	20 00 00 0f 	move s1, 0
   52930:	24 00 00 82 	store_8 s1, (s4)
   52934:	1f 00 00 f0 	ret

0000000000052938 isdigit:
   52938:	00 40 ff 05 	add_i s0, s0, -48
   5293c:	00 28 00 18 	cmplt_u s0, s0, 10
   52940:	00 04 00 01 	and s0, s0, 1
   52944:	1f 00 00 f0 	ret

0000000000052948 vfprintf:
   52948:	de 03 fd 05 	add_i sp, sp, -192
   5294c:	1e f3 02 88 	store_32 s24, 188(sp)
   52950:	3e e3 02 88 	store_32 s25, 184(sp)
   52954:	5e d3 02 88 	store_32 s26, 180(sp)
   52958:	7e c3 02 88 	store_32 s27, 176(sp)
   5295c:	fe b3 02 88 	store_32 ra, 172(sp)
   52960:	40 83 f0 c0 	move s26, s1
   52964:	5e a0 02 88 	store_32 s2, 168(sp)
   52968:	3a 00 00 a0 	load_u8 s1, (s26)
   5296c:	60 03 f0 c0 	move s27, s0
   52970:	61 3f 00 f2 	bz s1, 2028 <vfprintf+0x814>
   52974:	03 00 00 4f 	movehi s0, 3
   52978:	40 04 00 0f 	move s2, 1
   5297c:	5e c0 00 88 	store_32 s2, 48(sp)
   52980:	40 94 00 0f 	move s2, 37
   52984:	5e a0 00 88 	store_32 s2, 40(sp)
   52988:	00 a3 64 00 	or s24, s0, 6440
   5298c:	00 00 00 4f 	movehi s0, 0
   52990:	80 00 00 0f 	move s4, 0
   52994:	60 9c 3d 00 	or s3, s0, 3943
   52998:	00 14 00 0f 	move s0, 5
   5299c:	1e d0 00 88 	store_32 s0, 52(sp)
   529a0:	00 08 00 0f 	move s0, 2
   529a4:	1e b0 00 88 	store_32 s0, 44(sp)
   529a8:	00 10 00 0f 	move s0, 4
   529ac:	1e f0 00 88 	store_32 s0, 60(sp)
   529b0:	00 0c 00 0f 	move s0, 3
   529b4:	1e 90 00 88 	store_32 s0, 36(sp)
   529b8:	9e 10 01 88 	store_32 s4, 68(sp)
   529bc:	9e 20 01 88 	store_32 s4, 72(sp)
   529c0:	20 03 f2 c0 	move s25, s4
   529c4:	9e 30 01 88 	store_32 s4, 76(sp)
   529c8:	00 00 f2 c0 	move s0, s4
   529cc:	7e 63 01 88 	store_32 s27, 88(sp)
   529d0:	9e 40 01 88 	store_32 s4, 80(sp)
   529d4:	1e 03 01 88 	store_32 s24, 64(sp)
   529d8:	7e 50 01 88 	store_32 s3, 84(sp)
   529dc:	46 01 00 f6 	b 1304 <vfprintf+0x5ac>
   529e0:	1e f0 00 a8 	load_32 s0, 60(sp)
   529e4:	3a 00 00 a0 	load_u8 s1, (s26)
   529e8:	61 28 00 f4 	bnz s1, 1292 <vfprintf+0x5ac>
   529ec:	dc 01 00 f6 	b 1904 <vfprintf+0x814>
   529f0:	1e d0 00 a8 	load_32 s0, 52(sp)
   529f4:	1e 03 01 a8 	load_32 s24, 64(sp)
   529f8:	7e 50 01 a8 	load_32 s3, 84(sp)
   529fc:	3a 00 00 a0 	load_u8 s1, (s26)
   52a00:	a1 27 00 f4 	bnz s1, 1268 <vfprintf+0x5ac>
   52a04:	d6 01 00 f6 	b 1880 <vfprintf+0x814>
   52a08:	1e b0 00 a8 	load_32 s0, 44(sp)
   52a0c:	60 80 fc c0 	move s3, s25
   52a10:	3e 83 01 a8 	load_32 s25, 96(sp)
   52a14:	3a 00 00 a0 	load_u8 s1, (s26)
   52a18:	e1 26 00 f4 	bnz s1, 1244 <vfprintf+0x5ac>
   52a1c:	d0 01 00 f6 	b 1856 <vfprintf+0x814>
   52a20:	3e 83 01 88 	store_32 s25, 96(sp)
   52a24:	23 00 00 4f 	movehi s1, 3
   52a28:	1e a0 02 a8 	load_32 s0, 168(sp)
   52a2c:	21 30 21 00 	or s1, s1, 2124
   52a30:	00 0c 00 05 	add_i s0, s0, 3
   52a34:	00 f0 ff 01 	and s0, s0, -4
   52a38:	40 10 00 05 	add_i s2, s0, 4
   52a3c:	5e a0 02 88 	store_32 s2, 168(sp)
   52a40:	40 00 00 a8 	load_32 s2, (s0)
   52a44:	3e 90 01 88 	store_32 s1, 100(sp)
   52a48:	01 00 00 a8 	load_32 s0, (s1)
   52a4c:	27 00 00 4f 	movehi s1, 7
   52a50:	21 ff 7f 00 	or s25, s1, 8191
   52a54:	02 00 e0 c2 	cmplt_f s0, s2, s0
   52a58:	00 80 1c c1 	cmpne_i s0, s0, s25
   52a5c:	00 01 00 f4 	bnz s0, 32 <vfprintf+0x134>
   52a60:	20 80 fd c0 	move s1, s27
   52a64:	5e 70 01 88 	store_32 s2, 92(sp)
   52a68:	00 b4 00 0f 	move s0, 45
   52a6c:	1d fd ff f9 	call -2956 <fputc>
   52a70:	5e 70 01 a8 	load_32 s2, 92(sp)
   52a74:	00 00 80 4f 	movehi s0, 262144
   52a78:	42 00 30 c0 	xor s2, s2, s0
   52a7c:	20 00 b1 c1 	ftoi s1, s2
   52a80:	5e e3 00 88 	store_32 s26, 56(sp)
   52a84:	5e 70 01 88 	store_32 s2, 92(sp)
   52a88:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x148>
   52a8c:	ec 00 00 f6 	b 944 <vfprintf+0x4f4>
   52a90:	3e 80 00 88 	store_32 s1, 32(sp)
   52a94:	01 04 00 14 	cmplt_i s0, s1, 1
   52a98:	00 83 fd c0 	move s24, s27
   52a9c:	60 03 00 f4 	bnz s0, 108 <vfprintf+0x1c0>
   52aa0:	3e 80 00 a8 	load_32 s1, 32(sp)
   52aa4:	60 53 00 0f 	move s27, 20
   52aa8:	46 cc cc 4f 	movehi s2, 419430
   52aac:	5e a3 01 05 	add_i s26, sp, 104
   52ab0:	7b ff ff 05 	add_i s27, s27, -1
   52ab4:	42 34 33 00 	or s2, s2, 3277
   52ab8:	41 00 81 c0 	mulh_u s2, s1, s2
   52abc:	9a 80 5d c0 	add_i s4, s26, s27
   52ac0:	a1 24 00 16 	cmpgt_u s5, s1, 9
   52ac4:	42 0c 00 0a 	shr s2, s2, 3
   52ac8:	62 28 00 07 	mull_i s3, s2, 10
   52acc:	61 80 61 c0 	sub_i s3, s1, s3
   52ad0:	63 c0 00 00 	or s3, s3, 48
   52ad4:	64 00 00 82 	store_8 s3, (s4)
   52ad8:	20 00 f1 c0 	move s1, s2
   52adc:	65 fe ff f5 	bnz s5, -52 <vfprintf+0x160>
   52ae0:	1e 63 01 a8 	load_32 s24, 88(sp)
   52ae4:	3b 4c 00 16 	cmpgt_u s1, s27, 19
   52ae8:	01 01 00 f4 	bnz s1, 32 <vfprintf+0x1c0>
   52aec:	3a 80 5d c0 	add_i s1, s26, s27
   52af0:	7b 07 00 05 	add_i s27, s27, 1
   52af4:	01 00 00 a2 	load_s8 s0, (s1)
   52af8:	20 00 fc c0 	move s1, s24
   52afc:	f9 fc ff f9 	call -3100 <fputc>
   52b00:	3b 50 00 18 	cmplt_u s1, s27, 20
   52b04:	41 ff ff f5 	bnz s1, -24 <vfprintf+0x1a4>
   52b08:	60 03 fc c0 	move s27, s24
   52b0c:	1e 03 01 a8 	load_32 s24, 64(sp)
   52b10:	1e 80 00 a8 	load_32 s0, 32(sp)
   52b14:	cf 00 00 f6 	b 828 <vfprintf+0x508>
   52b18:	60 2b 00 0f 	move s27, 10
   52b1c:	3e 20 01 a8 	load_32 s1, 72(sp)
   52b20:	3e 83 01 88 	store_32 s25, 96(sp)
   52b24:	21 40 00 01 	and s1, s1, 16
   52b28:	a1 2a 00 f2 	bz s1, 1364 <vfprintf+0x734>
   52b2c:	1e a0 02 a8 	load_32 s0, 168(sp)
   52b30:	00 0c 00 05 	add_i s0, s0, 3
   52b34:	00 f0 ff 01 	and s0, s0, -4
   52b38:	20 10 00 05 	add_i s1, s0, 4
   52b3c:	3e a0 02 88 	store_32 s1, 168(sp)
   52b40:	00 03 00 a8 	load_32 s24, (s0)
   52b44:	20 20 00 05 	add_i s1, s0, 8
   52b48:	3e a0 02 88 	store_32 s1, 168(sp)
   52b4c:	20 13 00 a8 	load_32 s25, 4(s0)
   52b50:	1a 00 00 a0 	load_u8 s0, (s26)
   52b54:	7e 90 01 88 	store_32 s3, 100(sp)
   52b58:	20 a4 01 10 	cmpeq_i s1, s0, 105
   52b5c:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x21c>
   52b60:	56 01 00 f6 	b 1368 <vfprintf+0x770>
   52b64:	19 fc ff 12 	cmpgt_i s0, s25, -1
   52b68:	a0 0a 00 f4 	bnz s0, 340 <vfprintf+0x374>
   52b6c:	38 00 00 11 	cmpne_i s1, s24, 0
   52b70:	00 00 00 0f 	move s0, 0
   52b74:	61 09 00 f4 	bnz s1, 300 <vfprintf+0x358>
   52b78:	20 00 f0 c0 	move s1, s0
   52b7c:	4a 00 00 f6 	b 296 <vfprintf+0x35c>
   52b80:	1e a0 02 a8 	load_32 s0, 168(sp)
   52b84:	20 03 00 0f 	move s25, 0
   52b88:	00 0c 00 05 	add_i s0, s0, 3
   52b8c:	00 f0 ff 01 	and s0, s0, -4
   52b90:	20 10 00 05 	add_i s1, s0, 4
   52b94:	3e a0 02 88 	store_32 s1, 168(sp)
   52b98:	00 03 00 a8 	load_32 s24, (s0)
   52b9c:	1a 00 00 a0 	load_u8 s0, (s26)
   52ba0:	7e 90 01 88 	store_32 s3, 100(sp)
   52ba4:	20 a4 01 10 	cmpeq_i s1, s0, 105
   52ba8:	e1 fd ff f5 	bnz s1, -68 <vfprintf+0x21c>
   52bac:	43 01 00 f6 	b 1292 <vfprintf+0x770>
   52bb0:	20 23 00 0f 	move s25, 8
   52bb4:	3e 13 01 88 	store_32 s25, 68(sp)
   52bb8:	1f 01 00 f6 	b 1148 <vfprintf+0x6ec>
   52bbc:	1e a0 02 a8 	load_32 s0, 168(sp)
   52bc0:	00 0c 00 05 	add_i s0, s0, 3
   52bc4:	00 f0 ff 01 	and s0, s0, -4
   52bc8:	20 10 00 05 	add_i s1, s0, 4
   52bcc:	3e a0 02 88 	store_32 s1, 168(sp)
   52bd0:	00 00 00 a8 	load_32 s0, (s0)
   52bd4:	20 80 fd c0 	move s1, s27
   52bd8:	c2 fc ff f9 	call -3320 <fputc>
   52bdc:	7e 50 01 a8 	load_32 s3, 84(sp)
   52be0:	5a 07 00 05 	add_i s26, s26, 1
   52be4:	1e 40 01 a8 	load_32 s0, 80(sp)
   52be8:	3a 00 00 a0 	load_u8 s1, (s26)
   52bec:	41 18 00 f4 	bnz s1, 776 <vfprintf+0x5ac>
   52bf0:	5b 01 00 f6 	b 1388 <vfprintf+0x814>
   52bf4:	3e 83 01 88 	store_32 s25, 96(sp)
   52bf8:	60 03 fd c0 	move s27, s26
   52bfc:	1e a0 02 a8 	load_32 s0, 168(sp)
   52c00:	00 0c 00 05 	add_i s0, s0, 3
   52c04:	00 f0 ff 01 	and s0, s0, -4
   52c08:	20 10 00 05 	add_i s1, s0, 4
   52c0c:	3e a0 02 88 	store_32 s1, 168(sp)
   52c10:	3e 33 01 a8 	load_32 s25, 76(sp)
   52c14:	40 03 00 a8 	load_32 s26, (s0)
   52c18:	39 00 00 10 	cmpeq_i s1, s25, 0
   52c1c:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x2dc>
   52c20:	03 00 00 f6 	b 12 <vfprintf+0x2e4>
   52c24:	1f fc 7f 4f 	movehi s0, 262143
   52c28:	20 ff 7f 00 	or s25, s0, 8191
   52c2c:	00 03 00 0f 	move s24, 0
   52c30:	19 04 00 14 	cmplt_i s0, s25, 1
   52c34:	40 01 00 f4 	bnz s0, 40 <vfprintf+0x314>
   52c38:	1a 00 00 a2 	load_s8 s0, (s26)
   52c3c:	00 01 00 f2 	bz s0, 32 <vfprintf+0x314>
   52c40:	3e 60 01 a8 	load_32 s1, 88(sp)
   52c44:	5a 07 00 05 	add_i s26, s26, 1
   52c48:	a6 fc ff f9 	call -3432 <fputc>
   52c4c:	18 07 00 05 	add_i s24, s24, 1
   52c50:	7e 50 01 a8 	load_32 s3, 84(sp)
   52c54:	18 80 4c c1 	cmplt_i s0, s24, s25
   52c58:	00 ff ff f5 	bnz s0, -32 <vfprintf+0x2f0>
   52c5c:	5e 83 01 a8 	load_32 s26, 96(sp)
   52c60:	1a 80 4c c1 	cmplt_i s0, s26, s25
   52c64:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x324>
   52c68:	40 83 fc c0 	move s26, s25
   52c6c:	18 00 3d c1 	cmpge_i s0, s24, s26
   52c70:	a0 13 00 f4 	bnz s0, 628 <vfprintf+0x59c>
   52c74:	3e 63 01 a8 	load_32 s25, 88(sp)
   52c78:	00 80 00 0f 	move s0, 32
   52c7c:	20 80 fc c0 	move s1, s25
   52c80:	98 fc ff f9 	call -3488 <fputc>
   52c84:	18 07 00 05 	add_i s24, s24, 1
   52c88:	18 00 4d c1 	cmplt_i s0, s24, s26
   52c8c:	60 ff ff f5 	bnz s0, -20 <vfprintf+0x330>
   52c90:	40 83 fd c0 	move s26, s27
   52c94:	60 83 fc c0 	move s27, s25
   52c98:	1e 03 01 a8 	load_32 s24, 64(sp)
   52c9c:	8b 00 00 f6 	b 556 <vfprintf+0x580>
   52ca0:	20 04 00 0f 	move s1, 1
   52ca4:	40 80 6c c0 	sub_i s2, s0, s25
   52ca8:	00 03 6c c0 	sub_i s24, s0, s24
   52cac:	00 b4 00 0f 	move s0, 45
   52cb0:	22 83 60 c0 	sub_i s25, s2, s1
   52cb4:	3e 60 01 a8 	load_32 s1, 88(sp)
   52cb8:	8a fc ff f9 	call -3544 <fputc>
   52cbc:	00 00 fc c0 	move s0, s24
   52cc0:	20 80 fc c0 	move s1, s25
   52cc4:	40 80 fd c0 	move s2, s27
   52cc8:	7e 90 01 a8 	load_32 s3, 100(sp)
   52ccc:	51 0a 00 f8 	call 10564 <__umoddi3>
   52cd0:	21 00 00 4f 	movehi s1, 1
   52cd4:	5e 90 01 a8 	load_32 s2, 100(sp)
   52cd8:	21 44 68 00 	or s1, s1, 6673
   52cdc:	3e 70 01 88 	store_32 s1, 92(sp)
   52ce0:	01 00 50 c0 	add_i s0, s1, s0
   52ce4:	22 80 0c c1 	cmpeq_i s1, s2, s25
   52ce8:	00 00 00 a0 	load_u8 s0, (s0)
   52cec:	1e 9c 02 82 	store_8 s0, 167(sp)
   52cf0:	c1 00 00 f4 	bnz s1, 24 <vfprintf+0x3c0>
   52cf4:	02 80 6c c1 	cmpgt_u s0, s2, s25
   52cf8:	5e e3 00 88 	store_32 s26, 56(sp)
   52cfc:	40 ff 00 0f 	move s26, 63
   52d00:	20 04 00 f4 	bnz s0, 132 <vfprintf+0x43c>
   52d04:	05 00 00 f6 	b 20 <vfprintf+0x3d0>
   52d08:	1b 00 6c c1 	cmpgt_u s0, s27, s24
   52d0c:	5e e3 00 88 	store_32 s26, 56(sp)
   52d10:	40 ff 00 0f 	move s26, 63
   52d14:	80 03 00 f4 	bnz s0, 112 <vfprintf+0x43c>
   52d18:	00 00 fc c0 	move s0, s24
   52d1c:	20 80 fc c0 	move s1, s25
   52d20:	40 80 fd c0 	move s2, s27
   52d24:	7e 90 01 a8 	load_32 s3, 100(sp)
   52d28:	88 07 00 f8 	call 7712 <__udivdi3>
   52d2c:	00 03 f0 c0 	move s24, s0
   52d30:	20 83 f0 c0 	move s25, s1
   52d34:	40 80 fd c0 	move s2, s27
   52d38:	7e 90 01 a8 	load_32 s3, 100(sp)
   52d3c:	5a ff ff 05 	add_i s26, s26, -1
   52d40:	34 0a 00 f8 	call 10448 <__umoddi3>
   52d44:	7e 90 01 a8 	load_32 s3, 100(sp)
   52d48:	3e a0 01 05 	add_i s1, sp, 104
   52d4c:	5e 70 01 a8 	load_32 s2, 92(sp)
   52d50:	21 00 5d c0 	add_i s1, s1, s26
   52d54:	02 00 50 c0 	add_i s0, s2, s0
   52d58:	43 80 0c c1 	cmpeq_i s2, s3, s25
   52d5c:	00 00 00 a0 	load_u8 s0, (s0)
   52d60:	01 00 00 82 	store_8 s0, (s1)
   52d64:	a2 00 00 f4 	bnz s2, 20 <vfprintf+0x430>
   52d68:	03 80 6c c1 	cmpgt_u s0, s3, s25
   52d6c:	c0 00 00 f4 	bnz s0, 24 <vfprintf+0x43c>
   52d70:	5a fd ff f5 	bnz s26, -88 <vfprintf+0x3d0>
   52d74:	04 00 00 f6 	b 16 <vfprintf+0x43c>
   52d78:	1b 00 6c c1 	cmpgt_u s0, s27, s24
   52d7c:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x43c>
   52d80:	fc ff ff f7 	b -16 <vfprintf+0x428>
   52d84:	1e 10 01 a8 	load_32 s0, 68(sp)
   52d88:	00 20 00 01 	and s0, s0, 8
   52d8c:	00 00 00 10 	cmpeq_i s0, s0, 0
   52d90:	60 00 00 f4 	bnz s0, 12 <vfprintf+0x454>
   52d94:	00 c0 00 0f 	move s0, 48
   52d98:	02 00 00 f6 	b 8 <vfprintf+0x458>
   52d9c:	00 80 00 0f 	move s0, 32
   52da0:	40 00 01 0f 	move s2, 64
   52da4:	7e 63 01 a8 	load_32 s27, 88(sp)
   52da8:	22 03 6d c0 	sub_i s25, s2, s26
   52dac:	5e 80 01 a8 	load_32 s2, 96(sp)
   52db0:	59 00 31 c1 	cmpge_i s2, s25, s2
   52db4:	82 01 00 f4 	bnz s2, 48 <vfprintf+0x49c>
   52db8:	00 83 fd c0 	move s24, s27
   52dbc:	20 00 fc c0 	move s1, s24
   52dc0:	60 03 f0 c0 	move s27, s0
   52dc4:	47 fc ff f9 	call -3812 <fputc>
   52dc8:	00 80 fd c0 	move s0, s27
   52dcc:	60 03 fc c0 	move s27, s24
   52dd0:	5e 80 01 a8 	load_32 s2, 96(sp)
   52dd4:	39 07 00 05 	add_i s25, s25, 1
   52dd8:	59 00 41 c1 	cmplt_i s2, s25, s2
   52ddc:	e2 fe ff f5 	bnz s2, -36 <vfprintf+0x470>
   52de0:	3e 83 01 a8 	load_32 s25, 96(sp)
   52de4:	1e 33 01 a8 	load_32 s24, 76(sp)
   52de8:	19 00 3c c1 	cmpge_i s0, s25, s24
   52dec:	e0 00 00 f4 	bnz s0, 28 <vfprintf+0x4c0>
   52df0:	00 c0 00 0f 	move s0, 48
   52df4:	20 80 fd c0 	move s1, s27
   52df8:	3a fc ff f9 	call -3864 <fputc>
   52dfc:	39 07 00 05 	add_i s25, s25, 1
   52e00:	19 00 4c c1 	cmplt_i s0, s25, s24
   52e04:	60 ff ff f5 	bnz s0, -20 <vfprintf+0x4a8>
   52e08:	1e 03 01 a8 	load_32 s24, 64(sp)
   52e0c:	1a fc 00 12 	cmpgt_i s0, s26, 63
   52e10:	20 01 00 f4 	bnz s0, 36 <vfprintf+0x4ec>
   52e14:	1e a0 01 05 	add_i s0, sp, 104
   52e18:	00 00 5d c0 	add_i s0, s0, s26
   52e1c:	5a 07 00 05 	add_i s26, s26, 1
   52e20:	00 00 00 a2 	load_s8 s0, (s0)
   52e24:	20 80 fd c0 	move s1, s27
   52e28:	2e fc ff f9 	call -3912 <fputc>
   52e2c:	1a 00 01 18 	cmplt_u s0, s26, 64
   52e30:	20 ff ff f5 	bnz s0, -28 <vfprintf+0x4cc>
   52e34:	5e e3 00 a8 	load_32 s26, 56(sp)
   52e38:	24 00 00 f6 	b 144 <vfprintf+0x580>
   52e3c:	40 83 f0 c0 	move s26, s1
   52e40:	00 c0 00 0f 	move s0, 48
   52e44:	20 80 fd c0 	move s1, s27
   52e48:	26 fc ff f9 	call -3944 <fputc>
   52e4c:	00 00 fd c0 	move s0, s26
   52e50:	40 03 a0 c2 	itof s26, s0
   52e54:	00 b8 00 0f 	move s0, 46
   52e58:	20 80 fd c0 	move s1, s27
   52e5c:	21 fc ff f9 	call -3964 <fputc>
   52e60:	7e 33 01 a8 	load_32 s27, 76(sp)
   52e64:	1b 00 00 12 	cmpgt_i s0, s27, 0
   52e68:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x528>
   52e6c:	60 1f 00 0f 	move s27, 7
   52e70:	1e 70 01 a8 	load_32 s0, 92(sp)
   52e74:	40 03 1d c2 	sub_f s26, s0, s26
   52e78:	03 00 00 4f 	movehi s0, 3
   52e7c:	00 60 21 00 	or s0, s0, 2136
   52e80:	00 00 00 a8 	load_32 s0, (s0)
   52e84:	1a 00 20 c2 	mul_f s0, s26, s0
   52e88:	20 00 b0 c1 	ftoi s1, s0
   52e8c:	40 80 a0 c2 	itof s2, s1
   52e90:	40 03 11 c2 	sub_f s26, s0, s2
   52e94:	01 c0 00 05 	add_i s0, s1, 48
   52e98:	3e 60 01 a8 	load_32 s1, 88(sp)
   52e9c:	11 fc ff f9 	call -4028 <fputc>
   52ea0:	1e 90 01 a8 	load_32 s0, 100(sp)
   52ea4:	00 00 00 a8 	load_32 s0, (s0)
   52ea8:	1a 00 c0 c2 	cmpgt_f s0, s26, s0
   52eac:	00 80 1c c1 	cmpne_i s0, s0, s25
   52eb0:	80 00 00 f4 	bnz s0, 16 <vfprintf+0x578>
   52eb4:	1b 00 00 12 	cmpgt_i s0, s27, 0
   52eb8:	7b ff ff 05 	add_i s27, s27, -1
   52ebc:	e0 fd ff f5 	bnz s0, -68 <vfprintf+0x530>
   52ec0:	5e e3 00 a8 	load_32 s26, 56(sp)
   52ec4:	7e 63 01 a8 	load_32 s27, 88(sp)
   52ec8:	7e 50 01 a8 	load_32 s3, 84(sp)
   52ecc:	3e 83 01 a8 	load_32 s25, 96(sp)
   52ed0:	5a 07 00 05 	add_i s26, s26, 1
   52ed4:	1e 40 01 a8 	load_32 s0, 80(sp)
   52ed8:	3a 00 00 a0 	load_u8 s1, (s26)
   52edc:	c1 00 00 f4 	bnz s1, 24 <vfprintf+0x5ac>
   52ee0:	9f 00 00 f6 	b 636 <vfprintf+0x814>
   52ee4:	40 83 fd c0 	move s26, s27
   52ee8:	7e 63 01 a8 	load_32 s27, 88(sp)
   52eec:	1e 03 01 a8 	load_32 s24, 64(sp)
   52ef0:	f7 ff ff f7 	b -36 <vfprintf+0x584>
   52ef4:	40 14 00 16 	cmpgt_u s2, s0, 5
   52ef8:	e2 12 00 f4 	bnz s2, 604 <vfprintf+0x80c>
   52efc:	00 08 00 0b 	shl s0, s0, 2
   52f00:	00 00 5c c0 	add_i s0, s0, s24
   52f04:	00 00 00 a8 	load_32 s0, (s0)
   52f08:	00 00 00 f0 	b s0
   52f0c:	01 fc 03 01 	and s0, s1, 255
   52f10:	5a 07 00 05 	add_i s26, s26, 1
   52f14:	00 94 00 10 	cmpeq_i s0, s0, 37
   52f18:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x5d8>
   52f1c:	6a 00 00 f6 	b 424 <vfprintf+0x77c>
   52f20:	1e c0 00 a8 	load_32 s0, 48(sp)
   52f24:	3e 40 01 a8 	load_32 s1, 80(sp)
   52f28:	3e 30 01 88 	store_32 s1, 76(sp)
   52f2c:	20 83 f0 c0 	move s25, s1
   52f30:	3e 20 01 88 	store_32 s1, 72(sp)
   52f34:	3e 10 01 88 	store_32 s1, 68(sp)
   52f38:	3a 00 00 a0 	load_u8 s1, (s26)
   52f3c:	c1 fd ff f5 	bnz s1, -72 <vfprintf+0x5ac>
   52f40:	87 00 00 f6 	b 540 <vfprintf+0x814>
   52f44:	01 fc 03 01 	and s0, s1, 255
   52f48:	00 94 00 11 	cmpne_i s0, s0, 37
   52f4c:	c0 0c 00 f4 	bnz s0, 408 <vfprintf+0x79c>
   52f50:	5a 07 00 05 	add_i s26, s26, 1
   52f54:	1e a0 00 a8 	load_32 s0, 40(sp)
   52f58:	5c 00 00 f6 	b 368 <vfprintf+0x780>
   52f5c:	00 80 d0 c1 	sext_8 s0, s1
   52f60:	00 40 ff 05 	add_i s0, s0, -48
   52f64:	40 24 00 16 	cmpgt_u s2, s0, 9
   52f68:	62 0e 00 f4 	bnz s2, 460 <vfprintf+0x7ec>
   52f6c:	39 28 00 07 	mull_i s1, s25, 10
   52f70:	20 83 50 c0 	add_i s25, s0, s1
   52f74:	1e b0 00 a8 	load_32 s0, 44(sp)
   52f78:	5a 07 00 05 	add_i s26, s26, 1
   52f7c:	3a 00 00 a0 	load_u8 s1, (s26)
   52f80:	a1 fb ff f5 	bnz s1, -140 <vfprintf+0x5ac>
   52f84:	76 00 00 f6 	b 472 <vfprintf+0x814>
   52f88:	00 80 d0 c1 	sext_8 s0, s1
   52f8c:	00 40 ff 05 	add_i s0, s0, -48
   52f90:	20 24 00 16 	cmpgt_u s1, s0, 9
   52f94:	61 d2 ff f5 	bnz s1, -1460 <vfprintf+0x98>
   52f98:	3e 30 01 a8 	load_32 s1, 76(sp)
   52f9c:	5a 07 00 05 	add_i s26, s26, 1
   52fa0:	21 28 00 07 	mull_i s1, s1, 10
   52fa4:	00 80 50 c0 	add_i s0, s0, s1
   52fa8:	1e 30 01 88 	store_32 s0, 76(sp)
   52fac:	00 0c 00 0f 	move s0, 3
   52fb0:	3a 00 00 a0 	load_u8 s1, (s26)
   52fb4:	01 fa ff f5 	bnz s1, -192 <vfprintf+0x5ac>
   52fb8:	69 00 00 f6 	b 420 <vfprintf+0x814>
   52fbc:	00 00 00 4f 	movehi s0, 0
   52fc0:	20 80 d0 c1 	sext_8 s1, s1
   52fc4:	40 20 00 0f 	move s2, 8
   52fc8:	00 87 25 00 	or s24, s0, 2401
   52fcc:	00 00 fc c0 	move s0, s24
   52fd0:	32 fe ff f9 	call -1848 <memchr>
   52fd4:	e0 d0 ff f3 	bz s0, -1508 <vfprintf+0xa8>
   52fd8:	20 04 00 0f 	move s1, 1
   52fdc:	00 00 6c c0 	sub_i s0, s0, s24
   52fe0:	5a 07 00 05 	add_i s26, s26, 1
   52fe4:	01 00 b0 c0 	shl s0, s1, s0
   52fe8:	3e 20 01 a8 	load_32 s1, 72(sp)
   52fec:	20 80 00 c0 	or s1, s0, s1
   52ff0:	3e 20 01 88 	store_32 s1, 72(sp)
   52ff4:	1e f0 00 a8 	load_32 s0, 60(sp)
   52ff8:	1e 03 01 a8 	load_32 s24, 64(sp)
   52ffc:	7e 50 01 a8 	load_32 s3, 84(sp)
   53000:	3a 00 00 a0 	load_u8 s1, (s26)
   53004:	81 f7 ff f5 	bnz s1, -272 <vfprintf+0x5ac>
   53008:	55 00 00 f6 	b 340 <vfprintf+0x814>
   5300c:	00 80 d0 c1 	sext_8 s0, s1
   53010:	00 a0 fe 05 	add_i s0, s0, -88
   53014:	40 80 00 16 	cmpgt_u s2, s0, 32
   53018:	c2 f5 ff f5 	bnz s2, -328 <vfprintf+0x588>
   5301c:	43 00 00 4f 	movehi s2, 3
   53020:	00 08 00 0b 	shl s0, s0, 2
   53024:	42 00 65 00 	or s2, s2, 6464
   53028:	00 00 51 c0 	add_i s0, s0, s2
   5302c:	00 00 00 a8 	load_32 s0, (s0)
   53030:	00 00 00 f0 	b s0
   53034:	01 fc 03 01 	and s0, s1, 255
   53038:	60 00 00 0f 	move s3, 0
   5303c:	20 a0 fe 05 	add_i s1, s0, -88
   53040:	41 80 00 16 	cmpgt_u s2, s1, 32
   53044:	a2 d6 ff f5 	bnz s2, -1324 <vfprintf+0x1d0>
   53048:	43 00 00 4f 	movehi s2, 3
   5304c:	21 08 00 0b 	shl s1, s1, 2
   53050:	60 23 00 0f 	move s27, 8
   53054:	42 10 67 00 	or s2, s2, 6596
   53058:	21 00 51 c0 	add_i s1, s1, s2
   5305c:	21 00 00 a8 	load_32 s1, (s1)
   53060:	01 00 00 f0 	b s1
   53064:	60 43 00 0f 	move s27, 16
   53068:	3e 20 01 a8 	load_32 s1, 72(sp)
   5306c:	3e 83 01 88 	store_32 s25, 96(sp)
   53070:	21 40 00 01 	and s1, s1, 16
   53074:	41 00 00 f2 	bz s1, 8 <vfprintf+0x734>
   53078:	ad fe ff f7 	b -1356 <vfprintf+0x1e4>
   5307c:	20 a4 01 10 	cmpeq_i s1, s0, 105
   53080:	61 00 00 f4 	bnz s1, 12 <vfprintf+0x744>
   53084:	00 90 01 11 	cmpne_i s0, s0, 100
   53088:	c0 d7 ff f5 	bnz s0, -1288 <vfprintf+0x238>
   5308c:	1e a0 02 a8 	load_32 s0, 168(sp)
   53090:	00 0c 00 05 	add_i s0, s0, 3
   53094:	00 f0 ff 01 	and s0, s0, -4
   53098:	20 10 00 05 	add_i s1, s0, 4
   5309c:	3e a0 02 88 	store_32 s1, 168(sp)
   530a0:	00 03 00 a8 	load_32 s24, (s0)
   530a4:	38 7f 00 09 	ashr s25, s24, 31
   530a8:	1a 00 00 a0 	load_u8 s0, (s26)
   530ac:	7e 90 01 88 	store_32 s3, 100(sp)
   530b0:	20 a4 01 10 	cmpeq_i s1, s0, 105
   530b4:	81 d5 ff f5 	bnz s1, -1360 <vfprintf+0x21c>
   530b8:	00 90 01 11 	cmpne_i s0, s0, 100
   530bc:	00 e0 ff f5 	bnz s0, -1024 <vfprintf+0x374>
   530c0:	a9 fe ff f7 	b -1372 <vfprintf+0x21c>
   530c4:	00 80 d0 c1 	sext_8 s0, s1
   530c8:	20 80 fd c0 	move s1, s27
   530cc:	85 fb ff f9 	call -4588 <fputc>
   530d0:	7e 50 01 a8 	load_32 s3, 84(sp)
   530d4:	1e 40 01 a8 	load_32 s0, 80(sp)
   530d8:	3a 00 00 a0 	load_u8 s1, (s26)
   530dc:	c1 f0 ff f5 	bnz s1, -488 <vfprintf+0x5ac>
   530e0:	1f 00 00 f6 	b 124 <vfprintf+0x814>
   530e4:	3e 83 01 88 	store_32 s25, 96(sp)
   530e8:	00 80 f1 c0 	move s0, s3
   530ec:	5e d0 00 a8 	load_32 s2, 52(sp)
   530f0:	20 80 d0 c1 	sext_8 s1, s1
   530f4:	20 83 f1 c0 	move s25, s3
   530f8:	e8 fd ff f9 	call -2144 <memchr>
   530fc:	60 c8 ff f3 	bz s0, -1780 <vfprintf+0xc0>
   53100:	3e c0 00 a8 	load_32 s1, 48(sp)
   53104:	00 80 6c c0 	sub_i s0, s0, s25
   53108:	5e 10 01 a8 	load_32 s2, 68(sp)
   5310c:	5a 07 00 05 	add_i s26, s26, 1
   53110:	01 00 b0 c0 	shl s0, s1, s0
   53114:	40 00 01 c0 	or s2, s0, s2
   53118:	5e 10 01 88 	store_32 s2, 68(sp)
   5311c:	00 80 f0 c0 	move s0, s1
   53120:	60 80 fc c0 	move s3, s25
   53124:	3e 83 01 a8 	load_32 s25, 96(sp)
   53128:	3a 00 00 a0 	load_u8 s1, (s26)
   5312c:	41 ee ff f5 	bnz s1, -568 <vfprintf+0x5ac>
   53130:	0b 00 00 f6 	b 44 <vfprintf+0x814>
   53134:	01 fc 03 01 	and s0, s1, 255
   53138:	20 b8 00 10 	cmpeq_i s1, s0, 46
   5313c:	1e 90 00 a8 	load_32 s0, 36(sp)
   53140:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x800>
   53144:	1e f0 00 a8 	load_32 s0, 60(sp)
   53148:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x808>
   5314c:	02 00 00 f6 	b 8 <vfprintf+0x80c>
   53150:	5a 07 00 05 	add_i s26, s26, 1
   53154:	3a 00 00 a0 	load_u8 s1, (s26)
   53158:	e1 ec ff f5 	bnz s1, -612 <vfprintf+0x5ac>
   5315c:	fe b3 02 a8 	load_32 ra, 172(sp)
   53160:	00 00 00 0f 	move s0, 0
   53164:	7e c3 02 a8 	load_32 s27, 176(sp)
   53168:	5e d3 02 a8 	load_32 s26, 180(sp)
   5316c:	3e e3 02 a8 	load_32 s25, 184(sp)
   53170:	1e f3 02 a8 	load_32 s24, 188(sp)
   53174:	de 03 03 05 	add_i sp, sp, 192
   53178:	1f 00 00 f0 	ret

000000000005317c poll_keyboard:
   5317c:	78 fc ff 4f 	movehi s3, 524280
   53180:	00 fc ff 0f 	move s0, -1
   53184:	83 00 02 00 	or s4, s3, 128
   53188:	24 00 00 a8 	load_32 s1, (s4)
   5318c:	21 02 00 f2 	bz s1, 68 <poll_keyboard+0x54>
   53190:	20 0c 00 4f 	movehi s1, 96
   53194:	40 0c 00 4f 	movehi s2, 96
   53198:	c3 10 02 00 	or s6, s3, 132
   5319c:	a1 60 5e 00 	or s5, s1, 6040
   531a0:	e0 04 00 0f 	move s7, 1
   531a4:	02 71 5e 00 	or s8, s2, 6044
   531a8:	66 00 00 a8 	load_32 s3, (s6)
   531ac:	20 81 f2 c0 	move s9, s5
   531b0:	43 81 03 10 	cmpeq_i s10, s3, 224
   531b4:	8a 00 00 f4 	bnz s10, 16 <poll_keyboard+0x48>
   531b8:	23 c1 03 11 	cmpne_i s9, s3, 240
   531bc:	c9 00 00 f4 	bnz s9, 24 <poll_keyboard+0x58>
   531c0:	20 01 f4 c0 	move s9, s8
   531c4:	e9 00 00 82 	store_8 s7, (s9)
   531c8:	64 00 00 a8 	load_32 s3, (s4)
   531cc:	e3 fe ff f5 	bnz s3, -36 <poll_keyboard+0x2c>
   531d0:	1f 00 00 f0 	ret
   531d4:	03 3c 02 16 	cmpgt_u s0, s3, 143
   531d8:	20 03 00 f4 	bnz s0, 100 <poll_keyboard+0xc0>
   531dc:	01 60 5e 00 	or s0, s1, 6040
   531e0:	00 00 00 a0 	load_u8 s0, (s0)
   531e4:	40 00 00 f4 	bnz s0, 8 <poll_keyboard+0x70>
   531e8:	21 00 00 f6 	b 132 <poll_keyboard+0xf0>
   531ec:	03 00 00 4f 	movehi s0, 3
   531f0:	00 20 69 00 	or s0, s0, 6728
   531f4:	00 80 51 c0 	add_i s0, s0, s3
   531f8:	00 00 00 a0 	load_u8 s0, (s0)
   531fc:	60 44 02 10 	cmpeq_i s3, s0, 145
   53200:	43 06 00 f4 	bnz s3, 200 <poll_keyboard+0x14c>
   53204:	60 40 02 11 	cmpne_i s3, s0, 144
   53208:	c3 01 00 f4 	bnz s3, 56 <poll_keyboard+0xc4>
   5320c:	02 70 5e 00 	or s0, s2, 6044
   53210:	60 0c 00 4f 	movehi s3, 96
   53214:	00 00 00 a0 	load_u8 s0, (s0)
   53218:	63 90 5e 00 	or s3, s3, 6052
   5321c:	00 04 00 03 	xor s0, s0, 1
   53220:	03 00 00 88 	store_32 s0, (s3)
   53224:	00 40 02 0f 	move s0, 144
   53228:	42 70 5e 00 	or s2, s2, 6044
   5322c:	62 00 00 a0 	load_u8 s3, (s2)
   53230:	63 00 00 11 	cmpne_i s3, s3, 0
   53234:	23 01 00 f4 	bnz s3, 36 <poll_keyboard+0xdc>
   53238:	06 00 00 f6 	b 24 <poll_keyboard+0xd4>
   5323c:	00 00 00 0f 	move s0, 0
   53240:	42 70 5e 00 	or s2, s2, 6044
   53244:	62 00 00 a0 	load_u8 s3, (s2)
   53248:	63 00 00 11 	cmpne_i s3, s3, 0
   5324c:	63 00 00 f4 	bnz s3, 12 <poll_keyboard+0xdc>
   53250:	60 08 00 4f 	movehi s3, 64
   53254:	00 80 01 c0 	or s0, s0, s3
   53258:	21 60 5e 00 	or s1, s1, 6040
   5325c:	60 00 00 0f 	move s3, 0
   53260:	61 00 00 82 	store_8 s3, (s1)
   53264:	62 00 00 82 	store_8 s3, (s2)
   53268:	1f 00 00 f0 	ret
   5326c:	00 0c 00 4f 	movehi s0, 96
   53270:	80 0c 00 4f 	movehi s4, 96
   53274:	00 80 5e 00 	or s0, s0, 6048
   53278:	84 90 5e 00 	or s4, s4, 6052
   5327c:	00 00 00 a8 	load_32 s0, (s0)
   53280:	84 00 00 a8 	load_32 s4, (s4)
   53284:	04 00 00 c0 	or s0, s4, s0
   53288:	00 00 00 10 	cmpeq_i s0, s0, 0
   5328c:	00 01 00 f4 	bnz s0, 32 <poll_keyboard+0x130>
   53290:	03 00 00 4f 	movehi s0, 3
   53294:	00 60 6b 00 	or s0, s0, 6872
   53298:	00 80 51 c0 	add_i s0, s0, s3
   5329c:	00 00 00 a0 	load_u8 s0, (s0)
   532a0:	60 44 02 10 	cmpeq_i s3, s0, 145
   532a4:	23 01 00 f4 	bnz s3, 36 <poll_keyboard+0x14c>
   532a8:	d7 ff ff f7 	b -164 <poll_keyboard+0x88>
   532ac:	03 00 00 4f 	movehi s0, 3
   532b0:	00 a0 6d 00 	or s0, s0, 7016
   532b4:	00 80 51 c0 	add_i s0, s0, s3
   532b8:	00 00 00 a0 	load_u8 s0, (s0)
   532bc:	60 44 02 10 	cmpeq_i s3, s0, 145
   532c0:	43 00 00 f4 	bnz s3, 8 <poll_keyboard+0x14c>
   532c4:	d0 ff ff f7 	b -192 <poll_keyboard+0x88>
   532c8:	02 70 5e 00 	or s0, s2, 6044
   532cc:	60 0c 00 4f 	movehi s3, 96
   532d0:	00 00 00 a0 	load_u8 s0, (s0)
   532d4:	63 80 5e 00 	or s3, s3, 6048
   532d8:	00 04 00 03 	xor s0, s0, 1
   532dc:	03 00 00 88 	store_32 s0, (s3)
   532e0:	00 44 02 0f 	move s0, 145
   532e4:	42 70 5e 00 	or s2, s2, 6044
   532e8:	62 00 00 a0 	load_u8 s3, (s2)
   532ec:	63 00 00 11 	cmpne_i s3, s3, 0
   532f0:	43 fb ff f5 	bnz s3, -152 <poll_keyboard+0xdc>
   532f4:	d7 ff ff f7 	b -164 <poll_keyboard+0xd4>

00000000000532f8 sbrk:
   532f8:	de 03 ff 05 	add_i sp, sp, -64
   532fc:	1e f3 00 88 	store_32 s24, 60(sp)
   53300:	fe e3 00 88 	store_32 ra, 56(sp)
   53304:	3a 04 00 4f 	movehi s1, 58
   53308:	40 00 f0 c0 	move s2, s0
   5330c:	01 b0 16 00 	or s0, s1, 1452
   53310:	20 00 00 aa 	load_sync s1, (s0)
   53314:	61 00 51 c0 	add_i s3, s1, s2
   53318:	00 83 f0 c0 	move s24, s1
   5331c:	60 00 00 8a 	store_sync s3, (s0)  
   53320:	83 ff ff f3 	bz s3, -16 <sbrk+0x18>
   53324:	02 04 00 14 	cmplt_i s0, s2, 1
   53328:	80 00 00 f4 	bnz s0, 16 <sbrk+0x40>
   5332c:	20 00 00 0f 	move s1, 0
   53330:	00 00 fc c0 	move s0, s24
   53334:	dc f9 ff f9 	call -6288 <memset>
   53338:	00 00 fc c0 	move s0, s24
   5333c:	fe e3 00 a8 	load_32 ra, 56(sp)
   53340:	1e f3 00 a8 	load_32 s24, 60(sp)
   53344:	de 03 01 05 	add_i sp, sp, 64
   53348:	1f 00 00 f0 	ret

000000000005334c __errno_ptr:
   5334c:	de 03 ff 05 	add_i sp, sp, -64
   53350:	fe f3 00 88 	store_32 ra, 60(sp)
   53354:	aa 02 00 f8 	call 2728 <get_current_thread_id>
   53358:	20 0c 00 4f 	movehi s1, 96
   5335c:	fe f3 00 a8 	load_32 ra, 60(sp)
   53360:	00 08 00 0b 	shl s0, s0, 2
   53364:	21 e0 06 00 	or s1, s1, 440
   53368:	01 00 50 c0 	add_i s0, s1, s0
   5336c:	de 03 01 05 	add_i sp, sp, 64
   53370:	1f 00 00 f0 	ret

0000000000053374 usleep:
   53374:	26 00 00 ac 	getcr s1, 6
   53378:	00 c8 00 07 	mull_i s0, s0, 50
   5337c:	01 00 50 c0 	add_i s0, s1, s0
   53380:	26 00 00 ac 	getcr s1, 6
   53384:	21 00 40 c1 	cmplt_i s1, s1, s0
   53388:	c1 ff ff f5 	bnz s1, -8 <usleep+0xc>
   5338c:	00 00 00 0f 	move s0, 0
   53390:	1f 00 00 f0 	ret

0000000000053394 exit:
   53394:	00 fc ff 0f 	move s0, -1
   53398:	14 00 00 8c 	setcr s0, 20
   5339c:	00 00 00 f6 	b 0 <exit+0x8>

00000000000533a0 _write_uart:
   533a0:	38 fc ff 4f 	movehi s1, 524280
   533a4:	41 00 01 00 	or s2, s1, 64
   533a8:	62 00 00 a8 	load_32 s3, (s2)
   533ac:	63 04 00 01 	and s3, s3, 1
   533b0:	c3 ff ff f3 	bz s3, -8 <_write_uart+0x8>
   533b4:	21 20 01 00 	or s1, s1, 72
   533b8:	01 00 00 88 	store_32 s0, (s1)
   533bc:	1f 00 00 f0 	ret

00000000000533c0 write_console:
   533c0:	41 04 00 14 	cmplt_i s2, s1, 1
   533c4:	c2 01 00 f4 	bnz s2, 56 <write_console+0x3c>
   533c8:	98 fc ff 4f 	movehi s4, 524280
   533cc:	40 00 00 0f 	move s2, 0
   533d0:	64 00 01 00 	or s3, s4, 64
   533d4:	84 20 01 00 	or s4, s4, 72
   533d8:	a0 00 51 c0 	add_i s5, s0, s2
   533dc:	a5 00 00 a2 	load_s8 s5, (s5)
   533e0:	c3 00 00 a8 	load_32 s6, (s3)
   533e4:	c6 04 00 01 	and s6, s6, 1
   533e8:	c6 ff ff f3 	bz s6, -8 <write_console+0x20>
   533ec:	42 04 00 05 	add_i s2, s2, 1
   533f0:	a4 00 00 88 	store_32 s5, (s4)
   533f4:	c2 80 40 c1 	cmplt_i s6, s2, s1
   533f8:	06 ff ff f5 	bnz s6, -32 <write_console+0x18>
   533fc:	00 00 00 0f 	move s0, 0
   53400:	1f 00 00 f0 	ret

0000000000053404 read_block:
   53404:	de 03 ff 05 	add_i sp, sp, -64
   53408:	1e f3 00 88 	store_32 s24, 60(sp)
   5340c:	fe e3 00 88 	store_32 ra, 56(sp)
   53410:	40 0c 00 4f 	movehi s2, 96
   53414:	42 a0 5e 00 	or s2, s2, 6056
   53418:	42 00 00 a0 	load_u8 s2, (s2)
   5341c:	42 04 00 11 	cmpne_i s2, s2, 1
   53420:	42 01 00 f4 	bnz s2, 40 <read_block+0x44>
   53424:	00 24 00 0b 	shl s0, s0, 9
   53428:	40 00 04 4f 	movehi s2, 8192
   5342c:	00 03 08 0f 	move s24, 512
   53430:	40 00 51 c0 	add_i s2, s0, s2
   53434:	00 80 f0 c0 	move s0, s1
   53438:	20 00 f1 c0 	move s1, s2
   5343c:	40 00 fc c0 	move s2, s24
   53440:	31 fa ff f9 	call -5948 <memcpy>
   53444:	03 00 00 f6 	b 12 <read_block+0x4c>
   53448:	93 03 00 f8 	call 3660 <read_sdmmc_device>
   5344c:	00 03 f0 c0 	move s24, s0
   53450:	00 00 fc c0 	move s0, s24
   53454:	fe e3 00 a8 	load_32 ra, 56(sp)
   53458:	1e f3 00 a8 	load_32 s24, 60(sp)
   5345c:	de 03 01 05 	add_i sp, sp, 64
   53460:	1f 00 00 f0 	ret

0000000000053464 open:
   53464:	de 03 f7 05 	add_i sp, sp, -576
   53468:	1e f3 08 88 	store_32 s24, 572(sp)
   5346c:	3e e3 08 88 	store_32 s25, 568(sp)
   53470:	5e d3 08 88 	store_32 s26, 564(sp)
   53474:	7e c3 08 88 	store_32 s27, 560(sp)
   53478:	fe b3 08 88 	store_32 ra, 556(sp)
   5347c:	20 0c 00 4f 	movehi s1, 96
   53480:	41 b0 5e 00 	or s2, s1, 6060
   53484:	22 00 00 a0 	load_u8 s1, (s2)
   53488:	1e a0 00 88 	store_32 s0, 40(sp)
   5348c:	a1 0c 00 f4 	bnz s1, 404 <open+0x1bc>
   53490:	5e 60 00 88 	store_32 s2, 24(sp)
   53494:	5e 02 00 f8 	call 2424 <init_sdmmc_device>
   53498:	00 fc ff 12 	cmpgt_i s0, s0, -1
   5349c:	40 00 00 f4 	bnz s0, 8 <open+0x40>
   534a0:	0d 00 00 f6 	b 52 <open+0x70>
   534a4:	00 0c 00 4f 	movehi s0, 96
   534a8:	00 a0 5e 00 	or s0, s0, 6056
   534ac:	00 00 00 a0 	load_u8 s0, (s0)
   534b0:	00 04 00 11 	cmpne_i s0, s0, 1
   534b4:	40 00 00 f4 	bnz s0, 8 <open+0x58>
   534b8:	0e 00 00 f6 	b 56 <open+0x8c>
   534bc:	00 00 00 0f 	move s0, 0
   534c0:	3e b0 00 05 	add_i s1, sp, 44
   534c4:	74 03 00 f8 	call 3536 <read_sdmmc_device>
   534c8:	00 04 00 14 	cmplt_i s0, s0, 1
   534cc:	c0 03 00 f4 	bnz s0, 120 <open+0xe0>
   534d0:	0c 00 00 f6 	b 48 <open+0x9c>
   534d4:	00 00 00 4f 	movehi s0, 0
   534d8:	00 64 5a 00 	or s0, s0, 5785
   534dc:	1c fb ff f9 	call -5008 <puts>
   534e0:	00 0c 00 4f 	movehi s0, 96
   534e4:	20 04 00 0f 	move s1, 1
   534e8:	00 a0 5e 00 	or s0, s0, 6056
   534ec:	20 00 00 82 	store_8 s1, (s0)
   534f0:	1e b0 00 05 	add_i s0, sp, 44
   534f4:	20 00 04 4f 	movehi s1, 8192
   534f8:	40 00 08 0f 	move s2, 512
   534fc:	02 fa ff f9 	call -6136 <memcpy>
   53500:	1e b4 00 a0 	load_u8 s0, 45(sp)
   53504:	3e b0 00 a0 	load_u8 s1, 44(sp)
   53508:	5e bc 00 a0 	load_u8 s2, 47(sp)
   5350c:	7e b8 00 a0 	load_u8 s3, 46(sp)
   53510:	00 20 00 0b 	shl s0, s0, 8
   53514:	42 20 00 0b 	shl s2, s2, 8
   53518:	00 80 00 c0 	or s0, s0, s1
   5351c:	33 64 73 4f 	movehi s1, 236339
   53520:	42 80 01 c0 	or s2, s2, s3
   53524:	21 cc 41 00 	or s1, s1, 4211
   53528:	42 40 00 0b 	shl s2, s2, 16
   5352c:	02 00 00 c0 	or s0, s2, s0
   53530:	00 80 00 c1 	cmpeq_i s0, s0, s1
   53534:	e0 00 00 f4 	bnz s0, 28 <open+0xec>
   53538:	02 00 00 4f 	movehi s0, 2
   5353c:	00 58 5a 00 	or s0, s0, 5782
   53540:	03 fb ff f9 	call -5108 <puts>
   53544:	82 ff ff f9 	call -504 <__errno_ptr>
   53548:	20 14 00 0f 	move s1, 5
   5354c:	d9 00 00 f6 	b 868 <open+0x44c>
   53550:	1e c0 00 a8 	load_32 s0, 48(sp)
   53554:	00 a0 00 07 	mull_i s0, s0, 40
   53558:	00 1f 08 05 	add_i s24, s0, 519
   5355c:	18 00 f8 01 	and s0, s24, -512
   53560:	38 e7 ff f9 	call -25376 <malloc>
   53564:	20 0c 00 4f 	movehi s1, 96
   53568:	60 03 f0 c0 	move s27, s0
   5356c:	40 00 08 0f 	move s2, 512
   53570:	21 c0 66 00 	or s1, s1, 6576
   53574:	3e 90 00 88 	store_32 s1, 36(sp)
   53578:	61 03 00 88 	store_32 s27, (s1)
   5357c:	3e b0 00 05 	add_i s1, sp, 44
   53580:	e1 f9 ff f9 	call -6268 <memcpy>
   53584:	18 00 10 18 	cmplt_u s0, s24, 1024
   53588:	60 04 00 f4 	bnz s0, 140 <open+0x1b0>
   5358c:	00 0c 00 4f 	movehi s0, 96
   53590:	18 27 00 0a 	shr s24, s24, 9
   53594:	20 07 00 0f 	move s25, 1
   53598:	40 a3 5e 00 	or s26, s0, 6056
   5359c:	00 00 04 4f 	movehi s0, 8192
   535a0:	1e 80 00 88 	store_32 s0, 32(sp)
   535a4:	00 00 08 0f 	move s0, 512
   535a8:	1e 70 00 88 	store_32 s0, 28(sp)
   535ac:	03 00 00 f6 	b 12 <open+0x154>
   535b0:	1e 90 00 a8 	load_32 s0, 36(sp)
   535b4:	60 03 00 a8 	load_32 s27, (s0)
   535b8:	3a 00 00 a0 	load_u8 s1, (s26)
   535bc:	19 24 00 0b 	shl s0, s25, 9
   535c0:	5b 00 50 c0 	add_i s2, s27, s0
   535c4:	21 04 00 11 	cmpne_i s1, s1, 1
   535c8:	41 01 00 f4 	bnz s1, 40 <open+0x18c>
   535cc:	3e 80 00 a8 	load_32 s1, 32(sp)
   535d0:	20 80 50 c0 	add_i s1, s0, s1
   535d4:	00 00 f1 c0 	move s0, s2
   535d8:	5e 70 00 a8 	load_32 s2, 28(sp)
   535dc:	ca f9 ff f9 	call -6360 <memcpy>
   535e0:	39 07 00 05 	add_i s25, s25, 1
   535e4:	19 00 7c c1 	cmpge_u s0, s25, s24
   535e8:	60 01 00 f4 	bnz s0, 44 <open+0x1b0>
   535ec:	f1 ff ff f7 	b -60 <open+0x14c>
   535f0:	00 80 fc c0 	move s0, s25
   535f4:	20 00 f1 c0 	move s1, s2
   535f8:	27 03 00 f8 	call 3228 <read_sdmmc_device>
   535fc:	00 04 00 14 	cmplt_i s0, s0, 1
   53600:	20 fa ff f5 	bnz s0, -188 <open+0xe0>
   53604:	39 07 00 05 	add_i s25, s25, 1
   53608:	19 00 7c c1 	cmpge_u s0, s25, s24
   5360c:	40 00 00 f4 	bnz s0, 8 <open+0x1b0>
   53610:	e8 ff ff f7 	b -96 <open+0x14c>
   53614:	3e 60 00 a8 	load_32 s1, 24(sp)
   53618:	00 04 00 0f 	move s0, 1
   5361c:	01 00 00 82 	store_8 s0, (s1)
   53620:	00 0c 00 4f 	movehi s0, 96
   53624:	20 c0 5e 00 	or s1, s0, 6064
   53628:	01 00 00 a8 	load_32 s0, (s1)
   5362c:	3e 90 00 88 	store_32 s1, 36(sp)
   53630:	a0 09 00 f2 	bz s0, 308 <open+0x300>
   53634:	01 40 00 a8 	load_32 s0, 16(s1)
   53638:	a0 09 00 f2 	bz s0, 308 <open+0x308>
   5363c:	01 80 00 a8 	load_32 s0, 32(s1)
   53640:	a0 09 00 f2 	bz s0, 308 <open+0x310>
   53644:	01 c0 00 a8 	load_32 s0, 48(s1)
   53648:	a0 09 00 f2 	bz s0, 308 <open+0x318>
   5364c:	01 00 01 a8 	load_32 s0, 64(s1)
   53650:	a0 09 00 f2 	bz s0, 308 <open+0x320>
   53654:	01 40 01 a8 	load_32 s0, 80(s1)
   53658:	a0 09 00 f2 	bz s0, 308 <open+0x328>
   5365c:	01 80 01 a8 	load_32 s0, 96(s1)
   53660:	a0 09 00 f2 	bz s0, 308 <open+0x330>
   53664:	01 c0 01 a8 	load_32 s0, 112(s1)
   53668:	a0 09 00 f2 	bz s0, 308 <open+0x338>
   5366c:	01 00 02 a8 	load_32 s0, 128(s1)
   53670:	a0 09 00 f2 	bz s0, 308 <open+0x340>
   53674:	01 40 02 a8 	load_32 s0, 144(s1)
   53678:	a0 09 00 f2 	bz s0, 308 <open+0x348>
   5367c:	01 80 02 a8 	load_32 s0, 160(s1)
   53680:	a0 09 00 f2 	bz s0, 308 <open+0x350>
   53684:	01 c0 02 a8 	load_32 s0, 176(s1)
   53688:	a0 09 00 f2 	bz s0, 308 <open+0x358>
   5368c:	01 00 03 a8 	load_32 s0, 192(s1)
   53690:	a0 09 00 f2 	bz s0, 308 <open+0x360>
   53694:	01 40 03 a8 	load_32 s0, 208(s1)
   53698:	a0 09 00 f2 	bz s0, 308 <open+0x368>
   5369c:	01 80 03 a8 	load_32 s0, 224(s1)
   536a0:	a0 09 00 f2 	bz s0, 308 <open+0x370>
   536a4:	01 c0 03 a8 	load_32 s0, 240(s1)
   536a8:	a0 09 00 f2 	bz s0, 308 <open+0x378>
   536ac:	01 00 04 a8 	load_32 s0, 256(s1)
   536b0:	a0 09 00 f2 	bz s0, 308 <open+0x380>
   536b4:	01 40 04 a8 	load_32 s0, 272(s1)
   536b8:	a0 09 00 f2 	bz s0, 308 <open+0x388>
   536bc:	01 80 04 a8 	load_32 s0, 288(s1)
   536c0:	a0 09 00 f2 	bz s0, 308 <open+0x390>
   536c4:	01 c0 04 a8 	load_32 s0, 304(s1)
   536c8:	a0 09 00 f2 	bz s0, 308 <open+0x398>
   536cc:	01 00 05 a8 	load_32 s0, 320(s1)
   536d0:	a0 09 00 f2 	bz s0, 308 <open+0x3a0>
   536d4:	1e 90 00 a8 	load_32 s0, 36(sp)
   536d8:	00 40 05 a8 	load_32 s0, 336(s0)
   536dc:	80 09 00 f2 	bz s0, 304 <open+0x3a8>
   536e0:	1e 90 00 a8 	load_32 s0, 36(sp)
   536e4:	00 80 05 a8 	load_32 s0, 352(s0)
   536e8:	60 09 00 f2 	bz s0, 300 <open+0x3b0>
   536ec:	1e 90 00 a8 	load_32 s0, 36(sp)
   536f0:	00 c0 05 a8 	load_32 s0, 368(s0)
   536f4:	40 09 00 f2 	bz s0, 296 <open+0x3b8>
   536f8:	1e 90 00 a8 	load_32 s0, 36(sp)
   536fc:	00 00 06 a8 	load_32 s0, 384(s0)
   53700:	20 09 00 f2 	bz s0, 292 <open+0x3c0>
   53704:	1e 90 00 a8 	load_32 s0, 36(sp)
   53708:	00 40 06 a8 	load_32 s0, 400(s0)
   5370c:	00 09 00 f2 	bz s0, 288 <open+0x3c8>
   53710:	1e 90 00 a8 	load_32 s0, 36(sp)
   53714:	00 80 06 a8 	load_32 s0, 416(s0)
   53718:	e0 08 00 f2 	bz s0, 284 <open+0x3d0>
   5371c:	1e 90 00 a8 	load_32 s0, 36(sp)
   53720:	00 c0 06 a8 	load_32 s0, 432(s0)
   53724:	c0 08 00 f2 	bz s0, 280 <open+0x3d8>
   53728:	1e 90 00 a8 	load_32 s0, 36(sp)
   5372c:	00 00 07 a8 	load_32 s0, 448(s0)
   53730:	a0 08 00 f2 	bz s0, 276 <open+0x3e0>
   53734:	1e 90 00 a8 	load_32 s0, 36(sp)
   53738:	00 40 07 a8 	load_32 s0, 464(s0)
   5373c:	80 08 00 f2 	bz s0, 272 <open+0x3e8>
   53740:	1e 90 00 a8 	load_32 s0, 36(sp)
   53744:	00 80 07 a8 	load_32 s0, 480(s0)
   53748:	60 08 00 f2 	bz s0, 268 <open+0x3f0>
   5374c:	1e 90 00 a8 	load_32 s0, 36(sp)
   53750:	00 c0 07 a8 	load_32 s0, 496(s0)
   53754:	40 08 00 f2 	bz s0, 264 <open+0x3f8>
   53758:	fd fe ff f9 	call -1036 <__errno_ptr>
   5375c:	20 60 00 0f 	move s1, 24
   53760:	54 00 00 f6 	b 336 <open+0x44c>
   53764:	00 00 00 0f 	move s0, 0
   53768:	3e 00 00 f6 	b 248 <open+0x3fc>
   5376c:	00 04 00 0f 	move s0, 1
   53770:	3c 00 00 f6 	b 240 <open+0x3fc>
   53774:	00 08 00 0f 	move s0, 2
   53778:	3a 00 00 f6 	b 232 <open+0x3fc>
   5377c:	00 0c 00 0f 	move s0, 3
   53780:	38 00 00 f6 	b 224 <open+0x3fc>
   53784:	00 10 00 0f 	move s0, 4
   53788:	36 00 00 f6 	b 216 <open+0x3fc>
   5378c:	00 14 00 0f 	move s0, 5
   53790:	34 00 00 f6 	b 208 <open+0x3fc>
   53794:	00 18 00 0f 	move s0, 6
   53798:	32 00 00 f6 	b 200 <open+0x3fc>
   5379c:	00 1c 00 0f 	move s0, 7
   537a0:	30 00 00 f6 	b 192 <open+0x3fc>
   537a4:	00 20 00 0f 	move s0, 8
   537a8:	2e 00 00 f6 	b 184 <open+0x3fc>
   537ac:	00 24 00 0f 	move s0, 9
   537b0:	2c 00 00 f6 	b 176 <open+0x3fc>
   537b4:	00 28 00 0f 	move s0, 10
   537b8:	2a 00 00 f6 	b 168 <open+0x3fc>
   537bc:	00 2c 00 0f 	move s0, 11
   537c0:	28 00 00 f6 	b 160 <open+0x3fc>
   537c4:	00 30 00 0f 	move s0, 12
   537c8:	26 00 00 f6 	b 152 <open+0x3fc>
   537cc:	00 34 00 0f 	move s0, 13
   537d0:	24 00 00 f6 	b 144 <open+0x3fc>
   537d4:	00 38 00 0f 	move s0, 14
   537d8:	22 00 00 f6 	b 136 <open+0x3fc>
   537dc:	00 3c 00 0f 	move s0, 15
   537e0:	20 00 00 f6 	b 128 <open+0x3fc>
   537e4:	00 40 00 0f 	move s0, 16
   537e8:	1e 00 00 f6 	b 120 <open+0x3fc>
   537ec:	00 44 00 0f 	move s0, 17
   537f0:	1c 00 00 f6 	b 112 <open+0x3fc>
   537f4:	00 48 00 0f 	move s0, 18
   537f8:	1a 00 00 f6 	b 104 <open+0x3fc>
   537fc:	00 4c 00 0f 	move s0, 19
   53800:	18 00 00 f6 	b 96 <open+0x3fc>
   53804:	00 50 00 0f 	move s0, 20
   53808:	16 00 00 f6 	b 88 <open+0x3fc>
   5380c:	00 54 00 0f 	move s0, 21
   53810:	14 00 00 f6 	b 80 <open+0x3fc>
   53814:	00 58 00 0f 	move s0, 22
   53818:	12 00 00 f6 	b 72 <open+0x3fc>
   5381c:	00 5c 00 0f 	move s0, 23
   53820:	10 00 00 f6 	b 64 <open+0x3fc>
   53824:	00 60 00 0f 	move s0, 24
   53828:	0e 00 00 f6 	b 56 <open+0x3fc>
   5382c:	00 64 00 0f 	move s0, 25
   53830:	0c 00 00 f6 	b 48 <open+0x3fc>
   53834:	00 68 00 0f 	move s0, 26
   53838:	0a 00 00 f6 	b 40 <open+0x3fc>
   5383c:	00 6c 00 0f 	move s0, 27
   53840:	08 00 00 f6 	b 32 <open+0x3fc>
   53844:	00 70 00 0f 	move s0, 28
   53848:	06 00 00 f6 	b 24 <open+0x3fc>
   5384c:	00 74 00 0f 	move s0, 29
   53850:	04 00 00 f6 	b 16 <open+0x3fc>
   53854:	00 78 00 0f 	move s0, 30
   53858:	02 00 00 f6 	b 8 <open+0x3fc>
   5385c:	00 7c 00 0f 	move s0, 31
   53860:	1e 80 00 88 	store_32 s0, 32(sp)
   53864:	00 0c 00 4f 	movehi s0, 96
   53868:	00 c0 66 00 	or s0, s0, 6576
   5386c:	00 03 00 a8 	load_32 s24, (s0)
   53870:	78 13 00 a8 	load_32 s27, 4(s24)
   53874:	bb 01 00 f2 	bz s27, 52 <open+0x444>
   53878:	40 03 00 0f 	move s26, 0
   5387c:	1a a0 00 07 	mull_i s0, s26, 40
   53880:	3e a0 00 a8 	load_32 s1, 40(sp)
   53884:	38 03 50 c0 	add_i s25, s24, s0
   53888:	19 40 00 05 	add_i s0, s25, 16
   5388c:	48 fb ff f9 	call -4832 <strcmp>
   53890:	40 00 00 f4 	bnz s0, 8 <open+0x434>
   53894:	0a 00 00 f6 	b 40 <open+0x458>
   53898:	5a 07 00 05 	add_i s26, s26, 1
   5389c:	1a 80 7d c1 	cmpge_u s0, s26, s27
   538a0:	40 00 00 f4 	bnz s0, 8 <open+0x444>
   538a4:	f6 ff ff f7 	b -40 <open+0x418>
   538a8:	a9 fe ff f9 	call -1372 <__errno_ptr>
   538ac:	20 08 00 0f 	move s1, 2
   538b0:	20 00 00 88 	store_32 s1, (s0)
   538b4:	00 fc ff 0f 	move s0, -1
   538b8:	0d 00 00 f6 	b 52 <open+0x488>
   538bc:	1e 80 00 a8 	load_32 s0, 32(sp)
   538c0:	3e 90 00 a8 	load_32 s1, 36(sp)
   538c4:	40 10 00 0b 	shl s2, s0, 4
   538c8:	41 00 51 c0 	add_i s2, s1, s2
   538cc:	20 04 00 0f 	move s1, 1
   538d0:	22 00 00 88 	store_32 s1, (s2)
   538d4:	39 30 00 a8 	load_32 s1, 12(s25)
   538d8:	22 10 00 88 	store_32 s1, 4(s2)
   538dc:	39 20 00 a8 	load_32 s1, 8(s25)
   538e0:	22 20 00 88 	store_32 s1, 8(s2)
   538e4:	20 00 00 0f 	move s1, 0
   538e8:	22 30 00 88 	store_32 s1, 12(s2)
   538ec:	fe b3 08 a8 	load_32 ra, 556(sp)
   538f0:	7e c3 08 a8 	load_32 s27, 560(sp)
   538f4:	5e d3 08 a8 	load_32 s26, 564(sp)
   538f8:	3e e3 08 a8 	load_32 s25, 568(sp)
   538fc:	1e f3 08 a8 	load_32 s24, 572(sp)
   53900:	de 03 09 05 	add_i sp, sp, 576
   53904:	1f 00 00 f0 	ret

0000000000053908 close:
   53908:	de 03 ff 05 	add_i sp, sp, -64
   5390c:	fe f3 00 88 	store_32 ra, 60(sp)
   53910:	20 80 00 18 	cmplt_u s1, s0, 32
   53914:	01 01 00 f4 	bnz s1, 32 <close+0x2c>
   53918:	8d fe ff f9 	call -1484 <__errno_ptr>
   5391c:	20 24 00 0f 	move s1, 9
   53920:	20 00 00 88 	store_32 s1, (s0)
   53924:	00 fc ff 0f 	move s0, -1
   53928:	fe f3 00 a8 	load_32 ra, 60(sp)
   5392c:	de 03 01 05 	add_i sp, sp, 64
   53930:	1f 00 00 f0 	ret
   53934:	20 0c 00 4f 	movehi s1, 96
   53938:	00 10 00 0b 	shl s0, s0, 4
   5393c:	21 c0 5e 00 	or s1, s1, 6064
   53940:	21 00 50 c0 	add_i s1, s1, s0
   53944:	00 00 00 0f 	move s0, 0
   53948:	01 00 00 88 	store_32 s0, (s1)
   5394c:	fe f3 00 a8 	load_32 ra, 60(sp)
   53950:	de 03 01 05 	add_i sp, sp, 64
   53954:	1f 00 00 f0 	ret

0000000000053958 read:
   53958:	de 03 f7 05 	add_i sp, sp, -576
   5395c:	1e f3 08 88 	store_32 s24, 572(sp)
   53960:	3e e3 08 88 	store_32 s25, 568(sp)
   53964:	5e d3 08 88 	store_32 s26, 564(sp)
   53968:	7e c3 08 88 	store_32 s27, 560(sp)
   5396c:	fe b3 08 88 	store_32 ra, 556(sp)
   53970:	60 80 00 18 	cmplt_u s3, s0, 32
   53974:	43 00 00 f4 	bnz s3, 8 <read+0x24>
   53978:	6a 00 00 f6 	b 424 <read+0x1c8>
   5397c:	60 0c 00 4f 	movehi s3, 96
   53980:	00 10 00 0b 	shl s0, s0, 4
   53984:	63 c0 5e 00 	or s3, s3, 6064
   53988:	a3 00 50 c0 	add_i s5, s3, s0
   5398c:	05 00 00 a8 	load_32 s0, (s5)
   53990:	40 00 00 f4 	bnz s0, 8 <read+0x40>
   53994:	63 00 00 f6 	b 396 <read+0x1c8>
   53998:	65 10 00 a8 	load_32 s3, 4(s5)
   5399c:	85 30 00 a8 	load_32 s4, 12(s5)
   539a0:	03 00 62 c0 	sub_i s0, s3, s4
   539a4:	60 04 00 14 	cmplt_i s3, s0, 1
   539a8:	23 0d 00 f4 	bnz s3, 420 <read+0x1f4>
   539ac:	60 00 81 c1 	cmplt_u s3, s0, s2
   539b0:	43 00 00 f4 	bnz s3, 8 <read+0x60>
   539b4:	00 00 f1 c0 	move s0, s2
   539b8:	45 30 00 05 	add_i s2, s5, 12
   539bc:	c0 0a 00 f2 	bz s0, 344 <read+0x1bc>
   539c0:	5e 30 00 88 	store_32 s2, 12(sp)
   539c4:	04 ff 07 01 	and s24, s4, 511
   539c8:	3e 80 00 88 	store_32 s1, 32(sp)
   539cc:	20 03 00 0f 	move s25, 0
   539d0:	25 20 00 a8 	load_32 s1, 8(s5)
   539d4:	21 00 52 c0 	add_i s1, s1, s4
   539d8:	41 7c 00 09 	ashr s2, s1, 31
   539dc:	42 5c 00 0a 	shr s2, s2, 23
   539e0:	21 00 51 c0 	add_i s1, s1, s2
   539e4:	40 00 08 0f 	move s2, 512
   539e8:	41 27 00 09 	ashr s26, s1, 9
   539ec:	20 0c 00 4f 	movehi s1, 96
   539f0:	21 a0 5e 00 	or s1, s1, 6056
   539f4:	3e 90 00 88 	store_32 s1, 36(sp)
   539f8:	20 00 04 4f 	movehi s1, 8192
   539fc:	3e 40 00 88 	store_32 s1, 16(sp)
   53a00:	3e b0 00 05 	add_i s1, sp, 44
   53a04:	3e 70 00 88 	store_32 s1, 28(sp)
   53a08:	3e 53 00 88 	store_32 s25, 20(sp)
   53a0c:	1e 60 00 88 	store_32 s0, 24(sp)
   53a10:	5e a0 00 88 	store_32 s2, 40(sp)
   53a14:	60 83 6c c0 	sub_i s27, s0, s25
   53a18:	f8 01 00 f4 	bnz s24, 60 <read+0xfc>
   53a1c:	1b 00 08 18 	cmplt_u s0, s27, 512
   53a20:	a0 01 00 f4 	bnz s0, 52 <read+0xfc>
   53a24:	1e 90 00 a8 	load_32 s0, 36(sp)
   53a28:	00 00 00 a0 	load_u8 s0, (s0)
   53a2c:	3e 80 00 a8 	load_32 s1, 32(sp)
   53a30:	00 04 00 11 	cmpne_i s0, s0, 1
   53a34:	61 80 5c c0 	add_i s3, s1, s25
   53a38:	00 05 00 f4 	bnz s0, 160 <read+0x180>
   53a3c:	3e 40 00 a8 	load_32 s1, 16(sp)
   53a40:	1a 24 00 0b 	shl s0, s26, 9
   53a44:	20 80 50 c0 	add_i s1, s0, s1
   53a48:	00 80 f1 c0 	move s0, s3
   53a4c:	ae f8 ff f9 	call -7496 <memcpy>
   53a50:	28 00 00 f6 	b 160 <read+0x198>
   53a54:	1e 90 00 a8 	load_32 s0, 36(sp)
   53a58:	00 00 00 a0 	load_u8 s0, (s0)
   53a5c:	00 04 00 11 	cmpne_i s0, s0, 1
   53a60:	60 01 00 f4 	bnz s0, 44 <read+0x134>
   53a64:	3e 40 00 a8 	load_32 s1, 16(sp)
   53a68:	1a 24 00 0b 	shl s0, s26, 9
   53a6c:	20 80 50 c0 	add_i s1, s0, s1
   53a70:	1e 70 00 a8 	load_32 s0, 28(sp)
   53a74:	a4 f8 ff f9 	call -7536 <memcpy>
   53a78:	1e a0 00 a8 	load_32 s0, 40(sp)
   53a7c:	00 00 6c c0 	sub_i s0, s0, s24
   53a80:	20 80 6d c1 	cmpgt_u s1, s0, s27
   53a84:	a1 01 00 f4 	bnz s1, 52 <read+0x160>
   53a88:	0b 00 00 f6 	b 44 <read+0x15c>
   53a8c:	00 00 fd c0 	move s0, s26
   53a90:	3e 70 00 a8 	load_32 s1, 28(sp)
   53a94:	00 02 00 f8 	call 2048 <read_sdmmc_device>
   53a98:	00 00 00 12 	cmpgt_i s0, s0, 0
   53a9c:	40 00 00 f4 	bnz s0, 8 <read+0x14c>
   53aa0:	2d 00 00 f6 	b 180 <read+0x1fc>
   53aa4:	1e a0 00 a8 	load_32 s0, 40(sp)
   53aa8:	00 00 6c c0 	sub_i s0, s0, s24
   53aac:	20 80 6d c1 	cmpgt_u s1, s0, s27
   53ab0:	41 00 00 f4 	bnz s1, 8 <read+0x160>
   53ab4:	60 03 f0 c0 	move s27, s0
   53ab8:	1e 80 00 a8 	load_32 s0, 32(sp)
   53abc:	3e 70 00 a8 	load_32 s1, 28(sp)
   53ac0:	40 80 fd c0 	move s2, s27
   53ac4:	00 80 5c c0 	add_i s0, s0, s25
   53ac8:	21 00 5c c0 	add_i s1, s1, s24
   53acc:	8e f8 ff f9 	call -7624 <memcpy>
   53ad0:	3b 83 5c c0 	add_i s25, s27, s25
   53ad4:	08 00 00 f6 	b 32 <read+0x19c>
   53ad8:	00 00 fd c0 	move s0, s26
   53adc:	20 80 f1 c0 	move s1, s3
   53ae0:	ed 01 00 f8 	call 1972 <read_sdmmc_device>
   53ae4:	00 00 00 12 	cmpgt_i s0, s0, 0
   53ae8:	40 00 00 f4 	bnz s0, 8 <read+0x198>
   53aec:	1a 00 00 f6 	b 104 <read+0x1fc>
   53af0:	39 03 08 05 	add_i s25, s25, 512
   53af4:	1e 60 00 a8 	load_32 s0, 24(sp)
   53af8:	5a 07 00 05 	add_i s26, s26, 1
   53afc:	1e 53 00 a8 	load_32 s24, 20(sp)
   53b00:	5e a0 00 a8 	load_32 s2, 40(sp)
   53b04:	20 80 6c c1 	cmpgt_u s1, s0, s25
   53b08:	61 f8 ff f5 	bnz s1, -244 <read+0xbc>
   53b0c:	5e 30 00 a8 	load_32 s2, 12(sp)
   53b10:	82 00 00 a8 	load_32 s4, (s2)
   53b14:	24 00 50 c0 	add_i s1, s4, s0
   53b18:	22 00 00 88 	store_32 s1, (s2)
   53b1c:	05 00 00 f6 	b 20 <read+0x1d8>
   53b20:	0b fe ff f9 	call -2004 <__errno_ptr>
   53b24:	20 24 00 0f 	move s1, 9
   53b28:	20 00 00 88 	store_32 s1, (s0)
   53b2c:	00 fc ff 0f 	move s0, -1
   53b30:	fe b3 08 a8 	load_32 ra, 556(sp)
   53b34:	7e c3 08 a8 	load_32 s27, 560(sp)
   53b38:	5e d3 08 a8 	load_32 s26, 564(sp)
   53b3c:	3e e3 08 a8 	load_32 s25, 568(sp)
   53b40:	1e f3 08 a8 	load_32 s24, 572(sp)
   53b44:	de 03 09 05 	add_i sp, sp, 576
   53b48:	1f 00 00 f0 	ret
   53b4c:	00 00 00 0f 	move s0, 0
   53b50:	f8 ff ff f7 	b -32 <read+0x1d8>
   53b54:	fe fd ff f9 	call -2056 <__errno_ptr>
   53b58:	20 14 00 0f 	move s1, 5
   53b5c:	f3 ff ff f7 	b -52 <read+0x1d0>

0000000000053b60 write:
   53b60:	de 03 ff 05 	add_i sp, sp, -64
   53b64:	fe f3 00 88 	store_32 ra, 60(sp)
   53b68:	f9 fd ff f9 	call -2076 <__errno_ptr>
   53b6c:	20 fc ff 0f 	move s1, -1
   53b70:	40 04 00 0f 	move s2, 1
   53b74:	40 00 00 88 	store_32 s2, (s0)
   53b78:	00 80 f0 c0 	move s0, s1
   53b7c:	fe f3 00 a8 	load_32 ra, 60(sp)
   53b80:	de 03 01 05 	add_i sp, sp, 64
   53b84:	1f 00 00 f0 	ret

0000000000053b88 lseek:
   53b88:	de 03 ff 05 	add_i sp, sp, -64
   53b8c:	fe f3 00 88 	store_32 ra, 60(sp)
   53b90:	60 00 f0 c0 	move s3, s0
   53b94:	00 80 f0 c0 	move s0, s1
   53b98:	83 80 00 18 	cmplt_u s4, s3, 32
   53b9c:	44 00 00 f4 	bnz s4, 8 <lseek+0x1c>
   53ba0:	11 00 00 f6 	b 68 <lseek+0x5c>
   53ba4:	20 0c 00 4f 	movehi s1, 96
   53ba8:	63 10 00 0b 	shl s3, s3, 4
   53bac:	21 c0 5e 00 	or s1, s1, 6064
   53bb0:	21 80 51 c0 	add_i s1, s1, s3
   53bb4:	61 00 00 a8 	load_32 s3, (s1)
   53bb8:	43 00 00 f4 	bnz s3, 8 <lseek+0x38>
   53bbc:	0a 00 00 f6 	b 40 <lseek+0x5c>
   53bc0:	62 08 00 10 	cmpeq_i s3, s2, 2
   53bc4:	e3 01 00 f4 	bnz s3, 60 <lseek+0x78>
   53bc8:	62 04 00 10 	cmpeq_i s3, s2, 1
   53bcc:	63 02 00 f4 	bnz s3, 76 <lseek+0x90>
   53bd0:	42 00 00 f4 	bnz s2, 8 <lseek+0x50>
   53bd4:	0d 00 00 f6 	b 52 <lseek+0x80>
   53bd8:	dd fd ff f9 	call -2188 <__errno_ptr>
   53bdc:	20 58 00 0f 	move s1, 22
   53be0:	03 00 00 f6 	b 12 <lseek+0x64>
   53be4:	da fd ff f9 	call -2200 <__errno_ptr>
   53be8:	20 24 00 0f 	move s1, 9
   53bec:	20 00 00 88 	store_32 s1, (s0)
   53bf0:	00 fc ff 0f 	move s0, -1
   53bf4:	fe f3 00 a8 	load_32 ra, 60(sp)
   53bf8:	de 03 01 05 	add_i sp, sp, 64
   53bfc:	1f 00 00 f0 	ret
   53c00:	41 10 00 a8 	load_32 s2, 4(s1)
   53c04:	02 00 60 c0 	sub_i s0, s2, s0
   53c08:	40 fc ff 12 	cmpgt_i s2, s0, -1
   53c0c:	01 30 00 88 	store_32 s0, 12(s1)
   53c10:	22 ff ff f5 	bnz s2, -28 <lseek+0x6c>
   53c14:	06 00 00 f6 	b 24 <lseek+0xa4>
   53c18:	41 30 00 a8 	load_32 s2, 12(s1)
   53c1c:	02 00 50 c0 	add_i s0, s2, s0
   53c20:	40 fc ff 12 	cmpgt_i s2, s0, -1
   53c24:	01 30 00 88 	store_32 s0, 12(s1)
   53c28:	62 fe ff f5 	bnz s2, -52 <lseek+0x6c>
   53c2c:	00 00 00 0f 	move s0, 0
   53c30:	01 30 00 88 	store_32 s0, 12(s1)
   53c34:	fe f3 00 a8 	load_32 ra, 60(sp)
   53c38:	de 03 01 05 	add_i sp, sp, 64
   53c3c:	1f 00 00 f0 	ret

0000000000053c40 stat:
   53c40:	de 03 ff 05 	add_i sp, sp, -64
   53c44:	1e f3 00 88 	store_32 s24, 60(sp)
   53c48:	3e e3 00 88 	store_32 s25, 56(sp)
   53c4c:	5e d3 00 88 	store_32 s26, 52(sp)
   53c50:	7e c3 00 88 	store_32 s27, 48(sp)
   53c54:	fe b3 00 88 	store_32 ra, 44(sp)
   53c58:	40 0c 00 4f 	movehi s2, 96
   53c5c:	42 c0 66 00 	or s2, s2, 6576
   53c60:	42 03 00 a8 	load_32 s26, (s2)
   53c64:	7a 13 00 a8 	load_32 s27, 4(s26)
   53c68:	3e 90 00 88 	store_32 s1, 36(sp)
   53c6c:	1e a0 00 88 	store_32 s0, 40(sp)
   53c70:	9b 01 00 f2 	bz s27, 48 <stat+0x60>
   53c74:	00 03 00 0f 	move s24, 0
   53c78:	18 a0 00 07 	mull_i s0, s24, 40
   53c7c:	3e a0 00 a8 	load_32 s1, 40(sp)
   53c80:	3a 03 50 c0 	add_i s25, s26, s0
   53c84:	19 40 00 05 	add_i s0, s25, 16
   53c88:	49 fa ff f9 	call -5852 <strcmp>
   53c8c:	40 01 00 f2 	bz s0, 40 <stat+0x74>
   53c90:	18 07 00 05 	add_i s24, s24, 1
   53c94:	18 80 7d c1 	cmpge_u s0, s24, s27
   53c98:	40 00 00 f4 	bnz s0, 8 <stat+0x60>
   53c9c:	f7 ff ff f7 	b -36 <stat+0x38>
   53ca0:	ab fd ff f9 	call -2388 <__errno_ptr>
   53ca4:	20 08 00 0f 	move s1, 2
   53ca8:	20 00 00 88 	store_32 s1, (s0)
   53cac:	00 fc ff 0f 	move s0, -1
   53cb0:	05 00 00 f6 	b 20 <stat+0x84>
   53cb4:	19 30 00 a8 	load_32 s0, 12(s25)
   53cb8:	3e 90 00 a8 	load_32 s1, 36(sp)
   53cbc:	01 00 00 88 	store_32 s0, (s1)
   53cc0:	00 00 00 0f 	move s0, 0
   53cc4:	fe b3 00 a8 	load_32 ra, 44(sp)
   53cc8:	7e c3 00 a8 	load_32 s27, 48(sp)
   53ccc:	5e d3 00 a8 	load_32 s26, 52(sp)
   53cd0:	3e e3 00 a8 	load_32 s25, 56(sp)
   53cd4:	1e f3 00 a8 	load_32 s24, 60(sp)
   53cd8:	de 03 01 05 	add_i sp, sp, 64
   53cdc:	1f 00 00 f0 	ret

0000000000053ce0 fstat:
   53ce0:	de 03 ff 05 	add_i sp, sp, -64
   53ce4:	fe f3 00 88 	store_32 ra, 60(sp)
   53ce8:	40 80 00 18 	cmplt_u s2, s0, 32
   53cec:	42 00 00 f4 	bnz s2, 8 <fstat+0x14>
   53cf0:	0e 00 00 f6 	b 56 <fstat+0x48>
   53cf4:	40 0c 00 4f 	movehi s2, 96
   53cf8:	00 10 00 0b 	shl s0, s0, 4
   53cfc:	42 c0 5e 00 	or s2, s2, 6064
   53d00:	02 00 50 c0 	add_i s0, s2, s0
   53d04:	40 00 00 a8 	load_32 s2, (s0)
   53d08:	42 00 00 f4 	bnz s2, 8 <fstat+0x30>
   53d0c:	07 00 00 f6 	b 28 <fstat+0x48>
   53d10:	00 10 00 a8 	load_32 s0, 4(s0)
   53d14:	01 00 00 88 	store_32 s0, (s1)
   53d18:	00 00 00 0f 	move s0, 0
   53d1c:	fe f3 00 a8 	load_32 ra, 60(sp)
   53d20:	de 03 01 05 	add_i sp, sp, 64
   53d24:	1f 00 00 f0 	ret
   53d28:	89 fd ff f9 	call -2524 <__errno_ptr>
   53d2c:	20 24 00 0f 	move s1, 9
   53d30:	20 00 00 88 	store_32 s1, (s0)
   53d34:	00 fc ff 0f 	move s0, -1
   53d38:	fe f3 00 a8 	load_32 ra, 60(sp)
   53d3c:	de 03 01 05 	add_i sp, sp, 64
   53d40:	1f 00 00 f0 	ret

0000000000053d44 access:
   53d44:	de 03 ff 05 	add_i sp, sp, -64
   53d48:	1e f3 00 88 	store_32 s24, 60(sp)
   53d4c:	3e e3 00 88 	store_32 s25, 56(sp)
   53d50:	5e d3 00 88 	store_32 s26, 52(sp)
   53d54:	7e c3 00 88 	store_32 s27, 48(sp)
   53d58:	fe b3 00 88 	store_32 ra, 44(sp)
   53d5c:	40 0c 00 4f 	movehi s2, 96
   53d60:	40 0b 00 0f 	move s26, 2
   53d64:	42 c0 66 00 	or s2, s2, 6576
   53d68:	62 03 00 a8 	load_32 s27, (s2)
   53d6c:	1b 13 00 a8 	load_32 s24, 4(s27)
   53d70:	20 03 f0 c0 	move s25, s0
   53d74:	18 03 00 f2 	bz s24, 96 <access+0x90>
   53d78:	3e 90 00 88 	store_32 s1, 36(sp)
   53d7c:	5e a3 00 88 	store_32 s26, 40(sp)
   53d80:	40 03 00 0f 	move s26, 0
   53d84:	1a a0 00 07 	mull_i s0, s26, 40
   53d88:	1b 00 50 c0 	add_i s0, s27, s0
   53d8c:	20 80 fc c0 	move s1, s25
   53d90:	00 40 00 05 	add_i s0, s0, 16
   53d94:	06 fa ff f9 	call -6120 <strcmp>
   53d98:	40 00 00 f4 	bnz s0, 8 <access+0x5c>
   53d9c:	07 00 00 f6 	b 28 <access+0x74>
   53da0:	5a 07 00 05 	add_i s26, s26, 1
   53da4:	1a 00 7c c1 	cmpge_u s0, s26, s24
   53da8:	40 00 00 f4 	bnz s0, 8 <access+0x6c>
   53dac:	f6 ff ff f7 	b -40 <access+0x40>
   53db0:	5e a3 00 a8 	load_32 s26, 40(sp)
   53db4:	08 00 00 f6 	b 32 <access+0x90>
   53db8:	1e 90 00 a8 	load_32 s0, 36(sp)
   53dbc:	00 08 00 01 	and s0, s0, 2
   53dc0:	40 00 00 f2 	bz s0, 8 <access+0x84>
   53dc4:	03 00 00 f6 	b 12 <access+0x8c>
   53dc8:	00 00 00 0f 	move s0, 0
   53dcc:	05 00 00 f6 	b 20 <access+0x9c>
   53dd0:	40 07 00 0f 	move s26, 1
   53dd4:	5e fd ff f9 	call -2696 <__errno_ptr>
   53dd8:	40 03 00 88 	store_32 s26, (s0)
   53ddc:	00 fc ff 0f 	move s0, -1
   53de0:	fe b3 00 a8 	load_32 ra, 44(sp)
   53de4:	7e c3 00 a8 	load_32 s27, 48(sp)
   53de8:	5e d3 00 a8 	load_32 s26, 52(sp)
   53dec:	3e e3 00 a8 	load_32 s25, 56(sp)
   53df0:	1e f3 00 a8 	load_32 s24, 60(sp)
   53df4:	de 03 01 05 	add_i sp, sp, 64
   53df8:	1f 00 00 f0 	ret

0000000000053dfc get_current_thread_id:
   53dfc:	00 00 00 ac 	getcr s0, 0
   53e00:	1f 00 00 f0 	ret

0000000000053e04 get_cycle_count:
   53e04:	06 00 00 ac 	getcr s0, 6
   53e08:	1f 00 00 f0 	ret

0000000000053e0c init_sdmmc_device:
   53e0c:	de 03 fe 05 	add_i sp, sp, -128
   53e10:	1e f3 01 88 	store_32 s24, 124(sp)
   53e14:	3e e3 01 88 	store_32 s25, 120(sp)
   53e18:	5e d3 01 88 	store_32 s26, 116(sp)
   53e1c:	7e c3 01 88 	store_32 s27, 112(sp)
   53e20:	fe b3 01 88 	store_32 ra, 108(sp)
   53e24:	18 fc ff 4f 	movehi s0, 524280
   53e28:	20 f0 01 0f 	move s1, 124
   53e2c:	40 ff 03 0f 	move s26, 255
   53e30:	40 40 03 00 	or s2, s0, 208
   53e34:	5e a0 01 88 	store_32 s2, 104(sp)
   53e38:	20 03 03 00 	or s25, s0, 192
   53e3c:	00 23 03 00 	or s24, s0, 200
   53e40:	22 00 00 88 	store_32 s1, (s2)
   53e44:	20 30 03 00 	or s1, s0, 204
   53e48:	40 04 00 0f 	move s2, 1
   53e4c:	41 00 00 88 	store_32 s2, (s1)
   53e50:	59 03 00 88 	store_32 s26, (s25)
   53e54:	58 00 00 a8 	load_32 s2, (s24)
   53e58:	42 04 00 01 	and s2, s2, 1
   53e5c:	c2 ff ff f3 	bz s2, -8 <init_sdmmc_device+0x48>
   53e60:	60 13 03 00 	or s27, s0, 196
   53e64:	1b 00 00 a8 	load_32 s0, (s27)
   53e68:	59 03 00 88 	store_32 s26, (s25)
   53e6c:	18 00 00 a8 	load_32 s0, (s24)
   53e70:	00 04 00 01 	and s0, s0, 1
   53e74:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x60>
   53e78:	1b 00 00 a8 	load_32 s0, (s27)
   53e7c:	59 03 00 88 	store_32 s26, (s25)
   53e80:	18 00 00 a8 	load_32 s0, (s24)
   53e84:	00 04 00 01 	and s0, s0, 1
   53e88:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x74>
   53e8c:	1b 00 00 a8 	load_32 s0, (s27)
   53e90:	59 03 00 88 	store_32 s26, (s25)
   53e94:	18 00 00 a8 	load_32 s0, (s24)
   53e98:	00 04 00 01 	and s0, s0, 1
   53e9c:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x88>
   53ea0:	1b 00 00 a8 	load_32 s0, (s27)
   53ea4:	59 03 00 88 	store_32 s26, (s25)
   53ea8:	18 00 00 a8 	load_32 s0, (s24)
   53eac:	00 04 00 01 	and s0, s0, 1
   53eb0:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x9c>
   53eb4:	1b 00 00 a8 	load_32 s0, (s27)
   53eb8:	59 03 00 88 	store_32 s26, (s25)
   53ebc:	18 00 00 a8 	load_32 s0, (s24)
   53ec0:	00 04 00 01 	and s0, s0, 1
   53ec4:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xb0>
   53ec8:	1b 00 00 a8 	load_32 s0, (s27)
   53ecc:	59 03 00 88 	store_32 s26, (s25)
   53ed0:	18 00 00 a8 	load_32 s0, (s24)
   53ed4:	00 04 00 01 	and s0, s0, 1
   53ed8:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xc4>
   53edc:	1b 00 00 a8 	load_32 s0, (s27)
   53ee0:	59 03 00 88 	store_32 s26, (s25)
   53ee4:	18 00 00 a8 	load_32 s0, (s24)
   53ee8:	00 04 00 01 	and s0, s0, 1
   53eec:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xd8>
   53ef0:	1b 00 00 a8 	load_32 s0, (s27)
   53ef4:	59 03 00 88 	store_32 s26, (s25)
   53ef8:	18 00 00 a8 	load_32 s0, (s24)
   53efc:	00 04 00 01 	and s0, s0, 1
   53f00:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xec>
   53f04:	1b 00 00 a8 	load_32 s0, (s27)
   53f08:	59 03 00 88 	store_32 s26, (s25)
   53f0c:	18 00 00 a8 	load_32 s0, (s24)
   53f10:	00 04 00 01 	and s0, s0, 1
   53f14:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x100>
   53f18:	1b 00 00 a8 	load_32 s0, (s27)
   53f1c:	00 00 00 0f 	move s0, 0
   53f20:	01 00 00 88 	store_32 s0, (s1)
   53f24:	20 00 f0 c0 	move s1, s0
   53f28:	8d 00 00 f8 	call 564 <send_sd_command>
   53f2c:	20 04 00 10 	cmpeq_i s1, s0, 1
   53f30:	01 01 00 f4 	bnz s1, 32 <init_sdmmc_device+0x144>
   53f34:	20 fc 03 10 	cmpeq_i s1, s0, 255
   53f38:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x134>
   53f3c:	62 00 00 f6 	b 392 <init_sdmmc_device+0x2b8>
   53f40:	02 00 00 4f 	movehi s0, 2
   53f44:	00 a4 27 00 	or s0, s0, 2537
   53f48:	81 f8 ff f9 	call -7676 <puts>
   53f4c:	6b 00 00 f6 	b 428 <init_sdmmc_device+0x2ec>
   53f50:	00 20 00 0f 	move s0, 8
   53f54:	20 68 05 0f 	move s1, 346
   53f58:	81 00 00 f8 	call 516 <send_sd_command>
   53f5c:	20 04 00 10 	cmpeq_i s1, s0, 1
   53f60:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x15c>
   53f64:	5c 00 00 f6 	b 368 <init_sdmmc_device+0x2c8>
   53f68:	59 03 00 88 	store_32 s26, (s25)
   53f6c:	18 00 00 a8 	load_32 s0, (s24)
   53f70:	00 04 00 01 	and s0, s0, 1
   53f74:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x160>
   53f78:	1b 00 00 a8 	load_32 s0, (s27)
   53f7c:	59 03 00 88 	store_32 s26, (s25)
   53f80:	18 00 00 a8 	load_32 s0, (s24)
   53f84:	00 04 00 01 	and s0, s0, 1
   53f88:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x174>
   53f8c:	1b 00 00 a8 	load_32 s0, (s27)
   53f90:	59 03 00 88 	store_32 s26, (s25)
   53f94:	18 00 00 a8 	load_32 s0, (s24)
   53f98:	00 04 00 01 	and s0, s0, 1
   53f9c:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x188>
   53fa0:	1b 00 00 a8 	load_32 s0, (s27)
   53fa4:	20 3c 00 01 	and s1, s0, 15
   53fa8:	21 04 00 10 	cmpeq_i s1, s1, 1
   53fac:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x1a8>
   53fb0:	4d 00 00 f6 	b 308 <init_sdmmc_device+0x2d8>
   53fb4:	59 03 00 88 	store_32 s26, (s25)
   53fb8:	18 00 00 a8 	load_32 s0, (s24)
   53fbc:	00 04 00 01 	and s0, s0, 1
   53fc0:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x1ac>
   53fc4:	1b 00 00 a8 	load_32 s0, (s27)
   53fc8:	00 68 01 11 	cmpne_i s0, s0, 90
   53fcc:	60 0a 00 f4 	bnz s0, 332 <init_sdmmc_device+0x30c>
   53fd0:	20 00 00 0f 	move s1, 0
   53fd4:	3e 80 01 88 	store_32 s1, 96(sp)
   53fd8:	00 dc 00 0f 	move s0, 55
   53fdc:	60 00 00 f8 	call 384 <send_sd_command>
   53fe0:	20 04 00 11 	cmpne_i s1, s0, 1
   53fe4:	81 06 00 f4 	bnz s1, 208 <init_sdmmc_device+0x2a8>
   53fe8:	00 a4 00 0f 	move s0, 41
   53fec:	1e 70 01 88 	store_32 s0, 92(sp)
   53ff0:	00 fc 40 4f 	movehi s0, 133088
   53ff4:	1e 60 01 88 	store_32 s0, 88(sp)
   53ff8:	00 dc 00 0f 	move s0, 55
   53ffc:	1e 50 01 88 	store_32 s0, 84(sp)
   54000:	1e 80 01 a8 	load_32 s0, 96(sp)
   54004:	1e 90 01 88 	store_32 s0, 100(sp)
   54008:	1e 70 01 a8 	load_32 s0, 92(sp)
   5400c:	3e 60 01 a8 	load_32 s1, 88(sp)
   54010:	53 00 00 f8 	call 332 <send_sd_command>
   54014:	59 03 00 88 	store_32 s26, (s25)
   54018:	38 00 00 a8 	load_32 s1, (s24)
   5401c:	21 04 00 01 	and s1, s1, 1
   54020:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x20c>
   54024:	3b 00 00 a8 	load_32 s1, (s27)
   54028:	59 03 00 88 	store_32 s26, (s25)
   5402c:	7e 80 01 a8 	load_32 s3, 96(sp)
   54030:	38 00 00 a8 	load_32 s1, (s24)
   54034:	21 04 00 01 	and s1, s1, 1
   54038:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x224>
   5403c:	3b 00 00 a8 	load_32 s1, (s27)
   54040:	59 03 00 88 	store_32 s26, (s25)
   54044:	38 00 00 a8 	load_32 s1, (s24)
   54048:	21 04 00 01 	and s1, s1, 1
   5404c:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x238>
   54050:	3b 00 00 a8 	load_32 s1, (s27)
   54054:	59 03 00 88 	store_32 s26, (s25)
   54058:	38 00 00 a8 	load_32 s1, (s24)
   5405c:	21 04 00 01 	and s1, s1, 1
   54060:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x24c>
   54064:	3b 00 00 a8 	load_32 s1, (s27)
   54068:	59 03 00 88 	store_32 s26, (s25)
   5406c:	38 00 00 a8 	load_32 s1, (s24)
   54070:	21 04 00 01 	and s1, s1, 1
   54074:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x260>
   54078:	20 04 00 10 	cmpeq_i s1, s0, 1
   5407c:	5b 00 00 a8 	load_32 s2, (s27)
   54080:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x27c>
   54084:	28 00 00 f6 	b 160 <init_sdmmc_device+0x318>
   54088:	3e 90 01 a8 	load_32 s1, 100(sp)
   5408c:	01 90 01 11 	cmpne_i s0, s1, 100
   54090:	40 00 00 f4 	bnz s0, 8 <init_sdmmc_device+0x28c>
   54094:	2b 00 00 f6 	b 172 <init_sdmmc_device+0x334>
   54098:	21 04 00 05 	add_i s1, s1, 1
   5409c:	3e 90 01 88 	store_32 s1, 100(sp)
   540a0:	1e 50 01 a8 	load_32 s0, 84(sp)
   540a4:	20 80 f1 c0 	move s1, s3
   540a8:	2d 00 00 f8 	call 180 <send_sd_command>
   540ac:	20 04 00 10 	cmpeq_i s1, s0, 1
   540b0:	c1 fa ff f5 	bnz s1, -168 <init_sdmmc_device+0x1fc>
   540b4:	23 00 00 4f 	movehi s1, 3
   540b8:	1e 10 00 88 	store_32 s0, 4(sp)
   540bc:	01 a0 10 00 	or s0, s1, 1064
   540c0:	0c 00 00 f6 	b 48 <init_sdmmc_device+0x2e4>
   540c4:	21 00 00 4f 	movehi s1, 1
   540c8:	1e 10 00 88 	store_32 s0, 4(sp)
   540cc:	01 dc 14 00 	or s0, s1, 1335
   540d0:	08 00 00 f6 	b 32 <init_sdmmc_device+0x2e4>
   540d4:	21 00 00 4f 	movehi s1, 1
   540d8:	1e 10 00 88 	store_32 s0, 4(sp)
   540dc:	01 04 0a 00 	or s0, s1, 641
   540e0:	04 00 00 f6 	b 16 <init_sdmmc_device+0x2e4>
   540e4:	21 00 00 4f 	movehi s1, 1
   540e8:	1e 10 00 88 	store_32 s0, 4(sp)
   540ec:	01 84 02 00 	or s0, s1, 161
   540f0:	1e 00 00 88 	store_32 s0, (sp)
   540f4:	38 f7 ff f9 	call -8992 <printf>
   540f8:	00 fc ff 0f 	move s0, -1
   540fc:	fe b3 01 a8 	load_32 ra, 108(sp)
   54100:	7e c3 01 a8 	load_32 s27, 112(sp)
   54104:	5e d3 01 a8 	load_32 s26, 116(sp)
   54108:	3e e3 01 a8 	load_32 s25, 120(sp)
   5410c:	1e f3 01 a8 	load_32 s24, 124(sp)
   54110:	de 03 02 05 	add_i sp, sp, 128
   54114:	1f 00 00 f0 	ret
   54118:	01 00 00 4f 	movehi s0, 1
   5411c:	00 a8 0a 00 	or s0, s0, 682
   54120:	8a ff ff f7 	b -472 <init_sdmmc_device+0x13c>
   54124:	40 00 00 f2 	bz s0, 8 <init_sdmmc_device+0x320>
   54128:	09 00 00 f6 	b 36 <init_sdmmc_device+0x340>
   5412c:	3e a0 01 a8 	load_32 s1, 104(sp)
   54130:	00 10 00 0f 	move s0, 4
   54134:	01 00 00 88 	store_32 s0, (s1)
   54138:	00 00 00 0f 	move s0, 0
   5413c:	f0 ff ff f7 	b -64 <init_sdmmc_device+0x2f0>
   54140:	01 00 00 4f 	movehi s0, 1
   54144:	00 20 03 00 	or s0, s0, 200
   54148:	80 ff ff f7 	b -512 <init_sdmmc_device+0x13c>
   5414c:	20 00 00 4f 	movehi s1, 0
   54150:	1e 10 00 88 	store_32 s0, 4(sp)
   54154:	01 b8 4e 00 	or s0, s1, 5038
   54158:	e6 ff ff f7 	b -104 <init_sdmmc_device+0x2e4>

000000000005415c send_sd_command:
   5415c:	43 00 00 4f 	movehi s2, 3
   54160:	00 00 01 00 	or s0, s0, 64
   54164:	e1 60 00 0a 	shr s7, s1, 24
   54168:	42 e0 6f 00 	or s2, s2, 7160
   5416c:	00 fd 03 01 	and s8, s0, 255
   54170:	61 40 00 0a 	shr s3, s1, 16
   54174:	02 00 54 c0 	add_i s0, s2, s8
   54178:	81 fc 03 01 	and s4, s1, 255
   5417c:	c3 fc 03 01 	and s6, s3, 255
   54180:	00 00 00 a0 	load_u8 s0, (s0)
   54184:	61 20 00 0a 	shr s3, s1, 8
   54188:	a3 fc 03 01 	and s5, s3, 255
   5418c:	00 04 00 0b 	shl s0, s0, 1
   54190:	78 fc ff 4f 	movehi s3, 524280
   54194:	00 80 33 c0 	xor s0, s0, s7
   54198:	02 00 50 c0 	add_i s0, s2, s0
   5419c:	23 00 03 00 	or s1, s3, 192
   541a0:	00 00 00 a0 	load_u8 s0, (s0)
   541a4:	00 04 00 0b 	shl s0, s0, 1
   541a8:	00 00 33 c0 	xor s0, s0, s6
   541ac:	02 00 50 c0 	add_i s0, s2, s0
   541b0:	00 00 00 a0 	load_u8 s0, (s0)
   541b4:	00 04 00 0b 	shl s0, s0, 1
   541b8:	00 80 32 c0 	xor s0, s0, s5
   541bc:	02 00 50 c0 	add_i s0, s2, s0
   541c0:	00 00 00 a0 	load_u8 s0, (s0)
   541c4:	00 04 00 0b 	shl s0, s0, 1
   541c8:	00 00 32 c0 	xor s0, s0, s4
   541cc:	02 00 50 c0 	add_i s0, s2, s0
   541d0:	43 20 03 00 	or s2, s3, 200
   541d4:	00 00 00 a0 	load_u8 s0, (s0)
   541d8:	01 01 00 88 	store_32 s8, (s1)
   541dc:	00 04 00 0b 	shl s0, s0, 1
   541e0:	02 01 00 a8 	load_32 s8, (s2)
   541e4:	08 05 00 01 	and s8, s8, 1
   541e8:	c8 ff ff f3 	bz s8, -8 <send_sd_command+0x84>
   541ec:	63 10 03 00 	or s3, s3, 196
   541f0:	03 01 00 a8 	load_32 s8, (s3)
   541f4:	e1 00 00 88 	store_32 s7, (s1)
   541f8:	e2 00 00 a8 	load_32 s7, (s2)
   541fc:	e7 04 00 01 	and s7, s7, 1
   54200:	c7 ff ff f3 	bz s7, -8 <send_sd_command+0x9c>
   54204:	e3 00 00 a8 	load_32 s7, (s3)
   54208:	c1 00 00 88 	store_32 s6, (s1)
   5420c:	c2 00 00 a8 	load_32 s6, (s2)
   54210:	c6 04 00 01 	and s6, s6, 1
   54214:	c6 ff ff f3 	bz s6, -8 <send_sd_command+0xb0>
   54218:	c3 00 00 a8 	load_32 s6, (s3)
   5421c:	a1 00 00 88 	store_32 s5, (s1)
   54220:	a2 00 00 a8 	load_32 s5, (s2)
   54224:	a5 04 00 01 	and s5, s5, 1
   54228:	c5 ff ff f3 	bz s5, -8 <send_sd_command+0xc4>
   5422c:	a3 00 00 a8 	load_32 s5, (s3)
   54230:	81 00 00 88 	store_32 s4, (s1)
   54234:	82 00 00 a8 	load_32 s4, (s2)
   54238:	84 04 00 01 	and s4, s4, 1
   5423c:	c4 ff ff f3 	bz s4, -8 <send_sd_command+0xd8>
   54240:	00 f8 03 01 	and s0, s0, 254
   54244:	83 00 00 a8 	load_32 s4, (s3)
   54248:	00 04 00 00 	or s0, s0, 1
   5424c:	01 00 00 88 	store_32 s0, (s1)
   54250:	02 00 00 a8 	load_32 s0, (s2)
   54254:	00 04 00 01 	and s0, s0, 1
   54258:	c0 ff ff f3 	bz s0, -8 <send_sd_command+0xf4>
   5425c:	80 00 00 0f 	move s4, 0
   54260:	03 00 00 a8 	load_32 s0, (s3)
   54264:	a0 fc 03 0f 	move s5, 255
   54268:	a1 00 00 88 	store_32 s5, (s1)
   5426c:	02 00 00 a8 	load_32 s0, (s2)
   54270:	00 04 00 01 	and s0, s0, 1
   54274:	c0 ff ff f3 	bz s0, -8 <send_sd_command+0x110>
   54278:	03 00 00 a8 	load_32 s0, (s3)
   5427c:	c0 fc 03 11 	cmpne_i s6, s0, 255
   54280:	86 00 00 f4 	bnz s6, 16 <send_sd_command+0x134>
   54284:	c4 90 01 18 	cmplt_u s6, s4, 100
   54288:	84 04 00 05 	add_i s4, s4, 1
   5428c:	e6 fe ff f5 	bnz s6, -36 <send_sd_command+0x10c>
   54290:	1f 00 00 f0 	ret

0000000000054294 read_sdmmc_device:
   54294:	de 03 fe 05 	add_i sp, sp, -128
   54298:	1e f3 01 88 	store_32 s24, 124(sp)
   5429c:	fe e3 01 88 	store_32 ra, 120(sp)
   542a0:	00 83 f0 c0 	move s24, s1
   542a4:	20 00 f0 c0 	move s1, s0
   542a8:	00 44 00 0f 	move s0, 17
   542ac:	ac ff ff f9 	call -336 <send_sd_command>
   542b0:	40 00 00 f4 	bnz s0, 8 <read_sdmmc_device+0x24>
   542b4:	07 00 00 f6 	b 28 <read_sdmmc_device+0x3c>
   542b8:	20 00 00 4f 	movehi s1, 0
   542bc:	1e 10 00 88 	store_32 s0, 4(sp)
   542c0:	01 44 45 00 	or s0, s1, 4433
   542c4:	1e 00 00 88 	store_32 s0, (sp)
   542c8:	c3 f6 ff f9 	call -9460 <printf>
   542cc:	15 00 00 f6 	b 84 <read_sdmmc_device+0x8c>
   542d0:	b8 fc ff 4f 	movehi s5, 524280
   542d4:	01 00 00 4f 	movehi s0, 1
   542d8:	60 fc 03 0f 	move s3, 255
   542dc:	45 00 03 00 	or s2, s5, 192
   542e0:	80 40 1c 00 	or s4, s0, 1808
   542e4:	25 20 03 00 	or s1, s5, 200
   542e8:	05 10 03 00 	or s0, s5, 196
   542ec:	62 00 00 88 	store_32 s3, (s2)
   542f0:	a1 00 00 a8 	load_32 s5, (s1)
   542f4:	a5 04 00 01 	and s5, s5, 1
   542f8:	c5 ff ff f3 	bz s5, -8 <read_sdmmc_device+0x5c>
   542fc:	a0 00 00 a8 	load_32 s5, (s0)
   54300:	a5 f8 03 11 	cmpne_i s5, s5, 254
   54304:	45 00 00 f4 	bnz s5, 8 <read_sdmmc_device+0x78>
   54308:	0b 00 00 f6 	b 44 <read_sdmmc_device+0xa0>
   5430c:	84 fc ff 05 	add_i s4, s4, -1
   54310:	e4 fe ff f5 	bnz s4, -36 <read_sdmmc_device+0x58>
   54314:	01 00 00 4f 	movehi s0, 1
   54318:	00 3c 39 00 	or s0, s0, 3663
   5431c:	8c f7 ff f9 	call -8656 <puts>
   54320:	00 fc ff 0f 	move s0, -1
   54324:	fe e3 01 a8 	load_32 ra, 120(sp)
   54328:	1e f3 01 a8 	load_32 s24, 124(sp)
   5432c:	de 03 02 05 	add_i sp, sp, 128
   54330:	1f 00 00 f0 	ret
   54334:	80 00 00 0f 	move s4, 0
   54338:	04 00 00 f6 	b 16 <read_sdmmc_device+0xb4>
   5433c:	d8 00 52 c0 	add_i s6, s24, s4
   54340:	84 04 00 05 	add_i s4, s4, 1
   54344:	a6 00 00 82 	store_8 s5, (s6)
   54348:	62 00 00 88 	store_32 s3, (s2)
   5434c:	a1 00 00 a8 	load_32 s5, (s1)
   54350:	a5 04 00 01 	and s5, s5, 1
   54354:	c5 ff ff f3 	bz s5, -8 <read_sdmmc_device+0xb8>
   54358:	a0 00 00 a8 	load_32 s5, (s0)
   5435c:	c4 00 08 18 	cmplt_u s6, s4, 512
   54360:	e6 fe ff f5 	bnz s6, -36 <read_sdmmc_device+0xa8>
   54364:	62 00 00 88 	store_32 s3, (s2)
   54368:	41 00 00 a8 	load_32 s2, (s1)
   5436c:	42 04 00 01 	and s2, s2, 1
   54370:	c2 ff ff f3 	bz s2, -8 <read_sdmmc_device+0xd4>
   54374:	00 00 00 a8 	load_32 s0, (s0)
   54378:	00 00 08 0f 	move s0, 512
   5437c:	fe e3 01 a8 	load_32 ra, 120(sp)
   54380:	1e f3 01 a8 	load_32 s24, 124(sp)
   54384:	de 03 02 05 	add_i sp, sp, 128
   54388:	1f 00 00 f0 	ret

000000000005438c write_sdmmc_device:
   5438c:	de 03 fe 05 	add_i sp, sp, -128
   54390:	1e f3 01 88 	store_32 s24, 124(sp)
   54394:	fe e3 01 88 	store_32 ra, 120(sp)
   54398:	00 83 f0 c0 	move s24, s1
   5439c:	20 00 f0 c0 	move s1, s0
   543a0:	00 60 00 0f 	move s0, 24
   543a4:	6e ff ff f9 	call -584 <send_sd_command>
   543a8:	a0 00 00 f2 	bz s0, 20 <write_sdmmc_device+0x30>
   543ac:	21 00 00 4f 	movehi s1, 1
   543b0:	1e 10 00 88 	store_32 s0, 4(sp)
   543b4:	01 ec 15 00 	or s0, s1, 1403
   543b8:	32 00 00 f6 	b 200 <write_sdmmc_device+0xf4>
   543bc:	58 fc ff 4f 	movehi s2, 524280
   543c0:	00 f8 03 0f 	move s0, 254
   543c4:	22 00 03 00 	or s1, s2, 192
   543c8:	01 00 00 88 	store_32 s0, (s1)
   543cc:	02 20 03 00 	or s0, s2, 200
   543d0:	60 00 00 a8 	load_32 s3, (s0)
   543d4:	63 04 00 01 	and s3, s3, 1
   543d8:	c3 ff ff f3 	bz s3, -8 <write_sdmmc_device+0x44>
   543dc:	42 10 03 00 	or s2, s2, 196
   543e0:	62 00 00 a8 	load_32 s3, (s2)
   543e4:	60 00 00 0f 	move s3, 0
   543e8:	98 80 51 c0 	add_i s4, s24, s3
   543ec:	84 00 00 a0 	load_u8 s4, (s4)
   543f0:	81 00 00 88 	store_32 s4, (s1)
   543f4:	80 00 00 a8 	load_32 s4, (s0)
   543f8:	84 04 00 01 	and s4, s4, 1
   543fc:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0x68>
   54400:	63 04 00 05 	add_i s3, s3, 1
   54404:	a2 00 00 a8 	load_32 s5, (s2)
   54408:	83 00 08 18 	cmplt_u s4, s3, 512
   5440c:	e4 fe ff f5 	bnz s4, -36 <write_sdmmc_device+0x5c>
   54410:	60 fc 03 0f 	move s3, 255
   54414:	61 00 00 88 	store_32 s3, (s1)
   54418:	80 00 00 a8 	load_32 s4, (s0)
   5441c:	84 04 00 01 	and s4, s4, 1
   54420:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0x8c>
   54424:	82 00 00 a8 	load_32 s4, (s2)
   54428:	61 00 00 88 	store_32 s3, (s1)
   5442c:	80 00 00 a8 	load_32 s4, (s0)
   54430:	84 04 00 01 	and s4, s4, 1
   54434:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0xa0>
   54438:	82 00 00 a8 	load_32 s4, (s2)
   5443c:	61 00 00 88 	store_32 s3, (s1)
   54440:	20 00 00 a8 	load_32 s1, (s0)
   54444:	21 04 00 01 	and s1, s1, 1
   54448:	c1 ff ff f3 	bz s1, -8 <write_sdmmc_device+0xb4>
   5444c:	02 00 00 a8 	load_32 s0, (s2)
   54450:	20 7c 00 01 	and s1, s0, 31
   54454:	21 14 00 10 	cmpeq_i s1, s1, 5
   54458:	41 00 00 f4 	bnz s1, 8 <write_sdmmc_device+0xd4>
   5445c:	06 00 00 f6 	b 24 <write_sdmmc_device+0xe8>
   54460:	00 00 08 0f 	move s0, 512
   54464:	fe e3 01 a8 	load_32 ra, 120(sp)
   54468:	1e f3 01 a8 	load_32 s24, 124(sp)
   5446c:	de 03 02 05 	add_i sp, sp, 128
   54470:	1f 00 00 f0 	ret
   54474:	21 00 00 4f 	movehi s1, 1
   54478:	1e 10 00 88 	store_32 s0, 4(sp)
   5447c:	01 4c 5a 00 	or s0, s1, 5779
   54480:	1e 00 00 88 	store_32 s0, (sp)
   54484:	54 f6 ff f9 	call -9904 <printf>
   54488:	00 fc ff 0f 	move s0, -1
   5448c:	fe e3 01 a8 	load_32 ra, 120(sp)
   54490:	1e f3 01 a8 	load_32 s24, 124(sp)
   54494:	de 03 02 05 	add_i sp, sp, 128
   54498:	1f 00 00 f0 	ret

000000000005449c init_vga:
   5449c:	de 03 ff 05 	add_i sp, sp, -64
   544a0:	fe f3 00 88 	store_32 ra, 60(sp)
   544a4:	20 04 00 10 	cmpeq_i s1, s0, 1
   544a8:	e1 00 00 f4 	bnz s1, 28 <init_vga+0x28>
   544ac:	e0 01 00 f4 	bnz s0, 60 <init_vga+0x4c>
   544b0:	00 28 00 0f 	move s0, 10
   544b4:	20 84 00 0f 	move s1, 33
   544b8:	40 00 00 0f 	move s2, 0
   544bc:	60 80 07 0f 	move s3, 480
   544c0:	05 00 00 f6 	b 20 <init_vga+0x38>
   544c4:	00 30 00 0f 	move s0, 12
   544c8:	20 8c 00 0f 	move s1, 35
   544cc:	40 04 00 0f 	move s2, 1
   544d0:	60 40 06 0f 	move s3, 400
   544d4:	09 00 00 f8 	call 36 <compile_microcode>
   544d8:	00 20 00 4f 	movehi s0, 256
   544dc:	fe f3 00 a8 	load_32 ra, 60(sp)
   544e0:	de 03 01 05 	add_i sp, sp, 64
   544e4:	1f 00 00 f0 	ret
   544e8:	00 00 00 0f 	move s0, 0
   544ec:	fe f3 00 a8 	load_32 ra, 60(sp)
   544f0:	de 03 01 05 	add_i sp, sp, 64
   544f4:	1f 00 00 f0 	ret

00000000000544f8 compile_microcode:
   544f8:	42 00 00 10 	cmpeq_i s2, s2, 0
   544fc:	62 00 00 f4 	bnz s2, 12 <compile_microcode+0x10>
   54500:	40 10 00 0f 	move s2, 4
   54504:	02 00 00 f6 	b 8 <compile_microcode+0x14>
   54508:	40 30 00 0f 	move s2, 12
   5450c:	80 0c 00 4f 	movehi s4, 96
   54510:	c0 0c 00 4f 	movehi s6, 96
   54514:	e0 00 00 0f 	move s7, 0
   54518:	a4 d0 66 00 	or s5, s4, 6580
   5451c:	98 fc ff 4f 	movehi s4, 524280
   54520:	c6 e0 66 00 	or s6, s6, 6584
   54524:	45 00 00 88 	store_32 s2, (s5)
   54528:	00 10 00 0b 	shl s0, s0, 4
   5452c:	44 00 06 00 	or s2, s4, 384
   54530:	e6 00 00 88 	store_32 s7, (s6)
   54534:	50 01 00 4f 	movehi s10, 16
   54538:	21 10 00 0b 	shl s1, s1, 4
   5453c:	e2 00 00 88 	store_32 s7, (s2)
   54540:	e5 00 00 a8 	load_32 s7, (s5)
   54544:	e0 80 03 c0 	or s7, s0, s7
   54548:	04 10 06 00 	or s0, s4, 388
   5454c:	e7 00 05 c0 	or s7, s7, s10
   54550:	e0 00 00 88 	store_32 s7, (s0)
   54554:	e6 00 00 a8 	load_32 s7, (s6)
   54558:	07 05 00 05 	add_i s8, s7, 1
   5455c:	06 01 00 88 	store_32 s8, (s6)
   54560:	e5 00 00 a8 	load_32 s7, (s5)
   54564:	08 11 00 0b 	shl s8, s8, 4
   54568:	e7 c0 03 00 	or s7, s7, 240
   5456c:	e0 00 00 88 	store_32 s7, (s0)
   54570:	e6 00 00 a8 	load_32 s7, (s6)
   54574:	e7 04 00 05 	add_i s7, s7, 1
   54578:	e6 00 00 88 	store_32 s7, (s6)
   5457c:	25 01 00 a8 	load_32 s9, (s5)
   54580:	e7 10 00 0b 	shl s7, s7, 4
   54584:	27 81 04 c0 	or s9, s7, s9
   54588:	e0 04 00 4f 	movehi s7, 32
   5458c:	29 81 03 c0 	or s9, s9, s7
   54590:	20 01 00 88 	store_32 s9, (s0)
   54594:	26 01 00 a8 	load_32 s9, (s6)
   54598:	29 05 00 05 	add_i s9, s9, 1
   5459c:	26 01 00 88 	store_32 s9, (s6)
   545a0:	25 01 00 a8 	load_32 s9, (s5)
   545a4:	29 11 00 03 	xor s9, s9, 4
   545a8:	25 01 00 88 	store_32 s9, (s5)
   545ac:	29 c1 17 00 	or s9, s9, 1520
   545b0:	20 01 00 88 	store_32 s9, (s0)
   545b4:	26 01 00 a8 	load_32 s9, (s6)
   545b8:	29 05 00 05 	add_i s9, s9, 1
   545bc:	26 01 00 88 	store_32 s9, (s6)
   545c0:	65 01 00 a8 	load_32 s11, (s5)
   545c4:	29 11 00 0b 	shl s9, s9, 4
   545c8:	29 81 05 c0 	or s9, s9, s11
   545cc:	29 81 03 c0 	or s9, s9, s7
   545d0:	20 01 00 88 	store_32 s9, (s0)
   545d4:	26 01 00 a8 	load_32 s9, (s6)
   545d8:	29 05 00 05 	add_i s9, s9, 1
   545dc:	26 01 00 88 	store_32 s9, (s6)
   545e0:	25 01 00 a8 	load_32 s9, (s5)
   545e4:	29 11 00 03 	xor s9, s9, 4
   545e8:	25 01 00 88 	store_32 s9, (s5)
   545ec:	29 c1 0b 00 	or s9, s9, 752
   545f0:	20 01 00 88 	store_32 s9, (s0)
   545f4:	26 01 00 a8 	load_32 s9, (s6)
   545f8:	29 05 00 05 	add_i s9, s9, 1
   545fc:	26 01 00 88 	store_32 s9, (s6)
   54600:	65 01 00 a8 	load_32 s11, (s5)
   54604:	29 11 00 0b 	shl s9, s9, 4
   54608:	29 81 05 c0 	or s9, s9, s11
   5460c:	29 81 03 c0 	or s9, s9, s7
   54610:	20 01 00 88 	store_32 s9, (s0)
   54614:	26 01 00 a8 	load_32 s9, (s6)
   54618:	29 05 00 05 	add_i s9, s9, 1
   5461c:	26 01 00 88 	store_32 s9, (s6)
   54620:	21 01 00 4f 	movehi s9, 1
   54624:	65 01 00 a8 	load_32 s11, (s5)
   54628:	29 c1 1f 00 	or s9, s9, 2032
   5462c:	6b 81 04 c0 	or s11, s11, s9
   54630:	60 01 00 88 	store_32 s11, (s0)
   54634:	66 01 00 a8 	load_32 s11, (s6)
   54638:	6b 05 00 05 	add_i s11, s11, 1
   5463c:	66 01 00 88 	store_32 s11, (s6)
   54640:	85 01 00 a8 	load_32 s12, (s5)
   54644:	6b 11 00 0b 	shl s11, s11, 4
   54648:	6b 01 06 c0 	or s11, s11, s12
   5464c:	8a 81 00 00 	or s12, s10, 32
   54650:	6b 81 03 c0 	or s11, s11, s7
   54654:	60 01 00 88 	store_32 s11, (s0)
   54658:	66 01 00 a8 	load_32 s11, (s6)
   5465c:	6b 05 00 05 	add_i s11, s11, 1
   54660:	66 01 00 88 	store_32 s11, (s6)
   54664:	65 01 00 a8 	load_32 s11, (s5)
   54668:	68 81 05 c0 	or s11, s8, s11
   5466c:	10 05 00 4f 	movehi s8, 48
   54670:	6b 01 04 c0 	or s11, s11, s8
   54674:	60 01 00 88 	store_32 s11, (s0)
   54678:	66 01 00 a8 	load_32 s11, (s6)
   5467c:	6b 05 00 05 	add_i s11, s11, 1
   54680:	66 01 00 88 	store_32 s11, (s6)
   54684:	65 01 00 a8 	load_32 s11, (s5)
   54688:	6b 21 00 03 	xor s11, s11, 8
   5468c:	65 01 00 88 	store_32 s11, (s5)
   54690:	6b 01 06 c0 	or s11, s11, s12
   54694:	60 01 00 88 	store_32 s11, (s0)
   54698:	66 01 00 a8 	load_32 s11, (s6)
   5469c:	6b 05 00 05 	add_i s11, s11, 1
   546a0:	66 01 00 88 	store_32 s11, (s6)
   546a4:	85 01 00 a8 	load_32 s12, (s5)
   546a8:	6b 11 00 0b 	shl s11, s11, 4
   546ac:	8c c1 03 00 	or s12, s12, 240
   546b0:	80 01 00 88 	store_32 s12, (s0)
   546b4:	86 01 00 a8 	load_32 s12, (s6)
   546b8:	8c 05 00 05 	add_i s12, s12, 1
   546bc:	86 01 00 88 	store_32 s12, (s6)
   546c0:	a5 01 00 a8 	load_32 s13, (s5)
   546c4:	8c 11 00 0b 	shl s12, s12, 4
   546c8:	8c 81 06 c0 	or s12, s12, s13
   546cc:	8c 81 03 c0 	or s12, s12, s7
   546d0:	80 01 00 88 	store_32 s12, (s0)
   546d4:	86 01 00 a8 	load_32 s12, (s6)
   546d8:	8c 05 00 05 	add_i s12, s12, 1
   546dc:	86 01 00 88 	store_32 s12, (s6)
   546e0:	85 01 00 a8 	load_32 s12, (s5)
   546e4:	8c 11 00 03 	xor s12, s12, 4
   546e8:	85 01 00 88 	store_32 s12, (s5)
   546ec:	8c c1 17 00 	or s12, s12, 1520
   546f0:	80 01 00 88 	store_32 s12, (s0)
   546f4:	86 01 00 a8 	load_32 s12, (s6)
   546f8:	8c 05 00 05 	add_i s12, s12, 1
   546fc:	86 01 00 88 	store_32 s12, (s6)
   54700:	a5 01 00 a8 	load_32 s13, (s5)
   54704:	8c 11 00 0b 	shl s12, s12, 4
   54708:	8c 81 06 c0 	or s12, s12, s13
   5470c:	8c 81 03 c0 	or s12, s12, s7
   54710:	80 01 00 88 	store_32 s12, (s0)
   54714:	86 01 00 a8 	load_32 s12, (s6)
   54718:	8c 05 00 05 	add_i s12, s12, 1
   5471c:	86 01 00 88 	store_32 s12, (s6)
   54720:	85 01 00 a8 	load_32 s12, (s5)
   54724:	8c 11 00 03 	xor s12, s12, 4
   54728:	85 01 00 88 	store_32 s12, (s5)
   5472c:	8c c1 0b 00 	or s12, s12, 752
   54730:	80 01 00 88 	store_32 s12, (s0)
   54734:	86 01 00 a8 	load_32 s12, (s6)
   54738:	8c 05 00 05 	add_i s12, s12, 1
   5473c:	86 01 00 88 	store_32 s12, (s6)
   54740:	a5 01 00 a8 	load_32 s13, (s5)
   54744:	8c 11 00 0b 	shl s12, s12, 4
   54748:	8c 81 06 c0 	or s12, s12, s13
   5474c:	8c 81 03 c0 	or s12, s12, s7
   54750:	80 01 00 88 	store_32 s12, (s0)
   54754:	86 01 00 a8 	load_32 s12, (s6)
   54758:	8c 05 00 05 	add_i s12, s12, 1
   5475c:	86 01 00 88 	store_32 s12, (s6)
   54760:	85 01 00 a8 	load_32 s12, (s5)
   54764:	8c 81 04 c0 	or s12, s12, s9
   54768:	80 01 00 88 	store_32 s12, (s0)
   5476c:	86 01 00 a8 	load_32 s12, (s6)
   54770:	8c 05 00 05 	add_i s12, s12, 1
   54774:	86 01 00 88 	store_32 s12, (s6)
   54778:	a5 01 00 a8 	load_32 s13, (s5)
   5477c:	8c 11 00 0b 	shl s12, s12, 4
   54780:	8c 81 06 c0 	or s12, s12, s13
   54784:	8c 81 03 c0 	or s12, s12, s7
   54788:	80 01 00 88 	store_32 s12, (s0)
   5478c:	86 01 00 a8 	load_32 s12, (s6)
   54790:	8c 05 00 05 	add_i s12, s12, 1
   54794:	86 01 00 88 	store_32 s12, (s6)
   54798:	85 01 00 a8 	load_32 s12, (s5)
   5479c:	6b 01 06 c0 	or s11, s11, s12
   547a0:	6b 01 04 c0 	or s11, s11, s8
   547a4:	60 01 00 88 	store_32 s11, (s0)
   547a8:	66 01 00 a8 	load_32 s11, (s6)
   547ac:	6b 05 00 05 	add_i s11, s11, 1
   547b0:	66 01 00 88 	store_32 s11, (s6)
   547b4:	65 01 00 a8 	load_32 s11, (s5)
   547b8:	6b 21 00 03 	xor s11, s11, 8
   547bc:	65 01 00 88 	store_32 s11, (s5)
   547c0:	21 80 05 c0 	or s1, s1, s11
   547c4:	21 00 05 c0 	or s1, s1, s10
   547c8:	20 00 00 88 	store_32 s1, (s0)
   547cc:	26 00 00 a8 	load_32 s1, (s6)
   547d0:	21 04 00 05 	add_i s1, s1, 1
   547d4:	26 00 00 88 	store_32 s1, (s6)
   547d8:	65 01 00 a8 	load_32 s11, (s5)
   547dc:	21 10 00 0b 	shl s1, s1, 4
   547e0:	6b c1 03 00 	or s11, s11, 240
   547e4:	60 01 00 88 	store_32 s11, (s0)
   547e8:	66 01 00 a8 	load_32 s11, (s6)
   547ec:	6b 05 00 05 	add_i s11, s11, 1
   547f0:	66 01 00 88 	store_32 s11, (s6)
   547f4:	85 01 00 a8 	load_32 s12, (s5)
   547f8:	6b 11 00 0b 	shl s11, s11, 4
   547fc:	6b 01 06 c0 	or s11, s11, s12
   54800:	6b 81 03 c0 	or s11, s11, s7
   54804:	60 01 00 88 	store_32 s11, (s0)
   54808:	66 01 00 a8 	load_32 s11, (s6)
   5480c:	6b 05 00 05 	add_i s11, s11, 1
   54810:	66 01 00 88 	store_32 s11, (s6)
   54814:	65 01 00 a8 	load_32 s11, (s5)
   54818:	6b 11 00 03 	xor s11, s11, 4
   5481c:	65 01 00 88 	store_32 s11, (s5)
   54820:	6b c1 17 00 	or s11, s11, 1520
   54824:	60 01 00 88 	store_32 s11, (s0)
   54828:	66 01 00 a8 	load_32 s11, (s6)
   5482c:	6b 05 00 05 	add_i s11, s11, 1
   54830:	66 01 00 88 	store_32 s11, (s6)
   54834:	85 01 00 a8 	load_32 s12, (s5)
   54838:	6b 11 00 0b 	shl s11, s11, 4
   5483c:	6b 01 06 c0 	or s11, s11, s12
   54840:	6b 81 03 c0 	or s11, s11, s7
   54844:	60 01 00 88 	store_32 s11, (s0)
   54848:	66 01 00 a8 	load_32 s11, (s6)
   5484c:	6b 05 00 05 	add_i s11, s11, 1
   54850:	66 01 00 88 	store_32 s11, (s6)
   54854:	65 01 00 a8 	load_32 s11, (s5)
   54858:	6b 11 00 03 	xor s11, s11, 4
   5485c:	65 01 00 88 	store_32 s11, (s5)
   54860:	6b c1 0b 00 	or s11, s11, 752
   54864:	60 01 00 88 	store_32 s11, (s0)
   54868:	66 01 00 a8 	load_32 s11, (s6)
   5486c:	6b 05 00 05 	add_i s11, s11, 1
   54870:	66 01 00 88 	store_32 s11, (s6)
   54874:	85 01 00 a8 	load_32 s12, (s5)
   54878:	6b 11 00 0b 	shl s11, s11, 4
   5487c:	6b 01 06 c0 	or s11, s11, s12
   54880:	6b 81 03 c0 	or s11, s11, s7
   54884:	60 01 00 88 	store_32 s11, (s0)
   54888:	66 01 00 a8 	load_32 s11, (s6)
   5488c:	6b 05 00 05 	add_i s11, s11, 1
   54890:	66 01 00 88 	store_32 s11, (s6)
   54894:	65 01 00 a8 	load_32 s11, (s5)
   54898:	6b 81 04 c0 	or s11, s11, s9
   5489c:	60 01 00 88 	store_32 s11, (s0)
   548a0:	66 01 00 a8 	load_32 s11, (s6)
   548a4:	6b 05 00 05 	add_i s11, s11, 1
   548a8:	66 01 00 88 	store_32 s11, (s6)
   548ac:	85 01 00 a8 	load_32 s12, (s5)
   548b0:	6b 11 00 0b 	shl s11, s11, 4
   548b4:	6b 01 06 c0 	or s11, s11, s12
   548b8:	6b 81 03 c0 	or s11, s11, s7
   548bc:	60 01 00 88 	store_32 s11, (s0)
   548c0:	66 01 00 a8 	load_32 s11, (s6)
   548c4:	6b 05 00 05 	add_i s11, s11, 1
   548c8:	66 01 00 88 	store_32 s11, (s6)
   548cc:	65 01 00 a8 	load_32 s11, (s5)
   548d0:	21 80 05 c0 	or s1, s1, s11
   548d4:	63 11 00 0b 	shl s11, s3, 4
   548d8:	21 00 04 c0 	or s1, s1, s8
   548dc:	20 00 00 88 	store_32 s1, (s0)
   548e0:	26 00 00 a8 	load_32 s1, (s6)
   548e4:	21 04 00 05 	add_i s1, s1, 1
   548e8:	26 00 00 88 	store_32 s1, (s6)
   548ec:	25 00 00 a8 	load_32 s1, (s5)
   548f0:	2b 80 00 c0 	or s1, s11, s1
   548f4:	21 00 05 c0 	or s1, s1, s10
   548f8:	20 00 00 88 	store_32 s1, (s0)
   548fc:	26 00 00 a8 	load_32 s1, (s6)
   54900:	21 04 00 05 	add_i s1, s1, 1
   54904:	26 00 00 88 	store_32 s1, (s6)
   54908:	45 01 00 a8 	load_32 s10, (s5)
   5490c:	21 10 00 0b 	shl s1, s1, 4
   54910:	4a c1 03 00 	or s10, s10, 240
   54914:	40 01 00 88 	store_32 s10, (s0)
   54918:	46 01 00 a8 	load_32 s10, (s6)
   5491c:	4a 05 00 05 	add_i s10, s10, 1
   54920:	46 01 00 88 	store_32 s10, (s6)
   54924:	65 01 00 a8 	load_32 s11, (s5)
   54928:	4a 11 00 0b 	shl s10, s10, 4
   5492c:	4a 81 05 c0 	or s10, s10, s11
   54930:	4a 81 03 c0 	or s10, s10, s7
   54934:	40 01 00 88 	store_32 s10, (s0)
   54938:	46 01 00 a8 	load_32 s10, (s6)
   5493c:	4a 05 00 05 	add_i s10, s10, 1
   54940:	46 01 00 88 	store_32 s10, (s6)
   54944:	45 01 00 a8 	load_32 s10, (s5)
   54948:	4a 11 00 03 	xor s10, s10, 4
   5494c:	45 01 00 88 	store_32 s10, (s5)
   54950:	4a c1 17 00 	or s10, s10, 1520
   54954:	40 01 00 88 	store_32 s10, (s0)
   54958:	46 01 00 a8 	load_32 s10, (s6)
   5495c:	4a 05 00 05 	add_i s10, s10, 1
   54960:	46 01 00 88 	store_32 s10, (s6)
   54964:	65 01 00 a8 	load_32 s11, (s5)
   54968:	4a 11 00 0b 	shl s10, s10, 4
   5496c:	4a 81 05 c0 	or s10, s10, s11
   54970:	4a 81 03 c0 	or s10, s10, s7
   54974:	40 01 00 88 	store_32 s10, (s0)
   54978:	46 01 00 a8 	load_32 s10, (s6)
   5497c:	4a 05 00 05 	add_i s10, s10, 1
   54980:	46 01 00 88 	store_32 s10, (s6)
   54984:	45 01 00 a8 	load_32 s10, (s5)
   54988:	4a 11 00 03 	xor s10, s10, 4
   5498c:	45 01 00 88 	store_32 s10, (s5)
   54990:	4a c1 0b 00 	or s10, s10, 752
   54994:	40 01 00 88 	store_32 s10, (s0)
   54998:	46 01 00 a8 	load_32 s10, (s6)
   5499c:	4a 05 00 05 	add_i s10, s10, 1
   549a0:	46 01 00 88 	store_32 s10, (s6)
   549a4:	65 01 00 a8 	load_32 s11, (s5)
   549a8:	4a 11 00 0b 	shl s10, s10, 4
   549ac:	4a 81 05 c0 	or s10, s10, s11
   549b0:	4a 81 03 c0 	or s10, s10, s7
   549b4:	40 01 00 88 	store_32 s10, (s0)
   549b8:	46 01 00 a8 	load_32 s10, (s6)
   549bc:	4a 05 00 05 	add_i s10, s10, 1
   549c0:	46 01 00 88 	store_32 s10, (s6)
   549c4:	45 01 00 a8 	load_32 s10, (s5)
   549c8:	4a 05 00 03 	xor s10, s10, 1
   549cc:	45 01 00 88 	store_32 s10, (s5)
   549d0:	2a 81 04 c0 	or s9, s10, s9
   549d4:	20 01 00 88 	store_32 s9, (s0)
   549d8:	26 01 00 a8 	load_32 s9, (s6)
   549dc:	29 05 00 05 	add_i s9, s9, 1
   549e0:	26 01 00 88 	store_32 s9, (s6)
   549e4:	45 01 00 a8 	load_32 s10, (s5)
   549e8:	29 11 00 0b 	shl s9, s9, 4
   549ec:	29 01 05 c0 	or s9, s9, s10
   549f0:	e9 80 03 c0 	or s7, s9, s7
   549f4:	e0 00 00 88 	store_32 s7, (s0)
   549f8:	e6 00 00 a8 	load_32 s7, (s6)
   549fc:	e7 04 00 05 	add_i s7, s7, 1
   54a00:	e6 00 00 88 	store_32 s7, (s6)
   54a04:	e5 00 00 a8 	load_32 s7, (s5)
   54a08:	e7 04 00 03 	xor s7, s7, 1
   54a0c:	e5 00 00 88 	store_32 s7, (s5)
   54a10:	21 80 03 c0 	or s1, s1, s7
   54a14:	21 00 04 c0 	or s1, s1, s8
   54a18:	20 00 00 88 	store_32 s1, (s0)
   54a1c:	26 00 00 a8 	load_32 s1, (s6)
   54a20:	21 04 00 05 	add_i s1, s1, 1
   54a24:	26 00 00 88 	store_32 s1, (s6)
   54a28:	25 00 00 a8 	load_32 s1, (s5)
   54a2c:	21 08 00 00 	or s1, s1, 2
   54a30:	20 00 00 88 	store_32 s1, (s0)
   54a34:	04 20 06 00 	or s0, s4, 392
   54a38:	84 30 06 00 	or s4, s4, 396
   54a3c:	20 20 00 4f 	movehi s1, 256
   54a40:	20 00 00 88 	store_32 s1, (s0)
   54a44:	03 00 0a 07 	mull_i s0, s3, 640
   54a48:	04 00 00 88 	store_32 s0, (s4)
   54a4c:	00 04 00 0f 	move s0, 1
   54a50:	02 00 00 88 	store_32 s0, (s2)
   54a54:	1f 00 00 f0 	ret

0000000000054a58 __divsi3:
; {
   54a58:	de 03 ff 05 	add_i sp, sp, -64
   54a5c:	fe f3 00 88 	store_32 ra, 60(sp)
   54a60:	40 80 f0 c0 	move s2, s1
   54a64:	60 00 f0 c0 	move s3, s0
   54a68:	1e e0 00 88 	store_32 s0, 56(sp)
   54a6c:	3e d0 00 88 	store_32 s1, 52(sp)
   54a70:	00 7c 00 0f 	move s0, 31
; const int bits_in_word_m1 = (int)(sizeof(si_int) * CHAR_BIT) - 1;
   54a74:	1e c0 00 88 	store_32 s0, 48(sp)
; si_int s_a = a >> bits_in_word_m1;           /* s_a = a < 0 ? -1 : 0 */
   54a78:	1e e0 00 a8 	load_32 s0, 56(sp)
   54a7c:	00 7c 00 09 	ashr s0, s0, 31
   54a80:	1e b0 00 88 	store_32 s0, 44(sp)
; si_int s_b = b >> bits_in_word_m1;           /* s_b = b < 0 ? -1 : 0 */
   54a84:	1e d0 00 a8 	load_32 s0, 52(sp)
   54a88:	00 7c 00 09 	ashr s0, s0, 31
   54a8c:	1e a0 00 88 	store_32 s0, 40(sp)
; a = (a ^ s_a) - s_a;                         /* negate if s_a == -1 */
   54a90:	1e e0 00 a8 	load_32 s0, 56(sp)
   54a94:	3e b0 00 a8 	load_32 s1, 44(sp)
   54a98:	00 80 30 c0 	xor s0, s0, s1
   54a9c:	00 80 60 c0 	sub_i s0, s0, s1
   54aa0:	1e e0 00 88 	store_32 s0, 56(sp)
; b = (b ^ s_b) - s_b;                         /* negate if s_b == -1 */
   54aa4:	1e d0 00 a8 	load_32 s0, 52(sp)
   54aa8:	3e a0 00 a8 	load_32 s1, 40(sp)
   54aac:	00 80 30 c0 	xor s0, s0, s1
   54ab0:	00 80 60 c0 	sub_i s0, s0, s1
   54ab4:	1e d0 00 88 	store_32 s0, 52(sp)
; s_a ^= s_b;                                  /* sign of quotient */
   54ab8:	1e a0 00 a8 	load_32 s0, 40(sp)
   54abc:	3e b0 00 a8 	load_32 s1, 44(sp)
   54ac0:	01 00 30 c0 	xor s0, s1, s0
   54ac4:	1e b0 00 88 	store_32 s0, 44(sp)
; return ((su_int)a/(su_int)b ^ s_a) - s_a;    /* negate if s_a == -1 */
   54ac8:	1e e0 00 a8 	load_32 s0, 56(sp)
   54acc:	3e d0 00 a8 	load_32 s1, 52(sp)
   54ad0:	9c 00 00 a8 	load_32 s4, (gp)
   54ad4:	5e 90 00 88 	store_32 s2, 36(sp)
   54ad8:	7e 80 00 88 	store_32 s3, 32(sp)
   54adc:	84 00 00 fc 	call s4
   54ae0:	3e b0 00 a8 	load_32 s1, 44(sp)
   54ae4:	00 80 30 c0 	xor s0, s0, s1
   54ae8:	00 80 60 c0 	sub_i s0, s0, s1
   54aec:	fe f3 00 a8 	load_32 ra, 60(sp)
   54af0:	de 03 01 05 	add_i sp, sp, 64
   54af4:	1f 00 00 f0 	ret

0000000000054af8 __modsi3:
; {
   54af8:	de 03 ff 05 	add_i sp, sp, -64
   54afc:	fe f3 00 88 	store_32 ra, 60(sp)
   54b00:	40 80 f0 c0 	move s2, s1
   54b04:	60 00 f0 c0 	move s3, s0
   54b08:	1e e0 00 88 	store_32 s0, 56(sp)
   54b0c:	3e d0 00 88 	store_32 s1, 52(sp)
; return a - __divsi3(a, b) * b;
   54b10:	1e e0 00 a8 	load_32 s0, 56(sp)
   54b14:	3e d0 00 a8 	load_32 s1, 52(sp)
   54b18:	9c 10 00 a8 	load_32 s4, 4(gp)
   54b1c:	1e c0 00 88 	store_32 s0, 48(sp)
   54b20:	5e b0 00 88 	store_32 s2, 44(sp)
   54b24:	7e a0 00 88 	store_32 s3, 40(sp)
   54b28:	84 00 00 fc 	call s4
   54b2c:	3e d0 00 a8 	load_32 s1, 52(sp)
   54b30:	00 80 70 c0 	mull_i s0, s0, s1
   54b34:	3e c0 00 a8 	load_32 s1, 48(sp)
   54b38:	01 00 60 c0 	sub_i s0, s1, s0
   54b3c:	fe f3 00 a8 	load_32 ra, 60(sp)
   54b40:	de 03 01 05 	add_i sp, sp, 64
   54b44:	1f 00 00 f0 	ret

0000000000054b48 __udivdi3:
; {
   54b48:	de 03 ff 05 	add_i sp, sp, -64
   54b4c:	fe f3 00 88 	store_32 ra, 60(sp)
   54b50:	80 80 f1 c0 	move s4, s3
   54b54:	a0 00 f1 c0 	move s5, s2
   54b58:	c0 80 f0 c0 	move s6, s1
   54b5c:	e0 00 f0 c0 	move s7, s0
   54b60:	1e c1 00 05 	add_i s8, sp, 48
   54b64:	08 11 00 00 	or s8, s8, 4
   54b68:	28 00 00 88 	store_32 s1, (s8)
   54b6c:	1e c0 00 88 	store_32 s0, 48(sp)
   54b70:	1e a0 00 05 	add_i s0, sp, 40
   54b74:	00 10 00 00 	or s0, s0, 4
   54b78:	60 00 00 88 	store_32 s3, (s0)
   54b7c:	5e a0 00 88 	store_32 s2, 40(sp)
; return __udivmoddi4(a, b, 0);
   54b80:	28 00 00 a8 	load_32 s1, (s8)
   54b84:	5e c0 00 a8 	load_32 s2, 48(sp)
   54b88:	60 00 00 a8 	load_32 s3, (s0)
   54b8c:	1e a0 00 a8 	load_32 s0, 40(sp)
   54b90:	1c 21 00 a8 	load_32 s8, 8(gp)
   54b94:	20 01 00 0f 	move s9, 0
   54b98:	1e 90 00 88 	store_32 s0, 36(sp)
   54b9c:	00 00 f1 c0 	move s0, s2
   54ba0:	5e 90 00 a8 	load_32 s2, 36(sp)
   54ba4:	9e 80 00 88 	store_32 s4, 32(sp)
   54ba8:	80 80 f4 c0 	move s4, s9
   54bac:	be 70 00 88 	store_32 s5, 28(sp)
   54bb0:	de 60 00 88 	store_32 s6, 24(sp)
   54bb4:	fe 50 00 88 	store_32 s7, 20(sp)
   54bb8:	08 01 00 fc 	call s8
   54bbc:	fe f3 00 a8 	load_32 ra, 60(sp)
   54bc0:	de 03 01 05 	add_i sp, sp, 64
   54bc4:	1f 00 00 f0 	ret

0000000000054bc8 __udivmoddi4:
; {
   54bc8:	de 03 fd 05 	add_i sp, sp, -192
   54bcc:	fe f3 02 88 	store_32 ra, 188(sp)
   54bd0:	a0 80 f1 c0 	move s5, s3
   54bd4:	c0 00 f1 c0 	move s6, s2
   54bd8:	e0 80 f0 c0 	move s7, s1
   54bdc:	00 01 f0 c0 	move s8, s0
   54be0:	20 01 f2 c0 	move s9, s4
   54be4:	5e a1 02 05 	add_i s10, sp, 168
   54be8:	4a 11 00 00 	or s10, s10, 4
   54bec:	2a 00 00 88 	store_32 s1, (s10)
   54bf0:	1e a0 02 88 	store_32 s0, 168(sp)
   54bf4:	1e 80 02 05 	add_i s0, sp, 160
   54bf8:	00 10 00 00 	or s0, s0, 4
   54bfc:	60 00 00 88 	store_32 s3, (s0)
   54c00:	5e 80 02 88 	store_32 s2, 160(sp)
   54c04:	9e 70 02 88 	store_32 s4, 156(sp)
   54c08:	20 80 00 0f 	move s1, 32
; const unsigned n_uword_bits = sizeof(su_int) * CHAR_BIT;
   54c0c:	3e 60 02 88 	store_32 s1, 152(sp)
   54c10:	20 00 01 0f 	move s1, 64
; const unsigned n_udword_bits = sizeof(du_int) * CHAR_BIT;
   54c14:	3e 50 02 88 	store_32 s1, 148(sp)
; n.all = a;
   54c18:	2a 00 00 a8 	load_32 s1, (s10)
   54c1c:	5e a0 02 a8 	load_32 s2, 168(sp)
   54c20:	7e 20 02 05 	add_i s3, sp, 136
   54c24:	63 10 00 00 	or s3, s3, 4
   54c28:	23 00 00 88 	store_32 s1, (s3)
   54c2c:	5e 20 02 88 	store_32 s2, 136(sp)
; d.all = b;
   54c30:	00 00 00 a8 	load_32 s0, (s0)
   54c34:	3e 80 02 a8 	load_32 s1, 160(sp)
   54c38:	5e 00 02 05 	add_i s2, sp, 128
   54c3c:	42 10 00 00 	or s2, s2, 4
   54c40:	02 00 00 88 	store_32 s0, (s2)
   54c44:	3e 00 02 88 	store_32 s1, 128(sp)
; if (n.s.high == 0)
   54c48:	03 00 00 a8 	load_32 s0, (s3)
   54c4c:	be 70 01 88 	store_32 s5, 92(sp)
   54c50:	de 60 01 88 	store_32 s6, 88(sp)
   54c54:	fe 50 01 88 	store_32 s7, 84(sp)
   54c58:	1e 41 01 88 	store_32 s8, 80(sp)
   54c5c:	3e 31 01 88 	store_32 s9, 76(sp)
   54c60:	80 05 00 f4 	bnz s0, 176 <__udivmoddi4+0x148>
   54c64:	01 00 00 f6 	b 4 <__udivmoddi4+0xa0>
   54c68:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
   54c6c:	00 10 00 00 	or s0, s0, 4
   54c70:	00 00 00 a8 	load_32 s0, (s0)
   54c74:	00 03 00 f4 	bnz s0, 96 <__udivmoddi4+0x10c>
   54c78:	01 00 00 f6 	b 4 <__udivmoddi4+0xb4>
; if (rem)
   54c7c:	1e 70 02 a8 	load_32 s0, 156(sp)
   54c80:	60 01 00 f2 	bz s0, 44 <__udivmoddi4+0xe4>
   54c84:	01 00 00 f6 	b 4 <__udivmoddi4+0xc0>
; *rem = n.s.low % d.s.low;
   54c88:	1e 20 02 a8 	load_32 s0, 136(sp)
   54c8c:	3e 00 02 a8 	load_32 s1, 128(sp)
   54c90:	5c 30 00 a8 	load_32 s2, 12(gp)
   54c94:	42 00 00 fc 	call s2
   54c98:	3e 70 02 a8 	load_32 s1, 156(sp)
   54c9c:	40 00 00 0f 	move s2, 0
   54ca0:	41 10 00 88 	store_32 s2, 4(s1)
   54ca4:	01 00 00 88 	store_32 s0, (s1)
   54ca8:	01 00 00 f6 	b 4 <__udivmoddi4+0xe4>
; return n.s.low / d.s.low;
   54cac:	1e 20 02 a8 	load_32 s0, 136(sp)
   54cb0:	3e 00 02 a8 	load_32 s1, 128(sp)
   54cb4:	5c 00 00 a8 	load_32 s2, (gp)
   54cb8:	42 00 00 fc 	call s2
   54cbc:	3e c0 02 05 	add_i s1, sp, 176
   54cc0:	21 10 00 00 	or s1, s1, 4
   54cc4:	40 00 00 0f 	move s2, 0
   54cc8:	41 00 00 88 	store_32 s2, (s1)
   54ccc:	1e c0 02 88 	store_32 s0, 176(sp)
   54cd0:	49 02 00 f6 	b 2340 <__udivmoddi4+0xa2c>
; if (rem)
   54cd4:	1e 70 02 a8 	load_32 s0, 156(sp)
   54cd8:	00 01 00 f2 	bz s0, 32 <__udivmoddi4+0x130>
   54cdc:	01 00 00 f6 	b 4 <__udivmoddi4+0x118>
; *rem = n.s.low;
   54ce0:	1e 20 02 a8 	load_32 s0, 136(sp)
   54ce4:	3e 70 02 a8 	load_32 s1, 156(sp)
   54ce8:	40 00 00 0f 	move s2, 0
   54cec:	41 10 00 88 	store_32 s2, 4(s1)
   54cf0:	01 00 00 88 	store_32 s0, (s1)
   54cf4:	01 00 00 f6 	b 4 <__udivmoddi4+0x130>
   54cf8:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
   54cfc:	00 10 00 00 	or s0, s0, 4
   54d00:	20 00 00 0f 	move s1, 0
   54d04:	20 00 00 88 	store_32 s1, (s0)
   54d08:	3e c0 02 88 	store_32 s1, 176(sp)
   54d0c:	3a 02 00 f6 	b 2280 <__udivmoddi4+0xa2c>
; if (d.s.low == 0)
   54d10:	1e 00 02 a8 	load_32 s0, 128(sp)
   54d14:	00 16 00 f4 	bnz s0, 704 <__udivmoddi4+0x40c>
   54d18:	01 00 00 f6 	b 4 <__udivmoddi4+0x154>
   54d1c:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
   54d20:	00 10 00 00 	or s0, s0, 4
   54d24:	00 00 00 a8 	load_32 s0, (s0)
   54d28:	80 03 00 f4 	bnz s0, 112 <__udivmoddi4+0x1d0>
   54d2c:	01 00 00 f6 	b 4 <__udivmoddi4+0x168>
; if (rem)
   54d30:	1e 70 02 a8 	load_32 s0, 156(sp)
   54d34:	a0 01 00 f2 	bz s0, 52 <__udivmoddi4+0x1a0>
   54d38:	01 00 00 f6 	b 4 <__udivmoddi4+0x174>
   54d3c:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.s.high % d.s.low;
   54d40:	00 10 00 00 	or s0, s0, 4
   54d44:	00 00 00 a8 	load_32 s0, (s0)
   54d48:	3e 00 02 a8 	load_32 s1, 128(sp)
   54d4c:	5c 30 00 a8 	load_32 s2, 12(gp)
   54d50:	42 00 00 fc 	call s2
   54d54:	3e 70 02 a8 	load_32 s1, 156(sp)
   54d58:	40 00 00 0f 	move s2, 0
   54d5c:	41 10 00 88 	store_32 s2, 4(s1)
   54d60:	01 00 00 88 	store_32 s0, (s1)
   54d64:	01 00 00 f6 	b 4 <__udivmoddi4+0x1a0>
   54d68:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high / d.s.low;
   54d6c:	00 10 00 00 	or s0, s0, 4
   54d70:	00 00 00 a8 	load_32 s0, (s0)
   54d74:	3e 00 02 a8 	load_32 s1, 128(sp)
   54d78:	5c 00 00 a8 	load_32 s2, (gp)
   54d7c:	42 00 00 fc 	call s2
   54d80:	3e c0 02 05 	add_i s1, sp, 176
   54d84:	21 10 00 00 	or s1, s1, 4
   54d88:	40 00 00 0f 	move s2, 0
   54d8c:	41 00 00 88 	store_32 s2, (s1)
   54d90:	1e c0 02 88 	store_32 s0, 176(sp)
   54d94:	18 02 00 f6 	b 2144 <__udivmoddi4+0xa2c>
; if (n.s.low == 0)
   54d98:	1e 20 02 a8 	load_32 s0, 136(sp)
   54d9c:	c0 04 00 f4 	bnz s0, 152 <__udivmoddi4+0x26c>
   54da0:	01 00 00 f6 	b 4 <__udivmoddi4+0x1dc>
; if (rem)
   54da4:	1e 70 02 a8 	load_32 s0, 156(sp)
   54da8:	a0 02 00 f2 	bz s0, 84 <__udivmoddi4+0x234>
   54dac:	01 00 00 f6 	b 4 <__udivmoddi4+0x1e8>
   54db0:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high % d.s.high;
   54db4:	00 10 00 00 	or s0, s0, 4
   54db8:	00 00 00 a8 	load_32 s0, (s0)
   54dbc:	3e 00 02 05 	add_i s1, sp, 128
   54dc0:	21 10 00 00 	or s1, s1, 4
   54dc4:	21 00 00 a8 	load_32 s1, (s1)
   54dc8:	5c 30 00 a8 	load_32 s2, 12(gp)
   54dcc:	42 00 00 fc 	call s2
   54dd0:	3e c0 01 05 	add_i s1, sp, 112
   54dd4:	21 10 00 00 	or s1, s1, 4
   54dd8:	01 00 00 88 	store_32 s0, (s1)
   54ddc:	00 00 00 0f 	move s0, 0
; r.s.low = 0;
   54de0:	1e c0 01 88 	store_32 s0, 112(sp)
; *rem = r.all;
   54de4:	01 00 00 a8 	load_32 s0, (s1)
   54de8:	3e c0 01 a8 	load_32 s1, 112(sp)
   54dec:	5e 70 02 a8 	load_32 s2, 156(sp)
   54df0:	02 10 00 88 	store_32 s0, 4(s2)
   54df4:	22 00 00 88 	store_32 s1, (s2)
; }
   54df8:	01 00 00 f6 	b 4 <__udivmoddi4+0x234>
   54dfc:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high / d.s.high;
   54e00:	00 10 00 00 	or s0, s0, 4
   54e04:	00 00 00 a8 	load_32 s0, (s0)
   54e08:	3e 00 02 05 	add_i s1, sp, 128
   54e0c:	21 10 00 00 	or s1, s1, 4
   54e10:	21 00 00 a8 	load_32 s1, (s1)
   54e14:	5c 00 00 a8 	load_32 s2, (gp)
   54e18:	42 00 00 fc 	call s2
   54e1c:	3e c0 02 05 	add_i s1, sp, 176
   54e20:	21 10 00 00 	or s1, s1, 4
   54e24:	40 00 00 0f 	move s2, 0
   54e28:	41 00 00 88 	store_32 s2, (s1)
   54e2c:	1e c0 02 88 	store_32 s0, 176(sp)
   54e30:	f1 01 00 f6 	b 1988 <__udivmoddi4+0xa2c>
   54e34:	1e 00 02 05 	add_i s0, sp, 128
; if ((d.s.high & (d.s.high - 1)) == 0)     /* if d is a power of 2 */
   54e38:	00 10 00 00 	or s0, s0, 4
   54e3c:	00 00 00 a8 	load_32 s0, (s0)
   54e40:	20 fc ff 05 	add_i s1, s0, -1
   54e44:	00 80 10 c0 	and s0, s0, s1
   54e48:	c0 04 00 f4 	bnz s0, 152 <__udivmoddi4+0x318>
   54e4c:	01 00 00 f6 	b 4 <__udivmoddi4+0x288>
; if (rem)
   54e50:	1e 70 02 a8 	load_32 s0, 156(sp)
   54e54:	a0 02 00 f2 	bz s0, 84 <__udivmoddi4+0x2e0>
   54e58:	01 00 00 f6 	b 4 <__udivmoddi4+0x294>
; r.s.low = n.s.low;
   54e5c:	1e 20 02 a8 	load_32 s0, 136(sp)
   54e60:	1e c0 01 88 	store_32 s0, 112(sp)
   54e64:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high & (d.s.high - 1);
   54e68:	00 10 00 00 	or s0, s0, 4
   54e6c:	00 00 00 a8 	load_32 s0, (s0)
   54e70:	3e 00 02 05 	add_i s1, sp, 128
   54e74:	21 10 00 00 	or s1, s1, 4
   54e78:	21 00 00 a8 	load_32 s1, (s1)
   54e7c:	21 fc ff 05 	add_i s1, s1, -1
   54e80:	00 80 10 c0 	and s0, s0, s1
   54e84:	3e c0 01 05 	add_i s1, sp, 112
   54e88:	21 10 00 00 	or s1, s1, 4
   54e8c:	01 00 00 88 	store_32 s0, (s1)
; *rem = r.all;
   54e90:	01 00 00 a8 	load_32 s0, (s1)
   54e94:	3e c0 01 a8 	load_32 s1, 112(sp)
   54e98:	5e 70 02 a8 	load_32 s2, 156(sp)
   54e9c:	02 10 00 88 	store_32 s0, 4(s2)
   54ea0:	22 00 00 88 	store_32 s1, (s2)
; }
   54ea4:	01 00 00 f6 	b 4 <__udivmoddi4+0x2e0>
   54ea8:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high >> __builtin_ctz(d.s.high);
   54eac:	00 10 00 00 	or s0, s0, 4
   54eb0:	00 00 00 a8 	load_32 s0, (s0)
   54eb4:	3e 00 02 05 	add_i s1, sp, 128
   54eb8:	21 10 00 00 	or s1, s1, 4
   54ebc:	21 00 00 a8 	load_32 s1, (s1)
   54ec0:	20 80 e0 c0 	ctz s1, s1
   54ec4:	00 80 a0 c0 	shr s0, s0, s1
   54ec8:	3e c0 02 05 	add_i s1, sp, 176
   54ecc:	21 10 00 00 	or s1, s1, 4
   54ed0:	40 00 00 0f 	move s2, 0
   54ed4:	41 00 00 88 	store_32 s2, (s1)
   54ed8:	1e c0 02 88 	store_32 s0, 176(sp)
   54edc:	c6 01 00 f6 	b 1816 <__udivmoddi4+0xa2c>
   54ee0:	1e 00 02 05 	add_i s0, sp, 128
; sr = __builtin_clz(d.s.high) - __builtin_clz(n.s.high);
   54ee4:	00 10 00 00 	or s0, s0, 4
   54ee8:	00 00 00 a8 	load_32 s0, (s0)
   54eec:	00 00 c0 c0 	clz s0, s0
   54ef0:	3e 20 02 05 	add_i s1, sp, 136
   54ef4:	21 10 00 00 	or s1, s1, 4
   54ef8:	21 00 00 a8 	load_32 s1, (s1)
   54efc:	20 80 c0 c0 	clz s1, s1
   54f00:	00 80 60 c0 	sub_i s0, s0, s1
   54f04:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr > n_uword_bits - 2)
   54f08:	1e b0 01 a8 	load_32 s0, 108(sp)
   54f0c:	00 7c 00 18 	cmplt_u s0, s0, 31
   54f10:	60 02 00 f4 	bnz s0, 76 <__udivmoddi4+0x394>
   54f14:	01 00 00 f6 	b 4 <__udivmoddi4+0x350>
; if (rem)
   54f18:	1e 70 02 a8 	load_32 s0, 156(sp)
   54f1c:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0x37c>
   54f20:	01 00 00 f6 	b 4 <__udivmoddi4+0x35c>
   54f24:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.all;
   54f28:	00 10 00 00 	or s0, s0, 4
   54f2c:	00 00 00 a8 	load_32 s0, (s0)
   54f30:	3e 20 02 a8 	load_32 s1, 136(sp)
   54f34:	5e 70 02 a8 	load_32 s2, 156(sp)
   54f38:	02 10 00 88 	store_32 s0, 4(s2)
   54f3c:	22 00 00 88 	store_32 s1, (s2)
   54f40:	01 00 00 f6 	b 4 <__udivmoddi4+0x37c>
   54f44:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
   54f48:	00 10 00 00 	or s0, s0, 4
   54f4c:	20 00 00 0f 	move s1, 0
   54f50:	20 00 00 88 	store_32 s1, (s0)
   54f54:	3e c0 02 88 	store_32 s1, 176(sp)
   54f58:	a7 01 00 f6 	b 1692 <__udivmoddi4+0xa2c>
; ++sr;
   54f5c:	1e b0 01 a8 	load_32 s0, 108(sp)
   54f60:	00 04 00 05 	add_i s0, s0, 1
   54f64:	1e b0 01 88 	store_32 s0, 108(sp)
   54f68:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
   54f6c:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low << (n_uword_bits - sr);
   54f70:	1e 20 02 a8 	load_32 s0, 136(sp)
   54f74:	3e b0 01 a8 	load_32 s1, 108(sp)
   54f78:	40 80 00 0f 	move s2, 32
   54f7c:	22 80 60 c0 	sub_i s1, s2, s1
   54f80:	00 80 b0 c0 	shl s0, s0, s1
   54f84:	3e e0 01 05 	add_i s1, sp, 120
   54f88:	21 10 00 00 	or s1, s1, 4
   54f8c:	01 00 00 88 	store_32 s0, (s1)
   54f90:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
   54f94:	00 10 00 00 	or s0, s0, 4
   54f98:	20 00 00 a8 	load_32 s1, (s0)
   54f9c:	7e b0 01 a8 	load_32 s3, 108(sp)
   54fa0:	21 80 a1 c0 	shr s1, s1, s3
   54fa4:	7e c0 01 05 	add_i s3, sp, 112
   54fa8:	63 10 00 00 	or s3, s3, 4
   54fac:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
   54fb0:	00 00 00 a8 	load_32 s0, (s0)
   54fb4:	3e b0 01 a8 	load_32 s1, 108(sp)
   54fb8:	42 80 60 c0 	sub_i s2, s2, s1
   54fbc:	00 00 b1 c0 	shl s0, s0, s2
   54fc0:	5e 20 02 a8 	load_32 s2, 136(sp)
   54fc4:	22 80 a0 c0 	shr s1, s2, s1
   54fc8:	00 80 00 c0 	or s0, s0, s1
   54fcc:	1e c0 01 88 	store_32 s0, 112(sp)
; }
   54fd0:	e8 00 00 f6 	b 928 <__udivmoddi4+0x7a8>
   54fd4:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
   54fd8:	00 10 00 00 	or s0, s0, 4
   54fdc:	00 00 00 a8 	load_32 s0, (s0)
   54fe0:	80 12 00 f4 	bnz s0, 592 <__udivmoddi4+0x668>
   54fe4:	01 00 00 f6 	b 4 <__udivmoddi4+0x420>
; if ((d.s.low & (d.s.low - 1)) == 0)     /* if d is a power of 2 */
   54fe8:	1e 00 02 a8 	load_32 s0, 128(sp)
   54fec:	20 fc ff 05 	add_i s1, s0, -1
   54ff0:	00 80 10 c0 	and s0, s0, s1
   54ff4:	c0 06 00 f4 	bnz s0, 216 <__udivmoddi4+0x504>
   54ff8:	01 00 00 f6 	b 4 <__udivmoddi4+0x434>
; if (rem)
   54ffc:	1e 70 02 a8 	load_32 s0, 156(sp)
   55000:	60 01 00 f2 	bz s0, 44 <__udivmoddi4+0x464>
   55004:	01 00 00 f6 	b 4 <__udivmoddi4+0x440>
; *rem = n.s.low & (d.s.low - 1);
   55008:	1e 20 02 a8 	load_32 s0, 136(sp)
   5500c:	3e 00 02 a8 	load_32 s1, 128(sp)
   55010:	21 fc ff 05 	add_i s1, s1, -1
   55014:	00 80 10 c0 	and s0, s0, s1
   55018:	3e 70 02 a8 	load_32 s1, 156(sp)
   5501c:	40 00 00 0f 	move s2, 0
   55020:	41 10 00 88 	store_32 s2, 4(s1)
   55024:	01 00 00 88 	store_32 s0, (s1)
   55028:	01 00 00 f6 	b 4 <__udivmoddi4+0x464>
; if (d.s.low == 1)
   5502c:	1e 00 02 a8 	load_32 s0, 128(sp)
   55030:	00 04 00 11 	cmpne_i s0, s0, 1
   55034:	60 01 00 f4 	bnz s0, 44 <__udivmoddi4+0x498>
   55038:	01 00 00 f6 	b 4 <__udivmoddi4+0x474>
   5503c:	1e 20 02 05 	add_i s0, sp, 136
; return n.all;
   55040:	00 10 00 00 	or s0, s0, 4
   55044:	00 00 00 a8 	load_32 s0, (s0)
   55048:	3e 20 02 a8 	load_32 s1, 136(sp)
   5504c:	5e c0 02 05 	add_i s2, sp, 176
   55050:	42 10 00 00 	or s2, s2, 4
   55054:	02 00 00 88 	store_32 s0, (s2)
   55058:	3e c0 02 88 	store_32 s1, 176(sp)
   5505c:	66 01 00 f6 	b 1432 <__udivmoddi4+0xa2c>
; sr = __builtin_ctz(d.s.low);
   55060:	1e 00 02 a8 	load_32 s0, 128(sp)
   55064:	00 00 e0 c0 	ctz s0, s0
   55068:	1e b0 01 88 	store_32 s0, 108(sp)
   5506c:	1e 20 02 05 	add_i s0, sp, 136
; q.s.high = n.s.high >> sr;
   55070:	00 10 00 00 	or s0, s0, 4
   55074:	20 00 00 a8 	load_32 s1, (s0)
   55078:	5e b0 01 a8 	load_32 s2, 108(sp)
   5507c:	21 00 a1 c0 	shr s1, s1, s2
   55080:	5e e0 01 05 	add_i s2, sp, 120
   55084:	42 10 00 00 	or s2, s2, 4
   55088:	22 00 00 88 	store_32 s1, (s2)
; q.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
   5508c:	00 00 00 a8 	load_32 s0, (s0)
   55090:	3e b0 01 a8 	load_32 s1, 108(sp)
   55094:	60 80 00 0f 	move s3, 32
   55098:	63 80 60 c0 	sub_i s3, s3, s1
   5509c:	00 80 b1 c0 	shl s0, s0, s3
   550a0:	7e 20 02 a8 	load_32 s3, 136(sp)
   550a4:	23 80 a0 c0 	shr s1, s3, s1
   550a8:	00 80 00 c0 	or s0, s0, s1
   550ac:	1e e0 01 88 	store_32 s0, 120(sp)
; return q.all;
   550b0:	02 00 00 a8 	load_32 s0, (s2)
   550b4:	3e e0 01 a8 	load_32 s1, 120(sp)
   550b8:	5e c0 02 05 	add_i s2, sp, 176
   550bc:	42 10 00 00 	or s2, s2, 4
   550c0:	02 00 00 88 	store_32 s0, (s2)
   550c4:	3e c0 02 88 	store_32 s1, 176(sp)
   550c8:	4b 01 00 f6 	b 1324 <__udivmoddi4+0xa2c>
; sr = 1 + n_uword_bits + __builtin_clz(d.s.low) - __builtin_clz(n.s.high);
   550cc:	1e 00 02 a8 	load_32 s0, 128(sp)
   550d0:	00 00 c0 c0 	clz s0, s0
   550d4:	00 84 00 05 	add_i s0, s0, 33
   550d8:	3e 20 02 05 	add_i s1, sp, 136
   550dc:	21 10 00 00 	or s1, s1, 4
   550e0:	21 00 00 a8 	load_32 s1, (s1)
   550e4:	20 80 c0 c0 	clz s1, s1
   550e8:	00 80 60 c0 	sub_i s0, s0, s1
   550ec:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr == n_uword_bits)
   550f0:	1e b0 01 a8 	load_32 s0, 108(sp)
   550f4:	00 80 00 11 	cmpne_i s0, s0, 32
   550f8:	00 02 00 f4 	bnz s0, 64 <__udivmoddi4+0x570>
   550fc:	01 00 00 f6 	b 4 <__udivmoddi4+0x538>
   55100:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
   55104:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low;
   55108:	3e 20 02 a8 	load_32 s1, 136(sp)
   5510c:	5e e0 01 05 	add_i s2, sp, 120
   55110:	42 10 00 00 	or s2, s2, 4
   55114:	22 00 00 88 	store_32 s1, (s2)
   55118:	3e c0 01 05 	add_i s1, sp, 112
; r.s.high = 0;
   5511c:	21 10 00 00 	or s1, s1, 4
   55120:	01 00 00 88 	store_32 s0, (s1)
   55124:	1e 20 02 05 	add_i s0, sp, 136
; r.s.low = n.s.high;
   55128:	00 10 00 00 	or s0, s0, 4
   5512c:	00 00 00 a8 	load_32 s0, (s0)
   55130:	1e c0 01 88 	store_32 s0, 112(sp)
; }
   55134:	3e 00 00 f6 	b 248 <__udivmoddi4+0x664>
; else if (sr < n_uword_bits)  // 2 <= sr <= n_uword_bits - 1
   55138:	1e b0 01 a8 	load_32 s0, 108(sp)
   5513c:	00 7c 00 16 	cmpgt_u s0, s0, 31
   55140:	a0 03 00 f4 	bnz s0, 116 <__udivmoddi4+0x5ec>
   55144:	01 00 00 f6 	b 4 <__udivmoddi4+0x580>
   55148:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
   5514c:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low << (n_uword_bits - sr);
   55150:	1e 20 02 a8 	load_32 s0, 136(sp)
   55154:	3e b0 01 a8 	load_32 s1, 108(sp)
   55158:	40 80 00 0f 	move s2, 32
   5515c:	22 80 60 c0 	sub_i s1, s2, s1
   55160:	00 80 b0 c0 	shl s0, s0, s1
   55164:	3e e0 01 05 	add_i s1, sp, 120
   55168:	21 10 00 00 	or s1, s1, 4
   5516c:	01 00 00 88 	store_32 s0, (s1)
   55170:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
   55174:	00 10 00 00 	or s0, s0, 4
   55178:	20 00 00 a8 	load_32 s1, (s0)
   5517c:	7e b0 01 a8 	load_32 s3, 108(sp)
   55180:	21 80 a1 c0 	shr s1, s1, s3
   55184:	7e c0 01 05 	add_i s3, sp, 112
   55188:	63 10 00 00 	or s3, s3, 4
   5518c:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
   55190:	00 00 00 a8 	load_32 s0, (s0)
   55194:	3e b0 01 a8 	load_32 s1, 108(sp)
   55198:	42 80 60 c0 	sub_i s2, s2, s1
   5519c:	00 00 b1 c0 	shl s0, s0, s2
   551a0:	5e 20 02 a8 	load_32 s2, 136(sp)
   551a4:	22 80 a0 c0 	shr s1, s2, s1
   551a8:	00 80 00 c0 	or s0, s0, s1
   551ac:	1e c0 01 88 	store_32 s0, 112(sp)
; }
   551b0:	1e 00 00 f6 	b 120 <__udivmoddi4+0x660>
; q.s.low = n.s.low << (n_udword_bits - sr);
   551b4:	1e 20 02 a8 	load_32 s0, 136(sp)
   551b8:	3e b0 01 a8 	load_32 s1, 108(sp)
   551bc:	40 00 01 0f 	move s2, 64
   551c0:	22 80 60 c0 	sub_i s1, s2, s1
   551c4:	00 80 b0 c0 	shl s0, s0, s1
   551c8:	1e e0 01 88 	store_32 s0, 120(sp)
   551cc:	1e 20 02 05 	add_i s0, sp, 136
; q.s.high = (n.s.high << (n_udword_bits - sr)) |
   551d0:	00 10 00 00 	or s0, s0, 4
   551d4:	20 00 00 a8 	load_32 s1, (s0)
   551d8:	7e b0 01 a8 	load_32 s3, 108(sp)
   551dc:	42 80 61 c0 	sub_i s2, s2, s3
   551e0:	21 00 b1 c0 	shl s1, s1, s2
; (n.s.low >> (sr - n_uword_bits));
   551e4:	5e 20 02 a8 	load_32 s2, 136(sp)
   551e8:	63 80 ff 05 	add_i s3, s3, -32
   551ec:	42 80 a1 c0 	shr s2, s2, s3
; q.s.high = (n.s.high << (n_udword_bits - sr)) |
   551f0:	21 00 01 c0 	or s1, s1, s2
   551f4:	5e e0 01 05 	add_i s2, sp, 120
   551f8:	42 10 00 00 	or s2, s2, 4
   551fc:	22 00 00 88 	store_32 s1, (s2)
   55200:	3e c0 01 05 	add_i s1, sp, 112
; r.s.high = 0;
   55204:	21 10 00 00 	or s1, s1, 4
   55208:	40 00 00 0f 	move s2, 0
   5520c:	41 00 00 88 	store_32 s2, (s1)
; r.s.low = n.s.high >> (sr - n_uword_bits);
   55210:	00 00 00 a8 	load_32 s0, (s0)
   55214:	3e b0 01 a8 	load_32 s1, 108(sp)
   55218:	21 80 ff 05 	add_i s1, s1, -32
   5521c:	00 80 a0 c0 	shr s0, s0, s1
   55220:	1e c0 01 88 	store_32 s0, 112(sp)
   55224:	01 00 00 f6 	b 4 <__udivmoddi4+0x660>
   55228:	01 00 00 f6 	b 4 <__udivmoddi4+0x664>
; }
   5522c:	50 00 00 f6 	b 320 <__udivmoddi4+0x7a4>
   55230:	1e 00 02 05 	add_i s0, sp, 128
; sr = __builtin_clz(d.s.high) - __builtin_clz(n.s.high);
   55234:	00 10 00 00 	or s0, s0, 4
   55238:	00 00 00 a8 	load_32 s0, (s0)
   5523c:	00 00 c0 c0 	clz s0, s0
   55240:	3e 20 02 05 	add_i s1, sp, 136
   55244:	21 10 00 00 	or s1, s1, 4
   55248:	21 00 00 a8 	load_32 s1, (s1)
   5524c:	20 80 c0 c0 	clz s1, s1
   55250:	00 80 60 c0 	sub_i s0, s0, s1
   55254:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr > n_uword_bits - 1)
   55258:	1e b0 01 a8 	load_32 s0, 108(sp)
   5525c:	00 80 00 18 	cmplt_u s0, s0, 32
   55260:	60 02 00 f4 	bnz s0, 76 <__udivmoddi4+0x6e4>
   55264:	01 00 00 f6 	b 4 <__udivmoddi4+0x6a0>
; if (rem)
   55268:	1e 70 02 a8 	load_32 s0, 156(sp)
   5526c:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0x6cc>
   55270:	01 00 00 f6 	b 4 <__udivmoddi4+0x6ac>
   55274:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.all;
   55278:	00 10 00 00 	or s0, s0, 4
   5527c:	00 00 00 a8 	load_32 s0, (s0)
   55280:	3e 20 02 a8 	load_32 s1, 136(sp)
   55284:	5e 70 02 a8 	load_32 s2, 156(sp)
   55288:	02 10 00 88 	store_32 s0, 4(s2)
   5528c:	22 00 00 88 	store_32 s1, (s2)
   55290:	01 00 00 f6 	b 4 <__udivmoddi4+0x6cc>
   55294:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
   55298:	00 10 00 00 	or s0, s0, 4
   5529c:	20 00 00 0f 	move s1, 0
   552a0:	20 00 00 88 	store_32 s1, (s0)
   552a4:	3e c0 02 88 	store_32 s1, 176(sp)
   552a8:	d3 00 00 f6 	b 844 <__udivmoddi4+0xa2c>
; ++sr;
   552ac:	1e b0 01 a8 	load_32 s0, 108(sp)
   552b0:	00 04 00 05 	add_i s0, s0, 1
   552b4:	1e b0 01 88 	store_32 s0, 108(sp)
   552b8:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
   552bc:	1e e0 01 88 	store_32 s0, 120(sp)
; if (sr == n_uword_bits)
   552c0:	1e b0 01 a8 	load_32 s0, 108(sp)
   552c4:	00 80 00 11 	cmpne_i s0, s0, 32
   552c8:	e0 01 00 f4 	bnz s0, 60 <__udivmoddi4+0x73c>
   552cc:	01 00 00 f6 	b 4 <__udivmoddi4+0x708>
; q.s.high = n.s.low;
   552d0:	1e 20 02 a8 	load_32 s0, 136(sp)
   552d4:	3e e0 01 05 	add_i s1, sp, 120
   552d8:	21 10 00 00 	or s1, s1, 4
   552dc:	01 00 00 88 	store_32 s0, (s1)
   552e0:	1e c0 01 05 	add_i s0, sp, 112
; r.s.high = 0;
   552e4:	00 10 00 00 	or s0, s0, 4
   552e8:	20 00 00 0f 	move s1, 0
   552ec:	20 00 00 88 	store_32 s1, (s0)
   552f0:	1e 20 02 05 	add_i s0, sp, 136
; r.s.low = n.s.high;
   552f4:	00 10 00 00 	or s0, s0, 4
   552f8:	00 00 00 a8 	load_32 s0, (s0)
   552fc:	1e c0 01 88 	store_32 s0, 112(sp)
; }
   55300:	1a 00 00 f6 	b 104 <__udivmoddi4+0x7a0>
; q.s.high = n.s.low << (n_uword_bits - sr);
   55304:	1e 20 02 a8 	load_32 s0, 136(sp)
   55308:	3e b0 01 a8 	load_32 s1, 108(sp)
   5530c:	40 80 00 0f 	move s2, 32
   55310:	22 80 60 c0 	sub_i s1, s2, s1
   55314:	00 80 b0 c0 	shl s0, s0, s1
   55318:	3e e0 01 05 	add_i s1, sp, 120
   5531c:	21 10 00 00 	or s1, s1, 4
   55320:	01 00 00 88 	store_32 s0, (s1)
   55324:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
   55328:	00 10 00 00 	or s0, s0, 4
   5532c:	20 00 00 a8 	load_32 s1, (s0)
   55330:	7e b0 01 a8 	load_32 s3, 108(sp)
   55334:	21 80 a1 c0 	shr s1, s1, s3
   55338:	7e c0 01 05 	add_i s3, sp, 112
   5533c:	63 10 00 00 	or s3, s3, 4
   55340:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
   55344:	00 00 00 a8 	load_32 s0, (s0)
   55348:	3e b0 01 a8 	load_32 s1, 108(sp)
   5534c:	42 80 60 c0 	sub_i s2, s2, s1
   55350:	00 00 b1 c0 	shl s0, s0, s2
   55354:	5e 20 02 a8 	load_32 s2, 136(sp)
   55358:	22 80 a0 c0 	shr s1, s2, s1
   5535c:	00 80 00 c0 	or s0, s0, s1
   55360:	1e c0 01 88 	store_32 s0, 112(sp)
   55364:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a0>
   55368:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a4>
   5536c:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a8>
   55370:	00 00 00 0f 	move s0, 0
; su_int carry = 0;
   55374:	1e a0 01 88 	store_32 s0, 104(sp)
; for (; sr > 0; --sr)
   55378:	01 00 00 f6 	b 4 <__udivmoddi4+0x7b4>
   5537c:	1e b0 01 a8 	load_32 s0, 108(sp)
   55380:	a0 0f 00 f2 	bz s0, 500 <__udivmoddi4+0x9ac>
   55384:	01 00 00 f6 	b 4 <__udivmoddi4+0x7c0>
   55388:	1e c0 01 05 	add_i s0, sp, 112
; r.s.high = (r.s.high << 1) | (r.s.low  >> (n_uword_bits - 1));
   5538c:	00 10 00 00 	or s0, s0, 4
   55390:	20 00 00 a8 	load_32 s1, (s0)
   55394:	21 04 00 0b 	shl s1, s1, 1
   55398:	5e c0 01 a8 	load_32 s2, 112(sp)
   5539c:	42 7c 00 0a 	shr s2, s2, 31
   553a0:	21 00 01 c0 	or s1, s1, s2
   553a4:	20 00 00 88 	store_32 s1, (s0)
; r.s.low  = (r.s.low  << 1) | (q.s.high >> (n_uword_bits - 1));
   553a8:	3e c0 01 a8 	load_32 s1, 112(sp)
   553ac:	21 04 00 0b 	shl s1, s1, 1
   553b0:	5e e0 01 05 	add_i s2, sp, 120
   553b4:	42 10 00 00 	or s2, s2, 4
   553b8:	62 00 00 a8 	load_32 s3, (s2)
   553bc:	63 7c 00 0a 	shr s3, s3, 31
   553c0:	21 80 01 c0 	or s1, s1, s3
   553c4:	3e c0 01 88 	store_32 s1, 112(sp)
; q.s.high = (q.s.high << 1) | (q.s.low  >> (n_uword_bits - 1));
   553c8:	22 00 00 a8 	load_32 s1, (s2)
   553cc:	21 04 00 0b 	shl s1, s1, 1
   553d0:	7e e0 01 a8 	load_32 s3, 120(sp)
   553d4:	63 7c 00 0a 	shr s3, s3, 31
   553d8:	21 80 01 c0 	or s1, s1, s3
   553dc:	22 00 00 88 	store_32 s1, (s2)
; q.s.low  = (q.s.low  << 1) | carry;
   553e0:	3e e0 01 a8 	load_32 s1, 120(sp)
   553e4:	21 04 00 0b 	shl s1, s1, 1
   553e8:	5e a0 01 a8 	load_32 s2, 104(sp)
   553ec:	21 00 01 c0 	or s1, s1, s2
   553f0:	3e e0 01 88 	store_32 s1, 120(sp)
   553f4:	3e 00 02 05 	add_i s1, sp, 128
; const di_int s = (di_int)(d.all - r.all - 1) >> (n_udword_bits - 1);
   553f8:	21 10 00 00 	or s1, s1, 4
   553fc:	41 00 00 a8 	load_32 s2, (s1)
   55400:	7e 00 02 a8 	load_32 s3, 128(sp)
   55404:	80 00 00 a8 	load_32 s4, (s0)
   55408:	be c0 01 a8 	load_32 s5, 112(sp)
   5540c:	c3 80 82 c1 	cmplt_u s6, s3, s5
   55410:	e0 00 00 0f 	move s7, 0
   55414:	00 05 00 0f 	move s8, 1
   55418:	20 01 f4 c0 	move s9, s8
   5541c:	1e 20 01 88 	store_32 s0, 72(sp)
   55420:	3e 10 01 88 	store_32 s1, 68(sp)
   55424:	5e 00 01 88 	store_32 s2, 64(sp)
   55428:	7e f0 00 88 	store_32 s3, 60(sp)
   5542c:	9e e0 00 88 	store_32 s4, 56(sp)
   55430:	be d0 00 88 	store_32 s5, 52(sp)
   55434:	fe c0 00 88 	store_32 s7, 48(sp)
   55438:	1e b1 00 88 	store_32 s8, 44(sp)
   5543c:	3e a1 00 88 	store_32 s9, 40(sp)
   55440:	66 00 00 f4 	bnz s6, 12 <__udivmoddi4+0x884>
   55444:	1e c0 00 a8 	load_32 s0, 48(sp)
   55448:	1e a0 00 88 	store_32 s0, 40(sp)
   5544c:	1e a0 00 a8 	load_32 s0, 40(sp)
   55450:	3e 00 01 a8 	load_32 s1, 64(sp)
   55454:	5e e0 00 a8 	load_32 s2, 56(sp)
   55458:	21 00 61 c0 	sub_i s1, s1, s2
   5545c:	01 00 60 c0 	sub_i s0, s1, s0
   55460:	3e f0 00 a8 	load_32 s1, 60(sp)
   55464:	5e d0 00 a8 	load_32 s2, 52(sp)
   55468:	61 00 61 c0 	sub_i s3, s1, s2
   5546c:	83 fc ff 05 	add_i s4, s3, -1
   55470:	64 80 81 c1 	cmplt_u s3, s4, s3
   55474:	be b0 00 a8 	load_32 s5, 44(sp)
   55478:	1e 90 00 88 	store_32 s0, 36(sp)
   5547c:	9e 80 00 88 	store_32 s4, 32(sp)
   55480:	be 70 00 88 	store_32 s5, 28(sp)
   55484:	63 00 00 f4 	bnz s3, 12 <__udivmoddi4+0x8c8>
   55488:	1e c0 00 a8 	load_32 s0, 48(sp)
   5548c:	1e 70 00 88 	store_32 s0, 28(sp)
   55490:	1e 70 00 a8 	load_32 s0, 28(sp)
   55494:	3e 80 00 a8 	load_32 s1, 32(sp)
   55498:	41 fc ff 11 	cmpne_i s2, s1, -1
   5549c:	7e b0 00 a8 	load_32 s3, 44(sp)
   554a0:	1e 60 00 88 	store_32 s0, 24(sp)
   554a4:	7e 50 00 88 	store_32 s3, 20(sp)
   554a8:	62 00 00 f4 	bnz s2, 12 <__udivmoddi4+0x8ec>
   554ac:	1e 60 00 a8 	load_32 s0, 24(sp)
   554b0:	1e 50 00 88 	store_32 s0, 20(sp)
   554b4:	1e 50 00 a8 	load_32 s0, 20(sp)
   554b8:	3e 90 00 a8 	load_32 s1, 36(sp)
   554bc:	01 00 50 c0 	add_i s0, s1, s0
   554c0:	00 fc ff 05 	add_i s0, s0, -1
   554c4:	00 7c 00 09 	ashr s0, s0, 31
   554c8:	3e 80 01 05 	add_i s1, sp, 96
   554cc:	21 10 00 00 	or s1, s1, 4
   554d0:	01 00 00 88 	store_32 s0, (s1)
   554d4:	1e 80 01 88 	store_32 s0, 96(sp)
; carry = s & 1;
   554d8:	1e 80 01 a8 	load_32 s0, 96(sp)
   554dc:	00 04 00 01 	and s0, s0, 1
   554e0:	1e a0 01 88 	store_32 s0, 104(sp)
; r.all -= d.all & s;
   554e4:	1e 10 01 a8 	load_32 s0, 68(sp)
   554e8:	40 00 00 a8 	load_32 s2, (s0)
   554ec:	7e 00 02 a8 	load_32 s3, 128(sp)
   554f0:	21 00 00 a8 	load_32 s1, (s1)
   554f4:	9e 80 01 a8 	load_32 s4, 96(sp)
   554f8:	22 80 10 c0 	and s1, s2, s1
   554fc:	43 00 12 c0 	and s2, s3, s4
   55500:	7e 20 01 a8 	load_32 s3, 72(sp)
   55504:	83 00 00 a8 	load_32 s4, (s3)
   55508:	be c0 01 a8 	load_32 s5, 112(sp)
   5550c:	c5 00 81 c1 	cmplt_u s6, s5, s2
   55510:	fe b0 00 a8 	load_32 s7, 44(sp)
   55514:	3e 40 00 88 	store_32 s1, 16(sp)
   55518:	5e 30 00 88 	store_32 s2, 12(sp)
   5551c:	9e 20 00 88 	store_32 s4, 8(sp)
   55520:	be 10 00 88 	store_32 s5, 4(sp)
   55524:	fe 00 00 88 	store_32 s7, (sp)
   55528:	66 00 00 f4 	bnz s6, 12 <__udivmoddi4+0x96c>
   5552c:	1e c0 00 a8 	load_32 s0, 48(sp)
   55530:	1e 00 00 88 	store_32 s0, (sp)
   55534:	1e 00 00 a8 	load_32 s0, (sp)
   55538:	3e 20 00 a8 	load_32 s1, 8(sp)
   5553c:	5e 40 00 a8 	load_32 s2, 16(sp)
   55540:	21 00 61 c0 	sub_i s1, s1, s2
   55544:	01 00 60 c0 	sub_i s0, s1, s0
   55548:	3e 10 00 a8 	load_32 s1, 4(sp)
   5554c:	5e 30 00 a8 	load_32 s2, 12(sp)
   55550:	61 00 61 c0 	sub_i s3, s1, s2
   55554:	9e 20 01 a8 	load_32 s4, 72(sp)
   55558:	04 00 00 88 	store_32 s0, (s4)
   5555c:	7e c0 01 88 	store_32 s3, 112(sp)
; }
   55560:	01 00 00 f6 	b 4 <__udivmoddi4+0x99c>
; for (; sr > 0; --sr)
   55564:	1e b0 01 a8 	load_32 s0, 108(sp)
   55568:	00 fc ff 05 	add_i s0, s0, -1
   5556c:	1e b0 01 88 	store_32 s0, 108(sp)
   55570:	83 ff ff f7 	b -500 <__udivmoddi4+0x7b4>
   55574:	1e e0 01 05 	add_i s0, sp, 120
; q.all = (q.all << 1) | carry;
   55578:	00 10 00 00 	or s0, s0, 4
   5557c:	20 00 00 a8 	load_32 s1, (s0)
   55580:	5e e0 01 a8 	load_32 s2, 120(sp)
   55584:	62 7c 00 0a 	shr s3, s2, 31
   55588:	21 04 00 0b 	shl s1, s1, 1
   5558c:	21 80 01 c0 	or s1, s1, s3
   55590:	42 04 00 0b 	shl s2, s2, 1
   55594:	7e a0 01 a8 	load_32 s3, 104(sp)
   55598:	42 80 01 c0 	or s2, s2, s3
   5559c:	20 00 00 88 	store_32 s1, (s0)
   555a0:	5e e0 01 88 	store_32 s2, 120(sp)
; if (rem)
   555a4:	1e 70 02 a8 	load_32 s0, 156(sp)
   555a8:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0xa08>
   555ac:	01 00 00 f6 	b 4 <__udivmoddi4+0x9e8>
   555b0:	1e c0 01 05 	add_i s0, sp, 112
; *rem = r.all;
   555b4:	00 10 00 00 	or s0, s0, 4
   555b8:	00 00 00 a8 	load_32 s0, (s0)
   555bc:	3e c0 01 a8 	load_32 s1, 112(sp)
   555c0:	5e 70 02 a8 	load_32 s2, 156(sp)
   555c4:	02 10 00 88 	store_32 s0, 4(s2)
   555c8:	22 00 00 88 	store_32 s1, (s2)
   555cc:	01 00 00 f6 	b 4 <__udivmoddi4+0xa08>
   555d0:	1e e0 01 05 	add_i s0, sp, 120
; return q.all;
   555d4:	00 10 00 00 	or s0, s0, 4
   555d8:	00 00 00 a8 	load_32 s0, (s0)
   555dc:	3e e0 01 a8 	load_32 s1, 120(sp)
   555e0:	5e c0 02 05 	add_i s2, sp, 176
   555e4:	42 10 00 00 	or s2, s2, 4
   555e8:	02 00 00 88 	store_32 s0, (s2)
   555ec:	3e c0 02 88 	store_32 s1, 176(sp)
   555f0:	01 00 00 f6 	b 4 <__udivmoddi4+0xa2c>
   555f4:	1e c0 02 05 	add_i s0, sp, 176
; }
   555f8:	00 10 00 00 	or s0, s0, 4
   555fc:	20 00 00 a8 	load_32 s1, (s0)
   55600:	1e c0 02 a8 	load_32 s0, 176(sp)
   55604:	fe f3 02 a8 	load_32 ra, 188(sp)
   55608:	de 03 03 05 	add_i sp, sp, 192
   5560c:	1f 00 00 f0 	ret

0000000000055610 __umoddi3:
; {
   55610:	de 03 ff 05 	add_i sp, sp, -64
   55614:	fe f3 00 88 	store_32 ra, 60(sp)
   55618:	80 80 f1 c0 	move s4, s3
   5561c:	a0 00 f1 c0 	move s5, s2
   55620:	c0 80 f0 c0 	move s6, s1
   55624:	e0 00 f0 c0 	move s7, s0
   55628:	1e c1 00 05 	add_i s8, sp, 48
   5562c:	08 11 00 00 	or s8, s8, 4
   55630:	28 00 00 88 	store_32 s1, (s8)
   55634:	1e c0 00 88 	store_32 s0, 48(sp)
   55638:	1e a0 00 05 	add_i s0, sp, 40
   5563c:	00 10 00 00 	or s0, s0, 4
   55640:	60 00 00 88 	store_32 s3, (s0)
   55644:	5e a0 00 88 	store_32 s2, 40(sp)
; __udivmoddi4(a, b, &r);
   55648:	28 00 00 a8 	load_32 s1, (s8)
   5564c:	5e c0 00 a8 	load_32 s2, 48(sp)
   55650:	60 00 00 a8 	load_32 s3, (s0)
   55654:	1e a0 00 a8 	load_32 s0, 40(sp)
   55658:	1c 21 00 a8 	load_32 s8, 8(gp)
   5565c:	3e 81 00 05 	add_i s9, sp, 32
   55660:	1e 70 00 88 	store_32 s0, 28(sp)
   55664:	00 00 f1 c0 	move s0, s2
   55668:	5e 70 00 a8 	load_32 s2, 28(sp)
   5566c:	9e 60 00 88 	store_32 s4, 24(sp)
   55670:	80 80 f4 c0 	move s4, s9
   55674:	be 50 00 88 	store_32 s5, 20(sp)
   55678:	de 40 00 88 	store_32 s6, 16(sp)
   5567c:	fe 30 00 88 	store_32 s7, 12(sp)
   55680:	3e 21 00 88 	store_32 s9, 8(sp)
   55684:	08 01 00 fc 	call s8
; return r;
   55688:	5e 20 00 a8 	load_32 s2, 8(sp)
   5568c:	62 10 00 00 	or s3, s2, 4
   55690:	63 00 00 a8 	load_32 s3, (s3)
   55694:	9e 80 00 a8 	load_32 s4, 32(sp)
   55698:	1e 10 00 88 	store_32 s0, 4(sp)
   5569c:	00 00 f2 c0 	move s0, s4
   556a0:	3e 00 00 88 	store_32 s1, (sp)
   556a4:	20 80 f1 c0 	move s1, s3
   556a8:	fe f3 00 a8 	load_32 ra, 60(sp)
   556ac:	de 03 01 05 	add_i sp, sp, 64
   556b0:	1f 00 00 f0 	ret

00000000000556b4 __umodsi3:
; {
   556b4:	de 03 ff 05 	add_i sp, sp, -64
   556b8:	fe f3 00 88 	store_32 ra, 60(sp)
   556bc:	40 80 f0 c0 	move s2, s1
   556c0:	60 00 f0 c0 	move s3, s0
   556c4:	1e e0 00 88 	store_32 s0, 56(sp)
   556c8:	3e d0 00 88 	store_32 s1, 52(sp)
; return a - __udivsi3(a, b) * b;
   556cc:	1e e0 00 a8 	load_32 s0, 56(sp)
   556d0:	3e d0 00 a8 	load_32 s1, 52(sp)
   556d4:	9c 00 00 a8 	load_32 s4, (gp)
   556d8:	1e c0 00 88 	store_32 s0, 48(sp)
   556dc:	5e b0 00 88 	store_32 s2, 44(sp)
   556e0:	7e a0 00 88 	store_32 s3, 40(sp)
   556e4:	84 00 00 fc 	call s4
   556e8:	3e d0 00 a8 	load_32 s1, 52(sp)
   556ec:	00 80 70 c0 	mull_i s0, s0, s1
   556f0:	3e c0 00 a8 	load_32 s1, 48(sp)
   556f4:	01 00 60 c0 	sub_i s0, s1, s0
   556f8:	fe f3 00 a8 	load_32 ra, 60(sp)
   556fc:	de 03 01 05 	add_i sp, sp, 64
   55700:	1f 00 00 f0 	ret

0000000000055704 __udivsi3:
; __udivsi3:          move s4, 0              # Quotient
   55704:	80 00 00 0f 	move s4, 0
; cmplt_u s2, s0, s1      # dividend < divisor
   55708:	40 80 80 c1 	cmplt_u s2, s0, s1
; bnz s2, done            # If yes, result is zero, bail
   5570c:	22 02 00 f4 	bnz s2, 68 <done>
; clz s2, s0              # Get dividend leading bits
   55710:	40 00 c0 c0 	clz s2, s0
; clz s3, s1              # Get divisor leading bits
   55714:	60 80 c0 c0 	clz s3, s1
; sub_i s5, s3, s2        # Number of quotient bits
   55718:	a3 00 61 c0 	sub_i s5, s3, s2
; shl s1, s1, s5          # Shift divisor
   5571c:	21 80 b2 c0 	shl s1, s1, s5

0000000000055720 divide_loop:
; divide_loop:        cmpge_u s2, s0, s1      # Is current dividend > divisor
   55720:	40 80 70 c1 	cmpge_u s2, s0, s1
; and s2, s2, 1           # Set only lowest bit
   55724:	42 04 00 01 	and s2, s2, 1
; or s4, s4, s2           # if true, quotient |= 1
   55728:	84 00 01 c0 	or s4, s4, s2
; shl s2, s2, 31          # Turn into 32-bit mask
   5572c:	42 7c 00 0b 	shl s2, s2, 31
; ashr s2, s2, 31
   55730:	42 7c 00 09 	ashr s2, s2, 31
; and s3, s1, s2          # If the value is true, subtract amt = divisor
   55734:	61 00 11 c0 	and s3, s1, s2
; sub_i s0, s0, s3        # dividend -= divisor
   55738:	00 80 61 c0 	sub_i s0, s0, s3
; bz s5, done             # If no more quotient bits, bail
   5573c:	a5 00 00 f2 	bz s5, 20 <done>
; sub_i s5, s5, 1         # Subtract 1 from quotient bits
   55740:	a5 04 00 06 	sub_i s5, s5, 1
; shr s1, s1, 1           # Shift divisor right
   55744:	21 04 00 0a 	shr s1, s1, 1
; shl s4, s4, 1           # Shift quotient left
   55748:	84 04 00 0b 	shl s4, s4, 1
; b divide_loop
   5574c:	f5 ff ff f7 	b -44 <divide_loop>

0000000000055750 done:
; done:               move s0, s4             # Move quotient to return value
   55750:	00 00 f2 c0 	move s0, s4
; re
   55754:	1f 00 00 f0 	ret

0000000000055758 _start:
   55758:	00 00 00 ac 	getcr s0, 0
   5575c:	00 38 00 0b 	shl s0, s0, 14
   55760:	c0 23 00 4f 	movehi sp, 256
   55764:	de 03 60 c0 	sub_i sp, sp, s0
   55768:	8b 07 00 4f 	movehi gp, 43
   5576c:	9c 13 00 00 	or gp, gp, 4
   55770:	60 01 00 f4 	bnz s0, 44 <do_main>
   55774:	0b 07 00 4f 	movehi s24, 43
   55778:	18 03 00 00 	or s24, s24, 0
   5577c:	2b 07 00 4f 	movehi s25, 43
   55780:	39 13 00 00 	or s25, s25, 4

0000000000055784 init_loop:
   55784:	18 80 0c c1 	cmpeq_i s0, s24, s25
   55788:	a0 00 00 f4 	bnz s0, 20 <do_main>
   5578c:	18 00 00 a8 	load_32 s0, (s24)
   55790:	18 13 00 05 	add_i s24, s24, 4
   55794:	00 00 00 fc 	call s0
   55798:	fb ff ff f7 	b -20 <init_loop>

000000000005579c do_main:
   5579c:	00 00 00 0f 	move s0, 0
   557a0:	9b de ff f9 	call -34196 <main>
   557a4:	0a 04 00 4f 	movehi s0, 42
   557a8:	00 60 5f 00 	or s0, s0, 6104
   557ac:	20 00 00 aa 	load_sync s1, (s0)
   557b0:	e1 ff ff f5 	bnz s1, -4 <do_main+0x10>
   557b4:	20 04 00 0f 	move s1, 1
   557b8:	20 00 00 8a 	store_sync s1, (s0)  
   557bc:	81 ff ff f3 	bz s1, -16 <do_main+0x10>
   557c0:	33 00 00 f8 	call 204 <call_atexit_functions>
   557c4:	00 10 00 0f 	move s0, 4
   557c8:	f6 f6 ff f9 	call -9256 <_write_uart>
   557cc:	00 fc ff 0f 	move s0, -1
   557d0:	14 00 00 8c 	setcr s0, 20
   557d4:	00 00 00 f6 	b 0 <do_main+0x38>

00000000000557d8 exit_flag:
   557d8:	00 00 00 00 	nop

00000000000557dc _Znwj:
   557dc:	de 03 ff 05 	add_i sp, sp, -64
   557e0:	fe f3 00 88 	store_32 ra, 60(sp)
   557e4:	97 de ff f9 	call -34212 <malloc>
   557e8:	fe f3 00 a8 	load_32 ra, 60(sp)
   557ec:	de 03 01 05 	add_i sp, sp, 64
   557f0:	1f 00 00 f0 	ret

00000000000557f4 _ZdlPv:
   557f4:	de 03 ff 05 	add_i sp, sp, -64
   557f8:	fe f3 00 88 	store_32 ra, 60(sp)
   557fc:	1b e6 ff f9 	call -26516 <free>
   55800:	fe f3 00 a8 	load_32 ra, 60(sp)
   55804:	de 03 01 05 	add_i sp, sp, 64
   55808:	1f 00 00 f0 	ret

000000000005580c _Znaj:
   5580c:	de 03 ff 05 	add_i sp, sp, -64
   55810:	fe f3 00 88 	store_32 ra, 60(sp)
   55814:	8b de ff f9 	call -34260 <malloc>
   55818:	fe f3 00 a8 	load_32 ra, 60(sp)
   5581c:	de 03 01 05 	add_i sp, sp, 64
   55820:	1f 00 00 f0 	ret

0000000000055824 _ZdaPv:
   55824:	de 03 ff 05 	add_i sp, sp, -64
   55828:	fe f3 00 88 	store_32 ra, 60(sp)
   5582c:	0f e6 ff f9 	call -26564 <free>
   55830:	fe f3 00 a8 	load_32 ra, 60(sp)
   55834:	de 03 01 05 	add_i sp, sp, 64
   55838:	1f 00 00 f0 	ret

000000000005583c __cxa_atexit:
   5583c:	de 03 ff 05 	add_i sp, sp, -64
   55840:	1e f3 00 88 	store_32 s24, 60(sp)
   55844:	3e e3 00 88 	store_32 s25, 56(sp)
   55848:	fe d3 00 88 	store_32 ra, 52(sp)
   5584c:	00 83 f0 c0 	move s24, s1
   55850:	20 03 f0 c0 	move s25, s0
   55854:	00 30 00 0f 	move s0, 12
   55858:	7a de ff f9 	call -34328 <malloc>
   5585c:	20 0c 00 4f 	movehi s1, 96
   55860:	21 20 67 00 	or s1, s1, 6600
   55864:	41 00 00 a8 	load_32 s2, (s1)
   55868:	40 00 00 88 	store_32 s2, (s0)
   5586c:	01 00 00 88 	store_32 s0, (s1)
   55870:	20 13 00 88 	store_32 s25, 4(s0)
   55874:	00 23 00 88 	store_32 s24, 8(s0)
   55878:	fe d3 00 a8 	load_32 ra, 52(sp)
   5587c:	3e e3 00 a8 	load_32 s25, 56(sp)
   55880:	1e f3 00 a8 	load_32 s24, 60(sp)
   55884:	de 03 01 05 	add_i sp, sp, 64
   55888:	1f 00 00 f0 	ret

000000000005588c call_atexit_functions:
   5588c:	de 03 ff 05 	add_i sp, sp, -64
   55890:	1e f3 00 88 	store_32 s24, 60(sp)
   55894:	fe e3 00 88 	store_32 ra, 56(sp)
   55898:	00 0c 00 4f 	movehi s0, 96
   5589c:	00 20 67 00 	or s0, s0, 6600
   558a0:	00 03 00 a8 	load_32 s24, (s0)
   558a4:	f8 00 00 f2 	bz s24, 28 <call_atexit_functions+0x34>
   558a8:	38 10 00 a8 	load_32 s1, 4(s24)
   558ac:	18 20 00 a8 	load_32 s0, 8(s24)
   558b0:	21 00 00 fc 	call s1
   558b4:	18 03 00 a8 	load_32 s24, (s24)
   558b8:	58 00 00 f2 	bz s24, 8 <call_atexit_functions+0x34>
   558bc:	fb ff ff f7 	b -20 <call_atexit_functions+0x1c>
   558c0:	fe e3 00 a8 	load_32 ra, 56(sp)
   558c4:	1e f3 00 a8 	load_32 s24, 60(sp)
   558c8:	de 03 01 05 	add_i sp, sp, 64
   558cc:	1f 00 00 f0 	ret

00000000000558d0 __cxa_pure_virtual:
   558d0:	de 03 ff 05 	add_i sp, sp, -64
   558d4:	fe f3 00 88 	store_32 ra, 60(sp)
   558d8:	01 00 00 4f 	movehi s0, 1
   558dc:	00 0c 3a 00 	or s0, s0, 3715
   558e0:	1b f2 ff f9 	call -14228 <puts>
   558e4:	00 00 e0 c3 	break

00000000000558e8 _GLOBAL__sub_I_cxx_runtime.cpp:
   558e8:	de 03 ff 05 	add_i sp, sp, -64
   558ec:	1e f3 00 88 	store_32 s24, 60(sp)
   558f0:	3e e3 00 88 	store_32 s25, 56(sp)
   558f4:	5e d3 00 88 	store_32 s26, 52(sp)
   558f8:	7e c3 00 88 	store_32 s27, 48(sp)
   558fc:	fe b3 00 88 	store_32 ra, 44(sp)
   55900:	03 00 00 4f 	movehi s0, 3
   55904:	20 0c 00 4f 	movehi s1, 96
   55908:	00 33 00 0f 	move s24, 12
   5590c:	00 e0 73 00 	or s0, s0, 7416
   55910:	41 f3 66 00 	or s26, s1, 6588
   55914:	00 20 00 05 	add_i s0, s0, 8
   55918:	1a 00 00 88 	store_32 s0, (s26)
   5591c:	00 00 fc c0 	move s0, s24
   55920:	48 de ff f9 	call -34528 <malloc>
   55924:	20 0c 00 4f 	movehi s1, 96
   55928:	40 0c 00 4f 	movehi s2, 96
   5592c:	21 20 67 00 	or s1, s1, 6600
   55930:	3e a0 00 88 	store_32 s1, 40(sp)
   55934:	20 03 f0 c0 	move s25, s0
   55938:	0a 04 00 4f 	movehi s0, 42
   5593c:	21 00 00 a8 	load_32 s1, (s1)
   55940:	62 03 67 00 	or s27, s2, 6592
   55944:	39 00 00 88 	store_32 s1, (s25)
   55948:	23 00 00 4f 	movehi s1, 3
   5594c:	00 90 66 00 	or s0, s0, 6564
   55950:	19 10 00 88 	store_32 s0, 4(s25)
   55954:	59 23 00 88 	store_32 s26, 8(s25)
   55958:	01 d0 74 00 	or s0, s1, 7476
   5595c:	00 20 00 05 	add_i s0, s0, 8
   55960:	1b 00 00 88 	store_32 s0, (s27)
   55964:	00 00 fc c0 	move s0, s24
   55968:	36 de ff f9 	call -34600 <malloc>
   5596c:	20 03 00 88 	store_32 s25, (s0)
   55970:	2a 04 00 4f 	movehi s1, 42
   55974:	5e a0 00 a8 	load_32 s2, 40(sp)
   55978:	21 a0 66 00 	or s1, s1, 6568
   5597c:	02 00 00 88 	store_32 s0, (s2)
   55980:	20 10 00 88 	store_32 s1, 4(s0)
   55984:	60 23 00 88 	store_32 s27, 8(s0)
   55988:	fe b3 00 a8 	load_32 ra, 44(sp)
   5598c:	7e c3 00 a8 	load_32 s27, 48(sp)
   55990:	5e d3 00 a8 	load_32 s26, 52(sp)
   55994:	3e e3 00 a8 	load_32 s25, 56(sp)
   55998:	1e f3 00 a8 	load_32 s24, 60(sp)
   5599c:	de 03 01 05 	add_i sp, sp, 64
   559a0:	1f 00 00 f0 	ret

00000000000559a4 _ZN10__cxxabiv117__class_type_infoD2Ev:
   559a4:	1f 00 00 f0 	ret

00000000000559a8 _ZN10__cxxabiv120__si_class_type_infoD2Ev:
   559a8:	1f 00 00 f0 	ret

00000000000559ac _ZN10__cxxabiv117__class_type_infoD0Ev:
   559ac:	de 03 ff 05 	add_i sp, sp, -64
   559b0:	fe f3 00 88 	store_32 ra, 60(sp)
   559b4:	ad e5 ff f9 	call -26956 <free>
   559b8:	fe f3 00 a8 	load_32 ra, 60(sp)
   559bc:	de 03 01 05 	add_i sp, sp, 64
   559c0:	1f 00 00 f0 	ret

00000000000559c4 _ZN10__cxxabiv120__si_class_type_infoD0Ev:
   559c4:	de 03 ff 05 	add_i sp, sp, -64
   559c8:	fe f3 00 88 	store_32 ra, 60(sp)
   559cc:	a7 e5 ff f9 	call -26980 <free>
   559d0:	fe f3 00 a8 	load_32 ra, 60(sp)
   559d4:	de 03 01 05 	add_i sp, sp, 64
   559d8:	1f 00 00 f0 	ret
