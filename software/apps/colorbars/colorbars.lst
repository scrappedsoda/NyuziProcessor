
/home/glinsi/git/NyuziProcessor/software/apps/colorbars/colorbars:	file format ELF32-nyuzi

Disassembly of section .text:
000000000004d000 main:
   4d000:	de 03 f8 05 	add_i sp, sp, -512
   4d004:	1e f3 07 88 	store_32 s24, 508(sp)
   4d008:	3e e3 07 88 	store_32 s25, 504(sp)
   4d00c:	5e d3 07 88 	store_32 s26, 500(sp)
   4d010:	7e c3 07 88 	store_32 s27, 496(sp)
   4d014:	fe b3 07 88 	store_32 ra, 492(sp)
   4d018:	5e 03 06 8e 	store_v v26, 384(sp)
   4d01c:	7e 03 05 8e 	store_v v27, 320(sp)
   4d020:	9e 03 04 8e 	store_v v28, 256(sp)
   4d024:	be 03 03 8e 	store_v v29, 192(sp)
   4d028:	1f 1e 00 f8 	call 30844 <get_current_thread_id>
   4d02c:	40 03 f0 c0 	move s26, s0
   4d030:	da 01 00 f4 	bnz s26, 56 <main+0x68>
   4d034:	20 03 00 0f 	move s25, 0
   4d038:	00 80 fc c0 	move s0, s25
   4d03c:	c2 1f 00 f8 	call 32520 <init_vga>
   4d040:	2c 04 00 4f 	movehi s1, 44
   4d044:	4c 04 00 4f 	movehi s2, 44
   4d048:	21 20 00 00 	or s1, s1, 8
   4d04c:	42 90 04 00 	or s2, s2, 292
   4d050:	01 00 00 88 	store_32 s0, (s1)
   4d054:	00 80 3f 4f 	movehi s0, 130048
   4d058:	02 00 00 88 	store_32 s0, (s2)
   4d05c:	22 13 00 88 	store_32 s25, 4(s2)
   4d060:	22 23 00 88 	store_32 s25, 8(s2)
   4d064:	02 30 00 88 	store_32 s0, 12(s2)
   4d068:	60 1b 00 f8 	call 28032 <start_all_threads>
   4d06c:	1a 10 00 0b 	shl s0, s26, 4
   4d070:	1e f0 01 88 	store_32 s0, 124(sp)
   4d074:	0c 04 00 4f 	movehi s0, 44
   4d078:	2c 04 00 4f 	movehi s1, 44
   4d07c:	4c 04 00 4f 	movehi s2, 44
   4d080:	00 00 00 00 	nop
   4d084:	1e 80 01 88 	store_32 s0, 96(sp)
   4d088:	01 10 00 00 	or s0, s1, 4
   4d08c:	1e 50 01 88 	store_32 s0, 84(sp)
   4d090:	02 20 00 00 	or s0, s2, 8
   4d094:	1e 70 01 88 	store_32 s0, 92(sp)
   4d098:	1a 18 00 0b 	shl s0, s26, 6
   4d09c:	1e 60 01 88 	store_32 s0, 88(sp)
   4d0a0:	1a 9c 00 12 	cmpgt_i s0, s26, 39
   4d0a4:	1e 20 02 88 	store_32 s0, 136(sp)
   4d0a8:	00 00 00 4f 	movehi s0, 0
   4d0ac:	20 00 00 4f 	movehi s1, 0
   4d0b0:	40 00 00 4f 	movehi s2, 0
   4d0b4:	00 20 05 00 	or s0, s0, 328
   4d0b8:	1e 00 02 88 	store_32 s0, 128(sp)
   4d0bc:	01 00 06 00 	or s0, s1, 384
   4d0c0:	1e f0 02 88 	store_32 s0, 188(sp)
   4d0c4:	02 50 05 00 	or s0, s2, 340
   4d0c8:	1e e0 02 88 	store_32 s0, 184(sp)
   4d0cc:	0c 04 00 4f 	movehi s0, 44
   4d0d0:	33 64 66 4f 	movehi s1, 209715
   4d0d4:	44 88 88 4f 	movehi s2, 279620
   4d0d8:	20 93 04 00 	or s25, s0, 292
   4d0dc:	01 9c 19 00 	or s0, s1, 1639
   4d0e0:	1e d0 02 88 	store_32 s0, 180(sp)
   4d0e4:	02 24 22 00 	or s0, s2, 2185
   4d0e8:	1e c0 02 88 	store_32 s0, 176(sp)
   4d0ec:	00 04 00 0f 	move s0, 1
   4d0f0:	1e a0 02 88 	store_32 s0, 168(sp)
   4d0f4:	00 08 00 0f 	move s0, 2
   4d0f8:	1e 90 02 88 	store_32 s0, 164(sp)
   4d0fc:	00 10 00 0f 	move s0, 4
   4d100:	1e b0 02 88 	store_32 s0, 172(sp)
   4d104:	00 20 00 0f 	move s0, 8
   4d108:	1e 80 02 88 	store_32 s0, 160(sp)
   4d10c:	00 40 00 0f 	move s0, 16
   4d110:	1e 70 02 88 	store_32 s0, 156(sp)
   4d114:	00 80 00 0f 	move s0, 32
   4d118:	1e 60 02 88 	store_32 s0, 152(sp)
   4d11c:	60 00 00 0f 	move s3, 0
   4d120:	00 00 01 0f 	move s0, 64
   4d124:	1e 50 02 88 	store_32 s0, 148(sp)
   4d128:	00 00 02 0f 	move s0, 128
   4d12c:	1e 40 02 88 	store_32 s0, 144(sp)
   4d130:	00 00 04 0f 	move s0, 256
   4d134:	1e 30 02 88 	store_32 s0, 140(sp)
   4d138:	40 80 f1 c0 	move s2, s3
   4d13c:	7e b0 01 88 	store_32 s3, 108(sp)
   4d140:	60 83 f1 c0 	move s27, s3
   4d144:	7e 90 01 88 	store_32 s3, 100(sp)
   4d148:	00 83 f1 c0 	move s24, s3
   4d14c:	5e a3 01 88 	store_32 s26, 104(sp)
   4d150:	02 00 00 f6 	b 8 <main+0x158>
   4d154:	42 04 00 03 	xor s2, s2, 1
   4d158:	1e c3 01 88 	store_32 s24, 112(sp)
   4d15c:	02 00 00 10 	cmpeq_i s0, s2, 0
   4d160:	7e d3 01 88 	store_32 s27, 116(sp)
   4d164:	5e e0 01 88 	store_32 s2, 120(sp)
   4d168:	3e 80 01 a8 	load_32 s1, 96(sp)
   4d16c:	40 00 00 f4 	bnz s0, 8 <main+0x174>
   4d170:	3e 50 01 a8 	load_32 s1, 84(sp)
   4d174:	21 00 00 a8 	load_32 s1, (s1)
   4d178:	5e 70 01 a8 	load_32 s2, 92(sp)
   4d17c:	40 83 f0 c4 	move v26, s1
   4d180:	42 00 00 a8 	load_32 s2, (s2)
   4d184:	7e 60 01 a8 	load_32 s3, 88(sp)
   4d188:	02 83 51 c0 	add_i s24, s2, s3
   4d18c:	5e b0 01 a8 	load_32 s2, 108(sp)
   4d190:	5a 00 01 c1 	cmpeq_i s2, s26, s2
   4d194:	00 00 11 c0 	and s0, s0, s2
   4d198:	1e 10 02 88 	store_32 s0, 132(sp)
   4d19c:	7e 93 01 a8 	load_32 s27, 100(sp)
   4d1a0:	1e 20 02 a8 	load_32 s0, 136(sp)
   4d1a4:	a0 49 00 f4 	bnz s0, 2356 <main+0xad8>
   4d1a8:	3e 00 02 a8 	load_32 s1, 128(sp)
   4d1ac:	00 80 ad c2 	itof s0, s27
   4d1b0:	21 00 00 a8 	load_32 s1, (s1)
   4d1b4:	00 80 00 c2 	add_f s0, s0, s1
   4d1b8:	60 03 f0 c4 	move v27, s0
   4d1bc:	1e 10 02 a8 	load_32 s0, 132(sp)
   4d1c0:	40 00 00 f4 	bnz s0, 8 <main+0x1c8>
   4d1c4:	45 01 00 f6 	b 1300 <main+0x6d8>
   4d1c8:	5e f3 01 a8 	load_32 s26, 124(sp)
   4d1cc:	78 00 00 f6 	b 480 <main+0x3ac>
   4d1d0:	3e a0 02 a8 	load_32 s1, 168(sp)
   4d1d4:	00 00 0a 05 	add_i s0, s0, 640
   4d1d8:	80 07 f0 c8 	move_mask v28, s1, s0
   4d1dc:	1d 00 00 3a 	getlane s0, v29, 0
   4d1e0:	20 00 00 14 	cmplt_i s1, s0, 0
   4d1e4:	41 00 00 f4 	bnz s1, 8 <main+0x1ec>
   4d1e8:	9b 00 00 f6 	b 620 <main+0x454>
   4d1ec:	3e a0 02 a8 	load_32 s1, 168(sp)
   4d1f0:	00 f0 00 05 	add_i s0, s0, 60
   4d1f4:	a0 07 f0 c8 	move_mask v29, s1, s0
   4d1f8:	1c 04 00 3a 	getlane s0, v28, 1
   4d1fc:	20 00 00 14 	cmplt_i s1, s0, 0
   4d200:	41 00 00 f4 	bnz s1, 8 <main+0x208>
   4d204:	97 00 00 f6 	b 604 <main+0x460>
   4d208:	3e 90 02 a8 	load_32 s1, 164(sp)
   4d20c:	00 00 0a 05 	add_i s0, s0, 640
   4d210:	80 07 f0 c8 	move_mask v28, s1, s0
   4d214:	1d 04 00 3a 	getlane s0, v29, 1
   4d218:	20 00 00 14 	cmplt_i s1, s0, 0
   4d21c:	41 00 00 f4 	bnz s1, 8 <main+0x224>
   4d220:	93 00 00 f6 	b 588 <main+0x46c>
   4d224:	3e 90 02 a8 	load_32 s1, 164(sp)
   4d228:	00 f0 00 05 	add_i s0, s0, 60
   4d22c:	a0 07 f0 c8 	move_mask v29, s1, s0
   4d230:	1c 08 00 3a 	getlane s0, v28, 2
   4d234:	20 00 00 14 	cmplt_i s1, s0, 0
   4d238:	41 00 00 f4 	bnz s1, 8 <main+0x240>
   4d23c:	8f 00 00 f6 	b 572 <main+0x478>
   4d240:	3e b0 02 a8 	load_32 s1, 172(sp)
   4d244:	00 00 0a 05 	add_i s0, s0, 640
   4d248:	80 07 f0 c8 	move_mask v28, s1, s0
   4d24c:	1d 08 00 3a 	getlane s0, v29, 2
   4d250:	20 00 00 14 	cmplt_i s1, s0, 0
   4d254:	41 00 00 f4 	bnz s1, 8 <main+0x25c>
   4d258:	8b 00 00 f6 	b 556 <main+0x484>
   4d25c:	3e b0 02 a8 	load_32 s1, 172(sp)
   4d260:	00 f0 00 05 	add_i s0, s0, 60
   4d264:	a0 07 f0 c8 	move_mask v29, s1, s0
   4d268:	1c 0c 00 3a 	getlane s0, v28, 3
   4d26c:	20 00 00 14 	cmplt_i s1, s0, 0
   4d270:	41 00 00 f4 	bnz s1, 8 <main+0x278>
   4d274:	87 00 00 f6 	b 540 <main+0x490>
   4d278:	3e 80 02 a8 	load_32 s1, 160(sp)
   4d27c:	00 00 0a 05 	add_i s0, s0, 640
   4d280:	80 07 f0 c8 	move_mask v28, s1, s0
   4d284:	1d 0c 00 3a 	getlane s0, v29, 3
   4d288:	20 00 00 14 	cmplt_i s1, s0, 0
   4d28c:	41 00 00 f4 	bnz s1, 8 <main+0x294>
   4d290:	83 00 00 f6 	b 524 <main+0x49c>
   4d294:	3e 80 02 a8 	load_32 s1, 160(sp)
   4d298:	00 f0 00 05 	add_i s0, s0, 60
   4d29c:	a0 07 f0 c8 	move_mask v29, s1, s0
   4d2a0:	1c 10 00 3a 	getlane s0, v28, 4
   4d2a4:	20 00 00 14 	cmplt_i s1, s0, 0
   4d2a8:	41 00 00 f4 	bnz s1, 8 <main+0x2b0>
   4d2ac:	7f 00 00 f6 	b 508 <main+0x4a8>
   4d2b0:	3e 70 02 a8 	load_32 s1, 156(sp)
   4d2b4:	00 00 0a 05 	add_i s0, s0, 640
   4d2b8:	80 07 f0 c8 	move_mask v28, s1, s0
   4d2bc:	1d 10 00 3a 	getlane s0, v29, 4
   4d2c0:	20 00 00 14 	cmplt_i s1, s0, 0
   4d2c4:	41 00 00 f4 	bnz s1, 8 <main+0x2cc>
   4d2c8:	7b 00 00 f6 	b 492 <main+0x4b4>
   4d2cc:	3e 70 02 a8 	load_32 s1, 156(sp)
   4d2d0:	00 f0 00 05 	add_i s0, s0, 60
   4d2d4:	a0 07 f0 c8 	move_mask v29, s1, s0
   4d2d8:	1c 14 00 3a 	getlane s0, v28, 5
   4d2dc:	20 00 00 14 	cmplt_i s1, s0, 0
   4d2e0:	41 00 00 f4 	bnz s1, 8 <main+0x2e8>
   4d2e4:	77 00 00 f6 	b 476 <main+0x4c0>
   4d2e8:	3e 60 02 a8 	load_32 s1, 152(sp)
   4d2ec:	00 00 0a 05 	add_i s0, s0, 640
   4d2f0:	80 07 f0 c8 	move_mask v28, s1, s0
   4d2f4:	1d 14 00 3a 	getlane s0, v29, 5
   4d2f8:	20 00 00 14 	cmplt_i s1, s0, 0
   4d2fc:	41 00 00 f4 	bnz s1, 8 <main+0x304>
   4d300:	73 00 00 f6 	b 460 <main+0x4cc>
   4d304:	3e 60 02 a8 	load_32 s1, 152(sp)
   4d308:	00 f0 00 05 	add_i s0, s0, 60
   4d30c:	a0 07 f0 c8 	move_mask v29, s1, s0
   4d310:	1c 18 00 3a 	getlane s0, v28, 6
   4d314:	20 00 00 14 	cmplt_i s1, s0, 0
   4d318:	41 00 00 f4 	bnz s1, 8 <main+0x320>
   4d31c:	6f 00 00 f6 	b 444 <main+0x4d8>
   4d320:	3e 50 02 a8 	load_32 s1, 148(sp)
   4d324:	00 00 0a 05 	add_i s0, s0, 640
   4d328:	80 07 f0 c8 	move_mask v28, s1, s0
   4d32c:	1d 18 00 3a 	getlane s0, v29, 6
   4d330:	20 00 00 14 	cmplt_i s1, s0, 0
   4d334:	41 00 00 f4 	bnz s1, 8 <main+0x33c>
   4d338:	6b 00 00 f6 	b 428 <main+0x4e4>
   4d33c:	3e 50 02 a8 	load_32 s1, 148(sp)
   4d340:	00 f0 00 05 	add_i s0, s0, 60
   4d344:	a0 07 f0 c8 	move_mask v29, s1, s0
   4d348:	1c 1c 00 3a 	getlane s0, v28, 7
   4d34c:	20 00 00 14 	cmplt_i s1, s0, 0
   4d350:	41 00 00 f4 	bnz s1, 8 <main+0x358>
   4d354:	67 00 00 f6 	b 412 <main+0x4f0>
   4d358:	3e 40 02 a8 	load_32 s1, 144(sp)
   4d35c:	00 00 0a 05 	add_i s0, s0, 640
   4d360:	80 07 f0 c8 	move_mask v28, s1, s0
   4d364:	1d 1c 00 3a 	getlane s0, v29, 7
   4d368:	20 00 00 14 	cmplt_i s1, s0, 0
   4d36c:	41 00 00 f4 	bnz s1, 8 <main+0x374>
   4d370:	63 00 00 f6 	b 396 <main+0x4fc>
   4d374:	3e 40 02 a8 	load_32 s1, 144(sp)
   4d378:	00 f0 00 05 	add_i s0, s0, 60
   4d37c:	a0 07 f0 c8 	move_mask v29, s1, s0
   4d380:	1c 20 00 3a 	getlane s0, v28, 8
   4d384:	20 00 00 14 	cmplt_i s1, s0, 0
   4d388:	41 00 00 f4 	bnz s1, 8 <main+0x390>
   4d38c:	5f 00 00 f6 	b 380 <main+0x508>
   4d390:	3e 30 02 a8 	load_32 s1, 140(sp)
   4d394:	00 00 0a 05 	add_i s0, s0, 640
   4d398:	80 07 f0 c8 	move_mask v28, s1, s0
   4d39c:	1d 20 00 3a 	getlane s0, v29, 8
   4d3a0:	20 00 00 14 	cmplt_i s1, s0, 0
   4d3a4:	a1 0b 00 f4 	bnz s1, 372 <main+0x518>
   4d3a8:	5f 00 00 f6 	b 380 <main+0x524>
   4d3ac:	1e f0 02 a8 	load_32 s0, 188(sp)
   4d3b0:	00 00 00 ae 	load_v v0, (s0)
   4d3b4:	00 00 ad c2 	itof s0, s26
   4d3b8:	00 00 00 c6 	add_f v0, v0, s0
   4d3bc:	1e e0 02 a8 	load_32 s0, 184(sp)
   4d3c0:	00 00 00 a8 	load_32 s0, (s0)
   4d3c4:	00 00 00 c6 	add_f v0, v0, s0
   4d3c8:	19 00 00 a8 	load_32 s0, (s25)
   4d3cc:	39 10 00 a8 	load_32 s1, 4(s25)
   4d3d0:	3b 80 20 c6 	mul_f v1, v27, s1
   4d3d4:	39 20 00 a8 	load_32 s1, 8(s25)
   4d3d8:	59 30 00 a8 	load_32 s2, 12(s25)
   4d3dc:	40 00 20 c6 	mul_f v2, v0, s0
   4d3e0:	00 80 20 c6 	mul_f v0, v0, s1
   4d3e4:	7b 00 21 c6 	mul_f v3, v27, s2
   4d3e8:	01 00 00 3a 	getlane s0, v1, 0
   4d3ec:	22 00 00 c6 	add_f v1, v2, s0
   4d3f0:	03 00 00 3a 	getlane s0, v3, 0
   4d3f4:	00 00 00 c6 	add_f v0, v0, s0
   4d3f8:	1e d0 02 a8 	load_32 s0, 180(sp)
   4d3fc:	20 80 b0 d1 	ftoi v1, v1
   4d400:	00 00 b0 d1 	ftoi v0, v0
   4d404:	41 00 f0 c5 	mulh_i v2, v1, s0
   4d408:	1e c0 02 a8 	load_32 s0, 176(sp)
   4d40c:	62 20 00 29 	ashr v3, v2, 8
   4d410:	80 00 f0 c5 	mulh_i v4, v0, s0
   4d414:	42 7c 00 2a 	shr v2, v2, 31
   4d418:	43 00 51 d0 	add_i v2, v3, v2
   4d41c:	64 00 50 d0 	add_i v3, v4, v0
   4d420:	42 00 0a 27 	mull_i v2, v2, 640
   4d424:	83 14 00 29 	ashr v4, v3, 5
   4d428:	81 03 61 d0 	sub_i v28, v1, v2
   4d42c:	23 7c 00 2a 	shr v1, v3, 31
   4d430:	24 80 50 d0 	add_i v1, v4, v1
   4d434:	1c 00 00 3a 	getlane s0, v28, 0
   4d438:	21 f0 00 27 	mull_i v1, v1, 60
   4d43c:	20 00 00 14 	cmplt_i s1, s0, 0
   4d440:	a0 83 60 d0 	sub_i v29, v0, v1
   4d444:	61 ec ff f5 	bnz s1, -628 <main+0x1d0>
   4d448:	1d 00 00 3a 	getlane s0, v29, 0
   4d44c:	20 00 00 14 	cmplt_i s1, s0, 0
   4d450:	e1 ec ff f5 	bnz s1, -612 <main+0x1ec>
   4d454:	1c 04 00 3a 	getlane s0, v28, 1
   4d458:	20 00 00 14 	cmplt_i s1, s0, 0
   4d45c:	61 ed ff f5 	bnz s1, -596 <main+0x208>
   4d460:	1d 04 00 3a 	getlane s0, v29, 1
   4d464:	20 00 00 14 	cmplt_i s1, s0, 0
   4d468:	e1 ed ff f5 	bnz s1, -580 <main+0x224>
   4d46c:	1c 08 00 3a 	getlane s0, v28, 2
   4d470:	20 00 00 14 	cmplt_i s1, s0, 0
   4d474:	61 ee ff f5 	bnz s1, -564 <main+0x240>
   4d478:	1d 08 00 3a 	getlane s0, v29, 2
   4d47c:	20 00 00 14 	cmplt_i s1, s0, 0
   4d480:	e1 ee ff f5 	bnz s1, -548 <main+0x25c>
   4d484:	1c 0c 00 3a 	getlane s0, v28, 3
   4d488:	20 00 00 14 	cmplt_i s1, s0, 0
   4d48c:	61 ef ff f5 	bnz s1, -532 <main+0x278>
   4d490:	1d 0c 00 3a 	getlane s0, v29, 3
   4d494:	20 00 00 14 	cmplt_i s1, s0, 0
   4d498:	e1 ef ff f5 	bnz s1, -516 <main+0x294>
   4d49c:	1c 10 00 3a 	getlane s0, v28, 4
   4d4a0:	20 00 00 14 	cmplt_i s1, s0, 0
   4d4a4:	61 f0 ff f5 	bnz s1, -500 <main+0x2b0>
   4d4a8:	1d 10 00 3a 	getlane s0, v29, 4
   4d4ac:	20 00 00 14 	cmplt_i s1, s0, 0
   4d4b0:	e1 f0 ff f5 	bnz s1, -484 <main+0x2cc>
   4d4b4:	1c 14 00 3a 	getlane s0, v28, 5
   4d4b8:	20 00 00 14 	cmplt_i s1, s0, 0
   4d4bc:	61 f1 ff f5 	bnz s1, -468 <main+0x2e8>
   4d4c0:	1d 14 00 3a 	getlane s0, v29, 5
   4d4c4:	20 00 00 14 	cmplt_i s1, s0, 0
   4d4c8:	e1 f1 ff f5 	bnz s1, -452 <main+0x304>
   4d4cc:	1c 18 00 3a 	getlane s0, v28, 6
   4d4d0:	20 00 00 14 	cmplt_i s1, s0, 0
   4d4d4:	61 f2 ff f5 	bnz s1, -436 <main+0x320>
   4d4d8:	1d 18 00 3a 	getlane s0, v29, 6
   4d4dc:	20 00 00 14 	cmplt_i s1, s0, 0
   4d4e0:	e1 f2 ff f5 	bnz s1, -420 <main+0x33c>
   4d4e4:	1c 1c 00 3a 	getlane s0, v28, 7
   4d4e8:	20 00 00 14 	cmplt_i s1, s0, 0
   4d4ec:	61 f3 ff f5 	bnz s1, -404 <main+0x358>
   4d4f0:	1d 1c 00 3a 	getlane s0, v29, 7
   4d4f4:	20 00 00 14 	cmplt_i s1, s0, 0
   4d4f8:	e1 f3 ff f5 	bnz s1, -388 <main+0x374>
   4d4fc:	1c 20 00 3a 	getlane s0, v28, 8
   4d500:	20 00 00 14 	cmplt_i s1, s0, 0
   4d504:	61 f4 ff f5 	bnz s1, -372 <main+0x390>
   4d508:	1d 20 00 3a 	getlane s0, v29, 8
   4d50c:	20 00 00 14 	cmplt_i s1, s0, 0
   4d510:	41 00 00 f4 	bnz s1, 8 <main+0x518>
   4d514:	04 00 00 f6 	b 16 <main+0x524>
   4d518:	3e 30 02 a8 	load_32 s1, 140(sp)
   4d51c:	00 f0 00 05 	add_i s0, s0, 60
   4d520:	a0 07 f0 c8 	move_mask v29, s1, s0
   4d524:	3c 24 00 3a 	getlane s1, v28, 9
   4d528:	00 00 08 0f 	move s0, 512
   4d52c:	41 00 00 14 	cmplt_i s2, s1, 0
   4d530:	42 00 00 f4 	bnz s2, 8 <main+0x538>
   4d534:	03 00 00 f6 	b 12 <main+0x540>
   4d538:	21 00 0a 05 	add_i s1, s1, 640
   4d53c:	80 83 f0 c8 	move_mask v28, s0, s1
   4d540:	3d 24 00 3a 	getlane s1, v29, 9
   4d544:	41 00 00 14 	cmplt_i s2, s1, 0
   4d548:	42 00 00 f4 	bnz s2, 8 <main+0x550>
   4d54c:	03 00 00 f6 	b 12 <main+0x558>
   4d550:	21 f0 00 05 	add_i s1, s1, 60
   4d554:	a0 83 f0 c8 	move_mask v29, s0, s1
   4d558:	3c 28 00 3a 	getlane s1, v28, 10
   4d55c:	00 00 10 0f 	move s0, 1024
   4d560:	41 00 00 14 	cmplt_i s2, s1, 0
   4d564:	42 00 00 f4 	bnz s2, 8 <main+0x56c>
   4d568:	03 00 00 f6 	b 12 <main+0x574>
   4d56c:	21 00 0a 05 	add_i s1, s1, 640
   4d570:	80 83 f0 c8 	move_mask v28, s0, s1
   4d574:	3d 28 00 3a 	getlane s1, v29, 10
   4d578:	41 00 00 14 	cmplt_i s2, s1, 0
   4d57c:	42 00 00 f4 	bnz s2, 8 <main+0x584>
   4d580:	03 00 00 f6 	b 12 <main+0x58c>
   4d584:	21 f0 00 05 	add_i s1, s1, 60
   4d588:	a0 83 f0 c8 	move_mask v29, s0, s1
   4d58c:	3c 2c 00 3a 	getlane s1, v28, 11
   4d590:	00 00 20 0f 	move s0, 2048
   4d594:	41 00 00 14 	cmplt_i s2, s1, 0
   4d598:	42 00 00 f4 	bnz s2, 8 <main+0x5a0>
   4d59c:	03 00 00 f6 	b 12 <main+0x5a8>
   4d5a0:	21 00 0a 05 	add_i s1, s1, 640
   4d5a4:	80 83 f0 c8 	move_mask v28, s0, s1
   4d5a8:	3d 2c 00 3a 	getlane s1, v29, 11
   4d5ac:	41 00 00 14 	cmplt_i s2, s1, 0
   4d5b0:	42 00 00 f4 	bnz s2, 8 <main+0x5b8>
   4d5b4:	03 00 00 f6 	b 12 <main+0x5c0>
   4d5b8:	21 f0 00 05 	add_i s1, s1, 60
   4d5bc:	a0 83 f0 c8 	move_mask v29, s0, s1
   4d5c0:	3c 30 00 3a 	getlane s1, v28, 12
   4d5c4:	00 00 40 0f 	move s0, 4096
   4d5c8:	41 00 00 14 	cmplt_i s2, s1, 0
   4d5cc:	42 00 00 f4 	bnz s2, 8 <main+0x5d4>
   4d5d0:	03 00 00 f6 	b 12 <main+0x5dc>
   4d5d4:	21 00 0a 05 	add_i s1, s1, 640
   4d5d8:	80 83 f0 c8 	move_mask v28, s0, s1
   4d5dc:	3d 30 00 3a 	getlane s1, v29, 12
   4d5e0:	41 00 00 14 	cmplt_i s2, s1, 0
   4d5e4:	42 00 00 f4 	bnz s2, 8 <main+0x5ec>
   4d5e8:	03 00 00 f6 	b 12 <main+0x5f4>
   4d5ec:	21 f0 00 05 	add_i s1, s1, 60
   4d5f0:	a0 83 f0 c8 	move_mask v29, s0, s1
   4d5f4:	3c 34 00 3a 	getlane s1, v28, 13
   4d5f8:	01 00 00 4f 	movehi s0, 1
   4d5fc:	41 00 00 14 	cmplt_i s2, s1, 0
   4d600:	42 00 00 f4 	bnz s2, 8 <main+0x608>
   4d604:	03 00 00 f6 	b 12 <main+0x610>
   4d608:	21 00 0a 05 	add_i s1, s1, 640
   4d60c:	80 83 f0 c8 	move_mask v28, s0, s1
   4d610:	3d 34 00 3a 	getlane s1, v29, 13
   4d614:	41 00 00 14 	cmplt_i s2, s1, 0
   4d618:	42 00 00 f4 	bnz s2, 8 <main+0x620>
   4d61c:	03 00 00 f6 	b 12 <main+0x628>
   4d620:	21 f0 00 05 	add_i s1, s1, 60
   4d624:	a0 83 f0 c8 	move_mask v29, s0, s1
   4d628:	3c 38 00 3a 	getlane s1, v28, 14
   4d62c:	02 00 00 4f 	movehi s0, 2
   4d630:	41 00 00 14 	cmplt_i s2, s1, 0
   4d634:	42 00 00 f4 	bnz s2, 8 <main+0x63c>
   4d638:	03 00 00 f6 	b 12 <main+0x644>
   4d63c:	21 00 0a 05 	add_i s1, s1, 640
   4d640:	80 83 f0 c8 	move_mask v28, s0, s1
   4d644:	3d 38 00 3a 	getlane s1, v29, 14
   4d648:	41 00 00 14 	cmplt_i s2, s1, 0
   4d64c:	42 00 00 f4 	bnz s2, 8 <main+0x654>
   4d650:	03 00 00 f6 	b 12 <main+0x65c>
   4d654:	21 f0 00 05 	add_i s1, s1, 60
   4d658:	a0 83 f0 c8 	move_mask v29, s0, s1
   4d65c:	3c 3c 00 3a 	getlane s1, v28, 15
   4d660:	04 00 00 4f 	movehi s0, 4
   4d664:	41 00 00 14 	cmplt_i s2, s1, 0
   4d668:	42 00 00 f4 	bnz s2, 8 <main+0x670>
   4d66c:	03 00 00 f6 	b 12 <main+0x678>
   4d670:	21 00 0a 05 	add_i s1, s1, 640
   4d674:	80 83 f0 c8 	move_mask v28, s0, s1
   4d678:	3d 3c 00 3a 	getlane s1, v29, 15
   4d67c:	41 00 00 14 	cmplt_i s2, s1, 0
   4d680:	42 00 00 f4 	bnz s2, 8 <main+0x688>
   4d684:	03 00 00 f6 	b 12 <main+0x690>
   4d688:	21 f0 00 05 	add_i s1, s1, 60
   4d68c:	a0 83 f0 c8 	move_mask v29, s0, s1
   4d690:	05 04 00 4f 	movehi s0, 37
   4d694:	7e 23 00 88 	store_32 s27, 8(sp)
   4d698:	5e 13 00 88 	store_32 s26, 4(sp)
   4d69c:	00 68 51 00 	or s0, s0, 5210
   4d6a0:	1e 00 00 88 	store_32 s0, (sp)
   4d6a4:	8e 01 00 f8 	call 1592 <printf>
   4d6a8:	1c 08 00 2b 	shl v0, v28, 2
   4d6ac:	3d 00 28 27 	mull_i v1, v29, 2560
   4d6b0:	5a 03 01 05 	add_i s26, s26, 64
   4d6b4:	00 00 5d d0 	add_i v0, v0, v26
   4d6b8:	1a 00 0a 14 	cmplt_i s0, s26, 640
   4d6bc:	00 80 50 d0 	add_i v0, v0, v1
   4d6c0:	00 00 00 ba 	load_gath v0, (v0)
   4d6c4:	18 00 00 8e 	store_v v0, (s24)
   4d6c8:	18 00 00 e4 	dflush s24
   4d6cc:	18 03 04 05 	add_i s24, s24, 256
   4d6d0:	e0 e6 ff f5 	bnz s0, -804 <main+0x3ac>
   4d6d4:	01 01 00 f6 	b 1028 <main+0xad8>
   4d6d8:	1e f0 01 a8 	load_32 s0, 124(sp)
   4d6dc:	3e f0 02 a8 	load_32 s1, 188(sp)
   4d6e0:	01 00 00 ae 	load_v v0, (s1)
   4d6e4:	20 00 a0 c2 	itof s1, s0
   4d6e8:	00 80 00 c6 	add_f v0, v0, s1
   4d6ec:	3e e0 02 a8 	load_32 s1, 184(sp)
   4d6f0:	21 00 00 a8 	load_32 s1, (s1)
   4d6f4:	00 80 00 c6 	add_f v0, v0, s1
   4d6f8:	39 00 00 a8 	load_32 s1, (s25)
   4d6fc:	59 10 00 a8 	load_32 s2, 4(s25)
   4d700:	3b 00 21 c6 	mul_f v1, v27, s2
   4d704:	59 20 00 a8 	load_32 s2, 8(s25)
   4d708:	79 30 00 a8 	load_32 s3, 12(s25)
   4d70c:	40 80 20 c6 	mul_f v2, v0, s1
   4d710:	00 00 21 c6 	mul_f v0, v0, s2
   4d714:	7b 80 21 c6 	mul_f v3, v27, s3
   4d718:	21 00 00 3a 	getlane s1, v1, 0
   4d71c:	22 80 00 c6 	add_f v1, v2, s1
   4d720:	23 00 00 3a 	getlane s1, v3, 0
   4d724:	00 80 00 c6 	add_f v0, v0, s1
   4d728:	3e d0 02 a8 	load_32 s1, 180(sp)
   4d72c:	20 80 b0 d1 	ftoi v1, v1
   4d730:	40 00 b0 d1 	ftoi v2, v0
   4d734:	01 80 f0 c5 	mulh_i v0, v1, s1
   4d738:	3e c0 02 a8 	load_32 s1, 176(sp)
   4d73c:	60 20 00 29 	ashr v3, v0, 8
   4d740:	82 80 f0 c5 	mulh_i v4, v2, s1
   4d744:	00 7c 00 2a 	shr v0, v0, 31
   4d748:	03 00 50 d0 	add_i v0, v3, v0
   4d74c:	64 00 51 d0 	add_i v3, v4, v2
   4d750:	20 04 00 0f 	move s1, 1
   4d754:	00 00 0a 27 	mull_i v0, v0, 640
   4d758:	83 14 00 29 	ashr v4, v3, 5
   4d75c:	01 00 60 d0 	sub_i v0, v1, v0
   4d760:	23 7c 00 2a 	shr v1, v3, 31
   4d764:	24 80 50 d0 	add_i v1, v4, v1
   4d768:	40 00 00 3a 	getlane s2, v0, 0
   4d76c:	21 f0 00 27 	mull_i v1, v1, 60
   4d770:	22 80 60 d0 	sub_i v1, v2, v1
   4d774:	62 00 00 14 	cmplt_i s3, s2, 0
   4d778:	43 00 00 f4 	bnz s3, 8 <main+0x780>
   4d77c:	03 00 00 f6 	b 12 <main+0x788>
   4d780:	42 00 0a 05 	add_i s2, s2, 640
   4d784:	00 04 f1 c8 	move_mask v0, s1, s2
   4d788:	41 00 00 3a 	getlane s2, v1, 0
   4d78c:	62 00 00 14 	cmplt_i s3, s2, 0
   4d790:	43 00 00 f4 	bnz s3, 8 <main+0x798>
   4d794:	03 00 00 f6 	b 12 <main+0x7a0>
   4d798:	42 f0 00 05 	add_i s2, s2, 60
   4d79c:	20 04 f1 c8 	move_mask v1, s1, s2
   4d7a0:	40 04 00 3a 	getlane s2, v0, 1
   4d7a4:	20 08 00 0f 	move s1, 2
   4d7a8:	62 00 00 14 	cmplt_i s3, s2, 0
   4d7ac:	43 00 00 f4 	bnz s3, 8 <main+0x7b4>
   4d7b0:	03 00 00 f6 	b 12 <main+0x7bc>
   4d7b4:	42 00 0a 05 	add_i s2, s2, 640
   4d7b8:	00 04 f1 c8 	move_mask v0, s1, s2
   4d7bc:	41 04 00 3a 	getlane s2, v1, 1
   4d7c0:	62 00 00 14 	cmplt_i s3, s2, 0
   4d7c4:	43 00 00 f4 	bnz s3, 8 <main+0x7cc>
   4d7c8:	03 00 00 f6 	b 12 <main+0x7d4>
   4d7cc:	42 f0 00 05 	add_i s2, s2, 60
   4d7d0:	20 04 f1 c8 	move_mask v1, s1, s2
   4d7d4:	40 08 00 3a 	getlane s2, v0, 2
   4d7d8:	20 10 00 0f 	move s1, 4
   4d7dc:	62 00 00 14 	cmplt_i s3, s2, 0
   4d7e0:	43 00 00 f4 	bnz s3, 8 <main+0x7e8>
   4d7e4:	03 00 00 f6 	b 12 <main+0x7f0>
   4d7e8:	42 00 0a 05 	add_i s2, s2, 640
   4d7ec:	00 04 f1 c8 	move_mask v0, s1, s2
   4d7f0:	41 08 00 3a 	getlane s2, v1, 2
   4d7f4:	62 00 00 14 	cmplt_i s3, s2, 0
   4d7f8:	43 00 00 f4 	bnz s3, 8 <main+0x800>
   4d7fc:	03 00 00 f6 	b 12 <main+0x808>
   4d800:	42 f0 00 05 	add_i s2, s2, 60
   4d804:	20 04 f1 c8 	move_mask v1, s1, s2
   4d808:	40 0c 00 3a 	getlane s2, v0, 3
   4d80c:	20 20 00 0f 	move s1, 8
   4d810:	62 00 00 14 	cmplt_i s3, s2, 0
   4d814:	43 00 00 f4 	bnz s3, 8 <main+0x81c>
   4d818:	03 00 00 f6 	b 12 <main+0x824>
   4d81c:	42 00 0a 05 	add_i s2, s2, 640
   4d820:	00 04 f1 c8 	move_mask v0, s1, s2
   4d824:	41 0c 00 3a 	getlane s2, v1, 3
   4d828:	62 00 00 14 	cmplt_i s3, s2, 0
   4d82c:	43 00 00 f4 	bnz s3, 8 <main+0x834>
   4d830:	03 00 00 f6 	b 12 <main+0x83c>
   4d834:	42 f0 00 05 	add_i s2, s2, 60
   4d838:	20 04 f1 c8 	move_mask v1, s1, s2
   4d83c:	40 10 00 3a 	getlane s2, v0, 4
   4d840:	20 40 00 0f 	move s1, 16
   4d844:	62 00 00 14 	cmplt_i s3, s2, 0
   4d848:	43 00 00 f4 	bnz s3, 8 <main+0x850>
   4d84c:	03 00 00 f6 	b 12 <main+0x858>
   4d850:	42 00 0a 05 	add_i s2, s2, 640
   4d854:	00 04 f1 c8 	move_mask v0, s1, s2
   4d858:	41 10 00 3a 	getlane s2, v1, 4
   4d85c:	62 00 00 14 	cmplt_i s3, s2, 0
   4d860:	43 00 00 f4 	bnz s3, 8 <main+0x868>
   4d864:	03 00 00 f6 	b 12 <main+0x870>
   4d868:	42 f0 00 05 	add_i s2, s2, 60
   4d86c:	20 04 f1 c8 	move_mask v1, s1, s2
   4d870:	40 14 00 3a 	getlane s2, v0, 5
   4d874:	20 80 00 0f 	move s1, 32
   4d878:	62 00 00 14 	cmplt_i s3, s2, 0
   4d87c:	43 00 00 f4 	bnz s3, 8 <main+0x884>
   4d880:	03 00 00 f6 	b 12 <main+0x88c>
   4d884:	42 00 0a 05 	add_i s2, s2, 640
   4d888:	00 04 f1 c8 	move_mask v0, s1, s2
   4d88c:	41 14 00 3a 	getlane s2, v1, 5
   4d890:	62 00 00 14 	cmplt_i s3, s2, 0
   4d894:	43 00 00 f4 	bnz s3, 8 <main+0x89c>
   4d898:	03 00 00 f6 	b 12 <main+0x8a4>
   4d89c:	42 f0 00 05 	add_i s2, s2, 60
   4d8a0:	20 04 f1 c8 	move_mask v1, s1, s2
   4d8a4:	40 18 00 3a 	getlane s2, v0, 6
   4d8a8:	20 00 01 0f 	move s1, 64
   4d8ac:	62 00 00 14 	cmplt_i s3, s2, 0
   4d8b0:	43 00 00 f4 	bnz s3, 8 <main+0x8b8>
   4d8b4:	03 00 00 f6 	b 12 <main+0x8c0>
   4d8b8:	42 00 0a 05 	add_i s2, s2, 640
   4d8bc:	00 04 f1 c8 	move_mask v0, s1, s2
   4d8c0:	41 18 00 3a 	getlane s2, v1, 6
   4d8c4:	62 00 00 14 	cmplt_i s3, s2, 0
   4d8c8:	43 00 00 f4 	bnz s3, 8 <main+0x8d0>
   4d8cc:	03 00 00 f6 	b 12 <main+0x8d8>
   4d8d0:	42 f0 00 05 	add_i s2, s2, 60
   4d8d4:	20 04 f1 c8 	move_mask v1, s1, s2
   4d8d8:	40 1c 00 3a 	getlane s2, v0, 7
   4d8dc:	20 00 02 0f 	move s1, 128
   4d8e0:	62 00 00 14 	cmplt_i s3, s2, 0
   4d8e4:	43 00 00 f4 	bnz s3, 8 <main+0x8ec>
   4d8e8:	03 00 00 f6 	b 12 <main+0x8f4>
   4d8ec:	42 00 0a 05 	add_i s2, s2, 640
   4d8f0:	00 04 f1 c8 	move_mask v0, s1, s2
   4d8f4:	41 1c 00 3a 	getlane s2, v1, 7
   4d8f8:	62 00 00 14 	cmplt_i s3, s2, 0
   4d8fc:	43 00 00 f4 	bnz s3, 8 <main+0x904>
   4d900:	03 00 00 f6 	b 12 <main+0x90c>
   4d904:	42 f0 00 05 	add_i s2, s2, 60
   4d908:	20 04 f1 c8 	move_mask v1, s1, s2
   4d90c:	40 20 00 3a 	getlane s2, v0, 8
   4d910:	20 00 04 0f 	move s1, 256
   4d914:	62 00 00 14 	cmplt_i s3, s2, 0
   4d918:	43 00 00 f4 	bnz s3, 8 <main+0x920>
   4d91c:	03 00 00 f6 	b 12 <main+0x928>
   4d920:	42 00 0a 05 	add_i s2, s2, 640
   4d924:	00 04 f1 c8 	move_mask v0, s1, s2
   4d928:	41 20 00 3a 	getlane s2, v1, 8
   4d92c:	62 00 00 14 	cmplt_i s3, s2, 0
   4d930:	43 00 00 f4 	bnz s3, 8 <main+0x938>
   4d934:	03 00 00 f6 	b 12 <main+0x940>
   4d938:	42 f0 00 05 	add_i s2, s2, 60
   4d93c:	20 04 f1 c8 	move_mask v1, s1, s2
   4d940:	40 24 00 3a 	getlane s2, v0, 9
   4d944:	20 00 08 0f 	move s1, 512
   4d948:	62 00 00 14 	cmplt_i s3, s2, 0
   4d94c:	43 00 00 f4 	bnz s3, 8 <main+0x954>
   4d950:	03 00 00 f6 	b 12 <main+0x95c>
   4d954:	42 00 0a 05 	add_i s2, s2, 640
   4d958:	00 04 f1 c8 	move_mask v0, s1, s2
   4d95c:	41 24 00 3a 	getlane s2, v1, 9
   4d960:	62 00 00 14 	cmplt_i s3, s2, 0
   4d964:	43 00 00 f4 	bnz s3, 8 <main+0x96c>
   4d968:	03 00 00 f6 	b 12 <main+0x974>
   4d96c:	42 f0 00 05 	add_i s2, s2, 60
   4d970:	20 04 f1 c8 	move_mask v1, s1, s2
   4d974:	40 28 00 3a 	getlane s2, v0, 10
   4d978:	20 00 10 0f 	move s1, 1024
   4d97c:	62 00 00 14 	cmplt_i s3, s2, 0
   4d980:	43 00 00 f4 	bnz s3, 8 <main+0x988>
   4d984:	03 00 00 f6 	b 12 <main+0x990>
   4d988:	42 00 0a 05 	add_i s2, s2, 640
   4d98c:	00 04 f1 c8 	move_mask v0, s1, s2
   4d990:	41 28 00 3a 	getlane s2, v1, 10
   4d994:	62 00 00 14 	cmplt_i s3, s2, 0
   4d998:	43 00 00 f4 	bnz s3, 8 <main+0x9a0>
   4d99c:	03 00 00 f6 	b 12 <main+0x9a8>
   4d9a0:	42 f0 00 05 	add_i s2, s2, 60
   4d9a4:	20 04 f1 c8 	move_mask v1, s1, s2
   4d9a8:	40 2c 00 3a 	getlane s2, v0, 11
   4d9ac:	20 00 20 0f 	move s1, 2048
   4d9b0:	62 00 00 14 	cmplt_i s3, s2, 0
   4d9b4:	43 00 00 f4 	bnz s3, 8 <main+0x9bc>
   4d9b8:	03 00 00 f6 	b 12 <main+0x9c4>
   4d9bc:	42 00 0a 05 	add_i s2, s2, 640
   4d9c0:	00 04 f1 c8 	move_mask v0, s1, s2
   4d9c4:	41 2c 00 3a 	getlane s2, v1, 11
   4d9c8:	62 00 00 14 	cmplt_i s3, s2, 0
   4d9cc:	43 00 00 f4 	bnz s3, 8 <main+0x9d4>
   4d9d0:	03 00 00 f6 	b 12 <main+0x9dc>
   4d9d4:	42 f0 00 05 	add_i s2, s2, 60
   4d9d8:	20 04 f1 c8 	move_mask v1, s1, s2
   4d9dc:	40 30 00 3a 	getlane s2, v0, 12
   4d9e0:	20 00 40 0f 	move s1, 4096
   4d9e4:	62 00 00 14 	cmplt_i s3, s2, 0
   4d9e8:	43 00 00 f4 	bnz s3, 8 <main+0x9f0>
   4d9ec:	03 00 00 f6 	b 12 <main+0x9f8>
   4d9f0:	42 00 0a 05 	add_i s2, s2, 640
   4d9f4:	00 04 f1 c8 	move_mask v0, s1, s2
   4d9f8:	41 30 00 3a 	getlane s2, v1, 12
   4d9fc:	62 00 00 14 	cmplt_i s3, s2, 0
   4da00:	43 00 00 f4 	bnz s3, 8 <main+0xa08>
   4da04:	03 00 00 f6 	b 12 <main+0xa10>
   4da08:	42 f0 00 05 	add_i s2, s2, 60
   4da0c:	20 04 f1 c8 	move_mask v1, s1, s2
   4da10:	40 34 00 3a 	getlane s2, v0, 13
   4da14:	21 00 00 4f 	movehi s1, 1
   4da18:	62 00 00 14 	cmplt_i s3, s2, 0
   4da1c:	43 00 00 f4 	bnz s3, 8 <main+0xa24>
   4da20:	03 00 00 f6 	b 12 <main+0xa2c>
   4da24:	42 00 0a 05 	add_i s2, s2, 640
   4da28:	00 04 f1 c8 	move_mask v0, s1, s2
   4da2c:	41 34 00 3a 	getlane s2, v1, 13
   4da30:	62 00 00 14 	cmplt_i s3, s2, 0
   4da34:	43 00 00 f4 	bnz s3, 8 <main+0xa3c>
   4da38:	03 00 00 f6 	b 12 <main+0xa44>
   4da3c:	42 f0 00 05 	add_i s2, s2, 60
   4da40:	20 04 f1 c8 	move_mask v1, s1, s2
   4da44:	40 38 00 3a 	getlane s2, v0, 14
   4da48:	22 00 00 4f 	movehi s1, 2
   4da4c:	62 00 00 14 	cmplt_i s3, s2, 0
   4da50:	43 00 00 f4 	bnz s3, 8 <main+0xa58>
   4da54:	03 00 00 f6 	b 12 <main+0xa60>
   4da58:	42 00 0a 05 	add_i s2, s2, 640
   4da5c:	00 04 f1 c8 	move_mask v0, s1, s2
   4da60:	41 38 00 3a 	getlane s2, v1, 14
   4da64:	62 00 00 14 	cmplt_i s3, s2, 0
   4da68:	43 00 00 f4 	bnz s3, 8 <main+0xa70>
   4da6c:	03 00 00 f6 	b 12 <main+0xa78>
   4da70:	42 f0 00 05 	add_i s2, s2, 60
   4da74:	20 04 f1 c8 	move_mask v1, s1, s2
   4da78:	40 3c 00 3a 	getlane s2, v0, 15
   4da7c:	24 00 00 4f 	movehi s1, 4
   4da80:	62 00 00 14 	cmplt_i s3, s2, 0
   4da84:	43 00 00 f4 	bnz s3, 8 <main+0xa8c>
   4da88:	03 00 00 f6 	b 12 <main+0xa94>
   4da8c:	42 00 0a 05 	add_i s2, s2, 640
   4da90:	00 04 f1 c8 	move_mask v0, s1, s2
   4da94:	41 3c 00 3a 	getlane s2, v1, 15
   4da98:	62 00 00 14 	cmplt_i s3, s2, 0
   4da9c:	43 00 00 f4 	bnz s3, 8 <main+0xaa4>
   4daa0:	03 00 00 f6 	b 12 <main+0xaac>
   4daa4:	42 f0 00 05 	add_i s2, s2, 60
   4daa8:	20 04 f1 c8 	move_mask v1, s1, s2
   4daac:	00 08 00 2b 	shl v0, v0, 2
   4dab0:	21 00 28 27 	mull_i v1, v1, 2560
   4dab4:	00 00 01 05 	add_i s0, s0, 64
   4dab8:	00 00 5d d0 	add_i v0, v0, v26
   4dabc:	20 00 0a 14 	cmplt_i s1, s0, 640
   4dac0:	00 80 50 d0 	add_i v0, v0, v1
   4dac4:	00 00 00 ba 	load_gath v0, (v0)
   4dac8:	18 00 00 8e 	store_v v0, (s24)
   4dacc:	18 00 00 e4 	dflush s24
   4dad0:	18 03 04 05 	add_i s24, s24, 256
   4dad4:	41 e0 ff f5 	bnz s1, -1016 <main+0x6dc>
   4dad8:	7b 07 00 05 	add_i s27, s27, 1
   4dadc:	1b 80 07 18 	cmplt_u s0, s27, 480
   4dae0:	00 b6 ff f5 	bnz s0, -2368 <main+0x1a0>
   4dae4:	5e a3 01 a8 	load_32 s26, 104(sp)
   4dae8:	9a 00 00 f2 	bz s26, 16 <main+0xaf8>
   4daec:	7e d3 01 a8 	load_32 s27, 116(sp)
   4daf0:	1e c3 01 a8 	load_32 s24, 112(sp)
   4daf4:	48 00 00 f6 	b 288 <main+0xc14>
   4daf8:	00 00 00 4f 	movehi s0, 0
   4dafc:	39 00 00 a8 	load_32 s1, (s25)
   4db00:	59 10 00 a8 	load_32 s2, 4(s25)
   4db04:	00 00 05 00 	or s0, s0, 320
   4db08:	00 00 00 a8 	load_32 s0, (s0)
   4db0c:	79 20 00 a8 	load_32 s3, 8(s25)
   4db10:	d9 30 00 a8 	load_32 s6, 12(s25)
   4db14:	81 00 20 c2 	mul_f s4, s1, s0
   4db18:	a3 00 20 c2 	mul_f s5, s3, s0
   4db1c:	e2 00 20 c2 	mul_f s7, s2, s0
   4db20:	06 00 20 c2 	mul_f s0, s6, s0
   4db24:	21 80 03 c2 	add_f s1, s1, s7
   4db28:	03 00 00 c2 	add_f s0, s3, s0
   4db2c:	44 00 01 c2 	add_f s2, s4, s2
   4db30:	65 00 03 c2 	add_f s3, s5, s6
   4db34:	39 00 00 88 	store_32 s1, (s25)
   4db38:	59 10 00 88 	store_32 s2, 4(s25)
   4db3c:	19 20 00 88 	store_32 s0, 8(s25)
   4db40:	79 30 00 88 	store_32 s3, 12(s25)
   4db44:	3e c0 01 a8 	load_32 s1, 112(sp)
   4db48:	01 7c 00 01 	and s0, s1, 31
   4db4c:	01 07 00 05 	add_i s24, s1, 1
   4db50:	40 00 00 f4 	bnz s0, 8 <main+0xb58>
   4db54:	03 00 00 f6 	b 12 <main+0xb60>
   4db58:	7e d3 01 a8 	load_32 s27, 116(sp)
   4db5c:	2e 00 00 f6 	b 184 <main+0xc14>
   4db60:	55 00 00 f8 	call 340 <clock>
   4db64:	60 03 f0 c0 	move s27, s0
   4db68:	1e d0 01 a8 	load_32 s0, 116(sp)
   4db6c:	40 05 00 f2 	bz s0, 168 <main+0xc14>
   4db70:	1b 00 60 c0 	sub_i s0, s27, s0
   4db74:	3e b0 02 a8 	load_32 s1, 172(sp)
   4db78:	40 00 00 14 	cmplt_i s2, s0, 0
   4db7c:	00 00 a0 c2 	itof s0, s0
   4db80:	42 00 00 f4 	bnz s2, 8 <main+0xb88>
   4db84:	20 00 00 0f 	move s1, 0
   4db88:	45 04 00 4f 	movehi s2, 37
   4db8c:	60 00 00 4f 	movehi s3, 0
   4db90:	42 20 48 00 	or s2, s2, 4616
   4db94:	22 80 50 c0 	add_i s1, s2, s1
   4db98:	43 60 05 00 	or s2, s3, 344
   4db9c:	60 00 00 4f 	movehi s3, 0
   4dba0:	21 00 00 a8 	load_32 s1, (s1)
   4dba4:	42 00 00 a8 	load_32 s2, (s2)
   4dba8:	63 30 05 00 	or s3, s3, 332
   4dbac:	00 80 00 c2 	add_f s0, s0, s1
   4dbb0:	80 00 c1 c1 	reciprocal s4, s2
   4dbb4:	63 00 00 a8 	load_32 s3, (s3)
   4dbb8:	a4 00 21 c2 	mul_f s5, s4, s2
   4dbbc:	a3 80 12 c2 	sub_f s5, s3, s5
   4dbc0:	84 80 22 c2 	mul_f s4, s4, s5
   4dbc4:	24 00 21 c2 	mul_f s1, s4, s2
   4dbc8:	23 80 10 c2 	sub_f s1, s3, s1
   4dbcc:	24 80 20 c2 	mul_f s1, s4, s1
   4dbd0:	00 80 20 c2 	mul_f s0, s0, s1
   4dbd4:	20 00 c0 c1 	reciprocal s1, s0
   4dbd8:	41 00 20 c2 	mul_f s2, s1, s0
   4dbdc:	43 00 11 c2 	sub_f s2, s3, s2
   4dbe0:	21 00 21 c2 	mul_f s1, s1, s2
   4dbe4:	40 00 00 4f 	movehi s2, 0
   4dbe8:	01 00 20 c2 	mul_f s0, s1, s0
   4dbec:	03 00 10 c2 	sub_f s0, s3, s0
   4dbf0:	01 00 20 c2 	mul_f s0, s1, s0
   4dbf4:	22 10 05 00 	or s1, s2, 324
   4dbf8:	21 00 00 a8 	load_32 s1, (s1)
   4dbfc:	00 80 20 c2 	mul_f s0, s0, s1
   4dc00:	25 04 00 4f 	movehi s1, 37
   4dc04:	21 94 51 00 	or s1, s1, 5221
   4dc08:	3e 00 00 88 	store_32 s1, (sp)
   4dc0c:	1e 10 00 88 	store_32 s0, 4(sp)
   4dc10:	33 00 00 f8 	call 204 <printf>
   4dc14:	0c 04 00 4f 	movehi s0, 44
   4dc18:	00 80 04 00 	or s0, s0, 288
   4dc1c:	20 00 00 aa 	load_sync s1, (s0)
   4dc20:	41 04 00 05 	add_i s2, s1, 1
   4dc24:	20 80 f0 c0 	move s1, s1
   4dc28:	40 00 00 8a 	store_sync s2, (s0)  
   4dc2c:	82 ff ff f3 	bz s2, -16 <main+0xc1c>
   4dc30:	21 0c 00 10 	cmpeq_i s1, s1, 3
   4dc34:	41 00 00 f4 	bnz s1, 8 <main+0xc3c>
   4dc38:	06 00 00 f6 	b 24 <main+0xc50>
   4dc3c:	20 00 00 0f 	move s1, 0
   4dc40:	20 00 00 88 	store_32 s1, (s0)
   4dc44:	5e e0 01 a8 	load_32 s2, 120(sp)
   4dc48:	62 a8 ff f5 	bnz s2, -2804 <main+0x154>
   4dc4c:	05 00 00 f6 	b 20 <main+0xc60>
   4dc50:	20 00 00 a8 	load_32 s1, (s0)
   4dc54:	e1 ff ff f5 	bnz s1, -4 <main+0xc50>
   4dc58:	5e e0 01 a8 	load_32 s2, 120(sp)
   4dc5c:	c2 a7 ff f5 	bnz s2, -2824 <main+0x154>
   4dc60:	1e b0 01 a8 	load_32 s0, 108(sp)
   4dc64:	00 04 00 05 	add_i s0, s0, 1
   4dc68:	20 7c 00 09 	ashr s1, s0, 31
   4dc6c:	21 78 00 0a 	shr s1, s1, 30
   4dc70:	20 80 50 c0 	add_i s1, s0, s1
   4dc74:	21 f0 ff 01 	and s1, s1, -4
   4dc78:	00 80 60 c0 	sub_i s0, s0, s1
   4dc7c:	1e b0 01 88 	store_32 s0, 108(sp)
   4dc80:	35 fd ff f7 	b -2860 <main+0x154>

000000000004dc84 _GLOBAL__sub_I_main.cpp:
   4dc84:	0c 04 00 4f 	movehi s0, 44
   4dc88:	2c 04 00 4f 	movehi s1, 44
   4dc8c:	40 00 00 0f 	move s2, 0
   4dc90:	00 80 04 00 	or s0, s0, 288
   4dc94:	21 90 04 00 	or s1, s1, 292
   4dc98:	40 00 00 88 	store_32 s2, (s0)
   4dc9c:	00 80 3f 4f 	movehi s0, 130048
   4dca0:	01 00 00 88 	store_32 s0, (s1)
   4dca4:	41 10 00 88 	store_32 s2, 4(s1)
   4dca8:	41 20 00 88 	store_32 s2, 8(s1)
   4dcac:	01 30 00 88 	store_32 s0, 12(s1)
   4dcb0:	1f 00 00 f0 	ret

000000000004dcb4 clock:
   4dcb4:	de 03 ff 05 	add_i sp, sp, -64
   4dcb8:	fe f3 00 88 	store_32 ra, 60(sp)
   4dcbc:	fc 1a 00 f8 	call 27632 <get_cycle_count>
   4dcc0:	3c e8 51 4f 	movehi s1, 167772
   4dcc4:	fe f3 00 a8 	load_32 ra, 60(sp)
   4dcc8:	21 7c 14 00 	or s1, s1, 1311
   4dccc:	00 80 80 c0 	mulh_u s0, s0, s1
   4dcd0:	00 10 00 0a 	shr s0, s0, 4
   4dcd4:	de 03 01 05 	add_i sp, sp, 64
   4dcd8:	1f 00 00 f0 	ret

000000000004dcdc printf:
   4dcdc:	de 03 ff 05 	add_i sp, sp, -64
   4dce0:	fe f3 00 88 	store_32 ra, 60(sp)
   4dce4:	0c 04 00 4f 	movehi s0, 44
   4dce8:	3e 00 01 a8 	load_32 s1, 64(sp)
   4dcec:	5e 10 01 05 	add_i s2, sp, 68
   4dcf0:	5e e0 00 88 	store_32 s2, 56(sp)
   4dcf4:	00 30 00 00 	or s0, s0, 12
   4dcf8:	00 00 00 a8 	load_32 s0, (s0)
   4dcfc:	c9 14 00 f8 	call 21284 <vfprintf>
   4dd00:	00 00 00 0f 	move s0, 0
   4dd04:	fe f3 00 a8 	load_32 ra, 60(sp)
   4dd08:	de 03 01 05 	add_i sp, sp, 64
   4dd0c:	1f 00 00 f0 	ret

000000000004dd10 sprintf:
   4dd10:	de 03 ff 05 	add_i sp, sp, -64
   4dd14:	1e f3 00 88 	store_32 s24, 60(sp)
   4dd18:	3e e3 00 88 	store_32 s25, 56(sp)
   4dd1c:	5e d3 00 88 	store_32 s26, 52(sp)
   4dd20:	fe c3 00 88 	store_32 ra, 48(sp)
   4dd24:	1e 43 00 05 	add_i s24, sp, 16
   4dd28:	3e 10 01 a8 	load_32 s1, 68(sp)
   4dd2c:	1e 00 01 a8 	load_32 s0, 64(sp)
   4dd30:	40 03 00 0f 	move s26, 0
   4dd34:	1e 40 00 88 	store_32 s0, 16(sp)
   4dd38:	1f fc 7f 4f 	movehi s0, 262143
   4dd3c:	38 13 00 00 	or s25, s24, 4
   4dd40:	5e 20 01 05 	add_i s2, sp, 72
   4dd44:	00 fc 7f 00 	or s0, s0, 8191
   4dd48:	59 03 00 88 	store_32 s26, (s25)
   4dd4c:	1e 60 00 88 	store_32 s0, 24(sp)
   4dd50:	5e 73 00 88 	store_32 s26, 28(sp)
   4dd54:	5e 90 00 88 	store_32 s2, 36(sp)
   4dd58:	00 00 fc c0 	move s0, s24
   4dd5c:	b1 14 00 f8 	call 21188 <vfprintf>
   4dd60:	0c 04 00 4f 	movehi s0, 44
   4dd64:	5e b3 00 88 	store_32 s26, 44(sp)
   4dd68:	00 30 00 00 	or s0, s0, 12
   4dd6c:	00 00 00 a8 	load_32 s0, (s0)
   4dd70:	00 00 1c c1 	cmpne_i s0, s0, s24
   4dd74:	40 00 00 f4 	bnz s0, 8 <sprintf+0x6c>
   4dd78:	0c 00 00 f6 	b 48 <sprintf+0x98>
   4dd7c:	1e 40 00 a8 	load_32 s0, 16(sp)
   4dd80:	e0 01 00 f2 	bz s0, 60 <sprintf+0xac>
   4dd84:	39 00 00 a8 	load_32 s1, (s25)
   4dd88:	5e 60 00 a8 	load_32 s2, 24(sp)
   4dd8c:	41 00 31 c1 	cmpge_i s2, s1, s2
   4dd90:	e2 01 00 f4 	bnz s2, 60 <sprintf+0xbc>
   4dd94:	00 80 50 c0 	add_i s0, s0, s1
   4dd98:	21 04 00 05 	add_i s1, s1, 1
   4dd9c:	39 00 00 88 	store_32 s1, (s25)
   4dda0:	40 03 00 82 	store_8 s26, (s0)
   4dda4:	0a 00 00 f6 	b 40 <sprintf+0xbc>
   4dda8:	1e ac 00 05 	add_i s0, sp, 43
   4ddac:	5e af 00 82 	store_8 s26, 43(sp)
   4ddb0:	20 04 00 0f 	move s1, 1
   4ddb4:	18 18 00 f8 	call 24672 <write_console>
   4ddb8:	05 00 00 f6 	b 20 <sprintf+0xbc>
   4ddbc:	1e 70 00 a8 	load_32 s0, 28(sp)
   4ddc0:	3e b0 00 05 	add_i s1, sp, 44
   4ddc4:	40 04 00 0f 	move s2, 1
   4ddc8:	fb 19 00 f8 	call 26604 <write>
   4ddcc:	19 00 00 a8 	load_32 s0, (s25)
   4ddd0:	fe c3 00 a8 	load_32 ra, 48(sp)
   4ddd4:	5e d3 00 a8 	load_32 s26, 52(sp)
   4ddd8:	3e e3 00 a8 	load_32 s25, 56(sp)
   4dddc:	1e f3 00 a8 	load_32 s24, 60(sp)
   4dde0:	de 03 01 05 	add_i sp, sp, 64
   4dde4:	1f 00 00 f0 	ret

000000000004dde8 fputc:
   4dde8:	de 03 ff 05 	add_i sp, sp, -64
   4ddec:	fe f3 00 88 	store_32 ra, 60(sp)
   4ddf0:	4c 04 00 4f 	movehi s2, 44
   4ddf4:	1e e0 00 88 	store_32 s0, 56(sp)
   4ddf8:	42 30 00 00 	or s2, s2, 12
   4ddfc:	42 00 00 a8 	load_32 s2, (s2)
   4de00:	42 80 10 c1 	cmpne_i s2, s2, s1
   4de04:	42 00 00 f4 	bnz s2, 8 <fputc+0x24>
   4de08:	0f 00 00 f6 	b 60 <fputc+0x5c>
   4de0c:	41 00 00 a8 	load_32 s2, (s1)
   4de10:	a2 02 00 f2 	bz s2, 84 <fputc+0x7c>
   4de14:	61 10 00 a8 	load_32 s3, 4(s1)
   4de18:	81 20 00 a8 	load_32 s4, 8(s1)
   4de1c:	83 00 32 c1 	cmpge_i s4, s3, s4
   4de20:	a4 00 00 f4 	bnz s4, 20 <fputc+0x4c>
   4de24:	42 80 51 c0 	add_i s2, s2, s3
   4de28:	63 04 00 05 	add_i s3, s3, 1
   4de2c:	61 10 00 88 	store_32 s3, 4(s1)
   4de30:	02 00 00 82 	store_8 s0, (s2)
   4de34:	00 04 00 0f 	move s0, 1
   4de38:	fe f3 00 a8 	load_32 ra, 60(sp)
   4de3c:	de 03 01 05 	add_i sp, sp, 64
   4de40:	1f 00 00 f0 	ret
   4de44:	1e dc 00 82 	store_8 s0, 55(sp)
   4de48:	1e dc 00 05 	add_i s0, sp, 55
   4de4c:	20 04 00 0f 	move s1, 1
   4de50:	f1 17 00 f8 	call 24516 <write_console>
   4de54:	00 04 00 0f 	move s0, 1
   4de58:	fe f3 00 a8 	load_32 ra, 60(sp)
   4de5c:	de 03 01 05 	add_i sp, sp, 64
   4de60:	1f 00 00 f0 	ret
   4de64:	01 30 00 a8 	load_32 s0, 12(s1)
   4de68:	3e e0 00 05 	add_i s1, sp, 56
   4de6c:	40 04 00 0f 	move s2, 1
   4de70:	d1 19 00 f8 	call 26436 <write>
   4de74:	00 04 00 0f 	move s0, 1
   4de78:	fe f3 00 a8 	load_32 ra, 60(sp)
   4de7c:	de 03 01 05 	add_i sp, sp, 64
   4de80:	1f 00 00 f0 	ret

000000000004de84 snprintf:
   4de84:	de 03 ff 05 	add_i sp, sp, -64
   4de88:	1e f3 00 88 	store_32 s24, 60(sp)
   4de8c:	3e e3 00 88 	store_32 s25, 56(sp)
   4de90:	5e d3 00 88 	store_32 s26, 52(sp)
   4de94:	fe c3 00 88 	store_32 ra, 48(sp)
   4de98:	1e 43 00 05 	add_i s24, sp, 16
   4de9c:	3e 20 01 a8 	load_32 s1, 72(sp)
   4dea0:	1e 10 01 a8 	load_32 s0, 68(sp)
   4dea4:	40 03 00 0f 	move s26, 0
   4dea8:	5e 00 01 a8 	load_32 s2, 64(sp)
   4deac:	38 13 00 00 	or s25, s24, 4
   4deb0:	5e 40 00 88 	store_32 s2, 16(sp)
   4deb4:	5e 30 01 05 	add_i s2, sp, 76
   4deb8:	59 03 00 88 	store_32 s26, (s25)
   4debc:	1e 60 00 88 	store_32 s0, 24(sp)
   4dec0:	5e 73 00 88 	store_32 s26, 28(sp)
   4dec4:	5e 90 00 88 	store_32 s2, 36(sp)
   4dec8:	00 00 fc c0 	move s0, s24
   4decc:	55 14 00 f8 	call 20820 <vfprintf>
   4ded0:	0c 04 00 4f 	movehi s0, 44
   4ded4:	5e b3 00 88 	store_32 s26, 44(sp)
   4ded8:	00 30 00 00 	or s0, s0, 12
   4dedc:	00 00 00 a8 	load_32 s0, (s0)
   4dee0:	00 00 1c c1 	cmpne_i s0, s0, s24
   4dee4:	40 00 00 f4 	bnz s0, 8 <snprintf+0x68>
   4dee8:	0c 00 00 f6 	b 48 <snprintf+0x94>
   4deec:	1e 40 00 a8 	load_32 s0, 16(sp)
   4def0:	e0 01 00 f2 	bz s0, 60 <snprintf+0xa8>
   4def4:	39 00 00 a8 	load_32 s1, (s25)
   4def8:	5e 60 00 a8 	load_32 s2, 24(sp)
   4defc:	41 00 31 c1 	cmpge_i s2, s1, s2
   4df00:	e2 01 00 f4 	bnz s2, 60 <snprintf+0xb8>
   4df04:	00 80 50 c0 	add_i s0, s0, s1
   4df08:	21 04 00 05 	add_i s1, s1, 1
   4df0c:	39 00 00 88 	store_32 s1, (s25)
   4df10:	40 03 00 82 	store_8 s26, (s0)
   4df14:	0a 00 00 f6 	b 40 <snprintf+0xb8>
   4df18:	1e ac 00 05 	add_i s0, sp, 43
   4df1c:	5e af 00 82 	store_8 s26, 43(sp)
   4df20:	20 04 00 0f 	move s1, 1
   4df24:	bc 17 00 f8 	call 24304 <write_console>
   4df28:	05 00 00 f6 	b 20 <snprintf+0xb8>
   4df2c:	1e 70 00 a8 	load_32 s0, 28(sp)
   4df30:	3e b0 00 05 	add_i s1, sp, 44
   4df34:	40 04 00 0f 	move s2, 1
   4df38:	9f 19 00 f8 	call 26236 <write>
   4df3c:	19 00 00 a8 	load_32 s0, (s25)
   4df40:	fe c3 00 a8 	load_32 ra, 48(sp)
   4df44:	5e d3 00 a8 	load_32 s26, 52(sp)
   4df48:	3e e3 00 a8 	load_32 s25, 56(sp)
   4df4c:	1e f3 00 a8 	load_32 s24, 60(sp)
   4df50:	de 03 01 05 	add_i sp, sp, 64
   4df54:	1f 00 00 f0 	ret

000000000004df58 vsnprintf:
   4df58:	de 03 ff 05 	add_i sp, sp, -64
   4df5c:	1e f3 00 88 	store_32 s24, 60(sp)
   4df60:	3e e3 00 88 	store_32 s25, 56(sp)
   4df64:	5e d3 00 88 	store_32 s26, 52(sp)
   4df68:	fe c3 00 88 	store_32 ra, 48(sp)
   4df6c:	1e 63 00 05 	add_i s24, sp, 24
   4df70:	1e 60 00 88 	store_32 s0, 24(sp)
   4df74:	40 03 00 0f 	move s26, 0
   4df78:	38 13 00 00 	or s25, s24, 4
   4df7c:	59 03 00 88 	store_32 s26, (s25)
   4df80:	3e 80 00 88 	store_32 s1, 32(sp)
   4df84:	5e 93 00 88 	store_32 s26, 36(sp)
   4df88:	00 00 fc c0 	move s0, s24
   4df8c:	20 00 f1 c0 	move s1, s2
   4df90:	40 80 f1 c0 	move s2, s3
   4df94:	23 14 00 f8 	call 20620 <vfprintf>
   4df98:	0c 04 00 4f 	movehi s0, 44
   4df9c:	5e b3 00 88 	store_32 s26, 44(sp)
   4dfa0:	00 30 00 00 	or s0, s0, 12
   4dfa4:	00 00 00 a8 	load_32 s0, (s0)
   4dfa8:	00 00 1c c1 	cmpne_i s0, s0, s24
   4dfac:	40 00 00 f4 	bnz s0, 8 <vsnprintf+0x5c>
   4dfb0:	0c 00 00 f6 	b 48 <vsnprintf+0x88>
   4dfb4:	1e 60 00 a8 	load_32 s0, 24(sp)
   4dfb8:	e0 01 00 f2 	bz s0, 60 <vsnprintf+0x9c>
   4dfbc:	39 00 00 a8 	load_32 s1, (s25)
   4dfc0:	5e 80 00 a8 	load_32 s2, 32(sp)
   4dfc4:	41 00 31 c1 	cmpge_i s2, s1, s2
   4dfc8:	e2 01 00 f4 	bnz s2, 60 <vsnprintf+0xac>
   4dfcc:	00 80 50 c0 	add_i s0, s0, s1
   4dfd0:	21 04 00 05 	add_i s1, s1, 1
   4dfd4:	39 00 00 88 	store_32 s1, (s25)
   4dfd8:	40 03 00 82 	store_8 s26, (s0)
   4dfdc:	0a 00 00 f6 	b 40 <vsnprintf+0xac>
   4dfe0:	1e ac 00 05 	add_i s0, sp, 43
   4dfe4:	5e af 00 82 	store_8 s26, 43(sp)
   4dfe8:	20 04 00 0f 	move s1, 1
   4dfec:	8a 17 00 f8 	call 24104 <write_console>
   4dff0:	05 00 00 f6 	b 20 <vsnprintf+0xac>
   4dff4:	1e 90 00 a8 	load_32 s0, 36(sp)
   4dff8:	3e b0 00 05 	add_i s1, sp, 44
   4dffc:	40 04 00 0f 	move s2, 1
   4e000:	6d 19 00 f8 	call 26036 <write>
   4e004:	19 00 00 a8 	load_32 s0, (s25)
   4e008:	fe c3 00 a8 	load_32 ra, 48(sp)
   4e00c:	5e d3 00 a8 	load_32 s26, 52(sp)
   4e010:	3e e3 00 a8 	load_32 s25, 56(sp)
   4e014:	1e f3 00 a8 	load_32 s24, 60(sp)
   4e018:	de 03 01 05 	add_i sp, sp, 64
   4e01c:	1f 00 00 f0 	ret

000000000004e020 putchar:
   4e020:	de 03 ff 05 	add_i sp, sp, -64
   4e024:	1e f3 00 88 	store_32 s24, 60(sp)
   4e028:	fe e3 00 88 	store_32 ra, 56(sp)
   4e02c:	00 07 00 0f 	move s24, 1
   4e030:	1e dc 00 82 	store_8 s0, 55(sp)
   4e034:	1e dc 00 05 	add_i s0, sp, 55
   4e038:	20 00 fc c0 	move s1, s24
   4e03c:	76 17 00 f8 	call 24024 <write_console>
   4e040:	00 00 fc c0 	move s0, s24
   4e044:	fe e3 00 a8 	load_32 ra, 56(sp)
   4e048:	1e f3 00 a8 	load_32 s24, 60(sp)
   4e04c:	de 03 01 05 	add_i sp, sp, 64
   4e050:	1f 00 00 f0 	ret

000000000004e054 puts:
   4e054:	de 03 ff 05 	add_i sp, sp, -64
   4e058:	1e f3 00 88 	store_32 s24, 60(sp)
   4e05c:	3e e3 00 88 	store_32 s25, 56(sp)
   4e060:	5e d3 00 88 	store_32 s26, 52(sp)
   4e064:	7e c3 00 88 	store_32 s27, 48(sp)
   4e068:	fe b3 00 88 	store_32 ra, 44(sp)
   4e06c:	00 03 f0 c0 	move s24, s0
   4e070:	18 00 00 a0 	load_u8 s0, (s24)
   4e074:	1e 93 00 88 	store_32 s24, 36(sp)
   4e078:	80 01 00 f2 	bz s0, 48 <puts+0x54>
   4e07c:	7e 93 00 a8 	load_32 s27, 36(sp)
   4e080:	3e ab 00 05 	add_i s25, sp, 42
   4e084:	40 07 00 0f 	move s26, 1
   4e088:	1e a8 00 82 	store_8 s0, 42(sp)
   4e08c:	00 80 fc c0 	move s0, s25
   4e090:	20 00 fd c0 	move s1, s26
   4e094:	60 17 00 f8 	call 23936 <write_console>
   4e098:	1b 07 00 05 	add_i s24, s27, 1
   4e09c:	1b 04 00 a0 	load_u8 s0, 1(s27)
   4e0a0:	60 03 fc c0 	move s27, s24
   4e0a4:	20 ff ff f5 	bnz s0, -28 <puts+0x34>
   4e0a8:	20 07 00 0f 	move s25, 1
   4e0ac:	00 28 00 0f 	move s0, 10
   4e0b0:	1e ac 00 82 	store_8 s0, 43(sp)
   4e0b4:	1e ac 00 05 	add_i s0, sp, 43
   4e0b8:	20 80 fc c0 	move s1, s25
   4e0bc:	56 17 00 f8 	call 23896 <write_console>
   4e0c0:	1e 90 00 a8 	load_32 s0, 36(sp)
   4e0c4:	fe b3 00 a8 	load_32 ra, 44(sp)
   4e0c8:	7e c3 00 a8 	load_32 s27, 48(sp)
   4e0cc:	5e d3 00 a8 	load_32 s26, 52(sp)
   4e0d0:	19 00 60 c0 	sub_i s0, s25, s0
   4e0d4:	3e e3 00 a8 	load_32 s25, 56(sp)
   4e0d8:	00 00 5c c0 	add_i s0, s0, s24
   4e0dc:	1e f3 00 a8 	load_32 s24, 60(sp)
   4e0e0:	de 03 01 05 	add_i sp, sp, 64
   4e0e4:	1f 00 00 f0 	ret

000000000004e0e8 fputs:
   4e0e8:	de 03 ff 05 	add_i sp, sp, -64
   4e0ec:	1e f3 00 88 	store_32 s24, 60(sp)
   4e0f0:	3e e3 00 88 	store_32 s25, 56(sp)
   4e0f4:	5e d3 00 88 	store_32 s26, 52(sp)
   4e0f8:	7e c3 00 88 	store_32 s27, 48(sp)
   4e0fc:	fe b3 00 88 	store_32 ra, 44(sp)
   4e100:	80 00 00 a0 	load_u8 s4, (s0)
   4e104:	20 83 f0 c0 	move s25, s1
   4e108:	1e 60 00 88 	store_32 s0, 24(sp)
   4e10c:	20 00 f0 c0 	move s1, s0
   4e110:	e4 05 00 f2 	bz s4, 188 <fputs+0xe4>
   4e114:	2c 04 00 4f 	movehi s1, 44
   4e118:	1e 9c 00 05 	add_i s0, sp, 39
   4e11c:	1e 80 00 88 	store_32 s0, 32(sp)
   4e120:	1e a0 00 05 	add_i s0, sp, 40
   4e124:	1e 70 00 88 	store_32 s0, 28(sp)
   4e128:	5e 63 00 a8 	load_32 s26, 24(sp)
   4e12c:	01 33 00 00 	or s24, s1, 12
   4e130:	60 07 00 0f 	move s27, 1
   4e134:	20 00 d2 c1 	sext_8 s1, s4
   4e138:	3e a0 00 88 	store_32 s1, 40(sp)
   4e13c:	38 00 00 a8 	load_32 s1, (s24)
   4e140:	21 80 1c c1 	cmpne_i s1, s1, s25
   4e144:	41 00 00 f4 	bnz s1, 8 <fputs+0x64>
   4e148:	10 00 00 f6 	b 64 <fputs+0xa0>
   4e14c:	39 00 00 a8 	load_32 s1, (s25)
   4e150:	e1 02 00 f2 	bz s1, 92 <fputs+0xc4>
   4e154:	59 10 00 a8 	load_32 s2, 4(s25)
   4e158:	79 20 00 a8 	load_32 s3, 8(s25)
   4e15c:	62 80 31 c1 	cmpge_i s3, s2, s3
   4e160:	a3 00 00 f4 	bnz s3, 20 <fputs+0x8c>
   4e164:	21 00 51 c0 	add_i s1, s1, s2
   4e168:	42 04 00 05 	add_i s2, s2, 1
   4e16c:	59 10 00 88 	store_32 s2, 4(s25)
   4e170:	81 00 00 82 	store_8 s4, (s1)
   4e174:	3a 04 00 05 	add_i s1, s26, 1
   4e178:	9a 04 00 a0 	load_u8 s4, 1(s26)
   4e17c:	40 83 f0 c0 	move s26, s1
   4e180:	a4 fd ff f5 	bnz s4, -76 <fputs+0x4c>
   4e184:	12 00 00 f6 	b 72 <fputs+0xe4>
   4e188:	9e 9c 00 82 	store_8 s4, 39(sp)
   4e18c:	1e 80 00 a8 	load_32 s0, 32(sp)
   4e190:	20 80 fd c0 	move s1, s27
   4e194:	20 17 00 f8 	call 23680 <write_console>
   4e198:	3a 04 00 05 	add_i s1, s26, 1
   4e19c:	9a 04 00 a0 	load_u8 s4, 1(s26)
   4e1a0:	40 83 f0 c0 	move s26, s1
   4e1a4:	84 fc ff f5 	bnz s4, -112 <fputs+0x4c>
   4e1a8:	09 00 00 f6 	b 36 <fputs+0xe4>
   4e1ac:	19 30 00 a8 	load_32 s0, 12(s25)
   4e1b0:	3e 70 00 a8 	load_32 s1, 28(sp)
   4e1b4:	40 80 fd c0 	move s2, s27
   4e1b8:	ff 18 00 f8 	call 25596 <write>
   4e1bc:	3a 04 00 05 	add_i s1, s26, 1
   4e1c0:	9a 04 00 a0 	load_u8 s4, 1(s26)
   4e1c4:	40 83 f0 c0 	move s26, s1
   4e1c8:	64 fb ff f5 	bnz s4, -148 <fputs+0x4c>
   4e1cc:	1e 60 00 a8 	load_32 s0, 24(sp)
   4e1d0:	fe b3 00 a8 	load_32 ra, 44(sp)
   4e1d4:	7e c3 00 a8 	load_32 s27, 48(sp)
   4e1d8:	5e d3 00 a8 	load_32 s26, 52(sp)
   4e1dc:	3e e3 00 a8 	load_32 s25, 56(sp)
   4e1e0:	01 00 60 c0 	sub_i s0, s1, s0
   4e1e4:	1e f3 00 a8 	load_32 s24, 60(sp)
   4e1e8:	de 03 01 05 	add_i sp, sp, 64
   4e1ec:	1f 00 00 f0 	ret

000000000004e1f0 fgetc:
   4e1f0:	de 03 ff 05 	add_i sp, sp, -64
   4e1f4:	fe f3 00 88 	store_32 ra, 60(sp)
   4e1f8:	00 30 00 a8 	load_32 s0, 12(s0)
   4e1fc:	3e ec 00 05 	add_i s1, sp, 59
   4e200:	40 04 00 0f 	move s2, 1
   4e204:	6a 18 00 f8 	call 25000 <read>
   4e208:	20 00 00 14 	cmplt_i s1, s0, 0
   4e20c:	1e ec 00 a0 	load_u8 s0, 59(sp)
   4e210:	41 00 00 f4 	bnz s1, 8 <fgetc+0x28>
   4e214:	02 00 00 f6 	b 8 <fgetc+0x2c>
   4e218:	00 fc ff 0f 	move s0, -1
   4e21c:	fe f3 00 a8 	load_32 ra, 60(sp)
   4e220:	de 03 01 05 	add_i sp, sp, 64
   4e224:	1f 00 00 f0 	ret

000000000004e228 fopen:
   4e228:	de 03 ff 05 	add_i sp, sp, -64
   4e22c:	1e f3 00 88 	store_32 s24, 60(sp)
   4e230:	3e e3 00 88 	store_32 s25, 56(sp)
   4e234:	fe d3 00 88 	store_32 ra, 52(sp)
   4e238:	00 03 00 0f 	move s24, 0
   4e23c:	20 00 fc c0 	move s1, s24
   4e240:	1e 17 00 f8 	call 23672 <open>
   4e244:	20 03 f0 c0 	move s25, s0
   4e248:	19 00 00 14 	cmplt_i s0, s25, 0
   4e24c:	e0 00 00 f4 	bnz s0, 28 <fopen+0x40>
   4e250:	00 40 00 0f 	move s0, 16
   4e254:	98 00 00 f8 	call 608 <malloc>
   4e258:	00 03 f0 c0 	move s24, s0
   4e25c:	00 00 00 0f 	move s0, 0
   4e260:	18 00 00 88 	store_32 s0, (s24)
   4e264:	38 33 00 88 	store_32 s25, 12(s24)
   4e268:	00 00 fc c0 	move s0, s24
   4e26c:	fe d3 00 a8 	load_32 ra, 52(sp)
   4e270:	3e e3 00 a8 	load_32 s25, 56(sp)
   4e274:	1e f3 00 a8 	load_32 s24, 60(sp)
   4e278:	de 03 01 05 	add_i sp, sp, 64
   4e27c:	1f 00 00 f0 	ret

000000000004e280 fwrite:
   4e280:	de 03 ff 05 	add_i sp, sp, -64
   4e284:	1e f3 00 88 	store_32 s24, 60(sp)
   4e288:	3e e3 00 88 	store_32 s25, 56(sp)
   4e28c:	5e d3 00 88 	store_32 s26, 52(sp)
   4e290:	7e c3 00 88 	store_32 s27, 48(sp)
   4e294:	fe b3 00 88 	store_32 ra, 44(sp)
   4e298:	5e 50 00 88 	store_32 s2, 20(sp)
   4e29c:	20 83 f1 c0 	move s25, s3
   4e2a0:	62 83 70 c0 	mull_i s27, s2, s1
   4e2a4:	40 03 f0 c0 	move s26, s0
   4e2a8:	5b 05 00 f2 	bz s27, 168 <fwrite+0xd0>
   4e2ac:	0c 04 00 4f 	movehi s0, 44
   4e2b0:	00 33 00 00 	or s24, s0, 12
   4e2b4:	1e 9c 00 05 	add_i s0, sp, 39
   4e2b8:	1e 70 00 88 	store_32 s0, 28(sp)
   4e2bc:	00 04 00 0f 	move s0, 1
   4e2c0:	1e 80 00 88 	store_32 s0, 32(sp)
   4e2c4:	1e a0 00 05 	add_i s0, sp, 40
   4e2c8:	1e 60 00 88 	store_32 s0, 24(sp)
   4e2cc:	1a 00 00 a2 	load_s8 s0, (s26)
   4e2d0:	7b ff ff 05 	add_i s27, s27, -1
   4e2d4:	1e a0 00 88 	store_32 s0, 40(sp)
   4e2d8:	38 00 00 a8 	load_32 s1, (s24)
   4e2dc:	21 80 1c c1 	cmpne_i s1, s1, s25
   4e2e0:	41 00 00 f4 	bnz s1, 8 <fwrite+0x68>
   4e2e4:	0e 00 00 f6 	b 56 <fwrite+0x9c>
   4e2e8:	39 00 00 a8 	load_32 s1, (s25)
   4e2ec:	61 02 00 f2 	bz s1, 76 <fwrite+0xb8>
   4e2f0:	59 10 00 a8 	load_32 s2, 4(s25)
   4e2f4:	79 20 00 a8 	load_32 s3, 8(s25)
   4e2f8:	62 80 31 c1 	cmpge_i s3, s2, s3
   4e2fc:	a3 00 00 f4 	bnz s3, 20 <fwrite+0x90>
   4e300:	21 00 51 c0 	add_i s1, s1, s2
   4e304:	42 04 00 05 	add_i s2, s2, 1
   4e308:	59 10 00 88 	store_32 s2, 4(s25)
   4e30c:	01 00 00 82 	store_8 s0, (s1)
   4e310:	5a 07 00 05 	add_i s26, s26, 1
   4e314:	db fd ff f5 	bnz s27, -72 <fwrite+0x4c>
   4e318:	0e 00 00 f6 	b 56 <fwrite+0xd0>
   4e31c:	1e 9c 00 82 	store_8 s0, 39(sp)
   4e320:	1e 70 00 a8 	load_32 s0, 28(sp)
   4e324:	3e 80 00 a8 	load_32 s1, 32(sp)
   4e328:	bb 16 00 f8 	call 23276 <write_console>
   4e32c:	5a 07 00 05 	add_i s26, s26, 1
   4e330:	fb fc ff f5 	bnz s27, -100 <fwrite+0x4c>
   4e334:	07 00 00 f6 	b 28 <fwrite+0xd0>
   4e338:	19 30 00 a8 	load_32 s0, 12(s25)
   4e33c:	3e 60 00 a8 	load_32 s1, 24(sp)
   4e340:	5e 80 00 a8 	load_32 s2, 32(sp)
   4e344:	9c 18 00 f8 	call 25200 <write>
   4e348:	5a 07 00 05 	add_i s26, s26, 1
   4e34c:	1b fc ff f5 	bnz s27, -128 <fwrite+0x4c>
   4e350:	1e 50 00 a8 	load_32 s0, 20(sp)
   4e354:	fe b3 00 a8 	load_32 ra, 44(sp)
   4e358:	7e c3 00 a8 	load_32 s27, 48(sp)
   4e35c:	5e d3 00 a8 	load_32 s26, 52(sp)
   4e360:	3e e3 00 a8 	load_32 s25, 56(sp)
   4e364:	1e f3 00 a8 	load_32 s24, 60(sp)
   4e368:	de 03 01 05 	add_i sp, sp, 64
   4e36c:	1f 00 00 f0 	ret

000000000004e370 fread:
   4e370:	de 03 ff 05 	add_i sp, sp, -64
   4e374:	1e f3 00 88 	store_32 s24, 60(sp)
   4e378:	fe e3 00 88 	store_32 ra, 56(sp)
   4e37c:	00 83 f0 c0 	move s24, s1
   4e380:	20 00 f0 c0 	move s1, s0
   4e384:	03 30 00 a8 	load_32 s0, 12(s3)
   4e388:	42 00 7c c0 	mull_i s2, s2, s24
   4e38c:	08 18 00 f8 	call 24608 <read>
   4e390:	20 00 00 14 	cmplt_i s1, s0, 0
   4e394:	e1 00 00 f4 	bnz s1, 28 <fread+0x40>
   4e398:	20 00 fc c0 	move s1, s24
   4e39c:	48 1f 00 f8 	call 32032 <__udivsi3>
   4e3a0:	fe e3 00 a8 	load_32 ra, 56(sp)
   4e3a4:	1e f3 00 a8 	load_32 s24, 60(sp)
   4e3a8:	de 03 01 05 	add_i sp, sp, 64
   4e3ac:	1f 00 00 f0 	ret
   4e3b0:	00 00 00 0f 	move s0, 0
   4e3b4:	fe e3 00 a8 	load_32 ra, 56(sp)
   4e3b8:	1e f3 00 a8 	load_32 s24, 60(sp)
   4e3bc:	de 03 01 05 	add_i sp, sp, 64
   4e3c0:	1f 00 00 f0 	ret

000000000004e3c4 fclose:
   4e3c4:	de 03 ff 05 	add_i sp, sp, -64
   4e3c8:	1e f3 00 88 	store_32 s24, 60(sp)
   4e3cc:	3e e3 00 88 	store_32 s25, 56(sp)
   4e3d0:	fe d3 00 88 	store_32 ra, 52(sp)
   4e3d4:	00 03 f0 c0 	move s24, s0
   4e3d8:	18 30 00 a8 	load_32 s0, 12(s24)
   4e3dc:	e0 17 00 f8 	call 24448 <close>
   4e3e0:	20 03 f0 c0 	move s25, s0
   4e3e4:	00 00 fc c0 	move s0, s24
   4e3e8:	bd 07 00 f8 	call 7924 <free>
   4e3ec:	00 80 fc c0 	move s0, s25
   4e3f0:	fe d3 00 a8 	load_32 ra, 52(sp)
   4e3f4:	3e e3 00 a8 	load_32 s25, 56(sp)
   4e3f8:	1e f3 00 a8 	load_32 s24, 60(sp)
   4e3fc:	de 03 01 05 	add_i sp, sp, 64
   4e400:	1f 00 00 f0 	ret

000000000004e404 fseek:
   4e404:	de 03 ff 05 	add_i sp, sp, -64
   4e408:	fe f3 00 88 	store_32 ra, 60(sp)
   4e40c:	00 30 00 a8 	load_32 s0, 12(s0)
   4e410:	73 18 00 f8 	call 25036 <lseek>
   4e414:	fe f3 00 a8 	load_32 ra, 60(sp)
   4e418:	de 03 01 05 	add_i sp, sp, 64
   4e41c:	1f 00 00 f0 	ret

000000000004e420 ftell:
   4e420:	de 03 ff 05 	add_i sp, sp, -64
   4e424:	fe f3 00 88 	store_32 ra, 60(sp)
   4e428:	00 30 00 a8 	load_32 s0, 12(s0)
   4e42c:	20 00 00 0f 	move s1, 0
   4e430:	40 04 00 0f 	move s2, 1
   4e434:	6a 18 00 f8 	call 25000 <lseek>
   4e438:	fe f3 00 a8 	load_32 ra, 60(sp)
   4e43c:	de 03 01 05 	add_i sp, sp, 64
   4e440:	1f 00 00 f0 	ret

000000000004e444 fprintf:
   4e444:	de 03 ff 05 	add_i sp, sp, -64
   4e448:	fe f3 00 88 	store_32 ra, 60(sp)
   4e44c:	1e 00 01 a8 	load_32 s0, 64(sp)
   4e450:	5e 20 01 05 	add_i s2, sp, 72
   4e454:	3e 10 01 a8 	load_32 s1, 68(sp)
   4e458:	5e e0 00 88 	store_32 s2, 56(sp)
   4e45c:	f1 12 00 f8 	call 19396 <vfprintf>
   4e460:	00 00 00 0f 	move s0, 0
   4e464:	fe f3 00 a8 	load_32 ra, 60(sp)
   4e468:	de 03 01 05 	add_i sp, sp, 64
   4e46c:	1f 00 00 f0 	ret

000000000004e470 fflush:
   4e470:	00 00 00 0f 	move s0, 0
   4e474:	1f 00 00 f0 	ret

000000000004e478 ferror:
   4e478:	00 00 00 0f 	move s0, 0
   4e47c:	1f 00 00 f0 	ret

000000000004e480 ungetc:
   4e480:	de 03 ff 05 	add_i sp, sp, -64
   4e484:	1e f3 00 88 	store_32 s24, 60(sp)
   4e488:	fe e3 00 88 	store_32 ra, 56(sp)
   4e48c:	00 03 f0 c0 	move s24, s0
   4e490:	01 30 00 a8 	load_32 s0, 12(s1)
   4e494:	20 fc ff 0f 	move s1, -1
   4e498:	40 04 00 0f 	move s2, 1
   4e49c:	50 18 00 f8 	call 24896 <lseek>
   4e4a0:	00 00 fc c0 	move s0, s24
   4e4a4:	fe e3 00 a8 	load_32 ra, 56(sp)
   4e4a8:	1e f3 00 a8 	load_32 s24, 60(sp)
   4e4ac:	de 03 01 05 	add_i sp, sp, 64
   4e4b0:	1f 00 00 f0 	ret

000000000004e4b4 malloc:
   4e4b4:	de 03 ff 05 	add_i sp, sp, -64
   4e4b8:	1e f3 00 88 	store_32 s24, 60(sp)
   4e4bc:	3e e3 00 88 	store_32 s25, 56(sp)
   4e4c0:	5e d3 00 88 	store_32 s26, 52(sp)
   4e4c4:	7e c3 00 88 	store_32 s27, 48(sp)
   4e4c8:	fe b3 00 88 	store_32 ra, 44(sp)
   4e4cc:	2c 04 00 4f 	movehi s1, 44
   4e4d0:	21 53 05 00 	or s25, s1, 340
   4e4d4:	39 00 00 a8 	load_32 s1, (s25)
   4e4d8:	61 05 00 f4 	bnz s1, 172 <malloc+0xd0>
   4e4dc:	2c 04 00 4f 	movehi s1, 44
   4e4e0:	40 04 00 0f 	move s2, 1
   4e4e4:	21 20 0d 00 	or s1, s1, 840
   4e4e8:	61 00 00 aa 	load_sync s3, (s1)
   4e4ec:	80 00 f1 c0 	move s4, s2
   4e4f0:	81 00 00 8a 	store_sync s4, (s1)  
   4e4f4:	a4 ff ff f3 	bz s4, -12 <malloc+0x34>
   4e4f8:	03 01 00 f2 	bz s3, 32 <malloc+0x64>
   4e4fc:	61 00 00 a8 	load_32 s3, (s1)
   4e500:	e3 ff ff f5 	bnz s3, -4 <malloc+0x48>
   4e504:	61 00 00 aa 	load_sync s3, (s1)
   4e508:	80 00 f1 c0 	move s4, s2
   4e50c:	81 00 00 8a 	store_sync s4, (s1)  
   4e510:	a4 ff ff f3 	bz s4, -12 <malloc+0x50>
   4e514:	43 ff ff f5 	bnz s3, -24 <malloc+0x48>
   4e518:	59 00 00 a8 	load_32 s2, (s25)
   4e51c:	a2 02 00 f4 	bnz s2, 84 <malloc+0xbc>
   4e520:	40 00 40 0f 	move s2, 4096
   4e524:	59 20 00 88 	store_32 s2, 8(s25)
   4e528:	59 10 00 88 	store_32 s2, 4(s25)
   4e52c:	40 fc ff 0f 	move s2, -1
   4e530:	59 30 00 88 	store_32 s2, 12(s25)
   4e534:	4c 04 00 4f 	movehi s2, 44
   4e538:	60 20 00 4f 	movehi s3, 256
   4e53c:	79 40 00 88 	store_32 s3, 16(s25)
   4e540:	60 08 00 0f 	move s3, 2
   4e544:	79 50 00 88 	store_32 s3, 20(s25)
   4e548:	42 b0 05 00 	or s2, s2, 364
   4e54c:	aa 54 55 4f 	movehi s5, 174762
   4e550:	80 00 00 0f 	move s4, 0
   4e554:	62 f0 06 88 	store_32 s3, 444(s2)
   4e558:	7e 90 00 05 	add_i s3, sp, 36
   4e55c:	82 00 07 88 	store_32 s4, 448(s2)
   4e560:	45 60 55 00 	or s2, s5, 5464
   4e564:	63 c0 ff 01 	and s3, s3, -16
   4e568:	43 00 31 c0 	xor s2, s3, s2
   4e56c:	59 00 00 88 	store_32 s2, (s25)
   4e570:	40 00 00 0f 	move s2, 0
   4e574:	61 00 00 aa 	load_sync s3, (s1)
   4e578:	60 00 f1 c0 	move s3, s2
   4e57c:	61 00 00 8a 	store_sync s3, (s1)  
   4e580:	a3 ff ff f3 	bz s3, -12 <malloc+0xc0>
   4e584:	2c 04 00 4f 	movehi s1, 44
   4e588:	01 b3 05 00 	or s24, s1, 364
   4e58c:	38 f0 06 a0 	load_u8 s1, 444(s24)
   4e590:	21 08 00 01 	and s1, s1, 2
   4e594:	e1 01 00 f2 	bz s1, 60 <malloc+0x11c>
   4e598:	38 00 07 05 	add_i s1, s24, 448
   4e59c:	40 04 00 0f 	move s2, 1
   4e5a0:	61 00 00 aa 	load_sync s3, (s1)
   4e5a4:	80 00 f1 c0 	move s4, s2
   4e5a8:	81 00 00 8a 	store_sync s4, (s1)  
   4e5ac:	a4 ff ff f3 	bz s4, -12 <malloc+0xec>
   4e5b0:	03 01 00 f2 	bz s3, 32 <malloc+0x11c>
   4e5b4:	78 00 07 a8 	load_32 s3, 448(s24)
   4e5b8:	e3 ff ff f5 	bnz s3, -4 <malloc+0x100>
   4e5bc:	61 00 00 aa 	load_sync s3, (s1)
   4e5c0:	80 00 f1 c0 	move s4, s2
   4e5c4:	81 00 00 8a 	store_sync s4, (s1)  
   4e5c8:	a4 ff ff f3 	bz s4, -12 <malloc+0x108>
   4e5cc:	43 ff ff f5 	bnz s3, -24 <malloc+0x100>
   4e5d0:	20 d0 03 16 	cmpgt_u s1, s0, 244
   4e5d4:	c1 00 00 f4 	bnz s1, 24 <malloc+0x138>
   4e5d8:	20 2c 00 18 	cmplt_u s1, s0, 11
   4e5dc:	21 01 00 f4 	bnz s1, 36 <malloc+0x14c>
   4e5e0:	00 2c 00 05 	add_i s0, s0, 11
   4e5e4:	40 e3 ff 01 	and s26, s0, -8
   4e5e8:	07 00 00 f6 	b 28 <malloc+0x150>
   4e5ec:	20 fc fe 16 	cmpgt_u s1, s0, -65
   4e5f0:	41 00 00 f4 	bnz s1, 8 <malloc+0x144>
   4e5f4:	1d 00 00 f6 	b 116 <malloc+0x1b4>
   4e5f8:	40 ff ff 0f 	move s26, -1
   4e5fc:	6e 01 00 f6 	b 1464 <malloc+0x700>
   4e600:	40 43 00 0f 	move s26, 16
   4e604:	18 00 00 a8 	load_32 s0, (s24)
   4e608:	5a 0c 00 0a 	shr s2, s26, 3
   4e60c:	60 00 a1 c0 	shr s3, s0, s2
   4e610:	23 0c 00 01 	and s1, s3, 3
   4e614:	81 04 00 f2 	bz s1, 144 <malloc+0x1f0>
   4e618:	23 fc ff 03 	xor s1, s3, -1
   4e61c:	21 04 00 01 	and s1, s1, 1
   4e620:	a1 00 51 c0 	add_i s5, s1, s2
   4e624:	25 0c 00 0b 	shl s1, s5, 3
   4e628:	98 80 50 c0 	add_i s4, s24, s1
   4e62c:	44 c0 00 a8 	load_32 s2, 48(s4)
   4e630:	84 a0 00 05 	add_i s4, s4, 40
   4e634:	62 20 00 a8 	load_32 s3, 8(s2)
   4e638:	c3 00 12 c1 	cmpne_i s6, s3, s4
   4e63c:	46 00 00 f4 	bnz s6, 8 <malloc+0x190>
   4e640:	4c 00 00 f6 	b 304 <malloc+0x2bc>
   4e644:	18 40 00 a8 	load_32 s0, 16(s24)
   4e648:	00 80 61 c1 	cmpgt_u s0, s0, s3
   4e64c:	60 e4 00 f4 	bnz s0, 7308 <malloc+0x1e24>
   4e650:	03 30 00 a8 	load_32 s0, 12(s3)
   4e654:	00 00 11 c1 	cmpne_i s0, s0, s2
   4e658:	00 e4 00 f4 	bnz s0, 7296 <malloc+0x1e24>
   4e65c:	83 30 00 88 	store_32 s4, 12(s3)
   4e660:	64 20 00 88 	store_32 s3, 8(s4)
   4e664:	48 00 00 f6 	b 288 <malloc+0x2d0>
   4e668:	00 2c 00 05 	add_i s0, s0, 11
   4e66c:	38 10 00 a8 	load_32 s1, 4(s24)
   4e670:	40 e3 ff 01 	and s26, s0, -8
   4e674:	01 2a 00 f2 	bz s1, 1344 <malloc+0x700>
   4e678:	60 00 00 0f 	move s3, 0
   4e67c:	00 20 00 0a 	shr s0, s0, 8
   4e680:	a0 80 f1 c0 	move s5, s3
   4e684:	e0 0c 00 f2 	bz s0, 412 <malloc+0x36c>
   4e688:	5f fc 00 4f 	movehi s2, 2047
   4e68c:	42 fc 7f 00 	or s2, s2, 8191
   4e690:	5a 00 61 c1 	cmpgt_u s2, s26, s2
   4e694:	42 00 00 f4 	bnz s2, 8 <malloc+0x1e8>
   4e698:	46 00 00 f6 	b 280 <malloc+0x2fc>
   4e69c:	a0 7c 00 0f 	move s5, 31
   4e6a0:	60 00 00 f6 	b 384 <malloc+0x36c>
   4e6a4:	38 20 00 a8 	load_32 s1, 8(s24)
   4e6a8:	9a 80 90 c1 	cmple_u s4, s26, s1
   4e6ac:	44 28 00 f4 	bnz s4, 1288 <malloc+0x700>
   4e6b0:	03 17 00 f2 	bz s3, 736 <malloc+0x4dc>
   4e6b4:	80 08 00 0f 	move s4, 2
   4e6b8:	a0 00 00 0f 	move s5, 0
   4e6bc:	84 00 b1 c0 	shl s4, s4, s2
   4e6c0:	43 00 b1 c0 	shl s2, s3, s2
   4e6c4:	65 00 62 c0 	sub_i s3, s5, s4
   4e6c8:	64 80 01 c0 	or s3, s4, s3
   4e6cc:	42 80 11 c0 	and s2, s2, s3
   4e6d0:	65 00 61 c0 	sub_i s3, s5, s2
   4e6d4:	42 80 11 c0 	and s2, s2, s3
   4e6d8:	42 fc ff 05 	add_i s2, s2, -1
   4e6dc:	62 30 00 0a 	shr s3, s2, 12
   4e6e0:	63 40 00 01 	and s3, s3, 16
   4e6e4:	42 80 a1 c0 	shr s2, s2, s3
   4e6e8:	82 14 00 0a 	shr s4, s2, 5
   4e6ec:	84 20 00 01 	and s4, s4, 8
   4e6f0:	42 00 a2 c0 	shr s2, s2, s4
   4e6f4:	64 80 01 c0 	or s3, s4, s3
   4e6f8:	a2 08 00 0a 	shr s5, s2, 2
   4e6fc:	a5 10 00 01 	and s5, s5, 4
   4e700:	42 80 a2 c0 	shr s2, s2, s5
   4e704:	63 80 02 c0 	or s3, s3, s5
   4e708:	c2 04 00 0a 	shr s6, s2, 1
   4e70c:	86 08 00 01 	and s4, s6, 2
   4e710:	42 00 a2 c0 	shr s2, s2, s4
   4e714:	63 00 02 c0 	or s3, s3, s4
   4e718:	a2 04 00 0a 	shr s5, s2, 1
   4e71c:	85 04 00 01 	and s4, s5, 1
   4e720:	63 00 02 c0 	or s3, s3, s4
   4e724:	42 00 a2 c0 	shr s2, s2, s4
   4e728:	c3 00 51 c0 	add_i s6, s3, s2
   4e72c:	a6 0c 00 0b 	shl s5, s6, 3
   4e730:	98 80 52 c0 	add_i s4, s24, s5
   4e734:	44 c0 00 a8 	load_32 s2, 48(s4)
   4e738:	84 a0 00 05 	add_i s4, s4, 40
   4e73c:	62 20 00 a8 	load_32 s3, 8(s2)
   4e740:	e3 00 12 c1 	cmpne_i s7, s3, s4
   4e744:	47 00 00 f4 	bnz s7, 8 <malloc+0x298>
   4e748:	a2 01 00 f6 	b 1672 <malloc+0x91c>
   4e74c:	d8 40 00 a8 	load_32 s6, 16(s24)
   4e750:	c6 80 61 c1 	cmpgt_u s6, s6, s3
   4e754:	26 dc 00 f4 	bnz s6, 7044 <malloc+0x1e24>
   4e758:	c3 30 00 a8 	load_32 s6, 12(s3)
   4e75c:	c6 00 11 c1 	cmpne_i s6, s6, s2
   4e760:	c6 db 00 f4 	bnz s6, 7032 <malloc+0x1e24>
   4e764:	83 30 00 88 	store_32 s4, 12(s3)
   4e768:	64 20 00 88 	store_32 s3, 8(s4)
   4e76c:	9e 01 00 f6 	b 1656 <malloc+0x930>
   4e770:	60 04 00 0f 	move s3, 1
   4e774:	63 80 b2 c0 	shl s3, s3, s5
   4e778:	63 fc ff 03 	xor s3, s3, -1
   4e77c:	00 80 11 c0 	and s0, s0, s3
   4e780:	18 00 00 88 	store_32 s0, (s24)
   4e784:	02 80 50 c0 	add_i s0, s2, s1
   4e788:	21 0c 00 00 	or s1, s1, 3
   4e78c:	22 10 00 88 	store_32 s1, 4(s2)
   4e790:	62 23 00 05 	add_i s27, s2, 8
   4e794:	20 10 00 a8 	load_32 s1, 4(s0)
   4e798:	21 04 00 00 	or s1, s1, 1
   4e79c:	20 10 00 88 	store_32 s1, 4(s0)
   4e7a0:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4e7a4:	00 08 00 01 	and s0, s0, 2
   4e7a8:	e0 37 00 f2 	bz s0, 1788 <malloc+0x9f0>
   4e7ac:	b8 01 00 f6 	b 1760 <malloc+0x9d8>
   4e7b0:	5f 0c 00 4f 	movehi s2, 127
   4e7b4:	9f 04 00 4f 	movehi s4, 63
   4e7b8:	be 00 00 4f 	movehi s5, 30
   4e7bc:	42 00 7c 00 	or s2, s2, 7936
   4e7c0:	40 00 51 c0 	add_i s2, s0, s2
   4e7c4:	84 00 40 00 	or s4, s4, 4096
   4e7c8:	42 40 00 0a 	shr s2, s2, 16
   4e7cc:	42 20 00 01 	and s2, s2, 8
   4e7d0:	00 00 b1 c0 	shl s0, s0, s2
   4e7d4:	80 00 52 c0 	add_i s4, s0, s4
   4e7d8:	84 40 00 0a 	shr s4, s4, 16
   4e7dc:	84 10 00 01 	and s4, s4, 4
   4e7e0:	00 00 b2 c0 	shl s0, s0, s4
   4e7e4:	44 00 01 c0 	or s2, s4, s2
   4e7e8:	a0 80 52 c0 	add_i s5, s0, s5
   4e7ec:	a5 40 00 0a 	shr s5, s5, 16
   4e7f0:	85 08 00 01 	and s4, s5, 2
   4e7f4:	a0 38 00 0f 	move s5, 14
   4e7f8:	42 00 02 c0 	or s2, s2, s4
   4e7fc:	00 00 b2 c0 	shl s0, s0, s4
   4e800:	45 00 61 c0 	sub_i s2, s5, s2
   4e804:	00 3c 00 0a 	shr s0, s0, 15
   4e808:	02 00 50 c0 	add_i s0, s2, s0
   4e80c:	40 1c 00 05 	add_i s2, s0, 7
   4e810:	5a 00 a1 c0 	shr s2, s26, s2
   4e814:	00 04 00 0b 	shl s0, s0, 1
   4e818:	42 04 00 01 	and s2, s2, 1
   4e81c:	a2 00 00 c0 	or s5, s2, s0
   4e820:	05 08 00 0b 	shl s0, s5, 2
   4e824:	18 00 50 c0 	add_i s0, s24, s0
   4e828:	43 00 6d c0 	sub_i s2, s3, s26
   4e82c:	80 c0 04 a8 	load_32 s4, 304(s0)
   4e830:	24 0a 00 f2 	bz s4, 324 <malloc+0x4c0>
   4e834:	c0 00 00 0f 	move s6, 0
   4e838:	65 7c 00 10 	cmpeq_i s3, s5, 31
   4e83c:	00 00 f3 c0 	move s0, s6
   4e840:	83 00 00 f4 	bnz s3, 16 <malloc+0x39c>
   4e844:	00 64 00 0f 	move s0, 25
   4e848:	65 04 00 0a 	shr s3, s5, 1
   4e84c:	00 80 61 c0 	sub_i s0, s0, s3
   4e850:	fa 00 b0 c0 	shl s7, s26, s0
   4e854:	60 00 f3 c0 	move s3, s6
   4e858:	00 00 f3 c0 	move s0, s6
   4e85c:	04 11 00 a8 	load_32 s8, 4(s4)
   4e860:	08 e1 ff 01 	and s8, s8, -8
   4e864:	08 01 6d c0 	sub_i s8, s8, s26
   4e868:	28 01 71 c1 	cmpge_u s9, s8, s2
   4e86c:	89 00 00 f4 	bnz s9, 16 <malloc+0x3c8>
   4e870:	40 00 f4 c0 	move s2, s8
   4e874:	00 00 f2 c0 	move s0, s4
   4e878:	88 12 00 f2 	bz s8, 592 <malloc+0x614>
   4e87c:	07 75 00 0a 	shr s8, s7, 29
   4e880:	08 11 00 01 	and s8, s8, 4
   4e884:	24 01 54 c0 	add_i s9, s4, s8
   4e888:	04 51 00 a8 	load_32 s8, 20(s4)
   4e88c:	89 40 00 a8 	load_32 s4, 16(s9)
   4e890:	20 81 f1 c0 	move s9, s3
   4e894:	48 01 02 c1 	cmpeq_i s10, s8, s4
   4e898:	4a 01 00 f4 	bnz s10, 40 <malloc+0x40c>
   4e89c:	20 01 f4 c0 	move s9, s8
   4e8a0:	08 01 00 10 	cmpeq_i s8, s8, 0
   4e8a4:	48 00 00 f4 	bnz s8, 8 <malloc+0x3f8>
   4e8a8:	08 00 00 f6 	b 32 <malloc+0x414>
   4e8ac:	04 01 00 11 	cmpne_i s8, s4, 0
   4e8b0:	08 05 00 01 	and s8, s8, 1
   4e8b4:	e7 00 b4 c0 	shl s7, s7, s8
   4e8b8:	24 fd ff f5 	bnz s4, -92 <malloc+0x3a8>
   4e8bc:	08 00 00 f6 	b 32 <malloc+0x428>
   4e8c0:	08 01 00 10 	cmpeq_i s8, s8, 0
   4e8c4:	48 ff ff f5 	bnz s8, -24 <malloc+0x3f8>
   4e8c8:	60 80 f4 c0 	move s3, s9
   4e8cc:	04 01 00 11 	cmpne_i s8, s4, 0
   4e8d0:	08 05 00 01 	and s8, s8, 1
   4e8d4:	e7 00 b4 c0 	shl s7, s7, s8
   4e8d8:	24 fc ff f5 	bnz s4, -124 <malloc+0x3a8>
   4e8dc:	83 00 00 c0 	or s4, s3, s0
   4e8e0:	24 05 00 f4 	bnz s4, 164 <malloc+0x4d0>
   4e8e4:	80 08 00 0f 	move s4, 2
   4e8e8:	60 00 00 0f 	move s3, 0
   4e8ec:	84 80 b2 c0 	shl s4, s4, s5
   4e8f0:	a3 00 62 c0 	sub_i s5, s3, s4
   4e8f4:	84 80 02 c0 	or s4, s4, s5
   4e8f8:	84 80 10 c0 	and s4, s4, s1
   4e8fc:	c4 15 00 f2 	bz s4, 696 <malloc+0x700>
   4e900:	63 00 62 c0 	sub_i s3, s3, s4
   4e904:	64 80 11 c0 	and s3, s4, s3
   4e908:	63 fc ff 05 	add_i s3, s3, -1
   4e90c:	83 30 00 0a 	shr s4, s3, 12
   4e910:	84 40 00 01 	and s4, s4, 16
   4e914:	63 00 a2 c0 	shr s3, s3, s4
   4e918:	a3 14 00 0a 	shr s5, s3, 5
   4e91c:	a5 20 00 01 	and s5, s5, 8
   4e920:	63 80 a2 c0 	shr s3, s3, s5
   4e924:	85 00 02 c0 	or s4, s5, s4
   4e928:	c3 08 00 0a 	shr s6, s3, 2
   4e92c:	c6 10 00 01 	and s6, s6, 4
   4e930:	63 00 a3 c0 	shr s3, s3, s6
   4e934:	84 00 03 c0 	or s4, s4, s6
   4e938:	e3 04 00 0a 	shr s7, s3, 1
   4e93c:	a7 08 00 01 	and s5, s7, 2
   4e940:	63 80 a2 c0 	shr s3, s3, s5
   4e944:	84 80 02 c0 	or s4, s4, s5
   4e948:	c3 04 00 0a 	shr s6, s3, 1
   4e94c:	a6 04 00 01 	and s5, s6, 1
   4e950:	84 80 02 c0 	or s4, s4, s5
   4e954:	63 80 a2 c0 	shr s3, s3, s5
   4e958:	64 80 51 c0 	add_i s3, s4, s3
   4e95c:	63 08 00 0b 	shl s3, s3, 2
   4e960:	78 80 51 c0 	add_i s3, s24, s3
   4e964:	63 c0 04 a8 	load_32 s3, 304(s3)
   4e968:	80 80 f1 c0 	move s4, s3
   4e96c:	c3 0e 00 f2 	bz s3, 472 <malloc+0x690>
   4e970:	58 00 00 f6 	b 352 <malloc+0x61c>
   4e974:	00 80 f1 c0 	move s0, s3
   4e978:	83 00 00 c0 	or s4, s3, s0
   4e97c:	44 00 00 f4 	bnz s4, 8 <malloc+0x4d0>
   4e980:	d9 ff ff f7 	b -156 <malloc+0x430>
   4e984:	80 80 f1 c0 	move s4, s3
   4e988:	e3 0d 00 f2 	bz s3, 444 <malloc+0x690>
   4e98c:	51 00 00 f6 	b 324 <malloc+0x61c>
   4e990:	b8 10 00 a8 	load_32 s5, 4(s24)
   4e994:	05 11 00 f2 	bz s5, 544 <malloc+0x700>
   4e998:	c0 00 00 0f 	move s6, 0
   4e99c:	46 80 62 c0 	sub_i s2, s6, s5
   4e9a0:	45 00 11 c0 	and s2, s5, s2
   4e9a4:	42 fc ff 05 	add_i s2, s2, -1
   4e9a8:	62 30 00 0a 	shr s3, s2, 12
   4e9ac:	63 40 00 01 	and s3, s3, 16
   4e9b0:	42 80 a1 c0 	shr s2, s2, s3
   4e9b4:	82 14 00 0a 	shr s4, s2, 5
   4e9b8:	84 20 00 01 	and s4, s4, 8
   4e9bc:	42 00 a2 c0 	shr s2, s2, s4
   4e9c0:	64 80 01 c0 	or s3, s4, s3
   4e9c4:	e2 08 00 0a 	shr s7, s2, 2
   4e9c8:	e7 10 00 01 	and s7, s7, 4
   4e9cc:	42 80 a3 c0 	shr s2, s2, s7
   4e9d0:	63 80 03 c0 	or s3, s3, s7
   4e9d4:	02 05 00 0a 	shr s8, s2, 1
   4e9d8:	88 08 00 01 	and s4, s8, 2
   4e9dc:	42 00 a2 c0 	shr s2, s2, s4
   4e9e0:	63 00 02 c0 	or s3, s3, s4
   4e9e4:	e2 04 00 0a 	shr s7, s2, 1
   4e9e8:	87 04 00 01 	and s4, s7, 1
   4e9ec:	63 00 02 c0 	or s3, s3, s4
   4e9f0:	42 00 a2 c0 	shr s2, s2, s4
   4e9f4:	43 00 51 c0 	add_i s2, s3, s2
   4e9f8:	42 08 00 0b 	shl s2, s2, 2
   4e9fc:	58 00 51 c0 	add_i s2, s24, s2
   4ea00:	42 c0 04 a8 	load_32 s2, 304(s2)
   4ea04:	62 10 00 a8 	load_32 s3, 4(s2)
   4ea08:	e0 00 f1 c0 	move s7, s2
   4ea0c:	63 e0 ff 01 	and s3, s3, -8
   4ea10:	63 00 6d c0 	sub_i s3, s3, s26
   4ea14:	87 40 00 a8 	load_32 s4, 16(s7)
   4ea18:	04 01 00 f4 	bnz s4, 32 <malloc+0x584>
   4ea1c:	11 00 00 f6 	b 68 <malloc+0x5ac>
   4ea20:	60 80 f3 c0 	move s3, s7
   4ea24:	40 80 f4 c0 	move s2, s9
   4ea28:	e0 00 f2 c0 	move s7, s4
   4ea2c:	87 40 00 a8 	load_32 s4, 16(s7)
   4ea30:	44 00 00 f4 	bnz s4, 8 <malloc+0x584>
   4ea34:	0b 00 00 f6 	b 44 <malloc+0x5ac>
   4ea38:	e4 10 00 a8 	load_32 s7, 4(s4)
   4ea3c:	e7 e0 ff 01 	and s7, s7, -8
   4ea40:	e7 00 6d c0 	sub_i s7, s7, s26
   4ea44:	07 81 81 c1 	cmplt_u s8, s7, s3
   4ea48:	48 00 00 f4 	bnz s8, 8 <malloc+0x59c>
   4ea4c:	e0 80 f1 c0 	move s7, s3
   4ea50:	20 01 f2 c0 	move s9, s4
   4ea54:	68 fe ff f5 	bnz s8, -52 <malloc+0x56c>
   4ea58:	20 01 f1 c0 	move s9, s2
   4ea5c:	f1 ff ff f7 	b -60 <malloc+0x56c>
   4ea60:	87 50 00 a8 	load_32 s4, 20(s7)
   4ea64:	44 00 00 f2 	bz s4, 8 <malloc+0x5b8>
   4ea68:	f4 ff ff f7 	b -48 <malloc+0x584>
   4ea6c:	38 41 00 a8 	load_32 s9, 16(s24)
   4ea70:	89 00 61 c1 	cmpgt_u s4, s9, s2
   4ea74:	24 c3 00 f4 	bnz s4, 6244 <malloc+0x1e24>
   4ea78:	82 00 5d c0 	add_i s4, s2, s26
   4ea7c:	e4 00 91 c1 	cmple_u s7, s4, s2
   4ea80:	c7 c2 00 f4 	bnz s7, 6232 <malloc+0x1e24>
   4ea84:	e2 60 00 a8 	load_32 s7, 24(s2)
   4ea88:	02 31 00 a8 	load_32 s8, 12(s2)
   4ea8c:	48 01 01 c1 	cmpeq_i s10, s8, s2
   4ea90:	aa 21 00 f4 	bnz s10, 1076 <malloc+0xa10>
   4ea94:	c2 20 00 a8 	load_32 s6, 8(s2)
   4ea98:	29 01 63 c1 	cmpgt_u s9, s9, s6
   4ea9c:	e9 c1 00 f4 	bnz s9, 6204 <malloc+0x1e24>
   4eaa0:	26 31 00 a8 	load_32 s9, 12(s6)
   4eaa4:	29 01 11 c1 	cmpne_i s9, s9, s2
   4eaa8:	89 c1 00 f4 	bnz s9, 6192 <malloc+0x1e24>
   4eaac:	28 21 00 a8 	load_32 s9, 8(s8)
   4eab0:	29 01 11 c1 	cmpne_i s9, s9, s2
   4eab4:	29 c1 00 f4 	bnz s9, 6180 <malloc+0x1e24>
   4eab8:	06 31 00 88 	store_32 s8, 12(s6)
   4eabc:	c8 20 00 88 	store_32 s6, 8(s8)
   4eac0:	47 56 00 f2 	bz s7, 2760 <malloc+0x10d4>
   4eac4:	69 02 00 f6 	b 2468 <malloc+0xfb4>
   4eac8:	00 00 f2 c0 	move s0, s4
   4eacc:	40 00 f3 c0 	move s2, s6
   4ead0:	60 00 f0 c0 	move s3, s0
   4ead4:	a0 00 f1 c0 	move s5, s2
   4ead8:	04 10 00 a8 	load_32 s0, 4(s4)
   4eadc:	00 e0 ff 01 	and s0, s0, -8
   4eae0:	40 00 6d c0 	sub_i s2, s0, s26
   4eae4:	c2 80 82 c1 	cmplt_u s6, s2, s5
   4eae8:	a6 01 00 f4 	bnz s6, 52 <malloc+0x668>
   4eaec:	40 80 f2 c0 	move s2, s5
   4eaf0:	00 00 f2 c0 	move s0, s4
   4eaf4:	46 00 00 f4 	bnz s6, 8 <malloc+0x648>
   4eaf8:	0b 00 00 f6 	b 44 <malloc+0x670>
   4eafc:	c4 40 00 a8 	load_32 s6, 16(s4)
   4eb00:	46 00 00 f4 	bnz s6, 8 <malloc+0x654>
   4eb04:	0b 00 00 f6 	b 44 <malloc+0x67c>
   4eb08:	60 00 f0 c0 	move s3, s0
   4eb0c:	a0 00 f1 c0 	move s5, s2
   4eb10:	80 00 f3 c0 	move s4, s6
   4eb14:	26 fe ff f5 	bnz s6, -60 <malloc+0x624>
   4eb18:	0b 00 00 f6 	b 44 <malloc+0x690>
   4eb1c:	00 00 f2 c0 	move s0, s4
   4eb20:	e6 fe ff f5 	bnz s6, -36 <malloc+0x648>
   4eb24:	00 80 f1 c0 	move s0, s3
   4eb28:	c4 40 00 a8 	load_32 s6, 16(s4)
   4eb2c:	e6 fe ff f5 	bnz s6, -36 <malloc+0x654>
   4eb30:	c4 50 00 a8 	load_32 s6, 20(s4)
   4eb34:	60 00 f0 c0 	move s3, s0
   4eb38:	a0 00 f1 c0 	move s5, s2
   4eb3c:	80 00 f3 c0 	move s4, s6
   4eb40:	c6 fc ff f5 	bnz s6, -104 <malloc+0x624>
   4eb44:	80 03 00 f2 	bz s0, 112 <malloc+0x700>
   4eb48:	78 20 00 a8 	load_32 s3, 8(s24)
   4eb4c:	63 00 6d c0 	sub_i s3, s3, s26
   4eb50:	62 80 71 c1 	cmpge_u s3, s2, s3
   4eb54:	03 03 00 f4 	bnz s3, 96 <malloc+0x700>
   4eb58:	d8 40 00 a8 	load_32 s6, 16(s24)
   4eb5c:	66 00 60 c1 	cmpgt_u s3, s6, s0
   4eb60:	c3 bb 00 f4 	bnz s3, 6008 <malloc+0x1e24>
   4eb64:	60 00 5d c0 	add_i s3, s0, s26
   4eb68:	83 00 90 c1 	cmple_u s4, s3, s0
   4eb6c:	64 bb 00 f4 	bnz s4, 5996 <malloc+0x1e24>
   4eb70:	80 60 00 a8 	load_32 s4, 24(s0)
   4eb74:	a0 30 00 a8 	load_32 s5, 12(s0)
   4eb78:	e5 00 00 c1 	cmpeq_i s7, s5, s0
   4eb7c:	47 16 00 f4 	bnz s7, 712 <malloc+0x990>
   4eb80:	e0 20 00 a8 	load_32 s7, 8(s0)
   4eb84:	c6 80 63 c1 	cmpgt_u s6, s6, s7
   4eb88:	86 ba 00 f4 	bnz s6, 5968 <malloc+0x1e24>
   4eb8c:	c7 30 00 a8 	load_32 s6, 12(s7)
   4eb90:	c6 00 10 c1 	cmpne_i s6, s6, s0
   4eb94:	26 ba 00 f4 	bnz s6, 5956 <malloc+0x1e24>
   4eb98:	c5 20 00 a8 	load_32 s6, 8(s5)
   4eb9c:	c6 00 10 c1 	cmpne_i s6, s6, s0
   4eba0:	c6 b9 00 f4 	bnz s6, 5944 <malloc+0x1e24>
   4eba4:	a7 30 00 88 	store_32 s5, 12(s7)
   4eba8:	e5 20 00 88 	store_32 s7, 8(s5)
   4ebac:	e4 25 00 f2 	bz s4, 1212 <malloc+0xbb4>
   4ebb0:	da 00 00 f6 	b 872 <malloc+0xa64>
   4ebb4:	38 20 00 a8 	load_32 s1, 8(s24)
   4ebb8:	01 00 8d c1 	cmplt_u s0, s1, s26
   4ebbc:	40 00 00 f4 	bnz s0, 8 <malloc+0x710>
   4ebc0:	12 00 00 f6 	b 72 <malloc+0x754>
   4ebc4:	18 30 00 a8 	load_32 s0, 12(s24)
   4ebc8:	20 00 9d c1 	cmple_u s1, s0, s26
   4ebcc:	21 04 00 f4 	bnz s1, 132 <malloc+0x79c>
   4ebd0:	00 00 6d c0 	sub_i s0, s0, s26
   4ebd4:	18 30 00 88 	store_32 s0, 12(s24)
   4ebd8:	38 60 00 a8 	load_32 s1, 24(s24)
   4ebdc:	00 04 00 00 	or s0, s0, 1
   4ebe0:	41 00 5d c0 	add_i s2, s1, s26
   4ebe4:	58 60 00 88 	store_32 s2, 24(s24)
   4ebe8:	61 23 00 05 	add_i s27, s1, 8
   4ebec:	02 10 00 88 	store_32 s0, 4(s2)
   4ebf0:	1a 0c 00 00 	or s0, s26, 3
   4ebf4:	01 10 00 88 	store_32 s0, 4(s1)
   4ebf8:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4ebfc:	00 08 00 01 	and s0, s0, 2
   4ec00:	20 15 00 f2 	bz s0, 676 <malloc+0x9f0>
   4ec04:	a2 00 00 f6 	b 648 <malloc+0x9d8>
   4ec08:	41 00 6d c0 	sub_i s2, s1, s26
   4ec0c:	18 50 00 a8 	load_32 s0, 20(s24)
   4ec10:	62 40 00 18 	cmplt_u s3, s2, 16
   4ec14:	43 0b 00 f4 	bnz s3, 360 <malloc+0x8c8>
   4ec18:	60 00 5d c0 	add_i s3, s0, s26
   4ec1c:	78 50 00 88 	store_32 s3, 20(s24)
   4ec20:	20 80 50 c0 	add_i s1, s0, s1
   4ec24:	58 20 00 88 	store_32 s2, 8(s24)
   4ec28:	82 04 00 00 	or s4, s2, 1
   4ec2c:	83 10 00 88 	store_32 s4, 4(s3)
   4ec30:	60 23 00 05 	add_i s27, s0, 8
   4ec34:	41 00 00 88 	store_32 s2, (s1)
   4ec38:	3a 0c 00 00 	or s1, s26, 3
   4ec3c:	20 10 00 88 	store_32 s1, 4(s0)
   4ec40:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4ec44:	00 08 00 01 	and s0, s0, 2
   4ec48:	e0 12 00 f2 	bz s0, 604 <malloc+0x9f0>
   4ec4c:	90 00 00 f6 	b 576 <malloc+0x9d8>
   4ec50:	19 00 00 a8 	load_32 s0, (s25)
   4ec54:	20 05 00 f4 	bnz s0, 164 <malloc+0x844>
   4ec58:	0c 04 00 4f 	movehi s0, 44
   4ec5c:	20 04 00 0f 	move s1, 1
   4ec60:	00 20 0d 00 	or s0, s0, 840
   4ec64:	40 00 00 aa 	load_sync s2, (s0)
   4ec68:	60 80 f0 c0 	move s3, s1
   4ec6c:	60 00 00 8a 	store_sync s3, (s0)  
   4ec70:	a3 ff ff f3 	bz s3, -12 <malloc+0x7b0>
   4ec74:	02 01 00 f2 	bz s2, 32 <malloc+0x7e0>
   4ec78:	40 00 00 a8 	load_32 s2, (s0)
   4ec7c:	e2 ff ff f5 	bnz s2, -4 <malloc+0x7c4>
   4ec80:	40 00 00 aa 	load_sync s2, (s0)
   4ec84:	60 80 f0 c0 	move s3, s1
   4ec88:	60 00 00 8a 	store_sync s3, (s0)  
   4ec8c:	a3 ff ff f3 	bz s3, -12 <malloc+0x7cc>
   4ec90:	42 ff ff f5 	bnz s2, -24 <malloc+0x7c4>
   4ec94:	39 00 00 a8 	load_32 s1, (s25)
   4ec98:	61 02 00 f4 	bnz s1, 76 <malloc+0x830>
   4ec9c:	20 00 40 0f 	move s1, 4096
   4eca0:	39 20 00 88 	store_32 s1, 8(s25)
   4eca4:	39 10 00 88 	store_32 s1, 4(s25)
   4eca8:	20 fc ff 0f 	move s1, -1
   4ecac:	39 30 00 88 	store_32 s1, 12(s25)
   4ecb0:	20 20 00 4f 	movehi s1, 256
   4ecb4:	39 40 00 88 	store_32 s1, 16(s25)
   4ecb8:	20 08 00 0f 	move s1, 2
   4ecbc:	39 50 00 88 	store_32 s1, 20(s25)
   4ecc0:	6a 54 55 4f 	movehi s3, 174762
   4ecc4:	38 f0 06 88 	store_32 s1, 444(s24)
   4ecc8:	3e a0 00 05 	add_i s1, sp, 40
   4eccc:	40 00 00 0f 	move s2, 0
   4ecd0:	58 00 07 88 	store_32 s2, 448(s24)
   4ecd4:	43 60 55 00 	or s2, s3, 5464
   4ecd8:	21 c0 ff 01 	and s1, s1, -16
   4ecdc:	21 00 31 c0 	xor s1, s1, s2
   4ece0:	39 00 00 88 	store_32 s1, (s25)
   4ece4:	20 00 00 0f 	move s1, 0
   4ece8:	40 00 00 aa 	load_sync s2, (s0)
   4ecec:	40 80 f0 c0 	move s2, s1
   4ecf0:	40 00 00 8a 	store_sync s2, (s0)  
   4ecf4:	a2 ff ff f3 	bz s2, -12 <malloc+0x834>
   4ecf8:	19 20 00 a8 	load_32 s0, 8(s25)
   4ecfc:	ba bc 00 05 	add_i s5, s26, 47
   4ed00:	60 03 00 0f 	move s27, 0
   4ed04:	20 80 52 c0 	add_i s1, s0, s5
   4ed08:	1b 00 60 c0 	sub_i s0, s27, s0
   4ed0c:	81 00 10 c0 	and s4, s1, s0
   4ed10:	04 00 9d c1 	cmple_u s0, s4, s26
   4ed14:	60 0b 00 f4 	bnz s0, 364 <malloc+0x9cc>
   4ed18:	18 e0 06 a8 	load_32 s0, 440(s24)
   4ed1c:	e0 00 00 f2 	bz s0, 28 <malloc+0x884>
   4ed20:	58 c0 06 a8 	load_32 s2, 432(s24)
   4ed24:	22 00 52 c0 	add_i s1, s2, s4
   4ed28:	41 00 91 c1 	cmple_u s2, s1, s2
   4ed2c:	a2 0a 00 f4 	bnz s2, 340 <malloc+0x9cc>
   4ed30:	01 00 60 c1 	cmpgt_u s0, s1, s0
   4ed34:	60 0a 00 f4 	bnz s0, 332 <malloc+0x9cc>
   4ed38:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4ed3c:	00 10 00 01 	and s0, s0, 4
   4ed40:	a0 03 00 f4 	bnz s0, 116 <malloc+0x900>
   4ed44:	18 60 00 a8 	load_32 s0, 24(s24)
   4ed48:	e0 00 00 0f 	move s7, 0
   4ed4c:	80 19 00 f2 	bz s0, 816 <malloc+0xbc8>
   4ed50:	38 10 07 05 	add_i s1, s24, 452
   4ed54:	41 00 00 a8 	load_32 s2, (s1)
   4ed58:	62 00 60 c1 	cmpgt_u s3, s2, s0
   4ed5c:	a3 00 00 f4 	bnz s3, 20 <malloc+0x8bc>
   4ed60:	61 10 00 a8 	load_32 s3, 4(s1)
   4ed64:	42 80 51 c0 	add_i s2, s2, s3
   4ed68:	42 00 60 c1 	cmpgt_u s2, s2, s0
   4ed6c:	62 18 00 f4 	bnz s2, 780 <malloc+0xbc4>
   4ed70:	21 20 00 a8 	load_32 s1, 8(s1)
   4ed74:	01 ff ff f5 	bnz s1, -32 <malloc+0x8a0>
   4ed78:	c1 00 00 f6 	b 772 <malloc+0xbc8>
   4ed7c:	40 00 00 0f 	move s2, 0
   4ed80:	58 20 00 88 	store_32 s2, 8(s24)
   4ed84:	58 50 00 88 	store_32 s2, 20(s24)
   4ed88:	40 80 50 c0 	add_i s2, s0, s1
   4ed8c:	21 0c 00 00 	or s1, s1, 3
   4ed90:	20 10 00 88 	store_32 s1, 4(s0)
   4ed94:	60 23 00 05 	add_i s27, s0, 8
   4ed98:	22 10 00 a8 	load_32 s1, 4(s2)
   4ed9c:	21 04 00 00 	or s1, s1, 1
   4eda0:	22 10 00 88 	store_32 s1, 4(s2)
   4eda4:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4eda8:	00 08 00 01 	and s0, s0, 2
   4edac:	c0 07 00 f2 	bz s0, 248 <malloc+0x9f0>
   4edb0:	37 00 00 f6 	b 220 <malloc+0x9d8>
   4edb4:	40 fd ff 0f 	move s10, -1
   4edb8:	20 01 00 0f 	move s9, 0
   4edbc:	1f fc 7f 4f 	movehi s0, 262143
   4edc0:	00 f8 7f 00 	or s0, s0, 8190
   4edc4:	04 00 60 c1 	cmpgt_u s0, s4, s0
   4edc8:	20 4b 00 f4 	bnz s0, 2404 <malloc+0x1278>
   4edcc:	2f 02 00 f6 	b 2236 <malloc+0x11d4>
   4edd0:	60 04 00 0f 	move s3, 1
   4edd4:	63 00 b3 c0 	shl s3, s3, s6
   4edd8:	63 fc ff 03 	xor s3, s3, -1
   4eddc:	00 80 11 c0 	and s0, s0, s3
   4ede0:	18 00 00 88 	store_32 s0, (s24)
   4ede4:	9a 0c 00 00 	or s4, s26, 3
   4ede8:	82 10 00 88 	store_32 s4, 4(s2)
   4edec:	65 00 6d c0 	sub_i s3, s5, s26
   4edf0:	82 00 5d c0 	add_i s4, s2, s26
   4edf4:	a2 80 52 c0 	add_i s5, s2, s5
   4edf8:	c3 04 00 00 	or s6, s3, 1
   4edfc:	c4 10 00 88 	store_32 s6, 4(s4)
   4ee00:	65 00 00 88 	store_32 s3, (s5)
   4ee04:	81 03 00 f2 	bz s1, 112 <malloc+0x9c0>
   4ee08:	a1 0c 00 0a 	shr s5, s1, 3
   4ee0c:	38 50 00 a8 	load_32 s1, 20(s24)
   4ee10:	c0 04 00 0f 	move s6, 1
   4ee14:	e5 0c 00 0b 	shl s7, s5, 3
   4ee18:	f8 80 53 c0 	add_i s7, s24, s7
   4ee1c:	c6 80 b2 c0 	shl s6, s6, s5
   4ee20:	00 01 13 c0 	and s8, s0, s6
   4ee24:	a7 a0 00 05 	add_i s5, s7, 40
   4ee28:	48 00 00 f4 	bnz s8, 8 <malloc+0x97c>
   4ee2c:	0b 00 00 f6 	b 44 <malloc+0x9a4>
   4ee30:	05 20 00 a8 	load_32 s0, 8(s5)
   4ee34:	d8 40 00 a8 	load_32 s6, 16(s24)
   4ee38:	c6 00 90 c1 	cmple_u s6, s6, s0
   4ee3c:	46 01 00 f4 	bnz s6, 40 <malloc+0x9b0>
   4ee40:	26 05 00 f6 	b 5272 <malloc+0x1e24>
   4ee44:	e0 50 00 a8 	load_32 s7, 20(s0)
   4ee48:	47 00 00 f4 	bnz s7, 8 <malloc+0x99c>
   4ee4c:	23 00 00 f6 	b 140 <malloc+0xa24>
   4ee50:	00 51 00 05 	add_i s8, s0, 20
   4ee54:	24 00 00 f6 	b 144 <malloc+0xa30>
   4ee58:	00 00 03 c0 	or s0, s0, s6
   4ee5c:	18 00 00 88 	store_32 s0, (s24)
   4ee60:	00 80 f2 c0 	move s0, s5
   4ee64:	25 20 00 88 	store_32 s1, 8(s5)
   4ee68:	20 30 00 88 	store_32 s1, 12(s0)
   4ee6c:	01 20 00 88 	store_32 s0, 8(s1)
   4ee70:	a1 30 00 88 	store_32 s5, 12(s1)
   4ee74:	78 20 00 88 	store_32 s3, 8(s24)
   4ee78:	62 23 00 05 	add_i s27, s2, 8
   4ee7c:	98 50 00 88 	store_32 s4, 20(s24)
   4ee80:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4ee84:	00 08 00 01 	and s0, s0, 2
   4ee88:	e0 00 00 f2 	bz s0, 28 <malloc+0x9f0>
   4ee8c:	18 00 07 05 	add_i s0, s24, 448
   4ee90:	20 00 00 0f 	move s1, 0
   4ee94:	40 00 00 aa 	load_sync s2, (s0)
   4ee98:	40 80 f0 c0 	move s2, s1
   4ee9c:	40 00 00 8a 	store_sync s2, (s0)  
   4eea0:	a2 ff ff f3 	bz s2, -12 <malloc+0x9e0>
   4eea4:	00 80 fd c0 	move s0, s27
   4eea8:	fe b3 00 a8 	load_32 ra, 44(sp)
   4eeac:	7e c3 00 a8 	load_32 s27, 48(sp)
   4eeb0:	5e d3 00 a8 	load_32 s26, 52(sp)
   4eeb4:	3e e3 00 a8 	load_32 s25, 56(sp)
   4eeb8:	1e f3 00 a8 	load_32 s24, 60(sp)
   4eebc:	de 03 01 05 	add_i sp, sp, 64
   4eec0:	1f 00 00 f0 	ret
   4eec4:	42 51 00 a8 	load_32 s10, 20(s2)
   4eec8:	4a 00 00 f4 	bnz s10, 8 <malloc+0xa1c>
   4eecc:	58 01 00 f6 	b 1376 <malloc+0xf78>
   4eed0:	62 51 00 05 	add_i s11, s2, 20
   4eed4:	59 01 00 f6 	b 1380 <malloc+0xf84>
   4eed8:	e0 40 00 a8 	load_32 s7, 16(s0)
   4eedc:	47 39 00 f2 	bz s7, 1832 <malloc+0x1150>
   4eee0:	00 41 00 05 	add_i s8, s0, 16
   4eee4:	a0 80 f3 c0 	move s5, s7
   4eee8:	e5 50 00 a8 	load_32 s7, 20(s5)
   4eeec:	20 01 f4 c0 	move s9, s8
   4eef0:	05 51 00 05 	add_i s8, s5, 20
   4eef4:	87 ff ff f5 	bnz s7, -16 <malloc+0xa30>
   4eef8:	e5 40 00 a8 	load_32 s7, 16(s5)
   4eefc:	05 41 00 05 	add_i s8, s5, 16
   4ef00:	27 ff ff f5 	bnz s7, -28 <malloc+0xa30>
   4ef04:	c6 80 64 c1 	cmpgt_u s6, s6, s9
   4ef08:	86 9e 00 f4 	bnz s6, 5072 <malloc+0x1e24>
   4ef0c:	c0 00 00 0f 	move s6, 0
   4ef10:	c9 00 00 88 	store_32 s6, (s9)
   4ef14:	a4 0a 00 f2 	bz s4, 340 <malloc+0xbb4>
   4ef18:	c0 70 00 a8 	load_32 s6, 28(s0)
   4ef1c:	e6 08 00 0b 	shl s7, s6, 2
   4ef20:	f8 80 53 c0 	add_i s7, s24, s7
   4ef24:	07 c1 04 a8 	load_32 s8, 304(s7)
   4ef28:	00 01 14 c1 	cmpne_i s8, s0, s8
   4ef2c:	48 00 00 f4 	bnz s8, 8 <malloc+0xa80>
   4ef30:	0c 00 00 f6 	b 48 <malloc+0xaac>
   4ef34:	d8 40 00 a8 	load_32 s6, 16(s24)
   4ef38:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   4ef3c:	e6 9c 00 f4 	bnz s6, 5020 <malloc+0x1e24>
   4ef40:	c4 40 00 a8 	load_32 s6, 16(s4)
   4ef44:	c6 00 00 c1 	cmpeq_i s6, s6, s0
   4ef48:	66 06 00 f4 	bnz s6, 204 <malloc+0xb60>
   4ef4c:	c0 50 00 0f 	move s6, 20
   4ef50:	c4 00 53 c0 	add_i s6, s4, s6
   4ef54:	a6 00 00 88 	store_32 s5, (s6)
   4ef58:	85 08 00 f2 	bz s5, 272 <malloc+0xbb4>
   4ef5c:	32 00 00 f6 	b 200 <malloc+0xb70>
   4ef60:	e7 c0 04 05 	add_i s7, s7, 304
   4ef64:	a7 00 00 88 	store_32 s5, (s7)
   4ef68:	e5 05 00 f4 	bnz s5, 188 <malloc+0xb70>
   4ef6c:	80 04 00 0f 	move s4, 1
   4ef70:	84 00 b3 c0 	shl s4, s4, s6
   4ef74:	84 fc ff 03 	xor s4, s4, -1
   4ef78:	21 00 12 c0 	and s1, s1, s4
   4ef7c:	38 10 00 88 	store_32 s1, 4(s24)
   4ef80:	82 3c 00 16 	cmpgt_u s4, s2, 15
   4ef84:	44 00 00 f4 	bnz s4, 8 <malloc+0xad8>
   4ef88:	3a 00 00 f6 	b 232 <malloc+0xbbc>
   4ef8c:	9a 0c 00 00 	or s4, s26, 3
   4ef90:	80 10 00 88 	store_32 s4, 4(s0)
   4ef94:	82 04 00 00 	or s4, s2, 1
   4ef98:	83 10 00 88 	store_32 s4, 4(s3)
   4ef9c:	a3 00 51 c0 	add_i s5, s3, s2
   4efa0:	82 fc 03 16 	cmpgt_u s4, s2, 255
   4efa4:	45 00 00 88 	store_32 s2, (s5)
   4efa8:	04 02 00 f4 	bnz s4, 64 <malloc+0xb34>
   4efac:	22 0c 00 0a 	shr s1, s2, 3
   4efb0:	58 00 00 a8 	load_32 s2, (s24)
   4efb4:	80 04 00 0f 	move s4, 1
   4efb8:	a1 0c 00 0b 	shl s5, s1, 3
   4efbc:	b8 80 52 c0 	add_i s5, s24, s5
   4efc0:	84 80 b0 c0 	shl s4, s4, s1
   4efc4:	c2 00 12 c0 	and s6, s2, s4
   4efc8:	25 a0 00 05 	add_i s1, s5, 40
   4efcc:	46 00 00 f4 	bnz s6, 8 <malloc+0xb20>
   4efd0:	aa 00 00 f6 	b 680 <malloc+0xdc4>
   4efd4:	41 20 00 a8 	load_32 s2, 8(s1)
   4efd8:	98 40 00 a8 	load_32 s4, 16(s24)
   4efdc:	84 00 91 c1 	cmple_u s4, s4, s2
   4efe0:	24 15 00 f4 	bnz s4, 676 <malloc+0xdd0>
   4efe4:	bd 04 00 f6 	b 4852 <malloc+0x1e24>
   4efe8:	80 00 00 0f 	move s4, 0
   4efec:	c2 20 00 0a 	shr s6, s2, 8
   4eff0:	a0 00 f2 c0 	move s5, s4
   4eff4:	86 19 00 f2 	bz s6, 816 <malloc+0xe70>
   4eff8:	bf fc 00 4f 	movehi s5, 2047
   4effc:	a5 fc 7f 00 	or s5, s5, 8191
   4f000:	a2 80 62 c1 	cmpgt_u s5, s2, s5
   4f004:	45 00 00 f4 	bnz s5, 8 <malloc+0xb58>
   4f008:	ab 00 00 f6 	b 684 <malloc+0xe00>
   4f00c:	a0 7c 00 0f 	move s5, 31
   4f010:	c5 00 00 f6 	b 788 <malloc+0xe70>
   4f014:	c0 40 00 0f 	move s6, 16
   4f018:	c4 00 53 c0 	add_i s6, s4, s6
   4f01c:	a6 00 00 88 	store_32 s5, (s6)
   4f020:	45 02 00 f2 	bz s5, 72 <malloc+0xbb4>
   4f024:	d8 40 00 a8 	load_32 s6, 16(s24)
   4f028:	e6 80 62 c1 	cmpgt_u s7, s6, s5
   4f02c:	67 95 00 f4 	bnz s7, 4780 <malloc+0x1e24>
   4f030:	85 60 00 88 	store_32 s4, 24(s5)
   4f034:	80 40 00 a8 	load_32 s4, 16(s0)
   4f038:	a4 00 00 f2 	bz s4, 20 <malloc+0xb98>
   4f03c:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   4f040:	c6 94 00 f4 	bnz s6, 4760 <malloc+0x1e24>
   4f044:	85 40 00 88 	store_32 s4, 16(s5)
   4f048:	a4 60 00 88 	store_32 s5, 24(s4)
   4f04c:	80 50 00 a8 	load_32 s4, 20(s0)
   4f050:	c4 00 00 f2 	bz s4, 24 <malloc+0xbb4>
   4f054:	d8 40 00 a8 	load_32 s6, 16(s24)
   4f058:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   4f05c:	e6 93 00 f4 	bnz s6, 4732 <malloc+0x1e24>
   4f060:	85 50 00 88 	store_32 s4, 20(s5)
   4f064:	a4 60 00 88 	store_32 s5, 24(s4)
   4f068:	82 3c 00 16 	cmpgt_u s4, s2, 15
   4f06c:	04 f9 ff f5 	bnz s4, -224 <malloc+0xad8>
   4f070:	22 00 5d c0 	add_i s1, s2, s26
   4f074:	45 ff ff f7 	b -748 <malloc+0x8d4>
   4f078:	e0 80 f0 c0 	move s7, s1
   4f07c:	0c 04 00 4f 	movehi s0, 44
   4f080:	3a c0 00 05 	add_i s1, s26, 48
   4f084:	3e 80 00 88 	store_32 s1, 32(sp)
   4f088:	60 23 0d 00 	or s27, s0, 840
   4f08c:	00 04 00 0f 	move s0, 1
   4f090:	3b 00 00 aa 	load_sync s1, (s27)
   4f094:	40 00 f0 c0 	move s2, s0
   4f098:	5b 00 00 8a 	store_sync s2, (s27)  
   4f09c:	a2 ff ff f3 	bz s2, -12 <malloc+0xbdc>
   4f0a0:	01 01 00 f2 	bz s1, 32 <malloc+0xc0c>
   4f0a4:	3b 00 00 a8 	load_32 s1, (s27)
   4f0a8:	e1 ff ff f5 	bnz s1, -4 <malloc+0xbf0>
   4f0ac:	3b 00 00 aa 	load_sync s1, (s27)
   4f0b0:	40 00 f0 c0 	move s2, s0
   4f0b4:	5b 00 00 8a 	store_sync s2, (s27)  
   4f0b8:	a2 ff ff f3 	bz s2, -12 <malloc+0xbf8>
   4f0bc:	41 ff ff f5 	bnz s1, -24 <malloc+0xbf0>
   4f0c0:	47 00 00 f4 	bnz s7, 8 <malloc+0xc14>
   4f0c4:	1e 00 00 f6 	b 120 <malloc+0xc88>
   4f0c8:	18 30 00 a8 	load_32 s0, 12(s24)
   4f0cc:	c0 00 00 0f 	move s6, 0
   4f0d0:	39 20 00 a8 	load_32 s1, 8(s25)
   4f0d4:	5f fc 7f 4f 	movehi s2, 262143
   4f0d8:	05 00 60 c0 	sub_i s0, s5, s0
   4f0dc:	00 80 50 c0 	add_i s0, s0, s1
   4f0e0:	26 80 60 c0 	sub_i s1, s6, s1
   4f0e4:	00 80 10 c0 	and s0, s0, s1
   4f0e8:	22 f8 7f 00 	or s1, s2, 8190
   4f0ec:	20 80 60 c1 	cmpgt_u s1, s0, s1
   4f0f0:	01 2b 00 f4 	bnz s1, 1376 <malloc+0x119c>
   4f0f4:	be 30 00 88 	store_32 s5, 12(sp)
   4f0f8:	9e 70 00 88 	store_32 s4, 28(sp)
   4f0fc:	1e 50 00 88 	store_32 s0, 20(sp)
   4f100:	fe 60 00 88 	store_32 s7, 24(sp)
   4f104:	bb 12 00 f8 	call 19180 <sbrk>
   4f108:	5e 60 00 a8 	load_32 s2, 24(sp)
   4f10c:	22 00 00 a8 	load_32 s1, (s2)
   4f110:	42 10 00 a8 	load_32 s2, 4(s2)
   4f114:	40 01 f0 c0 	move s10, s0
   4f118:	01 00 51 c0 	add_i s0, s1, s2
   4f11c:	0a 00 10 c1 	cmpne_i s0, s10, s0
   4f120:	40 06 00 f4 	bnz s0, 200 <malloc+0xd34>
   4f124:	3e 51 00 a8 	load_32 s9, 20(sp)
   4f128:	0a fc ff 10 	cmpeq_i s0, s10, -1
   4f12c:	c0 80 f4 c0 	move s6, s9
   4f130:	9e 70 00 a8 	load_32 s4, 28(sp)
   4f134:	e0 28 00 f4 	bnz s0, 1308 <malloc+0x119c>
   4f138:	4b 01 00 f6 	b 1324 <malloc+0x11b0>
   4f13c:	00 00 00 0f 	move s0, 0
   4f140:	be 30 00 88 	store_32 s5, 12(sp)
   4f144:	9e 70 00 88 	store_32 s4, 28(sp)
   4f148:	1e 40 00 88 	store_32 s0, 16(sp)
   4f14c:	a9 12 00 f8 	call 19108 <sbrk>
   4f150:	a0 00 f0 c0 	move s5, s0
   4f154:	05 fc ff 10 	cmpeq_i s0, s5, -1
   4f158:	80 0a 00 f4 	bnz s0, 336 <malloc+0xdf4>
   4f15c:	99 10 00 a8 	load_32 s4, 4(s25)
   4f160:	7e 70 00 a8 	load_32 s3, 28(sp)
   4f164:	24 fc ff 05 	add_i s1, s4, -1
   4f168:	00 80 f1 c0 	move s0, s3
   4f16c:	41 80 12 c0 	and s2, s1, s5
   4f170:	e2 00 00 f2 	bz s2, 28 <malloc+0xcd8>
   4f174:	40 00 00 0f 	move s2, 0
   4f178:	21 80 52 c0 	add_i s1, s1, s5
   4f17c:	63 80 62 c0 	sub_i s3, s3, s5
   4f180:	02 00 62 c0 	sub_i s0, s2, s4
   4f184:	01 00 10 c0 	and s0, s1, s0
   4f188:	03 00 50 c0 	add_i s0, s3, s0
   4f18c:	78 c0 06 a8 	load_32 s3, 432(s24)
   4f190:	20 00 9d c1 	cmple_u s1, s0, s26
   4f194:	de 40 00 a8 	load_32 s6, 16(sp)
   4f198:	a1 25 00 f4 	bnz s1, 1204 <malloc+0x1198>
   4f19c:	3f fc 7f 4f 	movehi s1, 262143
   4f1a0:	9e 70 00 a8 	load_32 s4, 28(sp)
   4f1a4:	21 f8 7f 00 	or s1, s1, 8190
   4f1a8:	20 80 60 c1 	cmpgt_u s1, s0, s1
   4f1ac:	21 25 00 f4 	bnz s1, 1188 <malloc+0x119c>
   4f1b0:	38 e0 06 a8 	load_32 s1, 440(s24)
   4f1b4:	c1 00 00 f2 	bz s1, 24 <malloc+0xd18>
   4f1b8:	43 00 50 c0 	add_i s2, s3, s0
   4f1bc:	62 80 91 c1 	cmple_u s3, s2, s3
   4f1c0:	83 24 00 f4 	bnz s3, 1168 <malloc+0x119c>
   4f1c4:	22 80 60 c1 	cmpgt_u s1, s2, s1
   4f1c8:	41 24 00 f4 	bnz s1, 1160 <malloc+0x119c>
   4f1cc:	1e 50 00 88 	store_32 s0, 20(sp)
   4f1d0:	be 60 00 88 	store_32 s5, 24(sp)
   4f1d4:	87 12 00 f8 	call 18972 <sbrk>
   4f1d8:	3e 60 00 a8 	load_32 s1, 24(sp)
   4f1dc:	40 01 f0 c0 	move s10, s0
   4f1e0:	0a 80 00 c1 	cmpeq_i s0, s10, s1
   4f1e4:	00 22 00 f4 	bnz s0, 1088 <malloc+0x1170>
   4f1e8:	9e 70 00 a8 	load_32 s4, 28(sp)
   4f1ec:	c0 00 00 0f 	move s6, 0
   4f1f0:	3e 51 00 a8 	load_32 s9, 20(sp)
   4f1f4:	1e 80 00 a8 	load_32 s0, 32(sp)
   4f1f8:	00 80 94 c1 	cmple_u s0, s0, s9
   4f1fc:	20 1e 00 f4 	bnz s0, 964 <malloc+0x110c>
   4f200:	1f fc 7f 4f 	movehi s0, 262143
   4f204:	60 f8 7f 00 	or s3, s0, 8190
   4f208:	29 80 61 c1 	cmpgt_u s1, s9, s3
   4f20c:	a1 1d 00 f4 	bnz s1, 948 <malloc+0x110c>
   4f210:	2a fc ff 10 	cmpeq_i s1, s10, -1
   4f214:	61 1d 00 f4 	bnz s1, 940 <malloc+0x110c>
   4f218:	3e 63 00 88 	store_32 s25, 24(sp)
   4f21c:	39 20 00 a8 	load_32 s1, 8(s25)
   4f220:	20 03 00 0f 	move s25, 0
   4f224:	5e 30 00 a8 	load_32 s2, 12(sp)
   4f228:	42 80 64 c0 	sub_i s2, s2, s9
   4f22c:	42 80 50 c0 	add_i s2, s2, s1
   4f230:	39 80 60 c0 	sub_i s1, s25, s1
   4f234:	02 80 10 c0 	and s0, s2, s1
   4f238:	20 80 61 c1 	cmpgt_u s1, s0, s3
   4f23c:	a1 1e 00 f4 	bnz s1, 980 <malloc+0x115c>
   4f240:	de 40 00 88 	store_32 s6, 16(sp)
   4f244:	9e 70 00 88 	store_32 s4, 28(sp)
   4f248:	5e 81 00 88 	store_32 s10, 32(sp)
   4f24c:	1e 30 00 88 	store_32 s0, 12(sp)
   4f250:	68 12 00 f8 	call 18848 <sbrk>
   4f254:	00 fc ff 10 	cmpeq_i s0, s0, -1
   4f258:	e0 1e 00 f4 	bnz s0, 988 <malloc+0x1180>
   4f25c:	3e 51 00 a8 	load_32 s9, 20(sp)
   4f260:	1e 30 00 a8 	load_32 s0, 12(sp)
   4f264:	3e 63 00 a8 	load_32 s25, 24(sp)
   4f268:	5e 81 00 a8 	load_32 s10, 32(sp)
   4f26c:	9e 70 00 a8 	load_32 s4, 28(sp)
   4f270:	20 81 54 c0 	add_i s9, s0, s9
   4f274:	fc 00 00 f6 	b 1008 <malloc+0x11b0>
   4f278:	42 00 02 c0 	or s2, s2, s4
   4f27c:	58 00 00 88 	store_32 s2, (s24)
   4f280:	40 80 f0 c0 	move s2, s1
   4f284:	61 20 00 88 	store_32 s3, 8(s1)
   4f288:	60 23 00 05 	add_i s27, s0, 8
   4f28c:	62 30 00 88 	store_32 s3, 12(s2)
   4f290:	43 20 00 88 	store_32 s2, 8(s3)
   4f294:	23 30 00 88 	store_32 s1, 12(s3)
   4f298:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4f29c:	00 08 00 01 	and s0, s0, 2
   4f2a0:	20 e0 ff f3 	bz s0, -1020 <malloc+0x9f0>
   4f2a4:	fa fe ff f7 	b -1048 <malloc+0x9d8>
   4f2a8:	9e 70 00 a8 	load_32 s4, 28(sp)
   4f2ac:	de 40 00 a8 	load_32 s6, 16(sp)
   4f2b0:	e8 00 00 f6 	b 928 <malloc+0x119c>
   4f2b4:	bf 0c 00 4f 	movehi s5, 127
   4f2b8:	ff 04 00 4f 	movehi s7, 63
   4f2bc:	1e 01 00 4f 	movehi s8, 30
   4f2c0:	a5 00 7c 00 	or s5, s5, 7936
   4f2c4:	a6 80 52 c0 	add_i s5, s6, s5
   4f2c8:	e7 00 40 00 	or s7, s7, 4096
   4f2cc:	a5 40 00 0a 	shr s5, s5, 16
   4f2d0:	a5 20 00 01 	and s5, s5, 8
   4f2d4:	c6 80 b2 c0 	shl s6, s6, s5
   4f2d8:	e6 80 53 c0 	add_i s7, s6, s7
   4f2dc:	e7 40 00 0a 	shr s7, s7, 16
   4f2e0:	e7 10 00 01 	and s7, s7, 4
   4f2e4:	c6 80 b3 c0 	shl s6, s6, s7
   4f2e8:	a7 80 02 c0 	or s5, s7, s5
   4f2ec:	06 01 54 c0 	add_i s8, s6, s8
   4f2f0:	08 41 00 0a 	shr s8, s8, 16
   4f2f4:	e8 08 00 01 	and s7, s8, 2
   4f2f8:	00 39 00 0f 	move s8, 14
   4f2fc:	a5 80 03 c0 	or s5, s5, s7
   4f300:	c6 80 b3 c0 	shl s6, s6, s7
   4f304:	a8 80 62 c0 	sub_i s5, s8, s5
   4f308:	c6 3c 00 0a 	shr s6, s6, 15
   4f30c:	a5 00 53 c0 	add_i s5, s5, s6
   4f310:	c5 1c 00 05 	add_i s6, s5, 7
   4f314:	c2 00 a3 c0 	shr s6, s2, s6
   4f318:	a5 04 00 0b 	shl s5, s5, 1
   4f31c:	c6 04 00 01 	and s6, s6, 1
   4f320:	a6 80 02 c0 	or s5, s6, s5
   4f324:	c5 08 00 0b 	shl s6, s5, 2
   4f328:	a3 70 00 88 	store_32 s5, 28(s3)
   4f32c:	e0 04 00 0f 	move s7, 1
   4f330:	83 50 00 88 	store_32 s4, 20(s3)
   4f334:	d8 00 53 c0 	add_i s6, s24, s6
   4f338:	83 40 00 88 	store_32 s4, 16(s3)
   4f33c:	e7 80 b2 c0 	shl s7, s7, s5
   4f340:	c6 c0 04 05 	add_i s6, s6, 304
   4f344:	01 81 13 c0 	and s8, s1, s7
   4f348:	48 00 00 f4 	bnz s8, 8 <malloc+0xe9c>
   4f34c:	08 00 00 f6 	b 32 <malloc+0xeb8>
   4f350:	86 00 00 a8 	load_32 s4, (s6)
   4f354:	25 7c 00 10 	cmpeq_i s1, s5, 31
   4f358:	41 01 00 f4 	bnz s1, 40 <malloc+0xecc>
   4f35c:	20 64 00 0f 	move s1, 25
   4f360:	a5 04 00 0a 	shr s5, s5, 1
   4f364:	21 80 62 c0 	sub_i s1, s1, s5
   4f368:	07 00 00 f6 	b 28 <malloc+0xed0>
   4f36c:	21 80 03 c0 	or s1, s1, s7
   4f370:	38 10 00 88 	store_32 s1, 4(s24)
   4f374:	66 00 00 88 	store_32 s3, (s6)
   4f378:	c3 60 00 88 	store_32 s6, 24(s3)
   4f37c:	14 00 00 f6 	b 80 <malloc+0xf18>
   4f380:	20 00 00 0f 	move s1, 0
   4f384:	a2 80 b0 c0 	shl s5, s2, s1
   4f388:	20 00 f2 c0 	move s1, s4
   4f38c:	81 10 00 a8 	load_32 s4, 4(s1)
   4f390:	84 e0 ff 01 	and s4, s4, -8
   4f394:	84 00 01 c1 	cmpeq_i s4, s4, s2
   4f398:	84 02 00 f4 	bnz s4, 80 <malloc+0xf34>
   4f39c:	85 74 00 0a 	shr s4, s5, 29
   4f3a0:	a5 04 00 0b 	shl s5, s5, 1
   4f3a4:	84 10 00 01 	and s4, s4, 4
   4f3a8:	c1 00 52 c0 	add_i s6, s1, s4
   4f3ac:	86 40 00 a8 	load_32 s4, 16(s6)
   4f3b0:	c4 fe ff f5 	bnz s4, -40 <malloc+0xed4>
   4f3b4:	98 40 00 a8 	load_32 s4, 16(s24)
   4f3b8:	46 40 00 05 	add_i s2, s6, 16
   4f3bc:	84 00 61 c1 	cmpgt_u s4, s4, s2
   4f3c0:	c4 78 00 f4 	bnz s4, 3864 <malloc+0x1e24>
   4f3c4:	62 00 00 88 	store_32 s3, (s2)
   4f3c8:	23 60 00 88 	store_32 s1, 24(s3)
   4f3cc:	63 30 00 88 	store_32 s3, 12(s3)
   4f3d0:	60 23 00 05 	add_i s27, s0, 8
   4f3d4:	63 20 00 88 	store_32 s3, 8(s3)
   4f3d8:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4f3dc:	00 08 00 01 	and s0, s0, 2
   4f3e0:	20 d6 ff f3 	bz s0, -1340 <malloc+0x9f0>
   4f3e4:	aa fe ff f7 	b -1368 <malloc+0x9d8>
   4f3e8:	41 20 00 a8 	load_32 s2, 8(s1)
   4f3ec:	98 40 00 a8 	load_32 s4, 16(s24)
   4f3f0:	a4 00 61 c1 	cmpgt_u s5, s4, s2
   4f3f4:	25 77 00 f4 	bnz s5, 3812 <malloc+0x1e24>
   4f3f8:	84 80 60 c1 	cmpgt_u s4, s4, s1
   4f3fc:	e4 76 00 f4 	bnz s4, 3804 <malloc+0x1e24>
   4f400:	62 30 00 88 	store_32 s3, 12(s2)
   4f404:	60 23 00 05 	add_i s27, s0, 8
   4f408:	61 20 00 88 	store_32 s3, 8(s1)
   4f40c:	43 20 00 88 	store_32 s2, 8(s3)
   4f410:	23 30 00 88 	store_32 s1, 12(s3)
   4f414:	20 00 00 0f 	move s1, 0
   4f418:	23 60 00 88 	store_32 s1, 24(s3)
   4f41c:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4f420:	00 08 00 01 	and s0, s0, 2
   4f424:	00 d4 ff f3 	bz s0, -1408 <malloc+0x9f0>
   4f428:	99 fe ff f7 	b -1436 <malloc+0x9d8>
   4f42c:	42 41 00 a8 	load_32 s10, 16(s2)
   4f430:	4a 0f 00 f2 	bz s10, 488 <malloc+0x1164>
   4f434:	62 41 00 05 	add_i s11, s2, 16
   4f438:	00 01 f5 c0 	move s8, s10
   4f43c:	48 51 00 a8 	load_32 s10, 20(s8)
   4f440:	80 81 f5 c0 	move s12, s11
   4f444:	68 51 00 05 	add_i s11, s8, 20
   4f448:	8a ff ff f5 	bnz s10, -16 <malloc+0xf84>
   4f44c:	48 41 00 a8 	load_32 s10, 16(s8)
   4f450:	68 41 00 05 	add_i s11, s8, 16
   4f454:	2a ff ff f5 	bnz s10, -28 <malloc+0xf84>
   4f458:	29 01 66 c1 	cmpgt_u s9, s9, s12
   4f45c:	e9 73 00 f4 	bnz s9, 3708 <malloc+0x1e24>
   4f460:	cc 00 00 88 	store_32 s6, (s12)
   4f464:	27 09 00 f2 	bz s7, 292 <malloc+0x10d4>
   4f468:	c2 70 00 a8 	load_32 s6, 28(s2)
   4f46c:	26 09 00 0b 	shl s9, s6, 2
   4f470:	38 81 54 c0 	add_i s9, s24, s9
   4f474:	49 c1 04 a8 	load_32 s10, 304(s9)
   4f478:	42 01 15 c1 	cmpne_i s10, s2, s10
   4f47c:	4a 00 00 f4 	bnz s10, 8 <malloc+0xfd0>
   4f480:	0c 00 00 f6 	b 48 <malloc+0xffc>
   4f484:	b8 40 00 a8 	load_32 s5, 16(s24)
   4f488:	a5 80 63 c1 	cmpgt_u s5, s5, s7
   4f48c:	65 72 00 f4 	bnz s5, 3660 <malloc+0x1e24>
   4f490:	a7 40 00 a8 	load_32 s5, 16(s7)
   4f494:	a5 00 01 c1 	cmpeq_i s5, s5, s2
   4f498:	e5 04 00 f4 	bnz s5, 156 <malloc+0x1080>
   4f49c:	a0 50 00 0f 	move s5, 20
   4f4a0:	a7 80 52 c0 	add_i s5, s7, s5
   4f4a4:	05 01 00 88 	store_32 s8, (s5)
   4f4a8:	08 07 00 f2 	bz s8, 224 <malloc+0x10d4>
   4f4ac:	26 00 00 f6 	b 152 <malloc+0x1090>
   4f4b0:	29 c1 04 05 	add_i s9, s9, 304
   4f4b4:	09 01 00 88 	store_32 s8, (s9)
   4f4b8:	68 04 00 f4 	bnz s8, 140 <malloc+0x1090>
   4f4bc:	e0 04 00 0f 	move s7, 1
   4f4c0:	c7 00 b3 c0 	shl s6, s7, s6
   4f4c4:	c6 fc ff 03 	xor s6, s6, -1
   4f4c8:	a5 00 13 c0 	and s5, s5, s6
   4f4cc:	b8 10 00 88 	store_32 s5, 4(s24)
   4f4d0:	a3 3c 00 16 	cmpgt_u s5, s3, 15
   4f4d4:	45 00 00 f4 	bnz s5, 8 <malloc+0x1028>
   4f4d8:	2e 00 00 f6 	b 184 <malloc+0x10dc>
   4f4dc:	ba 0c 00 00 	or s5, s26, 3
   4f4e0:	a2 10 00 88 	store_32 s5, 4(s2)
   4f4e4:	a4 80 51 c0 	add_i s5, s4, s3
   4f4e8:	c3 04 00 00 	or s6, s3, 1
   4f4ec:	c4 10 00 88 	store_32 s6, 4(s4)
   4f4f0:	65 00 00 88 	store_32 s3, (s5)
   4f4f4:	a1 07 00 f2 	bz s1, 244 <malloc+0x1134>
   4f4f8:	21 0c 00 0a 	shr s1, s1, 3
   4f4fc:	a0 04 00 0f 	move s5, 1
   4f500:	e1 0c 00 0b 	shl s7, s1, 3
   4f504:	c5 80 b0 c0 	shl s6, s5, s1
   4f508:	38 50 00 a8 	load_32 s1, 20(s24)
   4f50c:	b8 80 53 c0 	add_i s5, s24, s7
   4f510:	e6 00 10 c0 	and s7, s6, s0
   4f514:	a5 a0 00 05 	add_i s5, s5, 40
   4f518:	47 00 00 f4 	bnz s7, 8 <malloc+0x106c>
   4f51c:	2c 00 00 f6 	b 176 <malloc+0x1118>
   4f520:	05 20 00 a8 	load_32 s0, 8(s5)
   4f524:	d8 40 00 a8 	load_32 s6, 16(s24)
   4f528:	c6 00 90 c1 	cmple_u s6, s6, s0
   4f52c:	66 05 00 f4 	bnz s6, 172 <malloc+0x1124>
   4f530:	6a 03 00 f6 	b 3496 <malloc+0x1e24>
   4f534:	a0 40 00 0f 	move s5, 16
   4f538:	a7 80 52 c0 	add_i s5, s7, s5
   4f53c:	05 01 00 88 	store_32 s8, (s5)
   4f540:	48 02 00 f2 	bz s8, 72 <malloc+0x10d4>
   4f544:	b8 40 00 a8 	load_32 s5, 16(s24)
   4f548:	c5 00 64 c1 	cmpgt_u s6, s5, s8
   4f54c:	66 6c 00 f4 	bnz s6, 3468 <malloc+0x1e24>
   4f550:	e8 60 00 88 	store_32 s7, 24(s8)
   4f554:	c2 40 00 a8 	load_32 s6, 16(s2)
   4f558:	a6 00 00 f2 	bz s6, 20 <malloc+0x10b8>
   4f55c:	a5 00 63 c1 	cmpgt_u s5, s5, s6
   4f560:	c5 6b 00 f4 	bnz s5, 3448 <malloc+0x1e24>
   4f564:	c8 40 00 88 	store_32 s6, 16(s8)
   4f568:	06 61 00 88 	store_32 s8, 24(s6)
   4f56c:	a2 50 00 a8 	load_32 s5, 20(s2)
   4f570:	c5 00 00 f2 	bz s5, 24 <malloc+0x10d4>
   4f574:	d8 40 00 a8 	load_32 s6, 16(s24)
   4f578:	c6 80 62 c1 	cmpgt_u s6, s6, s5
   4f57c:	e6 6a 00 f4 	bnz s6, 3420 <malloc+0x1e24>
   4f580:	a8 50 00 88 	store_32 s5, 20(s8)
   4f584:	05 61 00 88 	store_32 s8, 24(s5)
   4f588:	a3 3c 00 16 	cmpgt_u s5, s3, 15
   4f58c:	85 fa ff f5 	bnz s5, -176 <malloc+0x1028>
   4f590:	03 00 5d c0 	add_i s0, s3, s26
   4f594:	22 00 50 c0 	add_i s1, s2, s0
   4f598:	62 23 00 05 	add_i s27, s2, 8
   4f59c:	00 0c 00 00 	or s0, s0, 3
   4f5a0:	02 10 00 88 	store_32 s0, 4(s2)
   4f5a4:	01 10 00 a8 	load_32 s0, 4(s1)
   4f5a8:	00 04 00 00 	or s0, s0, 1
   4f5ac:	01 10 00 88 	store_32 s0, 4(s1)
   4f5b0:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4f5b4:	00 08 00 01 	and s0, s0, 2
   4f5b8:	60 c7 ff f3 	bz s0, -1812 <malloc+0x9f0>
   4f5bc:	34 fe ff f7 	b -1840 <malloc+0x9d8>
   4f5c0:	0a fc ff 11 	cmpne_i s0, s10, -1
   4f5c4:	00 05 00 f4 	bnz s0, 160 <malloc+0x11b0>
   4f5c8:	22 00 00 f6 	b 136 <malloc+0x119c>
   4f5cc:	06 00 00 c0 	or s0, s6, s0
   4f5d0:	18 00 00 88 	store_32 s0, (s24)
   4f5d4:	00 80 f2 c0 	move s0, s5
   4f5d8:	25 20 00 88 	store_32 s1, 8(s5)
   4f5dc:	20 30 00 88 	store_32 s1, 12(s0)
   4f5e0:	01 20 00 88 	store_32 s0, 8(s1)
   4f5e4:	a1 30 00 88 	store_32 s5, 12(s1)
   4f5e8:	78 20 00 88 	store_32 s3, 8(s24)
   4f5ec:	62 23 00 05 	add_i s27, s2, 8
   4f5f0:	98 50 00 88 	store_32 s4, 20(s24)
   4f5f4:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4f5f8:	00 08 00 01 	and s0, s0, 2
   4f5fc:	40 c5 ff f3 	bz s0, -1880 <malloc+0x9f0>
   4f600:	23 fe ff f7 	b -1908 <malloc+0x9d8>
   4f604:	a0 00 00 0f 	move s5, 0
   4f608:	04 d3 ff f3 	bz s4, -1440 <malloc+0xbb4>
   4f60c:	43 fe ff f7 	b -1780 <malloc+0xa64>
   4f610:	3e 63 00 a8 	load_32 s25, 24(sp)
   4f614:	14 00 00 f6 	b 80 <malloc+0x11b0>
   4f618:	00 01 f3 c0 	move s8, s6
   4f61c:	67 fb ff f3 	bz s7, -148 <malloc+0x10d4>
   4f620:	92 ff ff f7 	b -440 <malloc+0xfb4>
   4f624:	40 81 f0 c0 	move s10, s1
   4f628:	3e 51 00 a8 	load_32 s9, 20(sp)
   4f62c:	9e 70 00 a8 	load_32 s4, 28(sp)
   4f630:	0d 00 00 f6 	b 52 <malloc+0x11b0>
   4f634:	1e 50 00 a8 	load_32 s0, 20(sp)
   4f638:	3e 40 00 a8 	load_32 s1, 16(sp)
   4f63c:	01 00 60 c0 	sub_i s0, s1, s0
   4f640:	6c 11 00 f8 	call 17840 <sbrk>
   4f644:	c0 80 fc c0 	move s6, s25
   4f648:	3e 63 00 a8 	load_32 s25, 24(sp)
   4f64c:	9e 70 00 a8 	load_32 s4, 28(sp)
   4f650:	18 f0 06 a8 	load_32 s0, 444(s24)
   4f654:	40 fd ff 0f 	move s10, -1
   4f658:	00 10 00 00 	or s0, s0, 4
   4f65c:	18 f0 06 88 	store_32 s0, 444(s24)
   4f660:	20 01 f3 c0 	move s9, s6
   4f664:	00 00 00 0f 	move s0, 0
   4f668:	3b 00 00 aa 	load_sync s1, (s27)
   4f66c:	20 00 f0 c0 	move s1, s0
   4f670:	3b 00 00 8a 	store_sync s1, (s27)  
   4f674:	a1 ff ff f3 	bz s1, -12 <malloc+0x11b4>
   4f678:	1f fc 7f 4f 	movehi s0, 262143
   4f67c:	00 f8 7f 00 	or s0, s0, 8190
   4f680:	04 00 60 c1 	cmpgt_u s0, s4, s0
   4f684:	40 05 00 f4 	bnz s0, 168 <malloc+0x1278>
   4f688:	0a fc ff 11 	cmpne_i s0, s10, -1
   4f68c:	00 05 00 f4 	bnz s0, 160 <malloc+0x1278>
   4f690:	0c 04 00 4f 	movehi s0, 44
   4f694:	3e 63 00 88 	store_32 s25, 24(sp)
   4f698:	20 23 0d 00 	or s25, s0, 840
   4f69c:	00 04 00 0f 	move s0, 1
   4f6a0:	39 00 00 aa 	load_sync s1, (s25)
   4f6a4:	40 00 f0 c0 	move s2, s0
   4f6a8:	59 00 00 8a 	store_sync s2, (s25)  
   4f6ac:	a2 ff ff f3 	bz s2, -12 <malloc+0x11ec>
   4f6b0:	01 01 00 f2 	bz s1, 32 <malloc+0x121c>
   4f6b4:	39 00 00 a8 	load_32 s1, (s25)
   4f6b8:	e1 ff ff f5 	bnz s1, -4 <malloc+0x1200>
   4f6bc:	39 00 00 aa 	load_sync s1, (s25)
   4f6c0:	40 00 f0 c0 	move s2, s0
   4f6c4:	59 00 00 8a 	store_sync s2, (s25)  
   4f6c8:	a2 ff ff f3 	bz s2, -12 <malloc+0x1208>
   4f6cc:	41 ff ff f5 	bnz s1, -24 <malloc+0x1200>
   4f6d0:	00 00 f2 c0 	move s0, s4
   4f6d4:	47 11 00 f8 	call 17692 <sbrk>
   4f6d8:	60 03 00 0f 	move s27, 0
   4f6dc:	1e 80 00 88 	store_32 s0, 32(sp)
   4f6e0:	00 80 fd c0 	move s0, s27
   4f6e4:	43 11 00 f8 	call 17676 <sbrk>
   4f6e8:	39 00 00 aa 	load_sync s1, (s25)
   4f6ec:	20 80 fd c0 	move s1, s27
   4f6f0:	39 00 00 8a 	store_sync s1, (s25)  
   4f6f4:	a1 ff ff f3 	bz s1, -12 <malloc+0x1234>
   4f6f8:	5e 81 00 a8 	load_32 s10, 32(sp)
   4f6fc:	2a 00 70 c1 	cmpge_u s1, s10, s0
   4f700:	01 bc ff f5 	bnz s1, -2176 <malloc+0x9cc>
   4f704:	2a fc ff 10 	cmpeq_i s1, s10, -1
   4f708:	c1 bb ff f5 	bnz s1, -2184 <malloc+0x9cc>
   4f70c:	20 fc ff 10 	cmpeq_i s1, s0, -1
   4f710:	81 bb ff f5 	bnz s1, -2192 <malloc+0x9cc>
   4f714:	20 01 65 c0 	sub_i s9, s0, s10
   4f718:	3e 63 00 a8 	load_32 s25, 24(sp)
   4f71c:	1a a0 00 05 	add_i s0, s26, 40
   4f720:	09 00 60 c1 	cmpgt_u s0, s9, s0
   4f724:	80 00 00 f4 	bnz s0, 16 <malloc+0x1280>
   4f728:	d6 fd ff f7 	b -2216 <malloc+0x9cc>
   4f72c:	0a fc ff 10 	cmpeq_i s0, s10, -1
   4f730:	80 3b 00 f4 	bnz s0, 1904 <malloc+0x19ec>
   4f734:	18 c0 06 a8 	load_32 s0, 432(s24)
   4f738:	00 80 54 c0 	add_i s0, s0, s9
   4f73c:	18 c0 06 88 	store_32 s0, 432(s24)
   4f740:	38 d0 06 a8 	load_32 s1, 436(s24)
   4f744:	20 80 90 c1 	cmple_u s1, s0, s1
   4f748:	41 00 00 f4 	bnz s1, 8 <malloc+0x129c>
   4f74c:	18 d0 06 88 	store_32 s0, 436(s24)
   4f750:	58 60 00 a8 	load_32 s2, 24(s24)
   4f754:	42 01 00 f2 	bz s2, 40 <malloc+0x12c8>
   4f758:	18 10 07 05 	add_i s0, s24, 452
   4f75c:	60 00 00 a8 	load_32 s3, (s0)
   4f760:	20 10 00 a8 	load_32 s1, 4(s0)
   4f764:	83 80 50 c0 	add_i s4, s3, s1
   4f768:	8a 00 02 c1 	cmpeq_i s4, s10, s4
   4f76c:	04 11 00 f4 	bnz s4, 544 <malloc+0x14d8>
   4f770:	00 20 00 a8 	load_32 s0, 8(s0)
   4f774:	20 13 00 f2 	bz s0, 612 <malloc+0x1524>
   4f778:	f9 ff ff f7 	b -28 <malloc+0x12a8>
   4f77c:	18 40 00 a8 	load_32 s0, 16(s24)
   4f780:	60 00 00 f2 	bz s0, 12 <malloc+0x12d8>
   4f784:	0a 00 70 c1 	cmpge_u s0, s10, s0
   4f788:	40 00 00 f4 	bnz s0, 8 <malloc+0x12dc>
   4f78c:	58 41 00 88 	store_32 s10, 16(s24)
   4f790:	58 11 07 88 	store_32 s10, 452(s24)
   4f794:	00 00 00 0f 	move s0, 0
   4f798:	38 21 07 88 	store_32 s9, 456(s24)
   4f79c:	4a 20 00 05 	add_i s2, s10, 8
   4f7a0:	18 40 07 88 	store_32 s0, 464(s24)
   4f7a4:	39 00 00 a8 	load_32 s1, (s25)
   4f7a8:	38 90 00 88 	store_32 s1, 36(s24)
   4f7ac:	20 fc ff 0f 	move s1, -1
   4f7b0:	38 80 00 88 	store_32 s1, 32(s24)
   4f7b4:	38 a0 00 05 	add_i s1, s24, 40
   4f7b8:	38 d0 00 88 	store_32 s1, 52(s24)
   4f7bc:	42 1c 00 01 	and s2, s2, 7
   4f7c0:	38 c0 00 88 	store_32 s1, 48(s24)
   4f7c4:	38 c0 00 05 	add_i s1, s24, 48
   4f7c8:	38 f0 00 88 	store_32 s1, 60(s24)
   4f7cc:	38 e0 00 88 	store_32 s1, 56(s24)
   4f7d0:	38 e0 00 05 	add_i s1, s24, 56
   4f7d4:	38 10 01 88 	store_32 s1, 68(s24)
   4f7d8:	42 00 00 10 	cmpeq_i s2, s2, 0
   4f7dc:	38 00 01 88 	store_32 s1, 64(s24)
   4f7e0:	38 00 01 05 	add_i s1, s24, 64
   4f7e4:	38 30 01 88 	store_32 s1, 76(s24)
   4f7e8:	38 20 01 88 	store_32 s1, 72(s24)
   4f7ec:	38 20 01 05 	add_i s1, s24, 72
   4f7f0:	38 50 01 88 	store_32 s1, 84(s24)
   4f7f4:	38 40 01 88 	store_32 s1, 80(s24)
   4f7f8:	38 40 01 05 	add_i s1, s24, 80
   4f7fc:	38 70 01 88 	store_32 s1, 92(s24)
   4f800:	38 60 01 88 	store_32 s1, 88(s24)
   4f804:	38 60 01 05 	add_i s1, s24, 88
   4f808:	38 90 01 88 	store_32 s1, 100(s24)
   4f80c:	38 80 01 88 	store_32 s1, 96(s24)
   4f810:	38 80 01 05 	add_i s1, s24, 96
   4f814:	38 b0 01 88 	store_32 s1, 108(s24)
   4f818:	38 a0 01 88 	store_32 s1, 104(s24)
   4f81c:	38 a0 01 05 	add_i s1, s24, 104
   4f820:	38 d0 01 88 	store_32 s1, 116(s24)
   4f824:	38 c0 01 88 	store_32 s1, 112(s24)
   4f828:	38 c0 01 05 	add_i s1, s24, 112
   4f82c:	38 f0 01 88 	store_32 s1, 124(s24)
   4f830:	38 e0 01 88 	store_32 s1, 120(s24)
   4f834:	38 e0 01 05 	add_i s1, s24, 120
   4f838:	38 10 02 88 	store_32 s1, 132(s24)
   4f83c:	38 00 02 88 	store_32 s1, 128(s24)
   4f840:	38 00 02 05 	add_i s1, s24, 128
   4f844:	38 30 02 88 	store_32 s1, 140(s24)
   4f848:	38 20 02 88 	store_32 s1, 136(s24)
   4f84c:	38 20 02 05 	add_i s1, s24, 136
   4f850:	38 50 02 88 	store_32 s1, 148(s24)
   4f854:	38 40 02 88 	store_32 s1, 144(s24)
   4f858:	38 40 02 05 	add_i s1, s24, 144
   4f85c:	38 70 02 88 	store_32 s1, 156(s24)
   4f860:	38 60 02 88 	store_32 s1, 152(s24)
   4f864:	38 60 02 05 	add_i s1, s24, 152
   4f868:	38 90 02 88 	store_32 s1, 164(s24)
   4f86c:	38 80 02 88 	store_32 s1, 160(s24)
   4f870:	38 80 02 05 	add_i s1, s24, 160
   4f874:	38 b0 02 88 	store_32 s1, 172(s24)
   4f878:	38 a0 02 88 	store_32 s1, 168(s24)
   4f87c:	38 a0 02 05 	add_i s1, s24, 168
   4f880:	38 d0 02 88 	store_32 s1, 180(s24)
   4f884:	38 c0 02 88 	store_32 s1, 176(s24)
   4f888:	38 c0 02 05 	add_i s1, s24, 176
   4f88c:	38 f0 02 88 	store_32 s1, 188(s24)
   4f890:	38 e0 02 88 	store_32 s1, 184(s24)
   4f894:	38 e0 02 05 	add_i s1, s24, 184
   4f898:	38 10 03 88 	store_32 s1, 196(s24)
   4f89c:	38 00 03 88 	store_32 s1, 192(s24)
   4f8a0:	38 00 03 05 	add_i s1, s24, 192
   4f8a4:	38 30 03 88 	store_32 s1, 204(s24)
   4f8a8:	38 20 03 88 	store_32 s1, 200(s24)
   4f8ac:	38 20 03 05 	add_i s1, s24, 200
   4f8b0:	38 50 03 88 	store_32 s1, 212(s24)
   4f8b4:	38 40 03 88 	store_32 s1, 208(s24)
   4f8b8:	38 40 03 05 	add_i s1, s24, 208
   4f8bc:	38 70 03 88 	store_32 s1, 220(s24)
   4f8c0:	38 60 03 88 	store_32 s1, 216(s24)
   4f8c4:	38 60 03 05 	add_i s1, s24, 216
   4f8c8:	38 90 03 88 	store_32 s1, 228(s24)
   4f8cc:	38 80 03 88 	store_32 s1, 224(s24)
   4f8d0:	38 80 03 05 	add_i s1, s24, 224
   4f8d4:	38 b0 03 88 	store_32 s1, 236(s24)
   4f8d8:	38 a0 03 88 	store_32 s1, 232(s24)
   4f8dc:	38 a0 03 05 	add_i s1, s24, 232
   4f8e0:	38 d0 03 88 	store_32 s1, 244(s24)
   4f8e4:	38 c0 03 88 	store_32 s1, 240(s24)
   4f8e8:	38 c0 03 05 	add_i s1, s24, 240
   4f8ec:	38 f0 03 88 	store_32 s1, 252(s24)
   4f8f0:	38 e0 03 88 	store_32 s1, 248(s24)
   4f8f4:	38 e0 03 05 	add_i s1, s24, 248
   4f8f8:	38 10 04 88 	store_32 s1, 260(s24)
   4f8fc:	38 00 04 88 	store_32 s1, 256(s24)
   4f900:	38 00 04 05 	add_i s1, s24, 256
   4f904:	38 30 04 88 	store_32 s1, 268(s24)
   4f908:	38 20 04 88 	store_32 s1, 264(s24)
   4f90c:	38 20 04 05 	add_i s1, s24, 264
   4f910:	38 50 04 88 	store_32 s1, 276(s24)
   4f914:	38 40 04 88 	store_32 s1, 272(s24)
   4f918:	38 40 04 05 	add_i s1, s24, 272
   4f91c:	38 70 04 88 	store_32 s1, 284(s24)
   4f920:	38 60 04 88 	store_32 s1, 280(s24)
   4f924:	38 60 04 05 	add_i s1, s24, 280
   4f928:	38 90 04 88 	store_32 s1, 292(s24)
   4f92c:	38 80 04 88 	store_32 s1, 288(s24)
   4f930:	38 80 04 05 	add_i s1, s24, 288
   4f934:	38 b0 04 88 	store_32 s1, 300(s24)
   4f938:	38 a0 04 88 	store_32 s1, 296(s24)
   4f93c:	29 60 ff 05 	add_i s1, s9, -40
   4f940:	82 00 00 f4 	bnz s2, 16 <malloc+0x149c>
   4f944:	00 e0 ff 0f 	move s0, -8
   4f948:	00 00 65 c0 	sub_i s0, s0, s10
   4f94c:	00 1c 00 01 	and s0, s0, 7
   4f950:	4a 00 50 c0 	add_i s2, s10, s0
   4f954:	58 60 00 88 	store_32 s2, 24(s24)
   4f958:	01 00 60 c0 	sub_i s0, s1, s0
   4f95c:	18 30 00 88 	store_32 s0, 12(s24)
   4f960:	2a 80 50 c0 	add_i s1, s10, s1
   4f964:	00 04 00 00 	or s0, s0, 1
   4f968:	02 10 00 88 	store_32 s0, 4(s2)
   4f96c:	00 a0 00 0f 	move s0, 40
   4f970:	01 10 00 88 	store_32 s0, 4(s1)
   4f974:	19 40 00 a8 	load_32 s0, 16(s25)
   4f978:	18 70 00 88 	store_32 s0, 28(s24)
   4f97c:	18 30 00 a8 	load_32 s0, 12(s24)
   4f980:	20 00 9d c1 	cmple_u s1, s0, s26
   4f984:	e1 28 00 f4 	bnz s1, 1308 <malloc+0x19ec>
   4f988:	92 fc ff f7 	b -3512 <malloc+0x71c>
   4f98c:	80 30 00 a0 	load_u8 s4, 12(s0)
   4f990:	84 20 00 01 	and s4, s4, 8
   4f994:	24 02 00 f4 	bnz s4, 68 <malloc+0x1524>
   4f998:	8a 00 91 c1 	cmple_u s4, s10, s2
   4f99c:	e4 01 00 f4 	bnz s4, 60 <malloc+0x1524>
   4f9a0:	63 00 61 c1 	cmpgt_u s3, s3, s2
   4f9a4:	a3 01 00 f4 	bnz s3, 52 <malloc+0x1524>
   4f9a8:	62 20 00 05 	add_i s3, s2, 8
   4f9ac:	21 80 54 c0 	add_i s1, s1, s9
   4f9b0:	20 10 00 88 	store_32 s1, 4(s0)
   4f9b4:	18 30 00 a8 	load_32 s0, 12(s24)
   4f9b8:	23 1c 00 01 	and s1, s3, 7
   4f9bc:	21 00 00 10 	cmpeq_i s1, s1, 0
   4f9c0:	00 80 54 c0 	add_i s0, s0, s9
   4f9c4:	81 27 00 f4 	bnz s1, 1264 <malloc+0x1a00>
   4f9c8:	20 e0 ff 0f 	move s1, -8
   4f9cc:	21 00 61 c0 	sub_i s1, s1, s2
   4f9d0:	21 1c 00 01 	and s1, s1, 7
   4f9d4:	39 01 00 f6 	b 1252 <malloc+0x1a04>
   4f9d8:	b8 40 00 a8 	load_32 s5, 16(s24)
   4f9dc:	0a 80 72 c1 	cmpge_u s0, s10, s5
   4f9e0:	60 00 00 f4 	bnz s0, 12 <malloc+0x1538>
   4f9e4:	58 41 00 88 	store_32 s10, 16(s24)
   4f9e8:	a0 00 f5 c0 	move s5, s10
   4f9ec:	2a 80 54 c0 	add_i s1, s10, s9
   4f9f0:	18 10 07 05 	add_i s0, s24, 452
   4f9f4:	60 00 00 a8 	load_32 s3, (s0)
   4f9f8:	63 80 00 c1 	cmpeq_i s3, s3, s1
   4f9fc:	83 00 00 f4 	bnz s3, 16 <malloc+0x1558>
   4fa00:	00 20 00 a8 	load_32 s0, 8(s0)
   4fa04:	e0 08 00 f2 	bz s0, 284 <malloc+0x166c>
   4fa08:	fb ff ff f7 	b -20 <malloc+0x1540>
   4fa0c:	60 30 00 a0 	load_u8 s3, 12(s0)
   4fa10:	63 20 00 01 	and s3, s3, 8
   4fa14:	43 00 00 f2 	bz s3, 8 <malloc+0x1568>
   4fa18:	42 00 00 f6 	b 264 <malloc+0x166c>
   4fa1c:	40 01 00 88 	store_32 s10, (s0)
   4fa20:	8a 20 00 05 	add_i s4, s10, 8
   4fa24:	60 10 00 a8 	load_32 s3, 4(s0)
   4fa28:	84 1c 00 01 	and s4, s4, 7
   4fa2c:	63 80 54 c0 	add_i s3, s3, s9
   4fa30:	60 10 00 88 	store_32 s3, 4(s0)
   4fa34:	60 00 00 0f 	move s3, 0
   4fa38:	c4 00 00 10 	cmpeq_i s6, s4, 0
   4fa3c:	80 e0 ff 0f 	move s4, -8
   4fa40:	00 80 f1 c0 	move s0, s3
   4fa44:	66 00 00 f4 	bnz s6, 12 <malloc+0x159c>
   4fa48:	04 00 65 c0 	sub_i s0, s4, s10
   4fa4c:	00 1c 00 01 	and s0, s0, 7
   4fa50:	c1 20 00 05 	add_i s6, s1, 8
   4fa54:	0a 00 50 c0 	add_i s0, s10, s0
   4fa58:	c6 1c 00 01 	and s6, s6, 7
   4fa5c:	c6 00 00 10 	cmpeq_i s6, s6, 0
   4fa60:	66 00 00 f4 	bnz s6, 12 <malloc+0x15b8>
   4fa64:	64 80 60 c0 	sub_i s3, s4, s1
   4fa68:	63 1c 00 01 	and s3, s3, 7
   4fa6c:	81 80 51 c0 	add_i s4, s1, s3
   4fa70:	20 00 5d c0 	add_i s1, s0, s26
   4fa74:	42 00 12 c1 	cmpne_i s2, s2, s4
   4fa78:	64 00 60 c0 	sub_i s3, s4, s0
   4fa7c:	da 0c 00 00 	or s6, s26, 3
   4fa80:	c0 10 00 88 	store_32 s6, 4(s0)
   4fa84:	63 00 6d c0 	sub_i s3, s3, s26
   4fa88:	42 00 00 f4 	bnz s2, 8 <malloc+0x15dc>
   4fa8c:	93 00 00 f6 	b 588 <malloc+0x1824>
   4fa90:	58 50 00 a8 	load_32 s2, 20(s24)
   4fa94:	42 00 12 c1 	cmpne_i s2, s2, s4
   4fa98:	42 00 00 f4 	bnz s2, 8 <malloc+0x15ec>
   4fa9c:	11 01 00 f6 	b 1092 <malloc+0x1a2c>
   4faa0:	44 10 00 a8 	load_32 s2, 4(s4)
   4faa4:	c2 0c 00 01 	and s6, s2, 3
   4faa8:	c6 04 00 11 	cmpne_i s6, s6, 1
   4faac:	66 2f 00 f4 	bnz s6, 1516 <malloc+0x1be4>
   4fab0:	c2 fc 03 16 	cmpgt_u s6, s2, 255
   4fab4:	06 23 00 f4 	bnz s6, 1120 <malloc+0x1a60>
   4fab8:	02 0d 00 0a 	shr s8, s2, 3
   4fabc:	c4 20 00 a8 	load_32 s6, 8(s4)
   4fac0:	e8 0c 00 0b 	shl s7, s8, 3
   4fac4:	f8 80 53 c0 	add_i s7, s24, s7
   4fac8:	27 a1 00 05 	add_i s9, s7, 40
   4facc:	e4 30 00 a8 	load_32 s7, 12(s4)
   4fad0:	46 81 04 c1 	cmpeq_i s10, s6, s9
   4fad4:	ca 00 00 f4 	bnz s10, 24 <malloc+0x1638>
   4fad8:	45 01 63 c1 	cmpgt_u s10, s5, s6
   4fadc:	ea 3f 00 f4 	bnz s10, 2044 <malloc+0x1e24>
   4fae0:	46 31 00 a8 	load_32 s10, 12(s6)
   4fae4:	4a 01 12 c1 	cmpne_i s10, s10, s4
   4fae8:	8a 3f 00 f4 	bnz s10, 2032 <malloc+0x1e24>
   4faec:	47 01 13 c1 	cmpne_i s10, s7, s6
   4faf0:	4a 00 00 f4 	bnz s10, 8 <malloc+0x1644>
   4faf4:	19 01 00 f6 	b 1124 <malloc+0x1aa4>
   4faf8:	07 81 04 c1 	cmpeq_i s8, s7, s9
   4fafc:	c8 00 00 f4 	bnz s8, 24 <malloc+0x1660>
   4fb00:	a5 80 63 c1 	cmpgt_u s5, s5, s7
   4fb04:	a5 3e 00 f4 	bnz s5, 2004 <malloc+0x1e24>
   4fb08:	a7 20 00 a8 	load_32 s5, 8(s7)
   4fb0c:	a5 00 12 c1 	cmpne_i s5, s5, s4
   4fb10:	45 3e 00 f4 	bnz s5, 1992 <malloc+0x1e24>
   4fb14:	e6 30 00 88 	store_32 s7, 12(s6)
   4fb18:	c7 20 00 88 	store_32 s6, 8(s7)
   4fb1c:	5c 01 00 f6 	b 1392 <malloc+0x1bd8>
   4fb20:	38 10 07 05 	add_i s1, s24, 452
   4fb24:	01 00 00 a8 	load_32 s0, (s1)
   4fb28:	60 00 61 c1 	cmpgt_u s3, s0, s2
   4fb2c:	43 00 00 f4 	bnz s3, 8 <malloc+0x1680>
   4fb30:	05 00 00 f6 	b 20 <malloc+0x1690>
   4fb34:	21 20 00 a8 	load_32 s1, 8(s1)
   4fb38:	01 00 00 a8 	load_32 s0, (s1)
   4fb3c:	60 00 61 c1 	cmpgt_u s3, s0, s2
   4fb40:	a3 ff ff f5 	bnz s3, -12 <malloc+0x1680>
   4fb44:	61 10 00 a8 	load_32 s3, 4(s1)
   4fb48:	00 80 51 c0 	add_i s0, s0, s3
   4fb4c:	60 00 61 c1 	cmpgt_u s3, s0, s2
   4fb50:	43 00 00 f4 	bnz s3, 8 <malloc+0x16a4>
   4fb54:	f8 ff ff f7 	b -32 <malloc+0x1680>
   4fb58:	20 64 ff 05 	add_i s1, s0, -39
   4fb5c:	60 00 00 0f 	move s3, 0
   4fb60:	21 1c 00 01 	and s1, s1, 7
   4fb64:	81 00 00 10 	cmpeq_i s4, s1, 0
   4fb68:	20 80 f1 c0 	move s1, s3
   4fb6c:	84 00 00 f4 	bnz s4, 16 <malloc+0x16c8>
   4fb70:	20 9c 00 0f 	move s1, 39
   4fb74:	21 00 60 c0 	sub_i s1, s1, s0
   4fb78:	21 1c 00 01 	and s1, s1, 7
   4fb7c:	20 80 50 c0 	add_i s1, s0, s1
   4fb80:	81 44 ff 05 	add_i s4, s1, -47
   4fb84:	22 40 00 05 	add_i s1, s2, 16
   4fb88:	a4 80 80 c1 	cmplt_u s5, s4, s1
   4fb8c:	20 00 f1 c0 	move s1, s2
   4fb90:	45 00 00 f4 	bnz s5, 8 <malloc+0x16e4>
   4fb94:	20 00 f2 c0 	move s1, s4
   4fb98:	8a 20 00 05 	add_i s4, s10, 8
   4fb9c:	a1 20 00 05 	add_i s5, s1, 8
   4fba0:	c9 60 ff 05 	add_i s6, s9, -40
   4fba4:	84 1c 00 01 	and s4, s4, 7
   4fba8:	e0 80 f1 c0 	move s7, s3
   4fbac:	84 00 00 10 	cmpeq_i s4, s4, 0
   4fbb0:	84 00 00 f4 	bnz s4, 16 <malloc+0x170c>
   4fbb4:	80 e0 ff 0f 	move s4, -8
   4fbb8:	84 00 65 c0 	sub_i s4, s4, s10
   4fbbc:	e4 1c 00 01 	and s7, s4, 7
   4fbc0:	0a 81 53 c0 	add_i s8, s10, s7
   4fbc4:	18 61 00 88 	store_32 s8, 24(s24)
   4fbc8:	e6 80 63 c0 	sub_i s7, s6, s7
   4fbcc:	f8 30 00 88 	store_32 s7, 12(s24)
   4fbd0:	ca 00 53 c0 	add_i s6, s10, s6
   4fbd4:	81 60 00 05 	add_i s4, s1, 24
   4fbd8:	e7 04 00 00 	or s7, s7, 1
   4fbdc:	e8 10 00 88 	store_32 s7, 4(s8)
   4fbe0:	e0 a0 00 0f 	move s7, 40
   4fbe4:	e6 10 00 88 	store_32 s7, 4(s6)
   4fbe8:	d9 40 00 a8 	load_32 s6, 16(s25)
   4fbec:	d8 70 00 88 	store_32 s6, 28(s24)
   4fbf0:	c0 6c 00 0f 	move s6, 27
   4fbf4:	c1 10 00 88 	store_32 s6, 4(s1)
   4fbf8:	d8 40 07 a8 	load_32 s6, 464(s24)
   4fbfc:	c1 50 00 88 	store_32 s6, 20(s1)
   4fc00:	d8 30 07 a8 	load_32 s6, 460(s24)
   4fc04:	c1 40 00 88 	store_32 s6, 16(s1)
   4fc08:	d8 20 07 a8 	load_32 s6, 456(s24)
   4fc0c:	c1 30 00 88 	store_32 s6, 12(s1)
   4fc10:	d8 10 07 a8 	load_32 s6, 452(s24)
   4fc14:	c1 20 00 88 	store_32 s6, 8(s1)
   4fc18:	58 11 07 88 	store_32 s10, 452(s24)
   4fc1c:	38 21 07 88 	store_32 s9, 456(s24)
   4fc20:	78 40 07 88 	store_32 s3, 464(s24)
   4fc24:	60 1c 00 0f 	move s3, 7
   4fc28:	b8 30 07 88 	store_32 s5, 460(s24)
   4fc2c:	a4 20 00 05 	add_i s5, s4, 8
   4fc30:	64 10 00 88 	store_32 s3, 4(s4)
   4fc34:	c4 10 00 05 	add_i s6, s4, 4
   4fc38:	a5 00 80 c1 	cmplt_u s5, s5, s0
   4fc3c:	80 00 f3 c0 	move s4, s6
   4fc40:	65 ff ff f5 	bnz s5, -20 <malloc+0x1778>
   4fc44:	01 00 01 c1 	cmpeq_i s0, s1, s2
   4fc48:	40 12 00 f4 	bnz s0, 584 <malloc+0x19dc>
   4fc4c:	61 10 00 a8 	load_32 s3, 4(s1)
   4fc50:	01 00 61 c0 	sub_i s0, s1, s2
   4fc54:	63 f8 ff 01 	and s3, s3, -2
   4fc58:	61 10 00 88 	store_32 s3, 4(s1)
   4fc5c:	60 04 00 00 	or s3, s0, 1
   4fc60:	62 10 00 88 	store_32 s3, 4(s2)
   4fc64:	60 fc 03 16 	cmpgt_u s3, s0, 255
   4fc68:	01 00 00 88 	store_32 s0, (s1)
   4fc6c:	03 02 00 f4 	bnz s3, 64 <malloc+0x17f8>
   4fc70:	00 0c 00 0a 	shr s0, s0, 3
   4fc74:	38 00 00 a8 	load_32 s1, (s24)
   4fc78:	60 04 00 0f 	move s3, 1
   4fc7c:	80 0c 00 0b 	shl s4, s0, 3
   4fc80:	98 00 52 c0 	add_i s4, s24, s4
   4fc84:	63 00 b0 c0 	shl s3, s3, s0
   4fc88:	a1 80 11 c0 	and s5, s1, s3
   4fc8c:	04 a0 00 05 	add_i s0, s4, 40
   4fc90:	45 00 00 f4 	bnz s5, 8 <malloc+0x17e4>
   4fc94:	1c 00 00 f6 	b 112 <malloc+0x1850>
   4fc98:	20 20 00 a8 	load_32 s1, 8(s0)
   4fc9c:	78 40 00 a8 	load_32 s3, 16(s24)
   4fca0:	63 80 90 c1 	cmple_u s3, s3, s1
   4fca4:	63 03 00 f4 	bnz s3, 108 <malloc+0x185c>
   4fca8:	8c 01 00 f6 	b 1584 <malloc+0x1e24>
   4fcac:	20 00 00 0f 	move s1, 0
   4fcb0:	80 20 00 0a 	shr s4, s0, 8
   4fcb4:	60 80 f0 c0 	move s3, s1
   4fcb8:	44 07 00 f2 	bz s4, 232 <malloc+0x18ec>
   4fcbc:	7f fc 00 4f 	movehi s3, 2047
   4fcc0:	63 fc 7f 00 	or s3, s3, 8191
   4fcc4:	60 80 61 c1 	cmpgt_u s3, s0, s3
   4fcc8:	43 00 00 f4 	bnz s3, 8 <malloc+0x181c>
   4fccc:	19 00 00 f6 	b 100 <malloc+0x187c>
   4fcd0:	60 7c 00 0f 	move s3, 31
   4fcd4:	33 00 00 f6 	b 204 <malloc+0x18ec>
   4fcd8:	58 30 00 a8 	load_32 s2, 12(s24)
   4fcdc:	60 23 00 05 	add_i s27, s0, 8
   4fce0:	42 80 51 c0 	add_i s2, s2, s3
   4fce4:	58 30 00 88 	store_32 s2, 12(s24)
   4fce8:	38 60 00 88 	store_32 s1, 24(s24)
   4fcec:	42 04 00 00 	or s2, s2, 1
   4fcf0:	41 10 00 88 	store_32 s2, 4(s1)
   4fcf4:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4fcf8:	00 08 00 01 	and s0, s0, 2
   4fcfc:	40 8d ff f3 	bz s0, -3672 <malloc+0x9f0>
   4fd00:	63 fc ff f7 	b -3700 <malloc+0x9d8>
   4fd04:	21 80 01 c0 	or s1, s1, s3
   4fd08:	38 00 00 88 	store_32 s1, (s24)
   4fd0c:	20 00 f0 c0 	move s1, s0
   4fd10:	40 20 00 88 	store_32 s2, 8(s0)
   4fd14:	41 30 00 88 	store_32 s2, 12(s1)
   4fd18:	22 20 00 88 	store_32 s1, 8(s2)
   4fd1c:	02 30 00 88 	store_32 s0, 12(s2)
   4fd20:	18 30 00 a8 	load_32 s0, 12(s24)
   4fd24:	20 00 9d c1 	cmple_u s1, s0, s26
   4fd28:	c1 0b 00 f4 	bnz s1, 376 <malloc+0x19ec>
   4fd2c:	a9 fb ff f7 	b -4444 <malloc+0x71c>
   4fd30:	7f 0c 00 4f 	movehi s3, 127
   4fd34:	bf 04 00 4f 	movehi s5, 63
   4fd38:	de 00 00 4f 	movehi s6, 30
   4fd3c:	63 00 7c 00 	or s3, s3, 7936
   4fd40:	64 80 51 c0 	add_i s3, s4, s3
   4fd44:	a5 00 40 00 	or s5, s5, 4096
   4fd48:	63 40 00 0a 	shr s3, s3, 16
   4fd4c:	63 20 00 01 	and s3, s3, 8
   4fd50:	84 80 b1 c0 	shl s4, s4, s3
   4fd54:	a4 80 52 c0 	add_i s5, s4, s5
   4fd58:	a5 40 00 0a 	shr s5, s5, 16
   4fd5c:	a5 10 00 01 	and s5, s5, 4
   4fd60:	84 80 b2 c0 	shl s4, s4, s5
   4fd64:	65 80 01 c0 	or s3, s5, s3
   4fd68:	c4 00 53 c0 	add_i s6, s4, s6
   4fd6c:	c6 40 00 0a 	shr s6, s6, 16
   4fd70:	a6 08 00 01 	and s5, s6, 2
   4fd74:	c0 38 00 0f 	move s6, 14
   4fd78:	63 80 02 c0 	or s3, s3, s5
   4fd7c:	84 80 b2 c0 	shl s4, s4, s5
   4fd80:	66 80 61 c0 	sub_i s3, s6, s3
   4fd84:	84 3c 00 0a 	shr s4, s4, 15
   4fd88:	63 00 52 c0 	add_i s3, s3, s4
   4fd8c:	83 1c 00 05 	add_i s4, s3, 7
   4fd90:	80 00 a2 c0 	shr s4, s0, s4
   4fd94:	63 04 00 0b 	shl s3, s3, 1
   4fd98:	84 04 00 01 	and s4, s4, 1
   4fd9c:	64 80 01 c0 	or s3, s4, s3
   4fda0:	62 70 00 88 	store_32 s3, 28(s2)
   4fda4:	a3 08 00 0b 	shl s5, s3, 2
   4fda8:	22 50 00 88 	store_32 s1, 20(s2)
   4fdac:	d8 80 52 c0 	add_i s6, s24, s5
   4fdb0:	22 40 00 88 	store_32 s1, 16(s2)
   4fdb4:	20 04 00 0f 	move s1, 1
   4fdb8:	98 10 00 a8 	load_32 s4, 4(s24)
   4fdbc:	a1 80 b1 c0 	shl s5, s1, s3
   4fdc0:	26 c0 04 05 	add_i s1, s6, 304
   4fdc4:	e4 80 12 c0 	and s7, s4, s5
   4fdc8:	47 00 00 f4 	bnz s7, 8 <malloc+0x191c>
   4fdcc:	08 00 00 f6 	b 32 <malloc+0x1938>
   4fdd0:	81 00 00 a8 	load_32 s4, (s1)
   4fdd4:	a3 7c 00 10 	cmpeq_i s5, s3, 31
   4fdd8:	25 01 00 f4 	bnz s5, 36 <malloc+0x1948>
   4fddc:	20 64 00 0f 	move s1, 25
   4fde0:	63 04 00 0a 	shr s3, s3, 1
   4fde4:	21 80 61 c0 	sub_i s1, s1, s3
   4fde8:	06 00 00 f6 	b 24 <malloc+0x194c>
   4fdec:	04 80 02 c0 	or s0, s4, s5
   4fdf0:	18 10 00 88 	store_32 s0, 4(s24)
   4fdf4:	41 00 00 88 	store_32 s2, (s1)
   4fdf8:	13 00 00 f6 	b 76 <malloc+0x1990>
   4fdfc:	20 00 00 0f 	move s1, 0
   4fe00:	60 80 b0 c0 	shl s3, s0, s1
   4fe04:	20 00 f2 c0 	move s1, s4
   4fe08:	81 10 00 a8 	load_32 s4, 4(s1)
   4fe0c:	84 e0 ff 01 	and s4, s4, -8
   4fe10:	84 00 00 c1 	cmpeq_i s4, s4, s0
   4fe14:	64 02 00 f4 	bnz s4, 76 <malloc+0x19ac>
   4fe18:	83 74 00 0a 	shr s4, s3, 29
   4fe1c:	63 04 00 0b 	shl s3, s3, 1
   4fe20:	84 10 00 01 	and s4, s4, 4
   4fe24:	a1 00 52 c0 	add_i s5, s1, s4
   4fe28:	85 40 00 a8 	load_32 s4, 16(s5)
   4fe2c:	c4 fe ff f5 	bnz s4, -40 <malloc+0x1950>
   4fe30:	78 40 00 a8 	load_32 s3, 16(s24)
   4fe34:	05 40 00 05 	add_i s0, s5, 16
   4fe38:	63 00 60 c1 	cmpgt_u s3, s3, s0
   4fe3c:	e3 24 00 f4 	bnz s3, 1180 <malloc+0x1e24>
   4fe40:	40 00 00 88 	store_32 s2, (s0)
   4fe44:	22 60 00 88 	store_32 s1, 24(s2)
   4fe48:	42 30 00 88 	store_32 s2, 12(s2)
   4fe4c:	42 20 00 88 	store_32 s2, 8(s2)
   4fe50:	18 30 00 a8 	load_32 s0, 12(s24)
   4fe54:	20 00 9d c1 	cmple_u s1, s0, s26
   4fe58:	41 02 00 f4 	bnz s1, 72 <malloc+0x19ec>
   4fe5c:	5d fb ff f7 	b -4748 <malloc+0x71c>
   4fe60:	01 20 00 a8 	load_32 s0, 8(s1)
   4fe64:	78 40 00 a8 	load_32 s3, 16(s24)
   4fe68:	83 00 60 c1 	cmpgt_u s4, s3, s0
   4fe6c:	64 23 00 f4 	bnz s4, 1132 <malloc+0x1e24>
   4fe70:	63 80 60 c1 	cmpgt_u s3, s3, s1
   4fe74:	23 23 00 f4 	bnz s3, 1124 <malloc+0x1e24>
   4fe78:	40 30 00 88 	store_32 s2, 12(s0)
   4fe7c:	41 20 00 88 	store_32 s2, 8(s1)
   4fe80:	02 20 00 88 	store_32 s0, 8(s2)
   4fe84:	00 00 00 0f 	move s0, 0
   4fe88:	22 30 00 88 	store_32 s1, 12(s2)
   4fe8c:	02 60 00 88 	store_32 s0, 24(s2)
   4fe90:	18 30 00 a8 	load_32 s0, 12(s24)
   4fe94:	20 00 9d c1 	cmple_u s1, s0, s26
   4fe98:	41 00 00 f4 	bnz s1, 8 <malloc+0x19ec>
   4fe9c:	4d fb ff f7 	b -4812 <malloc+0x71c>
   4fea0:	60 03 00 0f 	move s27, 0
   4fea4:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4fea8:	00 08 00 01 	and s0, s0, 2
   4feac:	c0 7f ff f3 	bz s0, -4104 <malloc+0x9f0>
   4feb0:	f7 fb ff f7 	b -4132 <malloc+0x9d8>
   4feb4:	20 00 00 0f 	move s1, 0
   4feb8:	62 80 50 c0 	add_i s3, s2, s1
   4febc:	78 60 00 88 	store_32 s3, 24(s24)
   4fec0:	20 80 60 c0 	sub_i s1, s0, s1
   4fec4:	38 30 00 88 	store_32 s1, 12(s24)
   4fec8:	02 00 50 c0 	add_i s0, s2, s0
   4fecc:	21 04 00 00 	or s1, s1, 1
   4fed0:	23 10 00 88 	store_32 s1, 4(s3)
   4fed4:	20 a0 00 0f 	move s1, 40
   4fed8:	20 10 00 88 	store_32 s1, 4(s0)
   4fedc:	a6 fe ff f7 	b -1384 <malloc+0x14c0>
   4fee0:	58 20 00 a8 	load_32 s2, 8(s24)
   4fee4:	60 23 00 05 	add_i s27, s0, 8
   4fee8:	42 80 51 c0 	add_i s2, s2, s3
   4feec:	58 20 00 88 	store_32 s2, 8(s24)
   4fef0:	61 00 51 c0 	add_i s3, s1, s2
   4fef4:	38 50 00 88 	store_32 s1, 20(s24)
   4fef8:	82 04 00 00 	or s4, s2, 1
   4fefc:	81 10 00 88 	store_32 s4, 4(s1)
   4ff00:	43 00 00 88 	store_32 s2, (s3)
   4ff04:	18 f0 06 a0 	load_u8 s0, 444(s24)
   4ff08:	00 08 00 01 	and s0, s0, 2
   4ff0c:	c0 7c ff f3 	bz s0, -4200 <malloc+0x9f0>
   4ff10:	df fb ff f7 	b -4228 <malloc+0x9d8>
   4ff14:	c4 60 00 a8 	load_32 s6, 24(s4)
   4ff18:	e4 30 00 a8 	load_32 s7, 12(s4)
   4ff1c:	07 01 02 c1 	cmpeq_i s8, s7, s4
   4ff20:	a8 02 00 f4 	bnz s8, 84 <malloc+0x1ac0>
   4ff24:	04 21 00 a8 	load_32 s8, 8(s4)
   4ff28:	a5 00 64 c1 	cmpgt_u s5, s5, s8
   4ff2c:	65 1d 00 f4 	bnz s5, 940 <malloc+0x1e24>
   4ff30:	a8 30 00 a8 	load_32 s5, 12(s8)
   4ff34:	a5 00 12 c1 	cmpne_i s5, s5, s4
   4ff38:	05 1d 00 f4 	bnz s5, 928 <malloc+0x1e24>
   4ff3c:	a7 20 00 a8 	load_32 s5, 8(s7)
   4ff40:	a5 00 12 c1 	cmpne_i s5, s5, s4
   4ff44:	a5 1c 00 f4 	bnz s5, 916 <malloc+0x1e24>
   4ff48:	e8 30 00 88 	store_32 s7, 12(s8)
   4ff4c:	07 21 00 88 	store_32 s8, 8(s7)
   4ff50:	e6 09 00 f2 	bz s6, 316 <malloc+0x1bd8>
   4ff54:	1d 00 00 f6 	b 116 <malloc+0x1b14>
   4ff58:	a0 04 00 0f 	move s5, 1
   4ff5c:	d8 00 00 a8 	load_32 s6, (s24)
   4ff60:	a5 00 b4 c0 	shl s5, s5, s8
   4ff64:	a5 fc ff 03 	xor s5, s5, -1
   4ff68:	a6 80 12 c0 	and s5, s6, s5
   4ff6c:	b8 00 00 88 	store_32 s5, (s24)
   4ff70:	47 00 00 f6 	b 284 <malloc+0x1bd8>
   4ff74:	24 51 00 a8 	load_32 s9, 20(s4)
   4ff78:	49 00 00 f4 	bnz s9, 8 <malloc+0x1acc>
   4ff7c:	03 00 00 f6 	b 12 <malloc+0x1ad4>
   4ff80:	04 51 00 05 	add_i s8, s4, 20
   4ff84:	04 00 00 f6 	b 16 <malloc+0x1ae0>
   4ff88:	04 41 00 05 	add_i s8, s4, 16
   4ff8c:	28 01 00 a8 	load_32 s9, (s8)
   4ff90:	e9 19 00 f2 	bz s9, 828 <malloc+0x1e18>
   4ff94:	e0 80 f4 c0 	move s7, s9
   4ff98:	27 51 00 a8 	load_32 s9, 20(s7)
   4ff9c:	40 01 f4 c0 	move s10, s8
   4ffa0:	07 51 00 05 	add_i s8, s7, 20
   4ffa4:	89 ff ff f5 	bnz s9, -16 <malloc+0x1ae0>
   4ffa8:	27 41 00 a8 	load_32 s9, 16(s7)
   4ffac:	07 41 00 05 	add_i s8, s7, 16
   4ffb0:	29 ff ff f5 	bnz s9, -28 <malloc+0x1ae0>
   4ffb4:	a5 00 65 c1 	cmpgt_u s5, s5, s10
   4ffb8:	05 19 00 f4 	bnz s5, 800 <malloc+0x1e24>
   4ffbc:	a0 00 00 0f 	move s5, 0
   4ffc0:	aa 00 00 88 	store_32 s5, (s10)
   4ffc4:	46 06 00 f2 	bz s6, 200 <malloc+0x1bd8>
   4ffc8:	a4 70 00 a8 	load_32 s5, 28(s4)
   4ffcc:	05 09 00 0b 	shl s8, s5, 2
   4ffd0:	18 01 54 c0 	add_i s8, s24, s8
   4ffd4:	28 c1 04 a8 	load_32 s9, 304(s8)
   4ffd8:	29 01 12 c1 	cmpne_i s9, s9, s4
   4ffdc:	49 00 00 f4 	bnz s9, 8 <malloc+0x1b30>
   4ffe0:	0c 00 00 f6 	b 48 <malloc+0x1b5c>
   4ffe4:	b8 40 00 a8 	load_32 s5, 16(s24)
   4ffe8:	a5 00 63 c1 	cmpgt_u s5, s5, s6
   4ffec:	65 17 00 f4 	bnz s5, 748 <malloc+0x1e24>
   4fff0:	a6 40 00 a8 	load_32 s5, 16(s6)
   4fff4:	a5 00 02 c1 	cmpeq_i s5, s5, s4
   4fff8:	05 02 00 f4 	bnz s5, 64 <malloc+0x1b84>
   4fffc:	a0 50 00 0f 	move s5, 20
   50000:	a6 80 52 c0 	add_i s5, s6, s5
   50004:	e5 00 00 88 	store_32 s7, (s5)
   50008:	27 04 00 f2 	bz s7, 132 <malloc+0x1bd8>
   5000c:	0f 00 00 f6 	b 60 <malloc+0x1b94>
   50010:	08 c1 04 05 	add_i s8, s8, 304
   50014:	e8 00 00 88 	store_32 s7, (s8)
   50018:	87 01 00 f4 	bnz s7, 48 <malloc+0x1b94>
   5001c:	c0 04 00 0f 	move s6, 1
   50020:	a6 80 b2 c0 	shl s5, s6, s5
   50024:	d8 10 00 a8 	load_32 s6, 4(s24)
   50028:	a5 fc ff 03 	xor s5, s5, -1
   5002c:	a6 80 12 c0 	and s5, s6, s5
   50030:	b8 10 00 88 	store_32 s5, 4(s24)
   50034:	16 00 00 f6 	b 88 <malloc+0x1bd8>
   50038:	a0 40 00 0f 	move s5, 16
   5003c:	a6 80 52 c0 	add_i s5, s6, s5
   50040:	e5 00 00 88 	store_32 s7, (s5)
   50044:	47 02 00 f2 	bz s7, 72 <malloc+0x1bd8>
   50048:	b8 40 00 a8 	load_32 s5, 16(s24)
   5004c:	05 81 63 c1 	cmpgt_u s8, s5, s7
   50050:	48 14 00 f4 	bnz s8, 648 <malloc+0x1e24>
   50054:	c7 60 00 88 	store_32 s6, 24(s7)
   50058:	c4 40 00 a8 	load_32 s6, 16(s4)
   5005c:	a6 00 00 f2 	bz s6, 20 <malloc+0x1bbc>
   50060:	a5 00 63 c1 	cmpgt_u s5, s5, s6
   50064:	a5 13 00 f4 	bnz s5, 628 <malloc+0x1e24>
   50068:	c7 40 00 88 	store_32 s6, 16(s7)
   5006c:	e6 60 00 88 	store_32 s7, 24(s6)
   50070:	a4 50 00 a8 	load_32 s5, 20(s4)
   50074:	c5 00 00 f2 	bz s5, 24 <malloc+0x1bd8>
   50078:	d8 40 00 a8 	load_32 s6, 16(s24)
   5007c:	c6 80 62 c1 	cmpgt_u s6, s6, s5
   50080:	c6 12 00 f4 	bnz s6, 600 <malloc+0x1e24>
   50084:	a7 50 00 88 	store_32 s5, 20(s7)
   50088:	e5 60 00 88 	store_32 s7, 24(s5)
   5008c:	42 e0 ff 01 	and s2, s2, -8
   50090:	84 00 51 c0 	add_i s4, s4, s2
   50094:	62 80 51 c0 	add_i s3, s2, s3
   50098:	44 10 00 a8 	load_32 s2, 4(s4)
   5009c:	42 f8 ff 01 	and s2, s2, -2
   500a0:	44 10 00 88 	store_32 s2, 4(s4)
   500a4:	43 04 00 00 	or s2, s3, 1
   500a8:	41 10 00 88 	store_32 s2, 4(s1)
   500ac:	81 80 51 c0 	add_i s4, s1, s3
   500b0:	43 fc 03 16 	cmpgt_u s2, s3, 255
   500b4:	64 00 00 88 	store_32 s3, (s4)
   500b8:	02 02 00 f4 	bnz s2, 64 <malloc+0x1c44>
   500bc:	43 0c 00 0a 	shr s2, s3, 3
   500c0:	78 00 00 a8 	load_32 s3, (s24)
   500c4:	80 04 00 0f 	move s4, 1
   500c8:	a2 0c 00 0b 	shl s5, s2, 3
   500cc:	b8 80 52 c0 	add_i s5, s24, s5
   500d0:	84 00 b1 c0 	shl s4, s4, s2
   500d4:	c3 00 12 c0 	and s6, s3, s4
   500d8:	45 a0 00 05 	add_i s2, s5, 40
   500dc:	46 00 00 f4 	bnz s6, 8 <malloc+0x1c30>
   500e0:	11 00 00 f6 	b 68 <malloc+0x1c70>
   500e4:	62 20 00 a8 	load_32 s3, 8(s2)
   500e8:	98 40 00 a8 	load_32 s4, 16(s24)
   500ec:	84 80 91 c1 	cmple_u s4, s4, s3
   500f0:	04 02 00 f4 	bnz s4, 64 <malloc+0x1c7c>
   500f4:	79 00 00 f6 	b 484 <malloc+0x1e24>
   500f8:	40 00 00 0f 	move s2, 0
   500fc:	a3 20 00 0a 	shr s5, s3, 8
   50100:	80 00 f1 c0 	move s4, s2
   50104:	05 06 00 f2 	bz s5, 192 <malloc+0x1d10>
   50108:	9f fc 00 4f 	movehi s4, 2047
   5010c:	84 fc 7f 00 	or s4, s4, 8191
   50110:	83 00 62 c1 	cmpgt_u s4, s3, s4
   50114:	44 00 00 f4 	bnz s4, 8 <malloc+0x1c68>
   50118:	0f 00 00 f6 	b 60 <malloc+0x1ca0>
   5011c:	80 7c 00 0f 	move s4, 31
   50120:	29 00 00 f6 	b 164 <malloc+0x1d10>
   50124:	63 00 02 c0 	or s3, s3, s4
   50128:	78 00 00 88 	store_32 s3, (s24)
   5012c:	60 00 f1 c0 	move s3, s2
   50130:	22 20 00 88 	store_32 s1, 8(s2)
   50134:	60 23 00 05 	add_i s27, s0, 8
   50138:	23 30 00 88 	store_32 s1, 12(s3)
   5013c:	61 20 00 88 	store_32 s3, 8(s1)
   50140:	41 30 00 88 	store_32 s2, 12(s1)
   50144:	18 f0 06 a0 	load_u8 s0, 444(s24)
   50148:	00 08 00 01 	and s0, s0, 2
   5014c:	c0 6a ff f3 	bz s0, -4776 <malloc+0x9f0>
   50150:	4f fb ff f7 	b -4804 <malloc+0x9d8>
   50154:	9f 0c 00 4f 	movehi s4, 127
   50158:	df 04 00 4f 	movehi s6, 63
   5015c:	fe 00 00 4f 	movehi s7, 30
   50160:	84 00 7c 00 	or s4, s4, 7936
   50164:	85 00 52 c0 	add_i s4, s5, s4
   50168:	c6 00 40 00 	or s6, s6, 4096
   5016c:	84 40 00 0a 	shr s4, s4, 16
   50170:	84 20 00 01 	and s4, s4, 8
   50174:	a5 00 b2 c0 	shl s5, s5, s4
   50178:	c5 00 53 c0 	add_i s6, s5, s6
   5017c:	c6 40 00 0a 	shr s6, s6, 16
   50180:	c6 10 00 01 	and s6, s6, 4
   50184:	a5 00 b3 c0 	shl s5, s5, s6
   50188:	86 00 02 c0 	or s4, s6, s4
   5018c:	e5 80 53 c0 	add_i s7, s5, s7
   50190:	e7 40 00 0a 	shr s7, s7, 16
   50194:	c7 08 00 01 	and s6, s7, 2
   50198:	e0 38 00 0f 	move s7, 14
   5019c:	84 00 03 c0 	or s4, s4, s6
   501a0:	a5 00 b3 c0 	shl s5, s5, s6
   501a4:	87 00 62 c0 	sub_i s4, s7, s4
   501a8:	a5 3c 00 0a 	shr s5, s5, 15
   501ac:	84 80 52 c0 	add_i s4, s4, s5
   501b0:	a4 1c 00 05 	add_i s5, s4, 7
   501b4:	a3 80 a2 c0 	shr s5, s3, s5
   501b8:	84 04 00 0b 	shl s4, s4, 1
   501bc:	a5 04 00 01 	and s5, s5, 1
   501c0:	85 00 02 c0 	or s4, s5, s4
   501c4:	81 70 00 88 	store_32 s4, 28(s1)
   501c8:	c4 08 00 0b 	shl s6, s4, 2
   501cc:	41 50 00 88 	store_32 s2, 20(s1)
   501d0:	f8 00 53 c0 	add_i s7, s24, s6
   501d4:	41 40 00 88 	store_32 s2, 16(s1)
   501d8:	40 04 00 0f 	move s2, 1
   501dc:	b8 10 00 a8 	load_32 s5, 4(s24)
   501e0:	c2 00 b2 c0 	shl s6, s2, s4
   501e4:	47 c0 04 05 	add_i s2, s7, 304
   501e8:	05 01 13 c0 	and s8, s5, s6
   501ec:	48 00 00 f4 	bnz s8, 8 <malloc+0x1d40>
   501f0:	08 00 00 f6 	b 32 <malloc+0x1d5c>
   501f4:	a2 00 00 a8 	load_32 s5, (s2)
   501f8:	c4 7c 00 10 	cmpeq_i s6, s4, 31
   501fc:	26 01 00 f4 	bnz s6, 36 <malloc+0x1d6c>
   50200:	40 64 00 0f 	move s2, 25
   50204:	84 04 00 0a 	shr s4, s4, 1
   50208:	42 00 62 c0 	sub_i s2, s2, s4
   5020c:	06 00 00 f6 	b 24 <malloc+0x1d70>
   50210:	65 00 03 c0 	or s3, s5, s6
   50214:	78 10 00 88 	store_32 s3, 4(s24)
   50218:	22 00 00 88 	store_32 s1, (s2)
   5021c:	13 00 00 f6 	b 76 <malloc+0x1db4>
   50220:	40 00 00 0f 	move s2, 0
   50224:	83 00 b1 c0 	shl s4, s3, s2
   50228:	40 80 f2 c0 	move s2, s5
   5022c:	a2 10 00 a8 	load_32 s5, 4(s2)
   50230:	a5 e0 ff 01 	and s5, s5, -8
   50234:	a5 80 01 c1 	cmpeq_i s5, s5, s3
   50238:	85 02 00 f4 	bnz s5, 80 <malloc+0x1dd4>
   5023c:	a4 74 00 0a 	shr s5, s4, 29
   50240:	84 04 00 0b 	shl s4, s4, 1
   50244:	a5 10 00 01 	and s5, s5, 4
   50248:	c2 80 52 c0 	add_i s6, s2, s5
   5024c:	a6 40 00 a8 	load_32 s5, 16(s6)
   50250:	c5 fe ff f5 	bnz s5, -40 <malloc+0x1d74>
   50254:	98 40 00 a8 	load_32 s4, 16(s24)
   50258:	66 40 00 05 	add_i s3, s6, 16
   5025c:	84 80 61 c1 	cmpgt_u s4, s4, s3
   50260:	c4 03 00 f4 	bnz s4, 120 <malloc+0x1e24>
   50264:	23 00 00 88 	store_32 s1, (s3)
   50268:	41 60 00 88 	store_32 s2, 24(s1)
   5026c:	60 23 00 05 	add_i s27, s0, 8
   50270:	21 30 00 88 	store_32 s1, 12(s1)
   50274:	21 20 00 88 	store_32 s1, 8(s1)
   50278:	18 f0 06 a0 	load_u8 s0, 444(s24)
   5027c:	00 08 00 01 	and s0, s0, 2
   50280:	20 61 ff f3 	bz s0, -5084 <malloc+0x9f0>
   50284:	02 fb ff f7 	b -5112 <malloc+0x9d8>
   50288:	62 20 00 a8 	load_32 s3, 8(s2)
   5028c:	98 40 00 a8 	load_32 s4, 16(s24)
   50290:	a4 80 61 c1 	cmpgt_u s5, s4, s3
   50294:	25 02 00 f4 	bnz s5, 68 <malloc+0x1e24>
   50298:	84 00 61 c1 	cmpgt_u s4, s4, s2
   5029c:	e4 01 00 f4 	bnz s4, 60 <malloc+0x1e24>
   502a0:	23 30 00 88 	store_32 s1, 12(s3)
   502a4:	60 23 00 05 	add_i s27, s0, 8
   502a8:	22 20 00 88 	store_32 s1, 8(s2)
   502ac:	61 20 00 88 	store_32 s3, 8(s1)
   502b0:	41 30 00 88 	store_32 s2, 12(s1)
   502b4:	40 00 00 0f 	move s2, 0
   502b8:	41 60 00 88 	store_32 s2, 24(s1)
   502bc:	18 f0 06 a0 	load_u8 s0, 444(s24)
   502c0:	00 08 00 01 	and s0, s0, 2
   502c4:	00 5f ff f3 	bz s0, -5152 <malloc+0x9f0>
   502c8:	f1 fa ff f7 	b -5180 <malloc+0x9d8>
   502cc:	e0 00 00 0f 	move s7, 0
   502d0:	e6 ed ff f3 	bz s6, -580 <malloc+0x1bd8>
   502d4:	3d ff ff f7 	b -780 <malloc+0x1b14>
   502d8:	90 0a 00 f8 	call 10816 <abort>

00000000000502dc free:
   502dc:	de 03 ff 05 	add_i sp, sp, -64
   502e0:	1e f3 00 88 	store_32 s24, 60(sp)
   502e4:	fe e3 00 88 	store_32 ra, 56(sp)
   502e8:	80 32 00 f2 	bz s0, 1616 <free+0x65c>
   502ec:	2c 04 00 4f 	movehi s1, 44
   502f0:	01 b3 05 00 	or s24, s1, 364
   502f4:	38 f0 06 a0 	load_u8 s1, 444(s24)
   502f8:	41 08 00 01 	and s2, s1, 2
   502fc:	20 e0 ff 05 	add_i s1, s0, -8
   50300:	e2 01 00 f2 	bz s2, 60 <free+0x60>
   50304:	58 00 07 05 	add_i s2, s24, 448
   50308:	60 04 00 0f 	move s3, 1
   5030c:	82 00 00 aa 	load_sync s4, (s2)
   50310:	a0 80 f1 c0 	move s5, s3
   50314:	a2 00 00 8a 	store_sync s5, (s2)  
   50318:	a5 ff ff f3 	bz s5, -12 <free+0x30>
   5031c:	04 01 00 f2 	bz s4, 32 <free+0x60>
   50320:	98 00 07 a8 	load_32 s4, 448(s24)
   50324:	e4 ff ff f5 	bnz s4, -4 <free+0x44>
   50328:	82 00 00 aa 	load_sync s4, (s2)
   5032c:	a0 80 f1 c0 	move s5, s3
   50330:	a2 00 00 8a 	store_sync s5, (s2)  
   50334:	a5 ff ff f3 	bz s5, -12 <free+0x4c>
   50338:	44 ff ff f5 	bnz s4, -24 <free+0x44>
   5033c:	b8 40 00 a8 	load_32 s5, 16(s24)
   50340:	41 80 82 c1 	cmplt_u s2, s1, s5
   50344:	a2 3f 00 f4 	bnz s2, 2036 <free+0x85c>
   50348:	40 f0 ff a9 	load_32 s2, -4(s0)
   5034c:	82 0c 00 01 	and s4, s2, 3
   50350:	04 04 00 10 	cmpeq_i s0, s4, 1
   50354:	20 3f 00 f4 	bnz s0, 2020 <free+0x85c>
   50358:	02 e0 ff 01 	and s0, s2, -8
   5035c:	62 04 00 01 	and s3, s2, 1
   50360:	41 00 50 c0 	add_i s2, s1, s0
   50364:	43 12 00 f4 	bnz s3, 584 <free+0x2d0>
   50368:	61 00 00 a8 	load_32 s3, (s1)
   5036c:	44 2d 00 f2 	bz s4, 1448 <free+0x638>
   50370:	21 80 61 c0 	sub_i s1, s1, s3
   50374:	81 80 82 c1 	cmplt_u s4, s1, s5
   50378:	04 3e 00 f4 	bnz s4, 1984 <free+0x85c>
   5037c:	98 50 00 a8 	load_32 s4, 20(s24)
   50380:	03 00 50 c0 	add_i s0, s3, s0
   50384:	84 80 00 c1 	cmpeq_i s4, s4, s1
   50388:	e4 03 00 f4 	bnz s4, 124 <free+0x128>
   5038c:	83 fc 03 16 	cmpgt_u s4, s3, 255
   50390:	a4 04 00 f4 	bnz s4, 148 <free+0x148>
   50394:	c3 0c 00 0a 	shr s6, s3, 3
   50398:	61 20 00 a8 	load_32 s3, 8(s1)
   5039c:	86 0c 00 0b 	shl s4, s6, 3
   503a0:	98 00 52 c0 	add_i s4, s24, s4
   503a4:	e4 a0 00 05 	add_i s7, s4, 40
   503a8:	81 30 00 a8 	load_32 s4, 12(s1)
   503ac:	03 81 03 c1 	cmpeq_i s8, s3, s7
   503b0:	c8 00 00 f4 	bnz s8, 24 <free+0xec>
   503b4:	05 81 61 c1 	cmpgt_u s8, s5, s3
   503b8:	08 3c 00 f4 	bnz s8, 1920 <free+0x85c>
   503bc:	03 31 00 a8 	load_32 s8, 12(s3)
   503c0:	08 81 10 c1 	cmpne_i s8, s8, s1
   503c4:	a8 3b 00 f4 	bnz s8, 1908 <free+0x85c>
   503c8:	04 81 11 c1 	cmpne_i s8, s4, s3
   503cc:	48 00 00 f4 	bnz s8, 8 <free+0xf8>
   503d0:	26 00 00 f6 	b 152 <free+0x18c>
   503d4:	c4 80 03 c1 	cmpeq_i s6, s4, s7
   503d8:	c6 00 00 f4 	bnz s6, 24 <free+0x114>
   503dc:	a5 00 62 c1 	cmpgt_u s5, s5, s4
   503e0:	c5 3a 00 f4 	bnz s5, 1880 <free+0x85c>
   503e4:	a4 20 00 a8 	load_32 s5, 8(s4)
   503e8:	a5 80 10 c1 	cmpne_i s5, s5, s1
   503ec:	65 3a 00 f4 	bnz s5, 1868 <free+0x85c>
   503f0:	83 30 00 88 	store_32 s4, 12(s3)
   503f4:	64 20 00 88 	store_32 s3, 8(s4)
   503f8:	62 80 90 c1 	cmple_u s3, s2, s1
   503fc:	e3 39 00 f4 	bnz s3, 1852 <free+0x85c>
   50400:	6d 00 00 f6 	b 436 <free+0x2d8>
   50404:	62 10 00 a8 	load_32 s3, 4(s2)
   50408:	83 0c 00 01 	and s4, s3, 3
   5040c:	84 0c 00 11 	cmpne_i s4, s4, 3
   50410:	e4 0c 00 f4 	bnz s4, 412 <free+0x2d0>
   50414:	18 20 00 88 	store_32 s0, 8(s24)
   50418:	63 f8 ff 01 	and s3, s3, -2
   5041c:	62 10 00 88 	store_32 s3, 4(s2)
   50420:	cb 00 00 f6 	b 812 <free+0x470>
   50424:	61 60 00 a8 	load_32 s3, 24(s1)
   50428:	81 30 00 a8 	load_32 s4, 12(s1)
   5042c:	c4 80 00 c1 	cmpeq_i s6, s4, s1
   50430:	e6 02 00 f4 	bnz s6, 92 <free+0x1b0>
   50434:	c1 20 00 a8 	load_32 s6, 8(s1)
   50438:	a5 00 63 c1 	cmpgt_u s5, s5, s6
   5043c:	e5 37 00 f4 	bnz s5, 1788 <free+0x85c>
   50440:	a6 30 00 a8 	load_32 s5, 12(s6)
   50444:	a5 80 10 c1 	cmpne_i s5, s5, s1
   50448:	85 37 00 f4 	bnz s5, 1776 <free+0x85c>
   5044c:	a4 20 00 a8 	load_32 s5, 8(s4)
   50450:	a5 80 10 c1 	cmpne_i s5, s5, s1
   50454:	25 37 00 f4 	bnz s5, 1764 <free+0x85c>
   50458:	86 30 00 88 	store_32 s4, 12(s6)
   5045c:	c4 20 00 88 	store_32 s6, 8(s4)
   50460:	63 0a 00 f2 	bz s3, 332 <free+0x2d0>
   50464:	1f 00 00 f6 	b 124 <free+0x204>
   50468:	60 04 00 0f 	move s3, 1
   5046c:	98 00 00 a8 	load_32 s4, (s24)
   50470:	63 00 b3 c0 	shl s3, s3, s6
   50474:	63 fc ff 03 	xor s3, s3, -1
   50478:	64 80 11 c0 	and s3, s4, s3
   5047c:	78 00 00 88 	store_32 s3, (s24)
   50480:	62 80 90 c1 	cmple_u s3, s2, s1
   50484:	a3 35 00 f4 	bnz s3, 1716 <free+0x85c>
   50488:	4b 00 00 f6 	b 300 <free+0x2d8>
   5048c:	e1 50 00 a8 	load_32 s7, 20(s1)
   50490:	47 00 00 f4 	bnz s7, 8 <free+0x1bc>
   50494:	03 00 00 f6 	b 12 <free+0x1c4>
   50498:	c1 50 00 05 	add_i s6, s1, 20
   5049c:	04 00 00 f6 	b 16 <free+0x1d0>
   504a0:	c1 40 00 05 	add_i s6, s1, 16
   504a4:	e6 00 00 a8 	load_32 s7, (s6)
   504a8:	c7 33 00 f2 	bz s7, 1656 <free+0x844>
   504ac:	80 80 f3 c0 	move s4, s7
   504b0:	e4 50 00 a8 	load_32 s7, 20(s4)
   504b4:	00 01 f3 c0 	move s8, s6
   504b8:	c4 50 00 05 	add_i s6, s4, 20
   504bc:	87 ff ff f5 	bnz s7, -16 <free+0x1d0>
   504c0:	e4 40 00 a8 	load_32 s7, 16(s4)
   504c4:	c4 40 00 05 	add_i s6, s4, 16
   504c8:	27 ff ff f5 	bnz s7, -28 <free+0x1d0>
   504cc:	a5 00 64 c1 	cmpgt_u s5, s5, s8
   504d0:	45 33 00 f4 	bnz s5, 1640 <free+0x85c>
   504d4:	a0 00 00 0f 	move s5, 0
   504d8:	a8 00 00 88 	store_32 s5, (s8)
   504dc:	83 06 00 f2 	bz s3, 208 <free+0x2d0>
   504e0:	a1 70 00 a8 	load_32 s5, 28(s1)
   504e4:	c5 08 00 0b 	shl s6, s5, 2
   504e8:	d8 00 53 c0 	add_i s6, s24, s6
   504ec:	e6 c0 04 a8 	load_32 s7, 304(s6)
   504f0:	e7 80 10 c1 	cmpne_i s7, s7, s1
   504f4:	47 00 00 f4 	bnz s7, 8 <free+0x220>
   504f8:	0c 00 00 f6 	b 48 <free+0x24c>
   504fc:	b8 40 00 a8 	load_32 s5, 16(s24)
   50500:	a5 80 61 c1 	cmpgt_u s5, s5, s3
   50504:	a5 31 00 f4 	bnz s5, 1588 <free+0x85c>
   50508:	a3 40 00 a8 	load_32 s5, 16(s3)
   5050c:	a5 80 00 c1 	cmpeq_i s5, s5, s1
   50510:	45 02 00 f4 	bnz s5, 72 <free+0x27c>
   50514:	a0 50 00 0f 	move s5, 20
   50518:	a3 80 52 c0 	add_i s5, s3, s5
   5051c:	85 00 00 88 	store_32 s4, (s5)
   50520:	64 04 00 f2 	bz s4, 140 <free+0x2d0>
   50524:	11 00 00 f6 	b 68 <free+0x28c>
   50528:	c6 c0 04 05 	add_i s6, s6, 304
   5052c:	86 00 00 88 	store_32 s4, (s6)
   50530:	c4 01 00 f4 	bnz s4, 56 <free+0x28c>
   50534:	60 04 00 0f 	move s3, 1
   50538:	98 10 00 a8 	load_32 s4, 4(s24)
   5053c:	63 80 b2 c0 	shl s3, s3, s5
   50540:	63 fc ff 03 	xor s3, s3, -1
   50544:	64 80 11 c0 	and s3, s4, s3
   50548:	78 10 00 88 	store_32 s3, 4(s24)
   5054c:	62 80 90 c1 	cmple_u s3, s2, s1
   50550:	43 2f 00 f4 	bnz s3, 1512 <free+0x85c>
   50554:	18 00 00 f6 	b 96 <free+0x2d8>
   50558:	a0 40 00 0f 	move s5, 16
   5055c:	a3 80 52 c0 	add_i s5, s3, s5
   50560:	85 00 00 88 	store_32 s4, (s5)
   50564:	44 02 00 f2 	bz s4, 72 <free+0x2d0>
   50568:	b8 40 00 a8 	load_32 s5, 16(s24)
   5056c:	c5 00 62 c1 	cmpgt_u s6, s5, s4
   50570:	46 2e 00 f4 	bnz s6, 1480 <free+0x85c>
   50574:	64 60 00 88 	store_32 s3, 24(s4)
   50578:	61 40 00 a8 	load_32 s3, 16(s1)
   5057c:	a3 00 00 f2 	bz s3, 20 <free+0x2b4>
   50580:	a5 80 61 c1 	cmpgt_u s5, s5, s3
   50584:	a5 2d 00 f4 	bnz s5, 1460 <free+0x85c>
   50588:	64 40 00 88 	store_32 s3, 16(s4)
   5058c:	83 60 00 88 	store_32 s4, 24(s3)
   50590:	61 50 00 a8 	load_32 s3, 20(s1)
   50594:	c3 00 00 f2 	bz s3, 24 <free+0x2d0>
   50598:	b8 40 00 a8 	load_32 s5, 16(s24)
   5059c:	a5 80 61 c1 	cmpgt_u s5, s5, s3
   505a0:	c5 2c 00 f4 	bnz s5, 1432 <free+0x85c>
   505a4:	64 50 00 88 	store_32 s3, 20(s4)
   505a8:	83 60 00 88 	store_32 s4, 24(s3)
   505ac:	62 80 90 c1 	cmple_u s3, s2, s1
   505b0:	43 2c 00 f4 	bnz s3, 1416 <free+0x85c>
   505b4:	62 10 00 a8 	load_32 s3, 4(s2)
   505b8:	83 04 00 01 	and s4, s3, 1
   505bc:	e4 2b 00 f2 	bz s4, 1404 <free+0x85c>
   505c0:	83 08 00 01 	and s4, s3, 2
   505c4:	e4 04 00 f4 	bnz s4, 156 <free+0x384>
   505c8:	98 60 00 a8 	load_32 s4, 24(s24)
   505cc:	84 00 11 c1 	cmpne_i s4, s4, s2
   505d0:	44 00 00 f4 	bnz s4, 8 <free+0x2fc>
   505d4:	45 00 00 f6 	b 276 <free+0x40c>
   505d8:	98 50 00 a8 	load_32 s4, 20(s24)
   505dc:	84 00 11 c1 	cmpne_i s4, s4, s2
   505e0:	44 00 00 f4 	bnz s4, 8 <free+0x30c>
   505e4:	56 00 00 f6 	b 344 <free+0x460>
   505e8:	83 fc 03 16 	cmpgt_u s4, s3, 255
   505ec:	64 0d 00 f4 	bnz s4, 428 <free+0x4bc>
   505f0:	c3 0c 00 0a 	shr s6, s3, 3
   505f4:	82 20 00 a8 	load_32 s4, 8(s2)
   505f8:	a6 0c 00 0b 	shl s5, s6, 3
   505fc:	b8 80 52 c0 	add_i s5, s24, s5
   50600:	e5 a0 00 05 	add_i s7, s5, 40
   50604:	a2 30 00 a8 	load_32 s5, 12(s2)
   50608:	04 81 03 c1 	cmpeq_i s8, s4, s7
   5060c:	e8 00 00 f4 	bnz s8, 28 <free+0x34c>
   50610:	18 41 00 a8 	load_32 s8, 16(s24)
   50614:	08 01 62 c1 	cmpgt_u s8, s8, s4
   50618:	08 29 00 f4 	bnz s8, 1312 <free+0x85c>
   5061c:	04 31 00 a8 	load_32 s8, 12(s4)
   50620:	08 01 11 c1 	cmpne_i s8, s8, s2
   50624:	a8 28 00 f4 	bnz s8, 1300 <free+0x85c>
   50628:	05 01 12 c1 	cmpne_i s8, s5, s4
   5062c:	48 00 00 f4 	bnz s8, 8 <free+0x358>
   50630:	e0 00 00 f6 	b 896 <free+0x6d4>
   50634:	c5 80 03 c1 	cmpeq_i s6, s5, s7
   50638:	e6 00 00 f4 	bnz s6, 28 <free+0x378>
   5063c:	d8 40 00 a8 	load_32 s6, 16(s24)
   50640:	c6 80 62 c1 	cmpgt_u s6, s6, s5
   50644:	a6 27 00 f4 	bnz s6, 1268 <free+0x85c>
   50648:	c5 20 00 a8 	load_32 s6, 8(s5)
   5064c:	46 00 11 c1 	cmpne_i s2, s6, s2
   50650:	42 27 00 f4 	bnz s2, 1256 <free+0x85c>
   50654:	a4 30 00 88 	store_32 s5, 12(s4)
   50658:	85 20 00 88 	store_32 s4, 8(s5)
   5065c:	23 01 00 f6 	b 1164 <free+0x80c>
   50660:	63 f8 ff 01 	and s3, s3, -2
   50664:	62 10 00 88 	store_32 s3, 4(s2)
   50668:	41 00 50 c0 	add_i s2, s1, s0
   5066c:	60 04 00 00 	or s3, s0, 1
   50670:	61 10 00 88 	store_32 s3, 4(s1)
   50674:	02 00 00 88 	store_32 s0, (s2)
   50678:	40 fc 03 16 	cmpgt_u s2, s0, 255
   5067c:	02 02 00 f4 	bnz s2, 64 <free+0x3e0>
   50680:	00 0c 00 0a 	shr s0, s0, 3
   50684:	58 00 00 a8 	load_32 s2, (s24)
   50688:	60 04 00 0f 	move s3, 1
   5068c:	80 0c 00 0b 	shl s4, s0, 3
   50690:	98 00 52 c0 	add_i s4, s24, s4
   50694:	63 00 b0 c0 	shl s3, s3, s0
   50698:	a2 80 11 c0 	and s5, s2, s3
   5069c:	04 a0 00 05 	add_i s0, s4, 40
   506a0:	45 00 00 f4 	bnz s5, 8 <free+0x3cc>
   506a4:	32 00 00 f6 	b 200 <free+0x490>
   506a8:	40 20 00 a8 	load_32 s2, 8(s0)
   506ac:	78 40 00 a8 	load_32 s3, 16(s24)
   506b0:	63 00 91 c1 	cmple_u s3, s3, s2
   506b4:	23 06 00 f4 	bnz s3, 196 <free+0x49c>
   506b8:	20 01 00 f6 	b 1152 <free+0x85c>
   506bc:	40 00 00 0f 	move s2, 0
   506c0:	80 20 00 0a 	shr s4, s0, 8
   506c4:	60 00 f1 c0 	move s3, s2
   506c8:	44 0c 00 f2 	bz s4, 392 <free+0x574>
   506cc:	7f fc 00 4f 	movehi s3, 2047
   506d0:	63 fc 7f 00 	or s3, s3, 8191
   506d4:	60 80 61 c1 	cmpgt_u s3, s0, s3
   506d8:	43 00 00 f4 	bnz s3, 8 <free+0x404>
   506dc:	41 00 00 f6 	b 260 <free+0x504>
   506e0:	60 7c 00 0f 	move s3, 31
   506e4:	5b 00 00 f6 	b 364 <free+0x574>
   506e8:	58 30 00 a8 	load_32 s2, 12(s24)
   506ec:	02 00 50 c0 	add_i s0, s2, s0
   506f0:	18 30 00 88 	store_32 s0, 12(s24)
   506f4:	38 60 00 88 	store_32 s1, 24(s24)
   506f8:	40 04 00 00 	or s2, s0, 1
   506fc:	41 10 00 88 	store_32 s2, 4(s1)
   50700:	58 50 00 a8 	load_32 s2, 20(s24)
   50704:	21 00 11 c1 	cmpne_i s1, s1, s2
   50708:	81 00 00 f4 	bnz s1, 16 <free+0x43c>
   5070c:	20 00 00 0f 	move s1, 0
   50710:	38 50 00 88 	store_32 s1, 20(s24)
   50714:	38 20 00 88 	store_32 s1, 8(s24)
   50718:	38 70 00 a8 	load_32 s1, 28(s24)
   5071c:	00 80 90 c1 	cmple_u s0, s0, s1
   50720:	a0 0f 00 f4 	bnz s0, 500 <free+0x638>
   50724:	00 00 00 0f 	move s0, 0
   50728:	05 01 00 f8 	call 1044 <sys_trim>
   5072c:	18 f0 06 a0 	load_u8 s0, 444(s24)
   50730:	00 08 00 01 	and s0, s0, 2
   50734:	20 10 00 f2 	bz s0, 516 <free+0x65c>
   50738:	7a 00 00 f6 	b 488 <free+0x644>
   5073c:	58 20 00 a8 	load_32 s2, 8(s24)
   50740:	02 00 50 c0 	add_i s0, s2, s0
   50744:	18 20 00 88 	store_32 s0, 8(s24)
   50748:	38 50 00 88 	store_32 s1, 20(s24)
   5074c:	41 00 50 c0 	add_i s2, s1, s0
   50750:	60 04 00 00 	or s3, s0, 1
   50754:	61 10 00 88 	store_32 s3, 4(s1)
   50758:	02 00 00 88 	store_32 s0, (s2)
   5075c:	18 f0 06 a0 	load_u8 s0, 444(s24)
   50760:	00 08 00 01 	and s0, s0, 2
   50764:	a0 0e 00 f2 	bz s0, 468 <free+0x65c>
   50768:	6e 00 00 f6 	b 440 <free+0x644>
   5076c:	42 80 01 c0 	or s2, s2, s3
   50770:	58 00 00 88 	store_32 s2, (s24)
   50774:	40 00 f0 c0 	move s2, s0
   50778:	20 20 00 88 	store_32 s1, 8(s0)
   5077c:	22 30 00 88 	store_32 s1, 12(s2)
   50780:	41 20 00 88 	store_32 s2, 8(s1)
   50784:	01 30 00 88 	store_32 s0, 12(s1)
   50788:	18 f0 06 a0 	load_u8 s0, 444(s24)
   5078c:	00 08 00 01 	and s0, s0, 2
   50790:	40 0d 00 f2 	bz s0, 424 <free+0x65c>
   50794:	63 00 00 f6 	b 396 <free+0x644>
   50798:	82 60 00 a8 	load_32 s4, 24(s2)
   5079c:	a2 30 00 a8 	load_32 s5, 12(s2)
   507a0:	c5 00 01 c1 	cmpeq_i s6, s5, s2
   507a4:	46 11 00 f4 	bnz s6, 552 <free+0x6f0>
   507a8:	c2 20 00 a8 	load_32 s6, 8(s2)
   507ac:	f8 40 00 a8 	load_32 s7, 16(s24)
   507b0:	e7 00 63 c1 	cmpgt_u s7, s7, s6
   507b4:	27 1c 00 f4 	bnz s7, 900 <free+0x85c>
   507b8:	e6 30 00 a8 	load_32 s7, 12(s6)
   507bc:	e7 00 11 c1 	cmpne_i s7, s7, s2
   507c0:	c7 1b 00 f4 	bnz s7, 888 <free+0x85c>
   507c4:	e5 20 00 a8 	load_32 s7, 8(s5)
   507c8:	e7 00 11 c1 	cmpne_i s7, s7, s2
   507cc:	67 1b 00 f4 	bnz s7, 876 <free+0x85c>
   507d0:	a6 30 00 88 	store_32 s5, 12(s6)
   507d4:	c5 20 00 88 	store_32 s6, 8(s5)
   507d8:	84 18 00 f2 	bz s4, 784 <free+0x80c>
   507dc:	92 00 00 f6 	b 584 <free+0x748>
   507e0:	7f 0c 00 4f 	movehi s3, 127
   507e4:	bf 04 00 4f 	movehi s5, 63
   507e8:	de 00 00 4f 	movehi s6, 30
   507ec:	63 00 7c 00 	or s3, s3, 7936
   507f0:	64 80 51 c0 	add_i s3, s4, s3
   507f4:	a5 00 40 00 	or s5, s5, 4096
   507f8:	63 40 00 0a 	shr s3, s3, 16
   507fc:	63 20 00 01 	and s3, s3, 8
   50800:	84 80 b1 c0 	shl s4, s4, s3
   50804:	a4 80 52 c0 	add_i s5, s4, s5
   50808:	a5 40 00 0a 	shr s5, s5, 16
   5080c:	a5 10 00 01 	and s5, s5, 4
   50810:	84 80 b2 c0 	shl s4, s4, s5
   50814:	65 80 01 c0 	or s3, s5, s3
   50818:	c4 00 53 c0 	add_i s6, s4, s6
   5081c:	c6 40 00 0a 	shr s6, s6, 16
   50820:	a6 08 00 01 	and s5, s6, 2
   50824:	c0 38 00 0f 	move s6, 14
   50828:	63 80 02 c0 	or s3, s3, s5
   5082c:	84 80 b2 c0 	shl s4, s4, s5
   50830:	66 80 61 c0 	sub_i s3, s6, s3
   50834:	84 3c 00 0a 	shr s4, s4, 15
   50838:	63 00 52 c0 	add_i s3, s3, s4
   5083c:	83 1c 00 05 	add_i s4, s3, 7
   50840:	80 00 a2 c0 	shr s4, s0, s4
   50844:	63 04 00 0b 	shl s3, s3, 1
   50848:	84 04 00 01 	and s4, s4, 1
   5084c:	64 80 01 c0 	or s3, s4, s3
   50850:	61 70 00 88 	store_32 s3, 28(s1)
   50854:	a3 08 00 0b 	shl s5, s3, 2
   50858:	41 50 00 88 	store_32 s2, 20(s1)
   5085c:	d8 80 52 c0 	add_i s6, s24, s5
   50860:	41 40 00 88 	store_32 s2, 16(s1)
   50864:	40 04 00 0f 	move s2, 1
   50868:	98 10 00 a8 	load_32 s4, 4(s24)
   5086c:	a2 80 b1 c0 	shl s5, s2, s3
   50870:	46 c0 04 05 	add_i s2, s6, 304
   50874:	e4 80 12 c0 	and s7, s4, s5
   50878:	47 00 00 f4 	bnz s7, 8 <free+0x5a4>
   5087c:	08 00 00 f6 	b 32 <free+0x5c0>
   50880:	82 00 00 a8 	load_32 s4, (s2)
   50884:	a3 7c 00 10 	cmpeq_i s5, s3, 31
   50888:	25 01 00 f4 	bnz s5, 36 <free+0x5d0>
   5088c:	40 64 00 0f 	move s2, 25
   50890:	63 04 00 0a 	shr s3, s3, 1
   50894:	42 80 61 c0 	sub_i s2, s2, s3
   50898:	06 00 00 f6 	b 24 <free+0x5d4>
   5089c:	04 80 02 c0 	or s0, s4, s5
   508a0:	18 10 00 88 	store_32 s0, 4(s24)
   508a4:	22 00 00 88 	store_32 s1, (s2)
   508a8:	13 00 00 f6 	b 76 <free+0x618>
   508ac:	40 00 00 0f 	move s2, 0
   508b0:	60 00 b1 c0 	shl s3, s0, s2
   508b4:	40 00 f2 c0 	move s2, s4
   508b8:	82 10 00 a8 	load_32 s4, 4(s2)
   508bc:	84 e0 ff 01 	and s4, s4, -8
   508c0:	84 00 00 c1 	cmpeq_i s4, s4, s0
   508c4:	24 04 00 f4 	bnz s4, 132 <free+0x66c>
   508c8:	83 74 00 0a 	shr s4, s3, 29
   508cc:	63 04 00 0b 	shl s3, s3, 1
   508d0:	84 10 00 01 	and s4, s4, 4
   508d4:	a2 00 52 c0 	add_i s5, s2, s4
   508d8:	85 40 00 a8 	load_32 s4, 16(s5)
   508dc:	c4 fe ff f5 	bnz s4, -40 <free+0x5d8>
   508e0:	78 40 00 a8 	load_32 s3, 16(s24)
   508e4:	05 40 00 05 	add_i s0, s5, 16
   508e8:	63 00 60 c1 	cmpgt_u s3, s3, s0
   508ec:	63 12 00 f4 	bnz s3, 588 <free+0x85c>
   508f0:	20 00 00 88 	store_32 s1, (s0)
   508f4:	41 60 00 88 	store_32 s2, 24(s1)
   508f8:	21 30 00 88 	store_32 s1, 12(s1)
   508fc:	21 20 00 88 	store_32 s1, 8(s1)
   50900:	18 80 00 a8 	load_32 s0, 32(s24)
   50904:	00 fc ff 05 	add_i s0, s0, -1
   50908:	18 80 00 88 	store_32 s0, 32(s24)
   5090c:	40 00 00 f4 	bnz s0, 8 <free+0x638>
   50910:	1e 00 00 f6 	b 120 <free+0x6ac>
   50914:	18 f0 06 a0 	load_u8 s0, 444(s24)
   50918:	00 08 00 01 	and s0, s0, 2
   5091c:	e0 00 00 f2 	bz s0, 28 <free+0x65c>
   50920:	18 00 07 05 	add_i s0, s24, 448
   50924:	20 00 00 0f 	move s1, 0
   50928:	40 00 00 aa 	load_sync s2, (s0)
   5092c:	40 80 f0 c0 	move s2, s1
   50930:	40 00 00 8a 	store_sync s2, (s0)  
   50934:	a2 ff ff f3 	bz s2, -12 <free+0x64c>
   50938:	fe e3 00 a8 	load_32 ra, 56(sp)
   5093c:	1e f3 00 a8 	load_32 s24, 60(sp)
   50940:	de 03 01 05 	add_i sp, sp, 64
   50944:	1f 00 00 f0 	ret
   50948:	02 20 00 a8 	load_32 s0, 8(s2)
   5094c:	78 40 00 a8 	load_32 s3, 16(s24)
   50950:	83 00 60 c1 	cmpgt_u s4, s3, s0
   50954:	24 0f 00 f4 	bnz s4, 484 <free+0x85c>
   50958:	63 00 61 c1 	cmpgt_u s3, s3, s2
   5095c:	e3 0e 00 f4 	bnz s3, 476 <free+0x85c>
   50960:	20 30 00 88 	store_32 s1, 12(s0)
   50964:	22 20 00 88 	store_32 s1, 8(s2)
   50968:	01 20 00 88 	store_32 s0, 8(s1)
   5096c:	00 00 00 0f 	move s0, 0
   50970:	41 30 00 88 	store_32 s2, 12(s1)
   50974:	01 60 00 88 	store_32 s0, 24(s1)
   50978:	18 80 00 a8 	load_32 s0, 32(s24)
   5097c:	00 fc ff 05 	add_i s0, s0, -1
   50980:	18 80 00 88 	store_32 s0, 32(s24)
   50984:	80 fc ff f5 	bnz s0, -112 <free+0x638>
   50988:	18 30 07 05 	add_i s0, s24, 460
   5098c:	20 00 00 a8 	load_32 s1, (s0)
   50990:	01 20 00 05 	add_i s0, s1, 8
   50994:	c1 ff ff f5 	bnz s1, -8 <free+0x6b0>
   50998:	00 fc ff 0f 	move s0, -1
   5099c:	18 80 00 88 	store_32 s0, 32(s24)
   509a0:	18 f0 06 a0 	load_u8 s0, 444(s24)
   509a4:	00 08 00 01 	and s0, s0, 2
   509a8:	80 fc ff f3 	bz s0, -112 <free+0x65c>
   509ac:	dd ff ff f7 	b -140 <free+0x644>
   509b0:	40 04 00 0f 	move s2, 1
   509b4:	98 00 00 a8 	load_32 s4, (s24)
   509b8:	42 00 b3 c0 	shl s2, s2, s6
   509bc:	42 fc ff 03 	xor s2, s2, -1
   509c0:	44 00 11 c0 	and s2, s4, s2
   509c4:	58 00 00 88 	store_32 s2, (s24)
   509c8:	48 00 00 f6 	b 288 <free+0x80c>
   509cc:	e2 50 00 a8 	load_32 s7, 20(s2)
   509d0:	47 00 00 f4 	bnz s7, 8 <free+0x6fc>
   509d4:	03 00 00 f6 	b 12 <free+0x704>
   509d8:	c2 50 00 05 	add_i s6, s2, 20
   509dc:	04 00 00 f6 	b 16 <free+0x710>
   509e0:	c2 40 00 05 	add_i s6, s2, 16
   509e4:	e6 00 00 a8 	load_32 s7, (s6)
   509e8:	27 0a 00 f2 	bz s7, 324 <free+0x850>
   509ec:	a0 80 f3 c0 	move s5, s7
   509f0:	e5 50 00 a8 	load_32 s7, 20(s5)
   509f4:	00 01 f3 c0 	move s8, s6
   509f8:	c5 50 00 05 	add_i s6, s5, 20
   509fc:	87 ff ff f5 	bnz s7, -16 <free+0x710>
   50a00:	e5 40 00 a8 	load_32 s7, 16(s5)
   50a04:	c5 40 00 05 	add_i s6, s5, 16
   50a08:	27 ff ff f5 	bnz s7, -28 <free+0x710>
   50a0c:	d8 40 00 a8 	load_32 s6, 16(s24)
   50a10:	c6 00 64 c1 	cmpgt_u s6, s6, s8
   50a14:	26 09 00 f4 	bnz s6, 292 <free+0x85c>
   50a18:	c0 00 00 0f 	move s6, 0
   50a1c:	c8 00 00 88 	store_32 s6, (s8)
   50a20:	44 06 00 f2 	bz s4, 200 <free+0x80c>
   50a24:	c2 70 00 a8 	load_32 s6, 28(s2)
   50a28:	e6 08 00 0b 	shl s7, s6, 2
   50a2c:	f8 80 53 c0 	add_i s7, s24, s7
   50a30:	07 c1 04 a8 	load_32 s8, 304(s7)
   50a34:	08 01 11 c1 	cmpne_i s8, s8, s2
   50a38:	48 00 00 f4 	bnz s8, 8 <free+0x764>
   50a3c:	0c 00 00 f6 	b 48 <free+0x790>
   50a40:	d8 40 00 a8 	load_32 s6, 16(s24)
   50a44:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   50a48:	86 07 00 f4 	bnz s6, 240 <free+0x85c>
   50a4c:	c4 40 00 a8 	load_32 s6, 16(s4)
   50a50:	c6 00 01 c1 	cmpeq_i s6, s6, s2
   50a54:	06 02 00 f4 	bnz s6, 64 <free+0x7b8>
   50a58:	c0 50 00 0f 	move s6, 20
   50a5c:	c4 00 53 c0 	add_i s6, s4, s6
   50a60:	a6 00 00 88 	store_32 s5, (s6)
   50a64:	25 04 00 f2 	bz s5, 132 <free+0x80c>
   50a68:	0f 00 00 f6 	b 60 <free+0x7c8>
   50a6c:	e7 c0 04 05 	add_i s7, s7, 304
   50a70:	a7 00 00 88 	store_32 s5, (s7)
   50a74:	85 01 00 f4 	bnz s5, 48 <free+0x7c8>
   50a78:	40 04 00 0f 	move s2, 1
   50a7c:	98 10 00 a8 	load_32 s4, 4(s24)
   50a80:	42 00 b3 c0 	shl s2, s2, s6
   50a84:	42 fc ff 03 	xor s2, s2, -1
   50a88:	44 00 11 c0 	and s2, s4, s2
   50a8c:	58 10 00 88 	store_32 s2, 4(s24)
   50a90:	16 00 00 f6 	b 88 <free+0x80c>
   50a94:	c0 40 00 0f 	move s6, 16
   50a98:	c4 00 53 c0 	add_i s6, s4, s6
   50a9c:	a6 00 00 88 	store_32 s5, (s6)
   50aa0:	45 02 00 f2 	bz s5, 72 <free+0x80c>
   50aa4:	d8 40 00 a8 	load_32 s6, 16(s24)
   50aa8:	e6 80 62 c1 	cmpgt_u s7, s6, s5
   50aac:	67 04 00 f4 	bnz s7, 140 <free+0x85c>
   50ab0:	85 60 00 88 	store_32 s4, 24(s5)
   50ab4:	82 40 00 a8 	load_32 s4, 16(s2)
   50ab8:	a4 00 00 f2 	bz s4, 20 <free+0x7f0>
   50abc:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   50ac0:	c6 03 00 f4 	bnz s6, 120 <free+0x85c>
   50ac4:	85 40 00 88 	store_32 s4, 16(s5)
   50ac8:	a4 60 00 88 	store_32 s5, 24(s4)
   50acc:	42 50 00 a8 	load_32 s2, 20(s2)
   50ad0:	c2 00 00 f2 	bz s2, 24 <free+0x80c>
   50ad4:	98 40 00 a8 	load_32 s4, 16(s24)
   50ad8:	84 00 61 c1 	cmpgt_u s4, s4, s2
   50adc:	e4 02 00 f4 	bnz s4, 92 <free+0x85c>
   50ae0:	45 50 00 88 	store_32 s2, 20(s5)
   50ae4:	a2 60 00 88 	store_32 s5, 24(s2)
   50ae8:	43 e0 ff 01 	and s2, s3, -8
   50aec:	02 00 50 c0 	add_i s0, s2, s0
   50af0:	41 00 50 c0 	add_i s2, s1, s0
   50af4:	60 04 00 00 	or s3, s0, 1
   50af8:	61 10 00 88 	store_32 s3, 4(s1)
   50afc:	02 00 00 88 	store_32 s0, (s2)
   50b00:	58 50 00 a8 	load_32 s2, 20(s24)
   50b04:	41 00 11 c1 	cmpne_i s2, s1, s2
   50b08:	82 db ff f5 	bnz s2, -1168 <free+0x39c>
   50b0c:	18 20 00 88 	store_32 s0, 8(s24)
   50b10:	18 f0 06 a0 	load_u8 s0, 444(s24)
   50b14:	00 08 00 01 	and s0, s0, 2
   50b18:	00 f1 ff f3 	bz s0, -480 <free+0x65c>
   50b1c:	81 ff ff f7 	b -508 <free+0x644>
   50b20:	80 00 00 0f 	move s4, 0
   50b24:	43 d4 ff f3 	bz s3, -1400 <free+0x2d0>
   50b28:	6e fe ff f7 	b -1608 <free+0x204>
   50b2c:	a0 00 00 0f 	move s5, 0
   50b30:	c4 fd ff f3 	bz s4, -72 <free+0x80c>
   50b34:	bc ff ff f7 	b -272 <free+0x748>
   50b38:	78 08 00 f8 	call 8672 <abort>

0000000000050b3c sys_trim:
   50b3c:	de 03 ff 05 	add_i sp, sp, -64
   50b40:	1e f3 00 88 	store_32 s24, 60(sp)
   50b44:	3e e3 00 88 	store_32 s25, 56(sp)
   50b48:	5e d3 00 88 	store_32 s26, 52(sp)
   50b4c:	7e c3 00 88 	store_32 s27, 48(sp)
   50b50:	fe b3 00 88 	store_32 ra, 44(sp)
   50b54:	2c 04 00 4f 	movehi s1, 44
   50b58:	61 53 05 00 	or s27, s1, 340
   50b5c:	3b 00 00 a8 	load_32 s1, (s27)
   50b60:	61 05 00 f4 	bnz s1, 172 <sys_trim+0xd0>
   50b64:	2c 04 00 4f 	movehi s1, 44
   50b68:	40 04 00 0f 	move s2, 1
   50b6c:	21 20 0d 00 	or s1, s1, 840
   50b70:	61 00 00 aa 	load_sync s3, (s1)
   50b74:	80 00 f1 c0 	move s4, s2
   50b78:	81 00 00 8a 	store_sync s4, (s1)  
   50b7c:	a4 ff ff f3 	bz s4, -12 <sys_trim+0x34>
   50b80:	03 01 00 f2 	bz s3, 32 <sys_trim+0x64>
   50b84:	61 00 00 a8 	load_32 s3, (s1)
   50b88:	e3 ff ff f5 	bnz s3, -4 <sys_trim+0x48>
   50b8c:	61 00 00 aa 	load_sync s3, (s1)
   50b90:	80 00 f1 c0 	move s4, s2
   50b94:	81 00 00 8a 	store_sync s4, (s1)  
   50b98:	a4 ff ff f3 	bz s4, -12 <sys_trim+0x50>
   50b9c:	43 ff ff f5 	bnz s3, -24 <sys_trim+0x48>
   50ba0:	5b 00 00 a8 	load_32 s2, (s27)
   50ba4:	a2 02 00 f4 	bnz s2, 84 <sys_trim+0xbc>
   50ba8:	40 00 40 0f 	move s2, 4096
   50bac:	5b 20 00 88 	store_32 s2, 8(s27)
   50bb0:	5b 10 00 88 	store_32 s2, 4(s27)
   50bb4:	40 fc ff 0f 	move s2, -1
   50bb8:	5b 30 00 88 	store_32 s2, 12(s27)
   50bbc:	4c 04 00 4f 	movehi s2, 44
   50bc0:	60 20 00 4f 	movehi s3, 256
   50bc4:	7b 40 00 88 	store_32 s3, 16(s27)
   50bc8:	60 08 00 0f 	move s3, 2
   50bcc:	7b 50 00 88 	store_32 s3, 20(s27)
   50bd0:	42 b0 05 00 	or s2, s2, 364
   50bd4:	aa 54 55 4f 	movehi s5, 174762
   50bd8:	80 00 00 0f 	move s4, 0
   50bdc:	62 f0 06 88 	store_32 s3, 444(s2)
   50be0:	7e a0 00 05 	add_i s3, sp, 40
   50be4:	82 00 07 88 	store_32 s4, 448(s2)
   50be8:	45 60 55 00 	or s2, s5, 5464
   50bec:	63 c0 ff 01 	and s3, s3, -16
   50bf0:	43 00 31 c0 	xor s2, s3, s2
   50bf4:	5b 00 00 88 	store_32 s2, (s27)
   50bf8:	40 00 00 0f 	move s2, 0
   50bfc:	61 00 00 aa 	load_sync s3, (s1)
   50c00:	60 00 f1 c0 	move s3, s2
   50c04:	61 00 00 8a 	store_sync s3, (s1)  
   50c08:	a3 ff ff f3 	bz s3, -12 <sys_trim+0xc0>
   50c0c:	20 fc fe 16 	cmpgt_u s1, s0, -65
   50c10:	60 00 00 0f 	move s3, 0
   50c14:	a1 0a 00 f4 	bnz s1, 340 <sys_trim+0x22c>
   50c18:	2c 04 00 4f 	movehi s1, 44
   50c1c:	81 b0 05 00 	or s4, s1, 364
   50c20:	44 63 00 a8 	load_32 s26, 24(s4)
   50c24:	3a 0a 00 f2 	bz s26, 324 <sys_trim+0x22c>
   50c28:	24 30 00 a8 	load_32 s1, 12(s4)
   50c2c:	40 a0 00 05 	add_i s2, s0, 40
   50c30:	41 00 91 c1 	cmple_u s2, s1, s2
   50c34:	e2 08 00 f4 	bnz s2, 284 <sys_trim+0x214>
   50c38:	40 5c ff 0f 	move s2, -41
   50c3c:	7e 80 00 88 	store_32 s3, 32(sp)
   50c40:	1b 23 00 a8 	load_32 s24, 8(s27)
   50c44:	02 00 60 c0 	sub_i s0, s2, s0
   50c48:	00 80 50 c0 	add_i s0, s0, s1
   50c4c:	20 00 fc c0 	move s1, s24
   50c50:	9e 90 00 88 	store_32 s4, 36(sp)
   50c54:	00 00 5c c0 	add_i s0, s0, s24
   50c58:	19 15 00 f8 	call 21604 <__udivsi3>
   50c5c:	9e 90 00 a8 	load_32 s4, 36(sp)
   50c60:	00 fc ff 05 	add_i s0, s0, -1
   50c64:	24 13 07 05 	add_i s25, s4, 452
   50c68:	39 00 00 a8 	load_32 s1, (s25)
   50c6c:	41 00 6d c1 	cmpgt_u s2, s1, s26
   50c70:	42 00 00 f4 	bnz s2, 8 <sys_trim+0x13c>
   50c74:	05 00 00 f6 	b 20 <sys_trim+0x14c>
   50c78:	39 23 00 a8 	load_32 s25, 8(s25)
   50c7c:	39 00 00 a8 	load_32 s1, (s25)
   50c80:	41 00 6d c1 	cmpgt_u s2, s1, s26
   50c84:	a2 ff ff f5 	bnz s2, -12 <sys_trim+0x13c>
   50c88:	59 10 00 a8 	load_32 s2, 4(s25)
   50c8c:	21 00 51 c0 	add_i s1, s1, s2
   50c90:	21 00 6d c1 	cmpgt_u s1, s1, s26
   50c94:	41 00 00 f4 	bnz s1, 8 <sys_trim+0x160>
   50c98:	f8 ff ff f7 	b -32 <sys_trim+0x13c>
   50c9c:	39 30 00 a0 	load_u8 s1, 12(s25)
   50ca0:	7e 80 00 a8 	load_32 s3, 32(sp)
   50ca4:	21 20 00 01 	and s1, s1, 8
   50ca8:	41 05 00 f4 	bnz s1, 168 <sys_trim+0x214>
   50cac:	3f fc 7f 4f 	movehi s1, 262143
   50cb0:	40 00 7c c0 	mull_i s2, s0, s24
   50cb4:	01 f8 7f 00 	or s0, s1, 8190
   50cb8:	02 00 60 c1 	cmpgt_u s0, s2, s0
   50cbc:	40 00 00 f4 	bnz s0, 8 <sys_trim+0x188>
   50cc0:	03 00 00 f6 	b 12 <sys_trim+0x190>
   50cc4:	00 00 80 4f 	movehi s0, 262144
   50cc8:	40 00 6c c0 	sub_i s2, s0, s24
   50ccc:	0c 04 00 4f 	movehi s0, 44
   50cd0:	00 07 00 0f 	move s24, 1
   50cd4:	40 23 0d 00 	or s26, s0, 840
   50cd8:	1a 00 00 aa 	load_sync s0, (s26)
   50cdc:	20 00 fc c0 	move s1, s24
   50ce0:	3a 00 00 8a 	store_sync s1, (s26)  
   50ce4:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x19c>
   50ce8:	5e 60 00 88 	store_32 s2, 24(sp)
   50cec:	00 01 00 f2 	bz s0, 32 <sys_trim+0x1d0>
   50cf0:	1a 00 00 a8 	load_32 s0, (s26)
   50cf4:	e0 ff ff f5 	bnz s0, -4 <sys_trim+0x1b4>
   50cf8:	1a 00 00 aa 	load_sync s0, (s26)
   50cfc:	20 00 fc c0 	move s1, s24
   50d00:	3a 00 00 8a 	store_sync s1, (s26)  
   50d04:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x1bc>
   50d08:	40 ff ff f5 	bnz s0, -24 <sys_trim+0x1b4>
   50d0c:	00 00 00 0f 	move s0, 0
   50d10:	1e 70 00 88 	store_32 s0, 28(sp)
   50d14:	b7 0b 00 f8 	call 11996 <sbrk>
   50d18:	39 00 00 a8 	load_32 s1, (s25)
   50d1c:	59 10 00 a8 	load_32 s2, 4(s25)
   50d20:	60 00 f0 c0 	move s3, s0
   50d24:	01 00 51 c0 	add_i s0, s1, s2
   50d28:	03 00 10 c1 	cmpne_i s0, s3, s0
   50d2c:	40 00 00 f4 	bnz s0, 8 <sys_trim+0x1f8>
   50d30:	17 00 00 f6 	b 92 <sys_trim+0x250>
   50d34:	9e 90 00 a8 	load_32 s4, 36(sp)
   50d38:	7e 80 00 a8 	load_32 s3, 32(sp)
   50d3c:	3e 70 00 a8 	load_32 s1, 28(sp)
   50d40:	1a 00 00 aa 	load_sync s0, (s26)
   50d44:	00 80 f0 c0 	move s0, s1
   50d48:	1a 00 00 8a 	store_sync s0, (s26)  
   50d4c:	a0 ff ff f3 	bz s0, -12 <sys_trim+0x204>
   50d50:	04 30 00 a8 	load_32 s0, 12(s4)
   50d54:	24 70 00 a8 	load_32 s1, 28(s4)
   50d58:	00 80 90 c1 	cmple_u s0, s0, s1
   50d5c:	60 00 00 f4 	bnz s0, 12 <sys_trim+0x22c>
   50d60:	00 fc ff 0f 	move s0, -1
   50d64:	04 70 00 88 	store_32 s0, 28(s4)
   50d68:	00 83 f1 c0 	move s24, s3
   50d6c:	00 00 fc c0 	move s0, s24
   50d70:	fe b3 00 a8 	load_32 ra, 44(sp)
   50d74:	7e c3 00 a8 	load_32 s27, 48(sp)
   50d78:	5e d3 00 a8 	load_32 s26, 52(sp)
   50d7c:	3e e3 00 a8 	load_32 s25, 56(sp)
   50d80:	1e f3 00 a8 	load_32 s24, 60(sp)
   50d84:	de 03 01 05 	add_i sp, sp, 64
   50d88:	1f 00 00 f0 	ret
   50d8c:	1e 60 00 a8 	load_32 s0, 24(sp)
   50d90:	3e 70 00 a8 	load_32 s1, 28(sp)
   50d94:	7e 60 00 88 	store_32 s3, 24(sp)
   50d98:	01 00 60 c0 	sub_i s0, s1, s0
   50d9c:	95 0b 00 f8 	call 11860 <sbrk>
   50da0:	1e 50 00 88 	store_32 s0, 20(sp)
   50da4:	1e 70 00 a8 	load_32 s0, 28(sp)
   50da8:	92 0b 00 f8 	call 11848 <sbrk>
   50dac:	5e 60 00 a8 	load_32 s2, 24(sp)
   50db0:	3e 50 00 a8 	load_32 s1, 20(sp)
   50db4:	21 fc ff 10 	cmpeq_i s1, s1, -1
   50db8:	e1 fb ff f5 	bnz s1, -132 <sys_trim+0x1f8>
   50dbc:	20 00 81 c1 	cmplt_u s1, s0, s2
   50dc0:	41 00 00 f4 	bnz s1, 8 <sys_trim+0x28c>
   50dc4:	dc ff ff f7 	b -144 <sys_trim+0x1f8>
   50dc8:	be 70 00 a8 	load_32 s5, 28(sp)
   50dcc:	02 00 60 c0 	sub_i s0, s2, s0
   50dd0:	3a 00 00 aa 	load_sync s1, (s26)
   50dd4:	20 80 f2 c0 	move s1, s5
   50dd8:	3a 00 00 8a 	store_sync s1, (s26)  
   50ddc:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x294>
   50de0:	9e 90 00 a8 	load_32 s4, 36(sp)
   50de4:	7e 80 00 a8 	load_32 s3, 32(sp)
   50de8:	40 fb ff f3 	bz s0, -152 <sys_trim+0x214>
   50dec:	39 10 00 a8 	load_32 s1, 4(s25)
   50df0:	21 00 60 c0 	sub_i s1, s1, s0
   50df4:	39 10 00 88 	store_32 s1, 4(s25)
   50df8:	24 c0 06 a8 	load_32 s1, 432(s4)
   50dfc:	21 00 60 c0 	sub_i s1, s1, s0
   50e00:	24 c0 06 88 	store_32 s1, 432(s4)
   50e04:	24 60 00 a8 	load_32 s1, 24(s4)
   50e08:	64 30 00 a8 	load_32 s3, 12(s4)
   50e0c:	41 20 00 05 	add_i s2, s1, 8
   50e10:	03 00 60 c0 	sub_i s0, s3, s0
   50e14:	42 1c 00 01 	and s2, s2, 7
   50e18:	42 00 00 10 	cmpeq_i s2, s2, 0
   50e1c:	82 00 00 f4 	bnz s2, 16 <sys_trim+0x2f0>
   50e20:	40 e0 ff 0f 	move s2, -8
   50e24:	42 80 60 c0 	sub_i s2, s2, s1
   50e28:	a2 1c 00 01 	and s5, s2, 7
   50e2c:	41 80 52 c0 	add_i s2, s1, s5
   50e30:	44 60 00 88 	store_32 s2, 24(s4)
   50e34:	60 80 62 c0 	sub_i s3, s0, s5
   50e38:	64 30 00 88 	store_32 s3, 12(s4)
   50e3c:	01 00 50 c0 	add_i s0, s1, s0
   50e40:	20 a0 00 0f 	move s1, 40
   50e44:	63 04 00 00 	or s3, s3, 1
   50e48:	62 10 00 88 	store_32 s3, 4(s2)
   50e4c:	20 10 00 88 	store_32 s1, 4(s0)
   50e50:	1b 40 00 a8 	load_32 s0, 16(s27)
   50e54:	04 70 00 88 	store_32 s0, 28(s4)
   50e58:	c5 ff ff f7 	b -236 <sys_trim+0x230>

0000000000050e5c calloc:
   50e5c:	de 03 ff 05 	add_i sp, sp, -64
   50e60:	1e f3 00 88 	store_32 s24, 60(sp)
   50e64:	3e e3 00 88 	store_32 s25, 56(sp)
   50e68:	fe d3 00 88 	store_32 ra, 52(sp)
   50e6c:	20 83 f0 c0 	move s25, s1
   50e70:	20 00 f0 c0 	move s1, s0
   50e74:	81 01 00 f2 	bz s1, 48 <calloc+0x48>
   50e78:	19 80 00 c0 	or s0, s25, s1
   50e7c:	48 00 00 4f 	movehi s2, 8
   50e80:	19 83 70 c0 	mull_i s24, s25, s1
   50e84:	00 00 81 c1 	cmplt_u s0, s0, s2
   50e88:	00 01 00 f4 	bnz s0, 32 <calloc+0x4c>
   50e8c:	00 00 fc c0 	move s0, s24
   50e90:	8b 14 00 f8 	call 21036 <__udivsi3>
   50e94:	00 80 0c c1 	cmpeq_i s0, s0, s25
   50e98:	80 00 00 f4 	bnz s0, 16 <calloc+0x4c>
   50e9c:	00 ff ff 0f 	move s24, -1
   50ea0:	02 00 00 f6 	b 8 <calloc+0x4c>
   50ea4:	00 03 00 0f 	move s24, 0
   50ea8:	00 00 fc c0 	move s0, s24
   50eac:	82 f5 ff f9 	call -10744 <malloc>
   50eb0:	fe d3 00 a8 	load_32 ra, 52(sp)
   50eb4:	3e e3 00 a8 	load_32 s25, 56(sp)
   50eb8:	1e f3 00 a8 	load_32 s24, 60(sp)
   50ebc:	de 03 01 05 	add_i sp, sp, 64
   50ec0:	1f 00 00 f0 	ret

0000000000050ec4 realloc:
   50ec4:	de 03 ff 05 	add_i sp, sp, -64
   50ec8:	1e f3 00 88 	store_32 s24, 60(sp)
   50ecc:	3e e3 00 88 	store_32 s25, 56(sp)
   50ed0:	5e d3 00 88 	store_32 s26, 52(sp)
   50ed4:	7e c3 00 88 	store_32 s27, 48(sp)
   50ed8:	fe b3 00 88 	store_32 ra, 44(sp)
   50edc:	20 83 f0 c0 	move s25, s1
   50ee0:	00 03 f0 c0 	move s24, s0
   50ee4:	58 00 00 f4 	bnz s24, 8 <realloc+0x28>
   50ee8:	09 00 00 f6 	b 36 <realloc+0x48>
   50eec:	19 fc fe 16 	cmpgt_u s0, s25, -65
   50ef0:	40 03 00 0f 	move s26, 0
   50ef4:	a0 08 00 f4 	bnz s0, 276 <realloc+0x144>
   50ef8:	19 2c 00 18 	cmplt_u s0, s25, 11
   50efc:	00 01 00 f4 	bnz s0, 32 <realloc+0x58>
   50f00:	19 2c 00 05 	add_i s0, s25, 11
   50f04:	20 e0 ff 01 	and s1, s0, -8
   50f08:	06 00 00 f6 	b 24 <realloc+0x5c>
   50f0c:	00 80 fc c0 	move s0, s25
   50f10:	69 f5 ff f9 	call -10844 <malloc>
   50f14:	40 03 f0 c0 	move s26, s0
   50f18:	3c 00 00 f6 	b 240 <realloc+0x144>
   50f1c:	20 40 00 0f 	move s1, 16
   50f20:	0c 04 00 4f 	movehi s0, 44
   50f24:	60 b3 05 00 	or s27, s0, 364
   50f28:	1b f0 06 a0 	load_u8 s0, 444(s27)
   50f2c:	40 08 00 01 	and s2, s0, 2
   50f30:	18 e0 ff 05 	add_i s0, s24, -8
   50f34:	e2 01 00 f2 	bz s2, 60 <realloc+0xac>
   50f38:	5b 00 07 05 	add_i s2, s27, 448
   50f3c:	60 04 00 0f 	move s3, 1
   50f40:	82 00 00 aa 	load_sync s4, (s2)
   50f44:	a0 80 f1 c0 	move s5, s3
   50f48:	a2 00 00 8a 	store_sync s5, (s2)  
   50f4c:	a5 ff ff f3 	bz s5, -12 <realloc+0x7c>
   50f50:	04 01 00 f2 	bz s4, 32 <realloc+0xac>
   50f54:	9b 00 07 a8 	load_32 s4, 448(s27)
   50f58:	e4 ff ff f5 	bnz s4, -4 <realloc+0x90>
   50f5c:	82 00 00 aa 	load_sync s4, (s2)
   50f60:	a0 80 f1 c0 	move s5, s3
   50f64:	a2 00 00 8a 	store_sync s5, (s2)  
   50f68:	a5 ff ff f3 	bz s5, -12 <realloc+0x98>
   50f6c:	44 ff ff f5 	bnz s4, -24 <realloc+0x90>
   50f70:	2e 00 00 f8 	call 184 <try_realloc_chunk>
   50f74:	3b f0 06 a0 	load_u8 s1, 444(s27)
   50f78:	21 08 00 01 	and s1, s1, 2
   50f7c:	e1 00 00 f2 	bz s1, 28 <realloc+0xd4>
   50f80:	3b 00 07 05 	add_i s1, s27, 448
   50f84:	40 00 00 0f 	move s2, 0
   50f88:	61 00 00 aa 	load_sync s3, (s1)
   50f8c:	60 00 f1 c0 	move s3, s2
   50f90:	61 00 00 8a 	store_sync s3, (s1)  
   50f94:	a3 ff ff f3 	bz s3, -12 <realloc+0xc4>
   50f98:	60 00 00 f2 	bz s0, 12 <realloc+0xe0>
   50f9c:	40 23 00 05 	add_i s26, s0, 8
   50fa0:	1a 00 00 f6 	b 104 <realloc+0x144>
   50fa4:	00 80 fc c0 	move s0, s25
   50fa8:	43 f5 ff f9 	call -10996 <malloc>
   50fac:	60 03 f0 c0 	move s27, s0
   50fb0:	db 02 00 f2 	bz s27, 88 <realloc+0x144>
   50fb4:	18 f0 ff a9 	load_32 s0, -4(s24)
   50fb8:	20 0c 00 01 	and s1, s0, 3
   50fbc:	00 e0 ff 01 	and s0, s0, -8
   50fc0:	21 00 00 10 	cmpeq_i s1, s1, 0
   50fc4:	c1 00 00 f4 	bnz s1, 24 <realloc+0x118>
   50fc8:	20 10 00 0f 	move s1, 4
   50fcc:	40 80 60 c0 	sub_i s2, s0, s1
   50fd0:	02 80 8c c1 	cmplt_u s0, s2, s25
   50fd4:	e0 00 00 f4 	bnz s0, 28 <realloc+0x12c>
   50fd8:	05 00 00 f6 	b 20 <realloc+0x128>
   50fdc:	20 20 00 0f 	move s1, 8
   50fe0:	40 80 60 c0 	sub_i s2, s0, s1
   50fe4:	02 80 8c c1 	cmplt_u s0, s2, s25
   50fe8:	40 00 00 f4 	bnz s0, 8 <realloc+0x12c>
   50fec:	40 80 fc c0 	move s2, s25
   50ff0:	00 80 fd c0 	move s0, s27
   50ff4:	20 00 fc c0 	move s1, s24
   50ff8:	a9 07 00 f8 	call 7844 <memcpy>
   50ffc:	00 00 fc c0 	move s0, s24
   51000:	b7 fc ff f9 	call -3364 <free>
   51004:	40 83 fd c0 	move s26, s27
   51008:	00 00 fd c0 	move s0, s26
   5100c:	fe b3 00 a8 	load_32 ra, 44(sp)
   51010:	7e c3 00 a8 	load_32 s27, 48(sp)
   51014:	5e d3 00 a8 	load_32 s26, 52(sp)
   51018:	3e e3 00 a8 	load_32 s25, 56(sp)
   5101c:	1e f3 00 a8 	load_32 s24, 60(sp)
   51020:	de 03 01 05 	add_i sp, sp, 64
   51024:	1f 00 00 f0 	ret

0000000000051028 try_realloc_chunk:
   51028:	de 03 ff 05 	add_i sp, sp, -64
   5102c:	1e f3 00 88 	store_32 s24, 60(sp)
   51030:	fe e3 00 88 	store_32 ra, 56(sp)
   51034:	00 03 f0 c0 	move s24, s0
   51038:	4c 04 00 4f 	movehi s2, 44
   5103c:	78 10 00 a8 	load_32 s3, 4(s24)
   51040:	42 b0 05 00 	or s2, s2, 364
   51044:	03 0c 00 01 	and s0, s3, 3
   51048:	c2 40 00 a8 	load_32 s6, 16(s2)
   5104c:	80 04 00 10 	cmpeq_i s4, s0, 1
   51050:	84 24 00 f4 	bnz s4, 1168 <try_realloc_chunk+0x4b8>
   51054:	86 00 6c c1 	cmpgt_u s4, s6, s24
   51058:	44 24 00 f4 	bnz s4, 1160 <try_realloc_chunk+0x4b8>
   5105c:	83 e0 ff 01 	and s4, s3, -8
   51060:	b8 00 52 c0 	add_i s5, s24, s4
   51064:	e5 00 9c c1 	cmple_u s7, s5, s24
   51068:	c7 23 00 f4 	bnz s7, 1144 <try_realloc_chunk+0x4b8>
   5106c:	e5 10 00 a8 	load_32 s7, 4(s5)
   51070:	07 05 00 01 	and s8, s7, 1
   51074:	68 23 00 f2 	bz s8, 1132 <try_realloc_chunk+0x4b8>
   51078:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x58>
   5107c:	32 00 00 f6 	b 200 <try_realloc_chunk+0x11c>
   51080:	04 80 80 c1 	cmplt_u s0, s4, s1
   51084:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x64>
   51088:	38 00 00 f6 	b 224 <try_realloc_chunk+0x140>
   5108c:	02 60 00 a8 	load_32 s0, 24(s2)
   51090:	00 80 12 c1 	cmpne_i s0, s0, s5
   51094:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x74>
   51098:	54 00 00 f6 	b 336 <try_realloc_chunk+0x1c0>
   5109c:	02 50 00 a8 	load_32 s0, 20(s2)
   510a0:	00 80 12 c1 	cmpne_i s0, s0, s5
   510a4:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x84>
   510a8:	5f 00 00 f6 	b 380 <try_realloc_chunk+0x1fc>
   510ac:	07 09 00 01 	and s8, s7, 2
   510b0:	00 00 00 0f 	move s0, 0
   510b4:	28 09 00 f4 	bnz s8, 292 <try_realloc_chunk+0x1b0>
   510b8:	07 e1 ff 01 	and s8, s7, -8
   510bc:	88 00 52 c0 	add_i s4, s8, s4
   510c0:	04 81 80 c1 	cmplt_u s8, s4, s1
   510c4:	a8 08 00 f4 	bnz s8, 276 <try_realloc_chunk+0x1b0>
   510c8:	07 fc 03 16 	cmpgt_u s0, s7, 255
   510cc:	40 10 00 f4 	bnz s0, 520 <try_realloc_chunk+0x2ac>
   510d0:	07 0d 00 0a 	shr s8, s7, 3
   510d4:	05 20 00 a8 	load_32 s0, 8(s5)
   510d8:	e8 0c 00 0b 	shl s7, s8, 3
   510dc:	e2 80 53 c0 	add_i s7, s2, s7
   510e0:	27 a1 00 05 	add_i s9, s7, 40
   510e4:	e5 30 00 a8 	load_32 s7, 12(s5)
   510e8:	40 81 04 c1 	cmpeq_i s10, s0, s9
   510ec:	ca 00 00 f4 	bnz s10, 24 <try_realloc_chunk+0xdc>
   510f0:	46 01 60 c1 	cmpgt_u s10, s6, s0
   510f4:	6a 1f 00 f4 	bnz s10, 1004 <try_realloc_chunk+0x4b8>
   510f8:	40 31 00 a8 	load_32 s10, 12(s0)
   510fc:	4a 81 12 c1 	cmpne_i s10, s10, s5
   51100:	0a 1f 00 f4 	bnz s10, 992 <try_realloc_chunk+0x4b8>
   51104:	47 01 10 c1 	cmpne_i s10, s7, s0
   51108:	4a 00 00 f4 	bnz s10, 8 <try_realloc_chunk+0xe8>
   5110c:	83 00 00 f6 	b 524 <try_realloc_chunk+0x2f0>
   51110:	47 80 04 c1 	cmpeq_i s2, s7, s9
   51114:	c2 00 00 f4 	bnz s2, 24 <try_realloc_chunk+0x104>
   51118:	46 80 63 c1 	cmpgt_u s2, s6, s7
   5111c:	22 1e 00 f4 	bnz s2, 964 <try_realloc_chunk+0x4b8>
   51120:	47 20 00 a8 	load_32 s2, 8(s7)
   51124:	42 80 12 c1 	cmpne_i s2, s2, s5
   51128:	c2 1d 00 f4 	bnz s2, 952 <try_realloc_chunk+0x4b8>
   5112c:	e0 30 00 88 	store_32 s7, 12(s0)
   51130:	07 20 00 88 	store_32 s0, 8(s7)
   51134:	44 80 60 c0 	sub_i s2, s4, s1
   51138:	02 3c 00 16 	cmpgt_u s0, s2, 15
   5113c:	40 1b 00 f4 	bnz s0, 872 <try_realloc_chunk+0x47c>
   51140:	cc 00 00 f6 	b 816 <try_realloc_chunk+0x448>
   51144:	01 00 04 18 	cmplt_u s0, s1, 256
   51148:	40 00 00 0f 	move s2, 0
   5114c:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x12c>
   51150:	16 00 00 f6 	b 88 <try_realloc_chunk+0x180>
   51154:	00 00 f1 c0 	move s0, s2
   51158:	fe e3 00 a8 	load_32 ra, 56(sp)
   5115c:	1e f3 00 a8 	load_32 s24, 60(sp)
   51160:	de 03 01 05 	add_i sp, sp, 64
   51164:	1f 00 00 f0 	ret
   51168:	44 80 60 c0 	sub_i s2, s4, s1
   5116c:	02 40 00 18 	cmplt_u s0, s2, 16
   51170:	00 19 00 f4 	bnz s0, 800 <try_realloc_chunk+0x468>
   51174:	03 04 00 01 	and s0, s3, 1
   51178:	60 80 00 c0 	or s3, s0, s1
   5117c:	18 80 50 c0 	add_i s0, s24, s1
   51180:	23 08 00 00 	or s1, s3, 2
   51184:	38 10 00 88 	store_32 s1, 4(s24)
   51188:	22 0c 00 00 	or s1, s2, 3
   5118c:	20 10 00 88 	store_32 s1, 4(s0)
   51190:	25 10 00 a8 	load_32 s1, 4(s5)
   51194:	21 04 00 00 	or s1, s1, 1
   51198:	25 10 00 88 	store_32 s1, 4(s5)
   5119c:	20 00 f1 c0 	move s1, s2
   511a0:	07 05 00 f8 	call 5148 <dispose_chunk>
   511a4:	bb 00 00 f6 	b 748 <try_realloc_chunk+0x468>
   511a8:	01 10 00 05 	add_i s0, s1, 4
   511ac:	04 00 80 c1 	cmplt_u s0, s4, s0
   511b0:	20 01 00 f4 	bnz s0, 36 <try_realloc_chunk+0x1ac>
   511b4:	0c 04 00 4f 	movehi s0, 44
   511b8:	24 80 60 c0 	sub_i s1, s4, s1
   511bc:	00 50 05 00 	or s0, s0, 340
   511c0:	00 20 00 a8 	load_32 s0, 8(s0)
   511c4:	00 04 00 0b 	shl s0, s0, 1
   511c8:	21 00 90 c1 	cmple_u s1, s1, s0
   511cc:	00 00 fc c0 	move s0, s24
   511d0:	41 00 00 f4 	bnz s1, 8 <try_realloc_chunk+0x1b0>
   511d4:	00 00 f1 c0 	move s0, s2
   511d8:	fe e3 00 a8 	load_32 ra, 56(sp)
   511dc:	1e f3 00 a8 	load_32 s24, 60(sp)
   511e0:	de 03 01 05 	add_i sp, sp, 64
   511e4:	1f 00 00 f0 	ret
   511e8:	02 30 00 a8 	load_32 s0, 12(s2)
   511ec:	00 00 52 c0 	add_i s0, s0, s4
   511f0:	80 80 90 c1 	cmple_u s4, s0, s1
   511f4:	c4 02 00 f4 	bnz s4, 88 <try_realloc_chunk+0x224>
   511f8:	63 04 00 01 	and s3, s3, 1
   511fc:	00 80 60 c0 	sub_i s0, s0, s1
   51200:	63 80 00 c0 	or s3, s3, s1
   51204:	38 80 50 c0 	add_i s1, s24, s1
   51208:	63 08 00 00 	or s3, s3, 2
   5120c:	78 10 00 88 	store_32 s3, 4(s24)
   51210:	60 04 00 00 	or s3, s0, 1
   51214:	61 10 00 88 	store_32 s3, 4(s1)
   51218:	22 60 00 88 	store_32 s1, 24(s2)
   5121c:	02 30 00 88 	store_32 s0, 12(s2)
   51220:	9c 00 00 f6 	b 624 <try_realloc_chunk+0x468>
   51224:	02 20 00 a8 	load_32 s0, 8(s2)
   51228:	80 00 52 c0 	add_i s4, s0, s4
   5122c:	04 80 80 c1 	cmplt_u s0, s4, s1
   51230:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x210>
   51234:	0b 00 00 f6 	b 44 <try_realloc_chunk+0x238>
   51238:	00 00 00 0f 	move s0, 0
   5123c:	fe e3 00 a8 	load_32 ra, 56(sp)
   51240:	1e f3 00 a8 	load_32 s24, 60(sp)
   51244:	de 03 01 05 	add_i sp, sp, 64
   51248:	1f 00 00 f0 	ret
   5124c:	00 00 00 0f 	move s0, 0
   51250:	fe e3 00 a8 	load_32 ra, 56(sp)
   51254:	1e f3 00 a8 	load_32 s24, 60(sp)
   51258:	de 03 01 05 	add_i sp, sp, 64
   5125c:	1f 00 00 f0 	ret
   51260:	04 80 60 c0 	sub_i s0, s4, s1
   51264:	a0 40 00 18 	cmplt_u s5, s0, 16
   51268:	c5 01 00 f4 	bnz s5, 56 <try_realloc_chunk+0x278>
   5126c:	63 04 00 01 	and s3, s3, 1
   51270:	98 00 52 c0 	add_i s4, s24, s4
   51274:	63 80 00 c0 	or s3, s3, s1
   51278:	38 80 50 c0 	add_i s1, s24, s1
   5127c:	63 08 00 00 	or s3, s3, 2
   51280:	78 10 00 88 	store_32 s3, 4(s24)
   51284:	60 04 00 00 	or s3, s0, 1
   51288:	61 10 00 88 	store_32 s3, 4(s1)
   5128c:	04 00 00 88 	store_32 s0, (s4)
   51290:	64 10 00 a8 	load_32 s3, 4(s4)
   51294:	63 f8 ff 01 	and s3, s3, -2
   51298:	64 10 00 88 	store_32 s3, 4(s4)
   5129c:	0b 00 00 f6 	b 44 <try_realloc_chunk+0x2a0>
   512a0:	03 04 00 01 	and s0, s3, 1
   512a4:	38 00 52 c0 	add_i s1, s24, s4
   512a8:	00 00 02 c0 	or s0, s0, s4
   512ac:	00 08 00 00 	or s0, s0, 2
   512b0:	18 10 00 88 	store_32 s0, 4(s24)
   512b4:	01 10 00 a8 	load_32 s0, 4(s1)
   512b8:	60 04 00 00 	or s3, s0, 1
   512bc:	61 10 00 88 	store_32 s3, 4(s1)
   512c0:	00 00 00 0f 	move s0, 0
   512c4:	20 00 f0 c0 	move s1, s0
   512c8:	02 20 00 88 	store_32 s0, 8(s2)
   512cc:	22 50 00 88 	store_32 s1, 20(s2)
   512d0:	70 00 00 f6 	b 448 <try_realloc_chunk+0x468>
   512d4:	05 60 00 a8 	load_32 s0, 24(s5)
   512d8:	e5 30 00 a8 	load_32 s7, 12(s5)
   512dc:	07 81 02 c1 	cmpeq_i s8, s7, s5
   512e0:	08 03 00 f4 	bnz s8, 96 <try_realloc_chunk+0x318>
   512e4:	05 21 00 a8 	load_32 s8, 8(s5)
   512e8:	c6 00 64 c1 	cmpgt_u s6, s6, s8
   512ec:	a6 0f 00 f4 	bnz s6, 500 <try_realloc_chunk+0x4b8>
   512f0:	c8 30 00 a8 	load_32 s6, 12(s8)
   512f4:	c6 80 12 c1 	cmpne_i s6, s6, s5
   512f8:	46 0f 00 f4 	bnz s6, 488 <try_realloc_chunk+0x4b8>
   512fc:	c7 20 00 a8 	load_32 s6, 8(s7)
   51300:	c6 80 12 c1 	cmpne_i s6, s6, s5
   51304:	e6 0e 00 f4 	bnz s6, 476 <try_realloc_chunk+0x4b8>
   51308:	e8 30 00 88 	store_32 s7, 12(s8)
   5130c:	07 21 00 88 	store_32 s8, 8(s7)
   51310:	a0 0a 00 f2 	bz s0, 340 <try_realloc_chunk+0x43c>
   51314:	20 00 00 f6 	b 128 <try_realloc_chunk+0x36c>
   51318:	00 04 00 0f 	move s0, 1
   5131c:	a2 00 00 a8 	load_32 s5, (s2)
   51320:	00 00 b4 c0 	shl s0, s0, s8
   51324:	00 fc ff 03 	xor s0, s0, -1
   51328:	05 00 10 c0 	and s0, s5, s0
   5132c:	02 00 00 88 	store_32 s0, (s2)
   51330:	44 80 60 c0 	sub_i s2, s4, s1
   51334:	02 3c 00 16 	cmpgt_u s0, s2, 15
   51338:	60 0b 00 f4 	bnz s0, 364 <try_realloc_chunk+0x47c>
   5133c:	4d 00 00 f6 	b 308 <try_realloc_chunk+0x448>
   51340:	25 51 00 a8 	load_32 s9, 20(s5)
   51344:	49 00 00 f4 	bnz s9, 8 <try_realloc_chunk+0x324>
   51348:	03 00 00 f6 	b 12 <try_realloc_chunk+0x32c>
   5134c:	05 51 00 05 	add_i s8, s5, 20
   51350:	04 00 00 f6 	b 16 <try_realloc_chunk+0x338>
   51354:	05 41 00 05 	add_i s8, s5, 16
   51358:	28 01 00 a8 	load_32 s9, (s8)
   5135c:	c9 0b 00 f2 	bz s9, 376 <try_realloc_chunk+0x4ac>
   51360:	e0 80 f4 c0 	move s7, s9
   51364:	27 51 00 a8 	load_32 s9, 20(s7)
   51368:	40 01 f4 c0 	move s10, s8
   5136c:	07 51 00 05 	add_i s8, s7, 20
   51370:	89 ff ff f5 	bnz s9, -16 <try_realloc_chunk+0x338>
   51374:	27 41 00 a8 	load_32 s9, 16(s7)
   51378:	07 41 00 05 	add_i s8, s7, 16
   5137c:	29 ff ff f5 	bnz s9, -28 <try_realloc_chunk+0x338>
   51380:	c6 00 65 c1 	cmpgt_u s6, s6, s10
   51384:	e6 0a 00 f4 	bnz s6, 348 <try_realloc_chunk+0x4b8>
   51388:	c0 00 00 0f 	move s6, 0
   5138c:	ca 00 00 88 	store_32 s6, (s10)
   51390:	a0 06 00 f2 	bz s0, 212 <try_realloc_chunk+0x43c>
   51394:	c5 70 00 a8 	load_32 s6, 28(s5)
   51398:	06 09 00 0b 	shl s8, s6, 2
   5139c:	02 01 54 c0 	add_i s8, s2, s8
   513a0:	28 c1 04 a8 	load_32 s9, 304(s8)
   513a4:	29 81 12 c1 	cmpne_i s9, s9, s5
   513a8:	49 00 00 f4 	bnz s9, 8 <try_realloc_chunk+0x388>
   513ac:	0c 00 00 f6 	b 48 <try_realloc_chunk+0x3b4>
   513b0:	c2 40 00 a8 	load_32 s6, 16(s2)
   513b4:	c6 00 60 c1 	cmpgt_u s6, s6, s0
   513b8:	46 09 00 f4 	bnz s6, 296 <try_realloc_chunk+0x4b8>
   513bc:	c0 40 00 a8 	load_32 s6, 16(s0)
   513c0:	c6 80 02 c1 	cmpeq_i s6, s6, s5
   513c4:	66 02 00 f4 	bnz s6, 76 <try_realloc_chunk+0x3e8>
   513c8:	c0 50 00 0f 	move s6, 20
   513cc:	c0 00 53 c0 	add_i s6, s0, s6
   513d0:	e6 00 00 88 	store_32 s7, (s6)
   513d4:	87 04 00 f2 	bz s7, 144 <try_realloc_chunk+0x43c>
   513d8:	12 00 00 f6 	b 72 <try_realloc_chunk+0x3f8>
   513dc:	08 c1 04 05 	add_i s8, s8, 304
   513e0:	e8 00 00 88 	store_32 s7, (s8)
   513e4:	e7 01 00 f4 	bnz s7, 60 <try_realloc_chunk+0x3f8>
   513e8:	00 04 00 0f 	move s0, 1
   513ec:	a2 10 00 a8 	load_32 s5, 4(s2)
   513f0:	00 00 b3 c0 	shl s0, s0, s6
   513f4:	00 fc ff 03 	xor s0, s0, -1
   513f8:	05 00 10 c0 	and s0, s5, s0
   513fc:	02 10 00 88 	store_32 s0, 4(s2)
   51400:	44 80 60 c0 	sub_i s2, s4, s1
   51404:	02 3c 00 16 	cmpgt_u s0, s2, 15
   51408:	e0 04 00 f4 	bnz s0, 156 <try_realloc_chunk+0x47c>
   5140c:	19 00 00 f6 	b 100 <try_realloc_chunk+0x448>
   51410:	c0 40 00 0f 	move s6, 16
   51414:	c0 00 53 c0 	add_i s6, s0, s6
   51418:	e6 00 00 88 	store_32 s7, (s6)
   5141c:	47 02 00 f2 	bz s7, 72 <try_realloc_chunk+0x43c>
   51420:	c2 40 00 a8 	load_32 s6, 16(s2)
   51424:	06 81 63 c1 	cmpgt_u s8, s6, s7
   51428:	c8 05 00 f4 	bnz s8, 184 <try_realloc_chunk+0x4b8>
   5142c:	07 60 00 88 	store_32 s0, 24(s7)
   51430:	05 40 00 a8 	load_32 s0, 16(s5)
   51434:	a0 00 00 f2 	bz s0, 20 <try_realloc_chunk+0x420>
   51438:	c6 00 60 c1 	cmpgt_u s6, s6, s0
   5143c:	26 05 00 f4 	bnz s6, 164 <try_realloc_chunk+0x4b8>
   51440:	07 40 00 88 	store_32 s0, 16(s7)
   51444:	e0 60 00 88 	store_32 s7, 24(s0)
   51448:	05 50 00 a8 	load_32 s0, 20(s5)
   5144c:	c0 00 00 f2 	bz s0, 24 <try_realloc_chunk+0x43c>
   51450:	42 40 00 a8 	load_32 s2, 16(s2)
   51454:	42 00 60 c1 	cmpgt_u s2, s2, s0
   51458:	42 04 00 f4 	bnz s2, 136 <try_realloc_chunk+0x4b8>
   5145c:	07 50 00 88 	store_32 s0, 20(s7)
   51460:	e0 60 00 88 	store_32 s7, 24(s0)
   51464:	44 80 60 c0 	sub_i s2, s4, s1
   51468:	02 3c 00 16 	cmpgt_u s0, s2, 15
   5146c:	c0 01 00 f4 	bnz s0, 56 <try_realloc_chunk+0x47c>
   51470:	03 04 00 01 	and s0, s3, 1
   51474:	38 00 52 c0 	add_i s1, s24, s4
   51478:	00 00 02 c0 	or s0, s0, s4
   5147c:	00 08 00 00 	or s0, s0, 2
   51480:	18 10 00 88 	store_32 s0, 4(s24)
   51484:	01 10 00 a8 	load_32 s0, 4(s1)
   51488:	00 04 00 00 	or s0, s0, 1
   5148c:	01 10 00 88 	store_32 s0, 4(s1)
   51490:	00 00 fc c0 	move s0, s24
   51494:	fe e3 00 a8 	load_32 ra, 56(sp)
   51498:	1e f3 00 a8 	load_32 s24, 60(sp)
   5149c:	de 03 01 05 	add_i sp, sp, 64
   514a0:	1f 00 00 f0 	ret
   514a4:	03 04 00 01 	and s0, s3, 1
   514a8:	60 80 00 c0 	or s3, s0, s1
   514ac:	18 80 50 c0 	add_i s0, s24, s1
   514b0:	23 08 00 00 	or s1, s3, 2
   514b4:	38 10 00 88 	store_32 s1, 4(s24)
   514b8:	38 00 52 c0 	add_i s1, s24, s4
   514bc:	62 0c 00 00 	or s3, s2, 3
   514c0:	60 10 00 88 	store_32 s3, 4(s0)
   514c4:	61 10 00 a8 	load_32 s3, 4(s1)
   514c8:	63 04 00 00 	or s3, s3, 1
   514cc:	61 10 00 88 	store_32 s3, 4(s1)
   514d0:	33 ff ff f7 	b -820 <try_realloc_chunk+0x174>
   514d4:	e0 00 00 0f 	move s7, 0
   514d8:	60 fc ff f3 	bz s0, -116 <try_realloc_chunk+0x43c>
   514dc:	ae ff ff f7 	b -328 <try_realloc_chunk+0x36c>
   514e0:	0e 06 00 f8 	call 6200 <abort>

00000000000514e4 realloc_in_place:
   514e4:	de 03 ff 05 	add_i sp, sp, -64
   514e8:	1e f3 00 88 	store_32 s24, 60(sp)
   514ec:	3e e3 00 88 	store_32 s25, 56(sp)
   514f0:	5e d3 00 88 	store_32 s26, 52(sp)
   514f4:	fe c3 00 88 	store_32 ra, 48(sp)
   514f8:	00 03 f0 c0 	move s24, s0
   514fc:	00 00 00 0f 	move s0, 0
   51500:	98 05 00 f2 	bz s24, 176 <realloc_in_place+0xcc>
   51504:	41 fc fe 16 	cmpgt_u s2, s1, -65
   51508:	42 05 00 f4 	bnz s2, 168 <realloc_in_place+0xcc>
   5150c:	01 2c 00 18 	cmplt_u s0, s1, 11
   51510:	80 00 00 f4 	bnz s0, 16 <realloc_in_place+0x3c>
   51514:	01 2c 00 05 	add_i s0, s1, 11
   51518:	20 e0 ff 01 	and s1, s0, -8
   5151c:	02 00 00 f6 	b 8 <realloc_in_place+0x40>
   51520:	20 40 00 0f 	move s1, 16
   51524:	0c 04 00 4f 	movehi s0, 44
   51528:	38 e3 ff 05 	add_i s25, s24, -8
   5152c:	40 b3 05 00 	or s26, s0, 364
   51530:	1a f0 06 a0 	load_u8 s0, 444(s26)
   51534:	00 08 00 01 	and s0, s0, 2
   51538:	e0 01 00 f2 	bz s0, 60 <realloc_in_place+0x90>
   5153c:	1a 00 07 05 	add_i s0, s26, 448
   51540:	40 04 00 0f 	move s2, 1
   51544:	60 00 00 aa 	load_sync s3, (s0)
   51548:	80 00 f1 c0 	move s4, s2
   5154c:	80 00 00 8a 	store_sync s4, (s0)  
   51550:	a4 ff ff f3 	bz s4, -12 <realloc_in_place+0x60>
   51554:	03 01 00 f2 	bz s3, 32 <realloc_in_place+0x90>
   51558:	7a 00 07 a8 	load_32 s3, 448(s26)
   5155c:	e3 ff ff f5 	bnz s3, -4 <realloc_in_place+0x74>
   51560:	60 00 00 aa 	load_sync s3, (s0)
   51564:	80 00 f1 c0 	move s4, s2
   51568:	80 00 00 8a 	store_sync s4, (s0)  
   5156c:	a4 ff ff f3 	bz s4, -12 <realloc_in_place+0x7c>
   51570:	43 ff ff f5 	bnz s3, -24 <realloc_in_place+0x74>
   51574:	00 80 fc c0 	move s0, s25
   51578:	ac fe ff f9 	call -1360 <try_realloc_chunk>
   5157c:	3a f0 06 a0 	load_u8 s1, 444(s26)
   51580:	21 08 00 01 	and s1, s1, 2
   51584:	e1 00 00 f2 	bz s1, 28 <realloc_in_place+0xbc>
   51588:	3a 00 07 05 	add_i s1, s26, 448
   5158c:	40 00 00 0f 	move s2, 0
   51590:	61 00 00 aa 	load_sync s3, (s1)
   51594:	60 00 f1 c0 	move s3, s2
   51598:	61 00 00 8a 	store_sync s3, (s1)  
   5159c:	a3 ff ff f3 	bz s3, -12 <realloc_in_place+0xac>
   515a0:	00 80 0c c1 	cmpeq_i s0, s0, s25
   515a4:	40 00 00 f4 	bnz s0, 8 <realloc_in_place+0xc8>
   515a8:	00 03 00 0f 	move s24, 0
   515ac:	00 00 fc c0 	move s0, s24
   515b0:	fe c3 00 a8 	load_32 ra, 48(sp)
   515b4:	5e d3 00 a8 	load_32 s26, 52(sp)
   515b8:	3e e3 00 a8 	load_32 s25, 56(sp)
   515bc:	1e f3 00 a8 	load_32 s24, 60(sp)
   515c0:	de 03 01 05 	add_i sp, sp, 64
   515c4:	1f 00 00 f0 	ret

00000000000515c8 memalign:
   515c8:	de 03 ff 05 	add_i sp, sp, -64
   515cc:	fe f3 00 88 	store_32 ra, 60(sp)
   515d0:	40 20 00 16 	cmpgt_u s2, s0, 8
   515d4:	c2 00 00 f4 	bnz s2, 24 <memalign+0x24>
   515d8:	00 80 f0 c0 	move s0, s1
   515dc:	b6 f3 ff f9 	call -12584 <malloc>
   515e0:	fe f3 00 a8 	load_32 ra, 60(sp)
   515e4:	de 03 01 05 	add_i sp, sp, 64
   515e8:	1f 00 00 f0 	ret
   515ec:	04 00 00 f8 	call 16 <internal_memalign>
   515f0:	fe f3 00 a8 	load_32 ra, 60(sp)
   515f4:	de 03 01 05 	add_i sp, sp, 64
   515f8:	1f 00 00 f0 	ret

00000000000515fc internal_memalign:
   515fc:	de 03 ff 05 	add_i sp, sp, -64
   51600:	1e f3 00 88 	store_32 s24, 60(sp)
   51604:	3e e3 00 88 	store_32 s25, 56(sp)
   51608:	5e d3 00 88 	store_32 s26, 52(sp)
   5160c:	7e c3 00 88 	store_32 s27, 48(sp)
   51610:	fe b3 00 88 	store_32 ra, 44(sp)
   51614:	40 40 00 16 	cmpgt_u s2, s0, 16
   51618:	42 00 00 f4 	bnz s2, 8 <internal_memalign+0x24>
   5161c:	00 40 00 0f 	move s0, 16
   51620:	40 fc ff 05 	add_i s2, s0, -1
   51624:	42 00 10 c0 	and s2, s2, s0
   51628:	e2 00 00 f2 	bz s2, 28 <internal_memalign+0x48>
   5162c:	40 40 00 0f 	move s2, 16
   51630:	60 03 f1 c0 	move s27, s2
   51634:	7b 00 80 c1 	cmplt_u s3, s27, s0
   51638:	5b 04 00 0b 	shl s2, s27, 1
   5163c:	a3 ff ff f5 	bnz s3, -12 <internal_memalign+0x34>
   51640:	02 00 00 f6 	b 8 <internal_memalign+0x4c>
   51644:	60 03 f0 c0 	move s27, s0
   51648:	00 00 ff 0f 	move s0, -64
   5164c:	00 03 00 0f 	move s24, 0
   51650:	00 80 6d c0 	sub_i s0, s0, s27
   51654:	00 80 90 c1 	cmple_u s0, s0, s1
   51658:	20 0e 00 f4 	bnz s0, 452 <internal_memalign+0x220>
   5165c:	01 2c 00 18 	cmplt_u s0, s1, 11
   51660:	00 01 00 f4 	bnz s0, 32 <internal_memalign+0x84>
   51664:	01 2c 00 05 	add_i s0, s1, 11
   51668:	20 e3 ff 01 	and s25, s0, -8
   5166c:	19 80 5d c0 	add_i s0, s25, s27
   51670:	00 30 00 05 	add_i s0, s0, 12
   51674:	90 f3 ff f9 	call -12736 <malloc>
   51678:	20 0d 00 f2 	bz s0, 420 <internal_memalign+0x220>
   5167c:	06 00 00 f6 	b 24 <internal_memalign+0x98>
   51680:	20 43 00 0f 	move s25, 16
   51684:	19 80 5d c0 	add_i s0, s25, s27
   51688:	00 30 00 05 	add_i s0, s0, 12
   5168c:	8a f3 ff f9 	call -12760 <malloc>
   51690:	60 0c 00 f2 	bz s0, 396 <internal_memalign+0x220>
   51694:	2c 04 00 4f 	movehi s1, 44
   51698:	3e a3 00 88 	store_32 s25, 40(sp)
   5169c:	21 b3 05 00 	or s25, s1, 364
   516a0:	39 f0 06 a0 	load_u8 s1, 444(s25)
   516a4:	21 08 00 01 	and s1, s1, 2
   516a8:	e1 01 00 f2 	bz s1, 60 <internal_memalign+0xe8>
   516ac:	39 00 07 05 	add_i s1, s25, 448
   516b0:	40 04 00 0f 	move s2, 1
   516b4:	61 00 00 aa 	load_sync s3, (s1)
   516b8:	80 00 f1 c0 	move s4, s2
   516bc:	81 00 00 8a 	store_sync s4, (s1)  
   516c0:	a4 ff ff f3 	bz s4, -12 <internal_memalign+0xb8>
   516c4:	03 01 00 f2 	bz s3, 32 <internal_memalign+0xe8>
   516c8:	79 00 07 a8 	load_32 s3, 448(s25)
   516cc:	e3 ff ff f5 	bnz s3, -4 <internal_memalign+0xcc>
   516d0:	61 00 00 aa 	load_sync s3, (s1)
   516d4:	80 00 f1 c0 	move s4, s2
   516d8:	81 00 00 8a 	store_sync s4, (s1)  
   516dc:	a4 ff ff f3 	bz s4, -12 <internal_memalign+0xd4>
   516e0:	43 ff ff f5 	bnz s3, -24 <internal_memalign+0xcc>
   516e4:	3b fc ff 05 	add_i s1, s27, -1
   516e8:	40 e3 ff 05 	add_i s26, s0, -8
   516ec:	21 00 10 c0 	and s1, s1, s0
   516f0:	61 05 00 f2 	bz s1, 172 <internal_memalign+0x1a0>
   516f4:	20 80 5d c0 	add_i s1, s0, s27
   516f8:	40 00 00 0f 	move s2, 0
   516fc:	21 fc ff 05 	add_i s1, s1, -1
   51700:	42 80 6d c0 	sub_i s2, s2, s27
   51704:	21 00 11 c0 	and s1, s1, s2
   51708:	01 e3 ff 05 	add_i s24, s1, -8
   5170c:	38 00 6d c0 	sub_i s1, s24, s26
   51710:	21 3c 00 16 	cmpgt_u s1, s1, 15
   51714:	41 00 00 f4 	bnz s1, 8 <internal_memalign+0x120>
   51718:	18 83 5d c0 	add_i s24, s24, s27
   5171c:	40 f0 ff a9 	load_32 s2, -4(s0)
   51720:	38 00 6d c0 	sub_i s1, s24, s26
   51724:	62 e0 ff 01 	and s3, s2, -8
   51728:	82 0c 00 01 	and s4, s2, 3
   5172c:	43 80 60 c0 	sub_i s2, s3, s1
   51730:	44 00 00 f4 	bnz s4, 8 <internal_memalign+0x13c>
   51734:	15 00 00 f6 	b 84 <internal_memalign+0x18c>
   51738:	78 10 00 a8 	load_32 s3, 4(s24)
   5173c:	63 04 00 01 	and s3, s3, 1
   51740:	62 80 01 c0 	or s3, s2, s3
   51744:	58 00 51 c0 	add_i s2, s24, s2
   51748:	63 08 00 00 	or s3, s3, 2
   5174c:	78 10 00 88 	store_32 s3, 4(s24)
   51750:	62 10 00 a8 	load_32 s3, 4(s2)
   51754:	63 04 00 00 	or s3, s3, 1
   51758:	62 10 00 88 	store_32 s3, 4(s2)
   5175c:	40 f0 ff a9 	load_32 s2, -4(s0)
   51760:	42 04 00 01 	and s2, s2, 1
   51764:	41 00 01 c0 	or s2, s1, s2
   51768:	42 08 00 00 	or s2, s2, 2
   5176c:	40 f0 ff 89 	store_32 s2, -4(s0)
   51770:	18 10 00 a8 	load_32 s0, 4(s24)
   51774:	00 04 00 00 	or s0, s0, 1
   51778:	18 10 00 88 	store_32 s0, 4(s24)
   5177c:	00 00 fd c0 	move s0, s26
   51780:	8f 03 00 f8 	call 3644 <dispose_chunk>
   51784:	05 00 00 f6 	b 20 <internal_memalign+0x19c>
   51788:	1a 00 00 a8 	load_32 s0, (s26)
   5178c:	00 80 50 c0 	add_i s0, s0, s1
   51790:	18 00 00 88 	store_32 s0, (s24)
   51794:	58 10 00 88 	store_32 s2, 4(s24)
   51798:	40 03 fc c0 	move s26, s24
   5179c:	1a 10 00 a8 	load_32 s0, 4(s26)
   517a0:	20 0c 00 01 	and s1, s0, 3
   517a4:	81 02 00 f2 	bz s1, 80 <internal_memalign+0x1f8>
   517a8:	3e a0 00 a8 	load_32 s1, 40(sp)
   517ac:	40 e0 ff 01 	and s2, s0, -8
   517b0:	21 40 00 05 	add_i s1, s1, 16
   517b4:	22 80 90 c1 	cmple_u s1, s2, s1
   517b8:	e1 01 00 f4 	bnz s1, 60 <internal_memalign+0x1f8>
   517bc:	9e a0 00 a8 	load_32 s4, 40(sp)
   517c0:	00 04 00 01 	and s0, s0, 1
   517c4:	64 00 00 c0 	or s3, s4, s0
   517c8:	22 00 62 c0 	sub_i s1, s2, s4
   517cc:	1a 00 52 c0 	add_i s0, s26, s4
   517d0:	5a 00 51 c0 	add_i s2, s26, s2
   517d4:	63 08 00 00 	or s3, s3, 2
   517d8:	7a 10 00 88 	store_32 s3, 4(s26)
   517dc:	61 0c 00 00 	or s3, s1, 3
   517e0:	60 10 00 88 	store_32 s3, 4(s0)
   517e4:	62 10 00 a8 	load_32 s3, 4(s2)
   517e8:	63 04 00 00 	or s3, s3, 1
   517ec:	62 10 00 88 	store_32 s3, 4(s2)
   517f0:	73 03 00 f8 	call 3532 <dispose_chunk>
   517f4:	19 f0 06 a0 	load_u8 s0, 444(s25)
   517f8:	1a 23 00 05 	add_i s24, s26, 8
   517fc:	00 08 00 01 	and s0, s0, 2
   51800:	e0 00 00 f2 	bz s0, 28 <internal_memalign+0x220>
   51804:	19 00 07 05 	add_i s0, s25, 448
   51808:	20 00 00 0f 	move s1, 0
   5180c:	40 00 00 aa 	load_sync s2, (s0)
   51810:	40 80 f0 c0 	move s2, s1
   51814:	40 00 00 8a 	store_sync s2, (s0)  
   51818:	a2 ff ff f3 	bz s2, -12 <internal_memalign+0x210>
   5181c:	00 00 fc c0 	move s0, s24
   51820:	fe b3 00 a8 	load_32 ra, 44(sp)
   51824:	7e c3 00 a8 	load_32 s27, 48(sp)
   51828:	5e d3 00 a8 	load_32 s26, 52(sp)
   5182c:	3e e3 00 a8 	load_32 s25, 56(sp)
   51830:	1e f3 00 a8 	load_32 s24, 60(sp)
   51834:	de 03 01 05 	add_i sp, sp, 64
   51838:	1f 00 00 f0 	ret

000000000005183c posix_memalign:
   5183c:	de 03 ff 05 	add_i sp, sp, -64
   51840:	1e f3 00 88 	store_32 s24, 60(sp)
   51844:	fe e3 00 88 	store_32 ra, 56(sp)
   51848:	61 20 00 11 	cmpne_i s3, s1, 8
   5184c:	00 03 f0 c0 	move s24, s0
   51850:	43 01 00 f4 	bnz s3, 40 <posix_memalign+0x3c>
   51854:	00 00 f1 c0 	move s0, s2
   51858:	17 f3 ff f9 	call -13220 <malloc>
   5185c:	c0 04 00 f2 	bz s0, 152 <posix_memalign+0xb8>
   51860:	18 00 00 88 	store_32 s0, (s24)
   51864:	00 00 00 0f 	move s0, 0
   51868:	fe e3 00 a8 	load_32 ra, 56(sp)
   5186c:	1e f3 00 a8 	load_32 s24, 60(sp)
   51870:	de 03 01 05 	add_i sp, sp, 64
   51874:	1f 00 00 f0 	ret
   51878:	61 0c 00 01 	and s3, s1, 3
   5187c:	00 58 00 0f 	move s0, 22
   51880:	e3 00 00 f4 	bnz s3, 28 <posix_memalign+0x60>
   51884:	61 08 00 0a 	shr s3, s1, 2
   51888:	a3 00 00 f2 	bz s3, 20 <posix_memalign+0x60>
   5188c:	83 fc ff 05 	add_i s4, s3, -1
   51890:	64 80 11 c0 	and s3, s4, s3
   51894:	43 00 00 f4 	bnz s3, 8 <posix_memalign+0x60>
   51898:	05 00 00 f6 	b 20 <posix_memalign+0x70>
   5189c:	fe e3 00 a8 	load_32 ra, 56(sp)
   518a0:	1e f3 00 a8 	load_32 s24, 60(sp)
   518a4:	de 03 01 05 	add_i sp, sp, 64
   518a8:	1f 00 00 f0 	ret
   518ac:	00 00 ff 0f 	move s0, -64
   518b0:	00 80 60 c0 	sub_i s0, s0, s1
   518b4:	00 00 81 c1 	cmplt_u s0, s0, s2
   518b8:	40 00 00 f4 	bnz s0, 8 <posix_memalign+0x84>
   518bc:	06 00 00 f6 	b 24 <posix_memalign+0x98>
   518c0:	00 30 00 0f 	move s0, 12
   518c4:	fe e3 00 a8 	load_32 ra, 56(sp)
   518c8:	1e f3 00 a8 	load_32 s24, 60(sp)
   518cc:	de 03 01 05 	add_i sp, sp, 64
   518d0:	1f 00 00 f0 	ret
   518d4:	01 40 00 16 	cmpgt_u s0, s1, 16
   518d8:	40 00 00 f4 	bnz s0, 8 <posix_memalign+0xa4>
   518dc:	20 40 00 0f 	move s1, 16
   518e0:	00 80 f0 c0 	move s0, s1
   518e4:	20 00 f1 c0 	move s1, s2
   518e8:	45 ff ff f9 	call -748 <internal_memalign>
   518ec:	40 00 00 f2 	bz s0, 8 <posix_memalign+0xb8>
   518f0:	dc ff ff f7 	b -144 <posix_memalign+0x24>
   518f4:	00 30 00 0f 	move s0, 12
   518f8:	fe e3 00 a8 	load_32 ra, 56(sp)
   518fc:	1e f3 00 a8 	load_32 s24, 60(sp)
   51900:	de 03 01 05 	add_i sp, sp, 64
   51904:	1f 00 00 f0 	ret

0000000000051908 valloc:
   51908:	de 03 ff 05 	add_i sp, sp, -64
   5190c:	fe f3 00 88 	store_32 ra, 60(sp)
   51910:	2c 04 00 4f 	movehi s1, 44
   51914:	41 50 05 00 	or s2, s1, 340
   51918:	62 00 00 a8 	load_32 s3, (s2)
   5191c:	20 00 f0 c0 	move s1, s0
   51920:	63 05 00 f4 	bnz s3, 172 <valloc+0xc4>
   51924:	0c 04 00 4f 	movehi s0, 44
   51928:	60 04 00 0f 	move s3, 1
   5192c:	00 20 0d 00 	or s0, s0, 840
   51930:	80 00 00 aa 	load_sync s4, (s0)
   51934:	a0 80 f1 c0 	move s5, s3
   51938:	a0 00 00 8a 	store_sync s5, (s0)  
   5193c:	a5 ff ff f3 	bz s5, -12 <valloc+0x28>
   51940:	04 01 00 f2 	bz s4, 32 <valloc+0x58>
   51944:	80 00 00 a8 	load_32 s4, (s0)
   51948:	e4 ff ff f5 	bnz s4, -4 <valloc+0x3c>
   5194c:	80 00 00 aa 	load_sync s4, (s0)
   51950:	a0 80 f1 c0 	move s5, s3
   51954:	a0 00 00 8a 	store_sync s5, (s0)  
   51958:	a5 ff ff f3 	bz s5, -12 <valloc+0x44>
   5195c:	44 ff ff f5 	bnz s4, -24 <valloc+0x3c>
   51960:	62 00 00 a8 	load_32 s3, (s2)
   51964:	a3 02 00 f4 	bnz s3, 84 <valloc+0xb0>
   51968:	60 00 40 0f 	move s3, 4096
   5196c:	62 20 00 88 	store_32 s3, 8(s2)
   51970:	62 10 00 88 	store_32 s3, 4(s2)
   51974:	60 fc ff 0f 	move s3, -1
   51978:	62 30 00 88 	store_32 s3, 12(s2)
   5197c:	6c 04 00 4f 	movehi s3, 44
   51980:	80 20 00 4f 	movehi s4, 256
   51984:	82 40 00 88 	store_32 s4, 16(s2)
   51988:	80 08 00 0f 	move s4, 2
   5198c:	82 50 00 88 	store_32 s4, 20(s2)
   51990:	63 b0 05 00 	or s3, s3, 364
   51994:	ca 54 55 4f 	movehi s6, 174762
   51998:	a0 00 00 0f 	move s5, 0
   5199c:	83 f0 06 88 	store_32 s4, 444(s3)
   519a0:	9e e0 00 05 	add_i s4, sp, 56
   519a4:	a3 00 07 88 	store_32 s5, 448(s3)
   519a8:	66 60 55 00 	or s3, s6, 5464
   519ac:	84 c0 ff 01 	and s4, s4, -16
   519b0:	64 80 31 c0 	xor s3, s4, s3
   519b4:	62 00 00 88 	store_32 s3, (s2)
   519b8:	60 00 00 0f 	move s3, 0
   519bc:	80 00 00 aa 	load_sync s4, (s0)
   519c0:	80 80 f1 c0 	move s4, s3
   519c4:	80 00 00 8a 	store_sync s4, (s0)  
   519c8:	a4 ff ff f3 	bz s4, -12 <valloc+0xb4>
   519cc:	02 10 00 a8 	load_32 s0, 4(s2)
   519d0:	40 20 00 16 	cmpgt_u s2, s0, 8
   519d4:	c2 00 00 f4 	bnz s2, 24 <valloc+0xe4>
   519d8:	00 80 f0 c0 	move s0, s1
   519dc:	b6 f2 ff f9 	call -13608 <malloc>
   519e0:	fe f3 00 a8 	load_32 ra, 60(sp)
   519e4:	de 03 01 05 	add_i sp, sp, 64
   519e8:	1f 00 00 f0 	ret
   519ec:	04 ff ff f9 	call -1008 <internal_memalign>
   519f0:	fe f3 00 a8 	load_32 ra, 60(sp)
   519f4:	de 03 01 05 	add_i sp, sp, 64
   519f8:	1f 00 00 f0 	ret

00000000000519fc pvalloc:
   519fc:	de 03 ff 05 	add_i sp, sp, -64
   51a00:	fe f3 00 88 	store_32 ra, 60(sp)
   51a04:	2c 04 00 4f 	movehi s1, 44
   51a08:	21 50 05 00 	or s1, s1, 340
   51a0c:	41 00 00 a8 	load_32 s2, (s1)
   51a10:	62 05 00 f4 	bnz s2, 172 <pvalloc+0xc0>
   51a14:	4c 04 00 4f 	movehi s2, 44
   51a18:	60 04 00 0f 	move s3, 1
   51a1c:	42 20 0d 00 	or s2, s2, 840
   51a20:	82 00 00 aa 	load_sync s4, (s2)
   51a24:	a0 80 f1 c0 	move s5, s3
   51a28:	a2 00 00 8a 	store_sync s5, (s2)  
   51a2c:	a5 ff ff f3 	bz s5, -12 <pvalloc+0x24>
   51a30:	04 01 00 f2 	bz s4, 32 <pvalloc+0x54>
   51a34:	82 00 00 a8 	load_32 s4, (s2)
   51a38:	e4 ff ff f5 	bnz s4, -4 <pvalloc+0x38>
   51a3c:	82 00 00 aa 	load_sync s4, (s2)
   51a40:	a0 80 f1 c0 	move s5, s3
   51a44:	a2 00 00 8a 	store_sync s5, (s2)  
   51a48:	a5 ff ff f3 	bz s5, -12 <pvalloc+0x40>
   51a4c:	44 ff ff f5 	bnz s4, -24 <pvalloc+0x38>
   51a50:	61 00 00 a8 	load_32 s3, (s1)
   51a54:	a3 02 00 f4 	bnz s3, 84 <pvalloc+0xac>
   51a58:	60 00 40 0f 	move s3, 4096
   51a5c:	61 20 00 88 	store_32 s3, 8(s1)
   51a60:	61 10 00 88 	store_32 s3, 4(s1)
   51a64:	60 fc ff 0f 	move s3, -1
   51a68:	61 30 00 88 	store_32 s3, 12(s1)
   51a6c:	6c 04 00 4f 	movehi s3, 44
   51a70:	80 20 00 4f 	movehi s4, 256
   51a74:	81 40 00 88 	store_32 s4, 16(s1)
   51a78:	80 08 00 0f 	move s4, 2
   51a7c:	81 50 00 88 	store_32 s4, 20(s1)
   51a80:	63 b0 05 00 	or s3, s3, 364
   51a84:	ca 54 55 4f 	movehi s6, 174762
   51a88:	a0 00 00 0f 	move s5, 0
   51a8c:	83 f0 06 88 	store_32 s4, 444(s3)
   51a90:	9e e0 00 05 	add_i s4, sp, 56
   51a94:	a3 00 07 88 	store_32 s5, 448(s3)
   51a98:	66 60 55 00 	or s3, s6, 5464
   51a9c:	84 c0 ff 01 	and s4, s4, -16
   51aa0:	64 80 31 c0 	xor s3, s4, s3
   51aa4:	61 00 00 88 	store_32 s3, (s1)
   51aa8:	60 00 00 0f 	move s3, 0
   51aac:	82 00 00 aa 	load_sync s4, (s2)
   51ab0:	80 80 f1 c0 	move s4, s3
   51ab4:	82 00 00 8a 	store_sync s4, (s2)  
   51ab8:	a4 ff ff f3 	bz s4, -12 <pvalloc+0xb0>
   51abc:	21 10 00 a8 	load_32 s1, 4(s1)
   51ac0:	40 00 00 0f 	move s2, 0
   51ac4:	00 80 50 c0 	add_i s0, s0, s1
   51ac8:	42 80 60 c0 	sub_i s2, s2, s1
   51acc:	61 20 00 16 	cmpgt_u s3, s1, 8
   51ad0:	00 fc ff 05 	add_i s0, s0, -1
   51ad4:	40 00 11 c0 	and s2, s0, s2
   51ad8:	c3 00 00 f4 	bnz s3, 24 <pvalloc+0xf4>
   51adc:	00 00 f1 c0 	move s0, s2
   51ae0:	75 f2 ff f9 	call -13868 <malloc>
   51ae4:	fe f3 00 a8 	load_32 ra, 60(sp)
   51ae8:	de 03 01 05 	add_i sp, sp, 64
   51aec:	1f 00 00 f0 	ret
   51af0:	00 80 f0 c0 	move s0, s1
   51af4:	20 00 f1 c0 	move s1, s2
   51af8:	c1 fe ff f9 	call -1276 <internal_memalign>
   51afc:	fe f3 00 a8 	load_32 ra, 60(sp)
   51b00:	de 03 01 05 	add_i sp, sp, 64
   51b04:	1f 00 00 f0 	ret

0000000000051b08 independent_calloc:
   51b08:	de 03 ff 05 	add_i sp, sp, -64
   51b0c:	fe f3 00 88 	store_32 ra, 60(sp)
   51b10:	60 00 f1 c0 	move s3, s2
   51b14:	3e e0 00 88 	store_32 s1, 56(sp)
   51b18:	3e e0 00 05 	add_i s1, sp, 56
   51b1c:	40 0c 00 0f 	move s2, 3
   51b20:	04 00 00 f8 	call 16 <ialloc>
   51b24:	fe f3 00 a8 	load_32 ra, 60(sp)
   51b28:	de 03 01 05 	add_i sp, sp, 64
   51b2c:	1f 00 00 f0 	ret

0000000000051b30 ialloc:
   51b30:	de 03 ff 05 	add_i sp, sp, -64
   51b34:	1e f3 00 88 	store_32 s24, 60(sp)
   51b38:	3e e3 00 88 	store_32 s25, 56(sp)
   51b3c:	5e d3 00 88 	store_32 s26, 52(sp)
   51b40:	7e c3 00 88 	store_32 s27, 48(sp)
   51b44:	fe b3 00 88 	store_32 ra, 44(sp)
   51b48:	8c 04 00 4f 	movehi s4, 44
   51b4c:	84 50 05 00 	or s4, s4, 340
   51b50:	a4 00 00 a8 	load_32 s5, (s4)
   51b54:	00 81 f1 c0 	move s8, s3
   51b58:	00 03 f1 c0 	move s24, s2
   51b5c:	20 83 f0 c0 	move s25, s1
   51b60:	40 03 f0 c0 	move s26, s0
   51b64:	65 05 00 f4 	bnz s5, 172 <ialloc+0xe0>
   51b68:	0c 04 00 4f 	movehi s0, 44
   51b6c:	20 04 00 0f 	move s1, 1
   51b70:	00 20 0d 00 	or s0, s0, 840
   51b74:	40 00 00 aa 	load_sync s2, (s0)
   51b78:	60 80 f0 c0 	move s3, s1
   51b7c:	60 00 00 8a 	store_sync s3, (s0)  
   51b80:	a3 ff ff f3 	bz s3, -12 <ialloc+0x44>
   51b84:	02 01 00 f2 	bz s2, 32 <ialloc+0x74>
   51b88:	40 00 00 a8 	load_32 s2, (s0)
   51b8c:	e2 ff ff f5 	bnz s2, -4 <ialloc+0x58>
   51b90:	40 00 00 aa 	load_sync s2, (s0)
   51b94:	60 80 f0 c0 	move s3, s1
   51b98:	60 00 00 8a 	store_sync s3, (s0)  
   51b9c:	a3 ff ff f3 	bz s3, -12 <ialloc+0x60>
   51ba0:	42 ff ff f5 	bnz s2, -24 <ialloc+0x58>
   51ba4:	24 00 00 a8 	load_32 s1, (s4)
   51ba8:	a1 02 00 f4 	bnz s1, 84 <ialloc+0xcc>
   51bac:	20 00 40 0f 	move s1, 4096
   51bb0:	24 20 00 88 	store_32 s1, 8(s4)
   51bb4:	24 10 00 88 	store_32 s1, 4(s4)
   51bb8:	20 fc ff 0f 	move s1, -1
   51bbc:	24 30 00 88 	store_32 s1, 12(s4)
   51bc0:	2c 04 00 4f 	movehi s1, 44
   51bc4:	40 20 00 4f 	movehi s2, 256
   51bc8:	44 40 00 88 	store_32 s2, 16(s4)
   51bcc:	40 08 00 0f 	move s2, 2
   51bd0:	44 50 00 88 	store_32 s2, 20(s4)
   51bd4:	21 b0 05 00 	or s1, s1, 364
   51bd8:	aa 54 55 4f 	movehi s5, 174762
   51bdc:	60 00 00 0f 	move s3, 0
   51be0:	41 f0 06 88 	store_32 s2, 444(s1)
   51be4:	5e a0 00 05 	add_i s2, sp, 40
   51be8:	61 00 07 88 	store_32 s3, 448(s1)
   51bec:	25 60 55 00 	or s1, s5, 5464
   51bf0:	42 c0 ff 01 	and s2, s2, -16
   51bf4:	22 80 30 c0 	xor s1, s2, s1
   51bf8:	24 00 00 88 	store_32 s1, (s4)
   51bfc:	20 00 00 0f 	move s1, 0
   51c00:	40 00 00 aa 	load_sync s2, (s0)
   51c04:	40 80 f0 c0 	move s2, s1
   51c08:	40 00 00 8a 	store_sync s2, (s0)  
   51c0c:	a2 ff ff f3 	bz s2, -12 <ialloc+0xd0>
   51c10:	08 03 00 f2 	bz s8, 96 <ialloc+0x140>
   51c14:	9a 14 00 f2 	bz s26, 656 <ialloc+0x374>
   51c18:	c0 00 00 0f 	move s6, 0
   51c1c:	18 04 00 01 	and s0, s24, 1
   51c20:	1e 91 00 88 	store_32 s8, 36(sp)
   51c24:	c0 03 00 f4 	bnz s0, 120 <ialloc+0x16c>
   51c28:	a0 00 00 0f 	move s5, 0
   51c2c:	00 40 00 0f 	move s0, 16
   51c30:	20 80 f2 c0 	move s1, s5
   51c34:	60 83 f2 c0 	move s27, s5
   51c38:	41 08 00 0b 	shl s2, s1, 2
   51c3c:	59 00 51 c0 	add_i s2, s25, s2
   51c40:	62 00 00 a8 	load_32 s3, (s2)
   51c44:	40 00 f0 c0 	move s2, s0
   51c48:	83 2c 00 18 	cmplt_u s4, s3, 11
   51c4c:	64 00 00 f4 	bnz s4, 12 <ialloc+0x128>
   51c50:	43 2c 00 05 	add_i s2, s3, 11
   51c54:	42 e0 ff 01 	and s2, s2, -8
   51c58:	21 04 00 05 	add_i s1, s1, 1
   51c5c:	62 83 5d c0 	add_i s27, s2, s27
   51c60:	61 00 1d c1 	cmpne_i s3, s1, s26
   51c64:	a3 fe ff f5 	bnz s3, -44 <ialloc+0x108>
   51c68:	be 80 00 88 	store_32 s5, 32(sp)
   51c6c:	15 00 00 f6 	b 84 <ialloc+0x190>
   51c70:	5a 00 00 f4 	bnz s26, 8 <ialloc+0x148>
   51c74:	59 00 00 f6 	b 356 <ialloc+0x2a8>
   51c78:	1a 08 00 0b 	shl s0, s26, 2
   51c7c:	20 2c 00 18 	cmplt_u s1, s0, 11
   51c80:	61 0c 00 f4 	bnz s1, 396 <ialloc+0x2dc>
   51c84:	00 2c 00 05 	add_i s0, s0, 11
   51c88:	c0 e0 ff 01 	and s6, s0, -8
   51c8c:	18 04 00 01 	and s0, s24, 1
   51c90:	1e 91 00 88 	store_32 s8, 36(sp)
   51c94:	40 00 00 f4 	bnz s0, 8 <ialloc+0x16c>
   51c98:	e4 ff ff f7 	b -112 <ialloc+0xf8>
   51c9c:	19 00 00 a8 	load_32 s0, (s25)
   51ca0:	20 2c 00 18 	cmplt_u s1, s0, 11
   51ca4:	81 00 00 f4 	bnz s1, 16 <ialloc+0x184>
   51ca8:	00 2c 00 05 	add_i s0, s0, 11
   51cac:	00 e0 ff 01 	and s0, s0, -8
   51cb0:	02 00 00 f6 	b 8 <ialloc+0x188>
   51cb4:	00 40 00 0f 	move s0, 16
   51cb8:	60 03 7d c0 	mull_i s27, s0, s26
   51cbc:	1e 80 00 88 	store_32 s0, 32(sp)
   51cc0:	06 80 5d c0 	add_i s0, s6, s27
   51cc4:	de 70 00 88 	store_32 s6, 28(sp)
   51cc8:	00 f0 ff 05 	add_i s0, s0, -4
   51ccc:	fa f1 ff f9 	call -14360 <malloc>
   51cd0:	00 08 00 f2 	bz s0, 256 <ialloc+0x2a0>
   51cd4:	2c 04 00 4f 	movehi s1, 44
   51cd8:	80 00 fc c0 	move s4, s24
   51cdc:	01 b3 05 00 	or s24, s1, 364
   51ce0:	38 f0 06 a0 	load_u8 s1, 444(s24)
   51ce4:	1e 91 00 a8 	load_32 s8, 36(sp)
   51ce8:	3e 81 00 a8 	load_32 s9, 32(sp)
   51cec:	21 08 00 01 	and s1, s1, 2
   51cf0:	e1 01 00 f2 	bz s1, 60 <ialloc+0x1fc>
   51cf4:	b8 00 07 05 	add_i s5, s24, 448
   51cf8:	20 04 00 0f 	move s1, 1
   51cfc:	45 00 00 aa 	load_sync s2, (s5)
   51d00:	60 80 f0 c0 	move s3, s1
   51d04:	65 00 00 8a 	store_sync s3, (s5)  
   51d08:	a3 ff ff f3 	bz s3, -12 <ialloc+0x1cc>
   51d0c:	02 01 00 f2 	bz s2, 32 <ialloc+0x1fc>
   51d10:	58 00 07 a8 	load_32 s2, 448(s24)
   51d14:	e2 ff ff f5 	bnz s2, -4 <ialloc+0x1e0>
   51d18:	45 00 00 aa 	load_sync s2, (s5)
   51d1c:	60 80 f0 c0 	move s3, s1
   51d20:	65 00 00 8a 	store_sync s3, (s5)  
   51d24:	a3 ff ff f3 	bz s3, -12 <ialloc+0x1e8>
   51d28:	42 ff ff f5 	bnz s2, -24 <ialloc+0x1e0>
   51d2c:	40 f0 ff a9 	load_32 s2, -4(s0)
   51d30:	24 08 00 01 	and s1, s4, 2
   51d34:	62 e0 ff 01 	and s3, s2, -8
   51d38:	a1 01 00 f2 	bz s1, 52 <ialloc+0x23c>
   51d3c:	3e 70 00 a8 	load_32 s1, 28(sp)
   51d40:	40 f0 ff 0f 	move s2, -4
   51d44:	1e 70 00 88 	store_32 s0, 28(sp)
   51d48:	7e 60 00 88 	store_32 s3, 24(sp)
   51d4c:	22 80 60 c0 	sub_i s1, s2, s1
   51d50:	41 80 51 c0 	add_i s2, s1, s3
   51d54:	20 00 00 0f 	move s1, 0
   51d58:	85 04 00 f8 	call 4628 <memset>
   51d5c:	7e 60 00 a8 	load_32 s3, 24(sp)
   51d60:	1e 70 00 a8 	load_32 s0, 28(sp)
   51d64:	3e 81 00 a8 	load_32 s9, 32(sp)
   51d68:	1e 91 00 a8 	load_32 s8, 36(sp)
   51d6c:	40 e1 ff 05 	add_i s10, s0, -8
   51d70:	48 00 00 f4 	bnz s8, 8 <ialloc+0x248>
   51d74:	1d 00 00 f6 	b 116 <ialloc+0x2b8>
   51d78:	60 83 f1 c0 	move s27, s3
   51d7c:	3a fc ff 05 	add_i s1, s26, -1
   51d80:	08 00 00 88 	store_32 s0, (s8)
   51d84:	a1 07 00 f2 	bz s1, 244 <ialloc+0x348>
   51d88:	49 00 00 f4 	bnz s9, 8 <ialloc+0x260>
   51d8c:	25 00 00 f6 	b 148 <ialloc+0x2f0>
   51d90:	40 04 00 0f 	move s2, 1
   51d94:	69 0c 00 00 	or s3, s9, 3
   51d98:	80 00 00 0f 	move s4, 0
   51d9c:	42 00 6d c0 	sub_i s2, s2, s26
   51da0:	49 00 71 c0 	mull_i s2, s9, s2
   51da4:	84 04 00 05 	add_i s4, s4, 1
   51da8:	6a 10 00 88 	store_32 s3, 4(s10)
   51dac:	4a 81 54 c0 	add_i s10, s10, s9
   51db0:	a4 08 00 0b 	shl s5, s4, 2
   51db4:	e4 80 10 c1 	cmpne_i s7, s4, s1
   51db8:	a8 80 52 c0 	add_i s5, s8, s5
   51dbc:	ca 20 00 05 	add_i s6, s10, 8
   51dc0:	c5 00 00 88 	store_32 s6, (s5)
   51dc4:	07 ff ff f5 	bnz s7, -32 <ialloc+0x274>
   51dc8:	7b 03 51 c0 	add_i s27, s27, s2
   51dcc:	2b 00 00 f6 	b 172 <ialloc+0x348>
   51dd0:	00 01 00 0f 	move s8, 0
   51dd4:	34 00 00 f6 	b 208 <ialloc+0x374>
   51dd8:	00 00 00 0f 	move s0, 0
   51ddc:	b6 f1 ff f9 	call -14632 <malloc>
   51de0:	00 01 f0 c0 	move s8, s0
   51de4:	30 00 00 f6 	b 192 <ialloc+0x374>
   51de8:	2a 80 5d c0 	add_i s1, s10, s27
   51dec:	43 80 6d c0 	sub_i s2, s3, s27
   51df0:	01 21 00 05 	add_i s8, s1, 8
   51df4:	42 0c 00 00 	or s2, s2, 3
   51df8:	41 10 00 88 	store_32 s2, 4(s1)
   51dfc:	3a fc ff 05 	add_i s1, s26, -1
   51e00:	08 00 00 88 	store_32 s0, (s8)
   51e04:	a1 03 00 f2 	bz s1, 116 <ialloc+0x348>
   51e08:	e0 ff ff f7 	b -128 <ialloc+0x258>
   51e0c:	c0 40 00 0f 	move s6, 16
   51e10:	18 04 00 01 	and s0, s24, 1
   51e14:	1e 91 00 88 	store_32 s8, 36(sp)
   51e18:	20 f4 ff f5 	bnz s0, -380 <ialloc+0x16c>
   51e1c:	83 ff ff f7 	b -500 <ialloc+0xf8>
   51e20:	40 00 00 0f 	move s2, 0
   51e24:	60 40 00 0f 	move s3, 16
   51e28:	82 08 00 0b 	shl s4, s2, 2
   51e2c:	99 00 52 c0 	add_i s4, s25, s4
   51e30:	a4 00 00 a8 	load_32 s5, (s4)
   51e34:	80 80 f1 c0 	move s4, s3
   51e38:	c5 2c 00 18 	cmplt_u s6, s5, 11
   51e3c:	66 00 00 f4 	bnz s6, 12 <ialloc+0x318>
   51e40:	85 2c 00 05 	add_i s4, s5, 11
   51e44:	84 e0 ff 01 	and s4, s4, -8
   51e48:	42 04 00 05 	add_i s2, s2, 1
   51e4c:	a4 0c 00 00 	or s5, s4, 3
   51e50:	aa 10 00 88 	store_32 s5, 4(s10)
   51e54:	4a 01 52 c0 	add_i s10, s10, s4
   51e58:	7b 03 62 c0 	sub_i s27, s27, s4
   51e5c:	82 08 00 0b 	shl s4, s2, 2
   51e60:	c2 80 00 c1 	cmpeq_i s6, s2, s1
   51e64:	88 00 52 c0 	add_i s4, s8, s4
   51e68:	aa 20 00 05 	add_i s5, s10, 8
   51e6c:	a4 00 00 88 	store_32 s5, (s4)
   51e70:	46 00 00 f4 	bnz s6, 8 <ialloc+0x348>
   51e74:	ed ff ff f7 	b -76 <ialloc+0x2f8>
   51e78:	3b 0c 00 00 	or s1, s27, 3
   51e7c:	2a 10 00 88 	store_32 s1, 4(s10)
   51e80:	18 f0 06 a0 	load_u8 s0, 444(s24)
   51e84:	00 08 00 01 	and s0, s0, 2
   51e88:	e0 00 00 f2 	bz s0, 28 <ialloc+0x374>
   51e8c:	18 00 07 05 	add_i s0, s24, 448
   51e90:	20 00 00 0f 	move s1, 0
   51e94:	40 00 00 aa 	load_sync s2, (s0)
   51e98:	40 80 f0 c0 	move s2, s1
   51e9c:	40 00 00 8a 	store_sync s2, (s0)  
   51ea0:	a2 ff ff f3 	bz s2, -12 <ialloc+0x364>
   51ea4:	00 00 f4 c0 	move s0, s8
   51ea8:	fe b3 00 a8 	load_32 ra, 44(sp)
   51eac:	7e c3 00 a8 	load_32 s27, 48(sp)
   51eb0:	5e d3 00 a8 	load_32 s26, 52(sp)
   51eb4:	3e e3 00 a8 	load_32 s25, 56(sp)
   51eb8:	1e f3 00 a8 	load_32 s24, 60(sp)
   51ebc:	de 03 01 05 	add_i sp, sp, 64
   51ec0:	1f 00 00 f0 	ret

0000000000051ec4 independent_comalloc:
   51ec4:	de 03 ff 05 	add_i sp, sp, -64
   51ec8:	fe f3 00 88 	store_32 ra, 60(sp)
   51ecc:	60 00 f1 c0 	move s3, s2
   51ed0:	40 00 00 0f 	move s2, 0
   51ed4:	17 ff ff f9 	call -932 <ialloc>
   51ed8:	fe f3 00 a8 	load_32 ra, 60(sp)
   51edc:	de 03 01 05 	add_i sp, sp, 64
   51ee0:	1f 00 00 f0 	ret

0000000000051ee4 bulk_free:
   51ee4:	de 03 ff 05 	add_i sp, sp, -64
   51ee8:	1e f3 00 88 	store_32 s24, 60(sp)
   51eec:	3e e3 00 88 	store_32 s25, 56(sp)
   51ef0:	5e d3 00 88 	store_32 s26, 52(sp)
   51ef4:	7e c3 00 88 	store_32 s27, 48(sp)
   51ef8:	fe b3 00 88 	store_32 ra, 44(sp)
   51efc:	4c 04 00 4f 	movehi s2, 44
   51f00:	22 b3 05 00 	or s25, s2, 364
   51f04:	59 f0 06 a0 	load_u8 s2, 444(s25)
   51f08:	00 03 f0 c0 	move s24, s0
   51f0c:	42 08 00 01 	and s2, s2, 2
   51f10:	e2 01 00 f2 	bz s2, 60 <bulk_free+0x68>
   51f14:	19 00 07 05 	add_i s0, s25, 448
   51f18:	40 04 00 0f 	move s2, 1
   51f1c:	60 00 00 aa 	load_sync s3, (s0)
   51f20:	80 00 f1 c0 	move s4, s2
   51f24:	80 00 00 8a 	store_sync s4, (s0)  
   51f28:	a4 ff ff f3 	bz s4, -12 <bulk_free+0x38>
   51f2c:	03 01 00 f2 	bz s3, 32 <bulk_free+0x68>
   51f30:	79 00 07 a8 	load_32 s3, 448(s25)
   51f34:	e3 ff ff f5 	bnz s3, -4 <bulk_free+0x4c>
   51f38:	60 00 00 aa 	load_sync s3, (s0)
   51f3c:	80 00 f1 c0 	move s4, s2
   51f40:	80 00 00 8a 	store_sync s4, (s0)  
   51f44:	a4 ff ff f3 	bz s4, -12 <bulk_free+0x54>
   51f48:	43 ff ff f5 	bnz s3, -24 <bulk_free+0x4c>
   51f4c:	c1 05 00 f2 	bz s1, 184 <bulk_free+0x120>
   51f50:	01 08 00 0b 	shl s0, s1, 2
   51f54:	58 03 50 c0 	add_i s26, s24, s0
   51f58:	60 03 00 0f 	move s27, 0
   51f5c:	58 00 00 a8 	load_32 s2, (s24)
   51f60:	a2 02 00 f2 	bz s2, 84 <bulk_free+0xd0>
   51f64:	62 f0 ff a9 	load_32 s3, -4(s2)
   51f68:	78 03 00 88 	store_32 s27, (s24)
   51f6c:	39 40 00 a8 	load_32 s1, 16(s25)
   51f70:	03 0c 00 01 	and s0, s3, 3
   51f74:	00 04 00 10 	cmpeq_i s0, s0, 1
   51f78:	40 07 00 f4 	bnz s0, 232 <bulk_free+0x17c>
   51f7c:	02 e0 ff 05 	add_i s0, s2, -8
   51f80:	20 80 80 c1 	cmplt_u s1, s0, s1
   51f84:	e1 06 00 f4 	bnz s1, 220 <bulk_free+0x17c>
   51f88:	98 10 00 05 	add_i s4, s24, 4
   51f8c:	23 e0 ff 01 	and s1, s3, -8
   51f90:	a4 00 0d c1 	cmpeq_i s5, s4, s26
   51f94:	e5 00 00 f4 	bnz s5, 28 <bulk_free+0xcc>
   51f98:	a0 80 50 c0 	add_i s5, s0, s1
   51f9c:	c4 00 00 a8 	load_32 s6, (s4)
   51fa0:	e5 20 00 05 	add_i s7, s5, 8
   51fa4:	c6 80 13 c1 	cmpne_i s6, s6, s7
   51fa8:	46 00 00 f4 	bnz s6, 8 <bulk_free+0xcc>
   51fac:	06 00 00 f6 	b 24 <bulk_free+0xe0>
   51fb0:	83 01 00 f8 	call 1548 <dispose_chunk>
   51fb4:	18 13 00 05 	add_i s24, s24, 4
   51fb8:	18 00 1d c1 	cmpne_i s0, s24, s26
   51fbc:	00 fd ff f5 	bnz s0, -96 <bulk_free+0x78>
   51fc0:	11 00 00 f6 	b 68 <bulk_free+0x120>
   51fc4:	05 10 00 a8 	load_32 s0, 4(s5)
   51fc8:	63 04 00 01 	and s3, s3, 1
   51fcc:	a2 f0 ff 05 	add_i s5, s2, -4
   51fd0:	00 e0 ff 01 	and s0, s0, -8
   51fd4:	00 80 50 c0 	add_i s0, s0, s1
   51fd8:	23 00 00 c0 	or s1, s3, s0
   51fdc:	05 00 50 c0 	add_i s0, s5, s0
   51fe0:	21 08 00 00 	or s1, s1, 2
   51fe4:	22 f0 ff 89 	store_32 s1, -4(s2)
   51fe8:	20 00 00 a8 	load_32 s1, (s0)
   51fec:	21 04 00 00 	or s1, s1, 1
   51ff0:	20 00 00 88 	store_32 s1, (s0)
   51ff4:	44 00 00 88 	store_32 s2, (s4)
   51ff8:	18 13 00 05 	add_i s24, s24, 4
   51ffc:	18 00 1d c1 	cmpne_i s0, s24, s26
   52000:	e0 fa ff f5 	bnz s0, -164 <bulk_free+0x78>
   52004:	19 30 00 a8 	load_32 s0, 12(s25)
   52008:	39 70 00 a8 	load_32 s1, 28(s25)
   5200c:	00 80 90 c1 	cmple_u s0, s0, s1
   52010:	60 00 00 f4 	bnz s0, 12 <bulk_free+0x138>
   52014:	00 00 00 0f 	move s0, 0
   52018:	c9 fa ff f9 	call -5340 <sys_trim>
   5201c:	19 f0 06 a0 	load_u8 s0, 444(s25)
   52020:	00 08 00 01 	and s0, s0, 2
   52024:	e0 00 00 f2 	bz s0, 28 <bulk_free+0x15c>
   52028:	19 00 07 05 	add_i s0, s25, 448
   5202c:	20 00 00 0f 	move s1, 0
   52030:	40 00 00 aa 	load_sync s2, (s0)
   52034:	40 80 f0 c0 	move s2, s1
   52038:	40 00 00 8a 	store_sync s2, (s0)  
   5203c:	a2 ff ff f3 	bz s2, -12 <bulk_free+0x14c>
   52040:	fe b3 00 a8 	load_32 ra, 44(sp)
   52044:	00 00 00 0f 	move s0, 0
   52048:	7e c3 00 a8 	load_32 s27, 48(sp)
   5204c:	5e d3 00 a8 	load_32 s26, 52(sp)
   52050:	3e e3 00 a8 	load_32 s25, 56(sp)
   52054:	1e f3 00 a8 	load_32 s24, 60(sp)
   52058:	de 03 01 05 	add_i sp, sp, 64
   5205c:	1f 00 00 f0 	ret
   52060:	2e 03 00 f8 	call 3256 <abort>

0000000000052064 malloc_trim:
   52064:	de 03 ff 05 	add_i sp, sp, -64
   52068:	1e f3 00 88 	store_32 s24, 60(sp)
   5206c:	fe e3 00 88 	store_32 ra, 56(sp)
   52070:	2c 04 00 4f 	movehi s1, 44
   52074:	41 50 05 00 	or s2, s1, 340
   52078:	22 00 00 a8 	load_32 s1, (s2)
   5207c:	61 05 00 f4 	bnz s1, 172 <malloc_trim+0xc4>
   52080:	2c 04 00 4f 	movehi s1, 44
   52084:	60 04 00 0f 	move s3, 1
   52088:	21 20 0d 00 	or s1, s1, 840
   5208c:	81 00 00 aa 	load_sync s4, (s1)
   52090:	a0 80 f1 c0 	move s5, s3
   52094:	a1 00 00 8a 	store_sync s5, (s1)  
   52098:	a5 ff ff f3 	bz s5, -12 <malloc_trim+0x28>
   5209c:	04 01 00 f2 	bz s4, 32 <malloc_trim+0x58>
   520a0:	81 00 00 a8 	load_32 s4, (s1)
   520a4:	e4 ff ff f5 	bnz s4, -4 <malloc_trim+0x3c>
   520a8:	81 00 00 aa 	load_sync s4, (s1)
   520ac:	a0 80 f1 c0 	move s5, s3
   520b0:	a1 00 00 8a 	store_sync s5, (s1)  
   520b4:	a5 ff ff f3 	bz s5, -12 <malloc_trim+0x44>
   520b8:	44 ff ff f5 	bnz s4, -24 <malloc_trim+0x3c>
   520bc:	62 00 00 a8 	load_32 s3, (s2)
   520c0:	a3 02 00 f4 	bnz s3, 84 <malloc_trim+0xb0>
   520c4:	60 00 40 0f 	move s3, 4096
   520c8:	62 20 00 88 	store_32 s3, 8(s2)
   520cc:	62 10 00 88 	store_32 s3, 4(s2)
   520d0:	60 fc ff 0f 	move s3, -1
   520d4:	62 30 00 88 	store_32 s3, 12(s2)
   520d8:	6c 04 00 4f 	movehi s3, 44
   520dc:	80 20 00 4f 	movehi s4, 256
   520e0:	82 40 00 88 	store_32 s4, 16(s2)
   520e4:	80 08 00 0f 	move s4, 2
   520e8:	82 50 00 88 	store_32 s4, 20(s2)
   520ec:	63 b0 05 00 	or s3, s3, 364
   520f0:	ca 54 55 4f 	movehi s6, 174762
   520f4:	a0 00 00 0f 	move s5, 0
   520f8:	83 f0 06 88 	store_32 s4, 444(s3)
   520fc:	9e d0 00 05 	add_i s4, sp, 52
   52100:	a3 00 07 88 	store_32 s5, 448(s3)
   52104:	66 60 55 00 	or s3, s6, 5464
   52108:	84 c0 ff 01 	and s4, s4, -16
   5210c:	64 80 31 c0 	xor s3, s4, s3
   52110:	62 00 00 88 	store_32 s3, (s2)
   52114:	40 00 00 0f 	move s2, 0
   52118:	61 00 00 aa 	load_sync s3, (s1)
   5211c:	60 00 f1 c0 	move s3, s2
   52120:	61 00 00 8a 	store_sync s3, (s1)  
   52124:	a3 ff ff f3 	bz s3, -12 <malloc_trim+0xb4>
   52128:	2c 04 00 4f 	movehi s1, 44
   5212c:	01 b3 05 00 	or s24, s1, 364
   52130:	38 f0 06 a0 	load_u8 s1, 444(s24)
   52134:	21 08 00 01 	and s1, s1, 2
   52138:	e1 01 00 f2 	bz s1, 60 <malloc_trim+0x110>
   5213c:	38 00 07 05 	add_i s1, s24, 448
   52140:	40 04 00 0f 	move s2, 1
   52144:	61 00 00 aa 	load_sync s3, (s1)
   52148:	80 00 f1 c0 	move s4, s2
   5214c:	81 00 00 8a 	store_sync s4, (s1)  
   52150:	a4 ff ff f3 	bz s4, -12 <malloc_trim+0xe0>
   52154:	03 01 00 f2 	bz s3, 32 <malloc_trim+0x110>
   52158:	78 00 07 a8 	load_32 s3, 448(s24)
   5215c:	e3 ff ff f5 	bnz s3, -4 <malloc_trim+0xf4>
   52160:	61 00 00 aa 	load_sync s3, (s1)
   52164:	80 00 f1 c0 	move s4, s2
   52168:	81 00 00 8a 	store_sync s4, (s1)  
   5216c:	a4 ff ff f3 	bz s4, -12 <malloc_trim+0xfc>
   52170:	43 ff ff f5 	bnz s3, -24 <malloc_trim+0xf4>
   52174:	72 fa ff f9 	call -5688 <sys_trim>
   52178:	38 f0 06 a0 	load_u8 s1, 444(s24)
   5217c:	21 08 00 01 	and s1, s1, 2
   52180:	e1 00 00 f2 	bz s1, 28 <malloc_trim+0x138>
   52184:	38 00 07 05 	add_i s1, s24, 448
   52188:	40 00 00 0f 	move s2, 0
   5218c:	61 00 00 aa 	load_sync s3, (s1)
   52190:	60 00 f1 c0 	move s3, s2
   52194:	61 00 00 8a 	store_sync s3, (s1)  
   52198:	a3 ff ff f3 	bz s3, -12 <malloc_trim+0x128>
   5219c:	fe e3 00 a8 	load_32 ra, 56(sp)
   521a0:	1e f3 00 a8 	load_32 s24, 60(sp)
   521a4:	de 03 01 05 	add_i sp, sp, 64
   521a8:	1f 00 00 f0 	ret

00000000000521ac malloc_footprint:
   521ac:	0c 04 00 4f 	movehi s0, 44
   521b0:	00 b0 05 00 	or s0, s0, 364
   521b4:	00 c0 06 a8 	load_32 s0, 432(s0)
   521b8:	1f 00 00 f0 	ret

00000000000521bc malloc_max_footprint:
   521bc:	0c 04 00 4f 	movehi s0, 44
   521c0:	00 b0 05 00 	or s0, s0, 364
   521c4:	00 d0 06 a8 	load_32 s0, 436(s0)
   521c8:	1f 00 00 f0 	ret

00000000000521cc malloc_footprint_limit:
   521cc:	0c 04 00 4f 	movehi s0, 44
   521d0:	00 b0 05 00 	or s0, s0, 364
   521d4:	00 e0 06 a8 	load_32 s0, 440(s0)
   521d8:	20 00 00 10 	cmpeq_i s1, s0, 0
   521dc:	41 00 00 f4 	bnz s1, 8 <malloc_footprint_limit+0x18>
   521e0:	02 00 00 f6 	b 8 <malloc_footprint_limit+0x1c>
   521e4:	00 fc ff 0f 	move s0, -1
   521e8:	1f 00 00 f0 	ret

00000000000521ec malloc_set_footprint_limit:
   521ec:	20 fc ff 10 	cmpeq_i s1, s0, -1
   521f0:	a1 01 00 f4 	bnz s1, 52 <malloc_set_footprint_limit+0x38>
   521f4:	2c 04 00 4f 	movehi s1, 44
   521f8:	40 00 00 0f 	move s2, 0
   521fc:	21 50 05 00 	or s1, s1, 340
   52200:	21 20 00 a8 	load_32 s1, 8(s1)
   52204:	00 80 50 c0 	add_i s0, s0, s1
   52208:	22 80 60 c0 	sub_i s1, s2, s1
   5220c:	00 fc ff 05 	add_i s0, s0, -1
   52210:	00 80 10 c0 	and s0, s0, s1
   52214:	2c 04 00 4f 	movehi s1, 44
   52218:	21 b0 05 00 	or s1, s1, 364
   5221c:	01 e0 06 88 	store_32 s0, 440(s1)
   52220:	1f 00 00 f0 	ret
   52224:	00 00 00 0f 	move s0, 0
   52228:	2c 04 00 4f 	movehi s1, 44
   5222c:	21 b0 05 00 	or s1, s1, 364
   52230:	01 e0 06 88 	store_32 s0, 440(s1)
   52234:	1f 00 00 f0 	ret

0000000000052238 mallinfo:
   52238:	de 03 ff 05 	add_i sp, sp, -64
   5223c:	1e f3 00 88 	store_32 s24, 60(sp)
   52240:	3e e3 00 88 	store_32 s25, 56(sp)
   52244:	fe d3 00 88 	store_32 ra, 52(sp)
   52248:	20 03 00 0f 	move s25, 0
   5224c:	00 03 f0 c0 	move s24, s0
   52250:	40 a0 00 0f 	move s2, 40
   52254:	20 80 fc c0 	move s1, s25
   52258:	45 03 00 f8 	call 3348 <memset>
   5225c:	0c 04 00 4f 	movehi s0, 44
   52260:	20 50 05 00 	or s1, s0, 340
   52264:	01 00 00 a8 	load_32 s0, (s1)
   52268:	60 05 00 f4 	bnz s0, 172 <mallinfo+0xdc>
   5226c:	0c 04 00 4f 	movehi s0, 44
   52270:	40 04 00 0f 	move s2, 1
   52274:	00 20 0d 00 	or s0, s0, 840
   52278:	60 00 00 aa 	load_sync s3, (s0)
   5227c:	80 00 f1 c0 	move s4, s2
   52280:	80 00 00 8a 	store_sync s4, (s0)  
   52284:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x40>
   52288:	03 01 00 f2 	bz s3, 32 <mallinfo+0x70>
   5228c:	60 00 00 a8 	load_32 s3, (s0)
   52290:	e3 ff ff f5 	bnz s3, -4 <mallinfo+0x54>
   52294:	60 00 00 aa 	load_sync s3, (s0)
   52298:	80 00 f1 c0 	move s4, s2
   5229c:	80 00 00 8a 	store_sync s4, (s0)  
   522a0:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x5c>
   522a4:	43 ff ff f5 	bnz s3, -24 <mallinfo+0x54>
   522a8:	41 00 00 a8 	load_32 s2, (s1)
   522ac:	a2 02 00 f4 	bnz s2, 84 <mallinfo+0xc8>
   522b0:	40 00 40 0f 	move s2, 4096
   522b4:	41 20 00 88 	store_32 s2, 8(s1)
   522b8:	41 10 00 88 	store_32 s2, 4(s1)
   522bc:	40 fc ff 0f 	move s2, -1
   522c0:	41 30 00 88 	store_32 s2, 12(s1)
   522c4:	4c 04 00 4f 	movehi s2, 44
   522c8:	60 20 00 4f 	movehi s3, 256
   522cc:	61 40 00 88 	store_32 s3, 16(s1)
   522d0:	60 08 00 0f 	move s3, 2
   522d4:	61 50 00 88 	store_32 s3, 20(s1)
   522d8:	42 b0 05 00 	or s2, s2, 364
   522dc:	aa 54 55 4f 	movehi s5, 174762
   522e0:	80 00 00 0f 	move s4, 0
   522e4:	62 f0 06 88 	store_32 s3, 444(s2)
   522e8:	7e c0 00 05 	add_i s3, sp, 48
   522ec:	82 00 07 88 	store_32 s4, 448(s2)
   522f0:	45 60 55 00 	or s2, s5, 5464
   522f4:	63 c0 ff 01 	and s3, s3, -16
   522f8:	43 00 31 c0 	xor s2, s3, s2
   522fc:	41 00 00 88 	store_32 s2, (s1)
   52300:	20 00 00 0f 	move s1, 0
   52304:	40 00 00 aa 	load_sync s2, (s0)
   52308:	40 80 f0 c0 	move s2, s1
   5230c:	40 00 00 8a 	store_sync s2, (s0)  
   52310:	a2 ff ff f3 	bz s2, -12 <mallinfo+0xcc>
   52314:	0c 04 00 4f 	movehi s0, 44
   52318:	00 b0 05 00 	or s0, s0, 364
   5231c:	20 f0 06 a0 	load_u8 s1, 444(s0)
   52320:	21 08 00 01 	and s1, s1, 2
   52324:	e1 01 00 f2 	bz s1, 60 <mallinfo+0x128>
   52328:	20 00 07 05 	add_i s1, s0, 448
   5232c:	40 04 00 0f 	move s2, 1
   52330:	61 00 00 aa 	load_sync s3, (s1)
   52334:	80 00 f1 c0 	move s4, s2
   52338:	81 00 00 8a 	store_sync s4, (s1)  
   5233c:	a4 ff ff f3 	bz s4, -12 <mallinfo+0xf8>
   52340:	03 01 00 f2 	bz s3, 32 <mallinfo+0x128>
   52344:	60 00 07 a8 	load_32 s3, 448(s0)
   52348:	e3 ff ff f5 	bnz s3, -4 <mallinfo+0x10c>
   5234c:	61 00 00 aa 	load_sync s3, (s1)
   52350:	80 00 f1 c0 	move s4, s2
   52354:	81 00 00 8a 	store_sync s4, (s1)  
   52358:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x114>
   5235c:	43 ff ff f5 	bnz s3, -24 <mallinfo+0x10c>
   52360:	40 60 00 a8 	load_32 s2, 24(s0)
   52364:	62 06 00 f2 	bz s2, 204 <mallinfo+0x1f8>
   52368:	20 30 00 a8 	load_32 s1, 12(s0)
   5236c:	c0 10 07 05 	add_i s6, s0, 452
   52370:	a0 04 00 0f 	move s5, 1
   52374:	e0 e0 ff 0f 	move s7, -8
   52378:	61 a0 00 05 	add_i s3, s1, 40
   5237c:	80 80 f1 c0 	move s4, s3
   52380:	06 01 00 a8 	load_32 s8, (s6)
   52384:	28 21 00 05 	add_i s9, s8, 8
   52388:	29 1d 00 01 	and s9, s9, 7
   5238c:	49 01 00 10 	cmpeq_i s10, s9, 0
   52390:	20 81 fc c0 	move s9, s25
   52394:	6a 00 00 f4 	bnz s10, 12 <mallinfo+0x168>
   52398:	27 01 64 c0 	sub_i s9, s7, s8
   5239c:	29 1d 00 01 	and s9, s9, 7
   523a0:	46 11 00 a8 	load_32 s10, 4(s6)
   523a4:	28 81 54 c0 	add_i s9, s8, s9
   523a8:	48 01 55 c0 	add_i s10, s8, s10
   523ac:	69 01 75 c1 	cmpge_u s11, s9, s10
   523b0:	6b 02 00 f4 	bnz s11, 76 <mallinfo+0x1c4>
   523b4:	62 81 04 c1 	cmpeq_i s11, s2, s9
   523b8:	2b 02 00 f4 	bnz s11, 68 <mallinfo+0x1c4>
   523bc:	69 11 00 a8 	load_32 s11, 4(s9)
   523c0:	8b 1d 00 10 	cmpeq_i s12, s11, 7
   523c4:	cc 01 00 f4 	bnz s12, 56 <mallinfo+0x1c4>
   523c8:	8b 0d 00 01 	and s12, s11, 3
   523cc:	6b e1 ff 01 	and s11, s11, -8
   523d0:	8c 05 00 10 	cmpeq_i s12, s12, 1
   523d4:	a0 81 f5 c0 	move s13, s11
   523d8:	4c 00 00 f4 	bnz s12, 8 <mallinfo+0x1a8>
   523dc:	a0 81 fc c0 	move s13, s25
   523e0:	29 81 55 c0 	add_i s9, s9, s11
   523e4:	6b 80 51 c0 	add_i s3, s11, s3
   523e8:	6c 05 00 01 	and s11, s12, 1
   523ec:	8d 00 52 c0 	add_i s4, s13, s4
   523f0:	89 01 74 c1 	cmpge_u s12, s9, s8
   523f4:	a5 80 55 c0 	add_i s5, s5, s11
   523f8:	ac fd ff f5 	bnz s12, -76 <mallinfo+0x174>
   523fc:	c6 20 00 a8 	load_32 s6, 8(s6)
   52400:	06 fc ff f5 	bnz s6, -128 <mallinfo+0x148>
   52404:	78 00 00 88 	store_32 s3, (s24)
   52408:	b8 10 00 88 	store_32 s5, 4(s24)
   5240c:	40 c0 06 a8 	load_32 s2, 432(s0)
   52410:	62 80 61 c0 	sub_i s3, s2, s3
   52414:	78 40 00 88 	store_32 s3, 16(s24)
   52418:	60 d0 06 a8 	load_32 s3, 436(s0)
   5241c:	42 00 62 c0 	sub_i s2, s2, s4
   52420:	78 50 00 88 	store_32 s3, 20(s24)
   52424:	58 70 00 88 	store_32 s2, 28(s24)
   52428:	98 80 00 88 	store_32 s4, 32(s24)
   5242c:	38 90 00 88 	store_32 s1, 36(s24)
   52430:	20 f0 06 a0 	load_u8 s1, 444(s0)
   52434:	21 08 00 01 	and s1, s1, 2
   52438:	e1 00 00 f2 	bz s1, 28 <mallinfo+0x21c>
   5243c:	00 00 07 05 	add_i s0, s0, 448
   52440:	20 00 00 0f 	move s1, 0
   52444:	40 00 00 aa 	load_sync s2, (s0)
   52448:	40 80 f0 c0 	move s2, s1
   5244c:	40 00 00 8a 	store_sync s2, (s0)  
   52450:	a2 ff ff f3 	bz s2, -12 <mallinfo+0x20c>
   52454:	00 00 fc c0 	move s0, s24
   52458:	fe d3 00 a8 	load_32 ra, 52(sp)
   5245c:	3e e3 00 a8 	load_32 s25, 56(sp)
   52460:	1e f3 00 a8 	load_32 s24, 60(sp)
   52464:	de 03 01 05 	add_i sp, sp, 64
   52468:	1f 00 00 f0 	ret

000000000005246c mallopt:
   5246c:	de 03 ff 05 	add_i sp, sp, -64
   52470:	4c 04 00 4f 	movehi s2, 44
   52474:	62 50 05 00 	or s3, s2, 340
   52478:	43 00 00 a8 	load_32 s2, (s3)
   5247c:	62 05 00 f4 	bnz s2, 172 <mallopt+0xbc>
   52480:	4c 04 00 4f 	movehi s2, 44
   52484:	80 04 00 0f 	move s4, 1
   52488:	42 20 0d 00 	or s2, s2, 840
   5248c:	a2 00 00 aa 	load_sync s5, (s2)
   52490:	c0 00 f2 c0 	move s6, s4
   52494:	c2 00 00 8a 	store_sync s6, (s2)  
   52498:	a6 ff ff f3 	bz s6, -12 <mallopt+0x20>
   5249c:	05 01 00 f2 	bz s5, 32 <mallopt+0x50>
   524a0:	a2 00 00 a8 	load_32 s5, (s2)
   524a4:	e5 ff ff f5 	bnz s5, -4 <mallopt+0x34>
   524a8:	a2 00 00 aa 	load_sync s5, (s2)
   524ac:	c0 00 f2 c0 	move s6, s4
   524b0:	c2 00 00 8a 	store_sync s6, (s2)  
   524b4:	a6 ff ff f3 	bz s6, -12 <mallopt+0x3c>
   524b8:	45 ff ff f5 	bnz s5, -24 <mallopt+0x34>
   524bc:	83 00 00 a8 	load_32 s4, (s3)
   524c0:	a4 02 00 f4 	bnz s4, 84 <mallopt+0xa8>
   524c4:	80 00 40 0f 	move s4, 4096
   524c8:	83 20 00 88 	store_32 s4, 8(s3)
   524cc:	83 10 00 88 	store_32 s4, 4(s3)
   524d0:	80 fc ff 0f 	move s4, -1
   524d4:	83 30 00 88 	store_32 s4, 12(s3)
   524d8:	8c 04 00 4f 	movehi s4, 44
   524dc:	a0 20 00 4f 	movehi s5, 256
   524e0:	a3 40 00 88 	store_32 s5, 16(s3)
   524e4:	a0 08 00 0f 	move s5, 2
   524e8:	a3 50 00 88 	store_32 s5, 20(s3)
   524ec:	84 b0 05 00 	or s4, s4, 364
   524f0:	ea 54 55 4f 	movehi s7, 174762
   524f4:	c0 00 00 0f 	move s6, 0
   524f8:	a4 f0 06 88 	store_32 s5, 444(s4)
   524fc:	be f0 00 05 	add_i s5, sp, 60
   52500:	c4 00 07 88 	store_32 s6, 448(s4)
   52504:	87 60 55 00 	or s4, s7, 5464
   52508:	a5 c0 ff 01 	and s5, s5, -16
   5250c:	85 00 32 c0 	xor s4, s5, s4
   52510:	83 00 00 88 	store_32 s4, (s3)
   52514:	80 00 00 0f 	move s4, 0
   52518:	a2 00 00 aa 	load_sync s5, (s2)
   5251c:	a0 00 f2 c0 	move s5, s4
   52520:	a2 00 00 8a 	store_sync s5, (s2)  
   52524:	a5 ff ff f3 	bz s5, -12 <mallopt+0xac>
   52528:	40 f4 ff 10 	cmpeq_i s2, s0, -3
   5252c:	02 01 00 f4 	bnz s2, 32 <mallopt+0xe0>
   52530:	80 f8 ff 10 	cmpeq_i s4, s0, -2
   52534:	40 00 00 0f 	move s2, 0
   52538:	44 01 00 f4 	bnz s4, 40 <mallopt+0xf4>
   5253c:	00 fc ff 11 	cmpne_i s0, s0, -1
   52540:	a0 00 00 f4 	bnz s0, 20 <mallopt+0xe8>
   52544:	23 40 00 88 	store_32 s1, 16(s3)
   52548:	02 00 00 f6 	b 8 <mallopt+0xe4>
   5254c:	23 30 00 88 	store_32 s1, 12(s3)
   52550:	40 04 00 0f 	move s2, 1
   52554:	00 00 f1 c0 	move s0, s2
   52558:	de 03 01 05 	add_i sp, sp, 64
   5255c:	1f 00 00 f0 	ret
   52560:	03 10 00 a8 	load_32 s0, 4(s3)
   52564:	00 80 60 c1 	cmpgt_u s0, s0, s1
   52568:	60 ff ff f5 	bnz s0, -20 <mallopt+0xe8>
   5256c:	01 fc ff 05 	add_i s0, s1, -1
   52570:	00 80 10 c0 	and s0, s0, s1
   52574:	00 ff ff f5 	bnz s0, -32 <mallopt+0xe8>
   52578:	23 20 00 88 	store_32 s1, 8(s3)
   5257c:	f5 ff ff f7 	b -44 <mallopt+0xe4>

0000000000052580 malloc_usable_size:
   52580:	20 00 f0 c0 	move s1, s0
   52584:	00 00 00 0f 	move s0, 0
   52588:	81 01 00 f2 	bz s1, 48 <malloc_usable_size+0x38>
   5258c:	21 f0 ff a9 	load_32 s1, -4(s1)
   52590:	41 0c 00 01 	and s2, s1, 3
   52594:	62 04 00 10 	cmpeq_i s3, s2, 1
   52598:	03 01 00 f4 	bnz s3, 32 <malloc_usable_size+0x38>
   5259c:	42 00 00 10 	cmpeq_i s2, s2, 0
   525a0:	01 e0 ff 01 	and s0, s1, -8
   525a4:	62 00 00 f4 	bnz s2, 12 <malloc_usable_size+0x30>
   525a8:	20 10 00 0f 	move s1, 4
   525ac:	02 00 00 f6 	b 8 <malloc_usable_size+0x34>
   525b0:	20 20 00 0f 	move s1, 8
   525b4:	00 80 60 c0 	sub_i s0, s0, s1
   525b8:	1f 00 00 f0 	ret

00000000000525bc dispose_chunk:
   525bc:	de 03 ff 05 	add_i sp, sp, -64
   525c0:	fe f3 00 88 	store_32 ra, 60(sp)
   525c4:	60 10 00 a8 	load_32 s3, 4(s0)
   525c8:	40 80 50 c0 	add_i s2, s0, s1
   525cc:	83 04 00 01 	and s4, s3, 1
   525d0:	04 12 00 f4 	bnz s4, 576 <dispose_chunk+0x254>
   525d4:	80 00 00 a8 	load_32 s4, (s0)
   525d8:	63 0c 00 01 	and s3, s3, 3
   525dc:	a3 1c 00 f2 	bz s3, 916 <dispose_chunk+0x3b4>
   525e0:	6c 04 00 4f 	movehi s3, 44
   525e4:	00 00 62 c0 	sub_i s0, s0, s4
   525e8:	63 b0 05 00 	or s3, s3, 364
   525ec:	c3 40 00 a8 	load_32 s6, 16(s3)
   525f0:	a0 00 83 c1 	cmplt_u s5, s0, s6
   525f4:	05 39 00 f4 	bnz s5, 1824 <dispose_chunk+0x758>
   525f8:	a3 50 00 a8 	load_32 s5, 20(s3)
   525fc:	24 80 50 c0 	add_i s1, s4, s1
   52600:	a5 00 00 c1 	cmpeq_i s5, s5, s0
   52604:	a5 03 00 f4 	bnz s5, 116 <dispose_chunk+0xbc>
   52608:	a4 fc 03 16 	cmpgt_u s5, s4, 255
   5260c:	65 04 00 f4 	bnz s5, 140 <dispose_chunk+0xdc>
   52610:	e4 0c 00 0a 	shr s7, s4, 3
   52614:	80 20 00 a8 	load_32 s4, 8(s0)
   52618:	a7 0c 00 0b 	shl s5, s7, 3
   5261c:	a3 80 52 c0 	add_i s5, s3, s5
   52620:	05 a1 00 05 	add_i s8, s5, 40
   52624:	a0 30 00 a8 	load_32 s5, 12(s0)
   52628:	24 01 04 c1 	cmpeq_i s9, s4, s8
   5262c:	c9 00 00 f4 	bnz s9, 24 <dispose_chunk+0x88>
   52630:	26 01 62 c1 	cmpgt_u s9, s6, s4
   52634:	09 37 00 f4 	bnz s9, 1760 <dispose_chunk+0x758>
   52638:	24 31 00 a8 	load_32 s9, 12(s4)
   5263c:	29 01 10 c1 	cmpne_i s9, s9, s0
   52640:	a9 36 00 f4 	bnz s9, 1748 <dispose_chunk+0x758>
   52644:	25 01 12 c1 	cmpne_i s9, s5, s4
   52648:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x94>
   5264c:	29 00 00 f6 	b 164 <dispose_chunk+0x134>
   52650:	65 00 04 c1 	cmpeq_i s3, s5, s8
   52654:	c3 00 00 f4 	bnz s3, 24 <dispose_chunk+0xb0>
   52658:	66 80 62 c1 	cmpgt_u s3, s6, s5
   5265c:	c3 35 00 f4 	bnz s3, 1720 <dispose_chunk+0x758>
   52660:	65 20 00 a8 	load_32 s3, 8(s5)
   52664:	63 00 10 c1 	cmpne_i s3, s3, s0
   52668:	63 35 00 f4 	bnz s3, 1708 <dispose_chunk+0x758>
   5266c:	a4 30 00 88 	store_32 s5, 12(s4)
   52670:	85 20 00 88 	store_32 s4, 8(s5)
   52674:	67 00 00 f6 	b 412 <dispose_chunk+0x254>
   52678:	82 10 00 a8 	load_32 s4, 4(s2)
   5267c:	a4 0c 00 01 	and s5, s4, 3
   52680:	a5 0c 00 11 	cmpne_i s5, s5, 3
   52684:	65 0c 00 f4 	bnz s5, 396 <dispose_chunk+0x254>
   52688:	23 20 00 88 	store_32 s1, 8(s3)
   5268c:	64 f8 ff 01 	and s3, s4, -2
   52690:	62 10 00 88 	store_32 s3, 4(s2)
   52694:	bf 00 00 f6 	b 764 <dispose_chunk+0x3d4>
   52698:	80 60 00 a8 	load_32 s4, 24(s0)
   5269c:	a0 30 00 a8 	load_32 s5, 12(s0)
   526a0:	e5 00 00 c1 	cmpeq_i s7, s5, s0
   526a4:	c7 01 00 f4 	bnz s7, 56 <dispose_chunk+0x120>
   526a8:	e0 20 00 a8 	load_32 s7, 8(s0)
   526ac:	c6 80 63 c1 	cmpgt_u s6, s6, s7
   526b0:	26 33 00 f4 	bnz s6, 1636 <dispose_chunk+0x758>
   526b4:	c7 30 00 a8 	load_32 s6, 12(s7)
   526b8:	c6 00 10 c1 	cmpne_i s6, s6, s0
   526bc:	c6 32 00 f4 	bnz s6, 1624 <dispose_chunk+0x758>
   526c0:	c5 20 00 a8 	load_32 s6, 8(s5)
   526c4:	c6 00 10 c1 	cmpne_i s6, s6, s0
   526c8:	66 32 00 f4 	bnz s6, 1612 <dispose_chunk+0x758>
   526cc:	a7 30 00 88 	store_32 s5, 12(s7)
   526d0:	e5 20 00 88 	store_32 s7, 8(s5)
   526d4:	e4 09 00 f2 	bz s4, 316 <dispose_chunk+0x254>
   526d8:	1d 00 00 f6 	b 116 <dispose_chunk+0x190>
   526dc:	00 51 00 a8 	load_32 s8, 20(s0)
   526e0:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x12c>
   526e4:	0a 00 00 f6 	b 40 <dispose_chunk+0x150>
   526e8:	e0 50 00 05 	add_i s7, s0, 20
   526ec:	0b 00 00 f6 	b 44 <dispose_chunk+0x15c>
   526f0:	80 04 00 0f 	move s4, 1
   526f4:	a3 00 00 a8 	load_32 s5, (s3)
   526f8:	84 80 b3 c0 	shl s4, s4, s7
   526fc:	84 fc ff 03 	xor s4, s4, -1
   52700:	85 00 12 c0 	and s4, s5, s4
   52704:	83 00 00 88 	store_32 s4, (s3)
   52708:	42 00 00 f6 	b 264 <dispose_chunk+0x254>
   5270c:	e0 40 00 05 	add_i s7, s0, 16
   52710:	07 01 00 a8 	load_32 s8, (s7)
   52714:	48 2f 00 f2 	bz s8, 1512 <dispose_chunk+0x740>
   52718:	a0 00 f4 c0 	move s5, s8
   5271c:	05 51 00 a8 	load_32 s8, 20(s5)
   52720:	20 81 f3 c0 	move s9, s7
   52724:	e5 50 00 05 	add_i s7, s5, 20
   52728:	88 ff ff f5 	bnz s8, -16 <dispose_chunk+0x15c>
   5272c:	05 41 00 a8 	load_32 s8, 16(s5)
   52730:	e5 40 00 05 	add_i s7, s5, 16
   52734:	28 ff ff f5 	bnz s8, -28 <dispose_chunk+0x15c>
   52738:	c6 80 64 c1 	cmpgt_u s6, s6, s9
   5273c:	c6 2e 00 f4 	bnz s6, 1496 <dispose_chunk+0x758>
   52740:	c0 00 00 0f 	move s6, 0
   52744:	c9 00 00 88 	store_32 s6, (s9)
   52748:	44 06 00 f2 	bz s4, 200 <dispose_chunk+0x254>
   5274c:	c0 70 00 a8 	load_32 s6, 28(s0)
   52750:	e6 08 00 0b 	shl s7, s6, 2
   52754:	e3 80 53 c0 	add_i s7, s3, s7
   52758:	07 c1 04 a8 	load_32 s8, 304(s7)
   5275c:	08 01 10 c1 	cmpne_i s8, s8, s0
   52760:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x1ac>
   52764:	0c 00 00 f6 	b 48 <dispose_chunk+0x1d8>
   52768:	c3 40 00 a8 	load_32 s6, 16(s3)
   5276c:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   52770:	26 2d 00 f4 	bnz s6, 1444 <dispose_chunk+0x758>
   52774:	c4 40 00 a8 	load_32 s6, 16(s4)
   52778:	c6 00 00 c1 	cmpeq_i s6, s6, s0
   5277c:	06 02 00 f4 	bnz s6, 64 <dispose_chunk+0x200>
   52780:	c0 50 00 0f 	move s6, 20
   52784:	c4 00 53 c0 	add_i s6, s4, s6
   52788:	a6 00 00 88 	store_32 s5, (s6)
   5278c:	25 04 00 f2 	bz s5, 132 <dispose_chunk+0x254>
   52790:	0f 00 00 f6 	b 60 <dispose_chunk+0x210>
   52794:	e7 c0 04 05 	add_i s7, s7, 304
   52798:	a7 00 00 88 	store_32 s5, (s7)
   5279c:	85 01 00 f4 	bnz s5, 48 <dispose_chunk+0x210>
   527a0:	80 04 00 0f 	move s4, 1
   527a4:	a3 10 00 a8 	load_32 s5, 4(s3)
   527a8:	84 00 b3 c0 	shl s4, s4, s6
   527ac:	84 fc ff 03 	xor s4, s4, -1
   527b0:	85 00 12 c0 	and s4, s5, s4
   527b4:	83 10 00 88 	store_32 s4, 4(s3)
   527b8:	16 00 00 f6 	b 88 <dispose_chunk+0x254>
   527bc:	c0 40 00 0f 	move s6, 16
   527c0:	c4 00 53 c0 	add_i s6, s4, s6
   527c4:	a6 00 00 88 	store_32 s5, (s6)
   527c8:	45 02 00 f2 	bz s5, 72 <dispose_chunk+0x254>
   527cc:	c3 40 00 a8 	load_32 s6, 16(s3)
   527d0:	e6 80 62 c1 	cmpgt_u s7, s6, s5
   527d4:	07 2a 00 f4 	bnz s7, 1344 <dispose_chunk+0x758>
   527d8:	85 60 00 88 	store_32 s4, 24(s5)
   527dc:	80 40 00 a8 	load_32 s4, 16(s0)
   527e0:	a4 00 00 f2 	bz s4, 20 <dispose_chunk+0x238>
   527e4:	c6 00 62 c1 	cmpgt_u s6, s6, s4
   527e8:	66 29 00 f4 	bnz s6, 1324 <dispose_chunk+0x758>
   527ec:	85 40 00 88 	store_32 s4, 16(s5)
   527f0:	a4 60 00 88 	store_32 s5, 24(s4)
   527f4:	80 50 00 a8 	load_32 s4, 20(s0)
   527f8:	c4 00 00 f2 	bz s4, 24 <dispose_chunk+0x254>
   527fc:	63 40 00 a8 	load_32 s3, 16(s3)
   52800:	63 00 62 c1 	cmpgt_u s3, s3, s4
   52804:	83 28 00 f4 	bnz s3, 1296 <dispose_chunk+0x758>
   52808:	85 50 00 88 	store_32 s4, 20(s5)
   5280c:	a4 60 00 88 	store_32 s5, 24(s4)
   52810:	6c 04 00 4f 	movehi s3, 44
   52814:	63 b0 05 00 	or s3, s3, 364
   52818:	e3 40 00 a8 	load_32 s7, 16(s3)
   5281c:	82 80 83 c1 	cmplt_u s4, s2, s7
   52820:	a4 27 00 f4 	bnz s4, 1268 <dispose_chunk+0x758>
   52824:	82 10 00 a8 	load_32 s4, 4(s2)
   52828:	a4 08 00 01 	and s5, s4, 2
   5282c:	a5 04 00 f4 	bnz s5, 148 <dispose_chunk+0x304>
   52830:	a3 60 00 a8 	load_32 s5, 24(s3)
   52834:	a5 00 11 c1 	cmpne_i s5, s5, s2
   52838:	45 00 00 f4 	bnz s5, 8 <dispose_chunk+0x284>
   5283c:	43 00 00 f6 	b 268 <dispose_chunk+0x38c>
   52840:	a3 50 00 a8 	load_32 s5, 20(s3)
   52844:	a5 00 11 c1 	cmpne_i s5, s5, s2
   52848:	45 00 00 f4 	bnz s5, 8 <dispose_chunk+0x294>
   5284c:	4c 00 00 f6 	b 304 <dispose_chunk+0x3c0>
   52850:	a4 fc 03 16 	cmpgt_u s5, s4, 255
   52854:	e5 0b 00 f4 	bnz s5, 380 <dispose_chunk+0x414>
   52858:	04 0d 00 0a 	shr s8, s4, 3
   5285c:	a2 20 00 a8 	load_32 s5, 8(s2)
   52860:	c8 0c 00 0b 	shl s6, s8, 3
   52864:	c3 00 53 c0 	add_i s6, s3, s6
   52868:	26 a1 00 05 	add_i s9, s6, 40
   5286c:	c2 30 00 a8 	load_32 s6, 12(s2)
   52870:	45 81 04 c1 	cmpeq_i s10, s5, s9
   52874:	ca 00 00 f4 	bnz s10, 24 <dispose_chunk+0x2d0>
   52878:	47 81 62 c1 	cmpgt_u s10, s7, s5
   5287c:	ca 24 00 f4 	bnz s10, 1176 <dispose_chunk+0x758>
   52880:	45 31 00 a8 	load_32 s10, 12(s5)
   52884:	4a 01 11 c1 	cmpne_i s10, s10, s2
   52888:	6a 24 00 f4 	bnz s10, 1164 <dispose_chunk+0x758>
   5288c:	46 81 12 c1 	cmpne_i s10, s6, s5
   52890:	4a 00 00 f4 	bnz s10, 8 <dispose_chunk+0x2dc>
   52894:	c5 00 00 f6 	b 788 <dispose_chunk+0x5ec>
   52898:	06 81 04 c1 	cmpeq_i s8, s6, s9
   5289c:	c8 00 00 f4 	bnz s8, 24 <dispose_chunk+0x2f8>
   528a0:	e7 00 63 c1 	cmpgt_u s7, s7, s6
   528a4:	87 23 00 f4 	bnz s7, 1136 <dispose_chunk+0x758>
   528a8:	e6 20 00 a8 	load_32 s7, 8(s6)
   528ac:	47 00 11 c1 	cmpne_i s2, s7, s2
   528b0:	22 23 00 f4 	bnz s2, 1124 <dispose_chunk+0x758>
   528b4:	c5 30 00 88 	store_32 s6, 12(s5)
   528b8:	a6 20 00 88 	store_32 s5, 8(s6)
   528bc:	03 01 00 f6 	b 1036 <dispose_chunk+0x70c>
   528c0:	84 f8 ff 01 	and s4, s4, -2
   528c4:	82 10 00 88 	store_32 s4, 4(s2)
   528c8:	40 80 50 c0 	add_i s2, s0, s1
   528cc:	81 04 00 00 	or s4, s1, 1
   528d0:	80 10 00 88 	store_32 s4, 4(s0)
   528d4:	22 00 00 88 	store_32 s1, (s2)
   528d8:	41 fc 03 16 	cmpgt_u s2, s1, 255
   528dc:	02 02 00 f4 	bnz s2, 64 <dispose_chunk+0x360>
   528e0:	21 0c 00 0a 	shr s1, s1, 3
   528e4:	43 00 00 a8 	load_32 s2, (s3)
   528e8:	80 04 00 0f 	move s4, 1
   528ec:	a1 0c 00 0b 	shl s5, s1, 3
   528f0:	a3 80 52 c0 	add_i s5, s3, s5
   528f4:	84 80 b0 c0 	shl s4, s4, s1
   528f8:	c2 00 12 c0 	and s6, s2, s4
   528fc:	25 a0 00 05 	add_i s1, s5, 40
   52900:	46 00 00 f4 	bnz s6, 8 <dispose_chunk+0x34c>
   52904:	29 00 00 f6 	b 164 <dispose_chunk+0x3ec>
   52908:	41 20 00 a8 	load_32 s2, 8(s1)
   5290c:	63 40 00 a8 	load_32 s3, 16(s3)
   52910:	63 00 91 c1 	cmple_u s3, s3, s2
   52914:	03 05 00 f4 	bnz s3, 160 <dispose_chunk+0x3f8>
   52918:	ff 00 00 f6 	b 1020 <dispose_chunk+0x758>
   5291c:	40 00 00 0f 	move s2, 0
   52920:	a1 20 00 0a 	shr s5, s1, 8
   52924:	80 00 f1 c0 	move s4, s2
   52928:	e5 0a 00 f2 	bz s5, 348 <dispose_chunk+0x4c8>
   5292c:	9f fc 00 4f 	movehi s4, 2047
   52930:	84 fc 7f 00 	or s4, s4, 8191
   52934:	81 00 62 c1 	cmpgt_u s4, s1, s4
   52938:	44 00 00 f4 	bnz s4, 8 <dispose_chunk+0x384>
   5293c:	36 00 00 f6 	b 216 <dispose_chunk+0x458>
   52940:	80 7c 00 0f 	move s4, 31
   52944:	50 00 00 f6 	b 320 <dispose_chunk+0x4c8>
   52948:	43 30 00 a8 	load_32 s2, 12(s3)
   5294c:	22 80 50 c0 	add_i s1, s2, s1
   52950:	23 30 00 88 	store_32 s1, 12(s3)
   52954:	03 60 00 88 	store_32 s0, 24(s3)
   52958:	21 04 00 00 	or s1, s1, 1
   5295c:	20 10 00 88 	store_32 s1, 4(s0)
   52960:	23 50 00 a8 	load_32 s1, 20(s3)
   52964:	00 80 10 c1 	cmpne_i s0, s0, s1
   52968:	40 00 00 f4 	bnz s0, 8 <dispose_chunk+0x3b4>
   5296c:	84 00 00 f6 	b 528 <dispose_chunk+0x5c0>
   52970:	fe f3 00 a8 	load_32 ra, 60(sp)
   52974:	de 03 01 05 	add_i sp, sp, 64
   52978:	1f 00 00 f0 	ret
   5297c:	43 20 00 a8 	load_32 s2, 8(s3)
   52980:	22 80 50 c0 	add_i s1, s2, s1
   52984:	23 20 00 88 	store_32 s1, 8(s3)
   52988:	03 50 00 88 	store_32 s0, 20(s3)
   5298c:	40 80 50 c0 	add_i s2, s0, s1
   52990:	61 04 00 00 	or s3, s1, 1
   52994:	60 10 00 88 	store_32 s3, 4(s0)
   52998:	22 00 00 88 	store_32 s1, (s2)
   5299c:	fe f3 00 a8 	load_32 ra, 60(sp)
   529a0:	de 03 01 05 	add_i sp, sp, 64
   529a4:	1f 00 00 f0 	ret
   529a8:	42 00 02 c0 	or s2, s2, s4
   529ac:	43 00 00 88 	store_32 s2, (s3)
   529b0:	40 80 f0 c0 	move s2, s1
   529b4:	01 20 00 88 	store_32 s0, 8(s1)
   529b8:	02 30 00 88 	store_32 s0, 12(s2)
   529bc:	40 20 00 88 	store_32 s2, 8(s0)
   529c0:	20 30 00 88 	store_32 s1, 12(s0)
   529c4:	fe f3 00 a8 	load_32 ra, 60(sp)
   529c8:	de 03 01 05 	add_i sp, sp, 64
   529cc:	1f 00 00 f0 	ret
   529d0:	a2 60 00 a8 	load_32 s5, 24(s2)
   529d4:	c2 30 00 a8 	load_32 s6, 12(s2)
   529d8:	06 01 01 c1 	cmpeq_i s8, s6, s2
   529dc:	c8 0d 00 f4 	bnz s8, 440 <dispose_chunk+0x5d8>
   529e0:	02 21 00 a8 	load_32 s8, 8(s2)
   529e4:	e7 00 64 c1 	cmpgt_u s7, s7, s8
   529e8:	67 19 00 f4 	bnz s7, 812 <dispose_chunk+0x758>
   529ec:	e8 30 00 a8 	load_32 s7, 12(s8)
   529f0:	e7 00 11 c1 	cmpne_i s7, s7, s2
   529f4:	07 19 00 f4 	bnz s7, 800 <dispose_chunk+0x758>
   529f8:	e6 20 00 a8 	load_32 s7, 8(s6)
   529fc:	e7 00 11 c1 	cmpne_i s7, s7, s2
   52a00:	a7 18 00 f4 	bnz s7, 788 <dispose_chunk+0x758>
   52a04:	c8 30 00 88 	store_32 s6, 12(s8)
   52a08:	06 21 00 88 	store_32 s8, 8(s6)
   52a0c:	e5 15 00 f2 	bz s5, 700 <dispose_chunk+0x70c>
   52a10:	7d 00 00 f6 	b 500 <dispose_chunk+0x648>
   52a14:	9f 0c 00 4f 	movehi s4, 127
   52a18:	df 04 00 4f 	movehi s6, 63
   52a1c:	fe 00 00 4f 	movehi s7, 30
   52a20:	84 00 7c 00 	or s4, s4, 7936
   52a24:	85 00 52 c0 	add_i s4, s5, s4
   52a28:	c6 00 40 00 	or s6, s6, 4096
   52a2c:	84 40 00 0a 	shr s4, s4, 16
   52a30:	84 20 00 01 	and s4, s4, 8
   52a34:	a5 00 b2 c0 	shl s5, s5, s4
   52a38:	c5 00 53 c0 	add_i s6, s5, s6
   52a3c:	c6 40 00 0a 	shr s6, s6, 16
   52a40:	c6 10 00 01 	and s6, s6, 4
   52a44:	a5 00 b3 c0 	shl s5, s5, s6
   52a48:	86 00 02 c0 	or s4, s6, s4
   52a4c:	e5 80 53 c0 	add_i s7, s5, s7
   52a50:	e7 40 00 0a 	shr s7, s7, 16
   52a54:	c7 08 00 01 	and s6, s7, 2
   52a58:	e0 38 00 0f 	move s7, 14
   52a5c:	84 00 03 c0 	or s4, s4, s6
   52a60:	a5 00 b3 c0 	shl s5, s5, s6
   52a64:	87 00 62 c0 	sub_i s4, s7, s4
   52a68:	a5 3c 00 0a 	shr s5, s5, 15
   52a6c:	84 80 52 c0 	add_i s4, s4, s5
   52a70:	a4 1c 00 05 	add_i s5, s4, 7
   52a74:	a1 80 a2 c0 	shr s5, s1, s5
   52a78:	84 04 00 0b 	shl s4, s4, 1
   52a7c:	a5 04 00 01 	and s5, s5, 1
   52a80:	85 00 02 c0 	or s4, s5, s4
   52a84:	80 70 00 88 	store_32 s4, 28(s0)
   52a88:	c4 08 00 0b 	shl s6, s4, 2
   52a8c:	40 50 00 88 	store_32 s2, 20(s0)
   52a90:	e3 00 53 c0 	add_i s7, s3, s6
   52a94:	40 40 00 88 	store_32 s2, 16(s0)
   52a98:	40 04 00 0f 	move s2, 1
   52a9c:	a3 10 00 a8 	load_32 s5, 4(s3)
   52aa0:	c2 00 b2 c0 	shl s6, s2, s4
   52aa4:	47 c0 04 05 	add_i s2, s7, 304
   52aa8:	05 01 13 c0 	and s8, s5, s6
   52aac:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x4f8>
   52ab0:	08 00 00 f6 	b 32 <dispose_chunk+0x514>
   52ab4:	a2 00 00 a8 	load_32 s5, (s2)
   52ab8:	c4 7c 00 10 	cmpeq_i s6, s4, 31
   52abc:	26 01 00 f4 	bnz s6, 36 <dispose_chunk+0x524>
   52ac0:	40 64 00 0f 	move s2, 25
   52ac4:	84 04 00 0a 	shr s4, s4, 1
   52ac8:	42 00 62 c0 	sub_i s2, s2, s4
   52acc:	06 00 00 f6 	b 24 <dispose_chunk+0x528>
   52ad0:	25 00 03 c0 	or s1, s5, s6
   52ad4:	23 10 00 88 	store_32 s1, 4(s3)
   52ad8:	02 00 00 88 	store_32 s0, (s2)
   52adc:	13 00 00 f6 	b 76 <dispose_chunk+0x56c>
   52ae0:	40 00 00 0f 	move s2, 0
   52ae4:	81 00 b1 c0 	shl s4, s1, s2
   52ae8:	40 80 f2 c0 	move s2, s5
   52aec:	a2 10 00 a8 	load_32 s5, 4(s2)
   52af0:	a5 e0 ff 01 	and s5, s5, -8
   52af4:	a5 80 00 c1 	cmpeq_i s5, s5, s1
   52af8:	45 02 00 f4 	bnz s5, 72 <dispose_chunk+0x584>
   52afc:	a4 74 00 0a 	shr s5, s4, 29
   52b00:	84 04 00 0b 	shl s4, s4, 1
   52b04:	a5 10 00 01 	and s5, s5, 4
   52b08:	c2 80 52 c0 	add_i s6, s2, s5
   52b0c:	a6 40 00 a8 	load_32 s5, 16(s6)
   52b10:	c5 fe ff f5 	bnz s5, -40 <dispose_chunk+0x52c>
   52b14:	63 40 00 a8 	load_32 s3, 16(s3)
   52b18:	26 40 00 05 	add_i s1, s6, 16
   52b1c:	63 80 60 c1 	cmpgt_u s3, s3, s1
   52b20:	a3 0f 00 f4 	bnz s3, 500 <dispose_chunk+0x758>
   52b24:	01 00 00 88 	store_32 s0, (s1)
   52b28:	40 60 00 88 	store_32 s2, 24(s0)
   52b2c:	00 30 00 88 	store_32 s0, 12(s0)
   52b30:	00 20 00 88 	store_32 s0, 8(s0)
   52b34:	fe f3 00 a8 	load_32 ra, 60(sp)
   52b38:	de 03 01 05 	add_i sp, sp, 64
   52b3c:	1f 00 00 f0 	ret
   52b40:	22 20 00 a8 	load_32 s1, 8(s2)
   52b44:	63 40 00 a8 	load_32 s3, 16(s3)
   52b48:	83 80 60 c1 	cmpgt_u s4, s3, s1
   52b4c:	44 0e 00 f4 	bnz s4, 456 <dispose_chunk+0x758>
   52b50:	63 00 61 c1 	cmpgt_u s3, s3, s2
   52b54:	03 0e 00 f4 	bnz s3, 448 <dispose_chunk+0x758>
   52b58:	01 30 00 88 	store_32 s0, 12(s1)
   52b5c:	02 20 00 88 	store_32 s0, 8(s2)
   52b60:	20 20 00 88 	store_32 s1, 8(s0)
   52b64:	20 00 00 0f 	move s1, 0
   52b68:	40 30 00 88 	store_32 s2, 12(s0)
   52b6c:	20 60 00 88 	store_32 s1, 24(s0)
   52b70:	fe f3 00 a8 	load_32 ra, 60(sp)
   52b74:	de 03 01 05 	add_i sp, sp, 64
   52b78:	1f 00 00 f0 	ret
   52b7c:	00 00 00 0f 	move s0, 0
   52b80:	03 50 00 88 	store_32 s0, 20(s3)
   52b84:	03 20 00 88 	store_32 s0, 8(s3)
   52b88:	fe f3 00 a8 	load_32 ra, 60(sp)
   52b8c:	de 03 01 05 	add_i sp, sp, 64
   52b90:	1f 00 00 f0 	ret
   52b94:	22 51 00 a8 	load_32 s9, 20(s2)
   52b98:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x5e4>
   52b9c:	0a 00 00 f6 	b 40 <dispose_chunk+0x608>
   52ba0:	02 51 00 05 	add_i s8, s2, 20
   52ba4:	0b 00 00 f6 	b 44 <dispose_chunk+0x614>
   52ba8:	40 04 00 0f 	move s2, 1
   52bac:	a3 00 00 a8 	load_32 s5, (s3)
   52bb0:	42 00 b4 c0 	shl s2, s2, s8
   52bb4:	42 fc ff 03 	xor s2, s2, -1
   52bb8:	45 00 11 c0 	and s2, s5, s2
   52bbc:	43 00 00 88 	store_32 s2, (s3)
   52bc0:	42 00 00 f6 	b 264 <dispose_chunk+0x70c>
   52bc4:	02 41 00 05 	add_i s8, s2, 16
   52bc8:	28 01 00 a8 	load_32 s9, (s8)
   52bcc:	e9 09 00 f2 	bz s9, 316 <dispose_chunk+0x74c>
   52bd0:	c0 80 f4 c0 	move s6, s9
   52bd4:	26 51 00 a8 	load_32 s9, 20(s6)
   52bd8:	40 01 f4 c0 	move s10, s8
   52bdc:	06 51 00 05 	add_i s8, s6, 20
   52be0:	89 ff ff f5 	bnz s9, -16 <dispose_chunk+0x614>
   52be4:	26 41 00 a8 	load_32 s9, 16(s6)
   52be8:	06 41 00 05 	add_i s8, s6, 16
   52bec:	29 ff ff f5 	bnz s9, -28 <dispose_chunk+0x614>
   52bf0:	e7 00 65 c1 	cmpgt_u s7, s7, s10
   52bf4:	07 09 00 f4 	bnz s7, 288 <dispose_chunk+0x758>
   52bf8:	e0 00 00 0f 	move s7, 0
   52bfc:	ea 00 00 88 	store_32 s7, (s10)
   52c00:	45 06 00 f2 	bz s5, 200 <dispose_chunk+0x70c>
   52c04:	e2 70 00 a8 	load_32 s7, 28(s2)
   52c08:	07 09 00 0b 	shl s8, s7, 2
   52c0c:	03 01 54 c0 	add_i s8, s3, s8
   52c10:	28 c1 04 a8 	load_32 s9, 304(s8)
   52c14:	29 01 11 c1 	cmpne_i s9, s9, s2
   52c18:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x664>
   52c1c:	0c 00 00 f6 	b 48 <dispose_chunk+0x690>
   52c20:	e3 40 00 a8 	load_32 s7, 16(s3)
   52c24:	e7 80 62 c1 	cmpgt_u s7, s7, s5
   52c28:	67 07 00 f4 	bnz s7, 236 <dispose_chunk+0x758>
   52c2c:	e5 40 00 a8 	load_32 s7, 16(s5)
   52c30:	e7 00 01 c1 	cmpeq_i s7, s7, s2
   52c34:	07 02 00 f4 	bnz s7, 64 <dispose_chunk+0x6b8>
   52c38:	e0 50 00 0f 	move s7, 20
   52c3c:	e5 80 53 c0 	add_i s7, s5, s7
   52c40:	c7 00 00 88 	store_32 s6, (s7)
   52c44:	26 04 00 f2 	bz s6, 132 <dispose_chunk+0x70c>
   52c48:	0f 00 00 f6 	b 60 <dispose_chunk+0x6c8>
   52c4c:	08 c1 04 05 	add_i s8, s8, 304
   52c50:	c8 00 00 88 	store_32 s6, (s8)
   52c54:	86 01 00 f4 	bnz s6, 48 <dispose_chunk+0x6c8>
   52c58:	40 04 00 0f 	move s2, 1
   52c5c:	a3 10 00 a8 	load_32 s5, 4(s3)
   52c60:	42 80 b3 c0 	shl s2, s2, s7
   52c64:	42 fc ff 03 	xor s2, s2, -1
   52c68:	45 00 11 c0 	and s2, s5, s2
   52c6c:	43 10 00 88 	store_32 s2, 4(s3)
   52c70:	16 00 00 f6 	b 88 <dispose_chunk+0x70c>
   52c74:	e0 40 00 0f 	move s7, 16
   52c78:	e5 80 53 c0 	add_i s7, s5, s7
   52c7c:	c7 00 00 88 	store_32 s6, (s7)
   52c80:	46 02 00 f2 	bz s6, 72 <dispose_chunk+0x70c>
   52c84:	e3 40 00 a8 	load_32 s7, 16(s3)
   52c88:	07 01 63 c1 	cmpgt_u s8, s7, s6
   52c8c:	48 04 00 f4 	bnz s8, 136 <dispose_chunk+0x758>
   52c90:	a6 60 00 88 	store_32 s5, 24(s6)
   52c94:	a2 40 00 a8 	load_32 s5, 16(s2)
   52c98:	a5 00 00 f2 	bz s5, 20 <dispose_chunk+0x6f0>
   52c9c:	e7 80 62 c1 	cmpgt_u s7, s7, s5
   52ca0:	a7 03 00 f4 	bnz s7, 116 <dispose_chunk+0x758>
   52ca4:	a6 40 00 88 	store_32 s5, 16(s6)
   52ca8:	c5 60 00 88 	store_32 s6, 24(s5)
   52cac:	42 50 00 a8 	load_32 s2, 20(s2)
   52cb0:	c2 00 00 f2 	bz s2, 24 <dispose_chunk+0x70c>
   52cb4:	a3 40 00 a8 	load_32 s5, 16(s3)
   52cb8:	a5 00 61 c1 	cmpgt_u s5, s5, s2
   52cbc:	c5 02 00 f4 	bnz s5, 88 <dispose_chunk+0x758>
   52cc0:	46 50 00 88 	store_32 s2, 20(s6)
   52cc4:	c2 60 00 88 	store_32 s6, 24(s2)
   52cc8:	44 e0 ff 01 	and s2, s4, -8
   52ccc:	22 80 50 c0 	add_i s1, s2, s1
   52cd0:	40 80 50 c0 	add_i s2, s0, s1
   52cd4:	81 04 00 00 	or s4, s1, 1
   52cd8:	80 10 00 88 	store_32 s4, 4(s0)
   52cdc:	22 00 00 88 	store_32 s1, (s2)
   52ce0:	43 50 00 a8 	load_32 s2, 20(s3)
   52ce4:	40 00 11 c1 	cmpne_i s2, s0, s2
   52ce8:	82 df ff f5 	bnz s2, -1040 <dispose_chunk+0x31c>
   52cec:	23 20 00 88 	store_32 s1, 8(s3)
   52cf0:	fe f3 00 a8 	load_32 ra, 60(sp)
   52cf4:	de 03 01 05 	add_i sp, sp, 64
   52cf8:	1f 00 00 f0 	ret
   52cfc:	a0 00 00 0f 	move s5, 0
   52d00:	84 d8 ff f3 	bz s4, -1264 <dispose_chunk+0x254>
   52d04:	92 fe ff f7 	b -1464 <dispose_chunk+0x190>
   52d08:	c0 00 00 0f 	move s6, 0
   52d0c:	e5 fd ff f3 	bz s5, -68 <dispose_chunk+0x70c>
   52d10:	bd ff ff f7 	b -268 <dispose_chunk+0x648>
   52d14:	01 00 00 f8 	call 4 <abort>

0000000000052d18 abort:
   52d18:	de 03 ff 05 	add_i sp, sp, -64
   52d1c:	fe f3 00 88 	store_32 ra, 60(sp)
   52d20:	05 04 00 4f 	movehi s0, 37
   52d24:	00 50 51 00 	or s0, s0, 5204
   52d28:	cb ec ff f9 	call -19668 <puts>
   52d2c:	00 00 e0 c3 	break

0000000000052d30 abs:
   52d30:	20 7c 00 09 	ashr s1, s0, 31
   52d34:	00 80 50 c0 	add_i s0, s0, s1
   52d38:	00 80 30 c0 	xor s0, s0, s1
   52d3c:	1f 00 00 f0 	ret

0000000000052d40 atoi:
   52d40:	20 00 f0 c0 	move s1, s0
   52d44:	00 00 00 0f 	move s0, 0
   52d48:	41 00 00 a2 	load_s8 s2, (s1)
   52d4c:	c2 01 00 f2 	bz s2, 56 <atoi+0x44>
   52d50:	62 40 ff 05 	add_i s3, s2, -48
   52d54:	63 24 00 16 	cmpgt_u s3, s3, 9
   52d58:	63 01 00 f4 	bnz s3, 44 <atoi+0x44>
   52d5c:	00 00 00 0f 	move s0, 0
   52d60:	00 28 00 07 	mull_i s0, s0, 10
   52d64:	02 00 50 c0 	add_i s0, s2, s0
   52d68:	41 04 00 a2 	load_s8 s2, 1(s1)
   52d6c:	00 40 ff 05 	add_i s0, s0, -48
   52d70:	a2 00 00 f2 	bz s2, 20 <atoi+0x44>
   52d74:	62 40 ff 05 	add_i s3, s2, -48
   52d78:	21 04 00 05 	add_i s1, s1, 1
   52d7c:	63 28 00 18 	cmplt_u s3, s3, 10
   52d80:	03 ff ff f5 	bnz s3, -32 <atoi+0x20>
   52d84:	1f 00 00 f0 	ret

0000000000052d88 rand:
   52d88:	0c 04 00 4f 	movehi s0, 44
   52d8c:	52 c4 41 4f 	movehi s2, 134706
   52d90:	61 00 00 4f 	movehi s3, 1
   52d94:	20 60 00 00 	or s1, s0, 24
   52d98:	42 b4 39 00 	or s2, s2, 3693
   52d9c:	01 00 00 a8 	load_32 s0, (s1)
   52da0:	00 00 71 c0 	mull_i s0, s0, s2
   52da4:	43 e4 40 00 	or s2, s3, 4153
   52da8:	7f fc 7f 4f 	movehi s3, 262143
   52dac:	40 00 51 c0 	add_i s2, s0, s2
   52db0:	41 00 00 88 	store_32 s2, (s1)
   52db4:	03 fc 7f 00 	or s0, s3, 8191
   52db8:	02 00 10 c0 	and s0, s2, s0
   52dbc:	1f 00 00 f0 	ret

0000000000052dc0 srand:
   52dc0:	2c 04 00 4f 	movehi s1, 44
   52dc4:	21 60 00 00 	or s1, s1, 24
   52dc8:	01 00 00 88 	store_32 s0, (s1)
   52dcc:	1f 00 00 f0 	ret

0000000000052dd0 bsearch:
   52dd0:	de 03 ff 05 	add_i sp, sp, -64
   52dd4:	1e f3 00 88 	store_32 s24, 60(sp)
   52dd8:	3e e3 00 88 	store_32 s25, 56(sp)
   52ddc:	5e d3 00 88 	store_32 s26, 52(sp)
   52de0:	7e c3 00 88 	store_32 s27, 48(sp)
   52de4:	fe b3 00 88 	store_32 ra, 44(sp)
   52de8:	22 ff ff 05 	add_i s25, s2, -1
   52dec:	9e a0 00 88 	store_32 s4, 40(sp)
   52df0:	7e 90 00 88 	store_32 s3, 36(sp)
   52df4:	3e 80 00 88 	store_32 s1, 32(sp)
   52df8:	59 00 00 14 	cmplt_i s2, s25, 0
   52dfc:	1e 70 00 88 	store_32 s0, 28(sp)
   52e00:	c2 03 00 f4 	bnz s2, 120 <bsearch+0xa8>
   52e04:	40 03 00 0f 	move s26, 0
   52e08:	5e 63 00 88 	store_32 s26, 24(sp)
   52e0c:	1a 80 5c c0 	add_i s0, s26, s25
   52e10:	20 7c 00 0a 	shr s1, s0, 31
   52e14:	00 80 50 c0 	add_i s0, s0, s1
   52e18:	60 07 00 09 	ashr s27, s0, 1
   52e1c:	1e 90 00 a8 	load_32 s0, 36(sp)
   52e20:	3e 80 00 a8 	load_32 s1, 32(sp)
   52e24:	1b 00 70 c0 	mull_i s0, s27, s0
   52e28:	01 03 50 c0 	add_i s24, s1, s0
   52e2c:	1e 70 00 a8 	load_32 s0, 28(sp)
   52e30:	20 00 fc c0 	move s1, s24
   52e34:	5e a0 00 a8 	load_32 s2, 40(sp)
   52e38:	42 00 00 fc 	call s2
   52e3c:	00 02 00 f2 	bz s0, 64 <bsearch+0xac>
   52e40:	00 00 00 14 	cmplt_i s0, s0, 0
   52e44:	c0 00 00 f4 	bnz s0, 24 <bsearch+0x8c>
   52e48:	40 00 00 f4 	bnz s0, 8 <bsearch+0x80>
   52e4c:	06 00 00 f6 	b 24 <bsearch+0x94>
   52e50:	1a 80 5c c1 	cmple_i s0, s26, s25
   52e54:	c0 fd ff f5 	bnz s0, -72 <bsearch+0x3c>
   52e58:	06 00 00 f6 	b 24 <bsearch+0xa0>
   52e5c:	3b ff ff 05 	add_i s25, s27, -1
   52e60:	80 ff ff f5 	bnz s0, -16 <bsearch+0x80>
   52e64:	5b 07 00 05 	add_i s26, s27, 1
   52e68:	1a 80 5c c1 	cmple_i s0, s26, s25
   52e6c:	00 fd ff f5 	bnz s0, -96 <bsearch+0x3c>
   52e70:	1e 63 00 a8 	load_32 s24, 24(sp)
   52e74:	02 00 00 f6 	b 8 <bsearch+0xac>
   52e78:	00 03 00 0f 	move s24, 0
   52e7c:	00 00 fc c0 	move s0, s24
   52e80:	fe b3 00 a8 	load_32 ra, 44(sp)
   52e84:	7e c3 00 a8 	load_32 s27, 48(sp)
   52e88:	5e d3 00 a8 	load_32 s26, 52(sp)
   52e8c:	3e e3 00 a8 	load_32 s25, 56(sp)
   52e90:	1e f3 00 a8 	load_32 s24, 60(sp)
   52e94:	de 03 01 05 	add_i sp, sp, 64
   52e98:	1f 00 00 f0 	ret

0000000000052e9c memcpy:
   52e9c:	c0 00 f0 c0 	move s6, s0
   52ea0:	60 fc 00 01 	and s3, s0, 63
   52ea4:	81 fc 00 01 	and s4, s1, 63
   52ea8:	a3 00 02 c1 	cmpeq_i s5, s3, s4
   52eac:	45 02 00 f2 	bz s5, 72 <copy_word_check>

0000000000052eb0 copy_vector_lead_in:
   52eb0:	80 fc 00 01 	and s4, s0, 63
   52eb4:	04 01 00 f2 	bz s4, 32 <copy_vector>
   52eb8:	62 05 00 f2 	bz s2, 172 <copy_done>
   52ebc:	81 00 00 a0 	load_u8 s4, (s1)
   52ec0:	80 00 00 82 	store_8 s4, (s0)
   52ec4:	00 04 00 05 	add_i s0, s0, 1
   52ec8:	21 04 00 05 	add_i s1, s1, 1
   52ecc:	42 04 00 06 	sub_i s2, s2, 1
   52ed0:	f8 ff ff f7 	b -32 <copy_vector_lead_in>

0000000000052ed4 copy_vector:
   52ed4:	82 00 01 18 	cmplt_u s4, s2, 64
   52ed8:	84 02 00 f4 	bnz s4, 80 <copy_words>
   52edc:	01 00 00 ae 	load_v v0, (s1)
   52ee0:	00 00 00 8e 	store_v v0, (s0)
   52ee4:	00 00 01 05 	add_i s0, s0, 64
   52ee8:	21 00 01 05 	add_i s1, s1, 64
   52eec:	42 00 01 06 	sub_i s2, s2, 64
   52ef0:	f9 ff ff f7 	b -28 <copy_vector>

0000000000052ef4 copy_word_check:
   52ef4:	60 0c 00 01 	and s3, s0, 3
   52ef8:	81 0c 00 01 	and s4, s1, 3
   52efc:	a3 00 02 c1 	cmpeq_i s5, s3, s4
   52f00:	45 02 00 f2 	bz s5, 72 <copy_remain_bytes>

0000000000052f04 copy_word_lead_in:
   52f04:	80 0c 00 01 	and s4, s0, 3
   52f08:	04 01 00 f2 	bz s4, 32 <copy_words>
   52f0c:	c2 02 00 f2 	bz s2, 88 <copy_done>
   52f10:	81 00 00 a0 	load_u8 s4, (s1)
   52f14:	80 00 00 82 	store_8 s4, (s0)
   52f18:	00 04 00 05 	add_i s0, s0, 1
   52f1c:	21 04 00 05 	add_i s1, s1, 1
   52f20:	42 04 00 06 	sub_i s2, s2, 1
   52f24:	f8 ff ff f7 	b -32 <copy_word_lead_in>

0000000000052f28 copy_words:
   52f28:	82 10 00 18 	cmplt_u s4, s2, 4
   52f2c:	e4 00 00 f4 	bnz s4, 28 <copy_remain_bytes>
   52f30:	81 00 00 a8 	load_32 s4, (s1)
   52f34:	80 00 00 88 	store_32 s4, (s0)
   52f38:	00 10 00 05 	add_i s0, s0, 4
   52f3c:	21 10 00 05 	add_i s1, s1, 4
   52f40:	42 10 00 06 	sub_i s2, s2, 4
   52f44:	f9 ff ff f7 	b -28 <copy_words>

0000000000052f48 copy_remain_bytes:
   52f48:	e2 00 00 f2 	bz s2, 28 <copy_done>
   52f4c:	81 00 00 a0 	load_u8 s4, (s1)
   52f50:	80 00 00 82 	store_8 s4, (s0)
   52f54:	00 04 00 05 	add_i s0, s0, 1
   52f58:	21 04 00 05 	add_i s1, s1, 1
   52f5c:	42 04 00 06 	sub_i s2, s2, 1
   52f60:	fa ff ff f7 	b -24 <copy_remain_bytes>

0000000000052f64 copy_done:
   52f64:	00 00 f3 c0 	move s0, s6
   52f68:	1f 00 00 f0 	ret

0000000000052f6c memset:
   52f6c:	60 fc 00 01 	and s3, s0, 63
   52f70:	81 fc 03 01 	and s4, s1, 255
   52f74:	03 04 00 f4 	bnz s3, 128 <memset+0x88>
   52f78:	62 04 01 18 	cmplt_u s3, s2, 65
   52f7c:	c3 03 00 f4 	bnz s3, 120 <memset+0x88>
   52f80:	61 60 00 0b 	shl s3, s1, 24
   52f84:	a4 20 00 0b 	shl s5, s4, 8
   52f88:	63 00 02 c0 	or s3, s3, s4
   52f8c:	63 80 02 c0 	or s3, s3, s5
   52f90:	a4 40 00 0b 	shl s5, s4, 16
   52f94:	63 80 02 c0 	or s3, s3, s5
   52f98:	00 80 f1 c4 	move v0, s3
   52f9c:	60 00 f0 c0 	move s3, s0
   52fa0:	42 00 ff 05 	add_i s2, s2, -64
   52fa4:	03 00 00 8e 	store_v v0, (s3)
   52fa8:	63 00 01 05 	add_i s3, s3, 64
   52fac:	a2 00 01 16 	cmpgt_u s5, s2, 64
   52fb0:	85 ff ff f5 	bnz s5, -16 <memset+0x34>
   52fb4:	a3 0c 00 01 	and s5, s3, 3
   52fb8:	65 02 00 f4 	bnz s5, 76 <memset+0x98>
   52fbc:	a2 14 00 18 	cmplt_u s5, s2, 5
   52fc0:	25 02 00 f4 	bnz s5, 68 <memset+0x98>
   52fc4:	a1 60 00 0b 	shl s5, s1, 24
   52fc8:	c4 20 00 0b 	shl s6, s4, 8
   52fcc:	a5 00 02 c0 	or s5, s5, s4
   52fd0:	84 40 00 0b 	shl s4, s4, 16
   52fd4:	a5 00 03 c0 	or s5, s5, s6
   52fd8:	85 00 02 c0 	or s4, s5, s4
   52fdc:	42 f0 ff 05 	add_i s2, s2, -4
   52fe0:	83 00 00 88 	store_32 s4, (s3)
   52fe4:	63 10 00 05 	add_i s3, s3, 4
   52fe8:	a2 10 00 16 	cmpgt_u s5, s2, 4
   52fec:	85 ff ff f5 	bnz s5, -16 <memset+0x70>
   52ff0:	06 00 00 f6 	b 24 <memset+0x9c>
   52ff4:	60 00 f0 c0 	move s3, s0
   52ff8:	a3 0c 00 01 	and s5, s3, 3
   52ffc:	45 00 00 f4 	bnz s5, 8 <memset+0x98>
   53000:	ef ff ff f7 	b -68 <memset+0x50>
   53004:	c2 00 00 f2 	bz s2, 24 <memset+0xb0>
   53008:	83 04 00 05 	add_i s4, s3, 1
   5300c:	23 00 00 82 	store_8 s1, (s3)
   53010:	42 fc ff 05 	add_i s2, s2, -1
   53014:	60 00 f2 c0 	move s3, s4
   53018:	82 ff ff f5 	bnz s2, -16 <memset+0x9c>
   5301c:	1f 00 00 f0 	ret

0000000000053020 vfprintf:
   53020:	de 03 fd 05 	add_i sp, sp, -192
   53024:	1e f3 02 88 	store_32 s24, 188(sp)
   53028:	3e e3 02 88 	store_32 s25, 184(sp)
   5302c:	5e d3 02 88 	store_32 s26, 180(sp)
   53030:	7e c3 02 88 	store_32 s27, 176(sp)
   53034:	fe b3 02 88 	store_32 ra, 172(sp)
   53038:	40 83 f0 c0 	move s26, s1
   5303c:	5e a0 02 88 	store_32 s2, 168(sp)
   53040:	3a 00 00 a0 	load_u8 s1, (s26)
   53044:	60 03 f0 c0 	move s27, s0
   53048:	61 3f 00 f2 	bz s1, 2028 <vfprintf+0x814>
   5304c:	05 04 00 4f 	movehi s0, 37
   53050:	40 04 00 0f 	move s2, 1
   53054:	5e c0 00 88 	store_32 s2, 48(sp)
   53058:	40 94 00 0f 	move s2, 37
   5305c:	5e a0 00 88 	store_32 s2, 40(sp)
   53060:	00 83 53 00 	or s24, s0, 5344
   53064:	05 04 00 4f 	movehi s0, 37
   53068:	80 00 00 0f 	move s4, 0
   5306c:	60 60 48 00 	or s3, s0, 4632
   53070:	00 14 00 0f 	move s0, 5
   53074:	1e d0 00 88 	store_32 s0, 52(sp)
   53078:	00 08 00 0f 	move s0, 2
   5307c:	1e b0 00 88 	store_32 s0, 44(sp)
   53080:	00 10 00 0f 	move s0, 4
   53084:	1e f0 00 88 	store_32 s0, 60(sp)
   53088:	00 0c 00 0f 	move s0, 3
   5308c:	1e 90 00 88 	store_32 s0, 36(sp)
   53090:	9e 10 01 88 	store_32 s4, 68(sp)
   53094:	9e 20 01 88 	store_32 s4, 72(sp)
   53098:	20 03 f2 c0 	move s25, s4
   5309c:	9e 30 01 88 	store_32 s4, 76(sp)
   530a0:	00 00 f2 c0 	move s0, s4
   530a4:	7e 63 01 88 	store_32 s27, 88(sp)
   530a8:	9e 40 01 88 	store_32 s4, 80(sp)
   530ac:	1e 03 01 88 	store_32 s24, 64(sp)
   530b0:	7e 50 01 88 	store_32 s3, 84(sp)
   530b4:	46 01 00 f6 	b 1304 <vfprintf+0x5ac>
   530b8:	1e f0 00 a8 	load_32 s0, 60(sp)
   530bc:	3a 00 00 a0 	load_u8 s1, (s26)
   530c0:	61 28 00 f4 	bnz s1, 1292 <vfprintf+0x5ac>
   530c4:	dc 01 00 f6 	b 1904 <vfprintf+0x814>
   530c8:	1e d0 00 a8 	load_32 s0, 52(sp)
   530cc:	1e 03 01 a8 	load_32 s24, 64(sp)
   530d0:	7e 50 01 a8 	load_32 s3, 84(sp)
   530d4:	3a 00 00 a0 	load_u8 s1, (s26)
   530d8:	a1 27 00 f4 	bnz s1, 1268 <vfprintf+0x5ac>
   530dc:	d6 01 00 f6 	b 1880 <vfprintf+0x814>
   530e0:	1e b0 00 a8 	load_32 s0, 44(sp)
   530e4:	60 80 fc c0 	move s3, s25
   530e8:	3e 83 01 a8 	load_32 s25, 96(sp)
   530ec:	3a 00 00 a0 	load_u8 s1, (s26)
   530f0:	e1 26 00 f4 	bnz s1, 1244 <vfprintf+0x5ac>
   530f4:	d0 01 00 f6 	b 1856 <vfprintf+0x814>
   530f8:	3e 83 01 88 	store_32 s25, 96(sp)
   530fc:	20 00 00 4f 	movehi s1, 0
   53100:	1e a0 02 a8 	load_32 s0, 168(sp)
   53104:	21 00 05 00 	or s1, s1, 320
   53108:	00 0c 00 05 	add_i s0, s0, 3
   5310c:	00 f0 ff 01 	and s0, s0, -4
   53110:	40 10 00 05 	add_i s2, s0, 4
   53114:	5e a0 02 88 	store_32 s2, 168(sp)
   53118:	40 00 00 a8 	load_32 s2, (s0)
   5311c:	3e 90 01 88 	store_32 s1, 100(sp)
   53120:	01 00 00 a8 	load_32 s0, (s1)
   53124:	27 00 00 4f 	movehi s1, 7
   53128:	21 ff 7f 00 	or s25, s1, 8191
   5312c:	02 00 e0 c2 	cmplt_f s0, s2, s0
   53130:	00 80 1c c1 	cmpne_i s0, s0, s25
   53134:	00 01 00 f4 	bnz s0, 32 <vfprintf+0x134>
   53138:	20 80 fd c0 	move s1, s27
   5313c:	5e 70 01 88 	store_32 s2, 92(sp)
   53140:	00 b4 00 0f 	move s0, 45
   53144:	29 eb ff f9 	call -21340 <fputc>
   53148:	5e 70 01 a8 	load_32 s2, 92(sp)
   5314c:	00 00 80 4f 	movehi s0, 262144
   53150:	42 00 30 c0 	xor s2, s2, s0
   53154:	20 00 b1 c1 	ftoi s1, s2
   53158:	5e e3 00 88 	store_32 s26, 56(sp)
   5315c:	5e 70 01 88 	store_32 s2, 92(sp)
   53160:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x148>
   53164:	ec 00 00 f6 	b 944 <vfprintf+0x4f4>
   53168:	3e 80 00 88 	store_32 s1, 32(sp)
   5316c:	01 04 00 14 	cmplt_i s0, s1, 1
   53170:	00 83 fd c0 	move s24, s27
   53174:	60 03 00 f4 	bnz s0, 108 <vfprintf+0x1c0>
   53178:	3e 80 00 a8 	load_32 s1, 32(sp)
   5317c:	60 53 00 0f 	move s27, 20
   53180:	46 cc cc 4f 	movehi s2, 419430
   53184:	5e a3 01 05 	add_i s26, sp, 104
   53188:	7b ff ff 05 	add_i s27, s27, -1
   5318c:	42 34 33 00 	or s2, s2, 3277
   53190:	41 00 81 c0 	mulh_u s2, s1, s2
   53194:	9a 80 5d c0 	add_i s4, s26, s27
   53198:	a1 24 00 16 	cmpgt_u s5, s1, 9
   5319c:	42 0c 00 0a 	shr s2, s2, 3
   531a0:	62 28 00 07 	mull_i s3, s2, 10
   531a4:	61 80 61 c0 	sub_i s3, s1, s3
   531a8:	63 c0 00 00 	or s3, s3, 48
   531ac:	64 00 00 82 	store_8 s3, (s4)
   531b0:	20 00 f1 c0 	move s1, s2
   531b4:	65 fe ff f5 	bnz s5, -52 <vfprintf+0x160>
   531b8:	1e 63 01 a8 	load_32 s24, 88(sp)
   531bc:	3b 4c 00 16 	cmpgt_u s1, s27, 19
   531c0:	01 01 00 f4 	bnz s1, 32 <vfprintf+0x1c0>
   531c4:	3a 80 5d c0 	add_i s1, s26, s27
   531c8:	7b 07 00 05 	add_i s27, s27, 1
   531cc:	01 00 00 a2 	load_s8 s0, (s1)
   531d0:	20 00 fc c0 	move s1, s24
   531d4:	05 eb ff f9 	call -21484 <fputc>
   531d8:	3b 50 00 18 	cmplt_u s1, s27, 20
   531dc:	41 ff ff f5 	bnz s1, -24 <vfprintf+0x1a4>
   531e0:	60 03 fc c0 	move s27, s24
   531e4:	1e 03 01 a8 	load_32 s24, 64(sp)
   531e8:	1e 80 00 a8 	load_32 s0, 32(sp)
   531ec:	cf 00 00 f6 	b 828 <vfprintf+0x508>
   531f0:	60 2b 00 0f 	move s27, 10
   531f4:	3e 20 01 a8 	load_32 s1, 72(sp)
   531f8:	3e 83 01 88 	store_32 s25, 96(sp)
   531fc:	21 40 00 01 	and s1, s1, 16
   53200:	a1 2a 00 f2 	bz s1, 1364 <vfprintf+0x734>
   53204:	1e a0 02 a8 	load_32 s0, 168(sp)
   53208:	00 0c 00 05 	add_i s0, s0, 3
   5320c:	00 f0 ff 01 	and s0, s0, -4
   53210:	20 10 00 05 	add_i s1, s0, 4
   53214:	3e a0 02 88 	store_32 s1, 168(sp)
   53218:	00 03 00 a8 	load_32 s24, (s0)
   5321c:	20 20 00 05 	add_i s1, s0, 8
   53220:	3e a0 02 88 	store_32 s1, 168(sp)
   53224:	20 13 00 a8 	load_32 s25, 4(s0)
   53228:	1a 00 00 a0 	load_u8 s0, (s26)
   5322c:	7e 90 01 88 	store_32 s3, 100(sp)
   53230:	20 a4 01 10 	cmpeq_i s1, s0, 105
   53234:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x21c>
   53238:	56 01 00 f6 	b 1368 <vfprintf+0x770>
   5323c:	19 fc ff 12 	cmpgt_i s0, s25, -1
   53240:	a0 0a 00 f4 	bnz s0, 340 <vfprintf+0x374>
   53244:	38 00 00 11 	cmpne_i s1, s24, 0
   53248:	00 00 00 0f 	move s0, 0
   5324c:	61 09 00 f4 	bnz s1, 300 <vfprintf+0x358>
   53250:	20 00 f0 c0 	move s1, s0
   53254:	4a 00 00 f6 	b 296 <vfprintf+0x35c>
   53258:	1e a0 02 a8 	load_32 s0, 168(sp)
   5325c:	20 03 00 0f 	move s25, 0
   53260:	00 0c 00 05 	add_i s0, s0, 3
   53264:	00 f0 ff 01 	and s0, s0, -4
   53268:	20 10 00 05 	add_i s1, s0, 4
   5326c:	3e a0 02 88 	store_32 s1, 168(sp)
   53270:	00 03 00 a8 	load_32 s24, (s0)
   53274:	1a 00 00 a0 	load_u8 s0, (s26)
   53278:	7e 90 01 88 	store_32 s3, 100(sp)
   5327c:	20 a4 01 10 	cmpeq_i s1, s0, 105
   53280:	e1 fd ff f5 	bnz s1, -68 <vfprintf+0x21c>
   53284:	43 01 00 f6 	b 1292 <vfprintf+0x770>
   53288:	20 23 00 0f 	move s25, 8
   5328c:	3e 13 01 88 	store_32 s25, 68(sp)
   53290:	1f 01 00 f6 	b 1148 <vfprintf+0x6ec>
   53294:	1e a0 02 a8 	load_32 s0, 168(sp)
   53298:	00 0c 00 05 	add_i s0, s0, 3
   5329c:	00 f0 ff 01 	and s0, s0, -4
   532a0:	20 10 00 05 	add_i s1, s0, 4
   532a4:	3e a0 02 88 	store_32 s1, 168(sp)
   532a8:	00 00 00 a8 	load_32 s0, (s0)
   532ac:	20 80 fd c0 	move s1, s27
   532b0:	ce ea ff f9 	call -21704 <fputc>
   532b4:	7e 50 01 a8 	load_32 s3, 84(sp)
   532b8:	5a 07 00 05 	add_i s26, s26, 1
   532bc:	1e 40 01 a8 	load_32 s0, 80(sp)
   532c0:	3a 00 00 a0 	load_u8 s1, (s26)
   532c4:	41 18 00 f4 	bnz s1, 776 <vfprintf+0x5ac>
   532c8:	5b 01 00 f6 	b 1388 <vfprintf+0x814>
   532cc:	3e 83 01 88 	store_32 s25, 96(sp)
   532d0:	60 03 fd c0 	move s27, s26
   532d4:	1e a0 02 a8 	load_32 s0, 168(sp)
   532d8:	00 0c 00 05 	add_i s0, s0, 3
   532dc:	00 f0 ff 01 	and s0, s0, -4
   532e0:	20 10 00 05 	add_i s1, s0, 4
   532e4:	3e a0 02 88 	store_32 s1, 168(sp)
   532e8:	3e 33 01 a8 	load_32 s25, 76(sp)
   532ec:	40 03 00 a8 	load_32 s26, (s0)
   532f0:	39 00 00 10 	cmpeq_i s1, s25, 0
   532f4:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x2dc>
   532f8:	03 00 00 f6 	b 12 <vfprintf+0x2e4>
   532fc:	1f fc 7f 4f 	movehi s0, 262143
   53300:	20 ff 7f 00 	or s25, s0, 8191
   53304:	00 03 00 0f 	move s24, 0
   53308:	19 04 00 14 	cmplt_i s0, s25, 1
   5330c:	40 01 00 f4 	bnz s0, 40 <vfprintf+0x314>
   53310:	1a 00 00 a2 	load_s8 s0, (s26)
   53314:	00 01 00 f2 	bz s0, 32 <vfprintf+0x314>
   53318:	3e 60 01 a8 	load_32 s1, 88(sp)
   5331c:	5a 07 00 05 	add_i s26, s26, 1
   53320:	b2 ea ff f9 	call -21816 <fputc>
   53324:	18 07 00 05 	add_i s24, s24, 1
   53328:	7e 50 01 a8 	load_32 s3, 84(sp)
   5332c:	18 80 4c c1 	cmplt_i s0, s24, s25
   53330:	00 ff ff f5 	bnz s0, -32 <vfprintf+0x2f0>
   53334:	5e 83 01 a8 	load_32 s26, 96(sp)
   53338:	1a 80 4c c1 	cmplt_i s0, s26, s25
   5333c:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x324>
   53340:	40 83 fc c0 	move s26, s25
   53344:	18 00 3d c1 	cmpge_i s0, s24, s26
   53348:	a0 13 00 f4 	bnz s0, 628 <vfprintf+0x59c>
   5334c:	3e 63 01 a8 	load_32 s25, 88(sp)
   53350:	00 80 00 0f 	move s0, 32
   53354:	20 80 fc c0 	move s1, s25
   53358:	a4 ea ff f9 	call -21872 <fputc>
   5335c:	18 07 00 05 	add_i s24, s24, 1
   53360:	18 00 4d c1 	cmplt_i s0, s24, s26
   53364:	60 ff ff f5 	bnz s0, -20 <vfprintf+0x330>
   53368:	40 83 fd c0 	move s26, s27
   5336c:	60 83 fc c0 	move s27, s25
   53370:	1e 03 01 a8 	load_32 s24, 64(sp)
   53374:	8b 00 00 f6 	b 556 <vfprintf+0x580>
   53378:	20 04 00 0f 	move s1, 1
   5337c:	40 80 6c c0 	sub_i s2, s0, s25
   53380:	00 03 6c c0 	sub_i s24, s0, s24
   53384:	00 b4 00 0f 	move s0, 45
   53388:	22 83 60 c0 	sub_i s25, s2, s1
   5338c:	3e 60 01 a8 	load_32 s1, 88(sp)
   53390:	96 ea ff f9 	call -21928 <fputc>
   53394:	00 00 fc c0 	move s0, s24
   53398:	20 80 fc c0 	move s1, s25
   5339c:	40 80 fd c0 	move s2, s27
   533a0:	7e 90 01 a8 	load_32 s3, 100(sp)
   533a4:	09 0b 00 f8 	call 11300 <__umoddi3>
   533a8:	25 04 00 4f 	movehi s1, 37
   533ac:	5e 90 01 a8 	load_32 s2, 100(sp)
   533b0:	21 0c 51 00 	or s1, s1, 5187
   533b4:	3e 70 01 88 	store_32 s1, 92(sp)
   533b8:	01 00 50 c0 	add_i s0, s1, s0
   533bc:	22 80 0c c1 	cmpeq_i s1, s2, s25
   533c0:	00 00 00 a0 	load_u8 s0, (s0)
   533c4:	1e 9c 02 82 	store_8 s0, 167(sp)
   533c8:	c1 00 00 f4 	bnz s1, 24 <vfprintf+0x3c0>
   533cc:	02 80 6c c1 	cmpgt_u s0, s2, s25
   533d0:	5e e3 00 88 	store_32 s26, 56(sp)
   533d4:	40 ff 00 0f 	move s26, 63
   533d8:	20 04 00 f4 	bnz s0, 132 <vfprintf+0x43c>
   533dc:	05 00 00 f6 	b 20 <vfprintf+0x3d0>
   533e0:	1b 00 6c c1 	cmpgt_u s0, s27, s24
   533e4:	5e e3 00 88 	store_32 s26, 56(sp)
   533e8:	40 ff 00 0f 	move s26, 63
   533ec:	80 03 00 f4 	bnz s0, 112 <vfprintf+0x43c>
   533f0:	00 00 fc c0 	move s0, s24
   533f4:	20 80 fc c0 	move s1, s25
   533f8:	40 80 fd c0 	move s2, s27
   533fc:	7e 90 01 a8 	load_32 s3, 100(sp)
   53400:	40 08 00 f8 	call 8448 <__udivdi3>
   53404:	00 03 f0 c0 	move s24, s0
   53408:	20 83 f0 c0 	move s25, s1
   5340c:	40 80 fd c0 	move s2, s27
   53410:	7e 90 01 a8 	load_32 s3, 100(sp)
   53414:	5a ff ff 05 	add_i s26, s26, -1
   53418:	ec 0a 00 f8 	call 11184 <__umoddi3>
   5341c:	7e 90 01 a8 	load_32 s3, 100(sp)
   53420:	3e a0 01 05 	add_i s1, sp, 104
   53424:	5e 70 01 a8 	load_32 s2, 92(sp)
   53428:	21 00 5d c0 	add_i s1, s1, s26
   5342c:	02 00 50 c0 	add_i s0, s2, s0
   53430:	43 80 0c c1 	cmpeq_i s2, s3, s25
   53434:	00 00 00 a0 	load_u8 s0, (s0)
   53438:	01 00 00 82 	store_8 s0, (s1)
   5343c:	a2 00 00 f4 	bnz s2, 20 <vfprintf+0x430>
   53440:	03 80 6c c1 	cmpgt_u s0, s3, s25
   53444:	c0 00 00 f4 	bnz s0, 24 <vfprintf+0x43c>
   53448:	5a fd ff f5 	bnz s26, -88 <vfprintf+0x3d0>
   5344c:	04 00 00 f6 	b 16 <vfprintf+0x43c>
   53450:	1b 00 6c c1 	cmpgt_u s0, s27, s24
   53454:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x43c>
   53458:	fc ff ff f7 	b -16 <vfprintf+0x428>
   5345c:	1e 10 01 a8 	load_32 s0, 68(sp)
   53460:	00 20 00 01 	and s0, s0, 8
   53464:	00 00 00 10 	cmpeq_i s0, s0, 0
   53468:	60 00 00 f4 	bnz s0, 12 <vfprintf+0x454>
   5346c:	00 c0 00 0f 	move s0, 48
   53470:	02 00 00 f6 	b 8 <vfprintf+0x458>
   53474:	00 80 00 0f 	move s0, 32
   53478:	40 00 01 0f 	move s2, 64
   5347c:	7e 63 01 a8 	load_32 s27, 88(sp)
   53480:	22 03 6d c0 	sub_i s25, s2, s26
   53484:	5e 80 01 a8 	load_32 s2, 96(sp)
   53488:	59 00 31 c1 	cmpge_i s2, s25, s2
   5348c:	82 01 00 f4 	bnz s2, 48 <vfprintf+0x49c>
   53490:	00 83 fd c0 	move s24, s27
   53494:	20 00 fc c0 	move s1, s24
   53498:	60 03 f0 c0 	move s27, s0
   5349c:	53 ea ff f9 	call -22196 <fputc>
   534a0:	00 80 fd c0 	move s0, s27
   534a4:	60 03 fc c0 	move s27, s24
   534a8:	5e 80 01 a8 	load_32 s2, 96(sp)
   534ac:	39 07 00 05 	add_i s25, s25, 1
   534b0:	59 00 41 c1 	cmplt_i s2, s25, s2
   534b4:	e2 fe ff f5 	bnz s2, -36 <vfprintf+0x470>
   534b8:	3e 83 01 a8 	load_32 s25, 96(sp)
   534bc:	1e 33 01 a8 	load_32 s24, 76(sp)
   534c0:	19 00 3c c1 	cmpge_i s0, s25, s24
   534c4:	e0 00 00 f4 	bnz s0, 28 <vfprintf+0x4c0>
   534c8:	00 c0 00 0f 	move s0, 48
   534cc:	20 80 fd c0 	move s1, s27
   534d0:	46 ea ff f9 	call -22248 <fputc>
   534d4:	39 07 00 05 	add_i s25, s25, 1
   534d8:	19 00 4c c1 	cmplt_i s0, s25, s24
   534dc:	60 ff ff f5 	bnz s0, -20 <vfprintf+0x4a8>
   534e0:	1e 03 01 a8 	load_32 s24, 64(sp)
   534e4:	1a fc 00 12 	cmpgt_i s0, s26, 63
   534e8:	20 01 00 f4 	bnz s0, 36 <vfprintf+0x4ec>
   534ec:	1e a0 01 05 	add_i s0, sp, 104
   534f0:	00 00 5d c0 	add_i s0, s0, s26
   534f4:	5a 07 00 05 	add_i s26, s26, 1
   534f8:	00 00 00 a2 	load_s8 s0, (s0)
   534fc:	20 80 fd c0 	move s1, s27
   53500:	3a ea ff f9 	call -22296 <fputc>
   53504:	1a 00 01 18 	cmplt_u s0, s26, 64
   53508:	20 ff ff f5 	bnz s0, -28 <vfprintf+0x4cc>
   5350c:	5e e3 00 a8 	load_32 s26, 56(sp)
   53510:	24 00 00 f6 	b 144 <vfprintf+0x580>
   53514:	40 83 f0 c0 	move s26, s1
   53518:	00 c0 00 0f 	move s0, 48
   5351c:	20 80 fd c0 	move s1, s27
   53520:	32 ea ff f9 	call -22328 <fputc>
   53524:	00 00 fd c0 	move s0, s26
   53528:	40 03 a0 c2 	itof s26, s0
   5352c:	00 b8 00 0f 	move s0, 46
   53530:	20 80 fd c0 	move s1, s27
   53534:	2d ea ff f9 	call -22348 <fputc>
   53538:	7e 33 01 a8 	load_32 s27, 76(sp)
   5353c:	1b 00 00 12 	cmpgt_i s0, s27, 0
   53540:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x528>
   53544:	60 1f 00 0f 	move s27, 7
   53548:	1e 70 01 a8 	load_32 s0, 92(sp)
   5354c:	40 03 1d c2 	sub_f s26, s0, s26
   53550:	00 00 00 4f 	movehi s0, 0
   53554:	00 40 05 00 	or s0, s0, 336
   53558:	00 00 00 a8 	load_32 s0, (s0)
   5355c:	1a 00 20 c2 	mul_f s0, s26, s0
   53560:	20 00 b0 c1 	ftoi s1, s0
   53564:	40 80 a0 c2 	itof s2, s1
   53568:	40 03 11 c2 	sub_f s26, s0, s2
   5356c:	01 c0 00 05 	add_i s0, s1, 48
   53570:	3e 60 01 a8 	load_32 s1, 88(sp)
   53574:	1d ea ff f9 	call -22412 <fputc>
   53578:	1e 90 01 a8 	load_32 s0, 100(sp)
   5357c:	00 00 00 a8 	load_32 s0, (s0)
   53580:	1a 00 c0 c2 	cmpgt_f s0, s26, s0
   53584:	00 80 1c c1 	cmpne_i s0, s0, s25
   53588:	80 00 00 f4 	bnz s0, 16 <vfprintf+0x578>
   5358c:	1b 00 00 12 	cmpgt_i s0, s27, 0
   53590:	7b ff ff 05 	add_i s27, s27, -1
   53594:	e0 fd ff f5 	bnz s0, -68 <vfprintf+0x530>
   53598:	5e e3 00 a8 	load_32 s26, 56(sp)
   5359c:	7e 63 01 a8 	load_32 s27, 88(sp)
   535a0:	7e 50 01 a8 	load_32 s3, 84(sp)
   535a4:	3e 83 01 a8 	load_32 s25, 96(sp)
   535a8:	5a 07 00 05 	add_i s26, s26, 1
   535ac:	1e 40 01 a8 	load_32 s0, 80(sp)
   535b0:	3a 00 00 a0 	load_u8 s1, (s26)
   535b4:	c1 00 00 f4 	bnz s1, 24 <vfprintf+0x5ac>
   535b8:	9f 00 00 f6 	b 636 <vfprintf+0x814>
   535bc:	40 83 fd c0 	move s26, s27
   535c0:	7e 63 01 a8 	load_32 s27, 88(sp)
   535c4:	1e 03 01 a8 	load_32 s24, 64(sp)
   535c8:	f7 ff ff f7 	b -36 <vfprintf+0x584>
   535cc:	40 14 00 16 	cmpgt_u s2, s0, 5
   535d0:	e2 12 00 f4 	bnz s2, 604 <vfprintf+0x80c>
   535d4:	00 08 00 0b 	shl s0, s0, 2
   535d8:	00 00 5c c0 	add_i s0, s0, s24
   535dc:	00 00 00 a8 	load_32 s0, (s0)
   535e0:	00 00 00 f0 	b s0
   535e4:	01 fc 03 01 	and s0, s1, 255
   535e8:	5a 07 00 05 	add_i s26, s26, 1
   535ec:	00 94 00 10 	cmpeq_i s0, s0, 37
   535f0:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x5d8>
   535f4:	6a 00 00 f6 	b 424 <vfprintf+0x77c>
   535f8:	1e c0 00 a8 	load_32 s0, 48(sp)
   535fc:	3e 40 01 a8 	load_32 s1, 80(sp)
   53600:	3e 30 01 88 	store_32 s1, 76(sp)
   53604:	20 83 f0 c0 	move s25, s1
   53608:	3e 20 01 88 	store_32 s1, 72(sp)
   5360c:	3e 10 01 88 	store_32 s1, 68(sp)
   53610:	3a 00 00 a0 	load_u8 s1, (s26)
   53614:	c1 fd ff f5 	bnz s1, -72 <vfprintf+0x5ac>
   53618:	87 00 00 f6 	b 540 <vfprintf+0x814>
   5361c:	01 fc 03 01 	and s0, s1, 255
   53620:	00 94 00 11 	cmpne_i s0, s0, 37
   53624:	c0 0c 00 f4 	bnz s0, 408 <vfprintf+0x79c>
   53628:	5a 07 00 05 	add_i s26, s26, 1
   5362c:	1e a0 00 a8 	load_32 s0, 40(sp)
   53630:	5c 00 00 f6 	b 368 <vfprintf+0x780>
   53634:	00 80 d0 c1 	sext_8 s0, s1
   53638:	00 40 ff 05 	add_i s0, s0, -48
   5363c:	40 24 00 16 	cmpgt_u s2, s0, 9
   53640:	62 0e 00 f4 	bnz s2, 460 <vfprintf+0x7ec>
   53644:	39 28 00 07 	mull_i s1, s25, 10
   53648:	20 83 50 c0 	add_i s25, s0, s1
   5364c:	1e b0 00 a8 	load_32 s0, 44(sp)
   53650:	5a 07 00 05 	add_i s26, s26, 1
   53654:	3a 00 00 a0 	load_u8 s1, (s26)
   53658:	a1 fb ff f5 	bnz s1, -140 <vfprintf+0x5ac>
   5365c:	76 00 00 f6 	b 472 <vfprintf+0x814>
   53660:	00 80 d0 c1 	sext_8 s0, s1
   53664:	00 40 ff 05 	add_i s0, s0, -48
   53668:	20 24 00 16 	cmpgt_u s1, s0, 9
   5366c:	61 d2 ff f5 	bnz s1, -1460 <vfprintf+0x98>
   53670:	3e 30 01 a8 	load_32 s1, 76(sp)
   53674:	5a 07 00 05 	add_i s26, s26, 1
   53678:	21 28 00 07 	mull_i s1, s1, 10
   5367c:	00 80 50 c0 	add_i s0, s0, s1
   53680:	1e 30 01 88 	store_32 s0, 76(sp)
   53684:	00 0c 00 0f 	move s0, 3
   53688:	3a 00 00 a0 	load_u8 s1, (s26)
   5368c:	01 fa ff f5 	bnz s1, -192 <vfprintf+0x5ac>
   53690:	69 00 00 f6 	b 420 <vfprintf+0x814>
   53694:	05 04 00 4f 	movehi s0, 37
   53698:	20 80 d0 c1 	sext_8 s1, s1
   5369c:	40 20 00 0f 	move s2, 8
   536a0:	00 43 48 00 	or s24, s0, 4624
   536a4:	00 00 fc c0 	move s0, s24
   536a8:	26 01 00 f8 	call 1176 <memchr>
   536ac:	e0 d0 ff f3 	bz s0, -1508 <vfprintf+0xa8>
   536b0:	20 04 00 0f 	move s1, 1
   536b4:	00 00 6c c0 	sub_i s0, s0, s24
   536b8:	5a 07 00 05 	add_i s26, s26, 1
   536bc:	01 00 b0 c0 	shl s0, s1, s0
   536c0:	3e 20 01 a8 	load_32 s1, 72(sp)
   536c4:	20 80 00 c0 	or s1, s0, s1
   536c8:	3e 20 01 88 	store_32 s1, 72(sp)
   536cc:	1e f0 00 a8 	load_32 s0, 60(sp)
   536d0:	1e 03 01 a8 	load_32 s24, 64(sp)
   536d4:	7e 50 01 a8 	load_32 s3, 84(sp)
   536d8:	3a 00 00 a0 	load_u8 s1, (s26)
   536dc:	81 f7 ff f5 	bnz s1, -272 <vfprintf+0x5ac>
   536e0:	55 00 00 f6 	b 340 <vfprintf+0x814>
   536e4:	00 80 d0 c1 	sext_8 s0, s1
   536e8:	00 a0 fe 05 	add_i s0, s0, -88
   536ec:	40 80 00 16 	cmpgt_u s2, s0, 32
   536f0:	c2 f5 ff f5 	bnz s2, -328 <vfprintf+0x588>
   536f4:	45 04 00 4f 	movehi s2, 37
   536f8:	00 08 00 0b 	shl s0, s0, 2
   536fc:	42 e0 53 00 	or s2, s2, 5368
   53700:	00 00 51 c0 	add_i s0, s0, s2
   53704:	00 00 00 a8 	load_32 s0, (s0)
   53708:	00 00 00 f0 	b s0
   5370c:	01 fc 03 01 	and s0, s1, 255
   53710:	60 00 00 0f 	move s3, 0
   53714:	20 a0 fe 05 	add_i s1, s0, -88
   53718:	41 80 00 16 	cmpgt_u s2, s1, 32
   5371c:	a2 d6 ff f5 	bnz s2, -1324 <vfprintf+0x1d0>
   53720:	45 04 00 4f 	movehi s2, 37
   53724:	21 08 00 0b 	shl s1, s1, 2
   53728:	60 23 00 0f 	move s27, 8
   5372c:	42 f0 55 00 	or s2, s2, 5500
   53730:	21 00 51 c0 	add_i s1, s1, s2
   53734:	21 00 00 a8 	load_32 s1, (s1)
   53738:	01 00 00 f0 	b s1
   5373c:	60 43 00 0f 	move s27, 16
   53740:	3e 20 01 a8 	load_32 s1, 72(sp)
   53744:	3e 83 01 88 	store_32 s25, 96(sp)
   53748:	21 40 00 01 	and s1, s1, 16
   5374c:	41 00 00 f2 	bz s1, 8 <vfprintf+0x734>
   53750:	ad fe ff f7 	b -1356 <vfprintf+0x1e4>
   53754:	20 a4 01 10 	cmpeq_i s1, s0, 105
   53758:	61 00 00 f4 	bnz s1, 12 <vfprintf+0x744>
   5375c:	00 90 01 11 	cmpne_i s0, s0, 100
   53760:	c0 d7 ff f5 	bnz s0, -1288 <vfprintf+0x238>
   53764:	1e a0 02 a8 	load_32 s0, 168(sp)
   53768:	00 0c 00 05 	add_i s0, s0, 3
   5376c:	00 f0 ff 01 	and s0, s0, -4
   53770:	20 10 00 05 	add_i s1, s0, 4
   53774:	3e a0 02 88 	store_32 s1, 168(sp)
   53778:	00 03 00 a8 	load_32 s24, (s0)
   5377c:	38 7f 00 09 	ashr s25, s24, 31
   53780:	1a 00 00 a0 	load_u8 s0, (s26)
   53784:	7e 90 01 88 	store_32 s3, 100(sp)
   53788:	20 a4 01 10 	cmpeq_i s1, s0, 105
   5378c:	81 d5 ff f5 	bnz s1, -1360 <vfprintf+0x21c>
   53790:	00 90 01 11 	cmpne_i s0, s0, 100
   53794:	00 e0 ff f5 	bnz s0, -1024 <vfprintf+0x374>
   53798:	a9 fe ff f7 	b -1372 <vfprintf+0x21c>
   5379c:	00 80 d0 c1 	sext_8 s0, s1
   537a0:	20 80 fd c0 	move s1, s27
   537a4:	91 e9 ff f9 	call -22972 <fputc>
   537a8:	7e 50 01 a8 	load_32 s3, 84(sp)
   537ac:	1e 40 01 a8 	load_32 s0, 80(sp)
   537b0:	3a 00 00 a0 	load_u8 s1, (s26)
   537b4:	c1 f0 ff f5 	bnz s1, -488 <vfprintf+0x5ac>
   537b8:	1f 00 00 f6 	b 124 <vfprintf+0x814>
   537bc:	3e 83 01 88 	store_32 s25, 96(sp)
   537c0:	00 80 f1 c0 	move s0, s3
   537c4:	5e d0 00 a8 	load_32 s2, 52(sp)
   537c8:	20 80 d0 c1 	sext_8 s1, s1
   537cc:	20 83 f1 c0 	move s25, s3
   537d0:	dc 00 00 f8 	call 880 <memchr>
   537d4:	60 c8 ff f3 	bz s0, -1780 <vfprintf+0xc0>
   537d8:	3e c0 00 a8 	load_32 s1, 48(sp)
   537dc:	00 80 6c c0 	sub_i s0, s0, s25
   537e0:	5e 10 01 a8 	load_32 s2, 68(sp)
   537e4:	5a 07 00 05 	add_i s26, s26, 1
   537e8:	01 00 b0 c0 	shl s0, s1, s0
   537ec:	40 00 01 c0 	or s2, s0, s2
   537f0:	5e 10 01 88 	store_32 s2, 68(sp)
   537f4:	00 80 f0 c0 	move s0, s1
   537f8:	60 80 fc c0 	move s3, s25
   537fc:	3e 83 01 a8 	load_32 s25, 96(sp)
   53800:	3a 00 00 a0 	load_u8 s1, (s26)
   53804:	41 ee ff f5 	bnz s1, -568 <vfprintf+0x5ac>
   53808:	0b 00 00 f6 	b 44 <vfprintf+0x814>
   5380c:	01 fc 03 01 	and s0, s1, 255
   53810:	20 b8 00 10 	cmpeq_i s1, s0, 46
   53814:	1e 90 00 a8 	load_32 s0, 36(sp)
   53818:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x800>
   5381c:	1e f0 00 a8 	load_32 s0, 60(sp)
   53820:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x808>
   53824:	02 00 00 f6 	b 8 <vfprintf+0x80c>
   53828:	5a 07 00 05 	add_i s26, s26, 1
   5382c:	3a 00 00 a0 	load_u8 s1, (s26)
   53830:	e1 ec ff f5 	bnz s1, -612 <vfprintf+0x5ac>
   53834:	fe b3 02 a8 	load_32 ra, 172(sp)
   53838:	00 00 00 0f 	move s0, 0
   5383c:	7e c3 02 a8 	load_32 s27, 176(sp)
   53840:	5e d3 02 a8 	load_32 s26, 180(sp)
   53844:	3e e3 02 a8 	load_32 s25, 184(sp)
   53848:	1e f3 02 a8 	load_32 s24, 188(sp)
   5384c:	de 03 03 05 	add_i sp, sp, 192
   53850:	1f 00 00 f0 	ret

0000000000053854 strcmp:
   53854:	60 00 00 a0 	load_u8 s3, (s0)
   53858:	40 00 00 0f 	move s2, 0
   5385c:	23 01 00 f2 	bz s3, 36 <strcmp+0x2c>
   53860:	81 00 00 a0 	load_u8 s4, (s1)
   53864:	a3 fc 03 01 	and s5, s3, 255
   53868:	85 00 12 c1 	cmpne_i s4, s5, s4
   5386c:	24 01 00 f4 	bnz s4, 36 <strcmp+0x3c>
   53870:	60 04 00 a0 	load_u8 s3, 1(s0)
   53874:	00 04 00 05 	add_i s0, s0, 1
   53878:	21 04 00 05 	add_i s1, s1, 1
   5387c:	23 ff ff f5 	bnz s3, -28 <strcmp+0xc>
   53880:	01 00 00 a2 	load_s8 s0, (s1)
   53884:	20 00 d1 c1 	sext_8 s1, s2
   53888:	01 00 60 c0 	sub_i s0, s1, s0
   5388c:	1f 00 00 f0 	ret
   53890:	40 80 f1 c0 	move s2, s3
   53894:	01 00 00 a2 	load_s8 s0, (s1)
   53898:	20 00 d1 c1 	sext_8 s1, s2
   5389c:	01 00 60 c0 	sub_i s0, s1, s0
   538a0:	1f 00 00 f0 	ret

00000000000538a4 strncmp:
   538a4:	62 02 00 f2 	bz s2, 76 <strncmp+0x4c>
   538a8:	60 00 00 a0 	load_u8 s3, (s0)
   538ac:	a3 01 00 f2 	bz s3, 52 <strncmp+0x3c>
   538b0:	42 fc ff 05 	add_i s2, s2, -1
   538b4:	62 01 00 f2 	bz s2, 44 <strncmp+0x3c>
   538b8:	81 00 00 a0 	load_u8 s4, (s1)
   538bc:	a3 fc 03 01 	and s5, s3, 255
   538c0:	85 00 12 c1 	cmpne_i s4, s5, s4
   538c4:	e4 00 00 f4 	bnz s4, 28 <strncmp+0x3c>
   538c8:	60 04 00 a0 	load_u8 s3, 1(s0)
   538cc:	21 04 00 05 	add_i s1, s1, 1
   538d0:	83 00 00 f2 	bz s3, 16 <strncmp+0x3c>
   538d4:	42 fc ff 05 	add_i s2, s2, -1
   538d8:	00 04 00 05 	add_i s0, s0, 1
   538dc:	e2 fe ff f5 	bnz s2, -36 <strncmp+0x14>
   538e0:	01 00 00 a2 	load_s8 s0, (s1)
   538e4:	20 80 d1 c1 	sext_8 s1, s3
   538e8:	01 00 60 c0 	sub_i s0, s1, s0
   538ec:	1f 00 00 f0 	ret
   538f0:	00 00 00 0f 	move s0, 0
   538f4:	1f 00 00 f0 	ret

00000000000538f8 strcasecmp:
   538f8:	60 00 00 a0 	load_u8 s3, (s0)
   538fc:	40 00 00 0f 	move s2, 0
   53900:	a3 02 00 f2 	bz s3, 84 <strcasecmp+0x5c>
   53904:	80 80 d1 c1 	sext_8 s4, s3
   53908:	a4 7c fe 05 	add_i s5, s4, -97
   5390c:	a5 68 00 18 	cmplt_u s5, s5, 26
   53910:	45 00 00 f4 	bnz s5, 8 <strcasecmp+0x20>
   53914:	02 00 00 f6 	b 8 <strcasecmp+0x24>
   53918:	84 80 ff 05 	add_i s4, s4, -32
   5391c:	a1 00 00 a2 	load_s8 s5, (s1)
   53920:	c5 7c fe 05 	add_i s6, s5, -97
   53924:	c6 68 00 18 	cmplt_u s6, s6, 26
   53928:	46 00 00 f4 	bnz s6, 8 <strcasecmp+0x38>
   5392c:	02 00 00 f6 	b 8 <strcasecmp+0x3c>
   53930:	a5 80 ff 05 	add_i s5, s5, -32
   53934:	84 80 12 c1 	cmpne_i s4, s4, s5
   53938:	c4 00 00 f4 	bnz s4, 24 <strcasecmp+0x58>
   5393c:	60 04 00 a0 	load_u8 s3, 1(s0)
   53940:	00 04 00 05 	add_i s0, s0, 1
   53944:	21 04 00 05 	add_i s1, s1, 1
   53948:	e3 fd ff f5 	bnz s3, -68 <strcasecmp+0xc>
   5394c:	02 00 00 f6 	b 8 <strcasecmp+0x5c>
   53950:	40 80 f1 c0 	move s2, s3
   53954:	00 00 d1 c1 	sext_8 s0, s2
   53958:	40 7c fe 05 	add_i s2, s0, -97
   5395c:	42 68 00 18 	cmplt_u s2, s2, 26
   53960:	42 00 00 f4 	bnz s2, 8 <strcasecmp+0x70>
   53964:	02 00 00 f6 	b 8 <strcasecmp+0x74>
   53968:	00 80 ff 05 	add_i s0, s0, -32
   5396c:	21 00 00 a2 	load_s8 s1, (s1)
   53970:	41 7c fe 05 	add_i s2, s1, -97
   53974:	42 68 00 18 	cmplt_u s2, s2, 26
   53978:	42 00 00 f4 	bnz s2, 8 <strcasecmp+0x88>
   5397c:	02 00 00 f6 	b 8 <strcasecmp+0x8c>
   53980:	21 80 ff 05 	add_i s1, s1, -32
   53984:	00 80 60 c0 	sub_i s0, s0, s1
   53988:	1f 00 00 f0 	ret

000000000005398c toupper:
   5398c:	20 7c fe 05 	add_i s1, s0, -97
   53990:	21 68 00 18 	cmplt_u s1, s1, 26
   53994:	41 00 00 f4 	bnz s1, 8 <toupper+0x10>
   53998:	02 00 00 f6 	b 8 <toupper+0x14>
   5399c:	00 80 ff 05 	add_i s0, s0, -32
   539a0:	1f 00 00 f0 	ret

00000000000539a4 strncasecmp:
   539a4:	e2 04 00 f2 	bz s2, 156 <strncasecmp+0x9c>
   539a8:	60 00 00 a0 	load_u8 s3, (s0)
   539ac:	e3 02 00 f2 	bz s3, 92 <strncasecmp+0x64>
   539b0:	42 fc ff 05 	add_i s2, s2, -1
   539b4:	a2 02 00 f2 	bz s2, 84 <strncasecmp+0x64>
   539b8:	80 80 d1 c1 	sext_8 s4, s3
   539bc:	a4 7c fe 05 	add_i s5, s4, -97
   539c0:	a5 68 00 18 	cmplt_u s5, s5, 26
   539c4:	45 00 00 f4 	bnz s5, 8 <strncasecmp+0x28>
   539c8:	02 00 00 f6 	b 8 <strncasecmp+0x2c>
   539cc:	84 80 ff 05 	add_i s4, s4, -32
   539d0:	a1 00 00 a2 	load_s8 s5, (s1)
   539d4:	c5 7c fe 05 	add_i s6, s5, -97
   539d8:	c6 68 00 18 	cmplt_u s6, s6, 26
   539dc:	46 00 00 f4 	bnz s6, 8 <strncasecmp+0x40>
   539e0:	02 00 00 f6 	b 8 <strncasecmp+0x44>
   539e4:	a5 80 ff 05 	add_i s5, s5, -32
   539e8:	84 80 12 c1 	cmpne_i s4, s4, s5
   539ec:	e4 00 00 f4 	bnz s4, 28 <strncasecmp+0x64>
   539f0:	60 04 00 a0 	load_u8 s3, 1(s0)
   539f4:	21 04 00 05 	add_i s1, s1, 1
   539f8:	83 00 00 f2 	bz s3, 16 <strncasecmp+0x64>
   539fc:	42 fc ff 05 	add_i s2, s2, -1
   53a00:	00 04 00 05 	add_i s0, s0, 1
   53a04:	a2 fd ff f5 	bnz s2, -76 <strncasecmp+0x14>
   53a08:	00 80 d1 c1 	sext_8 s0, s3
   53a0c:	40 7c fe 05 	add_i s2, s0, -97
   53a10:	42 68 00 18 	cmplt_u s2, s2, 26
   53a14:	42 00 00 f4 	bnz s2, 8 <strncasecmp+0x78>
   53a18:	02 00 00 f6 	b 8 <strncasecmp+0x7c>
   53a1c:	00 80 ff 05 	add_i s0, s0, -32
   53a20:	21 00 00 a2 	load_s8 s1, (s1)
   53a24:	41 7c fe 05 	add_i s2, s1, -97
   53a28:	42 68 00 18 	cmplt_u s2, s2, 26
   53a2c:	42 00 00 f4 	bnz s2, 8 <strncasecmp+0x90>
   53a30:	02 00 00 f6 	b 8 <strncasecmp+0x94>
   53a34:	21 80 ff 05 	add_i s1, s1, -32
   53a38:	00 80 60 c0 	sub_i s0, s0, s1
   53a3c:	1f 00 00 f0 	ret
   53a40:	00 00 00 0f 	move s0, 0
   53a44:	1f 00 00 f0 	ret

0000000000053a48 strlen:
   53a48:	20 00 f0 c0 	move s1, s0
   53a4c:	01 00 00 a0 	load_u8 s0, (s1)
   53a50:	e0 00 00 f2 	bz s0, 28 <strlen+0x24>
   53a54:	00 00 00 0f 	move s0, 0
   53a58:	41 04 00 a0 	load_u8 s2, 1(s1)
   53a5c:	21 04 00 05 	add_i s1, s1, 1
   53a60:	00 04 00 05 	add_i s0, s0, 1
   53a64:	a2 ff ff f5 	bnz s2, -12 <strlen+0x10>
   53a68:	1f 00 00 f0 	ret
   53a6c:	00 00 00 0f 	move s0, 0
   53a70:	1f 00 00 f0 	ret

0000000000053a74 strcpy:
   53a74:	41 00 00 a0 	load_u8 s2, (s1)
   53a78:	80 00 f0 c0 	move s4, s0
   53a7c:	02 01 00 f2 	bz s2, 32 <strcpy+0x28>
   53a80:	60 00 f0 c0 	move s3, s0
   53a84:	83 04 00 05 	add_i s4, s3, 1
   53a88:	43 00 00 82 	store_8 s2, (s3)
   53a8c:	41 04 00 a0 	load_u8 s2, 1(s1)
   53a90:	21 04 00 05 	add_i s1, s1, 1
   53a94:	60 00 f2 c0 	move s3, s4
   53a98:	62 ff ff f5 	bnz s2, -20 <strcpy+0x10>
   53a9c:	20 00 00 0f 	move s1, 0
   53aa0:	24 00 00 82 	store_8 s1, (s4)
   53aa4:	1f 00 00 f0 	ret

0000000000053aa8 strncpy:
   53aa8:	81 00 00 a0 	load_u8 s4, (s1)
   53aac:	a2 00 00 11 	cmpne_i s5, s2, 0
   53ab0:	62 02 00 f2 	bz s2, 76 <strncpy+0x54>
   53ab4:	c4 fc 03 01 	and s6, s4, 255
   53ab8:	60 00 f0 c0 	move s3, s0
   53abc:	66 01 00 f2 	bz s6, 44 <strncpy+0x40>
   53ac0:	60 00 f0 c0 	move s3, s0
   53ac4:	42 fc ff 05 	add_i s2, s2, -1
   53ac8:	83 00 00 82 	store_8 s4, (s3)
   53acc:	81 04 00 a0 	load_u8 s4, 1(s1)
   53ad0:	63 04 00 05 	add_i s3, s3, 1
   53ad4:	a2 00 00 11 	cmpne_i s5, s2, 0
   53ad8:	82 00 00 f2 	bz s2, 16 <strncpy+0x40>
   53adc:	c4 fc 03 01 	and s6, s4, 255
   53ae0:	21 04 00 05 	add_i s1, s1, 1
   53ae4:	06 ff ff f5 	bnz s6, -32 <strncpy+0x1c>
   53ae8:	25 04 00 01 	and s1, s5, 1
   53aec:	61 00 00 f2 	bz s1, 12 <strncpy+0x50>
   53af0:	20 00 00 0f 	move s1, 0
   53af4:	23 00 00 82 	store_8 s1, (s3)
   53af8:	1f 00 00 f0 	ret
   53afc:	60 00 f0 c0 	move s3, s0
   53b00:	25 04 00 01 	and s1, s5, 1
   53b04:	a1 ff ff f3 	bz s1, -12 <strncpy+0x50>
   53b08:	fa ff ff f7 	b -24 <strncpy+0x48>

0000000000053b0c strchr:
   53b0c:	40 00 f0 c0 	move s2, s0
   53b10:	00 00 00 0f 	move s0, 0
   53b14:	62 00 00 a0 	load_u8 s3, (s2)
   53b18:	e3 00 00 f2 	bz s3, 28 <strchr+0x28>
   53b1c:	60 80 d1 c1 	sext_8 s3, s3
   53b20:	63 80 00 c1 	cmpeq_i s3, s3, s1
   53b24:	a3 00 00 f4 	bnz s3, 20 <strchr+0x2c>
   53b28:	62 04 00 a0 	load_u8 s3, 1(s2)
   53b2c:	42 04 00 05 	add_i s2, s2, 1
   53b30:	63 ff ff f5 	bnz s3, -20 <strchr+0x10>
   53b34:	1f 00 00 f0 	ret
   53b38:	00 00 f1 c0 	move s0, s2
   53b3c:	1f 00 00 f0 	ret

0000000000053b40 memchr:
   53b40:	e2 01 00 f2 	bz s2, 60 <memchr+0x3c>
   53b44:	80 00 00 0f 	move s4, 0
   53b48:	a0 00 f2 c0 	move s5, s4
   53b4c:	60 80 52 c0 	add_i s3, s0, s5
   53b50:	c3 00 00 a2 	load_s8 s6, (s3)
   53b54:	c6 80 10 c1 	cmpne_i s6, s6, s1
   53b58:	46 00 00 f4 	bnz s6, 8 <memchr+0x20>
   53b5c:	0b 00 00 f6 	b 44 <memchr+0x48>
   53b60:	a5 04 00 05 	add_i s5, s5, 1
   53b64:	65 00 71 c1 	cmpge_u s3, s5, s2
   53b68:	43 00 00 f4 	bnz s3, 8 <memchr+0x30>
   53b6c:	f8 ff ff f7 	b -32 <memchr+0xc>
   53b70:	60 00 f2 c0 	move s3, s4
   53b74:	00 80 f1 c0 	move s0, s3
   53b78:	1f 00 00 f0 	ret
   53b7c:	60 00 00 0f 	move s3, 0
   53b80:	00 80 f1 c0 	move s0, s3
   53b84:	1f 00 00 f0 	ret
   53b88:	00 80 f1 c0 	move s0, s3
   53b8c:	1f 00 00 f0 	ret

0000000000053b90 strcat:
   53b90:	60 00 f0 c0 	move s3, s0
   53b94:	40 80 f1 c0 	move s2, s3
   53b98:	82 00 00 a0 	load_u8 s4, (s2)
   53b9c:	62 04 00 05 	add_i s3, s2, 1
   53ba0:	a4 ff ff f5 	bnz s4, -12 <strcat+0x4>
   53ba4:	61 00 00 a0 	load_u8 s3, (s1)
   53ba8:	43 01 00 f2 	bz s3, 40 <strcat+0x40>
   53bac:	82 04 00 05 	add_i s4, s2, 1
   53bb0:	62 00 00 82 	store_8 s3, (s2)
   53bb4:	61 04 00 a0 	load_u8 s3, 1(s1)
   53bb8:	21 04 00 05 	add_i s1, s1, 1
   53bbc:	40 00 f2 c0 	move s2, s4
   53bc0:	63 ff ff f5 	bnz s3, -20 <strcat+0x1c>
   53bc4:	20 00 00 0f 	move s1, 0
   53bc8:	24 00 00 82 	store_8 s1, (s4)
   53bcc:	1f 00 00 f0 	ret
   53bd0:	80 00 f1 c0 	move s4, s2
   53bd4:	20 00 00 0f 	move s1, 0
   53bd8:	24 00 00 82 	store_8 s1, (s4)
   53bdc:	1f 00 00 f0 	ret

0000000000053be0 isdigit:
   53be0:	00 40 ff 05 	add_i s0, s0, -48
   53be4:	00 28 00 18 	cmplt_u s0, s0, 10
   53be8:	00 04 00 01 	and s0, s0, 1
   53bec:	1f 00 00 f0 	ret

0000000000053bf0 sbrk:
   53bf0:	de 03 ff 05 	add_i sp, sp, -64
   53bf4:	1e f3 00 88 	store_32 s24, 60(sp)
   53bf8:	fe e3 00 88 	store_32 ra, 56(sp)
   53bfc:	2c 04 00 4f 	movehi s1, 44
   53c00:	40 00 f0 c0 	move s2, s0
   53c04:	01 70 00 00 	or s0, s1, 28
   53c08:	20 00 00 aa 	load_sync s1, (s0)
   53c0c:	61 00 51 c0 	add_i s3, s1, s2
   53c10:	00 83 f0 c0 	move s24, s1
   53c14:	60 00 00 8a 	store_sync s3, (s0)  
   53c18:	83 ff ff f3 	bz s3, -16 <sbrk+0x18>
   53c1c:	02 04 00 14 	cmplt_i s0, s2, 1
   53c20:	80 00 00 f4 	bnz s0, 16 <sbrk+0x40>
   53c24:	20 00 00 0f 	move s1, 0
   53c28:	00 00 fc c0 	move s0, s24
   53c2c:	d0 fc ff f9 	call -3264 <memset>
   53c30:	00 00 fc c0 	move s0, s24
   53c34:	fe e3 00 a8 	load_32 ra, 56(sp)
   53c38:	1e f3 00 a8 	load_32 s24, 60(sp)
   53c3c:	de 03 01 05 	add_i sp, sp, 64
   53c40:	1f 00 00 f0 	ret

0000000000053c44 parallel_execute:
   53c44:	de 03 ff 05 	add_i sp, sp, -64
   53c48:	1e f3 00 88 	store_32 s24, 60(sp)
   53c4c:	3e e3 00 88 	store_32 s25, 56(sp)
   53c50:	5e d3 00 88 	store_32 s26, 52(sp)
   53c54:	7e c3 00 88 	store_32 s27, 48(sp)
   53c58:	fe b3 00 88 	store_32 ra, 44(sp)
   53c5c:	6c 04 00 4f 	movehi s3, 44
   53c60:	03 33 0d 00 	or s24, s3, 844
   53c64:	6c 04 00 4f 	movehi s3, 44
   53c68:	18 00 00 88 	store_32 s0, (s24)
   53c6c:	0c 04 00 4f 	movehi s0, 44
   53c70:	23 43 0d 00 	or s25, s3, 848
   53c74:	6c 04 00 4f 	movehi s3, 44
   53c78:	40 53 0d 00 	or s26, s0, 852
   53c7c:	39 00 00 88 	store_32 s1, (s25)
   53c80:	00 00 00 0f 	move s0, 0
   53c84:	63 63 0d 00 	or s27, s3, 856
   53c88:	1a 00 00 88 	store_32 s0, (s26)
   53c8c:	5b 00 00 88 	store_32 s2, (s27)
   53c90:	1a 00 00 a8 	load_32 s0, (s26)
   53c94:	3b 00 00 a8 	load_32 s1, (s27)
   53c98:	00 80 00 c1 	cmpeq_i s0, s0, s1
   53c9c:	c0 02 00 f4 	bnz s0, 88 <parallel_execute+0xb0>
   53ca0:	3a 00 00 a8 	load_32 s1, (s26)
   53ca4:	1b 00 00 a8 	load_32 s0, (s27)
   53ca8:	01 00 00 c1 	cmpeq_i s0, s1, s0
   53cac:	c0 01 00 f4 	bnz s0, 56 <parallel_execute+0xa0>
   53cb0:	01 04 00 05 	add_i s0, s1, 1
   53cb4:	5a 00 00 aa 	load_sync s2, (s26)
   53cb8:	62 80 10 c1 	cmpne_i s3, s2, s1
   53cbc:	83 00 00 f4 	bnz s3, 16 <parallel_execute+0x88>
   53cc0:	60 00 f0 c0 	move s3, s0
   53cc4:	7a 00 00 8a 	store_sync s3, (s26)  
   53cc8:	63 ff ff f3 	bz s3, -20 <parallel_execute+0x70>
   53ccc:	02 80 00 c1 	cmpeq_i s0, s2, s1
   53cd0:	00 04 00 01 	and s0, s0, 1
   53cd4:	60 fe ff f3 	bz s0, -52 <parallel_execute+0x5c>
   53cd8:	58 00 00 a8 	load_32 s2, (s24)
   53cdc:	19 00 00 a8 	load_32 s0, (s25)
   53ce0:	42 00 00 fc 	call s2
   53ce4:	1a 00 00 a8 	load_32 s0, (s26)
   53ce8:	3b 00 00 a8 	load_32 s1, (s27)
   53cec:	00 80 10 c1 	cmpne_i s0, s0, s1
   53cf0:	80 fd ff f5 	bnz s0, -80 <parallel_execute+0x5c>
   53cf4:	0c 04 00 4f 	movehi s0, 44
   53cf8:	00 70 0d 00 	or s0, s0, 860
   53cfc:	20 00 00 a8 	load_32 s1, (s0)
   53d00:	e1 ff ff f5 	bnz s1, -4 <parallel_execute+0xb8>
   53d04:	fe b3 00 a8 	load_32 ra, 44(sp)
   53d08:	7e c3 00 a8 	load_32 s27, 48(sp)
   53d0c:	5e d3 00 a8 	load_32 s26, 52(sp)
   53d10:	3e e3 00 a8 	load_32 s25, 56(sp)
   53d14:	1e f3 00 a8 	load_32 s24, 60(sp)
   53d18:	de 03 01 05 	add_i sp, sp, 64
   53d1c:	1f 00 00 f0 	ret

0000000000053d20 worker_thread:
   53d20:	de 03 ff 05 	add_i sp, sp, -64
   53d24:	1e f3 00 88 	store_32 s24, 60(sp)
   53d28:	3e e3 00 88 	store_32 s25, 56(sp)
   53d2c:	5e d3 00 88 	store_32 s26, 52(sp)
   53d30:	7e c3 00 88 	store_32 s27, 48(sp)
   53d34:	fe b3 00 88 	store_32 ra, 44(sp)
   53d38:	0c 04 00 4f 	movehi s0, 44
   53d3c:	2c 04 00 4f 	movehi s1, 44
   53d40:	4c 04 00 4f 	movehi s2, 44
   53d44:	00 53 0d 00 	or s24, s0, 852
   53d48:	0c 04 00 4f 	movehi s0, 44
   53d4c:	21 63 0d 00 	or s25, s1, 856
   53d50:	2c 04 00 4f 	movehi s1, 44
   53d54:	40 73 0d 00 	or s26, s0, 860
   53d58:	62 43 0d 00 	or s27, s2, 848
   53d5c:	01 30 0d 00 	or s0, s1, 844
   53d60:	1e a0 00 88 	store_32 s0, 40(sp)
   53d64:	18 00 00 a8 	load_32 s0, (s24)
   53d68:	39 00 00 a8 	load_32 s1, (s25)
   53d6c:	00 80 00 c1 	cmpeq_i s0, s0, s1
   53d70:	a0 ff ff f5 	bnz s0, -12 <worker_thread+0x44>
   53d74:	1a 00 00 aa 	load_sync s0, (s26)
   53d78:	20 04 00 05 	add_i s1, s0, 1
   53d7c:	00 00 f0 c0 	move s0, s0
   53d80:	3a 00 00 8a 	store_sync s1, (s26)  
   53d84:	81 ff ff f3 	bz s1, -16 <worker_thread+0x54>
   53d88:	38 00 00 a8 	load_32 s1, (s24)
   53d8c:	19 00 00 a8 	load_32 s0, (s25)
   53d90:	01 00 00 c1 	cmpeq_i s0, s1, s0
   53d94:	e0 01 00 f4 	bnz s0, 60 <worker_thread+0xb0>
   53d98:	01 04 00 05 	add_i s0, s1, 1
   53d9c:	58 00 00 aa 	load_sync s2, (s24)
   53da0:	62 80 10 c1 	cmpne_i s3, s2, s1
   53da4:	83 00 00 f4 	bnz s3, 16 <worker_thread+0x94>
   53da8:	60 00 f0 c0 	move s3, s0
   53dac:	78 00 00 8a 	store_sync s3, (s24)  
   53db0:	63 ff ff f3 	bz s3, -20 <worker_thread+0x7c>
   53db4:	02 80 00 c1 	cmpeq_i s0, s2, s1
   53db8:	00 04 00 01 	and s0, s0, 1
   53dbc:	60 fe ff f3 	bz s0, -52 <worker_thread+0x68>
   53dc0:	1e a0 00 a8 	load_32 s0, 40(sp)
   53dc4:	40 00 00 a8 	load_32 s2, (s0)
   53dc8:	1b 00 00 a8 	load_32 s0, (s27)
   53dcc:	42 00 00 fc 	call s2
   53dd0:	1a 00 00 aa 	load_sync s0, (s26)
   53dd4:	20 fc ff 05 	add_i s1, s0, -1
   53dd8:	00 00 f0 c0 	move s0, s0
   53ddc:	3a 00 00 8a 	store_sync s1, (s26)  
   53de0:	81 ff ff f3 	bz s1, -16 <worker_thread+0xb0>
   53de4:	e0 ff ff f7 	b -128 <worker_thread+0x44>

0000000000053de8 start_all_threads:
   53de8:	00 fc ff 0f 	move s0, -1
   53dec:	15 00 00 8c 	setcr s0, 21
   53df0:	1f 00 00 f0 	ret

0000000000053df4 _write_uart:
   53df4:	38 fc ff 4f 	movehi s1, 524280
   53df8:	41 00 01 00 	or s2, s1, 64
   53dfc:	62 00 00 a8 	load_32 s3, (s2)
   53e00:	63 04 00 01 	and s3, s3, 1
   53e04:	c3 ff ff f3 	bz s3, -8 <_write_uart+0x8>
   53e08:	21 20 01 00 	or s1, s1, 72
   53e0c:	01 00 00 88 	store_32 s0, (s1)
   53e10:	1f 00 00 f0 	ret

0000000000053e14 write_console:
   53e14:	41 04 00 14 	cmplt_i s2, s1, 1
   53e18:	c2 01 00 f4 	bnz s2, 56 <write_console+0x3c>
   53e1c:	98 fc ff 4f 	movehi s4, 524280
   53e20:	40 00 00 0f 	move s2, 0
   53e24:	64 00 01 00 	or s3, s4, 64
   53e28:	84 20 01 00 	or s4, s4, 72
   53e2c:	a0 00 51 c0 	add_i s5, s0, s2
   53e30:	a5 00 00 a2 	load_s8 s5, (s5)
   53e34:	c3 00 00 a8 	load_32 s6, (s3)
   53e38:	c6 04 00 01 	and s6, s6, 1
   53e3c:	c6 ff ff f3 	bz s6, -8 <write_console+0x20>
   53e40:	42 04 00 05 	add_i s2, s2, 1
   53e44:	a4 00 00 88 	store_32 s5, (s4)
   53e48:	c2 80 40 c1 	cmplt_i s6, s2, s1
   53e4c:	06 ff ff f5 	bnz s6, -32 <write_console+0x18>
   53e50:	00 00 00 0f 	move s0, 0
   53e54:	1f 00 00 f0 	ret

0000000000053e58 read_block:
   53e58:	de 03 ff 05 	add_i sp, sp, -64
   53e5c:	1e f3 00 88 	store_32 s24, 60(sp)
   53e60:	fe e3 00 88 	store_32 ra, 56(sp)
   53e64:	4c 04 00 4f 	movehi s2, 44
   53e68:	42 80 0d 00 	or s2, s2, 864
   53e6c:	42 00 00 a0 	load_u8 s2, (s2)
   53e70:	42 04 00 11 	cmpne_i s2, s2, 1
   53e74:	42 01 00 f4 	bnz s2, 40 <read_block+0x44>
   53e78:	00 24 00 0b 	shl s0, s0, 9
   53e7c:	40 00 04 4f 	movehi s2, 8192
   53e80:	00 03 08 0f 	move s24, 512
   53e84:	40 00 51 c0 	add_i s2, s0, s2
   53e88:	00 80 f0 c0 	move s0, s1
   53e8c:	20 00 f1 c0 	move s1, s2
   53e90:	40 00 fc c0 	move s2, s24
   53e94:	02 fc ff f9 	call -4088 <memcpy>
   53e98:	03 00 00 f6 	b 12 <read_block+0x4c>
   53e9c:	a8 03 00 f8 	call 3744 <read_sdmmc_device>
   53ea0:	00 03 f0 c0 	move s24, s0
   53ea4:	00 00 fc c0 	move s0, s24
   53ea8:	fe e3 00 a8 	load_32 ra, 56(sp)
   53eac:	1e f3 00 a8 	load_32 s24, 60(sp)
   53eb0:	de 03 01 05 	add_i sp, sp, 64
   53eb4:	1f 00 00 f0 	ret

0000000000053eb8 open:
   53eb8:	de 03 f7 05 	add_i sp, sp, -576
   53ebc:	1e f3 08 88 	store_32 s24, 572(sp)
   53ec0:	3e e3 08 88 	store_32 s25, 568(sp)
   53ec4:	5e d3 08 88 	store_32 s26, 564(sp)
   53ec8:	7e c3 08 88 	store_32 s27, 560(sp)
   53ecc:	fe b3 08 88 	store_32 ra, 556(sp)
   53ed0:	2c 04 00 4f 	movehi s1, 44
   53ed4:	41 90 0d 00 	or s2, s1, 868
   53ed8:	22 00 00 a0 	load_u8 s1, (s2)
   53edc:	1e a0 00 88 	store_32 s0, 40(sp)
   53ee0:	a1 0c 00 f4 	bnz s1, 404 <open+0x1bc>
   53ee4:	5e 60 00 88 	store_32 s2, 24(sp)
   53ee8:	73 02 00 f8 	call 2508 <init_sdmmc_device>
   53eec:	00 fc ff 12 	cmpgt_i s0, s0, -1
   53ef0:	40 00 00 f4 	bnz s0, 8 <open+0x40>
   53ef4:	0d 00 00 f6 	b 52 <open+0x70>
   53ef8:	0c 04 00 4f 	movehi s0, 44
   53efc:	00 80 0d 00 	or s0, s0, 864
   53f00:	00 00 00 a0 	load_u8 s0, (s0)
   53f04:	00 04 00 11 	cmpne_i s0, s0, 1
   53f08:	40 00 00 f4 	bnz s0, 8 <open+0x58>
   53f0c:	0e 00 00 f6 	b 56 <open+0x8c>
   53f10:	00 00 00 0f 	move s0, 0
   53f14:	3e b0 00 05 	add_i s1, sp, 44
   53f18:	89 03 00 f8 	call 3620 <read_sdmmc_device>
   53f1c:	00 04 00 14 	cmplt_i s0, s0, 1
   53f20:	c0 03 00 f4 	bnz s0, 120 <open+0xe0>
   53f24:	0c 00 00 f6 	b 48 <open+0x9c>
   53f28:	05 04 00 4f 	movehi s0, 37
   53f2c:	00 20 4a 00 	or s0, s0, 4744
   53f30:	49 e8 ff f9 	call -24284 <puts>
   53f34:	0c 04 00 4f 	movehi s0, 44
   53f38:	20 04 00 0f 	move s1, 1
   53f3c:	00 80 0d 00 	or s0, s0, 864
   53f40:	20 00 00 82 	store_8 s1, (s0)
   53f44:	1e b0 00 05 	add_i s0, sp, 44
   53f48:	20 00 04 4f 	movehi s1, 8192
   53f4c:	40 00 08 0f 	move s2, 512
   53f50:	d3 fb ff f9 	call -4276 <memcpy>
   53f54:	1e b4 00 a0 	load_u8 s0, 45(sp)
   53f58:	3e b0 00 a0 	load_u8 s1, 44(sp)
   53f5c:	5e bc 00 a0 	load_u8 s2, 47(sp)
   53f60:	7e b8 00 a0 	load_u8 s3, 46(sp)
   53f64:	00 20 00 0b 	shl s0, s0, 8
   53f68:	42 20 00 0b 	shl s2, s2, 8
   53f6c:	00 80 00 c0 	or s0, s0, s1
   53f70:	33 64 73 4f 	movehi s1, 236339
   53f74:	42 80 01 c0 	or s2, s2, s3
   53f78:	21 cc 41 00 	or s1, s1, 4211
   53f7c:	42 40 00 0b 	shl s2, s2, 16
   53f80:	02 00 00 c0 	or s0, s2, s0
   53f84:	00 80 00 c1 	cmpeq_i s0, s0, s1
   53f88:	e0 00 00 f4 	bnz s0, 28 <open+0xec>
   53f8c:	05 04 00 4f 	movehi s0, 37
   53f90:	00 5c 52 00 	or s0, s0, 5271
   53f94:	30 e8 ff f9 	call -24384 <puts>
   53f98:	2e 02 00 f8 	call 2232 <__errno_ptr>
   53f9c:	20 14 00 0f 	move s1, 5
   53fa0:	d9 00 00 f6 	b 868 <open+0x44c>
   53fa4:	1e c0 00 a8 	load_32 s0, 48(sp)
   53fa8:	00 a0 00 07 	mull_i s0, s0, 40
   53fac:	00 1f 08 05 	add_i s24, s0, 519
   53fb0:	18 00 f8 01 	and s0, s24, -512
   53fb4:	40 e9 ff f9 	call -23296 <malloc>
   53fb8:	2c 04 00 4f 	movehi s1, 44
   53fbc:	60 03 f0 c0 	move s27, s0
   53fc0:	40 00 08 0f 	move s2, 512
   53fc4:	21 a0 15 00 	or s1, s1, 1384
   53fc8:	3e 90 00 88 	store_32 s1, 36(sp)
   53fcc:	61 03 00 88 	store_32 s27, (s1)
   53fd0:	3e b0 00 05 	add_i s1, sp, 44
   53fd4:	b2 fb ff f9 	call -4408 <memcpy>
   53fd8:	18 00 10 18 	cmplt_u s0, s24, 1024
   53fdc:	60 04 00 f4 	bnz s0, 140 <open+0x1b0>
   53fe0:	0c 04 00 4f 	movehi s0, 44
   53fe4:	18 27 00 0a 	shr s24, s24, 9
   53fe8:	20 07 00 0f 	move s25, 1
   53fec:	40 83 0d 00 	or s26, s0, 864
   53ff0:	00 00 04 4f 	movehi s0, 8192
   53ff4:	1e 80 00 88 	store_32 s0, 32(sp)
   53ff8:	00 00 08 0f 	move s0, 512
   53ffc:	1e 70 00 88 	store_32 s0, 28(sp)
   54000:	03 00 00 f6 	b 12 <open+0x154>
   54004:	1e 90 00 a8 	load_32 s0, 36(sp)
   54008:	60 03 00 a8 	load_32 s27, (s0)
   5400c:	3a 00 00 a0 	load_u8 s1, (s26)
   54010:	19 24 00 0b 	shl s0, s25, 9
   54014:	5b 00 50 c0 	add_i s2, s27, s0
   54018:	21 04 00 11 	cmpne_i s1, s1, 1
   5401c:	41 01 00 f4 	bnz s1, 40 <open+0x18c>
   54020:	3e 80 00 a8 	load_32 s1, 32(sp)
   54024:	20 80 50 c0 	add_i s1, s0, s1
   54028:	00 00 f1 c0 	move s0, s2
   5402c:	5e 70 00 a8 	load_32 s2, 28(sp)
   54030:	9b fb ff f9 	call -4500 <memcpy>
   54034:	39 07 00 05 	add_i s25, s25, 1
   54038:	19 00 7c c1 	cmpge_u s0, s25, s24
   5403c:	60 01 00 f4 	bnz s0, 44 <open+0x1b0>
   54040:	f1 ff ff f7 	b -60 <open+0x14c>
   54044:	00 80 fc c0 	move s0, s25
   54048:	20 00 f1 c0 	move s1, s2
   5404c:	3c 03 00 f8 	call 3312 <read_sdmmc_device>
   54050:	00 04 00 14 	cmplt_i s0, s0, 1
   54054:	20 fa ff f5 	bnz s0, -188 <open+0xe0>
   54058:	39 07 00 05 	add_i s25, s25, 1
   5405c:	19 00 7c c1 	cmpge_u s0, s25, s24
   54060:	40 00 00 f4 	bnz s0, 8 <open+0x1b0>
   54064:	e8 ff ff f7 	b -96 <open+0x14c>
   54068:	3e 60 00 a8 	load_32 s1, 24(sp)
   5406c:	00 04 00 0f 	move s0, 1
   54070:	01 00 00 82 	store_8 s0, (s1)
   54074:	0c 04 00 4f 	movehi s0, 44
   54078:	20 a0 0d 00 	or s1, s0, 872
   5407c:	01 00 00 a8 	load_32 s0, (s1)
   54080:	3e 90 00 88 	store_32 s1, 36(sp)
   54084:	a0 09 00 f2 	bz s0, 308 <open+0x300>
   54088:	01 40 00 a8 	load_32 s0, 16(s1)
   5408c:	a0 09 00 f2 	bz s0, 308 <open+0x308>
   54090:	01 80 00 a8 	load_32 s0, 32(s1)
   54094:	a0 09 00 f2 	bz s0, 308 <open+0x310>
   54098:	01 c0 00 a8 	load_32 s0, 48(s1)
   5409c:	a0 09 00 f2 	bz s0, 308 <open+0x318>
   540a0:	01 00 01 a8 	load_32 s0, 64(s1)
   540a4:	a0 09 00 f2 	bz s0, 308 <open+0x320>
   540a8:	01 40 01 a8 	load_32 s0, 80(s1)
   540ac:	a0 09 00 f2 	bz s0, 308 <open+0x328>
   540b0:	01 80 01 a8 	load_32 s0, 96(s1)
   540b4:	a0 09 00 f2 	bz s0, 308 <open+0x330>
   540b8:	01 c0 01 a8 	load_32 s0, 112(s1)
   540bc:	a0 09 00 f2 	bz s0, 308 <open+0x338>
   540c0:	01 00 02 a8 	load_32 s0, 128(s1)
   540c4:	a0 09 00 f2 	bz s0, 308 <open+0x340>
   540c8:	01 40 02 a8 	load_32 s0, 144(s1)
   540cc:	a0 09 00 f2 	bz s0, 308 <open+0x348>
   540d0:	01 80 02 a8 	load_32 s0, 160(s1)
   540d4:	a0 09 00 f2 	bz s0, 308 <open+0x350>
   540d8:	01 c0 02 a8 	load_32 s0, 176(s1)
   540dc:	a0 09 00 f2 	bz s0, 308 <open+0x358>
   540e0:	01 00 03 a8 	load_32 s0, 192(s1)
   540e4:	a0 09 00 f2 	bz s0, 308 <open+0x360>
   540e8:	01 40 03 a8 	load_32 s0, 208(s1)
   540ec:	a0 09 00 f2 	bz s0, 308 <open+0x368>
   540f0:	01 80 03 a8 	load_32 s0, 224(s1)
   540f4:	a0 09 00 f2 	bz s0, 308 <open+0x370>
   540f8:	01 c0 03 a8 	load_32 s0, 240(s1)
   540fc:	a0 09 00 f2 	bz s0, 308 <open+0x378>
   54100:	01 00 04 a8 	load_32 s0, 256(s1)
   54104:	a0 09 00 f2 	bz s0, 308 <open+0x380>
   54108:	01 40 04 a8 	load_32 s0, 272(s1)
   5410c:	a0 09 00 f2 	bz s0, 308 <open+0x388>
   54110:	01 80 04 a8 	load_32 s0, 288(s1)
   54114:	a0 09 00 f2 	bz s0, 308 <open+0x390>
   54118:	01 c0 04 a8 	load_32 s0, 304(s1)
   5411c:	a0 09 00 f2 	bz s0, 308 <open+0x398>
   54120:	01 00 05 a8 	load_32 s0, 320(s1)
   54124:	a0 09 00 f2 	bz s0, 308 <open+0x3a0>
   54128:	1e 90 00 a8 	load_32 s0, 36(sp)
   5412c:	00 40 05 a8 	load_32 s0, 336(s0)
   54130:	80 09 00 f2 	bz s0, 304 <open+0x3a8>
   54134:	1e 90 00 a8 	load_32 s0, 36(sp)
   54138:	00 80 05 a8 	load_32 s0, 352(s0)
   5413c:	60 09 00 f2 	bz s0, 300 <open+0x3b0>
   54140:	1e 90 00 a8 	load_32 s0, 36(sp)
   54144:	00 c0 05 a8 	load_32 s0, 368(s0)
   54148:	40 09 00 f2 	bz s0, 296 <open+0x3b8>
   5414c:	1e 90 00 a8 	load_32 s0, 36(sp)
   54150:	00 00 06 a8 	load_32 s0, 384(s0)
   54154:	20 09 00 f2 	bz s0, 292 <open+0x3c0>
   54158:	1e 90 00 a8 	load_32 s0, 36(sp)
   5415c:	00 40 06 a8 	load_32 s0, 400(s0)
   54160:	00 09 00 f2 	bz s0, 288 <open+0x3c8>
   54164:	1e 90 00 a8 	load_32 s0, 36(sp)
   54168:	00 80 06 a8 	load_32 s0, 416(s0)
   5416c:	e0 08 00 f2 	bz s0, 284 <open+0x3d0>
   54170:	1e 90 00 a8 	load_32 s0, 36(sp)
   54174:	00 c0 06 a8 	load_32 s0, 432(s0)
   54178:	c0 08 00 f2 	bz s0, 280 <open+0x3d8>
   5417c:	1e 90 00 a8 	load_32 s0, 36(sp)
   54180:	00 00 07 a8 	load_32 s0, 448(s0)
   54184:	a0 08 00 f2 	bz s0, 276 <open+0x3e0>
   54188:	1e 90 00 a8 	load_32 s0, 36(sp)
   5418c:	00 40 07 a8 	load_32 s0, 464(s0)
   54190:	80 08 00 f2 	bz s0, 272 <open+0x3e8>
   54194:	1e 90 00 a8 	load_32 s0, 36(sp)
   54198:	00 80 07 a8 	load_32 s0, 480(s0)
   5419c:	60 08 00 f2 	bz s0, 268 <open+0x3f0>
   541a0:	1e 90 00 a8 	load_32 s0, 36(sp)
   541a4:	00 c0 07 a8 	load_32 s0, 496(s0)
   541a8:	40 08 00 f2 	bz s0, 264 <open+0x3f8>
   541ac:	a9 01 00 f8 	call 1700 <__errno_ptr>
   541b0:	20 60 00 0f 	move s1, 24
   541b4:	54 00 00 f6 	b 336 <open+0x44c>
   541b8:	00 00 00 0f 	move s0, 0
   541bc:	3e 00 00 f6 	b 248 <open+0x3fc>
   541c0:	00 04 00 0f 	move s0, 1
   541c4:	3c 00 00 f6 	b 240 <open+0x3fc>
   541c8:	00 08 00 0f 	move s0, 2
   541cc:	3a 00 00 f6 	b 232 <open+0x3fc>
   541d0:	00 0c 00 0f 	move s0, 3
   541d4:	38 00 00 f6 	b 224 <open+0x3fc>
   541d8:	00 10 00 0f 	move s0, 4
   541dc:	36 00 00 f6 	b 216 <open+0x3fc>
   541e0:	00 14 00 0f 	move s0, 5
   541e4:	34 00 00 f6 	b 208 <open+0x3fc>
   541e8:	00 18 00 0f 	move s0, 6
   541ec:	32 00 00 f6 	b 200 <open+0x3fc>
   541f0:	00 1c 00 0f 	move s0, 7
   541f4:	30 00 00 f6 	b 192 <open+0x3fc>
   541f8:	00 20 00 0f 	move s0, 8
   541fc:	2e 00 00 f6 	b 184 <open+0x3fc>
   54200:	00 24 00 0f 	move s0, 9
   54204:	2c 00 00 f6 	b 176 <open+0x3fc>
   54208:	00 28 00 0f 	move s0, 10
   5420c:	2a 00 00 f6 	b 168 <open+0x3fc>
   54210:	00 2c 00 0f 	move s0, 11
   54214:	28 00 00 f6 	b 160 <open+0x3fc>
   54218:	00 30 00 0f 	move s0, 12
   5421c:	26 00 00 f6 	b 152 <open+0x3fc>
   54220:	00 34 00 0f 	move s0, 13
   54224:	24 00 00 f6 	b 144 <open+0x3fc>
   54228:	00 38 00 0f 	move s0, 14
   5422c:	22 00 00 f6 	b 136 <open+0x3fc>
   54230:	00 3c 00 0f 	move s0, 15
   54234:	20 00 00 f6 	b 128 <open+0x3fc>
   54238:	00 40 00 0f 	move s0, 16
   5423c:	1e 00 00 f6 	b 120 <open+0x3fc>
   54240:	00 44 00 0f 	move s0, 17
   54244:	1c 00 00 f6 	b 112 <open+0x3fc>
   54248:	00 48 00 0f 	move s0, 18
   5424c:	1a 00 00 f6 	b 104 <open+0x3fc>
   54250:	00 4c 00 0f 	move s0, 19
   54254:	18 00 00 f6 	b 96 <open+0x3fc>
   54258:	00 50 00 0f 	move s0, 20
   5425c:	16 00 00 f6 	b 88 <open+0x3fc>
   54260:	00 54 00 0f 	move s0, 21
   54264:	14 00 00 f6 	b 80 <open+0x3fc>
   54268:	00 58 00 0f 	move s0, 22
   5426c:	12 00 00 f6 	b 72 <open+0x3fc>
   54270:	00 5c 00 0f 	move s0, 23
   54274:	10 00 00 f6 	b 64 <open+0x3fc>
   54278:	00 60 00 0f 	move s0, 24
   5427c:	0e 00 00 f6 	b 56 <open+0x3fc>
   54280:	00 64 00 0f 	move s0, 25
   54284:	0c 00 00 f6 	b 48 <open+0x3fc>
   54288:	00 68 00 0f 	move s0, 26
   5428c:	0a 00 00 f6 	b 40 <open+0x3fc>
   54290:	00 6c 00 0f 	move s0, 27
   54294:	08 00 00 f6 	b 32 <open+0x3fc>
   54298:	00 70 00 0f 	move s0, 28
   5429c:	06 00 00 f6 	b 24 <open+0x3fc>
   542a0:	00 74 00 0f 	move s0, 29
   542a4:	04 00 00 f6 	b 16 <open+0x3fc>
   542a8:	00 78 00 0f 	move s0, 30
   542ac:	02 00 00 f6 	b 8 <open+0x3fc>
   542b0:	00 7c 00 0f 	move s0, 31
   542b4:	1e 80 00 88 	store_32 s0, 32(sp)
   542b8:	0c 04 00 4f 	movehi s0, 44
   542bc:	00 a0 15 00 	or s0, s0, 1384
   542c0:	00 03 00 a8 	load_32 s24, (s0)
   542c4:	78 13 00 a8 	load_32 s27, 4(s24)
   542c8:	bb 01 00 f2 	bz s27, 52 <open+0x444>
   542cc:	40 03 00 0f 	move s26, 0
   542d0:	1a a0 00 07 	mull_i s0, s26, 40
   542d4:	3e a0 00 a8 	load_32 s1, 40(sp)
   542d8:	38 03 50 c0 	add_i s25, s24, s0
   542dc:	19 40 00 05 	add_i s0, s25, 16
   542e0:	5d fd ff f9 	call -2700 <strcmp>
   542e4:	40 00 00 f4 	bnz s0, 8 <open+0x434>
   542e8:	0a 00 00 f6 	b 40 <open+0x458>
   542ec:	5a 07 00 05 	add_i s26, s26, 1
   542f0:	1a 80 7d c1 	cmpge_u s0, s26, s27
   542f4:	40 00 00 f4 	bnz s0, 8 <open+0x444>
   542f8:	f6 ff ff f7 	b -40 <open+0x418>
   542fc:	55 01 00 f8 	call 1364 <__errno_ptr>
   54300:	20 08 00 0f 	move s1, 2
   54304:	20 00 00 88 	store_32 s1, (s0)
   54308:	00 fc ff 0f 	move s0, -1
   5430c:	0d 00 00 f6 	b 52 <open+0x488>
   54310:	1e 80 00 a8 	load_32 s0, 32(sp)
   54314:	3e 90 00 a8 	load_32 s1, 36(sp)
   54318:	40 10 00 0b 	shl s2, s0, 4
   5431c:	41 00 51 c0 	add_i s2, s1, s2
   54320:	20 04 00 0f 	move s1, 1
   54324:	22 00 00 88 	store_32 s1, (s2)
   54328:	39 30 00 a8 	load_32 s1, 12(s25)
   5432c:	22 10 00 88 	store_32 s1, 4(s2)
   54330:	39 20 00 a8 	load_32 s1, 8(s25)
   54334:	22 20 00 88 	store_32 s1, 8(s2)
   54338:	20 00 00 0f 	move s1, 0
   5433c:	22 30 00 88 	store_32 s1, 12(s2)
   54340:	fe b3 08 a8 	load_32 ra, 556(sp)
   54344:	7e c3 08 a8 	load_32 s27, 560(sp)
   54348:	5e d3 08 a8 	load_32 s26, 564(sp)
   5434c:	3e e3 08 a8 	load_32 s25, 568(sp)
   54350:	1e f3 08 a8 	load_32 s24, 572(sp)
   54354:	de 03 09 05 	add_i sp, sp, 576
   54358:	1f 00 00 f0 	ret

000000000005435c close:
   5435c:	de 03 ff 05 	add_i sp, sp, -64
   54360:	fe f3 00 88 	store_32 ra, 60(sp)
   54364:	20 80 00 18 	cmplt_u s1, s0, 32
   54368:	01 01 00 f4 	bnz s1, 32 <close+0x2c>
   5436c:	39 01 00 f8 	call 1252 <__errno_ptr>
   54370:	20 24 00 0f 	move s1, 9
   54374:	20 00 00 88 	store_32 s1, (s0)
   54378:	00 fc ff 0f 	move s0, -1
   5437c:	fe f3 00 a8 	load_32 ra, 60(sp)
   54380:	de 03 01 05 	add_i sp, sp, 64
   54384:	1f 00 00 f0 	ret
   54388:	2c 04 00 4f 	movehi s1, 44
   5438c:	00 10 00 0b 	shl s0, s0, 4
   54390:	21 a0 0d 00 	or s1, s1, 872
   54394:	21 00 50 c0 	add_i s1, s1, s0
   54398:	00 00 00 0f 	move s0, 0
   5439c:	01 00 00 88 	store_32 s0, (s1)
   543a0:	fe f3 00 a8 	load_32 ra, 60(sp)
   543a4:	de 03 01 05 	add_i sp, sp, 64
   543a8:	1f 00 00 f0 	ret

00000000000543ac read:
   543ac:	de 03 f7 05 	add_i sp, sp, -576
   543b0:	1e f3 08 88 	store_32 s24, 572(sp)
   543b4:	3e e3 08 88 	store_32 s25, 568(sp)
   543b8:	5e d3 08 88 	store_32 s26, 564(sp)
   543bc:	7e c3 08 88 	store_32 s27, 560(sp)
   543c0:	fe b3 08 88 	store_32 ra, 556(sp)
   543c4:	60 80 00 18 	cmplt_u s3, s0, 32
   543c8:	43 00 00 f4 	bnz s3, 8 <read+0x24>
   543cc:	6a 00 00 f6 	b 424 <read+0x1c8>
   543d0:	6c 04 00 4f 	movehi s3, 44
   543d4:	00 10 00 0b 	shl s0, s0, 4
   543d8:	63 a0 0d 00 	or s3, s3, 872
   543dc:	a3 00 50 c0 	add_i s5, s3, s0
   543e0:	05 00 00 a8 	load_32 s0, (s5)
   543e4:	40 00 00 f4 	bnz s0, 8 <read+0x40>
   543e8:	63 00 00 f6 	b 396 <read+0x1c8>
   543ec:	65 10 00 a8 	load_32 s3, 4(s5)
   543f0:	85 30 00 a8 	load_32 s4, 12(s5)
   543f4:	03 00 62 c0 	sub_i s0, s3, s4
   543f8:	60 04 00 14 	cmplt_i s3, s0, 1
   543fc:	23 0d 00 f4 	bnz s3, 420 <read+0x1f4>
   54400:	60 00 81 c1 	cmplt_u s3, s0, s2
   54404:	43 00 00 f4 	bnz s3, 8 <read+0x60>
   54408:	00 00 f1 c0 	move s0, s2
   5440c:	45 30 00 05 	add_i s2, s5, 12
   54410:	c0 0a 00 f2 	bz s0, 344 <read+0x1bc>
   54414:	5e 30 00 88 	store_32 s2, 12(sp)
   54418:	04 ff 07 01 	and s24, s4, 511
   5441c:	3e 80 00 88 	store_32 s1, 32(sp)
   54420:	20 03 00 0f 	move s25, 0
   54424:	25 20 00 a8 	load_32 s1, 8(s5)
   54428:	21 00 52 c0 	add_i s1, s1, s4
   5442c:	41 7c 00 09 	ashr s2, s1, 31
   54430:	42 5c 00 0a 	shr s2, s2, 23
   54434:	21 00 51 c0 	add_i s1, s1, s2
   54438:	40 00 08 0f 	move s2, 512
   5443c:	41 27 00 09 	ashr s26, s1, 9
   54440:	2c 04 00 4f 	movehi s1, 44
   54444:	21 80 0d 00 	or s1, s1, 864
   54448:	3e 90 00 88 	store_32 s1, 36(sp)
   5444c:	20 00 04 4f 	movehi s1, 8192
   54450:	3e 40 00 88 	store_32 s1, 16(sp)
   54454:	3e b0 00 05 	add_i s1, sp, 44
   54458:	3e 70 00 88 	store_32 s1, 28(sp)
   5445c:	3e 53 00 88 	store_32 s25, 20(sp)
   54460:	1e 60 00 88 	store_32 s0, 24(sp)
   54464:	5e a0 00 88 	store_32 s2, 40(sp)
   54468:	60 83 6c c0 	sub_i s27, s0, s25
   5446c:	f8 01 00 f4 	bnz s24, 60 <read+0xfc>
   54470:	1b 00 08 18 	cmplt_u s0, s27, 512
   54474:	a0 01 00 f4 	bnz s0, 52 <read+0xfc>
   54478:	1e 90 00 a8 	load_32 s0, 36(sp)
   5447c:	00 00 00 a0 	load_u8 s0, (s0)
   54480:	3e 80 00 a8 	load_32 s1, 32(sp)
   54484:	00 04 00 11 	cmpne_i s0, s0, 1
   54488:	61 80 5c c0 	add_i s3, s1, s25
   5448c:	00 05 00 f4 	bnz s0, 160 <read+0x180>
   54490:	3e 40 00 a8 	load_32 s1, 16(sp)
   54494:	1a 24 00 0b 	shl s0, s26, 9
   54498:	20 80 50 c0 	add_i s1, s0, s1
   5449c:	00 80 f1 c0 	move s0, s3
   544a0:	7f fa ff f9 	call -5636 <memcpy>
   544a4:	28 00 00 f6 	b 160 <read+0x198>
   544a8:	1e 90 00 a8 	load_32 s0, 36(sp)
   544ac:	00 00 00 a0 	load_u8 s0, (s0)
   544b0:	00 04 00 11 	cmpne_i s0, s0, 1
   544b4:	60 01 00 f4 	bnz s0, 44 <read+0x134>
   544b8:	3e 40 00 a8 	load_32 s1, 16(sp)
   544bc:	1a 24 00 0b 	shl s0, s26, 9
   544c0:	20 80 50 c0 	add_i s1, s0, s1
   544c4:	1e 70 00 a8 	load_32 s0, 28(sp)
   544c8:	75 fa ff f9 	call -5676 <memcpy>
   544cc:	1e a0 00 a8 	load_32 s0, 40(sp)
   544d0:	00 00 6c c0 	sub_i s0, s0, s24
   544d4:	20 80 6d c1 	cmpgt_u s1, s0, s27
   544d8:	a1 01 00 f4 	bnz s1, 52 <read+0x160>
   544dc:	0b 00 00 f6 	b 44 <read+0x15c>
   544e0:	00 00 fd c0 	move s0, s26
   544e4:	3e 70 00 a8 	load_32 s1, 28(sp)
   544e8:	15 02 00 f8 	call 2132 <read_sdmmc_device>
   544ec:	00 00 00 12 	cmpgt_i s0, s0, 0
   544f0:	40 00 00 f4 	bnz s0, 8 <read+0x14c>
   544f4:	2d 00 00 f6 	b 180 <read+0x1fc>
   544f8:	1e a0 00 a8 	load_32 s0, 40(sp)
   544fc:	00 00 6c c0 	sub_i s0, s0, s24
   54500:	20 80 6d c1 	cmpgt_u s1, s0, s27
   54504:	41 00 00 f4 	bnz s1, 8 <read+0x160>
   54508:	60 03 f0 c0 	move s27, s0
   5450c:	1e 80 00 a8 	load_32 s0, 32(sp)
   54510:	3e 70 00 a8 	load_32 s1, 28(sp)
   54514:	40 80 fd c0 	move s2, s27
   54518:	00 80 5c c0 	add_i s0, s0, s25
   5451c:	21 00 5c c0 	add_i s1, s1, s24
   54520:	5f fa ff f9 	call -5764 <memcpy>
   54524:	3b 83 5c c0 	add_i s25, s27, s25
   54528:	08 00 00 f6 	b 32 <read+0x19c>
   5452c:	00 00 fd c0 	move s0, s26
   54530:	20 80 f1 c0 	move s1, s3
   54534:	02 02 00 f8 	call 2056 <read_sdmmc_device>
   54538:	00 00 00 12 	cmpgt_i s0, s0, 0
   5453c:	40 00 00 f4 	bnz s0, 8 <read+0x198>
   54540:	1a 00 00 f6 	b 104 <read+0x1fc>
   54544:	39 03 08 05 	add_i s25, s25, 512
   54548:	1e 60 00 a8 	load_32 s0, 24(sp)
   5454c:	5a 07 00 05 	add_i s26, s26, 1
   54550:	1e 53 00 a8 	load_32 s24, 20(sp)
   54554:	5e a0 00 a8 	load_32 s2, 40(sp)
   54558:	20 80 6c c1 	cmpgt_u s1, s0, s25
   5455c:	61 f8 ff f5 	bnz s1, -244 <read+0xbc>
   54560:	5e 30 00 a8 	load_32 s2, 12(sp)
   54564:	82 00 00 a8 	load_32 s4, (s2)
   54568:	24 00 50 c0 	add_i s1, s4, s0
   5456c:	22 00 00 88 	store_32 s1, (s2)
   54570:	05 00 00 f6 	b 20 <read+0x1d8>
   54574:	b7 00 00 f8 	call 732 <__errno_ptr>
   54578:	20 24 00 0f 	move s1, 9
   5457c:	20 00 00 88 	store_32 s1, (s0)
   54580:	00 fc ff 0f 	move s0, -1
   54584:	fe b3 08 a8 	load_32 ra, 556(sp)
   54588:	7e c3 08 a8 	load_32 s27, 560(sp)
   5458c:	5e d3 08 a8 	load_32 s26, 564(sp)
   54590:	3e e3 08 a8 	load_32 s25, 568(sp)
   54594:	1e f3 08 a8 	load_32 s24, 572(sp)
   54598:	de 03 09 05 	add_i sp, sp, 576
   5459c:	1f 00 00 f0 	ret
   545a0:	00 00 00 0f 	move s0, 0
   545a4:	f8 ff ff f7 	b -32 <read+0x1d8>
   545a8:	aa 00 00 f8 	call 680 <__errno_ptr>
   545ac:	20 14 00 0f 	move s1, 5
   545b0:	f3 ff ff f7 	b -52 <read+0x1d0>

00000000000545b4 write:
   545b4:	de 03 ff 05 	add_i sp, sp, -64
   545b8:	fe f3 00 88 	store_32 ra, 60(sp)
   545bc:	a5 00 00 f8 	call 660 <__errno_ptr>
   545c0:	20 fc ff 0f 	move s1, -1
   545c4:	40 04 00 0f 	move s2, 1
   545c8:	40 00 00 88 	store_32 s2, (s0)
   545cc:	00 80 f0 c0 	move s0, s1
   545d0:	fe f3 00 a8 	load_32 ra, 60(sp)
   545d4:	de 03 01 05 	add_i sp, sp, 64
   545d8:	1f 00 00 f0 	ret

00000000000545dc lseek:
   545dc:	de 03 ff 05 	add_i sp, sp, -64
   545e0:	fe f3 00 88 	store_32 ra, 60(sp)
   545e4:	60 00 f0 c0 	move s3, s0
   545e8:	00 80 f0 c0 	move s0, s1
   545ec:	83 80 00 18 	cmplt_u s4, s3, 32
   545f0:	44 00 00 f4 	bnz s4, 8 <lseek+0x1c>
   545f4:	11 00 00 f6 	b 68 <lseek+0x5c>
   545f8:	2c 04 00 4f 	movehi s1, 44
   545fc:	63 10 00 0b 	shl s3, s3, 4
   54600:	21 a0 0d 00 	or s1, s1, 872
   54604:	21 80 51 c0 	add_i s1, s1, s3
   54608:	61 00 00 a8 	load_32 s3, (s1)
   5460c:	43 00 00 f4 	bnz s3, 8 <lseek+0x38>
   54610:	0a 00 00 f6 	b 40 <lseek+0x5c>
   54614:	62 08 00 10 	cmpeq_i s3, s2, 2
   54618:	e3 01 00 f4 	bnz s3, 60 <lseek+0x78>
   5461c:	62 04 00 10 	cmpeq_i s3, s2, 1
   54620:	63 02 00 f4 	bnz s3, 76 <lseek+0x90>
   54624:	42 00 00 f4 	bnz s2, 8 <lseek+0x50>
   54628:	0d 00 00 f6 	b 52 <lseek+0x80>
   5462c:	89 00 00 f8 	call 548 <__errno_ptr>
   54630:	20 58 00 0f 	move s1, 22
   54634:	03 00 00 f6 	b 12 <lseek+0x64>
   54638:	86 00 00 f8 	call 536 <__errno_ptr>
   5463c:	20 24 00 0f 	move s1, 9
   54640:	20 00 00 88 	store_32 s1, (s0)
   54644:	00 fc ff 0f 	move s0, -1
   54648:	fe f3 00 a8 	load_32 ra, 60(sp)
   5464c:	de 03 01 05 	add_i sp, sp, 64
   54650:	1f 00 00 f0 	ret
   54654:	41 10 00 a8 	load_32 s2, 4(s1)
   54658:	02 00 60 c0 	sub_i s0, s2, s0
   5465c:	40 fc ff 12 	cmpgt_i s2, s0, -1
   54660:	01 30 00 88 	store_32 s0, 12(s1)
   54664:	22 ff ff f5 	bnz s2, -28 <lseek+0x6c>
   54668:	06 00 00 f6 	b 24 <lseek+0xa4>
   5466c:	41 30 00 a8 	load_32 s2, 12(s1)
   54670:	02 00 50 c0 	add_i s0, s2, s0
   54674:	40 fc ff 12 	cmpgt_i s2, s0, -1
   54678:	01 30 00 88 	store_32 s0, 12(s1)
   5467c:	62 fe ff f5 	bnz s2, -52 <lseek+0x6c>
   54680:	00 00 00 0f 	move s0, 0
   54684:	01 30 00 88 	store_32 s0, 12(s1)
   54688:	fe f3 00 a8 	load_32 ra, 60(sp)
   5468c:	de 03 01 05 	add_i sp, sp, 64
   54690:	1f 00 00 f0 	ret

0000000000054694 stat:
   54694:	de 03 ff 05 	add_i sp, sp, -64
   54698:	1e f3 00 88 	store_32 s24, 60(sp)
   5469c:	3e e3 00 88 	store_32 s25, 56(sp)
   546a0:	5e d3 00 88 	store_32 s26, 52(sp)
   546a4:	7e c3 00 88 	store_32 s27, 48(sp)
   546a8:	fe b3 00 88 	store_32 ra, 44(sp)
   546ac:	4c 04 00 4f 	movehi s2, 44
   546b0:	42 a0 15 00 	or s2, s2, 1384
   546b4:	42 03 00 a8 	load_32 s26, (s2)
   546b8:	7a 13 00 a8 	load_32 s27, 4(s26)
   546bc:	3e 90 00 88 	store_32 s1, 36(sp)
   546c0:	1e a0 00 88 	store_32 s0, 40(sp)
   546c4:	9b 01 00 f2 	bz s27, 48 <stat+0x60>
   546c8:	00 03 00 0f 	move s24, 0
   546cc:	18 a0 00 07 	mull_i s0, s24, 40
   546d0:	3e a0 00 a8 	load_32 s1, 40(sp)
   546d4:	3a 03 50 c0 	add_i s25, s26, s0
   546d8:	19 40 00 05 	add_i s0, s25, 16
   546dc:	5e fc ff f9 	call -3720 <strcmp>
   546e0:	40 01 00 f2 	bz s0, 40 <stat+0x74>
   546e4:	18 07 00 05 	add_i s24, s24, 1
   546e8:	18 80 7d c1 	cmpge_u s0, s24, s27
   546ec:	40 00 00 f4 	bnz s0, 8 <stat+0x60>
   546f0:	f7 ff ff f7 	b -36 <stat+0x38>
   546f4:	57 00 00 f8 	call 348 <__errno_ptr>
   546f8:	20 08 00 0f 	move s1, 2
   546fc:	20 00 00 88 	store_32 s1, (s0)
   54700:	00 fc ff 0f 	move s0, -1
   54704:	05 00 00 f6 	b 20 <stat+0x84>
   54708:	19 30 00 a8 	load_32 s0, 12(s25)
   5470c:	3e 90 00 a8 	load_32 s1, 36(sp)
   54710:	01 00 00 88 	store_32 s0, (s1)
   54714:	00 00 00 0f 	move s0, 0
   54718:	fe b3 00 a8 	load_32 ra, 44(sp)
   5471c:	7e c3 00 a8 	load_32 s27, 48(sp)
   54720:	5e d3 00 a8 	load_32 s26, 52(sp)
   54724:	3e e3 00 a8 	load_32 s25, 56(sp)
   54728:	1e f3 00 a8 	load_32 s24, 60(sp)
   5472c:	de 03 01 05 	add_i sp, sp, 64
   54730:	1f 00 00 f0 	ret

0000000000054734 fstat:
   54734:	de 03 ff 05 	add_i sp, sp, -64
   54738:	fe f3 00 88 	store_32 ra, 60(sp)
   5473c:	40 80 00 18 	cmplt_u s2, s0, 32
   54740:	42 00 00 f4 	bnz s2, 8 <fstat+0x14>
   54744:	0e 00 00 f6 	b 56 <fstat+0x48>
   54748:	4c 04 00 4f 	movehi s2, 44
   5474c:	00 10 00 0b 	shl s0, s0, 4
   54750:	42 a0 0d 00 	or s2, s2, 872
   54754:	02 00 50 c0 	add_i s0, s2, s0
   54758:	40 00 00 a8 	load_32 s2, (s0)
   5475c:	42 00 00 f4 	bnz s2, 8 <fstat+0x30>
   54760:	07 00 00 f6 	b 28 <fstat+0x48>
   54764:	00 10 00 a8 	load_32 s0, 4(s0)
   54768:	01 00 00 88 	store_32 s0, (s1)
   5476c:	00 00 00 0f 	move s0, 0
   54770:	fe f3 00 a8 	load_32 ra, 60(sp)
   54774:	de 03 01 05 	add_i sp, sp, 64
   54778:	1f 00 00 f0 	ret
   5477c:	35 00 00 f8 	call 212 <__errno_ptr>
   54780:	20 24 00 0f 	move s1, 9
   54784:	20 00 00 88 	store_32 s1, (s0)
   54788:	00 fc ff 0f 	move s0, -1
   5478c:	fe f3 00 a8 	load_32 ra, 60(sp)
   54790:	de 03 01 05 	add_i sp, sp, 64
   54794:	1f 00 00 f0 	ret

0000000000054798 access:
   54798:	de 03 ff 05 	add_i sp, sp, -64
   5479c:	1e f3 00 88 	store_32 s24, 60(sp)
   547a0:	3e e3 00 88 	store_32 s25, 56(sp)
   547a4:	5e d3 00 88 	store_32 s26, 52(sp)
   547a8:	7e c3 00 88 	store_32 s27, 48(sp)
   547ac:	fe b3 00 88 	store_32 ra, 44(sp)
   547b0:	4c 04 00 4f 	movehi s2, 44
   547b4:	40 0b 00 0f 	move s26, 2
   547b8:	42 a0 15 00 	or s2, s2, 1384
   547bc:	62 03 00 a8 	load_32 s27, (s2)
   547c0:	1b 13 00 a8 	load_32 s24, 4(s27)
   547c4:	20 03 f0 c0 	move s25, s0
   547c8:	18 03 00 f2 	bz s24, 96 <access+0x90>
   547cc:	3e 90 00 88 	store_32 s1, 36(sp)
   547d0:	5e a3 00 88 	store_32 s26, 40(sp)
   547d4:	40 03 00 0f 	move s26, 0
   547d8:	1a a0 00 07 	mull_i s0, s26, 40
   547dc:	1b 00 50 c0 	add_i s0, s27, s0
   547e0:	20 80 fc c0 	move s1, s25
   547e4:	00 40 00 05 	add_i s0, s0, 16
   547e8:	1b fc ff f9 	call -3988 <strcmp>
   547ec:	40 00 00 f4 	bnz s0, 8 <access+0x5c>
   547f0:	07 00 00 f6 	b 28 <access+0x74>
   547f4:	5a 07 00 05 	add_i s26, s26, 1
   547f8:	1a 00 7c c1 	cmpge_u s0, s26, s24
   547fc:	40 00 00 f4 	bnz s0, 8 <access+0x6c>
   54800:	f6 ff ff f7 	b -40 <access+0x40>
   54804:	5e a3 00 a8 	load_32 s26, 40(sp)
   54808:	08 00 00 f6 	b 32 <access+0x90>
   5480c:	1e 90 00 a8 	load_32 s0, 36(sp)
   54810:	00 08 00 01 	and s0, s0, 2
   54814:	40 00 00 f2 	bz s0, 8 <access+0x84>
   54818:	03 00 00 f6 	b 12 <access+0x8c>
   5481c:	00 00 00 0f 	move s0, 0
   54820:	05 00 00 f6 	b 20 <access+0x9c>
   54824:	40 07 00 0f 	move s26, 1
   54828:	0a 00 00 f8 	call 40 <__errno_ptr>
   5482c:	40 03 00 88 	store_32 s26, (s0)
   54830:	00 fc ff 0f 	move s0, -1
   54834:	fe b3 00 a8 	load_32 ra, 44(sp)
   54838:	7e c3 00 a8 	load_32 s27, 48(sp)
   5483c:	5e d3 00 a8 	load_32 s26, 52(sp)
   54840:	3e e3 00 a8 	load_32 s25, 56(sp)
   54844:	1e f3 00 a8 	load_32 s24, 60(sp)
   54848:	de 03 01 05 	add_i sp, sp, 64
   5484c:	1f 00 00 f0 	ret

0000000000054850 __errno_ptr:
   54850:	de 03 ff 05 	add_i sp, sp, -64
   54854:	fe f3 00 88 	store_32 ra, 60(sp)
   54858:	13 00 00 f8 	call 76 <get_current_thread_id>
   5485c:	2c 04 00 4f 	movehi s1, 44
   54860:	fe f3 00 a8 	load_32 ra, 60(sp)
   54864:	00 08 00 0b 	shl s0, s0, 2
   54868:	21 80 00 00 	or s1, s1, 32
   5486c:	01 00 50 c0 	add_i s0, s1, s0
   54870:	de 03 01 05 	add_i sp, sp, 64
   54874:	1f 00 00 f0 	ret

0000000000054878 usleep:
   54878:	26 00 00 ac 	getcr s1, 6
   5487c:	00 c8 00 07 	mull_i s0, s0, 50
   54880:	01 00 50 c0 	add_i s0, s1, s0
   54884:	26 00 00 ac 	getcr s1, 6
   54888:	21 00 40 c1 	cmplt_i s1, s1, s0
   5488c:	c1 ff ff f5 	bnz s1, -8 <usleep+0xc>
   54890:	00 00 00 0f 	move s0, 0
   54894:	1f 00 00 f0 	ret

0000000000054898 exit:
   54898:	00 fc ff 0f 	move s0, -1
   5489c:	14 00 00 8c 	setcr s0, 20
   548a0:	00 00 00 f6 	b 0 <exit+0x8>

00000000000548a4 get_current_thread_id:
   548a4:	00 00 00 ac 	getcr s0, 0
   548a8:	1f 00 00 f0 	ret

00000000000548ac get_cycle_count:
   548ac:	06 00 00 ac 	getcr s0, 6
   548b0:	1f 00 00 f0 	ret

00000000000548b4 init_sdmmc_device:
   548b4:	de 03 fe 05 	add_i sp, sp, -128
   548b8:	1e f3 01 88 	store_32 s24, 124(sp)
   548bc:	3e e3 01 88 	store_32 s25, 120(sp)
   548c0:	5e d3 01 88 	store_32 s26, 116(sp)
   548c4:	7e c3 01 88 	store_32 s27, 112(sp)
   548c8:	fe b3 01 88 	store_32 ra, 108(sp)
   548cc:	18 fc ff 4f 	movehi s0, 524280
   548d0:	20 f0 01 0f 	move s1, 124
   548d4:	40 ff 03 0f 	move s26, 255
   548d8:	40 40 03 00 	or s2, s0, 208
   548dc:	5e a0 01 88 	store_32 s2, 104(sp)
   548e0:	20 03 03 00 	or s25, s0, 192
   548e4:	00 23 03 00 	or s24, s0, 200
   548e8:	22 00 00 88 	store_32 s1, (s2)
   548ec:	20 30 03 00 	or s1, s0, 204
   548f0:	40 04 00 0f 	move s2, 1
   548f4:	41 00 00 88 	store_32 s2, (s1)
   548f8:	59 03 00 88 	store_32 s26, (s25)
   548fc:	58 00 00 a8 	load_32 s2, (s24)
   54900:	42 04 00 01 	and s2, s2, 1
   54904:	c2 ff ff f3 	bz s2, -8 <init_sdmmc_device+0x48>
   54908:	60 13 03 00 	or s27, s0, 196
   5490c:	1b 00 00 a8 	load_32 s0, (s27)
   54910:	59 03 00 88 	store_32 s26, (s25)
   54914:	18 00 00 a8 	load_32 s0, (s24)
   54918:	00 04 00 01 	and s0, s0, 1
   5491c:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x60>
   54920:	1b 00 00 a8 	load_32 s0, (s27)
   54924:	59 03 00 88 	store_32 s26, (s25)
   54928:	18 00 00 a8 	load_32 s0, (s24)
   5492c:	00 04 00 01 	and s0, s0, 1
   54930:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x74>
   54934:	1b 00 00 a8 	load_32 s0, (s27)
   54938:	59 03 00 88 	store_32 s26, (s25)
   5493c:	18 00 00 a8 	load_32 s0, (s24)
   54940:	00 04 00 01 	and s0, s0, 1
   54944:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x88>
   54948:	1b 00 00 a8 	load_32 s0, (s27)
   5494c:	59 03 00 88 	store_32 s26, (s25)
   54950:	18 00 00 a8 	load_32 s0, (s24)
   54954:	00 04 00 01 	and s0, s0, 1
   54958:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x9c>
   5495c:	1b 00 00 a8 	load_32 s0, (s27)
   54960:	59 03 00 88 	store_32 s26, (s25)
   54964:	18 00 00 a8 	load_32 s0, (s24)
   54968:	00 04 00 01 	and s0, s0, 1
   5496c:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xb0>
   54970:	1b 00 00 a8 	load_32 s0, (s27)
   54974:	59 03 00 88 	store_32 s26, (s25)
   54978:	18 00 00 a8 	load_32 s0, (s24)
   5497c:	00 04 00 01 	and s0, s0, 1
   54980:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xc4>
   54984:	1b 00 00 a8 	load_32 s0, (s27)
   54988:	59 03 00 88 	store_32 s26, (s25)
   5498c:	18 00 00 a8 	load_32 s0, (s24)
   54990:	00 04 00 01 	and s0, s0, 1
   54994:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xd8>
   54998:	1b 00 00 a8 	load_32 s0, (s27)
   5499c:	59 03 00 88 	store_32 s26, (s25)
   549a0:	18 00 00 a8 	load_32 s0, (s24)
   549a4:	00 04 00 01 	and s0, s0, 1
   549a8:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xec>
   549ac:	1b 00 00 a8 	load_32 s0, (s27)
   549b0:	59 03 00 88 	store_32 s26, (s25)
   549b4:	18 00 00 a8 	load_32 s0, (s24)
   549b8:	00 04 00 01 	and s0, s0, 1
   549bc:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x100>
   549c0:	1b 00 00 a8 	load_32 s0, (s27)
   549c4:	00 00 00 0f 	move s0, 0
   549c8:	01 00 00 88 	store_32 s0, (s1)
   549cc:	20 00 f0 c0 	move s1, s0
   549d0:	8d 00 00 f8 	call 564 <send_sd_command>
   549d4:	20 04 00 10 	cmpeq_i s1, s0, 1
   549d8:	01 01 00 f4 	bnz s1, 32 <init_sdmmc_device+0x144>
   549dc:	20 fc 03 10 	cmpeq_i s1, s0, 255
   549e0:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x134>
   549e4:	62 00 00 f6 	b 392 <init_sdmmc_device+0x2b8>
   549e8:	05 04 00 4f 	movehi s0, 37
   549ec:	00 b4 51 00 	or s0, s0, 5229
   549f0:	99 e5 ff f9 	call -27036 <puts>
   549f4:	6b 00 00 f6 	b 428 <init_sdmmc_device+0x2ec>
   549f8:	00 20 00 0f 	move s0, 8
   549fc:	20 68 05 0f 	move s1, 346
   54a00:	81 00 00 f8 	call 516 <send_sd_command>
   54a04:	20 04 00 10 	cmpeq_i s1, s0, 1
   54a08:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x15c>
   54a0c:	5c 00 00 f6 	b 368 <init_sdmmc_device+0x2c8>
   54a10:	59 03 00 88 	store_32 s26, (s25)
   54a14:	18 00 00 a8 	load_32 s0, (s24)
   54a18:	00 04 00 01 	and s0, s0, 1
   54a1c:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x160>
   54a20:	1b 00 00 a8 	load_32 s0, (s27)
   54a24:	59 03 00 88 	store_32 s26, (s25)
   54a28:	18 00 00 a8 	load_32 s0, (s24)
   54a2c:	00 04 00 01 	and s0, s0, 1
   54a30:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x174>
   54a34:	1b 00 00 a8 	load_32 s0, (s27)
   54a38:	59 03 00 88 	store_32 s26, (s25)
   54a3c:	18 00 00 a8 	load_32 s0, (s24)
   54a40:	00 04 00 01 	and s0, s0, 1
   54a44:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x188>
   54a48:	1b 00 00 a8 	load_32 s0, (s27)
   54a4c:	20 3c 00 01 	and s1, s0, 15
   54a50:	21 04 00 10 	cmpeq_i s1, s1, 1
   54a54:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x1a8>
   54a58:	4d 00 00 f6 	b 308 <init_sdmmc_device+0x2d8>
   54a5c:	59 03 00 88 	store_32 s26, (s25)
   54a60:	18 00 00 a8 	load_32 s0, (s24)
   54a64:	00 04 00 01 	and s0, s0, 1
   54a68:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x1ac>
   54a6c:	1b 00 00 a8 	load_32 s0, (s27)
   54a70:	00 68 01 11 	cmpne_i s0, s0, 90
   54a74:	60 0a 00 f4 	bnz s0, 332 <init_sdmmc_device+0x30c>
   54a78:	20 00 00 0f 	move s1, 0
   54a7c:	3e 80 01 88 	store_32 s1, 96(sp)
   54a80:	00 dc 00 0f 	move s0, 55
   54a84:	60 00 00 f8 	call 384 <send_sd_command>
   54a88:	20 04 00 11 	cmpne_i s1, s0, 1
   54a8c:	81 06 00 f4 	bnz s1, 208 <init_sdmmc_device+0x2a8>
   54a90:	00 a4 00 0f 	move s0, 41
   54a94:	1e 70 01 88 	store_32 s0, 92(sp)
   54a98:	00 fc 40 4f 	movehi s0, 133088
   54a9c:	1e 60 01 88 	store_32 s0, 88(sp)
   54aa0:	00 dc 00 0f 	move s0, 55
   54aa4:	1e 50 01 88 	store_32 s0, 84(sp)
   54aa8:	1e 80 01 a8 	load_32 s0, 96(sp)
   54aac:	1e 90 01 88 	store_32 s0, 100(sp)
   54ab0:	1e 70 01 a8 	load_32 s0, 92(sp)
   54ab4:	3e 60 01 a8 	load_32 s1, 88(sp)
   54ab8:	53 00 00 f8 	call 332 <send_sd_command>
   54abc:	59 03 00 88 	store_32 s26, (s25)
   54ac0:	38 00 00 a8 	load_32 s1, (s24)
   54ac4:	21 04 00 01 	and s1, s1, 1
   54ac8:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x20c>
   54acc:	3b 00 00 a8 	load_32 s1, (s27)
   54ad0:	59 03 00 88 	store_32 s26, (s25)
   54ad4:	7e 80 01 a8 	load_32 s3, 96(sp)
   54ad8:	38 00 00 a8 	load_32 s1, (s24)
   54adc:	21 04 00 01 	and s1, s1, 1
   54ae0:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x224>
   54ae4:	3b 00 00 a8 	load_32 s1, (s27)
   54ae8:	59 03 00 88 	store_32 s26, (s25)
   54aec:	38 00 00 a8 	load_32 s1, (s24)
   54af0:	21 04 00 01 	and s1, s1, 1
   54af4:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x238>
   54af8:	3b 00 00 a8 	load_32 s1, (s27)
   54afc:	59 03 00 88 	store_32 s26, (s25)
   54b00:	38 00 00 a8 	load_32 s1, (s24)
   54b04:	21 04 00 01 	and s1, s1, 1
   54b08:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x24c>
   54b0c:	3b 00 00 a8 	load_32 s1, (s27)
   54b10:	59 03 00 88 	store_32 s26, (s25)
   54b14:	38 00 00 a8 	load_32 s1, (s24)
   54b18:	21 04 00 01 	and s1, s1, 1
   54b1c:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x260>
   54b20:	20 04 00 10 	cmpeq_i s1, s0, 1
   54b24:	5b 00 00 a8 	load_32 s2, (s27)
   54b28:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x27c>
   54b2c:	28 00 00 f6 	b 160 <init_sdmmc_device+0x318>
   54b30:	3e 90 01 a8 	load_32 s1, 100(sp)
   54b34:	01 90 01 11 	cmpne_i s0, s1, 100
   54b38:	40 00 00 f4 	bnz s0, 8 <init_sdmmc_device+0x28c>
   54b3c:	2b 00 00 f6 	b 172 <init_sdmmc_device+0x334>
   54b40:	21 04 00 05 	add_i s1, s1, 1
   54b44:	3e 90 01 88 	store_32 s1, 100(sp)
   54b48:	1e 50 01 a8 	load_32 s0, 84(sp)
   54b4c:	20 80 f1 c0 	move s1, s3
   54b50:	2d 00 00 f8 	call 180 <send_sd_command>
   54b54:	20 04 00 10 	cmpeq_i s1, s0, 1
   54b58:	c1 fa ff f5 	bnz s1, -168 <init_sdmmc_device+0x1fc>
   54b5c:	25 04 00 4f 	movehi s1, 37
   54b60:	1e 10 00 88 	store_32 s0, 4(sp)
   54b64:	01 ec 52 00 	or s0, s1, 5307
   54b68:	0c 00 00 f6 	b 48 <init_sdmmc_device+0x2e4>
   54b6c:	25 04 00 4f 	movehi s1, 37
   54b70:	1e 10 00 88 	store_32 s0, 4(sp)
   54b74:	01 d4 4c 00 	or s0, s1, 4917
   54b78:	08 00 00 f6 	b 32 <init_sdmmc_device+0x2e4>
   54b7c:	25 04 00 4f 	movehi s1, 37
   54b80:	1e 10 00 88 	store_32 s0, 4(sp)
   54b84:	01 ac 4b 00 	or s0, s1, 4843
   54b88:	04 00 00 f6 	b 16 <init_sdmmc_device+0x2e4>
   54b8c:	25 04 00 4f 	movehi s1, 37
   54b90:	1e 10 00 88 	store_32 s0, 4(sp)
   54b94:	01 a4 4a 00 	or s0, s1, 4777
   54b98:	1e 00 00 88 	store_32 s0, (sp)
   54b9c:	50 e4 ff f9 	call -28352 <printf>
   54ba0:	00 fc ff 0f 	move s0, -1
   54ba4:	fe b3 01 a8 	load_32 ra, 108(sp)
   54ba8:	7e c3 01 a8 	load_32 s27, 112(sp)
   54bac:	5e d3 01 a8 	load_32 s26, 116(sp)
   54bb0:	3e e3 01 a8 	load_32 s25, 120(sp)
   54bb4:	1e f3 01 a8 	load_32 s24, 124(sp)
   54bb8:	de 03 02 05 	add_i sp, sp, 128
   54bbc:	1f 00 00 f0 	ret
   54bc0:	05 04 00 4f 	movehi s0, 37
   54bc4:	00 50 4c 00 	or s0, s0, 4884
   54bc8:	8a ff ff f7 	b -472 <init_sdmmc_device+0x13c>
   54bcc:	40 00 00 f2 	bz s0, 8 <init_sdmmc_device+0x320>
   54bd0:	09 00 00 f6 	b 36 <init_sdmmc_device+0x340>
   54bd4:	3e a0 01 a8 	load_32 s1, 104(sp)
   54bd8:	00 10 00 0f 	move s0, 4
   54bdc:	01 00 00 88 	store_32 s0, (s1)
   54be0:	00 00 00 0f 	move s0, 0
   54be4:	f0 ff ff f7 	b -64 <init_sdmmc_device+0x2f0>
   54be8:	05 04 00 4f 	movehi s0, 37
   54bec:	00 40 4b 00 	or s0, s0, 4816
   54bf0:	80 ff ff f7 	b -512 <init_sdmmc_device+0x13c>
   54bf4:	25 04 00 4f 	movehi s1, 37
   54bf8:	1e 10 00 88 	store_32 s0, 4(sp)
   54bfc:	01 80 49 00 	or s0, s1, 4704
   54c00:	e6 ff ff f7 	b -104 <init_sdmmc_device+0x2e4>

0000000000054c04 send_sd_command:
   54c04:	45 04 00 4f 	movehi s2, 37
   54c08:	00 00 01 00 	or s0, s0, 64
   54c0c:	e1 60 00 0a 	shr s7, s1, 24
   54c10:	42 00 58 00 	or s2, s2, 5632
   54c14:	00 fd 03 01 	and s8, s0, 255
   54c18:	61 40 00 0a 	shr s3, s1, 16
   54c1c:	02 00 54 c0 	add_i s0, s2, s8
   54c20:	81 fc 03 01 	and s4, s1, 255
   54c24:	c3 fc 03 01 	and s6, s3, 255
   54c28:	00 00 00 a0 	load_u8 s0, (s0)
   54c2c:	61 20 00 0a 	shr s3, s1, 8
   54c30:	a3 fc 03 01 	and s5, s3, 255
   54c34:	00 04 00 0b 	shl s0, s0, 1
   54c38:	78 fc ff 4f 	movehi s3, 524280
   54c3c:	00 80 33 c0 	xor s0, s0, s7
   54c40:	02 00 50 c0 	add_i s0, s2, s0
   54c44:	23 00 03 00 	or s1, s3, 192
   54c48:	00 00 00 a0 	load_u8 s0, (s0)
   54c4c:	00 04 00 0b 	shl s0, s0, 1
   54c50:	00 00 33 c0 	xor s0, s0, s6
   54c54:	02 00 50 c0 	add_i s0, s2, s0
   54c58:	00 00 00 a0 	load_u8 s0, (s0)
   54c5c:	00 04 00 0b 	shl s0, s0, 1
   54c60:	00 80 32 c0 	xor s0, s0, s5
   54c64:	02 00 50 c0 	add_i s0, s2, s0
   54c68:	00 00 00 a0 	load_u8 s0, (s0)
   54c6c:	00 04 00 0b 	shl s0, s0, 1
   54c70:	00 00 32 c0 	xor s0, s0, s4
   54c74:	02 00 50 c0 	add_i s0, s2, s0
   54c78:	43 20 03 00 	or s2, s3, 200
   54c7c:	00 00 00 a0 	load_u8 s0, (s0)
   54c80:	01 01 00 88 	store_32 s8, (s1)
   54c84:	00 04 00 0b 	shl s0, s0, 1
   54c88:	02 01 00 a8 	load_32 s8, (s2)
   54c8c:	08 05 00 01 	and s8, s8, 1
   54c90:	c8 ff ff f3 	bz s8, -8 <send_sd_command+0x84>
   54c94:	63 10 03 00 	or s3, s3, 196
   54c98:	03 01 00 a8 	load_32 s8, (s3)
   54c9c:	e1 00 00 88 	store_32 s7, (s1)
   54ca0:	e2 00 00 a8 	load_32 s7, (s2)
   54ca4:	e7 04 00 01 	and s7, s7, 1
   54ca8:	c7 ff ff f3 	bz s7, -8 <send_sd_command+0x9c>
   54cac:	e3 00 00 a8 	load_32 s7, (s3)
   54cb0:	c1 00 00 88 	store_32 s6, (s1)
   54cb4:	c2 00 00 a8 	load_32 s6, (s2)
   54cb8:	c6 04 00 01 	and s6, s6, 1
   54cbc:	c6 ff ff f3 	bz s6, -8 <send_sd_command+0xb0>
   54cc0:	c3 00 00 a8 	load_32 s6, (s3)
   54cc4:	a1 00 00 88 	store_32 s5, (s1)
   54cc8:	a2 00 00 a8 	load_32 s5, (s2)
   54ccc:	a5 04 00 01 	and s5, s5, 1
   54cd0:	c5 ff ff f3 	bz s5, -8 <send_sd_command+0xc4>
   54cd4:	a3 00 00 a8 	load_32 s5, (s3)
   54cd8:	81 00 00 88 	store_32 s4, (s1)
   54cdc:	82 00 00 a8 	load_32 s4, (s2)
   54ce0:	84 04 00 01 	and s4, s4, 1
   54ce4:	c4 ff ff f3 	bz s4, -8 <send_sd_command+0xd8>
   54ce8:	00 f8 03 01 	and s0, s0, 254
   54cec:	83 00 00 a8 	load_32 s4, (s3)
   54cf0:	00 04 00 00 	or s0, s0, 1
   54cf4:	01 00 00 88 	store_32 s0, (s1)
   54cf8:	02 00 00 a8 	load_32 s0, (s2)
   54cfc:	00 04 00 01 	and s0, s0, 1
   54d00:	c0 ff ff f3 	bz s0, -8 <send_sd_command+0xf4>
   54d04:	80 00 00 0f 	move s4, 0
   54d08:	03 00 00 a8 	load_32 s0, (s3)
   54d0c:	a0 fc 03 0f 	move s5, 255
   54d10:	a1 00 00 88 	store_32 s5, (s1)
   54d14:	02 00 00 a8 	load_32 s0, (s2)
   54d18:	00 04 00 01 	and s0, s0, 1
   54d1c:	c0 ff ff f3 	bz s0, -8 <send_sd_command+0x110>
   54d20:	03 00 00 a8 	load_32 s0, (s3)
   54d24:	c0 fc 03 11 	cmpne_i s6, s0, 255
   54d28:	86 00 00 f4 	bnz s6, 16 <send_sd_command+0x134>
   54d2c:	c4 90 01 18 	cmplt_u s6, s4, 100
   54d30:	84 04 00 05 	add_i s4, s4, 1
   54d34:	e6 fe ff f5 	bnz s6, -36 <send_sd_command+0x10c>
   54d38:	1f 00 00 f0 	ret

0000000000054d3c read_sdmmc_device:
   54d3c:	de 03 fe 05 	add_i sp, sp, -128
   54d40:	1e f3 01 88 	store_32 s24, 124(sp)
   54d44:	fe e3 01 88 	store_32 ra, 120(sp)
   54d48:	00 83 f0 c0 	move s24, s1
   54d4c:	20 00 f0 c0 	move s1, s0
   54d50:	00 44 00 0f 	move s0, 17
   54d54:	ac ff ff f9 	call -336 <send_sd_command>
   54d58:	40 00 00 f4 	bnz s0, 8 <read_sdmmc_device+0x24>
   54d5c:	07 00 00 f6 	b 28 <read_sdmmc_device+0x3c>
   54d60:	25 04 00 4f 	movehi s1, 37
   54d64:	1e 10 00 88 	store_32 s0, 4(sp)
   54d68:	01 74 48 00 	or s0, s1, 4637
   54d6c:	1e 00 00 88 	store_32 s0, (sp)
   54d70:	db e3 ff f9 	call -28820 <printf>
   54d74:	15 00 00 f6 	b 84 <read_sdmmc_device+0x8c>
   54d78:	b8 fc ff 4f 	movehi s5, 524280
   54d7c:	01 00 00 4f 	movehi s0, 1
   54d80:	60 fc 03 0f 	move s3, 255
   54d84:	45 00 03 00 	or s2, s5, 192
   54d88:	80 40 1c 00 	or s4, s0, 1808
   54d8c:	25 20 03 00 	or s1, s5, 200
   54d90:	05 10 03 00 	or s0, s5, 196
   54d94:	62 00 00 88 	store_32 s3, (s2)
   54d98:	a1 00 00 a8 	load_32 s5, (s1)
   54d9c:	a5 04 00 01 	and s5, s5, 1
   54da0:	c5 ff ff f3 	bz s5, -8 <read_sdmmc_device+0x5c>
   54da4:	a0 00 00 a8 	load_32 s5, (s0)
   54da8:	a5 f8 03 11 	cmpne_i s5, s5, 254
   54dac:	45 00 00 f4 	bnz s5, 8 <read_sdmmc_device+0x78>
   54db0:	0b 00 00 f6 	b 44 <read_sdmmc_device+0xa0>
   54db4:	84 fc ff 05 	add_i s4, s4, -1
   54db8:	e4 fe ff f5 	bnz s4, -36 <read_sdmmc_device+0x58>
   54dbc:	05 04 00 4f 	movehi s0, 37
   54dc0:	00 0c 4f 00 	or s0, s0, 5059
   54dc4:	a4 e4 ff f9 	call -28016 <puts>
   54dc8:	00 fc ff 0f 	move s0, -1
   54dcc:	fe e3 01 a8 	load_32 ra, 120(sp)
   54dd0:	1e f3 01 a8 	load_32 s24, 124(sp)
   54dd4:	de 03 02 05 	add_i sp, sp, 128
   54dd8:	1f 00 00 f0 	ret
   54ddc:	80 00 00 0f 	move s4, 0
   54de0:	04 00 00 f6 	b 16 <read_sdmmc_device+0xb4>
   54de4:	d8 00 52 c0 	add_i s6, s24, s4
   54de8:	84 04 00 05 	add_i s4, s4, 1
   54dec:	a6 00 00 82 	store_8 s5, (s6)
   54df0:	62 00 00 88 	store_32 s3, (s2)
   54df4:	a1 00 00 a8 	load_32 s5, (s1)
   54df8:	a5 04 00 01 	and s5, s5, 1
   54dfc:	c5 ff ff f3 	bz s5, -8 <read_sdmmc_device+0xb8>
   54e00:	a0 00 00 a8 	load_32 s5, (s0)
   54e04:	c4 00 08 18 	cmplt_u s6, s4, 512
   54e08:	e6 fe ff f5 	bnz s6, -36 <read_sdmmc_device+0xa8>
   54e0c:	62 00 00 88 	store_32 s3, (s2)
   54e10:	41 00 00 a8 	load_32 s2, (s1)
   54e14:	42 04 00 01 	and s2, s2, 1
   54e18:	c2 ff ff f3 	bz s2, -8 <read_sdmmc_device+0xd4>
   54e1c:	00 00 00 a8 	load_32 s0, (s0)
   54e20:	00 00 08 0f 	move s0, 512
   54e24:	fe e3 01 a8 	load_32 ra, 120(sp)
   54e28:	1e f3 01 a8 	load_32 s24, 124(sp)
   54e2c:	de 03 02 05 	add_i sp, sp, 128
   54e30:	1f 00 00 f0 	ret

0000000000054e34 write_sdmmc_device:
   54e34:	de 03 fe 05 	add_i sp, sp, -128
   54e38:	1e f3 01 88 	store_32 s24, 124(sp)
   54e3c:	fe e3 01 88 	store_32 ra, 120(sp)
   54e40:	00 83 f0 c0 	move s24, s1
   54e44:	20 00 f0 c0 	move s1, s0
   54e48:	00 60 00 0f 	move s0, 24
   54e4c:	6e ff ff f9 	call -584 <send_sd_command>
   54e50:	a0 00 00 f2 	bz s0, 20 <write_sdmmc_device+0x30>
   54e54:	25 04 00 4f 	movehi s1, 37
   54e58:	1e 10 00 88 	store_32 s0, 4(sp)
   54e5c:	01 e4 4d 00 	or s0, s1, 4985
   54e60:	32 00 00 f6 	b 200 <write_sdmmc_device+0xf4>
   54e64:	58 fc ff 4f 	movehi s2, 524280
   54e68:	00 f8 03 0f 	move s0, 254
   54e6c:	22 00 03 00 	or s1, s2, 192
   54e70:	01 00 00 88 	store_32 s0, (s1)
   54e74:	02 20 03 00 	or s0, s2, 200
   54e78:	60 00 00 a8 	load_32 s3, (s0)
   54e7c:	63 04 00 01 	and s3, s3, 1
   54e80:	c3 ff ff f3 	bz s3, -8 <write_sdmmc_device+0x44>
   54e84:	42 10 03 00 	or s2, s2, 196
   54e88:	62 00 00 a8 	load_32 s3, (s2)
   54e8c:	60 00 00 0f 	move s3, 0
   54e90:	98 80 51 c0 	add_i s4, s24, s3
   54e94:	84 00 00 a0 	load_u8 s4, (s4)
   54e98:	81 00 00 88 	store_32 s4, (s1)
   54e9c:	80 00 00 a8 	load_32 s4, (s0)
   54ea0:	84 04 00 01 	and s4, s4, 1
   54ea4:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0x68>
   54ea8:	63 04 00 05 	add_i s3, s3, 1
   54eac:	a2 00 00 a8 	load_32 s5, (s2)
   54eb0:	83 00 08 18 	cmplt_u s4, s3, 512
   54eb4:	e4 fe ff f5 	bnz s4, -36 <write_sdmmc_device+0x5c>
   54eb8:	60 fc 03 0f 	move s3, 255
   54ebc:	61 00 00 88 	store_32 s3, (s1)
   54ec0:	80 00 00 a8 	load_32 s4, (s0)
   54ec4:	84 04 00 01 	and s4, s4, 1
   54ec8:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0x8c>
   54ecc:	82 00 00 a8 	load_32 s4, (s2)
   54ed0:	61 00 00 88 	store_32 s3, (s1)
   54ed4:	80 00 00 a8 	load_32 s4, (s0)
   54ed8:	84 04 00 01 	and s4, s4, 1
   54edc:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0xa0>
   54ee0:	82 00 00 a8 	load_32 s4, (s2)
   54ee4:	61 00 00 88 	store_32 s3, (s1)
   54ee8:	20 00 00 a8 	load_32 s1, (s0)
   54eec:	21 04 00 01 	and s1, s1, 1
   54ef0:	c1 ff ff f3 	bz s1, -8 <write_sdmmc_device+0xb4>
   54ef4:	02 00 00 a8 	load_32 s0, (s2)
   54ef8:	20 7c 00 01 	and s1, s0, 31
   54efc:	21 14 00 10 	cmpeq_i s1, s1, 5
   54f00:	41 00 00 f4 	bnz s1, 8 <write_sdmmc_device+0xd4>
   54f04:	06 00 00 f6 	b 24 <write_sdmmc_device+0xe8>
   54f08:	00 00 08 0f 	move s0, 512
   54f0c:	fe e3 01 a8 	load_32 ra, 120(sp)
   54f10:	1e f3 01 a8 	load_32 s24, 124(sp)
   54f14:	de 03 02 05 	add_i sp, sp, 128
   54f18:	1f 00 00 f0 	ret
   54f1c:	25 04 00 4f 	movehi s1, 37
   54f20:	1e 10 00 88 	store_32 s0, 4(sp)
   54f24:	01 48 50 00 	or s0, s1, 5138
   54f28:	1e 00 00 88 	store_32 s0, (sp)
   54f2c:	6c e3 ff f9 	call -29264 <printf>
   54f30:	00 fc ff 0f 	move s0, -1
   54f34:	fe e3 01 a8 	load_32 ra, 120(sp)
   54f38:	1e f3 01 a8 	load_32 s24, 124(sp)
   54f3c:	de 03 02 05 	add_i sp, sp, 128
   54f40:	1f 00 00 f0 	ret

0000000000054f44 init_vga:
   54f44:	de 03 ff 05 	add_i sp, sp, -64
   54f48:	fe f3 00 88 	store_32 ra, 60(sp)
   54f4c:	20 04 00 10 	cmpeq_i s1, s0, 1
   54f50:	e1 00 00 f4 	bnz s1, 28 <init_vga+0x28>
   54f54:	e0 01 00 f4 	bnz s0, 60 <init_vga+0x4c>
   54f58:	00 28 00 0f 	move s0, 10
   54f5c:	20 84 00 0f 	move s1, 33
   54f60:	40 00 00 0f 	move s2, 0
   54f64:	60 80 07 0f 	move s3, 480
   54f68:	05 00 00 f6 	b 20 <init_vga+0x38>
   54f6c:	00 30 00 0f 	move s0, 12
   54f70:	20 8c 00 0f 	move s1, 35
   54f74:	40 04 00 0f 	move s2, 1
   54f78:	60 40 06 0f 	move s3, 400
   54f7c:	09 00 00 f8 	call 36 <compile_microcode>
   54f80:	00 20 00 4f 	movehi s0, 256
   54f84:	fe f3 00 a8 	load_32 ra, 60(sp)
   54f88:	de 03 01 05 	add_i sp, sp, 64
   54f8c:	1f 00 00 f0 	ret
   54f90:	00 00 00 0f 	move s0, 0
   54f94:	fe f3 00 a8 	load_32 ra, 60(sp)
   54f98:	de 03 01 05 	add_i sp, sp, 64
   54f9c:	1f 00 00 f0 	ret

0000000000054fa0 compile_microcode:
   54fa0:	42 00 00 10 	cmpeq_i s2, s2, 0
   54fa4:	62 00 00 f4 	bnz s2, 12 <compile_microcode+0x10>
   54fa8:	40 10 00 0f 	move s2, 4
   54fac:	02 00 00 f6 	b 8 <compile_microcode+0x14>
   54fb0:	40 30 00 0f 	move s2, 12
   54fb4:	8c 04 00 4f 	movehi s4, 44
   54fb8:	cc 04 00 4f 	movehi s6, 44
   54fbc:	e0 00 00 0f 	move s7, 0
   54fc0:	a4 b0 15 00 	or s5, s4, 1388
   54fc4:	98 fc ff 4f 	movehi s4, 524280
   54fc8:	c6 c0 15 00 	or s6, s6, 1392
   54fcc:	45 00 00 88 	store_32 s2, (s5)
   54fd0:	00 10 00 0b 	shl s0, s0, 4
   54fd4:	44 00 06 00 	or s2, s4, 384
   54fd8:	e6 00 00 88 	store_32 s7, (s6)
   54fdc:	50 01 00 4f 	movehi s10, 16
   54fe0:	21 10 00 0b 	shl s1, s1, 4
   54fe4:	e2 00 00 88 	store_32 s7, (s2)
   54fe8:	e5 00 00 a8 	load_32 s7, (s5)
   54fec:	e0 80 03 c0 	or s7, s0, s7
   54ff0:	04 10 06 00 	or s0, s4, 388
   54ff4:	e7 00 05 c0 	or s7, s7, s10
   54ff8:	e0 00 00 88 	store_32 s7, (s0)
   54ffc:	e6 00 00 a8 	load_32 s7, (s6)
   55000:	07 05 00 05 	add_i s8, s7, 1
   55004:	06 01 00 88 	store_32 s8, (s6)
   55008:	e5 00 00 a8 	load_32 s7, (s5)
   5500c:	08 11 00 0b 	shl s8, s8, 4
   55010:	e7 c0 03 00 	or s7, s7, 240
   55014:	e0 00 00 88 	store_32 s7, (s0)
   55018:	e6 00 00 a8 	load_32 s7, (s6)
   5501c:	e7 04 00 05 	add_i s7, s7, 1
   55020:	e6 00 00 88 	store_32 s7, (s6)
   55024:	25 01 00 a8 	load_32 s9, (s5)
   55028:	e7 10 00 0b 	shl s7, s7, 4
   5502c:	27 81 04 c0 	or s9, s7, s9
   55030:	e0 04 00 4f 	movehi s7, 32
   55034:	29 81 03 c0 	or s9, s9, s7
   55038:	20 01 00 88 	store_32 s9, (s0)
   5503c:	26 01 00 a8 	load_32 s9, (s6)
   55040:	29 05 00 05 	add_i s9, s9, 1
   55044:	26 01 00 88 	store_32 s9, (s6)
   55048:	25 01 00 a8 	load_32 s9, (s5)
   5504c:	29 11 00 03 	xor s9, s9, 4
   55050:	25 01 00 88 	store_32 s9, (s5)
   55054:	29 c1 17 00 	or s9, s9, 1520
   55058:	20 01 00 88 	store_32 s9, (s0)
   5505c:	26 01 00 a8 	load_32 s9, (s6)
   55060:	29 05 00 05 	add_i s9, s9, 1
   55064:	26 01 00 88 	store_32 s9, (s6)
   55068:	65 01 00 a8 	load_32 s11, (s5)
   5506c:	29 11 00 0b 	shl s9, s9, 4
   55070:	29 81 05 c0 	or s9, s9, s11
   55074:	29 81 03 c0 	or s9, s9, s7
   55078:	20 01 00 88 	store_32 s9, (s0)
   5507c:	26 01 00 a8 	load_32 s9, (s6)
   55080:	29 05 00 05 	add_i s9, s9, 1
   55084:	26 01 00 88 	store_32 s9, (s6)
   55088:	25 01 00 a8 	load_32 s9, (s5)
   5508c:	29 11 00 03 	xor s9, s9, 4
   55090:	25 01 00 88 	store_32 s9, (s5)
   55094:	29 c1 0b 00 	or s9, s9, 752
   55098:	20 01 00 88 	store_32 s9, (s0)
   5509c:	26 01 00 a8 	load_32 s9, (s6)
   550a0:	29 05 00 05 	add_i s9, s9, 1
   550a4:	26 01 00 88 	store_32 s9, (s6)
   550a8:	65 01 00 a8 	load_32 s11, (s5)
   550ac:	29 11 00 0b 	shl s9, s9, 4
   550b0:	29 81 05 c0 	or s9, s9, s11
   550b4:	29 81 03 c0 	or s9, s9, s7
   550b8:	20 01 00 88 	store_32 s9, (s0)
   550bc:	26 01 00 a8 	load_32 s9, (s6)
   550c0:	29 05 00 05 	add_i s9, s9, 1
   550c4:	26 01 00 88 	store_32 s9, (s6)
   550c8:	21 01 00 4f 	movehi s9, 1
   550cc:	65 01 00 a8 	load_32 s11, (s5)
   550d0:	29 c1 1f 00 	or s9, s9, 2032
   550d4:	6b 81 04 c0 	or s11, s11, s9
   550d8:	60 01 00 88 	store_32 s11, (s0)
   550dc:	66 01 00 a8 	load_32 s11, (s6)
   550e0:	6b 05 00 05 	add_i s11, s11, 1
   550e4:	66 01 00 88 	store_32 s11, (s6)
   550e8:	85 01 00 a8 	load_32 s12, (s5)
   550ec:	6b 11 00 0b 	shl s11, s11, 4
   550f0:	6b 01 06 c0 	or s11, s11, s12
   550f4:	8a 81 00 00 	or s12, s10, 32
   550f8:	6b 81 03 c0 	or s11, s11, s7
   550fc:	60 01 00 88 	store_32 s11, (s0)
   55100:	66 01 00 a8 	load_32 s11, (s6)
   55104:	6b 05 00 05 	add_i s11, s11, 1
   55108:	66 01 00 88 	store_32 s11, (s6)
   5510c:	65 01 00 a8 	load_32 s11, (s5)
   55110:	68 81 05 c0 	or s11, s8, s11
   55114:	10 05 00 4f 	movehi s8, 48
   55118:	6b 01 04 c0 	or s11, s11, s8
   5511c:	60 01 00 88 	store_32 s11, (s0)
   55120:	66 01 00 a8 	load_32 s11, (s6)
   55124:	6b 05 00 05 	add_i s11, s11, 1
   55128:	66 01 00 88 	store_32 s11, (s6)
   5512c:	65 01 00 a8 	load_32 s11, (s5)
   55130:	6b 21 00 03 	xor s11, s11, 8
   55134:	65 01 00 88 	store_32 s11, (s5)
   55138:	6b 01 06 c0 	or s11, s11, s12
   5513c:	60 01 00 88 	store_32 s11, (s0)
   55140:	66 01 00 a8 	load_32 s11, (s6)
   55144:	6b 05 00 05 	add_i s11, s11, 1
   55148:	66 01 00 88 	store_32 s11, (s6)
   5514c:	85 01 00 a8 	load_32 s12, (s5)
   55150:	6b 11 00 0b 	shl s11, s11, 4
   55154:	8c c1 03 00 	or s12, s12, 240
   55158:	80 01 00 88 	store_32 s12, (s0)
   5515c:	86 01 00 a8 	load_32 s12, (s6)
   55160:	8c 05 00 05 	add_i s12, s12, 1
   55164:	86 01 00 88 	store_32 s12, (s6)
   55168:	a5 01 00 a8 	load_32 s13, (s5)
   5516c:	8c 11 00 0b 	shl s12, s12, 4
   55170:	8c 81 06 c0 	or s12, s12, s13
   55174:	8c 81 03 c0 	or s12, s12, s7
   55178:	80 01 00 88 	store_32 s12, (s0)
   5517c:	86 01 00 a8 	load_32 s12, (s6)
   55180:	8c 05 00 05 	add_i s12, s12, 1
   55184:	86 01 00 88 	store_32 s12, (s6)
   55188:	85 01 00 a8 	load_32 s12, (s5)
   5518c:	8c 11 00 03 	xor s12, s12, 4
   55190:	85 01 00 88 	store_32 s12, (s5)
   55194:	8c c1 17 00 	or s12, s12, 1520
   55198:	80 01 00 88 	store_32 s12, (s0)
   5519c:	86 01 00 a8 	load_32 s12, (s6)
   551a0:	8c 05 00 05 	add_i s12, s12, 1
   551a4:	86 01 00 88 	store_32 s12, (s6)
   551a8:	a5 01 00 a8 	load_32 s13, (s5)
   551ac:	8c 11 00 0b 	shl s12, s12, 4
   551b0:	8c 81 06 c0 	or s12, s12, s13
   551b4:	8c 81 03 c0 	or s12, s12, s7
   551b8:	80 01 00 88 	store_32 s12, (s0)
   551bc:	86 01 00 a8 	load_32 s12, (s6)
   551c0:	8c 05 00 05 	add_i s12, s12, 1
   551c4:	86 01 00 88 	store_32 s12, (s6)
   551c8:	85 01 00 a8 	load_32 s12, (s5)
   551cc:	8c 11 00 03 	xor s12, s12, 4
   551d0:	85 01 00 88 	store_32 s12, (s5)
   551d4:	8c c1 0b 00 	or s12, s12, 752
   551d8:	80 01 00 88 	store_32 s12, (s0)
   551dc:	86 01 00 a8 	load_32 s12, (s6)
   551e0:	8c 05 00 05 	add_i s12, s12, 1
   551e4:	86 01 00 88 	store_32 s12, (s6)
   551e8:	a5 01 00 a8 	load_32 s13, (s5)
   551ec:	8c 11 00 0b 	shl s12, s12, 4
   551f0:	8c 81 06 c0 	or s12, s12, s13
   551f4:	8c 81 03 c0 	or s12, s12, s7
   551f8:	80 01 00 88 	store_32 s12, (s0)
   551fc:	86 01 00 a8 	load_32 s12, (s6)
   55200:	8c 05 00 05 	add_i s12, s12, 1
   55204:	86 01 00 88 	store_32 s12, (s6)
   55208:	85 01 00 a8 	load_32 s12, (s5)
   5520c:	8c 81 04 c0 	or s12, s12, s9
   55210:	80 01 00 88 	store_32 s12, (s0)
   55214:	86 01 00 a8 	load_32 s12, (s6)
   55218:	8c 05 00 05 	add_i s12, s12, 1
   5521c:	86 01 00 88 	store_32 s12, (s6)
   55220:	a5 01 00 a8 	load_32 s13, (s5)
   55224:	8c 11 00 0b 	shl s12, s12, 4
   55228:	8c 81 06 c0 	or s12, s12, s13
   5522c:	8c 81 03 c0 	or s12, s12, s7
   55230:	80 01 00 88 	store_32 s12, (s0)
   55234:	86 01 00 a8 	load_32 s12, (s6)
   55238:	8c 05 00 05 	add_i s12, s12, 1
   5523c:	86 01 00 88 	store_32 s12, (s6)
   55240:	85 01 00 a8 	load_32 s12, (s5)
   55244:	6b 01 06 c0 	or s11, s11, s12
   55248:	6b 01 04 c0 	or s11, s11, s8
   5524c:	60 01 00 88 	store_32 s11, (s0)
   55250:	66 01 00 a8 	load_32 s11, (s6)
   55254:	6b 05 00 05 	add_i s11, s11, 1
   55258:	66 01 00 88 	store_32 s11, (s6)
   5525c:	65 01 00 a8 	load_32 s11, (s5)
   55260:	6b 21 00 03 	xor s11, s11, 8
   55264:	65 01 00 88 	store_32 s11, (s5)
   55268:	21 80 05 c0 	or s1, s1, s11
   5526c:	21 00 05 c0 	or s1, s1, s10
   55270:	20 00 00 88 	store_32 s1, (s0)
   55274:	26 00 00 a8 	load_32 s1, (s6)
   55278:	21 04 00 05 	add_i s1, s1, 1
   5527c:	26 00 00 88 	store_32 s1, (s6)
   55280:	65 01 00 a8 	load_32 s11, (s5)
   55284:	21 10 00 0b 	shl s1, s1, 4
   55288:	6b c1 03 00 	or s11, s11, 240
   5528c:	60 01 00 88 	store_32 s11, (s0)
   55290:	66 01 00 a8 	load_32 s11, (s6)
   55294:	6b 05 00 05 	add_i s11, s11, 1
   55298:	66 01 00 88 	store_32 s11, (s6)
   5529c:	85 01 00 a8 	load_32 s12, (s5)
   552a0:	6b 11 00 0b 	shl s11, s11, 4
   552a4:	6b 01 06 c0 	or s11, s11, s12
   552a8:	6b 81 03 c0 	or s11, s11, s7
   552ac:	60 01 00 88 	store_32 s11, (s0)
   552b0:	66 01 00 a8 	load_32 s11, (s6)
   552b4:	6b 05 00 05 	add_i s11, s11, 1
   552b8:	66 01 00 88 	store_32 s11, (s6)
   552bc:	65 01 00 a8 	load_32 s11, (s5)
   552c0:	6b 11 00 03 	xor s11, s11, 4
   552c4:	65 01 00 88 	store_32 s11, (s5)
   552c8:	6b c1 17 00 	or s11, s11, 1520
   552cc:	60 01 00 88 	store_32 s11, (s0)
   552d0:	66 01 00 a8 	load_32 s11, (s6)
   552d4:	6b 05 00 05 	add_i s11, s11, 1
   552d8:	66 01 00 88 	store_32 s11, (s6)
   552dc:	85 01 00 a8 	load_32 s12, (s5)
   552e0:	6b 11 00 0b 	shl s11, s11, 4
   552e4:	6b 01 06 c0 	or s11, s11, s12
   552e8:	6b 81 03 c0 	or s11, s11, s7
   552ec:	60 01 00 88 	store_32 s11, (s0)
   552f0:	66 01 00 a8 	load_32 s11, (s6)
   552f4:	6b 05 00 05 	add_i s11, s11, 1
   552f8:	66 01 00 88 	store_32 s11, (s6)
   552fc:	65 01 00 a8 	load_32 s11, (s5)
   55300:	6b 11 00 03 	xor s11, s11, 4
   55304:	65 01 00 88 	store_32 s11, (s5)
   55308:	6b c1 0b 00 	or s11, s11, 752
   5530c:	60 01 00 88 	store_32 s11, (s0)
   55310:	66 01 00 a8 	load_32 s11, (s6)
   55314:	6b 05 00 05 	add_i s11, s11, 1
   55318:	66 01 00 88 	store_32 s11, (s6)
   5531c:	85 01 00 a8 	load_32 s12, (s5)
   55320:	6b 11 00 0b 	shl s11, s11, 4
   55324:	6b 01 06 c0 	or s11, s11, s12
   55328:	6b 81 03 c0 	or s11, s11, s7
   5532c:	60 01 00 88 	store_32 s11, (s0)
   55330:	66 01 00 a8 	load_32 s11, (s6)
   55334:	6b 05 00 05 	add_i s11, s11, 1
   55338:	66 01 00 88 	store_32 s11, (s6)
   5533c:	65 01 00 a8 	load_32 s11, (s5)
   55340:	6b 81 04 c0 	or s11, s11, s9
   55344:	60 01 00 88 	store_32 s11, (s0)
   55348:	66 01 00 a8 	load_32 s11, (s6)
   5534c:	6b 05 00 05 	add_i s11, s11, 1
   55350:	66 01 00 88 	store_32 s11, (s6)
   55354:	85 01 00 a8 	load_32 s12, (s5)
   55358:	6b 11 00 0b 	shl s11, s11, 4
   5535c:	6b 01 06 c0 	or s11, s11, s12
   55360:	6b 81 03 c0 	or s11, s11, s7
   55364:	60 01 00 88 	store_32 s11, (s0)
   55368:	66 01 00 a8 	load_32 s11, (s6)
   5536c:	6b 05 00 05 	add_i s11, s11, 1
   55370:	66 01 00 88 	store_32 s11, (s6)
   55374:	65 01 00 a8 	load_32 s11, (s5)
   55378:	21 80 05 c0 	or s1, s1, s11
   5537c:	63 11 00 0b 	shl s11, s3, 4
   55380:	21 00 04 c0 	or s1, s1, s8
   55384:	20 00 00 88 	store_32 s1, (s0)
   55388:	26 00 00 a8 	load_32 s1, (s6)
   5538c:	21 04 00 05 	add_i s1, s1, 1
   55390:	26 00 00 88 	store_32 s1, (s6)
   55394:	25 00 00 a8 	load_32 s1, (s5)
   55398:	2b 80 00 c0 	or s1, s11, s1
   5539c:	21 00 05 c0 	or s1, s1, s10
   553a0:	20 00 00 88 	store_32 s1, (s0)
   553a4:	26 00 00 a8 	load_32 s1, (s6)
   553a8:	21 04 00 05 	add_i s1, s1, 1
   553ac:	26 00 00 88 	store_32 s1, (s6)
   553b0:	45 01 00 a8 	load_32 s10, (s5)
   553b4:	21 10 00 0b 	shl s1, s1, 4
   553b8:	4a c1 03 00 	or s10, s10, 240
   553bc:	40 01 00 88 	store_32 s10, (s0)
   553c0:	46 01 00 a8 	load_32 s10, (s6)
   553c4:	4a 05 00 05 	add_i s10, s10, 1
   553c8:	46 01 00 88 	store_32 s10, (s6)
   553cc:	65 01 00 a8 	load_32 s11, (s5)
   553d0:	4a 11 00 0b 	shl s10, s10, 4
   553d4:	4a 81 05 c0 	or s10, s10, s11
   553d8:	4a 81 03 c0 	or s10, s10, s7
   553dc:	40 01 00 88 	store_32 s10, (s0)
   553e0:	46 01 00 a8 	load_32 s10, (s6)
   553e4:	4a 05 00 05 	add_i s10, s10, 1
   553e8:	46 01 00 88 	store_32 s10, (s6)
   553ec:	45 01 00 a8 	load_32 s10, (s5)
   553f0:	4a 11 00 03 	xor s10, s10, 4
   553f4:	45 01 00 88 	store_32 s10, (s5)
   553f8:	4a c1 17 00 	or s10, s10, 1520
   553fc:	40 01 00 88 	store_32 s10, (s0)
   55400:	46 01 00 a8 	load_32 s10, (s6)
   55404:	4a 05 00 05 	add_i s10, s10, 1
   55408:	46 01 00 88 	store_32 s10, (s6)
   5540c:	65 01 00 a8 	load_32 s11, (s5)
   55410:	4a 11 00 0b 	shl s10, s10, 4
   55414:	4a 81 05 c0 	or s10, s10, s11
   55418:	4a 81 03 c0 	or s10, s10, s7
   5541c:	40 01 00 88 	store_32 s10, (s0)
   55420:	46 01 00 a8 	load_32 s10, (s6)
   55424:	4a 05 00 05 	add_i s10, s10, 1
   55428:	46 01 00 88 	store_32 s10, (s6)
   5542c:	45 01 00 a8 	load_32 s10, (s5)
   55430:	4a 11 00 03 	xor s10, s10, 4
   55434:	45 01 00 88 	store_32 s10, (s5)
   55438:	4a c1 0b 00 	or s10, s10, 752
   5543c:	40 01 00 88 	store_32 s10, (s0)
   55440:	46 01 00 a8 	load_32 s10, (s6)
   55444:	4a 05 00 05 	add_i s10, s10, 1
   55448:	46 01 00 88 	store_32 s10, (s6)
   5544c:	65 01 00 a8 	load_32 s11, (s5)
   55450:	4a 11 00 0b 	shl s10, s10, 4
   55454:	4a 81 05 c0 	or s10, s10, s11
   55458:	4a 81 03 c0 	or s10, s10, s7
   5545c:	40 01 00 88 	store_32 s10, (s0)
   55460:	46 01 00 a8 	load_32 s10, (s6)
   55464:	4a 05 00 05 	add_i s10, s10, 1
   55468:	46 01 00 88 	store_32 s10, (s6)
   5546c:	45 01 00 a8 	load_32 s10, (s5)
   55470:	4a 05 00 03 	xor s10, s10, 1
   55474:	45 01 00 88 	store_32 s10, (s5)
   55478:	2a 81 04 c0 	or s9, s10, s9
   5547c:	20 01 00 88 	store_32 s9, (s0)
   55480:	26 01 00 a8 	load_32 s9, (s6)
   55484:	29 05 00 05 	add_i s9, s9, 1
   55488:	26 01 00 88 	store_32 s9, (s6)
   5548c:	45 01 00 a8 	load_32 s10, (s5)
   55490:	29 11 00 0b 	shl s9, s9, 4
   55494:	29 01 05 c0 	or s9, s9, s10
   55498:	e9 80 03 c0 	or s7, s9, s7
   5549c:	e0 00 00 88 	store_32 s7, (s0)
   554a0:	e6 00 00 a8 	load_32 s7, (s6)
   554a4:	e7 04 00 05 	add_i s7, s7, 1
   554a8:	e6 00 00 88 	store_32 s7, (s6)
   554ac:	e5 00 00 a8 	load_32 s7, (s5)
   554b0:	e7 04 00 03 	xor s7, s7, 1
   554b4:	e5 00 00 88 	store_32 s7, (s5)
   554b8:	21 80 03 c0 	or s1, s1, s7
   554bc:	21 00 04 c0 	or s1, s1, s8
   554c0:	20 00 00 88 	store_32 s1, (s0)
   554c4:	26 00 00 a8 	load_32 s1, (s6)
   554c8:	21 04 00 05 	add_i s1, s1, 1
   554cc:	26 00 00 88 	store_32 s1, (s6)
   554d0:	25 00 00 a8 	load_32 s1, (s5)
   554d4:	21 08 00 00 	or s1, s1, 2
   554d8:	20 00 00 88 	store_32 s1, (s0)
   554dc:	04 20 06 00 	or s0, s4, 392
   554e0:	84 30 06 00 	or s4, s4, 396
   554e4:	20 20 00 4f 	movehi s1, 256
   554e8:	20 00 00 88 	store_32 s1, (s0)
   554ec:	03 00 0a 07 	mull_i s0, s3, 640
   554f0:	04 00 00 88 	store_32 s0, (s4)
   554f4:	00 04 00 0f 	move s0, 1
   554f8:	02 00 00 88 	store_32 s0, (s2)
   554fc:	1f 00 00 f0 	ret

0000000000055500 __udivdi3:
; {
   55500:	de 03 ff 05 	add_i sp, sp, -64
   55504:	fe f3 00 88 	store_32 ra, 60(sp)
   55508:	80 80 f1 c0 	move s4, s3
   5550c:	a0 00 f1 c0 	move s5, s2
   55510:	c0 80 f0 c0 	move s6, s1
   55514:	e0 00 f0 c0 	move s7, s0
   55518:	1e c1 00 05 	add_i s8, sp, 48
   5551c:	08 11 00 00 	or s8, s8, 4
   55520:	28 00 00 88 	store_32 s1, (s8)
   55524:	1e c0 00 88 	store_32 s0, 48(sp)
   55528:	1e a0 00 05 	add_i s0, sp, 40
   5552c:	00 10 00 00 	or s0, s0, 4
   55530:	60 00 00 88 	store_32 s3, (s0)
   55534:	5e a0 00 88 	store_32 s2, 40(sp)
; return __udivmoddi4(a, b, 0);
   55538:	28 00 00 a8 	load_32 s1, (s8)
   5553c:	5e c0 00 a8 	load_32 s2, 48(sp)
   55540:	60 00 00 a8 	load_32 s3, (s0)
   55544:	1e a0 00 a8 	load_32 s0, 40(sp)
   55548:	1c 01 00 a8 	load_32 s8, (gp)
   5554c:	20 01 00 0f 	move s9, 0
   55550:	1e 90 00 88 	store_32 s0, 36(sp)
   55554:	00 00 f1 c0 	move s0, s2
   55558:	5e 90 00 a8 	load_32 s2, 36(sp)
   5555c:	9e 80 00 88 	store_32 s4, 32(sp)
   55560:	80 80 f4 c0 	move s4, s9
   55564:	be 70 00 88 	store_32 s5, 28(sp)
   55568:	de 60 00 88 	store_32 s6, 24(sp)
   5556c:	fe 50 00 88 	store_32 s7, 20(sp)
   55570:	08 01 00 fc 	call s8
   55574:	fe f3 00 a8 	load_32 ra, 60(sp)
   55578:	de 03 01 05 	add_i sp, sp, 64
   5557c:	1f 00 00 f0 	ret

0000000000055580 __udivmoddi4:
; {
   55580:	de 03 fd 05 	add_i sp, sp, -192
   55584:	fe f3 02 88 	store_32 ra, 188(sp)
   55588:	a0 80 f1 c0 	move s5, s3
   5558c:	c0 00 f1 c0 	move s6, s2
   55590:	e0 80 f0 c0 	move s7, s1
   55594:	00 01 f0 c0 	move s8, s0
   55598:	20 01 f2 c0 	move s9, s4
   5559c:	5e a1 02 05 	add_i s10, sp, 168
   555a0:	4a 11 00 00 	or s10, s10, 4
   555a4:	2a 00 00 88 	store_32 s1, (s10)
   555a8:	1e a0 02 88 	store_32 s0, 168(sp)
   555ac:	1e 80 02 05 	add_i s0, sp, 160
   555b0:	00 10 00 00 	or s0, s0, 4
   555b4:	60 00 00 88 	store_32 s3, (s0)
   555b8:	5e 80 02 88 	store_32 s2, 160(sp)
   555bc:	9e 70 02 88 	store_32 s4, 156(sp)
   555c0:	20 80 00 0f 	move s1, 32
; const unsigned n_uword_bits = sizeof(su_int) * CHAR_BIT;
   555c4:	3e 60 02 88 	store_32 s1, 152(sp)
   555c8:	20 00 01 0f 	move s1, 64
; const unsigned n_udword_bits = sizeof(du_int) * CHAR_BIT;
   555cc:	3e 50 02 88 	store_32 s1, 148(sp)
; n.all = a;
   555d0:	2a 00 00 a8 	load_32 s1, (s10)
   555d4:	5e a0 02 a8 	load_32 s2, 168(sp)
   555d8:	7e 20 02 05 	add_i s3, sp, 136
   555dc:	63 10 00 00 	or s3, s3, 4
   555e0:	23 00 00 88 	store_32 s1, (s3)
   555e4:	5e 20 02 88 	store_32 s2, 136(sp)
; d.all = b;
   555e8:	00 00 00 a8 	load_32 s0, (s0)
   555ec:	3e 80 02 a8 	load_32 s1, 160(sp)
   555f0:	5e 00 02 05 	add_i s2, sp, 128
   555f4:	42 10 00 00 	or s2, s2, 4
   555f8:	02 00 00 88 	store_32 s0, (s2)
   555fc:	3e 00 02 88 	store_32 s1, 128(sp)
; if (n.s.high == 0)
   55600:	03 00 00 a8 	load_32 s0, (s3)
   55604:	be 70 01 88 	store_32 s5, 92(sp)
   55608:	de 60 01 88 	store_32 s6, 88(sp)
   5560c:	fe 50 01 88 	store_32 s7, 84(sp)
   55610:	1e 41 01 88 	store_32 s8, 80(sp)
   55614:	3e 31 01 88 	store_32 s9, 76(sp)
   55618:	80 05 00 f4 	bnz s0, 176 <__udivmoddi4+0x148>
   5561c:	01 00 00 f6 	b 4 <__udivmoddi4+0xa0>
   55620:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
   55624:	00 10 00 00 	or s0, s0, 4
   55628:	00 00 00 a8 	load_32 s0, (s0)
   5562c:	00 03 00 f4 	bnz s0, 96 <__udivmoddi4+0x10c>
   55630:	01 00 00 f6 	b 4 <__udivmoddi4+0xb4>
; if (rem)
   55634:	1e 70 02 a8 	load_32 s0, 156(sp)
   55638:	60 01 00 f2 	bz s0, 44 <__udivmoddi4+0xe4>
   5563c:	01 00 00 f6 	b 4 <__udivmoddi4+0xc0>
; *rem = n.s.low % d.s.low;
   55640:	1e 20 02 a8 	load_32 s0, 136(sp)
   55644:	3e 00 02 a8 	load_32 s1, 128(sp)
   55648:	5c 10 00 a8 	load_32 s2, 4(gp)
   5564c:	42 00 00 fc 	call s2
   55650:	3e 70 02 a8 	load_32 s1, 156(sp)
   55654:	40 00 00 0f 	move s2, 0
   55658:	41 10 00 88 	store_32 s2, 4(s1)
   5565c:	01 00 00 88 	store_32 s0, (s1)
   55660:	01 00 00 f6 	b 4 <__udivmoddi4+0xe4>
; return n.s.low / d.s.low;
   55664:	1e 20 02 a8 	load_32 s0, 136(sp)
   55668:	3e 00 02 a8 	load_32 s1, 128(sp)
   5566c:	5c 20 00 a8 	load_32 s2, 8(gp)
   55670:	42 00 00 fc 	call s2
   55674:	3e c0 02 05 	add_i s1, sp, 176
   55678:	21 10 00 00 	or s1, s1, 4
   5567c:	40 00 00 0f 	move s2, 0
   55680:	41 00 00 88 	store_32 s2, (s1)
   55684:	1e c0 02 88 	store_32 s0, 176(sp)
   55688:	49 02 00 f6 	b 2340 <__udivmoddi4+0xa2c>
; if (rem)
   5568c:	1e 70 02 a8 	load_32 s0, 156(sp)
   55690:	00 01 00 f2 	bz s0, 32 <__udivmoddi4+0x130>
   55694:	01 00 00 f6 	b 4 <__udivmoddi4+0x118>
; *rem = n.s.low;
   55698:	1e 20 02 a8 	load_32 s0, 136(sp)
   5569c:	3e 70 02 a8 	load_32 s1, 156(sp)
   556a0:	40 00 00 0f 	move s2, 0
   556a4:	41 10 00 88 	store_32 s2, 4(s1)
   556a8:	01 00 00 88 	store_32 s0, (s1)
   556ac:	01 00 00 f6 	b 4 <__udivmoddi4+0x130>
   556b0:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
   556b4:	00 10 00 00 	or s0, s0, 4
   556b8:	20 00 00 0f 	move s1, 0
   556bc:	20 00 00 88 	store_32 s1, (s0)
   556c0:	3e c0 02 88 	store_32 s1, 176(sp)
   556c4:	3a 02 00 f6 	b 2280 <__udivmoddi4+0xa2c>
; if (d.s.low == 0)
   556c8:	1e 00 02 a8 	load_32 s0, 128(sp)
   556cc:	00 16 00 f4 	bnz s0, 704 <__udivmoddi4+0x40c>
   556d0:	01 00 00 f6 	b 4 <__udivmoddi4+0x154>
   556d4:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
   556d8:	00 10 00 00 	or s0, s0, 4
   556dc:	00 00 00 a8 	load_32 s0, (s0)
   556e0:	80 03 00 f4 	bnz s0, 112 <__udivmoddi4+0x1d0>
   556e4:	01 00 00 f6 	b 4 <__udivmoddi4+0x168>
; if (rem)
   556e8:	1e 70 02 a8 	load_32 s0, 156(sp)
   556ec:	a0 01 00 f2 	bz s0, 52 <__udivmoddi4+0x1a0>
   556f0:	01 00 00 f6 	b 4 <__udivmoddi4+0x174>
   556f4:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.s.high % d.s.low;
   556f8:	00 10 00 00 	or s0, s0, 4
   556fc:	00 00 00 a8 	load_32 s0, (s0)
   55700:	3e 00 02 a8 	load_32 s1, 128(sp)
   55704:	5c 10 00 a8 	load_32 s2, 4(gp)
   55708:	42 00 00 fc 	call s2
   5570c:	3e 70 02 a8 	load_32 s1, 156(sp)
   55710:	40 00 00 0f 	move s2, 0
   55714:	41 10 00 88 	store_32 s2, 4(s1)
   55718:	01 00 00 88 	store_32 s0, (s1)
   5571c:	01 00 00 f6 	b 4 <__udivmoddi4+0x1a0>
   55720:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high / d.s.low;
   55724:	00 10 00 00 	or s0, s0, 4
   55728:	00 00 00 a8 	load_32 s0, (s0)
   5572c:	3e 00 02 a8 	load_32 s1, 128(sp)
   55730:	5c 20 00 a8 	load_32 s2, 8(gp)
   55734:	42 00 00 fc 	call s2
   55738:	3e c0 02 05 	add_i s1, sp, 176
   5573c:	21 10 00 00 	or s1, s1, 4
   55740:	40 00 00 0f 	move s2, 0
   55744:	41 00 00 88 	store_32 s2, (s1)
   55748:	1e c0 02 88 	store_32 s0, 176(sp)
   5574c:	18 02 00 f6 	b 2144 <__udivmoddi4+0xa2c>
; if (n.s.low == 0)
   55750:	1e 20 02 a8 	load_32 s0, 136(sp)
   55754:	c0 04 00 f4 	bnz s0, 152 <__udivmoddi4+0x26c>
   55758:	01 00 00 f6 	b 4 <__udivmoddi4+0x1dc>
; if (rem)
   5575c:	1e 70 02 a8 	load_32 s0, 156(sp)
   55760:	a0 02 00 f2 	bz s0, 84 <__udivmoddi4+0x234>
   55764:	01 00 00 f6 	b 4 <__udivmoddi4+0x1e8>
   55768:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high % d.s.high;
   5576c:	00 10 00 00 	or s0, s0, 4
   55770:	00 00 00 a8 	load_32 s0, (s0)
   55774:	3e 00 02 05 	add_i s1, sp, 128
   55778:	21 10 00 00 	or s1, s1, 4
   5577c:	21 00 00 a8 	load_32 s1, (s1)
   55780:	5c 10 00 a8 	load_32 s2, 4(gp)
   55784:	42 00 00 fc 	call s2
   55788:	3e c0 01 05 	add_i s1, sp, 112
   5578c:	21 10 00 00 	or s1, s1, 4
   55790:	01 00 00 88 	store_32 s0, (s1)
   55794:	00 00 00 0f 	move s0, 0
; r.s.low = 0;
   55798:	1e c0 01 88 	store_32 s0, 112(sp)
; *rem = r.all;
   5579c:	01 00 00 a8 	load_32 s0, (s1)
   557a0:	3e c0 01 a8 	load_32 s1, 112(sp)
   557a4:	5e 70 02 a8 	load_32 s2, 156(sp)
   557a8:	02 10 00 88 	store_32 s0, 4(s2)
   557ac:	22 00 00 88 	store_32 s1, (s2)
; }
   557b0:	01 00 00 f6 	b 4 <__udivmoddi4+0x234>
   557b4:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high / d.s.high;
   557b8:	00 10 00 00 	or s0, s0, 4
   557bc:	00 00 00 a8 	load_32 s0, (s0)
   557c0:	3e 00 02 05 	add_i s1, sp, 128
   557c4:	21 10 00 00 	or s1, s1, 4
   557c8:	21 00 00 a8 	load_32 s1, (s1)
   557cc:	5c 20 00 a8 	load_32 s2, 8(gp)
   557d0:	42 00 00 fc 	call s2
   557d4:	3e c0 02 05 	add_i s1, sp, 176
   557d8:	21 10 00 00 	or s1, s1, 4
   557dc:	40 00 00 0f 	move s2, 0
   557e0:	41 00 00 88 	store_32 s2, (s1)
   557e4:	1e c0 02 88 	store_32 s0, 176(sp)
   557e8:	f1 01 00 f6 	b 1988 <__udivmoddi4+0xa2c>
   557ec:	1e 00 02 05 	add_i s0, sp, 128
; if ((d.s.high & (d.s.high - 1)) == 0)     /* if d is a power of 2 */
   557f0:	00 10 00 00 	or s0, s0, 4
   557f4:	00 00 00 a8 	load_32 s0, (s0)
   557f8:	20 fc ff 05 	add_i s1, s0, -1
   557fc:	00 80 10 c0 	and s0, s0, s1
   55800:	c0 04 00 f4 	bnz s0, 152 <__udivmoddi4+0x318>
   55804:	01 00 00 f6 	b 4 <__udivmoddi4+0x288>
; if (rem)
   55808:	1e 70 02 a8 	load_32 s0, 156(sp)
   5580c:	a0 02 00 f2 	bz s0, 84 <__udivmoddi4+0x2e0>
   55810:	01 00 00 f6 	b 4 <__udivmoddi4+0x294>
; r.s.low = n.s.low;
   55814:	1e 20 02 a8 	load_32 s0, 136(sp)
   55818:	1e c0 01 88 	store_32 s0, 112(sp)
   5581c:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high & (d.s.high - 1);
   55820:	00 10 00 00 	or s0, s0, 4
   55824:	00 00 00 a8 	load_32 s0, (s0)
   55828:	3e 00 02 05 	add_i s1, sp, 128
   5582c:	21 10 00 00 	or s1, s1, 4
   55830:	21 00 00 a8 	load_32 s1, (s1)
   55834:	21 fc ff 05 	add_i s1, s1, -1
   55838:	00 80 10 c0 	and s0, s0, s1
   5583c:	3e c0 01 05 	add_i s1, sp, 112
   55840:	21 10 00 00 	or s1, s1, 4
   55844:	01 00 00 88 	store_32 s0, (s1)
; *rem = r.all;
   55848:	01 00 00 a8 	load_32 s0, (s1)
   5584c:	3e c0 01 a8 	load_32 s1, 112(sp)
   55850:	5e 70 02 a8 	load_32 s2, 156(sp)
   55854:	02 10 00 88 	store_32 s0, 4(s2)
   55858:	22 00 00 88 	store_32 s1, (s2)
; }
   5585c:	01 00 00 f6 	b 4 <__udivmoddi4+0x2e0>
   55860:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high >> __builtin_ctz(d.s.high);
   55864:	00 10 00 00 	or s0, s0, 4
   55868:	00 00 00 a8 	load_32 s0, (s0)
   5586c:	3e 00 02 05 	add_i s1, sp, 128
   55870:	21 10 00 00 	or s1, s1, 4
   55874:	21 00 00 a8 	load_32 s1, (s1)
   55878:	20 80 e0 c0 	ctz s1, s1
   5587c:	00 80 a0 c0 	shr s0, s0, s1
   55880:	3e c0 02 05 	add_i s1, sp, 176
   55884:	21 10 00 00 	or s1, s1, 4
   55888:	40 00 00 0f 	move s2, 0
   5588c:	41 00 00 88 	store_32 s2, (s1)
   55890:	1e c0 02 88 	store_32 s0, 176(sp)
   55894:	c6 01 00 f6 	b 1816 <__udivmoddi4+0xa2c>
   55898:	1e 00 02 05 	add_i s0, sp, 128
; sr = __builtin_clz(d.s.high) - __builtin_clz(n.s.high);
   5589c:	00 10 00 00 	or s0, s0, 4
   558a0:	00 00 00 a8 	load_32 s0, (s0)
   558a4:	00 00 c0 c0 	clz s0, s0
   558a8:	3e 20 02 05 	add_i s1, sp, 136
   558ac:	21 10 00 00 	or s1, s1, 4
   558b0:	21 00 00 a8 	load_32 s1, (s1)
   558b4:	20 80 c0 c0 	clz s1, s1
   558b8:	00 80 60 c0 	sub_i s0, s0, s1
   558bc:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr > n_uword_bits - 2)
   558c0:	1e b0 01 a8 	load_32 s0, 108(sp)
   558c4:	00 7c 00 18 	cmplt_u s0, s0, 31
   558c8:	60 02 00 f4 	bnz s0, 76 <__udivmoddi4+0x394>
   558cc:	01 00 00 f6 	b 4 <__udivmoddi4+0x350>
; if (rem)
   558d0:	1e 70 02 a8 	load_32 s0, 156(sp)
   558d4:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0x37c>
   558d8:	01 00 00 f6 	b 4 <__udivmoddi4+0x35c>
   558dc:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.all;
   558e0:	00 10 00 00 	or s0, s0, 4
   558e4:	00 00 00 a8 	load_32 s0, (s0)
   558e8:	3e 20 02 a8 	load_32 s1, 136(sp)
   558ec:	5e 70 02 a8 	load_32 s2, 156(sp)
   558f0:	02 10 00 88 	store_32 s0, 4(s2)
   558f4:	22 00 00 88 	store_32 s1, (s2)
   558f8:	01 00 00 f6 	b 4 <__udivmoddi4+0x37c>
   558fc:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
   55900:	00 10 00 00 	or s0, s0, 4
   55904:	20 00 00 0f 	move s1, 0
   55908:	20 00 00 88 	store_32 s1, (s0)
   5590c:	3e c0 02 88 	store_32 s1, 176(sp)
   55910:	a7 01 00 f6 	b 1692 <__udivmoddi4+0xa2c>
; ++sr;
   55914:	1e b0 01 a8 	load_32 s0, 108(sp)
   55918:	00 04 00 05 	add_i s0, s0, 1
   5591c:	1e b0 01 88 	store_32 s0, 108(sp)
   55920:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
   55924:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low << (n_uword_bits - sr);
   55928:	1e 20 02 a8 	load_32 s0, 136(sp)
   5592c:	3e b0 01 a8 	load_32 s1, 108(sp)
   55930:	40 80 00 0f 	move s2, 32
   55934:	22 80 60 c0 	sub_i s1, s2, s1
   55938:	00 80 b0 c0 	shl s0, s0, s1
   5593c:	3e e0 01 05 	add_i s1, sp, 120
   55940:	21 10 00 00 	or s1, s1, 4
   55944:	01 00 00 88 	store_32 s0, (s1)
   55948:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
   5594c:	00 10 00 00 	or s0, s0, 4
   55950:	20 00 00 a8 	load_32 s1, (s0)
   55954:	7e b0 01 a8 	load_32 s3, 108(sp)
   55958:	21 80 a1 c0 	shr s1, s1, s3
   5595c:	7e c0 01 05 	add_i s3, sp, 112
   55960:	63 10 00 00 	or s3, s3, 4
   55964:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
   55968:	00 00 00 a8 	load_32 s0, (s0)
   5596c:	3e b0 01 a8 	load_32 s1, 108(sp)
   55970:	42 80 60 c0 	sub_i s2, s2, s1
   55974:	00 00 b1 c0 	shl s0, s0, s2
   55978:	5e 20 02 a8 	load_32 s2, 136(sp)
   5597c:	22 80 a0 c0 	shr s1, s2, s1
   55980:	00 80 00 c0 	or s0, s0, s1
   55984:	1e c0 01 88 	store_32 s0, 112(sp)
; }
   55988:	e8 00 00 f6 	b 928 <__udivmoddi4+0x7a8>
   5598c:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
   55990:	00 10 00 00 	or s0, s0, 4
   55994:	00 00 00 a8 	load_32 s0, (s0)
   55998:	80 12 00 f4 	bnz s0, 592 <__udivmoddi4+0x668>
   5599c:	01 00 00 f6 	b 4 <__udivmoddi4+0x420>
; if ((d.s.low & (d.s.low - 1)) == 0)     /* if d is a power of 2 */
   559a0:	1e 00 02 a8 	load_32 s0, 128(sp)
   559a4:	20 fc ff 05 	add_i s1, s0, -1
   559a8:	00 80 10 c0 	and s0, s0, s1
   559ac:	c0 06 00 f4 	bnz s0, 216 <__udivmoddi4+0x504>
   559b0:	01 00 00 f6 	b 4 <__udivmoddi4+0x434>
; if (rem)
   559b4:	1e 70 02 a8 	load_32 s0, 156(sp)
   559b8:	60 01 00 f2 	bz s0, 44 <__udivmoddi4+0x464>
   559bc:	01 00 00 f6 	b 4 <__udivmoddi4+0x440>
; *rem = n.s.low & (d.s.low - 1);
   559c0:	1e 20 02 a8 	load_32 s0, 136(sp)
   559c4:	3e 00 02 a8 	load_32 s1, 128(sp)
   559c8:	21 fc ff 05 	add_i s1, s1, -1
   559cc:	00 80 10 c0 	and s0, s0, s1
   559d0:	3e 70 02 a8 	load_32 s1, 156(sp)
   559d4:	40 00 00 0f 	move s2, 0
   559d8:	41 10 00 88 	store_32 s2, 4(s1)
   559dc:	01 00 00 88 	store_32 s0, (s1)
   559e0:	01 00 00 f6 	b 4 <__udivmoddi4+0x464>
; if (d.s.low == 1)
   559e4:	1e 00 02 a8 	load_32 s0, 128(sp)
   559e8:	00 04 00 11 	cmpne_i s0, s0, 1
   559ec:	60 01 00 f4 	bnz s0, 44 <__udivmoddi4+0x498>
   559f0:	01 00 00 f6 	b 4 <__udivmoddi4+0x474>
   559f4:	1e 20 02 05 	add_i s0, sp, 136
; return n.all;
   559f8:	00 10 00 00 	or s0, s0, 4
   559fc:	00 00 00 a8 	load_32 s0, (s0)
   55a00:	3e 20 02 a8 	load_32 s1, 136(sp)
   55a04:	5e c0 02 05 	add_i s2, sp, 176
   55a08:	42 10 00 00 	or s2, s2, 4
   55a0c:	02 00 00 88 	store_32 s0, (s2)
   55a10:	3e c0 02 88 	store_32 s1, 176(sp)
   55a14:	66 01 00 f6 	b 1432 <__udivmoddi4+0xa2c>
; sr = __builtin_ctz(d.s.low);
   55a18:	1e 00 02 a8 	load_32 s0, 128(sp)
   55a1c:	00 00 e0 c0 	ctz s0, s0
   55a20:	1e b0 01 88 	store_32 s0, 108(sp)
   55a24:	1e 20 02 05 	add_i s0, sp, 136
; q.s.high = n.s.high >> sr;
   55a28:	00 10 00 00 	or s0, s0, 4
   55a2c:	20 00 00 a8 	load_32 s1, (s0)
   55a30:	5e b0 01 a8 	load_32 s2, 108(sp)
   55a34:	21 00 a1 c0 	shr s1, s1, s2
   55a38:	5e e0 01 05 	add_i s2, sp, 120
   55a3c:	42 10 00 00 	or s2, s2, 4
   55a40:	22 00 00 88 	store_32 s1, (s2)
; q.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
   55a44:	00 00 00 a8 	load_32 s0, (s0)
   55a48:	3e b0 01 a8 	load_32 s1, 108(sp)
   55a4c:	60 80 00 0f 	move s3, 32
   55a50:	63 80 60 c0 	sub_i s3, s3, s1
   55a54:	00 80 b1 c0 	shl s0, s0, s3
   55a58:	7e 20 02 a8 	load_32 s3, 136(sp)
   55a5c:	23 80 a0 c0 	shr s1, s3, s1
   55a60:	00 80 00 c0 	or s0, s0, s1
   55a64:	1e e0 01 88 	store_32 s0, 120(sp)
; return q.all;
   55a68:	02 00 00 a8 	load_32 s0, (s2)
   55a6c:	3e e0 01 a8 	load_32 s1, 120(sp)
   55a70:	5e c0 02 05 	add_i s2, sp, 176
   55a74:	42 10 00 00 	or s2, s2, 4
   55a78:	02 00 00 88 	store_32 s0, (s2)
   55a7c:	3e c0 02 88 	store_32 s1, 176(sp)
   55a80:	4b 01 00 f6 	b 1324 <__udivmoddi4+0xa2c>
; sr = 1 + n_uword_bits + __builtin_clz(d.s.low) - __builtin_clz(n.s.high);
   55a84:	1e 00 02 a8 	load_32 s0, 128(sp)
   55a88:	00 00 c0 c0 	clz s0, s0
   55a8c:	00 84 00 05 	add_i s0, s0, 33
   55a90:	3e 20 02 05 	add_i s1, sp, 136
   55a94:	21 10 00 00 	or s1, s1, 4
   55a98:	21 00 00 a8 	load_32 s1, (s1)
   55a9c:	20 80 c0 c0 	clz s1, s1
   55aa0:	00 80 60 c0 	sub_i s0, s0, s1
   55aa4:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr == n_uword_bits)
   55aa8:	1e b0 01 a8 	load_32 s0, 108(sp)
   55aac:	00 80 00 11 	cmpne_i s0, s0, 32
   55ab0:	00 02 00 f4 	bnz s0, 64 <__udivmoddi4+0x570>
   55ab4:	01 00 00 f6 	b 4 <__udivmoddi4+0x538>
   55ab8:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
   55abc:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low;
   55ac0:	3e 20 02 a8 	load_32 s1, 136(sp)
   55ac4:	5e e0 01 05 	add_i s2, sp, 120
   55ac8:	42 10 00 00 	or s2, s2, 4
   55acc:	22 00 00 88 	store_32 s1, (s2)
   55ad0:	3e c0 01 05 	add_i s1, sp, 112
; r.s.high = 0;
   55ad4:	21 10 00 00 	or s1, s1, 4
   55ad8:	01 00 00 88 	store_32 s0, (s1)
   55adc:	1e 20 02 05 	add_i s0, sp, 136
; r.s.low = n.s.high;
   55ae0:	00 10 00 00 	or s0, s0, 4
   55ae4:	00 00 00 a8 	load_32 s0, (s0)
   55ae8:	1e c0 01 88 	store_32 s0, 112(sp)
; }
   55aec:	3e 00 00 f6 	b 248 <__udivmoddi4+0x664>
; else if (sr < n_uword_bits)  // 2 <= sr <= n_uword_bits - 1
   55af0:	1e b0 01 a8 	load_32 s0, 108(sp)
   55af4:	00 7c 00 16 	cmpgt_u s0, s0, 31
   55af8:	a0 03 00 f4 	bnz s0, 116 <__udivmoddi4+0x5ec>
   55afc:	01 00 00 f6 	b 4 <__udivmoddi4+0x580>
   55b00:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
   55b04:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low << (n_uword_bits - sr);
   55b08:	1e 20 02 a8 	load_32 s0, 136(sp)
   55b0c:	3e b0 01 a8 	load_32 s1, 108(sp)
   55b10:	40 80 00 0f 	move s2, 32
   55b14:	22 80 60 c0 	sub_i s1, s2, s1
   55b18:	00 80 b0 c0 	shl s0, s0, s1
   55b1c:	3e e0 01 05 	add_i s1, sp, 120
   55b20:	21 10 00 00 	or s1, s1, 4
   55b24:	01 00 00 88 	store_32 s0, (s1)
   55b28:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
   55b2c:	00 10 00 00 	or s0, s0, 4
   55b30:	20 00 00 a8 	load_32 s1, (s0)
   55b34:	7e b0 01 a8 	load_32 s3, 108(sp)
   55b38:	21 80 a1 c0 	shr s1, s1, s3
   55b3c:	7e c0 01 05 	add_i s3, sp, 112
   55b40:	63 10 00 00 	or s3, s3, 4
   55b44:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
   55b48:	00 00 00 a8 	load_32 s0, (s0)
   55b4c:	3e b0 01 a8 	load_32 s1, 108(sp)
   55b50:	42 80 60 c0 	sub_i s2, s2, s1
   55b54:	00 00 b1 c0 	shl s0, s0, s2
   55b58:	5e 20 02 a8 	load_32 s2, 136(sp)
   55b5c:	22 80 a0 c0 	shr s1, s2, s1
   55b60:	00 80 00 c0 	or s0, s0, s1
   55b64:	1e c0 01 88 	store_32 s0, 112(sp)
; }
   55b68:	1e 00 00 f6 	b 120 <__udivmoddi4+0x660>
; q.s.low = n.s.low << (n_udword_bits - sr);
   55b6c:	1e 20 02 a8 	load_32 s0, 136(sp)
   55b70:	3e b0 01 a8 	load_32 s1, 108(sp)
   55b74:	40 00 01 0f 	move s2, 64
   55b78:	22 80 60 c0 	sub_i s1, s2, s1
   55b7c:	00 80 b0 c0 	shl s0, s0, s1
   55b80:	1e e0 01 88 	store_32 s0, 120(sp)
   55b84:	1e 20 02 05 	add_i s0, sp, 136
; q.s.high = (n.s.high << (n_udword_bits - sr)) |
   55b88:	00 10 00 00 	or s0, s0, 4
   55b8c:	20 00 00 a8 	load_32 s1, (s0)
   55b90:	7e b0 01 a8 	load_32 s3, 108(sp)
   55b94:	42 80 61 c0 	sub_i s2, s2, s3
   55b98:	21 00 b1 c0 	shl s1, s1, s2
; (n.s.low >> (sr - n_uword_bits));
   55b9c:	5e 20 02 a8 	load_32 s2, 136(sp)
   55ba0:	63 80 ff 05 	add_i s3, s3, -32
   55ba4:	42 80 a1 c0 	shr s2, s2, s3
; q.s.high = (n.s.high << (n_udword_bits - sr)) |
   55ba8:	21 00 01 c0 	or s1, s1, s2
   55bac:	5e e0 01 05 	add_i s2, sp, 120
   55bb0:	42 10 00 00 	or s2, s2, 4
   55bb4:	22 00 00 88 	store_32 s1, (s2)
   55bb8:	3e c0 01 05 	add_i s1, sp, 112
; r.s.high = 0;
   55bbc:	21 10 00 00 	or s1, s1, 4
   55bc0:	40 00 00 0f 	move s2, 0
   55bc4:	41 00 00 88 	store_32 s2, (s1)
; r.s.low = n.s.high >> (sr - n_uword_bits);
   55bc8:	00 00 00 a8 	load_32 s0, (s0)
   55bcc:	3e b0 01 a8 	load_32 s1, 108(sp)
   55bd0:	21 80 ff 05 	add_i s1, s1, -32
   55bd4:	00 80 a0 c0 	shr s0, s0, s1
   55bd8:	1e c0 01 88 	store_32 s0, 112(sp)
   55bdc:	01 00 00 f6 	b 4 <__udivmoddi4+0x660>
   55be0:	01 00 00 f6 	b 4 <__udivmoddi4+0x664>
; }
   55be4:	50 00 00 f6 	b 320 <__udivmoddi4+0x7a4>
   55be8:	1e 00 02 05 	add_i s0, sp, 128
; sr = __builtin_clz(d.s.high) - __builtin_clz(n.s.high);
   55bec:	00 10 00 00 	or s0, s0, 4
   55bf0:	00 00 00 a8 	load_32 s0, (s0)
   55bf4:	00 00 c0 c0 	clz s0, s0
   55bf8:	3e 20 02 05 	add_i s1, sp, 136
   55bfc:	21 10 00 00 	or s1, s1, 4
   55c00:	21 00 00 a8 	load_32 s1, (s1)
   55c04:	20 80 c0 c0 	clz s1, s1
   55c08:	00 80 60 c0 	sub_i s0, s0, s1
   55c0c:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr > n_uword_bits - 1)
   55c10:	1e b0 01 a8 	load_32 s0, 108(sp)
   55c14:	00 80 00 18 	cmplt_u s0, s0, 32
   55c18:	60 02 00 f4 	bnz s0, 76 <__udivmoddi4+0x6e4>
   55c1c:	01 00 00 f6 	b 4 <__udivmoddi4+0x6a0>
; if (rem)
   55c20:	1e 70 02 a8 	load_32 s0, 156(sp)
   55c24:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0x6cc>
   55c28:	01 00 00 f6 	b 4 <__udivmoddi4+0x6ac>
   55c2c:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.all;
   55c30:	00 10 00 00 	or s0, s0, 4
   55c34:	00 00 00 a8 	load_32 s0, (s0)
   55c38:	3e 20 02 a8 	load_32 s1, 136(sp)
   55c3c:	5e 70 02 a8 	load_32 s2, 156(sp)
   55c40:	02 10 00 88 	store_32 s0, 4(s2)
   55c44:	22 00 00 88 	store_32 s1, (s2)
   55c48:	01 00 00 f6 	b 4 <__udivmoddi4+0x6cc>
   55c4c:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
   55c50:	00 10 00 00 	or s0, s0, 4
   55c54:	20 00 00 0f 	move s1, 0
   55c58:	20 00 00 88 	store_32 s1, (s0)
   55c5c:	3e c0 02 88 	store_32 s1, 176(sp)
   55c60:	d3 00 00 f6 	b 844 <__udivmoddi4+0xa2c>
; ++sr;
   55c64:	1e b0 01 a8 	load_32 s0, 108(sp)
   55c68:	00 04 00 05 	add_i s0, s0, 1
   55c6c:	1e b0 01 88 	store_32 s0, 108(sp)
   55c70:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
   55c74:	1e e0 01 88 	store_32 s0, 120(sp)
; if (sr == n_uword_bits)
   55c78:	1e b0 01 a8 	load_32 s0, 108(sp)
   55c7c:	00 80 00 11 	cmpne_i s0, s0, 32
   55c80:	e0 01 00 f4 	bnz s0, 60 <__udivmoddi4+0x73c>
   55c84:	01 00 00 f6 	b 4 <__udivmoddi4+0x708>
; q.s.high = n.s.low;
   55c88:	1e 20 02 a8 	load_32 s0, 136(sp)
   55c8c:	3e e0 01 05 	add_i s1, sp, 120
   55c90:	21 10 00 00 	or s1, s1, 4
   55c94:	01 00 00 88 	store_32 s0, (s1)
   55c98:	1e c0 01 05 	add_i s0, sp, 112
; r.s.high = 0;
   55c9c:	00 10 00 00 	or s0, s0, 4
   55ca0:	20 00 00 0f 	move s1, 0
   55ca4:	20 00 00 88 	store_32 s1, (s0)
   55ca8:	1e 20 02 05 	add_i s0, sp, 136
; r.s.low = n.s.high;
   55cac:	00 10 00 00 	or s0, s0, 4
   55cb0:	00 00 00 a8 	load_32 s0, (s0)
   55cb4:	1e c0 01 88 	store_32 s0, 112(sp)
; }
   55cb8:	1a 00 00 f6 	b 104 <__udivmoddi4+0x7a0>
; q.s.high = n.s.low << (n_uword_bits - sr);
   55cbc:	1e 20 02 a8 	load_32 s0, 136(sp)
   55cc0:	3e b0 01 a8 	load_32 s1, 108(sp)
   55cc4:	40 80 00 0f 	move s2, 32
   55cc8:	22 80 60 c0 	sub_i s1, s2, s1
   55ccc:	00 80 b0 c0 	shl s0, s0, s1
   55cd0:	3e e0 01 05 	add_i s1, sp, 120
   55cd4:	21 10 00 00 	or s1, s1, 4
   55cd8:	01 00 00 88 	store_32 s0, (s1)
   55cdc:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
   55ce0:	00 10 00 00 	or s0, s0, 4
   55ce4:	20 00 00 a8 	load_32 s1, (s0)
   55ce8:	7e b0 01 a8 	load_32 s3, 108(sp)
   55cec:	21 80 a1 c0 	shr s1, s1, s3
   55cf0:	7e c0 01 05 	add_i s3, sp, 112
   55cf4:	63 10 00 00 	or s3, s3, 4
   55cf8:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
   55cfc:	00 00 00 a8 	load_32 s0, (s0)
   55d00:	3e b0 01 a8 	load_32 s1, 108(sp)
   55d04:	42 80 60 c0 	sub_i s2, s2, s1
   55d08:	00 00 b1 c0 	shl s0, s0, s2
   55d0c:	5e 20 02 a8 	load_32 s2, 136(sp)
   55d10:	22 80 a0 c0 	shr s1, s2, s1
   55d14:	00 80 00 c0 	or s0, s0, s1
   55d18:	1e c0 01 88 	store_32 s0, 112(sp)
   55d1c:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a0>
   55d20:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a4>
   55d24:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a8>
   55d28:	00 00 00 0f 	move s0, 0
; su_int carry = 0;
   55d2c:	1e a0 01 88 	store_32 s0, 104(sp)
; for (; sr > 0; --sr)
   55d30:	01 00 00 f6 	b 4 <__udivmoddi4+0x7b4>
   55d34:	1e b0 01 a8 	load_32 s0, 108(sp)
   55d38:	a0 0f 00 f2 	bz s0, 500 <__udivmoddi4+0x9ac>
   55d3c:	01 00 00 f6 	b 4 <__udivmoddi4+0x7c0>
   55d40:	1e c0 01 05 	add_i s0, sp, 112
; r.s.high = (r.s.high << 1) | (r.s.low  >> (n_uword_bits - 1));
   55d44:	00 10 00 00 	or s0, s0, 4
   55d48:	20 00 00 a8 	load_32 s1, (s0)
   55d4c:	21 04 00 0b 	shl s1, s1, 1
   55d50:	5e c0 01 a8 	load_32 s2, 112(sp)
   55d54:	42 7c 00 0a 	shr s2, s2, 31
   55d58:	21 00 01 c0 	or s1, s1, s2
   55d5c:	20 00 00 88 	store_32 s1, (s0)
; r.s.low  = (r.s.low  << 1) | (q.s.high >> (n_uword_bits - 1));
   55d60:	3e c0 01 a8 	load_32 s1, 112(sp)
   55d64:	21 04 00 0b 	shl s1, s1, 1
   55d68:	5e e0 01 05 	add_i s2, sp, 120
   55d6c:	42 10 00 00 	or s2, s2, 4
   55d70:	62 00 00 a8 	load_32 s3, (s2)
   55d74:	63 7c 00 0a 	shr s3, s3, 31
   55d78:	21 80 01 c0 	or s1, s1, s3
   55d7c:	3e c0 01 88 	store_32 s1, 112(sp)
; q.s.high = (q.s.high << 1) | (q.s.low  >> (n_uword_bits - 1));
   55d80:	22 00 00 a8 	load_32 s1, (s2)
   55d84:	21 04 00 0b 	shl s1, s1, 1
   55d88:	7e e0 01 a8 	load_32 s3, 120(sp)
   55d8c:	63 7c 00 0a 	shr s3, s3, 31
   55d90:	21 80 01 c0 	or s1, s1, s3
   55d94:	22 00 00 88 	store_32 s1, (s2)
; q.s.low  = (q.s.low  << 1) | carry;
   55d98:	3e e0 01 a8 	load_32 s1, 120(sp)
   55d9c:	21 04 00 0b 	shl s1, s1, 1
   55da0:	5e a0 01 a8 	load_32 s2, 104(sp)
   55da4:	21 00 01 c0 	or s1, s1, s2
   55da8:	3e e0 01 88 	store_32 s1, 120(sp)
   55dac:	3e 00 02 05 	add_i s1, sp, 128
; const di_int s = (di_int)(d.all - r.all - 1) >> (n_udword_bits - 1);
   55db0:	21 10 00 00 	or s1, s1, 4
   55db4:	41 00 00 a8 	load_32 s2, (s1)
   55db8:	7e 00 02 a8 	load_32 s3, 128(sp)
   55dbc:	80 00 00 a8 	load_32 s4, (s0)
   55dc0:	be c0 01 a8 	load_32 s5, 112(sp)
   55dc4:	c3 80 82 c1 	cmplt_u s6, s3, s5
   55dc8:	e0 00 00 0f 	move s7, 0
   55dcc:	00 05 00 0f 	move s8, 1
   55dd0:	20 01 f4 c0 	move s9, s8
   55dd4:	1e 20 01 88 	store_32 s0, 72(sp)
   55dd8:	3e 10 01 88 	store_32 s1, 68(sp)
   55ddc:	5e 00 01 88 	store_32 s2, 64(sp)
   55de0:	7e f0 00 88 	store_32 s3, 60(sp)
   55de4:	9e e0 00 88 	store_32 s4, 56(sp)
   55de8:	be d0 00 88 	store_32 s5, 52(sp)
   55dec:	fe c0 00 88 	store_32 s7, 48(sp)
   55df0:	1e b1 00 88 	store_32 s8, 44(sp)
   55df4:	3e a1 00 88 	store_32 s9, 40(sp)
   55df8:	66 00 00 f4 	bnz s6, 12 <__udivmoddi4+0x884>
   55dfc:	1e c0 00 a8 	load_32 s0, 48(sp)
   55e00:	1e a0 00 88 	store_32 s0, 40(sp)
   55e04:	1e a0 00 a8 	load_32 s0, 40(sp)
   55e08:	3e 00 01 a8 	load_32 s1, 64(sp)
   55e0c:	5e e0 00 a8 	load_32 s2, 56(sp)
   55e10:	21 00 61 c0 	sub_i s1, s1, s2
   55e14:	01 00 60 c0 	sub_i s0, s1, s0
   55e18:	3e f0 00 a8 	load_32 s1, 60(sp)
   55e1c:	5e d0 00 a8 	load_32 s2, 52(sp)
   55e20:	61 00 61 c0 	sub_i s3, s1, s2
   55e24:	83 fc ff 05 	add_i s4, s3, -1
   55e28:	64 80 81 c1 	cmplt_u s3, s4, s3
   55e2c:	be b0 00 a8 	load_32 s5, 44(sp)
   55e30:	1e 90 00 88 	store_32 s0, 36(sp)
   55e34:	9e 80 00 88 	store_32 s4, 32(sp)
   55e38:	be 70 00 88 	store_32 s5, 28(sp)
   55e3c:	63 00 00 f4 	bnz s3, 12 <__udivmoddi4+0x8c8>
   55e40:	1e c0 00 a8 	load_32 s0, 48(sp)
   55e44:	1e 70 00 88 	store_32 s0, 28(sp)
   55e48:	1e 70 00 a8 	load_32 s0, 28(sp)
   55e4c:	3e 80 00 a8 	load_32 s1, 32(sp)
   55e50:	41 fc ff 11 	cmpne_i s2, s1, -1
   55e54:	7e b0 00 a8 	load_32 s3, 44(sp)
   55e58:	1e 60 00 88 	store_32 s0, 24(sp)
   55e5c:	7e 50 00 88 	store_32 s3, 20(sp)
   55e60:	62 00 00 f4 	bnz s2, 12 <__udivmoddi4+0x8ec>
   55e64:	1e 60 00 a8 	load_32 s0, 24(sp)
   55e68:	1e 50 00 88 	store_32 s0, 20(sp)
   55e6c:	1e 50 00 a8 	load_32 s0, 20(sp)
   55e70:	3e 90 00 a8 	load_32 s1, 36(sp)
   55e74:	01 00 50 c0 	add_i s0, s1, s0
   55e78:	00 fc ff 05 	add_i s0, s0, -1
   55e7c:	00 7c 00 09 	ashr s0, s0, 31
   55e80:	3e 80 01 05 	add_i s1, sp, 96
   55e84:	21 10 00 00 	or s1, s1, 4
   55e88:	01 00 00 88 	store_32 s0, (s1)
   55e8c:	1e 80 01 88 	store_32 s0, 96(sp)
; carry = s & 1;
   55e90:	1e 80 01 a8 	load_32 s0, 96(sp)
   55e94:	00 04 00 01 	and s0, s0, 1
   55e98:	1e a0 01 88 	store_32 s0, 104(sp)
; r.all -= d.all & s;
   55e9c:	1e 10 01 a8 	load_32 s0, 68(sp)
   55ea0:	40 00 00 a8 	load_32 s2, (s0)
   55ea4:	7e 00 02 a8 	load_32 s3, 128(sp)
   55ea8:	21 00 00 a8 	load_32 s1, (s1)
   55eac:	9e 80 01 a8 	load_32 s4, 96(sp)
   55eb0:	22 80 10 c0 	and s1, s2, s1
   55eb4:	43 00 12 c0 	and s2, s3, s4
   55eb8:	7e 20 01 a8 	load_32 s3, 72(sp)
   55ebc:	83 00 00 a8 	load_32 s4, (s3)
   55ec0:	be c0 01 a8 	load_32 s5, 112(sp)
   55ec4:	c5 00 81 c1 	cmplt_u s6, s5, s2
   55ec8:	fe b0 00 a8 	load_32 s7, 44(sp)
   55ecc:	3e 40 00 88 	store_32 s1, 16(sp)
   55ed0:	5e 30 00 88 	store_32 s2, 12(sp)
   55ed4:	9e 20 00 88 	store_32 s4, 8(sp)
   55ed8:	be 10 00 88 	store_32 s5, 4(sp)
   55edc:	fe 00 00 88 	store_32 s7, (sp)
   55ee0:	66 00 00 f4 	bnz s6, 12 <__udivmoddi4+0x96c>
   55ee4:	1e c0 00 a8 	load_32 s0, 48(sp)
   55ee8:	1e 00 00 88 	store_32 s0, (sp)
   55eec:	1e 00 00 a8 	load_32 s0, (sp)
   55ef0:	3e 20 00 a8 	load_32 s1, 8(sp)
   55ef4:	5e 40 00 a8 	load_32 s2, 16(sp)
   55ef8:	21 00 61 c0 	sub_i s1, s1, s2
   55efc:	01 00 60 c0 	sub_i s0, s1, s0
   55f00:	3e 10 00 a8 	load_32 s1, 4(sp)
   55f04:	5e 30 00 a8 	load_32 s2, 12(sp)
   55f08:	61 00 61 c0 	sub_i s3, s1, s2
   55f0c:	9e 20 01 a8 	load_32 s4, 72(sp)
   55f10:	04 00 00 88 	store_32 s0, (s4)
   55f14:	7e c0 01 88 	store_32 s3, 112(sp)
; }
   55f18:	01 00 00 f6 	b 4 <__udivmoddi4+0x99c>
; for (; sr > 0; --sr)
   55f1c:	1e b0 01 a8 	load_32 s0, 108(sp)
   55f20:	00 fc ff 05 	add_i s0, s0, -1
   55f24:	1e b0 01 88 	store_32 s0, 108(sp)
   55f28:	83 ff ff f7 	b -500 <__udivmoddi4+0x7b4>
   55f2c:	1e e0 01 05 	add_i s0, sp, 120
; q.all = (q.all << 1) | carry;
   55f30:	00 10 00 00 	or s0, s0, 4
   55f34:	20 00 00 a8 	load_32 s1, (s0)
   55f38:	5e e0 01 a8 	load_32 s2, 120(sp)
   55f3c:	62 7c 00 0a 	shr s3, s2, 31
   55f40:	21 04 00 0b 	shl s1, s1, 1
   55f44:	21 80 01 c0 	or s1, s1, s3
   55f48:	42 04 00 0b 	shl s2, s2, 1
   55f4c:	7e a0 01 a8 	load_32 s3, 104(sp)
   55f50:	42 80 01 c0 	or s2, s2, s3
   55f54:	20 00 00 88 	store_32 s1, (s0)
   55f58:	5e e0 01 88 	store_32 s2, 120(sp)
; if (rem)
   55f5c:	1e 70 02 a8 	load_32 s0, 156(sp)
   55f60:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0xa08>
   55f64:	01 00 00 f6 	b 4 <__udivmoddi4+0x9e8>
   55f68:	1e c0 01 05 	add_i s0, sp, 112
; *rem = r.all;
   55f6c:	00 10 00 00 	or s0, s0, 4
   55f70:	00 00 00 a8 	load_32 s0, (s0)
   55f74:	3e c0 01 a8 	load_32 s1, 112(sp)
   55f78:	5e 70 02 a8 	load_32 s2, 156(sp)
   55f7c:	02 10 00 88 	store_32 s0, 4(s2)
   55f80:	22 00 00 88 	store_32 s1, (s2)
   55f84:	01 00 00 f6 	b 4 <__udivmoddi4+0xa08>
   55f88:	1e e0 01 05 	add_i s0, sp, 120
; return q.all;
   55f8c:	00 10 00 00 	or s0, s0, 4
   55f90:	00 00 00 a8 	load_32 s0, (s0)
   55f94:	3e e0 01 a8 	load_32 s1, 120(sp)
   55f98:	5e c0 02 05 	add_i s2, sp, 176
   55f9c:	42 10 00 00 	or s2, s2, 4
   55fa0:	02 00 00 88 	store_32 s0, (s2)
   55fa4:	3e c0 02 88 	store_32 s1, 176(sp)
   55fa8:	01 00 00 f6 	b 4 <__udivmoddi4+0xa2c>
   55fac:	1e c0 02 05 	add_i s0, sp, 176
; }
   55fb0:	00 10 00 00 	or s0, s0, 4
   55fb4:	20 00 00 a8 	load_32 s1, (s0)
   55fb8:	1e c0 02 a8 	load_32 s0, 176(sp)
   55fbc:	fe f3 02 a8 	load_32 ra, 188(sp)
   55fc0:	de 03 03 05 	add_i sp, sp, 192
   55fc4:	1f 00 00 f0 	ret

0000000000055fc8 __umoddi3:
; {
   55fc8:	de 03 ff 05 	add_i sp, sp, -64
   55fcc:	fe f3 00 88 	store_32 ra, 60(sp)
   55fd0:	80 80 f1 c0 	move s4, s3
   55fd4:	a0 00 f1 c0 	move s5, s2
   55fd8:	c0 80 f0 c0 	move s6, s1
   55fdc:	e0 00 f0 c0 	move s7, s0
   55fe0:	1e c1 00 05 	add_i s8, sp, 48
   55fe4:	08 11 00 00 	or s8, s8, 4
   55fe8:	28 00 00 88 	store_32 s1, (s8)
   55fec:	1e c0 00 88 	store_32 s0, 48(sp)
   55ff0:	1e a0 00 05 	add_i s0, sp, 40
   55ff4:	00 10 00 00 	or s0, s0, 4
   55ff8:	60 00 00 88 	store_32 s3, (s0)
   55ffc:	5e a0 00 88 	store_32 s2, 40(sp)
; __udivmoddi4(a, b, &r);
   56000:	28 00 00 a8 	load_32 s1, (s8)
   56004:	5e c0 00 a8 	load_32 s2, 48(sp)
   56008:	60 00 00 a8 	load_32 s3, (s0)
   5600c:	1e a0 00 a8 	load_32 s0, 40(sp)
   56010:	1c 01 00 a8 	load_32 s8, (gp)
   56014:	3e 81 00 05 	add_i s9, sp, 32
   56018:	1e 70 00 88 	store_32 s0, 28(sp)
   5601c:	00 00 f1 c0 	move s0, s2
   56020:	5e 70 00 a8 	load_32 s2, 28(sp)
   56024:	9e 60 00 88 	store_32 s4, 24(sp)
   56028:	80 80 f4 c0 	move s4, s9
   5602c:	be 50 00 88 	store_32 s5, 20(sp)
   56030:	de 40 00 88 	store_32 s6, 16(sp)
   56034:	fe 30 00 88 	store_32 s7, 12(sp)
   56038:	3e 21 00 88 	store_32 s9, 8(sp)
   5603c:	08 01 00 fc 	call s8
; return r;
   56040:	5e 20 00 a8 	load_32 s2, 8(sp)
   56044:	62 10 00 00 	or s3, s2, 4
   56048:	63 00 00 a8 	load_32 s3, (s3)
   5604c:	9e 80 00 a8 	load_32 s4, 32(sp)
   56050:	1e 10 00 88 	store_32 s0, 4(sp)
   56054:	00 00 f2 c0 	move s0, s4
   56058:	3e 00 00 88 	store_32 s1, (sp)
   5605c:	20 80 f1 c0 	move s1, s3
   56060:	fe f3 00 a8 	load_32 ra, 60(sp)
   56064:	de 03 01 05 	add_i sp, sp, 64
   56068:	1f 00 00 f0 	ret

000000000005606c __umodsi3:
; {
   5606c:	de 03 ff 05 	add_i sp, sp, -64
   56070:	fe f3 00 88 	store_32 ra, 60(sp)
   56074:	40 80 f0 c0 	move s2, s1
   56078:	60 00 f0 c0 	move s3, s0
   5607c:	1e e0 00 88 	store_32 s0, 56(sp)
   56080:	3e d0 00 88 	store_32 s1, 52(sp)
; return a - __udivsi3(a, b) * b;
   56084:	1e e0 00 a8 	load_32 s0, 56(sp)
   56088:	3e d0 00 a8 	load_32 s1, 52(sp)
   5608c:	9c 20 00 a8 	load_32 s4, 8(gp)
   56090:	1e c0 00 88 	store_32 s0, 48(sp)
   56094:	5e b0 00 88 	store_32 s2, 44(sp)
   56098:	7e a0 00 88 	store_32 s3, 40(sp)
   5609c:	84 00 00 fc 	call s4
   560a0:	3e d0 00 a8 	load_32 s1, 52(sp)
   560a4:	00 80 70 c0 	mull_i s0, s0, s1
   560a8:	3e c0 00 a8 	load_32 s1, 48(sp)
   560ac:	01 00 60 c0 	sub_i s0, s1, s0
   560b0:	fe f3 00 a8 	load_32 ra, 60(sp)
   560b4:	de 03 01 05 	add_i sp, sp, 64
   560b8:	1f 00 00 f0 	ret

00000000000560bc __udivsi3:
; __udivsi3:          move s4, 0              # Quotient
   560bc:	80 00 00 0f 	move s4, 0
; cmplt_u s2, s0, s1      # dividend < divisor
   560c0:	40 80 80 c1 	cmplt_u s2, s0, s1
; bnz s2, done            # If yes, result is zero, bail
   560c4:	22 02 00 f4 	bnz s2, 68 <done>
; clz s2, s0              # Get dividend leading bits
   560c8:	40 00 c0 c0 	clz s2, s0
; clz s3, s1              # Get divisor leading bits
   560cc:	60 80 c0 c0 	clz s3, s1
; sub_i s5, s3, s2        # Number of quotient bits
   560d0:	a3 00 61 c0 	sub_i s5, s3, s2
; shl s1, s1, s5          # Shift divisor
   560d4:	21 80 b2 c0 	shl s1, s1, s5

00000000000560d8 divide_loop:
; divide_loop:        cmpge_u s2, s0, s1      # Is current dividend > divisor
   560d8:	40 80 70 c1 	cmpge_u s2, s0, s1
; and s2, s2, 1           # Set only lowest bit
   560dc:	42 04 00 01 	and s2, s2, 1
; or s4, s4, s2           # if true, quotient |= 1
   560e0:	84 00 01 c0 	or s4, s4, s2
; shl s2, s2, 31          # Turn into 32-bit mask
   560e4:	42 7c 00 0b 	shl s2, s2, 31
; ashr s2, s2, 31
   560e8:	42 7c 00 09 	ashr s2, s2, 31
; and s3, s1, s2          # If the value is true, subtract amt = divisor
   560ec:	61 00 11 c0 	and s3, s1, s2
; sub_i s0, s0, s3        # dividend -= divisor
   560f0:	00 80 61 c0 	sub_i s0, s0, s3
; bz s5, done             # If no more quotient bits, bail
   560f4:	a5 00 00 f2 	bz s5, 20 <done>
; sub_i s5, s5, 1         # Subtract 1 from quotient bits
   560f8:	a5 04 00 06 	sub_i s5, s5, 1
; shr s1, s1, 1           # Shift divisor right
   560fc:	21 04 00 0a 	shr s1, s1, 1
; shl s4, s4, 1           # Shift quotient left
   56100:	84 04 00 0b 	shl s4, s4, 1
; b divide_loop
   56104:	f5 ff ff f7 	b -44 <divide_loop>

0000000000056108 done:
; done:               move s0, s4             # Move quotient to return value
   56108:	00 00 f2 c0 	move s0, s4
; re
   5610c:	1f 00 00 f0 	ret

0000000000056110 _start:
   56110:	00 00 00 ac 	getcr s0, 0
   56114:	00 38 00 0b 	shl s0, s0, 14
   56118:	c0 23 00 4f 	movehi sp, 256
   5611c:	de 03 60 c0 	sub_i sp, sp, s0
   56120:	8b 07 00 4f 	movehi gp, 43
   56124:	9c 23 40 00 	or gp, gp, 4104
   56128:	60 01 00 f4 	bnz s0, 44 <do_main>
   5612c:	0b 07 00 4f 	movehi s24, 43
   56130:	18 03 40 00 	or s24, s24, 4096
   56134:	2b 07 00 4f 	movehi s25, 43
   56138:	39 23 40 00 	or s25, s25, 4104

000000000005613c init_loop:
   5613c:	18 80 0c c1 	cmpeq_i s0, s24, s25
   56140:	a0 00 00 f4 	bnz s0, 20 <do_main>
   56144:	18 00 00 a8 	load_32 s0, (s24)
   56148:	18 13 00 05 	add_i s24, s24, 4
   5614c:	00 00 00 fc 	call s0
   56150:	fb ff ff f7 	b -20 <init_loop>

0000000000056154 do_main:
   56154:	00 00 00 0f 	move s0, 0
   56158:	aa db ff f9 	call -37208 <main>
   5615c:	0b 04 00 4f 	movehi s0, 43
   56160:	00 40 06 00 	or s0, s0, 400
   56164:	20 00 00 aa 	load_sync s1, (s0)
   56168:	e1 ff ff f5 	bnz s1, -4 <do_main+0x10>
   5616c:	20 04 00 0f 	move s1, 1
   56170:	20 00 00 8a 	store_sync s1, (s0)  
   56174:	81 ff ff f3 	bz s1, -16 <do_main+0x10>
   56178:	33 00 00 f8 	call 204 <call_atexit_functions>
   5617c:	00 10 00 0f 	move s0, 4
   56180:	1d f7 ff f9 	call -9100 <_write_uart>
   56184:	00 fc ff 0f 	move s0, -1
   56188:	14 00 00 8c 	setcr s0, 20
   5618c:	00 00 00 f6 	b 0 <do_main+0x38>

0000000000056190 exit_flag:
   56190:	00 00 00 00 	nop

0000000000056194 _Znwj:
   56194:	de 03 ff 05 	add_i sp, sp, -64
   56198:	fe f3 00 88 	store_32 ra, 60(sp)
   5619c:	c6 e0 ff f9 	call -31976 <malloc>
   561a0:	fe f3 00 a8 	load_32 ra, 60(sp)
   561a4:	de 03 01 05 	add_i sp, sp, 64
   561a8:	1f 00 00 f0 	ret

00000000000561ac _ZdlPv:
   561ac:	de 03 ff 05 	add_i sp, sp, -64
   561b0:	fe f3 00 88 	store_32 ra, 60(sp)
   561b4:	4a e8 ff f9 	call -24280 <free>
   561b8:	fe f3 00 a8 	load_32 ra, 60(sp)
   561bc:	de 03 01 05 	add_i sp, sp, 64
   561c0:	1f 00 00 f0 	ret

00000000000561c4 _Znaj:
   561c4:	de 03 ff 05 	add_i sp, sp, -64
   561c8:	fe f3 00 88 	store_32 ra, 60(sp)
   561cc:	ba e0 ff f9 	call -32024 <malloc>
   561d0:	fe f3 00 a8 	load_32 ra, 60(sp)
   561d4:	de 03 01 05 	add_i sp, sp, 64
   561d8:	1f 00 00 f0 	ret

00000000000561dc _ZdaPv:
   561dc:	de 03 ff 05 	add_i sp, sp, -64
   561e0:	fe f3 00 88 	store_32 ra, 60(sp)
   561e4:	3e e8 ff f9 	call -24328 <free>
   561e8:	fe f3 00 a8 	load_32 ra, 60(sp)
   561ec:	de 03 01 05 	add_i sp, sp, 64
   561f0:	1f 00 00 f0 	ret

00000000000561f4 __cxa_atexit:
   561f4:	de 03 ff 05 	add_i sp, sp, -64
   561f8:	1e f3 00 88 	store_32 s24, 60(sp)
   561fc:	3e e3 00 88 	store_32 s25, 56(sp)
   56200:	fe d3 00 88 	store_32 ra, 52(sp)
   56204:	00 83 f0 c0 	move s24, s1
   56208:	20 03 f0 c0 	move s25, s0
   5620c:	00 30 00 0f 	move s0, 12
   56210:	a9 e0 ff f9 	call -32092 <malloc>
   56214:	2c 04 00 4f 	movehi s1, 44
   56218:	21 00 16 00 	or s1, s1, 1408
   5621c:	41 00 00 a8 	load_32 s2, (s1)
   56220:	40 00 00 88 	store_32 s2, (s0)
   56224:	01 00 00 88 	store_32 s0, (s1)
   56228:	20 13 00 88 	store_32 s25, 4(s0)
   5622c:	00 23 00 88 	store_32 s24, 8(s0)
   56230:	fe d3 00 a8 	load_32 ra, 52(sp)
   56234:	3e e3 00 a8 	load_32 s25, 56(sp)
   56238:	1e f3 00 a8 	load_32 s24, 60(sp)
   5623c:	de 03 01 05 	add_i sp, sp, 64
   56240:	1f 00 00 f0 	ret

0000000000056244 call_atexit_functions:
   56244:	de 03 ff 05 	add_i sp, sp, -64
   56248:	1e f3 00 88 	store_32 s24, 60(sp)
   5624c:	fe e3 00 88 	store_32 ra, 56(sp)
   56250:	0c 04 00 4f 	movehi s0, 44
   56254:	00 00 16 00 	or s0, s0, 1408
   56258:	00 03 00 a8 	load_32 s24, (s0)
   5625c:	f8 00 00 f2 	bz s24, 28 <call_atexit_functions+0x34>
   56260:	38 10 00 a8 	load_32 s1, 4(s24)
   56264:	18 20 00 a8 	load_32 s0, 8(s24)
   56268:	21 00 00 fc 	call s1
   5626c:	18 03 00 a8 	load_32 s24, (s24)
   56270:	58 00 00 f2 	bz s24, 8 <call_atexit_functions+0x34>
   56274:	fb ff ff f7 	b -20 <call_atexit_functions+0x1c>
   56278:	fe e3 00 a8 	load_32 ra, 56(sp)
   5627c:	1e f3 00 a8 	load_32 s24, 60(sp)
   56280:	de 03 01 05 	add_i sp, sp, 64
   56284:	1f 00 00 f0 	ret

0000000000056288 __cxa_pure_virtual:
   56288:	de 03 ff 05 	add_i sp, sp, -64
   5628c:	fe f3 00 88 	store_32 ra, 60(sp)
   56290:	05 04 00 4f 	movehi s0, 37
   56294:	00 dc 4f 00 	or s0, s0, 5111
   56298:	6f df ff f9 	call -33348 <puts>
   5629c:	00 00 e0 c3 	break

00000000000562a0 _GLOBAL__sub_I_cxx_runtime.cpp:
   562a0:	de 03 ff 05 	add_i sp, sp, -64
   562a4:	1e f3 00 88 	store_32 s24, 60(sp)
   562a8:	3e e3 00 88 	store_32 s25, 56(sp)
   562ac:	5e d3 00 88 	store_32 s26, 52(sp)
   562b0:	7e c3 00 88 	store_32 s27, 48(sp)
   562b4:	fe b3 00 88 	store_32 ra, 44(sp)
   562b8:	05 04 00 4f 	movehi s0, 37
   562bc:	2c 04 00 4f 	movehi s1, 44
   562c0:	00 33 00 0f 	move s24, 12
   562c4:	00 00 5c 00 	or s0, s0, 5888
   562c8:	41 d3 15 00 	or s26, s1, 1396
   562cc:	00 20 00 05 	add_i s0, s0, 8
   562d0:	1a 00 00 88 	store_32 s0, (s26)
   562d4:	00 00 fc c0 	move s0, s24
   562d8:	77 e0 ff f9 	call -32292 <malloc>
   562dc:	2c 04 00 4f 	movehi s1, 44
   562e0:	4c 04 00 4f 	movehi s2, 44
   562e4:	21 00 16 00 	or s1, s1, 1408
   562e8:	3e a0 00 88 	store_32 s1, 40(sp)
   562ec:	20 03 f0 c0 	move s25, s0
   562f0:	0b 04 00 4f 	movehi s0, 43
   562f4:	21 00 00 a8 	load_32 s1, (s1)
   562f8:	62 e3 15 00 	or s27, s2, 1400
   562fc:	39 00 00 88 	store_32 s1, (s25)
   56300:	25 04 00 4f 	movehi s1, 37
   56304:	00 70 0d 00 	or s0, s0, 860
   56308:	19 10 00 88 	store_32 s0, 4(s25)
   5630c:	59 23 00 88 	store_32 s26, 8(s25)
   56310:	01 f0 5c 00 	or s0, s1, 5948
   56314:	00 20 00 05 	add_i s0, s0, 8
   56318:	1b 00 00 88 	store_32 s0, (s27)
   5631c:	00 00 fc c0 	move s0, s24
   56320:	65 e0 ff f9 	call -32364 <malloc>
   56324:	20 03 00 88 	store_32 s25, (s0)
   56328:	2b 04 00 4f 	movehi s1, 43
   5632c:	5e a0 00 a8 	load_32 s2, 40(sp)
   56330:	21 80 0d 00 	or s1, s1, 864
   56334:	02 00 00 88 	store_32 s0, (s2)
   56338:	20 10 00 88 	store_32 s1, 4(s0)
   5633c:	60 23 00 88 	store_32 s27, 8(s0)
   56340:	fe b3 00 a8 	load_32 ra, 44(sp)
   56344:	7e c3 00 a8 	load_32 s27, 48(sp)
   56348:	5e d3 00 a8 	load_32 s26, 52(sp)
   5634c:	3e e3 00 a8 	load_32 s25, 56(sp)
   56350:	1e f3 00 a8 	load_32 s24, 60(sp)
   56354:	de 03 01 05 	add_i sp, sp, 64
   56358:	1f 00 00 f0 	ret

000000000005635c _ZN10__cxxabiv117__class_type_infoD2Ev:
   5635c:	1f 00 00 f0 	ret

0000000000056360 _ZN10__cxxabiv120__si_class_type_infoD2Ev:
   56360:	1f 00 00 f0 	ret

0000000000056364 _ZN10__cxxabiv117__class_type_infoD0Ev:
   56364:	de 03 ff 05 	add_i sp, sp, -64
   56368:	fe f3 00 88 	store_32 ra, 60(sp)
   5636c:	dc e7 ff f9 	call -24720 <free>
   56370:	fe f3 00 a8 	load_32 ra, 60(sp)
   56374:	de 03 01 05 	add_i sp, sp, 64
   56378:	1f 00 00 f0 	ret

000000000005637c _ZN10__cxxabiv120__si_class_type_infoD0Ev:
   5637c:	de 03 ff 05 	add_i sp, sp, -64
   56380:	fe f3 00 88 	store_32 ra, 60(sp)
   56384:	d6 e7 ff f9 	call -24744 <free>
   56388:	fe f3 00 a8 	load_32 ra, 60(sp)
   5638c:	de 03 01 05 	add_i sp, sp, 64
   56390:	1f 00 00 f0 	ret
