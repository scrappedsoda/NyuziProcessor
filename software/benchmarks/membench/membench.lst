
/home/glinsi/git/NyuziProcessor/software/benchmarks/membench/membench:	file format ELF32-nyuzi

Disassembly of section .text:
0000000000002000 start_parallel:
    2000:	de 03 ff 05 	add_i sp, sp, -64
    2004:	fe f3 00 88 	store_32 ra, 60(sp)
    2008:	57 1a 00 f8 	call 26972 <start_all_threads>
    200c:	06 00 00 4f 	movehi s0, 6
    2010:	00 50 04 00 	or s0, s0, 276
    2014:	20 00 00 aa 	load_sync s1, (s0)
    2018:	41 04 00 05 	add_i s2, s1, 1
    201c:	20 80 f0 c0 	move s1, s1
    2020:	40 00 00 8a 	store_sync s2, (s0)  
    2024:	82 ff ff f3 	bz s2, -16 <start_parallel+0x14>
    2028:	fe f3 00 a8 	load_32 ra, 60(sp)
    202c:	de 03 01 05 	add_i sp, sp, 64
    2030:	1f 00 00 f0 	ret

0000000000002034 end_parallel:
    2034:	de 03 ff 05 	add_i sp, sp, -64
    2038:	fe f3 00 88 	store_32 ra, 60(sp)
    203c:	06 00 00 4f 	movehi s0, 6
    2040:	00 50 04 00 	or s0, s0, 276
    2044:	20 00 00 aa 	load_sync s1, (s0)
    2048:	41 fc ff 05 	add_i s2, s1, -1
    204c:	20 80 f0 c0 	move s1, s1
    2050:	40 00 00 8a 	store_sync s2, (s0)  
    2054:	82 ff ff f3 	bz s2, -16 <end_parallel+0x10>
    2058:	20 00 00 a8 	load_32 s1, (s0)
    205c:	21 00 00 12 	cmpgt_i s1, s1, 0
    2060:	c1 ff ff f5 	bnz s1, -8 <end_parallel+0x24>
    2064:	ef 1c 00 f8 	call 29628 <get_current_thread_id>
    2068:	40 00 00 f4 	bnz s0, 8 <end_parallel+0x3c>
    206c:	04 00 00 f6 	b 16 <end_parallel+0x48>
    2070:	fe f3 00 a8 	load_32 ra, 60(sp)
    2074:	de 03 01 05 	add_i sp, sp, 64
    2078:	1f 00 00 f0 	ret
    207c:	00 f8 ff 0f 	move s0, -2
    2080:	14 00 00 8c 	setcr s0, 20
    2084:	fe f3 00 a8 	load_32 ra, 60(sp)
    2088:	de 03 01 05 	add_i sp, sp, 64
    208c:	1f 00 00 f0 	ret

0000000000002090 copy_test:
    2090:	de 03 fe 05 	add_i sp, sp, -128
    2094:	1e f3 01 88 	store_32 s24, 124(sp)
    2098:	3e e3 01 88 	store_32 s25, 120(sp)
    209c:	5e d3 01 88 	store_32 s26, 116(sp)
    20a0:	fe c3 01 88 	store_32 ra, 112(sp)
    20a4:	df 1c 00 f8 	call 29564 <get_current_thread_id>
    20a8:	00 28 00 0b 	shl s0, s0, 10
    20ac:	20 20 00 4f 	movehi s1, 256
    20b0:	20 83 50 c0 	add_i s25, s0, s1
    20b4:	db 1c 00 f8 	call 29548 <get_current_thread_id>
    20b8:	00 28 00 0b 	shl s0, s0, 10
    20bc:	20 40 00 4f 	movehi s1, 512
    20c0:	40 83 50 c0 	add_i s26, s0, s1
    20c4:	d9 1c 00 f8 	call 29540 <get_cycle_count>
    20c8:	00 03 f0 c0 	move s24, s0
    20cc:	26 1a 00 f8 	call 26776 <start_all_threads>
    20d0:	06 00 00 4f 	movehi s0, 6
    20d4:	00 50 04 00 	or s0, s0, 276
    20d8:	20 00 00 aa 	load_sync s1, (s0)
    20dc:	41 04 00 05 	add_i s2, s1, 1
    20e0:	20 80 f0 c0 	move s1, s1
    20e4:	40 00 00 8a 	store_sync s2, (s0)  
    20e8:	82 ff ff f3 	bz s2, -16 <copy_test+0x48>
    20ec:	20 00 08 0f 	move s1, 512
    20f0:	1a 00 00 ae 	load_v v0, (s26)
    20f4:	21 fc ff 05 	add_i s1, s1, -1
    20f8:	19 00 00 8e 	store_v v0, (s25)
    20fc:	1a 00 01 ae 	load_v v0, 64(s26)
    2100:	19 00 01 8e 	store_v v0, 64(s25)
    2104:	1a 00 02 ae 	load_v v0, 128(s26)
    2108:	19 00 02 8e 	store_v v0, 128(s25)
    210c:	1a 00 03 ae 	load_v v0, 192(s26)
    2110:	19 00 03 8e 	store_v v0, 192(s25)
    2114:	1a 00 04 ae 	load_v v0, 256(s26)
    2118:	19 00 04 8e 	store_v v0, 256(s25)
    211c:	1a 00 05 ae 	load_v v0, 320(s26)
    2120:	19 00 05 8e 	store_v v0, 320(s25)
    2124:	1a 00 06 ae 	load_v v0, 384(s26)
    2128:	19 00 06 8e 	store_v v0, 384(s25)
    212c:	1a 00 07 ae 	load_v v0, 448(s26)
    2130:	19 00 07 8e 	store_v v0, 448(s25)
    2134:	1a 00 08 ae 	load_v v0, 512(s26)
    2138:	19 00 08 8e 	store_v v0, 512(s25)
    213c:	1a 00 09 ae 	load_v v0, 576(s26)
    2140:	19 00 09 8e 	store_v v0, 576(s25)
    2144:	1a 00 0a ae 	load_v v0, 640(s26)
    2148:	19 00 0a 8e 	store_v v0, 640(s25)
    214c:	1a 00 0b ae 	load_v v0, 704(s26)
    2150:	19 00 0b 8e 	store_v v0, 704(s25)
    2154:	1a 00 0c ae 	load_v v0, 768(s26)
    2158:	19 00 0c 8e 	store_v v0, 768(s25)
    215c:	1a 00 0d ae 	load_v v0, 832(s26)
    2160:	19 00 0d 8e 	store_v v0, 832(s25)
    2164:	1a 00 0e ae 	load_v v0, 896(s26)
    2168:	19 00 0e 8e 	store_v v0, 896(s25)
    216c:	1a 00 0f ae 	load_v v0, 960(s26)
    2170:	5a 03 40 05 	add_i s26, s26, 4096
    2174:	19 00 0f 8e 	store_v v0, 960(s25)
    2178:	39 03 40 05 	add_i s25, s25, 4096
    217c:	a1 fb ff f5 	bnz s1, -140 <copy_test+0x60>
    2180:	20 00 00 aa 	load_sync s1, (s0)
    2184:	41 fc ff 05 	add_i s2, s1, -1
    2188:	20 80 f0 c0 	move s1, s1
    218c:	40 00 00 8a 	store_sync s2, (s0)  
    2190:	82 ff ff f3 	bz s2, -16 <copy_test+0xf0>
    2194:	20 00 00 a8 	load_32 s1, (s0)
    2198:	21 00 00 12 	cmpgt_i s1, s1, 0
    219c:	c1 ff ff f5 	bnz s1, -8 <copy_test+0x104>
    21a0:	a0 1c 00 f8 	call 29312 <get_current_thread_id>
    21a4:	40 00 00 f4 	bnz s0, 8 <copy_test+0x11c>
    21a8:	0a 00 00 f6 	b 40 <copy_test+0x140>
    21ac:	9d 1c 00 f8 	call 29300 <get_current_thread_id>
    21b0:	40 00 00 f4 	bnz s0, 8 <copy_test+0x128>
    21b4:	0b 00 00 f6 	b 44 <copy_test+0x150>
    21b8:	fe c3 01 a8 	load_32 ra, 112(sp)
    21bc:	5e d3 01 a8 	load_32 s26, 116(sp)
    21c0:	3e e3 01 a8 	load_32 s25, 120(sp)
    21c4:	1e f3 01 a8 	load_32 s24, 124(sp)
    21c8:	de 03 02 05 	add_i sp, sp, 128
    21cc:	1f 00 00 f0 	ret
    21d0:	00 f8 ff 0f 	move s0, -2
    21d4:	14 00 00 8c 	setcr s0, 20
    21d8:	92 1c 00 f8 	call 29256 <get_current_thread_id>
    21dc:	e0 fe ff f5 	bnz s0, -36 <copy_test+0x128>
    21e0:	92 1c 00 f8 	call 29256 <get_cycle_count>
    21e4:	00 00 6c c0 	sub_i s0, s0, s24
    21e8:	20 00 00 4f 	movehi s1, 0
    21ec:	00 00 a0 c2 	itof s0, s0
    21f0:	21 10 05 00 	or s1, s1, 324
    21f4:	21 00 00 a8 	load_32 s1, (s1)
    21f8:	40 00 c0 c1 	reciprocal s2, s0
    21fc:	62 00 20 c2 	mul_f s3, s2, s0
    2200:	61 80 11 c2 	sub_f s3, s1, s3
    2204:	42 80 21 c2 	mul_f s2, s2, s3
    2208:	60 00 00 4f 	movehi s3, 0
    220c:	02 00 20 c2 	mul_f s0, s2, s0
    2210:	01 00 10 c2 	sub_f s0, s1, s0
    2214:	23 30 05 00 	or s1, s3, 332
    2218:	02 00 20 c2 	mul_f s0, s2, s0
    221c:	21 00 00 a8 	load_32 s1, (s1)
    2220:	00 80 20 c2 	mul_f s0, s0, s1
    2224:	20 00 00 4f 	movehi s1, 0
    2228:	21 88 07 00 	or s1, s1, 482
    222c:	3e 00 00 88 	store_32 s1, (sp)
    2230:	1e 10 00 88 	store_32 s0, 4(sp)
    2234:	89 01 00 f8 	call 1572 <printf>
    2238:	e0 ff ff f7 	b -128 <copy_test+0x128>

000000000000223c read_test:
    223c:	de 03 fe 05 	add_i sp, sp, -128
    2240:	1e f3 01 88 	store_32 s24, 124(sp)
    2244:	3e e3 01 88 	store_32 s25, 120(sp)
    2248:	fe d3 01 88 	store_32 ra, 116(sp)
    224c:	75 1c 00 f8 	call 29140 <get_current_thread_id>
    2250:	00 28 00 0b 	shl s0, s0, 10
    2254:	20 20 00 4f 	movehi s1, 256
    2258:	20 83 50 c0 	add_i s25, s0, s1
    225c:	73 1c 00 f8 	call 29132 <get_cycle_count>
    2260:	00 03 f0 c0 	move s24, s0
    2264:	c0 19 00 f8 	call 26368 <start_all_threads>
    2268:	06 00 00 4f 	movehi s0, 6
    226c:	00 50 04 00 	or s0, s0, 276
    2270:	20 00 00 aa 	load_sync s1, (s0)
    2274:	41 04 00 05 	add_i s2, s1, 1
    2278:	20 80 f0 c0 	move s1, s1
    227c:	40 00 00 8a 	store_sync s2, (s0)  
    2280:	82 ff ff f3 	bz s2, -16 <read_test+0x34>
    2284:	20 00 08 0f 	move s1, 512
    2288:	19 00 00 ae 	load_v v0, (s25)
    228c:	21 fc ff 05 	add_i s1, s1, -1
    2290:	19 00 01 ae 	load_v v0, 64(s25)
    2294:	19 00 02 ae 	load_v v0, 128(s25)
    2298:	19 00 03 ae 	load_v v0, 192(s25)
    229c:	19 00 04 ae 	load_v v0, 256(s25)
    22a0:	19 00 05 ae 	load_v v0, 320(s25)
    22a4:	19 00 06 ae 	load_v v0, 384(s25)
    22a8:	19 00 07 ae 	load_v v0, 448(s25)
    22ac:	19 00 08 ae 	load_v v0, 512(s25)
    22b0:	19 00 09 ae 	load_v v0, 576(s25)
    22b4:	19 00 0a ae 	load_v v0, 640(s25)
    22b8:	19 00 0b ae 	load_v v0, 704(s25)
    22bc:	19 00 0c ae 	load_v v0, 768(s25)
    22c0:	19 00 0d ae 	load_v v0, 832(s25)
    22c4:	19 00 0e ae 	load_v v0, 896(s25)
    22c8:	19 00 0f ae 	load_v v0, 960(s25)
    22cc:	39 03 40 05 	add_i s25, s25, 4096
    22d0:	c1 fd ff f5 	bnz s1, -72 <read_test+0x4c>
    22d4:	20 00 00 aa 	load_sync s1, (s0)
    22d8:	41 fc ff 05 	add_i s2, s1, -1
    22dc:	20 80 f0 c0 	move s1, s1
    22e0:	40 00 00 8a 	store_sync s2, (s0)  
    22e4:	82 ff ff f3 	bz s2, -16 <read_test+0x98>
    22e8:	20 00 00 a8 	load_32 s1, (s0)
    22ec:	21 00 00 12 	cmpgt_i s1, s1, 0
    22f0:	c1 ff ff f5 	bnz s1, -8 <read_test+0xac>
    22f4:	4b 1c 00 f8 	call 28972 <get_current_thread_id>
    22f8:	40 00 00 f4 	bnz s0, 8 <read_test+0xc4>
    22fc:	09 00 00 f6 	b 36 <read_test+0xe4>
    2300:	48 1c 00 f8 	call 28960 <get_current_thread_id>
    2304:	40 00 00 f4 	bnz s0, 8 <read_test+0xd0>
    2308:	0a 00 00 f6 	b 40 <read_test+0xf4>
    230c:	fe d3 01 a8 	load_32 ra, 116(sp)
    2310:	3e e3 01 a8 	load_32 s25, 120(sp)
    2314:	1e f3 01 a8 	load_32 s24, 124(sp)
    2318:	de 03 02 05 	add_i sp, sp, 128
    231c:	1f 00 00 f0 	ret
    2320:	00 f8 ff 0f 	move s0, -2
    2324:	14 00 00 8c 	setcr s0, 20
    2328:	3e 1c 00 f8 	call 28920 <get_current_thread_id>
    232c:	00 ff ff f5 	bnz s0, -32 <read_test+0xd0>
    2330:	3e 1c 00 f8 	call 28920 <get_cycle_count>
    2334:	00 00 6c c0 	sub_i s0, s0, s24
    2338:	20 00 00 4f 	movehi s1, 0
    233c:	00 00 a0 c2 	itof s0, s0
    2340:	21 10 05 00 	or s1, s1, 324
    2344:	21 00 00 a8 	load_32 s1, (s1)
    2348:	40 00 c0 c1 	reciprocal s2, s0
    234c:	62 00 20 c2 	mul_f s3, s2, s0
    2350:	61 80 11 c2 	sub_f s3, s1, s3
    2354:	42 80 21 c2 	mul_f s2, s2, s3
    2358:	60 00 00 4f 	movehi s3, 0
    235c:	02 00 20 c2 	mul_f s0, s2, s0
    2360:	01 00 10 c2 	sub_f s0, s1, s0
    2364:	23 30 05 00 	or s1, s3, 332
    2368:	02 00 20 c2 	mul_f s0, s2, s0
    236c:	21 00 00 a8 	load_32 s1, (s1)
    2370:	00 80 20 c2 	mul_f s0, s0, s1
    2374:	20 00 00 4f 	movehi s1, 0
    2378:	21 30 07 00 	or s1, s1, 460
    237c:	3e 00 00 88 	store_32 s1, (sp)
    2380:	1e 10 00 88 	store_32 s0, 4(sp)
    2384:	35 01 00 f8 	call 1236 <printf>
    2388:	e1 ff ff f7 	b -124 <read_test+0xd0>

000000000000238c write_test:
    238c:	de 03 fe 05 	add_i sp, sp, -128
    2390:	1e f3 01 88 	store_32 s24, 124(sp)
    2394:	3e e3 01 88 	store_32 s25, 120(sp)
    2398:	fe d3 01 88 	store_32 ra, 116(sp)
    239c:	21 1c 00 f8 	call 28804 <get_current_thread_id>
    23a0:	00 28 00 0b 	shl s0, s0, 10
    23a4:	20 20 00 4f 	movehi s1, 256
    23a8:	20 83 50 c0 	add_i s25, s0, s1
    23ac:	1f 1c 00 f8 	call 28796 <get_cycle_count>
    23b0:	00 03 f0 c0 	move s24, s0
    23b4:	6c 19 00 f8 	call 26032 <start_all_threads>
    23b8:	06 00 00 4f 	movehi s0, 6
    23bc:	00 50 04 00 	or s0, s0, 276
    23c0:	20 00 00 aa 	load_sync s1, (s0)
    23c4:	41 04 00 05 	add_i s2, s1, 1
    23c8:	20 80 f0 c0 	move s1, s1
    23cc:	40 00 00 8a 	store_sync s2, (s0)  
    23d0:	82 ff ff f3 	bz s2, -16 <write_test+0x34>
    23d4:	40 00 00 4f 	movehi s2, 0
    23d8:	20 00 08 0f 	move s1, 512
    23dc:	42 00 06 00 	or s2, s2, 384
    23e0:	02 00 00 ae 	load_v v0, (s2)
    23e4:	21 fc ff 05 	add_i s1, s1, -1
    23e8:	19 00 00 8e 	store_v v0, (s25)
    23ec:	19 00 01 8e 	store_v v0, 64(s25)
    23f0:	19 00 02 8e 	store_v v0, 128(s25)
    23f4:	19 00 03 8e 	store_v v0, 192(s25)
    23f8:	19 00 04 8e 	store_v v0, 256(s25)
    23fc:	19 00 05 8e 	store_v v0, 320(s25)
    2400:	19 00 06 8e 	store_v v0, 384(s25)
    2404:	19 00 07 8e 	store_v v0, 448(s25)
    2408:	19 00 08 8e 	store_v v0, 512(s25)
    240c:	19 00 09 8e 	store_v v0, 576(s25)
    2410:	19 00 0a 8e 	store_v v0, 640(s25)
    2414:	19 00 0b 8e 	store_v v0, 704(s25)
    2418:	19 00 0c 8e 	store_v v0, 768(s25)
    241c:	19 00 0d 8e 	store_v v0, 832(s25)
    2420:	19 00 0e 8e 	store_v v0, 896(s25)
    2424:	19 00 0f 8e 	store_v v0, 960(s25)
    2428:	39 03 40 05 	add_i s25, s25, 4096
    242c:	a1 fd ff f5 	bnz s1, -76 <write_test+0x54>
    2430:	20 00 00 aa 	load_sync s1, (s0)
    2434:	41 fc ff 05 	add_i s2, s1, -1
    2438:	20 80 f0 c0 	move s1, s1
    243c:	40 00 00 8a 	store_sync s2, (s0)  
    2440:	82 ff ff f3 	bz s2, -16 <write_test+0xa4>
    2444:	20 00 00 a8 	load_32 s1, (s0)
    2448:	21 00 00 12 	cmpgt_i s1, s1, 0
    244c:	c1 ff ff f5 	bnz s1, -8 <write_test+0xb8>
    2450:	f4 1b 00 f8 	call 28624 <get_current_thread_id>
    2454:	40 00 00 f4 	bnz s0, 8 <write_test+0xd0>
    2458:	09 00 00 f6 	b 36 <write_test+0xf0>
    245c:	f1 1b 00 f8 	call 28612 <get_current_thread_id>
    2460:	40 00 00 f4 	bnz s0, 8 <write_test+0xdc>
    2464:	0a 00 00 f6 	b 40 <write_test+0x100>
    2468:	fe d3 01 a8 	load_32 ra, 116(sp)
    246c:	3e e3 01 a8 	load_32 s25, 120(sp)
    2470:	1e f3 01 a8 	load_32 s24, 124(sp)
    2474:	de 03 02 05 	add_i sp, sp, 128
    2478:	1f 00 00 f0 	ret
    247c:	00 f8 ff 0f 	move s0, -2
    2480:	14 00 00 8c 	setcr s0, 20
    2484:	e7 1b 00 f8 	call 28572 <get_current_thread_id>
    2488:	00 ff ff f5 	bnz s0, -32 <write_test+0xdc>
    248c:	e7 1b 00 f8 	call 28572 <get_cycle_count>
    2490:	00 00 6c c0 	sub_i s0, s0, s24
    2494:	20 00 00 4f 	movehi s1, 0
    2498:	00 00 a0 c2 	itof s0, s0
    249c:	21 10 05 00 	or s1, s1, 324
    24a0:	21 00 00 a8 	load_32 s1, (s1)
    24a4:	40 00 c0 c1 	reciprocal s2, s0
    24a8:	62 00 20 c2 	mul_f s3, s2, s0
    24ac:	61 80 11 c2 	sub_f s3, s1, s3
    24b0:	42 80 21 c2 	mul_f s2, s2, s3
    24b4:	60 00 00 4f 	movehi s3, 0
    24b8:	02 00 20 c2 	mul_f s0, s2, s0
    24bc:	01 00 10 c2 	sub_f s0, s1, s0
    24c0:	23 30 05 00 	or s1, s3, 332
    24c4:	02 00 20 c2 	mul_f s0, s2, s0
    24c8:	21 00 00 a8 	load_32 s1, (s1)
    24cc:	00 80 20 c2 	mul_f s0, s0, s1
    24d0:	20 00 00 4f 	movehi s1, 0
    24d4:	21 2c 13 00 	or s1, s1, 1227
    24d8:	3e 00 00 88 	store_32 s1, (sp)
    24dc:	1e 10 00 88 	store_32 s0, 4(sp)
    24e0:	de 00 00 f8 	call 888 <printf>
    24e4:	e1 ff ff f7 	b -124 <write_test+0xdc>

00000000000024e8 io_read_test:
    24e8:	de 03 fe 05 	add_i sp, sp, -128
    24ec:	1e f3 01 88 	store_32 s24, 124(sp)
    24f0:	fe e3 01 88 	store_32 ra, 120(sp)
    24f4:	cd 1b 00 f8 	call 28468 <get_cycle_count>
    24f8:	00 03 f0 c0 	move s24, s0
    24fc:	1a 19 00 f8 	call 25704 <start_all_threads>
    2500:	06 00 00 4f 	movehi s0, 6
    2504:	00 50 04 00 	or s0, s0, 276
    2508:	20 00 00 aa 	load_sync s1, (s0)
    250c:	41 04 00 05 	add_i s2, s1, 1
    2510:	20 80 f0 c0 	move s1, s1
    2514:	40 00 00 8a 	store_sync s2, (s0)  
    2518:	82 ff ff f3 	bz s2, -16 <io_read_test+0x20>
    251c:	58 fc ff 4f 	movehi s2, 524280
    2520:	20 00 00 0f 	move s1, 0
    2524:	42 10 00 00 	or s2, s2, 4
    2528:	21 20 00 05 	add_i s1, s1, 8
    252c:	62 00 00 a8 	load_32 s3, (s2)
    2530:	62 00 00 a8 	load_32 s3, (s2)
    2534:	62 00 00 a8 	load_32 s3, (s2)
    2538:	62 00 00 a8 	load_32 s3, (s2)
    253c:	62 00 00 a8 	load_32 s3, (s2)
    2540:	62 00 00 a8 	load_32 s3, (s2)
    2544:	62 00 00 a8 	load_32 s3, (s2)
    2548:	61 00 10 18 	cmplt_u s3, s1, 1024
    254c:	82 00 00 a8 	load_32 s4, (s2)
    2550:	c3 fe ff f5 	bnz s3, -40 <io_read_test+0x40>
    2554:	20 00 00 aa 	load_sync s1, (s0)
    2558:	41 fc ff 05 	add_i s2, s1, -1
    255c:	20 80 f0 c0 	move s1, s1
    2560:	40 00 00 8a 	store_sync s2, (s0)  
    2564:	82 ff ff f3 	bz s2, -16 <io_read_test+0x6c>
    2568:	20 00 00 a8 	load_32 s1, (s0)
    256c:	21 00 00 12 	cmpgt_i s1, s1, 0
    2570:	c1 ff ff f5 	bnz s1, -8 <io_read_test+0x80>
    2574:	ab 1b 00 f8 	call 28332 <get_current_thread_id>
    2578:	40 00 00 f4 	bnz s0, 8 <io_read_test+0x98>
    257c:	08 00 00 f6 	b 32 <io_read_test+0xb4>
    2580:	a8 1b 00 f8 	call 28320 <get_current_thread_id>
    2584:	40 00 00 f4 	bnz s0, 8 <io_read_test+0xa4>
    2588:	09 00 00 f6 	b 36 <io_read_test+0xc4>
    258c:	fe e3 01 a8 	load_32 ra, 120(sp)
    2590:	1e f3 01 a8 	load_32 s24, 124(sp)
    2594:	de 03 02 05 	add_i sp, sp, 128
    2598:	1f 00 00 f0 	ret
    259c:	00 f8 ff 0f 	move s0, -2
    25a0:	14 00 00 8c 	setcr s0, 20
    25a4:	9f 1b 00 f8 	call 28284 <get_current_thread_id>
    25a8:	20 ff ff f5 	bnz s0, -28 <io_read_test+0xa4>
    25ac:	9f 1b 00 f8 	call 28284 <get_cycle_count>
    25b0:	00 00 6c c0 	sub_i s0, s0, s24
    25b4:	20 00 00 4f 	movehi s1, 0
    25b8:	00 00 a0 c2 	itof s0, s0
    25bc:	21 20 05 00 	or s1, s1, 328
    25c0:	21 00 00 a8 	load_32 s1, (s1)
    25c4:	00 80 20 c2 	mul_f s0, s0, s1
    25c8:	20 00 00 4f 	movehi s1, 0
    25cc:	21 4c 0b 00 	or s1, s1, 723
    25d0:	3e 00 00 88 	store_32 s1, (sp)
    25d4:	1e 10 00 88 	store_32 s0, 4(sp)
    25d8:	a0 00 00 f8 	call 640 <printf>
    25dc:	fe e3 01 a8 	load_32 ra, 120(sp)
    25e0:	1e f3 01 a8 	load_32 s24, 124(sp)
    25e4:	de 03 02 05 	add_i sp, sp, 128
    25e8:	1f 00 00 f0 	ret

00000000000025ec io_write_test:
    25ec:	de 03 fe 05 	add_i sp, sp, -128
    25f0:	1e f3 01 88 	store_32 s24, 124(sp)
    25f4:	fe e3 01 88 	store_32 ra, 120(sp)
    25f8:	8c 1b 00 f8 	call 28208 <get_cycle_count>
    25fc:	00 03 f0 c0 	move s24, s0
    2600:	d9 18 00 f8 	call 25444 <start_all_threads>
    2604:	06 00 00 4f 	movehi s0, 6
    2608:	00 50 04 00 	or s0, s0, 276
    260c:	20 00 00 aa 	load_sync s1, (s0)
    2610:	41 04 00 05 	add_i s2, s1, 1
    2614:	20 80 f0 c0 	move s1, s1
    2618:	40 00 00 8a 	store_sync s2, (s0)  
    261c:	82 ff ff f3 	bz s2, -16 <io_write_test+0x20>
    2620:	58 fc ff 4f 	movehi s2, 524280
    2624:	20 00 00 0f 	move s1, 0
    2628:	42 10 00 00 	or s2, s2, 4
    262c:	60 80 f0 c0 	move s3, s1
    2630:	63 20 00 05 	add_i s3, s3, 8
    2634:	22 00 00 88 	store_32 s1, (s2)
    2638:	22 00 00 88 	store_32 s1, (s2)
    263c:	22 00 00 88 	store_32 s1, (s2)
    2640:	83 00 10 18 	cmplt_u s4, s3, 1024
    2644:	22 00 00 88 	store_32 s1, (s2)
    2648:	22 00 00 88 	store_32 s1, (s2)
    264c:	22 00 00 88 	store_32 s1, (s2)
    2650:	22 00 00 88 	store_32 s1, (s2)
    2654:	22 00 00 88 	store_32 s1, (s2)
    2658:	c4 fe ff f5 	bnz s4, -40 <io_write_test+0x44>
    265c:	20 00 00 aa 	load_sync s1, (s0)
    2660:	41 fc ff 05 	add_i s2, s1, -1
    2664:	20 80 f0 c0 	move s1, s1
    2668:	40 00 00 8a 	store_sync s2, (s0)  
    266c:	82 ff ff f3 	bz s2, -16 <io_write_test+0x70>
    2670:	20 00 00 a8 	load_32 s1, (s0)
    2674:	21 00 00 12 	cmpgt_i s1, s1, 0
    2678:	c1 ff ff f5 	bnz s1, -8 <io_write_test+0x84>
    267c:	69 1b 00 f8 	call 28068 <get_current_thread_id>
    2680:	40 00 00 f4 	bnz s0, 8 <io_write_test+0x9c>
    2684:	08 00 00 f6 	b 32 <io_write_test+0xb8>
    2688:	66 1b 00 f8 	call 28056 <get_current_thread_id>
    268c:	40 00 00 f4 	bnz s0, 8 <io_write_test+0xa8>
    2690:	09 00 00 f6 	b 36 <io_write_test+0xc8>
    2694:	fe e3 01 a8 	load_32 ra, 120(sp)
    2698:	1e f3 01 a8 	load_32 s24, 124(sp)
    269c:	de 03 02 05 	add_i sp, sp, 128
    26a0:	1f 00 00 f0 	ret
    26a4:	00 f8 ff 0f 	move s0, -2
    26a8:	14 00 00 8c 	setcr s0, 20
    26ac:	5d 1b 00 f8 	call 28020 <get_current_thread_id>
    26b0:	20 ff ff f5 	bnz s0, -28 <io_write_test+0xa8>
    26b4:	5d 1b 00 f8 	call 28020 <get_cycle_count>
    26b8:	00 00 6c c0 	sub_i s0, s0, s24
    26bc:	20 00 00 4f 	movehi s1, 0
    26c0:	00 00 a0 c2 	itof s0, s0
    26c4:	21 20 05 00 	or s1, s1, 328
    26c8:	21 00 00 a8 	load_32 s1, (s1)
    26cc:	00 80 20 c2 	mul_f s0, s0, s1
    26d0:	20 00 00 4f 	movehi s1, 0
    26d4:	21 5c 10 00 	or s1, s1, 1047
    26d8:	3e 00 00 88 	store_32 s1, (sp)
    26dc:	1e 10 00 88 	store_32 s0, 4(sp)
    26e0:	5e 00 00 f8 	call 376 <printf>
    26e4:	fe e3 01 a8 	load_32 ra, 120(sp)
    26e8:	1e f3 01 a8 	load_32 s24, 124(sp)
    26ec:	de 03 02 05 	add_i sp, sp, 128
    26f0:	1f 00 00 f0 	ret

00000000000026f4 main:
    26f4:	de 03 fe 05 	add_i sp, sp, -128
    26f8:	1e f3 01 88 	store_32 s24, 124(sp)
    26fc:	3e e3 01 88 	store_32 s25, 120(sp)
    2700:	fe d3 01 88 	store_32 ra, 116(sp)
    2704:	63 fe ff f9 	call -1652 <copy_test>
    2708:	46 1b 00 f8 	call 27928 <get_current_thread_id>
    270c:	00 28 00 0b 	shl s0, s0, 10
    2710:	20 20 00 4f 	movehi s1, 256
    2714:	20 83 50 c0 	add_i s25, s0, s1
    2718:	44 1b 00 f8 	call 27920 <get_cycle_count>
    271c:	00 03 f0 c0 	move s24, s0
    2720:	91 18 00 f8 	call 25156 <start_all_threads>
    2724:	06 00 00 4f 	movehi s0, 6
    2728:	00 50 04 00 	or s0, s0, 276
    272c:	20 00 00 aa 	load_sync s1, (s0)
    2730:	41 04 00 05 	add_i s2, s1, 1
    2734:	20 80 f0 c0 	move s1, s1
    2738:	40 00 00 8a 	store_sync s2, (s0)  
    273c:	82 ff ff f3 	bz s2, -16 <main+0x38>
    2740:	20 00 08 0f 	move s1, 512
    2744:	19 00 00 ae 	load_v v0, (s25)
    2748:	21 fc ff 05 	add_i s1, s1, -1
    274c:	19 00 01 ae 	load_v v0, 64(s25)
    2750:	19 00 02 ae 	load_v v0, 128(s25)
    2754:	19 00 03 ae 	load_v v0, 192(s25)
    2758:	19 00 04 ae 	load_v v0, 256(s25)
    275c:	19 00 05 ae 	load_v v0, 320(s25)
    2760:	19 00 06 ae 	load_v v0, 384(s25)
    2764:	19 00 07 ae 	load_v v0, 448(s25)
    2768:	19 00 08 ae 	load_v v0, 512(s25)
    276c:	19 00 09 ae 	load_v v0, 576(s25)
    2770:	19 00 0a ae 	load_v v0, 640(s25)
    2774:	19 00 0b ae 	load_v v0, 704(s25)
    2778:	19 00 0c ae 	load_v v0, 768(s25)
    277c:	19 00 0d ae 	load_v v0, 832(s25)
    2780:	19 00 0e ae 	load_v v0, 896(s25)
    2784:	19 00 0f ae 	load_v v0, 960(s25)
    2788:	39 03 40 05 	add_i s25, s25, 4096
    278c:	c1 fd ff f5 	bnz s1, -72 <main+0x50>
    2790:	20 00 00 aa 	load_sync s1, (s0)
    2794:	41 fc ff 05 	add_i s2, s1, -1
    2798:	20 80 f0 c0 	move s1, s1
    279c:	40 00 00 8a 	store_sync s2, (s0)  
    27a0:	82 ff ff f3 	bz s2, -16 <main+0x9c>
    27a4:	20 00 00 a8 	load_32 s1, (s0)
    27a8:	21 00 00 12 	cmpgt_i s1, s1, 0
    27ac:	c1 ff ff f5 	bnz s1, -8 <main+0xb0>
    27b0:	1c 1b 00 f8 	call 27760 <get_current_thread_id>
    27b4:	40 00 00 f4 	bnz s0, 8 <main+0xc8>
    27b8:	0d 00 00 f6 	b 52 <main+0xf8>
    27bc:	19 1b 00 f8 	call 27748 <get_current_thread_id>
    27c0:	40 00 00 f4 	bnz s0, 8 <main+0xd4>
    27c4:	0e 00 00 f6 	b 56 <main+0x108>
    27c8:	f1 fe ff f9 	call -1084 <write_test>
    27cc:	47 ff ff f9 	call -740 <io_read_test>
    27d0:	87 ff ff f9 	call -484 <io_write_test>
    27d4:	fe d3 01 a8 	load_32 ra, 116(sp)
    27d8:	00 00 00 0f 	move s0, 0
    27dc:	3e e3 01 a8 	load_32 s25, 120(sp)
    27e0:	1e f3 01 a8 	load_32 s24, 124(sp)
    27e4:	de 03 02 05 	add_i sp, sp, 128
    27e8:	1f 00 00 f0 	ret
    27ec:	00 f8 ff 0f 	move s0, -2
    27f0:	14 00 00 8c 	setcr s0, 20
    27f4:	0b 1b 00 f8 	call 27692 <get_current_thread_id>
    27f8:	80 fe ff f5 	bnz s0, -48 <main+0xd4>
    27fc:	0b 1b 00 f8 	call 27692 <get_cycle_count>
    2800:	00 00 6c c0 	sub_i s0, s0, s24
    2804:	20 00 00 4f 	movehi s1, 0
    2808:	00 00 a0 c2 	itof s0, s0
    280c:	21 10 05 00 	or s1, s1, 324
    2810:	21 00 00 a8 	load_32 s1, (s1)
    2814:	40 00 c0 c1 	reciprocal s2, s0
    2818:	62 00 20 c2 	mul_f s3, s2, s0
    281c:	61 80 11 c2 	sub_f s3, s1, s3
    2820:	42 80 21 c2 	mul_f s2, s2, s3
    2824:	60 00 00 4f 	movehi s3, 0
    2828:	02 00 20 c2 	mul_f s0, s2, s0
    282c:	01 00 10 c2 	sub_f s0, s1, s0
    2830:	23 30 05 00 	or s1, s3, 332
    2834:	02 00 20 c2 	mul_f s0, s2, s0
    2838:	21 00 00 a8 	load_32 s1, (s1)
    283c:	00 80 20 c2 	mul_f s0, s0, s1
    2840:	20 00 00 4f 	movehi s1, 0
    2844:	21 30 07 00 	or s1, s1, 460
    2848:	3e 00 00 88 	store_32 s1, (sp)
    284c:	1e 10 00 88 	store_32 s0, 4(sp)
    2850:	02 00 00 f8 	call 8 <printf>
    2854:	dd ff ff f7 	b -140 <main+0xd4>

0000000000002858 printf:
    2858:	de 03 ff 05 	add_i sp, sp, -64
    285c:	fe f3 00 88 	store_32 ra, 60(sp)
    2860:	06 00 00 4f 	movehi s0, 6
    2864:	3e 00 01 a8 	load_32 s1, 64(sp)
    2868:	5e 10 01 05 	add_i s2, sp, 68
    286c:	5e e0 00 88 	store_32 s2, 56(sp)
    2870:	00 00 00 00 	nop
    2874:	00 00 00 a8 	load_32 s0, (s0)
    2878:	c9 14 00 f8 	call 21284 <vfprintf>
    287c:	00 00 00 0f 	move s0, 0
    2880:	fe f3 00 a8 	load_32 ra, 60(sp)
    2884:	de 03 01 05 	add_i sp, sp, 64
    2888:	1f 00 00 f0 	ret

000000000000288c sprintf:
    288c:	de 03 ff 05 	add_i sp, sp, -64
    2890:	1e f3 00 88 	store_32 s24, 60(sp)
    2894:	3e e3 00 88 	store_32 s25, 56(sp)
    2898:	5e d3 00 88 	store_32 s26, 52(sp)
    289c:	fe c3 00 88 	store_32 ra, 48(sp)
    28a0:	1e 43 00 05 	add_i s24, sp, 16
    28a4:	3e 10 01 a8 	load_32 s1, 68(sp)
    28a8:	1e 00 01 a8 	load_32 s0, 64(sp)
    28ac:	40 03 00 0f 	move s26, 0
    28b0:	1e 40 00 88 	store_32 s0, 16(sp)
    28b4:	1f fc 7f 4f 	movehi s0, 262143
    28b8:	38 13 00 00 	or s25, s24, 4
    28bc:	5e 20 01 05 	add_i s2, sp, 72
    28c0:	00 fc 7f 00 	or s0, s0, 8191
    28c4:	59 03 00 88 	store_32 s26, (s25)
    28c8:	1e 60 00 88 	store_32 s0, 24(sp)
    28cc:	5e 73 00 88 	store_32 s26, 28(sp)
    28d0:	5e 90 00 88 	store_32 s2, 36(sp)
    28d4:	00 00 fc c0 	move s0, s24
    28d8:	b1 14 00 f8 	call 21188 <vfprintf>
    28dc:	06 00 00 4f 	movehi s0, 6
    28e0:	5e b3 00 88 	store_32 s26, 44(sp)
    28e4:	00 00 00 00 	nop
    28e8:	00 00 00 a8 	load_32 s0, (s0)
    28ec:	00 00 1c c1 	cmpne_i s0, s0, s24
    28f0:	40 00 00 f4 	bnz s0, 8 <sprintf+0x6c>
    28f4:	0c 00 00 f6 	b 48 <sprintf+0x98>
    28f8:	1e 40 00 a8 	load_32 s0, 16(sp)
    28fc:	e0 01 00 f2 	bz s0, 60 <sprintf+0xac>
    2900:	39 00 00 a8 	load_32 s1, (s25)
    2904:	5e 60 00 a8 	load_32 s2, 24(sp)
    2908:	41 00 31 c1 	cmpge_i s2, s1, s2
    290c:	e2 01 00 f4 	bnz s2, 60 <sprintf+0xbc>
    2910:	00 80 50 c0 	add_i s0, s0, s1
    2914:	21 04 00 05 	add_i s1, s1, 1
    2918:	39 00 00 88 	store_32 s1, (s25)
    291c:	40 03 00 82 	store_8 s26, (s0)
    2920:	0a 00 00 f6 	b 40 <sprintf+0xbc>
    2924:	1e ac 00 05 	add_i s0, sp, 43
    2928:	5e af 00 82 	store_8 s26, 43(sp)
    292c:	20 04 00 0f 	move s1, 1
    2930:	18 18 00 f8 	call 24672 <write_console>
    2934:	05 00 00 f6 	b 20 <sprintf+0xbc>
    2938:	1e 70 00 a8 	load_32 s0, 28(sp)
    293c:	3e b0 00 05 	add_i s1, sp, 44
    2940:	40 04 00 0f 	move s2, 1
    2944:	fb 19 00 f8 	call 26604 <write>
    2948:	19 00 00 a8 	load_32 s0, (s25)
    294c:	fe c3 00 a8 	load_32 ra, 48(sp)
    2950:	5e d3 00 a8 	load_32 s26, 52(sp)
    2954:	3e e3 00 a8 	load_32 s25, 56(sp)
    2958:	1e f3 00 a8 	load_32 s24, 60(sp)
    295c:	de 03 01 05 	add_i sp, sp, 64
    2960:	1f 00 00 f0 	ret

0000000000002964 fputc:
    2964:	de 03 ff 05 	add_i sp, sp, -64
    2968:	fe f3 00 88 	store_32 ra, 60(sp)
    296c:	46 00 00 4f 	movehi s2, 6
    2970:	1e e0 00 88 	store_32 s0, 56(sp)
    2974:	42 00 00 00 	or s2, s2, 0
    2978:	42 00 00 a8 	load_32 s2, (s2)
    297c:	42 80 10 c1 	cmpne_i s2, s2, s1
    2980:	42 00 00 f4 	bnz s2, 8 <fputc+0x24>
    2984:	0f 00 00 f6 	b 60 <fputc+0x5c>
    2988:	41 00 00 a8 	load_32 s2, (s1)
    298c:	a2 02 00 f2 	bz s2, 84 <fputc+0x7c>
    2990:	61 10 00 a8 	load_32 s3, 4(s1)
    2994:	81 20 00 a8 	load_32 s4, 8(s1)
    2998:	83 00 32 c1 	cmpge_i s4, s3, s4
    299c:	a4 00 00 f4 	bnz s4, 20 <fputc+0x4c>
    29a0:	42 80 51 c0 	add_i s2, s2, s3
    29a4:	63 04 00 05 	add_i s3, s3, 1
    29a8:	61 10 00 88 	store_32 s3, 4(s1)
    29ac:	02 00 00 82 	store_8 s0, (s2)
    29b0:	00 04 00 0f 	move s0, 1
    29b4:	fe f3 00 a8 	load_32 ra, 60(sp)
    29b8:	de 03 01 05 	add_i sp, sp, 64
    29bc:	1f 00 00 f0 	ret
    29c0:	1e dc 00 82 	store_8 s0, 55(sp)
    29c4:	1e dc 00 05 	add_i s0, sp, 55
    29c8:	20 04 00 0f 	move s1, 1
    29cc:	f1 17 00 f8 	call 24516 <write_console>
    29d0:	00 04 00 0f 	move s0, 1
    29d4:	fe f3 00 a8 	load_32 ra, 60(sp)
    29d8:	de 03 01 05 	add_i sp, sp, 64
    29dc:	1f 00 00 f0 	ret
    29e0:	01 30 00 a8 	load_32 s0, 12(s1)
    29e4:	3e e0 00 05 	add_i s1, sp, 56
    29e8:	40 04 00 0f 	move s2, 1
    29ec:	d1 19 00 f8 	call 26436 <write>
    29f0:	00 04 00 0f 	move s0, 1
    29f4:	fe f3 00 a8 	load_32 ra, 60(sp)
    29f8:	de 03 01 05 	add_i sp, sp, 64
    29fc:	1f 00 00 f0 	ret

0000000000002a00 snprintf:
    2a00:	de 03 ff 05 	add_i sp, sp, -64
    2a04:	1e f3 00 88 	store_32 s24, 60(sp)
    2a08:	3e e3 00 88 	store_32 s25, 56(sp)
    2a0c:	5e d3 00 88 	store_32 s26, 52(sp)
    2a10:	fe c3 00 88 	store_32 ra, 48(sp)
    2a14:	1e 43 00 05 	add_i s24, sp, 16
    2a18:	3e 20 01 a8 	load_32 s1, 72(sp)
    2a1c:	1e 10 01 a8 	load_32 s0, 68(sp)
    2a20:	40 03 00 0f 	move s26, 0
    2a24:	5e 00 01 a8 	load_32 s2, 64(sp)
    2a28:	38 13 00 00 	or s25, s24, 4
    2a2c:	5e 40 00 88 	store_32 s2, 16(sp)
    2a30:	5e 30 01 05 	add_i s2, sp, 76
    2a34:	59 03 00 88 	store_32 s26, (s25)
    2a38:	1e 60 00 88 	store_32 s0, 24(sp)
    2a3c:	5e 73 00 88 	store_32 s26, 28(sp)
    2a40:	5e 90 00 88 	store_32 s2, 36(sp)
    2a44:	00 00 fc c0 	move s0, s24
    2a48:	55 14 00 f8 	call 20820 <vfprintf>
    2a4c:	06 00 00 4f 	movehi s0, 6
    2a50:	5e b3 00 88 	store_32 s26, 44(sp)
    2a54:	00 00 00 00 	nop
    2a58:	00 00 00 a8 	load_32 s0, (s0)
    2a5c:	00 00 1c c1 	cmpne_i s0, s0, s24
    2a60:	40 00 00 f4 	bnz s0, 8 <snprintf+0x68>
    2a64:	0c 00 00 f6 	b 48 <snprintf+0x94>
    2a68:	1e 40 00 a8 	load_32 s0, 16(sp)
    2a6c:	e0 01 00 f2 	bz s0, 60 <snprintf+0xa8>
    2a70:	39 00 00 a8 	load_32 s1, (s25)
    2a74:	5e 60 00 a8 	load_32 s2, 24(sp)
    2a78:	41 00 31 c1 	cmpge_i s2, s1, s2
    2a7c:	e2 01 00 f4 	bnz s2, 60 <snprintf+0xb8>
    2a80:	00 80 50 c0 	add_i s0, s0, s1
    2a84:	21 04 00 05 	add_i s1, s1, 1
    2a88:	39 00 00 88 	store_32 s1, (s25)
    2a8c:	40 03 00 82 	store_8 s26, (s0)
    2a90:	0a 00 00 f6 	b 40 <snprintf+0xb8>
    2a94:	1e ac 00 05 	add_i s0, sp, 43
    2a98:	5e af 00 82 	store_8 s26, 43(sp)
    2a9c:	20 04 00 0f 	move s1, 1
    2aa0:	bc 17 00 f8 	call 24304 <write_console>
    2aa4:	05 00 00 f6 	b 20 <snprintf+0xb8>
    2aa8:	1e 70 00 a8 	load_32 s0, 28(sp)
    2aac:	3e b0 00 05 	add_i s1, sp, 44
    2ab0:	40 04 00 0f 	move s2, 1
    2ab4:	9f 19 00 f8 	call 26236 <write>
    2ab8:	19 00 00 a8 	load_32 s0, (s25)
    2abc:	fe c3 00 a8 	load_32 ra, 48(sp)
    2ac0:	5e d3 00 a8 	load_32 s26, 52(sp)
    2ac4:	3e e3 00 a8 	load_32 s25, 56(sp)
    2ac8:	1e f3 00 a8 	load_32 s24, 60(sp)
    2acc:	de 03 01 05 	add_i sp, sp, 64
    2ad0:	1f 00 00 f0 	ret

0000000000002ad4 vsnprintf:
    2ad4:	de 03 ff 05 	add_i sp, sp, -64
    2ad8:	1e f3 00 88 	store_32 s24, 60(sp)
    2adc:	3e e3 00 88 	store_32 s25, 56(sp)
    2ae0:	5e d3 00 88 	store_32 s26, 52(sp)
    2ae4:	fe c3 00 88 	store_32 ra, 48(sp)
    2ae8:	1e 63 00 05 	add_i s24, sp, 24
    2aec:	1e 60 00 88 	store_32 s0, 24(sp)
    2af0:	40 03 00 0f 	move s26, 0
    2af4:	38 13 00 00 	or s25, s24, 4
    2af8:	59 03 00 88 	store_32 s26, (s25)
    2afc:	3e 80 00 88 	store_32 s1, 32(sp)
    2b00:	5e 93 00 88 	store_32 s26, 36(sp)
    2b04:	00 00 fc c0 	move s0, s24
    2b08:	20 00 f1 c0 	move s1, s2
    2b0c:	40 80 f1 c0 	move s2, s3
    2b10:	23 14 00 f8 	call 20620 <vfprintf>
    2b14:	06 00 00 4f 	movehi s0, 6
    2b18:	5e b3 00 88 	store_32 s26, 44(sp)
    2b1c:	00 00 00 00 	nop
    2b20:	00 00 00 a8 	load_32 s0, (s0)
    2b24:	00 00 1c c1 	cmpne_i s0, s0, s24
    2b28:	40 00 00 f4 	bnz s0, 8 <vsnprintf+0x5c>
    2b2c:	0c 00 00 f6 	b 48 <vsnprintf+0x88>
    2b30:	1e 60 00 a8 	load_32 s0, 24(sp)
    2b34:	e0 01 00 f2 	bz s0, 60 <vsnprintf+0x9c>
    2b38:	39 00 00 a8 	load_32 s1, (s25)
    2b3c:	5e 80 00 a8 	load_32 s2, 32(sp)
    2b40:	41 00 31 c1 	cmpge_i s2, s1, s2
    2b44:	e2 01 00 f4 	bnz s2, 60 <vsnprintf+0xac>
    2b48:	00 80 50 c0 	add_i s0, s0, s1
    2b4c:	21 04 00 05 	add_i s1, s1, 1
    2b50:	39 00 00 88 	store_32 s1, (s25)
    2b54:	40 03 00 82 	store_8 s26, (s0)
    2b58:	0a 00 00 f6 	b 40 <vsnprintf+0xac>
    2b5c:	1e ac 00 05 	add_i s0, sp, 43
    2b60:	5e af 00 82 	store_8 s26, 43(sp)
    2b64:	20 04 00 0f 	move s1, 1
    2b68:	8a 17 00 f8 	call 24104 <write_console>
    2b6c:	05 00 00 f6 	b 20 <vsnprintf+0xac>
    2b70:	1e 90 00 a8 	load_32 s0, 36(sp)
    2b74:	3e b0 00 05 	add_i s1, sp, 44
    2b78:	40 04 00 0f 	move s2, 1
    2b7c:	6d 19 00 f8 	call 26036 <write>
    2b80:	19 00 00 a8 	load_32 s0, (s25)
    2b84:	fe c3 00 a8 	load_32 ra, 48(sp)
    2b88:	5e d3 00 a8 	load_32 s26, 52(sp)
    2b8c:	3e e3 00 a8 	load_32 s25, 56(sp)
    2b90:	1e f3 00 a8 	load_32 s24, 60(sp)
    2b94:	de 03 01 05 	add_i sp, sp, 64
    2b98:	1f 00 00 f0 	ret

0000000000002b9c putchar:
    2b9c:	de 03 ff 05 	add_i sp, sp, -64
    2ba0:	1e f3 00 88 	store_32 s24, 60(sp)
    2ba4:	fe e3 00 88 	store_32 ra, 56(sp)
    2ba8:	00 07 00 0f 	move s24, 1
    2bac:	1e dc 00 82 	store_8 s0, 55(sp)
    2bb0:	1e dc 00 05 	add_i s0, sp, 55
    2bb4:	20 00 fc c0 	move s1, s24
    2bb8:	76 17 00 f8 	call 24024 <write_console>
    2bbc:	00 00 fc c0 	move s0, s24
    2bc0:	fe e3 00 a8 	load_32 ra, 56(sp)
    2bc4:	1e f3 00 a8 	load_32 s24, 60(sp)
    2bc8:	de 03 01 05 	add_i sp, sp, 64
    2bcc:	1f 00 00 f0 	ret

0000000000002bd0 puts:
    2bd0:	de 03 ff 05 	add_i sp, sp, -64
    2bd4:	1e f3 00 88 	store_32 s24, 60(sp)
    2bd8:	3e e3 00 88 	store_32 s25, 56(sp)
    2bdc:	5e d3 00 88 	store_32 s26, 52(sp)
    2be0:	7e c3 00 88 	store_32 s27, 48(sp)
    2be4:	fe b3 00 88 	store_32 ra, 44(sp)
    2be8:	00 03 f0 c0 	move s24, s0
    2bec:	18 00 00 a0 	load_u8 s0, (s24)
    2bf0:	1e 93 00 88 	store_32 s24, 36(sp)
    2bf4:	80 01 00 f2 	bz s0, 48 <puts+0x54>
    2bf8:	7e 93 00 a8 	load_32 s27, 36(sp)
    2bfc:	3e ab 00 05 	add_i s25, sp, 42
    2c00:	40 07 00 0f 	move s26, 1
    2c04:	1e a8 00 82 	store_8 s0, 42(sp)
    2c08:	00 80 fc c0 	move s0, s25
    2c0c:	20 00 fd c0 	move s1, s26
    2c10:	60 17 00 f8 	call 23936 <write_console>
    2c14:	1b 07 00 05 	add_i s24, s27, 1
    2c18:	1b 04 00 a0 	load_u8 s0, 1(s27)
    2c1c:	60 03 fc c0 	move s27, s24
    2c20:	20 ff ff f5 	bnz s0, -28 <puts+0x34>
    2c24:	20 07 00 0f 	move s25, 1
    2c28:	00 28 00 0f 	move s0, 10
    2c2c:	1e ac 00 82 	store_8 s0, 43(sp)
    2c30:	1e ac 00 05 	add_i s0, sp, 43
    2c34:	20 80 fc c0 	move s1, s25
    2c38:	56 17 00 f8 	call 23896 <write_console>
    2c3c:	1e 90 00 a8 	load_32 s0, 36(sp)
    2c40:	fe b3 00 a8 	load_32 ra, 44(sp)
    2c44:	7e c3 00 a8 	load_32 s27, 48(sp)
    2c48:	5e d3 00 a8 	load_32 s26, 52(sp)
    2c4c:	19 00 60 c0 	sub_i s0, s25, s0
    2c50:	3e e3 00 a8 	load_32 s25, 56(sp)
    2c54:	00 00 5c c0 	add_i s0, s0, s24
    2c58:	1e f3 00 a8 	load_32 s24, 60(sp)
    2c5c:	de 03 01 05 	add_i sp, sp, 64
    2c60:	1f 00 00 f0 	ret

0000000000002c64 fputs:
    2c64:	de 03 ff 05 	add_i sp, sp, -64
    2c68:	1e f3 00 88 	store_32 s24, 60(sp)
    2c6c:	3e e3 00 88 	store_32 s25, 56(sp)
    2c70:	5e d3 00 88 	store_32 s26, 52(sp)
    2c74:	7e c3 00 88 	store_32 s27, 48(sp)
    2c78:	fe b3 00 88 	store_32 ra, 44(sp)
    2c7c:	80 00 00 a0 	load_u8 s4, (s0)
    2c80:	20 83 f0 c0 	move s25, s1
    2c84:	1e 60 00 88 	store_32 s0, 24(sp)
    2c88:	20 00 f0 c0 	move s1, s0
    2c8c:	e4 05 00 f2 	bz s4, 188 <fputs+0xe4>
    2c90:	26 00 00 4f 	movehi s1, 6
    2c94:	1e 9c 00 05 	add_i s0, sp, 39
    2c98:	1e 80 00 88 	store_32 s0, 32(sp)
    2c9c:	1e a0 00 05 	add_i s0, sp, 40
    2ca0:	1e 70 00 88 	store_32 s0, 28(sp)
    2ca4:	5e 63 00 a8 	load_32 s26, 24(sp)
    2ca8:	01 03 00 00 	or s24, s1, 0
    2cac:	60 07 00 0f 	move s27, 1
    2cb0:	20 00 d2 c1 	sext_8 s1, s4
    2cb4:	3e a0 00 88 	store_32 s1, 40(sp)
    2cb8:	38 00 00 a8 	load_32 s1, (s24)
    2cbc:	21 80 1c c1 	cmpne_i s1, s1, s25
    2cc0:	41 00 00 f4 	bnz s1, 8 <fputs+0x64>
    2cc4:	10 00 00 f6 	b 64 <fputs+0xa0>
    2cc8:	39 00 00 a8 	load_32 s1, (s25)
    2ccc:	e1 02 00 f2 	bz s1, 92 <fputs+0xc4>
    2cd0:	59 10 00 a8 	load_32 s2, 4(s25)
    2cd4:	79 20 00 a8 	load_32 s3, 8(s25)
    2cd8:	62 80 31 c1 	cmpge_i s3, s2, s3
    2cdc:	a3 00 00 f4 	bnz s3, 20 <fputs+0x8c>
    2ce0:	21 00 51 c0 	add_i s1, s1, s2
    2ce4:	42 04 00 05 	add_i s2, s2, 1
    2ce8:	59 10 00 88 	store_32 s2, 4(s25)
    2cec:	81 00 00 82 	store_8 s4, (s1)
    2cf0:	3a 04 00 05 	add_i s1, s26, 1
    2cf4:	9a 04 00 a0 	load_u8 s4, 1(s26)
    2cf8:	40 83 f0 c0 	move s26, s1
    2cfc:	a4 fd ff f5 	bnz s4, -76 <fputs+0x4c>
    2d00:	12 00 00 f6 	b 72 <fputs+0xe4>
    2d04:	9e 9c 00 82 	store_8 s4, 39(sp)
    2d08:	1e 80 00 a8 	load_32 s0, 32(sp)
    2d0c:	20 80 fd c0 	move s1, s27
    2d10:	20 17 00 f8 	call 23680 <write_console>
    2d14:	3a 04 00 05 	add_i s1, s26, 1
    2d18:	9a 04 00 a0 	load_u8 s4, 1(s26)
    2d1c:	40 83 f0 c0 	move s26, s1
    2d20:	84 fc ff f5 	bnz s4, -112 <fputs+0x4c>
    2d24:	09 00 00 f6 	b 36 <fputs+0xe4>
    2d28:	19 30 00 a8 	load_32 s0, 12(s25)
    2d2c:	3e 70 00 a8 	load_32 s1, 28(sp)
    2d30:	40 80 fd c0 	move s2, s27
    2d34:	ff 18 00 f8 	call 25596 <write>
    2d38:	3a 04 00 05 	add_i s1, s26, 1
    2d3c:	9a 04 00 a0 	load_u8 s4, 1(s26)
    2d40:	40 83 f0 c0 	move s26, s1
    2d44:	64 fb ff f5 	bnz s4, -148 <fputs+0x4c>
    2d48:	1e 60 00 a8 	load_32 s0, 24(sp)
    2d4c:	fe b3 00 a8 	load_32 ra, 44(sp)
    2d50:	7e c3 00 a8 	load_32 s27, 48(sp)
    2d54:	5e d3 00 a8 	load_32 s26, 52(sp)
    2d58:	3e e3 00 a8 	load_32 s25, 56(sp)
    2d5c:	01 00 60 c0 	sub_i s0, s1, s0
    2d60:	1e f3 00 a8 	load_32 s24, 60(sp)
    2d64:	de 03 01 05 	add_i sp, sp, 64
    2d68:	1f 00 00 f0 	ret

0000000000002d6c fgetc:
    2d6c:	de 03 ff 05 	add_i sp, sp, -64
    2d70:	fe f3 00 88 	store_32 ra, 60(sp)
    2d74:	00 30 00 a8 	load_32 s0, 12(s0)
    2d78:	3e ec 00 05 	add_i s1, sp, 59
    2d7c:	40 04 00 0f 	move s2, 1
    2d80:	6a 18 00 f8 	call 25000 <read>
    2d84:	20 00 00 14 	cmplt_i s1, s0, 0
    2d88:	1e ec 00 a0 	load_u8 s0, 59(sp)
    2d8c:	41 00 00 f4 	bnz s1, 8 <fgetc+0x28>
    2d90:	02 00 00 f6 	b 8 <fgetc+0x2c>
    2d94:	00 fc ff 0f 	move s0, -1
    2d98:	fe f3 00 a8 	load_32 ra, 60(sp)
    2d9c:	de 03 01 05 	add_i sp, sp, 64
    2da0:	1f 00 00 f0 	ret

0000000000002da4 fopen:
    2da4:	de 03 ff 05 	add_i sp, sp, -64
    2da8:	1e f3 00 88 	store_32 s24, 60(sp)
    2dac:	3e e3 00 88 	store_32 s25, 56(sp)
    2db0:	fe d3 00 88 	store_32 ra, 52(sp)
    2db4:	00 03 00 0f 	move s24, 0
    2db8:	20 00 fc c0 	move s1, s24
    2dbc:	1e 17 00 f8 	call 23672 <open>
    2dc0:	20 03 f0 c0 	move s25, s0
    2dc4:	19 00 00 14 	cmplt_i s0, s25, 0
    2dc8:	e0 00 00 f4 	bnz s0, 28 <fopen+0x40>
    2dcc:	00 40 00 0f 	move s0, 16
    2dd0:	98 00 00 f8 	call 608 <malloc>
    2dd4:	00 03 f0 c0 	move s24, s0
    2dd8:	00 00 00 0f 	move s0, 0
    2ddc:	18 00 00 88 	store_32 s0, (s24)
    2de0:	38 33 00 88 	store_32 s25, 12(s24)
    2de4:	00 00 fc c0 	move s0, s24
    2de8:	fe d3 00 a8 	load_32 ra, 52(sp)
    2dec:	3e e3 00 a8 	load_32 s25, 56(sp)
    2df0:	1e f3 00 a8 	load_32 s24, 60(sp)
    2df4:	de 03 01 05 	add_i sp, sp, 64
    2df8:	1f 00 00 f0 	ret

0000000000002dfc fwrite:
    2dfc:	de 03 ff 05 	add_i sp, sp, -64
    2e00:	1e f3 00 88 	store_32 s24, 60(sp)
    2e04:	3e e3 00 88 	store_32 s25, 56(sp)
    2e08:	5e d3 00 88 	store_32 s26, 52(sp)
    2e0c:	7e c3 00 88 	store_32 s27, 48(sp)
    2e10:	fe b3 00 88 	store_32 ra, 44(sp)
    2e14:	5e 50 00 88 	store_32 s2, 20(sp)
    2e18:	20 83 f1 c0 	move s25, s3
    2e1c:	62 83 70 c0 	mull_i s27, s2, s1
    2e20:	40 03 f0 c0 	move s26, s0
    2e24:	5b 05 00 f2 	bz s27, 168 <fwrite+0xd0>
    2e28:	06 00 00 4f 	movehi s0, 6
    2e2c:	00 03 00 00 	or s24, s0, 0
    2e30:	1e 9c 00 05 	add_i s0, sp, 39
    2e34:	1e 70 00 88 	store_32 s0, 28(sp)
    2e38:	00 04 00 0f 	move s0, 1
    2e3c:	1e 80 00 88 	store_32 s0, 32(sp)
    2e40:	1e a0 00 05 	add_i s0, sp, 40
    2e44:	1e 60 00 88 	store_32 s0, 24(sp)
    2e48:	1a 00 00 a2 	load_s8 s0, (s26)
    2e4c:	7b ff ff 05 	add_i s27, s27, -1
    2e50:	1e a0 00 88 	store_32 s0, 40(sp)
    2e54:	38 00 00 a8 	load_32 s1, (s24)
    2e58:	21 80 1c c1 	cmpne_i s1, s1, s25
    2e5c:	41 00 00 f4 	bnz s1, 8 <fwrite+0x68>
    2e60:	0e 00 00 f6 	b 56 <fwrite+0x9c>
    2e64:	39 00 00 a8 	load_32 s1, (s25)
    2e68:	61 02 00 f2 	bz s1, 76 <fwrite+0xb8>
    2e6c:	59 10 00 a8 	load_32 s2, 4(s25)
    2e70:	79 20 00 a8 	load_32 s3, 8(s25)
    2e74:	62 80 31 c1 	cmpge_i s3, s2, s3
    2e78:	a3 00 00 f4 	bnz s3, 20 <fwrite+0x90>
    2e7c:	21 00 51 c0 	add_i s1, s1, s2
    2e80:	42 04 00 05 	add_i s2, s2, 1
    2e84:	59 10 00 88 	store_32 s2, 4(s25)
    2e88:	01 00 00 82 	store_8 s0, (s1)
    2e8c:	5a 07 00 05 	add_i s26, s26, 1
    2e90:	db fd ff f5 	bnz s27, -72 <fwrite+0x4c>
    2e94:	0e 00 00 f6 	b 56 <fwrite+0xd0>
    2e98:	1e 9c 00 82 	store_8 s0, 39(sp)
    2e9c:	1e 70 00 a8 	load_32 s0, 28(sp)
    2ea0:	3e 80 00 a8 	load_32 s1, 32(sp)
    2ea4:	bb 16 00 f8 	call 23276 <write_console>
    2ea8:	5a 07 00 05 	add_i s26, s26, 1
    2eac:	fb fc ff f5 	bnz s27, -100 <fwrite+0x4c>
    2eb0:	07 00 00 f6 	b 28 <fwrite+0xd0>
    2eb4:	19 30 00 a8 	load_32 s0, 12(s25)
    2eb8:	3e 60 00 a8 	load_32 s1, 24(sp)
    2ebc:	5e 80 00 a8 	load_32 s2, 32(sp)
    2ec0:	9c 18 00 f8 	call 25200 <write>
    2ec4:	5a 07 00 05 	add_i s26, s26, 1
    2ec8:	1b fc ff f5 	bnz s27, -128 <fwrite+0x4c>
    2ecc:	1e 50 00 a8 	load_32 s0, 20(sp)
    2ed0:	fe b3 00 a8 	load_32 ra, 44(sp)
    2ed4:	7e c3 00 a8 	load_32 s27, 48(sp)
    2ed8:	5e d3 00 a8 	load_32 s26, 52(sp)
    2edc:	3e e3 00 a8 	load_32 s25, 56(sp)
    2ee0:	1e f3 00 a8 	load_32 s24, 60(sp)
    2ee4:	de 03 01 05 	add_i sp, sp, 64
    2ee8:	1f 00 00 f0 	ret

0000000000002eec fread:
    2eec:	de 03 ff 05 	add_i sp, sp, -64
    2ef0:	1e f3 00 88 	store_32 s24, 60(sp)
    2ef4:	fe e3 00 88 	store_32 ra, 56(sp)
    2ef8:	00 83 f0 c0 	move s24, s1
    2efc:	20 00 f0 c0 	move s1, s0
    2f00:	03 30 00 a8 	load_32 s0, 12(s3)
    2f04:	42 00 7c c0 	mull_i s2, s2, s24
    2f08:	08 18 00 f8 	call 24608 <read>
    2f0c:	20 00 00 14 	cmplt_i s1, s0, 0
    2f10:	e1 00 00 f4 	bnz s1, 28 <fread+0x40>
    2f14:	20 00 fc c0 	move s1, s24
    2f18:	d9 1d 00 f8 	call 30564 <__udivsi3>
    2f1c:	fe e3 00 a8 	load_32 ra, 56(sp)
    2f20:	1e f3 00 a8 	load_32 s24, 60(sp)
    2f24:	de 03 01 05 	add_i sp, sp, 64
    2f28:	1f 00 00 f0 	ret
    2f2c:	00 00 00 0f 	move s0, 0
    2f30:	fe e3 00 a8 	load_32 ra, 56(sp)
    2f34:	1e f3 00 a8 	load_32 s24, 60(sp)
    2f38:	de 03 01 05 	add_i sp, sp, 64
    2f3c:	1f 00 00 f0 	ret

0000000000002f40 fclose:
    2f40:	de 03 ff 05 	add_i sp, sp, -64
    2f44:	1e f3 00 88 	store_32 s24, 60(sp)
    2f48:	3e e3 00 88 	store_32 s25, 56(sp)
    2f4c:	fe d3 00 88 	store_32 ra, 52(sp)
    2f50:	00 03 f0 c0 	move s24, s0
    2f54:	18 30 00 a8 	load_32 s0, 12(s24)
    2f58:	e0 17 00 f8 	call 24448 <close>
    2f5c:	20 03 f0 c0 	move s25, s0
    2f60:	00 00 fc c0 	move s0, s24
    2f64:	bd 07 00 f8 	call 7924 <free>
    2f68:	00 80 fc c0 	move s0, s25
    2f6c:	fe d3 00 a8 	load_32 ra, 52(sp)
    2f70:	3e e3 00 a8 	load_32 s25, 56(sp)
    2f74:	1e f3 00 a8 	load_32 s24, 60(sp)
    2f78:	de 03 01 05 	add_i sp, sp, 64
    2f7c:	1f 00 00 f0 	ret

0000000000002f80 fseek:
    2f80:	de 03 ff 05 	add_i sp, sp, -64
    2f84:	fe f3 00 88 	store_32 ra, 60(sp)
    2f88:	00 30 00 a8 	load_32 s0, 12(s0)
    2f8c:	73 18 00 f8 	call 25036 <lseek>
    2f90:	fe f3 00 a8 	load_32 ra, 60(sp)
    2f94:	de 03 01 05 	add_i sp, sp, 64
    2f98:	1f 00 00 f0 	ret

0000000000002f9c ftell:
    2f9c:	de 03 ff 05 	add_i sp, sp, -64
    2fa0:	fe f3 00 88 	store_32 ra, 60(sp)
    2fa4:	00 30 00 a8 	load_32 s0, 12(s0)
    2fa8:	20 00 00 0f 	move s1, 0
    2fac:	40 04 00 0f 	move s2, 1
    2fb0:	6a 18 00 f8 	call 25000 <lseek>
    2fb4:	fe f3 00 a8 	load_32 ra, 60(sp)
    2fb8:	de 03 01 05 	add_i sp, sp, 64
    2fbc:	1f 00 00 f0 	ret

0000000000002fc0 fprintf:
    2fc0:	de 03 ff 05 	add_i sp, sp, -64
    2fc4:	fe f3 00 88 	store_32 ra, 60(sp)
    2fc8:	1e 00 01 a8 	load_32 s0, 64(sp)
    2fcc:	5e 20 01 05 	add_i s2, sp, 72
    2fd0:	3e 10 01 a8 	load_32 s1, 68(sp)
    2fd4:	5e e0 00 88 	store_32 s2, 56(sp)
    2fd8:	f1 12 00 f8 	call 19396 <vfprintf>
    2fdc:	00 00 00 0f 	move s0, 0
    2fe0:	fe f3 00 a8 	load_32 ra, 60(sp)
    2fe4:	de 03 01 05 	add_i sp, sp, 64
    2fe8:	1f 00 00 f0 	ret

0000000000002fec fflush:
    2fec:	00 00 00 0f 	move s0, 0
    2ff0:	1f 00 00 f0 	ret

0000000000002ff4 ferror:
    2ff4:	00 00 00 0f 	move s0, 0
    2ff8:	1f 00 00 f0 	ret

0000000000002ffc ungetc:
    2ffc:	de 03 ff 05 	add_i sp, sp, -64
    3000:	1e f3 00 88 	store_32 s24, 60(sp)
    3004:	fe e3 00 88 	store_32 ra, 56(sp)
    3008:	00 03 f0 c0 	move s24, s0
    300c:	01 30 00 a8 	load_32 s0, 12(s1)
    3010:	20 fc ff 0f 	move s1, -1
    3014:	40 04 00 0f 	move s2, 1
    3018:	50 18 00 f8 	call 24896 <lseek>
    301c:	00 00 fc c0 	move s0, s24
    3020:	fe e3 00 a8 	load_32 ra, 56(sp)
    3024:	1e f3 00 a8 	load_32 s24, 60(sp)
    3028:	de 03 01 05 	add_i sp, sp, 64
    302c:	1f 00 00 f0 	ret

0000000000003030 malloc:
    3030:	de 03 ff 05 	add_i sp, sp, -64
    3034:	1e f3 00 88 	store_32 s24, 60(sp)
    3038:	3e e3 00 88 	store_32 s25, 56(sp)
    303c:	5e d3 00 88 	store_32 s26, 52(sp)
    3040:	7e c3 00 88 	store_32 s27, 48(sp)
    3044:	fe b3 00 88 	store_32 ra, 44(sp)
    3048:	26 00 00 4f 	movehi s1, 6
    304c:	21 e3 04 00 	or s25, s1, 312
    3050:	39 00 00 a8 	load_32 s1, (s25)
    3054:	61 05 00 f4 	bnz s1, 172 <malloc+0xd0>
    3058:	26 00 00 4f 	movehi s1, 6
    305c:	40 04 00 0f 	move s2, 1
    3060:	21 b0 0c 00 	or s1, s1, 812
    3064:	61 00 00 aa 	load_sync s3, (s1)
    3068:	80 00 f1 c0 	move s4, s2
    306c:	81 00 00 8a 	store_sync s4, (s1)  
    3070:	a4 ff ff f3 	bz s4, -12 <malloc+0x34>
    3074:	03 01 00 f2 	bz s3, 32 <malloc+0x64>
    3078:	61 00 00 a8 	load_32 s3, (s1)
    307c:	e3 ff ff f5 	bnz s3, -4 <malloc+0x48>
    3080:	61 00 00 aa 	load_sync s3, (s1)
    3084:	80 00 f1 c0 	move s4, s2
    3088:	81 00 00 8a 	store_sync s4, (s1)  
    308c:	a4 ff ff f3 	bz s4, -12 <malloc+0x50>
    3090:	43 ff ff f5 	bnz s3, -24 <malloc+0x48>
    3094:	59 00 00 a8 	load_32 s2, (s25)
    3098:	a2 02 00 f4 	bnz s2, 84 <malloc+0xbc>
    309c:	40 00 40 0f 	move s2, 4096
    30a0:	59 20 00 88 	store_32 s2, 8(s25)
    30a4:	59 10 00 88 	store_32 s2, 4(s25)
    30a8:	40 fc ff 0f 	move s2, -1
    30ac:	59 30 00 88 	store_32 s2, 12(s25)
    30b0:	46 00 00 4f 	movehi s2, 6
    30b4:	60 20 00 4f 	movehi s3, 256
    30b8:	79 40 00 88 	store_32 s3, 16(s25)
    30bc:	60 08 00 0f 	move s3, 2
    30c0:	79 50 00 88 	store_32 s3, 20(s25)
    30c4:	42 40 05 00 	or s2, s2, 336
    30c8:	aa 54 55 4f 	movehi s5, 174762
    30cc:	80 00 00 0f 	move s4, 0
    30d0:	62 f0 06 88 	store_32 s3, 444(s2)
    30d4:	7e 90 00 05 	add_i s3, sp, 36
    30d8:	82 00 07 88 	store_32 s4, 448(s2)
    30dc:	45 60 55 00 	or s2, s5, 5464
    30e0:	63 c0 ff 01 	and s3, s3, -16
    30e4:	43 00 31 c0 	xor s2, s3, s2
    30e8:	59 00 00 88 	store_32 s2, (s25)
    30ec:	40 00 00 0f 	move s2, 0
    30f0:	61 00 00 aa 	load_sync s3, (s1)
    30f4:	60 00 f1 c0 	move s3, s2
    30f8:	61 00 00 8a 	store_sync s3, (s1)  
    30fc:	a3 ff ff f3 	bz s3, -12 <malloc+0xc0>
    3100:	26 00 00 4f 	movehi s1, 6
    3104:	01 43 05 00 	or s24, s1, 336
    3108:	38 f0 06 a0 	load_u8 s1, 444(s24)
    310c:	21 08 00 01 	and s1, s1, 2
    3110:	e1 01 00 f2 	bz s1, 60 <malloc+0x11c>
    3114:	38 00 07 05 	add_i s1, s24, 448
    3118:	40 04 00 0f 	move s2, 1
    311c:	61 00 00 aa 	load_sync s3, (s1)
    3120:	80 00 f1 c0 	move s4, s2
    3124:	81 00 00 8a 	store_sync s4, (s1)  
    3128:	a4 ff ff f3 	bz s4, -12 <malloc+0xec>
    312c:	03 01 00 f2 	bz s3, 32 <malloc+0x11c>
    3130:	78 00 07 a8 	load_32 s3, 448(s24)
    3134:	e3 ff ff f5 	bnz s3, -4 <malloc+0x100>
    3138:	61 00 00 aa 	load_sync s3, (s1)
    313c:	80 00 f1 c0 	move s4, s2
    3140:	81 00 00 8a 	store_sync s4, (s1)  
    3144:	a4 ff ff f3 	bz s4, -12 <malloc+0x108>
    3148:	43 ff ff f5 	bnz s3, -24 <malloc+0x100>
    314c:	20 d0 03 16 	cmpgt_u s1, s0, 244
    3150:	c1 00 00 f4 	bnz s1, 24 <malloc+0x138>
    3154:	20 2c 00 18 	cmplt_u s1, s0, 11
    3158:	21 01 00 f4 	bnz s1, 36 <malloc+0x14c>
    315c:	00 2c 00 05 	add_i s0, s0, 11
    3160:	40 e3 ff 01 	and s26, s0, -8
    3164:	07 00 00 f6 	b 28 <malloc+0x150>
    3168:	20 fc fe 16 	cmpgt_u s1, s0, -65
    316c:	41 00 00 f4 	bnz s1, 8 <malloc+0x144>
    3170:	1d 00 00 f6 	b 116 <malloc+0x1b4>
    3174:	40 ff ff 0f 	move s26, -1
    3178:	6e 01 00 f6 	b 1464 <malloc+0x700>
    317c:	40 43 00 0f 	move s26, 16
    3180:	18 00 00 a8 	load_32 s0, (s24)
    3184:	5a 0c 00 0a 	shr s2, s26, 3
    3188:	60 00 a1 c0 	shr s3, s0, s2
    318c:	23 0c 00 01 	and s1, s3, 3
    3190:	81 04 00 f2 	bz s1, 144 <malloc+0x1f0>
    3194:	23 fc ff 03 	xor s1, s3, -1
    3198:	21 04 00 01 	and s1, s1, 1
    319c:	a1 00 51 c0 	add_i s5, s1, s2
    31a0:	25 0c 00 0b 	shl s1, s5, 3
    31a4:	98 80 50 c0 	add_i s4, s24, s1
    31a8:	44 c0 00 a8 	load_32 s2, 48(s4)
    31ac:	84 a0 00 05 	add_i s4, s4, 40
    31b0:	62 20 00 a8 	load_32 s3, 8(s2)
    31b4:	c3 00 12 c1 	cmpne_i s6, s3, s4
    31b8:	46 00 00 f4 	bnz s6, 8 <malloc+0x190>
    31bc:	4c 00 00 f6 	b 304 <malloc+0x2bc>
    31c0:	18 40 00 a8 	load_32 s0, 16(s24)
    31c4:	00 80 61 c1 	cmpgt_u s0, s0, s3
    31c8:	60 e4 00 f4 	bnz s0, 7308 <malloc+0x1e24>
    31cc:	03 30 00 a8 	load_32 s0, 12(s3)
    31d0:	00 00 11 c1 	cmpne_i s0, s0, s2
    31d4:	00 e4 00 f4 	bnz s0, 7296 <malloc+0x1e24>
    31d8:	83 30 00 88 	store_32 s4, 12(s3)
    31dc:	64 20 00 88 	store_32 s3, 8(s4)
    31e0:	48 00 00 f6 	b 288 <malloc+0x2d0>
    31e4:	00 2c 00 05 	add_i s0, s0, 11
    31e8:	38 10 00 a8 	load_32 s1, 4(s24)
    31ec:	40 e3 ff 01 	and s26, s0, -8
    31f0:	01 2a 00 f2 	bz s1, 1344 <malloc+0x700>
    31f4:	60 00 00 0f 	move s3, 0
    31f8:	00 20 00 0a 	shr s0, s0, 8
    31fc:	a0 80 f1 c0 	move s5, s3
    3200:	e0 0c 00 f2 	bz s0, 412 <malloc+0x36c>
    3204:	5f fc 00 4f 	movehi s2, 2047
    3208:	42 fc 7f 00 	or s2, s2, 8191
    320c:	5a 00 61 c1 	cmpgt_u s2, s26, s2
    3210:	42 00 00 f4 	bnz s2, 8 <malloc+0x1e8>
    3214:	46 00 00 f6 	b 280 <malloc+0x2fc>
    3218:	a0 7c 00 0f 	move s5, 31
    321c:	60 00 00 f6 	b 384 <malloc+0x36c>
    3220:	38 20 00 a8 	load_32 s1, 8(s24)
    3224:	9a 80 90 c1 	cmple_u s4, s26, s1
    3228:	44 28 00 f4 	bnz s4, 1288 <malloc+0x700>
    322c:	03 17 00 f2 	bz s3, 736 <malloc+0x4dc>
    3230:	80 08 00 0f 	move s4, 2
    3234:	a0 00 00 0f 	move s5, 0
    3238:	84 00 b1 c0 	shl s4, s4, s2
    323c:	43 00 b1 c0 	shl s2, s3, s2
    3240:	65 00 62 c0 	sub_i s3, s5, s4
    3244:	64 80 01 c0 	or s3, s4, s3
    3248:	42 80 11 c0 	and s2, s2, s3
    324c:	65 00 61 c0 	sub_i s3, s5, s2
    3250:	42 80 11 c0 	and s2, s2, s3
    3254:	42 fc ff 05 	add_i s2, s2, -1
    3258:	62 30 00 0a 	shr s3, s2, 12
    325c:	63 40 00 01 	and s3, s3, 16
    3260:	42 80 a1 c0 	shr s2, s2, s3
    3264:	82 14 00 0a 	shr s4, s2, 5
    3268:	84 20 00 01 	and s4, s4, 8
    326c:	42 00 a2 c0 	shr s2, s2, s4
    3270:	64 80 01 c0 	or s3, s4, s3
    3274:	a2 08 00 0a 	shr s5, s2, 2
    3278:	a5 10 00 01 	and s5, s5, 4
    327c:	42 80 a2 c0 	shr s2, s2, s5
    3280:	63 80 02 c0 	or s3, s3, s5
    3284:	c2 04 00 0a 	shr s6, s2, 1
    3288:	86 08 00 01 	and s4, s6, 2
    328c:	42 00 a2 c0 	shr s2, s2, s4
    3290:	63 00 02 c0 	or s3, s3, s4
    3294:	a2 04 00 0a 	shr s5, s2, 1
    3298:	85 04 00 01 	and s4, s5, 1
    329c:	63 00 02 c0 	or s3, s3, s4
    32a0:	42 00 a2 c0 	shr s2, s2, s4
    32a4:	c3 00 51 c0 	add_i s6, s3, s2
    32a8:	a6 0c 00 0b 	shl s5, s6, 3
    32ac:	98 80 52 c0 	add_i s4, s24, s5
    32b0:	44 c0 00 a8 	load_32 s2, 48(s4)
    32b4:	84 a0 00 05 	add_i s4, s4, 40
    32b8:	62 20 00 a8 	load_32 s3, 8(s2)
    32bc:	e3 00 12 c1 	cmpne_i s7, s3, s4
    32c0:	47 00 00 f4 	bnz s7, 8 <malloc+0x298>
    32c4:	a2 01 00 f6 	b 1672 <malloc+0x91c>
    32c8:	d8 40 00 a8 	load_32 s6, 16(s24)
    32cc:	c6 80 61 c1 	cmpgt_u s6, s6, s3
    32d0:	26 dc 00 f4 	bnz s6, 7044 <malloc+0x1e24>
    32d4:	c3 30 00 a8 	load_32 s6, 12(s3)
    32d8:	c6 00 11 c1 	cmpne_i s6, s6, s2
    32dc:	c6 db 00 f4 	bnz s6, 7032 <malloc+0x1e24>
    32e0:	83 30 00 88 	store_32 s4, 12(s3)
    32e4:	64 20 00 88 	store_32 s3, 8(s4)
    32e8:	9e 01 00 f6 	b 1656 <malloc+0x930>
    32ec:	60 04 00 0f 	move s3, 1
    32f0:	63 80 b2 c0 	shl s3, s3, s5
    32f4:	63 fc ff 03 	xor s3, s3, -1
    32f8:	00 80 11 c0 	and s0, s0, s3
    32fc:	18 00 00 88 	store_32 s0, (s24)
    3300:	02 80 50 c0 	add_i s0, s2, s1
    3304:	21 0c 00 00 	or s1, s1, 3
    3308:	22 10 00 88 	store_32 s1, 4(s2)
    330c:	62 23 00 05 	add_i s27, s2, 8
    3310:	20 10 00 a8 	load_32 s1, 4(s0)
    3314:	21 04 00 00 	or s1, s1, 1
    3318:	20 10 00 88 	store_32 s1, 4(s0)
    331c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    3320:	00 08 00 01 	and s0, s0, 2
    3324:	e0 37 00 f2 	bz s0, 1788 <malloc+0x9f0>
    3328:	b8 01 00 f6 	b 1760 <malloc+0x9d8>
    332c:	5f 0c 00 4f 	movehi s2, 127
    3330:	9f 04 00 4f 	movehi s4, 63
    3334:	be 00 00 4f 	movehi s5, 30
    3338:	42 00 7c 00 	or s2, s2, 7936
    333c:	40 00 51 c0 	add_i s2, s0, s2
    3340:	84 00 40 00 	or s4, s4, 4096
    3344:	42 40 00 0a 	shr s2, s2, 16
    3348:	42 20 00 01 	and s2, s2, 8
    334c:	00 00 b1 c0 	shl s0, s0, s2
    3350:	80 00 52 c0 	add_i s4, s0, s4
    3354:	84 40 00 0a 	shr s4, s4, 16
    3358:	84 10 00 01 	and s4, s4, 4
    335c:	00 00 b2 c0 	shl s0, s0, s4
    3360:	44 00 01 c0 	or s2, s4, s2
    3364:	a0 80 52 c0 	add_i s5, s0, s5
    3368:	a5 40 00 0a 	shr s5, s5, 16
    336c:	85 08 00 01 	and s4, s5, 2
    3370:	a0 38 00 0f 	move s5, 14
    3374:	42 00 02 c0 	or s2, s2, s4
    3378:	00 00 b2 c0 	shl s0, s0, s4
    337c:	45 00 61 c0 	sub_i s2, s5, s2
    3380:	00 3c 00 0a 	shr s0, s0, 15
    3384:	02 00 50 c0 	add_i s0, s2, s0
    3388:	40 1c 00 05 	add_i s2, s0, 7
    338c:	5a 00 a1 c0 	shr s2, s26, s2
    3390:	00 04 00 0b 	shl s0, s0, 1
    3394:	42 04 00 01 	and s2, s2, 1
    3398:	a2 00 00 c0 	or s5, s2, s0
    339c:	05 08 00 0b 	shl s0, s5, 2
    33a0:	18 00 50 c0 	add_i s0, s24, s0
    33a4:	43 00 6d c0 	sub_i s2, s3, s26
    33a8:	80 c0 04 a8 	load_32 s4, 304(s0)
    33ac:	24 0a 00 f2 	bz s4, 324 <malloc+0x4c0>
    33b0:	c0 00 00 0f 	move s6, 0
    33b4:	65 7c 00 10 	cmpeq_i s3, s5, 31
    33b8:	00 00 f3 c0 	move s0, s6
    33bc:	83 00 00 f4 	bnz s3, 16 <malloc+0x39c>
    33c0:	00 64 00 0f 	move s0, 25
    33c4:	65 04 00 0a 	shr s3, s5, 1
    33c8:	00 80 61 c0 	sub_i s0, s0, s3
    33cc:	fa 00 b0 c0 	shl s7, s26, s0
    33d0:	60 00 f3 c0 	move s3, s6
    33d4:	00 00 f3 c0 	move s0, s6
    33d8:	04 11 00 a8 	load_32 s8, 4(s4)
    33dc:	08 e1 ff 01 	and s8, s8, -8
    33e0:	08 01 6d c0 	sub_i s8, s8, s26
    33e4:	28 01 71 c1 	cmpge_u s9, s8, s2
    33e8:	89 00 00 f4 	bnz s9, 16 <malloc+0x3c8>
    33ec:	40 00 f4 c0 	move s2, s8
    33f0:	00 00 f2 c0 	move s0, s4
    33f4:	88 12 00 f2 	bz s8, 592 <malloc+0x614>
    33f8:	07 75 00 0a 	shr s8, s7, 29
    33fc:	08 11 00 01 	and s8, s8, 4
    3400:	24 01 54 c0 	add_i s9, s4, s8
    3404:	04 51 00 a8 	load_32 s8, 20(s4)
    3408:	89 40 00 a8 	load_32 s4, 16(s9)
    340c:	20 81 f1 c0 	move s9, s3
    3410:	48 01 02 c1 	cmpeq_i s10, s8, s4
    3414:	4a 01 00 f4 	bnz s10, 40 <malloc+0x40c>
    3418:	20 01 f4 c0 	move s9, s8
    341c:	08 01 00 10 	cmpeq_i s8, s8, 0
    3420:	48 00 00 f4 	bnz s8, 8 <malloc+0x3f8>
    3424:	08 00 00 f6 	b 32 <malloc+0x414>
    3428:	04 01 00 11 	cmpne_i s8, s4, 0
    342c:	08 05 00 01 	and s8, s8, 1
    3430:	e7 00 b4 c0 	shl s7, s7, s8
    3434:	24 fd ff f5 	bnz s4, -92 <malloc+0x3a8>
    3438:	08 00 00 f6 	b 32 <malloc+0x428>
    343c:	08 01 00 10 	cmpeq_i s8, s8, 0
    3440:	48 ff ff f5 	bnz s8, -24 <malloc+0x3f8>
    3444:	60 80 f4 c0 	move s3, s9
    3448:	04 01 00 11 	cmpne_i s8, s4, 0
    344c:	08 05 00 01 	and s8, s8, 1
    3450:	e7 00 b4 c0 	shl s7, s7, s8
    3454:	24 fc ff f5 	bnz s4, -124 <malloc+0x3a8>
    3458:	83 00 00 c0 	or s4, s3, s0
    345c:	24 05 00 f4 	bnz s4, 164 <malloc+0x4d0>
    3460:	80 08 00 0f 	move s4, 2
    3464:	60 00 00 0f 	move s3, 0
    3468:	84 80 b2 c0 	shl s4, s4, s5
    346c:	a3 00 62 c0 	sub_i s5, s3, s4
    3470:	84 80 02 c0 	or s4, s4, s5
    3474:	84 80 10 c0 	and s4, s4, s1
    3478:	c4 15 00 f2 	bz s4, 696 <malloc+0x700>
    347c:	63 00 62 c0 	sub_i s3, s3, s4
    3480:	64 80 11 c0 	and s3, s4, s3
    3484:	63 fc ff 05 	add_i s3, s3, -1
    3488:	83 30 00 0a 	shr s4, s3, 12
    348c:	84 40 00 01 	and s4, s4, 16
    3490:	63 00 a2 c0 	shr s3, s3, s4
    3494:	a3 14 00 0a 	shr s5, s3, 5
    3498:	a5 20 00 01 	and s5, s5, 8
    349c:	63 80 a2 c0 	shr s3, s3, s5
    34a0:	85 00 02 c0 	or s4, s5, s4
    34a4:	c3 08 00 0a 	shr s6, s3, 2
    34a8:	c6 10 00 01 	and s6, s6, 4
    34ac:	63 00 a3 c0 	shr s3, s3, s6
    34b0:	84 00 03 c0 	or s4, s4, s6
    34b4:	e3 04 00 0a 	shr s7, s3, 1
    34b8:	a7 08 00 01 	and s5, s7, 2
    34bc:	63 80 a2 c0 	shr s3, s3, s5
    34c0:	84 80 02 c0 	or s4, s4, s5
    34c4:	c3 04 00 0a 	shr s6, s3, 1
    34c8:	a6 04 00 01 	and s5, s6, 1
    34cc:	84 80 02 c0 	or s4, s4, s5
    34d0:	63 80 a2 c0 	shr s3, s3, s5
    34d4:	64 80 51 c0 	add_i s3, s4, s3
    34d8:	63 08 00 0b 	shl s3, s3, 2
    34dc:	78 80 51 c0 	add_i s3, s24, s3
    34e0:	63 c0 04 a8 	load_32 s3, 304(s3)
    34e4:	80 80 f1 c0 	move s4, s3
    34e8:	c3 0e 00 f2 	bz s3, 472 <malloc+0x690>
    34ec:	58 00 00 f6 	b 352 <malloc+0x61c>
    34f0:	00 80 f1 c0 	move s0, s3
    34f4:	83 00 00 c0 	or s4, s3, s0
    34f8:	44 00 00 f4 	bnz s4, 8 <malloc+0x4d0>
    34fc:	d9 ff ff f7 	b -156 <malloc+0x430>
    3500:	80 80 f1 c0 	move s4, s3
    3504:	e3 0d 00 f2 	bz s3, 444 <malloc+0x690>
    3508:	51 00 00 f6 	b 324 <malloc+0x61c>
    350c:	b8 10 00 a8 	load_32 s5, 4(s24)
    3510:	05 11 00 f2 	bz s5, 544 <malloc+0x700>
    3514:	c0 00 00 0f 	move s6, 0
    3518:	46 80 62 c0 	sub_i s2, s6, s5
    351c:	45 00 11 c0 	and s2, s5, s2
    3520:	42 fc ff 05 	add_i s2, s2, -1
    3524:	62 30 00 0a 	shr s3, s2, 12
    3528:	63 40 00 01 	and s3, s3, 16
    352c:	42 80 a1 c0 	shr s2, s2, s3
    3530:	82 14 00 0a 	shr s4, s2, 5
    3534:	84 20 00 01 	and s4, s4, 8
    3538:	42 00 a2 c0 	shr s2, s2, s4
    353c:	64 80 01 c0 	or s3, s4, s3
    3540:	e2 08 00 0a 	shr s7, s2, 2
    3544:	e7 10 00 01 	and s7, s7, 4
    3548:	42 80 a3 c0 	shr s2, s2, s7
    354c:	63 80 03 c0 	or s3, s3, s7
    3550:	02 05 00 0a 	shr s8, s2, 1
    3554:	88 08 00 01 	and s4, s8, 2
    3558:	42 00 a2 c0 	shr s2, s2, s4
    355c:	63 00 02 c0 	or s3, s3, s4
    3560:	e2 04 00 0a 	shr s7, s2, 1
    3564:	87 04 00 01 	and s4, s7, 1
    3568:	63 00 02 c0 	or s3, s3, s4
    356c:	42 00 a2 c0 	shr s2, s2, s4
    3570:	43 00 51 c0 	add_i s2, s3, s2
    3574:	42 08 00 0b 	shl s2, s2, 2
    3578:	58 00 51 c0 	add_i s2, s24, s2
    357c:	42 c0 04 a8 	load_32 s2, 304(s2)
    3580:	62 10 00 a8 	load_32 s3, 4(s2)
    3584:	e0 00 f1 c0 	move s7, s2
    3588:	63 e0 ff 01 	and s3, s3, -8
    358c:	63 00 6d c0 	sub_i s3, s3, s26
    3590:	87 40 00 a8 	load_32 s4, 16(s7)
    3594:	04 01 00 f4 	bnz s4, 32 <malloc+0x584>
    3598:	11 00 00 f6 	b 68 <malloc+0x5ac>
    359c:	60 80 f3 c0 	move s3, s7
    35a0:	40 80 f4 c0 	move s2, s9
    35a4:	e0 00 f2 c0 	move s7, s4
    35a8:	87 40 00 a8 	load_32 s4, 16(s7)
    35ac:	44 00 00 f4 	bnz s4, 8 <malloc+0x584>
    35b0:	0b 00 00 f6 	b 44 <malloc+0x5ac>
    35b4:	e4 10 00 a8 	load_32 s7, 4(s4)
    35b8:	e7 e0 ff 01 	and s7, s7, -8
    35bc:	e7 00 6d c0 	sub_i s7, s7, s26
    35c0:	07 81 81 c1 	cmplt_u s8, s7, s3
    35c4:	48 00 00 f4 	bnz s8, 8 <malloc+0x59c>
    35c8:	e0 80 f1 c0 	move s7, s3
    35cc:	20 01 f2 c0 	move s9, s4
    35d0:	68 fe ff f5 	bnz s8, -52 <malloc+0x56c>
    35d4:	20 01 f1 c0 	move s9, s2
    35d8:	f1 ff ff f7 	b -60 <malloc+0x56c>
    35dc:	87 50 00 a8 	load_32 s4, 20(s7)
    35e0:	44 00 00 f2 	bz s4, 8 <malloc+0x5b8>
    35e4:	f4 ff ff f7 	b -48 <malloc+0x584>
    35e8:	38 41 00 a8 	load_32 s9, 16(s24)
    35ec:	89 00 61 c1 	cmpgt_u s4, s9, s2
    35f0:	24 c3 00 f4 	bnz s4, 6244 <malloc+0x1e24>
    35f4:	82 00 5d c0 	add_i s4, s2, s26
    35f8:	e4 00 91 c1 	cmple_u s7, s4, s2
    35fc:	c7 c2 00 f4 	bnz s7, 6232 <malloc+0x1e24>
    3600:	e2 60 00 a8 	load_32 s7, 24(s2)
    3604:	02 31 00 a8 	load_32 s8, 12(s2)
    3608:	48 01 01 c1 	cmpeq_i s10, s8, s2
    360c:	aa 21 00 f4 	bnz s10, 1076 <malloc+0xa10>
    3610:	c2 20 00 a8 	load_32 s6, 8(s2)
    3614:	29 01 63 c1 	cmpgt_u s9, s9, s6
    3618:	e9 c1 00 f4 	bnz s9, 6204 <malloc+0x1e24>
    361c:	26 31 00 a8 	load_32 s9, 12(s6)
    3620:	29 01 11 c1 	cmpne_i s9, s9, s2
    3624:	89 c1 00 f4 	bnz s9, 6192 <malloc+0x1e24>
    3628:	28 21 00 a8 	load_32 s9, 8(s8)
    362c:	29 01 11 c1 	cmpne_i s9, s9, s2
    3630:	29 c1 00 f4 	bnz s9, 6180 <malloc+0x1e24>
    3634:	06 31 00 88 	store_32 s8, 12(s6)
    3638:	c8 20 00 88 	store_32 s6, 8(s8)
    363c:	47 56 00 f2 	bz s7, 2760 <malloc+0x10d4>
    3640:	69 02 00 f6 	b 2468 <malloc+0xfb4>
    3644:	00 00 f2 c0 	move s0, s4
    3648:	40 00 f3 c0 	move s2, s6
    364c:	60 00 f0 c0 	move s3, s0
    3650:	a0 00 f1 c0 	move s5, s2
    3654:	04 10 00 a8 	load_32 s0, 4(s4)
    3658:	00 e0 ff 01 	and s0, s0, -8
    365c:	40 00 6d c0 	sub_i s2, s0, s26
    3660:	c2 80 82 c1 	cmplt_u s6, s2, s5
    3664:	a6 01 00 f4 	bnz s6, 52 <malloc+0x668>
    3668:	40 80 f2 c0 	move s2, s5
    366c:	00 00 f2 c0 	move s0, s4
    3670:	46 00 00 f4 	bnz s6, 8 <malloc+0x648>
    3674:	0b 00 00 f6 	b 44 <malloc+0x670>
    3678:	c4 40 00 a8 	load_32 s6, 16(s4)
    367c:	46 00 00 f4 	bnz s6, 8 <malloc+0x654>
    3680:	0b 00 00 f6 	b 44 <malloc+0x67c>
    3684:	60 00 f0 c0 	move s3, s0
    3688:	a0 00 f1 c0 	move s5, s2
    368c:	80 00 f3 c0 	move s4, s6
    3690:	26 fe ff f5 	bnz s6, -60 <malloc+0x624>
    3694:	0b 00 00 f6 	b 44 <malloc+0x690>
    3698:	00 00 f2 c0 	move s0, s4
    369c:	e6 fe ff f5 	bnz s6, -36 <malloc+0x648>
    36a0:	00 80 f1 c0 	move s0, s3
    36a4:	c4 40 00 a8 	load_32 s6, 16(s4)
    36a8:	e6 fe ff f5 	bnz s6, -36 <malloc+0x654>
    36ac:	c4 50 00 a8 	load_32 s6, 20(s4)
    36b0:	60 00 f0 c0 	move s3, s0
    36b4:	a0 00 f1 c0 	move s5, s2
    36b8:	80 00 f3 c0 	move s4, s6
    36bc:	c6 fc ff f5 	bnz s6, -104 <malloc+0x624>
    36c0:	80 03 00 f2 	bz s0, 112 <malloc+0x700>
    36c4:	78 20 00 a8 	load_32 s3, 8(s24)
    36c8:	63 00 6d c0 	sub_i s3, s3, s26
    36cc:	62 80 71 c1 	cmpge_u s3, s2, s3
    36d0:	03 03 00 f4 	bnz s3, 96 <malloc+0x700>
    36d4:	d8 40 00 a8 	load_32 s6, 16(s24)
    36d8:	66 00 60 c1 	cmpgt_u s3, s6, s0
    36dc:	c3 bb 00 f4 	bnz s3, 6008 <malloc+0x1e24>
    36e0:	60 00 5d c0 	add_i s3, s0, s26
    36e4:	83 00 90 c1 	cmple_u s4, s3, s0
    36e8:	64 bb 00 f4 	bnz s4, 5996 <malloc+0x1e24>
    36ec:	80 60 00 a8 	load_32 s4, 24(s0)
    36f0:	a0 30 00 a8 	load_32 s5, 12(s0)
    36f4:	e5 00 00 c1 	cmpeq_i s7, s5, s0
    36f8:	47 16 00 f4 	bnz s7, 712 <malloc+0x990>
    36fc:	e0 20 00 a8 	load_32 s7, 8(s0)
    3700:	c6 80 63 c1 	cmpgt_u s6, s6, s7
    3704:	86 ba 00 f4 	bnz s6, 5968 <malloc+0x1e24>
    3708:	c7 30 00 a8 	load_32 s6, 12(s7)
    370c:	c6 00 10 c1 	cmpne_i s6, s6, s0
    3710:	26 ba 00 f4 	bnz s6, 5956 <malloc+0x1e24>
    3714:	c5 20 00 a8 	load_32 s6, 8(s5)
    3718:	c6 00 10 c1 	cmpne_i s6, s6, s0
    371c:	c6 b9 00 f4 	bnz s6, 5944 <malloc+0x1e24>
    3720:	a7 30 00 88 	store_32 s5, 12(s7)
    3724:	e5 20 00 88 	store_32 s7, 8(s5)
    3728:	e4 25 00 f2 	bz s4, 1212 <malloc+0xbb4>
    372c:	da 00 00 f6 	b 872 <malloc+0xa64>
    3730:	38 20 00 a8 	load_32 s1, 8(s24)
    3734:	01 00 8d c1 	cmplt_u s0, s1, s26
    3738:	40 00 00 f4 	bnz s0, 8 <malloc+0x710>
    373c:	12 00 00 f6 	b 72 <malloc+0x754>
    3740:	18 30 00 a8 	load_32 s0, 12(s24)
    3744:	20 00 9d c1 	cmple_u s1, s0, s26
    3748:	21 04 00 f4 	bnz s1, 132 <malloc+0x79c>
    374c:	00 00 6d c0 	sub_i s0, s0, s26
    3750:	18 30 00 88 	store_32 s0, 12(s24)
    3754:	38 60 00 a8 	load_32 s1, 24(s24)
    3758:	00 04 00 00 	or s0, s0, 1
    375c:	41 00 5d c0 	add_i s2, s1, s26
    3760:	58 60 00 88 	store_32 s2, 24(s24)
    3764:	61 23 00 05 	add_i s27, s1, 8
    3768:	02 10 00 88 	store_32 s0, 4(s2)
    376c:	1a 0c 00 00 	or s0, s26, 3
    3770:	01 10 00 88 	store_32 s0, 4(s1)
    3774:	18 f0 06 a0 	load_u8 s0, 444(s24)
    3778:	00 08 00 01 	and s0, s0, 2
    377c:	20 15 00 f2 	bz s0, 676 <malloc+0x9f0>
    3780:	a2 00 00 f6 	b 648 <malloc+0x9d8>
    3784:	41 00 6d c0 	sub_i s2, s1, s26
    3788:	18 50 00 a8 	load_32 s0, 20(s24)
    378c:	62 40 00 18 	cmplt_u s3, s2, 16
    3790:	43 0b 00 f4 	bnz s3, 360 <malloc+0x8c8>
    3794:	60 00 5d c0 	add_i s3, s0, s26
    3798:	78 50 00 88 	store_32 s3, 20(s24)
    379c:	20 80 50 c0 	add_i s1, s0, s1
    37a0:	58 20 00 88 	store_32 s2, 8(s24)
    37a4:	82 04 00 00 	or s4, s2, 1
    37a8:	83 10 00 88 	store_32 s4, 4(s3)
    37ac:	60 23 00 05 	add_i s27, s0, 8
    37b0:	41 00 00 88 	store_32 s2, (s1)
    37b4:	3a 0c 00 00 	or s1, s26, 3
    37b8:	20 10 00 88 	store_32 s1, 4(s0)
    37bc:	18 f0 06 a0 	load_u8 s0, 444(s24)
    37c0:	00 08 00 01 	and s0, s0, 2
    37c4:	e0 12 00 f2 	bz s0, 604 <malloc+0x9f0>
    37c8:	90 00 00 f6 	b 576 <malloc+0x9d8>
    37cc:	19 00 00 a8 	load_32 s0, (s25)
    37d0:	20 05 00 f4 	bnz s0, 164 <malloc+0x844>
    37d4:	06 00 00 4f 	movehi s0, 6
    37d8:	20 04 00 0f 	move s1, 1
    37dc:	00 b0 0c 00 	or s0, s0, 812
    37e0:	40 00 00 aa 	load_sync s2, (s0)
    37e4:	60 80 f0 c0 	move s3, s1
    37e8:	60 00 00 8a 	store_sync s3, (s0)  
    37ec:	a3 ff ff f3 	bz s3, -12 <malloc+0x7b0>
    37f0:	02 01 00 f2 	bz s2, 32 <malloc+0x7e0>
    37f4:	40 00 00 a8 	load_32 s2, (s0)
    37f8:	e2 ff ff f5 	bnz s2, -4 <malloc+0x7c4>
    37fc:	40 00 00 aa 	load_sync s2, (s0)
    3800:	60 80 f0 c0 	move s3, s1
    3804:	60 00 00 8a 	store_sync s3, (s0)  
    3808:	a3 ff ff f3 	bz s3, -12 <malloc+0x7cc>
    380c:	42 ff ff f5 	bnz s2, -24 <malloc+0x7c4>
    3810:	39 00 00 a8 	load_32 s1, (s25)
    3814:	61 02 00 f4 	bnz s1, 76 <malloc+0x830>
    3818:	20 00 40 0f 	move s1, 4096
    381c:	39 20 00 88 	store_32 s1, 8(s25)
    3820:	39 10 00 88 	store_32 s1, 4(s25)
    3824:	20 fc ff 0f 	move s1, -1
    3828:	39 30 00 88 	store_32 s1, 12(s25)
    382c:	20 20 00 4f 	movehi s1, 256
    3830:	39 40 00 88 	store_32 s1, 16(s25)
    3834:	20 08 00 0f 	move s1, 2
    3838:	39 50 00 88 	store_32 s1, 20(s25)
    383c:	6a 54 55 4f 	movehi s3, 174762
    3840:	38 f0 06 88 	store_32 s1, 444(s24)
    3844:	3e a0 00 05 	add_i s1, sp, 40
    3848:	40 00 00 0f 	move s2, 0
    384c:	58 00 07 88 	store_32 s2, 448(s24)
    3850:	43 60 55 00 	or s2, s3, 5464
    3854:	21 c0 ff 01 	and s1, s1, -16
    3858:	21 00 31 c0 	xor s1, s1, s2
    385c:	39 00 00 88 	store_32 s1, (s25)
    3860:	20 00 00 0f 	move s1, 0
    3864:	40 00 00 aa 	load_sync s2, (s0)
    3868:	40 80 f0 c0 	move s2, s1
    386c:	40 00 00 8a 	store_sync s2, (s0)  
    3870:	a2 ff ff f3 	bz s2, -12 <malloc+0x834>
    3874:	19 20 00 a8 	load_32 s0, 8(s25)
    3878:	ba bc 00 05 	add_i s5, s26, 47
    387c:	60 03 00 0f 	move s27, 0
    3880:	20 80 52 c0 	add_i s1, s0, s5
    3884:	1b 00 60 c0 	sub_i s0, s27, s0
    3888:	81 00 10 c0 	and s4, s1, s0
    388c:	04 00 9d c1 	cmple_u s0, s4, s26
    3890:	60 0b 00 f4 	bnz s0, 364 <malloc+0x9cc>
    3894:	18 e0 06 a8 	load_32 s0, 440(s24)
    3898:	e0 00 00 f2 	bz s0, 28 <malloc+0x884>
    389c:	58 c0 06 a8 	load_32 s2, 432(s24)
    38a0:	22 00 52 c0 	add_i s1, s2, s4
    38a4:	41 00 91 c1 	cmple_u s2, s1, s2
    38a8:	a2 0a 00 f4 	bnz s2, 340 <malloc+0x9cc>
    38ac:	01 00 60 c1 	cmpgt_u s0, s1, s0
    38b0:	60 0a 00 f4 	bnz s0, 332 <malloc+0x9cc>
    38b4:	18 f0 06 a0 	load_u8 s0, 444(s24)
    38b8:	00 10 00 01 	and s0, s0, 4
    38bc:	a0 03 00 f4 	bnz s0, 116 <malloc+0x900>
    38c0:	18 60 00 a8 	load_32 s0, 24(s24)
    38c4:	e0 00 00 0f 	move s7, 0
    38c8:	80 19 00 f2 	bz s0, 816 <malloc+0xbc8>
    38cc:	38 10 07 05 	add_i s1, s24, 452
    38d0:	41 00 00 a8 	load_32 s2, (s1)
    38d4:	62 00 60 c1 	cmpgt_u s3, s2, s0
    38d8:	a3 00 00 f4 	bnz s3, 20 <malloc+0x8bc>
    38dc:	61 10 00 a8 	load_32 s3, 4(s1)
    38e0:	42 80 51 c0 	add_i s2, s2, s3
    38e4:	42 00 60 c1 	cmpgt_u s2, s2, s0
    38e8:	62 18 00 f4 	bnz s2, 780 <malloc+0xbc4>
    38ec:	21 20 00 a8 	load_32 s1, 8(s1)
    38f0:	01 ff ff f5 	bnz s1, -32 <malloc+0x8a0>
    38f4:	c1 00 00 f6 	b 772 <malloc+0xbc8>
    38f8:	40 00 00 0f 	move s2, 0
    38fc:	58 20 00 88 	store_32 s2, 8(s24)
    3900:	58 50 00 88 	store_32 s2, 20(s24)
    3904:	40 80 50 c0 	add_i s2, s0, s1
    3908:	21 0c 00 00 	or s1, s1, 3
    390c:	20 10 00 88 	store_32 s1, 4(s0)
    3910:	60 23 00 05 	add_i s27, s0, 8
    3914:	22 10 00 a8 	load_32 s1, 4(s2)
    3918:	21 04 00 00 	or s1, s1, 1
    391c:	22 10 00 88 	store_32 s1, 4(s2)
    3920:	18 f0 06 a0 	load_u8 s0, 444(s24)
    3924:	00 08 00 01 	and s0, s0, 2
    3928:	c0 07 00 f2 	bz s0, 248 <malloc+0x9f0>
    392c:	37 00 00 f6 	b 220 <malloc+0x9d8>
    3930:	40 fd ff 0f 	move s10, -1
    3934:	20 01 00 0f 	move s9, 0
    3938:	1f fc 7f 4f 	movehi s0, 262143
    393c:	00 f8 7f 00 	or s0, s0, 8190
    3940:	04 00 60 c1 	cmpgt_u s0, s4, s0
    3944:	20 4b 00 f4 	bnz s0, 2404 <malloc+0x1278>
    3948:	2f 02 00 f6 	b 2236 <malloc+0x11d4>
    394c:	60 04 00 0f 	move s3, 1
    3950:	63 00 b3 c0 	shl s3, s3, s6
    3954:	63 fc ff 03 	xor s3, s3, -1
    3958:	00 80 11 c0 	and s0, s0, s3
    395c:	18 00 00 88 	store_32 s0, (s24)
    3960:	9a 0c 00 00 	or s4, s26, 3
    3964:	82 10 00 88 	store_32 s4, 4(s2)
    3968:	65 00 6d c0 	sub_i s3, s5, s26
    396c:	82 00 5d c0 	add_i s4, s2, s26
    3970:	a2 80 52 c0 	add_i s5, s2, s5
    3974:	c3 04 00 00 	or s6, s3, 1
    3978:	c4 10 00 88 	store_32 s6, 4(s4)
    397c:	65 00 00 88 	store_32 s3, (s5)
    3980:	81 03 00 f2 	bz s1, 112 <malloc+0x9c0>
    3984:	a1 0c 00 0a 	shr s5, s1, 3
    3988:	38 50 00 a8 	load_32 s1, 20(s24)
    398c:	c0 04 00 0f 	move s6, 1
    3990:	e5 0c 00 0b 	shl s7, s5, 3
    3994:	f8 80 53 c0 	add_i s7, s24, s7
    3998:	c6 80 b2 c0 	shl s6, s6, s5
    399c:	00 01 13 c0 	and s8, s0, s6
    39a0:	a7 a0 00 05 	add_i s5, s7, 40
    39a4:	48 00 00 f4 	bnz s8, 8 <malloc+0x97c>
    39a8:	0b 00 00 f6 	b 44 <malloc+0x9a4>
    39ac:	05 20 00 a8 	load_32 s0, 8(s5)
    39b0:	d8 40 00 a8 	load_32 s6, 16(s24)
    39b4:	c6 00 90 c1 	cmple_u s6, s6, s0
    39b8:	46 01 00 f4 	bnz s6, 40 <malloc+0x9b0>
    39bc:	26 05 00 f6 	b 5272 <malloc+0x1e24>
    39c0:	e0 50 00 a8 	load_32 s7, 20(s0)
    39c4:	47 00 00 f4 	bnz s7, 8 <malloc+0x99c>
    39c8:	23 00 00 f6 	b 140 <malloc+0xa24>
    39cc:	00 51 00 05 	add_i s8, s0, 20
    39d0:	24 00 00 f6 	b 144 <malloc+0xa30>
    39d4:	00 00 03 c0 	or s0, s0, s6
    39d8:	18 00 00 88 	store_32 s0, (s24)
    39dc:	00 80 f2 c0 	move s0, s5
    39e0:	25 20 00 88 	store_32 s1, 8(s5)
    39e4:	20 30 00 88 	store_32 s1, 12(s0)
    39e8:	01 20 00 88 	store_32 s0, 8(s1)
    39ec:	a1 30 00 88 	store_32 s5, 12(s1)
    39f0:	78 20 00 88 	store_32 s3, 8(s24)
    39f4:	62 23 00 05 	add_i s27, s2, 8
    39f8:	98 50 00 88 	store_32 s4, 20(s24)
    39fc:	18 f0 06 a0 	load_u8 s0, 444(s24)
    3a00:	00 08 00 01 	and s0, s0, 2
    3a04:	e0 00 00 f2 	bz s0, 28 <malloc+0x9f0>
    3a08:	18 00 07 05 	add_i s0, s24, 448
    3a0c:	20 00 00 0f 	move s1, 0
    3a10:	40 00 00 aa 	load_sync s2, (s0)
    3a14:	40 80 f0 c0 	move s2, s1
    3a18:	40 00 00 8a 	store_sync s2, (s0)  
    3a1c:	a2 ff ff f3 	bz s2, -12 <malloc+0x9e0>
    3a20:	00 80 fd c0 	move s0, s27
    3a24:	fe b3 00 a8 	load_32 ra, 44(sp)
    3a28:	7e c3 00 a8 	load_32 s27, 48(sp)
    3a2c:	5e d3 00 a8 	load_32 s26, 52(sp)
    3a30:	3e e3 00 a8 	load_32 s25, 56(sp)
    3a34:	1e f3 00 a8 	load_32 s24, 60(sp)
    3a38:	de 03 01 05 	add_i sp, sp, 64
    3a3c:	1f 00 00 f0 	ret
    3a40:	42 51 00 a8 	load_32 s10, 20(s2)
    3a44:	4a 00 00 f4 	bnz s10, 8 <malloc+0xa1c>
    3a48:	58 01 00 f6 	b 1376 <malloc+0xf78>
    3a4c:	62 51 00 05 	add_i s11, s2, 20
    3a50:	59 01 00 f6 	b 1380 <malloc+0xf84>
    3a54:	e0 40 00 a8 	load_32 s7, 16(s0)
    3a58:	47 39 00 f2 	bz s7, 1832 <malloc+0x1150>
    3a5c:	00 41 00 05 	add_i s8, s0, 16
    3a60:	a0 80 f3 c0 	move s5, s7
    3a64:	e5 50 00 a8 	load_32 s7, 20(s5)
    3a68:	20 01 f4 c0 	move s9, s8
    3a6c:	05 51 00 05 	add_i s8, s5, 20
    3a70:	87 ff ff f5 	bnz s7, -16 <malloc+0xa30>
    3a74:	e5 40 00 a8 	load_32 s7, 16(s5)
    3a78:	05 41 00 05 	add_i s8, s5, 16
    3a7c:	27 ff ff f5 	bnz s7, -28 <malloc+0xa30>
    3a80:	c6 80 64 c1 	cmpgt_u s6, s6, s9
    3a84:	86 9e 00 f4 	bnz s6, 5072 <malloc+0x1e24>
    3a88:	c0 00 00 0f 	move s6, 0
    3a8c:	c9 00 00 88 	store_32 s6, (s9)
    3a90:	a4 0a 00 f2 	bz s4, 340 <malloc+0xbb4>
    3a94:	c0 70 00 a8 	load_32 s6, 28(s0)
    3a98:	e6 08 00 0b 	shl s7, s6, 2
    3a9c:	f8 80 53 c0 	add_i s7, s24, s7
    3aa0:	07 c1 04 a8 	load_32 s8, 304(s7)
    3aa4:	00 01 14 c1 	cmpne_i s8, s0, s8
    3aa8:	48 00 00 f4 	bnz s8, 8 <malloc+0xa80>
    3aac:	0c 00 00 f6 	b 48 <malloc+0xaac>
    3ab0:	d8 40 00 a8 	load_32 s6, 16(s24)
    3ab4:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    3ab8:	e6 9c 00 f4 	bnz s6, 5020 <malloc+0x1e24>
    3abc:	c4 40 00 a8 	load_32 s6, 16(s4)
    3ac0:	c6 00 00 c1 	cmpeq_i s6, s6, s0
    3ac4:	66 06 00 f4 	bnz s6, 204 <malloc+0xb60>
    3ac8:	c0 50 00 0f 	move s6, 20
    3acc:	c4 00 53 c0 	add_i s6, s4, s6
    3ad0:	a6 00 00 88 	store_32 s5, (s6)
    3ad4:	85 08 00 f2 	bz s5, 272 <malloc+0xbb4>
    3ad8:	32 00 00 f6 	b 200 <malloc+0xb70>
    3adc:	e7 c0 04 05 	add_i s7, s7, 304
    3ae0:	a7 00 00 88 	store_32 s5, (s7)
    3ae4:	e5 05 00 f4 	bnz s5, 188 <malloc+0xb70>
    3ae8:	80 04 00 0f 	move s4, 1
    3aec:	84 00 b3 c0 	shl s4, s4, s6
    3af0:	84 fc ff 03 	xor s4, s4, -1
    3af4:	21 00 12 c0 	and s1, s1, s4
    3af8:	38 10 00 88 	store_32 s1, 4(s24)
    3afc:	82 3c 00 16 	cmpgt_u s4, s2, 15
    3b00:	44 00 00 f4 	bnz s4, 8 <malloc+0xad8>
    3b04:	3a 00 00 f6 	b 232 <malloc+0xbbc>
    3b08:	9a 0c 00 00 	or s4, s26, 3
    3b0c:	80 10 00 88 	store_32 s4, 4(s0)
    3b10:	82 04 00 00 	or s4, s2, 1
    3b14:	83 10 00 88 	store_32 s4, 4(s3)
    3b18:	a3 00 51 c0 	add_i s5, s3, s2
    3b1c:	82 fc 03 16 	cmpgt_u s4, s2, 255
    3b20:	45 00 00 88 	store_32 s2, (s5)
    3b24:	04 02 00 f4 	bnz s4, 64 <malloc+0xb34>
    3b28:	22 0c 00 0a 	shr s1, s2, 3
    3b2c:	58 00 00 a8 	load_32 s2, (s24)
    3b30:	80 04 00 0f 	move s4, 1
    3b34:	a1 0c 00 0b 	shl s5, s1, 3
    3b38:	b8 80 52 c0 	add_i s5, s24, s5
    3b3c:	84 80 b0 c0 	shl s4, s4, s1
    3b40:	c2 00 12 c0 	and s6, s2, s4
    3b44:	25 a0 00 05 	add_i s1, s5, 40
    3b48:	46 00 00 f4 	bnz s6, 8 <malloc+0xb20>
    3b4c:	aa 00 00 f6 	b 680 <malloc+0xdc4>
    3b50:	41 20 00 a8 	load_32 s2, 8(s1)
    3b54:	98 40 00 a8 	load_32 s4, 16(s24)
    3b58:	84 00 91 c1 	cmple_u s4, s4, s2
    3b5c:	24 15 00 f4 	bnz s4, 676 <malloc+0xdd0>
    3b60:	bd 04 00 f6 	b 4852 <malloc+0x1e24>
    3b64:	80 00 00 0f 	move s4, 0
    3b68:	c2 20 00 0a 	shr s6, s2, 8
    3b6c:	a0 00 f2 c0 	move s5, s4
    3b70:	86 19 00 f2 	bz s6, 816 <malloc+0xe70>
    3b74:	bf fc 00 4f 	movehi s5, 2047
    3b78:	a5 fc 7f 00 	or s5, s5, 8191
    3b7c:	a2 80 62 c1 	cmpgt_u s5, s2, s5
    3b80:	45 00 00 f4 	bnz s5, 8 <malloc+0xb58>
    3b84:	ab 00 00 f6 	b 684 <malloc+0xe00>
    3b88:	a0 7c 00 0f 	move s5, 31
    3b8c:	c5 00 00 f6 	b 788 <malloc+0xe70>
    3b90:	c0 40 00 0f 	move s6, 16
    3b94:	c4 00 53 c0 	add_i s6, s4, s6
    3b98:	a6 00 00 88 	store_32 s5, (s6)
    3b9c:	45 02 00 f2 	bz s5, 72 <malloc+0xbb4>
    3ba0:	d8 40 00 a8 	load_32 s6, 16(s24)
    3ba4:	e6 80 62 c1 	cmpgt_u s7, s6, s5
    3ba8:	67 95 00 f4 	bnz s7, 4780 <malloc+0x1e24>
    3bac:	85 60 00 88 	store_32 s4, 24(s5)
    3bb0:	80 40 00 a8 	load_32 s4, 16(s0)
    3bb4:	a4 00 00 f2 	bz s4, 20 <malloc+0xb98>
    3bb8:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    3bbc:	c6 94 00 f4 	bnz s6, 4760 <malloc+0x1e24>
    3bc0:	85 40 00 88 	store_32 s4, 16(s5)
    3bc4:	a4 60 00 88 	store_32 s5, 24(s4)
    3bc8:	80 50 00 a8 	load_32 s4, 20(s0)
    3bcc:	c4 00 00 f2 	bz s4, 24 <malloc+0xbb4>
    3bd0:	d8 40 00 a8 	load_32 s6, 16(s24)
    3bd4:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    3bd8:	e6 93 00 f4 	bnz s6, 4732 <malloc+0x1e24>
    3bdc:	85 50 00 88 	store_32 s4, 20(s5)
    3be0:	a4 60 00 88 	store_32 s5, 24(s4)
    3be4:	82 3c 00 16 	cmpgt_u s4, s2, 15
    3be8:	04 f9 ff f5 	bnz s4, -224 <malloc+0xad8>
    3bec:	22 00 5d c0 	add_i s1, s2, s26
    3bf0:	45 ff ff f7 	b -748 <malloc+0x8d4>
    3bf4:	e0 80 f0 c0 	move s7, s1
    3bf8:	06 00 00 4f 	movehi s0, 6
    3bfc:	3a c0 00 05 	add_i s1, s26, 48
    3c00:	3e 80 00 88 	store_32 s1, 32(sp)
    3c04:	60 b3 0c 00 	or s27, s0, 812
    3c08:	00 04 00 0f 	move s0, 1
    3c0c:	3b 00 00 aa 	load_sync s1, (s27)
    3c10:	40 00 f0 c0 	move s2, s0
    3c14:	5b 00 00 8a 	store_sync s2, (s27)  
    3c18:	a2 ff ff f3 	bz s2, -12 <malloc+0xbdc>
    3c1c:	01 01 00 f2 	bz s1, 32 <malloc+0xc0c>
    3c20:	3b 00 00 a8 	load_32 s1, (s27)
    3c24:	e1 ff ff f5 	bnz s1, -4 <malloc+0xbf0>
    3c28:	3b 00 00 aa 	load_sync s1, (s27)
    3c2c:	40 00 f0 c0 	move s2, s0
    3c30:	5b 00 00 8a 	store_sync s2, (s27)  
    3c34:	a2 ff ff f3 	bz s2, -12 <malloc+0xbf8>
    3c38:	41 ff ff f5 	bnz s1, -24 <malloc+0xbf0>
    3c3c:	47 00 00 f4 	bnz s7, 8 <malloc+0xc14>
    3c40:	1e 00 00 f6 	b 120 <malloc+0xc88>
    3c44:	18 30 00 a8 	load_32 s0, 12(s24)
    3c48:	c0 00 00 0f 	move s6, 0
    3c4c:	39 20 00 a8 	load_32 s1, 8(s25)
    3c50:	5f fc 7f 4f 	movehi s2, 262143
    3c54:	05 00 60 c0 	sub_i s0, s5, s0
    3c58:	00 80 50 c0 	add_i s0, s0, s1
    3c5c:	26 80 60 c0 	sub_i s1, s6, s1
    3c60:	00 80 10 c0 	and s0, s0, s1
    3c64:	22 f8 7f 00 	or s1, s2, 8190
    3c68:	20 80 60 c1 	cmpgt_u s1, s0, s1
    3c6c:	01 2b 00 f4 	bnz s1, 1376 <malloc+0x119c>
    3c70:	be 30 00 88 	store_32 s5, 12(sp)
    3c74:	9e 70 00 88 	store_32 s4, 28(sp)
    3c78:	1e 50 00 88 	store_32 s0, 20(sp)
    3c7c:	fe 60 00 88 	store_32 s7, 24(sp)
    3c80:	bb 12 00 f8 	call 19180 <sbrk>
    3c84:	5e 60 00 a8 	load_32 s2, 24(sp)
    3c88:	22 00 00 a8 	load_32 s1, (s2)
    3c8c:	42 10 00 a8 	load_32 s2, 4(s2)
    3c90:	40 01 f0 c0 	move s10, s0
    3c94:	01 00 51 c0 	add_i s0, s1, s2
    3c98:	0a 00 10 c1 	cmpne_i s0, s10, s0
    3c9c:	40 06 00 f4 	bnz s0, 200 <malloc+0xd34>
    3ca0:	3e 51 00 a8 	load_32 s9, 20(sp)
    3ca4:	0a fc ff 10 	cmpeq_i s0, s10, -1
    3ca8:	c0 80 f4 c0 	move s6, s9
    3cac:	9e 70 00 a8 	load_32 s4, 28(sp)
    3cb0:	e0 28 00 f4 	bnz s0, 1308 <malloc+0x119c>
    3cb4:	4b 01 00 f6 	b 1324 <malloc+0x11b0>
    3cb8:	00 00 00 0f 	move s0, 0
    3cbc:	be 30 00 88 	store_32 s5, 12(sp)
    3cc0:	9e 70 00 88 	store_32 s4, 28(sp)
    3cc4:	1e 40 00 88 	store_32 s0, 16(sp)
    3cc8:	a9 12 00 f8 	call 19108 <sbrk>
    3ccc:	a0 00 f0 c0 	move s5, s0
    3cd0:	05 fc ff 10 	cmpeq_i s0, s5, -1
    3cd4:	80 0a 00 f4 	bnz s0, 336 <malloc+0xdf4>
    3cd8:	99 10 00 a8 	load_32 s4, 4(s25)
    3cdc:	7e 70 00 a8 	load_32 s3, 28(sp)
    3ce0:	24 fc ff 05 	add_i s1, s4, -1
    3ce4:	00 80 f1 c0 	move s0, s3
    3ce8:	41 80 12 c0 	and s2, s1, s5
    3cec:	e2 00 00 f2 	bz s2, 28 <malloc+0xcd8>
    3cf0:	40 00 00 0f 	move s2, 0
    3cf4:	21 80 52 c0 	add_i s1, s1, s5
    3cf8:	63 80 62 c0 	sub_i s3, s3, s5
    3cfc:	02 00 62 c0 	sub_i s0, s2, s4
    3d00:	01 00 10 c0 	and s0, s1, s0
    3d04:	03 00 50 c0 	add_i s0, s3, s0
    3d08:	78 c0 06 a8 	load_32 s3, 432(s24)
    3d0c:	20 00 9d c1 	cmple_u s1, s0, s26
    3d10:	de 40 00 a8 	load_32 s6, 16(sp)
    3d14:	a1 25 00 f4 	bnz s1, 1204 <malloc+0x1198>
    3d18:	3f fc 7f 4f 	movehi s1, 262143
    3d1c:	9e 70 00 a8 	load_32 s4, 28(sp)
    3d20:	21 f8 7f 00 	or s1, s1, 8190
    3d24:	20 80 60 c1 	cmpgt_u s1, s0, s1
    3d28:	21 25 00 f4 	bnz s1, 1188 <malloc+0x119c>
    3d2c:	38 e0 06 a8 	load_32 s1, 440(s24)
    3d30:	c1 00 00 f2 	bz s1, 24 <malloc+0xd18>
    3d34:	43 00 50 c0 	add_i s2, s3, s0
    3d38:	62 80 91 c1 	cmple_u s3, s2, s3
    3d3c:	83 24 00 f4 	bnz s3, 1168 <malloc+0x119c>
    3d40:	22 80 60 c1 	cmpgt_u s1, s2, s1
    3d44:	41 24 00 f4 	bnz s1, 1160 <malloc+0x119c>
    3d48:	1e 50 00 88 	store_32 s0, 20(sp)
    3d4c:	be 60 00 88 	store_32 s5, 24(sp)
    3d50:	87 12 00 f8 	call 18972 <sbrk>
    3d54:	3e 60 00 a8 	load_32 s1, 24(sp)
    3d58:	40 01 f0 c0 	move s10, s0
    3d5c:	0a 80 00 c1 	cmpeq_i s0, s10, s1
    3d60:	00 22 00 f4 	bnz s0, 1088 <malloc+0x1170>
    3d64:	9e 70 00 a8 	load_32 s4, 28(sp)
    3d68:	c0 00 00 0f 	move s6, 0
    3d6c:	3e 51 00 a8 	load_32 s9, 20(sp)
    3d70:	1e 80 00 a8 	load_32 s0, 32(sp)
    3d74:	00 80 94 c1 	cmple_u s0, s0, s9
    3d78:	20 1e 00 f4 	bnz s0, 964 <malloc+0x110c>
    3d7c:	1f fc 7f 4f 	movehi s0, 262143
    3d80:	60 f8 7f 00 	or s3, s0, 8190
    3d84:	29 80 61 c1 	cmpgt_u s1, s9, s3
    3d88:	a1 1d 00 f4 	bnz s1, 948 <malloc+0x110c>
    3d8c:	2a fc ff 10 	cmpeq_i s1, s10, -1
    3d90:	61 1d 00 f4 	bnz s1, 940 <malloc+0x110c>
    3d94:	3e 63 00 88 	store_32 s25, 24(sp)
    3d98:	39 20 00 a8 	load_32 s1, 8(s25)
    3d9c:	20 03 00 0f 	move s25, 0
    3da0:	5e 30 00 a8 	load_32 s2, 12(sp)
    3da4:	42 80 64 c0 	sub_i s2, s2, s9
    3da8:	42 80 50 c0 	add_i s2, s2, s1
    3dac:	39 80 60 c0 	sub_i s1, s25, s1
    3db0:	02 80 10 c0 	and s0, s2, s1
    3db4:	20 80 61 c1 	cmpgt_u s1, s0, s3
    3db8:	a1 1e 00 f4 	bnz s1, 980 <malloc+0x115c>
    3dbc:	de 40 00 88 	store_32 s6, 16(sp)
    3dc0:	9e 70 00 88 	store_32 s4, 28(sp)
    3dc4:	5e 81 00 88 	store_32 s10, 32(sp)
    3dc8:	1e 30 00 88 	store_32 s0, 12(sp)
    3dcc:	68 12 00 f8 	call 18848 <sbrk>
    3dd0:	00 fc ff 10 	cmpeq_i s0, s0, -1
    3dd4:	e0 1e 00 f4 	bnz s0, 988 <malloc+0x1180>
    3dd8:	3e 51 00 a8 	load_32 s9, 20(sp)
    3ddc:	1e 30 00 a8 	load_32 s0, 12(sp)
    3de0:	3e 63 00 a8 	load_32 s25, 24(sp)
    3de4:	5e 81 00 a8 	load_32 s10, 32(sp)
    3de8:	9e 70 00 a8 	load_32 s4, 28(sp)
    3dec:	20 81 54 c0 	add_i s9, s0, s9
    3df0:	fc 00 00 f6 	b 1008 <malloc+0x11b0>
    3df4:	42 00 02 c0 	or s2, s2, s4
    3df8:	58 00 00 88 	store_32 s2, (s24)
    3dfc:	40 80 f0 c0 	move s2, s1
    3e00:	61 20 00 88 	store_32 s3, 8(s1)
    3e04:	60 23 00 05 	add_i s27, s0, 8
    3e08:	62 30 00 88 	store_32 s3, 12(s2)
    3e0c:	43 20 00 88 	store_32 s2, 8(s3)
    3e10:	23 30 00 88 	store_32 s1, 12(s3)
    3e14:	18 f0 06 a0 	load_u8 s0, 444(s24)
    3e18:	00 08 00 01 	and s0, s0, 2
    3e1c:	20 e0 ff f3 	bz s0, -1020 <malloc+0x9f0>
    3e20:	fa fe ff f7 	b -1048 <malloc+0x9d8>
    3e24:	9e 70 00 a8 	load_32 s4, 28(sp)
    3e28:	de 40 00 a8 	load_32 s6, 16(sp)
    3e2c:	e8 00 00 f6 	b 928 <malloc+0x119c>
    3e30:	bf 0c 00 4f 	movehi s5, 127
    3e34:	ff 04 00 4f 	movehi s7, 63
    3e38:	1e 01 00 4f 	movehi s8, 30
    3e3c:	a5 00 7c 00 	or s5, s5, 7936
    3e40:	a6 80 52 c0 	add_i s5, s6, s5
    3e44:	e7 00 40 00 	or s7, s7, 4096
    3e48:	a5 40 00 0a 	shr s5, s5, 16
    3e4c:	a5 20 00 01 	and s5, s5, 8
    3e50:	c6 80 b2 c0 	shl s6, s6, s5
    3e54:	e6 80 53 c0 	add_i s7, s6, s7
    3e58:	e7 40 00 0a 	shr s7, s7, 16
    3e5c:	e7 10 00 01 	and s7, s7, 4
    3e60:	c6 80 b3 c0 	shl s6, s6, s7
    3e64:	a7 80 02 c0 	or s5, s7, s5
    3e68:	06 01 54 c0 	add_i s8, s6, s8
    3e6c:	08 41 00 0a 	shr s8, s8, 16
    3e70:	e8 08 00 01 	and s7, s8, 2
    3e74:	00 39 00 0f 	move s8, 14
    3e78:	a5 80 03 c0 	or s5, s5, s7
    3e7c:	c6 80 b3 c0 	shl s6, s6, s7
    3e80:	a8 80 62 c0 	sub_i s5, s8, s5
    3e84:	c6 3c 00 0a 	shr s6, s6, 15
    3e88:	a5 00 53 c0 	add_i s5, s5, s6
    3e8c:	c5 1c 00 05 	add_i s6, s5, 7
    3e90:	c2 00 a3 c0 	shr s6, s2, s6
    3e94:	a5 04 00 0b 	shl s5, s5, 1
    3e98:	c6 04 00 01 	and s6, s6, 1
    3e9c:	a6 80 02 c0 	or s5, s6, s5
    3ea0:	c5 08 00 0b 	shl s6, s5, 2
    3ea4:	a3 70 00 88 	store_32 s5, 28(s3)
    3ea8:	e0 04 00 0f 	move s7, 1
    3eac:	83 50 00 88 	store_32 s4, 20(s3)
    3eb0:	d8 00 53 c0 	add_i s6, s24, s6
    3eb4:	83 40 00 88 	store_32 s4, 16(s3)
    3eb8:	e7 80 b2 c0 	shl s7, s7, s5
    3ebc:	c6 c0 04 05 	add_i s6, s6, 304
    3ec0:	01 81 13 c0 	and s8, s1, s7
    3ec4:	48 00 00 f4 	bnz s8, 8 <malloc+0xe9c>
    3ec8:	08 00 00 f6 	b 32 <malloc+0xeb8>
    3ecc:	86 00 00 a8 	load_32 s4, (s6)
    3ed0:	25 7c 00 10 	cmpeq_i s1, s5, 31
    3ed4:	41 01 00 f4 	bnz s1, 40 <malloc+0xecc>
    3ed8:	20 64 00 0f 	move s1, 25
    3edc:	a5 04 00 0a 	shr s5, s5, 1
    3ee0:	21 80 62 c0 	sub_i s1, s1, s5
    3ee4:	07 00 00 f6 	b 28 <malloc+0xed0>
    3ee8:	21 80 03 c0 	or s1, s1, s7
    3eec:	38 10 00 88 	store_32 s1, 4(s24)
    3ef0:	66 00 00 88 	store_32 s3, (s6)
    3ef4:	c3 60 00 88 	store_32 s6, 24(s3)
    3ef8:	14 00 00 f6 	b 80 <malloc+0xf18>
    3efc:	20 00 00 0f 	move s1, 0
    3f00:	a2 80 b0 c0 	shl s5, s2, s1
    3f04:	20 00 f2 c0 	move s1, s4
    3f08:	81 10 00 a8 	load_32 s4, 4(s1)
    3f0c:	84 e0 ff 01 	and s4, s4, -8
    3f10:	84 00 01 c1 	cmpeq_i s4, s4, s2
    3f14:	84 02 00 f4 	bnz s4, 80 <malloc+0xf34>
    3f18:	85 74 00 0a 	shr s4, s5, 29
    3f1c:	a5 04 00 0b 	shl s5, s5, 1
    3f20:	84 10 00 01 	and s4, s4, 4
    3f24:	c1 00 52 c0 	add_i s6, s1, s4
    3f28:	86 40 00 a8 	load_32 s4, 16(s6)
    3f2c:	c4 fe ff f5 	bnz s4, -40 <malloc+0xed4>
    3f30:	98 40 00 a8 	load_32 s4, 16(s24)
    3f34:	46 40 00 05 	add_i s2, s6, 16
    3f38:	84 00 61 c1 	cmpgt_u s4, s4, s2
    3f3c:	c4 78 00 f4 	bnz s4, 3864 <malloc+0x1e24>
    3f40:	62 00 00 88 	store_32 s3, (s2)
    3f44:	23 60 00 88 	store_32 s1, 24(s3)
    3f48:	63 30 00 88 	store_32 s3, 12(s3)
    3f4c:	60 23 00 05 	add_i s27, s0, 8
    3f50:	63 20 00 88 	store_32 s3, 8(s3)
    3f54:	18 f0 06 a0 	load_u8 s0, 444(s24)
    3f58:	00 08 00 01 	and s0, s0, 2
    3f5c:	20 d6 ff f3 	bz s0, -1340 <malloc+0x9f0>
    3f60:	aa fe ff f7 	b -1368 <malloc+0x9d8>
    3f64:	41 20 00 a8 	load_32 s2, 8(s1)
    3f68:	98 40 00 a8 	load_32 s4, 16(s24)
    3f6c:	a4 00 61 c1 	cmpgt_u s5, s4, s2
    3f70:	25 77 00 f4 	bnz s5, 3812 <malloc+0x1e24>
    3f74:	84 80 60 c1 	cmpgt_u s4, s4, s1
    3f78:	e4 76 00 f4 	bnz s4, 3804 <malloc+0x1e24>
    3f7c:	62 30 00 88 	store_32 s3, 12(s2)
    3f80:	60 23 00 05 	add_i s27, s0, 8
    3f84:	61 20 00 88 	store_32 s3, 8(s1)
    3f88:	43 20 00 88 	store_32 s2, 8(s3)
    3f8c:	23 30 00 88 	store_32 s1, 12(s3)
    3f90:	20 00 00 0f 	move s1, 0
    3f94:	23 60 00 88 	store_32 s1, 24(s3)
    3f98:	18 f0 06 a0 	load_u8 s0, 444(s24)
    3f9c:	00 08 00 01 	and s0, s0, 2
    3fa0:	00 d4 ff f3 	bz s0, -1408 <malloc+0x9f0>
    3fa4:	99 fe ff f7 	b -1436 <malloc+0x9d8>
    3fa8:	42 41 00 a8 	load_32 s10, 16(s2)
    3fac:	4a 0f 00 f2 	bz s10, 488 <malloc+0x1164>
    3fb0:	62 41 00 05 	add_i s11, s2, 16
    3fb4:	00 01 f5 c0 	move s8, s10
    3fb8:	48 51 00 a8 	load_32 s10, 20(s8)
    3fbc:	80 81 f5 c0 	move s12, s11
    3fc0:	68 51 00 05 	add_i s11, s8, 20
    3fc4:	8a ff ff f5 	bnz s10, -16 <malloc+0xf84>
    3fc8:	48 41 00 a8 	load_32 s10, 16(s8)
    3fcc:	68 41 00 05 	add_i s11, s8, 16
    3fd0:	2a ff ff f5 	bnz s10, -28 <malloc+0xf84>
    3fd4:	29 01 66 c1 	cmpgt_u s9, s9, s12
    3fd8:	e9 73 00 f4 	bnz s9, 3708 <malloc+0x1e24>
    3fdc:	cc 00 00 88 	store_32 s6, (s12)
    3fe0:	27 09 00 f2 	bz s7, 292 <malloc+0x10d4>
    3fe4:	c2 70 00 a8 	load_32 s6, 28(s2)
    3fe8:	26 09 00 0b 	shl s9, s6, 2
    3fec:	38 81 54 c0 	add_i s9, s24, s9
    3ff0:	49 c1 04 a8 	load_32 s10, 304(s9)
    3ff4:	42 01 15 c1 	cmpne_i s10, s2, s10
    3ff8:	4a 00 00 f4 	bnz s10, 8 <malloc+0xfd0>
    3ffc:	0c 00 00 f6 	b 48 <malloc+0xffc>
    4000:	b8 40 00 a8 	load_32 s5, 16(s24)
    4004:	a5 80 63 c1 	cmpgt_u s5, s5, s7
    4008:	65 72 00 f4 	bnz s5, 3660 <malloc+0x1e24>
    400c:	a7 40 00 a8 	load_32 s5, 16(s7)
    4010:	a5 00 01 c1 	cmpeq_i s5, s5, s2
    4014:	e5 04 00 f4 	bnz s5, 156 <malloc+0x1080>
    4018:	a0 50 00 0f 	move s5, 20
    401c:	a7 80 52 c0 	add_i s5, s7, s5
    4020:	05 01 00 88 	store_32 s8, (s5)
    4024:	08 07 00 f2 	bz s8, 224 <malloc+0x10d4>
    4028:	26 00 00 f6 	b 152 <malloc+0x1090>
    402c:	29 c1 04 05 	add_i s9, s9, 304
    4030:	09 01 00 88 	store_32 s8, (s9)
    4034:	68 04 00 f4 	bnz s8, 140 <malloc+0x1090>
    4038:	e0 04 00 0f 	move s7, 1
    403c:	c7 00 b3 c0 	shl s6, s7, s6
    4040:	c6 fc ff 03 	xor s6, s6, -1
    4044:	a5 00 13 c0 	and s5, s5, s6
    4048:	b8 10 00 88 	store_32 s5, 4(s24)
    404c:	a3 3c 00 16 	cmpgt_u s5, s3, 15
    4050:	45 00 00 f4 	bnz s5, 8 <malloc+0x1028>
    4054:	2e 00 00 f6 	b 184 <malloc+0x10dc>
    4058:	ba 0c 00 00 	or s5, s26, 3
    405c:	a2 10 00 88 	store_32 s5, 4(s2)
    4060:	a4 80 51 c0 	add_i s5, s4, s3
    4064:	c3 04 00 00 	or s6, s3, 1
    4068:	c4 10 00 88 	store_32 s6, 4(s4)
    406c:	65 00 00 88 	store_32 s3, (s5)
    4070:	a1 07 00 f2 	bz s1, 244 <malloc+0x1134>
    4074:	21 0c 00 0a 	shr s1, s1, 3
    4078:	a0 04 00 0f 	move s5, 1
    407c:	e1 0c 00 0b 	shl s7, s1, 3
    4080:	c5 80 b0 c0 	shl s6, s5, s1
    4084:	38 50 00 a8 	load_32 s1, 20(s24)
    4088:	b8 80 53 c0 	add_i s5, s24, s7
    408c:	e6 00 10 c0 	and s7, s6, s0
    4090:	a5 a0 00 05 	add_i s5, s5, 40
    4094:	47 00 00 f4 	bnz s7, 8 <malloc+0x106c>
    4098:	2c 00 00 f6 	b 176 <malloc+0x1118>
    409c:	05 20 00 a8 	load_32 s0, 8(s5)
    40a0:	d8 40 00 a8 	load_32 s6, 16(s24)
    40a4:	c6 00 90 c1 	cmple_u s6, s6, s0
    40a8:	66 05 00 f4 	bnz s6, 172 <malloc+0x1124>
    40ac:	6a 03 00 f6 	b 3496 <malloc+0x1e24>
    40b0:	a0 40 00 0f 	move s5, 16
    40b4:	a7 80 52 c0 	add_i s5, s7, s5
    40b8:	05 01 00 88 	store_32 s8, (s5)
    40bc:	48 02 00 f2 	bz s8, 72 <malloc+0x10d4>
    40c0:	b8 40 00 a8 	load_32 s5, 16(s24)
    40c4:	c5 00 64 c1 	cmpgt_u s6, s5, s8
    40c8:	66 6c 00 f4 	bnz s6, 3468 <malloc+0x1e24>
    40cc:	e8 60 00 88 	store_32 s7, 24(s8)
    40d0:	c2 40 00 a8 	load_32 s6, 16(s2)
    40d4:	a6 00 00 f2 	bz s6, 20 <malloc+0x10b8>
    40d8:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    40dc:	c5 6b 00 f4 	bnz s5, 3448 <malloc+0x1e24>
    40e0:	c8 40 00 88 	store_32 s6, 16(s8)
    40e4:	06 61 00 88 	store_32 s8, 24(s6)
    40e8:	a2 50 00 a8 	load_32 s5, 20(s2)
    40ec:	c5 00 00 f2 	bz s5, 24 <malloc+0x10d4>
    40f0:	d8 40 00 a8 	load_32 s6, 16(s24)
    40f4:	c6 80 62 c1 	cmpgt_u s6, s6, s5
    40f8:	e6 6a 00 f4 	bnz s6, 3420 <malloc+0x1e24>
    40fc:	a8 50 00 88 	store_32 s5, 20(s8)
    4100:	05 61 00 88 	store_32 s8, 24(s5)
    4104:	a3 3c 00 16 	cmpgt_u s5, s3, 15
    4108:	85 fa ff f5 	bnz s5, -176 <malloc+0x1028>
    410c:	03 00 5d c0 	add_i s0, s3, s26
    4110:	22 00 50 c0 	add_i s1, s2, s0
    4114:	62 23 00 05 	add_i s27, s2, 8
    4118:	00 0c 00 00 	or s0, s0, 3
    411c:	02 10 00 88 	store_32 s0, 4(s2)
    4120:	01 10 00 a8 	load_32 s0, 4(s1)
    4124:	00 04 00 00 	or s0, s0, 1
    4128:	01 10 00 88 	store_32 s0, 4(s1)
    412c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4130:	00 08 00 01 	and s0, s0, 2
    4134:	60 c7 ff f3 	bz s0, -1812 <malloc+0x9f0>
    4138:	34 fe ff f7 	b -1840 <malloc+0x9d8>
    413c:	0a fc ff 11 	cmpne_i s0, s10, -1
    4140:	00 05 00 f4 	bnz s0, 160 <malloc+0x11b0>
    4144:	22 00 00 f6 	b 136 <malloc+0x119c>
    4148:	06 00 00 c0 	or s0, s6, s0
    414c:	18 00 00 88 	store_32 s0, (s24)
    4150:	00 80 f2 c0 	move s0, s5
    4154:	25 20 00 88 	store_32 s1, 8(s5)
    4158:	20 30 00 88 	store_32 s1, 12(s0)
    415c:	01 20 00 88 	store_32 s0, 8(s1)
    4160:	a1 30 00 88 	store_32 s5, 12(s1)
    4164:	78 20 00 88 	store_32 s3, 8(s24)
    4168:	62 23 00 05 	add_i s27, s2, 8
    416c:	98 50 00 88 	store_32 s4, 20(s24)
    4170:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4174:	00 08 00 01 	and s0, s0, 2
    4178:	40 c5 ff f3 	bz s0, -1880 <malloc+0x9f0>
    417c:	23 fe ff f7 	b -1908 <malloc+0x9d8>
    4180:	a0 00 00 0f 	move s5, 0
    4184:	04 d3 ff f3 	bz s4, -1440 <malloc+0xbb4>
    4188:	43 fe ff f7 	b -1780 <malloc+0xa64>
    418c:	3e 63 00 a8 	load_32 s25, 24(sp)
    4190:	14 00 00 f6 	b 80 <malloc+0x11b0>
    4194:	00 01 f3 c0 	move s8, s6
    4198:	67 fb ff f3 	bz s7, -148 <malloc+0x10d4>
    419c:	92 ff ff f7 	b -440 <malloc+0xfb4>
    41a0:	40 81 f0 c0 	move s10, s1
    41a4:	3e 51 00 a8 	load_32 s9, 20(sp)
    41a8:	9e 70 00 a8 	load_32 s4, 28(sp)
    41ac:	0d 00 00 f6 	b 52 <malloc+0x11b0>
    41b0:	1e 50 00 a8 	load_32 s0, 20(sp)
    41b4:	3e 40 00 a8 	load_32 s1, 16(sp)
    41b8:	01 00 60 c0 	sub_i s0, s1, s0
    41bc:	6c 11 00 f8 	call 17840 <sbrk>
    41c0:	c0 80 fc c0 	move s6, s25
    41c4:	3e 63 00 a8 	load_32 s25, 24(sp)
    41c8:	9e 70 00 a8 	load_32 s4, 28(sp)
    41cc:	18 f0 06 a8 	load_32 s0, 444(s24)
    41d0:	40 fd ff 0f 	move s10, -1
    41d4:	00 10 00 00 	or s0, s0, 4
    41d8:	18 f0 06 88 	store_32 s0, 444(s24)
    41dc:	20 01 f3 c0 	move s9, s6
    41e0:	00 00 00 0f 	move s0, 0
    41e4:	3b 00 00 aa 	load_sync s1, (s27)
    41e8:	20 00 f0 c0 	move s1, s0
    41ec:	3b 00 00 8a 	store_sync s1, (s27)  
    41f0:	a1 ff ff f3 	bz s1, -12 <malloc+0x11b4>
    41f4:	1f fc 7f 4f 	movehi s0, 262143
    41f8:	00 f8 7f 00 	or s0, s0, 8190
    41fc:	04 00 60 c1 	cmpgt_u s0, s4, s0
    4200:	40 05 00 f4 	bnz s0, 168 <malloc+0x1278>
    4204:	0a fc ff 11 	cmpne_i s0, s10, -1
    4208:	00 05 00 f4 	bnz s0, 160 <malloc+0x1278>
    420c:	06 00 00 4f 	movehi s0, 6
    4210:	3e 63 00 88 	store_32 s25, 24(sp)
    4214:	20 b3 0c 00 	or s25, s0, 812
    4218:	00 04 00 0f 	move s0, 1
    421c:	39 00 00 aa 	load_sync s1, (s25)
    4220:	40 00 f0 c0 	move s2, s0
    4224:	59 00 00 8a 	store_sync s2, (s25)  
    4228:	a2 ff ff f3 	bz s2, -12 <malloc+0x11ec>
    422c:	01 01 00 f2 	bz s1, 32 <malloc+0x121c>
    4230:	39 00 00 a8 	load_32 s1, (s25)
    4234:	e1 ff ff f5 	bnz s1, -4 <malloc+0x1200>
    4238:	39 00 00 aa 	load_sync s1, (s25)
    423c:	40 00 f0 c0 	move s2, s0
    4240:	59 00 00 8a 	store_sync s2, (s25)  
    4244:	a2 ff ff f3 	bz s2, -12 <malloc+0x1208>
    4248:	41 ff ff f5 	bnz s1, -24 <malloc+0x1200>
    424c:	00 00 f2 c0 	move s0, s4
    4250:	47 11 00 f8 	call 17692 <sbrk>
    4254:	60 03 00 0f 	move s27, 0
    4258:	1e 80 00 88 	store_32 s0, 32(sp)
    425c:	00 80 fd c0 	move s0, s27
    4260:	43 11 00 f8 	call 17676 <sbrk>
    4264:	39 00 00 aa 	load_sync s1, (s25)
    4268:	20 80 fd c0 	move s1, s27
    426c:	39 00 00 8a 	store_sync s1, (s25)  
    4270:	a1 ff ff f3 	bz s1, -12 <malloc+0x1234>
    4274:	5e 81 00 a8 	load_32 s10, 32(sp)
    4278:	2a 00 70 c1 	cmpge_u s1, s10, s0
    427c:	01 bc ff f5 	bnz s1, -2176 <malloc+0x9cc>
    4280:	2a fc ff 10 	cmpeq_i s1, s10, -1
    4284:	c1 bb ff f5 	bnz s1, -2184 <malloc+0x9cc>
    4288:	20 fc ff 10 	cmpeq_i s1, s0, -1
    428c:	81 bb ff f5 	bnz s1, -2192 <malloc+0x9cc>
    4290:	20 01 65 c0 	sub_i s9, s0, s10
    4294:	3e 63 00 a8 	load_32 s25, 24(sp)
    4298:	1a a0 00 05 	add_i s0, s26, 40
    429c:	09 00 60 c1 	cmpgt_u s0, s9, s0
    42a0:	80 00 00 f4 	bnz s0, 16 <malloc+0x1280>
    42a4:	d6 fd ff f7 	b -2216 <malloc+0x9cc>
    42a8:	0a fc ff 10 	cmpeq_i s0, s10, -1
    42ac:	80 3b 00 f4 	bnz s0, 1904 <malloc+0x19ec>
    42b0:	18 c0 06 a8 	load_32 s0, 432(s24)
    42b4:	00 80 54 c0 	add_i s0, s0, s9
    42b8:	18 c0 06 88 	store_32 s0, 432(s24)
    42bc:	38 d0 06 a8 	load_32 s1, 436(s24)
    42c0:	20 80 90 c1 	cmple_u s1, s0, s1
    42c4:	41 00 00 f4 	bnz s1, 8 <malloc+0x129c>
    42c8:	18 d0 06 88 	store_32 s0, 436(s24)
    42cc:	58 60 00 a8 	load_32 s2, 24(s24)
    42d0:	42 01 00 f2 	bz s2, 40 <malloc+0x12c8>
    42d4:	18 10 07 05 	add_i s0, s24, 452
    42d8:	60 00 00 a8 	load_32 s3, (s0)
    42dc:	20 10 00 a8 	load_32 s1, 4(s0)
    42e0:	83 80 50 c0 	add_i s4, s3, s1
    42e4:	8a 00 02 c1 	cmpeq_i s4, s10, s4
    42e8:	04 11 00 f4 	bnz s4, 544 <malloc+0x14d8>
    42ec:	00 20 00 a8 	load_32 s0, 8(s0)
    42f0:	20 13 00 f2 	bz s0, 612 <malloc+0x1524>
    42f4:	f9 ff ff f7 	b -28 <malloc+0x12a8>
    42f8:	18 40 00 a8 	load_32 s0, 16(s24)
    42fc:	60 00 00 f2 	bz s0, 12 <malloc+0x12d8>
    4300:	0a 00 70 c1 	cmpge_u s0, s10, s0
    4304:	40 00 00 f4 	bnz s0, 8 <malloc+0x12dc>
    4308:	58 41 00 88 	store_32 s10, 16(s24)
    430c:	58 11 07 88 	store_32 s10, 452(s24)
    4310:	00 00 00 0f 	move s0, 0
    4314:	38 21 07 88 	store_32 s9, 456(s24)
    4318:	4a 20 00 05 	add_i s2, s10, 8
    431c:	18 40 07 88 	store_32 s0, 464(s24)
    4320:	39 00 00 a8 	load_32 s1, (s25)
    4324:	38 90 00 88 	store_32 s1, 36(s24)
    4328:	20 fc ff 0f 	move s1, -1
    432c:	38 80 00 88 	store_32 s1, 32(s24)
    4330:	38 a0 00 05 	add_i s1, s24, 40
    4334:	38 d0 00 88 	store_32 s1, 52(s24)
    4338:	42 1c 00 01 	and s2, s2, 7
    433c:	38 c0 00 88 	store_32 s1, 48(s24)
    4340:	38 c0 00 05 	add_i s1, s24, 48
    4344:	38 f0 00 88 	store_32 s1, 60(s24)
    4348:	38 e0 00 88 	store_32 s1, 56(s24)
    434c:	38 e0 00 05 	add_i s1, s24, 56
    4350:	38 10 01 88 	store_32 s1, 68(s24)
    4354:	42 00 00 10 	cmpeq_i s2, s2, 0
    4358:	38 00 01 88 	store_32 s1, 64(s24)
    435c:	38 00 01 05 	add_i s1, s24, 64
    4360:	38 30 01 88 	store_32 s1, 76(s24)
    4364:	38 20 01 88 	store_32 s1, 72(s24)
    4368:	38 20 01 05 	add_i s1, s24, 72
    436c:	38 50 01 88 	store_32 s1, 84(s24)
    4370:	38 40 01 88 	store_32 s1, 80(s24)
    4374:	38 40 01 05 	add_i s1, s24, 80
    4378:	38 70 01 88 	store_32 s1, 92(s24)
    437c:	38 60 01 88 	store_32 s1, 88(s24)
    4380:	38 60 01 05 	add_i s1, s24, 88
    4384:	38 90 01 88 	store_32 s1, 100(s24)
    4388:	38 80 01 88 	store_32 s1, 96(s24)
    438c:	38 80 01 05 	add_i s1, s24, 96
    4390:	38 b0 01 88 	store_32 s1, 108(s24)
    4394:	38 a0 01 88 	store_32 s1, 104(s24)
    4398:	38 a0 01 05 	add_i s1, s24, 104
    439c:	38 d0 01 88 	store_32 s1, 116(s24)
    43a0:	38 c0 01 88 	store_32 s1, 112(s24)
    43a4:	38 c0 01 05 	add_i s1, s24, 112
    43a8:	38 f0 01 88 	store_32 s1, 124(s24)
    43ac:	38 e0 01 88 	store_32 s1, 120(s24)
    43b0:	38 e0 01 05 	add_i s1, s24, 120
    43b4:	38 10 02 88 	store_32 s1, 132(s24)
    43b8:	38 00 02 88 	store_32 s1, 128(s24)
    43bc:	38 00 02 05 	add_i s1, s24, 128
    43c0:	38 30 02 88 	store_32 s1, 140(s24)
    43c4:	38 20 02 88 	store_32 s1, 136(s24)
    43c8:	38 20 02 05 	add_i s1, s24, 136
    43cc:	38 50 02 88 	store_32 s1, 148(s24)
    43d0:	38 40 02 88 	store_32 s1, 144(s24)
    43d4:	38 40 02 05 	add_i s1, s24, 144
    43d8:	38 70 02 88 	store_32 s1, 156(s24)
    43dc:	38 60 02 88 	store_32 s1, 152(s24)
    43e0:	38 60 02 05 	add_i s1, s24, 152
    43e4:	38 90 02 88 	store_32 s1, 164(s24)
    43e8:	38 80 02 88 	store_32 s1, 160(s24)
    43ec:	38 80 02 05 	add_i s1, s24, 160
    43f0:	38 b0 02 88 	store_32 s1, 172(s24)
    43f4:	38 a0 02 88 	store_32 s1, 168(s24)
    43f8:	38 a0 02 05 	add_i s1, s24, 168
    43fc:	38 d0 02 88 	store_32 s1, 180(s24)
    4400:	38 c0 02 88 	store_32 s1, 176(s24)
    4404:	38 c0 02 05 	add_i s1, s24, 176
    4408:	38 f0 02 88 	store_32 s1, 188(s24)
    440c:	38 e0 02 88 	store_32 s1, 184(s24)
    4410:	38 e0 02 05 	add_i s1, s24, 184
    4414:	38 10 03 88 	store_32 s1, 196(s24)
    4418:	38 00 03 88 	store_32 s1, 192(s24)
    441c:	38 00 03 05 	add_i s1, s24, 192
    4420:	38 30 03 88 	store_32 s1, 204(s24)
    4424:	38 20 03 88 	store_32 s1, 200(s24)
    4428:	38 20 03 05 	add_i s1, s24, 200
    442c:	38 50 03 88 	store_32 s1, 212(s24)
    4430:	38 40 03 88 	store_32 s1, 208(s24)
    4434:	38 40 03 05 	add_i s1, s24, 208
    4438:	38 70 03 88 	store_32 s1, 220(s24)
    443c:	38 60 03 88 	store_32 s1, 216(s24)
    4440:	38 60 03 05 	add_i s1, s24, 216
    4444:	38 90 03 88 	store_32 s1, 228(s24)
    4448:	38 80 03 88 	store_32 s1, 224(s24)
    444c:	38 80 03 05 	add_i s1, s24, 224
    4450:	38 b0 03 88 	store_32 s1, 236(s24)
    4454:	38 a0 03 88 	store_32 s1, 232(s24)
    4458:	38 a0 03 05 	add_i s1, s24, 232
    445c:	38 d0 03 88 	store_32 s1, 244(s24)
    4460:	38 c0 03 88 	store_32 s1, 240(s24)
    4464:	38 c0 03 05 	add_i s1, s24, 240
    4468:	38 f0 03 88 	store_32 s1, 252(s24)
    446c:	38 e0 03 88 	store_32 s1, 248(s24)
    4470:	38 e0 03 05 	add_i s1, s24, 248
    4474:	38 10 04 88 	store_32 s1, 260(s24)
    4478:	38 00 04 88 	store_32 s1, 256(s24)
    447c:	38 00 04 05 	add_i s1, s24, 256
    4480:	38 30 04 88 	store_32 s1, 268(s24)
    4484:	38 20 04 88 	store_32 s1, 264(s24)
    4488:	38 20 04 05 	add_i s1, s24, 264
    448c:	38 50 04 88 	store_32 s1, 276(s24)
    4490:	38 40 04 88 	store_32 s1, 272(s24)
    4494:	38 40 04 05 	add_i s1, s24, 272
    4498:	38 70 04 88 	store_32 s1, 284(s24)
    449c:	38 60 04 88 	store_32 s1, 280(s24)
    44a0:	38 60 04 05 	add_i s1, s24, 280
    44a4:	38 90 04 88 	store_32 s1, 292(s24)
    44a8:	38 80 04 88 	store_32 s1, 288(s24)
    44ac:	38 80 04 05 	add_i s1, s24, 288
    44b0:	38 b0 04 88 	store_32 s1, 300(s24)
    44b4:	38 a0 04 88 	store_32 s1, 296(s24)
    44b8:	29 60 ff 05 	add_i s1, s9, -40
    44bc:	82 00 00 f4 	bnz s2, 16 <malloc+0x149c>
    44c0:	00 e0 ff 0f 	move s0, -8
    44c4:	00 00 65 c0 	sub_i s0, s0, s10
    44c8:	00 1c 00 01 	and s0, s0, 7
    44cc:	4a 00 50 c0 	add_i s2, s10, s0
    44d0:	58 60 00 88 	store_32 s2, 24(s24)
    44d4:	01 00 60 c0 	sub_i s0, s1, s0
    44d8:	18 30 00 88 	store_32 s0, 12(s24)
    44dc:	2a 80 50 c0 	add_i s1, s10, s1
    44e0:	00 04 00 00 	or s0, s0, 1
    44e4:	02 10 00 88 	store_32 s0, 4(s2)
    44e8:	00 a0 00 0f 	move s0, 40
    44ec:	01 10 00 88 	store_32 s0, 4(s1)
    44f0:	19 40 00 a8 	load_32 s0, 16(s25)
    44f4:	18 70 00 88 	store_32 s0, 28(s24)
    44f8:	18 30 00 a8 	load_32 s0, 12(s24)
    44fc:	20 00 9d c1 	cmple_u s1, s0, s26
    4500:	e1 28 00 f4 	bnz s1, 1308 <malloc+0x19ec>
    4504:	92 fc ff f7 	b -3512 <malloc+0x71c>
    4508:	80 30 00 a0 	load_u8 s4, 12(s0)
    450c:	84 20 00 01 	and s4, s4, 8
    4510:	24 02 00 f4 	bnz s4, 68 <malloc+0x1524>
    4514:	8a 00 91 c1 	cmple_u s4, s10, s2
    4518:	e4 01 00 f4 	bnz s4, 60 <malloc+0x1524>
    451c:	63 00 61 c1 	cmpgt_u s3, s3, s2
    4520:	a3 01 00 f4 	bnz s3, 52 <malloc+0x1524>
    4524:	62 20 00 05 	add_i s3, s2, 8
    4528:	21 80 54 c0 	add_i s1, s1, s9
    452c:	20 10 00 88 	store_32 s1, 4(s0)
    4530:	18 30 00 a8 	load_32 s0, 12(s24)
    4534:	23 1c 00 01 	and s1, s3, 7
    4538:	21 00 00 10 	cmpeq_i s1, s1, 0
    453c:	00 80 54 c0 	add_i s0, s0, s9
    4540:	81 27 00 f4 	bnz s1, 1264 <malloc+0x1a00>
    4544:	20 e0 ff 0f 	move s1, -8
    4548:	21 00 61 c0 	sub_i s1, s1, s2
    454c:	21 1c 00 01 	and s1, s1, 7
    4550:	39 01 00 f6 	b 1252 <malloc+0x1a04>
    4554:	b8 40 00 a8 	load_32 s5, 16(s24)
    4558:	0a 80 72 c1 	cmpge_u s0, s10, s5
    455c:	60 00 00 f4 	bnz s0, 12 <malloc+0x1538>
    4560:	58 41 00 88 	store_32 s10, 16(s24)
    4564:	a0 00 f5 c0 	move s5, s10
    4568:	2a 80 54 c0 	add_i s1, s10, s9
    456c:	18 10 07 05 	add_i s0, s24, 452
    4570:	60 00 00 a8 	load_32 s3, (s0)
    4574:	63 80 00 c1 	cmpeq_i s3, s3, s1
    4578:	83 00 00 f4 	bnz s3, 16 <malloc+0x1558>
    457c:	00 20 00 a8 	load_32 s0, 8(s0)
    4580:	e0 08 00 f2 	bz s0, 284 <malloc+0x166c>
    4584:	fb ff ff f7 	b -20 <malloc+0x1540>
    4588:	60 30 00 a0 	load_u8 s3, 12(s0)
    458c:	63 20 00 01 	and s3, s3, 8
    4590:	43 00 00 f2 	bz s3, 8 <malloc+0x1568>
    4594:	42 00 00 f6 	b 264 <malloc+0x166c>
    4598:	40 01 00 88 	store_32 s10, (s0)
    459c:	8a 20 00 05 	add_i s4, s10, 8
    45a0:	60 10 00 a8 	load_32 s3, 4(s0)
    45a4:	84 1c 00 01 	and s4, s4, 7
    45a8:	63 80 54 c0 	add_i s3, s3, s9
    45ac:	60 10 00 88 	store_32 s3, 4(s0)
    45b0:	60 00 00 0f 	move s3, 0
    45b4:	c4 00 00 10 	cmpeq_i s6, s4, 0
    45b8:	80 e0 ff 0f 	move s4, -8
    45bc:	00 80 f1 c0 	move s0, s3
    45c0:	66 00 00 f4 	bnz s6, 12 <malloc+0x159c>
    45c4:	04 00 65 c0 	sub_i s0, s4, s10
    45c8:	00 1c 00 01 	and s0, s0, 7
    45cc:	c1 20 00 05 	add_i s6, s1, 8
    45d0:	0a 00 50 c0 	add_i s0, s10, s0
    45d4:	c6 1c 00 01 	and s6, s6, 7
    45d8:	c6 00 00 10 	cmpeq_i s6, s6, 0
    45dc:	66 00 00 f4 	bnz s6, 12 <malloc+0x15b8>
    45e0:	64 80 60 c0 	sub_i s3, s4, s1
    45e4:	63 1c 00 01 	and s3, s3, 7
    45e8:	81 80 51 c0 	add_i s4, s1, s3
    45ec:	20 00 5d c0 	add_i s1, s0, s26
    45f0:	42 00 12 c1 	cmpne_i s2, s2, s4
    45f4:	64 00 60 c0 	sub_i s3, s4, s0
    45f8:	da 0c 00 00 	or s6, s26, 3
    45fc:	c0 10 00 88 	store_32 s6, 4(s0)
    4600:	63 00 6d c0 	sub_i s3, s3, s26
    4604:	42 00 00 f4 	bnz s2, 8 <malloc+0x15dc>
    4608:	93 00 00 f6 	b 588 <malloc+0x1824>
    460c:	58 50 00 a8 	load_32 s2, 20(s24)
    4610:	42 00 12 c1 	cmpne_i s2, s2, s4
    4614:	42 00 00 f4 	bnz s2, 8 <malloc+0x15ec>
    4618:	11 01 00 f6 	b 1092 <malloc+0x1a2c>
    461c:	44 10 00 a8 	load_32 s2, 4(s4)
    4620:	c2 0c 00 01 	and s6, s2, 3
    4624:	c6 04 00 11 	cmpne_i s6, s6, 1
    4628:	66 2f 00 f4 	bnz s6, 1516 <malloc+0x1be4>
    462c:	c2 fc 03 16 	cmpgt_u s6, s2, 255
    4630:	06 23 00 f4 	bnz s6, 1120 <malloc+0x1a60>
    4634:	02 0d 00 0a 	shr s8, s2, 3
    4638:	c4 20 00 a8 	load_32 s6, 8(s4)
    463c:	e8 0c 00 0b 	shl s7, s8, 3
    4640:	f8 80 53 c0 	add_i s7, s24, s7
    4644:	27 a1 00 05 	add_i s9, s7, 40
    4648:	e4 30 00 a8 	load_32 s7, 12(s4)
    464c:	46 81 04 c1 	cmpeq_i s10, s6, s9
    4650:	ca 00 00 f4 	bnz s10, 24 <malloc+0x1638>
    4654:	45 01 63 c1 	cmpgt_u s10, s5, s6
    4658:	ea 3f 00 f4 	bnz s10, 2044 <malloc+0x1e24>
    465c:	46 31 00 a8 	load_32 s10, 12(s6)
    4660:	4a 01 12 c1 	cmpne_i s10, s10, s4
    4664:	8a 3f 00 f4 	bnz s10, 2032 <malloc+0x1e24>
    4668:	47 01 13 c1 	cmpne_i s10, s7, s6
    466c:	4a 00 00 f4 	bnz s10, 8 <malloc+0x1644>
    4670:	19 01 00 f6 	b 1124 <malloc+0x1aa4>
    4674:	07 81 04 c1 	cmpeq_i s8, s7, s9
    4678:	c8 00 00 f4 	bnz s8, 24 <malloc+0x1660>
    467c:	a5 80 63 c1 	cmpgt_u s5, s5, s7
    4680:	a5 3e 00 f4 	bnz s5, 2004 <malloc+0x1e24>
    4684:	a7 20 00 a8 	load_32 s5, 8(s7)
    4688:	a5 00 12 c1 	cmpne_i s5, s5, s4
    468c:	45 3e 00 f4 	bnz s5, 1992 <malloc+0x1e24>
    4690:	e6 30 00 88 	store_32 s7, 12(s6)
    4694:	c7 20 00 88 	store_32 s6, 8(s7)
    4698:	5c 01 00 f6 	b 1392 <malloc+0x1bd8>
    469c:	38 10 07 05 	add_i s1, s24, 452
    46a0:	01 00 00 a8 	load_32 s0, (s1)
    46a4:	60 00 61 c1 	cmpgt_u s3, s0, s2
    46a8:	43 00 00 f4 	bnz s3, 8 <malloc+0x1680>
    46ac:	05 00 00 f6 	b 20 <malloc+0x1690>
    46b0:	21 20 00 a8 	load_32 s1, 8(s1)
    46b4:	01 00 00 a8 	load_32 s0, (s1)
    46b8:	60 00 61 c1 	cmpgt_u s3, s0, s2
    46bc:	a3 ff ff f5 	bnz s3, -12 <malloc+0x1680>
    46c0:	61 10 00 a8 	load_32 s3, 4(s1)
    46c4:	00 80 51 c0 	add_i s0, s0, s3
    46c8:	60 00 61 c1 	cmpgt_u s3, s0, s2
    46cc:	43 00 00 f4 	bnz s3, 8 <malloc+0x16a4>
    46d0:	f8 ff ff f7 	b -32 <malloc+0x1680>
    46d4:	20 64 ff 05 	add_i s1, s0, -39
    46d8:	60 00 00 0f 	move s3, 0
    46dc:	21 1c 00 01 	and s1, s1, 7
    46e0:	81 00 00 10 	cmpeq_i s4, s1, 0
    46e4:	20 80 f1 c0 	move s1, s3
    46e8:	84 00 00 f4 	bnz s4, 16 <malloc+0x16c8>
    46ec:	20 9c 00 0f 	move s1, 39
    46f0:	21 00 60 c0 	sub_i s1, s1, s0
    46f4:	21 1c 00 01 	and s1, s1, 7
    46f8:	20 80 50 c0 	add_i s1, s0, s1
    46fc:	81 44 ff 05 	add_i s4, s1, -47
    4700:	22 40 00 05 	add_i s1, s2, 16
    4704:	a4 80 80 c1 	cmplt_u s5, s4, s1
    4708:	20 00 f1 c0 	move s1, s2
    470c:	45 00 00 f4 	bnz s5, 8 <malloc+0x16e4>
    4710:	20 00 f2 c0 	move s1, s4
    4714:	8a 20 00 05 	add_i s4, s10, 8
    4718:	a1 20 00 05 	add_i s5, s1, 8
    471c:	c9 60 ff 05 	add_i s6, s9, -40
    4720:	84 1c 00 01 	and s4, s4, 7
    4724:	e0 80 f1 c0 	move s7, s3
    4728:	84 00 00 10 	cmpeq_i s4, s4, 0
    472c:	84 00 00 f4 	bnz s4, 16 <malloc+0x170c>
    4730:	80 e0 ff 0f 	move s4, -8
    4734:	84 00 65 c0 	sub_i s4, s4, s10
    4738:	e4 1c 00 01 	and s7, s4, 7
    473c:	0a 81 53 c0 	add_i s8, s10, s7
    4740:	18 61 00 88 	store_32 s8, 24(s24)
    4744:	e6 80 63 c0 	sub_i s7, s6, s7
    4748:	f8 30 00 88 	store_32 s7, 12(s24)
    474c:	ca 00 53 c0 	add_i s6, s10, s6
    4750:	81 60 00 05 	add_i s4, s1, 24
    4754:	e7 04 00 00 	or s7, s7, 1
    4758:	e8 10 00 88 	store_32 s7, 4(s8)
    475c:	e0 a0 00 0f 	move s7, 40
    4760:	e6 10 00 88 	store_32 s7, 4(s6)
    4764:	d9 40 00 a8 	load_32 s6, 16(s25)
    4768:	d8 70 00 88 	store_32 s6, 28(s24)
    476c:	c0 6c 00 0f 	move s6, 27
    4770:	c1 10 00 88 	store_32 s6, 4(s1)
    4774:	d8 40 07 a8 	load_32 s6, 464(s24)
    4778:	c1 50 00 88 	store_32 s6, 20(s1)
    477c:	d8 30 07 a8 	load_32 s6, 460(s24)
    4780:	c1 40 00 88 	store_32 s6, 16(s1)
    4784:	d8 20 07 a8 	load_32 s6, 456(s24)
    4788:	c1 30 00 88 	store_32 s6, 12(s1)
    478c:	d8 10 07 a8 	load_32 s6, 452(s24)
    4790:	c1 20 00 88 	store_32 s6, 8(s1)
    4794:	58 11 07 88 	store_32 s10, 452(s24)
    4798:	38 21 07 88 	store_32 s9, 456(s24)
    479c:	78 40 07 88 	store_32 s3, 464(s24)
    47a0:	60 1c 00 0f 	move s3, 7
    47a4:	b8 30 07 88 	store_32 s5, 460(s24)
    47a8:	a4 20 00 05 	add_i s5, s4, 8
    47ac:	64 10 00 88 	store_32 s3, 4(s4)
    47b0:	c4 10 00 05 	add_i s6, s4, 4
    47b4:	a5 00 80 c1 	cmplt_u s5, s5, s0
    47b8:	80 00 f3 c0 	move s4, s6
    47bc:	65 ff ff f5 	bnz s5, -20 <malloc+0x1778>
    47c0:	01 00 01 c1 	cmpeq_i s0, s1, s2
    47c4:	40 12 00 f4 	bnz s0, 584 <malloc+0x19dc>
    47c8:	61 10 00 a8 	load_32 s3, 4(s1)
    47cc:	01 00 61 c0 	sub_i s0, s1, s2
    47d0:	63 f8 ff 01 	and s3, s3, -2
    47d4:	61 10 00 88 	store_32 s3, 4(s1)
    47d8:	60 04 00 00 	or s3, s0, 1
    47dc:	62 10 00 88 	store_32 s3, 4(s2)
    47e0:	60 fc 03 16 	cmpgt_u s3, s0, 255
    47e4:	01 00 00 88 	store_32 s0, (s1)
    47e8:	03 02 00 f4 	bnz s3, 64 <malloc+0x17f8>
    47ec:	00 0c 00 0a 	shr s0, s0, 3
    47f0:	38 00 00 a8 	load_32 s1, (s24)
    47f4:	60 04 00 0f 	move s3, 1
    47f8:	80 0c 00 0b 	shl s4, s0, 3
    47fc:	98 00 52 c0 	add_i s4, s24, s4
    4800:	63 00 b0 c0 	shl s3, s3, s0
    4804:	a1 80 11 c0 	and s5, s1, s3
    4808:	04 a0 00 05 	add_i s0, s4, 40
    480c:	45 00 00 f4 	bnz s5, 8 <malloc+0x17e4>
    4810:	1c 00 00 f6 	b 112 <malloc+0x1850>
    4814:	20 20 00 a8 	load_32 s1, 8(s0)
    4818:	78 40 00 a8 	load_32 s3, 16(s24)
    481c:	63 80 90 c1 	cmple_u s3, s3, s1
    4820:	63 03 00 f4 	bnz s3, 108 <malloc+0x185c>
    4824:	8c 01 00 f6 	b 1584 <malloc+0x1e24>
    4828:	20 00 00 0f 	move s1, 0
    482c:	80 20 00 0a 	shr s4, s0, 8
    4830:	60 80 f0 c0 	move s3, s1
    4834:	44 07 00 f2 	bz s4, 232 <malloc+0x18ec>
    4838:	7f fc 00 4f 	movehi s3, 2047
    483c:	63 fc 7f 00 	or s3, s3, 8191
    4840:	60 80 61 c1 	cmpgt_u s3, s0, s3
    4844:	43 00 00 f4 	bnz s3, 8 <malloc+0x181c>
    4848:	19 00 00 f6 	b 100 <malloc+0x187c>
    484c:	60 7c 00 0f 	move s3, 31
    4850:	33 00 00 f6 	b 204 <malloc+0x18ec>
    4854:	58 30 00 a8 	load_32 s2, 12(s24)
    4858:	60 23 00 05 	add_i s27, s0, 8
    485c:	42 80 51 c0 	add_i s2, s2, s3
    4860:	58 30 00 88 	store_32 s2, 12(s24)
    4864:	38 60 00 88 	store_32 s1, 24(s24)
    4868:	42 04 00 00 	or s2, s2, 1
    486c:	41 10 00 88 	store_32 s2, 4(s1)
    4870:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4874:	00 08 00 01 	and s0, s0, 2
    4878:	40 8d ff f3 	bz s0, -3672 <malloc+0x9f0>
    487c:	63 fc ff f7 	b -3700 <malloc+0x9d8>
    4880:	21 80 01 c0 	or s1, s1, s3
    4884:	38 00 00 88 	store_32 s1, (s24)
    4888:	20 00 f0 c0 	move s1, s0
    488c:	40 20 00 88 	store_32 s2, 8(s0)
    4890:	41 30 00 88 	store_32 s2, 12(s1)
    4894:	22 20 00 88 	store_32 s1, 8(s2)
    4898:	02 30 00 88 	store_32 s0, 12(s2)
    489c:	18 30 00 a8 	load_32 s0, 12(s24)
    48a0:	20 00 9d c1 	cmple_u s1, s0, s26
    48a4:	c1 0b 00 f4 	bnz s1, 376 <malloc+0x19ec>
    48a8:	a9 fb ff f7 	b -4444 <malloc+0x71c>
    48ac:	7f 0c 00 4f 	movehi s3, 127
    48b0:	bf 04 00 4f 	movehi s5, 63
    48b4:	de 00 00 4f 	movehi s6, 30
    48b8:	63 00 7c 00 	or s3, s3, 7936
    48bc:	64 80 51 c0 	add_i s3, s4, s3
    48c0:	a5 00 40 00 	or s5, s5, 4096
    48c4:	63 40 00 0a 	shr s3, s3, 16
    48c8:	63 20 00 01 	and s3, s3, 8
    48cc:	84 80 b1 c0 	shl s4, s4, s3
    48d0:	a4 80 52 c0 	add_i s5, s4, s5
    48d4:	a5 40 00 0a 	shr s5, s5, 16
    48d8:	a5 10 00 01 	and s5, s5, 4
    48dc:	84 80 b2 c0 	shl s4, s4, s5
    48e0:	65 80 01 c0 	or s3, s5, s3
    48e4:	c4 00 53 c0 	add_i s6, s4, s6
    48e8:	c6 40 00 0a 	shr s6, s6, 16
    48ec:	a6 08 00 01 	and s5, s6, 2
    48f0:	c0 38 00 0f 	move s6, 14
    48f4:	63 80 02 c0 	or s3, s3, s5
    48f8:	84 80 b2 c0 	shl s4, s4, s5
    48fc:	66 80 61 c0 	sub_i s3, s6, s3
    4900:	84 3c 00 0a 	shr s4, s4, 15
    4904:	63 00 52 c0 	add_i s3, s3, s4
    4908:	83 1c 00 05 	add_i s4, s3, 7
    490c:	80 00 a2 c0 	shr s4, s0, s4
    4910:	63 04 00 0b 	shl s3, s3, 1
    4914:	84 04 00 01 	and s4, s4, 1
    4918:	64 80 01 c0 	or s3, s4, s3
    491c:	62 70 00 88 	store_32 s3, 28(s2)
    4920:	a3 08 00 0b 	shl s5, s3, 2
    4924:	22 50 00 88 	store_32 s1, 20(s2)
    4928:	d8 80 52 c0 	add_i s6, s24, s5
    492c:	22 40 00 88 	store_32 s1, 16(s2)
    4930:	20 04 00 0f 	move s1, 1
    4934:	98 10 00 a8 	load_32 s4, 4(s24)
    4938:	a1 80 b1 c0 	shl s5, s1, s3
    493c:	26 c0 04 05 	add_i s1, s6, 304
    4940:	e4 80 12 c0 	and s7, s4, s5
    4944:	47 00 00 f4 	bnz s7, 8 <malloc+0x191c>
    4948:	08 00 00 f6 	b 32 <malloc+0x1938>
    494c:	81 00 00 a8 	load_32 s4, (s1)
    4950:	a3 7c 00 10 	cmpeq_i s5, s3, 31
    4954:	25 01 00 f4 	bnz s5, 36 <malloc+0x1948>
    4958:	20 64 00 0f 	move s1, 25
    495c:	63 04 00 0a 	shr s3, s3, 1
    4960:	21 80 61 c0 	sub_i s1, s1, s3
    4964:	06 00 00 f6 	b 24 <malloc+0x194c>
    4968:	04 80 02 c0 	or s0, s4, s5
    496c:	18 10 00 88 	store_32 s0, 4(s24)
    4970:	41 00 00 88 	store_32 s2, (s1)
    4974:	13 00 00 f6 	b 76 <malloc+0x1990>
    4978:	20 00 00 0f 	move s1, 0
    497c:	60 80 b0 c0 	shl s3, s0, s1
    4980:	20 00 f2 c0 	move s1, s4
    4984:	81 10 00 a8 	load_32 s4, 4(s1)
    4988:	84 e0 ff 01 	and s4, s4, -8
    498c:	84 00 00 c1 	cmpeq_i s4, s4, s0
    4990:	64 02 00 f4 	bnz s4, 76 <malloc+0x19ac>
    4994:	83 74 00 0a 	shr s4, s3, 29
    4998:	63 04 00 0b 	shl s3, s3, 1
    499c:	84 10 00 01 	and s4, s4, 4
    49a0:	a1 00 52 c0 	add_i s5, s1, s4
    49a4:	85 40 00 a8 	load_32 s4, 16(s5)
    49a8:	c4 fe ff f5 	bnz s4, -40 <malloc+0x1950>
    49ac:	78 40 00 a8 	load_32 s3, 16(s24)
    49b0:	05 40 00 05 	add_i s0, s5, 16
    49b4:	63 00 60 c1 	cmpgt_u s3, s3, s0
    49b8:	e3 24 00 f4 	bnz s3, 1180 <malloc+0x1e24>
    49bc:	40 00 00 88 	store_32 s2, (s0)
    49c0:	22 60 00 88 	store_32 s1, 24(s2)
    49c4:	42 30 00 88 	store_32 s2, 12(s2)
    49c8:	42 20 00 88 	store_32 s2, 8(s2)
    49cc:	18 30 00 a8 	load_32 s0, 12(s24)
    49d0:	20 00 9d c1 	cmple_u s1, s0, s26
    49d4:	41 02 00 f4 	bnz s1, 72 <malloc+0x19ec>
    49d8:	5d fb ff f7 	b -4748 <malloc+0x71c>
    49dc:	01 20 00 a8 	load_32 s0, 8(s1)
    49e0:	78 40 00 a8 	load_32 s3, 16(s24)
    49e4:	83 00 60 c1 	cmpgt_u s4, s3, s0
    49e8:	64 23 00 f4 	bnz s4, 1132 <malloc+0x1e24>
    49ec:	63 80 60 c1 	cmpgt_u s3, s3, s1
    49f0:	23 23 00 f4 	bnz s3, 1124 <malloc+0x1e24>
    49f4:	40 30 00 88 	store_32 s2, 12(s0)
    49f8:	41 20 00 88 	store_32 s2, 8(s1)
    49fc:	02 20 00 88 	store_32 s0, 8(s2)
    4a00:	00 00 00 0f 	move s0, 0
    4a04:	22 30 00 88 	store_32 s1, 12(s2)
    4a08:	02 60 00 88 	store_32 s0, 24(s2)
    4a0c:	18 30 00 a8 	load_32 s0, 12(s24)
    4a10:	20 00 9d c1 	cmple_u s1, s0, s26
    4a14:	41 00 00 f4 	bnz s1, 8 <malloc+0x19ec>
    4a18:	4d fb ff f7 	b -4812 <malloc+0x71c>
    4a1c:	60 03 00 0f 	move s27, 0
    4a20:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4a24:	00 08 00 01 	and s0, s0, 2
    4a28:	c0 7f ff f3 	bz s0, -4104 <malloc+0x9f0>
    4a2c:	f7 fb ff f7 	b -4132 <malloc+0x9d8>
    4a30:	20 00 00 0f 	move s1, 0
    4a34:	62 80 50 c0 	add_i s3, s2, s1
    4a38:	78 60 00 88 	store_32 s3, 24(s24)
    4a3c:	20 80 60 c0 	sub_i s1, s0, s1
    4a40:	38 30 00 88 	store_32 s1, 12(s24)
    4a44:	02 00 50 c0 	add_i s0, s2, s0
    4a48:	21 04 00 00 	or s1, s1, 1
    4a4c:	23 10 00 88 	store_32 s1, 4(s3)
    4a50:	20 a0 00 0f 	move s1, 40
    4a54:	20 10 00 88 	store_32 s1, 4(s0)
    4a58:	a6 fe ff f7 	b -1384 <malloc+0x14c0>
    4a5c:	58 20 00 a8 	load_32 s2, 8(s24)
    4a60:	60 23 00 05 	add_i s27, s0, 8
    4a64:	42 80 51 c0 	add_i s2, s2, s3
    4a68:	58 20 00 88 	store_32 s2, 8(s24)
    4a6c:	61 00 51 c0 	add_i s3, s1, s2
    4a70:	38 50 00 88 	store_32 s1, 20(s24)
    4a74:	82 04 00 00 	or s4, s2, 1
    4a78:	81 10 00 88 	store_32 s4, 4(s1)
    4a7c:	43 00 00 88 	store_32 s2, (s3)
    4a80:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4a84:	00 08 00 01 	and s0, s0, 2
    4a88:	c0 7c ff f3 	bz s0, -4200 <malloc+0x9f0>
    4a8c:	df fb ff f7 	b -4228 <malloc+0x9d8>
    4a90:	c4 60 00 a8 	load_32 s6, 24(s4)
    4a94:	e4 30 00 a8 	load_32 s7, 12(s4)
    4a98:	07 01 02 c1 	cmpeq_i s8, s7, s4
    4a9c:	a8 02 00 f4 	bnz s8, 84 <malloc+0x1ac0>
    4aa0:	04 21 00 a8 	load_32 s8, 8(s4)
    4aa4:	a5 00 64 c1 	cmpgt_u s5, s5, s8
    4aa8:	65 1d 00 f4 	bnz s5, 940 <malloc+0x1e24>
    4aac:	a8 30 00 a8 	load_32 s5, 12(s8)
    4ab0:	a5 00 12 c1 	cmpne_i s5, s5, s4
    4ab4:	05 1d 00 f4 	bnz s5, 928 <malloc+0x1e24>
    4ab8:	a7 20 00 a8 	load_32 s5, 8(s7)
    4abc:	a5 00 12 c1 	cmpne_i s5, s5, s4
    4ac0:	a5 1c 00 f4 	bnz s5, 916 <malloc+0x1e24>
    4ac4:	e8 30 00 88 	store_32 s7, 12(s8)
    4ac8:	07 21 00 88 	store_32 s8, 8(s7)
    4acc:	e6 09 00 f2 	bz s6, 316 <malloc+0x1bd8>
    4ad0:	1d 00 00 f6 	b 116 <malloc+0x1b14>
    4ad4:	a0 04 00 0f 	move s5, 1
    4ad8:	d8 00 00 a8 	load_32 s6, (s24)
    4adc:	a5 00 b4 c0 	shl s5, s5, s8
    4ae0:	a5 fc ff 03 	xor s5, s5, -1
    4ae4:	a6 80 12 c0 	and s5, s6, s5
    4ae8:	b8 00 00 88 	store_32 s5, (s24)
    4aec:	47 00 00 f6 	b 284 <malloc+0x1bd8>
    4af0:	24 51 00 a8 	load_32 s9, 20(s4)
    4af4:	49 00 00 f4 	bnz s9, 8 <malloc+0x1acc>
    4af8:	03 00 00 f6 	b 12 <malloc+0x1ad4>
    4afc:	04 51 00 05 	add_i s8, s4, 20
    4b00:	04 00 00 f6 	b 16 <malloc+0x1ae0>
    4b04:	04 41 00 05 	add_i s8, s4, 16
    4b08:	28 01 00 a8 	load_32 s9, (s8)
    4b0c:	e9 19 00 f2 	bz s9, 828 <malloc+0x1e18>
    4b10:	e0 80 f4 c0 	move s7, s9
    4b14:	27 51 00 a8 	load_32 s9, 20(s7)
    4b18:	40 01 f4 c0 	move s10, s8
    4b1c:	07 51 00 05 	add_i s8, s7, 20
    4b20:	89 ff ff f5 	bnz s9, -16 <malloc+0x1ae0>
    4b24:	27 41 00 a8 	load_32 s9, 16(s7)
    4b28:	07 41 00 05 	add_i s8, s7, 16
    4b2c:	29 ff ff f5 	bnz s9, -28 <malloc+0x1ae0>
    4b30:	a5 00 65 c1 	cmpgt_u s5, s5, s10
    4b34:	05 19 00 f4 	bnz s5, 800 <malloc+0x1e24>
    4b38:	a0 00 00 0f 	move s5, 0
    4b3c:	aa 00 00 88 	store_32 s5, (s10)
    4b40:	46 06 00 f2 	bz s6, 200 <malloc+0x1bd8>
    4b44:	a4 70 00 a8 	load_32 s5, 28(s4)
    4b48:	05 09 00 0b 	shl s8, s5, 2
    4b4c:	18 01 54 c0 	add_i s8, s24, s8
    4b50:	28 c1 04 a8 	load_32 s9, 304(s8)
    4b54:	29 01 12 c1 	cmpne_i s9, s9, s4
    4b58:	49 00 00 f4 	bnz s9, 8 <malloc+0x1b30>
    4b5c:	0c 00 00 f6 	b 48 <malloc+0x1b5c>
    4b60:	b8 40 00 a8 	load_32 s5, 16(s24)
    4b64:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    4b68:	65 17 00 f4 	bnz s5, 748 <malloc+0x1e24>
    4b6c:	a6 40 00 a8 	load_32 s5, 16(s6)
    4b70:	a5 00 02 c1 	cmpeq_i s5, s5, s4
    4b74:	05 02 00 f4 	bnz s5, 64 <malloc+0x1b84>
    4b78:	a0 50 00 0f 	move s5, 20
    4b7c:	a6 80 52 c0 	add_i s5, s6, s5
    4b80:	e5 00 00 88 	store_32 s7, (s5)
    4b84:	27 04 00 f2 	bz s7, 132 <malloc+0x1bd8>
    4b88:	0f 00 00 f6 	b 60 <malloc+0x1b94>
    4b8c:	08 c1 04 05 	add_i s8, s8, 304
    4b90:	e8 00 00 88 	store_32 s7, (s8)
    4b94:	87 01 00 f4 	bnz s7, 48 <malloc+0x1b94>
    4b98:	c0 04 00 0f 	move s6, 1
    4b9c:	a6 80 b2 c0 	shl s5, s6, s5
    4ba0:	d8 10 00 a8 	load_32 s6, 4(s24)
    4ba4:	a5 fc ff 03 	xor s5, s5, -1
    4ba8:	a6 80 12 c0 	and s5, s6, s5
    4bac:	b8 10 00 88 	store_32 s5, 4(s24)
    4bb0:	16 00 00 f6 	b 88 <malloc+0x1bd8>
    4bb4:	a0 40 00 0f 	move s5, 16
    4bb8:	a6 80 52 c0 	add_i s5, s6, s5
    4bbc:	e5 00 00 88 	store_32 s7, (s5)
    4bc0:	47 02 00 f2 	bz s7, 72 <malloc+0x1bd8>
    4bc4:	b8 40 00 a8 	load_32 s5, 16(s24)
    4bc8:	05 81 63 c1 	cmpgt_u s8, s5, s7
    4bcc:	48 14 00 f4 	bnz s8, 648 <malloc+0x1e24>
    4bd0:	c7 60 00 88 	store_32 s6, 24(s7)
    4bd4:	c4 40 00 a8 	load_32 s6, 16(s4)
    4bd8:	a6 00 00 f2 	bz s6, 20 <malloc+0x1bbc>
    4bdc:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    4be0:	a5 13 00 f4 	bnz s5, 628 <malloc+0x1e24>
    4be4:	c7 40 00 88 	store_32 s6, 16(s7)
    4be8:	e6 60 00 88 	store_32 s7, 24(s6)
    4bec:	a4 50 00 a8 	load_32 s5, 20(s4)
    4bf0:	c5 00 00 f2 	bz s5, 24 <malloc+0x1bd8>
    4bf4:	d8 40 00 a8 	load_32 s6, 16(s24)
    4bf8:	c6 80 62 c1 	cmpgt_u s6, s6, s5
    4bfc:	c6 12 00 f4 	bnz s6, 600 <malloc+0x1e24>
    4c00:	a7 50 00 88 	store_32 s5, 20(s7)
    4c04:	e5 60 00 88 	store_32 s7, 24(s5)
    4c08:	42 e0 ff 01 	and s2, s2, -8
    4c0c:	84 00 51 c0 	add_i s4, s4, s2
    4c10:	62 80 51 c0 	add_i s3, s2, s3
    4c14:	44 10 00 a8 	load_32 s2, 4(s4)
    4c18:	42 f8 ff 01 	and s2, s2, -2
    4c1c:	44 10 00 88 	store_32 s2, 4(s4)
    4c20:	43 04 00 00 	or s2, s3, 1
    4c24:	41 10 00 88 	store_32 s2, 4(s1)
    4c28:	81 80 51 c0 	add_i s4, s1, s3
    4c2c:	43 fc 03 16 	cmpgt_u s2, s3, 255
    4c30:	64 00 00 88 	store_32 s3, (s4)
    4c34:	02 02 00 f4 	bnz s2, 64 <malloc+0x1c44>
    4c38:	43 0c 00 0a 	shr s2, s3, 3
    4c3c:	78 00 00 a8 	load_32 s3, (s24)
    4c40:	80 04 00 0f 	move s4, 1
    4c44:	a2 0c 00 0b 	shl s5, s2, 3
    4c48:	b8 80 52 c0 	add_i s5, s24, s5
    4c4c:	84 00 b1 c0 	shl s4, s4, s2
    4c50:	c3 00 12 c0 	and s6, s3, s4
    4c54:	45 a0 00 05 	add_i s2, s5, 40
    4c58:	46 00 00 f4 	bnz s6, 8 <malloc+0x1c30>
    4c5c:	11 00 00 f6 	b 68 <malloc+0x1c70>
    4c60:	62 20 00 a8 	load_32 s3, 8(s2)
    4c64:	98 40 00 a8 	load_32 s4, 16(s24)
    4c68:	84 80 91 c1 	cmple_u s4, s4, s3
    4c6c:	04 02 00 f4 	bnz s4, 64 <malloc+0x1c7c>
    4c70:	79 00 00 f6 	b 484 <malloc+0x1e24>
    4c74:	40 00 00 0f 	move s2, 0
    4c78:	a3 20 00 0a 	shr s5, s3, 8
    4c7c:	80 00 f1 c0 	move s4, s2
    4c80:	05 06 00 f2 	bz s5, 192 <malloc+0x1d10>
    4c84:	9f fc 00 4f 	movehi s4, 2047
    4c88:	84 fc 7f 00 	or s4, s4, 8191
    4c8c:	83 00 62 c1 	cmpgt_u s4, s3, s4
    4c90:	44 00 00 f4 	bnz s4, 8 <malloc+0x1c68>
    4c94:	0f 00 00 f6 	b 60 <malloc+0x1ca0>
    4c98:	80 7c 00 0f 	move s4, 31
    4c9c:	29 00 00 f6 	b 164 <malloc+0x1d10>
    4ca0:	63 00 02 c0 	or s3, s3, s4
    4ca4:	78 00 00 88 	store_32 s3, (s24)
    4ca8:	60 00 f1 c0 	move s3, s2
    4cac:	22 20 00 88 	store_32 s1, 8(s2)
    4cb0:	60 23 00 05 	add_i s27, s0, 8
    4cb4:	23 30 00 88 	store_32 s1, 12(s3)
    4cb8:	61 20 00 88 	store_32 s3, 8(s1)
    4cbc:	41 30 00 88 	store_32 s2, 12(s1)
    4cc0:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4cc4:	00 08 00 01 	and s0, s0, 2
    4cc8:	c0 6a ff f3 	bz s0, -4776 <malloc+0x9f0>
    4ccc:	4f fb ff f7 	b -4804 <malloc+0x9d8>
    4cd0:	9f 0c 00 4f 	movehi s4, 127
    4cd4:	df 04 00 4f 	movehi s6, 63
    4cd8:	fe 00 00 4f 	movehi s7, 30
    4cdc:	84 00 7c 00 	or s4, s4, 7936
    4ce0:	85 00 52 c0 	add_i s4, s5, s4
    4ce4:	c6 00 40 00 	or s6, s6, 4096
    4ce8:	84 40 00 0a 	shr s4, s4, 16
    4cec:	84 20 00 01 	and s4, s4, 8
    4cf0:	a5 00 b2 c0 	shl s5, s5, s4
    4cf4:	c5 00 53 c0 	add_i s6, s5, s6
    4cf8:	c6 40 00 0a 	shr s6, s6, 16
    4cfc:	c6 10 00 01 	and s6, s6, 4
    4d00:	a5 00 b3 c0 	shl s5, s5, s6
    4d04:	86 00 02 c0 	or s4, s6, s4
    4d08:	e5 80 53 c0 	add_i s7, s5, s7
    4d0c:	e7 40 00 0a 	shr s7, s7, 16
    4d10:	c7 08 00 01 	and s6, s7, 2
    4d14:	e0 38 00 0f 	move s7, 14
    4d18:	84 00 03 c0 	or s4, s4, s6
    4d1c:	a5 00 b3 c0 	shl s5, s5, s6
    4d20:	87 00 62 c0 	sub_i s4, s7, s4
    4d24:	a5 3c 00 0a 	shr s5, s5, 15
    4d28:	84 80 52 c0 	add_i s4, s4, s5
    4d2c:	a4 1c 00 05 	add_i s5, s4, 7
    4d30:	a3 80 a2 c0 	shr s5, s3, s5
    4d34:	84 04 00 0b 	shl s4, s4, 1
    4d38:	a5 04 00 01 	and s5, s5, 1
    4d3c:	85 00 02 c0 	or s4, s5, s4
    4d40:	81 70 00 88 	store_32 s4, 28(s1)
    4d44:	c4 08 00 0b 	shl s6, s4, 2
    4d48:	41 50 00 88 	store_32 s2, 20(s1)
    4d4c:	f8 00 53 c0 	add_i s7, s24, s6
    4d50:	41 40 00 88 	store_32 s2, 16(s1)
    4d54:	40 04 00 0f 	move s2, 1
    4d58:	b8 10 00 a8 	load_32 s5, 4(s24)
    4d5c:	c2 00 b2 c0 	shl s6, s2, s4
    4d60:	47 c0 04 05 	add_i s2, s7, 304
    4d64:	05 01 13 c0 	and s8, s5, s6
    4d68:	48 00 00 f4 	bnz s8, 8 <malloc+0x1d40>
    4d6c:	08 00 00 f6 	b 32 <malloc+0x1d5c>
    4d70:	a2 00 00 a8 	load_32 s5, (s2)
    4d74:	c4 7c 00 10 	cmpeq_i s6, s4, 31
    4d78:	26 01 00 f4 	bnz s6, 36 <malloc+0x1d6c>
    4d7c:	40 64 00 0f 	move s2, 25
    4d80:	84 04 00 0a 	shr s4, s4, 1
    4d84:	42 00 62 c0 	sub_i s2, s2, s4
    4d88:	06 00 00 f6 	b 24 <malloc+0x1d70>
    4d8c:	65 00 03 c0 	or s3, s5, s6
    4d90:	78 10 00 88 	store_32 s3, 4(s24)
    4d94:	22 00 00 88 	store_32 s1, (s2)
    4d98:	13 00 00 f6 	b 76 <malloc+0x1db4>
    4d9c:	40 00 00 0f 	move s2, 0
    4da0:	83 00 b1 c0 	shl s4, s3, s2
    4da4:	40 80 f2 c0 	move s2, s5
    4da8:	a2 10 00 a8 	load_32 s5, 4(s2)
    4dac:	a5 e0 ff 01 	and s5, s5, -8
    4db0:	a5 80 01 c1 	cmpeq_i s5, s5, s3
    4db4:	85 02 00 f4 	bnz s5, 80 <malloc+0x1dd4>
    4db8:	a4 74 00 0a 	shr s5, s4, 29
    4dbc:	84 04 00 0b 	shl s4, s4, 1
    4dc0:	a5 10 00 01 	and s5, s5, 4
    4dc4:	c2 80 52 c0 	add_i s6, s2, s5
    4dc8:	a6 40 00 a8 	load_32 s5, 16(s6)
    4dcc:	c5 fe ff f5 	bnz s5, -40 <malloc+0x1d74>
    4dd0:	98 40 00 a8 	load_32 s4, 16(s24)
    4dd4:	66 40 00 05 	add_i s3, s6, 16
    4dd8:	84 80 61 c1 	cmpgt_u s4, s4, s3
    4ddc:	c4 03 00 f4 	bnz s4, 120 <malloc+0x1e24>
    4de0:	23 00 00 88 	store_32 s1, (s3)
    4de4:	41 60 00 88 	store_32 s2, 24(s1)
    4de8:	60 23 00 05 	add_i s27, s0, 8
    4dec:	21 30 00 88 	store_32 s1, 12(s1)
    4df0:	21 20 00 88 	store_32 s1, 8(s1)
    4df4:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4df8:	00 08 00 01 	and s0, s0, 2
    4dfc:	20 61 ff f3 	bz s0, -5084 <malloc+0x9f0>
    4e00:	02 fb ff f7 	b -5112 <malloc+0x9d8>
    4e04:	62 20 00 a8 	load_32 s3, 8(s2)
    4e08:	98 40 00 a8 	load_32 s4, 16(s24)
    4e0c:	a4 80 61 c1 	cmpgt_u s5, s4, s3
    4e10:	25 02 00 f4 	bnz s5, 68 <malloc+0x1e24>
    4e14:	84 00 61 c1 	cmpgt_u s4, s4, s2
    4e18:	e4 01 00 f4 	bnz s4, 60 <malloc+0x1e24>
    4e1c:	23 30 00 88 	store_32 s1, 12(s3)
    4e20:	60 23 00 05 	add_i s27, s0, 8
    4e24:	22 20 00 88 	store_32 s1, 8(s2)
    4e28:	61 20 00 88 	store_32 s3, 8(s1)
    4e2c:	41 30 00 88 	store_32 s2, 12(s1)
    4e30:	40 00 00 0f 	move s2, 0
    4e34:	41 60 00 88 	store_32 s2, 24(s1)
    4e38:	18 f0 06 a0 	load_u8 s0, 444(s24)
    4e3c:	00 08 00 01 	and s0, s0, 2
    4e40:	00 5f ff f3 	bz s0, -5152 <malloc+0x9f0>
    4e44:	f1 fa ff f7 	b -5180 <malloc+0x9d8>
    4e48:	e0 00 00 0f 	move s7, 0
    4e4c:	e6 ed ff f3 	bz s6, -580 <malloc+0x1bd8>
    4e50:	3d ff ff f7 	b -780 <malloc+0x1b14>
    4e54:	90 0a 00 f8 	call 10816 <abort>

0000000000004e58 free:
    4e58:	de 03 ff 05 	add_i sp, sp, -64
    4e5c:	1e f3 00 88 	store_32 s24, 60(sp)
    4e60:	fe e3 00 88 	store_32 ra, 56(sp)
    4e64:	80 32 00 f2 	bz s0, 1616 <free+0x65c>
    4e68:	26 00 00 4f 	movehi s1, 6
    4e6c:	01 43 05 00 	or s24, s1, 336
    4e70:	38 f0 06 a0 	load_u8 s1, 444(s24)
    4e74:	41 08 00 01 	and s2, s1, 2
    4e78:	20 e0 ff 05 	add_i s1, s0, -8
    4e7c:	e2 01 00 f2 	bz s2, 60 <free+0x60>
    4e80:	58 00 07 05 	add_i s2, s24, 448
    4e84:	60 04 00 0f 	move s3, 1
    4e88:	82 00 00 aa 	load_sync s4, (s2)
    4e8c:	a0 80 f1 c0 	move s5, s3
    4e90:	a2 00 00 8a 	store_sync s5, (s2)  
    4e94:	a5 ff ff f3 	bz s5, -12 <free+0x30>
    4e98:	04 01 00 f2 	bz s4, 32 <free+0x60>
    4e9c:	98 00 07 a8 	load_32 s4, 448(s24)
    4ea0:	e4 ff ff f5 	bnz s4, -4 <free+0x44>
    4ea4:	82 00 00 aa 	load_sync s4, (s2)
    4ea8:	a0 80 f1 c0 	move s5, s3
    4eac:	a2 00 00 8a 	store_sync s5, (s2)  
    4eb0:	a5 ff ff f3 	bz s5, -12 <free+0x4c>
    4eb4:	44 ff ff f5 	bnz s4, -24 <free+0x44>
    4eb8:	b8 40 00 a8 	load_32 s5, 16(s24)
    4ebc:	41 80 82 c1 	cmplt_u s2, s1, s5
    4ec0:	a2 3f 00 f4 	bnz s2, 2036 <free+0x85c>
    4ec4:	40 f0 ff a9 	load_32 s2, -4(s0)
    4ec8:	82 0c 00 01 	and s4, s2, 3
    4ecc:	04 04 00 10 	cmpeq_i s0, s4, 1
    4ed0:	20 3f 00 f4 	bnz s0, 2020 <free+0x85c>
    4ed4:	02 e0 ff 01 	and s0, s2, -8
    4ed8:	62 04 00 01 	and s3, s2, 1
    4edc:	41 00 50 c0 	add_i s2, s1, s0
    4ee0:	43 12 00 f4 	bnz s3, 584 <free+0x2d0>
    4ee4:	61 00 00 a8 	load_32 s3, (s1)
    4ee8:	44 2d 00 f2 	bz s4, 1448 <free+0x638>
    4eec:	21 80 61 c0 	sub_i s1, s1, s3
    4ef0:	81 80 82 c1 	cmplt_u s4, s1, s5
    4ef4:	04 3e 00 f4 	bnz s4, 1984 <free+0x85c>
    4ef8:	98 50 00 a8 	load_32 s4, 20(s24)
    4efc:	03 00 50 c0 	add_i s0, s3, s0
    4f00:	84 80 00 c1 	cmpeq_i s4, s4, s1
    4f04:	e4 03 00 f4 	bnz s4, 124 <free+0x128>
    4f08:	83 fc 03 16 	cmpgt_u s4, s3, 255
    4f0c:	a4 04 00 f4 	bnz s4, 148 <free+0x148>
    4f10:	c3 0c 00 0a 	shr s6, s3, 3
    4f14:	61 20 00 a8 	load_32 s3, 8(s1)
    4f18:	86 0c 00 0b 	shl s4, s6, 3
    4f1c:	98 00 52 c0 	add_i s4, s24, s4
    4f20:	e4 a0 00 05 	add_i s7, s4, 40
    4f24:	81 30 00 a8 	load_32 s4, 12(s1)
    4f28:	03 81 03 c1 	cmpeq_i s8, s3, s7
    4f2c:	c8 00 00 f4 	bnz s8, 24 <free+0xec>
    4f30:	05 81 61 c1 	cmpgt_u s8, s5, s3
    4f34:	08 3c 00 f4 	bnz s8, 1920 <free+0x85c>
    4f38:	03 31 00 a8 	load_32 s8, 12(s3)
    4f3c:	08 81 10 c1 	cmpne_i s8, s8, s1
    4f40:	a8 3b 00 f4 	bnz s8, 1908 <free+0x85c>
    4f44:	04 81 11 c1 	cmpne_i s8, s4, s3
    4f48:	48 00 00 f4 	bnz s8, 8 <free+0xf8>
    4f4c:	26 00 00 f6 	b 152 <free+0x18c>
    4f50:	c4 80 03 c1 	cmpeq_i s6, s4, s7
    4f54:	c6 00 00 f4 	bnz s6, 24 <free+0x114>
    4f58:	a5 00 62 c1 	cmpgt_u s5, s5, s4
    4f5c:	c5 3a 00 f4 	bnz s5, 1880 <free+0x85c>
    4f60:	a4 20 00 a8 	load_32 s5, 8(s4)
    4f64:	a5 80 10 c1 	cmpne_i s5, s5, s1
    4f68:	65 3a 00 f4 	bnz s5, 1868 <free+0x85c>
    4f6c:	83 30 00 88 	store_32 s4, 12(s3)
    4f70:	64 20 00 88 	store_32 s3, 8(s4)
    4f74:	62 80 90 c1 	cmple_u s3, s2, s1
    4f78:	e3 39 00 f4 	bnz s3, 1852 <free+0x85c>
    4f7c:	6d 00 00 f6 	b 436 <free+0x2d8>
    4f80:	62 10 00 a8 	load_32 s3, 4(s2)
    4f84:	83 0c 00 01 	and s4, s3, 3
    4f88:	84 0c 00 11 	cmpne_i s4, s4, 3
    4f8c:	e4 0c 00 f4 	bnz s4, 412 <free+0x2d0>
    4f90:	18 20 00 88 	store_32 s0, 8(s24)
    4f94:	63 f8 ff 01 	and s3, s3, -2
    4f98:	62 10 00 88 	store_32 s3, 4(s2)
    4f9c:	cb 00 00 f6 	b 812 <free+0x470>
    4fa0:	61 60 00 a8 	load_32 s3, 24(s1)
    4fa4:	81 30 00 a8 	load_32 s4, 12(s1)
    4fa8:	c4 80 00 c1 	cmpeq_i s6, s4, s1
    4fac:	e6 02 00 f4 	bnz s6, 92 <free+0x1b0>
    4fb0:	c1 20 00 a8 	load_32 s6, 8(s1)
    4fb4:	a5 00 63 c1 	cmpgt_u s5, s5, s6
    4fb8:	e5 37 00 f4 	bnz s5, 1788 <free+0x85c>
    4fbc:	a6 30 00 a8 	load_32 s5, 12(s6)
    4fc0:	a5 80 10 c1 	cmpne_i s5, s5, s1
    4fc4:	85 37 00 f4 	bnz s5, 1776 <free+0x85c>
    4fc8:	a4 20 00 a8 	load_32 s5, 8(s4)
    4fcc:	a5 80 10 c1 	cmpne_i s5, s5, s1
    4fd0:	25 37 00 f4 	bnz s5, 1764 <free+0x85c>
    4fd4:	86 30 00 88 	store_32 s4, 12(s6)
    4fd8:	c4 20 00 88 	store_32 s6, 8(s4)
    4fdc:	63 0a 00 f2 	bz s3, 332 <free+0x2d0>
    4fe0:	1f 00 00 f6 	b 124 <free+0x204>
    4fe4:	60 04 00 0f 	move s3, 1
    4fe8:	98 00 00 a8 	load_32 s4, (s24)
    4fec:	63 00 b3 c0 	shl s3, s3, s6
    4ff0:	63 fc ff 03 	xor s3, s3, -1
    4ff4:	64 80 11 c0 	and s3, s4, s3
    4ff8:	78 00 00 88 	store_32 s3, (s24)
    4ffc:	62 80 90 c1 	cmple_u s3, s2, s1
    5000:	a3 35 00 f4 	bnz s3, 1716 <free+0x85c>
    5004:	4b 00 00 f6 	b 300 <free+0x2d8>
    5008:	e1 50 00 a8 	load_32 s7, 20(s1)
    500c:	47 00 00 f4 	bnz s7, 8 <free+0x1bc>
    5010:	03 00 00 f6 	b 12 <free+0x1c4>
    5014:	c1 50 00 05 	add_i s6, s1, 20
    5018:	04 00 00 f6 	b 16 <free+0x1d0>
    501c:	c1 40 00 05 	add_i s6, s1, 16
    5020:	e6 00 00 a8 	load_32 s7, (s6)
    5024:	c7 33 00 f2 	bz s7, 1656 <free+0x844>
    5028:	80 80 f3 c0 	move s4, s7
    502c:	e4 50 00 a8 	load_32 s7, 20(s4)
    5030:	00 01 f3 c0 	move s8, s6
    5034:	c4 50 00 05 	add_i s6, s4, 20
    5038:	87 ff ff f5 	bnz s7, -16 <free+0x1d0>
    503c:	e4 40 00 a8 	load_32 s7, 16(s4)
    5040:	c4 40 00 05 	add_i s6, s4, 16
    5044:	27 ff ff f5 	bnz s7, -28 <free+0x1d0>
    5048:	a5 00 64 c1 	cmpgt_u s5, s5, s8
    504c:	45 33 00 f4 	bnz s5, 1640 <free+0x85c>
    5050:	a0 00 00 0f 	move s5, 0
    5054:	a8 00 00 88 	store_32 s5, (s8)
    5058:	83 06 00 f2 	bz s3, 208 <free+0x2d0>
    505c:	a1 70 00 a8 	load_32 s5, 28(s1)
    5060:	c5 08 00 0b 	shl s6, s5, 2
    5064:	d8 00 53 c0 	add_i s6, s24, s6
    5068:	e6 c0 04 a8 	load_32 s7, 304(s6)
    506c:	e7 80 10 c1 	cmpne_i s7, s7, s1
    5070:	47 00 00 f4 	bnz s7, 8 <free+0x220>
    5074:	0c 00 00 f6 	b 48 <free+0x24c>
    5078:	b8 40 00 a8 	load_32 s5, 16(s24)
    507c:	a5 80 61 c1 	cmpgt_u s5, s5, s3
    5080:	a5 31 00 f4 	bnz s5, 1588 <free+0x85c>
    5084:	a3 40 00 a8 	load_32 s5, 16(s3)
    5088:	a5 80 00 c1 	cmpeq_i s5, s5, s1
    508c:	45 02 00 f4 	bnz s5, 72 <free+0x27c>
    5090:	a0 50 00 0f 	move s5, 20
    5094:	a3 80 52 c0 	add_i s5, s3, s5
    5098:	85 00 00 88 	store_32 s4, (s5)
    509c:	64 04 00 f2 	bz s4, 140 <free+0x2d0>
    50a0:	11 00 00 f6 	b 68 <free+0x28c>
    50a4:	c6 c0 04 05 	add_i s6, s6, 304
    50a8:	86 00 00 88 	store_32 s4, (s6)
    50ac:	c4 01 00 f4 	bnz s4, 56 <free+0x28c>
    50b0:	60 04 00 0f 	move s3, 1
    50b4:	98 10 00 a8 	load_32 s4, 4(s24)
    50b8:	63 80 b2 c0 	shl s3, s3, s5
    50bc:	63 fc ff 03 	xor s3, s3, -1
    50c0:	64 80 11 c0 	and s3, s4, s3
    50c4:	78 10 00 88 	store_32 s3, 4(s24)
    50c8:	62 80 90 c1 	cmple_u s3, s2, s1
    50cc:	43 2f 00 f4 	bnz s3, 1512 <free+0x85c>
    50d0:	18 00 00 f6 	b 96 <free+0x2d8>
    50d4:	a0 40 00 0f 	move s5, 16
    50d8:	a3 80 52 c0 	add_i s5, s3, s5
    50dc:	85 00 00 88 	store_32 s4, (s5)
    50e0:	44 02 00 f2 	bz s4, 72 <free+0x2d0>
    50e4:	b8 40 00 a8 	load_32 s5, 16(s24)
    50e8:	c5 00 62 c1 	cmpgt_u s6, s5, s4
    50ec:	46 2e 00 f4 	bnz s6, 1480 <free+0x85c>
    50f0:	64 60 00 88 	store_32 s3, 24(s4)
    50f4:	61 40 00 a8 	load_32 s3, 16(s1)
    50f8:	a3 00 00 f2 	bz s3, 20 <free+0x2b4>
    50fc:	a5 80 61 c1 	cmpgt_u s5, s5, s3
    5100:	a5 2d 00 f4 	bnz s5, 1460 <free+0x85c>
    5104:	64 40 00 88 	store_32 s3, 16(s4)
    5108:	83 60 00 88 	store_32 s4, 24(s3)
    510c:	61 50 00 a8 	load_32 s3, 20(s1)
    5110:	c3 00 00 f2 	bz s3, 24 <free+0x2d0>
    5114:	b8 40 00 a8 	load_32 s5, 16(s24)
    5118:	a5 80 61 c1 	cmpgt_u s5, s5, s3
    511c:	c5 2c 00 f4 	bnz s5, 1432 <free+0x85c>
    5120:	64 50 00 88 	store_32 s3, 20(s4)
    5124:	83 60 00 88 	store_32 s4, 24(s3)
    5128:	62 80 90 c1 	cmple_u s3, s2, s1
    512c:	43 2c 00 f4 	bnz s3, 1416 <free+0x85c>
    5130:	62 10 00 a8 	load_32 s3, 4(s2)
    5134:	83 04 00 01 	and s4, s3, 1
    5138:	e4 2b 00 f2 	bz s4, 1404 <free+0x85c>
    513c:	83 08 00 01 	and s4, s3, 2
    5140:	e4 04 00 f4 	bnz s4, 156 <free+0x384>
    5144:	98 60 00 a8 	load_32 s4, 24(s24)
    5148:	84 00 11 c1 	cmpne_i s4, s4, s2
    514c:	44 00 00 f4 	bnz s4, 8 <free+0x2fc>
    5150:	45 00 00 f6 	b 276 <free+0x40c>
    5154:	98 50 00 a8 	load_32 s4, 20(s24)
    5158:	84 00 11 c1 	cmpne_i s4, s4, s2
    515c:	44 00 00 f4 	bnz s4, 8 <free+0x30c>
    5160:	56 00 00 f6 	b 344 <free+0x460>
    5164:	83 fc 03 16 	cmpgt_u s4, s3, 255
    5168:	64 0d 00 f4 	bnz s4, 428 <free+0x4bc>
    516c:	c3 0c 00 0a 	shr s6, s3, 3
    5170:	82 20 00 a8 	load_32 s4, 8(s2)
    5174:	a6 0c 00 0b 	shl s5, s6, 3
    5178:	b8 80 52 c0 	add_i s5, s24, s5
    517c:	e5 a0 00 05 	add_i s7, s5, 40
    5180:	a2 30 00 a8 	load_32 s5, 12(s2)
    5184:	04 81 03 c1 	cmpeq_i s8, s4, s7
    5188:	e8 00 00 f4 	bnz s8, 28 <free+0x34c>
    518c:	18 41 00 a8 	load_32 s8, 16(s24)
    5190:	08 01 62 c1 	cmpgt_u s8, s8, s4
    5194:	08 29 00 f4 	bnz s8, 1312 <free+0x85c>
    5198:	04 31 00 a8 	load_32 s8, 12(s4)
    519c:	08 01 11 c1 	cmpne_i s8, s8, s2
    51a0:	a8 28 00 f4 	bnz s8, 1300 <free+0x85c>
    51a4:	05 01 12 c1 	cmpne_i s8, s5, s4
    51a8:	48 00 00 f4 	bnz s8, 8 <free+0x358>
    51ac:	e0 00 00 f6 	b 896 <free+0x6d4>
    51b0:	c5 80 03 c1 	cmpeq_i s6, s5, s7
    51b4:	e6 00 00 f4 	bnz s6, 28 <free+0x378>
    51b8:	d8 40 00 a8 	load_32 s6, 16(s24)
    51bc:	c6 80 62 c1 	cmpgt_u s6, s6, s5
    51c0:	a6 27 00 f4 	bnz s6, 1268 <free+0x85c>
    51c4:	c5 20 00 a8 	load_32 s6, 8(s5)
    51c8:	46 00 11 c1 	cmpne_i s2, s6, s2
    51cc:	42 27 00 f4 	bnz s2, 1256 <free+0x85c>
    51d0:	a4 30 00 88 	store_32 s5, 12(s4)
    51d4:	85 20 00 88 	store_32 s4, 8(s5)
    51d8:	23 01 00 f6 	b 1164 <free+0x80c>
    51dc:	63 f8 ff 01 	and s3, s3, -2
    51e0:	62 10 00 88 	store_32 s3, 4(s2)
    51e4:	41 00 50 c0 	add_i s2, s1, s0
    51e8:	60 04 00 00 	or s3, s0, 1
    51ec:	61 10 00 88 	store_32 s3, 4(s1)
    51f0:	02 00 00 88 	store_32 s0, (s2)
    51f4:	40 fc 03 16 	cmpgt_u s2, s0, 255
    51f8:	02 02 00 f4 	bnz s2, 64 <free+0x3e0>
    51fc:	00 0c 00 0a 	shr s0, s0, 3
    5200:	58 00 00 a8 	load_32 s2, (s24)
    5204:	60 04 00 0f 	move s3, 1
    5208:	80 0c 00 0b 	shl s4, s0, 3
    520c:	98 00 52 c0 	add_i s4, s24, s4
    5210:	63 00 b0 c0 	shl s3, s3, s0
    5214:	a2 80 11 c0 	and s5, s2, s3
    5218:	04 a0 00 05 	add_i s0, s4, 40
    521c:	45 00 00 f4 	bnz s5, 8 <free+0x3cc>
    5220:	32 00 00 f6 	b 200 <free+0x490>
    5224:	40 20 00 a8 	load_32 s2, 8(s0)
    5228:	78 40 00 a8 	load_32 s3, 16(s24)
    522c:	63 00 91 c1 	cmple_u s3, s3, s2
    5230:	23 06 00 f4 	bnz s3, 196 <free+0x49c>
    5234:	20 01 00 f6 	b 1152 <free+0x85c>
    5238:	40 00 00 0f 	move s2, 0
    523c:	80 20 00 0a 	shr s4, s0, 8
    5240:	60 00 f1 c0 	move s3, s2
    5244:	44 0c 00 f2 	bz s4, 392 <free+0x574>
    5248:	7f fc 00 4f 	movehi s3, 2047
    524c:	63 fc 7f 00 	or s3, s3, 8191
    5250:	60 80 61 c1 	cmpgt_u s3, s0, s3
    5254:	43 00 00 f4 	bnz s3, 8 <free+0x404>
    5258:	41 00 00 f6 	b 260 <free+0x504>
    525c:	60 7c 00 0f 	move s3, 31
    5260:	5b 00 00 f6 	b 364 <free+0x574>
    5264:	58 30 00 a8 	load_32 s2, 12(s24)
    5268:	02 00 50 c0 	add_i s0, s2, s0
    526c:	18 30 00 88 	store_32 s0, 12(s24)
    5270:	38 60 00 88 	store_32 s1, 24(s24)
    5274:	40 04 00 00 	or s2, s0, 1
    5278:	41 10 00 88 	store_32 s2, 4(s1)
    527c:	58 50 00 a8 	load_32 s2, 20(s24)
    5280:	21 00 11 c1 	cmpne_i s1, s1, s2
    5284:	81 00 00 f4 	bnz s1, 16 <free+0x43c>
    5288:	20 00 00 0f 	move s1, 0
    528c:	38 50 00 88 	store_32 s1, 20(s24)
    5290:	38 20 00 88 	store_32 s1, 8(s24)
    5294:	38 70 00 a8 	load_32 s1, 28(s24)
    5298:	00 80 90 c1 	cmple_u s0, s0, s1
    529c:	a0 0f 00 f4 	bnz s0, 500 <free+0x638>
    52a0:	00 00 00 0f 	move s0, 0
    52a4:	05 01 00 f8 	call 1044 <sys_trim>
    52a8:	18 f0 06 a0 	load_u8 s0, 444(s24)
    52ac:	00 08 00 01 	and s0, s0, 2
    52b0:	20 10 00 f2 	bz s0, 516 <free+0x65c>
    52b4:	7a 00 00 f6 	b 488 <free+0x644>
    52b8:	58 20 00 a8 	load_32 s2, 8(s24)
    52bc:	02 00 50 c0 	add_i s0, s2, s0
    52c0:	18 20 00 88 	store_32 s0, 8(s24)
    52c4:	38 50 00 88 	store_32 s1, 20(s24)
    52c8:	41 00 50 c0 	add_i s2, s1, s0
    52cc:	60 04 00 00 	or s3, s0, 1
    52d0:	61 10 00 88 	store_32 s3, 4(s1)
    52d4:	02 00 00 88 	store_32 s0, (s2)
    52d8:	18 f0 06 a0 	load_u8 s0, 444(s24)
    52dc:	00 08 00 01 	and s0, s0, 2
    52e0:	a0 0e 00 f2 	bz s0, 468 <free+0x65c>
    52e4:	6e 00 00 f6 	b 440 <free+0x644>
    52e8:	42 80 01 c0 	or s2, s2, s3
    52ec:	58 00 00 88 	store_32 s2, (s24)
    52f0:	40 00 f0 c0 	move s2, s0
    52f4:	20 20 00 88 	store_32 s1, 8(s0)
    52f8:	22 30 00 88 	store_32 s1, 12(s2)
    52fc:	41 20 00 88 	store_32 s2, 8(s1)
    5300:	01 30 00 88 	store_32 s0, 12(s1)
    5304:	18 f0 06 a0 	load_u8 s0, 444(s24)
    5308:	00 08 00 01 	and s0, s0, 2
    530c:	40 0d 00 f2 	bz s0, 424 <free+0x65c>
    5310:	63 00 00 f6 	b 396 <free+0x644>
    5314:	82 60 00 a8 	load_32 s4, 24(s2)
    5318:	a2 30 00 a8 	load_32 s5, 12(s2)
    531c:	c5 00 01 c1 	cmpeq_i s6, s5, s2
    5320:	46 11 00 f4 	bnz s6, 552 <free+0x6f0>
    5324:	c2 20 00 a8 	load_32 s6, 8(s2)
    5328:	f8 40 00 a8 	load_32 s7, 16(s24)
    532c:	e7 00 63 c1 	cmpgt_u s7, s7, s6
    5330:	27 1c 00 f4 	bnz s7, 900 <free+0x85c>
    5334:	e6 30 00 a8 	load_32 s7, 12(s6)
    5338:	e7 00 11 c1 	cmpne_i s7, s7, s2
    533c:	c7 1b 00 f4 	bnz s7, 888 <free+0x85c>
    5340:	e5 20 00 a8 	load_32 s7, 8(s5)
    5344:	e7 00 11 c1 	cmpne_i s7, s7, s2
    5348:	67 1b 00 f4 	bnz s7, 876 <free+0x85c>
    534c:	a6 30 00 88 	store_32 s5, 12(s6)
    5350:	c5 20 00 88 	store_32 s6, 8(s5)
    5354:	84 18 00 f2 	bz s4, 784 <free+0x80c>
    5358:	92 00 00 f6 	b 584 <free+0x748>
    535c:	7f 0c 00 4f 	movehi s3, 127
    5360:	bf 04 00 4f 	movehi s5, 63
    5364:	de 00 00 4f 	movehi s6, 30
    5368:	63 00 7c 00 	or s3, s3, 7936
    536c:	64 80 51 c0 	add_i s3, s4, s3
    5370:	a5 00 40 00 	or s5, s5, 4096
    5374:	63 40 00 0a 	shr s3, s3, 16
    5378:	63 20 00 01 	and s3, s3, 8
    537c:	84 80 b1 c0 	shl s4, s4, s3
    5380:	a4 80 52 c0 	add_i s5, s4, s5
    5384:	a5 40 00 0a 	shr s5, s5, 16
    5388:	a5 10 00 01 	and s5, s5, 4
    538c:	84 80 b2 c0 	shl s4, s4, s5
    5390:	65 80 01 c0 	or s3, s5, s3
    5394:	c4 00 53 c0 	add_i s6, s4, s6
    5398:	c6 40 00 0a 	shr s6, s6, 16
    539c:	a6 08 00 01 	and s5, s6, 2
    53a0:	c0 38 00 0f 	move s6, 14
    53a4:	63 80 02 c0 	or s3, s3, s5
    53a8:	84 80 b2 c0 	shl s4, s4, s5
    53ac:	66 80 61 c0 	sub_i s3, s6, s3
    53b0:	84 3c 00 0a 	shr s4, s4, 15
    53b4:	63 00 52 c0 	add_i s3, s3, s4
    53b8:	83 1c 00 05 	add_i s4, s3, 7
    53bc:	80 00 a2 c0 	shr s4, s0, s4
    53c0:	63 04 00 0b 	shl s3, s3, 1
    53c4:	84 04 00 01 	and s4, s4, 1
    53c8:	64 80 01 c0 	or s3, s4, s3
    53cc:	61 70 00 88 	store_32 s3, 28(s1)
    53d0:	a3 08 00 0b 	shl s5, s3, 2
    53d4:	41 50 00 88 	store_32 s2, 20(s1)
    53d8:	d8 80 52 c0 	add_i s6, s24, s5
    53dc:	41 40 00 88 	store_32 s2, 16(s1)
    53e0:	40 04 00 0f 	move s2, 1
    53e4:	98 10 00 a8 	load_32 s4, 4(s24)
    53e8:	a2 80 b1 c0 	shl s5, s2, s3
    53ec:	46 c0 04 05 	add_i s2, s6, 304
    53f0:	e4 80 12 c0 	and s7, s4, s5
    53f4:	47 00 00 f4 	bnz s7, 8 <free+0x5a4>
    53f8:	08 00 00 f6 	b 32 <free+0x5c0>
    53fc:	82 00 00 a8 	load_32 s4, (s2)
    5400:	a3 7c 00 10 	cmpeq_i s5, s3, 31
    5404:	25 01 00 f4 	bnz s5, 36 <free+0x5d0>
    5408:	40 64 00 0f 	move s2, 25
    540c:	63 04 00 0a 	shr s3, s3, 1
    5410:	42 80 61 c0 	sub_i s2, s2, s3
    5414:	06 00 00 f6 	b 24 <free+0x5d4>
    5418:	04 80 02 c0 	or s0, s4, s5
    541c:	18 10 00 88 	store_32 s0, 4(s24)
    5420:	22 00 00 88 	store_32 s1, (s2)
    5424:	13 00 00 f6 	b 76 <free+0x618>
    5428:	40 00 00 0f 	move s2, 0
    542c:	60 00 b1 c0 	shl s3, s0, s2
    5430:	40 00 f2 c0 	move s2, s4
    5434:	82 10 00 a8 	load_32 s4, 4(s2)
    5438:	84 e0 ff 01 	and s4, s4, -8
    543c:	84 00 00 c1 	cmpeq_i s4, s4, s0
    5440:	24 04 00 f4 	bnz s4, 132 <free+0x66c>
    5444:	83 74 00 0a 	shr s4, s3, 29
    5448:	63 04 00 0b 	shl s3, s3, 1
    544c:	84 10 00 01 	and s4, s4, 4
    5450:	a2 00 52 c0 	add_i s5, s2, s4
    5454:	85 40 00 a8 	load_32 s4, 16(s5)
    5458:	c4 fe ff f5 	bnz s4, -40 <free+0x5d8>
    545c:	78 40 00 a8 	load_32 s3, 16(s24)
    5460:	05 40 00 05 	add_i s0, s5, 16
    5464:	63 00 60 c1 	cmpgt_u s3, s3, s0
    5468:	63 12 00 f4 	bnz s3, 588 <free+0x85c>
    546c:	20 00 00 88 	store_32 s1, (s0)
    5470:	41 60 00 88 	store_32 s2, 24(s1)
    5474:	21 30 00 88 	store_32 s1, 12(s1)
    5478:	21 20 00 88 	store_32 s1, 8(s1)
    547c:	18 80 00 a8 	load_32 s0, 32(s24)
    5480:	00 fc ff 05 	add_i s0, s0, -1
    5484:	18 80 00 88 	store_32 s0, 32(s24)
    5488:	40 00 00 f4 	bnz s0, 8 <free+0x638>
    548c:	1e 00 00 f6 	b 120 <free+0x6ac>
    5490:	18 f0 06 a0 	load_u8 s0, 444(s24)
    5494:	00 08 00 01 	and s0, s0, 2
    5498:	e0 00 00 f2 	bz s0, 28 <free+0x65c>
    549c:	18 00 07 05 	add_i s0, s24, 448
    54a0:	20 00 00 0f 	move s1, 0
    54a4:	40 00 00 aa 	load_sync s2, (s0)
    54a8:	40 80 f0 c0 	move s2, s1
    54ac:	40 00 00 8a 	store_sync s2, (s0)  
    54b0:	a2 ff ff f3 	bz s2, -12 <free+0x64c>
    54b4:	fe e3 00 a8 	load_32 ra, 56(sp)
    54b8:	1e f3 00 a8 	load_32 s24, 60(sp)
    54bc:	de 03 01 05 	add_i sp, sp, 64
    54c0:	1f 00 00 f0 	ret
    54c4:	02 20 00 a8 	load_32 s0, 8(s2)
    54c8:	78 40 00 a8 	load_32 s3, 16(s24)
    54cc:	83 00 60 c1 	cmpgt_u s4, s3, s0
    54d0:	24 0f 00 f4 	bnz s4, 484 <free+0x85c>
    54d4:	63 00 61 c1 	cmpgt_u s3, s3, s2
    54d8:	e3 0e 00 f4 	bnz s3, 476 <free+0x85c>
    54dc:	20 30 00 88 	store_32 s1, 12(s0)
    54e0:	22 20 00 88 	store_32 s1, 8(s2)
    54e4:	01 20 00 88 	store_32 s0, 8(s1)
    54e8:	00 00 00 0f 	move s0, 0
    54ec:	41 30 00 88 	store_32 s2, 12(s1)
    54f0:	01 60 00 88 	store_32 s0, 24(s1)
    54f4:	18 80 00 a8 	load_32 s0, 32(s24)
    54f8:	00 fc ff 05 	add_i s0, s0, -1
    54fc:	18 80 00 88 	store_32 s0, 32(s24)
    5500:	80 fc ff f5 	bnz s0, -112 <free+0x638>
    5504:	18 30 07 05 	add_i s0, s24, 460
    5508:	20 00 00 a8 	load_32 s1, (s0)
    550c:	01 20 00 05 	add_i s0, s1, 8
    5510:	c1 ff ff f5 	bnz s1, -8 <free+0x6b0>
    5514:	00 fc ff 0f 	move s0, -1
    5518:	18 80 00 88 	store_32 s0, 32(s24)
    551c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    5520:	00 08 00 01 	and s0, s0, 2
    5524:	80 fc ff f3 	bz s0, -112 <free+0x65c>
    5528:	dd ff ff f7 	b -140 <free+0x644>
    552c:	40 04 00 0f 	move s2, 1
    5530:	98 00 00 a8 	load_32 s4, (s24)
    5534:	42 00 b3 c0 	shl s2, s2, s6
    5538:	42 fc ff 03 	xor s2, s2, -1
    553c:	44 00 11 c0 	and s2, s4, s2
    5540:	58 00 00 88 	store_32 s2, (s24)
    5544:	48 00 00 f6 	b 288 <free+0x80c>
    5548:	e2 50 00 a8 	load_32 s7, 20(s2)
    554c:	47 00 00 f4 	bnz s7, 8 <free+0x6fc>
    5550:	03 00 00 f6 	b 12 <free+0x704>
    5554:	c2 50 00 05 	add_i s6, s2, 20
    5558:	04 00 00 f6 	b 16 <free+0x710>
    555c:	c2 40 00 05 	add_i s6, s2, 16
    5560:	e6 00 00 a8 	load_32 s7, (s6)
    5564:	27 0a 00 f2 	bz s7, 324 <free+0x850>
    5568:	a0 80 f3 c0 	move s5, s7
    556c:	e5 50 00 a8 	load_32 s7, 20(s5)
    5570:	00 01 f3 c0 	move s8, s6
    5574:	c5 50 00 05 	add_i s6, s5, 20
    5578:	87 ff ff f5 	bnz s7, -16 <free+0x710>
    557c:	e5 40 00 a8 	load_32 s7, 16(s5)
    5580:	c5 40 00 05 	add_i s6, s5, 16
    5584:	27 ff ff f5 	bnz s7, -28 <free+0x710>
    5588:	d8 40 00 a8 	load_32 s6, 16(s24)
    558c:	c6 00 64 c1 	cmpgt_u s6, s6, s8
    5590:	26 09 00 f4 	bnz s6, 292 <free+0x85c>
    5594:	c0 00 00 0f 	move s6, 0
    5598:	c8 00 00 88 	store_32 s6, (s8)
    559c:	44 06 00 f2 	bz s4, 200 <free+0x80c>
    55a0:	c2 70 00 a8 	load_32 s6, 28(s2)
    55a4:	e6 08 00 0b 	shl s7, s6, 2
    55a8:	f8 80 53 c0 	add_i s7, s24, s7
    55ac:	07 c1 04 a8 	load_32 s8, 304(s7)
    55b0:	08 01 11 c1 	cmpne_i s8, s8, s2
    55b4:	48 00 00 f4 	bnz s8, 8 <free+0x764>
    55b8:	0c 00 00 f6 	b 48 <free+0x790>
    55bc:	d8 40 00 a8 	load_32 s6, 16(s24)
    55c0:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    55c4:	86 07 00 f4 	bnz s6, 240 <free+0x85c>
    55c8:	c4 40 00 a8 	load_32 s6, 16(s4)
    55cc:	c6 00 01 c1 	cmpeq_i s6, s6, s2
    55d0:	06 02 00 f4 	bnz s6, 64 <free+0x7b8>
    55d4:	c0 50 00 0f 	move s6, 20
    55d8:	c4 00 53 c0 	add_i s6, s4, s6
    55dc:	a6 00 00 88 	store_32 s5, (s6)
    55e0:	25 04 00 f2 	bz s5, 132 <free+0x80c>
    55e4:	0f 00 00 f6 	b 60 <free+0x7c8>
    55e8:	e7 c0 04 05 	add_i s7, s7, 304
    55ec:	a7 00 00 88 	store_32 s5, (s7)
    55f0:	85 01 00 f4 	bnz s5, 48 <free+0x7c8>
    55f4:	40 04 00 0f 	move s2, 1
    55f8:	98 10 00 a8 	load_32 s4, 4(s24)
    55fc:	42 00 b3 c0 	shl s2, s2, s6
    5600:	42 fc ff 03 	xor s2, s2, -1
    5604:	44 00 11 c0 	and s2, s4, s2
    5608:	58 10 00 88 	store_32 s2, 4(s24)
    560c:	16 00 00 f6 	b 88 <free+0x80c>
    5610:	c0 40 00 0f 	move s6, 16
    5614:	c4 00 53 c0 	add_i s6, s4, s6
    5618:	a6 00 00 88 	store_32 s5, (s6)
    561c:	45 02 00 f2 	bz s5, 72 <free+0x80c>
    5620:	d8 40 00 a8 	load_32 s6, 16(s24)
    5624:	e6 80 62 c1 	cmpgt_u s7, s6, s5
    5628:	67 04 00 f4 	bnz s7, 140 <free+0x85c>
    562c:	85 60 00 88 	store_32 s4, 24(s5)
    5630:	82 40 00 a8 	load_32 s4, 16(s2)
    5634:	a4 00 00 f2 	bz s4, 20 <free+0x7f0>
    5638:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    563c:	c6 03 00 f4 	bnz s6, 120 <free+0x85c>
    5640:	85 40 00 88 	store_32 s4, 16(s5)
    5644:	a4 60 00 88 	store_32 s5, 24(s4)
    5648:	42 50 00 a8 	load_32 s2, 20(s2)
    564c:	c2 00 00 f2 	bz s2, 24 <free+0x80c>
    5650:	98 40 00 a8 	load_32 s4, 16(s24)
    5654:	84 00 61 c1 	cmpgt_u s4, s4, s2
    5658:	e4 02 00 f4 	bnz s4, 92 <free+0x85c>
    565c:	45 50 00 88 	store_32 s2, 20(s5)
    5660:	a2 60 00 88 	store_32 s5, 24(s2)
    5664:	43 e0 ff 01 	and s2, s3, -8
    5668:	02 00 50 c0 	add_i s0, s2, s0
    566c:	41 00 50 c0 	add_i s2, s1, s0
    5670:	60 04 00 00 	or s3, s0, 1
    5674:	61 10 00 88 	store_32 s3, 4(s1)
    5678:	02 00 00 88 	store_32 s0, (s2)
    567c:	58 50 00 a8 	load_32 s2, 20(s24)
    5680:	41 00 11 c1 	cmpne_i s2, s1, s2
    5684:	82 db ff f5 	bnz s2, -1168 <free+0x39c>
    5688:	18 20 00 88 	store_32 s0, 8(s24)
    568c:	18 f0 06 a0 	load_u8 s0, 444(s24)
    5690:	00 08 00 01 	and s0, s0, 2
    5694:	00 f1 ff f3 	bz s0, -480 <free+0x65c>
    5698:	81 ff ff f7 	b -508 <free+0x644>
    569c:	80 00 00 0f 	move s4, 0
    56a0:	43 d4 ff f3 	bz s3, -1400 <free+0x2d0>
    56a4:	6e fe ff f7 	b -1608 <free+0x204>
    56a8:	a0 00 00 0f 	move s5, 0
    56ac:	c4 fd ff f3 	bz s4, -72 <free+0x80c>
    56b0:	bc ff ff f7 	b -272 <free+0x748>
    56b4:	78 08 00 f8 	call 8672 <abort>

00000000000056b8 sys_trim:
    56b8:	de 03 ff 05 	add_i sp, sp, -64
    56bc:	1e f3 00 88 	store_32 s24, 60(sp)
    56c0:	3e e3 00 88 	store_32 s25, 56(sp)
    56c4:	5e d3 00 88 	store_32 s26, 52(sp)
    56c8:	7e c3 00 88 	store_32 s27, 48(sp)
    56cc:	fe b3 00 88 	store_32 ra, 44(sp)
    56d0:	26 00 00 4f 	movehi s1, 6
    56d4:	61 e3 04 00 	or s27, s1, 312
    56d8:	3b 00 00 a8 	load_32 s1, (s27)
    56dc:	61 05 00 f4 	bnz s1, 172 <sys_trim+0xd0>
    56e0:	26 00 00 4f 	movehi s1, 6
    56e4:	40 04 00 0f 	move s2, 1
    56e8:	21 b0 0c 00 	or s1, s1, 812
    56ec:	61 00 00 aa 	load_sync s3, (s1)
    56f0:	80 00 f1 c0 	move s4, s2
    56f4:	81 00 00 8a 	store_sync s4, (s1)  
    56f8:	a4 ff ff f3 	bz s4, -12 <sys_trim+0x34>
    56fc:	03 01 00 f2 	bz s3, 32 <sys_trim+0x64>
    5700:	61 00 00 a8 	load_32 s3, (s1)
    5704:	e3 ff ff f5 	bnz s3, -4 <sys_trim+0x48>
    5708:	61 00 00 aa 	load_sync s3, (s1)
    570c:	80 00 f1 c0 	move s4, s2
    5710:	81 00 00 8a 	store_sync s4, (s1)  
    5714:	a4 ff ff f3 	bz s4, -12 <sys_trim+0x50>
    5718:	43 ff ff f5 	bnz s3, -24 <sys_trim+0x48>
    571c:	5b 00 00 a8 	load_32 s2, (s27)
    5720:	a2 02 00 f4 	bnz s2, 84 <sys_trim+0xbc>
    5724:	40 00 40 0f 	move s2, 4096
    5728:	5b 20 00 88 	store_32 s2, 8(s27)
    572c:	5b 10 00 88 	store_32 s2, 4(s27)
    5730:	40 fc ff 0f 	move s2, -1
    5734:	5b 30 00 88 	store_32 s2, 12(s27)
    5738:	46 00 00 4f 	movehi s2, 6
    573c:	60 20 00 4f 	movehi s3, 256
    5740:	7b 40 00 88 	store_32 s3, 16(s27)
    5744:	60 08 00 0f 	move s3, 2
    5748:	7b 50 00 88 	store_32 s3, 20(s27)
    574c:	42 40 05 00 	or s2, s2, 336
    5750:	aa 54 55 4f 	movehi s5, 174762
    5754:	80 00 00 0f 	move s4, 0
    5758:	62 f0 06 88 	store_32 s3, 444(s2)
    575c:	7e a0 00 05 	add_i s3, sp, 40
    5760:	82 00 07 88 	store_32 s4, 448(s2)
    5764:	45 60 55 00 	or s2, s5, 5464
    5768:	63 c0 ff 01 	and s3, s3, -16
    576c:	43 00 31 c0 	xor s2, s3, s2
    5770:	5b 00 00 88 	store_32 s2, (s27)
    5774:	40 00 00 0f 	move s2, 0
    5778:	61 00 00 aa 	load_sync s3, (s1)
    577c:	60 00 f1 c0 	move s3, s2
    5780:	61 00 00 8a 	store_sync s3, (s1)  
    5784:	a3 ff ff f3 	bz s3, -12 <sys_trim+0xc0>
    5788:	20 fc fe 16 	cmpgt_u s1, s0, -65
    578c:	60 00 00 0f 	move s3, 0
    5790:	a1 0a 00 f4 	bnz s1, 340 <sys_trim+0x22c>
    5794:	26 00 00 4f 	movehi s1, 6
    5798:	81 40 05 00 	or s4, s1, 336
    579c:	44 63 00 a8 	load_32 s26, 24(s4)
    57a0:	3a 0a 00 f2 	bz s26, 324 <sys_trim+0x22c>
    57a4:	24 30 00 a8 	load_32 s1, 12(s4)
    57a8:	40 a0 00 05 	add_i s2, s0, 40
    57ac:	41 00 91 c1 	cmple_u s2, s1, s2
    57b0:	e2 08 00 f4 	bnz s2, 284 <sys_trim+0x214>
    57b4:	40 5c ff 0f 	move s2, -41
    57b8:	7e 80 00 88 	store_32 s3, 32(sp)
    57bc:	1b 23 00 a8 	load_32 s24, 8(s27)
    57c0:	02 00 60 c0 	sub_i s0, s2, s0
    57c4:	00 80 50 c0 	add_i s0, s0, s1
    57c8:	20 00 fc c0 	move s1, s24
    57cc:	9e 90 00 88 	store_32 s4, 36(sp)
    57d0:	00 00 5c c0 	add_i s0, s0, s24
    57d4:	aa 13 00 f8 	call 20136 <__udivsi3>
    57d8:	9e 90 00 a8 	load_32 s4, 36(sp)
    57dc:	00 fc ff 05 	add_i s0, s0, -1
    57e0:	24 13 07 05 	add_i s25, s4, 452
    57e4:	39 00 00 a8 	load_32 s1, (s25)
    57e8:	41 00 6d c1 	cmpgt_u s2, s1, s26
    57ec:	42 00 00 f4 	bnz s2, 8 <sys_trim+0x13c>
    57f0:	05 00 00 f6 	b 20 <sys_trim+0x14c>
    57f4:	39 23 00 a8 	load_32 s25, 8(s25)
    57f8:	39 00 00 a8 	load_32 s1, (s25)
    57fc:	41 00 6d c1 	cmpgt_u s2, s1, s26
    5800:	a2 ff ff f5 	bnz s2, -12 <sys_trim+0x13c>
    5804:	59 10 00 a8 	load_32 s2, 4(s25)
    5808:	21 00 51 c0 	add_i s1, s1, s2
    580c:	21 00 6d c1 	cmpgt_u s1, s1, s26
    5810:	41 00 00 f4 	bnz s1, 8 <sys_trim+0x160>
    5814:	f8 ff ff f7 	b -32 <sys_trim+0x13c>
    5818:	39 30 00 a0 	load_u8 s1, 12(s25)
    581c:	7e 80 00 a8 	load_32 s3, 32(sp)
    5820:	21 20 00 01 	and s1, s1, 8
    5824:	41 05 00 f4 	bnz s1, 168 <sys_trim+0x214>
    5828:	3f fc 7f 4f 	movehi s1, 262143
    582c:	40 00 7c c0 	mull_i s2, s0, s24
    5830:	01 f8 7f 00 	or s0, s1, 8190
    5834:	02 00 60 c1 	cmpgt_u s0, s2, s0
    5838:	40 00 00 f4 	bnz s0, 8 <sys_trim+0x188>
    583c:	03 00 00 f6 	b 12 <sys_trim+0x190>
    5840:	00 00 80 4f 	movehi s0, 262144
    5844:	40 00 6c c0 	sub_i s2, s0, s24
    5848:	06 00 00 4f 	movehi s0, 6
    584c:	00 07 00 0f 	move s24, 1
    5850:	40 b3 0c 00 	or s26, s0, 812
    5854:	1a 00 00 aa 	load_sync s0, (s26)
    5858:	20 00 fc c0 	move s1, s24
    585c:	3a 00 00 8a 	store_sync s1, (s26)  
    5860:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x19c>
    5864:	5e 60 00 88 	store_32 s2, 24(sp)
    5868:	00 01 00 f2 	bz s0, 32 <sys_trim+0x1d0>
    586c:	1a 00 00 a8 	load_32 s0, (s26)
    5870:	e0 ff ff f5 	bnz s0, -4 <sys_trim+0x1b4>
    5874:	1a 00 00 aa 	load_sync s0, (s26)
    5878:	20 00 fc c0 	move s1, s24
    587c:	3a 00 00 8a 	store_sync s1, (s26)  
    5880:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x1bc>
    5884:	40 ff ff f5 	bnz s0, -24 <sys_trim+0x1b4>
    5888:	00 00 00 0f 	move s0, 0
    588c:	1e 70 00 88 	store_32 s0, 28(sp)
    5890:	b7 0b 00 f8 	call 11996 <sbrk>
    5894:	39 00 00 a8 	load_32 s1, (s25)
    5898:	59 10 00 a8 	load_32 s2, 4(s25)
    589c:	60 00 f0 c0 	move s3, s0
    58a0:	01 00 51 c0 	add_i s0, s1, s2
    58a4:	03 00 10 c1 	cmpne_i s0, s3, s0
    58a8:	40 00 00 f4 	bnz s0, 8 <sys_trim+0x1f8>
    58ac:	17 00 00 f6 	b 92 <sys_trim+0x250>
    58b0:	9e 90 00 a8 	load_32 s4, 36(sp)
    58b4:	7e 80 00 a8 	load_32 s3, 32(sp)
    58b8:	3e 70 00 a8 	load_32 s1, 28(sp)
    58bc:	1a 00 00 aa 	load_sync s0, (s26)
    58c0:	00 80 f0 c0 	move s0, s1
    58c4:	1a 00 00 8a 	store_sync s0, (s26)  
    58c8:	a0 ff ff f3 	bz s0, -12 <sys_trim+0x204>
    58cc:	04 30 00 a8 	load_32 s0, 12(s4)
    58d0:	24 70 00 a8 	load_32 s1, 28(s4)
    58d4:	00 80 90 c1 	cmple_u s0, s0, s1
    58d8:	60 00 00 f4 	bnz s0, 12 <sys_trim+0x22c>
    58dc:	00 fc ff 0f 	move s0, -1
    58e0:	04 70 00 88 	store_32 s0, 28(s4)
    58e4:	00 83 f1 c0 	move s24, s3
    58e8:	00 00 fc c0 	move s0, s24
    58ec:	fe b3 00 a8 	load_32 ra, 44(sp)
    58f0:	7e c3 00 a8 	load_32 s27, 48(sp)
    58f4:	5e d3 00 a8 	load_32 s26, 52(sp)
    58f8:	3e e3 00 a8 	load_32 s25, 56(sp)
    58fc:	1e f3 00 a8 	load_32 s24, 60(sp)
    5900:	de 03 01 05 	add_i sp, sp, 64
    5904:	1f 00 00 f0 	ret
    5908:	1e 60 00 a8 	load_32 s0, 24(sp)
    590c:	3e 70 00 a8 	load_32 s1, 28(sp)
    5910:	7e 60 00 88 	store_32 s3, 24(sp)
    5914:	01 00 60 c0 	sub_i s0, s1, s0
    5918:	95 0b 00 f8 	call 11860 <sbrk>
    591c:	1e 50 00 88 	store_32 s0, 20(sp)
    5920:	1e 70 00 a8 	load_32 s0, 28(sp)
    5924:	92 0b 00 f8 	call 11848 <sbrk>
    5928:	5e 60 00 a8 	load_32 s2, 24(sp)
    592c:	3e 50 00 a8 	load_32 s1, 20(sp)
    5930:	21 fc ff 10 	cmpeq_i s1, s1, -1
    5934:	e1 fb ff f5 	bnz s1, -132 <sys_trim+0x1f8>
    5938:	20 00 81 c1 	cmplt_u s1, s0, s2
    593c:	41 00 00 f4 	bnz s1, 8 <sys_trim+0x28c>
    5940:	dc ff ff f7 	b -144 <sys_trim+0x1f8>
    5944:	be 70 00 a8 	load_32 s5, 28(sp)
    5948:	02 00 60 c0 	sub_i s0, s2, s0
    594c:	3a 00 00 aa 	load_sync s1, (s26)
    5950:	20 80 f2 c0 	move s1, s5
    5954:	3a 00 00 8a 	store_sync s1, (s26)  
    5958:	a1 ff ff f3 	bz s1, -12 <sys_trim+0x294>
    595c:	9e 90 00 a8 	load_32 s4, 36(sp)
    5960:	7e 80 00 a8 	load_32 s3, 32(sp)
    5964:	40 fb ff f3 	bz s0, -152 <sys_trim+0x214>
    5968:	39 10 00 a8 	load_32 s1, 4(s25)
    596c:	21 00 60 c0 	sub_i s1, s1, s0
    5970:	39 10 00 88 	store_32 s1, 4(s25)
    5974:	24 c0 06 a8 	load_32 s1, 432(s4)
    5978:	21 00 60 c0 	sub_i s1, s1, s0
    597c:	24 c0 06 88 	store_32 s1, 432(s4)
    5980:	24 60 00 a8 	load_32 s1, 24(s4)
    5984:	64 30 00 a8 	load_32 s3, 12(s4)
    5988:	41 20 00 05 	add_i s2, s1, 8
    598c:	03 00 60 c0 	sub_i s0, s3, s0
    5990:	42 1c 00 01 	and s2, s2, 7
    5994:	42 00 00 10 	cmpeq_i s2, s2, 0
    5998:	82 00 00 f4 	bnz s2, 16 <sys_trim+0x2f0>
    599c:	40 e0 ff 0f 	move s2, -8
    59a0:	42 80 60 c0 	sub_i s2, s2, s1
    59a4:	a2 1c 00 01 	and s5, s2, 7
    59a8:	41 80 52 c0 	add_i s2, s1, s5
    59ac:	44 60 00 88 	store_32 s2, 24(s4)
    59b0:	60 80 62 c0 	sub_i s3, s0, s5
    59b4:	64 30 00 88 	store_32 s3, 12(s4)
    59b8:	01 00 50 c0 	add_i s0, s1, s0
    59bc:	20 a0 00 0f 	move s1, 40
    59c0:	63 04 00 00 	or s3, s3, 1
    59c4:	62 10 00 88 	store_32 s3, 4(s2)
    59c8:	20 10 00 88 	store_32 s1, 4(s0)
    59cc:	1b 40 00 a8 	load_32 s0, 16(s27)
    59d0:	04 70 00 88 	store_32 s0, 28(s4)
    59d4:	c5 ff ff f7 	b -236 <sys_trim+0x230>

00000000000059d8 calloc:
    59d8:	de 03 ff 05 	add_i sp, sp, -64
    59dc:	1e f3 00 88 	store_32 s24, 60(sp)
    59e0:	3e e3 00 88 	store_32 s25, 56(sp)
    59e4:	fe d3 00 88 	store_32 ra, 52(sp)
    59e8:	20 83 f0 c0 	move s25, s1
    59ec:	20 00 f0 c0 	move s1, s0
    59f0:	81 01 00 f2 	bz s1, 48 <calloc+0x48>
    59f4:	19 80 00 c0 	or s0, s25, s1
    59f8:	48 00 00 4f 	movehi s2, 8
    59fc:	19 83 70 c0 	mull_i s24, s25, s1
    5a00:	00 00 81 c1 	cmplt_u s0, s0, s2
    5a04:	00 01 00 f4 	bnz s0, 32 <calloc+0x4c>
    5a08:	00 00 fc c0 	move s0, s24
    5a0c:	1c 13 00 f8 	call 19568 <__udivsi3>
    5a10:	00 80 0c c1 	cmpeq_i s0, s0, s25
    5a14:	80 00 00 f4 	bnz s0, 16 <calloc+0x4c>
    5a18:	00 ff ff 0f 	move s24, -1
    5a1c:	02 00 00 f6 	b 8 <calloc+0x4c>
    5a20:	00 03 00 0f 	move s24, 0
    5a24:	00 00 fc c0 	move s0, s24
    5a28:	82 f5 ff f9 	call -10744 <malloc>
    5a2c:	fe d3 00 a8 	load_32 ra, 52(sp)
    5a30:	3e e3 00 a8 	load_32 s25, 56(sp)
    5a34:	1e f3 00 a8 	load_32 s24, 60(sp)
    5a38:	de 03 01 05 	add_i sp, sp, 64
    5a3c:	1f 00 00 f0 	ret

0000000000005a40 realloc:
    5a40:	de 03 ff 05 	add_i sp, sp, -64
    5a44:	1e f3 00 88 	store_32 s24, 60(sp)
    5a48:	3e e3 00 88 	store_32 s25, 56(sp)
    5a4c:	5e d3 00 88 	store_32 s26, 52(sp)
    5a50:	7e c3 00 88 	store_32 s27, 48(sp)
    5a54:	fe b3 00 88 	store_32 ra, 44(sp)
    5a58:	20 83 f0 c0 	move s25, s1
    5a5c:	00 03 f0 c0 	move s24, s0
    5a60:	58 00 00 f4 	bnz s24, 8 <realloc+0x28>
    5a64:	09 00 00 f6 	b 36 <realloc+0x48>
    5a68:	19 fc fe 16 	cmpgt_u s0, s25, -65
    5a6c:	40 03 00 0f 	move s26, 0
    5a70:	a0 08 00 f4 	bnz s0, 276 <realloc+0x144>
    5a74:	19 2c 00 18 	cmplt_u s0, s25, 11
    5a78:	00 01 00 f4 	bnz s0, 32 <realloc+0x58>
    5a7c:	19 2c 00 05 	add_i s0, s25, 11
    5a80:	20 e0 ff 01 	and s1, s0, -8
    5a84:	06 00 00 f6 	b 24 <realloc+0x5c>
    5a88:	00 80 fc c0 	move s0, s25
    5a8c:	69 f5 ff f9 	call -10844 <malloc>
    5a90:	40 03 f0 c0 	move s26, s0
    5a94:	3c 00 00 f6 	b 240 <realloc+0x144>
    5a98:	20 40 00 0f 	move s1, 16
    5a9c:	06 00 00 4f 	movehi s0, 6
    5aa0:	60 43 05 00 	or s27, s0, 336
    5aa4:	1b f0 06 a0 	load_u8 s0, 444(s27)
    5aa8:	40 08 00 01 	and s2, s0, 2
    5aac:	18 e0 ff 05 	add_i s0, s24, -8
    5ab0:	e2 01 00 f2 	bz s2, 60 <realloc+0xac>
    5ab4:	5b 00 07 05 	add_i s2, s27, 448
    5ab8:	60 04 00 0f 	move s3, 1
    5abc:	82 00 00 aa 	load_sync s4, (s2)
    5ac0:	a0 80 f1 c0 	move s5, s3
    5ac4:	a2 00 00 8a 	store_sync s5, (s2)  
    5ac8:	a5 ff ff f3 	bz s5, -12 <realloc+0x7c>
    5acc:	04 01 00 f2 	bz s4, 32 <realloc+0xac>
    5ad0:	9b 00 07 a8 	load_32 s4, 448(s27)
    5ad4:	e4 ff ff f5 	bnz s4, -4 <realloc+0x90>
    5ad8:	82 00 00 aa 	load_sync s4, (s2)
    5adc:	a0 80 f1 c0 	move s5, s3
    5ae0:	a2 00 00 8a 	store_sync s5, (s2)  
    5ae4:	a5 ff ff f3 	bz s5, -12 <realloc+0x98>
    5ae8:	44 ff ff f5 	bnz s4, -24 <realloc+0x90>
    5aec:	2e 00 00 f8 	call 184 <try_realloc_chunk>
    5af0:	3b f0 06 a0 	load_u8 s1, 444(s27)
    5af4:	21 08 00 01 	and s1, s1, 2
    5af8:	e1 00 00 f2 	bz s1, 28 <realloc+0xd4>
    5afc:	3b 00 07 05 	add_i s1, s27, 448
    5b00:	40 00 00 0f 	move s2, 0
    5b04:	61 00 00 aa 	load_sync s3, (s1)
    5b08:	60 00 f1 c0 	move s3, s2
    5b0c:	61 00 00 8a 	store_sync s3, (s1)  
    5b10:	a3 ff ff f3 	bz s3, -12 <realloc+0xc4>
    5b14:	60 00 00 f2 	bz s0, 12 <realloc+0xe0>
    5b18:	40 23 00 05 	add_i s26, s0, 8
    5b1c:	1a 00 00 f6 	b 104 <realloc+0x144>
    5b20:	00 80 fc c0 	move s0, s25
    5b24:	43 f5 ff f9 	call -10996 <malloc>
    5b28:	60 03 f0 c0 	move s27, s0
    5b2c:	db 02 00 f2 	bz s27, 88 <realloc+0x144>
    5b30:	18 f0 ff a9 	load_32 s0, -4(s24)
    5b34:	20 0c 00 01 	and s1, s0, 3
    5b38:	00 e0 ff 01 	and s0, s0, -8
    5b3c:	21 00 00 10 	cmpeq_i s1, s1, 0
    5b40:	c1 00 00 f4 	bnz s1, 24 <realloc+0x118>
    5b44:	20 10 00 0f 	move s1, 4
    5b48:	40 80 60 c0 	sub_i s2, s0, s1
    5b4c:	02 80 8c c1 	cmplt_u s0, s2, s25
    5b50:	e0 00 00 f4 	bnz s0, 28 <realloc+0x12c>
    5b54:	05 00 00 f6 	b 20 <realloc+0x128>
    5b58:	20 20 00 0f 	move s1, 8
    5b5c:	40 80 60 c0 	sub_i s2, s0, s1
    5b60:	02 80 8c c1 	cmplt_u s0, s2, s25
    5b64:	40 00 00 f4 	bnz s0, 8 <realloc+0x12c>
    5b68:	40 80 fc c0 	move s2, s25
    5b6c:	00 80 fd c0 	move s0, s27
    5b70:	20 00 fc c0 	move s1, s24
    5b74:	a9 07 00 f8 	call 7844 <memcpy>
    5b78:	00 00 fc c0 	move s0, s24
    5b7c:	b7 fc ff f9 	call -3364 <free>
    5b80:	40 83 fd c0 	move s26, s27
    5b84:	00 00 fd c0 	move s0, s26
    5b88:	fe b3 00 a8 	load_32 ra, 44(sp)
    5b8c:	7e c3 00 a8 	load_32 s27, 48(sp)
    5b90:	5e d3 00 a8 	load_32 s26, 52(sp)
    5b94:	3e e3 00 a8 	load_32 s25, 56(sp)
    5b98:	1e f3 00 a8 	load_32 s24, 60(sp)
    5b9c:	de 03 01 05 	add_i sp, sp, 64
    5ba0:	1f 00 00 f0 	ret

0000000000005ba4 try_realloc_chunk:
    5ba4:	de 03 ff 05 	add_i sp, sp, -64
    5ba8:	1e f3 00 88 	store_32 s24, 60(sp)
    5bac:	fe e3 00 88 	store_32 ra, 56(sp)
    5bb0:	00 03 f0 c0 	move s24, s0
    5bb4:	46 00 00 4f 	movehi s2, 6
    5bb8:	78 10 00 a8 	load_32 s3, 4(s24)
    5bbc:	42 40 05 00 	or s2, s2, 336
    5bc0:	03 0c 00 01 	and s0, s3, 3
    5bc4:	c2 40 00 a8 	load_32 s6, 16(s2)
    5bc8:	80 04 00 10 	cmpeq_i s4, s0, 1
    5bcc:	84 24 00 f4 	bnz s4, 1168 <try_realloc_chunk+0x4b8>
    5bd0:	86 00 6c c1 	cmpgt_u s4, s6, s24
    5bd4:	44 24 00 f4 	bnz s4, 1160 <try_realloc_chunk+0x4b8>
    5bd8:	83 e0 ff 01 	and s4, s3, -8
    5bdc:	b8 00 52 c0 	add_i s5, s24, s4
    5be0:	e5 00 9c c1 	cmple_u s7, s5, s24
    5be4:	c7 23 00 f4 	bnz s7, 1144 <try_realloc_chunk+0x4b8>
    5be8:	e5 10 00 a8 	load_32 s7, 4(s5)
    5bec:	07 05 00 01 	and s8, s7, 1
    5bf0:	68 23 00 f2 	bz s8, 1132 <try_realloc_chunk+0x4b8>
    5bf4:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x58>
    5bf8:	32 00 00 f6 	b 200 <try_realloc_chunk+0x11c>
    5bfc:	04 80 80 c1 	cmplt_u s0, s4, s1
    5c00:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x64>
    5c04:	38 00 00 f6 	b 224 <try_realloc_chunk+0x140>
    5c08:	02 60 00 a8 	load_32 s0, 24(s2)
    5c0c:	00 80 12 c1 	cmpne_i s0, s0, s5
    5c10:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x74>
    5c14:	54 00 00 f6 	b 336 <try_realloc_chunk+0x1c0>
    5c18:	02 50 00 a8 	load_32 s0, 20(s2)
    5c1c:	00 80 12 c1 	cmpne_i s0, s0, s5
    5c20:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x84>
    5c24:	5f 00 00 f6 	b 380 <try_realloc_chunk+0x1fc>
    5c28:	07 09 00 01 	and s8, s7, 2
    5c2c:	00 00 00 0f 	move s0, 0
    5c30:	28 09 00 f4 	bnz s8, 292 <try_realloc_chunk+0x1b0>
    5c34:	07 e1 ff 01 	and s8, s7, -8
    5c38:	88 00 52 c0 	add_i s4, s8, s4
    5c3c:	04 81 80 c1 	cmplt_u s8, s4, s1
    5c40:	a8 08 00 f4 	bnz s8, 276 <try_realloc_chunk+0x1b0>
    5c44:	07 fc 03 16 	cmpgt_u s0, s7, 255
    5c48:	40 10 00 f4 	bnz s0, 520 <try_realloc_chunk+0x2ac>
    5c4c:	07 0d 00 0a 	shr s8, s7, 3
    5c50:	05 20 00 a8 	load_32 s0, 8(s5)
    5c54:	e8 0c 00 0b 	shl s7, s8, 3
    5c58:	e2 80 53 c0 	add_i s7, s2, s7
    5c5c:	27 a1 00 05 	add_i s9, s7, 40
    5c60:	e5 30 00 a8 	load_32 s7, 12(s5)
    5c64:	40 81 04 c1 	cmpeq_i s10, s0, s9
    5c68:	ca 00 00 f4 	bnz s10, 24 <try_realloc_chunk+0xdc>
    5c6c:	46 01 60 c1 	cmpgt_u s10, s6, s0
    5c70:	6a 1f 00 f4 	bnz s10, 1004 <try_realloc_chunk+0x4b8>
    5c74:	40 31 00 a8 	load_32 s10, 12(s0)
    5c78:	4a 81 12 c1 	cmpne_i s10, s10, s5
    5c7c:	0a 1f 00 f4 	bnz s10, 992 <try_realloc_chunk+0x4b8>
    5c80:	47 01 10 c1 	cmpne_i s10, s7, s0
    5c84:	4a 00 00 f4 	bnz s10, 8 <try_realloc_chunk+0xe8>
    5c88:	83 00 00 f6 	b 524 <try_realloc_chunk+0x2f0>
    5c8c:	47 80 04 c1 	cmpeq_i s2, s7, s9
    5c90:	c2 00 00 f4 	bnz s2, 24 <try_realloc_chunk+0x104>
    5c94:	46 80 63 c1 	cmpgt_u s2, s6, s7
    5c98:	22 1e 00 f4 	bnz s2, 964 <try_realloc_chunk+0x4b8>
    5c9c:	47 20 00 a8 	load_32 s2, 8(s7)
    5ca0:	42 80 12 c1 	cmpne_i s2, s2, s5
    5ca4:	c2 1d 00 f4 	bnz s2, 952 <try_realloc_chunk+0x4b8>
    5ca8:	e0 30 00 88 	store_32 s7, 12(s0)
    5cac:	07 20 00 88 	store_32 s0, 8(s7)
    5cb0:	44 80 60 c0 	sub_i s2, s4, s1
    5cb4:	02 3c 00 16 	cmpgt_u s0, s2, 15
    5cb8:	40 1b 00 f4 	bnz s0, 872 <try_realloc_chunk+0x47c>
    5cbc:	cc 00 00 f6 	b 816 <try_realloc_chunk+0x448>
    5cc0:	01 00 04 18 	cmplt_u s0, s1, 256
    5cc4:	40 00 00 0f 	move s2, 0
    5cc8:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x12c>
    5ccc:	16 00 00 f6 	b 88 <try_realloc_chunk+0x180>
    5cd0:	00 00 f1 c0 	move s0, s2
    5cd4:	fe e3 00 a8 	load_32 ra, 56(sp)
    5cd8:	1e f3 00 a8 	load_32 s24, 60(sp)
    5cdc:	de 03 01 05 	add_i sp, sp, 64
    5ce0:	1f 00 00 f0 	ret
    5ce4:	44 80 60 c0 	sub_i s2, s4, s1
    5ce8:	02 40 00 18 	cmplt_u s0, s2, 16
    5cec:	00 19 00 f4 	bnz s0, 800 <try_realloc_chunk+0x468>
    5cf0:	03 04 00 01 	and s0, s3, 1
    5cf4:	60 80 00 c0 	or s3, s0, s1
    5cf8:	18 80 50 c0 	add_i s0, s24, s1
    5cfc:	23 08 00 00 	or s1, s3, 2
    5d00:	38 10 00 88 	store_32 s1, 4(s24)
    5d04:	22 0c 00 00 	or s1, s2, 3
    5d08:	20 10 00 88 	store_32 s1, 4(s0)
    5d0c:	25 10 00 a8 	load_32 s1, 4(s5)
    5d10:	21 04 00 00 	or s1, s1, 1
    5d14:	25 10 00 88 	store_32 s1, 4(s5)
    5d18:	20 00 f1 c0 	move s1, s2
    5d1c:	07 05 00 f8 	call 5148 <dispose_chunk>
    5d20:	bb 00 00 f6 	b 748 <try_realloc_chunk+0x468>
    5d24:	01 10 00 05 	add_i s0, s1, 4
    5d28:	04 00 80 c1 	cmplt_u s0, s4, s0
    5d2c:	20 01 00 f4 	bnz s0, 36 <try_realloc_chunk+0x1ac>
    5d30:	06 00 00 4f 	movehi s0, 6
    5d34:	24 80 60 c0 	sub_i s1, s4, s1
    5d38:	00 e0 04 00 	or s0, s0, 312
    5d3c:	00 20 00 a8 	load_32 s0, 8(s0)
    5d40:	00 04 00 0b 	shl s0, s0, 1
    5d44:	21 00 90 c1 	cmple_u s1, s1, s0
    5d48:	00 00 fc c0 	move s0, s24
    5d4c:	41 00 00 f4 	bnz s1, 8 <try_realloc_chunk+0x1b0>
    5d50:	00 00 f1 c0 	move s0, s2
    5d54:	fe e3 00 a8 	load_32 ra, 56(sp)
    5d58:	1e f3 00 a8 	load_32 s24, 60(sp)
    5d5c:	de 03 01 05 	add_i sp, sp, 64
    5d60:	1f 00 00 f0 	ret
    5d64:	02 30 00 a8 	load_32 s0, 12(s2)
    5d68:	00 00 52 c0 	add_i s0, s0, s4
    5d6c:	80 80 90 c1 	cmple_u s4, s0, s1
    5d70:	c4 02 00 f4 	bnz s4, 88 <try_realloc_chunk+0x224>
    5d74:	63 04 00 01 	and s3, s3, 1
    5d78:	00 80 60 c0 	sub_i s0, s0, s1
    5d7c:	63 80 00 c0 	or s3, s3, s1
    5d80:	38 80 50 c0 	add_i s1, s24, s1
    5d84:	63 08 00 00 	or s3, s3, 2
    5d88:	78 10 00 88 	store_32 s3, 4(s24)
    5d8c:	60 04 00 00 	or s3, s0, 1
    5d90:	61 10 00 88 	store_32 s3, 4(s1)
    5d94:	22 60 00 88 	store_32 s1, 24(s2)
    5d98:	02 30 00 88 	store_32 s0, 12(s2)
    5d9c:	9c 00 00 f6 	b 624 <try_realloc_chunk+0x468>
    5da0:	02 20 00 a8 	load_32 s0, 8(s2)
    5da4:	80 00 52 c0 	add_i s4, s0, s4
    5da8:	04 80 80 c1 	cmplt_u s0, s4, s1
    5dac:	40 00 00 f4 	bnz s0, 8 <try_realloc_chunk+0x210>
    5db0:	0b 00 00 f6 	b 44 <try_realloc_chunk+0x238>
    5db4:	00 00 00 0f 	move s0, 0
    5db8:	fe e3 00 a8 	load_32 ra, 56(sp)
    5dbc:	1e f3 00 a8 	load_32 s24, 60(sp)
    5dc0:	de 03 01 05 	add_i sp, sp, 64
    5dc4:	1f 00 00 f0 	ret
    5dc8:	00 00 00 0f 	move s0, 0
    5dcc:	fe e3 00 a8 	load_32 ra, 56(sp)
    5dd0:	1e f3 00 a8 	load_32 s24, 60(sp)
    5dd4:	de 03 01 05 	add_i sp, sp, 64
    5dd8:	1f 00 00 f0 	ret
    5ddc:	04 80 60 c0 	sub_i s0, s4, s1
    5de0:	a0 40 00 18 	cmplt_u s5, s0, 16
    5de4:	c5 01 00 f4 	bnz s5, 56 <try_realloc_chunk+0x278>
    5de8:	63 04 00 01 	and s3, s3, 1
    5dec:	98 00 52 c0 	add_i s4, s24, s4
    5df0:	63 80 00 c0 	or s3, s3, s1
    5df4:	38 80 50 c0 	add_i s1, s24, s1
    5df8:	63 08 00 00 	or s3, s3, 2
    5dfc:	78 10 00 88 	store_32 s3, 4(s24)
    5e00:	60 04 00 00 	or s3, s0, 1
    5e04:	61 10 00 88 	store_32 s3, 4(s1)
    5e08:	04 00 00 88 	store_32 s0, (s4)
    5e0c:	64 10 00 a8 	load_32 s3, 4(s4)
    5e10:	63 f8 ff 01 	and s3, s3, -2
    5e14:	64 10 00 88 	store_32 s3, 4(s4)
    5e18:	0b 00 00 f6 	b 44 <try_realloc_chunk+0x2a0>
    5e1c:	03 04 00 01 	and s0, s3, 1
    5e20:	38 00 52 c0 	add_i s1, s24, s4
    5e24:	00 00 02 c0 	or s0, s0, s4
    5e28:	00 08 00 00 	or s0, s0, 2
    5e2c:	18 10 00 88 	store_32 s0, 4(s24)
    5e30:	01 10 00 a8 	load_32 s0, 4(s1)
    5e34:	60 04 00 00 	or s3, s0, 1
    5e38:	61 10 00 88 	store_32 s3, 4(s1)
    5e3c:	00 00 00 0f 	move s0, 0
    5e40:	20 00 f0 c0 	move s1, s0
    5e44:	02 20 00 88 	store_32 s0, 8(s2)
    5e48:	22 50 00 88 	store_32 s1, 20(s2)
    5e4c:	70 00 00 f6 	b 448 <try_realloc_chunk+0x468>
    5e50:	05 60 00 a8 	load_32 s0, 24(s5)
    5e54:	e5 30 00 a8 	load_32 s7, 12(s5)
    5e58:	07 81 02 c1 	cmpeq_i s8, s7, s5
    5e5c:	08 03 00 f4 	bnz s8, 96 <try_realloc_chunk+0x318>
    5e60:	05 21 00 a8 	load_32 s8, 8(s5)
    5e64:	c6 00 64 c1 	cmpgt_u s6, s6, s8
    5e68:	a6 0f 00 f4 	bnz s6, 500 <try_realloc_chunk+0x4b8>
    5e6c:	c8 30 00 a8 	load_32 s6, 12(s8)
    5e70:	c6 80 12 c1 	cmpne_i s6, s6, s5
    5e74:	46 0f 00 f4 	bnz s6, 488 <try_realloc_chunk+0x4b8>
    5e78:	c7 20 00 a8 	load_32 s6, 8(s7)
    5e7c:	c6 80 12 c1 	cmpne_i s6, s6, s5
    5e80:	e6 0e 00 f4 	bnz s6, 476 <try_realloc_chunk+0x4b8>
    5e84:	e8 30 00 88 	store_32 s7, 12(s8)
    5e88:	07 21 00 88 	store_32 s8, 8(s7)
    5e8c:	a0 0a 00 f2 	bz s0, 340 <try_realloc_chunk+0x43c>
    5e90:	20 00 00 f6 	b 128 <try_realloc_chunk+0x36c>
    5e94:	00 04 00 0f 	move s0, 1
    5e98:	a2 00 00 a8 	load_32 s5, (s2)
    5e9c:	00 00 b4 c0 	shl s0, s0, s8
    5ea0:	00 fc ff 03 	xor s0, s0, -1
    5ea4:	05 00 10 c0 	and s0, s5, s0
    5ea8:	02 00 00 88 	store_32 s0, (s2)
    5eac:	44 80 60 c0 	sub_i s2, s4, s1
    5eb0:	02 3c 00 16 	cmpgt_u s0, s2, 15
    5eb4:	60 0b 00 f4 	bnz s0, 364 <try_realloc_chunk+0x47c>
    5eb8:	4d 00 00 f6 	b 308 <try_realloc_chunk+0x448>
    5ebc:	25 51 00 a8 	load_32 s9, 20(s5)
    5ec0:	49 00 00 f4 	bnz s9, 8 <try_realloc_chunk+0x324>
    5ec4:	03 00 00 f6 	b 12 <try_realloc_chunk+0x32c>
    5ec8:	05 51 00 05 	add_i s8, s5, 20
    5ecc:	04 00 00 f6 	b 16 <try_realloc_chunk+0x338>
    5ed0:	05 41 00 05 	add_i s8, s5, 16
    5ed4:	28 01 00 a8 	load_32 s9, (s8)
    5ed8:	c9 0b 00 f2 	bz s9, 376 <try_realloc_chunk+0x4ac>
    5edc:	e0 80 f4 c0 	move s7, s9
    5ee0:	27 51 00 a8 	load_32 s9, 20(s7)
    5ee4:	40 01 f4 c0 	move s10, s8
    5ee8:	07 51 00 05 	add_i s8, s7, 20
    5eec:	89 ff ff f5 	bnz s9, -16 <try_realloc_chunk+0x338>
    5ef0:	27 41 00 a8 	load_32 s9, 16(s7)
    5ef4:	07 41 00 05 	add_i s8, s7, 16
    5ef8:	29 ff ff f5 	bnz s9, -28 <try_realloc_chunk+0x338>
    5efc:	c6 00 65 c1 	cmpgt_u s6, s6, s10
    5f00:	e6 0a 00 f4 	bnz s6, 348 <try_realloc_chunk+0x4b8>
    5f04:	c0 00 00 0f 	move s6, 0
    5f08:	ca 00 00 88 	store_32 s6, (s10)
    5f0c:	a0 06 00 f2 	bz s0, 212 <try_realloc_chunk+0x43c>
    5f10:	c5 70 00 a8 	load_32 s6, 28(s5)
    5f14:	06 09 00 0b 	shl s8, s6, 2
    5f18:	02 01 54 c0 	add_i s8, s2, s8
    5f1c:	28 c1 04 a8 	load_32 s9, 304(s8)
    5f20:	29 81 12 c1 	cmpne_i s9, s9, s5
    5f24:	49 00 00 f4 	bnz s9, 8 <try_realloc_chunk+0x388>
    5f28:	0c 00 00 f6 	b 48 <try_realloc_chunk+0x3b4>
    5f2c:	c2 40 00 a8 	load_32 s6, 16(s2)
    5f30:	c6 00 60 c1 	cmpgt_u s6, s6, s0
    5f34:	46 09 00 f4 	bnz s6, 296 <try_realloc_chunk+0x4b8>
    5f38:	c0 40 00 a8 	load_32 s6, 16(s0)
    5f3c:	c6 80 02 c1 	cmpeq_i s6, s6, s5
    5f40:	66 02 00 f4 	bnz s6, 76 <try_realloc_chunk+0x3e8>
    5f44:	c0 50 00 0f 	move s6, 20
    5f48:	c0 00 53 c0 	add_i s6, s0, s6
    5f4c:	e6 00 00 88 	store_32 s7, (s6)
    5f50:	87 04 00 f2 	bz s7, 144 <try_realloc_chunk+0x43c>
    5f54:	12 00 00 f6 	b 72 <try_realloc_chunk+0x3f8>
    5f58:	08 c1 04 05 	add_i s8, s8, 304
    5f5c:	e8 00 00 88 	store_32 s7, (s8)
    5f60:	e7 01 00 f4 	bnz s7, 60 <try_realloc_chunk+0x3f8>
    5f64:	00 04 00 0f 	move s0, 1
    5f68:	a2 10 00 a8 	load_32 s5, 4(s2)
    5f6c:	00 00 b3 c0 	shl s0, s0, s6
    5f70:	00 fc ff 03 	xor s0, s0, -1
    5f74:	05 00 10 c0 	and s0, s5, s0
    5f78:	02 10 00 88 	store_32 s0, 4(s2)
    5f7c:	44 80 60 c0 	sub_i s2, s4, s1
    5f80:	02 3c 00 16 	cmpgt_u s0, s2, 15
    5f84:	e0 04 00 f4 	bnz s0, 156 <try_realloc_chunk+0x47c>
    5f88:	19 00 00 f6 	b 100 <try_realloc_chunk+0x448>
    5f8c:	c0 40 00 0f 	move s6, 16
    5f90:	c0 00 53 c0 	add_i s6, s0, s6
    5f94:	e6 00 00 88 	store_32 s7, (s6)
    5f98:	47 02 00 f2 	bz s7, 72 <try_realloc_chunk+0x43c>
    5f9c:	c2 40 00 a8 	load_32 s6, 16(s2)
    5fa0:	06 81 63 c1 	cmpgt_u s8, s6, s7
    5fa4:	c8 05 00 f4 	bnz s8, 184 <try_realloc_chunk+0x4b8>
    5fa8:	07 60 00 88 	store_32 s0, 24(s7)
    5fac:	05 40 00 a8 	load_32 s0, 16(s5)
    5fb0:	a0 00 00 f2 	bz s0, 20 <try_realloc_chunk+0x420>
    5fb4:	c6 00 60 c1 	cmpgt_u s6, s6, s0
    5fb8:	26 05 00 f4 	bnz s6, 164 <try_realloc_chunk+0x4b8>
    5fbc:	07 40 00 88 	store_32 s0, 16(s7)
    5fc0:	e0 60 00 88 	store_32 s7, 24(s0)
    5fc4:	05 50 00 a8 	load_32 s0, 20(s5)
    5fc8:	c0 00 00 f2 	bz s0, 24 <try_realloc_chunk+0x43c>
    5fcc:	42 40 00 a8 	load_32 s2, 16(s2)
    5fd0:	42 00 60 c1 	cmpgt_u s2, s2, s0
    5fd4:	42 04 00 f4 	bnz s2, 136 <try_realloc_chunk+0x4b8>
    5fd8:	07 50 00 88 	store_32 s0, 20(s7)
    5fdc:	e0 60 00 88 	store_32 s7, 24(s0)
    5fe0:	44 80 60 c0 	sub_i s2, s4, s1
    5fe4:	02 3c 00 16 	cmpgt_u s0, s2, 15
    5fe8:	c0 01 00 f4 	bnz s0, 56 <try_realloc_chunk+0x47c>
    5fec:	03 04 00 01 	and s0, s3, 1
    5ff0:	38 00 52 c0 	add_i s1, s24, s4
    5ff4:	00 00 02 c0 	or s0, s0, s4
    5ff8:	00 08 00 00 	or s0, s0, 2
    5ffc:	18 10 00 88 	store_32 s0, 4(s24)
    6000:	01 10 00 a8 	load_32 s0, 4(s1)
    6004:	00 04 00 00 	or s0, s0, 1
    6008:	01 10 00 88 	store_32 s0, 4(s1)
    600c:	00 00 fc c0 	move s0, s24
    6010:	fe e3 00 a8 	load_32 ra, 56(sp)
    6014:	1e f3 00 a8 	load_32 s24, 60(sp)
    6018:	de 03 01 05 	add_i sp, sp, 64
    601c:	1f 00 00 f0 	ret
    6020:	03 04 00 01 	and s0, s3, 1
    6024:	60 80 00 c0 	or s3, s0, s1
    6028:	18 80 50 c0 	add_i s0, s24, s1
    602c:	23 08 00 00 	or s1, s3, 2
    6030:	38 10 00 88 	store_32 s1, 4(s24)
    6034:	38 00 52 c0 	add_i s1, s24, s4
    6038:	62 0c 00 00 	or s3, s2, 3
    603c:	60 10 00 88 	store_32 s3, 4(s0)
    6040:	61 10 00 a8 	load_32 s3, 4(s1)
    6044:	63 04 00 00 	or s3, s3, 1
    6048:	61 10 00 88 	store_32 s3, 4(s1)
    604c:	33 ff ff f7 	b -820 <try_realloc_chunk+0x174>
    6050:	e0 00 00 0f 	move s7, 0
    6054:	60 fc ff f3 	bz s0, -116 <try_realloc_chunk+0x43c>
    6058:	ae ff ff f7 	b -328 <try_realloc_chunk+0x36c>
    605c:	0e 06 00 f8 	call 6200 <abort>

0000000000006060 realloc_in_place:
    6060:	de 03 ff 05 	add_i sp, sp, -64
    6064:	1e f3 00 88 	store_32 s24, 60(sp)
    6068:	3e e3 00 88 	store_32 s25, 56(sp)
    606c:	5e d3 00 88 	store_32 s26, 52(sp)
    6070:	fe c3 00 88 	store_32 ra, 48(sp)
    6074:	00 03 f0 c0 	move s24, s0
    6078:	00 00 00 0f 	move s0, 0
    607c:	98 05 00 f2 	bz s24, 176 <realloc_in_place+0xcc>
    6080:	41 fc fe 16 	cmpgt_u s2, s1, -65
    6084:	42 05 00 f4 	bnz s2, 168 <realloc_in_place+0xcc>
    6088:	01 2c 00 18 	cmplt_u s0, s1, 11
    608c:	80 00 00 f4 	bnz s0, 16 <realloc_in_place+0x3c>
    6090:	01 2c 00 05 	add_i s0, s1, 11
    6094:	20 e0 ff 01 	and s1, s0, -8
    6098:	02 00 00 f6 	b 8 <realloc_in_place+0x40>
    609c:	20 40 00 0f 	move s1, 16
    60a0:	06 00 00 4f 	movehi s0, 6
    60a4:	38 e3 ff 05 	add_i s25, s24, -8
    60a8:	40 43 05 00 	or s26, s0, 336
    60ac:	1a f0 06 a0 	load_u8 s0, 444(s26)
    60b0:	00 08 00 01 	and s0, s0, 2
    60b4:	e0 01 00 f2 	bz s0, 60 <realloc_in_place+0x90>
    60b8:	1a 00 07 05 	add_i s0, s26, 448
    60bc:	40 04 00 0f 	move s2, 1
    60c0:	60 00 00 aa 	load_sync s3, (s0)
    60c4:	80 00 f1 c0 	move s4, s2
    60c8:	80 00 00 8a 	store_sync s4, (s0)  
    60cc:	a4 ff ff f3 	bz s4, -12 <realloc_in_place+0x60>
    60d0:	03 01 00 f2 	bz s3, 32 <realloc_in_place+0x90>
    60d4:	7a 00 07 a8 	load_32 s3, 448(s26)
    60d8:	e3 ff ff f5 	bnz s3, -4 <realloc_in_place+0x74>
    60dc:	60 00 00 aa 	load_sync s3, (s0)
    60e0:	80 00 f1 c0 	move s4, s2
    60e4:	80 00 00 8a 	store_sync s4, (s0)  
    60e8:	a4 ff ff f3 	bz s4, -12 <realloc_in_place+0x7c>
    60ec:	43 ff ff f5 	bnz s3, -24 <realloc_in_place+0x74>
    60f0:	00 80 fc c0 	move s0, s25
    60f4:	ac fe ff f9 	call -1360 <try_realloc_chunk>
    60f8:	3a f0 06 a0 	load_u8 s1, 444(s26)
    60fc:	21 08 00 01 	and s1, s1, 2
    6100:	e1 00 00 f2 	bz s1, 28 <realloc_in_place+0xbc>
    6104:	3a 00 07 05 	add_i s1, s26, 448
    6108:	40 00 00 0f 	move s2, 0
    610c:	61 00 00 aa 	load_sync s3, (s1)
    6110:	60 00 f1 c0 	move s3, s2
    6114:	61 00 00 8a 	store_sync s3, (s1)  
    6118:	a3 ff ff f3 	bz s3, -12 <realloc_in_place+0xac>
    611c:	00 80 0c c1 	cmpeq_i s0, s0, s25
    6120:	40 00 00 f4 	bnz s0, 8 <realloc_in_place+0xc8>
    6124:	00 03 00 0f 	move s24, 0
    6128:	00 00 fc c0 	move s0, s24
    612c:	fe c3 00 a8 	load_32 ra, 48(sp)
    6130:	5e d3 00 a8 	load_32 s26, 52(sp)
    6134:	3e e3 00 a8 	load_32 s25, 56(sp)
    6138:	1e f3 00 a8 	load_32 s24, 60(sp)
    613c:	de 03 01 05 	add_i sp, sp, 64
    6140:	1f 00 00 f0 	ret

0000000000006144 memalign:
    6144:	de 03 ff 05 	add_i sp, sp, -64
    6148:	fe f3 00 88 	store_32 ra, 60(sp)
    614c:	40 20 00 16 	cmpgt_u s2, s0, 8
    6150:	c2 00 00 f4 	bnz s2, 24 <memalign+0x24>
    6154:	00 80 f0 c0 	move s0, s1
    6158:	b6 f3 ff f9 	call -12584 <malloc>
    615c:	fe f3 00 a8 	load_32 ra, 60(sp)
    6160:	de 03 01 05 	add_i sp, sp, 64
    6164:	1f 00 00 f0 	ret
    6168:	04 00 00 f8 	call 16 <internal_memalign>
    616c:	fe f3 00 a8 	load_32 ra, 60(sp)
    6170:	de 03 01 05 	add_i sp, sp, 64
    6174:	1f 00 00 f0 	ret

0000000000006178 internal_memalign:
    6178:	de 03 ff 05 	add_i sp, sp, -64
    617c:	1e f3 00 88 	store_32 s24, 60(sp)
    6180:	3e e3 00 88 	store_32 s25, 56(sp)
    6184:	5e d3 00 88 	store_32 s26, 52(sp)
    6188:	7e c3 00 88 	store_32 s27, 48(sp)
    618c:	fe b3 00 88 	store_32 ra, 44(sp)
    6190:	40 40 00 16 	cmpgt_u s2, s0, 16
    6194:	42 00 00 f4 	bnz s2, 8 <internal_memalign+0x24>
    6198:	00 40 00 0f 	move s0, 16
    619c:	40 fc ff 05 	add_i s2, s0, -1
    61a0:	42 00 10 c0 	and s2, s2, s0
    61a4:	e2 00 00 f2 	bz s2, 28 <internal_memalign+0x48>
    61a8:	40 40 00 0f 	move s2, 16
    61ac:	60 03 f1 c0 	move s27, s2
    61b0:	7b 00 80 c1 	cmplt_u s3, s27, s0
    61b4:	5b 04 00 0b 	shl s2, s27, 1
    61b8:	a3 ff ff f5 	bnz s3, -12 <internal_memalign+0x34>
    61bc:	02 00 00 f6 	b 8 <internal_memalign+0x4c>
    61c0:	60 03 f0 c0 	move s27, s0
    61c4:	00 00 ff 0f 	move s0, -64
    61c8:	00 03 00 0f 	move s24, 0
    61cc:	00 80 6d c0 	sub_i s0, s0, s27
    61d0:	00 80 90 c1 	cmple_u s0, s0, s1
    61d4:	20 0e 00 f4 	bnz s0, 452 <internal_memalign+0x220>
    61d8:	01 2c 00 18 	cmplt_u s0, s1, 11
    61dc:	00 01 00 f4 	bnz s0, 32 <internal_memalign+0x84>
    61e0:	01 2c 00 05 	add_i s0, s1, 11
    61e4:	20 e3 ff 01 	and s25, s0, -8
    61e8:	19 80 5d c0 	add_i s0, s25, s27
    61ec:	00 30 00 05 	add_i s0, s0, 12
    61f0:	90 f3 ff f9 	call -12736 <malloc>
    61f4:	20 0d 00 f2 	bz s0, 420 <internal_memalign+0x220>
    61f8:	06 00 00 f6 	b 24 <internal_memalign+0x98>
    61fc:	20 43 00 0f 	move s25, 16
    6200:	19 80 5d c0 	add_i s0, s25, s27
    6204:	00 30 00 05 	add_i s0, s0, 12
    6208:	8a f3 ff f9 	call -12760 <malloc>
    620c:	60 0c 00 f2 	bz s0, 396 <internal_memalign+0x220>
    6210:	26 00 00 4f 	movehi s1, 6
    6214:	3e a3 00 88 	store_32 s25, 40(sp)
    6218:	21 43 05 00 	or s25, s1, 336
    621c:	39 f0 06 a0 	load_u8 s1, 444(s25)
    6220:	21 08 00 01 	and s1, s1, 2
    6224:	e1 01 00 f2 	bz s1, 60 <internal_memalign+0xe8>
    6228:	39 00 07 05 	add_i s1, s25, 448
    622c:	40 04 00 0f 	move s2, 1
    6230:	61 00 00 aa 	load_sync s3, (s1)
    6234:	80 00 f1 c0 	move s4, s2
    6238:	81 00 00 8a 	store_sync s4, (s1)  
    623c:	a4 ff ff f3 	bz s4, -12 <internal_memalign+0xb8>
    6240:	03 01 00 f2 	bz s3, 32 <internal_memalign+0xe8>
    6244:	79 00 07 a8 	load_32 s3, 448(s25)
    6248:	e3 ff ff f5 	bnz s3, -4 <internal_memalign+0xcc>
    624c:	61 00 00 aa 	load_sync s3, (s1)
    6250:	80 00 f1 c0 	move s4, s2
    6254:	81 00 00 8a 	store_sync s4, (s1)  
    6258:	a4 ff ff f3 	bz s4, -12 <internal_memalign+0xd4>
    625c:	43 ff ff f5 	bnz s3, -24 <internal_memalign+0xcc>
    6260:	3b fc ff 05 	add_i s1, s27, -1
    6264:	40 e3 ff 05 	add_i s26, s0, -8
    6268:	21 00 10 c0 	and s1, s1, s0
    626c:	61 05 00 f2 	bz s1, 172 <internal_memalign+0x1a0>
    6270:	20 80 5d c0 	add_i s1, s0, s27
    6274:	40 00 00 0f 	move s2, 0
    6278:	21 fc ff 05 	add_i s1, s1, -1
    627c:	42 80 6d c0 	sub_i s2, s2, s27
    6280:	21 00 11 c0 	and s1, s1, s2
    6284:	01 e3 ff 05 	add_i s24, s1, -8
    6288:	38 00 6d c0 	sub_i s1, s24, s26
    628c:	21 3c 00 16 	cmpgt_u s1, s1, 15
    6290:	41 00 00 f4 	bnz s1, 8 <internal_memalign+0x120>
    6294:	18 83 5d c0 	add_i s24, s24, s27
    6298:	40 f0 ff a9 	load_32 s2, -4(s0)
    629c:	38 00 6d c0 	sub_i s1, s24, s26
    62a0:	62 e0 ff 01 	and s3, s2, -8
    62a4:	82 0c 00 01 	and s4, s2, 3
    62a8:	43 80 60 c0 	sub_i s2, s3, s1
    62ac:	44 00 00 f4 	bnz s4, 8 <internal_memalign+0x13c>
    62b0:	15 00 00 f6 	b 84 <internal_memalign+0x18c>
    62b4:	78 10 00 a8 	load_32 s3, 4(s24)
    62b8:	63 04 00 01 	and s3, s3, 1
    62bc:	62 80 01 c0 	or s3, s2, s3
    62c0:	58 00 51 c0 	add_i s2, s24, s2
    62c4:	63 08 00 00 	or s3, s3, 2
    62c8:	78 10 00 88 	store_32 s3, 4(s24)
    62cc:	62 10 00 a8 	load_32 s3, 4(s2)
    62d0:	63 04 00 00 	or s3, s3, 1
    62d4:	62 10 00 88 	store_32 s3, 4(s2)
    62d8:	40 f0 ff a9 	load_32 s2, -4(s0)
    62dc:	42 04 00 01 	and s2, s2, 1
    62e0:	41 00 01 c0 	or s2, s1, s2
    62e4:	42 08 00 00 	or s2, s2, 2
    62e8:	40 f0 ff 89 	store_32 s2, -4(s0)
    62ec:	18 10 00 a8 	load_32 s0, 4(s24)
    62f0:	00 04 00 00 	or s0, s0, 1
    62f4:	18 10 00 88 	store_32 s0, 4(s24)
    62f8:	00 00 fd c0 	move s0, s26
    62fc:	8f 03 00 f8 	call 3644 <dispose_chunk>
    6300:	05 00 00 f6 	b 20 <internal_memalign+0x19c>
    6304:	1a 00 00 a8 	load_32 s0, (s26)
    6308:	00 80 50 c0 	add_i s0, s0, s1
    630c:	18 00 00 88 	store_32 s0, (s24)
    6310:	58 10 00 88 	store_32 s2, 4(s24)
    6314:	40 03 fc c0 	move s26, s24
    6318:	1a 10 00 a8 	load_32 s0, 4(s26)
    631c:	20 0c 00 01 	and s1, s0, 3
    6320:	81 02 00 f2 	bz s1, 80 <internal_memalign+0x1f8>
    6324:	3e a0 00 a8 	load_32 s1, 40(sp)
    6328:	40 e0 ff 01 	and s2, s0, -8
    632c:	21 40 00 05 	add_i s1, s1, 16
    6330:	22 80 90 c1 	cmple_u s1, s2, s1
    6334:	e1 01 00 f4 	bnz s1, 60 <internal_memalign+0x1f8>
    6338:	9e a0 00 a8 	load_32 s4, 40(sp)
    633c:	00 04 00 01 	and s0, s0, 1
    6340:	64 00 00 c0 	or s3, s4, s0
    6344:	22 00 62 c0 	sub_i s1, s2, s4
    6348:	1a 00 52 c0 	add_i s0, s26, s4
    634c:	5a 00 51 c0 	add_i s2, s26, s2
    6350:	63 08 00 00 	or s3, s3, 2
    6354:	7a 10 00 88 	store_32 s3, 4(s26)
    6358:	61 0c 00 00 	or s3, s1, 3
    635c:	60 10 00 88 	store_32 s3, 4(s0)
    6360:	62 10 00 a8 	load_32 s3, 4(s2)
    6364:	63 04 00 00 	or s3, s3, 1
    6368:	62 10 00 88 	store_32 s3, 4(s2)
    636c:	73 03 00 f8 	call 3532 <dispose_chunk>
    6370:	19 f0 06 a0 	load_u8 s0, 444(s25)
    6374:	1a 23 00 05 	add_i s24, s26, 8
    6378:	00 08 00 01 	and s0, s0, 2
    637c:	e0 00 00 f2 	bz s0, 28 <internal_memalign+0x220>
    6380:	19 00 07 05 	add_i s0, s25, 448
    6384:	20 00 00 0f 	move s1, 0
    6388:	40 00 00 aa 	load_sync s2, (s0)
    638c:	40 80 f0 c0 	move s2, s1
    6390:	40 00 00 8a 	store_sync s2, (s0)  
    6394:	a2 ff ff f3 	bz s2, -12 <internal_memalign+0x210>
    6398:	00 00 fc c0 	move s0, s24
    639c:	fe b3 00 a8 	load_32 ra, 44(sp)
    63a0:	7e c3 00 a8 	load_32 s27, 48(sp)
    63a4:	5e d3 00 a8 	load_32 s26, 52(sp)
    63a8:	3e e3 00 a8 	load_32 s25, 56(sp)
    63ac:	1e f3 00 a8 	load_32 s24, 60(sp)
    63b0:	de 03 01 05 	add_i sp, sp, 64
    63b4:	1f 00 00 f0 	ret

00000000000063b8 posix_memalign:
    63b8:	de 03 ff 05 	add_i sp, sp, -64
    63bc:	1e f3 00 88 	store_32 s24, 60(sp)
    63c0:	fe e3 00 88 	store_32 ra, 56(sp)
    63c4:	61 20 00 11 	cmpne_i s3, s1, 8
    63c8:	00 03 f0 c0 	move s24, s0
    63cc:	43 01 00 f4 	bnz s3, 40 <posix_memalign+0x3c>
    63d0:	00 00 f1 c0 	move s0, s2
    63d4:	17 f3 ff f9 	call -13220 <malloc>
    63d8:	c0 04 00 f2 	bz s0, 152 <posix_memalign+0xb8>
    63dc:	18 00 00 88 	store_32 s0, (s24)
    63e0:	00 00 00 0f 	move s0, 0
    63e4:	fe e3 00 a8 	load_32 ra, 56(sp)
    63e8:	1e f3 00 a8 	load_32 s24, 60(sp)
    63ec:	de 03 01 05 	add_i sp, sp, 64
    63f0:	1f 00 00 f0 	ret
    63f4:	61 0c 00 01 	and s3, s1, 3
    63f8:	00 58 00 0f 	move s0, 22
    63fc:	e3 00 00 f4 	bnz s3, 28 <posix_memalign+0x60>
    6400:	61 08 00 0a 	shr s3, s1, 2
    6404:	a3 00 00 f2 	bz s3, 20 <posix_memalign+0x60>
    6408:	83 fc ff 05 	add_i s4, s3, -1
    640c:	64 80 11 c0 	and s3, s4, s3
    6410:	43 00 00 f4 	bnz s3, 8 <posix_memalign+0x60>
    6414:	05 00 00 f6 	b 20 <posix_memalign+0x70>
    6418:	fe e3 00 a8 	load_32 ra, 56(sp)
    641c:	1e f3 00 a8 	load_32 s24, 60(sp)
    6420:	de 03 01 05 	add_i sp, sp, 64
    6424:	1f 00 00 f0 	ret
    6428:	00 00 ff 0f 	move s0, -64
    642c:	00 80 60 c0 	sub_i s0, s0, s1
    6430:	00 00 81 c1 	cmplt_u s0, s0, s2
    6434:	40 00 00 f4 	bnz s0, 8 <posix_memalign+0x84>
    6438:	06 00 00 f6 	b 24 <posix_memalign+0x98>
    643c:	00 30 00 0f 	move s0, 12
    6440:	fe e3 00 a8 	load_32 ra, 56(sp)
    6444:	1e f3 00 a8 	load_32 s24, 60(sp)
    6448:	de 03 01 05 	add_i sp, sp, 64
    644c:	1f 00 00 f0 	ret
    6450:	01 40 00 16 	cmpgt_u s0, s1, 16
    6454:	40 00 00 f4 	bnz s0, 8 <posix_memalign+0xa4>
    6458:	20 40 00 0f 	move s1, 16
    645c:	00 80 f0 c0 	move s0, s1
    6460:	20 00 f1 c0 	move s1, s2
    6464:	45 ff ff f9 	call -748 <internal_memalign>
    6468:	40 00 00 f2 	bz s0, 8 <posix_memalign+0xb8>
    646c:	dc ff ff f7 	b -144 <posix_memalign+0x24>
    6470:	00 30 00 0f 	move s0, 12
    6474:	fe e3 00 a8 	load_32 ra, 56(sp)
    6478:	1e f3 00 a8 	load_32 s24, 60(sp)
    647c:	de 03 01 05 	add_i sp, sp, 64
    6480:	1f 00 00 f0 	ret

0000000000006484 valloc:
    6484:	de 03 ff 05 	add_i sp, sp, -64
    6488:	fe f3 00 88 	store_32 ra, 60(sp)
    648c:	26 00 00 4f 	movehi s1, 6
    6490:	41 e0 04 00 	or s2, s1, 312
    6494:	62 00 00 a8 	load_32 s3, (s2)
    6498:	20 00 f0 c0 	move s1, s0
    649c:	63 05 00 f4 	bnz s3, 172 <valloc+0xc4>
    64a0:	06 00 00 4f 	movehi s0, 6
    64a4:	60 04 00 0f 	move s3, 1
    64a8:	00 b0 0c 00 	or s0, s0, 812
    64ac:	80 00 00 aa 	load_sync s4, (s0)
    64b0:	a0 80 f1 c0 	move s5, s3
    64b4:	a0 00 00 8a 	store_sync s5, (s0)  
    64b8:	a5 ff ff f3 	bz s5, -12 <valloc+0x28>
    64bc:	04 01 00 f2 	bz s4, 32 <valloc+0x58>
    64c0:	80 00 00 a8 	load_32 s4, (s0)
    64c4:	e4 ff ff f5 	bnz s4, -4 <valloc+0x3c>
    64c8:	80 00 00 aa 	load_sync s4, (s0)
    64cc:	a0 80 f1 c0 	move s5, s3
    64d0:	a0 00 00 8a 	store_sync s5, (s0)  
    64d4:	a5 ff ff f3 	bz s5, -12 <valloc+0x44>
    64d8:	44 ff ff f5 	bnz s4, -24 <valloc+0x3c>
    64dc:	62 00 00 a8 	load_32 s3, (s2)
    64e0:	a3 02 00 f4 	bnz s3, 84 <valloc+0xb0>
    64e4:	60 00 40 0f 	move s3, 4096
    64e8:	62 20 00 88 	store_32 s3, 8(s2)
    64ec:	62 10 00 88 	store_32 s3, 4(s2)
    64f0:	60 fc ff 0f 	move s3, -1
    64f4:	62 30 00 88 	store_32 s3, 12(s2)
    64f8:	66 00 00 4f 	movehi s3, 6
    64fc:	80 20 00 4f 	movehi s4, 256
    6500:	82 40 00 88 	store_32 s4, 16(s2)
    6504:	80 08 00 0f 	move s4, 2
    6508:	82 50 00 88 	store_32 s4, 20(s2)
    650c:	63 40 05 00 	or s3, s3, 336
    6510:	ca 54 55 4f 	movehi s6, 174762
    6514:	a0 00 00 0f 	move s5, 0
    6518:	83 f0 06 88 	store_32 s4, 444(s3)
    651c:	9e e0 00 05 	add_i s4, sp, 56
    6520:	a3 00 07 88 	store_32 s5, 448(s3)
    6524:	66 60 55 00 	or s3, s6, 5464
    6528:	84 c0 ff 01 	and s4, s4, -16
    652c:	64 80 31 c0 	xor s3, s4, s3
    6530:	62 00 00 88 	store_32 s3, (s2)
    6534:	60 00 00 0f 	move s3, 0
    6538:	80 00 00 aa 	load_sync s4, (s0)
    653c:	80 80 f1 c0 	move s4, s3
    6540:	80 00 00 8a 	store_sync s4, (s0)  
    6544:	a4 ff ff f3 	bz s4, -12 <valloc+0xb4>
    6548:	02 10 00 a8 	load_32 s0, 4(s2)
    654c:	40 20 00 16 	cmpgt_u s2, s0, 8
    6550:	c2 00 00 f4 	bnz s2, 24 <valloc+0xe4>
    6554:	00 80 f0 c0 	move s0, s1
    6558:	b6 f2 ff f9 	call -13608 <malloc>
    655c:	fe f3 00 a8 	load_32 ra, 60(sp)
    6560:	de 03 01 05 	add_i sp, sp, 64
    6564:	1f 00 00 f0 	ret
    6568:	04 ff ff f9 	call -1008 <internal_memalign>
    656c:	fe f3 00 a8 	load_32 ra, 60(sp)
    6570:	de 03 01 05 	add_i sp, sp, 64
    6574:	1f 00 00 f0 	ret

0000000000006578 pvalloc:
    6578:	de 03 ff 05 	add_i sp, sp, -64
    657c:	fe f3 00 88 	store_32 ra, 60(sp)
    6580:	26 00 00 4f 	movehi s1, 6
    6584:	21 e0 04 00 	or s1, s1, 312
    6588:	41 00 00 a8 	load_32 s2, (s1)
    658c:	62 05 00 f4 	bnz s2, 172 <pvalloc+0xc0>
    6590:	46 00 00 4f 	movehi s2, 6
    6594:	60 04 00 0f 	move s3, 1
    6598:	42 b0 0c 00 	or s2, s2, 812
    659c:	82 00 00 aa 	load_sync s4, (s2)
    65a0:	a0 80 f1 c0 	move s5, s3
    65a4:	a2 00 00 8a 	store_sync s5, (s2)  
    65a8:	a5 ff ff f3 	bz s5, -12 <pvalloc+0x24>
    65ac:	04 01 00 f2 	bz s4, 32 <pvalloc+0x54>
    65b0:	82 00 00 a8 	load_32 s4, (s2)
    65b4:	e4 ff ff f5 	bnz s4, -4 <pvalloc+0x38>
    65b8:	82 00 00 aa 	load_sync s4, (s2)
    65bc:	a0 80 f1 c0 	move s5, s3
    65c0:	a2 00 00 8a 	store_sync s5, (s2)  
    65c4:	a5 ff ff f3 	bz s5, -12 <pvalloc+0x40>
    65c8:	44 ff ff f5 	bnz s4, -24 <pvalloc+0x38>
    65cc:	61 00 00 a8 	load_32 s3, (s1)
    65d0:	a3 02 00 f4 	bnz s3, 84 <pvalloc+0xac>
    65d4:	60 00 40 0f 	move s3, 4096
    65d8:	61 20 00 88 	store_32 s3, 8(s1)
    65dc:	61 10 00 88 	store_32 s3, 4(s1)
    65e0:	60 fc ff 0f 	move s3, -1
    65e4:	61 30 00 88 	store_32 s3, 12(s1)
    65e8:	66 00 00 4f 	movehi s3, 6
    65ec:	80 20 00 4f 	movehi s4, 256
    65f0:	81 40 00 88 	store_32 s4, 16(s1)
    65f4:	80 08 00 0f 	move s4, 2
    65f8:	81 50 00 88 	store_32 s4, 20(s1)
    65fc:	63 40 05 00 	or s3, s3, 336
    6600:	ca 54 55 4f 	movehi s6, 174762
    6604:	a0 00 00 0f 	move s5, 0
    6608:	83 f0 06 88 	store_32 s4, 444(s3)
    660c:	9e e0 00 05 	add_i s4, sp, 56
    6610:	a3 00 07 88 	store_32 s5, 448(s3)
    6614:	66 60 55 00 	or s3, s6, 5464
    6618:	84 c0 ff 01 	and s4, s4, -16
    661c:	64 80 31 c0 	xor s3, s4, s3
    6620:	61 00 00 88 	store_32 s3, (s1)
    6624:	60 00 00 0f 	move s3, 0
    6628:	82 00 00 aa 	load_sync s4, (s2)
    662c:	80 80 f1 c0 	move s4, s3
    6630:	82 00 00 8a 	store_sync s4, (s2)  
    6634:	a4 ff ff f3 	bz s4, -12 <pvalloc+0xb0>
    6638:	21 10 00 a8 	load_32 s1, 4(s1)
    663c:	40 00 00 0f 	move s2, 0
    6640:	00 80 50 c0 	add_i s0, s0, s1
    6644:	42 80 60 c0 	sub_i s2, s2, s1
    6648:	61 20 00 16 	cmpgt_u s3, s1, 8
    664c:	00 fc ff 05 	add_i s0, s0, -1
    6650:	40 00 11 c0 	and s2, s0, s2
    6654:	c3 00 00 f4 	bnz s3, 24 <pvalloc+0xf4>
    6658:	00 00 f1 c0 	move s0, s2
    665c:	75 f2 ff f9 	call -13868 <malloc>
    6660:	fe f3 00 a8 	load_32 ra, 60(sp)
    6664:	de 03 01 05 	add_i sp, sp, 64
    6668:	1f 00 00 f0 	ret
    666c:	00 80 f0 c0 	move s0, s1
    6670:	20 00 f1 c0 	move s1, s2
    6674:	c1 fe ff f9 	call -1276 <internal_memalign>
    6678:	fe f3 00 a8 	load_32 ra, 60(sp)
    667c:	de 03 01 05 	add_i sp, sp, 64
    6680:	1f 00 00 f0 	ret

0000000000006684 independent_calloc:
    6684:	de 03 ff 05 	add_i sp, sp, -64
    6688:	fe f3 00 88 	store_32 ra, 60(sp)
    668c:	60 00 f1 c0 	move s3, s2
    6690:	3e e0 00 88 	store_32 s1, 56(sp)
    6694:	3e e0 00 05 	add_i s1, sp, 56
    6698:	40 0c 00 0f 	move s2, 3
    669c:	04 00 00 f8 	call 16 <ialloc>
    66a0:	fe f3 00 a8 	load_32 ra, 60(sp)
    66a4:	de 03 01 05 	add_i sp, sp, 64
    66a8:	1f 00 00 f0 	ret

00000000000066ac ialloc:
    66ac:	de 03 ff 05 	add_i sp, sp, -64
    66b0:	1e f3 00 88 	store_32 s24, 60(sp)
    66b4:	3e e3 00 88 	store_32 s25, 56(sp)
    66b8:	5e d3 00 88 	store_32 s26, 52(sp)
    66bc:	7e c3 00 88 	store_32 s27, 48(sp)
    66c0:	fe b3 00 88 	store_32 ra, 44(sp)
    66c4:	86 00 00 4f 	movehi s4, 6
    66c8:	84 e0 04 00 	or s4, s4, 312
    66cc:	a4 00 00 a8 	load_32 s5, (s4)
    66d0:	00 81 f1 c0 	move s8, s3
    66d4:	00 03 f1 c0 	move s24, s2
    66d8:	20 83 f0 c0 	move s25, s1
    66dc:	40 03 f0 c0 	move s26, s0
    66e0:	65 05 00 f4 	bnz s5, 172 <ialloc+0xe0>
    66e4:	06 00 00 4f 	movehi s0, 6
    66e8:	20 04 00 0f 	move s1, 1
    66ec:	00 b0 0c 00 	or s0, s0, 812
    66f0:	40 00 00 aa 	load_sync s2, (s0)
    66f4:	60 80 f0 c0 	move s3, s1
    66f8:	60 00 00 8a 	store_sync s3, (s0)  
    66fc:	a3 ff ff f3 	bz s3, -12 <ialloc+0x44>
    6700:	02 01 00 f2 	bz s2, 32 <ialloc+0x74>
    6704:	40 00 00 a8 	load_32 s2, (s0)
    6708:	e2 ff ff f5 	bnz s2, -4 <ialloc+0x58>
    670c:	40 00 00 aa 	load_sync s2, (s0)
    6710:	60 80 f0 c0 	move s3, s1
    6714:	60 00 00 8a 	store_sync s3, (s0)  
    6718:	a3 ff ff f3 	bz s3, -12 <ialloc+0x60>
    671c:	42 ff ff f5 	bnz s2, -24 <ialloc+0x58>
    6720:	24 00 00 a8 	load_32 s1, (s4)
    6724:	a1 02 00 f4 	bnz s1, 84 <ialloc+0xcc>
    6728:	20 00 40 0f 	move s1, 4096
    672c:	24 20 00 88 	store_32 s1, 8(s4)
    6730:	24 10 00 88 	store_32 s1, 4(s4)
    6734:	20 fc ff 0f 	move s1, -1
    6738:	24 30 00 88 	store_32 s1, 12(s4)
    673c:	26 00 00 4f 	movehi s1, 6
    6740:	40 20 00 4f 	movehi s2, 256
    6744:	44 40 00 88 	store_32 s2, 16(s4)
    6748:	40 08 00 0f 	move s2, 2
    674c:	44 50 00 88 	store_32 s2, 20(s4)
    6750:	21 40 05 00 	or s1, s1, 336
    6754:	aa 54 55 4f 	movehi s5, 174762
    6758:	60 00 00 0f 	move s3, 0
    675c:	41 f0 06 88 	store_32 s2, 444(s1)
    6760:	5e a0 00 05 	add_i s2, sp, 40
    6764:	61 00 07 88 	store_32 s3, 448(s1)
    6768:	25 60 55 00 	or s1, s5, 5464
    676c:	42 c0 ff 01 	and s2, s2, -16
    6770:	22 80 30 c0 	xor s1, s2, s1
    6774:	24 00 00 88 	store_32 s1, (s4)
    6778:	20 00 00 0f 	move s1, 0
    677c:	40 00 00 aa 	load_sync s2, (s0)
    6780:	40 80 f0 c0 	move s2, s1
    6784:	40 00 00 8a 	store_sync s2, (s0)  
    6788:	a2 ff ff f3 	bz s2, -12 <ialloc+0xd0>
    678c:	08 03 00 f2 	bz s8, 96 <ialloc+0x140>
    6790:	9a 14 00 f2 	bz s26, 656 <ialloc+0x374>
    6794:	c0 00 00 0f 	move s6, 0
    6798:	18 04 00 01 	and s0, s24, 1
    679c:	1e 91 00 88 	store_32 s8, 36(sp)
    67a0:	c0 03 00 f4 	bnz s0, 120 <ialloc+0x16c>
    67a4:	a0 00 00 0f 	move s5, 0
    67a8:	00 40 00 0f 	move s0, 16
    67ac:	20 80 f2 c0 	move s1, s5
    67b0:	60 83 f2 c0 	move s27, s5
    67b4:	41 08 00 0b 	shl s2, s1, 2
    67b8:	59 00 51 c0 	add_i s2, s25, s2
    67bc:	62 00 00 a8 	load_32 s3, (s2)
    67c0:	40 00 f0 c0 	move s2, s0
    67c4:	83 2c 00 18 	cmplt_u s4, s3, 11
    67c8:	64 00 00 f4 	bnz s4, 12 <ialloc+0x128>
    67cc:	43 2c 00 05 	add_i s2, s3, 11
    67d0:	42 e0 ff 01 	and s2, s2, -8
    67d4:	21 04 00 05 	add_i s1, s1, 1
    67d8:	62 83 5d c0 	add_i s27, s2, s27
    67dc:	61 00 1d c1 	cmpne_i s3, s1, s26
    67e0:	a3 fe ff f5 	bnz s3, -44 <ialloc+0x108>
    67e4:	be 80 00 88 	store_32 s5, 32(sp)
    67e8:	15 00 00 f6 	b 84 <ialloc+0x190>
    67ec:	5a 00 00 f4 	bnz s26, 8 <ialloc+0x148>
    67f0:	59 00 00 f6 	b 356 <ialloc+0x2a8>
    67f4:	1a 08 00 0b 	shl s0, s26, 2
    67f8:	20 2c 00 18 	cmplt_u s1, s0, 11
    67fc:	61 0c 00 f4 	bnz s1, 396 <ialloc+0x2dc>
    6800:	00 2c 00 05 	add_i s0, s0, 11
    6804:	c0 e0 ff 01 	and s6, s0, -8
    6808:	18 04 00 01 	and s0, s24, 1
    680c:	1e 91 00 88 	store_32 s8, 36(sp)
    6810:	40 00 00 f4 	bnz s0, 8 <ialloc+0x16c>
    6814:	e4 ff ff f7 	b -112 <ialloc+0xf8>
    6818:	19 00 00 a8 	load_32 s0, (s25)
    681c:	20 2c 00 18 	cmplt_u s1, s0, 11
    6820:	81 00 00 f4 	bnz s1, 16 <ialloc+0x184>
    6824:	00 2c 00 05 	add_i s0, s0, 11
    6828:	00 e0 ff 01 	and s0, s0, -8
    682c:	02 00 00 f6 	b 8 <ialloc+0x188>
    6830:	00 40 00 0f 	move s0, 16
    6834:	60 03 7d c0 	mull_i s27, s0, s26
    6838:	1e 80 00 88 	store_32 s0, 32(sp)
    683c:	06 80 5d c0 	add_i s0, s6, s27
    6840:	de 70 00 88 	store_32 s6, 28(sp)
    6844:	00 f0 ff 05 	add_i s0, s0, -4
    6848:	fa f1 ff f9 	call -14360 <malloc>
    684c:	00 08 00 f2 	bz s0, 256 <ialloc+0x2a0>
    6850:	26 00 00 4f 	movehi s1, 6
    6854:	80 00 fc c0 	move s4, s24
    6858:	01 43 05 00 	or s24, s1, 336
    685c:	38 f0 06 a0 	load_u8 s1, 444(s24)
    6860:	1e 91 00 a8 	load_32 s8, 36(sp)
    6864:	3e 81 00 a8 	load_32 s9, 32(sp)
    6868:	21 08 00 01 	and s1, s1, 2
    686c:	e1 01 00 f2 	bz s1, 60 <ialloc+0x1fc>
    6870:	b8 00 07 05 	add_i s5, s24, 448
    6874:	20 04 00 0f 	move s1, 1
    6878:	45 00 00 aa 	load_sync s2, (s5)
    687c:	60 80 f0 c0 	move s3, s1
    6880:	65 00 00 8a 	store_sync s3, (s5)  
    6884:	a3 ff ff f3 	bz s3, -12 <ialloc+0x1cc>
    6888:	02 01 00 f2 	bz s2, 32 <ialloc+0x1fc>
    688c:	58 00 07 a8 	load_32 s2, 448(s24)
    6890:	e2 ff ff f5 	bnz s2, -4 <ialloc+0x1e0>
    6894:	45 00 00 aa 	load_sync s2, (s5)
    6898:	60 80 f0 c0 	move s3, s1
    689c:	65 00 00 8a 	store_sync s3, (s5)  
    68a0:	a3 ff ff f3 	bz s3, -12 <ialloc+0x1e8>
    68a4:	42 ff ff f5 	bnz s2, -24 <ialloc+0x1e0>
    68a8:	40 f0 ff a9 	load_32 s2, -4(s0)
    68ac:	24 08 00 01 	and s1, s4, 2
    68b0:	62 e0 ff 01 	and s3, s2, -8
    68b4:	a1 01 00 f2 	bz s1, 52 <ialloc+0x23c>
    68b8:	3e 70 00 a8 	load_32 s1, 28(sp)
    68bc:	40 f0 ff 0f 	move s2, -4
    68c0:	1e 70 00 88 	store_32 s0, 28(sp)
    68c4:	7e 60 00 88 	store_32 s3, 24(sp)
    68c8:	22 80 60 c0 	sub_i s1, s2, s1
    68cc:	41 80 51 c0 	add_i s2, s1, s3
    68d0:	20 00 00 0f 	move s1, 0
    68d4:	85 04 00 f8 	call 4628 <memset>
    68d8:	7e 60 00 a8 	load_32 s3, 24(sp)
    68dc:	1e 70 00 a8 	load_32 s0, 28(sp)
    68e0:	3e 81 00 a8 	load_32 s9, 32(sp)
    68e4:	1e 91 00 a8 	load_32 s8, 36(sp)
    68e8:	40 e1 ff 05 	add_i s10, s0, -8
    68ec:	48 00 00 f4 	bnz s8, 8 <ialloc+0x248>
    68f0:	1d 00 00 f6 	b 116 <ialloc+0x2b8>
    68f4:	60 83 f1 c0 	move s27, s3
    68f8:	3a fc ff 05 	add_i s1, s26, -1
    68fc:	08 00 00 88 	store_32 s0, (s8)
    6900:	a1 07 00 f2 	bz s1, 244 <ialloc+0x348>
    6904:	49 00 00 f4 	bnz s9, 8 <ialloc+0x260>
    6908:	25 00 00 f6 	b 148 <ialloc+0x2f0>
    690c:	40 04 00 0f 	move s2, 1
    6910:	69 0c 00 00 	or s3, s9, 3
    6914:	80 00 00 0f 	move s4, 0
    6918:	42 00 6d c0 	sub_i s2, s2, s26
    691c:	49 00 71 c0 	mull_i s2, s9, s2
    6920:	84 04 00 05 	add_i s4, s4, 1
    6924:	6a 10 00 88 	store_32 s3, 4(s10)
    6928:	4a 81 54 c0 	add_i s10, s10, s9
    692c:	a4 08 00 0b 	shl s5, s4, 2
    6930:	e4 80 10 c1 	cmpne_i s7, s4, s1
    6934:	a8 80 52 c0 	add_i s5, s8, s5
    6938:	ca 20 00 05 	add_i s6, s10, 8
    693c:	c5 00 00 88 	store_32 s6, (s5)
    6940:	07 ff ff f5 	bnz s7, -32 <ialloc+0x274>
    6944:	7b 03 51 c0 	add_i s27, s27, s2
    6948:	2b 00 00 f6 	b 172 <ialloc+0x348>
    694c:	00 01 00 0f 	move s8, 0
    6950:	34 00 00 f6 	b 208 <ialloc+0x374>
    6954:	00 00 00 0f 	move s0, 0
    6958:	b6 f1 ff f9 	call -14632 <malloc>
    695c:	00 01 f0 c0 	move s8, s0
    6960:	30 00 00 f6 	b 192 <ialloc+0x374>
    6964:	2a 80 5d c0 	add_i s1, s10, s27
    6968:	43 80 6d c0 	sub_i s2, s3, s27
    696c:	01 21 00 05 	add_i s8, s1, 8
    6970:	42 0c 00 00 	or s2, s2, 3
    6974:	41 10 00 88 	store_32 s2, 4(s1)
    6978:	3a fc ff 05 	add_i s1, s26, -1
    697c:	08 00 00 88 	store_32 s0, (s8)
    6980:	a1 03 00 f2 	bz s1, 116 <ialloc+0x348>
    6984:	e0 ff ff f7 	b -128 <ialloc+0x258>
    6988:	c0 40 00 0f 	move s6, 16
    698c:	18 04 00 01 	and s0, s24, 1
    6990:	1e 91 00 88 	store_32 s8, 36(sp)
    6994:	20 f4 ff f5 	bnz s0, -380 <ialloc+0x16c>
    6998:	83 ff ff f7 	b -500 <ialloc+0xf8>
    699c:	40 00 00 0f 	move s2, 0
    69a0:	60 40 00 0f 	move s3, 16
    69a4:	82 08 00 0b 	shl s4, s2, 2
    69a8:	99 00 52 c0 	add_i s4, s25, s4
    69ac:	a4 00 00 a8 	load_32 s5, (s4)
    69b0:	80 80 f1 c0 	move s4, s3
    69b4:	c5 2c 00 18 	cmplt_u s6, s5, 11
    69b8:	66 00 00 f4 	bnz s6, 12 <ialloc+0x318>
    69bc:	85 2c 00 05 	add_i s4, s5, 11
    69c0:	84 e0 ff 01 	and s4, s4, -8
    69c4:	42 04 00 05 	add_i s2, s2, 1
    69c8:	a4 0c 00 00 	or s5, s4, 3
    69cc:	aa 10 00 88 	store_32 s5, 4(s10)
    69d0:	4a 01 52 c0 	add_i s10, s10, s4
    69d4:	7b 03 62 c0 	sub_i s27, s27, s4
    69d8:	82 08 00 0b 	shl s4, s2, 2
    69dc:	c2 80 00 c1 	cmpeq_i s6, s2, s1
    69e0:	88 00 52 c0 	add_i s4, s8, s4
    69e4:	aa 20 00 05 	add_i s5, s10, 8
    69e8:	a4 00 00 88 	store_32 s5, (s4)
    69ec:	46 00 00 f4 	bnz s6, 8 <ialloc+0x348>
    69f0:	ed ff ff f7 	b -76 <ialloc+0x2f8>
    69f4:	3b 0c 00 00 	or s1, s27, 3
    69f8:	2a 10 00 88 	store_32 s1, 4(s10)
    69fc:	18 f0 06 a0 	load_u8 s0, 444(s24)
    6a00:	00 08 00 01 	and s0, s0, 2
    6a04:	e0 00 00 f2 	bz s0, 28 <ialloc+0x374>
    6a08:	18 00 07 05 	add_i s0, s24, 448
    6a0c:	20 00 00 0f 	move s1, 0
    6a10:	40 00 00 aa 	load_sync s2, (s0)
    6a14:	40 80 f0 c0 	move s2, s1
    6a18:	40 00 00 8a 	store_sync s2, (s0)  
    6a1c:	a2 ff ff f3 	bz s2, -12 <ialloc+0x364>
    6a20:	00 00 f4 c0 	move s0, s8
    6a24:	fe b3 00 a8 	load_32 ra, 44(sp)
    6a28:	7e c3 00 a8 	load_32 s27, 48(sp)
    6a2c:	5e d3 00 a8 	load_32 s26, 52(sp)
    6a30:	3e e3 00 a8 	load_32 s25, 56(sp)
    6a34:	1e f3 00 a8 	load_32 s24, 60(sp)
    6a38:	de 03 01 05 	add_i sp, sp, 64
    6a3c:	1f 00 00 f0 	ret

0000000000006a40 independent_comalloc:
    6a40:	de 03 ff 05 	add_i sp, sp, -64
    6a44:	fe f3 00 88 	store_32 ra, 60(sp)
    6a48:	60 00 f1 c0 	move s3, s2
    6a4c:	40 00 00 0f 	move s2, 0
    6a50:	17 ff ff f9 	call -932 <ialloc>
    6a54:	fe f3 00 a8 	load_32 ra, 60(sp)
    6a58:	de 03 01 05 	add_i sp, sp, 64
    6a5c:	1f 00 00 f0 	ret

0000000000006a60 bulk_free:
    6a60:	de 03 ff 05 	add_i sp, sp, -64
    6a64:	1e f3 00 88 	store_32 s24, 60(sp)
    6a68:	3e e3 00 88 	store_32 s25, 56(sp)
    6a6c:	5e d3 00 88 	store_32 s26, 52(sp)
    6a70:	7e c3 00 88 	store_32 s27, 48(sp)
    6a74:	fe b3 00 88 	store_32 ra, 44(sp)
    6a78:	46 00 00 4f 	movehi s2, 6
    6a7c:	22 43 05 00 	or s25, s2, 336
    6a80:	59 f0 06 a0 	load_u8 s2, 444(s25)
    6a84:	00 03 f0 c0 	move s24, s0
    6a88:	42 08 00 01 	and s2, s2, 2
    6a8c:	e2 01 00 f2 	bz s2, 60 <bulk_free+0x68>
    6a90:	19 00 07 05 	add_i s0, s25, 448
    6a94:	40 04 00 0f 	move s2, 1
    6a98:	60 00 00 aa 	load_sync s3, (s0)
    6a9c:	80 00 f1 c0 	move s4, s2
    6aa0:	80 00 00 8a 	store_sync s4, (s0)  
    6aa4:	a4 ff ff f3 	bz s4, -12 <bulk_free+0x38>
    6aa8:	03 01 00 f2 	bz s3, 32 <bulk_free+0x68>
    6aac:	79 00 07 a8 	load_32 s3, 448(s25)
    6ab0:	e3 ff ff f5 	bnz s3, -4 <bulk_free+0x4c>
    6ab4:	60 00 00 aa 	load_sync s3, (s0)
    6ab8:	80 00 f1 c0 	move s4, s2
    6abc:	80 00 00 8a 	store_sync s4, (s0)  
    6ac0:	a4 ff ff f3 	bz s4, -12 <bulk_free+0x54>
    6ac4:	43 ff ff f5 	bnz s3, -24 <bulk_free+0x4c>
    6ac8:	c1 05 00 f2 	bz s1, 184 <bulk_free+0x120>
    6acc:	01 08 00 0b 	shl s0, s1, 2
    6ad0:	58 03 50 c0 	add_i s26, s24, s0
    6ad4:	60 03 00 0f 	move s27, 0
    6ad8:	58 00 00 a8 	load_32 s2, (s24)
    6adc:	a2 02 00 f2 	bz s2, 84 <bulk_free+0xd0>
    6ae0:	62 f0 ff a9 	load_32 s3, -4(s2)
    6ae4:	78 03 00 88 	store_32 s27, (s24)
    6ae8:	39 40 00 a8 	load_32 s1, 16(s25)
    6aec:	03 0c 00 01 	and s0, s3, 3
    6af0:	00 04 00 10 	cmpeq_i s0, s0, 1
    6af4:	40 07 00 f4 	bnz s0, 232 <bulk_free+0x17c>
    6af8:	02 e0 ff 05 	add_i s0, s2, -8
    6afc:	20 80 80 c1 	cmplt_u s1, s0, s1
    6b00:	e1 06 00 f4 	bnz s1, 220 <bulk_free+0x17c>
    6b04:	98 10 00 05 	add_i s4, s24, 4
    6b08:	23 e0 ff 01 	and s1, s3, -8
    6b0c:	a4 00 0d c1 	cmpeq_i s5, s4, s26
    6b10:	e5 00 00 f4 	bnz s5, 28 <bulk_free+0xcc>
    6b14:	a0 80 50 c0 	add_i s5, s0, s1
    6b18:	c4 00 00 a8 	load_32 s6, (s4)
    6b1c:	e5 20 00 05 	add_i s7, s5, 8
    6b20:	c6 80 13 c1 	cmpne_i s6, s6, s7
    6b24:	46 00 00 f4 	bnz s6, 8 <bulk_free+0xcc>
    6b28:	06 00 00 f6 	b 24 <bulk_free+0xe0>
    6b2c:	83 01 00 f8 	call 1548 <dispose_chunk>
    6b30:	18 13 00 05 	add_i s24, s24, 4
    6b34:	18 00 1d c1 	cmpne_i s0, s24, s26
    6b38:	00 fd ff f5 	bnz s0, -96 <bulk_free+0x78>
    6b3c:	11 00 00 f6 	b 68 <bulk_free+0x120>
    6b40:	05 10 00 a8 	load_32 s0, 4(s5)
    6b44:	63 04 00 01 	and s3, s3, 1
    6b48:	a2 f0 ff 05 	add_i s5, s2, -4
    6b4c:	00 e0 ff 01 	and s0, s0, -8
    6b50:	00 80 50 c0 	add_i s0, s0, s1
    6b54:	23 00 00 c0 	or s1, s3, s0
    6b58:	05 00 50 c0 	add_i s0, s5, s0
    6b5c:	21 08 00 00 	or s1, s1, 2
    6b60:	22 f0 ff 89 	store_32 s1, -4(s2)
    6b64:	20 00 00 a8 	load_32 s1, (s0)
    6b68:	21 04 00 00 	or s1, s1, 1
    6b6c:	20 00 00 88 	store_32 s1, (s0)
    6b70:	44 00 00 88 	store_32 s2, (s4)
    6b74:	18 13 00 05 	add_i s24, s24, 4
    6b78:	18 00 1d c1 	cmpne_i s0, s24, s26
    6b7c:	e0 fa ff f5 	bnz s0, -164 <bulk_free+0x78>
    6b80:	19 30 00 a8 	load_32 s0, 12(s25)
    6b84:	39 70 00 a8 	load_32 s1, 28(s25)
    6b88:	00 80 90 c1 	cmple_u s0, s0, s1
    6b8c:	60 00 00 f4 	bnz s0, 12 <bulk_free+0x138>
    6b90:	00 00 00 0f 	move s0, 0
    6b94:	c9 fa ff f9 	call -5340 <sys_trim>
    6b98:	19 f0 06 a0 	load_u8 s0, 444(s25)
    6b9c:	00 08 00 01 	and s0, s0, 2
    6ba0:	e0 00 00 f2 	bz s0, 28 <bulk_free+0x15c>
    6ba4:	19 00 07 05 	add_i s0, s25, 448
    6ba8:	20 00 00 0f 	move s1, 0
    6bac:	40 00 00 aa 	load_sync s2, (s0)
    6bb0:	40 80 f0 c0 	move s2, s1
    6bb4:	40 00 00 8a 	store_sync s2, (s0)  
    6bb8:	a2 ff ff f3 	bz s2, -12 <bulk_free+0x14c>
    6bbc:	fe b3 00 a8 	load_32 ra, 44(sp)
    6bc0:	00 00 00 0f 	move s0, 0
    6bc4:	7e c3 00 a8 	load_32 s27, 48(sp)
    6bc8:	5e d3 00 a8 	load_32 s26, 52(sp)
    6bcc:	3e e3 00 a8 	load_32 s25, 56(sp)
    6bd0:	1e f3 00 a8 	load_32 s24, 60(sp)
    6bd4:	de 03 01 05 	add_i sp, sp, 64
    6bd8:	1f 00 00 f0 	ret
    6bdc:	2e 03 00 f8 	call 3256 <abort>

0000000000006be0 malloc_trim:
    6be0:	de 03 ff 05 	add_i sp, sp, -64
    6be4:	1e f3 00 88 	store_32 s24, 60(sp)
    6be8:	fe e3 00 88 	store_32 ra, 56(sp)
    6bec:	26 00 00 4f 	movehi s1, 6
    6bf0:	41 e0 04 00 	or s2, s1, 312
    6bf4:	22 00 00 a8 	load_32 s1, (s2)
    6bf8:	61 05 00 f4 	bnz s1, 172 <malloc_trim+0xc4>
    6bfc:	26 00 00 4f 	movehi s1, 6
    6c00:	60 04 00 0f 	move s3, 1
    6c04:	21 b0 0c 00 	or s1, s1, 812
    6c08:	81 00 00 aa 	load_sync s4, (s1)
    6c0c:	a0 80 f1 c0 	move s5, s3
    6c10:	a1 00 00 8a 	store_sync s5, (s1)  
    6c14:	a5 ff ff f3 	bz s5, -12 <malloc_trim+0x28>
    6c18:	04 01 00 f2 	bz s4, 32 <malloc_trim+0x58>
    6c1c:	81 00 00 a8 	load_32 s4, (s1)
    6c20:	e4 ff ff f5 	bnz s4, -4 <malloc_trim+0x3c>
    6c24:	81 00 00 aa 	load_sync s4, (s1)
    6c28:	a0 80 f1 c0 	move s5, s3
    6c2c:	a1 00 00 8a 	store_sync s5, (s1)  
    6c30:	a5 ff ff f3 	bz s5, -12 <malloc_trim+0x44>
    6c34:	44 ff ff f5 	bnz s4, -24 <malloc_trim+0x3c>
    6c38:	62 00 00 a8 	load_32 s3, (s2)
    6c3c:	a3 02 00 f4 	bnz s3, 84 <malloc_trim+0xb0>
    6c40:	60 00 40 0f 	move s3, 4096
    6c44:	62 20 00 88 	store_32 s3, 8(s2)
    6c48:	62 10 00 88 	store_32 s3, 4(s2)
    6c4c:	60 fc ff 0f 	move s3, -1
    6c50:	62 30 00 88 	store_32 s3, 12(s2)
    6c54:	66 00 00 4f 	movehi s3, 6
    6c58:	80 20 00 4f 	movehi s4, 256
    6c5c:	82 40 00 88 	store_32 s4, 16(s2)
    6c60:	80 08 00 0f 	move s4, 2
    6c64:	82 50 00 88 	store_32 s4, 20(s2)
    6c68:	63 40 05 00 	or s3, s3, 336
    6c6c:	ca 54 55 4f 	movehi s6, 174762
    6c70:	a0 00 00 0f 	move s5, 0
    6c74:	83 f0 06 88 	store_32 s4, 444(s3)
    6c78:	9e d0 00 05 	add_i s4, sp, 52
    6c7c:	a3 00 07 88 	store_32 s5, 448(s3)
    6c80:	66 60 55 00 	or s3, s6, 5464
    6c84:	84 c0 ff 01 	and s4, s4, -16
    6c88:	64 80 31 c0 	xor s3, s4, s3
    6c8c:	62 00 00 88 	store_32 s3, (s2)
    6c90:	40 00 00 0f 	move s2, 0
    6c94:	61 00 00 aa 	load_sync s3, (s1)
    6c98:	60 00 f1 c0 	move s3, s2
    6c9c:	61 00 00 8a 	store_sync s3, (s1)  
    6ca0:	a3 ff ff f3 	bz s3, -12 <malloc_trim+0xb4>
    6ca4:	26 00 00 4f 	movehi s1, 6
    6ca8:	01 43 05 00 	or s24, s1, 336
    6cac:	38 f0 06 a0 	load_u8 s1, 444(s24)
    6cb0:	21 08 00 01 	and s1, s1, 2
    6cb4:	e1 01 00 f2 	bz s1, 60 <malloc_trim+0x110>
    6cb8:	38 00 07 05 	add_i s1, s24, 448
    6cbc:	40 04 00 0f 	move s2, 1
    6cc0:	61 00 00 aa 	load_sync s3, (s1)
    6cc4:	80 00 f1 c0 	move s4, s2
    6cc8:	81 00 00 8a 	store_sync s4, (s1)  
    6ccc:	a4 ff ff f3 	bz s4, -12 <malloc_trim+0xe0>
    6cd0:	03 01 00 f2 	bz s3, 32 <malloc_trim+0x110>
    6cd4:	78 00 07 a8 	load_32 s3, 448(s24)
    6cd8:	e3 ff ff f5 	bnz s3, -4 <malloc_trim+0xf4>
    6cdc:	61 00 00 aa 	load_sync s3, (s1)
    6ce0:	80 00 f1 c0 	move s4, s2
    6ce4:	81 00 00 8a 	store_sync s4, (s1)  
    6ce8:	a4 ff ff f3 	bz s4, -12 <malloc_trim+0xfc>
    6cec:	43 ff ff f5 	bnz s3, -24 <malloc_trim+0xf4>
    6cf0:	72 fa ff f9 	call -5688 <sys_trim>
    6cf4:	38 f0 06 a0 	load_u8 s1, 444(s24)
    6cf8:	21 08 00 01 	and s1, s1, 2
    6cfc:	e1 00 00 f2 	bz s1, 28 <malloc_trim+0x138>
    6d00:	38 00 07 05 	add_i s1, s24, 448
    6d04:	40 00 00 0f 	move s2, 0
    6d08:	61 00 00 aa 	load_sync s3, (s1)
    6d0c:	60 00 f1 c0 	move s3, s2
    6d10:	61 00 00 8a 	store_sync s3, (s1)  
    6d14:	a3 ff ff f3 	bz s3, -12 <malloc_trim+0x128>
    6d18:	fe e3 00 a8 	load_32 ra, 56(sp)
    6d1c:	1e f3 00 a8 	load_32 s24, 60(sp)
    6d20:	de 03 01 05 	add_i sp, sp, 64
    6d24:	1f 00 00 f0 	ret

0000000000006d28 malloc_footprint:
    6d28:	06 00 00 4f 	movehi s0, 6
    6d2c:	00 40 05 00 	or s0, s0, 336
    6d30:	00 c0 06 a8 	load_32 s0, 432(s0)
    6d34:	1f 00 00 f0 	ret

0000000000006d38 malloc_max_footprint:
    6d38:	06 00 00 4f 	movehi s0, 6
    6d3c:	00 40 05 00 	or s0, s0, 336
    6d40:	00 d0 06 a8 	load_32 s0, 436(s0)
    6d44:	1f 00 00 f0 	ret

0000000000006d48 malloc_footprint_limit:
    6d48:	06 00 00 4f 	movehi s0, 6
    6d4c:	00 40 05 00 	or s0, s0, 336
    6d50:	00 e0 06 a8 	load_32 s0, 440(s0)
    6d54:	20 00 00 10 	cmpeq_i s1, s0, 0
    6d58:	41 00 00 f4 	bnz s1, 8 <malloc_footprint_limit+0x18>
    6d5c:	02 00 00 f6 	b 8 <malloc_footprint_limit+0x1c>
    6d60:	00 fc ff 0f 	move s0, -1
    6d64:	1f 00 00 f0 	ret

0000000000006d68 malloc_set_footprint_limit:
    6d68:	20 fc ff 10 	cmpeq_i s1, s0, -1
    6d6c:	a1 01 00 f4 	bnz s1, 52 <malloc_set_footprint_limit+0x38>
    6d70:	26 00 00 4f 	movehi s1, 6
    6d74:	40 00 00 0f 	move s2, 0
    6d78:	21 e0 04 00 	or s1, s1, 312
    6d7c:	21 20 00 a8 	load_32 s1, 8(s1)
    6d80:	00 80 50 c0 	add_i s0, s0, s1
    6d84:	22 80 60 c0 	sub_i s1, s2, s1
    6d88:	00 fc ff 05 	add_i s0, s0, -1
    6d8c:	00 80 10 c0 	and s0, s0, s1
    6d90:	26 00 00 4f 	movehi s1, 6
    6d94:	21 40 05 00 	or s1, s1, 336
    6d98:	01 e0 06 88 	store_32 s0, 440(s1)
    6d9c:	1f 00 00 f0 	ret
    6da0:	00 00 00 0f 	move s0, 0
    6da4:	26 00 00 4f 	movehi s1, 6
    6da8:	21 40 05 00 	or s1, s1, 336
    6dac:	01 e0 06 88 	store_32 s0, 440(s1)
    6db0:	1f 00 00 f0 	ret

0000000000006db4 mallinfo:
    6db4:	de 03 ff 05 	add_i sp, sp, -64
    6db8:	1e f3 00 88 	store_32 s24, 60(sp)
    6dbc:	3e e3 00 88 	store_32 s25, 56(sp)
    6dc0:	fe d3 00 88 	store_32 ra, 52(sp)
    6dc4:	20 03 00 0f 	move s25, 0
    6dc8:	00 03 f0 c0 	move s24, s0
    6dcc:	40 a0 00 0f 	move s2, 40
    6dd0:	20 80 fc c0 	move s1, s25
    6dd4:	45 03 00 f8 	call 3348 <memset>
    6dd8:	06 00 00 4f 	movehi s0, 6
    6ddc:	20 e0 04 00 	or s1, s0, 312
    6de0:	01 00 00 a8 	load_32 s0, (s1)
    6de4:	60 05 00 f4 	bnz s0, 172 <mallinfo+0xdc>
    6de8:	06 00 00 4f 	movehi s0, 6
    6dec:	40 04 00 0f 	move s2, 1
    6df0:	00 b0 0c 00 	or s0, s0, 812
    6df4:	60 00 00 aa 	load_sync s3, (s0)
    6df8:	80 00 f1 c0 	move s4, s2
    6dfc:	80 00 00 8a 	store_sync s4, (s0)  
    6e00:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x40>
    6e04:	03 01 00 f2 	bz s3, 32 <mallinfo+0x70>
    6e08:	60 00 00 a8 	load_32 s3, (s0)
    6e0c:	e3 ff ff f5 	bnz s3, -4 <mallinfo+0x54>
    6e10:	60 00 00 aa 	load_sync s3, (s0)
    6e14:	80 00 f1 c0 	move s4, s2
    6e18:	80 00 00 8a 	store_sync s4, (s0)  
    6e1c:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x5c>
    6e20:	43 ff ff f5 	bnz s3, -24 <mallinfo+0x54>
    6e24:	41 00 00 a8 	load_32 s2, (s1)
    6e28:	a2 02 00 f4 	bnz s2, 84 <mallinfo+0xc8>
    6e2c:	40 00 40 0f 	move s2, 4096
    6e30:	41 20 00 88 	store_32 s2, 8(s1)
    6e34:	41 10 00 88 	store_32 s2, 4(s1)
    6e38:	40 fc ff 0f 	move s2, -1
    6e3c:	41 30 00 88 	store_32 s2, 12(s1)
    6e40:	46 00 00 4f 	movehi s2, 6
    6e44:	60 20 00 4f 	movehi s3, 256
    6e48:	61 40 00 88 	store_32 s3, 16(s1)
    6e4c:	60 08 00 0f 	move s3, 2
    6e50:	61 50 00 88 	store_32 s3, 20(s1)
    6e54:	42 40 05 00 	or s2, s2, 336
    6e58:	aa 54 55 4f 	movehi s5, 174762
    6e5c:	80 00 00 0f 	move s4, 0
    6e60:	62 f0 06 88 	store_32 s3, 444(s2)
    6e64:	7e c0 00 05 	add_i s3, sp, 48
    6e68:	82 00 07 88 	store_32 s4, 448(s2)
    6e6c:	45 60 55 00 	or s2, s5, 5464
    6e70:	63 c0 ff 01 	and s3, s3, -16
    6e74:	43 00 31 c0 	xor s2, s3, s2
    6e78:	41 00 00 88 	store_32 s2, (s1)
    6e7c:	20 00 00 0f 	move s1, 0
    6e80:	40 00 00 aa 	load_sync s2, (s0)
    6e84:	40 80 f0 c0 	move s2, s1
    6e88:	40 00 00 8a 	store_sync s2, (s0)  
    6e8c:	a2 ff ff f3 	bz s2, -12 <mallinfo+0xcc>
    6e90:	06 00 00 4f 	movehi s0, 6
    6e94:	00 40 05 00 	or s0, s0, 336
    6e98:	20 f0 06 a0 	load_u8 s1, 444(s0)
    6e9c:	21 08 00 01 	and s1, s1, 2
    6ea0:	e1 01 00 f2 	bz s1, 60 <mallinfo+0x128>
    6ea4:	20 00 07 05 	add_i s1, s0, 448
    6ea8:	40 04 00 0f 	move s2, 1
    6eac:	61 00 00 aa 	load_sync s3, (s1)
    6eb0:	80 00 f1 c0 	move s4, s2
    6eb4:	81 00 00 8a 	store_sync s4, (s1)  
    6eb8:	a4 ff ff f3 	bz s4, -12 <mallinfo+0xf8>
    6ebc:	03 01 00 f2 	bz s3, 32 <mallinfo+0x128>
    6ec0:	60 00 07 a8 	load_32 s3, 448(s0)
    6ec4:	e3 ff ff f5 	bnz s3, -4 <mallinfo+0x10c>
    6ec8:	61 00 00 aa 	load_sync s3, (s1)
    6ecc:	80 00 f1 c0 	move s4, s2
    6ed0:	81 00 00 8a 	store_sync s4, (s1)  
    6ed4:	a4 ff ff f3 	bz s4, -12 <mallinfo+0x114>
    6ed8:	43 ff ff f5 	bnz s3, -24 <mallinfo+0x10c>
    6edc:	40 60 00 a8 	load_32 s2, 24(s0)
    6ee0:	62 06 00 f2 	bz s2, 204 <mallinfo+0x1f8>
    6ee4:	20 30 00 a8 	load_32 s1, 12(s0)
    6ee8:	c0 10 07 05 	add_i s6, s0, 452
    6eec:	a0 04 00 0f 	move s5, 1
    6ef0:	e0 e0 ff 0f 	move s7, -8
    6ef4:	61 a0 00 05 	add_i s3, s1, 40
    6ef8:	80 80 f1 c0 	move s4, s3
    6efc:	06 01 00 a8 	load_32 s8, (s6)
    6f00:	28 21 00 05 	add_i s9, s8, 8
    6f04:	29 1d 00 01 	and s9, s9, 7
    6f08:	49 01 00 10 	cmpeq_i s10, s9, 0
    6f0c:	20 81 fc c0 	move s9, s25
    6f10:	6a 00 00 f4 	bnz s10, 12 <mallinfo+0x168>
    6f14:	27 01 64 c0 	sub_i s9, s7, s8
    6f18:	29 1d 00 01 	and s9, s9, 7
    6f1c:	46 11 00 a8 	load_32 s10, 4(s6)
    6f20:	28 81 54 c0 	add_i s9, s8, s9
    6f24:	48 01 55 c0 	add_i s10, s8, s10
    6f28:	69 01 75 c1 	cmpge_u s11, s9, s10
    6f2c:	6b 02 00 f4 	bnz s11, 76 <mallinfo+0x1c4>
    6f30:	62 81 04 c1 	cmpeq_i s11, s2, s9
    6f34:	2b 02 00 f4 	bnz s11, 68 <mallinfo+0x1c4>
    6f38:	69 11 00 a8 	load_32 s11, 4(s9)
    6f3c:	8b 1d 00 10 	cmpeq_i s12, s11, 7
    6f40:	cc 01 00 f4 	bnz s12, 56 <mallinfo+0x1c4>
    6f44:	8b 0d 00 01 	and s12, s11, 3
    6f48:	6b e1 ff 01 	and s11, s11, -8
    6f4c:	8c 05 00 10 	cmpeq_i s12, s12, 1
    6f50:	a0 81 f5 c0 	move s13, s11
    6f54:	4c 00 00 f4 	bnz s12, 8 <mallinfo+0x1a8>
    6f58:	a0 81 fc c0 	move s13, s25
    6f5c:	29 81 55 c0 	add_i s9, s9, s11
    6f60:	6b 80 51 c0 	add_i s3, s11, s3
    6f64:	6c 05 00 01 	and s11, s12, 1
    6f68:	8d 00 52 c0 	add_i s4, s13, s4
    6f6c:	89 01 74 c1 	cmpge_u s12, s9, s8
    6f70:	a5 80 55 c0 	add_i s5, s5, s11
    6f74:	ac fd ff f5 	bnz s12, -76 <mallinfo+0x174>
    6f78:	c6 20 00 a8 	load_32 s6, 8(s6)
    6f7c:	06 fc ff f5 	bnz s6, -128 <mallinfo+0x148>
    6f80:	78 00 00 88 	store_32 s3, (s24)
    6f84:	b8 10 00 88 	store_32 s5, 4(s24)
    6f88:	40 c0 06 a8 	load_32 s2, 432(s0)
    6f8c:	62 80 61 c0 	sub_i s3, s2, s3
    6f90:	78 40 00 88 	store_32 s3, 16(s24)
    6f94:	60 d0 06 a8 	load_32 s3, 436(s0)
    6f98:	42 00 62 c0 	sub_i s2, s2, s4
    6f9c:	78 50 00 88 	store_32 s3, 20(s24)
    6fa0:	58 70 00 88 	store_32 s2, 28(s24)
    6fa4:	98 80 00 88 	store_32 s4, 32(s24)
    6fa8:	38 90 00 88 	store_32 s1, 36(s24)
    6fac:	20 f0 06 a0 	load_u8 s1, 444(s0)
    6fb0:	21 08 00 01 	and s1, s1, 2
    6fb4:	e1 00 00 f2 	bz s1, 28 <mallinfo+0x21c>
    6fb8:	00 00 07 05 	add_i s0, s0, 448
    6fbc:	20 00 00 0f 	move s1, 0
    6fc0:	40 00 00 aa 	load_sync s2, (s0)
    6fc4:	40 80 f0 c0 	move s2, s1
    6fc8:	40 00 00 8a 	store_sync s2, (s0)  
    6fcc:	a2 ff ff f3 	bz s2, -12 <mallinfo+0x20c>
    6fd0:	00 00 fc c0 	move s0, s24
    6fd4:	fe d3 00 a8 	load_32 ra, 52(sp)
    6fd8:	3e e3 00 a8 	load_32 s25, 56(sp)
    6fdc:	1e f3 00 a8 	load_32 s24, 60(sp)
    6fe0:	de 03 01 05 	add_i sp, sp, 64
    6fe4:	1f 00 00 f0 	ret

0000000000006fe8 mallopt:
    6fe8:	de 03 ff 05 	add_i sp, sp, -64
    6fec:	46 00 00 4f 	movehi s2, 6
    6ff0:	62 e0 04 00 	or s3, s2, 312
    6ff4:	43 00 00 a8 	load_32 s2, (s3)
    6ff8:	62 05 00 f4 	bnz s2, 172 <mallopt+0xbc>
    6ffc:	46 00 00 4f 	movehi s2, 6
    7000:	80 04 00 0f 	move s4, 1
    7004:	42 b0 0c 00 	or s2, s2, 812
    7008:	a2 00 00 aa 	load_sync s5, (s2)
    700c:	c0 00 f2 c0 	move s6, s4
    7010:	c2 00 00 8a 	store_sync s6, (s2)  
    7014:	a6 ff ff f3 	bz s6, -12 <mallopt+0x20>
    7018:	05 01 00 f2 	bz s5, 32 <mallopt+0x50>
    701c:	a2 00 00 a8 	load_32 s5, (s2)
    7020:	e5 ff ff f5 	bnz s5, -4 <mallopt+0x34>
    7024:	a2 00 00 aa 	load_sync s5, (s2)
    7028:	c0 00 f2 c0 	move s6, s4
    702c:	c2 00 00 8a 	store_sync s6, (s2)  
    7030:	a6 ff ff f3 	bz s6, -12 <mallopt+0x3c>
    7034:	45 ff ff f5 	bnz s5, -24 <mallopt+0x34>
    7038:	83 00 00 a8 	load_32 s4, (s3)
    703c:	a4 02 00 f4 	bnz s4, 84 <mallopt+0xa8>
    7040:	80 00 40 0f 	move s4, 4096
    7044:	83 20 00 88 	store_32 s4, 8(s3)
    7048:	83 10 00 88 	store_32 s4, 4(s3)
    704c:	80 fc ff 0f 	move s4, -1
    7050:	83 30 00 88 	store_32 s4, 12(s3)
    7054:	86 00 00 4f 	movehi s4, 6
    7058:	a0 20 00 4f 	movehi s5, 256
    705c:	a3 40 00 88 	store_32 s5, 16(s3)
    7060:	a0 08 00 0f 	move s5, 2
    7064:	a3 50 00 88 	store_32 s5, 20(s3)
    7068:	84 40 05 00 	or s4, s4, 336
    706c:	ea 54 55 4f 	movehi s7, 174762
    7070:	c0 00 00 0f 	move s6, 0
    7074:	a4 f0 06 88 	store_32 s5, 444(s4)
    7078:	be f0 00 05 	add_i s5, sp, 60
    707c:	c4 00 07 88 	store_32 s6, 448(s4)
    7080:	87 60 55 00 	or s4, s7, 5464
    7084:	a5 c0 ff 01 	and s5, s5, -16
    7088:	85 00 32 c0 	xor s4, s5, s4
    708c:	83 00 00 88 	store_32 s4, (s3)
    7090:	80 00 00 0f 	move s4, 0
    7094:	a2 00 00 aa 	load_sync s5, (s2)
    7098:	a0 00 f2 c0 	move s5, s4
    709c:	a2 00 00 8a 	store_sync s5, (s2)  
    70a0:	a5 ff ff f3 	bz s5, -12 <mallopt+0xac>
    70a4:	40 f4 ff 10 	cmpeq_i s2, s0, -3
    70a8:	02 01 00 f4 	bnz s2, 32 <mallopt+0xe0>
    70ac:	80 f8 ff 10 	cmpeq_i s4, s0, -2
    70b0:	40 00 00 0f 	move s2, 0
    70b4:	44 01 00 f4 	bnz s4, 40 <mallopt+0xf4>
    70b8:	00 fc ff 11 	cmpne_i s0, s0, -1
    70bc:	a0 00 00 f4 	bnz s0, 20 <mallopt+0xe8>
    70c0:	23 40 00 88 	store_32 s1, 16(s3)
    70c4:	02 00 00 f6 	b 8 <mallopt+0xe4>
    70c8:	23 30 00 88 	store_32 s1, 12(s3)
    70cc:	40 04 00 0f 	move s2, 1
    70d0:	00 00 f1 c0 	move s0, s2
    70d4:	de 03 01 05 	add_i sp, sp, 64
    70d8:	1f 00 00 f0 	ret
    70dc:	03 10 00 a8 	load_32 s0, 4(s3)
    70e0:	00 80 60 c1 	cmpgt_u s0, s0, s1
    70e4:	60 ff ff f5 	bnz s0, -20 <mallopt+0xe8>
    70e8:	01 fc ff 05 	add_i s0, s1, -1
    70ec:	00 80 10 c0 	and s0, s0, s1
    70f0:	00 ff ff f5 	bnz s0, -32 <mallopt+0xe8>
    70f4:	23 20 00 88 	store_32 s1, 8(s3)
    70f8:	f5 ff ff f7 	b -44 <mallopt+0xe4>

00000000000070fc malloc_usable_size:
    70fc:	20 00 f0 c0 	move s1, s0
    7100:	00 00 00 0f 	move s0, 0
    7104:	81 01 00 f2 	bz s1, 48 <malloc_usable_size+0x38>
    7108:	21 f0 ff a9 	load_32 s1, -4(s1)
    710c:	41 0c 00 01 	and s2, s1, 3
    7110:	62 04 00 10 	cmpeq_i s3, s2, 1
    7114:	03 01 00 f4 	bnz s3, 32 <malloc_usable_size+0x38>
    7118:	42 00 00 10 	cmpeq_i s2, s2, 0
    711c:	01 e0 ff 01 	and s0, s1, -8
    7120:	62 00 00 f4 	bnz s2, 12 <malloc_usable_size+0x30>
    7124:	20 10 00 0f 	move s1, 4
    7128:	02 00 00 f6 	b 8 <malloc_usable_size+0x34>
    712c:	20 20 00 0f 	move s1, 8
    7130:	00 80 60 c0 	sub_i s0, s0, s1
    7134:	1f 00 00 f0 	ret

0000000000007138 dispose_chunk:
    7138:	de 03 ff 05 	add_i sp, sp, -64
    713c:	fe f3 00 88 	store_32 ra, 60(sp)
    7140:	60 10 00 a8 	load_32 s3, 4(s0)
    7144:	40 80 50 c0 	add_i s2, s0, s1
    7148:	83 04 00 01 	and s4, s3, 1
    714c:	04 12 00 f4 	bnz s4, 576 <dispose_chunk+0x254>
    7150:	80 00 00 a8 	load_32 s4, (s0)
    7154:	63 0c 00 01 	and s3, s3, 3
    7158:	a3 1c 00 f2 	bz s3, 916 <dispose_chunk+0x3b4>
    715c:	66 00 00 4f 	movehi s3, 6
    7160:	00 00 62 c0 	sub_i s0, s0, s4
    7164:	63 40 05 00 	or s3, s3, 336
    7168:	c3 40 00 a8 	load_32 s6, 16(s3)
    716c:	a0 00 83 c1 	cmplt_u s5, s0, s6
    7170:	05 39 00 f4 	bnz s5, 1824 <dispose_chunk+0x758>
    7174:	a3 50 00 a8 	load_32 s5, 20(s3)
    7178:	24 80 50 c0 	add_i s1, s4, s1
    717c:	a5 00 00 c1 	cmpeq_i s5, s5, s0
    7180:	a5 03 00 f4 	bnz s5, 116 <dispose_chunk+0xbc>
    7184:	a4 fc 03 16 	cmpgt_u s5, s4, 255
    7188:	65 04 00 f4 	bnz s5, 140 <dispose_chunk+0xdc>
    718c:	e4 0c 00 0a 	shr s7, s4, 3
    7190:	80 20 00 a8 	load_32 s4, 8(s0)
    7194:	a7 0c 00 0b 	shl s5, s7, 3
    7198:	a3 80 52 c0 	add_i s5, s3, s5
    719c:	05 a1 00 05 	add_i s8, s5, 40
    71a0:	a0 30 00 a8 	load_32 s5, 12(s0)
    71a4:	24 01 04 c1 	cmpeq_i s9, s4, s8
    71a8:	c9 00 00 f4 	bnz s9, 24 <dispose_chunk+0x88>
    71ac:	26 01 62 c1 	cmpgt_u s9, s6, s4
    71b0:	09 37 00 f4 	bnz s9, 1760 <dispose_chunk+0x758>
    71b4:	24 31 00 a8 	load_32 s9, 12(s4)
    71b8:	29 01 10 c1 	cmpne_i s9, s9, s0
    71bc:	a9 36 00 f4 	bnz s9, 1748 <dispose_chunk+0x758>
    71c0:	25 01 12 c1 	cmpne_i s9, s5, s4
    71c4:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x94>
    71c8:	29 00 00 f6 	b 164 <dispose_chunk+0x134>
    71cc:	65 00 04 c1 	cmpeq_i s3, s5, s8
    71d0:	c3 00 00 f4 	bnz s3, 24 <dispose_chunk+0xb0>
    71d4:	66 80 62 c1 	cmpgt_u s3, s6, s5
    71d8:	c3 35 00 f4 	bnz s3, 1720 <dispose_chunk+0x758>
    71dc:	65 20 00 a8 	load_32 s3, 8(s5)
    71e0:	63 00 10 c1 	cmpne_i s3, s3, s0
    71e4:	63 35 00 f4 	bnz s3, 1708 <dispose_chunk+0x758>
    71e8:	a4 30 00 88 	store_32 s5, 12(s4)
    71ec:	85 20 00 88 	store_32 s4, 8(s5)
    71f0:	67 00 00 f6 	b 412 <dispose_chunk+0x254>
    71f4:	82 10 00 a8 	load_32 s4, 4(s2)
    71f8:	a4 0c 00 01 	and s5, s4, 3
    71fc:	a5 0c 00 11 	cmpne_i s5, s5, 3
    7200:	65 0c 00 f4 	bnz s5, 396 <dispose_chunk+0x254>
    7204:	23 20 00 88 	store_32 s1, 8(s3)
    7208:	64 f8 ff 01 	and s3, s4, -2
    720c:	62 10 00 88 	store_32 s3, 4(s2)
    7210:	bf 00 00 f6 	b 764 <dispose_chunk+0x3d4>
    7214:	80 60 00 a8 	load_32 s4, 24(s0)
    7218:	a0 30 00 a8 	load_32 s5, 12(s0)
    721c:	e5 00 00 c1 	cmpeq_i s7, s5, s0
    7220:	c7 01 00 f4 	bnz s7, 56 <dispose_chunk+0x120>
    7224:	e0 20 00 a8 	load_32 s7, 8(s0)
    7228:	c6 80 63 c1 	cmpgt_u s6, s6, s7
    722c:	26 33 00 f4 	bnz s6, 1636 <dispose_chunk+0x758>
    7230:	c7 30 00 a8 	load_32 s6, 12(s7)
    7234:	c6 00 10 c1 	cmpne_i s6, s6, s0
    7238:	c6 32 00 f4 	bnz s6, 1624 <dispose_chunk+0x758>
    723c:	c5 20 00 a8 	load_32 s6, 8(s5)
    7240:	c6 00 10 c1 	cmpne_i s6, s6, s0
    7244:	66 32 00 f4 	bnz s6, 1612 <dispose_chunk+0x758>
    7248:	a7 30 00 88 	store_32 s5, 12(s7)
    724c:	e5 20 00 88 	store_32 s7, 8(s5)
    7250:	e4 09 00 f2 	bz s4, 316 <dispose_chunk+0x254>
    7254:	1d 00 00 f6 	b 116 <dispose_chunk+0x190>
    7258:	00 51 00 a8 	load_32 s8, 20(s0)
    725c:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x12c>
    7260:	0a 00 00 f6 	b 40 <dispose_chunk+0x150>
    7264:	e0 50 00 05 	add_i s7, s0, 20
    7268:	0b 00 00 f6 	b 44 <dispose_chunk+0x15c>
    726c:	80 04 00 0f 	move s4, 1
    7270:	a3 00 00 a8 	load_32 s5, (s3)
    7274:	84 80 b3 c0 	shl s4, s4, s7
    7278:	84 fc ff 03 	xor s4, s4, -1
    727c:	85 00 12 c0 	and s4, s5, s4
    7280:	83 00 00 88 	store_32 s4, (s3)
    7284:	42 00 00 f6 	b 264 <dispose_chunk+0x254>
    7288:	e0 40 00 05 	add_i s7, s0, 16
    728c:	07 01 00 a8 	load_32 s8, (s7)
    7290:	48 2f 00 f2 	bz s8, 1512 <dispose_chunk+0x740>
    7294:	a0 00 f4 c0 	move s5, s8
    7298:	05 51 00 a8 	load_32 s8, 20(s5)
    729c:	20 81 f3 c0 	move s9, s7
    72a0:	e5 50 00 05 	add_i s7, s5, 20
    72a4:	88 ff ff f5 	bnz s8, -16 <dispose_chunk+0x15c>
    72a8:	05 41 00 a8 	load_32 s8, 16(s5)
    72ac:	e5 40 00 05 	add_i s7, s5, 16
    72b0:	28 ff ff f5 	bnz s8, -28 <dispose_chunk+0x15c>
    72b4:	c6 80 64 c1 	cmpgt_u s6, s6, s9
    72b8:	c6 2e 00 f4 	bnz s6, 1496 <dispose_chunk+0x758>
    72bc:	c0 00 00 0f 	move s6, 0
    72c0:	c9 00 00 88 	store_32 s6, (s9)
    72c4:	44 06 00 f2 	bz s4, 200 <dispose_chunk+0x254>
    72c8:	c0 70 00 a8 	load_32 s6, 28(s0)
    72cc:	e6 08 00 0b 	shl s7, s6, 2
    72d0:	e3 80 53 c0 	add_i s7, s3, s7
    72d4:	07 c1 04 a8 	load_32 s8, 304(s7)
    72d8:	08 01 10 c1 	cmpne_i s8, s8, s0
    72dc:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x1ac>
    72e0:	0c 00 00 f6 	b 48 <dispose_chunk+0x1d8>
    72e4:	c3 40 00 a8 	load_32 s6, 16(s3)
    72e8:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    72ec:	26 2d 00 f4 	bnz s6, 1444 <dispose_chunk+0x758>
    72f0:	c4 40 00 a8 	load_32 s6, 16(s4)
    72f4:	c6 00 00 c1 	cmpeq_i s6, s6, s0
    72f8:	06 02 00 f4 	bnz s6, 64 <dispose_chunk+0x200>
    72fc:	c0 50 00 0f 	move s6, 20
    7300:	c4 00 53 c0 	add_i s6, s4, s6
    7304:	a6 00 00 88 	store_32 s5, (s6)
    7308:	25 04 00 f2 	bz s5, 132 <dispose_chunk+0x254>
    730c:	0f 00 00 f6 	b 60 <dispose_chunk+0x210>
    7310:	e7 c0 04 05 	add_i s7, s7, 304
    7314:	a7 00 00 88 	store_32 s5, (s7)
    7318:	85 01 00 f4 	bnz s5, 48 <dispose_chunk+0x210>
    731c:	80 04 00 0f 	move s4, 1
    7320:	a3 10 00 a8 	load_32 s5, 4(s3)
    7324:	84 00 b3 c0 	shl s4, s4, s6
    7328:	84 fc ff 03 	xor s4, s4, -1
    732c:	85 00 12 c0 	and s4, s5, s4
    7330:	83 10 00 88 	store_32 s4, 4(s3)
    7334:	16 00 00 f6 	b 88 <dispose_chunk+0x254>
    7338:	c0 40 00 0f 	move s6, 16
    733c:	c4 00 53 c0 	add_i s6, s4, s6
    7340:	a6 00 00 88 	store_32 s5, (s6)
    7344:	45 02 00 f2 	bz s5, 72 <dispose_chunk+0x254>
    7348:	c3 40 00 a8 	load_32 s6, 16(s3)
    734c:	e6 80 62 c1 	cmpgt_u s7, s6, s5
    7350:	07 2a 00 f4 	bnz s7, 1344 <dispose_chunk+0x758>
    7354:	85 60 00 88 	store_32 s4, 24(s5)
    7358:	80 40 00 a8 	load_32 s4, 16(s0)
    735c:	a4 00 00 f2 	bz s4, 20 <dispose_chunk+0x238>
    7360:	c6 00 62 c1 	cmpgt_u s6, s6, s4
    7364:	66 29 00 f4 	bnz s6, 1324 <dispose_chunk+0x758>
    7368:	85 40 00 88 	store_32 s4, 16(s5)
    736c:	a4 60 00 88 	store_32 s5, 24(s4)
    7370:	80 50 00 a8 	load_32 s4, 20(s0)
    7374:	c4 00 00 f2 	bz s4, 24 <dispose_chunk+0x254>
    7378:	63 40 00 a8 	load_32 s3, 16(s3)
    737c:	63 00 62 c1 	cmpgt_u s3, s3, s4
    7380:	83 28 00 f4 	bnz s3, 1296 <dispose_chunk+0x758>
    7384:	85 50 00 88 	store_32 s4, 20(s5)
    7388:	a4 60 00 88 	store_32 s5, 24(s4)
    738c:	66 00 00 4f 	movehi s3, 6
    7390:	63 40 05 00 	or s3, s3, 336
    7394:	e3 40 00 a8 	load_32 s7, 16(s3)
    7398:	82 80 83 c1 	cmplt_u s4, s2, s7
    739c:	a4 27 00 f4 	bnz s4, 1268 <dispose_chunk+0x758>
    73a0:	82 10 00 a8 	load_32 s4, 4(s2)
    73a4:	a4 08 00 01 	and s5, s4, 2
    73a8:	a5 04 00 f4 	bnz s5, 148 <dispose_chunk+0x304>
    73ac:	a3 60 00 a8 	load_32 s5, 24(s3)
    73b0:	a5 00 11 c1 	cmpne_i s5, s5, s2
    73b4:	45 00 00 f4 	bnz s5, 8 <dispose_chunk+0x284>
    73b8:	43 00 00 f6 	b 268 <dispose_chunk+0x38c>
    73bc:	a3 50 00 a8 	load_32 s5, 20(s3)
    73c0:	a5 00 11 c1 	cmpne_i s5, s5, s2
    73c4:	45 00 00 f4 	bnz s5, 8 <dispose_chunk+0x294>
    73c8:	4c 00 00 f6 	b 304 <dispose_chunk+0x3c0>
    73cc:	a4 fc 03 16 	cmpgt_u s5, s4, 255
    73d0:	e5 0b 00 f4 	bnz s5, 380 <dispose_chunk+0x414>
    73d4:	04 0d 00 0a 	shr s8, s4, 3
    73d8:	a2 20 00 a8 	load_32 s5, 8(s2)
    73dc:	c8 0c 00 0b 	shl s6, s8, 3
    73e0:	c3 00 53 c0 	add_i s6, s3, s6
    73e4:	26 a1 00 05 	add_i s9, s6, 40
    73e8:	c2 30 00 a8 	load_32 s6, 12(s2)
    73ec:	45 81 04 c1 	cmpeq_i s10, s5, s9
    73f0:	ca 00 00 f4 	bnz s10, 24 <dispose_chunk+0x2d0>
    73f4:	47 81 62 c1 	cmpgt_u s10, s7, s5
    73f8:	ca 24 00 f4 	bnz s10, 1176 <dispose_chunk+0x758>
    73fc:	45 31 00 a8 	load_32 s10, 12(s5)
    7400:	4a 01 11 c1 	cmpne_i s10, s10, s2
    7404:	6a 24 00 f4 	bnz s10, 1164 <dispose_chunk+0x758>
    7408:	46 81 12 c1 	cmpne_i s10, s6, s5
    740c:	4a 00 00 f4 	bnz s10, 8 <dispose_chunk+0x2dc>
    7410:	c5 00 00 f6 	b 788 <dispose_chunk+0x5ec>
    7414:	06 81 04 c1 	cmpeq_i s8, s6, s9
    7418:	c8 00 00 f4 	bnz s8, 24 <dispose_chunk+0x2f8>
    741c:	e7 00 63 c1 	cmpgt_u s7, s7, s6
    7420:	87 23 00 f4 	bnz s7, 1136 <dispose_chunk+0x758>
    7424:	e6 20 00 a8 	load_32 s7, 8(s6)
    7428:	47 00 11 c1 	cmpne_i s2, s7, s2
    742c:	22 23 00 f4 	bnz s2, 1124 <dispose_chunk+0x758>
    7430:	c5 30 00 88 	store_32 s6, 12(s5)
    7434:	a6 20 00 88 	store_32 s5, 8(s6)
    7438:	03 01 00 f6 	b 1036 <dispose_chunk+0x70c>
    743c:	84 f8 ff 01 	and s4, s4, -2
    7440:	82 10 00 88 	store_32 s4, 4(s2)
    7444:	40 80 50 c0 	add_i s2, s0, s1
    7448:	81 04 00 00 	or s4, s1, 1
    744c:	80 10 00 88 	store_32 s4, 4(s0)
    7450:	22 00 00 88 	store_32 s1, (s2)
    7454:	41 fc 03 16 	cmpgt_u s2, s1, 255
    7458:	02 02 00 f4 	bnz s2, 64 <dispose_chunk+0x360>
    745c:	21 0c 00 0a 	shr s1, s1, 3
    7460:	43 00 00 a8 	load_32 s2, (s3)
    7464:	80 04 00 0f 	move s4, 1
    7468:	a1 0c 00 0b 	shl s5, s1, 3
    746c:	a3 80 52 c0 	add_i s5, s3, s5
    7470:	84 80 b0 c0 	shl s4, s4, s1
    7474:	c2 00 12 c0 	and s6, s2, s4
    7478:	25 a0 00 05 	add_i s1, s5, 40
    747c:	46 00 00 f4 	bnz s6, 8 <dispose_chunk+0x34c>
    7480:	29 00 00 f6 	b 164 <dispose_chunk+0x3ec>
    7484:	41 20 00 a8 	load_32 s2, 8(s1)
    7488:	63 40 00 a8 	load_32 s3, 16(s3)
    748c:	63 00 91 c1 	cmple_u s3, s3, s2
    7490:	03 05 00 f4 	bnz s3, 160 <dispose_chunk+0x3f8>
    7494:	ff 00 00 f6 	b 1020 <dispose_chunk+0x758>
    7498:	40 00 00 0f 	move s2, 0
    749c:	a1 20 00 0a 	shr s5, s1, 8
    74a0:	80 00 f1 c0 	move s4, s2
    74a4:	e5 0a 00 f2 	bz s5, 348 <dispose_chunk+0x4c8>
    74a8:	9f fc 00 4f 	movehi s4, 2047
    74ac:	84 fc 7f 00 	or s4, s4, 8191
    74b0:	81 00 62 c1 	cmpgt_u s4, s1, s4
    74b4:	44 00 00 f4 	bnz s4, 8 <dispose_chunk+0x384>
    74b8:	36 00 00 f6 	b 216 <dispose_chunk+0x458>
    74bc:	80 7c 00 0f 	move s4, 31
    74c0:	50 00 00 f6 	b 320 <dispose_chunk+0x4c8>
    74c4:	43 30 00 a8 	load_32 s2, 12(s3)
    74c8:	22 80 50 c0 	add_i s1, s2, s1
    74cc:	23 30 00 88 	store_32 s1, 12(s3)
    74d0:	03 60 00 88 	store_32 s0, 24(s3)
    74d4:	21 04 00 00 	or s1, s1, 1
    74d8:	20 10 00 88 	store_32 s1, 4(s0)
    74dc:	23 50 00 a8 	load_32 s1, 20(s3)
    74e0:	00 80 10 c1 	cmpne_i s0, s0, s1
    74e4:	40 00 00 f4 	bnz s0, 8 <dispose_chunk+0x3b4>
    74e8:	84 00 00 f6 	b 528 <dispose_chunk+0x5c0>
    74ec:	fe f3 00 a8 	load_32 ra, 60(sp)
    74f0:	de 03 01 05 	add_i sp, sp, 64
    74f4:	1f 00 00 f0 	ret
    74f8:	43 20 00 a8 	load_32 s2, 8(s3)
    74fc:	22 80 50 c0 	add_i s1, s2, s1
    7500:	23 20 00 88 	store_32 s1, 8(s3)
    7504:	03 50 00 88 	store_32 s0, 20(s3)
    7508:	40 80 50 c0 	add_i s2, s0, s1
    750c:	61 04 00 00 	or s3, s1, 1
    7510:	60 10 00 88 	store_32 s3, 4(s0)
    7514:	22 00 00 88 	store_32 s1, (s2)
    7518:	fe f3 00 a8 	load_32 ra, 60(sp)
    751c:	de 03 01 05 	add_i sp, sp, 64
    7520:	1f 00 00 f0 	ret
    7524:	42 00 02 c0 	or s2, s2, s4
    7528:	43 00 00 88 	store_32 s2, (s3)
    752c:	40 80 f0 c0 	move s2, s1
    7530:	01 20 00 88 	store_32 s0, 8(s1)
    7534:	02 30 00 88 	store_32 s0, 12(s2)
    7538:	40 20 00 88 	store_32 s2, 8(s0)
    753c:	20 30 00 88 	store_32 s1, 12(s0)
    7540:	fe f3 00 a8 	load_32 ra, 60(sp)
    7544:	de 03 01 05 	add_i sp, sp, 64
    7548:	1f 00 00 f0 	ret
    754c:	a2 60 00 a8 	load_32 s5, 24(s2)
    7550:	c2 30 00 a8 	load_32 s6, 12(s2)
    7554:	06 01 01 c1 	cmpeq_i s8, s6, s2
    7558:	c8 0d 00 f4 	bnz s8, 440 <dispose_chunk+0x5d8>
    755c:	02 21 00 a8 	load_32 s8, 8(s2)
    7560:	e7 00 64 c1 	cmpgt_u s7, s7, s8
    7564:	67 19 00 f4 	bnz s7, 812 <dispose_chunk+0x758>
    7568:	e8 30 00 a8 	load_32 s7, 12(s8)
    756c:	e7 00 11 c1 	cmpne_i s7, s7, s2
    7570:	07 19 00 f4 	bnz s7, 800 <dispose_chunk+0x758>
    7574:	e6 20 00 a8 	load_32 s7, 8(s6)
    7578:	e7 00 11 c1 	cmpne_i s7, s7, s2
    757c:	a7 18 00 f4 	bnz s7, 788 <dispose_chunk+0x758>
    7580:	c8 30 00 88 	store_32 s6, 12(s8)
    7584:	06 21 00 88 	store_32 s8, 8(s6)
    7588:	e5 15 00 f2 	bz s5, 700 <dispose_chunk+0x70c>
    758c:	7d 00 00 f6 	b 500 <dispose_chunk+0x648>
    7590:	9f 0c 00 4f 	movehi s4, 127
    7594:	df 04 00 4f 	movehi s6, 63
    7598:	fe 00 00 4f 	movehi s7, 30
    759c:	84 00 7c 00 	or s4, s4, 7936
    75a0:	85 00 52 c0 	add_i s4, s5, s4
    75a4:	c6 00 40 00 	or s6, s6, 4096
    75a8:	84 40 00 0a 	shr s4, s4, 16
    75ac:	84 20 00 01 	and s4, s4, 8
    75b0:	a5 00 b2 c0 	shl s5, s5, s4
    75b4:	c5 00 53 c0 	add_i s6, s5, s6
    75b8:	c6 40 00 0a 	shr s6, s6, 16
    75bc:	c6 10 00 01 	and s6, s6, 4
    75c0:	a5 00 b3 c0 	shl s5, s5, s6
    75c4:	86 00 02 c0 	or s4, s6, s4
    75c8:	e5 80 53 c0 	add_i s7, s5, s7
    75cc:	e7 40 00 0a 	shr s7, s7, 16
    75d0:	c7 08 00 01 	and s6, s7, 2
    75d4:	e0 38 00 0f 	move s7, 14
    75d8:	84 00 03 c0 	or s4, s4, s6
    75dc:	a5 00 b3 c0 	shl s5, s5, s6
    75e0:	87 00 62 c0 	sub_i s4, s7, s4
    75e4:	a5 3c 00 0a 	shr s5, s5, 15
    75e8:	84 80 52 c0 	add_i s4, s4, s5
    75ec:	a4 1c 00 05 	add_i s5, s4, 7
    75f0:	a1 80 a2 c0 	shr s5, s1, s5
    75f4:	84 04 00 0b 	shl s4, s4, 1
    75f8:	a5 04 00 01 	and s5, s5, 1
    75fc:	85 00 02 c0 	or s4, s5, s4
    7600:	80 70 00 88 	store_32 s4, 28(s0)
    7604:	c4 08 00 0b 	shl s6, s4, 2
    7608:	40 50 00 88 	store_32 s2, 20(s0)
    760c:	e3 00 53 c0 	add_i s7, s3, s6
    7610:	40 40 00 88 	store_32 s2, 16(s0)
    7614:	40 04 00 0f 	move s2, 1
    7618:	a3 10 00 a8 	load_32 s5, 4(s3)
    761c:	c2 00 b2 c0 	shl s6, s2, s4
    7620:	47 c0 04 05 	add_i s2, s7, 304
    7624:	05 01 13 c0 	and s8, s5, s6
    7628:	48 00 00 f4 	bnz s8, 8 <dispose_chunk+0x4f8>
    762c:	08 00 00 f6 	b 32 <dispose_chunk+0x514>
    7630:	a2 00 00 a8 	load_32 s5, (s2)
    7634:	c4 7c 00 10 	cmpeq_i s6, s4, 31
    7638:	26 01 00 f4 	bnz s6, 36 <dispose_chunk+0x524>
    763c:	40 64 00 0f 	move s2, 25
    7640:	84 04 00 0a 	shr s4, s4, 1
    7644:	42 00 62 c0 	sub_i s2, s2, s4
    7648:	06 00 00 f6 	b 24 <dispose_chunk+0x528>
    764c:	25 00 03 c0 	or s1, s5, s6
    7650:	23 10 00 88 	store_32 s1, 4(s3)
    7654:	02 00 00 88 	store_32 s0, (s2)
    7658:	13 00 00 f6 	b 76 <dispose_chunk+0x56c>
    765c:	40 00 00 0f 	move s2, 0
    7660:	81 00 b1 c0 	shl s4, s1, s2
    7664:	40 80 f2 c0 	move s2, s5
    7668:	a2 10 00 a8 	load_32 s5, 4(s2)
    766c:	a5 e0 ff 01 	and s5, s5, -8
    7670:	a5 80 00 c1 	cmpeq_i s5, s5, s1
    7674:	45 02 00 f4 	bnz s5, 72 <dispose_chunk+0x584>
    7678:	a4 74 00 0a 	shr s5, s4, 29
    767c:	84 04 00 0b 	shl s4, s4, 1
    7680:	a5 10 00 01 	and s5, s5, 4
    7684:	c2 80 52 c0 	add_i s6, s2, s5
    7688:	a6 40 00 a8 	load_32 s5, 16(s6)
    768c:	c5 fe ff f5 	bnz s5, -40 <dispose_chunk+0x52c>
    7690:	63 40 00 a8 	load_32 s3, 16(s3)
    7694:	26 40 00 05 	add_i s1, s6, 16
    7698:	63 80 60 c1 	cmpgt_u s3, s3, s1
    769c:	a3 0f 00 f4 	bnz s3, 500 <dispose_chunk+0x758>
    76a0:	01 00 00 88 	store_32 s0, (s1)
    76a4:	40 60 00 88 	store_32 s2, 24(s0)
    76a8:	00 30 00 88 	store_32 s0, 12(s0)
    76ac:	00 20 00 88 	store_32 s0, 8(s0)
    76b0:	fe f3 00 a8 	load_32 ra, 60(sp)
    76b4:	de 03 01 05 	add_i sp, sp, 64
    76b8:	1f 00 00 f0 	ret
    76bc:	22 20 00 a8 	load_32 s1, 8(s2)
    76c0:	63 40 00 a8 	load_32 s3, 16(s3)
    76c4:	83 80 60 c1 	cmpgt_u s4, s3, s1
    76c8:	44 0e 00 f4 	bnz s4, 456 <dispose_chunk+0x758>
    76cc:	63 00 61 c1 	cmpgt_u s3, s3, s2
    76d0:	03 0e 00 f4 	bnz s3, 448 <dispose_chunk+0x758>
    76d4:	01 30 00 88 	store_32 s0, 12(s1)
    76d8:	02 20 00 88 	store_32 s0, 8(s2)
    76dc:	20 20 00 88 	store_32 s1, 8(s0)
    76e0:	20 00 00 0f 	move s1, 0
    76e4:	40 30 00 88 	store_32 s2, 12(s0)
    76e8:	20 60 00 88 	store_32 s1, 24(s0)
    76ec:	fe f3 00 a8 	load_32 ra, 60(sp)
    76f0:	de 03 01 05 	add_i sp, sp, 64
    76f4:	1f 00 00 f0 	ret
    76f8:	00 00 00 0f 	move s0, 0
    76fc:	03 50 00 88 	store_32 s0, 20(s3)
    7700:	03 20 00 88 	store_32 s0, 8(s3)
    7704:	fe f3 00 a8 	load_32 ra, 60(sp)
    7708:	de 03 01 05 	add_i sp, sp, 64
    770c:	1f 00 00 f0 	ret
    7710:	22 51 00 a8 	load_32 s9, 20(s2)
    7714:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x5e4>
    7718:	0a 00 00 f6 	b 40 <dispose_chunk+0x608>
    771c:	02 51 00 05 	add_i s8, s2, 20
    7720:	0b 00 00 f6 	b 44 <dispose_chunk+0x614>
    7724:	40 04 00 0f 	move s2, 1
    7728:	a3 00 00 a8 	load_32 s5, (s3)
    772c:	42 00 b4 c0 	shl s2, s2, s8
    7730:	42 fc ff 03 	xor s2, s2, -1
    7734:	45 00 11 c0 	and s2, s5, s2
    7738:	43 00 00 88 	store_32 s2, (s3)
    773c:	42 00 00 f6 	b 264 <dispose_chunk+0x70c>
    7740:	02 41 00 05 	add_i s8, s2, 16
    7744:	28 01 00 a8 	load_32 s9, (s8)
    7748:	e9 09 00 f2 	bz s9, 316 <dispose_chunk+0x74c>
    774c:	c0 80 f4 c0 	move s6, s9
    7750:	26 51 00 a8 	load_32 s9, 20(s6)
    7754:	40 01 f4 c0 	move s10, s8
    7758:	06 51 00 05 	add_i s8, s6, 20
    775c:	89 ff ff f5 	bnz s9, -16 <dispose_chunk+0x614>
    7760:	26 41 00 a8 	load_32 s9, 16(s6)
    7764:	06 41 00 05 	add_i s8, s6, 16
    7768:	29 ff ff f5 	bnz s9, -28 <dispose_chunk+0x614>
    776c:	e7 00 65 c1 	cmpgt_u s7, s7, s10
    7770:	07 09 00 f4 	bnz s7, 288 <dispose_chunk+0x758>
    7774:	e0 00 00 0f 	move s7, 0
    7778:	ea 00 00 88 	store_32 s7, (s10)
    777c:	45 06 00 f2 	bz s5, 200 <dispose_chunk+0x70c>
    7780:	e2 70 00 a8 	load_32 s7, 28(s2)
    7784:	07 09 00 0b 	shl s8, s7, 2
    7788:	03 01 54 c0 	add_i s8, s3, s8
    778c:	28 c1 04 a8 	load_32 s9, 304(s8)
    7790:	29 01 11 c1 	cmpne_i s9, s9, s2
    7794:	49 00 00 f4 	bnz s9, 8 <dispose_chunk+0x664>
    7798:	0c 00 00 f6 	b 48 <dispose_chunk+0x690>
    779c:	e3 40 00 a8 	load_32 s7, 16(s3)
    77a0:	e7 80 62 c1 	cmpgt_u s7, s7, s5
    77a4:	67 07 00 f4 	bnz s7, 236 <dispose_chunk+0x758>
    77a8:	e5 40 00 a8 	load_32 s7, 16(s5)
    77ac:	e7 00 01 c1 	cmpeq_i s7, s7, s2
    77b0:	07 02 00 f4 	bnz s7, 64 <dispose_chunk+0x6b8>
    77b4:	e0 50 00 0f 	move s7, 20
    77b8:	e5 80 53 c0 	add_i s7, s5, s7
    77bc:	c7 00 00 88 	store_32 s6, (s7)
    77c0:	26 04 00 f2 	bz s6, 132 <dispose_chunk+0x70c>
    77c4:	0f 00 00 f6 	b 60 <dispose_chunk+0x6c8>
    77c8:	08 c1 04 05 	add_i s8, s8, 304
    77cc:	c8 00 00 88 	store_32 s6, (s8)
    77d0:	86 01 00 f4 	bnz s6, 48 <dispose_chunk+0x6c8>
    77d4:	40 04 00 0f 	move s2, 1
    77d8:	a3 10 00 a8 	load_32 s5, 4(s3)
    77dc:	42 80 b3 c0 	shl s2, s2, s7
    77e0:	42 fc ff 03 	xor s2, s2, -1
    77e4:	45 00 11 c0 	and s2, s5, s2
    77e8:	43 10 00 88 	store_32 s2, 4(s3)
    77ec:	16 00 00 f6 	b 88 <dispose_chunk+0x70c>
    77f0:	e0 40 00 0f 	move s7, 16
    77f4:	e5 80 53 c0 	add_i s7, s5, s7
    77f8:	c7 00 00 88 	store_32 s6, (s7)
    77fc:	46 02 00 f2 	bz s6, 72 <dispose_chunk+0x70c>
    7800:	e3 40 00 a8 	load_32 s7, 16(s3)
    7804:	07 01 63 c1 	cmpgt_u s8, s7, s6
    7808:	48 04 00 f4 	bnz s8, 136 <dispose_chunk+0x758>
    780c:	a6 60 00 88 	store_32 s5, 24(s6)
    7810:	a2 40 00 a8 	load_32 s5, 16(s2)
    7814:	a5 00 00 f2 	bz s5, 20 <dispose_chunk+0x6f0>
    7818:	e7 80 62 c1 	cmpgt_u s7, s7, s5
    781c:	a7 03 00 f4 	bnz s7, 116 <dispose_chunk+0x758>
    7820:	a6 40 00 88 	store_32 s5, 16(s6)
    7824:	c5 60 00 88 	store_32 s6, 24(s5)
    7828:	42 50 00 a8 	load_32 s2, 20(s2)
    782c:	c2 00 00 f2 	bz s2, 24 <dispose_chunk+0x70c>
    7830:	a3 40 00 a8 	load_32 s5, 16(s3)
    7834:	a5 00 61 c1 	cmpgt_u s5, s5, s2
    7838:	c5 02 00 f4 	bnz s5, 88 <dispose_chunk+0x758>
    783c:	46 50 00 88 	store_32 s2, 20(s6)
    7840:	c2 60 00 88 	store_32 s6, 24(s2)
    7844:	44 e0 ff 01 	and s2, s4, -8
    7848:	22 80 50 c0 	add_i s1, s2, s1
    784c:	40 80 50 c0 	add_i s2, s0, s1
    7850:	81 04 00 00 	or s4, s1, 1
    7854:	80 10 00 88 	store_32 s4, 4(s0)
    7858:	22 00 00 88 	store_32 s1, (s2)
    785c:	43 50 00 a8 	load_32 s2, 20(s3)
    7860:	40 00 11 c1 	cmpne_i s2, s0, s2
    7864:	82 df ff f5 	bnz s2, -1040 <dispose_chunk+0x31c>
    7868:	23 20 00 88 	store_32 s1, 8(s3)
    786c:	fe f3 00 a8 	load_32 ra, 60(sp)
    7870:	de 03 01 05 	add_i sp, sp, 64
    7874:	1f 00 00 f0 	ret
    7878:	a0 00 00 0f 	move s5, 0
    787c:	84 d8 ff f3 	bz s4, -1264 <dispose_chunk+0x254>
    7880:	92 fe ff f7 	b -1464 <dispose_chunk+0x190>
    7884:	c0 00 00 0f 	move s6, 0
    7888:	e5 fd ff f3 	bz s5, -68 <dispose_chunk+0x70c>
    788c:	bd ff ff f7 	b -268 <dispose_chunk+0x648>
    7890:	01 00 00 f8 	call 4 <abort>

0000000000007894 abort:
    7894:	de 03 ff 05 	add_i sp, sp, -64
    7898:	fe f3 00 88 	store_32 ra, 60(sp)
    789c:	00 00 00 4f 	movehi s0, 0
    78a0:	00 dc 11 00 	or s0, s0, 1143
    78a4:	cb ec ff f9 	call -19668 <puts>
    78a8:	00 00 e0 c3 	break

00000000000078ac abs:
    78ac:	20 7c 00 09 	ashr s1, s0, 31
    78b0:	00 80 50 c0 	add_i s0, s0, s1
    78b4:	00 80 30 c0 	xor s0, s0, s1
    78b8:	1f 00 00 f0 	ret

00000000000078bc atoi:
    78bc:	20 00 f0 c0 	move s1, s0
    78c0:	00 00 00 0f 	move s0, 0
    78c4:	41 00 00 a2 	load_s8 s2, (s1)
    78c8:	c2 01 00 f2 	bz s2, 56 <atoi+0x44>
    78cc:	62 40 ff 05 	add_i s3, s2, -48
    78d0:	63 24 00 16 	cmpgt_u s3, s3, 9
    78d4:	63 01 00 f4 	bnz s3, 44 <atoi+0x44>
    78d8:	00 00 00 0f 	move s0, 0
    78dc:	00 28 00 07 	mull_i s0, s0, 10
    78e0:	02 00 50 c0 	add_i s0, s2, s0
    78e4:	41 04 00 a2 	load_s8 s2, 1(s1)
    78e8:	00 40 ff 05 	add_i s0, s0, -48
    78ec:	a2 00 00 f2 	bz s2, 20 <atoi+0x44>
    78f0:	62 40 ff 05 	add_i s3, s2, -48
    78f4:	21 04 00 05 	add_i s1, s1, 1
    78f8:	63 28 00 18 	cmplt_u s3, s3, 10
    78fc:	03 ff ff f5 	bnz s3, -32 <atoi+0x20>
    7900:	1f 00 00 f0 	ret

0000000000007904 rand:
    7904:	06 00 00 4f 	movehi s0, 6
    7908:	52 c4 41 4f 	movehi s2, 134706
    790c:	61 00 00 4f 	movehi s3, 1
    7910:	20 30 00 00 	or s1, s0, 12
    7914:	42 b4 39 00 	or s2, s2, 3693
    7918:	01 00 00 a8 	load_32 s0, (s1)
    791c:	00 00 71 c0 	mull_i s0, s0, s2
    7920:	43 e4 40 00 	or s2, s3, 4153
    7924:	7f fc 7f 4f 	movehi s3, 262143
    7928:	40 00 51 c0 	add_i s2, s0, s2
    792c:	41 00 00 88 	store_32 s2, (s1)
    7930:	03 fc 7f 00 	or s0, s3, 8191
    7934:	02 00 10 c0 	and s0, s2, s0
    7938:	1f 00 00 f0 	ret

000000000000793c srand:
    793c:	26 00 00 4f 	movehi s1, 6
    7940:	21 30 00 00 	or s1, s1, 12
    7944:	01 00 00 88 	store_32 s0, (s1)
    7948:	1f 00 00 f0 	ret

000000000000794c bsearch:
    794c:	de 03 ff 05 	add_i sp, sp, -64
    7950:	1e f3 00 88 	store_32 s24, 60(sp)
    7954:	3e e3 00 88 	store_32 s25, 56(sp)
    7958:	5e d3 00 88 	store_32 s26, 52(sp)
    795c:	7e c3 00 88 	store_32 s27, 48(sp)
    7960:	fe b3 00 88 	store_32 ra, 44(sp)
    7964:	22 ff ff 05 	add_i s25, s2, -1
    7968:	9e a0 00 88 	store_32 s4, 40(sp)
    796c:	7e 90 00 88 	store_32 s3, 36(sp)
    7970:	3e 80 00 88 	store_32 s1, 32(sp)
    7974:	59 00 00 14 	cmplt_i s2, s25, 0
    7978:	1e 70 00 88 	store_32 s0, 28(sp)
    797c:	c2 03 00 f4 	bnz s2, 120 <bsearch+0xa8>
    7980:	40 03 00 0f 	move s26, 0
    7984:	5e 63 00 88 	store_32 s26, 24(sp)
    7988:	1a 80 5c c0 	add_i s0, s26, s25
    798c:	20 7c 00 0a 	shr s1, s0, 31
    7990:	00 80 50 c0 	add_i s0, s0, s1
    7994:	60 07 00 09 	ashr s27, s0, 1
    7998:	1e 90 00 a8 	load_32 s0, 36(sp)
    799c:	3e 80 00 a8 	load_32 s1, 32(sp)
    79a0:	1b 00 70 c0 	mull_i s0, s27, s0
    79a4:	01 03 50 c0 	add_i s24, s1, s0
    79a8:	1e 70 00 a8 	load_32 s0, 28(sp)
    79ac:	20 00 fc c0 	move s1, s24
    79b0:	5e a0 00 a8 	load_32 s2, 40(sp)
    79b4:	42 00 00 fc 	call s2
    79b8:	00 02 00 f2 	bz s0, 64 <bsearch+0xac>
    79bc:	00 00 00 14 	cmplt_i s0, s0, 0
    79c0:	c0 00 00 f4 	bnz s0, 24 <bsearch+0x8c>
    79c4:	40 00 00 f4 	bnz s0, 8 <bsearch+0x80>
    79c8:	06 00 00 f6 	b 24 <bsearch+0x94>
    79cc:	1a 80 5c c1 	cmple_i s0, s26, s25
    79d0:	c0 fd ff f5 	bnz s0, -72 <bsearch+0x3c>
    79d4:	06 00 00 f6 	b 24 <bsearch+0xa0>
    79d8:	3b ff ff 05 	add_i s25, s27, -1
    79dc:	80 ff ff f5 	bnz s0, -16 <bsearch+0x80>
    79e0:	5b 07 00 05 	add_i s26, s27, 1
    79e4:	1a 80 5c c1 	cmple_i s0, s26, s25
    79e8:	00 fd ff f5 	bnz s0, -96 <bsearch+0x3c>
    79ec:	1e 63 00 a8 	load_32 s24, 24(sp)
    79f0:	02 00 00 f6 	b 8 <bsearch+0xac>
    79f4:	00 03 00 0f 	move s24, 0
    79f8:	00 00 fc c0 	move s0, s24
    79fc:	fe b3 00 a8 	load_32 ra, 44(sp)
    7a00:	7e c3 00 a8 	load_32 s27, 48(sp)
    7a04:	5e d3 00 a8 	load_32 s26, 52(sp)
    7a08:	3e e3 00 a8 	load_32 s25, 56(sp)
    7a0c:	1e f3 00 a8 	load_32 s24, 60(sp)
    7a10:	de 03 01 05 	add_i sp, sp, 64
    7a14:	1f 00 00 f0 	ret

0000000000007a18 memcpy:
    7a18:	c0 00 f0 c0 	move s6, s0
    7a1c:	60 fc 00 01 	and s3, s0, 63
    7a20:	81 fc 00 01 	and s4, s1, 63
    7a24:	a3 00 02 c1 	cmpeq_i s5, s3, s4
    7a28:	45 02 00 f2 	bz s5, 72 <copy_word_check>

0000000000007a2c copy_vector_lead_in:
    7a2c:	80 fc 00 01 	and s4, s0, 63
    7a30:	04 01 00 f2 	bz s4, 32 <copy_vector>
    7a34:	62 05 00 f2 	bz s2, 172 <copy_done>
    7a38:	81 00 00 a0 	load_u8 s4, (s1)
    7a3c:	80 00 00 82 	store_8 s4, (s0)
    7a40:	00 04 00 05 	add_i s0, s0, 1
    7a44:	21 04 00 05 	add_i s1, s1, 1
    7a48:	42 04 00 06 	sub_i s2, s2, 1
    7a4c:	f8 ff ff f7 	b -32 <copy_vector_lead_in>

0000000000007a50 copy_vector:
    7a50:	82 00 01 18 	cmplt_u s4, s2, 64
    7a54:	84 02 00 f4 	bnz s4, 80 <copy_words>
    7a58:	01 00 00 ae 	load_v v0, (s1)
    7a5c:	00 00 00 8e 	store_v v0, (s0)
    7a60:	00 00 01 05 	add_i s0, s0, 64
    7a64:	21 00 01 05 	add_i s1, s1, 64
    7a68:	42 00 01 06 	sub_i s2, s2, 64
    7a6c:	f9 ff ff f7 	b -28 <copy_vector>

0000000000007a70 copy_word_check:
    7a70:	60 0c 00 01 	and s3, s0, 3
    7a74:	81 0c 00 01 	and s4, s1, 3
    7a78:	a3 00 02 c1 	cmpeq_i s5, s3, s4
    7a7c:	45 02 00 f2 	bz s5, 72 <copy_remain_bytes>

0000000000007a80 copy_word_lead_in:
    7a80:	80 0c 00 01 	and s4, s0, 3
    7a84:	04 01 00 f2 	bz s4, 32 <copy_words>
    7a88:	c2 02 00 f2 	bz s2, 88 <copy_done>
    7a8c:	81 00 00 a0 	load_u8 s4, (s1)
    7a90:	80 00 00 82 	store_8 s4, (s0)
    7a94:	00 04 00 05 	add_i s0, s0, 1
    7a98:	21 04 00 05 	add_i s1, s1, 1
    7a9c:	42 04 00 06 	sub_i s2, s2, 1
    7aa0:	f8 ff ff f7 	b -32 <copy_word_lead_in>

0000000000007aa4 copy_words:
    7aa4:	82 10 00 18 	cmplt_u s4, s2, 4
    7aa8:	e4 00 00 f4 	bnz s4, 28 <copy_remain_bytes>
    7aac:	81 00 00 a8 	load_32 s4, (s1)
    7ab0:	80 00 00 88 	store_32 s4, (s0)
    7ab4:	00 10 00 05 	add_i s0, s0, 4
    7ab8:	21 10 00 05 	add_i s1, s1, 4
    7abc:	42 10 00 06 	sub_i s2, s2, 4
    7ac0:	f9 ff ff f7 	b -28 <copy_words>

0000000000007ac4 copy_remain_bytes:
    7ac4:	e2 00 00 f2 	bz s2, 28 <copy_done>
    7ac8:	81 00 00 a0 	load_u8 s4, (s1)
    7acc:	80 00 00 82 	store_8 s4, (s0)
    7ad0:	00 04 00 05 	add_i s0, s0, 1
    7ad4:	21 04 00 05 	add_i s1, s1, 1
    7ad8:	42 04 00 06 	sub_i s2, s2, 1
    7adc:	fa ff ff f7 	b -24 <copy_remain_bytes>

0000000000007ae0 copy_done:
    7ae0:	00 00 f3 c0 	move s0, s6
    7ae4:	1f 00 00 f0 	ret

0000000000007ae8 memset:
    7ae8:	60 fc 00 01 	and s3, s0, 63
    7aec:	81 fc 03 01 	and s4, s1, 255
    7af0:	03 04 00 f4 	bnz s3, 128 <memset+0x88>
    7af4:	62 04 01 18 	cmplt_u s3, s2, 65
    7af8:	c3 03 00 f4 	bnz s3, 120 <memset+0x88>
    7afc:	61 60 00 0b 	shl s3, s1, 24
    7b00:	a4 20 00 0b 	shl s5, s4, 8
    7b04:	63 00 02 c0 	or s3, s3, s4
    7b08:	63 80 02 c0 	or s3, s3, s5
    7b0c:	a4 40 00 0b 	shl s5, s4, 16
    7b10:	63 80 02 c0 	or s3, s3, s5
    7b14:	00 80 f1 c4 	move v0, s3
    7b18:	60 00 f0 c0 	move s3, s0
    7b1c:	42 00 ff 05 	add_i s2, s2, -64
    7b20:	03 00 00 8e 	store_v v0, (s3)
    7b24:	63 00 01 05 	add_i s3, s3, 64
    7b28:	a2 00 01 16 	cmpgt_u s5, s2, 64
    7b2c:	85 ff ff f5 	bnz s5, -16 <memset+0x34>
    7b30:	a3 0c 00 01 	and s5, s3, 3
    7b34:	65 02 00 f4 	bnz s5, 76 <memset+0x98>
    7b38:	a2 14 00 18 	cmplt_u s5, s2, 5
    7b3c:	25 02 00 f4 	bnz s5, 68 <memset+0x98>
    7b40:	a1 60 00 0b 	shl s5, s1, 24
    7b44:	c4 20 00 0b 	shl s6, s4, 8
    7b48:	a5 00 02 c0 	or s5, s5, s4
    7b4c:	84 40 00 0b 	shl s4, s4, 16
    7b50:	a5 00 03 c0 	or s5, s5, s6
    7b54:	85 00 02 c0 	or s4, s5, s4
    7b58:	42 f0 ff 05 	add_i s2, s2, -4
    7b5c:	83 00 00 88 	store_32 s4, (s3)
    7b60:	63 10 00 05 	add_i s3, s3, 4
    7b64:	a2 10 00 16 	cmpgt_u s5, s2, 4
    7b68:	85 ff ff f5 	bnz s5, -16 <memset+0x70>
    7b6c:	06 00 00 f6 	b 24 <memset+0x9c>
    7b70:	60 00 f0 c0 	move s3, s0
    7b74:	a3 0c 00 01 	and s5, s3, 3
    7b78:	45 00 00 f4 	bnz s5, 8 <memset+0x98>
    7b7c:	ef ff ff f7 	b -68 <memset+0x50>
    7b80:	c2 00 00 f2 	bz s2, 24 <memset+0xb0>
    7b84:	83 04 00 05 	add_i s4, s3, 1
    7b88:	23 00 00 82 	store_8 s1, (s3)
    7b8c:	42 fc ff 05 	add_i s2, s2, -1
    7b90:	60 00 f2 c0 	move s3, s4
    7b94:	82 ff ff f5 	bnz s2, -16 <memset+0x9c>
    7b98:	1f 00 00 f0 	ret

0000000000007b9c vfprintf:
    7b9c:	de 03 fd 05 	add_i sp, sp, -192
    7ba0:	1e f3 02 88 	store_32 s24, 188(sp)
    7ba4:	3e e3 02 88 	store_32 s25, 184(sp)
    7ba8:	5e d3 02 88 	store_32 s26, 180(sp)
    7bac:	7e c3 02 88 	store_32 s27, 176(sp)
    7bb0:	fe b3 02 88 	store_32 ra, 172(sp)
    7bb4:	40 83 f0 c0 	move s26, s1
    7bb8:	5e a0 02 88 	store_32 s2, 168(sp)
    7bbc:	3a 00 00 a0 	load_u8 s1, (s26)
    7bc0:	60 03 f0 c0 	move s27, s0
    7bc4:	61 3f 00 f2 	bz s1, 2028 <vfprintf+0x814>
    7bc8:	00 00 00 4f 	movehi s0, 0
    7bcc:	40 04 00 0f 	move s2, 1
    7bd0:	5e c0 00 88 	store_32 s2, 48(sp)
    7bd4:	40 94 00 0f 	move s2, 37
    7bd8:	5e a0 00 88 	store_32 s2, 40(sp)
    7bdc:	00 23 14 00 	or s24, s0, 1288
    7be0:	00 00 00 4f 	movehi s0, 0
    7be4:	80 00 00 0f 	move s4, 0
    7be8:	60 00 08 00 	or s3, s0, 512
    7bec:	00 14 00 0f 	move s0, 5
    7bf0:	1e d0 00 88 	store_32 s0, 52(sp)
    7bf4:	00 08 00 0f 	move s0, 2
    7bf8:	1e b0 00 88 	store_32 s0, 44(sp)
    7bfc:	00 10 00 0f 	move s0, 4
    7c00:	1e f0 00 88 	store_32 s0, 60(sp)
    7c04:	00 0c 00 0f 	move s0, 3
    7c08:	1e 90 00 88 	store_32 s0, 36(sp)
    7c0c:	9e 10 01 88 	store_32 s4, 68(sp)
    7c10:	9e 20 01 88 	store_32 s4, 72(sp)
    7c14:	20 03 f2 c0 	move s25, s4
    7c18:	9e 30 01 88 	store_32 s4, 76(sp)
    7c1c:	00 00 f2 c0 	move s0, s4
    7c20:	7e 63 01 88 	store_32 s27, 88(sp)
    7c24:	9e 40 01 88 	store_32 s4, 80(sp)
    7c28:	1e 03 01 88 	store_32 s24, 64(sp)
    7c2c:	7e 50 01 88 	store_32 s3, 84(sp)
    7c30:	46 01 00 f6 	b 1304 <vfprintf+0x5ac>
    7c34:	1e f0 00 a8 	load_32 s0, 60(sp)
    7c38:	3a 00 00 a0 	load_u8 s1, (s26)
    7c3c:	61 28 00 f4 	bnz s1, 1292 <vfprintf+0x5ac>
    7c40:	dc 01 00 f6 	b 1904 <vfprintf+0x814>
    7c44:	1e d0 00 a8 	load_32 s0, 52(sp)
    7c48:	1e 03 01 a8 	load_32 s24, 64(sp)
    7c4c:	7e 50 01 a8 	load_32 s3, 84(sp)
    7c50:	3a 00 00 a0 	load_u8 s1, (s26)
    7c54:	a1 27 00 f4 	bnz s1, 1268 <vfprintf+0x5ac>
    7c58:	d6 01 00 f6 	b 1880 <vfprintf+0x814>
    7c5c:	1e b0 00 a8 	load_32 s0, 44(sp)
    7c60:	60 80 fc c0 	move s3, s25
    7c64:	3e 83 01 a8 	load_32 s25, 96(sp)
    7c68:	3a 00 00 a0 	load_u8 s1, (s26)
    7c6c:	e1 26 00 f4 	bnz s1, 1244 <vfprintf+0x5ac>
    7c70:	d0 01 00 f6 	b 1856 <vfprintf+0x814>
    7c74:	3e 83 01 88 	store_32 s25, 96(sp)
    7c78:	20 00 00 4f 	movehi s1, 0
    7c7c:	1e a0 02 a8 	load_32 s0, 168(sp)
    7c80:	21 00 05 00 	or s1, s1, 320
    7c84:	00 0c 00 05 	add_i s0, s0, 3
    7c88:	00 f0 ff 01 	and s0, s0, -4
    7c8c:	40 10 00 05 	add_i s2, s0, 4
    7c90:	5e a0 02 88 	store_32 s2, 168(sp)
    7c94:	40 00 00 a8 	load_32 s2, (s0)
    7c98:	3e 90 01 88 	store_32 s1, 100(sp)
    7c9c:	01 00 00 a8 	load_32 s0, (s1)
    7ca0:	27 00 00 4f 	movehi s1, 7
    7ca4:	21 ff 7f 00 	or s25, s1, 8191
    7ca8:	02 00 e0 c2 	cmplt_f s0, s2, s0
    7cac:	00 80 1c c1 	cmpne_i s0, s0, s25
    7cb0:	00 01 00 f4 	bnz s0, 32 <vfprintf+0x134>
    7cb4:	20 80 fd c0 	move s1, s27
    7cb8:	5e 70 01 88 	store_32 s2, 92(sp)
    7cbc:	00 b4 00 0f 	move s0, 45
    7cc0:	29 eb ff f9 	call -21340 <fputc>
    7cc4:	5e 70 01 a8 	load_32 s2, 92(sp)
    7cc8:	00 00 80 4f 	movehi s0, 262144
    7ccc:	42 00 30 c0 	xor s2, s2, s0
    7cd0:	20 00 b1 c1 	ftoi s1, s2
    7cd4:	5e e3 00 88 	store_32 s26, 56(sp)
    7cd8:	5e 70 01 88 	store_32 s2, 92(sp)
    7cdc:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x148>
    7ce0:	ec 00 00 f6 	b 944 <vfprintf+0x4f4>
    7ce4:	3e 80 00 88 	store_32 s1, 32(sp)
    7ce8:	01 04 00 14 	cmplt_i s0, s1, 1
    7cec:	00 83 fd c0 	move s24, s27
    7cf0:	60 03 00 f4 	bnz s0, 108 <vfprintf+0x1c0>
    7cf4:	3e 80 00 a8 	load_32 s1, 32(sp)
    7cf8:	60 53 00 0f 	move s27, 20
    7cfc:	46 cc cc 4f 	movehi s2, 419430
    7d00:	5e a3 01 05 	add_i s26, sp, 104
    7d04:	7b ff ff 05 	add_i s27, s27, -1
    7d08:	42 34 33 00 	or s2, s2, 3277
    7d0c:	41 00 81 c0 	mulh_u s2, s1, s2
    7d10:	9a 80 5d c0 	add_i s4, s26, s27
    7d14:	a1 24 00 16 	cmpgt_u s5, s1, 9
    7d18:	42 0c 00 0a 	shr s2, s2, 3
    7d1c:	62 28 00 07 	mull_i s3, s2, 10
    7d20:	61 80 61 c0 	sub_i s3, s1, s3
    7d24:	63 c0 00 00 	or s3, s3, 48
    7d28:	64 00 00 82 	store_8 s3, (s4)
    7d2c:	20 00 f1 c0 	move s1, s2
    7d30:	65 fe ff f5 	bnz s5, -52 <vfprintf+0x160>
    7d34:	1e 63 01 a8 	load_32 s24, 88(sp)
    7d38:	3b 4c 00 16 	cmpgt_u s1, s27, 19
    7d3c:	01 01 00 f4 	bnz s1, 32 <vfprintf+0x1c0>
    7d40:	3a 80 5d c0 	add_i s1, s26, s27
    7d44:	7b 07 00 05 	add_i s27, s27, 1
    7d48:	01 00 00 a2 	load_s8 s0, (s1)
    7d4c:	20 00 fc c0 	move s1, s24
    7d50:	05 eb ff f9 	call -21484 <fputc>
    7d54:	3b 50 00 18 	cmplt_u s1, s27, 20
    7d58:	41 ff ff f5 	bnz s1, -24 <vfprintf+0x1a4>
    7d5c:	60 03 fc c0 	move s27, s24
    7d60:	1e 03 01 a8 	load_32 s24, 64(sp)
    7d64:	1e 80 00 a8 	load_32 s0, 32(sp)
    7d68:	cf 00 00 f6 	b 828 <vfprintf+0x508>
    7d6c:	60 2b 00 0f 	move s27, 10
    7d70:	3e 20 01 a8 	load_32 s1, 72(sp)
    7d74:	3e 83 01 88 	store_32 s25, 96(sp)
    7d78:	21 40 00 01 	and s1, s1, 16
    7d7c:	a1 2a 00 f2 	bz s1, 1364 <vfprintf+0x734>
    7d80:	1e a0 02 a8 	load_32 s0, 168(sp)
    7d84:	00 0c 00 05 	add_i s0, s0, 3
    7d88:	00 f0 ff 01 	and s0, s0, -4
    7d8c:	20 10 00 05 	add_i s1, s0, 4
    7d90:	3e a0 02 88 	store_32 s1, 168(sp)
    7d94:	00 03 00 a8 	load_32 s24, (s0)
    7d98:	20 20 00 05 	add_i s1, s0, 8
    7d9c:	3e a0 02 88 	store_32 s1, 168(sp)
    7da0:	20 13 00 a8 	load_32 s25, 4(s0)
    7da4:	1a 00 00 a0 	load_u8 s0, (s26)
    7da8:	7e 90 01 88 	store_32 s3, 100(sp)
    7dac:	20 a4 01 10 	cmpeq_i s1, s0, 105
    7db0:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x21c>
    7db4:	56 01 00 f6 	b 1368 <vfprintf+0x770>
    7db8:	19 fc ff 12 	cmpgt_i s0, s25, -1
    7dbc:	a0 0a 00 f4 	bnz s0, 340 <vfprintf+0x374>
    7dc0:	38 00 00 11 	cmpne_i s1, s24, 0
    7dc4:	00 00 00 0f 	move s0, 0
    7dc8:	61 09 00 f4 	bnz s1, 300 <vfprintf+0x358>
    7dcc:	20 00 f0 c0 	move s1, s0
    7dd0:	4a 00 00 f6 	b 296 <vfprintf+0x35c>
    7dd4:	1e a0 02 a8 	load_32 s0, 168(sp)
    7dd8:	20 03 00 0f 	move s25, 0
    7ddc:	00 0c 00 05 	add_i s0, s0, 3
    7de0:	00 f0 ff 01 	and s0, s0, -4
    7de4:	20 10 00 05 	add_i s1, s0, 4
    7de8:	3e a0 02 88 	store_32 s1, 168(sp)
    7dec:	00 03 00 a8 	load_32 s24, (s0)
    7df0:	1a 00 00 a0 	load_u8 s0, (s26)
    7df4:	7e 90 01 88 	store_32 s3, 100(sp)
    7df8:	20 a4 01 10 	cmpeq_i s1, s0, 105
    7dfc:	e1 fd ff f5 	bnz s1, -68 <vfprintf+0x21c>
    7e00:	43 01 00 f6 	b 1292 <vfprintf+0x770>
    7e04:	20 23 00 0f 	move s25, 8
    7e08:	3e 13 01 88 	store_32 s25, 68(sp)
    7e0c:	1f 01 00 f6 	b 1148 <vfprintf+0x6ec>
    7e10:	1e a0 02 a8 	load_32 s0, 168(sp)
    7e14:	00 0c 00 05 	add_i s0, s0, 3
    7e18:	00 f0 ff 01 	and s0, s0, -4
    7e1c:	20 10 00 05 	add_i s1, s0, 4
    7e20:	3e a0 02 88 	store_32 s1, 168(sp)
    7e24:	00 00 00 a8 	load_32 s0, (s0)
    7e28:	20 80 fd c0 	move s1, s27
    7e2c:	ce ea ff f9 	call -21704 <fputc>
    7e30:	7e 50 01 a8 	load_32 s3, 84(sp)
    7e34:	5a 07 00 05 	add_i s26, s26, 1
    7e38:	1e 40 01 a8 	load_32 s0, 80(sp)
    7e3c:	3a 00 00 a0 	load_u8 s1, (s26)
    7e40:	41 18 00 f4 	bnz s1, 776 <vfprintf+0x5ac>
    7e44:	5b 01 00 f6 	b 1388 <vfprintf+0x814>
    7e48:	3e 83 01 88 	store_32 s25, 96(sp)
    7e4c:	60 03 fd c0 	move s27, s26
    7e50:	1e a0 02 a8 	load_32 s0, 168(sp)
    7e54:	00 0c 00 05 	add_i s0, s0, 3
    7e58:	00 f0 ff 01 	and s0, s0, -4
    7e5c:	20 10 00 05 	add_i s1, s0, 4
    7e60:	3e a0 02 88 	store_32 s1, 168(sp)
    7e64:	3e 33 01 a8 	load_32 s25, 76(sp)
    7e68:	40 03 00 a8 	load_32 s26, (s0)
    7e6c:	39 00 00 10 	cmpeq_i s1, s25, 0
    7e70:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x2dc>
    7e74:	03 00 00 f6 	b 12 <vfprintf+0x2e4>
    7e78:	1f fc 7f 4f 	movehi s0, 262143
    7e7c:	20 ff 7f 00 	or s25, s0, 8191
    7e80:	00 03 00 0f 	move s24, 0
    7e84:	19 04 00 14 	cmplt_i s0, s25, 1
    7e88:	40 01 00 f4 	bnz s0, 40 <vfprintf+0x314>
    7e8c:	1a 00 00 a2 	load_s8 s0, (s26)
    7e90:	00 01 00 f2 	bz s0, 32 <vfprintf+0x314>
    7e94:	3e 60 01 a8 	load_32 s1, 88(sp)
    7e98:	5a 07 00 05 	add_i s26, s26, 1
    7e9c:	b2 ea ff f9 	call -21816 <fputc>
    7ea0:	18 07 00 05 	add_i s24, s24, 1
    7ea4:	7e 50 01 a8 	load_32 s3, 84(sp)
    7ea8:	18 80 4c c1 	cmplt_i s0, s24, s25
    7eac:	00 ff ff f5 	bnz s0, -32 <vfprintf+0x2f0>
    7eb0:	5e 83 01 a8 	load_32 s26, 96(sp)
    7eb4:	1a 80 4c c1 	cmplt_i s0, s26, s25
    7eb8:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x324>
    7ebc:	40 83 fc c0 	move s26, s25
    7ec0:	18 00 3d c1 	cmpge_i s0, s24, s26
    7ec4:	a0 13 00 f4 	bnz s0, 628 <vfprintf+0x59c>
    7ec8:	3e 63 01 a8 	load_32 s25, 88(sp)
    7ecc:	00 80 00 0f 	move s0, 32
    7ed0:	20 80 fc c0 	move s1, s25
    7ed4:	a4 ea ff f9 	call -21872 <fputc>
    7ed8:	18 07 00 05 	add_i s24, s24, 1
    7edc:	18 00 4d c1 	cmplt_i s0, s24, s26
    7ee0:	60 ff ff f5 	bnz s0, -20 <vfprintf+0x330>
    7ee4:	40 83 fd c0 	move s26, s27
    7ee8:	60 83 fc c0 	move s27, s25
    7eec:	1e 03 01 a8 	load_32 s24, 64(sp)
    7ef0:	8b 00 00 f6 	b 556 <vfprintf+0x580>
    7ef4:	20 04 00 0f 	move s1, 1
    7ef8:	40 80 6c c0 	sub_i s2, s0, s25
    7efc:	00 03 6c c0 	sub_i s24, s0, s24
    7f00:	00 b4 00 0f 	move s0, 45
    7f04:	22 83 60 c0 	sub_i s25, s2, s1
    7f08:	3e 60 01 a8 	load_32 s1, 88(sp)
    7f0c:	96 ea ff f9 	call -21928 <fputc>
    7f10:	00 00 fc c0 	move s0, s24
    7f14:	20 80 fc c0 	move s1, s25
    7f18:	40 80 fd c0 	move s2, s27
    7f1c:	7e 90 01 a8 	load_32 s3, 100(sp)
    7f20:	9a 09 00 f8 	call 9832 <__umoddi3>
    7f24:	20 00 00 4f 	movehi s1, 0
    7f28:	5e 90 01 a8 	load_32 s2, 100(sp)
    7f2c:	21 98 11 00 	or s1, s1, 1126
    7f30:	3e 70 01 88 	store_32 s1, 92(sp)
    7f34:	01 00 50 c0 	add_i s0, s1, s0
    7f38:	22 80 0c c1 	cmpeq_i s1, s2, s25
    7f3c:	00 00 00 a0 	load_u8 s0, (s0)
    7f40:	1e 9c 02 82 	store_8 s0, 167(sp)
    7f44:	c1 00 00 f4 	bnz s1, 24 <vfprintf+0x3c0>
    7f48:	02 80 6c c1 	cmpgt_u s0, s2, s25
    7f4c:	5e e3 00 88 	store_32 s26, 56(sp)
    7f50:	40 ff 00 0f 	move s26, 63
    7f54:	20 04 00 f4 	bnz s0, 132 <vfprintf+0x43c>
    7f58:	05 00 00 f6 	b 20 <vfprintf+0x3d0>
    7f5c:	1b 00 6c c1 	cmpgt_u s0, s27, s24
    7f60:	5e e3 00 88 	store_32 s26, 56(sp)
    7f64:	40 ff 00 0f 	move s26, 63
    7f68:	80 03 00 f4 	bnz s0, 112 <vfprintf+0x43c>
    7f6c:	00 00 fc c0 	move s0, s24
    7f70:	20 80 fc c0 	move s1, s25
    7f74:	40 80 fd c0 	move s2, s27
    7f78:	7e 90 01 a8 	load_32 s3, 100(sp)
    7f7c:	d1 06 00 f8 	call 6980 <__udivdi3>
    7f80:	00 03 f0 c0 	move s24, s0
    7f84:	20 83 f0 c0 	move s25, s1
    7f88:	40 80 fd c0 	move s2, s27
    7f8c:	7e 90 01 a8 	load_32 s3, 100(sp)
    7f90:	5a ff ff 05 	add_i s26, s26, -1
    7f94:	7d 09 00 f8 	call 9716 <__umoddi3>
    7f98:	7e 90 01 a8 	load_32 s3, 100(sp)
    7f9c:	3e a0 01 05 	add_i s1, sp, 104
    7fa0:	5e 70 01 a8 	load_32 s2, 92(sp)
    7fa4:	21 00 5d c0 	add_i s1, s1, s26
    7fa8:	02 00 50 c0 	add_i s0, s2, s0
    7fac:	43 80 0c c1 	cmpeq_i s2, s3, s25
    7fb0:	00 00 00 a0 	load_u8 s0, (s0)
    7fb4:	01 00 00 82 	store_8 s0, (s1)
    7fb8:	a2 00 00 f4 	bnz s2, 20 <vfprintf+0x430>
    7fbc:	03 80 6c c1 	cmpgt_u s0, s3, s25
    7fc0:	c0 00 00 f4 	bnz s0, 24 <vfprintf+0x43c>
    7fc4:	5a fd ff f5 	bnz s26, -88 <vfprintf+0x3d0>
    7fc8:	04 00 00 f6 	b 16 <vfprintf+0x43c>
    7fcc:	1b 00 6c c1 	cmpgt_u s0, s27, s24
    7fd0:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x43c>
    7fd4:	fc ff ff f7 	b -16 <vfprintf+0x428>
    7fd8:	1e 10 01 a8 	load_32 s0, 68(sp)
    7fdc:	00 20 00 01 	and s0, s0, 8
    7fe0:	00 00 00 10 	cmpeq_i s0, s0, 0
    7fe4:	60 00 00 f4 	bnz s0, 12 <vfprintf+0x454>
    7fe8:	00 c0 00 0f 	move s0, 48
    7fec:	02 00 00 f6 	b 8 <vfprintf+0x458>
    7ff0:	00 80 00 0f 	move s0, 32
    7ff4:	40 00 01 0f 	move s2, 64
    7ff8:	7e 63 01 a8 	load_32 s27, 88(sp)
    7ffc:	22 03 6d c0 	sub_i s25, s2, s26
    8000:	5e 80 01 a8 	load_32 s2, 96(sp)
    8004:	59 00 31 c1 	cmpge_i s2, s25, s2
    8008:	82 01 00 f4 	bnz s2, 48 <vfprintf+0x49c>
    800c:	00 83 fd c0 	move s24, s27
    8010:	20 00 fc c0 	move s1, s24
    8014:	60 03 f0 c0 	move s27, s0
    8018:	53 ea ff f9 	call -22196 <fputc>
    801c:	00 80 fd c0 	move s0, s27
    8020:	60 03 fc c0 	move s27, s24
    8024:	5e 80 01 a8 	load_32 s2, 96(sp)
    8028:	39 07 00 05 	add_i s25, s25, 1
    802c:	59 00 41 c1 	cmplt_i s2, s25, s2
    8030:	e2 fe ff f5 	bnz s2, -36 <vfprintf+0x470>
    8034:	3e 83 01 a8 	load_32 s25, 96(sp)
    8038:	1e 33 01 a8 	load_32 s24, 76(sp)
    803c:	19 00 3c c1 	cmpge_i s0, s25, s24
    8040:	e0 00 00 f4 	bnz s0, 28 <vfprintf+0x4c0>
    8044:	00 c0 00 0f 	move s0, 48
    8048:	20 80 fd c0 	move s1, s27
    804c:	46 ea ff f9 	call -22248 <fputc>
    8050:	39 07 00 05 	add_i s25, s25, 1
    8054:	19 00 4c c1 	cmplt_i s0, s25, s24
    8058:	60 ff ff f5 	bnz s0, -20 <vfprintf+0x4a8>
    805c:	1e 03 01 a8 	load_32 s24, 64(sp)
    8060:	1a fc 00 12 	cmpgt_i s0, s26, 63
    8064:	20 01 00 f4 	bnz s0, 36 <vfprintf+0x4ec>
    8068:	1e a0 01 05 	add_i s0, sp, 104
    806c:	00 00 5d c0 	add_i s0, s0, s26
    8070:	5a 07 00 05 	add_i s26, s26, 1
    8074:	00 00 00 a2 	load_s8 s0, (s0)
    8078:	20 80 fd c0 	move s1, s27
    807c:	3a ea ff f9 	call -22296 <fputc>
    8080:	1a 00 01 18 	cmplt_u s0, s26, 64
    8084:	20 ff ff f5 	bnz s0, -28 <vfprintf+0x4cc>
    8088:	5e e3 00 a8 	load_32 s26, 56(sp)
    808c:	24 00 00 f6 	b 144 <vfprintf+0x580>
    8090:	40 83 f0 c0 	move s26, s1
    8094:	00 c0 00 0f 	move s0, 48
    8098:	20 80 fd c0 	move s1, s27
    809c:	32 ea ff f9 	call -22328 <fputc>
    80a0:	00 00 fd c0 	move s0, s26
    80a4:	40 03 a0 c2 	itof s26, s0
    80a8:	00 b8 00 0f 	move s0, 46
    80ac:	20 80 fd c0 	move s1, s27
    80b0:	2d ea ff f9 	call -22348 <fputc>
    80b4:	7e 33 01 a8 	load_32 s27, 76(sp)
    80b8:	1b 00 00 12 	cmpgt_i s0, s27, 0
    80bc:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x528>
    80c0:	60 1f 00 0f 	move s27, 7
    80c4:	1e 70 01 a8 	load_32 s0, 92(sp)
    80c8:	40 03 1d c2 	sub_f s26, s0, s26
    80cc:	00 00 00 4f 	movehi s0, 0
    80d0:	00 40 05 00 	or s0, s0, 336
    80d4:	00 00 00 a8 	load_32 s0, (s0)
    80d8:	1a 00 20 c2 	mul_f s0, s26, s0
    80dc:	20 00 b0 c1 	ftoi s1, s0
    80e0:	40 80 a0 c2 	itof s2, s1
    80e4:	40 03 11 c2 	sub_f s26, s0, s2
    80e8:	01 c0 00 05 	add_i s0, s1, 48
    80ec:	3e 60 01 a8 	load_32 s1, 88(sp)
    80f0:	1d ea ff f9 	call -22412 <fputc>
    80f4:	1e 90 01 a8 	load_32 s0, 100(sp)
    80f8:	00 00 00 a8 	load_32 s0, (s0)
    80fc:	1a 00 c0 c2 	cmpgt_f s0, s26, s0
    8100:	00 80 1c c1 	cmpne_i s0, s0, s25
    8104:	80 00 00 f4 	bnz s0, 16 <vfprintf+0x578>
    8108:	1b 00 00 12 	cmpgt_i s0, s27, 0
    810c:	7b ff ff 05 	add_i s27, s27, -1
    8110:	e0 fd ff f5 	bnz s0, -68 <vfprintf+0x530>
    8114:	5e e3 00 a8 	load_32 s26, 56(sp)
    8118:	7e 63 01 a8 	load_32 s27, 88(sp)
    811c:	7e 50 01 a8 	load_32 s3, 84(sp)
    8120:	3e 83 01 a8 	load_32 s25, 96(sp)
    8124:	5a 07 00 05 	add_i s26, s26, 1
    8128:	1e 40 01 a8 	load_32 s0, 80(sp)
    812c:	3a 00 00 a0 	load_u8 s1, (s26)
    8130:	c1 00 00 f4 	bnz s1, 24 <vfprintf+0x5ac>
    8134:	9f 00 00 f6 	b 636 <vfprintf+0x814>
    8138:	40 83 fd c0 	move s26, s27
    813c:	7e 63 01 a8 	load_32 s27, 88(sp)
    8140:	1e 03 01 a8 	load_32 s24, 64(sp)
    8144:	f7 ff ff f7 	b -36 <vfprintf+0x584>
    8148:	40 14 00 16 	cmpgt_u s2, s0, 5
    814c:	e2 12 00 f4 	bnz s2, 604 <vfprintf+0x80c>
    8150:	00 08 00 0b 	shl s0, s0, 2
    8154:	00 00 5c c0 	add_i s0, s0, s24
    8158:	00 00 00 a8 	load_32 s0, (s0)
    815c:	00 00 00 f0 	b s0
    8160:	01 fc 03 01 	and s0, s1, 255
    8164:	5a 07 00 05 	add_i s26, s26, 1
    8168:	00 94 00 10 	cmpeq_i s0, s0, 37
    816c:	40 00 00 f4 	bnz s0, 8 <vfprintf+0x5d8>
    8170:	6a 00 00 f6 	b 424 <vfprintf+0x77c>
    8174:	1e c0 00 a8 	load_32 s0, 48(sp)
    8178:	3e 40 01 a8 	load_32 s1, 80(sp)
    817c:	3e 30 01 88 	store_32 s1, 76(sp)
    8180:	20 83 f0 c0 	move s25, s1
    8184:	3e 20 01 88 	store_32 s1, 72(sp)
    8188:	3e 10 01 88 	store_32 s1, 68(sp)
    818c:	3a 00 00 a0 	load_u8 s1, (s26)
    8190:	c1 fd ff f5 	bnz s1, -72 <vfprintf+0x5ac>
    8194:	87 00 00 f6 	b 540 <vfprintf+0x814>
    8198:	01 fc 03 01 	and s0, s1, 255
    819c:	00 94 00 11 	cmpne_i s0, s0, 37
    81a0:	c0 0c 00 f4 	bnz s0, 408 <vfprintf+0x79c>
    81a4:	5a 07 00 05 	add_i s26, s26, 1
    81a8:	1e a0 00 a8 	load_32 s0, 40(sp)
    81ac:	5c 00 00 f6 	b 368 <vfprintf+0x780>
    81b0:	00 80 d0 c1 	sext_8 s0, s1
    81b4:	00 40 ff 05 	add_i s0, s0, -48
    81b8:	40 24 00 16 	cmpgt_u s2, s0, 9
    81bc:	62 0e 00 f4 	bnz s2, 460 <vfprintf+0x7ec>
    81c0:	39 28 00 07 	mull_i s1, s25, 10
    81c4:	20 83 50 c0 	add_i s25, s0, s1
    81c8:	1e b0 00 a8 	load_32 s0, 44(sp)
    81cc:	5a 07 00 05 	add_i s26, s26, 1
    81d0:	3a 00 00 a0 	load_u8 s1, (s26)
    81d4:	a1 fb ff f5 	bnz s1, -140 <vfprintf+0x5ac>
    81d8:	76 00 00 f6 	b 472 <vfprintf+0x814>
    81dc:	00 80 d0 c1 	sext_8 s0, s1
    81e0:	00 40 ff 05 	add_i s0, s0, -48
    81e4:	20 24 00 16 	cmpgt_u s1, s0, 9
    81e8:	61 d2 ff f5 	bnz s1, -1460 <vfprintf+0x98>
    81ec:	3e 30 01 a8 	load_32 s1, 76(sp)
    81f0:	5a 07 00 05 	add_i s26, s26, 1
    81f4:	21 28 00 07 	mull_i s1, s1, 10
    81f8:	00 80 50 c0 	add_i s0, s0, s1
    81fc:	1e 30 01 88 	store_32 s0, 76(sp)
    8200:	00 0c 00 0f 	move s0, 3
    8204:	3a 00 00 a0 	load_u8 s1, (s26)
    8208:	01 fa ff f5 	bnz s1, -192 <vfprintf+0x5ac>
    820c:	69 00 00 f6 	b 420 <vfprintf+0x814>
    8210:	00 00 00 4f 	movehi s0, 0
    8214:	20 80 d0 c1 	sext_8 s1, s1
    8218:	40 20 00 0f 	move s2, 8
    821c:	00 e3 07 00 	or s24, s0, 504
    8220:	00 00 fc c0 	move s0, s24
    8224:	26 01 00 f8 	call 1176 <memchr>
    8228:	e0 d0 ff f3 	bz s0, -1508 <vfprintf+0xa8>
    822c:	20 04 00 0f 	move s1, 1
    8230:	00 00 6c c0 	sub_i s0, s0, s24
    8234:	5a 07 00 05 	add_i s26, s26, 1
    8238:	01 00 b0 c0 	shl s0, s1, s0
    823c:	3e 20 01 a8 	load_32 s1, 72(sp)
    8240:	20 80 00 c0 	or s1, s0, s1
    8244:	3e 20 01 88 	store_32 s1, 72(sp)
    8248:	1e f0 00 a8 	load_32 s0, 60(sp)
    824c:	1e 03 01 a8 	load_32 s24, 64(sp)
    8250:	7e 50 01 a8 	load_32 s3, 84(sp)
    8254:	3a 00 00 a0 	load_u8 s1, (s26)
    8258:	81 f7 ff f5 	bnz s1, -272 <vfprintf+0x5ac>
    825c:	55 00 00 f6 	b 340 <vfprintf+0x814>
    8260:	00 80 d0 c1 	sext_8 s0, s1
    8264:	00 a0 fe 05 	add_i s0, s0, -88
    8268:	40 80 00 16 	cmpgt_u s2, s0, 32
    826c:	c2 f5 ff f5 	bnz s2, -328 <vfprintf+0x588>
    8270:	40 00 00 4f 	movehi s2, 0
    8274:	00 08 00 0b 	shl s0, s0, 2
    8278:	42 80 14 00 	or s2, s2, 1312
    827c:	00 00 51 c0 	add_i s0, s0, s2
    8280:	00 00 00 a8 	load_32 s0, (s0)
    8284:	00 00 00 f0 	b s0
    8288:	01 fc 03 01 	and s0, s1, 255
    828c:	60 00 00 0f 	move s3, 0
    8290:	20 a0 fe 05 	add_i s1, s0, -88
    8294:	41 80 00 16 	cmpgt_u s2, s1, 32
    8298:	a2 d6 ff f5 	bnz s2, -1324 <vfprintf+0x1d0>
    829c:	40 00 00 4f 	movehi s2, 0
    82a0:	21 08 00 0b 	shl s1, s1, 2
    82a4:	60 23 00 0f 	move s27, 8
    82a8:	42 90 16 00 	or s2, s2, 1444
    82ac:	21 00 51 c0 	add_i s1, s1, s2
    82b0:	21 00 00 a8 	load_32 s1, (s1)
    82b4:	01 00 00 f0 	b s1
    82b8:	60 43 00 0f 	move s27, 16
    82bc:	3e 20 01 a8 	load_32 s1, 72(sp)
    82c0:	3e 83 01 88 	store_32 s25, 96(sp)
    82c4:	21 40 00 01 	and s1, s1, 16
    82c8:	41 00 00 f2 	bz s1, 8 <vfprintf+0x734>
    82cc:	ad fe ff f7 	b -1356 <vfprintf+0x1e4>
    82d0:	20 a4 01 10 	cmpeq_i s1, s0, 105
    82d4:	61 00 00 f4 	bnz s1, 12 <vfprintf+0x744>
    82d8:	00 90 01 11 	cmpne_i s0, s0, 100
    82dc:	c0 d7 ff f5 	bnz s0, -1288 <vfprintf+0x238>
    82e0:	1e a0 02 a8 	load_32 s0, 168(sp)
    82e4:	00 0c 00 05 	add_i s0, s0, 3
    82e8:	00 f0 ff 01 	and s0, s0, -4
    82ec:	20 10 00 05 	add_i s1, s0, 4
    82f0:	3e a0 02 88 	store_32 s1, 168(sp)
    82f4:	00 03 00 a8 	load_32 s24, (s0)
    82f8:	38 7f 00 09 	ashr s25, s24, 31
    82fc:	1a 00 00 a0 	load_u8 s0, (s26)
    8300:	7e 90 01 88 	store_32 s3, 100(sp)
    8304:	20 a4 01 10 	cmpeq_i s1, s0, 105
    8308:	81 d5 ff f5 	bnz s1, -1360 <vfprintf+0x21c>
    830c:	00 90 01 11 	cmpne_i s0, s0, 100
    8310:	00 e0 ff f5 	bnz s0, -1024 <vfprintf+0x374>
    8314:	a9 fe ff f7 	b -1372 <vfprintf+0x21c>
    8318:	00 80 d0 c1 	sext_8 s0, s1
    831c:	20 80 fd c0 	move s1, s27
    8320:	91 e9 ff f9 	call -22972 <fputc>
    8324:	7e 50 01 a8 	load_32 s3, 84(sp)
    8328:	1e 40 01 a8 	load_32 s0, 80(sp)
    832c:	3a 00 00 a0 	load_u8 s1, (s26)
    8330:	c1 f0 ff f5 	bnz s1, -488 <vfprintf+0x5ac>
    8334:	1f 00 00 f6 	b 124 <vfprintf+0x814>
    8338:	3e 83 01 88 	store_32 s25, 96(sp)
    833c:	00 80 f1 c0 	move s0, s3
    8340:	5e d0 00 a8 	load_32 s2, 52(sp)
    8344:	20 80 d0 c1 	sext_8 s1, s1
    8348:	20 83 f1 c0 	move s25, s3
    834c:	dc 00 00 f8 	call 880 <memchr>
    8350:	60 c8 ff f3 	bz s0, -1780 <vfprintf+0xc0>
    8354:	3e c0 00 a8 	load_32 s1, 48(sp)
    8358:	00 80 6c c0 	sub_i s0, s0, s25
    835c:	5e 10 01 a8 	load_32 s2, 68(sp)
    8360:	5a 07 00 05 	add_i s26, s26, 1
    8364:	01 00 b0 c0 	shl s0, s1, s0
    8368:	40 00 01 c0 	or s2, s0, s2
    836c:	5e 10 01 88 	store_32 s2, 68(sp)
    8370:	00 80 f0 c0 	move s0, s1
    8374:	60 80 fc c0 	move s3, s25
    8378:	3e 83 01 a8 	load_32 s25, 96(sp)
    837c:	3a 00 00 a0 	load_u8 s1, (s26)
    8380:	41 ee ff f5 	bnz s1, -568 <vfprintf+0x5ac>
    8384:	0b 00 00 f6 	b 44 <vfprintf+0x814>
    8388:	01 fc 03 01 	and s0, s1, 255
    838c:	20 b8 00 10 	cmpeq_i s1, s0, 46
    8390:	1e 90 00 a8 	load_32 s0, 36(sp)
    8394:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x800>
    8398:	1e f0 00 a8 	load_32 s0, 60(sp)
    839c:	41 00 00 f4 	bnz s1, 8 <vfprintf+0x808>
    83a0:	02 00 00 f6 	b 8 <vfprintf+0x80c>
    83a4:	5a 07 00 05 	add_i s26, s26, 1
    83a8:	3a 00 00 a0 	load_u8 s1, (s26)
    83ac:	e1 ec ff f5 	bnz s1, -612 <vfprintf+0x5ac>
    83b0:	fe b3 02 a8 	load_32 ra, 172(sp)
    83b4:	00 00 00 0f 	move s0, 0
    83b8:	7e c3 02 a8 	load_32 s27, 176(sp)
    83bc:	5e d3 02 a8 	load_32 s26, 180(sp)
    83c0:	3e e3 02 a8 	load_32 s25, 184(sp)
    83c4:	1e f3 02 a8 	load_32 s24, 188(sp)
    83c8:	de 03 03 05 	add_i sp, sp, 192
    83cc:	1f 00 00 f0 	ret

00000000000083d0 strcmp:
    83d0:	60 00 00 a0 	load_u8 s3, (s0)
    83d4:	40 00 00 0f 	move s2, 0
    83d8:	23 01 00 f2 	bz s3, 36 <strcmp+0x2c>
    83dc:	81 00 00 a0 	load_u8 s4, (s1)
    83e0:	a3 fc 03 01 	and s5, s3, 255
    83e4:	85 00 12 c1 	cmpne_i s4, s5, s4
    83e8:	24 01 00 f4 	bnz s4, 36 <strcmp+0x3c>
    83ec:	60 04 00 a0 	load_u8 s3, 1(s0)
    83f0:	00 04 00 05 	add_i s0, s0, 1
    83f4:	21 04 00 05 	add_i s1, s1, 1
    83f8:	23 ff ff f5 	bnz s3, -28 <strcmp+0xc>
    83fc:	01 00 00 a2 	load_s8 s0, (s1)
    8400:	20 00 d1 c1 	sext_8 s1, s2
    8404:	01 00 60 c0 	sub_i s0, s1, s0
    8408:	1f 00 00 f0 	ret
    840c:	40 80 f1 c0 	move s2, s3
    8410:	01 00 00 a2 	load_s8 s0, (s1)
    8414:	20 00 d1 c1 	sext_8 s1, s2
    8418:	01 00 60 c0 	sub_i s0, s1, s0
    841c:	1f 00 00 f0 	ret

0000000000008420 strncmp:
    8420:	62 02 00 f2 	bz s2, 76 <strncmp+0x4c>
    8424:	60 00 00 a0 	load_u8 s3, (s0)
    8428:	a3 01 00 f2 	bz s3, 52 <strncmp+0x3c>
    842c:	42 fc ff 05 	add_i s2, s2, -1
    8430:	62 01 00 f2 	bz s2, 44 <strncmp+0x3c>
    8434:	81 00 00 a0 	load_u8 s4, (s1)
    8438:	a3 fc 03 01 	and s5, s3, 255
    843c:	85 00 12 c1 	cmpne_i s4, s5, s4
    8440:	e4 00 00 f4 	bnz s4, 28 <strncmp+0x3c>
    8444:	60 04 00 a0 	load_u8 s3, 1(s0)
    8448:	21 04 00 05 	add_i s1, s1, 1
    844c:	83 00 00 f2 	bz s3, 16 <strncmp+0x3c>
    8450:	42 fc ff 05 	add_i s2, s2, -1
    8454:	00 04 00 05 	add_i s0, s0, 1
    8458:	e2 fe ff f5 	bnz s2, -36 <strncmp+0x14>
    845c:	01 00 00 a2 	load_s8 s0, (s1)
    8460:	20 80 d1 c1 	sext_8 s1, s3
    8464:	01 00 60 c0 	sub_i s0, s1, s0
    8468:	1f 00 00 f0 	ret
    846c:	00 00 00 0f 	move s0, 0
    8470:	1f 00 00 f0 	ret

0000000000008474 strcasecmp:
    8474:	60 00 00 a0 	load_u8 s3, (s0)
    8478:	40 00 00 0f 	move s2, 0
    847c:	a3 02 00 f2 	bz s3, 84 <strcasecmp+0x5c>
    8480:	80 80 d1 c1 	sext_8 s4, s3
    8484:	a4 7c fe 05 	add_i s5, s4, -97
    8488:	a5 68 00 18 	cmplt_u s5, s5, 26
    848c:	45 00 00 f4 	bnz s5, 8 <strcasecmp+0x20>
    8490:	02 00 00 f6 	b 8 <strcasecmp+0x24>
    8494:	84 80 ff 05 	add_i s4, s4, -32
    8498:	a1 00 00 a2 	load_s8 s5, (s1)
    849c:	c5 7c fe 05 	add_i s6, s5, -97
    84a0:	c6 68 00 18 	cmplt_u s6, s6, 26
    84a4:	46 00 00 f4 	bnz s6, 8 <strcasecmp+0x38>
    84a8:	02 00 00 f6 	b 8 <strcasecmp+0x3c>
    84ac:	a5 80 ff 05 	add_i s5, s5, -32
    84b0:	84 80 12 c1 	cmpne_i s4, s4, s5
    84b4:	c4 00 00 f4 	bnz s4, 24 <strcasecmp+0x58>
    84b8:	60 04 00 a0 	load_u8 s3, 1(s0)
    84bc:	00 04 00 05 	add_i s0, s0, 1
    84c0:	21 04 00 05 	add_i s1, s1, 1
    84c4:	e3 fd ff f5 	bnz s3, -68 <strcasecmp+0xc>
    84c8:	02 00 00 f6 	b 8 <strcasecmp+0x5c>
    84cc:	40 80 f1 c0 	move s2, s3
    84d0:	00 00 d1 c1 	sext_8 s0, s2
    84d4:	40 7c fe 05 	add_i s2, s0, -97
    84d8:	42 68 00 18 	cmplt_u s2, s2, 26
    84dc:	42 00 00 f4 	bnz s2, 8 <strcasecmp+0x70>
    84e0:	02 00 00 f6 	b 8 <strcasecmp+0x74>
    84e4:	00 80 ff 05 	add_i s0, s0, -32
    84e8:	21 00 00 a2 	load_s8 s1, (s1)
    84ec:	41 7c fe 05 	add_i s2, s1, -97
    84f0:	42 68 00 18 	cmplt_u s2, s2, 26
    84f4:	42 00 00 f4 	bnz s2, 8 <strcasecmp+0x88>
    84f8:	02 00 00 f6 	b 8 <strcasecmp+0x8c>
    84fc:	21 80 ff 05 	add_i s1, s1, -32
    8500:	00 80 60 c0 	sub_i s0, s0, s1
    8504:	1f 00 00 f0 	ret

0000000000008508 toupper:
    8508:	20 7c fe 05 	add_i s1, s0, -97
    850c:	21 68 00 18 	cmplt_u s1, s1, 26
    8510:	41 00 00 f4 	bnz s1, 8 <toupper+0x10>
    8514:	02 00 00 f6 	b 8 <toupper+0x14>
    8518:	00 80 ff 05 	add_i s0, s0, -32
    851c:	1f 00 00 f0 	ret

0000000000008520 strncasecmp:
    8520:	e2 04 00 f2 	bz s2, 156 <strncasecmp+0x9c>
    8524:	60 00 00 a0 	load_u8 s3, (s0)
    8528:	e3 02 00 f2 	bz s3, 92 <strncasecmp+0x64>
    852c:	42 fc ff 05 	add_i s2, s2, -1
    8530:	a2 02 00 f2 	bz s2, 84 <strncasecmp+0x64>
    8534:	80 80 d1 c1 	sext_8 s4, s3
    8538:	a4 7c fe 05 	add_i s5, s4, -97
    853c:	a5 68 00 18 	cmplt_u s5, s5, 26
    8540:	45 00 00 f4 	bnz s5, 8 <strncasecmp+0x28>
    8544:	02 00 00 f6 	b 8 <strncasecmp+0x2c>
    8548:	84 80 ff 05 	add_i s4, s4, -32
    854c:	a1 00 00 a2 	load_s8 s5, (s1)
    8550:	c5 7c fe 05 	add_i s6, s5, -97
    8554:	c6 68 00 18 	cmplt_u s6, s6, 26
    8558:	46 00 00 f4 	bnz s6, 8 <strncasecmp+0x40>
    855c:	02 00 00 f6 	b 8 <strncasecmp+0x44>
    8560:	a5 80 ff 05 	add_i s5, s5, -32
    8564:	84 80 12 c1 	cmpne_i s4, s4, s5
    8568:	e4 00 00 f4 	bnz s4, 28 <strncasecmp+0x64>
    856c:	60 04 00 a0 	load_u8 s3, 1(s0)
    8570:	21 04 00 05 	add_i s1, s1, 1
    8574:	83 00 00 f2 	bz s3, 16 <strncasecmp+0x64>
    8578:	42 fc ff 05 	add_i s2, s2, -1
    857c:	00 04 00 05 	add_i s0, s0, 1
    8580:	a2 fd ff f5 	bnz s2, -76 <strncasecmp+0x14>
    8584:	00 80 d1 c1 	sext_8 s0, s3
    8588:	40 7c fe 05 	add_i s2, s0, -97
    858c:	42 68 00 18 	cmplt_u s2, s2, 26
    8590:	42 00 00 f4 	bnz s2, 8 <strncasecmp+0x78>
    8594:	02 00 00 f6 	b 8 <strncasecmp+0x7c>
    8598:	00 80 ff 05 	add_i s0, s0, -32
    859c:	21 00 00 a2 	load_s8 s1, (s1)
    85a0:	41 7c fe 05 	add_i s2, s1, -97
    85a4:	42 68 00 18 	cmplt_u s2, s2, 26
    85a8:	42 00 00 f4 	bnz s2, 8 <strncasecmp+0x90>
    85ac:	02 00 00 f6 	b 8 <strncasecmp+0x94>
    85b0:	21 80 ff 05 	add_i s1, s1, -32
    85b4:	00 80 60 c0 	sub_i s0, s0, s1
    85b8:	1f 00 00 f0 	ret
    85bc:	00 00 00 0f 	move s0, 0
    85c0:	1f 00 00 f0 	ret

00000000000085c4 strlen:
    85c4:	20 00 f0 c0 	move s1, s0
    85c8:	01 00 00 a0 	load_u8 s0, (s1)
    85cc:	e0 00 00 f2 	bz s0, 28 <strlen+0x24>
    85d0:	00 00 00 0f 	move s0, 0
    85d4:	41 04 00 a0 	load_u8 s2, 1(s1)
    85d8:	21 04 00 05 	add_i s1, s1, 1
    85dc:	00 04 00 05 	add_i s0, s0, 1
    85e0:	a2 ff ff f5 	bnz s2, -12 <strlen+0x10>
    85e4:	1f 00 00 f0 	ret
    85e8:	00 00 00 0f 	move s0, 0
    85ec:	1f 00 00 f0 	ret

00000000000085f0 strcpy:
    85f0:	41 00 00 a0 	load_u8 s2, (s1)
    85f4:	80 00 f0 c0 	move s4, s0
    85f8:	02 01 00 f2 	bz s2, 32 <strcpy+0x28>
    85fc:	60 00 f0 c0 	move s3, s0
    8600:	83 04 00 05 	add_i s4, s3, 1
    8604:	43 00 00 82 	store_8 s2, (s3)
    8608:	41 04 00 a0 	load_u8 s2, 1(s1)
    860c:	21 04 00 05 	add_i s1, s1, 1
    8610:	60 00 f2 c0 	move s3, s4
    8614:	62 ff ff f5 	bnz s2, -20 <strcpy+0x10>
    8618:	20 00 00 0f 	move s1, 0
    861c:	24 00 00 82 	store_8 s1, (s4)
    8620:	1f 00 00 f0 	ret

0000000000008624 strncpy:
    8624:	81 00 00 a0 	load_u8 s4, (s1)
    8628:	a2 00 00 11 	cmpne_i s5, s2, 0
    862c:	62 02 00 f2 	bz s2, 76 <strncpy+0x54>
    8630:	c4 fc 03 01 	and s6, s4, 255
    8634:	60 00 f0 c0 	move s3, s0
    8638:	66 01 00 f2 	bz s6, 44 <strncpy+0x40>
    863c:	60 00 f0 c0 	move s3, s0
    8640:	42 fc ff 05 	add_i s2, s2, -1
    8644:	83 00 00 82 	store_8 s4, (s3)
    8648:	81 04 00 a0 	load_u8 s4, 1(s1)
    864c:	63 04 00 05 	add_i s3, s3, 1
    8650:	a2 00 00 11 	cmpne_i s5, s2, 0
    8654:	82 00 00 f2 	bz s2, 16 <strncpy+0x40>
    8658:	c4 fc 03 01 	and s6, s4, 255
    865c:	21 04 00 05 	add_i s1, s1, 1
    8660:	06 ff ff f5 	bnz s6, -32 <strncpy+0x1c>
    8664:	25 04 00 01 	and s1, s5, 1
    8668:	61 00 00 f2 	bz s1, 12 <strncpy+0x50>
    866c:	20 00 00 0f 	move s1, 0
    8670:	23 00 00 82 	store_8 s1, (s3)
    8674:	1f 00 00 f0 	ret
    8678:	60 00 f0 c0 	move s3, s0
    867c:	25 04 00 01 	and s1, s5, 1
    8680:	a1 ff ff f3 	bz s1, -12 <strncpy+0x50>
    8684:	fa ff ff f7 	b -24 <strncpy+0x48>

0000000000008688 strchr:
    8688:	40 00 f0 c0 	move s2, s0
    868c:	00 00 00 0f 	move s0, 0
    8690:	62 00 00 a0 	load_u8 s3, (s2)
    8694:	e3 00 00 f2 	bz s3, 28 <strchr+0x28>
    8698:	60 80 d1 c1 	sext_8 s3, s3
    869c:	63 80 00 c1 	cmpeq_i s3, s3, s1
    86a0:	a3 00 00 f4 	bnz s3, 20 <strchr+0x2c>
    86a4:	62 04 00 a0 	load_u8 s3, 1(s2)
    86a8:	42 04 00 05 	add_i s2, s2, 1
    86ac:	63 ff ff f5 	bnz s3, -20 <strchr+0x10>
    86b0:	1f 00 00 f0 	ret
    86b4:	00 00 f1 c0 	move s0, s2
    86b8:	1f 00 00 f0 	ret

00000000000086bc memchr:
    86bc:	e2 01 00 f2 	bz s2, 60 <memchr+0x3c>
    86c0:	80 00 00 0f 	move s4, 0
    86c4:	a0 00 f2 c0 	move s5, s4
    86c8:	60 80 52 c0 	add_i s3, s0, s5
    86cc:	c3 00 00 a2 	load_s8 s6, (s3)
    86d0:	c6 80 10 c1 	cmpne_i s6, s6, s1
    86d4:	46 00 00 f4 	bnz s6, 8 <memchr+0x20>
    86d8:	0b 00 00 f6 	b 44 <memchr+0x48>
    86dc:	a5 04 00 05 	add_i s5, s5, 1
    86e0:	65 00 71 c1 	cmpge_u s3, s5, s2
    86e4:	43 00 00 f4 	bnz s3, 8 <memchr+0x30>
    86e8:	f8 ff ff f7 	b -32 <memchr+0xc>
    86ec:	60 00 f2 c0 	move s3, s4
    86f0:	00 80 f1 c0 	move s0, s3
    86f4:	1f 00 00 f0 	ret
    86f8:	60 00 00 0f 	move s3, 0
    86fc:	00 80 f1 c0 	move s0, s3
    8700:	1f 00 00 f0 	ret
    8704:	00 80 f1 c0 	move s0, s3
    8708:	1f 00 00 f0 	ret

000000000000870c strcat:
    870c:	60 00 f0 c0 	move s3, s0
    8710:	40 80 f1 c0 	move s2, s3
    8714:	82 00 00 a0 	load_u8 s4, (s2)
    8718:	62 04 00 05 	add_i s3, s2, 1
    871c:	a4 ff ff f5 	bnz s4, -12 <strcat+0x4>
    8720:	61 00 00 a0 	load_u8 s3, (s1)
    8724:	43 01 00 f2 	bz s3, 40 <strcat+0x40>
    8728:	82 04 00 05 	add_i s4, s2, 1
    872c:	62 00 00 82 	store_8 s3, (s2)
    8730:	61 04 00 a0 	load_u8 s3, 1(s1)
    8734:	21 04 00 05 	add_i s1, s1, 1
    8738:	40 00 f2 c0 	move s2, s4
    873c:	63 ff ff f5 	bnz s3, -20 <strcat+0x1c>
    8740:	20 00 00 0f 	move s1, 0
    8744:	24 00 00 82 	store_8 s1, (s4)
    8748:	1f 00 00 f0 	ret
    874c:	80 00 f1 c0 	move s4, s2
    8750:	20 00 00 0f 	move s1, 0
    8754:	24 00 00 82 	store_8 s1, (s4)
    8758:	1f 00 00 f0 	ret

000000000000875c isdigit:
    875c:	00 40 ff 05 	add_i s0, s0, -48
    8760:	00 28 00 18 	cmplt_u s0, s0, 10
    8764:	00 04 00 01 	and s0, s0, 1
    8768:	1f 00 00 f0 	ret

000000000000876c sbrk:
    876c:	de 03 ff 05 	add_i sp, sp, -64
    8770:	1e f3 00 88 	store_32 s24, 60(sp)
    8774:	fe e3 00 88 	store_32 ra, 56(sp)
    8778:	26 00 00 4f 	movehi s1, 6
    877c:	40 00 f0 c0 	move s2, s0
    8780:	01 40 00 00 	or s0, s1, 16
    8784:	20 00 00 aa 	load_sync s1, (s0)
    8788:	61 00 51 c0 	add_i s3, s1, s2
    878c:	00 83 f0 c0 	move s24, s1
    8790:	60 00 00 8a 	store_sync s3, (s0)  
    8794:	83 ff ff f3 	bz s3, -16 <sbrk+0x18>
    8798:	02 04 00 14 	cmplt_i s0, s2, 1
    879c:	80 00 00 f4 	bnz s0, 16 <sbrk+0x40>
    87a0:	20 00 00 0f 	move s1, 0
    87a4:	00 00 fc c0 	move s0, s24
    87a8:	d0 fc ff f9 	call -3264 <memset>
    87ac:	00 00 fc c0 	move s0, s24
    87b0:	fe e3 00 a8 	load_32 ra, 56(sp)
    87b4:	1e f3 00 a8 	load_32 s24, 60(sp)
    87b8:	de 03 01 05 	add_i sp, sp, 64
    87bc:	1f 00 00 f0 	ret

00000000000087c0 parallel_execute:
    87c0:	de 03 ff 05 	add_i sp, sp, -64
    87c4:	1e f3 00 88 	store_32 s24, 60(sp)
    87c8:	3e e3 00 88 	store_32 s25, 56(sp)
    87cc:	5e d3 00 88 	store_32 s26, 52(sp)
    87d0:	7e c3 00 88 	store_32 s27, 48(sp)
    87d4:	fe b3 00 88 	store_32 ra, 44(sp)
    87d8:	66 00 00 4f 	movehi s3, 6
    87dc:	03 c3 0c 00 	or s24, s3, 816
    87e0:	66 00 00 4f 	movehi s3, 6
    87e4:	18 00 00 88 	store_32 s0, (s24)
    87e8:	06 00 00 4f 	movehi s0, 6
    87ec:	23 d3 0c 00 	or s25, s3, 820
    87f0:	66 00 00 4f 	movehi s3, 6
    87f4:	40 e3 0c 00 	or s26, s0, 824
    87f8:	39 00 00 88 	store_32 s1, (s25)
    87fc:	00 00 00 0f 	move s0, 0
    8800:	63 f3 0c 00 	or s27, s3, 828
    8804:	1a 00 00 88 	store_32 s0, (s26)
    8808:	5b 00 00 88 	store_32 s2, (s27)
    880c:	1a 00 00 a8 	load_32 s0, (s26)
    8810:	3b 00 00 a8 	load_32 s1, (s27)
    8814:	00 80 00 c1 	cmpeq_i s0, s0, s1
    8818:	c0 02 00 f4 	bnz s0, 88 <parallel_execute+0xb0>
    881c:	3a 00 00 a8 	load_32 s1, (s26)
    8820:	1b 00 00 a8 	load_32 s0, (s27)
    8824:	01 00 00 c1 	cmpeq_i s0, s1, s0
    8828:	c0 01 00 f4 	bnz s0, 56 <parallel_execute+0xa0>
    882c:	01 04 00 05 	add_i s0, s1, 1
    8830:	5a 00 00 aa 	load_sync s2, (s26)
    8834:	62 80 10 c1 	cmpne_i s3, s2, s1
    8838:	83 00 00 f4 	bnz s3, 16 <parallel_execute+0x88>
    883c:	60 00 f0 c0 	move s3, s0
    8840:	7a 00 00 8a 	store_sync s3, (s26)  
    8844:	63 ff ff f3 	bz s3, -20 <parallel_execute+0x70>
    8848:	02 80 00 c1 	cmpeq_i s0, s2, s1
    884c:	00 04 00 01 	and s0, s0, 1
    8850:	60 fe ff f3 	bz s0, -52 <parallel_execute+0x5c>
    8854:	58 00 00 a8 	load_32 s2, (s24)
    8858:	19 00 00 a8 	load_32 s0, (s25)
    885c:	42 00 00 fc 	call s2
    8860:	1a 00 00 a8 	load_32 s0, (s26)
    8864:	3b 00 00 a8 	load_32 s1, (s27)
    8868:	00 80 10 c1 	cmpne_i s0, s0, s1
    886c:	80 fd ff f5 	bnz s0, -80 <parallel_execute+0x5c>
    8870:	06 00 00 4f 	movehi s0, 6
    8874:	00 00 0d 00 	or s0, s0, 832
    8878:	20 00 00 a8 	load_32 s1, (s0)
    887c:	e1 ff ff f5 	bnz s1, -4 <parallel_execute+0xb8>
    8880:	fe b3 00 a8 	load_32 ra, 44(sp)
    8884:	7e c3 00 a8 	load_32 s27, 48(sp)
    8888:	5e d3 00 a8 	load_32 s26, 52(sp)
    888c:	3e e3 00 a8 	load_32 s25, 56(sp)
    8890:	1e f3 00 a8 	load_32 s24, 60(sp)
    8894:	de 03 01 05 	add_i sp, sp, 64
    8898:	1f 00 00 f0 	ret

000000000000889c worker_thread:
    889c:	de 03 ff 05 	add_i sp, sp, -64
    88a0:	1e f3 00 88 	store_32 s24, 60(sp)
    88a4:	3e e3 00 88 	store_32 s25, 56(sp)
    88a8:	5e d3 00 88 	store_32 s26, 52(sp)
    88ac:	7e c3 00 88 	store_32 s27, 48(sp)
    88b0:	fe b3 00 88 	store_32 ra, 44(sp)
    88b4:	06 00 00 4f 	movehi s0, 6
    88b8:	26 00 00 4f 	movehi s1, 6
    88bc:	46 00 00 4f 	movehi s2, 6
    88c0:	00 e3 0c 00 	or s24, s0, 824
    88c4:	06 00 00 4f 	movehi s0, 6
    88c8:	21 f3 0c 00 	or s25, s1, 828
    88cc:	26 00 00 4f 	movehi s1, 6
    88d0:	40 03 0d 00 	or s26, s0, 832
    88d4:	62 d3 0c 00 	or s27, s2, 820
    88d8:	01 c0 0c 00 	or s0, s1, 816
    88dc:	1e a0 00 88 	store_32 s0, 40(sp)
    88e0:	18 00 00 a8 	load_32 s0, (s24)
    88e4:	39 00 00 a8 	load_32 s1, (s25)
    88e8:	00 80 00 c1 	cmpeq_i s0, s0, s1
    88ec:	a0 ff ff f5 	bnz s0, -12 <worker_thread+0x44>
    88f0:	1a 00 00 aa 	load_sync s0, (s26)
    88f4:	20 04 00 05 	add_i s1, s0, 1
    88f8:	00 00 f0 c0 	move s0, s0
    88fc:	3a 00 00 8a 	store_sync s1, (s26)  
    8900:	81 ff ff f3 	bz s1, -16 <worker_thread+0x54>
    8904:	38 00 00 a8 	load_32 s1, (s24)
    8908:	19 00 00 a8 	load_32 s0, (s25)
    890c:	01 00 00 c1 	cmpeq_i s0, s1, s0
    8910:	e0 01 00 f4 	bnz s0, 60 <worker_thread+0xb0>
    8914:	01 04 00 05 	add_i s0, s1, 1
    8918:	58 00 00 aa 	load_sync s2, (s24)
    891c:	62 80 10 c1 	cmpne_i s3, s2, s1
    8920:	83 00 00 f4 	bnz s3, 16 <worker_thread+0x94>
    8924:	60 00 f0 c0 	move s3, s0
    8928:	78 00 00 8a 	store_sync s3, (s24)  
    892c:	63 ff ff f3 	bz s3, -20 <worker_thread+0x7c>
    8930:	02 80 00 c1 	cmpeq_i s0, s2, s1
    8934:	00 04 00 01 	and s0, s0, 1
    8938:	60 fe ff f3 	bz s0, -52 <worker_thread+0x68>
    893c:	1e a0 00 a8 	load_32 s0, 40(sp)
    8940:	40 00 00 a8 	load_32 s2, (s0)
    8944:	1b 00 00 a8 	load_32 s0, (s27)
    8948:	42 00 00 fc 	call s2
    894c:	1a 00 00 aa 	load_sync s0, (s26)
    8950:	20 fc ff 05 	add_i s1, s0, -1
    8954:	00 00 f0 c0 	move s0, s0
    8958:	3a 00 00 8a 	store_sync s1, (s26)  
    895c:	81 ff ff f3 	bz s1, -16 <worker_thread+0xb0>
    8960:	e0 ff ff f7 	b -128 <worker_thread+0x44>

0000000000008964 start_all_threads:
    8964:	00 fc ff 0f 	move s0, -1
    8968:	15 00 00 8c 	setcr s0, 21
    896c:	1f 00 00 f0 	ret

0000000000008970 _write_uart:
    8970:	38 fc ff 4f 	movehi s1, 524280
    8974:	41 00 01 00 	or s2, s1, 64
    8978:	62 00 00 a8 	load_32 s3, (s2)
    897c:	63 04 00 01 	and s3, s3, 1
    8980:	c3 ff ff f3 	bz s3, -8 <_write_uart+0x8>
    8984:	21 20 01 00 	or s1, s1, 72
    8988:	01 00 00 88 	store_32 s0, (s1)
    898c:	1f 00 00 f0 	ret

0000000000008990 write_console:
    8990:	41 04 00 14 	cmplt_i s2, s1, 1
    8994:	c2 01 00 f4 	bnz s2, 56 <write_console+0x3c>
    8998:	98 fc ff 4f 	movehi s4, 524280
    899c:	40 00 00 0f 	move s2, 0
    89a0:	64 00 01 00 	or s3, s4, 64
    89a4:	84 20 01 00 	or s4, s4, 72
    89a8:	a0 00 51 c0 	add_i s5, s0, s2
    89ac:	a5 00 00 a2 	load_s8 s5, (s5)
    89b0:	c3 00 00 a8 	load_32 s6, (s3)
    89b4:	c6 04 00 01 	and s6, s6, 1
    89b8:	c6 ff ff f3 	bz s6, -8 <write_console+0x20>
    89bc:	42 04 00 05 	add_i s2, s2, 1
    89c0:	a4 00 00 88 	store_32 s5, (s4)
    89c4:	c2 80 40 c1 	cmplt_i s6, s2, s1
    89c8:	06 ff ff f5 	bnz s6, -32 <write_console+0x18>
    89cc:	00 00 00 0f 	move s0, 0
    89d0:	1f 00 00 f0 	ret

00000000000089d4 read_block:
    89d4:	de 03 ff 05 	add_i sp, sp, -64
    89d8:	1e f3 00 88 	store_32 s24, 60(sp)
    89dc:	fe e3 00 88 	store_32 ra, 56(sp)
    89e0:	46 00 00 4f 	movehi s2, 6
    89e4:	42 10 0d 00 	or s2, s2, 836
    89e8:	42 00 00 a0 	load_u8 s2, (s2)
    89ec:	42 04 00 11 	cmpne_i s2, s2, 1
    89f0:	42 01 00 f4 	bnz s2, 40 <read_block+0x44>
    89f4:	00 24 00 0b 	shl s0, s0, 9
    89f8:	40 00 04 4f 	movehi s2, 8192
    89fc:	00 03 08 0f 	move s24, 512
    8a00:	40 00 51 c0 	add_i s2, s0, s2
    8a04:	00 80 f0 c0 	move s0, s1
    8a08:	20 00 f1 c0 	move s1, s2
    8a0c:	40 00 fc c0 	move s2, s24
    8a10:	02 fc ff f9 	call -4088 <memcpy>
    8a14:	03 00 00 f6 	b 12 <read_block+0x4c>
    8a18:	a8 03 00 f8 	call 3744 <read_sdmmc_device>
    8a1c:	00 03 f0 c0 	move s24, s0
    8a20:	00 00 fc c0 	move s0, s24
    8a24:	fe e3 00 a8 	load_32 ra, 56(sp)
    8a28:	1e f3 00 a8 	load_32 s24, 60(sp)
    8a2c:	de 03 01 05 	add_i sp, sp, 64
    8a30:	1f 00 00 f0 	ret

0000000000008a34 open:
    8a34:	de 03 f7 05 	add_i sp, sp, -576
    8a38:	1e f3 08 88 	store_32 s24, 572(sp)
    8a3c:	3e e3 08 88 	store_32 s25, 568(sp)
    8a40:	5e d3 08 88 	store_32 s26, 564(sp)
    8a44:	7e c3 08 88 	store_32 s27, 560(sp)
    8a48:	fe b3 08 88 	store_32 ra, 556(sp)
    8a4c:	26 00 00 4f 	movehi s1, 6
    8a50:	41 20 0d 00 	or s2, s1, 840
    8a54:	22 00 00 a0 	load_u8 s1, (s2)
    8a58:	1e a0 00 88 	store_32 s0, 40(sp)
    8a5c:	a1 0c 00 f4 	bnz s1, 404 <open+0x1bc>
    8a60:	5e 60 00 88 	store_32 s2, 24(sp)
    8a64:	73 02 00 f8 	call 2508 <init_sdmmc_device>
    8a68:	00 fc ff 12 	cmpgt_i s0, s0, -1
    8a6c:	40 00 00 f4 	bnz s0, 8 <open+0x40>
    8a70:	0d 00 00 f6 	b 52 <open+0x70>
    8a74:	06 00 00 4f 	movehi s0, 6
    8a78:	00 10 0d 00 	or s0, s0, 836
    8a7c:	00 00 00 a0 	load_u8 s0, (s0)
    8a80:	00 04 00 11 	cmpne_i s0, s0, 1
    8a84:	40 00 00 f4 	bnz s0, 8 <open+0x58>
    8a88:	0e 00 00 f6 	b 56 <open+0x8c>
    8a8c:	00 00 00 0f 	move s0, 0
    8a90:	3e b0 00 05 	add_i s1, sp, 44
    8a94:	89 03 00 f8 	call 3620 <read_sdmmc_device>
    8a98:	00 04 00 14 	cmplt_i s0, s0, 1
    8a9c:	c0 03 00 f4 	bnz s0, 120 <open+0xe0>
    8aa0:	0c 00 00 f6 	b 48 <open+0x9c>
    8aa4:	00 00 00 4f 	movehi s0, 0
    8aa8:	00 c0 09 00 	or s0, s0, 624
    8aac:	49 e8 ff f9 	call -24284 <puts>
    8ab0:	06 00 00 4f 	movehi s0, 6
    8ab4:	20 04 00 0f 	move s1, 1
    8ab8:	00 10 0d 00 	or s0, s0, 836
    8abc:	20 00 00 82 	store_8 s1, (s0)
    8ac0:	1e b0 00 05 	add_i s0, sp, 44
    8ac4:	20 00 04 4f 	movehi s1, 8192
    8ac8:	40 00 08 0f 	move s2, 512
    8acc:	d3 fb ff f9 	call -4276 <memcpy>
    8ad0:	1e b4 00 a0 	load_u8 s0, 45(sp)
    8ad4:	3e b0 00 a0 	load_u8 s1, 44(sp)
    8ad8:	5e bc 00 a0 	load_u8 s2, 47(sp)
    8adc:	7e b8 00 a0 	load_u8 s3, 46(sp)
    8ae0:	00 20 00 0b 	shl s0, s0, 8
    8ae4:	42 20 00 0b 	shl s2, s2, 8
    8ae8:	00 80 00 c0 	or s0, s0, s1
    8aec:	33 64 73 4f 	movehi s1, 236339
    8af0:	42 80 01 c0 	or s2, s2, s3
    8af4:	21 cc 41 00 	or s1, s1, 4211
    8af8:	42 40 00 0b 	shl s2, s2, 16
    8afc:	02 00 00 c0 	or s0, s2, s0
    8b00:	00 80 00 c1 	cmpeq_i s0, s0, s1
    8b04:	e0 00 00 f4 	bnz s0, 28 <open+0xec>
    8b08:	00 00 00 4f 	movehi s0, 0
    8b0c:	00 9c 12 00 	or s0, s0, 1191
    8b10:	30 e8 ff f9 	call -24384 <puts>
    8b14:	2e 02 00 f8 	call 2232 <__errno_ptr>
    8b18:	20 14 00 0f 	move s1, 5
    8b1c:	d9 00 00 f6 	b 868 <open+0x44c>
    8b20:	1e c0 00 a8 	load_32 s0, 48(sp)
    8b24:	00 a0 00 07 	mull_i s0, s0, 40
    8b28:	00 1f 08 05 	add_i s24, s0, 519
    8b2c:	18 00 f8 01 	and s0, s24, -512
    8b30:	40 e9 ff f9 	call -23296 <malloc>
    8b34:	26 00 00 4f 	movehi s1, 6
    8b38:	60 03 f0 c0 	move s27, s0
    8b3c:	40 00 08 0f 	move s2, 512
    8b40:	21 30 15 00 	or s1, s1, 1356
    8b44:	3e 90 00 88 	store_32 s1, 36(sp)
    8b48:	61 03 00 88 	store_32 s27, (s1)
    8b4c:	3e b0 00 05 	add_i s1, sp, 44
    8b50:	b2 fb ff f9 	call -4408 <memcpy>
    8b54:	18 00 10 18 	cmplt_u s0, s24, 1024
    8b58:	60 04 00 f4 	bnz s0, 140 <open+0x1b0>
    8b5c:	06 00 00 4f 	movehi s0, 6
    8b60:	18 27 00 0a 	shr s24, s24, 9
    8b64:	20 07 00 0f 	move s25, 1
    8b68:	40 13 0d 00 	or s26, s0, 836
    8b6c:	00 00 04 4f 	movehi s0, 8192
    8b70:	1e 80 00 88 	store_32 s0, 32(sp)
    8b74:	00 00 08 0f 	move s0, 512
    8b78:	1e 70 00 88 	store_32 s0, 28(sp)
    8b7c:	03 00 00 f6 	b 12 <open+0x154>
    8b80:	1e 90 00 a8 	load_32 s0, 36(sp)
    8b84:	60 03 00 a8 	load_32 s27, (s0)
    8b88:	3a 00 00 a0 	load_u8 s1, (s26)
    8b8c:	19 24 00 0b 	shl s0, s25, 9
    8b90:	5b 00 50 c0 	add_i s2, s27, s0
    8b94:	21 04 00 11 	cmpne_i s1, s1, 1
    8b98:	41 01 00 f4 	bnz s1, 40 <open+0x18c>
    8b9c:	3e 80 00 a8 	load_32 s1, 32(sp)
    8ba0:	20 80 50 c0 	add_i s1, s0, s1
    8ba4:	00 00 f1 c0 	move s0, s2
    8ba8:	5e 70 00 a8 	load_32 s2, 28(sp)
    8bac:	9b fb ff f9 	call -4500 <memcpy>
    8bb0:	39 07 00 05 	add_i s25, s25, 1
    8bb4:	19 00 7c c1 	cmpge_u s0, s25, s24
    8bb8:	60 01 00 f4 	bnz s0, 44 <open+0x1b0>
    8bbc:	f1 ff ff f7 	b -60 <open+0x14c>
    8bc0:	00 80 fc c0 	move s0, s25
    8bc4:	20 00 f1 c0 	move s1, s2
    8bc8:	3c 03 00 f8 	call 3312 <read_sdmmc_device>
    8bcc:	00 04 00 14 	cmplt_i s0, s0, 1
    8bd0:	20 fa ff f5 	bnz s0, -188 <open+0xe0>
    8bd4:	39 07 00 05 	add_i s25, s25, 1
    8bd8:	19 00 7c c1 	cmpge_u s0, s25, s24
    8bdc:	40 00 00 f4 	bnz s0, 8 <open+0x1b0>
    8be0:	e8 ff ff f7 	b -96 <open+0x14c>
    8be4:	3e 60 00 a8 	load_32 s1, 24(sp)
    8be8:	00 04 00 0f 	move s0, 1
    8bec:	01 00 00 82 	store_8 s0, (s1)
    8bf0:	06 00 00 4f 	movehi s0, 6
    8bf4:	20 30 0d 00 	or s1, s0, 844
    8bf8:	01 00 00 a8 	load_32 s0, (s1)
    8bfc:	3e 90 00 88 	store_32 s1, 36(sp)
    8c00:	a0 09 00 f2 	bz s0, 308 <open+0x300>
    8c04:	01 40 00 a8 	load_32 s0, 16(s1)
    8c08:	a0 09 00 f2 	bz s0, 308 <open+0x308>
    8c0c:	01 80 00 a8 	load_32 s0, 32(s1)
    8c10:	a0 09 00 f2 	bz s0, 308 <open+0x310>
    8c14:	01 c0 00 a8 	load_32 s0, 48(s1)
    8c18:	a0 09 00 f2 	bz s0, 308 <open+0x318>
    8c1c:	01 00 01 a8 	load_32 s0, 64(s1)
    8c20:	a0 09 00 f2 	bz s0, 308 <open+0x320>
    8c24:	01 40 01 a8 	load_32 s0, 80(s1)
    8c28:	a0 09 00 f2 	bz s0, 308 <open+0x328>
    8c2c:	01 80 01 a8 	load_32 s0, 96(s1)
    8c30:	a0 09 00 f2 	bz s0, 308 <open+0x330>
    8c34:	01 c0 01 a8 	load_32 s0, 112(s1)
    8c38:	a0 09 00 f2 	bz s0, 308 <open+0x338>
    8c3c:	01 00 02 a8 	load_32 s0, 128(s1)
    8c40:	a0 09 00 f2 	bz s0, 308 <open+0x340>
    8c44:	01 40 02 a8 	load_32 s0, 144(s1)
    8c48:	a0 09 00 f2 	bz s0, 308 <open+0x348>
    8c4c:	01 80 02 a8 	load_32 s0, 160(s1)
    8c50:	a0 09 00 f2 	bz s0, 308 <open+0x350>
    8c54:	01 c0 02 a8 	load_32 s0, 176(s1)
    8c58:	a0 09 00 f2 	bz s0, 308 <open+0x358>
    8c5c:	01 00 03 a8 	load_32 s0, 192(s1)
    8c60:	a0 09 00 f2 	bz s0, 308 <open+0x360>
    8c64:	01 40 03 a8 	load_32 s0, 208(s1)
    8c68:	a0 09 00 f2 	bz s0, 308 <open+0x368>
    8c6c:	01 80 03 a8 	load_32 s0, 224(s1)
    8c70:	a0 09 00 f2 	bz s0, 308 <open+0x370>
    8c74:	01 c0 03 a8 	load_32 s0, 240(s1)
    8c78:	a0 09 00 f2 	bz s0, 308 <open+0x378>
    8c7c:	01 00 04 a8 	load_32 s0, 256(s1)
    8c80:	a0 09 00 f2 	bz s0, 308 <open+0x380>
    8c84:	01 40 04 a8 	load_32 s0, 272(s1)
    8c88:	a0 09 00 f2 	bz s0, 308 <open+0x388>
    8c8c:	01 80 04 a8 	load_32 s0, 288(s1)
    8c90:	a0 09 00 f2 	bz s0, 308 <open+0x390>
    8c94:	01 c0 04 a8 	load_32 s0, 304(s1)
    8c98:	a0 09 00 f2 	bz s0, 308 <open+0x398>
    8c9c:	01 00 05 a8 	load_32 s0, 320(s1)
    8ca0:	a0 09 00 f2 	bz s0, 308 <open+0x3a0>
    8ca4:	1e 90 00 a8 	load_32 s0, 36(sp)
    8ca8:	00 40 05 a8 	load_32 s0, 336(s0)
    8cac:	80 09 00 f2 	bz s0, 304 <open+0x3a8>
    8cb0:	1e 90 00 a8 	load_32 s0, 36(sp)
    8cb4:	00 80 05 a8 	load_32 s0, 352(s0)
    8cb8:	60 09 00 f2 	bz s0, 300 <open+0x3b0>
    8cbc:	1e 90 00 a8 	load_32 s0, 36(sp)
    8cc0:	00 c0 05 a8 	load_32 s0, 368(s0)
    8cc4:	40 09 00 f2 	bz s0, 296 <open+0x3b8>
    8cc8:	1e 90 00 a8 	load_32 s0, 36(sp)
    8ccc:	00 00 06 a8 	load_32 s0, 384(s0)
    8cd0:	20 09 00 f2 	bz s0, 292 <open+0x3c0>
    8cd4:	1e 90 00 a8 	load_32 s0, 36(sp)
    8cd8:	00 40 06 a8 	load_32 s0, 400(s0)
    8cdc:	00 09 00 f2 	bz s0, 288 <open+0x3c8>
    8ce0:	1e 90 00 a8 	load_32 s0, 36(sp)
    8ce4:	00 80 06 a8 	load_32 s0, 416(s0)
    8ce8:	e0 08 00 f2 	bz s0, 284 <open+0x3d0>
    8cec:	1e 90 00 a8 	load_32 s0, 36(sp)
    8cf0:	00 c0 06 a8 	load_32 s0, 432(s0)
    8cf4:	c0 08 00 f2 	bz s0, 280 <open+0x3d8>
    8cf8:	1e 90 00 a8 	load_32 s0, 36(sp)
    8cfc:	00 00 07 a8 	load_32 s0, 448(s0)
    8d00:	a0 08 00 f2 	bz s0, 276 <open+0x3e0>
    8d04:	1e 90 00 a8 	load_32 s0, 36(sp)
    8d08:	00 40 07 a8 	load_32 s0, 464(s0)
    8d0c:	80 08 00 f2 	bz s0, 272 <open+0x3e8>
    8d10:	1e 90 00 a8 	load_32 s0, 36(sp)
    8d14:	00 80 07 a8 	load_32 s0, 480(s0)
    8d18:	60 08 00 f2 	bz s0, 268 <open+0x3f0>
    8d1c:	1e 90 00 a8 	load_32 s0, 36(sp)
    8d20:	00 c0 07 a8 	load_32 s0, 496(s0)
    8d24:	40 08 00 f2 	bz s0, 264 <open+0x3f8>
    8d28:	a9 01 00 f8 	call 1700 <__errno_ptr>
    8d2c:	20 60 00 0f 	move s1, 24
    8d30:	54 00 00 f6 	b 336 <open+0x44c>
    8d34:	00 00 00 0f 	move s0, 0
    8d38:	3e 00 00 f6 	b 248 <open+0x3fc>
    8d3c:	00 04 00 0f 	move s0, 1
    8d40:	3c 00 00 f6 	b 240 <open+0x3fc>
    8d44:	00 08 00 0f 	move s0, 2
    8d48:	3a 00 00 f6 	b 232 <open+0x3fc>
    8d4c:	00 0c 00 0f 	move s0, 3
    8d50:	38 00 00 f6 	b 224 <open+0x3fc>
    8d54:	00 10 00 0f 	move s0, 4
    8d58:	36 00 00 f6 	b 216 <open+0x3fc>
    8d5c:	00 14 00 0f 	move s0, 5
    8d60:	34 00 00 f6 	b 208 <open+0x3fc>
    8d64:	00 18 00 0f 	move s0, 6
    8d68:	32 00 00 f6 	b 200 <open+0x3fc>
    8d6c:	00 1c 00 0f 	move s0, 7
    8d70:	30 00 00 f6 	b 192 <open+0x3fc>
    8d74:	00 20 00 0f 	move s0, 8
    8d78:	2e 00 00 f6 	b 184 <open+0x3fc>
    8d7c:	00 24 00 0f 	move s0, 9
    8d80:	2c 00 00 f6 	b 176 <open+0x3fc>
    8d84:	00 28 00 0f 	move s0, 10
    8d88:	2a 00 00 f6 	b 168 <open+0x3fc>
    8d8c:	00 2c 00 0f 	move s0, 11
    8d90:	28 00 00 f6 	b 160 <open+0x3fc>
    8d94:	00 30 00 0f 	move s0, 12
    8d98:	26 00 00 f6 	b 152 <open+0x3fc>
    8d9c:	00 34 00 0f 	move s0, 13
    8da0:	24 00 00 f6 	b 144 <open+0x3fc>
    8da4:	00 38 00 0f 	move s0, 14
    8da8:	22 00 00 f6 	b 136 <open+0x3fc>
    8dac:	00 3c 00 0f 	move s0, 15
    8db0:	20 00 00 f6 	b 128 <open+0x3fc>
    8db4:	00 40 00 0f 	move s0, 16
    8db8:	1e 00 00 f6 	b 120 <open+0x3fc>
    8dbc:	00 44 00 0f 	move s0, 17
    8dc0:	1c 00 00 f6 	b 112 <open+0x3fc>
    8dc4:	00 48 00 0f 	move s0, 18
    8dc8:	1a 00 00 f6 	b 104 <open+0x3fc>
    8dcc:	00 4c 00 0f 	move s0, 19
    8dd0:	18 00 00 f6 	b 96 <open+0x3fc>
    8dd4:	00 50 00 0f 	move s0, 20
    8dd8:	16 00 00 f6 	b 88 <open+0x3fc>
    8ddc:	00 54 00 0f 	move s0, 21
    8de0:	14 00 00 f6 	b 80 <open+0x3fc>
    8de4:	00 58 00 0f 	move s0, 22
    8de8:	12 00 00 f6 	b 72 <open+0x3fc>
    8dec:	00 5c 00 0f 	move s0, 23
    8df0:	10 00 00 f6 	b 64 <open+0x3fc>
    8df4:	00 60 00 0f 	move s0, 24
    8df8:	0e 00 00 f6 	b 56 <open+0x3fc>
    8dfc:	00 64 00 0f 	move s0, 25
    8e00:	0c 00 00 f6 	b 48 <open+0x3fc>
    8e04:	00 68 00 0f 	move s0, 26
    8e08:	0a 00 00 f6 	b 40 <open+0x3fc>
    8e0c:	00 6c 00 0f 	move s0, 27
    8e10:	08 00 00 f6 	b 32 <open+0x3fc>
    8e14:	00 70 00 0f 	move s0, 28
    8e18:	06 00 00 f6 	b 24 <open+0x3fc>
    8e1c:	00 74 00 0f 	move s0, 29
    8e20:	04 00 00 f6 	b 16 <open+0x3fc>
    8e24:	00 78 00 0f 	move s0, 30
    8e28:	02 00 00 f6 	b 8 <open+0x3fc>
    8e2c:	00 7c 00 0f 	move s0, 31
    8e30:	1e 80 00 88 	store_32 s0, 32(sp)
    8e34:	06 00 00 4f 	movehi s0, 6
    8e38:	00 30 15 00 	or s0, s0, 1356
    8e3c:	00 03 00 a8 	load_32 s24, (s0)
    8e40:	78 13 00 a8 	load_32 s27, 4(s24)
    8e44:	bb 01 00 f2 	bz s27, 52 <open+0x444>
    8e48:	40 03 00 0f 	move s26, 0
    8e4c:	1a a0 00 07 	mull_i s0, s26, 40
    8e50:	3e a0 00 a8 	load_32 s1, 40(sp)
    8e54:	38 03 50 c0 	add_i s25, s24, s0
    8e58:	19 40 00 05 	add_i s0, s25, 16
    8e5c:	5d fd ff f9 	call -2700 <strcmp>
    8e60:	40 00 00 f4 	bnz s0, 8 <open+0x434>
    8e64:	0a 00 00 f6 	b 40 <open+0x458>
    8e68:	5a 07 00 05 	add_i s26, s26, 1
    8e6c:	1a 80 7d c1 	cmpge_u s0, s26, s27
    8e70:	40 00 00 f4 	bnz s0, 8 <open+0x444>
    8e74:	f6 ff ff f7 	b -40 <open+0x418>
    8e78:	55 01 00 f8 	call 1364 <__errno_ptr>
    8e7c:	20 08 00 0f 	move s1, 2
    8e80:	20 00 00 88 	store_32 s1, (s0)
    8e84:	00 fc ff 0f 	move s0, -1
    8e88:	0d 00 00 f6 	b 52 <open+0x488>
    8e8c:	1e 80 00 a8 	load_32 s0, 32(sp)
    8e90:	3e 90 00 a8 	load_32 s1, 36(sp)
    8e94:	40 10 00 0b 	shl s2, s0, 4
    8e98:	41 00 51 c0 	add_i s2, s1, s2
    8e9c:	20 04 00 0f 	move s1, 1
    8ea0:	22 00 00 88 	store_32 s1, (s2)
    8ea4:	39 30 00 a8 	load_32 s1, 12(s25)
    8ea8:	22 10 00 88 	store_32 s1, 4(s2)
    8eac:	39 20 00 a8 	load_32 s1, 8(s25)
    8eb0:	22 20 00 88 	store_32 s1, 8(s2)
    8eb4:	20 00 00 0f 	move s1, 0
    8eb8:	22 30 00 88 	store_32 s1, 12(s2)
    8ebc:	fe b3 08 a8 	load_32 ra, 556(sp)
    8ec0:	7e c3 08 a8 	load_32 s27, 560(sp)
    8ec4:	5e d3 08 a8 	load_32 s26, 564(sp)
    8ec8:	3e e3 08 a8 	load_32 s25, 568(sp)
    8ecc:	1e f3 08 a8 	load_32 s24, 572(sp)
    8ed0:	de 03 09 05 	add_i sp, sp, 576
    8ed4:	1f 00 00 f0 	ret

0000000000008ed8 close:
    8ed8:	de 03 ff 05 	add_i sp, sp, -64
    8edc:	fe f3 00 88 	store_32 ra, 60(sp)
    8ee0:	20 80 00 18 	cmplt_u s1, s0, 32
    8ee4:	01 01 00 f4 	bnz s1, 32 <close+0x2c>
    8ee8:	39 01 00 f8 	call 1252 <__errno_ptr>
    8eec:	20 24 00 0f 	move s1, 9
    8ef0:	20 00 00 88 	store_32 s1, (s0)
    8ef4:	00 fc ff 0f 	move s0, -1
    8ef8:	fe f3 00 a8 	load_32 ra, 60(sp)
    8efc:	de 03 01 05 	add_i sp, sp, 64
    8f00:	1f 00 00 f0 	ret
    8f04:	26 00 00 4f 	movehi s1, 6
    8f08:	00 10 00 0b 	shl s0, s0, 4
    8f0c:	21 30 0d 00 	or s1, s1, 844
    8f10:	21 00 50 c0 	add_i s1, s1, s0
    8f14:	00 00 00 0f 	move s0, 0
    8f18:	01 00 00 88 	store_32 s0, (s1)
    8f1c:	fe f3 00 a8 	load_32 ra, 60(sp)
    8f20:	de 03 01 05 	add_i sp, sp, 64
    8f24:	1f 00 00 f0 	ret

0000000000008f28 read:
    8f28:	de 03 f7 05 	add_i sp, sp, -576
    8f2c:	1e f3 08 88 	store_32 s24, 572(sp)
    8f30:	3e e3 08 88 	store_32 s25, 568(sp)
    8f34:	5e d3 08 88 	store_32 s26, 564(sp)
    8f38:	7e c3 08 88 	store_32 s27, 560(sp)
    8f3c:	fe b3 08 88 	store_32 ra, 556(sp)
    8f40:	60 80 00 18 	cmplt_u s3, s0, 32
    8f44:	43 00 00 f4 	bnz s3, 8 <read+0x24>
    8f48:	6a 00 00 f6 	b 424 <read+0x1c8>
    8f4c:	66 00 00 4f 	movehi s3, 6
    8f50:	00 10 00 0b 	shl s0, s0, 4
    8f54:	63 30 0d 00 	or s3, s3, 844
    8f58:	a3 00 50 c0 	add_i s5, s3, s0
    8f5c:	05 00 00 a8 	load_32 s0, (s5)
    8f60:	40 00 00 f4 	bnz s0, 8 <read+0x40>
    8f64:	63 00 00 f6 	b 396 <read+0x1c8>
    8f68:	65 10 00 a8 	load_32 s3, 4(s5)
    8f6c:	85 30 00 a8 	load_32 s4, 12(s5)
    8f70:	03 00 62 c0 	sub_i s0, s3, s4
    8f74:	60 04 00 14 	cmplt_i s3, s0, 1
    8f78:	23 0d 00 f4 	bnz s3, 420 <read+0x1f4>
    8f7c:	60 00 81 c1 	cmplt_u s3, s0, s2
    8f80:	43 00 00 f4 	bnz s3, 8 <read+0x60>
    8f84:	00 00 f1 c0 	move s0, s2
    8f88:	45 30 00 05 	add_i s2, s5, 12
    8f8c:	c0 0a 00 f2 	bz s0, 344 <read+0x1bc>
    8f90:	5e 30 00 88 	store_32 s2, 12(sp)
    8f94:	04 ff 07 01 	and s24, s4, 511
    8f98:	3e 80 00 88 	store_32 s1, 32(sp)
    8f9c:	20 03 00 0f 	move s25, 0
    8fa0:	25 20 00 a8 	load_32 s1, 8(s5)
    8fa4:	21 00 52 c0 	add_i s1, s1, s4
    8fa8:	41 7c 00 09 	ashr s2, s1, 31
    8fac:	42 5c 00 0a 	shr s2, s2, 23
    8fb0:	21 00 51 c0 	add_i s1, s1, s2
    8fb4:	40 00 08 0f 	move s2, 512
    8fb8:	41 27 00 09 	ashr s26, s1, 9
    8fbc:	26 00 00 4f 	movehi s1, 6
    8fc0:	21 10 0d 00 	or s1, s1, 836
    8fc4:	3e 90 00 88 	store_32 s1, 36(sp)
    8fc8:	20 00 04 4f 	movehi s1, 8192
    8fcc:	3e 40 00 88 	store_32 s1, 16(sp)
    8fd0:	3e b0 00 05 	add_i s1, sp, 44
    8fd4:	3e 70 00 88 	store_32 s1, 28(sp)
    8fd8:	3e 53 00 88 	store_32 s25, 20(sp)
    8fdc:	1e 60 00 88 	store_32 s0, 24(sp)
    8fe0:	5e a0 00 88 	store_32 s2, 40(sp)
    8fe4:	60 83 6c c0 	sub_i s27, s0, s25
    8fe8:	f8 01 00 f4 	bnz s24, 60 <read+0xfc>
    8fec:	1b 00 08 18 	cmplt_u s0, s27, 512
    8ff0:	a0 01 00 f4 	bnz s0, 52 <read+0xfc>
    8ff4:	1e 90 00 a8 	load_32 s0, 36(sp)
    8ff8:	00 00 00 a0 	load_u8 s0, (s0)
    8ffc:	3e 80 00 a8 	load_32 s1, 32(sp)
    9000:	00 04 00 11 	cmpne_i s0, s0, 1
    9004:	61 80 5c c0 	add_i s3, s1, s25
    9008:	00 05 00 f4 	bnz s0, 160 <read+0x180>
    900c:	3e 40 00 a8 	load_32 s1, 16(sp)
    9010:	1a 24 00 0b 	shl s0, s26, 9
    9014:	20 80 50 c0 	add_i s1, s0, s1
    9018:	00 80 f1 c0 	move s0, s3
    901c:	7f fa ff f9 	call -5636 <memcpy>
    9020:	28 00 00 f6 	b 160 <read+0x198>
    9024:	1e 90 00 a8 	load_32 s0, 36(sp)
    9028:	00 00 00 a0 	load_u8 s0, (s0)
    902c:	00 04 00 11 	cmpne_i s0, s0, 1
    9030:	60 01 00 f4 	bnz s0, 44 <read+0x134>
    9034:	3e 40 00 a8 	load_32 s1, 16(sp)
    9038:	1a 24 00 0b 	shl s0, s26, 9
    903c:	20 80 50 c0 	add_i s1, s0, s1
    9040:	1e 70 00 a8 	load_32 s0, 28(sp)
    9044:	75 fa ff f9 	call -5676 <memcpy>
    9048:	1e a0 00 a8 	load_32 s0, 40(sp)
    904c:	00 00 6c c0 	sub_i s0, s0, s24
    9050:	20 80 6d c1 	cmpgt_u s1, s0, s27
    9054:	a1 01 00 f4 	bnz s1, 52 <read+0x160>
    9058:	0b 00 00 f6 	b 44 <read+0x15c>
    905c:	00 00 fd c0 	move s0, s26
    9060:	3e 70 00 a8 	load_32 s1, 28(sp)
    9064:	15 02 00 f8 	call 2132 <read_sdmmc_device>
    9068:	00 00 00 12 	cmpgt_i s0, s0, 0
    906c:	40 00 00 f4 	bnz s0, 8 <read+0x14c>
    9070:	2d 00 00 f6 	b 180 <read+0x1fc>
    9074:	1e a0 00 a8 	load_32 s0, 40(sp)
    9078:	00 00 6c c0 	sub_i s0, s0, s24
    907c:	20 80 6d c1 	cmpgt_u s1, s0, s27
    9080:	41 00 00 f4 	bnz s1, 8 <read+0x160>
    9084:	60 03 f0 c0 	move s27, s0
    9088:	1e 80 00 a8 	load_32 s0, 32(sp)
    908c:	3e 70 00 a8 	load_32 s1, 28(sp)
    9090:	40 80 fd c0 	move s2, s27
    9094:	00 80 5c c0 	add_i s0, s0, s25
    9098:	21 00 5c c0 	add_i s1, s1, s24
    909c:	5f fa ff f9 	call -5764 <memcpy>
    90a0:	3b 83 5c c0 	add_i s25, s27, s25
    90a4:	08 00 00 f6 	b 32 <read+0x19c>
    90a8:	00 00 fd c0 	move s0, s26
    90ac:	20 80 f1 c0 	move s1, s3
    90b0:	02 02 00 f8 	call 2056 <read_sdmmc_device>
    90b4:	00 00 00 12 	cmpgt_i s0, s0, 0
    90b8:	40 00 00 f4 	bnz s0, 8 <read+0x198>
    90bc:	1a 00 00 f6 	b 104 <read+0x1fc>
    90c0:	39 03 08 05 	add_i s25, s25, 512
    90c4:	1e 60 00 a8 	load_32 s0, 24(sp)
    90c8:	5a 07 00 05 	add_i s26, s26, 1
    90cc:	1e 53 00 a8 	load_32 s24, 20(sp)
    90d0:	5e a0 00 a8 	load_32 s2, 40(sp)
    90d4:	20 80 6c c1 	cmpgt_u s1, s0, s25
    90d8:	61 f8 ff f5 	bnz s1, -244 <read+0xbc>
    90dc:	5e 30 00 a8 	load_32 s2, 12(sp)
    90e0:	82 00 00 a8 	load_32 s4, (s2)
    90e4:	24 00 50 c0 	add_i s1, s4, s0
    90e8:	22 00 00 88 	store_32 s1, (s2)
    90ec:	05 00 00 f6 	b 20 <read+0x1d8>
    90f0:	b7 00 00 f8 	call 732 <__errno_ptr>
    90f4:	20 24 00 0f 	move s1, 9
    90f8:	20 00 00 88 	store_32 s1, (s0)
    90fc:	00 fc ff 0f 	move s0, -1
    9100:	fe b3 08 a8 	load_32 ra, 556(sp)
    9104:	7e c3 08 a8 	load_32 s27, 560(sp)
    9108:	5e d3 08 a8 	load_32 s26, 564(sp)
    910c:	3e e3 08 a8 	load_32 s25, 568(sp)
    9110:	1e f3 08 a8 	load_32 s24, 572(sp)
    9114:	de 03 09 05 	add_i sp, sp, 576
    9118:	1f 00 00 f0 	ret
    911c:	00 00 00 0f 	move s0, 0
    9120:	f8 ff ff f7 	b -32 <read+0x1d8>
    9124:	aa 00 00 f8 	call 680 <__errno_ptr>
    9128:	20 14 00 0f 	move s1, 5
    912c:	f3 ff ff f7 	b -52 <read+0x1d0>

0000000000009130 write:
    9130:	de 03 ff 05 	add_i sp, sp, -64
    9134:	fe f3 00 88 	store_32 ra, 60(sp)
    9138:	a5 00 00 f8 	call 660 <__errno_ptr>
    913c:	20 fc ff 0f 	move s1, -1
    9140:	40 04 00 0f 	move s2, 1
    9144:	40 00 00 88 	store_32 s2, (s0)
    9148:	00 80 f0 c0 	move s0, s1
    914c:	fe f3 00 a8 	load_32 ra, 60(sp)
    9150:	de 03 01 05 	add_i sp, sp, 64
    9154:	1f 00 00 f0 	ret

0000000000009158 lseek:
    9158:	de 03 ff 05 	add_i sp, sp, -64
    915c:	fe f3 00 88 	store_32 ra, 60(sp)
    9160:	60 00 f0 c0 	move s3, s0
    9164:	00 80 f0 c0 	move s0, s1
    9168:	83 80 00 18 	cmplt_u s4, s3, 32
    916c:	44 00 00 f4 	bnz s4, 8 <lseek+0x1c>
    9170:	11 00 00 f6 	b 68 <lseek+0x5c>
    9174:	26 00 00 4f 	movehi s1, 6
    9178:	63 10 00 0b 	shl s3, s3, 4
    917c:	21 30 0d 00 	or s1, s1, 844
    9180:	21 80 51 c0 	add_i s1, s1, s3
    9184:	61 00 00 a8 	load_32 s3, (s1)
    9188:	43 00 00 f4 	bnz s3, 8 <lseek+0x38>
    918c:	0a 00 00 f6 	b 40 <lseek+0x5c>
    9190:	62 08 00 10 	cmpeq_i s3, s2, 2
    9194:	e3 01 00 f4 	bnz s3, 60 <lseek+0x78>
    9198:	62 04 00 10 	cmpeq_i s3, s2, 1
    919c:	63 02 00 f4 	bnz s3, 76 <lseek+0x90>
    91a0:	42 00 00 f4 	bnz s2, 8 <lseek+0x50>
    91a4:	0d 00 00 f6 	b 52 <lseek+0x80>
    91a8:	89 00 00 f8 	call 548 <__errno_ptr>
    91ac:	20 58 00 0f 	move s1, 22
    91b0:	03 00 00 f6 	b 12 <lseek+0x64>
    91b4:	86 00 00 f8 	call 536 <__errno_ptr>
    91b8:	20 24 00 0f 	move s1, 9
    91bc:	20 00 00 88 	store_32 s1, (s0)
    91c0:	00 fc ff 0f 	move s0, -1
    91c4:	fe f3 00 a8 	load_32 ra, 60(sp)
    91c8:	de 03 01 05 	add_i sp, sp, 64
    91cc:	1f 00 00 f0 	ret
    91d0:	41 10 00 a8 	load_32 s2, 4(s1)
    91d4:	02 00 60 c0 	sub_i s0, s2, s0
    91d8:	40 fc ff 12 	cmpgt_i s2, s0, -1
    91dc:	01 30 00 88 	store_32 s0, 12(s1)
    91e0:	22 ff ff f5 	bnz s2, -28 <lseek+0x6c>
    91e4:	06 00 00 f6 	b 24 <lseek+0xa4>
    91e8:	41 30 00 a8 	load_32 s2, 12(s1)
    91ec:	02 00 50 c0 	add_i s0, s2, s0
    91f0:	40 fc ff 12 	cmpgt_i s2, s0, -1
    91f4:	01 30 00 88 	store_32 s0, 12(s1)
    91f8:	62 fe ff f5 	bnz s2, -52 <lseek+0x6c>
    91fc:	00 00 00 0f 	move s0, 0
    9200:	01 30 00 88 	store_32 s0, 12(s1)
    9204:	fe f3 00 a8 	load_32 ra, 60(sp)
    9208:	de 03 01 05 	add_i sp, sp, 64
    920c:	1f 00 00 f0 	ret

0000000000009210 stat:
    9210:	de 03 ff 05 	add_i sp, sp, -64
    9214:	1e f3 00 88 	store_32 s24, 60(sp)
    9218:	3e e3 00 88 	store_32 s25, 56(sp)
    921c:	5e d3 00 88 	store_32 s26, 52(sp)
    9220:	7e c3 00 88 	store_32 s27, 48(sp)
    9224:	fe b3 00 88 	store_32 ra, 44(sp)
    9228:	46 00 00 4f 	movehi s2, 6
    922c:	42 30 15 00 	or s2, s2, 1356
    9230:	42 03 00 a8 	load_32 s26, (s2)
    9234:	7a 13 00 a8 	load_32 s27, 4(s26)
    9238:	3e 90 00 88 	store_32 s1, 36(sp)
    923c:	1e a0 00 88 	store_32 s0, 40(sp)
    9240:	9b 01 00 f2 	bz s27, 48 <stat+0x60>
    9244:	00 03 00 0f 	move s24, 0
    9248:	18 a0 00 07 	mull_i s0, s24, 40
    924c:	3e a0 00 a8 	load_32 s1, 40(sp)
    9250:	3a 03 50 c0 	add_i s25, s26, s0
    9254:	19 40 00 05 	add_i s0, s25, 16
    9258:	5e fc ff f9 	call -3720 <strcmp>
    925c:	40 01 00 f2 	bz s0, 40 <stat+0x74>
    9260:	18 07 00 05 	add_i s24, s24, 1
    9264:	18 80 7d c1 	cmpge_u s0, s24, s27
    9268:	40 00 00 f4 	bnz s0, 8 <stat+0x60>
    926c:	f7 ff ff f7 	b -36 <stat+0x38>
    9270:	57 00 00 f8 	call 348 <__errno_ptr>
    9274:	20 08 00 0f 	move s1, 2
    9278:	20 00 00 88 	store_32 s1, (s0)
    927c:	00 fc ff 0f 	move s0, -1
    9280:	05 00 00 f6 	b 20 <stat+0x84>
    9284:	19 30 00 a8 	load_32 s0, 12(s25)
    9288:	3e 90 00 a8 	load_32 s1, 36(sp)
    928c:	01 00 00 88 	store_32 s0, (s1)
    9290:	00 00 00 0f 	move s0, 0
    9294:	fe b3 00 a8 	load_32 ra, 44(sp)
    9298:	7e c3 00 a8 	load_32 s27, 48(sp)
    929c:	5e d3 00 a8 	load_32 s26, 52(sp)
    92a0:	3e e3 00 a8 	load_32 s25, 56(sp)
    92a4:	1e f3 00 a8 	load_32 s24, 60(sp)
    92a8:	de 03 01 05 	add_i sp, sp, 64
    92ac:	1f 00 00 f0 	ret

00000000000092b0 fstat:
    92b0:	de 03 ff 05 	add_i sp, sp, -64
    92b4:	fe f3 00 88 	store_32 ra, 60(sp)
    92b8:	40 80 00 18 	cmplt_u s2, s0, 32
    92bc:	42 00 00 f4 	bnz s2, 8 <fstat+0x14>
    92c0:	0e 00 00 f6 	b 56 <fstat+0x48>
    92c4:	46 00 00 4f 	movehi s2, 6
    92c8:	00 10 00 0b 	shl s0, s0, 4
    92cc:	42 30 0d 00 	or s2, s2, 844
    92d0:	02 00 50 c0 	add_i s0, s2, s0
    92d4:	40 00 00 a8 	load_32 s2, (s0)
    92d8:	42 00 00 f4 	bnz s2, 8 <fstat+0x30>
    92dc:	07 00 00 f6 	b 28 <fstat+0x48>
    92e0:	00 10 00 a8 	load_32 s0, 4(s0)
    92e4:	01 00 00 88 	store_32 s0, (s1)
    92e8:	00 00 00 0f 	move s0, 0
    92ec:	fe f3 00 a8 	load_32 ra, 60(sp)
    92f0:	de 03 01 05 	add_i sp, sp, 64
    92f4:	1f 00 00 f0 	ret
    92f8:	35 00 00 f8 	call 212 <__errno_ptr>
    92fc:	20 24 00 0f 	move s1, 9
    9300:	20 00 00 88 	store_32 s1, (s0)
    9304:	00 fc ff 0f 	move s0, -1
    9308:	fe f3 00 a8 	load_32 ra, 60(sp)
    930c:	de 03 01 05 	add_i sp, sp, 64
    9310:	1f 00 00 f0 	ret

0000000000009314 access:
    9314:	de 03 ff 05 	add_i sp, sp, -64
    9318:	1e f3 00 88 	store_32 s24, 60(sp)
    931c:	3e e3 00 88 	store_32 s25, 56(sp)
    9320:	5e d3 00 88 	store_32 s26, 52(sp)
    9324:	7e c3 00 88 	store_32 s27, 48(sp)
    9328:	fe b3 00 88 	store_32 ra, 44(sp)
    932c:	46 00 00 4f 	movehi s2, 6
    9330:	40 0b 00 0f 	move s26, 2
    9334:	42 30 15 00 	or s2, s2, 1356
    9338:	62 03 00 a8 	load_32 s27, (s2)
    933c:	1b 13 00 a8 	load_32 s24, 4(s27)
    9340:	20 03 f0 c0 	move s25, s0
    9344:	18 03 00 f2 	bz s24, 96 <access+0x90>
    9348:	3e 90 00 88 	store_32 s1, 36(sp)
    934c:	5e a3 00 88 	store_32 s26, 40(sp)
    9350:	40 03 00 0f 	move s26, 0
    9354:	1a a0 00 07 	mull_i s0, s26, 40
    9358:	1b 00 50 c0 	add_i s0, s27, s0
    935c:	20 80 fc c0 	move s1, s25
    9360:	00 40 00 05 	add_i s0, s0, 16
    9364:	1b fc ff f9 	call -3988 <strcmp>
    9368:	40 00 00 f4 	bnz s0, 8 <access+0x5c>
    936c:	07 00 00 f6 	b 28 <access+0x74>
    9370:	5a 07 00 05 	add_i s26, s26, 1
    9374:	1a 00 7c c1 	cmpge_u s0, s26, s24
    9378:	40 00 00 f4 	bnz s0, 8 <access+0x6c>
    937c:	f6 ff ff f7 	b -40 <access+0x40>
    9380:	5e a3 00 a8 	load_32 s26, 40(sp)
    9384:	08 00 00 f6 	b 32 <access+0x90>
    9388:	1e 90 00 a8 	load_32 s0, 36(sp)
    938c:	00 08 00 01 	and s0, s0, 2
    9390:	40 00 00 f2 	bz s0, 8 <access+0x84>
    9394:	03 00 00 f6 	b 12 <access+0x8c>
    9398:	00 00 00 0f 	move s0, 0
    939c:	05 00 00 f6 	b 20 <access+0x9c>
    93a0:	40 07 00 0f 	move s26, 1
    93a4:	0a 00 00 f8 	call 40 <__errno_ptr>
    93a8:	40 03 00 88 	store_32 s26, (s0)
    93ac:	00 fc ff 0f 	move s0, -1
    93b0:	fe b3 00 a8 	load_32 ra, 44(sp)
    93b4:	7e c3 00 a8 	load_32 s27, 48(sp)
    93b8:	5e d3 00 a8 	load_32 s26, 52(sp)
    93bc:	3e e3 00 a8 	load_32 s25, 56(sp)
    93c0:	1e f3 00 a8 	load_32 s24, 60(sp)
    93c4:	de 03 01 05 	add_i sp, sp, 64
    93c8:	1f 00 00 f0 	ret

00000000000093cc __errno_ptr:
    93cc:	de 03 ff 05 	add_i sp, sp, -64
    93d0:	fe f3 00 88 	store_32 ra, 60(sp)
    93d4:	13 00 00 f8 	call 76 <get_current_thread_id>
    93d8:	26 00 00 4f 	movehi s1, 6
    93dc:	fe f3 00 a8 	load_32 ra, 60(sp)
    93e0:	00 08 00 0b 	shl s0, s0, 2
    93e4:	21 50 00 00 	or s1, s1, 20
    93e8:	01 00 50 c0 	add_i s0, s1, s0
    93ec:	de 03 01 05 	add_i sp, sp, 64
    93f0:	1f 00 00 f0 	ret

00000000000093f4 usleep:
    93f4:	26 00 00 ac 	getcr s1, 6
    93f8:	00 c8 00 07 	mull_i s0, s0, 50
    93fc:	01 00 50 c0 	add_i s0, s1, s0
    9400:	26 00 00 ac 	getcr s1, 6
    9404:	21 00 40 c1 	cmplt_i s1, s1, s0
    9408:	c1 ff ff f5 	bnz s1, -8 <usleep+0xc>
    940c:	00 00 00 0f 	move s0, 0
    9410:	1f 00 00 f0 	ret

0000000000009414 exit:
    9414:	00 fc ff 0f 	move s0, -1
    9418:	14 00 00 8c 	setcr s0, 20
    941c:	00 00 00 f6 	b 0 <exit+0x8>

0000000000009420 get_current_thread_id:
    9420:	00 00 00 ac 	getcr s0, 0
    9424:	1f 00 00 f0 	ret

0000000000009428 get_cycle_count:
    9428:	06 00 00 ac 	getcr s0, 6
    942c:	1f 00 00 f0 	ret

0000000000009430 init_sdmmc_device:
    9430:	de 03 fe 05 	add_i sp, sp, -128
    9434:	1e f3 01 88 	store_32 s24, 124(sp)
    9438:	3e e3 01 88 	store_32 s25, 120(sp)
    943c:	5e d3 01 88 	store_32 s26, 116(sp)
    9440:	7e c3 01 88 	store_32 s27, 112(sp)
    9444:	fe b3 01 88 	store_32 ra, 108(sp)
    9448:	18 fc ff 4f 	movehi s0, 524280
    944c:	20 f0 01 0f 	move s1, 124
    9450:	40 ff 03 0f 	move s26, 255
    9454:	40 40 03 00 	or s2, s0, 208
    9458:	5e a0 01 88 	store_32 s2, 104(sp)
    945c:	20 03 03 00 	or s25, s0, 192
    9460:	00 23 03 00 	or s24, s0, 200
    9464:	22 00 00 88 	store_32 s1, (s2)
    9468:	20 30 03 00 	or s1, s0, 204
    946c:	40 04 00 0f 	move s2, 1
    9470:	41 00 00 88 	store_32 s2, (s1)
    9474:	59 03 00 88 	store_32 s26, (s25)
    9478:	58 00 00 a8 	load_32 s2, (s24)
    947c:	42 04 00 01 	and s2, s2, 1
    9480:	c2 ff ff f3 	bz s2, -8 <init_sdmmc_device+0x48>
    9484:	60 13 03 00 	or s27, s0, 196
    9488:	1b 00 00 a8 	load_32 s0, (s27)
    948c:	59 03 00 88 	store_32 s26, (s25)
    9490:	18 00 00 a8 	load_32 s0, (s24)
    9494:	00 04 00 01 	and s0, s0, 1
    9498:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x60>
    949c:	1b 00 00 a8 	load_32 s0, (s27)
    94a0:	59 03 00 88 	store_32 s26, (s25)
    94a4:	18 00 00 a8 	load_32 s0, (s24)
    94a8:	00 04 00 01 	and s0, s0, 1
    94ac:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x74>
    94b0:	1b 00 00 a8 	load_32 s0, (s27)
    94b4:	59 03 00 88 	store_32 s26, (s25)
    94b8:	18 00 00 a8 	load_32 s0, (s24)
    94bc:	00 04 00 01 	and s0, s0, 1
    94c0:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x88>
    94c4:	1b 00 00 a8 	load_32 s0, (s27)
    94c8:	59 03 00 88 	store_32 s26, (s25)
    94cc:	18 00 00 a8 	load_32 s0, (s24)
    94d0:	00 04 00 01 	and s0, s0, 1
    94d4:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x9c>
    94d8:	1b 00 00 a8 	load_32 s0, (s27)
    94dc:	59 03 00 88 	store_32 s26, (s25)
    94e0:	18 00 00 a8 	load_32 s0, (s24)
    94e4:	00 04 00 01 	and s0, s0, 1
    94e8:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xb0>
    94ec:	1b 00 00 a8 	load_32 s0, (s27)
    94f0:	59 03 00 88 	store_32 s26, (s25)
    94f4:	18 00 00 a8 	load_32 s0, (s24)
    94f8:	00 04 00 01 	and s0, s0, 1
    94fc:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xc4>
    9500:	1b 00 00 a8 	load_32 s0, (s27)
    9504:	59 03 00 88 	store_32 s26, (s25)
    9508:	18 00 00 a8 	load_32 s0, (s24)
    950c:	00 04 00 01 	and s0, s0, 1
    9510:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xd8>
    9514:	1b 00 00 a8 	load_32 s0, (s27)
    9518:	59 03 00 88 	store_32 s26, (s25)
    951c:	18 00 00 a8 	load_32 s0, (s24)
    9520:	00 04 00 01 	and s0, s0, 1
    9524:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0xec>
    9528:	1b 00 00 a8 	load_32 s0, (s27)
    952c:	59 03 00 88 	store_32 s26, (s25)
    9530:	18 00 00 a8 	load_32 s0, (s24)
    9534:	00 04 00 01 	and s0, s0, 1
    9538:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x100>
    953c:	1b 00 00 a8 	load_32 s0, (s27)
    9540:	00 00 00 0f 	move s0, 0
    9544:	01 00 00 88 	store_32 s0, (s1)
    9548:	20 00 f0 c0 	move s1, s0
    954c:	8d 00 00 f8 	call 564 <send_sd_command>
    9550:	20 04 00 10 	cmpeq_i s1, s0, 1
    9554:	01 01 00 f4 	bnz s1, 32 <init_sdmmc_device+0x144>
    9558:	20 fc 03 10 	cmpeq_i s1, s0, 255
    955c:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x134>
    9560:	62 00 00 f6 	b 392 <init_sdmmc_device+0x2b8>
    9564:	00 00 00 4f 	movehi s0, 0
    9568:	00 f4 11 00 	or s0, s0, 1149
    956c:	99 e5 ff f9 	call -27036 <puts>
    9570:	6b 00 00 f6 	b 428 <init_sdmmc_device+0x2ec>
    9574:	00 20 00 0f 	move s0, 8
    9578:	20 68 05 0f 	move s1, 346
    957c:	81 00 00 f8 	call 516 <send_sd_command>
    9580:	20 04 00 10 	cmpeq_i s1, s0, 1
    9584:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x15c>
    9588:	5c 00 00 f6 	b 368 <init_sdmmc_device+0x2c8>
    958c:	59 03 00 88 	store_32 s26, (s25)
    9590:	18 00 00 a8 	load_32 s0, (s24)
    9594:	00 04 00 01 	and s0, s0, 1
    9598:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x160>
    959c:	1b 00 00 a8 	load_32 s0, (s27)
    95a0:	59 03 00 88 	store_32 s26, (s25)
    95a4:	18 00 00 a8 	load_32 s0, (s24)
    95a8:	00 04 00 01 	and s0, s0, 1
    95ac:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x174>
    95b0:	1b 00 00 a8 	load_32 s0, (s27)
    95b4:	59 03 00 88 	store_32 s26, (s25)
    95b8:	18 00 00 a8 	load_32 s0, (s24)
    95bc:	00 04 00 01 	and s0, s0, 1
    95c0:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x188>
    95c4:	1b 00 00 a8 	load_32 s0, (s27)
    95c8:	20 3c 00 01 	and s1, s0, 15
    95cc:	21 04 00 10 	cmpeq_i s1, s1, 1
    95d0:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x1a8>
    95d4:	4d 00 00 f6 	b 308 <init_sdmmc_device+0x2d8>
    95d8:	59 03 00 88 	store_32 s26, (s25)
    95dc:	18 00 00 a8 	load_32 s0, (s24)
    95e0:	00 04 00 01 	and s0, s0, 1
    95e4:	c0 ff ff f3 	bz s0, -8 <init_sdmmc_device+0x1ac>
    95e8:	1b 00 00 a8 	load_32 s0, (s27)
    95ec:	00 68 01 11 	cmpne_i s0, s0, 90
    95f0:	60 0a 00 f4 	bnz s0, 332 <init_sdmmc_device+0x30c>
    95f4:	20 00 00 0f 	move s1, 0
    95f8:	3e 80 01 88 	store_32 s1, 96(sp)
    95fc:	00 dc 00 0f 	move s0, 55
    9600:	60 00 00 f8 	call 384 <send_sd_command>
    9604:	20 04 00 11 	cmpne_i s1, s0, 1
    9608:	81 06 00 f4 	bnz s1, 208 <init_sdmmc_device+0x2a8>
    960c:	00 a4 00 0f 	move s0, 41
    9610:	1e 70 01 88 	store_32 s0, 92(sp)
    9614:	00 fc 40 4f 	movehi s0, 133088
    9618:	1e 60 01 88 	store_32 s0, 88(sp)
    961c:	00 dc 00 0f 	move s0, 55
    9620:	1e 50 01 88 	store_32 s0, 84(sp)
    9624:	1e 80 01 a8 	load_32 s0, 96(sp)
    9628:	1e 90 01 88 	store_32 s0, 100(sp)
    962c:	1e 70 01 a8 	load_32 s0, 92(sp)
    9630:	3e 60 01 a8 	load_32 s1, 88(sp)
    9634:	53 00 00 f8 	call 332 <send_sd_command>
    9638:	59 03 00 88 	store_32 s26, (s25)
    963c:	38 00 00 a8 	load_32 s1, (s24)
    9640:	21 04 00 01 	and s1, s1, 1
    9644:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x20c>
    9648:	3b 00 00 a8 	load_32 s1, (s27)
    964c:	59 03 00 88 	store_32 s26, (s25)
    9650:	7e 80 01 a8 	load_32 s3, 96(sp)
    9654:	38 00 00 a8 	load_32 s1, (s24)
    9658:	21 04 00 01 	and s1, s1, 1
    965c:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x224>
    9660:	3b 00 00 a8 	load_32 s1, (s27)
    9664:	59 03 00 88 	store_32 s26, (s25)
    9668:	38 00 00 a8 	load_32 s1, (s24)
    966c:	21 04 00 01 	and s1, s1, 1
    9670:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x238>
    9674:	3b 00 00 a8 	load_32 s1, (s27)
    9678:	59 03 00 88 	store_32 s26, (s25)
    967c:	38 00 00 a8 	load_32 s1, (s24)
    9680:	21 04 00 01 	and s1, s1, 1
    9684:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x24c>
    9688:	3b 00 00 a8 	load_32 s1, (s27)
    968c:	59 03 00 88 	store_32 s26, (s25)
    9690:	38 00 00 a8 	load_32 s1, (s24)
    9694:	21 04 00 01 	and s1, s1, 1
    9698:	c1 ff ff f3 	bz s1, -8 <init_sdmmc_device+0x260>
    969c:	20 04 00 10 	cmpeq_i s1, s0, 1
    96a0:	5b 00 00 a8 	load_32 s2, (s27)
    96a4:	41 00 00 f4 	bnz s1, 8 <init_sdmmc_device+0x27c>
    96a8:	28 00 00 f6 	b 160 <init_sdmmc_device+0x318>
    96ac:	3e 90 01 a8 	load_32 s1, 100(sp)
    96b0:	01 90 01 11 	cmpne_i s0, s1, 100
    96b4:	40 00 00 f4 	bnz s0, 8 <init_sdmmc_device+0x28c>
    96b8:	2b 00 00 f6 	b 172 <init_sdmmc_device+0x334>
    96bc:	21 04 00 05 	add_i s1, s1, 1
    96c0:	3e 90 01 88 	store_32 s1, 100(sp)
    96c4:	1e 50 01 a8 	load_32 s0, 84(sp)
    96c8:	20 80 f1 c0 	move s1, s3
    96cc:	2d 00 00 f8 	call 180 <send_sd_command>
    96d0:	20 04 00 10 	cmpeq_i s1, s0, 1
    96d4:	c1 fa ff f5 	bnz s1, -168 <init_sdmmc_device+0x1fc>
    96d8:	20 00 00 4f 	movehi s1, 0
    96dc:	1e 10 00 88 	store_32 s0, 4(sp)
    96e0:	01 88 13 00 	or s0, s1, 1250
    96e4:	0c 00 00 f6 	b 48 <init_sdmmc_device+0x2e4>
    96e8:	20 00 00 4f 	movehi s1, 0
    96ec:	1e 10 00 88 	store_32 s0, 4(sp)
    96f0:	01 e8 0c 00 	or s0, s1, 826
    96f4:	08 00 00 f6 	b 32 <init_sdmmc_device+0x2e4>
    96f8:	20 00 00 4f 	movehi s1, 0
    96fc:	1e 10 00 88 	store_32 s0, 4(sp)
    9700:	01 c0 0b 00 	or s0, s1, 752
    9704:	04 00 00 f6 	b 16 <init_sdmmc_device+0x2e4>
    9708:	20 00 00 4f 	movehi s1, 0
    970c:	1e 10 00 88 	store_32 s0, 4(sp)
    9710:	01 44 0a 00 	or s0, s1, 657
    9714:	1e 00 00 88 	store_32 s0, (sp)
    9718:	50 e4 ff f9 	call -28352 <printf>
    971c:	00 fc ff 0f 	move s0, -1
    9720:	fe b3 01 a8 	load_32 ra, 108(sp)
    9724:	7e c3 01 a8 	load_32 s27, 112(sp)
    9728:	5e d3 01 a8 	load_32 s26, 116(sp)
    972c:	3e e3 01 a8 	load_32 s25, 120(sp)
    9730:	1e f3 01 a8 	load_32 s24, 124(sp)
    9734:	de 03 02 05 	add_i sp, sp, 128
    9738:	1f 00 00 f0 	ret
    973c:	00 00 00 4f 	movehi s0, 0
    9740:	00 64 0c 00 	or s0, s0, 793
    9744:	8a ff ff f7 	b -472 <init_sdmmc_device+0x13c>
    9748:	40 00 00 f2 	bz s0, 8 <init_sdmmc_device+0x320>
    974c:	09 00 00 f6 	b 36 <init_sdmmc_device+0x340>
    9750:	3e a0 01 a8 	load_32 s1, 104(sp)
    9754:	00 10 00 0f 	move s0, 4
    9758:	01 00 00 88 	store_32 s0, (s1)
    975c:	00 00 00 0f 	move s0, 0
    9760:	f0 ff ff f7 	b -64 <init_sdmmc_device+0x2f0>
    9764:	00 00 00 4f 	movehi s0, 0
    9768:	00 e0 0a 00 	or s0, s0, 696
    976c:	80 ff ff f7 	b -512 <init_sdmmc_device+0x13c>
    9770:	20 00 00 4f 	movehi s1, 0
    9774:	1e 10 00 88 	store_32 s0, 4(sp)
    9778:	01 20 09 00 	or s0, s1, 584
    977c:	e6 ff ff f7 	b -104 <init_sdmmc_device+0x2e4>

0000000000009780 send_sd_command:
    9780:	40 00 00 4f 	movehi s2, 0
    9784:	00 00 01 00 	or s0, s0, 64
    9788:	e1 60 00 0a 	shr s7, s1, 24
    978c:	42 a0 18 00 	or s2, s2, 1576
    9790:	00 fd 03 01 	and s8, s0, 255
    9794:	61 40 00 0a 	shr s3, s1, 16
    9798:	02 00 54 c0 	add_i s0, s2, s8
    979c:	81 fc 03 01 	and s4, s1, 255
    97a0:	c3 fc 03 01 	and s6, s3, 255
    97a4:	00 00 00 a0 	load_u8 s0, (s0)
    97a8:	61 20 00 0a 	shr s3, s1, 8
    97ac:	a3 fc 03 01 	and s5, s3, 255
    97b0:	00 04 00 0b 	shl s0, s0, 1
    97b4:	78 fc ff 4f 	movehi s3, 524280
    97b8:	00 80 33 c0 	xor s0, s0, s7
    97bc:	02 00 50 c0 	add_i s0, s2, s0
    97c0:	23 00 03 00 	or s1, s3, 192
    97c4:	00 00 00 a0 	load_u8 s0, (s0)
    97c8:	00 04 00 0b 	shl s0, s0, 1
    97cc:	00 00 33 c0 	xor s0, s0, s6
    97d0:	02 00 50 c0 	add_i s0, s2, s0
    97d4:	00 00 00 a0 	load_u8 s0, (s0)
    97d8:	00 04 00 0b 	shl s0, s0, 1
    97dc:	00 80 32 c0 	xor s0, s0, s5
    97e0:	02 00 50 c0 	add_i s0, s2, s0
    97e4:	00 00 00 a0 	load_u8 s0, (s0)
    97e8:	00 04 00 0b 	shl s0, s0, 1
    97ec:	00 00 32 c0 	xor s0, s0, s4
    97f0:	02 00 50 c0 	add_i s0, s2, s0
    97f4:	43 20 03 00 	or s2, s3, 200
    97f8:	00 00 00 a0 	load_u8 s0, (s0)
    97fc:	01 01 00 88 	store_32 s8, (s1)
    9800:	00 04 00 0b 	shl s0, s0, 1
    9804:	02 01 00 a8 	load_32 s8, (s2)
    9808:	08 05 00 01 	and s8, s8, 1
    980c:	c8 ff ff f3 	bz s8, -8 <send_sd_command+0x84>
    9810:	63 10 03 00 	or s3, s3, 196
    9814:	03 01 00 a8 	load_32 s8, (s3)
    9818:	e1 00 00 88 	store_32 s7, (s1)
    981c:	e2 00 00 a8 	load_32 s7, (s2)
    9820:	e7 04 00 01 	and s7, s7, 1
    9824:	c7 ff ff f3 	bz s7, -8 <send_sd_command+0x9c>
    9828:	e3 00 00 a8 	load_32 s7, (s3)
    982c:	c1 00 00 88 	store_32 s6, (s1)
    9830:	c2 00 00 a8 	load_32 s6, (s2)
    9834:	c6 04 00 01 	and s6, s6, 1
    9838:	c6 ff ff f3 	bz s6, -8 <send_sd_command+0xb0>
    983c:	c3 00 00 a8 	load_32 s6, (s3)
    9840:	a1 00 00 88 	store_32 s5, (s1)
    9844:	a2 00 00 a8 	load_32 s5, (s2)
    9848:	a5 04 00 01 	and s5, s5, 1
    984c:	c5 ff ff f3 	bz s5, -8 <send_sd_command+0xc4>
    9850:	a3 00 00 a8 	load_32 s5, (s3)
    9854:	81 00 00 88 	store_32 s4, (s1)
    9858:	82 00 00 a8 	load_32 s4, (s2)
    985c:	84 04 00 01 	and s4, s4, 1
    9860:	c4 ff ff f3 	bz s4, -8 <send_sd_command+0xd8>
    9864:	00 f8 03 01 	and s0, s0, 254
    9868:	83 00 00 a8 	load_32 s4, (s3)
    986c:	00 04 00 00 	or s0, s0, 1
    9870:	01 00 00 88 	store_32 s0, (s1)
    9874:	02 00 00 a8 	load_32 s0, (s2)
    9878:	00 04 00 01 	and s0, s0, 1
    987c:	c0 ff ff f3 	bz s0, -8 <send_sd_command+0xf4>
    9880:	80 00 00 0f 	move s4, 0
    9884:	03 00 00 a8 	load_32 s0, (s3)
    9888:	a0 fc 03 0f 	move s5, 255
    988c:	a1 00 00 88 	store_32 s5, (s1)
    9890:	02 00 00 a8 	load_32 s0, (s2)
    9894:	00 04 00 01 	and s0, s0, 1
    9898:	c0 ff ff f3 	bz s0, -8 <send_sd_command+0x110>
    989c:	03 00 00 a8 	load_32 s0, (s3)
    98a0:	c0 fc 03 11 	cmpne_i s6, s0, 255
    98a4:	86 00 00 f4 	bnz s6, 16 <send_sd_command+0x134>
    98a8:	c4 90 01 18 	cmplt_u s6, s4, 100
    98ac:	84 04 00 05 	add_i s4, s4, 1
    98b0:	e6 fe ff f5 	bnz s6, -36 <send_sd_command+0x10c>
    98b4:	1f 00 00 f0 	ret

00000000000098b8 read_sdmmc_device:
    98b8:	de 03 fe 05 	add_i sp, sp, -128
    98bc:	1e f3 01 88 	store_32 s24, 124(sp)
    98c0:	fe e3 01 88 	store_32 ra, 120(sp)
    98c4:	00 83 f0 c0 	move s24, s1
    98c8:	20 00 f0 c0 	move s1, s0
    98cc:	00 44 00 0f 	move s0, 17
    98d0:	ac ff ff f9 	call -336 <send_sd_command>
    98d4:	40 00 00 f4 	bnz s0, 8 <read_sdmmc_device+0x24>
    98d8:	07 00 00 f6 	b 28 <read_sdmmc_device+0x3c>
    98dc:	20 00 00 4f 	movehi s1, 0
    98e0:	1e 10 00 88 	store_32 s0, 4(sp)
    98e4:	01 14 08 00 	or s0, s1, 517
    98e8:	1e 00 00 88 	store_32 s0, (sp)
    98ec:	db e3 ff f9 	call -28820 <printf>
    98f0:	15 00 00 f6 	b 84 <read_sdmmc_device+0x8c>
    98f4:	b8 fc ff 4f 	movehi s5, 524280
    98f8:	01 00 00 4f 	movehi s0, 1
    98fc:	60 fc 03 0f 	move s3, 255
    9900:	45 00 03 00 	or s2, s5, 192
    9904:	80 40 1c 00 	or s4, s0, 1808
    9908:	25 20 03 00 	or s1, s5, 200
    990c:	05 10 03 00 	or s0, s5, 196
    9910:	62 00 00 88 	store_32 s3, (s2)
    9914:	a1 00 00 a8 	load_32 s5, (s1)
    9918:	a5 04 00 01 	and s5, s5, 1
    991c:	c5 ff ff f3 	bz s5, -8 <read_sdmmc_device+0x5c>
    9920:	a0 00 00 a8 	load_32 s5, (s0)
    9924:	a5 f8 03 11 	cmpne_i s5, s5, 254
    9928:	45 00 00 f4 	bnz s5, 8 <read_sdmmc_device+0x78>
    992c:	0b 00 00 f6 	b 44 <read_sdmmc_device+0xa0>
    9930:	84 fc ff 05 	add_i s4, s4, -1
    9934:	e4 fe ff f5 	bnz s4, -36 <read_sdmmc_device+0x58>
    9938:	00 00 00 4f 	movehi s0, 0
    993c:	00 20 0f 00 	or s0, s0, 968
    9940:	a4 e4 ff f9 	call -28016 <puts>
    9944:	00 fc ff 0f 	move s0, -1
    9948:	fe e3 01 a8 	load_32 ra, 120(sp)
    994c:	1e f3 01 a8 	load_32 s24, 124(sp)
    9950:	de 03 02 05 	add_i sp, sp, 128
    9954:	1f 00 00 f0 	ret
    9958:	80 00 00 0f 	move s4, 0
    995c:	04 00 00 f6 	b 16 <read_sdmmc_device+0xb4>
    9960:	d8 00 52 c0 	add_i s6, s24, s4
    9964:	84 04 00 05 	add_i s4, s4, 1
    9968:	a6 00 00 82 	store_8 s5, (s6)
    996c:	62 00 00 88 	store_32 s3, (s2)
    9970:	a1 00 00 a8 	load_32 s5, (s1)
    9974:	a5 04 00 01 	and s5, s5, 1
    9978:	c5 ff ff f3 	bz s5, -8 <read_sdmmc_device+0xb8>
    997c:	a0 00 00 a8 	load_32 s5, (s0)
    9980:	c4 00 08 18 	cmplt_u s6, s4, 512
    9984:	e6 fe ff f5 	bnz s6, -36 <read_sdmmc_device+0xa8>
    9988:	62 00 00 88 	store_32 s3, (s2)
    998c:	41 00 00 a8 	load_32 s2, (s1)
    9990:	42 04 00 01 	and s2, s2, 1
    9994:	c2 ff ff f3 	bz s2, -8 <read_sdmmc_device+0xd4>
    9998:	00 00 00 a8 	load_32 s0, (s0)
    999c:	00 00 08 0f 	move s0, 512
    99a0:	fe e3 01 a8 	load_32 ra, 120(sp)
    99a4:	1e f3 01 a8 	load_32 s24, 124(sp)
    99a8:	de 03 02 05 	add_i sp, sp, 128
    99ac:	1f 00 00 f0 	ret

00000000000099b0 write_sdmmc_device:
    99b0:	de 03 fe 05 	add_i sp, sp, -128
    99b4:	1e f3 01 88 	store_32 s24, 124(sp)
    99b8:	fe e3 01 88 	store_32 ra, 120(sp)
    99bc:	00 83 f0 c0 	move s24, s1
    99c0:	20 00 f0 c0 	move s1, s0
    99c4:	00 60 00 0f 	move s0, 24
    99c8:	6e ff ff f9 	call -584 <send_sd_command>
    99cc:	a0 00 00 f2 	bz s0, 20 <write_sdmmc_device+0x30>
    99d0:	20 00 00 4f 	movehi s1, 0
    99d4:	1e 10 00 88 	store_32 s0, 4(sp)
    99d8:	01 f8 0d 00 	or s0, s1, 894
    99dc:	32 00 00 f6 	b 200 <write_sdmmc_device+0xf4>
    99e0:	58 fc ff 4f 	movehi s2, 524280
    99e4:	00 f8 03 0f 	move s0, 254
    99e8:	22 00 03 00 	or s1, s2, 192
    99ec:	01 00 00 88 	store_32 s0, (s1)
    99f0:	02 20 03 00 	or s0, s2, 200
    99f4:	60 00 00 a8 	load_32 s3, (s0)
    99f8:	63 04 00 01 	and s3, s3, 1
    99fc:	c3 ff ff f3 	bz s3, -8 <write_sdmmc_device+0x44>
    9a00:	42 10 03 00 	or s2, s2, 196
    9a04:	62 00 00 a8 	load_32 s3, (s2)
    9a08:	60 00 00 0f 	move s3, 0
    9a0c:	98 80 51 c0 	add_i s4, s24, s3
    9a10:	84 00 00 a0 	load_u8 s4, (s4)
    9a14:	81 00 00 88 	store_32 s4, (s1)
    9a18:	80 00 00 a8 	load_32 s4, (s0)
    9a1c:	84 04 00 01 	and s4, s4, 1
    9a20:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0x68>
    9a24:	63 04 00 05 	add_i s3, s3, 1
    9a28:	a2 00 00 a8 	load_32 s5, (s2)
    9a2c:	83 00 08 18 	cmplt_u s4, s3, 512
    9a30:	e4 fe ff f5 	bnz s4, -36 <write_sdmmc_device+0x5c>
    9a34:	60 fc 03 0f 	move s3, 255
    9a38:	61 00 00 88 	store_32 s3, (s1)
    9a3c:	80 00 00 a8 	load_32 s4, (s0)
    9a40:	84 04 00 01 	and s4, s4, 1
    9a44:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0x8c>
    9a48:	82 00 00 a8 	load_32 s4, (s2)
    9a4c:	61 00 00 88 	store_32 s3, (s1)
    9a50:	80 00 00 a8 	load_32 s4, (s0)
    9a54:	84 04 00 01 	and s4, s4, 1
    9a58:	c4 ff ff f3 	bz s4, -8 <write_sdmmc_device+0xa0>
    9a5c:	82 00 00 a8 	load_32 s4, (s2)
    9a60:	61 00 00 88 	store_32 s3, (s1)
    9a64:	20 00 00 a8 	load_32 s1, (s0)
    9a68:	21 04 00 01 	and s1, s1, 1
    9a6c:	c1 ff ff f3 	bz s1, -8 <write_sdmmc_device+0xb4>
    9a70:	02 00 00 a8 	load_32 s0, (s2)
    9a74:	20 7c 00 01 	and s1, s0, 31
    9a78:	21 14 00 10 	cmpeq_i s1, s1, 5
    9a7c:	41 00 00 f4 	bnz s1, 8 <write_sdmmc_device+0xd4>
    9a80:	06 00 00 f6 	b 24 <write_sdmmc_device+0xe8>
    9a84:	00 00 08 0f 	move s0, 512
    9a88:	fe e3 01 a8 	load_32 ra, 120(sp)
    9a8c:	1e f3 01 a8 	load_32 s24, 124(sp)
    9a90:	de 03 02 05 	add_i sp, sp, 128
    9a94:	1f 00 00 f0 	ret
    9a98:	20 00 00 4f 	movehi s1, 0
    9a9c:	1e 10 00 88 	store_32 s0, 4(sp)
    9aa0:	01 d4 10 00 	or s0, s1, 1077
    9aa4:	1e 00 00 88 	store_32 s0, (sp)
    9aa8:	6c e3 ff f9 	call -29264 <printf>
    9aac:	00 fc ff 0f 	move s0, -1
    9ab0:	fe e3 01 a8 	load_32 ra, 120(sp)
    9ab4:	1e f3 01 a8 	load_32 s24, 124(sp)
    9ab8:	de 03 02 05 	add_i sp, sp, 128
    9abc:	1f 00 00 f0 	ret

0000000000009ac0 __udivdi3:
; {
    9ac0:	de 03 ff 05 	add_i sp, sp, -64
    9ac4:	fe f3 00 88 	store_32 ra, 60(sp)
    9ac8:	80 80 f1 c0 	move s4, s3
    9acc:	a0 00 f1 c0 	move s5, s2
    9ad0:	c0 80 f0 c0 	move s6, s1
    9ad4:	e0 00 f0 c0 	move s7, s0
    9ad8:	1e c1 00 05 	add_i s8, sp, 48
    9adc:	08 11 00 00 	or s8, s8, 4
    9ae0:	28 00 00 88 	store_32 s1, (s8)
    9ae4:	1e c0 00 88 	store_32 s0, 48(sp)
    9ae8:	1e a0 00 05 	add_i s0, sp, 40
    9aec:	00 10 00 00 	or s0, s0, 4
    9af0:	60 00 00 88 	store_32 s3, (s0)
    9af4:	5e a0 00 88 	store_32 s2, 40(sp)
; return __udivmoddi4(a, b, 0);
    9af8:	28 00 00 a8 	load_32 s1, (s8)
    9afc:	5e c0 00 a8 	load_32 s2, 48(sp)
    9b00:	60 00 00 a8 	load_32 s3, (s0)
    9b04:	1e a0 00 a8 	load_32 s0, 40(sp)
    9b08:	1c 01 00 a8 	load_32 s8, (gp)
    9b0c:	20 01 00 0f 	move s9, 0
    9b10:	1e 90 00 88 	store_32 s0, 36(sp)
    9b14:	00 00 f1 c0 	move s0, s2
    9b18:	5e 90 00 a8 	load_32 s2, 36(sp)
    9b1c:	9e 80 00 88 	store_32 s4, 32(sp)
    9b20:	80 80 f4 c0 	move s4, s9
    9b24:	be 70 00 88 	store_32 s5, 28(sp)
    9b28:	de 60 00 88 	store_32 s6, 24(sp)
    9b2c:	fe 50 00 88 	store_32 s7, 20(sp)
    9b30:	08 01 00 fc 	call s8
    9b34:	fe f3 00 a8 	load_32 ra, 60(sp)
    9b38:	de 03 01 05 	add_i sp, sp, 64
    9b3c:	1f 00 00 f0 	ret

0000000000009b40 __udivmoddi4:
; {
    9b40:	de 03 fd 05 	add_i sp, sp, -192
    9b44:	fe f3 02 88 	store_32 ra, 188(sp)
    9b48:	a0 80 f1 c0 	move s5, s3
    9b4c:	c0 00 f1 c0 	move s6, s2
    9b50:	e0 80 f0 c0 	move s7, s1
    9b54:	00 01 f0 c0 	move s8, s0
    9b58:	20 01 f2 c0 	move s9, s4
    9b5c:	5e a1 02 05 	add_i s10, sp, 168
    9b60:	4a 11 00 00 	or s10, s10, 4
    9b64:	2a 00 00 88 	store_32 s1, (s10)
    9b68:	1e a0 02 88 	store_32 s0, 168(sp)
    9b6c:	1e 80 02 05 	add_i s0, sp, 160
    9b70:	00 10 00 00 	or s0, s0, 4
    9b74:	60 00 00 88 	store_32 s3, (s0)
    9b78:	5e 80 02 88 	store_32 s2, 160(sp)
    9b7c:	9e 70 02 88 	store_32 s4, 156(sp)
    9b80:	20 80 00 0f 	move s1, 32
; const unsigned n_uword_bits = sizeof(su_int) * CHAR_BIT;
    9b84:	3e 60 02 88 	store_32 s1, 152(sp)
    9b88:	20 00 01 0f 	move s1, 64
; const unsigned n_udword_bits = sizeof(du_int) * CHAR_BIT;
    9b8c:	3e 50 02 88 	store_32 s1, 148(sp)
; n.all = a;
    9b90:	2a 00 00 a8 	load_32 s1, (s10)
    9b94:	5e a0 02 a8 	load_32 s2, 168(sp)
    9b98:	7e 20 02 05 	add_i s3, sp, 136
    9b9c:	63 10 00 00 	or s3, s3, 4
    9ba0:	23 00 00 88 	store_32 s1, (s3)
    9ba4:	5e 20 02 88 	store_32 s2, 136(sp)
; d.all = b;
    9ba8:	00 00 00 a8 	load_32 s0, (s0)
    9bac:	3e 80 02 a8 	load_32 s1, 160(sp)
    9bb0:	5e 00 02 05 	add_i s2, sp, 128
    9bb4:	42 10 00 00 	or s2, s2, 4
    9bb8:	02 00 00 88 	store_32 s0, (s2)
    9bbc:	3e 00 02 88 	store_32 s1, 128(sp)
; if (n.s.high == 0)
    9bc0:	03 00 00 a8 	load_32 s0, (s3)
    9bc4:	be 70 01 88 	store_32 s5, 92(sp)
    9bc8:	de 60 01 88 	store_32 s6, 88(sp)
    9bcc:	fe 50 01 88 	store_32 s7, 84(sp)
    9bd0:	1e 41 01 88 	store_32 s8, 80(sp)
    9bd4:	3e 31 01 88 	store_32 s9, 76(sp)
    9bd8:	80 05 00 f4 	bnz s0, 176 <__udivmoddi4+0x148>
    9bdc:	01 00 00 f6 	b 4 <__udivmoddi4+0xa0>
    9be0:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
    9be4:	00 10 00 00 	or s0, s0, 4
    9be8:	00 00 00 a8 	load_32 s0, (s0)
    9bec:	00 03 00 f4 	bnz s0, 96 <__udivmoddi4+0x10c>
    9bf0:	01 00 00 f6 	b 4 <__udivmoddi4+0xb4>
; if (rem)
    9bf4:	1e 70 02 a8 	load_32 s0, 156(sp)
    9bf8:	60 01 00 f2 	bz s0, 44 <__udivmoddi4+0xe4>
    9bfc:	01 00 00 f6 	b 4 <__udivmoddi4+0xc0>
; *rem = n.s.low % d.s.low;
    9c00:	1e 20 02 a8 	load_32 s0, 136(sp)
    9c04:	3e 00 02 a8 	load_32 s1, 128(sp)
    9c08:	5c 10 00 a8 	load_32 s2, 4(gp)
    9c0c:	42 00 00 fc 	call s2
    9c10:	3e 70 02 a8 	load_32 s1, 156(sp)
    9c14:	40 00 00 0f 	move s2, 0
    9c18:	41 10 00 88 	store_32 s2, 4(s1)
    9c1c:	01 00 00 88 	store_32 s0, (s1)
    9c20:	01 00 00 f6 	b 4 <__udivmoddi4+0xe4>
; return n.s.low / d.s.low;
    9c24:	1e 20 02 a8 	load_32 s0, 136(sp)
    9c28:	3e 00 02 a8 	load_32 s1, 128(sp)
    9c2c:	5c 20 00 a8 	load_32 s2, 8(gp)
    9c30:	42 00 00 fc 	call s2
    9c34:	3e c0 02 05 	add_i s1, sp, 176
    9c38:	21 10 00 00 	or s1, s1, 4
    9c3c:	40 00 00 0f 	move s2, 0
    9c40:	41 00 00 88 	store_32 s2, (s1)
    9c44:	1e c0 02 88 	store_32 s0, 176(sp)
    9c48:	49 02 00 f6 	b 2340 <__udivmoddi4+0xa2c>
; if (rem)
    9c4c:	1e 70 02 a8 	load_32 s0, 156(sp)
    9c50:	00 01 00 f2 	bz s0, 32 <__udivmoddi4+0x130>
    9c54:	01 00 00 f6 	b 4 <__udivmoddi4+0x118>
; *rem = n.s.low;
    9c58:	1e 20 02 a8 	load_32 s0, 136(sp)
    9c5c:	3e 70 02 a8 	load_32 s1, 156(sp)
    9c60:	40 00 00 0f 	move s2, 0
    9c64:	41 10 00 88 	store_32 s2, 4(s1)
    9c68:	01 00 00 88 	store_32 s0, (s1)
    9c6c:	01 00 00 f6 	b 4 <__udivmoddi4+0x130>
    9c70:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
    9c74:	00 10 00 00 	or s0, s0, 4
    9c78:	20 00 00 0f 	move s1, 0
    9c7c:	20 00 00 88 	store_32 s1, (s0)
    9c80:	3e c0 02 88 	store_32 s1, 176(sp)
    9c84:	3a 02 00 f6 	b 2280 <__udivmoddi4+0xa2c>
; if (d.s.low == 0)
    9c88:	1e 00 02 a8 	load_32 s0, 128(sp)
    9c8c:	00 16 00 f4 	bnz s0, 704 <__udivmoddi4+0x40c>
    9c90:	01 00 00 f6 	b 4 <__udivmoddi4+0x154>
    9c94:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
    9c98:	00 10 00 00 	or s0, s0, 4
    9c9c:	00 00 00 a8 	load_32 s0, (s0)
    9ca0:	80 03 00 f4 	bnz s0, 112 <__udivmoddi4+0x1d0>
    9ca4:	01 00 00 f6 	b 4 <__udivmoddi4+0x168>
; if (rem)
    9ca8:	1e 70 02 a8 	load_32 s0, 156(sp)
    9cac:	a0 01 00 f2 	bz s0, 52 <__udivmoddi4+0x1a0>
    9cb0:	01 00 00 f6 	b 4 <__udivmoddi4+0x174>
    9cb4:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.s.high % d.s.low;
    9cb8:	00 10 00 00 	or s0, s0, 4
    9cbc:	00 00 00 a8 	load_32 s0, (s0)
    9cc0:	3e 00 02 a8 	load_32 s1, 128(sp)
    9cc4:	5c 10 00 a8 	load_32 s2, 4(gp)
    9cc8:	42 00 00 fc 	call s2
    9ccc:	3e 70 02 a8 	load_32 s1, 156(sp)
    9cd0:	40 00 00 0f 	move s2, 0
    9cd4:	41 10 00 88 	store_32 s2, 4(s1)
    9cd8:	01 00 00 88 	store_32 s0, (s1)
    9cdc:	01 00 00 f6 	b 4 <__udivmoddi4+0x1a0>
    9ce0:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high / d.s.low;
    9ce4:	00 10 00 00 	or s0, s0, 4
    9ce8:	00 00 00 a8 	load_32 s0, (s0)
    9cec:	3e 00 02 a8 	load_32 s1, 128(sp)
    9cf0:	5c 20 00 a8 	load_32 s2, 8(gp)
    9cf4:	42 00 00 fc 	call s2
    9cf8:	3e c0 02 05 	add_i s1, sp, 176
    9cfc:	21 10 00 00 	or s1, s1, 4
    9d00:	40 00 00 0f 	move s2, 0
    9d04:	41 00 00 88 	store_32 s2, (s1)
    9d08:	1e c0 02 88 	store_32 s0, 176(sp)
    9d0c:	18 02 00 f6 	b 2144 <__udivmoddi4+0xa2c>
; if (n.s.low == 0)
    9d10:	1e 20 02 a8 	load_32 s0, 136(sp)
    9d14:	c0 04 00 f4 	bnz s0, 152 <__udivmoddi4+0x26c>
    9d18:	01 00 00 f6 	b 4 <__udivmoddi4+0x1dc>
; if (rem)
    9d1c:	1e 70 02 a8 	load_32 s0, 156(sp)
    9d20:	a0 02 00 f2 	bz s0, 84 <__udivmoddi4+0x234>
    9d24:	01 00 00 f6 	b 4 <__udivmoddi4+0x1e8>
    9d28:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high % d.s.high;
    9d2c:	00 10 00 00 	or s0, s0, 4
    9d30:	00 00 00 a8 	load_32 s0, (s0)
    9d34:	3e 00 02 05 	add_i s1, sp, 128
    9d38:	21 10 00 00 	or s1, s1, 4
    9d3c:	21 00 00 a8 	load_32 s1, (s1)
    9d40:	5c 10 00 a8 	load_32 s2, 4(gp)
    9d44:	42 00 00 fc 	call s2
    9d48:	3e c0 01 05 	add_i s1, sp, 112
    9d4c:	21 10 00 00 	or s1, s1, 4
    9d50:	01 00 00 88 	store_32 s0, (s1)
    9d54:	00 00 00 0f 	move s0, 0
; r.s.low = 0;
    9d58:	1e c0 01 88 	store_32 s0, 112(sp)
; *rem = r.all;
    9d5c:	01 00 00 a8 	load_32 s0, (s1)
    9d60:	3e c0 01 a8 	load_32 s1, 112(sp)
    9d64:	5e 70 02 a8 	load_32 s2, 156(sp)
    9d68:	02 10 00 88 	store_32 s0, 4(s2)
    9d6c:	22 00 00 88 	store_32 s1, (s2)
; }
    9d70:	01 00 00 f6 	b 4 <__udivmoddi4+0x234>
    9d74:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high / d.s.high;
    9d78:	00 10 00 00 	or s0, s0, 4
    9d7c:	00 00 00 a8 	load_32 s0, (s0)
    9d80:	3e 00 02 05 	add_i s1, sp, 128
    9d84:	21 10 00 00 	or s1, s1, 4
    9d88:	21 00 00 a8 	load_32 s1, (s1)
    9d8c:	5c 20 00 a8 	load_32 s2, 8(gp)
    9d90:	42 00 00 fc 	call s2
    9d94:	3e c0 02 05 	add_i s1, sp, 176
    9d98:	21 10 00 00 	or s1, s1, 4
    9d9c:	40 00 00 0f 	move s2, 0
    9da0:	41 00 00 88 	store_32 s2, (s1)
    9da4:	1e c0 02 88 	store_32 s0, 176(sp)
    9da8:	f1 01 00 f6 	b 1988 <__udivmoddi4+0xa2c>
    9dac:	1e 00 02 05 	add_i s0, sp, 128
; if ((d.s.high & (d.s.high - 1)) == 0)     /* if d is a power of 2 */
    9db0:	00 10 00 00 	or s0, s0, 4
    9db4:	00 00 00 a8 	load_32 s0, (s0)
    9db8:	20 fc ff 05 	add_i s1, s0, -1
    9dbc:	00 80 10 c0 	and s0, s0, s1
    9dc0:	c0 04 00 f4 	bnz s0, 152 <__udivmoddi4+0x318>
    9dc4:	01 00 00 f6 	b 4 <__udivmoddi4+0x288>
; if (rem)
    9dc8:	1e 70 02 a8 	load_32 s0, 156(sp)
    9dcc:	a0 02 00 f2 	bz s0, 84 <__udivmoddi4+0x2e0>
    9dd0:	01 00 00 f6 	b 4 <__udivmoddi4+0x294>
; r.s.low = n.s.low;
    9dd4:	1e 20 02 a8 	load_32 s0, 136(sp)
    9dd8:	1e c0 01 88 	store_32 s0, 112(sp)
    9ddc:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high & (d.s.high - 1);
    9de0:	00 10 00 00 	or s0, s0, 4
    9de4:	00 00 00 a8 	load_32 s0, (s0)
    9de8:	3e 00 02 05 	add_i s1, sp, 128
    9dec:	21 10 00 00 	or s1, s1, 4
    9df0:	21 00 00 a8 	load_32 s1, (s1)
    9df4:	21 fc ff 05 	add_i s1, s1, -1
    9df8:	00 80 10 c0 	and s0, s0, s1
    9dfc:	3e c0 01 05 	add_i s1, sp, 112
    9e00:	21 10 00 00 	or s1, s1, 4
    9e04:	01 00 00 88 	store_32 s0, (s1)
; *rem = r.all;
    9e08:	01 00 00 a8 	load_32 s0, (s1)
    9e0c:	3e c0 01 a8 	load_32 s1, 112(sp)
    9e10:	5e 70 02 a8 	load_32 s2, 156(sp)
    9e14:	02 10 00 88 	store_32 s0, 4(s2)
    9e18:	22 00 00 88 	store_32 s1, (s2)
; }
    9e1c:	01 00 00 f6 	b 4 <__udivmoddi4+0x2e0>
    9e20:	1e 20 02 05 	add_i s0, sp, 136
; return n.s.high >> __builtin_ctz(d.s.high);
    9e24:	00 10 00 00 	or s0, s0, 4
    9e28:	00 00 00 a8 	load_32 s0, (s0)
    9e2c:	3e 00 02 05 	add_i s1, sp, 128
    9e30:	21 10 00 00 	or s1, s1, 4
    9e34:	21 00 00 a8 	load_32 s1, (s1)
    9e38:	20 80 e0 c0 	ctz s1, s1
    9e3c:	00 80 a0 c0 	shr s0, s0, s1
    9e40:	3e c0 02 05 	add_i s1, sp, 176
    9e44:	21 10 00 00 	or s1, s1, 4
    9e48:	40 00 00 0f 	move s2, 0
    9e4c:	41 00 00 88 	store_32 s2, (s1)
    9e50:	1e c0 02 88 	store_32 s0, 176(sp)
    9e54:	c6 01 00 f6 	b 1816 <__udivmoddi4+0xa2c>
    9e58:	1e 00 02 05 	add_i s0, sp, 128
; sr = __builtin_clz(d.s.high) - __builtin_clz(n.s.high);
    9e5c:	00 10 00 00 	or s0, s0, 4
    9e60:	00 00 00 a8 	load_32 s0, (s0)
    9e64:	00 00 c0 c0 	clz s0, s0
    9e68:	3e 20 02 05 	add_i s1, sp, 136
    9e6c:	21 10 00 00 	or s1, s1, 4
    9e70:	21 00 00 a8 	load_32 s1, (s1)
    9e74:	20 80 c0 c0 	clz s1, s1
    9e78:	00 80 60 c0 	sub_i s0, s0, s1
    9e7c:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr > n_uword_bits - 2)
    9e80:	1e b0 01 a8 	load_32 s0, 108(sp)
    9e84:	00 7c 00 18 	cmplt_u s0, s0, 31
    9e88:	60 02 00 f4 	bnz s0, 76 <__udivmoddi4+0x394>
    9e8c:	01 00 00 f6 	b 4 <__udivmoddi4+0x350>
; if (rem)
    9e90:	1e 70 02 a8 	load_32 s0, 156(sp)
    9e94:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0x37c>
    9e98:	01 00 00 f6 	b 4 <__udivmoddi4+0x35c>
    9e9c:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.all;
    9ea0:	00 10 00 00 	or s0, s0, 4
    9ea4:	00 00 00 a8 	load_32 s0, (s0)
    9ea8:	3e 20 02 a8 	load_32 s1, 136(sp)
    9eac:	5e 70 02 a8 	load_32 s2, 156(sp)
    9eb0:	02 10 00 88 	store_32 s0, 4(s2)
    9eb4:	22 00 00 88 	store_32 s1, (s2)
    9eb8:	01 00 00 f6 	b 4 <__udivmoddi4+0x37c>
    9ebc:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
    9ec0:	00 10 00 00 	or s0, s0, 4
    9ec4:	20 00 00 0f 	move s1, 0
    9ec8:	20 00 00 88 	store_32 s1, (s0)
    9ecc:	3e c0 02 88 	store_32 s1, 176(sp)
    9ed0:	a7 01 00 f6 	b 1692 <__udivmoddi4+0xa2c>
; ++sr;
    9ed4:	1e b0 01 a8 	load_32 s0, 108(sp)
    9ed8:	00 04 00 05 	add_i s0, s0, 1
    9edc:	1e b0 01 88 	store_32 s0, 108(sp)
    9ee0:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
    9ee4:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low << (n_uword_bits - sr);
    9ee8:	1e 20 02 a8 	load_32 s0, 136(sp)
    9eec:	3e b0 01 a8 	load_32 s1, 108(sp)
    9ef0:	40 80 00 0f 	move s2, 32
    9ef4:	22 80 60 c0 	sub_i s1, s2, s1
    9ef8:	00 80 b0 c0 	shl s0, s0, s1
    9efc:	3e e0 01 05 	add_i s1, sp, 120
    9f00:	21 10 00 00 	or s1, s1, 4
    9f04:	01 00 00 88 	store_32 s0, (s1)
    9f08:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
    9f0c:	00 10 00 00 	or s0, s0, 4
    9f10:	20 00 00 a8 	load_32 s1, (s0)
    9f14:	7e b0 01 a8 	load_32 s3, 108(sp)
    9f18:	21 80 a1 c0 	shr s1, s1, s3
    9f1c:	7e c0 01 05 	add_i s3, sp, 112
    9f20:	63 10 00 00 	or s3, s3, 4
    9f24:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
    9f28:	00 00 00 a8 	load_32 s0, (s0)
    9f2c:	3e b0 01 a8 	load_32 s1, 108(sp)
    9f30:	42 80 60 c0 	sub_i s2, s2, s1
    9f34:	00 00 b1 c0 	shl s0, s0, s2
    9f38:	5e 20 02 a8 	load_32 s2, 136(sp)
    9f3c:	22 80 a0 c0 	shr s1, s2, s1
    9f40:	00 80 00 c0 	or s0, s0, s1
    9f44:	1e c0 01 88 	store_32 s0, 112(sp)
; }
    9f48:	e8 00 00 f6 	b 928 <__udivmoddi4+0x7a8>
    9f4c:	1e 00 02 05 	add_i s0, sp, 128
; if (d.s.high == 0)
    9f50:	00 10 00 00 	or s0, s0, 4
    9f54:	00 00 00 a8 	load_32 s0, (s0)
    9f58:	80 12 00 f4 	bnz s0, 592 <__udivmoddi4+0x668>
    9f5c:	01 00 00 f6 	b 4 <__udivmoddi4+0x420>
; if ((d.s.low & (d.s.low - 1)) == 0)     /* if d is a power of 2 */
    9f60:	1e 00 02 a8 	load_32 s0, 128(sp)
    9f64:	20 fc ff 05 	add_i s1, s0, -1
    9f68:	00 80 10 c0 	and s0, s0, s1
    9f6c:	c0 06 00 f4 	bnz s0, 216 <__udivmoddi4+0x504>
    9f70:	01 00 00 f6 	b 4 <__udivmoddi4+0x434>
; if (rem)
    9f74:	1e 70 02 a8 	load_32 s0, 156(sp)
    9f78:	60 01 00 f2 	bz s0, 44 <__udivmoddi4+0x464>
    9f7c:	01 00 00 f6 	b 4 <__udivmoddi4+0x440>
; *rem = n.s.low & (d.s.low - 1);
    9f80:	1e 20 02 a8 	load_32 s0, 136(sp)
    9f84:	3e 00 02 a8 	load_32 s1, 128(sp)
    9f88:	21 fc ff 05 	add_i s1, s1, -1
    9f8c:	00 80 10 c0 	and s0, s0, s1
    9f90:	3e 70 02 a8 	load_32 s1, 156(sp)
    9f94:	40 00 00 0f 	move s2, 0
    9f98:	41 10 00 88 	store_32 s2, 4(s1)
    9f9c:	01 00 00 88 	store_32 s0, (s1)
    9fa0:	01 00 00 f6 	b 4 <__udivmoddi4+0x464>
; if (d.s.low == 1)
    9fa4:	1e 00 02 a8 	load_32 s0, 128(sp)
    9fa8:	00 04 00 11 	cmpne_i s0, s0, 1
    9fac:	60 01 00 f4 	bnz s0, 44 <__udivmoddi4+0x498>
    9fb0:	01 00 00 f6 	b 4 <__udivmoddi4+0x474>
    9fb4:	1e 20 02 05 	add_i s0, sp, 136
; return n.all;
    9fb8:	00 10 00 00 	or s0, s0, 4
    9fbc:	00 00 00 a8 	load_32 s0, (s0)
    9fc0:	3e 20 02 a8 	load_32 s1, 136(sp)
    9fc4:	5e c0 02 05 	add_i s2, sp, 176
    9fc8:	42 10 00 00 	or s2, s2, 4
    9fcc:	02 00 00 88 	store_32 s0, (s2)
    9fd0:	3e c0 02 88 	store_32 s1, 176(sp)
    9fd4:	66 01 00 f6 	b 1432 <__udivmoddi4+0xa2c>
; sr = __builtin_ctz(d.s.low);
    9fd8:	1e 00 02 a8 	load_32 s0, 128(sp)
    9fdc:	00 00 e0 c0 	ctz s0, s0
    9fe0:	1e b0 01 88 	store_32 s0, 108(sp)
    9fe4:	1e 20 02 05 	add_i s0, sp, 136
; q.s.high = n.s.high >> sr;
    9fe8:	00 10 00 00 	or s0, s0, 4
    9fec:	20 00 00 a8 	load_32 s1, (s0)
    9ff0:	5e b0 01 a8 	load_32 s2, 108(sp)
    9ff4:	21 00 a1 c0 	shr s1, s1, s2
    9ff8:	5e e0 01 05 	add_i s2, sp, 120
    9ffc:	42 10 00 00 	or s2, s2, 4
    a000:	22 00 00 88 	store_32 s1, (s2)
; q.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
    a004:	00 00 00 a8 	load_32 s0, (s0)
    a008:	3e b0 01 a8 	load_32 s1, 108(sp)
    a00c:	60 80 00 0f 	move s3, 32
    a010:	63 80 60 c0 	sub_i s3, s3, s1
    a014:	00 80 b1 c0 	shl s0, s0, s3
    a018:	7e 20 02 a8 	load_32 s3, 136(sp)
    a01c:	23 80 a0 c0 	shr s1, s3, s1
    a020:	00 80 00 c0 	or s0, s0, s1
    a024:	1e e0 01 88 	store_32 s0, 120(sp)
; return q.all;
    a028:	02 00 00 a8 	load_32 s0, (s2)
    a02c:	3e e0 01 a8 	load_32 s1, 120(sp)
    a030:	5e c0 02 05 	add_i s2, sp, 176
    a034:	42 10 00 00 	or s2, s2, 4
    a038:	02 00 00 88 	store_32 s0, (s2)
    a03c:	3e c0 02 88 	store_32 s1, 176(sp)
    a040:	4b 01 00 f6 	b 1324 <__udivmoddi4+0xa2c>
; sr = 1 + n_uword_bits + __builtin_clz(d.s.low) - __builtin_clz(n.s.high);
    a044:	1e 00 02 a8 	load_32 s0, 128(sp)
    a048:	00 00 c0 c0 	clz s0, s0
    a04c:	00 84 00 05 	add_i s0, s0, 33
    a050:	3e 20 02 05 	add_i s1, sp, 136
    a054:	21 10 00 00 	or s1, s1, 4
    a058:	21 00 00 a8 	load_32 s1, (s1)
    a05c:	20 80 c0 c0 	clz s1, s1
    a060:	00 80 60 c0 	sub_i s0, s0, s1
    a064:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr == n_uword_bits)
    a068:	1e b0 01 a8 	load_32 s0, 108(sp)
    a06c:	00 80 00 11 	cmpne_i s0, s0, 32
    a070:	00 02 00 f4 	bnz s0, 64 <__udivmoddi4+0x570>
    a074:	01 00 00 f6 	b 4 <__udivmoddi4+0x538>
    a078:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
    a07c:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low;
    a080:	3e 20 02 a8 	load_32 s1, 136(sp)
    a084:	5e e0 01 05 	add_i s2, sp, 120
    a088:	42 10 00 00 	or s2, s2, 4
    a08c:	22 00 00 88 	store_32 s1, (s2)
    a090:	3e c0 01 05 	add_i s1, sp, 112
; r.s.high = 0;
    a094:	21 10 00 00 	or s1, s1, 4
    a098:	01 00 00 88 	store_32 s0, (s1)
    a09c:	1e 20 02 05 	add_i s0, sp, 136
; r.s.low = n.s.high;
    a0a0:	00 10 00 00 	or s0, s0, 4
    a0a4:	00 00 00 a8 	load_32 s0, (s0)
    a0a8:	1e c0 01 88 	store_32 s0, 112(sp)
; }
    a0ac:	3e 00 00 f6 	b 248 <__udivmoddi4+0x664>
; else if (sr < n_uword_bits)  // 2 <= sr <= n_uword_bits - 1
    a0b0:	1e b0 01 a8 	load_32 s0, 108(sp)
    a0b4:	00 7c 00 16 	cmpgt_u s0, s0, 31
    a0b8:	a0 03 00 f4 	bnz s0, 116 <__udivmoddi4+0x5ec>
    a0bc:	01 00 00 f6 	b 4 <__udivmoddi4+0x580>
    a0c0:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
    a0c4:	1e e0 01 88 	store_32 s0, 120(sp)
; q.s.high = n.s.low << (n_uword_bits - sr);
    a0c8:	1e 20 02 a8 	load_32 s0, 136(sp)
    a0cc:	3e b0 01 a8 	load_32 s1, 108(sp)
    a0d0:	40 80 00 0f 	move s2, 32
    a0d4:	22 80 60 c0 	sub_i s1, s2, s1
    a0d8:	00 80 b0 c0 	shl s0, s0, s1
    a0dc:	3e e0 01 05 	add_i s1, sp, 120
    a0e0:	21 10 00 00 	or s1, s1, 4
    a0e4:	01 00 00 88 	store_32 s0, (s1)
    a0e8:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
    a0ec:	00 10 00 00 	or s0, s0, 4
    a0f0:	20 00 00 a8 	load_32 s1, (s0)
    a0f4:	7e b0 01 a8 	load_32 s3, 108(sp)
    a0f8:	21 80 a1 c0 	shr s1, s1, s3
    a0fc:	7e c0 01 05 	add_i s3, sp, 112
    a100:	63 10 00 00 	or s3, s3, 4
    a104:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
    a108:	00 00 00 a8 	load_32 s0, (s0)
    a10c:	3e b0 01 a8 	load_32 s1, 108(sp)
    a110:	42 80 60 c0 	sub_i s2, s2, s1
    a114:	00 00 b1 c0 	shl s0, s0, s2
    a118:	5e 20 02 a8 	load_32 s2, 136(sp)
    a11c:	22 80 a0 c0 	shr s1, s2, s1
    a120:	00 80 00 c0 	or s0, s0, s1
    a124:	1e c0 01 88 	store_32 s0, 112(sp)
; }
    a128:	1e 00 00 f6 	b 120 <__udivmoddi4+0x660>
; q.s.low = n.s.low << (n_udword_bits - sr);
    a12c:	1e 20 02 a8 	load_32 s0, 136(sp)
    a130:	3e b0 01 a8 	load_32 s1, 108(sp)
    a134:	40 00 01 0f 	move s2, 64
    a138:	22 80 60 c0 	sub_i s1, s2, s1
    a13c:	00 80 b0 c0 	shl s0, s0, s1
    a140:	1e e0 01 88 	store_32 s0, 120(sp)
    a144:	1e 20 02 05 	add_i s0, sp, 136
; q.s.high = (n.s.high << (n_udword_bits - sr)) |
    a148:	00 10 00 00 	or s0, s0, 4
    a14c:	20 00 00 a8 	load_32 s1, (s0)
    a150:	7e b0 01 a8 	load_32 s3, 108(sp)
    a154:	42 80 61 c0 	sub_i s2, s2, s3
    a158:	21 00 b1 c0 	shl s1, s1, s2
; (n.s.low >> (sr - n_uword_bits));
    a15c:	5e 20 02 a8 	load_32 s2, 136(sp)
    a160:	63 80 ff 05 	add_i s3, s3, -32
    a164:	42 80 a1 c0 	shr s2, s2, s3
; q.s.high = (n.s.high << (n_udword_bits - sr)) |
    a168:	21 00 01 c0 	or s1, s1, s2
    a16c:	5e e0 01 05 	add_i s2, sp, 120
    a170:	42 10 00 00 	or s2, s2, 4
    a174:	22 00 00 88 	store_32 s1, (s2)
    a178:	3e c0 01 05 	add_i s1, sp, 112
; r.s.high = 0;
    a17c:	21 10 00 00 	or s1, s1, 4
    a180:	40 00 00 0f 	move s2, 0
    a184:	41 00 00 88 	store_32 s2, (s1)
; r.s.low = n.s.high >> (sr - n_uword_bits);
    a188:	00 00 00 a8 	load_32 s0, (s0)
    a18c:	3e b0 01 a8 	load_32 s1, 108(sp)
    a190:	21 80 ff 05 	add_i s1, s1, -32
    a194:	00 80 a0 c0 	shr s0, s0, s1
    a198:	1e c0 01 88 	store_32 s0, 112(sp)
    a19c:	01 00 00 f6 	b 4 <__udivmoddi4+0x660>
    a1a0:	01 00 00 f6 	b 4 <__udivmoddi4+0x664>
; }
    a1a4:	50 00 00 f6 	b 320 <__udivmoddi4+0x7a4>
    a1a8:	1e 00 02 05 	add_i s0, sp, 128
; sr = __builtin_clz(d.s.high) - __builtin_clz(n.s.high);
    a1ac:	00 10 00 00 	or s0, s0, 4
    a1b0:	00 00 00 a8 	load_32 s0, (s0)
    a1b4:	00 00 c0 c0 	clz s0, s0
    a1b8:	3e 20 02 05 	add_i s1, sp, 136
    a1bc:	21 10 00 00 	or s1, s1, 4
    a1c0:	21 00 00 a8 	load_32 s1, (s1)
    a1c4:	20 80 c0 c0 	clz s1, s1
    a1c8:	00 80 60 c0 	sub_i s0, s0, s1
    a1cc:	1e b0 01 88 	store_32 s0, 108(sp)
; if (sr > n_uword_bits - 1)
    a1d0:	1e b0 01 a8 	load_32 s0, 108(sp)
    a1d4:	00 80 00 18 	cmplt_u s0, s0, 32
    a1d8:	60 02 00 f4 	bnz s0, 76 <__udivmoddi4+0x6e4>
    a1dc:	01 00 00 f6 	b 4 <__udivmoddi4+0x6a0>
; if (rem)
    a1e0:	1e 70 02 a8 	load_32 s0, 156(sp)
    a1e4:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0x6cc>
    a1e8:	01 00 00 f6 	b 4 <__udivmoddi4+0x6ac>
    a1ec:	1e 20 02 05 	add_i s0, sp, 136
; *rem = n.all;
    a1f0:	00 10 00 00 	or s0, s0, 4
    a1f4:	00 00 00 a8 	load_32 s0, (s0)
    a1f8:	3e 20 02 a8 	load_32 s1, 136(sp)
    a1fc:	5e 70 02 a8 	load_32 s2, 156(sp)
    a200:	02 10 00 88 	store_32 s0, 4(s2)
    a204:	22 00 00 88 	store_32 s1, (s2)
    a208:	01 00 00 f6 	b 4 <__udivmoddi4+0x6cc>
    a20c:	1e c0 02 05 	add_i s0, sp, 176
; return 0;
    a210:	00 10 00 00 	or s0, s0, 4
    a214:	20 00 00 0f 	move s1, 0
    a218:	20 00 00 88 	store_32 s1, (s0)
    a21c:	3e c0 02 88 	store_32 s1, 176(sp)
    a220:	d3 00 00 f6 	b 844 <__udivmoddi4+0xa2c>
; ++sr;
    a224:	1e b0 01 a8 	load_32 s0, 108(sp)
    a228:	00 04 00 05 	add_i s0, s0, 1
    a22c:	1e b0 01 88 	store_32 s0, 108(sp)
    a230:	00 00 00 0f 	move s0, 0
; q.s.low = 0;
    a234:	1e e0 01 88 	store_32 s0, 120(sp)
; if (sr == n_uword_bits)
    a238:	1e b0 01 a8 	load_32 s0, 108(sp)
    a23c:	00 80 00 11 	cmpne_i s0, s0, 32
    a240:	e0 01 00 f4 	bnz s0, 60 <__udivmoddi4+0x73c>
    a244:	01 00 00 f6 	b 4 <__udivmoddi4+0x708>
; q.s.high = n.s.low;
    a248:	1e 20 02 a8 	load_32 s0, 136(sp)
    a24c:	3e e0 01 05 	add_i s1, sp, 120
    a250:	21 10 00 00 	or s1, s1, 4
    a254:	01 00 00 88 	store_32 s0, (s1)
    a258:	1e c0 01 05 	add_i s0, sp, 112
; r.s.high = 0;
    a25c:	00 10 00 00 	or s0, s0, 4
    a260:	20 00 00 0f 	move s1, 0
    a264:	20 00 00 88 	store_32 s1, (s0)
    a268:	1e 20 02 05 	add_i s0, sp, 136
; r.s.low = n.s.high;
    a26c:	00 10 00 00 	or s0, s0, 4
    a270:	00 00 00 a8 	load_32 s0, (s0)
    a274:	1e c0 01 88 	store_32 s0, 112(sp)
; }
    a278:	1a 00 00 f6 	b 104 <__udivmoddi4+0x7a0>
; q.s.high = n.s.low << (n_uword_bits - sr);
    a27c:	1e 20 02 a8 	load_32 s0, 136(sp)
    a280:	3e b0 01 a8 	load_32 s1, 108(sp)
    a284:	40 80 00 0f 	move s2, 32
    a288:	22 80 60 c0 	sub_i s1, s2, s1
    a28c:	00 80 b0 c0 	shl s0, s0, s1
    a290:	3e e0 01 05 	add_i s1, sp, 120
    a294:	21 10 00 00 	or s1, s1, 4
    a298:	01 00 00 88 	store_32 s0, (s1)
    a29c:	1e 20 02 05 	add_i s0, sp, 136
; r.s.high = n.s.high >> sr;
    a2a0:	00 10 00 00 	or s0, s0, 4
    a2a4:	20 00 00 a8 	load_32 s1, (s0)
    a2a8:	7e b0 01 a8 	load_32 s3, 108(sp)
    a2ac:	21 80 a1 c0 	shr s1, s1, s3
    a2b0:	7e c0 01 05 	add_i s3, sp, 112
    a2b4:	63 10 00 00 	or s3, s3, 4
    a2b8:	23 00 00 88 	store_32 s1, (s3)
; r.s.low = (n.s.high << (n_uword_bits - sr)) | (n.s.low >> sr);
    a2bc:	00 00 00 a8 	load_32 s0, (s0)
    a2c0:	3e b0 01 a8 	load_32 s1, 108(sp)
    a2c4:	42 80 60 c0 	sub_i s2, s2, s1
    a2c8:	00 00 b1 c0 	shl s0, s0, s2
    a2cc:	5e 20 02 a8 	load_32 s2, 136(sp)
    a2d0:	22 80 a0 c0 	shr s1, s2, s1
    a2d4:	00 80 00 c0 	or s0, s0, s1
    a2d8:	1e c0 01 88 	store_32 s0, 112(sp)
    a2dc:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a0>
    a2e0:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a4>
    a2e4:	01 00 00 f6 	b 4 <__udivmoddi4+0x7a8>
    a2e8:	00 00 00 0f 	move s0, 0
; su_int carry = 0;
    a2ec:	1e a0 01 88 	store_32 s0, 104(sp)
; for (; sr > 0; --sr)
    a2f0:	01 00 00 f6 	b 4 <__udivmoddi4+0x7b4>
    a2f4:	1e b0 01 a8 	load_32 s0, 108(sp)
    a2f8:	a0 0f 00 f2 	bz s0, 500 <__udivmoddi4+0x9ac>
    a2fc:	01 00 00 f6 	b 4 <__udivmoddi4+0x7c0>
    a300:	1e c0 01 05 	add_i s0, sp, 112
; r.s.high = (r.s.high << 1) | (r.s.low  >> (n_uword_bits - 1));
    a304:	00 10 00 00 	or s0, s0, 4
    a308:	20 00 00 a8 	load_32 s1, (s0)
    a30c:	21 04 00 0b 	shl s1, s1, 1
    a310:	5e c0 01 a8 	load_32 s2, 112(sp)
    a314:	42 7c 00 0a 	shr s2, s2, 31
    a318:	21 00 01 c0 	or s1, s1, s2
    a31c:	20 00 00 88 	store_32 s1, (s0)
; r.s.low  = (r.s.low  << 1) | (q.s.high >> (n_uword_bits - 1));
    a320:	3e c0 01 a8 	load_32 s1, 112(sp)
    a324:	21 04 00 0b 	shl s1, s1, 1
    a328:	5e e0 01 05 	add_i s2, sp, 120
    a32c:	42 10 00 00 	or s2, s2, 4
    a330:	62 00 00 a8 	load_32 s3, (s2)
    a334:	63 7c 00 0a 	shr s3, s3, 31
    a338:	21 80 01 c0 	or s1, s1, s3
    a33c:	3e c0 01 88 	store_32 s1, 112(sp)
; q.s.high = (q.s.high << 1) | (q.s.low  >> (n_uword_bits - 1));
    a340:	22 00 00 a8 	load_32 s1, (s2)
    a344:	21 04 00 0b 	shl s1, s1, 1
    a348:	7e e0 01 a8 	load_32 s3, 120(sp)
    a34c:	63 7c 00 0a 	shr s3, s3, 31
    a350:	21 80 01 c0 	or s1, s1, s3
    a354:	22 00 00 88 	store_32 s1, (s2)
; q.s.low  = (q.s.low  << 1) | carry;
    a358:	3e e0 01 a8 	load_32 s1, 120(sp)
    a35c:	21 04 00 0b 	shl s1, s1, 1
    a360:	5e a0 01 a8 	load_32 s2, 104(sp)
    a364:	21 00 01 c0 	or s1, s1, s2
    a368:	3e e0 01 88 	store_32 s1, 120(sp)
    a36c:	3e 00 02 05 	add_i s1, sp, 128
; const di_int s = (di_int)(d.all - r.all - 1) >> (n_udword_bits - 1);
    a370:	21 10 00 00 	or s1, s1, 4
    a374:	41 00 00 a8 	load_32 s2, (s1)
    a378:	7e 00 02 a8 	load_32 s3, 128(sp)
    a37c:	80 00 00 a8 	load_32 s4, (s0)
    a380:	be c0 01 a8 	load_32 s5, 112(sp)
    a384:	c3 80 82 c1 	cmplt_u s6, s3, s5
    a388:	e0 00 00 0f 	move s7, 0
    a38c:	00 05 00 0f 	move s8, 1
    a390:	20 01 f4 c0 	move s9, s8
    a394:	1e 20 01 88 	store_32 s0, 72(sp)
    a398:	3e 10 01 88 	store_32 s1, 68(sp)
    a39c:	5e 00 01 88 	store_32 s2, 64(sp)
    a3a0:	7e f0 00 88 	store_32 s3, 60(sp)
    a3a4:	9e e0 00 88 	store_32 s4, 56(sp)
    a3a8:	be d0 00 88 	store_32 s5, 52(sp)
    a3ac:	fe c0 00 88 	store_32 s7, 48(sp)
    a3b0:	1e b1 00 88 	store_32 s8, 44(sp)
    a3b4:	3e a1 00 88 	store_32 s9, 40(sp)
    a3b8:	66 00 00 f4 	bnz s6, 12 <__udivmoddi4+0x884>
    a3bc:	1e c0 00 a8 	load_32 s0, 48(sp)
    a3c0:	1e a0 00 88 	store_32 s0, 40(sp)
    a3c4:	1e a0 00 a8 	load_32 s0, 40(sp)
    a3c8:	3e 00 01 a8 	load_32 s1, 64(sp)
    a3cc:	5e e0 00 a8 	load_32 s2, 56(sp)
    a3d0:	21 00 61 c0 	sub_i s1, s1, s2
    a3d4:	01 00 60 c0 	sub_i s0, s1, s0
    a3d8:	3e f0 00 a8 	load_32 s1, 60(sp)
    a3dc:	5e d0 00 a8 	load_32 s2, 52(sp)
    a3e0:	61 00 61 c0 	sub_i s3, s1, s2
    a3e4:	83 fc ff 05 	add_i s4, s3, -1
    a3e8:	64 80 81 c1 	cmplt_u s3, s4, s3
    a3ec:	be b0 00 a8 	load_32 s5, 44(sp)
    a3f0:	1e 90 00 88 	store_32 s0, 36(sp)
    a3f4:	9e 80 00 88 	store_32 s4, 32(sp)
    a3f8:	be 70 00 88 	store_32 s5, 28(sp)
    a3fc:	63 00 00 f4 	bnz s3, 12 <__udivmoddi4+0x8c8>
    a400:	1e c0 00 a8 	load_32 s0, 48(sp)
    a404:	1e 70 00 88 	store_32 s0, 28(sp)
    a408:	1e 70 00 a8 	load_32 s0, 28(sp)
    a40c:	3e 80 00 a8 	load_32 s1, 32(sp)
    a410:	41 fc ff 11 	cmpne_i s2, s1, -1
    a414:	7e b0 00 a8 	load_32 s3, 44(sp)
    a418:	1e 60 00 88 	store_32 s0, 24(sp)
    a41c:	7e 50 00 88 	store_32 s3, 20(sp)
    a420:	62 00 00 f4 	bnz s2, 12 <__udivmoddi4+0x8ec>
    a424:	1e 60 00 a8 	load_32 s0, 24(sp)
    a428:	1e 50 00 88 	store_32 s0, 20(sp)
    a42c:	1e 50 00 a8 	load_32 s0, 20(sp)
    a430:	3e 90 00 a8 	load_32 s1, 36(sp)
    a434:	01 00 50 c0 	add_i s0, s1, s0
    a438:	00 fc ff 05 	add_i s0, s0, -1
    a43c:	00 7c 00 09 	ashr s0, s0, 31
    a440:	3e 80 01 05 	add_i s1, sp, 96
    a444:	21 10 00 00 	or s1, s1, 4
    a448:	01 00 00 88 	store_32 s0, (s1)
    a44c:	1e 80 01 88 	store_32 s0, 96(sp)
; carry = s & 1;
    a450:	1e 80 01 a8 	load_32 s0, 96(sp)
    a454:	00 04 00 01 	and s0, s0, 1
    a458:	1e a0 01 88 	store_32 s0, 104(sp)
; r.all -= d.all & s;
    a45c:	1e 10 01 a8 	load_32 s0, 68(sp)
    a460:	40 00 00 a8 	load_32 s2, (s0)
    a464:	7e 00 02 a8 	load_32 s3, 128(sp)
    a468:	21 00 00 a8 	load_32 s1, (s1)
    a46c:	9e 80 01 a8 	load_32 s4, 96(sp)
    a470:	22 80 10 c0 	and s1, s2, s1
    a474:	43 00 12 c0 	and s2, s3, s4
    a478:	7e 20 01 a8 	load_32 s3, 72(sp)
    a47c:	83 00 00 a8 	load_32 s4, (s3)
    a480:	be c0 01 a8 	load_32 s5, 112(sp)
    a484:	c5 00 81 c1 	cmplt_u s6, s5, s2
    a488:	fe b0 00 a8 	load_32 s7, 44(sp)
    a48c:	3e 40 00 88 	store_32 s1, 16(sp)
    a490:	5e 30 00 88 	store_32 s2, 12(sp)
    a494:	9e 20 00 88 	store_32 s4, 8(sp)
    a498:	be 10 00 88 	store_32 s5, 4(sp)
    a49c:	fe 00 00 88 	store_32 s7, (sp)
    a4a0:	66 00 00 f4 	bnz s6, 12 <__udivmoddi4+0x96c>
    a4a4:	1e c0 00 a8 	load_32 s0, 48(sp)
    a4a8:	1e 00 00 88 	store_32 s0, (sp)
    a4ac:	1e 00 00 a8 	load_32 s0, (sp)
    a4b0:	3e 20 00 a8 	load_32 s1, 8(sp)
    a4b4:	5e 40 00 a8 	load_32 s2, 16(sp)
    a4b8:	21 00 61 c0 	sub_i s1, s1, s2
    a4bc:	01 00 60 c0 	sub_i s0, s1, s0
    a4c0:	3e 10 00 a8 	load_32 s1, 4(sp)
    a4c4:	5e 30 00 a8 	load_32 s2, 12(sp)
    a4c8:	61 00 61 c0 	sub_i s3, s1, s2
    a4cc:	9e 20 01 a8 	load_32 s4, 72(sp)
    a4d0:	04 00 00 88 	store_32 s0, (s4)
    a4d4:	7e c0 01 88 	store_32 s3, 112(sp)
; }
    a4d8:	01 00 00 f6 	b 4 <__udivmoddi4+0x99c>
; for (; sr > 0; --sr)
    a4dc:	1e b0 01 a8 	load_32 s0, 108(sp)
    a4e0:	00 fc ff 05 	add_i s0, s0, -1
    a4e4:	1e b0 01 88 	store_32 s0, 108(sp)
    a4e8:	83 ff ff f7 	b -500 <__udivmoddi4+0x7b4>
    a4ec:	1e e0 01 05 	add_i s0, sp, 120
; q.all = (q.all << 1) | carry;
    a4f0:	00 10 00 00 	or s0, s0, 4
    a4f4:	20 00 00 a8 	load_32 s1, (s0)
    a4f8:	5e e0 01 a8 	load_32 s2, 120(sp)
    a4fc:	62 7c 00 0a 	shr s3, s2, 31
    a500:	21 04 00 0b 	shl s1, s1, 1
    a504:	21 80 01 c0 	or s1, s1, s3
    a508:	42 04 00 0b 	shl s2, s2, 1
    a50c:	7e a0 01 a8 	load_32 s3, 104(sp)
    a510:	42 80 01 c0 	or s2, s2, s3
    a514:	20 00 00 88 	store_32 s1, (s0)
    a518:	5e e0 01 88 	store_32 s2, 120(sp)
; if (rem)
    a51c:	1e 70 02 a8 	load_32 s0, 156(sp)
    a520:	40 01 00 f2 	bz s0, 40 <__udivmoddi4+0xa08>
    a524:	01 00 00 f6 	b 4 <__udivmoddi4+0x9e8>
    a528:	1e c0 01 05 	add_i s0, sp, 112
; *rem = r.all;
    a52c:	00 10 00 00 	or s0, s0, 4
    a530:	00 00 00 a8 	load_32 s0, (s0)
    a534:	3e c0 01 a8 	load_32 s1, 112(sp)
    a538:	5e 70 02 a8 	load_32 s2, 156(sp)
    a53c:	02 10 00 88 	store_32 s0, 4(s2)
    a540:	22 00 00 88 	store_32 s1, (s2)
    a544:	01 00 00 f6 	b 4 <__udivmoddi4+0xa08>
    a548:	1e e0 01 05 	add_i s0, sp, 120
; return q.all;
    a54c:	00 10 00 00 	or s0, s0, 4
    a550:	00 00 00 a8 	load_32 s0, (s0)
    a554:	3e e0 01 a8 	load_32 s1, 120(sp)
    a558:	5e c0 02 05 	add_i s2, sp, 176
    a55c:	42 10 00 00 	or s2, s2, 4
    a560:	02 00 00 88 	store_32 s0, (s2)
    a564:	3e c0 02 88 	store_32 s1, 176(sp)
    a568:	01 00 00 f6 	b 4 <__udivmoddi4+0xa2c>
    a56c:	1e c0 02 05 	add_i s0, sp, 176
; }
    a570:	00 10 00 00 	or s0, s0, 4
    a574:	20 00 00 a8 	load_32 s1, (s0)
    a578:	1e c0 02 a8 	load_32 s0, 176(sp)
    a57c:	fe f3 02 a8 	load_32 ra, 188(sp)
    a580:	de 03 03 05 	add_i sp, sp, 192
    a584:	1f 00 00 f0 	ret

000000000000a588 __umoddi3:
; {
    a588:	de 03 ff 05 	add_i sp, sp, -64
    a58c:	fe f3 00 88 	store_32 ra, 60(sp)
    a590:	80 80 f1 c0 	move s4, s3
    a594:	a0 00 f1 c0 	move s5, s2
    a598:	c0 80 f0 c0 	move s6, s1
    a59c:	e0 00 f0 c0 	move s7, s0
    a5a0:	1e c1 00 05 	add_i s8, sp, 48
    a5a4:	08 11 00 00 	or s8, s8, 4
    a5a8:	28 00 00 88 	store_32 s1, (s8)
    a5ac:	1e c0 00 88 	store_32 s0, 48(sp)
    a5b0:	1e a0 00 05 	add_i s0, sp, 40
    a5b4:	00 10 00 00 	or s0, s0, 4
    a5b8:	60 00 00 88 	store_32 s3, (s0)
    a5bc:	5e a0 00 88 	store_32 s2, 40(sp)
; __udivmoddi4(a, b, &r);
    a5c0:	28 00 00 a8 	load_32 s1, (s8)
    a5c4:	5e c0 00 a8 	load_32 s2, 48(sp)
    a5c8:	60 00 00 a8 	load_32 s3, (s0)
    a5cc:	1e a0 00 a8 	load_32 s0, 40(sp)
    a5d0:	1c 01 00 a8 	load_32 s8, (gp)
    a5d4:	3e 81 00 05 	add_i s9, sp, 32
    a5d8:	1e 70 00 88 	store_32 s0, 28(sp)
    a5dc:	00 00 f1 c0 	move s0, s2
    a5e0:	5e 70 00 a8 	load_32 s2, 28(sp)
    a5e4:	9e 60 00 88 	store_32 s4, 24(sp)
    a5e8:	80 80 f4 c0 	move s4, s9
    a5ec:	be 50 00 88 	store_32 s5, 20(sp)
    a5f0:	de 40 00 88 	store_32 s6, 16(sp)
    a5f4:	fe 30 00 88 	store_32 s7, 12(sp)
    a5f8:	3e 21 00 88 	store_32 s9, 8(sp)
    a5fc:	08 01 00 fc 	call s8
; return r;
    a600:	5e 20 00 a8 	load_32 s2, 8(sp)
    a604:	62 10 00 00 	or s3, s2, 4
    a608:	63 00 00 a8 	load_32 s3, (s3)
    a60c:	9e 80 00 a8 	load_32 s4, 32(sp)
    a610:	1e 10 00 88 	store_32 s0, 4(sp)
    a614:	00 00 f2 c0 	move s0, s4
    a618:	3e 00 00 88 	store_32 s1, (sp)
    a61c:	20 80 f1 c0 	move s1, s3
    a620:	fe f3 00 a8 	load_32 ra, 60(sp)
    a624:	de 03 01 05 	add_i sp, sp, 64
    a628:	1f 00 00 f0 	ret

000000000000a62c __umodsi3:
; {
    a62c:	de 03 ff 05 	add_i sp, sp, -64
    a630:	fe f3 00 88 	store_32 ra, 60(sp)
    a634:	40 80 f0 c0 	move s2, s1
    a638:	60 00 f0 c0 	move s3, s0
    a63c:	1e e0 00 88 	store_32 s0, 56(sp)
    a640:	3e d0 00 88 	store_32 s1, 52(sp)
; return a - __udivsi3(a, b) * b;
    a644:	1e e0 00 a8 	load_32 s0, 56(sp)
    a648:	3e d0 00 a8 	load_32 s1, 52(sp)
    a64c:	9c 20 00 a8 	load_32 s4, 8(gp)
    a650:	1e c0 00 88 	store_32 s0, 48(sp)
    a654:	5e b0 00 88 	store_32 s2, 44(sp)
    a658:	7e a0 00 88 	store_32 s3, 40(sp)
    a65c:	84 00 00 fc 	call s4
    a660:	3e d0 00 a8 	load_32 s1, 52(sp)
    a664:	00 80 70 c0 	mull_i s0, s0, s1
    a668:	3e c0 00 a8 	load_32 s1, 48(sp)
    a66c:	01 00 60 c0 	sub_i s0, s1, s0
    a670:	fe f3 00 a8 	load_32 ra, 60(sp)
    a674:	de 03 01 05 	add_i sp, sp, 64
    a678:	1f 00 00 f0 	ret

000000000000a67c __udivsi3:
; __udivsi3:          move s4, 0              # Quotient
    a67c:	80 00 00 0f 	move s4, 0
; cmplt_u s2, s0, s1      # dividend < divisor
    a680:	40 80 80 c1 	cmplt_u s2, s0, s1
; bnz s2, done            # If yes, result is zero, bail
    a684:	22 02 00 f4 	bnz s2, 68 <done>
; clz s2, s0              # Get dividend leading bits
    a688:	40 00 c0 c0 	clz s2, s0
; clz s3, s1              # Get divisor leading bits
    a68c:	60 80 c0 c0 	clz s3, s1
; sub_i s5, s3, s2        # Number of quotient bits
    a690:	a3 00 61 c0 	sub_i s5, s3, s2
; shl s1, s1, s5          # Shift divisor
    a694:	21 80 b2 c0 	shl s1, s1, s5

000000000000a698 divide_loop:
; divide_loop:        cmpge_u s2, s0, s1      # Is current dividend > divisor
    a698:	40 80 70 c1 	cmpge_u s2, s0, s1
; and s2, s2, 1           # Set only lowest bit
    a69c:	42 04 00 01 	and s2, s2, 1
; or s4, s4, s2           # if true, quotient |= 1
    a6a0:	84 00 01 c0 	or s4, s4, s2
; shl s2, s2, 31          # Turn into 32-bit mask
    a6a4:	42 7c 00 0b 	shl s2, s2, 31
; ashr s2, s2, 31
    a6a8:	42 7c 00 09 	ashr s2, s2, 31
; and s3, s1, s2          # If the value is true, subtract amt = divisor
    a6ac:	61 00 11 c0 	and s3, s1, s2
; sub_i s0, s0, s3        # dividend -= divisor
    a6b0:	00 80 61 c0 	sub_i s0, s0, s3
; bz s5, done             # If no more quotient bits, bail
    a6b4:	a5 00 00 f2 	bz s5, 20 <done>
; sub_i s5, s5, 1         # Subtract 1 from quotient bits
    a6b8:	a5 04 00 06 	sub_i s5, s5, 1
; shr s1, s1, 1           # Shift divisor right
    a6bc:	21 04 00 0a 	shr s1, s1, 1
; shl s4, s4, 1           # Shift quotient left
    a6c0:	84 04 00 0b 	shl s4, s4, 1
; b divide_loop
    a6c4:	f5 ff ff f7 	b -44 <divide_loop>

000000000000a6c8 done:
; done:               move s0, s4             # Move quotient to return value
    a6c8:	00 00 f2 c0 	move s0, s4
; re
    a6cc:	1f 00 00 f0 	ret

000000000000a6d0 _start:
    a6d0:	00 00 00 ac 	getcr s0, 0
    a6d4:	00 38 00 0b 	shl s0, s0, 14
    a6d8:	c0 23 00 4f 	movehi sp, 256
    a6dc:	de 03 60 c0 	sub_i sp, sp, s0
    a6e0:	85 03 00 4f 	movehi gp, 5
    a6e4:	9c 13 40 00 	or gp, gp, 4100
    a6e8:	60 01 00 f4 	bnz s0, 44 <do_main>
    a6ec:	05 03 00 4f 	movehi s24, 5
    a6f0:	18 03 40 00 	or s24, s24, 4096
    a6f4:	25 03 00 4f 	movehi s25, 5
    a6f8:	39 13 40 00 	or s25, s25, 4100

000000000000a6fc init_loop:
    a6fc:	18 80 0c c1 	cmpeq_i s0, s24, s25
    a700:	a0 00 00 f4 	bnz s0, 20 <do_main>
    a704:	18 00 00 a8 	load_32 s0, (s24)
    a708:	18 13 00 05 	add_i s24, s24, 4
    a70c:	00 00 00 fc 	call s0
    a710:	fb ff ff f7 	b -20 <init_loop>

000000000000a714 do_main:
    a714:	00 00 00 0f 	move s0, 0
    a718:	f7 df ff f9 	call -32804 <main>
    a71c:	05 00 00 4f 	movehi s0, 5
    a720:	00 40 1d 00 	or s0, s0, 1872
    a724:	20 00 00 aa 	load_sync s1, (s0)
    a728:	e1 ff ff f5 	bnz s1, -4 <do_main+0x10>
    a72c:	20 04 00 0f 	move s1, 1
    a730:	20 00 00 8a 	store_sync s1, (s0)  
    a734:	81 ff ff f3 	bz s1, -16 <do_main+0x10>
    a738:	33 00 00 f8 	call 204 <call_atexit_functions>
    a73c:	00 10 00 0f 	move s0, 4
    a740:	8c f8 ff f9 	call -7632 <_write_uart>
    a744:	00 fc ff 0f 	move s0, -1
    a748:	14 00 00 8c 	setcr s0, 20
    a74c:	00 00 00 f6 	b 0 <do_main+0x38>

000000000000a750 exit_flag:
    a750:	00 00 00 00 	nop

000000000000a754 _Znwj:
    a754:	de 03 ff 05 	add_i sp, sp, -64
    a758:	fe f3 00 88 	store_32 ra, 60(sp)
    a75c:	35 e2 ff f9 	call -30508 <malloc>
    a760:	fe f3 00 a8 	load_32 ra, 60(sp)
    a764:	de 03 01 05 	add_i sp, sp, 64
    a768:	1f 00 00 f0 	ret

000000000000a76c _ZdlPv:
    a76c:	de 03 ff 05 	add_i sp, sp, -64
    a770:	fe f3 00 88 	store_32 ra, 60(sp)
    a774:	b9 e9 ff f9 	call -22812 <free>
    a778:	fe f3 00 a8 	load_32 ra, 60(sp)
    a77c:	de 03 01 05 	add_i sp, sp, 64
    a780:	1f 00 00 f0 	ret

000000000000a784 _Znaj:
    a784:	de 03 ff 05 	add_i sp, sp, -64
    a788:	fe f3 00 88 	store_32 ra, 60(sp)
    a78c:	29 e2 ff f9 	call -30556 <malloc>
    a790:	fe f3 00 a8 	load_32 ra, 60(sp)
    a794:	de 03 01 05 	add_i sp, sp, 64
    a798:	1f 00 00 f0 	ret

000000000000a79c _ZdaPv:
    a79c:	de 03 ff 05 	add_i sp, sp, -64
    a7a0:	fe f3 00 88 	store_32 ra, 60(sp)
    a7a4:	ad e9 ff f9 	call -22860 <free>
    a7a8:	fe f3 00 a8 	load_32 ra, 60(sp)
    a7ac:	de 03 01 05 	add_i sp, sp, 64
    a7b0:	1f 00 00 f0 	ret

000000000000a7b4 __cxa_atexit:
    a7b4:	de 03 ff 05 	add_i sp, sp, -64
    a7b8:	1e f3 00 88 	store_32 s24, 60(sp)
    a7bc:	3e e3 00 88 	store_32 s25, 56(sp)
    a7c0:	fe d3 00 88 	store_32 ra, 52(sp)
    a7c4:	00 83 f0 c0 	move s24, s1
    a7c8:	20 03 f0 c0 	move s25, s0
    a7cc:	00 30 00 0f 	move s0, 12
    a7d0:	18 e2 ff f9 	call -30624 <malloc>
    a7d4:	26 00 00 4f 	movehi s1, 6
    a7d8:	21 70 15 00 	or s1, s1, 1372
    a7dc:	41 00 00 a8 	load_32 s2, (s1)
    a7e0:	40 00 00 88 	store_32 s2, (s0)
    a7e4:	01 00 00 88 	store_32 s0, (s1)
    a7e8:	20 13 00 88 	store_32 s25, 4(s0)
    a7ec:	00 23 00 88 	store_32 s24, 8(s0)
    a7f0:	fe d3 00 a8 	load_32 ra, 52(sp)
    a7f4:	3e e3 00 a8 	load_32 s25, 56(sp)
    a7f8:	1e f3 00 a8 	load_32 s24, 60(sp)
    a7fc:	de 03 01 05 	add_i sp, sp, 64
    a800:	1f 00 00 f0 	ret

000000000000a804 call_atexit_functions:
    a804:	de 03 ff 05 	add_i sp, sp, -64
    a808:	1e f3 00 88 	store_32 s24, 60(sp)
    a80c:	fe e3 00 88 	store_32 ra, 56(sp)
    a810:	06 00 00 4f 	movehi s0, 6
    a814:	00 70 15 00 	or s0, s0, 1372
    a818:	00 03 00 a8 	load_32 s24, (s0)
    a81c:	f8 00 00 f2 	bz s24, 28 <call_atexit_functions+0x34>
    a820:	38 10 00 a8 	load_32 s1, 4(s24)
    a824:	18 20 00 a8 	load_32 s0, 8(s24)
    a828:	21 00 00 fc 	call s1
    a82c:	18 03 00 a8 	load_32 s24, (s24)
    a830:	58 00 00 f2 	bz s24, 8 <call_atexit_functions+0x34>
    a834:	fb ff ff f7 	b -20 <call_atexit_functions+0x1c>
    a838:	fe e3 00 a8 	load_32 ra, 56(sp)
    a83c:	1e f3 00 a8 	load_32 s24, 60(sp)
    a840:	de 03 01 05 	add_i sp, sp, 64
    a844:	1f 00 00 f0 	ret

000000000000a848 __cxa_pure_virtual:
    a848:	de 03 ff 05 	add_i sp, sp, -64
    a84c:	fe f3 00 88 	store_32 ra, 60(sp)
    a850:	00 00 00 4f 	movehi s0, 0
    a854:	00 f0 0f 00 	or s0, s0, 1020
    a858:	de e0 ff f9 	call -31880 <puts>
    a85c:	00 00 e0 c3 	break

000000000000a860 _GLOBAL__sub_I_cxx_runtime.cpp:
    a860:	de 03 ff 05 	add_i sp, sp, -64
    a864:	1e f3 00 88 	store_32 s24, 60(sp)
    a868:	3e e3 00 88 	store_32 s25, 56(sp)
    a86c:	5e d3 00 88 	store_32 s26, 52(sp)
    a870:	7e c3 00 88 	store_32 s27, 48(sp)
    a874:	fe b3 00 88 	store_32 ra, 44(sp)
    a878:	00 00 00 4f 	movehi s0, 0
    a87c:	26 00 00 4f 	movehi s1, 6
    a880:	00 33 00 0f 	move s24, 12
    a884:	00 a0 1c 00 	or s0, s0, 1832
    a888:	41 43 15 00 	or s26, s1, 1360
    a88c:	00 20 00 05 	add_i s0, s0, 8
    a890:	1a 00 00 88 	store_32 s0, (s26)
    a894:	00 00 fc c0 	move s0, s24
    a898:	e6 e1 ff f9 	call -30824 <malloc>
    a89c:	26 00 00 4f 	movehi s1, 6
    a8a0:	46 00 00 4f 	movehi s2, 6
    a8a4:	21 70 15 00 	or s1, s1, 1372
    a8a8:	3e a0 00 88 	store_32 s1, 40(sp)
    a8ac:	20 03 f0 c0 	move s25, s0
    a8b0:	05 00 00 4f 	movehi s0, 5
    a8b4:	21 00 00 a8 	load_32 s1, (s1)
    a8b8:	62 53 15 00 	or s27, s2, 1364
    a8bc:	39 00 00 88 	store_32 s1, (s25)
    a8c0:	20 00 00 4f 	movehi s1, 0
    a8c4:	00 70 24 00 	or s0, s0, 2332
    a8c8:	19 10 00 88 	store_32 s0, 4(s25)
    a8cc:	59 23 00 88 	store_32 s26, 8(s25)
    a8d0:	01 90 1d 00 	or s0, s1, 1892
    a8d4:	00 20 00 05 	add_i s0, s0, 8
    a8d8:	1b 00 00 88 	store_32 s0, (s27)
    a8dc:	00 00 fc c0 	move s0, s24
    a8e0:	d4 e1 ff f9 	call -30896 <malloc>
    a8e4:	20 03 00 88 	store_32 s25, (s0)
    a8e8:	25 00 00 4f 	movehi s1, 5
    a8ec:	5e a0 00 a8 	load_32 s2, 40(sp)
    a8f0:	21 80 24 00 	or s1, s1, 2336
    a8f4:	02 00 00 88 	store_32 s0, (s2)
    a8f8:	20 10 00 88 	store_32 s1, 4(s0)
    a8fc:	60 23 00 88 	store_32 s27, 8(s0)
    a900:	fe b3 00 a8 	load_32 ra, 44(sp)
    a904:	7e c3 00 a8 	load_32 s27, 48(sp)
    a908:	5e d3 00 a8 	load_32 s26, 52(sp)
    a90c:	3e e3 00 a8 	load_32 s25, 56(sp)
    a910:	1e f3 00 a8 	load_32 s24, 60(sp)
    a914:	de 03 01 05 	add_i sp, sp, 64
    a918:	1f 00 00 f0 	ret

000000000000a91c _ZN10__cxxabiv117__class_type_infoD2Ev:
    a91c:	1f 00 00 f0 	ret

000000000000a920 _ZN10__cxxabiv120__si_class_type_infoD2Ev:
    a920:	1f 00 00 f0 	ret

000000000000a924 _ZN10__cxxabiv117__class_type_infoD0Ev:
    a924:	de 03 ff 05 	add_i sp, sp, -64
    a928:	fe f3 00 88 	store_32 ra, 60(sp)
    a92c:	4b e9 ff f9 	call -23252 <free>
    a930:	fe f3 00 a8 	load_32 ra, 60(sp)
    a934:	de 03 01 05 	add_i sp, sp, 64
    a938:	1f 00 00 f0 	ret

000000000000a93c _ZN10__cxxabiv120__si_class_type_infoD0Ev:
    a93c:	de 03 ff 05 	add_i sp, sp, -64
    a940:	fe f3 00 88 	store_32 ra, 60(sp)
    a944:	45 e9 ff f9 	call -23276 <free>
    a948:	fe f3 00 a8 	load_32 ra, 60(sp)
    a94c:	de 03 01 05 	add_i sp, sp, 64
    a950:	1f 00 00 f0 	ret
